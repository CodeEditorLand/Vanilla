var F=Object.defineProperty;var U=Object.getOwnPropertyDescriptor;var S=(c,u,e,t)=>{for(var r=t>1?void 0:t?U(u,e):u,i=c.length-1,o;i>=0;i--)(o=c[i])&&(r=(t?o(u,e,r):o(r))||r);return t&&r&&F(u,e,r),r},p=(c,u)=>(e,t)=>u(e,t,c);import"vs/css!./media/editordroptarget";import{DataTransfers as A}from"../../../../../vs/base/browser/dnd.js";import{addDisposableListener as E,DragAndDropObserver as K,EventHelper as B,EventType as O,getWindow as R,isAncestor as $}from"../../../../../vs/base/browser/dom.js";import{renderFormattedText as z}from"../../../../../vs/base/browser/formattedTextRenderer.js";import{RunOnceScheduler as j}from"../../../../../vs/base/common/async.js";import{toDisposable as q}from"../../../../../vs/base/common/lifecycle.js";import{isMacintosh as D,isWeb as J}from"../../../../../vs/base/common/platform.js";import{assertAllDefined as Q,assertIsDefined as G}from"../../../../../vs/base/common/types.js";import{DraggedTreeItemsIdentifier as b}from"../../../../../vs/editor/common/services/treeViewsDnd.js";import{ITreeViewsDnDService as Y}from"../../../../../vs/editor/common/services/treeViewsDndService.js";import{localize as Z}from"../../../../../vs/nls.js";import{IConfigurationService as V}from"../../../../../vs/platform/configuration/common/configuration.js";import{CodeDataTransfers as P,containsDragType as X,Extensions as ee,LocalSelectionTransfer as I}from"../../../../../vs/platform/dnd/browser/dnd.js";import{IInstantiationService as L}from"../../../../../vs/platform/instantiation/common/instantiation.js";import{Registry as te}from"../../../../../vs/platform/registry/common/platform.js";import{activeContrastBorder as re}from"../../../../../vs/platform/theme/common/colorRegistry.js";import{IThemeService as H,Themable as W}from"../../../../../vs/platform/theme/common/themeService.js";import{isTemporaryWorkspace as ie,IWorkspaceContextService as oe}from"../../../../../vs/platform/workspace/common/workspace.js";import{DraggedEditorGroupIdentifier as g,DraggedEditorIdentifier as f,extractTreeDropData as se,ResourcesDropHandler as ne}from"../../../../../vs/workbench/browser/dnd.js";import{fillActiveEditorViewState as ae}from"../../../../../vs/workbench/browser/parts/editor/editor.js";import{EditorInputCapabilities as M}from"../../../../../vs/workbench/common/editor.js";import{EDITOR_DRAG_AND_DROP_BACKGROUND as pe,EDITOR_DROP_INTO_PROMPT_BACKGROUND as de,EDITOR_DROP_INTO_PROMPT_BORDER as le,EDITOR_DROP_INTO_PROMPT_FOREGROUND as he}from"../../../../../vs/workbench/common/theme.js";import{GroupDirection as d,IEditorGroupsService as x,MergeGroupMode as ce}from"../../../../../vs/workbench/services/editor/common/editorGroupsService.js";import{IEditorService as ue}from"../../../../../vs/workbench/services/editor/common/editorService.js";function k(c){return c.getValue("editor.dropIntoEditor.enabled")}function N(c){return c.shiftKey}let v=class extends W{constructor(e,t,r,i,o,n,s,h){super(t);this.groupView=e;this.configurationService=r;this.instantiationService=i;this.editorService=o;this.editorGroupService=n;this.treeViewsDragAndDropService=s;this.contextService=h;this.cleanupOverlayScheduler=this._register(new j(()=>this.dispose(),300)),this.enableDropIntoEditor=k(this.configurationService)&&this.isDropIntoActiveEditorEnabled(),this.create()}static OVERLAY_ID="monaco-workbench-editor-drop-overlay";container;overlay;dropIntoPromptElement;currentDropOperation;_disposed;get disposed(){return!!this._disposed}cleanupOverlayScheduler;editorTransfer=I.getInstance();groupTransfer=I.getInstance();treeItemsTransfer=I.getInstance();enableDropIntoEditor;create(){const e=this.getOverlayOffsetHeight(),t=this.container=document.createElement("div");t.id=v.OVERLAY_ID,t.style.top=`${e}px`,this.groupView.element.appendChild(t),this.groupView.element.classList.add("dragged-over"),this._register(q(()=>{t.remove(),this.groupView.element.classList.remove("dragged-over")})),this.overlay=document.createElement("div"),this.overlay.classList.add("editor-group-overlay-indicator"),t.appendChild(this.overlay),this.enableDropIntoEditor&&(this.dropIntoPromptElement=z(Z("dropIntoEditorPrompt","Hold __{0}__ to drop into editor",D?"\u21E7":"Shift"),{}),this.dropIntoPromptElement.classList.add("editor-group-overlay-drop-into-prompt"),this.overlay.appendChild(this.dropIntoPromptElement)),this.registerListeners(t),this.updateStyles()}updateStyles(){const e=G(this.overlay);e.style.backgroundColor=this.getColor(pe)||"";const t=this.getColor(re);if(e.style.outlineColor=t||"",e.style.outlineOffset=t?"-2px":"",e.style.outlineStyle=t?"dashed":"",e.style.outlineWidth=t?"2px":"",this.dropIntoPromptElement){this.dropIntoPromptElement.style.backgroundColor=this.getColor(de)??"",this.dropIntoPromptElement.style.color=this.getColor(he)??"";const r=this.getColor(le);r?(this.dropIntoPromptElement.style.borderWidth="1px",this.dropIntoPromptElement.style.borderStyle="solid",this.dropIntoPromptElement.style.borderColor=r):this.dropIntoPromptElement.style.borderWidth="0"}}registerListeners(e){this._register(new K(e,{onDragOver:t=>{if(this.enableDropIntoEditor&&N(t)){this.dispose();return}const r=this.groupTransfer.hasData(g.prototype),i=this.editorTransfer.hasData(f.prototype);!i&&!r&&t.dataTransfer&&(t.dataTransfer.dropEffect="copy");let o=!0;if(r)o=this.isCopyOperation(t);else if(i){const s=this.editorTransfer.getData(f.prototype);Array.isArray(s)&&s.length>0&&(o=this.isCopyOperation(t,s[0].identifier))}if(!o){const s=this.findSourceGroupView();if(s===this.groupView&&(r||i&&s.count<2)){this.hideOverlay();return}}let n=!!this.editorGroupService.partOptions.splitOnDragAndDrop;this.isToggleSplitOperation(t)&&(n=!n),this.positionOverlay(t.offsetX,t.offsetY,r,n),this.cleanupOverlayScheduler.isScheduled()&&this.cleanupOverlayScheduler.cancel()},onDragLeave:t=>this.dispose(),onDragEnd:t=>this.dispose(),onDrop:t=>{B.stop(t,!0),this.dispose(),this.currentDropOperation&&this.handleDrop(t,this.currentDropOperation.splitDirection)}})),this._register(E(e,O.MOUSE_OVER,()=>{this.cleanupOverlayScheduler.isScheduled()||this.cleanupOverlayScheduler.schedule()}))}isDropIntoActiveEditorEnabled(){return!!this.groupView.activeEditor?.hasCapability(M.CanDropIntoEditor)}findSourceGroupView(){if(this.groupTransfer.hasData(g.prototype)){const e=this.groupTransfer.getData(g.prototype);if(Array.isArray(e)&&e.length>0)return this.editorGroupService.getGroup(e[0].identifier)}else if(this.editorTransfer.hasData(f.prototype)){const e=this.editorTransfer.getData(f.prototype);if(Array.isArray(e)&&e.length>0)return this.editorGroupService.getGroup(e[0].identifier.groupId)}}async handleDrop(e,t){const r=()=>{let i;return typeof t=="number"?i=this.editorGroupService.addGroup(this.groupView,t):i=this.groupView,i};if(this.groupTransfer.hasData(g.prototype)){const i=this.groupTransfer.getData(g.prototype);if(Array.isArray(i)&&i.length>0){const o=this.editorGroupService.getGroup(i[0].identifier);if(o){if(typeof t!="number"&&o===this.groupView)return;let n;if(typeof t=="number")this.isCopyOperation(e)?n=this.editorGroupService.copyGroup(o,this.groupView,t):n=this.editorGroupService.moveGroup(o,this.groupView,t);else{let s;this.isCopyOperation(e)&&(s={mode:ce.COPY_EDITORS}),this.editorGroupService.mergeGroup(o,this.groupView,s)}n&&this.editorGroupService.activateGroup(n)}this.groupTransfer.clearData(g.prototype)}}else if(this.editorTransfer.hasData(f.prototype)){const i=this.editorTransfer.getData(f.prototype);if(Array.isArray(i)&&i.length>0){const o=i,n=i[0].identifier,s=this.editorGroupService.getGroup(n.groupId);if(s){const h=this.isCopyOperation(e,n);let a;if(this.editorGroupService.partOptions.closeEmptyGroups&&s.count===1&&typeof t=="number"&&!h)a=this.editorGroupService.moveGroup(s,this.groupView,t);else{if(a=r(),s===a)return;const m=o.map(y=>({editor:y.identifier.editor,options:ae(s,y.identifier.editor,{pinned:!0,sticky:s.isSticky(y.identifier.editor)})}));h?s.copyEditors(m,a):s.moveEditors(m,a)}a.focus()}this.editorTransfer.clearData(f.prototype)}}else if(this.treeItemsTransfer.hasData(b.prototype)){const i=this.treeItemsTransfer.getData(b.prototype);if(Array.isArray(i)&&i.length>0){const o=[];for(const n of i){const s=await this.treeViewsDragAndDropService.removeDragOperationTransfer(n.identifier);if(s){const h=await se(s);o.push(...h.map(a=>({...a,options:{...a.options,pinned:!0}})))}}o.length&&this.editorService.openEditors(o,r(),{validateTrust:!0})}this.treeItemsTransfer.clearData(b.prototype)}else this.instantiationService.createInstance(ne,{allowWorkspaceOpen:!J||ie(this.contextService.getWorkspace())}).handleDrop(e,R(this.groupView.element),()=>r(),o=>o?.focus())}isCopyOperation(e,t){return t?.editor.hasCapability(M.Singleton)?!1:e.ctrlKey&&!D||e.altKey&&D}isToggleSplitOperation(e){return e.altKey&&!D||e.shiftKey&&D}positionOverlay(e,t,r,i){const o=this.editorGroupService.partOptions.openSideBySideDirection==="right",n=this.groupView.element.clientWidth,s=this.groupView.element.clientHeight-this.getOverlayOffsetHeight();let h,a;i?(r?h=o?.3:.1:h=.1,r?a=o?.1:.3:a=.1):(h=0,a=0);const m=n*h,y=s*a,w=n/3,C=s/3;let l;switch(e>m&&e<n-m&&t>y&&t<s-y?l=void 0:o?e<w?l=d.LEFT:e>w*2?l=d.RIGHT:t<s/2?l=d.UP:l=d.DOWN:t<C?l=d.UP:t>C*2?l=d.DOWN:e<n/2?l=d.LEFT:l=d.RIGHT,l){case d.UP:this.doPositionOverlay({top:"0",left:"0",width:"100%",height:"50%"}),this.toggleDropIntoPrompt(!1);break;case d.DOWN:this.doPositionOverlay({top:"50%",left:"0",width:"100%",height:"50%"}),this.toggleDropIntoPrompt(!1);break;case d.LEFT:this.doPositionOverlay({top:"0",left:"0",width:"50%",height:"100%"}),this.toggleDropIntoPrompt(!1);break;case d.RIGHT:this.doPositionOverlay({top:"0",left:"50%",width:"50%",height:"100%"}),this.toggleDropIntoPrompt(!1);break;default:this.doPositionOverlay({top:"0",left:"0",width:"100%",height:"100%"}),this.toggleDropIntoPrompt(!0)}const _=G(this.overlay);_.style.opacity="1",setTimeout(()=>_.classList.add("overlay-move-transition"),0),this.currentDropOperation={splitDirection:l}}doPositionOverlay(e){const[t,r]=Q(this.container,this.overlay),i=this.getOverlayOffsetHeight();i?t.style.height=`calc(100% - ${i}px)`:t.style.height="100%",r.style.top=e.top,r.style.left=e.left,r.style.width=e.width,r.style.height=e.height}getOverlayOffsetHeight(){return!this.groupView.isEmpty&&this.editorGroupService.partOptions.showTabs==="multiple"?this.groupView.titleHeight.offset:0}hideOverlay(){const e=G(this.overlay);this.doPositionOverlay({top:"0",left:"0",width:"100%",height:"100%"}),e.style.opacity="0",e.classList.remove("overlay-move-transition"),this.currentDropOperation=void 0}toggleDropIntoPrompt(e){this.dropIntoPromptElement&&(this.dropIntoPromptElement.style.opacity=e?"1":"0")}contains(e){return e===this.container||e===this.overlay}dispose(){super.dispose(),this._disposed=!0}};v=S([p(1,H),p(2,V),p(3,L),p(4,ue),p(5,x),p(6,Y),p(7,oe)],v);let T=class extends W{constructor(e,t,r,i,o,n){super(i);this.container=e;this.delegate=t;this.editorGroupService=r;this.configurationService=o;this.instantiationService=n;this.registerListeners()}_overlay;counter=0;editorTransfer=I.getInstance();groupTransfer=I.getInstance();get overlay(){if(this._overlay&&!this._overlay.disposed)return this._overlay}registerListeners(){this._register(E(this.container,O.DRAG_ENTER,e=>this.onDragEnter(e))),this._register(E(this.container,O.DRAG_LEAVE,()=>this.onDragLeave()));for(const e of[this.container,R(this.container)])this._register(E(e,O.DRAG_END,()=>this.onDragEnd()))}onDragEnter(e){if(k(this.configurationService)&&N(e))return;if(this.counter++,!this.editorTransfer.hasData(f.prototype)&&!this.groupTransfer.hasData(g.prototype)&&e.dataTransfer){const r=te.as(ee.DragAndDropContribution).getAll(),i=Array.from(r).map(o=>o.dataFormatKey);if(!X(e,A.FILES,P.FILES,A.RESOURCES,P.EDITORS,...i)){e.dataTransfer.dropEffect="none";return}}this.updateContainer(!0);const t=e.target;if(t&&(this.overlay&&!this.overlay.contains(t)&&this.disposeOverlay(),!this.overlay)){const r=this.findTargetGroupView(t);r&&(this._overlay=this.instantiationService.createInstance(v,r))}}onDragLeave(){this.counter--,this.counter===0&&this.updateContainer(!1)}onDragEnd(){this.counter=0,this.updateContainer(!1),this.disposeOverlay()}findTargetGroupView(e){return this.editorGroupService.groups.find(r=>$(e,r.element)||this.delegate.containsGroup?.(r))}updateContainer(e){this.container.classList.toggle("dragged-over",e)}dispose(){super.dispose(),this.disposeOverlay()}disposeOverlay(){this.overlay&&(this.overlay.dispose(),this._overlay=void 0)}};T=S([p(2,x),p(3,H),p(4,V),p(5,L)],T);export{T as EditorDropTarget};
