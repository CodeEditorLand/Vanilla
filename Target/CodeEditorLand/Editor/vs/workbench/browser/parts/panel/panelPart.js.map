{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/panel/panelPart.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './media/panelpart.css';\nimport { localize } from '../../../../nls.js';\nimport { IAction, Separator, SubmenuAction, toAction } from '../../../../base/common/actions.js';\nimport { ActionsOrientation } from '../../../../base/browser/ui/actionbar/actionbar.js';\nimport { ActivePanelContext, PanelFocusContext } from '../../../common/contextkeys.js';\nimport { IWorkbenchLayoutService, Parts, Position } from '../../../services/layout/browser/layoutService.js';\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { TogglePanelAction } from './panelActions.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { PANEL_BACKGROUND, PANEL_BORDER, PANEL_ACTIVE_TITLE_FOREGROUND, PANEL_INACTIVE_TITLE_FOREGROUND, PANEL_ACTIVE_TITLE_BORDER, PANEL_DRAG_AND_DROP_BORDER } from '../../../common/theme.js';\nimport { contrastBorder, badgeBackground, badgeForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { Dimension } from '../../../../base/browser/dom.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { assertIsDefined } from '../../../../base/common/types.js';\nimport { IExtensionService } from '../../../services/extensions/common/extensions.js';\nimport { IViewDescriptorService } from '../../../common/views.js';\nimport { HoverPosition } from '../../../../base/browser/ui/hover/hoverWidget.js';\nimport { IMenuService, MenuId } from '../../../../platform/actions/common/actions.js';\nimport { AbstractPaneCompositePart, CompositeBarPosition } from '../paneCompositePart.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { createAndFillInContextMenuActions } from '../../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { IPaneCompositeBarOptions } from '../paneCompositeBar.js';\nimport { IHoverService } from '../../../../platform/hover/browser/hover.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\n\nexport class PanelPart extends AbstractPaneCompositePart {\n\n\t//#region IView\n\n\treadonly minimumWidth: number = 300;\n\treadonly maximumWidth: number = Number.POSITIVE_INFINITY;\n\treadonly minimumHeight: number = 77;\n\treadonly maximumHeight: number = Number.POSITIVE_INFINITY;\n\n\tget preferredHeight(): number | undefined {\n\t\t// Don't worry about titlebar or statusbar visibility\n\t\t// The difference is minimal and keeps this function clean\n\t\treturn this.layoutService.mainContainerDimension.height * 0.4;\n\t}\n\n\tget preferredWidth(): number | undefined {\n\t\tconst activeComposite = this.getActivePaneComposite();\n\n\t\tif (!activeComposite) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst width = activeComposite.getOptimalWidth();\n\t\tif (typeof width !== 'number') {\n\t\t\treturn;\n\t\t}\n\n\t\treturn Math.max(width, 300);\n\t}\n\n\t//#endregion\n\n\tstatic readonly activePanelSettingsKey = 'workbench.panelpart.activepanelid';\n\n\tconstructor(\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IWorkbenchLayoutService layoutService: IWorkbenchLayoutService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@ICommandService private commandService: ICommandService,\n\t\t@IMenuService menuService: IMenuService,\n\t\t@IConfigurationService private configurationService: IConfigurationService\n\t) {\n\t\tsuper(\n\t\t\tParts.PANEL_PART,\n\t\t\t{ hasTitle: true },\n\t\t\tPanelPart.activePanelSettingsKey,\n\t\t\tActivePanelContext.bindTo(contextKeyService),\n\t\t\tPanelFocusContext.bindTo(contextKeyService),\n\t\t\t'panel',\n\t\t\t'panel',\n\t\t\tundefined,\n\t\t\tnotificationService,\n\t\t\tstorageService,\n\t\t\tcontextMenuService,\n\t\t\tlayoutService,\n\t\t\tkeybindingService,\n\t\t\thoverService,\n\t\t\tinstantiationService,\n\t\t\tthemeService,\n\t\t\tviewDescriptorService,\n\t\t\tcontextKeyService,\n\t\t\textensionService,\n\t\t\tmenuService,\n\t\t);\n\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('workbench.panel.showLabel')) {\n\t\t\t\tthis.updateCompositeBar(true);\n\t\t\t}\n\t\t}));\n\t}\n\n\toverride updateStyles(): void {\n\t\tsuper.updateStyles();\n\n\t\tconst container = assertIsDefined(this.getContainer());\n\t\tcontainer.style.backgroundColor = this.getColor(PANEL_BACKGROUND) || '';\n\t\tconst borderColor = this.getColor(PANEL_BORDER) || this.getColor(contrastBorder) || '';\n\t\tcontainer.style.borderLeftColor = borderColor;\n\t\tcontainer.style.borderRightColor = borderColor;\n\t\tcontainer.style.borderBottomColor = borderColor;\n\n\t\tconst title = this.getTitleArea();\n\t\tif (title) {\n\t\t\ttitle.style.borderTopColor = this.getColor(PANEL_BORDER) || this.getColor(contrastBorder) || '';\n\t\t}\n\t}\n\n\tprotected getCompositeBarOptions(): IPaneCompositeBarOptions {\n\t\treturn {\n\t\t\tpartContainerClass: 'panel',\n\t\t\tpinnedViewContainersKey: 'workbench.panel.pinnedPanels',\n\t\t\tplaceholderViewContainersKey: 'workbench.panel.placeholderPanels',\n\t\t\tviewContainersWorkspaceStateKey: 'workbench.panel.viewContainersWorkspaceState',\n\t\t\ticon: !this.configurationService.getValue('workbench.panel.showLabel'),\n\t\t\torientation: ActionsOrientation.HORIZONTAL,\n\t\t\trecomputeSizes: true,\n\t\t\tactivityHoverOptions: {\n\t\t\t\tposition: () => this.layoutService.getPanelPosition() === Position.BOTTOM && !this.layoutService.isPanelMaximized() ? HoverPosition.ABOVE : HoverPosition.BELOW,\n\t\t\t},\n\t\t\tfillExtraContextMenuActions: actions => this.fillExtraContextMenuActions(actions),\n\t\t\tcompositeSize: 0,\n\t\t\ticonSize: 16,\n\t\t\toverflowActionSize: 44,\n\t\t\tcolors: theme => ({\n\t\t\t\tactiveBackgroundColor: theme.getColor(PANEL_BACKGROUND), // Background color for overflow action\n\t\t\t\tinactiveBackgroundColor: theme.getColor(PANEL_BACKGROUND), // Background color for overflow action\n\t\t\t\tactiveBorderBottomColor: theme.getColor(PANEL_ACTIVE_TITLE_BORDER),\n\t\t\t\tactiveForegroundColor: theme.getColor(PANEL_ACTIVE_TITLE_FOREGROUND),\n\t\t\t\tinactiveForegroundColor: theme.getColor(PANEL_INACTIVE_TITLE_FOREGROUND),\n\t\t\t\tbadgeBackground: theme.getColor(badgeBackground),\n\t\t\t\tbadgeForeground: theme.getColor(badgeForeground),\n\t\t\t\tdragAndDropBorder: theme.getColor(PANEL_DRAG_AND_DROP_BORDER)\n\t\t\t})\n\t\t};\n\t}\n\n\tprivate fillExtraContextMenuActions(actions: IAction[]): void {\n\t\tconst panelPositionMenu = this.menuService.getMenuActions(MenuId.PanelPositionMenu, this.contextKeyService, { shouldForwardArgs: true });\n\t\tconst panelAlignMenu = this.menuService.getMenuActions(MenuId.PanelAlignmentMenu, this.contextKeyService, { shouldForwardArgs: true });\n\t\tconst positionActions: IAction[] = [];\n\t\tconst alignActions: IAction[] = [];\n\t\tcreateAndFillInContextMenuActions(panelPositionMenu, { primary: [], secondary: positionActions });\n\t\tcreateAndFillInContextMenuActions(panelAlignMenu, { primary: [], secondary: alignActions });\n\n\t\tactions.push(...[\n\t\t\tnew Separator(),\n\t\t\tnew SubmenuAction('workbench.action.panel.position', localize('panel position', \"Panel Position\"), positionActions),\n\t\t\tnew SubmenuAction('workbench.action.panel.align', localize('align panel', \"Align Panel\"), alignActions),\n\t\t\ttoAction({ id: TogglePanelAction.ID, label: localize('hidePanel', \"Hide Panel\"), run: () => this.commandService.executeCommand(TogglePanelAction.ID) })\n\t\t]);\n\t}\n\n\toverride layout(width: number, height: number, top: number, left: number): void {\n\t\tlet dimensions: Dimension;\n\t\tswitch (this.layoutService.getPanelPosition()) {\n\t\t\tcase Position.RIGHT:\n\t\t\t\tdimensions = new Dimension(width - 1, height); // Take into account the 1px border when layouting\n\t\t\t\tbreak;\n\t\t\tcase Position.TOP:\n\t\t\t\tdimensions = new Dimension(width, height - 1); // Take into account the 1px border when layouting\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tdimensions = new Dimension(width, height);\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Layout contents\n\t\tsuper.layout(dimensions.width, dimensions.height, top, left);\n\t}\n\n\tprotected override shouldShowCompositeBar(): boolean {\n\t\treturn true;\n\t}\n\n\tprotected getCompositeBarPosition(): CompositeBarPosition {\n\t\treturn CompositeBarPosition.TITLE;\n\t}\n\n\ttoJSON(): object {\n\t\treturn {\n\t\t\ttype: Parts.PANEL_PART\n\t\t};\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
