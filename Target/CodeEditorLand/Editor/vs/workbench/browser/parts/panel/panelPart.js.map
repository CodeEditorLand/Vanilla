{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/panel/panelPart.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./media/panelpart.css\";\nimport { Dimension } from \"../../../../base/browser/dom.js\";\nimport { ActionsOrientation } from \"../../../../base/browser/ui/actionbar/actionbar.js\";\nimport { HoverPosition } from \"../../../../base/browser/ui/hover/hoverWidget.js\";\nimport {\n\ttype IAction,\n\tSeparator,\n\tSubmenuAction,\n\ttoAction,\n} from \"../../../../base/common/actions.js\";\nimport { assertIsDefined } from \"../../../../base/common/types.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { createAndFillInContextMenuActions } from \"../../../../platform/actions/browser/menuEntryActionViewItem.js\";\nimport {\n\tIMenuService,\n\tMenuId,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { ICommandService } from \"../../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { IContextKeyService } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IContextMenuService } from \"../../../../platform/contextview/browser/contextView.js\";\nimport { IHoverService } from \"../../../../platform/hover/browser/hover.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport { INotificationService } from \"../../../../platform/notification/common/notification.js\";\nimport { IStorageService } from \"../../../../platform/storage/common/storage.js\";\nimport {\n\tbadgeBackground,\n\tbadgeForeground,\n\tcontrastBorder,\n} from \"../../../../platform/theme/common/colorRegistry.js\";\nimport { IThemeService } from \"../../../../platform/theme/common/themeService.js\";\nimport {\n\tActivePanelContext,\n\tPanelFocusContext,\n} from \"../../../common/contextkeys.js\";\nimport {\n\tPANEL_ACTIVE_TITLE_BORDER,\n\tPANEL_ACTIVE_TITLE_FOREGROUND,\n\tPANEL_BACKGROUND,\n\tPANEL_BORDER,\n\tPANEL_DRAG_AND_DROP_BORDER,\n\tPANEL_INACTIVE_TITLE_FOREGROUND,\n} from \"../../../common/theme.js\";\nimport { IViewDescriptorService } from \"../../../common/views.js\";\nimport { IExtensionService } from \"../../../services/extensions/common/extensions.js\";\nimport {\n\tIWorkbenchLayoutService,\n\tParts,\n\tPosition,\n} from \"../../../services/layout/browser/layoutService.js\";\nimport type { IPaneCompositeBarOptions } from \"../paneCompositeBar.js\";\nimport {\n\tAbstractPaneCompositePart,\n\tCompositeBarPosition,\n} from \"../paneCompositePart.js\";\nimport { TogglePanelAction } from \"./panelActions.js\";\n\nexport class PanelPart extends AbstractPaneCompositePart {\n\t//#region IView\n\n\treadonly minimumWidth: number = 300;\n\treadonly maximumWidth: number = Number.POSITIVE_INFINITY;\n\treadonly minimumHeight: number = 77;\n\treadonly maximumHeight: number = Number.POSITIVE_INFINITY;\n\n\tget preferredHeight(): number | undefined {\n\t\t// Don't worry about titlebar or statusbar visibility\n\t\t// The difference is minimal and keeps this function clean\n\t\treturn this.layoutService.mainContainerDimension.height * 0.4;\n\t}\n\n\tget preferredWidth(): number | undefined {\n\t\tconst activeComposite = this.getActivePaneComposite();\n\n\t\tif (!activeComposite) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst width = activeComposite.getOptimalWidth();\n\t\tif (typeof width !== \"number\") {\n\t\t\treturn;\n\t\t}\n\n\t\treturn Math.max(width, 300);\n\t}\n\n\t//#endregion\n\n\tstatic readonly activePanelSettingsKey =\n\t\t\"workbench.panelpart.activepanelid\";\n\n\tconstructor(\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IWorkbenchLayoutService layoutService: IWorkbenchLayoutService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@ICommandService private commandService: ICommandService,\n\t\t@IMenuService menuService: IMenuService,\n\t\t@IConfigurationService private configurationService: IConfigurationService\n\t) {\n\t\tsuper(\n\t\t\tParts.PANEL_PART,\n\t\t\t{ hasTitle: true },\n\t\t\tPanelPart.activePanelSettingsKey,\n\t\t\tActivePanelContext.bindTo(contextKeyService),\n\t\t\tPanelFocusContext.bindTo(contextKeyService),\n\t\t\t'panel',\n\t\t\t'panel',\n\t\t\tundefined,\n\t\t\tnotificationService,\n\t\t\tstorageService,\n\t\t\tcontextMenuService,\n\t\t\tlayoutService,\n\t\t\tkeybindingService,\n\t\t\thoverService,\n\t\t\tinstantiationService,\n\t\t\tthemeService,\n\t\t\tviewDescriptorService,\n\t\t\tcontextKeyService,\n\t\t\textensionService,\n\t\t\tmenuService,\n\t\t);\n\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('workbench.panel.showLabel')) {\n\t\t\t\tthis.updateCompositeBar(true);\n\t\t\t}\n\t\t}));\n\t}\n\n\toverride updateStyles(): void {\n\t\tsuper.updateStyles();\n\n\t\tconst container = assertIsDefined(this.getContainer());\n\t\tcontainer.style.backgroundColor = this.getColor(PANEL_BACKGROUND) || \"\";\n\t\tconst borderColor =\n\t\t\tthis.getColor(PANEL_BORDER) || this.getColor(contrastBorder) || \"\";\n\t\tcontainer.style.borderLeftColor = borderColor;\n\t\tcontainer.style.borderRightColor = borderColor;\n\t\tcontainer.style.borderBottomColor = borderColor;\n\n\t\tconst title = this.getTitleArea();\n\t\tif (title) {\n\t\t\ttitle.style.borderTopColor =\n\t\t\t\tthis.getColor(PANEL_BORDER) ||\n\t\t\t\tthis.getColor(contrastBorder) ||\n\t\t\t\t\"\";\n\t\t}\n\t}\n\n\tprotected getCompositeBarOptions(): IPaneCompositeBarOptions {\n\t\treturn {\n\t\t\tpartContainerClass: \"panel\",\n\t\t\tpinnedViewContainersKey: \"workbench.panel.pinnedPanels\",\n\t\t\tplaceholderViewContainersKey: \"workbench.panel.placeholderPanels\",\n\t\t\tviewContainersWorkspaceStateKey:\n\t\t\t\t\"workbench.panel.viewContainersWorkspaceState\",\n\t\t\ticon: !this.configurationService.getValue(\n\t\t\t\t\"workbench.panel.showLabel\",\n\t\t\t),\n\t\t\torientation: ActionsOrientation.HORIZONTAL,\n\t\t\trecomputeSizes: true,\n\t\t\tactivityHoverOptions: {\n\t\t\t\tposition: () =>\n\t\t\t\t\tthis.layoutService.getPanelPosition() === Position.BOTTOM &&\n\t\t\t\t\t!this.layoutService.isPanelMaximized()\n\t\t\t\t\t\t? HoverPosition.ABOVE\n\t\t\t\t\t\t: HoverPosition.BELOW,\n\t\t\t},\n\t\t\tfillExtraContextMenuActions: (actions) =>\n\t\t\t\tthis.fillExtraContextMenuActions(actions),\n\t\t\tcompositeSize: 0,\n\t\t\ticonSize: 16,\n\t\t\toverflowActionSize: 44,\n\t\t\tcolors: (theme) => ({\n\t\t\t\tactiveBackgroundColor: theme.getColor(PANEL_BACKGROUND), // Background color for overflow action\n\t\t\t\tinactiveBackgroundColor: theme.getColor(PANEL_BACKGROUND), // Background color for overflow action\n\t\t\t\tactiveBorderBottomColor: theme.getColor(\n\t\t\t\t\tPANEL_ACTIVE_TITLE_BORDER,\n\t\t\t\t),\n\t\t\t\tactiveForegroundColor: theme.getColor(\n\t\t\t\t\tPANEL_ACTIVE_TITLE_FOREGROUND,\n\t\t\t\t),\n\t\t\t\tinactiveForegroundColor: theme.getColor(\n\t\t\t\t\tPANEL_INACTIVE_TITLE_FOREGROUND,\n\t\t\t\t),\n\t\t\t\tbadgeBackground: theme.getColor(badgeBackground),\n\t\t\t\tbadgeForeground: theme.getColor(badgeForeground),\n\t\t\t\tdragAndDropBorder: theme.getColor(PANEL_DRAG_AND_DROP_BORDER),\n\t\t\t}),\n\t\t};\n\t}\n\n\tprivate fillExtraContextMenuActions(actions: IAction[]): void {\n\t\tconst panelPositionMenu = this.menuService.getMenuActions(\n\t\t\tMenuId.PanelPositionMenu,\n\t\t\tthis.contextKeyService,\n\t\t\t{ shouldForwardArgs: true },\n\t\t);\n\t\tconst panelAlignMenu = this.menuService.getMenuActions(\n\t\t\tMenuId.PanelAlignmentMenu,\n\t\t\tthis.contextKeyService,\n\t\t\t{ shouldForwardArgs: true },\n\t\t);\n\t\tconst positionActions: IAction[] = [];\n\t\tconst alignActions: IAction[] = [];\n\t\tcreateAndFillInContextMenuActions(panelPositionMenu, {\n\t\t\tprimary: [],\n\t\t\tsecondary: positionActions,\n\t\t});\n\t\tcreateAndFillInContextMenuActions(panelAlignMenu, {\n\t\t\tprimary: [],\n\t\t\tsecondary: alignActions,\n\t\t});\n\n\t\tactions.push(\n\t\t\t...[\n\t\t\t\tnew Separator(),\n\t\t\t\tnew SubmenuAction(\n\t\t\t\t\t\"workbench.action.panel.position\",\n\t\t\t\t\tlocalize(\"panel position\", \"Panel Position\"),\n\t\t\t\t\tpositionActions,\n\t\t\t\t),\n\t\t\t\tnew SubmenuAction(\n\t\t\t\t\t\"workbench.action.panel.align\",\n\t\t\t\t\tlocalize(\"align panel\", \"Align Panel\"),\n\t\t\t\t\talignActions,\n\t\t\t\t),\n\t\t\t\ttoAction({\n\t\t\t\t\tid: TogglePanelAction.ID,\n\t\t\t\t\tlabel: localize(\"hidePanel\", \"Hide Panel\"),\n\t\t\t\t\trun: () =>\n\t\t\t\t\t\tthis.commandService.executeCommand(\n\t\t\t\t\t\t\tTogglePanelAction.ID,\n\t\t\t\t\t\t),\n\t\t\t\t}),\n\t\t\t],\n\t\t);\n\t}\n\n\toverride layout(\n\t\twidth: number,\n\t\theight: number,\n\t\ttop: number,\n\t\tleft: number,\n\t): void {\n\t\tlet dimensions: Dimension;\n\t\tswitch (this.layoutService.getPanelPosition()) {\n\t\t\tcase Position.RIGHT:\n\t\t\t\tdimensions = new Dimension(width - 1, height); // Take into account the 1px border when layouting\n\t\t\t\tbreak;\n\t\t\tcase Position.TOP:\n\t\t\t\tdimensions = new Dimension(width, height - 1); // Take into account the 1px border when layouting\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tdimensions = new Dimension(width, height);\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Layout contents\n\t\tsuper.layout(dimensions.width, dimensions.height, top, left);\n\t}\n\n\tprotected override shouldShowCompositeBar(): boolean {\n\t\treturn true;\n\t}\n\n\tprotected getCompositeBarPosition(): CompositeBarPosition {\n\t\treturn CompositeBarPosition.TITLE;\n\t}\n\n\ttoJSON(): object {\n\t\treturn {\n\t\t\ttype: Parts.PANEL_PART,\n\t\t};\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
