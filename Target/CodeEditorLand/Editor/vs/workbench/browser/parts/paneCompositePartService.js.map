{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/paneCompositePartService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from \"../../../base/common/event.js\";\nimport { Disposable, DisposableStore } from \"../../../base/common/lifecycle.js\";\nimport { assertIsDefined } from \"../../../base/common/types.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../platform/instantiation/common/extensions.js\";\nimport { IInstantiationService } from \"../../../platform/instantiation/common/instantiation.js\";\nimport type { IProgressIndicator } from \"../../../platform/progress/common/progress.js\";\nimport type { IPaneComposite } from \"../../common/panecomposite.js\";\nimport {\n\tViewContainerLocation,\n\tViewContainerLocations,\n} from \"../../common/views.js\";\nimport { IPaneCompositePartService } from \"../../services/panecomposite/browser/panecomposite.js\";\nimport type { PaneCompositeDescriptor } from \"../panecomposite.js\";\nimport { AuxiliaryBarPart } from \"./auxiliarybar/auxiliaryBarPart.js\";\nimport type { IPaneCompositePart } from \"./paneCompositePart.js\";\nimport { PanelPart } from \"./panel/panelPart.js\";\nimport { SidebarPart } from \"./sidebar/sidebarPart.js\";\n\nexport class PaneCompositePartService\n\textends Disposable\n\timplements IPaneCompositePartService\n{\n\tdeclare readonly _serviceBrand: undefined;\n\n\treadonly onDidPaneCompositeOpen: Event<{\n\t\tcomposite: IPaneComposite;\n\t\tviewContainerLocation: ViewContainerLocation;\n\t}>;\n\treadonly onDidPaneCompositeClose: Event<{\n\t\tcomposite: IPaneComposite;\n\t\tviewContainerLocation: ViewContainerLocation;\n\t}>;\n\n\tprivate readonly paneCompositeParts = new Map<\n\t\tViewContainerLocation,\n\t\tIPaneCompositePart\n\t>();\n\n\tconstructor(\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tconst panelPart = instantiationService.createInstance(PanelPart);\n\t\tconst sideBarPart = instantiationService.createInstance(SidebarPart);\n\t\tconst auxiliaryBarPart = instantiationService.createInstance(AuxiliaryBarPart);\n\n\t\tthis.paneCompositeParts.set(ViewContainerLocation.Panel, panelPart);\n\t\tthis.paneCompositeParts.set(ViewContainerLocation.Sidebar, sideBarPart);\n\t\tthis.paneCompositeParts.set(ViewContainerLocation.AuxiliaryBar, auxiliaryBarPart);\n\n\t\tconst eventDisposables = this._register(new DisposableStore());\n\t\tthis.onDidPaneCompositeOpen = Event.any(...ViewContainerLocations.map(loc => Event.map(this.paneCompositeParts.get(loc)!.onDidPaneCompositeOpen, composite => { return { composite, viewContainerLocation: loc }; }, eventDisposables)));\n\t\tthis.onDidPaneCompositeClose = Event.any(...ViewContainerLocations.map(loc => Event.map(this.paneCompositeParts.get(loc)!.onDidPaneCompositeClose, composite => { return { composite, viewContainerLocation: loc }; }, eventDisposables)));\n\t}\n\n\topenPaneComposite(\n\t\tid: string | undefined,\n\t\tviewContainerLocation: ViewContainerLocation,\n\t\tfocus?: boolean,\n\t): Promise<IPaneComposite | undefined> {\n\t\treturn this.getPartByLocation(viewContainerLocation).openPaneComposite(\n\t\t\tid,\n\t\t\tfocus,\n\t\t);\n\t}\n\n\tgetActivePaneComposite(\n\t\tviewContainerLocation: ViewContainerLocation,\n\t): IPaneComposite | undefined {\n\t\treturn this.getPartByLocation(\n\t\t\tviewContainerLocation,\n\t\t).getActivePaneComposite();\n\t}\n\n\tgetPaneComposite(\n\t\tid: string,\n\t\tviewContainerLocation: ViewContainerLocation,\n\t): PaneCompositeDescriptor | undefined {\n\t\treturn this.getPartByLocation(viewContainerLocation).getPaneComposite(\n\t\t\tid,\n\t\t);\n\t}\n\n\tgetPaneComposites(\n\t\tviewContainerLocation: ViewContainerLocation,\n\t): PaneCompositeDescriptor[] {\n\t\treturn this.getPartByLocation(\n\t\t\tviewContainerLocation,\n\t\t).getPaneComposites();\n\t}\n\n\tgetPinnedPaneCompositeIds(\n\t\tviewContainerLocation: ViewContainerLocation,\n\t): string[] {\n\t\treturn this.getPartByLocation(\n\t\t\tviewContainerLocation,\n\t\t).getPinnedPaneCompositeIds();\n\t}\n\n\tgetVisiblePaneCompositeIds(\n\t\tviewContainerLocation: ViewContainerLocation,\n\t): string[] {\n\t\treturn this.getPartByLocation(\n\t\t\tviewContainerLocation,\n\t\t).getVisiblePaneCompositeIds();\n\t}\n\n\tgetProgressIndicator(\n\t\tid: string,\n\t\tviewContainerLocation: ViewContainerLocation,\n\t): IProgressIndicator | undefined {\n\t\treturn this.getPartByLocation(\n\t\t\tviewContainerLocation,\n\t\t).getProgressIndicator(id);\n\t}\n\n\thideActivePaneComposite(\n\t\tviewContainerLocation: ViewContainerLocation,\n\t): void {\n\t\tthis.getPartByLocation(viewContainerLocation).hideActivePaneComposite();\n\t}\n\n\tgetLastActivePaneCompositeId(\n\t\tviewContainerLocation: ViewContainerLocation,\n\t): string {\n\t\treturn this.getPartByLocation(\n\t\t\tviewContainerLocation,\n\t\t).getLastActivePaneCompositeId();\n\t}\n\n\tprivate getPartByLocation(\n\t\tviewContainerLocation: ViewContainerLocation,\n\t): IPaneCompositePart {\n\t\treturn assertIsDefined(\n\t\t\tthis.paneCompositeParts.get(viewContainerLocation),\n\t\t);\n\t}\n}\n\nregisterSingleton(\n\tIPaneCompositePartService,\n\tPaneCompositePartService,\n\tInstantiationType.Delayed,\n);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,aAAa;AACtB,SAAS,YAAY,uBAAuB;AAC5C,SAAS,uBAAuB;AAChC;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,6BAA6B;AAGtC;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,iCAAiC;AAE1C,SAAS,wBAAwB;AAEjC,SAAS,iBAAiB;AAC1B,SAAS,mBAAmB;AAErB,IAAM,2BAAN,cACE,WAET;AAAA,EA7BA,OA6BA;AAAA;AAAA;AAAA,EAGU;AAAA,EAIA;AAAA,EAKQ,qBAAqB,oBAAI,IAGxC;AAAA,EAEF,YACwB,sBACtB;AACD,UAAM;AAEN,UAAM,YAAY,qBAAqB,eAAe,SAAS;AAC/D,UAAM,cAAc,qBAAqB,eAAe,WAAW;AACnE,UAAM,mBAAmB,qBAAqB,eAAe,gBAAgB;AAE7E,SAAK,mBAAmB,IAAI,sBAAsB,OAAO,SAAS;AAClE,SAAK,mBAAmB,IAAI,sBAAsB,SAAS,WAAW;AACtE,SAAK,mBAAmB,IAAI,sBAAsB,cAAc,gBAAgB;AAEhF,UAAM,mBAAmB,KAAK,UAAU,IAAI,gBAAgB,CAAC;AAC7D,SAAK,yBAAyB,MAAM,IAAI,GAAG,uBAAuB,IAAI,SAAO,MAAM,IAAI,KAAK,mBAAmB,IAAI,GAAG,EAAG,wBAAwB,eAAa;AAAE,aAAO,EAAE,WAAW,uBAAuB,IAAI;AAAA,IAAG,GAAG,gBAAgB,CAAC,CAAC;AACvO,SAAK,0BAA0B,MAAM,IAAI,GAAG,uBAAuB,IAAI,SAAO,MAAM,IAAI,KAAK,mBAAmB,IAAI,GAAG,EAAG,yBAAyB,eAAa;AAAE,aAAO,EAAE,WAAW,uBAAuB,IAAI;AAAA,IAAG,GAAG,gBAAgB,CAAC,CAAC;AAAA,EAC1O;AAAA,EAEA,kBACC,IACA,uBACA,OACsC;AACtC,WAAO,KAAK,kBAAkB,qBAAqB,EAAE;AAAA,MACpD;AAAA,MACA;AAAA,IACD;AAAA,EACD;AAAA,EAEA,uBACC,uBAC6B;AAC7B,WAAO,KAAK;AAAA,MACX;AAAA,IACD,EAAE,uBAAuB;AAAA,EAC1B;AAAA,EAEA,iBACC,IACA,uBACsC;AACtC,WAAO,KAAK,kBAAkB,qBAAqB,EAAE;AAAA,MACpD;AAAA,IACD;AAAA,EACD;AAAA,EAEA,kBACC,uBAC4B;AAC5B,WAAO,KAAK;AAAA,MACX;AAAA,IACD,EAAE,kBAAkB;AAAA,EACrB;AAAA,EAEA,0BACC,uBACW;AACX,WAAO,KAAK;AAAA,MACX;AAAA,IACD,EAAE,0BAA0B;AAAA,EAC7B;AAAA,EAEA,2BACC,uBACW;AACX,WAAO,KAAK;AAAA,MACX;AAAA,IACD,EAAE,2BAA2B;AAAA,EAC9B;AAAA,EAEA,qBACC,IACA,uBACiC;AACjC,WAAO,KAAK;AAAA,MACX;AAAA,IACD,EAAE,qBAAqB,EAAE;AAAA,EAC1B;AAAA,EAEA,wBACC,uBACO;AACP,SAAK,kBAAkB,qBAAqB,EAAE,wBAAwB;AAAA,EACvE;AAAA,EAEA,6BACC,uBACS;AACT,WAAO,KAAK;AAAA,MACX;AAAA,IACD,EAAE,6BAA6B;AAAA,EAChC;AAAA,EAEQ,kBACP,uBACqB;AACrB,WAAO;AAAA,MACN,KAAK,mBAAmB,IAAI,qBAAqB;AAAA,IAClD;AAAA,EACD;AACD;AAxHa,2BAAN;AAAA,EAqBJ;AAAA,GArBU;AA0Hb;AAAA,EACC;AAAA,EACA;AAAA,EACA,kBAAkB;AACnB;",
  "names": []
}
