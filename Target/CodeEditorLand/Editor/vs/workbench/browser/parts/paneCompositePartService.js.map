{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/paneCompositePartService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from '../../../base/common/event.js';\nimport { assertIsDefined } from '../../../base/common/types.js';\nimport { InstantiationType, registerSingleton } from '../../../platform/instantiation/common/extensions.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { IProgressIndicator } from '../../../platform/progress/common/progress.js';\nimport { PaneCompositeDescriptor } from '../panecomposite.js';\nimport { AuxiliaryBarPart } from './auxiliarybar/auxiliaryBarPart.js';\nimport { PanelPart } from './panel/panelPart.js';\nimport { SidebarPart } from './sidebar/sidebarPart.js';\nimport { IPaneComposite } from '../../common/panecomposite.js';\nimport { ViewContainerLocation, ViewContainerLocations } from '../../common/views.js';\nimport { IPaneCompositePartService } from '../../services/panecomposite/browser/panecomposite.js';\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { IPaneCompositePart } from './paneCompositePart.js';\n\nexport class PaneCompositePartService extends Disposable implements IPaneCompositePartService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\treadonly onDidPaneCompositeOpen: Event<{ composite: IPaneComposite; viewContainerLocation: ViewContainerLocation }>;\n\treadonly onDidPaneCompositeClose: Event<{ composite: IPaneComposite; viewContainerLocation: ViewContainerLocation }>;\n\n\tprivate readonly paneCompositeParts = new Map<ViewContainerLocation, IPaneCompositePart>();\n\n\tconstructor(\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tconst panelPart = instantiationService.createInstance(PanelPart);\n\t\tconst sideBarPart = instantiationService.createInstance(SidebarPart);\n\t\tconst auxiliaryBarPart = instantiationService.createInstance(AuxiliaryBarPart);\n\n\t\tthis.paneCompositeParts.set(ViewContainerLocation.Panel, panelPart);\n\t\tthis.paneCompositeParts.set(ViewContainerLocation.Sidebar, sideBarPart);\n\t\tthis.paneCompositeParts.set(ViewContainerLocation.AuxiliaryBar, auxiliaryBarPart);\n\n\t\tconst eventDisposables = this._register(new DisposableStore());\n\t\tthis.onDidPaneCompositeOpen = Event.any(...ViewContainerLocations.map(loc => Event.map(this.paneCompositeParts.get(loc)!.onDidPaneCompositeOpen, composite => { return { composite, viewContainerLocation: loc }; }, eventDisposables)));\n\t\tthis.onDidPaneCompositeClose = Event.any(...ViewContainerLocations.map(loc => Event.map(this.paneCompositeParts.get(loc)!.onDidPaneCompositeClose, composite => { return { composite, viewContainerLocation: loc }; }, eventDisposables)));\n\t}\n\n\topenPaneComposite(id: string | undefined, viewContainerLocation: ViewContainerLocation, focus?: boolean): Promise<IPaneComposite | undefined> {\n\t\treturn this.getPartByLocation(viewContainerLocation).openPaneComposite(id, focus);\n\t}\n\n\tgetActivePaneComposite(viewContainerLocation: ViewContainerLocation): IPaneComposite | undefined {\n\t\treturn this.getPartByLocation(viewContainerLocation).getActivePaneComposite();\n\t}\n\n\tgetPaneComposite(id: string, viewContainerLocation: ViewContainerLocation): PaneCompositeDescriptor | undefined {\n\t\treturn this.getPartByLocation(viewContainerLocation).getPaneComposite(id);\n\t}\n\n\tgetPaneComposites(viewContainerLocation: ViewContainerLocation): PaneCompositeDescriptor[] {\n\t\treturn this.getPartByLocation(viewContainerLocation).getPaneComposites();\n\t}\n\n\tgetPinnedPaneCompositeIds(viewContainerLocation: ViewContainerLocation): string[] {\n\t\treturn this.getPartByLocation(viewContainerLocation).getPinnedPaneCompositeIds();\n\t}\n\n\tgetVisiblePaneCompositeIds(viewContainerLocation: ViewContainerLocation): string[] {\n\t\treturn this.getPartByLocation(viewContainerLocation).getVisiblePaneCompositeIds();\n\t}\n\n\tgetProgressIndicator(id: string, viewContainerLocation: ViewContainerLocation): IProgressIndicator | undefined {\n\t\treturn this.getPartByLocation(viewContainerLocation).getProgressIndicator(id);\n\t}\n\n\thideActivePaneComposite(viewContainerLocation: ViewContainerLocation): void {\n\t\tthis.getPartByLocation(viewContainerLocation).hideActivePaneComposite();\n\t}\n\n\tgetLastActivePaneCompositeId(viewContainerLocation: ViewContainerLocation): string {\n\t\treturn this.getPartByLocation(viewContainerLocation).getLastActivePaneCompositeId();\n\t}\n\n\tprivate getPartByLocation(viewContainerLocation: ViewContainerLocation): IPaneCompositePart {\n\t\treturn assertIsDefined(this.paneCompositeParts.get(viewContainerLocation));\n\t}\n\n}\n\nregisterSingleton(IPaneCompositePartService, PaneCompositePartService, InstantiationType.Delayed);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,aAAa;AACtB,SAAS,uBAAuB;AAChC,SAAS,mBAAmB,yBAAyB;AACrD,SAAS,6BAA6B;AACtC,SAAS,0BAA0B;AACnC,SAAS,+BAA+B;AACxC,SAAS,wBAAwB;AACjC,SAAS,iBAAiB;AAC1B,SAAS,mBAAmB;AAC5B,SAAS,sBAAsB;AAC/B,SAAS,uBAAuB,8BAA8B;AAC9D,SAAS,iCAAiC;AAC1C,SAAS,YAAY,uBAAuB;AAC5C,SAAS,0BAA0B;AAE5B,IAAM,2BAAN,cAAuC,WAAgD;AAAA,EApB9F,OAoB8F;AAAA;AAAA;AAAA,EAIpF;AAAA,EACA;AAAA,EAEQ,qBAAqB,oBAAI,IAA+C;AAAA,EAEzF,YACwB,sBACtB;AACD,UAAM;AAEN,UAAM,YAAY,qBAAqB,eAAe,SAAS;AAC/D,UAAM,cAAc,qBAAqB,eAAe,WAAW;AACnE,UAAM,mBAAmB,qBAAqB,eAAe,gBAAgB;AAE7E,SAAK,mBAAmB,IAAI,sBAAsB,OAAO,SAAS;AAClE,SAAK,mBAAmB,IAAI,sBAAsB,SAAS,WAAW;AACtE,SAAK,mBAAmB,IAAI,sBAAsB,cAAc,gBAAgB;AAEhF,UAAM,mBAAmB,KAAK,UAAU,IAAI,gBAAgB,CAAC;AAC7D,SAAK,yBAAyB,MAAM,IAAI,GAAG,uBAAuB,IAAI,SAAO,MAAM,IAAI,KAAK,mBAAmB,IAAI,GAAG,EAAG,wBAAwB,eAAa;AAAE,aAAO,EAAE,WAAW,uBAAuB,IAAI;AAAA,IAAG,GAAG,gBAAgB,CAAC,CAAC;AACvO,SAAK,0BAA0B,MAAM,IAAI,GAAG,uBAAuB,IAAI,SAAO,MAAM,IAAI,KAAK,mBAAmB,IAAI,GAAG,EAAG,yBAAyB,eAAa;AAAE,aAAO,EAAE,WAAW,uBAAuB,IAAI;AAAA,IAAG,GAAG,gBAAgB,CAAC,CAAC;AAAA,EAC1O;AAAA,EAEA,kBAAkB,IAAwB,uBAA8C,OAAsD;AAC7I,WAAO,KAAK,kBAAkB,qBAAqB,EAAE,kBAAkB,IAAI,KAAK;AAAA,EACjF;AAAA,EAEA,uBAAuB,uBAA0E;AAChG,WAAO,KAAK,kBAAkB,qBAAqB,EAAE,uBAAuB;AAAA,EAC7E;AAAA,EAEA,iBAAiB,IAAY,uBAAmF;AAC/G,WAAO,KAAK,kBAAkB,qBAAqB,EAAE,iBAAiB,EAAE;AAAA,EACzE;AAAA,EAEA,kBAAkB,uBAAyE;AAC1F,WAAO,KAAK,kBAAkB,qBAAqB,EAAE,kBAAkB;AAAA,EACxE;AAAA,EAEA,0BAA0B,uBAAwD;AACjF,WAAO,KAAK,kBAAkB,qBAAqB,EAAE,0BAA0B;AAAA,EAChF;AAAA,EAEA,2BAA2B,uBAAwD;AAClF,WAAO,KAAK,kBAAkB,qBAAqB,EAAE,2BAA2B;AAAA,EACjF;AAAA,EAEA,qBAAqB,IAAY,uBAA8E;AAC9G,WAAO,KAAK,kBAAkB,qBAAqB,EAAE,qBAAqB,EAAE;AAAA,EAC7E;AAAA,EAEA,wBAAwB,uBAAoD;AAC3E,SAAK,kBAAkB,qBAAqB,EAAE,wBAAwB;AAAA,EACvE;AAAA,EAEA,6BAA6B,uBAAsD;AAClF,WAAO,KAAK,kBAAkB,qBAAqB,EAAE,6BAA6B;AAAA,EACnF;AAAA,EAEQ,kBAAkB,uBAAkE;AAC3F,WAAO,gBAAgB,KAAK,mBAAmB,IAAI,qBAAqB,CAAC;AAAA,EAC1E;AAED;AAnEa,2BAAN;AAAA,EAUJ;AAAA,GAVU;AAqEb,kBAAkB,2BAA2B,0BAA0B,kBAAkB,OAAO;",
  "names": []
}
