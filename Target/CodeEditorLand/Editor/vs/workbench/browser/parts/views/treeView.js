var Ae=Object.defineProperty;var _e=Object.getOwnPropertyDescriptor;var w=(m,n,e,i)=>{for(var t=i>1?void 0:i?_e(n,e):n,r=m.length-1,s;r>=0;r--)(s=m[r])&&(t=(i?s(n,e,t):s(t))||t);return i&&t&&Ae(n,e,t),t},d=(m,n)=>(e,i)=>n(e,i,m);import{DataTransfers as B}from"../../../../base/browser/dnd.js";import*as f from"../../../../base/browser/dom.js";import{renderMarkdownAsPlaintext as Ee}from"../../../../base/browser/markdownRenderer.js";import{ActionViewItem as Me}from"../../../../base/browser/ui/actionbar/actionViewItems.js";import{ActionBar as Ve}from"../../../../base/browser/ui/actionbar/actionbar.js";import{TreeDragOverBubble as ke}from"../../../../base/browser/ui/tree/tree.js";import{CollapseAllAction as Re}from"../../../../base/browser/ui/tree/treeDefaults.js";import{ActionRunner as Le,Separator as te}from"../../../../base/common/actions.js";import{timeout as Pe}from"../../../../base/common/async.js";import{CancellationToken as ie,CancellationTokenSource as He}from"../../../../base/common/cancellation.js";import{Codicon as re}from"../../../../base/common/codicons.js";import{isCancellationError as Ke}from"../../../../base/common/errors.js";import{Emitter as y,Event as Fe}from"../../../../base/common/event.js";import{createMatches as ne}from"../../../../base/common/filters.js";import{MarkdownString as Ne,isMarkdownString as oe}from"../../../../base/common/htmlContent.js";import{Disposable as $,DisposableStore as se,MutableDisposable as Oe,toDisposable as ze}from"../../../../base/common/lifecycle.js";import{Mimes as W}from"../../../../base/common/mime.js";import{Schemas as ae}from"../../../../base/common/network.js";import{basename as le,dirname as Ue}from"../../../../base/common/resources.js";import{isFalsyOrWhitespace as Be}from"../../../../base/common/strings.js";import{isString as G}from"../../../../base/common/types.js";import{URI as C}from"../../../../base/common/uri.js";import{generateUuid as $e}from"../../../../base/common/uuid.js";import"./media/views.css";import{Button as We}from"../../../../base/browser/ui/button/button.js";import{VSDataTransfer as Ge}from"../../../../base/common/dataTransfer.js";import{parseLinkedText as je}from"../../../../base/common/linkedText.js";import{setTimeout0 as qe}from"../../../../base/common/platform.js";import{ThemeIcon as Je}from"../../../../base/common/themables.js";import{toExternalVSDataTransfer as de}from"../../../../editor/browser/dnd.js";import{MarkdownRenderer as Xe}from"../../../../editor/browser/widget/markdownRenderer/browser/markdownRenderer.js";import{DraggedTreeItemsIdentifier as M}from"../../../../editor/common/services/treeViewsDnd.js";import{ITreeViewsDnDService as Qe}from"../../../../editor/common/services/treeViewsDndService.js";import{localize as D}from"../../../../nls.js";import{createActionViewItem as Ye,createAndFillInContextMenuActions as Ze}from"../../../../platform/actions/browser/menuEntryActionViewItem.js";import{Action2 as ce,IMenuService as et,MenuId as V,MenuRegistry as tt,registerAction2 as he}from"../../../../platform/actions/common/actions.js";import{CommandsRegistry as it,ICommandService as pe}from"../../../../platform/commands/common/commands.js";import{IConfigurationService as k}from"../../../../platform/configuration/common/configuration.js";import{ContextKeyExpr as R,IContextKeyService as L,RawContextKey as P}from"../../../../platform/contextkey/common/contextkey.js";import{IContextMenuService as j}from"../../../../platform/contextview/browser/contextView.js";import{CodeDataTransfers as rt,LocalSelectionTransfer as nt}from"../../../../platform/dnd/browser/dnd.js";import{FileKind as H}from"../../../../platform/files/common/files.js";import{IHoverService as K,WorkbenchHoverDelegate as ot}from"../../../../platform/hover/browser/hover.js";import{IInstantiationService as A}from"../../../../platform/instantiation/common/instantiation.js";import{IKeybindingService as q}from"../../../../platform/keybinding/common/keybinding.js";import{ILabelService as me}from"../../../../platform/label/common/label.js";import{WorkbenchAsyncDataTree as st}from"../../../../platform/list/browser/listService.js";import{ILogService as J}from"../../../../platform/log/common/log.js";import{INotificationService as X}from"../../../../platform/notification/common/notification.js";import{IOpenerService as Q}from"../../../../platform/opener/common/opener.js";import{IProgressService as ue}from"../../../../platform/progress/common/progress.js";import{Registry as at}from"../../../../platform/registry/common/platform.js";import{ITelemetryService as ge}from"../../../../platform/telemetry/common/telemetry.js";import{TelemetryTrustedValue as lt}from"../../../../platform/telemetry/common/telemetryUtils.js";import{defaultButtonStyles as dt}from"../../../../platform/theme/browser/defaultStyles.js";import{ColorScheme as fe}from"../../../../platform/theme/common/theme.js";import{FileThemeIcon as ve,FolderThemeIcon as Y,IThemeService as F}from"../../../../platform/theme/common/themeService.js";import{Extensions as ct,IViewDescriptorService as Z,ResolvableTreeItem as Ie,TreeItemCollapsibleState as S}from"../../../common/views.js";import{IAccessibleViewInformationService as ht}from"../../../services/accessibility/common/accessibleViewInformationService.js";import{IActivityService as ye,NumberBadge as pt}from"../../../services/activity/common/activity.js";import{IExtensionService as mt}from"../../../services/extensions/common/extensions.js";import{fillEditorsDragData as ut}from"../../dnd.js";import{ResourceLabels as gt}from"../../labels.js";import{API_OPEN_DIFF_EDITOR_COMMAND_ID as ft,API_OPEN_EDITOR_COMMAND_ID as vt}from"../editor/editorCommands.js";import{CheckboxStateHandler as It,TreeItemCheckbox as Te}from"./checkbox.js";import{ViewPane as yt,getLocationBasedViewColors as Se}from"./viewPane.js";let N=class extends yt{treeView;_container;_actionRunner;constructor(n,e,i,t,r,s,a,p,c,l,o,h,u){super({...n,titleMenuId:V.ViewTitle,donotForwardArgs:!1},e,i,t,r,s,a,p,c,l,h,u);const{treeView:g}=at.as(ct.ViewsRegistry).getView(n.id);this.treeView=g,this._register(this.treeView.onDidChangeActions(()=>this.updateActions(),this)),this._register(this.treeView.onDidChangeTitle(I=>this.updateTitle(I))),this._register(this.treeView.onDidChangeDescription(I=>this.updateTitleDescription(I))),this._register(ze(()=>{this._container&&this.treeView.container&&this._container===this.treeView.container&&this.treeView.setVisibility(!1)})),this._register(this.onDidChangeBodyVisibility(()=>this.updateTreeVisibility())),this._register(this.treeView.onDidChangeWelcomeState(()=>this._onDidChangeViewWelcomeState.fire())),n.title!==this.treeView.title&&this.updateTitle(this.treeView.title),n.titleDescription!==this.treeView.description&&this.updateTitleDescription(this.treeView.description),this._actionRunner=new De(o,()=>this.treeView.getSelection()),this.updateTreeVisibility()}focus(){super.focus(),this.treeView.focus()}renderBody(n){this._container=n,super.renderBody(n),this.renderTreeView(n)}shouldShowWelcome(){return(this.treeView.dataProvider===void 0||!!this.treeView.dataProvider.isTreeEmpty)&&(this.treeView.message===void 0||this.treeView.message==="")}layoutBody(n,e){super.layoutBody(n,e),this.layoutTreeView(n,e)}getOptimalWidth(){return this.treeView.getOptimalWidth()}renderTreeView(n){this.treeView.show(n)}layoutTreeView(n,e){this.treeView.layout(n,e)}updateTreeVisibility(){this.treeView.setVisibility(this.isBodyVisible())}getActionRunner(){return this._actionRunner}getActionsContext(){return{$treeViewId:this.id,$focusedTreeItem:!0,$selectedTreeItems:!0}}};N=w([d(1,q),d(2,j),d(3,k),d(4,L),d(5,Z),d(6,A),d(7,Q),d(8,F),d(9,ge),d(10,X),d(11,K),d(12,ht)],N);class ee{label={label:"root"};handle="0";parentHandle=void 0;collapsibleState=S.Expanded;children=void 0}function be(m){const n=it.getCommand(m);if(n){const e=tt.getCommand(n.id);return e&&e.precondition}}function Ce(m,n){const e=m.originalId?m.originalId:m.id,i=be(e);return i?n.contextMatchesRules(i):!0}function we(m){return!!m&&typeof m!="string"&&"element"in m&&"disposables"in m}const Tt=D("no-dataprovider","There is no data provider registered that can provide view data."),St=new P("customTreeView",!1);class bt extends st{}let x=class extends ${constructor(e,i,t,r,s,a,p,c,l,o,h,u,g,I,z,v){super();this.id=e;this._title=i;this.themeService=t;this.instantiationService=r;this.commandService=s;this.configurationService=a;this.progressService=p;this.contextMenuService=c;this.keybindingService=l;this.notificationService=o;this.viewDescriptorService=h;this.hoverService=u;this.contextKeyService=g;this.activityService=I;this.logService=z;this.openerService=v;this.root=new ee,this.lastActive=this.root}isVisible=!1;_hasIconForParentNode=!1;_hasIconForLeafNode=!1;collapseAllContextKey;collapseAllContext;collapseAllToggleContextKey;collapseAllToggleContext;refreshContextKey;refreshContext;focused=!1;domNode;treeContainer;_messageValue;_canSelectMany=!1;_manuallyManageCheckboxes=!1;messageElement;tree;treeLabels;treeViewDnd;_container;root;markdownRenderer;elementsToRefresh=[];lastSelection=[];lastActive;_onDidExpandItem=this._register(new y);onDidExpandItem=this._onDidExpandItem.event;_onDidCollapseItem=this._register(new y);onDidCollapseItem=this._onDidCollapseItem.event;_onDidChangeSelectionAndFocus=this._register(new y);onDidChangeSelectionAndFocus=this._onDidChangeSelectionAndFocus.event;_onDidChangeVisibility=this._register(new y);onDidChangeVisibility=this._onDidChangeVisibility.event;_onDidChangeActions=this._register(new y);onDidChangeActions=this._onDidChangeActions.event;_onDidChangeWelcomeState=this._register(new y);onDidChangeWelcomeState=this._onDidChangeWelcomeState.event;_onDidChangeTitle=this._register(new y);onDidChangeTitle=this._onDidChangeTitle.event;_onDidChangeDescription=this._register(new y);onDidChangeDescription=this._onDidChangeDescription.event;_onDidChangeCheckboxState=this._register(new y);onDidChangeCheckboxState=this._onDidChangeCheckboxState.event;_onDidCompleteRefresh=this._register(new y);_isInitialized=!1;initialize(){this._isInitialized||(this._isInitialized=!0,this.contextKeyService.bufferChangeEvents(()=>{this.initializeShowCollapseAllAction(),this.initializeCollapseAllToggle(),this.initializeShowRefreshAction()}),this.treeViewDnd=this.instantiationService.createInstance(E,this.id),this._dragAndDropController&&(this.treeViewDnd.controller=this._dragAndDropController),this._register(this.configurationService.onDidChangeConfiguration(e=>{e.affectsConfiguration("explorer.decorations")&&this.doRefresh([this.root])})),this._register(this.viewDescriptorService.onDidChangeLocation(({views:e,from:i,to:t})=>{e.some(r=>r.id===this.id)&&this.tree?.updateOptions({overrideStyles:Se(this.viewLocation).listOverrideStyles})})),this.registerActions(),this.create())}get viewContainer(){return this.viewDescriptorService.getViewContainerByViewId(this.id)}get viewLocation(){return this.viewDescriptorService.getViewLocationById(this.id)}_dragAndDropController;get dragAndDropController(){return this._dragAndDropController}set dragAndDropController(e){this._dragAndDropController=e,this.treeViewDnd&&(this.treeViewDnd.controller=e)}_dataProvider;get dataProvider(){return this._dataProvider}set dataProvider(e){if(e){this.visible&&this.activate();const i=this;this._dataProvider=new class{_isEmpty=!0;_onDidChangeEmpty=new y;onDidChangeEmpty=this._onDidChangeEmpty.event;get isTreeEmpty(){return this._isEmpty}async getChildren(t){let r;const s=[];if(t&&t.children?r=t.children:(t=t??i.root,t.children=await(t instanceof ee?e.getChildren():e.getChildren(t)),r=t.children??[],r.forEach(a=>{a.parent=t,!i.manuallyManageCheckboxes&&t?.checkbox?.isChecked===!0&&a.checkbox?.isChecked===!1&&(a.checkbox.isChecked=!0,s.push(a))})),t instanceof ee){const a=this._isEmpty;this._isEmpty=r.length===0,a!==this._isEmpty&&this._onDidChangeEmpty.fire()}return s.length>0&&i._onDidChangeCheckboxState.fire(s),r}},this._dataProvider.onDidChangeEmpty&&this._register(this._dataProvider.onDidChangeEmpty(()=>{this.updateCollapseAllToggle(),this._onDidChangeWelcomeState.fire()})),this.updateMessage(),this.refresh()}else this._dataProvider=void 0,this.treeDisposables.clear(),this.activated=!1,this.updateMessage();this._onDidChangeWelcomeState.fire()}_message;get message(){return this._message}set message(e){this._message=e,this.updateMessage(),this._onDidChangeWelcomeState.fire()}get title(){return this._title}set title(e){this._title=e,this._onDidChangeTitle.fire(this._title)}_description;get description(){return this._description}set description(e){this._description=e,this._onDidChangeDescription.fire(this._description)}_badge;_activity=this._register(new Oe);get badge(){return this._badge}set badge(e){if(!(this._badge?.value===e?.value&&this._badge?.tooltip===e?.tooltip))if(this._badge=e,e){const i={badge:new pt(e.value,()=>e.tooltip),priority:50};this._activity.value=this.activityService.showViewActivity(this.id,i)}else this._activity.clear()}get canSelectMany(){return this._canSelectMany}set canSelectMany(e){const i=this._canSelectMany;this._canSelectMany=e,this._canSelectMany!==i&&this.tree?.updateOptions({multipleSelectionSupport:this.canSelectMany})}get manuallyManageCheckboxes(){return this._manuallyManageCheckboxes}set manuallyManageCheckboxes(e){this._manuallyManageCheckboxes=e}get hasIconForParentNode(){return this._hasIconForParentNode}get hasIconForLeafNode(){return this._hasIconForLeafNode}get visible(){return this.isVisible}initializeShowCollapseAllAction(e=!1){return this.collapseAllContext||(this.collapseAllContextKey=new P(`treeView.${this.id}.enableCollapseAll`,e,D("treeView.enableCollapseAll","Whether the the tree view with id {0} enables collapse all.",this.id)),this.collapseAllContext=this.collapseAllContextKey.bindTo(this.contextKeyService)),!0}get showCollapseAllAction(){return this.initializeShowCollapseAllAction(),!!this.collapseAllContext?.get()}set showCollapseAllAction(e){this.initializeShowCollapseAllAction(e),this.collapseAllContext?.set(e)}initializeShowRefreshAction(e=!1){this.refreshContext||(this.refreshContextKey=new P(`treeView.${this.id}.enableRefresh`,e,D("treeView.enableRefresh","Whether the tree view with id {0} enables refresh.",this.id)),this.refreshContext=this.refreshContextKey.bindTo(this.contextKeyService))}get showRefreshAction(){return this.initializeShowRefreshAction(),!!this.refreshContext?.get()}set showRefreshAction(e){this.initializeShowRefreshAction(e),this.refreshContext?.set(e)}registerActions(){const e=this;this._register(he(class extends ce{constructor(){super({id:`workbench.actions.treeView.${e.id}.refresh`,title:D("refresh","Refresh"),menu:{id:V.ViewTitle,when:R.and(R.equals("view",e.id),e.refreshContextKey),group:"navigation",order:Number.MAX_SAFE_INTEGER-1},icon:re.refresh})}async run(){return e.refresh()}})),this._register(he(class extends ce{constructor(){super({id:`workbench.actions.treeView.${e.id}.collapseAll`,title:D("collapseAll","Collapse All"),menu:{id:V.ViewTitle,when:R.and(R.equals("view",e.id),e.collapseAllContextKey),group:"navigation",order:Number.MAX_SAFE_INTEGER},precondition:e.collapseAllToggleContextKey,icon:re.collapseAll})}async run(){if(e.tree)return new Re(e.tree,!0).run()}}))}setVisibility(e){this.initialize(),e=!!e,this.isVisible!==e&&(this.isVisible=e,this.tree&&(this.isVisible?f.show(this.tree.getHTMLElement()):f.hide(this.tree.getHTMLElement()),this.isVisible&&this.elementsToRefresh.length&&this.dataProvider&&(this.doRefresh(this.elementsToRefresh),this.elementsToRefresh=[])),qe(()=>{this.dataProvider&&this._onDidChangeVisibility.fire(this.isVisible)}),this.visible&&this.activate())}activated=!1;focus(e=!0,i){if(this.tree&&this.root.children&&this.root.children.length>0){const t=i??this.tree.getSelection()[0];t&&e&&this.tree.reveal(t,.5),this.tree.domFocus()}else this.tree&&this.treeContainer&&!this.treeContainer.classList.contains("hide")?this.tree.domFocus():this.domNode.focus()}show(e){this._container=e,f.append(e,this.domNode)}create(){this.domNode=f.$(".tree-explorer-viewlet-tree-view"),this.messageElement=f.append(this.domNode,f.$(".message")),this.updateMessage(),this.treeContainer=f.append(this.domNode,f.$(".customview-tree")),this.treeContainer.classList.add("file-icon-themable-tree","show-file-icons");const e=this._register(f.trackFocus(this.domNode));this._register(e.onDidFocus(()=>this.focused=!0)),this._register(e.onDidBlur(()=>this.focused=!1))}treeDisposables=this._register(new se);createTree(){this.treeDisposables.clear();const e=Ye.bind(void 0,this.instantiationService),i=this.treeDisposables.add(this.instantiationService.createInstance(_,this.id));this.treeLabels=this.treeDisposables.add(this.instantiationService.createInstance(gt,this));const t=this.instantiationService.createInstance(Dt,this,o=>this.progressService.withProgress({location:this.id},()=>o)),r=new xt(this.themeService),s=this.treeDisposables.add(new It),a=this.instantiationService.createInstance(b,this.id,i,this.treeLabels,e,r,s,()=>this.manuallyManageCheckboxes);this.treeDisposables.add(a.onDidChangeCheckboxState(o=>this._onDidChangeCheckboxState.fire(o)));const p=this._title;this.tree=this.treeDisposables.add(this.instantiationService.createInstance(bt,this.id,this.treeContainer,new wt,[a],t,{identityProvider:new Ct,accessibilityProvider:{getAriaLabel(o){if(o.accessibilityInformation)return o.accessibilityInformation.label;if(G(o.tooltip))return o.tooltip;{if(o.resourceUri&&!o.label)return null;let h="";return o.label&&(h+=o.label.label+" "),o.description&&(h+=o.description),h}},getRole(o){return o.accessibilityInformation?.role??"treeitem"},getWidgetAriaLabel(){return p}},keyboardNavigationLabelProvider:{getKeyboardNavigationLabel:o=>o.label?o.label.label:o.resourceUri?le(C.revive(o.resourceUri)):void 0},expandOnlyOnTwistieClick:o=>!!o.command||!!o.checkbox||this.configurationService.getValue("workbench.tree.expandMode")==="doubleClick",collapseByDefault:o=>o.collapsibleState!==S.Expanded,multipleSelectionSupport:this.canSelectMany,dnd:this.treeViewDnd,overrideStyles:Se(this.viewLocation).listOverrideStyles})),this.treeDisposables.add(a.onDidChangeMenuContext(o=>o.forEach(h=>this.tree?.rerender(h)))),this.treeDisposables.add(this.tree),i.setContextKeyService(this.tree.contextKeyService),r.tree=this.tree;const c=new De(this.notificationService,()=>this.tree.getSelection());a.actionRunner=c,this.tree.contextKeyService.createKey(this.id,!0),St.bindTo(this.tree.contextKeyService).set(!0),this.treeDisposables.add(this.tree.onContextMenu(o=>this.onContextMenu(i,o,c))),this.treeDisposables.add(this.tree.onDidChangeSelection(o=>{this.lastSelection=o.elements,this.lastActive=this.tree?.getFocus()[0]??this.lastActive,this._onDidChangeSelectionAndFocus.fire({selection:this.lastSelection,focus:this.lastActive})})),this.treeDisposables.add(this.tree.onDidChangeFocus(o=>{o.elements.length&&o.elements[0]!==this.lastActive&&(this.lastActive=o.elements[0],this.lastSelection=this.tree?.getSelection()??this.lastSelection,this._onDidChangeSelectionAndFocus.fire({selection:this.lastSelection,focus:this.lastActive}))})),this.treeDisposables.add(this.tree.onDidChangeCollapseState(o=>{if(!o.node.element)return;const h=Array.isArray(o.node.element.element)?o.node.element.element[0]:o.node.element.element;o.node.collapsed?this._onDidCollapseItem.fire(h):this._onDidExpandItem.fire(h)})),this.tree.setInput(this.root).then(()=>this.updateContentAreas()),this.treeDisposables.add(this.tree.onDidOpen(async o=>{if(!o.browserEvent||o.browserEvent.target&&o.browserEvent.target.classList.contains(Te.checkboxClass))return;const h=this.tree.getSelection(),u=await this.resolveCommand(h.length===1?h[0]:void 0);if(u&&Ce(u,this.contextKeyService)){let g=u.arguments||[];(u.id===vt||u.id===ft)&&(g=[...g,o]);try{await this.commandService.executeCommand(u.id,...g)}catch(I){this.notificationService.error(I)}}})),this.treeDisposables.add(i.onDidChange(o=>{this.tree?.hasNode(o)&&this.tree?.rerender(o)}))}async resolveCommand(e){let i=e?.command;return e&&!i&&e instanceof Ie&&e.hasResolve&&(await e.resolve(ie.None),i=e.command),i}onContextMenu(e,i,t){this.hoverService.hideHover();const r=i.element;if(r===null)return;const s=i.browserEvent;s.preventDefault(),s.stopPropagation(),this.tree.setFocus([r]);let a=this.canSelectMany?this.getSelection():[];a.find(c=>c.handle===r.handle)||(a=[r]);const p=e.getResourceContextActions(a);p.length&&this.contextMenuService.showContextMenu({getAnchor:()=>i.anchor,getActions:()=>p,getActionViewItem:c=>{const l=this.keybindingService.lookupKeybinding(c.id);if(l)return new Me(c,c,{label:!0,keybinding:l.getLabel()})},onHide:c=>{c&&this.tree.domFocus()},getActionsContext:()=>({$treeViewId:this.id,$treeItemHandle:r.handle}),actionRunner:t})}updateMessage(){this._message?this.showMessage(this._message):this.dataProvider?this.hideMessage():this.showMessage(Tt),this.updateContentAreas()}processMessage(e,i){const t=e.value.split(`
`),r=[];let s=!1;for(const p of t){const c=je(p);if(c.nodes.length===1&&typeof c.nodes[0]!="string"){const l=c.nodes[0],o=document.createElement("div");o.classList.add("button-container");const h=new We(o,{title:l.title,secondary:s,supportIcons:!0,...dt});h.label=l.label,h.onDidClick(g=>{this.openerService.open(l.href,{allowCommands:!0})},null,i);const u=C.parse(l.href);if(u.scheme===ae.command){const g=be(u.path);g&&(h.enabled=this.contextKeyService.contextMatchesRules(g),i.add(this.contextKeyService.onDidChangeContext(I=>{I.affectsSome(new Set(g.keys()))&&(h.enabled=this.contextKeyService.contextMatchesRules(g))})))}i.add(h),s=!0,r.push(o)}else{s=!1;const l=this.markdownRenderer.render(new Ne(p,{isTrusted:e.isTrusted,supportThemeIcons:e.supportThemeIcons,supportHtml:e.supportHtml}));r.push(l.element),i.add(l)}}const a=document.createElement("div");a.classList.add("rendered-message");for(const p of r)f.isHTMLElement(p)?a.appendChild(p):a.appendChild(p.element);return a}showMessage(e){if(we(this._messageValue)&&this._messageValue.disposables.dispose(),oe(e)&&!this.markdownRenderer&&(this.markdownRenderer=this.instantiationService.createInstance(Xe,{})),oe(e)){const i=new se,t=this.processMessage(e,i);this._messageValue={element:t,disposables:i}}else this._messageValue=e;this.messageElement&&(this.messageElement.classList.remove("hide"),this.resetMessageElement(),typeof this._messageValue=="string"&&!Be(this._messageValue)?this.messageElement.textContent=this._messageValue:we(this._messageValue)&&this.messageElement.appendChild(this._messageValue.element),this.layout(this._height,this._width))}hideMessage(){this.resetMessageElement(),this.messageElement?.classList.add("hide"),this.layout(this._height,this._width)}resetMessageElement(){this.messageElement&&f.clearNode(this.messageElement)}_height=0;_width=0;layout(e,i){if(e&&i&&this.messageElement&&this.treeContainer){this._height=e,this._width=i;const t=e-f.getTotalHeight(this.messageElement);this.treeContainer.style.height=t+"px",this.tree?.layout(t,i)}}getOptimalWidth(){if(this.tree){const e=this.tree.getHTMLElement(),i=[].slice.call(e.querySelectorAll(".outline-item-label > a"));return f.getLargestChildWidth(e,i)}return 0}async refresh(e){if(this.dataProvider&&this.tree){this.refreshing&&await Fe.toPromise(this._onDidCompleteRefresh.event),e||(e=[this.root],this.elementsToRefresh=[]);for(const i of e)i.children=void 0;if(this.isVisible)return this.doRefresh(e);if(this.elementsToRefresh.length){const i=new Set;this.elementsToRefresh.forEach(t=>i.add(t.handle));for(const t of e)i.has(t.handle)||this.elementsToRefresh.push(t)}else this.elementsToRefresh.push(...e)}}async expand(e){const i=this.tree;if(i)try{e=Array.isArray(e)?e:[e];for(const t of e)await i.expand(t,!1)}catch{}}isCollapsed(e){return!!this.tree?.isCollapsed(e)}setSelection(e){this.tree?.setSelection(e)}getSelection(){return this.tree?.getSelection()??[]}setFocus(e){this.tree&&(e?(this.focus(!0,e),this.tree.setFocus([e])):this.tree.getFocus().length===0&&this.tree.setFocus([]))}async reveal(e){if(this.tree)return this.tree.reveal(e)}refreshing=!1;async doRefresh(e){const i=this.tree;if(i&&this.visible){this.refreshing=!0;const t=i.getSelection();try{await Promise.all(e.map(s=>i.updateChildren(s,!0,!0)))}catch(s){this.logService.error(s)}const r=i.getSelection();(t.length!==r.length||t.some((s,a)=>s.handle!==r[a].handle))&&(this.lastSelection=r,this._onDidChangeSelectionAndFocus.fire({selection:this.lastSelection,focus:this.lastActive})),this.refreshing=!1,this._onDidCompleteRefresh.fire(),this.updateContentAreas(),this.focused&&this.focus(!1),this.updateCollapseAllToggle()}}initializeCollapseAllToggle(){this.collapseAllToggleContext||(this.collapseAllToggleContextKey=new P(`treeView.${this.id}.toggleCollapseAll`,!1,D("treeView.toggleCollapseAll","Whether collapse all is toggled for the tree view with id {0}.",this.id)),this.collapseAllToggleContext=this.collapseAllToggleContextKey.bindTo(this.contextKeyService))}updateCollapseAllToggle(){this.showCollapseAllAction&&(this.initializeCollapseAllToggle(),this.collapseAllToggleContext?.set(!!this.root.children&&this.root.children.length>0&&this.root.children.some(e=>e.collapsibleState!==S.None)))}updateContentAreas(){const e=!this.root.children||this.root.children.length===0;this._messageValue&&e&&!this.refreshing&&this.treeContainer?(this.dragAndDropController||this.treeContainer.classList.add("hide"),this.domNode.setAttribute("tabindex","0")):this.treeContainer&&(this.treeContainer.classList.remove("hide"),this.domNode===f.getActiveElement()&&this.focus(),this.domNode.removeAttribute("tabindex"))}get container(){return this._container}};x=w([d(2,F),d(3,A),d(4,pe),d(5,k),d(6,ue),d(7,j),d(8,q),d(9,X),d(10,Z),d(11,K),d(12,L),d(13,ye),d(14,J),d(15,Q)],x);class Ct{getId(n){return n.handle}}class wt{getHeight(n){return b.ITEM_HEIGHT}getTemplateId(n){return b.TREE_TEMPLATE_ID}}class Dt{constructor(n,e){this.treeView=n;this.withProgress=e}hasChildren(n){return!!this.treeView.dataProvider&&n.collapsibleState!==S.None}async getChildren(n){let e=[];if(this.treeView.dataProvider)try{e=await this.withProgress(this.treeView.dataProvider.getChildren(n))??[]}catch(i){if(!i.message.startsWith("Bad progress location:"))throw i}return e}}let b=class extends ${constructor(e,i,t,r,s,a,p,c,l,o,h,u,g){super();this.treeViewId=e;this.menus=i;this.labels=t;this.actionViewItemProvider=r;this.aligner=s;this.checkboxStateHandler=a;this.manuallyManageCheckboxes=p;this.themeService=c;this.configurationService=l;this.labelService=o;this.contextKeyService=h;this.hoverService=u;this._hoverDelegate=this._register(g.createInstance(ot,"mouse",!1,{})),this._register(this.themeService.onDidFileIconThemeChange(()=>this.rerender())),this._register(this.themeService.onDidColorThemeChange(()=>this.rerender())),this._register(a.onDidChangeCheckboxState(I=>{this.updateCheckboxes(I)})),this._register(this.contextKeyService.onDidChangeContext(I=>this.onDidChangeContext(I)))}static ITEM_HEIGHT=22;static TREE_TEMPLATE_ID="treeExplorer";_onDidChangeCheckboxState=this._register(new y);onDidChangeCheckboxState=this._onDidChangeCheckboxState.event;_onDidChangeMenuContext=this._register(new y);onDidChangeMenuContext=this._onDidChangeMenuContext.event;_actionRunner;_hoverDelegate;_hasCheckbox=!1;_renderedElements=new Map;get templateId(){return b.TREE_TEMPLATE_ID}set actionRunner(e){this._actionRunner=e}renderTemplate(e){e.classList.add("custom-view-tree-node-item");const i=f.append(e,f.$("")),t=this.labels.create(e,{supportHighlights:!0,hoverDelegate:this._hoverDelegate}),r=f.prepend(t.element,f.$(".custom-view-tree-node-item-icon")),s=f.append(t.element,f.$(".actions")),a=new Ve(s,{actionViewItemProvider:this.actionViewItemProvider});return{resourceLabel:t,icon:r,checkboxContainer:i,actionBar:a,container:e}}getHover(e,i,t){return!(t instanceof Ie)||!t.hasResolve?i&&!t.tooltip?void 0:t.tooltip===void 0?e:G(t.tooltip)?t.tooltip!==""?t.tooltip:void 0:{markdown:t.tooltip,markdownNotSupportedFallback:i?void 0:Ee(t.tooltip)}:{markdown:typeof t.tooltip=="string"?t.tooltip:r=>new Promise(s=>{t.resolve(r).then(()=>s(t.tooltip))}),markdownNotSupportedFallback:i?void 0:e??""}}renderElement(e,i,t){const r=e.element,s=r.resourceUri?C.revive(r.resourceUri):null,a=r.label?r.label:s?{label:le(s)}:void 0,p=G(r.description)?r.description:s&&r.description===!0?this.labelService.getUriLabel(Ue(s),{relative:!0}):void 0,c=a?a.label:void 0,l=a&&a.highlights&&c?a.highlights.map(([v,T])=>{if(v<0&&(v=c.length+v),T<0&&(T=c.length+T),v>=c.length||T>c.length)return{start:0,end:0};if(v>T){const U=v;v=T,T=U}return{start:v,end:T}}):void 0,o=this.themeService.getColorTheme().type===fe.LIGHT?r.icon:r.iconDark,h=o?C.revive(o):void 0,u=this.getHover(c,s,r);t.actionBar.clear(),t.icon.style.color="";let g=!0;if(r.command&&(g=Ce(r.command,this.contextKeyService)),this.renderCheckbox(r,t),s){const v=this.configurationService.getValue("explorer.decorations"),T=s||C.parse("missing:_icon_resource");t.resourceLabel.setResource({name:c,description:p,resource:T},{fileKind:this.getFileKind(r),title:u,hideIcon:this.shouldHideResourceLabelIcon(h,r.themeIcon),fileDecorations:v,extraClasses:["custom-view-tree-node-item-resourceLabel"],matches:l||ne(e.filterData),strikethrough:a?.strikethrough,disabledCommand:!g,labelEscapeNewLines:!0,forceLabel:!!r.label})}else t.resourceLabel.setResource({name:c,description:p},{title:u,hideIcon:!0,extraClasses:["custom-view-tree-node-item-resourceLabel"],matches:l||ne(e.filterData),strikethrough:a?.strikethrough,disabledCommand:!g,labelEscapeNewLines:!0});if(h)t.icon.className="custom-view-tree-node-item-icon",t.icon.style.backgroundImage=f.asCSSUrl(h);else{let v;this.shouldShowThemeIcon(!!s,r.themeIcon)&&(v=Je.asClassName(r.themeIcon),r.themeIcon.color&&(t.icon.style.color=this.themeService.getColorTheme().getColor(r.themeIcon.color.id)?.toString()??"")),t.icon.className=v?`custom-view-tree-node-item-icon ${v}`:"",t.icon.style.backgroundImage=""}g||(t.icon.className=t.icon.className+" disabled",t.container.parentElement&&(t.container.parentElement.className=t.container.parentElement.className+" disabled")),t.actionBar.context={$treeViewId:this.treeViewId,$treeItemHandle:r.handle};const I=this.menus.getResourceActions([r]);t.actionBar.push(I,{icon:!0,label:!1}),this._actionRunner&&(t.actionBar.actionRunner=this._actionRunner),this.setAlignment(t.container,r);const z=this._renderedElements.get(e.element.handle)??[];this._renderedElements.set(e.element.handle,[...z,{original:e,rendered:t}])}rerender(){const e=new Set(this._renderedElements.keys());for(const i of e){const t=this._renderedElements.get(i)??[];for(const r of t)this.disposeElement(r.original,0,r.rendered),this.renderElement(r.original,0,r.rendered)}}renderCheckbox(e,i){if(e.checkbox){if(this._hasCheckbox||(this._hasCheckbox=!0,this.rerender()),!i.checkbox){const t=new Te(i.checkboxContainer,this.checkboxStateHandler,this._hoverDelegate,this.hoverService);i.checkbox=t}i.checkbox.render(e)}else i.checkbox&&(i.checkbox.dispose(),i.checkbox=void 0)}setAlignment(e,i){e.parentElement.classList.toggle("align-icon-with-twisty",!this._hasCheckbox&&this.aligner.alignIconWithTwisty(i))}shouldHideResourceLabelIcon(e,i){return!!e||!!i&&!this.isFileKindThemeIcon(i)}shouldShowThemeIcon(e,i){return i?!(e&&this.isFileKindThemeIcon(i)):!1}isFolderThemeIcon(e){return e?.id===Y.id}isFileKindThemeIcon(e){return e?e.id===ve.id||this.isFolderThemeIcon(e):!1}getFileKind(e){if(e.themeIcon)switch(e.themeIcon.id){case ve.id:return H.FILE;case Y.id:return H.FOLDER}return e.collapsibleState===S.Collapsed||e.collapsibleState===S.Expanded?H.FOLDER:H.FILE}onDidChangeContext(e){const i=[];for(const[t,r]of this._renderedElements)for(const s of r)(e.affectsSome(this.menus.getElementOverlayContexts(s.original.element))||e.affectsSome(this.menus.getEntireMenuContexts()))&&i.push(s.original.element);i.length&&this._onDidChangeMenuContext.fire(i)}updateCheckboxes(e){const i=[];if(!this.manuallyManageCheckboxes()){for(const s of e)if(s.checkbox!==void 0){let a=function(l){for(const o of l.children??[])o.checkbox!==void 0&&l.checkbox!==void 0&&o.checkbox.isChecked!==l.checkbox.isChecked&&(o.checkbox.isChecked=l.checkbox.isChecked,i.push(o),a(o))},c=function(l){if(l.parent&&l.parent.checkbox!==void 0&&l.parent.children){if(p.has(l.parent))return;p.add(l.parent);let o=!1,h=!1;for(const u of l.parent.children){if(o&&h)break;u.checkbox!==void 0&&(u.checkbox.isChecked?h=!0:o=!0)}h&&!o&&l.parent.checkbox.isChecked!==!0?(l.parent.checkbox.isChecked=!0,i.push(l.parent),c(l.parent)):o&&l.parent.checkbox.isChecked!==!1&&(l.parent.checkbox.isChecked=!1,i.push(l.parent),c(l.parent))}};var t=a,r=c;a(s);const p=new Set;c(s)}}e=e.concat(i),e.forEach(s=>{const a=this._renderedElements.get(s.handle);a&&a.forEach(p=>p.rendered.checkbox?.render(s))}),this._onDidChangeCheckboxState.fire(e)}disposeElement(e,i,t){const r=this._renderedElements.get(e.element.handle)??[],s=r.findIndex(a=>t===a.rendered);r.length===1?this._renderedElements.delete(e.element.handle):r.length>0&&r.splice(s,1),t.checkbox?.dispose(),t.checkbox=void 0}disposeTemplate(e){e.resourceLabel.dispose(),e.actionBar.dispose()}};b=w([d(7,F),d(8,k),d(9,me),d(10,L),d(11,K),d(12,A)],b);class xt extends ${constructor(e){super();this.themeService=e}_tree;set tree(e){this._tree=e}alignIconWithTwisty(e){if(e.collapsibleState!==S.None||!this.hasIcon(e))return!1;if(this._tree){const i=this._tree.getParentElement(e)||this._tree.getInput();return this.hasIcon(i)?!!i.children&&i.children.some(t=>t.collapsibleState!==S.None&&!this.hasIcon(t)):!!i.children&&i.children.every(t=>t.collapsibleState===S.None||!this.hasIcon(t))}else return!1}hasIcon(e){if(this.themeService.getColorTheme().type===fe.LIGHT?e.icon:e.iconDark)return!0;if(e.resourceUri||e.themeIcon){const t=this.themeService.getFileIconTheme();return(e.themeIcon?e.themeIcon.id===Y.id:e.collapsibleState!==S.None)?t.hasFileIcons&&t.hasFolderIcons:t.hasFileIcons}return!1}}class De extends Le{constructor(e,i){super();this.getSelectedResources=i;this._register(this.onDidRun(t=>{t.error&&!Ke(t.error)&&e.error(D("command-error","Error running command {1}: {0}. This is likely caused by the extension that contributes {1}.",t.error.message,t.action.id))}))}async runAction(e,i){const t=this.getSelectedResources();let r,s=!1;t.length>1&&(r=t.map(a=>((a.handle===i.$treeItemHandle||i.$selectedTreeItems)&&(s=!0),{$treeViewId:i.$treeViewId,$treeItemHandle:a.handle}))),!s&&r&&(r=void 0),await e.run(i,r)}}let _=class{constructor(n,e){this.id=n;this.menuService=e}contextKeyService;_onDidChange=new y;onDidChange=this._onDidChange.event;getResourceActions(n){return this.getActions(this.getMenuId(),n).primary}getResourceContextActions(n){return this.getActions(this.getMenuId(),n).secondary}setContextKeyService(n){this.contextKeyService=n}filterNonUniversalActions(n,e){const i=new Set(e.map(t=>t.id));for(const t of n){const r=t.keys();for(const s of r)i.has(s)||t.delete(s)}}buildMenu(n){const e=[];for(const i of n)i.size>0&&(e.length&&e.push(new te),e.push(...i.values()));return e}createGroups(n){const e=[];let i=new Map;for(const t of n)t instanceof te?(e.push(i),i=new Map):i.set(t.id,t);return e.push(i),e}getElementOverlayContexts(n){return new Map([["view",this.id],["viewItem",n.contextValue]])}getEntireMenuContexts(){return this.menuService.getMenuContexts(this.getMenuId())}getMenuId(){return V.ViewItemContext}getActions(n,e){if(!this.contextKeyService)return{primary:[],secondary:[]};let i=[],t=[];for(let r=0;r<e.length;r++){const s=e[r],a=this.contextKeyService.createOverlay(this.getElementOverlayContexts(s)),p=this.menuService.getMenuActions(n,a,{shouldForwardArgs:!0}),o={primary:[],secondary:[]};Ze(p,o,"inline"),r===0?(i=this.createGroups(o.primary),t=this.createGroups(o.secondary)):(this.filterNonUniversalActions(i,o.primary),this.filterNonUniversalActions(t,o.secondary))}return{primary:this.buildMenu(i),secondary:this.buildMenu(t)}}dispose(){this.contextKeyService=void 0}};_=w([d(1,et)],_);let O=class extends x{constructor(e,i,t,r,s,a,p,c,l,o,h,u,g,I,z,v,T,U,xe){super(e,i,r,s,a,p,c,l,o,h,u,I,g,v,U,xe);this.extensionId=t;this.extensionService=z;this.telemetryService=T}activate(){this.activated||(this.telemetryService.publicLog2("Extension:ViewActivate",{extensionId:new lt(this.extensionId),id:this.id}),this.createTree(),this.progressService.withProgress({location:this.id},()=>this.extensionService.activateByEvent(`onView:${this.id}`)).then(()=>Pe(2e3)).then(()=>{this.updateMessage()}),this.activated=!0)}};O=w([d(3,F),d(4,A),d(5,pe),d(6,k),d(7,ue),d(8,j),d(9,q),d(10,X),d(11,Z),d(12,L),d(13,K),d(14,mt),d(15,ye),d(16,ge),d(17,J),d(18,Q)],O);class Ni extends x{activate(){this.activated||(this.createTree(),this.activated=!0)}}let E=class{constructor(n,e,i,t,r){this.treeId=n;this.labelService=e;this.instantiationService=i;this.treeViewsDragAndDropService=t;this.logService=r;this.treeMimeType=`application/vnd.code.tree.${n.toLowerCase()}`}treeMimeType;treeItemsTransfer=nt.getInstance();dragCancellationToken;dndController;set controller(n){this.dndController=n}handleDragAndLog(n,e,i,t){return n.handleDrag(e,i,t).then(r=>{if(r){const s=[];for(const a of r)a[0]!==this.treeMimeType&&n.dragMimeTypes.findIndex(p=>p===a[0])<0&&s.push(a[0]);s.length&&this.logService.warn(`Drag and drop controller for tree ${this.treeId} adds the following data transfer types but does not declare them in dragMimeTypes: ${s.join(", ")}`)}return r})}addExtensionProvidedTransferTypes(n,e){if(!n.dataTransfer||!this.dndController)return;const i=$e();this.dragCancellationToken=new He,this.treeViewsDragAndDropService.addDragOperationTransfer(i,this.handleDragAndLog(this.dndController,e,i,this.dragCancellationToken.token)),this.treeItemsTransfer.setData([new M(i)],M.prototype),n.dataTransfer.clearData(W.text),this.dndController.dragMimeTypes.find(t=>t===W.uriList)&&n.dataTransfer?.setData(B.RESOURCES,""),this.dndController.dragMimeTypes.forEach(t=>{n.dataTransfer?.setData(t,"")})}addResourceInfoToTransfer(n,e){if(e.length&&n.dataTransfer){this.instantiationService.invokeFunction(t=>ut(t,e,n));const i=e.filter(t=>t.scheme===ae.file).map(t=>t.fsPath);i.length&&n.dataTransfer.setData(rt.FILES,JSON.stringify(i))}}onDragStart(n,e){if(e.dataTransfer){const i=n.getData(),t=[],r={id:this.treeId,itemHandles:[]};i.forEach(s=>{r.itemHandles.push(s.handle),s.resourceUri&&t.push(C.revive(s.resourceUri))}),this.addResourceInfoToTransfer(e,t),this.addExtensionProvidedTransferTypes(e,r.itemHandles),e.dataTransfer.setData(this.treeMimeType,JSON.stringify(r))}}debugLog(n){n.size?this.logService.debug(`TreeView dragged mime types: ${Array.from(n).join(", ")}`):this.logService.debug("TreeView dragged with no supported mime types.")}onDragOver(n,e,i,t,r){const s=de(r.dataTransfer),a=new Set(Array.from(s,l=>l[0]));if(r.dataTransfer){for(const l of r.dataTransfer.items)if(l.kind==="file"||l.type===B.RESOURCES.toLowerCase()){a.add(W.uriList);break}}this.debugLog(a);const p=this.dndController;return!p||!r.dataTransfer||p.dropMimeTypes.length===0?!1:Array.from(a).some((l,o)=>l===this.treeMimeType?!0:p.dropMimeTypes.indexOf(l)>=0)?{accept:!0,bubble:ke.Down,autoExpand:!0}:!1}getDragURI(n){return this.dndController?n.resourceUri?C.revive(n.resourceUri).toString():n.handle:null}getDragLabel(n){if(!this.dndController)return;if(n.length>1)return String(n.length);const e=n[0];return e.label?e.label.label:e.resourceUri?this.labelService.getUriLabel(C.revive(e.resourceUri)):void 0}async drop(n,e,i,t,r){const s=this.dndController;if(!r.dataTransfer||!s)return;let a,p;this.treeItemsTransfer.hasData(M.prototype)&&(p=this.treeItemsTransfer.getData(M.prototype)[0].identifier);const c=de(r.dataTransfer,!0),l=new Ge;for(const[h,u]of c)if((h===this.treeMimeType||s.dropMimeTypes.includes(h)||u.asFile()&&s.dropMimeTypes.includes(B.FILES.toLowerCase()))&&(l.append(h,u),h===this.treeMimeType))try{a=JSON.parse(await u.asString())}catch{}const o=await this.treeViewsDragAndDropService.removeDragOperationTransfer(p);if(o)for(const[h,u]of o)l.append(h,u);return s.handleDrop(l,e,ie.None,p,a?.id,a?.itemHandles)}onDragEnd(n){n.dataTransfer?.dropEffect==="none"&&this.dragCancellationToken?.cancel()}dispose(){}};E=w([d(1,me),d(2,A),d(3,Qe),d(4,J)],E);export{O as CustomTreeView,E as CustomTreeViewDragAndDrop,St as RawCustomTreeViewContextKey,Ni as TreeView,N as TreeViewPane};
