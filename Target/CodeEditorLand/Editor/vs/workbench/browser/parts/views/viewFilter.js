var v=Object.defineProperty;var I=Object.getOwnPropertyDescriptor;var h=(s,o,e,t)=>{for(var i=t>1?void 0:t?I(o,e):o,n=s.length-1,d;n>=0;n--)(d=s[n])&&(i=(t?d(o,e,i):d(i))||i);return t&&i&&v(o,e,i),i},l=(s,o)=>(e,t)=>o(e,t,s);import{Delayer as x}from"../../../../base/common/async.js";import*as r from"../../../../base/browser/dom.js";import{KeyCode as a}from"../../../../base/common/keyCodes.js";import{IContextViewService as b}from"../../../../platform/contextview/browser/contextView.js";import{toDisposable as m}from"../../../../base/common/lifecycle.js";import{badgeBackground as B,badgeForeground as C,contrastBorder as w,asCssVariable as c}from"../../../../platform/theme/common/colorRegistry.js";import{localize as F}from"../../../../nls.js";import{IInstantiationService as S}from"../../../../platform/instantiation/common/instantiation.js";import{ContextScopedHistoryInputBox as T}from"../../../../platform/history/browser/contextScopedHistoryWidget.js";import{IContextKeyService as K,RawContextKey as k}from"../../../../platform/contextkey/common/contextkey.js";import{Codicon as D}from"../../../../base/common/codicons.js";import{IKeybindingService as E}from"../../../../platform/keybinding/common/keybinding.js";import{showHistoryKeybindingHint as _}from"../../../../platform/history/browser/historyWidgetKeybindingHint.js";import{MenuId as f,MenuRegistry as M,SubmenuItemAction as H}from"../../../../platform/actions/common/actions.js";import{HiddenItemStrategy as L,MenuWorkbenchToolBar as V}from"../../../../platform/actions/browser/toolbar.js";import{SubmenuEntryActionViewItem as A}from"../../../../platform/actions/browser/menuEntryActionViewItem.js";import{Widget as O}from"../../../../base/browser/ui/widget.js";import{Emitter as W}from"../../../../base/common/event.js";import{defaultInputBoxStyles as q}from"../../../../platform/theme/browser/defaultStyles.js";const y=new f("menu.view.filter"),g=new f("submenu.view.filter");M.appendMenuItem(y,{submenu:g,title:F("more filters","More Filters..."),group:"navigation",icon:D.filter});class P extends A{_checked=!1;set checked(o){this._checked!==o&&(this._checked=o,this.updateChecked())}updateChecked(){this.element&&this.element.classList.toggle("checked",this._checked)}render(o){super.render(o),this.updateChecked()}}let p=class extends O{constructor(e,t,i,n,d){super();this.options=e;this.instantiationService=t;this.contextViewService=i;this.keybindingService=d;this.delayedFilterUpdate=new x(400),this._register(m(()=>this.delayedFilterUpdate.cancel())),e.focusContextKey&&(this.focusContextKey=new k(e.focusContextKey,!1).bindTo(n)),this.element=r.$(".viewpane-filter"),[this.filterInputBox,this.focusTracker]=this.createInput(this.element),this._register(this.filterInputBox),this._register(this.focusTracker);const u=r.append(this.element,r.$(".viewpane-filter-controls"));this.filterBadge=this.createBadge(u),this.toolbar=this._register(this.createToolBar(u)),this.adjustInputBox()}element;delayedFilterUpdate;filterInputBox;filterBadge;toolbar;focusContextKey;_onDidChangeFilterText=this._register(new W);onDidChangeFilterText=this._onDidChangeFilterText.event;moreFiltersActionViewItem;isMoreFiltersChecked=!1;lastWidth;focusTracker;get onDidFocus(){return this.focusTracker.onDidFocus}get onDidBlur(){return this.focusTracker.onDidBlur}hasFocus(){return this.filterInputBox.hasFocus()}focus(){this.filterInputBox.focus()}blur(){this.filterInputBox.blur()}updateBadge(e){this.filterBadge.classList.toggle("hidden",!e),this.filterBadge.textContent=e||"",this.adjustInputBox()}setFilterText(e){this.filterInputBox.value=e}getFilterText(){return this.filterInputBox.value}getHistory(){return this.filterInputBox.getHistory()}layout(e){this.element.parentElement?.classList.toggle("grow",e>700),this.element.classList.toggle("small",e<400),this.adjustInputBox(),this.lastWidth=e}relayout(){this.lastWidth&&this.layout(this.lastWidth)}checkMoreFilters(e){this.isMoreFiltersChecked=e,this.moreFiltersActionViewItem&&(this.moreFiltersActionViewItem.checked=e)}createInput(e){const t=this._register(this.instantiationService.createInstance(T,e,this.contextViewService,{placeholder:this.options.placeholder,ariaLabel:this.options.ariaLabel,history:this.options.history||[],showHistoryHint:()=>_(this.keybindingService),inputBoxStyles:q}));this.options.text&&(t.value=this.options.text),this._register(t.onDidChange(n=>this.delayedFilterUpdate.trigger(()=>this.onDidInputChange(t)))),this._register(r.addStandardDisposableListener(t.inputElement,r.EventType.KEY_DOWN,n=>this.onInputKeyDown(n,t))),this._register(r.addStandardDisposableListener(e,r.EventType.KEY_DOWN,this.handleKeyboardEvent)),this._register(r.addStandardDisposableListener(e,r.EventType.KEY_UP,this.handleKeyboardEvent)),this._register(r.addStandardDisposableListener(t.inputElement,r.EventType.CLICK,n=>{n.stopPropagation(),n.preventDefault()}));const i=this._register(r.trackFocus(t.inputElement));return this.focusContextKey&&(this._register(i.onDidFocus(()=>this.focusContextKey.set(!0))),this._register(i.onDidBlur(()=>this.focusContextKey.set(!1))),this._register(m(()=>this.focusContextKey.reset()))),[t,i]}createBadge(e){const t=r.append(e,r.$(".viewpane-filter-badge.hidden"));return t.style.backgroundColor=c(B),t.style.color=c(C),t.style.border=`1px solid ${c(w)}`,t}createToolBar(e){return this.instantiationService.createInstance(V,e,y,{hiddenItemStrategy:L.NoHide,actionViewItemProvider:(t,i)=>{if(t instanceof H&&t.item.submenu.id===g.id)return this.moreFiltersActionViewItem=this.instantiationService.createInstance(P,t,i),this.moreFiltersActionViewItem.checked=this.isMoreFiltersChecked,this.moreFiltersActionViewItem}})}onDidInputChange(e){e.addToHistory(),this._onDidChangeFilterText.fire(e.value)}adjustInputBox(){this.filterInputBox.inputElement.style.paddingRight=this.element.classList.contains("small")||this.filterBadge.classList.contains("hidden")?"25px":"150px"}handleKeyboardEvent(e){(e.equals(a.Space)||e.equals(a.LeftArrow)||e.equals(a.RightArrow)||e.equals(a.Home)||e.equals(a.End))&&e.stopPropagation()}onInputKeyDown(e,t){let i=!1;e.equals(a.Tab)&&!this.toolbar.isEmpty()&&(this.toolbar.focus(),i=!0),i&&(e.stopPropagation(),e.preventDefault())}};p=h([l(1,S),l(2,b),l(3,K),l(4,E)],p);export{p as FilterWidget,g as viewFilterSubmenu};
