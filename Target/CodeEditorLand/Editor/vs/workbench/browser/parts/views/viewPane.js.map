{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/views/viewPane.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./media/paneviewlet.css\";\nimport {\n\t$,\n\tDimension,\n\tEventType,\n\taddDisposableListener,\n\tafter,\n\tappend,\n\tasCSSUrl,\n\tasCssValueWithDefault,\n\tcreateCSSRule,\n\treset,\n\ttrackFocus,\n} from \"../../../../base/browser/dom.js\";\nimport { BaseActionViewItem } from \"../../../../base/browser/ui/actionbar/actionViewItems.js\";\nimport {\n\tActionsOrientation,\n\ttype IActionViewItem,\n\tprepareActions,\n} from \"../../../../base/browser/ui/actionbar/actionbar.js\";\nimport { Button } from \"../../../../base/browser/ui/button/button.js\";\nimport type { IDropdownMenuActionViewItemOptions } from \"../../../../base/browser/ui/dropdown/dropdownActionViewItem.js\";\nimport type { IManagedHover } from \"../../../../base/browser/ui/hover/hover.js\";\nimport { getDefaultHoverDelegate } from \"../../../../base/browser/ui/hover/hoverDelegateFactory.js\";\nimport type { IListStyles } from \"../../../../base/browser/ui/list/listWidget.js\";\nimport { ProgressBar } from \"../../../../base/browser/ui/progressbar/progressbar.js\";\nimport { Orientation } from \"../../../../base/browser/ui/sash/sash.js\";\nimport { DomScrollableElement } from \"../../../../base/browser/ui/scrollbar/scrollableElement.js\";\nimport {\n\ttype IPaneOptions,\n\ttype IPaneStyles,\n\tPane,\n} from \"../../../../base/browser/ui/splitview/paneview.js\";\nimport {\n\tAction,\n\ttype IAction,\n\ttype IActionRunner,\n} from \"../../../../base/common/actions.js\";\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport { Emitter, Event } from \"../../../../base/common/event.js\";\nimport {\n\tDisposableStore,\n\ttoDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { parseLinkedText } from \"../../../../base/common/linkedText.js\";\nimport { ScrollbarVisibility } from \"../../../../base/common/scrollable.js\";\nimport { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport {\n\ttype PartialExcept,\n\tassertIsDefined,\n} from \"../../../../base/common/types.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport * as nls from \"../../../../nls.js\";\nimport { createActionViewItem } from \"../../../../platform/actions/browser/menuEntryActionViewItem.js\";\nimport { WorkbenchToolBar } from \"../../../../platform/actions/browser/toolbar.js\";\nimport {\n\tAction2,\n\ttype IAction2Options,\n\tMenuId,\n\tSubmenuItemAction,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { IContextKeyService } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IContextMenuService } from \"../../../../platform/contextview/browser/contextView.js\";\nimport { IHoverService } from \"../../../../platform/hover/browser/hover.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ServiceCollection } from \"../../../../platform/instantiation/common/serviceCollection.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport { Link } from \"../../../../platform/opener/browser/link.js\";\nimport { IOpenerService } from \"../../../../platform/opener/common/opener.js\";\nimport type { IProgressIndicator } from \"../../../../platform/progress/common/progress.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport {\n\tdefaultButtonStyles,\n\tdefaultProgressBarStyles,\n} from \"../../../../platform/theme/browser/defaultStyles.js\";\nimport {\n\tasCssVariable,\n\tforeground,\n} from \"../../../../platform/theme/common/colorRegistry.js\";\nimport { registerIcon } from \"../../../../platform/theme/common/iconRegistry.js\";\nimport { IThemeService } from \"../../../../platform/theme/common/themeService.js\";\nimport {\n\tPANEL_BACKGROUND,\n\tPANEL_SECTION_DRAG_AND_DROP_BACKGROUND,\n\tPANEL_STICKY_SCROLL_BACKGROUND,\n\tPANEL_STICKY_SCROLL_BORDER,\n\tPANEL_STICKY_SCROLL_SHADOW,\n\tSIDE_BAR_BACKGROUND,\n\tSIDE_BAR_DRAG_AND_DROP_BACKGROUND,\n\tSIDE_BAR_STICKY_SCROLL_BACKGROUND,\n\tSIDE_BAR_STICKY_SCROLL_BORDER,\n\tSIDE_BAR_STICKY_SCROLL_SHADOW,\n} from \"../../../common/theme.js\";\nimport {\n\ttype IView,\n\ttype IViewContentDescriptor,\n\tIViewDescriptorService,\n\ttype IViewsRegistry,\n\tExtensions as ViewContainerExtensions,\n\tViewContainerLocation,\n\tViewContainerLocationToString,\n\tdefaultViewIcon,\n} from \"../../../common/views.js\";\nimport type { IAccessibleViewInformationService } from \"../../../services/accessibility/common/accessibleViewInformationService.js\";\nimport { ILifecycleService } from \"../../../services/lifecycle/common/lifecycle.js\";\nimport {\n\tAbstractProgressScope,\n\tScopedProgressIndicator,\n} from \"../../../services/progress/browser/progressIndicator.js\";\nimport { IViewsService } from \"../../../services/views/common/viewsService.js\";\nimport { CompositeMenuActions } from \"../../actions.js\";\nimport { FilterWidget, type IFilterWidgetOptions } from \"./viewFilter.js\";\n\nexport enum ViewPaneShowActions {\n\t/** Show the actions when the view is hovered. This is the default behavior. */\n\tDefault = 0,\n\n\t/** Always shows the actions when the view is expanded */\n\tWhenExpanded = 1,\n\n\t/** Always shows the actions */\n\tAlways = 2,\n}\n\nexport interface IViewPaneOptions extends IPaneOptions {\n\treadonly id: string;\n\treadonly showActions?: ViewPaneShowActions;\n\treadonly titleMenuId?: MenuId;\n\treadonly donotForwardArgs?: boolean;\n\t// The title of the container pane when it is merged with the view container\n\treadonly singleViewPaneContainerTitle?: string;\n}\n\nexport interface IFilterViewPaneOptions extends IViewPaneOptions {\n\tfilterOptions: IFilterWidgetOptions;\n}\n\nexport const VIEWPANE_FILTER_ACTION = new Action(\"viewpane.action.filter\");\n\ntype WelcomeActionClassification = {\n\towner: \"joaomoreno\";\n\tviewId: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"The view ID in which the welcome view button was clicked.\";\n\t};\n\turi: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"The URI of the command ran by the result of clicking the button.\";\n\t};\n\tcomment: \"This is used to know when users click on the welcome view buttons.\";\n};\n\nconst viewPaneContainerExpandedIcon = registerIcon(\n\t\"view-pane-container-expanded\",\n\tCodicon.chevronDown,\n\tnls.localize(\n\t\t\"viewPaneContainerExpandedIcon\",\n\t\t\"Icon for an expanded view pane container.\",\n\t),\n);\nconst viewPaneContainerCollapsedIcon = registerIcon(\n\t\"view-pane-container-collapsed\",\n\tCodicon.chevronRight,\n\tnls.localize(\n\t\t\"viewPaneContainerCollapsedIcon\",\n\t\t\"Icon for a collapsed view pane container.\",\n\t),\n);\n\nconst viewsRegistry = Registry.as<IViewsRegistry>(\n\tViewContainerExtensions.ViewsRegistry,\n);\n\ninterface IItem {\n\treadonly descriptor: IViewContentDescriptor;\n\tvisible: boolean;\n}\n\ninterface IViewWelcomeDelegate {\n\treadonly id: string;\n\treadonly onDidChangeViewWelcomeState: Event<void>;\n\tshouldShowWelcome(): boolean;\n}\n\nclass ViewWelcomeController {\n\tprivate defaultItem: IItem | undefined;\n\tprivate items: IItem[] = [];\n\n\tget enabled(): boolean {\n\t\treturn this._enabled;\n\t}\n\tprivate _enabled = false;\n\tprivate element: HTMLElement | undefined;\n\tprivate scrollableElement: DomScrollableElement | undefined;\n\n\tprivate readonly disposables = new DisposableStore();\n\tprivate readonly enabledDisposables = this.disposables.add(\n\t\tnew DisposableStore(),\n\t);\n\tprivate readonly renderDisposables = this.disposables.add(\n\t\tnew DisposableStore(),\n\t);\n\n\tconstructor(\n\t\tprivate readonly container: HTMLElement,\n\t\tprivate readonly delegate: IViewWelcomeDelegate,\n\t\t@IInstantiationService private instantiationService: IInstantiationService,\n\t\t@IOpenerService protected openerService: IOpenerService,\n\t\t@ITelemetryService protected telemetryService: ITelemetryService,\n\t\t@IContextKeyService private contextKeyService: IContextKeyService,\n\t\t@ILifecycleService lifecycleService: ILifecycleService\n\t) {\n\t\tthis.disposables.add(Event.runAndSubscribe(this.delegate.onDidChangeViewWelcomeState, () => this.onDidChangeViewWelcomeState()));\n\t\tthis.disposables.add(lifecycleService.onWillShutdown(() => this.dispose())); // Fixes https://github.com/microsoft/vscode/issues/208878\n\t}\n\n\tlayout(height: number, width: number) {\n\t\tif (!this._enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.element!.style.height = `${height}px`;\n\t\tthis.element!.style.width = `${width}px`;\n\t\tthis.element!.classList.toggle(\"wide\", width > 640);\n\t\tthis.scrollableElement!.scanDomNode();\n\t}\n\n\tfocus() {\n\t\tif (!this._enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.element!.focus();\n\t}\n\n\tprivate onDidChangeViewWelcomeState(): void {\n\t\tconst enabled = this.delegate.shouldShowWelcome();\n\n\t\tif (this._enabled === enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._enabled = enabled;\n\n\t\tif (!enabled) {\n\t\t\tthis.enabledDisposables.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.container.classList.add(\"welcome\");\n\t\tconst viewWelcomeContainer = append(this.container, $(\".welcome-view\"));\n\t\tthis.element = $(\".welcome-view-content\", { tabIndex: 0 });\n\t\tthis.scrollableElement = new DomScrollableElement(this.element, {\n\t\t\talwaysConsumeMouseWheel: true,\n\t\t\thorizontal: ScrollbarVisibility.Hidden,\n\t\t\tvertical: ScrollbarVisibility.Visible,\n\t\t});\n\t\tappend(viewWelcomeContainer, this.scrollableElement.getDomNode());\n\n\t\tthis.enabledDisposables.add(\n\t\t\ttoDisposable(() => {\n\t\t\t\tthis.container.classList.remove(\"welcome\");\n\t\t\t\tthis.scrollableElement!.dispose();\n\t\t\t\tviewWelcomeContainer.remove();\n\t\t\t\tthis.scrollableElement = undefined;\n\t\t\t\tthis.element = undefined;\n\t\t\t}),\n\t\t);\n\n\t\tthis.contextKeyService.onDidChangeContext(\n\t\t\tthis.onDidChangeContext,\n\t\t\tthis,\n\t\t\tthis.enabledDisposables,\n\t\t);\n\t\tEvent.chain(viewsRegistry.onDidChangeViewWelcomeContent, ($) =>\n\t\t\t$.filter((id) => id === this.delegate.id),\n\t\t)(this.onDidChangeViewWelcomeContent, this, this.enabledDisposables);\n\t\tthis.onDidChangeViewWelcomeContent();\n\t}\n\n\tprivate onDidChangeViewWelcomeContent(): void {\n\t\tconst descriptors = viewsRegistry.getViewWelcomeContent(\n\t\t\tthis.delegate.id,\n\t\t);\n\n\t\tthis.items = [];\n\n\t\tfor (const descriptor of descriptors) {\n\t\t\tif (descriptor.when === \"default\") {\n\t\t\t\tthis.defaultItem = { descriptor, visible: true };\n\t\t\t} else {\n\t\t\t\tconst visible = descriptor.when\n\t\t\t\t\t? this.contextKeyService.contextMatchesRules(\n\t\t\t\t\t\t\tdescriptor.when,\n\t\t\t\t\t\t)\n\t\t\t\t\t: true;\n\t\t\t\tthis.items.push({ descriptor, visible });\n\t\t\t}\n\t\t}\n\n\t\tthis.render();\n\t}\n\n\tprivate onDidChangeContext(): void {\n\t\tlet didChange = false;\n\n\t\tfor (const item of this.items) {\n\t\t\tif (!item.descriptor.when || item.descriptor.when === \"default\") {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst visible = this.contextKeyService.contextMatchesRules(\n\t\t\t\titem.descriptor.when,\n\t\t\t);\n\n\t\t\tif (item.visible === visible) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\titem.visible = visible;\n\t\t\tdidChange = true;\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.render();\n\t\t}\n\t}\n\n\tprivate render(): void {\n\t\tthis.renderDisposables.clear();\n\t\tthis.element!.innerText = \"\";\n\n\t\tconst contents = this.getContentDescriptors();\n\n\t\tif (contents.length === 0) {\n\t\t\tthis.container.classList.remove(\"welcome\");\n\t\t\tthis.scrollableElement!.scanDomNode();\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const { content, precondition } of contents) {\n\t\t\tconst lines = content.split(\"\\n\");\n\n\t\t\tfor (let line of lines) {\n\t\t\t\tline = line.trim();\n\n\t\t\t\tif (!line) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst linkedText = parseLinkedText(line);\n\n\t\t\t\tif (\n\t\t\t\t\tlinkedText.nodes.length === 1 &&\n\t\t\t\t\ttypeof linkedText.nodes[0] !== \"string\"\n\t\t\t\t) {\n\t\t\t\t\tconst node = linkedText.nodes[0];\n\t\t\t\t\tconst buttonContainer = append(\n\t\t\t\t\t\tthis.element!,\n\t\t\t\t\t\t$(\".button-container\"),\n\t\t\t\t\t);\n\t\t\t\t\tconst button = new Button(buttonContainer, {\n\t\t\t\t\t\ttitle: node.title,\n\t\t\t\t\t\tsupportIcons: true,\n\t\t\t\t\t\t...defaultButtonStyles,\n\t\t\t\t\t});\n\t\t\t\t\tbutton.label = node.label;\n\t\t\t\t\tbutton.onDidClick(\n\t\t\t\t\t\t(_) => {\n\t\t\t\t\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\t\t\t\t\t{ viewId: string; uri: string },\n\t\t\t\t\t\t\t\tWelcomeActionClassification\n\t\t\t\t\t\t\t>(\"views.welcomeAction\", {\n\t\t\t\t\t\t\t\tviewId: this.delegate.id,\n\t\t\t\t\t\t\t\turi: node.href,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tthis.openerService.open(node.href, {\n\t\t\t\t\t\t\t\tallowCommands: true,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tthis.renderDisposables,\n\t\t\t\t\t);\n\t\t\t\t\tthis.renderDisposables.add(button);\n\n\t\t\t\t\tif (precondition) {\n\t\t\t\t\t\tconst updateEnablement = () =>\n\t\t\t\t\t\t\t(button.enabled =\n\t\t\t\t\t\t\t\tthis.contextKeyService.contextMatchesRules(\n\t\t\t\t\t\t\t\t\tprecondition,\n\t\t\t\t\t\t\t\t));\n\t\t\t\t\t\tupdateEnablement();\n\n\t\t\t\t\t\tconst keys = new Set(precondition.keys());\n\t\t\t\t\t\tconst onDidChangeContext = Event.filter(\n\t\t\t\t\t\t\tthis.contextKeyService.onDidChangeContext,\n\t\t\t\t\t\t\t(e) => e.affectsSome(keys),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tonDidChangeContext(\n\t\t\t\t\t\t\tupdateEnablement,\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\tthis.renderDisposables,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst p = append(this.element!, $(\"p\"));\n\n\t\t\t\t\tfor (const node of linkedText.nodes) {\n\t\t\t\t\t\tif (typeof node === \"string\") {\n\t\t\t\t\t\t\tappend(p, document.createTextNode(node));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst link = this.renderDisposables.add(\n\t\t\t\t\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\t\t\t\t\tLink,\n\t\t\t\t\t\t\t\t\tp,\n\t\t\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tprecondition &&\n\t\t\t\t\t\t\t\tnode.href.startsWith(\"command:\")\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tconst updateEnablement = () =>\n\t\t\t\t\t\t\t\t\t(link.enabled =\n\t\t\t\t\t\t\t\t\t\tthis.contextKeyService.contextMatchesRules(\n\t\t\t\t\t\t\t\t\t\t\tprecondition,\n\t\t\t\t\t\t\t\t\t\t));\n\t\t\t\t\t\t\t\tupdateEnablement();\n\n\t\t\t\t\t\t\t\tconst keys = new Set(precondition.keys());\n\t\t\t\t\t\t\t\tconst onDidChangeContext = Event.filter(\n\t\t\t\t\t\t\t\t\tthis.contextKeyService.onDidChangeContext,\n\t\t\t\t\t\t\t\t\t(e) => e.affectsSome(keys),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tonDidChangeContext(\n\t\t\t\t\t\t\t\t\tupdateEnablement,\n\t\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\t\tthis.renderDisposables,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.container.classList.add(\"welcome\");\n\t\tthis.scrollableElement!.scanDomNode();\n\t}\n\n\tprivate getContentDescriptors(): IViewContentDescriptor[] {\n\t\tconst visibleItems = this.items.filter((v) => v.visible);\n\n\t\tif (visibleItems.length === 0 && this.defaultItem) {\n\t\t\treturn [this.defaultItem.descriptor];\n\t\t}\n\n\t\treturn visibleItems.map((v) => v.descriptor);\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables.dispose();\n\t}\n}\n\nexport abstract class ViewPane extends Pane implements IView {\n\tprivate static readonly AlwaysShowActionsConfig =\n\t\t\"workbench.view.alwaysShowHeaderActions\";\n\n\tprivate _onDidFocus = this._register(new Emitter<void>());\n\treadonly onDidFocus: Event<void> = this._onDidFocus.event;\n\n\tprivate _onDidBlur = this._register(new Emitter<void>());\n\treadonly onDidBlur: Event<void> = this._onDidBlur.event;\n\n\tprivate _onDidChangeBodyVisibility = this._register(new Emitter<boolean>());\n\treadonly onDidChangeBodyVisibility: Event<boolean> =\n\t\tthis._onDidChangeBodyVisibility.event;\n\n\tprotected _onDidChangeTitleArea = this._register(new Emitter<void>());\n\treadonly onDidChangeTitleArea: Event<void> =\n\t\tthis._onDidChangeTitleArea.event;\n\n\tprotected _onDidChangeViewWelcomeState = this._register(\n\t\tnew Emitter<void>(),\n\t);\n\treadonly onDidChangeViewWelcomeState: Event<void> =\n\t\tthis._onDidChangeViewWelcomeState.event;\n\n\tprivate _isVisible = false;\n\treadonly id: string;\n\n\tprivate _title: string;\n\tpublic get title(): string {\n\t\treturn this._title;\n\t}\n\n\tprivate _titleDescription: string | undefined;\n\tpublic get titleDescription(): string | undefined {\n\t\treturn this._titleDescription;\n\t}\n\n\tprivate _singleViewPaneContainerTitle: string | undefined;\n\tpublic get singleViewPaneContainerTitle(): string | undefined {\n\t\treturn this._singleViewPaneContainerTitle;\n\t}\n\n\treadonly menuActions: CompositeMenuActions;\n\n\tprivate progressBar!: ProgressBar;\n\tprivate progressIndicator!: IProgressIndicator;\n\n\tprivate toolbar?: WorkbenchToolBar;\n\tprivate readonly showActions: ViewPaneShowActions;\n\tprivate headerContainer?: HTMLElement;\n\tprivate titleContainer?: HTMLElement;\n\tprivate titleContainerHover?: IManagedHover;\n\tprivate titleDescriptionContainer?: HTMLElement;\n\tprivate titleDescriptionContainerHover?: IManagedHover;\n\tprivate iconContainer?: HTMLElement;\n\tprivate iconContainerHover?: IManagedHover;\n\tprotected twistiesContainer?: HTMLElement;\n\tprivate viewWelcomeController!: ViewWelcomeController;\n\n\tprotected readonly scopedContextKeyService: IContextKeyService;\n\n\tconstructor(\n\t\toptions: IViewPaneOptions,\n\t\t@IKeybindingService protected keybindingService: IKeybindingService,\n\t\t@IContextMenuService protected contextMenuService: IContextMenuService,\n\t\t@IConfigurationService protected readonly configurationService: IConfigurationService,\n\t\t@IContextKeyService protected contextKeyService: IContextKeyService,\n\t\t@IViewDescriptorService protected viewDescriptorService: IViewDescriptorService,\n\t\t@IInstantiationService protected instantiationService: IInstantiationService,\n\t\t@IOpenerService protected openerService: IOpenerService,\n\t\t@IThemeService protected themeService: IThemeService,\n\t\t@ITelemetryService protected telemetryService: ITelemetryService,\n\t\t@IHoverService protected readonly hoverService: IHoverService,\n\t\tprotected readonly accessibleViewInformationService?: IAccessibleViewInformationService\n\t) {\n\t\tsuper({ ...options, ...{ orientation: viewDescriptorService.getViewLocationById(options.id) === ViewContainerLocation.Panel ? Orientation.HORIZONTAL : Orientation.VERTICAL } });\n\n\t\tthis.id = options.id;\n\t\tthis._title = options.title;\n\t\tthis._titleDescription = options.titleDescription;\n\t\tthis._singleViewPaneContainerTitle = options.singleViewPaneContainerTitle;\n\t\tthis.showActions = options.showActions ?? ViewPaneShowActions.Default;\n\n\t\tthis.scopedContextKeyService = this._register(contextKeyService.createScoped(this.element));\n\t\tthis.scopedContextKeyService.createKey('view', this.id);\n\t\tconst viewLocationKey = this.scopedContextKeyService.createKey('viewLocation', ViewContainerLocationToString(viewDescriptorService.getViewLocationById(this.id)!));\n\t\tthis._register(Event.filter(viewDescriptorService.onDidChangeLocation, e => e.views.some(view => view.id === this.id))(() => viewLocationKey.set(ViewContainerLocationToString(viewDescriptorService.getViewLocationById(this.id)!))));\n\n\t\tconst childInstantiationService = this._register(this.instantiationService.createChild(new ServiceCollection([IContextKeyService, this.scopedContextKeyService])));\n\t\tthis.menuActions = this._register(childInstantiationService.createInstance(CompositeMenuActions, options.titleMenuId ?? MenuId.ViewTitle, MenuId.ViewTitleContext, { shouldForwardArgs: !options.donotForwardArgs, renderShortTitle: true }));\n\t\tthis._register(this.menuActions.onDidChange(() => this.updateActions()));\n\t}\n\n\toverride get headerVisible(): boolean {\n\t\treturn super.headerVisible;\n\t}\n\n\toverride set headerVisible(visible: boolean) {\n\t\tsuper.headerVisible = visible;\n\t\tthis.element.classList.toggle(\"merged-header\", !visible);\n\t}\n\n\tsetVisible(visible: boolean): void {\n\t\tif (this._isVisible !== visible) {\n\t\t\tthis._isVisible = visible;\n\n\t\t\tif (this.isExpanded()) {\n\t\t\t\tthis._onDidChangeBodyVisibility.fire(visible);\n\t\t\t}\n\t\t}\n\t}\n\n\tisVisible(): boolean {\n\t\treturn this._isVisible;\n\t}\n\n\tisBodyVisible(): boolean {\n\t\treturn this._isVisible && this.isExpanded();\n\t}\n\n\toverride setExpanded(expanded: boolean): boolean {\n\t\tconst changed = super.setExpanded(expanded);\n\t\tif (changed) {\n\t\t\tthis._onDidChangeBodyVisibility.fire(expanded);\n\t\t}\n\t\tthis.updateTwistyIcon();\n\t\treturn changed;\n\t}\n\n\toverride render(): void {\n\t\tsuper.render();\n\n\t\tconst focusTracker = trackFocus(this.element);\n\t\tthis._register(focusTracker);\n\t\tthis._register(focusTracker.onDidFocus(() => this._onDidFocus.fire()));\n\t\tthis._register(focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n\t}\n\n\tprotected renderHeader(container: HTMLElement): void {\n\t\tthis.headerContainer = container;\n\n\t\tthis.twistiesContainer = append(\n\t\t\tcontainer,\n\t\t\t$(\n\t\t\t\t`.twisty-container${ThemeIcon.asCSSSelector(this.getTwistyIcon(this.isExpanded()))}`,\n\t\t\t),\n\t\t);\n\n\t\tthis.renderHeaderTitle(container, this.title);\n\n\t\tconst actions = append(container, $(\".actions\"));\n\t\tactions.classList.toggle(\n\t\t\t\"show-always\",\n\t\t\tthis.showActions === ViewPaneShowActions.Always,\n\t\t);\n\t\tactions.classList.toggle(\n\t\t\t\"show-expanded\",\n\t\t\tthis.showActions === ViewPaneShowActions.WhenExpanded,\n\t\t);\n\t\tthis.toolbar = this.instantiationService.createInstance(\n\t\t\tWorkbenchToolBar,\n\t\t\tactions,\n\t\t\t{\n\t\t\t\torientation: ActionsOrientation.HORIZONTAL,\n\t\t\t\tactionViewItemProvider: (action, options) =>\n\t\t\t\t\tthis.getActionViewItem(action, options),\n\t\t\t\tariaLabel: nls.localize(\n\t\t\t\t\t\"viewToolbarAriaLabel\",\n\t\t\t\t\t\"{0} actions\",\n\t\t\t\t\tthis.title,\n\t\t\t\t),\n\t\t\t\tgetKeyBinding: (action) =>\n\t\t\t\t\tthis.keybindingService.lookupKeybinding(action.id),\n\t\t\t\trenderDropdownAsChildElement: true,\n\t\t\t\tactionRunner: this.getActionRunner(),\n\t\t\t\tresetMenu: this.menuActions.menuId,\n\t\t\t},\n\t\t);\n\n\t\tthis._register(this.toolbar);\n\t\tthis.setActions();\n\n\t\tthis._register(\n\t\t\taddDisposableListener(actions, EventType.CLICK, (e) =>\n\t\t\t\te.preventDefault(),\n\t\t\t),\n\t\t);\n\n\t\tconst viewContainerModel =\n\t\t\tthis.viewDescriptorService.getViewContainerByViewId(this.id);\n\t\tif (viewContainerModel) {\n\t\t\tthis._register(\n\t\t\t\tthis.viewDescriptorService\n\t\t\t\t\t.getViewContainerModel(viewContainerModel)\n\t\t\t\t\t.onDidChangeContainerInfo(({ title }) =>\n\t\t\t\t\t\tthis.updateTitle(this.title),\n\t\t\t\t\t),\n\t\t\t);\n\t\t} else {\n\t\t\tconsole.error(`View container model not found for view ${this.id}`);\n\t\t}\n\n\t\tconst onDidRelevantConfigurationChange = Event.filter(\n\t\t\tthis.configurationService.onDidChangeConfiguration,\n\t\t\t(e) => e.affectsConfiguration(ViewPane.AlwaysShowActionsConfig),\n\t\t);\n\t\tthis._register(\n\t\t\tonDidRelevantConfigurationChange(\n\t\t\t\tthis.updateActionsVisibility,\n\t\t\t\tthis,\n\t\t\t),\n\t\t);\n\t\tthis.updateActionsVisibility();\n\t}\n\n\tprotected override updateHeader(): void {\n\t\tsuper.updateHeader();\n\t\tthis.updateTwistyIcon();\n\t}\n\n\tprivate updateTwistyIcon(): void {\n\t\tif (this.twistiesContainer) {\n\t\t\tthis.twistiesContainer.classList.remove(\n\t\t\t\t...ThemeIcon.asClassNameArray(\n\t\t\t\t\tthis.getTwistyIcon(!this._expanded),\n\t\t\t\t),\n\t\t\t);\n\t\t\tthis.twistiesContainer.classList.add(\n\t\t\t\t...ThemeIcon.asClassNameArray(\n\t\t\t\t\tthis.getTwistyIcon(this._expanded),\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t}\n\n\tprotected getTwistyIcon(expanded: boolean): ThemeIcon {\n\t\treturn expanded\n\t\t\t? viewPaneContainerExpandedIcon\n\t\t\t: viewPaneContainerCollapsedIcon;\n\t}\n\n\toverride style(styles: IPaneStyles): void {\n\t\tsuper.style(styles);\n\n\t\tconst icon = this.getIcon();\n\t\tif (this.iconContainer) {\n\t\t\tconst fgColor = asCssValueWithDefault(\n\t\t\t\tstyles.headerForeground,\n\t\t\t\tasCssVariable(foreground),\n\t\t\t);\n\t\t\tif (URI.isUri(icon)) {\n\t\t\t\t// Apply background color to activity bar item provided with iconUrls\n\t\t\t\tthis.iconContainer.style.backgroundColor = fgColor;\n\t\t\t\tthis.iconContainer.style.color = \"\";\n\t\t\t} else {\n\t\t\t\t// Apply foreground color to activity bar items provided with codicons\n\t\t\t\tthis.iconContainer.style.color = fgColor;\n\t\t\t\tthis.iconContainer.style.backgroundColor = \"\";\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getIcon(): ThemeIcon | URI {\n\t\treturn (\n\t\t\tthis.viewDescriptorService.getViewDescriptorById(this.id)\n\t\t\t\t?.containerIcon || defaultViewIcon\n\t\t);\n\t}\n\n\tprotected renderHeaderTitle(container: HTMLElement, title: string): void {\n\t\tthis.iconContainer = append(container, $(\".icon\", undefined));\n\t\tconst icon = this.getIcon();\n\n\t\tlet cssClass: string | undefined;\n\t\tif (URI.isUri(icon)) {\n\t\t\tcssClass = `view-${this.id.replace(/[.:]/g, \"-\")}`;\n\t\t\tconst iconClass = `.pane-header .icon.${cssClass}`;\n\n\t\t\tcreateCSSRule(\n\t\t\t\ticonClass,\n\t\t\t\t`\n\t\t\t\tmask: ${asCSSUrl(icon)} no-repeat 50% 50%;\n\t\t\t\tmask-size: 24px;\n\t\t\t\t-webkit-mask: ${asCSSUrl(icon)} no-repeat 50% 50%;\n\t\t\t\t-webkit-mask-size: 16px;\n\t\t\t`,\n\t\t\t);\n\t\t} else if (ThemeIcon.isThemeIcon(icon)) {\n\t\t\tcssClass = ThemeIcon.asClassName(icon);\n\t\t}\n\n\t\tif (cssClass) {\n\t\t\tthis.iconContainer.classList.add(...cssClass.split(\" \"));\n\t\t}\n\n\t\tconst calculatedTitle = this.calculateTitle(title);\n\t\tthis.titleContainer = append(\n\t\t\tcontainer,\n\t\t\t$(\"h3.title\", {}, calculatedTitle),\n\t\t);\n\t\tthis.titleContainerHover = this._register(\n\t\t\tthis.hoverService.setupManagedHover(\n\t\t\t\tgetDefaultHoverDelegate(\"mouse\"),\n\t\t\t\tthis.titleContainer,\n\t\t\t\tcalculatedTitle,\n\t\t\t),\n\t\t);\n\n\t\tif (this._titleDescription) {\n\t\t\tthis.setTitleDescription(this._titleDescription);\n\t\t}\n\n\t\tthis.iconContainerHover = this._register(\n\t\t\tthis.hoverService.setupManagedHover(\n\t\t\t\tgetDefaultHoverDelegate(\"mouse\"),\n\t\t\t\tthis.iconContainer,\n\t\t\t\tcalculatedTitle,\n\t\t\t),\n\t\t);\n\t\tthis.iconContainer.setAttribute(\n\t\t\t\"aria-label\",\n\t\t\tthis._getAriaLabel(calculatedTitle),\n\t\t);\n\t}\n\n\tprivate _getAriaLabel(title: string): string {\n\t\tconst viewHasAccessibilityHelpContent =\n\t\t\tthis.viewDescriptorService.getViewDescriptorById(\n\t\t\t\tthis.id,\n\t\t\t)?.accessibilityHelpContent;\n\t\tconst accessibleViewHasShownForView =\n\t\t\tthis.accessibleViewInformationService?.hasShownAccessibleView(\n\t\t\t\tthis.id,\n\t\t\t);\n\t\tif (!viewHasAccessibilityHelpContent || accessibleViewHasShownForView) {\n\t\t\treturn title;\n\t\t}\n\n\t\treturn nls.localize(\n\t\t\t\"viewAccessibilityHelp\",\n\t\t\t\"Use Alt+F1 for accessibility help {0}\",\n\t\t\ttitle,\n\t\t);\n\t}\n\n\tprotected updateTitle(title: string): void {\n\t\tconst calculatedTitle = this.calculateTitle(title);\n\t\tif (this.titleContainer) {\n\t\t\tthis.titleContainer.textContent = calculatedTitle;\n\t\t\tthis.titleContainerHover?.update(calculatedTitle);\n\t\t}\n\n\t\tif (this.iconContainer) {\n\t\t\tthis.iconContainerHover?.update(calculatedTitle);\n\t\t\tthis.iconContainer.setAttribute(\n\t\t\t\t\"aria-label\",\n\t\t\t\tthis._getAriaLabel(calculatedTitle),\n\t\t\t);\n\t\t}\n\n\t\tthis._title = title;\n\t\tthis._onDidChangeTitleArea.fire();\n\t}\n\n\tprivate setTitleDescription(description: string | undefined) {\n\t\tif (this.titleDescriptionContainer) {\n\t\t\tthis.titleDescriptionContainer.textContent = description ?? \"\";\n\t\t\tthis.titleDescriptionContainerHover?.update(description ?? \"\");\n\t\t} else if (description && this.titleContainer) {\n\t\t\tthis.titleDescriptionContainer = after(\n\t\t\t\tthis.titleContainer,\n\t\t\t\t$(\"span.description\", {}, description),\n\t\t\t);\n\t\t\tthis.titleDescriptionContainerHover = this._register(\n\t\t\t\tthis.hoverService.setupManagedHover(\n\t\t\t\t\tgetDefaultHoverDelegate(\"mouse\"),\n\t\t\t\t\tthis.titleDescriptionContainer,\n\t\t\t\t\tdescription,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t}\n\n\tprotected updateTitleDescription(description?: string | undefined): void {\n\t\tthis.setTitleDescription(description);\n\n\t\tthis._titleDescription = description;\n\t\tthis._onDidChangeTitleArea.fire();\n\t}\n\n\tprivate calculateTitle(title: string): string {\n\t\tconst viewContainer =\n\t\t\tthis.viewDescriptorService.getViewContainerByViewId(this.id)!;\n\t\tconst model =\n\t\t\tthis.viewDescriptorService.getViewContainerModel(viewContainer);\n\t\tconst viewDescriptor = this.viewDescriptorService.getViewDescriptorById(\n\t\t\tthis.id,\n\t\t);\n\t\tconst isDefault =\n\t\t\tthis.viewDescriptorService.getDefaultContainerById(this.id) ===\n\t\t\tviewContainer;\n\n\t\tif (\n\t\t\t!isDefault &&\n\t\t\tviewDescriptor?.containerTitle &&\n\t\t\tmodel.title !== viewDescriptor.containerTitle\n\t\t) {\n\t\t\treturn `${viewDescriptor.containerTitle}: ${title}`;\n\t\t}\n\n\t\treturn title;\n\t}\n\n\tprotected renderBody(container: HTMLElement): void {\n\t\tthis.viewWelcomeController = this._register(\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tViewWelcomeController,\n\t\t\t\tcontainer,\n\t\t\t\tthis,\n\t\t\t),\n\t\t);\n\t}\n\n\tprotected layoutBody(height: number, width: number): void {\n\t\tthis.viewWelcomeController.layout(height, width);\n\t}\n\n\tonDidScrollRoot() {\n\t\t// noop\n\t}\n\n\tgetProgressIndicator() {\n\t\tif (this.progressBar === undefined) {\n\t\t\t// Progress bar\n\t\t\tthis.progressBar = this._register(\n\t\t\t\tnew ProgressBar(this.element, defaultProgressBarStyles),\n\t\t\t);\n\t\t\tthis.progressBar.hide();\n\t\t}\n\n\t\tif (this.progressIndicator === undefined) {\n\t\t\tconst that = this;\n\t\t\tthis.progressIndicator = this._register(\n\t\t\t\tnew ScopedProgressIndicator(\n\t\t\t\t\tassertIsDefined(this.progressBar),\n\t\t\t\t\tnew (class extends AbstractProgressScope {\n\t\t\t\t\t\tconstructor() {\n\t\t\t\t\t\t\tsuper(that.id, that.isBodyVisible());\n\t\t\t\t\t\t\tthis._register(\n\t\t\t\t\t\t\t\tthat.onDidChangeBodyVisibility((isVisible) =>\n\t\t\t\t\t\t\t\t\tisVisible\n\t\t\t\t\t\t\t\t\t\t? this.onScopeOpened(that.id)\n\t\t\t\t\t\t\t\t\t\t: this.onScopeClosed(that.id),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t})(),\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t\treturn this.progressIndicator;\n\t}\n\n\tprotected getProgressLocation(): string {\n\t\treturn this.viewDescriptorService.getViewContainerByViewId(this.id)!.id;\n\t}\n\n\tprotected getLocationBasedColors(): IViewPaneLocationColors {\n\t\treturn getLocationBasedViewColors(\n\t\t\tthis.viewDescriptorService.getViewLocationById(this.id),\n\t\t);\n\t}\n\n\tfocus(): void {\n\t\tif (this.viewWelcomeController.enabled) {\n\t\t\tthis.viewWelcomeController.focus();\n\t\t} else if (this.element) {\n\t\t\tthis.element.focus();\n\t\t\tthis._onDidFocus.fire();\n\t\t}\n\t}\n\n\tprivate setActions(): void {\n\t\tif (this.toolbar) {\n\t\t\tconst primaryActions = [...this.menuActions.getPrimaryActions()];\n\t\t\tif (this.shouldShowFilterInHeader()) {\n\t\t\t\tprimaryActions.unshift(VIEWPANE_FILTER_ACTION);\n\t\t\t}\n\t\t\tthis.toolbar.setActions(\n\t\t\t\tprepareActions(primaryActions),\n\t\t\t\tprepareActions(this.menuActions.getSecondaryActions()),\n\t\t\t);\n\t\t\tthis.toolbar.context = this.getActionsContext();\n\t\t}\n\t}\n\n\tprivate updateActionsVisibility(): void {\n\t\tif (!this.headerContainer) {\n\t\t\treturn;\n\t\t}\n\t\tconst shouldAlwaysShowActions =\n\t\t\tthis.configurationService.getValue<boolean>(\n\t\t\t\t\"workbench.view.alwaysShowHeaderActions\",\n\t\t\t);\n\t\tthis.headerContainer.classList.toggle(\n\t\t\t\"actions-always-visible\",\n\t\t\tshouldAlwaysShowActions,\n\t\t);\n\t}\n\n\tprotected updateActions(): void {\n\t\tthis.setActions();\n\t\tthis._onDidChangeTitleArea.fire();\n\t}\n\n\tgetActionViewItem(\n\t\taction: IAction,\n\t\toptions?: IDropdownMenuActionViewItemOptions,\n\t): IActionViewItem | undefined {\n\t\tif (action.id === VIEWPANE_FILTER_ACTION.id) {\n\t\t\tconst that = this;\n\t\t\treturn new (class extends BaseActionViewItem {\n\t\t\t\tconstructor() {\n\t\t\t\t\tsuper(null, action);\n\t\t\t\t}\n\t\t\t\toverride setFocusable(): void {\n\t\t\t\t\t/* noop input elements are focusable by default */\n\t\t\t\t}\n\t\t\t\toverride get trapsArrowNavigation(): boolean {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\toverride render(container: HTMLElement): void {\n\t\t\t\t\tcontainer.classList.add(\"viewpane-filter-container\");\n\t\t\t\t\tconst filter = that.getFilterWidget()!;\n\t\t\t\t\tappend(container, filter.element);\n\t\t\t\t\tfilter.relayout();\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\t\treturn createActionViewItem(this.instantiationService, action, {\n\t\t\t...options,\n\t\t\t...{ menuAsChild: action instanceof SubmenuItemAction },\n\t\t});\n\t}\n\n\tgetActionsContext(): unknown {\n\t\treturn undefined;\n\t}\n\n\tgetActionRunner(): IActionRunner | undefined {\n\t\treturn undefined;\n\t}\n\n\tgetOptimalWidth(): number {\n\t\treturn 0;\n\t}\n\n\tsaveState(): void {\n\t\t// Subclasses to implement for saving state\n\t}\n\n\tshouldShowWelcome(): boolean {\n\t\treturn false;\n\t}\n\n\tgetFilterWidget(): FilterWidget | undefined {\n\t\treturn undefined;\n\t}\n\n\tshouldShowFilterInHeader(): boolean {\n\t\treturn false;\n\t}\n}\n\nexport abstract class FilterViewPane extends ViewPane {\n\treadonly filterWidget: FilterWidget;\n\tprivate dimension: Dimension | undefined;\n\tprivate filterContainer: HTMLElement | undefined;\n\n\tconstructor(\n\t\toptions: IFilterViewPaneOptions,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\taccessibleViewService?: IAccessibleViewInformationService,\n\t) {\n\t\tsuper(\n\t\t\toptions,\n\t\t\tkeybindingService,\n\t\t\tcontextMenuService,\n\t\t\tconfigurationService,\n\t\t\tcontextKeyService,\n\t\t\tviewDescriptorService,\n\t\t\tinstantiationService,\n\t\t\topenerService,\n\t\t\tthemeService,\n\t\t\ttelemetryService,\n\t\t\thoverService,\n\t\t\taccessibleViewService,\n\t\t);\n\t\tconst childInstantiationService = this._register(\n\t\t\tinstantiationService.createChild(\n\t\t\t\tnew ServiceCollection([\n\t\t\t\t\tIContextKeyService,\n\t\t\t\t\tthis.scopedContextKeyService,\n\t\t\t\t]),\n\t\t\t),\n\t\t);\n\t\tthis.filterWidget = this._register(\n\t\t\tchildInstantiationService.createInstance(\n\t\t\t\tFilterWidget,\n\t\t\t\toptions.filterOptions,\n\t\t\t),\n\t\t);\n\t}\n\n\toverride getFilterWidget(): FilterWidget {\n\t\treturn this.filterWidget;\n\t}\n\n\tprotected override renderBody(container: HTMLElement): void {\n\t\tsuper.renderBody(container);\n\t\tthis.filterContainer = append(\n\t\t\tcontainer,\n\t\t\t$(\".viewpane-filter-container\"),\n\t\t);\n\t}\n\n\tprotected override layoutBody(height: number, width: number): void {\n\t\tsuper.layoutBody(height, width);\n\n\t\tthis.dimension = new Dimension(width, height);\n\t\tconst wasFilterShownInHeader = !this.filterContainer?.hasChildNodes();\n\t\tconst shouldShowFilterInHeader = this.shouldShowFilterInHeader();\n\t\tif (wasFilterShownInHeader !== shouldShowFilterInHeader) {\n\t\t\tif (shouldShowFilterInHeader) {\n\t\t\t\treset(this.filterContainer!);\n\t\t\t}\n\t\t\tthis.updateActions();\n\t\t\tif (!shouldShowFilterInHeader) {\n\t\t\t\tappend(this.filterContainer!, this.filterWidget.element);\n\t\t\t}\n\t\t}\n\t\tif (!shouldShowFilterInHeader) {\n\t\t\theight = height - 44;\n\t\t}\n\t\tthis.filterWidget.layout(width);\n\t\tthis.layoutBodyContent(height, width);\n\t}\n\n\toverride shouldShowFilterInHeader(): boolean {\n\t\treturn !(\n\t\t\tthis.dimension &&\n\t\t\tthis.dimension.width < 600 &&\n\t\t\tthis.dimension.height > 100\n\t\t);\n\t}\n\n\tprotected abstract layoutBodyContent(height: number, width: number): void;\n}\n\nexport interface IViewPaneLocationColors {\n\tbackground: string;\n\toverlayBackground: string;\n\tlistOverrideStyles: PartialExcept<\n\t\tIListStyles,\n\t\t\"listBackground\" | \"treeStickyScrollBackground\"\n\t>;\n}\n\nexport function getLocationBasedViewColors(\n\tlocation: ViewContainerLocation | null,\n): IViewPaneLocationColors {\n\tlet background,\n\t\toverlayBackground,\n\t\tstickyScrollBackground,\n\t\tstickyScrollBorder,\n\t\tstickyScrollShadow;\n\n\tswitch (location) {\n\t\tcase ViewContainerLocation.Panel:\n\t\t\tbackground = PANEL_BACKGROUND;\n\t\t\toverlayBackground = PANEL_SECTION_DRAG_AND_DROP_BACKGROUND;\n\t\t\tstickyScrollBackground = PANEL_STICKY_SCROLL_BACKGROUND;\n\t\t\tstickyScrollBorder = PANEL_STICKY_SCROLL_BORDER;\n\t\t\tstickyScrollShadow = PANEL_STICKY_SCROLL_SHADOW;\n\t\t\tbreak;\n\n\t\tcase ViewContainerLocation.Sidebar:\n\t\tcase ViewContainerLocation.AuxiliaryBar:\n\t\tdefault:\n\t\t\tbackground = SIDE_BAR_BACKGROUND;\n\t\t\toverlayBackground = SIDE_BAR_DRAG_AND_DROP_BACKGROUND;\n\t\t\tstickyScrollBackground = SIDE_BAR_STICKY_SCROLL_BACKGROUND;\n\t\t\tstickyScrollBorder = SIDE_BAR_STICKY_SCROLL_BORDER;\n\t\t\tstickyScrollShadow = SIDE_BAR_STICKY_SCROLL_SHADOW;\n\t}\n\n\treturn {\n\t\tbackground,\n\t\toverlayBackground,\n\t\tlistOverrideStyles: {\n\t\t\tlistBackground: background,\n\t\t\ttreeStickyScrollBackground: stickyScrollBackground,\n\t\t\ttreeStickyScrollBorder: stickyScrollBorder,\n\t\t\ttreeStickyScrollShadow: stickyScrollShadow,\n\t\t},\n\t};\n}\n\nexport abstract class ViewAction<T extends IView> extends Action2 {\n\toverride readonly desc: Readonly<IAction2Options> & { viewId: string };\n\tconstructor(desc: Readonly<IAction2Options> & { viewId: string }) {\n\t\tsuper(desc);\n\t\tthis.desc = desc;\n\t}\n\n\trun(accessor: ServicesAccessor, ...args: any[]) {\n\t\tconst view = accessor\n\t\t\t.get(IViewsService)\n\t\t\t.getActiveViewWithId(this.desc.viewId);\n\t\tif (view) {\n\t\t\treturn this.runInView(accessor, <T>view, ...args);\n\t\t}\n\t}\n\n\tabstract runInView(\n\t\taccessor: ServicesAccessor,\n\t\tview: T,\n\t\t...args: any[]\n\t): any;\n}\n"],
  "mappings": "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",
  "names": ["ViewPaneShowActions", "$"]
}
