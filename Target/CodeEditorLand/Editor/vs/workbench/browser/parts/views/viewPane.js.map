{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/views/viewPane.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './media/paneviewlet.css';\nimport * as nls from '../../../../nls.js';\nimport { Event, Emitter } from '../../../../base/common/event.js';\nimport { asCssVariable, foreground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { after, append, $, trackFocus, EventType, addDisposableListener, createCSSRule, asCSSUrl, Dimension, reset, asCssValueWithDefault } from '../../../../base/browser/dom.js';\nimport { DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { Action, IAction, IActionRunner } from '../../../../base/common/actions.js';\nimport { ActionsOrientation, IActionViewItem, prepareActions } from '../../../../base/browser/ui/actionbar/actionbar.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { IPaneOptions, Pane, IPaneStyles } from '../../../../base/browser/ui/splitview/paneview.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { Extensions as ViewContainerExtensions, IView, IViewDescriptorService, ViewContainerLocation, IViewsRegistry, IViewContentDescriptor, defaultViewIcon, ViewContainerLocationToString } from '../../../common/views.js';\nimport { IViewsService } from '../../../services/views/common/viewsService.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { assertIsDefined, PartialExcept } from '../../../../base/common/types.js';\nimport { IInstantiationService, ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { MenuId, Action2, IAction2Options, SubmenuItemAction } from '../../../../platform/actions/common/actions.js';\nimport { createActionViewItem } from '../../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { parseLinkedText } from '../../../../base/common/linkedText.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { Button } from '../../../../base/browser/ui/button/button.js';\nimport { Link } from '../../../../platform/opener/browser/link.js';\nimport { Orientation } from '../../../../base/browser/ui/sash/sash.js';\nimport { ProgressBar } from '../../../../base/browser/ui/progressbar/progressbar.js';\nimport { AbstractProgressScope, ScopedProgressIndicator } from '../../../services/progress/browser/progressIndicator.js';\nimport { IProgressIndicator } from '../../../../platform/progress/common/progress.js';\nimport { DomScrollableElement } from '../../../../base/browser/ui/scrollbar/scrollableElement.js';\nimport { ScrollbarVisibility } from '../../../../base/common/scrollable.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { CompositeMenuActions } from '../../actions.js';\nimport { IDropdownMenuActionViewItemOptions } from '../../../../base/browser/ui/dropdown/dropdownActionViewItem.js';\nimport { WorkbenchToolBar } from '../../../../platform/actions/browser/toolbar.js';\nimport { FilterWidget, IFilterWidgetOptions } from './viewFilter.js';\nimport { BaseActionViewItem } from '../../../../base/browser/ui/actionbar/actionViewItems.js';\nimport { ServiceCollection } from '../../../../platform/instantiation/common/serviceCollection.js';\nimport { defaultButtonStyles, defaultProgressBarStyles } from '../../../../platform/theme/browser/defaultStyles.js';\nimport { getDefaultHoverDelegate } from '../../../../base/browser/ui/hover/hoverDelegateFactory.js';\nimport { ILifecycleService } from '../../../services/lifecycle/common/lifecycle.js';\nimport type { IManagedHover } from '../../../../base/browser/ui/hover/hover.js';\nimport { IHoverService } from '../../../../platform/hover/browser/hover.js';\nimport { IListStyles } from '../../../../base/browser/ui/list/listWidget.js';\nimport { PANEL_BACKGROUND, PANEL_SECTION_DRAG_AND_DROP_BACKGROUND, PANEL_STICKY_SCROLL_BACKGROUND, PANEL_STICKY_SCROLL_BORDER, PANEL_STICKY_SCROLL_SHADOW, SIDE_BAR_BACKGROUND, SIDE_BAR_DRAG_AND_DROP_BACKGROUND, SIDE_BAR_STICKY_SCROLL_BACKGROUND, SIDE_BAR_STICKY_SCROLL_BORDER, SIDE_BAR_STICKY_SCROLL_SHADOW } from '../../../common/theme.js';\nimport { IAccessibleViewInformationService } from '../../../services/accessibility/common/accessibleViewInformationService.js';\n\nexport enum ViewPaneShowActions {\n\t/** Show the actions when the view is hovered. This is the default behavior. */\n\tDefault,\n\n\t/** Always shows the actions when the view is expanded */\n\tWhenExpanded,\n\n\t/** Always shows the actions */\n\tAlways,\n}\n\nexport interface IViewPaneOptions extends IPaneOptions {\n\treadonly id: string;\n\treadonly showActions?: ViewPaneShowActions;\n\treadonly titleMenuId?: MenuId;\n\treadonly donotForwardArgs?: boolean;\n\t// The title of the container pane when it is merged with the view container\n\treadonly singleViewPaneContainerTitle?: string;\n}\n\nexport interface IFilterViewPaneOptions extends IViewPaneOptions {\n\tfilterOptions: IFilterWidgetOptions;\n}\n\nexport const VIEWPANE_FILTER_ACTION = new Action('viewpane.action.filter');\n\ntype WelcomeActionClassification = {\n\towner: 'joaomoreno';\n\tviewId: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'The view ID in which the welcome view button was clicked.' };\n\turi: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'The URI of the command ran by the result of clicking the button.' };\n\tcomment: 'This is used to know when users click on the welcome view buttons.';\n};\n\nconst viewPaneContainerExpandedIcon = registerIcon('view-pane-container-expanded', Codicon.chevronDown, nls.localize('viewPaneContainerExpandedIcon', 'Icon for an expanded view pane container.'));\nconst viewPaneContainerCollapsedIcon = registerIcon('view-pane-container-collapsed', Codicon.chevronRight, nls.localize('viewPaneContainerCollapsedIcon', 'Icon for a collapsed view pane container.'));\n\nconst viewsRegistry = Registry.as<IViewsRegistry>(ViewContainerExtensions.ViewsRegistry);\n\ninterface IItem {\n\treadonly descriptor: IViewContentDescriptor;\n\tvisible: boolean;\n}\n\ninterface IViewWelcomeDelegate {\n\treadonly id: string;\n\treadonly onDidChangeViewWelcomeState: Event<void>;\n\tshouldShowWelcome(): boolean;\n}\n\nclass ViewWelcomeController {\n\n\tprivate defaultItem: IItem | undefined;\n\tprivate items: IItem[] = [];\n\n\tget enabled(): boolean { return this._enabled; }\n\tprivate _enabled: boolean = false;\n\tprivate element: HTMLElement | undefined;\n\tprivate scrollableElement: DomScrollableElement | undefined;\n\n\tprivate readonly disposables = new DisposableStore();\n\tprivate readonly enabledDisposables = this.disposables.add(new DisposableStore());\n\tprivate readonly renderDisposables = this.disposables.add(new DisposableStore());\n\n\tconstructor(\n\t\tprivate readonly container: HTMLElement,\n\t\tprivate readonly delegate: IViewWelcomeDelegate,\n\t\t@IInstantiationService private instantiationService: IInstantiationService,\n\t\t@IOpenerService protected openerService: IOpenerService,\n\t\t@ITelemetryService protected telemetryService: ITelemetryService,\n\t\t@IContextKeyService private contextKeyService: IContextKeyService,\n\t\t@ILifecycleService lifecycleService: ILifecycleService\n\t) {\n\t\tthis.disposables.add(Event.runAndSubscribe(this.delegate.onDidChangeViewWelcomeState, () => this.onDidChangeViewWelcomeState()));\n\t\tthis.disposables.add(lifecycleService.onWillShutdown(() => this.dispose())); // Fixes https://github.com/microsoft/vscode/issues/208878\n\t}\n\n\tlayout(height: number, width: number) {\n\t\tif (!this._enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.element!.style.height = `${height}px`;\n\t\tthis.element!.style.width = `${width}px`;\n\t\tthis.element!.classList.toggle('wide', width > 640);\n\t\tthis.scrollableElement!.scanDomNode();\n\t}\n\n\tfocus() {\n\t\tif (!this._enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.element!.focus();\n\t}\n\n\tprivate onDidChangeViewWelcomeState(): void {\n\t\tconst enabled = this.delegate.shouldShowWelcome();\n\n\t\tif (this._enabled === enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._enabled = enabled;\n\n\t\tif (!enabled) {\n\t\t\tthis.enabledDisposables.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.container.classList.add('welcome');\n\t\tconst viewWelcomeContainer = append(this.container, $('.welcome-view'));\n\t\tthis.element = $('.welcome-view-content', { tabIndex: 0 });\n\t\tthis.scrollableElement = new DomScrollableElement(this.element, { alwaysConsumeMouseWheel: true, horizontal: ScrollbarVisibility.Hidden, vertical: ScrollbarVisibility.Visible, });\n\t\tappend(viewWelcomeContainer, this.scrollableElement.getDomNode());\n\n\t\tthis.enabledDisposables.add(toDisposable(() => {\n\t\t\tthis.container.classList.remove('welcome');\n\t\t\tthis.scrollableElement!.dispose();\n\t\t\tviewWelcomeContainer.remove();\n\t\t\tthis.scrollableElement = undefined;\n\t\t\tthis.element = undefined;\n\t\t}));\n\n\t\tthis.contextKeyService.onDidChangeContext(this.onDidChangeContext, this, this.enabledDisposables);\n\t\tEvent.chain(viewsRegistry.onDidChangeViewWelcomeContent, $ => $.filter(id => id === this.delegate.id))\n\t\t\t(this.onDidChangeViewWelcomeContent, this, this.enabledDisposables);\n\t\tthis.onDidChangeViewWelcomeContent();\n\t}\n\n\tprivate onDidChangeViewWelcomeContent(): void {\n\t\tconst descriptors = viewsRegistry.getViewWelcomeContent(this.delegate.id);\n\n\t\tthis.items = [];\n\n\t\tfor (const descriptor of descriptors) {\n\t\t\tif (descriptor.when === 'default') {\n\t\t\t\tthis.defaultItem = { descriptor, visible: true };\n\t\t\t} else {\n\t\t\t\tconst visible = descriptor.when ? this.contextKeyService.contextMatchesRules(descriptor.when) : true;\n\t\t\t\tthis.items.push({ descriptor, visible });\n\t\t\t}\n\t\t}\n\n\t\tthis.render();\n\t}\n\n\tprivate onDidChangeContext(): void {\n\t\tlet didChange = false;\n\n\t\tfor (const item of this.items) {\n\t\t\tif (!item.descriptor.when || item.descriptor.when === 'default') {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst visible = this.contextKeyService.contextMatchesRules(item.descriptor.when);\n\n\t\t\tif (item.visible === visible) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\titem.visible = visible;\n\t\t\tdidChange = true;\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.render();\n\t\t}\n\t}\n\n\tprivate render(): void {\n\t\tthis.renderDisposables.clear();\n\t\tthis.element!.innerText = '';\n\n\t\tconst contents = this.getContentDescriptors();\n\n\t\tif (contents.length === 0) {\n\t\t\tthis.container.classList.remove('welcome');\n\t\t\tthis.scrollableElement!.scanDomNode();\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const { content, precondition } of contents) {\n\t\t\tconst lines = content.split('\\n');\n\n\t\t\tfor (let line of lines) {\n\t\t\t\tline = line.trim();\n\n\t\t\t\tif (!line) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst linkedText = parseLinkedText(line);\n\n\t\t\t\tif (linkedText.nodes.length === 1 && typeof linkedText.nodes[0] !== 'string') {\n\t\t\t\t\tconst node = linkedText.nodes[0];\n\t\t\t\t\tconst buttonContainer = append(this.element!, $('.button-container'));\n\t\t\t\t\tconst button = new Button(buttonContainer, { title: node.title, supportIcons: true, ...defaultButtonStyles });\n\t\t\t\t\tbutton.label = node.label;\n\t\t\t\t\tbutton.onDidClick(_ => {\n\t\t\t\t\t\tthis.telemetryService.publicLog2<{ viewId: string; uri: string }, WelcomeActionClassification>('views.welcomeAction', { viewId: this.delegate.id, uri: node.href });\n\t\t\t\t\t\tthis.openerService.open(node.href, { allowCommands: true });\n\t\t\t\t\t}, null, this.renderDisposables);\n\t\t\t\t\tthis.renderDisposables.add(button);\n\n\t\t\t\t\tif (precondition) {\n\t\t\t\t\t\tconst updateEnablement = () => button.enabled = this.contextKeyService.contextMatchesRules(precondition);\n\t\t\t\t\t\tupdateEnablement();\n\n\t\t\t\t\t\tconst keys = new Set(precondition.keys());\n\t\t\t\t\t\tconst onDidChangeContext = Event.filter(this.contextKeyService.onDidChangeContext, e => e.affectsSome(keys));\n\t\t\t\t\t\tonDidChangeContext(updateEnablement, null, this.renderDisposables);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst p = append(this.element!, $('p'));\n\n\t\t\t\t\tfor (const node of linkedText.nodes) {\n\t\t\t\t\t\tif (typeof node === 'string') {\n\t\t\t\t\t\t\tappend(p, document.createTextNode(node));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst link = this.renderDisposables.add(this.instantiationService.createInstance(Link, p, node, {}));\n\n\t\t\t\t\t\t\tif (precondition && node.href.startsWith('command:')) {\n\t\t\t\t\t\t\t\tconst updateEnablement = () => link.enabled = this.contextKeyService.contextMatchesRules(precondition);\n\t\t\t\t\t\t\t\tupdateEnablement();\n\n\t\t\t\t\t\t\t\tconst keys = new Set(precondition.keys());\n\t\t\t\t\t\t\t\tconst onDidChangeContext = Event.filter(this.contextKeyService.onDidChangeContext, e => e.affectsSome(keys));\n\t\t\t\t\t\t\t\tonDidChangeContext(updateEnablement, null, this.renderDisposables);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.container.classList.add('welcome');\n\t\tthis.scrollableElement!.scanDomNode();\n\t}\n\n\tprivate getContentDescriptors(): IViewContentDescriptor[] {\n\t\tconst visibleItems = this.items.filter(v => v.visible);\n\n\t\tif (visibleItems.length === 0 && this.defaultItem) {\n\t\t\treturn [this.defaultItem.descriptor];\n\t\t}\n\n\t\treturn visibleItems.map(v => v.descriptor);\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables.dispose();\n\t}\n}\n\nexport abstract class ViewPane extends Pane implements IView {\n\n\tprivate static readonly AlwaysShowActionsConfig = 'workbench.view.alwaysShowHeaderActions';\n\n\tprivate _onDidFocus = this._register(new Emitter<void>());\n\treadonly onDidFocus: Event<void> = this._onDidFocus.event;\n\n\tprivate _onDidBlur = this._register(new Emitter<void>());\n\treadonly onDidBlur: Event<void> = this._onDidBlur.event;\n\n\tprivate _onDidChangeBodyVisibility = this._register(new Emitter<boolean>());\n\treadonly onDidChangeBodyVisibility: Event<boolean> = this._onDidChangeBodyVisibility.event;\n\n\tprotected _onDidChangeTitleArea = this._register(new Emitter<void>());\n\treadonly onDidChangeTitleArea: Event<void> = this._onDidChangeTitleArea.event;\n\n\tprotected _onDidChangeViewWelcomeState = this._register(new Emitter<void>());\n\treadonly onDidChangeViewWelcomeState: Event<void> = this._onDidChangeViewWelcomeState.event;\n\n\tprivate _isVisible: boolean = false;\n\treadonly id: string;\n\n\tprivate _title: string;\n\tpublic get title(): string {\n\t\treturn this._title;\n\t}\n\n\tprivate _titleDescription: string | undefined;\n\tpublic get titleDescription(): string | undefined {\n\t\treturn this._titleDescription;\n\t}\n\n\tprivate _singleViewPaneContainerTitle: string | undefined;\n\tpublic get singleViewPaneContainerTitle(): string | undefined {\n\t\treturn this._singleViewPaneContainerTitle;\n\t}\n\n\treadonly menuActions: CompositeMenuActions;\n\n\tprivate progressBar!: ProgressBar;\n\tprivate progressIndicator!: IProgressIndicator;\n\n\tprivate toolbar?: WorkbenchToolBar;\n\tprivate readonly showActions: ViewPaneShowActions;\n\tprivate headerContainer?: HTMLElement;\n\tprivate titleContainer?: HTMLElement;\n\tprivate titleContainerHover?: IManagedHover;\n\tprivate titleDescriptionContainer?: HTMLElement;\n\tprivate titleDescriptionContainerHover?: IManagedHover;\n\tprivate iconContainer?: HTMLElement;\n\tprivate iconContainerHover?: IManagedHover;\n\tprotected twistiesContainer?: HTMLElement;\n\tprivate viewWelcomeController!: ViewWelcomeController;\n\n\tprotected readonly scopedContextKeyService: IContextKeyService;\n\n\tconstructor(\n\t\toptions: IViewPaneOptions,\n\t\t@IKeybindingService protected keybindingService: IKeybindingService,\n\t\t@IContextMenuService protected contextMenuService: IContextMenuService,\n\t\t@IConfigurationService protected readonly configurationService: IConfigurationService,\n\t\t@IContextKeyService protected contextKeyService: IContextKeyService,\n\t\t@IViewDescriptorService protected viewDescriptorService: IViewDescriptorService,\n\t\t@IInstantiationService protected instantiationService: IInstantiationService,\n\t\t@IOpenerService protected openerService: IOpenerService,\n\t\t@IThemeService protected themeService: IThemeService,\n\t\t@ITelemetryService protected telemetryService: ITelemetryService,\n\t\t@IHoverService protected readonly hoverService: IHoverService,\n\t\tprotected readonly accessibleViewInformationService?: IAccessibleViewInformationService\n\t) {\n\t\tsuper({ ...options, ...{ orientation: viewDescriptorService.getViewLocationById(options.id) === ViewContainerLocation.Panel ? Orientation.HORIZONTAL : Orientation.VERTICAL } });\n\n\t\tthis.id = options.id;\n\t\tthis._title = options.title;\n\t\tthis._titleDescription = options.titleDescription;\n\t\tthis._singleViewPaneContainerTitle = options.singleViewPaneContainerTitle;\n\t\tthis.showActions = options.showActions ?? ViewPaneShowActions.Default;\n\n\t\tthis.scopedContextKeyService = this._register(contextKeyService.createScoped(this.element));\n\t\tthis.scopedContextKeyService.createKey('view', this.id);\n\t\tconst viewLocationKey = this.scopedContextKeyService.createKey('viewLocation', ViewContainerLocationToString(viewDescriptorService.getViewLocationById(this.id)!));\n\t\tthis._register(Event.filter(viewDescriptorService.onDidChangeLocation, e => e.views.some(view => view.id === this.id))(() => viewLocationKey.set(ViewContainerLocationToString(viewDescriptorService.getViewLocationById(this.id)!))));\n\n\t\tconst childInstantiationService = this._register(this.instantiationService.createChild(new ServiceCollection([IContextKeyService, this.scopedContextKeyService])));\n\t\tthis.menuActions = this._register(childInstantiationService.createInstance(CompositeMenuActions, options.titleMenuId ?? MenuId.ViewTitle, MenuId.ViewTitleContext, { shouldForwardArgs: !options.donotForwardArgs, renderShortTitle: true }));\n\t\tthis._register(this.menuActions.onDidChange(() => this.updateActions()));\n\t}\n\n\toverride get headerVisible(): boolean {\n\t\treturn super.headerVisible;\n\t}\n\n\toverride set headerVisible(visible: boolean) {\n\t\tsuper.headerVisible = visible;\n\t\tthis.element.classList.toggle('merged-header', !visible);\n\t}\n\n\tsetVisible(visible: boolean): void {\n\t\tif (this._isVisible !== visible) {\n\t\t\tthis._isVisible = visible;\n\n\t\t\tif (this.isExpanded()) {\n\t\t\t\tthis._onDidChangeBodyVisibility.fire(visible);\n\t\t\t}\n\t\t}\n\t}\n\n\tisVisible(): boolean {\n\t\treturn this._isVisible;\n\t}\n\n\tisBodyVisible(): boolean {\n\t\treturn this._isVisible && this.isExpanded();\n\t}\n\n\toverride setExpanded(expanded: boolean): boolean {\n\t\tconst changed = super.setExpanded(expanded);\n\t\tif (changed) {\n\t\t\tthis._onDidChangeBodyVisibility.fire(expanded);\n\t\t}\n\t\tthis.updateTwistyIcon();\n\t\treturn changed;\n\t}\n\n\toverride render(): void {\n\t\tsuper.render();\n\n\t\tconst focusTracker = trackFocus(this.element);\n\t\tthis._register(focusTracker);\n\t\tthis._register(focusTracker.onDidFocus(() => this._onDidFocus.fire()));\n\t\tthis._register(focusTracker.onDidBlur(() => this._onDidBlur.fire()));\n\t}\n\n\tprotected renderHeader(container: HTMLElement): void {\n\t\tthis.headerContainer = container;\n\n\t\tthis.twistiesContainer = append(container, $(`.twisty-container${ThemeIcon.asCSSSelector(this.getTwistyIcon(this.isExpanded()))}`));\n\n\t\tthis.renderHeaderTitle(container, this.title);\n\n\t\tconst actions = append(container, $('.actions'));\n\t\tactions.classList.toggle('show-always', this.showActions === ViewPaneShowActions.Always);\n\t\tactions.classList.toggle('show-expanded', this.showActions === ViewPaneShowActions.WhenExpanded);\n\t\tthis.toolbar = this.instantiationService.createInstance(WorkbenchToolBar, actions, {\n\t\t\torientation: ActionsOrientation.HORIZONTAL,\n\t\t\tactionViewItemProvider: (action, options) => this.getActionViewItem(action, options),\n\t\t\tariaLabel: nls.localize('viewToolbarAriaLabel', \"{0} actions\", this.title),\n\t\t\tgetKeyBinding: action => this.keybindingService.lookupKeybinding(action.id),\n\t\t\trenderDropdownAsChildElement: true,\n\t\t\tactionRunner: this.getActionRunner(),\n\t\t\tresetMenu: this.menuActions.menuId\n\t\t});\n\n\t\tthis._register(this.toolbar);\n\t\tthis.setActions();\n\n\t\tthis._register(addDisposableListener(actions, EventType.CLICK, e => e.preventDefault()));\n\n\t\tconst viewContainerModel = this.viewDescriptorService.getViewContainerByViewId(this.id);\n\t\tif (viewContainerModel) {\n\t\t\tthis._register(this.viewDescriptorService.getViewContainerModel(viewContainerModel).onDidChangeContainerInfo(({ title }) => this.updateTitle(this.title)));\n\t\t} else {\n\t\t\tconsole.error(`View container model not found for view ${this.id}`);\n\t\t}\n\n\t\tconst onDidRelevantConfigurationChange = Event.filter(this.configurationService.onDidChangeConfiguration, e => e.affectsConfiguration(ViewPane.AlwaysShowActionsConfig));\n\t\tthis._register(onDidRelevantConfigurationChange(this.updateActionsVisibility, this));\n\t\tthis.updateActionsVisibility();\n\t}\n\n\tprotected override updateHeader(): void {\n\t\tsuper.updateHeader();\n\t\tthis.updateTwistyIcon();\n\t}\n\n\tprivate updateTwistyIcon(): void {\n\t\tif (this.twistiesContainer) {\n\t\t\tthis.twistiesContainer.classList.remove(...ThemeIcon.asClassNameArray(this.getTwistyIcon(!this._expanded)));\n\t\t\tthis.twistiesContainer.classList.add(...ThemeIcon.asClassNameArray(this.getTwistyIcon(this._expanded)));\n\t\t}\n\t}\n\n\tprotected getTwistyIcon(expanded: boolean): ThemeIcon {\n\t\treturn expanded ? viewPaneContainerExpandedIcon : viewPaneContainerCollapsedIcon;\n\t}\n\n\toverride style(styles: IPaneStyles): void {\n\t\tsuper.style(styles);\n\n\t\tconst icon = this.getIcon();\n\t\tif (this.iconContainer) {\n\t\t\tconst fgColor = asCssValueWithDefault(styles.headerForeground, asCssVariable(foreground));\n\t\t\tif (URI.isUri(icon)) {\n\t\t\t\t// Apply background color to activity bar item provided with iconUrls\n\t\t\t\tthis.iconContainer.style.backgroundColor = fgColor;\n\t\t\t\tthis.iconContainer.style.color = '';\n\t\t\t} else {\n\t\t\t\t// Apply foreground color to activity bar items provided with codicons\n\t\t\t\tthis.iconContainer.style.color = fgColor;\n\t\t\t\tthis.iconContainer.style.backgroundColor = '';\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getIcon(): ThemeIcon | URI {\n\t\treturn this.viewDescriptorService.getViewDescriptorById(this.id)?.containerIcon || defaultViewIcon;\n\t}\n\n\tprotected renderHeaderTitle(container: HTMLElement, title: string): void {\n\t\tthis.iconContainer = append(container, $('.icon', undefined));\n\t\tconst icon = this.getIcon();\n\n\t\tlet cssClass: string | undefined = undefined;\n\t\tif (URI.isUri(icon)) {\n\t\t\tcssClass = `view-${this.id.replace(/[\\.\\:]/g, '-')}`;\n\t\t\tconst iconClass = `.pane-header .icon.${cssClass}`;\n\n\t\t\tcreateCSSRule(iconClass, `\n\t\t\t\tmask: ${asCSSUrl(icon)} no-repeat 50% 50%;\n\t\t\t\tmask-size: 24px;\n\t\t\t\t-webkit-mask: ${asCSSUrl(icon)} no-repeat 50% 50%;\n\t\t\t\t-webkit-mask-size: 16px;\n\t\t\t`);\n\t\t} else if (ThemeIcon.isThemeIcon(icon)) {\n\t\t\tcssClass = ThemeIcon.asClassName(icon);\n\t\t}\n\n\t\tif (cssClass) {\n\t\t\tthis.iconContainer.classList.add(...cssClass.split(' '));\n\t\t}\n\n\t\tconst calculatedTitle = this.calculateTitle(title);\n\t\tthis.titleContainer = append(container, $('h3.title', {}, calculatedTitle));\n\t\tthis.titleContainerHover = this._register(this.hoverService.setupManagedHover(getDefaultHoverDelegate('mouse'), this.titleContainer, calculatedTitle));\n\n\t\tif (this._titleDescription) {\n\t\t\tthis.setTitleDescription(this._titleDescription);\n\t\t}\n\n\t\tthis.iconContainerHover = this._register(this.hoverService.setupManagedHover(getDefaultHoverDelegate('mouse'), this.iconContainer, calculatedTitle));\n\t\tthis.iconContainer.setAttribute('aria-label', this._getAriaLabel(calculatedTitle));\n\t}\n\n\tprivate _getAriaLabel(title: string): string {\n\t\tconst viewHasAccessibilityHelpContent = this.viewDescriptorService.getViewDescriptorById(this.id)?.accessibilityHelpContent;\n\t\tconst accessibleViewHasShownForView = this.accessibleViewInformationService?.hasShownAccessibleView(this.id);\n\t\tif (!viewHasAccessibilityHelpContent || accessibleViewHasShownForView) {\n\t\t\treturn title;\n\t\t}\n\n\t\treturn nls.localize('viewAccessibilityHelp', 'Use Alt+F1 for accessibility help {0}', title);\n\t}\n\n\tprotected updateTitle(title: string): void {\n\t\tconst calculatedTitle = this.calculateTitle(title);\n\t\tif (this.titleContainer) {\n\t\t\tthis.titleContainer.textContent = calculatedTitle;\n\t\t\tthis.titleContainerHover?.update(calculatedTitle);\n\t\t}\n\n\t\tif (this.iconContainer) {\n\t\t\tthis.iconContainerHover?.update(calculatedTitle);\n\t\t\tthis.iconContainer.setAttribute('aria-label', this._getAriaLabel(calculatedTitle));\n\t\t}\n\n\t\tthis._title = title;\n\t\tthis._onDidChangeTitleArea.fire();\n\t}\n\n\tprivate setTitleDescription(description: string | undefined) {\n\t\tif (this.titleDescriptionContainer) {\n\t\t\tthis.titleDescriptionContainer.textContent = description ?? '';\n\t\t\tthis.titleDescriptionContainerHover?.update(description ?? '');\n\t\t}\n\t\telse if (description && this.titleContainer) {\n\t\t\tthis.titleDescriptionContainer = after(this.titleContainer, $('span.description', {}, description));\n\t\t\tthis.titleDescriptionContainerHover = this._register(this.hoverService.setupManagedHover(getDefaultHoverDelegate('mouse'), this.titleDescriptionContainer, description));\n\t\t}\n\t}\n\n\tprotected updateTitleDescription(description?: string | undefined): void {\n\t\tthis.setTitleDescription(description);\n\n\t\tthis._titleDescription = description;\n\t\tthis._onDidChangeTitleArea.fire();\n\t}\n\n\tprivate calculateTitle(title: string): string {\n\t\tconst viewContainer = this.viewDescriptorService.getViewContainerByViewId(this.id)!;\n\t\tconst model = this.viewDescriptorService.getViewContainerModel(viewContainer);\n\t\tconst viewDescriptor = this.viewDescriptorService.getViewDescriptorById(this.id);\n\t\tconst isDefault = this.viewDescriptorService.getDefaultContainerById(this.id) === viewContainer;\n\n\t\tif (!isDefault && viewDescriptor?.containerTitle && model.title !== viewDescriptor.containerTitle) {\n\t\t\treturn `${viewDescriptor.containerTitle}: ${title}`;\n\t\t}\n\n\t\treturn title;\n\t}\n\n\tprotected renderBody(container: HTMLElement): void {\n\t\tthis.viewWelcomeController = this._register(this.instantiationService.createInstance(ViewWelcomeController, container, this));\n\t}\n\n\tprotected layoutBody(height: number, width: number): void {\n\t\tthis.viewWelcomeController.layout(height, width);\n\t}\n\n\tonDidScrollRoot() {\n\t\t// noop\n\t}\n\n\tgetProgressIndicator() {\n\t\tif (this.progressBar === undefined) {\n\t\t\t// Progress bar\n\t\t\tthis.progressBar = this._register(new ProgressBar(this.element, defaultProgressBarStyles));\n\t\t\tthis.progressBar.hide();\n\t\t}\n\n\t\tif (this.progressIndicator === undefined) {\n\t\t\tconst that = this;\n\t\t\tthis.progressIndicator = this._register(new ScopedProgressIndicator(assertIsDefined(this.progressBar), new class extends AbstractProgressScope {\n\t\t\t\tconstructor() {\n\t\t\t\t\tsuper(that.id, that.isBodyVisible());\n\t\t\t\t\tthis._register(that.onDidChangeBodyVisibility(isVisible => isVisible ? this.onScopeOpened(that.id) : this.onScopeClosed(that.id)));\n\t\t\t\t}\n\t\t\t}()));\n\t\t}\n\t\treturn this.progressIndicator;\n\t}\n\n\tprotected getProgressLocation(): string {\n\t\treturn this.viewDescriptorService.getViewContainerByViewId(this.id)!.id;\n\t}\n\n\tprotected getLocationBasedColors(): IViewPaneLocationColors {\n\t\treturn getLocationBasedViewColors(this.viewDescriptorService.getViewLocationById(this.id));\n\t}\n\n\tfocus(): void {\n\t\tif (this.viewWelcomeController.enabled) {\n\t\t\tthis.viewWelcomeController.focus();\n\t\t} else if (this.element) {\n\t\t\tthis.element.focus();\n\t\t\tthis._onDidFocus.fire();\n\t\t}\n\t}\n\n\tprivate setActions(): void {\n\t\tif (this.toolbar) {\n\t\t\tconst primaryActions = [...this.menuActions.getPrimaryActions()];\n\t\t\tif (this.shouldShowFilterInHeader()) {\n\t\t\t\tprimaryActions.unshift(VIEWPANE_FILTER_ACTION);\n\t\t\t}\n\t\t\tthis.toolbar.setActions(prepareActions(primaryActions), prepareActions(this.menuActions.getSecondaryActions()));\n\t\t\tthis.toolbar.context = this.getActionsContext();\n\t\t}\n\t}\n\n\tprivate updateActionsVisibility(): void {\n\t\tif (!this.headerContainer) {\n\t\t\treturn;\n\t\t}\n\t\tconst shouldAlwaysShowActions = this.configurationService.getValue<boolean>('workbench.view.alwaysShowHeaderActions');\n\t\tthis.headerContainer.classList.toggle('actions-always-visible', shouldAlwaysShowActions);\n\t}\n\n\tprotected updateActions(): void {\n\t\tthis.setActions();\n\t\tthis._onDidChangeTitleArea.fire();\n\t}\n\n\tgetActionViewItem(action: IAction, options?: IDropdownMenuActionViewItemOptions): IActionViewItem | undefined {\n\t\tif (action.id === VIEWPANE_FILTER_ACTION.id) {\n\t\t\tconst that = this;\n\t\t\treturn new class extends BaseActionViewItem {\n\t\t\t\tconstructor() { super(null, action); }\n\t\t\t\toverride setFocusable(): void { /* noop input elements are focusable by default */ }\n\t\t\t\toverride get trapsArrowNavigation(): boolean { return true; }\n\t\t\t\toverride render(container: HTMLElement): void {\n\t\t\t\t\tcontainer.classList.add('viewpane-filter-container');\n\t\t\t\t\tconst filter = that.getFilterWidget()!;\n\t\t\t\t\tappend(container, filter.element);\n\t\t\t\t\tfilter.relayout();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\treturn createActionViewItem(this.instantiationService, action, { ...options, ...{ menuAsChild: action instanceof SubmenuItemAction } });\n\t}\n\n\tgetActionsContext(): unknown {\n\t\treturn undefined;\n\t}\n\n\tgetActionRunner(): IActionRunner | undefined {\n\t\treturn undefined;\n\t}\n\n\tgetOptimalWidth(): number {\n\t\treturn 0;\n\t}\n\n\tsaveState(): void {\n\t\t// Subclasses to implement for saving state\n\t}\n\n\tshouldShowWelcome(): boolean {\n\t\treturn false;\n\t}\n\n\tgetFilterWidget(): FilterWidget | undefined {\n\t\treturn undefined;\n\t}\n\n\tshouldShowFilterInHeader(): boolean {\n\t\treturn false;\n\t}\n}\n\nexport abstract class FilterViewPane extends ViewPane {\n\n\treadonly filterWidget: FilterWidget;\n\tprivate dimension: Dimension | undefined;\n\tprivate filterContainer: HTMLElement | undefined;\n\n\tconstructor(\n\t\toptions: IFilterViewPaneOptions,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\taccessibleViewService?: IAccessibleViewInformationService\n\t) {\n\t\tsuper(options, keybindingService, contextMenuService, configurationService, contextKeyService, viewDescriptorService, instantiationService, openerService, themeService, telemetryService, hoverService, accessibleViewService);\n\t\tconst childInstantiationService = this._register(instantiationService.createChild(new ServiceCollection([IContextKeyService, this.scopedContextKeyService])));\n\t\tthis.filterWidget = this._register(childInstantiationService.createInstance(FilterWidget, options.filterOptions));\n\t}\n\n\toverride getFilterWidget(): FilterWidget {\n\t\treturn this.filterWidget;\n\t}\n\n\tprotected override renderBody(container: HTMLElement): void {\n\t\tsuper.renderBody(container);\n\t\tthis.filterContainer = append(container, $('.viewpane-filter-container'));\n\t}\n\n\tprotected override layoutBody(height: number, width: number): void {\n\t\tsuper.layoutBody(height, width);\n\n\t\tthis.dimension = new Dimension(width, height);\n\t\tconst wasFilterShownInHeader = !this.filterContainer?.hasChildNodes();\n\t\tconst shouldShowFilterInHeader = this.shouldShowFilterInHeader();\n\t\tif (wasFilterShownInHeader !== shouldShowFilterInHeader) {\n\t\t\tif (shouldShowFilterInHeader) {\n\t\t\t\treset(this.filterContainer!);\n\t\t\t}\n\t\t\tthis.updateActions();\n\t\t\tif (!shouldShowFilterInHeader) {\n\t\t\t\tappend(this.filterContainer!, this.filterWidget.element);\n\t\t\t}\n\t\t}\n\t\tif (!shouldShowFilterInHeader) {\n\t\t\theight = height - 44;\n\t\t}\n\t\tthis.filterWidget.layout(width);\n\t\tthis.layoutBodyContent(height, width);\n\t}\n\n\toverride shouldShowFilterInHeader(): boolean {\n\t\treturn !(this.dimension && this.dimension.width < 600 && this.dimension.height > 100);\n\t}\n\n\tprotected abstract layoutBodyContent(height: number, width: number): void;\n\n}\n\nexport interface IViewPaneLocationColors {\n\tbackground: string;\n\toverlayBackground: string;\n\tlistOverrideStyles: PartialExcept<IListStyles, 'listBackground' | 'treeStickyScrollBackground'>;\n}\n\nexport function getLocationBasedViewColors(location: ViewContainerLocation | null): IViewPaneLocationColors {\n\tlet background, overlayBackground, stickyScrollBackground, stickyScrollBorder, stickyScrollShadow;\n\n\tswitch (location) {\n\t\tcase ViewContainerLocation.Panel:\n\t\t\tbackground = PANEL_BACKGROUND;\n\t\t\toverlayBackground = PANEL_SECTION_DRAG_AND_DROP_BACKGROUND;\n\t\t\tstickyScrollBackground = PANEL_STICKY_SCROLL_BACKGROUND;\n\t\t\tstickyScrollBorder = PANEL_STICKY_SCROLL_BORDER;\n\t\t\tstickyScrollShadow = PANEL_STICKY_SCROLL_SHADOW;\n\t\t\tbreak;\n\n\t\tcase ViewContainerLocation.Sidebar:\n\t\tcase ViewContainerLocation.AuxiliaryBar:\n\t\tdefault:\n\t\t\tbackground = SIDE_BAR_BACKGROUND;\n\t\t\toverlayBackground = SIDE_BAR_DRAG_AND_DROP_BACKGROUND;\n\t\t\tstickyScrollBackground = SIDE_BAR_STICKY_SCROLL_BACKGROUND;\n\t\t\tstickyScrollBorder = SIDE_BAR_STICKY_SCROLL_BORDER;\n\t\t\tstickyScrollShadow = SIDE_BAR_STICKY_SCROLL_SHADOW;\n\t}\n\n\treturn {\n\t\tbackground,\n\t\toverlayBackground,\n\t\tlistOverrideStyles: {\n\t\t\tlistBackground: background,\n\t\t\ttreeStickyScrollBackground: stickyScrollBackground,\n\t\t\ttreeStickyScrollBorder: stickyScrollBorder,\n\t\t\ttreeStickyScrollShadow: stickyScrollShadow\n\t\t}\n\t};\n}\n\nexport abstract class ViewAction<T extends IView> extends Action2 {\n\toverride readonly desc: Readonly<IAction2Options> & { viewId: string };\n\tconstructor(desc: Readonly<IAction2Options> & { viewId: string }) {\n\t\tsuper(desc);\n\t\tthis.desc = desc;\n\t}\n\n\trun(accessor: ServicesAccessor, ...args: any[]) {\n\t\tconst view = accessor.get(IViewsService).getActiveViewWithId(this.desc.viewId);\n\t\tif (view) {\n\t\t\treturn this.runInView(accessor, <T>view, ...args);\n\t\t}\n\t}\n\n\tabstract runInView(accessor: ServicesAccessor, view: T, ...args: any[]): any;\n}\n"],
  "mappings": "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",
  "names": ["ViewPaneShowActions", "$"]
}
