{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/views/viewPaneContainer.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\ttype Dimension,\n\tDragAndDropObserver,\n\tEventType,\n\taddDisposableListener,\n\tgetWindow,\n\tisAncestor,\n} from \"../../../../base/browser/dom.js\";\nimport { StandardMouseEvent } from \"../../../../base/browser/mouseEvent.js\";\nimport {\n\tGesture,\n\tEventType as TouchEventType,\n} from \"../../../../base/browser/touch.js\";\nimport type { IActionViewItem } from \"../../../../base/browser/ui/actionbar/actionbar.js\";\nimport {\n\ttype IBoundarySashes,\n\tOrientation,\n} from \"../../../../base/browser/ui/sash/sash.js\";\nimport {\n\ttype IPaneViewOptions,\n\tPaneView,\n} from \"../../../../base/browser/ui/splitview/paneview.js\";\nimport type { IAction } from \"../../../../base/common/actions.js\";\nimport { RunOnceScheduler } from \"../../../../base/common/async.js\";\nimport { Emitter, Event } from \"../../../../base/common/event.js\";\nimport { KeyChord, KeyCode, KeyMod } from \"../../../../base/common/keyCodes.js\";\nimport {\n\tDisposableStore,\n\ttype IDisposable,\n\tcombinedDisposable,\n\ttoDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { assertIsDefined } from \"../../../../base/common/types.js\";\nimport \"./media/paneviewlet.css\";\nimport type { IBaseActionViewItemOptions } from \"../../../../base/browser/ui/actionbar/actionViewItems.js\";\nimport * as nls from \"../../../../nls.js\";\nimport { createActionViewItem } from \"../../../../platform/actions/browser/menuEntryActionViewItem.js\";\nimport {\n\tAction2,\n\ttype IAction2Options,\n\tIMenuService,\n\ttype ISubmenuItem,\n\tMenuId,\n\tMenuRegistry,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { IContextKeyService } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IContextMenuService } from \"../../../../platform/contextview/browser/contextView.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport {\n\tactiveContrastBorder,\n\tasCssVariable,\n} from \"../../../../platform/theme/common/colorRegistry.js\";\nimport {\n\tIThemeService,\n\tThemable,\n} from \"../../../../platform/theme/common/themeService.js\";\nimport { IWorkspaceContextService } from \"../../../../platform/workspace/common/workspace.js\";\nimport { Component } from \"../../../common/component.js\";\nimport { FocusedViewContext } from \"../../../common/contextkeys.js\";\nimport {\n\tPANEL_SECTION_BORDER,\n\tPANEL_SECTION_DRAG_AND_DROP_BACKGROUND,\n\tPANEL_SECTION_HEADER_BACKGROUND,\n\tPANEL_SECTION_HEADER_BORDER,\n\tPANEL_SECTION_HEADER_FOREGROUND,\n\tSIDE_BAR_DRAG_AND_DROP_BACKGROUND,\n\tSIDE_BAR_SECTION_HEADER_BACKGROUND,\n\tSIDE_BAR_SECTION_HEADER_BORDER,\n\tSIDE_BAR_SECTION_HEADER_FOREGROUND,\n} from \"../../../common/theme.js\";\nimport {\n\ttype IAddedViewDescriptorRef,\n\ttype ICustomViewDescriptor,\n\ttype IView,\n\ttype IViewContainerModel,\n\ttype IViewDescriptor,\n\ttype IViewDescriptorRef,\n\tIViewDescriptorService,\n\ttype IViewPaneContainer,\n\ttype ViewContainer,\n\tViewContainerLocation,\n\tViewContainerLocationToString,\n\tViewVisibilityState,\n} from \"../../../common/views.js\";\nimport { IExtensionService } from \"../../../services/extensions/common/extensions.js\";\nimport {\n\tIWorkbenchLayoutService,\n\tLayoutSettings,\n\tisHorizontal,\n} from \"../../../services/layout/browser/layoutService.js\";\nimport { IViewsService } from \"../../../services/views/common/viewsService.js\";\nimport { CompositeMenuActions } from \"../../actions.js\";\nimport { CompositeDragAndDropObserver, toggleDropEffect } from \"../../dnd.js\";\nimport type { ViewPane } from \"./viewPane.js\";\nimport type { IViewletViewOptions } from \"./viewsViewlet.js\";\n\nexport const ViewsSubMenu = new MenuId(\"Views\");\nMenuRegistry.appendMenuItem(MenuId.ViewContainerTitle, {\n\tsubmenu: ViewsSubMenu,\n\ttitle: nls.localize(\"views\", \"Views\"),\n\torder: 1,\n} satisfies ISubmenuItem);\n\nexport interface IViewPaneContainerOptions extends IPaneViewOptions {\n\tmergeViewWithContainerWhenSingleView: boolean;\n}\n\ninterface IViewPaneItem {\n\tpane: ViewPane;\n\tdisposable: IDisposable;\n}\n\nenum DropDirection {\n\tUP = 0,\n\tDOWN = 1,\n\tLEFT = 2,\n\tRIGHT = 3,\n}\n\ntype BoundingRect = {\n\ttop: number;\n\tleft: number;\n\tbottom: number;\n\tright: number;\n};\n\nclass ViewPaneDropOverlay extends Themable {\n\tprivate static readonly OVERLAY_ID = \"monaco-pane-drop-overlay\";\n\n\tprivate container!: HTMLElement;\n\tprivate overlay!: HTMLElement;\n\n\tprivate _currentDropOperation: DropDirection | undefined;\n\n\t// private currentDropOperation: IDropOperation | undefined;\n\tprivate _disposed: boolean | undefined;\n\n\tprivate cleanupOverlayScheduler: RunOnceScheduler;\n\n\tget currentDropOperation(): DropDirection | undefined {\n\t\treturn this._currentDropOperation;\n\t}\n\n\tconstructor(\n\t\tprivate paneElement: HTMLElement,\n\t\tprivate orientation: Orientation | undefined,\n\t\tprivate bounds: BoundingRect | undefined,\n\t\tprotected location: ViewContainerLocation,\n\t\tthemeService: IThemeService,\n\t) {\n\t\tsuper(themeService);\n\t\tthis.cleanupOverlayScheduler = this._register(\n\t\t\tnew RunOnceScheduler(() => this.dispose(), 300),\n\t\t);\n\n\t\tthis.create();\n\t}\n\n\tget disposed(): boolean {\n\t\treturn !!this._disposed;\n\t}\n\n\tprivate create(): void {\n\t\t// Container\n\t\tthis.container = document.createElement(\"div\");\n\t\tthis.container.id = ViewPaneDropOverlay.OVERLAY_ID;\n\t\tthis.container.style.top = \"0px\";\n\n\t\t// Parent\n\t\tthis.paneElement.appendChild(this.container);\n\t\tthis.paneElement.classList.add(\"dragged-over\");\n\t\tthis._register(\n\t\t\ttoDisposable(() => {\n\t\t\t\tthis.container.remove();\n\t\t\t\tthis.paneElement.classList.remove(\"dragged-over\");\n\t\t\t}),\n\t\t);\n\n\t\t// Overlay\n\t\tthis.overlay = document.createElement(\"div\");\n\t\tthis.overlay.classList.add(\"pane-overlay-indicator\");\n\t\tthis.container.appendChild(this.overlay);\n\n\t\t// Overlay Event Handling\n\t\tthis.registerListeners();\n\n\t\t// Styles\n\t\tthis.updateStyles();\n\t}\n\n\toverride updateStyles(): void {\n\t\t// Overlay drop background\n\t\tthis.overlay.style.backgroundColor =\n\t\t\tthis.getColor(\n\t\t\t\tthis.location === ViewContainerLocation.Panel\n\t\t\t\t\t? PANEL_SECTION_DRAG_AND_DROP_BACKGROUND\n\t\t\t\t\t: SIDE_BAR_DRAG_AND_DROP_BACKGROUND,\n\t\t\t) || \"\";\n\n\t\t// Overlay contrast border (if any)\n\t\tconst activeContrastBorderColor = this.getColor(activeContrastBorder);\n\t\tthis.overlay.style.outlineColor = activeContrastBorderColor || \"\";\n\t\tthis.overlay.style.outlineOffset = activeContrastBorderColor\n\t\t\t? \"-2px\"\n\t\t\t: \"\";\n\t\tthis.overlay.style.outlineStyle = activeContrastBorderColor\n\t\t\t? \"dashed\"\n\t\t\t: \"\";\n\t\tthis.overlay.style.outlineWidth = activeContrastBorderColor\n\t\t\t? \"2px\"\n\t\t\t: \"\";\n\n\t\tthis.overlay.style.borderColor = activeContrastBorderColor || \"\";\n\t\tthis.overlay.style.borderStyle = \"solid\";\n\t\tthis.overlay.style.borderWidth = \"0px\";\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(\n\t\t\tnew DragAndDropObserver(this.container, {\n\t\t\t\tonDragOver: (e) => {\n\t\t\t\t\t// Position overlay\n\t\t\t\t\tthis.positionOverlay(e.offsetX, e.offsetY);\n\n\t\t\t\t\t// Make sure to stop any running cleanup scheduler to remove the overlay\n\t\t\t\t\tif (this.cleanupOverlayScheduler.isScheduled()) {\n\t\t\t\t\t\tthis.cleanupOverlayScheduler.cancel();\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tonDragLeave: (e) => this.dispose(),\n\t\t\t\tonDragEnd: (e) => this.dispose(),\n\n\t\t\t\tonDrop: (e) => {\n\t\t\t\t\t// Dispose overlay\n\t\t\t\t\tthis.dispose();\n\t\t\t\t},\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\taddDisposableListener(this.container, EventType.MOUSE_OVER, () => {\n\t\t\t\t// Under some circumstances we have seen reports where the drop overlay is not being\n\t\t\t\t// cleaned up and as such the editor area remains under the overlay so that you cannot\n\t\t\t\t// type into the editor anymore. This seems related to using VMs and DND via host and\n\t\t\t\t// guest OS, though some users also saw it without VMs.\n\t\t\t\t// To protect against this issue we always destroy the overlay as soon as we detect a\n\t\t\t\t// mouse event over it. The delay is used to guarantee we are not interfering with the\n\t\t\t\t// actual DROP event that can also trigger a mouse over event.\n\t\t\t\tif (!this.cleanupOverlayScheduler.isScheduled()) {\n\t\t\t\t\tthis.cleanupOverlayScheduler.schedule();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate positionOverlay(mousePosX: number, mousePosY: number): void {\n\t\tconst paneWidth = this.paneElement.clientWidth;\n\t\tconst paneHeight = this.paneElement.clientHeight;\n\n\t\tconst splitWidthThreshold = paneWidth / 2;\n\t\tconst splitHeightThreshold = paneHeight / 2;\n\n\t\tlet dropDirection: DropDirection | undefined;\n\n\t\tif (this.orientation === Orientation.VERTICAL) {\n\t\t\tif (mousePosY < splitHeightThreshold) {\n\t\t\t\tdropDirection = DropDirection.UP;\n\t\t\t} else if (mousePosY >= splitHeightThreshold) {\n\t\t\t\tdropDirection = DropDirection.DOWN;\n\t\t\t}\n\t\t} else if (this.orientation === Orientation.HORIZONTAL) {\n\t\t\tif (mousePosX < splitWidthThreshold) {\n\t\t\t\tdropDirection = DropDirection.LEFT;\n\t\t\t} else if (mousePosX >= splitWidthThreshold) {\n\t\t\t\tdropDirection = DropDirection.RIGHT;\n\t\t\t}\n\t\t}\n\n\t\t// Draw overlay based on split direction\n\t\tswitch (dropDirection) {\n\t\t\tcase DropDirection.UP:\n\t\t\t\tthis.doPositionOverlay({\n\t\t\t\t\ttop: \"0\",\n\t\t\t\t\tleft: \"0\",\n\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\theight: \"50%\",\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase DropDirection.DOWN:\n\t\t\t\tthis.doPositionOverlay({\n\t\t\t\t\tbottom: \"0\",\n\t\t\t\t\tleft: \"0\",\n\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\theight: \"50%\",\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase DropDirection.LEFT:\n\t\t\t\tthis.doPositionOverlay({\n\t\t\t\t\ttop: \"0\",\n\t\t\t\t\tleft: \"0\",\n\t\t\t\t\twidth: \"50%\",\n\t\t\t\t\theight: \"100%\",\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase DropDirection.RIGHT:\n\t\t\t\tthis.doPositionOverlay({\n\t\t\t\t\ttop: \"0\",\n\t\t\t\t\tright: \"0\",\n\t\t\t\t\twidth: \"50%\",\n\t\t\t\t\theight: \"100%\",\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tdefault: {\n\t\t\t\t// const top = this.bounds?.top || 0;\n\t\t\t\t// const left = this.bounds?.bottom || 0;\n\n\t\t\t\tlet top = \"0\";\n\t\t\t\tlet left = \"0\";\n\t\t\t\tlet width = \"100%\";\n\t\t\t\tlet height = \"100%\";\n\t\t\t\tif (this.bounds) {\n\t\t\t\t\tconst boundingRect = this.container.getBoundingClientRect();\n\t\t\t\t\ttop = `${this.bounds.top - boundingRect.top}px`;\n\t\t\t\t\tleft = `${this.bounds.left - boundingRect.left}px`;\n\t\t\t\t\theight = `${this.bounds.bottom - this.bounds.top}px`;\n\t\t\t\t\twidth = `${this.bounds.right - this.bounds.left}px`;\n\t\t\t\t}\n\n\t\t\t\tthis.doPositionOverlay({ top, left, width, height });\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\t(this.orientation === Orientation.VERTICAL && paneHeight <= 25) ||\n\t\t\t(this.orientation === Orientation.HORIZONTAL && paneWidth <= 25)\n\t\t) {\n\t\t\tthis.doUpdateOverlayBorder(dropDirection);\n\t\t} else {\n\t\t\tthis.doUpdateOverlayBorder(undefined);\n\t\t}\n\n\t\t// Make sure the overlay is visible now\n\t\tthis.overlay.style.opacity = \"1\";\n\n\t\t// Enable transition after a timeout to prevent initial animation\n\t\tsetTimeout(\n\t\t\t() => this.overlay.classList.add(\"overlay-move-transition\"),\n\t\t\t0,\n\t\t);\n\n\t\t// Remember as current split direction\n\t\tthis._currentDropOperation = dropDirection;\n\t}\n\n\tprivate doUpdateOverlayBorder(direction: DropDirection | undefined): void {\n\t\tthis.overlay.style.borderTopWidth =\n\t\t\tdirection === DropDirection.UP ? \"2px\" : \"0px\";\n\t\tthis.overlay.style.borderLeftWidth =\n\t\t\tdirection === DropDirection.LEFT ? \"2px\" : \"0px\";\n\t\tthis.overlay.style.borderBottomWidth =\n\t\t\tdirection === DropDirection.DOWN ? \"2px\" : \"0px\";\n\t\tthis.overlay.style.borderRightWidth =\n\t\t\tdirection === DropDirection.RIGHT ? \"2px\" : \"0px\";\n\t}\n\n\tprivate doPositionOverlay(options: {\n\t\ttop?: string;\n\t\tbottom?: string;\n\t\tleft?: string;\n\t\tright?: string;\n\t\twidth: string;\n\t\theight: string;\n\t}): void {\n\t\t// Container\n\t\tthis.container.style.height = \"100%\";\n\n\t\t// Overlay\n\t\tthis.overlay.style.top = options.top || \"\";\n\t\tthis.overlay.style.left = options.left || \"\";\n\t\tthis.overlay.style.bottom = options.bottom || \"\";\n\t\tthis.overlay.style.right = options.right || \"\";\n\t\tthis.overlay.style.width = options.width;\n\t\tthis.overlay.style.height = options.height;\n\t}\n\n\tcontains(element: HTMLElement): boolean {\n\t\treturn element === this.container || element === this.overlay;\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis._disposed = true;\n\t}\n}\n\nclass ViewContainerMenuActions extends CompositeMenuActions {\n\tconstructor(\n\t\telement: HTMLElement,\n\t\tviewContainer: ViewContainer,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IMenuService menuService: IMenuService,\n\t) {\n\t\tconst scopedContextKeyService = contextKeyService.createScoped(element);\n\t\tscopedContextKeyService.createKey(\"viewContainer\", viewContainer.id);\n\t\tconst viewContainerLocationKey = scopedContextKeyService.createKey(\n\t\t\t\"viewContainerLocation\",\n\t\t\tViewContainerLocationToString(\n\t\t\t\tviewDescriptorService.getViewContainerLocation(viewContainer)!,\n\t\t\t),\n\t\t);\n\t\tsuper(\n\t\t\tMenuId.ViewContainerTitle,\n\t\t\tMenuId.ViewContainerTitleContext,\n\t\t\t{ shouldForwardArgs: true, renderShortTitle: true },\n\t\t\tscopedContextKeyService,\n\t\t\tmenuService,\n\t\t);\n\t\tthis._register(scopedContextKeyService);\n\t\tthis._register(\n\t\t\tEvent.filter(\n\t\t\t\tviewDescriptorService.onDidChangeContainerLocation,\n\t\t\t\t(e) => e.viewContainer === viewContainer,\n\t\t\t)(() =>\n\t\t\t\tviewContainerLocationKey.set(\n\t\t\t\t\tViewContainerLocationToString(\n\t\t\t\t\t\tviewDescriptorService.getViewContainerLocation(\n\t\t\t\t\t\t\tviewContainer,\n\t\t\t\t\t\t)!,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\t}\n}\n\nexport class ViewPaneContainer extends Component implements IViewPaneContainer {\n\treadonly viewContainer: ViewContainer;\n\tprivate lastFocusedPane: ViewPane | undefined;\n\tprivate lastMergedCollapsedPane: ViewPane | undefined;\n\tprivate paneItems: IViewPaneItem[] = [];\n\tprivate paneview?: PaneView;\n\n\tprivate visible = false;\n\n\tprivate areExtensionsReady = false;\n\n\tprivate didLayout = false;\n\tprivate dimension: Dimension | undefined;\n\tprivate _boundarySashes: IBoundarySashes | undefined;\n\n\tprivate readonly visibleViewsCountFromCache: number | undefined;\n\tprivate readonly visibleViewsStorageId: string;\n\tprotected readonly viewContainerModel: IViewContainerModel;\n\n\tprivate readonly _onTitleAreaUpdate: Emitter<void> = this._register(\n\t\tnew Emitter<void>(),\n\t);\n\treadonly onTitleAreaUpdate: Event<void> = this._onTitleAreaUpdate.event;\n\n\tprivate readonly _onDidChangeVisibility = this._register(\n\t\tnew Emitter<boolean>(),\n\t);\n\treadonly onDidChangeVisibility = this._onDidChangeVisibility.event;\n\n\tprivate readonly _onDidAddViews = this._register(new Emitter<IView[]>());\n\treadonly onDidAddViews = this._onDidAddViews.event;\n\n\tprivate readonly _onDidRemoveViews = this._register(new Emitter<IView[]>());\n\treadonly onDidRemoveViews = this._onDidRemoveViews.event;\n\n\tprivate readonly _onDidChangeViewVisibility = this._register(\n\t\tnew Emitter<IView>(),\n\t);\n\treadonly onDidChangeViewVisibility = this._onDidChangeViewVisibility.event;\n\n\tprivate readonly _onDidFocusView = this._register(new Emitter<IView>());\n\treadonly onDidFocusView = this._onDidFocusView.event;\n\n\tprivate readonly _onDidBlurView = this._register(new Emitter<IView>());\n\treadonly onDidBlurView = this._onDidBlurView.event;\n\n\tget onDidSashChange(): Event<number> {\n\t\treturn assertIsDefined(this.paneview).onDidSashChange;\n\t}\n\n\tget panes(): ViewPane[] {\n\t\treturn this.paneItems.map((i) => i.pane);\n\t}\n\n\tget views(): IView[] {\n\t\treturn this.panes;\n\t}\n\n\tget length(): number {\n\t\treturn this.paneItems.length;\n\t}\n\n\tprivate _menuActions?: ViewContainerMenuActions;\n\tget menuActions(): CompositeMenuActions | undefined {\n\t\treturn this._menuActions;\n\t}\n\n\tconstructor(\n\t\tid: string,\n\t\tprivate options: IViewPaneContainerOptions,\n\t\t@IInstantiationService protected instantiationService: IInstantiationService,\n\t\t@IConfigurationService protected configurationService: IConfigurationService,\n\t\t@IWorkbenchLayoutService protected layoutService: IWorkbenchLayoutService,\n\t\t@IContextMenuService protected contextMenuService: IContextMenuService,\n\t\t@ITelemetryService protected telemetryService: ITelemetryService,\n\t\t@IExtensionService protected extensionService: IExtensionService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IStorageService protected storageService: IStorageService,\n\t\t@IWorkspaceContextService protected contextService: IWorkspaceContextService,\n\t\t@IViewDescriptorService protected viewDescriptorService: IViewDescriptorService,\n\t) {\n\n\t\tsuper(id, themeService, storageService);\n\n\t\tconst container = this.viewDescriptorService.getViewContainerById(id);\n\t\tif (!container) {\n\t\t\tthrow new Error('Could not find container');\n\t\t}\n\n\n\t\tthis.viewContainer = container;\n\t\tthis.visibleViewsStorageId = `${id}.numberOfVisibleViews`;\n\t\tthis.visibleViewsCountFromCache = this.storageService.getNumber(this.visibleViewsStorageId, StorageScope.WORKSPACE, undefined);\n\t\tthis.viewContainerModel = this.viewDescriptorService.getViewContainerModel(container);\n\t}\n\n\tcreate(parent: HTMLElement): void {\n\t\tconst options = this.options as IPaneViewOptions;\n\t\toptions.orientation = this.orientation;\n\t\tthis.paneview = this._register(new PaneView(parent, this.options));\n\n\t\tif (this._boundarySashes) {\n\t\t\tthis.paneview.setBoundarySashes(this._boundarySashes);\n\t\t}\n\n\t\tthis._register(\n\t\t\tthis.paneview.onDidDrop(({ from, to }) =>\n\t\t\t\tthis.movePane(from as ViewPane, to as ViewPane),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.paneview.onDidScroll((_) => this.onDidScrollPane()),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.paneview.onDidSashReset((index) => this.onDidSashReset(index)),\n\t\t);\n\t\tthis._register(\n\t\t\taddDisposableListener(\n\t\t\t\tparent,\n\t\t\t\tEventType.CONTEXT_MENU,\n\t\t\t\t(e: MouseEvent) =>\n\t\t\t\t\tthis.showContextMenu(\n\t\t\t\t\t\tnew StandardMouseEvent(getWindow(parent), e),\n\t\t\t\t\t),\n\t\t\t),\n\t\t);\n\t\tthis._register(Gesture.addTarget(parent));\n\t\tthis._register(\n\t\t\taddDisposableListener(\n\t\t\t\tparent,\n\t\t\t\tTouchEventType.Contextmenu,\n\t\t\t\t(e: MouseEvent) =>\n\t\t\t\t\tthis.showContextMenu(\n\t\t\t\t\t\tnew StandardMouseEvent(getWindow(parent), e),\n\t\t\t\t\t),\n\t\t\t),\n\t\t);\n\n\t\tthis._menuActions = this._register(\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tViewContainerMenuActions,\n\t\t\t\tthis.paneview.element,\n\t\t\t\tthis.viewContainer,\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis._menuActions.onDidChange(() => this.updateTitleArea()),\n\t\t);\n\n\t\tlet overlay: ViewPaneDropOverlay | undefined;\n\t\tconst getOverlayBounds: () => BoundingRect = () => {\n\t\t\tconst fullSize = parent.getBoundingClientRect();\n\t\t\tconst lastPane =\n\t\t\t\tthis.panes[\n\t\t\t\t\tthis.panes.length - 1\n\t\t\t\t].element.getBoundingClientRect();\n\t\t\tconst top =\n\t\t\t\tthis.orientation === Orientation.VERTICAL\n\t\t\t\t\t? lastPane.bottom\n\t\t\t\t\t: fullSize.top;\n\t\t\tconst left =\n\t\t\t\tthis.orientation === Orientation.HORIZONTAL\n\t\t\t\t\t? lastPane.right\n\t\t\t\t\t: fullSize.left;\n\n\t\t\treturn {\n\t\t\t\ttop,\n\t\t\t\tbottom: fullSize.bottom,\n\t\t\t\tleft,\n\t\t\t\tright: fullSize.right,\n\t\t\t};\n\t\t};\n\n\t\tconst inBounds = (\n\t\t\tbounds: BoundingRect,\n\t\t\tpos: { x: number; y: number },\n\t\t) => {\n\t\t\treturn (\n\t\t\t\tpos.x >= bounds.left &&\n\t\t\t\tpos.x <= bounds.right &&\n\t\t\t\tpos.y >= bounds.top &&\n\t\t\t\tpos.y <= bounds.bottom\n\t\t\t);\n\t\t};\n\n\t\tlet bounds: BoundingRect;\n\n\t\tthis._register(\n\t\t\tCompositeDragAndDropObserver.INSTANCE.registerTarget(parent, {\n\t\t\t\tonDragEnter: (e) => {\n\t\t\t\t\tbounds = getOverlayBounds();\n\t\t\t\t\tif (overlay && overlay.disposed) {\n\t\t\t\t\t\toverlay = undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!overlay && inBounds(bounds, e.eventData)) {\n\t\t\t\t\t\tconst dropData = e.dragAndDropData.getData();\n\t\t\t\t\t\tif (dropData.type === \"view\") {\n\t\t\t\t\t\t\tconst oldViewContainer =\n\t\t\t\t\t\t\t\tthis.viewDescriptorService.getViewContainerByViewId(\n\t\t\t\t\t\t\t\t\tdropData.id,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst viewDescriptor =\n\t\t\t\t\t\t\t\tthis.viewDescriptorService.getViewDescriptorById(\n\t\t\t\t\t\t\t\t\tdropData.id,\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\toldViewContainer !== this.viewContainer &&\n\t\t\t\t\t\t\t\t(!viewDescriptor ||\n\t\t\t\t\t\t\t\t\t!viewDescriptor.canMoveView ||\n\t\t\t\t\t\t\t\t\tthis.viewContainer.rejectAddedViews)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\toverlay = new ViewPaneDropOverlay(\n\t\t\t\t\t\t\t\tparent,\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\tbounds,\n\t\t\t\t\t\t\t\tthis.viewDescriptorService.getViewContainerLocation(\n\t\t\t\t\t\t\t\t\tthis.viewContainer,\n\t\t\t\t\t\t\t\t)!,\n\t\t\t\t\t\t\t\tthis.themeService,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tdropData.type === \"composite\" &&\n\t\t\t\t\t\t\tdropData.id !== this.viewContainer.id\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst container =\n\t\t\t\t\t\t\t\tthis.viewDescriptorService.getViewContainerById(\n\t\t\t\t\t\t\t\t\tdropData.id,\n\t\t\t\t\t\t\t\t)!;\n\t\t\t\t\t\t\tconst viewsToMove =\n\t\t\t\t\t\t\t\tthis.viewDescriptorService.getViewContainerModel(\n\t\t\t\t\t\t\t\t\tcontainer,\n\t\t\t\t\t\t\t\t).allViewDescriptors;\n\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t!viewsToMove.some((v) => !v.canMoveView) &&\n\t\t\t\t\t\t\t\tviewsToMove.length > 0\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\toverlay = new ViewPaneDropOverlay(\n\t\t\t\t\t\t\t\t\tparent,\n\t\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\t\tbounds,\n\t\t\t\t\t\t\t\t\tthis.viewDescriptorService.getViewContainerLocation(\n\t\t\t\t\t\t\t\t\t\tthis.viewContainer,\n\t\t\t\t\t\t\t\t\t)!,\n\t\t\t\t\t\t\t\t\tthis.themeService,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tonDragOver: (e) => {\n\t\t\t\t\tif (overlay && overlay.disposed) {\n\t\t\t\t\t\toverlay = undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (overlay && !inBounds(bounds, e.eventData)) {\n\t\t\t\t\t\toverlay.dispose();\n\t\t\t\t\t\toverlay = undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (inBounds(bounds, e.eventData)) {\n\t\t\t\t\t\ttoggleDropEffect(\n\t\t\t\t\t\t\te.eventData.dataTransfer,\n\t\t\t\t\t\t\t\"move\",\n\t\t\t\t\t\t\toverlay !== undefined,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tonDragLeave: (e) => {\n\t\t\t\t\toverlay?.dispose();\n\t\t\t\t\toverlay = undefined;\n\t\t\t\t},\n\t\t\t\tonDrop: (e) => {\n\t\t\t\t\tif (overlay) {\n\t\t\t\t\t\tconst dropData = e.dragAndDropData.getData();\n\t\t\t\t\t\tconst viewsToMove: IViewDescriptor[] = [];\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tdropData.type === \"composite\" &&\n\t\t\t\t\t\t\tdropData.id !== this.viewContainer.id\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst container =\n\t\t\t\t\t\t\t\tthis.viewDescriptorService.getViewContainerById(\n\t\t\t\t\t\t\t\t\tdropData.id,\n\t\t\t\t\t\t\t\t)!;\n\t\t\t\t\t\t\tconst allViews =\n\t\t\t\t\t\t\t\tthis.viewDescriptorService.getViewContainerModel(\n\t\t\t\t\t\t\t\t\tcontainer,\n\t\t\t\t\t\t\t\t).allViewDescriptors;\n\t\t\t\t\t\t\tif (!allViews.some((v) => !v.canMoveView)) {\n\t\t\t\t\t\t\t\tviewsToMove.push(...allViews);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (dropData.type === \"view\") {\n\t\t\t\t\t\t\tconst oldViewContainer =\n\t\t\t\t\t\t\t\tthis.viewDescriptorService.getViewContainerByViewId(\n\t\t\t\t\t\t\t\t\tdropData.id,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst viewDescriptor =\n\t\t\t\t\t\t\t\tthis.viewDescriptorService.getViewDescriptorById(\n\t\t\t\t\t\t\t\t\tdropData.id,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\toldViewContainer !== this.viewContainer &&\n\t\t\t\t\t\t\t\tviewDescriptor &&\n\t\t\t\t\t\t\t\tviewDescriptor.canMoveView\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tthis.viewDescriptorService.moveViewsToContainer(\n\t\t\t\t\t\t\t\t\t[viewDescriptor],\n\t\t\t\t\t\t\t\t\tthis.viewContainer,\n\t\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\t\t\"dnd\",\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst paneCount = this.panes.length;\n\n\t\t\t\t\t\tif (viewsToMove.length > 0) {\n\t\t\t\t\t\t\tthis.viewDescriptorService.moveViewsToContainer(\n\t\t\t\t\t\t\t\tviewsToMove,\n\t\t\t\t\t\t\t\tthis.viewContainer,\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\t\"dnd\",\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (paneCount > 0) {\n\t\t\t\t\t\t\tfor (const view of viewsToMove) {\n\t\t\t\t\t\t\t\tconst paneToMove = this.panes.find(\n\t\t\t\t\t\t\t\t\t(p) => p.id === view.id,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (paneToMove) {\n\t\t\t\t\t\t\t\t\tthis.movePane(\n\t\t\t\t\t\t\t\t\t\tpaneToMove,\n\t\t\t\t\t\t\t\t\t\tthis.panes[this.panes.length - 1],\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\toverlay?.dispose();\n\t\t\t\t\toverlay = undefined;\n\t\t\t\t},\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(this.onDidSashChange(() => this.saveViewSizes()));\n\t\tthis._register(\n\t\t\tthis.viewContainerModel.onDidAddVisibleViewDescriptors((added) =>\n\t\t\t\tthis.onDidAddViewDescriptors(added),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.viewContainerModel.onDidRemoveVisibleViewDescriptors(\n\t\t\t\t(removed) => this.onDidRemoveViewDescriptors(removed),\n\t\t\t),\n\t\t);\n\t\tconst addedViews: IAddedViewDescriptorRef[] =\n\t\t\tthis.viewContainerModel.visibleViewDescriptors.map(\n\t\t\t\t(viewDescriptor, index) => {\n\t\t\t\t\tconst size = this.viewContainerModel.getSize(\n\t\t\t\t\t\tviewDescriptor.id,\n\t\t\t\t\t);\n\t\t\t\t\tconst collapsed = this.viewContainerModel.isCollapsed(\n\t\t\t\t\t\tviewDescriptor.id,\n\t\t\t\t\t);\n\t\t\t\t\treturn { viewDescriptor, index, size, collapsed };\n\t\t\t\t},\n\t\t\t);\n\t\tif (addedViews.length) {\n\t\t\tthis.onDidAddViewDescriptors(addedViews);\n\t\t}\n\n\t\t// Update headers after and title contributed views after available, since we read from cache in the beginning to know if the viewlet has single view or not. Ref #29609\n\t\tthis.extensionService.whenInstalledExtensionsRegistered().then(() => {\n\t\t\tthis.areExtensionsReady = true;\n\t\t\tif (this.panes.length) {\n\t\t\t\tthis.updateTitleArea();\n\t\t\t\tthis.updateViewHeaders();\n\t\t\t}\n\t\t\tthis._register(\n\t\t\t\tthis.configurationService.onDidChangeConfiguration((e) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\te.affectsConfiguration(\n\t\t\t\t\t\t\tLayoutSettings.ACTIVITY_BAR_LOCATION,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.updateViewHeaders();\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\n\t\tthis._register(\n\t\t\tthis.viewContainerModel.onDidChangeActiveViewDescriptors(() =>\n\t\t\t\tthis._onTitleAreaUpdate.fire(),\n\t\t\t),\n\t\t);\n\t}\n\n\tgetTitle(): string {\n\t\tconst containerTitle = this.viewContainerModel.title;\n\n\t\tif (this.isViewMergedWithContainer()) {\n\t\t\tconst singleViewPaneContainerTitle =\n\t\t\t\tthis.paneItems[0].pane.singleViewPaneContainerTitle;\n\t\t\tif (singleViewPaneContainerTitle) {\n\t\t\t\treturn singleViewPaneContainerTitle;\n\t\t\t}\n\n\t\t\tconst paneItemTitle = this.paneItems[0].pane.title;\n\t\t\tif (containerTitle === paneItemTitle) {\n\t\t\t\treturn paneItemTitle;\n\t\t\t}\n\n\t\t\treturn paneItemTitle\n\t\t\t\t? `${containerTitle}: ${paneItemTitle}`\n\t\t\t\t: containerTitle;\n\t\t}\n\n\t\treturn containerTitle;\n\t}\n\n\tprivate showContextMenu(event: StandardMouseEvent): void {\n\t\tfor (const paneItem of this.paneItems) {\n\t\t\t// Do not show context menu if target is coming from inside pane views\n\t\t\tif (isAncestor(event.target, paneItem.pane.element)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => event,\n\t\t\tgetActions: () => this.menuActions?.getContextMenuActions() ?? [],\n\t\t});\n\t}\n\n\tgetActionsContext(): unknown {\n\t\tif (this.isViewMergedWithContainer()) {\n\t\t\treturn this.panes[0].getActionsContext();\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tgetActionViewItem(\n\t\taction: IAction,\n\t\toptions: IBaseActionViewItemOptions,\n\t): IActionViewItem | undefined {\n\t\tif (this.isViewMergedWithContainer()) {\n\t\t\treturn this.paneItems[0].pane.getActionViewItem(action, options);\n\t\t}\n\t\treturn createActionViewItem(this.instantiationService, action, options);\n\t}\n\n\tfocus(): void {\n\t\tlet paneToFocus: ViewPane | undefined;\n\t\tif (this.lastFocusedPane) {\n\t\t\tpaneToFocus = this.lastFocusedPane;\n\t\t} else if (this.paneItems.length > 0) {\n\t\t\tfor (const { pane } of this.paneItems) {\n\t\t\t\tif (pane.isExpanded()) {\n\t\t\t\t\tpaneToFocus = pane;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (paneToFocus) {\n\t\t\tpaneToFocus.focus();\n\t\t}\n\t}\n\n\tprivate get orientation(): Orientation {\n\t\tswitch (\n\t\t\tthis.viewDescriptorService.getViewContainerLocation(\n\t\t\t\tthis.viewContainer,\n\t\t\t)\n\t\t) {\n\t\t\tcase ViewContainerLocation.Sidebar:\n\t\t\tcase ViewContainerLocation.AuxiliaryBar:\n\t\t\t\treturn Orientation.VERTICAL;\n\t\t\tcase ViewContainerLocation.Panel: {\n\t\t\t\treturn isHorizontal(this.layoutService.getPanelPosition())\n\t\t\t\t\t? Orientation.HORIZONTAL\n\t\t\t\t\t: Orientation.VERTICAL;\n\t\t\t}\n\t\t}\n\n\t\treturn Orientation.VERTICAL;\n\t}\n\n\tlayout(dimension: Dimension): void {\n\t\tif (this.paneview) {\n\t\t\tif (this.paneview.orientation !== this.orientation) {\n\t\t\t\tthis.paneview.flipOrientation(\n\t\t\t\t\tdimension.height,\n\t\t\t\t\tdimension.width,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.paneview.layout(dimension.height, dimension.width);\n\t\t}\n\n\t\tthis.dimension = dimension;\n\t\tif (this.didLayout) {\n\t\t\tthis.saveViewSizes();\n\t\t} else {\n\t\t\tthis.didLayout = true;\n\t\t\tthis.restoreViewSizes();\n\t\t}\n\t}\n\n\tsetBoundarySashes(sashes: IBoundarySashes): void {\n\t\tthis._boundarySashes = sashes;\n\t\tthis.paneview?.setBoundarySashes(sashes);\n\t}\n\n\tgetOptimalWidth(): number {\n\t\tconst additionalMargin = 16;\n\t\tconst optimalWidth = Math.max(\n\t\t\t...this.panes.map((view) => view.getOptimalWidth() || 0),\n\t\t);\n\t\treturn optimalWidth + additionalMargin;\n\t}\n\n\taddPanes(\n\t\tpanes: {\n\t\t\tpane: ViewPane;\n\t\t\tsize: number;\n\t\t\tindex?: number;\n\t\t\tdisposable: IDisposable;\n\t\t}[],\n\t): void {\n\t\tconst wasMerged = this.isViewMergedWithContainer();\n\n\t\tfor (const { pane, size, index, disposable } of panes) {\n\t\t\tthis.addPane(pane, size, disposable, index);\n\t\t}\n\n\t\tthis.updateViewHeaders();\n\t\tif (this.isViewMergedWithContainer() !== wasMerged) {\n\t\t\tthis.updateTitleArea();\n\t\t}\n\n\t\tthis._onDidAddViews.fire(panes.map(({ pane }) => pane));\n\t}\n\n\tsetVisible(visible: boolean): void {\n\t\tif (this.visible !== !!visible) {\n\t\t\tthis.visible = visible;\n\n\t\t\tthis._onDidChangeVisibility.fire(visible);\n\t\t}\n\n\t\tthis.panes\n\t\t\t.filter((view) => view.isVisible() !== visible)\n\t\t\t.map((view) => view.setVisible(visible));\n\t}\n\n\tisVisible(): boolean {\n\t\treturn this.visible;\n\t}\n\n\tprotected updateTitleArea(): void {\n\t\tthis._onTitleAreaUpdate.fire();\n\t}\n\n\tprotected createView(\n\t\tviewDescriptor: IViewDescriptor,\n\t\toptions: IViewletViewOptions,\n\t): ViewPane {\n\t\treturn (this.instantiationService as any).createInstance(\n\t\t\tviewDescriptor.ctorDescriptor.ctor,\n\t\t\t...(viewDescriptor.ctorDescriptor.staticArguments || []),\n\t\t\toptions,\n\t\t) as ViewPane;\n\t}\n\n\tgetView(id: string): ViewPane | undefined {\n\t\treturn this.panes.filter((view) => view.id === id)[0];\n\t}\n\n\tprivate saveViewSizes(): void {\n\t\t// Save size only when the layout has happened\n\t\tif (this.didLayout) {\n\t\t\tthis.viewContainerModel.setSizes(\n\t\t\t\tthis.panes.map((view) => ({\n\t\t\t\t\tid: view.id,\n\t\t\t\t\tsize: this.getPaneSize(view),\n\t\t\t\t})),\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate restoreViewSizes(): void {\n\t\t// Restore sizes only when the layout has happened\n\t\tif (this.didLayout) {\n\t\t\tlet initialSizes;\n\t\t\tfor (\n\t\t\t\tlet i = 0;\n\t\t\t\ti < this.viewContainerModel.visibleViewDescriptors.length;\n\t\t\t\ti++\n\t\t\t) {\n\t\t\t\tconst pane = this.panes[i];\n\t\t\t\tconst viewDescriptor =\n\t\t\t\t\tthis.viewContainerModel.visibleViewDescriptors[i];\n\t\t\t\tconst size = this.viewContainerModel.getSize(viewDescriptor.id);\n\n\t\t\t\tif (typeof size === \"number\") {\n\t\t\t\t\tthis.resizePane(pane, size);\n\t\t\t\t} else {\n\t\t\t\t\tinitialSizes = initialSizes\n\t\t\t\t\t\t? initialSizes\n\t\t\t\t\t\t: this.computeInitialSizes();\n\t\t\t\t\tthis.resizePane(pane, initialSizes.get(pane.id) || 200);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate computeInitialSizes(): Map<string, number> {\n\t\tconst sizes: Map<string, number> = new Map<string, number>();\n\t\tif (this.dimension) {\n\t\t\tconst totalWeight =\n\t\t\t\tthis.viewContainerModel.visibleViewDescriptors.reduce(\n\t\t\t\t\t(totalWeight, { weight }) => totalWeight + (weight || 20),\n\t\t\t\t\t0,\n\t\t\t\t);\n\t\t\tfor (const viewDescriptor of this.viewContainerModel\n\t\t\t\t.visibleViewDescriptors) {\n\t\t\t\tif (this.orientation === Orientation.VERTICAL) {\n\t\t\t\t\tsizes.set(\n\t\t\t\t\t\tviewDescriptor.id,\n\t\t\t\t\t\t(this.dimension.height *\n\t\t\t\t\t\t\t(viewDescriptor.weight || 20)) /\n\t\t\t\t\t\t\ttotalWeight,\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tsizes.set(\n\t\t\t\t\t\tviewDescriptor.id,\n\t\t\t\t\t\t(this.dimension.width * (viewDescriptor.weight || 20)) /\n\t\t\t\t\t\t\ttotalWeight,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn sizes;\n\t}\n\n\tprotected override saveState(): void {\n\t\tthis.panes.forEach((view) => view.saveState());\n\t\tthis.storageService.store(\n\t\t\tthis.visibleViewsStorageId,\n\t\t\tthis.length,\n\t\t\tStorageScope.WORKSPACE,\n\t\t\tStorageTarget.MACHINE,\n\t\t);\n\t}\n\n\tprivate onContextMenu(event: StandardMouseEvent, viewPane: ViewPane): void {\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\n\t\tconst actions: IAction[] = viewPane.menuActions.getContextMenuActions();\n\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => event,\n\t\t\tgetActions: () => actions,\n\t\t});\n\t}\n\n\topenView(id: string, focus?: boolean): IView | undefined {\n\t\tlet view = this.getView(id);\n\t\tif (!view) {\n\t\t\tthis.toggleViewVisibility(id);\n\t\t}\n\t\tview = this.getView(id);\n\t\tif (view) {\n\t\t\tview.setExpanded(true);\n\t\t\tif (focus) {\n\t\t\t\tview.focus();\n\t\t\t}\n\t\t}\n\t\treturn view;\n\t}\n\n\tprotected onDidAddViewDescriptors(\n\t\tadded: IAddedViewDescriptorRef[],\n\t): ViewPane[] {\n\t\tconst panesToAdd: {\n\t\t\tpane: ViewPane;\n\t\t\tsize: number;\n\t\t\tindex: number;\n\t\t\tdisposable: IDisposable;\n\t\t}[] = [];\n\n\t\tfor (const { viewDescriptor, collapsed, index, size } of added) {\n\t\t\tconst pane = this.createView(viewDescriptor, {\n\t\t\t\tid: viewDescriptor.id,\n\t\t\t\ttitle: viewDescriptor.name.value,\n\t\t\t\tfromExtensionId: (\n\t\t\t\t\tviewDescriptor as Partial<ICustomViewDescriptor>\n\t\t\t\t).extensionId,\n\t\t\t\texpanded: !collapsed,\n\t\t\t\tsingleViewPaneContainerTitle:\n\t\t\t\t\tviewDescriptor.singleViewPaneContainerTitle,\n\t\t\t});\n\n\t\t\tpane.render();\n\t\t\tconst contextMenuDisposable = addDisposableListener(\n\t\t\t\tpane.draggableElement,\n\t\t\t\t\"contextmenu\",\n\t\t\t\t(e) => {\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.onContextMenu(\n\t\t\t\t\t\tnew StandardMouseEvent(\n\t\t\t\t\t\t\tgetWindow(pane.draggableElement),\n\t\t\t\t\t\t\te,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tpane,\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tconst collapseDisposable = Event.latch(\n\t\t\t\tEvent.map(pane.onDidChange, () => !pane.isExpanded()),\n\t\t\t)((collapsed) => {\n\t\t\t\tthis.viewContainerModel.setCollapsed(\n\t\t\t\t\tviewDescriptor.id,\n\t\t\t\t\tcollapsed,\n\t\t\t\t);\n\t\t\t});\n\n\t\t\tpanesToAdd.push({\n\t\t\t\tpane,\n\t\t\t\tsize: size || pane.minimumSize,\n\t\t\t\tindex,\n\t\t\t\tdisposable: combinedDisposable(\n\t\t\t\t\tcontextMenuDisposable,\n\t\t\t\t\tcollapseDisposable,\n\t\t\t\t),\n\t\t\t});\n\t\t}\n\n\t\tthis.addPanes(panesToAdd);\n\t\tthis.restoreViewSizes();\n\n\t\tconst panes: ViewPane[] = [];\n\t\tfor (const { pane } of panesToAdd) {\n\t\t\tpane.setVisible(this.isVisible());\n\t\t\tpanes.push(pane);\n\t\t}\n\t\treturn panes;\n\t}\n\n\tprivate onDidRemoveViewDescriptors(removed: IViewDescriptorRef[]): void {\n\t\tremoved = removed.sort((a, b) => b.index - a.index);\n\t\tconst panesToRemove: ViewPane[] = [];\n\t\tfor (const { index } of removed) {\n\t\t\tconst paneItem = this.paneItems[index];\n\t\t\tif (paneItem) {\n\t\t\t\tpanesToRemove.push(this.paneItems[index].pane);\n\t\t\t}\n\t\t}\n\n\t\tif (panesToRemove.length) {\n\t\t\tthis.removePanes(panesToRemove);\n\n\t\t\tfor (const pane of panesToRemove) {\n\t\t\t\tpane.setVisible(false);\n\t\t\t}\n\t\t}\n\t}\n\n\ttoggleViewVisibility(viewId: string): void {\n\t\t// Check if view is active\n\t\tif (\n\t\t\tthis.viewContainerModel.activeViewDescriptors.some(\n\t\t\t\t(viewDescriptor) => viewDescriptor.id === viewId,\n\t\t\t)\n\t\t) {\n\t\t\tconst visible = !this.viewContainerModel.isVisible(viewId);\n\t\t\tthis.viewContainerModel.setVisible(viewId, visible);\n\t\t}\n\t}\n\n\tprivate addPane(\n\t\tpane: ViewPane,\n\t\tsize: number,\n\t\tdisposable: IDisposable,\n\t\tindex = this.paneItems.length - 1,\n\t): void {\n\t\tconst onDidFocus = pane.onDidFocus(() => {\n\t\t\tthis._onDidFocusView.fire(pane);\n\t\t\tthis.lastFocusedPane = pane;\n\t\t});\n\t\tconst onDidBlur = pane.onDidBlur(() => this._onDidBlurView.fire(pane));\n\t\tconst onDidChangeTitleArea = pane.onDidChangeTitleArea(() => {\n\t\t\tif (this.isViewMergedWithContainer()) {\n\t\t\t\tthis.updateTitleArea();\n\t\t\t}\n\t\t});\n\n\t\tconst onDidChangeVisibility = pane.onDidChangeBodyVisibility(() =>\n\t\t\tthis._onDidChangeViewVisibility.fire(pane),\n\t\t);\n\t\tconst onDidChange = pane.onDidChange(() => {\n\t\t\tif (pane === this.lastFocusedPane && !pane.isExpanded()) {\n\t\t\t\tthis.lastFocusedPane = undefined;\n\t\t\t}\n\t\t});\n\n\t\tconst isPanel =\n\t\t\tthis.viewDescriptorService.getViewContainerLocation(\n\t\t\t\tthis.viewContainer,\n\t\t\t) === ViewContainerLocation.Panel;\n\t\tpane.style({\n\t\t\theaderForeground: asCssVariable(\n\t\t\t\tisPanel\n\t\t\t\t\t? PANEL_SECTION_HEADER_FOREGROUND\n\t\t\t\t\t: SIDE_BAR_SECTION_HEADER_FOREGROUND,\n\t\t\t),\n\t\t\theaderBackground: asCssVariable(\n\t\t\t\tisPanel\n\t\t\t\t\t? PANEL_SECTION_HEADER_BACKGROUND\n\t\t\t\t\t: SIDE_BAR_SECTION_HEADER_BACKGROUND,\n\t\t\t),\n\t\t\theaderBorder: asCssVariable(\n\t\t\t\tisPanel\n\t\t\t\t\t? PANEL_SECTION_HEADER_BORDER\n\t\t\t\t\t: SIDE_BAR_SECTION_HEADER_BORDER,\n\t\t\t),\n\t\t\tdropBackground: asCssVariable(\n\t\t\t\tisPanel\n\t\t\t\t\t? PANEL_SECTION_DRAG_AND_DROP_BACKGROUND\n\t\t\t\t\t: SIDE_BAR_DRAG_AND_DROP_BACKGROUND,\n\t\t\t),\n\t\t\tleftBorder: isPanel\n\t\t\t\t? asCssVariable(PANEL_SECTION_BORDER)\n\t\t\t\t: undefined,\n\t\t});\n\n\t\tconst store = new DisposableStore();\n\t\tstore.add(disposable);\n\t\tstore.add(\n\t\t\tcombinedDisposable(\n\t\t\t\tpane,\n\t\t\t\tonDidFocus,\n\t\t\t\tonDidBlur,\n\t\t\t\tonDidChangeTitleArea,\n\t\t\t\tonDidChange,\n\t\t\t\tonDidChangeVisibility,\n\t\t\t),\n\t\t);\n\t\tconst paneItem: IViewPaneItem = { pane, disposable: store };\n\n\t\tthis.paneItems.splice(index, 0, paneItem);\n\t\tassertIsDefined(this.paneview).addPane(pane, size, index);\n\n\t\tlet overlay: ViewPaneDropOverlay | undefined;\n\n\t\tstore.add(\n\t\t\tCompositeDragAndDropObserver.INSTANCE.registerDraggable(\n\t\t\t\tpane.draggableElement,\n\t\t\t\t() => {\n\t\t\t\t\treturn { type: \"view\", id: pane.id };\n\t\t\t\t},\n\t\t\t\t{},\n\t\t\t),\n\t\t);\n\n\t\tstore.add(\n\t\t\tCompositeDragAndDropObserver.INSTANCE.registerTarget(\n\t\t\t\tpane.dropTargetElement,\n\t\t\t\t{\n\t\t\t\t\tonDragEnter: (e) => {\n\t\t\t\t\t\tif (!overlay) {\n\t\t\t\t\t\t\tconst dropData = e.dragAndDropData.getData();\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tdropData.type === \"view\" &&\n\t\t\t\t\t\t\t\tdropData.id !== pane.id\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tconst oldViewContainer =\n\t\t\t\t\t\t\t\t\tthis.viewDescriptorService.getViewContainerByViewId(\n\t\t\t\t\t\t\t\t\t\tdropData.id,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tconst viewDescriptor =\n\t\t\t\t\t\t\t\t\tthis.viewDescriptorService.getViewDescriptorById(\n\t\t\t\t\t\t\t\t\t\tdropData.id,\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\toldViewContainer !== this.viewContainer &&\n\t\t\t\t\t\t\t\t\t(!viewDescriptor ||\n\t\t\t\t\t\t\t\t\t\t!viewDescriptor.canMoveView ||\n\t\t\t\t\t\t\t\t\t\tthis.viewContainer.rejectAddedViews)\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\toverlay = new ViewPaneDropOverlay(\n\t\t\t\t\t\t\t\t\tpane.dropTargetElement,\n\t\t\t\t\t\t\t\t\tthis.orientation ?? Orientation.VERTICAL,\n\t\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\t\tthis.viewDescriptorService.getViewContainerLocation(\n\t\t\t\t\t\t\t\t\t\tthis.viewContainer,\n\t\t\t\t\t\t\t\t\t)!,\n\t\t\t\t\t\t\t\t\tthis.themeService,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tdropData.type === \"composite\" &&\n\t\t\t\t\t\t\t\tdropData.id !== this.viewContainer.id &&\n\t\t\t\t\t\t\t\t!this.viewContainer.rejectAddedViews\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tconst container =\n\t\t\t\t\t\t\t\t\tthis.viewDescriptorService.getViewContainerById(\n\t\t\t\t\t\t\t\t\t\tdropData.id,\n\t\t\t\t\t\t\t\t\t)!;\n\t\t\t\t\t\t\t\tconst viewsToMove =\n\t\t\t\t\t\t\t\t\tthis.viewDescriptorService.getViewContainerModel(\n\t\t\t\t\t\t\t\t\t\tcontainer,\n\t\t\t\t\t\t\t\t\t).allViewDescriptors;\n\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t!viewsToMove.some((v) => !v.canMoveView) &&\n\t\t\t\t\t\t\t\t\tviewsToMove.length > 0\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\toverlay = new ViewPaneDropOverlay(\n\t\t\t\t\t\t\t\t\t\tpane.dropTargetElement,\n\t\t\t\t\t\t\t\t\t\tthis.orientation ??\n\t\t\t\t\t\t\t\t\t\t\tOrientation.VERTICAL,\n\t\t\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\t\t\tthis.viewDescriptorService.getViewContainerLocation(\n\t\t\t\t\t\t\t\t\t\t\tthis.viewContainer,\n\t\t\t\t\t\t\t\t\t\t)!,\n\t\t\t\t\t\t\t\t\t\tthis.themeService,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tonDragOver: (e) => {\n\t\t\t\t\t\ttoggleDropEffect(\n\t\t\t\t\t\t\te.eventData.dataTransfer,\n\t\t\t\t\t\t\t\"move\",\n\t\t\t\t\t\t\toverlay !== undefined,\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t\tonDragLeave: (e) => {\n\t\t\t\t\t\toverlay?.dispose();\n\t\t\t\t\t\toverlay = undefined;\n\t\t\t\t\t},\n\t\t\t\t\tonDrop: (e) => {\n\t\t\t\t\t\tif (overlay) {\n\t\t\t\t\t\t\tconst dropData = e.dragAndDropData.getData();\n\t\t\t\t\t\t\tconst viewsToMove: IViewDescriptor[] = [];\n\t\t\t\t\t\t\tlet anchorView: IViewDescriptor | undefined;\n\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tdropData.type === \"composite\" &&\n\t\t\t\t\t\t\t\tdropData.id !== this.viewContainer.id &&\n\t\t\t\t\t\t\t\t!this.viewContainer.rejectAddedViews\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tconst container =\n\t\t\t\t\t\t\t\t\tthis.viewDescriptorService.getViewContainerById(\n\t\t\t\t\t\t\t\t\t\tdropData.id,\n\t\t\t\t\t\t\t\t\t)!;\n\t\t\t\t\t\t\t\tconst allViews =\n\t\t\t\t\t\t\t\t\tthis.viewDescriptorService.getViewContainerModel(\n\t\t\t\t\t\t\t\t\t\tcontainer,\n\t\t\t\t\t\t\t\t\t).allViewDescriptors;\n\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tallViews.length > 0 &&\n\t\t\t\t\t\t\t\t\t!allViews.some((v) => !v.canMoveView)\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tviewsToMove.push(...allViews);\n\t\t\t\t\t\t\t\t\tanchorView = allViews[0];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (dropData.type === \"view\") {\n\t\t\t\t\t\t\t\tconst oldViewContainer =\n\t\t\t\t\t\t\t\t\tthis.viewDescriptorService.getViewContainerByViewId(\n\t\t\t\t\t\t\t\t\t\tdropData.id,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tconst viewDescriptor =\n\t\t\t\t\t\t\t\t\tthis.viewDescriptorService.getViewDescriptorById(\n\t\t\t\t\t\t\t\t\t\tdropData.id,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\toldViewContainer !== this.viewContainer &&\n\t\t\t\t\t\t\t\t\tviewDescriptor &&\n\t\t\t\t\t\t\t\t\tviewDescriptor.canMoveView &&\n\t\t\t\t\t\t\t\t\t!this.viewContainer.rejectAddedViews\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tviewsToMove.push(viewDescriptor);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (viewDescriptor) {\n\t\t\t\t\t\t\t\t\tanchorView = viewDescriptor;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (viewsToMove) {\n\t\t\t\t\t\t\t\tthis.viewDescriptorService.moveViewsToContainer(\n\t\t\t\t\t\t\t\t\tviewsToMove,\n\t\t\t\t\t\t\t\t\tthis.viewContainer,\n\t\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\t\t\"dnd\",\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (anchorView) {\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\toverlay.currentDropOperation ===\n\t\t\t\t\t\t\t\t\t\tDropDirection.DOWN ||\n\t\t\t\t\t\t\t\t\toverlay.currentDropOperation ===\n\t\t\t\t\t\t\t\t\t\tDropDirection.RIGHT\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tconst fromIndex = this.panes.findIndex(\n\t\t\t\t\t\t\t\t\t\t(p) => p.id === anchorView!.id,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tlet toIndex = this.panes.findIndex(\n\t\t\t\t\t\t\t\t\t\t(p) => p.id === pane.id,\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\tif (fromIndex >= 0 && toIndex >= 0) {\n\t\t\t\t\t\t\t\t\t\tif (fromIndex > toIndex) {\n\t\t\t\t\t\t\t\t\t\t\ttoIndex++;\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\ttoIndex < this.panes.length &&\n\t\t\t\t\t\t\t\t\t\t\ttoIndex !== fromIndex\n\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\tthis.movePane(\n\t\t\t\t\t\t\t\t\t\t\t\tthis.panes[fromIndex],\n\t\t\t\t\t\t\t\t\t\t\t\tthis.panes[toIndex],\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\toverlay.currentDropOperation ===\n\t\t\t\t\t\t\t\t\t\tDropDirection.UP ||\n\t\t\t\t\t\t\t\t\toverlay.currentDropOperation ===\n\t\t\t\t\t\t\t\t\t\tDropDirection.LEFT\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tconst fromIndex = this.panes.findIndex(\n\t\t\t\t\t\t\t\t\t\t(p) => p.id === anchorView!.id,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tlet toIndex = this.panes.findIndex(\n\t\t\t\t\t\t\t\t\t\t(p) => p.id === pane.id,\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\tif (fromIndex >= 0 && toIndex >= 0) {\n\t\t\t\t\t\t\t\t\t\tif (fromIndex < toIndex) {\n\t\t\t\t\t\t\t\t\t\t\ttoIndex--;\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\ttoIndex >= 0 &&\n\t\t\t\t\t\t\t\t\t\t\ttoIndex !== fromIndex\n\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\tthis.movePane(\n\t\t\t\t\t\t\t\t\t\t\t\tthis.panes[fromIndex],\n\t\t\t\t\t\t\t\t\t\t\t\tthis.panes[toIndex],\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (viewsToMove.length > 1) {\n\t\t\t\t\t\t\t\t\tviewsToMove.slice(1).forEach((view) => {\n\t\t\t\t\t\t\t\t\t\tlet toIndex = this.panes.findIndex(\n\t\t\t\t\t\t\t\t\t\t\t(p) => p.id === anchorView!.id,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tconst fromIndex = this.panes.findIndex(\n\t\t\t\t\t\t\t\t\t\t\t(p) => p.id === view.id,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tif (fromIndex >= 0 && toIndex >= 0) {\n\t\t\t\t\t\t\t\t\t\t\tif (fromIndex > toIndex) {\n\t\t\t\t\t\t\t\t\t\t\t\ttoIndex++;\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t\ttoIndex < this.panes.length &&\n\t\t\t\t\t\t\t\t\t\t\t\ttoIndex !== fromIndex\n\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.movePane(\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.panes[fromIndex],\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.panes[toIndex],\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\tanchorView = view;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\toverlay?.dispose();\n\t\t\t\t\t\toverlay = undefined;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tremovePanes(panes: ViewPane[]): void {\n\t\tconst wasMerged = this.isViewMergedWithContainer();\n\n\t\tpanes.forEach((pane) => this.removePane(pane));\n\n\t\tthis.updateViewHeaders();\n\t\tif (wasMerged !== this.isViewMergedWithContainer()) {\n\t\t\tthis.updateTitleArea();\n\t\t}\n\n\t\tthis._onDidRemoveViews.fire(panes);\n\t}\n\n\tprivate removePane(pane: ViewPane): void {\n\t\tconst index = this.paneItems.findIndex((i) => i.pane === pane);\n\n\t\tif (index === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.lastFocusedPane === pane) {\n\t\t\tthis.lastFocusedPane = undefined;\n\t\t}\n\n\t\tassertIsDefined(this.paneview).removePane(pane);\n\t\tconst [paneItem] = this.paneItems.splice(index, 1);\n\t\tpaneItem.disposable.dispose();\n\t}\n\n\tmovePane(from: ViewPane, to: ViewPane): void {\n\t\tconst fromIndex = this.paneItems.findIndex(\n\t\t\t(item) => item.pane === from,\n\t\t);\n\t\tconst toIndex = this.paneItems.findIndex((item) => item.pane === to);\n\n\t\tconst fromViewDescriptor =\n\t\t\tthis.viewContainerModel.visibleViewDescriptors[fromIndex];\n\t\tconst toViewDescriptor =\n\t\t\tthis.viewContainerModel.visibleViewDescriptors[toIndex];\n\n\t\tif (fromIndex < 0 || fromIndex >= this.paneItems.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (toIndex < 0 || toIndex >= this.paneItems.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst [paneItem] = this.paneItems.splice(fromIndex, 1);\n\t\tthis.paneItems.splice(toIndex, 0, paneItem);\n\n\t\tassertIsDefined(this.paneview).movePane(from, to);\n\n\t\tthis.viewContainerModel.move(\n\t\t\tfromViewDescriptor.id,\n\t\t\ttoViewDescriptor.id,\n\t\t);\n\n\t\tthis.updateTitleArea();\n\t}\n\n\tresizePane(pane: ViewPane, size: number): void {\n\t\tassertIsDefined(this.paneview).resizePane(pane, size);\n\t}\n\n\tgetPaneSize(pane: ViewPane): number {\n\t\treturn assertIsDefined(this.paneview).getPaneSize(pane);\n\t}\n\n\tprivate updateViewHeaders(): void {\n\t\tif (this.isViewMergedWithContainer()) {\n\t\t\tif (this.paneItems[0].pane.isExpanded()) {\n\t\t\t\tthis.lastMergedCollapsedPane = undefined;\n\t\t\t} else {\n\t\t\t\tthis.lastMergedCollapsedPane = this.paneItems[0].pane;\n\t\t\t\tthis.paneItems[0].pane.setExpanded(true);\n\t\t\t}\n\t\t\tthis.paneItems[0].pane.headerVisible = false;\n\t\t\tthis.paneItems[0].pane.collapsible = true;\n\t\t} else {\n\t\t\tif (this.paneItems.length === 1) {\n\t\t\t\tthis.paneItems[0].pane.headerVisible = true;\n\t\t\t\tif (this.paneItems[0].pane === this.lastMergedCollapsedPane) {\n\t\t\t\t\tthis.paneItems[0].pane.setExpanded(false);\n\t\t\t\t}\n\t\t\t\tthis.paneItems[0].pane.collapsible = false;\n\t\t\t} else {\n\t\t\t\tthis.paneItems.forEach((i) => {\n\t\t\t\t\ti.pane.headerVisible = true;\n\t\t\t\t\ti.pane.collapsible = true;\n\t\t\t\t\tif (i.pane === this.lastMergedCollapsedPane) {\n\t\t\t\t\t\ti.pane.setExpanded(false);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.lastMergedCollapsedPane = undefined;\n\t\t}\n\t}\n\n\tisViewMergedWithContainer(): boolean {\n\t\tif (\n\t\t\t!(\n\t\t\t\tthis.options.mergeViewWithContainerWhenSingleView &&\n\t\t\t\tthis.paneItems.length === 1\n\t\t\t)\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!this.areExtensionsReady) {\n\t\t\tif (this.visibleViewsCountFromCache === undefined) {\n\t\t\t\treturn this.paneItems[0].pane.isExpanded();\n\t\t\t}\n\t\t\t// Check in cache so that view do not jump. See #29609\n\t\t\treturn this.visibleViewsCountFromCache === 1;\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate onDidScrollPane() {\n\t\tfor (const pane of this.panes) {\n\t\t\tpane.onDidScrollRoot();\n\t\t}\n\t}\n\n\tprivate onDidSashReset(index: number) {\n\t\tlet firstPane;\n\t\tlet secondPane;\n\n\t\t// Deal with collapsed views: to be clever, we split the space taken by the nearest uncollapsed views\n\t\tfor (let i = index; i >= 0; i--) {\n\t\t\tif (\n\t\t\t\tthis.paneItems[i].pane?.isVisible() &&\n\t\t\t\tthis.paneItems[i]?.pane.isExpanded()\n\t\t\t) {\n\t\t\t\tfirstPane = this.paneItems[i].pane;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = index + 1; i < this.paneItems.length; i++) {\n\t\t\tif (\n\t\t\t\tthis.paneItems[i].pane?.isVisible() &&\n\t\t\t\tthis.paneItems[i]?.pane.isExpanded()\n\t\t\t) {\n\t\t\t\tsecondPane = this.paneItems[i].pane;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (firstPane && secondPane) {\n\t\t\tconst firstPaneSize = this.getPaneSize(firstPane);\n\t\t\tconst secondPaneSize = this.getPaneSize(secondPane);\n\n\t\t\t// Avoid rounding errors and be consistent when resizing\n\t\t\t// The first pane always get half rounded up and the second is half rounded down\n\t\t\tconst newFirstPaneSize = Math.ceil(\n\t\t\t\t(firstPaneSize + secondPaneSize) / 2,\n\t\t\t);\n\t\t\tconst newSecondPaneSize = Math.floor(\n\t\t\t\t(firstPaneSize + secondPaneSize) / 2,\n\t\t\t);\n\n\t\t\t// Shrink the larger pane first, then grow the smaller pane\n\t\t\t// This prevents interfering with other view sizes\n\t\t\tif (firstPaneSize > secondPaneSize) {\n\t\t\t\tthis.resizePane(firstPane, newFirstPaneSize);\n\t\t\t\tthis.resizePane(secondPane, newSecondPaneSize);\n\t\t\t} else {\n\t\t\t\tthis.resizePane(secondPane, newSecondPaneSize);\n\t\t\t\tthis.resizePane(firstPane, newFirstPaneSize);\n\t\t\t}\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tthis.paneItems.forEach((i) => i.disposable.dispose());\n\t\tif (this.paneview) {\n\t\t\tthis.paneview.dispose();\n\t\t}\n\t}\n}\n\nexport abstract class ViewPaneContainerAction<\n\tT extends IViewPaneContainer,\n> extends Action2 {\n\toverride readonly desc: Readonly<IAction2Options> & {\n\t\tviewPaneContainerId: string;\n\t};\n\tconstructor(\n\t\tdesc: Readonly<IAction2Options> & { viewPaneContainerId: string },\n\t) {\n\t\tsuper(desc);\n\t\tthis.desc = desc;\n\t}\n\n\trun(accessor: ServicesAccessor, ...args: any[]) {\n\t\tconst viewPaneContainer = accessor\n\t\t\t.get(IViewsService)\n\t\t\t.getActiveViewPaneContainerWithId(this.desc.viewPaneContainerId);\n\t\tif (viewPaneContainer) {\n\t\t\treturn this.runInViewPaneContainer(\n\t\t\t\taccessor,\n\t\t\t\t<T>viewPaneContainer,\n\t\t\t\t...args,\n\t\t\t);\n\t\t}\n\t}\n\n\tabstract runInViewPaneContainer(\n\t\taccessor: ServicesAccessor,\n\t\tviewPaneContainer: T,\n\t\t...args: any[]\n\t): any;\n}\n\nclass MoveViewPosition extends Action2 {\n\tconstructor(\n\t\tdesc: Readonly<IAction2Options>,\n\t\tprivate readonly offset: number,\n\t) {\n\t\tsuper(desc);\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst viewDescriptorService = accessor.get(IViewDescriptorService);\n\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\n\t\tconst viewId = FocusedViewContext.getValue(contextKeyService);\n\t\tif (viewId === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewContainer =\n\t\t\tviewDescriptorService.getViewContainerByViewId(viewId)!;\n\t\tconst model =\n\t\t\tviewDescriptorService.getViewContainerModel(viewContainer);\n\n\t\tconst viewDescriptor = model.visibleViewDescriptors.find(\n\t\t\t(vd) => vd.id === viewId,\n\t\t)!;\n\t\tconst currentIndex =\n\t\t\tmodel.visibleViewDescriptors.indexOf(viewDescriptor);\n\t\tif (\n\t\t\tcurrentIndex + this.offset < 0 ||\n\t\t\tcurrentIndex + this.offset >= model.visibleViewDescriptors.length\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst newPosition =\n\t\t\tmodel.visibleViewDescriptors[currentIndex + this.offset];\n\n\t\tmodel.move(viewDescriptor.id, newPosition.id);\n\t}\n}\n\nregisterAction2(\n\tclass MoveViewUp extends MoveViewPosition {\n\t\tconstructor() {\n\t\t\tsuper(\n\t\t\t\t{\n\t\t\t\t\tid: \"views.moveViewUp\",\n\t\t\t\t\ttitle: nls.localize(\"viewMoveUp\", \"Move View Up\"),\n\t\t\t\t\tkeybinding: {\n\t\t\t\t\t\tprimary: KeyChord(\n\t\t\t\t\t\t\tKeyMod.CtrlCmd + KeyCode.KeyK,\n\t\t\t\t\t\t\tKeyCode.UpArrow,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib + 1,\n\t\t\t\t\t\twhen: FocusedViewContext.notEqualsTo(\"\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t-1,\n\t\t\t);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass MoveViewLeft extends MoveViewPosition {\n\t\tconstructor() {\n\t\t\tsuper(\n\t\t\t\t{\n\t\t\t\t\tid: \"views.moveViewLeft\",\n\t\t\t\t\ttitle: nls.localize(\"viewMoveLeft\", \"Move View Left\"),\n\t\t\t\t\tkeybinding: {\n\t\t\t\t\t\tprimary: KeyChord(\n\t\t\t\t\t\t\tKeyMod.CtrlCmd + KeyCode.KeyK,\n\t\t\t\t\t\t\tKeyCode.LeftArrow,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib + 1,\n\t\t\t\t\t\twhen: FocusedViewContext.notEqualsTo(\"\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t-1,\n\t\t\t);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass MoveViewDown extends MoveViewPosition {\n\t\tconstructor() {\n\t\t\tsuper(\n\t\t\t\t{\n\t\t\t\t\tid: \"views.moveViewDown\",\n\t\t\t\t\ttitle: nls.localize(\"viewMoveDown\", \"Move View Down\"),\n\t\t\t\t\tkeybinding: {\n\t\t\t\t\t\tprimary: KeyChord(\n\t\t\t\t\t\t\tKeyMod.CtrlCmd + KeyCode.KeyK,\n\t\t\t\t\t\t\tKeyCode.DownArrow,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib + 1,\n\t\t\t\t\t\twhen: FocusedViewContext.notEqualsTo(\"\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t1,\n\t\t\t);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass MoveViewRight extends MoveViewPosition {\n\t\tconstructor() {\n\t\t\tsuper(\n\t\t\t\t{\n\t\t\t\t\tid: \"views.moveViewRight\",\n\t\t\t\t\ttitle: nls.localize(\"viewMoveRight\", \"Move View Right\"),\n\t\t\t\t\tkeybinding: {\n\t\t\t\t\t\tprimary: KeyChord(\n\t\t\t\t\t\t\tKeyMod.CtrlCmd + KeyCode.KeyK,\n\t\t\t\t\t\t\tKeyCode.RightArrow,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib + 1,\n\t\t\t\t\t\twhen: FocusedViewContext.notEqualsTo(\"\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t1,\n\t\t\t);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass MoveViews extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"vscode.moveViews\",\n\t\t\t\ttitle: nls.localize(\"viewsMove\", \"Move Views\"),\n\t\t\t});\n\t\t}\n\n\t\tasync run(\n\t\t\taccessor: ServicesAccessor,\n\t\t\toptions: { viewIds: string[]; destinationId: string },\n\t\t): Promise<void> {\n\t\t\tif (\n\t\t\t\t!Array.isArray(options?.viewIds) ||\n\t\t\t\ttypeof options?.destinationId !== \"string\"\n\t\t\t) {\n\t\t\t\treturn Promise.reject(\"Invalid arguments\");\n\t\t\t}\n\n\t\t\tconst viewDescriptorService = accessor.get(IViewDescriptorService);\n\n\t\t\tconst destination = viewDescriptorService.getViewContainerById(\n\t\t\t\toptions.destinationId,\n\t\t\t);\n\t\t\tif (!destination) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// FYI, don't use `moveViewsToContainer` in 1 shot, because it expects all views to have the same current location\n\t\t\tfor (const viewId of options.viewIds) {\n\t\t\t\tconst viewDescriptor =\n\t\t\t\t\tviewDescriptorService.getViewDescriptorById(viewId);\n\t\t\t\tif (viewDescriptor?.canMoveView) {\n\t\t\t\t\tviewDescriptorService.moveViewsToContainer(\n\t\t\t\t\t\t[viewDescriptor],\n\t\t\t\t\t\tdestination,\n\t\t\t\t\t\tViewVisibilityState.Default,\n\t\t\t\t\t\tthis.desc.id,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tawait accessor\n\t\t\t\t.get(IViewsService)\n\t\t\t\t.openViewContainer(destination.id, true);\n\t\t}\n\t},\n);\n"],
  "mappings": ";;;;;;;;;;;;AAKA;AAAA,EAEC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,0BAA0B;AACnC;AAAA,EACC;AAAA,EACA,aAAa;AAAA,OACP;AAEP;AAAA,EAEC;AAAA,OACM;AACP;AAAA,EAEC;AAAA,OACM;AAEP,SAAS,wBAAwB;AACjC,SAAS,SAAS,aAAa;AAC/B,SAAS,UAAU,SAAS,cAAc;AAC1C;AAAA,EACC;AAAA,EAEA;AAAA,EACA;AAAA,OACM;AACP,SAAS,uBAAuB;AAChC,OAAO;AAEP,YAAY,SAAS;AACrB,SAAS,4BAA4B;AACrC;AAAA,EACC;AAAA,EAEA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,6BAA6B;AACtC,SAAS,0BAA0B;AACnC,SAAS,2BAA2B;AACpC;AAAA,EACC;AAAA,OAEM;AACP,SAAS,wBAAwB;AACjC;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,yBAAyB;AAClC;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,gCAAgC;AACzC,SAAS,iBAAiB;AAC1B,SAAS,0BAA0B;AACnC;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP;AAAA,EAOC;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,yBAAyB;AAClC;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,qBAAqB;AAC9B,SAAS,4BAA4B;AACrC,SAAS,8BAA8B,wBAAwB;AAIxD,MAAM,eAAe,IAAI,OAAO,OAAO;AAC9C,aAAa,eAAe,OAAO,oBAAoB;AAAA,EACtD,SAAS;AAAA,EACT,OAAO,IAAI,SAAS,SAAS,OAAO;AAAA,EACpC,OAAO;AACR,CAAwB;AAWxB,IAAK,gBAAL,kBAAKA,mBAAL;AACC,EAAAA,8BAAA,QAAK,KAAL;AACA,EAAAA,8BAAA,UAAO,KAAP;AACA,EAAAA,8BAAA,UAAO,KAAP;AACA,EAAAA,8BAAA,WAAQ,KAAR;AAJI,SAAAA;AAAA,GAAA;AAcL,MAAM,4BAA4B,SAAS;AAAA,EAiB1C,YACS,aACA,aACA,QACE,UACV,cACC;AACD,UAAM,YAAY;AANV;AACA;AACA;AACE;AAIV,SAAK,0BAA0B,KAAK;AAAA,MACnC,IAAI,iBAAiB,MAAM,KAAK,QAAQ,GAAG,GAAG;AAAA,IAC/C;AAEA,SAAK,OAAO;AAAA,EACb;AAAA,EA7KD,OA+I2C;AAAA;AAAA;AAAA,EAC1C,OAAwB,aAAa;AAAA,EAE7B;AAAA,EACA;AAAA,EAEA;AAAA;AAAA,EAGA;AAAA,EAEA;AAAA,EAER,IAAI,uBAAkD;AACrD,WAAO,KAAK;AAAA,EACb;AAAA,EAiBA,IAAI,WAAoB;AACvB,WAAO,CAAC,CAAC,KAAK;AAAA,EACf;AAAA,EAEQ,SAAe;AAEtB,SAAK,YAAY,SAAS,cAAc,KAAK;AAC7C,SAAK,UAAU,KAAK,oBAAoB;AACxC,SAAK,UAAU,MAAM,MAAM;AAG3B,SAAK,YAAY,YAAY,KAAK,SAAS;AAC3C,SAAK,YAAY,UAAU,IAAI,cAAc;AAC7C,SAAK;AAAA,MACJ,aAAa,MAAM;AAClB,aAAK,UAAU,OAAO;AACtB,aAAK,YAAY,UAAU,OAAO,cAAc;AAAA,MACjD,CAAC;AAAA,IACF;AAGA,SAAK,UAAU,SAAS,cAAc,KAAK;AAC3C,SAAK,QAAQ,UAAU,IAAI,wBAAwB;AACnD,SAAK,UAAU,YAAY,KAAK,OAAO;AAGvC,SAAK,kBAAkB;AAGvB,SAAK,aAAa;AAAA,EACnB;AAAA,EAES,eAAqB;AAE7B,SAAK,QAAQ,MAAM,kBAClB,KAAK;AAAA,MACJ,KAAK,aAAa,sBAAsB,QACrC,yCACA;AAAA,IACJ,KAAK;AAGN,UAAM,4BAA4B,KAAK,SAAS,oBAAoB;AACpE,SAAK,QAAQ,MAAM,eAAe,6BAA6B;AAC/D,SAAK,QAAQ,MAAM,gBAAgB,4BAChC,SACA;AACH,SAAK,QAAQ,MAAM,eAAe,4BAC/B,WACA;AACH,SAAK,QAAQ,MAAM,eAAe,4BAC/B,QACA;AAEH,SAAK,QAAQ,MAAM,cAAc,6BAA6B;AAC9D,SAAK,QAAQ,MAAM,cAAc;AACjC,SAAK,QAAQ,MAAM,cAAc;AAAA,EAClC;AAAA,EAEQ,oBAA0B;AACjC,SAAK;AAAA,MACJ,IAAI,oBAAoB,KAAK,WAAW;AAAA,QACvC,YAAY,wBAAC,MAAM;AAElB,eAAK,gBAAgB,EAAE,SAAS,EAAE,OAAO;AAGzC,cAAI,KAAK,wBAAwB,YAAY,GAAG;AAC/C,iBAAK,wBAAwB,OAAO;AAAA,UACrC;AAAA,QACD,GARY;AAAA,QAUZ,aAAa,wBAAC,MAAM,KAAK,QAAQ,GAApB;AAAA,QACb,WAAW,wBAAC,MAAM,KAAK,QAAQ,GAApB;AAAA,QAEX,QAAQ,wBAAC,MAAM;AAEd,eAAK,QAAQ;AAAA,QACd,GAHQ;AAAA,MAIT,CAAC;AAAA,IACF;AAEA,SAAK;AAAA,MACJ,sBAAsB,KAAK,WAAW,UAAU,YAAY,MAAM;AAQjE,YAAI,CAAC,KAAK,wBAAwB,YAAY,GAAG;AAChD,eAAK,wBAAwB,SAAS;AAAA,QACvC;AAAA,MACD,CAAC;AAAA,IACF;AAAA,EACD;AAAA,EAEQ,gBAAgB,WAAmB,WAAyB;AACnE,UAAM,YAAY,KAAK,YAAY;AACnC,UAAM,aAAa,KAAK,YAAY;AAEpC,UAAM,sBAAsB,YAAY;AACxC,UAAM,uBAAuB,aAAa;AAE1C,QAAI;AAEJ,QAAI,KAAK,gBAAgB,YAAY,UAAU;AAC9C,UAAI,YAAY,sBAAsB;AACrC,wBAAgB;AAAA,MACjB,WAAW,aAAa,sBAAsB;AAC7C,wBAAgB;AAAA,MACjB;AAAA,IACD,WAAW,KAAK,gBAAgB,YAAY,YAAY;AACvD,UAAI,YAAY,qBAAqB;AACpC,wBAAgB;AAAA,MACjB,WAAW,aAAa,qBAAqB;AAC5C,wBAAgB;AAAA,MACjB;AAAA,IACD;AAGA,YAAQ,eAAe;AAAA,MACtB,KAAK;AACJ,aAAK,kBAAkB;AAAA,UACtB,KAAK;AAAA,UACL,MAAM;AAAA,UACN,OAAO;AAAA,UACP,QAAQ;AAAA,QACT,CAAC;AACD;AAAA,MACD,KAAK;AACJ,aAAK,kBAAkB;AAAA,UACtB,QAAQ;AAAA,UACR,MAAM;AAAA,UACN,OAAO;AAAA,UACP,QAAQ;AAAA,QACT,CAAC;AACD;AAAA,MACD,KAAK;AACJ,aAAK,kBAAkB;AAAA,UACtB,KAAK;AAAA,UACL,MAAM;AAAA,UACN,OAAO;AAAA,UACP,QAAQ;AAAA,QACT,CAAC;AACD;AAAA,MACD,KAAK;AACJ,aAAK,kBAAkB;AAAA,UACtB,KAAK;AAAA,UACL,OAAO;AAAA,UACP,OAAO;AAAA,UACP,QAAQ;AAAA,QACT,CAAC;AACD;AAAA,MACD,SAAS;AAIR,YAAI,MAAM;AACV,YAAI,OAAO;AACX,YAAI,QAAQ;AACZ,YAAI,SAAS;AACb,YAAI,KAAK,QAAQ;AAChB,gBAAM,eAAe,KAAK,UAAU,sBAAsB;AAC1D,gBAAM,GAAG,KAAK,OAAO,MAAM,aAAa,GAAG;AAC3C,iBAAO,GAAG,KAAK,OAAO,OAAO,aAAa,IAAI;AAC9C,mBAAS,GAAG,KAAK,OAAO,SAAS,KAAK,OAAO,GAAG;AAChD,kBAAQ,GAAG,KAAK,OAAO,QAAQ,KAAK,OAAO,IAAI;AAAA,QAChD;AAEA,aAAK,kBAAkB,EAAE,KAAK,MAAM,OAAO,OAAO,CAAC;AAAA,MACpD;AAAA,IACD;AAEA,QACE,KAAK,gBAAgB,YAAY,YAAY,cAAc,MAC3D,KAAK,gBAAgB,YAAY,cAAc,aAAa,IAC5D;AACD,WAAK,sBAAsB,aAAa;AAAA,IACzC,OAAO;AACN,WAAK,sBAAsB,MAAS;AAAA,IACrC;AAGA,SAAK,QAAQ,MAAM,UAAU;AAG7B;AAAA,MACC,MAAM,KAAK,QAAQ,UAAU,IAAI,yBAAyB;AAAA,MAC1D;AAAA,IACD;AAGA,SAAK,wBAAwB;AAAA,EAC9B;AAAA,EAEQ,sBAAsB,WAA4C;AACzE,SAAK,QAAQ,MAAM,iBAClB,cAAc,aAAmB,QAAQ;AAC1C,SAAK,QAAQ,MAAM,kBAClB,cAAc,eAAqB,QAAQ;AAC5C,SAAK,QAAQ,MAAM,oBAClB,cAAc,eAAqB,QAAQ;AAC5C,SAAK,QAAQ,MAAM,mBAClB,cAAc,gBAAsB,QAAQ;AAAA,EAC9C;AAAA,EAEQ,kBAAkB,SAOjB;AAER,SAAK,UAAU,MAAM,SAAS;AAG9B,SAAK,QAAQ,MAAM,MAAM,QAAQ,OAAO;AACxC,SAAK,QAAQ,MAAM,OAAO,QAAQ,QAAQ;AAC1C,SAAK,QAAQ,MAAM,SAAS,QAAQ,UAAU;AAC9C,SAAK,QAAQ,MAAM,QAAQ,QAAQ,SAAS;AAC5C,SAAK,QAAQ,MAAM,QAAQ,QAAQ;AACnC,SAAK,QAAQ,MAAM,SAAS,QAAQ;AAAA,EACrC;AAAA,EAEA,SAAS,SAA+B;AACvC,WAAO,YAAY,KAAK,aAAa,YAAY,KAAK;AAAA,EACvD;AAAA,EAES,UAAgB;AACxB,UAAM,QAAQ;AAEd,SAAK,YAAY;AAAA,EAClB;AACD;AAEA,IAAM,2BAAN,cAAuC,qBAAqB;AAAA,EA9Z5D,OA8Z4D;AAAA;AAAA;AAAA,EAC3D,YACC,SACA,eACwB,uBACJ,mBACN,aACb;AACD,UAAM,0BAA0B,kBAAkB,aAAa,OAAO;AACtE,4BAAwB,UAAU,iBAAiB,cAAc,EAAE;AACnE,UAAM,2BAA2B,wBAAwB;AAAA,MACxD;AAAA,MACA;AAAA,QACC,sBAAsB,yBAAyB,aAAa;AAAA,MAC7D;AAAA,IACD;AACA;AAAA,MACC,OAAO;AAAA,MACP,OAAO;AAAA,MACP,EAAE,mBAAmB,MAAM,kBAAkB,KAAK;AAAA,MAClD;AAAA,MACA;AAAA,IACD;AACA,SAAK,UAAU,uBAAuB;AACtC,SAAK;AAAA,MACJ,MAAM;AAAA,QACL,sBAAsB;AAAA,QACtB,CAAC,MAAM,EAAE,kBAAkB;AAAA,MAC5B;AAAA,QAAE,MACD,yBAAyB;AAAA,UACxB;AAAA,YACC,sBAAsB;AAAA,cACrB;AAAA,YACD;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD;AAvCM,2BAAN;AAAA,EAIG;AAAA,EACA;AAAA,EACA;AAAA,GANG;AAyCC,IAAM,oBAAN,cAAgC,UAAwC;AAAA,EAmE9E,YACC,IACQ,SACyB,sBACA,sBACE,eACJ,oBACF,kBACA,kBACd,cACY,gBACS,gBACF,uBACjC;AAED,UAAM,IAAI,cAAc,cAAc;AAb9B;AACyB;AACA;AACE;AACJ;AACF;AACA;AAEF;AACS;AACF;AAKlC,UAAM,YAAY,KAAK,sBAAsB,qBAAqB,EAAE;AACpE,QAAI,CAAC,WAAW;AACf,YAAM,IAAI,MAAM,0BAA0B;AAAA,IAC3C;AAGA,SAAK,gBAAgB;AACrB,SAAK,wBAAwB,GAAG,EAAE;AAClC,SAAK,6BAA6B,KAAK,eAAe,UAAU,KAAK,uBAAuB,aAAa,WAAW,MAAS;AAC7H,SAAK,qBAAqB,KAAK,sBAAsB,sBAAsB,SAAS;AAAA,EACrF;AAAA,EAriBD,OAuc+E;AAAA;AAAA;AAAA,EACrE;AAAA,EACD;AAAA,EACA;AAAA,EACA,YAA6B,CAAC;AAAA,EAC9B;AAAA,EAEA,UAAU;AAAA,EAEV,qBAAqB;AAAA,EAErB,YAAY;AAAA,EACZ;AAAA,EACA;AAAA,EAES;AAAA,EACA;AAAA,EACE;AAAA,EAEF,qBAAoC,KAAK;AAAA,IACzD,IAAI,QAAc;AAAA,EACnB;AAAA,EACS,oBAAiC,KAAK,mBAAmB;AAAA,EAEjD,yBAAyB,KAAK;AAAA,IAC9C,IAAI,QAAiB;AAAA,EACtB;AAAA,EACS,wBAAwB,KAAK,uBAAuB;AAAA,EAE5C,iBAAiB,KAAK,UAAU,IAAI,QAAiB,CAAC;AAAA,EAC9D,gBAAgB,KAAK,eAAe;AAAA,EAE5B,oBAAoB,KAAK,UAAU,IAAI,QAAiB,CAAC;AAAA,EACjE,mBAAmB,KAAK,kBAAkB;AAAA,EAElC,6BAA6B,KAAK;AAAA,IAClD,IAAI,QAAe;AAAA,EACpB;AAAA,EACS,4BAA4B,KAAK,2BAA2B;AAAA,EAEpD,kBAAkB,KAAK,UAAU,IAAI,QAAe,CAAC;AAAA,EAC7D,iBAAiB,KAAK,gBAAgB;AAAA,EAE9B,iBAAiB,KAAK,UAAU,IAAI,QAAe,CAAC;AAAA,EAC5D,gBAAgB,KAAK,eAAe;AAAA,EAE7C,IAAI,kBAAiC;AACpC,WAAO,gBAAgB,KAAK,QAAQ,EAAE;AAAA,EACvC;AAAA,EAEA,IAAI,QAAoB;AACvB,WAAO,KAAK,UAAU,IAAI,CAAC,MAAM,EAAE,IAAI;AAAA,EACxC;AAAA,EAEA,IAAI,QAAiB;AACpB,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,IAAI,SAAiB;AACpB,WAAO,KAAK,UAAU;AAAA,EACvB;AAAA,EAEQ;AAAA,EACR,IAAI,cAAgD;AACnD,WAAO,KAAK;AAAA,EACb;AAAA,EA+BA,OAAO,QAA2B;AACjC,UAAM,UAAU,KAAK;AACrB,YAAQ,cAAc,KAAK;AAC3B,SAAK,WAAW,KAAK,UAAU,IAAI,SAAS,QAAQ,KAAK,OAAO,CAAC;AAEjE,QAAI,KAAK,iBAAiB;AACzB,WAAK,SAAS,kBAAkB,KAAK,eAAe;AAAA,IACrD;AAEA,SAAK;AAAA,MACJ,KAAK,SAAS;AAAA,QAAU,CAAC,EAAE,MAAM,GAAG,MACnC,KAAK,SAAS,MAAkB,EAAc;AAAA,MAC/C;AAAA,IACD;AACA,SAAK;AAAA,MACJ,KAAK,SAAS,YAAY,CAAC,MAAM,KAAK,gBAAgB,CAAC;AAAA,IACxD;AACA,SAAK;AAAA,MACJ,KAAK,SAAS,eAAe,CAAC,UAAU,KAAK,eAAe,KAAK,CAAC;AAAA,IACnE;AACA,SAAK;AAAA,MACJ;AAAA,QACC;AAAA,QACA,UAAU;AAAA,QACV,CAAC,MACA,KAAK;AAAA,UACJ,IAAI,mBAAmB,UAAU,MAAM,GAAG,CAAC;AAAA,QAC5C;AAAA,MACF;AAAA,IACD;AACA,SAAK,UAAU,QAAQ,UAAU,MAAM,CAAC;AACxC,SAAK;AAAA,MACJ;AAAA,QACC;AAAA,QACA,eAAe;AAAA,QACf,CAAC,MACA,KAAK;AAAA,UACJ,IAAI,mBAAmB,UAAU,MAAM,GAAG,CAAC;AAAA,QAC5C;AAAA,MACF;AAAA,IACD;AAEA,SAAK,eAAe,KAAK;AAAA,MACxB,KAAK,qBAAqB;AAAA,QACzB;AAAA,QACA,KAAK,SAAS;AAAA,QACd,KAAK;AAAA,MACN;AAAA,IACD;AACA,SAAK;AAAA,MACJ,KAAK,aAAa,YAAY,MAAM,KAAK,gBAAgB,CAAC;AAAA,IAC3D;AAEA,QAAI;AACJ,UAAM,mBAAuC,6BAAM;AAClD,YAAM,WAAW,OAAO,sBAAsB;AAC9C,YAAM,WACL,KAAK,MACJ,KAAK,MAAM,SAAS,CACrB,EAAE,QAAQ,sBAAsB;AACjC,YAAM,MACL,KAAK,gBAAgB,YAAY,WAC9B,SAAS,SACT,SAAS;AACb,YAAM,OACL,KAAK,gBAAgB,YAAY,aAC9B,SAAS,QACT,SAAS;AAEb,aAAO;AAAA,QACN;AAAA,QACA,QAAQ,SAAS;AAAA,QACjB;AAAA,QACA,OAAO,SAAS;AAAA,MACjB;AAAA,IACD,GArB6C;AAuB7C,UAAM,WAAW,wBAChBC,SACA,QACI;AACJ,aACC,IAAI,KAAKA,QAAO,QAChB,IAAI,KAAKA,QAAO,SAChB,IAAI,KAAKA,QAAO,OAChB,IAAI,KAAKA,QAAO;AAAA,IAElB,GAViB;AAYjB,QAAI;AAEJ,SAAK;AAAA,MACJ,6BAA6B,SAAS,eAAe,QAAQ;AAAA,QAC5D,aAAa,wBAAC,MAAM;AACnB,mBAAS,iBAAiB;AAC1B,cAAI,WAAW,QAAQ,UAAU;AAChC,sBAAU;AAAA,UACX;AAEA,cAAI,CAAC,WAAW,SAAS,QAAQ,EAAE,SAAS,GAAG;AAC9C,kBAAM,WAAW,EAAE,gBAAgB,QAAQ;AAC3C,gBAAI,SAAS,SAAS,QAAQ;AAC7B,oBAAM,mBACL,KAAK,sBAAsB;AAAA,gBAC1B,SAAS;AAAA,cACV;AACD,oBAAM,iBACL,KAAK,sBAAsB;AAAA,gBAC1B,SAAS;AAAA,cACV;AAED,kBACC,qBAAqB,KAAK,kBACzB,CAAC,kBACD,CAAC,eAAe,eAChB,KAAK,cAAc,mBACnB;AACD;AAAA,cACD;AAEA,wBAAU,IAAI;AAAA,gBACb;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,KAAK,sBAAsB;AAAA,kBAC1B,KAAK;AAAA,gBACN;AAAA,gBACA,KAAK;AAAA,cACN;AAAA,YACD;AAEA,gBACC,SAAS,SAAS,eAClB,SAAS,OAAO,KAAK,cAAc,IAClC;AACD,oBAAM,YACL,KAAK,sBAAsB;AAAA,gBAC1B,SAAS;AAAA,cACV;AACD,oBAAM,cACL,KAAK,sBAAsB;AAAA,gBAC1B;AAAA,cACD,EAAE;AAEH,kBACC,CAAC,YAAY,KAAK,CAAC,MAAM,CAAC,EAAE,WAAW,KACvC,YAAY,SAAS,GACpB;AACD,0BAAU,IAAI;AAAA,kBACb;AAAA,kBACA;AAAA,kBACA;AAAA,kBACA,KAAK,sBAAsB;AAAA,oBAC1B,KAAK;AAAA,kBACN;AAAA,kBACA,KAAK;AAAA,gBACN;AAAA,cACD;AAAA,YACD;AAAA,UACD;AAAA,QACD,GAnEa;AAAA,QAoEb,YAAY,wBAAC,MAAM;AAClB,cAAI,WAAW,QAAQ,UAAU;AAChC,sBAAU;AAAA,UACX;AAEA,cAAI,WAAW,CAAC,SAAS,QAAQ,EAAE,SAAS,GAAG;AAC9C,oBAAQ,QAAQ;AAChB,sBAAU;AAAA,UACX;AAEA,cAAI,SAAS,QAAQ,EAAE,SAAS,GAAG;AAClC;AAAA,cACC,EAAE,UAAU;AAAA,cACZ;AAAA,cACA,YAAY;AAAA,YACb;AAAA,UACD;AAAA,QACD,GAjBY;AAAA,QAkBZ,aAAa,wBAAC,MAAM;AACnB,mBAAS,QAAQ;AACjB,oBAAU;AAAA,QACX,GAHa;AAAA,QAIb,QAAQ,wBAAC,MAAM;AACd,cAAI,SAAS;AACZ,kBAAM,WAAW,EAAE,gBAAgB,QAAQ;AAC3C,kBAAM,cAAiC,CAAC;AAExC,gBACC,SAAS,SAAS,eAClB,SAAS,OAAO,KAAK,cAAc,IAClC;AACD,oBAAM,YACL,KAAK,sBAAsB;AAAA,gBAC1B,SAAS;AAAA,cACV;AACD,oBAAM,WACL,KAAK,sBAAsB;AAAA,gBAC1B;AAAA,cACD,EAAE;AACH,kBAAI,CAAC,SAAS,KAAK,CAAC,MAAM,CAAC,EAAE,WAAW,GAAG;AAC1C,4BAAY,KAAK,GAAG,QAAQ;AAAA,cAC7B;AAAA,YACD,WAAW,SAAS,SAAS,QAAQ;AACpC,oBAAM,mBACL,KAAK,sBAAsB;AAAA,gBAC1B,SAAS;AAAA,cACV;AACD,oBAAM,iBACL,KAAK,sBAAsB;AAAA,gBAC1B,SAAS;AAAA,cACV;AACD,kBACC,qBAAqB,KAAK,iBAC1B,kBACA,eAAe,aACd;AACD,qBAAK,sBAAsB;AAAA,kBAC1B,CAAC,cAAc;AAAA,kBACf,KAAK;AAAA,kBACL;AAAA,kBACA;AAAA,gBACD;AAAA,cACD;AAAA,YACD;AAEA,kBAAM,YAAY,KAAK,MAAM;AAE7B,gBAAI,YAAY,SAAS,GAAG;AAC3B,mBAAK,sBAAsB;AAAA,gBAC1B;AAAA,gBACA,KAAK;AAAA,gBACL;AAAA,gBACA;AAAA,cACD;AAAA,YACD;AAEA,gBAAI,YAAY,GAAG;AAClB,yBAAW,QAAQ,aAAa;AAC/B,sBAAM,aAAa,KAAK,MAAM;AAAA,kBAC7B,CAAC,MAAM,EAAE,OAAO,KAAK;AAAA,gBACtB;AACA,oBAAI,YAAY;AACf,uBAAK;AAAA,oBACJ;AAAA,oBACA,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC;AAAA,kBACjC;AAAA,gBACD;AAAA,cACD;AAAA,YACD;AAAA,UACD;AAEA,mBAAS,QAAQ;AACjB,oBAAU;AAAA,QACX,GAvEQ;AAAA,MAwET,CAAC;AAAA,IACF;AAEA,SAAK,UAAU,KAAK,gBAAgB,MAAM,KAAK,cAAc,CAAC,CAAC;AAC/D,SAAK;AAAA,MACJ,KAAK,mBAAmB;AAAA,QAA+B,CAAC,UACvD,KAAK,wBAAwB,KAAK;AAAA,MACnC;AAAA,IACD;AACA,SAAK;AAAA,MACJ,KAAK,mBAAmB;AAAA,QACvB,CAAC,YAAY,KAAK,2BAA2B,OAAO;AAAA,MACrD;AAAA,IACD;AACA,UAAM,aACL,KAAK,mBAAmB,uBAAuB;AAAA,MAC9C,CAAC,gBAAgB,UAAU;AAC1B,cAAM,OAAO,KAAK,mBAAmB;AAAA,UACpC,eAAe;AAAA,QAChB;AACA,cAAM,YAAY,KAAK,mBAAmB;AAAA,UACzC,eAAe;AAAA,QAChB;AACA,eAAO,EAAE,gBAAgB,OAAO,MAAM,UAAU;AAAA,MACjD;AAAA,IACD;AACD,QAAI,WAAW,QAAQ;AACtB,WAAK,wBAAwB,UAAU;AAAA,IACxC;AAGA,SAAK,iBAAiB,kCAAkC,EAAE,KAAK,MAAM;AACpE,WAAK,qBAAqB;AAC1B,UAAI,KAAK,MAAM,QAAQ;AACtB,aAAK,gBAAgB;AACrB,aAAK,kBAAkB;AAAA,MACxB;AACA,WAAK;AAAA,QACJ,KAAK,qBAAqB,yBAAyB,CAAC,MAAM;AACzD,cACC,EAAE;AAAA,YACD,eAAe;AAAA,UAChB,GACC;AACD,iBAAK,kBAAkB;AAAA,UACxB;AAAA,QACD,CAAC;AAAA,MACF;AAAA,IACD,CAAC;AAED,SAAK;AAAA,MACJ,KAAK,mBAAmB;AAAA,QAAiC,MACxD,KAAK,mBAAmB,KAAK;AAAA,MAC9B;AAAA,IACD;AAAA,EACD;AAAA,EAEA,WAAmB;AAClB,UAAM,iBAAiB,KAAK,mBAAmB;AAE/C,QAAI,KAAK,0BAA0B,GAAG;AACrC,YAAM,+BACL,KAAK,UAAU,CAAC,EAAE,KAAK;AACxB,UAAI,8BAA8B;AACjC,eAAO;AAAA,MACR;AAEA,YAAM,gBAAgB,KAAK,UAAU,CAAC,EAAE,KAAK;AAC7C,UAAI,mBAAmB,eAAe;AACrC,eAAO;AAAA,MACR;AAEA,aAAO,gBACJ,GAAG,cAAc,KAAK,aAAa,KACnC;AAAA,IACJ;AAEA,WAAO;AAAA,EACR;AAAA,EAEQ,gBAAgB,OAAiC;AACxD,eAAW,YAAY,KAAK,WAAW;AAEtC,UAAI,WAAW,MAAM,QAAQ,SAAS,KAAK,OAAO,GAAG;AACpD;AAAA,MACD;AAAA,IACD;AAEA,UAAM,gBAAgB;AACtB,UAAM,eAAe;AAErB,SAAK,mBAAmB,gBAAgB;AAAA,MACvC,WAAW,6BAAM,OAAN;AAAA,MACX,YAAY,6BAAM,KAAK,aAAa,sBAAsB,KAAK,CAAC,GAApD;AAAA,IACb,CAAC;AAAA,EACF;AAAA,EAEA,oBAA6B;AAC5B,QAAI,KAAK,0BAA0B,GAAG;AACrC,aAAO,KAAK,MAAM,CAAC,EAAE,kBAAkB;AAAA,IACxC;AACA,WAAO;AAAA,EACR;AAAA,EAEA,kBACC,QACA,SAC8B;AAC9B,QAAI,KAAK,0BAA0B,GAAG;AACrC,aAAO,KAAK,UAAU,CAAC,EAAE,KAAK,kBAAkB,QAAQ,OAAO;AAAA,IAChE;AACA,WAAO,qBAAqB,KAAK,sBAAsB,QAAQ,OAAO;AAAA,EACvE;AAAA,EAEA,QAAc;AACb,QAAI;AACJ,QAAI,KAAK,iBAAiB;AACzB,oBAAc,KAAK;AAAA,IACpB,WAAW,KAAK,UAAU,SAAS,GAAG;AACrC,iBAAW,EAAE,KAAK,KAAK,KAAK,WAAW;AACtC,YAAI,KAAK,WAAW,GAAG;AACtB,wBAAc;AACd;AAAA,QACD;AAAA,MACD;AAAA,IACD;AACA,QAAI,aAAa;AAChB,kBAAY,MAAM;AAAA,IACnB;AAAA,EACD;AAAA,EAEA,IAAY,cAA2B;AACtC,YACC,KAAK,sBAAsB;AAAA,MAC1B,KAAK;AAAA,IACN,GACC;AAAA,MACD,KAAK,sBAAsB;AAAA,MAC3B,KAAK,sBAAsB;AAC1B,eAAO,YAAY;AAAA,MACpB,KAAK,sBAAsB,OAAO;AACjC,eAAO,aAAa,KAAK,cAAc,iBAAiB,CAAC,IACtD,YAAY,aACZ,YAAY;AAAA,MAChB;AAAA,IACD;AAEA,WAAO,YAAY;AAAA,EACpB;AAAA,EAEA,OAAO,WAA4B;AAClC,QAAI,KAAK,UAAU;AAClB,UAAI,KAAK,SAAS,gBAAgB,KAAK,aAAa;AACnD,aAAK,SAAS;AAAA,UACb,UAAU;AAAA,UACV,UAAU;AAAA,QACX;AAAA,MACD;AAEA,WAAK,SAAS,OAAO,UAAU,QAAQ,UAAU,KAAK;AAAA,IACvD;AAEA,SAAK,YAAY;AACjB,QAAI,KAAK,WAAW;AACnB,WAAK,cAAc;AAAA,IACpB,OAAO;AACN,WAAK,YAAY;AACjB,WAAK,iBAAiB;AAAA,IACvB;AAAA,EACD;AAAA,EAEA,kBAAkB,QAA+B;AAChD,SAAK,kBAAkB;AACvB,SAAK,UAAU,kBAAkB,MAAM;AAAA,EACxC;AAAA,EAEA,kBAA0B;AACzB,UAAM,mBAAmB;AACzB,UAAM,eAAe,KAAK;AAAA,MACzB,GAAG,KAAK,MAAM,IAAI,CAAC,SAAS,KAAK,gBAAgB,KAAK,CAAC;AAAA,IACxD;AACA,WAAO,eAAe;AAAA,EACvB;AAAA,EAEA,SACC,OAMO;AACP,UAAM,YAAY,KAAK,0BAA0B;AAEjD,eAAW,EAAE,MAAM,MAAM,OAAO,WAAW,KAAK,OAAO;AACtD,WAAK,QAAQ,MAAM,MAAM,YAAY,KAAK;AAAA,IAC3C;AAEA,SAAK,kBAAkB;AACvB,QAAI,KAAK,0BAA0B,MAAM,WAAW;AACnD,WAAK,gBAAgB;AAAA,IACtB;AAEA,SAAK,eAAe,KAAK,MAAM,IAAI,CAAC,EAAE,KAAK,MAAM,IAAI,CAAC;AAAA,EACvD;AAAA,EAEA,WAAW,SAAwB;AAClC,QAAI,KAAK,YAAY,CAAC,CAAC,SAAS;AAC/B,WAAK,UAAU;AAEf,WAAK,uBAAuB,KAAK,OAAO;AAAA,IACzC;AAEA,SAAK,MACH,OAAO,CAAC,SAAS,KAAK,UAAU,MAAM,OAAO,EAC7C,IAAI,CAAC,SAAS,KAAK,WAAW,OAAO,CAAC;AAAA,EACzC;AAAA,EAEA,YAAqB;AACpB,WAAO,KAAK;AAAA,EACb;AAAA,EAEU,kBAAwB;AACjC,SAAK,mBAAmB,KAAK;AAAA,EAC9B;AAAA,EAEU,WACT,gBACA,SACW;AACX,WAAQ,KAAK,qBAA6B;AAAA,MACzC,eAAe,eAAe;AAAA,MAC9B,GAAI,eAAe,eAAe,mBAAmB,CAAC;AAAA,MACtD;AAAA,IACD;AAAA,EACD;AAAA,EAEA,QAAQ,IAAkC;AACzC,WAAO,KAAK,MAAM,OAAO,CAAC,SAAS,KAAK,OAAO,EAAE,EAAE,CAAC;AAAA,EACrD;AAAA,EAEQ,gBAAsB;AAE7B,QAAI,KAAK,WAAW;AACnB,WAAK,mBAAmB;AAAA,QACvB,KAAK,MAAM,IAAI,CAAC,UAAU;AAAA,UACzB,IAAI,KAAK;AAAA,UACT,MAAM,KAAK,YAAY,IAAI;AAAA,QAC5B,EAAE;AAAA,MACH;AAAA,IACD;AAAA,EACD;AAAA,EAEQ,mBAAyB;AAEhC,QAAI,KAAK,WAAW;AACnB,UAAI;AACJ,eACK,IAAI,GACR,IAAI,KAAK,mBAAmB,uBAAuB,QACnD,KACC;AACD,cAAM,OAAO,KAAK,MAAM,CAAC;AACzB,cAAM,iBACL,KAAK,mBAAmB,uBAAuB,CAAC;AACjD,cAAM,OAAO,KAAK,mBAAmB,QAAQ,eAAe,EAAE;AAE9D,YAAI,OAAO,SAAS,UAAU;AAC7B,eAAK,WAAW,MAAM,IAAI;AAAA,QAC3B,OAAO;AACN,yBAAe,eACZ,eACA,KAAK,oBAAoB;AAC5B,eAAK,WAAW,MAAM,aAAa,IAAI,KAAK,EAAE,KAAK,GAAG;AAAA,QACvD;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EAEQ,sBAA2C;AAClD,UAAM,QAA6B,oBAAI,IAAoB;AAC3D,QAAI,KAAK,WAAW;AACnB,YAAM,cACL,KAAK,mBAAmB,uBAAuB;AAAA,QAC9C,CAACC,cAAa,EAAE,OAAO,MAAMA,gBAAe,UAAU;AAAA,QACtD;AAAA,MACD;AACD,iBAAW,kBAAkB,KAAK,mBAChC,wBAAwB;AACzB,YAAI,KAAK,gBAAgB,YAAY,UAAU;AAC9C,gBAAM;AAAA,YACL,eAAe;AAAA,YACd,KAAK,UAAU,UACd,eAAe,UAAU,MAC1B;AAAA,UACF;AAAA,QACD,OAAO;AACN,gBAAM;AAAA,YACL,eAAe;AAAA,YACd,KAAK,UAAU,SAAS,eAAe,UAAU,MACjD;AAAA,UACF;AAAA,QACD;AAAA,MACD;AAAA,IACD;AACA,WAAO;AAAA,EACR;AAAA,EAEmB,YAAkB;AACpC,SAAK,MAAM,QAAQ,CAAC,SAAS,KAAK,UAAU,CAAC;AAC7C,SAAK,eAAe;AAAA,MACnB,KAAK;AAAA,MACL,KAAK;AAAA,MACL,aAAa;AAAA,MACb,cAAc;AAAA,IACf;AAAA,EACD;AAAA,EAEQ,cAAc,OAA2B,UAA0B;AAC1E,UAAM,gBAAgB;AACtB,UAAM,eAAe;AAErB,UAAM,UAAqB,SAAS,YAAY,sBAAsB;AAEtE,SAAK,mBAAmB,gBAAgB;AAAA,MACvC,WAAW,6BAAM,OAAN;AAAA,MACX,YAAY,6BAAM,SAAN;AAAA,IACb,CAAC;AAAA,EACF;AAAA,EAEA,SAAS,IAAY,OAAoC;AACxD,QAAI,OAAO,KAAK,QAAQ,EAAE;AAC1B,QAAI,CAAC,MAAM;AACV,WAAK,qBAAqB,EAAE;AAAA,IAC7B;AACA,WAAO,KAAK,QAAQ,EAAE;AACtB,QAAI,MAAM;AACT,WAAK,YAAY,IAAI;AACrB,UAAI,OAAO;AACV,aAAK,MAAM;AAAA,MACZ;AAAA,IACD;AACA,WAAO;AAAA,EACR;AAAA,EAEU,wBACT,OACa;AACb,UAAM,aAKA,CAAC;AAEP,eAAW,EAAE,gBAAgB,WAAW,OAAO,KAAK,KAAK,OAAO;AAC/D,YAAM,OAAO,KAAK,WAAW,gBAAgB;AAAA,QAC5C,IAAI,eAAe;AAAA,QACnB,OAAO,eAAe,KAAK;AAAA,QAC3B,iBACC,eACC;AAAA,QACF,UAAU,CAAC;AAAA,QACX,8BACC,eAAe;AAAA,MACjB,CAAC;AAED,WAAK,OAAO;AACZ,YAAM,wBAAwB;AAAA,QAC7B,KAAK;AAAA,QACL;AAAA,QACA,CAAC,MAAM;AACN,YAAE,gBAAgB;AAClB,YAAE,eAAe;AACjB,eAAK;AAAA,YACJ,IAAI;AAAA,cACH,UAAU,KAAK,gBAAgB;AAAA,cAC/B;AAAA,YACD;AAAA,YACA;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAEA,YAAM,qBAAqB,MAAM;AAAA,QAChC,MAAM,IAAI,KAAK,aAAa,MAAM,CAAC,KAAK,WAAW,CAAC;AAAA,MACrD,EAAE,CAACC,eAAc;AAChB,aAAK,mBAAmB;AAAA,UACvB,eAAe;AAAA,UACfA;AAAA,QACD;AAAA,MACD,CAAC;AAED,iBAAW,KAAK;AAAA,QACf;AAAA,QACA,MAAM,QAAQ,KAAK;AAAA,QACnB;AAAA,QACA,YAAY;AAAA,UACX;AAAA,UACA;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF;AAEA,SAAK,SAAS,UAAU;AACxB,SAAK,iBAAiB;AAEtB,UAAM,QAAoB,CAAC;AAC3B,eAAW,EAAE,KAAK,KAAK,YAAY;AAClC,WAAK,WAAW,KAAK,UAAU,CAAC;AAChC,YAAM,KAAK,IAAI;AAAA,IAChB;AACA,WAAO;AAAA,EACR;AAAA,EAEQ,2BAA2B,SAAqC;AACvE,cAAU,QAAQ,KAAK,CAAC,GAAG,MAAM,EAAE,QAAQ,EAAE,KAAK;AAClD,UAAM,gBAA4B,CAAC;AACnC,eAAW,EAAE,MAAM,KAAK,SAAS;AAChC,YAAM,WAAW,KAAK,UAAU,KAAK;AACrC,UAAI,UAAU;AACb,sBAAc,KAAK,KAAK,UAAU,KAAK,EAAE,IAAI;AAAA,MAC9C;AAAA,IACD;AAEA,QAAI,cAAc,QAAQ;AACzB,WAAK,YAAY,aAAa;AAE9B,iBAAW,QAAQ,eAAe;AACjC,aAAK,WAAW,KAAK;AAAA,MACtB;AAAA,IACD;AAAA,EACD;AAAA,EAEA,qBAAqB,QAAsB;AAE1C,QACC,KAAK,mBAAmB,sBAAsB;AAAA,MAC7C,CAAC,mBAAmB,eAAe,OAAO;AAAA,IAC3C,GACC;AACD,YAAM,UAAU,CAAC,KAAK,mBAAmB,UAAU,MAAM;AACzD,WAAK,mBAAmB,WAAW,QAAQ,OAAO;AAAA,IACnD;AAAA,EACD;AAAA,EAEQ,QACP,MACA,MACA,YACA,QAAQ,KAAK,UAAU,SAAS,GACzB;AACP,UAAM,aAAa,KAAK,WAAW,MAAM;AACxC,WAAK,gBAAgB,KAAK,IAAI;AAC9B,WAAK,kBAAkB;AAAA,IACxB,CAAC;AACD,UAAM,YAAY,KAAK,UAAU,MAAM,KAAK,eAAe,KAAK,IAAI,CAAC;AACrE,UAAM,uBAAuB,KAAK,qBAAqB,MAAM;AAC5D,UAAI,KAAK,0BAA0B,GAAG;AACrC,aAAK,gBAAgB;AAAA,MACtB;AAAA,IACD,CAAC;AAED,UAAM,wBAAwB,KAAK;AAAA,MAA0B,MAC5D,KAAK,2BAA2B,KAAK,IAAI;AAAA,IAC1C;AACA,UAAM,cAAc,KAAK,YAAY,MAAM;AAC1C,UAAI,SAAS,KAAK,mBAAmB,CAAC,KAAK,WAAW,GAAG;AACxD,aAAK,kBAAkB;AAAA,MACxB;AAAA,IACD,CAAC;AAED,UAAM,UACL,KAAK,sBAAsB;AAAA,MAC1B,KAAK;AAAA,IACN,MAAM,sBAAsB;AAC7B,SAAK,MAAM;AAAA,MACV,kBAAkB;AAAA,QACjB,UACG,kCACA;AAAA,MACJ;AAAA,MACA,kBAAkB;AAAA,QACjB,UACG,kCACA;AAAA,MACJ;AAAA,MACA,cAAc;AAAA,QACb,UACG,8BACA;AAAA,MACJ;AAAA,MACA,gBAAgB;AAAA,QACf,UACG,yCACA;AAAA,MACJ;AAAA,MACA,YAAY,UACT,cAAc,oBAAoB,IAClC;AAAA,IACJ,CAAC;AAED,UAAM,QAAQ,IAAI,gBAAgB;AAClC,UAAM,IAAI,UAAU;AACpB,UAAM;AAAA,MACL;AAAA,QACC;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,IACD;AACA,UAAM,WAA0B,EAAE,MAAM,YAAY,MAAM;AAE1D,SAAK,UAAU,OAAO,OAAO,GAAG,QAAQ;AACxC,oBAAgB,KAAK,QAAQ,EAAE,QAAQ,MAAM,MAAM,KAAK;AAExD,QAAI;AAEJ,UAAM;AAAA,MACL,6BAA6B,SAAS;AAAA,QACrC,KAAK;AAAA,QACL,MAAM;AACL,iBAAO,EAAE,MAAM,QAAQ,IAAI,KAAK,GAAG;AAAA,QACpC;AAAA,QACA,CAAC;AAAA,MACF;AAAA,IACD;AAEA,UAAM;AAAA,MACL,6BAA6B,SAAS;AAAA,QACrC,KAAK;AAAA,QACL;AAAA,UACC,aAAa,wBAAC,MAAM;AACnB,gBAAI,CAAC,SAAS;AACb,oBAAM,WAAW,EAAE,gBAAgB,QAAQ;AAC3C,kBACC,SAAS,SAAS,UAClB,SAAS,OAAO,KAAK,IACpB;AACD,sBAAM,mBACL,KAAK,sBAAsB;AAAA,kBAC1B,SAAS;AAAA,gBACV;AACD,sBAAM,iBACL,KAAK,sBAAsB;AAAA,kBAC1B,SAAS;AAAA,gBACV;AAED,oBACC,qBAAqB,KAAK,kBACzB,CAAC,kBACD,CAAC,eAAe,eAChB,KAAK,cAAc,mBACnB;AACD;AAAA,gBACD;AAEA,0BAAU,IAAI;AAAA,kBACb,KAAK;AAAA,kBACL,KAAK,eAAe,YAAY;AAAA,kBAChC;AAAA,kBACA,KAAK,sBAAsB;AAAA,oBAC1B,KAAK;AAAA,kBACN;AAAA,kBACA,KAAK;AAAA,gBACN;AAAA,cACD;AAEA,kBACC,SAAS,SAAS,eAClB,SAAS,OAAO,KAAK,cAAc,MACnC,CAAC,KAAK,cAAc,kBACnB;AACD,sBAAM,YACL,KAAK,sBAAsB;AAAA,kBAC1B,SAAS;AAAA,gBACV;AACD,sBAAM,cACL,KAAK,sBAAsB;AAAA,kBAC1B;AAAA,gBACD,EAAE;AAEH,oBACC,CAAC,YAAY,KAAK,CAAC,MAAM,CAAC,EAAE,WAAW,KACvC,YAAY,SAAS,GACpB;AACD,4BAAU,IAAI;AAAA,oBACb,KAAK;AAAA,oBACL,KAAK,eACJ,YAAY;AAAA,oBACb;AAAA,oBACA,KAAK,sBAAsB;AAAA,sBAC1B,KAAK;AAAA,oBACN;AAAA,oBACA,KAAK;AAAA,kBACN;AAAA,gBACD;AAAA,cACD;AAAA,YACD;AAAA,UACD,GAnEa;AAAA,UAoEb,YAAY,wBAAC,MAAM;AAClB;AAAA,cACC,EAAE,UAAU;AAAA,cACZ;AAAA,cACA,YAAY;AAAA,YACb;AAAA,UACD,GANY;AAAA,UAOZ,aAAa,wBAAC,MAAM;AACnB,qBAAS,QAAQ;AACjB,sBAAU;AAAA,UACX,GAHa;AAAA,UAIb,QAAQ,wBAAC,MAAM;AACd,gBAAI,SAAS;AACZ,oBAAM,WAAW,EAAE,gBAAgB,QAAQ;AAC3C,oBAAM,cAAiC,CAAC;AACxC,kBAAI;AAEJ,kBACC,SAAS,SAAS,eAClB,SAAS,OAAO,KAAK,cAAc,MACnC,CAAC,KAAK,cAAc,kBACnB;AACD,sBAAM,YACL,KAAK,sBAAsB;AAAA,kBAC1B,SAAS;AAAA,gBACV;AACD,sBAAM,WACL,KAAK,sBAAsB;AAAA,kBAC1B;AAAA,gBACD,EAAE;AAEH,oBACC,SAAS,SAAS,KAClB,CAAC,SAAS,KAAK,CAAC,MAAM,CAAC,EAAE,WAAW,GACnC;AACD,8BAAY,KAAK,GAAG,QAAQ;AAC5B,+BAAa,SAAS,CAAC;AAAA,gBACxB;AAAA,cACD,WAAW,SAAS,SAAS,QAAQ;AACpC,sBAAM,mBACL,KAAK,sBAAsB;AAAA,kBAC1B,SAAS;AAAA,gBACV;AACD,sBAAM,iBACL,KAAK,sBAAsB;AAAA,kBAC1B,SAAS;AAAA,gBACV;AACD,oBACC,qBAAqB,KAAK,iBAC1B,kBACA,eAAe,eACf,CAAC,KAAK,cAAc,kBACnB;AACD,8BAAY,KAAK,cAAc;AAAA,gBAChC;AAEA,oBAAI,gBAAgB;AACnB,+BAAa;AAAA,gBACd;AAAA,cACD;AAEA,kBAAI,aAAa;AAChB,qBAAK,sBAAsB;AAAA,kBAC1B;AAAA,kBACA,KAAK;AAAA,kBACL;AAAA,kBACA;AAAA,gBACD;AAAA,cACD;AAEA,kBAAI,YAAY;AACf,oBACC,QAAQ,yBACP,gBACD,QAAQ,yBACP,eACA;AACD,wBAAM,YAAY,KAAK,MAAM;AAAA,oBAC5B,CAAC,MAAM,EAAE,OAAO,WAAY;AAAA,kBAC7B;AACA,sBAAI,UAAU,KAAK,MAAM;AAAA,oBACxB,CAAC,MAAM,EAAE,OAAO,KAAK;AAAA,kBACtB;AAEA,sBAAI,aAAa,KAAK,WAAW,GAAG;AACnC,wBAAI,YAAY,SAAS;AACxB;AAAA,oBACD;AAEA,wBACC,UAAU,KAAK,MAAM,UACrB,YAAY,WACX;AACD,2BAAK;AAAA,wBACJ,KAAK,MAAM,SAAS;AAAA,wBACpB,KAAK,MAAM,OAAO;AAAA,sBACnB;AAAA,oBACD;AAAA,kBACD;AAAA,gBACD;AAEA,oBACC,QAAQ,yBACP,cACD,QAAQ,yBACP,cACA;AACD,wBAAM,YAAY,KAAK,MAAM;AAAA,oBAC5B,CAAC,MAAM,EAAE,OAAO,WAAY;AAAA,kBAC7B;AACA,sBAAI,UAAU,KAAK,MAAM;AAAA,oBACxB,CAAC,MAAM,EAAE,OAAO,KAAK;AAAA,kBACtB;AAEA,sBAAI,aAAa,KAAK,WAAW,GAAG;AACnC,wBAAI,YAAY,SAAS;AACxB;AAAA,oBACD;AAEA,wBACC,WAAW,KACX,YAAY,WACX;AACD,2BAAK;AAAA,wBACJ,KAAK,MAAM,SAAS;AAAA,wBACpB,KAAK,MAAM,OAAO;AAAA,sBACnB;AAAA,oBACD;AAAA,kBACD;AAAA,gBACD;AAEA,oBAAI,YAAY,SAAS,GAAG;AAC3B,8BAAY,MAAM,CAAC,EAAE,QAAQ,CAAC,SAAS;AACtC,wBAAI,UAAU,KAAK,MAAM;AAAA,sBACxB,CAAC,MAAM,EAAE,OAAO,WAAY;AAAA,oBAC7B;AACA,0BAAM,YAAY,KAAK,MAAM;AAAA,sBAC5B,CAAC,MAAM,EAAE,OAAO,KAAK;AAAA,oBACtB;AACA,wBAAI,aAAa,KAAK,WAAW,GAAG;AACnC,0BAAI,YAAY,SAAS;AACxB;AAAA,sBACD;AAEA,0BACC,UAAU,KAAK,MAAM,UACrB,YAAY,WACX;AACD,6BAAK;AAAA,0BACJ,KAAK,MAAM,SAAS;AAAA,0BACpB,KAAK,MAAM,OAAO;AAAA,wBACnB;AACA,qCAAa;AAAA,sBACd;AAAA,oBACD;AAAA,kBACD,CAAC;AAAA,gBACF;AAAA,cACD;AAAA,YACD;AAEA,qBAAS,QAAQ;AACjB,sBAAU;AAAA,UACX,GAvJQ;AAAA,QAwJT;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EAEA,YAAY,OAAyB;AACpC,UAAM,YAAY,KAAK,0BAA0B;AAEjD,UAAM,QAAQ,CAAC,SAAS,KAAK,WAAW,IAAI,CAAC;AAE7C,SAAK,kBAAkB;AACvB,QAAI,cAAc,KAAK,0BAA0B,GAAG;AACnD,WAAK,gBAAgB;AAAA,IACtB;AAEA,SAAK,kBAAkB,KAAK,KAAK;AAAA,EAClC;AAAA,EAEQ,WAAW,MAAsB;AACxC,UAAM,QAAQ,KAAK,UAAU,UAAU,CAAC,MAAM,EAAE,SAAS,IAAI;AAE7D,QAAI,UAAU,IAAI;AACjB;AAAA,IACD;AAEA,QAAI,KAAK,oBAAoB,MAAM;AAClC,WAAK,kBAAkB;AAAA,IACxB;AAEA,oBAAgB,KAAK,QAAQ,EAAE,WAAW,IAAI;AAC9C,UAAM,CAAC,QAAQ,IAAI,KAAK,UAAU,OAAO,OAAO,CAAC;AACjD,aAAS,WAAW,QAAQ;AAAA,EAC7B;AAAA,EAEA,SAAS,MAAgB,IAAoB;AAC5C,UAAM,YAAY,KAAK,UAAU;AAAA,MAChC,CAAC,SAAS,KAAK,SAAS;AAAA,IACzB;AACA,UAAM,UAAU,KAAK,UAAU,UAAU,CAAC,SAAS,KAAK,SAAS,EAAE;AAEnE,UAAM,qBACL,KAAK,mBAAmB,uBAAuB,SAAS;AACzD,UAAM,mBACL,KAAK,mBAAmB,uBAAuB,OAAO;AAEvD,QAAI,YAAY,KAAK,aAAa,KAAK,UAAU,QAAQ;AACxD;AAAA,IACD;AAEA,QAAI,UAAU,KAAK,WAAW,KAAK,UAAU,QAAQ;AACpD;AAAA,IACD;AAEA,UAAM,CAAC,QAAQ,IAAI,KAAK,UAAU,OAAO,WAAW,CAAC;AACrD,SAAK,UAAU,OAAO,SAAS,GAAG,QAAQ;AAE1C,oBAAgB,KAAK,QAAQ,EAAE,SAAS,MAAM,EAAE;AAEhD,SAAK,mBAAmB;AAAA,MACvB,mBAAmB;AAAA,MACnB,iBAAiB;AAAA,IAClB;AAEA,SAAK,gBAAgB;AAAA,EACtB;AAAA,EAEA,WAAW,MAAgB,MAAoB;AAC9C,oBAAgB,KAAK,QAAQ,EAAE,WAAW,MAAM,IAAI;AAAA,EACrD;AAAA,EAEA,YAAY,MAAwB;AACnC,WAAO,gBAAgB,KAAK,QAAQ,EAAE,YAAY,IAAI;AAAA,EACvD;AAAA,EAEQ,oBAA0B;AACjC,QAAI,KAAK,0BAA0B,GAAG;AACrC,UAAI,KAAK,UAAU,CAAC,EAAE,KAAK,WAAW,GAAG;AACxC,aAAK,0BAA0B;AAAA,MAChC,OAAO;AACN,aAAK,0BAA0B,KAAK,UAAU,CAAC,EAAE;AACjD,aAAK,UAAU,CAAC,EAAE,KAAK,YAAY,IAAI;AAAA,MACxC;AACA,WAAK,UAAU,CAAC,EAAE,KAAK,gBAAgB;AACvC,WAAK,UAAU,CAAC,EAAE,KAAK,cAAc;AAAA,IACtC,OAAO;AACN,UAAI,KAAK,UAAU,WAAW,GAAG;AAChC,aAAK,UAAU,CAAC,EAAE,KAAK,gBAAgB;AACvC,YAAI,KAAK,UAAU,CAAC,EAAE,SAAS,KAAK,yBAAyB;AAC5D,eAAK,UAAU,CAAC,EAAE,KAAK,YAAY,KAAK;AAAA,QACzC;AACA,aAAK,UAAU,CAAC,EAAE,KAAK,cAAc;AAAA,MACtC,OAAO;AACN,aAAK,UAAU,QAAQ,CAAC,MAAM;AAC7B,YAAE,KAAK,gBAAgB;AACvB,YAAE,KAAK,cAAc;AACrB,cAAI,EAAE,SAAS,KAAK,yBAAyB;AAC5C,cAAE,KAAK,YAAY,KAAK;AAAA,UACzB;AAAA,QACD,CAAC;AAAA,MACF;AACA,WAAK,0BAA0B;AAAA,IAChC;AAAA,EACD;AAAA,EAEA,4BAAqC;AACpC,QACC,EACC,KAAK,QAAQ,wCACb,KAAK,UAAU,WAAW,IAE1B;AACD,aAAO;AAAA,IACR;AACA,QAAI,CAAC,KAAK,oBAAoB;AAC7B,UAAI,KAAK,+BAA+B,QAAW;AAClD,eAAO,KAAK,UAAU,CAAC,EAAE,KAAK,WAAW;AAAA,MAC1C;AAEA,aAAO,KAAK,+BAA+B;AAAA,IAC5C;AACA,WAAO;AAAA,EACR;AAAA,EAEQ,kBAAkB;AACzB,eAAW,QAAQ,KAAK,OAAO;AAC9B,WAAK,gBAAgB;AAAA,IACtB;AAAA,EACD;AAAA,EAEQ,eAAe,OAAe;AACrC,QAAI;AACJ,QAAI;AAGJ,aAAS,IAAI,OAAO,KAAK,GAAG,KAAK;AAChC,UACC,KAAK,UAAU,CAAC,EAAE,MAAM,UAAU,KAClC,KAAK,UAAU,CAAC,GAAG,KAAK,WAAW,GAClC;AACD,oBAAY,KAAK,UAAU,CAAC,EAAE;AAC9B;AAAA,MACD;AAAA,IACD;AAEA,aAAS,IAAI,QAAQ,GAAG,IAAI,KAAK,UAAU,QAAQ,KAAK;AACvD,UACC,KAAK,UAAU,CAAC,EAAE,MAAM,UAAU,KAClC,KAAK,UAAU,CAAC,GAAG,KAAK,WAAW,GAClC;AACD,qBAAa,KAAK,UAAU,CAAC,EAAE;AAC/B;AAAA,MACD;AAAA,IACD;AAEA,QAAI,aAAa,YAAY;AAC5B,YAAM,gBAAgB,KAAK,YAAY,SAAS;AAChD,YAAM,iBAAiB,KAAK,YAAY,UAAU;AAIlD,YAAM,mBAAmB,KAAK;AAAA,SAC5B,gBAAgB,kBAAkB;AAAA,MACpC;AACA,YAAM,oBAAoB,KAAK;AAAA,SAC7B,gBAAgB,kBAAkB;AAAA,MACpC;AAIA,UAAI,gBAAgB,gBAAgB;AACnC,aAAK,WAAW,WAAW,gBAAgB;AAC3C,aAAK,WAAW,YAAY,iBAAiB;AAAA,MAC9C,OAAO;AACN,aAAK,WAAW,YAAY,iBAAiB;AAC7C,aAAK,WAAW,WAAW,gBAAgB;AAAA,MAC5C;AAAA,IACD;AAAA,EACD;AAAA,EAES,UAAgB;AACxB,UAAM,QAAQ;AACd,SAAK,UAAU,QAAQ,CAAC,MAAM,EAAE,WAAW,QAAQ,CAAC;AACpD,QAAI,KAAK,UAAU;AAClB,WAAK,SAAS,QAAQ;AAAA,IACvB;AAAA,EACD;AACD;AAvxCa,oBAAN;AAAA,EAsEJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GA/EU;AAyxCN,MAAe,gCAEZ,QAAQ;AAAA,EAluDlB,OAkuDkB;AAAA;AAAA;AAAA,EACC;AAAA,EAGlB,YACC,MACC;AACD,UAAM,IAAI;AACV,SAAK,OAAO;AAAA,EACb;AAAA,EAEA,IAAI,aAA+B,MAAa;AAC/C,UAAM,oBAAoB,SACxB,IAAI,aAAa,EACjB,iCAAiC,KAAK,KAAK,mBAAmB;AAChE,QAAI,mBAAmB;AACtB,aAAO,KAAK;AAAA,QACX;AAAA,QACG;AAAA,QACH,GAAG;AAAA,MACJ;AAAA,IACD;AAAA,EACD;AAOD;AAEA,MAAM,yBAAyB,QAAQ;AAAA,EACtC,YACC,MACiB,QAChB;AACD,UAAM,IAAI;AAFO;AAAA,EAGlB;AAAA,EAvwDD,OAiwDuC;AAAA;AAAA;AAAA,EAQtC,MAAM,IAAI,UAA2C;AACpD,UAAM,wBAAwB,SAAS,IAAI,sBAAsB;AACjE,UAAM,oBAAoB,SAAS,IAAI,kBAAkB;AAEzD,UAAM,SAAS,mBAAmB,SAAS,iBAAiB;AAC5D,QAAI,WAAW,QAAW;AACzB;AAAA,IACD;AAEA,UAAM,gBACL,sBAAsB,yBAAyB,MAAM;AACtD,UAAM,QACL,sBAAsB,sBAAsB,aAAa;AAE1D,UAAM,iBAAiB,MAAM,uBAAuB;AAAA,MACnD,CAAC,OAAO,GAAG,OAAO;AAAA,IACnB;AACA,UAAM,eACL,MAAM,uBAAuB,QAAQ,cAAc;AACpD,QACC,eAAe,KAAK,SAAS,KAC7B,eAAe,KAAK,UAAU,MAAM,uBAAuB,QAC1D;AACD;AAAA,IACD;AAEA,UAAM,cACL,MAAM,uBAAuB,eAAe,KAAK,MAAM;AAExD,UAAM,KAAK,eAAe,IAAI,YAAY,EAAE;AAAA,EAC7C;AACD;AAEA;AAAA,EACC,MAAM,mBAAmB,iBAAiB;AAAA,IA3yD3C,OA2yD2C;AAAA;AAAA;AAAA,IACzC,cAAc;AACb;AAAA,QACC;AAAA,UACC,IAAI;AAAA,UACJ,OAAO,IAAI,SAAS,cAAc,cAAc;AAAA,UAChD,YAAY;AAAA,YACX,SAAS;AAAA,cACR,OAAO,UAAU,QAAQ;AAAA,cACzB,QAAQ;AAAA,YACT;AAAA,YACA,QAAQ,iBAAiB,mBAAmB;AAAA,YAC5C,MAAM,mBAAmB,YAAY,EAAE;AAAA,UACxC;AAAA,QACD;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD;AAEA;AAAA,EACC,MAAM,qBAAqB,iBAAiB;AAAA,IAj0D7C,OAi0D6C;AAAA;AAAA;AAAA,IAC3C,cAAc;AACb;AAAA,QACC;AAAA,UACC,IAAI;AAAA,UACJ,OAAO,IAAI,SAAS,gBAAgB,gBAAgB;AAAA,UACpD,YAAY;AAAA,YACX,SAAS;AAAA,cACR,OAAO,UAAU,QAAQ;AAAA,cACzB,QAAQ;AAAA,YACT;AAAA,YACA,QAAQ,iBAAiB,mBAAmB;AAAA,YAC5C,MAAM,mBAAmB,YAAY,EAAE;AAAA,UACxC;AAAA,QACD;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD;AAEA;AAAA,EACC,MAAM,qBAAqB,iBAAiB;AAAA,IAv1D7C,OAu1D6C;AAAA;AAAA;AAAA,IAC3C,cAAc;AACb;AAAA,QACC;AAAA,UACC,IAAI;AAAA,UACJ,OAAO,IAAI,SAAS,gBAAgB,gBAAgB;AAAA,UACpD,YAAY;AAAA,YACX,SAAS;AAAA,cACR,OAAO,UAAU,QAAQ;AAAA,cACzB,QAAQ;AAAA,YACT;AAAA,YACA,QAAQ,iBAAiB,mBAAmB;AAAA,YAC5C,MAAM,mBAAmB,YAAY,EAAE;AAAA,UACxC;AAAA,QACD;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD;AAEA;AAAA,EACC,MAAM,sBAAsB,iBAAiB;AAAA,IA72D9C,OA62D8C;AAAA;AAAA;AAAA,IAC5C,cAAc;AACb;AAAA,QACC;AAAA,UACC,IAAI;AAAA,UACJ,OAAO,IAAI,SAAS,iBAAiB,iBAAiB;AAAA,UACtD,YAAY;AAAA,YACX,SAAS;AAAA,cACR,OAAO,UAAU,QAAQ;AAAA,cACzB,QAAQ;AAAA,YACT;AAAA,YACA,QAAQ,iBAAiB,mBAAmB;AAAA,YAC5C,MAAM,mBAAmB,YAAY,EAAE;AAAA,UACxC;AAAA,QACD;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD;AAEA;AAAA,EACC,MAAM,kBAAkB,QAAQ;AAAA,IAn4DjC,OAm4DiC;AAAA;AAAA;AAAA,IAC/B,cAAc;AACb,YAAM;AAAA,QACL,IAAI;AAAA,QACJ,OAAO,IAAI,SAAS,aAAa,YAAY;AAAA,MAC9C,CAAC;AAAA,IACF;AAAA,IAEA,MAAM,IACL,UACA,SACgB;AAChB,UACC,CAAC,MAAM,QAAQ,SAAS,OAAO,KAC/B,OAAO,SAAS,kBAAkB,UACjC;AACD,eAAO,QAAQ,OAAO,mBAAmB;AAAA,MAC1C;AAEA,YAAM,wBAAwB,SAAS,IAAI,sBAAsB;AAEjE,YAAM,cAAc,sBAAsB;AAAA,QACzC,QAAQ;AAAA,MACT;AACA,UAAI,CAAC,aAAa;AACjB;AAAA,MACD;AAGA,iBAAW,UAAU,QAAQ,SAAS;AACrC,cAAM,iBACL,sBAAsB,sBAAsB,MAAM;AACnD,YAAI,gBAAgB,aAAa;AAChC,gCAAsB;AAAA,YACrB,CAAC,cAAc;AAAA,YACf;AAAA,YACA,oBAAoB;AAAA,YACpB,KAAK,KAAK;AAAA,UACX;AAAA,QACD;AAAA,MACD;AAEA,YAAM,SACJ,IAAI,aAAa,EACjB,kBAAkB,YAAY,IAAI,IAAI;AAAA,IACzC;AAAA,EACD;AACD;",
  "names": ["DropDirection", "bounds", "totalWeight", "collapsed"]
}
