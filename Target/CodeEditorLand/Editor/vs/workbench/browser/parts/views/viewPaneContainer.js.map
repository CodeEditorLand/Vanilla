{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/views/viewPaneContainer.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableListener, Dimension, DragAndDropObserver, EventType, getWindow, isAncestor } from '../../../../base/browser/dom.js';\nimport { StandardMouseEvent } from '../../../../base/browser/mouseEvent.js';\nimport { EventType as TouchEventType, Gesture } from '../../../../base/browser/touch.js';\nimport { IActionViewItem } from '../../../../base/browser/ui/actionbar/actionbar.js';\nimport { IBoundarySashes, Orientation } from '../../../../base/browser/ui/sash/sash.js';\nimport { IPaneViewOptions, PaneView } from '../../../../base/browser/ui/splitview/paneview.js';\nimport { IAction } from '../../../../base/common/actions.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { KeyChord, KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { combinedDisposable, DisposableStore, IDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { assertIsDefined } from '../../../../base/common/types.js';\nimport './media/paneviewlet.css';\nimport * as nls from '../../../../nls.js';\nimport { createActionViewItem } from '../../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { Action2, IAction2Options, IMenuService, ISubmenuItem, MenuId, MenuRegistry, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService, ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { IStorageService, StorageScope, StorageTarget } from '../../../../platform/storage/common/storage.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { activeContrastBorder, asCssVariable } from '../../../../platform/theme/common/colorRegistry.js';\nimport { IThemeService, Themable } from '../../../../platform/theme/common/themeService.js';\nimport { IWorkspaceContextService } from '../../../../platform/workspace/common/workspace.js';\nimport { CompositeMenuActions } from '../../actions.js';\nimport { CompositeDragAndDropObserver, toggleDropEffect } from '../../dnd.js';\nimport { ViewPane } from './viewPane.js';\nimport { IViewletViewOptions } from './viewsViewlet.js';\nimport { Component } from '../../../common/component.js';\nimport { PANEL_SECTION_BORDER, PANEL_SECTION_DRAG_AND_DROP_BACKGROUND, PANEL_SECTION_HEADER_BACKGROUND, PANEL_SECTION_HEADER_BORDER, PANEL_SECTION_HEADER_FOREGROUND, SIDE_BAR_DRAG_AND_DROP_BACKGROUND, SIDE_BAR_SECTION_HEADER_BACKGROUND, SIDE_BAR_SECTION_HEADER_BORDER, SIDE_BAR_SECTION_HEADER_FOREGROUND } from '../../../common/theme.js';\nimport { IAddedViewDescriptorRef, ICustomViewDescriptor, IView, IViewContainerModel, IViewDescriptor, IViewDescriptorRef, IViewDescriptorService, IViewPaneContainer, ViewContainer, ViewContainerLocation, ViewContainerLocationToString, ViewVisibilityState } from '../../../common/views.js';\nimport { IViewsService } from '../../../services/views/common/viewsService.js';\nimport { FocusedViewContext } from '../../../common/contextkeys.js';\nimport { IExtensionService } from '../../../services/extensions/common/extensions.js';\nimport { isHorizontal, IWorkbenchLayoutService, LayoutSettings } from '../../../services/layout/browser/layoutService.js';\nimport { IBaseActionViewItemOptions } from '../../../../base/browser/ui/actionbar/actionViewItems.js';\n\nexport const ViewsSubMenu = new MenuId('Views');\nMenuRegistry.appendMenuItem(MenuId.ViewContainerTitle, {\n\tsubmenu: ViewsSubMenu,\n\ttitle: nls.localize('views', \"Views\"),\n\torder: 1,\n} satisfies ISubmenuItem);\n\nexport interface IViewPaneContainerOptions extends IPaneViewOptions {\n\tmergeViewWithContainerWhenSingleView: boolean;\n}\n\ninterface IViewPaneItem {\n\tpane: ViewPane;\n\tdisposable: IDisposable;\n}\n\nconst enum DropDirection {\n\tUP,\n\tDOWN,\n\tLEFT,\n\tRIGHT\n}\n\ntype BoundingRect = { top: number; left: number; bottom: number; right: number };\n\nclass ViewPaneDropOverlay extends Themable {\n\n\tprivate static readonly OVERLAY_ID = 'monaco-pane-drop-overlay';\n\n\tprivate container!: HTMLElement;\n\tprivate overlay!: HTMLElement;\n\n\tprivate _currentDropOperation: DropDirection | undefined;\n\n\t// private currentDropOperation: IDropOperation | undefined;\n\tprivate _disposed: boolean | undefined;\n\n\tprivate cleanupOverlayScheduler: RunOnceScheduler;\n\n\tget currentDropOperation(): DropDirection | undefined {\n\t\treturn this._currentDropOperation;\n\t}\n\n\tconstructor(\n\t\tprivate paneElement: HTMLElement,\n\t\tprivate orientation: Orientation | undefined,\n\t\tprivate bounds: BoundingRect | undefined,\n\t\tprotected location: ViewContainerLocation,\n\t\tthemeService: IThemeService,\n\t) {\n\t\tsuper(themeService);\n\t\tthis.cleanupOverlayScheduler = this._register(new RunOnceScheduler(() => this.dispose(), 300));\n\n\t\tthis.create();\n\t}\n\n\tget disposed(): boolean {\n\t\treturn !!this._disposed;\n\t}\n\n\tprivate create(): void {\n\t\t// Container\n\t\tthis.container = document.createElement('div');\n\t\tthis.container.id = ViewPaneDropOverlay.OVERLAY_ID;\n\t\tthis.container.style.top = '0px';\n\n\t\t// Parent\n\t\tthis.paneElement.appendChild(this.container);\n\t\tthis.paneElement.classList.add('dragged-over');\n\t\tthis._register(toDisposable(() => {\n\t\t\tthis.container.remove();\n\t\t\tthis.paneElement.classList.remove('dragged-over');\n\t\t}));\n\n\t\t// Overlay\n\t\tthis.overlay = document.createElement('div');\n\t\tthis.overlay.classList.add('pane-overlay-indicator');\n\t\tthis.container.appendChild(this.overlay);\n\n\t\t// Overlay Event Handling\n\t\tthis.registerListeners();\n\n\t\t// Styles\n\t\tthis.updateStyles();\n\t}\n\n\toverride updateStyles(): void {\n\n\t\t// Overlay drop background\n\t\tthis.overlay.style.backgroundColor = this.getColor(this.location === ViewContainerLocation.Panel ? PANEL_SECTION_DRAG_AND_DROP_BACKGROUND : SIDE_BAR_DRAG_AND_DROP_BACKGROUND) || '';\n\n\t\t// Overlay contrast border (if any)\n\t\tconst activeContrastBorderColor = this.getColor(activeContrastBorder);\n\t\tthis.overlay.style.outlineColor = activeContrastBorderColor || '';\n\t\tthis.overlay.style.outlineOffset = activeContrastBorderColor ? '-2px' : '';\n\t\tthis.overlay.style.outlineStyle = activeContrastBorderColor ? 'dashed' : '';\n\t\tthis.overlay.style.outlineWidth = activeContrastBorderColor ? '2px' : '';\n\n\t\tthis.overlay.style.borderColor = activeContrastBorderColor || '';\n\t\tthis.overlay.style.borderStyle = 'solid';\n\t\tthis.overlay.style.borderWidth = '0px';\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(new DragAndDropObserver(this.container, {\n\t\t\tonDragOver: e => {\n\n\t\t\t\t// Position overlay\n\t\t\t\tthis.positionOverlay(e.offsetX, e.offsetY);\n\n\t\t\t\t// Make sure to stop any running cleanup scheduler to remove the overlay\n\t\t\t\tif (this.cleanupOverlayScheduler.isScheduled()) {\n\t\t\t\t\tthis.cleanupOverlayScheduler.cancel();\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonDragLeave: e => this.dispose(),\n\t\t\tonDragEnd: e => this.dispose(),\n\n\t\t\tonDrop: e => {\n\t\t\t\t// Dispose overlay\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(addDisposableListener(this.container, EventType.MOUSE_OVER, () => {\n\t\t\t// Under some circumstances we have seen reports where the drop overlay is not being\n\t\t\t// cleaned up and as such the editor area remains under the overlay so that you cannot\n\t\t\t// type into the editor anymore. This seems related to using VMs and DND via host and\n\t\t\t// guest OS, though some users also saw it without VMs.\n\t\t\t// To protect against this issue we always destroy the overlay as soon as we detect a\n\t\t\t// mouse event over it. The delay is used to guarantee we are not interfering with the\n\t\t\t// actual DROP event that can also trigger a mouse over event.\n\t\t\tif (!this.cleanupOverlayScheduler.isScheduled()) {\n\t\t\t\tthis.cleanupOverlayScheduler.schedule();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate positionOverlay(mousePosX: number, mousePosY: number): void {\n\t\tconst paneWidth = this.paneElement.clientWidth;\n\t\tconst paneHeight = this.paneElement.clientHeight;\n\n\t\tconst splitWidthThreshold = paneWidth / 2;\n\t\tconst splitHeightThreshold = paneHeight / 2;\n\n\t\tlet dropDirection: DropDirection | undefined;\n\n\t\tif (this.orientation === Orientation.VERTICAL) {\n\t\t\tif (mousePosY < splitHeightThreshold) {\n\t\t\t\tdropDirection = DropDirection.UP;\n\t\t\t} else if (mousePosY >= splitHeightThreshold) {\n\t\t\t\tdropDirection = DropDirection.DOWN;\n\t\t\t}\n\t\t} else if (this.orientation === Orientation.HORIZONTAL) {\n\t\t\tif (mousePosX < splitWidthThreshold) {\n\t\t\t\tdropDirection = DropDirection.LEFT;\n\t\t\t} else if (mousePosX >= splitWidthThreshold) {\n\t\t\t\tdropDirection = DropDirection.RIGHT;\n\t\t\t}\n\t\t}\n\n\t\t// Draw overlay based on split direction\n\t\tswitch (dropDirection) {\n\t\t\tcase DropDirection.UP:\n\t\t\t\tthis.doPositionOverlay({ top: '0', left: '0', width: '100%', height: '50%' });\n\t\t\t\tbreak;\n\t\t\tcase DropDirection.DOWN:\n\t\t\t\tthis.doPositionOverlay({ bottom: '0', left: '0', width: '100%', height: '50%' });\n\t\t\t\tbreak;\n\t\t\tcase DropDirection.LEFT:\n\t\t\t\tthis.doPositionOverlay({ top: '0', left: '0', width: '50%', height: '100%' });\n\t\t\t\tbreak;\n\t\t\tcase DropDirection.RIGHT:\n\t\t\t\tthis.doPositionOverlay({ top: '0', right: '0', width: '50%', height: '100%' });\n\t\t\t\tbreak;\n\t\t\tdefault: {\n\t\t\t\t// const top = this.bounds?.top || 0;\n\t\t\t\t// const left = this.bounds?.bottom || 0;\n\n\t\t\t\tlet top = '0';\n\t\t\t\tlet left = '0';\n\t\t\t\tlet width = '100%';\n\t\t\t\tlet height = '100%';\n\t\t\t\tif (this.bounds) {\n\t\t\t\t\tconst boundingRect = this.container.getBoundingClientRect();\n\t\t\t\t\ttop = `${this.bounds.top - boundingRect.top}px`;\n\t\t\t\t\tleft = `${this.bounds.left - boundingRect.left}px`;\n\t\t\t\t\theight = `${this.bounds.bottom - this.bounds.top}px`;\n\t\t\t\t\twidth = `${this.bounds.right - this.bounds.left}px`;\n\t\t\t\t}\n\n\t\t\t\tthis.doPositionOverlay({ top, left, width, height });\n\t\t\t}\n\t\t}\n\n\t\tif ((this.orientation === Orientation.VERTICAL && paneHeight <= 25) ||\n\t\t\t(this.orientation === Orientation.HORIZONTAL && paneWidth <= 25)) {\n\t\t\tthis.doUpdateOverlayBorder(dropDirection);\n\t\t} else {\n\t\t\tthis.doUpdateOverlayBorder(undefined);\n\t\t}\n\n\t\t// Make sure the overlay is visible now\n\t\tthis.overlay.style.opacity = '1';\n\n\t\t// Enable transition after a timeout to prevent initial animation\n\t\tsetTimeout(() => this.overlay.classList.add('overlay-move-transition'), 0);\n\n\t\t// Remember as current split direction\n\t\tthis._currentDropOperation = dropDirection;\n\t}\n\n\tprivate doUpdateOverlayBorder(direction: DropDirection | undefined): void {\n\t\tthis.overlay.style.borderTopWidth = direction === DropDirection.UP ? '2px' : '0px';\n\t\tthis.overlay.style.borderLeftWidth = direction === DropDirection.LEFT ? '2px' : '0px';\n\t\tthis.overlay.style.borderBottomWidth = direction === DropDirection.DOWN ? '2px' : '0px';\n\t\tthis.overlay.style.borderRightWidth = direction === DropDirection.RIGHT ? '2px' : '0px';\n\t}\n\n\tprivate doPositionOverlay(options: { top?: string; bottom?: string; left?: string; right?: string; width: string; height: string }): void {\n\n\t\t// Container\n\t\tthis.container.style.height = '100%';\n\n\t\t// Overlay\n\t\tthis.overlay.style.top = options.top || '';\n\t\tthis.overlay.style.left = options.left || '';\n\t\tthis.overlay.style.bottom = options.bottom || '';\n\t\tthis.overlay.style.right = options.right || '';\n\t\tthis.overlay.style.width = options.width;\n\t\tthis.overlay.style.height = options.height;\n\t}\n\n\n\tcontains(element: HTMLElement): boolean {\n\t\treturn element === this.container || element === this.overlay;\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis._disposed = true;\n\t}\n}\n\nclass ViewContainerMenuActions extends CompositeMenuActions {\n\tconstructor(\n\t\telement: HTMLElement,\n\t\tviewContainer: ViewContainer,\n\t\t@IViewDescriptorService viewDescriptorService: IViewDescriptorService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IMenuService menuService: IMenuService,\n\t) {\n\t\tconst scopedContextKeyService = contextKeyService.createScoped(element);\n\t\tscopedContextKeyService.createKey('viewContainer', viewContainer.id);\n\t\tconst viewContainerLocationKey = scopedContextKeyService.createKey('viewContainerLocation', ViewContainerLocationToString(viewDescriptorService.getViewContainerLocation(viewContainer)!));\n\t\tsuper(MenuId.ViewContainerTitle, MenuId.ViewContainerTitleContext, { shouldForwardArgs: true, renderShortTitle: true }, scopedContextKeyService, menuService);\n\t\tthis._register(scopedContextKeyService);\n\t\tthis._register(Event.filter(viewDescriptorService.onDidChangeContainerLocation, e => e.viewContainer === viewContainer)(() => viewContainerLocationKey.set(ViewContainerLocationToString(viewDescriptorService.getViewContainerLocation(viewContainer)!))));\n\t}\n}\n\nexport class ViewPaneContainer extends Component implements IViewPaneContainer {\n\n\treadonly viewContainer: ViewContainer;\n\tprivate lastFocusedPane: ViewPane | undefined;\n\tprivate lastMergedCollapsedPane: ViewPane | undefined;\n\tprivate paneItems: IViewPaneItem[] = [];\n\tprivate paneview?: PaneView;\n\n\tprivate visible: boolean = false;\n\n\tprivate areExtensionsReady: boolean = false;\n\n\tprivate didLayout = false;\n\tprivate dimension: Dimension | undefined;\n\tprivate _boundarySashes: IBoundarySashes | undefined;\n\n\tprivate readonly visibleViewsCountFromCache: number | undefined;\n\tprivate readonly visibleViewsStorageId: string;\n\tprotected readonly viewContainerModel: IViewContainerModel;\n\n\tprivate readonly _onTitleAreaUpdate: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onTitleAreaUpdate: Event<void> = this._onTitleAreaUpdate.event;\n\n\tprivate readonly _onDidChangeVisibility = this._register(new Emitter<boolean>());\n\treadonly onDidChangeVisibility = this._onDidChangeVisibility.event;\n\n\tprivate readonly _onDidAddViews = this._register(new Emitter<IView[]>());\n\treadonly onDidAddViews = this._onDidAddViews.event;\n\n\tprivate readonly _onDidRemoveViews = this._register(new Emitter<IView[]>());\n\treadonly onDidRemoveViews = this._onDidRemoveViews.event;\n\n\tprivate readonly _onDidChangeViewVisibility = this._register(new Emitter<IView>());\n\treadonly onDidChangeViewVisibility = this._onDidChangeViewVisibility.event;\n\n\tprivate readonly _onDidFocusView = this._register(new Emitter<IView>());\n\treadonly onDidFocusView = this._onDidFocusView.event;\n\n\tprivate readonly _onDidBlurView = this._register(new Emitter<IView>());\n\treadonly onDidBlurView = this._onDidBlurView.event;\n\n\tget onDidSashChange(): Event<number> {\n\t\treturn assertIsDefined(this.paneview).onDidSashChange;\n\t}\n\n\tget panes(): ViewPane[] {\n\t\treturn this.paneItems.map(i => i.pane);\n\t}\n\n\tget views(): IView[] {\n\t\treturn this.panes;\n\t}\n\n\tget length(): number {\n\t\treturn this.paneItems.length;\n\t}\n\n\tprivate _menuActions?: ViewContainerMenuActions;\n\tget menuActions(): CompositeMenuActions | undefined {\n\t\treturn this._menuActions;\n\t}\n\n\tconstructor(\n\t\tid: string,\n\t\tprivate options: IViewPaneContainerOptions,\n\t\t@IInstantiationService protected instantiationService: IInstantiationService,\n\t\t@IConfigurationService protected configurationService: IConfigurationService,\n\t\t@IWorkbenchLayoutService protected layoutService: IWorkbenchLayoutService,\n\t\t@IContextMenuService protected contextMenuService: IContextMenuService,\n\t\t@ITelemetryService protected telemetryService: ITelemetryService,\n\t\t@IExtensionService protected extensionService: IExtensionService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IStorageService protected storageService: IStorageService,\n\t\t@IWorkspaceContextService protected contextService: IWorkspaceContextService,\n\t\t@IViewDescriptorService protected viewDescriptorService: IViewDescriptorService,\n\t) {\n\n\t\tsuper(id, themeService, storageService);\n\n\t\tconst container = this.viewDescriptorService.getViewContainerById(id);\n\t\tif (!container) {\n\t\t\tthrow new Error('Could not find container');\n\t\t}\n\n\n\t\tthis.viewContainer = container;\n\t\tthis.visibleViewsStorageId = `${id}.numberOfVisibleViews`;\n\t\tthis.visibleViewsCountFromCache = this.storageService.getNumber(this.visibleViewsStorageId, StorageScope.WORKSPACE, undefined);\n\t\tthis.viewContainerModel = this.viewDescriptorService.getViewContainerModel(container);\n\t}\n\n\tcreate(parent: HTMLElement): void {\n\t\tconst options = this.options as IPaneViewOptions;\n\t\toptions.orientation = this.orientation;\n\t\tthis.paneview = this._register(new PaneView(parent, this.options));\n\n\t\tif (this._boundarySashes) {\n\t\t\tthis.paneview.setBoundarySashes(this._boundarySashes);\n\t\t}\n\n\t\tthis._register(this.paneview.onDidDrop(({ from, to }) => this.movePane(from as ViewPane, to as ViewPane)));\n\t\tthis._register(this.paneview.onDidScroll(_ => this.onDidScrollPane()));\n\t\tthis._register(this.paneview.onDidSashReset((index) => this.onDidSashReset(index)));\n\t\tthis._register(addDisposableListener(parent, EventType.CONTEXT_MENU, (e: MouseEvent) => this.showContextMenu(new StandardMouseEvent(getWindow(parent), e))));\n\t\tthis._register(Gesture.addTarget(parent));\n\t\tthis._register(addDisposableListener(parent, TouchEventType.Contextmenu, (e: MouseEvent) => this.showContextMenu(new StandardMouseEvent(getWindow(parent), e))));\n\n\t\tthis._menuActions = this._register(this.instantiationService.createInstance(ViewContainerMenuActions, this.paneview.element, this.viewContainer));\n\t\tthis._register(this._menuActions.onDidChange(() => this.updateTitleArea()));\n\n\t\tlet overlay: ViewPaneDropOverlay | undefined;\n\t\tconst getOverlayBounds: () => BoundingRect = () => {\n\t\t\tconst fullSize = parent.getBoundingClientRect();\n\t\t\tconst lastPane = this.panes[this.panes.length - 1].element.getBoundingClientRect();\n\t\t\tconst top = this.orientation === Orientation.VERTICAL ? lastPane.bottom : fullSize.top;\n\t\t\tconst left = this.orientation === Orientation.HORIZONTAL ? lastPane.right : fullSize.left;\n\n\t\t\treturn {\n\t\t\t\ttop,\n\t\t\t\tbottom: fullSize.bottom,\n\t\t\t\tleft,\n\t\t\t\tright: fullSize.right,\n\t\t\t};\n\t\t};\n\n\t\tconst inBounds = (bounds: BoundingRect, pos: { x: number; y: number }) => {\n\t\t\treturn pos.x >= bounds.left && pos.x <= bounds.right && pos.y >= bounds.top && pos.y <= bounds.bottom;\n\t\t};\n\n\n\t\tlet bounds: BoundingRect;\n\n\t\tthis._register(CompositeDragAndDropObserver.INSTANCE.registerTarget(parent, {\n\t\t\tonDragEnter: (e) => {\n\t\t\t\tbounds = getOverlayBounds();\n\t\t\t\tif (overlay && overlay.disposed) {\n\t\t\t\t\toverlay = undefined;\n\t\t\t\t}\n\n\t\t\t\tif (!overlay && inBounds(bounds, e.eventData)) {\n\t\t\t\t\tconst dropData = e.dragAndDropData.getData();\n\t\t\t\t\tif (dropData.type === 'view') {\n\n\t\t\t\t\t\tconst oldViewContainer = this.viewDescriptorService.getViewContainerByViewId(dropData.id);\n\t\t\t\t\t\tconst viewDescriptor = this.viewDescriptorService.getViewDescriptorById(dropData.id);\n\n\t\t\t\t\t\tif (oldViewContainer !== this.viewContainer && (!viewDescriptor || !viewDescriptor.canMoveView || this.viewContainer.rejectAddedViews)) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\toverlay = new ViewPaneDropOverlay(parent, undefined, bounds, this.viewDescriptorService.getViewContainerLocation(this.viewContainer)!, this.themeService);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dropData.type === 'composite' && dropData.id !== this.viewContainer.id) {\n\t\t\t\t\t\tconst container = this.viewDescriptorService.getViewContainerById(dropData.id)!;\n\t\t\t\t\t\tconst viewsToMove = this.viewDescriptorService.getViewContainerModel(container).allViewDescriptors;\n\n\t\t\t\t\t\tif (!viewsToMove.some(v => !v.canMoveView) && viewsToMove.length > 0) {\n\t\t\t\t\t\t\toverlay = new ViewPaneDropOverlay(parent, undefined, bounds, this.viewDescriptorService.getViewContainerLocation(this.viewContainer)!, this.themeService);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tonDragOver: (e) => {\n\t\t\t\tif (overlay && overlay.disposed) {\n\t\t\t\t\toverlay = undefined;\n\t\t\t\t}\n\n\t\t\t\tif (overlay && !inBounds(bounds, e.eventData)) {\n\t\t\t\t\toverlay.dispose();\n\t\t\t\t\toverlay = undefined;\n\t\t\t\t}\n\n\t\t\t\tif (inBounds(bounds, e.eventData)) {\n\t\t\t\t\ttoggleDropEffect(e.eventData.dataTransfer, 'move', overlay !== undefined);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonDragLeave: (e) => {\n\t\t\t\toverlay?.dispose();\n\t\t\t\toverlay = undefined;\n\t\t\t},\n\t\t\tonDrop: (e) => {\n\t\t\t\tif (overlay) {\n\t\t\t\t\tconst dropData = e.dragAndDropData.getData();\n\t\t\t\t\tconst viewsToMove: IViewDescriptor[] = [];\n\n\t\t\t\t\tif (dropData.type === 'composite' && dropData.id !== this.viewContainer.id) {\n\t\t\t\t\t\tconst container = this.viewDescriptorService.getViewContainerById(dropData.id)!;\n\t\t\t\t\t\tconst allViews = this.viewDescriptorService.getViewContainerModel(container).allViewDescriptors;\n\t\t\t\t\t\tif (!allViews.some(v => !v.canMoveView)) {\n\t\t\t\t\t\t\tviewsToMove.push(...allViews);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (dropData.type === 'view') {\n\t\t\t\t\t\tconst oldViewContainer = this.viewDescriptorService.getViewContainerByViewId(dropData.id);\n\t\t\t\t\t\tconst viewDescriptor = this.viewDescriptorService.getViewDescriptorById(dropData.id);\n\t\t\t\t\t\tif (oldViewContainer !== this.viewContainer && viewDescriptor && viewDescriptor.canMoveView) {\n\t\t\t\t\t\t\tthis.viewDescriptorService.moveViewsToContainer([viewDescriptor], this.viewContainer, undefined, 'dnd');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst paneCount = this.panes.length;\n\n\t\t\t\t\tif (viewsToMove.length > 0) {\n\t\t\t\t\t\tthis.viewDescriptorService.moveViewsToContainer(viewsToMove, this.viewContainer, undefined, 'dnd');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (paneCount > 0) {\n\t\t\t\t\t\tfor (const view of viewsToMove) {\n\t\t\t\t\t\t\tconst paneToMove = this.panes.find(p => p.id === view.id);\n\t\t\t\t\t\t\tif (paneToMove) {\n\t\t\t\t\t\t\t\tthis.movePane(paneToMove, this.panes[this.panes.length - 1]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\toverlay?.dispose();\n\t\t\t\toverlay = undefined;\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.onDidSashChange(() => this.saveViewSizes()));\n\t\tthis._register(this.viewContainerModel.onDidAddVisibleViewDescriptors(added => this.onDidAddViewDescriptors(added)));\n\t\tthis._register(this.viewContainerModel.onDidRemoveVisibleViewDescriptors(removed => this.onDidRemoveViewDescriptors(removed)));\n\t\tconst addedViews: IAddedViewDescriptorRef[] = this.viewContainerModel.visibleViewDescriptors.map((viewDescriptor, index) => {\n\t\t\tconst size = this.viewContainerModel.getSize(viewDescriptor.id);\n\t\t\tconst collapsed = this.viewContainerModel.isCollapsed(viewDescriptor.id);\n\t\t\treturn ({ viewDescriptor, index, size, collapsed });\n\t\t});\n\t\tif (addedViews.length) {\n\t\t\tthis.onDidAddViewDescriptors(addedViews);\n\t\t}\n\n\t\t// Update headers after and title contributed views after available, since we read from cache in the beginning to know if the viewlet has single view or not. Ref #29609\n\t\tthis.extensionService.whenInstalledExtensionsRegistered().then(() => {\n\t\t\tthis.areExtensionsReady = true;\n\t\t\tif (this.panes.length) {\n\t\t\t\tthis.updateTitleArea();\n\t\t\t\tthis.updateViewHeaders();\n\t\t\t}\n\t\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => {\n\t\t\t\tif (e.affectsConfiguration(LayoutSettings.ACTIVITY_BAR_LOCATION)) {\n\t\t\t\t\tthis.updateViewHeaders();\n\t\t\t\t}\n\t\t\t}));\n\t\t});\n\n\t\tthis._register(this.viewContainerModel.onDidChangeActiveViewDescriptors(() => this._onTitleAreaUpdate.fire()));\n\t}\n\n\tgetTitle(): string {\n\t\tconst containerTitle = this.viewContainerModel.title;\n\n\t\tif (this.isViewMergedWithContainer()) {\n\t\t\tconst singleViewPaneContainerTitle = this.paneItems[0].pane.singleViewPaneContainerTitle;\n\t\t\tif (singleViewPaneContainerTitle) {\n\t\t\t\treturn singleViewPaneContainerTitle;\n\t\t\t}\n\n\t\t\tconst paneItemTitle = this.paneItems[0].pane.title;\n\t\t\tif (containerTitle === paneItemTitle) {\n\t\t\t\treturn paneItemTitle;\n\t\t\t}\n\n\t\t\treturn paneItemTitle ? `${containerTitle}: ${paneItemTitle}` : containerTitle;\n\t\t}\n\n\t\treturn containerTitle;\n\t}\n\n\tprivate showContextMenu(event: StandardMouseEvent): void {\n\t\tfor (const paneItem of this.paneItems) {\n\t\t\t// Do not show context menu if target is coming from inside pane views\n\t\t\tif (isAncestor(event.target, paneItem.pane.element)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => event,\n\t\t\tgetActions: () => this.menuActions?.getContextMenuActions() ?? []\n\t\t});\n\t}\n\n\tgetActionsContext(): unknown {\n\t\tif (this.isViewMergedWithContainer()) {\n\t\t\treturn this.panes[0].getActionsContext();\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tgetActionViewItem(action: IAction, options: IBaseActionViewItemOptions): IActionViewItem | undefined {\n\t\tif (this.isViewMergedWithContainer()) {\n\t\t\treturn this.paneItems[0].pane.getActionViewItem(action, options);\n\t\t}\n\t\treturn createActionViewItem(this.instantiationService, action, options);\n\t}\n\n\tfocus(): void {\n\t\tlet paneToFocus: ViewPane | undefined = undefined;\n\t\tif (this.lastFocusedPane) {\n\t\t\tpaneToFocus = this.lastFocusedPane;\n\t\t} else if (this.paneItems.length > 0) {\n\t\t\tfor (const { pane } of this.paneItems) {\n\t\t\t\tif (pane.isExpanded()) {\n\t\t\t\t\tpaneToFocus = pane;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (paneToFocus) {\n\t\t\tpaneToFocus.focus();\n\t\t}\n\t}\n\n\tprivate get orientation(): Orientation {\n\t\tswitch (this.viewDescriptorService.getViewContainerLocation(this.viewContainer)) {\n\t\t\tcase ViewContainerLocation.Sidebar:\n\t\t\tcase ViewContainerLocation.AuxiliaryBar:\n\t\t\t\treturn Orientation.VERTICAL;\n\t\t\tcase ViewContainerLocation.Panel: {\n\t\t\t\treturn isHorizontal(this.layoutService.getPanelPosition()) ? Orientation.HORIZONTAL : Orientation.VERTICAL;\n\t\t\t}\n\t\t}\n\n\t\treturn Orientation.VERTICAL;\n\t}\n\n\tlayout(dimension: Dimension): void {\n\t\tif (this.paneview) {\n\t\t\tif (this.paneview.orientation !== this.orientation) {\n\t\t\t\tthis.paneview.flipOrientation(dimension.height, dimension.width);\n\t\t\t}\n\n\t\t\tthis.paneview.layout(dimension.height, dimension.width);\n\t\t}\n\n\t\tthis.dimension = dimension;\n\t\tif (this.didLayout) {\n\t\t\tthis.saveViewSizes();\n\t\t} else {\n\t\t\tthis.didLayout = true;\n\t\t\tthis.restoreViewSizes();\n\t\t}\n\t}\n\n\tsetBoundarySashes(sashes: IBoundarySashes): void {\n\t\tthis._boundarySashes = sashes;\n\t\tthis.paneview?.setBoundarySashes(sashes);\n\t}\n\n\tgetOptimalWidth(): number {\n\t\tconst additionalMargin = 16;\n\t\tconst optimalWidth = Math.max(...this.panes.map(view => view.getOptimalWidth() || 0));\n\t\treturn optimalWidth + additionalMargin;\n\t}\n\n\taddPanes(panes: { pane: ViewPane; size: number; index?: number; disposable: IDisposable }[]): void {\n\t\tconst wasMerged = this.isViewMergedWithContainer();\n\n\t\tfor (const { pane, size, index, disposable } of panes) {\n\t\t\tthis.addPane(pane, size, disposable, index);\n\t\t}\n\n\t\tthis.updateViewHeaders();\n\t\tif (this.isViewMergedWithContainer() !== wasMerged) {\n\t\t\tthis.updateTitleArea();\n\t\t}\n\n\t\tthis._onDidAddViews.fire(panes.map(({ pane }) => pane));\n\t}\n\n\tsetVisible(visible: boolean): void {\n\t\tif (this.visible !== !!visible) {\n\t\t\tthis.visible = visible;\n\n\t\t\tthis._onDidChangeVisibility.fire(visible);\n\t\t}\n\n\t\tthis.panes.filter(view => view.isVisible() !== visible)\n\t\t\t.map((view) => view.setVisible(visible));\n\t}\n\n\tisVisible(): boolean {\n\t\treturn this.visible;\n\t}\n\n\tprotected updateTitleArea(): void {\n\t\tthis._onTitleAreaUpdate.fire();\n\t}\n\n\tprotected createView(viewDescriptor: IViewDescriptor, options: IViewletViewOptions): ViewPane {\n\t\treturn (this.instantiationService as any).createInstance(viewDescriptor.ctorDescriptor.ctor, ...(viewDescriptor.ctorDescriptor.staticArguments || []), options) as ViewPane;\n\t}\n\n\tgetView(id: string): ViewPane | undefined {\n\t\treturn this.panes.filter(view => view.id === id)[0];\n\t}\n\n\tprivate saveViewSizes(): void {\n\t\t// Save size only when the layout has happened\n\t\tif (this.didLayout) {\n\t\t\tthis.viewContainerModel.setSizes(this.panes.map(view => ({ id: view.id, size: this.getPaneSize(view) })));\n\t\t}\n\t}\n\n\tprivate restoreViewSizes(): void {\n\t\t// Restore sizes only when the layout has happened\n\t\tif (this.didLayout) {\n\t\t\tlet initialSizes;\n\t\t\tfor (let i = 0; i < this.viewContainerModel.visibleViewDescriptors.length; i++) {\n\t\t\t\tconst pane = this.panes[i];\n\t\t\t\tconst viewDescriptor = this.viewContainerModel.visibleViewDescriptors[i];\n\t\t\t\tconst size = this.viewContainerModel.getSize(viewDescriptor.id);\n\n\t\t\t\tif (typeof size === 'number') {\n\t\t\t\t\tthis.resizePane(pane, size);\n\t\t\t\t} else {\n\t\t\t\t\tinitialSizes = initialSizes ? initialSizes : this.computeInitialSizes();\n\t\t\t\t\tthis.resizePane(pane, initialSizes.get(pane.id) || 200);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate computeInitialSizes(): Map<string, number> {\n\t\tconst sizes: Map<string, number> = new Map<string, number>();\n\t\tif (this.dimension) {\n\t\t\tconst totalWeight = this.viewContainerModel.visibleViewDescriptors.reduce((totalWeight, { weight }) => totalWeight + (weight || 20), 0);\n\t\t\tfor (const viewDescriptor of this.viewContainerModel.visibleViewDescriptors) {\n\t\t\t\tif (this.orientation === Orientation.VERTICAL) {\n\t\t\t\t\tsizes.set(viewDescriptor.id, this.dimension.height * (viewDescriptor.weight || 20) / totalWeight);\n\t\t\t\t} else {\n\t\t\t\t\tsizes.set(viewDescriptor.id, this.dimension.width * (viewDescriptor.weight || 20) / totalWeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn sizes;\n\t}\n\n\tprotected override saveState(): void {\n\t\tthis.panes.forEach((view) => view.saveState());\n\t\tthis.storageService.store(this.visibleViewsStorageId, this.length, StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t}\n\n\tprivate onContextMenu(event: StandardMouseEvent, viewPane: ViewPane): void {\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\n\t\tconst actions: IAction[] = viewPane.menuActions.getContextMenuActions();\n\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => event,\n\t\t\tgetActions: () => actions\n\t\t});\n\t}\n\n\topenView(id: string, focus?: boolean): IView | undefined {\n\t\tlet view = this.getView(id);\n\t\tif (!view) {\n\t\t\tthis.toggleViewVisibility(id);\n\t\t}\n\t\tview = this.getView(id);\n\t\tif (view) {\n\t\t\tview.setExpanded(true);\n\t\t\tif (focus) {\n\t\t\t\tview.focus();\n\t\t\t}\n\t\t}\n\t\treturn view;\n\t}\n\n\tprotected onDidAddViewDescriptors(added: IAddedViewDescriptorRef[]): ViewPane[] {\n\t\tconst panesToAdd: { pane: ViewPane; size: number; index: number; disposable: IDisposable }[] = [];\n\n\t\tfor (const { viewDescriptor, collapsed, index, size } of added) {\n\t\t\tconst pane = this.createView(viewDescriptor,\n\t\t\t\t{\n\t\t\t\t\tid: viewDescriptor.id,\n\t\t\t\t\ttitle: viewDescriptor.name.value,\n\t\t\t\t\tfromExtensionId: (viewDescriptor as Partial<ICustomViewDescriptor>).extensionId,\n\t\t\t\t\texpanded: !collapsed,\n\t\t\t\t\tsingleViewPaneContainerTitle: viewDescriptor.singleViewPaneContainerTitle,\n\t\t\t\t});\n\n\t\t\tpane.render();\n\t\t\tconst contextMenuDisposable = addDisposableListener(pane.draggableElement, 'contextmenu', e => {\n\t\t\t\te.stopPropagation();\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.onContextMenu(new StandardMouseEvent(getWindow(pane.draggableElement), e), pane);\n\t\t\t});\n\n\t\t\tconst collapseDisposable = Event.latch(Event.map(pane.onDidChange, () => !pane.isExpanded()))(collapsed => {\n\t\t\t\tthis.viewContainerModel.setCollapsed(viewDescriptor.id, collapsed);\n\t\t\t});\n\n\t\t\tpanesToAdd.push({ pane, size: size || pane.minimumSize, index, disposable: combinedDisposable(contextMenuDisposable, collapseDisposable) });\n\t\t}\n\n\t\tthis.addPanes(panesToAdd);\n\t\tthis.restoreViewSizes();\n\n\t\tconst panes: ViewPane[] = [];\n\t\tfor (const { pane } of panesToAdd) {\n\t\t\tpane.setVisible(this.isVisible());\n\t\t\tpanes.push(pane);\n\t\t}\n\t\treturn panes;\n\t}\n\n\tprivate onDidRemoveViewDescriptors(removed: IViewDescriptorRef[]): void {\n\t\tremoved = removed.sort((a, b) => b.index - a.index);\n\t\tconst panesToRemove: ViewPane[] = [];\n\t\tfor (const { index } of removed) {\n\t\t\tconst paneItem = this.paneItems[index];\n\t\t\tif (paneItem) {\n\t\t\t\tpanesToRemove.push(this.paneItems[index].pane);\n\t\t\t}\n\t\t}\n\n\t\tif (panesToRemove.length) {\n\t\t\tthis.removePanes(panesToRemove);\n\n\t\t\tfor (const pane of panesToRemove) {\n\t\t\t\tpane.setVisible(false);\n\t\t\t}\n\t\t}\n\t}\n\n\ttoggleViewVisibility(viewId: string): void {\n\t\t// Check if view is active\n\t\tif (this.viewContainerModel.activeViewDescriptors.some(viewDescriptor => viewDescriptor.id === viewId)) {\n\t\t\tconst visible = !this.viewContainerModel.isVisible(viewId);\n\t\t\tthis.viewContainerModel.setVisible(viewId, visible);\n\t\t}\n\t}\n\n\tprivate addPane(pane: ViewPane, size: number, disposable: IDisposable, index = this.paneItems.length - 1): void {\n\t\tconst onDidFocus = pane.onDidFocus(() => {\n\t\t\tthis._onDidFocusView.fire(pane);\n\t\t\tthis.lastFocusedPane = pane;\n\t\t});\n\t\tconst onDidBlur = pane.onDidBlur(() => this._onDidBlurView.fire(pane));\n\t\tconst onDidChangeTitleArea = pane.onDidChangeTitleArea(() => {\n\t\t\tif (this.isViewMergedWithContainer()) {\n\t\t\t\tthis.updateTitleArea();\n\t\t\t}\n\t\t});\n\n\t\tconst onDidChangeVisibility = pane.onDidChangeBodyVisibility(() => this._onDidChangeViewVisibility.fire(pane));\n\t\tconst onDidChange = pane.onDidChange(() => {\n\t\t\tif (pane === this.lastFocusedPane && !pane.isExpanded()) {\n\t\t\t\tthis.lastFocusedPane = undefined;\n\t\t\t}\n\t\t});\n\n\t\tconst isPanel = this.viewDescriptorService.getViewContainerLocation(this.viewContainer) === ViewContainerLocation.Panel;\n\t\tpane.style({\n\t\t\theaderForeground: asCssVariable(isPanel ? PANEL_SECTION_HEADER_FOREGROUND : SIDE_BAR_SECTION_HEADER_FOREGROUND),\n\t\t\theaderBackground: asCssVariable(isPanel ? PANEL_SECTION_HEADER_BACKGROUND : SIDE_BAR_SECTION_HEADER_BACKGROUND),\n\t\t\theaderBorder: asCssVariable(isPanel ? PANEL_SECTION_HEADER_BORDER : SIDE_BAR_SECTION_HEADER_BORDER),\n\t\t\tdropBackground: asCssVariable(isPanel ? PANEL_SECTION_DRAG_AND_DROP_BACKGROUND : SIDE_BAR_DRAG_AND_DROP_BACKGROUND),\n\t\t\tleftBorder: isPanel ? asCssVariable(PANEL_SECTION_BORDER) : undefined\n\t\t});\n\n\t\tconst store = new DisposableStore();\n\t\tstore.add(disposable);\n\t\tstore.add(combinedDisposable(pane, onDidFocus, onDidBlur, onDidChangeTitleArea, onDidChange, onDidChangeVisibility));\n\t\tconst paneItem: IViewPaneItem = { pane, disposable: store };\n\n\t\tthis.paneItems.splice(index, 0, paneItem);\n\t\tassertIsDefined(this.paneview).addPane(pane, size, index);\n\n\t\tlet overlay: ViewPaneDropOverlay | undefined;\n\n\t\tstore.add(CompositeDragAndDropObserver.INSTANCE.registerDraggable(pane.draggableElement, () => { return { type: 'view', id: pane.id }; }, {}));\n\n\t\tstore.add(CompositeDragAndDropObserver.INSTANCE.registerTarget(pane.dropTargetElement, {\n\t\t\tonDragEnter: (e) => {\n\t\t\t\tif (!overlay) {\n\t\t\t\t\tconst dropData = e.dragAndDropData.getData();\n\t\t\t\t\tif (dropData.type === 'view' && dropData.id !== pane.id) {\n\n\t\t\t\t\t\tconst oldViewContainer = this.viewDescriptorService.getViewContainerByViewId(dropData.id);\n\t\t\t\t\t\tconst viewDescriptor = this.viewDescriptorService.getViewDescriptorById(dropData.id);\n\n\t\t\t\t\t\tif (oldViewContainer !== this.viewContainer && (!viewDescriptor || !viewDescriptor.canMoveView || this.viewContainer.rejectAddedViews)) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\toverlay = new ViewPaneDropOverlay(pane.dropTargetElement, this.orientation ?? Orientation.VERTICAL, undefined, this.viewDescriptorService.getViewContainerLocation(this.viewContainer)!, this.themeService);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dropData.type === 'composite' && dropData.id !== this.viewContainer.id && !this.viewContainer.rejectAddedViews) {\n\t\t\t\t\t\tconst container = this.viewDescriptorService.getViewContainerById(dropData.id)!;\n\t\t\t\t\t\tconst viewsToMove = this.viewDescriptorService.getViewContainerModel(container).allViewDescriptors;\n\n\t\t\t\t\t\tif (!viewsToMove.some(v => !v.canMoveView) && viewsToMove.length > 0) {\n\t\t\t\t\t\t\toverlay = new ViewPaneDropOverlay(pane.dropTargetElement, this.orientation ?? Orientation.VERTICAL, undefined, this.viewDescriptorService.getViewContainerLocation(this.viewContainer)!, this.themeService);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tonDragOver: (e) => {\n\t\t\t\ttoggleDropEffect(e.eventData.dataTransfer, 'move', overlay !== undefined);\n\t\t\t},\n\t\t\tonDragLeave: (e) => {\n\t\t\t\toverlay?.dispose();\n\t\t\t\toverlay = undefined;\n\t\t\t},\n\t\t\tonDrop: (e) => {\n\t\t\t\tif (overlay) {\n\t\t\t\t\tconst dropData = e.dragAndDropData.getData();\n\t\t\t\t\tconst viewsToMove: IViewDescriptor[] = [];\n\t\t\t\t\tlet anchorView: IViewDescriptor | undefined;\n\n\t\t\t\t\tif (dropData.type === 'composite' && dropData.id !== this.viewContainer.id && !this.viewContainer.rejectAddedViews) {\n\t\t\t\t\t\tconst container = this.viewDescriptorService.getViewContainerById(dropData.id)!;\n\t\t\t\t\t\tconst allViews = this.viewDescriptorService.getViewContainerModel(container).allViewDescriptors;\n\n\t\t\t\t\t\tif (allViews.length > 0 && !allViews.some(v => !v.canMoveView)) {\n\t\t\t\t\t\t\tviewsToMove.push(...allViews);\n\t\t\t\t\t\t\tanchorView = allViews[0];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (dropData.type === 'view') {\n\t\t\t\t\t\tconst oldViewContainer = this.viewDescriptorService.getViewContainerByViewId(dropData.id);\n\t\t\t\t\t\tconst viewDescriptor = this.viewDescriptorService.getViewDescriptorById(dropData.id);\n\t\t\t\t\t\tif (oldViewContainer !== this.viewContainer && viewDescriptor && viewDescriptor.canMoveView && !this.viewContainer.rejectAddedViews) {\n\t\t\t\t\t\t\tviewsToMove.push(viewDescriptor);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (viewDescriptor) {\n\t\t\t\t\t\t\tanchorView = viewDescriptor;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (viewsToMove) {\n\t\t\t\t\t\tthis.viewDescriptorService.moveViewsToContainer(viewsToMove, this.viewContainer, undefined, 'dnd');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (anchorView) {\n\t\t\t\t\t\tif (overlay.currentDropOperation === DropDirection.DOWN ||\n\t\t\t\t\t\t\toverlay.currentDropOperation === DropDirection.RIGHT) {\n\n\t\t\t\t\t\t\tconst fromIndex = this.panes.findIndex(p => p.id === anchorView!.id);\n\t\t\t\t\t\t\tlet toIndex = this.panes.findIndex(p => p.id === pane.id);\n\n\t\t\t\t\t\t\tif (fromIndex >= 0 && toIndex >= 0) {\n\t\t\t\t\t\t\t\tif (fromIndex > toIndex) {\n\t\t\t\t\t\t\t\t\ttoIndex++;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (toIndex < this.panes.length && toIndex !== fromIndex) {\n\t\t\t\t\t\t\t\t\tthis.movePane(this.panes[fromIndex], this.panes[toIndex]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (overlay.currentDropOperation === DropDirection.UP ||\n\t\t\t\t\t\t\toverlay.currentDropOperation === DropDirection.LEFT) {\n\t\t\t\t\t\t\tconst fromIndex = this.panes.findIndex(p => p.id === anchorView!.id);\n\t\t\t\t\t\t\tlet toIndex = this.panes.findIndex(p => p.id === pane.id);\n\n\t\t\t\t\t\t\tif (fromIndex >= 0 && toIndex >= 0) {\n\t\t\t\t\t\t\t\tif (fromIndex < toIndex) {\n\t\t\t\t\t\t\t\t\ttoIndex--;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (toIndex >= 0 && toIndex !== fromIndex) {\n\t\t\t\t\t\t\t\t\tthis.movePane(this.panes[fromIndex], this.panes[toIndex]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (viewsToMove.length > 1) {\n\t\t\t\t\t\t\tviewsToMove.slice(1).forEach(view => {\n\t\t\t\t\t\t\t\tlet toIndex = this.panes.findIndex(p => p.id === anchorView!.id);\n\t\t\t\t\t\t\t\tconst fromIndex = this.panes.findIndex(p => p.id === view.id);\n\t\t\t\t\t\t\t\tif (fromIndex >= 0 && toIndex >= 0) {\n\t\t\t\t\t\t\t\t\tif (fromIndex > toIndex) {\n\t\t\t\t\t\t\t\t\t\ttoIndex++;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (toIndex < this.panes.length && toIndex !== fromIndex) {\n\t\t\t\t\t\t\t\t\t\tthis.movePane(this.panes[fromIndex], this.panes[toIndex]);\n\t\t\t\t\t\t\t\t\t\tanchorView = view;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\toverlay?.dispose();\n\t\t\t\toverlay = undefined;\n\t\t\t}\n\t\t}));\n\t}\n\n\tremovePanes(panes: ViewPane[]): void {\n\t\tconst wasMerged = this.isViewMergedWithContainer();\n\n\t\tpanes.forEach(pane => this.removePane(pane));\n\n\t\tthis.updateViewHeaders();\n\t\tif (wasMerged !== this.isViewMergedWithContainer()) {\n\t\t\tthis.updateTitleArea();\n\t\t}\n\n\t\tthis._onDidRemoveViews.fire(panes);\n\t}\n\n\tprivate removePane(pane: ViewPane): void {\n\t\tconst index = this.paneItems.findIndex(i => i.pane === pane);\n\n\t\tif (index === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.lastFocusedPane === pane) {\n\t\t\tthis.lastFocusedPane = undefined;\n\t\t}\n\n\t\tassertIsDefined(this.paneview).removePane(pane);\n\t\tconst [paneItem] = this.paneItems.splice(index, 1);\n\t\tpaneItem.disposable.dispose();\n\n\t}\n\n\tmovePane(from: ViewPane, to: ViewPane): void {\n\t\tconst fromIndex = this.paneItems.findIndex(item => item.pane === from);\n\t\tconst toIndex = this.paneItems.findIndex(item => item.pane === to);\n\n\t\tconst fromViewDescriptor = this.viewContainerModel.visibleViewDescriptors[fromIndex];\n\t\tconst toViewDescriptor = this.viewContainerModel.visibleViewDescriptors[toIndex];\n\n\t\tif (fromIndex < 0 || fromIndex >= this.paneItems.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (toIndex < 0 || toIndex >= this.paneItems.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst [paneItem] = this.paneItems.splice(fromIndex, 1);\n\t\tthis.paneItems.splice(toIndex, 0, paneItem);\n\n\t\tassertIsDefined(this.paneview).movePane(from, to);\n\n\t\tthis.viewContainerModel.move(fromViewDescriptor.id, toViewDescriptor.id);\n\n\t\tthis.updateTitleArea();\n\t}\n\n\tresizePane(pane: ViewPane, size: number): void {\n\t\tassertIsDefined(this.paneview).resizePane(pane, size);\n\t}\n\n\tgetPaneSize(pane: ViewPane): number {\n\t\treturn assertIsDefined(this.paneview).getPaneSize(pane);\n\t}\n\n\tprivate updateViewHeaders(): void {\n\t\tif (this.isViewMergedWithContainer()) {\n\t\t\tif (this.paneItems[0].pane.isExpanded()) {\n\t\t\t\tthis.lastMergedCollapsedPane = undefined;\n\t\t\t} else {\n\t\t\t\tthis.lastMergedCollapsedPane = this.paneItems[0].pane;\n\t\t\t\tthis.paneItems[0].pane.setExpanded(true);\n\t\t\t}\n\t\t\tthis.paneItems[0].pane.headerVisible = false;\n\t\t\tthis.paneItems[0].pane.collapsible = true;\n\t\t} else {\n\t\t\tif (this.paneItems.length === 1) {\n\t\t\t\tthis.paneItems[0].pane.headerVisible = true;\n\t\t\t\tif (this.paneItems[0].pane === this.lastMergedCollapsedPane) {\n\t\t\t\t\tthis.paneItems[0].pane.setExpanded(false);\n\t\t\t\t}\n\t\t\t\tthis.paneItems[0].pane.collapsible = false;\n\t\t\t} else {\n\t\t\t\tthis.paneItems.forEach(i => {\n\t\t\t\t\ti.pane.headerVisible = true;\n\t\t\t\t\ti.pane.collapsible = true;\n\t\t\t\t\tif (i.pane === this.lastMergedCollapsedPane) {\n\t\t\t\t\t\ti.pane.setExpanded(false);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.lastMergedCollapsedPane = undefined;\n\t\t}\n\t}\n\n\tisViewMergedWithContainer(): boolean {\n\t\tif (!(this.options.mergeViewWithContainerWhenSingleView && this.paneItems.length === 1)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!this.areExtensionsReady) {\n\t\t\tif (this.visibleViewsCountFromCache === undefined) {\n\t\t\t\treturn this.paneItems[0].pane.isExpanded();\n\t\t\t}\n\t\t\t// Check in cache so that view do not jump. See #29609\n\t\t\treturn this.visibleViewsCountFromCache === 1;\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate onDidScrollPane() {\n\t\tfor (const pane of this.panes) {\n\t\t\tpane.onDidScrollRoot();\n\t\t}\n\t}\n\n\tprivate onDidSashReset(index: number) {\n\t\tlet firstPane = undefined;\n\t\tlet secondPane = undefined;\n\n\t\t// Deal with collapsed views: to be clever, we split the space taken by the nearest uncollapsed views\n\t\tfor (let i = index; i >= 0; i--) {\n\t\t\tif (this.paneItems[i].pane?.isVisible() && this.paneItems[i]?.pane.isExpanded()) {\n\t\t\t\tfirstPane = this.paneItems[i].pane;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = index + 1; i < this.paneItems.length; i++) {\n\t\t\tif (this.paneItems[i].pane?.isVisible() && this.paneItems[i]?.pane.isExpanded()) {\n\t\t\t\tsecondPane = this.paneItems[i].pane;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (firstPane && secondPane) {\n\t\t\tconst firstPaneSize = this.getPaneSize(firstPane);\n\t\t\tconst secondPaneSize = this.getPaneSize(secondPane);\n\n\t\t\t// Avoid rounding errors and be consistent when resizing\n\t\t\t// The first pane always get half rounded up and the second is half rounded down\n\t\t\tconst newFirstPaneSize = Math.ceil((firstPaneSize + secondPaneSize) / 2);\n\t\t\tconst newSecondPaneSize = Math.floor((firstPaneSize + secondPaneSize) / 2);\n\n\t\t\t// Shrink the larger pane first, then grow the smaller pane\n\t\t\t// This prevents interfering with other view sizes\n\t\t\tif (firstPaneSize > secondPaneSize) {\n\t\t\t\tthis.resizePane(firstPane, newFirstPaneSize);\n\t\t\t\tthis.resizePane(secondPane, newSecondPaneSize);\n\t\t\t} else {\n\t\t\t\tthis.resizePane(secondPane, newSecondPaneSize);\n\t\t\t\tthis.resizePane(firstPane, newFirstPaneSize);\n\t\t\t}\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tthis.paneItems.forEach(i => i.disposable.dispose());\n\t\tif (this.paneview) {\n\t\t\tthis.paneview.dispose();\n\t\t}\n\t}\n}\n\nexport abstract class ViewPaneContainerAction<T extends IViewPaneContainer> extends Action2 {\n\toverride readonly desc: Readonly<IAction2Options> & { viewPaneContainerId: string };\n\tconstructor(desc: Readonly<IAction2Options> & { viewPaneContainerId: string }) {\n\t\tsuper(desc);\n\t\tthis.desc = desc;\n\t}\n\n\trun(accessor: ServicesAccessor, ...args: any[]) {\n\t\tconst viewPaneContainer = accessor.get(IViewsService).getActiveViewPaneContainerWithId(this.desc.viewPaneContainerId);\n\t\tif (viewPaneContainer) {\n\t\t\treturn this.runInViewPaneContainer(accessor, <T>viewPaneContainer, ...args);\n\t\t}\n\t}\n\n\tabstract runInViewPaneContainer(accessor: ServicesAccessor, viewPaneContainer: T, ...args: any[]): any;\n}\n\nclass MoveViewPosition extends Action2 {\n\tconstructor(desc: Readonly<IAction2Options>, private readonly offset: number) {\n\t\tsuper(desc);\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst viewDescriptorService = accessor.get(IViewDescriptorService);\n\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\n\t\tconst viewId = FocusedViewContext.getValue(contextKeyService);\n\t\tif (viewId === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewContainer = viewDescriptorService.getViewContainerByViewId(viewId)!;\n\t\tconst model = viewDescriptorService.getViewContainerModel(viewContainer);\n\n\t\tconst viewDescriptor = model.visibleViewDescriptors.find(vd => vd.id === viewId)!;\n\t\tconst currentIndex = model.visibleViewDescriptors.indexOf(viewDescriptor);\n\t\tif (currentIndex + this.offset < 0 || currentIndex + this.offset >= model.visibleViewDescriptors.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst newPosition = model.visibleViewDescriptors[currentIndex + this.offset];\n\n\t\tmodel.move(viewDescriptor.id, newPosition.id);\n\t}\n}\n\nregisterAction2(\n\tclass MoveViewUp extends MoveViewPosition {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: 'views.moveViewUp',\n\t\t\t\ttitle: nls.localize('viewMoveUp', \"Move View Up\"),\n\t\t\t\tkeybinding: {\n\t\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd + KeyCode.KeyK, KeyCode.UpArrow),\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib + 1,\n\t\t\t\t\twhen: FocusedViewContext.notEqualsTo('')\n\t\t\t\t}\n\t\t\t}, -1);\n\t\t}\n\t}\n);\n\nregisterAction2(\n\tclass MoveViewLeft extends MoveViewPosition {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: 'views.moveViewLeft',\n\t\t\t\ttitle: nls.localize('viewMoveLeft', \"Move View Left\"),\n\t\t\t\tkeybinding: {\n\t\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd + KeyCode.KeyK, KeyCode.LeftArrow),\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib + 1,\n\t\t\t\t\twhen: FocusedViewContext.notEqualsTo('')\n\t\t\t\t}\n\t\t\t}, -1);\n\t\t}\n\t}\n);\n\nregisterAction2(\n\tclass MoveViewDown extends MoveViewPosition {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: 'views.moveViewDown',\n\t\t\t\ttitle: nls.localize('viewMoveDown', \"Move View Down\"),\n\t\t\t\tkeybinding: {\n\t\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd + KeyCode.KeyK, KeyCode.DownArrow),\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib + 1,\n\t\t\t\t\twhen: FocusedViewContext.notEqualsTo('')\n\t\t\t\t}\n\t\t\t}, 1);\n\t\t}\n\t}\n);\n\nregisterAction2(\n\tclass MoveViewRight extends MoveViewPosition {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: 'views.moveViewRight',\n\t\t\t\ttitle: nls.localize('viewMoveRight', \"Move View Right\"),\n\t\t\t\tkeybinding: {\n\t\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd + KeyCode.KeyK, KeyCode.RightArrow),\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib + 1,\n\t\t\t\t\twhen: FocusedViewContext.notEqualsTo('')\n\t\t\t\t}\n\t\t\t}, 1);\n\t\t}\n\t}\n);\n\n\nregisterAction2(class MoveViews extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'vscode.moveViews',\n\t\t\ttitle: nls.localize('viewsMove', \"Move Views\"),\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, options: { viewIds: string[]; destinationId: string }): Promise<void> {\n\t\tif (!Array.isArray(options?.viewIds) || typeof options?.destinationId !== 'string') {\n\t\t\treturn Promise.reject('Invalid arguments');\n\t\t}\n\n\t\tconst viewDescriptorService = accessor.get(IViewDescriptorService);\n\n\t\tconst destination = viewDescriptorService.getViewContainerById(options.destinationId);\n\t\tif (!destination) {\n\t\t\treturn;\n\t\t}\n\n\t\t// FYI, don't use `moveViewsToContainer` in 1 shot, because it expects all views to have the same current location\n\t\tfor (const viewId of options.viewIds) {\n\t\t\tconst viewDescriptor = viewDescriptorService.getViewDescriptorById(viewId);\n\t\t\tif (viewDescriptor?.canMoveView) {\n\t\t\t\tviewDescriptorService.moveViewsToContainer([viewDescriptor], destination, ViewVisibilityState.Default, this.desc.id);\n\t\t\t}\n\t\t}\n\n\t\tawait accessor.get(IViewsService).openViewContainer(destination.id, true);\n\t}\n});\n"],
  "mappings": "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",
  "names": ["DropDirection", "bounds", "totalWeight", "collapsed"]
}
