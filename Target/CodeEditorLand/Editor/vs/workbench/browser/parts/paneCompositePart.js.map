{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/paneCompositePart.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './media/paneCompositePart.css';\nimport { Event } from '../../../base/common/event.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { IProgressIndicator } from '../../../platform/progress/common/progress.js';\nimport { Extensions, PaneComposite, PaneCompositeDescriptor, PaneCompositeRegistry } from '../panecomposite.js';\nimport { IPaneComposite } from '../../common/panecomposite.js';\nimport { IViewDescriptorService, ViewContainerLocation } from '../../common/views.js';\nimport { DisposableStore, MutableDisposable } from '../../../base/common/lifecycle.js';\nimport { IView } from '../../../base/browser/ui/grid/grid.js';\nimport { IWorkbenchLayoutService, Parts } from '../../services/layout/browser/layoutService.js';\nimport { CompositePart, ICompositeTitleLabel } from './compositePart.js';\nimport { IPaneCompositeBarOptions, PaneCompositeBar } from './paneCompositeBar.js';\nimport { Dimension, EventHelper, trackFocus, $, addDisposableListener, EventType, prepend, getWindow } from '../../../base/browser/dom.js';\nimport { Registry } from '../../../platform/registry/common/platform.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nimport { IStorageService } from '../../../platform/storage/common/storage.js';\nimport { IContextMenuService } from '../../../platform/contextview/browser/contextView.js';\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { IContextKey, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IExtensionService } from '../../services/extensions/common/extensions.js';\nimport { IComposite } from '../../common/composite.js';\nimport { localize } from '../../../nls.js';\nimport { CompositeDragAndDropObserver, toggleDropEffect } from '../dnd.js';\nimport { EDITOR_DRAG_AND_DROP_BACKGROUND } from '../../common/theme.js';\nimport { IPartOptions } from '../part.js';\nimport { CompositeMenuActions } from '../actions.js';\nimport { IMenuService, MenuId } from '../../../platform/actions/common/actions.js';\nimport { ActionsOrientation, prepareActions } from '../../../base/browser/ui/actionbar/actionbar.js';\nimport { Gesture, EventType as GestureEventType } from '../../../base/browser/touch.js';\nimport { StandardMouseEvent } from '../../../base/browser/mouseEvent.js';\nimport { IAction, SubmenuAction } from '../../../base/common/actions.js';\nimport { Composite } from '../composite.js';\nimport { ViewsSubMenu } from './views/viewPaneContainer.js';\nimport { createAndFillInActionBarActions } from '../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { IHoverService } from '../../../platform/hover/browser/hover.js';\nimport { HiddenItemStrategy, WorkbenchToolBar } from '../../../platform/actions/browser/toolbar.js';\n\nexport enum CompositeBarPosition {\n\tTOP,\n\tTITLE,\n\tBOTTOM\n}\n\nexport interface IPaneCompositePart extends IView {\n\n\treadonly partId: Parts.PANEL_PART | Parts.AUXILIARYBAR_PART | Parts.SIDEBAR_PART;\n\n\treadonly onDidPaneCompositeOpen: Event<IPaneComposite>;\n\treadonly onDidPaneCompositeClose: Event<IPaneComposite>;\n\n\t/**\n\t * Opens a viewlet with the given identifier and pass keyboard focus to it if specified.\n\t */\n\topenPaneComposite(id: string | undefined, focus?: boolean): Promise<IPaneComposite | undefined>;\n\n\t/**\n\t * Returns the current active viewlet if any.\n\t */\n\tgetActivePaneComposite(): IPaneComposite | undefined;\n\n\t/**\n\t * Returns the viewlet by id.\n\t */\n\tgetPaneComposite(id: string): PaneCompositeDescriptor | undefined;\n\n\t/**\n\t * Returns all enabled viewlets\n\t */\n\tgetPaneComposites(): PaneCompositeDescriptor[];\n\n\t/**\n\t * Returns the progress indicator for the side bar.\n\t */\n\tgetProgressIndicator(id: string): IProgressIndicator | undefined;\n\n\t/**\n\t * Hide the active viewlet.\n\t */\n\thideActivePaneComposite(): void;\n\n\t/**\n\t * Return the last active viewlet id.\n\t */\n\tgetLastActivePaneCompositeId(): string;\n\n\t/**\n\t * Returns id of pinned view containers following the visual order.\n\t */\n\tgetPinnedPaneCompositeIds(): string[];\n\n\t/**\n\t * Returns id of visible view containers following the visual order.\n\t */\n\tgetVisiblePaneCompositeIds(): string[];\n}\n\nexport abstract class AbstractPaneCompositePart extends CompositePart<PaneComposite> implements IPaneCompositePart {\n\n\tprivate static readonly MIN_COMPOSITE_BAR_WIDTH = 50;\n\n\tget snap(): boolean {\n\t\t// Always allow snapping closed\n\t\t// Only allow dragging open if the panel contains view containers\n\t\treturn this.layoutService.isVisible(this.partId) || !!this.paneCompositeBar.value?.getVisiblePaneCompositeIds().length;\n\t}\n\n\tget onDidPaneCompositeOpen(): Event<IPaneComposite> { return Event.map(this.onDidCompositeOpen.event, compositeEvent => <IPaneComposite>compositeEvent.composite); }\n\treadonly onDidPaneCompositeClose = this.onDidCompositeClose.event as Event<IPaneComposite>;\n\n\tprivate readonly location: ViewContainerLocation;\n\tprivate titleContainer: HTMLElement | undefined;\n\tprivate headerFooterCompositeBarContainer: HTMLElement | undefined;\n\tprotected readonly headerFooterCompositeBarDispoables = this._register(new DisposableStore());\n\tprivate paneCompositeBarContainer: HTMLElement | undefined;\n\tprivate readonly paneCompositeBar = this._register(new MutableDisposable<PaneCompositeBar>());\n\tprivate compositeBarPosition: CompositeBarPosition | undefined = undefined;\n\tprivate emptyPaneMessageElement: HTMLElement | undefined;\n\n\tprivate globalToolBar: WorkbenchToolBar | undefined;\n\tprivate readonly globalActions: CompositeMenuActions;\n\n\tprivate blockOpening = false;\n\tprotected contentDimension: Dimension | undefined;\n\n\tconstructor(\n\t\treadonly partId: Parts.PANEL_PART | Parts.AUXILIARYBAR_PART | Parts.SIDEBAR_PART,\n\t\tpartOptions: IPartOptions,\n\t\tactivePaneCompositeSettingsKey: string,\n\t\tprivate readonly activePaneContextKey: IContextKey<string>,\n\t\tprivate paneFocusContextKey: IContextKey<boolean>,\n\t\tnameForTelemetry: string,\n\t\tcompositeCSSClass: string,\n\t\ttitleForegroundColor: string | undefined,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IWorkbenchLayoutService layoutService: IWorkbenchLayoutService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IHoverService hoverService: IHoverService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IViewDescriptorService private readonly viewDescriptorService: IViewDescriptorService,\n\t\t@IContextKeyService protected readonly contextKeyService: IContextKeyService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@IMenuService protected readonly menuService: IMenuService,\n\t) {\n\t\tlet location = ViewContainerLocation.Sidebar;\n\t\tlet registryId = Extensions.Viewlets;\n\t\tlet globalActionsMenuId = MenuId.SidebarTitle;\n\t\tif (partId === Parts.PANEL_PART) {\n\t\t\tlocation = ViewContainerLocation.Panel;\n\t\t\tregistryId = Extensions.Panels;\n\t\t\tglobalActionsMenuId = MenuId.PanelTitle;\n\t\t} else if (partId === Parts.AUXILIARYBAR_PART) {\n\t\t\tlocation = ViewContainerLocation.AuxiliaryBar;\n\t\t\tregistryId = Extensions.Auxiliary;\n\t\t\tglobalActionsMenuId = MenuId.AuxiliaryBarTitle;\n\t\t}\n\t\tsuper(\n\t\t\tnotificationService,\n\t\t\tstorageService,\n\t\t\tcontextMenuService,\n\t\t\tlayoutService,\n\t\t\tkeybindingService,\n\t\t\thoverService,\n\t\t\tinstantiationService,\n\t\t\tthemeService,\n\t\t\tRegistry.as<PaneCompositeRegistry>(registryId),\n\t\t\tactivePaneCompositeSettingsKey,\n\t\t\tviewDescriptorService.getDefaultViewContainer(location)?.id || '',\n\t\t\tnameForTelemetry,\n\t\t\tcompositeCSSClass,\n\t\t\ttitleForegroundColor,\n\t\t\tpartId,\n\t\t\tpartOptions\n\t\t);\n\n\t\tthis.location = location;\n\t\tthis.globalActions = this._register(this.instantiationService.createInstance(CompositeMenuActions, globalActionsMenuId, undefined, undefined));\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.onDidPaneCompositeOpen(composite => this.onDidOpen(composite)));\n\t\tthis._register(this.onDidPaneCompositeClose(this.onDidClose, this));\n\t\tthis._register(this.globalActions.onDidChange(() => this.updateGlobalToolbarActions()));\n\n\t\tthis._register(this.registry.onDidDeregister((viewletDescriptor: PaneCompositeDescriptor) => {\n\n\t\t\tconst activeContainers = this.viewDescriptorService.getViewContainersByLocation(this.location)\n\t\t\t\t.filter(container => this.viewDescriptorService.getViewContainerModel(container).activeViewDescriptors.length > 0);\n\n\t\t\tif (activeContainers.length) {\n\t\t\t\tif (this.getActiveComposite()?.getId() === viewletDescriptor.id) {\n\t\t\t\t\tconst defaultViewletId = this.viewDescriptorService.getDefaultViewContainer(this.location)?.id;\n\t\t\t\t\tconst containerToOpen = activeContainers.filter(c => c.id === defaultViewletId)[0] || activeContainers[0];\n\t\t\t\t\tthis.doOpenPaneComposite(containerToOpen.id);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.layoutService.setPartHidden(true, this.partId);\n\t\t\t}\n\n\t\t\tthis.removeComposite(viewletDescriptor.id);\n\t\t}));\n\n\t\tthis._register(this.extensionService.onDidRegisterExtensions(() => {\n\t\t\tthis.layoutCompositeBar();\n\t\t}));\n\t}\n\n\tprivate onDidOpen(composite: IComposite): void {\n\t\tthis.activePaneContextKey.set(composite.getId());\n\t}\n\n\tprivate onDidClose(composite: IComposite): void {\n\t\tconst id = composite.getId();\n\t\tif (this.activePaneContextKey.get() === id) {\n\t\t\tthis.activePaneContextKey.reset();\n\t\t}\n\t}\n\n\tprotected override showComposite(composite: Composite): void {\n\t\tsuper.showComposite(composite);\n\t\tthis.layoutCompositeBar();\n\t\tthis.layoutEmptyMessage();\n\t}\n\n\tprotected override hideActiveComposite(): Composite | undefined {\n\t\tconst composite = super.hideActiveComposite();\n\t\tthis.layoutCompositeBar();\n\t\tthis.layoutEmptyMessage();\n\t\treturn composite;\n\t}\n\n\toverride create(parent: HTMLElement): void {\n\t\tthis.element = parent;\n\t\tthis.element.classList.add('pane-composite-part');\n\n\t\tsuper.create(parent);\n\n\t\tconst contentArea = this.getContentArea();\n\t\tif (contentArea) {\n\t\t\tthis.createEmptyPaneMessage(contentArea);\n\t\t}\n\n\t\tthis.updateCompositeBar();\n\n\t\tconst focusTracker = this._register(trackFocus(parent));\n\t\tthis._register(focusTracker.onDidFocus(() => this.paneFocusContextKey.set(true)));\n\t\tthis._register(focusTracker.onDidBlur(() => this.paneFocusContextKey.set(false)));\n\t}\n\n\tprivate createEmptyPaneMessage(parent: HTMLElement): void {\n\t\tthis.emptyPaneMessageElement = document.createElement('div');\n\t\tthis.emptyPaneMessageElement.classList.add('empty-pane-message-area');\n\n\t\tconst messageElement = document.createElement('div');\n\t\tmessageElement.classList.add('empty-pane-message');\n\t\tmessageElement.innerText = localize('pane.emptyMessage', \"Drag a view here to display.\");\n\n\t\tthis.emptyPaneMessageElement.appendChild(messageElement);\n\t\tparent.appendChild(this.emptyPaneMessageElement);\n\n\t\tthis._register(CompositeDragAndDropObserver.INSTANCE.registerTarget(this.element, {\n\t\t\tonDragOver: (e) => {\n\t\t\t\tEventHelper.stop(e.eventData, true);\n\t\t\t\tif (this.paneCompositeBar.value) {\n\t\t\t\t\tconst validDropTarget = this.paneCompositeBar.value.dndHandler.onDragEnter(e.dragAndDropData, undefined, e.eventData);\n\t\t\t\t\ttoggleDropEffect(e.eventData.dataTransfer, 'move', validDropTarget);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonDragEnter: (e) => {\n\t\t\t\tEventHelper.stop(e.eventData, true);\n\t\t\t\tif (this.paneCompositeBar.value) {\n\t\t\t\t\tconst validDropTarget = this.paneCompositeBar.value.dndHandler.onDragEnter(e.dragAndDropData, undefined, e.eventData);\n\t\t\t\t\tthis.emptyPaneMessageElement!.style.backgroundColor = validDropTarget ? this.theme.getColor(EDITOR_DRAG_AND_DROP_BACKGROUND)?.toString() || '' : '';\n\t\t\t\t}\n\t\t\t},\n\t\t\tonDragLeave: (e) => {\n\t\t\t\tEventHelper.stop(e.eventData, true);\n\t\t\t\tthis.emptyPaneMessageElement!.style.backgroundColor = '';\n\t\t\t},\n\t\t\tonDragEnd: (e) => {\n\t\t\t\tEventHelper.stop(e.eventData, true);\n\t\t\t\tthis.emptyPaneMessageElement!.style.backgroundColor = '';\n\t\t\t},\n\t\t\tonDrop: (e) => {\n\t\t\t\tEventHelper.stop(e.eventData, true);\n\t\t\t\tthis.emptyPaneMessageElement!.style.backgroundColor = '';\n\t\t\t\tif (this.paneCompositeBar.value) {\n\t\t\t\t\tthis.paneCompositeBar.value.dndHandler.drop(e.dragAndDropData, undefined, e.eventData);\n\t\t\t\t} else {\n\t\t\t\t\t// Allow opening views/composites if the composite bar is hidden\n\t\t\t\t\tconst dragData = e.dragAndDropData.getData();\n\n\t\t\t\t\tif (dragData.type === 'composite') {\n\t\t\t\t\t\tconst currentContainer = this.viewDescriptorService.getViewContainerById(dragData.id)!;\n\t\t\t\t\t\tthis.viewDescriptorService.moveViewContainerToLocation(currentContainer, this.location, undefined, 'dnd');\n\t\t\t\t\t\tthis.openPaneComposite(currentContainer.id, true);\n\t\t\t\t\t}\n\n\t\t\t\t\telse if (dragData.type === 'view') {\n\t\t\t\t\t\tconst viewToMove = this.viewDescriptorService.getViewDescriptorById(dragData.id)!;\n\t\t\t\t\t\tif (viewToMove && viewToMove.canMoveView) {\n\t\t\t\t\t\t\tthis.viewDescriptorService.moveViewToLocation(viewToMove, this.location, 'dnd');\n\n\t\t\t\t\t\t\tconst newContainer = this.viewDescriptorService.getViewContainerByViewId(viewToMove.id)!;\n\n\t\t\t\t\t\t\tthis.openPaneComposite(newContainer.id, true).then(composite => {\n\t\t\t\t\t\t\t\tcomposite?.openView(viewToMove.id, true);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t}));\n\t}\n\n\tprotected override createTitleArea(parent: HTMLElement): HTMLElement {\n\t\tconst titleArea = super.createTitleArea(parent);\n\n\t\tthis._register(addDisposableListener(titleArea, EventType.CONTEXT_MENU, e => {\n\t\t\tthis.onTitleAreaContextMenu(new StandardMouseEvent(getWindow(titleArea), e));\n\t\t}));\n\t\tthis._register(Gesture.addTarget(titleArea));\n\t\tthis._register(addDisposableListener(titleArea, GestureEventType.Contextmenu, e => {\n\t\t\tthis.onTitleAreaContextMenu(new StandardMouseEvent(getWindow(titleArea), e));\n\t\t}));\n\n\t\tconst globalTitleActionsContainer = titleArea.appendChild($('.global-actions'));\n\n\t\t// Global Actions Toolbar\n\t\tthis.globalToolBar = this._register(this.instantiationService.createInstance(WorkbenchToolBar, globalTitleActionsContainer, {\n\t\t\tactionViewItemProvider: (action, options) => this.actionViewItemProvider(action, options),\n\t\t\torientation: ActionsOrientation.HORIZONTAL,\n\t\t\tgetKeyBinding: action => this.keybindingService.lookupKeybinding(action.id),\n\t\t\tanchorAlignmentProvider: () => this.getTitleAreaDropDownAnchorAlignment(),\n\t\t\ttoggleMenuTitle: localize('moreActions', \"More Actions...\"),\n\t\t\thoverDelegate: this.toolbarHoverDelegate,\n\t\t\thiddenItemStrategy: HiddenItemStrategy.NoHide\n\t\t}));\n\n\t\tthis.updateGlobalToolbarActions();\n\n\t\treturn titleArea;\n\t}\n\n\tprotected override createTitleLabel(parent: HTMLElement): ICompositeTitleLabel {\n\t\tthis.titleContainer = parent;\n\n\t\tconst titleLabel = super.createTitleLabel(parent);\n\t\tthis.titleLabelElement!.draggable = true;\n\t\tconst draggedItemProvider = (): { type: 'view' | 'composite'; id: string } => {\n\t\t\tconst activeViewlet = this.getActivePaneComposite()!;\n\t\t\treturn { type: 'composite', id: activeViewlet.getId() };\n\t\t};\n\t\tthis._register(CompositeDragAndDropObserver.INSTANCE.registerDraggable(this.titleLabelElement!, draggedItemProvider, {}));\n\n\t\treturn titleLabel;\n\t}\n\n\tprotected updateCompositeBar(updateCompositeBarOption: boolean = false): void {\n\t\tconst wasCompositeBarVisible = this.compositeBarPosition !== undefined;\n\t\tconst isCompositeBarVisible = this.shouldShowCompositeBar();\n\t\tconst previousPosition = this.compositeBarPosition;\n\t\tconst newPosition = isCompositeBarVisible ? this.getCompositeBarPosition() : undefined;\n\n\t\t// Only update if the visibility or position has changed or if the composite bar options should be updated\n\t\tif (!updateCompositeBarOption && previousPosition === newPosition) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remove old composite bar\n\t\tif (wasCompositeBarVisible) {\n\t\t\tconst previousCompositeBarContainer = previousPosition === CompositeBarPosition.TITLE ? this.titleContainer : this.headerFooterCompositeBarContainer;\n\t\t\tif (!this.paneCompositeBarContainer || !this.paneCompositeBar.value || !previousCompositeBarContainer) {\n\t\t\t\tthrow new Error('Composite bar containers should exist when removing the previous composite bar');\n\t\t\t}\n\n\t\t\tthis.paneCompositeBarContainer.remove();\n\t\t\tthis.paneCompositeBarContainer = undefined;\n\t\t\tthis.paneCompositeBar.value = undefined;\n\n\t\t\tpreviousCompositeBarContainer.classList.remove('has-composite-bar');\n\n\t\t\tif (previousPosition === CompositeBarPosition.TOP) {\n\t\t\t\tthis.removeFooterHeaderArea(true);\n\t\t\t} else if (previousPosition === CompositeBarPosition.BOTTOM) {\n\t\t\t\tthis.removeFooterHeaderArea(false);\n\t\t\t}\n\t\t}\n\n\t\t// Create new composite bar\n\t\tlet newCompositeBarContainer;\n\t\tswitch (newPosition) {\n\t\t\tcase CompositeBarPosition.TOP: newCompositeBarContainer = this.createHeaderArea(); break;\n\t\t\tcase CompositeBarPosition.TITLE: newCompositeBarContainer = this.titleContainer; break;\n\t\t\tcase CompositeBarPosition.BOTTOM: newCompositeBarContainer = this.createFooterArea(); break;\n\t\t}\n\t\tif (isCompositeBarVisible) {\n\n\t\t\tif (this.paneCompositeBarContainer || this.paneCompositeBar.value || !newCompositeBarContainer) {\n\t\t\t\tthrow new Error('Invalid composite bar state when creating the new composite bar');\n\t\t\t}\n\n\t\t\tnewCompositeBarContainer.classList.add('has-composite-bar');\n\t\t\tthis.paneCompositeBarContainer = prepend(newCompositeBarContainer, $('.composite-bar-container'));\n\t\t\tthis.paneCompositeBar.value = this.createCompositeBar();\n\t\t\tthis.paneCompositeBar.value.create(this.paneCompositeBarContainer);\n\n\t\t\tif (newPosition === CompositeBarPosition.TOP) {\n\t\t\t\tthis.setHeaderArea(newCompositeBarContainer);\n\t\t\t} else if (newPosition === CompositeBarPosition.BOTTOM) {\n\t\t\t\tthis.setFooterArea(newCompositeBarContainer);\n\t\t\t}\n\t\t}\n\n\t\tthis.compositeBarPosition = newPosition;\n\n\t\tif (updateCompositeBarOption) {\n\t\t\tthis.layoutCompositeBar();\n\t\t}\n\t}\n\n\tprotected override createHeaderArea(): HTMLElement {\n\t\tconst headerArea = super.createHeaderArea();\n\t\treturn this.createHeaderFooterCompositeBarArea(headerArea);\n\t}\n\n\tprotected override createFooterArea(): HTMLElement {\n\t\tconst footerArea = super.createFooterArea();\n\t\treturn this.createHeaderFooterCompositeBarArea(footerArea);\n\t}\n\n\tprotected createHeaderFooterCompositeBarArea(area: HTMLElement): HTMLElement {\n\t\tif (this.headerFooterCompositeBarContainer) {\n\t\t\t// A pane composite part has either a header or a footer, but not both\n\t\t\tthrow new Error('Header or Footer composite bar already exists');\n\t\t}\n\t\tthis.headerFooterCompositeBarContainer = area;\n\n\t\tthis.headerFooterCompositeBarDispoables.add(addDisposableListener(area, EventType.CONTEXT_MENU, e => {\n\t\t\tthis.onCompositeBarAreaContextMenu(new StandardMouseEvent(getWindow(area), e));\n\t\t}));\n\t\tthis.headerFooterCompositeBarDispoables.add(Gesture.addTarget(area));\n\t\tthis.headerFooterCompositeBarDispoables.add(addDisposableListener(area, GestureEventType.Contextmenu, e => {\n\t\t\tthis.onCompositeBarAreaContextMenu(new StandardMouseEvent(getWindow(area), e));\n\t\t}));\n\n\t\treturn area;\n\t}\n\n\tprivate removeFooterHeaderArea(header: boolean): void {\n\t\tthis.headerFooterCompositeBarContainer = undefined;\n\t\tthis.headerFooterCompositeBarDispoables.clear();\n\t\tif (header) {\n\t\t\tthis.removeHeaderArea();\n\t\t} else {\n\t\t\tthis.removeFooterArea();\n\t\t}\n\t}\n\n\tprotected createCompositeBar(): PaneCompositeBar {\n\t\treturn this.instantiationService.createInstance(PaneCompositeBar, this.getCompositeBarOptions(), this.partId, this);\n\t}\n\n\tprotected override onTitleAreaUpdate(compositeId: string): void {\n\t\tsuper.onTitleAreaUpdate(compositeId);\n\n\t\t// If title actions change, relayout the composite bar\n\t\tthis.layoutCompositeBar();\n\t}\n\n\tasync openPaneComposite(id?: string, focus?: boolean): Promise<PaneComposite | undefined> {\n\t\tif (typeof id === 'string' && this.getPaneComposite(id)) {\n\t\t\treturn this.doOpenPaneComposite(id, focus);\n\t\t}\n\n\t\tawait this.extensionService.whenInstalledExtensionsRegistered();\n\n\t\tif (typeof id === 'string' && this.getPaneComposite(id)) {\n\t\t\treturn this.doOpenPaneComposite(id, focus);\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate doOpenPaneComposite(id: string, focus?: boolean): PaneComposite | undefined {\n\t\tif (this.blockOpening) {\n\t\t\treturn undefined; // Workaround against a potential race condition\n\t\t}\n\n\t\tif (!this.layoutService.isVisible(this.partId)) {\n\t\t\ttry {\n\t\t\t\tthis.blockOpening = true;\n\t\t\t\tthis.layoutService.setPartHidden(false, this.partId);\n\t\t\t} finally {\n\t\t\t\tthis.blockOpening = false;\n\t\t\t}\n\t\t}\n\n\t\treturn this.openComposite(id, focus) as PaneComposite;\n\t}\n\n\tgetPaneComposite(id: string): PaneCompositeDescriptor | undefined {\n\t\treturn (this.registry as PaneCompositeRegistry).getPaneComposite(id);\n\t}\n\n\tgetPaneComposites(): PaneCompositeDescriptor[] {\n\t\treturn (this.registry as PaneCompositeRegistry).getPaneComposites()\n\t\t\t.sort((v1, v2) => {\n\t\t\t\tif (typeof v1.order !== 'number') {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\n\t\t\t\tif (typeof v2.order !== 'number') {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\n\t\t\t\treturn v1.order - v2.order;\n\t\t\t});\n\t}\n\n\tgetPinnedPaneCompositeIds(): string[] {\n\t\treturn this.paneCompositeBar.value?.getPinnedPaneCompositeIds() ?? [];\n\t}\n\n\tgetVisiblePaneCompositeIds(): string[] {\n\t\treturn this.paneCompositeBar.value?.getVisiblePaneCompositeIds() ?? [];\n\t}\n\n\tgetActivePaneComposite(): IPaneComposite | undefined {\n\t\treturn <IPaneComposite>this.getActiveComposite();\n\t}\n\n\tgetLastActivePaneCompositeId(): string {\n\t\treturn this.getLastActiveCompositeId();\n\t}\n\n\thideActivePaneComposite(): void {\n\t\tif (this.layoutService.isVisible(this.partId)) {\n\t\t\tthis.layoutService.setPartHidden(true, this.partId);\n\t\t}\n\n\t\tthis.hideActiveComposite();\n\t}\n\n\tprotected focusCompositeBar(): void {\n\t\tthis.paneCompositeBar.value?.focus();\n\t}\n\n\toverride layout(width: number, height: number, top: number, left: number): void {\n\t\tif (!this.layoutService.isVisible(this.partId)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.contentDimension = new Dimension(width, height);\n\n\t\t// Layout contents\n\t\tsuper.layout(this.contentDimension.width, this.contentDimension.height, top, left);\n\n\t\t// Layout composite bar\n\t\tthis.layoutCompositeBar();\n\n\t\t// Add empty pane message\n\t\tthis.layoutEmptyMessage();\n\t}\n\n\tprivate layoutCompositeBar(): void {\n\t\tif (this.contentDimension && this.dimension && this.paneCompositeBar.value) {\n\t\t\tconst padding = this.compositeBarPosition === CompositeBarPosition.TITLE ? 16 : 8;\n\t\t\tconst borderWidth = this.partId === Parts.PANEL_PART ? 0 : 1;\n\t\t\tlet availableWidth = this.contentDimension.width - padding - borderWidth;\n\t\t\tavailableWidth = Math.max(AbstractPaneCompositePart.MIN_COMPOSITE_BAR_WIDTH, availableWidth - this.getToolbarWidth());\n\t\t\tthis.paneCompositeBar.value.layout(availableWidth, this.dimension.height);\n\t\t}\n\t}\n\n\tprivate layoutEmptyMessage(): void {\n\t\tconst visible = !this.getActiveComposite();\n\t\tthis.emptyPaneMessageElement?.classList.toggle('visible', visible);\n\t\tif (visible) {\n\t\t\tthis.titleLabel?.updateTitle('', '');\n\t\t}\n\t}\n\n\tprivate updateGlobalToolbarActions(): void {\n\t\tconst primaryActions = this.globalActions.getPrimaryActions();\n\t\tconst secondaryActions = this.globalActions.getSecondaryActions();\n\t\tthis.globalToolBar?.setActions(prepareActions(primaryActions), prepareActions(secondaryActions));\n\t}\n\n\tprotected getToolbarWidth(): number {\n\t\tif (!this.toolBar || this.compositeBarPosition !== CompositeBarPosition.TITLE) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tconst activePane = this.getActivePaneComposite();\n\t\tif (!activePane) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Each toolbar item has 4px margin\n\t\tconst toolBarWidth = this.toolBar.getItemsWidth() + this.toolBar.getItemsLength() * 4;\n\t\tconst globalToolBarWidth = this.globalToolBar ? this.globalToolBar.getItemsWidth() + this.globalToolBar.getItemsLength() * 4 : 0;\n\t\treturn toolBarWidth + globalToolBarWidth + 5; // 5px padding left\n\t}\n\n\tprivate onTitleAreaContextMenu(event: StandardMouseEvent): void {\n\t\tif (this.shouldShowCompositeBar() && this.getCompositeBarPosition() === CompositeBarPosition.TITLE) {\n\t\t\treturn this.onCompositeBarContextMenu(event);\n\t\t} else {\n\t\t\tconst activePaneComposite = this.getActivePaneComposite() as PaneComposite;\n\t\t\tconst activePaneCompositeActions = activePaneComposite ? activePaneComposite.getContextMenuActions() : [];\n\t\t\tif (activePaneCompositeActions.length) {\n\t\t\t\tthis.contextMenuService.showContextMenu({\n\t\t\t\t\tgetAnchor: () => event,\n\t\t\t\t\tgetActions: () => activePaneCompositeActions,\n\t\t\t\t\tgetActionViewItem: (action, options) => this.actionViewItemProvider(action, options),\n\t\t\t\t\tactionRunner: activePaneComposite.getActionRunner(),\n\t\t\t\t\tskipTelemetry: true\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onCompositeBarAreaContextMenu(event: StandardMouseEvent): void {\n\t\treturn this.onCompositeBarContextMenu(event);\n\t}\n\n\tprivate onCompositeBarContextMenu(event: StandardMouseEvent): void {\n\t\tif (this.paneCompositeBar.value) {\n\t\t\tconst actions: IAction[] = [...this.paneCompositeBar.value.getContextMenuActions()];\n\t\t\tif (actions.length) {\n\t\t\t\tthis.contextMenuService.showContextMenu({\n\t\t\t\t\tgetAnchor: () => event,\n\t\t\t\t\tgetActions: () => actions,\n\t\t\t\t\tskipTelemetry: true\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected getViewsSubmenuAction(): SubmenuAction | undefined {\n\t\tconst viewPaneContainer = (this.getActivePaneComposite() as PaneComposite)?.getViewPaneContainer();\n\t\tif (viewPaneContainer) {\n\t\t\tconst disposables = new DisposableStore();\n\t\t\tconst viewsActions: IAction[] = [];\n\t\t\tconst scopedContextKeyService = disposables.add(this.contextKeyService.createScoped(this.element));\n\t\t\tscopedContextKeyService.createKey('viewContainer', viewPaneContainer.viewContainer.id);\n\t\t\tconst menu = this.menuService.getMenuActions(ViewsSubMenu, scopedContextKeyService, { shouldForwardArgs: true, renderShortTitle: true });\n\t\t\tcreateAndFillInActionBarActions(menu, { primary: viewsActions, secondary: [] }, () => true);\n\t\t\tdisposables.dispose();\n\t\t\treturn viewsActions.length > 1 && viewsActions.some(a => a.enabled) ? new SubmenuAction('views', localize('views', \"Views\"), viewsActions) : undefined;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprotected abstract shouldShowCompositeBar(): boolean;\n\tprotected abstract getCompositeBarOptions(): IPaneCompositeBarOptions;\n\tprotected abstract getCompositeBarPosition(): CompositeBarPosition;\n\n}\n"],
  "mappings": "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",
  "names": ["CompositeBarPosition"]
}
