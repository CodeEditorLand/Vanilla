{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/compositePart.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./media/compositepart.css\";\nimport { $, Dimension, append, hide, show } from \"../../../base/browser/dom.js\";\nimport type { IBaseActionViewItemOptions } from \"../../../base/browser/ui/actionbar/actionViewItems.js\";\nimport {\n\tActionsOrientation,\n\ttype IActionViewItem,\n\tprepareActions,\n} from \"../../../base/browser/ui/actionbar/actionbar.js\";\nimport { AnchorAlignment } from \"../../../base/browser/ui/contextview/contextview.js\";\nimport type { IHoverDelegate } from \"../../../base/browser/ui/hover/hoverDelegate.js\";\nimport {\n\tcreateInstantHoverDelegate,\n\tgetDefaultHoverDelegate,\n} from \"../../../base/browser/ui/hover/hoverDelegateFactory.js\";\nimport { ProgressBar } from \"../../../base/browser/ui/progressbar/progressbar.js\";\nimport type { IBoundarySashes } from \"../../../base/browser/ui/sash/sash.js\";\nimport type { IAction } from \"../../../base/common/actions.js\";\nimport { isCancellationError } from \"../../../base/common/errors.js\";\nimport { Emitter } from \"../../../base/common/event.js\";\nimport { defaultGenerator } from \"../../../base/common/idGenerator.js\";\nimport {\n\tDisposableStore,\n\ttype IDisposable,\n\tMutableDisposable,\n\tdispose,\n} from \"../../../base/common/lifecycle.js\";\nimport { assertIsDefined } from \"../../../base/common/types.js\";\nimport { localize } from \"../../../nls.js\";\nimport { createActionViewItem } from \"../../../platform/actions/browser/menuEntryActionViewItem.js\";\nimport { WorkbenchToolBar } from \"../../../platform/actions/browser/toolbar.js\";\nimport type { IContextMenuService } from \"../../../platform/contextview/browser/contextView.js\";\nimport type { IHoverService } from \"../../../platform/hover/browser/hover.js\";\nimport type { IInstantiationService } from \"../../../platform/instantiation/common/instantiation.js\";\nimport { ServiceCollection } from \"../../../platform/instantiation/common/serviceCollection.js\";\nimport type { IKeybindingService } from \"../../../platform/keybinding/common/keybinding.js\";\nimport type { INotificationService } from \"../../../platform/notification/common/notification.js\";\nimport {\n\tIEditorProgressService,\n\ttype IProgressIndicator,\n} from \"../../../platform/progress/common/progress.js\";\nimport {\n\ttype IStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../platform/storage/common/storage.js\";\nimport { defaultProgressBarStyles } from \"../../../platform/theme/browser/defaultStyles.js\";\nimport type { IThemeService } from \"../../../platform/theme/common/themeService.js\";\nimport type { IComposite } from \"../../common/composite.js\";\nimport type { IWorkbenchLayoutService } from \"../../services/layout/browser/layoutService.js\";\nimport {\n\tAbstractProgressScope,\n\tScopedProgressIndicator,\n} from \"../../services/progress/browser/progressIndicator.js\";\nimport type { Composite, CompositeRegistry } from \"../composite.js\";\nimport { type IPartOptions, Part } from \"../part.js\";\n\nexport interface ICompositeTitleLabel {\n\t/**\n\t * Asks to update the title for the composite with the given ID.\n\t */\n\tupdateTitle(id: string, title: string, keybinding?: string): void;\n\n\t/**\n\t * Called when theming information changes.\n\t */\n\tupdateStyles(): void;\n}\n\ninterface CompositeItem {\n\treadonly composite: Composite;\n\treadonly disposable: IDisposable;\n\treadonly progress: IProgressIndicator;\n}\n\nexport abstract class CompositePart<T extends Composite> extends Part {\n\tprotected readonly onDidCompositeOpen = this._register(\n\t\tnew Emitter<{ composite: IComposite; focus: boolean }>(),\n\t);\n\tprotected readonly onDidCompositeClose = this._register(\n\t\tnew Emitter<IComposite>(),\n\t);\n\n\tprotected toolBar: WorkbenchToolBar | undefined;\n\tprotected titleLabelElement: HTMLElement | undefined;\n\tprotected readonly toolbarHoverDelegate: IHoverDelegate;\n\n\tprivate readonly mapCompositeToCompositeContainer = new Map<\n\t\tstring,\n\t\tHTMLElement\n\t>();\n\tprivate readonly mapActionsBindingToComposite = new Map<\n\t\tstring,\n\t\t() => void\n\t>();\n\tprivate activeComposite: Composite | undefined;\n\tprivate lastActiveCompositeId: string;\n\tprivate readonly instantiatedCompositeItems = new Map<\n\t\tstring,\n\t\tCompositeItem\n\t>();\n\tprotected titleLabel: ICompositeTitleLabel | undefined;\n\tprivate progressBar: ProgressBar | undefined;\n\tprivate contentAreaSize: Dimension | undefined;\n\tprivate readonly actionsListener = this._register(new MutableDisposable());\n\tprivate currentCompositeOpenToken: string | undefined;\n\tprivate boundarySashes: IBoundarySashes | undefined;\n\n\tconstructor(\n\t\tprivate readonly notificationService: INotificationService,\n\t\tprotected readonly storageService: IStorageService,\n\t\tprotected readonly contextMenuService: IContextMenuService,\n\t\tlayoutService: IWorkbenchLayoutService,\n\t\tprotected readonly keybindingService: IKeybindingService,\n\t\tprivate readonly hoverService: IHoverService,\n\t\tprotected readonly instantiationService: IInstantiationService,\n\t\tthemeService: IThemeService,\n\t\tprotected readonly registry: CompositeRegistry<T>,\n\t\tprivate readonly activeCompositeSettingsKey: string,\n\t\tprivate readonly defaultCompositeId: string,\n\t\tprivate readonly nameForTelemetry: string,\n\t\tprivate readonly compositeCSSClass: string,\n\t\tprivate readonly titleForegroundColor: string | undefined,\n\t\tid: string,\n\t\toptions: IPartOptions,\n\t) {\n\t\tsuper(id, options, themeService, storageService, layoutService);\n\n\t\tthis.lastActiveCompositeId = storageService.get(\n\t\t\tactiveCompositeSettingsKey,\n\t\t\tStorageScope.WORKSPACE,\n\t\t\tthis.defaultCompositeId,\n\t\t);\n\t\tthis.toolbarHoverDelegate = this._register(\n\t\t\tcreateInstantHoverDelegate(),\n\t\t);\n\t}\n\n\tprotected openComposite(\n\t\tid: string,\n\t\tfocus?: boolean,\n\t): Composite | undefined {\n\t\t// Check if composite already visible and just focus in that case\n\t\tif (this.activeComposite?.getId() === id) {\n\t\t\tif (focus) {\n\t\t\t\tthis.activeComposite.focus();\n\t\t\t}\n\n\t\t\t// Fullfill promise with composite that is being opened\n\t\t\treturn this.activeComposite;\n\t\t}\n\n\t\t// We cannot open the composite if we have not been created yet\n\t\tif (!this.element) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Open\n\t\treturn this.doOpenComposite(id, focus);\n\t}\n\n\tprivate doOpenComposite(id: string, focus = false): Composite | undefined {\n\t\t// Use a generated token to avoid race conditions from long running promises\n\t\tconst currentCompositeOpenToken = defaultGenerator.nextId();\n\t\tthis.currentCompositeOpenToken = currentCompositeOpenToken;\n\n\t\t// Hide current\n\t\tif (this.activeComposite) {\n\t\t\tthis.hideActiveComposite();\n\t\t}\n\n\t\t// Update Title\n\t\tthis.updateTitle(id);\n\n\t\t// Create composite\n\t\tconst composite = this.createComposite(id, true);\n\n\t\t// Check if another composite opened meanwhile and return in that case\n\t\tif (\n\t\t\tthis.currentCompositeOpenToken !== currentCompositeOpenToken ||\n\t\t\t(this.activeComposite &&\n\t\t\t\tthis.activeComposite.getId() !== composite.getId())\n\t\t) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Check if composite already visible and just focus in that case\n\t\tif (this.activeComposite?.getId() === composite.getId()) {\n\t\t\tif (focus) {\n\t\t\t\tcomposite.focus();\n\t\t\t}\n\n\t\t\tthis.onDidCompositeOpen.fire({ composite, focus });\n\t\t\treturn composite;\n\t\t}\n\n\t\t// Show Composite and Focus\n\t\tthis.showComposite(composite);\n\t\tif (focus) {\n\t\t\tcomposite.focus();\n\t\t}\n\n\t\t// Return with the composite that is being opened\n\t\tif (composite) {\n\t\t\tthis.onDidCompositeOpen.fire({ composite, focus });\n\t\t}\n\n\t\treturn composite;\n\t}\n\n\tprotected createComposite(id: string, isActive?: boolean): Composite {\n\t\t// Check if composite is already created\n\t\tconst compositeItem = this.instantiatedCompositeItems.get(id);\n\t\tif (compositeItem) {\n\t\t\treturn compositeItem.composite;\n\t\t}\n\n\t\t// Instantiate composite from registry otherwise\n\t\tconst compositeDescriptor = this.registry.getComposite(id);\n\t\tif (compositeDescriptor) {\n\t\t\tconst that = this;\n\t\t\tconst compositeProgressIndicator = new ScopedProgressIndicator(\n\t\t\t\tassertIsDefined(this.progressBar),\n\t\t\t\tnew (class extends AbstractProgressScope {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper(compositeDescriptor!.id, !!isActive);\n\t\t\t\t\t\tthis._register(\n\t\t\t\t\t\t\tthat.onDidCompositeOpen.event((e) =>\n\t\t\t\t\t\t\t\tthis.onScopeOpened(e.composite.getId()),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis._register(\n\t\t\t\t\t\t\tthat.onDidCompositeClose.event((e) =>\n\t\t\t\t\t\t\t\tthis.onScopeClosed(e.getId()),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t})(),\n\t\t\t);\n\t\t\tconst compositeInstantiationService = this._register(\n\t\t\t\tthis.instantiationService.createChild(\n\t\t\t\t\tnew ServiceCollection(\n\t\t\t\t\t\t[IEditorProgressService, compositeProgressIndicator], // provide the editor progress service for any editors instantiated within the composite\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tconst composite = compositeDescriptor.instantiate(\n\t\t\t\tcompositeInstantiationService,\n\t\t\t);\n\t\t\tconst disposable = new DisposableStore();\n\n\t\t\t// Remember as Instantiated\n\t\t\tthis.instantiatedCompositeItems.set(id, {\n\t\t\t\tcomposite,\n\t\t\t\tdisposable,\n\t\t\t\tprogress: compositeProgressIndicator,\n\t\t\t});\n\n\t\t\t// Register to title area update events from the composite\n\t\t\tdisposable.add(\n\t\t\t\tcomposite.onTitleAreaUpdate(\n\t\t\t\t\t() => this.onTitleAreaUpdate(composite.getId()),\n\t\t\t\t\tthis,\n\t\t\t\t),\n\t\t\t);\n\t\t\tdisposable.add(compositeInstantiationService);\n\n\t\t\treturn composite;\n\t\t}\n\n\t\tthrow new Error(`Unable to find composite with id ${id}`);\n\t}\n\n\tprotected showComposite(composite: Composite): void {\n\t\t// Remember Composite\n\t\tthis.activeComposite = composite;\n\n\t\t// Store in preferences\n\t\tconst id = this.activeComposite.getId();\n\t\tif (id !== this.defaultCompositeId) {\n\t\t\tthis.storageService.store(\n\t\t\t\tthis.activeCompositeSettingsKey,\n\t\t\t\tid,\n\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\tStorageTarget.MACHINE,\n\t\t\t);\n\t\t} else {\n\t\t\tthis.storageService.remove(\n\t\t\t\tthis.activeCompositeSettingsKey,\n\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t);\n\t\t}\n\n\t\t// Remember\n\t\tthis.lastActiveCompositeId = this.activeComposite.getId();\n\n\t\t// Composites created for the first time\n\t\tlet compositeContainer = this.mapCompositeToCompositeContainer.get(\n\t\t\tcomposite.getId(),\n\t\t);\n\t\tif (!compositeContainer) {\n\t\t\t// Build Container off-DOM\n\t\t\tcompositeContainer = $(\".composite\");\n\t\t\tcompositeContainer.classList.add(\n\t\t\t\t...this.compositeCSSClass.split(\" \"),\n\t\t\t);\n\t\t\tcompositeContainer.id = composite.getId();\n\n\t\t\tcomposite.create(compositeContainer);\n\t\t\tcomposite.updateStyles();\n\n\t\t\t// Remember composite container\n\t\t\tthis.mapCompositeToCompositeContainer.set(\n\t\t\t\tcomposite.getId(),\n\t\t\t\tcompositeContainer,\n\t\t\t);\n\t\t}\n\n\t\t// Fill Content and Actions\n\t\t// Make sure that the user meanwhile did not open another composite or closed the part containing the composite\n\t\tif (\n\t\t\t!this.activeComposite ||\n\t\t\tcomposite.getId() !== this.activeComposite.getId()\n\t\t) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Take Composite on-DOM and show\n\t\tconst contentArea = this.getContentArea();\n\t\tcontentArea?.appendChild(compositeContainer);\n\t\tshow(compositeContainer);\n\n\t\t// Setup action runner\n\t\tconst toolBar = assertIsDefined(this.toolBar);\n\t\ttoolBar.actionRunner = composite.getActionRunner();\n\n\t\t// Update title with composite title if it differs from descriptor\n\t\tconst descriptor = this.registry.getComposite(composite.getId());\n\t\tif (descriptor && descriptor.name !== composite.getTitle()) {\n\t\t\tthis.updateTitle(composite.getId(), composite.getTitle());\n\t\t}\n\n\t\t// Handle Composite Actions\n\t\tlet actionsBinding = this.mapActionsBindingToComposite.get(\n\t\t\tcomposite.getId(),\n\t\t);\n\t\tif (!actionsBinding) {\n\t\t\tactionsBinding = this.collectCompositeActions(composite);\n\t\t\tthis.mapActionsBindingToComposite.set(\n\t\t\t\tcomposite.getId(),\n\t\t\t\tactionsBinding,\n\t\t\t);\n\t\t}\n\t\tactionsBinding();\n\n\t\t// Action Run Handling\n\t\tthis.actionsListener.value = toolBar.actionRunner.onDidRun((e) => {\n\t\t\t// Check for Error\n\t\t\tif (e.error && !isCancellationError(e.error)) {\n\t\t\t\tthis.notificationService.error(e.error);\n\t\t\t}\n\t\t});\n\n\t\t// Indicate to composite that it is now visible\n\t\tcomposite.setVisible(true);\n\n\t\t// Make sure that the user meanwhile did not open another composite or closed the part containing the composite\n\t\tif (\n\t\t\t!this.activeComposite ||\n\t\t\tcomposite.getId() !== this.activeComposite.getId()\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure the composite is layed out\n\t\tif (this.contentAreaSize) {\n\t\t\tcomposite.layout(this.contentAreaSize);\n\t\t}\n\n\t\t// Make sure boundary sashes are propagated\n\t\tif (this.boundarySashes) {\n\t\t\tcomposite.setBoundarySashes(this.boundarySashes);\n\t\t}\n\t}\n\n\tprotected onTitleAreaUpdate(compositeId: string): void {\n\t\t// Title\n\t\tconst composite = this.instantiatedCompositeItems.get(compositeId);\n\t\tif (composite) {\n\t\t\tthis.updateTitle(compositeId, composite.composite.getTitle());\n\t\t}\n\n\t\t// Active Composite\n\t\tif (this.activeComposite?.getId() === compositeId) {\n\t\t\t// Actions\n\t\t\tconst actionsBinding = this.collectCompositeActions(\n\t\t\t\tthis.activeComposite,\n\t\t\t);\n\t\t\tthis.mapActionsBindingToComposite.set(\n\t\t\t\tthis.activeComposite.getId(),\n\t\t\t\tactionsBinding,\n\t\t\t);\n\t\t\tactionsBinding();\n\t\t}\n\n\t\t// Otherwise invalidate actions binding for next time when the composite becomes visible\n\t\telse {\n\t\t\tthis.mapActionsBindingToComposite.delete(compositeId);\n\t\t}\n\t}\n\n\tprivate updateTitle(compositeId: string, compositeTitle?: string): void {\n\t\tconst compositeDescriptor = this.registry.getComposite(compositeId);\n\t\tif (!compositeDescriptor || !this.titleLabel) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!compositeTitle) {\n\t\t\tcompositeTitle = compositeDescriptor.name;\n\t\t}\n\n\t\tconst keybinding = this.keybindingService.lookupKeybinding(compositeId);\n\n\t\tthis.titleLabel.updateTitle(\n\t\t\tcompositeId,\n\t\t\tcompositeTitle,\n\t\t\tkeybinding?.getLabel() ?? undefined,\n\t\t);\n\n\t\tconst toolBar = assertIsDefined(this.toolBar);\n\t\ttoolBar.setAriaLabel(\n\t\t\tlocalize(\n\t\t\t\t\"ariaCompositeToolbarLabel\",\n\t\t\t\t\"{0} actions\",\n\t\t\t\tcompositeTitle,\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate collectCompositeActions(composite?: Composite): () => void {\n\t\t// From Composite\n\t\tconst menuIds = composite?.getMenuIds();\n\t\tconst primaryActions: IAction[] =\n\t\t\tcomposite?.getActions().slice(0) || [];\n\t\tconst secondaryActions: IAction[] =\n\t\t\tcomposite?.getSecondaryActions().slice(0) || [];\n\n\t\t// Update context\n\t\tconst toolBar = assertIsDefined(this.toolBar);\n\t\ttoolBar.context = this.actionsContextProvider();\n\n\t\t// Return fn to set into toolbar\n\t\treturn () =>\n\t\t\ttoolBar.setActions(\n\t\t\t\tprepareActions(primaryActions),\n\t\t\t\tprepareActions(secondaryActions),\n\t\t\t\tmenuIds,\n\t\t\t);\n\t}\n\n\tprotected getActiveComposite(): IComposite | undefined {\n\t\treturn this.activeComposite;\n\t}\n\n\tprotected getLastActiveCompositeId(): string {\n\t\treturn this.lastActiveCompositeId;\n\t}\n\n\tprotected hideActiveComposite(): Composite | undefined {\n\t\tif (!this.activeComposite) {\n\t\t\treturn undefined; // Nothing to do\n\t\t}\n\n\t\tconst composite = this.activeComposite;\n\t\tthis.activeComposite = undefined;\n\n\t\tconst compositeContainer = this.mapCompositeToCompositeContainer.get(\n\t\t\tcomposite.getId(),\n\t\t);\n\n\t\t// Indicate to Composite\n\t\tcomposite.setVisible(false);\n\n\t\t// Take Container Off-DOM and hide\n\t\tif (compositeContainer) {\n\t\t\tcompositeContainer.remove();\n\t\t\thide(compositeContainer);\n\t\t}\n\n\t\t// Clear any running Progress\n\t\tthis.progressBar?.stop().hide();\n\n\t\t// Empty Actions\n\t\tif (this.toolBar) {\n\t\t\tthis.collectCompositeActions()();\n\t\t}\n\t\tthis.onDidCompositeClose.fire(composite);\n\n\t\treturn composite;\n\t}\n\n\tprotected override createTitleArea(parent: HTMLElement): HTMLElement {\n\t\t// Title Area Container\n\t\tconst titleArea = append(parent, $(\".composite\"));\n\t\ttitleArea.classList.add(\"title\");\n\n\t\t// Left Title Label\n\t\tthis.titleLabel = this.createTitleLabel(titleArea);\n\n\t\t// Right Actions Container\n\t\tconst titleActionsContainer = append(titleArea, $(\".title-actions\"));\n\n\t\t// Toolbar\n\t\tthis.toolBar = this._register(\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tWorkbenchToolBar,\n\t\t\t\ttitleActionsContainer,\n\t\t\t\t{\n\t\t\t\t\tactionViewItemProvider: (action, options) =>\n\t\t\t\t\t\tthis.actionViewItemProvider(action, options),\n\t\t\t\t\torientation: ActionsOrientation.HORIZONTAL,\n\t\t\t\t\tgetKeyBinding: (action) =>\n\t\t\t\t\t\tthis.keybindingService.lookupKeybinding(action.id),\n\t\t\t\t\tanchorAlignmentProvider: () =>\n\t\t\t\t\t\tthis.getTitleAreaDropDownAnchorAlignment(),\n\t\t\t\t\ttoggleMenuTitle: localize(\n\t\t\t\t\t\t\"viewsAndMoreActions\",\n\t\t\t\t\t\t\"Views and More Actions...\",\n\t\t\t\t\t),\n\t\t\t\t\ttelemetrySource: this.nameForTelemetry,\n\t\t\t\t\thoverDelegate: this.toolbarHoverDelegate,\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tthis.collectCompositeActions()();\n\n\t\treturn titleArea;\n\t}\n\n\tprotected createTitleLabel(parent: HTMLElement): ICompositeTitleLabel {\n\t\tconst titleContainer = append(parent, $(\".title-label\"));\n\t\tconst titleLabel = append(titleContainer, $(\"h2\"));\n\t\tthis.titleLabelElement = titleLabel;\n\t\tconst hover = this._register(\n\t\t\tthis.hoverService.setupManagedHover(\n\t\t\t\tgetDefaultHoverDelegate(\"mouse\"),\n\t\t\t\ttitleLabel,\n\t\t\t\t\"\",\n\t\t\t),\n\t\t);\n\t\treturn {\n\t\t\tupdateTitle: (id, title, keybinding) => {\n\t\t\t\t// The title label is shared for all composites in the base CompositePart\n\t\t\t\tif (\n\t\t\t\t\t!this.activeComposite ||\n\t\t\t\t\tthis.activeComposite.getId() === id\n\t\t\t\t) {\n\t\t\t\t\ttitleLabel.innerText = title;\n\t\t\t\t\thover.update(\n\t\t\t\t\t\tkeybinding\n\t\t\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\t\t\"titleTooltip\",\n\t\t\t\t\t\t\t\t\t\"{0} ({1})\",\n\t\t\t\t\t\t\t\t\ttitle,\n\t\t\t\t\t\t\t\t\tkeybinding,\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: title,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tupdateStyles: () => {\n\t\t\t\ttitleLabel.style.color = this.titleForegroundColor\n\t\t\t\t\t? this.getColor(this.titleForegroundColor) || \"\"\n\t\t\t\t\t: \"\";\n\t\t\t},\n\t\t};\n\t}\n\n\tprotected createHeaderArea(): HTMLElement {\n\t\treturn $(\".composite\");\n\t}\n\n\tprotected createFooterArea(): HTMLElement {\n\t\treturn $(\".composite\");\n\t}\n\n\toverride updateStyles(): void {\n\t\tsuper.updateStyles();\n\n\t\t// Forward to title label\n\t\tconst titleLabel = assertIsDefined(this.titleLabel);\n\t\ttitleLabel.updateStyles();\n\t}\n\n\tprotected actionViewItemProvider(\n\t\taction: IAction,\n\t\toptions: IBaseActionViewItemOptions,\n\t): IActionViewItem | undefined {\n\t\t// Check Active Composite\n\t\tif (this.activeComposite) {\n\t\t\treturn this.activeComposite.getActionViewItem(action, options);\n\t\t}\n\n\t\treturn createActionViewItem(this.instantiationService, action, options);\n\t}\n\n\tprotected actionsContextProvider(): unknown {\n\t\t// Check Active Composite\n\t\tif (this.activeComposite) {\n\t\t\treturn this.activeComposite.getActionsContext();\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprotected override createContentArea(parent: HTMLElement): HTMLElement {\n\t\tconst contentContainer = append(parent, $(\".content\"));\n\n\t\tthis.progressBar = this._register(\n\t\t\tnew ProgressBar(contentContainer, defaultProgressBarStyles),\n\t\t);\n\t\tthis.progressBar.hide();\n\n\t\treturn contentContainer;\n\t}\n\n\tgetProgressIndicator(id: string): IProgressIndicator | undefined {\n\t\tconst compositeItem = this.instantiatedCompositeItems.get(id);\n\n\t\treturn compositeItem ? compositeItem.progress : undefined;\n\t}\n\n\tprotected getTitleAreaDropDownAnchorAlignment(): AnchorAlignment {\n\t\treturn AnchorAlignment.RIGHT;\n\t}\n\n\toverride layout(\n\t\twidth: number,\n\t\theight: number,\n\t\ttop: number,\n\t\tleft: number,\n\t): void {\n\t\tsuper.layout(width, height, top, left);\n\n\t\t// Layout contents\n\t\tthis.contentAreaSize = Dimension.lift(\n\t\t\tsuper.layoutContents(width, height).contentSize,\n\t\t);\n\n\t\t// Layout composite\n\t\tthis.activeComposite?.layout(this.contentAreaSize);\n\t}\n\n\tsetBoundarySashes?(sashes: IBoundarySashes): void {\n\t\tthis.boundarySashes = sashes;\n\t\tthis.activeComposite?.setBoundarySashes(sashes);\n\t}\n\n\tprotected removeComposite(compositeId: string): boolean {\n\t\tif (this.activeComposite?.getId() === compositeId) {\n\t\t\treturn false; // do not remove active composite\n\t\t}\n\n\t\tthis.mapCompositeToCompositeContainer.delete(compositeId);\n\t\tthis.mapActionsBindingToComposite.delete(compositeId);\n\t\tconst compositeItem = this.instantiatedCompositeItems.get(compositeId);\n\t\tif (compositeItem) {\n\t\t\tcompositeItem.composite.dispose();\n\t\t\tdispose(compositeItem.disposable);\n\t\t\tthis.instantiatedCompositeItems.delete(compositeId);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\toverride dispose(): void {\n\t\tthis.mapCompositeToCompositeContainer.clear();\n\t\tthis.mapActionsBindingToComposite.clear();\n\n\t\tthis.instantiatedCompositeItems.forEach((compositeItem) => {\n\t\t\tcompositeItem.composite.dispose();\n\t\t\tdispose(compositeItem.disposable);\n\t\t});\n\n\t\tthis.instantiatedCompositeItems.clear();\n\n\t\tsuper.dispose();\n\t}\n}\n"],
  "mappings": ";;AAKA,OAAO;AACP,SAAS,GAAG,WAAW,QAAQ,MAAM,YAAY;AAEjD;AAAA,EACC;AAAA,EAEA;AAAA,OACM;AACP,SAAS,uBAAuB;AAEhC;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,mBAAmB;AAG5B,SAAS,2BAA2B;AACpC,SAAS,eAAe;AACxB,SAAS,wBAAwB;AACjC;AAAA,EACC;AAAA,EAEA;AAAA,EACA;AAAA,OACM;AACP,SAAS,uBAAuB;AAChC,SAAS,gBAAgB;AACzB,SAAS,4BAA4B;AACrC,SAAS,wBAAwB;AAIjC,SAAS,yBAAyB;AAGlC;AAAA,EACC;AAAA,OAEM;AACP;AAAA,EAEC;AAAA,EACA;AAAA,OACM;AACP,SAAS,gCAAgC;AAIzC;AAAA,EACC;AAAA,EACA;AAAA,OACM;AAEP,SAA4B,YAAY;AAoBjC,MAAe,sBAA2C,KAAK;AAAA,EAiCrE,YACkB,qBACE,gBACA,oBACnB,eACmB,mBACF,cACE,sBACnB,cACmB,UACF,4BACA,oBACA,kBACA,mBACA,sBACjB,IACA,SACC;AACD,UAAM,IAAI,SAAS,cAAc,gBAAgB,aAAa;AAjB7C;AACE;AACA;AAEA;AACF;AACE;AAEA;AACF;AACA;AACA;AACA;AACA;AAMjB,SAAK,wBAAwB,eAAe;AAAA,MAC3C;AAAA,MACA,aAAa;AAAA,MACb,KAAK;AAAA,IACN;AACA,SAAK,uBAAuB,KAAK;AAAA,MAChC,2BAA2B;AAAA,IAC5B;AAAA,EACD;AAAA,EA5ID,OA+EsE;AAAA;AAAA;AAAA,EAClD,qBAAqB,KAAK;AAAA,IAC5C,IAAI,QAAmD;AAAA,EACxD;AAAA,EACmB,sBAAsB,KAAK;AAAA,IAC7C,IAAI,QAAoB;AAAA,EACzB;AAAA,EAEU;AAAA,EACA;AAAA,EACS;AAAA,EAEF,mCAAmC,oBAAI,IAGtD;AAAA,EACe,+BAA+B,oBAAI,IAGlD;AAAA,EACM;AAAA,EACA;AAAA,EACS,6BAA6B,oBAAI,IAGhD;AAAA,EACQ;AAAA,EACF;AAAA,EACA;AAAA,EACS,kBAAkB,KAAK,UAAU,IAAI,kBAAkB,CAAC;AAAA,EACjE;AAAA,EACA;AAAA,EAgCE,cACT,IACA,OACwB;AAExB,QAAI,KAAK,iBAAiB,MAAM,MAAM,IAAI;AACzC,UAAI,OAAO;AACV,aAAK,gBAAgB,MAAM;AAAA,MAC5B;AAGA,aAAO,KAAK;AAAA,IACb;AAGA,QAAI,CAAC,KAAK,SAAS;AAClB;AAAA,IACD;AAGA,WAAO,KAAK,gBAAgB,IAAI,KAAK;AAAA,EACtC;AAAA,EAEQ,gBAAgB,IAAY,QAAQ,OAA8B;AAEzE,UAAM,4BAA4B,iBAAiB,OAAO;AAC1D,SAAK,4BAA4B;AAGjC,QAAI,KAAK,iBAAiB;AACzB,WAAK,oBAAoB;AAAA,IAC1B;AAGA,SAAK,YAAY,EAAE;AAGnB,UAAM,YAAY,KAAK,gBAAgB,IAAI,IAAI;AAG/C,QACC,KAAK,8BAA8B,6BAClC,KAAK,mBACL,KAAK,gBAAgB,MAAM,MAAM,UAAU,MAAM,GACjD;AACD,aAAO;AAAA,IACR;AAGA,QAAI,KAAK,iBAAiB,MAAM,MAAM,UAAU,MAAM,GAAG;AACxD,UAAI,OAAO;AACV,kBAAU,MAAM;AAAA,MACjB;AAEA,WAAK,mBAAmB,KAAK,EAAE,WAAW,MAAM,CAAC;AACjD,aAAO;AAAA,IACR;AAGA,SAAK,cAAc,SAAS;AAC5B,QAAI,OAAO;AACV,gBAAU,MAAM;AAAA,IACjB;AAGA,QAAI,WAAW;AACd,WAAK,mBAAmB,KAAK,EAAE,WAAW,MAAM,CAAC;AAAA,IAClD;AAEA,WAAO;AAAA,EACR;AAAA,EAEU,gBAAgB,IAAY,UAA+B;AAEpE,UAAM,gBAAgB,KAAK,2BAA2B,IAAI,EAAE;AAC5D,QAAI,eAAe;AAClB,aAAO,cAAc;AAAA,IACtB;AAGA,UAAM,sBAAsB,KAAK,SAAS,aAAa,EAAE;AACzD,QAAI,qBAAqB;AACxB,YAAM,OAAO;AACb,YAAM,6BAA6B,IAAI;AAAA,QACtC,gBAAgB,KAAK,WAAW;AAAA,QAChC,IAAK,cAAc,sBAAsB;AAAA,UACxC,cAAc;AACb,kBAAM,oBAAqB,IAAI,CAAC,CAAC,QAAQ;AACzC,iBAAK;AAAA,cACJ,KAAK,mBAAmB;AAAA,gBAAM,CAAC,MAC9B,KAAK,cAAc,EAAE,UAAU,MAAM,CAAC;AAAA,cACvC;AAAA,YACD;AACA,iBAAK;AAAA,cACJ,KAAK,oBAAoB;AAAA,gBAAM,CAAC,MAC/B,KAAK,cAAc,EAAE,MAAM,CAAC;AAAA,cAC7B;AAAA,YACD;AAAA,UACD;AAAA,QACD,EAAG;AAAA,MACJ;AACA,YAAM,gCAAgC,KAAK;AAAA,QAC1C,KAAK,qBAAqB;AAAA,UACzB,IAAI;AAAA,YACH,CAAC,wBAAwB,0BAA0B;AAAA;AAAA,UACpD;AAAA,QACD;AAAA,MACD;AAEA,YAAM,YAAY,oBAAoB;AAAA,QACrC;AAAA,MACD;AACA,YAAM,aAAa,IAAI,gBAAgB;AAGvC,WAAK,2BAA2B,IAAI,IAAI;AAAA,QACvC;AAAA,QACA;AAAA,QACA,UAAU;AAAA,MACX,CAAC;AAGD,iBAAW;AAAA,QACV,UAAU;AAAA,UACT,MAAM,KAAK,kBAAkB,UAAU,MAAM,CAAC;AAAA,UAC9C;AAAA,QACD;AAAA,MACD;AACA,iBAAW,IAAI,6BAA6B;AAE5C,aAAO;AAAA,IACR;AAEA,UAAM,IAAI,MAAM,oCAAoC,EAAE,EAAE;AAAA,EACzD;AAAA,EAEU,cAAc,WAA4B;AAEnD,SAAK,kBAAkB;AAGvB,UAAM,KAAK,KAAK,gBAAgB,MAAM;AACtC,QAAI,OAAO,KAAK,oBAAoB;AACnC,WAAK,eAAe;AAAA,QACnB,KAAK;AAAA,QACL;AAAA,QACA,aAAa;AAAA,QACb,cAAc;AAAA,MACf;AAAA,IACD,OAAO;AACN,WAAK,eAAe;AAAA,QACnB,KAAK;AAAA,QACL,aAAa;AAAA,MACd;AAAA,IACD;AAGA,SAAK,wBAAwB,KAAK,gBAAgB,MAAM;AAGxD,QAAI,qBAAqB,KAAK,iCAAiC;AAAA,MAC9D,UAAU,MAAM;AAAA,IACjB;AACA,QAAI,CAAC,oBAAoB;AAExB,2BAAqB,EAAE,YAAY;AACnC,yBAAmB,UAAU;AAAA,QAC5B,GAAG,KAAK,kBAAkB,MAAM,GAAG;AAAA,MACpC;AACA,yBAAmB,KAAK,UAAU,MAAM;AAExC,gBAAU,OAAO,kBAAkB;AACnC,gBAAU,aAAa;AAGvB,WAAK,iCAAiC;AAAA,QACrC,UAAU,MAAM;AAAA,QAChB;AAAA,MACD;AAAA,IACD;AAIA,QACC,CAAC,KAAK,mBACN,UAAU,MAAM,MAAM,KAAK,gBAAgB,MAAM,GAChD;AACD,aAAO;AAAA,IACR;AAGA,UAAM,cAAc,KAAK,eAAe;AACxC,iBAAa,YAAY,kBAAkB;AAC3C,SAAK,kBAAkB;AAGvB,UAAM,UAAU,gBAAgB,KAAK,OAAO;AAC5C,YAAQ,eAAe,UAAU,gBAAgB;AAGjD,UAAM,aAAa,KAAK,SAAS,aAAa,UAAU,MAAM,CAAC;AAC/D,QAAI,cAAc,WAAW,SAAS,UAAU,SAAS,GAAG;AAC3D,WAAK,YAAY,UAAU,MAAM,GAAG,UAAU,SAAS,CAAC;AAAA,IACzD;AAGA,QAAI,iBAAiB,KAAK,6BAA6B;AAAA,MACtD,UAAU,MAAM;AAAA,IACjB;AACA,QAAI,CAAC,gBAAgB;AACpB,uBAAiB,KAAK,wBAAwB,SAAS;AACvD,WAAK,6BAA6B;AAAA,QACjC,UAAU,MAAM;AAAA,QAChB;AAAA,MACD;AAAA,IACD;AACA,mBAAe;AAGf,SAAK,gBAAgB,QAAQ,QAAQ,aAAa,SAAS,CAAC,MAAM;AAEjE,UAAI,EAAE,SAAS,CAAC,oBAAoB,EAAE,KAAK,GAAG;AAC7C,aAAK,oBAAoB,MAAM,EAAE,KAAK;AAAA,MACvC;AAAA,IACD,CAAC;AAGD,cAAU,WAAW,IAAI;AAGzB,QACC,CAAC,KAAK,mBACN,UAAU,MAAM,MAAM,KAAK,gBAAgB,MAAM,GAChD;AACD;AAAA,IACD;AAGA,QAAI,KAAK,iBAAiB;AACzB,gBAAU,OAAO,KAAK,eAAe;AAAA,IACtC;AAGA,QAAI,KAAK,gBAAgB;AACxB,gBAAU,kBAAkB,KAAK,cAAc;AAAA,IAChD;AAAA,EACD;AAAA,EAEU,kBAAkB,aAA2B;AAEtD,UAAM,YAAY,KAAK,2BAA2B,IAAI,WAAW;AACjE,QAAI,WAAW;AACd,WAAK,YAAY,aAAa,UAAU,UAAU,SAAS,CAAC;AAAA,IAC7D;AAGA,QAAI,KAAK,iBAAiB,MAAM,MAAM,aAAa;AAElD,YAAM,iBAAiB,KAAK;AAAA,QAC3B,KAAK;AAAA,MACN;AACA,WAAK,6BAA6B;AAAA,QACjC,KAAK,gBAAgB,MAAM;AAAA,QAC3B;AAAA,MACD;AACA,qBAAe;AAAA,IAChB,OAGK;AACJ,WAAK,6BAA6B,OAAO,WAAW;AAAA,IACrD;AAAA,EACD;AAAA,EAEQ,YAAY,aAAqB,gBAA+B;AACvE,UAAM,sBAAsB,KAAK,SAAS,aAAa,WAAW;AAClE,QAAI,CAAC,uBAAuB,CAAC,KAAK,YAAY;AAC7C;AAAA,IACD;AAEA,QAAI,CAAC,gBAAgB;AACpB,uBAAiB,oBAAoB;AAAA,IACtC;AAEA,UAAM,aAAa,KAAK,kBAAkB,iBAAiB,WAAW;AAEtE,SAAK,WAAW;AAAA,MACf;AAAA,MACA;AAAA,MACA,YAAY,SAAS,KAAK;AAAA,IAC3B;AAEA,UAAM,UAAU,gBAAgB,KAAK,OAAO;AAC5C,YAAQ;AAAA,MACP;AAAA,QACC;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EAEQ,wBAAwB,WAAmC;AAElE,UAAM,UAAU,WAAW,WAAW;AACtC,UAAM,iBACL,WAAW,WAAW,EAAE,MAAM,CAAC,KAAK,CAAC;AACtC,UAAM,mBACL,WAAW,oBAAoB,EAAE,MAAM,CAAC,KAAK,CAAC;AAG/C,UAAM,UAAU,gBAAgB,KAAK,OAAO;AAC5C,YAAQ,UAAU,KAAK,uBAAuB;AAG9C,WAAO,MACN,QAAQ;AAAA,MACP,eAAe,cAAc;AAAA,MAC7B,eAAe,gBAAgB;AAAA,MAC/B;AAAA,IACD;AAAA,EACF;AAAA,EAEU,qBAA6C;AACtD,WAAO,KAAK;AAAA,EACb;AAAA,EAEU,2BAAmC;AAC5C,WAAO,KAAK;AAAA,EACb;AAAA,EAEU,sBAA6C;AACtD,QAAI,CAAC,KAAK,iBAAiB;AAC1B,aAAO;AAAA,IACR;AAEA,UAAM,YAAY,KAAK;AACvB,SAAK,kBAAkB;AAEvB,UAAM,qBAAqB,KAAK,iCAAiC;AAAA,MAChE,UAAU,MAAM;AAAA,IACjB;AAGA,cAAU,WAAW,KAAK;AAG1B,QAAI,oBAAoB;AACvB,yBAAmB,OAAO;AAC1B,WAAK,kBAAkB;AAAA,IACxB;AAGA,SAAK,aAAa,KAAK,EAAE,KAAK;AAG9B,QAAI,KAAK,SAAS;AACjB,WAAK,wBAAwB,EAAE;AAAA,IAChC;AACA,SAAK,oBAAoB,KAAK,SAAS;AAEvC,WAAO;AAAA,EACR;AAAA,EAEmB,gBAAgB,QAAkC;AAEpE,UAAM,YAAY,OAAO,QAAQ,EAAE,YAAY,CAAC;AAChD,cAAU,UAAU,IAAI,OAAO;AAG/B,SAAK,aAAa,KAAK,iBAAiB,SAAS;AAGjD,UAAM,wBAAwB,OAAO,WAAW,EAAE,gBAAgB,CAAC;AAGnE,SAAK,UAAU,KAAK;AAAA,MACnB,KAAK,qBAAqB;AAAA,QACzB;AAAA,QACA;AAAA,QACA;AAAA,UACC,wBAAwB,wBAAC,QAAQ,YAChC,KAAK,uBAAuB,QAAQ,OAAO,GADpB;AAAA,UAExB,aAAa,mBAAmB;AAAA,UAChC,eAAe,wBAAC,WACf,KAAK,kBAAkB,iBAAiB,OAAO,EAAE,GADnC;AAAA,UAEf,yBAAyB,6BACxB,KAAK,oCAAoC,GADjB;AAAA,UAEzB,iBAAiB;AAAA,YAChB;AAAA,YACA;AAAA,UACD;AAAA,UACA,iBAAiB,KAAK;AAAA,UACtB,eAAe,KAAK;AAAA,QACrB;AAAA,MACD;AAAA,IACD;AAEA,SAAK,wBAAwB,EAAE;AAE/B,WAAO;AAAA,EACR;AAAA,EAEU,iBAAiB,QAA2C;AACrE,UAAM,iBAAiB,OAAO,QAAQ,EAAE,cAAc,CAAC;AACvD,UAAM,aAAa,OAAO,gBAAgB,EAAE,IAAI,CAAC;AACjD,SAAK,oBAAoB;AACzB,UAAM,QAAQ,KAAK;AAAA,MAClB,KAAK,aAAa;AAAA,QACjB,wBAAwB,OAAO;AAAA,QAC/B;AAAA,QACA;AAAA,MACD;AAAA,IACD;AACA,WAAO;AAAA,MACN,aAAa,wBAAC,IAAI,OAAO,eAAe;AAEvC,YACC,CAAC,KAAK,mBACN,KAAK,gBAAgB,MAAM,MAAM,IAChC;AACD,qBAAW,YAAY;AACvB,gBAAM;AAAA,YACL,aACG;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,YACD,IACC;AAAA,UACJ;AAAA,QACD;AAAA,MACD,GAlBa;AAAA,MAoBb,cAAc,6BAAM;AACnB,mBAAW,MAAM,QAAQ,KAAK,uBAC3B,KAAK,SAAS,KAAK,oBAAoB,KAAK,KAC5C;AAAA,MACJ,GAJc;AAAA,IAKf;AAAA,EACD;AAAA,EAEU,mBAAgC;AACzC,WAAO,EAAE,YAAY;AAAA,EACtB;AAAA,EAEU,mBAAgC;AACzC,WAAO,EAAE,YAAY;AAAA,EACtB;AAAA,EAES,eAAqB;AAC7B,UAAM,aAAa;AAGnB,UAAM,aAAa,gBAAgB,KAAK,UAAU;AAClD,eAAW,aAAa;AAAA,EACzB;AAAA,EAEU,uBACT,QACA,SAC8B;AAE9B,QAAI,KAAK,iBAAiB;AACzB,aAAO,KAAK,gBAAgB,kBAAkB,QAAQ,OAAO;AAAA,IAC9D;AAEA,WAAO,qBAAqB,KAAK,sBAAsB,QAAQ,OAAO;AAAA,EACvE;AAAA,EAEU,yBAAkC;AAE3C,QAAI,KAAK,iBAAiB;AACzB,aAAO,KAAK,gBAAgB,kBAAkB;AAAA,IAC/C;AAEA,WAAO;AAAA,EACR;AAAA,EAEmB,kBAAkB,QAAkC;AACtE,UAAM,mBAAmB,OAAO,QAAQ,EAAE,UAAU,CAAC;AAErD,SAAK,cAAc,KAAK;AAAA,MACvB,IAAI,YAAY,kBAAkB,wBAAwB;AAAA,IAC3D;AACA,SAAK,YAAY,KAAK;AAEtB,WAAO;AAAA,EACR;AAAA,EAEA,qBAAqB,IAA4C;AAChE,UAAM,gBAAgB,KAAK,2BAA2B,IAAI,EAAE;AAE5D,WAAO,gBAAgB,cAAc,WAAW;AAAA,EACjD;AAAA,EAEU,sCAAuD;AAChE,WAAO,gBAAgB;AAAA,EACxB;AAAA,EAES,OACR,OACA,QACA,KACA,MACO;AACP,UAAM,OAAO,OAAO,QAAQ,KAAK,IAAI;AAGrC,SAAK,kBAAkB,UAAU;AAAA,MAChC,MAAM,eAAe,OAAO,MAAM,EAAE;AAAA,IACrC;AAGA,SAAK,iBAAiB,OAAO,KAAK,eAAe;AAAA,EAClD;AAAA,EAEA,kBAAmB,QAA+B;AACjD,SAAK,iBAAiB;AACtB,SAAK,iBAAiB,kBAAkB,MAAM;AAAA,EAC/C;AAAA,EAEU,gBAAgB,aAA8B;AACvD,QAAI,KAAK,iBAAiB,MAAM,MAAM,aAAa;AAClD,aAAO;AAAA,IACR;AAEA,SAAK,iCAAiC,OAAO,WAAW;AACxD,SAAK,6BAA6B,OAAO,WAAW;AACpD,UAAM,gBAAgB,KAAK,2BAA2B,IAAI,WAAW;AACrE,QAAI,eAAe;AAClB,oBAAc,UAAU,QAAQ;AAChC,cAAQ,cAAc,UAAU;AAChC,WAAK,2BAA2B,OAAO,WAAW;AAAA,IACnD;AAEA,WAAO;AAAA,EACR;AAAA,EAES,UAAgB;AACxB,SAAK,iCAAiC,MAAM;AAC5C,SAAK,6BAA6B,MAAM;AAExC,SAAK,2BAA2B,QAAQ,CAAC,kBAAkB;AAC1D,oBAAc,UAAU,QAAQ;AAChC,cAAQ,cAAc,UAAU;AAAA,IACjC,CAAC;AAED,SAAK,2BAA2B,MAAM;AAEtC,UAAM,QAAQ;AAAA,EACf;AACD;",
  "names": []
}
