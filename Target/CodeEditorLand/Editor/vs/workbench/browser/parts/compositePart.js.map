{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/parts/compositePart.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './media/compositepart.css';\nimport { localize } from '../../../nls.js';\nimport { defaultGenerator } from '../../../base/common/idGenerator.js';\nimport { IDisposable, dispose, DisposableStore, MutableDisposable, } from '../../../base/common/lifecycle.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { isCancellationError } from '../../../base/common/errors.js';\nimport { ActionsOrientation, IActionViewItem, prepareActions } from '../../../base/browser/ui/actionbar/actionbar.js';\nimport { ProgressBar } from '../../../base/browser/ui/progressbar/progressbar.js';\nimport { IAction } from '../../../base/common/actions.js';\nimport { Part, IPartOptions } from '../part.js';\nimport { Composite, CompositeRegistry } from '../composite.js';\nimport { IComposite } from '../../common/composite.js';\nimport { IWorkbenchLayoutService } from '../../services/layout/browser/layoutService.js';\nimport { IStorageService, StorageScope, StorageTarget } from '../../../platform/storage/common/storage.js';\nimport { IContextMenuService } from '../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection.js';\nimport { IProgressIndicator, IEditorProgressService } from '../../../platform/progress/common/progress.js';\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nimport { Dimension, append, $, hide, show } from '../../../base/browser/dom.js';\nimport { AnchorAlignment } from '../../../base/browser/ui/contextview/contextview.js';\nimport { assertIsDefined } from '../../../base/common/types.js';\nimport { createActionViewItem } from '../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { AbstractProgressScope, ScopedProgressIndicator } from '../../services/progress/browser/progressIndicator.js';\nimport { WorkbenchToolBar } from '../../../platform/actions/browser/toolbar.js';\nimport { defaultProgressBarStyles } from '../../../platform/theme/browser/defaultStyles.js';\nimport { IBoundarySashes } from '../../../base/browser/ui/sash/sash.js';\nimport { IBaseActionViewItemOptions } from '../../../base/browser/ui/actionbar/actionViewItems.js';\nimport { IHoverDelegate } from '../../../base/browser/ui/hover/hoverDelegate.js';\nimport { createInstantHoverDelegate, getDefaultHoverDelegate } from '../../../base/browser/ui/hover/hoverDelegateFactory.js';\nimport type { IHoverService } from '../../../platform/hover/browser/hover.js';\n\nexport interface ICompositeTitleLabel {\n\n\t/**\n\t * Asks to update the title for the composite with the given ID.\n\t */\n\tupdateTitle(id: string, title: string, keybinding?: string): void;\n\n\t/**\n\t * Called when theming information changes.\n\t */\n\tupdateStyles(): void;\n}\n\ninterface CompositeItem {\n\treadonly composite: Composite;\n\treadonly disposable: IDisposable;\n\treadonly progress: IProgressIndicator;\n}\n\nexport abstract class CompositePart<T extends Composite> extends Part {\n\n\tprotected readonly onDidCompositeOpen = this._register(new Emitter<{ composite: IComposite; focus: boolean }>());\n\tprotected readonly onDidCompositeClose = this._register(new Emitter<IComposite>());\n\n\tprotected toolBar: WorkbenchToolBar | undefined;\n\tprotected titleLabelElement: HTMLElement | undefined;\n\tprotected readonly toolbarHoverDelegate: IHoverDelegate;\n\n\tprivate readonly mapCompositeToCompositeContainer = new Map<string, HTMLElement>();\n\tprivate readonly mapActionsBindingToComposite = new Map<string, () => void>();\n\tprivate activeComposite: Composite | undefined;\n\tprivate lastActiveCompositeId: string;\n\tprivate readonly instantiatedCompositeItems = new Map<string, CompositeItem>();\n\tprotected titleLabel: ICompositeTitleLabel | undefined;\n\tprivate progressBar: ProgressBar | undefined;\n\tprivate contentAreaSize: Dimension | undefined;\n\tprivate readonly actionsListener = this._register(new MutableDisposable());\n\tprivate currentCompositeOpenToken: string | undefined;\n\tprivate boundarySashes: IBoundarySashes | undefined;\n\n\tconstructor(\n\t\tprivate readonly notificationService: INotificationService,\n\t\tprotected readonly storageService: IStorageService,\n\t\tprotected readonly contextMenuService: IContextMenuService,\n\t\tlayoutService: IWorkbenchLayoutService,\n\t\tprotected readonly keybindingService: IKeybindingService,\n\t\tprivate readonly hoverService: IHoverService,\n\t\tprotected readonly instantiationService: IInstantiationService,\n\t\tthemeService: IThemeService,\n\t\tprotected readonly registry: CompositeRegistry<T>,\n\t\tprivate readonly activeCompositeSettingsKey: string,\n\t\tprivate readonly defaultCompositeId: string,\n\t\tprivate readonly nameForTelemetry: string,\n\t\tprivate readonly compositeCSSClass: string,\n\t\tprivate readonly titleForegroundColor: string | undefined,\n\t\tid: string,\n\t\toptions: IPartOptions\n\t) {\n\t\tsuper(id, options, themeService, storageService, layoutService);\n\n\t\tthis.lastActiveCompositeId = storageService.get(activeCompositeSettingsKey, StorageScope.WORKSPACE, this.defaultCompositeId);\n\t\tthis.toolbarHoverDelegate = this._register(createInstantHoverDelegate());\n\t}\n\n\tprotected openComposite(id: string, focus?: boolean): Composite | undefined {\n\n\t\t// Check if composite already visible and just focus in that case\n\t\tif (this.activeComposite?.getId() === id) {\n\t\t\tif (focus) {\n\t\t\t\tthis.activeComposite.focus();\n\t\t\t}\n\n\t\t\t// Fullfill promise with composite that is being opened\n\t\t\treturn this.activeComposite;\n\t\t}\n\n\t\t// We cannot open the composite if we have not been created yet\n\t\tif (!this.element) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Open\n\t\treturn this.doOpenComposite(id, focus);\n\t}\n\n\tprivate doOpenComposite(id: string, focus: boolean = false): Composite | undefined {\n\n\t\t// Use a generated token to avoid race conditions from long running promises\n\t\tconst currentCompositeOpenToken = defaultGenerator.nextId();\n\t\tthis.currentCompositeOpenToken = currentCompositeOpenToken;\n\n\t\t// Hide current\n\t\tif (this.activeComposite) {\n\t\t\tthis.hideActiveComposite();\n\t\t}\n\n\t\t// Update Title\n\t\tthis.updateTitle(id);\n\n\t\t// Create composite\n\t\tconst composite = this.createComposite(id, true);\n\n\t\t// Check if another composite opened meanwhile and return in that case\n\t\tif ((this.currentCompositeOpenToken !== currentCompositeOpenToken) || (this.activeComposite && this.activeComposite.getId() !== composite.getId())) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Check if composite already visible and just focus in that case\n\t\tif (this.activeComposite?.getId() === composite.getId()) {\n\t\t\tif (focus) {\n\t\t\t\tcomposite.focus();\n\t\t\t}\n\n\t\t\tthis.onDidCompositeOpen.fire({ composite, focus });\n\t\t\treturn composite;\n\t\t}\n\n\t\t// Show Composite and Focus\n\t\tthis.showComposite(composite);\n\t\tif (focus) {\n\t\t\tcomposite.focus();\n\t\t}\n\n\t\t// Return with the composite that is being opened\n\t\tif (composite) {\n\t\t\tthis.onDidCompositeOpen.fire({ composite, focus });\n\t\t}\n\n\t\treturn composite;\n\t}\n\n\tprotected createComposite(id: string, isActive?: boolean): Composite {\n\n\t\t// Check if composite is already created\n\t\tconst compositeItem = this.instantiatedCompositeItems.get(id);\n\t\tif (compositeItem) {\n\t\t\treturn compositeItem.composite;\n\t\t}\n\n\t\t// Instantiate composite from registry otherwise\n\t\tconst compositeDescriptor = this.registry.getComposite(id);\n\t\tif (compositeDescriptor) {\n\t\t\tconst that = this;\n\t\t\tconst compositeProgressIndicator = new ScopedProgressIndicator(assertIsDefined(this.progressBar), new class extends AbstractProgressScope {\n\t\t\t\tconstructor() {\n\t\t\t\t\tsuper(compositeDescriptor!.id, !!isActive);\n\t\t\t\t\tthis._register(that.onDidCompositeOpen.event(e => this.onScopeOpened(e.composite.getId())));\n\t\t\t\t\tthis._register(that.onDidCompositeClose.event(e => this.onScopeClosed(e.getId())));\n\t\t\t\t}\n\t\t\t}());\n\t\t\tconst compositeInstantiationService = this._register(this.instantiationService.createChild(new ServiceCollection(\n\t\t\t\t[IEditorProgressService, compositeProgressIndicator] // provide the editor progress service for any editors instantiated within the composite\n\t\t\t)));\n\n\t\t\tconst composite = compositeDescriptor.instantiate(compositeInstantiationService);\n\t\t\tconst disposable = new DisposableStore();\n\n\t\t\t// Remember as Instantiated\n\t\t\tthis.instantiatedCompositeItems.set(id, { composite, disposable, progress: compositeProgressIndicator });\n\n\t\t\t// Register to title area update events from the composite\n\t\t\tdisposable.add(composite.onTitleAreaUpdate(() => this.onTitleAreaUpdate(composite.getId()), this));\n\t\t\tdisposable.add(compositeInstantiationService);\n\n\t\t\treturn composite;\n\t\t}\n\n\t\tthrow new Error(`Unable to find composite with id ${id}`);\n\t}\n\n\tprotected showComposite(composite: Composite): void {\n\n\t\t// Remember Composite\n\t\tthis.activeComposite = composite;\n\n\t\t// Store in preferences\n\t\tconst id = this.activeComposite.getId();\n\t\tif (id !== this.defaultCompositeId) {\n\t\t\tthis.storageService.store(this.activeCompositeSettingsKey, id, StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\t} else {\n\t\t\tthis.storageService.remove(this.activeCompositeSettingsKey, StorageScope.WORKSPACE);\n\t\t}\n\n\t\t// Remember\n\t\tthis.lastActiveCompositeId = this.activeComposite.getId();\n\n\t\t// Composites created for the first time\n\t\tlet compositeContainer = this.mapCompositeToCompositeContainer.get(composite.getId());\n\t\tif (!compositeContainer) {\n\n\t\t\t// Build Container off-DOM\n\t\t\tcompositeContainer = $('.composite');\n\t\t\tcompositeContainer.classList.add(...this.compositeCSSClass.split(' '));\n\t\t\tcompositeContainer.id = composite.getId();\n\n\t\t\tcomposite.create(compositeContainer);\n\t\t\tcomposite.updateStyles();\n\n\t\t\t// Remember composite container\n\t\t\tthis.mapCompositeToCompositeContainer.set(composite.getId(), compositeContainer);\n\t\t}\n\n\t\t// Fill Content and Actions\n\t\t// Make sure that the user meanwhile did not open another composite or closed the part containing the composite\n\t\tif (!this.activeComposite || composite.getId() !== this.activeComposite.getId()) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Take Composite on-DOM and show\n\t\tconst contentArea = this.getContentArea();\n\t\tcontentArea?.appendChild(compositeContainer);\n\t\tshow(compositeContainer);\n\n\t\t// Setup action runner\n\t\tconst toolBar = assertIsDefined(this.toolBar);\n\t\ttoolBar.actionRunner = composite.getActionRunner();\n\n\t\t// Update title with composite title if it differs from descriptor\n\t\tconst descriptor = this.registry.getComposite(composite.getId());\n\t\tif (descriptor && descriptor.name !== composite.getTitle()) {\n\t\t\tthis.updateTitle(composite.getId(), composite.getTitle());\n\t\t}\n\n\t\t// Handle Composite Actions\n\t\tlet actionsBinding = this.mapActionsBindingToComposite.get(composite.getId());\n\t\tif (!actionsBinding) {\n\t\t\tactionsBinding = this.collectCompositeActions(composite);\n\t\t\tthis.mapActionsBindingToComposite.set(composite.getId(), actionsBinding);\n\t\t}\n\t\tactionsBinding();\n\n\t\t// Action Run Handling\n\t\tthis.actionsListener.value = toolBar.actionRunner.onDidRun(e => {\n\n\t\t\t// Check for Error\n\t\t\tif (e.error && !isCancellationError(e.error)) {\n\t\t\t\tthis.notificationService.error(e.error);\n\t\t\t}\n\t\t});\n\n\t\t// Indicate to composite that it is now visible\n\t\tcomposite.setVisible(true);\n\n\t\t// Make sure that the user meanwhile did not open another composite or closed the part containing the composite\n\t\tif (!this.activeComposite || composite.getId() !== this.activeComposite.getId()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure the composite is layed out\n\t\tif (this.contentAreaSize) {\n\t\t\tcomposite.layout(this.contentAreaSize);\n\t\t}\n\n\t\t// Make sure boundary sashes are propagated\n\t\tif (this.boundarySashes) {\n\t\t\tcomposite.setBoundarySashes(this.boundarySashes);\n\t\t}\n\t}\n\n\tprotected onTitleAreaUpdate(compositeId: string): void {\n\n\t\t// Title\n\t\tconst composite = this.instantiatedCompositeItems.get(compositeId);\n\t\tif (composite) {\n\t\t\tthis.updateTitle(compositeId, composite.composite.getTitle());\n\t\t}\n\n\t\t// Active Composite\n\t\tif (this.activeComposite?.getId() === compositeId) {\n\t\t\t// Actions\n\t\t\tconst actionsBinding = this.collectCompositeActions(this.activeComposite);\n\t\t\tthis.mapActionsBindingToComposite.set(this.activeComposite.getId(), actionsBinding);\n\t\t\tactionsBinding();\n\t\t}\n\n\t\t// Otherwise invalidate actions binding for next time when the composite becomes visible\n\t\telse {\n\t\t\tthis.mapActionsBindingToComposite.delete(compositeId);\n\t\t}\n\t}\n\n\tprivate updateTitle(compositeId: string, compositeTitle?: string): void {\n\t\tconst compositeDescriptor = this.registry.getComposite(compositeId);\n\t\tif (!compositeDescriptor || !this.titleLabel) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!compositeTitle) {\n\t\t\tcompositeTitle = compositeDescriptor.name;\n\t\t}\n\n\t\tconst keybinding = this.keybindingService.lookupKeybinding(compositeId);\n\n\t\tthis.titleLabel.updateTitle(compositeId, compositeTitle, keybinding?.getLabel() ?? undefined);\n\n\t\tconst toolBar = assertIsDefined(this.toolBar);\n\t\ttoolBar.setAriaLabel(localize('ariaCompositeToolbarLabel', \"{0} actions\", compositeTitle));\n\t}\n\n\tprivate collectCompositeActions(composite?: Composite): () => void {\n\n\t\t// From Composite\n\t\tconst menuIds = composite?.getMenuIds();\n\t\tconst primaryActions: IAction[] = composite?.getActions().slice(0) || [];\n\t\tconst secondaryActions: IAction[] = composite?.getSecondaryActions().slice(0) || [];\n\n\t\t// Update context\n\t\tconst toolBar = assertIsDefined(this.toolBar);\n\t\ttoolBar.context = this.actionsContextProvider();\n\n\t\t// Return fn to set into toolbar\n\t\treturn () => toolBar.setActions(prepareActions(primaryActions), prepareActions(secondaryActions), menuIds);\n\t}\n\n\tprotected getActiveComposite(): IComposite | undefined {\n\t\treturn this.activeComposite;\n\t}\n\n\tprotected getLastActiveCompositeId(): string {\n\t\treturn this.lastActiveCompositeId;\n\t}\n\n\tprotected hideActiveComposite(): Composite | undefined {\n\t\tif (!this.activeComposite) {\n\t\t\treturn undefined; // Nothing to do\n\t\t}\n\n\t\tconst composite = this.activeComposite;\n\t\tthis.activeComposite = undefined;\n\n\t\tconst compositeContainer = this.mapCompositeToCompositeContainer.get(composite.getId());\n\n\t\t// Indicate to Composite\n\t\tcomposite.setVisible(false);\n\n\t\t// Take Container Off-DOM and hide\n\t\tif (compositeContainer) {\n\t\t\tcompositeContainer.remove();\n\t\t\thide(compositeContainer);\n\t\t}\n\n\t\t// Clear any running Progress\n\t\tthis.progressBar?.stop().hide();\n\n\t\t// Empty Actions\n\t\tif (this.toolBar) {\n\t\t\tthis.collectCompositeActions()();\n\t\t}\n\t\tthis.onDidCompositeClose.fire(composite);\n\n\t\treturn composite;\n\t}\n\n\tprotected override createTitleArea(parent: HTMLElement): HTMLElement {\n\n\t\t// Title Area Container\n\t\tconst titleArea = append(parent, $('.composite'));\n\t\ttitleArea.classList.add('title');\n\n\t\t// Left Title Label\n\t\tthis.titleLabel = this.createTitleLabel(titleArea);\n\n\t\t// Right Actions Container\n\t\tconst titleActionsContainer = append(titleArea, $('.title-actions'));\n\n\t\t// Toolbar\n\t\tthis.toolBar = this._register(this.instantiationService.createInstance(WorkbenchToolBar, titleActionsContainer, {\n\t\t\tactionViewItemProvider: (action, options) => this.actionViewItemProvider(action, options),\n\t\t\torientation: ActionsOrientation.HORIZONTAL,\n\t\t\tgetKeyBinding: action => this.keybindingService.lookupKeybinding(action.id),\n\t\t\tanchorAlignmentProvider: () => this.getTitleAreaDropDownAnchorAlignment(),\n\t\t\ttoggleMenuTitle: localize('viewsAndMoreActions', \"Views and More Actions...\"),\n\t\t\ttelemetrySource: this.nameForTelemetry,\n\t\t\thoverDelegate: this.toolbarHoverDelegate\n\t\t}));\n\n\t\tthis.collectCompositeActions()();\n\n\t\treturn titleArea;\n\t}\n\n\tprotected createTitleLabel(parent: HTMLElement): ICompositeTitleLabel {\n\t\tconst titleContainer = append(parent, $('.title-label'));\n\t\tconst titleLabel = append(titleContainer, $('h2'));\n\t\tthis.titleLabelElement = titleLabel;\n\t\tconst hover = this._register(this.hoverService.setupManagedHover(getDefaultHoverDelegate('mouse'), titleLabel, ''));\n\n\t\tconst $this = this;\n\t\treturn {\n\t\t\tupdateTitle: (id, title, keybinding) => {\n\t\t\t\t// The title label is shared for all composites in the base CompositePart\n\t\t\t\tif (!this.activeComposite || this.activeComposite.getId() === id) {\n\t\t\t\t\ttitleLabel.innerText = title;\n\t\t\t\t\thover.update(keybinding ? localize('titleTooltip', \"{0} ({1})\", title, keybinding) : title);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tupdateStyles: () => {\n\t\t\t\ttitleLabel.style.color = $this.titleForegroundColor ? $this.getColor($this.titleForegroundColor) || '' : '';\n\t\t\t}\n\t\t};\n\t}\n\n\tprotected createHeaderArea(): HTMLElement {\n\t\treturn $('.composite');\n\t}\n\n\tprotected createFooterArea(): HTMLElement {\n\t\treturn $('.composite');\n\t}\n\n\toverride updateStyles(): void {\n\t\tsuper.updateStyles();\n\n\t\t// Forward to title label\n\t\tconst titleLabel = assertIsDefined(this.titleLabel);\n\t\ttitleLabel.updateStyles();\n\t}\n\n\tprotected actionViewItemProvider(action: IAction, options: IBaseActionViewItemOptions): IActionViewItem | undefined {\n\n\t\t// Check Active Composite\n\t\tif (this.activeComposite) {\n\t\t\treturn this.activeComposite.getActionViewItem(action, options);\n\t\t}\n\n\t\treturn createActionViewItem(this.instantiationService, action, options);\n\t}\n\n\tprotected actionsContextProvider(): unknown {\n\n\t\t// Check Active Composite\n\t\tif (this.activeComposite) {\n\t\t\treturn this.activeComposite.getActionsContext();\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprotected override createContentArea(parent: HTMLElement): HTMLElement {\n\t\tconst contentContainer = append(parent, $('.content'));\n\n\t\tthis.progressBar = this._register(new ProgressBar(contentContainer, defaultProgressBarStyles));\n\t\tthis.progressBar.hide();\n\n\t\treturn contentContainer;\n\t}\n\n\tgetProgressIndicator(id: string): IProgressIndicator | undefined {\n\t\tconst compositeItem = this.instantiatedCompositeItems.get(id);\n\n\t\treturn compositeItem ? compositeItem.progress : undefined;\n\t}\n\n\tprotected getTitleAreaDropDownAnchorAlignment(): AnchorAlignment {\n\t\treturn AnchorAlignment.RIGHT;\n\t}\n\n\toverride layout(width: number, height: number, top: number, left: number): void {\n\t\tsuper.layout(width, height, top, left);\n\n\t\t// Layout contents\n\t\tthis.contentAreaSize = Dimension.lift(super.layoutContents(width, height).contentSize);\n\n\t\t// Layout composite\n\t\tthis.activeComposite?.layout(this.contentAreaSize);\n\t}\n\n\tsetBoundarySashes?(sashes: IBoundarySashes): void {\n\t\tthis.boundarySashes = sashes;\n\t\tthis.activeComposite?.setBoundarySashes(sashes);\n\t}\n\n\tprotected removeComposite(compositeId: string): boolean {\n\t\tif (this.activeComposite?.getId() === compositeId) {\n\t\t\treturn false; // do not remove active composite\n\t\t}\n\n\t\tthis.mapCompositeToCompositeContainer.delete(compositeId);\n\t\tthis.mapActionsBindingToComposite.delete(compositeId);\n\t\tconst compositeItem = this.instantiatedCompositeItems.get(compositeId);\n\t\tif (compositeItem) {\n\t\t\tcompositeItem.composite.dispose();\n\t\t\tdispose(compositeItem.disposable);\n\t\t\tthis.instantiatedCompositeItems.delete(compositeId);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\toverride dispose(): void {\n\t\tthis.mapCompositeToCompositeContainer.clear();\n\t\tthis.mapActionsBindingToComposite.clear();\n\n\t\tthis.instantiatedCompositeItems.forEach(compositeItem => {\n\t\t\tcompositeItem.composite.dispose();\n\t\t\tdispose(compositeItem.disposable);\n\t\t});\n\n\t\tthis.instantiatedCompositeItems.clear();\n\n\t\tsuper.dispose();\n\t}\n}\n"],
  "mappings": ";;AAKA,OAAO;AACP,SAAS,gBAAgB;AACzB,SAAS,wBAAwB;AACjC,SAAS,aAAa,SAAS,iBAAiB,yBAA0B;AAC1E,SAAS,eAAe;AACxB,SAAS,2BAA2B;AACpC,SAAS,oBAAoB,iBAAiB,sBAAsB;AACpE,SAAS,mBAAmB;AAC5B,SAAS,eAAe;AACxB,SAAS,MAAM,oBAAoB;AACnC,SAAS,WAAW,yBAAyB;AAC7C,SAAS,kBAAkB;AAC3B,SAAS,+BAA+B;AACxC,SAAS,iBAAiB,cAAc,qBAAqB;AAC7D,SAAS,2BAA2B;AACpC,SAAS,6BAA6B;AACtC,SAAS,yBAAyB;AAClC,SAAS,oBAAoB,8BAA8B;AAC3D,SAAS,0BAA0B;AACnC,SAAS,qBAAqB;AAC9B,SAAS,4BAA4B;AACrC,SAAS,WAAW,QAAQ,GAAG,MAAM,YAAY;AACjD,SAAS,uBAAuB;AAChC,SAAS,uBAAuB;AAChC,SAAS,4BAA4B;AACrC,SAAS,uBAAuB,+BAA+B;AAC/D,SAAS,wBAAwB;AACjC,SAAS,gCAAgC;AACzC,SAAS,uBAAuB;AAChC,SAAS,kCAAkC;AAC3C,SAAS,sBAAsB;AAC/B,SAAS,4BAA4B,+BAA+B;AAsB7D,MAAe,sBAA2C,KAAK;AAAA,EAqBrE,YACkB,qBACE,gBACA,oBACnB,eACmB,mBACF,cACE,sBACnB,cACmB,UACF,4BACA,oBACA,kBACA,mBACA,sBACjB,IACA,SACC;AACD,UAAM,IAAI,SAAS,cAAc,gBAAgB,aAAa;AAjB7C;AACE;AACA;AAEA;AACF;AACE;AAEA;AACF;AACA;AACA;AACA;AACA;AAMjB,SAAK,wBAAwB,eAAe,IAAI,4BAA4B,aAAa,WAAW,KAAK,kBAAkB;AAC3H,SAAK,uBAAuB,KAAK,UAAU,2BAA2B,CAAC;AAAA,EACxE;AAAA,EArGD,OA0DsE;AAAA;AAAA;AAAA,EAElD,qBAAqB,KAAK,UAAU,IAAI,QAAmD,CAAC;AAAA,EAC5F,sBAAsB,KAAK,UAAU,IAAI,QAAoB,CAAC;AAAA,EAEvE;AAAA,EACA;AAAA,EACS;AAAA,EAEF,mCAAmC,oBAAI,IAAyB;AAAA,EAChE,+BAA+B,oBAAI,IAAwB;AAAA,EACpE;AAAA,EACA;AAAA,EACS,6BAA6B,oBAAI,IAA2B;AAAA,EACnE;AAAA,EACF;AAAA,EACA;AAAA,EACS,kBAAkB,KAAK,UAAU,IAAI,kBAAkB,CAAC;AAAA,EACjE;AAAA,EACA;AAAA,EA0BE,cAAc,IAAY,OAAwC;AAG3E,QAAI,KAAK,iBAAiB,MAAM,MAAM,IAAI;AACzC,UAAI,OAAO;AACV,aAAK,gBAAgB,MAAM;AAAA,MAC5B;AAGA,aAAO,KAAK;AAAA,IACb;AAGA,QAAI,CAAC,KAAK,SAAS;AAClB;AAAA,IACD;AAGA,WAAO,KAAK,gBAAgB,IAAI,KAAK;AAAA,EACtC;AAAA,EAEQ,gBAAgB,IAAY,QAAiB,OAA8B;AAGlF,UAAM,4BAA4B,iBAAiB,OAAO;AAC1D,SAAK,4BAA4B;AAGjC,QAAI,KAAK,iBAAiB;AACzB,WAAK,oBAAoB;AAAA,IAC1B;AAGA,SAAK,YAAY,EAAE;AAGnB,UAAM,YAAY,KAAK,gBAAgB,IAAI,IAAI;AAG/C,QAAK,KAAK,8BAA8B,6BAA+B,KAAK,mBAAmB,KAAK,gBAAgB,MAAM,MAAM,UAAU,MAAM,GAAI;AACnJ,aAAO;AAAA,IACR;AAGA,QAAI,KAAK,iBAAiB,MAAM,MAAM,UAAU,MAAM,GAAG;AACxD,UAAI,OAAO;AACV,kBAAU,MAAM;AAAA,MACjB;AAEA,WAAK,mBAAmB,KAAK,EAAE,WAAW,MAAM,CAAC;AACjD,aAAO;AAAA,IACR;AAGA,SAAK,cAAc,SAAS;AAC5B,QAAI,OAAO;AACV,gBAAU,MAAM;AAAA,IACjB;AAGA,QAAI,WAAW;AACd,WAAK,mBAAmB,KAAK,EAAE,WAAW,MAAM,CAAC;AAAA,IAClD;AAEA,WAAO;AAAA,EACR;AAAA,EAEU,gBAAgB,IAAY,UAA+B;AAGpE,UAAM,gBAAgB,KAAK,2BAA2B,IAAI,EAAE;AAC5D,QAAI,eAAe;AAClB,aAAO,cAAc;AAAA,IACtB;AAGA,UAAM,sBAAsB,KAAK,SAAS,aAAa,EAAE;AACzD,QAAI,qBAAqB;AACxB,YAAM,OAAO;AACb,YAAM,6BAA6B,IAAI,wBAAwB,gBAAgB,KAAK,WAAW,GAAG,IAAI,cAAc,sBAAsB;AAAA,QACzI,cAAc;AACb,gBAAM,oBAAqB,IAAI,CAAC,CAAC,QAAQ;AACzC,eAAK,UAAU,KAAK,mBAAmB,MAAM,OAAK,KAAK,cAAc,EAAE,UAAU,MAAM,CAAC,CAAC,CAAC;AAC1F,eAAK,UAAU,KAAK,oBAAoB,MAAM,OAAK,KAAK,cAAc,EAAE,MAAM,CAAC,CAAC,CAAC;AAAA,QAClF;AAAA,MACD,EAAE,CAAC;AACH,YAAM,gCAAgC,KAAK,UAAU,KAAK,qBAAqB,YAAY,IAAI;AAAA,QAC9F,CAAC,wBAAwB,0BAA0B;AAAA;AAAA,MACpD,CAAC,CAAC;AAEF,YAAM,YAAY,oBAAoB,YAAY,6BAA6B;AAC/E,YAAM,aAAa,IAAI,gBAAgB;AAGvC,WAAK,2BAA2B,IAAI,IAAI,EAAE,WAAW,YAAY,UAAU,2BAA2B,CAAC;AAGvG,iBAAW,IAAI,UAAU,kBAAkB,MAAM,KAAK,kBAAkB,UAAU,MAAM,CAAC,GAAG,IAAI,CAAC;AACjG,iBAAW,IAAI,6BAA6B;AAE5C,aAAO;AAAA,IACR;AAEA,UAAM,IAAI,MAAM,oCAAoC,EAAE,EAAE;AAAA,EACzD;AAAA,EAEU,cAAc,WAA4B;AAGnD,SAAK,kBAAkB;AAGvB,UAAM,KAAK,KAAK,gBAAgB,MAAM;AACtC,QAAI,OAAO,KAAK,oBAAoB;AACnC,WAAK,eAAe,MAAM,KAAK,4BAA4B,IAAI,aAAa,WAAW,cAAc,OAAO;AAAA,IAC7G,OAAO;AACN,WAAK,eAAe,OAAO,KAAK,4BAA4B,aAAa,SAAS;AAAA,IACnF;AAGA,SAAK,wBAAwB,KAAK,gBAAgB,MAAM;AAGxD,QAAI,qBAAqB,KAAK,iCAAiC,IAAI,UAAU,MAAM,CAAC;AACpF,QAAI,CAAC,oBAAoB;AAGxB,2BAAqB,EAAE,YAAY;AACnC,yBAAmB,UAAU,IAAI,GAAG,KAAK,kBAAkB,MAAM,GAAG,CAAC;AACrE,yBAAmB,KAAK,UAAU,MAAM;AAExC,gBAAU,OAAO,kBAAkB;AACnC,gBAAU,aAAa;AAGvB,WAAK,iCAAiC,IAAI,UAAU,MAAM,GAAG,kBAAkB;AAAA,IAChF;AAIA,QAAI,CAAC,KAAK,mBAAmB,UAAU,MAAM,MAAM,KAAK,gBAAgB,MAAM,GAAG;AAChF,aAAO;AAAA,IACR;AAGA,UAAM,cAAc,KAAK,eAAe;AACxC,iBAAa,YAAY,kBAAkB;AAC3C,SAAK,kBAAkB;AAGvB,UAAM,UAAU,gBAAgB,KAAK,OAAO;AAC5C,YAAQ,eAAe,UAAU,gBAAgB;AAGjD,UAAM,aAAa,KAAK,SAAS,aAAa,UAAU,MAAM,CAAC;AAC/D,QAAI,cAAc,WAAW,SAAS,UAAU,SAAS,GAAG;AAC3D,WAAK,YAAY,UAAU,MAAM,GAAG,UAAU,SAAS,CAAC;AAAA,IACzD;AAGA,QAAI,iBAAiB,KAAK,6BAA6B,IAAI,UAAU,MAAM,CAAC;AAC5E,QAAI,CAAC,gBAAgB;AACpB,uBAAiB,KAAK,wBAAwB,SAAS;AACvD,WAAK,6BAA6B,IAAI,UAAU,MAAM,GAAG,cAAc;AAAA,IACxE;AACA,mBAAe;AAGf,SAAK,gBAAgB,QAAQ,QAAQ,aAAa,SAAS,OAAK;AAG/D,UAAI,EAAE,SAAS,CAAC,oBAAoB,EAAE,KAAK,GAAG;AAC7C,aAAK,oBAAoB,MAAM,EAAE,KAAK;AAAA,MACvC;AAAA,IACD,CAAC;AAGD,cAAU,WAAW,IAAI;AAGzB,QAAI,CAAC,KAAK,mBAAmB,UAAU,MAAM,MAAM,KAAK,gBAAgB,MAAM,GAAG;AAChF;AAAA,IACD;AAGA,QAAI,KAAK,iBAAiB;AACzB,gBAAU,OAAO,KAAK,eAAe;AAAA,IACtC;AAGA,QAAI,KAAK,gBAAgB;AACxB,gBAAU,kBAAkB,KAAK,cAAc;AAAA,IAChD;AAAA,EACD;AAAA,EAEU,kBAAkB,aAA2B;AAGtD,UAAM,YAAY,KAAK,2BAA2B,IAAI,WAAW;AACjE,QAAI,WAAW;AACd,WAAK,YAAY,aAAa,UAAU,UAAU,SAAS,CAAC;AAAA,IAC7D;AAGA,QAAI,KAAK,iBAAiB,MAAM,MAAM,aAAa;AAElD,YAAM,iBAAiB,KAAK,wBAAwB,KAAK,eAAe;AACxE,WAAK,6BAA6B,IAAI,KAAK,gBAAgB,MAAM,GAAG,cAAc;AAClF,qBAAe;AAAA,IAChB,OAGK;AACJ,WAAK,6BAA6B,OAAO,WAAW;AAAA,IACrD;AAAA,EACD;AAAA,EAEQ,YAAY,aAAqB,gBAA+B;AACvE,UAAM,sBAAsB,KAAK,SAAS,aAAa,WAAW;AAClE,QAAI,CAAC,uBAAuB,CAAC,KAAK,YAAY;AAC7C;AAAA,IACD;AAEA,QAAI,CAAC,gBAAgB;AACpB,uBAAiB,oBAAoB;AAAA,IACtC;AAEA,UAAM,aAAa,KAAK,kBAAkB,iBAAiB,WAAW;AAEtE,SAAK,WAAW,YAAY,aAAa,gBAAgB,YAAY,SAAS,KAAK,MAAS;AAE5F,UAAM,UAAU,gBAAgB,KAAK,OAAO;AAC5C,YAAQ,aAAa,SAAS,6BAA6B,eAAe,cAAc,CAAC;AAAA,EAC1F;AAAA,EAEQ,wBAAwB,WAAmC;AAGlE,UAAM,UAAU,WAAW,WAAW;AACtC,UAAM,iBAA4B,WAAW,WAAW,EAAE,MAAM,CAAC,KAAK,CAAC;AACvE,UAAM,mBAA8B,WAAW,oBAAoB,EAAE,MAAM,CAAC,KAAK,CAAC;AAGlF,UAAM,UAAU,gBAAgB,KAAK,OAAO;AAC5C,YAAQ,UAAU,KAAK,uBAAuB;AAG9C,WAAO,MAAM,QAAQ,WAAW,eAAe,cAAc,GAAG,eAAe,gBAAgB,GAAG,OAAO;AAAA,EAC1G;AAAA,EAEU,qBAA6C;AACtD,WAAO,KAAK;AAAA,EACb;AAAA,EAEU,2BAAmC;AAC5C,WAAO,KAAK;AAAA,EACb;AAAA,EAEU,sBAA6C;AACtD,QAAI,CAAC,KAAK,iBAAiB;AAC1B,aAAO;AAAA,IACR;AAEA,UAAM,YAAY,KAAK;AACvB,SAAK,kBAAkB;AAEvB,UAAM,qBAAqB,KAAK,iCAAiC,IAAI,UAAU,MAAM,CAAC;AAGtF,cAAU,WAAW,KAAK;AAG1B,QAAI,oBAAoB;AACvB,yBAAmB,OAAO;AAC1B,WAAK,kBAAkB;AAAA,IACxB;AAGA,SAAK,aAAa,KAAK,EAAE,KAAK;AAG9B,QAAI,KAAK,SAAS;AACjB,WAAK,wBAAwB,EAAE;AAAA,IAChC;AACA,SAAK,oBAAoB,KAAK,SAAS;AAEvC,WAAO;AAAA,EACR;AAAA,EAEmB,gBAAgB,QAAkC;AAGpE,UAAM,YAAY,OAAO,QAAQ,EAAE,YAAY,CAAC;AAChD,cAAU,UAAU,IAAI,OAAO;AAG/B,SAAK,aAAa,KAAK,iBAAiB,SAAS;AAGjD,UAAM,wBAAwB,OAAO,WAAW,EAAE,gBAAgB,CAAC;AAGnE,SAAK,UAAU,KAAK,UAAU,KAAK,qBAAqB,eAAe,kBAAkB,uBAAuB;AAAA,MAC/G,wBAAwB,wBAAC,QAAQ,YAAY,KAAK,uBAAuB,QAAQ,OAAO,GAAhE;AAAA,MACxB,aAAa,mBAAmB;AAAA,MAChC,eAAe,mCAAU,KAAK,kBAAkB,iBAAiB,OAAO,EAAE,GAA3D;AAAA,MACf,yBAAyB,6BAAM,KAAK,oCAAoC,GAA/C;AAAA,MACzB,iBAAiB,SAAS,uBAAuB,2BAA2B;AAAA,MAC5E,iBAAiB,KAAK;AAAA,MACtB,eAAe,KAAK;AAAA,IACrB,CAAC,CAAC;AAEF,SAAK,wBAAwB,EAAE;AAE/B,WAAO;AAAA,EACR;AAAA,EAEU,iBAAiB,QAA2C;AACrE,UAAM,iBAAiB,OAAO,QAAQ,EAAE,cAAc,CAAC;AACvD,UAAM,aAAa,OAAO,gBAAgB,EAAE,IAAI,CAAC;AACjD,SAAK,oBAAoB;AACzB,UAAM,QAAQ,KAAK,UAAU,KAAK,aAAa,kBAAkB,wBAAwB,OAAO,GAAG,YAAY,EAAE,CAAC;AAElH,UAAM,QAAQ;AACd,WAAO;AAAA,MACN,aAAa,wBAAC,IAAI,OAAO,eAAe;AAEvC,YAAI,CAAC,KAAK,mBAAmB,KAAK,gBAAgB,MAAM,MAAM,IAAI;AACjE,qBAAW,YAAY;AACvB,gBAAM,OAAO,aAAa,SAAS,gBAAgB,aAAa,OAAO,UAAU,IAAI,KAAK;AAAA,QAC3F;AAAA,MACD,GANa;AAAA,MAQb,cAAc,6BAAM;AACnB,mBAAW,MAAM,QAAQ,MAAM,uBAAuB,MAAM,SAAS,MAAM,oBAAoB,KAAK,KAAK;AAAA,MAC1G,GAFc;AAAA,IAGf;AAAA,EACD;AAAA,EAEU,mBAAgC;AACzC,WAAO,EAAE,YAAY;AAAA,EACtB;AAAA,EAEU,mBAAgC;AACzC,WAAO,EAAE,YAAY;AAAA,EACtB;AAAA,EAES,eAAqB;AAC7B,UAAM,aAAa;AAGnB,UAAM,aAAa,gBAAgB,KAAK,UAAU;AAClD,eAAW,aAAa;AAAA,EACzB;AAAA,EAEU,uBAAuB,QAAiB,SAAkE;AAGnH,QAAI,KAAK,iBAAiB;AACzB,aAAO,KAAK,gBAAgB,kBAAkB,QAAQ,OAAO;AAAA,IAC9D;AAEA,WAAO,qBAAqB,KAAK,sBAAsB,QAAQ,OAAO;AAAA,EACvE;AAAA,EAEU,yBAAkC;AAG3C,QAAI,KAAK,iBAAiB;AACzB,aAAO,KAAK,gBAAgB,kBAAkB;AAAA,IAC/C;AAEA,WAAO;AAAA,EACR;AAAA,EAEmB,kBAAkB,QAAkC;AACtE,UAAM,mBAAmB,OAAO,QAAQ,EAAE,UAAU,CAAC;AAErD,SAAK,cAAc,KAAK,UAAU,IAAI,YAAY,kBAAkB,wBAAwB,CAAC;AAC7F,SAAK,YAAY,KAAK;AAEtB,WAAO;AAAA,EACR;AAAA,EAEA,qBAAqB,IAA4C;AAChE,UAAM,gBAAgB,KAAK,2BAA2B,IAAI,EAAE;AAE5D,WAAO,gBAAgB,cAAc,WAAW;AAAA,EACjD;AAAA,EAEU,sCAAuD;AAChE,WAAO,gBAAgB;AAAA,EACxB;AAAA,EAES,OAAO,OAAe,QAAgB,KAAa,MAAoB;AAC/E,UAAM,OAAO,OAAO,QAAQ,KAAK,IAAI;AAGrC,SAAK,kBAAkB,UAAU,KAAK,MAAM,eAAe,OAAO,MAAM,EAAE,WAAW;AAGrF,SAAK,iBAAiB,OAAO,KAAK,eAAe;AAAA,EAClD;AAAA,EAEA,kBAAmB,QAA+B;AACjD,SAAK,iBAAiB;AACtB,SAAK,iBAAiB,kBAAkB,MAAM;AAAA,EAC/C;AAAA,EAEU,gBAAgB,aAA8B;AACvD,QAAI,KAAK,iBAAiB,MAAM,MAAM,aAAa;AAClD,aAAO;AAAA,IACR;AAEA,SAAK,iCAAiC,OAAO,WAAW;AACxD,SAAK,6BAA6B,OAAO,WAAW;AACpD,UAAM,gBAAgB,KAAK,2BAA2B,IAAI,WAAW;AACrE,QAAI,eAAe;AAClB,oBAAc,UAAU,QAAQ;AAChC,cAAQ,cAAc,UAAU;AAChC,WAAK,2BAA2B,OAAO,WAAW;AAAA,IACnD;AAEA,WAAO;AAAA,EACR;AAAA,EAES,UAAgB;AACxB,SAAK,iCAAiC,MAAM;AAC5C,SAAK,6BAA6B,MAAM;AAExC,SAAK,2BAA2B,QAAQ,mBAAiB;AACxD,oBAAc,UAAU,QAAQ;AAChC,cAAQ,cAAc,UAAU;AAAA,IACjC,CAAC;AAED,SAAK,2BAA2B,MAAM;AAEtC,UAAM,QAAQ;AAAA,EACf;AACD;",
  "names": []
}
