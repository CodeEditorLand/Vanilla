{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/dnd.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DataTransfers, IDragAndDropData } from '../../base/browser/dnd.js';\nimport { DragAndDropObserver, EventType, addDisposableListener, onDidRegisterWindow } from '../../base/browser/dom.js';\nimport { DragMouseEvent } from '../../base/browser/mouseEvent.js';\nimport { IListDragAndDrop } from '../../base/browser/ui/list/list.js';\nimport { ElementsDragAndDropData, ListViewTargetSector } from '../../base/browser/ui/list/listView.js';\nimport { ITreeDragOverReaction } from '../../base/browser/ui/tree/tree.js';\nimport { coalesce } from '../../base/common/arrays.js';\nimport { UriList, VSDataTransfer } from '../../base/common/dataTransfer.js';\nimport { Emitter, Event } from '../../base/common/event.js';\nimport { Disposable, DisposableStore, IDisposable, markAsSingleton } from '../../base/common/lifecycle.js';\nimport { stringify } from '../../base/common/marshalling.js';\nimport { Mimes } from '../../base/common/mime.js';\nimport { FileAccess, Schemas } from '../../base/common/network.js';\nimport { isWindows } from '../../base/common/platform.js';\nimport { basename, isEqual } from '../../base/common/resources.js';\nimport { URI } from '../../base/common/uri.js';\nimport { CodeDataTransfers, Extensions, IDragAndDropContributionRegistry, IDraggedResourceEditorInput, IResourceStat, LocalSelectionTransfer, createDraggedEditorInputFromRawResourcesData, extractEditorsAndFilesDropData } from '../../platform/dnd/browser/dnd.js';\nimport { IFileService } from '../../platform/files/common/files.js';\nimport { IInstantiationService, ServicesAccessor } from '../../platform/instantiation/common/instantiation.js';\nimport { ILabelService } from '../../platform/label/common/label.js';\nimport { extractSelection } from '../../platform/opener/common/opener.js';\nimport { Registry } from '../../platform/registry/common/platform.js';\nimport { IWindowOpenable } from '../../platform/window/common/window.js';\nimport { IWorkspaceContextService, hasWorkspaceFileExtension, isTemporaryWorkspace } from '../../platform/workspace/common/workspace.js';\nimport { IWorkspaceFolderCreationData, IWorkspacesService } from '../../platform/workspaces/common/workspaces.js';\nimport { EditorResourceAccessor, GroupIdentifier, IEditorIdentifier, isEditorIdentifier, isResourceDiffEditorInput, isResourceMergeEditorInput, isResourceSideBySideEditorInput } from '../common/editor.js';\nimport { IEditorGroup } from '../services/editor/common/editorGroupsService.js';\nimport { IEditorService } from '../services/editor/common/editorService.js';\nimport { IHostService } from '../services/host/browser/host.js';\nimport { ITextFileService } from '../services/textfile/common/textfiles.js';\nimport { IWorkspaceEditingService } from '../services/workspaces/common/workspaceEditing.js';\nimport { IEditorOptions } from '../../platform/editor/common/editor.js';\nimport { mainWindow } from '../../base/browser/window.js';\nimport { BroadcastDataChannel } from '../../base/browser/broadcast.js';\n\n//#region Editor / Resources DND\n\nexport class DraggedEditorIdentifier {\n\n\tconstructor(readonly identifier: IEditorIdentifier) { }\n}\n\nexport class DraggedEditorGroupIdentifier {\n\n\tconstructor(readonly identifier: GroupIdentifier) { }\n}\n\nexport async function extractTreeDropData(dataTransfer: VSDataTransfer): Promise<Array<IDraggedResourceEditorInput>> {\n\tconst editors: IDraggedResourceEditorInput[] = [];\n\tconst resourcesKey = Mimes.uriList.toLowerCase();\n\n\t// Data Transfer: Resources\n\tif (dataTransfer.has(resourcesKey)) {\n\t\ttry {\n\t\t\tconst asString = await dataTransfer.get(resourcesKey)?.asString();\n\t\t\tconst rawResourcesData = JSON.stringify(UriList.parse(asString ?? ''));\n\t\t\teditors.push(...createDraggedEditorInputFromRawResourcesData(rawResourcesData));\n\t\t} catch (error) {\n\t\t\t// Invalid transfer\n\t\t}\n\t}\n\n\treturn editors;\n}\n\nexport interface IResourcesDropHandlerOptions {\n\n\t/**\n\t * Whether we probe for the dropped resource to be a workspace\n\t * (i.e. code-workspace file or even a folder), allowing to\n\t * open it as workspace instead of opening as editor.\n\t */\n\treadonly allowWorkspaceOpen: boolean;\n}\n\n/**\n * Shared function across some components to handle drag & drop of resources.\n * E.g. of folders and workspace files to open them in the window instead of\n * the editor or to handle dirty editors being dropped between instances of Code.\n */\nexport class ResourcesDropHandler {\n\n\tconstructor(\n\t\tprivate readonly options: IResourcesDropHandlerOptions,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IWorkspacesService private readonly workspacesService: IWorkspacesService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IWorkspaceEditingService private readonly workspaceEditingService: IWorkspaceEditingService,\n\t\t@IHostService private readonly hostService: IHostService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService\n\t) {\n\t}\n\n\tasync handleDrop(event: DragEvent, targetWindow: Window, resolveTargetGroup?: () => IEditorGroup | undefined, afterDrop?: (targetGroup: IEditorGroup | undefined) => void, options?: IEditorOptions): Promise<void> {\n\t\tconst editors = await this.instantiationService.invokeFunction(accessor => extractEditorsAndFilesDropData(accessor, event));\n\t\tif (!editors.length) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make the window active to handle the drop properly within\n\t\tawait this.hostService.focus(targetWindow);\n\n\t\t// Check for workspace file / folder being dropped if we are allowed to do so\n\t\tif (this.options.allowWorkspaceOpen) {\n\t\t\tconst localFilesAllowedToOpenAsWorkspace = coalesce(editors.filter(editor => editor.allowWorkspaceOpen && editor.resource?.scheme === Schemas.file).map(editor => editor.resource));\n\t\t\tif (localFilesAllowedToOpenAsWorkspace.length > 0) {\n\t\t\t\tconst isWorkspaceOpening = await this.handleWorkspaceDrop(localFilesAllowedToOpenAsWorkspace);\n\t\t\t\tif (isWorkspaceOpening) {\n\t\t\t\t\treturn; // return early if the drop operation resulted in this window changing to a workspace\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add external ones to recently open list unless dropped resource is a workspace\n\t\tconst externalLocalFiles = coalesce(editors.filter(editor => editor.isExternal && editor.resource?.scheme === Schemas.file).map(editor => editor.resource));\n\t\tif (externalLocalFiles.length) {\n\t\t\tthis.workspacesService.addRecentlyOpened(externalLocalFiles.map(resource => ({ fileUri: resource })));\n\t\t}\n\n\t\t// Open in Editor\n\t\tconst targetGroup = resolveTargetGroup?.();\n\t\tawait this.editorService.openEditors(editors.map(editor => ({\n\t\t\t...editor,\n\t\t\tresource: editor.resource,\n\t\t\toptions: {\n\t\t\t\t...editor.options,\n\t\t\t\t...options,\n\t\t\t\tpinned: true\n\t\t\t}\n\t\t})), targetGroup, { validateTrust: true });\n\n\t\t// Finish with provided function\n\t\tafterDrop?.(targetGroup);\n\t}\n\n\tprivate async handleWorkspaceDrop(resources: URI[]): Promise<boolean> {\n\t\tconst toOpen: IWindowOpenable[] = [];\n\t\tconst folderURIs: IWorkspaceFolderCreationData[] = [];\n\n\t\tawait Promise.all(resources.map(async resource => {\n\n\t\t\t// Check for Workspace\n\t\t\tif (hasWorkspaceFileExtension(resource)) {\n\t\t\t\ttoOpen.push({ workspaceUri: resource });\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Check for Folder\n\t\t\ttry {\n\t\t\t\tconst stat = await this.fileService.stat(resource);\n\t\t\t\tif (stat.isDirectory) {\n\t\t\t\t\ttoOpen.push({ folderUri: stat.resource });\n\t\t\t\t\tfolderURIs.push({ uri: stat.resource });\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\t// Ignore error\n\t\t\t}\n\t\t}));\n\n\t\t// Return early if no external resource is a folder or workspace\n\t\tif (toOpen.length === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Open in separate windows if we drop workspaces or just one folder\n\t\tif (toOpen.length > folderURIs.length || folderURIs.length === 1) {\n\t\t\tawait this.hostService.openWindow(toOpen);\n\t\t}\n\n\t\t// Add to workspace if we are in a temporary workspace\n\t\telse if (isTemporaryWorkspace(this.contextService.getWorkspace())) {\n\t\t\tawait this.workspaceEditingService.addFolders(folderURIs);\n\t\t}\n\n\t\t// Finally, enter untitled workspace when dropping >1 folders\n\t\telse {\n\t\t\tawait this.workspaceEditingService.createAndEnterWorkspace(folderURIs);\n\t\t}\n\n\t\treturn true;\n\t}\n}\n\nexport function fillEditorsDragData(accessor: ServicesAccessor, resources: URI[], event: DragMouseEvent | DragEvent, options?: { disableStandardTransfer: boolean }): void;\nexport function fillEditorsDragData(accessor: ServicesAccessor, resources: IResourceStat[], event: DragMouseEvent | DragEvent, options?: { disableStandardTransfer: boolean }): void;\nexport function fillEditorsDragData(accessor: ServicesAccessor, editors: IEditorIdentifier[], event: DragMouseEvent | DragEvent, options?: { disableStandardTransfer: boolean }): void;\nexport function fillEditorsDragData(accessor: ServicesAccessor, resourcesOrEditors: Array<URI | IResourceStat | IEditorIdentifier>, event: DragMouseEvent | DragEvent, options?: { disableStandardTransfer: boolean }): void {\n\tif (resourcesOrEditors.length === 0 || !event.dataTransfer) {\n\t\treturn;\n\t}\n\n\tconst textFileService = accessor.get(ITextFileService);\n\tconst editorService = accessor.get(IEditorService);\n\tconst fileService = accessor.get(IFileService);\n\tconst labelService = accessor.get(ILabelService);\n\n\t// Extract resources from URIs or Editors that\n\t// can be handled by the file service\n\tconst resources = coalesce(resourcesOrEditors.map(resourceOrEditor => {\n\t\tif (URI.isUri(resourceOrEditor)) {\n\t\t\treturn { resource: resourceOrEditor };\n\t\t}\n\n\t\tif (isEditorIdentifier(resourceOrEditor)) {\n\t\t\tif (URI.isUri(resourceOrEditor.editor.resource)) {\n\t\t\t\treturn { resource: resourceOrEditor.editor.resource };\n\t\t\t}\n\n\t\t\treturn undefined; // editor without resource\n\t\t}\n\n\t\treturn resourceOrEditor;\n\t}));\n\n\tconst fileSystemResources = resources.filter(({ resource }) => fileService.hasProvider(resource));\n\tif (!options?.disableStandardTransfer) {\n\n\t\t// Text: allows to paste into text-capable areas\n\t\tconst lineDelimiter = isWindows ? '\\r\\n' : '\\n';\n\t\tevent.dataTransfer.setData(DataTransfers.TEXT, fileSystemResources.map(({ resource }) => labelService.getUriLabel(resource, { noPrefix: true })).join(lineDelimiter));\n\n\t\t// Download URL: enables support to drag a tab as file to desktop\n\t\t// Requirements:\n\t\t// - Chrome/Edge only\n\t\t// - only a single file is supported\n\t\t// - only file:/ resources are supported\n\t\tconst firstFile = fileSystemResources.find(({ isDirectory }) => !isDirectory);\n\t\tif (firstFile) {\n\t\t\tconst firstFileUri = FileAccess.uriToFileUri(firstFile.resource); // enforce `file:` URIs\n\t\t\tif (firstFileUri.scheme === Schemas.file) {\n\t\t\t\tevent.dataTransfer.setData(DataTransfers.DOWNLOAD_URL, [Mimes.binary, basename(firstFile.resource), firstFileUri.toString()].join(':'));\n\t\t\t}\n\t\t}\n\t}\n\n\t// Resource URLs: allows to drop multiple file resources to a target in VS Code\n\tconst files = fileSystemResources.filter(({ isDirectory }) => !isDirectory);\n\tif (files.length) {\n\t\tevent.dataTransfer.setData(DataTransfers.RESOURCES, JSON.stringify(files.map(({ resource }) => resource.toString())));\n\t}\n\n\t// Contributions\n\tconst contributions = Registry.as<IDragAndDropContributionRegistry>(Extensions.DragAndDropContribution).getAll();\n\tfor (const contribution of contributions) {\n\t\tcontribution.setData(resources, event);\n\t}\n\n\t// Editors: enables cross window DND of editors\n\t// into the editor area while presering UI state\n\tconst draggedEditors: IDraggedResourceEditorInput[] = [];\n\n\tfor (const resourceOrEditor of resourcesOrEditors) {\n\n\t\t// Extract resource editor from provided object or URI\n\t\tlet editor: IDraggedResourceEditorInput | undefined = undefined;\n\t\tif (isEditorIdentifier(resourceOrEditor)) {\n\t\t\tconst untypedEditor = resourceOrEditor.editor.toUntyped({ preserveViewState: resourceOrEditor.groupId });\n\t\t\tif (untypedEditor) {\n\t\t\t\teditor = { ...untypedEditor, resource: EditorResourceAccessor.getCanonicalUri(untypedEditor) };\n\t\t\t}\n\t\t} else if (URI.isUri(resourceOrEditor)) {\n\t\t\tconst { selection, uri } = extractSelection(resourceOrEditor);\n\t\t\teditor = { resource: uri, options: selection ? { selection } : undefined };\n\t\t} else if (!resourceOrEditor.isDirectory) {\n\t\t\teditor = { resource: resourceOrEditor.resource };\n\t\t}\n\n\t\tif (!editor) {\n\t\t\tcontinue; // skip over editors that cannot be transferred via dnd\n\t\t}\n\n\t\t// Fill in some properties if they are not there already by accessing\n\t\t// some well known things from the text file universe.\n\t\t// This is not ideal for custom editors, but those have a chance to\n\t\t// provide everything from the `toUntyped` method.\n\t\t{\n\t\t\tconst resource = editor.resource;\n\t\t\tif (resource) {\n\t\t\t\tconst textFileModel = textFileService.files.get(resource);\n\t\t\t\tif (textFileModel) {\n\n\t\t\t\t\t// language\n\t\t\t\t\tif (typeof editor.languageId !== 'string') {\n\t\t\t\t\t\teditor.languageId = textFileModel.getLanguageId();\n\t\t\t\t\t}\n\n\t\t\t\t\t// encoding\n\t\t\t\t\tif (typeof editor.encoding !== 'string') {\n\t\t\t\t\t\teditor.encoding = textFileModel.getEncoding();\n\t\t\t\t\t}\n\n\t\t\t\t\t// contents (only if dirty and not too large)\n\t\t\t\t\tif (typeof editor.contents !== 'string' && textFileModel.isDirty() && !textFileModel.textEditorModel.isTooLargeForHeapOperation()) {\n\t\t\t\t\t\teditor.contents = textFileModel.textEditorModel.getValue();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// viewState\n\t\t\t\tif (!editor.options?.viewState) {\n\t\t\t\t\teditor.options = {\n\t\t\t\t\t\t...editor.options,\n\t\t\t\t\t\tviewState: (() => {\n\t\t\t\t\t\t\tfor (const visibleEditorPane of editorService.visibleEditorPanes) {\n\t\t\t\t\t\t\t\tif (isEqual(visibleEditorPane.input.resource, resource)) {\n\t\t\t\t\t\t\t\t\tconst viewState = visibleEditorPane.getViewState();\n\t\t\t\t\t\t\t\t\tif (viewState) {\n\t\t\t\t\t\t\t\t\t\treturn viewState;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t})()\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add as dragged editor\n\t\tdraggedEditors.push(editor);\n\t}\n\n\tif (draggedEditors.length) {\n\t\tevent.dataTransfer.setData(CodeDataTransfers.EDITORS, stringify(draggedEditors));\n\n\t\t// Add a URI list entry\n\t\tconst uriListEntries: URI[] = [];\n\t\tfor (const editor of draggedEditors) {\n\t\t\tif (editor.resource) {\n\t\t\t\turiListEntries.push(editor.resource);\n\t\t\t} else if (isResourceDiffEditorInput(editor)) {\n\t\t\t\tif (editor.modified.resource) {\n\t\t\t\t\turiListEntries.push(editor.modified.resource);\n\t\t\t\t}\n\t\t\t} else if (isResourceSideBySideEditorInput(editor)) {\n\t\t\t\tif (editor.primary.resource) {\n\t\t\t\t\turiListEntries.push(editor.primary.resource);\n\t\t\t\t}\n\t\t\t} else if (isResourceMergeEditorInput(editor)) {\n\t\t\t\turiListEntries.push(editor.result.resource);\n\t\t\t}\n\t\t}\n\n\t\t// Due to https://bugs.chromium.org/p/chromium/issues/detail?id=239745, we can only set\n\t\t// a single uri for the real `text/uri-list` type. Otherwise all uris end up joined together\n\t\t// However we write the full uri-list to an internal type so that other parts of VS Code\n\t\t// can use the full list.\n\t\tif (!options?.disableStandardTransfer) {\n\t\t\tevent.dataTransfer.setData(Mimes.uriList, UriList.create(uriListEntries.slice(0, 1)));\n\t\t}\n\t\tevent.dataTransfer.setData(DataTransfers.INTERNAL_URI_LIST, UriList.create(uriListEntries));\n\t}\n}\n\n//#endregion\n\n//#region Composites DND\n\nexport type Before2D = {\n\treadonly verticallyBefore: boolean;\n\treadonly horizontallyBefore: boolean;\n};\n\nexport interface ICompositeDragAndDrop {\n\tdrop(data: IDragAndDropData, target: string | undefined, originalEvent: DragEvent, before?: Before2D): void;\n\tonDragOver(data: IDragAndDropData, target: string | undefined, originalEvent: DragEvent): boolean;\n\tonDragEnter(data: IDragAndDropData, target: string | undefined, originalEvent: DragEvent): boolean;\n}\n\nexport interface ICompositeDragAndDropObserverCallbacks {\n\tonDragEnter?: (e: IDraggedCompositeData) => void;\n\tonDragLeave?: (e: IDraggedCompositeData) => void;\n\tonDrop?: (e: IDraggedCompositeData) => void;\n\tonDragOver?: (e: IDraggedCompositeData) => void;\n\tonDragStart?: (e: IDraggedCompositeData) => void;\n\tonDragEnd?: (e: IDraggedCompositeData) => void;\n}\n\nexport class CompositeDragAndDropData implements IDragAndDropData {\n\n\tconstructor(private type: 'view' | 'composite', private id: string) { }\n\n\tupdate(dataTransfer: DataTransfer): void {\n\t\t// no-op\n\t}\n\n\tgetData(): {\n\t\ttype: 'view' | 'composite';\n\t\tid: string;\n\t} {\n\t\treturn { type: this.type, id: this.id };\n\t}\n}\n\nexport interface IDraggedCompositeData {\n\treadonly eventData: DragEvent;\n\treadonly dragAndDropData: CompositeDragAndDropData;\n}\n\nexport class DraggedCompositeIdentifier {\n\n\tconstructor(private compositeId: string) { }\n\n\tget id(): string {\n\t\treturn this.compositeId;\n\t}\n}\n\nexport class DraggedViewIdentifier {\n\n\tconstructor(private viewId: string) { }\n\n\tget id(): string {\n\t\treturn this.viewId;\n\t}\n}\n\nexport type ViewType = 'composite' | 'view';\n\nexport class CompositeDragAndDropObserver extends Disposable {\n\n\tprivate static instance: CompositeDragAndDropObserver | undefined;\n\n\tstatic get INSTANCE(): CompositeDragAndDropObserver {\n\t\tif (!CompositeDragAndDropObserver.instance) {\n\t\t\tCompositeDragAndDropObserver.instance = new CompositeDragAndDropObserver();\n\t\t\tmarkAsSingleton(CompositeDragAndDropObserver.instance);\n\t\t}\n\n\t\treturn CompositeDragAndDropObserver.instance;\n\t}\n\n\tprivate readonly transferData = LocalSelectionTransfer.getInstance<DraggedCompositeIdentifier | DraggedViewIdentifier>();\n\n\tprivate readonly onDragStart = this._register(new Emitter<IDraggedCompositeData>());\n\tprivate readonly onDragEnd = this._register(new Emitter<IDraggedCompositeData>());\n\n\tprivate constructor() {\n\t\tsuper();\n\n\t\tthis._register(this.onDragEnd.event(e => {\n\t\t\tconst id = e.dragAndDropData.getData().id;\n\t\t\tconst type = e.dragAndDropData.getData().type;\n\t\t\tconst data = this.readDragData(type);\n\t\t\tif (data?.getData().id === id) {\n\t\t\t\tthis.transferData.clearData(type === 'view' ? DraggedViewIdentifier.prototype : DraggedCompositeIdentifier.prototype);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate readDragData(type: ViewType): CompositeDragAndDropData | undefined {\n\t\tif (this.transferData.hasData(type === 'view' ? DraggedViewIdentifier.prototype : DraggedCompositeIdentifier.prototype)) {\n\t\t\tconst data = this.transferData.getData(type === 'view' ? DraggedViewIdentifier.prototype : DraggedCompositeIdentifier.prototype);\n\t\t\tif (data && data[0]) {\n\t\t\t\treturn new CompositeDragAndDropData(type, data[0].id);\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate writeDragData(id: string, type: ViewType): void {\n\t\tthis.transferData.setData([type === 'view' ? new DraggedViewIdentifier(id) : new DraggedCompositeIdentifier(id)], type === 'view' ? DraggedViewIdentifier.prototype : DraggedCompositeIdentifier.prototype);\n\t}\n\n\tregisterTarget(element: HTMLElement, callbacks: ICompositeDragAndDropObserverCallbacks): IDisposable {\n\t\tconst disposableStore = new DisposableStore();\n\t\tdisposableStore.add(new DragAndDropObserver(element, {\n\t\t\tonDragEnter: e => {\n\t\t\t\te.preventDefault();\n\n\t\t\t\tif (callbacks.onDragEnter) {\n\t\t\t\t\tconst data = this.readDragData('composite') || this.readDragData('view');\n\t\t\t\t\tif (data) {\n\t\t\t\t\t\tcallbacks.onDragEnter({ eventData: e, dragAndDropData: data });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tonDragLeave: e => {\n\t\t\t\tconst data = this.readDragData('composite') || this.readDragData('view');\n\t\t\t\tif (callbacks.onDragLeave && data) {\n\t\t\t\t\tcallbacks.onDragLeave({ eventData: e, dragAndDropData: data });\n\t\t\t\t}\n\t\t\t},\n\t\t\tonDrop: e => {\n\t\t\t\tif (callbacks.onDrop) {\n\t\t\t\t\tconst data = this.readDragData('composite') || this.readDragData('view');\n\t\t\t\t\tif (!data) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tcallbacks.onDrop({ eventData: e, dragAndDropData: data });\n\n\t\t\t\t\t// Fire drag event in case drop handler destroys the dragged element\n\t\t\t\t\tthis.onDragEnd.fire({ eventData: e, dragAndDropData: data });\n\t\t\t\t}\n\t\t\t},\n\t\t\tonDragOver: e => {\n\t\t\t\te.preventDefault();\n\n\t\t\t\tif (callbacks.onDragOver) {\n\t\t\t\t\tconst data = this.readDragData('composite') || this.readDragData('view');\n\t\t\t\t\tif (!data) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tcallbacks.onDragOver({ eventData: e, dragAndDropData: data });\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tif (callbacks.onDragStart) {\n\t\t\tthis.onDragStart.event(e => {\n\t\t\t\tcallbacks.onDragStart!(e);\n\t\t\t}, this, disposableStore);\n\t\t}\n\n\t\tif (callbacks.onDragEnd) {\n\t\t\tthis.onDragEnd.event(e => {\n\t\t\t\tcallbacks.onDragEnd!(e);\n\t\t\t}, this, disposableStore);\n\t\t}\n\n\t\treturn this._register(disposableStore);\n\t}\n\n\tregisterDraggable(element: HTMLElement, draggedItemProvider: () => { type: ViewType; id: string }, callbacks: ICompositeDragAndDropObserverCallbacks): IDisposable {\n\t\telement.draggable = true;\n\n\t\tconst disposableStore = new DisposableStore();\n\n\t\tdisposableStore.add(new DragAndDropObserver(element, {\n\t\t\tonDragStart: e => {\n\t\t\t\tconst { id, type } = draggedItemProvider();\n\t\t\t\tthis.writeDragData(id, type);\n\n\t\t\t\te.dataTransfer?.setDragImage(element, 0, 0);\n\n\t\t\t\tthis.onDragStart.fire({ eventData: e, dragAndDropData: this.readDragData(type)! });\n\t\t\t},\n\t\t\tonDragEnd: e => {\n\t\t\t\tconst { type } = draggedItemProvider();\n\t\t\t\tconst data = this.readDragData(type);\n\t\t\t\tif (!data) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.onDragEnd.fire({ eventData: e, dragAndDropData: data });\n\t\t\t},\n\t\t\tonDragEnter: e => {\n\t\t\t\tif (callbacks.onDragEnter) {\n\t\t\t\t\tconst data = this.readDragData('composite') || this.readDragData('view');\n\t\t\t\t\tif (!data) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (data) {\n\t\t\t\t\t\tcallbacks.onDragEnter({ eventData: e, dragAndDropData: data });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tonDragLeave: e => {\n\t\t\t\tconst data = this.readDragData('composite') || this.readDragData('view');\n\t\t\t\tif (!data) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tcallbacks.onDragLeave?.({ eventData: e, dragAndDropData: data });\n\t\t\t},\n\t\t\tonDrop: e => {\n\t\t\t\tif (callbacks.onDrop) {\n\t\t\t\t\tconst data = this.readDragData('composite') || this.readDragData('view');\n\t\t\t\t\tif (!data) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tcallbacks.onDrop({ eventData: e, dragAndDropData: data });\n\n\t\t\t\t\t// Fire drag event in case drop handler destroys the dragged element\n\t\t\t\t\tthis.onDragEnd.fire({ eventData: e, dragAndDropData: data });\n\t\t\t\t}\n\t\t\t},\n\t\t\tonDragOver: e => {\n\t\t\t\tif (callbacks.onDragOver) {\n\t\t\t\t\tconst data = this.readDragData('composite') || this.readDragData('view');\n\t\t\t\t\tif (!data) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tcallbacks.onDragOver({ eventData: e, dragAndDropData: data });\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tif (callbacks.onDragStart) {\n\t\t\tthis.onDragStart.event(e => {\n\t\t\t\tcallbacks.onDragStart!(e);\n\t\t\t}, this, disposableStore);\n\t\t}\n\n\t\tif (callbacks.onDragEnd) {\n\t\t\tthis.onDragEnd.event(e => {\n\t\t\t\tcallbacks.onDragEnd!(e);\n\t\t\t}, this, disposableStore);\n\t\t}\n\n\t\treturn this._register(disposableStore);\n\t}\n}\n\nexport function toggleDropEffect(dataTransfer: DataTransfer | null, dropEffect: 'none' | 'copy' | 'link' | 'move', shouldHaveIt: boolean) {\n\tif (!dataTransfer) {\n\t\treturn;\n\t}\n\n\tdataTransfer.dropEffect = shouldHaveIt ? dropEffect : 'none';\n}\n\nexport class ResourceListDnDHandler<T> implements IListDragAndDrop<T> {\n\tconstructor(\n\t\tprivate readonly toResource: (e: T) => URI | null,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService\n\t) { }\n\n\tgetDragURI(element: T): string | null {\n\t\tconst resource = this.toResource(element);\n\t\treturn resource ? resource.toString() : null;\n\t}\n\n\tgetDragLabel(elements: T[]): string | undefined {\n\t\tconst resources = coalesce(elements.map(this.toResource));\n\t\treturn resources.length === 1 ? basename(resources[0]) : resources.length > 1 ? String(resources.length) : undefined;\n\t}\n\n\tonDragStart(data: IDragAndDropData, originalEvent: DragEvent): void {\n\t\tconst resources: URI[] = [];\n\t\tfor (const element of (data as ElementsDragAndDropData<T>).elements) {\n\t\t\tconst resource = this.toResource(element);\n\t\t\tif (resource) {\n\t\t\t\tresources.push(resource);\n\t\t\t}\n\t\t}\n\t\tif (resources.length) {\n\t\t\t// Apply some datatransfer types to allow for dragging the element outside of the application\n\t\t\tthis.instantiationService.invokeFunction(accessor => fillEditorsDragData(accessor, resources, originalEvent));\n\t\t}\n\t}\n\n\tonDragOver(data: IDragAndDropData, targetElement: T, targetIndex: number, targetSector: ListViewTargetSector | undefined, originalEvent: DragEvent): boolean | ITreeDragOverReaction {\n\t\treturn false;\n\t}\n\n\tdrop(data: IDragAndDropData, targetElement: T, targetIndex: number, targetSector: ListViewTargetSector | undefined, originalEvent: DragEvent): void { }\n\n\tdispose(): void { }\n}\n\n//#endregion\n\nclass GlobalWindowDraggedOverTracker extends Disposable {\n\n\tprivate static readonly CHANNEL_NAME = 'monaco-workbench-global-dragged-over';\n\n\tprivate readonly broadcaster = this._register(new BroadcastDataChannel<boolean>(GlobalWindowDraggedOverTracker.CHANNEL_NAME));\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(Event.runAndSubscribe(onDidRegisterWindow, ({ window, disposables }) => {\n\t\t\tdisposables.add(addDisposableListener(window, EventType.DRAG_OVER, () => this.markDraggedOver(false), true));\n\t\t\tdisposables.add(addDisposableListener(window, EventType.DRAG_LEAVE, () => this.clearDraggedOver(false), true));\n\t\t}, { window: mainWindow, disposables: this._store }));\n\n\t\tthis._register(this.broadcaster.onDidReceiveData(data => {\n\t\t\tif (data === true) {\n\t\t\t\tthis.markDraggedOver(true);\n\t\t\t} else {\n\t\t\t\tthis.clearDraggedOver(true);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate draggedOver = false;\n\tget isDraggedOver(): boolean { return this.draggedOver; }\n\n\tprivate markDraggedOver(fromBroadcast: boolean): void {\n\t\tif (this.draggedOver === true) {\n\t\t\treturn; // alrady marked\n\t\t}\n\n\t\tthis.draggedOver = true;\n\n\t\tif (!fromBroadcast) {\n\t\t\tthis.broadcaster.postData(true);\n\t\t}\n\t}\n\n\tprivate clearDraggedOver(fromBroadcast: boolean): void {\n\t\tif (this.draggedOver === false) {\n\t\t\treturn; // alrady cleared\n\t\t}\n\n\t\tthis.draggedOver = false;\n\n\t\tif (!fromBroadcast) {\n\t\t\tthis.broadcaster.postData(false);\n\t\t}\n\t}\n}\n\nconst globalDraggedOverTracker = new GlobalWindowDraggedOverTracker();\n\n/**\n * Returns whether the workbench is currently dragged over in any of\n * the opened windows (main windows and auxiliary windows).\n */\nexport function isWindowDraggedOver(): boolean {\n\treturn globalDraggedOverTracker.isDraggedOver;\n}\n"],
  "mappings": "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",
  "names": []
}
