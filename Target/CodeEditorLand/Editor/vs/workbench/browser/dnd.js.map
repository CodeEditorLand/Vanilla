{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/dnd.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { BroadcastDataChannel } from \"../../base/browser/broadcast.js\";\nimport {\n\tDataTransfers,\n\ttype IDragAndDropData,\n} from \"../../base/browser/dnd.js\";\nimport {\n\tDragAndDropObserver,\n\tEventType,\n\taddDisposableListener,\n\tonDidRegisterWindow,\n} from \"../../base/browser/dom.js\";\nimport type { DragMouseEvent } from \"../../base/browser/mouseEvent.js\";\nimport type { IListDragAndDrop } from \"../../base/browser/ui/list/list.js\";\nimport type {\n\tElementsDragAndDropData,\n\tListViewTargetSector,\n} from \"../../base/browser/ui/list/listView.js\";\nimport type { ITreeDragOverReaction } from \"../../base/browser/ui/tree/tree.js\";\nimport { mainWindow } from \"../../base/browser/window.js\";\nimport { coalesce } from \"../../base/common/arrays.js\";\nimport {\n\tUriList,\n\ttype VSDataTransfer,\n} from \"../../base/common/dataTransfer.js\";\nimport { Emitter, Event } from \"../../base/common/event.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n\tmarkAsSingleton,\n} from \"../../base/common/lifecycle.js\";\nimport { stringify } from \"../../base/common/marshalling.js\";\nimport { Mimes } from \"../../base/common/mime.js\";\nimport { FileAccess, Schemas } from \"../../base/common/network.js\";\nimport { isWindows } from \"../../base/common/platform.js\";\nimport { basename, isEqual } from \"../../base/common/resources.js\";\nimport { URI } from \"../../base/common/uri.js\";\nimport {\n\tCodeDataTransfers,\n\tExtensions,\n\ttype IDragAndDropContributionRegistry,\n\ttype IDraggedResourceEditorInput,\n\ttype IResourceStat,\n\tLocalSelectionTransfer,\n\tcreateDraggedEditorInputFromRawResourcesData,\n\textractEditorsAndFilesDropData,\n} from \"../../platform/dnd/browser/dnd.js\";\nimport type { IEditorOptions } from \"../../platform/editor/common/editor.js\";\nimport { IFileService } from \"../../platform/files/common/files.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../platform/instantiation/common/instantiation.js\";\nimport { ILabelService } from \"../../platform/label/common/label.js\";\nimport { extractSelection } from \"../../platform/opener/common/opener.js\";\nimport { Registry } from \"../../platform/registry/common/platform.js\";\nimport type { IWindowOpenable } from \"../../platform/window/common/window.js\";\nimport {\n\tIWorkspaceContextService,\n\thasWorkspaceFileExtension,\n\tisTemporaryWorkspace,\n} from \"../../platform/workspace/common/workspace.js\";\nimport {\n\ttype IWorkspaceFolderCreationData,\n\tIWorkspacesService,\n} from \"../../platform/workspaces/common/workspaces.js\";\nimport {\n\tEditorResourceAccessor,\n\ttype GroupIdentifier,\n\ttype IEditorIdentifier,\n\tisEditorIdentifier,\n\tisResourceDiffEditorInput,\n\tisResourceMergeEditorInput,\n\tisResourceSideBySideEditorInput,\n} from \"../common/editor.js\";\nimport type { IEditorGroup } from \"../services/editor/common/editorGroupsService.js\";\nimport { IEditorService } from \"../services/editor/common/editorService.js\";\nimport { IHostService } from \"../services/host/browser/host.js\";\nimport { ITextFileService } from \"../services/textfile/common/textfiles.js\";\nimport { IWorkspaceEditingService } from \"../services/workspaces/common/workspaceEditing.js\";\n\n//#region Editor / Resources DND\n\nexport class DraggedEditorIdentifier {\n\tconstructor(readonly identifier: IEditorIdentifier) {}\n}\n\nexport class DraggedEditorGroupIdentifier {\n\tconstructor(readonly identifier: GroupIdentifier) {}\n}\n\nexport async function extractTreeDropData(\n\tdataTransfer: VSDataTransfer,\n): Promise<Array<IDraggedResourceEditorInput>> {\n\tconst editors: IDraggedResourceEditorInput[] = [];\n\tconst resourcesKey = Mimes.uriList.toLowerCase();\n\n\t// Data Transfer: Resources\n\tif (dataTransfer.has(resourcesKey)) {\n\t\ttry {\n\t\t\tconst asString = await dataTransfer.get(resourcesKey)?.asString();\n\t\t\tconst rawResourcesData = JSON.stringify(\n\t\t\t\tUriList.parse(asString ?? \"\"),\n\t\t\t);\n\t\t\teditors.push(\n\t\t\t\t...createDraggedEditorInputFromRawResourcesData(\n\t\t\t\t\trawResourcesData,\n\t\t\t\t),\n\t\t\t);\n\t\t} catch (error) {\n\t\t\t// Invalid transfer\n\t\t}\n\t}\n\n\treturn editors;\n}\n\nexport interface IResourcesDropHandlerOptions {\n\t/**\n\t * Whether we probe for the dropped resource to be a workspace\n\t * (i.e. code-workspace file or even a folder), allowing to\n\t * open it as workspace instead of opening as editor.\n\t */\n\treadonly allowWorkspaceOpen: boolean;\n}\n\n/**\n * Shared function across some components to handle drag & drop of resources.\n * E.g. of folders and workspace files to open them in the window instead of\n * the editor or to handle dirty editors being dropped between instances of Code.\n */\nexport class ResourcesDropHandler {\n\tconstructor(\n\t\tprivate readonly options: IResourcesDropHandlerOptions,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IWorkspacesService private readonly workspacesService: IWorkspacesService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IWorkspaceEditingService private readonly workspaceEditingService: IWorkspaceEditingService,\n\t\t@IHostService private readonly hostService: IHostService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService\n\t) {\n\t}\n\n\tasync handleDrop(\n\t\tevent: DragEvent,\n\t\ttargetWindow: Window,\n\t\tresolveTargetGroup?: () => IEditorGroup | undefined,\n\t\tafterDrop?: (targetGroup: IEditorGroup | undefined) => void,\n\t\toptions?: IEditorOptions,\n\t): Promise<void> {\n\t\tconst editors = await this.instantiationService.invokeFunction(\n\t\t\t(accessor) => extractEditorsAndFilesDropData(accessor, event),\n\t\t);\n\t\tif (!editors.length) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make the window active to handle the drop properly within\n\t\tawait this.hostService.focus(targetWindow);\n\n\t\t// Check for workspace file / folder being dropped if we are allowed to do so\n\t\tif (this.options.allowWorkspaceOpen) {\n\t\t\tconst localFilesAllowedToOpenAsWorkspace = coalesce(\n\t\t\t\teditors\n\t\t\t\t\t.filter(\n\t\t\t\t\t\t(editor) =>\n\t\t\t\t\t\t\teditor.allowWorkspaceOpen &&\n\t\t\t\t\t\t\teditor.resource?.scheme === Schemas.file,\n\t\t\t\t\t)\n\t\t\t\t\t.map((editor) => editor.resource),\n\t\t\t);\n\t\t\tif (localFilesAllowedToOpenAsWorkspace.length > 0) {\n\t\t\t\tconst isWorkspaceOpening = await this.handleWorkspaceDrop(\n\t\t\t\t\tlocalFilesAllowedToOpenAsWorkspace,\n\t\t\t\t);\n\t\t\t\tif (isWorkspaceOpening) {\n\t\t\t\t\treturn; // return early if the drop operation resulted in this window changing to a workspace\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add external ones to recently open list unless dropped resource is a workspace\n\t\tconst externalLocalFiles = coalesce(\n\t\t\teditors\n\t\t\t\t.filter(\n\t\t\t\t\t(editor) =>\n\t\t\t\t\t\teditor.isExternal &&\n\t\t\t\t\t\teditor.resource?.scheme === Schemas.file,\n\t\t\t\t)\n\t\t\t\t.map((editor) => editor.resource),\n\t\t);\n\t\tif (externalLocalFiles.length) {\n\t\t\tthis.workspacesService.addRecentlyOpened(\n\t\t\t\texternalLocalFiles.map((resource) => ({ fileUri: resource })),\n\t\t\t);\n\t\t}\n\n\t\t// Open in Editor\n\t\tconst targetGroup = resolveTargetGroup?.();\n\t\tawait this.editorService.openEditors(\n\t\t\teditors.map((editor) => ({\n\t\t\t\t...editor,\n\t\t\t\tresource: editor.resource,\n\t\t\t\toptions: {\n\t\t\t\t\t...editor.options,\n\t\t\t\t\t...options,\n\t\t\t\t\tpinned: true,\n\t\t\t\t},\n\t\t\t})),\n\t\t\ttargetGroup,\n\t\t\t{ validateTrust: true },\n\t\t);\n\n\t\t// Finish with provided function\n\t\tafterDrop?.(targetGroup);\n\t}\n\n\tprivate async handleWorkspaceDrop(resources: URI[]): Promise<boolean> {\n\t\tconst toOpen: IWindowOpenable[] = [];\n\t\tconst folderURIs: IWorkspaceFolderCreationData[] = [];\n\n\t\tawait Promise.all(\n\t\t\tresources.map(async (resource) => {\n\t\t\t\t// Check for Workspace\n\t\t\t\tif (hasWorkspaceFileExtension(resource)) {\n\t\t\t\t\ttoOpen.push({ workspaceUri: resource });\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Check for Folder\n\t\t\t\ttry {\n\t\t\t\t\tconst stat = await this.fileService.stat(resource);\n\t\t\t\t\tif (stat.isDirectory) {\n\t\t\t\t\t\ttoOpen.push({ folderUri: stat.resource });\n\t\t\t\t\t\tfolderURIs.push({ uri: stat.resource });\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// Ignore error\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\t// Return early if no external resource is a folder or workspace\n\t\tif (toOpen.length === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Open in separate windows if we drop workspaces or just one folder\n\t\tif (toOpen.length > folderURIs.length || folderURIs.length === 1) {\n\t\t\tawait this.hostService.openWindow(toOpen);\n\t\t}\n\n\t\t// Add to workspace if we are in a temporary workspace\n\t\telse if (isTemporaryWorkspace(this.contextService.getWorkspace())) {\n\t\t\tawait this.workspaceEditingService.addFolders(folderURIs);\n\t\t}\n\n\t\t// Finally, enter untitled workspace when dropping >1 folders\n\t\telse {\n\t\t\tawait this.workspaceEditingService.createAndEnterWorkspace(\n\t\t\t\tfolderURIs,\n\t\t\t);\n\t\t}\n\n\t\treturn true;\n\t}\n}\n\nexport function fillEditorsDragData(\n\taccessor: ServicesAccessor,\n\tresources: URI[],\n\tevent: DragMouseEvent | DragEvent,\n\toptions?: { disableStandardTransfer: boolean },\n): void;\nexport function fillEditorsDragData(\n\taccessor: ServicesAccessor,\n\tresources: IResourceStat[],\n\tevent: DragMouseEvent | DragEvent,\n\toptions?: { disableStandardTransfer: boolean },\n): void;\nexport function fillEditorsDragData(\n\taccessor: ServicesAccessor,\n\teditors: IEditorIdentifier[],\n\tevent: DragMouseEvent | DragEvent,\n\toptions?: { disableStandardTransfer: boolean },\n): void;\nexport function fillEditorsDragData(\n\taccessor: ServicesAccessor,\n\tresourcesOrEditors: Array<URI | IResourceStat | IEditorIdentifier>,\n\tevent: DragMouseEvent | DragEvent,\n\toptions?: { disableStandardTransfer: boolean },\n): void {\n\tif (resourcesOrEditors.length === 0 || !event.dataTransfer) {\n\t\treturn;\n\t}\n\n\tconst textFileService = accessor.get(ITextFileService);\n\tconst editorService = accessor.get(IEditorService);\n\tconst fileService = accessor.get(IFileService);\n\tconst labelService = accessor.get(ILabelService);\n\n\t// Extract resources from URIs or Editors that\n\t// can be handled by the file service\n\tconst resources = coalesce(\n\t\tresourcesOrEditors.map((resourceOrEditor) => {\n\t\t\tif (URI.isUri(resourceOrEditor)) {\n\t\t\t\treturn { resource: resourceOrEditor };\n\t\t\t}\n\n\t\t\tif (isEditorIdentifier(resourceOrEditor)) {\n\t\t\t\tif (URI.isUri(resourceOrEditor.editor.resource)) {\n\t\t\t\t\treturn { resource: resourceOrEditor.editor.resource };\n\t\t\t\t}\n\n\t\t\t\treturn undefined; // editor without resource\n\t\t\t}\n\n\t\t\treturn resourceOrEditor;\n\t\t}),\n\t);\n\n\tconst fileSystemResources = resources.filter(({ resource }) =>\n\t\tfileService.hasProvider(resource),\n\t);\n\tif (!options?.disableStandardTransfer) {\n\t\t// Text: allows to paste into text-capable areas\n\t\tconst lineDelimiter = isWindows ? \"\\r\\n\" : \"\\n\";\n\t\tevent.dataTransfer.setData(\n\t\t\tDataTransfers.TEXT,\n\t\t\tfileSystemResources\n\t\t\t\t.map(({ resource }) =>\n\t\t\t\t\tlabelService.getUriLabel(resource, { noPrefix: true }),\n\t\t\t\t)\n\t\t\t\t.join(lineDelimiter),\n\t\t);\n\n\t\t// Download URL: enables support to drag a tab as file to desktop\n\t\t// Requirements:\n\t\t// - Chrome/Edge only\n\t\t// - only a single file is supported\n\t\t// - only file:/ resources are supported\n\t\tconst firstFile = fileSystemResources.find(\n\t\t\t({ isDirectory }) => !isDirectory,\n\t\t);\n\t\tif (firstFile) {\n\t\t\tconst firstFileUri = FileAccess.uriToFileUri(firstFile.resource); // enforce `file:` URIs\n\t\t\tif (firstFileUri.scheme === Schemas.file) {\n\t\t\t\tevent.dataTransfer.setData(\n\t\t\t\t\tDataTransfers.DOWNLOAD_URL,\n\t\t\t\t\t[\n\t\t\t\t\t\tMimes.binary,\n\t\t\t\t\t\tbasename(firstFile.resource),\n\t\t\t\t\t\tfirstFileUri.toString(),\n\t\t\t\t\t].join(\":\"),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Resource URLs: allows to drop multiple file resources to a target in VS Code\n\tconst files = fileSystemResources.filter(({ isDirectory }) => !isDirectory);\n\tif (files.length) {\n\t\tevent.dataTransfer.setData(\n\t\t\tDataTransfers.RESOURCES,\n\t\t\tJSON.stringify(files.map(({ resource }) => resource.toString())),\n\t\t);\n\t}\n\n\t// Contributions\n\tconst contributions = Registry.as<IDragAndDropContributionRegistry>(\n\t\tExtensions.DragAndDropContribution,\n\t).getAll();\n\tfor (const contribution of contributions) {\n\t\tcontribution.setData(resources, event);\n\t}\n\n\t// Editors: enables cross window DND of editors\n\t// into the editor area while presering UI state\n\tconst draggedEditors: IDraggedResourceEditorInput[] = [];\n\n\tfor (const resourceOrEditor of resourcesOrEditors) {\n\t\t// Extract resource editor from provided object or URI\n\t\tlet editor: IDraggedResourceEditorInput | undefined;\n\t\tif (isEditorIdentifier(resourceOrEditor)) {\n\t\t\tconst untypedEditor = resourceOrEditor.editor.toUntyped({\n\t\t\t\tpreserveViewState: resourceOrEditor.groupId,\n\t\t\t});\n\t\t\tif (untypedEditor) {\n\t\t\t\teditor = {\n\t\t\t\t\t...untypedEditor,\n\t\t\t\t\tresource:\n\t\t\t\t\t\tEditorResourceAccessor.getCanonicalUri(untypedEditor),\n\t\t\t\t};\n\t\t\t}\n\t\t} else if (URI.isUri(resourceOrEditor)) {\n\t\t\tconst { selection, uri } = extractSelection(resourceOrEditor);\n\t\t\teditor = {\n\t\t\t\tresource: uri,\n\t\t\t\toptions: selection ? { selection } : undefined,\n\t\t\t};\n\t\t} else if (!resourceOrEditor.isDirectory) {\n\t\t\teditor = { resource: resourceOrEditor.resource };\n\t\t}\n\n\t\tif (!editor) {\n\t\t\tcontinue; // skip over editors that cannot be transferred via dnd\n\t\t}\n\n\t\t// Fill in some properties if they are not there already by accessing\n\t\t// some well known things from the text file universe.\n\t\t// This is not ideal for custom editors, but those have a chance to\n\t\t// provide everything from the `toUntyped` method.\n\t\t{\n\t\t\tconst resource = editor.resource;\n\t\t\tif (resource) {\n\t\t\t\tconst textFileModel = textFileService.files.get(resource);\n\t\t\t\tif (textFileModel) {\n\t\t\t\t\t// language\n\t\t\t\t\tif (typeof editor.languageId !== \"string\") {\n\t\t\t\t\t\teditor.languageId = textFileModel.getLanguageId();\n\t\t\t\t\t}\n\n\t\t\t\t\t// encoding\n\t\t\t\t\tif (typeof editor.encoding !== \"string\") {\n\t\t\t\t\t\teditor.encoding = textFileModel.getEncoding();\n\t\t\t\t\t}\n\n\t\t\t\t\t// contents (only if dirty and not too large)\n\t\t\t\t\tif (\n\t\t\t\t\t\ttypeof editor.contents !== \"string\" &&\n\t\t\t\t\t\ttextFileModel.isDirty() &&\n\t\t\t\t\t\t!textFileModel.textEditorModel.isTooLargeForHeapOperation()\n\t\t\t\t\t) {\n\t\t\t\t\t\teditor.contents =\n\t\t\t\t\t\t\ttextFileModel.textEditorModel.getValue();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// viewState\n\t\t\t\tif (!editor.options?.viewState) {\n\t\t\t\t\teditor.options = {\n\t\t\t\t\t\t...editor.options,\n\t\t\t\t\t\tviewState: (() => {\n\t\t\t\t\t\t\tfor (const visibleEditorPane of editorService.visibleEditorPanes) {\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tisEqual(\n\t\t\t\t\t\t\t\t\t\tvisibleEditorPane.input.resource,\n\t\t\t\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tconst viewState =\n\t\t\t\t\t\t\t\t\t\tvisibleEditorPane.getViewState();\n\t\t\t\t\t\t\t\t\tif (viewState) {\n\t\t\t\t\t\t\t\t\t\treturn viewState;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t})(),\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add as dragged editor\n\t\tdraggedEditors.push(editor);\n\t}\n\n\tif (draggedEditors.length) {\n\t\tevent.dataTransfer.setData(\n\t\t\tCodeDataTransfers.EDITORS,\n\t\t\tstringify(draggedEditors),\n\t\t);\n\n\t\t// Add a URI list entry\n\t\tconst uriListEntries: URI[] = [];\n\t\tfor (const editor of draggedEditors) {\n\t\t\tif (editor.resource) {\n\t\t\t\turiListEntries.push(editor.resource);\n\t\t\t} else if (isResourceDiffEditorInput(editor)) {\n\t\t\t\tif (editor.modified.resource) {\n\t\t\t\t\turiListEntries.push(editor.modified.resource);\n\t\t\t\t}\n\t\t\t} else if (isResourceSideBySideEditorInput(editor)) {\n\t\t\t\tif (editor.primary.resource) {\n\t\t\t\t\turiListEntries.push(editor.primary.resource);\n\t\t\t\t}\n\t\t\t} else if (isResourceMergeEditorInput(editor)) {\n\t\t\t\turiListEntries.push(editor.result.resource);\n\t\t\t}\n\t\t}\n\n\t\t// Due to https://bugs.chromium.org/p/chromium/issues/detail?id=239745, we can only set\n\t\t// a single uri for the real `text/uri-list` type. Otherwise all uris end up joined together\n\t\t// However we write the full uri-list to an internal type so that other parts of VS Code\n\t\t// can use the full list.\n\t\tif (!options?.disableStandardTransfer) {\n\t\t\tevent.dataTransfer.setData(\n\t\t\t\tMimes.uriList,\n\t\t\t\tUriList.create(uriListEntries.slice(0, 1)),\n\t\t\t);\n\t\t}\n\t\tevent.dataTransfer.setData(\n\t\t\tDataTransfers.INTERNAL_URI_LIST,\n\t\t\tUriList.create(uriListEntries),\n\t\t);\n\t}\n}\n\n//#endregion\n\n//#region Composites DND\n\nexport type Before2D = {\n\treadonly verticallyBefore: boolean;\n\treadonly horizontallyBefore: boolean;\n};\n\nexport interface ICompositeDragAndDrop {\n\tdrop(\n\t\tdata: IDragAndDropData,\n\t\ttarget: string | undefined,\n\t\toriginalEvent: DragEvent,\n\t\tbefore?: Before2D,\n\t): void;\n\tonDragOver(\n\t\tdata: IDragAndDropData,\n\t\ttarget: string | undefined,\n\t\toriginalEvent: DragEvent,\n\t): boolean;\n\tonDragEnter(\n\t\tdata: IDragAndDropData,\n\t\ttarget: string | undefined,\n\t\toriginalEvent: DragEvent,\n\t): boolean;\n}\n\nexport interface ICompositeDragAndDropObserverCallbacks {\n\tonDragEnter?: (e: IDraggedCompositeData) => void;\n\tonDragLeave?: (e: IDraggedCompositeData) => void;\n\tonDrop?: (e: IDraggedCompositeData) => void;\n\tonDragOver?: (e: IDraggedCompositeData) => void;\n\tonDragStart?: (e: IDraggedCompositeData) => void;\n\tonDragEnd?: (e: IDraggedCompositeData) => void;\n}\n\nexport class CompositeDragAndDropData implements IDragAndDropData {\n\tconstructor(\n\t\tprivate type: \"view\" | \"composite\",\n\t\tprivate id: string,\n\t) {}\n\n\tupdate(dataTransfer: DataTransfer): void {\n\t\t// no-op\n\t}\n\n\tgetData(): {\n\t\ttype: \"view\" | \"composite\";\n\t\tid: string;\n\t} {\n\t\treturn { type: this.type, id: this.id };\n\t}\n}\n\nexport interface IDraggedCompositeData {\n\treadonly eventData: DragEvent;\n\treadonly dragAndDropData: CompositeDragAndDropData;\n}\n\nexport class DraggedCompositeIdentifier {\n\tconstructor(private compositeId: string) {}\n\n\tget id(): string {\n\t\treturn this.compositeId;\n\t}\n}\n\nexport class DraggedViewIdentifier {\n\tconstructor(private viewId: string) {}\n\n\tget id(): string {\n\t\treturn this.viewId;\n\t}\n}\n\nexport type ViewType = \"composite\" | \"view\";\n\nexport class CompositeDragAndDropObserver extends Disposable {\n\tprivate static instance: CompositeDragAndDropObserver | undefined;\n\n\tstatic get INSTANCE(): CompositeDragAndDropObserver {\n\t\tif (!CompositeDragAndDropObserver.instance) {\n\t\t\tCompositeDragAndDropObserver.instance =\n\t\t\t\tnew CompositeDragAndDropObserver();\n\t\t\tmarkAsSingleton(CompositeDragAndDropObserver.instance);\n\t\t}\n\n\t\treturn CompositeDragAndDropObserver.instance;\n\t}\n\n\tprivate readonly transferData = LocalSelectionTransfer.getInstance<\n\t\tDraggedCompositeIdentifier | DraggedViewIdentifier\n\t>();\n\n\tprivate readonly onDragStart = this._register(\n\t\tnew Emitter<IDraggedCompositeData>(),\n\t);\n\tprivate readonly onDragEnd = this._register(\n\t\tnew Emitter<IDraggedCompositeData>(),\n\t);\n\n\tprivate constructor() {\n\t\tsuper();\n\n\t\tthis._register(\n\t\t\tthis.onDragEnd.event((e) => {\n\t\t\t\tconst id = e.dragAndDropData.getData().id;\n\t\t\t\tconst type = e.dragAndDropData.getData().type;\n\t\t\t\tconst data = this.readDragData(type);\n\t\t\t\tif (data?.getData().id === id) {\n\t\t\t\t\tthis.transferData.clearData(\n\t\t\t\t\t\ttype === \"view\"\n\t\t\t\t\t\t\t? DraggedViewIdentifier.prototype\n\t\t\t\t\t\t\t: DraggedCompositeIdentifier.prototype,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate readDragData(type: ViewType): CompositeDragAndDropData | undefined {\n\t\tif (\n\t\t\tthis.transferData.hasData(\n\t\t\t\ttype === \"view\"\n\t\t\t\t\t? DraggedViewIdentifier.prototype\n\t\t\t\t\t: DraggedCompositeIdentifier.prototype,\n\t\t\t)\n\t\t) {\n\t\t\tconst data = this.transferData.getData(\n\t\t\t\ttype === \"view\"\n\t\t\t\t\t? DraggedViewIdentifier.prototype\n\t\t\t\t\t: DraggedCompositeIdentifier.prototype,\n\t\t\t);\n\t\t\tif (data && data[0]) {\n\t\t\t\treturn new CompositeDragAndDropData(type, data[0].id);\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate writeDragData(id: string, type: ViewType): void {\n\t\tthis.transferData.setData(\n\t\t\t[\n\t\t\t\ttype === \"view\"\n\t\t\t\t\t? new DraggedViewIdentifier(id)\n\t\t\t\t\t: new DraggedCompositeIdentifier(id),\n\t\t\t],\n\t\t\ttype === \"view\"\n\t\t\t\t? DraggedViewIdentifier.prototype\n\t\t\t\t: DraggedCompositeIdentifier.prototype,\n\t\t);\n\t}\n\n\tregisterTarget(\n\t\telement: HTMLElement,\n\t\tcallbacks: ICompositeDragAndDropObserverCallbacks,\n\t): IDisposable {\n\t\tconst disposableStore = new DisposableStore();\n\t\tdisposableStore.add(\n\t\t\tnew DragAndDropObserver(element, {\n\t\t\t\tonDragEnter: (e) => {\n\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\tif (callbacks.onDragEnter) {\n\t\t\t\t\t\tconst data =\n\t\t\t\t\t\t\tthis.readDragData(\"composite\") ||\n\t\t\t\t\t\t\tthis.readDragData(\"view\");\n\t\t\t\t\t\tif (data) {\n\t\t\t\t\t\t\tcallbacks.onDragEnter({\n\t\t\t\t\t\t\t\teventData: e,\n\t\t\t\t\t\t\t\tdragAndDropData: data,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tonDragLeave: (e) => {\n\t\t\t\t\tconst data =\n\t\t\t\t\t\tthis.readDragData(\"composite\") ||\n\t\t\t\t\t\tthis.readDragData(\"view\");\n\t\t\t\t\tif (callbacks.onDragLeave && data) {\n\t\t\t\t\t\tcallbacks.onDragLeave({\n\t\t\t\t\t\t\teventData: e,\n\t\t\t\t\t\t\tdragAndDropData: data,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tonDrop: (e) => {\n\t\t\t\t\tif (callbacks.onDrop) {\n\t\t\t\t\t\tconst data =\n\t\t\t\t\t\t\tthis.readDragData(\"composite\") ||\n\t\t\t\t\t\t\tthis.readDragData(\"view\");\n\t\t\t\t\t\tif (!data) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcallbacks.onDrop({\n\t\t\t\t\t\t\teventData: e,\n\t\t\t\t\t\t\tdragAndDropData: data,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// Fire drag event in case drop handler destroys the dragged element\n\t\t\t\t\t\tthis.onDragEnd.fire({\n\t\t\t\t\t\t\teventData: e,\n\t\t\t\t\t\t\tdragAndDropData: data,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tonDragOver: (e) => {\n\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\tif (callbacks.onDragOver) {\n\t\t\t\t\t\tconst data =\n\t\t\t\t\t\t\tthis.readDragData(\"composite\") ||\n\t\t\t\t\t\t\tthis.readDragData(\"view\");\n\t\t\t\t\t\tif (!data) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcallbacks.onDragOver({\n\t\t\t\t\t\t\teventData: e,\n\t\t\t\t\t\t\tdragAndDropData: data,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t}),\n\t\t);\n\n\t\tif (callbacks.onDragStart) {\n\t\t\tthis.onDragStart.event(\n\t\t\t\t(e) => {\n\t\t\t\t\tcallbacks.onDragStart!(e);\n\t\t\t\t},\n\t\t\t\tthis,\n\t\t\t\tdisposableStore,\n\t\t\t);\n\t\t}\n\n\t\tif (callbacks.onDragEnd) {\n\t\t\tthis.onDragEnd.event(\n\t\t\t\t(e) => {\n\t\t\t\t\tcallbacks.onDragEnd!(e);\n\t\t\t\t},\n\t\t\t\tthis,\n\t\t\t\tdisposableStore,\n\t\t\t);\n\t\t}\n\n\t\treturn this._register(disposableStore);\n\t}\n\n\tregisterDraggable(\n\t\telement: HTMLElement,\n\t\tdraggedItemProvider: () => { type: ViewType; id: string },\n\t\tcallbacks: ICompositeDragAndDropObserverCallbacks,\n\t): IDisposable {\n\t\telement.draggable = true;\n\n\t\tconst disposableStore = new DisposableStore();\n\n\t\tdisposableStore.add(\n\t\t\tnew DragAndDropObserver(element, {\n\t\t\t\tonDragStart: (e) => {\n\t\t\t\t\tconst { id, type } = draggedItemProvider();\n\t\t\t\t\tthis.writeDragData(id, type);\n\n\t\t\t\t\te.dataTransfer?.setDragImage(element, 0, 0);\n\n\t\t\t\t\tthis.onDragStart.fire({\n\t\t\t\t\t\teventData: e,\n\t\t\t\t\t\tdragAndDropData: this.readDragData(type)!,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tonDragEnd: (e) => {\n\t\t\t\t\tconst { type } = draggedItemProvider();\n\t\t\t\t\tconst data = this.readDragData(type);\n\t\t\t\t\tif (!data) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.onDragEnd.fire({\n\t\t\t\t\t\teventData: e,\n\t\t\t\t\t\tdragAndDropData: data,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tonDragEnter: (e) => {\n\t\t\t\t\tif (callbacks.onDragEnter) {\n\t\t\t\t\t\tconst data =\n\t\t\t\t\t\t\tthis.readDragData(\"composite\") ||\n\t\t\t\t\t\t\tthis.readDragData(\"view\");\n\t\t\t\t\t\tif (!data) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (data) {\n\t\t\t\t\t\t\tcallbacks.onDragEnter({\n\t\t\t\t\t\t\t\teventData: e,\n\t\t\t\t\t\t\t\tdragAndDropData: data,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tonDragLeave: (e) => {\n\t\t\t\t\tconst data =\n\t\t\t\t\t\tthis.readDragData(\"composite\") ||\n\t\t\t\t\t\tthis.readDragData(\"view\");\n\t\t\t\t\tif (!data) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tcallbacks.onDragLeave?.({\n\t\t\t\t\t\teventData: e,\n\t\t\t\t\t\tdragAndDropData: data,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tonDrop: (e) => {\n\t\t\t\t\tif (callbacks.onDrop) {\n\t\t\t\t\t\tconst data =\n\t\t\t\t\t\t\tthis.readDragData(\"composite\") ||\n\t\t\t\t\t\t\tthis.readDragData(\"view\");\n\t\t\t\t\t\tif (!data) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcallbacks.onDrop({\n\t\t\t\t\t\t\teventData: e,\n\t\t\t\t\t\t\tdragAndDropData: data,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// Fire drag event in case drop handler destroys the dragged element\n\t\t\t\t\t\tthis.onDragEnd.fire({\n\t\t\t\t\t\t\teventData: e,\n\t\t\t\t\t\t\tdragAndDropData: data,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tonDragOver: (e) => {\n\t\t\t\t\tif (callbacks.onDragOver) {\n\t\t\t\t\t\tconst data =\n\t\t\t\t\t\t\tthis.readDragData(\"composite\") ||\n\t\t\t\t\t\t\tthis.readDragData(\"view\");\n\t\t\t\t\t\tif (!data) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcallbacks.onDragOver({\n\t\t\t\t\t\t\teventData: e,\n\t\t\t\t\t\t\tdragAndDropData: data,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t}),\n\t\t);\n\n\t\tif (callbacks.onDragStart) {\n\t\t\tthis.onDragStart.event(\n\t\t\t\t(e) => {\n\t\t\t\t\tcallbacks.onDragStart!(e);\n\t\t\t\t},\n\t\t\t\tthis,\n\t\t\t\tdisposableStore,\n\t\t\t);\n\t\t}\n\n\t\tif (callbacks.onDragEnd) {\n\t\t\tthis.onDragEnd.event(\n\t\t\t\t(e) => {\n\t\t\t\t\tcallbacks.onDragEnd!(e);\n\t\t\t\t},\n\t\t\t\tthis,\n\t\t\t\tdisposableStore,\n\t\t\t);\n\t\t}\n\n\t\treturn this._register(disposableStore);\n\t}\n}\n\nexport function toggleDropEffect(\n\tdataTransfer: DataTransfer | null,\n\tdropEffect: \"none\" | \"copy\" | \"link\" | \"move\",\n\tshouldHaveIt: boolean,\n) {\n\tif (!dataTransfer) {\n\t\treturn;\n\t}\n\n\tdataTransfer.dropEffect = shouldHaveIt ? dropEffect : \"none\";\n}\n\nexport class ResourceListDnDHandler<T> implements IListDragAndDrop<T> {\n\tconstructor(\n\t\tprivate readonly toResource: (e: T) => URI | null,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService\n\t) { }\n\n\tgetDragURI(element: T): string | null {\n\t\tconst resource = this.toResource(element);\n\t\treturn resource ? resource.toString() : null;\n\t}\n\n\tgetDragLabel(elements: T[]): string | undefined {\n\t\tconst resources = coalesce(elements.map(this.toResource));\n\t\treturn resources.length === 1\n\t\t\t? basename(resources[0])\n\t\t\t: resources.length > 1\n\t\t\t\t? String(resources.length)\n\t\t\t\t: undefined;\n\t}\n\n\tonDragStart(data: IDragAndDropData, originalEvent: DragEvent): void {\n\t\tconst resources: URI[] = [];\n\t\tfor (const element of (data as ElementsDragAndDropData<T>).elements) {\n\t\t\tconst resource = this.toResource(element);\n\t\t\tif (resource) {\n\t\t\t\tresources.push(resource);\n\t\t\t}\n\t\t}\n\t\tif (resources.length) {\n\t\t\t// Apply some datatransfer types to allow for dragging the element outside of the application\n\t\t\tthis.instantiationService.invokeFunction((accessor) =>\n\t\t\t\tfillEditorsDragData(accessor, resources, originalEvent),\n\t\t\t);\n\t\t}\n\t}\n\n\tonDragOver(\n\t\tdata: IDragAndDropData,\n\t\ttargetElement: T,\n\t\ttargetIndex: number,\n\t\ttargetSector: ListViewTargetSector | undefined,\n\t\toriginalEvent: DragEvent,\n\t): boolean | ITreeDragOverReaction {\n\t\treturn false;\n\t}\n\n\tdrop(\n\t\tdata: IDragAndDropData,\n\t\ttargetElement: T,\n\t\ttargetIndex: number,\n\t\ttargetSector: ListViewTargetSector | undefined,\n\t\toriginalEvent: DragEvent,\n\t): void {}\n\n\tdispose(): void {}\n}\n\n//#endregion\n\nclass GlobalWindowDraggedOverTracker extends Disposable {\n\tprivate static readonly CHANNEL_NAME =\n\t\t\"monaco-workbench-global-dragged-over\";\n\n\tprivate readonly broadcaster = this._register(\n\t\tnew BroadcastDataChannel<boolean>(\n\t\t\tGlobalWindowDraggedOverTracker.CHANNEL_NAME,\n\t\t),\n\t);\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(\n\t\t\tEvent.runAndSubscribe(\n\t\t\t\tonDidRegisterWindow,\n\t\t\t\t({ window, disposables }) => {\n\t\t\t\t\tdisposables.add(\n\t\t\t\t\t\taddDisposableListener(\n\t\t\t\t\t\t\twindow,\n\t\t\t\t\t\t\tEventType.DRAG_OVER,\n\t\t\t\t\t\t\t() => this.markDraggedOver(false),\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tdisposables.add(\n\t\t\t\t\t\taddDisposableListener(\n\t\t\t\t\t\t\twindow,\n\t\t\t\t\t\t\tEventType.DRAG_LEAVE,\n\t\t\t\t\t\t\t() => this.clearDraggedOver(false),\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\t{ window: mainWindow, disposables: this._store },\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.broadcaster.onDidReceiveData((data) => {\n\t\t\t\tif (data === true) {\n\t\t\t\t\tthis.markDraggedOver(true);\n\t\t\t\t} else {\n\t\t\t\t\tthis.clearDraggedOver(true);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate draggedOver = false;\n\tget isDraggedOver(): boolean {\n\t\treturn this.draggedOver;\n\t}\n\n\tprivate markDraggedOver(fromBroadcast: boolean): void {\n\t\tif (this.draggedOver === true) {\n\t\t\treturn; // alrady marked\n\t\t}\n\n\t\tthis.draggedOver = true;\n\n\t\tif (!fromBroadcast) {\n\t\t\tthis.broadcaster.postData(true);\n\t\t}\n\t}\n\n\tprivate clearDraggedOver(fromBroadcast: boolean): void {\n\t\tif (this.draggedOver === false) {\n\t\t\treturn; // alrady cleared\n\t\t}\n\n\t\tthis.draggedOver = false;\n\n\t\tif (!fromBroadcast) {\n\t\t\tthis.broadcaster.postData(false);\n\t\t}\n\t}\n}\n\nconst globalDraggedOverTracker = new GlobalWindowDraggedOverTracker();\n\n/**\n * Returns whether the workbench is currently dragged over in any of\n * the opened windows (main windows and auxiliary windows).\n */\nexport function isWindowDraggedOver(): boolean {\n\treturn globalDraggedOverTracker.isDraggedOver;\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,4BAA4B;AACrC;AAAA,EACC;AAAA,OAEM;AACP;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AAQP,SAAS,kBAAkB;AAC3B,SAAS,gBAAgB;AACzB;AAAA,EACC;AAAA,OAEM;AACP,SAAS,SAAS,aAAa;AAC/B;AAAA,EACC;AAAA,EACA;AAAA,EAEA;AAAA,OACM;AACP,SAAS,iBAAiB;AAC1B,SAAS,aAAa;AACtB,SAAS,YAAY,eAAe;AACpC,SAAS,iBAAiB;AAC1B,SAAS,UAAU,eAAe;AAClC,SAAS,WAAW;AACpB;AAAA,EACC;AAAA,EACA;AAAA,EAIA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AAEP,SAAS,oBAAoB;AAC7B;AAAA,EACC;AAAA,OAEM;AACP,SAAS,qBAAqB;AAC9B,SAAS,wBAAwB;AACjC,SAAS,gBAAgB;AAEzB;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP;AAAA,EAEC;AAAA,OACM;AACP;AAAA,EACC;AAAA,EAGA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AAEP,SAAS,sBAAsB;AAC/B,SAAS,oBAAoB;AAC7B,SAAS,wBAAwB;AACjC,SAAS,gCAAgC;AAIlC,MAAM,wBAAwB;AAAA,EACpC,YAAqB,YAA+B;AAA/B;AAAA,EAAgC;AAAA,EAzFtD,OAwFqC;AAAA;AAAA;AAErC;AAEO,MAAM,6BAA6B;AAAA,EACzC,YAAqB,YAA6B;AAA7B;AAAA,EAA8B;AAAA,EA7FpD,OA4F0C;AAAA;AAAA;AAE1C;AAEA,eAAsB,oBACrB,cAC8C;AAC9C,QAAM,UAAyC,CAAC;AAChD,QAAM,eAAe,MAAM,QAAQ,YAAY;AAG/C,MAAI,aAAa,IAAI,YAAY,GAAG;AACnC,QAAI;AACH,YAAM,WAAW,MAAM,aAAa,IAAI,YAAY,GAAG,SAAS;AAChE,YAAM,mBAAmB,KAAK;AAAA,QAC7B,QAAQ,MAAM,YAAY,EAAE;AAAA,MAC7B;AACA,cAAQ;AAAA,QACP,GAAG;AAAA,UACF;AAAA,QACD;AAAA,MACD;AAAA,IACD,SAAS,OAAO;AAAA,IAEhB;AAAA,EACD;AAEA,SAAO;AACR;AAxBsB;AAwCf,IAAM,uBAAN,MAA2B;AAAA,EACjC,YACkB,SACc,aACM,mBACJ,eACU,yBACZ,aACY,gBACH,sBACvC;AARgB;AACc;AACM;AACJ;AACU;AACZ;AACY;AACH;AAAA,EAEzC;AAAA,EAnJD,OAwIkC;AAAA;AAAA;AAAA,EAajC,MAAM,WACL,OACA,cACA,oBACA,WACA,SACgB;AAChB,UAAM,UAAU,MAAM,KAAK,qBAAqB;AAAA,MAC/C,CAAC,aAAa,+BAA+B,UAAU,KAAK;AAAA,IAC7D;AACA,QAAI,CAAC,QAAQ,QAAQ;AACpB;AAAA,IACD;AAGA,UAAM,KAAK,YAAY,MAAM,YAAY;AAGzC,QAAI,KAAK,QAAQ,oBAAoB;AACpC,YAAM,qCAAqC;AAAA,QAC1C,QACE;AAAA,UACA,CAAC,WACA,OAAO,sBACP,OAAO,UAAU,WAAW,QAAQ;AAAA,QACtC,EACC,IAAI,CAAC,WAAW,OAAO,QAAQ;AAAA,MAClC;AACA,UAAI,mCAAmC,SAAS,GAAG;AAClD,cAAM,qBAAqB,MAAM,KAAK;AAAA,UACrC;AAAA,QACD;AACA,YAAI,oBAAoB;AACvB;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAGA,UAAM,qBAAqB;AAAA,MAC1B,QACE;AAAA,QACA,CAAC,WACA,OAAO,cACP,OAAO,UAAU,WAAW,QAAQ;AAAA,MACtC,EACC,IAAI,CAAC,WAAW,OAAO,QAAQ;AAAA,IAClC;AACA,QAAI,mBAAmB,QAAQ;AAC9B,WAAK,kBAAkB;AAAA,QACtB,mBAAmB,IAAI,CAAC,cAAc,EAAE,SAAS,SAAS,EAAE;AAAA,MAC7D;AAAA,IACD;AAGA,UAAM,cAAc,qBAAqB;AACzC,UAAM,KAAK,cAAc;AAAA,MACxB,QAAQ,IAAI,CAAC,YAAY;AAAA,QACxB,GAAG;AAAA,QACH,UAAU,OAAO;AAAA,QACjB,SAAS;AAAA,UACR,GAAG,OAAO;AAAA,UACV,GAAG;AAAA,UACH,QAAQ;AAAA,QACT;AAAA,MACD,EAAE;AAAA,MACF;AAAA,MACA,EAAE,eAAe,KAAK;AAAA,IACvB;AAGA,gBAAY,WAAW;AAAA,EACxB;AAAA,EAEA,MAAc,oBAAoB,WAAoC;AACrE,UAAM,SAA4B,CAAC;AACnC,UAAM,aAA6C,CAAC;AAEpD,UAAM,QAAQ;AAAA,MACb,UAAU,IAAI,OAAO,aAAa;AAEjC,YAAI,0BAA0B,QAAQ,GAAG;AACxC,iBAAO,KAAK,EAAE,cAAc,SAAS,CAAC;AAEtC;AAAA,QACD;AAGA,YAAI;AACH,gBAAM,OAAO,MAAM,KAAK,YAAY,KAAK,QAAQ;AACjD,cAAI,KAAK,aAAa;AACrB,mBAAO,KAAK,EAAE,WAAW,KAAK,SAAS,CAAC;AACxC,uBAAW,KAAK,EAAE,KAAK,KAAK,SAAS,CAAC;AAAA,UACvC;AAAA,QACD,SAAS,OAAO;AAAA,QAEhB;AAAA,MACD,CAAC;AAAA,IACF;AAGA,QAAI,OAAO,WAAW,GAAG;AACxB,aAAO;AAAA,IACR;AAGA,QAAI,OAAO,SAAS,WAAW,UAAU,WAAW,WAAW,GAAG;AACjE,YAAM,KAAK,YAAY,WAAW,MAAM;AAAA,IACzC,WAGS,qBAAqB,KAAK,eAAe,aAAa,CAAC,GAAG;AAClE,YAAM,KAAK,wBAAwB,WAAW,UAAU;AAAA,IACzD,OAGK;AACJ,YAAM,KAAK,wBAAwB;AAAA,QAClC;AAAA,MACD;AAAA,IACD;AAEA,WAAO;AAAA,EACR;AACD;AAzIa,uBAAN;AAAA,EAGJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GATU;AA6JN,SAAS,oBACf,UACA,oBACA,OACA,SACO;AACP,MAAI,mBAAmB,WAAW,KAAK,CAAC,MAAM,cAAc;AAC3D;AAAA,EACD;AAEA,QAAM,kBAAkB,SAAS,IAAI,gBAAgB;AACrD,QAAM,gBAAgB,SAAS,IAAI,cAAc;AACjD,QAAM,cAAc,SAAS,IAAI,YAAY;AAC7C,QAAM,eAAe,SAAS,IAAI,aAAa;AAI/C,QAAM,YAAY;AAAA,IACjB,mBAAmB,IAAI,CAAC,qBAAqB;AAC5C,UAAI,IAAI,MAAM,gBAAgB,GAAG;AAChC,eAAO,EAAE,UAAU,iBAAiB;AAAA,MACrC;AAEA,UAAI,mBAAmB,gBAAgB,GAAG;AACzC,YAAI,IAAI,MAAM,iBAAiB,OAAO,QAAQ,GAAG;AAChD,iBAAO,EAAE,UAAU,iBAAiB,OAAO,SAAS;AAAA,QACrD;AAEA,eAAO;AAAA,MACR;AAEA,aAAO;AAAA,IACR,CAAC;AAAA,EACF;AAEA,QAAM,sBAAsB,UAAU;AAAA,IAAO,CAAC,EAAE,SAAS,MACxD,YAAY,YAAY,QAAQ;AAAA,EACjC;AACA,MAAI,CAAC,SAAS,yBAAyB;AAEtC,UAAM,gBAAgB,YAAY,SAAS;AAC3C,UAAM,aAAa;AAAA,MAClB,cAAc;AAAA,MACd,oBACE;AAAA,QAAI,CAAC,EAAE,SAAS,MAChB,aAAa,YAAY,UAAU,EAAE,UAAU,KAAK,CAAC;AAAA,MACtD,EACC,KAAK,aAAa;AAAA,IACrB;AAOA,UAAM,YAAY,oBAAoB;AAAA,MACrC,CAAC,EAAE,YAAY,MAAM,CAAC;AAAA,IACvB;AACA,QAAI,WAAW;AACd,YAAM,eAAe,WAAW,aAAa,UAAU,QAAQ;AAC/D,UAAI,aAAa,WAAW,QAAQ,MAAM;AACzC,cAAM,aAAa;AAAA,UAClB,cAAc;AAAA,UACd;AAAA,YACC,MAAM;AAAA,YACN,SAAS,UAAU,QAAQ;AAAA,YAC3B,aAAa,SAAS;AAAA,UACvB,EAAE,KAAK,GAAG;AAAA,QACX;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAGA,QAAM,QAAQ,oBAAoB,OAAO,CAAC,EAAE,YAAY,MAAM,CAAC,WAAW;AAC1E,MAAI,MAAM,QAAQ;AACjB,UAAM,aAAa;AAAA,MAClB,cAAc;AAAA,MACd,KAAK,UAAU,MAAM,IAAI,CAAC,EAAE,SAAS,MAAM,SAAS,SAAS,CAAC,CAAC;AAAA,IAChE;AAAA,EACD;AAGA,QAAM,gBAAgB,SAAS;AAAA,IAC9B,WAAW;AAAA,EACZ,EAAE,OAAO;AACT,aAAW,gBAAgB,eAAe;AACzC,iBAAa,QAAQ,WAAW,KAAK;AAAA,EACtC;AAIA,QAAM,iBAAgD,CAAC;AAEvD,aAAW,oBAAoB,oBAAoB;AAElD,QAAI;AACJ,QAAI,mBAAmB,gBAAgB,GAAG;AACzC,YAAM,gBAAgB,iBAAiB,OAAO,UAAU;AAAA,QACvD,mBAAmB,iBAAiB;AAAA,MACrC,CAAC;AACD,UAAI,eAAe;AAClB,iBAAS;AAAA,UACR,GAAG;AAAA,UACH,UACC,uBAAuB,gBAAgB,aAAa;AAAA,QACtD;AAAA,MACD;AAAA,IACD,WAAW,IAAI,MAAM,gBAAgB,GAAG;AACvC,YAAM,EAAE,WAAW,IAAI,IAAI,iBAAiB,gBAAgB;AAC5D,eAAS;AAAA,QACR,UAAU;AAAA,QACV,SAAS,YAAY,EAAE,UAAU,IAAI;AAAA,MACtC;AAAA,IACD,WAAW,CAAC,iBAAiB,aAAa;AACzC,eAAS,EAAE,UAAU,iBAAiB,SAAS;AAAA,IAChD;AAEA,QAAI,CAAC,QAAQ;AACZ;AAAA,IACD;AAMA;AACC,YAAM,WAAW,OAAO;AACxB,UAAI,UAAU;AACb,cAAM,gBAAgB,gBAAgB,MAAM,IAAI,QAAQ;AACxD,YAAI,eAAe;AAElB,cAAI,OAAO,OAAO,eAAe,UAAU;AAC1C,mBAAO,aAAa,cAAc,cAAc;AAAA,UACjD;AAGA,cAAI,OAAO,OAAO,aAAa,UAAU;AACxC,mBAAO,WAAW,cAAc,YAAY;AAAA,UAC7C;AAGA,cACC,OAAO,OAAO,aAAa,YAC3B,cAAc,QAAQ,KACtB,CAAC,cAAc,gBAAgB,2BAA2B,GACzD;AACD,mBAAO,WACN,cAAc,gBAAgB,SAAS;AAAA,UACzC;AAAA,QACD;AAGA,YAAI,CAAC,OAAO,SAAS,WAAW;AAC/B,iBAAO,UAAU;AAAA,YAChB,GAAG,OAAO;AAAA,YACV,YAAY,MAAM;AACjB,yBAAW,qBAAqB,cAAc,oBAAoB;AACjE,oBACC;AAAA,kBACC,kBAAkB,MAAM;AAAA,kBACxB;AAAA,gBACD,GACC;AACD,wBAAM,YACL,kBAAkB,aAAa;AAChC,sBAAI,WAAW;AACd,2BAAO;AAAA,kBACR;AAAA,gBACD;AAAA,cACD;AAEA,qBAAO;AAAA,YACR,GAAG;AAAA,UACJ;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAGA,mBAAe,KAAK,MAAM;AAAA,EAC3B;AAEA,MAAI,eAAe,QAAQ;AAC1B,UAAM,aAAa;AAAA,MAClB,kBAAkB;AAAA,MAClB,UAAU,cAAc;AAAA,IACzB;AAGA,UAAM,iBAAwB,CAAC;AAC/B,eAAW,UAAU,gBAAgB;AACpC,UAAI,OAAO,UAAU;AACpB,uBAAe,KAAK,OAAO,QAAQ;AAAA,MACpC,WAAW,0BAA0B,MAAM,GAAG;AAC7C,YAAI,OAAO,SAAS,UAAU;AAC7B,yBAAe,KAAK,OAAO,SAAS,QAAQ;AAAA,QAC7C;AAAA,MACD,WAAW,gCAAgC,MAAM,GAAG;AACnD,YAAI,OAAO,QAAQ,UAAU;AAC5B,yBAAe,KAAK,OAAO,QAAQ,QAAQ;AAAA,QAC5C;AAAA,MACD,WAAW,2BAA2B,MAAM,GAAG;AAC9C,uBAAe,KAAK,OAAO,OAAO,QAAQ;AAAA,MAC3C;AAAA,IACD;AAMA,QAAI,CAAC,SAAS,yBAAyB;AACtC,YAAM,aAAa;AAAA,QAClB,MAAM;AAAA,QACN,QAAQ,OAAO,eAAe,MAAM,GAAG,CAAC,CAAC;AAAA,MAC1C;AAAA,IACD;AACA,UAAM,aAAa;AAAA,MAClB,cAAc;AAAA,MACd,QAAQ,OAAO,cAAc;AAAA,IAC9B;AAAA,EACD;AACD;AA9NgB;AAqQT,MAAM,yBAAqD;AAAA,EACjE,YACS,MACA,IACP;AAFO;AACA;AAAA,EACN;AAAA,EA9iBJ,OA0iBkE;AAAA;AAAA;AAAA,EAMjE,OAAO,cAAkC;AAAA,EAEzC;AAAA,EAEA,UAGE;AACD,WAAO,EAAE,MAAM,KAAK,MAAM,IAAI,KAAK,GAAG;AAAA,EACvC;AACD;AAOO,MAAM,2BAA2B;AAAA,EACvC,YAAoB,aAAqB;AAArB;AAAA,EAAsB;AAAA,EAlkB3C,OAikBwC;AAAA;AAAA;AAAA,EAGvC,IAAI,KAAa;AAChB,WAAO,KAAK;AAAA,EACb;AACD;AAEO,MAAM,sBAAsB;AAAA,EAClC,YAAoB,QAAgB;AAAhB;AAAA,EAAiB;AAAA,EA1kBtC,OAykBmC;AAAA;AAAA;AAAA,EAGlC,IAAI,KAAa;AAChB,WAAO,KAAK;AAAA,EACb;AACD;AAIO,MAAM,qCAAqC,WAAW;AAAA,EAnlB7D,OAmlB6D;AAAA;AAAA;AAAA,EAC5D,OAAe;AAAA,EAEf,WAAW,WAAyC;AACnD,QAAI,CAAC,6BAA6B,UAAU;AAC3C,mCAA6B,WAC5B,IAAI,6BAA6B;AAClC,sBAAgB,6BAA6B,QAAQ;AAAA,IACtD;AAEA,WAAO,6BAA6B;AAAA,EACrC;AAAA,EAEiB,eAAe,uBAAuB,YAErD;AAAA,EAEe,cAAc,KAAK;AAAA,IACnC,IAAI,QAA+B;AAAA,EACpC;AAAA,EACiB,YAAY,KAAK;AAAA,IACjC,IAAI,QAA+B;AAAA,EACpC;AAAA,EAEQ,cAAc;AACrB,UAAM;AAEN,SAAK;AAAA,MACJ,KAAK,UAAU,MAAM,CAAC,MAAM;AAC3B,cAAM,KAAK,EAAE,gBAAgB,QAAQ,EAAE;AACvC,cAAM,OAAO,EAAE,gBAAgB,QAAQ,EAAE;AACzC,cAAM,OAAO,KAAK,aAAa,IAAI;AACnC,YAAI,MAAM,QAAQ,EAAE,OAAO,IAAI;AAC9B,eAAK,aAAa;AAAA,YACjB,SAAS,SACN,sBAAsB,YACtB,2BAA2B;AAAA,UAC/B;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF;AAAA,EACD;AAAA,EAEQ,aAAa,MAAsD;AAC1E,QACC,KAAK,aAAa;AAAA,MACjB,SAAS,SACN,sBAAsB,YACtB,2BAA2B;AAAA,IAC/B,GACC;AACD,YAAM,OAAO,KAAK,aAAa;AAAA,QAC9B,SAAS,SACN,sBAAsB,YACtB,2BAA2B;AAAA,MAC/B;AACA,UAAI,QAAQ,KAAK,CAAC,GAAG;AACpB,eAAO,IAAI,yBAAyB,MAAM,KAAK,CAAC,EAAE,EAAE;AAAA,MACrD;AAAA,IACD;AAEA,WAAO;AAAA,EACR;AAAA,EAEQ,cAAc,IAAY,MAAsB;AACvD,SAAK,aAAa;AAAA,MACjB;AAAA,QACC,SAAS,SACN,IAAI,sBAAsB,EAAE,IAC5B,IAAI,2BAA2B,EAAE;AAAA,MACrC;AAAA,MACA,SAAS,SACN,sBAAsB,YACtB,2BAA2B;AAAA,IAC/B;AAAA,EACD;AAAA,EAEA,eACC,SACA,WACc;AACd,UAAM,kBAAkB,IAAI,gBAAgB;AAC5C,oBAAgB;AAAA,MACf,IAAI,oBAAoB,SAAS;AAAA,QAChC,aAAa,wBAAC,MAAM;AACnB,YAAE,eAAe;AAEjB,cAAI,UAAU,aAAa;AAC1B,kBAAM,OACL,KAAK,aAAa,WAAW,KAC7B,KAAK,aAAa,MAAM;AACzB,gBAAI,MAAM;AACT,wBAAU,YAAY;AAAA,gBACrB,WAAW;AAAA,gBACX,iBAAiB;AAAA,cAClB,CAAC;AAAA,YACF;AAAA,UACD;AAAA,QACD,GAda;AAAA,QAeb,aAAa,wBAAC,MAAM;AACnB,gBAAM,OACL,KAAK,aAAa,WAAW,KAC7B,KAAK,aAAa,MAAM;AACzB,cAAI,UAAU,eAAe,MAAM;AAClC,sBAAU,YAAY;AAAA,cACrB,WAAW;AAAA,cACX,iBAAiB;AAAA,YAClB,CAAC;AAAA,UACF;AAAA,QACD,GAVa;AAAA,QAWb,QAAQ,wBAAC,MAAM;AACd,cAAI,UAAU,QAAQ;AACrB,kBAAM,OACL,KAAK,aAAa,WAAW,KAC7B,KAAK,aAAa,MAAM;AACzB,gBAAI,CAAC,MAAM;AACV;AAAA,YACD;AAEA,sBAAU,OAAO;AAAA,cAChB,WAAW;AAAA,cACX,iBAAiB;AAAA,YAClB,CAAC;AAGD,iBAAK,UAAU,KAAK;AAAA,cACnB,WAAW;AAAA,cACX,iBAAiB;AAAA,YAClB,CAAC;AAAA,UACF;AAAA,QACD,GApBQ;AAAA,QAqBR,YAAY,wBAAC,MAAM;AAClB,YAAE,eAAe;AAEjB,cAAI,UAAU,YAAY;AACzB,kBAAM,OACL,KAAK,aAAa,WAAW,KAC7B,KAAK,aAAa,MAAM;AACzB,gBAAI,CAAC,MAAM;AACV;AAAA,YACD;AAEA,sBAAU,WAAW;AAAA,cACpB,WAAW;AAAA,cACX,iBAAiB;AAAA,YAClB,CAAC;AAAA,UACF;AAAA,QACD,GAhBY;AAAA,MAiBb,CAAC;AAAA,IACF;AAEA,QAAI,UAAU,aAAa;AAC1B,WAAK,YAAY;AAAA,QAChB,CAAC,MAAM;AACN,oBAAU,YAAa,CAAC;AAAA,QACzB;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAEA,QAAI,UAAU,WAAW;AACxB,WAAK,UAAU;AAAA,QACd,CAAC,MAAM;AACN,oBAAU,UAAW,CAAC;AAAA,QACvB;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAEA,WAAO,KAAK,UAAU,eAAe;AAAA,EACtC;AAAA,EAEA,kBACC,SACA,qBACA,WACc;AACd,YAAQ,YAAY;AAEpB,UAAM,kBAAkB,IAAI,gBAAgB;AAE5C,oBAAgB;AAAA,MACf,IAAI,oBAAoB,SAAS;AAAA,QAChC,aAAa,wBAAC,MAAM;AACnB,gBAAM,EAAE,IAAI,KAAK,IAAI,oBAAoB;AACzC,eAAK,cAAc,IAAI,IAAI;AAE3B,YAAE,cAAc,aAAa,SAAS,GAAG,CAAC;AAE1C,eAAK,YAAY,KAAK;AAAA,YACrB,WAAW;AAAA,YACX,iBAAiB,KAAK,aAAa,IAAI;AAAA,UACxC,CAAC;AAAA,QACF,GAVa;AAAA,QAWb,WAAW,wBAAC,MAAM;AACjB,gBAAM,EAAE,KAAK,IAAI,oBAAoB;AACrC,gBAAM,OAAO,KAAK,aAAa,IAAI;AACnC,cAAI,CAAC,MAAM;AACV;AAAA,UACD;AAEA,eAAK,UAAU,KAAK;AAAA,YACnB,WAAW;AAAA,YACX,iBAAiB;AAAA,UAClB,CAAC;AAAA,QACF,GAXW;AAAA,QAYX,aAAa,wBAAC,MAAM;AACnB,cAAI,UAAU,aAAa;AAC1B,kBAAM,OACL,KAAK,aAAa,WAAW,KAC7B,KAAK,aAAa,MAAM;AACzB,gBAAI,CAAC,MAAM;AACV;AAAA,YACD;AAEA,gBAAI,MAAM;AACT,wBAAU,YAAY;AAAA,gBACrB,WAAW;AAAA,gBACX,iBAAiB;AAAA,cAClB,CAAC;AAAA,YACF;AAAA,UACD;AAAA,QACD,GAhBa;AAAA,QAiBb,aAAa,wBAAC,MAAM;AACnB,gBAAM,OACL,KAAK,aAAa,WAAW,KAC7B,KAAK,aAAa,MAAM;AACzB,cAAI,CAAC,MAAM;AACV;AAAA,UACD;AAEA,oBAAU,cAAc;AAAA,YACvB,WAAW;AAAA,YACX,iBAAiB;AAAA,UAClB,CAAC;AAAA,QACF,GAZa;AAAA,QAab,QAAQ,wBAAC,MAAM;AACd,cAAI,UAAU,QAAQ;AACrB,kBAAM,OACL,KAAK,aAAa,WAAW,KAC7B,KAAK,aAAa,MAAM;AACzB,gBAAI,CAAC,MAAM;AACV;AAAA,YACD;AAEA,sBAAU,OAAO;AAAA,cAChB,WAAW;AAAA,cACX,iBAAiB;AAAA,YAClB,CAAC;AAGD,iBAAK,UAAU,KAAK;AAAA,cACnB,WAAW;AAAA,cACX,iBAAiB;AAAA,YAClB,CAAC;AAAA,UACF;AAAA,QACD,GApBQ;AAAA,QAqBR,YAAY,wBAAC,MAAM;AAClB,cAAI,UAAU,YAAY;AACzB,kBAAM,OACL,KAAK,aAAa,WAAW,KAC7B,KAAK,aAAa,MAAM;AACzB,gBAAI,CAAC,MAAM;AACV;AAAA,YACD;AAEA,sBAAU,WAAW;AAAA,cACpB,WAAW;AAAA,cACX,iBAAiB;AAAA,YAClB,CAAC;AAAA,UACF;AAAA,QACD,GAdY;AAAA,MAeb,CAAC;AAAA,IACF;AAEA,QAAI,UAAU,aAAa;AAC1B,WAAK,YAAY;AAAA,QAChB,CAAC,MAAM;AACN,oBAAU,YAAa,CAAC;AAAA,QACzB;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAEA,QAAI,UAAU,WAAW;AACxB,WAAK,UAAU;AAAA,QACd,CAAC,MAAM;AACN,oBAAU,UAAW,CAAC;AAAA,QACvB;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAEA,WAAO,KAAK,UAAU,eAAe;AAAA,EACtC;AACD;AAEO,SAAS,iBACf,cACA,YACA,cACC;AACD,MAAI,CAAC,cAAc;AAClB;AAAA,EACD;AAEA,eAAa,aAAa,eAAe,aAAa;AACvD;AAVgB;AAYT,IAAM,yBAAN,MAA+D;AAAA,EACrE,YACkB,YACuB,sBACvC;AAFgB;AACuB;AAAA,EACrC;AAAA,EAh5BL,OA44BsE;AAAA;AAAA;AAAA,EAMrE,WAAW,SAA2B;AACrC,UAAM,WAAW,KAAK,WAAW,OAAO;AACxC,WAAO,WAAW,SAAS,SAAS,IAAI;AAAA,EACzC;AAAA,EAEA,aAAa,UAAmC;AAC/C,UAAM,YAAY,SAAS,SAAS,IAAI,KAAK,UAAU,CAAC;AACxD,WAAO,UAAU,WAAW,IACzB,SAAS,UAAU,CAAC,CAAC,IACrB,UAAU,SAAS,IAClB,OAAO,UAAU,MAAM,IACvB;AAAA,EACL;AAAA,EAEA,YAAY,MAAwB,eAAgC;AACnE,UAAM,YAAmB,CAAC;AAC1B,eAAW,WAAY,KAAoC,UAAU;AACpE,YAAM,WAAW,KAAK,WAAW,OAAO;AACxC,UAAI,UAAU;AACb,kBAAU,KAAK,QAAQ;AAAA,MACxB;AAAA,IACD;AACA,QAAI,UAAU,QAAQ;AAErB,WAAK,qBAAqB;AAAA,QAAe,CAAC,aACzC,oBAAoB,UAAU,WAAW,aAAa;AAAA,MACvD;AAAA,IACD;AAAA,EACD;AAAA,EAEA,WACC,MACA,eACA,aACA,cACA,eACkC;AAClC,WAAO;AAAA,EACR;AAAA,EAEA,KACC,MACA,eACA,aACA,cACA,eACO;AAAA,EAAC;AAAA,EAET,UAAgB;AAAA,EAAC;AAClB;AAvDa,yBAAN;AAAA,EAGJ;AAAA,GAHU;AA2Db,MAAM,uCAAuC,WAAW;AAAA,EAv8BxD,OAu8BwD;AAAA;AAAA;AAAA,EACvD,OAAwB,eACvB;AAAA,EAEgB,cAAc,KAAK;AAAA,IACnC,IAAI;AAAA,MACH,+BAA+B;AAAA,IAChC;AAAA,EACD;AAAA,EAEA,cAAc;AACb,UAAM;AAEN,SAAK,kBAAkB;AAAA,EACxB;AAAA,EAEQ,oBAA0B;AACjC,SAAK;AAAA,MACJ,MAAM;AAAA,QACL;AAAA,QACA,CAAC,EAAE,QAAQ,YAAY,MAAM;AAC5B,sBAAY;AAAA,YACX;AAAA,cACC;AAAA,cACA,UAAU;AAAA,cACV,MAAM,KAAK,gBAAgB,KAAK;AAAA,cAChC;AAAA,YACD;AAAA,UACD;AACA,sBAAY;AAAA,YACX;AAAA,cACC;AAAA,cACA,UAAU;AAAA,cACV,MAAM,KAAK,iBAAiB,KAAK;AAAA,cACjC;AAAA,YACD;AAAA,UACD;AAAA,QACD;AAAA,QACA,EAAE,QAAQ,YAAY,aAAa,KAAK,OAAO;AAAA,MAChD;AAAA,IACD;AAEA,SAAK;AAAA,MACJ,KAAK,YAAY,iBAAiB,CAAC,SAAS;AAC3C,YAAI,SAAS,MAAM;AAClB,eAAK,gBAAgB,IAAI;AAAA,QAC1B,OAAO;AACN,eAAK,iBAAiB,IAAI;AAAA,QAC3B;AAAA,MACD,CAAC;AAAA,IACF;AAAA,EACD;AAAA,EAEQ,cAAc;AAAA,EACtB,IAAI,gBAAyB;AAC5B,WAAO,KAAK;AAAA,EACb;AAAA,EAEQ,gBAAgB,eAA8B;AACrD,QAAI,KAAK,gBAAgB,MAAM;AAC9B;AAAA,IACD;AAEA,SAAK,cAAc;AAEnB,QAAI,CAAC,eAAe;AACnB,WAAK,YAAY,SAAS,IAAI;AAAA,IAC/B;AAAA,EACD;AAAA,EAEQ,iBAAiB,eAA8B;AACtD,QAAI,KAAK,gBAAgB,OAAO;AAC/B;AAAA,IACD;AAEA,SAAK,cAAc;AAEnB,QAAI,CAAC,eAAe;AACnB,WAAK,YAAY,SAAS,KAAK;AAAA,IAChC;AAAA,EACD;AACD;AAEA,MAAM,2BAA2B,IAAI,+BAA+B;AAM7D,SAAS,sBAA+B;AAC9C,SAAO,yBAAyB;AACjC;AAFgB;",
  "names": []
}
