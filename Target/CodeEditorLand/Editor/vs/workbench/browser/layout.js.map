{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/layout.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tisFullscreen,\n\tisWCOEnabled,\n\tonDidChangeFullscreen,\n} from \"../../base/browser/browser.js\";\nimport {\n\tEventType,\n\ttype IDimension,\n\taddDisposableListener,\n\tcomputeScreenAwareSize,\n\tgetActiveDocument,\n\tgetActiveElement,\n\tgetActiveWindow,\n\tgetClientArea,\n\tgetWindow,\n\tgetWindowId,\n\tgetWindows,\n\tisActiveDocument,\n\tisAncestorUsingFlowTo,\n\tposition,\n\tsize,\n} from \"../../base/browser/dom.js\";\nimport {\n\tDirection,\n\ttype ISerializableView,\n\ttype ISerializedGrid,\n\ttype ISerializedLeafNode,\n\ttype ISerializedNode,\n\ttype IViewSize,\n\tOrientation,\n\tSerializableGrid,\n\tSizing,\n} from \"../../base/browser/ui/grid/grid.js\";\nimport { type CodeWindow, mainWindow } from \"../../base/browser/window.js\";\nimport { coalesce } from \"../../base/common/arrays.js\";\nimport { DeferredPromise, Promises } from \"../../base/common/async.js\";\nimport { Emitter, type Event } from \"../../base/common/event.js\";\nimport {\n\tDisposable,\n\tDisposableMap,\n\tDisposableStore,\n\ttype IDisposable,\n\ttoDisposable,\n} from \"../../base/common/lifecycle.js\";\nimport { mark } from \"../../base/common/performance.js\";\nimport {\n\tisIOS,\n\tisLinux,\n\tisMacintosh,\n\tisWeb,\n\tisWindows,\n} from \"../../base/common/platform.js\";\nimport { assertIsDefined } from \"../../base/common/types.js\";\nimport { URI } from \"../../base/common/uri.js\";\nimport { isCodeEditor } from \"../../editor/browser/editorBrowser.js\";\nimport type { LineNumbersType } from \"../../editor/common/config/editorOptions.js\";\nimport {\n\ttype IConfigurationChangeEvent,\n\tIConfigurationService,\n} from \"../../platform/configuration/common/configuration.js\";\nimport { IFileService } from \"../../platform/files/common/files.js\";\nimport type { ServicesAccessor } from \"../../platform/instantiation/common/instantiation.js\";\nimport { ILogService } from \"../../platform/log/common/log.js\";\nimport {\n\tINotificationService,\n\tNotificationsFilter,\n} from \"../../platform/notification/common/notification.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../platform/telemetry/common/telemetry.js\";\nimport { IThemeService } from \"../../platform/theme/common/themeService.js\";\nimport {\n\tCustomTitleBarVisibility,\n\ttype IPath,\n\tTitleBarSetting,\n\tgetMenuBarVisibility,\n\thasCustomTitlebar,\n\thasNativeTitlebar,\n\tuseWindowControlsOverlay,\n} from \"../../platform/window/common/window.js\";\nimport {\n\tIWorkspaceContextService,\n\tWorkbenchState,\n\tisTemporaryWorkspace,\n} from \"../../platform/workspace/common/workspace.js\";\nimport {\n\tEditorInputCapabilities,\n\ttype GroupIdentifier,\n\ttype IUntypedEditorInput,\n\tisResourceEditorInput,\n\tpathsToEditors,\n} from \"../common/editor.js\";\nimport { DiffEditorInput } from \"../common/editor/diffEditorInput.js\";\nimport {\n\tWINDOW_ACTIVE_BORDER,\n\tWINDOW_INACTIVE_BORDER,\n} from \"../common/theme.js\";\nimport {\n\tIViewDescriptorService,\n\tViewContainerLocation,\n} from \"../common/views.js\";\nimport { IAuxiliaryWindowService } from \"../services/auxiliaryWindow/browser/auxiliaryWindowService.js\";\nimport { IBannerService } from \"../services/banner/browser/bannerService.js\";\nimport {\n\ttype EditorGroupLayout,\n\tGroupsOrder,\n\tIEditorGroupsService,\n} from \"../services/editor/common/editorGroupsService.js\";\nimport { IEditorService } from \"../services/editor/common/editorService.js\";\nimport { IBrowserWorkbenchEnvironmentService } from \"../services/environment/browser/environmentService.js\";\nimport { IExtensionService } from \"../services/extensions/common/extensions.js\";\nimport { IHostService } from \"../services/host/browser/host.js\";\nimport {\n\tActivityBarPosition,\n\tEditorActionsLocation,\n\ttype EditorTabsMode,\n\ttype IWorkbenchLayoutService,\n\tLayoutSettings,\n\ttype MULTI_WINDOW_PARTS,\n\ttype PanelAlignment,\n\tPanelOpensMaximizedOptions,\n\tParts,\n\tPosition,\n\ttype SINGLE_WINDOW_PARTS,\n\tZenModeSettings,\n\tisHorizontal,\n\tpanelOpensMaximizedFromString,\n\tpositionFromString,\n\tpositionToString,\n\tshouldShowCustomTitleBar,\n} from \"../services/layout/browser/layoutService.js\";\nimport {\n\tILifecycleService,\n\tStartupKind,\n} from \"../services/lifecycle/common/lifecycle.js\";\nimport { IPaneCompositePartService } from \"../services/panecomposite/browser/panecomposite.js\";\nimport { IStatusbarService } from \"../services/statusbar/browser/statusbar.js\";\nimport { ITitleService } from \"../services/title/browser/titleService.js\";\nimport { IWorkingCopyBackupService } from \"../services/workingCopy/common/workingCopyBackup.js\";\nimport { Part } from \"./part.js\";\nimport { AuxiliaryBarPart } from \"./parts/auxiliarybar/auxiliaryBarPart.js\";\nimport { PanelPart } from \"./parts/panel/panelPart.js\";\nimport { SidebarPart } from \"./parts/sidebar/sidebarPart.js\";\n\n//#region Layout Implementation\n\ninterface ILayoutRuntimeState {\n\tactiveContainerId: number;\n\tmainWindowFullscreen: boolean;\n\treadonly maximized: Set<number>;\n\thasFocus: boolean;\n\tmainWindowBorder: boolean;\n\treadonly menuBar: {\n\t\ttoggled: boolean;\n\t};\n\treadonly zenMode: {\n\t\treadonly transitionDisposables: DisposableMap<string, IDisposable>;\n\t};\n}\n\ninterface IEditorToOpen {\n\treadonly editor: IUntypedEditorInput;\n\treadonly viewColumn?: number;\n}\n\ninterface ILayoutInitializationState {\n\treadonly views: {\n\t\treadonly defaults: string[] | undefined;\n\t\treadonly containerToRestore: {\n\t\t\tsideBar?: string;\n\t\t\tpanel?: string;\n\t\t\tauxiliaryBar?: string;\n\t\t};\n\t};\n\treadonly editor: {\n\t\treadonly restoreEditors: boolean;\n\t\treadonly editorsToOpen: Promise<IEditorToOpen[]>;\n\t};\n\treadonly layout?: {\n\t\treadonly editors?: EditorGroupLayout;\n\t};\n}\n\ninterface ILayoutState {\n\treadonly runtime: ILayoutRuntimeState;\n\treadonly initialization: ILayoutInitializationState;\n}\n\nenum LayoutClasses {\n\tSIDEBAR_HIDDEN = \"nosidebar\",\n\tMAIN_EDITOR_AREA_HIDDEN = \"nomaineditorarea\",\n\tPANEL_HIDDEN = \"nopanel\",\n\tAUXILIARYBAR_HIDDEN = \"noauxiliarybar\",\n\tSTATUSBAR_HIDDEN = \"nostatusbar\",\n\tFULLSCREEN = \"fullscreen\",\n\tMAXIMIZED = \"maximized\",\n\tWINDOW_BORDER = \"border\",\n}\n\ninterface IPathToOpen extends IPath {\n\treadonly viewColumn?: number;\n}\n\ninterface IInitialEditorsState {\n\treadonly filesToOpenOrCreate?: IPathToOpen[];\n\treadonly filesToDiff?: IPathToOpen[];\n\treadonly filesToMerge?: IPathToOpen[];\n\n\treadonly layout?: EditorGroupLayout;\n}\n\nexport const TITLE_BAR_SETTINGS = [\n\tLayoutSettings.ACTIVITY_BAR_LOCATION,\n\tLayoutSettings.COMMAND_CENTER,\n\tLayoutSettings.EDITOR_ACTIONS_LOCATION,\n\tLayoutSettings.LAYOUT_ACTIONS,\n\t\"window.menuBarVisibility\",\n\tTitleBarSetting.TITLE_BAR_STYLE,\n\tTitleBarSetting.CUSTOM_TITLE_BAR_VISIBILITY,\n];\n\nexport abstract class Layout\n\textends Disposable\n\timplements IWorkbenchLayoutService\n{\n\tdeclare readonly _serviceBrand: undefined;\n\n\t//#region Events\n\n\tprivate readonly _onDidChangeZenMode = this._register(\n\t\tnew Emitter<boolean>(),\n\t);\n\treadonly onDidChangeZenMode = this._onDidChangeZenMode.event;\n\n\tprivate readonly _onDidChangeMainEditorCenteredLayout = this._register(\n\t\tnew Emitter<boolean>(),\n\t);\n\treadonly onDidChangeMainEditorCenteredLayout =\n\t\tthis._onDidChangeMainEditorCenteredLayout.event;\n\n\tprivate readonly _onDidChangePanelAlignment = this._register(\n\t\tnew Emitter<PanelAlignment>(),\n\t);\n\treadonly onDidChangePanelAlignment = this._onDidChangePanelAlignment.event;\n\n\tprivate readonly _onDidChangeWindowMaximized = this._register(\n\t\tnew Emitter<{ windowId: number; maximized: boolean }>(),\n\t);\n\treadonly onDidChangeWindowMaximized =\n\t\tthis._onDidChangeWindowMaximized.event;\n\n\tprivate readonly _onDidChangePanelPosition = this._register(\n\t\tnew Emitter<string>(),\n\t);\n\treadonly onDidChangePanelPosition = this._onDidChangePanelPosition.event;\n\n\tprivate readonly _onDidChangePartVisibility = this._register(\n\t\tnew Emitter<void>(),\n\t);\n\treadonly onDidChangePartVisibility = this._onDidChangePartVisibility.event;\n\n\tprivate readonly _onDidChangeNotificationsVisibility = this._register(\n\t\tnew Emitter<boolean>(),\n\t);\n\treadonly onDidChangeNotificationsVisibility =\n\t\tthis._onDidChangeNotificationsVisibility.event;\n\n\tprivate readonly _onDidLayoutMainContainer = this._register(\n\t\tnew Emitter<IDimension>(),\n\t);\n\treadonly onDidLayoutMainContainer = this._onDidLayoutMainContainer.event;\n\n\tprivate readonly _onDidLayoutActiveContainer = this._register(\n\t\tnew Emitter<IDimension>(),\n\t);\n\treadonly onDidLayoutActiveContainer =\n\t\tthis._onDidLayoutActiveContainer.event;\n\n\tprivate readonly _onDidLayoutContainer = this._register(\n\t\tnew Emitter<{ container: HTMLElement; dimension: IDimension }>(),\n\t);\n\treadonly onDidLayoutContainer = this._onDidLayoutContainer.event;\n\n\tprivate readonly _onDidAddContainer = this._register(\n\t\tnew Emitter<{ container: HTMLElement; disposables: DisposableStore }>(),\n\t);\n\treadonly onDidAddContainer = this._onDidAddContainer.event;\n\n\tprivate readonly _onDidChangeActiveContainer = this._register(\n\t\tnew Emitter<void>(),\n\t);\n\treadonly onDidChangeActiveContainer =\n\t\tthis._onDidChangeActiveContainer.event;\n\n\t//#endregion\n\n\t//#region Properties\n\n\treadonly mainContainer = document.createElement(\"div\");\n\tget activeContainer() {\n\t\treturn this.getContainerFromDocument(getActiveDocument());\n\t}\n\tget containers(): Iterable<HTMLElement> {\n\t\tconst containers: HTMLElement[] = [];\n\t\tfor (const { window } of getWindows()) {\n\t\t\tcontainers.push(this.getContainerFromDocument(window.document));\n\t\t}\n\n\t\treturn containers;\n\t}\n\n\tprivate getContainerFromDocument(targetDocument: Document): HTMLElement {\n\t\tif (targetDocument === this.mainContainer.ownerDocument) {\n\t\t\t// main window\n\t\t\treturn this.mainContainer;\n\t\t} else {\n\t\t\t// auxiliary window\n\t\t\treturn targetDocument.body.getElementsByClassName(\n\t\t\t\t\"monaco-workbench\",\n\t\t\t)[0] as HTMLElement;\n\t\t}\n\t}\n\n\tprivate readonly containerStylesLoaded = new Map<\n\t\tnumber /* window ID */,\n\t\tPromise<void>\n\t>();\n\twhenContainerStylesLoaded(window: CodeWindow): Promise<void> | undefined {\n\t\treturn this.containerStylesLoaded.get(window.vscodeWindowId);\n\t}\n\n\tprivate _mainContainerDimension!: IDimension;\n\tget mainContainerDimension(): IDimension {\n\t\treturn this._mainContainerDimension;\n\t}\n\n\tget activeContainerDimension(): IDimension {\n\t\treturn this.getContainerDimension(this.activeContainer);\n\t}\n\n\tprivate getContainerDimension(container: HTMLElement): IDimension {\n\t\tif (container === this.mainContainer) {\n\t\t\treturn this.mainContainerDimension; // main window\n\t\t} else {\n\t\t\treturn getClientArea(container); // auxiliary window\n\t\t}\n\t}\n\n\tget mainContainerOffset() {\n\t\treturn this.computeContainerOffset(mainWindow);\n\t}\n\n\tget activeContainerOffset() {\n\t\treturn this.computeContainerOffset(getWindow(this.activeContainer));\n\t}\n\n\tprivate computeContainerOffset(targetWindow: Window) {\n\t\tlet top = 0;\n\t\tlet quickPickTop = 0;\n\n\t\tif (this.isVisible(Parts.BANNER_PART)) {\n\t\t\ttop = this.getPart(Parts.BANNER_PART).maximumHeight;\n\t\t\tquickPickTop = top;\n\t\t}\n\n\t\tconst titlebarVisible = this.isVisible(\n\t\t\tParts.TITLEBAR_PART,\n\t\t\ttargetWindow,\n\t\t);\n\t\tif (titlebarVisible) {\n\t\t\ttop += this.getPart(Parts.TITLEBAR_PART).maximumHeight;\n\t\t\tquickPickTop = top;\n\t\t}\n\n\t\tconst isCommandCenterVisible =\n\t\t\ttitlebarVisible &&\n\t\t\tthis.configurationService.getValue<boolean>(\n\t\t\t\tLayoutSettings.COMMAND_CENTER,\n\t\t\t) !== false;\n\t\tif (isCommandCenterVisible) {\n\t\t\t// If the command center is visible then the quickinput\n\t\t\t// should go over the title bar and the banner\n\t\t\tquickPickTop = 6;\n\t\t}\n\n\t\treturn { top, quickPickTop };\n\t}\n\n\t//#endregion\n\n\tprivate readonly parts = new Map<string, Part>();\n\n\tprivate initialized = false;\n\tprivate workbenchGrid!: SerializableGrid<ISerializableView>;\n\n\tprivate titleBarPartView!: ISerializableView;\n\tprivate bannerPartView!: ISerializableView;\n\tprivate activityBarPartView!: ISerializableView;\n\tprivate sideBarPartView!: ISerializableView;\n\tprivate panelPartView!: ISerializableView;\n\tprivate auxiliaryBarPartView!: ISerializableView;\n\tprivate editorPartView!: ISerializableView;\n\tprivate statusBarPartView!: ISerializableView;\n\n\tprivate environmentService!: IBrowserWorkbenchEnvironmentService;\n\tprivate extensionService!: IExtensionService;\n\tprivate configurationService!: IConfigurationService;\n\tprivate storageService!: IStorageService;\n\tprivate hostService!: IHostService;\n\tprivate editorService!: IEditorService;\n\tprivate mainPartEditorService!: IEditorService;\n\tprivate editorGroupService!: IEditorGroupsService;\n\tprivate paneCompositeService!: IPaneCompositePartService;\n\tprivate titleService!: ITitleService;\n\tprivate viewDescriptorService!: IViewDescriptorService;\n\tprivate contextService!: IWorkspaceContextService;\n\tprivate workingCopyBackupService!: IWorkingCopyBackupService;\n\tprivate notificationService!: INotificationService;\n\tprivate themeService!: IThemeService;\n\tprivate statusBarService!: IStatusbarService;\n\tprivate logService!: ILogService;\n\tprivate telemetryService!: ITelemetryService;\n\tprivate auxiliaryWindowService!: IAuxiliaryWindowService;\n\n\tprivate state!: ILayoutState;\n\tprivate stateModel!: LayoutStateModel;\n\n\tprivate disposed = false;\n\n\tconstructor(protected readonly parent: HTMLElement) {\n\t\tsuper();\n\t}\n\n\tprotected initLayout(accessor: ServicesAccessor): void {\n\t\t// Services\n\t\tthis.environmentService = accessor.get(\n\t\t\tIBrowserWorkbenchEnvironmentService,\n\t\t);\n\t\tthis.configurationService = accessor.get(IConfigurationService);\n\t\tthis.hostService = accessor.get(IHostService);\n\t\tthis.contextService = accessor.get(IWorkspaceContextService);\n\t\tthis.storageService = accessor.get(IStorageService);\n\t\tthis.workingCopyBackupService = accessor.get(IWorkingCopyBackupService);\n\t\tthis.themeService = accessor.get(IThemeService);\n\t\tthis.extensionService = accessor.get(IExtensionService);\n\t\tthis.logService = accessor.get(ILogService);\n\t\tthis.telemetryService = accessor.get(ITelemetryService);\n\t\tthis.auxiliaryWindowService = accessor.get(IAuxiliaryWindowService);\n\n\t\t// Parts\n\t\tthis.editorService = accessor.get(IEditorService);\n\t\tthis.mainPartEditorService = this.editorService.createScoped(\n\t\t\t\"main\",\n\t\t\tthis._store,\n\t\t);\n\t\tthis.editorGroupService = accessor.get(IEditorGroupsService);\n\t\tthis.paneCompositeService = accessor.get(IPaneCompositePartService);\n\t\tthis.viewDescriptorService = accessor.get(IViewDescriptorService);\n\t\tthis.titleService = accessor.get(ITitleService);\n\t\tthis.notificationService = accessor.get(INotificationService);\n\t\tthis.statusBarService = accessor.get(IStatusbarService);\n\t\taccessor.get(IBannerService);\n\n\t\t// Listeners\n\t\tthis.registerLayoutListeners();\n\n\t\t// State\n\t\tthis.initLayoutState(\n\t\t\taccessor.get(ILifecycleService),\n\t\t\taccessor.get(IFileService),\n\t\t);\n\t}\n\n\tprivate registerLayoutListeners(): void {\n\t\t// Restore editor if hidden\n\t\tconst showEditorIfHidden = () => {\n\t\t\tif (!this.isVisible(Parts.EDITOR_PART, mainWindow)) {\n\t\t\t\tthis.toggleMaximizedPanel();\n\t\t\t}\n\t\t};\n\n\t\t// Wait to register these listeners after the editor group service\n\t\t// is ready to avoid conflicts on startup\n\t\tthis.editorGroupService.whenRestored.then(() => {\n\t\t\t// Restore main editor part on any editor change in main part\n\t\t\tthis._register(\n\t\t\t\tthis.mainPartEditorService.onDidVisibleEditorsChange(\n\t\t\t\t\tshowEditorIfHidden,\n\t\t\t\t),\n\t\t\t);\n\t\t\tthis._register(\n\t\t\t\tthis.editorGroupService.mainPart.onDidActivateGroup(\n\t\t\t\t\tshowEditorIfHidden,\n\t\t\t\t),\n\t\t\t);\n\n\t\t\t// Revalidate center layout when active editor changes: diff editor quits centered mode.\n\t\t\tthis._register(\n\t\t\t\tthis.mainPartEditorService.onDidActiveEditorChange(() =>\n\t\t\t\t\tthis.centerMainEditorLayout(\n\t\t\t\t\t\tthis.stateModel.getRuntimeValue(\n\t\t\t\t\t\t\tLayoutStateKeys.MAIN_EDITOR_CENTERED,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t);\n\t\t});\n\n\t\t// Configuration changes\n\t\tthis._register(\n\t\t\tthis.configurationService.onDidChangeConfiguration((e) => {\n\t\t\t\tif (\n\t\t\t\t\t[\n\t\t\t\t\t\t...TITLE_BAR_SETTINGS,\n\t\t\t\t\t\tLegacyWorkbenchLayoutSettings.SIDEBAR_POSITION,\n\t\t\t\t\t\tLegacyWorkbenchLayoutSettings.STATUSBAR_VISIBLE,\n\t\t\t\t\t].some((setting) => e.affectsConfiguration(setting))\n\t\t\t\t) {\n\t\t\t\t\t// Show Custom TitleBar if actions moved to the titlebar\n\t\t\t\t\tconst editorActionsMovedToTitlebar =\n\t\t\t\t\t\te.affectsConfiguration(\n\t\t\t\t\t\t\tLayoutSettings.EDITOR_ACTIONS_LOCATION,\n\t\t\t\t\t\t) &&\n\t\t\t\t\t\tthis.configurationService.getValue<EditorActionsLocation>(\n\t\t\t\t\t\t\tLayoutSettings.EDITOR_ACTIONS_LOCATION,\n\t\t\t\t\t\t) === EditorActionsLocation.TITLEBAR;\n\n\t\t\t\t\tlet activityBarMovedToTopOrBottom = false;\n\t\t\t\t\tif (\n\t\t\t\t\t\te.affectsConfiguration(\n\t\t\t\t\t\t\tLayoutSettings.ACTIVITY_BAR_LOCATION,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst activityBarPosition =\n\t\t\t\t\t\t\tthis.configurationService.getValue<ActivityBarPosition>(\n\t\t\t\t\t\t\t\tLayoutSettings.ACTIVITY_BAR_LOCATION,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tactivityBarMovedToTopOrBottom =\n\t\t\t\t\t\t\tactivityBarPosition === ActivityBarPosition.TOP ||\n\t\t\t\t\t\t\tactivityBarPosition === ActivityBarPosition.BOTTOM;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tactivityBarMovedToTopOrBottom ||\n\t\t\t\t\t\teditorActionsMovedToTitlebar\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tthis.configurationService.getValue<CustomTitleBarVisibility>(\n\t\t\t\t\t\t\t\tTitleBarSetting.CUSTOM_TITLE_BAR_VISIBILITY,\n\t\t\t\t\t\t\t) === CustomTitleBarVisibility.NEVER\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis.configurationService.updateValue(\n\t\t\t\t\t\t\t\tTitleBarSetting.CUSTOM_TITLE_BAR_VISIBILITY,\n\t\t\t\t\t\t\t\tCustomTitleBarVisibility.AUTO,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.doUpdateLayoutConfiguration();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\t// Fullscreen changes\n\t\tthis._register(\n\t\t\tonDidChangeFullscreen((windowId) =>\n\t\t\t\tthis.onFullscreenChanged(windowId),\n\t\t\t),\n\t\t);\n\n\t\t// Group changes\n\t\tthis._register(\n\t\t\tthis.editorGroupService.mainPart.onDidAddGroup(() =>\n\t\t\t\tthis.centerMainEditorLayout(\n\t\t\t\t\tthis.stateModel.getRuntimeValue(\n\t\t\t\t\t\tLayoutStateKeys.MAIN_EDITOR_CENTERED,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.editorGroupService.mainPart.onDidRemoveGroup(() =>\n\t\t\t\tthis.centerMainEditorLayout(\n\t\t\t\t\tthis.stateModel.getRuntimeValue(\n\t\t\t\t\t\tLayoutStateKeys.MAIN_EDITOR_CENTERED,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.editorGroupService.mainPart.onDidChangeGroupMaximized(() =>\n\t\t\t\tthis.centerMainEditorLayout(\n\t\t\t\t\tthis.stateModel.getRuntimeValue(\n\t\t\t\t\t\tLayoutStateKeys.MAIN_EDITOR_CENTERED,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\n\t\t// Prevent workbench from scrolling #55456\n\t\tthis._register(\n\t\t\taddDisposableListener(\n\t\t\t\tthis.mainContainer,\n\t\t\t\tEventType.SCROLL,\n\t\t\t\t() => (this.mainContainer.scrollTop = 0),\n\t\t\t),\n\t\t);\n\n\t\t// Menubar visibility changes\n\t\tconst showingCustomMenu =\n\t\t\t(isWindows || isLinux || isWeb) &&\n\t\t\t!hasNativeTitlebar(this.configurationService);\n\t\tif (showingCustomMenu) {\n\t\t\tthis._register(\n\t\t\t\tthis.titleService.onMenubarVisibilityChange((visible) =>\n\t\t\t\t\tthis.onMenubarToggled(visible),\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\t// Theme changes\n\t\tthis._register(\n\t\t\tthis.themeService.onDidColorThemeChange(() =>\n\t\t\t\tthis.updateWindowsBorder(),\n\t\t\t),\n\t\t);\n\n\t\t// Window active / focus changes\n\t\tthis._register(\n\t\t\tthis.hostService.onDidChangeFocus((focused) =>\n\t\t\t\tthis.onWindowFocusChanged(focused),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.hostService.onDidChangeActiveWindow(() =>\n\t\t\t\tthis.onActiveWindowChanged(),\n\t\t\t),\n\t\t);\n\n\t\t// WCO changes\n\t\tif (\n\t\t\tisWeb &&\n\t\t\ttypeof (navigator as any).windowControlsOverlay === \"object\"\n\t\t) {\n\t\t\tthis._register(\n\t\t\t\taddDisposableListener(\n\t\t\t\t\t(navigator as any).windowControlsOverlay,\n\t\t\t\t\t\"geometrychange\",\n\t\t\t\t\t() => this.onDidChangeWCO(),\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\t// Auxiliary windows\n\t\tthis._register(\n\t\t\tthis.auxiliaryWindowService.onDidOpenAuxiliaryWindow(\n\t\t\t\t({ window, disposables }) => {\n\t\t\t\t\tconst windowId = window.window.vscodeWindowId;\n\t\t\t\t\tthis.containerStylesLoaded.set(\n\t\t\t\t\t\twindowId,\n\t\t\t\t\t\twindow.whenStylesHaveLoaded,\n\t\t\t\t\t);\n\t\t\t\t\twindow.whenStylesHaveLoaded.then(() =>\n\t\t\t\t\t\tthis.containerStylesLoaded.delete(windowId),\n\t\t\t\t\t);\n\t\t\t\t\tdisposables.add(\n\t\t\t\t\t\ttoDisposable(() =>\n\t\t\t\t\t\t\tthis.containerStylesLoaded.delete(windowId),\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\n\t\t\t\t\tconst eventDisposables = disposables.add(\n\t\t\t\t\t\tnew DisposableStore(),\n\t\t\t\t\t);\n\t\t\t\t\tthis._onDidAddContainer.fire({\n\t\t\t\t\t\tcontainer: window.container,\n\t\t\t\t\t\tdisposables: eventDisposables,\n\t\t\t\t\t});\n\n\t\t\t\t\tdisposables.add(\n\t\t\t\t\t\twindow.onDidLayout((dimension) =>\n\t\t\t\t\t\t\tthis.handleContainerDidLayout(\n\t\t\t\t\t\t\t\twindow.container,\n\t\t\t\t\t\t\t\tdimension,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate onMenubarToggled(visible: boolean): void {\n\t\tif (visible !== this.state.runtime.menuBar.toggled) {\n\t\t\tthis.state.runtime.menuBar.toggled = visible;\n\n\t\t\tconst menuBarVisibility = getMenuBarVisibility(\n\t\t\t\tthis.configurationService,\n\t\t\t);\n\n\t\t\t// The menu bar toggles the title bar in web because it does not need to be shown for window controls only\n\t\t\tif (isWeb && menuBarVisibility === \"toggle\") {\n\t\t\t\tthis.workbenchGrid.setViewVisible(\n\t\t\t\t\tthis.titleBarPartView,\n\t\t\t\t\tshouldShowCustomTitleBar(\n\t\t\t\t\t\tthis.configurationService,\n\t\t\t\t\t\tmainWindow,\n\t\t\t\t\t\tthis.state.runtime.menuBar.toggled,\n\t\t\t\t\t\tthis.isZenModeActive(),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// The menu bar toggles the title bar in full screen for toggle and classic settings\n\t\t\telse if (\n\t\t\t\tthis.state.runtime.mainWindowFullscreen &&\n\t\t\t\t(menuBarVisibility === \"toggle\" ||\n\t\t\t\t\tmenuBarVisibility === \"classic\")\n\t\t\t) {\n\t\t\t\tthis.workbenchGrid.setViewVisible(\n\t\t\t\t\tthis.titleBarPartView,\n\t\t\t\t\tshouldShowCustomTitleBar(\n\t\t\t\t\t\tthis.configurationService,\n\t\t\t\t\t\tmainWindow,\n\t\t\t\t\t\tthis.state.runtime.menuBar.toggled,\n\t\t\t\t\t\tthis.isZenModeActive(),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Move layout call to any time the menubar\n\t\t\t// is toggled to update consumers of offset\n\t\t\t// see issue #115267\n\t\t\tthis.handleContainerDidLayout(\n\t\t\t\tthis.mainContainer,\n\t\t\t\tthis._mainContainerDimension,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate handleContainerDidLayout(\n\t\tcontainer: HTMLElement,\n\t\tdimension: IDimension,\n\t): void {\n\t\tif (container === this.mainContainer) {\n\t\t\tthis._onDidLayoutMainContainer.fire(dimension);\n\t\t}\n\n\t\tif (isActiveDocument(container)) {\n\t\t\tthis._onDidLayoutActiveContainer.fire(dimension);\n\t\t}\n\n\t\tthis._onDidLayoutContainer.fire({ container, dimension });\n\t}\n\n\tprivate onFullscreenChanged(windowId: number): void {\n\t\tif (windowId !== mainWindow.vscodeWindowId) {\n\t\t\treturn; // ignore all but main window\n\t\t}\n\n\t\tthis.state.runtime.mainWindowFullscreen = isFullscreen(mainWindow);\n\n\t\t// Apply as CSS class\n\t\tif (this.state.runtime.mainWindowFullscreen) {\n\t\t\tthis.mainContainer.classList.add(LayoutClasses.FULLSCREEN);\n\t\t} else {\n\t\t\tthis.mainContainer.classList.remove(LayoutClasses.FULLSCREEN);\n\n\t\t\tconst zenModeExitInfo = this.stateModel.getRuntimeValue(\n\t\t\t\tLayoutStateKeys.ZEN_MODE_EXIT_INFO,\n\t\t\t);\n\t\t\tif (\n\t\t\t\tzenModeExitInfo.transitionedToFullScreen &&\n\t\t\t\tthis.isZenModeActive()\n\t\t\t) {\n\t\t\t\tthis.toggleZenMode();\n\t\t\t}\n\t\t}\n\n\t\t// Change edge snapping accordingly\n\t\tthis.workbenchGrid.edgeSnapping =\n\t\t\tthis.state.runtime.mainWindowFullscreen;\n\n\t\t// Changing fullscreen state of the main window has an impact\n\t\t// on custom title bar visibility, so we need to update\n\t\tif (hasCustomTitlebar(this.configurationService)) {\n\t\t\t// Propagate to grid\n\t\t\tthis.workbenchGrid.setViewVisible(\n\t\t\t\tthis.titleBarPartView,\n\t\t\t\tshouldShowCustomTitleBar(\n\t\t\t\t\tthis.configurationService,\n\t\t\t\t\tmainWindow,\n\t\t\t\t\tthis.state.runtime.menuBar.toggled,\n\t\t\t\t\tthis.isZenModeActive(),\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tthis.updateWindowsBorder(true);\n\t\t}\n\t}\n\n\tprivate onActiveWindowChanged(): void {\n\t\tconst activeContainerId = this.getActiveContainerId();\n\t\tif (this.state.runtime.activeContainerId !== activeContainerId) {\n\t\t\tthis.state.runtime.activeContainerId = activeContainerId;\n\n\t\t\t// Indicate active window border\n\t\t\tthis.updateWindowsBorder();\n\n\t\t\tthis._onDidChangeActiveContainer.fire();\n\t\t}\n\t}\n\n\tprivate onWindowFocusChanged(hasFocus: boolean): void {\n\t\tif (this.state.runtime.hasFocus !== hasFocus) {\n\t\t\tthis.state.runtime.hasFocus = hasFocus;\n\t\t\tthis.updateWindowsBorder();\n\t\t}\n\t}\n\n\tprivate getActiveContainerId(): number {\n\t\tconst activeContainer = this.activeContainer;\n\n\t\treturn getWindow(activeContainer).vscodeWindowId;\n\t}\n\n\tprivate doUpdateLayoutConfiguration(skipLayout?: boolean): void {\n\t\t// Custom Titlebar visibility with native titlebar\n\t\tthis.updateCustomTitleBarVisibility();\n\n\t\t// Menubar visibility\n\t\tthis.updateMenubarVisibility(!!skipLayout);\n\n\t\t// Centered Layout\n\t\tthis.editorGroupService.whenRestored.then(() => {\n\t\t\tthis.centerMainEditorLayout(\n\t\t\t\tthis.stateModel.getRuntimeValue(\n\t\t\t\t\tLayoutStateKeys.MAIN_EDITOR_CENTERED,\n\t\t\t\t),\n\t\t\t\tskipLayout,\n\t\t\t);\n\t\t});\n\t}\n\n\tprivate setSideBarPosition(position: Position): void {\n\t\tconst activityBar = this.getPart(Parts.ACTIVITYBAR_PART);\n\t\tconst sideBar = this.getPart(Parts.SIDEBAR_PART);\n\t\tconst auxiliaryBar = this.getPart(Parts.AUXILIARYBAR_PART);\n\t\tconst newPositionValue = position === Position.LEFT ? \"left\" : \"right\";\n\t\tconst oldPositionValue = position === Position.RIGHT ? \"left\" : \"right\";\n\t\tconst panelAlignment = this.getPanelAlignment();\n\t\tconst panelPosition = this.getPanelPosition();\n\n\t\tthis.stateModel.setRuntimeValue(\n\t\t\tLayoutStateKeys.SIDEBAR_POSITON,\n\t\t\tposition,\n\t\t);\n\n\t\t// Adjust CSS\n\t\tconst activityBarContainer = assertIsDefined(\n\t\t\tactivityBar.getContainer(),\n\t\t);\n\t\tconst sideBarContainer = assertIsDefined(sideBar.getContainer());\n\t\tconst auxiliaryBarContainer = assertIsDefined(\n\t\t\tauxiliaryBar.getContainer(),\n\t\t);\n\t\tactivityBarContainer.classList.remove(oldPositionValue);\n\t\tsideBarContainer.classList.remove(oldPositionValue);\n\t\tactivityBarContainer.classList.add(newPositionValue);\n\t\tsideBarContainer.classList.add(newPositionValue);\n\n\t\t// Auxiliary Bar has opposite values\n\t\tauxiliaryBarContainer.classList.remove(newPositionValue);\n\t\tauxiliaryBarContainer.classList.add(oldPositionValue);\n\n\t\t// Update Styles\n\t\tactivityBar.updateStyles();\n\t\tsideBar.updateStyles();\n\t\tauxiliaryBar.updateStyles();\n\n\t\t// Move activity bar and side bars\n\t\tthis.adjustPartPositions(position, panelAlignment, panelPosition);\n\t}\n\n\tprivate updateWindowsBorder(skipLayout = false) {\n\t\tif (\n\t\t\tisWeb ||\n\t\t\tisWindows || // not working well with zooming (border often not visible)\n\t\t\tuseWindowControlsOverlay(this.configurationService) || // not working with WCO (border cannot draw over the overlay)\n\t\t\thasNativeTitlebar(this.configurationService)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst theme = this.themeService.getColorTheme();\n\n\t\tconst activeBorder = theme.getColor(WINDOW_ACTIVE_BORDER);\n\t\tconst inactiveBorder = theme.getColor(WINDOW_INACTIVE_BORDER);\n\n\t\tconst didHaveMainWindowBorder = this.hasMainWindowBorder();\n\n\t\tfor (const container of this.containers) {\n\t\t\tconst isMainContainer = container === this.mainContainer;\n\t\t\tconst isActiveContainer = this.activeContainer === container;\n\t\t\tconst containerWindowId = getWindowId(getWindow(container));\n\n\t\t\tlet windowBorder = false;\n\t\t\tif (\n\t\t\t\t!this.state.runtime.mainWindowFullscreen &&\n\t\t\t\t!this.state.runtime.maximized.has(containerWindowId) &&\n\t\t\t\t(activeBorder || inactiveBorder)\n\t\t\t) {\n\t\t\t\twindowBorder = true;\n\n\t\t\t\t// If the inactive color is missing, fallback to the active one\n\t\t\t\tconst borderColor =\n\t\t\t\t\tisActiveContainer && this.state.runtime.hasFocus\n\t\t\t\t\t\t? activeBorder\n\t\t\t\t\t\t: (inactiveBorder ?? activeBorder);\n\t\t\t\tcontainer.style.setProperty(\n\t\t\t\t\t\"--window-border-color\",\n\t\t\t\t\tborderColor?.toString() ?? \"transparent\",\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (isMainContainer) {\n\t\t\t\tthis.state.runtime.mainWindowBorder = windowBorder;\n\t\t\t}\n\n\t\t\tcontainer.classList.toggle(\n\t\t\t\tLayoutClasses.WINDOW_BORDER,\n\t\t\t\twindowBorder,\n\t\t\t);\n\t\t}\n\n\t\tif (\n\t\t\t!skipLayout &&\n\t\t\tdidHaveMainWindowBorder !== this.hasMainWindowBorder()\n\t\t) {\n\t\t\tthis.layout();\n\t\t}\n\t}\n\n\tprivate initLayoutState(\n\t\tlifecycleService: ILifecycleService,\n\t\tfileService: IFileService,\n\t): void {\n\t\tthis.stateModel = new LayoutStateModel(\n\t\t\tthis.storageService,\n\t\t\tthis.configurationService,\n\t\t\tthis.contextService,\n\t\t\tthis.parent,\n\t\t);\n\t\tthis.stateModel.load();\n\n\t\t// Both editor and panel should not be hidden on startup\n\t\tif (\n\t\t\tthis.stateModel.getRuntimeValue(LayoutStateKeys.PANEL_HIDDEN) &&\n\t\t\tthis.stateModel.getRuntimeValue(LayoutStateKeys.EDITOR_HIDDEN)\n\t\t) {\n\t\t\tthis.stateModel.setRuntimeValue(\n\t\t\t\tLayoutStateKeys.EDITOR_HIDDEN,\n\t\t\t\tfalse,\n\t\t\t);\n\t\t}\n\n\t\tthis._register(\n\t\t\tthis.stateModel.onDidChangeState((change) => {\n\t\t\t\tif (change.key === LayoutStateKeys.ACTIVITYBAR_HIDDEN) {\n\t\t\t\t\tthis.setActivityBarHidden(change.value as boolean);\n\t\t\t\t}\n\n\t\t\t\tif (change.key === LayoutStateKeys.STATUSBAR_HIDDEN) {\n\t\t\t\t\tthis.setStatusBarHidden(change.value as boolean);\n\t\t\t\t}\n\n\t\t\t\tif (change.key === LayoutStateKeys.SIDEBAR_POSITON) {\n\t\t\t\t\tthis.setSideBarPosition(change.value as Position);\n\t\t\t\t}\n\n\t\t\t\tif (change.key === LayoutStateKeys.PANEL_POSITION) {\n\t\t\t\t\tthis.setPanelPosition(change.value as Position);\n\t\t\t\t}\n\n\t\t\t\tif (change.key === LayoutStateKeys.PANEL_ALIGNMENT) {\n\t\t\t\t\tthis.setPanelAlignment(change.value as PanelAlignment);\n\t\t\t\t}\n\n\t\t\t\tthis.doUpdateLayoutConfiguration();\n\t\t\t}),\n\t\t);\n\n\t\t// Layout Initialization State\n\t\tconst initialEditorsState = this.getInitialEditorsState();\n\t\tif (initialEditorsState) {\n\t\t\tthis.logService.trace(\"Initial editor state\", initialEditorsState);\n\t\t}\n\t\tconst initialLayoutState: ILayoutInitializationState = {\n\t\t\tlayout: {\n\t\t\t\teditors: initialEditorsState?.layout,\n\t\t\t},\n\t\t\teditor: {\n\t\t\t\trestoreEditors: this.shouldRestoreEditors(\n\t\t\t\t\tthis.contextService,\n\t\t\t\t\tinitialEditorsState,\n\t\t\t\t),\n\t\t\t\teditorsToOpen: this.resolveEditorsToOpen(\n\t\t\t\t\tfileService,\n\t\t\t\t\tinitialEditorsState,\n\t\t\t\t),\n\t\t\t},\n\t\t\tviews: {\n\t\t\t\tdefaults: this.getDefaultLayoutViews(\n\t\t\t\t\tthis.environmentService,\n\t\t\t\t\tthis.storageService,\n\t\t\t\t),\n\t\t\t\tcontainerToRestore: {},\n\t\t\t},\n\t\t};\n\n\t\t// Layout Runtime State\n\t\tconst layoutRuntimeState: ILayoutRuntimeState = {\n\t\t\tactiveContainerId: this.getActiveContainerId(),\n\t\t\tmainWindowFullscreen: isFullscreen(mainWindow),\n\t\t\thasFocus: this.hostService.hasFocus,\n\t\t\tmaximized: new Set<number>(),\n\t\t\tmainWindowBorder: false,\n\t\t\tmenuBar: {\n\t\t\t\ttoggled: false,\n\t\t\t},\n\t\t\tzenMode: {\n\t\t\t\ttransitionDisposables: new DisposableMap(),\n\t\t\t},\n\t\t};\n\n\t\tthis.state = {\n\t\t\tinitialization: initialLayoutState,\n\t\t\truntime: layoutRuntimeState,\n\t\t};\n\n\t\tconst isNewWindow =\n\t\t\tlifecycleService.startupKind === StartupKind.NewWindow;\n\t\tconst activityBarNotDefault =\n\t\t\tthis.configurationService.getValue<ActivityBarPosition>(\n\t\t\t\tLayoutSettings.ACTIVITY_BAR_LOCATION,\n\t\t\t) !== ActivityBarPosition.DEFAULT;\n\n\t\t// Sidebar View Container To Restore\n\t\tif (this.isVisible(Parts.SIDEBAR_PART)) {\n\t\t\t// Only restore last viewlet if window was reloaded or we are in development mode\n\t\t\tlet viewContainerToRestore: string | undefined;\n\t\t\tif (\n\t\t\t\t!this.environmentService.isBuilt ||\n\t\t\t\tlifecycleService.startupKind === StartupKind.ReloadedWindow ||\n\t\t\t\t(this.environmentService.isExtensionDevelopment &&\n\t\t\t\t\t!this.environmentService.extensionTestsLocationURI)\n\t\t\t) {\n\t\t\t\tviewContainerToRestore = this.storageService.get(\n\t\t\t\t\tSidebarPart.activeViewletSettingsKey,\n\t\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\t\tthis.viewDescriptorService.getDefaultViewContainer(\n\t\t\t\t\t\tViewContainerLocation.Sidebar,\n\t\t\t\t\t)?.id,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tviewContainerToRestore =\n\t\t\t\t\tthis.viewDescriptorService.getDefaultViewContainer(\n\t\t\t\t\t\tViewContainerLocation.Sidebar,\n\t\t\t\t\t)?.id;\n\t\t\t}\n\n\t\t\tif (viewContainerToRestore) {\n\t\t\t\tthis.state.initialization.views.containerToRestore.sideBar =\n\t\t\t\t\tviewContainerToRestore;\n\t\t\t} else {\n\t\t\t\tthis.stateModel.setRuntimeValue(\n\t\t\t\t\tLayoutStateKeys.SIDEBAR_HIDDEN,\n\t\t\t\t\ttrue,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\t// Side bar is hidden and a new window is opened with activity bar not visible (not default)\n\t\telse if (isNewWindow && activityBarNotDefault) {\n\t\t\t// Open side bar if there is a view container to restore\n\t\t\tconst viewContainerToRestore = this.storageService.get(\n\t\t\t\tSidebarPart.activeViewletSettingsKey,\n\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\tthis.viewDescriptorService.getDefaultViewContainer(\n\t\t\t\t\tViewContainerLocation.Sidebar,\n\t\t\t\t)?.id,\n\t\t\t);\n\t\t\tif (viewContainerToRestore) {\n\t\t\t\tthis.state.initialization.views.containerToRestore.sideBar =\n\t\t\t\t\tviewContainerToRestore;\n\t\t\t\tthis.stateModel.setRuntimeValue(\n\t\t\t\t\tLayoutStateKeys.SIDEBAR_HIDDEN,\n\t\t\t\t\tfalse,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// Panel View Container To Restore\n\t\tif (this.isVisible(Parts.PANEL_PART)) {\n\t\t\tconst viewContainerToRestore = this.storageService.get(\n\t\t\t\tPanelPart.activePanelSettingsKey,\n\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\tthis.viewDescriptorService.getDefaultViewContainer(\n\t\t\t\t\tViewContainerLocation.Panel,\n\t\t\t\t)?.id,\n\t\t\t);\n\n\t\t\tif (viewContainerToRestore) {\n\t\t\t\tthis.state.initialization.views.containerToRestore.panel =\n\t\t\t\t\tviewContainerToRestore;\n\t\t\t} else {\n\t\t\t\tthis.stateModel.setRuntimeValue(\n\t\t\t\t\tLayoutStateKeys.PANEL_HIDDEN,\n\t\t\t\t\ttrue,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// Auxiliary Panel to restore\n\t\tconst auxiliaryBarVisible = this.isVisible(Parts.AUXILIARYBAR_PART);\n\t\tif (auxiliaryBarVisible || (isNewWindow && activityBarNotDefault)) {\n\t\t\tconst viewContainerToRestore = this.storageService.get(\n\t\t\t\tAuxiliaryBarPart.activePanelSettingsKey,\n\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\tthis.viewDescriptorService.getDefaultViewContainer(\n\t\t\t\t\tViewContainerLocation.AuxiliaryBar,\n\t\t\t\t)?.id,\n\t\t\t);\n\n\t\t\tif (viewContainerToRestore) {\n\t\t\t\tthis.state.initialization.views.containerToRestore.auxiliaryBar =\n\t\t\t\t\tviewContainerToRestore;\n\t\t\t}\n\n\t\t\tif (auxiliaryBarVisible !== !!viewContainerToRestore) {\n\t\t\t\tthis.stateModel.setRuntimeValue(\n\t\t\t\t\tLayoutStateKeys.AUXILIARYBAR_HIDDEN,\n\t\t\t\t\t!auxiliaryBarVisible,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// Window border\n\t\tthis.updateWindowsBorder(true);\n\t}\n\n\tprivate getDefaultLayoutViews(\n\t\tenvironmentService: IBrowserWorkbenchEnvironmentService,\n\t\tstorageService: IStorageService,\n\t): string[] | undefined {\n\t\tconst defaultLayout = environmentService.options?.defaultLayout;\n\t\tif (!defaultLayout) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (\n\t\t\t!defaultLayout.force &&\n\t\t\t!storageService.isNew(StorageScope.WORKSPACE)\n\t\t) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst { views } = defaultLayout;\n\t\tif (views?.length) {\n\t\t\treturn views.map((view) => view.id);\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate shouldRestoreEditors(\n\t\tcontextService: IWorkspaceContextService,\n\t\tinitialEditorsState: IInitialEditorsState | undefined,\n\t): boolean {\n\t\t// Restore editors based on a set of rules:\n\t\t// - never when running on temporary workspace\n\t\t// - not when we have files to open, unless:\n\t\t// - always when `window.restoreWindows: preserve`\n\n\t\tif (isTemporaryWorkspace(contextService.getWorkspace())) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst forceRestoreEditors =\n\t\t\tthis.configurationService.getValue<string>(\n\t\t\t\t\"window.restoreWindows\",\n\t\t\t) === \"preserve\";\n\t\treturn !!forceRestoreEditors || initialEditorsState === undefined;\n\t}\n\n\tprotected willRestoreEditors(): boolean {\n\t\treturn this.state.initialization.editor.restoreEditors;\n\t}\n\n\tprivate async resolveEditorsToOpen(\n\t\tfileService: IFileService,\n\t\tinitialEditorsState: IInitialEditorsState | undefined,\n\t): Promise<IEditorToOpen[]> {\n\t\tif (initialEditorsState) {\n\t\t\t// Merge editor (single)\n\t\t\tconst filesToMerge = coalesce(\n\t\t\t\tawait pathsToEditors(\n\t\t\t\t\tinitialEditorsState.filesToMerge,\n\t\t\t\t\tfileService,\n\t\t\t\t\tthis.logService,\n\t\t\t\t),\n\t\t\t);\n\t\t\tif (\n\t\t\t\tfilesToMerge.length === 4 &&\n\t\t\t\tisResourceEditorInput(filesToMerge[0]) &&\n\t\t\t\tisResourceEditorInput(filesToMerge[1]) &&\n\t\t\t\tisResourceEditorInput(filesToMerge[2]) &&\n\t\t\t\tisResourceEditorInput(filesToMerge[3])\n\t\t\t) {\n\t\t\t\treturn [\n\t\t\t\t\t{\n\t\t\t\t\t\teditor: {\n\t\t\t\t\t\t\tinput1: { resource: filesToMerge[0].resource },\n\t\t\t\t\t\t\tinput2: { resource: filesToMerge[1].resource },\n\t\t\t\t\t\t\tbase: { resource: filesToMerge[2].resource },\n\t\t\t\t\t\t\tresult: { resource: filesToMerge[3].resource },\n\t\t\t\t\t\t\toptions: { pinned: true },\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t];\n\t\t\t}\n\n\t\t\t// Diff editor (single)\n\t\t\tconst filesToDiff = coalesce(\n\t\t\t\tawait pathsToEditors(\n\t\t\t\t\tinitialEditorsState.filesToDiff,\n\t\t\t\t\tfileService,\n\t\t\t\t\tthis.logService,\n\t\t\t\t),\n\t\t\t);\n\t\t\tif (filesToDiff.length === 2) {\n\t\t\t\treturn [\n\t\t\t\t\t{\n\t\t\t\t\t\teditor: {\n\t\t\t\t\t\t\toriginal: { resource: filesToDiff[0].resource },\n\t\t\t\t\t\t\tmodified: { resource: filesToDiff[1].resource },\n\t\t\t\t\t\t\toptions: { pinned: true },\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t];\n\t\t\t}\n\n\t\t\t// Normal editor (multiple)\n\t\t\tconst filesToOpenOrCreate: IEditorToOpen[] = [];\n\t\t\tconst resolvedFilesToOpenOrCreate = await pathsToEditors(\n\t\t\t\tinitialEditorsState.filesToOpenOrCreate,\n\t\t\t\tfileService,\n\t\t\t\tthis.logService,\n\t\t\t);\n\t\t\tfor (let i = 0; i < resolvedFilesToOpenOrCreate.length; i++) {\n\t\t\t\tconst resolvedFileToOpenOrCreate =\n\t\t\t\t\tresolvedFilesToOpenOrCreate[i];\n\t\t\t\tif (resolvedFileToOpenOrCreate) {\n\t\t\t\t\tfilesToOpenOrCreate.push({\n\t\t\t\t\t\teditor: resolvedFileToOpenOrCreate,\n\t\t\t\t\t\tviewColumn:\n\t\t\t\t\t\t\tinitialEditorsState.filesToOpenOrCreate?.[i]\n\t\t\t\t\t\t\t\t.viewColumn, // take over `viewColumn` from initial state\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn filesToOpenOrCreate;\n\t\t}\n\n\t\t// Empty workbench configured to open untitled file if empty\n\t\telse if (\n\t\t\tthis.contextService.getWorkbenchState() === WorkbenchState.EMPTY &&\n\t\t\tthis.configurationService.getValue(\"workbench.startupEditor\") ===\n\t\t\t\t\"newUntitledFile\"\n\t\t) {\n\t\t\tif (this.editorGroupService.hasRestorableState) {\n\t\t\t\treturn []; // do not open any empty untitled file if we restored groups/editors from previous session\n\t\t\t}\n\n\t\t\tconst hasBackups = await this.workingCopyBackupService.hasBackups();\n\t\t\tif (hasBackups) {\n\t\t\t\treturn []; // do not open any empty untitled file if we have backups to restore\n\t\t\t}\n\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\teditor: { resource: undefined }, // open empty untitled file\n\t\t\t\t},\n\t\t\t];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate _openedDefaultEditors = false;\n\tget openedDefaultEditors() {\n\t\treturn this._openedDefaultEditors;\n\t}\n\n\tprivate getInitialEditorsState(): IInitialEditorsState | undefined {\n\t\t// Check for editors / editor layout from `defaultLayout` options first\n\t\tconst defaultLayout = this.environmentService.options?.defaultLayout;\n\t\tif (\n\t\t\t(defaultLayout?.editors?.length ||\n\t\t\t\tdefaultLayout?.layout?.editors) &&\n\t\t\t(defaultLayout.force ||\n\t\t\t\tthis.storageService.isNew(StorageScope.WORKSPACE))\n\t\t) {\n\t\t\tthis._openedDefaultEditors = true;\n\n\t\t\treturn {\n\t\t\t\tlayout: defaultLayout.layout?.editors,\n\t\t\t\tfilesToOpenOrCreate: defaultLayout?.editors?.map((editor) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tviewColumn: editor.viewColumn,\n\t\t\t\t\t\tfileUri: URI.revive(editor.uri),\n\t\t\t\t\t\topenOnlyIfExists: editor.openOnlyIfExists,\n\t\t\t\t\t\toptions: editor.options,\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t};\n\t\t}\n\n\t\t// Then check for files to open, create or diff/merge from main side\n\t\tconst { filesToOpenOrCreate, filesToDiff, filesToMerge } =\n\t\t\tthis.environmentService;\n\t\tif (filesToOpenOrCreate || filesToDiff || filesToMerge) {\n\t\t\treturn { filesToOpenOrCreate, filesToDiff, filesToMerge };\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate readonly whenReadyPromise = new DeferredPromise<void>();\n\tprotected readonly whenReady = this.whenReadyPromise.p;\n\n\tprivate readonly whenRestoredPromise = new DeferredPromise<void>();\n\treadonly whenRestored = this.whenRestoredPromise.p;\n\tprivate restored = false;\n\n\tisRestored(): boolean {\n\t\treturn this.restored;\n\t}\n\n\tprotected restoreParts(): void {\n\t\t// distinguish long running restore operations that\n\t\t// are required for the layout to be ready from those\n\t\t// that are needed to signal restoring is done\n\t\tconst layoutReadyPromises: Promise<unknown>[] = [];\n\t\tconst layoutRestoredPromises: Promise<unknown>[] = [];\n\n\t\t// Restore editors\n\t\tlayoutReadyPromises.push(\n\t\t\t(async () => {\n\t\t\t\tmark(\"code/willRestoreEditors\");\n\n\t\t\t\t// first ensure the editor part is ready\n\t\t\t\tawait this.editorGroupService.whenReady;\n\t\t\t\tmark(\"code/restoreEditors/editorGroupsReady\");\n\n\t\t\t\t// apply editor layout if any\n\t\t\t\tif (this.state.initialization.layout?.editors) {\n\t\t\t\t\tthis.editorGroupService.mainPart.applyLayout(\n\t\t\t\t\t\tthis.state.initialization.layout.editors,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// then see for editors to open as instructed\n\t\t\t\t// it is important that we trigger this from\n\t\t\t\t// the overall restore flow to reduce possible\n\t\t\t\t// flicker on startup: we want any editor to\n\t\t\t\t// open to get a chance to open first before\n\t\t\t\t// signaling that layout is restored, but we do\n\t\t\t\t// not need to await the editors from having\n\t\t\t\t// fully loaded.\n\n\t\t\t\tconst editors =\n\t\t\t\t\tawait this.state.initialization.editor.editorsToOpen;\n\t\t\t\tmark(\"code/restoreEditors/editorsToOpenResolved\");\n\n\t\t\t\tlet openEditorsPromise: Promise<unknown> | undefined;\n\t\t\t\tif (editors.length) {\n\t\t\t\t\t// we have to map editors to their groups as instructed\n\t\t\t\t\t// by the input. this is important to ensure that we open\n\t\t\t\t\t// the editors in the groups they belong to.\n\n\t\t\t\t\tconst editorGroupsInVisualOrder =\n\t\t\t\t\t\tthis.editorGroupService.mainPart.getGroups(\n\t\t\t\t\t\t\tGroupsOrder.GRID_APPEARANCE,\n\t\t\t\t\t\t);\n\t\t\t\t\tconst mapEditorsToGroup = new Map<\n\t\t\t\t\t\tGroupIdentifier,\n\t\t\t\t\t\tSet<IUntypedEditorInput>\n\t\t\t\t\t>();\n\n\t\t\t\t\tfor (const editor of editors) {\n\t\t\t\t\t\tconst group =\n\t\t\t\t\t\t\teditorGroupsInVisualOrder[\n\t\t\t\t\t\t\t\t(editor.viewColumn ?? 1) - 1\n\t\t\t\t\t\t\t]; // viewColumn is index+1 based\n\n\t\t\t\t\t\tlet editorsByGroup = mapEditorsToGroup.get(group.id);\n\t\t\t\t\t\tif (!editorsByGroup) {\n\t\t\t\t\t\t\teditorsByGroup = new Set<IUntypedEditorInput>();\n\t\t\t\t\t\t\tmapEditorsToGroup.set(group.id, editorsByGroup);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\teditorsByGroup.add(editor.editor);\n\t\t\t\t\t}\n\n\t\t\t\t\topenEditorsPromise = Promise.all(\n\t\t\t\t\t\tArray.from(mapEditorsToGroup).map(\n\t\t\t\t\t\t\tasync ([groupId, editors]) => {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tawait this.editorService.openEditors(\n\t\t\t\t\t\t\t\t\t\tArray.from(editors),\n\t\t\t\t\t\t\t\t\t\tgroupId,\n\t\t\t\t\t\t\t\t\t\t{ validateTrust: true },\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// do not block the overall layout ready flow from potentially\n\t\t\t\t// slow editors to resolve on startup\n\t\t\t\tlayoutRestoredPromises.push(\n\t\t\t\t\tPromise.all([\n\t\t\t\t\t\topenEditorsPromise?.finally(() =>\n\t\t\t\t\t\t\tmark(\"code/restoreEditors/editorsOpened\"),\n\t\t\t\t\t\t),\n\t\t\t\t\t\tthis.editorGroupService.whenRestored.finally(() =>\n\t\t\t\t\t\t\tmark(\"code/restoreEditors/editorGroupsRestored\"),\n\t\t\t\t\t\t),\n\t\t\t\t\t]).finally(() => {\n\t\t\t\t\t\t// the `code/didRestoreEditors` perf mark is specifically\n\t\t\t\t\t\t// for when visible editors have resolved, so we only mark\n\t\t\t\t\t\t// if when editor group service has restored.\n\t\t\t\t\t\tmark(\"code/didRestoreEditors\");\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t})(),\n\t\t);\n\n\t\t// Restore default views (only when `IDefaultLayout` is provided)\n\t\tconst restoreDefaultViewsPromise = (async () => {\n\t\t\tif (this.state.initialization.views.defaults?.length) {\n\t\t\t\tmark(\"code/willOpenDefaultViews\");\n\n\t\t\t\tconst locationsRestored: { id: string; order: number }[] = [];\n\n\t\t\t\tconst tryOpenView = (view: {\n\t\t\t\t\tid: string;\n\t\t\t\t\torder: number;\n\t\t\t\t}): boolean => {\n\t\t\t\t\tconst location =\n\t\t\t\t\t\tthis.viewDescriptorService.getViewLocationById(view.id);\n\t\t\t\t\tif (location !== null) {\n\t\t\t\t\t\tconst container =\n\t\t\t\t\t\t\tthis.viewDescriptorService.getViewContainerByViewId(\n\t\t\t\t\t\t\t\tview.id,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tif (container) {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tview.order >=\n\t\t\t\t\t\t\t\t(locationsRestored?.[location]?.order ?? 0)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tlocationsRestored[location] = {\n\t\t\t\t\t\t\t\t\tid: container.id,\n\t\t\t\t\t\t\t\t\torder: view.order,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst containerModel =\n\t\t\t\t\t\t\t\tthis.viewDescriptorService.getViewContainerModel(\n\t\t\t\t\t\t\t\t\tcontainer,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tcontainerModel.setCollapsed(view.id, false);\n\t\t\t\t\t\t\tcontainerModel.setVisible(view.id, true);\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t};\n\n\t\t\t\tconst defaultViews = [\n\t\t\t\t\t...this.state.initialization.views.defaults,\n\t\t\t\t]\n\t\t\t\t\t.reverse()\n\t\t\t\t\t.map((v, index) => ({ id: v, order: index }));\n\n\t\t\t\tlet i = defaultViews.length;\n\t\t\t\twhile (i) {\n\t\t\t\t\ti--;\n\t\t\t\t\tif (tryOpenView(defaultViews[i])) {\n\t\t\t\t\t\tdefaultViews.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If we still have views left over, wait until all extensions have been registered and try again\n\t\t\t\tif (defaultViews.length) {\n\t\t\t\t\tawait this.extensionService.whenInstalledExtensionsRegistered();\n\n\t\t\t\t\tlet i = defaultViews.length;\n\t\t\t\t\twhile (i) {\n\t\t\t\t\t\ti--;\n\t\t\t\t\t\tif (tryOpenView(defaultViews[i])) {\n\t\t\t\t\t\t\tdefaultViews.splice(i, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If we opened a view in the sidebar, stop any restore there\n\t\t\t\tif (locationsRestored[ViewContainerLocation.Sidebar]) {\n\t\t\t\t\tthis.state.initialization.views.containerToRestore.sideBar =\n\t\t\t\t\t\tlocationsRestored[ViewContainerLocation.Sidebar].id;\n\t\t\t\t}\n\n\t\t\t\t// If we opened a view in the panel, stop any restore there\n\t\t\t\tif (locationsRestored[ViewContainerLocation.Panel]) {\n\t\t\t\t\tthis.state.initialization.views.containerToRestore.panel =\n\t\t\t\t\t\tlocationsRestored[ViewContainerLocation.Panel].id;\n\t\t\t\t}\n\n\t\t\t\t// If we opened a view in the auxiliary bar, stop any restore there\n\t\t\t\tif (locationsRestored[ViewContainerLocation.AuxiliaryBar]) {\n\t\t\t\t\tthis.state.initialization.views.containerToRestore.auxiliaryBar =\n\t\t\t\t\t\tlocationsRestored[\n\t\t\t\t\t\t\tViewContainerLocation.AuxiliaryBar\n\t\t\t\t\t\t].id;\n\t\t\t\t}\n\n\t\t\t\tmark(\"code/didOpenDefaultViews\");\n\t\t\t}\n\t\t})();\n\t\tlayoutReadyPromises.push(restoreDefaultViewsPromise);\n\n\t\t// Restore Sidebar\n\t\tlayoutReadyPromises.push(\n\t\t\t(async () => {\n\t\t\t\t// Restoring views could mean that sidebar already\n\t\t\t\t// restored, as such we need to test again\n\t\t\t\tawait restoreDefaultViewsPromise;\n\t\t\t\tif (\n\t\t\t\t\t!this.state.initialization.views.containerToRestore.sideBar\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tmark(\"code/willRestoreViewlet\");\n\n\t\t\t\tconst viewlet =\n\t\t\t\t\tawait this.paneCompositeService.openPaneComposite(\n\t\t\t\t\t\tthis.state.initialization.views.containerToRestore\n\t\t\t\t\t\t\t.sideBar,\n\t\t\t\t\t\tViewContainerLocation.Sidebar,\n\t\t\t\t\t);\n\t\t\t\tif (!viewlet) {\n\t\t\t\t\tawait this.paneCompositeService.openPaneComposite(\n\t\t\t\t\t\tthis.viewDescriptorService.getDefaultViewContainer(\n\t\t\t\t\t\t\tViewContainerLocation.Sidebar,\n\t\t\t\t\t\t)?.id,\n\t\t\t\t\t\tViewContainerLocation.Sidebar,\n\t\t\t\t\t); // fallback to default viewlet as needed\n\t\t\t\t}\n\n\t\t\t\tmark(\"code/didRestoreViewlet\");\n\t\t\t})(),\n\t\t);\n\n\t\t// Restore Panel\n\t\tlayoutReadyPromises.push(\n\t\t\t(async () => {\n\t\t\t\t// Restoring views could mean that panel already\n\t\t\t\t// restored, as such we need to test again\n\t\t\t\tawait restoreDefaultViewsPromise;\n\t\t\t\tif (!this.state.initialization.views.containerToRestore.panel) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tmark(\"code/willRestorePanel\");\n\n\t\t\t\tconst panel = await this.paneCompositeService.openPaneComposite(\n\t\t\t\t\tthis.state.initialization.views.containerToRestore.panel,\n\t\t\t\t\tViewContainerLocation.Panel,\n\t\t\t\t);\n\t\t\t\tif (!panel) {\n\t\t\t\t\tawait this.paneCompositeService.openPaneComposite(\n\t\t\t\t\t\tthis.viewDescriptorService.getDefaultViewContainer(\n\t\t\t\t\t\t\tViewContainerLocation.Panel,\n\t\t\t\t\t\t)?.id,\n\t\t\t\t\t\tViewContainerLocation.Panel,\n\t\t\t\t\t); // fallback to default panel as needed\n\t\t\t\t}\n\n\t\t\t\tmark(\"code/didRestorePanel\");\n\t\t\t})(),\n\t\t);\n\n\t\t// Restore Auxiliary Bar\n\t\tlayoutReadyPromises.push(\n\t\t\t(async () => {\n\t\t\t\t// Restoring views could mean that panel already\n\t\t\t\t// restored, as such we need to test again\n\t\t\t\tawait restoreDefaultViewsPromise;\n\t\t\t\tif (\n\t\t\t\t\t!this.state.initialization.views.containerToRestore\n\t\t\t\t\t\t.auxiliaryBar\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tmark(\"code/willRestoreAuxiliaryBar\");\n\n\t\t\t\tconst panel = await this.paneCompositeService.openPaneComposite(\n\t\t\t\t\tthis.state.initialization.views.containerToRestore\n\t\t\t\t\t\t.auxiliaryBar,\n\t\t\t\t\tViewContainerLocation.AuxiliaryBar,\n\t\t\t\t);\n\t\t\t\tif (!panel) {\n\t\t\t\t\tawait this.paneCompositeService.openPaneComposite(\n\t\t\t\t\t\tthis.viewDescriptorService.getDefaultViewContainer(\n\t\t\t\t\t\t\tViewContainerLocation.AuxiliaryBar,\n\t\t\t\t\t\t)?.id,\n\t\t\t\t\t\tViewContainerLocation.AuxiliaryBar,\n\t\t\t\t\t); // fallback to default panel as needed\n\t\t\t\t}\n\n\t\t\t\tmark(\"code/didRestoreAuxiliaryBar\");\n\t\t\t})(),\n\t\t);\n\n\t\t// Restore Zen Mode\n\t\tconst zenModeWasActive = this.isZenModeActive();\n\t\tconst restoreZenMode = getZenModeConfiguration(\n\t\t\tthis.configurationService,\n\t\t).restore;\n\n\t\tif (zenModeWasActive) {\n\t\t\tthis.setZenModeActive(!restoreZenMode);\n\t\t\tthis.toggleZenMode(false, true);\n\t\t}\n\n\t\t// Restore Main Editor Center Mode\n\t\tif (\n\t\t\tthis.stateModel.getRuntimeValue(\n\t\t\t\tLayoutStateKeys.MAIN_EDITOR_CENTERED,\n\t\t\t)\n\t\t) {\n\t\t\tthis.centerMainEditorLayout(true, true);\n\t\t}\n\n\t\t// Await for promises that we recorded to update\n\t\t// our ready and restored states properly.\n\t\tPromises.settled(layoutReadyPromises).finally(() => {\n\t\t\tthis.whenReadyPromise.complete();\n\n\t\t\tPromises.settled(layoutRestoredPromises).finally(() => {\n\t\t\t\tthis.restored = true;\n\t\t\t\tthis.whenRestoredPromise.complete();\n\t\t\t});\n\t\t});\n\t}\n\n\tregisterPart(part: Part): IDisposable {\n\t\tconst id = part.getId();\n\t\tthis.parts.set(id, part);\n\n\t\treturn toDisposable(() => this.parts.delete(id));\n\t}\n\n\tprotected getPart(key: Parts): Part {\n\t\tconst part = this.parts.get(key);\n\t\tif (!part) {\n\t\t\tthrow new Error(`Unknown part ${key}`);\n\t\t}\n\n\t\treturn part;\n\t}\n\n\tregisterNotifications(delegate: {\n\t\tonDidChangeNotificationsVisibility: Event<boolean>;\n\t}): void {\n\t\tthis._register(\n\t\t\tdelegate.onDidChangeNotificationsVisibility((visible) =>\n\t\t\t\tthis._onDidChangeNotificationsVisibility.fire(visible),\n\t\t\t),\n\t\t);\n\t}\n\n\thasFocus(part: Parts): boolean {\n\t\tconst container = this.getContainer(getActiveWindow(), part);\n\t\tif (!container) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst activeElement = getActiveElement();\n\t\tif (!activeElement) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn isAncestorUsingFlowTo(activeElement, container);\n\t}\n\n\tfocusPart(part: MULTI_WINDOW_PARTS, targetWindow: Window): void;\n\tfocusPart(part: SINGLE_WINDOW_PARTS): void;\n\tfocusPart(part: Parts, targetWindow: Window = mainWindow): void {\n\t\tconst container =\n\t\t\tthis.getContainer(targetWindow, part) ?? this.mainContainer;\n\n\t\tswitch (part) {\n\t\t\tcase Parts.EDITOR_PART:\n\t\t\t\tthis.editorGroupService.getPart(container).activeGroup.focus();\n\t\t\t\tbreak;\n\t\t\tcase Parts.PANEL_PART: {\n\t\t\t\tthis.paneCompositeService\n\t\t\t\t\t.getActivePaneComposite(ViewContainerLocation.Panel)\n\t\t\t\t\t?.focus();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Parts.SIDEBAR_PART: {\n\t\t\t\tthis.paneCompositeService\n\t\t\t\t\t.getActivePaneComposite(ViewContainerLocation.Sidebar)\n\t\t\t\t\t?.focus();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Parts.AUXILIARYBAR_PART: {\n\t\t\t\tthis.paneCompositeService\n\t\t\t\t\t.getActivePaneComposite(ViewContainerLocation.AuxiliaryBar)\n\t\t\t\t\t?.focus();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Parts.ACTIVITYBAR_PART:\n\t\t\t\t(\n\t\t\t\t\tthis.getPart(Parts.SIDEBAR_PART) as SidebarPart\n\t\t\t\t).focusActivityBar();\n\t\t\t\tbreak;\n\t\t\tcase Parts.STATUSBAR_PART:\n\t\t\t\tthis.statusBarService.getPart(container).focus();\n\t\t\t\tbreak;\n\t\t\tdefault: {\n\t\t\t\tcontainer?.focus();\n\t\t\t}\n\t\t}\n\t}\n\n\tgetContainer(targetWindow: Window): HTMLElement;\n\tgetContainer(targetWindow: Window, part: Parts): HTMLElement | undefined;\n\tgetContainer(targetWindow: Window, part?: Parts): HTMLElement | undefined {\n\t\tif (typeof part === \"undefined\") {\n\t\t\treturn this.getContainerFromDocument(targetWindow.document);\n\t\t}\n\n\t\tif (targetWindow === mainWindow) {\n\t\t\treturn this.getPart(part).getContainer();\n\t\t}\n\n\t\t// Only some parts are supported for auxiliary windows\n\t\tlet partCandidate: unknown;\n\t\tif (part === Parts.EDITOR_PART) {\n\t\t\tpartCandidate = this.editorGroupService.getPart(\n\t\t\t\tthis.getContainerFromDocument(targetWindow.document),\n\t\t\t);\n\t\t} else if (part === Parts.STATUSBAR_PART) {\n\t\t\tpartCandidate = this.statusBarService.getPart(\n\t\t\t\tthis.getContainerFromDocument(targetWindow.document),\n\t\t\t);\n\t\t} else if (part === Parts.TITLEBAR_PART) {\n\t\t\tpartCandidate = this.titleService.getPart(\n\t\t\t\tthis.getContainerFromDocument(targetWindow.document),\n\t\t\t);\n\t\t}\n\n\t\tif (partCandidate instanceof Part) {\n\t\t\treturn partCandidate.getContainer();\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tisVisible(part: MULTI_WINDOW_PARTS, targetWindow: Window): boolean;\n\tisVisible(part: SINGLE_WINDOW_PARTS): boolean;\n\tisVisible(part: Parts, targetWindow?: Window): boolean;\n\tisVisible(part: Parts, targetWindow: Window = mainWindow): boolean {\n\t\tif (targetWindow !== mainWindow && part === Parts.EDITOR_PART) {\n\t\t\treturn true; // cannot hide editor part in auxiliary windows\n\t\t}\n\n\t\tif (this.initialized) {\n\t\t\tswitch (part) {\n\t\t\t\tcase Parts.TITLEBAR_PART:\n\t\t\t\t\treturn this.workbenchGrid.isViewVisible(\n\t\t\t\t\t\tthis.titleBarPartView,\n\t\t\t\t\t);\n\t\t\t\tcase Parts.SIDEBAR_PART:\n\t\t\t\t\treturn !this.stateModel.getRuntimeValue(\n\t\t\t\t\t\tLayoutStateKeys.SIDEBAR_HIDDEN,\n\t\t\t\t\t);\n\t\t\t\tcase Parts.PANEL_PART:\n\t\t\t\t\treturn !this.stateModel.getRuntimeValue(\n\t\t\t\t\t\tLayoutStateKeys.PANEL_HIDDEN,\n\t\t\t\t\t);\n\t\t\t\tcase Parts.AUXILIARYBAR_PART:\n\t\t\t\t\treturn !this.stateModel.getRuntimeValue(\n\t\t\t\t\t\tLayoutStateKeys.AUXILIARYBAR_HIDDEN,\n\t\t\t\t\t);\n\t\t\t\tcase Parts.STATUSBAR_PART:\n\t\t\t\t\treturn !this.stateModel.getRuntimeValue(\n\t\t\t\t\t\tLayoutStateKeys.STATUSBAR_HIDDEN,\n\t\t\t\t\t);\n\t\t\t\tcase Parts.ACTIVITYBAR_PART:\n\t\t\t\t\treturn !this.stateModel.getRuntimeValue(\n\t\t\t\t\t\tLayoutStateKeys.ACTIVITYBAR_HIDDEN,\n\t\t\t\t\t);\n\t\t\t\tcase Parts.EDITOR_PART:\n\t\t\t\t\treturn !this.stateModel.getRuntimeValue(\n\t\t\t\t\t\tLayoutStateKeys.EDITOR_HIDDEN,\n\t\t\t\t\t);\n\t\t\t\tcase Parts.BANNER_PART:\n\t\t\t\t\treturn this.workbenchGrid.isViewVisible(\n\t\t\t\t\t\tthis.bannerPartView,\n\t\t\t\t\t);\n\t\t\t\tdefault:\n\t\t\t\t\treturn false; // any other part cannot be hidden\n\t\t\t}\n\t\t}\n\n\t\tswitch (part) {\n\t\t\tcase Parts.TITLEBAR_PART:\n\t\t\t\treturn shouldShowCustomTitleBar(\n\t\t\t\t\tthis.configurationService,\n\t\t\t\t\tmainWindow,\n\t\t\t\t\tthis.state.runtime.menuBar.toggled,\n\t\t\t\t\tthis.isZenModeActive(),\n\t\t\t\t);\n\t\t\tcase Parts.SIDEBAR_PART:\n\t\t\t\treturn !this.stateModel.getRuntimeValue(\n\t\t\t\t\tLayoutStateKeys.SIDEBAR_HIDDEN,\n\t\t\t\t);\n\t\t\tcase Parts.PANEL_PART:\n\t\t\t\treturn !this.stateModel.getRuntimeValue(\n\t\t\t\t\tLayoutStateKeys.PANEL_HIDDEN,\n\t\t\t\t);\n\t\t\tcase Parts.AUXILIARYBAR_PART:\n\t\t\t\treturn !this.stateModel.getRuntimeValue(\n\t\t\t\t\tLayoutStateKeys.AUXILIARYBAR_HIDDEN,\n\t\t\t\t);\n\t\t\tcase Parts.STATUSBAR_PART:\n\t\t\t\treturn !this.stateModel.getRuntimeValue(\n\t\t\t\t\tLayoutStateKeys.STATUSBAR_HIDDEN,\n\t\t\t\t);\n\t\t\tcase Parts.ACTIVITYBAR_PART:\n\t\t\t\treturn !this.stateModel.getRuntimeValue(\n\t\t\t\t\tLayoutStateKeys.ACTIVITYBAR_HIDDEN,\n\t\t\t\t);\n\t\t\tcase Parts.EDITOR_PART:\n\t\t\t\treturn !this.stateModel.getRuntimeValue(\n\t\t\t\t\tLayoutStateKeys.EDITOR_HIDDEN,\n\t\t\t\t);\n\t\t\tdefault:\n\t\t\t\treturn false; // any other part cannot be hidden\n\t\t}\n\t}\n\n\tprivate shouldShowBannerFirst(): boolean {\n\t\treturn isWeb && !isWCOEnabled();\n\t}\n\n\tfocus(): void {\n\t\tthis.focusPart(Parts.EDITOR_PART, getWindow(this.activeContainer));\n\t}\n\n\tprivate focusPanelOrEditor(): void {\n\t\tconst activePanel = this.paneCompositeService.getActivePaneComposite(\n\t\t\tViewContainerLocation.Panel,\n\t\t);\n\t\tif (\n\t\t\t(this.hasFocus(Parts.PANEL_PART) ||\n\t\t\t\t!this.isVisible(Parts.EDITOR_PART)) &&\n\t\t\tactivePanel\n\t\t) {\n\t\t\tactivePanel.focus(); // prefer panel if it has focus or editor is hidden\n\t\t} else {\n\t\t\tthis.focus(); // otherwise focus editor\n\t\t}\n\t}\n\n\tgetMaximumEditorDimensions(container: HTMLElement): IDimension {\n\t\tconst targetWindow = getWindow(container);\n\t\tconst containerDimension = this.getContainerDimension(container);\n\n\t\tif (container === this.mainContainer) {\n\t\t\tconst isPanelHorizontal = isHorizontal(this.getPanelPosition());\n\t\t\tconst takenWidth =\n\t\t\t\t(this.isVisible(Parts.ACTIVITYBAR_PART)\n\t\t\t\t\t? this.activityBarPartView.minimumWidth\n\t\t\t\t\t: 0) +\n\t\t\t\t(this.isVisible(Parts.SIDEBAR_PART)\n\t\t\t\t\t? this.sideBarPartView.minimumWidth\n\t\t\t\t\t: 0) +\n\t\t\t\t(this.isVisible(Parts.PANEL_PART) && !isPanelHorizontal\n\t\t\t\t\t? this.panelPartView.minimumWidth\n\t\t\t\t\t: 0) +\n\t\t\t\t(this.isVisible(Parts.AUXILIARYBAR_PART)\n\t\t\t\t\t? this.auxiliaryBarPartView.minimumWidth\n\t\t\t\t\t: 0);\n\n\t\t\tconst takenHeight =\n\t\t\t\t(this.isVisible(Parts.TITLEBAR_PART, targetWindow)\n\t\t\t\t\t? this.titleBarPartView.minimumHeight\n\t\t\t\t\t: 0) +\n\t\t\t\t(this.isVisible(Parts.STATUSBAR_PART, targetWindow)\n\t\t\t\t\t? this.statusBarPartView.minimumHeight\n\t\t\t\t\t: 0) +\n\t\t\t\t(this.isVisible(Parts.PANEL_PART) && isPanelHorizontal\n\t\t\t\t\t? this.panelPartView.minimumHeight\n\t\t\t\t\t: 0);\n\n\t\t\tconst availableWidth = containerDimension.width - takenWidth;\n\t\t\tconst availableHeight = containerDimension.height - takenHeight;\n\n\t\t\treturn { width: availableWidth, height: availableHeight };\n\t\t} else {\n\t\t\tconst takenHeight =\n\t\t\t\t(this.isVisible(Parts.TITLEBAR_PART, targetWindow)\n\t\t\t\t\t? this.titleBarPartView.minimumHeight\n\t\t\t\t\t: 0) +\n\t\t\t\t(this.isVisible(Parts.STATUSBAR_PART, targetWindow)\n\t\t\t\t\t? this.statusBarPartView.minimumHeight\n\t\t\t\t\t: 0);\n\n\t\t\treturn {\n\t\t\t\twidth: containerDimension.width,\n\t\t\t\theight: containerDimension.height - takenHeight,\n\t\t\t};\n\t\t}\n\t}\n\n\tprivate isZenModeActive(): boolean {\n\t\treturn this.stateModel.getRuntimeValue(LayoutStateKeys.ZEN_MODE_ACTIVE);\n\t}\n\n\tprivate setZenModeActive(active: boolean) {\n\t\tthis.stateModel.setRuntimeValue(\n\t\t\tLayoutStateKeys.ZEN_MODE_ACTIVE,\n\t\t\tactive,\n\t\t);\n\t}\n\n\ttoggleZenMode(skipLayout?: boolean, restoring = false): void {\n\t\tthis.setZenModeActive(!this.isZenModeActive());\n\t\tthis.state.runtime.zenMode.transitionDisposables.clearAndDisposeAll();\n\n\t\tconst setLineNumbers = (lineNumbers?: LineNumbersType) => {\n\t\t\tfor (const editor of this.mainPartEditorService\n\t\t\t\t.visibleTextEditorControls) {\n\t\t\t\t// To properly reset line numbers we need to read the configuration for each editor respecting it's uri.\n\t\t\t\tif (!lineNumbers && isCodeEditor(editor) && editor.hasModel()) {\n\t\t\t\t\tconst model = editor.getModel();\n\t\t\t\t\tlineNumbers = this.configurationService.getValue(\n\t\t\t\t\t\t\"editor.lineNumbers\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tresource: model.uri,\n\t\t\t\t\t\t\toverrideIdentifier: model.getLanguageId(),\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (!lineNumbers) {\n\t\t\t\t\tlineNumbers =\n\t\t\t\t\t\tthis.configurationService.getValue(\n\t\t\t\t\t\t\t\"editor.lineNumbers\",\n\t\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\teditor.updateOptions({ lineNumbers });\n\t\t\t}\n\t\t};\n\n\t\t// Check if zen mode transitioned to full screen and if now we are out of zen mode\n\t\t// -> we need to go out of full screen (same goes for the centered editor layout)\n\t\tlet toggleMainWindowFullScreen = false;\n\t\tconst config = getZenModeConfiguration(this.configurationService);\n\t\tconst zenModeExitInfo = this.stateModel.getRuntimeValue(\n\t\t\tLayoutStateKeys.ZEN_MODE_EXIT_INFO,\n\t\t);\n\n\t\t// Zen Mode Active\n\t\tif (this.isZenModeActive()) {\n\t\t\ttoggleMainWindowFullScreen =\n\t\t\t\t!this.state.runtime.mainWindowFullscreen &&\n\t\t\t\tconfig.fullScreen &&\n\t\t\t\t!isIOS;\n\n\t\t\tif (!restoring) {\n\t\t\t\tzenModeExitInfo.transitionedToFullScreen =\n\t\t\t\t\ttoggleMainWindowFullScreen;\n\t\t\t\tzenModeExitInfo.transitionedToCenteredEditorLayout =\n\t\t\t\t\t!this.isMainEditorLayoutCentered() && config.centerLayout;\n\t\t\t\tzenModeExitInfo.handleNotificationsDoNotDisturbMode =\n\t\t\t\t\tthis.notificationService.getFilter() ===\n\t\t\t\t\tNotificationsFilter.OFF;\n\t\t\t\tzenModeExitInfo.wasVisible.sideBar = this.isVisible(\n\t\t\t\t\tParts.SIDEBAR_PART,\n\t\t\t\t);\n\t\t\t\tzenModeExitInfo.wasVisible.panel = this.isVisible(\n\t\t\t\t\tParts.PANEL_PART,\n\t\t\t\t);\n\t\t\t\tzenModeExitInfo.wasVisible.auxiliaryBar = this.isVisible(\n\t\t\t\t\tParts.AUXILIARYBAR_PART,\n\t\t\t\t);\n\t\t\t\tthis.stateModel.setRuntimeValue(\n\t\t\t\t\tLayoutStateKeys.ZEN_MODE_EXIT_INFO,\n\t\t\t\t\tzenModeExitInfo,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.setPanelHidden(true, true);\n\t\t\tthis.setAuxiliaryBarHidden(true, true);\n\t\t\tthis.setSideBarHidden(true, true);\n\n\t\t\tif (config.hideActivityBar) {\n\t\t\t\tthis.setActivityBarHidden(true, true);\n\t\t\t}\n\n\t\t\tif (config.hideStatusBar) {\n\t\t\t\tthis.setStatusBarHidden(true, true);\n\t\t\t}\n\n\t\t\tif (config.hideLineNumbers) {\n\t\t\t\tsetLineNumbers(\"off\");\n\t\t\t\tthis.state.runtime.zenMode.transitionDisposables.set(\n\t\t\t\t\tZenModeSettings.HIDE_LINENUMBERS,\n\t\t\t\t\tthis.mainPartEditorService.onDidVisibleEditorsChange(() =>\n\t\t\t\t\t\tsetLineNumbers(\"off\"),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tconfig.showTabs !== this.editorGroupService.partOptions.showTabs\n\t\t\t) {\n\t\t\t\tthis.state.runtime.zenMode.transitionDisposables.set(\n\t\t\t\t\tZenModeSettings.SHOW_TABS,\n\t\t\t\t\tthis.editorGroupService.mainPart.enforcePartOptions({\n\t\t\t\t\t\tshowTabs: config.showTabs,\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tconfig.silentNotifications &&\n\t\t\t\tzenModeExitInfo.handleNotificationsDoNotDisturbMode\n\t\t\t) {\n\t\t\t\tthis.notificationService.setFilter(NotificationsFilter.ERROR);\n\t\t\t}\n\n\t\t\tif (config.centerLayout) {\n\t\t\t\tthis.centerMainEditorLayout(true, true);\n\t\t\t}\n\n\t\t\t// Zen Mode Configuration Changes\n\t\t\tthis.state.runtime.zenMode.transitionDisposables.set(\n\t\t\t\t\"configurationChange\",\n\t\t\t\tthis.configurationService.onDidChangeConfiguration((e) => {\n\t\t\t\t\t// Activity Bar\n\t\t\t\t\tif (\n\t\t\t\t\t\te.affectsConfiguration(ZenModeSettings.HIDE_ACTIVITYBAR)\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst zenModeHideActivityBar =\n\t\t\t\t\t\t\tthis.configurationService.getValue<boolean>(\n\t\t\t\t\t\t\t\tZenModeSettings.HIDE_ACTIVITYBAR,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.setActivityBarHidden(zenModeHideActivityBar, true);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Status Bar\n\t\t\t\t\tif (\n\t\t\t\t\t\te.affectsConfiguration(ZenModeSettings.HIDE_STATUSBAR)\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst zenModeHideStatusBar =\n\t\t\t\t\t\t\tthis.configurationService.getValue<boolean>(\n\t\t\t\t\t\t\t\tZenModeSettings.HIDE_STATUSBAR,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.setStatusBarHidden(zenModeHideStatusBar, true);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Center Layout\n\t\t\t\t\tif (e.affectsConfiguration(ZenModeSettings.CENTER_LAYOUT)) {\n\t\t\t\t\t\tconst zenModeCenterLayout =\n\t\t\t\t\t\t\tthis.configurationService.getValue<boolean>(\n\t\t\t\t\t\t\t\tZenModeSettings.CENTER_LAYOUT,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.centerMainEditorLayout(zenModeCenterLayout, true);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Show Tabs\n\t\t\t\t\tif (e.affectsConfiguration(ZenModeSettings.SHOW_TABS)) {\n\t\t\t\t\t\tconst zenModeShowTabs =\n\t\t\t\t\t\t\tthis.configurationService.getValue<\n\t\t\t\t\t\t\t\tEditorTabsMode | undefined\n\t\t\t\t\t\t\t>(ZenModeSettings.SHOW_TABS) ?? \"multiple\";\n\t\t\t\t\t\tthis.state.runtime.zenMode.transitionDisposables.set(\n\t\t\t\t\t\t\tZenModeSettings.SHOW_TABS,\n\t\t\t\t\t\t\tthis.editorGroupService.mainPart.enforcePartOptions(\n\t\t\t\t\t\t\t\t{ showTabs: zenModeShowTabs },\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Notifications\n\t\t\t\t\tif (\n\t\t\t\t\t\te.affectsConfiguration(\n\t\t\t\t\t\t\tZenModeSettings.SILENT_NOTIFICATIONS,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst zenModeSilentNotifications =\n\t\t\t\t\t\t\t!!this.configurationService.getValue(\n\t\t\t\t\t\t\t\tZenModeSettings.SILENT_NOTIFICATIONS,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tzenModeExitInfo.handleNotificationsDoNotDisturbMode\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis.notificationService.setFilter(\n\t\t\t\t\t\t\t\tzenModeSilentNotifications\n\t\t\t\t\t\t\t\t\t? NotificationsFilter.ERROR\n\t\t\t\t\t\t\t\t\t: NotificationsFilter.OFF,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Center Layout\n\t\t\t\t\tif (\n\t\t\t\t\t\te.affectsConfiguration(ZenModeSettings.HIDE_LINENUMBERS)\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst lineNumbersType =\n\t\t\t\t\t\t\tthis.configurationService.getValue<boolean>(\n\t\t\t\t\t\t\t\tZenModeSettings.HIDE_LINENUMBERS,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t? \"off\"\n\t\t\t\t\t\t\t\t: undefined;\n\t\t\t\t\t\tsetLineNumbers(lineNumbersType);\n\t\t\t\t\t\tthis.state.runtime.zenMode.transitionDisposables.set(\n\t\t\t\t\t\t\tZenModeSettings.HIDE_LINENUMBERS,\n\t\t\t\t\t\t\tthis.mainPartEditorService.onDidVisibleEditorsChange(\n\t\t\t\t\t\t\t\t() => setLineNumbers(lineNumbersType),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\n\t\t// Zen Mode Inactive\n\t\telse {\n\t\t\tif (zenModeExitInfo.wasVisible.panel) {\n\t\t\t\tthis.setPanelHidden(false, true);\n\t\t\t}\n\n\t\t\tif (zenModeExitInfo.wasVisible.auxiliaryBar) {\n\t\t\t\tthis.setAuxiliaryBarHidden(false, true);\n\t\t\t}\n\n\t\t\tif (zenModeExitInfo.wasVisible.sideBar) {\n\t\t\t\tthis.setSideBarHidden(false, true);\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t!this.stateModel.getRuntimeValue(\n\t\t\t\t\tLayoutStateKeys.ACTIVITYBAR_HIDDEN,\n\t\t\t\t\ttrue,\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tthis.setActivityBarHidden(false, true);\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t!this.stateModel.getRuntimeValue(\n\t\t\t\t\tLayoutStateKeys.STATUSBAR_HIDDEN,\n\t\t\t\t\ttrue,\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tthis.setStatusBarHidden(false, true);\n\t\t\t}\n\n\t\t\tif (zenModeExitInfo.transitionedToCenteredEditorLayout) {\n\t\t\t\tthis.centerMainEditorLayout(false, true);\n\t\t\t}\n\n\t\t\tif (zenModeExitInfo.handleNotificationsDoNotDisturbMode) {\n\t\t\t\tthis.notificationService.setFilter(NotificationsFilter.OFF);\n\t\t\t}\n\n\t\t\tsetLineNumbers();\n\n\t\t\tthis.focus();\n\n\t\t\ttoggleMainWindowFullScreen =\n\t\t\t\tzenModeExitInfo.transitionedToFullScreen &&\n\t\t\t\tthis.state.runtime.mainWindowFullscreen;\n\t\t}\n\n\t\tif (!skipLayout) {\n\t\t\tthis.layout();\n\t\t}\n\n\t\tif (toggleMainWindowFullScreen) {\n\t\t\tthis.hostService.toggleFullScreen(mainWindow);\n\t\t}\n\n\t\t// Event\n\t\tthis._onDidChangeZenMode.fire(this.isZenModeActive());\n\t}\n\n\tprivate setStatusBarHidden(hidden: boolean, skipLayout?: boolean): void {\n\t\tthis.stateModel.setRuntimeValue(\n\t\t\tLayoutStateKeys.STATUSBAR_HIDDEN,\n\t\t\thidden,\n\t\t);\n\n\t\t// Adjust CSS\n\t\tif (hidden) {\n\t\t\tthis.mainContainer.classList.add(LayoutClasses.STATUSBAR_HIDDEN);\n\t\t} else {\n\t\t\tthis.mainContainer.classList.remove(LayoutClasses.STATUSBAR_HIDDEN);\n\t\t}\n\n\t\t// Propagate to grid\n\t\tthis.workbenchGrid.setViewVisible(this.statusBarPartView, !hidden);\n\t}\n\n\tprotected createWorkbenchLayout(): void {\n\t\tconst titleBar = this.getPart(Parts.TITLEBAR_PART);\n\t\tconst bannerPart = this.getPart(Parts.BANNER_PART);\n\t\tconst editorPart = this.getPart(Parts.EDITOR_PART);\n\t\tconst activityBar = this.getPart(Parts.ACTIVITYBAR_PART);\n\t\tconst panelPart = this.getPart(Parts.PANEL_PART);\n\t\tconst auxiliaryBarPart = this.getPart(Parts.AUXILIARYBAR_PART);\n\t\tconst sideBar = this.getPart(Parts.SIDEBAR_PART);\n\t\tconst statusBar = this.getPart(Parts.STATUSBAR_PART);\n\n\t\t// View references for all parts\n\t\tthis.titleBarPartView = titleBar;\n\t\tthis.bannerPartView = bannerPart;\n\t\tthis.sideBarPartView = sideBar;\n\t\tthis.activityBarPartView = activityBar;\n\t\tthis.editorPartView = editorPart;\n\t\tthis.panelPartView = panelPart;\n\t\tthis.auxiliaryBarPartView = auxiliaryBarPart;\n\t\tthis.statusBarPartView = statusBar;\n\n\t\tconst viewMap = {\n\t\t\t[Parts.ACTIVITYBAR_PART]: this.activityBarPartView,\n\t\t\t[Parts.BANNER_PART]: this.bannerPartView,\n\t\t\t[Parts.TITLEBAR_PART]: this.titleBarPartView,\n\t\t\t[Parts.EDITOR_PART]: this.editorPartView,\n\t\t\t[Parts.PANEL_PART]: this.panelPartView,\n\t\t\t[Parts.SIDEBAR_PART]: this.sideBarPartView,\n\t\t\t[Parts.STATUSBAR_PART]: this.statusBarPartView,\n\t\t\t[Parts.AUXILIARYBAR_PART]: this.auxiliaryBarPartView,\n\t\t};\n\n\t\tconst fromJSON = ({ type }: { type: Parts }) => viewMap[type];\n\t\tconst workbenchGrid = SerializableGrid.deserialize(\n\t\t\tthis.createGridDescriptor(),\n\t\t\t{ fromJSON },\n\t\t\t{ proportionalLayout: false },\n\t\t);\n\n\t\tthis.mainContainer.prepend(workbenchGrid.element);\n\t\tthis.mainContainer.setAttribute(\"role\", \"application\");\n\t\tthis.workbenchGrid = workbenchGrid;\n\t\tthis.workbenchGrid.edgeSnapping =\n\t\t\tthis.state.runtime.mainWindowFullscreen;\n\n\t\tfor (const part of [\n\t\t\ttitleBar,\n\t\t\teditorPart,\n\t\t\tactivityBar,\n\t\t\tpanelPart,\n\t\t\tsideBar,\n\t\t\tstatusBar,\n\t\t\tauxiliaryBarPart,\n\t\t\tbannerPart,\n\t\t]) {\n\t\t\tthis._register(\n\t\t\t\tpart.onDidVisibilityChange((visible) => {\n\t\t\t\t\tif (part === sideBar) {\n\t\t\t\t\t\tthis.setSideBarHidden(!visible, true);\n\t\t\t\t\t} else if (part === panelPart) {\n\t\t\t\t\t\tthis.setPanelHidden(!visible, true);\n\t\t\t\t\t} else if (part === auxiliaryBarPart) {\n\t\t\t\t\t\tthis.setAuxiliaryBarHidden(!visible, true);\n\t\t\t\t\t} else if (part === editorPart) {\n\t\t\t\t\t\tthis.setEditorHidden(!visible, true);\n\t\t\t\t\t}\n\t\t\t\t\tthis._onDidChangePartVisibility.fire();\n\t\t\t\t\tthis.handleContainerDidLayout(\n\t\t\t\t\t\tthis.mainContainer,\n\t\t\t\t\t\tthis._mainContainerDimension,\n\t\t\t\t\t);\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\n\t\tthis._register(\n\t\t\tthis.storageService.onWillSaveState((e) => {\n\t\t\t\t// Side Bar Size\n\t\t\t\tconst sideBarSize = this.stateModel.getRuntimeValue(\n\t\t\t\t\tLayoutStateKeys.SIDEBAR_HIDDEN,\n\t\t\t\t)\n\t\t\t\t\t? this.workbenchGrid.getViewCachedVisibleSize(\n\t\t\t\t\t\t\tthis.sideBarPartView,\n\t\t\t\t\t\t)\n\t\t\t\t\t: this.workbenchGrid.getViewSize(this.sideBarPartView)\n\t\t\t\t\t\t\t.width;\n\t\t\t\tthis.stateModel.setInitializationValue(\n\t\t\t\t\tLayoutStateKeys.SIDEBAR_SIZE,\n\t\t\t\t\tsideBarSize as number,\n\t\t\t\t);\n\n\t\t\t\t// Panel Size\n\t\t\t\tconst panelSize = this.stateModel.getRuntimeValue(\n\t\t\t\t\tLayoutStateKeys.PANEL_HIDDEN,\n\t\t\t\t)\n\t\t\t\t\t? this.workbenchGrid.getViewCachedVisibleSize(\n\t\t\t\t\t\t\tthis.panelPartView,\n\t\t\t\t\t\t)\n\t\t\t\t\t: isHorizontal(\n\t\t\t\t\t\t\t\tthis.stateModel.getRuntimeValue(\n\t\t\t\t\t\t\t\t\tLayoutStateKeys.PANEL_POSITION,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t? this.workbenchGrid.getViewSize(this.panelPartView)\n\t\t\t\t\t\t\t\t.height\n\t\t\t\t\t\t: this.workbenchGrid.getViewSize(this.panelPartView)\n\t\t\t\t\t\t\t\t.width;\n\t\t\t\tthis.stateModel.setInitializationValue(\n\t\t\t\t\tLayoutStateKeys.PANEL_SIZE,\n\t\t\t\t\tpanelSize as number,\n\t\t\t\t);\n\n\t\t\t\t// Auxiliary Bar Size\n\t\t\t\tconst auxiliaryBarSize = this.stateModel.getRuntimeValue(\n\t\t\t\t\tLayoutStateKeys.AUXILIARYBAR_HIDDEN,\n\t\t\t\t)\n\t\t\t\t\t? this.workbenchGrid.getViewCachedVisibleSize(\n\t\t\t\t\t\t\tthis.auxiliaryBarPartView,\n\t\t\t\t\t\t)\n\t\t\t\t\t: this.workbenchGrid.getViewSize(this.auxiliaryBarPartView)\n\t\t\t\t\t\t\t.width;\n\t\t\t\tthis.stateModel.setInitializationValue(\n\t\t\t\t\tLayoutStateKeys.AUXILIARYBAR_SIZE,\n\t\t\t\t\tauxiliaryBarSize as number,\n\t\t\t\t);\n\n\t\t\t\tthis.stateModel.save(true, true);\n\t\t\t}),\n\t\t);\n\t}\n\n\tlayout(): void {\n\t\tif (!this.disposed) {\n\t\t\tthis._mainContainerDimension = getClientArea(\n\t\t\t\tthis.state.runtime.mainWindowFullscreen\n\t\t\t\t\t? mainWindow.document.body\n\t\t\t\t\t: // in fullscreen mode, make sure to use <body> element because\n\t\t\t\t\t\tthis.parent, // in that case the workbench will span the entire site\n\t\t\t);\n\t\t\tthis.logService.trace(\n\t\t\t\t`Layout#layout, height: ${this._mainContainerDimension.height}, width: ${this._mainContainerDimension.width}`,\n\t\t\t);\n\n\t\t\tposition(this.mainContainer, 0, 0, 0, 0, \"relative\");\n\t\t\tsize(\n\t\t\t\tthis.mainContainer,\n\t\t\t\tthis._mainContainerDimension.width,\n\t\t\t\tthis._mainContainerDimension.height,\n\t\t\t);\n\n\t\t\t// Layout the grid widget\n\t\t\tthis.workbenchGrid.layout(\n\t\t\t\tthis._mainContainerDimension.width,\n\t\t\t\tthis._mainContainerDimension.height,\n\t\t\t);\n\t\t\tthis.initialized = true;\n\n\t\t\t// Emit as event\n\t\t\tthis.handleContainerDidLayout(\n\t\t\t\tthis.mainContainer,\n\t\t\t\tthis._mainContainerDimension,\n\t\t\t);\n\t\t}\n\t}\n\n\tisMainEditorLayoutCentered(): boolean {\n\t\treturn this.stateModel.getRuntimeValue(\n\t\t\tLayoutStateKeys.MAIN_EDITOR_CENTERED,\n\t\t);\n\t}\n\n\tcenterMainEditorLayout(active: boolean, skipLayout?: boolean): void {\n\t\tthis.stateModel.setRuntimeValue(\n\t\t\tLayoutStateKeys.MAIN_EDITOR_CENTERED,\n\t\t\tactive,\n\t\t);\n\n\t\tconst activeMainEditor = this.mainPartEditorService.activeEditor;\n\n\t\tlet isEditorComplex = false;\n\t\tif (activeMainEditor instanceof DiffEditorInput) {\n\t\t\tisEditorComplex = this.configurationService.getValue(\n\t\t\t\t\"diffEditor.renderSideBySide\",\n\t\t\t);\n\t\t} else if (\n\t\t\tactiveMainEditor?.hasCapability(\n\t\t\t\tEditorInputCapabilities.MultipleEditors,\n\t\t\t)\n\t\t) {\n\t\t\tisEditorComplex = true;\n\t\t}\n\n\t\tconst isCenteredLayoutAutoResizing = this.configurationService.getValue(\n\t\t\t\"workbench.editor.centeredLayoutAutoResize\",\n\t\t);\n\t\tif (\n\t\t\tisCenteredLayoutAutoResizing &&\n\t\t\t((this.editorGroupService.mainPart.groups.length > 1 &&\n\t\t\t\t!this.editorGroupService.mainPart.hasMaximizedGroup()) ||\n\t\t\t\tisEditorComplex)\n\t\t) {\n\t\t\tactive = false; // disable centered layout for complex editors or when there is more than one group\n\t\t}\n\n\t\tif (this.editorGroupService.mainPart.isLayoutCentered() !== active) {\n\t\t\tthis.editorGroupService.mainPart.centerLayout(active);\n\n\t\t\tif (!skipLayout) {\n\t\t\t\tthis.layout();\n\t\t\t}\n\t\t}\n\n\t\tthis._onDidChangeMainEditorCenteredLayout.fire(\n\t\t\tthis.stateModel.getRuntimeValue(\n\t\t\t\tLayoutStateKeys.MAIN_EDITOR_CENTERED,\n\t\t\t),\n\t\t);\n\t}\n\n\tresizePart(\n\t\tpart: Parts,\n\t\tsizeChangeWidth: number,\n\t\tsizeChangeHeight: number,\n\t): void {\n\t\tconst sizeChangePxWidth =\n\t\t\tMath.sign(sizeChangeWidth) *\n\t\t\tcomputeScreenAwareSize(\n\t\t\t\tgetActiveWindow(),\n\t\t\t\tMath.abs(sizeChangeWidth),\n\t\t\t);\n\t\tconst sizeChangePxHeight =\n\t\t\tMath.sign(sizeChangeHeight) *\n\t\t\tcomputeScreenAwareSize(\n\t\t\t\tgetActiveWindow(),\n\t\t\t\tMath.abs(sizeChangeHeight),\n\t\t\t);\n\n\t\tlet viewSize: IViewSize;\n\n\t\tswitch (part) {\n\t\t\tcase Parts.SIDEBAR_PART:\n\t\t\t\tviewSize = this.workbenchGrid.getViewSize(this.sideBarPartView);\n\t\t\t\tthis.workbenchGrid.resizeView(this.sideBarPartView, {\n\t\t\t\t\twidth: viewSize.width + sizeChangePxWidth,\n\t\t\t\t\theight: viewSize.height,\n\t\t\t\t});\n\n\t\t\t\tbreak;\n\t\t\tcase Parts.PANEL_PART:\n\t\t\t\tviewSize = this.workbenchGrid.getViewSize(this.panelPartView);\n\n\t\t\t\tthis.workbenchGrid.resizeView(this.panelPartView, {\n\t\t\t\t\twidth:\n\t\t\t\t\t\tviewSize.width +\n\t\t\t\t\t\t(isHorizontal(this.getPanelPosition())\n\t\t\t\t\t\t\t? 0\n\t\t\t\t\t\t\t: sizeChangePxWidth),\n\t\t\t\t\theight:\n\t\t\t\t\t\tviewSize.height +\n\t\t\t\t\t\t(isHorizontal(this.getPanelPosition())\n\t\t\t\t\t\t\t? sizeChangePxHeight\n\t\t\t\t\t\t\t: 0),\n\t\t\t\t});\n\n\t\t\t\tbreak;\n\t\t\tcase Parts.AUXILIARYBAR_PART:\n\t\t\t\tviewSize = this.workbenchGrid.getViewSize(\n\t\t\t\t\tthis.auxiliaryBarPartView,\n\t\t\t\t);\n\t\t\t\tthis.workbenchGrid.resizeView(this.auxiliaryBarPartView, {\n\t\t\t\t\twidth: viewSize.width + sizeChangePxWidth,\n\t\t\t\t\theight: viewSize.height,\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase Parts.EDITOR_PART:\n\t\t\t\tviewSize = this.workbenchGrid.getViewSize(this.editorPartView);\n\n\t\t\t\t// Single Editor Group\n\t\t\t\tif (this.editorGroupService.mainPart.count === 1) {\n\t\t\t\t\tthis.workbenchGrid.resizeView(this.editorPartView, {\n\t\t\t\t\t\twidth: viewSize.width + sizeChangePxWidth,\n\t\t\t\t\t\theight: viewSize.height + sizeChangePxHeight,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconst activeGroup =\n\t\t\t\t\t\tthis.editorGroupService.mainPart.activeGroup;\n\n\t\t\t\t\tconst { width, height } =\n\t\t\t\t\t\tthis.editorGroupService.mainPart.getSize(activeGroup);\n\t\t\t\t\tthis.editorGroupService.mainPart.setSize(activeGroup, {\n\t\t\t\t\t\twidth: width + sizeChangePxWidth,\n\t\t\t\t\t\theight: height + sizeChangePxHeight,\n\t\t\t\t\t});\n\n\t\t\t\t\t// After resizing the editor group\n\t\t\t\t\t// if it does not change in either direction\n\t\t\t\t\t// try resizing the full editor part\n\t\t\t\t\tconst { width: newWidth, height: newHeight } =\n\t\t\t\t\t\tthis.editorGroupService.mainPart.getSize(activeGroup);\n\t\t\t\t\tif (\n\t\t\t\t\t\t(sizeChangePxHeight && height === newHeight) ||\n\t\t\t\t\t\t(sizeChangePxWidth && width === newWidth)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.workbenchGrid.resizeView(this.editorPartView, {\n\t\t\t\t\t\t\twidth:\n\t\t\t\t\t\t\t\tviewSize.width +\n\t\t\t\t\t\t\t\t(sizeChangePxWidth && width === newWidth\n\t\t\t\t\t\t\t\t\t? sizeChangePxWidth\n\t\t\t\t\t\t\t\t\t: 0),\n\t\t\t\t\t\t\theight:\n\t\t\t\t\t\t\t\tviewSize.height +\n\t\t\t\t\t\t\t\t(sizeChangePxHeight && height === newHeight\n\t\t\t\t\t\t\t\t\t? sizeChangePxHeight\n\t\t\t\t\t\t\t\t\t: 0),\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn; // Cannot resize other parts\n\t\t}\n\t}\n\n\tprivate setActivityBarHidden(hidden: boolean, skipLayout?: boolean): void {\n\t\tthis.stateModel.setRuntimeValue(\n\t\t\tLayoutStateKeys.ACTIVITYBAR_HIDDEN,\n\t\t\thidden,\n\t\t);\n\t\tthis.workbenchGrid.setViewVisible(this.activityBarPartView, !hidden);\n\t}\n\n\tprivate setBannerHidden(hidden: boolean): void {\n\t\tthis.workbenchGrid.setViewVisible(this.bannerPartView, !hidden);\n\t}\n\n\tprivate setEditorHidden(hidden: boolean, skipLayout?: boolean): void {\n\t\tthis.stateModel.setRuntimeValue(LayoutStateKeys.EDITOR_HIDDEN, hidden);\n\n\t\t// Adjust CSS\n\t\tif (hidden) {\n\t\t\tthis.mainContainer.classList.add(\n\t\t\t\tLayoutClasses.MAIN_EDITOR_AREA_HIDDEN,\n\t\t\t);\n\t\t} else {\n\t\t\tthis.mainContainer.classList.remove(\n\t\t\t\tLayoutClasses.MAIN_EDITOR_AREA_HIDDEN,\n\t\t\t);\n\t\t}\n\n\t\t// Propagate to grid\n\t\tthis.workbenchGrid.setViewVisible(this.editorPartView, !hidden);\n\n\t\t// The editor and panel cannot be hidden at the same time\n\t\tif (hidden && !this.isVisible(Parts.PANEL_PART)) {\n\t\t\tthis.setPanelHidden(false, true);\n\t\t}\n\t}\n\n\tgetLayoutClasses(): string[] {\n\t\treturn coalesce([\n\t\t\tthis.isVisible(Parts.SIDEBAR_PART)\n\t\t\t\t? undefined\n\t\t\t\t: LayoutClasses.SIDEBAR_HIDDEN,\n\t\t\tthis.isVisible(Parts.EDITOR_PART, mainWindow)\n\t\t\t\t? undefined\n\t\t\t\t: LayoutClasses.MAIN_EDITOR_AREA_HIDDEN,\n\t\t\tthis.isVisible(Parts.PANEL_PART)\n\t\t\t\t? undefined\n\t\t\t\t: LayoutClasses.PANEL_HIDDEN,\n\t\t\tthis.isVisible(Parts.AUXILIARYBAR_PART)\n\t\t\t\t? undefined\n\t\t\t\t: LayoutClasses.AUXILIARYBAR_HIDDEN,\n\t\t\tthis.isVisible(Parts.STATUSBAR_PART)\n\t\t\t\t? undefined\n\t\t\t\t: LayoutClasses.STATUSBAR_HIDDEN,\n\t\t\tthis.state.runtime.mainWindowFullscreen\n\t\t\t\t? LayoutClasses.FULLSCREEN\n\t\t\t\t: undefined,\n\t\t]);\n\t}\n\n\tprivate setSideBarHidden(hidden: boolean, skipLayout?: boolean): void {\n\t\tthis.stateModel.setRuntimeValue(LayoutStateKeys.SIDEBAR_HIDDEN, hidden);\n\n\t\t// Adjust CSS\n\t\tif (hidden) {\n\t\t\tthis.mainContainer.classList.add(LayoutClasses.SIDEBAR_HIDDEN);\n\t\t} else {\n\t\t\tthis.mainContainer.classList.remove(LayoutClasses.SIDEBAR_HIDDEN);\n\t\t}\n\n\t\t// If sidebar becomes hidden, also hide the current active Viewlet if any\n\t\tif (\n\t\t\thidden &&\n\t\t\tthis.paneCompositeService.getActivePaneComposite(\n\t\t\t\tViewContainerLocation.Sidebar,\n\t\t\t)\n\t\t) {\n\t\t\tthis.paneCompositeService.hideActivePaneComposite(\n\t\t\t\tViewContainerLocation.Sidebar,\n\t\t\t);\n\t\t\tthis.focusPanelOrEditor();\n\t\t}\n\n\t\t// If sidebar becomes visible, show last active Viewlet or default viewlet\n\t\telse if (\n\t\t\t!hidden &&\n\t\t\t!this.paneCompositeService.getActivePaneComposite(\n\t\t\t\tViewContainerLocation.Sidebar,\n\t\t\t)\n\t\t) {\n\t\t\tconst viewletToOpen =\n\t\t\t\tthis.paneCompositeService.getLastActivePaneCompositeId(\n\t\t\t\t\tViewContainerLocation.Sidebar,\n\t\t\t\t);\n\t\t\tif (viewletToOpen) {\n\t\t\t\tconst viewlet = this.paneCompositeService.openPaneComposite(\n\t\t\t\t\tviewletToOpen,\n\t\t\t\t\tViewContainerLocation.Sidebar,\n\t\t\t\t\ttrue,\n\t\t\t\t);\n\t\t\t\tif (!viewlet) {\n\t\t\t\t\tthis.paneCompositeService.openPaneComposite(\n\t\t\t\t\t\tthis.viewDescriptorService.getDefaultViewContainer(\n\t\t\t\t\t\t\tViewContainerLocation.Sidebar,\n\t\t\t\t\t\t)?.id,\n\t\t\t\t\t\tViewContainerLocation.Sidebar,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Propagate to grid\n\t\tthis.workbenchGrid.setViewVisible(this.sideBarPartView, !hidden);\n\t}\n\n\tprivate hasViews(id: string): boolean {\n\t\tconst viewContainer =\n\t\t\tthis.viewDescriptorService.getViewContainerById(id);\n\t\tif (!viewContainer) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst viewContainerModel =\n\t\t\tthis.viewDescriptorService.getViewContainerModel(viewContainer);\n\t\tif (!viewContainerModel) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn viewContainerModel.activeViewDescriptors.length >= 1;\n\t}\n\n\tprivate adjustPartPositions(\n\t\tsideBarPosition: Position,\n\t\tpanelAlignment: PanelAlignment,\n\t\tpanelPosition: Position,\n\t): void {\n\t\t// Move activity bar and side bars\n\t\tconst isPanelVertical = !isHorizontal(panelPosition);\n\t\tconst sideBarSiblingToEditor =\n\t\t\tisPanelVertical ||\n\t\t\t!(\n\t\t\t\tpanelAlignment === \"center\" ||\n\t\t\t\t(sideBarPosition === Position.LEFT &&\n\t\t\t\t\tpanelAlignment === \"right\") ||\n\t\t\t\t(sideBarPosition === Position.RIGHT &&\n\t\t\t\t\tpanelAlignment === \"left\")\n\t\t\t);\n\t\tconst auxiliaryBarSiblingToEditor =\n\t\t\tisPanelVertical ||\n\t\t\t!(\n\t\t\t\tpanelAlignment === \"center\" ||\n\t\t\t\t(sideBarPosition === Position.RIGHT &&\n\t\t\t\t\tpanelAlignment === \"right\") ||\n\t\t\t\t(sideBarPosition === Position.LEFT && panelAlignment === \"left\")\n\t\t\t);\n\t\tconst preMovePanelWidth = this.isVisible(Parts.PANEL_PART)\n\t\t\t? this.workbenchGrid.getViewSize(this.panelPartView).width\n\t\t\t: Sizing.Invisible(\n\t\t\t\t\tthis.workbenchGrid.getViewCachedVisibleSize(\n\t\t\t\t\t\tthis.panelPartView,\n\t\t\t\t\t) ?? this.panelPartView.minimumWidth,\n\t\t\t\t);\n\t\tconst preMovePanelHeight = this.isVisible(Parts.PANEL_PART)\n\t\t\t? this.workbenchGrid.getViewSize(this.panelPartView).height\n\t\t\t: Sizing.Invisible(\n\t\t\t\t\tthis.workbenchGrid.getViewCachedVisibleSize(\n\t\t\t\t\t\tthis.panelPartView,\n\t\t\t\t\t) ?? this.panelPartView.minimumHeight,\n\t\t\t\t);\n\t\tconst preMoveSideBarSize = this.isVisible(Parts.SIDEBAR_PART)\n\t\t\t? this.workbenchGrid.getViewSize(this.sideBarPartView).width\n\t\t\t: Sizing.Invisible(\n\t\t\t\t\tthis.workbenchGrid.getViewCachedVisibleSize(\n\t\t\t\t\t\tthis.sideBarPartView,\n\t\t\t\t\t) ?? this.sideBarPartView.minimumWidth,\n\t\t\t\t);\n\t\tconst preMoveAuxiliaryBarSize = this.isVisible(Parts.AUXILIARYBAR_PART)\n\t\t\t? this.workbenchGrid.getViewSize(this.auxiliaryBarPartView).width\n\t\t\t: Sizing.Invisible(\n\t\t\t\t\tthis.workbenchGrid.getViewCachedVisibleSize(\n\t\t\t\t\t\tthis.auxiliaryBarPartView,\n\t\t\t\t\t) ?? this.auxiliaryBarPartView.minimumWidth,\n\t\t\t\t);\n\n\t\tif (sideBarPosition === Position.LEFT) {\n\t\t\tthis.workbenchGrid.moveViewTo(this.activityBarPartView, [2, 0]);\n\t\t\tthis.workbenchGrid.moveView(\n\t\t\t\tthis.sideBarPartView,\n\t\t\t\tpreMoveSideBarSize,\n\t\t\t\tsideBarSiblingToEditor\n\t\t\t\t\t? this.editorPartView\n\t\t\t\t\t: this.activityBarPartView,\n\t\t\t\tsideBarSiblingToEditor ? Direction.Left : Direction.Right,\n\t\t\t);\n\t\t\tif (auxiliaryBarSiblingToEditor) {\n\t\t\t\tthis.workbenchGrid.moveView(\n\t\t\t\t\tthis.auxiliaryBarPartView,\n\t\t\t\t\tpreMoveAuxiliaryBarSize,\n\t\t\t\t\tthis.editorPartView,\n\t\t\t\t\tDirection.Right,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.workbenchGrid.moveViewTo(\n\t\t\t\t\tthis.auxiliaryBarPartView,\n\t\t\t\t\t[2, -1],\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.workbenchGrid.moveViewTo(this.activityBarPartView, [2, -1]);\n\t\t\tthis.workbenchGrid.moveView(\n\t\t\t\tthis.sideBarPartView,\n\t\t\t\tpreMoveSideBarSize,\n\t\t\t\tsideBarSiblingToEditor\n\t\t\t\t\t? this.editorPartView\n\t\t\t\t\t: this.activityBarPartView,\n\t\t\t\tsideBarSiblingToEditor ? Direction.Right : Direction.Left,\n\t\t\t);\n\t\t\tif (auxiliaryBarSiblingToEditor) {\n\t\t\t\tthis.workbenchGrid.moveView(\n\t\t\t\t\tthis.auxiliaryBarPartView,\n\t\t\t\t\tpreMoveAuxiliaryBarSize,\n\t\t\t\t\tthis.editorPartView,\n\t\t\t\t\tDirection.Left,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.workbenchGrid.moveViewTo(\n\t\t\t\t\tthis.auxiliaryBarPartView,\n\t\t\t\t\t[2, 0],\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// We moved all the side parts based on the editor and ignored the panel\n\t\t// Now, we need to put the panel back in the right position when it is next to the editor\n\t\tif (isPanelVertical) {\n\t\t\tthis.workbenchGrid.moveView(\n\t\t\t\tthis.panelPartView,\n\t\t\t\tpreMovePanelWidth,\n\t\t\t\tthis.editorPartView,\n\t\t\t\tpanelPosition === Position.LEFT\n\t\t\t\t\t? Direction.Left\n\t\t\t\t\t: Direction.Right,\n\t\t\t);\n\t\t\tthis.workbenchGrid.resizeView(this.panelPartView, {\n\t\t\t\theight: preMovePanelHeight as number,\n\t\t\t\twidth: preMovePanelWidth as number,\n\t\t\t});\n\t\t}\n\n\t\t// Moving views in the grid can cause them to re-distribute sizing unnecessarily\n\t\t// Resize visible parts to the width they were before the operation\n\t\tif (this.isVisible(Parts.SIDEBAR_PART)) {\n\t\t\tthis.workbenchGrid.resizeView(this.sideBarPartView, {\n\t\t\t\theight: this.workbenchGrid.getViewSize(this.sideBarPartView)\n\t\t\t\t\t.height,\n\t\t\t\twidth: preMoveSideBarSize as number,\n\t\t\t});\n\t\t}\n\n\t\tif (this.isVisible(Parts.AUXILIARYBAR_PART)) {\n\t\t\tthis.workbenchGrid.resizeView(this.auxiliaryBarPartView, {\n\t\t\t\theight: this.workbenchGrid.getViewSize(\n\t\t\t\t\tthis.auxiliaryBarPartView,\n\t\t\t\t).height,\n\t\t\t\twidth: preMoveAuxiliaryBarSize as number,\n\t\t\t});\n\t\t}\n\t}\n\n\tsetPanelAlignment(alignment: PanelAlignment, skipLayout?: boolean): void {\n\t\t// Panel alignment only applies to a panel in the top/bottom position\n\t\tif (!isHorizontal(this.getPanelPosition())) {\n\t\t\tthis.setPanelPosition(Position.BOTTOM);\n\t\t}\n\n\t\t// the workbench grid currently prevents us from supporting panel maximization with non-center panel alignment\n\t\tif (alignment !== \"center\" && this.isPanelMaximized()) {\n\t\t\tthis.toggleMaximizedPanel();\n\t\t}\n\n\t\tthis.stateModel.setRuntimeValue(\n\t\t\tLayoutStateKeys.PANEL_ALIGNMENT,\n\t\t\talignment,\n\t\t);\n\n\t\tthis.adjustPartPositions(\n\t\t\tthis.getSideBarPosition(),\n\t\t\talignment,\n\t\t\tthis.getPanelPosition(),\n\t\t);\n\n\t\tthis._onDidChangePanelAlignment.fire(alignment);\n\t}\n\n\tprivate setPanelHidden(hidden: boolean, skipLayout?: boolean): void {\n\t\t// Return if not initialized fully #105480\n\t\tif (!this.workbenchGrid) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst wasHidden = !this.isVisible(Parts.PANEL_PART);\n\n\t\tthis.stateModel.setRuntimeValue(LayoutStateKeys.PANEL_HIDDEN, hidden);\n\n\t\tconst isPanelMaximized = this.isPanelMaximized();\n\t\tconst panelOpensMaximized = this.panelOpensMaximized();\n\n\t\t// Adjust CSS\n\t\tif (hidden) {\n\t\t\tthis.mainContainer.classList.add(LayoutClasses.PANEL_HIDDEN);\n\t\t} else {\n\t\t\tthis.mainContainer.classList.remove(LayoutClasses.PANEL_HIDDEN);\n\t\t}\n\n\t\t// If panel part becomes hidden, also hide the current active panel if any\n\t\tlet focusEditor = false;\n\t\tif (\n\t\t\thidden &&\n\t\t\tthis.paneCompositeService.getActivePaneComposite(\n\t\t\t\tViewContainerLocation.Panel,\n\t\t\t)\n\t\t) {\n\t\t\tthis.paneCompositeService.hideActivePaneComposite(\n\t\t\t\tViewContainerLocation.Panel,\n\t\t\t);\n\t\t\tfocusEditor = isIOS ? false : true; // Do not auto focus on ios #127832\n\t\t}\n\n\t\t// If panel part becomes visible, show last active panel or default panel\n\t\telse if (\n\t\t\t!hidden &&\n\t\t\t!this.paneCompositeService.getActivePaneComposite(\n\t\t\t\tViewContainerLocation.Panel,\n\t\t\t)\n\t\t) {\n\t\t\tlet panelToOpen: string | undefined =\n\t\t\t\tthis.paneCompositeService.getLastActivePaneCompositeId(\n\t\t\t\t\tViewContainerLocation.Panel,\n\t\t\t\t);\n\n\t\t\t// verify that the panel we try to open has views before we default to it\n\t\t\t// otherwise fall back to any view that has views still refs #111463\n\t\t\tif (!panelToOpen || !this.hasViews(panelToOpen)) {\n\t\t\t\tpanelToOpen = this.viewDescriptorService\n\t\t\t\t\t.getViewContainersByLocation(ViewContainerLocation.Panel)\n\t\t\t\t\t.find((viewContainer) =>\n\t\t\t\t\t\tthis.hasViews(viewContainer.id),\n\t\t\t\t\t)?.id;\n\t\t\t}\n\n\t\t\tif (panelToOpen) {\n\t\t\t\tconst focus = !skipLayout;\n\t\t\t\tthis.paneCompositeService.openPaneComposite(\n\t\t\t\t\tpanelToOpen,\n\t\t\t\t\tViewContainerLocation.Panel,\n\t\t\t\t\tfocus,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// If maximized and in process of hiding, unmaximize before hiding to allow caching of non-maximized size\n\t\tif (hidden && isPanelMaximized) {\n\t\t\tthis.toggleMaximizedPanel();\n\t\t}\n\n\t\t// Don't proceed if we have already done this before\n\t\tif (wasHidden === hidden) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Propagate layout changes to grid\n\t\tthis.workbenchGrid.setViewVisible(this.panelPartView, !hidden);\n\n\t\t// If in process of showing, toggle whether or not panel is maximized\n\t\tif (hidden) {\n\t\t\t// If in process of hiding, remember whether the panel is maximized or not\n\t\t\tthis.stateModel.setRuntimeValue(\n\t\t\t\tLayoutStateKeys.PANEL_WAS_LAST_MAXIMIZED,\n\t\t\t\tisPanelMaximized,\n\t\t\t);\n\t\t} else if (!skipLayout && isPanelMaximized !== panelOpensMaximized) {\n\t\t\tthis.toggleMaximizedPanel();\n\t\t}\n\n\t\tif (focusEditor) {\n\t\t\tthis.editorGroupService.mainPart.activeGroup.focus(); // Pass focus to editor group if panel part is now hidden\n\t\t}\n\t}\n\n\ttoggleMaximizedPanel(): void {\n\t\tconst size = this.workbenchGrid.getViewSize(this.panelPartView);\n\t\tconst panelPosition = this.getPanelPosition();\n\t\tconst isMaximized = this.isPanelMaximized();\n\t\tif (isMaximized) {\n\t\t\tthis.setEditorHidden(false);\n\t\t\tthis.workbenchGrid.resizeView(this.panelPartView, {\n\t\t\t\twidth: isHorizontal(panelPosition)\n\t\t\t\t\t? size.width\n\t\t\t\t\t: this.stateModel.getRuntimeValue(\n\t\t\t\t\t\t\tLayoutStateKeys.PANEL_LAST_NON_MAXIMIZED_WIDTH,\n\t\t\t\t\t\t),\n\t\t\t\theight: isHorizontal(panelPosition)\n\t\t\t\t\t? this.stateModel.getRuntimeValue(\n\t\t\t\t\t\t\tLayoutStateKeys.PANEL_LAST_NON_MAXIMIZED_HEIGHT,\n\t\t\t\t\t\t)\n\t\t\t\t\t: size.height,\n\t\t\t});\n\t\t} else {\n\t\t\tif (this.isVisible(Parts.PANEL_PART)) {\n\t\t\t\tif (isHorizontal(panelPosition)) {\n\t\t\t\t\tthis.stateModel.setRuntimeValue(\n\t\t\t\t\t\tLayoutStateKeys.PANEL_LAST_NON_MAXIMIZED_HEIGHT,\n\t\t\t\t\t\tsize.height,\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tthis.stateModel.setRuntimeValue(\n\t\t\t\t\t\tLayoutStateKeys.PANEL_LAST_NON_MAXIMIZED_WIDTH,\n\t\t\t\t\t\tsize.width,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.setEditorHidden(true);\n\t\t}\n\n\t\tthis.stateModel.setRuntimeValue(\n\t\t\tLayoutStateKeys.PANEL_WAS_LAST_MAXIMIZED,\n\t\t\t!isMaximized,\n\t\t);\n\t}\n\n\tprivate panelOpensMaximized(): boolean {\n\t\t// The workbench grid currently prevents us from supporting panel maximization with non-center panel alignment\n\t\tif (\n\t\t\tthis.getPanelAlignment() !== \"center\" &&\n\t\t\tisHorizontal(this.getPanelPosition())\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst panelOpensMaximized = panelOpensMaximizedFromString(\n\t\t\tthis.configurationService.getValue<string>(\n\t\t\t\tWorkbenchLayoutSettings.PANEL_OPENS_MAXIMIZED,\n\t\t\t),\n\t\t);\n\t\tconst panelLastIsMaximized = this.stateModel.getRuntimeValue(\n\t\t\tLayoutStateKeys.PANEL_WAS_LAST_MAXIMIZED,\n\t\t);\n\n\t\treturn (\n\t\t\tpanelOpensMaximized === PanelOpensMaximizedOptions.ALWAYS ||\n\t\t\t(panelOpensMaximized === PanelOpensMaximizedOptions.REMEMBER_LAST &&\n\t\t\t\tpanelLastIsMaximized)\n\t\t);\n\t}\n\n\tprivate setAuxiliaryBarHidden(hidden: boolean, skipLayout?: boolean): void {\n\t\tthis.stateModel.setRuntimeValue(\n\t\t\tLayoutStateKeys.AUXILIARYBAR_HIDDEN,\n\t\t\thidden,\n\t\t);\n\n\t\t// Adjust CSS\n\t\tif (hidden) {\n\t\t\tthis.mainContainer.classList.add(LayoutClasses.AUXILIARYBAR_HIDDEN);\n\t\t} else {\n\t\t\tthis.mainContainer.classList.remove(\n\t\t\t\tLayoutClasses.AUXILIARYBAR_HIDDEN,\n\t\t\t);\n\t\t}\n\n\t\t// If auxiliary bar becomes hidden, also hide the current active pane composite if any\n\t\tif (\n\t\t\thidden &&\n\t\t\tthis.paneCompositeService.getActivePaneComposite(\n\t\t\t\tViewContainerLocation.AuxiliaryBar,\n\t\t\t)\n\t\t) {\n\t\t\tthis.paneCompositeService.hideActivePaneComposite(\n\t\t\t\tViewContainerLocation.AuxiliaryBar,\n\t\t\t);\n\t\t\tthis.focusPanelOrEditor();\n\t\t}\n\n\t\t// If auxiliary bar becomes visible, show last active pane composite or default pane composite\n\t\telse if (\n\t\t\t!hidden &&\n\t\t\t!this.paneCompositeService.getActivePaneComposite(\n\t\t\t\tViewContainerLocation.AuxiliaryBar,\n\t\t\t)\n\t\t) {\n\t\t\tlet panelToOpen: string | undefined =\n\t\t\t\tthis.paneCompositeService.getLastActivePaneCompositeId(\n\t\t\t\t\tViewContainerLocation.AuxiliaryBar,\n\t\t\t\t);\n\n\t\t\t// verify that the panel we try to open has views before we default to it\n\t\t\t// otherwise fall back to any view that has views still refs #111463\n\t\t\tif (!panelToOpen || !this.hasViews(panelToOpen)) {\n\t\t\t\tpanelToOpen = this.viewDescriptorService\n\t\t\t\t\t.getViewContainersByLocation(\n\t\t\t\t\t\tViewContainerLocation.AuxiliaryBar,\n\t\t\t\t\t)\n\t\t\t\t\t.find((viewContainer) =>\n\t\t\t\t\t\tthis.hasViews(viewContainer.id),\n\t\t\t\t\t)?.id;\n\t\t\t}\n\n\t\t\tif (panelToOpen) {\n\t\t\t\tconst focus = !skipLayout;\n\t\t\t\tthis.paneCompositeService.openPaneComposite(\n\t\t\t\t\tpanelToOpen,\n\t\t\t\t\tViewContainerLocation.AuxiliaryBar,\n\t\t\t\t\tfocus,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// Propagate to grid\n\t\tthis.workbenchGrid.setViewVisible(this.auxiliaryBarPartView, !hidden);\n\t}\n\n\tsetPartHidden(\n\t\thidden: boolean,\n\t\tpart: Exclude<\n\t\t\tSINGLE_WINDOW_PARTS,\n\t\t\tParts.STATUSBAR_PART | Parts.TITLEBAR_PART\n\t\t>,\n\t): void;\n\tsetPartHidden(\n\t\thidden: boolean,\n\t\tpart: Exclude<\n\t\t\tMULTI_WINDOW_PARTS,\n\t\t\tParts.STATUSBAR_PART | Parts.TITLEBAR_PART\n\t\t>,\n\t\ttargetWindow: Window,\n\t): void;\n\tsetPartHidden(\n\t\thidden: boolean,\n\t\tpart: Parts,\n\t\ttargetWindow: Window = mainWindow,\n\t): void {\n\t\tswitch (part) {\n\t\t\tcase Parts.ACTIVITYBAR_PART:\n\t\t\t\treturn this.setActivityBarHidden(hidden);\n\t\t\tcase Parts.SIDEBAR_PART:\n\t\t\t\treturn this.setSideBarHidden(hidden);\n\t\t\tcase Parts.EDITOR_PART:\n\t\t\t\treturn this.setEditorHidden(hidden);\n\t\t\tcase Parts.BANNER_PART:\n\t\t\t\treturn this.setBannerHidden(hidden);\n\t\t\tcase Parts.AUXILIARYBAR_PART:\n\t\t\t\treturn this.setAuxiliaryBarHidden(hidden);\n\t\t\tcase Parts.PANEL_PART:\n\t\t\t\treturn this.setPanelHidden(hidden);\n\t\t}\n\t}\n\n\thasMainWindowBorder(): boolean {\n\t\treturn this.state.runtime.mainWindowBorder;\n\t}\n\n\tgetMainWindowBorderRadius(): string | undefined {\n\t\treturn this.state.runtime.mainWindowBorder && isMacintosh\n\t\t\t? \"5px\"\n\t\t\t: undefined;\n\t}\n\n\tisPanelMaximized(): boolean {\n\t\t// the workbench grid currently prevents us from supporting panel maximization with non-center panel alignment\n\t\treturn (\n\t\t\t(this.getPanelAlignment() === \"center\" ||\n\t\t\t\t!isHorizontal(this.getPanelPosition())) &&\n\t\t\t!this.isVisible(Parts.EDITOR_PART, mainWindow)\n\t\t);\n\t}\n\n\tgetSideBarPosition(): Position {\n\t\treturn this.stateModel.getRuntimeValue(LayoutStateKeys.SIDEBAR_POSITON);\n\t}\n\n\tgetPanelAlignment(): PanelAlignment {\n\t\treturn this.stateModel.getRuntimeValue(LayoutStateKeys.PANEL_ALIGNMENT);\n\t}\n\n\tupdateMenubarVisibility(skipLayout: boolean): void {\n\t\tconst shouldShowTitleBar = shouldShowCustomTitleBar(\n\t\t\tthis.configurationService,\n\t\t\tmainWindow,\n\t\t\tthis.state.runtime.menuBar.toggled,\n\t\t\tthis.isZenModeActive(),\n\t\t);\n\t\tif (\n\t\t\t!skipLayout &&\n\t\t\tthis.workbenchGrid &&\n\t\t\tshouldShowTitleBar !==\n\t\t\t\tthis.isVisible(Parts.TITLEBAR_PART, mainWindow)\n\t\t) {\n\t\t\tthis.workbenchGrid.setViewVisible(\n\t\t\t\tthis.titleBarPartView,\n\t\t\t\tshouldShowTitleBar,\n\t\t\t);\n\t\t}\n\t}\n\n\tupdateCustomTitleBarVisibility(): void {\n\t\tconst shouldShowTitleBar = shouldShowCustomTitleBar(\n\t\t\tthis.configurationService,\n\t\t\tmainWindow,\n\t\t\tthis.state.runtime.menuBar.toggled,\n\t\t\tthis.isZenModeActive(),\n\t\t);\n\t\tconst titlebarVisible = this.isVisible(Parts.TITLEBAR_PART);\n\t\tif (shouldShowTitleBar !== titlebarVisible) {\n\t\t\tthis.workbenchGrid.setViewVisible(\n\t\t\t\tthis.titleBarPartView,\n\t\t\t\tshouldShowTitleBar,\n\t\t\t);\n\t\t}\n\t}\n\n\ttoggleMenuBar(): void {\n\t\tlet currentVisibilityValue = getMenuBarVisibility(\n\t\t\tthis.configurationService,\n\t\t);\n\t\tif (typeof currentVisibilityValue !== \"string\") {\n\t\t\tcurrentVisibilityValue = \"classic\";\n\t\t}\n\n\t\tlet newVisibilityValue: string;\n\t\tif (\n\t\t\tcurrentVisibilityValue === \"visible\" ||\n\t\t\tcurrentVisibilityValue === \"classic\"\n\t\t) {\n\t\t\tnewVisibilityValue = hasNativeTitlebar(this.configurationService)\n\t\t\t\t? \"toggle\"\n\t\t\t\t: \"compact\";\n\t\t} else {\n\t\t\tnewVisibilityValue = \"classic\";\n\t\t}\n\n\t\tthis.configurationService.updateValue(\n\t\t\t\"window.menuBarVisibility\",\n\t\t\tnewVisibilityValue,\n\t\t);\n\t}\n\n\tgetPanelPosition(): Position {\n\t\treturn this.stateModel.getRuntimeValue(LayoutStateKeys.PANEL_POSITION);\n\t}\n\n\tsetPanelPosition(position: Position): void {\n\t\tif (!this.isVisible(Parts.PANEL_PART)) {\n\t\t\tthis.setPanelHidden(false);\n\t\t}\n\n\t\tconst panelPart = this.getPart(Parts.PANEL_PART);\n\t\tconst oldPositionValue = positionToString(this.getPanelPosition());\n\t\tconst newPositionValue = positionToString(position);\n\n\t\t// Adjust CSS\n\t\tconst panelContainer = assertIsDefined(panelPart.getContainer());\n\t\tpanelContainer.classList.remove(oldPositionValue);\n\t\tpanelContainer.classList.add(newPositionValue);\n\n\t\t// Update Styles\n\t\tpanelPart.updateStyles();\n\n\t\t// Layout\n\t\tconst size = this.workbenchGrid.getViewSize(this.panelPartView);\n\t\tconst sideBarSize = this.workbenchGrid.getViewSize(\n\t\t\tthis.sideBarPartView,\n\t\t);\n\t\tconst auxiliaryBarSize = this.workbenchGrid.getViewSize(\n\t\t\tthis.auxiliaryBarPartView,\n\t\t);\n\n\t\tlet editorHidden = !this.isVisible(Parts.EDITOR_PART, mainWindow);\n\n\t\t// Save last non-maximized size for panel before move\n\t\tif (newPositionValue !== oldPositionValue && !editorHidden) {\n\t\t\t// Save the current size of the panel for the new orthogonal direction\n\t\t\t// If moving down, save the width of the panel\n\t\t\t// Otherwise, save the height of the panel\n\t\t\tif (isHorizontal(position)) {\n\t\t\t\tthis.stateModel.setRuntimeValue(\n\t\t\t\t\tLayoutStateKeys.PANEL_LAST_NON_MAXIMIZED_WIDTH,\n\t\t\t\t\tsize.width,\n\t\t\t\t);\n\t\t\t} else if (isHorizontal(positionFromString(oldPositionValue))) {\n\t\t\t\tthis.stateModel.setRuntimeValue(\n\t\t\t\t\tLayoutStateKeys.PANEL_LAST_NON_MAXIMIZED_HEIGHT,\n\t\t\t\t\tsize.height,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\tisHorizontal(position) &&\n\t\t\tthis.getPanelAlignment() !== \"center\" &&\n\t\t\teditorHidden\n\t\t) {\n\t\t\tthis.toggleMaximizedPanel();\n\t\t\teditorHidden = false;\n\t\t}\n\n\t\tthis.stateModel.setRuntimeValue(\n\t\t\tLayoutStateKeys.PANEL_POSITION,\n\t\t\tposition,\n\t\t);\n\n\t\tconst sideBarVisible = this.isVisible(Parts.SIDEBAR_PART);\n\t\tconst auxiliaryBarVisible = this.isVisible(Parts.AUXILIARYBAR_PART);\n\n\t\tif (position === Position.BOTTOM) {\n\t\t\tthis.workbenchGrid.moveView(\n\t\t\t\tthis.panelPartView,\n\t\t\t\teditorHidden\n\t\t\t\t\t? size.height\n\t\t\t\t\t: this.stateModel.getRuntimeValue(\n\t\t\t\t\t\t\tLayoutStateKeys.PANEL_LAST_NON_MAXIMIZED_HEIGHT,\n\t\t\t\t\t\t),\n\t\t\t\tthis.editorPartView,\n\t\t\t\tDirection.Down,\n\t\t\t);\n\t\t} else if (position === Position.TOP) {\n\t\t\tthis.workbenchGrid.moveView(\n\t\t\t\tthis.panelPartView,\n\t\t\t\teditorHidden\n\t\t\t\t\t? size.height\n\t\t\t\t\t: this.stateModel.getRuntimeValue(\n\t\t\t\t\t\t\tLayoutStateKeys.PANEL_LAST_NON_MAXIMIZED_HEIGHT,\n\t\t\t\t\t\t),\n\t\t\t\tthis.editorPartView,\n\t\t\t\tDirection.Up,\n\t\t\t);\n\t\t} else if (position === Position.RIGHT) {\n\t\t\tthis.workbenchGrid.moveView(\n\t\t\t\tthis.panelPartView,\n\t\t\t\teditorHidden\n\t\t\t\t\t? size.width\n\t\t\t\t\t: this.stateModel.getRuntimeValue(\n\t\t\t\t\t\t\tLayoutStateKeys.PANEL_LAST_NON_MAXIMIZED_WIDTH,\n\t\t\t\t\t\t),\n\t\t\t\tthis.editorPartView,\n\t\t\t\tDirection.Right,\n\t\t\t);\n\t\t} else {\n\t\t\tthis.workbenchGrid.moveView(\n\t\t\t\tthis.panelPartView,\n\t\t\t\teditorHidden\n\t\t\t\t\t? size.width\n\t\t\t\t\t: this.stateModel.getRuntimeValue(\n\t\t\t\t\t\t\tLayoutStateKeys.PANEL_LAST_NON_MAXIMIZED_WIDTH,\n\t\t\t\t\t\t),\n\t\t\t\tthis.editorPartView,\n\t\t\t\tDirection.Left,\n\t\t\t);\n\t\t}\n\n\t\t// Reset sidebar to original size before shifting the panel\n\t\tthis.workbenchGrid.resizeView(this.sideBarPartView, sideBarSize);\n\t\tif (!sideBarVisible) {\n\t\t\tthis.setSideBarHidden(true);\n\t\t}\n\n\t\tthis.workbenchGrid.resizeView(\n\t\t\tthis.auxiliaryBarPartView,\n\t\t\tauxiliaryBarSize,\n\t\t);\n\t\tif (!auxiliaryBarVisible) {\n\t\t\tthis.setAuxiliaryBarHidden(true);\n\t\t}\n\n\t\tif (isHorizontal(position)) {\n\t\t\tthis.adjustPartPositions(\n\t\t\t\tthis.getSideBarPosition(),\n\t\t\t\tthis.getPanelAlignment(),\n\t\t\t\tposition,\n\t\t\t);\n\t\t}\n\n\t\tthis._onDidChangePanelPosition.fire(newPositionValue);\n\t}\n\n\tisWindowMaximized(targetWindow: Window): boolean {\n\t\treturn this.state.runtime.maximized.has(getWindowId(targetWindow));\n\t}\n\n\tupdateWindowMaximizedState(targetWindow: Window, maximized: boolean) {\n\t\tthis.mainContainer.classList.toggle(LayoutClasses.MAXIMIZED, maximized);\n\n\t\tconst targetWindowId = getWindowId(targetWindow);\n\t\tif (maximized === this.state.runtime.maximized.has(targetWindowId)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (maximized) {\n\t\t\tthis.state.runtime.maximized.add(targetWindowId);\n\t\t} else {\n\t\t\tthis.state.runtime.maximized.delete(targetWindowId);\n\t\t}\n\n\t\tthis.updateWindowsBorder();\n\t\tthis._onDidChangeWindowMaximized.fire({\n\t\t\twindowId: targetWindowId,\n\t\t\tmaximized,\n\t\t});\n\t}\n\n\tgetVisibleNeighborPart(\n\t\tpart: Parts,\n\t\tdirection: Direction,\n\t): Parts | undefined {\n\t\tif (!this.workbenchGrid) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this.isVisible(part, mainWindow)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst neighborViews = this.workbenchGrid.getNeighborViews(\n\t\t\tthis.getPart(part),\n\t\t\tdirection,\n\t\t\tfalse,\n\t\t);\n\n\t\tif (!neighborViews) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tfor (const neighborView of neighborViews) {\n\t\t\tconst neighborPart = [\n\t\t\t\tParts.ACTIVITYBAR_PART,\n\t\t\t\tParts.EDITOR_PART,\n\t\t\t\tParts.PANEL_PART,\n\t\t\t\tParts.AUXILIARYBAR_PART,\n\t\t\t\tParts.SIDEBAR_PART,\n\t\t\t\tParts.STATUSBAR_PART,\n\t\t\t\tParts.TITLEBAR_PART,\n\t\t\t].find(\n\t\t\t\t(partId) =>\n\t\t\t\t\tthis.getPart(partId) === neighborView &&\n\t\t\t\t\tthis.isVisible(partId, mainWindow),\n\t\t\t);\n\n\t\t\tif (neighborPart !== undefined) {\n\t\t\t\treturn neighborPart;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate onDidChangeWCO(): void {\n\t\tconst bannerFirst =\n\t\t\tthis.workbenchGrid.getNeighborViews(\n\t\t\t\tthis.titleBarPartView,\n\t\t\t\tDirection.Up,\n\t\t\t\tfalse,\n\t\t\t).length > 0;\n\t\tconst shouldBannerBeFirst = this.shouldShowBannerFirst();\n\n\t\tif (bannerFirst !== shouldBannerBeFirst) {\n\t\t\tthis.workbenchGrid.moveView(\n\t\t\t\tthis.bannerPartView,\n\t\t\t\tSizing.Distribute,\n\t\t\t\tthis.titleBarPartView,\n\t\t\t\tshouldBannerBeFirst ? Direction.Up : Direction.Down,\n\t\t\t);\n\t\t}\n\n\t\tthis.workbenchGrid.setViewVisible(\n\t\t\tthis.titleBarPartView,\n\t\t\tshouldShowCustomTitleBar(\n\t\t\t\tthis.configurationService,\n\t\t\t\tmainWindow,\n\t\t\t\tthis.state.runtime.menuBar.toggled,\n\t\t\t\tthis.isZenModeActive(),\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate arrangeEditorNodes(\n\t\tnodes: {\n\t\t\teditor: ISerializedNode;\n\t\t\tsideBar?: ISerializedNode;\n\t\t\tauxiliaryBar?: ISerializedNode;\n\t\t},\n\t\tavailableHeight: number,\n\t\tavailableWidth: number,\n\t): ISerializedNode {\n\t\tif (!nodes.sideBar && !nodes.auxiliaryBar) {\n\t\t\tnodes.editor.size = availableHeight;\n\t\t\treturn nodes.editor;\n\t\t}\n\n\t\tconst result = [nodes.editor];\n\t\tnodes.editor.size = availableWidth;\n\t\tif (nodes.sideBar) {\n\t\t\tif (\n\t\t\t\tthis.stateModel.getRuntimeValue(\n\t\t\t\t\tLayoutStateKeys.SIDEBAR_POSITON,\n\t\t\t\t) === Position.LEFT\n\t\t\t) {\n\t\t\t\tresult.splice(0, 0, nodes.sideBar);\n\t\t\t} else {\n\t\t\t\tresult.push(nodes.sideBar);\n\t\t\t}\n\n\t\t\tnodes.editor.size -= this.stateModel.getRuntimeValue(\n\t\t\t\tLayoutStateKeys.SIDEBAR_HIDDEN,\n\t\t\t)\n\t\t\t\t? 0\n\t\t\t\t: nodes.sideBar.size;\n\t\t}\n\n\t\tif (nodes.auxiliaryBar) {\n\t\t\tif (\n\t\t\t\tthis.stateModel.getRuntimeValue(\n\t\t\t\t\tLayoutStateKeys.SIDEBAR_POSITON,\n\t\t\t\t) === Position.RIGHT\n\t\t\t) {\n\t\t\t\tresult.splice(0, 0, nodes.auxiliaryBar);\n\t\t\t} else {\n\t\t\t\tresult.push(nodes.auxiliaryBar);\n\t\t\t}\n\n\t\t\tnodes.editor.size -= this.stateModel.getRuntimeValue(\n\t\t\t\tLayoutStateKeys.AUXILIARYBAR_HIDDEN,\n\t\t\t)\n\t\t\t\t? 0\n\t\t\t\t: nodes.auxiliaryBar.size;\n\t\t}\n\n\t\treturn {\n\t\t\ttype: \"branch\",\n\t\t\tdata: result,\n\t\t\tsize: availableHeight,\n\t\t};\n\t}\n\n\tprivate arrangeMiddleSectionNodes(\n\t\tnodes: {\n\t\t\teditor: ISerializedNode;\n\t\t\tpanel: ISerializedNode;\n\t\t\tactivityBar: ISerializedNode;\n\t\t\tsideBar: ISerializedNode;\n\t\t\tauxiliaryBar: ISerializedNode;\n\t\t},\n\t\tavailableWidth: number,\n\t\tavailableHeight: number,\n\t): ISerializedNode[] {\n\t\tconst activityBarSize = this.stateModel.getRuntimeValue(\n\t\t\tLayoutStateKeys.ACTIVITYBAR_HIDDEN,\n\t\t)\n\t\t\t? 0\n\t\t\t: nodes.activityBar.size;\n\t\tconst sideBarSize = this.stateModel.getRuntimeValue(\n\t\t\tLayoutStateKeys.SIDEBAR_HIDDEN,\n\t\t)\n\t\t\t? 0\n\t\t\t: nodes.sideBar.size;\n\t\tconst auxiliaryBarSize = this.stateModel.getRuntimeValue(\n\t\t\tLayoutStateKeys.AUXILIARYBAR_HIDDEN,\n\t\t)\n\t\t\t? 0\n\t\t\t: nodes.auxiliaryBar.size;\n\t\tconst panelSize = this.stateModel.getInitializationValue(\n\t\t\tLayoutStateKeys.PANEL_SIZE,\n\t\t)\n\t\t\t? 0\n\t\t\t: nodes.panel.size;\n\n\t\tconst panelPostion = this.stateModel.getRuntimeValue(\n\t\t\tLayoutStateKeys.PANEL_POSITION,\n\t\t);\n\t\tconst sideBarPosition = this.stateModel.getRuntimeValue(\n\t\t\tLayoutStateKeys.SIDEBAR_POSITON,\n\t\t);\n\n\t\tconst result = [] as ISerializedNode[];\n\t\tif (isHorizontal(panelPostion)) {\n\t\t\tconst panelAlignment = this.stateModel.getRuntimeValue(\n\t\t\t\tLayoutStateKeys.PANEL_ALIGNMENT,\n\t\t\t);\n\t\t\tconst sideBarNextToEditor = !(\n\t\t\t\tpanelAlignment === \"center\" ||\n\t\t\t\t(sideBarPosition === Position.LEFT &&\n\t\t\t\t\tpanelAlignment === \"right\") ||\n\t\t\t\t(sideBarPosition === Position.RIGHT &&\n\t\t\t\t\tpanelAlignment === \"left\")\n\t\t\t);\n\t\t\tconst auxiliaryBarNextToEditor = !(\n\t\t\t\tpanelAlignment === \"center\" ||\n\t\t\t\t(sideBarPosition === Position.RIGHT &&\n\t\t\t\t\tpanelAlignment === \"right\") ||\n\t\t\t\t(sideBarPosition === Position.LEFT && panelAlignment === \"left\")\n\t\t\t);\n\n\t\t\tconst editorSectionWidth =\n\t\t\t\tavailableWidth -\n\t\t\t\tactivityBarSize -\n\t\t\t\t(sideBarNextToEditor ? 0 : sideBarSize) -\n\t\t\t\t(auxiliaryBarNextToEditor ? 0 : auxiliaryBarSize);\n\n\t\t\tconst editorNodes = this.arrangeEditorNodes(\n\t\t\t\t{\n\t\t\t\t\teditor: nodes.editor,\n\t\t\t\t\tsideBar: sideBarNextToEditor ? nodes.sideBar : undefined,\n\t\t\t\t\tauxiliaryBar: auxiliaryBarNextToEditor\n\t\t\t\t\t\t? nodes.auxiliaryBar\n\t\t\t\t\t\t: undefined,\n\t\t\t\t},\n\t\t\t\tavailableHeight - panelSize,\n\t\t\t\teditorSectionWidth,\n\t\t\t);\n\n\t\t\tresult.push({\n\t\t\t\ttype: \"branch\",\n\t\t\t\tdata:\n\t\t\t\t\tpanelPostion === Position.BOTTOM\n\t\t\t\t\t\t? [editorNodes, nodes.panel]\n\t\t\t\t\t\t: [nodes.panel, editorNodes],\n\t\t\t\tsize: editorSectionWidth,\n\t\t\t});\n\n\t\t\tif (!sideBarNextToEditor) {\n\t\t\t\tif (sideBarPosition === Position.LEFT) {\n\t\t\t\t\tresult.splice(0, 0, nodes.sideBar);\n\t\t\t\t} else {\n\t\t\t\t\tresult.push(nodes.sideBar);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!auxiliaryBarNextToEditor) {\n\t\t\t\tif (sideBarPosition === Position.RIGHT) {\n\t\t\t\t\tresult.splice(0, 0, nodes.auxiliaryBar);\n\t\t\t\t} else {\n\t\t\t\t\tresult.push(nodes.auxiliaryBar);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (sideBarPosition === Position.LEFT) {\n\t\t\t\tresult.splice(0, 0, nodes.activityBar);\n\t\t\t} else {\n\t\t\t\tresult.push(nodes.activityBar);\n\t\t\t}\n\t\t} else {\n\t\t\tresult.push(nodes.editor);\n\t\t\tnodes.editor.size =\n\t\t\t\tavailableWidth -\n\t\t\t\tactivityBarSize -\n\t\t\t\tsideBarSize -\n\t\t\t\tpanelSize -\n\t\t\t\tauxiliaryBarSize;\n\t\t\tif (panelPostion === Position.RIGHT) {\n\t\t\t\tresult.push(nodes.panel);\n\t\t\t} else {\n\t\t\t\tresult.splice(0, 0, nodes.panel);\n\t\t\t}\n\n\t\t\tif (sideBarPosition === Position.LEFT) {\n\t\t\t\tresult.push(nodes.auxiliaryBar);\n\t\t\t\tresult.splice(0, 0, nodes.sideBar);\n\t\t\t\tresult.splice(0, 0, nodes.activityBar);\n\t\t\t} else {\n\t\t\t\tresult.splice(0, 0, nodes.auxiliaryBar);\n\t\t\t\tresult.push(nodes.sideBar);\n\t\t\t\tresult.push(nodes.activityBar);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate createGridDescriptor(): ISerializedGrid {\n\t\tconst { width, height } = this.stateModel.getInitializationValue(\n\t\t\tLayoutStateKeys.GRID_SIZE,\n\t\t);\n\t\tconst sideBarSize = this.stateModel.getInitializationValue(\n\t\t\tLayoutStateKeys.SIDEBAR_SIZE,\n\t\t);\n\t\tconst auxiliaryBarPartSize = this.stateModel.getInitializationValue(\n\t\t\tLayoutStateKeys.AUXILIARYBAR_SIZE,\n\t\t);\n\t\tconst panelSize = this.stateModel.getInitializationValue(\n\t\t\tLayoutStateKeys.PANEL_SIZE,\n\t\t);\n\n\t\tconst titleBarHeight = this.titleBarPartView.minimumHeight;\n\t\tconst bannerHeight = this.bannerPartView.minimumHeight;\n\t\tconst statusBarHeight = this.statusBarPartView.minimumHeight;\n\t\tconst activityBarWidth = this.activityBarPartView.minimumWidth;\n\t\tconst middleSectionHeight = height - titleBarHeight - statusBarHeight;\n\n\t\tconst titleAndBanner: ISerializedNode[] = [\n\t\t\t{\n\t\t\t\ttype: \"leaf\",\n\t\t\t\tdata: { type: Parts.TITLEBAR_PART },\n\t\t\t\tsize: titleBarHeight,\n\t\t\t\tvisible: this.isVisible(Parts.TITLEBAR_PART, mainWindow),\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"leaf\",\n\t\t\t\tdata: { type: Parts.BANNER_PART },\n\t\t\t\tsize: bannerHeight,\n\t\t\t\tvisible: false,\n\t\t\t},\n\t\t];\n\n\t\tconst activityBarNode: ISerializedLeafNode = {\n\t\t\ttype: \"leaf\",\n\t\t\tdata: { type: Parts.ACTIVITYBAR_PART },\n\t\t\tsize: activityBarWidth,\n\t\t\tvisible: !this.stateModel.getRuntimeValue(\n\t\t\t\tLayoutStateKeys.ACTIVITYBAR_HIDDEN,\n\t\t\t),\n\t\t};\n\n\t\tconst sideBarNode: ISerializedLeafNode = {\n\t\t\ttype: \"leaf\",\n\t\t\tdata: { type: Parts.SIDEBAR_PART },\n\t\t\tsize: sideBarSize,\n\t\t\tvisible: !this.stateModel.getRuntimeValue(\n\t\t\t\tLayoutStateKeys.SIDEBAR_HIDDEN,\n\t\t\t),\n\t\t};\n\n\t\tconst auxiliaryBarNode: ISerializedLeafNode = {\n\t\t\ttype: \"leaf\",\n\t\t\tdata: { type: Parts.AUXILIARYBAR_PART },\n\t\t\tsize: auxiliaryBarPartSize,\n\t\t\tvisible: this.isVisible(Parts.AUXILIARYBAR_PART),\n\t\t};\n\n\t\tconst editorNode: ISerializedLeafNode = {\n\t\t\ttype: \"leaf\",\n\t\t\tdata: { type: Parts.EDITOR_PART },\n\t\t\tsize: 0, // Update based on sibling sizes\n\t\t\tvisible: !this.stateModel.getRuntimeValue(\n\t\t\t\tLayoutStateKeys.EDITOR_HIDDEN,\n\t\t\t),\n\t\t};\n\n\t\tconst panelNode: ISerializedLeafNode = {\n\t\t\ttype: \"leaf\",\n\t\t\tdata: { type: Parts.PANEL_PART },\n\t\t\tsize: panelSize,\n\t\t\tvisible: !this.stateModel.getRuntimeValue(\n\t\t\t\tLayoutStateKeys.PANEL_HIDDEN,\n\t\t\t),\n\t\t};\n\n\t\tconst middleSection: ISerializedNode[] = this.arrangeMiddleSectionNodes(\n\t\t\t{\n\t\t\t\tactivityBar: activityBarNode,\n\t\t\t\tauxiliaryBar: auxiliaryBarNode,\n\t\t\t\teditor: editorNode,\n\t\t\t\tpanel: panelNode,\n\t\t\t\tsideBar: sideBarNode,\n\t\t\t},\n\t\t\twidth,\n\t\t\tmiddleSectionHeight,\n\t\t);\n\n\t\tconst result: ISerializedGrid = {\n\t\t\troot: {\n\t\t\t\ttype: \"branch\",\n\t\t\t\tsize: width,\n\t\t\t\tdata: [\n\t\t\t\t\t...(this.shouldShowBannerFirst()\n\t\t\t\t\t\t? titleAndBanner.reverse()\n\t\t\t\t\t\t: titleAndBanner),\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: \"branch\",\n\t\t\t\t\t\tdata: middleSection,\n\t\t\t\t\t\tsize: middleSectionHeight,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: \"leaf\",\n\t\t\t\t\t\tdata: { type: Parts.STATUSBAR_PART },\n\t\t\t\t\t\tsize: statusBarHeight,\n\t\t\t\t\t\tvisible: !this.stateModel.getRuntimeValue(\n\t\t\t\t\t\t\tLayoutStateKeys.STATUSBAR_HIDDEN,\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\torientation: Orientation.VERTICAL,\n\t\t\twidth,\n\t\t\theight,\n\t\t};\n\n\t\ttype StartupLayoutEvent = {\n\t\t\tactivityBarVisible: boolean;\n\t\t\tsideBarVisible: boolean;\n\t\t\tauxiliaryBarVisible: boolean;\n\t\t\tpanelVisible: boolean;\n\t\t\tstatusbarVisible: boolean;\n\t\t\tsideBarPosition: string;\n\t\t\tpanelPosition: string;\n\t\t};\n\n\t\ttype StartupLayoutEventClassification = {\n\t\t\towner: \"sbatten\";\n\t\t\tcomment: \"Information about the layout of the workbench during statup\";\n\t\t\tactivityBarVisible: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"Whether or the not the activity bar is visible\";\n\t\t\t};\n\t\t\tsideBarVisible: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"Whether or the not the primary side bar is visible\";\n\t\t\t};\n\t\t\tauxiliaryBarVisible: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"Whether or the not the secondary side bar is visible\";\n\t\t\t};\n\t\t\tpanelVisible: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"Whether or the not the panel is visible\";\n\t\t\t};\n\t\t\tstatusbarVisible: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"Whether or the not the status bar is visible\";\n\t\t\t};\n\t\t\tsideBarPosition: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"Whether the primary side bar is on the left or right\";\n\t\t\t};\n\t\t\tpanelPosition: {\n\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\tcomment: \"Whether the panel is on the top, bottom, left, or right\";\n\t\t\t};\n\t\t};\n\n\t\tconst layoutDescriptor: StartupLayoutEvent = {\n\t\t\tactivityBarVisible: !this.stateModel.getRuntimeValue(\n\t\t\t\tLayoutStateKeys.ACTIVITYBAR_HIDDEN,\n\t\t\t),\n\t\t\tsideBarVisible: !this.stateModel.getRuntimeValue(\n\t\t\t\tLayoutStateKeys.SIDEBAR_HIDDEN,\n\t\t\t),\n\t\t\tauxiliaryBarVisible: !this.stateModel.getRuntimeValue(\n\t\t\t\tLayoutStateKeys.AUXILIARYBAR_HIDDEN,\n\t\t\t),\n\t\t\tpanelVisible: !this.stateModel.getRuntimeValue(\n\t\t\t\tLayoutStateKeys.PANEL_HIDDEN,\n\t\t\t),\n\t\t\tstatusbarVisible: !this.stateModel.getRuntimeValue(\n\t\t\t\tLayoutStateKeys.STATUSBAR_HIDDEN,\n\t\t\t),\n\t\t\tsideBarPosition: positionToString(\n\t\t\t\tthis.stateModel.getRuntimeValue(\n\t\t\t\t\tLayoutStateKeys.SIDEBAR_POSITON,\n\t\t\t\t),\n\t\t\t),\n\t\t\tpanelPosition: positionToString(\n\t\t\t\tthis.stateModel.getRuntimeValue(LayoutStateKeys.PANEL_POSITION),\n\t\t\t),\n\t\t};\n\n\t\tthis.telemetryService.publicLog2<\n\t\t\tStartupLayoutEvent,\n\t\t\tStartupLayoutEventClassification\n\t\t>(\"startupLayout\", layoutDescriptor);\n\n\t\treturn result;\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.disposed = true;\n\t}\n}\n\ntype ZenModeConfiguration = {\n\tcenterLayout: boolean;\n\tfullScreen: boolean;\n\thideActivityBar: boolean;\n\thideLineNumbers: boolean;\n\thideStatusBar: boolean;\n\tshowTabs: \"multiple\" | \"single\" | \"none\";\n\trestore: boolean;\n\tsilentNotifications: boolean;\n};\n\nfunction getZenModeConfiguration(\n\tconfigurationService: IConfigurationService,\n): ZenModeConfiguration {\n\treturn configurationService.getValue<ZenModeConfiguration>(\n\t\tWorkbenchLayoutSettings.ZEN_MODE_CONFIG,\n\t);\n}\n\n//#endregion\n\n//#region Layout State Model\n\ninterface IWorkbenchLayoutStateKey {\n\treadonly name: string;\n\treadonly runtime: boolean;\n\treadonly defaultValue: unknown;\n\treadonly scope: StorageScope;\n\treadonly target: StorageTarget;\n\treadonly zenModeIgnore?: boolean;\n}\n\ntype StorageKeyType = string | boolean | number | object;\n\nabstract class WorkbenchLayoutStateKey<T extends StorageKeyType>\n\timplements IWorkbenchLayoutStateKey\n{\n\tabstract readonly runtime: boolean;\n\n\tconstructor(\n\t\treadonly name: string,\n\t\treadonly scope: StorageScope,\n\t\treadonly target: StorageTarget,\n\t\tpublic defaultValue: T,\n\t) {}\n}\n\nclass RuntimeStateKey<\n\tT extends StorageKeyType,\n> extends WorkbenchLayoutStateKey<T> {\n\treadonly runtime = true;\n\n\tconstructor(\n\t\tname: string,\n\t\tscope: StorageScope,\n\t\ttarget: StorageTarget,\n\t\tdefaultValue: T,\n\t\treadonly zenModeIgnore?: boolean,\n\t) {\n\t\tsuper(name, scope, target, defaultValue);\n\t}\n}\n\nclass InitializationStateKey<\n\tT extends StorageKeyType,\n> extends WorkbenchLayoutStateKey<T> {\n\treadonly runtime = false;\n}\n\nconst LayoutStateKeys = {\n\t// Editor\n\tMAIN_EDITOR_CENTERED: new RuntimeStateKey<boolean>(\n\t\t\"editor.centered\",\n\t\tStorageScope.WORKSPACE,\n\t\tStorageTarget.MACHINE,\n\t\tfalse,\n\t),\n\n\t// Zen Mode\n\tZEN_MODE_ACTIVE: new RuntimeStateKey<boolean>(\n\t\t\"zenMode.active\",\n\t\tStorageScope.WORKSPACE,\n\t\tStorageTarget.MACHINE,\n\t\tfalse,\n\t),\n\tZEN_MODE_EXIT_INFO: new RuntimeStateKey(\n\t\t\"zenMode.exitInfo\",\n\t\tStorageScope.WORKSPACE,\n\t\tStorageTarget.MACHINE,\n\t\t{\n\t\t\ttransitionedToCenteredEditorLayout: false,\n\t\t\ttransitionedToFullScreen: false,\n\t\t\thandleNotificationsDoNotDisturbMode: false,\n\t\t\twasVisible: {\n\t\t\t\tauxiliaryBar: false,\n\t\t\t\tpanel: false,\n\t\t\t\tsideBar: false,\n\t\t\t},\n\t\t},\n\t),\n\n\t// Part Sizing\n\tGRID_SIZE: new InitializationStateKey(\n\t\t\"grid.size\",\n\t\tStorageScope.PROFILE,\n\t\tStorageTarget.MACHINE,\n\t\t{ width: 800, height: 600 },\n\t),\n\tSIDEBAR_SIZE: new InitializationStateKey<number>(\n\t\t\"sideBar.size\",\n\t\tStorageScope.PROFILE,\n\t\tStorageTarget.MACHINE,\n\t\t200,\n\t),\n\tAUXILIARYBAR_SIZE: new InitializationStateKey<number>(\n\t\t\"auxiliaryBar.size\",\n\t\tStorageScope.PROFILE,\n\t\tStorageTarget.MACHINE,\n\t\t200,\n\t),\n\tPANEL_SIZE: new InitializationStateKey<number>(\n\t\t\"panel.size\",\n\t\tStorageScope.PROFILE,\n\t\tStorageTarget.MACHINE,\n\t\t300,\n\t),\n\n\tPANEL_LAST_NON_MAXIMIZED_HEIGHT: new RuntimeStateKey<number>(\n\t\t\"panel.lastNonMaximizedHeight\",\n\t\tStorageScope.PROFILE,\n\t\tStorageTarget.MACHINE,\n\t\t300,\n\t),\n\tPANEL_LAST_NON_MAXIMIZED_WIDTH: new RuntimeStateKey<number>(\n\t\t\"panel.lastNonMaximizedWidth\",\n\t\tStorageScope.PROFILE,\n\t\tStorageTarget.MACHINE,\n\t\t300,\n\t),\n\tPANEL_WAS_LAST_MAXIMIZED: new RuntimeStateKey<boolean>(\n\t\t\"panel.wasLastMaximized\",\n\t\tStorageScope.WORKSPACE,\n\t\tStorageTarget.MACHINE,\n\t\tfalse,\n\t),\n\n\t// Part Positions\n\tSIDEBAR_POSITON: new RuntimeStateKey<Position>(\n\t\t\"sideBar.position\",\n\t\tStorageScope.WORKSPACE,\n\t\tStorageTarget.MACHINE,\n\t\tPosition.LEFT,\n\t),\n\tPANEL_POSITION: new RuntimeStateKey<Position>(\n\t\t\"panel.position\",\n\t\tStorageScope.WORKSPACE,\n\t\tStorageTarget.MACHINE,\n\t\tPosition.BOTTOM,\n\t),\n\tPANEL_ALIGNMENT: new RuntimeStateKey<PanelAlignment>(\n\t\t\"panel.alignment\",\n\t\tStorageScope.PROFILE,\n\t\tStorageTarget.USER,\n\t\t\"center\",\n\t),\n\n\t// Part Visibility\n\tACTIVITYBAR_HIDDEN: new RuntimeStateKey<boolean>(\n\t\t\"activityBar.hidden\",\n\t\tStorageScope.WORKSPACE,\n\t\tStorageTarget.MACHINE,\n\t\tfalse,\n\t\ttrue,\n\t),\n\tSIDEBAR_HIDDEN: new RuntimeStateKey<boolean>(\n\t\t\"sideBar.hidden\",\n\t\tStorageScope.WORKSPACE,\n\t\tStorageTarget.MACHINE,\n\t\tfalse,\n\t),\n\tEDITOR_HIDDEN: new RuntimeStateKey<boolean>(\n\t\t\"editor.hidden\",\n\t\tStorageScope.WORKSPACE,\n\t\tStorageTarget.MACHINE,\n\t\tfalse,\n\t),\n\tPANEL_HIDDEN: new RuntimeStateKey<boolean>(\n\t\t\"panel.hidden\",\n\t\tStorageScope.WORKSPACE,\n\t\tStorageTarget.MACHINE,\n\t\ttrue,\n\t),\n\tAUXILIARYBAR_HIDDEN: new RuntimeStateKey<boolean>(\n\t\t\"auxiliaryBar.hidden\",\n\t\tStorageScope.WORKSPACE,\n\t\tStorageTarget.MACHINE,\n\t\ttrue,\n\t),\n\tSTATUSBAR_HIDDEN: new RuntimeStateKey<boolean>(\n\t\t\"statusBar.hidden\",\n\t\tStorageScope.WORKSPACE,\n\t\tStorageTarget.MACHINE,\n\t\tfalse,\n\t\ttrue,\n\t),\n} as const;\n\ninterface ILayoutStateChangeEvent<T extends StorageKeyType> {\n\treadonly key: RuntimeStateKey<T>;\n\treadonly value: T;\n}\n\nenum WorkbenchLayoutSettings {\n\tPANEL_POSITION = \"workbench.panel.defaultLocation\",\n\tPANEL_OPENS_MAXIMIZED = \"workbench.panel.opensMaximized\",\n\tZEN_MODE_CONFIG = \"zenMode\",\n\tEDITOR_CENTERED_LAYOUT_AUTO_RESIZE = \"workbench.editor.centeredLayoutAutoResize\",\n}\n\nenum LegacyWorkbenchLayoutSettings {\n\tSTATUSBAR_VISIBLE = \"workbench.statusBar.visible\", // Deprecated to UI State\n\tSIDEBAR_POSITION = \"workbench.sideBar.location\", // Deprecated to UI State\n}\n\nclass LayoutStateModel extends Disposable {\n\tstatic readonly STORAGE_PREFIX = \"workbench.\";\n\n\tprivate readonly _onDidChangeState = this._register(\n\t\tnew Emitter<ILayoutStateChangeEvent<StorageKeyType>>(),\n\t);\n\treadonly onDidChangeState = this._onDidChangeState.event;\n\n\tprivate readonly stateCache = new Map<string, unknown>();\n\n\tconstructor(\n\t\tprivate readonly storageService: IStorageService,\n\t\tprivate readonly configurationService: IConfigurationService,\n\t\tprivate readonly contextService: IWorkspaceContextService,\n\t\tprivate readonly container: HTMLElement,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(\n\t\t\tthis.configurationService.onDidChangeConfiguration(\n\t\t\t\t(configurationChange) =>\n\t\t\t\t\tthis.updateStateFromLegacySettings(configurationChange),\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate updateStateFromLegacySettings(\n\t\tconfigurationChangeEvent: IConfigurationChangeEvent,\n\t): void {\n\t\tif (\n\t\t\tconfigurationChangeEvent.affectsConfiguration(\n\t\t\t\tLayoutSettings.ACTIVITY_BAR_LOCATION,\n\t\t\t)\n\t\t) {\n\t\t\tthis.setRuntimeValueAndFire(\n\t\t\t\tLayoutStateKeys.ACTIVITYBAR_HIDDEN,\n\t\t\t\tthis.isActivityBarHidden(),\n\t\t\t);\n\t\t}\n\n\t\tif (\n\t\t\tconfigurationChangeEvent.affectsConfiguration(\n\t\t\t\tLegacyWorkbenchLayoutSettings.STATUSBAR_VISIBLE,\n\t\t\t)\n\t\t) {\n\t\t\tthis.setRuntimeValueAndFire(\n\t\t\t\tLayoutStateKeys.STATUSBAR_HIDDEN,\n\t\t\t\t!this.configurationService.getValue(\n\t\t\t\t\tLegacyWorkbenchLayoutSettings.STATUSBAR_VISIBLE,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\tif (\n\t\t\tconfigurationChangeEvent.affectsConfiguration(\n\t\t\t\tLegacyWorkbenchLayoutSettings.SIDEBAR_POSITION,\n\t\t\t)\n\t\t) {\n\t\t\tthis.setRuntimeValueAndFire(\n\t\t\t\tLayoutStateKeys.SIDEBAR_POSITON,\n\t\t\t\tpositionFromString(\n\t\t\t\t\tthis.configurationService.getValue(\n\t\t\t\t\t\tLegacyWorkbenchLayoutSettings.SIDEBAR_POSITION,\n\t\t\t\t\t) ?? \"left\",\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate updateLegacySettingsFromState<T extends StorageKeyType>(\n\t\tkey: RuntimeStateKey<T>,\n\t\tvalue: T,\n\t): void {\n\t\tconst isZenMode = this.getRuntimeValue(LayoutStateKeys.ZEN_MODE_ACTIVE);\n\t\tif (key.zenModeIgnore && isZenMode) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (key === LayoutStateKeys.ACTIVITYBAR_HIDDEN) {\n\t\t\tthis.configurationService.updateValue(\n\t\t\t\tLayoutSettings.ACTIVITY_BAR_LOCATION,\n\t\t\t\tvalue ? ActivityBarPosition.HIDDEN : undefined,\n\t\t\t);\n\t\t} else if (key === LayoutStateKeys.STATUSBAR_HIDDEN) {\n\t\t\tthis.configurationService.updateValue(\n\t\t\t\tLegacyWorkbenchLayoutSettings.STATUSBAR_VISIBLE,\n\t\t\t\t!value,\n\t\t\t);\n\t\t} else if (key === LayoutStateKeys.SIDEBAR_POSITON) {\n\t\t\tthis.configurationService.updateValue(\n\t\t\t\tLegacyWorkbenchLayoutSettings.SIDEBAR_POSITION,\n\t\t\t\tpositionToString(value as Position),\n\t\t\t);\n\t\t}\n\t}\n\n\tload(): void {\n\t\tlet key: keyof typeof LayoutStateKeys;\n\n\t\t// Load stored values for all keys\n\t\tfor (key in LayoutStateKeys) {\n\t\t\tconst stateKey = LayoutStateKeys[\n\t\t\t\tkey\n\t\t\t] as WorkbenchLayoutStateKey<StorageKeyType>;\n\t\t\tconst value = this.loadKeyFromStorage(stateKey);\n\n\t\t\tif (value !== undefined) {\n\t\t\t\tthis.stateCache.set(stateKey.name, value);\n\t\t\t}\n\t\t}\n\n\t\t// Apply legacy settings\n\t\tthis.stateCache.set(\n\t\t\tLayoutStateKeys.ACTIVITYBAR_HIDDEN.name,\n\t\t\tthis.isActivityBarHidden(),\n\t\t);\n\t\tthis.stateCache.set(\n\t\t\tLayoutStateKeys.STATUSBAR_HIDDEN.name,\n\t\t\t!this.configurationService.getValue(\n\t\t\t\tLegacyWorkbenchLayoutSettings.STATUSBAR_VISIBLE,\n\t\t\t),\n\t\t);\n\t\tthis.stateCache.set(\n\t\t\tLayoutStateKeys.SIDEBAR_POSITON.name,\n\t\t\tpositionFromString(\n\t\t\t\tthis.configurationService.getValue(\n\t\t\t\t\tLegacyWorkbenchLayoutSettings.SIDEBAR_POSITION,\n\t\t\t\t) ?? \"left\",\n\t\t\t),\n\t\t);\n\n\t\t// Set dynamic defaults: part sizing and side bar visibility\n\t\tconst workbenchDimensions = getClientArea(this.container);\n\t\tLayoutStateKeys.PANEL_POSITION.defaultValue = positionFromString(\n\t\t\tthis.configurationService.getValue(\n\t\t\t\tWorkbenchLayoutSettings.PANEL_POSITION,\n\t\t\t) ?? \"bottom\",\n\t\t);\n\t\tLayoutStateKeys.GRID_SIZE.defaultValue = {\n\t\t\theight: workbenchDimensions.height,\n\t\t\twidth: workbenchDimensions.width,\n\t\t};\n\t\tLayoutStateKeys.SIDEBAR_SIZE.defaultValue = Math.min(\n\t\t\t300,\n\t\t\tworkbenchDimensions.width / 4,\n\t\t);\n\t\tLayoutStateKeys.AUXILIARYBAR_SIZE.defaultValue = Math.min(\n\t\t\t300,\n\t\t\tworkbenchDimensions.width / 4,\n\t\t);\n\t\tLayoutStateKeys.PANEL_SIZE.defaultValue =\n\t\t\t(this.stateCache.get(LayoutStateKeys.PANEL_POSITION.name) ??\n\t\t\tisHorizontal(LayoutStateKeys.PANEL_POSITION.defaultValue))\n\t\t\t\t? workbenchDimensions.height / 3\n\t\t\t\t: workbenchDimensions.width / 4;\n\t\tLayoutStateKeys.SIDEBAR_HIDDEN.defaultValue =\n\t\t\tthis.contextService.getWorkbenchState() === WorkbenchState.EMPTY;\n\n\t\t// Apply all defaults\n\t\tfor (key in LayoutStateKeys) {\n\t\t\tconst stateKey = LayoutStateKeys[key];\n\t\t\tif (this.stateCache.get(stateKey.name) === undefined) {\n\t\t\t\tthis.stateCache.set(stateKey.name, stateKey.defaultValue);\n\t\t\t}\n\t\t}\n\n\t\t// Register for runtime key changes\n\t\tthis._register(\n\t\t\tthis.storageService.onDidChangeValue(\n\t\t\t\tStorageScope.PROFILE,\n\t\t\t\tundefined,\n\t\t\t\tthis._register(new DisposableStore()),\n\t\t\t)((storageChangeEvent) => {\n\t\t\t\tlet key: keyof typeof LayoutStateKeys;\n\t\t\t\tfor (key in LayoutStateKeys) {\n\t\t\t\t\tconst stateKey = LayoutStateKeys[\n\t\t\t\t\t\tkey\n\t\t\t\t\t] as WorkbenchLayoutStateKey<StorageKeyType>;\n\t\t\t\t\tif (\n\t\t\t\t\t\tstateKey instanceof RuntimeStateKey &&\n\t\t\t\t\t\tstateKey.scope === StorageScope.PROFILE &&\n\t\t\t\t\t\tstateKey.target === StorageTarget.USER\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t`${LayoutStateModel.STORAGE_PREFIX}${stateKey.name}` ===\n\t\t\t\t\t\t\tstorageChangeEvent.key\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst value =\n\t\t\t\t\t\t\t\tthis.loadKeyFromStorage(stateKey) ??\n\t\t\t\t\t\t\t\tstateKey.defaultValue;\n\t\t\t\t\t\t\tif (this.stateCache.get(stateKey.name) !== value) {\n\t\t\t\t\t\t\t\tthis.stateCache.set(stateKey.name, value);\n\t\t\t\t\t\t\t\tthis._onDidChangeState.fire({\n\t\t\t\t\t\t\t\t\tkey: stateKey,\n\t\t\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tsave(workspace: boolean, global: boolean): void {\n\t\tlet key: keyof typeof LayoutStateKeys;\n\n\t\tconst isZenMode = this.getRuntimeValue(LayoutStateKeys.ZEN_MODE_ACTIVE);\n\n\t\tfor (key in LayoutStateKeys) {\n\t\t\tconst stateKey = LayoutStateKeys[\n\t\t\t\tkey\n\t\t\t] as WorkbenchLayoutStateKey<StorageKeyType>;\n\t\t\tif (\n\t\t\t\t(workspace && stateKey.scope === StorageScope.WORKSPACE) ||\n\t\t\t\t(global && stateKey.scope === StorageScope.PROFILE)\n\t\t\t) {\n\t\t\t\tif (\n\t\t\t\t\tisZenMode &&\n\t\t\t\t\tstateKey instanceof RuntimeStateKey &&\n\t\t\t\t\tstateKey.zenModeIgnore\n\t\t\t\t) {\n\t\t\t\t\tcontinue; // Don't write out specific keys while in zen mode\n\t\t\t\t}\n\n\t\t\t\tthis.saveKeyToStorage(stateKey);\n\t\t\t}\n\t\t}\n\t}\n\n\tgetInitializationValue<T extends StorageKeyType>(\n\t\tkey: InitializationStateKey<T>,\n\t): T {\n\t\treturn this.stateCache.get(key.name) as T;\n\t}\n\n\tsetInitializationValue<T extends StorageKeyType>(\n\t\tkey: InitializationStateKey<T>,\n\t\tvalue: T,\n\t): void {\n\t\tthis.stateCache.set(key.name, value);\n\t}\n\n\tgetRuntimeValue<T extends StorageKeyType>(\n\t\tkey: RuntimeStateKey<T>,\n\t\tfallbackToSetting?: boolean,\n\t): T {\n\t\tif (fallbackToSetting) {\n\t\t\tswitch (key) {\n\t\t\t\tcase LayoutStateKeys.ACTIVITYBAR_HIDDEN:\n\t\t\t\t\tthis.stateCache.set(key.name, this.isActivityBarHidden());\n\t\t\t\t\tbreak;\n\t\t\t\tcase LayoutStateKeys.STATUSBAR_HIDDEN:\n\t\t\t\t\tthis.stateCache.set(\n\t\t\t\t\t\tkey.name,\n\t\t\t\t\t\t!this.configurationService.getValue(\n\t\t\t\t\t\t\tLegacyWorkbenchLayoutSettings.STATUSBAR_VISIBLE,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase LayoutStateKeys.SIDEBAR_POSITON:\n\t\t\t\t\tthis.stateCache.set(\n\t\t\t\t\t\tkey.name,\n\t\t\t\t\t\tthis.configurationService.getValue(\n\t\t\t\t\t\t\tLegacyWorkbenchLayoutSettings.SIDEBAR_POSITION,\n\t\t\t\t\t\t) ?? \"left\",\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn this.stateCache.get(key.name) as T;\n\t}\n\n\tsetRuntimeValue<T extends StorageKeyType>(\n\t\tkey: RuntimeStateKey<T>,\n\t\tvalue: T,\n\t): void {\n\t\tthis.stateCache.set(key.name, value);\n\t\tconst isZenMode = this.getRuntimeValue(LayoutStateKeys.ZEN_MODE_ACTIVE);\n\n\t\tif (key.scope === StorageScope.PROFILE) {\n\t\t\tif (!isZenMode || !key.zenModeIgnore) {\n\t\t\t\tthis.saveKeyToStorage<T>(key);\n\t\t\t\tthis.updateLegacySettingsFromState(key, value);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate isActivityBarHidden(): boolean {\n\t\tconst oldValue = this.configurationService.getValue<\n\t\t\tboolean | undefined\n\t\t>(\"workbench.activityBar.visible\");\n\t\tif (oldValue !== undefined) {\n\t\t\treturn !oldValue;\n\t\t}\n\n\t\treturn (\n\t\t\tthis.configurationService.getValue(\n\t\t\t\tLayoutSettings.ACTIVITY_BAR_LOCATION,\n\t\t\t) !== ActivityBarPosition.DEFAULT\n\t\t);\n\t}\n\n\tprivate setRuntimeValueAndFire<T extends StorageKeyType>(\n\t\tkey: RuntimeStateKey<T>,\n\t\tvalue: T,\n\t): void {\n\t\tconst previousValue = this.stateCache.get(key.name);\n\t\tif (previousValue === value) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setRuntimeValue(key, value);\n\t\tthis._onDidChangeState.fire({ key, value });\n\t}\n\n\tprivate saveKeyToStorage<T extends StorageKeyType>(\n\t\tkey: WorkbenchLayoutStateKey<T>,\n\t): void {\n\t\tconst value = this.stateCache.get(key.name) as T;\n\t\tthis.storageService.store(\n\t\t\t`${LayoutStateModel.STORAGE_PREFIX}${key.name}`,\n\t\t\ttypeof value === \"object\" ? JSON.stringify(value) : value,\n\t\t\tkey.scope,\n\t\t\tkey.target,\n\t\t);\n\t}\n\n\tprivate loadKeyFromStorage<T extends StorageKeyType>(\n\t\tkey: WorkbenchLayoutStateKey<T>,\n\t): T | undefined {\n\t\tlet value: any = this.storageService.get(\n\t\t\t`${LayoutStateModel.STORAGE_PREFIX}${key.name}`,\n\t\t\tkey.scope,\n\t\t);\n\n\t\tif (value !== undefined) {\n\t\t\tswitch (typeof key.defaultValue) {\n\t\t\t\tcase \"boolean\":\n\t\t\t\t\tvalue = value === \"true\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"number\":\n\t\t\t\t\tvalue = Number.parseInt(value);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"object\":\n\t\t\t\t\tvalue = JSON.parse(value);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn value as T | undefined;\n\t}\n}\n\n//#endregion\n"],
  "mappings": "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",
  "names": ["LayoutClasses", "position", "editors", "i", "size", "WorkbenchLayoutSettings", "LegacyWorkbenchLayoutSettings", "key"]
}
