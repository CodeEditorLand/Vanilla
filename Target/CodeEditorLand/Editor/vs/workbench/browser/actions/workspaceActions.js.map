{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/actions/workspaceActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize, localize2 } from '../../../nls.js';\nimport { ITelemetryData } from '../../../platform/telemetry/common/telemetry.js';\nimport { IWorkspaceContextService, WorkbenchState, IWorkspaceFolder, hasWorkspaceFileExtension } from '../../../platform/workspace/common/workspace.js';\nimport { IWorkspaceEditingService } from '../../services/workspaces/common/workspaceEditing.js';\nimport { IEditorService } from '../../services/editor/common/editorService.js';\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\nimport { ADD_ROOT_FOLDER_COMMAND_ID, ADD_ROOT_FOLDER_LABEL, PICK_WORKSPACE_FOLDER_COMMAND_ID, SET_ROOT_FOLDER_COMMAND_ID } from './workspaceCommands.js';\nimport { IFileDialogService } from '../../../platform/dialogs/common/dialogs.js';\nimport { MenuRegistry, MenuId, Action2, registerAction2 } from '../../../platform/actions/common/actions.js';\nimport { EmptyWorkspaceSupportContext, EnterMultiRootWorkspaceSupportContext, OpenFolderWorkspaceSupportContext, WorkbenchStateContext, WorkspaceFolderCountContext } from '../../common/contextkeys.js';\nimport { ServicesAccessor } from '../../../platform/instantiation/common/instantiation.js';\nimport { IHostService } from '../../services/host/browser/host.js';\nimport { KeyChord, KeyCode, KeyMod } from '../../../base/common/keyCodes.js';\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\nimport { IWorkbenchEnvironmentService } from '../../services/environment/common/environmentService.js';\nimport { IWorkspacesService } from '../../../platform/workspaces/common/workspaces.js';\nimport { KeybindingWeight } from '../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { IsMacNativeContext } from '../../../platform/contextkey/common/contextkeys.js';\nimport { ILocalizedString } from '../../../platform/action/common/action.js';\nimport { Categories } from '../../../platform/action/common/actionCommonCategories.js';\n\nconst workspacesCategory: ILocalizedString = localize2('workspaces', 'Workspaces');\n\nexport class OpenFileAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.files.openFile';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: OpenFileAction.ID,\n\t\t\ttitle: localize2('openFile', 'Open File...'),\n\t\t\tcategory: Categories.File,\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\twhen: IsMacNativeContext.toNegated(),\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyO\n\t\t\t}\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor, data?: ITelemetryData): Promise<void> {\n\t\tconst fileDialogService = accessor.get(IFileDialogService);\n\n\t\treturn fileDialogService.pickFileAndOpen({ forceNewWindow: false, telemetryExtraData: data });\n\t}\n}\n\nexport class OpenFolderAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.files.openFolder';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: OpenFolderAction.ID,\n\t\t\ttitle: localize2('openFolder', 'Open Folder...'),\n\t\t\tcategory: Categories.File,\n\t\t\tf1: true,\n\t\t\tprecondition: OpenFolderWorkspaceSupportContext,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: undefined,\n\t\t\t\tlinux: {\n\t\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyO)\n\t\t\t\t},\n\t\t\t\twin: {\n\t\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyO)\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor, data?: ITelemetryData): Promise<void> {\n\t\tconst fileDialogService = accessor.get(IFileDialogService);\n\n\t\treturn fileDialogService.pickFolderAndOpen({ forceNewWindow: false, telemetryExtraData: data });\n\t}\n}\n\nexport class OpenFolderViaWorkspaceAction extends Action2 {\n\n\t// This action swaps the folders of a workspace with\n\t// the selected folder and is a workaround for providing\n\t// \"Open Folder...\" in environments that do not support\n\t// this without having a workspace open (e.g. web serverless)\n\n\tstatic readonly ID = 'workbench.action.files.openFolderViaWorkspace';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: OpenFolderViaWorkspaceAction.ID,\n\t\t\ttitle: localize2('openFolder', 'Open Folder...'),\n\t\t\tcategory: Categories.File,\n\t\t\tf1: true,\n\t\t\tprecondition: ContextKeyExpr.and(OpenFolderWorkspaceSupportContext.toNegated(), WorkbenchStateContext.isEqualTo('workspace')),\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyO\n\t\t\t}\n\t\t});\n\t}\n\n\toverride run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst commandService = accessor.get(ICommandService);\n\n\t\treturn commandService.executeCommand(SET_ROOT_FOLDER_COMMAND_ID);\n\t}\n}\n\nexport class OpenFileFolderAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.files.openFileFolder';\n\tstatic readonly LABEL: ILocalizedString = localize2('openFileFolder', 'Open...');\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: OpenFileFolderAction.ID,\n\t\t\ttitle: OpenFileFolderAction.LABEL,\n\t\t\tcategory: Categories.File,\n\t\t\tf1: true,\n\t\t\tprecondition: ContextKeyExpr.and(IsMacNativeContext, OpenFolderWorkspaceSupportContext),\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyO\n\t\t\t}\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor, data?: ITelemetryData): Promise<void> {\n\t\tconst fileDialogService = accessor.get(IFileDialogService);\n\n\t\treturn fileDialogService.pickFileFolderAndOpen({ forceNewWindow: false, telemetryExtraData: data });\n\t}\n}\n\nclass OpenWorkspaceAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.openWorkspace';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: OpenWorkspaceAction.ID,\n\t\t\ttitle: localize2('openWorkspaceAction', 'Open Workspace from File...'),\n\t\t\tcategory: Categories.File,\n\t\t\tf1: true,\n\t\t\tprecondition: EnterMultiRootWorkspaceSupportContext\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor, data?: ITelemetryData): Promise<void> {\n\t\tconst fileDialogService = accessor.get(IFileDialogService);\n\n\t\treturn fileDialogService.pickWorkspaceAndOpen({ telemetryExtraData: data });\n\t}\n}\n\nclass CloseWorkspaceAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.closeFolder';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: CloseWorkspaceAction.ID,\n\t\t\ttitle: localize2('closeWorkspace', 'Close Workspace'),\n\t\t\tcategory: workspacesCategory,\n\t\t\tf1: true,\n\t\t\tprecondition: ContextKeyExpr.and(WorkbenchStateContext.notEqualsTo('empty'), EmptyWorkspaceSupportContext),\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyF)\n\t\t\t}\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst hostService = accessor.get(IHostService);\n\t\tconst environmentService = accessor.get(IWorkbenchEnvironmentService);\n\n\t\treturn hostService.openWindow({ forceReuseWindow: true, remoteAuthority: environmentService.remoteAuthority });\n\t}\n}\n\nclass OpenWorkspaceConfigFileAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.openWorkspaceConfigFile';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: OpenWorkspaceConfigFileAction.ID,\n\t\t\ttitle: localize2('openWorkspaceConfigFile', 'Open Workspace Configuration File'),\n\t\t\tcategory: workspacesCategory,\n\t\t\tf1: true,\n\t\t\tprecondition: WorkbenchStateContext.isEqualTo('workspace')\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst contextService = accessor.get(IWorkspaceContextService);\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\tconst configuration = contextService.getWorkspace().configuration;\n\t\tif (configuration) {\n\t\t\tawait editorService.openEditor({ resource: configuration, options: { pinned: true } });\n\t\t}\n\t}\n}\n\nexport class AddRootFolderAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.addRootFolder';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: AddRootFolderAction.ID,\n\t\t\ttitle: ADD_ROOT_FOLDER_LABEL,\n\t\t\tcategory: workspacesCategory,\n\t\t\tf1: true,\n\t\t\tprecondition: ContextKeyExpr.or(EnterMultiRootWorkspaceSupportContext, WorkbenchStateContext.isEqualTo('workspace'))\n\t\t});\n\t}\n\n\toverride run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst commandService = accessor.get(ICommandService);\n\n\t\treturn commandService.executeCommand(ADD_ROOT_FOLDER_COMMAND_ID);\n\t}\n}\n\nexport class RemoveRootFolderAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.removeRootFolder';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: RemoveRootFolderAction.ID,\n\t\t\ttitle: localize2('globalRemoveFolderFromWorkspace', 'Remove Folder from Workspace...'),\n\t\t\tcategory: workspacesCategory,\n\t\t\tf1: true,\n\t\t\tprecondition: ContextKeyExpr.and(WorkspaceFolderCountContext.notEqualsTo('0'), ContextKeyExpr.or(EnterMultiRootWorkspaceSupportContext, WorkbenchStateContext.isEqualTo('workspace')))\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst commandService = accessor.get(ICommandService);\n\t\tconst workspaceEditingService = accessor.get(IWorkspaceEditingService);\n\n\t\tconst folder = await commandService.executeCommand<IWorkspaceFolder>(PICK_WORKSPACE_FOLDER_COMMAND_ID);\n\t\tif (folder) {\n\t\t\tawait workspaceEditingService.removeFolders([folder.uri]);\n\t\t}\n\t}\n}\n\nclass SaveWorkspaceAsAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.saveWorkspaceAs';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: SaveWorkspaceAsAction.ID,\n\t\t\ttitle: localize2('saveWorkspaceAsAction', 'Save Workspace As...'),\n\t\t\tcategory: workspacesCategory,\n\t\t\tf1: true,\n\t\t\tprecondition: EnterMultiRootWorkspaceSupportContext\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst workspaceEditingService = accessor.get(IWorkspaceEditingService);\n\t\tconst contextService = accessor.get(IWorkspaceContextService);\n\n\t\tconst configPathUri = await workspaceEditingService.pickNewWorkspacePath();\n\t\tif (configPathUri && hasWorkspaceFileExtension(configPathUri)) {\n\t\t\tswitch (contextService.getWorkbenchState()) {\n\t\t\t\tcase WorkbenchState.EMPTY:\n\t\t\t\tcase WorkbenchState.FOLDER: {\n\t\t\t\t\tconst folders = contextService.getWorkspace().folders.map(folder => ({ uri: folder.uri }));\n\t\t\t\t\treturn workspaceEditingService.createAndEnterWorkspace(folders, configPathUri);\n\t\t\t\t}\n\t\t\t\tcase WorkbenchState.WORKSPACE:\n\t\t\t\t\treturn workspaceEditingService.saveAndEnterWorkspace(configPathUri);\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass DuplicateWorkspaceInNewWindowAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.duplicateWorkspaceInNewWindow';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: DuplicateWorkspaceInNewWindowAction.ID,\n\t\t\ttitle: localize2('duplicateWorkspaceInNewWindow', 'Duplicate As Workspace in New Window'),\n\t\t\tcategory: workspacesCategory,\n\t\t\tf1: true,\n\t\t\tprecondition: EnterMultiRootWorkspaceSupportContext\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst workspaceContextService = accessor.get(IWorkspaceContextService);\n\t\tconst workspaceEditingService = accessor.get(IWorkspaceEditingService);\n\t\tconst hostService = accessor.get(IHostService);\n\t\tconst workspacesService = accessor.get(IWorkspacesService);\n\t\tconst environmentService = accessor.get(IWorkbenchEnvironmentService);\n\n\t\tconst folders = workspaceContextService.getWorkspace().folders;\n\t\tconst remoteAuthority = environmentService.remoteAuthority;\n\n\t\tconst newWorkspace = await workspacesService.createUntitledWorkspace(folders, remoteAuthority);\n\t\tawait workspaceEditingService.copyWorkspaceSettings(newWorkspace);\n\n\t\treturn hostService.openWindow([{ workspaceUri: newWorkspace.configPath }], { forceNewWindow: true, remoteAuthority });\n\t}\n}\n\n// --- Actions Registration\n\nregisterAction2(AddRootFolderAction);\nregisterAction2(RemoveRootFolderAction);\nregisterAction2(OpenFileAction);\nregisterAction2(OpenFolderAction);\nregisterAction2(OpenFolderViaWorkspaceAction);\nregisterAction2(OpenFileFolderAction);\nregisterAction2(OpenWorkspaceAction);\nregisterAction2(OpenWorkspaceConfigFileAction);\nregisterAction2(CloseWorkspaceAction);\nregisterAction2(SaveWorkspaceAsAction);\nregisterAction2(DuplicateWorkspaceInNewWindowAction);\n\n// --- Menu Registration\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\tgroup: '2_open',\n\tcommand: {\n\t\tid: OpenFileAction.ID,\n\t\ttitle: localize({ key: 'miOpenFile', comment: ['&& denotes a mnemonic'] }, \"&&Open File...\")\n\t},\n\torder: 1,\n\twhen: IsMacNativeContext.toNegated()\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\tgroup: '2_open',\n\tcommand: {\n\t\tid: OpenFolderAction.ID,\n\t\ttitle: localize({ key: 'miOpenFolder', comment: ['&& denotes a mnemonic'] }, \"Open &&Folder...\")\n\t},\n\torder: 2,\n\twhen: OpenFolderWorkspaceSupportContext\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\tgroup: '2_open',\n\tcommand: {\n\t\tid: OpenFolderViaWorkspaceAction.ID,\n\t\ttitle: localize({ key: 'miOpenFolder', comment: ['&& denotes a mnemonic'] }, \"Open &&Folder...\")\n\t},\n\torder: 2,\n\twhen: ContextKeyExpr.and(OpenFolderWorkspaceSupportContext.toNegated(), WorkbenchStateContext.isEqualTo('workspace'))\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\tgroup: '2_open',\n\tcommand: {\n\t\tid: OpenFileFolderAction.ID,\n\t\ttitle: localize({ key: 'miOpen', comment: ['&& denotes a mnemonic'] }, \"&&Open...\")\n\t},\n\torder: 1,\n\twhen: ContextKeyExpr.and(IsMacNativeContext, OpenFolderWorkspaceSupportContext)\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\tgroup: '2_open',\n\tcommand: {\n\t\tid: OpenWorkspaceAction.ID,\n\t\ttitle: localize({ key: 'miOpenWorkspace', comment: ['&& denotes a mnemonic'] }, \"Open Wor&&kspace from File...\")\n\t},\n\torder: 3,\n\twhen: EnterMultiRootWorkspaceSupportContext\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\tgroup: '3_workspace',\n\tcommand: {\n\t\tid: ADD_ROOT_FOLDER_COMMAND_ID,\n\t\ttitle: localize({ key: 'miAddFolderToWorkspace', comment: ['&& denotes a mnemonic'] }, \"A&&dd Folder to Workspace...\")\n\t},\n\twhen: ContextKeyExpr.or(EnterMultiRootWorkspaceSupportContext, WorkbenchStateContext.isEqualTo('workspace')),\n\torder: 1\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\tgroup: '3_workspace',\n\tcommand: {\n\t\tid: SaveWorkspaceAsAction.ID,\n\t\ttitle: localize('miSaveWorkspaceAs', \"Save Workspace As...\")\n\t},\n\torder: 2,\n\twhen: EnterMultiRootWorkspaceSupportContext\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\tgroup: '3_workspace',\n\tcommand: {\n\t\tid: DuplicateWorkspaceInNewWindowAction.ID,\n\t\ttitle: localize('duplicateWorkspace', \"Duplicate Workspace\")\n\t},\n\torder: 3,\n\twhen: EnterMultiRootWorkspaceSupportContext\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\tgroup: '6_close',\n\tcommand: {\n\t\tid: CloseWorkspaceAction.ID,\n\t\ttitle: localize({ key: 'miCloseFolder', comment: ['&& denotes a mnemonic'] }, \"Close &&Folder\")\n\t},\n\torder: 3,\n\twhen: ContextKeyExpr.and(WorkbenchStateContext.isEqualTo('folder'), EmptyWorkspaceSupportContext)\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\tgroup: '6_close',\n\tcommand: {\n\t\tid: CloseWorkspaceAction.ID,\n\t\ttitle: localize({ key: 'miCloseWorkspace', comment: ['&& denotes a mnemonic'] }, \"Close &&Workspace\")\n\t},\n\torder: 3,\n\twhen: ContextKeyExpr.and(WorkbenchStateContext.isEqualTo('workspace'), EmptyWorkspaceSupportContext)\n});\n"],
  "mappings": "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",
  "names": []
}
