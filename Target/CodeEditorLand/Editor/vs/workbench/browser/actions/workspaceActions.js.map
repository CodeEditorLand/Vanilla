{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/actions/workspaceActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyChord, KeyCode, KeyMod } from \"../../../base/common/keyCodes.js\";\nimport { localize, localize2 } from \"../../../nls.js\";\nimport type { ILocalizedString } from \"../../../platform/action/common/action.js\";\nimport { Categories } from \"../../../platform/action/common/actionCommonCategories.js\";\nimport {\n\tAction2,\n\tMenuId,\n\tMenuRegistry,\n\tregisterAction2,\n} from \"../../../platform/actions/common/actions.js\";\nimport { ICommandService } from \"../../../platform/commands/common/commands.js\";\nimport { ContextKeyExpr } from \"../../../platform/contextkey/common/contextkey.js\";\nimport { IsMacNativeContext } from \"../../../platform/contextkey/common/contextkeys.js\";\nimport { IFileDialogService } from \"../../../platform/dialogs/common/dialogs.js\";\nimport type { ServicesAccessor } from \"../../../platform/instantiation/common/instantiation.js\";\nimport { KeybindingWeight } from \"../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport type { ITelemetryData } from \"../../../platform/telemetry/common/telemetry.js\";\nimport {\n\tIWorkspaceContextService,\n\ttype IWorkspaceFolder,\n\tWorkbenchState,\n\thasWorkspaceFileExtension,\n} from \"../../../platform/workspace/common/workspace.js\";\nimport { IWorkspacesService } from \"../../../platform/workspaces/common/workspaces.js\";\nimport {\n\tEmptyWorkspaceSupportContext,\n\tEnterMultiRootWorkspaceSupportContext,\n\tOpenFolderWorkspaceSupportContext,\n\tWorkbenchStateContext,\n\tWorkspaceFolderCountContext,\n} from \"../../common/contextkeys.js\";\nimport { IEditorService } from \"../../services/editor/common/editorService.js\";\nimport { IWorkbenchEnvironmentService } from \"../../services/environment/common/environmentService.js\";\nimport { IHostService } from \"../../services/host/browser/host.js\";\nimport { IWorkspaceEditingService } from \"../../services/workspaces/common/workspaceEditing.js\";\nimport {\n\tADD_ROOT_FOLDER_COMMAND_ID,\n\tADD_ROOT_FOLDER_LABEL,\n\tPICK_WORKSPACE_FOLDER_COMMAND_ID,\n\tSET_ROOT_FOLDER_COMMAND_ID,\n} from \"./workspaceCommands.js\";\n\nconst workspacesCategory: ILocalizedString = localize2(\n\t\"workspaces\",\n\t\"Workspaces\",\n);\n\nexport class OpenFileAction extends Action2 {\n\tstatic readonly ID = \"workbench.action.files.openFile\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: OpenFileAction.ID,\n\t\t\ttitle: localize2(\"openFile\", \"Open File...\"),\n\t\t\tcategory: Categories.File,\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\twhen: IsMacNativeContext.toNegated(),\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyO,\n\t\t\t},\n\t\t});\n\t}\n\n\toverride async run(\n\t\taccessor: ServicesAccessor,\n\t\tdata?: ITelemetryData,\n\t): Promise<void> {\n\t\tconst fileDialogService = accessor.get(IFileDialogService);\n\n\t\treturn fileDialogService.pickFileAndOpen({\n\t\t\tforceNewWindow: false,\n\t\t\ttelemetryExtraData: data,\n\t\t});\n\t}\n}\n\nexport class OpenFolderAction extends Action2 {\n\tstatic readonly ID = \"workbench.action.files.openFolder\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: OpenFolderAction.ID,\n\t\t\ttitle: localize2(\"openFolder\", \"Open Folder...\"),\n\t\t\tcategory: Categories.File,\n\t\t\tf1: true,\n\t\t\tprecondition: OpenFolderWorkspaceSupportContext,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: undefined,\n\t\t\t\tlinux: {\n\t\t\t\t\tprimary: KeyChord(\n\t\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyO,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\twin: {\n\t\t\t\t\tprimary: KeyChord(\n\t\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyO,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\toverride async run(\n\t\taccessor: ServicesAccessor,\n\t\tdata?: ITelemetryData,\n\t): Promise<void> {\n\t\tconst fileDialogService = accessor.get(IFileDialogService);\n\n\t\treturn fileDialogService.pickFolderAndOpen({\n\t\t\tforceNewWindow: false,\n\t\t\ttelemetryExtraData: data,\n\t\t});\n\t}\n}\n\nexport class OpenFolderViaWorkspaceAction extends Action2 {\n\t// This action swaps the folders of a workspace with\n\t// the selected folder and is a workaround for providing\n\t// \"Open Folder...\" in environments that do not support\n\t// this without having a workspace open (e.g. web serverless)\n\n\tstatic readonly ID = \"workbench.action.files.openFolderViaWorkspace\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: OpenFolderViaWorkspaceAction.ID,\n\t\t\ttitle: localize2(\"openFolder\", \"Open Folder...\"),\n\t\t\tcategory: Categories.File,\n\t\t\tf1: true,\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tOpenFolderWorkspaceSupportContext.toNegated(),\n\t\t\t\tWorkbenchStateContext.isEqualTo(\"workspace\"),\n\t\t\t),\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyO,\n\t\t\t},\n\t\t});\n\t}\n\n\toverride run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst commandService = accessor.get(ICommandService);\n\n\t\treturn commandService.executeCommand(SET_ROOT_FOLDER_COMMAND_ID);\n\t}\n}\n\nexport class OpenFileFolderAction extends Action2 {\n\tstatic readonly ID = \"workbench.action.files.openFileFolder\";\n\tstatic readonly LABEL: ILocalizedString = localize2(\n\t\t\"openFileFolder\",\n\t\t\"Open...\",\n\t);\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: OpenFileFolderAction.ID,\n\t\t\ttitle: OpenFileFolderAction.LABEL,\n\t\t\tcategory: Categories.File,\n\t\t\tf1: true,\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tIsMacNativeContext,\n\t\t\t\tOpenFolderWorkspaceSupportContext,\n\t\t\t),\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyO,\n\t\t\t},\n\t\t});\n\t}\n\n\toverride async run(\n\t\taccessor: ServicesAccessor,\n\t\tdata?: ITelemetryData,\n\t): Promise<void> {\n\t\tconst fileDialogService = accessor.get(IFileDialogService);\n\n\t\treturn fileDialogService.pickFileFolderAndOpen({\n\t\t\tforceNewWindow: false,\n\t\t\ttelemetryExtraData: data,\n\t\t});\n\t}\n}\n\nclass OpenWorkspaceAction extends Action2 {\n\tstatic readonly ID = \"workbench.action.openWorkspace\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: OpenWorkspaceAction.ID,\n\t\t\ttitle: localize2(\n\t\t\t\t\"openWorkspaceAction\",\n\t\t\t\t\"Open Workspace from File...\",\n\t\t\t),\n\t\t\tcategory: Categories.File,\n\t\t\tf1: true,\n\t\t\tprecondition: EnterMultiRootWorkspaceSupportContext,\n\t\t});\n\t}\n\n\toverride async run(\n\t\taccessor: ServicesAccessor,\n\t\tdata?: ITelemetryData,\n\t): Promise<void> {\n\t\tconst fileDialogService = accessor.get(IFileDialogService);\n\n\t\treturn fileDialogService.pickWorkspaceAndOpen({\n\t\t\ttelemetryExtraData: data,\n\t\t});\n\t}\n}\n\nclass CloseWorkspaceAction extends Action2 {\n\tstatic readonly ID = \"workbench.action.closeFolder\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: CloseWorkspaceAction.ID,\n\t\t\ttitle: localize2(\"closeWorkspace\", \"Close Workspace\"),\n\t\t\tcategory: workspacesCategory,\n\t\t\tf1: true,\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tWorkbenchStateContext.notEqualsTo(\"empty\"),\n\t\t\t\tEmptyWorkspaceSupportContext,\n\t\t\t),\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyF),\n\t\t\t},\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst hostService = accessor.get(IHostService);\n\t\tconst environmentService = accessor.get(IWorkbenchEnvironmentService);\n\n\t\treturn hostService.openWindow({\n\t\t\tforceReuseWindow: true,\n\t\t\tremoteAuthority: environmentService.remoteAuthority,\n\t\t});\n\t}\n}\n\nclass OpenWorkspaceConfigFileAction extends Action2 {\n\tstatic readonly ID = \"workbench.action.openWorkspaceConfigFile\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: OpenWorkspaceConfigFileAction.ID,\n\t\t\ttitle: localize2(\n\t\t\t\t\"openWorkspaceConfigFile\",\n\t\t\t\t\"Open Workspace Configuration File\",\n\t\t\t),\n\t\t\tcategory: workspacesCategory,\n\t\t\tf1: true,\n\t\t\tprecondition: WorkbenchStateContext.isEqualTo(\"workspace\"),\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst contextService = accessor.get(IWorkspaceContextService);\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\tconst configuration = contextService.getWorkspace().configuration;\n\t\tif (configuration) {\n\t\t\tawait editorService.openEditor({\n\t\t\t\tresource: configuration,\n\t\t\t\toptions: { pinned: true },\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport class AddRootFolderAction extends Action2 {\n\tstatic readonly ID = \"workbench.action.addRootFolder\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: AddRootFolderAction.ID,\n\t\t\ttitle: ADD_ROOT_FOLDER_LABEL,\n\t\t\tcategory: workspacesCategory,\n\t\t\tf1: true,\n\t\t\tprecondition: ContextKeyExpr.or(\n\t\t\t\tEnterMultiRootWorkspaceSupportContext,\n\t\t\t\tWorkbenchStateContext.isEqualTo(\"workspace\"),\n\t\t\t),\n\t\t});\n\t}\n\n\toverride run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst commandService = accessor.get(ICommandService);\n\n\t\treturn commandService.executeCommand(ADD_ROOT_FOLDER_COMMAND_ID);\n\t}\n}\n\nexport class RemoveRootFolderAction extends Action2 {\n\tstatic readonly ID = \"workbench.action.removeRootFolder\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: RemoveRootFolderAction.ID,\n\t\t\ttitle: localize2(\n\t\t\t\t\"globalRemoveFolderFromWorkspace\",\n\t\t\t\t\"Remove Folder from Workspace...\",\n\t\t\t),\n\t\t\tcategory: workspacesCategory,\n\t\t\tf1: true,\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tWorkspaceFolderCountContext.notEqualsTo(\"0\"),\n\t\t\t\tContextKeyExpr.or(\n\t\t\t\t\tEnterMultiRootWorkspaceSupportContext,\n\t\t\t\t\tWorkbenchStateContext.isEqualTo(\"workspace\"),\n\t\t\t\t),\n\t\t\t),\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst commandService = accessor.get(ICommandService);\n\t\tconst workspaceEditingService = accessor.get(IWorkspaceEditingService);\n\n\t\tconst folder = await commandService.executeCommand<IWorkspaceFolder>(\n\t\t\tPICK_WORKSPACE_FOLDER_COMMAND_ID,\n\t\t);\n\t\tif (folder) {\n\t\t\tawait workspaceEditingService.removeFolders([folder.uri]);\n\t\t}\n\t}\n}\n\nclass SaveWorkspaceAsAction extends Action2 {\n\tstatic readonly ID = \"workbench.action.saveWorkspaceAs\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: SaveWorkspaceAsAction.ID,\n\t\t\ttitle: localize2(\"saveWorkspaceAsAction\", \"Save Workspace As...\"),\n\t\t\tcategory: workspacesCategory,\n\t\t\tf1: true,\n\t\t\tprecondition: EnterMultiRootWorkspaceSupportContext,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst workspaceEditingService = accessor.get(IWorkspaceEditingService);\n\t\tconst contextService = accessor.get(IWorkspaceContextService);\n\n\t\tconst configPathUri =\n\t\t\tawait workspaceEditingService.pickNewWorkspacePath();\n\t\tif (configPathUri && hasWorkspaceFileExtension(configPathUri)) {\n\t\t\tswitch (contextService.getWorkbenchState()) {\n\t\t\t\tcase WorkbenchState.EMPTY:\n\t\t\t\tcase WorkbenchState.FOLDER: {\n\t\t\t\t\tconst folders = contextService\n\t\t\t\t\t\t.getWorkspace()\n\t\t\t\t\t\t.folders.map((folder) => ({ uri: folder.uri }));\n\t\t\t\t\treturn workspaceEditingService.createAndEnterWorkspace(\n\t\t\t\t\t\tfolders,\n\t\t\t\t\t\tconfigPathUri,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tcase WorkbenchState.WORKSPACE:\n\t\t\t\t\treturn workspaceEditingService.saveAndEnterWorkspace(\n\t\t\t\t\t\tconfigPathUri,\n\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass DuplicateWorkspaceInNewWindowAction extends Action2 {\n\tstatic readonly ID = \"workbench.action.duplicateWorkspaceInNewWindow\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: DuplicateWorkspaceInNewWindowAction.ID,\n\t\t\ttitle: localize2(\n\t\t\t\t\"duplicateWorkspaceInNewWindow\",\n\t\t\t\t\"Duplicate As Workspace in New Window\",\n\t\t\t),\n\t\t\tcategory: workspacesCategory,\n\t\t\tf1: true,\n\t\t\tprecondition: EnterMultiRootWorkspaceSupportContext,\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst workspaceContextService = accessor.get(IWorkspaceContextService);\n\t\tconst workspaceEditingService = accessor.get(IWorkspaceEditingService);\n\t\tconst hostService = accessor.get(IHostService);\n\t\tconst workspacesService = accessor.get(IWorkspacesService);\n\t\tconst environmentService = accessor.get(IWorkbenchEnvironmentService);\n\n\t\tconst folders = workspaceContextService.getWorkspace().folders;\n\t\tconst remoteAuthority = environmentService.remoteAuthority;\n\n\t\tconst newWorkspace = await workspacesService.createUntitledWorkspace(\n\t\t\tfolders,\n\t\t\tremoteAuthority,\n\t\t);\n\t\tawait workspaceEditingService.copyWorkspaceSettings(newWorkspace);\n\n\t\treturn hostService.openWindow(\n\t\t\t[{ workspaceUri: newWorkspace.configPath }],\n\t\t\t{ forceNewWindow: true, remoteAuthority },\n\t\t);\n\t}\n}\n\n// --- Actions Registration\n\nregisterAction2(AddRootFolderAction);\nregisterAction2(RemoveRootFolderAction);\nregisterAction2(OpenFileAction);\nregisterAction2(OpenFolderAction);\nregisterAction2(OpenFolderViaWorkspaceAction);\nregisterAction2(OpenFileFolderAction);\nregisterAction2(OpenWorkspaceAction);\nregisterAction2(OpenWorkspaceConfigFileAction);\nregisterAction2(CloseWorkspaceAction);\nregisterAction2(SaveWorkspaceAsAction);\nregisterAction2(DuplicateWorkspaceInNewWindowAction);\n\n// --- Menu Registration\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\tgroup: \"2_open\",\n\tcommand: {\n\t\tid: OpenFileAction.ID,\n\t\ttitle: localize(\n\t\t\t{ key: \"miOpenFile\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\"&&Open File...\",\n\t\t),\n\t},\n\torder: 1,\n\twhen: IsMacNativeContext.toNegated(),\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\tgroup: \"2_open\",\n\tcommand: {\n\t\tid: OpenFolderAction.ID,\n\t\ttitle: localize(\n\t\t\t{ key: \"miOpenFolder\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\"Open &&Folder...\",\n\t\t),\n\t},\n\torder: 2,\n\twhen: OpenFolderWorkspaceSupportContext,\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\tgroup: \"2_open\",\n\tcommand: {\n\t\tid: OpenFolderViaWorkspaceAction.ID,\n\t\ttitle: localize(\n\t\t\t{ key: \"miOpenFolder\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\"Open &&Folder...\",\n\t\t),\n\t},\n\torder: 2,\n\twhen: ContextKeyExpr.and(\n\t\tOpenFolderWorkspaceSupportContext.toNegated(),\n\t\tWorkbenchStateContext.isEqualTo(\"workspace\"),\n\t),\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\tgroup: \"2_open\",\n\tcommand: {\n\t\tid: OpenFileFolderAction.ID,\n\t\ttitle: localize(\n\t\t\t{ key: \"miOpen\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\"&&Open...\",\n\t\t),\n\t},\n\torder: 1,\n\twhen: ContextKeyExpr.and(\n\t\tIsMacNativeContext,\n\t\tOpenFolderWorkspaceSupportContext,\n\t),\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\tgroup: \"2_open\",\n\tcommand: {\n\t\tid: OpenWorkspaceAction.ID,\n\t\ttitle: localize(\n\t\t\t{ key: \"miOpenWorkspace\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\"Open Wor&&kspace from File...\",\n\t\t),\n\t},\n\torder: 3,\n\twhen: EnterMultiRootWorkspaceSupportContext,\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\tgroup: \"3_workspace\",\n\tcommand: {\n\t\tid: ADD_ROOT_FOLDER_COMMAND_ID,\n\t\ttitle: localize(\n\t\t\t{\n\t\t\t\tkey: \"miAddFolderToWorkspace\",\n\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t},\n\t\t\t\"A&&dd Folder to Workspace...\",\n\t\t),\n\t},\n\twhen: ContextKeyExpr.or(\n\t\tEnterMultiRootWorkspaceSupportContext,\n\t\tWorkbenchStateContext.isEqualTo(\"workspace\"),\n\t),\n\torder: 1,\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\tgroup: \"3_workspace\",\n\tcommand: {\n\t\tid: SaveWorkspaceAsAction.ID,\n\t\ttitle: localize(\"miSaveWorkspaceAs\", \"Save Workspace As...\"),\n\t},\n\torder: 2,\n\twhen: EnterMultiRootWorkspaceSupportContext,\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\tgroup: \"3_workspace\",\n\tcommand: {\n\t\tid: DuplicateWorkspaceInNewWindowAction.ID,\n\t\ttitle: localize(\"duplicateWorkspace\", \"Duplicate Workspace\"),\n\t},\n\torder: 3,\n\twhen: EnterMultiRootWorkspaceSupportContext,\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\tgroup: \"6_close\",\n\tcommand: {\n\t\tid: CloseWorkspaceAction.ID,\n\t\ttitle: localize(\n\t\t\t{ key: \"miCloseFolder\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\"Close &&Folder\",\n\t\t),\n\t},\n\torder: 3,\n\twhen: ContextKeyExpr.and(\n\t\tWorkbenchStateContext.isEqualTo(\"folder\"),\n\t\tEmptyWorkspaceSupportContext,\n\t),\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\tgroup: \"6_close\",\n\tcommand: {\n\t\tid: CloseWorkspaceAction.ID,\n\t\ttitle: localize(\n\t\t\t{ key: \"miCloseWorkspace\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\"Close &&Workspace\",\n\t\t),\n\t},\n\torder: 3,\n\twhen: ContextKeyExpr.and(\n\t\tWorkbenchStateContext.isEqualTo(\"workspace\"),\n\t\tEmptyWorkspaceSupportContext,\n\t),\n});\n"],
  "mappings": "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",
  "names": []
}
