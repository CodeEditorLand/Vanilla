import{localize as s,localize2 as n}from"../../../nls.js";import{IWorkspaceContextService as E,WorkbenchState as x,hasWorkspaceFileExtension as Y}from"../../../platform/workspace/common/workspace.js";import{IWorkspaceEditingService as T}from"../../services/workspaces/common/workspaceEditing.js";import{IEditorService as j}from"../../services/editor/common/editorService.js";import{ICommandService as K}from"../../../platform/commands/common/commands.js";import{ADD_ROOT_FOLDER_COMMAND_ID as B,ADD_ROOT_FOLDER_LABEL as G,PICK_WORKSPACE_FOLDER_COMMAND_ID as J,SET_ROOT_FOLDER_COMMAND_ID as Q}from"./workspaceCommands.js";import{IFileDialogService as I}from"../../../platform/dialogs/common/dialogs.js";import{MenuRegistry as d,MenuId as p,Action2 as i,registerAction2 as c}from"../../../platform/actions/common/actions.js";import{EmptyWorkspaceSupportContext as P,EnterMultiRootWorkspaceSupportContext as l,OpenFolderWorkspaceSupportContext as g,WorkbenchStateContext as m,WorkspaceFolderCountContext as X}from"../../common/contextkeys.js";import{IHostService as U}from"../../services/host/browser/host.js";import{KeyChord as R,KeyCode as u,KeyMod as k}from"../../../base/common/keyCodes.js";import{ContextKeyExpr as a}from"../../../platform/contextkey/common/contextkey.js";import{IWorkbenchEnvironmentService as H}from"../../services/environment/common/environmentService.js";import{IWorkspacesService as Z}from"../../../platform/workspaces/common/workspaces.js";import{KeybindingWeight as v}from"../../../platform/keybinding/common/keybindingsRegistry.js";import{IsMacNativeContext as D}from"../../../platform/contextkey/common/contextkeys.js";import{Categories as w}from"../../../platform/action/common/actionCommonCategories.js";const y=n("workspaces","Workspaces");class F extends i{static ID="workbench.action.files.openFile";constructor(){super({id:F.ID,title:n("openFile","Open File..."),category:w.File,f1:!0,keybinding:{when:D.toNegated(),weight:v.WorkbenchContrib,primary:k.CtrlCmd|u.KeyO}})}async run(e,o){return e.get(I).pickFileAndOpen({forceNewWindow:!1,telemetryExtraData:o})}}class S extends i{static ID="workbench.action.files.openFolder";constructor(){super({id:S.ID,title:n("openFolder","Open Folder..."),category:w.File,f1:!0,precondition:g,keybinding:{weight:v.WorkbenchContrib,primary:void 0,linux:{primary:R(k.CtrlCmd|u.KeyK,k.CtrlCmd|u.KeyO)},win:{primary:R(k.CtrlCmd|u.KeyK,k.CtrlCmd|u.KeyO)}}})}async run(e,o){return e.get(I).pickFolderAndOpen({forceNewWindow:!1,telemetryExtraData:o})}}class C extends i{static ID="workbench.action.files.openFolderViaWorkspace";constructor(){super({id:C.ID,title:n("openFolder","Open Folder..."),category:w.File,f1:!0,precondition:a.and(g.toNegated(),m.isEqualTo("workspace")),keybinding:{weight:v.WorkbenchContrib,primary:k.CtrlCmd|u.KeyO}})}run(e){return e.get(K).executeCommand(Q)}}class W extends i{static ID="workbench.action.files.openFileFolder";static LABEL=n("openFileFolder","Open...");constructor(){super({id:W.ID,title:W.LABEL,category:w.File,f1:!0,precondition:a.and(D,g),keybinding:{weight:v.WorkbenchContrib,primary:k.CtrlCmd|u.KeyO}})}async run(e,o){return e.get(I).pickFileFolderAndOpen({forceNewWindow:!1,telemetryExtraData:o})}}class h extends i{static ID="workbench.action.openWorkspace";constructor(){super({id:h.ID,title:n("openWorkspaceAction","Open Workspace from File..."),category:w.File,f1:!0,precondition:l})}async run(e,o){return e.get(I).pickWorkspaceAndOpen({telemetryExtraData:o})}}class f extends i{static ID="workbench.action.closeFolder";constructor(){super({id:f.ID,title:n("closeWorkspace","Close Workspace"),category:y,f1:!0,precondition:a.and(m.notEqualsTo("empty"),P),keybinding:{weight:v.WorkbenchContrib,primary:R(k.CtrlCmd|u.KeyK,u.KeyF)}})}async run(e){const o=e.get(U),r=e.get(H);return o.openWindow({forceReuseWindow:!0,remoteAuthority:r.remoteAuthority})}}class N extends i{static ID="workbench.action.openWorkspaceConfigFile";constructor(){super({id:N.ID,title:n("openWorkspaceConfigFile","Open Workspace Configuration File"),category:y,f1:!0,precondition:m.isEqualTo("workspace")})}async run(e){const o=e.get(E),r=e.get(j),t=o.getWorkspace().configuration;t&&await r.openEditor({resource:t,options:{pinned:!0}})}}class L extends i{static ID="workbench.action.addRootFolder";constructor(){super({id:L.ID,title:G,category:y,f1:!0,precondition:a.or(l,m.isEqualTo("workspace"))})}run(e){return e.get(K).executeCommand(B)}}class _ extends i{static ID="workbench.action.removeRootFolder";constructor(){super({id:_.ID,title:n("globalRemoveFolderFromWorkspace","Remove Folder from Workspace..."),category:y,f1:!0,precondition:a.and(X.notEqualsTo("0"),a.or(l,m.isEqualTo("workspace")))})}async run(e){const o=e.get(K),r=e.get(T),t=await o.executeCommand(J);t&&await r.removeFolders([t.uri])}}class A extends i{static ID="workbench.action.saveWorkspaceAs";constructor(){super({id:A.ID,title:n("saveWorkspaceAsAction","Save Workspace As..."),category:y,f1:!0,precondition:l})}async run(e){const o=e.get(T),r=e.get(E),t=await o.pickNewWorkspacePath();if(t&&Y(t))switch(r.getWorkbenchState()){case x.EMPTY:case x.FOLDER:{const M=r.getWorkspace().folders.map(O=>({uri:O.uri}));return o.createAndEnterWorkspace(M,t)}case x.WORKSPACE:return o.saveAndEnterWorkspace(t)}}}class b extends i{static ID="workbench.action.duplicateWorkspaceInNewWindow";constructor(){super({id:b.ID,title:n("duplicateWorkspaceInNewWindow","Duplicate As Workspace in New Window"),category:y,f1:!0,precondition:l})}async run(e){const o=e.get(E),r=e.get(T),t=e.get(U),M=e.get(Z),O=e.get(H),V=o.getWorkspace().folders,q=O.remoteAuthority,z=await M.createUntitledWorkspace(V,q);return await r.copyWorkspaceSettings(z),t.openWindow([{workspaceUri:z.configPath}],{forceNewWindow:!0,remoteAuthority:q})}}c(L),c(_),c(F),c(S),c(C),c(W),c(h),c(N),c(f),c(A),c(b),d.appendMenuItem(p.MenubarFileMenu,{group:"2_open",command:{id:F.ID,title:s({key:"miOpenFile",comment:["&& denotes a mnemonic"]},"&&Open File...")},order:1,when:D.toNegated()}),d.appendMenuItem(p.MenubarFileMenu,{group:"2_open",command:{id:S.ID,title:s({key:"miOpenFolder",comment:["&& denotes a mnemonic"]},"Open &&Folder...")},order:2,when:g}),d.appendMenuItem(p.MenubarFileMenu,{group:"2_open",command:{id:C.ID,title:s({key:"miOpenFolder",comment:["&& denotes a mnemonic"]},"Open &&Folder...")},order:2,when:a.and(g.toNegated(),m.isEqualTo("workspace"))}),d.appendMenuItem(p.MenubarFileMenu,{group:"2_open",command:{id:W.ID,title:s({key:"miOpen",comment:["&& denotes a mnemonic"]},"&&Open...")},order:1,when:a.and(D,g)}),d.appendMenuItem(p.MenubarFileMenu,{group:"2_open",command:{id:h.ID,title:s({key:"miOpenWorkspace",comment:["&& denotes a mnemonic"]},"Open Wor&&kspace from File...")},order:3,when:l}),d.appendMenuItem(p.MenubarFileMenu,{group:"3_workspace",command:{id:B,title:s({key:"miAddFolderToWorkspace",comment:["&& denotes a mnemonic"]},"A&&dd Folder to Workspace...")},when:a.or(l,m.isEqualTo("workspace")),order:1}),d.appendMenuItem(p.MenubarFileMenu,{group:"3_workspace",command:{id:A.ID,title:s("miSaveWorkspaceAs","Save Workspace As...")},order:2,when:l}),d.appendMenuItem(p.MenubarFileMenu,{group:"3_workspace",command:{id:b.ID,title:s("duplicateWorkspace","Duplicate Workspace")},order:3,when:l}),d.appendMenuItem(p.MenubarFileMenu,{group:"6_close",command:{id:f.ID,title:s({key:"miCloseFolder",comment:["&& denotes a mnemonic"]},"Close &&Folder")},order:3,when:a.and(m.isEqualTo("folder"),P)}),d.appendMenuItem(p.MenubarFileMenu,{group:"6_close",command:{id:f.ID,title:s({key:"miCloseWorkspace",comment:["&& denotes a mnemonic"]},"Close &&Workspace")},order:3,when:a.and(m.isEqualTo("workspace"),P)});export{L as AddRootFolderAction,F as OpenFileAction,W as OpenFileFolderAction,S as OpenFolderAction,C as OpenFolderViaWorkspaceAction,_ as RemoveRootFolderAction};
