{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/actions/quickAccessActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize, localize2 } from '../../../nls.js';\nimport { MenuId, Action2, registerAction2 } from '../../../platform/actions/common/actions.js';\nimport { KeyMod, KeyCode } from '../../../base/common/keyCodes.js';\nimport { KeybindingsRegistry, KeybindingWeight, IKeybindingRule } from '../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { IQuickInputService, ItemActivation } from '../../../platform/quickinput/common/quickInput.js';\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\nimport { ServicesAccessor } from '../../../platform/instantiation/common/instantiation.js';\nimport { inQuickPickContext, defaultQuickAccessContext, getQuickNavigateHandler } from '../quickaccess.js';\nimport { ILocalizedString } from '../../../platform/action/common/action.js';\nimport { AnythingQuickAccessProviderRunOptions } from '../../../platform/quickinput/common/quickAccess.js';\nimport { Codicon } from '../../../base/common/codicons.js';\n\n//#region Quick access management commands and keys\n\nconst globalQuickAccessKeybinding = {\n\tprimary: KeyMod.CtrlCmd | KeyCode.KeyP,\n\tsecondary: [KeyMod.CtrlCmd | KeyCode.KeyE],\n\tmac: { primary: KeyMod.CtrlCmd | KeyCode.KeyP, secondary: undefined }\n};\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'workbench.action.closeQuickOpen',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: inQuickPickContext,\n\tprimary: KeyCode.Escape, secondary: [KeyMod.Shift | KeyCode.Escape],\n\thandler: accessor => {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\treturn quickInputService.cancel();\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'workbench.action.acceptSelectedQuickOpenItem',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: inQuickPickContext,\n\tprimary: 0,\n\thandler: accessor => {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\treturn quickInputService.accept();\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'workbench.action.alternativeAcceptSelectedQuickOpenItem',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: inQuickPickContext,\n\tprimary: 0,\n\thandler: accessor => {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\treturn quickInputService.accept({ ctrlCmd: true, alt: false });\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'workbench.action.focusQuickOpen',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: inQuickPickContext,\n\tprimary: 0,\n\thandler: accessor => {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tquickInputService.focus();\n\t}\n});\n\nconst quickAccessNavigateNextInFilePickerId = 'workbench.action.quickOpenNavigateNextInFilePicker';\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: quickAccessNavigateNextInFilePickerId,\n\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\thandler: getQuickNavigateHandler(quickAccessNavigateNextInFilePickerId, true),\n\twhen: defaultQuickAccessContext,\n\tprimary: globalQuickAccessKeybinding.primary,\n\tsecondary: globalQuickAccessKeybinding.secondary,\n\tmac: globalQuickAccessKeybinding.mac\n});\n\nconst quickAccessNavigatePreviousInFilePickerId = 'workbench.action.quickOpenNavigatePreviousInFilePicker';\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: quickAccessNavigatePreviousInFilePickerId,\n\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\thandler: getQuickNavigateHandler(quickAccessNavigatePreviousInFilePickerId, false),\n\twhen: defaultQuickAccessContext,\n\tprimary: globalQuickAccessKeybinding.primary | KeyMod.Shift,\n\tsecondary: [globalQuickAccessKeybinding.secondary[0] | KeyMod.Shift],\n\tmac: {\n\t\tprimary: globalQuickAccessKeybinding.mac.primary | KeyMod.Shift,\n\t\tsecondary: undefined\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'workbench.action.quickPickManyToggle',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: inQuickPickContext,\n\tprimary: 0,\n\thandler: accessor => {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tquickInputService.toggle();\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'workbench.action.quickInputBack',\n\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\twhen: inQuickPickContext,\n\tprimary: 0,\n\twin: { primary: KeyMod.Alt | KeyCode.LeftArrow },\n\tmac: { primary: KeyMod.WinCtrl | KeyCode.Minus },\n\tlinux: { primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.Minus },\n\thandler: accessor => {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tquickInputService.back();\n\t}\n});\n\nregisterAction2(class QuickAccessAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.quickOpen',\n\t\t\ttitle: localize2('quickOpen', \"Go to File...\"),\n\t\t\tmetadata: {\n\t\t\t\tdescription: `Quick access`,\n\t\t\t\targs: [{\n\t\t\t\t\tname: 'prefix',\n\t\t\t\t\tschema: {\n\t\t\t\t\t\t'type': 'string'\n\t\t\t\t\t}\n\t\t\t\t}]\n\t\t\t},\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: globalQuickAccessKeybinding.primary,\n\t\t\t\tsecondary: globalQuickAccessKeybinding.secondary,\n\t\t\t\tmac: globalQuickAccessKeybinding.mac\n\t\t\t},\n\t\t\tf1: true\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, prefix: undefined): void {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tquickInputService.quickAccess.show(typeof prefix === 'string' ? prefix : undefined, { preserveValue: typeof prefix === 'string' /* preserve as is if provided */ });\n\t}\n});\n\nregisterAction2(class QuickAccessAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.quickOpenWithModes',\n\t\t\ttitle: localize('quickOpenWithModes', \"Quick Open\"),\n\t\t\ticon: Codicon.search,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.CommandCenterCenter,\n\t\t\t\torder: 100\n\t\t\t}\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst providerOptions: AnythingQuickAccessProviderRunOptions = {\n\t\t\tincludeHelp: true,\n\t\t\tfrom: 'commandCenter',\n\t\t};\n\t\tquickInputService.quickAccess.show(undefined, {\n\t\t\tpreserveValue: true,\n\t\t\tproviderOptions\n\t\t});\n\t}\n});\n\nCommandsRegistry.registerCommand('workbench.action.quickOpenPreviousEditor', async accessor => {\n\tconst quickInputService = accessor.get(IQuickInputService);\n\n\tquickInputService.quickAccess.show('', { itemActivation: ItemActivation.SECOND });\n});\n\n//#endregion\n\n//#region Workbench actions\n\nclass BaseQuickAccessNavigateAction extends Action2 {\n\n\tconstructor(\n\t\tprivate id: string,\n\t\ttitle: ILocalizedString,\n\t\tprivate next: boolean,\n\t\tprivate quickNavigate: boolean,\n\t\tkeybinding?: Omit<IKeybindingRule, 'id'>\n\t) {\n\t\tsuper({ id, title, f1: true, keybinding });\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst keybindingService = accessor.get(IKeybindingService);\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\n\t\tconst keys = keybindingService.lookupKeybindings(this.id);\n\t\tconst quickNavigate = this.quickNavigate ? { keybindings: keys } : undefined;\n\n\t\tquickInputService.navigate(this.next, quickNavigate);\n\t}\n}\n\nclass QuickAccessNavigateNextAction extends BaseQuickAccessNavigateAction {\n\n\tconstructor() {\n\t\tsuper('workbench.action.quickOpenNavigateNext', localize2('quickNavigateNext', 'Navigate Next in Quick Open'), true, true);\n\t}\n}\n\nclass QuickAccessNavigatePreviousAction extends BaseQuickAccessNavigateAction {\n\n\tconstructor() {\n\t\tsuper('workbench.action.quickOpenNavigatePrevious', localize2('quickNavigatePrevious', 'Navigate Previous in Quick Open'), false, true);\n\t}\n}\n\nclass QuickAccessSelectNextAction extends BaseQuickAccessNavigateAction {\n\n\tconstructor() {\n\t\tsuper(\n\t\t\t'workbench.action.quickOpenSelectNext',\n\t\t\tlocalize2('quickSelectNext', 'Select Next in Quick Open'),\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t{\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\t\t\t\twhen: inQuickPickContext,\n\t\t\t\tprimary: 0,\n\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyCode.KeyN }\n\t\t\t}\n\t\t);\n\t}\n}\n\nclass QuickAccessSelectPreviousAction extends BaseQuickAccessNavigateAction {\n\n\tconstructor() {\n\t\tsuper(\n\t\t\t'workbench.action.quickOpenSelectPrevious',\n\t\t\tlocalize2('quickSelectPrevious', 'Select Previous in Quick Open'),\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\t{\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\t\t\t\twhen: inQuickPickContext,\n\t\t\t\tprimary: 0,\n\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyCode.KeyP }\n\t\t\t}\n\t\t);\n\t}\n}\n\nregisterAction2(QuickAccessSelectNextAction);\nregisterAction2(QuickAccessSelectPreviousAction);\nregisterAction2(QuickAccessNavigateNextAction);\nregisterAction2(QuickAccessNavigatePreviousAction);\n\n//#endregion\n"],
  "mappings": "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",
  "names": ["QuickAccessAction"]
}
