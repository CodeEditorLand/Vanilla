{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/actions/quickAccessActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Codicon } from \"../../../base/common/codicons.js\";\nimport { KeyCode, KeyMod } from \"../../../base/common/keyCodes.js\";\nimport { localize, localize2 } from \"../../../nls.js\";\nimport type { ILocalizedString } from \"../../../platform/action/common/action.js\";\nimport {\n\tAction2,\n\tMenuId,\n\tregisterAction2,\n} from \"../../../platform/actions/common/actions.js\";\nimport { CommandsRegistry } from \"../../../platform/commands/common/commands.js\";\nimport type { ServicesAccessor } from \"../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../platform/keybinding/common/keybinding.js\";\nimport {\n\ttype IKeybindingRule,\n\tKeybindingWeight,\n\tKeybindingsRegistry,\n} from \"../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport type { AnythingQuickAccessProviderRunOptions } from \"../../../platform/quickinput/common/quickAccess.js\";\nimport {\n\tIQuickInputService,\n\tItemActivation,\n} from \"../../../platform/quickinput/common/quickInput.js\";\nimport {\n\tdefaultQuickAccessContext,\n\tgetQuickNavigateHandler,\n\tinQuickPickContext,\n} from \"../quickaccess.js\";\n\n//#region Quick access management commands and keys\n\nconst globalQuickAccessKeybinding = {\n\tprimary: KeyMod.CtrlCmd | KeyCode.KeyP,\n\tsecondary: [KeyMod.CtrlCmd | KeyCode.KeyE],\n\tmac: { primary: KeyMod.CtrlCmd | KeyCode.KeyP, secondary: undefined },\n};\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: \"workbench.action.closeQuickOpen\",\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: inQuickPickContext,\n\tprimary: KeyCode.Escape,\n\tsecondary: [KeyMod.Shift | KeyCode.Escape],\n\thandler: (accessor) => {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\treturn quickInputService.cancel();\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: \"workbench.action.acceptSelectedQuickOpenItem\",\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: inQuickPickContext,\n\tprimary: 0,\n\thandler: (accessor) => {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\treturn quickInputService.accept();\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: \"workbench.action.alternativeAcceptSelectedQuickOpenItem\",\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: inQuickPickContext,\n\tprimary: 0,\n\thandler: (accessor) => {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\treturn quickInputService.accept({ ctrlCmd: true, alt: false });\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: \"workbench.action.focusQuickOpen\",\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: inQuickPickContext,\n\tprimary: 0,\n\thandler: (accessor) => {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tquickInputService.focus();\n\t},\n});\n\nconst quickAccessNavigateNextInFilePickerId =\n\t\"workbench.action.quickOpenNavigateNextInFilePicker\";\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: quickAccessNavigateNextInFilePickerId,\n\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\thandler: getQuickNavigateHandler(\n\t\tquickAccessNavigateNextInFilePickerId,\n\t\ttrue,\n\t),\n\twhen: defaultQuickAccessContext,\n\tprimary: globalQuickAccessKeybinding.primary,\n\tsecondary: globalQuickAccessKeybinding.secondary,\n\tmac: globalQuickAccessKeybinding.mac,\n});\n\nconst quickAccessNavigatePreviousInFilePickerId =\n\t\"workbench.action.quickOpenNavigatePreviousInFilePicker\";\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: quickAccessNavigatePreviousInFilePickerId,\n\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\thandler: getQuickNavigateHandler(\n\t\tquickAccessNavigatePreviousInFilePickerId,\n\t\tfalse,\n\t),\n\twhen: defaultQuickAccessContext,\n\tprimary: globalQuickAccessKeybinding.primary | KeyMod.Shift,\n\tsecondary: [globalQuickAccessKeybinding.secondary[0] | KeyMod.Shift],\n\tmac: {\n\t\tprimary: globalQuickAccessKeybinding.mac.primary | KeyMod.Shift,\n\t\tsecondary: undefined,\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: \"workbench.action.quickPickManyToggle\",\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: inQuickPickContext,\n\tprimary: 0,\n\thandler: (accessor) => {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tquickInputService.toggle();\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: \"workbench.action.quickInputBack\",\n\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\twhen: inQuickPickContext,\n\tprimary: 0,\n\twin: { primary: KeyMod.Alt | KeyCode.LeftArrow },\n\tmac: { primary: KeyMod.WinCtrl | KeyCode.Minus },\n\tlinux: { primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.Minus },\n\thandler: (accessor) => {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tquickInputService.back();\n\t},\n});\n\nregisterAction2(\n\tclass QuickAccessAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.action.quickOpen\",\n\t\t\t\ttitle: localize2(\"quickOpen\", \"Go to File...\"),\n\t\t\t\tmetadata: {\n\t\t\t\t\tdescription: `Quick access`,\n\t\t\t\t\targs: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"prefix\",\n\t\t\t\t\t\t\tschema: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\tprimary: globalQuickAccessKeybinding.primary,\n\t\t\t\t\tsecondary: globalQuickAccessKeybinding.secondary,\n\t\t\t\t\tmac: globalQuickAccessKeybinding.mac,\n\t\t\t\t},\n\t\t\t\tf1: true,\n\t\t\t});\n\t\t}\n\n\t\trun(accessor: ServicesAccessor, prefix: undefined): void {\n\t\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\t\tquickInputService.quickAccess.show(\n\t\t\t\ttypeof prefix === \"string\" ? prefix : undefined,\n\t\t\t\t{\n\t\t\t\t\tpreserveValue:\n\t\t\t\t\t\ttypeof prefix ===\n\t\t\t\t\t\t\"string\" /* preserve as is if provided */,\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\t},\n);\n\nregisterAction2(\n\tclass QuickAccessAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.action.quickOpenWithModes\",\n\t\t\t\ttitle: localize(\"quickOpenWithModes\", \"Quick Open\"),\n\t\t\t\ticon: Codicon.search,\n\t\t\t\tmenu: {\n\t\t\t\t\tid: MenuId.CommandCenterCenter,\n\t\t\t\t\torder: 100,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\trun(accessor: ServicesAccessor): void {\n\t\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\t\tconst providerOptions: AnythingQuickAccessProviderRunOptions = {\n\t\t\t\tincludeHelp: true,\n\t\t\t\tfrom: \"commandCenter\",\n\t\t\t};\n\t\t\tquickInputService.quickAccess.show(undefined, {\n\t\t\t\tpreserveValue: true,\n\t\t\t\tproviderOptions,\n\t\t\t});\n\t\t}\n\t},\n);\n\nCommandsRegistry.registerCommand(\n\t\"workbench.action.quickOpenPreviousEditor\",\n\tasync (accessor) => {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\n\t\tquickInputService.quickAccess.show(\"\", {\n\t\t\titemActivation: ItemActivation.SECOND,\n\t\t});\n\t},\n);\n\n//#endregion\n\n//#region Workbench actions\n\nclass BaseQuickAccessNavigateAction extends Action2 {\n\tconstructor(\n\t\tprivate id: string,\n\t\ttitle: ILocalizedString,\n\t\tprivate next: boolean,\n\t\tprivate quickNavigate: boolean,\n\t\tkeybinding?: Omit<IKeybindingRule, \"id\">,\n\t) {\n\t\tsuper({ id, title, f1: true, keybinding });\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst keybindingService = accessor.get(IKeybindingService);\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\n\t\tconst keys = keybindingService.lookupKeybindings(this.id);\n\t\tconst quickNavigate = this.quickNavigate\n\t\t\t? { keybindings: keys }\n\t\t\t: undefined;\n\n\t\tquickInputService.navigate(this.next, quickNavigate);\n\t}\n}\n\nclass QuickAccessNavigateNextAction extends BaseQuickAccessNavigateAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t\"workbench.action.quickOpenNavigateNext\",\n\t\t\tlocalize2(\"quickNavigateNext\", \"Navigate Next in Quick Open\"),\n\t\t\ttrue,\n\t\t\ttrue,\n\t\t);\n\t}\n}\n\nclass QuickAccessNavigatePreviousAction extends BaseQuickAccessNavigateAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t\"workbench.action.quickOpenNavigatePrevious\",\n\t\t\tlocalize2(\n\t\t\t\t\"quickNavigatePrevious\",\n\t\t\t\t\"Navigate Previous in Quick Open\",\n\t\t\t),\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t);\n\t}\n}\n\nclass QuickAccessSelectNextAction extends BaseQuickAccessNavigateAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t\"workbench.action.quickOpenSelectNext\",\n\t\t\tlocalize2(\"quickSelectNext\", \"Select Next in Quick Open\"),\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t{\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\t\t\t\twhen: inQuickPickContext,\n\t\t\t\tprimary: 0,\n\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyCode.KeyN },\n\t\t\t},\n\t\t);\n\t}\n}\n\nclass QuickAccessSelectPreviousAction extends BaseQuickAccessNavigateAction {\n\tconstructor() {\n\t\tsuper(\n\t\t\t\"workbench.action.quickOpenSelectPrevious\",\n\t\t\tlocalize2(\"quickSelectPrevious\", \"Select Previous in Quick Open\"),\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\t{\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\t\t\t\twhen: inQuickPickContext,\n\t\t\t\tprimary: 0,\n\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyCode.KeyP },\n\t\t\t},\n\t\t);\n\t}\n}\n\nregisterAction2(QuickAccessSelectNextAction);\nregisterAction2(QuickAccessSelectPreviousAction);\nregisterAction2(QuickAccessNavigateNextAction);\nregisterAction2(QuickAccessNavigatePreviousAction);\n\n//#endregion\n"],
  "mappings": "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",
  "names": ["QuickAccessAction"]
}
