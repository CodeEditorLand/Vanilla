{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/actions/layoutActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { mainWindow } from \"../../../base/browser/window.js\";\nimport { Codicon } from \"../../../base/common/codicons.js\";\nimport { KeyChord, KeyCode, KeyMod } from \"../../../base/common/keyCodes.js\";\nimport { DisposableStore } from \"../../../base/common/lifecycle.js\";\nimport {\n\tisLinux,\n\tisMacintosh,\n\tisNative,\n\tisWeb,\n\tisWindows,\n} from \"../../../base/common/platform.js\";\nimport { ThemeIcon } from \"../../../base/common/themables.js\";\nimport { type ILocalizedString, localize, localize2 } from \"../../../nls.js\";\nimport type { ICommandActionTitle } from \"../../../platform/action/common/action.js\";\nimport { Categories } from \"../../../platform/action/common/actionCommonCategories.js\";\nimport {\n\tAction2,\n\tMenuId,\n\tMenuRegistry,\n\tregisterAction2,\n} from \"../../../platform/actions/common/actions.js\";\nimport { ICommandService } from \"../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../platform/configuration/common/configuration.js\";\nimport {\n\tContextKeyExpr,\n\ttype ContextKeyExpression,\n\tIContextKeyService,\n} from \"../../../platform/contextkey/common/contextkey.js\";\nimport { IsMacNativeContext } from \"../../../platform/contextkey/common/contextkeys.js\";\nimport { IDialogService } from \"../../../platform/dialogs/common/dialogs.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../platform/keybinding/common/keybinding.js\";\nimport {\n\tKeybindingWeight,\n\tKeybindingsRegistry,\n} from \"../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport {\n\tIQuickInputService,\n\ttype IQuickPick,\n\ttype IQuickPickItem,\n\ttype IQuickPickSeparator,\n\ttype QuickPickItem,\n} from \"../../../platform/quickinput/common/quickInput.js\";\nimport { registerIcon } from \"../../../platform/theme/common/iconRegistry.js\";\nimport { TitlebarStyle } from \"../../../platform/window/common/window.js\";\nimport {\n\tAuxiliaryBarVisibleContext,\n\tFocusedViewContext,\n\tInEditorZenModeContext,\n\tIsAuxiliaryWindowFocusedContext,\n\tIsMainEditorCenteredLayoutContext,\n\tIsMainWindowFullscreenContext,\n\tMainEditorAreaVisibleContext,\n\tPanelAlignmentContext,\n\tPanelPositionContext,\n\tPanelVisibleContext,\n\tSideBarVisibleContext,\n\tTitleBarStyleContext,\n} from \"../../common/contextkeys.js\";\nimport {\n\ttype IViewDescriptor,\n\tIViewDescriptorService,\n\tViewContainerLocation,\n\tViewContainerLocationToString,\n} from \"../../common/views.js\";\nimport {\n\tEditorActionsLocation,\n\tEditorTabsMode,\n\tIWorkbenchLayoutService,\n\tLayoutSettings,\n\tParts,\n\tPosition,\n\tZenModeSettings,\n\tpositionToString,\n} from \"../../services/layout/browser/layoutService.js\";\nimport { IPaneCompositePartService } from \"../../services/panecomposite/browser/panecomposite.js\";\nimport { IPreferencesService } from \"../../services/preferences/common/preferences.js\";\nimport { IViewsService } from \"../../services/views/common/viewsService.js\";\nimport { ToggleAuxiliaryBarAction } from \"../parts/auxiliarybar/auxiliaryBarActions.js\";\nimport { TogglePanelAction } from \"../parts/panel/panelActions.js\";\n\n// Register Icons\nconst menubarIcon = registerIcon(\n\t\"menuBar\",\n\tCodicon.layoutMenubar,\n\tlocalize(\"menuBarIcon\", \"Represents the menu bar\"),\n);\nconst activityBarLeftIcon = registerIcon(\n\t\"activity-bar-left\",\n\tCodicon.layoutActivitybarLeft,\n\tlocalize(\n\t\t\"activityBarLeft\",\n\t\t\"Represents the activity bar in the left position\",\n\t),\n);\nconst activityBarRightIcon = registerIcon(\n\t\"activity-bar-right\",\n\tCodicon.layoutActivitybarRight,\n\tlocalize(\n\t\t\"activityBarRight\",\n\t\t\"Represents the activity bar in the right position\",\n\t),\n);\nconst panelLeftIcon = registerIcon(\n\t\"panel-left\",\n\tCodicon.layoutSidebarLeft,\n\tlocalize(\"panelLeft\", \"Represents a side bar in the left position\"),\n);\nconst panelLeftOffIcon = registerIcon(\n\t\"panel-left-off\",\n\tCodicon.layoutSidebarLeftOff,\n\tlocalize(\n\t\t\"panelLeftOff\",\n\t\t\"Represents a side bar in the left position toggled off\",\n\t),\n);\nconst panelRightIcon = registerIcon(\n\t\"panel-right\",\n\tCodicon.layoutSidebarRight,\n\tlocalize(\"panelRight\", \"Represents side bar in the right position\"),\n);\nconst panelRightOffIcon = registerIcon(\n\t\"panel-right-off\",\n\tCodicon.layoutSidebarRightOff,\n\tlocalize(\n\t\t\"panelRightOff\",\n\t\t\"Represents side bar in the right position toggled off\",\n\t),\n);\nconst panelIcon = registerIcon(\n\t\"panel-bottom\",\n\tCodicon.layoutPanel,\n\tlocalize(\"panelBottom\", \"Represents the bottom panel\"),\n);\nconst statusBarIcon = registerIcon(\n\t\"statusBar\",\n\tCodicon.layoutStatusbar,\n\tlocalize(\"statusBarIcon\", \"Represents the status bar\"),\n);\n\nconst panelAlignmentLeftIcon = registerIcon(\n\t\"panel-align-left\",\n\tCodicon.layoutPanelLeft,\n\tlocalize(\n\t\t\"panelBottomLeft\",\n\t\t\"Represents the bottom panel alignment set to the left\",\n\t),\n);\nconst panelAlignmentRightIcon = registerIcon(\n\t\"panel-align-right\",\n\tCodicon.layoutPanelRight,\n\tlocalize(\n\t\t\"panelBottomRight\",\n\t\t\"Represents the bottom panel alignment set to the right\",\n\t),\n);\nconst panelAlignmentCenterIcon = registerIcon(\n\t\"panel-align-center\",\n\tCodicon.layoutPanelCenter,\n\tlocalize(\n\t\t\"panelBottomCenter\",\n\t\t\"Represents the bottom panel alignment set to the center\",\n\t),\n);\nconst panelAlignmentJustifyIcon = registerIcon(\n\t\"panel-align-justify\",\n\tCodicon.layoutPanelJustify,\n\tlocalize(\n\t\t\"panelBottomJustify\",\n\t\t\"Represents the bottom panel alignment set to justified\",\n\t),\n);\n\nconst fullscreenIcon = registerIcon(\n\t\"fullscreen\",\n\tCodicon.screenFull,\n\tlocalize(\"fullScreenIcon\", \"Represents full screen\"),\n);\nconst centerLayoutIcon = registerIcon(\n\t\"centerLayoutIcon\",\n\tCodicon.layoutCentered,\n\tlocalize(\"centerLayoutIcon\", \"Represents centered layout mode\"),\n);\nconst zenModeIcon = registerIcon(\n\t\"zenMode\",\n\tCodicon.target,\n\tlocalize(\"zenModeIcon\", \"Represents zen mode\"),\n);\n\n// --- Close Side Bar\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.action.closeSidebar\",\n\t\t\t\ttitle: localize2(\"closeSidebar\", \"Close Primary Side Bar\"),\n\t\t\t\tcategory: Categories.View,\n\t\t\t\tf1: true,\n\t\t\t});\n\t\t}\n\n\t\trun(accessor: ServicesAccessor): void {\n\t\t\taccessor\n\t\t\t\t.get(IWorkbenchLayoutService)\n\t\t\t\t.setPartHidden(true, Parts.SIDEBAR_PART);\n\t\t}\n\t},\n);\n\nexport const ToggleActivityBarVisibilityActionId =\n\t\"workbench.action.toggleActivityBarVisibility\";\n\n// --- Toggle Centered Layout\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.action.toggleCenteredLayout\",\n\t\t\t\ttitle: {\n\t\t\t\t\t...localize2(\n\t\t\t\t\t\t\"toggleCenteredLayout\",\n\t\t\t\t\t\t\"Toggle Centered Layout\",\n\t\t\t\t\t),\n\t\t\t\t\tmnemonicTitle: localize(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: \"miToggleCenteredLayout\",\n\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"&&Centered Layout\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tprecondition: IsAuxiliaryWindowFocusedContext.toNegated(),\n\t\t\t\tcategory: Categories.View,\n\t\t\t\tf1: true,\n\t\t\t\ttoggled: IsMainEditorCenteredLayoutContext,\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.MenubarAppearanceMenu,\n\t\t\t\t\t\tgroup: \"1_toggle_view\",\n\t\t\t\t\t\torder: 3,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\trun(accessor: ServicesAccessor): void {\n\t\t\tconst layoutService = accessor.get(IWorkbenchLayoutService);\n\n\t\t\tlayoutService.centerMainEditorLayout(\n\t\t\t\t!layoutService.isMainEditorLayoutCentered(),\n\t\t\t);\n\t\t}\n\t},\n);\n\n// --- Set Sidebar Position\nconst sidebarPositionConfigurationKey = \"workbench.sideBar.location\";\n\nclass MoveSidebarPositionAction extends Action2 {\n\tconstructor(\n\t\tid: string,\n\t\ttitle: ICommandActionTitle,\n\t\tprivate readonly position: Position,\n\t) {\n\t\tsuper({\n\t\t\tid,\n\t\t\ttitle,\n\t\t\tf1: false,\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst layoutService = accessor.get(IWorkbenchLayoutService);\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\tconst position = layoutService.getSideBarPosition();\n\t\tif (position !== this.position) {\n\t\t\treturn configurationService.updateValue(\n\t\t\t\tsidebarPositionConfigurationKey,\n\t\t\t\tpositionToString(this.position),\n\t\t\t);\n\t\t}\n\t}\n}\n\nclass MoveSidebarRightAction extends MoveSidebarPositionAction {\n\tstatic readonly ID = \"workbench.action.moveSideBarRight\";\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tMoveSidebarRightAction.ID,\n\t\t\tlocalize2(\"moveSidebarRight\", \"Move Primary Side Bar Right\"),\n\t\t\tPosition.RIGHT,\n\t\t);\n\t}\n}\n\nclass MoveSidebarLeftAction extends MoveSidebarPositionAction {\n\tstatic readonly ID = \"workbench.action.moveSideBarLeft\";\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tMoveSidebarLeftAction.ID,\n\t\t\tlocalize2(\"moveSidebarLeft\", \"Move Primary Side Bar Left\"),\n\t\t\tPosition.LEFT,\n\t\t);\n\t}\n}\n\nregisterAction2(MoveSidebarRightAction);\nregisterAction2(MoveSidebarLeftAction);\n\n// --- Toggle Sidebar Position\n\nexport class ToggleSidebarPositionAction extends Action2 {\n\tstatic readonly ID = \"workbench.action.toggleSidebarPosition\";\n\tstatic readonly LABEL = localize(\n\t\t\"toggleSidebarPosition\",\n\t\t\"Toggle Primary Side Bar Position\",\n\t);\n\n\tstatic getLabel(layoutService: IWorkbenchLayoutService): string {\n\t\treturn layoutService.getSideBarPosition() === Position.LEFT\n\t\t\t? localize(\"moveSidebarRight\", \"Move Primary Side Bar Right\")\n\t\t\t: localize(\"moveSidebarLeft\", \"Move Primary Side Bar Left\");\n\t}\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ToggleSidebarPositionAction.ID,\n\t\t\ttitle: localize2(\n\t\t\t\t\"toggleSidebarPosition\",\n\t\t\t\t\"Toggle Primary Side Bar Position\",\n\t\t\t),\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): Promise<void> {\n\t\tconst layoutService = accessor.get(IWorkbenchLayoutService);\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\tconst position = layoutService.getSideBarPosition();\n\t\tconst newPositionValue = position === Position.LEFT ? \"right\" : \"left\";\n\n\t\treturn configurationService.updateValue(\n\t\t\tsidebarPositionConfigurationKey,\n\t\t\tnewPositionValue,\n\t\t);\n\t}\n}\n\nregisterAction2(ToggleSidebarPositionAction);\n\nconst configureLayoutIcon = registerIcon(\n\t\"configure-layout-icon\",\n\tCodicon.layout,\n\tlocalize(\n\t\t\"cofigureLayoutIcon\",\n\t\t\"Icon represents workbench layout configuration.\",\n\t),\n);\nMenuRegistry.appendMenuItem(MenuId.LayoutControlMenu, {\n\tsubmenu: MenuId.LayoutControlMenuSubmenu,\n\ttitle: localize(\"configureLayout\", \"Configure Layout\"),\n\ticon: configureLayoutIcon,\n\tgroup: \"1_workbench_layout\",\n\twhen: ContextKeyExpr.equals(\"config.workbench.layoutControl.type\", \"menu\"),\n});\n\nMenuRegistry.appendMenuItems([\n\t{\n\t\tid: MenuId.ViewContainerTitleContext,\n\t\titem: {\n\t\t\tgroup: \"3_workbench_layout_move\",\n\t\t\tcommand: {\n\t\t\t\tid: ToggleSidebarPositionAction.ID,\n\t\t\t\ttitle: localize(\n\t\t\t\t\t\"move side bar right\",\n\t\t\t\t\t\"Move Primary Side Bar Right\",\n\t\t\t\t),\n\t\t\t},\n\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\tContextKeyExpr.notEquals(\n\t\t\t\t\t\"config.workbench.sideBar.location\",\n\t\t\t\t\t\"right\",\n\t\t\t\t),\n\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\"viewContainerLocation\",\n\t\t\t\t\tViewContainerLocationToString(\n\t\t\t\t\t\tViewContainerLocation.Sidebar,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t\torder: 1,\n\t\t},\n\t},\n\t{\n\t\tid: MenuId.ViewTitleContext,\n\t\titem: {\n\t\t\tgroup: \"3_workbench_layout_move\",\n\t\t\tcommand: {\n\t\t\t\tid: ToggleSidebarPositionAction.ID,\n\t\t\t\ttitle: localize(\n\t\t\t\t\t\"move sidebar right\",\n\t\t\t\t\t\"Move Primary Side Bar Right\",\n\t\t\t\t),\n\t\t\t},\n\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\tContextKeyExpr.notEquals(\n\t\t\t\t\t\"config.workbench.sideBar.location\",\n\t\t\t\t\t\"right\",\n\t\t\t\t),\n\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\"viewLocation\",\n\t\t\t\t\tViewContainerLocationToString(\n\t\t\t\t\t\tViewContainerLocation.Sidebar,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t\torder: 1,\n\t\t},\n\t},\n\t{\n\t\tid: MenuId.ViewContainerTitleContext,\n\t\titem: {\n\t\t\tgroup: \"3_workbench_layout_move\",\n\t\t\tcommand: {\n\t\t\t\tid: ToggleSidebarPositionAction.ID,\n\t\t\t\ttitle: localize(\n\t\t\t\t\t\"move sidebar left\",\n\t\t\t\t\t\"Move Primary Side Bar Left\",\n\t\t\t\t),\n\t\t\t},\n\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\"config.workbench.sideBar.location\",\n\t\t\t\t\t\"right\",\n\t\t\t\t),\n\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\"viewContainerLocation\",\n\t\t\t\t\tViewContainerLocationToString(\n\t\t\t\t\t\tViewContainerLocation.Sidebar,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t\torder: 1,\n\t\t},\n\t},\n\t{\n\t\tid: MenuId.ViewTitleContext,\n\t\titem: {\n\t\t\tgroup: \"3_workbench_layout_move\",\n\t\t\tcommand: {\n\t\t\t\tid: ToggleSidebarPositionAction.ID,\n\t\t\t\ttitle: localize(\n\t\t\t\t\t\"move sidebar left\",\n\t\t\t\t\t\"Move Primary Side Bar Left\",\n\t\t\t\t),\n\t\t\t},\n\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\"config.workbench.sideBar.location\",\n\t\t\t\t\t\"right\",\n\t\t\t\t),\n\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\"viewLocation\",\n\t\t\t\t\tViewContainerLocationToString(\n\t\t\t\t\t\tViewContainerLocation.Sidebar,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t\torder: 1,\n\t\t},\n\t},\n\t{\n\t\tid: MenuId.ViewTitleContext,\n\t\titem: {\n\t\t\tgroup: \"3_workbench_layout_move\",\n\t\t\tcommand: {\n\t\t\t\tid: ToggleSidebarPositionAction.ID,\n\t\t\t\ttitle: localize(\n\t\t\t\t\t\"move second sidebar left\",\n\t\t\t\t\t\"Move Secondary Side Bar Left\",\n\t\t\t\t),\n\t\t\t},\n\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\tContextKeyExpr.notEquals(\n\t\t\t\t\t\"config.workbench.sideBar.location\",\n\t\t\t\t\t\"right\",\n\t\t\t\t),\n\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\"viewLocation\",\n\t\t\t\t\tViewContainerLocationToString(\n\t\t\t\t\t\tViewContainerLocation.AuxiliaryBar,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t\torder: 1,\n\t\t},\n\t},\n\t{\n\t\tid: MenuId.ViewTitleContext,\n\t\titem: {\n\t\t\tgroup: \"3_workbench_layout_move\",\n\t\t\tcommand: {\n\t\t\t\tid: ToggleSidebarPositionAction.ID,\n\t\t\t\ttitle: localize(\n\t\t\t\t\t\"move second sidebar right\",\n\t\t\t\t\t\"Move Secondary Side Bar Right\",\n\t\t\t\t),\n\t\t\t},\n\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\"config.workbench.sideBar.location\",\n\t\t\t\t\t\"right\",\n\t\t\t\t),\n\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\"viewLocation\",\n\t\t\t\t\tViewContainerLocationToString(\n\t\t\t\t\t\tViewContainerLocation.AuxiliaryBar,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t\torder: 1,\n\t\t},\n\t},\n]);\n\nMenuRegistry.appendMenuItem(MenuId.MenubarAppearanceMenu, {\n\tgroup: \"3_workbench_layout_move\",\n\tcommand: {\n\t\tid: ToggleSidebarPositionAction.ID,\n\t\ttitle: localize(\n\t\t\t{ key: \"miMoveSidebarRight\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\"&&Move Primary Side Bar Right\",\n\t\t),\n\t},\n\twhen: ContextKeyExpr.notEquals(\n\t\t\"config.workbench.sideBar.location\",\n\t\t\"right\",\n\t),\n\torder: 2,\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarAppearanceMenu, {\n\tgroup: \"3_workbench_layout_move\",\n\tcommand: {\n\t\tid: ToggleSidebarPositionAction.ID,\n\t\ttitle: localize(\n\t\t\t{ key: \"miMoveSidebarLeft\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\"&&Move Primary Side Bar Left\",\n\t\t),\n\t},\n\twhen: ContextKeyExpr.equals(\"config.workbench.sideBar.location\", \"right\"),\n\torder: 2,\n});\n\n// --- Toggle Editor Visibility\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.action.toggleEditorVisibility\",\n\t\t\t\ttitle: {\n\t\t\t\t\t...localize2(\n\t\t\t\t\t\t\"toggleEditor\",\n\t\t\t\t\t\t\"Toggle Editor Area Visibility\",\n\t\t\t\t\t),\n\t\t\t\t\tmnemonicTitle: localize(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: \"miShowEditorArea\",\n\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"Show &&Editor Area\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tcategory: Categories.View,\n\t\t\t\tf1: true,\n\t\t\t\ttoggled: MainEditorAreaVisibleContext,\n\t\t\t\t// the workbench grid currently prevents us from supporting panel maximization with non-center panel alignment\n\t\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\t\tIsAuxiliaryWindowFocusedContext.toNegated(),\n\t\t\t\t\tContextKeyExpr.or(\n\t\t\t\t\t\tPanelAlignmentContext.isEqualTo(\"center\"),\n\t\t\t\t\t\tPanelPositionContext.notEqualsTo(\"bottom\"),\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t});\n\t\t}\n\n\t\trun(accessor: ServicesAccessor): void {\n\t\t\taccessor.get(IWorkbenchLayoutService).toggleMaximizedPanel();\n\t\t}\n\t},\n);\n\nMenuRegistry.appendMenuItem(MenuId.MenubarViewMenu, {\n\tgroup: \"2_appearance\",\n\ttitle: localize(\n\t\t{ key: \"miAppearance\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\"&&Appearance\",\n\t),\n\tsubmenu: MenuId.MenubarAppearanceMenu,\n\torder: 1,\n});\n\n// Toggle Sidebar Visibility\n\nclass ToggleSidebarVisibilityAction extends Action2 {\n\tstatic readonly ID = \"workbench.action.toggleSidebarVisibility\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ToggleSidebarVisibilityAction.ID,\n\t\t\ttitle: localize2(\n\t\t\t\t\"toggleSidebar\",\n\t\t\t\t\"Toggle Primary Side Bar Visibility\",\n\t\t\t),\n\t\t\ttoggled: {\n\t\t\t\tcondition: SideBarVisibleContext,\n\t\t\t\ttitle: localize(\"primary sidebar\", \"Primary Side Bar\"),\n\t\t\t\tmnemonicTitle: localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"primary sidebar mnemonic\",\n\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t},\n\t\t\t\t\t\"&&Primary Side Bar\",\n\t\t\t\t),\n\t\t\t},\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyB,\n\t\t\t},\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.LayoutControlMenuSubmenu,\n\t\t\t\t\tgroup: \"0_workbench_layout\",\n\t\t\t\t\torder: 0,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.MenubarAppearanceMenu,\n\t\t\t\t\tgroup: \"2_workbench_layout\",\n\t\t\t\t\torder: 1,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tconst layoutService = accessor.get(IWorkbenchLayoutService);\n\n\t\tlayoutService.setPartHidden(\n\t\t\tlayoutService.isVisible(Parts.SIDEBAR_PART),\n\t\t\tParts.SIDEBAR_PART,\n\t\t);\n\t}\n}\n\nregisterAction2(ToggleSidebarVisibilityAction);\n\nMenuRegistry.appendMenuItems([\n\t{\n\t\tid: MenuId.ViewContainerTitleContext,\n\t\titem: {\n\t\t\tgroup: \"3_workbench_layout_move\",\n\t\t\tcommand: {\n\t\t\t\tid: ToggleSidebarVisibilityAction.ID,\n\t\t\t\ttitle: localize(\n\t\t\t\t\t\"compositePart.hideSideBarLabel\",\n\t\t\t\t\t\"Hide Primary Side Bar\",\n\t\t\t\t),\n\t\t\t},\n\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\tSideBarVisibleContext,\n\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\"viewContainerLocation\",\n\t\t\t\t\tViewContainerLocationToString(\n\t\t\t\t\t\tViewContainerLocation.Sidebar,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t\torder: 2,\n\t\t},\n\t},\n\t{\n\t\tid: MenuId.ViewTitleContext,\n\t\titem: {\n\t\t\tgroup: \"3_workbench_layout_move\",\n\t\t\tcommand: {\n\t\t\t\tid: ToggleSidebarVisibilityAction.ID,\n\t\t\t\ttitle: localize(\n\t\t\t\t\t\"compositePart.hideSideBarLabel\",\n\t\t\t\t\t\"Hide Primary Side Bar\",\n\t\t\t\t),\n\t\t\t},\n\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\tSideBarVisibleContext,\n\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\"viewLocation\",\n\t\t\t\t\tViewContainerLocationToString(\n\t\t\t\t\t\tViewContainerLocation.Sidebar,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t\torder: 2,\n\t\t},\n\t},\n\t{\n\t\tid: MenuId.LayoutControlMenu,\n\t\titem: {\n\t\t\tgroup: \"0_workbench_toggles\",\n\t\t\tcommand: {\n\t\t\t\tid: ToggleSidebarVisibilityAction.ID,\n\t\t\t\ttitle: localize(\"toggleSideBar\", \"Toggle Primary Side Bar\"),\n\t\t\t\ticon: panelLeftOffIcon,\n\t\t\t\ttoggled: {\n\t\t\t\t\tcondition: SideBarVisibleContext,\n\t\t\t\t\ticon: panelLeftIcon,\n\t\t\t\t},\n\t\t\t},\n\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\tContextKeyExpr.or(\n\t\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\t\"config.workbench.layoutControl.type\",\n\t\t\t\t\t\t\"toggles\",\n\t\t\t\t\t),\n\t\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\t\"config.workbench.layoutControl.type\",\n\t\t\t\t\t\t\"both\",\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\"config.workbench.sideBar.location\",\n\t\t\t\t\t\"left\",\n\t\t\t\t),\n\t\t\t),\n\t\t\torder: 0,\n\t\t},\n\t},\n\t{\n\t\tid: MenuId.LayoutControlMenu,\n\t\titem: {\n\t\t\tgroup: \"0_workbench_toggles\",\n\t\t\tcommand: {\n\t\t\t\tid: ToggleSidebarVisibilityAction.ID,\n\t\t\t\ttitle: localize(\"toggleSideBar\", \"Toggle Primary Side Bar\"),\n\t\t\t\ticon: panelRightOffIcon,\n\t\t\t\ttoggled: {\n\t\t\t\t\tcondition: SideBarVisibleContext,\n\t\t\t\t\ticon: panelRightIcon,\n\t\t\t\t},\n\t\t\t},\n\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\tContextKeyExpr.or(\n\t\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\t\"config.workbench.layoutControl.type\",\n\t\t\t\t\t\t\"toggles\",\n\t\t\t\t\t),\n\t\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\t\"config.workbench.layoutControl.type\",\n\t\t\t\t\t\t\"both\",\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\"config.workbench.sideBar.location\",\n\t\t\t\t\t\"right\",\n\t\t\t\t),\n\t\t\t),\n\t\t\torder: 2,\n\t\t},\n\t},\n]);\n\n// --- Toggle Statusbar Visibility\n\nexport class ToggleStatusbarVisibilityAction extends Action2 {\n\tstatic readonly ID = \"workbench.action.toggleStatusbarVisibility\";\n\n\tprivate static readonly statusbarVisibleKey = \"workbench.statusBar.visible\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ToggleStatusbarVisibilityAction.ID,\n\t\t\ttitle: {\n\t\t\t\t...localize2(\"toggleStatusbar\", \"Toggle Status Bar Visibility\"),\n\t\t\t\tmnemonicTitle: localize(\n\t\t\t\t\t{ key: \"miStatusbar\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\t\"S&&tatus Bar\",\n\t\t\t\t),\n\t\t\t},\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true,\n\t\t\ttoggled: ContextKeyExpr.equals(\n\t\t\t\t\"config.workbench.statusBar.visible\",\n\t\t\t\ttrue,\n\t\t\t),\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.MenubarAppearanceMenu,\n\t\t\t\t\tgroup: \"2_workbench_layout\",\n\t\t\t\t\torder: 3,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): Promise<void> {\n\t\tconst layoutService = accessor.get(IWorkbenchLayoutService);\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\tconst visibility = layoutService.isVisible(\n\t\t\tParts.STATUSBAR_PART,\n\t\t\tmainWindow,\n\t\t);\n\t\tconst newVisibilityValue = !visibility;\n\n\t\treturn configurationService.updateValue(\n\t\t\tToggleStatusbarVisibilityAction.statusbarVisibleKey,\n\t\t\tnewVisibilityValue,\n\t\t);\n\t}\n}\n\nregisterAction2(ToggleStatusbarVisibilityAction);\n\n// ------------------- Editor Tabs Layout --------------------------------\n\nabstract class AbstractSetShowTabsAction extends Action2 {\n\tconstructor(\n\t\tprivate readonly settingName: string,\n\t\tprivate readonly value: string,\n\t\ttitle: ICommandActionTitle,\n\t\tid: string,\n\t\tprecondition: ContextKeyExpression,\n\t\tdescription: string | ILocalizedString | undefined,\n\t) {\n\t\tsuper({\n\t\t\tid,\n\t\t\ttitle,\n\t\t\tcategory: Categories.View,\n\t\t\tprecondition,\n\t\t\tmetadata: description ? { description } : undefined,\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): Promise<void> {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\treturn configurationService.updateValue(this.settingName, this.value);\n\t}\n}\n\n// --- Hide Editor Tabs\n\nexport class HideEditorTabsAction extends AbstractSetShowTabsAction {\n\tstatic readonly ID = \"workbench.action.hideEditorTabs\";\n\n\tconstructor() {\n\t\tconst precondition = ContextKeyExpr.and(\n\t\t\tContextKeyExpr.equals(\n\t\t\t\t`config.${LayoutSettings.EDITOR_TABS_MODE}`,\n\t\t\t\tEditorTabsMode.NONE,\n\t\t\t).negate(),\n\t\t\tInEditorZenModeContext.negate(),\n\t\t)!;\n\t\tconst title = localize2(\"hideEditorTabs\", \"Hide Editor Tabs\");\n\t\tsuper(\n\t\t\tLayoutSettings.EDITOR_TABS_MODE,\n\t\t\tEditorTabsMode.NONE,\n\t\t\ttitle,\n\t\t\tHideEditorTabsAction.ID,\n\t\t\tprecondition,\n\t\t\tlocalize2(\"hideEditorTabsDescription\", \"Hide Tab Bar\"),\n\t\t);\n\t}\n}\n\nexport class ZenHideEditorTabsAction extends AbstractSetShowTabsAction {\n\tstatic readonly ID = \"workbench.action.zenHideEditorTabs\";\n\n\tconstructor() {\n\t\tconst precondition = ContextKeyExpr.and(\n\t\t\tContextKeyExpr.equals(\n\t\t\t\t`config.${ZenModeSettings.SHOW_TABS}`,\n\t\t\t\tEditorTabsMode.NONE,\n\t\t\t).negate(),\n\t\t\tInEditorZenModeContext,\n\t\t)!;\n\t\tconst title = localize2(\n\t\t\t\"hideEditorTabsZenMode\",\n\t\t\t\"Hide Editor Tabs in Zen Mode\",\n\t\t);\n\t\tsuper(\n\t\t\tZenModeSettings.SHOW_TABS,\n\t\t\tEditorTabsMode.NONE,\n\t\t\ttitle,\n\t\t\tZenHideEditorTabsAction.ID,\n\t\t\tprecondition,\n\t\t\tlocalize2(\n\t\t\t\t\"hideEditorTabsZenModeDescription\",\n\t\t\t\t\"Hide Tab Bar in Zen Mode\",\n\t\t\t),\n\t\t);\n\t}\n}\n\n// --- Show Multiple Editor Tabs\n\nexport class ShowMultipleEditorTabsAction extends AbstractSetShowTabsAction {\n\tstatic readonly ID = \"workbench.action.showMultipleEditorTabs\";\n\n\tconstructor() {\n\t\tconst precondition = ContextKeyExpr.and(\n\t\t\tContextKeyExpr.equals(\n\t\t\t\t`config.${LayoutSettings.EDITOR_TABS_MODE}`,\n\t\t\t\tEditorTabsMode.MULTIPLE,\n\t\t\t).negate(),\n\t\t\tInEditorZenModeContext.negate(),\n\t\t)!;\n\t\tconst title = localize2(\n\t\t\t\"showMultipleEditorTabs\",\n\t\t\t\"Show Multiple Editor Tabs\",\n\t\t);\n\n\t\tsuper(\n\t\t\tLayoutSettings.EDITOR_TABS_MODE,\n\t\t\tEditorTabsMode.MULTIPLE,\n\t\t\ttitle,\n\t\t\tShowMultipleEditorTabsAction.ID,\n\t\t\tprecondition,\n\t\t\tlocalize2(\n\t\t\t\t\"showMultipleEditorTabsDescription\",\n\t\t\t\t\"Show Tab Bar with multiple tabs\",\n\t\t\t),\n\t\t);\n\t}\n}\n\nexport class ZenShowMultipleEditorTabsAction extends AbstractSetShowTabsAction {\n\tstatic readonly ID = \"workbench.action.zenShowMultipleEditorTabs\";\n\n\tconstructor() {\n\t\tconst precondition = ContextKeyExpr.and(\n\t\t\tContextKeyExpr.equals(\n\t\t\t\t`config.${ZenModeSettings.SHOW_TABS}`,\n\t\t\t\tEditorTabsMode.MULTIPLE,\n\t\t\t).negate(),\n\t\t\tInEditorZenModeContext,\n\t\t)!;\n\t\tconst title = localize2(\n\t\t\t\"showMultipleEditorTabsZenMode\",\n\t\t\t\"Show Multiple Editor Tabs in Zen Mode\",\n\t\t);\n\n\t\tsuper(\n\t\t\tZenModeSettings.SHOW_TABS,\n\t\t\tEditorTabsMode.MULTIPLE,\n\t\t\ttitle,\n\t\t\tZenShowMultipleEditorTabsAction.ID,\n\t\t\tprecondition,\n\t\t\tlocalize2(\n\t\t\t\t\"showMultipleEditorTabsZenModeDescription\",\n\t\t\t\t\"Show Tab Bar in Zen Mode\",\n\t\t\t),\n\t\t);\n\t}\n}\n\n// --- Show Single Editor Tab\n\nexport class ShowSingleEditorTabAction extends AbstractSetShowTabsAction {\n\tstatic readonly ID = \"workbench.action.showEditorTab\";\n\n\tconstructor() {\n\t\tconst precondition = ContextKeyExpr.and(\n\t\t\tContextKeyExpr.equals(\n\t\t\t\t`config.${LayoutSettings.EDITOR_TABS_MODE}`,\n\t\t\t\tEditorTabsMode.SINGLE,\n\t\t\t).negate(),\n\t\t\tInEditorZenModeContext.negate(),\n\t\t)!;\n\t\tconst title = localize2(\n\t\t\t\"showSingleEditorTab\",\n\t\t\t\"Show Single Editor Tab\",\n\t\t);\n\n\t\tsuper(\n\t\t\tLayoutSettings.EDITOR_TABS_MODE,\n\t\t\tEditorTabsMode.SINGLE,\n\t\t\ttitle,\n\t\t\tShowSingleEditorTabAction.ID,\n\t\t\tprecondition,\n\t\t\tlocalize2(\n\t\t\t\t\"showSingleEditorTabDescription\",\n\t\t\t\t\"Show Tab Bar with one Tab\",\n\t\t\t),\n\t\t);\n\t}\n}\n\nexport class ZenShowSingleEditorTabAction extends AbstractSetShowTabsAction {\n\tstatic readonly ID = \"workbench.action.zenShowEditorTab\";\n\n\tconstructor() {\n\t\tconst precondition = ContextKeyExpr.and(\n\t\t\tContextKeyExpr.equals(\n\t\t\t\t`config.${ZenModeSettings.SHOW_TABS}`,\n\t\t\t\tEditorTabsMode.SINGLE,\n\t\t\t).negate(),\n\t\t\tInEditorZenModeContext,\n\t\t)!;\n\t\tconst title = localize2(\n\t\t\t\"showSingleEditorTabZenMode\",\n\t\t\t\"Show Single Editor Tab in Zen Mode\",\n\t\t);\n\n\t\tsuper(\n\t\t\tZenModeSettings.SHOW_TABS,\n\t\t\tEditorTabsMode.SINGLE,\n\t\t\ttitle,\n\t\t\tZenShowSingleEditorTabAction.ID,\n\t\t\tprecondition,\n\t\t\tlocalize2(\n\t\t\t\t\"showSingleEditorTabZenModeDescription\",\n\t\t\t\t\"Show Tab Bar in Zen Mode with one Tab\",\n\t\t\t),\n\t\t);\n\t}\n}\n\nregisterAction2(HideEditorTabsAction);\nregisterAction2(ZenHideEditorTabsAction);\nregisterAction2(ShowMultipleEditorTabsAction);\nregisterAction2(ZenShowMultipleEditorTabsAction);\nregisterAction2(ShowSingleEditorTabAction);\nregisterAction2(ZenShowSingleEditorTabAction);\n\n// --- Tab Bar Submenu in View Appearance Menu\n\nMenuRegistry.appendMenuItem(MenuId.MenubarAppearanceMenu, {\n\tsubmenu: MenuId.EditorTabsBarShowTabsSubmenu,\n\ttitle: localize(\"tabBar\", \"Tab Bar\"),\n\tgroup: \"3_workbench_layout_move\",\n\torder: 10,\n\twhen: InEditorZenModeContext.negate(),\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarAppearanceMenu, {\n\tsubmenu: MenuId.EditorTabsBarShowTabsZenModeSubmenu,\n\ttitle: localize(\"tabBar\", \"Tab Bar\"),\n\tgroup: \"3_workbench_layout_move\",\n\torder: 10,\n\twhen: InEditorZenModeContext,\n});\n\n// --- Show Editor Actions in Title Bar\n\nexport class EditorActionsTitleBarAction extends Action2 {\n\tstatic readonly ID = \"workbench.action.editorActionsTitleBar\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: EditorActionsTitleBarAction.ID,\n\t\t\ttitle: localize2(\n\t\t\t\t\"moveEditorActionsToTitleBar\",\n\t\t\t\t\"Move Editor Actions to Title Bar\",\n\t\t\t),\n\t\t\tcategory: Categories.View,\n\t\t\tprecondition: ContextKeyExpr.equals(\n\t\t\t\t`config.${LayoutSettings.EDITOR_ACTIONS_LOCATION}`,\n\t\t\t\tEditorActionsLocation.TITLEBAR,\n\t\t\t).negate(),\n\t\t\tmetadata: {\n\t\t\t\tdescription: localize2(\n\t\t\t\t\t\"moveEditorActionsToTitleBarDescription\",\n\t\t\t\t\t\"Move Editor Actions from the tab bar to the title bar\",\n\t\t\t\t),\n\t\t\t},\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): Promise<void> {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\treturn configurationService.updateValue(\n\t\t\tLayoutSettings.EDITOR_ACTIONS_LOCATION,\n\t\t\tEditorActionsLocation.TITLEBAR,\n\t\t);\n\t}\n}\nregisterAction2(EditorActionsTitleBarAction);\n\n// --- Editor Actions Default Position\n\nexport class EditorActionsDefaultAction extends Action2 {\n\tstatic readonly ID = \"workbench.action.editorActionsDefault\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: EditorActionsDefaultAction.ID,\n\t\t\ttitle: localize2(\n\t\t\t\t\"moveEditorActionsToTabBar\",\n\t\t\t\t\"Move Editor Actions to Tab Bar\",\n\t\t\t),\n\t\t\tcategory: Categories.View,\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t`config.${LayoutSettings.EDITOR_ACTIONS_LOCATION}`,\n\t\t\t\t\tEditorActionsLocation.DEFAULT,\n\t\t\t\t).negate(),\n\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t`config.${LayoutSettings.EDITOR_TABS_MODE}`,\n\t\t\t\t\tEditorTabsMode.NONE,\n\t\t\t\t).negate(),\n\t\t\t),\n\t\t\tmetadata: {\n\t\t\t\tdescription: localize2(\n\t\t\t\t\t\"moveEditorActionsToTabBarDescription\",\n\t\t\t\t\t\"Move Editor Actions from the title bar to the tab bar\",\n\t\t\t\t),\n\t\t\t},\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): Promise<void> {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\treturn configurationService.updateValue(\n\t\t\tLayoutSettings.EDITOR_ACTIONS_LOCATION,\n\t\t\tEditorActionsLocation.DEFAULT,\n\t\t);\n\t}\n}\nregisterAction2(EditorActionsDefaultAction);\n\n// --- Hide Editor Actions\n\nexport class HideEditorActionsAction extends Action2 {\n\tstatic readonly ID = \"workbench.action.hideEditorActions\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: HideEditorActionsAction.ID,\n\t\t\ttitle: localize2(\"hideEditorActons\", \"Hide Editor Actions\"),\n\t\t\tcategory: Categories.View,\n\t\t\tprecondition: ContextKeyExpr.equals(\n\t\t\t\t`config.${LayoutSettings.EDITOR_ACTIONS_LOCATION}`,\n\t\t\t\tEditorActionsLocation.HIDDEN,\n\t\t\t).negate(),\n\t\t\tmetadata: {\n\t\t\t\tdescription: localize2(\n\t\t\t\t\t\"hideEditorActonsDescription\",\n\t\t\t\t\t\"Hide Editor Actions in the tab and title bar\",\n\t\t\t\t),\n\t\t\t},\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): Promise<void> {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\treturn configurationService.updateValue(\n\t\t\tLayoutSettings.EDITOR_ACTIONS_LOCATION,\n\t\t\tEditorActionsLocation.HIDDEN,\n\t\t);\n\t}\n}\nregisterAction2(HideEditorActionsAction);\n\n// --- Hide Editor Actions\n\nexport class ShowEditorActionsAction extends Action2 {\n\tstatic readonly ID = \"workbench.action.showEditorActions\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ShowEditorActionsAction.ID,\n\t\t\ttitle: localize2(\"showEditorActons\", \"Show Editor Actions\"),\n\t\t\tcategory: Categories.View,\n\t\t\tprecondition: ContextKeyExpr.equals(\n\t\t\t\t`config.${LayoutSettings.EDITOR_ACTIONS_LOCATION}`,\n\t\t\t\tEditorActionsLocation.HIDDEN,\n\t\t\t),\n\t\t\tmetadata: {\n\t\t\t\tdescription: localize2(\n\t\t\t\t\t\"showEditorActonsDescription\",\n\t\t\t\t\t\"Make Editor Actions visible.\",\n\t\t\t\t),\n\t\t\t},\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): Promise<void> {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\treturn configurationService.updateValue(\n\t\t\tLayoutSettings.EDITOR_ACTIONS_LOCATION,\n\t\t\tEditorActionsLocation.DEFAULT,\n\t\t);\n\t}\n}\nregisterAction2(ShowEditorActionsAction);\n\n// --- Editor Actions Position Submenu in View Appearance Menu\n\nMenuRegistry.appendMenuItem(MenuId.MenubarAppearanceMenu, {\n\tsubmenu: MenuId.EditorActionsPositionSubmenu,\n\ttitle: localize(\"editorActionsPosition\", \"Editor Actions Position\"),\n\tgroup: \"3_workbench_layout_move\",\n\torder: 11,\n});\n\n// --- Configure Tabs Layout\n\nexport class ConfigureEditorTabsAction extends Action2 {\n\tstatic readonly ID = \"workbench.action.configureEditorTabs\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ConfigureEditorTabsAction.ID,\n\t\t\ttitle: localize2(\"configureTabs\", \"Configure Tabs\"),\n\t\t\tcategory: Categories.View,\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor) {\n\t\tconst preferencesService = accessor.get(IPreferencesService);\n\t\tpreferencesService.openSettings({\n\t\t\tjsonEditor: false,\n\t\t\tquery: \"workbench.editor tab\",\n\t\t});\n\t}\n}\nregisterAction2(ConfigureEditorTabsAction);\n\n// --- Configure Editor\n\nexport class ConfigureEditorAction extends Action2 {\n\tstatic readonly ID = \"workbench.action.configureEditor\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ConfigureEditorAction.ID,\n\t\t\ttitle: localize2(\"configureEditors\", \"Configure Editors\"),\n\t\t\tcategory: Categories.View,\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor) {\n\t\tconst preferencesService = accessor.get(IPreferencesService);\n\t\tpreferencesService.openSettings({\n\t\t\tjsonEditor: false,\n\t\t\tquery: \"workbench.editor\",\n\t\t});\n\t}\n}\nregisterAction2(ConfigureEditorAction);\n\n// --- Toggle Pinned Tabs On Separate Row\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.action.toggleSeparatePinnedEditorTabs\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"toggleSeparatePinnedEditorTabs\",\n\t\t\t\t\t\"Separate Pinned Editor Tabs\",\n\t\t\t\t),\n\t\t\t\tcategory: Categories.View,\n\t\t\t\tprecondition: ContextKeyExpr.equals(\n\t\t\t\t\t`config.${LayoutSettings.EDITOR_TABS_MODE}`,\n\t\t\t\t\tEditorTabsMode.MULTIPLE,\n\t\t\t\t),\n\t\t\t\tmetadata: {\n\t\t\t\t\tdescription: localize2(\n\t\t\t\t\t\t\"toggleSeparatePinnedEditorTabsDescription\",\n\t\t\t\t\t\t\"Toggle whether pinned editor tabs are shown on a separate row above unpinned tabs.\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tf1: true,\n\t\t\t});\n\t\t}\n\n\t\trun(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\t\tconst oldettingValue = configurationService.getValue<string>(\n\t\t\t\t\"workbench.editor.pinnedTabsOnSeparateRow\",\n\t\t\t);\n\t\t\tconst newSettingValue = !oldettingValue;\n\n\t\t\treturn configurationService.updateValue(\n\t\t\t\t\"workbench.editor.pinnedTabsOnSeparateRow\",\n\t\t\t\tnewSettingValue,\n\t\t\t);\n\t\t}\n\t},\n);\n\n// --- Toggle Zen Mode\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.action.toggleZenMode\",\n\t\t\t\ttitle: {\n\t\t\t\t\t...localize2(\"toggleZenMode\", \"Toggle Zen Mode\"),\n\t\t\t\t\tmnemonicTitle: localize(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: \"miToggleZenMode\",\n\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"Zen Mode\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tprecondition: IsAuxiliaryWindowFocusedContext.toNegated(),\n\t\t\t\tcategory: Categories.View,\n\t\t\t\tf1: true,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\tprimary: KeyChord(\n\t\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\t\t\t\tKeyCode.KeyZ,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\ttoggled: InEditorZenModeContext,\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.MenubarAppearanceMenu,\n\t\t\t\t\t\tgroup: \"1_toggle_view\",\n\t\t\t\t\t\torder: 2,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\trun(accessor: ServicesAccessor): void {\n\t\t\treturn accessor.get(IWorkbenchLayoutService).toggleZenMode();\n\t\t}\n\t},\n);\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: \"workbench.action.exitZenMode\",\n\tweight: KeybindingWeight.EditorContrib - 1000,\n\thandler(accessor: ServicesAccessor) {\n\t\tconst layoutService = accessor.get(IWorkbenchLayoutService);\n\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\tif (InEditorZenModeContext.getValue(contextKeyService)) {\n\t\t\tlayoutService.toggleZenMode();\n\t\t}\n\t},\n\twhen: InEditorZenModeContext,\n\tprimary: KeyChord(KeyCode.Escape, KeyCode.Escape),\n});\n\n// --- Toggle Menu Bar\n\nif (isWindows || isLinux || isWeb) {\n\tregisterAction2(\n\t\tclass ToggleMenubarAction extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: \"workbench.action.toggleMenuBar\",\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\t...localize2(\"toggleMenuBar\", \"Toggle Menu Bar\"),\n\t\t\t\t\t\tmnemonicTitle: localize(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: \"miMenuBar\",\n\t\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"Menu &&Bar\",\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t\tcategory: Categories.View,\n\t\t\t\t\tf1: true,\n\t\t\t\t\ttoggled: ContextKeyExpr.and(\n\t\t\t\t\t\tIsMacNativeContext.toNegated(),\n\t\t\t\t\t\tContextKeyExpr.notEquals(\n\t\t\t\t\t\t\t\"config.window.menuBarVisibility\",\n\t\t\t\t\t\t\t\"hidden\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\tContextKeyExpr.notEquals(\n\t\t\t\t\t\t\t\"config.window.menuBarVisibility\",\n\t\t\t\t\t\t\t\"toggle\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\tContextKeyExpr.notEquals(\n\t\t\t\t\t\t\t\"config.window.menuBarVisibility\",\n\t\t\t\t\t\t\t\"compact\",\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t\tmenu: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: MenuId.MenubarAppearanceMenu,\n\t\t\t\t\t\t\tgroup: \"2_workbench_layout\",\n\t\t\t\t\t\t\torder: 0,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t});\n\t\t\t}\n\n\t\t\trun(accessor: ServicesAccessor): void {\n\t\t\t\treturn accessor.get(IWorkbenchLayoutService).toggleMenuBar();\n\t\t\t}\n\t\t},\n\t);\n\n\t// Add separately to title bar context menu so we can use a different title\n\tfor (const menuId of [\n\t\tMenuId.TitleBarContext,\n\t\tMenuId.TitleBarTitleContext,\n\t]) {\n\t\tMenuRegistry.appendMenuItem(menuId, {\n\t\t\tcommand: {\n\t\t\t\tid: \"workbench.action.toggleMenuBar\",\n\t\t\t\ttitle: localize(\"miMenuBarNoMnemonic\", \"Menu Bar\"),\n\t\t\t\ttoggled: ContextKeyExpr.and(\n\t\t\t\t\tIsMacNativeContext.toNegated(),\n\t\t\t\t\tContextKeyExpr.notEquals(\n\t\t\t\t\t\t\"config.window.menuBarVisibility\",\n\t\t\t\t\t\t\"hidden\",\n\t\t\t\t\t),\n\t\t\t\t\tContextKeyExpr.notEquals(\n\t\t\t\t\t\t\"config.window.menuBarVisibility\",\n\t\t\t\t\t\t\"toggle\",\n\t\t\t\t\t),\n\t\t\t\t\tContextKeyExpr.notEquals(\n\t\t\t\t\t\t\"config.window.menuBarVisibility\",\n\t\t\t\t\t\t\"compact\",\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t},\n\t\t\twhen: ContextKeyExpr.and(\n\t\t\t\tIsAuxiliaryWindowFocusedContext.toNegated(),\n\t\t\t\tContextKeyExpr.notEquals(\n\t\t\t\t\tTitleBarStyleContext.key,\n\t\t\t\t\tTitlebarStyle.NATIVE,\n\t\t\t\t),\n\t\t\t\tIsMainWindowFullscreenContext.negate(),\n\t\t\t),\n\t\t\tgroup: \"2_config\",\n\t\t\torder: 0,\n\t\t});\n\t}\n}\n\n// --- Reset View Locations\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.action.resetViewLocations\",\n\t\t\t\ttitle: localize2(\"resetViewLocations\", \"Reset View Locations\"),\n\t\t\t\tcategory: Categories.View,\n\t\t\t\tf1: true,\n\t\t\t});\n\t\t}\n\n\t\trun(accessor: ServicesAccessor): void {\n\t\t\treturn accessor.get(IViewDescriptorService).reset();\n\t\t}\n\t},\n);\n\n// --- Move View\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.action.moveView\",\n\t\t\t\ttitle: localize2(\"moveView\", \"Move View\"),\n\t\t\t\tcategory: Categories.View,\n\t\t\t\tf1: true,\n\t\t\t});\n\t\t}\n\n\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\tconst viewDescriptorService = accessor.get(IViewDescriptorService);\n\t\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\t\tconst paneCompositePartService = accessor.get(\n\t\t\t\tIPaneCompositePartService,\n\t\t\t);\n\n\t\t\tconst focusedViewId =\n\t\t\t\tFocusedViewContext.getValue(contextKeyService);\n\t\t\tlet viewId: string;\n\n\t\t\tif (\n\t\t\t\tfocusedViewId &&\n\t\t\t\tviewDescriptorService.getViewDescriptorById(focusedViewId)\n\t\t\t\t\t?.canMoveView\n\t\t\t) {\n\t\t\t\tviewId = focusedViewId;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tviewId = await this.getView(\n\t\t\t\t\tquickInputService,\n\t\t\t\t\tviewDescriptorService,\n\t\t\t\t\tpaneCompositePartService,\n\t\t\t\t\tviewId!,\n\t\t\t\t);\n\t\t\t\tif (!viewId) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst moveFocusedViewAction = new MoveFocusedViewAction();\n\t\t\t\tinstantiationService.invokeFunction((accessor) =>\n\t\t\t\t\tmoveFocusedViewAction.run(accessor, viewId),\n\t\t\t\t);\n\t\t\t} catch {}\n\t\t}\n\n\t\tprivate getViewItems(\n\t\t\tviewDescriptorService: IViewDescriptorService,\n\t\t\tpaneCompositePartService: IPaneCompositePartService,\n\t\t): Array<QuickPickItem> {\n\t\t\tconst results: Array<QuickPickItem> = [];\n\n\t\t\tconst viewlets =\n\t\t\t\tpaneCompositePartService.getVisiblePaneCompositeIds(\n\t\t\t\t\tViewContainerLocation.Sidebar,\n\t\t\t\t);\n\t\t\tviewlets.forEach((viewletId) => {\n\t\t\t\tconst container =\n\t\t\t\t\tviewDescriptorService.getViewContainerById(viewletId)!;\n\t\t\t\tconst containerModel =\n\t\t\t\t\tviewDescriptorService.getViewContainerModel(container);\n\n\t\t\t\tlet hasAddedView = false;\n\t\t\t\tcontainerModel.visibleViewDescriptors.forEach(\n\t\t\t\t\t(viewDescriptor) => {\n\t\t\t\t\t\tif (viewDescriptor.canMoveView) {\n\t\t\t\t\t\t\tif (!hasAddedView) {\n\t\t\t\t\t\t\t\tresults.push({\n\t\t\t\t\t\t\t\t\ttype: \"separator\",\n\t\t\t\t\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\t\t\t\t\"sidebarContainer\",\n\t\t\t\t\t\t\t\t\t\t\"Side Bar / {0}\",\n\t\t\t\t\t\t\t\t\t\tcontainerModel.title,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\thasAddedView = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tresults.push({\n\t\t\t\t\t\t\t\tid: viewDescriptor.id,\n\t\t\t\t\t\t\t\tlabel: viewDescriptor.name.value,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t});\n\n\t\t\tconst panels = paneCompositePartService.getPinnedPaneCompositeIds(\n\t\t\t\tViewContainerLocation.Panel,\n\t\t\t);\n\t\t\tpanels.forEach((panel) => {\n\t\t\t\tconst container =\n\t\t\t\t\tviewDescriptorService.getViewContainerById(panel)!;\n\t\t\t\tconst containerModel =\n\t\t\t\t\tviewDescriptorService.getViewContainerModel(container);\n\n\t\t\t\tlet hasAddedView = false;\n\t\t\t\tcontainerModel.visibleViewDescriptors.forEach(\n\t\t\t\t\t(viewDescriptor) => {\n\t\t\t\t\t\tif (viewDescriptor.canMoveView) {\n\t\t\t\t\t\t\tif (!hasAddedView) {\n\t\t\t\t\t\t\t\tresults.push({\n\t\t\t\t\t\t\t\t\ttype: \"separator\",\n\t\t\t\t\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\t\t\t\t\"panelContainer\",\n\t\t\t\t\t\t\t\t\t\t\"Panel / {0}\",\n\t\t\t\t\t\t\t\t\t\tcontainerModel.title,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\thasAddedView = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tresults.push({\n\t\t\t\t\t\t\t\tid: viewDescriptor.id,\n\t\t\t\t\t\t\t\tlabel: viewDescriptor.name.value,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t});\n\n\t\t\tconst sidePanels =\n\t\t\t\tpaneCompositePartService.getPinnedPaneCompositeIds(\n\t\t\t\t\tViewContainerLocation.AuxiliaryBar,\n\t\t\t\t);\n\t\t\tsidePanels.forEach((panel) => {\n\t\t\t\tconst container =\n\t\t\t\t\tviewDescriptorService.getViewContainerById(panel)!;\n\t\t\t\tconst containerModel =\n\t\t\t\t\tviewDescriptorService.getViewContainerModel(container);\n\n\t\t\t\tlet hasAddedView = false;\n\t\t\t\tcontainerModel.visibleViewDescriptors.forEach(\n\t\t\t\t\t(viewDescriptor) => {\n\t\t\t\t\t\tif (viewDescriptor.canMoveView) {\n\t\t\t\t\t\t\tif (!hasAddedView) {\n\t\t\t\t\t\t\t\tresults.push({\n\t\t\t\t\t\t\t\t\ttype: \"separator\",\n\t\t\t\t\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\t\t\t\t\"secondarySideBarContainer\",\n\t\t\t\t\t\t\t\t\t\t\"Secondary Side Bar / {0}\",\n\t\t\t\t\t\t\t\t\t\tcontainerModel.title,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\thasAddedView = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tresults.push({\n\t\t\t\t\t\t\t\tid: viewDescriptor.id,\n\t\t\t\t\t\t\t\tlabel: viewDescriptor.name.value,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t});\n\n\t\t\treturn results;\n\t\t}\n\n\t\tprivate async getView(\n\t\t\tquickInputService: IQuickInputService,\n\t\t\tviewDescriptorService: IViewDescriptorService,\n\t\t\tpaneCompositePartService: IPaneCompositePartService,\n\t\t\tviewId?: string,\n\t\t): Promise<string> {\n\t\t\tconst disposables = new DisposableStore();\n\t\t\tconst quickPick = disposables.add(\n\t\t\t\tquickInputService.createQuickPick({ useSeparators: true }),\n\t\t\t);\n\t\t\tquickPick.placeholder = localize(\n\t\t\t\t\"moveFocusedView.selectView\",\n\t\t\t\t\"Select a View to Move\",\n\t\t\t);\n\t\t\tquickPick.items = this.getViewItems(\n\t\t\t\tviewDescriptorService,\n\t\t\t\tpaneCompositePartService,\n\t\t\t);\n\t\t\tquickPick.selectedItems = quickPick.items.filter(\n\t\t\t\t(item) => (item as IQuickPickItem).id === viewId,\n\t\t\t) as IQuickPickItem[];\n\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tdisposables.add(\n\t\t\t\t\tquickPick.onDidAccept(() => {\n\t\t\t\t\t\tconst viewId = quickPick.selectedItems[0];\n\t\t\t\t\t\tif (viewId.id) {\n\t\t\t\t\t\t\tresolve(viewId.id);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treject();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tquickPick.hide();\n\t\t\t\t\t}),\n\t\t\t\t);\n\n\t\t\t\tdisposables.add(\n\t\t\t\t\tquickPick.onDidHide(() => {\n\t\t\t\t\t\tdisposables.dispose();\n\t\t\t\t\t\treject();\n\t\t\t\t\t}),\n\t\t\t\t);\n\n\t\t\t\tquickPick.show();\n\t\t\t});\n\t\t}\n\t},\n);\n\n// --- Move Focused View\n\nclass MoveFocusedViewAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.moveFocusedView\",\n\t\t\ttitle: localize2(\"moveFocusedView\", \"Move Focused View\"),\n\t\t\tcategory: Categories.View,\n\t\t\tprecondition: FocusedViewContext.notEqualsTo(\"\"),\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, viewId?: string): void {\n\t\tconst viewDescriptorService = accessor.get(IViewDescriptorService);\n\t\tconst viewsService = accessor.get(IViewsService);\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\tconst dialogService = accessor.get(IDialogService);\n\t\tconst paneCompositePartService = accessor.get(\n\t\t\tIPaneCompositePartService,\n\t\t);\n\n\t\tconst focusedViewId =\n\t\t\tviewId || FocusedViewContext.getValue(contextKeyService);\n\n\t\tif (focusedViewId === undefined || focusedViewId.trim() === \"\") {\n\t\t\tdialogService.error(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"moveFocusedView.error.noFocusedView\",\n\t\t\t\t\t\"There is no view currently focused.\",\n\t\t\t\t),\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewDescriptor =\n\t\t\tviewDescriptorService.getViewDescriptorById(focusedViewId);\n\t\tif (!viewDescriptor || !viewDescriptor.canMoveView) {\n\t\t\tdialogService.error(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"moveFocusedView.error.nonMovableView\",\n\t\t\t\t\t\"The currently focused view is not movable.\",\n\t\t\t\t),\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tconst disposables = new DisposableStore();\n\t\tconst quickPick = disposables.add(\n\t\t\tquickInputService.createQuickPick({ useSeparators: true }),\n\t\t);\n\t\tquickPick.placeholder = localize(\n\t\t\t\"moveFocusedView.selectDestination\",\n\t\t\t\"Select a Destination for the View\",\n\t\t);\n\t\tquickPick.title = localize(\n\t\t\t{\n\t\t\t\tkey: \"moveFocusedView.title\",\n\t\t\t\tcomment: [\n\t\t\t\t\t\"{0} indicates the title of the view the user has selected to move.\",\n\t\t\t\t],\n\t\t\t},\n\t\t\t\"View: Move {0}\",\n\t\t\tviewDescriptor.name.value,\n\t\t);\n\n\t\tconst items: Array<IQuickPickItem | IQuickPickSeparator> = [];\n\t\tconst currentContainer =\n\t\t\tviewDescriptorService.getViewContainerByViewId(focusedViewId)!;\n\t\tconst currentLocation =\n\t\t\tviewDescriptorService.getViewLocationById(focusedViewId)!;\n\t\tconst isViewSolo =\n\t\t\tviewDescriptorService.getViewContainerModel(currentContainer)\n\t\t\t\t.allViewDescriptors.length === 1;\n\n\t\tif (!(isViewSolo && currentLocation === ViewContainerLocation.Panel)) {\n\t\t\titems.push({\n\t\t\t\tid: \"_.panel.newcontainer\",\n\t\t\t\tlabel: localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"moveFocusedView.newContainerInPanel\",\n\t\t\t\t\t\tcomment: [\"Creates a new top-level tab in the panel.\"],\n\t\t\t\t\t},\n\t\t\t\t\t\"New Panel Entry\",\n\t\t\t\t),\n\t\t\t});\n\t\t}\n\n\t\tif (\n\t\t\t!(isViewSolo && currentLocation === ViewContainerLocation.Sidebar)\n\t\t) {\n\t\t\titems.push({\n\t\t\t\tid: \"_.sidebar.newcontainer\",\n\t\t\t\tlabel: localize(\n\t\t\t\t\t\"moveFocusedView.newContainerInSidebar\",\n\t\t\t\t\t\"New Side Bar Entry\",\n\t\t\t\t),\n\t\t\t});\n\t\t}\n\n\t\tif (\n\t\t\t!(\n\t\t\t\tisViewSolo &&\n\t\t\t\tcurrentLocation === ViewContainerLocation.AuxiliaryBar\n\t\t\t)\n\t\t) {\n\t\t\titems.push({\n\t\t\t\tid: \"_.auxiliarybar.newcontainer\",\n\t\t\t\tlabel: localize(\n\t\t\t\t\t\"moveFocusedView.newContainerInSidePanel\",\n\t\t\t\t\t\"New Secondary Side Bar Entry\",\n\t\t\t\t),\n\t\t\t});\n\t\t}\n\n\t\titems.push({\n\t\t\ttype: \"separator\",\n\t\t\tlabel: localize(\"sidebar\", \"Side Bar\"),\n\t\t});\n\n\t\tconst pinnedViewlets =\n\t\t\tpaneCompositePartService.getVisiblePaneCompositeIds(\n\t\t\t\tViewContainerLocation.Sidebar,\n\t\t\t);\n\t\titems.push(\n\t\t\t...pinnedViewlets\n\t\t\t\t.filter((viewletId) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tviewletId ===\n\t\t\t\t\t\tviewDescriptorService.getViewContainerByViewId(\n\t\t\t\t\t\t\tfocusedViewId,\n\t\t\t\t\t\t)!.id\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn !viewDescriptorService.getViewContainerById(\n\t\t\t\t\t\tviewletId,\n\t\t\t\t\t)!.rejectAddedViews;\n\t\t\t\t})\n\t\t\t\t.map((viewletId) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: viewletId,\n\t\t\t\t\t\tlabel: viewDescriptorService.getViewContainerModel(\n\t\t\t\t\t\t\tviewDescriptorService.getViewContainerById(\n\t\t\t\t\t\t\t\tviewletId,\n\t\t\t\t\t\t\t)!,\n\t\t\t\t\t\t)!.title,\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t);\n\n\t\titems.push({\n\t\t\ttype: \"separator\",\n\t\t\tlabel: localize(\"panel\", \"Panel\"),\n\t\t});\n\n\t\tconst pinnedPanels = paneCompositePartService.getPinnedPaneCompositeIds(\n\t\t\tViewContainerLocation.Panel,\n\t\t);\n\t\titems.push(\n\t\t\t...pinnedPanels\n\t\t\t\t.filter((panel) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tpanel ===\n\t\t\t\t\t\tviewDescriptorService.getViewContainerByViewId(\n\t\t\t\t\t\t\tfocusedViewId,\n\t\t\t\t\t\t)!.id\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn !viewDescriptorService.getViewContainerById(panel)!\n\t\t\t\t\t\t.rejectAddedViews;\n\t\t\t\t})\n\t\t\t\t.map((panel) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: panel,\n\t\t\t\t\t\tlabel: viewDescriptorService.getViewContainerModel(\n\t\t\t\t\t\t\tviewDescriptorService.getViewContainerById(panel)!,\n\t\t\t\t\t\t)!.title,\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t);\n\n\t\titems.push({\n\t\t\ttype: \"separator\",\n\t\t\tlabel: localize(\"secondarySideBar\", \"Secondary Side Bar\"),\n\t\t});\n\n\t\tconst pinnedAuxPanels =\n\t\t\tpaneCompositePartService.getPinnedPaneCompositeIds(\n\t\t\t\tViewContainerLocation.AuxiliaryBar,\n\t\t\t);\n\t\titems.push(\n\t\t\t...pinnedAuxPanels\n\t\t\t\t.filter((panel) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tpanel ===\n\t\t\t\t\t\tviewDescriptorService.getViewContainerByViewId(\n\t\t\t\t\t\t\tfocusedViewId,\n\t\t\t\t\t\t)!.id\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn !viewDescriptorService.getViewContainerById(panel)!\n\t\t\t\t\t\t.rejectAddedViews;\n\t\t\t\t})\n\t\t\t\t.map((panel) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: panel,\n\t\t\t\t\t\tlabel: viewDescriptorService.getViewContainerModel(\n\t\t\t\t\t\t\tviewDescriptorService.getViewContainerById(panel)!,\n\t\t\t\t\t\t)!.title,\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t);\n\n\t\tquickPick.items = items;\n\n\t\tdisposables.add(\n\t\t\tquickPick.onDidAccept(() => {\n\t\t\t\tconst destination = quickPick.selectedItems[0];\n\n\t\t\t\tif (destination.id === \"_.panel.newcontainer\") {\n\t\t\t\t\tviewDescriptorService.moveViewToLocation(\n\t\t\t\t\t\tviewDescriptor,\n\t\t\t\t\t\tViewContainerLocation.Panel,\n\t\t\t\t\t\tthis.desc.id,\n\t\t\t\t\t);\n\t\t\t\t\tviewsService.openView(focusedViewId, true);\n\t\t\t\t} else if (destination.id === \"_.sidebar.newcontainer\") {\n\t\t\t\t\tviewDescriptorService.moveViewToLocation(\n\t\t\t\t\t\tviewDescriptor,\n\t\t\t\t\t\tViewContainerLocation.Sidebar,\n\t\t\t\t\t\tthis.desc.id,\n\t\t\t\t\t);\n\t\t\t\t\tviewsService.openView(focusedViewId, true);\n\t\t\t\t} else if (destination.id === \"_.auxiliarybar.newcontainer\") {\n\t\t\t\t\tviewDescriptorService.moveViewToLocation(\n\t\t\t\t\t\tviewDescriptor,\n\t\t\t\t\t\tViewContainerLocation.AuxiliaryBar,\n\t\t\t\t\t\tthis.desc.id,\n\t\t\t\t\t);\n\t\t\t\t\tviewsService.openView(focusedViewId, true);\n\t\t\t\t} else if (destination.id) {\n\t\t\t\t\tviewDescriptorService.moveViewsToContainer(\n\t\t\t\t\t\t[viewDescriptor],\n\t\t\t\t\t\tviewDescriptorService.getViewContainerById(\n\t\t\t\t\t\t\tdestination.id,\n\t\t\t\t\t\t)!,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tthis.desc.id,\n\t\t\t\t\t);\n\t\t\t\t\tviewsService.openView(focusedViewId, true);\n\t\t\t\t}\n\n\t\t\t\tquickPick.hide();\n\t\t\t}),\n\t\t);\n\n\t\tdisposables.add(quickPick.onDidHide(() => disposables.dispose()));\n\n\t\tquickPick.show();\n\t}\n}\n\nregisterAction2(MoveFocusedViewAction);\n\n// --- Reset Focused View Location\n\nregisterAction2(\n\tclass extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.action.resetFocusedViewLocation\",\n\t\t\t\ttitle: localize2(\n\t\t\t\t\t\"resetFocusedViewLocation\",\n\t\t\t\t\t\"Reset Focused View Location\",\n\t\t\t\t),\n\t\t\t\tcategory: Categories.View,\n\t\t\t\tf1: true,\n\t\t\t\tprecondition: FocusedViewContext.notEqualsTo(\"\"),\n\t\t\t});\n\t\t}\n\n\t\trun(accessor: ServicesAccessor): void {\n\t\t\tconst viewDescriptorService = accessor.get(IViewDescriptorService);\n\t\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\t\tconst dialogService = accessor.get(IDialogService);\n\t\t\tconst viewsService = accessor.get(IViewsService);\n\n\t\t\tconst focusedViewId =\n\t\t\t\tFocusedViewContext.getValue(contextKeyService);\n\n\t\t\tlet viewDescriptor: IViewDescriptor | null = null;\n\t\t\tif (focusedViewId !== undefined && focusedViewId.trim() !== \"\") {\n\t\t\t\tviewDescriptor =\n\t\t\t\t\tviewDescriptorService.getViewDescriptorById(focusedViewId);\n\t\t\t}\n\n\t\t\tif (!viewDescriptor) {\n\t\t\t\tdialogService.error(\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"resetFocusedView.error.noFocusedView\",\n\t\t\t\t\t\t\"There is no view currently focused.\",\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst defaultContainer =\n\t\t\t\tviewDescriptorService.getDefaultContainerById(\n\t\t\t\t\tviewDescriptor.id,\n\t\t\t\t);\n\t\t\tif (\n\t\t\t\t!defaultContainer ||\n\t\t\t\tdefaultContainer ===\n\t\t\t\t\tviewDescriptorService.getViewContainerByViewId(\n\t\t\t\t\t\tviewDescriptor.id,\n\t\t\t\t\t)\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tviewDescriptorService.moveViewsToContainer(\n\t\t\t\t[viewDescriptor],\n\t\t\t\tdefaultContainer,\n\t\t\t\tundefined,\n\t\t\t\tthis.desc.id,\n\t\t\t);\n\t\t\tviewsService.openView(viewDescriptor.id, true);\n\t\t}\n\t},\n);\n\n// --- Resize View\n\nabstract class BaseResizeViewAction extends Action2 {\n\tprotected static readonly RESIZE_INCREMENT = 60; // This is a css pixel size\n\n\tprotected resizePart(\n\t\twidthChange: number,\n\t\theightChange: number,\n\t\tlayoutService: IWorkbenchLayoutService,\n\t\tpartToResize?: Parts,\n\t): void {\n\t\tlet part: Parts | undefined;\n\t\tif (partToResize === undefined) {\n\t\t\tconst isEditorFocus = layoutService.hasFocus(Parts.EDITOR_PART);\n\t\t\tconst isSidebarFocus = layoutService.hasFocus(Parts.SIDEBAR_PART);\n\t\t\tconst isPanelFocus = layoutService.hasFocus(Parts.PANEL_PART);\n\t\t\tconst isAuxiliaryBarFocus = layoutService.hasFocus(\n\t\t\t\tParts.AUXILIARYBAR_PART,\n\t\t\t);\n\n\t\t\tif (isSidebarFocus) {\n\t\t\t\tpart = Parts.SIDEBAR_PART;\n\t\t\t} else if (isPanelFocus) {\n\t\t\t\tpart = Parts.PANEL_PART;\n\t\t\t} else if (isEditorFocus) {\n\t\t\t\tpart = Parts.EDITOR_PART;\n\t\t\t} else if (isAuxiliaryBarFocus) {\n\t\t\t\tpart = Parts.AUXILIARYBAR_PART;\n\t\t\t}\n\t\t} else {\n\t\t\tpart = partToResize;\n\t\t}\n\n\t\tif (part) {\n\t\t\tlayoutService.resizePart(part, widthChange, heightChange);\n\t\t}\n\t}\n}\n\nclass IncreaseViewSizeAction extends BaseResizeViewAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.increaseViewSize\",\n\t\t\ttitle: localize2(\"increaseViewSize\", \"Increase Current View Size\"),\n\t\t\tf1: true,\n\t\t\tprecondition: IsAuxiliaryWindowFocusedContext.toNegated(),\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tthis.resizePart(\n\t\t\tBaseResizeViewAction.RESIZE_INCREMENT,\n\t\t\tBaseResizeViewAction.RESIZE_INCREMENT,\n\t\t\taccessor.get(IWorkbenchLayoutService),\n\t\t);\n\t}\n}\n\nclass IncreaseViewWidthAction extends BaseResizeViewAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.increaseViewWidth\",\n\t\t\ttitle: localize2(\"increaseEditorWidth\", \"Increase Editor Width\"),\n\t\t\tf1: true,\n\t\t\tprecondition: IsAuxiliaryWindowFocusedContext.toNegated(),\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tthis.resizePart(\n\t\t\tBaseResizeViewAction.RESIZE_INCREMENT,\n\t\t\t0,\n\t\t\taccessor.get(IWorkbenchLayoutService),\n\t\t\tParts.EDITOR_PART,\n\t\t);\n\t}\n}\n\nclass IncreaseViewHeightAction extends BaseResizeViewAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.increaseViewHeight\",\n\t\t\ttitle: localize2(\"increaseEditorHeight\", \"Increase Editor Height\"),\n\t\t\tf1: true,\n\t\t\tprecondition: IsAuxiliaryWindowFocusedContext.toNegated(),\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tthis.resizePart(\n\t\t\t0,\n\t\t\tBaseResizeViewAction.RESIZE_INCREMENT,\n\t\t\taccessor.get(IWorkbenchLayoutService),\n\t\t\tParts.EDITOR_PART,\n\t\t);\n\t}\n}\n\nclass DecreaseViewSizeAction extends BaseResizeViewAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.decreaseViewSize\",\n\t\t\ttitle: localize2(\"decreaseViewSize\", \"Decrease Current View Size\"),\n\t\t\tf1: true,\n\t\t\tprecondition: IsAuxiliaryWindowFocusedContext.toNegated(),\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tthis.resizePart(\n\t\t\t-BaseResizeViewAction.RESIZE_INCREMENT,\n\t\t\t-BaseResizeViewAction.RESIZE_INCREMENT,\n\t\t\taccessor.get(IWorkbenchLayoutService),\n\t\t);\n\t}\n}\n\nclass DecreaseViewWidthAction extends BaseResizeViewAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.decreaseViewWidth\",\n\t\t\ttitle: localize2(\"decreaseEditorWidth\", \"Decrease Editor Width\"),\n\t\t\tf1: true,\n\t\t\tprecondition: IsAuxiliaryWindowFocusedContext.toNegated(),\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tthis.resizePart(\n\t\t\t-BaseResizeViewAction.RESIZE_INCREMENT,\n\t\t\t0,\n\t\t\taccessor.get(IWorkbenchLayoutService),\n\t\t\tParts.EDITOR_PART,\n\t\t);\n\t}\n}\n\nclass DecreaseViewHeightAction extends BaseResizeViewAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.decreaseViewHeight\",\n\t\t\ttitle: localize2(\"decreaseEditorHeight\", \"Decrease Editor Height\"),\n\t\t\tf1: true,\n\t\t\tprecondition: IsAuxiliaryWindowFocusedContext.toNegated(),\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tthis.resizePart(\n\t\t\t0,\n\t\t\t-BaseResizeViewAction.RESIZE_INCREMENT,\n\t\t\taccessor.get(IWorkbenchLayoutService),\n\t\t\tParts.EDITOR_PART,\n\t\t);\n\t}\n}\n\nregisterAction2(IncreaseViewSizeAction);\nregisterAction2(IncreaseViewWidthAction);\nregisterAction2(IncreaseViewHeightAction);\n\nregisterAction2(DecreaseViewSizeAction);\nregisterAction2(DecreaseViewWidthAction);\nregisterAction2(DecreaseViewHeightAction);\n\ntype ContextualLayoutVisualIcon = {\n\ticonA: ThemeIcon;\n\ticonB: ThemeIcon;\n\twhenA: ContextKeyExpression;\n};\ntype LayoutVisualIcon = ThemeIcon | ContextualLayoutVisualIcon;\n\nfunction isContextualLayoutVisualIcon(\n\ticon: LayoutVisualIcon,\n): icon is ContextualLayoutVisualIcon {\n\treturn (icon as ContextualLayoutVisualIcon).iconA !== undefined;\n}\n\ninterface CustomizeLayoutItem {\n\tid: string;\n\tactive: ContextKeyExpression;\n\tlabel: string;\n\tactiveIcon: ThemeIcon;\n\tvisualIcon?: LayoutVisualIcon;\n\tactiveAriaLabel: string;\n\tinactiveIcon?: ThemeIcon;\n\tinactiveAriaLabel?: string;\n\tuseButtons: boolean;\n}\n\nconst CreateToggleLayoutItem = (\n\tid: string,\n\tactive: ContextKeyExpression,\n\tlabel: string,\n\tvisualIcon?: LayoutVisualIcon,\n): CustomizeLayoutItem => {\n\treturn {\n\t\tid,\n\t\tactive,\n\t\tlabel,\n\t\tvisualIcon,\n\t\tactiveIcon: Codicon.eye,\n\t\tinactiveIcon: Codicon.eyeClosed,\n\t\tactiveAriaLabel: localize(\"selectToHide\", \"Select to Hide\"),\n\t\tinactiveAriaLabel: localize(\"selectToShow\", \"Select to Show\"),\n\t\tuseButtons: true,\n\t};\n};\n\nconst CreateOptionLayoutItem = (\n\tid: string,\n\tactive: ContextKeyExpression,\n\tlabel: string,\n\tvisualIcon?: LayoutVisualIcon,\n): CustomizeLayoutItem => {\n\treturn {\n\t\tid,\n\t\tactive,\n\t\tlabel,\n\t\tvisualIcon,\n\t\tactiveIcon: Codicon.check,\n\t\tactiveAriaLabel: localize(\"active\", \"Active\"),\n\t\tuseButtons: false,\n\t};\n};\n\nconst MenuBarToggledContext = ContextKeyExpr.and(\n\tIsMacNativeContext.toNegated(),\n\tContextKeyExpr.notEquals(\"config.window.menuBarVisibility\", \"hidden\"),\n\tContextKeyExpr.notEquals(\"config.window.menuBarVisibility\", \"toggle\"),\n\tContextKeyExpr.notEquals(\"config.window.menuBarVisibility\", \"compact\"),\n) as ContextKeyExpression;\nconst ToggleVisibilityActions: CustomizeLayoutItem[] = [];\nif (!isMacintosh || !isNative) {\n\tToggleVisibilityActions.push(\n\t\tCreateToggleLayoutItem(\n\t\t\t\"workbench.action.toggleMenuBar\",\n\t\t\tMenuBarToggledContext,\n\t\t\tlocalize(\"menuBar\", \"Menu Bar\"),\n\t\t\tmenubarIcon,\n\t\t),\n\t);\n}\n\nToggleVisibilityActions.push(\n\t...[\n\t\tCreateToggleLayoutItem(\n\t\t\tToggleActivityBarVisibilityActionId,\n\t\t\tContextKeyExpr.notEquals(\n\t\t\t\t\"config.workbench.activityBar.location\",\n\t\t\t\t\"hidden\",\n\t\t\t),\n\t\t\tlocalize(\"activityBar\", \"Activity Bar\"),\n\t\t\t{\n\t\t\t\twhenA: ContextKeyExpr.equals(\n\t\t\t\t\t\"config.workbench.sideBar.location\",\n\t\t\t\t\t\"left\",\n\t\t\t\t),\n\t\t\t\ticonA: activityBarLeftIcon,\n\t\t\t\ticonB: activityBarRightIcon,\n\t\t\t},\n\t\t),\n\t\tCreateToggleLayoutItem(\n\t\t\tToggleSidebarVisibilityAction.ID,\n\t\t\tSideBarVisibleContext,\n\t\t\tlocalize(\"sideBar\", \"Primary Side Bar\"),\n\t\t\t{\n\t\t\t\twhenA: ContextKeyExpr.equals(\n\t\t\t\t\t\"config.workbench.sideBar.location\",\n\t\t\t\t\t\"left\",\n\t\t\t\t),\n\t\t\t\ticonA: panelLeftIcon,\n\t\t\t\ticonB: panelRightIcon,\n\t\t\t},\n\t\t),\n\t\tCreateToggleLayoutItem(\n\t\t\tToggleAuxiliaryBarAction.ID,\n\t\t\tAuxiliaryBarVisibleContext,\n\t\t\tlocalize(\"secondarySideBar\", \"Secondary Side Bar\"),\n\t\t\t{\n\t\t\t\twhenA: ContextKeyExpr.equals(\n\t\t\t\t\t\"config.workbench.sideBar.location\",\n\t\t\t\t\t\"left\",\n\t\t\t\t),\n\t\t\t\ticonA: panelRightIcon,\n\t\t\t\ticonB: panelLeftIcon,\n\t\t\t},\n\t\t),\n\t\tCreateToggleLayoutItem(\n\t\t\tTogglePanelAction.ID,\n\t\t\tPanelVisibleContext,\n\t\t\tlocalize(\"panel\", \"Panel\"),\n\t\t\tpanelIcon,\n\t\t),\n\t\tCreateToggleLayoutItem(\n\t\t\tToggleStatusbarVisibilityAction.ID,\n\t\t\tContextKeyExpr.equals(\"config.workbench.statusBar.visible\", true),\n\t\t\tlocalize(\"statusBar\", \"Status Bar\"),\n\t\t\tstatusBarIcon,\n\t\t),\n\t],\n);\n\nconst MoveSideBarActions: CustomizeLayoutItem[] = [\n\tCreateOptionLayoutItem(\n\t\tMoveSidebarLeftAction.ID,\n\t\tContextKeyExpr.equals(\"config.workbench.sideBar.location\", \"left\"),\n\t\tlocalize(\"leftSideBar\", \"Left\"),\n\t\tpanelLeftIcon,\n\t),\n\tCreateOptionLayoutItem(\n\t\tMoveSidebarRightAction.ID,\n\t\tContextKeyExpr.equals(\"config.workbench.sideBar.location\", \"right\"),\n\t\tlocalize(\"rightSideBar\", \"Right\"),\n\t\tpanelRightIcon,\n\t),\n];\n\nconst AlignPanelActions: CustomizeLayoutItem[] = [\n\tCreateOptionLayoutItem(\n\t\t\"workbench.action.alignPanelLeft\",\n\t\tPanelAlignmentContext.isEqualTo(\"left\"),\n\t\tlocalize(\"leftPanel\", \"Left\"),\n\t\tpanelAlignmentLeftIcon,\n\t),\n\tCreateOptionLayoutItem(\n\t\t\"workbench.action.alignPanelRight\",\n\t\tPanelAlignmentContext.isEqualTo(\"right\"),\n\t\tlocalize(\"rightPanel\", \"Right\"),\n\t\tpanelAlignmentRightIcon,\n\t),\n\tCreateOptionLayoutItem(\n\t\t\"workbench.action.alignPanelCenter\",\n\t\tPanelAlignmentContext.isEqualTo(\"center\"),\n\t\tlocalize(\"centerPanel\", \"Center\"),\n\t\tpanelAlignmentCenterIcon,\n\t),\n\tCreateOptionLayoutItem(\n\t\t\"workbench.action.alignPanelJustify\",\n\t\tPanelAlignmentContext.isEqualTo(\"justify\"),\n\t\tlocalize(\"justifyPanel\", \"Justify\"),\n\t\tpanelAlignmentJustifyIcon,\n\t),\n];\n\nconst MiscLayoutOptions: CustomizeLayoutItem[] = [\n\tCreateOptionLayoutItem(\n\t\t\"workbench.action.toggleFullScreen\",\n\t\tIsMainWindowFullscreenContext,\n\t\tlocalize(\"fullscreen\", \"Full Screen\"),\n\t\tfullscreenIcon,\n\t),\n\tCreateOptionLayoutItem(\n\t\t\"workbench.action.toggleZenMode\",\n\t\tInEditorZenModeContext,\n\t\tlocalize(\"zenMode\", \"Zen Mode\"),\n\t\tzenModeIcon,\n\t),\n\tCreateOptionLayoutItem(\n\t\t\"workbench.action.toggleCenteredLayout\",\n\t\tIsMainEditorCenteredLayoutContext,\n\t\tlocalize(\"centeredLayout\", \"Centered Layout\"),\n\t\tcenterLayoutIcon,\n\t),\n];\n\nconst LayoutContextKeySet = new Set<string>();\nfor (const { active } of [\n\t...ToggleVisibilityActions,\n\t...MoveSideBarActions,\n\t...AlignPanelActions,\n\t...MiscLayoutOptions,\n]) {\n\tfor (const key of active.keys()) {\n\t\tLayoutContextKeySet.add(key);\n\t}\n}\n\nregisterAction2(\n\tclass CustomizeLayoutAction extends Action2 {\n\t\tprivate _currentQuickPick?: IQuickPick<\n\t\t\tIQuickPickItem,\n\t\t\t{ useSeparators: true }\n\t\t>;\n\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: \"workbench.action.customizeLayout\",\n\t\t\t\ttitle: localize2(\"customizeLayout\", \"Customize Layout...\"),\n\t\t\t\tf1: true,\n\t\t\t\ticon: configureLayoutIcon,\n\t\t\t\tmenu: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.LayoutControlMenuSubmenu,\n\t\t\t\t\t\tgroup: \"z_end\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: MenuId.LayoutControlMenu,\n\t\t\t\t\t\twhen: ContextKeyExpr.equals(\n\t\t\t\t\t\t\t\"config.workbench.layoutControl.type\",\n\t\t\t\t\t\t\t\"both\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\tgroup: \"z_end\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t}\n\n\t\tgetItems(\n\t\t\tcontextKeyService: IContextKeyService,\n\t\t\tkeybindingService: IKeybindingService,\n\t\t): QuickPickItem[] {\n\t\t\tconst toQuickPickItem = (\n\t\t\t\titem: CustomizeLayoutItem,\n\t\t\t): IQuickPickItem => {\n\t\t\t\tconst toggled = item.active.evaluate(\n\t\t\t\t\tcontextKeyService.getContext(null),\n\t\t\t\t);\n\t\t\t\tlet label = item.useButtons\n\t\t\t\t\t? item.label\n\t\t\t\t\t: item.label +\n\t\t\t\t\t\t(toggled && item.activeIcon\n\t\t\t\t\t\t\t? ` $(${item.activeIcon.id})`\n\t\t\t\t\t\t\t: !toggled && item.inactiveIcon\n\t\t\t\t\t\t\t\t? ` $(${item.inactiveIcon.id})`\n\t\t\t\t\t\t\t\t: \"\");\n\t\t\t\tconst ariaLabel =\n\t\t\t\t\titem.label +\n\t\t\t\t\t(toggled && item.activeAriaLabel\n\t\t\t\t\t\t? ` (${item.activeAriaLabel})`\n\t\t\t\t\t\t: !toggled && item.inactiveAriaLabel\n\t\t\t\t\t\t\t? ` (${item.inactiveAriaLabel})`\n\t\t\t\t\t\t\t: \"\");\n\n\t\t\t\tif (item.visualIcon) {\n\t\t\t\t\tlet icon = item.visualIcon;\n\t\t\t\t\tif (isContextualLayoutVisualIcon(icon)) {\n\t\t\t\t\t\tconst useIconA = icon.whenA.evaluate(\n\t\t\t\t\t\t\tcontextKeyService.getContext(null),\n\t\t\t\t\t\t);\n\t\t\t\t\t\ticon = useIconA ? icon.iconA : icon.iconB;\n\t\t\t\t\t}\n\n\t\t\t\t\tlabel = `$(${icon.id}) ${label}`;\n\t\t\t\t}\n\n\t\t\t\tconst icon = toggled ? item.activeIcon : item.inactiveIcon;\n\n\t\t\t\treturn {\n\t\t\t\t\ttype: \"item\",\n\t\t\t\t\tid: item.id,\n\t\t\t\t\tlabel,\n\t\t\t\t\tariaLabel,\n\t\t\t\t\tkeybinding: keybindingService.lookupKeybinding(\n\t\t\t\t\t\titem.id,\n\t\t\t\t\t\tcontextKeyService,\n\t\t\t\t\t),\n\t\t\t\t\tbuttons: item.useButtons\n\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\talwaysVisible: false,\n\t\t\t\t\t\t\t\t\ttooltip: ariaLabel,\n\t\t\t\t\t\t\t\t\ticonClass: icon\n\t\t\t\t\t\t\t\t\t\t? ThemeIcon.asClassName(icon)\n\t\t\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t: undefined,\n\t\t\t\t};\n\t\t\t};\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\ttype: \"separator\",\n\t\t\t\t\tlabel: localize(\"toggleVisibility\", \"Visibility\"),\n\t\t\t\t},\n\t\t\t\t...ToggleVisibilityActions.map(toQuickPickItem),\n\t\t\t\t{\n\t\t\t\t\ttype: \"separator\",\n\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\"sideBarPosition\",\n\t\t\t\t\t\t\"Primary Side Bar Position\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\t...MoveSideBarActions.map(toQuickPickItem),\n\t\t\t\t{\n\t\t\t\t\ttype: \"separator\",\n\t\t\t\t\tlabel: localize(\"panelAlignment\", \"Panel Alignment\"),\n\t\t\t\t},\n\t\t\t\t...AlignPanelActions.map(toQuickPickItem),\n\t\t\t\t{\n\t\t\t\t\ttype: \"separator\",\n\t\t\t\t\tlabel: localize(\"layoutModes\", \"Modes\"),\n\t\t\t\t},\n\t\t\t\t...MiscLayoutOptions.map(toQuickPickItem),\n\t\t\t];\n\t\t}\n\n\t\trun(accessor: ServicesAccessor): void {\n\t\t\tif (this._currentQuickPick) {\n\t\t\t\tthis._currentQuickPick.hide();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\t\tconst commandService = accessor.get(ICommandService);\n\t\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\t\tconst keybindingService = accessor.get(IKeybindingService);\n\n\t\t\tconst disposables = new DisposableStore();\n\n\t\t\tconst quickPick = disposables.add(\n\t\t\t\tquickInputService.createQuickPick({ useSeparators: true }),\n\t\t\t);\n\n\t\t\tthis._currentQuickPick = quickPick;\n\t\t\tquickPick.items = this.getItems(\n\t\t\t\tcontextKeyService,\n\t\t\t\tkeybindingService,\n\t\t\t);\n\t\t\tquickPick.ignoreFocusOut = true;\n\t\t\tquickPick.hideInput = true;\n\t\t\tquickPick.title = localize(\n\t\t\t\t\"customizeLayoutQuickPickTitle\",\n\t\t\t\t\"Customize Layout\",\n\t\t\t);\n\n\t\t\tconst closeButton = {\n\t\t\t\talwaysVisible: true,\n\t\t\t\ticonClass: ThemeIcon.asClassName(Codicon.close),\n\t\t\t\ttooltip: localize(\"close\", \"Close\"),\n\t\t\t};\n\n\t\t\tconst resetButton = {\n\t\t\t\talwaysVisible: true,\n\t\t\t\ticonClass: ThemeIcon.asClassName(Codicon.discard),\n\t\t\t\ttooltip: localize(\"restore defaults\", \"Restore Defaults\"),\n\t\t\t};\n\n\t\t\tquickPick.buttons = [resetButton, closeButton];\n\n\t\t\tlet selectedItem: CustomizeLayoutItem | undefined;\n\t\t\tdisposables.add(\n\t\t\t\tcontextKeyService.onDidChangeContext((changeEvent) => {\n\t\t\t\t\tif (changeEvent.affectsSome(LayoutContextKeySet)) {\n\t\t\t\t\t\tquickPick.items = this.getItems(\n\t\t\t\t\t\t\tcontextKeyService,\n\t\t\t\t\t\t\tkeybindingService,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (selectedItem) {\n\t\t\t\t\t\t\tquickPick.activeItems = quickPick.items.filter(\n\t\t\t\t\t\t\t\t(item) =>\n\t\t\t\t\t\t\t\t\t(item as CustomizeLayoutItem).id ===\n\t\t\t\t\t\t\t\t\tselectedItem?.id,\n\t\t\t\t\t\t\t) as IQuickPickItem[];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsetTimeout(() => quickInputService.focus(), 0);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tdisposables.add(\n\t\t\t\tquickPick.onDidAccept((event) => {\n\t\t\t\t\tif (quickPick.selectedItems.length) {\n\t\t\t\t\t\tselectedItem = quickPick\n\t\t\t\t\t\t\t.selectedItems[0] as CustomizeLayoutItem;\n\t\t\t\t\t\tcommandService.executeCommand(selectedItem.id);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tdisposables.add(\n\t\t\t\tquickPick.onDidTriggerItemButton((event) => {\n\t\t\t\t\tif (event.item) {\n\t\t\t\t\t\tselectedItem = event.item as CustomizeLayoutItem;\n\t\t\t\t\t\tcommandService.executeCommand(selectedItem.id);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tdisposables.add(\n\t\t\t\tquickPick.onDidTriggerButton((button) => {\n\t\t\t\t\tif (button === closeButton) {\n\t\t\t\t\t\tquickPick.hide();\n\t\t\t\t\t} else if (button === resetButton) {\n\t\t\t\t\t\tconst resetSetting = (id: string) => {\n\t\t\t\t\t\t\tconst config = configurationService.inspect(id);\n\t\t\t\t\t\t\tconfigurationService.updateValue(\n\t\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\t\tconfig.defaultValue,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// Reset all layout options\n\t\t\t\t\t\tresetSetting(\"workbench.activityBar.location\");\n\t\t\t\t\t\tresetSetting(\"workbench.sideBar.location\");\n\t\t\t\t\t\tresetSetting(\"workbench.statusBar.visible\");\n\t\t\t\t\t\tresetSetting(\"workbench.panel.defaultLocation\");\n\n\t\t\t\t\t\tif (!isMacintosh || !isNative) {\n\t\t\t\t\t\t\tresetSetting(\"window.menuBarVisibility\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcommandService.executeCommand(\n\t\t\t\t\t\t\t\"workbench.action.alignPanelCenter\",\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tdisposables.add(\n\t\t\t\tquickPick.onDidHide(() => {\n\t\t\t\t\tquickPick.dispose();\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tdisposables.add(\n\t\t\t\tquickPick.onDispose(() => {\n\t\t\t\t\tthis._currentQuickPick = undefined;\n\t\t\t\t\tdisposables.dispose();\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tquickPick.show();\n\t\t}\n\t},\n);\n"],
  "mappings": "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",
  "names": ["accessor", "viewId", "icon"]
}
