{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/actions/layoutActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILocalizedString, localize, localize2 } from '../../../nls.js';\nimport { MenuId, MenuRegistry, registerAction2, Action2 } from '../../../platform/actions/common/actions.js';\nimport { Categories } from '../../../platform/action/common/actionCommonCategories.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { EditorActionsLocation, EditorTabsMode, IWorkbenchLayoutService, LayoutSettings, Parts, Position, ZenModeSettings, positionToString } from '../../services/layout/browser/layoutService.js';\nimport { ServicesAccessor, IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { KeyMod, KeyCode, KeyChord } from '../../../base/common/keyCodes.js';\nimport { isWindows, isLinux, isWeb, isMacintosh, isNative } from '../../../base/common/platform.js';\nimport { IsMacNativeContext } from '../../../platform/contextkey/common/contextkeys.js';\nimport { KeybindingsRegistry, KeybindingWeight } from '../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { ContextKeyExpr, ContextKeyExpression, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IViewDescriptorService, ViewContainerLocation, IViewDescriptor, ViewContainerLocationToString } from '../../common/views.js';\nimport { IViewsService } from '../../services/views/common/viewsService.js';\nimport { QuickPickItem, IQuickInputService, IQuickPickItem, IQuickPickSeparator, IQuickPick } from '../../../platform/quickinput/common/quickInput.js';\nimport { IDialogService } from '../../../platform/dialogs/common/dialogs.js';\nimport { IPaneCompositePartService } from '../../services/panecomposite/browser/panecomposite.js';\nimport { ToggleAuxiliaryBarAction } from '../parts/auxiliarybar/auxiliaryBarActions.js';\nimport { TogglePanelAction } from '../parts/panel/panelActions.js';\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\nimport { AuxiliaryBarVisibleContext, PanelAlignmentContext, PanelVisibleContext, SideBarVisibleContext, FocusedViewContext, InEditorZenModeContext, IsMainEditorCenteredLayoutContext, MainEditorAreaVisibleContext, IsMainWindowFullscreenContext, PanelPositionContext, IsAuxiliaryWindowFocusedContext, TitleBarStyleContext } from '../../common/contextkeys.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { registerIcon } from '../../../platform/theme/common/iconRegistry.js';\nimport { ICommandActionTitle } from '../../../platform/action/common/action.js';\nimport { mainWindow } from '../../../base/browser/window.js';\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\nimport { TitlebarStyle } from '../../../platform/window/common/window.js';\nimport { IPreferencesService } from '../../services/preferences/common/preferences.js';\n\n// Register Icons\nconst menubarIcon = registerIcon('menuBar', Codicon.layoutMenubar, localize('menuBarIcon', \"Represents the menu bar\"));\nconst activityBarLeftIcon = registerIcon('activity-bar-left', Codicon.layoutActivitybarLeft, localize('activityBarLeft', \"Represents the activity bar in the left position\"));\nconst activityBarRightIcon = registerIcon('activity-bar-right', Codicon.layoutActivitybarRight, localize('activityBarRight', \"Represents the activity bar in the right position\"));\nconst panelLeftIcon = registerIcon('panel-left', Codicon.layoutSidebarLeft, localize('panelLeft', \"Represents a side bar in the left position\"));\nconst panelLeftOffIcon = registerIcon('panel-left-off', Codicon.layoutSidebarLeftOff, localize('panelLeftOff', \"Represents a side bar in the left position toggled off\"));\nconst panelRightIcon = registerIcon('panel-right', Codicon.layoutSidebarRight, localize('panelRight', \"Represents side bar in the right position\"));\nconst panelRightOffIcon = registerIcon('panel-right-off', Codicon.layoutSidebarRightOff, localize('panelRightOff', \"Represents side bar in the right position toggled off\"));\nconst panelIcon = registerIcon('panel-bottom', Codicon.layoutPanel, localize('panelBottom', \"Represents the bottom panel\"));\nconst statusBarIcon = registerIcon('statusBar', Codicon.layoutStatusbar, localize('statusBarIcon', \"Represents the status bar\"));\n\nconst panelAlignmentLeftIcon = registerIcon('panel-align-left', Codicon.layoutPanelLeft, localize('panelBottomLeft', \"Represents the bottom panel alignment set to the left\"));\nconst panelAlignmentRightIcon = registerIcon('panel-align-right', Codicon.layoutPanelRight, localize('panelBottomRight', \"Represents the bottom panel alignment set to the right\"));\nconst panelAlignmentCenterIcon = registerIcon('panel-align-center', Codicon.layoutPanelCenter, localize('panelBottomCenter', \"Represents the bottom panel alignment set to the center\"));\nconst panelAlignmentJustifyIcon = registerIcon('panel-align-justify', Codicon.layoutPanelJustify, localize('panelBottomJustify', \"Represents the bottom panel alignment set to justified\"));\n\nconst fullscreenIcon = registerIcon('fullscreen', Codicon.screenFull, localize('fullScreenIcon', \"Represents full screen\"));\nconst centerLayoutIcon = registerIcon('centerLayoutIcon', Codicon.layoutCentered, localize('centerLayoutIcon', \"Represents centered layout mode\"));\nconst zenModeIcon = registerIcon('zenMode', Codicon.target, localize('zenModeIcon', \"Represents zen mode\"));\n\n\n// --- Close Side Bar\n\nregisterAction2(class extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.closeSidebar',\n\t\t\ttitle: localize2('closeSidebar', 'Close Primary Side Bar'),\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\taccessor.get(IWorkbenchLayoutService).setPartHidden(true, Parts.SIDEBAR_PART);\n\t}\n});\n\nexport const ToggleActivityBarVisibilityActionId = 'workbench.action.toggleActivityBarVisibility';\n\n// --- Toggle Centered Layout\n\nregisterAction2(class extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.toggleCenteredLayout',\n\t\t\ttitle: {\n\t\t\t\t...localize2('toggleCenteredLayout', \"Toggle Centered Layout\"),\n\t\t\t\tmnemonicTitle: localize({ key: 'miToggleCenteredLayout', comment: ['&& denotes a mnemonic'] }, \"&&Centered Layout\"),\n\t\t\t},\n\t\t\tprecondition: IsAuxiliaryWindowFocusedContext.toNegated(),\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true,\n\t\t\ttoggled: IsMainEditorCenteredLayoutContext,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.MenubarAppearanceMenu,\n\t\t\t\tgroup: '1_toggle_view',\n\t\t\t\torder: 3\n\t\t\t}]\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tconst layoutService = accessor.get(IWorkbenchLayoutService);\n\n\t\tlayoutService.centerMainEditorLayout(!layoutService.isMainEditorLayoutCentered());\n\t}\n});\n\n// --- Set Sidebar Position\nconst sidebarPositionConfigurationKey = 'workbench.sideBar.location';\n\nclass MoveSidebarPositionAction extends Action2 {\n\tconstructor(id: string, title: ICommandActionTitle, private readonly position: Position) {\n\t\tsuper({\n\t\t\tid,\n\t\t\ttitle,\n\t\t\tf1: false\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst layoutService = accessor.get(IWorkbenchLayoutService);\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\tconst position = layoutService.getSideBarPosition();\n\t\tif (position !== this.position) {\n\t\t\treturn configurationService.updateValue(sidebarPositionConfigurationKey, positionToString(this.position));\n\t\t}\n\t}\n}\n\nclass MoveSidebarRightAction extends MoveSidebarPositionAction {\n\tstatic readonly ID = 'workbench.action.moveSideBarRight';\n\n\tconstructor() {\n\t\tsuper(MoveSidebarRightAction.ID, localize2('moveSidebarRight', \"Move Primary Side Bar Right\"), Position.RIGHT);\n\t}\n}\n\nclass MoveSidebarLeftAction extends MoveSidebarPositionAction {\n\tstatic readonly ID = 'workbench.action.moveSideBarLeft';\n\n\tconstructor() {\n\t\tsuper(MoveSidebarLeftAction.ID, localize2('moveSidebarLeft', \"Move Primary Side Bar Left\"), Position.LEFT);\n\t}\n}\n\nregisterAction2(MoveSidebarRightAction);\nregisterAction2(MoveSidebarLeftAction);\n\n// --- Toggle Sidebar Position\n\nexport class ToggleSidebarPositionAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.toggleSidebarPosition';\n\tstatic readonly LABEL = localize('toggleSidebarPosition', \"Toggle Primary Side Bar Position\");\n\n\tstatic getLabel(layoutService: IWorkbenchLayoutService): string {\n\t\treturn layoutService.getSideBarPosition() === Position.LEFT ? localize('moveSidebarRight', \"Move Primary Side Bar Right\") : localize('moveSidebarLeft', \"Move Primary Side Bar Left\");\n\t}\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ToggleSidebarPositionAction.ID,\n\t\t\ttitle: localize2('toggleSidebarPosition', \"Toggle Primary Side Bar Position\"),\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): Promise<void> {\n\t\tconst layoutService = accessor.get(IWorkbenchLayoutService);\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\tconst position = layoutService.getSideBarPosition();\n\t\tconst newPositionValue = (position === Position.LEFT) ? 'right' : 'left';\n\n\t\treturn configurationService.updateValue(sidebarPositionConfigurationKey, newPositionValue);\n\t}\n}\n\nregisterAction2(ToggleSidebarPositionAction);\n\nconst configureLayoutIcon = registerIcon('configure-layout-icon', Codicon.layout, localize('cofigureLayoutIcon', 'Icon represents workbench layout configuration.'));\nMenuRegistry.appendMenuItem(MenuId.LayoutControlMenu, {\n\tsubmenu: MenuId.LayoutControlMenuSubmenu,\n\ttitle: localize('configureLayout', \"Configure Layout\"),\n\ticon: configureLayoutIcon,\n\tgroup: '1_workbench_layout',\n\twhen: ContextKeyExpr.equals('config.workbench.layoutControl.type', 'menu')\n});\n\n\nMenuRegistry.appendMenuItems([{\n\tid: MenuId.ViewContainerTitleContext,\n\titem: {\n\t\tgroup: '3_workbench_layout_move',\n\t\tcommand: {\n\t\t\tid: ToggleSidebarPositionAction.ID,\n\t\t\ttitle: localize('move side bar right', \"Move Primary Side Bar Right\")\n\t\t},\n\t\twhen: ContextKeyExpr.and(ContextKeyExpr.notEquals('config.workbench.sideBar.location', 'right'), ContextKeyExpr.equals('viewContainerLocation', ViewContainerLocationToString(ViewContainerLocation.Sidebar))),\n\t\torder: 1\n\t}\n}, {\n\tid: MenuId.ViewTitleContext,\n\titem: {\n\t\tgroup: '3_workbench_layout_move',\n\t\tcommand: {\n\t\t\tid: ToggleSidebarPositionAction.ID,\n\t\t\ttitle: localize('move sidebar right', \"Move Primary Side Bar Right\")\n\t\t},\n\t\twhen: ContextKeyExpr.and(ContextKeyExpr.notEquals('config.workbench.sideBar.location', 'right'), ContextKeyExpr.equals('viewLocation', ViewContainerLocationToString(ViewContainerLocation.Sidebar))),\n\t\torder: 1\n\t}\n}, {\n\tid: MenuId.ViewContainerTitleContext,\n\titem: {\n\t\tgroup: '3_workbench_layout_move',\n\t\tcommand: {\n\t\t\tid: ToggleSidebarPositionAction.ID,\n\t\t\ttitle: localize('move sidebar left', \"Move Primary Side Bar Left\")\n\t\t},\n\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('config.workbench.sideBar.location', 'right'), ContextKeyExpr.equals('viewContainerLocation', ViewContainerLocationToString(ViewContainerLocation.Sidebar))),\n\t\torder: 1\n\t}\n}, {\n\tid: MenuId.ViewTitleContext,\n\titem: {\n\t\tgroup: '3_workbench_layout_move',\n\t\tcommand: {\n\t\t\tid: ToggleSidebarPositionAction.ID,\n\t\t\ttitle: localize('move sidebar left', \"Move Primary Side Bar Left\")\n\t\t},\n\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('config.workbench.sideBar.location', 'right'), ContextKeyExpr.equals('viewLocation', ViewContainerLocationToString(ViewContainerLocation.Sidebar))),\n\t\torder: 1\n\t}\n}, {\n\tid: MenuId.ViewTitleContext,\n\titem: {\n\t\tgroup: '3_workbench_layout_move',\n\t\tcommand: {\n\t\t\tid: ToggleSidebarPositionAction.ID,\n\t\t\ttitle: localize('move second sidebar left', \"Move Secondary Side Bar Left\")\n\t\t},\n\t\twhen: ContextKeyExpr.and(ContextKeyExpr.notEquals('config.workbench.sideBar.location', 'right'), ContextKeyExpr.equals('viewLocation', ViewContainerLocationToString(ViewContainerLocation.AuxiliaryBar))),\n\t\torder: 1\n\t}\n}, {\n\tid: MenuId.ViewTitleContext,\n\titem: {\n\t\tgroup: '3_workbench_layout_move',\n\t\tcommand: {\n\t\t\tid: ToggleSidebarPositionAction.ID,\n\t\t\ttitle: localize('move second sidebar right', \"Move Secondary Side Bar Right\")\n\t\t},\n\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('config.workbench.sideBar.location', 'right'), ContextKeyExpr.equals('viewLocation', ViewContainerLocationToString(ViewContainerLocation.AuxiliaryBar))),\n\t\torder: 1\n\t}\n}]);\n\nMenuRegistry.appendMenuItem(MenuId.MenubarAppearanceMenu, {\n\tgroup: '3_workbench_layout_move',\n\tcommand: {\n\t\tid: ToggleSidebarPositionAction.ID,\n\t\ttitle: localize({ key: 'miMoveSidebarRight', comment: ['&& denotes a mnemonic'] }, \"&&Move Primary Side Bar Right\")\n\t},\n\twhen: ContextKeyExpr.notEquals('config.workbench.sideBar.location', 'right'),\n\torder: 2\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarAppearanceMenu, {\n\tgroup: '3_workbench_layout_move',\n\tcommand: {\n\t\tid: ToggleSidebarPositionAction.ID,\n\t\ttitle: localize({ key: 'miMoveSidebarLeft', comment: ['&& denotes a mnemonic'] }, \"&&Move Primary Side Bar Left\")\n\t},\n\twhen: ContextKeyExpr.equals('config.workbench.sideBar.location', 'right'),\n\torder: 2\n});\n\n// --- Toggle Editor Visibility\n\nregisterAction2(class extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.toggleEditorVisibility',\n\t\t\ttitle: {\n\t\t\t\t...localize2('toggleEditor', \"Toggle Editor Area Visibility\"),\n\t\t\t\tmnemonicTitle: localize({ key: 'miShowEditorArea', comment: ['&& denotes a mnemonic'] }, \"Show &&Editor Area\"),\n\t\t\t},\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true,\n\t\t\ttoggled: MainEditorAreaVisibleContext,\n\t\t\t// the workbench grid currently prevents us from supporting panel maximization with non-center panel alignment\n\t\t\tprecondition: ContextKeyExpr.and(IsAuxiliaryWindowFocusedContext.toNegated(), ContextKeyExpr.or(PanelAlignmentContext.isEqualTo('center'), PanelPositionContext.notEqualsTo('bottom')))\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\taccessor.get(IWorkbenchLayoutService).toggleMaximizedPanel();\n\t}\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarViewMenu, {\n\tgroup: '2_appearance',\n\ttitle: localize({ key: 'miAppearance', comment: ['&& denotes a mnemonic'] }, \"&&Appearance\"),\n\tsubmenu: MenuId.MenubarAppearanceMenu,\n\torder: 1\n});\n\n// Toggle Sidebar Visibility\n\nclass ToggleSidebarVisibilityAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.toggleSidebarVisibility';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ToggleSidebarVisibilityAction.ID,\n\t\t\ttitle: localize2('toggleSidebar', 'Toggle Primary Side Bar Visibility'),\n\t\t\ttoggled: {\n\t\t\t\tcondition: SideBarVisibleContext,\n\t\t\t\ttitle: localize('primary sidebar', \"Primary Side Bar\"),\n\t\t\t\tmnemonicTitle: localize({ key: 'primary sidebar mnemonic', comment: ['&& denotes a mnemonic'] }, \"&&Primary Side Bar\"),\n\t\t\t},\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyB\n\t\t\t},\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.LayoutControlMenuSubmenu,\n\t\t\t\t\tgroup: '0_workbench_layout',\n\t\t\t\t\torder: 0\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.MenubarAppearanceMenu,\n\t\t\t\t\tgroup: '2_workbench_layout',\n\t\t\t\t\torder: 1\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tconst layoutService = accessor.get(IWorkbenchLayoutService);\n\n\t\tlayoutService.setPartHidden(layoutService.isVisible(Parts.SIDEBAR_PART), Parts.SIDEBAR_PART);\n\t}\n}\n\nregisterAction2(ToggleSidebarVisibilityAction);\n\nMenuRegistry.appendMenuItems([\n\t{\n\t\tid: MenuId.ViewContainerTitleContext,\n\t\titem: {\n\t\t\tgroup: '3_workbench_layout_move',\n\t\t\tcommand: {\n\t\t\t\tid: ToggleSidebarVisibilityAction.ID,\n\t\t\t\ttitle: localize('compositePart.hideSideBarLabel', \"Hide Primary Side Bar\"),\n\t\t\t},\n\t\t\twhen: ContextKeyExpr.and(SideBarVisibleContext, ContextKeyExpr.equals('viewContainerLocation', ViewContainerLocationToString(ViewContainerLocation.Sidebar))),\n\t\t\torder: 2\n\t\t}\n\t}, {\n\t\tid: MenuId.ViewTitleContext,\n\t\titem: {\n\t\t\tgroup: '3_workbench_layout_move',\n\t\t\tcommand: {\n\t\t\t\tid: ToggleSidebarVisibilityAction.ID,\n\t\t\t\ttitle: localize('compositePart.hideSideBarLabel', \"Hide Primary Side Bar\"),\n\t\t\t},\n\t\t\twhen: ContextKeyExpr.and(SideBarVisibleContext, ContextKeyExpr.equals('viewLocation', ViewContainerLocationToString(ViewContainerLocation.Sidebar))),\n\t\t\torder: 2\n\t\t}\n\t}, {\n\t\tid: MenuId.LayoutControlMenu,\n\t\titem: {\n\t\t\tgroup: '0_workbench_toggles',\n\t\t\tcommand: {\n\t\t\t\tid: ToggleSidebarVisibilityAction.ID,\n\t\t\t\ttitle: localize('toggleSideBar', \"Toggle Primary Side Bar\"),\n\t\t\t\ticon: panelLeftOffIcon,\n\t\t\t\ttoggled: { condition: SideBarVisibleContext, icon: panelLeftIcon }\n\t\t\t},\n\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.or(ContextKeyExpr.equals('config.workbench.layoutControl.type', 'toggles'), ContextKeyExpr.equals('config.workbench.layoutControl.type', 'both')), ContextKeyExpr.equals('config.workbench.sideBar.location', 'left')),\n\t\t\torder: 0\n\t\t}\n\t}, {\n\t\tid: MenuId.LayoutControlMenu,\n\t\titem: {\n\t\t\tgroup: '0_workbench_toggles',\n\t\t\tcommand: {\n\t\t\t\tid: ToggleSidebarVisibilityAction.ID,\n\t\t\t\ttitle: localize('toggleSideBar', \"Toggle Primary Side Bar\"),\n\t\t\t\ticon: panelRightOffIcon,\n\t\t\t\ttoggled: { condition: SideBarVisibleContext, icon: panelRightIcon }\n\t\t\t},\n\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.or(ContextKeyExpr.equals('config.workbench.layoutControl.type', 'toggles'), ContextKeyExpr.equals('config.workbench.layoutControl.type', 'both')), ContextKeyExpr.equals('config.workbench.sideBar.location', 'right')),\n\t\t\torder: 2\n\t\t}\n\t}\n]);\n\n// --- Toggle Statusbar Visibility\n\nexport class ToggleStatusbarVisibilityAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.toggleStatusbarVisibility';\n\n\tprivate static readonly statusbarVisibleKey = 'workbench.statusBar.visible';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ToggleStatusbarVisibilityAction.ID,\n\t\t\ttitle: {\n\t\t\t\t...localize2('toggleStatusbar', \"Toggle Status Bar Visibility\"),\n\t\t\t\tmnemonicTitle: localize({ key: 'miStatusbar', comment: ['&& denotes a mnemonic'] }, \"S&&tatus Bar\"),\n\t\t\t},\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true,\n\t\t\ttoggled: ContextKeyExpr.equals('config.workbench.statusBar.visible', true),\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.MenubarAppearanceMenu,\n\t\t\t\tgroup: '2_workbench_layout',\n\t\t\t\torder: 3\n\t\t\t}]\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): Promise<void> {\n\t\tconst layoutService = accessor.get(IWorkbenchLayoutService);\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\tconst visibility = layoutService.isVisible(Parts.STATUSBAR_PART, mainWindow);\n\t\tconst newVisibilityValue = !visibility;\n\n\t\treturn configurationService.updateValue(ToggleStatusbarVisibilityAction.statusbarVisibleKey, newVisibilityValue);\n\t}\n}\n\nregisterAction2(ToggleStatusbarVisibilityAction);\n\n// ------------------- Editor Tabs Layout --------------------------------\n\nabstract class AbstractSetShowTabsAction extends Action2 {\n\n\tconstructor(private readonly settingName: string, private readonly value: string, title: ICommandActionTitle, id: string, precondition: ContextKeyExpression, description: string | ILocalizedString | undefined) {\n\t\tsuper({\n\t\t\tid,\n\t\t\ttitle,\n\t\t\tcategory: Categories.View,\n\t\t\tprecondition,\n\t\t\tmetadata: description ? { description } : undefined,\n\t\t\tf1: true\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): Promise<void> {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\treturn configurationService.updateValue(this.settingName, this.value);\n\t}\n}\n\n// --- Hide Editor Tabs\n\nexport class HideEditorTabsAction extends AbstractSetShowTabsAction {\n\n\tstatic readonly ID = 'workbench.action.hideEditorTabs';\n\n\tconstructor() {\n\t\tconst precondition = ContextKeyExpr.and(ContextKeyExpr.equals(`config.${LayoutSettings.EDITOR_TABS_MODE}`, EditorTabsMode.NONE).negate(), InEditorZenModeContext.negate())!;\n\t\tconst title = localize2('hideEditorTabs', 'Hide Editor Tabs');\n\t\tsuper(LayoutSettings.EDITOR_TABS_MODE, EditorTabsMode.NONE, title, HideEditorTabsAction.ID, precondition, localize2('hideEditorTabsDescription', \"Hide Tab Bar\"));\n\t}\n}\n\nexport class ZenHideEditorTabsAction extends AbstractSetShowTabsAction {\n\n\tstatic readonly ID = 'workbench.action.zenHideEditorTabs';\n\n\tconstructor() {\n\t\tconst precondition = ContextKeyExpr.and(ContextKeyExpr.equals(`config.${ZenModeSettings.SHOW_TABS}`, EditorTabsMode.NONE).negate(), InEditorZenModeContext)!;\n\t\tconst title = localize2('hideEditorTabsZenMode', 'Hide Editor Tabs in Zen Mode');\n\t\tsuper(ZenModeSettings.SHOW_TABS, EditorTabsMode.NONE, title, ZenHideEditorTabsAction.ID, precondition, localize2('hideEditorTabsZenModeDescription', \"Hide Tab Bar in Zen Mode\"));\n\t}\n}\n\n// --- Show Multiple Editor Tabs\n\nexport class ShowMultipleEditorTabsAction extends AbstractSetShowTabsAction {\n\n\tstatic readonly ID = 'workbench.action.showMultipleEditorTabs';\n\n\tconstructor() {\n\t\tconst precondition = ContextKeyExpr.and(ContextKeyExpr.equals(`config.${LayoutSettings.EDITOR_TABS_MODE}`, EditorTabsMode.MULTIPLE).negate(), InEditorZenModeContext.negate())!;\n\t\tconst title = localize2('showMultipleEditorTabs', 'Show Multiple Editor Tabs');\n\n\t\tsuper(LayoutSettings.EDITOR_TABS_MODE, EditorTabsMode.MULTIPLE, title, ShowMultipleEditorTabsAction.ID, precondition, localize2('showMultipleEditorTabsDescription', \"Show Tab Bar with multiple tabs\"));\n\t}\n}\n\nexport class ZenShowMultipleEditorTabsAction extends AbstractSetShowTabsAction {\n\n\tstatic readonly ID = 'workbench.action.zenShowMultipleEditorTabs';\n\n\tconstructor() {\n\t\tconst precondition = ContextKeyExpr.and(ContextKeyExpr.equals(`config.${ZenModeSettings.SHOW_TABS}`, EditorTabsMode.MULTIPLE).negate(), InEditorZenModeContext)!;\n\t\tconst title = localize2('showMultipleEditorTabsZenMode', 'Show Multiple Editor Tabs in Zen Mode');\n\n\t\tsuper(ZenModeSettings.SHOW_TABS, EditorTabsMode.MULTIPLE, title, ZenShowMultipleEditorTabsAction.ID, precondition, localize2('showMultipleEditorTabsZenModeDescription', \"Show Tab Bar in Zen Mode\"));\n\t}\n}\n\n// --- Show Single Editor Tab\n\nexport class ShowSingleEditorTabAction extends AbstractSetShowTabsAction {\n\n\tstatic readonly ID = 'workbench.action.showEditorTab';\n\n\tconstructor() {\n\t\tconst precondition = ContextKeyExpr.and(ContextKeyExpr.equals(`config.${LayoutSettings.EDITOR_TABS_MODE}`, EditorTabsMode.SINGLE).negate(), InEditorZenModeContext.negate())!;\n\t\tconst title = localize2('showSingleEditorTab', 'Show Single Editor Tab');\n\n\t\tsuper(LayoutSettings.EDITOR_TABS_MODE, EditorTabsMode.SINGLE, title, ShowSingleEditorTabAction.ID, precondition, localize2('showSingleEditorTabDescription', \"Show Tab Bar with one Tab\"));\n\t}\n}\n\nexport class ZenShowSingleEditorTabAction extends AbstractSetShowTabsAction {\n\n\tstatic readonly ID = 'workbench.action.zenShowEditorTab';\n\n\tconstructor() {\n\t\tconst precondition = ContextKeyExpr.and(ContextKeyExpr.equals(`config.${ZenModeSettings.SHOW_TABS}`, EditorTabsMode.SINGLE).negate(), InEditorZenModeContext)!;\n\t\tconst title = localize2('showSingleEditorTabZenMode', 'Show Single Editor Tab in Zen Mode');\n\n\t\tsuper(ZenModeSettings.SHOW_TABS, EditorTabsMode.SINGLE, title, ZenShowSingleEditorTabAction.ID, precondition, localize2('showSingleEditorTabZenModeDescription', \"Show Tab Bar in Zen Mode with one Tab\"));\n\t}\n}\n\nregisterAction2(HideEditorTabsAction);\nregisterAction2(ZenHideEditorTabsAction);\nregisterAction2(ShowMultipleEditorTabsAction);\nregisterAction2(ZenShowMultipleEditorTabsAction);\nregisterAction2(ShowSingleEditorTabAction);\nregisterAction2(ZenShowSingleEditorTabAction);\n\n// --- Tab Bar Submenu in View Appearance Menu\n\nMenuRegistry.appendMenuItem(MenuId.MenubarAppearanceMenu, {\n\tsubmenu: MenuId.EditorTabsBarShowTabsSubmenu,\n\ttitle: localize('tabBar', \"Tab Bar\"),\n\tgroup: '3_workbench_layout_move',\n\torder: 10,\n\twhen: InEditorZenModeContext.negate()\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarAppearanceMenu, {\n\tsubmenu: MenuId.EditorTabsBarShowTabsZenModeSubmenu,\n\ttitle: localize('tabBar', \"Tab Bar\"),\n\tgroup: '3_workbench_layout_move',\n\torder: 10,\n\twhen: InEditorZenModeContext\n});\n\n// --- Show Editor Actions in Title Bar\n\nexport class EditorActionsTitleBarAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.editorActionsTitleBar';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: EditorActionsTitleBarAction.ID,\n\t\t\ttitle: localize2('moveEditorActionsToTitleBar', \"Move Editor Actions to Title Bar\"),\n\t\t\tcategory: Categories.View,\n\t\t\tprecondition: ContextKeyExpr.equals(`config.${LayoutSettings.EDITOR_ACTIONS_LOCATION}`, EditorActionsLocation.TITLEBAR).negate(),\n\t\t\tmetadata: { description: localize2('moveEditorActionsToTitleBarDescription', \"Move Editor Actions from the tab bar to the title bar\") },\n\t\t\tf1: true\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): Promise<void> {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\treturn configurationService.updateValue(LayoutSettings.EDITOR_ACTIONS_LOCATION, EditorActionsLocation.TITLEBAR);\n\t}\n}\nregisterAction2(EditorActionsTitleBarAction);\n\n// --- Editor Actions Default Position\n\nexport class EditorActionsDefaultAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.editorActionsDefault';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: EditorActionsDefaultAction.ID,\n\t\t\ttitle: localize2('moveEditorActionsToTabBar', \"Move Editor Actions to Tab Bar\"),\n\t\t\tcategory: Categories.View,\n\t\t\tprecondition: ContextKeyExpr.and(\n\t\t\t\tContextKeyExpr.equals(`config.${LayoutSettings.EDITOR_ACTIONS_LOCATION}`, EditorActionsLocation.DEFAULT).negate(),\n\t\t\t\tContextKeyExpr.equals(`config.${LayoutSettings.EDITOR_TABS_MODE}`, EditorTabsMode.NONE).negate(),\n\t\t\t),\n\t\t\tmetadata: { description: localize2('moveEditorActionsToTabBarDescription', \"Move Editor Actions from the title bar to the tab bar\") },\n\t\t\tf1: true\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): Promise<void> {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\treturn configurationService.updateValue(LayoutSettings.EDITOR_ACTIONS_LOCATION, EditorActionsLocation.DEFAULT);\n\t}\n}\nregisterAction2(EditorActionsDefaultAction);\n\n// --- Hide Editor Actions\n\nexport class HideEditorActionsAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.hideEditorActions';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: HideEditorActionsAction.ID,\n\t\t\ttitle: localize2('hideEditorActons', \"Hide Editor Actions\"),\n\t\t\tcategory: Categories.View,\n\t\t\tprecondition: ContextKeyExpr.equals(`config.${LayoutSettings.EDITOR_ACTIONS_LOCATION}`, EditorActionsLocation.HIDDEN).negate(),\n\t\t\tmetadata: { description: localize2('hideEditorActonsDescription', \"Hide Editor Actions in the tab and title bar\") },\n\t\t\tf1: true\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): Promise<void> {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\treturn configurationService.updateValue(LayoutSettings.EDITOR_ACTIONS_LOCATION, EditorActionsLocation.HIDDEN);\n\t}\n}\nregisterAction2(HideEditorActionsAction);\n\n// --- Hide Editor Actions\n\nexport class ShowEditorActionsAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.showEditorActions';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ShowEditorActionsAction.ID,\n\t\t\ttitle: localize2('showEditorActons', \"Show Editor Actions\"),\n\t\t\tcategory: Categories.View,\n\t\t\tprecondition: ContextKeyExpr.equals(`config.${LayoutSettings.EDITOR_ACTIONS_LOCATION}`, EditorActionsLocation.HIDDEN),\n\t\t\tmetadata: { description: localize2('showEditorActonsDescription', \"Make Editor Actions visible.\") },\n\t\t\tf1: true\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): Promise<void> {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\treturn configurationService.updateValue(LayoutSettings.EDITOR_ACTIONS_LOCATION, EditorActionsLocation.DEFAULT);\n\t}\n}\nregisterAction2(ShowEditorActionsAction);\n\n// --- Editor Actions Position Submenu in View Appearance Menu\n\nMenuRegistry.appendMenuItem(MenuId.MenubarAppearanceMenu, {\n\tsubmenu: MenuId.EditorActionsPositionSubmenu,\n\ttitle: localize('editorActionsPosition', \"Editor Actions Position\"),\n\tgroup: '3_workbench_layout_move',\n\torder: 11\n});\n\n// --- Configure Tabs Layout\n\nexport class ConfigureEditorTabsAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.configureEditorTabs';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ConfigureEditorTabsAction.ID,\n\t\t\ttitle: localize2('configureTabs', \"Configure Tabs\"),\n\t\t\tcategory: Categories.View,\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor) {\n\t\tconst preferencesService = accessor.get(IPreferencesService);\n\t\tpreferencesService.openSettings({ jsonEditor: false, query: 'workbench.editor tab' });\n\t}\n}\nregisterAction2(ConfigureEditorTabsAction);\n\n// --- Configure Editor\n\nexport class ConfigureEditorAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.configureEditor';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ConfigureEditorAction.ID,\n\t\t\ttitle: localize2('configureEditors', \"Configure Editors\"),\n\t\t\tcategory: Categories.View,\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor) {\n\t\tconst preferencesService = accessor.get(IPreferencesService);\n\t\tpreferencesService.openSettings({ jsonEditor: false, query: 'workbench.editor' });\n\t}\n}\nregisterAction2(ConfigureEditorAction);\n\n// --- Toggle Pinned Tabs On Separate Row\n\nregisterAction2(class extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.toggleSeparatePinnedEditorTabs',\n\t\t\ttitle: localize2('toggleSeparatePinnedEditorTabs', \"Separate Pinned Editor Tabs\"),\n\t\t\tcategory: Categories.View,\n\t\t\tprecondition: ContextKeyExpr.equals(`config.${LayoutSettings.EDITOR_TABS_MODE}`, EditorTabsMode.MULTIPLE),\n\t\t\tmetadata: { description: localize2('toggleSeparatePinnedEditorTabsDescription', \"Toggle whether pinned editor tabs are shown on a separate row above unpinned tabs.\") },\n\t\t\tf1: true\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): Promise<void> {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\tconst oldettingValue = configurationService.getValue<string>('workbench.editor.pinnedTabsOnSeparateRow');\n\t\tconst newSettingValue = !oldettingValue;\n\n\t\treturn configurationService.updateValue('workbench.editor.pinnedTabsOnSeparateRow', newSettingValue);\n\t}\n});\n\n// --- Toggle Zen Mode\n\nregisterAction2(class extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.toggleZenMode',\n\t\t\ttitle: {\n\t\t\t\t...localize2('toggleZenMode', \"Toggle Zen Mode\"),\n\t\t\t\tmnemonicTitle: localize({ key: 'miToggleZenMode', comment: ['&& denotes a mnemonic'] }, \"Zen Mode\"),\n\t\t\t},\n\t\t\tprecondition: IsAuxiliaryWindowFocusedContext.toNegated(),\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyZ)\n\t\t\t},\n\t\t\ttoggled: InEditorZenModeContext,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.MenubarAppearanceMenu,\n\t\t\t\tgroup: '1_toggle_view',\n\t\t\t\torder: 2\n\t\t\t}]\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\treturn accessor.get(IWorkbenchLayoutService).toggleZenMode();\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'workbench.action.exitZenMode',\n\tweight: KeybindingWeight.EditorContrib - 1000,\n\thandler(accessor: ServicesAccessor) {\n\t\tconst layoutService = accessor.get(IWorkbenchLayoutService);\n\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\tif (InEditorZenModeContext.getValue(contextKeyService)) {\n\t\t\tlayoutService.toggleZenMode();\n\t\t}\n\t},\n\twhen: InEditorZenModeContext,\n\tprimary: KeyChord(KeyCode.Escape, KeyCode.Escape)\n});\n\n// --- Toggle Menu Bar\n\nif (isWindows || isLinux || isWeb) {\n\tregisterAction2(class ToggleMenubarAction extends Action2 {\n\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: 'workbench.action.toggleMenuBar',\n\t\t\t\ttitle: {\n\t\t\t\t\t...localize2('toggleMenuBar', \"Toggle Menu Bar\"),\n\t\t\t\t\tmnemonicTitle: localize({ key: 'miMenuBar', comment: ['&& denotes a mnemonic'] }, \"Menu &&Bar\"),\n\t\t\t\t},\n\t\t\t\tcategory: Categories.View,\n\t\t\t\tf1: true,\n\t\t\t\ttoggled: ContextKeyExpr.and(IsMacNativeContext.toNegated(), ContextKeyExpr.notEquals('config.window.menuBarVisibility', 'hidden'), ContextKeyExpr.notEquals('config.window.menuBarVisibility', 'toggle'), ContextKeyExpr.notEquals('config.window.menuBarVisibility', 'compact')),\n\t\t\t\tmenu: [{\n\t\t\t\t\tid: MenuId.MenubarAppearanceMenu,\n\t\t\t\t\tgroup: '2_workbench_layout',\n\t\t\t\t\torder: 0\n\t\t\t\t}]\n\t\t\t});\n\t\t}\n\n\t\trun(accessor: ServicesAccessor): void {\n\t\t\treturn accessor.get(IWorkbenchLayoutService).toggleMenuBar();\n\t\t}\n\t});\n\n\t// Add separately to title bar context menu so we can use a different title\n\tfor (const menuId of [MenuId.TitleBarContext, MenuId.TitleBarTitleContext]) {\n\t\tMenuRegistry.appendMenuItem(menuId, {\n\t\t\tcommand: {\n\t\t\t\tid: 'workbench.action.toggleMenuBar',\n\t\t\t\ttitle: localize('miMenuBarNoMnemonic', \"Menu Bar\"),\n\t\t\t\ttoggled: ContextKeyExpr.and(IsMacNativeContext.toNegated(), ContextKeyExpr.notEquals('config.window.menuBarVisibility', 'hidden'), ContextKeyExpr.notEquals('config.window.menuBarVisibility', 'toggle'), ContextKeyExpr.notEquals('config.window.menuBarVisibility', 'compact'))\n\t\t\t},\n\t\t\twhen: ContextKeyExpr.and(IsAuxiliaryWindowFocusedContext.toNegated(), ContextKeyExpr.notEquals(TitleBarStyleContext.key, TitlebarStyle.NATIVE), IsMainWindowFullscreenContext.negate()),\n\t\t\tgroup: '2_config',\n\t\t\torder: 0\n\t\t});\n\t}\n}\n\n// --- Reset View Locations\n\nregisterAction2(class extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.resetViewLocations',\n\t\t\ttitle: localize2('resetViewLocations', \"Reset View Locations\"),\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\treturn accessor.get(IViewDescriptorService).reset();\n\t}\n});\n\n// --- Move View\n\nregisterAction2(class extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.moveView',\n\t\t\ttitle: localize2('moveView', \"Move View\"),\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst viewDescriptorService = accessor.get(IViewDescriptorService);\n\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\tconst paneCompositePartService = accessor.get(IPaneCompositePartService);\n\n\t\tconst focusedViewId = FocusedViewContext.getValue(contextKeyService);\n\t\tlet viewId: string;\n\n\t\tif (focusedViewId && viewDescriptorService.getViewDescriptorById(focusedViewId)?.canMoveView) {\n\t\t\tviewId = focusedViewId;\n\t\t}\n\n\t\ttry {\n\t\t\tviewId = await this.getView(quickInputService, viewDescriptorService, paneCompositePartService, viewId!);\n\t\t\tif (!viewId) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst moveFocusedViewAction = new MoveFocusedViewAction();\n\t\t\tinstantiationService.invokeFunction(accessor => moveFocusedViewAction.run(accessor, viewId));\n\t\t} catch { }\n\t}\n\n\tprivate getViewItems(viewDescriptorService: IViewDescriptorService, paneCompositePartService: IPaneCompositePartService): Array<QuickPickItem> {\n\t\tconst results: Array<QuickPickItem> = [];\n\n\t\tconst viewlets = paneCompositePartService.getVisiblePaneCompositeIds(ViewContainerLocation.Sidebar);\n\t\tviewlets.forEach(viewletId => {\n\t\t\tconst container = viewDescriptorService.getViewContainerById(viewletId)!;\n\t\t\tconst containerModel = viewDescriptorService.getViewContainerModel(container);\n\n\t\t\tlet hasAddedView = false;\n\t\t\tcontainerModel.visibleViewDescriptors.forEach(viewDescriptor => {\n\t\t\t\tif (viewDescriptor.canMoveView) {\n\t\t\t\t\tif (!hasAddedView) {\n\t\t\t\t\t\tresults.push({\n\t\t\t\t\t\t\ttype: 'separator',\n\t\t\t\t\t\t\tlabel: localize('sidebarContainer', \"Side Bar / {0}\", containerModel.title)\n\t\t\t\t\t\t});\n\t\t\t\t\t\thasAddedView = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tresults.push({\n\t\t\t\t\t\tid: viewDescriptor.id,\n\t\t\t\t\t\tlabel: viewDescriptor.name.value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tconst panels = paneCompositePartService.getPinnedPaneCompositeIds(ViewContainerLocation.Panel);\n\t\tpanels.forEach(panel => {\n\t\t\tconst container = viewDescriptorService.getViewContainerById(panel)!;\n\t\t\tconst containerModel = viewDescriptorService.getViewContainerModel(container);\n\n\t\t\tlet hasAddedView = false;\n\t\t\tcontainerModel.visibleViewDescriptors.forEach(viewDescriptor => {\n\t\t\t\tif (viewDescriptor.canMoveView) {\n\t\t\t\t\tif (!hasAddedView) {\n\t\t\t\t\t\tresults.push({\n\t\t\t\t\t\t\ttype: 'separator',\n\t\t\t\t\t\t\tlabel: localize('panelContainer', \"Panel / {0}\", containerModel.title)\n\t\t\t\t\t\t});\n\t\t\t\t\t\thasAddedView = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tresults.push({\n\t\t\t\t\t\tid: viewDescriptor.id,\n\t\t\t\t\t\tlabel: viewDescriptor.name.value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\n\t\tconst sidePanels = paneCompositePartService.getPinnedPaneCompositeIds(ViewContainerLocation.AuxiliaryBar);\n\t\tsidePanels.forEach(panel => {\n\t\t\tconst container = viewDescriptorService.getViewContainerById(panel)!;\n\t\t\tconst containerModel = viewDescriptorService.getViewContainerModel(container);\n\n\t\t\tlet hasAddedView = false;\n\t\t\tcontainerModel.visibleViewDescriptors.forEach(viewDescriptor => {\n\t\t\t\tif (viewDescriptor.canMoveView) {\n\t\t\t\t\tif (!hasAddedView) {\n\t\t\t\t\t\tresults.push({\n\t\t\t\t\t\t\ttype: 'separator',\n\t\t\t\t\t\t\tlabel: localize('secondarySideBarContainer', \"Secondary Side Bar / {0}\", containerModel.title)\n\t\t\t\t\t\t});\n\t\t\t\t\t\thasAddedView = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tresults.push({\n\t\t\t\t\t\tid: viewDescriptor.id,\n\t\t\t\t\t\tlabel: viewDescriptor.name.value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn results;\n\t}\n\n\tprivate async getView(quickInputService: IQuickInputService, viewDescriptorService: IViewDescriptorService, paneCompositePartService: IPaneCompositePartService, viewId?: string): Promise<string> {\n\t\tconst disposables = new DisposableStore();\n\t\tconst quickPick = disposables.add(quickInputService.createQuickPick({ useSeparators: true }));\n\t\tquickPick.placeholder = localize('moveFocusedView.selectView', \"Select a View to Move\");\n\t\tquickPick.items = this.getViewItems(viewDescriptorService, paneCompositePartService);\n\t\tquickPick.selectedItems = quickPick.items.filter(item => (item as IQuickPickItem).id === viewId) as IQuickPickItem[];\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tdisposables.add(quickPick.onDidAccept(() => {\n\t\t\t\tconst viewId = quickPick.selectedItems[0];\n\t\t\t\tif (viewId.id) {\n\t\t\t\t\tresolve(viewId.id);\n\t\t\t\t} else {\n\t\t\t\t\treject();\n\t\t\t\t}\n\n\t\t\t\tquickPick.hide();\n\t\t\t}));\n\n\t\t\tdisposables.add(quickPick.onDidHide(() => {\n\t\t\t\tdisposables.dispose();\n\t\t\t\treject();\n\t\t\t}));\n\n\t\t\tquickPick.show();\n\t\t});\n\t}\n});\n\n// --- Move Focused View\n\nclass MoveFocusedViewAction extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.moveFocusedView',\n\t\t\ttitle: localize2('moveFocusedView', \"Move Focused View\"),\n\t\t\tcategory: Categories.View,\n\t\t\tprecondition: FocusedViewContext.notEqualsTo(''),\n\t\t\tf1: true\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor, viewId?: string): void {\n\t\tconst viewDescriptorService = accessor.get(IViewDescriptorService);\n\t\tconst viewsService = accessor.get(IViewsService);\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\tconst dialogService = accessor.get(IDialogService);\n\t\tconst paneCompositePartService = accessor.get(IPaneCompositePartService);\n\n\t\tconst focusedViewId = viewId || FocusedViewContext.getValue(contextKeyService);\n\n\t\tif (focusedViewId === undefined || focusedViewId.trim() === '') {\n\t\t\tdialogService.error(localize('moveFocusedView.error.noFocusedView', \"There is no view currently focused.\"));\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewDescriptor = viewDescriptorService.getViewDescriptorById(focusedViewId);\n\t\tif (!viewDescriptor || !viewDescriptor.canMoveView) {\n\t\t\tdialogService.error(localize('moveFocusedView.error.nonMovableView', \"The currently focused view is not movable.\"));\n\t\t\treturn;\n\t\t}\n\n\t\tconst disposables = new DisposableStore();\n\t\tconst quickPick = disposables.add(quickInputService.createQuickPick({ useSeparators: true }));\n\t\tquickPick.placeholder = localize('moveFocusedView.selectDestination', \"Select a Destination for the View\");\n\t\tquickPick.title = localize({ key: 'moveFocusedView.title', comment: ['{0} indicates the title of the view the user has selected to move.'] }, \"View: Move {0}\", viewDescriptor.name.value);\n\n\t\tconst items: Array<IQuickPickItem | IQuickPickSeparator> = [];\n\t\tconst currentContainer = viewDescriptorService.getViewContainerByViewId(focusedViewId)!;\n\t\tconst currentLocation = viewDescriptorService.getViewLocationById(focusedViewId)!;\n\t\tconst isViewSolo = viewDescriptorService.getViewContainerModel(currentContainer).allViewDescriptors.length === 1;\n\n\t\tif (!(isViewSolo && currentLocation === ViewContainerLocation.Panel)) {\n\t\t\titems.push({\n\t\t\t\tid: '_.panel.newcontainer',\n\t\t\t\tlabel: localize({ key: 'moveFocusedView.newContainerInPanel', comment: ['Creates a new top-level tab in the panel.'] }, \"New Panel Entry\"),\n\t\t\t});\n\t\t}\n\n\t\tif (!(isViewSolo && currentLocation === ViewContainerLocation.Sidebar)) {\n\t\t\titems.push({\n\t\t\t\tid: '_.sidebar.newcontainer',\n\t\t\t\tlabel: localize('moveFocusedView.newContainerInSidebar', \"New Side Bar Entry\")\n\t\t\t});\n\t\t}\n\n\t\tif (!(isViewSolo && currentLocation === ViewContainerLocation.AuxiliaryBar)) {\n\t\t\titems.push({\n\t\t\t\tid: '_.auxiliarybar.newcontainer',\n\t\t\t\tlabel: localize('moveFocusedView.newContainerInSidePanel', \"New Secondary Side Bar Entry\")\n\t\t\t});\n\t\t}\n\n\t\titems.push({\n\t\t\ttype: 'separator',\n\t\t\tlabel: localize('sidebar', \"Side Bar\")\n\t\t});\n\n\t\tconst pinnedViewlets = paneCompositePartService.getVisiblePaneCompositeIds(ViewContainerLocation.Sidebar);\n\t\titems.push(...pinnedViewlets\n\t\t\t.filter(viewletId => {\n\t\t\t\tif (viewletId === viewDescriptorService.getViewContainerByViewId(focusedViewId)!.id) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn !viewDescriptorService.getViewContainerById(viewletId)!.rejectAddedViews;\n\t\t\t})\n\t\t\t.map(viewletId => {\n\t\t\t\treturn {\n\t\t\t\t\tid: viewletId,\n\t\t\t\t\tlabel: viewDescriptorService.getViewContainerModel(viewDescriptorService.getViewContainerById(viewletId)!)!.title\n\t\t\t\t};\n\t\t\t}));\n\n\t\titems.push({\n\t\t\ttype: 'separator',\n\t\t\tlabel: localize('panel', \"Panel\")\n\t\t});\n\n\t\tconst pinnedPanels = paneCompositePartService.getPinnedPaneCompositeIds(ViewContainerLocation.Panel);\n\t\titems.push(...pinnedPanels\n\t\t\t.filter(panel => {\n\t\t\t\tif (panel === viewDescriptorService.getViewContainerByViewId(focusedViewId)!.id) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn !viewDescriptorService.getViewContainerById(panel)!.rejectAddedViews;\n\t\t\t})\n\t\t\t.map(panel => {\n\t\t\t\treturn {\n\t\t\t\t\tid: panel,\n\t\t\t\t\tlabel: viewDescriptorService.getViewContainerModel(viewDescriptorService.getViewContainerById(panel)!)!.title\n\t\t\t\t};\n\t\t\t}));\n\n\t\titems.push({\n\t\t\ttype: 'separator',\n\t\t\tlabel: localize('secondarySideBar', \"Secondary Side Bar\")\n\t\t});\n\n\t\tconst pinnedAuxPanels = paneCompositePartService.getPinnedPaneCompositeIds(ViewContainerLocation.AuxiliaryBar);\n\t\titems.push(...pinnedAuxPanels\n\t\t\t.filter(panel => {\n\t\t\t\tif (panel === viewDescriptorService.getViewContainerByViewId(focusedViewId)!.id) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn !viewDescriptorService.getViewContainerById(panel)!.rejectAddedViews;\n\t\t\t})\n\t\t\t.map(panel => {\n\t\t\t\treturn {\n\t\t\t\t\tid: panel,\n\t\t\t\t\tlabel: viewDescriptorService.getViewContainerModel(viewDescriptorService.getViewContainerById(panel)!)!.title\n\t\t\t\t};\n\t\t\t}));\n\n\t\tquickPick.items = items;\n\n\t\tdisposables.add(quickPick.onDidAccept(() => {\n\t\t\tconst destination = quickPick.selectedItems[0];\n\n\t\t\tif (destination.id === '_.panel.newcontainer') {\n\t\t\t\tviewDescriptorService.moveViewToLocation(viewDescriptor, ViewContainerLocation.Panel, this.desc.id);\n\t\t\t\tviewsService.openView(focusedViewId, true);\n\t\t\t} else if (destination.id === '_.sidebar.newcontainer') {\n\t\t\t\tviewDescriptorService.moveViewToLocation(viewDescriptor, ViewContainerLocation.Sidebar, this.desc.id);\n\t\t\t\tviewsService.openView(focusedViewId, true);\n\t\t\t} else if (destination.id === '_.auxiliarybar.newcontainer') {\n\t\t\t\tviewDescriptorService.moveViewToLocation(viewDescriptor, ViewContainerLocation.AuxiliaryBar, this.desc.id);\n\t\t\t\tviewsService.openView(focusedViewId, true);\n\t\t\t} else if (destination.id) {\n\t\t\t\tviewDescriptorService.moveViewsToContainer([viewDescriptor], viewDescriptorService.getViewContainerById(destination.id)!, undefined, this.desc.id);\n\t\t\t\tviewsService.openView(focusedViewId, true);\n\t\t\t}\n\n\t\t\tquickPick.hide();\n\t\t}));\n\n\t\tdisposables.add(quickPick.onDidHide(() => disposables.dispose()));\n\n\t\tquickPick.show();\n\t}\n}\n\nregisterAction2(MoveFocusedViewAction);\n\n// --- Reset Focused View Location\n\nregisterAction2(class extends Action2 {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.resetFocusedViewLocation',\n\t\t\ttitle: localize2('resetFocusedViewLocation', \"Reset Focused View Location\"),\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true,\n\t\t\tprecondition: FocusedViewContext.notEqualsTo('')\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tconst viewDescriptorService = accessor.get(IViewDescriptorService);\n\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\tconst dialogService = accessor.get(IDialogService);\n\t\tconst viewsService = accessor.get(IViewsService);\n\n\t\tconst focusedViewId = FocusedViewContext.getValue(contextKeyService);\n\n\t\tlet viewDescriptor: IViewDescriptor | null = null;\n\t\tif (focusedViewId !== undefined && focusedViewId.trim() !== '') {\n\t\t\tviewDescriptor = viewDescriptorService.getViewDescriptorById(focusedViewId);\n\t\t}\n\n\t\tif (!viewDescriptor) {\n\t\t\tdialogService.error(localize('resetFocusedView.error.noFocusedView', \"There is no view currently focused.\"));\n\t\t\treturn;\n\t\t}\n\n\t\tconst defaultContainer = viewDescriptorService.getDefaultContainerById(viewDescriptor.id);\n\t\tif (!defaultContainer || defaultContainer === viewDescriptorService.getViewContainerByViewId(viewDescriptor.id)) {\n\t\t\treturn;\n\t\t}\n\n\t\tviewDescriptorService.moveViewsToContainer([viewDescriptor], defaultContainer, undefined, this.desc.id);\n\t\tviewsService.openView(viewDescriptor.id, true);\n\t}\n});\n\n// --- Resize View\n\nabstract class BaseResizeViewAction extends Action2 {\n\n\tprotected static readonly RESIZE_INCREMENT = 60; // This is a css pixel size\n\n\tprotected resizePart(widthChange: number, heightChange: number, layoutService: IWorkbenchLayoutService, partToResize?: Parts): void {\n\n\t\tlet part: Parts | undefined;\n\t\tif (partToResize === undefined) {\n\t\t\tconst isEditorFocus = layoutService.hasFocus(Parts.EDITOR_PART);\n\t\t\tconst isSidebarFocus = layoutService.hasFocus(Parts.SIDEBAR_PART);\n\t\t\tconst isPanelFocus = layoutService.hasFocus(Parts.PANEL_PART);\n\t\t\tconst isAuxiliaryBarFocus = layoutService.hasFocus(Parts.AUXILIARYBAR_PART);\n\n\t\t\tif (isSidebarFocus) {\n\t\t\t\tpart = Parts.SIDEBAR_PART;\n\t\t\t} else if (isPanelFocus) {\n\t\t\t\tpart = Parts.PANEL_PART;\n\t\t\t} else if (isEditorFocus) {\n\t\t\t\tpart = Parts.EDITOR_PART;\n\t\t\t} else if (isAuxiliaryBarFocus) {\n\t\t\t\tpart = Parts.AUXILIARYBAR_PART;\n\t\t\t}\n\t\t} else {\n\t\t\tpart = partToResize;\n\t\t}\n\n\t\tif (part) {\n\t\t\tlayoutService.resizePart(part, widthChange, heightChange);\n\t\t}\n\t}\n}\n\nclass IncreaseViewSizeAction extends BaseResizeViewAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.increaseViewSize',\n\t\t\ttitle: localize2('increaseViewSize', 'Increase Current View Size'),\n\t\t\tf1: true,\n\t\t\tprecondition: IsAuxiliaryWindowFocusedContext.toNegated()\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tthis.resizePart(BaseResizeViewAction.RESIZE_INCREMENT, BaseResizeViewAction.RESIZE_INCREMENT, accessor.get(IWorkbenchLayoutService));\n\t}\n}\n\nclass IncreaseViewWidthAction extends BaseResizeViewAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.increaseViewWidth',\n\t\t\ttitle: localize2('increaseEditorWidth', 'Increase Editor Width'),\n\t\t\tf1: true,\n\t\t\tprecondition: IsAuxiliaryWindowFocusedContext.toNegated()\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tthis.resizePart(BaseResizeViewAction.RESIZE_INCREMENT, 0, accessor.get(IWorkbenchLayoutService), Parts.EDITOR_PART);\n\t}\n}\n\nclass IncreaseViewHeightAction extends BaseResizeViewAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.increaseViewHeight',\n\t\t\ttitle: localize2('increaseEditorHeight', 'Increase Editor Height'),\n\t\t\tf1: true,\n\t\t\tprecondition: IsAuxiliaryWindowFocusedContext.toNegated()\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tthis.resizePart(0, BaseResizeViewAction.RESIZE_INCREMENT, accessor.get(IWorkbenchLayoutService), Parts.EDITOR_PART);\n\t}\n}\n\nclass DecreaseViewSizeAction extends BaseResizeViewAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.decreaseViewSize',\n\t\t\ttitle: localize2('decreaseViewSize', 'Decrease Current View Size'),\n\t\t\tf1: true,\n\t\t\tprecondition: IsAuxiliaryWindowFocusedContext.toNegated()\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tthis.resizePart(-BaseResizeViewAction.RESIZE_INCREMENT, -BaseResizeViewAction.RESIZE_INCREMENT, accessor.get(IWorkbenchLayoutService));\n\t}\n}\n\nclass DecreaseViewWidthAction extends BaseResizeViewAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.decreaseViewWidth',\n\t\t\ttitle: localize2('decreaseEditorWidth', 'Decrease Editor Width'),\n\t\t\tf1: true,\n\t\t\tprecondition: IsAuxiliaryWindowFocusedContext.toNegated()\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tthis.resizePart(-BaseResizeViewAction.RESIZE_INCREMENT, 0, accessor.get(IWorkbenchLayoutService), Parts.EDITOR_PART);\n\t}\n}\n\nclass DecreaseViewHeightAction extends BaseResizeViewAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.decreaseViewHeight',\n\t\t\ttitle: localize2('decreaseEditorHeight', 'Decrease Editor Height'),\n\t\t\tf1: true,\n\t\t\tprecondition: IsAuxiliaryWindowFocusedContext.toNegated()\n\t\t});\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tthis.resizePart(0, -BaseResizeViewAction.RESIZE_INCREMENT, accessor.get(IWorkbenchLayoutService), Parts.EDITOR_PART);\n\t}\n}\n\nregisterAction2(IncreaseViewSizeAction);\nregisterAction2(IncreaseViewWidthAction);\nregisterAction2(IncreaseViewHeightAction);\n\nregisterAction2(DecreaseViewSizeAction);\nregisterAction2(DecreaseViewWidthAction);\nregisterAction2(DecreaseViewHeightAction);\n\ntype ContextualLayoutVisualIcon = { iconA: ThemeIcon; iconB: ThemeIcon; whenA: ContextKeyExpression };\ntype LayoutVisualIcon = ThemeIcon | ContextualLayoutVisualIcon;\n\nfunction isContextualLayoutVisualIcon(icon: LayoutVisualIcon): icon is ContextualLayoutVisualIcon {\n\treturn (icon as ContextualLayoutVisualIcon).iconA !== undefined;\n}\n\ninterface CustomizeLayoutItem {\n\tid: string;\n\tactive: ContextKeyExpression;\n\tlabel: string;\n\tactiveIcon: ThemeIcon;\n\tvisualIcon?: LayoutVisualIcon;\n\tactiveAriaLabel: string;\n\tinactiveIcon?: ThemeIcon;\n\tinactiveAriaLabel?: string;\n\tuseButtons: boolean;\n}\n\nconst CreateToggleLayoutItem = (id: string, active: ContextKeyExpression, label: string, visualIcon?: LayoutVisualIcon): CustomizeLayoutItem => {\n\treturn {\n\t\tid,\n\t\tactive,\n\t\tlabel,\n\t\tvisualIcon,\n\t\tactiveIcon: Codicon.eye,\n\t\tinactiveIcon: Codicon.eyeClosed,\n\t\tactiveAriaLabel: localize('selectToHide', \"Select to Hide\"),\n\t\tinactiveAriaLabel: localize('selectToShow', \"Select to Show\"),\n\t\tuseButtons: true,\n\t};\n};\n\nconst CreateOptionLayoutItem = (id: string, active: ContextKeyExpression, label: string, visualIcon?: LayoutVisualIcon): CustomizeLayoutItem => {\n\treturn {\n\t\tid,\n\t\tactive,\n\t\tlabel,\n\t\tvisualIcon,\n\t\tactiveIcon: Codicon.check,\n\t\tactiveAriaLabel: localize('active', \"Active\"),\n\t\tuseButtons: false\n\t};\n};\n\nconst MenuBarToggledContext = ContextKeyExpr.and(IsMacNativeContext.toNegated(), ContextKeyExpr.notEquals('config.window.menuBarVisibility', 'hidden'), ContextKeyExpr.notEquals('config.window.menuBarVisibility', 'toggle'), ContextKeyExpr.notEquals('config.window.menuBarVisibility', 'compact')) as ContextKeyExpression;\nconst ToggleVisibilityActions: CustomizeLayoutItem[] = [];\nif (!isMacintosh || !isNative) {\n\tToggleVisibilityActions.push(CreateToggleLayoutItem('workbench.action.toggleMenuBar', MenuBarToggledContext, localize('menuBar', \"Menu Bar\"), menubarIcon));\n}\n\nToggleVisibilityActions.push(...[\n\tCreateToggleLayoutItem(ToggleActivityBarVisibilityActionId, ContextKeyExpr.notEquals('config.workbench.activityBar.location', 'hidden'), localize('activityBar', \"Activity Bar\"), { whenA: ContextKeyExpr.equals('config.workbench.sideBar.location', 'left'), iconA: activityBarLeftIcon, iconB: activityBarRightIcon }),\n\tCreateToggleLayoutItem(ToggleSidebarVisibilityAction.ID, SideBarVisibleContext, localize('sideBar', \"Primary Side Bar\"), { whenA: ContextKeyExpr.equals('config.workbench.sideBar.location', 'left'), iconA: panelLeftIcon, iconB: panelRightIcon }),\n\tCreateToggleLayoutItem(ToggleAuxiliaryBarAction.ID, AuxiliaryBarVisibleContext, localize('secondarySideBar', \"Secondary Side Bar\"), { whenA: ContextKeyExpr.equals('config.workbench.sideBar.location', 'left'), iconA: panelRightIcon, iconB: panelLeftIcon }),\n\tCreateToggleLayoutItem(TogglePanelAction.ID, PanelVisibleContext, localize('panel', \"Panel\"), panelIcon),\n\tCreateToggleLayoutItem(ToggleStatusbarVisibilityAction.ID, ContextKeyExpr.equals('config.workbench.statusBar.visible', true), localize('statusBar', \"Status Bar\"), statusBarIcon),\n]);\n\nconst MoveSideBarActions: CustomizeLayoutItem[] = [\n\tCreateOptionLayoutItem(MoveSidebarLeftAction.ID, ContextKeyExpr.equals('config.workbench.sideBar.location', 'left'), localize('leftSideBar', \"Left\"), panelLeftIcon),\n\tCreateOptionLayoutItem(MoveSidebarRightAction.ID, ContextKeyExpr.equals('config.workbench.sideBar.location', 'right'), localize('rightSideBar', \"Right\"), panelRightIcon),\n];\n\nconst AlignPanelActions: CustomizeLayoutItem[] = [\n\tCreateOptionLayoutItem('workbench.action.alignPanelLeft', PanelAlignmentContext.isEqualTo('left'), localize('leftPanel', \"Left\"), panelAlignmentLeftIcon),\n\tCreateOptionLayoutItem('workbench.action.alignPanelRight', PanelAlignmentContext.isEqualTo('right'), localize('rightPanel', \"Right\"), panelAlignmentRightIcon),\n\tCreateOptionLayoutItem('workbench.action.alignPanelCenter', PanelAlignmentContext.isEqualTo('center'), localize('centerPanel', \"Center\"), panelAlignmentCenterIcon),\n\tCreateOptionLayoutItem('workbench.action.alignPanelJustify', PanelAlignmentContext.isEqualTo('justify'), localize('justifyPanel', \"Justify\"), panelAlignmentJustifyIcon),\n];\n\nconst MiscLayoutOptions: CustomizeLayoutItem[] = [\n\tCreateOptionLayoutItem('workbench.action.toggleFullScreen', IsMainWindowFullscreenContext, localize('fullscreen', \"Full Screen\"), fullscreenIcon),\n\tCreateOptionLayoutItem('workbench.action.toggleZenMode', InEditorZenModeContext, localize('zenMode', \"Zen Mode\"), zenModeIcon),\n\tCreateOptionLayoutItem('workbench.action.toggleCenteredLayout', IsMainEditorCenteredLayoutContext, localize('centeredLayout', \"Centered Layout\"), centerLayoutIcon),\n];\n\nconst LayoutContextKeySet = new Set<string>();\nfor (const { active } of [...ToggleVisibilityActions, ...MoveSideBarActions, ...AlignPanelActions, ...MiscLayoutOptions]) {\n\tfor (const key of active.keys()) {\n\t\tLayoutContextKeySet.add(key);\n\t}\n}\n\nregisterAction2(class CustomizeLayoutAction extends Action2 {\n\n\tprivate _currentQuickPick?: IQuickPick<IQuickPickItem, { useSeparators: true }>;\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.customizeLayout',\n\t\t\ttitle: localize2('customizeLayout', \"Customize Layout...\"),\n\t\t\tf1: true,\n\t\t\ticon: configureLayoutIcon,\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.LayoutControlMenuSubmenu,\n\t\t\t\t\tgroup: 'z_end',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.LayoutControlMenu,\n\t\t\t\t\twhen: ContextKeyExpr.equals('config.workbench.layoutControl.type', 'both'),\n\t\t\t\t\tgroup: 'z_end'\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n\n\tgetItems(contextKeyService: IContextKeyService, keybindingService: IKeybindingService): QuickPickItem[] {\n\t\tconst toQuickPickItem = (item: CustomizeLayoutItem): IQuickPickItem => {\n\t\t\tconst toggled = item.active.evaluate(contextKeyService.getContext(null));\n\t\t\tlet label = item.useButtons ?\n\t\t\t\titem.label :\n\t\t\t\titem.label + (toggled && item.activeIcon ? ` $(${item.activeIcon.id})` : (!toggled && item.inactiveIcon ? ` $(${item.inactiveIcon.id})` : ''));\n\t\t\tconst ariaLabel =\n\t\t\t\titem.label + (toggled && item.activeAriaLabel ? ` (${item.activeAriaLabel})` : (!toggled && item.inactiveAriaLabel ? ` (${item.inactiveAriaLabel})` : ''));\n\n\t\t\tif (item.visualIcon) {\n\t\t\t\tlet icon = item.visualIcon;\n\t\t\t\tif (isContextualLayoutVisualIcon(icon)) {\n\t\t\t\t\tconst useIconA = icon.whenA.evaluate(contextKeyService.getContext(null));\n\t\t\t\t\ticon = useIconA ? icon.iconA : icon.iconB;\n\t\t\t\t}\n\n\t\t\t\tlabel = `$(${icon.id}) ${label}`;\n\t\t\t}\n\n\t\t\tconst icon = toggled ? item.activeIcon : item.inactiveIcon;\n\n\t\t\treturn {\n\t\t\t\ttype: 'item',\n\t\t\t\tid: item.id,\n\t\t\t\tlabel,\n\t\t\t\tariaLabel,\n\t\t\t\tkeybinding: keybindingService.lookupKeybinding(item.id, contextKeyService),\n\t\t\t\tbuttons: !item.useButtons ? undefined : [\n\t\t\t\t\t{\n\t\t\t\t\t\talwaysVisible: false,\n\t\t\t\t\t\ttooltip: ariaLabel,\n\t\t\t\t\t\ticonClass: icon ? ThemeIcon.asClassName(icon) : undefined\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\n\t\t};\n\t\treturn [\n\t\t\t{\n\t\t\t\ttype: 'separator',\n\t\t\t\tlabel: localize('toggleVisibility', \"Visibility\")\n\t\t\t},\n\t\t\t...ToggleVisibilityActions.map(toQuickPickItem),\n\t\t\t{\n\t\t\t\ttype: 'separator',\n\t\t\t\tlabel: localize('sideBarPosition', \"Primary Side Bar Position\")\n\t\t\t},\n\t\t\t...MoveSideBarActions.map(toQuickPickItem),\n\t\t\t{\n\t\t\t\ttype: 'separator',\n\t\t\t\tlabel: localize('panelAlignment', \"Panel Alignment\")\n\t\t\t},\n\t\t\t...AlignPanelActions.map(toQuickPickItem),\n\t\t\t{\n\t\t\t\ttype: 'separator',\n\t\t\t\tlabel: localize('layoutModes', \"Modes\"),\n\t\t\t},\n\t\t\t...MiscLayoutOptions.map(toQuickPickItem),\n\t\t];\n\t}\n\n\trun(accessor: ServicesAccessor): void {\n\t\tif (this._currentQuickPick) {\n\t\t\tthis._currentQuickPick.hide();\n\t\t\treturn;\n\t\t}\n\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\tconst commandService = accessor.get(ICommandService);\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst keybindingService = accessor.get(IKeybindingService);\n\n\t\tconst disposables = new DisposableStore();\n\n\t\tconst quickPick = disposables.add(quickInputService.createQuickPick({ useSeparators: true }));\n\n\t\tthis._currentQuickPick = quickPick;\n\t\tquickPick.items = this.getItems(contextKeyService, keybindingService);\n\t\tquickPick.ignoreFocusOut = true;\n\t\tquickPick.hideInput = true;\n\t\tquickPick.title = localize('customizeLayoutQuickPickTitle', \"Customize Layout\");\n\n\t\tconst closeButton = {\n\t\t\talwaysVisible: true,\n\t\t\ticonClass: ThemeIcon.asClassName(Codicon.close),\n\t\t\ttooltip: localize('close', \"Close\")\n\t\t};\n\n\t\tconst resetButton = {\n\t\t\talwaysVisible: true,\n\t\t\ticonClass: ThemeIcon.asClassName(Codicon.discard),\n\t\t\ttooltip: localize('restore defaults', \"Restore Defaults\")\n\t\t};\n\n\t\tquickPick.buttons = [\n\t\t\tresetButton,\n\t\t\tcloseButton\n\t\t];\n\n\t\tlet selectedItem: CustomizeLayoutItem | undefined = undefined;\n\t\tdisposables.add(contextKeyService.onDidChangeContext(changeEvent => {\n\t\t\tif (changeEvent.affectsSome(LayoutContextKeySet)) {\n\t\t\t\tquickPick.items = this.getItems(contextKeyService, keybindingService);\n\t\t\t\tif (selectedItem) {\n\t\t\t\t\tquickPick.activeItems = quickPick.items.filter(item => (item as CustomizeLayoutItem).id === selectedItem?.id) as IQuickPickItem[];\n\t\t\t\t}\n\n\t\t\t\tsetTimeout(() => quickInputService.focus(), 0);\n\t\t\t}\n\t\t}));\n\n\t\tdisposables.add(quickPick.onDidAccept(event => {\n\t\t\tif (quickPick.selectedItems.length) {\n\t\t\t\tselectedItem = quickPick.selectedItems[0] as CustomizeLayoutItem;\n\t\t\t\tcommandService.executeCommand(selectedItem.id);\n\t\t\t}\n\t\t}));\n\n\t\tdisposables.add(quickPick.onDidTriggerItemButton(event => {\n\t\t\tif (event.item) {\n\t\t\t\tselectedItem = event.item as CustomizeLayoutItem;\n\t\t\t\tcommandService.executeCommand(selectedItem.id);\n\t\t\t}\n\t\t}));\n\n\t\tdisposables.add(quickPick.onDidTriggerButton((button) => {\n\t\t\tif (button === closeButton) {\n\t\t\t\tquickPick.hide();\n\t\t\t} else if (button === resetButton) {\n\n\t\t\t\tconst resetSetting = (id: string) => {\n\t\t\t\t\tconst config = configurationService.inspect(id);\n\t\t\t\t\tconfigurationService.updateValue(id, config.defaultValue);\n\t\t\t\t};\n\n\t\t\t\t// Reset all layout options\n\t\t\t\tresetSetting('workbench.activityBar.location');\n\t\t\t\tresetSetting('workbench.sideBar.location');\n\t\t\t\tresetSetting('workbench.statusBar.visible');\n\t\t\t\tresetSetting('workbench.panel.defaultLocation');\n\n\t\t\t\tif (!isMacintosh || !isNative) {\n\t\t\t\t\tresetSetting('window.menuBarVisibility');\n\t\t\t\t}\n\n\t\t\t\tcommandService.executeCommand('workbench.action.alignPanelCenter');\n\t\t\t}\n\t\t}));\n\n\t\tdisposables.add(quickPick.onDidHide(() => {\n\t\t\tquickPick.dispose();\n\t\t}));\n\n\t\tdisposables.add(quickPick.onDispose(() => {\n\t\t\tthis._currentQuickPick = undefined;\n\t\t\tdisposables.dispose();\n\t\t}));\n\n\t\tquickPick.show();\n\t}\n});\n"],
  "mappings": "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",
  "names": ["accessor", "viewId", "icon"]
}
