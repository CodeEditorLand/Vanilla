{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/actions/windowActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tgetActiveElement,\n\tgetActiveWindow,\n\tisHTMLElement,\n} from \"../../../base/browser/dom.js\";\nimport { Codicon } from \"../../../base/common/codicons.js\";\nimport { KeyChord, KeyCode, KeyMod } from \"../../../base/common/keyCodes.js\";\nimport { splitRecentLabel } from \"../../../base/common/labels.js\";\nimport { ResourceMap } from \"../../../base/common/map.js\";\nimport {\n\tisMacintosh,\n\tisWeb,\n\tisWindows,\n} from \"../../../base/common/platform.js\";\nimport { ThemeIcon } from \"../../../base/common/themables.js\";\nimport type { URI } from \"../../../base/common/uri.js\";\nimport { ILanguageService } from \"../../../editor/common/languages/language.js\";\nimport { getIconClasses } from \"../../../editor/common/services/getIconClasses.js\";\nimport { IModelService } from \"../../../editor/common/services/model.js\";\nimport { localize, localize2 } from \"../../../nls.js\";\nimport { Categories } from \"../../../platform/action/common/actionCommonCategories.js\";\nimport {\n\tAction2,\n\ttype IAction2Options,\n\tMenuId,\n\tMenuRegistry,\n\tregisterAction2,\n} from \"../../../platform/actions/common/actions.js\";\nimport {\n\tisFolderBackupInfo,\n\tisWorkspaceBackupInfo,\n} from \"../../../platform/backup/common/backup.js\";\nimport { CommandsRegistry } from \"../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../platform/configuration/common/configuration.js\";\nimport { ContextKeyExpr } from \"../../../platform/contextkey/common/contextkey.js\";\nimport {\n\tIsDevelopmentContext,\n\tIsIOSContext,\n\tIsMacNativeContext,\n\tIsWebContext,\n} from \"../../../platform/contextkey/common/contextkeys.js\";\nimport { IDialogService } from \"../../../platform/dialogs/common/dialogs.js\";\nimport { FileKind } from \"../../../platform/files/common/files.js\";\nimport type { ServicesAccessor } from \"../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../platform/keybinding/common/keybinding.js\";\nimport {\n\tKeybindingWeight,\n\tKeybindingsRegistry,\n} from \"../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport {\n\tILabelService,\n\tVerbosity,\n} from \"../../../platform/label/common/label.js\";\nimport {\n\ttype IKeyMods,\n\ttype IQuickInputButton,\n\tIQuickInputService,\n\ttype IQuickPickItem,\n\ttype IQuickPickSeparator,\n} from \"../../../platform/quickinput/common/quickInput.js\";\nimport type { IWindowOpenable } from \"../../../platform/window/common/window.js\";\nimport {\n\tIWorkspaceContextService,\n\ttype IWorkspaceIdentifier,\n} from \"../../../platform/workspace/common/workspace.js\";\nimport {\n\ttype IRecent,\n\tIWorkspacesService,\n\tisRecentFolder,\n\tisRecentWorkspace,\n} from \"../../../platform/workspaces/common/workspaces.js\";\nimport { IsMainWindowFullscreenContext } from \"../../common/contextkeys.js\";\nimport { IHostService } from \"../../services/host/browser/host.js\";\nimport { getQuickNavigateHandler, inQuickPickContext } from \"../quickaccess.js\";\n\nexport const inRecentFilesPickerContextKey = \"inRecentFilesPicker\";\n\ninterface IRecentlyOpenedPick extends IQuickPickItem {\n\tresource: URI;\n\topenable: IWindowOpenable;\n\tremoteAuthority: string | undefined;\n}\n\nabstract class BaseOpenRecentAction extends Action2 {\n\tprivate readonly removeFromRecentlyOpened: IQuickInputButton = {\n\t\ticonClass: ThemeIcon.asClassName(Codicon.removeClose),\n\t\ttooltip: localize(\"remove\", \"Remove from Recently Opened\"),\n\t};\n\n\tprivate readonly dirtyRecentlyOpenedFolder: IQuickInputButton = {\n\t\ticonClass:\n\t\t\t\"dirty-workspace \" + ThemeIcon.asClassName(Codicon.closeDirty),\n\t\ttooltip: localize(\n\t\t\t\"dirtyRecentlyOpenedFolder\",\n\t\t\t\"Folder With Unsaved Files\",\n\t\t),\n\t\talwaysVisible: true,\n\t};\n\n\tprivate readonly dirtyRecentlyOpenedWorkspace: IQuickInputButton = {\n\t\t...this.dirtyRecentlyOpenedFolder,\n\t\ttooltip: localize(\n\t\t\t\"dirtyRecentlyOpenedWorkspace\",\n\t\t\t\"Workspace With Unsaved Files\",\n\t\t),\n\t};\n\n\tconstructor(desc: Readonly<IAction2Options>) {\n\t\tsuper(desc);\n\t}\n\n\tprotected abstract isQuickNavigate(): boolean;\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst workspacesService = accessor.get(IWorkspacesService);\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst contextService = accessor.get(IWorkspaceContextService);\n\t\tconst labelService = accessor.get(ILabelService);\n\t\tconst keybindingService = accessor.get(IKeybindingService);\n\t\tconst modelService = accessor.get(IModelService);\n\t\tconst languageService = accessor.get(ILanguageService);\n\t\tconst hostService = accessor.get(IHostService);\n\t\tconst dialogService = accessor.get(IDialogService);\n\n\t\tconst recentlyOpened = await workspacesService.getRecentlyOpened();\n\t\tconst dirtyWorkspacesAndFolders =\n\t\t\tawait workspacesService.getDirtyWorkspaces();\n\n\t\tlet hasWorkspaces = false;\n\n\t\t// Identify all folders and workspaces with unsaved files\n\t\tconst dirtyFolders = new ResourceMap<boolean>();\n\t\tconst dirtyWorkspaces = new ResourceMap<IWorkspaceIdentifier>();\n\t\tfor (const dirtyWorkspace of dirtyWorkspacesAndFolders) {\n\t\t\tif (isFolderBackupInfo(dirtyWorkspace)) {\n\t\t\t\tdirtyFolders.set(dirtyWorkspace.folderUri, true);\n\t\t\t} else {\n\t\t\t\tdirtyWorkspaces.set(\n\t\t\t\t\tdirtyWorkspace.workspace.configPath,\n\t\t\t\t\tdirtyWorkspace.workspace,\n\t\t\t\t);\n\t\t\t\thasWorkspaces = true;\n\t\t\t}\n\t\t}\n\n\t\t// Identify all recently opened folders and workspaces\n\t\tconst recentFolders = new ResourceMap<boolean>();\n\t\tconst recentWorkspaces = new ResourceMap<IWorkspaceIdentifier>();\n\t\tfor (const recent of recentlyOpened.workspaces) {\n\t\t\tif (isRecentFolder(recent)) {\n\t\t\t\trecentFolders.set(recent.folderUri, true);\n\t\t\t} else {\n\t\t\t\trecentWorkspaces.set(\n\t\t\t\t\trecent.workspace.configPath,\n\t\t\t\t\trecent.workspace,\n\t\t\t\t);\n\t\t\t\thasWorkspaces = true;\n\t\t\t}\n\t\t}\n\n\t\t// Fill in all known recently opened workspaces\n\t\tconst workspacePicks: IRecentlyOpenedPick[] = [];\n\t\tfor (const recent of recentlyOpened.workspaces) {\n\t\t\tconst isDirty = isRecentFolder(recent)\n\t\t\t\t? dirtyFolders.has(recent.folderUri)\n\t\t\t\t: dirtyWorkspaces.has(recent.workspace.configPath);\n\n\t\t\tworkspacePicks.push(\n\t\t\t\tthis.toQuickPick(\n\t\t\t\t\tmodelService,\n\t\t\t\t\tlanguageService,\n\t\t\t\t\tlabelService,\n\t\t\t\t\trecent,\n\t\t\t\t\tisDirty,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\t// Fill any backup workspace that is not yet shown at the end\n\t\tfor (const dirtyWorkspaceOrFolder of dirtyWorkspacesAndFolders) {\n\t\t\tif (\n\t\t\t\tisFolderBackupInfo(dirtyWorkspaceOrFolder) &&\n\t\t\t\t!recentFolders.has(dirtyWorkspaceOrFolder.folderUri)\n\t\t\t) {\n\t\t\t\tworkspacePicks.push(\n\t\t\t\t\tthis.toQuickPick(\n\t\t\t\t\t\tmodelService,\n\t\t\t\t\t\tlanguageService,\n\t\t\t\t\t\tlabelService,\n\t\t\t\t\t\tdirtyWorkspaceOrFolder,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t} else if (\n\t\t\t\tisWorkspaceBackupInfo(dirtyWorkspaceOrFolder) &&\n\t\t\t\t!recentWorkspaces.has(\n\t\t\t\t\tdirtyWorkspaceOrFolder.workspace.configPath,\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tworkspacePicks.push(\n\t\t\t\t\tthis.toQuickPick(\n\t\t\t\t\t\tmodelService,\n\t\t\t\t\t\tlanguageService,\n\t\t\t\t\t\tlabelService,\n\t\t\t\t\t\tdirtyWorkspaceOrFolder,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tconst filePicks = recentlyOpened.files.map((p) =>\n\t\t\tthis.toQuickPick(\n\t\t\t\tmodelService,\n\t\t\t\tlanguageService,\n\t\t\t\tlabelService,\n\t\t\t\tp,\n\t\t\t\tfalse,\n\t\t\t),\n\t\t);\n\n\t\t// focus second entry if the first recent workspace is the current workspace\n\t\tconst firstEntry = recentlyOpened.workspaces[0];\n\t\tconst autoFocusSecondEntry: boolean =\n\t\t\tfirstEntry &&\n\t\t\tcontextService.isCurrentWorkspace(\n\t\t\t\tisRecentWorkspace(firstEntry)\n\t\t\t\t\t? firstEntry.workspace\n\t\t\t\t\t: firstEntry.folderUri,\n\t\t\t);\n\n\t\tlet keyMods: IKeyMods | undefined;\n\n\t\tconst workspaceSeparator: IQuickPickSeparator = {\n\t\t\ttype: \"separator\",\n\t\t\tlabel: hasWorkspaces\n\t\t\t\t? localize(\"workspacesAndFolders\", \"folders & workspaces\")\n\t\t\t\t: localize(\"folders\", \"folders\"),\n\t\t};\n\t\tconst fileSeparator: IQuickPickSeparator = {\n\t\t\ttype: \"separator\",\n\t\t\tlabel: localize(\"files\", \"files\"),\n\t\t};\n\t\tconst picks = [\n\t\t\tworkspaceSeparator,\n\t\t\t...workspacePicks,\n\t\t\tfileSeparator,\n\t\t\t...filePicks,\n\t\t];\n\n\t\tconst pick = await quickInputService.pick(picks, {\n\t\t\tcontextKey: inRecentFilesPickerContextKey,\n\t\t\tactiveItem: [...workspacePicks, ...filePicks][\n\t\t\t\tautoFocusSecondEntry ? 1 : 0\n\t\t\t],\n\t\t\tplaceHolder: isMacintosh\n\t\t\t\t? localize(\n\t\t\t\t\t\t\"openRecentPlaceholderMac\",\n\t\t\t\t\t\t\"Select to open (hold Cmd-key to force new window or Option-key for same window)\",\n\t\t\t\t\t)\n\t\t\t\t: localize(\n\t\t\t\t\t\t\"openRecentPlaceholder\",\n\t\t\t\t\t\t\"Select to open (hold Ctrl-key to force new window or Alt-key for same window)\",\n\t\t\t\t\t),\n\t\t\tmatchOnDescription: true,\n\t\t\tonKeyMods: (mods) => (keyMods = mods),\n\t\t\tquickNavigate: this.isQuickNavigate()\n\t\t\t\t? {\n\t\t\t\t\t\tkeybindings: keybindingService.lookupKeybindings(\n\t\t\t\t\t\t\tthis.desc.id,\n\t\t\t\t\t\t),\n\t\t\t\t\t}\n\t\t\t\t: undefined,\n\t\t\thideInput: this.isQuickNavigate(),\n\t\t\tonDidTriggerItemButton: async (context) => {\n\t\t\t\t// Remove\n\t\t\t\tif (context.button === this.removeFromRecentlyOpened) {\n\t\t\t\t\tawait workspacesService.removeRecentlyOpened([\n\t\t\t\t\t\tcontext.item.resource,\n\t\t\t\t\t]);\n\t\t\t\t\tcontext.removeItem();\n\t\t\t\t}\n\n\t\t\t\t// Dirty Folder/Workspace\n\t\t\t\telse if (\n\t\t\t\t\tcontext.button === this.dirtyRecentlyOpenedFolder ||\n\t\t\t\t\tcontext.button === this.dirtyRecentlyOpenedWorkspace\n\t\t\t\t) {\n\t\t\t\t\tconst isDirtyWorkspace =\n\t\t\t\t\t\tcontext.button === this.dirtyRecentlyOpenedWorkspace;\n\t\t\t\t\tconst { confirmed } = await dialogService.confirm({\n\t\t\t\t\t\ttitle: isDirtyWorkspace\n\t\t\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\t\t\"dirtyWorkspace\",\n\t\t\t\t\t\t\t\t\t\"Workspace with Unsaved Files\",\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\t\t\"dirtyFolder\",\n\t\t\t\t\t\t\t\t\t\"Folder with Unsaved Files\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\tmessage: isDirtyWorkspace\n\t\t\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\t\t\"dirtyWorkspaceConfirm\",\n\t\t\t\t\t\t\t\t\t\"Do you want to open the workspace to review the unsaved files?\",\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\t\t\"dirtyFolderConfirm\",\n\t\t\t\t\t\t\t\t\t\"Do you want to open the folder to review the unsaved files?\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\tdetail: isDirtyWorkspace\n\t\t\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\t\t\"dirtyWorkspaceConfirmDetail\",\n\t\t\t\t\t\t\t\t\t\"Workspaces with unsaved files cannot be removed until all unsaved files have been saved or reverted.\",\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\t\t\"dirtyFolderConfirmDetail\",\n\t\t\t\t\t\t\t\t\t\"Folders with unsaved files cannot be removed until all unsaved files have been saved or reverted.\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t});\n\n\t\t\t\t\tif (confirmed) {\n\t\t\t\t\t\thostService.openWindow([context.item.openable], {\n\t\t\t\t\t\t\tremoteAuthority:\n\t\t\t\t\t\t\t\tcontext.item.remoteAuthority || null, // local window if remoteAuthority is not set or can not be deducted from the openable\n\t\t\t\t\t\t});\n\t\t\t\t\t\tquickInputService.cancel();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\n\t\tif (pick) {\n\t\t\treturn hostService.openWindow([pick.openable], {\n\t\t\t\tforceNewWindow: keyMods?.ctrlCmd,\n\t\t\t\tforceReuseWindow: keyMods?.alt,\n\t\t\t\tremoteAuthority: pick.remoteAuthority || null, // local window if remoteAuthority is not set or can not be deducted from the openable\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate toQuickPick(\n\t\tmodelService: IModelService,\n\t\tlanguageService: ILanguageService,\n\t\tlabelService: ILabelService,\n\t\trecent: IRecent,\n\t\tisDirty: boolean,\n\t): IRecentlyOpenedPick {\n\t\tlet openable: IWindowOpenable | undefined;\n\t\tlet iconClasses: string[];\n\t\tlet fullLabel: string | undefined;\n\t\tlet resource: URI | undefined;\n\t\tlet isWorkspace = false;\n\n\t\t// Folder\n\t\tif (isRecentFolder(recent)) {\n\t\t\tresource = recent.folderUri;\n\t\t\ticonClasses = getIconClasses(\n\t\t\t\tmodelService,\n\t\t\t\tlanguageService,\n\t\t\t\tresource,\n\t\t\t\tFileKind.FOLDER,\n\t\t\t);\n\t\t\topenable = { folderUri: resource };\n\t\t\tfullLabel =\n\t\t\t\trecent.label ||\n\t\t\t\tlabelService.getWorkspaceLabel(resource, {\n\t\t\t\t\tverbose: Verbosity.LONG,\n\t\t\t\t});\n\t\t}\n\n\t\t// Workspace\n\t\telse if (isRecentWorkspace(recent)) {\n\t\t\tresource = recent.workspace.configPath;\n\t\t\ticonClasses = getIconClasses(\n\t\t\t\tmodelService,\n\t\t\t\tlanguageService,\n\t\t\t\tresource,\n\t\t\t\tFileKind.ROOT_FOLDER,\n\t\t\t);\n\t\t\topenable = { workspaceUri: resource };\n\t\t\tfullLabel =\n\t\t\t\trecent.label ||\n\t\t\t\tlabelService.getWorkspaceLabel(recent.workspace, {\n\t\t\t\t\tverbose: Verbosity.LONG,\n\t\t\t\t});\n\t\t\tisWorkspace = true;\n\t\t}\n\n\t\t// File\n\t\telse {\n\t\t\tresource = recent.fileUri;\n\t\t\ticonClasses = getIconClasses(\n\t\t\t\tmodelService,\n\t\t\t\tlanguageService,\n\t\t\t\tresource,\n\t\t\t\tFileKind.FILE,\n\t\t\t);\n\t\t\topenable = { fileUri: resource };\n\t\t\tfullLabel = recent.label || labelService.getUriLabel(resource);\n\t\t}\n\n\t\tconst { name, parentPath } = splitRecentLabel(fullLabel);\n\n\t\treturn {\n\t\t\ticonClasses,\n\t\t\tlabel: name,\n\t\t\tariaLabel: isDirty\n\t\t\t\t? isWorkspace\n\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\"recentDirtyWorkspaceAriaLabel\",\n\t\t\t\t\t\t\t\"{0}, workspace with unsaved changes\",\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t)\n\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\"recentDirtyFolderAriaLabel\",\n\t\t\t\t\t\t\t\"{0}, folder with unsaved changes\",\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t)\n\t\t\t\t: name,\n\t\t\tdescription: parentPath,\n\t\t\tbuttons: isDirty\n\t\t\t\t? [\n\t\t\t\t\t\tisWorkspace\n\t\t\t\t\t\t\t? this.dirtyRecentlyOpenedWorkspace\n\t\t\t\t\t\t\t: this.dirtyRecentlyOpenedFolder,\n\t\t\t\t\t]\n\t\t\t\t: [this.removeFromRecentlyOpened],\n\t\t\topenable,\n\t\t\tresource,\n\t\t\tremoteAuthority: recent.remoteAuthority,\n\t\t};\n\t}\n}\n\nexport class OpenRecentAction extends BaseOpenRecentAction {\n\tstatic ID = \"workbench.action.openRecent\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: OpenRecentAction.ID,\n\t\t\ttitle: {\n\t\t\t\t...localize2(\"openRecent\", \"Open Recent...\"),\n\t\t\t\tmnemonicTitle: localize(\n\t\t\t\t\t{ key: \"miMore\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\t\"&&More...\",\n\t\t\t\t),\n\t\t\t},\n\t\t\tcategory: Categories.File,\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyR,\n\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyCode.KeyR },\n\t\t\t},\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.MenubarRecentMenu,\n\t\t\t\tgroup: \"y_more\",\n\t\t\t\torder: 1,\n\t\t\t},\n\t\t});\n\t}\n\n\tprotected isQuickNavigate(): boolean {\n\t\treturn false;\n\t}\n}\n\nclass QuickPickRecentAction extends BaseOpenRecentAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.quickOpenRecent\",\n\t\t\ttitle: localize2(\"quickOpenRecent\", \"Quick Open Recent...\"),\n\t\t\tcategory: Categories.File,\n\t\t\tf1: false, // hide quick pickers from command palette to not confuse with the other entry that shows a input field\n\t\t});\n\t}\n\n\tprotected isQuickNavigate(): boolean {\n\t\treturn true;\n\t}\n}\n\nclass ToggleFullScreenAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.toggleFullScreen\",\n\t\t\ttitle: {\n\t\t\t\t...localize2(\"toggleFullScreen\", \"Toggle Full Screen\"),\n\t\t\t\tmnemonicTitle: localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"miToggleFullScreen\",\n\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t},\n\t\t\t\t\t\"&&Full Screen\",\n\t\t\t\t),\n\t\t\t},\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyCode.F11,\n\t\t\t\tmac: {\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.WinCtrl | KeyCode.KeyF,\n\t\t\t\t},\n\t\t\t},\n\t\t\tprecondition: IsIOSContext.toNegated(),\n\t\t\ttoggled: IsMainWindowFullscreenContext,\n\t\t\tmenu: [\n\t\t\t\t{\n\t\t\t\t\tid: MenuId.MenubarAppearanceMenu,\n\t\t\t\t\tgroup: \"1_toggle_view\",\n\t\t\t\t\torder: 1,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\toverride run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst hostService = accessor.get(IHostService);\n\n\t\treturn hostService.toggleFullScreen(getActiveWindow());\n\t}\n}\n\nexport class ReloadWindowAction extends Action2 {\n\tstatic readonly ID = \"workbench.action.reloadWindow\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ReloadWindowAction.ID,\n\t\t\ttitle: localize2(\"reloadWindow\", \"Reload Window\"),\n\t\t\tcategory: Categories.Developer,\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\t\t\t\twhen: IsDevelopmentContext,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyR,\n\t\t\t},\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst hostService = accessor.get(IHostService);\n\n\t\treturn hostService.reload();\n\t}\n}\n\nclass ShowAboutDialogAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.showAboutDialog\",\n\t\t\ttitle: {\n\t\t\t\t...localize2(\"about\", \"About\"),\n\t\t\t\tmnemonicTitle: localize(\n\t\t\t\t\t{ key: \"miAbout\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\t\"&&About\",\n\t\t\t\t),\n\t\t\t},\n\t\t\tcategory: Categories.Help,\n\t\t\tf1: true,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.MenubarHelpMenu,\n\t\t\t\tgroup: \"z_about\",\n\t\t\t\torder: 1,\n\t\t\t\twhen: IsMacNativeContext.toNegated(),\n\t\t\t},\n\t\t});\n\t}\n\n\toverride run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst dialogService = accessor.get(IDialogService);\n\n\t\treturn dialogService.about();\n\t}\n}\n\nclass NewWindowAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.newWindow\",\n\t\t\ttitle: {\n\t\t\t\t...localize2(\"newWindow\", \"New Window\"),\n\t\t\t\tmnemonicTitle: localize(\n\t\t\t\t\t{ key: \"miNewWindow\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\t\"New &&Window\",\n\t\t\t\t),\n\t\t\t},\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: isWeb\n\t\t\t\t\t? isWindows\n\t\t\t\t\t\t? KeyChord(\n\t\t\t\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyK,\n\t\t\t\t\t\t\t\tKeyMod.Shift | KeyCode.KeyN,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t: KeyMod.CtrlCmd |\n\t\t\t\t\t\t\tKeyMod.Alt |\n\t\t\t\t\t\t\tKeyMod.Shift |\n\t\t\t\t\t\t\tKeyCode.KeyN\n\t\t\t\t\t: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyN,\n\t\t\t\tsecondary: isWeb\n\t\t\t\t\t? [KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyN]\n\t\t\t\t\t: undefined,\n\t\t\t},\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.MenubarFileMenu,\n\t\t\t\tgroup: \"1_new\",\n\t\t\t\torder: 3,\n\t\t\t},\n\t\t});\n\t}\n\n\toverride run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst hostService = accessor.get(IHostService);\n\n\t\treturn hostService.openWindow({ remoteAuthority: null });\n\t}\n}\n\nclass BlurAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.blur\",\n\t\t\ttitle: localize2(\n\t\t\t\t\"blur\",\n\t\t\t\t\"Remove keyboard focus from focused element\",\n\t\t\t),\n\t\t});\n\t}\n\n\trun(): void {\n\t\tconst activeElement = getActiveElement();\n\t\tif (isHTMLElement(activeElement)) {\n\t\t\tactiveElement.blur();\n\t\t}\n\t}\n}\n\n// --- Actions Registration\n\nregisterAction2(NewWindowAction);\nregisterAction2(ToggleFullScreenAction);\nregisterAction2(QuickPickRecentAction);\nregisterAction2(OpenRecentAction);\nregisterAction2(ReloadWindowAction);\nregisterAction2(ShowAboutDialogAction);\nregisterAction2(BlurAction);\n\n// --- Commands/Keybindings Registration\n\nconst recentFilesPickerContext = ContextKeyExpr.and(\n\tinQuickPickContext,\n\tContextKeyExpr.has(inRecentFilesPickerContextKey),\n);\n\nconst quickPickNavigateNextInRecentFilesPickerId =\n\t\"workbench.action.quickOpenNavigateNextInRecentFilesPicker\";\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: quickPickNavigateNextInRecentFilesPickerId,\n\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\thandler: getQuickNavigateHandler(\n\t\tquickPickNavigateNextInRecentFilesPickerId,\n\t\ttrue,\n\t),\n\twhen: recentFilesPickerContext,\n\tprimary: KeyMod.CtrlCmd | KeyCode.KeyR,\n\tmac: { primary: KeyMod.WinCtrl | KeyCode.KeyR },\n});\n\nconst quickPickNavigatePreviousInRecentFilesPicker =\n\t\"workbench.action.quickOpenNavigatePreviousInRecentFilesPicker\";\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: quickPickNavigatePreviousInRecentFilesPicker,\n\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\thandler: getQuickNavigateHandler(\n\t\tquickPickNavigatePreviousInRecentFilesPicker,\n\t\tfalse,\n\t),\n\twhen: recentFilesPickerContext,\n\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyR,\n\tmac: { primary: KeyMod.WinCtrl | KeyMod.Shift | KeyCode.KeyR },\n});\n\nCommandsRegistry.registerCommand(\n\t\"workbench.action.toggleConfirmBeforeClose\",\n\t(accessor) => {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tconst setting = configurationService.inspect<\n\t\t\t\"always\" | \"keyboardOnly\" | \"never\"\n\t\t>(\"window.confirmBeforeClose\").userValue;\n\n\t\treturn configurationService.updateValue(\n\t\t\t\"window.confirmBeforeClose\",\n\t\t\tsetting === \"never\" ? \"keyboardOnly\" : \"never\",\n\t\t);\n\t},\n);\n\n// --- Menu Registration\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\tgroup: \"z_ConfirmClose\",\n\tcommand: {\n\t\tid: \"workbench.action.toggleConfirmBeforeClose\",\n\t\ttitle: localize(\"miConfirmClose\", \"Confirm Before Close\"),\n\t\ttoggled: ContextKeyExpr.notEquals(\n\t\t\t\"config.window.confirmBeforeClose\",\n\t\t\t\"never\",\n\t\t),\n\t},\n\torder: 1,\n\twhen: IsWebContext,\n});\n\nMenuRegistry.appendMenuItem(MenuId.MenubarFileMenu, {\n\ttitle: localize(\n\t\t{ key: \"miOpenRecent\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\"Open &&Recent\",\n\t),\n\tsubmenu: MenuId.MenubarRecentMenu,\n\tgroup: \"2_open\",\n\torder: 4,\n});\n"],
  "mappings": "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",
  "names": []
}
