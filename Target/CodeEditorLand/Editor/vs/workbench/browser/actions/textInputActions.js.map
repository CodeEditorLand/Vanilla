{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/browser/actions/textInputActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tEventHelper,\n\taddDisposableListener,\n\tgetActiveDocument,\n\tgetWindow,\n\tisHTMLElement,\n\tisHTMLInputElement,\n\tisHTMLTextAreaElement,\n} from \"../../../base/browser/dom.js\";\nimport { StandardMouseEvent } from \"../../../base/browser/mouseEvent.js\";\nimport {\n\tAction,\n\ttype IAction,\n\tSeparator,\n} from \"../../../base/common/actions.js\";\nimport { Event as BaseEvent } from \"../../../base/common/event.js\";\nimport { Lazy } from \"../../../base/common/lazy.js\";\nimport { Disposable } from \"../../../base/common/lifecycle.js\";\nimport { isNative } from \"../../../base/common/platform.js\";\nimport { localize } from \"../../../nls.js\";\nimport { IClipboardService } from \"../../../platform/clipboard/common/clipboardService.js\";\nimport { IContextMenuService } from \"../../../platform/contextview/browser/contextView.js\";\nimport {\n\ttype IWorkbenchContribution,\n\tWorkbenchPhase,\n\tregisterWorkbenchContribution2,\n} from \"../../common/contributions.js\";\nimport { IWorkbenchLayoutService } from \"../../services/layout/browser/layoutService.js\";\n\nexport class TextInputActionsProvider\n\textends Disposable\n\timplements IWorkbenchContribution\n{\n\tstatic readonly ID = \"workbench.contrib.textInputActionsProvider\";\n\n\tprivate readonly textInputActions = new Lazy<IAction[]>(() =>\n\t\tthis.createActions(),\n\t);\n\n\tconstructor(\n\t\t@IWorkbenchLayoutService private readonly layoutService: IWorkbenchLayoutService,\n\t\t@IContextMenuService private readonly contextMenuService: IContextMenuService,\n\t\t@IClipboardService private readonly clipboardService: IClipboardService\n\t) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate createActions(): IAction[] {\n\t\treturn [\n\t\t\t// Undo/Redo\n\t\t\tnew Action(\n\t\t\t\t\"undo\",\n\t\t\t\tlocalize(\"undo\", \"Undo\"),\n\t\t\t\tundefined,\n\t\t\t\ttrue,\n\t\t\t\tasync () => getActiveDocument().execCommand(\"undo\"),\n\t\t\t),\n\t\t\tnew Action(\n\t\t\t\t\"redo\",\n\t\t\t\tlocalize(\"redo\", \"Redo\"),\n\t\t\t\tundefined,\n\t\t\t\ttrue,\n\t\t\t\tasync () => getActiveDocument().execCommand(\"redo\"),\n\t\t\t),\n\t\t\tnew Separator(),\n\n\t\t\t// Cut / Copy / Paste\n\t\t\tnew Action(\n\t\t\t\t\"editor.action.clipboardCutAction\",\n\t\t\t\tlocalize(\"cut\", \"Cut\"),\n\t\t\t\tundefined,\n\t\t\t\ttrue,\n\t\t\t\tasync () => getActiveDocument().execCommand(\"cut\"),\n\t\t\t),\n\t\t\tnew Action(\n\t\t\t\t\"editor.action.clipboardCopyAction\",\n\t\t\t\tlocalize(\"copy\", \"Copy\"),\n\t\t\t\tundefined,\n\t\t\t\ttrue,\n\t\t\t\tasync () => getActiveDocument().execCommand(\"copy\"),\n\t\t\t),\n\t\t\tnew Action(\n\t\t\t\t\"editor.action.clipboardPasteAction\",\n\t\t\t\tlocalize(\"paste\", \"Paste\"),\n\t\t\t\tundefined,\n\t\t\t\ttrue,\n\t\t\t\tasync (element) => {\n\t\t\t\t\t// Native: paste is supported\n\t\t\t\t\tif (isNative) {\n\t\t\t\t\t\tgetActiveDocument().execCommand(\"paste\");\n\t\t\t\t\t}\n\n\t\t\t\t\t// Web: paste is not supported due to security reasons\n\t\t\t\t\telse {\n\t\t\t\t\t\tconst clipboardText =\n\t\t\t\t\t\t\tawait this.clipboardService.readText();\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tisHTMLTextAreaElement(element) ||\n\t\t\t\t\t\t\tisHTMLInputElement(element)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst selectionStart = element.selectionStart || 0;\n\t\t\t\t\t\t\tconst selectionEnd = element.selectionEnd || 0;\n\n\t\t\t\t\t\t\telement.value = `${element.value.substring(0, selectionStart)}${clipboardText}${element.value.substring(selectionEnd, element.value.length)}`;\n\t\t\t\t\t\t\telement.selectionStart =\n\t\t\t\t\t\t\t\tselectionStart + clipboardText.length;\n\t\t\t\t\t\t\telement.selectionEnd = element.selectionStart;\n\t\t\t\t\t\t\telement.dispatchEvent(\n\t\t\t\t\t\t\t\tnew Event(\"input\", {\n\t\t\t\t\t\t\t\t\tbubbles: true,\n\t\t\t\t\t\t\t\t\tcancelable: true,\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t\tnew Separator(),\n\n\t\t\t// Select All\n\t\t\tnew Action(\n\t\t\t\t\"editor.action.selectAll\",\n\t\t\t\tlocalize(\"selectAll\", \"Select All\"),\n\t\t\t\tundefined,\n\t\t\t\ttrue,\n\t\t\t\tasync () => getActiveDocument().execCommand(\"selectAll\"),\n\t\t\t),\n\t\t];\n\t}\n\n\tprivate registerListeners(): void {\n\t\t// Context menu support in input/textarea\n\t\tthis._register(\n\t\t\tBaseEvent.runAndSubscribe(\n\t\t\t\tthis.layoutService.onDidAddContainer,\n\t\t\t\t({ container, disposables }) => {\n\t\t\t\t\tdisposables.add(\n\t\t\t\t\t\taddDisposableListener(container, \"contextmenu\", (e) =>\n\t\t\t\t\t\t\tthis.onContextMenu(getWindow(container), e),\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcontainer: this.layoutService.mainContainer,\n\t\t\t\t\tdisposables: this._store,\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate onContextMenu(targetWindow: Window, e: MouseEvent): void {\n\t\tif (e.defaultPrevented) {\n\t\t\treturn; // make sure to not show these actions by accident if component indicated to prevent\n\t\t}\n\n\t\tconst target = e.target;\n\t\tif (\n\t\t\t!isHTMLElement(target) ||\n\t\t\t(target.nodeName.toLowerCase() !== \"input\" &&\n\t\t\t\ttarget.nodeName.toLowerCase() !== \"textarea\")\n\t\t) {\n\t\t\treturn; // only for inputs or textareas\n\t\t}\n\n\t\tEventHelper.stop(e, true);\n\n\t\tconst event = new StandardMouseEvent(targetWindow, e);\n\n\t\tthis.contextMenuService.showContextMenu({\n\t\t\tgetAnchor: () => event,\n\t\t\tgetActions: () => this.textInputActions.value,\n\t\t\tgetActionsContext: () => target,\n\t\t});\n\t}\n}\n\nregisterWorkbenchContribution2(\n\tTextInputActionsProvider.ID,\n\tTextInputActionsProvider,\n\tWorkbenchPhase.BlockRestore, // Block to allow right-click into input fields before restore finished\n);\n"],
  "mappings": ";;;;;;;;;;;;AAKA;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,0BAA0B;AACnC;AAAA,EACC;AAAA,EAEA;AAAA,OACM;AACP,SAAS,SAAS,iBAAiB;AACnC,SAAS,YAAY;AACrB,SAAS,kBAAkB;AAC3B,SAAS,gBAAgB;AACzB,SAAS,gBAAgB;AACzB,SAAS,yBAAyB;AAClC,SAAS,2BAA2B;AACpC;AAAA,EAEC;AAAA,EACA;AAAA,OACM;AACP,SAAS,+BAA+B;AAEjC,IAAM,2BAAN,cACE,WAET;AAAA,EAOC,YAC2C,eACJ,oBACF,kBACnC;AACD,UAAM;AAJoC;AACJ;AACF;AAIpC,SAAK,kBAAkB;AAAA,EACxB;AAAA,EApDD,OAqCA;AAAA;AAAA;AAAA,EACC,OAAgB,KAAK;AAAA,EAEJ,mBAAmB,IAAI;AAAA,IAAgB,MACvD,KAAK,cAAc;AAAA,EACpB;AAAA,EAYQ,gBAA2B;AAClC,WAAO;AAAA;AAAA,MAEN,IAAI;AAAA,QACH;AAAA,QACA,SAAS,QAAQ,MAAM;AAAA,QACvB;AAAA,QACA;AAAA,QACA,YAAY,kBAAkB,EAAE,YAAY,MAAM;AAAA,MACnD;AAAA,MACA,IAAI;AAAA,QACH;AAAA,QACA,SAAS,QAAQ,MAAM;AAAA,QACvB;AAAA,QACA;AAAA,QACA,YAAY,kBAAkB,EAAE,YAAY,MAAM;AAAA,MACnD;AAAA,MACA,IAAI,UAAU;AAAA;AAAA,MAGd,IAAI;AAAA,QACH;AAAA,QACA,SAAS,OAAO,KAAK;AAAA,QACrB;AAAA,QACA;AAAA,QACA,YAAY,kBAAkB,EAAE,YAAY,KAAK;AAAA,MAClD;AAAA,MACA,IAAI;AAAA,QACH;AAAA,QACA,SAAS,QAAQ,MAAM;AAAA,QACvB;AAAA,QACA;AAAA,QACA,YAAY,kBAAkB,EAAE,YAAY,MAAM;AAAA,MACnD;AAAA,MACA,IAAI;AAAA,QACH;AAAA,QACA,SAAS,SAAS,OAAO;AAAA,QACzB;AAAA,QACA;AAAA,QACA,OAAO,YAAY;AAElB,cAAI,UAAU;AACb,8BAAkB,EAAE,YAAY,OAAO;AAAA,UACxC,OAGK;AACJ,kBAAM,gBACL,MAAM,KAAK,iBAAiB,SAAS;AACtC,gBACC,sBAAsB,OAAO,KAC7B,mBAAmB,OAAO,GACzB;AACD,oBAAM,iBAAiB,QAAQ,kBAAkB;AACjD,oBAAM,eAAe,QAAQ,gBAAgB;AAE7C,sBAAQ,QAAQ,GAAG,QAAQ,MAAM,UAAU,GAAG,cAAc,CAAC,GAAG,aAAa,GAAG,QAAQ,MAAM,UAAU,cAAc,QAAQ,MAAM,MAAM,CAAC;AAC3I,sBAAQ,iBACP,iBAAiB,cAAc;AAChC,sBAAQ,eAAe,QAAQ;AAC/B,sBAAQ;AAAA,gBACP,IAAI,MAAM,SAAS;AAAA,kBAClB,SAAS;AAAA,kBACT,YAAY;AAAA,gBACb,CAAC;AAAA,cACF;AAAA,YACD;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,MACA,IAAI,UAAU;AAAA;AAAA,MAGd,IAAI;AAAA,QACH;AAAA,QACA,SAAS,aAAa,YAAY;AAAA,QAClC;AAAA,QACA;AAAA,QACA,YAAY,kBAAkB,EAAE,YAAY,WAAW;AAAA,MACxD;AAAA,IACD;AAAA,EACD;AAAA,EAEQ,oBAA0B;AAEjC,SAAK;AAAA,MACJ,UAAU;AAAA,QACT,KAAK,cAAc;AAAA,QACnB,CAAC,EAAE,WAAW,YAAY,MAAM;AAC/B,sBAAY;AAAA,YACX;AAAA,cAAsB;AAAA,cAAW;AAAA,cAAe,CAAC,MAChD,KAAK,cAAc,UAAU,SAAS,GAAG,CAAC;AAAA,YAC3C;AAAA,UACD;AAAA,QACD;AAAA,QACA;AAAA,UACC,WAAW,KAAK,cAAc;AAAA,UAC9B,aAAa,KAAK;AAAA,QACnB;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EAEQ,cAAc,cAAsB,GAAqB;AAChE,QAAI,EAAE,kBAAkB;AACvB;AAAA,IACD;AAEA,UAAM,SAAS,EAAE;AACjB,QACC,CAAC,cAAc,MAAM,KACpB,OAAO,SAAS,YAAY,MAAM,WAClC,OAAO,SAAS,YAAY,MAAM,YAClC;AACD;AAAA,IACD;AAEA,gBAAY,KAAK,GAAG,IAAI;AAExB,UAAM,QAAQ,IAAI,mBAAmB,cAAc,CAAC;AAEpD,SAAK,mBAAmB,gBAAgB;AAAA,MACvC,WAAW,6BAAM,OAAN;AAAA,MACX,YAAY,6BAAM,KAAK,iBAAiB,OAA5B;AAAA,MACZ,mBAAmB,6BAAM,QAAN;AAAA,IACpB,CAAC;AAAA,EACF;AACD;AAnJa,2BAAN;AAAA,EAWJ;AAAA,EACA;AAAA,EACA;AAAA,GAbU;AAqJb;AAAA,EACC,yBAAyB;AAAA,EACzB;AAAA,EACA,eAAe;AAAA;AAChB;",
  "names": []
}
