{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/electron-sandbox/desktop.main.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from '../../nls.js';\nimport product from '../../platform/product/common/product.js';\nimport { INativeWindowConfiguration, IWindowsConfiguration } from '../../platform/window/common/window.js';\nimport { Workbench } from '../browser/workbench.js';\nimport { NativeWindow } from './window.js';\nimport { setFullscreen } from '../../base/browser/browser.js';\nimport { domContentLoaded } from '../../base/browser/dom.js';\nimport { onUnexpectedError } from '../../base/common/errors.js';\nimport { URI } from '../../base/common/uri.js';\nimport { WorkspaceService } from '../services/configuration/browser/configurationService.js';\nimport { INativeWorkbenchEnvironmentService, NativeWorkbenchEnvironmentService } from '../services/environment/electron-sandbox/environmentService.js';\nimport { ServiceCollection } from '../../platform/instantiation/common/serviceCollection.js';\nimport { ILoggerService, ILogService, LogLevel } from '../../platform/log/common/log.js';\nimport { NativeWorkbenchStorageService } from '../services/storage/electron-sandbox/storageService.js';\nimport { IWorkspaceContextService, isSingleFolderWorkspaceIdentifier, isWorkspaceIdentifier, IAnyWorkspaceIdentifier, reviveIdentifier, toWorkspaceIdentifier } from '../../platform/workspace/common/workspace.js';\nimport { IWorkbenchConfigurationService } from '../services/configuration/common/configuration.js';\nimport { IStorageService } from '../../platform/storage/common/storage.js';\nimport { Disposable } from '../../base/common/lifecycle.js';\nimport { ISharedProcessService } from '../../platform/ipc/electron-sandbox/services.js';\nimport { IMainProcessService } from '../../platform/ipc/common/mainProcessService.js';\nimport { SharedProcessService } from '../services/sharedProcess/electron-sandbox/sharedProcessService.js';\nimport { RemoteAuthorityResolverService } from '../../platform/remote/electron-sandbox/remoteAuthorityResolverService.js';\nimport { IRemoteAuthorityResolverService, RemoteConnectionType } from '../../platform/remote/common/remoteAuthorityResolver.js';\nimport { RemoteAgentService } from '../services/remote/electron-sandbox/remoteAgentService.js';\nimport { IRemoteAgentService } from '../services/remote/common/remoteAgentService.js';\nimport { FileService } from '../../platform/files/common/fileService.js';\nimport { IFileService } from '../../platform/files/common/files.js';\nimport { RemoteFileSystemProviderClient } from '../services/remote/common/remoteFileSystemProviderClient.js';\nimport { ConfigurationCache } from '../services/configuration/common/configurationCache.js';\nimport { ISignService } from '../../platform/sign/common/sign.js';\nimport { IProductService } from '../../platform/product/common/productService.js';\nimport { IUriIdentityService } from '../../platform/uriIdentity/common/uriIdentity.js';\nimport { UriIdentityService } from '../../platform/uriIdentity/common/uriIdentityService.js';\nimport { INativeKeyboardLayoutService, NativeKeyboardLayoutService } from '../services/keybinding/electron-sandbox/nativeKeyboardLayoutService.js';\nimport { ElectronIPCMainProcessService } from '../../platform/ipc/electron-sandbox/mainProcessService.js';\nimport { LoggerChannelClient } from '../../platform/log/common/logIpc.js';\nimport { ProxyChannel } from '../../base/parts/ipc/common/ipc.js';\nimport { NativeLogService } from '../services/log/electron-sandbox/logService.js';\nimport { WorkspaceTrustEnablementService, WorkspaceTrustManagementService } from '../services/workspaces/common/workspaceTrust.js';\nimport { IWorkspaceTrustEnablementService, IWorkspaceTrustManagementService } from '../../platform/workspace/common/workspaceTrust.js';\nimport { safeStringify } from '../../base/common/objects.js';\nimport { IUtilityProcessWorkerWorkbenchService, UtilityProcessWorkerWorkbenchService } from '../services/utilityProcess/electron-sandbox/utilityProcessWorkerWorkbenchService.js';\nimport { isBigSurOrNewer, isCI, isMacintosh } from '../../base/common/platform.js';\nimport { Schemas } from '../../base/common/network.js';\nimport { DiskFileSystemProvider } from '../services/files/electron-sandbox/diskFileSystemProvider.js';\nimport { FileUserDataProvider } from '../../platform/userData/common/fileUserDataProvider.js';\nimport { IUserDataProfilesService, reviveProfile } from '../../platform/userDataProfile/common/userDataProfile.js';\nimport { UserDataProfilesService } from '../../platform/userDataProfile/common/userDataProfileIpc.js';\nimport { PolicyChannelClient } from '../../platform/policy/common/policyIpc.js';\nimport { IPolicyService, NullPolicyService } from '../../platform/policy/common/policy.js';\nimport { UserDataProfileService } from '../services/userDataProfile/common/userDataProfileService.js';\nimport { IUserDataProfileService } from '../services/userDataProfile/common/userDataProfile.js';\nimport { BrowserSocketFactory } from '../../platform/remote/browser/browserSocketFactory.js';\nimport { RemoteSocketFactoryService, IRemoteSocketFactoryService } from '../../platform/remote/common/remoteSocketFactoryService.js';\nimport { ElectronRemoteResourceLoader } from '../../platform/remote/electron-sandbox/electronRemoteResourceLoader.js';\nimport { IConfigurationService } from '../../platform/configuration/common/configuration.js';\nimport { applyZoom } from '../../platform/window/electron-sandbox/window.js';\nimport { mainWindow } from '../../base/browser/window.js';\n\nexport class DesktopMain extends Disposable {\n\n\tconstructor(\n\t\tprivate readonly configuration: INativeWindowConfiguration\n\t) {\n\t\tsuper();\n\n\t\tthis.init();\n\t}\n\n\tprivate init(): void {\n\n\t\t// Massage configuration file URIs\n\t\tthis.reviveUris();\n\n\t\t// Apply fullscreen early if configured\n\t\tsetFullscreen(!!this.configuration.fullscreen, mainWindow);\n\t}\n\n\tprivate reviveUris() {\n\n\t\t// Workspace\n\t\tconst workspace = reviveIdentifier(this.configuration.workspace);\n\t\tif (isWorkspaceIdentifier(workspace) || isSingleFolderWorkspaceIdentifier(workspace)) {\n\t\t\tthis.configuration.workspace = workspace;\n\t\t}\n\n\t\t// Files\n\t\tconst filesToWait = this.configuration.filesToWait;\n\t\tconst filesToWaitPaths = filesToWait?.paths;\n\t\tfor (const paths of [filesToWaitPaths, this.configuration.filesToOpenOrCreate, this.configuration.filesToDiff, this.configuration.filesToMerge]) {\n\t\t\tif (Array.isArray(paths)) {\n\t\t\t\tfor (const path of paths) {\n\t\t\t\t\tif (path.fileUri) {\n\t\t\t\t\t\tpath.fileUri = URI.revive(path.fileUri);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (filesToWait) {\n\t\t\tfilesToWait.waitMarkerFileUri = URI.revive(filesToWait.waitMarkerFileUri);\n\t\t}\n\t}\n\n\tasync open(): Promise<void> {\n\n\t\t// Init services and wait for DOM to be ready in parallel\n\t\tconst [services] = await Promise.all([this.initServices(), domContentLoaded(mainWindow)]);\n\n\t\t// Apply zoom level early once we have a configuration service\n\t\t// and before the workbench is created to prevent flickering.\n\t\t// We also need to respect that zoom level can be configured per\n\t\t// workspace, so we need the resolved configuration service.\n\t\t// Finally, it is possible for the window to have a custom\n\t\t// zoom level that is not derived from settings.\n\t\t// (fixes https://github.com/microsoft/vscode/issues/187982)\n\t\tthis.applyWindowZoomLevel(services.configurationService);\n\n\t\t// Create Workbench\n\t\tconst workbench = new Workbench(mainWindow.document.body, { extraClasses: this.getExtraClasses() }, services.serviceCollection, services.logService);\n\n\t\t// Listeners\n\t\tthis.registerListeners(workbench, services.storageService);\n\n\t\t// Startup\n\t\tconst instantiationService = workbench.startup();\n\n\t\t// Window\n\t\tthis._register(instantiationService.createInstance(NativeWindow));\n\t}\n\n\tprivate applyWindowZoomLevel(configurationService: IConfigurationService) {\n\t\tlet zoomLevel: number | undefined = undefined;\n\t\tif (this.configuration.isCustomZoomLevel && typeof this.configuration.zoomLevel === 'number') {\n\t\t\tzoomLevel = this.configuration.zoomLevel;\n\t\t} else {\n\t\t\tconst windowConfig = configurationService.getValue<IWindowsConfiguration>();\n\t\t\tzoomLevel = typeof windowConfig.window?.zoomLevel === 'number' ? windowConfig.window.zoomLevel : 0;\n\t\t}\n\n\t\tapplyZoom(zoomLevel, mainWindow);\n\t}\n\n\tprivate getExtraClasses(): string[] {\n\t\tif (isMacintosh && isBigSurOrNewer(this.configuration.os.release)) {\n\t\t\treturn ['macos-bigsur-or-newer'];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate registerListeners(workbench: Workbench, storageService: NativeWorkbenchStorageService): void {\n\n\t\t// Workbench Lifecycle\n\t\tthis._register(workbench.onWillShutdown(event => event.join(storageService.close(), { id: 'join.closeStorage', label: localize('join.closeStorage', \"Saving UI state\") })));\n\t\tthis._register(workbench.onDidShutdown(() => this.dispose()));\n\t}\n\n\tprivate async initServices(): Promise<{ serviceCollection: ServiceCollection; logService: ILogService; storageService: NativeWorkbenchStorageService; configurationService: IConfigurationService }> {\n\t\tconst serviceCollection = new ServiceCollection();\n\n\n\t\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t\t//\n\t\t// NOTE: Please do NOT register services here. Use `registerSingleton()`\n\t\t//       from `workbench.common.main.ts` if the service is shared between\n\t\t//       desktop and web or `workbench.desktop.main.ts` if the service\n\t\t//       is desktop only.\n\t\t//\n\t\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n\n\t\t// Main Process\n\t\tconst mainProcessService = this._register(new ElectronIPCMainProcessService(this.configuration.windowId));\n\t\tserviceCollection.set(IMainProcessService, mainProcessService);\n\n\t\t// Policies\n\t\tconst policyService = this.configuration.policiesData ? new PolicyChannelClient(this.configuration.policiesData, mainProcessService.getChannel('policy')) : new NullPolicyService();\n\t\tserviceCollection.set(IPolicyService, policyService);\n\n\t\t// Product\n\t\tconst productService: IProductService = { _serviceBrand: undefined, ...product };\n\t\tserviceCollection.set(IProductService, productService);\n\n\t\t// Environment\n\t\tconst environmentService = new NativeWorkbenchEnvironmentService(this.configuration, productService);\n\t\tserviceCollection.set(INativeWorkbenchEnvironmentService, environmentService);\n\n\t\t// Logger\n\t\tconst loggers = [\n\t\t\t...this.configuration.loggers.global.map(loggerResource => ({ ...loggerResource, resource: URI.revive(loggerResource.resource) })),\n\t\t\t...this.configuration.loggers.window.map(loggerResource => ({ ...loggerResource, resource: URI.revive(loggerResource.resource), hidden: true })),\n\t\t];\n\t\tconst loggerService = new LoggerChannelClient(this.configuration.windowId, this.configuration.logLevel, environmentService.windowLogsPath, loggers, mainProcessService.getChannel('logger'));\n\t\tserviceCollection.set(ILoggerService, loggerService);\n\n\t\t// Log\n\t\tconst logService = this._register(new NativeLogService(loggerService, environmentService));\n\t\tserviceCollection.set(ILogService, logService);\n\t\tif (isCI) {\n\t\t\tlogService.info('workbench#open()'); // marking workbench open helps to diagnose flaky integration/smoke tests\n\t\t}\n\t\tif (logService.getLevel() === LogLevel.Trace) {\n\t\t\tlogService.trace('workbench#open(): with configuration', safeStringify({ ...this.configuration, nls: undefined /* exclude large property */ }));\n\t\t}\n\n\t\t// Shared Process\n\t\tconst sharedProcessService = new SharedProcessService(this.configuration.windowId, logService);\n\t\tserviceCollection.set(ISharedProcessService, sharedProcessService);\n\n\t\t// Utility Process Worker\n\t\tconst utilityProcessWorkerWorkbenchService = new UtilityProcessWorkerWorkbenchService(this.configuration.windowId, logService, mainProcessService);\n\t\tserviceCollection.set(IUtilityProcessWorkerWorkbenchService, utilityProcessWorkerWorkbenchService);\n\n\t\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t\t//\n\t\t// NOTE: Please do NOT register services here. Use `registerSingleton()`\n\t\t//       from `workbench.common.main.ts` if the service is shared between\n\t\t//       desktop and web or `workbench.desktop.main.ts` if the service\n\t\t//       is desktop only.\n\t\t//\n\t\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n\n\t\t// Sign\n\t\tconst signService = ProxyChannel.toService<ISignService>(mainProcessService.getChannel('sign'));\n\t\tserviceCollection.set(ISignService, signService);\n\n\t\t// Files\n\t\tconst fileService = this._register(new FileService(logService));\n\t\tserviceCollection.set(IFileService, fileService);\n\n\t\t// Remote\n\t\tconst remoteAuthorityResolverService = new RemoteAuthorityResolverService(productService, new ElectronRemoteResourceLoader(environmentService.window.id, mainProcessService, fileService));\n\t\tserviceCollection.set(IRemoteAuthorityResolverService, remoteAuthorityResolverService);\n\n\t\t// Local Files\n\t\tconst diskFileSystemProvider = this._register(new DiskFileSystemProvider(mainProcessService, utilityProcessWorkerWorkbenchService, logService, loggerService));\n\t\tfileService.registerProvider(Schemas.file, diskFileSystemProvider);\n\n\t\t// URI Identity\n\t\tconst uriIdentityService = new UriIdentityService(fileService);\n\t\tserviceCollection.set(IUriIdentityService, uriIdentityService);\n\n\t\t// User Data Profiles\n\t\tconst userDataProfilesService = new UserDataProfilesService(this.configuration.profiles.all, URI.revive(this.configuration.profiles.home).with({ scheme: environmentService.userRoamingDataHome.scheme }), mainProcessService.getChannel('userDataProfiles'));\n\t\tserviceCollection.set(IUserDataProfilesService, userDataProfilesService);\n\t\tconst userDataProfileService = new UserDataProfileService(reviveProfile(this.configuration.profiles.profile, userDataProfilesService.profilesHome.scheme));\n\t\tserviceCollection.set(IUserDataProfileService, userDataProfileService);\n\n\t\t// Use FileUserDataProvider for user data to\n\t\t// enable atomic read / write operations.\n\t\tfileService.registerProvider(Schemas.vscodeUserData, this._register(new FileUserDataProvider(Schemas.file, diskFileSystemProvider, Schemas.vscodeUserData, userDataProfilesService, uriIdentityService, logService)));\n\n\t\t// Remote Agent\n\t\tconst remoteSocketFactoryService = new RemoteSocketFactoryService();\n\t\tremoteSocketFactoryService.register(RemoteConnectionType.WebSocket, new BrowserSocketFactory(null));\n\t\tserviceCollection.set(IRemoteSocketFactoryService, remoteSocketFactoryService);\n\t\tconst remoteAgentService = this._register(new RemoteAgentService(remoteSocketFactoryService, userDataProfileService, environmentService, productService, remoteAuthorityResolverService, signService, logService));\n\t\tserviceCollection.set(IRemoteAgentService, remoteAgentService);\n\n\t\t// Remote Files\n\t\tthis._register(RemoteFileSystemProviderClient.register(remoteAgentService, fileService, logService));\n\n\t\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t\t//\n\t\t// NOTE: Please do NOT register services here. Use `registerSingleton()`\n\t\t//       from `workbench.common.main.ts` if the service is shared between\n\t\t//       desktop and web or `workbench.desktop.main.ts` if the service\n\t\t//       is desktop only.\n\t\t//\n\t\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n\t\t// Create services that require resolving in parallel\n\t\tconst workspace = this.resolveWorkspaceIdentifier(environmentService);\n\t\tconst [configurationService, storageService] = await Promise.all([\n\t\t\tthis.createWorkspaceService(workspace, environmentService, userDataProfileService, userDataProfilesService, fileService, remoteAgentService, uriIdentityService, logService, policyService).then(service => {\n\n\t\t\t\t// Workspace\n\t\t\t\tserviceCollection.set(IWorkspaceContextService, service);\n\n\t\t\t\t// Configuration\n\t\t\t\tserviceCollection.set(IWorkbenchConfigurationService, service);\n\n\t\t\t\treturn service;\n\t\t\t}),\n\n\t\t\tthis.createStorageService(workspace, environmentService, userDataProfileService, userDataProfilesService, mainProcessService).then(service => {\n\n\t\t\t\t// Storage\n\t\t\t\tserviceCollection.set(IStorageService, service);\n\n\t\t\t\treturn service;\n\t\t\t}),\n\n\t\t\tthis.createKeyboardLayoutService(mainProcessService).then(service => {\n\n\t\t\t\t// KeyboardLayout\n\t\t\t\tserviceCollection.set(INativeKeyboardLayoutService, service);\n\n\t\t\t\treturn service;\n\t\t\t})\n\t\t]);\n\n\t\tif (configurationService.getValue<boolean>('files.experimentalWatcherNext') === true) {\n\t\t\tdiskFileSystemProvider.setUseNextWatcher();\n\t\t}\n\n\t\t// Workspace Trust Service\n\t\tconst workspaceTrustEnablementService = new WorkspaceTrustEnablementService(configurationService, environmentService);\n\t\tserviceCollection.set(IWorkspaceTrustEnablementService, workspaceTrustEnablementService);\n\n\t\tconst workspaceTrustManagementService = new WorkspaceTrustManagementService(configurationService, remoteAuthorityResolverService, storageService, uriIdentityService, environmentService, configurationService, workspaceTrustEnablementService, fileService);\n\t\tserviceCollection.set(IWorkspaceTrustManagementService, workspaceTrustManagementService);\n\n\t\t// Update workspace trust so that configuration is updated accordingly\n\t\tconfigurationService.updateWorkspaceTrust(workspaceTrustManagementService.isWorkspaceTrusted());\n\t\tthis._register(workspaceTrustManagementService.onDidChangeTrust(() => configurationService.updateWorkspaceTrust(workspaceTrustManagementService.isWorkspaceTrusted())));\n\n\n\t\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t\t//\n\t\t// NOTE: Please do NOT register services here. Use `registerSingleton()`\n\t\t//       from `workbench.common.main.ts` if the service is shared between\n\t\t//       desktop and web or `workbench.desktop.main.ts` if the service\n\t\t//       is desktop only.\n\t\t//\n\t\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n\n\t\treturn { serviceCollection, logService, storageService, configurationService };\n\t}\n\n\tprivate resolveWorkspaceIdentifier(environmentService: INativeWorkbenchEnvironmentService): IAnyWorkspaceIdentifier {\n\n\t\t// Return early for when a folder or multi-root is opened\n\t\tif (this.configuration.workspace) {\n\t\t\treturn this.configuration.workspace;\n\t\t}\n\n\t\t// Otherwise, workspace is empty, so we derive an identifier\n\t\treturn toWorkspaceIdentifier(this.configuration.backupPath, environmentService.isExtensionDevelopment);\n\t}\n\n\tprivate async createWorkspaceService(\n\t\tworkspace: IAnyWorkspaceIdentifier,\n\t\tenvironmentService: INativeWorkbenchEnvironmentService,\n\t\tuserDataProfileService: IUserDataProfileService,\n\t\tuserDataProfilesService: IUserDataProfilesService,\n\t\tfileService: FileService,\n\t\tremoteAgentService: IRemoteAgentService,\n\t\turiIdentityService: IUriIdentityService,\n\t\tlogService: ILogService,\n\t\tpolicyService: IPolicyService\n\t): Promise<WorkspaceService> {\n\t\tconst configurationCache = new ConfigurationCache([Schemas.file, Schemas.vscodeUserData] /* Cache all non native resources */, environmentService, fileService);\n\t\tconst workspaceService = new WorkspaceService({ remoteAuthority: environmentService.remoteAuthority, configurationCache }, environmentService, userDataProfileService, userDataProfilesService, fileService, remoteAgentService, uriIdentityService, logService, policyService);\n\n\t\ttry {\n\t\t\tawait workspaceService.initialize(workspace);\n\n\t\t\treturn workspaceService;\n\t\t} catch (error) {\n\t\t\tonUnexpectedError(error);\n\n\t\t\treturn workspaceService;\n\t\t}\n\t}\n\n\tprivate async createStorageService(workspace: IAnyWorkspaceIdentifier, environmentService: INativeWorkbenchEnvironmentService, userDataProfileService: IUserDataProfileService, userDataProfilesService: IUserDataProfilesService, mainProcessService: IMainProcessService): Promise<NativeWorkbenchStorageService> {\n\t\tconst storageService = new NativeWorkbenchStorageService(workspace, userDataProfileService, userDataProfilesService, mainProcessService, environmentService);\n\n\t\ttry {\n\t\t\tawait storageService.initialize();\n\n\t\t\treturn storageService;\n\t\t} catch (error) {\n\t\t\tonUnexpectedError(error);\n\n\t\t\treturn storageService;\n\t\t}\n\t}\n\n\tprivate async createKeyboardLayoutService(mainProcessService: IMainProcessService): Promise<NativeKeyboardLayoutService> {\n\t\tconst keyboardLayoutService = new NativeKeyboardLayoutService(mainProcessService);\n\n\t\ttry {\n\t\t\tawait keyboardLayoutService.initialize();\n\n\t\t\treturn keyboardLayoutService;\n\t\t} catch (error) {\n\t\t\tonUnexpectedError(error);\n\n\t\t\treturn keyboardLayoutService;\n\t\t}\n\t}\n}\n\nexport function main(configuration: INativeWindowConfiguration): Promise<void> {\n\tconst workbench = new DesktopMain(configuration);\n\n\treturn workbench.open();\n}\n"],
  "mappings": "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",
  "names": []
}
