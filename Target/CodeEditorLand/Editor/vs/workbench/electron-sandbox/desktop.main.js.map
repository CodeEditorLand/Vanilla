{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/electron-sandbox/desktop.main.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { setFullscreen } from \"../../base/browser/browser.js\";\nimport { domContentLoaded } from \"../../base/browser/dom.js\";\nimport { mainWindow } from \"../../base/browser/window.js\";\nimport { onUnexpectedError } from \"../../base/common/errors.js\";\nimport { Disposable } from \"../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../base/common/network.js\";\nimport { safeStringify } from \"../../base/common/objects.js\";\nimport {\n\tisBigSurOrNewer,\n\tisCI,\n\tisMacintosh,\n} from \"../../base/common/platform.js\";\nimport { URI } from \"../../base/common/uri.js\";\nimport { ProxyChannel } from \"../../base/parts/ipc/common/ipc.js\";\nimport { localize } from \"../../nls.js\";\nimport type { IConfigurationService } from \"../../platform/configuration/common/configuration.js\";\nimport { FileService } from \"../../platform/files/common/fileService.js\";\nimport { IFileService } from \"../../platform/files/common/files.js\";\nimport { ServiceCollection } from \"../../platform/instantiation/common/serviceCollection.js\";\nimport { IMainProcessService } from \"../../platform/ipc/common/mainProcessService.js\";\nimport { ElectronIPCMainProcessService } from \"../../platform/ipc/electron-sandbox/mainProcessService.js\";\nimport { ISharedProcessService } from \"../../platform/ipc/electron-sandbox/services.js\";\nimport {\n\tILogService,\n\tILoggerService,\n\tLogLevel,\n} from \"../../platform/log/common/log.js\";\nimport { LoggerChannelClient } from \"../../platform/log/common/logIpc.js\";\nimport {\n\tIPolicyService,\n\tNullPolicyService,\n} from \"../../platform/policy/common/policy.js\";\nimport { PolicyChannelClient } from \"../../platform/policy/common/policyIpc.js\";\nimport product from \"../../platform/product/common/product.js\";\nimport { IProductService } from \"../../platform/product/common/productService.js\";\nimport { BrowserSocketFactory } from \"../../platform/remote/browser/browserSocketFactory.js\";\nimport {\n\tIRemoteAuthorityResolverService,\n\tRemoteConnectionType,\n} from \"../../platform/remote/common/remoteAuthorityResolver.js\";\nimport {\n\tIRemoteSocketFactoryService,\n\tRemoteSocketFactoryService,\n} from \"../../platform/remote/common/remoteSocketFactoryService.js\";\nimport { ElectronRemoteResourceLoader } from \"../../platform/remote/electron-sandbox/electronRemoteResourceLoader.js\";\nimport { RemoteAuthorityResolverService } from \"../../platform/remote/electron-sandbox/remoteAuthorityResolverService.js\";\nimport { ISignService } from \"../../platform/sign/common/sign.js\";\nimport { IStorageService } from \"../../platform/storage/common/storage.js\";\nimport { IUriIdentityService } from \"../../platform/uriIdentity/common/uriIdentity.js\";\nimport { UriIdentityService } from \"../../platform/uriIdentity/common/uriIdentityService.js\";\nimport { FileUserDataProvider } from \"../../platform/userData/common/fileUserDataProvider.js\";\nimport {\n\tIUserDataProfilesService,\n\treviveProfile,\n} from \"../../platform/userDataProfile/common/userDataProfile.js\";\nimport { UserDataProfilesService } from \"../../platform/userDataProfile/common/userDataProfileIpc.js\";\nimport type {\n\tINativeWindowConfiguration,\n\tIWindowsConfiguration,\n} from \"../../platform/window/common/window.js\";\nimport { applyZoom } from \"../../platform/window/electron-sandbox/window.js\";\nimport {\n\ttype IAnyWorkspaceIdentifier,\n\tIWorkspaceContextService,\n\tisSingleFolderWorkspaceIdentifier,\n\tisWorkspaceIdentifier,\n\treviveIdentifier,\n\ttoWorkspaceIdentifier,\n} from \"../../platform/workspace/common/workspace.js\";\nimport {\n\tIWorkspaceTrustEnablementService,\n\tIWorkspaceTrustManagementService,\n} from \"../../platform/workspace/common/workspaceTrust.js\";\nimport { Workbench } from \"../browser/workbench.js\";\nimport { WorkspaceService } from \"../services/configuration/browser/configurationService.js\";\nimport { IWorkbenchConfigurationService } from \"../services/configuration/common/configuration.js\";\nimport { ConfigurationCache } from \"../services/configuration/common/configurationCache.js\";\nimport {\n\tINativeWorkbenchEnvironmentService,\n\tNativeWorkbenchEnvironmentService,\n} from \"../services/environment/electron-sandbox/environmentService.js\";\nimport { DiskFileSystemProvider } from \"../services/files/electron-sandbox/diskFileSystemProvider.js\";\nimport {\n\tINativeKeyboardLayoutService,\n\tNativeKeyboardLayoutService,\n} from \"../services/keybinding/electron-sandbox/nativeKeyboardLayoutService.js\";\nimport { NativeLogService } from \"../services/log/electron-sandbox/logService.js\";\nimport { IRemoteAgentService } from \"../services/remote/common/remoteAgentService.js\";\nimport { RemoteFileSystemProviderClient } from \"../services/remote/common/remoteFileSystemProviderClient.js\";\nimport { RemoteAgentService } from \"../services/remote/electron-sandbox/remoteAgentService.js\";\nimport { SharedProcessService } from \"../services/sharedProcess/electron-sandbox/sharedProcessService.js\";\nimport { NativeWorkbenchStorageService } from \"../services/storage/electron-sandbox/storageService.js\";\nimport { IUserDataProfileService } from \"../services/userDataProfile/common/userDataProfile.js\";\nimport { UserDataProfileService } from \"../services/userDataProfile/common/userDataProfileService.js\";\nimport {\n\tIUtilityProcessWorkerWorkbenchService,\n\tUtilityProcessWorkerWorkbenchService,\n} from \"../services/utilityProcess/electron-sandbox/utilityProcessWorkerWorkbenchService.js\";\nimport {\n\tWorkspaceTrustEnablementService,\n\tWorkspaceTrustManagementService,\n} from \"../services/workspaces/common/workspaceTrust.js\";\nimport { NativeWindow } from \"./window.js\";\n\nexport class DesktopMain extends Disposable {\n\tconstructor(private readonly configuration: INativeWindowConfiguration) {\n\t\tsuper();\n\n\t\tthis.init();\n\t}\n\n\tprivate init(): void {\n\t\t// Massage configuration file URIs\n\t\tthis.reviveUris();\n\n\t\t// Apply fullscreen early if configured\n\t\tsetFullscreen(!!this.configuration.fullscreen, mainWindow);\n\t}\n\n\tprivate reviveUris() {\n\t\t// Workspace\n\t\tconst workspace = reviveIdentifier(this.configuration.workspace);\n\t\tif (\n\t\t\tisWorkspaceIdentifier(workspace) ||\n\t\t\tisSingleFolderWorkspaceIdentifier(workspace)\n\t\t) {\n\t\t\tthis.configuration.workspace = workspace;\n\t\t}\n\n\t\t// Files\n\t\tconst filesToWait = this.configuration.filesToWait;\n\t\tconst filesToWaitPaths = filesToWait?.paths;\n\t\tfor (const paths of [\n\t\t\tfilesToWaitPaths,\n\t\t\tthis.configuration.filesToOpenOrCreate,\n\t\t\tthis.configuration.filesToDiff,\n\t\t\tthis.configuration.filesToMerge,\n\t\t]) {\n\t\t\tif (Array.isArray(paths)) {\n\t\t\t\tfor (const path of paths) {\n\t\t\t\t\tif (path.fileUri) {\n\t\t\t\t\t\tpath.fileUri = URI.revive(path.fileUri);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (filesToWait) {\n\t\t\tfilesToWait.waitMarkerFileUri = URI.revive(\n\t\t\t\tfilesToWait.waitMarkerFileUri,\n\t\t\t);\n\t\t}\n\t}\n\n\tasync open(): Promise<void> {\n\t\t// Init services and wait for DOM to be ready in parallel\n\t\tconst [services] = await Promise.all([\n\t\t\tthis.initServices(),\n\t\t\tdomContentLoaded(mainWindow),\n\t\t]);\n\n\t\t// Apply zoom level early once we have a configuration service\n\t\t// and before the workbench is created to prevent flickering.\n\t\t// We also need to respect that zoom level can be configured per\n\t\t// workspace, so we need the resolved configuration service.\n\t\t// Finally, it is possible for the window to have a custom\n\t\t// zoom level that is not derived from settings.\n\t\t// (fixes https://github.com/microsoft/vscode/issues/187982)\n\t\tthis.applyWindowZoomLevel(services.configurationService);\n\n\t\t// Create Workbench\n\t\tconst workbench = new Workbench(\n\t\t\tmainWindow.document.body,\n\t\t\t{ extraClasses: this.getExtraClasses() },\n\t\t\tservices.serviceCollection,\n\t\t\tservices.logService,\n\t\t);\n\n\t\t// Listeners\n\t\tthis.registerListeners(workbench, services.storageService);\n\n\t\t// Startup\n\t\tconst instantiationService = workbench.startup();\n\n\t\t// Window\n\t\tthis._register(instantiationService.createInstance(NativeWindow));\n\t}\n\n\tprivate applyWindowZoomLevel(configurationService: IConfigurationService) {\n\t\tlet zoomLevel: number | undefined;\n\t\tif (\n\t\t\tthis.configuration.isCustomZoomLevel &&\n\t\t\ttypeof this.configuration.zoomLevel === \"number\"\n\t\t) {\n\t\t\tzoomLevel = this.configuration.zoomLevel;\n\t\t} else {\n\t\t\tconst windowConfig =\n\t\t\t\tconfigurationService.getValue<IWindowsConfiguration>();\n\t\t\tzoomLevel =\n\t\t\t\ttypeof windowConfig.window?.zoomLevel === \"number\"\n\t\t\t\t\t? windowConfig.window.zoomLevel\n\t\t\t\t\t: 0;\n\t\t}\n\n\t\tapplyZoom(zoomLevel, mainWindow);\n\t}\n\n\tprivate getExtraClasses(): string[] {\n\t\tif (isMacintosh && isBigSurOrNewer(this.configuration.os.release)) {\n\t\t\treturn [\"macos-bigsur-or-newer\"];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate registerListeners(\n\t\tworkbench: Workbench,\n\t\tstorageService: NativeWorkbenchStorageService,\n\t): void {\n\t\t// Workbench Lifecycle\n\t\tthis._register(\n\t\t\tworkbench.onWillShutdown((event) =>\n\t\t\t\tevent.join(storageService.close(), {\n\t\t\t\t\tid: \"join.closeStorage\",\n\t\t\t\t\tlabel: localize(\"join.closeStorage\", \"Saving UI state\"),\n\t\t\t\t}),\n\t\t\t),\n\t\t);\n\t\tthis._register(workbench.onDidShutdown(() => this.dispose()));\n\t}\n\n\tprivate async initServices(): Promise<{\n\t\tserviceCollection: ServiceCollection;\n\t\tlogService: ILogService;\n\t\tstorageService: NativeWorkbenchStorageService;\n\t\tconfigurationService: IConfigurationService;\n\t}> {\n\t\tconst serviceCollection = new ServiceCollection();\n\n\t\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t\t//\n\t\t// NOTE: Please do NOT register services here. Use `registerSingleton()`\n\t\t//       from `workbench.common.main.ts` if the service is shared between\n\t\t//       desktop and web or `workbench.desktop.main.ts` if the service\n\t\t//       is desktop only.\n\t\t//\n\t\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n\t\t// Main Process\n\t\tconst mainProcessService = this._register(\n\t\t\tnew ElectronIPCMainProcessService(this.configuration.windowId),\n\t\t);\n\t\tserviceCollection.set(IMainProcessService, mainProcessService);\n\n\t\t// Policies\n\t\tconst policyService = this.configuration.policiesData\n\t\t\t? new PolicyChannelClient(\n\t\t\t\t\tthis.configuration.policiesData,\n\t\t\t\t\tmainProcessService.getChannel(\"policy\"),\n\t\t\t\t)\n\t\t\t: new NullPolicyService();\n\t\tserviceCollection.set(IPolicyService, policyService);\n\n\t\t// Product\n\t\tconst productService: IProductService = {\n\t\t\t_serviceBrand: undefined,\n\t\t\t...product,\n\t\t};\n\t\tserviceCollection.set(IProductService, productService);\n\n\t\t// Environment\n\t\tconst environmentService = new NativeWorkbenchEnvironmentService(\n\t\t\tthis.configuration,\n\t\t\tproductService,\n\t\t);\n\t\tserviceCollection.set(\n\t\t\tINativeWorkbenchEnvironmentService,\n\t\t\tenvironmentService,\n\t\t);\n\n\t\t// Logger\n\t\tconst loggers = [\n\t\t\t...this.configuration.loggers.global.map((loggerResource) => ({\n\t\t\t\t...loggerResource,\n\t\t\t\tresource: URI.revive(loggerResource.resource),\n\t\t\t})),\n\t\t\t...this.configuration.loggers.window.map((loggerResource) => ({\n\t\t\t\t...loggerResource,\n\t\t\t\tresource: URI.revive(loggerResource.resource),\n\t\t\t\thidden: true,\n\t\t\t})),\n\t\t];\n\t\tconst loggerService = new LoggerChannelClient(\n\t\t\tthis.configuration.windowId,\n\t\t\tthis.configuration.logLevel,\n\t\t\tenvironmentService.windowLogsPath,\n\t\t\tloggers,\n\t\t\tmainProcessService.getChannel(\"logger\"),\n\t\t);\n\t\tserviceCollection.set(ILoggerService, loggerService);\n\n\t\t// Log\n\t\tconst logService = this._register(\n\t\t\tnew NativeLogService(loggerService, environmentService),\n\t\t);\n\t\tserviceCollection.set(ILogService, logService);\n\t\tif (isCI) {\n\t\t\tlogService.info(\"workbench#open()\"); // marking workbench open helps to diagnose flaky integration/smoke tests\n\t\t}\n\t\tif (logService.getLevel() === LogLevel.Trace) {\n\t\t\tlogService.trace(\n\t\t\t\t\"workbench#open(): with configuration\",\n\t\t\t\tsafeStringify({\n\t\t\t\t\t...this.configuration,\n\t\t\t\t\tnls: undefined /* exclude large property */,\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\n\t\t// Shared Process\n\t\tconst sharedProcessService = new SharedProcessService(\n\t\t\tthis.configuration.windowId,\n\t\t\tlogService,\n\t\t);\n\t\tserviceCollection.set(ISharedProcessService, sharedProcessService);\n\n\t\t// Utility Process Worker\n\t\tconst utilityProcessWorkerWorkbenchService =\n\t\t\tnew UtilityProcessWorkerWorkbenchService(\n\t\t\t\tthis.configuration.windowId,\n\t\t\t\tlogService,\n\t\t\t\tmainProcessService,\n\t\t\t);\n\t\tserviceCollection.set(\n\t\t\tIUtilityProcessWorkerWorkbenchService,\n\t\t\tutilityProcessWorkerWorkbenchService,\n\t\t);\n\n\t\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t\t//\n\t\t// NOTE: Please do NOT register services here. Use `registerSingleton()`\n\t\t//       from `workbench.common.main.ts` if the service is shared between\n\t\t//       desktop and web or `workbench.desktop.main.ts` if the service\n\t\t//       is desktop only.\n\t\t//\n\t\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n\t\t// Sign\n\t\tconst signService = ProxyChannel.toService<ISignService>(\n\t\t\tmainProcessService.getChannel(\"sign\"),\n\t\t);\n\t\tserviceCollection.set(ISignService, signService);\n\n\t\t// Files\n\t\tconst fileService = this._register(new FileService(logService));\n\t\tserviceCollection.set(IFileService, fileService);\n\n\t\t// Remote\n\t\tconst remoteAuthorityResolverService =\n\t\t\tnew RemoteAuthorityResolverService(\n\t\t\t\tproductService,\n\t\t\t\tnew ElectronRemoteResourceLoader(\n\t\t\t\t\tenvironmentService.window.id,\n\t\t\t\t\tmainProcessService,\n\t\t\t\t\tfileService,\n\t\t\t\t),\n\t\t\t);\n\t\tserviceCollection.set(\n\t\t\tIRemoteAuthorityResolverService,\n\t\t\tremoteAuthorityResolverService,\n\t\t);\n\n\t\t// Local Files\n\t\tconst diskFileSystemProvider = this._register(\n\t\t\tnew DiskFileSystemProvider(\n\t\t\t\tmainProcessService,\n\t\t\t\tutilityProcessWorkerWorkbenchService,\n\t\t\t\tlogService,\n\t\t\t\tloggerService,\n\t\t\t),\n\t\t);\n\t\tfileService.registerProvider(Schemas.file, diskFileSystemProvider);\n\n\t\t// URI Identity\n\t\tconst uriIdentityService = new UriIdentityService(fileService);\n\t\tserviceCollection.set(IUriIdentityService, uriIdentityService);\n\n\t\t// User Data Profiles\n\t\tconst userDataProfilesService = new UserDataProfilesService(\n\t\t\tthis.configuration.profiles.all,\n\t\t\tURI.revive(this.configuration.profiles.home).with({\n\t\t\t\tscheme: environmentService.userRoamingDataHome.scheme,\n\t\t\t}),\n\t\t\tmainProcessService.getChannel(\"userDataProfiles\"),\n\t\t);\n\t\tserviceCollection.set(\n\t\t\tIUserDataProfilesService,\n\t\t\tuserDataProfilesService,\n\t\t);\n\t\tconst userDataProfileService = new UserDataProfileService(\n\t\t\treviveProfile(\n\t\t\t\tthis.configuration.profiles.profile,\n\t\t\t\tuserDataProfilesService.profilesHome.scheme,\n\t\t\t),\n\t\t);\n\t\tserviceCollection.set(IUserDataProfileService, userDataProfileService);\n\n\t\t// Use FileUserDataProvider for user data to\n\t\t// enable atomic read / write operations.\n\t\tfileService.registerProvider(\n\t\t\tSchemas.vscodeUserData,\n\t\t\tthis._register(\n\t\t\t\tnew FileUserDataProvider(\n\t\t\t\t\tSchemas.file,\n\t\t\t\t\tdiskFileSystemProvider,\n\t\t\t\t\tSchemas.vscodeUserData,\n\t\t\t\t\tuserDataProfilesService,\n\t\t\t\t\turiIdentityService,\n\t\t\t\t\tlogService,\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\n\t\t// Remote Agent\n\t\tconst remoteSocketFactoryService = new RemoteSocketFactoryService();\n\t\tremoteSocketFactoryService.register(\n\t\t\tRemoteConnectionType.WebSocket,\n\t\t\tnew BrowserSocketFactory(null),\n\t\t);\n\t\tserviceCollection.set(\n\t\t\tIRemoteSocketFactoryService,\n\t\t\tremoteSocketFactoryService,\n\t\t);\n\t\tconst remoteAgentService = this._register(\n\t\t\tnew RemoteAgentService(\n\t\t\t\tremoteSocketFactoryService,\n\t\t\t\tuserDataProfileService,\n\t\t\t\tenvironmentService,\n\t\t\t\tproductService,\n\t\t\t\tremoteAuthorityResolverService,\n\t\t\t\tsignService,\n\t\t\t\tlogService,\n\t\t\t),\n\t\t);\n\t\tserviceCollection.set(IRemoteAgentService, remoteAgentService);\n\n\t\t// Remote Files\n\t\tthis._register(\n\t\t\tRemoteFileSystemProviderClient.register(\n\t\t\t\tremoteAgentService,\n\t\t\t\tfileService,\n\t\t\t\tlogService,\n\t\t\t),\n\t\t);\n\n\t\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t\t//\n\t\t// NOTE: Please do NOT register services here. Use `registerSingleton()`\n\t\t//       from `workbench.common.main.ts` if the service is shared between\n\t\t//       desktop and web or `workbench.desktop.main.ts` if the service\n\t\t//       is desktop only.\n\t\t//\n\t\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n\t\t// Create services that require resolving in parallel\n\t\tconst workspace = this.resolveWorkspaceIdentifier(environmentService);\n\t\tconst [configurationService, storageService] = await Promise.all([\n\t\t\tthis.createWorkspaceService(\n\t\t\t\tworkspace,\n\t\t\t\tenvironmentService,\n\t\t\t\tuserDataProfileService,\n\t\t\t\tuserDataProfilesService,\n\t\t\t\tfileService,\n\t\t\t\tremoteAgentService,\n\t\t\t\turiIdentityService,\n\t\t\t\tlogService,\n\t\t\t\tpolicyService,\n\t\t\t).then((service) => {\n\t\t\t\t// Workspace\n\t\t\t\tserviceCollection.set(IWorkspaceContextService, service);\n\n\t\t\t\t// Configuration\n\t\t\t\tserviceCollection.set(IWorkbenchConfigurationService, service);\n\n\t\t\t\treturn service;\n\t\t\t}),\n\n\t\t\tthis.createStorageService(\n\t\t\t\tworkspace,\n\t\t\t\tenvironmentService,\n\t\t\t\tuserDataProfileService,\n\t\t\t\tuserDataProfilesService,\n\t\t\t\tmainProcessService,\n\t\t\t).then((service) => {\n\t\t\t\t// Storage\n\t\t\t\tserviceCollection.set(IStorageService, service);\n\n\t\t\t\treturn service;\n\t\t\t}),\n\n\t\t\tthis.createKeyboardLayoutService(mainProcessService).then(\n\t\t\t\t(service) => {\n\t\t\t\t\t// KeyboardLayout\n\t\t\t\t\tserviceCollection.set(\n\t\t\t\t\t\tINativeKeyboardLayoutService,\n\t\t\t\t\t\tservice,\n\t\t\t\t\t);\n\n\t\t\t\t\treturn service;\n\t\t\t\t},\n\t\t\t),\n\t\t]);\n\n\t\t// Workspace Trust Service\n\t\tconst workspaceTrustEnablementService =\n\t\t\tnew WorkspaceTrustEnablementService(\n\t\t\t\tconfigurationService,\n\t\t\t\tenvironmentService,\n\t\t\t);\n\t\tserviceCollection.set(\n\t\t\tIWorkspaceTrustEnablementService,\n\t\t\tworkspaceTrustEnablementService,\n\t\t);\n\n\t\tconst workspaceTrustManagementService =\n\t\t\tnew WorkspaceTrustManagementService(\n\t\t\t\tconfigurationService,\n\t\t\t\tremoteAuthorityResolverService,\n\t\t\t\tstorageService,\n\t\t\t\turiIdentityService,\n\t\t\t\tenvironmentService,\n\t\t\t\tconfigurationService,\n\t\t\t\tworkspaceTrustEnablementService,\n\t\t\t\tfileService,\n\t\t\t);\n\t\tserviceCollection.set(\n\t\t\tIWorkspaceTrustManagementService,\n\t\t\tworkspaceTrustManagementService,\n\t\t);\n\n\t\t// Update workspace trust so that configuration is updated accordingly\n\t\tconfigurationService.updateWorkspaceTrust(\n\t\t\tworkspaceTrustManagementService.isWorkspaceTrusted(),\n\t\t);\n\t\tthis._register(\n\t\t\tworkspaceTrustManagementService.onDidChangeTrust(() =>\n\t\t\t\tconfigurationService.updateWorkspaceTrust(\n\t\t\t\t\tworkspaceTrustManagementService.isWorkspaceTrusted(),\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\n\t\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t\t//\n\t\t// NOTE: Please do NOT register services here. Use `registerSingleton()`\n\t\t//       from `workbench.common.main.ts` if the service is shared between\n\t\t//       desktop and web or `workbench.desktop.main.ts` if the service\n\t\t//       is desktop only.\n\t\t//\n\t\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n\t\treturn {\n\t\t\tserviceCollection,\n\t\t\tlogService,\n\t\t\tstorageService,\n\t\t\tconfigurationService,\n\t\t};\n\t}\n\n\tprivate resolveWorkspaceIdentifier(\n\t\tenvironmentService: INativeWorkbenchEnvironmentService,\n\t): IAnyWorkspaceIdentifier {\n\t\t// Return early for when a folder or multi-root is opened\n\t\tif (this.configuration.workspace) {\n\t\t\treturn this.configuration.workspace;\n\t\t}\n\n\t\t// Otherwise, workspace is empty, so we derive an identifier\n\t\treturn toWorkspaceIdentifier(\n\t\t\tthis.configuration.backupPath,\n\t\t\tenvironmentService.isExtensionDevelopment,\n\t\t);\n\t}\n\n\tprivate async createWorkspaceService(\n\t\tworkspace: IAnyWorkspaceIdentifier,\n\t\tenvironmentService: INativeWorkbenchEnvironmentService,\n\t\tuserDataProfileService: IUserDataProfileService,\n\t\tuserDataProfilesService: IUserDataProfilesService,\n\t\tfileService: FileService,\n\t\tremoteAgentService: IRemoteAgentService,\n\t\turiIdentityService: IUriIdentityService,\n\t\tlogService: ILogService,\n\t\tpolicyService: IPolicyService,\n\t): Promise<WorkspaceService> {\n\t\tconst configurationCache = new ConfigurationCache(\n\t\t\t[\n\t\t\t\tSchemas.file,\n\t\t\t\tSchemas.vscodeUserData,\n\t\t\t] /* Cache all non native resources */,\n\t\t\tenvironmentService,\n\t\t\tfileService,\n\t\t);\n\t\tconst workspaceService = new WorkspaceService(\n\t\t\t{\n\t\t\t\tremoteAuthority: environmentService.remoteAuthority,\n\t\t\t\tconfigurationCache,\n\t\t\t},\n\t\t\tenvironmentService,\n\t\t\tuserDataProfileService,\n\t\t\tuserDataProfilesService,\n\t\t\tfileService,\n\t\t\tremoteAgentService,\n\t\t\turiIdentityService,\n\t\t\tlogService,\n\t\t\tpolicyService,\n\t\t);\n\n\t\ttry {\n\t\t\tawait workspaceService.initialize(workspace);\n\n\t\t\treturn workspaceService;\n\t\t} catch (error) {\n\t\t\tonUnexpectedError(error);\n\n\t\t\treturn workspaceService;\n\t\t}\n\t}\n\n\tprivate async createStorageService(\n\t\tworkspace: IAnyWorkspaceIdentifier,\n\t\tenvironmentService: INativeWorkbenchEnvironmentService,\n\t\tuserDataProfileService: IUserDataProfileService,\n\t\tuserDataProfilesService: IUserDataProfilesService,\n\t\tmainProcessService: IMainProcessService,\n\t): Promise<NativeWorkbenchStorageService> {\n\t\tconst storageService = new NativeWorkbenchStorageService(\n\t\t\tworkspace,\n\t\t\tuserDataProfileService,\n\t\t\tuserDataProfilesService,\n\t\t\tmainProcessService,\n\t\t\tenvironmentService,\n\t\t);\n\n\t\ttry {\n\t\t\tawait storageService.initialize();\n\n\t\t\treturn storageService;\n\t\t} catch (error) {\n\t\t\tonUnexpectedError(error);\n\n\t\t\treturn storageService;\n\t\t}\n\t}\n\n\tprivate async createKeyboardLayoutService(\n\t\tmainProcessService: IMainProcessService,\n\t): Promise<NativeKeyboardLayoutService> {\n\t\tconst keyboardLayoutService = new NativeKeyboardLayoutService(\n\t\t\tmainProcessService,\n\t\t);\n\n\t\ttry {\n\t\t\tawait keyboardLayoutService.initialize();\n\n\t\t\treturn keyboardLayoutService;\n\t\t} catch (error) {\n\t\t\tonUnexpectedError(error);\n\n\t\t\treturn keyboardLayoutService;\n\t\t}\n\t}\n}\n\nexport function main(configuration: INativeWindowConfiguration): Promise<void> {\n\tconst workbench = new DesktopMain(configuration);\n\n\treturn workbench.open();\n}\n"],
  "mappings": ";;AAKA,SAAS,qBAAqB;AAC9B,SAAS,wBAAwB;AACjC,SAAS,kBAAkB;AAC3B,SAAS,yBAAyB;AAClC,SAAS,kBAAkB;AAC3B,SAAS,eAAe;AACxB,SAAS,qBAAqB;AAC9B;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,WAAW;AACpB,SAAS,oBAAoB;AAC7B,SAAS,gBAAgB;AAEzB,SAAS,mBAAmB;AAC5B,SAAS,oBAAoB;AAC7B,SAAS,yBAAyB;AAClC,SAAS,2BAA2B;AACpC,SAAS,qCAAqC;AAC9C,SAAS,6BAA6B;AACtC;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,2BAA2B;AACpC;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,2BAA2B;AACpC,OAAO,aAAa;AACpB,SAAS,uBAAuB;AAChC,SAAS,4BAA4B;AACrC;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,oCAAoC;AAC7C,SAAS,sCAAsC;AAC/C,SAAS,oBAAoB;AAC7B,SAAS,uBAAuB;AAChC,SAAS,2BAA2B;AACpC,SAAS,0BAA0B;AACnC,SAAS,4BAA4B;AACrC;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,+BAA+B;AAKxC,SAAS,iBAAiB;AAC1B;AAAA,EAEC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,iBAAiB;AAC1B,SAAS,wBAAwB;AACjC,SAAS,sCAAsC;AAC/C,SAAS,0BAA0B;AACnC;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,8BAA8B;AACvC;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,wBAAwB;AACjC,SAAS,2BAA2B;AACpC,SAAS,sCAAsC;AAC/C,SAAS,0BAA0B;AACnC,SAAS,4BAA4B;AACrC,SAAS,qCAAqC;AAC9C,SAAS,+BAA+B;AACxC,SAAS,8BAA8B;AACvC;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,oBAAoB;AAEtB,MAAM,oBAAoB,WAAW;AAAA,EAC3C,YAA6B,eAA2C;AACvE,UAAM;AADsB;AAG5B,SAAK,KAAK;AAAA,EACX;AAAA,EAlHD,OA6G4C;AAAA;AAAA;AAAA,EAOnC,OAAa;AAEpB,SAAK,WAAW;AAGhB,kBAAc,CAAC,CAAC,KAAK,cAAc,YAAY,UAAU;AAAA,EAC1D;AAAA,EAEQ,aAAa;AAEpB,UAAM,YAAY,iBAAiB,KAAK,cAAc,SAAS;AAC/D,QACC,sBAAsB,SAAS,KAC/B,kCAAkC,SAAS,GAC1C;AACD,WAAK,cAAc,YAAY;AAAA,IAChC;AAGA,UAAM,cAAc,KAAK,cAAc;AACvC,UAAM,mBAAmB,aAAa;AACtC,eAAW,SAAS;AAAA,MACnB;AAAA,MACA,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,IACpB,GAAG;AACF,UAAI,MAAM,QAAQ,KAAK,GAAG;AACzB,mBAAW,QAAQ,OAAO;AACzB,cAAI,KAAK,SAAS;AACjB,iBAAK,UAAU,IAAI,OAAO,KAAK,OAAO;AAAA,UACvC;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAEA,QAAI,aAAa;AAChB,kBAAY,oBAAoB,IAAI;AAAA,QACnC,YAAY;AAAA,MACb;AAAA,IACD;AAAA,EACD;AAAA,EAEA,MAAM,OAAsB;AAE3B,UAAM,CAAC,QAAQ,IAAI,MAAM,QAAQ,IAAI;AAAA,MACpC,KAAK,aAAa;AAAA,MAClB,iBAAiB,UAAU;AAAA,IAC5B,CAAC;AASD,SAAK,qBAAqB,SAAS,oBAAoB;AAGvD,UAAM,YAAY,IAAI;AAAA,MACrB,WAAW,SAAS;AAAA,MACpB,EAAE,cAAc,KAAK,gBAAgB,EAAE;AAAA,MACvC,SAAS;AAAA,MACT,SAAS;AAAA,IACV;AAGA,SAAK,kBAAkB,WAAW,SAAS,cAAc;AAGzD,UAAM,uBAAuB,UAAU,QAAQ;AAG/C,SAAK,UAAU,qBAAqB,eAAe,YAAY,CAAC;AAAA,EACjE;AAAA,EAEQ,qBAAqB,sBAA6C;AACzE,QAAI;AACJ,QACC,KAAK,cAAc,qBACnB,OAAO,KAAK,cAAc,cAAc,UACvC;AACD,kBAAY,KAAK,cAAc;AAAA,IAChC,OAAO;AACN,YAAM,eACL,qBAAqB,SAAgC;AACtD,kBACC,OAAO,aAAa,QAAQ,cAAc,WACvC,aAAa,OAAO,YACpB;AAAA,IACL;AAEA,cAAU,WAAW,UAAU;AAAA,EAChC;AAAA,EAEQ,kBAA4B;AACnC,QAAI,eAAe,gBAAgB,KAAK,cAAc,GAAG,OAAO,GAAG;AAClE,aAAO,CAAC,uBAAuB;AAAA,IAChC;AAEA,WAAO,CAAC;AAAA,EACT;AAAA,EAEQ,kBACP,WACA,gBACO;AAEP,SAAK;AAAA,MACJ,UAAU;AAAA,QAAe,CAAC,UACzB,MAAM,KAAK,eAAe,MAAM,GAAG;AAAA,UAClC,IAAI;AAAA,UACJ,OAAO,SAAS,qBAAqB,iBAAiB;AAAA,QACvD,CAAC;AAAA,MACF;AAAA,IACD;AACA,SAAK,UAAU,UAAU,cAAc,MAAM,KAAK,QAAQ,CAAC,CAAC;AAAA,EAC7D;AAAA,EAEA,MAAc,eAKX;AACF,UAAM,oBAAoB,IAAI,kBAAkB;AAYhD,UAAM,qBAAqB,KAAK;AAAA,MAC/B,IAAI,8BAA8B,KAAK,cAAc,QAAQ;AAAA,IAC9D;AACA,sBAAkB,IAAI,qBAAqB,kBAAkB;AAG7D,UAAM,gBAAgB,KAAK,cAAc,eACtC,IAAI;AAAA,MACJ,KAAK,cAAc;AAAA,MACnB,mBAAmB,WAAW,QAAQ;AAAA,IACvC,IACC,IAAI,kBAAkB;AACzB,sBAAkB,IAAI,gBAAgB,aAAa;AAGnD,UAAM,iBAAkC;AAAA,MACvC,eAAe;AAAA,MACf,GAAG;AAAA,IACJ;AACA,sBAAkB,IAAI,iBAAiB,cAAc;AAGrD,UAAM,qBAAqB,IAAI;AAAA,MAC9B,KAAK;AAAA,MACL;AAAA,IACD;AACA,sBAAkB;AAAA,MACjB;AAAA,MACA;AAAA,IACD;AAGA,UAAM,UAAU;AAAA,MACf,GAAG,KAAK,cAAc,QAAQ,OAAO,IAAI,CAAC,oBAAoB;AAAA,QAC7D,GAAG;AAAA,QACH,UAAU,IAAI,OAAO,eAAe,QAAQ;AAAA,MAC7C,EAAE;AAAA,MACF,GAAG,KAAK,cAAc,QAAQ,OAAO,IAAI,CAAC,oBAAoB;AAAA,QAC7D,GAAG;AAAA,QACH,UAAU,IAAI,OAAO,eAAe,QAAQ;AAAA,QAC5C,QAAQ;AAAA,MACT,EAAE;AAAA,IACH;AACA,UAAM,gBAAgB,IAAI;AAAA,MACzB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,mBAAmB;AAAA,MACnB;AAAA,MACA,mBAAmB,WAAW,QAAQ;AAAA,IACvC;AACA,sBAAkB,IAAI,gBAAgB,aAAa;AAGnD,UAAM,aAAa,KAAK;AAAA,MACvB,IAAI,iBAAiB,eAAe,kBAAkB;AAAA,IACvD;AACA,sBAAkB,IAAI,aAAa,UAAU;AAC7C,QAAI,MAAM;AACT,iBAAW,KAAK,kBAAkB;AAAA,IACnC;AACA,QAAI,WAAW,SAAS,MAAM,SAAS,OAAO;AAC7C,iBAAW;AAAA,QACV;AAAA,QACA,cAAc;AAAA,UACb,GAAG,KAAK;AAAA,UACR,KAAK;AAAA,QACN,CAAC;AAAA,MACF;AAAA,IACD;AAGA,UAAM,uBAAuB,IAAI;AAAA,MAChC,KAAK,cAAc;AAAA,MACnB;AAAA,IACD;AACA,sBAAkB,IAAI,uBAAuB,oBAAoB;AAGjE,UAAM,uCACL,IAAI;AAAA,MACH,KAAK,cAAc;AAAA,MACnB;AAAA,MACA;AAAA,IACD;AACD,sBAAkB;AAAA,MACjB;AAAA,MACA;AAAA,IACD;AAYA,UAAM,cAAc,aAAa;AAAA,MAChC,mBAAmB,WAAW,MAAM;AAAA,IACrC;AACA,sBAAkB,IAAI,cAAc,WAAW;AAG/C,UAAM,cAAc,KAAK,UAAU,IAAI,YAAY,UAAU,CAAC;AAC9D,sBAAkB,IAAI,cAAc,WAAW;AAG/C,UAAM,iCACL,IAAI;AAAA,MACH;AAAA,MACA,IAAI;AAAA,QACH,mBAAmB,OAAO;AAAA,QAC1B;AAAA,QACA;AAAA,MACD;AAAA,IACD;AACD,sBAAkB;AAAA,MACjB;AAAA,MACA;AAAA,IACD;AAGA,UAAM,yBAAyB,KAAK;AAAA,MACnC,IAAI;AAAA,QACH;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,IACD;AACA,gBAAY,iBAAiB,QAAQ,MAAM,sBAAsB;AAGjE,UAAM,qBAAqB,IAAI,mBAAmB,WAAW;AAC7D,sBAAkB,IAAI,qBAAqB,kBAAkB;AAG7D,UAAM,0BAA0B,IAAI;AAAA,MACnC,KAAK,cAAc,SAAS;AAAA,MAC5B,IAAI,OAAO,KAAK,cAAc,SAAS,IAAI,EAAE,KAAK;AAAA,QACjD,QAAQ,mBAAmB,oBAAoB;AAAA,MAChD,CAAC;AAAA,MACD,mBAAmB,WAAW,kBAAkB;AAAA,IACjD;AACA,sBAAkB;AAAA,MACjB;AAAA,MACA;AAAA,IACD;AACA,UAAM,yBAAyB,IAAI;AAAA,MAClC;AAAA,QACC,KAAK,cAAc,SAAS;AAAA,QAC5B,wBAAwB,aAAa;AAAA,MACtC;AAAA,IACD;AACA,sBAAkB,IAAI,yBAAyB,sBAAsB;AAIrE,gBAAY;AAAA,MACX,QAAQ;AAAA,MACR,KAAK;AAAA,QACJ,IAAI;AAAA,UACH,QAAQ;AAAA,UACR;AAAA,UACA,QAAQ;AAAA,UACR;AAAA,UACA;AAAA,UACA;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAGA,UAAM,6BAA6B,IAAI,2BAA2B;AAClE,+BAA2B;AAAA,MAC1B,qBAAqB;AAAA,MACrB,IAAI,qBAAqB,IAAI;AAAA,IAC9B;AACA,sBAAkB;AAAA,MACjB;AAAA,MACA;AAAA,IACD;AACA,UAAM,qBAAqB,KAAK;AAAA,MAC/B,IAAI;AAAA,QACH;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,IACD;AACA,sBAAkB,IAAI,qBAAqB,kBAAkB;AAG7D,SAAK;AAAA,MACJ,+BAA+B;AAAA,QAC9B;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAYA,UAAM,YAAY,KAAK,2BAA2B,kBAAkB;AACpE,UAAM,CAAC,sBAAsB,cAAc,IAAI,MAAM,QAAQ,IAAI;AAAA,MAChE,KAAK;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACD,EAAE,KAAK,CAAC,YAAY;AAEnB,0BAAkB,IAAI,0BAA0B,OAAO;AAGvD,0BAAkB,IAAI,gCAAgC,OAAO;AAE7D,eAAO;AAAA,MACR,CAAC;AAAA,MAED,KAAK;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACD,EAAE,KAAK,CAAC,YAAY;AAEnB,0BAAkB,IAAI,iBAAiB,OAAO;AAE9C,eAAO;AAAA,MACR,CAAC;AAAA,MAED,KAAK,4BAA4B,kBAAkB,EAAE;AAAA,QACpD,CAAC,YAAY;AAEZ,4BAAkB;AAAA,YACjB;AAAA,YACA;AAAA,UACD;AAEA,iBAAO;AAAA,QACR;AAAA,MACD;AAAA,IACD,CAAC;AAGD,UAAM,kCACL,IAAI;AAAA,MACH;AAAA,MACA;AAAA,IACD;AACD,sBAAkB;AAAA,MACjB;AAAA,MACA;AAAA,IACD;AAEA,UAAM,kCACL,IAAI;AAAA,MACH;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AACD,sBAAkB;AAAA,MACjB;AAAA,MACA;AAAA,IACD;AAGA,yBAAqB;AAAA,MACpB,gCAAgC,mBAAmB;AAAA,IACpD;AACA,SAAK;AAAA,MACJ,gCAAgC;AAAA,QAAiB,MAChD,qBAAqB;AAAA,UACpB,gCAAgC,mBAAmB;AAAA,QACpD;AAAA,MACD;AAAA,IACD;AAWA,WAAO;AAAA,MACN;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,EACD;AAAA,EAEQ,2BACP,oBAC0B;AAE1B,QAAI,KAAK,cAAc,WAAW;AACjC,aAAO,KAAK,cAAc;AAAA,IAC3B;AAGA,WAAO;AAAA,MACN,KAAK,cAAc;AAAA,MACnB,mBAAmB;AAAA,IACpB;AAAA,EACD;AAAA,EAEA,MAAc,uBACb,WACA,oBACA,wBACA,yBACA,aACA,oBACA,oBACA,YACA,eAC4B;AAC5B,UAAM,qBAAqB,IAAI;AAAA,MAC9B;AAAA,QACC,QAAQ;AAAA,QACR,QAAQ;AAAA,MACT;AAAA,MACA;AAAA,MACA;AAAA,IACD;AACA,UAAM,mBAAmB,IAAI;AAAA,MAC5B;AAAA,QACC,iBAAiB,mBAAmB;AAAA,QACpC;AAAA,MACD;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAEA,QAAI;AACH,YAAM,iBAAiB,WAAW,SAAS;AAE3C,aAAO;AAAA,IACR,SAAS,OAAO;AACf,wBAAkB,KAAK;AAEvB,aAAO;AAAA,IACR;AAAA,EACD;AAAA,EAEA,MAAc,qBACb,WACA,oBACA,wBACA,yBACA,oBACyC;AACzC,UAAM,iBAAiB,IAAI;AAAA,MAC1B;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAEA,QAAI;AACH,YAAM,eAAe,WAAW;AAEhC,aAAO;AAAA,IACR,SAAS,OAAO;AACf,wBAAkB,KAAK;AAEvB,aAAO;AAAA,IACR;AAAA,EACD;AAAA,EAEA,MAAc,4BACb,oBACuC;AACvC,UAAM,wBAAwB,IAAI;AAAA,MACjC;AAAA,IACD;AAEA,QAAI;AACH,YAAM,sBAAsB,WAAW;AAEvC,aAAO;AAAA,IACR,SAAS,OAAO;AACf,wBAAkB,KAAK;AAEvB,aAAO;AAAA,IACR;AAAA,EACD;AACD;AAEO,SAAS,KAAK,eAA0D;AAC9E,QAAM,YAAY,IAAI,YAAY,aAAa;AAE/C,SAAO,UAAU,KAAK;AACvB;AAJgB;",
  "names": []
}
