{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/electron-sandbox/parts/titlebar/menubarControl.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IAction, Separator } from '../../../../base/common/actions.js';\nimport { IMenuService, SubmenuItemAction, MenuItemAction } from '../../../../platform/actions/common/actions.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IWorkspacesService } from '../../../../platform/workspaces/common/workspaces.js';\nimport { isMacintosh } from '../../../../base/common/platform.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { INativeWorkbenchEnvironmentService } from '../../../services/environment/electron-sandbox/environmentService.js';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { ILabelService } from '../../../../platform/label/common/label.js';\nimport { IUpdateService } from '../../../../platform/update/common/update.js';\nimport { IOpenRecentAction, MenubarControl } from '../../../browser/parts/titlebar/menubarControl.js';\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\nimport { IMenubarData, IMenubarMenu, IMenubarKeybinding, IMenubarMenuItemSubmenu, IMenubarMenuItemAction, MenubarMenuItem } from '../../../../platform/menubar/common/menubar.js';\nimport { IMenubarService } from '../../../../platform/menubar/electron-sandbox/menubar.js';\nimport { INativeHostService } from '../../../../platform/native/common/native.js';\nimport { IHostService } from '../../../services/host/browser/host.js';\nimport { IPreferencesService } from '../../../services/preferences/common/preferences.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { OpenRecentAction } from '../../../browser/actions/windowActions.js';\nimport { isICommandActionToggleInfo } from '../../../../platform/action/common/action.js';\nimport { createAndFillInContextMenuActions } from '../../../../platform/actions/browser/menuEntryActionViewItem.js';\n\nexport class NativeMenubarControl extends MenubarControl {\n\n\tconstructor(\n\t\t@IMenuService menuService: IMenuService,\n\t\t@IWorkspacesService workspacesService: IWorkspacesService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@ILabelService labelService: ILabelService,\n\t\t@IUpdateService updateService: IUpdateService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IPreferencesService preferencesService: IPreferencesService,\n\t\t@INativeWorkbenchEnvironmentService environmentService: INativeWorkbenchEnvironmentService,\n\t\t@IAccessibilityService accessibilityService: IAccessibilityService,\n\t\t@IMenubarService private readonly menubarService: IMenubarService,\n\t\t@IHostService hostService: IHostService,\n\t\t@INativeHostService private readonly nativeHostService: INativeHostService,\n\t\t@ICommandService commandService: ICommandService,\n\t) {\n\t\tsuper(menuService, workspacesService, contextKeyService, keybindingService, configurationService, labelService, updateService, storageService, notificationService, preferencesService, environmentService, accessibilityService, hostService, commandService);\n\n\t\t(async () => {\n\t\t\tthis.recentlyOpened = await this.workspacesService.getRecentlyOpened();\n\n\t\t\tthis.doUpdateMenubar();\n\t\t})();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprotected override setupMainMenu(): void {\n\t\tsuper.setupMainMenu();\n\n\t\tfor (const topLevelMenuName of Object.keys(this.topLevelTitles)) {\n\t\t\tconst menu = this.menus[topLevelMenuName];\n\t\t\tif (menu) {\n\t\t\t\tthis.mainMenuDisposables.add(menu.onDidChange(() => this.updateMenubar()));\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected doUpdateMenubar(): void {\n\t\t// Since the native menubar is shared between windows (main process)\n\t\t// only allow the focused window to update the menubar\n\t\tif (!this.hostService.hasFocus) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Send menus to main process to be rendered by Electron\n\t\tconst menubarData = { menus: {}, keybindings: {} };\n\t\tif (this.getMenubarMenus(menubarData)) {\n\t\t\tthis.menubarService.updateMenubar(this.nativeHostService.windowId, menubarData);\n\t\t}\n\t}\n\n\tprivate getMenubarMenus(menubarData: IMenubarData): boolean {\n\t\tif (!menubarData) {\n\t\t\treturn false;\n\t\t}\n\n\t\tmenubarData.keybindings = this.getAdditionalKeybindings();\n\t\tfor (const topLevelMenuName of Object.keys(this.topLevelTitles)) {\n\t\t\tconst menu = this.menus[topLevelMenuName];\n\t\t\tif (menu) {\n\t\t\t\tconst menubarMenu: IMenubarMenu = { items: [] };\n\t\t\t\tconst menuActions: IAction[] = [];\n\t\t\t\tcreateAndFillInContextMenuActions(menu, { shouldForwardArgs: true }, menuActions);\n\t\t\t\tthis.populateMenuItems(menuActions, menubarMenu, menubarData.keybindings);\n\t\t\t\tif (menubarMenu.items.length === 0) {\n\t\t\t\t\treturn false; // Menus are incomplete\n\t\t\t\t}\n\t\t\t\tmenubarData.menus[topLevelMenuName] = menubarMenu;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate populateMenuItems(menuActions: readonly IAction[], menuToPopulate: IMenubarMenu, keybindings: { [id: string]: IMenubarKeybinding | undefined }) {\n\t\tfor (const menuItem of menuActions) {\n\t\t\tif (menuItem instanceof Separator) {\n\t\t\t\tmenuToPopulate.items.push({ id: 'vscode.menubar.separator' });\n\t\t\t} else if (menuItem instanceof MenuItemAction || menuItem instanceof SubmenuItemAction) {\n\n\t\t\t\t// use mnemonicTitle whenever possible\n\t\t\t\tconst title = typeof menuItem.item.title === 'string'\n\t\t\t\t\t? menuItem.item.title\n\t\t\t\t\t: menuItem.item.title.mnemonicTitle ?? menuItem.item.title.value;\n\n\t\t\t\tif (menuItem instanceof SubmenuItemAction) {\n\t\t\t\t\tconst submenu = { items: [] };\n\n\t\t\t\t\tthis.populateMenuItems(menuItem.actions, submenu, keybindings);\n\n\t\t\t\t\tif (submenu.items.length > 0) {\n\t\t\t\t\t\tconst menubarSubmenuItem: IMenubarMenuItemSubmenu = {\n\t\t\t\t\t\t\tid: menuItem.id,\n\t\t\t\t\t\t\tlabel: title,\n\t\t\t\t\t\t\tsubmenu\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tmenuToPopulate.items.push(menubarSubmenuItem);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (menuItem.id === OpenRecentAction.ID) {\n\t\t\t\t\t\tconst actions = this.getOpenRecentActions().map(this.transformOpenRecentAction);\n\t\t\t\t\t\tmenuToPopulate.items.push(...actions);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst menubarMenuItem: IMenubarMenuItemAction = {\n\t\t\t\t\t\tid: menuItem.id,\n\t\t\t\t\t\tlabel: title\n\t\t\t\t\t};\n\n\t\t\t\t\tif (isICommandActionToggleInfo(menuItem.item.toggled)) {\n\t\t\t\t\t\tmenubarMenuItem.label = menuItem.item.toggled.mnemonicTitle ?? menuItem.item.toggled.title ?? title;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (menuItem.checked) {\n\t\t\t\t\t\tmenubarMenuItem.checked = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!menuItem.enabled) {\n\t\t\t\t\t\tmenubarMenuItem.enabled = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tkeybindings[menuItem.id] = this.getMenubarKeybinding(menuItem.id);\n\t\t\t\t\tmenuToPopulate.items.push(menubarMenuItem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate transformOpenRecentAction(action: Separator | IOpenRecentAction): MenubarMenuItem {\n\t\tif (action instanceof Separator) {\n\t\t\treturn { id: 'vscode.menubar.separator' };\n\t\t}\n\n\t\treturn {\n\t\t\tid: action.id,\n\t\t\turi: action.uri,\n\t\t\tremoteAuthority: action.remoteAuthority,\n\t\t\tenabled: action.enabled,\n\t\t\tlabel: action.label\n\t\t};\n\t}\n\n\tprivate getAdditionalKeybindings(): { [id: string]: IMenubarKeybinding } {\n\t\tconst keybindings: { [id: string]: IMenubarKeybinding } = {};\n\t\tif (isMacintosh) {\n\t\t\tconst keybinding = this.getMenubarKeybinding('workbench.action.quit');\n\t\t\tif (keybinding) {\n\t\t\t\tkeybindings['workbench.action.quit'] = keybinding;\n\t\t\t}\n\t\t}\n\n\t\treturn keybindings;\n\t}\n\n\tprivate getMenubarKeybinding(id: string): IMenubarKeybinding | undefined {\n\t\tconst binding = this.keybindingService.lookupKeybinding(id);\n\t\tif (!binding) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// first try to resolve a native accelerator\n\t\tconst electronAccelerator = binding.getElectronAccelerator();\n\t\tif (electronAccelerator) {\n\t\t\treturn { label: electronAccelerator, userSettingsLabel: binding.getUserSettingsLabel() ?? undefined };\n\t\t}\n\n\t\t// we need this fallback to support keybindings that cannot show in electron menus (e.g. chords)\n\t\tconst acceleratorLabel = binding.getLabel();\n\t\tif (acceleratorLabel) {\n\t\t\treturn { label: acceleratorLabel, isNative: false, userSettingsLabel: binding.getUserSettingsLabel() ?? undefined };\n\t\t}\n\n\t\treturn undefined;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
