var ie=Object.defineProperty;var te=Object.getOwnPropertyDescriptor;var b=(h,s,i,o)=>{for(var t=o>1?void 0:o?te(s,i):s,r=h.length-1,n;r>=0;r--)(n=h[r])&&(t=(o?n(s,i,t):n(t))||t);return o&&t&&ie(s,i,t),t},e=(h,s)=>(i,o)=>s(i,o,h);import{Event as re}from"../../../../base/common/event.js";import{getZoomFactor as y,isWCOEnabled as oe}from"../../../../base/browser/browser.js";import{$ as x,addDisposableListener as M,append as W,EventType as E,getWindow as m,getWindowId as k,hide as N,show as A}from"../../../../base/browser/dom.js";import{IContextKeyService as B}from"../../../../platform/contextkey/common/contextkey.js";import{IConfigurationService as K}from"../../../../platform/configuration/common/configuration.js";import{IStorageService as _}from"../../../../platform/storage/common/storage.js";import{INativeWorkbenchEnvironmentService as D}from"../../../services/environment/electron-sandbox/environmentService.js";import{IHostService as O}from"../../../services/host/browser/host.js";import{isMacintosh as G,isWindows as U,isLinux as F,isNative as ne,isBigSurOrNewer as se}from"../../../../base/common/platform.js";import{IMenuService as V,MenuId as ae}from"../../../../platform/actions/common/actions.js";import{BrowserTitlebarPart as ce,BrowserTitleService as de}from"../../../browser/parts/titlebar/titlebarPart.js";import{IContextMenuService as Z}from"../../../../platform/contextview/browser/contextView.js";import{IThemeService as P}from"../../../../platform/theme/common/themeService.js";import{IWorkbenchLayoutService as $,Parts as me}from"../../../services/layout/browser/layoutService.js";import{INativeHostService as X}from"../../../../platform/native/common/native.js";import{hasNativeTitlebar as H,useWindowControlsOverlay as Q,DEFAULT_CUSTOM_TITLEBAR_HEIGHT as he}from"../../../../platform/window/common/window.js";import{IInstantiationService as Y}from"../../../../platform/instantiation/common/instantiation.js";import{Codicon as l}from"../../../../base/common/codicons.js";import{ThemeIcon as u}from"../../../../base/common/themables.js";import{NativeMenubarControl as ve}from"./menubarControl.js";import{IEditorGroupsService as j}from"../../../services/editor/common/editorGroupsService.js";import{IEditorService as q}from"../../../services/editor/common/editorService.js";import{IKeybindingService as J}from"../../../../platform/keybinding/common/keybinding.js";import{mainWindow as le}from"../../../../base/browser/window.js";let g=class extends ce{constructor(i,o,t,r,n,a,c,d,S,p,C,I,w,T,z,L,R){super(i,o,t,r,n,a,c,d,S,p,C,I,T,z,L,R);this.nativeHostService=w;this.bigSurOrNewer=se(a.os.release)}get minimumHeight(){return G?(this.isCommandCenterVisible?he:this.macTitlebarSize)/(this.preventZoom?y(m(this.element)):1):super.minimumHeight}get maximumHeight(){return this.minimumHeight}bigSurOrNewer;get macTitlebarSize(){return this.bigSurOrNewer?28:22}maxRestoreControl;resizer;cachedWindowControlStyles;cachedWindowControlHeight;onMenubarVisibilityChanged(i){(U||F)&&this.currentMenubarVisibility==="toggle"&&i&&this.dragRegion&&(N(this.dragRegion),setTimeout(()=>A(this.dragRegion),50)),super.onMenubarVisibilityChanged(i)}onConfigurationChanged(i){super.onConfigurationChanged(i),i.affectsConfiguration("window.doubleClickIconToClose")&&this.appIcon&&this.onUpdateAppIconDragBehavior()}onUpdateAppIconDragBehavior(){this.configurationService.getValue("window.doubleClickIconToClose")&&this.appIcon?this.appIcon.style["-webkit-app-region"]="no-drag":this.appIcon&&(this.appIcon.style["-webkit-app-region"]="drag")}installMenubar(){super.installMenubar(),!this.menubar&&this.customMenubar&&this._register(this.customMenubar.onFocusStateChange(i=>this.onMenubarFocusChanged(i)))}onMenubarFocusChanged(i){(U||F)&&this.currentMenubarVisibility!=="compact"&&this.dragRegion&&(i?N(this.dragRegion):A(this.dragRegion))}createContentArea(i){const o=super.createContentArea(i),t=m(i),r=k(t);if((G||H(this.configurationService))&&this._register(this.instantiationService.createInstance(ve)),this.appIcon&&(this.onUpdateAppIconDragBehavior(),this._register(M(this.appIcon,E.DBLCLICK,()=>{this.nativeHostService.closeWindow({targetWindowId:r})}))),F&&!H(this.configurationService)&&!oe()&&this.windowControlsContainer){const n=W(this.windowControlsContainer,x("div.window-icon.window-minimize"+u.asCSSSelector(l.chromeMinimize)));this._register(M(n,E.CLICK,()=>{this.nativeHostService.minimizeWindow({targetWindowId:r})})),this.maxRestoreControl=W(this.windowControlsContainer,x("div.window-icon.window-max-restore")),this._register(M(this.maxRestoreControl,E.CLICK,async()=>await this.nativeHostService.isMaximized({targetWindowId:r})?this.nativeHostService.unmaximizeWindow({targetWindowId:r}):this.nativeHostService.maximizeWindow({targetWindowId:r})));const a=W(this.windowControlsContainer,x("div.window-icon.window-close"+u.asCSSSelector(l.chromeClose)));this._register(M(a,E.CLICK,()=>{this.nativeHostService.closeWindow({targetWindowId:r})})),this.resizer=W(this.rootContainer,x("div.resizer")),this._register(re.runAndSubscribe(this.layoutService.onDidChangeWindowMaximized,({windowId:c,maximized:d})=>{c===r&&this.onDidChangeWindowMaximized(d)},{windowId:r,maximized:this.layoutService.isWindowMaximized(t)}))}return U&&!H(this.configurationService)&&this._register(this.nativeHostService.onDidTriggerWindowSystemContextMenu(({windowId:n,x:a,y:c})=>{if(r!==n)return;const d=y(m(this.element));this.onContextMenu(new MouseEvent("mouseup",{clientX:a/d,clientY:c/d}),ae.TitleBarContext)})),o}onDidChangeWindowMaximized(i){this.maxRestoreControl&&(i?(this.maxRestoreControl.classList.remove(...u.asClassNameArray(l.chromeMaximize)),this.maxRestoreControl.classList.add(...u.asClassNameArray(l.chromeRestore))):(this.maxRestoreControl.classList.remove(...u.asClassNameArray(l.chromeRestore)),this.maxRestoreControl.classList.add(...u.asClassNameArray(l.chromeMaximize)))),this.resizer&&(i?N(this.resizer):A(this.resizer))}updateStyles(){super.updateStyles(),Q(this.configurationService)&&(!this.cachedWindowControlStyles||this.cachedWindowControlStyles.bgColor!==this.element.style.backgroundColor||this.cachedWindowControlStyles.fgColor!==this.element.style.color)&&this.nativeHostService.updateWindowControls({targetWindowId:k(m(this.element)),backgroundColor:this.element.style.backgroundColor,foregroundColor:this.element.style.color})}layout(i,o){if(super.layout(i,o),Q(this.configurationService)||G&&ne&&!H(this.configurationService)){const t=o>0||this.bigSurOrNewer?Math.round(o*y(m(this.element))):this.macTitlebarSize;t!==this.cachedWindowControlHeight&&(this.cachedWindowControlHeight=t,this.nativeHostService.updateWindowControls({targetWindowId:k(m(this.element)),height:t}))}}};g=b([e(3,Z),e(4,K),e(5,D),e(6,Y),e(7,P),e(8,_),e(9,$),e(10,B),e(11,O),e(12,X),e(13,j),e(14,q),e(15,V),e(16,J)],g);let f=class extends g{constructor(s,i,o,t,r,n,a,c,d,S,p,C,I,w){super(me.TITLEBAR_PART,le,"main",s,i,o,t,r,n,a,c,d,S,p,C,I,w)}};f=b([e(0,Z),e(1,K),e(2,D),e(3,Y),e(4,P),e(5,_),e(6,$),e(7,B),e(8,O),e(9,X),e(10,j),e(11,q),e(12,V),e(13,J)],f);let v=class extends g{constructor(i,o,t,r,n,a,c,d,S,p,C,I,w,T,z,L,R){const ee=v.COUNTER++;super(`workbench.parts.auxiliaryTitle.${ee}`,m(i),o,r,n,a,c,d,S,p,C,I,w,T,z,L,R);this.container=i;this.mainTitlebar=t}static COUNTER=1;get height(){return this.minimumHeight}get preventZoom(){return y(m(this.element))<1||!this.mainTitlebar.hasZoomableElements}};v=b([e(3,Z),e(4,K),e(5,D),e(6,Y),e(7,P),e(8,_),e(9,$),e(10,B),e(11,O),e(12,X),e(13,j),e(14,q),e(15,V),e(16,J)],v);class Fe extends de{createMainTitlebarPart(){return this.instantiationService.createInstance(f)}doCreateAuxiliaryTitlebarPart(s,i){return this.instantiationService.createInstance(v,s,i,this.mainPart)}}export{v as AuxiliaryNativeTitlebarPart,f as MainNativeTitlebarPart,Fe as NativeTitleService,g as NativeTitlebarPart};
