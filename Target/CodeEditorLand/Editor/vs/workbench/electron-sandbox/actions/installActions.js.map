{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/electron-sandbox/actions/installActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toErrorMessage } from \"../../../base/common/errorMessage.js\";\nimport { isCancellationError } from \"../../../base/common/errors.js\";\nimport { localize, localize2 } from \"../../../nls.js\";\nimport type { ILocalizedString } from \"../../../platform/action/common/action.js\";\nimport { Action2 } from \"../../../platform/actions/common/actions.js\";\nimport { IDialogService } from \"../../../platform/dialogs/common/dialogs.js\";\nimport type { ServicesAccessor } from \"../../../platform/instantiation/common/instantiation.js\";\nimport { INativeHostService } from \"../../../platform/native/common/native.js\";\nimport product from \"../../../platform/product/common/product.js\";\nimport { IProductService } from \"../../../platform/product/common/productService.js\";\n\nconst shellCommandCategory: ILocalizedString = localize2(\n\t\"shellCommand\",\n\t\"Shell Command\",\n);\n\nexport class InstallShellScriptAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.installCommandLine\",\n\t\t\ttitle: localize2(\n\t\t\t\t\"install\",\n\t\t\t\t\"Install '{0}' command in PATH\",\n\t\t\t\tproduct.applicationName,\n\t\t\t),\n\t\t\tcategory: shellCommandCategory,\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst nativeHostService = accessor.get(INativeHostService);\n\t\tconst dialogService = accessor.get(IDialogService);\n\t\tconst productService = accessor.get(IProductService);\n\n\t\ttry {\n\t\t\tawait nativeHostService.installShellCommand();\n\n\t\t\tdialogService.info(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"successIn\",\n\t\t\t\t\t\"Shell command '{0}' successfully installed in PATH.\",\n\t\t\t\t\tproductService.applicationName,\n\t\t\t\t),\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tif (isCancellationError(error)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdialogService.error(toErrorMessage(error));\n\t\t}\n\t}\n}\n\nexport class UninstallShellScriptAction extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.uninstallCommandLine\",\n\t\t\ttitle: localize2(\n\t\t\t\t\"uninstall\",\n\t\t\t\t\"Uninstall '{0}' command from PATH\",\n\t\t\t\tproduct.applicationName,\n\t\t\t),\n\t\t\tcategory: shellCommandCategory,\n\t\t\tf1: true,\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst nativeHostService = accessor.get(INativeHostService);\n\t\tconst dialogService = accessor.get(IDialogService);\n\t\tconst productService = accessor.get(IProductService);\n\n\t\ttry {\n\t\t\tawait nativeHostService.uninstallShellCommand();\n\n\t\t\tdialogService.info(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"successFrom\",\n\t\t\t\t\t\"Shell command '{0}' successfully uninstalled from PATH.\",\n\t\t\t\t\tproductService.applicationName,\n\t\t\t\t),\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tif (isCancellationError(error)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdialogService.error(toErrorMessage(error));\n\t\t}\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,sBAAsB;AAC/B,SAAS,2BAA2B;AACpC,SAAS,UAAU,iBAAiB;AAEpC,SAAS,eAAe;AACxB,SAAS,sBAAsB;AAE/B,SAAS,0BAA0B;AACnC,OAAO,aAAa;AACpB,SAAS,uBAAuB;AAEhC,MAAM,uBAAyC;AAAA,EAC9C;AAAA,EACA;AACD;AAEO,MAAM,iCAAiC,QAAQ;AAAA,EArBtD,OAqBsD;AAAA;AAAA;AAAA,EACrD,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO;AAAA,QACN;AAAA,QACA;AAAA,QACA,QAAQ;AAAA,MACT;AAAA,MACA,UAAU;AAAA,MACV,IAAI;AAAA,IACL,CAAC;AAAA,EACF;AAAA,EAEA,MAAM,IAAI,UAA2C;AACpD,UAAM,oBAAoB,SAAS,IAAI,kBAAkB;AACzD,UAAM,gBAAgB,SAAS,IAAI,cAAc;AACjD,UAAM,iBAAiB,SAAS,IAAI,eAAe;AAEnD,QAAI;AACH,YAAM,kBAAkB,oBAAoB;AAE5C,oBAAc;AAAA,QACb;AAAA,UACC;AAAA,UACA;AAAA,UACA,eAAe;AAAA,QAChB;AAAA,MACD;AAAA,IACD,SAAS,OAAO;AACf,UAAI,oBAAoB,KAAK,GAAG;AAC/B;AAAA,MACD;AAEA,oBAAc,MAAM,eAAe,KAAK,CAAC;AAAA,IAC1C;AAAA,EACD;AACD;AAEO,MAAM,mCAAmC,QAAQ;AAAA,EA5DxD,OA4DwD;AAAA;AAAA;AAAA,EACvD,cAAc;AACb,UAAM;AAAA,MACL,IAAI;AAAA,MACJ,OAAO;AAAA,QACN;AAAA,QACA;AAAA,QACA,QAAQ;AAAA,MACT;AAAA,MACA,UAAU;AAAA,MACV,IAAI;AAAA,IACL,CAAC;AAAA,EACF;AAAA,EAEA,MAAM,IAAI,UAA2C;AACpD,UAAM,oBAAoB,SAAS,IAAI,kBAAkB;AACzD,UAAM,gBAAgB,SAAS,IAAI,cAAc;AACjD,UAAM,iBAAiB,SAAS,IAAI,eAAe;AAEnD,QAAI;AACH,YAAM,kBAAkB,sBAAsB;AAE9C,oBAAc;AAAA,QACb;AAAA,UACC;AAAA,UACA;AAAA,UACA,eAAe;AAAA,QAChB;AAAA,MACD;AAAA,IACD,SAAS,OAAO;AACf,UAAI,oBAAoB,KAAK,GAAG;AAC/B;AAAA,MACD;AAEA,oBAAc,MAAM,eAAe,KAAK,CAAC;AAAA,IAC1C;AAAA,EACD;AACD;",
  "names": []
}
