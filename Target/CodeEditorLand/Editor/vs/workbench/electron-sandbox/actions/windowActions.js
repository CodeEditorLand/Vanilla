import"./media/actions.css";import{getZoomLevel as M}from"../../../base/browser/browser.js";import{getActiveWindow as S}from"../../../base/browser/dom.js";import{Codicon as N}from"../../../base/common/codicons.js";import{KeyCode as t,KeyMod as n}from"../../../base/common/keyCodes.js";import{isMacintosh as q}from"../../../base/common/platform.js";import{ThemeIcon as E}from"../../../base/common/themables.js";import{URI as P}from"../../../base/common/uri.js";import{ILanguageService as G}from"../../../editor/common/languages/language.js";import{getIconClasses as _}from"../../../editor/common/services/getIconClasses.js";import{IModelService as B}from"../../../editor/common/services/model.js";import{localize as c,localize2 as p}from"../../../nls.js";import{Categories as O}from"../../../platform/action/common/actionCommonCategories.js";import{Action2 as T,MenuId as C}from"../../../platform/actions/common/actions.js";import{IConfigurationService as Z}from"../../../platform/configuration/common/configuration.js";import{FileKind as g}from"../../../platform/files/common/files.js";import{IKeybindingService as Y}from"../../../platform/keybinding/common/keybinding.js";import{KeybindingWeight as v}from"../../../platform/keybinding/common/keybindingsRegistry.js";import{INativeHostService as m}from"../../../platform/native/common/native.js";import{IQuickInputService as j}from"../../../platform/quickinput/common/quickInput.js";import{isOpenedAuxiliaryWindow as U}from"../../../platform/window/common/window.js";import{ApplyZoomTarget as h,MAX_ZOOM_LEVEL as X,MIN_ZOOM_LEVEL as J,applyZoom as $}from"../../../platform/window/electron-sandbox/window.js";import{isSingleFolderWorkspaceIdentifier as H,isWorkspaceIdentifier as K}from"../../../platform/workspace/common/workspace.js";class Q extends T{static ID="workbench.action.closeWindow";constructor(){super({id:Q.ID,title:{...p("closeWindow","Close Window"),mnemonicTitle:c({key:"miCloseWindow",comment:["&& denotes a mnemonic"]},"Clos&&e Window")},f1:!0,keybinding:{weight:v.WorkbenchContrib,mac:{primary:n.CtrlCmd|n.Shift|t.KeyW},linux:{primary:n.Alt|t.F4,secondary:[n.CtrlCmd|n.Shift|t.KeyW]},win:{primary:n.Alt|t.F4,secondary:[n.CtrlCmd|n.Shift|t.KeyW]}},menu:{id:C.MenubarFileMenu,group:"6_close",order:4}})}async run(o){return o.get(m).closeWindow({targetWindowId:S().vscodeWindowId})}}class l extends T{static ZOOM_LEVEL_SETTING_KEY="window.zoomLevel";static ZOOM_PER_WINDOW_SETTING_KEY="window.zoomPerWindow";constructor(o){super(o)}async setZoomLevel(o,I){const W=o.get(Z);let s;W.getValue(l.ZOOM_PER_WINDOW_SETTING_KEY)!==!1?s=h.ACTIVE_WINDOW:s=h.ALL_WINDOWS;let d;if(typeof I=="number")d=Math.round(I);else if(s===h.ALL_WINDOWS)d=0;else{const w=W.getValue(l.ZOOM_LEVEL_SETTING_KEY);typeof w=="number"?d=w:d=0}d>X||d<J||(s===h.ALL_WINDOWS&&await W.updateValue(l.ZOOM_LEVEL_SETTING_KEY,d),$(d,s))}}class Se extends l{constructor(){super({id:"workbench.action.zoomIn",title:{...p("zoomIn","Zoom In"),mnemonicTitle:c({key:"miZoomIn",comment:["&& denotes a mnemonic"]},"&&Zoom In")},category:O.View,f1:!0,keybinding:{weight:v.WorkbenchContrib,primary:n.CtrlCmd|t.Equal,secondary:[n.CtrlCmd|n.Shift|t.Equal,n.CtrlCmd|t.NumpadAdd]},menu:{id:C.MenubarAppearanceMenu,group:"5_zoom",order:1}})}run(o){return super.setZoomLevel(o,M(S())+1)}}class Ce extends l{constructor(){super({id:"workbench.action.zoomOut",title:{...p("zoomOut","Zoom Out"),mnemonicTitle:c({key:"miZoomOut",comment:["&& denotes a mnemonic"]},"&&Zoom Out")},category:O.View,f1:!0,keybinding:{weight:v.WorkbenchContrib,primary:n.CtrlCmd|t.Minus,secondary:[n.CtrlCmd|n.Shift|t.Minus,n.CtrlCmd|t.NumpadSubtract],linux:{primary:n.CtrlCmd|t.Minus,secondary:[n.CtrlCmd|t.NumpadSubtract]}},menu:{id:C.MenubarAppearanceMenu,group:"5_zoom",order:2}})}run(o){return super.setZoomLevel(o,M(S())-1)}}class he extends l{constructor(){super({id:"workbench.action.zoomReset",title:{...p("zoomReset","Reset Zoom"),mnemonicTitle:c({key:"miZoomReset",comment:["&& denotes a mnemonic"]},"&&Reset Zoom")},category:O.View,f1:!0,keybinding:{weight:v.WorkbenchContrib,primary:n.CtrlCmd|t.Numpad0},menu:{id:C.MenubarAppearanceMenu,group:"5_zoom",order:3}})}run(o){return super.setZoomLevel(o,!0)}}class D extends T{closeWindowAction={iconClass:E.asClassName(N.removeClose),tooltip:c("close","Close Window")};closeDirtyWindowAction={iconClass:"dirty-window "+E.asClassName(N.closeDirty),tooltip:c("close","Close Window"),alwaysVisible:!0};constructor(o){super(o)}async run(o){const I=o.get(j),W=o.get(Y),s=o.get(B),d=o.get(G),w=o.get(m),k=S().vscodeWindowId,z=await w.getWindows({includeAuxiliaryWindows:!0}),x=new Set,b=new Map;for(const e of z)if(U(e)){let r=b.get(e.parentId);r||(r=new Set,b.set(e.parentId,r)),r.add(e)}else x.add(e);function A(e){return typeof e?.windowId=="number"}const a=[];for(const e of x){const r=b.get(e.id);b.size>0&&a.push({type:"separator",label:r?c("windowGroup","window group"):void 0});const u=e.filename?P.file(e.filename):H(e.workspace)?e.workspace.uri:K(e.workspace)?e.workspace.configPath:void 0,R=e.filename?g.FILE:H(e.workspace)?g.FOLDER:K(e.workspace)?g.ROOT_FOLDER:g.FILE,V={windowId:e.id,label:e.title,ariaLabel:e.dirty?c("windowDirtyAriaLabel","{0}, window with unsaved changes",e.title):e.title,iconClasses:_(s,d,u,R),description:k===e.id?c("current","Current Window"):void 0,buttons:k!==e.id?e.dirty?[this.closeDirtyWindowAction]:[this.closeWindowAction]:void 0};if(a.push(V),r)for(const y of r){const F={windowId:y.id,label:y.title,iconClasses:_(s,d,y.filename?P.file(y.filename):void 0,g.FILE),description:k===y.id?c("current","Current Window"):void 0,buttons:[this.closeWindowAction]};a.push(F)}}const L=await I.pick(a,{contextKey:"inWindowsPicker",activeItem:(()=>{for(let e=0;e<a.length;e++){const r=a[e];if(A(r)&&r.windowId===k){let u=a[e+1];if(A(u)||(u=a[e+2],A(u)))return u}}})(),placeHolder:c("switchWindowPlaceHolder","Select a window to switch to"),quickNavigate:this.isQuickNavigate()?{keybindings:W.lookupKeybindings(this.desc.id)}:void 0,hideInput:this.isQuickNavigate(),onDidTriggerItemButton:async e=>{await w.closeWindow({targetWindowId:e.item.windowId}),e.removeItem()}});L&&w.focusWindow({targetWindowId:L.windowId})}}class Ae extends D{constructor(){super({id:"workbench.action.switchWindow",title:p("switchWindow","Switch Window..."),f1:!0,keybinding:{weight:v.WorkbenchContrib,primary:0,mac:{primary:n.WinCtrl|t.KeyW}}})}isQuickNavigate(){return!1}}class Oe extends D{constructor(){super({id:"workbench.action.quickSwitchWindow",title:p("quickSwitchWindow","Quick Switch Window..."),f1:!1})}isQuickNavigate(){return!0}}function f(i){return q?i.get(Z).getValue("window.nativeTabs")===!0:!1}const Te=i=>{if(f(i))return i.get(m).newWindowTab()},xe=i=>{if(f(i))return i.get(m).showPreviousWindowTab()},Le=i=>{if(f(i))return i.get(m).showNextWindowTab()},Me=i=>{if(f(i))return i.get(m).moveWindowTabToNewWindow()},Ne=i=>{if(f(i))return i.get(m).mergeAllWindowTabs()},Ee=i=>{if(f(i))return i.get(m).toggleWindowTabsBar()};export{Q as CloseWindowAction,Ne as MergeWindowTabsHandlerHandler,Me as MoveWindowTabToNewWindowHandler,Te as NewWindowTabHandler,Oe as QuickSwitchWindowAction,Le as ShowNextWindowTabHandler,xe as ShowPreviousWindowTabHandler,Ae as SwitchWindowAction,Ee as ToggleWindowTabsBarHandler,Se as ZoomInAction,Ce as ZoomOutAction,he as ZoomResetAction};
