{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/electron-sandbox/actions/windowActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './media/actions.css';\nimport { URI } from '../../../base/common/uri.js';\nimport { localize, localize2 } from '../../../nls.js';\nimport { ApplyZoomTarget, MAX_ZOOM_LEVEL, MIN_ZOOM_LEVEL, applyZoom } from '../../../platform/window/electron-sandbox/window.js';\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\nimport { getZoomLevel } from '../../../base/browser/browser.js';\nimport { FileKind } from '../../../platform/files/common/files.js';\nimport { IModelService } from '../../../editor/common/services/model.js';\nimport { ILanguageService } from '../../../editor/common/languages/language.js';\nimport { IQuickInputService, IQuickInputButton, IQuickPickItem, QuickPickInput } from '../../../platform/quickinput/common/quickInput.js';\nimport { getIconClasses } from '../../../editor/common/services/getIconClasses.js';\nimport { ICommandHandler } from '../../../platform/commands/common/commands.js';\nimport { ServicesAccessor } from '../../../platform/instantiation/common/instantiation.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { INativeHostService } from '../../../platform/native/common/native.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { isSingleFolderWorkspaceIdentifier, isWorkspaceIdentifier } from '../../../platform/workspace/common/workspace.js';\nimport { Action2, IAction2Options, MenuId } from '../../../platform/actions/common/actions.js';\nimport { Categories } from '../../../platform/action/common/actionCommonCategories.js';\nimport { KeyCode, KeyMod } from '../../../base/common/keyCodes.js';\nimport { KeybindingWeight } from '../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { isMacintosh } from '../../../base/common/platform.js';\nimport { getActiveWindow } from '../../../base/browser/dom.js';\nimport { IOpenedAuxiliaryWindow, IOpenedMainWindow, isOpenedAuxiliaryWindow } from '../../../platform/window/common/window.js';\n\nexport class CloseWindowAction extends Action2 {\n\n\tstatic readonly ID = 'workbench.action.closeWindow';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: CloseWindowAction.ID,\n\t\t\ttitle: {\n\t\t\t\t...localize2('closeWindow', \"Close Window\"),\n\t\t\t\tmnemonicTitle: localize({ key: 'miCloseWindow', comment: ['&& denotes a mnemonic'] }, \"Clos&&e Window\"),\n\t\t\t},\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyW },\n\t\t\t\tlinux: { primary: KeyMod.Alt | KeyCode.F4, secondary: [KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyW] },\n\t\t\t\twin: { primary: KeyMod.Alt | KeyCode.F4, secondary: [KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyW] }\n\t\t\t},\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.MenubarFileMenu,\n\t\t\t\tgroup: '6_close',\n\t\t\t\torder: 4\n\t\t\t}\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst nativeHostService = accessor.get(INativeHostService);\n\n\t\treturn nativeHostService.closeWindow({ targetWindowId: getActiveWindow().vscodeWindowId });\n\t}\n}\n\nabstract class BaseZoomAction extends Action2 {\n\n\tprivate static readonly ZOOM_LEVEL_SETTING_KEY = 'window.zoomLevel';\n\tprivate static readonly ZOOM_PER_WINDOW_SETTING_KEY = 'window.zoomPerWindow';\n\n\tconstructor(desc: Readonly<IAction2Options>) {\n\t\tsuper(desc);\n\t}\n\n\tprotected async setZoomLevel(accessor: ServicesAccessor, levelOrReset: number | true): Promise<void> {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\tlet target: ApplyZoomTarget;\n\t\tif (configurationService.getValue(BaseZoomAction.ZOOM_PER_WINDOW_SETTING_KEY) !== false) {\n\t\t\ttarget = ApplyZoomTarget.ACTIVE_WINDOW;\n\t\t} else {\n\t\t\ttarget = ApplyZoomTarget.ALL_WINDOWS;\n\t\t}\n\n\t\tlet level: number;\n\t\tif (typeof levelOrReset === 'number') {\n\t\t\tlevel = Math.round(levelOrReset); // prevent fractional zoom levels\n\t\t} else {\n\n\t\t\t// reset to 0 when we apply to all windows\n\t\t\tif (target === ApplyZoomTarget.ALL_WINDOWS) {\n\t\t\t\tlevel = 0;\n\t\t\t}\n\n\t\t\t// otherwise, reset to the default zoom level\n\t\t\telse {\n\t\t\t\tconst defaultLevel = configurationService.getValue(BaseZoomAction.ZOOM_LEVEL_SETTING_KEY);\n\t\t\t\tif (typeof defaultLevel === 'number') {\n\t\t\t\t\tlevel = defaultLevel;\n\t\t\t\t} else {\n\t\t\t\t\tlevel = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (level > MAX_ZOOM_LEVEL || level < MIN_ZOOM_LEVEL) {\n\t\t\treturn; // https://github.com/microsoft/vscode/issues/48357\n\t\t}\n\n\t\tif (target === ApplyZoomTarget.ALL_WINDOWS) {\n\t\t\tawait configurationService.updateValue(BaseZoomAction.ZOOM_LEVEL_SETTING_KEY, level);\n\t\t}\n\n\t\tapplyZoom(level, target);\n\t}\n}\n\nexport class ZoomInAction extends BaseZoomAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.zoomIn',\n\t\t\ttitle: {\n\t\t\t\t...localize2('zoomIn', \"Zoom In\"),\n\t\t\t\tmnemonicTitle: localize({ key: 'miZoomIn', comment: ['&& denotes a mnemonic'] }, \"&&Zoom In\"),\n\t\t\t},\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Equal,\n\t\t\t\tsecondary: [KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Equal, KeyMod.CtrlCmd | KeyCode.NumpadAdd]\n\t\t\t},\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.MenubarAppearanceMenu,\n\t\t\t\tgroup: '5_zoom',\n\t\t\t\torder: 1\n\t\t\t}\n\t\t});\n\t}\n\n\toverride run(accessor: ServicesAccessor): Promise<void> {\n\t\treturn super.setZoomLevel(accessor, getZoomLevel(getActiveWindow()) + 1);\n\t}\n}\n\nexport class ZoomOutAction extends BaseZoomAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.zoomOut',\n\t\t\ttitle: {\n\t\t\t\t...localize2('zoomOut', \"Zoom Out\"),\n\t\t\t\tmnemonicTitle: localize({ key: 'miZoomOut', comment: ['&& denotes a mnemonic'] }, \"&&Zoom Out\"),\n\t\t\t},\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Minus,\n\t\t\t\tsecondary: [KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Minus, KeyMod.CtrlCmd | KeyCode.NumpadSubtract],\n\t\t\t\tlinux: {\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Minus,\n\t\t\t\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.NumpadSubtract]\n\t\t\t\t}\n\t\t\t},\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.MenubarAppearanceMenu,\n\t\t\t\tgroup: '5_zoom',\n\t\t\t\torder: 2\n\t\t\t}\n\t\t});\n\t}\n\n\toverride run(accessor: ServicesAccessor): Promise<void> {\n\t\treturn super.setZoomLevel(accessor, getZoomLevel(getActiveWindow()) - 1);\n\t}\n}\n\nexport class ZoomResetAction extends BaseZoomAction {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.zoomReset',\n\t\t\ttitle: {\n\t\t\t\t...localize2('zoomReset', \"Reset Zoom\"),\n\t\t\t\tmnemonicTitle: localize({ key: 'miZoomReset', comment: ['&& denotes a mnemonic'] }, \"&&Reset Zoom\"),\n\t\t\t},\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Numpad0\n\t\t\t},\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.MenubarAppearanceMenu,\n\t\t\t\tgroup: '5_zoom',\n\t\t\t\torder: 3\n\t\t\t}\n\t\t});\n\t}\n\n\toverride run(accessor: ServicesAccessor): Promise<void> {\n\t\treturn super.setZoomLevel(accessor, true);\n\t}\n}\n\nabstract class BaseSwitchWindow extends Action2 {\n\n\tprivate readonly closeWindowAction: IQuickInputButton = {\n\t\ticonClass: ThemeIcon.asClassName(Codicon.removeClose),\n\t\ttooltip: localize('close', \"Close Window\")\n\t};\n\n\tprivate readonly closeDirtyWindowAction: IQuickInputButton = {\n\t\ticonClass: 'dirty-window ' + ThemeIcon.asClassName(Codicon.closeDirty),\n\t\ttooltip: localize('close', \"Close Window\"),\n\t\talwaysVisible: true\n\t};\n\n\tconstructor(desc: Readonly<IAction2Options>) {\n\t\tsuper(desc);\n\t}\n\n\tprotected abstract isQuickNavigate(): boolean;\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst keybindingService = accessor.get(IKeybindingService);\n\t\tconst modelService = accessor.get(IModelService);\n\t\tconst languageService = accessor.get(ILanguageService);\n\t\tconst nativeHostService = accessor.get(INativeHostService);\n\n\t\tconst currentWindowId = getActiveWindow().vscodeWindowId;\n\n\t\tconst windows = await nativeHostService.getWindows({ includeAuxiliaryWindows: true });\n\n\t\tconst mainWindows = new Set<IOpenedMainWindow>();\n\t\tconst mapMainWindowToAuxiliaryWindows = new Map<number, Set<IOpenedAuxiliaryWindow>>();\n\t\tfor (const window of windows) {\n\t\t\tif (isOpenedAuxiliaryWindow(window)) {\n\t\t\t\tlet auxiliaryWindows = mapMainWindowToAuxiliaryWindows.get(window.parentId);\n\t\t\t\tif (!auxiliaryWindows) {\n\t\t\t\t\tauxiliaryWindows = new Set<IOpenedAuxiliaryWindow>();\n\t\t\t\t\tmapMainWindowToAuxiliaryWindows.set(window.parentId, auxiliaryWindows);\n\t\t\t\t}\n\t\t\t\tauxiliaryWindows.add(window);\n\t\t\t} else {\n\t\t\t\tmainWindows.add(window);\n\t\t\t}\n\t\t}\n\n\t\tinterface IWindowPickItem extends IQuickPickItem {\n\t\t\treadonly windowId: number;\n\t\t}\n\n\t\tfunction isWindowPickItem(candidate: unknown): candidate is IWindowPickItem {\n\t\t\tconst windowPickItem = candidate as IWindowPickItem | undefined;\n\n\t\t\treturn typeof windowPickItem?.windowId === 'number';\n\t\t}\n\n\t\tconst picks: Array<QuickPickInput<IWindowPickItem>> = [];\n\t\tfor (const window of mainWindows) {\n\t\t\tconst auxiliaryWindows = mapMainWindowToAuxiliaryWindows.get(window.id);\n\t\t\tif (mapMainWindowToAuxiliaryWindows.size > 0) {\n\t\t\t\tpicks.push({ type: 'separator', label: auxiliaryWindows ? localize('windowGroup', \"window group\") : undefined });\n\t\t\t}\n\n\t\t\tconst resource = window.filename ? URI.file(window.filename) : isSingleFolderWorkspaceIdentifier(window.workspace) ? window.workspace.uri : isWorkspaceIdentifier(window.workspace) ? window.workspace.configPath : undefined;\n\t\t\tconst fileKind = window.filename ? FileKind.FILE : isSingleFolderWorkspaceIdentifier(window.workspace) ? FileKind.FOLDER : isWorkspaceIdentifier(window.workspace) ? FileKind.ROOT_FOLDER : FileKind.FILE;\n\t\t\tconst pick: IWindowPickItem = {\n\t\t\t\twindowId: window.id,\n\t\t\t\tlabel: window.title,\n\t\t\t\tariaLabel: window.dirty ? localize('windowDirtyAriaLabel', \"{0}, window with unsaved changes\", window.title) : window.title,\n\t\t\t\ticonClasses: getIconClasses(modelService, languageService, resource, fileKind),\n\t\t\t\tdescription: (currentWindowId === window.id) ? localize('current', \"Current Window\") : undefined,\n\t\t\t\tbuttons: currentWindowId !== window.id ? window.dirty ? [this.closeDirtyWindowAction] : [this.closeWindowAction] : undefined\n\t\t\t};\n\t\t\tpicks.push(pick);\n\n\t\t\tif (auxiliaryWindows) {\n\t\t\t\tfor (const auxiliaryWindow of auxiliaryWindows) {\n\t\t\t\t\tconst pick: IWindowPickItem = {\n\t\t\t\t\t\twindowId: auxiliaryWindow.id,\n\t\t\t\t\t\tlabel: auxiliaryWindow.title,\n\t\t\t\t\t\ticonClasses: getIconClasses(modelService, languageService, auxiliaryWindow.filename ? URI.file(auxiliaryWindow.filename) : undefined, FileKind.FILE),\n\t\t\t\t\t\tdescription: (currentWindowId === auxiliaryWindow.id) ? localize('current', \"Current Window\") : undefined,\n\t\t\t\t\t\tbuttons: [this.closeWindowAction]\n\t\t\t\t\t};\n\t\t\t\t\tpicks.push(pick);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst pick = await quickInputService.pick(picks, {\n\t\t\tcontextKey: 'inWindowsPicker',\n\t\t\tactiveItem: (() => {\n\t\t\t\tfor (let i = 0; i < picks.length; i++) {\n\t\t\t\t\tconst pick = picks[i];\n\t\t\t\t\tif (isWindowPickItem(pick) && pick.windowId === currentWindowId) {\n\t\t\t\t\t\tlet nextPick = picks[i + 1]; // try to select next window unless it's a separator\n\t\t\t\t\t\tif (isWindowPickItem(nextPick)) {\n\t\t\t\t\t\t\treturn nextPick;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextPick = picks[i + 2]; // otherwise try to select the next window after the separator\n\t\t\t\t\t\tif (isWindowPickItem(nextPick)) {\n\t\t\t\t\t\t\treturn nextPick;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn undefined;\n\t\t\t})(),\n\t\t\tplaceHolder: localize('switchWindowPlaceHolder', \"Select a window to switch to\"),\n\t\t\tquickNavigate: this.isQuickNavigate() ? { keybindings: keybindingService.lookupKeybindings(this.desc.id) } : undefined,\n\t\t\thideInput: this.isQuickNavigate(),\n\t\t\tonDidTriggerItemButton: async context => {\n\t\t\t\tawait nativeHostService.closeWindow({ targetWindowId: context.item.windowId });\n\t\t\t\tcontext.removeItem();\n\t\t\t}\n\t\t});\n\n\t\tif (pick) {\n\t\t\tnativeHostService.focusWindow({ targetWindowId: pick.windowId });\n\t\t}\n\t}\n}\n\nexport class SwitchWindowAction extends BaseSwitchWindow {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.switchWindow',\n\t\t\ttitle: localize2('switchWindow', 'Switch Window...'),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: 0,\n\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyCode.KeyW }\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected isQuickNavigate(): boolean {\n\t\treturn false;\n\t}\n}\n\nexport class QuickSwitchWindowAction extends BaseSwitchWindow {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.quickSwitchWindow',\n\t\t\ttitle: localize2('quickSwitchWindow', 'Quick Switch Window...'),\n\t\t\tf1: false // hide quick pickers from command palette to not confuse with the other entry that shows a input field\n\t\t});\n\t}\n\n\tprotected isQuickNavigate(): boolean {\n\t\treturn true;\n\t}\n}\n\nfunction canRunNativeTabsHandler(accessor: ServicesAccessor): boolean {\n\tif (!isMacintosh) {\n\t\treturn false;\n\t}\n\n\tconst configurationService = accessor.get(IConfigurationService);\n\treturn configurationService.getValue<unknown>('window.nativeTabs') === true;\n}\n\nexport const NewWindowTabHandler: ICommandHandler = function (accessor: ServicesAccessor) {\n\tif (!canRunNativeTabsHandler(accessor)) {\n\t\treturn;\n\t}\n\n\treturn accessor.get(INativeHostService).newWindowTab();\n};\n\nexport const ShowPreviousWindowTabHandler: ICommandHandler = function (accessor: ServicesAccessor) {\n\tif (!canRunNativeTabsHandler(accessor)) {\n\t\treturn;\n\t}\n\n\treturn accessor.get(INativeHostService).showPreviousWindowTab();\n};\n\nexport const ShowNextWindowTabHandler: ICommandHandler = function (accessor: ServicesAccessor) {\n\tif (!canRunNativeTabsHandler(accessor)) {\n\t\treturn;\n\t}\n\n\treturn accessor.get(INativeHostService).showNextWindowTab();\n};\n\nexport const MoveWindowTabToNewWindowHandler: ICommandHandler = function (accessor: ServicesAccessor) {\n\tif (!canRunNativeTabsHandler(accessor)) {\n\t\treturn;\n\t}\n\n\treturn accessor.get(INativeHostService).moveWindowTabToNewWindow();\n};\n\nexport const MergeWindowTabsHandlerHandler: ICommandHandler = function (accessor: ServicesAccessor) {\n\tif (!canRunNativeTabsHandler(accessor)) {\n\t\treturn;\n\t}\n\n\treturn accessor.get(INativeHostService).mergeAllWindowTabs();\n};\n\nexport const ToggleWindowTabsBarHandler: ICommandHandler = function (accessor: ServicesAccessor) {\n\tif (!canRunNativeTabsHandler(accessor)) {\n\t\treturn;\n\t}\n\n\treturn accessor.get(INativeHostService).toggleWindowTabsBar();\n};\n"],
  "mappings": "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",
  "names": ["pick"]
}
