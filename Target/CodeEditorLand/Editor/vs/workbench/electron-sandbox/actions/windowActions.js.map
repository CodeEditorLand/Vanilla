{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/electron-sandbox/actions/windowActions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./media/actions.css\";\nimport { getZoomLevel } from \"../../../base/browser/browser.js\";\nimport { getActiveWindow } from \"../../../base/browser/dom.js\";\nimport { Codicon } from \"../../../base/common/codicons.js\";\nimport { KeyCode, KeyMod } from \"../../../base/common/keyCodes.js\";\nimport { isMacintosh } from \"../../../base/common/platform.js\";\nimport { ThemeIcon } from \"../../../base/common/themables.js\";\nimport { URI } from \"../../../base/common/uri.js\";\nimport { ILanguageService } from \"../../../editor/common/languages/language.js\";\nimport { getIconClasses } from \"../../../editor/common/services/getIconClasses.js\";\nimport { IModelService } from \"../../../editor/common/services/model.js\";\nimport { localize, localize2 } from \"../../../nls.js\";\nimport { Categories } from \"../../../platform/action/common/actionCommonCategories.js\";\nimport {\n\tAction2,\n\ttype IAction2Options,\n\tMenuId,\n} from \"../../../platform/actions/common/actions.js\";\nimport type { ICommandHandler } from \"../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../platform/configuration/common/configuration.js\";\nimport { FileKind } from \"../../../platform/files/common/files.js\";\nimport type { ServicesAccessor } from \"../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../platform/keybinding/common/keybinding.js\";\nimport { KeybindingWeight } from \"../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport { INativeHostService } from \"../../../platform/native/common/native.js\";\nimport {\n\ttype IQuickInputButton,\n\tIQuickInputService,\n\ttype IQuickPickItem,\n\ttype QuickPickInput,\n} from \"../../../platform/quickinput/common/quickInput.js\";\nimport {\n\ttype IOpenedAuxiliaryWindow,\n\ttype IOpenedMainWindow,\n\tisOpenedAuxiliaryWindow,\n} from \"../../../platform/window/common/window.js\";\nimport {\n\tApplyZoomTarget,\n\tMAX_ZOOM_LEVEL,\n\tMIN_ZOOM_LEVEL,\n\tapplyZoom,\n} from \"../../../platform/window/electron-sandbox/window.js\";\nimport {\n\tisSingleFolderWorkspaceIdentifier,\n\tisWorkspaceIdentifier,\n} from \"../../../platform/workspace/common/workspace.js\";\n\nexport class CloseWindowAction extends Action2 {\n\tstatic readonly ID = \"workbench.action.closeWindow\";\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: CloseWindowAction.ID,\n\t\t\ttitle: {\n\t\t\t\t...localize2(\"closeWindow\", \"Close Window\"),\n\t\t\t\tmnemonicTitle: localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"miCloseWindow\",\n\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t},\n\t\t\t\t\t\"Clos&&e Window\",\n\t\t\t\t),\n\t\t\t},\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyW },\n\t\t\t\tlinux: {\n\t\t\t\t\tprimary: KeyMod.Alt | KeyCode.F4,\n\t\t\t\t\tsecondary: [KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyW],\n\t\t\t\t},\n\t\t\t\twin: {\n\t\t\t\t\tprimary: KeyMod.Alt | KeyCode.F4,\n\t\t\t\t\tsecondary: [KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyW],\n\t\t\t\t},\n\t\t\t},\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.MenubarFileMenu,\n\t\t\t\tgroup: \"6_close\",\n\t\t\t\torder: 4,\n\t\t\t},\n\t\t});\n\t}\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst nativeHostService = accessor.get(INativeHostService);\n\n\t\treturn nativeHostService.closeWindow({\n\t\t\ttargetWindowId: getActiveWindow().vscodeWindowId,\n\t\t});\n\t}\n}\n\nabstract class BaseZoomAction extends Action2 {\n\tprivate static readonly ZOOM_LEVEL_SETTING_KEY = \"window.zoomLevel\";\n\tprivate static readonly ZOOM_PER_WINDOW_SETTING_KEY =\n\t\t\"window.zoomPerWindow\";\n\n\tconstructor(desc: Readonly<IAction2Options>) {\n\t\tsuper(desc);\n\t}\n\n\tprotected async setZoomLevel(\n\t\taccessor: ServicesAccessor,\n\t\tlevelOrReset: number | true,\n\t): Promise<void> {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\n\t\tlet target: ApplyZoomTarget;\n\t\tif (\n\t\t\tconfigurationService.getValue(\n\t\t\t\tBaseZoomAction.ZOOM_PER_WINDOW_SETTING_KEY,\n\t\t\t) !== false\n\t\t) {\n\t\t\ttarget = ApplyZoomTarget.ACTIVE_WINDOW;\n\t\t} else {\n\t\t\ttarget = ApplyZoomTarget.ALL_WINDOWS;\n\t\t}\n\n\t\tlet level: number;\n\t\tif (typeof levelOrReset === \"number\") {\n\t\t\tlevel = Math.round(levelOrReset); // prevent fractional zoom levels\n\t\t} else {\n\t\t\t// reset to 0 when we apply to all windows\n\t\t\tif (target === ApplyZoomTarget.ALL_WINDOWS) {\n\t\t\t\tlevel = 0;\n\t\t\t}\n\n\t\t\t// otherwise, reset to the default zoom level\n\t\t\telse {\n\t\t\t\tconst defaultLevel = configurationService.getValue(\n\t\t\t\t\tBaseZoomAction.ZOOM_LEVEL_SETTING_KEY,\n\t\t\t\t);\n\t\t\t\tif (typeof defaultLevel === \"number\") {\n\t\t\t\t\tlevel = defaultLevel;\n\t\t\t\t} else {\n\t\t\t\t\tlevel = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (level > MAX_ZOOM_LEVEL || level < MIN_ZOOM_LEVEL) {\n\t\t\treturn; // https://github.com/microsoft/vscode/issues/48357\n\t\t}\n\n\t\tif (target === ApplyZoomTarget.ALL_WINDOWS) {\n\t\t\tawait configurationService.updateValue(\n\t\t\t\tBaseZoomAction.ZOOM_LEVEL_SETTING_KEY,\n\t\t\t\tlevel,\n\t\t\t);\n\t\t}\n\n\t\tapplyZoom(level, target);\n\t}\n}\n\nexport class ZoomInAction extends BaseZoomAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.zoomIn\",\n\t\t\ttitle: {\n\t\t\t\t...localize2(\"zoomIn\", \"Zoom In\"),\n\t\t\t\tmnemonicTitle: localize(\n\t\t\t\t\t{ key: \"miZoomIn\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\t\"&&Zoom In\",\n\t\t\t\t),\n\t\t\t},\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Equal,\n\t\t\t\tsecondary: [\n\t\t\t\t\tKeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Equal,\n\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.NumpadAdd,\n\t\t\t\t],\n\t\t\t},\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.MenubarAppearanceMenu,\n\t\t\t\tgroup: \"5_zoom\",\n\t\t\t\torder: 1,\n\t\t\t},\n\t\t});\n\t}\n\n\toverride run(accessor: ServicesAccessor): Promise<void> {\n\t\treturn super.setZoomLevel(\n\t\t\taccessor,\n\t\t\tgetZoomLevel(getActiveWindow()) + 1,\n\t\t);\n\t}\n}\n\nexport class ZoomOutAction extends BaseZoomAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.zoomOut\",\n\t\t\ttitle: {\n\t\t\t\t...localize2(\"zoomOut\", \"Zoom Out\"),\n\t\t\t\tmnemonicTitle: localize(\n\t\t\t\t\t{ key: \"miZoomOut\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\t\"&&Zoom Out\",\n\t\t\t\t),\n\t\t\t},\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Minus,\n\t\t\t\tsecondary: [\n\t\t\t\t\tKeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Minus,\n\t\t\t\t\tKeyMod.CtrlCmd | KeyCode.NumpadSubtract,\n\t\t\t\t],\n\t\t\t\tlinux: {\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Minus,\n\t\t\t\t\tsecondary: [KeyMod.CtrlCmd | KeyCode.NumpadSubtract],\n\t\t\t\t},\n\t\t\t},\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.MenubarAppearanceMenu,\n\t\t\t\tgroup: \"5_zoom\",\n\t\t\t\torder: 2,\n\t\t\t},\n\t\t});\n\t}\n\n\toverride run(accessor: ServicesAccessor): Promise<void> {\n\t\treturn super.setZoomLevel(\n\t\t\taccessor,\n\t\t\tgetZoomLevel(getActiveWindow()) - 1,\n\t\t);\n\t}\n}\n\nexport class ZoomResetAction extends BaseZoomAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.zoomReset\",\n\t\t\ttitle: {\n\t\t\t\t...localize2(\"zoomReset\", \"Reset Zoom\"),\n\t\t\t\tmnemonicTitle: localize(\n\t\t\t\t\t{ key: \"miZoomReset\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\t\"&&Reset Zoom\",\n\t\t\t\t),\n\t\t\t},\n\t\t\tcategory: Categories.View,\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Numpad0,\n\t\t\t},\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.MenubarAppearanceMenu,\n\t\t\t\tgroup: \"5_zoom\",\n\t\t\t\torder: 3,\n\t\t\t},\n\t\t});\n\t}\n\n\toverride run(accessor: ServicesAccessor): Promise<void> {\n\t\treturn super.setZoomLevel(accessor, true);\n\t}\n}\n\nabstract class BaseSwitchWindow extends Action2 {\n\tprivate readonly closeWindowAction: IQuickInputButton = {\n\t\ticonClass: ThemeIcon.asClassName(Codicon.removeClose),\n\t\ttooltip: localize(\"close\", \"Close Window\"),\n\t};\n\n\tprivate readonly closeDirtyWindowAction: IQuickInputButton = {\n\t\ticonClass: \"dirty-window \" + ThemeIcon.asClassName(Codicon.closeDirty),\n\t\ttooltip: localize(\"close\", \"Close Window\"),\n\t\talwaysVisible: true,\n\t};\n\n\tconstructor(desc: Readonly<IAction2Options>) {\n\t\tsuper(desc);\n\t}\n\n\tprotected abstract isQuickNavigate(): boolean;\n\n\toverride async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst keybindingService = accessor.get(IKeybindingService);\n\t\tconst modelService = accessor.get(IModelService);\n\t\tconst languageService = accessor.get(ILanguageService);\n\t\tconst nativeHostService = accessor.get(INativeHostService);\n\n\t\tconst currentWindowId = getActiveWindow().vscodeWindowId;\n\n\t\tconst windows = await nativeHostService.getWindows({\n\t\t\tincludeAuxiliaryWindows: true,\n\t\t});\n\n\t\tconst mainWindows = new Set<IOpenedMainWindow>();\n\t\tconst mapMainWindowToAuxiliaryWindows = new Map<\n\t\t\tnumber,\n\t\t\tSet<IOpenedAuxiliaryWindow>\n\t\t>();\n\t\tfor (const window of windows) {\n\t\t\tif (isOpenedAuxiliaryWindow(window)) {\n\t\t\t\tlet auxiliaryWindows = mapMainWindowToAuxiliaryWindows.get(\n\t\t\t\t\twindow.parentId,\n\t\t\t\t);\n\t\t\t\tif (!auxiliaryWindows) {\n\t\t\t\t\tauxiliaryWindows = new Set<IOpenedAuxiliaryWindow>();\n\t\t\t\t\tmapMainWindowToAuxiliaryWindows.set(\n\t\t\t\t\t\twindow.parentId,\n\t\t\t\t\t\tauxiliaryWindows,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tauxiliaryWindows.add(window);\n\t\t\t} else {\n\t\t\t\tmainWindows.add(window);\n\t\t\t}\n\t\t}\n\n\t\tinterface IWindowPickItem extends IQuickPickItem {\n\t\t\treadonly windowId: number;\n\t\t}\n\n\t\tfunction isWindowPickItem(\n\t\t\tcandidate: unknown,\n\t\t): candidate is IWindowPickItem {\n\t\t\tconst windowPickItem = candidate as IWindowPickItem | undefined;\n\n\t\t\treturn typeof windowPickItem?.windowId === \"number\";\n\t\t}\n\n\t\tconst picks: Array<QuickPickInput<IWindowPickItem>> = [];\n\t\tfor (const window of mainWindows) {\n\t\t\tconst auxiliaryWindows = mapMainWindowToAuxiliaryWindows.get(\n\t\t\t\twindow.id,\n\t\t\t);\n\t\t\tif (mapMainWindowToAuxiliaryWindows.size > 0) {\n\t\t\t\tpicks.push({\n\t\t\t\t\ttype: \"separator\",\n\t\t\t\t\tlabel: auxiliaryWindows\n\t\t\t\t\t\t? localize(\"windowGroup\", \"window group\")\n\t\t\t\t\t\t: undefined,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst resource = window.filename\n\t\t\t\t? URI.file(window.filename)\n\t\t\t\t: isSingleFolderWorkspaceIdentifier(window.workspace)\n\t\t\t\t\t? window.workspace.uri\n\t\t\t\t\t: isWorkspaceIdentifier(window.workspace)\n\t\t\t\t\t\t? window.workspace.configPath\n\t\t\t\t\t\t: undefined;\n\t\t\tconst fileKind = window.filename\n\t\t\t\t? FileKind.FILE\n\t\t\t\t: isSingleFolderWorkspaceIdentifier(window.workspace)\n\t\t\t\t\t? FileKind.FOLDER\n\t\t\t\t\t: isWorkspaceIdentifier(window.workspace)\n\t\t\t\t\t\t? FileKind.ROOT_FOLDER\n\t\t\t\t\t\t: FileKind.FILE;\n\t\t\tconst pick: IWindowPickItem = {\n\t\t\t\twindowId: window.id,\n\t\t\t\tlabel: window.title,\n\t\t\t\tariaLabel: window.dirty\n\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\"windowDirtyAriaLabel\",\n\t\t\t\t\t\t\t\"{0}, window with unsaved changes\",\n\t\t\t\t\t\t\twindow.title,\n\t\t\t\t\t\t)\n\t\t\t\t\t: window.title,\n\t\t\t\ticonClasses: getIconClasses(\n\t\t\t\t\tmodelService,\n\t\t\t\t\tlanguageService,\n\t\t\t\t\tresource,\n\t\t\t\t\tfileKind,\n\t\t\t\t),\n\t\t\t\tdescription:\n\t\t\t\t\tcurrentWindowId === window.id\n\t\t\t\t\t\t? localize(\"current\", \"Current Window\")\n\t\t\t\t\t\t: undefined,\n\t\t\t\tbuttons:\n\t\t\t\t\tcurrentWindowId !== window.id\n\t\t\t\t\t\t? window.dirty\n\t\t\t\t\t\t\t? [this.closeDirtyWindowAction]\n\t\t\t\t\t\t\t: [this.closeWindowAction]\n\t\t\t\t\t\t: undefined,\n\t\t\t};\n\t\t\tpicks.push(pick);\n\n\t\t\tif (auxiliaryWindows) {\n\t\t\t\tfor (const auxiliaryWindow of auxiliaryWindows) {\n\t\t\t\t\tconst pick: IWindowPickItem = {\n\t\t\t\t\t\twindowId: auxiliaryWindow.id,\n\t\t\t\t\t\tlabel: auxiliaryWindow.title,\n\t\t\t\t\t\ticonClasses: getIconClasses(\n\t\t\t\t\t\t\tmodelService,\n\t\t\t\t\t\t\tlanguageService,\n\t\t\t\t\t\t\tauxiliaryWindow.filename\n\t\t\t\t\t\t\t\t? URI.file(auxiliaryWindow.filename)\n\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\t\tFileKind.FILE,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\tcurrentWindowId === auxiliaryWindow.id\n\t\t\t\t\t\t\t\t? localize(\"current\", \"Current Window\")\n\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\tbuttons: [this.closeWindowAction],\n\t\t\t\t\t};\n\t\t\t\t\tpicks.push(pick);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst pick = await quickInputService.pick(picks, {\n\t\t\tcontextKey: \"inWindowsPicker\",\n\t\t\tactiveItem: (() => {\n\t\t\t\tfor (let i = 0; i < picks.length; i++) {\n\t\t\t\t\tconst pick = picks[i];\n\t\t\t\t\tif (\n\t\t\t\t\t\tisWindowPickItem(pick) &&\n\t\t\t\t\t\tpick.windowId === currentWindowId\n\t\t\t\t\t) {\n\t\t\t\t\t\tlet nextPick = picks[i + 1]; // try to select next window unless it's a separator\n\t\t\t\t\t\tif (isWindowPickItem(nextPick)) {\n\t\t\t\t\t\t\treturn nextPick;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnextPick = picks[i + 2]; // otherwise try to select the next window after the separator\n\t\t\t\t\t\tif (isWindowPickItem(nextPick)) {\n\t\t\t\t\t\t\treturn nextPick;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn undefined;\n\t\t\t})(),\n\t\t\tplaceHolder: localize(\n\t\t\t\t\"switchWindowPlaceHolder\",\n\t\t\t\t\"Select a window to switch to\",\n\t\t\t),\n\t\t\tquickNavigate: this.isQuickNavigate()\n\t\t\t\t? {\n\t\t\t\t\t\tkeybindings: keybindingService.lookupKeybindings(\n\t\t\t\t\t\t\tthis.desc.id,\n\t\t\t\t\t\t),\n\t\t\t\t\t}\n\t\t\t\t: undefined,\n\t\t\thideInput: this.isQuickNavigate(),\n\t\t\tonDidTriggerItemButton: async (context) => {\n\t\t\t\tawait nativeHostService.closeWindow({\n\t\t\t\t\ttargetWindowId: context.item.windowId,\n\t\t\t\t});\n\t\t\t\tcontext.removeItem();\n\t\t\t},\n\t\t});\n\n\t\tif (pick) {\n\t\t\tnativeHostService.focusWindow({ targetWindowId: pick.windowId });\n\t\t}\n\t}\n}\n\nexport class SwitchWindowAction extends BaseSwitchWindow {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.switchWindow\",\n\t\t\ttitle: localize2(\"switchWindow\", \"Switch Window...\"),\n\t\t\tf1: true,\n\t\t\tkeybinding: {\n\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\tprimary: 0,\n\t\t\t\tmac: { primary: KeyMod.WinCtrl | KeyCode.KeyW },\n\t\t\t},\n\t\t});\n\t}\n\n\tprotected isQuickNavigate(): boolean {\n\t\treturn false;\n\t}\n}\n\nexport class QuickSwitchWindowAction extends BaseSwitchWindow {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: \"workbench.action.quickSwitchWindow\",\n\t\t\ttitle: localize2(\"quickSwitchWindow\", \"Quick Switch Window...\"),\n\t\t\tf1: false, // hide quick pickers from command palette to not confuse with the other entry that shows a input field\n\t\t});\n\t}\n\n\tprotected isQuickNavigate(): boolean {\n\t\treturn true;\n\t}\n}\n\nfunction canRunNativeTabsHandler(accessor: ServicesAccessor): boolean {\n\tif (!isMacintosh) {\n\t\treturn false;\n\t}\n\n\tconst configurationService = accessor.get(IConfigurationService);\n\treturn configurationService.getValue<unknown>(\"window.nativeTabs\") === true;\n}\n\nexport const NewWindowTabHandler: ICommandHandler = (\n\taccessor: ServicesAccessor,\n) => {\n\tif (!canRunNativeTabsHandler(accessor)) {\n\t\treturn;\n\t}\n\n\treturn accessor.get(INativeHostService).newWindowTab();\n};\n\nexport const ShowPreviousWindowTabHandler: ICommandHandler = (\n\taccessor: ServicesAccessor,\n) => {\n\tif (!canRunNativeTabsHandler(accessor)) {\n\t\treturn;\n\t}\n\n\treturn accessor.get(INativeHostService).showPreviousWindowTab();\n};\n\nexport const ShowNextWindowTabHandler: ICommandHandler = (\n\taccessor: ServicesAccessor,\n) => {\n\tif (!canRunNativeTabsHandler(accessor)) {\n\t\treturn;\n\t}\n\n\treturn accessor.get(INativeHostService).showNextWindowTab();\n};\n\nexport const MoveWindowTabToNewWindowHandler: ICommandHandler = (\n\taccessor: ServicesAccessor,\n) => {\n\tif (!canRunNativeTabsHandler(accessor)) {\n\t\treturn;\n\t}\n\n\treturn accessor.get(INativeHostService).moveWindowTabToNewWindow();\n};\n\nexport const MergeWindowTabsHandlerHandler: ICommandHandler = (\n\taccessor: ServicesAccessor,\n) => {\n\tif (!canRunNativeTabsHandler(accessor)) {\n\t\treturn;\n\t}\n\n\treturn accessor.get(INativeHostService).mergeAllWindowTabs();\n};\n\nexport const ToggleWindowTabsBarHandler: ICommandHandler = (\n\taccessor: ServicesAccessor,\n) => {\n\tif (!canRunNativeTabsHandler(accessor)) {\n\t\treturn;\n\t}\n\n\treturn accessor.get(INativeHostService).toggleWindowTabsBar();\n};\n"],
  "mappings": "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",
  "names": ["pick"]
}
