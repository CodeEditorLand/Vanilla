import{getActiveWindow as g}from"../../../../vs/base/browser/dom.js";import{KeyCode as u,KeyMod as r}from"../../../../vs/base/common/keyCodes.js";import{URI as p}from"../../../../vs/base/common/uri.js";import{localize2 as t}from"../../../../vs/nls.js";import{Categories as i}from"../../../../vs/platform/action/common/actionCommonCategories.js";import{Action2 as n,MenuId as f}from"../../../../vs/platform/actions/common/actions.js";import{IsDevelopmentContext as h}from"../../../../vs/platform/contextkey/common/contextkeys.js";import{IFileService as D}from"../../../../vs/platform/files/common/files.js";import"../../../../vs/platform/instantiation/common/instantiation.js";import{KeybindingWeight as S}from"../../../../vs/platform/keybinding/common/keybindingsRegistry.js";import{INativeHostService as m}from"../../../../vs/platform/native/common/native.js";import{IEditorService as b}from"../../../../vs/workbench/services/editor/common/editorService.js";import{IWorkbenchEnvironmentService as w}from"../../../../vs/workbench/services/environment/common/environmentService.js";import{INativeWorkbenchEnvironmentService as y}from"../../../../vs/workbench/services/environment/electron-sandbox/environmentService.js";class N extends n{constructor(){super({id:"workbench.action.toggleDevTools",title:t("toggleDevTools","Toggle Developer Tools"),category:i.Developer,f1:!0,keybinding:{weight:S.WorkbenchContrib+50,when:h,primary:r.CtrlCmd|r.Shift|u.KeyI,mac:{primary:r.CtrlCmd|r.Alt|u.KeyI}},menu:{id:f.MenubarHelpMenu,group:"5_tools",order:1}})}async run(e){return e.get(m).toggleDevTools({targetWindowId:g().vscodeWindowId})}}class O extends n{constructor(){super({id:"workbench.action.configureRuntimeArguments",title:t("configureRuntimeArguments","Configure Runtime Arguments"),category:i.Preferences,f1:!0})}async run(e){const o=e.get(b),c=e.get(w);await o.openEditor({resource:c.argvResource,options:{pinned:!0}})}}class z extends n{constructor(){super({id:"workbench.action.reloadWindowWithExtensionsDisabled",title:t("reloadWindowWithExtensionsDisabled","Reload With Extensions Disabled"),category:i.Developer,f1:!0})}async run(e){return e.get(m).reload({disableExtensions:!0})}}class _ extends n{constructor(){super({id:"workbench.action.openUserDataFolder",title:t("openUserDataFolder","Open User Data Folder"),category:i.Developer,f1:!0})}async run(e){const o=e.get(m),c=e.get(D),v=e.get(y),d=p.file(v.userDataPath),l=await c.resolve(d);let a;return l.children&&l.children.length>0?a=l.children[0].resource:a=d,o.showItemInFolder(a.fsPath)}}export{O as ConfigureRuntimeArgumentsAction,_ as OpenUserDataFolderAction,z as ReloadWindowWithExtensionsDisabledAction,N as ToggleDevToolsAction};
