{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/electron-sandbox/window.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './media/window.css';\nimport { localize } from '../../nls.js';\nimport { URI } from '../../base/common/uri.js';\nimport { onUnexpectedError } from '../../base/common/errors.js';\nimport { equals } from '../../base/common/objects.js';\nimport { EventType, EventHelper, addDisposableListener, ModifierKeyEmitter, getActiveElement, hasWindow, getWindow, getWindowById, getWindows } from '../../base/browser/dom.js';\nimport { Action, Separator, WorkbenchActionExecutedClassification, WorkbenchActionExecutedEvent } from '../../base/common/actions.js';\nimport { IFileService } from '../../platform/files/common/files.js';\nimport { EditorResourceAccessor, IUntitledTextResourceEditorInput, SideBySideEditor, pathsToEditors, IResourceDiffEditorInput, IUntypedEditorInput, IEditorPane, isResourceEditorInput, IResourceMergeEditorInput } from '../common/editor.js';\nimport { IEditorService } from '../services/editor/common/editorService.js';\nimport { ITelemetryService } from '../../platform/telemetry/common/telemetry.js';\nimport { WindowMinimumSize, IOpenFileRequest, IAddFoldersRequest, INativeRunActionInWindowRequest, INativeRunKeybindingInWindowRequest, INativeOpenFileRequest, hasNativeTitlebar } from '../../platform/window/common/window.js';\nimport { ITitleService } from '../services/title/browser/titleService.js';\nimport { IWorkbenchThemeService } from '../services/themes/common/workbenchThemeService.js';\nimport { ApplyZoomTarget, applyZoom } from '../../platform/window/electron-sandbox/window.js';\nimport { setFullscreen, getZoomLevel, onDidChangeZoomLevel, getZoomFactor } from '../../base/browser/browser.js';\nimport { ICommandService, CommandsRegistry } from '../../platform/commands/common/commands.js';\nimport { IResourceEditorInput } from '../../platform/editor/common/editor.js';\nimport { ipcRenderer, process } from '../../base/parts/sandbox/electron-sandbox/globals.js';\nimport { IWorkspaceEditingService } from '../services/workspaces/common/workspaceEditing.js';\nimport { IMenuService, MenuId, IMenu, MenuItemAction, MenuRegistry } from '../../platform/actions/common/actions.js';\nimport { ICommandAction } from '../../platform/action/common/action.js';\nimport { createAndFillInActionBarActions } from '../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { RunOnceScheduler } from '../../base/common/async.js';\nimport { Disposable, DisposableStore, MutableDisposable, toDisposable } from '../../base/common/lifecycle.js';\nimport { LifecyclePhase, ILifecycleService, WillShutdownEvent, ShutdownReason, BeforeShutdownErrorEvent, BeforeShutdownEvent } from '../services/lifecycle/common/lifecycle.js';\nimport { IWorkspaceFolderCreationData } from '../../platform/workspaces/common/workspaces.js';\nimport { IIntegrityService } from '../services/integrity/common/integrity.js';\nimport { isWindows, isMacintosh, isCI } from '../../base/common/platform.js';\nimport { IProductService } from '../../platform/product/common/productService.js';\nimport { INotificationService, NeverShowAgainScope, NotificationPriority, Severity } from '../../platform/notification/common/notification.js';\nimport { IKeybindingService } from '../../platform/keybinding/common/keybinding.js';\nimport { INativeWorkbenchEnvironmentService } from '../services/environment/electron-sandbox/environmentService.js';\nimport { IAccessibilityService, AccessibilitySupport } from '../../platform/accessibility/common/accessibility.js';\nimport { WorkbenchState, IWorkspaceContextService } from '../../platform/workspace/common/workspace.js';\nimport { coalesce } from '../../base/common/arrays.js';\nimport { ConfigurationTarget, IConfigurationService } from '../../platform/configuration/common/configuration.js';\nimport { IStorageService, StorageScope, StorageTarget } from '../../platform/storage/common/storage.js';\nimport { assertIsDefined } from '../../base/common/types.js';\nimport { IOpenerService, IResolvedExternalUri, OpenOptions } from '../../platform/opener/common/opener.js';\nimport { Schemas } from '../../base/common/network.js';\nimport { INativeHostService } from '../../platform/native/common/native.js';\nimport { posix } from '../../base/common/path.js';\nimport { ITunnelService, RemoteTunnel, extractLocalHostUriMetaDataForPortMapping, extractQueryLocalHostUriMetaDataForPortMapping } from '../../platform/tunnel/common/tunnel.js';\nimport { IWorkbenchLayoutService, Parts, positionFromString, Position } from '../services/layout/browser/layoutService.js';\nimport { IWorkingCopyService } from '../services/workingCopy/common/workingCopyService.js';\nimport { WorkingCopyCapabilities } from '../services/workingCopy/common/workingCopy.js';\nimport { IFilesConfigurationService } from '../services/filesConfiguration/common/filesConfigurationService.js';\nimport { Event } from '../../base/common/event.js';\nimport { IRemoteAuthorityResolverService } from '../../platform/remote/common/remoteAuthorityResolver.js';\nimport { IAddressProvider, IAddress } from '../../platform/remote/common/remoteAgentConnection.js';\nimport { IEditorGroupsService, IEditorPart } from '../services/editor/common/editorGroupsService.js';\nimport { IDialogService } from '../../platform/dialogs/common/dialogs.js';\nimport { AuthInfo } from '../../base/parts/sandbox/electron-sandbox/electronTypes.js';\nimport { ILogService } from '../../platform/log/common/log.js';\nimport { IInstantiationService } from '../../platform/instantiation/common/instantiation.js';\nimport { whenEditorClosed } from '../browser/editor.js';\nimport { ISharedProcessService } from '../../platform/ipc/electron-sandbox/services.js';\nimport { IProgressService, ProgressLocation } from '../../platform/progress/common/progress.js';\nimport { toErrorMessage } from '../../base/common/errorMessage.js';\nimport { ILabelService } from '../../platform/label/common/label.js';\nimport { dirname } from '../../base/common/resources.js';\nimport { IBannerService } from '../services/banner/browser/bannerService.js';\nimport { Codicon } from '../../base/common/codicons.js';\nimport { IUriIdentityService } from '../../platform/uriIdentity/common/uriIdentity.js';\nimport { IPreferencesService } from '../services/preferences/common/preferences.js';\nimport { IUtilityProcessWorkerWorkbenchService } from '../services/utilityProcess/electron-sandbox/utilityProcessWorkerWorkbenchService.js';\nimport { registerWindowDriver } from '../services/driver/electron-sandbox/driver.js';\nimport { mainWindow } from '../../base/browser/window.js';\nimport { BaseWindow } from '../browser/window.js';\nimport { IHostService } from '../services/host/browser/host.js';\nimport { IStatusbarService, ShowTooltipCommand, StatusbarAlignment } from '../services/statusbar/browser/statusbar.js';\nimport { ActionBar } from '../../base/browser/ui/actionbar/actionbar.js';\nimport { ThemeIcon } from '../../base/common/themables.js';\nimport { getWorkbenchContribution } from '../common/contributions.js';\nimport { DynamicWorkbenchSecurityConfiguration } from '../common/configuration.js';\nimport { nativeHoverDelegate } from '../../platform/hover/browser/hover.js';\nimport { isESM } from '../../base/common/amd.js';\n\nexport class NativeWindow extends BaseWindow {\n\n\tprivate readonly customTitleContextMenuDisposable = this._register(new DisposableStore());\n\n\tprivate readonly addFoldersScheduler = this._register(new RunOnceScheduler(() => this.doAddFolders(), 100));\n\tprivate pendingFoldersToAdd: URI[] = [];\n\n\tprivate isDocumentedEdited = false;\n\n\tconstructor(\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IEditorGroupsService private readonly editorGroupService: IEditorGroupsService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@ITitleService private readonly titleService: ITitleService,\n\t\t@IWorkbenchThemeService protected themeService: IWorkbenchThemeService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IWorkspaceEditingService private readonly workspaceEditingService: IWorkspaceEditingService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t\t@ILifecycleService private readonly lifecycleService: ILifecycleService,\n\t\t@IIntegrityService private readonly integrityService: IIntegrityService,\n\t\t@INativeWorkbenchEnvironmentService private readonly nativeEnvironmentService: INativeWorkbenchEnvironmentService,\n\t\t@IAccessibilityService private readonly accessibilityService: IAccessibilityService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IOpenerService private readonly openerService: IOpenerService,\n\t\t@INativeHostService private readonly nativeHostService: INativeHostService,\n\t\t@ITunnelService private readonly tunnelService: ITunnelService,\n\t\t@IWorkbenchLayoutService private readonly layoutService: IWorkbenchLayoutService,\n\t\t@IWorkingCopyService private readonly workingCopyService: IWorkingCopyService,\n\t\t@IFilesConfigurationService private readonly filesConfigurationService: IFilesConfigurationService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IRemoteAuthorityResolverService private readonly remoteAuthorityResolverService: IRemoteAuthorityResolverService,\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ISharedProcessService private readonly sharedProcessService: ISharedProcessService,\n\t\t@IProgressService private readonly progressService: IProgressService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@IBannerService private readonly bannerService: IBannerService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@IPreferencesService private readonly preferencesService: IPreferencesService,\n\t\t@IUtilityProcessWorkerWorkbenchService private readonly utilityProcessWorkerWorkbenchService: IUtilityProcessWorkerWorkbenchService,\n\t\t@IHostService hostService: IHostService\n\t) {\n\t\tsuper(mainWindow, undefined, hostService, nativeEnvironmentService);\n\n\t\tthis.registerListeners();\n\t\tthis.create();\n\t}\n\n\tprotected registerListeners(): void {\n\n\t\t// Layout\n\t\tthis._register(addDisposableListener(mainWindow, EventType.RESIZE, () => this.layoutService.layout()));\n\n\t\t// React to editor input changes\n\t\tthis._register(this.editorService.onDidActiveEditorChange(() => this.updateTouchbarMenu()));\n\n\t\t// Prevent opening a real URL inside the window\n\t\tfor (const event of [EventType.DRAG_OVER, EventType.DROP]) {\n\t\t\tthis._register(addDisposableListener(mainWindow.document.body, event, (e: DragEvent) => {\n\t\t\t\tEventHelper.stop(e);\n\t\t\t}));\n\t\t}\n\n\t\t// Support `runAction` event\n\t\tipcRenderer.on('vscode:runAction', async (event: unknown, request: INativeRunActionInWindowRequest) => {\n\t\t\tconst args: unknown[] = request.args || [];\n\n\t\t\t// If we run an action from the touchbar, we fill in the currently active resource\n\t\t\t// as payload because the touch bar items are context aware depending on the editor\n\t\t\tif (request.from === 'touchbar') {\n\t\t\t\tconst activeEditor = this.editorService.activeEditor;\n\t\t\t\tif (activeEditor) {\n\t\t\t\t\tconst resource = EditorResourceAccessor.getOriginalUri(activeEditor, { supportSideBySide: SideBySideEditor.PRIMARY });\n\t\t\t\t\tif (resource) {\n\t\t\t\t\t\targs.push(resource);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\targs.push({ from: request.from });\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tawait this.commandService.executeCommand(request.id, ...args);\n\n\t\t\t\tthis.telemetryService.publicLog2<WorkbenchActionExecutedEvent, WorkbenchActionExecutedClassification>('workbenchActionExecuted', { id: request.id, from: request.from });\n\t\t\t} catch (error) {\n\t\t\t\tthis.notificationService.error(error);\n\t\t\t}\n\t\t});\n\n\t\t// Support runKeybinding event\n\t\tipcRenderer.on('vscode:runKeybinding', (event: unknown, request: INativeRunKeybindingInWindowRequest) => {\n\t\t\tconst activeElement = getActiveElement();\n\t\t\tif (activeElement) {\n\t\t\t\tthis.keybindingService.dispatchByUserSettingsLabel(request.userSettingsLabel, activeElement);\n\t\t\t}\n\t\t});\n\n\t\t// Error reporting from main\n\t\tipcRenderer.on('vscode:reportError', (event: unknown, error: string) => {\n\t\t\tif (error) {\n\t\t\t\tonUnexpectedError(JSON.parse(error));\n\t\t\t}\n\t\t});\n\n\t\t// Shared Process crash reported from main\n\t\tipcRenderer.on('vscode:reportSharedProcessCrash', (event: unknown, error: string) => {\n\t\t\tthis.notificationService.prompt(\n\t\t\t\tSeverity.Error,\n\t\t\t\tlocalize('sharedProcessCrash', \"A shared background process terminated unexpectedly. Please restart the application to recover.\"),\n\t\t\t\t[{\n\t\t\t\t\tlabel: localize('restart', \"Restart\"),\n\t\t\t\t\trun: () => this.nativeHostService.relaunch()\n\t\t\t\t}],\n\t\t\t\t{\n\t\t\t\t\tpriority: NotificationPriority.URGENT\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\n\t\t// Support openFiles event for existing and new files\n\t\tipcRenderer.on('vscode:openFiles', (event: unknown, request: IOpenFileRequest) => { this.onOpenFiles(request); });\n\n\t\t// Support addFolders event if we have a workspace opened\n\t\tipcRenderer.on('vscode:addFolders', (event: unknown, request: IAddFoldersRequest) => { this.onAddFoldersRequest(request); });\n\n\t\t// Message support\n\t\tipcRenderer.on('vscode:showInfoMessage', (event: unknown, message: string) => { this.notificationService.info(message); });\n\n\t\t// Shell Environment Issue Notifications\n\t\tipcRenderer.on('vscode:showResolveShellEnvError', (event: unknown, message: string) => {\n\t\t\tthis.notificationService.prompt(\n\t\t\t\tSeverity.Error,\n\t\t\t\tmessage,\n\t\t\t\t[{\n\t\t\t\t\tlabel: localize('restart', \"Restart\"),\n\t\t\t\t\trun: () => this.nativeHostService.relaunch()\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: localize('configure', \"Configure\"),\n\t\t\t\t\trun: () => this.preferencesService.openUserSettings({ query: 'application.shellEnvironmentResolutionTimeout' })\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: localize('learnMore', \"Learn More\"),\n\t\t\t\t\trun: () => this.openerService.open('https://go.microsoft.com/fwlink/?linkid=2149667')\n\t\t\t\t}]\n\t\t\t);\n\t\t});\n\n\t\tipcRenderer.on('vscode:showCredentialsError', (event: unknown, message: string) => {\n\t\t\tthis.notificationService.prompt(\n\t\t\t\tSeverity.Error,\n\t\t\t\tlocalize('keychainWriteError', \"Writing login information to the keychain failed with error '{0}'.\", message),\n\t\t\t\t[{\n\t\t\t\t\tlabel: localize('troubleshooting', \"Troubleshooting Guide\"),\n\t\t\t\t\trun: () => this.openerService.open('https://go.microsoft.com/fwlink/?linkid=2190713')\n\t\t\t\t}]\n\t\t\t);\n\t\t});\n\n\t\tipcRenderer.on('vscode:showTranslatedBuildWarning', () => {\n\t\t\tthis.notificationService.prompt(\n\t\t\t\tSeverity.Warning,\n\t\t\t\tlocalize(\"runningTranslated\", \"You are running an emulated version of {0}. For better performance download the native arm64 version of {0} build for your machine.\", this.productService.nameLong),\n\t\t\t\t[{\n\t\t\t\t\tlabel: localize('downloadArmBuild', \"Download\"),\n\t\t\t\t\trun: () => {\n\t\t\t\t\t\tconst quality = this.productService.quality;\n\t\t\t\t\t\tconst stableURL = 'https://code.visualstudio.com/docs/?dv=osx';\n\t\t\t\t\t\tconst insidersURL = 'https://code.visualstudio.com/docs/?dv=osx&build=insiders';\n\t\t\t\t\t\tthis.openerService.open(quality === 'stable' ? stableURL : insidersURL);\n\t\t\t\t\t}\n\t\t\t\t}],\n\t\t\t\t{\n\t\t\t\t\tpriority: NotificationPriority.URGENT\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\n\t\tipcRenderer.on('vscode:showArgvParseWarning', (event: unknown, message: string) => {\n\t\t\tthis.notificationService.prompt(\n\t\t\t\tSeverity.Warning,\n\t\t\t\tlocalize(\"showArgvParseWarning\", \"The runtime arguments file 'argv.json' contains errors. Please correct them and restart.\"),\n\t\t\t\t[{\n\t\t\t\t\tlabel: localize('showArgvParseWarningAction', \"Open File\"),\n\t\t\t\t\trun: () => this.editorService.openEditor({ resource: this.nativeEnvironmentService.argvResource })\n\t\t\t\t}],\n\t\t\t\t{\n\t\t\t\t\tpriority: NotificationPriority.URGENT\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\n\t\t// Fullscreen Events\n\t\tipcRenderer.on('vscode:enterFullScreen', () => setFullscreen(true, mainWindow));\n\t\tipcRenderer.on('vscode:leaveFullScreen', () => setFullscreen(false, mainWindow));\n\n\t\t// Proxy Login Dialog\n\t\tipcRenderer.on('vscode:openProxyAuthenticationDialog', async (event: unknown, payload: { authInfo: AuthInfo; username?: string; password?: string; replyChannel: string }) => {\n\t\t\tconst rememberCredentialsKey = 'window.rememberProxyCredentials';\n\t\t\tconst rememberCredentials = this.storageService.getBoolean(rememberCredentialsKey, StorageScope.APPLICATION);\n\t\t\tconst result = await this.dialogService.input({\n\t\t\t\ttype: 'warning',\n\t\t\t\tmessage: localize('proxyAuthRequired', \"Proxy Authentication Required\"),\n\t\t\t\tprimaryButton: localize({ key: 'loginButton', comment: ['&& denotes a mnemonic'] }, \"&&Log In\"),\n\t\t\t\tinputs:\n\t\t\t\t\t[\n\t\t\t\t\t\t{ placeholder: localize('username', \"Username\"), value: payload.username },\n\t\t\t\t\t\t{ placeholder: localize('password', \"Password\"), type: 'password', value: payload.password }\n\t\t\t\t\t],\n\t\t\t\tdetail: localize('proxyDetail', \"The proxy {0} requires a username and password.\", `${payload.authInfo.host}:${payload.authInfo.port}`),\n\t\t\t\tcheckbox: {\n\t\t\t\t\tlabel: localize('rememberCredentials', \"Remember my credentials\"),\n\t\t\t\t\tchecked: rememberCredentials\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Reply back to the channel without result to indicate\n\t\t\t// that the login dialog was cancelled\n\t\t\tif (!result.confirmed || !result.values) {\n\t\t\t\tipcRenderer.send(payload.replyChannel);\n\t\t\t}\n\n\t\t\t// Other reply back with the picked credentials\n\t\t\telse {\n\n\t\t\t\t// Update state based on checkbox\n\t\t\t\tif (result.checkboxChecked) {\n\t\t\t\t\tthis.storageService.store(rememberCredentialsKey, true, StorageScope.APPLICATION, StorageTarget.MACHINE);\n\t\t\t\t} else {\n\t\t\t\t\tthis.storageService.remove(rememberCredentialsKey, StorageScope.APPLICATION);\n\t\t\t\t}\n\n\t\t\t\t// Reply back to main side with credentials\n\t\t\t\tconst [username, password] = result.values;\n\t\t\t\tipcRenderer.send(payload.replyChannel, { username, password, remember: !!result.checkboxChecked });\n\t\t\t}\n\t\t});\n\n\t\t// Accessibility support changed event\n\t\tipcRenderer.on('vscode:accessibilitySupportChanged', (event: unknown, accessibilitySupportEnabled: boolean) => {\n\t\t\tthis.accessibilityService.setAccessibilitySupport(accessibilitySupportEnabled ? AccessibilitySupport.Enabled : AccessibilitySupport.Disabled);\n\t\t});\n\n\t\t// Allow to update security settings around allowed UNC Host\n\t\tipcRenderer.on('vscode:configureAllowedUNCHost', async (event: unknown, host: string) => {\n\t\t\tif (!isWindows) {\n\t\t\t\treturn; // only supported on Windows\n\t\t\t}\n\n\t\t\tconst allowedUncHosts = new Set<string>();\n\n\t\t\tconst configuredAllowedUncHosts = this.configurationService.getValue<string[] | undefined>('security.allowedUNCHosts',) ?? [];\n\t\t\tif (Array.isArray(configuredAllowedUncHosts)) {\n\t\t\t\tfor (const configuredAllowedUncHost of configuredAllowedUncHosts) {\n\t\t\t\t\tif (typeof configuredAllowedUncHost === 'string') {\n\t\t\t\t\t\tallowedUncHosts.add(configuredAllowedUncHost);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!allowedUncHosts.has(host)) {\n\t\t\t\tallowedUncHosts.add(host);\n\n\t\t\t\tawait getWorkbenchContribution<DynamicWorkbenchSecurityConfiguration>(DynamicWorkbenchSecurityConfiguration.ID).ready; // ensure this setting is registered\n\t\t\t\tthis.configurationService.updateValue('security.allowedUNCHosts', [...allowedUncHosts.values()], ConfigurationTarget.USER);\n\t\t\t}\n\t\t});\n\n\t\t// Allow to update security settings around protocol handlers\n\t\tipcRenderer.on('vscode:disablePromptForProtocolHandling', (event: unknown, kind: 'local' | 'remote') => {\n\t\t\tconst setting = kind === 'local' ? 'security.promptForLocalFileProtocolHandling' : 'security.promptForRemoteFileProtocolHandling';\n\t\t\tthis.configurationService.updateValue(setting, false);\n\t\t});\n\n\t\t// Window Zoom\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('window.zoomLevel') || (e.affectsConfiguration('window.zoomPerWindow') && this.configurationService.getValue('window.zoomPerWindow') === false)) {\n\t\t\t\tthis.onDidChangeConfiguredWindowZoomLevel();\n\t\t\t} else if (e.affectsConfiguration('keyboard.touchbar.enabled') || e.affectsConfiguration('keyboard.touchbar.ignored')) {\n\t\t\t\tthis.updateTouchbarMenu();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(onDidChangeZoomLevel(targetWindowId => this.handleOnDidChangeZoomLevel(targetWindowId)));\n\n\t\tfor (const part of this.editorGroupService.parts) {\n\t\t\tthis.createWindowZoomStatusEntry(part);\n\t\t}\n\n\t\tthis._register(this.editorGroupService.onDidCreateAuxiliaryEditorPart(part => this.createWindowZoomStatusEntry(part)));\n\n\t\t// Listen to visible editor changes (debounced in case a new editor opens immediately after)\n\t\tthis._register(Event.debounce(this.editorService.onDidVisibleEditorsChange, () => undefined, 0, undefined, undefined, undefined, this._store)(() => this.maybeCloseWindow()));\n\n\t\t// Listen to editor closing (if we run with --wait)\n\t\tconst filesToWait = this.nativeEnvironmentService.filesToWait;\n\t\tif (filesToWait) {\n\t\t\tthis.trackClosedWaitFiles(filesToWait.waitMarkerFileUri, coalesce(filesToWait.paths.map(path => path.fileUri)));\n\t\t}\n\n\t\t// macOS OS integration: represented file name\n\t\tif (isMacintosh) {\n\t\t\tfor (const part of this.editorGroupService.parts) {\n\t\t\t\tthis.handleRepresentedFilename(part);\n\t\t\t}\n\n\t\t\tthis._register(this.editorGroupService.onDidCreateAuxiliaryEditorPart(part => this.handleRepresentedFilename(part)));\n\t\t}\n\n\t\t// Maximize/Restore on doubleclick (for macOS custom title)\n\t\tif (isMacintosh && !hasNativeTitlebar(this.configurationService)) {\n\t\t\tthis._register(Event.runAndSubscribe(this.layoutService.onDidAddContainer, ({ container, disposables }) => {\n\t\t\t\tconst targetWindow = getWindow(container);\n\t\t\t\tconst targetWindowId = targetWindow.vscodeWindowId;\n\t\t\t\tconst titlePart = assertIsDefined(this.layoutService.getContainer(targetWindow, Parts.TITLEBAR_PART));\n\n\t\t\t\tdisposables.add(addDisposableListener(titlePart, EventType.DBLCLICK, e => {\n\t\t\t\t\tEventHelper.stop(e);\n\n\t\t\t\t\tthis.nativeHostService.handleTitleDoubleClick({ targetWindowId });\n\t\t\t\t}));\n\t\t\t}, { container: this.layoutService.mainContainer, disposables: this._store }));\n\t\t}\n\n\t\t// Document edited: indicate for dirty working copies\n\t\tthis._register(this.workingCopyService.onDidChangeDirty(workingCopy => {\n\t\t\tconst gotDirty = workingCopy.isDirty();\n\t\t\tif (gotDirty && !(workingCopy.capabilities & WorkingCopyCapabilities.Untitled) && this.filesConfigurationService.hasShortAutoSaveDelay(workingCopy.resource)) {\n\t\t\t\treturn; // do not indicate dirty of working copies that are auto saved after short delay\n\t\t\t}\n\n\t\t\tthis.updateDocumentEdited(gotDirty ? true : undefined);\n\t\t}));\n\n\t\tthis.updateDocumentEdited(undefined);\n\n\t\t// Detect minimize / maximize\n\t\tthis._register(Event.any(\n\t\t\tEvent.map(Event.filter(this.nativeHostService.onDidMaximizeWindow, windowId => !!hasWindow(windowId)), windowId => ({ maximized: true, windowId })),\n\t\t\tEvent.map(Event.filter(this.nativeHostService.onDidUnmaximizeWindow, windowId => !!hasWindow(windowId)), windowId => ({ maximized: false, windowId }))\n\t\t)(e => this.layoutService.updateWindowMaximizedState(getWindowById(e.windowId)!.window, e.maximized)));\n\t\tthis.layoutService.updateWindowMaximizedState(mainWindow, this.nativeEnvironmentService.window.maximized ?? false);\n\n\t\t// Detect panel position to determine minimum width\n\t\tthis._register(this.layoutService.onDidChangePanelPosition(pos => this.onDidChangePanelPosition(positionFromString(pos))));\n\t\tthis.onDidChangePanelPosition(this.layoutService.getPanelPosition());\n\n\t\t// Lifecycle\n\t\tthis._register(this.lifecycleService.onBeforeShutdown(e => this.onBeforeShutdown(e)));\n\t\tthis._register(this.lifecycleService.onBeforeShutdownError(e => this.onBeforeShutdownError(e)));\n\t\tthis._register(this.lifecycleService.onWillShutdown(e => this.onWillShutdown(e)));\n\t}\n\n\tprivate handleRepresentedFilename(part: IEditorPart): void {\n\t\tconst disposables = new DisposableStore();\n\t\tEvent.once(part.onWillDispose)(() => disposables.dispose());\n\n\t\tconst scopedEditorService = this.editorGroupService.getScopedInstantiationService(part).invokeFunction(accessor => accessor.get(IEditorService));\n\t\tdisposables.add(scopedEditorService.onDidActiveEditorChange(() => this.updateRepresentedFilename(scopedEditorService, part.windowId)));\n\t}\n\n\tprivate updateRepresentedFilename(editorService: IEditorService, targetWindowId: number): void {\n\t\tconst file = EditorResourceAccessor.getOriginalUri(editorService.activeEditor, { supportSideBySide: SideBySideEditor.PRIMARY, filterByScheme: Schemas.file });\n\n\t\t// Represented Filename\n\t\tthis.nativeHostService.setRepresentedFilename(file?.fsPath ?? '', { targetWindowId });\n\n\t\t// Custom title menu (main window only currently)\n\t\tif (targetWindowId === mainWindow.vscodeWindowId) {\n\t\t\tthis.provideCustomTitleContextMenu(file?.fsPath);\n\t\t}\n\t}\n\n\t//#region Window Lifecycle\n\n\tprivate onBeforeShutdown({ veto, reason }: BeforeShutdownEvent): void {\n\t\tif (reason === ShutdownReason.CLOSE) {\n\t\t\tconst confirmBeforeCloseSetting = this.configurationService.getValue<'always' | 'never' | 'keyboardOnly'>('window.confirmBeforeClose');\n\n\t\t\tconst confirmBeforeClose = confirmBeforeCloseSetting === 'always' || (confirmBeforeCloseSetting === 'keyboardOnly' && ModifierKeyEmitter.getInstance().isModifierPressed);\n\t\t\tif (confirmBeforeClose) {\n\n\t\t\t\t// When we need to confirm on close or quit, veto the shutdown\n\t\t\t\t// with a long running promise to figure out whether shutdown\n\t\t\t\t// can proceed or not.\n\n\t\t\t\treturn veto((async () => {\n\t\t\t\t\tlet actualReason: ShutdownReason = reason;\n\t\t\t\t\tif (reason === ShutdownReason.CLOSE && !isMacintosh) {\n\t\t\t\t\t\tconst windowCount = await this.nativeHostService.getWindowCount();\n\t\t\t\t\t\tif (windowCount === 1) {\n\t\t\t\t\t\t\tactualReason = ShutdownReason.QUIT; // Windows/Linux: closing last window means to QUIT\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet confirmed = true;\n\t\t\t\t\tif (confirmBeforeClose) {\n\t\t\t\t\t\tconfirmed = await this.instantiationService.invokeFunction(accessor => NativeWindow.confirmOnShutdown(accessor, actualReason));\n\t\t\t\t\t}\n\n\t\t\t\t\t// Progress for long running shutdown\n\t\t\t\t\tif (confirmed) {\n\t\t\t\t\t\tthis.progressOnBeforeShutdown(reason);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn !confirmed;\n\t\t\t\t})(), 'veto.confirmBeforeClose');\n\t\t\t}\n\t\t}\n\n\t\t// Progress for long running shutdown\n\t\tthis.progressOnBeforeShutdown(reason);\n\t}\n\n\tprivate progressOnBeforeShutdown(reason: ShutdownReason): void {\n\t\tthis.progressService.withProgress({\n\t\t\tlocation: ProgressLocation.Window, \t// use window progress to not be too annoying about this operation\n\t\t\tdelay: 800,\t\t\t\t\t\t\t// delay so that it only appears when operation takes a long time\n\t\t\ttitle: this.toShutdownLabel(reason, false),\n\t\t}, () => {\n\t\t\treturn Event.toPromise(Event.any(\n\t\t\t\tthis.lifecycleService.onWillShutdown, \t// dismiss this dialog when we shutdown\n\t\t\t\tthis.lifecycleService.onShutdownVeto, \t// or when shutdown was vetoed\n\t\t\t\tthis.dialogService.onWillShowDialog\t\t// or when a dialog asks for input\n\t\t\t));\n\t\t});\n\t}\n\n\tprivate onBeforeShutdownError({ error, reason }: BeforeShutdownErrorEvent): void {\n\t\tthis.dialogService.error(this.toShutdownLabel(reason, true), localize('shutdownErrorDetail', \"Error: {0}\", toErrorMessage(error)));\n\t}\n\n\tprivate onWillShutdown({ reason, force, joiners }: WillShutdownEvent): void {\n\n\t\t// Delay so that the dialog only appears after timeout\n\t\tconst shutdownDialogScheduler = new RunOnceScheduler(() => {\n\t\t\tconst pendingJoiners = joiners();\n\n\t\t\tthis.progressService.withProgress({\n\t\t\t\tlocation: ProgressLocation.Dialog, \t\t\t\t// use a dialog to prevent the user from making any more interactions now\n\t\t\t\tbuttons: [this.toForceShutdownLabel(reason)],\t// allow to force shutdown anyway\n\t\t\t\tcancellable: false,\t\t\t\t\t\t\t\t// do not allow to cancel\n\t\t\t\tsticky: true,\t\t\t\t\t\t\t\t\t// do not allow to dismiss\n\t\t\t\ttitle: this.toShutdownLabel(reason, false),\n\t\t\t\tdetail: pendingJoiners.length > 0 ? localize('willShutdownDetail', \"The following operations are still running: \\n{0}\", pendingJoiners.map(joiner => `- ${joiner.label}`).join('\\n')) : undefined\n\t\t\t}, () => {\n\t\t\t\treturn Event.toPromise(this.lifecycleService.onDidShutdown); // dismiss this dialog when we actually shutdown\n\t\t\t}, () => {\n\t\t\t\tforce();\n\t\t\t});\n\t\t}, 1200);\n\t\tshutdownDialogScheduler.schedule();\n\n\t\t// Dispose scheduler when we actually shutdown\n\t\tEvent.once(this.lifecycleService.onDidShutdown)(() => shutdownDialogScheduler.dispose());\n\t}\n\n\tprivate toShutdownLabel(reason: ShutdownReason, isError: boolean): string {\n\t\tif (isError) {\n\t\t\tswitch (reason) {\n\t\t\t\tcase ShutdownReason.CLOSE:\n\t\t\t\t\treturn localize('shutdownErrorClose', \"An unexpected error prevented the window to close\");\n\t\t\t\tcase ShutdownReason.QUIT:\n\t\t\t\t\treturn localize('shutdownErrorQuit', \"An unexpected error prevented the application to quit\");\n\t\t\t\tcase ShutdownReason.RELOAD:\n\t\t\t\t\treturn localize('shutdownErrorReload', \"An unexpected error prevented the window to reload\");\n\t\t\t\tcase ShutdownReason.LOAD:\n\t\t\t\t\treturn localize('shutdownErrorLoad', \"An unexpected error prevented to change the workspace\");\n\t\t\t}\n\t\t}\n\n\t\tswitch (reason) {\n\t\t\tcase ShutdownReason.CLOSE:\n\t\t\t\treturn localize('shutdownTitleClose', \"Closing the window is taking a bit longer...\");\n\t\t\tcase ShutdownReason.QUIT:\n\t\t\t\treturn localize('shutdownTitleQuit', \"Quitting the application is taking a bit longer...\");\n\t\t\tcase ShutdownReason.RELOAD:\n\t\t\t\treturn localize('shutdownTitleReload', \"Reloading the window is taking a bit longer...\");\n\t\t\tcase ShutdownReason.LOAD:\n\t\t\t\treturn localize('shutdownTitleLoad', \"Changing the workspace is taking a bit longer...\");\n\t\t}\n\t}\n\n\tprivate toForceShutdownLabel(reason: ShutdownReason): string {\n\t\tswitch (reason) {\n\t\t\tcase ShutdownReason.CLOSE:\n\t\t\t\treturn localize('shutdownForceClose', \"Close Anyway\");\n\t\t\tcase ShutdownReason.QUIT:\n\t\t\t\treturn localize('shutdownForceQuit', \"Quit Anyway\");\n\t\t\tcase ShutdownReason.RELOAD:\n\t\t\t\treturn localize('shutdownForceReload', \"Reload Anyway\");\n\t\t\tcase ShutdownReason.LOAD:\n\t\t\t\treturn localize('shutdownForceLoad', \"Change Anyway\");\n\t\t}\n\t}\n\n\t//#endregion\n\n\tprivate updateDocumentEdited(documentEdited: true | undefined): void {\n\t\tlet setDocumentEdited: boolean;\n\t\tif (typeof documentEdited === 'boolean') {\n\t\t\tsetDocumentEdited = documentEdited;\n\t\t} else {\n\t\t\tsetDocumentEdited = this.workingCopyService.hasDirty;\n\t\t}\n\n\t\tif ((!this.isDocumentedEdited && setDocumentEdited) || (this.isDocumentedEdited && !setDocumentEdited)) {\n\t\t\tthis.isDocumentedEdited = setDocumentEdited;\n\n\t\t\tthis.nativeHostService.setDocumentEdited(setDocumentEdited);\n\t\t}\n\t}\n\n\tprivate getWindowMinimumWidth(panelPosition: Position = this.layoutService.getPanelPosition()): number {\n\n\t\t// if panel is on the side, then return the larger minwidth\n\t\tconst panelOnSide = panelPosition === Position.LEFT || panelPosition === Position.RIGHT;\n\t\tif (panelOnSide) {\n\t\t\treturn WindowMinimumSize.WIDTH_WITH_VERTICAL_PANEL;\n\t\t}\n\n\t\treturn WindowMinimumSize.WIDTH;\n\t}\n\n\tprivate onDidChangePanelPosition(pos: Position): void {\n\t\tconst minWidth = this.getWindowMinimumWidth(pos);\n\n\t\tthis.nativeHostService.setMinimumSize(minWidth, undefined);\n\t}\n\n\tprivate maybeCloseWindow(): void {\n\t\tconst closeWhenEmpty = this.configurationService.getValue('window.closeWhenEmpty') || this.nativeEnvironmentService.args.wait;\n\t\tif (!closeWhenEmpty) {\n\t\t\treturn; // return early if configured to not close when empty\n\t\t}\n\n\t\t// Close empty editor groups based on setting and environment\n\t\tfor (const editorPart of this.editorGroupService.parts) {\n\t\t\tif (editorPart.groups.some(group => !group.isEmpty)) {\n\t\t\t\tcontinue; // not empty\n\t\t\t}\n\n\t\t\tif (editorPart === this.editorGroupService.mainPart && (\n\t\t\t\tthis.contextService.getWorkbenchState() !== WorkbenchState.EMPTY ||\t// only for empty windows\n\t\t\t\tthis.environmentService.isExtensionDevelopment ||\t\t\t\t\t// not when developing an extension\n\t\t\t\tthis.editorService.visibleEditors.length > 0\t\t\t\t\t\t// not when there are still editors open in other windows\n\t\t\t)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (editorPart === this.editorGroupService.mainPart) {\n\t\t\t\tthis.nativeHostService.closeWindow();\n\t\t\t} else {\n\t\t\t\teditorPart.removeGroup(editorPart.activeGroup);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate provideCustomTitleContextMenu(filePath: string | undefined): void {\n\n\t\t// Clear old menu\n\t\tthis.customTitleContextMenuDisposable.clear();\n\n\t\t// Only provide a menu when we have a file path and custom titlebar\n\t\tif (!filePath || hasNativeTitlebar(this.configurationService)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Split up filepath into segments\n\t\tconst segments = filePath.split(posix.sep);\n\t\tfor (let i = segments.length; i > 0; i--) {\n\t\t\tconst isFile = (i === segments.length);\n\n\t\t\tlet pathOffset = i;\n\t\t\tif (!isFile) {\n\t\t\t\tpathOffset++; // for segments which are not the file name we want to open the folder\n\t\t\t}\n\n\t\t\tconst path = URI.file(segments.slice(0, pathOffset).join(posix.sep));\n\n\t\t\tlet label: string;\n\t\t\tif (!isFile) {\n\t\t\t\tlabel = this.labelService.getUriBasenameLabel(dirname(path));\n\t\t\t} else {\n\t\t\t\tlabel = this.labelService.getUriBasenameLabel(path);\n\t\t\t}\n\n\t\t\tconst commandId = `workbench.action.revealPathInFinder${i}`;\n\t\t\tthis.customTitleContextMenuDisposable.add(CommandsRegistry.registerCommand(commandId, () => this.nativeHostService.showItemInFolder(path.fsPath)));\n\t\t\tthis.customTitleContextMenuDisposable.add(MenuRegistry.appendMenuItem(MenuId.TitleBarTitleContext, { command: { id: commandId, title: label || posix.sep }, order: -i, group: '1_file' }));\n\t\t}\n\t}\n\n\tprotected create(): void {\n\n\t\t// Handle open calls\n\t\tthis.setupOpenHandlers();\n\n\t\t// Notify some services about lifecycle phases\n\t\tthis.lifecycleService.when(LifecyclePhase.Ready).then(() => this.nativeHostService.notifyReady());\n\t\tthis.lifecycleService.when(LifecyclePhase.Restored).then(() => {\n\t\t\tthis.sharedProcessService.notifyRestored();\n\t\t\tthis.utilityProcessWorkerWorkbenchService.notifyRestored();\n\t\t});\n\n\t\t// Check for situations that are worth warning the user about\n\t\tthis.handleWarnings();\n\n\t\t// Touchbar menu (if enabled)\n\t\tthis.updateTouchbarMenu();\n\n\t\t// Smoke Test Driver\n\t\tif (this.environmentService.enableSmokeTestDriver) {\n\t\t\tthis.setupDriver();\n\t\t}\n\t}\n\n\tprivate async handleWarnings(): Promise<void> {\n\n\t\t// Check for cyclic dependencies\n\t\tif (!isESM && typeof require.hasDependencyCycle === 'function' && require.hasDependencyCycle()) {\n\t\t\tif (isCI) {\n\t\t\t\tthis.logService.error('Error: There is a dependency cycle in the AMD modules that needs to be resolved!');\n\t\t\t\tthis.nativeHostService.exit(37); // running on a build machine, just exit without showing a dialog\n\t\t\t} else {\n\t\t\t\tthis.dialogService.error(localize('loaderCycle', \"There is a dependency cycle in the AMD modules that needs to be resolved!\"));\n\t\t\t\tthis.nativeHostService.openDevTools();\n\t\t\t}\n\t\t}\n\n\t\t// After restored phase is fine for the following ones\n\t\tawait this.lifecycleService.when(LifecyclePhase.Restored);\n\n\t\t// Integrity / Root warning\n\t\t(async () => {\n\t\t\tconst isAdmin = await this.nativeHostService.isAdmin();\n\t\t\tconst { isPure } = await this.integrityService.isPure();\n\n\t\t\t// Update to title\n\t\t\tthis.titleService.updateProperties({ isPure, isAdmin });\n\n\t\t\t// Show warning message (unix only)\n\t\t\tif (isAdmin && !isWindows) {\n\t\t\t\tthis.notificationService.warn(localize('runningAsRoot', \"It is not recommended to run {0} as root user.\", this.productService.nameShort));\n\t\t\t}\n\t\t})();\n\n\t\t// Installation Dir Warning\n\t\tif (this.environmentService.isBuilt) {\n\t\t\tlet installLocationUri: URI;\n\t\t\tif (isMacintosh) {\n\t\t\t\t// appRoot = /Applications/Visual Studio Code - Insiders.app/Contents/Resources/app\n\t\t\t\tinstallLocationUri = dirname(dirname(dirname(URI.file(this.nativeEnvironmentService.appRoot))));\n\t\t\t} else {\n\t\t\t\t// appRoot = C:\\Users\\<name>\\AppData\\Local\\Programs\\Microsoft VS Code Insiders\\resources\\app\n\t\t\t\t// appRoot = /usr/share/code-insiders/resources/app\n\t\t\t\tinstallLocationUri = dirname(dirname(URI.file(this.nativeEnvironmentService.appRoot)));\n\t\t\t}\n\n\t\t\tfor (const folder of this.contextService.getWorkspace().folders) {\n\t\t\t\tif (this.uriIdentityService.extUri.isEqualOrParent(folder.uri, installLocationUri)) {\n\t\t\t\t\tthis.bannerService.show({\n\t\t\t\t\t\tid: 'appRootWarning.banner',\n\t\t\t\t\t\tmessage: localize('appRootWarning.banner', \"Files you store within the installation folder ('{0}') may be OVERWRITTEN or DELETED IRREVERSIBLY without warning at update time.\", this.labelService.getUriLabel(installLocationUri)),\n\t\t\t\t\t\ticon: Codicon.warning\n\t\t\t\t\t});\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// macOS 10.13 and 10.14 warning\n\t\tif (isMacintosh) {\n\t\t\tconst majorVersion = this.nativeEnvironmentService.os.release.split('.')[0];\n\t\t\tconst eolReleases = new Map<string, string>([\n\t\t\t\t['17', 'macOS High Sierra'],\n\t\t\t\t['18', 'macOS Mojave'],\n\t\t\t]);\n\n\t\t\tif (eolReleases.has(majorVersion)) {\n\t\t\t\tconst message = localize('macoseolmessage', \"{0} on {1} will soon stop receiving updates. Consider upgrading your macOS version.\", this.productService.nameLong, eolReleases.get(majorVersion));\n\n\t\t\t\tthis.notificationService.prompt(\n\t\t\t\t\tSeverity.Warning,\n\t\t\t\t\tmessage,\n\t\t\t\t\t[{\n\t\t\t\t\t\tlabel: localize('learnMore', \"Learn More\"),\n\t\t\t\t\t\trun: () => this.openerService.open(URI.parse('https://aka.ms/vscode-faq-old-macOS'))\n\t\t\t\t\t}],\n\t\t\t\t\t{\n\t\t\t\t\t\tneverShowAgain: { id: 'macoseol', isSecondary: true, scope: NeverShowAgainScope.APPLICATION },\n\t\t\t\t\t\tpriority: NotificationPriority.URGENT,\n\t\t\t\t\t\tsticky: true\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// Slow shell environment progress indicator\n\t\tconst shellEnv = process.shellEnv();\n\t\tthis.progressService.withProgress({\n\t\t\ttitle: localize('resolveShellEnvironment', \"Resolving shell environment...\"),\n\t\t\tlocation: ProgressLocation.Window,\n\t\t\tdelay: 1600,\n\t\t\tbuttons: [localize('learnMore', \"Learn More\")]\n\t\t}, () => shellEnv, () => this.openerService.open('https://go.microsoft.com/fwlink/?linkid=2149667'));\n\t}\n\n\tprivate setupDriver(): void {\n\t\tconst that = this;\n\t\tlet pendingQuit = false;\n\n\t\tregisterWindowDriver(this.instantiationService, {\n\t\t\tasync exitApplication(): Promise<void> {\n\t\t\t\tif (pendingQuit) {\n\t\t\t\t\tthat.logService.info('[driver] not handling exitApplication() due to pending quit() call');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthat.logService.info('[driver] handling exitApplication()');\n\n\t\t\t\tpendingQuit = true;\n\t\t\t\treturn that.nativeHostService.quit();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async openTunnel(address: string, port: number): Promise<RemoteTunnel | string | undefined> {\n\t\tconst remoteAuthority = this.environmentService.remoteAuthority;\n\t\tconst addressProvider: IAddressProvider | undefined = remoteAuthority ? {\n\t\t\tgetAddress: async (): Promise<IAddress> => {\n\t\t\t\treturn (await this.remoteAuthorityResolverService.resolveAuthority(remoteAuthority)).authority;\n\t\t\t}\n\t\t} : undefined;\n\t\tconst tunnel = await this.tunnelService.getExistingTunnel(address, port);\n\t\tif (!tunnel || (typeof tunnel === 'string')) {\n\t\t\treturn this.tunnelService.openTunnel(addressProvider, address, port);\n\t\t}\n\t\treturn tunnel;\n\t}\n\n\tasync resolveExternalUri(uri: URI, options?: OpenOptions): Promise<IResolvedExternalUri | undefined> {\n\t\tlet queryTunnel: RemoteTunnel | string | undefined;\n\t\tif (options?.allowTunneling) {\n\t\t\tconst portMappingRequest = extractLocalHostUriMetaDataForPortMapping(uri);\n\t\t\tconst queryPortMapping = extractQueryLocalHostUriMetaDataForPortMapping(uri);\n\t\t\tif (queryPortMapping) {\n\t\t\t\tqueryTunnel = await this.openTunnel(queryPortMapping.address, queryPortMapping.port);\n\t\t\t\tif (queryTunnel && (typeof queryTunnel !== 'string')) {\n\t\t\t\t\t// If the tunnel was mapped to a different port, dispose it, because some services\n\t\t\t\t\t// validate the port number in the query string.\n\t\t\t\t\tif (queryTunnel.tunnelRemotePort !== queryPortMapping.port) {\n\t\t\t\t\t\tqueryTunnel.dispose();\n\t\t\t\t\t\tqueryTunnel = undefined;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!portMappingRequest) {\n\t\t\t\t\t\t\tconst tunnel = queryTunnel;\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tresolved: uri,\n\t\t\t\t\t\t\t\tdispose: () => tunnel.dispose()\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (portMappingRequest) {\n\t\t\t\tconst tunnel = await this.openTunnel(portMappingRequest.address, portMappingRequest.port);\n\t\t\t\tif (tunnel && (typeof tunnel !== 'string')) {\n\t\t\t\t\tconst addressAsUri = URI.parse(tunnel.localAddress);\n\t\t\t\t\tconst resolved = addressAsUri.scheme.startsWith(uri.scheme) ? addressAsUri : uri.with({ authority: tunnel.localAddress });\n\t\t\t\t\treturn {\n\t\t\t\t\t\tresolved,\n\t\t\t\t\t\tdispose() {\n\t\t\t\t\t\t\ttunnel.dispose();\n\t\t\t\t\t\t\tif (queryTunnel && (typeof queryTunnel !== 'string')) {\n\t\t\t\t\t\t\t\tqueryTunnel.dispose();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!options?.openExternal) {\n\t\t\tconst canHandleResource = await this.fileService.canHandleResource(uri);\n\t\t\tif (canHandleResource) {\n\t\t\t\treturn {\n\t\t\t\t\tresolved: URI.from({\n\t\t\t\t\t\tscheme: this.productService.urlProtocol,\n\t\t\t\t\t\tpath: 'workspace',\n\t\t\t\t\t\tquery: uri.toString()\n\t\t\t\t\t}),\n\t\t\t\t\tdispose() { }\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate setupOpenHandlers(): void {\n\n\t\t// Handle external open() calls\n\t\tthis.openerService.setDefaultExternalOpener({\n\t\t\topenExternal: async (href: string) => {\n\t\t\t\tconst success = await this.nativeHostService.openExternal(href, this.configurationService.getValue<string>('workbench.externalBrowser'));\n\t\t\t\tif (!success) {\n\t\t\t\t\tconst fileCandidate = URI.parse(href);\n\t\t\t\t\tif (fileCandidate.scheme === Schemas.file) {\n\t\t\t\t\t\t// if opening failed, and this is a file, we can still try to reveal it\n\t\t\t\t\t\tawait this.nativeHostService.showItemInFolder(fileCandidate.fsPath);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\n\t\t// Register external URI resolver\n\t\tthis.openerService.registerExternalUriResolver({\n\t\t\tresolveExternalUri: async (uri: URI, options?: OpenOptions) => {\n\t\t\t\treturn this.resolveExternalUri(uri, options);\n\t\t\t}\n\t\t});\n\t}\n\n\t//#region Touchbar\n\n\tprivate touchBarMenu: IMenu | undefined;\n\tprivate readonly touchBarDisposables = this._register(new DisposableStore());\n\tprivate lastInstalledTouchedBar: ICommandAction[][] | undefined;\n\n\tprivate updateTouchbarMenu(): void {\n\t\tif (!isMacintosh) {\n\t\t\treturn; // macOS only\n\t\t}\n\n\t\t// Dispose old\n\t\tthis.touchBarDisposables.clear();\n\t\tthis.touchBarMenu = undefined;\n\n\t\t// Create new (delayed)\n\t\tconst scheduler: RunOnceScheduler = this.touchBarDisposables.add(new RunOnceScheduler(() => this.doUpdateTouchbarMenu(scheduler), 300));\n\t\tscheduler.schedule();\n\t}\n\n\tprivate doUpdateTouchbarMenu(scheduler: RunOnceScheduler): void {\n\t\tif (!this.touchBarMenu) {\n\t\t\tconst scopedContextKeyService = this.editorService.activeEditorPane?.scopedContextKeyService || this.editorGroupService.activeGroup.scopedContextKeyService;\n\t\t\tthis.touchBarMenu = this.menuService.createMenu(MenuId.TouchBarContext, scopedContextKeyService);\n\t\t\tthis.touchBarDisposables.add(this.touchBarMenu);\n\t\t\tthis.touchBarDisposables.add(this.touchBarMenu.onDidChange(() => scheduler.schedule()));\n\t\t}\n\n\t\tconst actions: Array<MenuItemAction | Separator> = [];\n\n\t\tconst disabled = this.configurationService.getValue('keyboard.touchbar.enabled') === false;\n\t\tconst touchbarIgnored = this.configurationService.getValue('keyboard.touchbar.ignored');\n\t\tconst ignoredItems = Array.isArray(touchbarIgnored) ? touchbarIgnored : [];\n\n\t\t// Fill actions into groups respecting order\n\t\tcreateAndFillInActionBarActions(this.touchBarMenu, undefined, actions);\n\n\t\t// Convert into command action multi array\n\t\tconst items: ICommandAction[][] = [];\n\t\tlet group: ICommandAction[] = [];\n\t\tif (!disabled) {\n\t\t\tfor (const action of actions) {\n\n\t\t\t\t// Command\n\t\t\t\tif (action instanceof MenuItemAction) {\n\t\t\t\t\tif (ignoredItems.indexOf(action.item.id) >= 0) {\n\t\t\t\t\t\tcontinue; // ignored\n\t\t\t\t\t}\n\n\t\t\t\t\tgroup.push(action.item);\n\t\t\t\t}\n\n\t\t\t\t// Separator\n\t\t\t\telse if (action instanceof Separator) {\n\t\t\t\t\tif (group.length) {\n\t\t\t\t\t\titems.push(group);\n\t\t\t\t\t}\n\n\t\t\t\t\tgroup = [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (group.length) {\n\t\t\t\titems.push(group);\n\t\t\t}\n\t\t}\n\n\t\t// Only update if the actions have changed\n\t\tif (!equals(this.lastInstalledTouchedBar, items)) {\n\t\t\tthis.lastInstalledTouchedBar = items;\n\t\t\tthis.nativeHostService.updateTouchBar(items);\n\t\t}\n\t}\n\n\t//#endregion\n\n\tprivate onAddFoldersRequest(request: IAddFoldersRequest): void {\n\n\t\t// Buffer all pending requests\n\t\tthis.pendingFoldersToAdd.push(...request.foldersToAdd.map(folder => URI.revive(folder)));\n\n\t\t// Delay the adding of folders a bit to buffer in case more requests are coming\n\t\tif (!this.addFoldersScheduler.isScheduled()) {\n\t\t\tthis.addFoldersScheduler.schedule();\n\t\t}\n\t}\n\n\tprivate doAddFolders(): void {\n\t\tconst foldersToAdd: IWorkspaceFolderCreationData[] = [];\n\n\t\tfor (const folder of this.pendingFoldersToAdd) {\n\t\t\tfoldersToAdd.push(({ uri: folder }));\n\t\t}\n\n\t\tthis.pendingFoldersToAdd = [];\n\n\t\tthis.workspaceEditingService.addFolders(foldersToAdd);\n\t}\n\n\tprivate async onOpenFiles(request: INativeOpenFileRequest): Promise<void> {\n\t\tconst diffMode = !!(request.filesToDiff && (request.filesToDiff.length === 2));\n\t\tconst mergeMode = !!(request.filesToMerge && (request.filesToMerge.length === 4));\n\n\t\tconst inputs = coalesce(await pathsToEditors(mergeMode ? request.filesToMerge : diffMode ? request.filesToDiff : request.filesToOpenOrCreate, this.fileService, this.logService));\n\t\tif (inputs.length) {\n\t\t\tconst openedEditorPanes = await this.openResources(inputs, diffMode, mergeMode);\n\n\t\t\tif (request.filesToWait) {\n\n\t\t\t\t// In wait mode, listen to changes to the editors and wait until the files\n\t\t\t\t// are closed that the user wants to wait for. When this happens we delete\n\t\t\t\t// the wait marker file to signal to the outside that editing is done.\n\t\t\t\t// However, it is possible that opening of the editors failed, as such we\n\t\t\t\t// check for whether editor panes got opened and otherwise delete the marker\n\t\t\t\t// right away.\n\n\t\t\t\tif (openedEditorPanes.length) {\n\t\t\t\t\treturn this.trackClosedWaitFiles(URI.revive(request.filesToWait.waitMarkerFileUri), coalesce(request.filesToWait.paths.map(path => URI.revive(path.fileUri))));\n\t\t\t\t} else {\n\t\t\t\t\treturn this.fileService.del(URI.revive(request.filesToWait.waitMarkerFileUri));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async trackClosedWaitFiles(waitMarkerFile: URI, resourcesToWaitFor: URI[]): Promise<void> {\n\n\t\t// Wait for the resources to be closed in the text editor...\n\t\tawait this.instantiationService.invokeFunction(accessor => whenEditorClosed(accessor, resourcesToWaitFor));\n\n\t\t// ...before deleting the wait marker file\n\t\tawait this.fileService.del(waitMarkerFile);\n\t}\n\n\tprivate async openResources(resources: Array<IResourceEditorInput | IUntitledTextResourceEditorInput>, diffMode: boolean, mergeMode: boolean): Promise<readonly IEditorPane[]> {\n\t\tconst editors: IUntypedEditorInput[] = [];\n\n\t\tif (mergeMode && isResourceEditorInput(resources[0]) && isResourceEditorInput(resources[1]) && isResourceEditorInput(resources[2]) && isResourceEditorInput(resources[3])) {\n\t\t\tconst mergeEditor: IResourceMergeEditorInput = {\n\t\t\t\tinput1: { resource: resources[0].resource },\n\t\t\t\tinput2: { resource: resources[1].resource },\n\t\t\t\tbase: { resource: resources[2].resource },\n\t\t\t\tresult: { resource: resources[3].resource },\n\t\t\t\toptions: { pinned: true }\n\t\t\t};\n\t\t\teditors.push(mergeEditor);\n\t\t} else if (diffMode && isResourceEditorInput(resources[0]) && isResourceEditorInput(resources[1])) {\n\t\t\tconst diffEditor: IResourceDiffEditorInput = {\n\t\t\t\toriginal: { resource: resources[0].resource },\n\t\t\t\tmodified: { resource: resources[1].resource },\n\t\t\t\toptions: { pinned: true }\n\t\t\t};\n\t\t\teditors.push(diffEditor);\n\t\t} else {\n\t\t\teditors.push(...resources);\n\t\t}\n\n\t\treturn this.editorService.openEditors(editors, undefined, { validateTrust: true });\n\t}\n\n\t//#region Window Zoom\n\n\tprivate readonly mapWindowIdToZoomStatusEntry = new Map<number, ZoomStatusEntry>();\n\n\tprivate configuredWindowZoomLevel = this.resolveConfiguredWindowZoomLevel();\n\n\tprivate resolveConfiguredWindowZoomLevel(): number {\n\t\tconst windowZoomLevel = this.configurationService.getValue('window.zoomLevel');\n\n\t\treturn typeof windowZoomLevel === 'number' ? windowZoomLevel : 0;\n\t}\n\n\tprivate handleOnDidChangeZoomLevel(targetWindowId: number): void {\n\n\t\t// Zoom status entry\n\t\tthis.updateWindowZoomStatusEntry(targetWindowId);\n\n\t\t// Notify main process about a custom zoom level\n\t\tif (targetWindowId === mainWindow.vscodeWindowId) {\n\t\t\tconst currentWindowZoomLevel = getZoomLevel(mainWindow);\n\n\t\t\tlet notifyZoomLevel: number | undefined = undefined;\n\t\t\tif (this.configuredWindowZoomLevel !== currentWindowZoomLevel) {\n\t\t\t\tnotifyZoomLevel = currentWindowZoomLevel;\n\t\t\t}\n\n\t\t\tipcRenderer.invoke('vscode:notifyZoomLevel', notifyZoomLevel);\n\t\t}\n\t}\n\n\tprivate createWindowZoomStatusEntry(part: IEditorPart): void {\n\t\tconst disposables = new DisposableStore();\n\t\tEvent.once(part.onWillDispose)(() => disposables.dispose());\n\n\t\tconst scopedInstantiationService = this.editorGroupService.getScopedInstantiationService(part);\n\t\tthis.mapWindowIdToZoomStatusEntry.set(part.windowId, disposables.add(scopedInstantiationService.createInstance(ZoomStatusEntry)));\n\t\tdisposables.add(toDisposable(() => this.mapWindowIdToZoomStatusEntry.delete(part.windowId)));\n\n\t\tthis.updateWindowZoomStatusEntry(part.windowId);\n\t}\n\n\tprivate updateWindowZoomStatusEntry(targetWindowId: number): void {\n\t\tconst targetWindow = getWindowById(targetWindowId);\n\t\tconst entry = this.mapWindowIdToZoomStatusEntry.get(targetWindowId);\n\t\tif (entry && targetWindow) {\n\t\t\tconst currentZoomLevel = getZoomLevel(targetWindow.window);\n\n\t\t\tlet text: string | undefined = undefined;\n\t\t\tif (currentZoomLevel < this.configuredWindowZoomLevel) {\n\t\t\t\ttext = '$(zoom-out)';\n\t\t\t} else if (currentZoomLevel > this.configuredWindowZoomLevel) {\n\t\t\t\ttext = '$(zoom-in)';\n\t\t\t}\n\n\t\t\tentry.updateZoomEntry(text ?? false, targetWindowId);\n\t\t}\n\t}\n\n\tprivate onDidChangeConfiguredWindowZoomLevel(): void {\n\t\tthis.configuredWindowZoomLevel = this.resolveConfiguredWindowZoomLevel();\n\n\t\tlet applyZoomLevel = false;\n\t\tfor (const { window } of getWindows()) {\n\t\t\tif (getZoomLevel(window) !== this.configuredWindowZoomLevel) {\n\t\t\t\tapplyZoomLevel = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (applyZoomLevel) {\n\t\t\tapplyZoom(this.configuredWindowZoomLevel, ApplyZoomTarget.ALL_WINDOWS);\n\t\t}\n\n\t\tfor (const [windowId] of this.mapWindowIdToZoomStatusEntry) {\n\t\t\tthis.updateWindowZoomStatusEntry(windowId);\n\t\t}\n\t}\n\n\t//#endregion\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tfor (const [, entry] of this.mapWindowIdToZoomStatusEntry) {\n\t\t\tentry.dispose();\n\t\t}\n\t}\n}\n\nclass ZoomStatusEntry extends Disposable {\n\n\tprivate readonly disposable = this._register(new MutableDisposable<DisposableStore>());\n\n\tprivate zoomLevelLabel: Action | undefined = undefined;\n\n\tconstructor(\n\t\t@IStatusbarService private readonly statusbarService: IStatusbarService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService\n\t) {\n\t\tsuper();\n\t}\n\n\tupdateZoomEntry(visibleOrText: false | string, targetWindowId: number): void {\n\t\tif (typeof visibleOrText === 'string') {\n\t\t\tif (!this.disposable.value) {\n\t\t\t\tthis.createZoomEntry(visibleOrText);\n\t\t\t}\n\n\t\t\tthis.updateZoomLevelLabel(targetWindowId);\n\t\t} else {\n\t\t\tthis.disposable.clear();\n\t\t}\n\t}\n\n\tprivate createZoomEntry(visibleOrText: string): void {\n\t\tconst disposables = new DisposableStore();\n\t\tthis.disposable.value = disposables;\n\n\t\tconst container = document.createElement('div');\n\t\tcontainer.classList.add('zoom-status');\n\n\t\tconst left = document.createElement('div');\n\t\tleft.classList.add('zoom-status-left');\n\t\tcontainer.appendChild(left);\n\n\t\tconst zoomOutAction: Action = disposables.add(new Action('workbench.action.zoomOut', localize('zoomOut', \"Zoom Out\"), ThemeIcon.asClassName(Codicon.remove), true, () => this.commandService.executeCommand(zoomOutAction.id)));\n\t\tconst zoomInAction: Action = disposables.add(new Action('workbench.action.zoomIn', localize('zoomIn', \"Zoom In\"), ThemeIcon.asClassName(Codicon.plus), true, () => this.commandService.executeCommand(zoomInAction.id)));\n\t\tconst zoomResetAction: Action = disposables.add(new Action('workbench.action.zoomReset', localize('zoomReset', \"Reset\"), undefined, true, () => this.commandService.executeCommand(zoomResetAction.id)));\n\t\tzoomResetAction.tooltip = localize('zoomResetLabel', \"{0} ({1})\", zoomResetAction.label, this.keybindingService.lookupKeybinding(zoomResetAction.id)?.getLabel());\n\t\tconst zoomSettingsAction: Action = disposables.add(new Action('workbench.action.openSettings', localize('zoomSettings', \"Settings\"), ThemeIcon.asClassName(Codicon.settingsGear), true, () => this.commandService.executeCommand(zoomSettingsAction.id, 'window.zoom')));\n\t\tconst zoomLevelLabel = disposables.add(new Action('zoomLabel', undefined, undefined, false));\n\n\t\tthis.zoomLevelLabel = zoomLevelLabel;\n\t\tdisposables.add(toDisposable(() => this.zoomLevelLabel = undefined));\n\n\t\tconst actionBarLeft = disposables.add(new ActionBar(left, { hoverDelegate: nativeHoverDelegate }));\n\t\tactionBarLeft.push(zoomOutAction, { icon: true, label: false, keybinding: this.keybindingService.lookupKeybinding(zoomOutAction.id)?.getLabel() });\n\t\tactionBarLeft.push(this.zoomLevelLabel, { icon: false, label: true });\n\t\tactionBarLeft.push(zoomInAction, { icon: true, label: false, keybinding: this.keybindingService.lookupKeybinding(zoomInAction.id)?.getLabel() });\n\n\t\tconst right = document.createElement('div');\n\t\tright.classList.add('zoom-status-right');\n\t\tcontainer.appendChild(right);\n\n\t\tconst actionBarRight = disposables.add(new ActionBar(right, { hoverDelegate: nativeHoverDelegate }));\n\n\t\tactionBarRight.push(zoomResetAction, { icon: false, label: true });\n\t\tactionBarRight.push(zoomSettingsAction, { icon: true, label: false, keybinding: this.keybindingService.lookupKeybinding(zoomSettingsAction.id)?.getLabel() });\n\n\t\tconst name = localize('status.windowZoom', \"Window Zoom\");\n\t\tdisposables.add(this.statusbarService.addEntry({\n\t\t\tname,\n\t\t\ttext: visibleOrText,\n\t\t\ttooltip: container,\n\t\t\tariaLabel: name,\n\t\t\tcommand: ShowTooltipCommand,\n\t\t\tkind: 'prominent'\n\t\t}, 'status.windowZoom', StatusbarAlignment.RIGHT, 102));\n\t}\n\n\tprivate updateZoomLevelLabel(targetWindowId: number): void {\n\t\tif (this.zoomLevelLabel) {\n\t\t\tconst targetWindow = getWindowById(targetWindowId, true).window;\n\t\t\tconst zoomFactor = Math.round(getZoomFactor(targetWindow) * 100);\n\t\t\tconst zoomLevel = getZoomLevel(targetWindow);\n\n\t\t\tthis.zoomLevelLabel.label = `${zoomLevel}`;\n\t\t\tthis.zoomLevelLabel.tooltip = localize('zoomNumber', \"Zoom Level: {0} ({1}%)\", zoomLevel, zoomFactor);\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
