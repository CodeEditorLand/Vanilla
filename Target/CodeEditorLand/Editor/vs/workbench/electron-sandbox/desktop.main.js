import{setFullscreen as T}from"../../../vs/base/browser/browser.js";import{domContentLoaded as A}from"../../../vs/base/browser/dom.js";import{mainWindow as w}from"../../../vs/base/browser/window.js";import{onUnexpectedError as P}from"../../../vs/base/common/errors.js";import{Disposable as F}from"../../../vs/base/common/lifecycle.js";import{Schemas as l}from"../../../vs/base/common/network.js";import{safeStringify as E}from"../../../vs/base/common/objects.js";import{isBigSurOrNewer as R,isCI as M,isMacintosh as _}from"../../../vs/base/common/platform.js";import{URI as S}from"../../../vs/base/common/uri.js";import{ProxyChannel as x}from"../../../vs/base/parts/ipc/common/ipc.js";import{localize as z}from"../../../vs/nls.js";import"../../../vs/platform/configuration/common/configuration.js";import{IFileService as K}from"../../../vs/platform/files/common/files.js";import{FileService as Z}from"../../../vs/platform/files/common/fileService.js";import{ServiceCollection as j}from"../../../vs/platform/instantiation/common/serviceCollection.js";import{IMainProcessService as B}from"../../../vs/platform/ipc/common/mainProcessService.js";import{ElectronIPCMainProcessService as O}from"../../../vs/platform/ipc/electron-sandbox/mainProcessService.js";import{ISharedProcessService as H}from"../../../vs/platform/ipc/electron-sandbox/services.js";import{ILoggerService as V,ILogService as q,LogLevel as G}from"../../../vs/platform/log/common/log.js";import{LoggerChannelClient as J}from"../../../vs/platform/log/common/logIpc.js";import{IPolicyService as Q,NullPolicyService as X}from"../../../vs/platform/policy/common/policy.js";import{PolicyChannelClient as Y}from"../../../vs/platform/policy/common/policyIpc.js";import $ from"../../../vs/platform/product/common/product.js";import{IProductService as ee}from"../../../vs/platform/product/common/productService.js";import{BrowserSocketFactory as re}from"../../../vs/platform/remote/browser/browserSocketFactory.js";import{IRemoteAuthorityResolverService as ie,RemoteConnectionType as oe}from"../../../vs/platform/remote/common/remoteAuthorityResolver.js";import{IRemoteSocketFactoryService as te,RemoteSocketFactoryService as ne}from"../../../vs/platform/remote/common/remoteSocketFactoryService.js";import{ElectronRemoteResourceLoader as se}from"../../../vs/platform/remote/electron-sandbox/electronRemoteResourceLoader.js";import{RemoteAuthorityResolverService as ce}from"../../../vs/platform/remote/electron-sandbox/remoteAuthorityResolverService.js";import{ISignService as ae}from"../../../vs/platform/sign/common/sign.js";import{IStorageService as ve}from"../../../vs/platform/storage/common/storage.js";import{IUriIdentityService as me}from"../../../vs/platform/uriIdentity/common/uriIdentity.js";import{UriIdentityService as fe}from"../../../vs/platform/uriIdentity/common/uriIdentityService.js";import{FileUserDataProvider as le}from"../../../vs/platform/userData/common/fileUserDataProvider.js";import{IUserDataProfilesService as pe,reviveProfile as Se}from"../../../vs/platform/userDataProfile/common/userDataProfile.js";import{UserDataProfilesService as ge}from"../../../vs/platform/userDataProfile/common/userDataProfileIpc.js";import"../../../vs/platform/window/common/window.js";import{applyZoom as ue}from"../../../vs/platform/window/electron-sandbox/window.js";import{isSingleFolderWorkspaceIdentifier as he,isWorkspaceIdentifier as de,IWorkspaceContextService as we,reviveIdentifier as Ie,toWorkspaceIdentifier as ke}from"../../../vs/platform/workspace/common/workspace.js";import{IWorkspaceTrustEnablementService as ye,IWorkspaceTrustManagementService as We}from"../../../vs/platform/workspace/common/workspaceTrust.js";import{Workbench as Pe}from"../../../vs/workbench/browser/workbench.js";import{NativeWindow as Ce}from"../../../vs/workbench/electron-sandbox/window.js";import{WorkspaceService as be}from"../../../vs/workbench/services/configuration/browser/configurationService.js";import{IWorkbenchConfigurationService as Le}from"../../../vs/workbench/services/configuration/common/configuration.js";import{ConfigurationCache as Ue}from"../../../vs/workbench/services/configuration/common/configurationCache.js";import{INativeWorkbenchEnvironmentService as De,NativeWorkbenchEnvironmentService as Ne}from"../../../vs/workbench/services/environment/electron-sandbox/environmentService.js";import{DiskFileSystemProvider as Te}from"../../../vs/workbench/services/files/electron-sandbox/diskFileSystemProvider.js";import{INativeKeyboardLayoutService as Ae,NativeKeyboardLayoutService as Fe}from"../../../vs/workbench/services/keybinding/electron-sandbox/nativeKeyboardLayoutService.js";import{NativeLogService as Ee}from"../../../vs/workbench/services/log/electron-sandbox/logService.js";import{IRemoteAgentService as Re}from"../../../vs/workbench/services/remote/common/remoteAgentService.js";import{RemoteFileSystemProviderClient as Me}from"../../../vs/workbench/services/remote/common/remoteFileSystemProviderClient.js";import{RemoteAgentService as _e}from"../../../vs/workbench/services/remote/electron-sandbox/remoteAgentService.js";import{SharedProcessService as xe}from"../../../vs/workbench/services/sharedProcess/electron-sandbox/sharedProcessService.js";import{NativeWorkbenchStorageService as ze}from"../../../vs/workbench/services/storage/electron-sandbox/storageService.js";import{IUserDataProfileService as Ke}from"../../../vs/workbench/services/userDataProfile/common/userDataProfile.js";import{UserDataProfileService as Ze}from"../../../vs/workbench/services/userDataProfile/common/userDataProfileService.js";import{IUtilityProcessWorkerWorkbenchService as je,UtilityProcessWorkerWorkbenchService as Be}from"../../../vs/workbench/services/utilityProcess/electron-sandbox/utilityProcessWorkerWorkbenchService.js";import{WorkspaceTrustEnablementService as Oe,WorkspaceTrustManagementService as He}from"../../../vs/workbench/services/workspaces/common/workspaceTrust.js";class Ve extends F{constructor(e){super();this.configuration=e;this.init()}init(){this.reviveUris(),T(!!this.configuration.fullscreen,w)}reviveUris(){const e=Ie(this.configuration.workspace);(de(e)||he(e))&&(this.configuration.workspace=e);const r=this.configuration.filesToWait,o=r?.paths;for(const s of[o,this.configuration.filesToOpenOrCreate,this.configuration.filesToDiff,this.configuration.filesToMerge])if(Array.isArray(s))for(const i of s)i.fileUri&&(i.fileUri=S.revive(i.fileUri));r&&(r.waitMarkerFileUri=S.revive(r.waitMarkerFileUri))}async open(){const[e]=await Promise.all([this.initServices(),A(w)]);this.applyWindowZoomLevel(e.configurationService);const r=new Pe(w.document.body,{extraClasses:this.getExtraClasses()},e.serviceCollection,e.logService);this.registerListeners(r,e.storageService);const o=r.startup();this._register(o.createInstance(Ce))}applyWindowZoomLevel(e){let r;if(this.configuration.isCustomZoomLevel&&typeof this.configuration.zoomLevel=="number")r=this.configuration.zoomLevel;else{const o=e.getValue();r=typeof o.window?.zoomLevel=="number"?o.window.zoomLevel:0}ue(r,w)}getExtraClasses(){return _&&R(this.configuration.os.release)?["macos-bigsur-or-newer"]:[]}registerListeners(e,r){this._register(e.onWillShutdown(o=>o.join(r.close(),{id:"join.closeStorage",label:z("join.closeStorage","Saving UI state")}))),this._register(e.onDidShutdown(()=>this.dispose()))}async initServices(){const e=new j,r=this._register(new O(this.configuration.windowId));e.set(B,r);const o=this.configuration.policiesData?new Y(this.configuration.policiesData,r.getChannel("policy")):new X;e.set(Q,o);const s={_serviceBrand:void 0,...$};e.set(ee,s);const i=new Ne(this.configuration,s);e.set(De,i);const a=[...this.configuration.loggers.global.map(n=>({...n,resource:S.revive(n.resource)})),...this.configuration.loggers.window.map(n=>({...n,resource:S.revive(n.resource),hidden:!0}))],v=new J(this.configuration.windowId,this.configuration.logLevel,i.windowLogsPath,a,r.getChannel("logger"));e.set(V,v);const t=this._register(new Ee(v,i));e.set(q,t),M&&t.info("workbench#open()"),t.getLevel()===G.Trace&&t.trace("workbench#open(): with configuration",E({...this.configuration,nls:void 0}));const I=new xe(this.configuration.windowId,t);e.set(H,I);const g=new Be(this.configuration.windowId,t,r);e.set(je,g);const m=x.toService(r.getChannel("sign"));e.set(ae,m);const c=this._register(new Z(t));e.set(K,c);const k=new ce(s,new se(i.window.id,r,c));e.set(ie,k);const b=this._register(new Te(r,g,t,v));c.registerProvider(l.file,b);const u=new fe(c);e.set(me,u);const p=new ge(this.configuration.profiles.all,S.revive(this.configuration.profiles.home).with({scheme:i.userRoamingDataHome.scheme}),r.getChannel("userDataProfiles"));e.set(pe,p);const h=new Ze(Se(this.configuration.profiles.profile,p.profilesHome.scheme));e.set(Ke,h),c.registerProvider(l.vscodeUserData,this._register(new le(l.file,b,l.vscodeUserData,p,u,t)));const y=new ne;y.register(oe.WebSocket,new re(null)),e.set(te,y);const W=this._register(new _e(y,h,i,s,k,m,t));e.set(Re,W),this._register(Me.register(W,c,t));const L=this.resolveWorkspaceIdentifier(i),[f,U]=await Promise.all([this.createWorkspaceService(L,i,h,p,c,W,u,t,o).then(n=>(e.set(we,n),e.set(Le,n),n)),this.createStorageService(L,i,h,p,r).then(n=>(e.set(ve,n),n)),this.createKeyboardLayoutService(r).then(n=>(e.set(Ae,n),n))]),D=new Oe(f,i);e.set(ye,D);const d=new He(f,k,U,u,i,f,D,c);return e.set(We,d),f.updateWorkspaceTrust(d.isWorkspaceTrusted()),this._register(d.onDidChangeTrust(()=>f.updateWorkspaceTrust(d.isWorkspaceTrusted()))),{serviceCollection:e,logService:t,storageService:U,configurationService:f}}resolveWorkspaceIdentifier(e){return this.configuration.workspace?this.configuration.workspace:ke(this.configuration.backupPath,e.isExtensionDevelopment)}async createWorkspaceService(e,r,o,s,i,a,v,t,I){const g=new Ue([l.file,l.vscodeUserData],r,i),m=new be({remoteAuthority:r.remoteAuthority,configurationCache:g},r,o,s,i,a,v,t,I);try{return await m.initialize(e),m}catch(c){return P(c),m}}async createStorageService(e,r,o,s,i){const a=new ze(e,o,s,i,r);try{return await a.initialize(),a}catch(v){return P(v),a}}async createKeyboardLayoutService(e){const r=new Fe(e);try{return await r.initialize(),r}catch(o){return P(o),r}}}function ri(C){return new Ve(C).open()}export{Ve as DesktopMain,ri as main};
