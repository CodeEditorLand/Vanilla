import{localize as T}from"../../nls.js";import A from"../../platform/product/common/product.js";import"../../platform/window/common/window.js";import{Workbench as F}from"../browser/workbench.js";import{NativeWindow as E}from"./window.js";import{setFullscreen as R}from"../../base/browser/browser.js";import{domContentLoaded as x}from"../../base/browser/dom.js";import{onUnexpectedError as b}from"../../base/common/errors.js";import{URI as S}from"../../base/common/uri.js";import{WorkspaceService as M}from"../services/configuration/browser/configurationService.js";import{INativeWorkbenchEnvironmentService as _,NativeWorkbenchEnvironmentService as z}from"../services/environment/electron-sandbox/environmentService.js";import{ServiceCollection as K}from"../../platform/instantiation/common/serviceCollection.js";import{ILoggerService as Z,ILogService as j,LogLevel as B}from"../../platform/log/common/log.js";import{NativeWorkbenchStorageService as O}from"../services/storage/electron-sandbox/storageService.js";import{IWorkspaceContextService as H,isSingleFolderWorkspaceIdentifier as V,isWorkspaceIdentifier as q,reviveIdentifier as G,toWorkspaceIdentifier as J}from"../../platform/workspace/common/workspace.js";import{IWorkbenchConfigurationService as Q}from"../services/configuration/common/configuration.js";import{IStorageService as X}from"../../platform/storage/common/storage.js";import{Disposable as Y}from"../../base/common/lifecycle.js";import{ISharedProcessService as $}from"../../platform/ipc/electron-sandbox/services.js";import{IMainProcessService as ee}from"../../platform/ipc/common/mainProcessService.js";import{SharedProcessService as re}from"../services/sharedProcess/electron-sandbox/sharedProcessService.js";import{RemoteAuthorityResolverService as ie}from"../../platform/remote/electron-sandbox/remoteAuthorityResolverService.js";import{IRemoteAuthorityResolverService as oe,RemoteConnectionType as te}from"../../platform/remote/common/remoteAuthorityResolver.js";import{RemoteAgentService as ne}from"../services/remote/electron-sandbox/remoteAgentService.js";import{IRemoteAgentService as se}from"../services/remote/common/remoteAgentService.js";import{FileService as ce}from"../../platform/files/common/fileService.js";import{IFileService as ae}from"../../platform/files/common/files.js";import{RemoteFileSystemProviderClient as ve}from"../services/remote/common/remoteFileSystemProviderClient.js";import{ConfigurationCache as me}from"../services/configuration/common/configurationCache.js";import{ISignService as fe}from"../../platform/sign/common/sign.js";import{IProductService as le}from"../../platform/product/common/productService.js";import{IUriIdentityService as pe}from"../../platform/uriIdentity/common/uriIdentity.js";import{UriIdentityService as Se}from"../../platform/uriIdentity/common/uriIdentityService.js";import{INativeKeyboardLayoutService as ge,NativeKeyboardLayoutService as ue}from"../services/keybinding/electron-sandbox/nativeKeyboardLayoutService.js";import{ElectronIPCMainProcessService as he}from"../../platform/ipc/electron-sandbox/mainProcessService.js";import{LoggerChannelClient as de}from"../../platform/log/common/logIpc.js";import{ProxyChannel as we}from"../../base/parts/ipc/common/ipc.js";import{NativeLogService as Ie}from"../services/log/electron-sandbox/logService.js";import{WorkspaceTrustEnablementService as ke,WorkspaceTrustManagementService as ye}from"../services/workspaces/common/workspaceTrust.js";import{IWorkspaceTrustEnablementService as We,IWorkspaceTrustManagementService as Pe}from"../../platform/workspace/common/workspaceTrust.js";import{safeStringify as be}from"../../base/common/objects.js";import{IUtilityProcessWorkerWorkbenchService as Ce,UtilityProcessWorkerWorkbenchService as Le}from"../services/utilityProcess/electron-sandbox/utilityProcessWorkerWorkbenchService.js";import{isBigSurOrNewer as Ue,isCI as De,isMacintosh as Ne}from"../../base/common/platform.js";import{Schemas as l}from"../../base/common/network.js";import{DiskFileSystemProvider as Te}from"../services/files/electron-sandbox/diskFileSystemProvider.js";import{FileUserDataProvider as Ae}from"../../platform/userData/common/fileUserDataProvider.js";import{IUserDataProfilesService as Fe,reviveProfile as Ee}from"../../platform/userDataProfile/common/userDataProfile.js";import{UserDataProfilesService as Re}from"../../platform/userDataProfile/common/userDataProfileIpc.js";import{PolicyChannelClient as xe}from"../../platform/policy/common/policyIpc.js";import{IPolicyService as Me,NullPolicyService as _e}from"../../platform/policy/common/policy.js";import{UserDataProfileService as ze}from"../services/userDataProfile/common/userDataProfileService.js";import{IUserDataProfileService as Ke}from"../services/userDataProfile/common/userDataProfile.js";import{BrowserSocketFactory as Ze}from"../../platform/remote/browser/browserSocketFactory.js";import{RemoteSocketFactoryService as je,IRemoteSocketFactoryService as Be}from"../../platform/remote/common/remoteSocketFactoryService.js";import{ElectronRemoteResourceLoader as Oe}from"../../platform/remote/electron-sandbox/electronRemoteResourceLoader.js";import"../../platform/configuration/common/configuration.js";import{applyZoom as He}from"../../platform/window/electron-sandbox/window.js";import{mainWindow as w}from"../../base/browser/window.js";class Ve extends Y{constructor(e){super();this.configuration=e;this.init()}init(){this.reviveUris(),R(!!this.configuration.fullscreen,w)}reviveUris(){const e=G(this.configuration.workspace);(q(e)||V(e))&&(this.configuration.workspace=e);const r=this.configuration.filesToWait,o=r?.paths;for(const s of[o,this.configuration.filesToOpenOrCreate,this.configuration.filesToDiff,this.configuration.filesToMerge])if(Array.isArray(s))for(const i of s)i.fileUri&&(i.fileUri=S.revive(i.fileUri));r&&(r.waitMarkerFileUri=S.revive(r.waitMarkerFileUri))}async open(){const[e]=await Promise.all([this.initServices(),x(w)]);this.applyWindowZoomLevel(e.configurationService);const r=new F(w.document.body,{extraClasses:this.getExtraClasses()},e.serviceCollection,e.logService);this.registerListeners(r,e.storageService);const o=r.startup();this._register(o.createInstance(E))}applyWindowZoomLevel(e){let r;if(this.configuration.isCustomZoomLevel&&typeof this.configuration.zoomLevel=="number")r=this.configuration.zoomLevel;else{const o=e.getValue();r=typeof o.window?.zoomLevel=="number"?o.window.zoomLevel:0}He(r,w)}getExtraClasses(){return Ne&&Ue(this.configuration.os.release)?["macos-bigsur-or-newer"]:[]}registerListeners(e,r){this._register(e.onWillShutdown(o=>o.join(r.close(),{id:"join.closeStorage",label:T("join.closeStorage","Saving UI state")}))),this._register(e.onDidShutdown(()=>this.dispose()))}async initServices(){const e=new K,r=this._register(new he(this.configuration.windowId));e.set(ee,r);const o=this.configuration.policiesData?new xe(this.configuration.policiesData,r.getChannel("policy")):new _e;e.set(Me,o);const s={_serviceBrand:void 0,...A};e.set(le,s);const i=new z(this.configuration,s);e.set(_,i);const a=[...this.configuration.loggers.global.map(n=>({...n,resource:S.revive(n.resource)})),...this.configuration.loggers.window.map(n=>({...n,resource:S.revive(n.resource),hidden:!0}))],v=new de(this.configuration.windowId,this.configuration.logLevel,i.windowLogsPath,a,r.getChannel("logger"));e.set(Z,v);const t=this._register(new Ie(v,i));e.set(j,t),De&&t.info("workbench#open()"),t.getLevel()===B.Trace&&t.trace("workbench#open(): with configuration",be({...this.configuration,nls:void 0}));const I=new re(this.configuration.windowId,t);e.set($,I);const g=new Le(this.configuration.windowId,t,r);e.set(Ce,g);const f=we.toService(r.getChannel("sign"));e.set(fe,f);const c=this._register(new ce(t));e.set(ae,c);const k=new ie(s,new Oe(i.window.id,r,c));e.set(oe,k);const y=this._register(new Te(r,g,t,v));c.registerProvider(l.file,y);const u=new Se(c);e.set(pe,u);const p=new Re(this.configuration.profiles.all,S.revive(this.configuration.profiles.home).with({scheme:i.userRoamingDataHome.scheme}),r.getChannel("userDataProfiles"));e.set(Fe,p);const h=new ze(Ee(this.configuration.profiles.profile,p.profilesHome.scheme));e.set(Ke,h),c.registerProvider(l.vscodeUserData,this._register(new Ae(l.file,y,l.vscodeUserData,p,u,t)));const W=new je;W.register(te.WebSocket,new Ze(null)),e.set(Be,W);const P=this._register(new ne(W,h,i,s,k,f,t));e.set(se,P),this._register(ve.register(P,c,t));const L=this.resolveWorkspaceIdentifier(i),[m,U]=await Promise.all([this.createWorkspaceService(L,i,h,p,c,P,u,t,o).then(n=>(e.set(H,n),e.set(Q,n),n)),this.createStorageService(L,i,h,p,r).then(n=>(e.set(X,n),n)),this.createKeyboardLayoutService(r).then(n=>(e.set(ge,n),n))]);m.getValue("files.experimentalWatcherNext")===!0&&y.setUseNextWatcher();const D=new ke(m,i);e.set(We,D);const d=new ye(m,k,U,u,i,m,D,c);return e.set(Pe,d),m.updateWorkspaceTrust(d.isWorkspaceTrusted()),this._register(d.onDidChangeTrust(()=>m.updateWorkspaceTrust(d.isWorkspaceTrusted()))),{serviceCollection:e,logService:t,storageService:U,configurationService:m}}resolveWorkspaceIdentifier(e){return this.configuration.workspace?this.configuration.workspace:J(this.configuration.backupPath,e.isExtensionDevelopment)}async createWorkspaceService(e,r,o,s,i,a,v,t,I){const g=new me([l.file,l.vscodeUserData],r,i),f=new M({remoteAuthority:r.remoteAuthority,configurationCache:g},r,o,s,i,a,v,t,I);try{return await f.initialize(e),f}catch(c){return b(c),f}}async createStorageService(e,r,o,s,i){const a=new O(e,o,s,i,r);try{return await a.initialize(),a}catch(v){return b(v),a}}async createKeyboardLayoutService(e){const r=new ue(e);try{return await r.initialize(),r}catch(o){return b(o),r}}}function ri(C){return new Ve(C).open()}export{Ve as DesktopMain,ri as main};
