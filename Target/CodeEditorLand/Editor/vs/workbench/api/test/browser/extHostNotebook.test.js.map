{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/test/browser/extHostNotebook.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport * as vscode from 'vscode';\nimport { ExtHostDocumentsAndEditors } from '../../common/extHostDocumentsAndEditors.js';\nimport { TestRPCProtocol } from '../common/testRPCProtocol.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { NullLogService } from '../../../../platform/log/common/log.js';\nimport { mock } from '../../../../base/test/common/mock.js';\nimport { IModelAddedData, MainContext, MainThreadCommandsShape, MainThreadNotebookShape, NotebookCellsChangedEventDto, NotebookOutputItemDto } from '../../common/extHost.protocol.js';\nimport { ExtHostNotebookController } from '../../common/extHostNotebook.js';\nimport { ExtHostNotebookDocument } from '../../common/extHostNotebookDocument.js';\nimport { CellKind, CellUri, NotebookCellsChangeType } from '../../../contrib/notebook/common/notebookCommon.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ExtHostDocuments } from '../../common/extHostDocuments.js';\nimport { ExtHostCommands } from '../../common/extHostCommands.js';\nimport { nullExtensionDescription } from '../../../services/extensions/common/extensions.js';\nimport { isEqual } from '../../../../base/common/resources.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { ExtHostNotebookDocuments } from '../../common/extHostNotebookDocuments.js';\nimport { SerializableObjectWithBuffers } from '../../../services/extensions/common/proxyIdentifier.js';\nimport { VSBuffer } from '../../../../base/common/buffer.js';\nimport { IExtHostTelemetry } from '../../common/extHostTelemetry.js';\nimport { ExtHostConsumerFileSystem } from '../../common/extHostFileSystemConsumer.js';\nimport { ExtHostFileSystemInfo } from '../../common/extHostFileSystemInfo.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\nimport { ExtHostSearch } from '../../common/extHostSearch.js';\nimport { URITransformerService } from '../../common/extHostUriTransformerService.js';\n\nsuite('NotebookCell#Document', function () {\n\tlet rpcProtocol: TestRPCProtocol;\n\tlet notebook: ExtHostNotebookDocument;\n\tlet extHostDocumentsAndEditors: ExtHostDocumentsAndEditors;\n\tlet extHostDocuments: ExtHostDocuments;\n\tlet extHostNotebooks: ExtHostNotebookController;\n\tlet extHostNotebookDocuments: ExtHostNotebookDocuments;\n\tlet extHostConsumerFileSystem: ExtHostConsumerFileSystem;\n\tlet extHostSearch: ExtHostSearch;\n\n\tconst notebookUri = URI.parse('test:///notebook.file');\n\tconst disposables = new DisposableStore();\n\n\tteardown(function () {\n\t\tdisposables.clear();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tsetup(async function () {\n\t\trpcProtocol = new TestRPCProtocol();\n\t\trpcProtocol.set(MainContext.MainThreadCommands, new class extends mock<MainThreadCommandsShape>() {\n\t\t\toverride $registerCommand() { }\n\t\t});\n\t\trpcProtocol.set(MainContext.MainThreadNotebook, new class extends mock<MainThreadNotebookShape>() {\n\t\t\toverride async $registerNotebookSerializer() { }\n\t\t\toverride async $unregisterNotebookSerializer() { }\n\t\t});\n\t\textHostDocumentsAndEditors = new ExtHostDocumentsAndEditors(rpcProtocol, new NullLogService());\n\t\textHostDocuments = new ExtHostDocuments(rpcProtocol, extHostDocumentsAndEditors);\n\t\textHostConsumerFileSystem = new ExtHostConsumerFileSystem(rpcProtocol, new ExtHostFileSystemInfo());\n\t\textHostSearch = new ExtHostSearch(rpcProtocol, new URITransformerService(null), new NullLogService());\n\t\textHostNotebooks = new ExtHostNotebookController(rpcProtocol, new ExtHostCommands(rpcProtocol, new NullLogService(), new class extends mock<IExtHostTelemetry>() {\n\t\t\toverride onExtensionError(): boolean {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}), extHostDocumentsAndEditors, extHostDocuments, extHostConsumerFileSystem, extHostSearch, new NullLogService());\n\t\textHostNotebookDocuments = new ExtHostNotebookDocuments(extHostNotebooks);\n\n\t\tconst reg = extHostNotebooks.registerNotebookSerializer(nullExtensionDescription, 'test', new class extends mock<vscode.NotebookSerializer>() { });\n\t\textHostNotebooks.$acceptDocumentAndEditorsDelta(new SerializableObjectWithBuffers({\n\t\t\taddedDocuments: [{\n\t\t\t\turi: notebookUri,\n\t\t\t\tviewType: 'test',\n\t\t\t\tversionId: 0,\n\t\t\t\tcells: [{\n\t\t\t\t\thandle: 0,\n\t\t\t\t\turi: CellUri.generate(notebookUri, 0),\n\t\t\t\t\tsource: ['### Heading'],\n\t\t\t\t\teol: '\\n',\n\t\t\t\t\tlanguage: 'markdown',\n\t\t\t\t\tcellKind: CellKind.Markup,\n\t\t\t\t\toutputs: [],\n\t\t\t\t}, {\n\t\t\t\t\thandle: 1,\n\t\t\t\t\turi: CellUri.generate(notebookUri, 1),\n\t\t\t\t\tsource: ['console.log(\"aaa\")', 'console.log(\"bbb\")'],\n\t\t\t\t\teol: '\\n',\n\t\t\t\t\tlanguage: 'javascript',\n\t\t\t\t\tcellKind: CellKind.Code,\n\t\t\t\t\toutputs: [],\n\t\t\t\t}],\n\t\t\t}],\n\t\t\taddedEditors: [{\n\t\t\t\tdocumentUri: notebookUri,\n\t\t\t\tid: '_notebook_editor_0',\n\t\t\t\tselections: [{ start: 0, end: 1 }],\n\t\t\t\tvisibleRanges: []\n\t\t\t}]\n\t\t}));\n\t\textHostNotebooks.$acceptDocumentAndEditorsDelta(new SerializableObjectWithBuffers({ newActiveEditor: '_notebook_editor_0' }));\n\n\t\tnotebook = extHostNotebooks.notebookDocuments[0]!;\n\n\t\tdisposables.add(reg);\n\t\tdisposables.add(notebook);\n\t\tdisposables.add(extHostDocuments);\n\t});\n\n\n\ttest('cell document is vscode.TextDocument', async function () {\n\n\t\tassert.strictEqual(notebook.apiNotebook.cellCount, 2);\n\n\t\tconst [c1, c2] = notebook.apiNotebook.getCells();\n\t\tconst d1 = extHostDocuments.getDocument(c1.document.uri);\n\n\t\tassert.ok(d1);\n\t\tassert.strictEqual(d1.languageId, c1.document.languageId);\n\t\tassert.strictEqual(d1.version, 1);\n\n\t\tconst d2 = extHostDocuments.getDocument(c2.document.uri);\n\t\tassert.ok(d2);\n\t\tassert.strictEqual(d2.languageId, c2.document.languageId);\n\t\tassert.strictEqual(d2.version, 1);\n\t});\n\n\ttest('cell document goes when notebook closes', async function () {\n\t\tconst cellUris: string[] = [];\n\t\tfor (const cell of notebook.apiNotebook.getCells()) {\n\t\t\tassert.ok(extHostDocuments.getDocument(cell.document.uri));\n\t\t\tcellUris.push(cell.document.uri.toString());\n\t\t}\n\n\t\tconst removedCellUris: string[] = [];\n\t\tconst reg = extHostDocuments.onDidRemoveDocument(doc => {\n\t\t\tremovedCellUris.push(doc.uri.toString());\n\t\t});\n\n\t\textHostNotebooks.$acceptDocumentAndEditorsDelta(new SerializableObjectWithBuffers({ removedDocuments: [notebook.uri] }));\n\t\treg.dispose();\n\n\t\tassert.strictEqual(removedCellUris.length, 2);\n\t\tassert.deepStrictEqual(removedCellUris.sort(), cellUris.sort());\n\t});\n\n\ttest('cell document is vscode.TextDocument after changing it', async function () {\n\n\t\tconst p = new Promise<void>((resolve, reject) => {\n\n\t\t\tdisposables.add(extHostNotebookDocuments.onDidChangeNotebookDocument(e => {\n\t\t\t\ttry {\n\t\t\t\t\tassert.strictEqual(e.contentChanges.length, 1);\n\t\t\t\t\tassert.strictEqual(e.contentChanges[0].addedCells.length, 2);\n\n\t\t\t\t\tconst [first, second] = e.contentChanges[0].addedCells;\n\n\t\t\t\t\tconst doc1 = extHostDocuments.getAllDocumentData().find(data => isEqual(data.document.uri, first.document.uri));\n\t\t\t\t\tassert.ok(doc1);\n\t\t\t\t\tassert.strictEqual(doc1?.document === first.document, true);\n\n\t\t\t\t\tconst doc2 = extHostDocuments.getAllDocumentData().find(data => isEqual(data.document.uri, second.document.uri));\n\t\t\t\t\tassert.ok(doc2);\n\t\t\t\t\tassert.strictEqual(doc2?.document === second.document, true);\n\n\t\t\t\t\tresolve();\n\n\t\t\t\t} catch (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t}));\n\n\t\t});\n\n\t\textHostNotebookDocuments.$acceptModelChanged(notebookUri, new SerializableObjectWithBuffers({\n\t\t\tversionId: notebook.apiNotebook.version + 1,\n\t\t\trawEvents: [\n\t\t\t\t{\n\t\t\t\t\tkind: NotebookCellsChangeType.ModelChange,\n\t\t\t\t\tchanges: [[0, 0, [{\n\t\t\t\t\t\thandle: 2,\n\t\t\t\t\t\turi: CellUri.generate(notebookUri, 2),\n\t\t\t\t\t\tsource: ['Hello', 'World', 'Hello World!'],\n\t\t\t\t\t\teol: '\\n',\n\t\t\t\t\t\tlanguage: 'test',\n\t\t\t\t\t\tcellKind: CellKind.Code,\n\t\t\t\t\t\toutputs: [],\n\t\t\t\t\t}, {\n\t\t\t\t\t\thandle: 3,\n\t\t\t\t\t\turi: CellUri.generate(notebookUri, 3),\n\t\t\t\t\t\tsource: ['Hallo', 'Welt', 'Hallo Welt!'],\n\t\t\t\t\t\teol: '\\n',\n\t\t\t\t\t\tlanguage: 'test',\n\t\t\t\t\t\tcellKind: CellKind.Code,\n\t\t\t\t\t\toutputs: [],\n\t\t\t\t\t}]]]\n\t\t\t\t}\n\t\t\t]\n\t\t}), false);\n\n\t\tawait p;\n\n\t});\n\n\ttest('cell document stays open when notebook is still open', async function () {\n\n\t\tconst docs: vscode.TextDocument[] = [];\n\t\tconst addData: IModelAddedData[] = [];\n\t\tfor (const cell of notebook.apiNotebook.getCells()) {\n\t\t\tconst doc = extHostDocuments.getDocument(cell.document.uri);\n\t\t\tassert.ok(doc);\n\t\t\tassert.strictEqual(extHostDocuments.getDocument(cell.document.uri).isClosed, false);\n\t\t\tdocs.push(doc);\n\t\t\taddData.push({\n\t\t\t\tEOL: '\\n',\n\t\t\t\tisDirty: doc.isDirty,\n\t\t\t\tlines: doc.getText().split('\\n'),\n\t\t\t\tlanguageId: doc.languageId,\n\t\t\t\turi: doc.uri,\n\t\t\t\tversionId: doc.version\n\t\t\t});\n\t\t}\n\n\t\t// this call happens when opening a document on the main side\n\t\textHostDocumentsAndEditors.$acceptDocumentsAndEditorsDelta({ addedDocuments: addData });\n\n\t\t// this call happens when closing a document from the main side\n\t\textHostDocumentsAndEditors.$acceptDocumentsAndEditorsDelta({ removedDocuments: docs.map(d => d.uri) });\n\n\t\t// notebook is still open -> cell documents stay open\n\t\tfor (const cell of notebook.apiNotebook.getCells()) {\n\t\t\tassert.ok(extHostDocuments.getDocument(cell.document.uri));\n\t\t\tassert.strictEqual(extHostDocuments.getDocument(cell.document.uri).isClosed, false);\n\t\t}\n\n\t\t// close notebook -> docs are closed\n\t\textHostNotebooks.$acceptDocumentAndEditorsDelta(new SerializableObjectWithBuffers({ removedDocuments: [notebook.uri] }));\n\t\tfor (const cell of notebook.apiNotebook.getCells()) {\n\t\t\tassert.throws(() => extHostDocuments.getDocument(cell.document.uri));\n\t\t}\n\t\tfor (const doc of docs) {\n\t\t\tassert.strictEqual(doc.isClosed, true);\n\t\t}\n\t});\n\n\ttest('cell document goes when cell is removed', async function () {\n\n\t\tassert.strictEqual(notebook.apiNotebook.cellCount, 2);\n\t\tconst [cell1, cell2] = notebook.apiNotebook.getCells();\n\n\t\textHostNotebookDocuments.$acceptModelChanged(notebook.uri, new SerializableObjectWithBuffers({\n\t\t\tversionId: 2,\n\t\t\trawEvents: [\n\t\t\t\t{\n\t\t\t\t\tkind: NotebookCellsChangeType.ModelChange,\n\t\t\t\t\tchanges: [[0, 1, []]]\n\t\t\t\t}\n\t\t\t]\n\t\t}), false);\n\n\t\tassert.strictEqual(notebook.apiNotebook.cellCount, 1);\n\t\tassert.strictEqual(cell1.document.isClosed, true); // ref still alive!\n\t\tassert.strictEqual(cell2.document.isClosed, false);\n\n\t\tassert.throws(() => extHostDocuments.getDocument(cell1.document.uri));\n\t});\n\n\ttest('cell#index', function () {\n\n\t\tassert.strictEqual(notebook.apiNotebook.cellCount, 2);\n\t\tconst [first, second] = notebook.apiNotebook.getCells();\n\t\tassert.strictEqual(first.index, 0);\n\t\tassert.strictEqual(second.index, 1);\n\n\t\t// remove first cell\n\t\textHostNotebookDocuments.$acceptModelChanged(notebook.uri, new SerializableObjectWithBuffers({\n\t\t\tversionId: notebook.apiNotebook.version + 1,\n\t\t\trawEvents: [{\n\t\t\t\tkind: NotebookCellsChangeType.ModelChange,\n\t\t\t\tchanges: [[0, 1, []]]\n\t\t\t}]\n\t\t}), false);\n\n\t\tassert.strictEqual(notebook.apiNotebook.cellCount, 1);\n\t\tassert.strictEqual(second.index, 0);\n\n\t\textHostNotebookDocuments.$acceptModelChanged(notebookUri, new SerializableObjectWithBuffers({\n\t\t\tversionId: notebook.apiNotebook.version + 1,\n\t\t\trawEvents: [{\n\t\t\t\tkind: NotebookCellsChangeType.ModelChange,\n\t\t\t\tchanges: [[0, 0, [{\n\t\t\t\t\thandle: 2,\n\t\t\t\t\turi: CellUri.generate(notebookUri, 2),\n\t\t\t\t\tsource: ['Hello', 'World', 'Hello World!'],\n\t\t\t\t\teol: '\\n',\n\t\t\t\t\tlanguage: 'test',\n\t\t\t\t\tcellKind: CellKind.Code,\n\t\t\t\t\toutputs: [],\n\t\t\t\t}, {\n\t\t\t\t\thandle: 3,\n\t\t\t\t\turi: CellUri.generate(notebookUri, 3),\n\t\t\t\t\tsource: ['Hallo', 'Welt', 'Hallo Welt!'],\n\t\t\t\t\teol: '\\n',\n\t\t\t\t\tlanguage: 'test',\n\t\t\t\t\tcellKind: CellKind.Code,\n\t\t\t\t\toutputs: [],\n\t\t\t\t}]]]\n\t\t\t}]\n\t\t}), false);\n\n\t\tassert.strictEqual(notebook.apiNotebook.cellCount, 3);\n\t\tassert.strictEqual(second.index, 2);\n\t});\n\n\ttest('ERR MISSING extHostDocument for notebook cell: #116711', async function () {\n\n\t\tconst p = Event.toPromise(extHostNotebookDocuments.onDidChangeNotebookDocument);\n\n\t\t// DON'T call this, make sure the cell-documents have not been created yet\n\t\t// assert.strictEqual(notebook.notebookDocument.cellCount, 2);\n\n\t\textHostNotebookDocuments.$acceptModelChanged(notebook.uri, new SerializableObjectWithBuffers({\n\t\t\tversionId: 100,\n\t\t\trawEvents: [{\n\t\t\t\tkind: NotebookCellsChangeType.ModelChange,\n\t\t\t\tchanges: [[0, 2, [{\n\t\t\t\t\thandle: 3,\n\t\t\t\t\turi: CellUri.generate(notebookUri, 3),\n\t\t\t\t\tsource: ['### Heading'],\n\t\t\t\t\teol: '\\n',\n\t\t\t\t\tlanguage: 'markdown',\n\t\t\t\t\tcellKind: CellKind.Markup,\n\t\t\t\t\toutputs: [],\n\t\t\t\t}, {\n\t\t\t\t\thandle: 4,\n\t\t\t\t\turi: CellUri.generate(notebookUri, 4),\n\t\t\t\t\tsource: ['console.log(\"aaa\")', 'console.log(\"bbb\")'],\n\t\t\t\t\teol: '\\n',\n\t\t\t\t\tlanguage: 'javascript',\n\t\t\t\t\tcellKind: CellKind.Code,\n\t\t\t\t\toutputs: [],\n\t\t\t\t}]]]\n\t\t\t}]\n\t\t}), false);\n\n\t\tassert.strictEqual(notebook.apiNotebook.cellCount, 2);\n\n\t\tconst event = await p;\n\n\t\tassert.strictEqual(event.notebook === notebook.apiNotebook, true);\n\t\tassert.strictEqual(event.contentChanges.length, 1);\n\t\tassert.strictEqual(event.contentChanges[0].range.end - event.contentChanges[0].range.start, 2);\n\t\tassert.strictEqual(event.contentChanges[0].removedCells[0].document.isClosed, true);\n\t\tassert.strictEqual(event.contentChanges[0].removedCells[1].document.isClosed, true);\n\t\tassert.strictEqual(event.contentChanges[0].addedCells.length, 2);\n\t\tassert.strictEqual(event.contentChanges[0].addedCells[0].document.isClosed, false);\n\t\tassert.strictEqual(event.contentChanges[0].addedCells[1].document.isClosed, false);\n\t});\n\n\n\ttest('Opening a notebook results in VS Code firing the event onDidChangeActiveNotebookEditor twice #118470', function () {\n\t\tlet count = 0;\n\t\tdisposables.add(extHostNotebooks.onDidChangeActiveNotebookEditor(() => count += 1));\n\n\t\textHostNotebooks.$acceptDocumentAndEditorsDelta(new SerializableObjectWithBuffers({\n\t\t\taddedEditors: [{\n\t\t\t\tdocumentUri: notebookUri,\n\t\t\t\tid: '_notebook_editor_2',\n\t\t\t\tselections: [{ start: 0, end: 1 }],\n\t\t\t\tvisibleRanges: []\n\t\t\t}]\n\t\t}));\n\n\t\textHostNotebooks.$acceptDocumentAndEditorsDelta(new SerializableObjectWithBuffers({\n\t\t\tnewActiveEditor: '_notebook_editor_2'\n\t\t}));\n\n\t\tassert.strictEqual(count, 1);\n\t});\n\n\ttest('unset active notebook editor', function () {\n\n\t\tconst editor = extHostNotebooks.activeNotebookEditor;\n\t\tassert.ok(editor !== undefined);\n\n\t\textHostNotebooks.$acceptDocumentAndEditorsDelta(new SerializableObjectWithBuffers({ newActiveEditor: undefined }));\n\t\tassert.ok(extHostNotebooks.activeNotebookEditor === editor);\n\n\t\textHostNotebooks.$acceptDocumentAndEditorsDelta(new SerializableObjectWithBuffers({}));\n\t\tassert.ok(extHostNotebooks.activeNotebookEditor === editor);\n\n\t\textHostNotebooks.$acceptDocumentAndEditorsDelta(new SerializableObjectWithBuffers({ newActiveEditor: null }));\n\t\tassert.ok(extHostNotebooks.activeNotebookEditor === undefined);\n\t});\n\n\ttest('change cell language triggers onDidChange events', async function () {\n\n\t\tconst first = notebook.apiNotebook.cellAt(0);\n\n\t\tassert.strictEqual(first.document.languageId, 'markdown');\n\n\t\tconst removed = Event.toPromise(extHostDocuments.onDidRemoveDocument);\n\t\tconst added = Event.toPromise(extHostDocuments.onDidAddDocument);\n\n\t\textHostNotebookDocuments.$acceptModelChanged(notebook.uri, new SerializableObjectWithBuffers({\n\t\t\tversionId: 12, rawEvents: [{\n\t\t\t\tkind: NotebookCellsChangeType.ChangeCellLanguage,\n\t\t\t\tindex: 0,\n\t\t\t\tlanguage: 'fooLang'\n\t\t\t}]\n\t\t}), false);\n\n\t\tconst removedDoc = await removed;\n\t\tconst addedDoc = await added;\n\n\t\tassert.strictEqual(first.document.languageId, 'fooLang');\n\t\tassert.ok(removedDoc === addedDoc);\n\t});\n\n\ttest('onDidChangeNotebook-event, cell changes', async function () {\n\n\t\tconst p = Event.toPromise(extHostNotebookDocuments.onDidChangeNotebookDocument);\n\n\t\textHostNotebookDocuments.$acceptModelChanged(notebook.uri, new SerializableObjectWithBuffers({\n\t\t\tversionId: 12, rawEvents: [{\n\t\t\t\tkind: NotebookCellsChangeType.ChangeCellMetadata,\n\t\t\t\tindex: 0,\n\t\t\t\tmetadata: { foo: 1 }\n\t\t\t}, {\n\t\t\t\tkind: NotebookCellsChangeType.ChangeCellMetadata,\n\t\t\t\tindex: 1,\n\t\t\t\tmetadata: { foo: 2 },\n\t\t\t}, {\n\t\t\t\tkind: NotebookCellsChangeType.Output,\n\t\t\t\tindex: 1,\n\t\t\t\toutputs: [\n\t\t\t\t\t{\n\t\t\t\t\t\titems: [{\n\t\t\t\t\t\t\tvalueBytes: VSBuffer.fromByteArray([0, 2, 3]),\n\t\t\t\t\t\t\tmime: 'text/plain'\n\t\t\t\t\t\t}],\n\t\t\t\t\t\toutputId: '1'\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}]\n\t\t}), false, undefined);\n\n\n\t\tconst event = await p;\n\n\t\tassert.strictEqual(event.notebook === notebook.apiNotebook, true);\n\t\tassert.strictEqual(event.contentChanges.length, 0);\n\t\tassert.strictEqual(event.cellChanges.length, 2);\n\n\t\tconst [first, second] = event.cellChanges;\n\t\tassert.deepStrictEqual(first.metadata, first.cell.metadata);\n\t\tassert.deepStrictEqual(first.executionSummary, undefined);\n\t\tassert.deepStrictEqual(first.outputs, undefined);\n\t\tassert.deepStrictEqual(first.document, undefined);\n\n\t\tassert.deepStrictEqual(second.outputs, second.cell.outputs);\n\t\tassert.deepStrictEqual(second.metadata, second.cell.metadata);\n\t\tassert.deepStrictEqual(second.executionSummary, undefined);\n\t\tassert.deepStrictEqual(second.document, undefined);\n\t});\n\n\ttest('onDidChangeNotebook-event, notebook metadata', async function () {\n\n\t\tconst p = Event.toPromise(extHostNotebookDocuments.onDidChangeNotebookDocument);\n\n\t\textHostNotebookDocuments.$acceptModelChanged(notebook.uri, new SerializableObjectWithBuffers({ versionId: 12, rawEvents: [] }), false, { foo: 2 });\n\n\t\tconst event = await p;\n\n\t\tassert.strictEqual(event.notebook === notebook.apiNotebook, true);\n\t\tassert.strictEqual(event.contentChanges.length, 0);\n\t\tassert.strictEqual(event.cellChanges.length, 0);\n\t\tassert.deepStrictEqual(event.metadata, { foo: 2 });\n\t});\n\n\ttest('onDidChangeNotebook-event, froozen data', async function () {\n\n\t\tconst p = Event.toPromise(extHostNotebookDocuments.onDidChangeNotebookDocument);\n\n\t\textHostNotebookDocuments.$acceptModelChanged(notebook.uri, new SerializableObjectWithBuffers({ versionId: 12, rawEvents: [] }), false, { foo: 2 });\n\n\t\tconst event = await p;\n\n\t\tassert.ok(Object.isFrozen(event));\n\t\tassert.ok(Object.isFrozen(event.cellChanges));\n\t\tassert.ok(Object.isFrozen(event.contentChanges));\n\t\tassert.ok(Object.isFrozen(event.notebook));\n\t\tassert.ok(!Object.isFrozen(event.metadata));\n\t});\n\n\ttest('change cell language and onDidChangeNotebookDocument', async function () {\n\n\t\tconst p = Event.toPromise(extHostNotebookDocuments.onDidChangeNotebookDocument);\n\n\t\tconst first = notebook.apiNotebook.cellAt(0);\n\t\tassert.strictEqual(first.document.languageId, 'markdown');\n\n\t\textHostNotebookDocuments.$acceptModelChanged(notebook.uri, new SerializableObjectWithBuffers({\n\t\t\tversionId: 12,\n\t\t\trawEvents: [{\n\t\t\t\tkind: NotebookCellsChangeType.ChangeCellLanguage,\n\t\t\t\tindex: 0,\n\t\t\t\tlanguage: 'fooLang'\n\t\t\t}]\n\t\t}), false);\n\n\t\tconst event = await p;\n\n\t\tassert.strictEqual(event.notebook === notebook.apiNotebook, true);\n\t\tassert.strictEqual(event.contentChanges.length, 0);\n\t\tassert.strictEqual(event.cellChanges.length, 1);\n\n\t\tconst [cellChange] = event.cellChanges;\n\n\t\tassert.strictEqual(cellChange.cell === first, true);\n\t\tassert.ok(cellChange.document === first.document);\n\t\tassert.ok(cellChange.executionSummary === undefined);\n\t\tassert.ok(cellChange.metadata === undefined);\n\t\tassert.ok(cellChange.outputs === undefined);\n\t});\n\n\ttest('change notebook cell document and onDidChangeNotebookDocument', async function () {\n\n\t\tconst p = Event.toPromise(extHostNotebookDocuments.onDidChangeNotebookDocument);\n\n\t\tconst first = notebook.apiNotebook.cellAt(0);\n\n\t\textHostNotebookDocuments.$acceptModelChanged(notebook.uri, new SerializableObjectWithBuffers({\n\t\t\tversionId: 12,\n\t\t\trawEvents: [{\n\t\t\t\tkind: NotebookCellsChangeType.ChangeCellContent,\n\t\t\t\tindex: 0\n\t\t\t}]\n\t\t}), false);\n\n\t\tconst event = await p;\n\n\t\tassert.strictEqual(event.notebook === notebook.apiNotebook, true);\n\t\tassert.strictEqual(event.contentChanges.length, 0);\n\t\tassert.strictEqual(event.cellChanges.length, 1);\n\n\t\tconst [cellChange] = event.cellChanges;\n\n\t\tassert.strictEqual(cellChange.cell === first, true);\n\t\tassert.ok(cellChange.document === first.document);\n\t\tassert.ok(cellChange.executionSummary === undefined);\n\t\tassert.ok(cellChange.metadata === undefined);\n\t\tassert.ok(cellChange.outputs === undefined);\n\t});\n\n\tasync function replaceOutputs(cellIndex: number, outputId: string, outputItems: NotebookOutputItemDto[]) {\n\t\tconst changeEvent = Event.toPromise(extHostNotebookDocuments.onDidChangeNotebookDocument);\n\t\textHostNotebookDocuments.$acceptModelChanged(notebook.uri, new SerializableObjectWithBuffers<NotebookCellsChangedEventDto>({\n\t\t\tversionId: notebook.apiNotebook.version + 1,\n\t\t\trawEvents: [{\n\t\t\t\tkind: NotebookCellsChangeType.Output,\n\t\t\t\tindex: cellIndex,\n\t\t\t\toutputs: [{ outputId, items: outputItems }]\n\t\t\t}]\n\t\t}), false);\n\t\tawait changeEvent;\n\t}\n\tasync function appendOutputItem(cellIndex: number, outputId: string, outputItems: NotebookOutputItemDto[]) {\n\t\tconst changeEvent = Event.toPromise(extHostNotebookDocuments.onDidChangeNotebookDocument);\n\t\textHostNotebookDocuments.$acceptModelChanged(notebook.uri, new SerializableObjectWithBuffers<NotebookCellsChangedEventDto>({\n\t\t\tversionId: notebook.apiNotebook.version + 1,\n\t\t\trawEvents: [{\n\t\t\t\tkind: NotebookCellsChangeType.OutputItem,\n\t\t\t\tindex: cellIndex,\n\t\t\t\tappend: true,\n\t\t\t\toutputId,\n\t\t\t\toutputItems\n\t\t\t}]\n\t\t}), false);\n\t\tawait changeEvent;\n\t}\n\ttest('Append multiple text/plain output items', async function () {\n\t\tawait replaceOutputs(1, '1', [{ mime: 'text/plain', valueBytes: VSBuffer.fromString('foo') }]);\n\t\tawait appendOutputItem(1, '1', [{ mime: 'text/plain', valueBytes: VSBuffer.fromString('bar') }]);\n\t\tawait appendOutputItem(1, '1', [{ mime: 'text/plain', valueBytes: VSBuffer.fromString('baz') }]);\n\n\n\t\tassert.strictEqual(notebook.apiNotebook.cellAt(1).outputs.length, 1);\n\t\tassert.strictEqual(notebook.apiNotebook.cellAt(1).outputs[0].items.length, 3);\n\t\tassert.strictEqual(notebook.apiNotebook.cellAt(1).outputs[0].items[0].mime, 'text/plain');\n\t\tassert.strictEqual(VSBuffer.wrap(notebook.apiNotebook.cellAt(1).outputs[0].items[0].data).toString(), 'foo');\n\t\tassert.strictEqual(notebook.apiNotebook.cellAt(1).outputs[0].items[1].mime, 'text/plain');\n\t\tassert.strictEqual(VSBuffer.wrap(notebook.apiNotebook.cellAt(1).outputs[0].items[1].data).toString(), 'bar');\n\t\tassert.strictEqual(notebook.apiNotebook.cellAt(1).outputs[0].items[2].mime, 'text/plain');\n\t\tassert.strictEqual(VSBuffer.wrap(notebook.apiNotebook.cellAt(1).outputs[0].items[2].data).toString(), 'baz');\n\t});\n\ttest('Append multiple stdout stream output items to an output with another mime', async function () {\n\t\tawait replaceOutputs(1, '1', [{ mime: 'text/plain', valueBytes: VSBuffer.fromString('foo') }]);\n\t\tawait appendOutputItem(1, '1', [{ mime: 'application/vnd.code.notebook.stdout', valueBytes: VSBuffer.fromString('bar') }]);\n\t\tawait appendOutputItem(1, '1', [{ mime: 'application/vnd.code.notebook.stdout', valueBytes: VSBuffer.fromString('baz') }]);\n\n\t\tassert.strictEqual(notebook.apiNotebook.cellAt(1).outputs.length, 1);\n\t\tassert.strictEqual(notebook.apiNotebook.cellAt(1).outputs[0].items.length, 3);\n\t\tassert.strictEqual(notebook.apiNotebook.cellAt(1).outputs[0].items[0].mime, 'text/plain');\n\t\tassert.strictEqual(notebook.apiNotebook.cellAt(1).outputs[0].items[1].mime, 'application/vnd.code.notebook.stdout');\n\t\tassert.strictEqual(notebook.apiNotebook.cellAt(1).outputs[0].items[2].mime, 'application/vnd.code.notebook.stdout');\n\t});\n\ttest('Compress multiple stdout stream output items', async function () {\n\t\tawait replaceOutputs(1, '1', [{ mime: 'application/vnd.code.notebook.stdout', valueBytes: VSBuffer.fromString('foo') }]);\n\t\tawait appendOutputItem(1, '1', [{ mime: 'application/vnd.code.notebook.stdout', valueBytes: VSBuffer.fromString('bar') }]);\n\t\tawait appendOutputItem(1, '1', [{ mime: 'application/vnd.code.notebook.stdout', valueBytes: VSBuffer.fromString('baz') }]);\n\n\t\tassert.strictEqual(notebook.apiNotebook.cellAt(1).outputs.length, 1);\n\t\tassert.strictEqual(notebook.apiNotebook.cellAt(1).outputs[0].items.length, 1);\n\t\tassert.strictEqual(notebook.apiNotebook.cellAt(1).outputs[0].items[0].mime, 'application/vnd.code.notebook.stdout');\n\t\tassert.strictEqual(VSBuffer.wrap(notebook.apiNotebook.cellAt(1).outputs[0].items[0].data).toString(), 'foobarbaz');\n\t});\n\ttest('Compress multiple stdout stream output items (with support for terminal escape code -> \\u001b[A)', async function () {\n\t\tawait replaceOutputs(1, '1', [{ mime: 'application/vnd.code.notebook.stdout', valueBytes: VSBuffer.fromString('\\nfoo') }]);\n\t\tawait appendOutputItem(1, '1', [{ mime: 'application/vnd.code.notebook.stdout', valueBytes: VSBuffer.fromString(`${String.fromCharCode(27)}[Abar`) }]);\n\n\t\tassert.strictEqual(notebook.apiNotebook.cellAt(1).outputs.length, 1);\n\t\tassert.strictEqual(notebook.apiNotebook.cellAt(1).outputs[0].items.length, 1);\n\t\tassert.strictEqual(notebook.apiNotebook.cellAt(1).outputs[0].items[0].mime, 'application/vnd.code.notebook.stdout');\n\t\tassert.strictEqual(VSBuffer.wrap(notebook.apiNotebook.cellAt(1).outputs[0].items[0].data).toString(), 'bar');\n\t});\n\ttest('Compress multiple stdout stream output items (with support for terminal escape code -> \\r character)', async function () {\n\t\tawait replaceOutputs(1, '1', [{ mime: 'application/vnd.code.notebook.stdout', valueBytes: VSBuffer.fromString('foo') }]);\n\t\tawait appendOutputItem(1, '1', [{ mime: 'application/vnd.code.notebook.stdout', valueBytes: VSBuffer.fromString(`\\rbar`) }]);\n\n\t\tassert.strictEqual(notebook.apiNotebook.cellAt(1).outputs.length, 1);\n\t\tassert.strictEqual(notebook.apiNotebook.cellAt(1).outputs[0].items.length, 1);\n\t\tassert.strictEqual(notebook.apiNotebook.cellAt(1).outputs[0].items[0].mime, 'application/vnd.code.notebook.stdout');\n\t\tassert.strictEqual(VSBuffer.wrap(notebook.apiNotebook.cellAt(1).outputs[0].items[0].data).toString(), 'bar');\n\t});\n\ttest('Compress multiple stderr stream output items', async function () {\n\t\tawait replaceOutputs(1, '1', [{ mime: 'application/vnd.code.notebook.stderr', valueBytes: VSBuffer.fromString('foo') }]);\n\t\tawait appendOutputItem(1, '1', [{ mime: 'application/vnd.code.notebook.stderr', valueBytes: VSBuffer.fromString('bar') }]);\n\t\tawait appendOutputItem(1, '1', [{ mime: 'application/vnd.code.notebook.stderr', valueBytes: VSBuffer.fromString('baz') }]);\n\n\t\tassert.strictEqual(notebook.apiNotebook.cellAt(1).outputs.length, 1);\n\t\tassert.strictEqual(notebook.apiNotebook.cellAt(1).outputs[0].items.length, 1);\n\t\tassert.strictEqual(notebook.apiNotebook.cellAt(1).outputs[0].items[0].mime, 'application/vnd.code.notebook.stderr');\n\t\tassert.strictEqual(VSBuffer.wrap(notebook.apiNotebook.cellAt(1).outputs[0].items[0].data).toString(), 'foobarbaz');\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
