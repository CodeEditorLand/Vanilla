import o from"assert";import{URI as S}from"../../../../base/common/uri.js";import{ExtHostDocuments as h}from"../../common/extHostDocuments.js";import{ExtHostDocumentsAndEditors as D}from"../../common/extHostDocumentsAndEditors.js";import{TextDocumentSaveReason as W,TextEdit as f,Position as I,EndOfLine as P}from"../../common/extHostTypes.js";import"../../common/extHost.protocol.js";import{ExtHostDocumentSaveParticipant as u}from"../../common/extHostDocumentSaveParticipant.js";import{SingleProxyRPCProtocol as g}from"../common/testRPCProtocol.js";import{SaveReason as l}from"../../../common/editor.js";import{mock as w}from"../../../../base/test/common/mock.js";import{NullLogService as T}from"../../../../platform/log/common/log.js";import{nullExtensionDescription as a}from"../../../services/extensions/common/extensions.js";import{ensureNoDisposablesAreLeakedInTestSuite as L}from"../../../../base/test/common/utils.js";import"../../../services/extensions/common/proxyIdentifier.js";function m(s){return new Promise(p=>setTimeout(p,s))}suite("ExtHostDocumentSaveParticipant",()=>{const s=S.parse("foo:bar"),p=new class extends w(){};let r;const d=new T;setup(()=>{const e=new D(g(null),new T);e.$acceptDocumentsAndEditorsDelta({addedDocuments:[{isDirty:!1,languageId:"foo",uri:s,versionId:1,lines:["foo"],EOL:`
`}]}),r=new h(g(null),e)}),L(),test("no listeners, no problem",()=>new u(d,r,p).$participateInSave(s,l.EXPLICIT).then(()=>o.ok(!0))),test("event delivery",()=>{const e=new u(d,r,p);let t;const n=e.getOnWillSaveTextDocumentEvent(a)(function(i){t=i});return e.$participateInSave(s,l.EXPLICIT).then(()=>{n.dispose(),o.ok(t),o.strictEqual(t.reason,W.Manual),o.strictEqual(typeof t.waitUntil,"function")})}),test("event delivery, immutable",()=>{const e=new u(d,r,p);let t;const n=e.getOnWillSaveTextDocumentEvent(a)(function(i){t=i});return e.$participateInSave(s,l.EXPLICIT).then(()=>{n.dispose(),o.ok(t),o.throws(()=>{t.document=null})})}),test("event delivery, bad listener",()=>{const e=new u(d,r,p),t=e.getOnWillSaveTextDocumentEvent(a)(function(n){throw new Error("\u{1F480}")});return e.$participateInSave(s,l.EXPLICIT).then(n=>{t.dispose();const[i]=n;o.strictEqual(i,!1)})}),test("event delivery, bad listener doesn't prevent more events",()=>{const e=new u(d,r,p),t=e.getOnWillSaveTextDocumentEvent(a)(function(c){throw new Error("\u{1F480}")});let n;const i=e.getOnWillSaveTextDocumentEvent(a)(function(c){n=c});return e.$participateInSave(s,l.EXPLICIT).then(()=>{t.dispose(),i.dispose(),o.ok(n)})}),test("event delivery, in subscriber order",()=>{const e=new u(d,r,p);let t=0;const n=e.getOnWillSaveTextDocumentEvent(a)(function(c){o.strictEqual(t++,0)}),i=e.getOnWillSaveTextDocumentEvent(a)(function(c){o.strictEqual(t++,1)});return e.$participateInSave(s,l.EXPLICIT).then(()=>{n.dispose(),i.dispose()})}),test("event delivery, ignore bad listeners",async()=>{const e=new u(d,r,p,{timeout:5,errors:1});let t=0;const n=e.getOnWillSaveTextDocumentEvent(a)(function(i){throw t+=1,new Error("boom")});await e.$participateInSave(s,l.EXPLICIT),await e.$participateInSave(s,l.EXPLICIT),await e.$participateInSave(s,l.EXPLICIT),await e.$participateInSave(s,l.EXPLICIT),n.dispose(),o.strictEqual(t,2)}),test("event delivery, overall timeout",async function(){const e=new u(d,r,p,{timeout:20,errors:5}),t=[],n=e.getOnWillSaveTextDocumentEvent(a)(function(E){t.push(1)}),i=e.getOnWillSaveTextDocumentEvent(a)(function(E){t.push(2),E.waitUntil(m(100))}),c=e.getOnWillSaveTextDocumentEvent(a)(function(E){t.push(3)}),v=await e.$participateInSave(s,l.EXPLICIT);n.dispose(),i.dispose(),c.dispose(),o.deepStrictEqual(t,[1,2]),o.strictEqual(v.length,2)}),test("event delivery, waitUntil",()=>{const e=new u(d,r,p),t=e.getOnWillSaveTextDocumentEvent(a)(function(n){n.waitUntil(m(10)),n.waitUntil(m(10)),n.waitUntil(m(10))});return e.$participateInSave(s,l.EXPLICIT).then(()=>{t.dispose()})}),test("event delivery, waitUntil must be called sync",()=>{const e=new u(d,r,p),t=e.getOnWillSaveTextDocumentEvent(a)(function(n){n.waitUntil(new Promise((i,c)=>{setTimeout(()=>{try{o.throws(()=>n.waitUntil(m(10))),i(void 0)}catch(v){c(v)}},10)}))});return e.$participateInSave(s,l.EXPLICIT).then(()=>{t.dispose()})}),test("event delivery, waitUntil will timeout",function(){const e=new u(d,r,p,{timeout:5,errors:3}),t=e.getOnWillSaveTextDocumentEvent(a)(function(n){n.waitUntil(m(100))});return e.$participateInSave(s,l.EXPLICIT).then(n=>{t.dispose();const[i]=n;o.strictEqual(i,!1)})}),test("event delivery, waitUntil failure handling",()=>{const e=new u(d,r,p),t=e.getOnWillSaveTextDocumentEvent(a)(function(c){c.waitUntil(Promise.reject(new Error("dddd")))});let n;const i=e.getOnWillSaveTextDocumentEvent(a)(function(c){n=c});return e.$participateInSave(s,l.EXPLICIT).then(()=>{o.ok(n),t.dispose(),i.dispose()})}),test("event delivery, pushEdits sync",()=>{let e;const t=new u(d,r,new class extends w(){$tryApplyWorkspaceEdit(i){return e=i.value,Promise.resolve(!0)}}),n=t.getOnWillSaveTextDocumentEvent(a)(function(i){i.waitUntil(Promise.resolve([f.insert(new I(0,0),"bar")])),i.waitUntil(Promise.resolve([f.setEndOfLine(P.CRLF)]))});return t.$participateInSave(s,l.EXPLICIT).then(()=>{n.dispose(),o.strictEqual(e.edits.length,2),o.ok(e.edits[0].textEdit),o.ok(e.edits[1].textEdit)})}),test("event delivery, concurrent change",()=>{let e;const t=new u(d,r,new class extends w(){$tryApplyWorkspaceEdit(i){return e=i.value,Promise.resolve(!0)}}),n=t.getOnWillSaveTextDocumentEvent(a)(function(i){r.$acceptModelChanged(s,{changes:[{range:{startLineNumber:1,startColumn:1,endLineNumber:1,endColumn:1},rangeOffset:void 0,rangeLength:void 0,text:"bar"}],eol:void 0,versionId:2,isRedoing:!1,isUndoing:!1},!0),i.waitUntil(Promise.resolve([f.insert(new I(0,0),"bar")]))});return t.$participateInSave(s,l.EXPLICIT).then(i=>{n.dispose(),o.strictEqual(e,void 0),o.strictEqual(i[0],!1)})}),test("event delivery, two listeners -> two document states",()=>{const e=new u(d,r,new class extends w(){$tryApplyWorkspaceEdit(c){for(const v of c.value.edits){const E=S.revive(v.resource),{text:x,range:b}=v.textEdit;r.$acceptModelChanged(E,{changes:[{range:b,text:x,rangeOffset:void 0,rangeLength:void 0}],eol:void 0,versionId:r.getDocumentData(E).version+1,isRedoing:!1,isUndoing:!1},!0)}return Promise.resolve(!0)}}),t=r.getDocument(s),n=e.getOnWillSaveTextDocumentEvent(a)(function(c){o.strictEqual(t.version,1),o.strictEqual(t.getText(),"foo"),c.waitUntil(Promise.resolve([f.insert(new I(0,0),"bar")]))}),i=e.getOnWillSaveTextDocumentEvent(a)(function(c){o.strictEqual(t.version,2),o.strictEqual(t.getText(),"barfoo"),c.waitUntil(Promise.resolve([f.insert(new I(0,0),"bar")]))});return e.$participateInSave(s,l.EXPLICIT).then(c=>{n.dispose(),i.dispose(),o.strictEqual(t.version,3),o.strictEqual(t.getText(),"barbarfoo")})}),test("Log failing listener",function(){let e=!1;const t=new u(new class extends T{error(i,...c){e=!0}},r,p),n=t.getOnWillSaveTextDocumentEvent(a)(function(i){throw new Error("boom")});return t.$participateInSave(s,l.EXPLICIT).then(()=>{n.dispose(),o.strictEqual(e,!0)})})});
