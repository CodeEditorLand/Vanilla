{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/test/browser/extHostDocumentContentProvider.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { URI, UriComponents } from '../../../../base/common/uri.js';\nimport { ExtHostDocumentsAndEditors } from '../../common/extHostDocumentsAndEditors.js';\nimport { SingleProxyRPCProtocol } from '../common/testRPCProtocol.js';\nimport { NullLogService } from '../../../../platform/log/common/log.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\nimport { ExtHostDocumentContentProvider } from '../../common/extHostDocumentContentProviders.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { MainThreadDocumentContentProvidersShape } from '../../common/extHost.protocol.js';\nimport { timeout } from '../../../../base/common/async.js';\nimport { runWithFakedTimers } from '../../../../base/test/common/timeTravelScheduler.js';\n\nsuite('ExtHostDocumentContentProvider', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tconst resource = URI.parse('foo:bar');\n\tlet documentContentProvider: ExtHostDocumentContentProvider;\n\tlet mainThreadContentProvider: MainThreadDocumentContentProvidersShape;\n\tconst changes: [uri: UriComponents, value: string][] = [];\n\n\tsetup(() => {\n\n\t\tchanges.length = 0;\n\n\t\tmainThreadContentProvider = new class implements MainThreadDocumentContentProvidersShape {\n\t\t\t$registerTextContentProvider(handle: number, scheme: string): void {\n\n\t\t\t}\n\t\t\t$unregisterTextContentProvider(handle: number): void {\n\n\t\t\t}\n\t\t\tasync $onVirtualDocumentChange(uri: UriComponents, value: string): Promise<void> {\n\t\t\t\tawait timeout(10);\n\t\t\t\tchanges.push([uri, value]);\n\t\t\t}\n\t\t\tdispose(): void {\n\t\t\t\tthrow new Error('Method not implemented.');\n\t\t\t}\n\t\t};\n\n\t\tconst ehContext = SingleProxyRPCProtocol(mainThreadContentProvider);\n\t\tconst documentsAndEditors = new ExtHostDocumentsAndEditors(ehContext, new NullLogService());\n\t\tdocumentsAndEditors.$acceptDocumentsAndEditorsDelta({\n\t\t\taddedDocuments: [{\n\t\t\t\tisDirty: false,\n\t\t\t\tlanguageId: 'foo',\n\t\t\t\turi: resource,\n\t\t\t\tversionId: 1,\n\t\t\t\tlines: ['foo'],\n\t\t\t\tEOL: '\\n',\n\t\t\t}]\n\t\t});\n\t\tdocumentContentProvider = new ExtHostDocumentContentProvider(ehContext, documentsAndEditors, new NullLogService());\n\t});\n\n\ttest('TextDocumentContentProvider drops onDidChange events when they happen quickly #179711', async () => {\n\t\tawait runWithFakedTimers({}, async function () {\n\n\t\t\tconst emitter = new Emitter<URI>();\n\t\t\tconst contents = ['X', 'Y'];\n\t\t\tlet counter = 0;\n\n\t\t\tlet stack = 0;\n\n\t\t\tconst d = documentContentProvider.registerTextDocumentContentProvider(resource.scheme, {\n\t\t\t\tonDidChange: emitter.event,\n\t\t\t\tasync provideTextDocumentContent(_uri) {\n\t\t\t\t\tassert.strictEqual(stack, 0);\n\t\t\t\t\tstack++;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait timeout(0);\n\t\t\t\t\t\treturn contents[counter++ % contents.length];\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tstack--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\temitter.fire(resource);\n\t\t\temitter.fire(resource);\n\n\t\t\tawait timeout(100);\n\n\t\t\tassert.strictEqual(changes.length, 2);\n\t\t\tassert.strictEqual(changes[0][1], 'X');\n\t\t\tassert.strictEqual(changes[1][1], 'Y');\n\n\t\t\td.dispose();\n\t\t});\n\t});\n\n\n});\n"],
  "mappings": "AAKA,OAAO,YAAY;AACnB,SAAS,KAAK,qBAAqB;AACnC,SAAS,kCAAkC;AAC3C,SAAS,8BAA8B;AACvC,SAAS,sBAAsB;AAC/B,SAAS,+CAA+C;AACxD,SAAS,sCAAsC;AAC/C,SAAS,eAAe;AACxB,SAAS,+CAA+C;AACxD,SAAS,eAAe;AACxB,SAAS,0BAA0B;AAEnC,MAAM,kCAAkC,MAAM;AAE7C,0CAAwC;AAExC,QAAM,WAAW,IAAI,MAAM,SAAS;AACpC,MAAI;AACJ,MAAI;AACJ,QAAM,UAAiD,CAAC;AAExD,QAAM,MAAM;AAEX,YAAQ,SAAS;AAEjB,gCAA4B,IAAI,MAAyD;AAAA,MACxF,6BAA6B,QAAgB,QAAsB;AAAA,MAEnE;AAAA,MACA,+BAA+B,QAAsB;AAAA,MAErD;AAAA,MACA,MAAM,yBAAyB,KAAoB,OAA8B;AAChF,cAAM,QAAQ,EAAE;AAChB,gBAAQ,KAAK,CAAC,KAAK,KAAK,CAAC;AAAA,MAC1B;AAAA,MACA,UAAgB;AACf,cAAM,IAAI,MAAM,yBAAyB;AAAA,MAC1C;AAAA,IACD;AAEA,UAAM,YAAY,uBAAuB,yBAAyB;AAClE,UAAM,sBAAsB,IAAI,2BAA2B,WAAW,IAAI,eAAe,CAAC;AAC1F,wBAAoB,gCAAgC;AAAA,MACnD,gBAAgB,CAAC;AAAA,QAChB,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,KAAK;AAAA,QACL,WAAW;AAAA,QACX,OAAO,CAAC,KAAK;AAAA,QACb,KAAK;AAAA,MACN,CAAC;AAAA,IACF,CAAC;AACD,8BAA0B,IAAI,+BAA+B,WAAW,qBAAqB,IAAI,eAAe,CAAC;AAAA,EAClH,CAAC;AAED,OAAK,yFAAyF,YAAY;AACzG,UAAM,mBAAmB,CAAC,GAAG,iBAAkB;AAE9C,YAAM,UAAU,IAAI,QAAa;AACjC,YAAM,WAAW,CAAC,KAAK,GAAG;AAC1B,UAAI,UAAU;AAEd,UAAI,QAAQ;AAEZ,YAAM,IAAI,wBAAwB,oCAAoC,SAAS,QAAQ;AAAA,QACtF,aAAa,QAAQ;AAAA,QACrB,MAAM,2BAA2B,MAAM;AACtC,iBAAO,YAAY,OAAO,CAAC;AAC3B;AACA,cAAI;AACH,kBAAM,QAAQ,CAAC;AACf,mBAAO,SAAS,YAAY,SAAS,MAAM;AAAA,UAC5C,UAAE;AACD;AAAA,UACD;AAAA,QACD;AAAA,MACD,CAAC;AAED,cAAQ,KAAK,QAAQ;AACrB,cAAQ,KAAK,QAAQ;AAErB,YAAM,QAAQ,GAAG;AAEjB,aAAO,YAAY,QAAQ,QAAQ,CAAC;AACpC,aAAO,YAAY,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG;AACrC,aAAO,YAAY,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG;AAErC,QAAE,QAAQ;AAAA,IACX,CAAC;AAAA,EACF,CAAC;AAGF,CAAC;",
  "names": []
}
