{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/test/browser/extHostTypes.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { URI } from '../../../../base/common/uri.js';\nimport * as types from '../../common/extHostTypes.js';\nimport { isWindows } from '../../../../base/common/platform.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { Mimes } from '../../../../base/common/mime.js';\nimport { MarshalledId } from '../../../../base/common/marshallingIds.js';\nimport { CancellationError } from '../../../../base/common/errors.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\n\nfunction assertToJSON(a: any, expected: any) {\n\tconst raw = JSON.stringify(a);\n\tconst actual = JSON.parse(raw);\n\tassert.deepStrictEqual(actual, expected);\n}\n\nsuite('ExtHostTypes', function () {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('URI, toJSON', function () {\n\n\t\tconst uri = URI.parse('file:///path/test.file');\n\t\tassert.deepStrictEqual(uri.toJSON(), {\n\t\t\t$mid: MarshalledId.Uri,\n\t\t\tscheme: 'file',\n\t\t\tpath: '/path/test.file'\n\t\t});\n\n\t\tassert.ok(uri.fsPath);\n\t\tassert.deepStrictEqual(uri.toJSON(), {\n\t\t\t$mid: MarshalledId.Uri,\n\t\t\tscheme: 'file',\n\t\t\tpath: '/path/test.file',\n\t\t\tfsPath: '/path/test.file'.replace(/\\//g, isWindows ? '\\\\' : '/'),\n\t\t\t_sep: isWindows ? 1 : undefined,\n\t\t});\n\n\t\tassert.ok(uri.toString());\n\t\tassert.deepStrictEqual(uri.toJSON(), {\n\t\t\t$mid: MarshalledId.Uri,\n\t\t\tscheme: 'file',\n\t\t\tpath: '/path/test.file',\n\t\t\tfsPath: '/path/test.file'.replace(/\\//g, isWindows ? '\\\\' : '/'),\n\t\t\t_sep: isWindows ? 1 : undefined,\n\t\t\texternal: 'file:///path/test.file'\n\t\t});\n\t});\n\n\ttest('Disposable', () => {\n\n\t\tlet count = 0;\n\t\tconst d = new types.Disposable(() => {\n\t\t\tcount += 1;\n\t\t\treturn 12;\n\t\t});\n\t\td.dispose();\n\t\tassert.strictEqual(count, 1);\n\n\t\td.dispose();\n\t\tassert.strictEqual(count, 1);\n\n\t\ttypes.Disposable.from(undefined!, { dispose() { count += 1; } }).dispose();\n\t\tassert.strictEqual(count, 2);\n\n\n\t\tassert.throws(() => {\n\t\t\tnew types.Disposable(() => {\n\t\t\t\tthrow new Error();\n\t\t\t}).dispose();\n\t\t});\n\n\t\tnew types.Disposable(undefined!).dispose();\n\n\t});\n\n\ttest('Position', () => {\n\t\tassert.throws(() => new types.Position(-1, 0));\n\t\tassert.throws(() => new types.Position(0, -1));\n\n\t\tconst pos = new types.Position(0, 0);\n\t\tassert.throws(() => (pos as any).line = -1);\n\t\tassert.throws(() => (pos as any).character = -1);\n\t\tassert.throws(() => (pos as any).line = 12);\n\n\t\tconst { line, character } = pos.toJSON();\n\t\tassert.strictEqual(line, 0);\n\t\tassert.strictEqual(character, 0);\n\t});\n\n\ttest('Position, toJSON', function () {\n\t\tconst pos = new types.Position(4, 2);\n\t\tassertToJSON(pos, { line: 4, character: 2 });\n\t});\n\n\ttest('Position, isBefore(OrEqual)?', function () {\n\t\tconst p1 = new types.Position(1, 3);\n\t\tconst p2 = new types.Position(1, 2);\n\t\tconst p3 = new types.Position(0, 4);\n\n\t\tassert.ok(p1.isBeforeOrEqual(p1));\n\t\tassert.ok(!p1.isBefore(p1));\n\t\tassert.ok(p2.isBefore(p1));\n\t\tassert.ok(p3.isBefore(p2));\n\t});\n\n\ttest('Position, isAfter(OrEqual)?', function () {\n\t\tconst p1 = new types.Position(1, 3);\n\t\tconst p2 = new types.Position(1, 2);\n\t\tconst p3 = new types.Position(0, 4);\n\n\t\tassert.ok(p1.isAfterOrEqual(p1));\n\t\tassert.ok(!p1.isAfter(p1));\n\t\tassert.ok(p1.isAfter(p2));\n\t\tassert.ok(p2.isAfter(p3));\n\t\tassert.ok(p1.isAfter(p3));\n\t});\n\n\ttest('Position, compareTo', function () {\n\t\tconst p1 = new types.Position(1, 3);\n\t\tconst p2 = new types.Position(1, 2);\n\t\tconst p3 = new types.Position(0, 4);\n\n\t\tassert.strictEqual(p1.compareTo(p1), 0);\n\t\tassert.strictEqual(p2.compareTo(p1), -1);\n\t\tassert.strictEqual(p1.compareTo(p2), 1);\n\t\tassert.strictEqual(p2.compareTo(p3), 1);\n\t\tassert.strictEqual(p1.compareTo(p3), 1);\n\t});\n\n\ttest('Position, translate', function () {\n\t\tconst p1 = new types.Position(1, 3);\n\n\t\tassert.ok(p1.translate() === p1);\n\t\tassert.ok(p1.translate({}) === p1);\n\t\tassert.ok(p1.translate(0, 0) === p1);\n\t\tassert.ok(p1.translate(0) === p1);\n\t\tassert.ok(p1.translate(undefined, 0) === p1);\n\t\tassert.ok(p1.translate(undefined) === p1);\n\n\t\tlet res = p1.translate(-1);\n\t\tassert.strictEqual(res.line, 0);\n\t\tassert.strictEqual(res.character, 3);\n\n\t\tres = p1.translate({ lineDelta: -1 });\n\t\tassert.strictEqual(res.line, 0);\n\t\tassert.strictEqual(res.character, 3);\n\n\t\tres = p1.translate(undefined, -1);\n\t\tassert.strictEqual(res.line, 1);\n\t\tassert.strictEqual(res.character, 2);\n\n\t\tres = p1.translate({ characterDelta: -1 });\n\t\tassert.strictEqual(res.line, 1);\n\t\tassert.strictEqual(res.character, 2);\n\n\t\tres = p1.translate(11);\n\t\tassert.strictEqual(res.line, 12);\n\t\tassert.strictEqual(res.character, 3);\n\n\t\tassert.throws(() => p1.translate(null!));\n\t\tassert.throws(() => p1.translate(null!, null!));\n\t\tassert.throws(() => p1.translate(-2));\n\t\tassert.throws(() => p1.translate({ lineDelta: -2 }));\n\t\tassert.throws(() => p1.translate(-2, null!));\n\t\tassert.throws(() => p1.translate(0, -4));\n\t});\n\n\ttest('Position, with', function () {\n\t\tconst p1 = new types.Position(1, 3);\n\n\t\tassert.ok(p1.with() === p1);\n\t\tassert.ok(p1.with(1) === p1);\n\t\tassert.ok(p1.with(undefined, 3) === p1);\n\t\tassert.ok(p1.with(1, 3) === p1);\n\t\tassert.ok(p1.with(undefined) === p1);\n\t\tassert.ok(p1.with({ line: 1 }) === p1);\n\t\tassert.ok(p1.with({ character: 3 }) === p1);\n\t\tassert.ok(p1.with({ line: 1, character: 3 }) === p1);\n\n\t\tconst p2 = p1.with({ line: 0, character: 11 });\n\t\tassert.strictEqual(p2.line, 0);\n\t\tassert.strictEqual(p2.character, 11);\n\n\t\tassert.throws(() => p1.with(null!));\n\t\tassert.throws(() => p1.with(-9));\n\t\tassert.throws(() => p1.with(0, -9));\n\t\tassert.throws(() => p1.with({ line: -1 }));\n\t\tassert.throws(() => p1.with({ character: -1 }));\n\t});\n\n\ttest('Range', () => {\n\t\tassert.throws(() => new types.Range(-1, 0, 0, 0));\n\t\tassert.throws(() => new types.Range(0, -1, 0, 0));\n\t\tassert.throws(() => new types.Range(new types.Position(0, 0), undefined!));\n\t\tassert.throws(() => new types.Range(new types.Position(0, 0), null!));\n\t\tassert.throws(() => new types.Range(undefined!, new types.Position(0, 0)));\n\t\tassert.throws(() => new types.Range(null!, new types.Position(0, 0)));\n\n\t\tconst range = new types.Range(1, 0, 0, 0);\n\t\tassert.throws(() => { (range as any).start = null; });\n\t\tassert.throws(() => { (range as any).start = new types.Position(0, 3); });\n\t});\n\n\ttest('Range, toJSON', function () {\n\n\t\tconst range = new types.Range(1, 2, 3, 4);\n\t\tassertToJSON(range, [{ line: 1, character: 2 }, { line: 3, character: 4 }]);\n\t});\n\n\ttest('Range, sorting', function () {\n\t\t// sorts start/end\n\t\tlet range = new types.Range(1, 0, 0, 0);\n\t\tassert.strictEqual(range.start.line, 0);\n\t\tassert.strictEqual(range.end.line, 1);\n\n\t\trange = new types.Range(0, 0, 1, 0);\n\t\tassert.strictEqual(range.start.line, 0);\n\t\tassert.strictEqual(range.end.line, 1);\n\t});\n\n\ttest('Range, isEmpty|isSingleLine', function () {\n\t\tlet range = new types.Range(1, 0, 0, 0);\n\t\tassert.ok(!range.isEmpty);\n\t\tassert.ok(!range.isSingleLine);\n\n\t\trange = new types.Range(1, 1, 1, 1);\n\t\tassert.ok(range.isEmpty);\n\t\tassert.ok(range.isSingleLine);\n\n\t\trange = new types.Range(0, 1, 0, 11);\n\t\tassert.ok(!range.isEmpty);\n\t\tassert.ok(range.isSingleLine);\n\n\t\trange = new types.Range(0, 0, 1, 1);\n\t\tassert.ok(!range.isEmpty);\n\t\tassert.ok(!range.isSingleLine);\n\t});\n\n\ttest('Range, contains', function () {\n\t\tconst range = new types.Range(1, 1, 2, 11);\n\n\t\tassert.ok(range.contains(range.start));\n\t\tassert.ok(range.contains(range.end));\n\t\tassert.ok(range.contains(range));\n\n\t\tassert.ok(!range.contains(new types.Range(1, 0, 2, 11)));\n\t\tassert.ok(!range.contains(new types.Range(0, 1, 2, 11)));\n\t\tassert.ok(!range.contains(new types.Range(1, 1, 2, 12)));\n\t\tassert.ok(!range.contains(new types.Range(1, 1, 3, 11)));\n\t});\n\n\ttest('Range, contains (no instanceof)', function () {\n\t\tconst range = new types.Range(1, 1, 2, 11);\n\n\t\tconst startLike = { line: range.start.line, character: range.start.character };\n\t\tconst endLike = { line: range.end.line, character: range.end.character };\n\t\tconst rangeLike = { start: startLike, end: endLike };\n\n\t\tassert.ok(range.contains((<types.Position>startLike)));\n\t\tassert.ok(range.contains((<types.Position>endLike)));\n\t\tassert.ok(range.contains((<types.Range>rangeLike)));\n\t});\n\n\ttest('Range, intersection', function () {\n\t\tconst range = new types.Range(1, 1, 2, 11);\n\t\tlet res: types.Range;\n\n\t\tres = range.intersection(range)!;\n\t\tassert.strictEqual(res.start.line, 1);\n\t\tassert.strictEqual(res.start.character, 1);\n\t\tassert.strictEqual(res.end.line, 2);\n\t\tassert.strictEqual(res.end.character, 11);\n\n\t\tres = range.intersection(new types.Range(2, 12, 4, 0))!;\n\t\tassert.strictEqual(res, undefined);\n\n\t\tres = range.intersection(new types.Range(0, 0, 1, 0))!;\n\t\tassert.strictEqual(res, undefined);\n\n\t\tres = range.intersection(new types.Range(0, 0, 1, 1))!;\n\t\tassert.ok(res.isEmpty);\n\t\tassert.strictEqual(res.start.line, 1);\n\t\tassert.strictEqual(res.start.character, 1);\n\n\t\tres = range.intersection(new types.Range(2, 11, 61, 1))!;\n\t\tassert.ok(res.isEmpty);\n\t\tassert.strictEqual(res.start.line, 2);\n\t\tassert.strictEqual(res.start.character, 11);\n\n\t\tassert.throws(() => range.intersection(null!));\n\t\tassert.throws(() => range.intersection(undefined!));\n\t});\n\n\ttest('Range, union', function () {\n\t\tlet ran1 = new types.Range(0, 0, 5, 5);\n\t\tassert.ok(ran1.union(new types.Range(0, 0, 1, 1)) === ran1);\n\n\t\tlet res: types.Range;\n\t\tres = ran1.union(new types.Range(2, 2, 9, 9));\n\t\tassert.ok(res.start === ran1.start);\n\t\tassert.strictEqual(res.end.line, 9);\n\t\tassert.strictEqual(res.end.character, 9);\n\n\t\tran1 = new types.Range(2, 1, 5, 3);\n\t\tres = ran1.union(new types.Range(1, 0, 4, 2));\n\t\tassert.ok(res.end === ran1.end);\n\t\tassert.strictEqual(res.start.line, 1);\n\t\tassert.strictEqual(res.start.character, 0);\n\t});\n\n\ttest('Range, with', function () {\n\t\tconst range = new types.Range(1, 1, 2, 11);\n\n\t\tassert.ok(range.with(range.start) === range);\n\t\tassert.ok(range.with(undefined, range.end) === range);\n\t\tassert.ok(range.with(range.start, range.end) === range);\n\t\tassert.ok(range.with(new types.Position(1, 1)) === range);\n\t\tassert.ok(range.with(undefined, new types.Position(2, 11)) === range);\n\t\tassert.ok(range.with() === range);\n\t\tassert.ok(range.with({ start: range.start }) === range);\n\t\tassert.ok(range.with({ start: new types.Position(1, 1) }) === range);\n\t\tassert.ok(range.with({ end: range.end }) === range);\n\t\tassert.ok(range.with({ end: new types.Position(2, 11) }) === range);\n\n\t\tlet res = range.with(undefined, new types.Position(9, 8));\n\t\tassert.strictEqual(res.end.line, 9);\n\t\tassert.strictEqual(res.end.character, 8);\n\t\tassert.strictEqual(res.start.line, 1);\n\t\tassert.strictEqual(res.start.character, 1);\n\n\t\tres = range.with({ end: new types.Position(9, 8) });\n\t\tassert.strictEqual(res.end.line, 9);\n\t\tassert.strictEqual(res.end.character, 8);\n\t\tassert.strictEqual(res.start.line, 1);\n\t\tassert.strictEqual(res.start.character, 1);\n\n\t\tres = range.with({ end: new types.Position(9, 8), start: new types.Position(2, 3) });\n\t\tassert.strictEqual(res.end.line, 9);\n\t\tassert.strictEqual(res.end.character, 8);\n\t\tassert.strictEqual(res.start.line, 2);\n\t\tassert.strictEqual(res.start.character, 3);\n\n\t\tassert.throws(() => range.with(null!));\n\t\tassert.throws(() => range.with(undefined, null!));\n\t});\n\n\ttest('TextEdit', () => {\n\n\t\tconst range = new types.Range(1, 1, 2, 11);\n\t\tlet edit = new types.TextEdit(range, undefined!);\n\t\tassert.strictEqual(edit.newText, '');\n\t\tassertToJSON(edit, { range: [{ line: 1, character: 1 }, { line: 2, character: 11 }], newText: '' });\n\n\t\tedit = new types.TextEdit(range, null);\n\t\tassert.strictEqual(edit.newText, '');\n\n\t\tedit = new types.TextEdit(range, '');\n\t\tassert.strictEqual(edit.newText, '');\n\t});\n\n\ttest('WorkspaceEdit', () => {\n\n\t\tconst a = URI.file('a.ts');\n\t\tconst b = URI.file('b.ts');\n\n\t\tconst edit = new types.WorkspaceEdit();\n\t\tassert.ok(!edit.has(a));\n\n\t\tedit.set(a, [types.TextEdit.insert(new types.Position(0, 0), 'fff')]);\n\t\tassert.ok(edit.has(a));\n\t\tassert.strictEqual(edit.size, 1);\n\t\tassertToJSON(edit, [[a.toJSON(), [{ range: [{ line: 0, character: 0 }, { line: 0, character: 0 }], newText: 'fff' }]]]);\n\n\t\tedit.insert(b, new types.Position(1, 1), 'fff');\n\t\tedit.delete(b, new types.Range(0, 0, 0, 0));\n\t\tassert.ok(edit.has(b));\n\t\tassert.strictEqual(edit.size, 2);\n\t\tassertToJSON(edit, [\n\t\t\t[a.toJSON(), [{ range: [{ line: 0, character: 0 }, { line: 0, character: 0 }], newText: 'fff' }]],\n\t\t\t[b.toJSON(), [{ range: [{ line: 1, character: 1 }, { line: 1, character: 1 }], newText: 'fff' }, { range: [{ line: 0, character: 0 }, { line: 0, character: 0 }], newText: '' }]]\n\t\t]);\n\n\t\tedit.set(b, undefined!);\n\t\tassert.ok(!edit.has(b));\n\t\tassert.strictEqual(edit.size, 1);\n\n\t\tedit.set(b, [types.TextEdit.insert(new types.Position(0, 0), 'ffff')]);\n\t\tassert.strictEqual(edit.get(b).length, 1);\n\t});\n\n\ttest('WorkspaceEdit - keep order of text and file changes', function () {\n\n\t\tconst edit = new types.WorkspaceEdit();\n\t\tedit.replace(URI.parse('foo:a'), new types.Range(1, 1, 1, 1), 'foo');\n\t\tedit.renameFile(URI.parse('foo:a'), URI.parse('foo:b'));\n\t\tedit.replace(URI.parse('foo:a'), new types.Range(2, 1, 2, 1), 'bar');\n\t\tedit.replace(URI.parse('foo:b'), new types.Range(3, 1, 3, 1), 'bazz');\n\n\t\tconst all = edit._allEntries();\n\t\tassert.strictEqual(all.length, 4);\n\n\t\tconst [first, second, third, fourth] = all;\n\t\tassertType(first._type === types.FileEditType.Text);\n\t\tassert.strictEqual(first.uri.toString(), 'foo:a');\n\n\t\tassertType(second._type === types.FileEditType.File);\n\t\tassert.strictEqual(second.from!.toString(), 'foo:a');\n\t\tassert.strictEqual(second.to!.toString(), 'foo:b');\n\n\t\tassertType(third._type === types.FileEditType.Text);\n\t\tassert.strictEqual(third.uri.toString(), 'foo:a');\n\n\t\tassertType(fourth._type === types.FileEditType.Text);\n\t\tassert.strictEqual(fourth.uri.toString(), 'foo:b');\n\t});\n\n\ttest('WorkspaceEdit - two edits for one resource', function () {\n\t\tconst edit = new types.WorkspaceEdit();\n\t\tconst uri = URI.parse('foo:bar');\n\t\tedit.insert(uri, new types.Position(0, 0), 'Hello');\n\t\tedit.insert(uri, new types.Position(0, 0), 'Foo');\n\n\t\tassert.strictEqual(edit._allEntries().length, 2);\n\t\tconst [first, second] = edit._allEntries();\n\n\t\tassertType(first._type === types.FileEditType.Text);\n\t\tassertType(second._type === types.FileEditType.Text);\n\t\tassert.strictEqual(first.edit.newText, 'Hello');\n\t\tassert.strictEqual(second.edit.newText, 'Foo');\n\t});\n\n\ttest('WorkspaceEdit - set with metadata accepts undefined', function () {\n\t\tconst edit = new types.WorkspaceEdit();\n\t\tconst uri = URI.parse('foo:bar');\n\n\t\tedit.set(uri, [\n\t\t\t[types.TextEdit.insert(new types.Position(0, 0), 'Hello'), { needsConfirmation: true, label: 'foo' }],\n\t\t\t[types.TextEdit.insert(new types.Position(0, 0), 'Hello'), undefined],\n\t\t]);\n\n\t\tconst all = edit._allEntries();\n\t\tassert.strictEqual(all.length, 2);\n\t\tconst [first, second] = all;\n\t\tassert.ok(first.metadata);\n\t\tassert.ok(!second.metadata);\n\t});\n\n\ttest('DocumentLink', () => {\n\t\tassert.throws(() => new types.DocumentLink(null!, null!));\n\t\tassert.throws(() => new types.DocumentLink(new types.Range(1, 1, 1, 1), null!));\n\t});\n\n\ttest('toJSON & stringify', function () {\n\n\t\tassertToJSON(new types.Selection(3, 4, 2, 1), { start: { line: 2, character: 1 }, end: { line: 3, character: 4 }, anchor: { line: 3, character: 4 }, active: { line: 2, character: 1 } });\n\n\t\tassertToJSON(new types.Location(URI.file('u.ts'), new types.Position(3, 4)), { uri: URI.parse('file:///u.ts').toJSON(), range: [{ line: 3, character: 4 }, { line: 3, character: 4 }] });\n\t\tassertToJSON(new types.Location(URI.file('u.ts'), new types.Range(1, 2, 3, 4)), { uri: URI.parse('file:///u.ts').toJSON(), range: [{ line: 1, character: 2 }, { line: 3, character: 4 }] });\n\n\t\tconst diag = new types.Diagnostic(new types.Range(0, 1, 2, 3), 'hello');\n\t\tassertToJSON(diag, { severity: 'Error', message: 'hello', range: [{ line: 0, character: 1 }, { line: 2, character: 3 }] });\n\t\tdiag.source = 'me';\n\t\tassertToJSON(diag, { severity: 'Error', message: 'hello', range: [{ line: 0, character: 1 }, { line: 2, character: 3 }], source: 'me' });\n\n\t\tassertToJSON(new types.DocumentHighlight(new types.Range(2, 3, 4, 5)), { range: [{ line: 2, character: 3 }, { line: 4, character: 5 }], kind: 'Text' });\n\t\tassertToJSON(new types.DocumentHighlight(new types.Range(2, 3, 4, 5), types.DocumentHighlightKind.Read), { range: [{ line: 2, character: 3 }, { line: 4, character: 5 }], kind: 'Read' });\n\n\t\tassertToJSON(new types.SymbolInformation('test', types.SymbolKind.Boolean, new types.Range(0, 1, 2, 3)), {\n\t\t\tname: 'test',\n\t\t\tkind: 'Boolean',\n\t\t\tlocation: {\n\t\t\t\trange: [{ line: 0, character: 1 }, { line: 2, character: 3 }]\n\t\t\t}\n\t\t});\n\n\t\tassertToJSON(new types.CodeLens(new types.Range(7, 8, 9, 10)), { range: [{ line: 7, character: 8 }, { line: 9, character: 10 }] });\n\t\tassertToJSON(new types.CodeLens(new types.Range(7, 8, 9, 10), { command: 'id', title: 'title' }), {\n\t\t\trange: [{ line: 7, character: 8 }, { line: 9, character: 10 }],\n\t\t\tcommand: { command: 'id', title: 'title' }\n\t\t});\n\n\t\tassertToJSON(new types.CompletionItem('complete'), { label: 'complete' });\n\n\t\tconst item = new types.CompletionItem('complete');\n\t\titem.kind = types.CompletionItemKind.Interface;\n\t\tassertToJSON(item, { label: 'complete', kind: 'Interface' });\n\n\t});\n\n\ttest('SymbolInformation, old ctor', function () {\n\n\t\tconst info = new types.SymbolInformation('foo', types.SymbolKind.Array, new types.Range(1, 1, 2, 3));\n\t\tassert.ok(info.location instanceof types.Location);\n\t\tassert.strictEqual(info.location.uri, undefined);\n\t});\n\n\ttest('SnippetString, builder-methods', function () {\n\n\t\tlet string: types.SnippetString;\n\n\t\tstring = new types.SnippetString();\n\t\tassert.strictEqual(string.appendText('I need $ and $').value, 'I need \\\\$ and \\\\$');\n\n\t\tstring = new types.SnippetString();\n\t\tassert.strictEqual(string.appendText('I need \\\\$').value, 'I need \\\\\\\\\\\\$');\n\n\t\tstring = new types.SnippetString();\n\t\tstring.appendPlaceholder('fo$o}');\n\t\tassert.strictEqual(string.value, '${1:fo\\\\$o\\\\}}');\n\n\t\tstring = new types.SnippetString();\n\t\tstring.appendText('foo').appendTabstop(0).appendText('bar');\n\t\tassert.strictEqual(string.value, 'foo$0bar');\n\n\t\tstring = new types.SnippetString();\n\t\tstring.appendText('foo').appendTabstop().appendText('bar');\n\t\tassert.strictEqual(string.value, 'foo$1bar');\n\n\t\tstring = new types.SnippetString();\n\t\tstring.appendText('foo').appendTabstop(42).appendText('bar');\n\t\tassert.strictEqual(string.value, 'foo$42bar');\n\n\t\tstring = new types.SnippetString();\n\t\tstring.appendText('foo').appendPlaceholder('farboo').appendText('bar');\n\t\tassert.strictEqual(string.value, 'foo${1:farboo}bar');\n\n\t\tstring = new types.SnippetString();\n\t\tstring.appendText('foo').appendPlaceholder('far$boo').appendText('bar');\n\t\tassert.strictEqual(string.value, 'foo${1:far\\\\$boo}bar');\n\n\t\tstring = new types.SnippetString();\n\t\tstring.appendText('foo').appendPlaceholder(b => b.appendText('abc').appendPlaceholder('nested')).appendText('bar');\n\t\tassert.strictEqual(string.value, 'foo${1:abc${2:nested}}bar');\n\n\t\tstring = new types.SnippetString();\n\t\tstring.appendVariable('foo');\n\t\tassert.strictEqual(string.value, '${foo}');\n\n\t\tstring = new types.SnippetString();\n\t\tstring.appendText('foo').appendVariable('TM_SELECTED_TEXT').appendText('bar');\n\t\tassert.strictEqual(string.value, 'foo${TM_SELECTED_TEXT}bar');\n\n\t\tstring = new types.SnippetString();\n\t\tstring.appendVariable('BAR', b => b.appendPlaceholder('ops'));\n\t\tassert.strictEqual(string.value, '${BAR:${1:ops}}');\n\n\t\tstring = new types.SnippetString();\n\t\tstring.appendVariable('BAR', b => { });\n\t\tassert.strictEqual(string.value, '${BAR}');\n\n\t\tstring = new types.SnippetString();\n\t\tstring.appendChoice(['b', 'a', 'r']);\n\t\tassert.strictEqual(string.value, '${1|b,a,r|}');\n\n\t\tstring = new types.SnippetString();\n\t\tstring.appendChoice(['b,1', 'a,2', 'r,3']);\n\t\tassert.strictEqual(string.value, '${1|b\\\\,1,a\\\\,2,r\\\\,3|}');\n\n\t\tstring = new types.SnippetString();\n\t\tstring.appendChoice(['b', 'a', 'r'], 0);\n\t\tassert.strictEqual(string.value, '${0|b,a,r|}');\n\n\t\tstring = new types.SnippetString();\n\t\tstring.appendText('foo').appendChoice(['far', 'boo']).appendText('bar');\n\t\tassert.strictEqual(string.value, 'foo${1|far,boo|}bar');\n\n\t\tstring = new types.SnippetString();\n\t\tstring.appendText('foo').appendChoice(['far', '$boo']).appendText('bar');\n\t\tassert.strictEqual(string.value, 'foo${1|far,$boo|}bar');\n\n\t\tstring = new types.SnippetString();\n\t\tstring.appendText('foo').appendPlaceholder('farboo').appendChoice(['far', 'boo']).appendText('bar');\n\t\tassert.strictEqual(string.value, 'foo${1:farboo}${2|far,boo|}bar');\n\t});\n\n\ttest('Snippet choices are incorrectly escaped/applied #180132', function () {\n\t\t{\n\t\t\tconst s = new types.SnippetString();\n\t\t\ts.appendChoice([\"aaa$aaa\"]);\n\t\t\ts.appendText(\"bbb$bbb\");\n\t\t\tassert.strictEqual(s.value, '${1|aaa$aaa|}bbb\\\\$bbb');\n\t\t}\n\t\t{\n\t\t\tconst s = new types.SnippetString();\n\t\t\ts.appendChoice([\"aaa,aaa\"]);\n\t\t\ts.appendText(\"bbb$bbb\");\n\t\t\tassert.strictEqual(s.value, '${1|aaa\\\\,aaa|}bbb\\\\$bbb');\n\t\t}\n\t\t{\n\t\t\tconst s = new types.SnippetString();\n\t\t\ts.appendChoice([\"aaa|aaa\"]);\n\t\t\ts.appendText(\"bbb$bbb\");\n\t\t\tassert.strictEqual(s.value, '${1|aaa\\\\|aaa|}bbb\\\\$bbb');\n\t\t}\n\t\t{\n\t\t\tconst s = new types.SnippetString();\n\t\t\ts.appendChoice([\"aaa\\\\aaa\"]);\n\t\t\ts.appendText(\"bbb$bbb\");\n\t\t\tassert.strictEqual(s.value, '${1|aaa\\\\\\\\aaa|}bbb\\\\$bbb');\n\t\t}\n\t});\n\n\ttest('instanceof doesn\\'t work for FileSystemError #49386', function () {\n\t\tconst error = types.FileSystemError.Unavailable('foo');\n\t\tassert.ok(error instanceof Error);\n\t\tassert.ok(error instanceof types.FileSystemError);\n\t});\n\n\ttest('CancellationError', function () {\n\t\t// The CancellationError-type is used internally and exported as API. Make sure that at\n\t\t// its name and message are `Canceled`\n\t\tconst err = new CancellationError();\n\t\tassert.strictEqual(err.name, 'Canceled');\n\t\tassert.strictEqual(err.message, 'Canceled');\n\t});\n\n\ttest('CodeActionKind contains', () => {\n\t\tassert.ok(types.CodeActionKind.RefactorExtract.contains(types.CodeActionKind.RefactorExtract));\n\t\tassert.ok(types.CodeActionKind.RefactorExtract.contains(types.CodeActionKind.RefactorExtract.append('other')));\n\n\t\tassert.ok(!types.CodeActionKind.RefactorExtract.contains(types.CodeActionKind.Refactor));\n\t\tassert.ok(!types.CodeActionKind.RefactorExtract.contains(types.CodeActionKind.Refactor.append('other')));\n\t\tassert.ok(!types.CodeActionKind.RefactorExtract.contains(types.CodeActionKind.Empty.append('other').append('refactor')));\n\t\tassert.ok(!types.CodeActionKind.RefactorExtract.contains(types.CodeActionKind.Empty.append('refactory')));\n\t});\n\n\ttest('CodeActionKind intersects', () => {\n\t\tassert.ok(types.CodeActionKind.RefactorExtract.intersects(types.CodeActionKind.RefactorExtract));\n\t\tassert.ok(types.CodeActionKind.RefactorExtract.intersects(types.CodeActionKind.Refactor));\n\t\tassert.ok(types.CodeActionKind.RefactorExtract.intersects(types.CodeActionKind.RefactorExtract.append('other')));\n\n\t\tassert.ok(!types.CodeActionKind.RefactorExtract.intersects(types.CodeActionKind.Refactor.append('other')));\n\t\tassert.ok(!types.CodeActionKind.RefactorExtract.intersects(types.CodeActionKind.Empty.append('other').append('refactor')));\n\t\tassert.ok(!types.CodeActionKind.RefactorExtract.intersects(types.CodeActionKind.Empty.append('refactory')));\n\t});\n\n\tfunction toArr(uint32Arr: Uint32Array): number[] {\n\t\tconst r = [];\n\t\tfor (let i = 0, len = uint32Arr.length; i < len; i++) {\n\t\t\tr[i] = uint32Arr[i];\n\t\t}\n\t\treturn r;\n\t}\n\n\ttest('SemanticTokensBuilder simple', () => {\n\t\tconst builder = new types.SemanticTokensBuilder();\n\t\tbuilder.push(1, 0, 5, 1, 1);\n\t\tbuilder.push(1, 10, 4, 2, 2);\n\t\tbuilder.push(2, 2, 3, 2, 2);\n\t\tassert.deepStrictEqual(toArr(builder.build().data), [\n\t\t\t1, 0, 5, 1, 1,\n\t\t\t0, 10, 4, 2, 2,\n\t\t\t1, 2, 3, 2, 2\n\t\t]);\n\t});\n\n\ttest('SemanticTokensBuilder no modifier', () => {\n\t\tconst builder = new types.SemanticTokensBuilder();\n\t\tbuilder.push(1, 0, 5, 1);\n\t\tbuilder.push(1, 10, 4, 2);\n\t\tbuilder.push(2, 2, 3, 2);\n\t\tassert.deepStrictEqual(toArr(builder.build().data), [\n\t\t\t1, 0, 5, 1, 0,\n\t\t\t0, 10, 4, 2, 0,\n\t\t\t1, 2, 3, 2, 0\n\t\t]);\n\t});\n\n\ttest('SemanticTokensBuilder out of order 1', () => {\n\t\tconst builder = new types.SemanticTokensBuilder();\n\t\tbuilder.push(2, 0, 5, 1, 1);\n\t\tbuilder.push(2, 10, 1, 2, 2);\n\t\tbuilder.push(2, 15, 2, 3, 3);\n\t\tbuilder.push(1, 0, 4, 4, 4);\n\t\tassert.deepStrictEqual(toArr(builder.build().data), [\n\t\t\t1, 0, 4, 4, 4,\n\t\t\t1, 0, 5, 1, 1,\n\t\t\t0, 10, 1, 2, 2,\n\t\t\t0, 5, 2, 3, 3\n\t\t]);\n\t});\n\n\ttest('SemanticTokensBuilder out of order 2', () => {\n\t\tconst builder = new types.SemanticTokensBuilder();\n\t\tbuilder.push(2, 10, 5, 1, 1);\n\t\tbuilder.push(2, 2, 4, 2, 2);\n\t\tassert.deepStrictEqual(toArr(builder.build().data), [\n\t\t\t2, 2, 4, 2, 2,\n\t\t\t0, 8, 5, 1, 1\n\t\t]);\n\t});\n\n\ttest('SemanticTokensBuilder with legend', () => {\n\t\tconst legend = new types.SemanticTokensLegend(\n\t\t\t['aType', 'bType', 'cType', 'dType'],\n\t\t\t['mod0', 'mod1', 'mod2', 'mod3', 'mod4', 'mod5']\n\t\t);\n\t\tconst builder = new types.SemanticTokensBuilder(legend);\n\t\tbuilder.push(new types.Range(1, 0, 1, 5), 'bType');\n\t\tbuilder.push(new types.Range(2, 0, 2, 4), 'cType', ['mod0', 'mod5']);\n\t\tbuilder.push(new types.Range(3, 0, 3, 3), 'dType', ['mod2', 'mod4']);\n\t\tassert.deepStrictEqual(toArr(builder.build().data), [\n\t\t\t1, 0, 5, 1, 0,\n\t\t\t1, 0, 4, 2, 1 | (1 << 5),\n\t\t\t1, 0, 3, 3, (1 << 2) | (1 << 4)\n\t\t]);\n\t});\n\n\ttest('Markdown codeblock rendering is swapped #111604', function () {\n\t\tconst md = new types.MarkdownString().appendCodeblock('<img src=0 onerror=\"alert(1)\">', 'html');\n\t\tassert.deepStrictEqual(md.value, '\\n```html\\n<img src=0 onerror=\"alert(1)\">\\n```\\n');\n\t});\n\n\ttest('NotebookCellOutputItem - factories', function () {\n\n\t\tassert.throws(() => {\n\t\t\t// invalid mime type\n\t\t\tnew types.NotebookCellOutputItem(new Uint8Array(), 'invalid');\n\t\t});\n\n\t\t// --- err\n\n\t\tlet item = types.NotebookCellOutputItem.error(new Error());\n\t\tassert.strictEqual(item.mime, 'application/vnd.code.notebook.error');\n\t\titem = types.NotebookCellOutputItem.error({ name: 'Hello' });\n\t\tassert.strictEqual(item.mime, 'application/vnd.code.notebook.error');\n\n\t\t// --- JSON\n\n\t\titem = types.NotebookCellOutputItem.json(1);\n\t\tassert.strictEqual(item.mime, 'text/x-json');\n\t\tassert.deepStrictEqual(item.data, new TextEncoder().encode(JSON.stringify(1)));\n\n\t\titem = types.NotebookCellOutputItem.json(1, 'foo/bar');\n\t\tassert.strictEqual(item.mime, 'foo/bar');\n\t\tassert.deepStrictEqual(item.data, new TextEncoder().encode(JSON.stringify(1)));\n\n\t\titem = types.NotebookCellOutputItem.json(true);\n\t\tassert.strictEqual(item.mime, 'text/x-json');\n\t\tassert.deepStrictEqual(item.data, new TextEncoder().encode(JSON.stringify(true)));\n\n\t\titem = types.NotebookCellOutputItem.json([true, 1, 'ddd']);\n\t\tassert.strictEqual(item.mime, 'text/x-json');\n\t\tassert.deepStrictEqual(item.data, new TextEncoder().encode(JSON.stringify([true, 1, 'ddd'], undefined, '\\t')));\n\n\t\t// --- text\n\n\t\titem = types.NotebookCellOutputItem.text('H\u0119\u0142l\u00F6');\n\t\tassert.strictEqual(item.mime, Mimes.text);\n\t\tassert.deepStrictEqual(item.data, new TextEncoder().encode('H\u0119\u0142l\u00F6'));\n\n\t\titem = types.NotebookCellOutputItem.text('H\u0119\u0142l\u00F6', 'foo/bar');\n\t\tassert.strictEqual(item.mime, 'foo/bar');\n\t\tassert.deepStrictEqual(item.data, new TextEncoder().encode('H\u0119\u0142l\u00F6'));\n\t});\n\n\ttest('FileDecoration#validate', function () {\n\n\t\tassert.ok(types.FileDecoration.validate({ badge: 'u' }));\n\t\tassert.ok(types.FileDecoration.validate({ badge: '\u00FC' }));\n\t\tassert.ok(types.FileDecoration.validate({ badge: '1' }));\n\t\tassert.ok(types.FileDecoration.validate({ badge: '\u00E3\u00E3' }));\n\t\tassert.ok(types.FileDecoration.validate({ badge: '\uD83D\uDC4B' }));\n\t\tassert.ok(types.FileDecoration.validate({ badge: '\uD83D\uDC4B\uD83D\uDC4B' }));\n\t\tassert.ok(types.FileDecoration.validate({ badge: '\uD83D\uDC69\u200D\uD83D\uDC69\u200D\uD83D\uDC67\u200D\uD83D\uDC67' }));\n\t\tassert.ok(types.FileDecoration.validate({ badge: '\u0BAA\u0BCB' }));\n\t\tassert.throws(() => types.FileDecoration.validate({ badge: 'hel' }));\n\t\tassert.throws(() => types.FileDecoration.validate({ badge: '\uD83D\uDC4B\uD83D\uDC4B\uD83D\uDC4B' }));\n\t\tassert.throws(() => types.FileDecoration.validate({ badge: '\u0BAA\u0BC1\u0BA9\u0BCD\u0B9A\u0BBF\u0BB0\u0BBF\u0BAA\u0BCD\u0BAA\u0BCB\u0B9F\u0BC1' }));\n\t\tassert.throws(() => types.FileDecoration.validate({ badge: '\u00E3\u00E3\u00E3' }));\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
