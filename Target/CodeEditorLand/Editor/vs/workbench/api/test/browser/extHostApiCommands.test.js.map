{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/test/browser/extHostApiCommands.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport '../../../../editor/contrib/codeAction/browser/codeAction.js';\nimport '../../../../editor/contrib/codelens/browser/codelens.js';\nimport '../../../../editor/contrib/colorPicker/browser/colorPickerContribution.js';\nimport '../../../../editor/contrib/format/browser/format.js';\nimport '../../../../editor/contrib/gotoSymbol/browser/goToCommands.js';\nimport '../../../../editor/contrib/documentSymbols/browser/documentSymbols.js';\nimport '../../../../editor/contrib/hover/browser/getHover.js';\nimport '../../../../editor/contrib/links/browser/getLinks.js';\nimport '../../../../editor/contrib/parameterHints/browser/provideSignatureHelp.js';\nimport '../../../../editor/contrib/smartSelect/browser/smartSelect.js';\nimport '../../../../editor/contrib/suggest/browser/suggest.js';\nimport '../../../../editor/contrib/rename/browser/rename.js';\nimport '../../../../editor/contrib/inlayHints/browser/inlayHintsController.js';\n\nimport assert from 'assert';\nimport { setUnexpectedErrorHandler, errorHandler } from '../../../../base/common/errors.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { Event } from '../../../../base/common/event.js';\nimport * as types from '../../common/extHostTypes.js';\nimport { createTextModel } from '../../../../editor/test/common/testTextModel.js';\nimport { TestRPCProtocol } from '../common/testRPCProtocol.js';\nimport { MarkerService } from '../../../../platform/markers/common/markerService.js';\nimport { IMarkerService } from '../../../../platform/markers/common/markers.js';\nimport { ICommandService, CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { IModelService } from '../../../../editor/common/services/model.js';\nimport { ExtHostLanguageFeatures } from '../../common/extHostLanguageFeatures.js';\nimport { MainThreadLanguageFeatures } from '../../browser/mainThreadLanguageFeatures.js';\nimport { ExtHostApiCommands } from '../../common/extHostApiCommands.js';\nimport { ExtHostCommands } from '../../common/extHostCommands.js';\nimport { MainThreadCommands } from '../../browser/mainThreadCommands.js';\nimport { ExtHostDocuments } from '../../common/extHostDocuments.js';\nimport { ExtHostDocumentsAndEditors } from '../../common/extHostDocumentsAndEditors.js';\nimport { MainContext, ExtHostContext } from '../../common/extHost.protocol.js';\nimport { ExtHostDiagnostics } from '../../common/extHostDiagnostics.js';\nimport type * as vscode from 'vscode';\nimport '../../../contrib/search/browser/search.contribution.js';\nimport { ILogService, NullLogService } from '../../../../platform/log/common/log.js';\nimport { ITextModel } from '../../../../editor/common/model.js';\nimport { nullExtensionDescription, IExtensionService } from '../../../services/extensions/common/extensions.js';\nimport { dispose, ImmortalReference } from '../../../../base/common/lifecycle.js';\nimport { IEditorWorkerService } from '../../../../editor/common/services/editorWorker.js';\nimport { mock } from '../../../../base/test/common/mock.js';\nimport { NullApiDeprecationService } from '../../common/extHostApiDeprecationService.js';\nimport { ServiceCollection } from '../../../../platform/instantiation/common/serviceCollection.js';\nimport { SyncDescriptor } from '../../../../platform/instantiation/common/descriptors.js';\nimport { IResolvedTextEditorModel, ITextModelService } from '../../../../editor/common/services/resolverService.js';\nimport { IExtHostFileSystemInfo } from '../../common/extHostFileSystemInfo.js';\nimport { URITransformerService } from '../../common/extHostUriTransformerService.js';\nimport { IOutlineModelService, OutlineModelService } from '../../../../editor/contrib/documentSymbols/browser/outlineModel.js';\nimport { ILanguageFeatureDebounceService, LanguageFeatureDebounceService } from '../../../../editor/common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../../editor/common/services/languageFeatures.js';\nimport { LanguageFeaturesService } from '../../../../editor/common/services/languageFeaturesService.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { IUriIdentityService } from '../../../../platform/uriIdentity/common/uriIdentity.js';\nimport { IExtHostTelemetry } from '../../common/extHostTelemetry.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { TestConfigurationService } from '../../../../platform/configuration/test/common/testConfigurationService.js';\nimport { IEnvironmentService } from '../../../../platform/environment/common/environment.js';\nimport { TestInstantiationService } from '../../../../platform/instantiation/test/common/instantiationServiceMock.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\nimport { runWithFakedTimers } from '../../../../base/test/common/timeTravelScheduler.js';\nimport { timeout } from '../../../../base/common/async.js';\n\nfunction assertRejects(fn: () => Promise<any>, message: string = 'Expected rejection') {\n\treturn fn().then(() => assert.ok(false, message), _err => assert.ok(true));\n}\n\nfunction isLocation(value: vscode.Location | vscode.LocationLink): value is vscode.Location {\n\tconst candidate = value as vscode.Location;\n\treturn candidate && candidate.uri instanceof URI && candidate.range instanceof types.Range;\n}\n\nsuite('ExtHostLanguageFeatureCommands', function () {\n\tconst defaultSelector = { scheme: 'far' };\n\tlet model: ITextModel;\n\n\tlet insta: TestInstantiationService;\n\tlet rpcProtocol: TestRPCProtocol;\n\tlet extHost: ExtHostLanguageFeatures;\n\tlet mainThread: MainThreadLanguageFeatures;\n\tlet commands: ExtHostCommands;\n\tlet disposables: vscode.Disposable[] = [];\n\n\tlet originalErrorHandler: (e: any) => any;\n\n\tsuiteSetup(() => {\n\t\tmodel = createTextModel(\n\t\t\t[\n\t\t\t\t'This is the first line',\n\t\t\t\t'This is the second line',\n\t\t\t\t'This is the third line',\n\t\t\t].join('\\n'),\n\t\t\tundefined,\n\t\t\tundefined,\n\t\t\tURI.parse('far://testing/file.b'));\n\t\toriginalErrorHandler = errorHandler.getUnexpectedErrorHandler();\n\t\tsetUnexpectedErrorHandler(() => { });\n\n\t\t// Use IInstantiationService to get typechecking when instantiating\n\t\trpcProtocol = new TestRPCProtocol();\n\t\tconst services = new ServiceCollection();\n\t\tservices.set(IUriIdentityService, new class extends mock<IUriIdentityService>() {\n\t\t\toverride asCanonicalUri(uri: URI): URI {\n\t\t\t\treturn uri;\n\t\t\t}\n\t\t});\n\t\tservices.set(ILanguageFeaturesService, new SyncDescriptor(LanguageFeaturesService));\n\t\tservices.set(IExtensionService, new class extends mock<IExtensionService>() {\n\t\t\toverride async activateByEvent() {\n\n\t\t\t}\n\t\t\toverride activationEventIsDone(activationEvent: string): boolean {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t\tservices.set(ICommandService, new SyncDescriptor(class extends mock<ICommandService>() {\n\n\t\t\toverride executeCommand(id: string, ...args: any): any {\n\t\t\t\tconst command = CommandsRegistry.getCommands().get(id);\n\t\t\t\tif (!command) {\n\t\t\t\t\treturn Promise.reject(new Error(id + ' NOT known'));\n\t\t\t\t}\n\t\t\t\tconst { handler } = command;\n\t\t\t\treturn Promise.resolve(insta.invokeFunction(handler, ...args));\n\t\t\t}\n\t\t}));\n\t\tservices.set(IEnvironmentService, new class extends mock<IEnvironmentService>() {\n\t\t\toverride isBuilt: boolean = true;\n\t\t\toverride isExtensionDevelopment: boolean = false;\n\t\t});\n\t\tservices.set(IMarkerService, new MarkerService());\n\t\tservices.set(ILogService, new SyncDescriptor(NullLogService));\n\t\tservices.set(ILanguageFeatureDebounceService, new SyncDescriptor(LanguageFeatureDebounceService));\n\t\tservices.set(IModelService, new class extends mock<IModelService>() {\n\t\t\toverride getModel() { return model; }\n\t\t\toverride onModelRemoved = Event.None;\n\t\t});\n\t\tservices.set(ITextModelService, new class extends mock<ITextModelService>() {\n\t\t\toverride async createModelReference() {\n\t\t\t\treturn new ImmortalReference<IResolvedTextEditorModel>(new class extends mock<IResolvedTextEditorModel>() {\n\t\t\t\t\toverride textEditorModel = model;\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tservices.set(IEditorWorkerService, new class extends mock<IEditorWorkerService>() {\n\t\t\toverride async computeMoreMinimalEdits(_uri: any, edits: any) {\n\t\t\t\treturn edits || undefined;\n\t\t\t}\n\t\t});\n\t\tservices.set(ILanguageFeatureDebounceService, new SyncDescriptor(LanguageFeatureDebounceService));\n\t\tservices.set(IOutlineModelService, new SyncDescriptor(OutlineModelService));\n\t\tservices.set(IConfigurationService, new TestConfigurationService());\n\n\t\tinsta = new TestInstantiationService(services);\n\n\t\tconst extHostDocumentsAndEditors = new ExtHostDocumentsAndEditors(rpcProtocol, new NullLogService());\n\t\textHostDocumentsAndEditors.$acceptDocumentsAndEditorsDelta({\n\t\t\taddedDocuments: [{\n\t\t\t\tisDirty: false,\n\t\t\t\tversionId: model.getVersionId(),\n\t\t\t\tlanguageId: model.getLanguageId(),\n\t\t\t\turi: model.uri,\n\t\t\t\tlines: model.getValue().split(model.getEOL()),\n\t\t\t\tEOL: model.getEOL(),\n\t\t\t}]\n\t\t});\n\t\tconst extHostDocuments = new ExtHostDocuments(rpcProtocol, extHostDocumentsAndEditors);\n\t\trpcProtocol.set(ExtHostContext.ExtHostDocuments, extHostDocuments);\n\n\t\tcommands = new ExtHostCommands(rpcProtocol, new NullLogService(), new class extends mock<IExtHostTelemetry>() {\n\t\t\toverride onExtensionError(): boolean {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t\trpcProtocol.set(ExtHostContext.ExtHostCommands, commands);\n\t\trpcProtocol.set(MainContext.MainThreadCommands, insta.createInstance(MainThreadCommands, rpcProtocol));\n\t\tExtHostApiCommands.register(commands);\n\n\t\tconst diagnostics = new ExtHostDiagnostics(rpcProtocol, new NullLogService(), new class extends mock<IExtHostFileSystemInfo>() { }, extHostDocumentsAndEditors);\n\t\trpcProtocol.set(ExtHostContext.ExtHostDiagnostics, diagnostics);\n\n\t\textHost = new ExtHostLanguageFeatures(rpcProtocol, new URITransformerService(null), extHostDocuments, commands, diagnostics, new NullLogService(), NullApiDeprecationService, new class extends mock<IExtHostTelemetry>() {\n\t\t\toverride onExtensionError(): boolean {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t\trpcProtocol.set(ExtHostContext.ExtHostLanguageFeatures, extHost);\n\n\t\tmainThread = rpcProtocol.set(MainContext.MainThreadLanguageFeatures, insta.createInstance(MainThreadLanguageFeatures, rpcProtocol));\n\n\t\t// forcefully create the outline service so that `ensureNoDisposablesAreLeakedInTestSuite` doesn't bark\n\t\tinsta.get(IOutlineModelService);\n\n\t\treturn rpcProtocol.sync();\n\t});\n\n\tsuiteTeardown(() => {\n\t\tsetUnexpectedErrorHandler(originalErrorHandler);\n\t\tmodel.dispose();\n\t\tmainThread.dispose();\n\n\t\t(<OutlineModelService>insta.get(IOutlineModelService)).dispose();\n\t\tinsta.dispose();\n\t});\n\n\tteardown(() => {\n\t\tdisposables = dispose(disposables);\n\t\treturn rpcProtocol.sync();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\t// --- workspace symbols\n\n\tfunction testApiCmd(name: string, fn: () => Promise<any>) {\n\t\ttest(name, async function () {\n\t\t\tawait runWithFakedTimers({}, async () => {\n\t\t\t\tawait fn();\n\t\t\t\tawait timeout(10000); \t// API commands for things that allow commands dispose their result delay. This is to be nice\n\t\t\t\t// because otherwise properties like command are disposed too early\n\t\t\t});\n\t\t});\n\n\t}\n\n\ttest('WorkspaceSymbols, invalid arguments', function () {\n\t\tconst promises = [\n\t\t\tassertRejects(() => commands.executeCommand('vscode.executeWorkspaceSymbolProvider')),\n\t\t\tassertRejects(() => commands.executeCommand('vscode.executeWorkspaceSymbolProvider', null)),\n\t\t\tassertRejects(() => commands.executeCommand('vscode.executeWorkspaceSymbolProvider', undefined)),\n\t\t\tassertRejects(() => commands.executeCommand('vscode.executeWorkspaceSymbolProvider', true))\n\t\t];\n\t\treturn Promise.all(promises);\n\t});\n\n\ttest('WorkspaceSymbols, back and forth', function () {\n\n\t\tdisposables.push(extHost.registerWorkspaceSymbolProvider(nullExtensionDescription, <vscode.WorkspaceSymbolProvider>{\n\t\t\tprovideWorkspaceSymbols(query): any {\n\t\t\t\treturn [\n\t\t\t\t\tnew types.SymbolInformation(query, types.SymbolKind.Array, new types.Range(0, 0, 1, 1), URI.parse('far://testing/first')),\n\t\t\t\t\tnew types.SymbolInformation(query, types.SymbolKind.Array, new types.Range(0, 0, 1, 1), URI.parse('far://testing/second'))\n\t\t\t\t];\n\t\t\t}\n\t\t}));\n\n\t\tdisposables.push(extHost.registerWorkspaceSymbolProvider(nullExtensionDescription, <vscode.WorkspaceSymbolProvider>{\n\t\t\tprovideWorkspaceSymbols(query): any {\n\t\t\t\treturn [\n\t\t\t\t\tnew types.SymbolInformation(query, types.SymbolKind.Array, new types.Range(0, 0, 1, 1), URI.parse('far://testing/first'))\n\t\t\t\t];\n\t\t\t}\n\t\t}));\n\n\t\treturn rpcProtocol.sync().then(() => {\n\t\t\treturn commands.executeCommand<vscode.SymbolInformation[]>('vscode.executeWorkspaceSymbolProvider', 'testing').then(value => {\n\n\t\t\t\tassert.strictEqual(value.length, 2); // de-duped\n\t\t\t\tfor (const info of value) {\n\t\t\t\t\tassert.strictEqual(info instanceof types.SymbolInformation, true);\n\t\t\t\t\tassert.strictEqual(info.name, 'testing');\n\t\t\t\t\tassert.strictEqual(info.kind, types.SymbolKind.Array);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('executeWorkspaceSymbolProvider should accept empty string, #39522', async function () {\n\n\t\tdisposables.push(extHost.registerWorkspaceSymbolProvider(nullExtensionDescription, {\n\t\t\tprovideWorkspaceSymbols(): vscode.SymbolInformation[] {\n\t\t\t\treturn [new types.SymbolInformation('hello', types.SymbolKind.Array, new types.Range(0, 0, 0, 0), URI.parse('foo:bar')) as vscode.SymbolInformation];\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tlet symbols = await commands.executeCommand<vscode.SymbolInformation[]>('vscode.executeWorkspaceSymbolProvider', '');\n\t\tassert.strictEqual(symbols.length, 1);\n\n\t\tawait rpcProtocol.sync();\n\t\tsymbols = await commands.executeCommand<vscode.SymbolInformation[]>('vscode.executeWorkspaceSymbolProvider', '*');\n\t\tassert.strictEqual(symbols.length, 1);\n\t});\n\n\t// --- formatting\n\ttest('executeFormatDocumentProvider, back and forth', async function () {\n\n\t\tdisposables.push(extHost.registerDocumentFormattingEditProvider(nullExtensionDescription, defaultSelector, new class implements vscode.DocumentFormattingEditProvider {\n\t\t\tprovideDocumentFormattingEdits() {\n\t\t\t\treturn [types.TextEdit.insert(new types.Position(0, 0), '42')];\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst edits = await commands.executeCommand<vscode.SymbolInformation[]>('vscode.executeFormatDocumentProvider', model.uri);\n\t\tassert.strictEqual(edits.length, 1);\n\t});\n\n\n\t// --- rename\n\ttest('vscode.prepareRename', async function () {\n\t\tdisposables.push(extHost.registerRenameProvider(nullExtensionDescription, defaultSelector, new class implements vscode.RenameProvider {\n\n\t\t\tprepareRename(document: vscode.TextDocument, position: vscode.Position) {\n\t\t\t\treturn {\n\t\t\t\t\trange: new types.Range(0, 12, 0, 24),\n\t\t\t\t\tplaceholder: 'foooPlaceholder'\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tprovideRenameEdits(document: vscode.TextDocument, position: vscode.Position, newName: string) {\n\t\t\t\tconst edit = new types.WorkspaceEdit();\n\t\t\t\tedit.insert(document.uri, <types.Position>position, newName);\n\t\t\t\treturn edit;\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\n\t\tconst data = await commands.executeCommand<{ range: vscode.Range; placeholder: string }>('vscode.prepareRename', model.uri, new types.Position(0, 12));\n\n\t\tassert.ok(data);\n\t\tassert.strictEqual(data.placeholder, 'foooPlaceholder');\n\t\tassert.strictEqual(data.range.start.line, 0);\n\t\tassert.strictEqual(data.range.start.character, 12);\n\t\tassert.strictEqual(data.range.end.line, 0);\n\t\tassert.strictEqual(data.range.end.character, 24);\n\n\t});\n\n\ttest('vscode.executeDocumentRenameProvider', async function () {\n\t\tdisposables.push(extHost.registerRenameProvider(nullExtensionDescription, defaultSelector, new class implements vscode.RenameProvider {\n\t\t\tprovideRenameEdits(document: vscode.TextDocument, position: vscode.Position, newName: string) {\n\t\t\t\tconst edit = new types.WorkspaceEdit();\n\t\t\t\tedit.insert(document.uri, <types.Position>position, newName);\n\t\t\t\treturn edit;\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\n\t\tconst edit = await commands.executeCommand<vscode.WorkspaceEdit>('vscode.executeDocumentRenameProvider', model.uri, new types.Position(0, 12), 'newNameOfThis');\n\n\t\tassert.ok(edit);\n\t\tassert.strictEqual(edit.has(model.uri), true);\n\t\tconst textEdits = edit.get(model.uri);\n\t\tassert.strictEqual(textEdits.length, 1);\n\t\tassert.strictEqual(textEdits[0].newText, 'newNameOfThis');\n\t});\n\n\t// --- definition\n\n\ttest('Definition, invalid arguments', function () {\n\t\tconst promises = [\n\t\t\tassertRejects(() => commands.executeCommand('vscode.executeDefinitionProvider')),\n\t\t\tassertRejects(() => commands.executeCommand('vscode.executeDefinitionProvider', null)),\n\t\t\tassertRejects(() => commands.executeCommand('vscode.executeDefinitionProvider', undefined)),\n\t\t\tassertRejects(() => commands.executeCommand('vscode.executeDefinitionProvider', true, false))\n\t\t];\n\n\t\treturn Promise.all(promises);\n\t});\n\n\ttest('Definition, back and forth', function () {\n\n\t\tdisposables.push(extHost.registerDefinitionProvider(nullExtensionDescription, defaultSelector, <vscode.DefinitionProvider>{\n\t\t\tprovideDefinition(doc: any): any {\n\t\t\t\treturn new types.Location(doc.uri, new types.Range(1, 0, 0, 0));\n\t\t\t}\n\t\t}));\n\t\tdisposables.push(extHost.registerDefinitionProvider(nullExtensionDescription, defaultSelector, <vscode.DefinitionProvider>{\n\t\t\tprovideDefinition(doc: any): any {\n\t\t\t\t// duplicate result will get removed\n\t\t\t\treturn new types.Location(doc.uri, new types.Range(1, 0, 0, 0));\n\t\t\t}\n\t\t}));\n\t\tdisposables.push(extHost.registerDefinitionProvider(nullExtensionDescription, defaultSelector, <vscode.DefinitionProvider>{\n\t\t\tprovideDefinition(doc: any): any {\n\t\t\t\treturn [\n\t\t\t\t\tnew types.Location(doc.uri, new types.Range(2, 0, 0, 0)),\n\t\t\t\t\tnew types.Location(doc.uri, new types.Range(3, 0, 0, 0)),\n\t\t\t\t\tnew types.Location(doc.uri, new types.Range(4, 0, 0, 0)),\n\t\t\t\t];\n\t\t\t}\n\t\t}));\n\n\t\treturn rpcProtocol.sync().then(() => {\n\t\t\treturn commands.executeCommand<vscode.Location[]>('vscode.executeDefinitionProvider', model.uri, new types.Position(0, 0)).then(values => {\n\t\t\t\tassert.strictEqual(values.length, 4);\n\t\t\t\tfor (const v of values) {\n\t\t\t\t\tassert.ok(v.uri instanceof URI);\n\t\t\t\t\tassert.ok(v.range instanceof types.Range);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t});\n\n\n\ttest('Definition, back and forth (sorting & de-deduping)', function () {\n\n\t\tdisposables.push(extHost.registerDefinitionProvider(nullExtensionDescription, defaultSelector, <vscode.DefinitionProvider>{\n\t\t\tprovideDefinition(doc: any): any {\n\t\t\t\treturn new types.Location(URI.parse('file:///b'), new types.Range(1, 0, 0, 0));\n\t\t\t}\n\t\t}));\n\t\tdisposables.push(extHost.registerDefinitionProvider(nullExtensionDescription, defaultSelector, <vscode.DefinitionProvider>{\n\t\t\tprovideDefinition(doc: any): any {\n\t\t\t\t// duplicate result will get removed\n\t\t\t\treturn new types.Location(URI.parse('file:///b'), new types.Range(1, 0, 0, 0));\n\t\t\t}\n\t\t}));\n\t\tdisposables.push(extHost.registerDefinitionProvider(nullExtensionDescription, defaultSelector, <vscode.DefinitionProvider>{\n\t\t\tprovideDefinition(doc: any): any {\n\t\t\t\treturn [\n\t\t\t\t\tnew types.Location(URI.parse('file:///a'), new types.Range(2, 0, 0, 0)),\n\t\t\t\t\tnew types.Location(URI.parse('file:///c'), new types.Range(3, 0, 0, 0)),\n\t\t\t\t\tnew types.Location(URI.parse('file:///d'), new types.Range(4, 0, 0, 0)),\n\t\t\t\t];\n\t\t\t}\n\t\t}));\n\n\t\treturn rpcProtocol.sync().then(() => {\n\t\t\treturn commands.executeCommand<vscode.Location[]>('vscode.executeDefinitionProvider', model.uri, new types.Position(0, 0)).then(values => {\n\t\t\t\tassert.strictEqual(values.length, 4);\n\n\t\t\t\tassert.strictEqual(values[0].uri.path, '/a');\n\t\t\t\tassert.strictEqual(values[1].uri.path, '/b');\n\t\t\t\tassert.strictEqual(values[2].uri.path, '/c');\n\t\t\t\tassert.strictEqual(values[3].uri.path, '/d');\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('Definition Link', () => {\n\t\tdisposables.push(extHost.registerDefinitionProvider(nullExtensionDescription, defaultSelector, <vscode.DefinitionProvider>{\n\t\t\tprovideDefinition(doc: any): (vscode.Location | vscode.LocationLink)[] {\n\t\t\t\treturn [\n\t\t\t\t\tnew types.Location(doc.uri, new types.Range(0, 0, 0, 0)),\n\t\t\t\t\t{ targetUri: doc.uri, targetRange: new types.Range(1, 0, 0, 0), targetSelectionRange: new types.Range(1, 1, 1, 1), originSelectionRange: new types.Range(2, 2, 2, 2) }\n\t\t\t\t];\n\t\t\t}\n\t\t}));\n\n\t\treturn rpcProtocol.sync().then(() => {\n\t\t\treturn commands.executeCommand<(vscode.Location | vscode.LocationLink)[]>('vscode.executeDefinitionProvider', model.uri, new types.Position(0, 0)).then(values => {\n\t\t\t\tassert.strictEqual(values.length, 2);\n\t\t\t\tfor (const v of values) {\n\t\t\t\t\tif (isLocation(v)) {\n\t\t\t\t\t\tassert.ok(v.uri instanceof URI);\n\t\t\t\t\t\tassert.ok(v.range instanceof types.Range);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tassert.ok(v.targetUri instanceof URI);\n\t\t\t\t\t\tassert.ok(v.targetRange instanceof types.Range);\n\t\t\t\t\t\tassert.ok(v.targetSelectionRange instanceof types.Range);\n\t\t\t\t\t\tassert.ok(v.originSelectionRange instanceof types.Range);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t});\n\n\t// --- declaration\n\n\ttest('Declaration, back and forth', function () {\n\n\t\tdisposables.push(extHost.registerDeclarationProvider(nullExtensionDescription, defaultSelector, <vscode.DeclarationProvider>{\n\t\t\tprovideDeclaration(doc: any): any {\n\t\t\t\treturn new types.Location(doc.uri, new types.Range(1, 0, 0, 0));\n\t\t\t}\n\t\t}));\n\t\tdisposables.push(extHost.registerDeclarationProvider(nullExtensionDescription, defaultSelector, <vscode.DeclarationProvider>{\n\t\t\tprovideDeclaration(doc: any): any {\n\t\t\t\t// duplicate result will get removed\n\t\t\t\treturn new types.Location(doc.uri, new types.Range(1, 0, 0, 0));\n\t\t\t}\n\t\t}));\n\t\tdisposables.push(extHost.registerDeclarationProvider(nullExtensionDescription, defaultSelector, <vscode.DeclarationProvider>{\n\t\t\tprovideDeclaration(doc: any): any {\n\t\t\t\treturn [\n\t\t\t\t\tnew types.Location(doc.uri, new types.Range(2, 0, 0, 0)),\n\t\t\t\t\tnew types.Location(doc.uri, new types.Range(3, 0, 0, 0)),\n\t\t\t\t\tnew types.Location(doc.uri, new types.Range(4, 0, 0, 0)),\n\t\t\t\t];\n\t\t\t}\n\t\t}));\n\n\t\treturn rpcProtocol.sync().then(() => {\n\t\t\treturn commands.executeCommand<vscode.Location[]>('vscode.executeDeclarationProvider', model.uri, new types.Position(0, 0)).then(values => {\n\t\t\t\tassert.strictEqual(values.length, 4);\n\t\t\t\tfor (const v of values) {\n\t\t\t\t\tassert.ok(v.uri instanceof URI);\n\t\t\t\t\tassert.ok(v.range instanceof types.Range);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('Declaration Link', () => {\n\t\tdisposables.push(extHost.registerDeclarationProvider(nullExtensionDescription, defaultSelector, <vscode.DeclarationProvider>{\n\t\t\tprovideDeclaration(doc: any): (vscode.Location | vscode.LocationLink)[] {\n\t\t\t\treturn [\n\t\t\t\t\tnew types.Location(doc.uri, new types.Range(0, 0, 0, 0)),\n\t\t\t\t\t{ targetUri: doc.uri, targetRange: new types.Range(1, 0, 0, 0), targetSelectionRange: new types.Range(1, 1, 1, 1), originSelectionRange: new types.Range(2, 2, 2, 2) }\n\t\t\t\t];\n\t\t\t}\n\t\t}));\n\n\t\treturn rpcProtocol.sync().then(() => {\n\t\t\treturn commands.executeCommand<(vscode.Location | vscode.LocationLink)[]>('vscode.executeDeclarationProvider', model.uri, new types.Position(0, 0)).then(values => {\n\t\t\t\tassert.strictEqual(values.length, 2);\n\t\t\t\tfor (const v of values) {\n\t\t\t\t\tif (isLocation(v)) {\n\t\t\t\t\t\tassert.ok(v.uri instanceof URI);\n\t\t\t\t\t\tassert.ok(v.range instanceof types.Range);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tassert.ok(v.targetUri instanceof URI);\n\t\t\t\t\t\tassert.ok(v.targetRange instanceof types.Range);\n\t\t\t\t\t\tassert.ok(v.targetSelectionRange instanceof types.Range);\n\t\t\t\t\t\tassert.ok(v.originSelectionRange instanceof types.Range);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t});\n\n\t// --- type definition\n\n\ttest('Type Definition, invalid arguments', function () {\n\t\tconst promises = [\n\t\t\tassertRejects(() => commands.executeCommand('vscode.executeTypeDefinitionProvider')),\n\t\t\tassertRejects(() => commands.executeCommand('vscode.executeTypeDefinitionProvider', null)),\n\t\t\tassertRejects(() => commands.executeCommand('vscode.executeTypeDefinitionProvider', undefined)),\n\t\t\tassertRejects(() => commands.executeCommand('vscode.executeTypeDefinitionProvider', true, false))\n\t\t];\n\n\t\treturn Promise.all(promises);\n\t});\n\n\ttest('Type Definition, back and forth', function () {\n\n\t\tdisposables.push(extHost.registerTypeDefinitionProvider(nullExtensionDescription, defaultSelector, <vscode.TypeDefinitionProvider>{\n\t\t\tprovideTypeDefinition(doc: any): any {\n\t\t\t\treturn new types.Location(doc.uri, new types.Range(1, 0, 0, 0));\n\t\t\t}\n\t\t}));\n\t\tdisposables.push(extHost.registerTypeDefinitionProvider(nullExtensionDescription, defaultSelector, <vscode.TypeDefinitionProvider>{\n\t\t\tprovideTypeDefinition(doc: any): any {\n\t\t\t\t// duplicate result will get removed\n\t\t\t\treturn new types.Location(doc.uri, new types.Range(1, 0, 0, 0));\n\t\t\t}\n\t\t}));\n\t\tdisposables.push(extHost.registerTypeDefinitionProvider(nullExtensionDescription, defaultSelector, <vscode.TypeDefinitionProvider>{\n\t\t\tprovideTypeDefinition(doc: any): any {\n\t\t\t\treturn [\n\t\t\t\t\tnew types.Location(doc.uri, new types.Range(2, 0, 0, 0)),\n\t\t\t\t\tnew types.Location(doc.uri, new types.Range(3, 0, 0, 0)),\n\t\t\t\t\tnew types.Location(doc.uri, new types.Range(4, 0, 0, 0)),\n\t\t\t\t];\n\t\t\t}\n\t\t}));\n\n\t\treturn rpcProtocol.sync().then(() => {\n\t\t\treturn commands.executeCommand<vscode.Location[]>('vscode.executeTypeDefinitionProvider', model.uri, new types.Position(0, 0)).then(values => {\n\t\t\t\tassert.strictEqual(values.length, 4);\n\t\t\t\tfor (const v of values) {\n\t\t\t\t\tassert.ok(v.uri instanceof URI);\n\t\t\t\t\tassert.ok(v.range instanceof types.Range);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('Type Definition Link', () => {\n\t\tdisposables.push(extHost.registerTypeDefinitionProvider(nullExtensionDescription, defaultSelector, <vscode.TypeDefinitionProvider>{\n\t\t\tprovideTypeDefinition(doc: any): (vscode.Location | vscode.LocationLink)[] {\n\t\t\t\treturn [\n\t\t\t\t\tnew types.Location(doc.uri, new types.Range(0, 0, 0, 0)),\n\t\t\t\t\t{ targetUri: doc.uri, targetRange: new types.Range(1, 0, 0, 0), targetSelectionRange: new types.Range(1, 1, 1, 1), originSelectionRange: new types.Range(2, 2, 2, 2) }\n\t\t\t\t];\n\t\t\t}\n\t\t}));\n\n\t\treturn rpcProtocol.sync().then(() => {\n\t\t\treturn commands.executeCommand<(vscode.Location | vscode.LocationLink)[]>('vscode.executeTypeDefinitionProvider', model.uri, new types.Position(0, 0)).then(values => {\n\t\t\t\tassert.strictEqual(values.length, 2);\n\t\t\t\tfor (const v of values) {\n\t\t\t\t\tif (isLocation(v)) {\n\t\t\t\t\t\tassert.ok(v.uri instanceof URI);\n\t\t\t\t\t\tassert.ok(v.range instanceof types.Range);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tassert.ok(v.targetUri instanceof URI);\n\t\t\t\t\t\tassert.ok(v.targetRange instanceof types.Range);\n\t\t\t\t\t\tassert.ok(v.targetSelectionRange instanceof types.Range);\n\t\t\t\t\t\tassert.ok(v.originSelectionRange instanceof types.Range);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t});\n\n\t// --- implementation\n\n\ttest('Implementation, invalid arguments', function () {\n\t\tconst promises = [\n\t\t\tassertRejects(() => commands.executeCommand('vscode.executeImplementationProvider')),\n\t\t\tassertRejects(() => commands.executeCommand('vscode.executeImplementationProvider', null)),\n\t\t\tassertRejects(() => commands.executeCommand('vscode.executeImplementationProvider', undefined)),\n\t\t\tassertRejects(() => commands.executeCommand('vscode.executeImplementationProvider', true, false))\n\t\t];\n\n\t\treturn Promise.all(promises);\n\t});\n\n\ttest('Implementation, back and forth', function () {\n\n\t\tdisposables.push(extHost.registerImplementationProvider(nullExtensionDescription, defaultSelector, <vscode.ImplementationProvider>{\n\t\t\tprovideImplementation(doc: any): any {\n\t\t\t\treturn new types.Location(doc.uri, new types.Range(1, 0, 0, 0));\n\t\t\t}\n\t\t}));\n\t\tdisposables.push(extHost.registerImplementationProvider(nullExtensionDescription, defaultSelector, <vscode.ImplementationProvider>{\n\t\t\tprovideImplementation(doc: any): any {\n\t\t\t\t// duplicate result will get removed\n\t\t\t\treturn new types.Location(doc.uri, new types.Range(1, 0, 0, 0));\n\t\t\t}\n\t\t}));\n\t\tdisposables.push(extHost.registerImplementationProvider(nullExtensionDescription, defaultSelector, <vscode.ImplementationProvider>{\n\t\t\tprovideImplementation(doc: any): any {\n\t\t\t\treturn [\n\t\t\t\t\tnew types.Location(doc.uri, new types.Range(2, 0, 0, 0)),\n\t\t\t\t\tnew types.Location(doc.uri, new types.Range(3, 0, 0, 0)),\n\t\t\t\t\tnew types.Location(doc.uri, new types.Range(4, 0, 0, 0)),\n\t\t\t\t];\n\t\t\t}\n\t\t}));\n\n\t\treturn rpcProtocol.sync().then(() => {\n\t\t\treturn commands.executeCommand<vscode.Location[]>('vscode.executeImplementationProvider', model.uri, new types.Position(0, 0)).then(values => {\n\t\t\t\tassert.strictEqual(values.length, 4);\n\t\t\t\tfor (const v of values) {\n\t\t\t\t\tassert.ok(v.uri instanceof URI);\n\t\t\t\t\tassert.ok(v.range instanceof types.Range);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('Implementation Definition Link', () => {\n\t\tdisposables.push(extHost.registerImplementationProvider(nullExtensionDescription, defaultSelector, <vscode.ImplementationProvider>{\n\t\t\tprovideImplementation(doc: any): (vscode.Location | vscode.LocationLink)[] {\n\t\t\t\treturn [\n\t\t\t\t\tnew types.Location(doc.uri, new types.Range(0, 0, 0, 0)),\n\t\t\t\t\t{ targetUri: doc.uri, targetRange: new types.Range(1, 0, 0, 0), targetSelectionRange: new types.Range(1, 1, 1, 1), originSelectionRange: new types.Range(2, 2, 2, 2) }\n\t\t\t\t];\n\t\t\t}\n\t\t}));\n\n\t\treturn rpcProtocol.sync().then(() => {\n\t\t\treturn commands.executeCommand<(vscode.Location | vscode.LocationLink)[]>('vscode.executeImplementationProvider', model.uri, new types.Position(0, 0)).then(values => {\n\t\t\t\tassert.strictEqual(values.length, 2);\n\t\t\t\tfor (const v of values) {\n\t\t\t\t\tif (isLocation(v)) {\n\t\t\t\t\t\tassert.ok(v.uri instanceof URI);\n\t\t\t\t\t\tassert.ok(v.range instanceof types.Range);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tassert.ok(v.targetUri instanceof URI);\n\t\t\t\t\t\tassert.ok(v.targetRange instanceof types.Range);\n\t\t\t\t\t\tassert.ok(v.targetSelectionRange instanceof types.Range);\n\t\t\t\t\t\tassert.ok(v.originSelectionRange instanceof types.Range);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t});\n\n\t// --- references\n\n\ttest('reference search, back and forth', function () {\n\n\t\tdisposables.push(extHost.registerReferenceProvider(nullExtensionDescription, defaultSelector, <vscode.ReferenceProvider>{\n\t\t\tprovideReferences() {\n\t\t\t\treturn [\n\t\t\t\t\tnew types.Location(URI.parse('some:uri/path'), new types.Range(0, 1, 0, 5))\n\t\t\t\t];\n\t\t\t}\n\t\t}));\n\n\t\treturn commands.executeCommand<vscode.Location[]>('vscode.executeReferenceProvider', model.uri, new types.Position(0, 0)).then(values => {\n\t\t\tassert.strictEqual(values.length, 1);\n\t\t\tconst [first] = values;\n\t\t\tassert.strictEqual(first.uri.toString(), 'some:uri/path');\n\t\t\tassert.strictEqual(first.range.start.line, 0);\n\t\t\tassert.strictEqual(first.range.start.character, 1);\n\t\t\tassert.strictEqual(first.range.end.line, 0);\n\t\t\tassert.strictEqual(first.range.end.character, 5);\n\t\t});\n\t});\n\n\t// --- document highlights\n\n\ttest('\"vscode.executeDocumentHighlights\" API has stopped returning DocumentHighlight[]#200056', async function () {\n\n\n\t\tdisposables.push(extHost.registerDocumentHighlightProvider(nullExtensionDescription, defaultSelector, <vscode.DocumentHighlightProvider>{\n\t\t\tprovideDocumentHighlights() {\n\t\t\t\treturn [\n\t\t\t\t\tnew types.DocumentHighlight(new types.Range(0, 17, 0, 25), types.DocumentHighlightKind.Read)\n\t\t\t\t];\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\n\t\treturn commands.executeCommand<vscode.DocumentHighlight[]>('vscode.executeDocumentHighlights', model.uri, new types.Position(0, 0)).then(values => {\n\t\t\tassert.ok(Array.isArray(values));\n\t\t\tassert.strictEqual(values.length, 1);\n\t\t\tconst [first] = values;\n\t\t\tassert.strictEqual(first.range.start.line, 0);\n\t\t\tassert.strictEqual(first.range.start.character, 17);\n\t\t\tassert.strictEqual(first.range.end.line, 0);\n\t\t\tassert.strictEqual(first.range.end.character, 25);\n\t\t});\n\n\t});\n\n\t// --- outline\n\n\ttest('Outline, back and forth', function () {\n\t\tdisposables.push(extHost.registerDocumentSymbolProvider(nullExtensionDescription, defaultSelector, <vscode.DocumentSymbolProvider>{\n\t\t\tprovideDocumentSymbols(): any {\n\t\t\t\treturn [\n\t\t\t\t\tnew types.SymbolInformation('testing1', types.SymbolKind.Enum, new types.Range(1, 0, 1, 0)),\n\t\t\t\t\tnew types.SymbolInformation('testing2', types.SymbolKind.Enum, new types.Range(0, 1, 0, 3)),\n\t\t\t\t];\n\t\t\t}\n\t\t}));\n\n\t\treturn rpcProtocol.sync().then(() => {\n\t\t\treturn commands.executeCommand<vscode.SymbolInformation[]>('vscode.executeDocumentSymbolProvider', model.uri).then(values => {\n\t\t\t\tassert.strictEqual(values.length, 2);\n\t\t\t\tconst [first, second] = values;\n\t\t\t\tassert.strictEqual(first instanceof types.SymbolInformation, true);\n\t\t\t\tassert.strictEqual(second instanceof types.SymbolInformation, true);\n\t\t\t\tassert.strictEqual(first.name, 'testing2');\n\t\t\t\tassert.strictEqual(second.name, 'testing1');\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('vscode.executeDocumentSymbolProvider command only returns SymbolInformation[] rather than DocumentSymbol[] #57984', function () {\n\t\tdisposables.push(extHost.registerDocumentSymbolProvider(nullExtensionDescription, defaultSelector, <vscode.DocumentSymbolProvider>{\n\t\t\tprovideDocumentSymbols(): any {\n\t\t\t\treturn [\n\t\t\t\t\tnew types.SymbolInformation('SymbolInformation', types.SymbolKind.Enum, new types.Range(1, 0, 1, 0))\n\t\t\t\t];\n\t\t\t}\n\t\t}));\n\t\tdisposables.push(extHost.registerDocumentSymbolProvider(nullExtensionDescription, defaultSelector, <vscode.DocumentSymbolProvider>{\n\t\t\tprovideDocumentSymbols(): any {\n\t\t\t\tconst root = new types.DocumentSymbol('DocumentSymbol', 'DocumentSymbol#detail', types.SymbolKind.Enum, new types.Range(1, 0, 1, 0), new types.Range(1, 0, 1, 0));\n\t\t\t\troot.children = [new types.DocumentSymbol('DocumentSymbol#child', 'DocumentSymbol#detail#child', types.SymbolKind.Enum, new types.Range(1, 0, 1, 0), new types.Range(1, 0, 1, 0))];\n\t\t\t\treturn [root];\n\t\t\t}\n\t\t}));\n\n\t\treturn rpcProtocol.sync().then(() => {\n\t\t\treturn commands.executeCommand<(vscode.SymbolInformation & vscode.DocumentSymbol)[]>('vscode.executeDocumentSymbolProvider', model.uri).then(values => {\n\t\t\t\tassert.strictEqual(values.length, 2);\n\t\t\t\tconst [first, second] = values;\n\t\t\t\tassert.strictEqual(first instanceof types.SymbolInformation, true);\n\t\t\t\tassert.strictEqual(first instanceof types.DocumentSymbol, false);\n\t\t\t\tassert.strictEqual(second instanceof types.SymbolInformation, true);\n\t\t\t\tassert.strictEqual(first.name, 'DocumentSymbol');\n\t\t\t\tassert.strictEqual(first.children.length, 1);\n\t\t\t\tassert.strictEqual(second.name, 'SymbolInformation');\n\t\t\t});\n\t\t});\n\t});\n\n\t// --- suggest\n\n\ttestApiCmd('triggerCharacter is null when completion provider is called programmatically #159914', async function () {\n\n\t\tlet actualContext: vscode.CompletionContext | undefined;\n\n\t\tdisposables.push(extHost.registerCompletionItemProvider(nullExtensionDescription, defaultSelector, <vscode.CompletionItemProvider>{\n\t\t\tprovideCompletionItems(_doc, _pos, _tok, context): any {\n\t\t\t\tactualContext = context;\n\t\t\t\treturn [];\n\t\t\t}\n\t\t}, []));\n\n\t\tawait rpcProtocol.sync();\n\n\t\tawait commands.executeCommand<vscode.CompletionList>('vscode.executeCompletionItemProvider', model.uri, new types.Position(0, 4));\n\n\t\tassert.ok(actualContext);\n\t\tassert.deepStrictEqual(actualContext, { triggerKind: types.CompletionTriggerKind.Invoke, triggerCharacter: undefined });\n\n\t});\n\n\ttestApiCmd('Suggest, back and forth', async function () {\n\n\t\tdisposables.push(extHost.registerCompletionItemProvider(nullExtensionDescription, defaultSelector, <vscode.CompletionItemProvider>{\n\t\t\tprovideCompletionItems(): any {\n\t\t\t\tconst a = new types.CompletionItem('item1');\n\t\t\t\ta.documentation = new types.MarkdownString('hello_md_string');\n\t\t\t\tconst b = new types.CompletionItem('item2');\n\t\t\t\tb.textEdit = types.TextEdit.replace(new types.Range(0, 4, 0, 8), 'foo'); // overwite after\n\t\t\t\tconst c = new types.CompletionItem('item3');\n\t\t\t\tc.textEdit = types.TextEdit.replace(new types.Range(0, 1, 0, 6), 'foobar'); // overwite before & after\n\n\t\t\t\t// snippet string!\n\t\t\t\tconst d = new types.CompletionItem('item4');\n\t\t\t\td.range = new types.Range(0, 1, 0, 4);// overwite before\n\t\t\t\td.insertText = new types.SnippetString('foo$0bar');\n\t\t\t\treturn [a, b, c, d];\n\t\t\t}\n\t\t}, []));\n\n\t\tawait rpcProtocol.sync();\n\n\t\tconst list = await commands.executeCommand<vscode.CompletionList>('vscode.executeCompletionItemProvider', model.uri, new types.Position(0, 4));\n\t\tassert.ok(list instanceof types.CompletionList);\n\t\tconst values = list.items;\n\t\tassert.ok(Array.isArray(values));\n\t\tassert.strictEqual(values.length, 4);\n\t\tconst [first, second, third, fourth] = values;\n\t\tassert.strictEqual(first.label, 'item1');\n\t\tassert.strictEqual(first.textEdit, undefined); // no text edit, default ranges\n\t\tassert.ok(!types.Range.isRange(first.range));\n\t\tassert.strictEqual((<types.MarkdownString>first.documentation).value, 'hello_md_string');\n\t\tassert.strictEqual(second.label, 'item2');\n\t\tassert.strictEqual(second.textEdit!.newText, 'foo');\n\t\tassert.strictEqual(second.textEdit!.range.start.line, 0);\n\t\tassert.strictEqual(second.textEdit!.range.start.character, 4);\n\t\tassert.strictEqual(second.textEdit!.range.end.line, 0);\n\t\tassert.strictEqual(second.textEdit!.range.end.character, 8);\n\t\tassert.strictEqual(third.label, 'item3');\n\t\tassert.strictEqual(third.textEdit!.newText, 'foobar');\n\t\tassert.strictEqual(third.textEdit!.range.start.line, 0);\n\t\tassert.strictEqual(third.textEdit!.range.start.character, 1);\n\t\tassert.strictEqual(third.textEdit!.range.end.line, 0);\n\t\tassert.strictEqual(third.textEdit!.range.end.character, 6);\n\t\tassert.strictEqual(fourth.label, 'item4');\n\t\tassert.strictEqual(fourth.textEdit, undefined);\n\t\tconst range: any = fourth.range!;\n\t\tassert.ok(types.Range.isRange(range));\n\t\tassert.strictEqual(range.start.line, 0);\n\t\tassert.strictEqual(range.start.character, 1);\n\t\tassert.strictEqual(range.end.line, 0);\n\t\tassert.strictEqual(range.end.character, 4);\n\t\tassert.ok(fourth.insertText instanceof types.SnippetString);\n\t\tassert.strictEqual((<types.SnippetString>fourth.insertText).value, 'foo$0bar');\n\n\t});\n\n\ttestApiCmd('Suggest, return CompletionList !array', async function () {\n\n\t\tdisposables.push(extHost.registerCompletionItemProvider(nullExtensionDescription, defaultSelector, <vscode.CompletionItemProvider>{\n\t\t\tprovideCompletionItems(): any {\n\t\t\t\tconst a = new types.CompletionItem('item1');\n\t\t\t\tconst b = new types.CompletionItem('item2');\n\t\t\t\treturn new types.CompletionList(<any>[a, b], true);\n\t\t\t}\n\t\t}, []));\n\n\t\tawait rpcProtocol.sync();\n\n\t\tconst list = await commands.executeCommand<vscode.CompletionList>('vscode.executeCompletionItemProvider', model.uri, new types.Position(0, 4));\n\n\t\tassert.ok(list instanceof types.CompletionList);\n\t\tassert.strictEqual(list.isIncomplete, true);\n\t});\n\n\ttestApiCmd('Suggest, resolve completion items', async function () {\n\n\n\t\tlet resolveCount = 0;\n\n\t\tdisposables.push(extHost.registerCompletionItemProvider(nullExtensionDescription, defaultSelector, <vscode.CompletionItemProvider>{\n\t\t\tprovideCompletionItems(): any {\n\t\t\t\tconst a = new types.CompletionItem('item1');\n\t\t\t\tconst b = new types.CompletionItem('item2');\n\t\t\t\tconst c = new types.CompletionItem('item3');\n\t\t\t\tconst d = new types.CompletionItem('item4');\n\t\t\t\treturn new types.CompletionList([a, b, c, d], false);\n\t\t\t},\n\t\t\tresolveCompletionItem(item) {\n\t\t\t\tresolveCount += 1;\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}, []));\n\n\t\tawait rpcProtocol.sync();\n\n\t\tconst list = await commands.executeCommand<vscode.CompletionList>(\n\t\t\t'vscode.executeCompletionItemProvider',\n\t\t\tmodel.uri,\n\t\t\tnew types.Position(0, 4),\n\t\t\tundefined,\n\t\t\t2 // maxItemsToResolve\n\t\t);\n\n\t\tassert.ok(list instanceof types.CompletionList);\n\t\tassert.strictEqual(resolveCount, 2);\n\n\t});\n\n\ttestApiCmd('\"vscode.executeCompletionItemProvider\" doesnot return a preselect field #53749', async function () {\n\n\n\n\t\tdisposables.push(extHost.registerCompletionItemProvider(nullExtensionDescription, defaultSelector, <vscode.CompletionItemProvider>{\n\t\t\tprovideCompletionItems(): any {\n\t\t\t\tconst a = new types.CompletionItem('item1');\n\t\t\t\ta.preselect = true;\n\t\t\t\tconst b = new types.CompletionItem('item2');\n\t\t\t\tconst c = new types.CompletionItem('item3');\n\t\t\t\tc.preselect = true;\n\t\t\t\tconst d = new types.CompletionItem('item4');\n\t\t\t\treturn new types.CompletionList([a, b, c, d], false);\n\t\t\t}\n\t\t}, []));\n\n\t\tawait rpcProtocol.sync();\n\n\t\tconst list = await commands.executeCommand<vscode.CompletionList>(\n\t\t\t'vscode.executeCompletionItemProvider',\n\t\t\tmodel.uri,\n\t\t\tnew types.Position(0, 4),\n\t\t\tundefined\n\t\t);\n\n\t\tassert.ok(list instanceof types.CompletionList);\n\t\tassert.strictEqual(list.items.length, 4);\n\n\t\tconst [a, b, c, d] = list.items;\n\t\tassert.strictEqual(a.preselect, true);\n\t\tassert.strictEqual(b.preselect, undefined);\n\t\tassert.strictEqual(c.preselect, true);\n\t\tassert.strictEqual(d.preselect, undefined);\n\t});\n\n\ttestApiCmd('executeCompletionItemProvider doesn\\'t capture commitCharacters #58228', async function () {\n\t\tdisposables.push(extHost.registerCompletionItemProvider(nullExtensionDescription, defaultSelector, <vscode.CompletionItemProvider>{\n\t\t\tprovideCompletionItems(): any {\n\t\t\t\tconst a = new types.CompletionItem('item1');\n\t\t\t\ta.commitCharacters = ['a', 'b'];\n\t\t\t\tconst b = new types.CompletionItem('item2');\n\t\t\t\treturn new types.CompletionList([a, b], false);\n\t\t\t}\n\t\t}, []));\n\n\t\tawait rpcProtocol.sync();\n\n\t\tconst list = await commands.executeCommand<vscode.CompletionList>(\n\t\t\t'vscode.executeCompletionItemProvider',\n\t\t\tmodel.uri,\n\t\t\tnew types.Position(0, 4),\n\t\t\tundefined\n\t\t);\n\n\t\tassert.ok(list instanceof types.CompletionList);\n\t\tassert.strictEqual(list.items.length, 2);\n\n\t\tconst [a, b] = list.items;\n\t\tassert.deepStrictEqual(a.commitCharacters, ['a', 'b']);\n\t\tassert.strictEqual(b.commitCharacters, undefined);\n\t});\n\n\ttestApiCmd('vscode.executeCompletionItemProvider returns the wrong CompletionItemKinds in insiders #95715', async function () {\n\t\tdisposables.push(extHost.registerCompletionItemProvider(nullExtensionDescription, defaultSelector, <vscode.CompletionItemProvider>{\n\t\t\tprovideCompletionItems(): any {\n\t\t\t\treturn [\n\t\t\t\t\tnew types.CompletionItem('My Method', types.CompletionItemKind.Method),\n\t\t\t\t\tnew types.CompletionItem('My Property', types.CompletionItemKind.Property),\n\t\t\t\t];\n\t\t\t}\n\t\t}, []));\n\n\t\tawait rpcProtocol.sync();\n\n\t\tconst list = await commands.executeCommand<vscode.CompletionList>(\n\t\t\t'vscode.executeCompletionItemProvider',\n\t\t\tmodel.uri,\n\t\t\tnew types.Position(0, 4),\n\t\t\tundefined\n\t\t);\n\n\t\tassert.ok(list instanceof types.CompletionList);\n\t\tassert.strictEqual(list.items.length, 2);\n\n\t\tconst [a, b] = list.items;\n\t\tassert.strictEqual(a.kind, types.CompletionItemKind.Method);\n\t\tassert.strictEqual(b.kind, types.CompletionItemKind.Property);\n\t});\n\n\t// --- signatureHelp\n\n\ttest('Parameter Hints, back and forth', async () => {\n\t\tdisposables.push(extHost.registerSignatureHelpProvider(nullExtensionDescription, defaultSelector, new class implements vscode.SignatureHelpProvider {\n\t\t\tprovideSignatureHelp(_document: vscode.TextDocument, _position: vscode.Position, _token: vscode.CancellationToken, context: vscode.SignatureHelpContext): vscode.SignatureHelp {\n\t\t\t\treturn {\n\t\t\t\t\tactiveSignature: 0,\n\t\t\t\t\tactiveParameter: 1,\n\t\t\t\t\tsignatures: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'abc',\n\t\t\t\t\t\t\tdocumentation: `${context.triggerKind === 1 /* vscode.SignatureHelpTriggerKind.Invoke */ ? 'invoked' : 'unknown'} ${context.triggerCharacter}`,\n\t\t\t\t\t\t\tparameters: []\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t};\n\t\t\t}\n\t\t}, []));\n\n\t\tawait rpcProtocol.sync();\n\n\t\tconst firstValue = await commands.executeCommand<vscode.SignatureHelp>('vscode.executeSignatureHelpProvider', model.uri, new types.Position(0, 1), ',');\n\t\tassert.strictEqual(firstValue.activeSignature, 0);\n\t\tassert.strictEqual(firstValue.activeParameter, 1);\n\t\tassert.strictEqual(firstValue.signatures.length, 1);\n\t\tassert.strictEqual(firstValue.signatures[0].label, 'abc');\n\t\tassert.strictEqual(firstValue.signatures[0].documentation, 'invoked ,');\n\t});\n\n\t// --- quickfix\n\n\ttestApiCmd('QuickFix, back and forth', function () {\n\t\tdisposables.push(extHost.registerCodeActionProvider(nullExtensionDescription, defaultSelector, {\n\t\t\tprovideCodeActions(): vscode.Command[] {\n\t\t\t\treturn [{ command: 'testing', title: 'Title', arguments: [1, 2, true] }];\n\t\t\t}\n\t\t}));\n\n\t\treturn rpcProtocol.sync().then(() => {\n\t\t\treturn commands.executeCommand<vscode.Command[]>('vscode.executeCodeActionProvider', model.uri, new types.Range(0, 0, 1, 1)).then(value => {\n\t\t\t\tassert.strictEqual(value.length, 1);\n\t\t\t\tconst [first] = value;\n\t\t\t\tassert.strictEqual(first.title, 'Title');\n\t\t\t\tassert.strictEqual(first.command, 'testing');\n\t\t\t\tassert.deepStrictEqual(first.arguments, [1, 2, true]);\n\t\t\t});\n\t\t});\n\t});\n\n\ttestApiCmd('vscode.executeCodeActionProvider results seem to be missing their `command` property #45124', function () {\n\t\tdisposables.push(extHost.registerCodeActionProvider(nullExtensionDescription, defaultSelector, {\n\t\t\tprovideCodeActions(document, range): vscode.CodeAction[] {\n\t\t\t\treturn [{\n\t\t\t\t\tcommand: {\n\t\t\t\t\t\targuments: [document, range],\n\t\t\t\t\t\tcommand: 'command',\n\t\t\t\t\t\ttitle: 'command_title',\n\t\t\t\t\t},\n\t\t\t\t\tkind: types.CodeActionKind.Empty.append('foo'),\n\t\t\t\t\ttitle: 'title',\n\t\t\t\t}];\n\t\t\t}\n\t\t}));\n\n\t\treturn rpcProtocol.sync().then(() => {\n\t\t\treturn commands.executeCommand<vscode.CodeAction[]>('vscode.executeCodeActionProvider', model.uri, new types.Range(0, 0, 1, 1)).then(value => {\n\t\t\t\tassert.strictEqual(value.length, 1);\n\t\t\t\tconst [first] = value;\n\t\t\t\tassert.ok(first.command);\n\t\t\t\tassert.strictEqual(first.command.command, 'command');\n\t\t\t\tassert.strictEqual(first.command.title, 'command_title');\n\t\t\t\tassert.strictEqual(first.kind!.value, 'foo');\n\t\t\t\tassert.strictEqual(first.title, 'title');\n\n\t\t\t});\n\t\t});\n\t});\n\n\ttestApiCmd('vscode.executeCodeActionProvider passes Range to provider although Selection is passed in #77997', function () {\n\t\tdisposables.push(extHost.registerCodeActionProvider(nullExtensionDescription, defaultSelector, {\n\t\t\tprovideCodeActions(document, rangeOrSelection): vscode.CodeAction[] {\n\t\t\t\treturn [{\n\t\t\t\t\tcommand: {\n\t\t\t\t\t\targuments: [document, rangeOrSelection],\n\t\t\t\t\t\tcommand: 'command',\n\t\t\t\t\t\ttitle: 'command_title',\n\t\t\t\t\t},\n\t\t\t\t\tkind: types.CodeActionKind.Empty.append('foo'),\n\t\t\t\t\ttitle: 'title',\n\t\t\t\t}];\n\t\t\t}\n\t\t}));\n\n\t\tconst selection = new types.Selection(0, 0, 1, 1);\n\n\t\treturn rpcProtocol.sync().then(() => {\n\t\t\treturn commands.executeCommand<vscode.CodeAction[]>('vscode.executeCodeActionProvider', model.uri, selection).then(value => {\n\t\t\t\tassert.strictEqual(value.length, 1);\n\t\t\t\tconst [first] = value;\n\t\t\t\tassert.ok(first.command);\n\t\t\t\tassert.ok(first.command.arguments![1] instanceof types.Selection);\n\t\t\t\tassert.ok(first.command.arguments![1].isEqual(selection));\n\t\t\t});\n\t\t});\n\t});\n\n\ttestApiCmd('vscode.executeCodeActionProvider results seem to be missing their `isPreferred` property #78098', function () {\n\t\tdisposables.push(extHost.registerCodeActionProvider(nullExtensionDescription, defaultSelector, {\n\t\t\tprovideCodeActions(document, rangeOrSelection): vscode.CodeAction[] {\n\t\t\t\treturn [{\n\t\t\t\t\tcommand: {\n\t\t\t\t\t\targuments: [document, rangeOrSelection],\n\t\t\t\t\t\tcommand: 'command',\n\t\t\t\t\t\ttitle: 'command_title',\n\t\t\t\t\t},\n\t\t\t\t\tkind: types.CodeActionKind.Empty.append('foo'),\n\t\t\t\t\ttitle: 'title',\n\t\t\t\t\tisPreferred: true\n\t\t\t\t}];\n\t\t\t}\n\t\t}));\n\n\t\tconst selection = new types.Selection(0, 0, 1, 1);\n\n\t\treturn rpcProtocol.sync().then(() => {\n\t\t\treturn commands.executeCommand<vscode.CodeAction[]>('vscode.executeCodeActionProvider', model.uri, selection).then(value => {\n\t\t\t\tassert.strictEqual(value.length, 1);\n\t\t\t\tconst [first] = value;\n\t\t\t\tassert.strictEqual(first.isPreferred, true);\n\t\t\t});\n\t\t});\n\t});\n\n\ttestApiCmd('resolving code action', async function () {\n\n\t\tlet didCallResolve = 0;\n\t\tclass MyAction extends types.CodeAction { }\n\n\t\tdisposables.push(extHost.registerCodeActionProvider(nullExtensionDescription, defaultSelector, {\n\t\t\tprovideCodeActions(document, rangeOrSelection): vscode.CodeAction[] {\n\t\t\t\treturn [new MyAction('title', types.CodeActionKind.Empty.append('foo'))];\n\t\t\t},\n\t\t\tresolveCodeAction(action): vscode.CodeAction {\n\t\t\t\tassert.ok(action instanceof MyAction);\n\n\t\t\t\tdidCallResolve += 1;\n\t\t\t\taction.title = 'resolved title';\n\t\t\t\taction.edit = new types.WorkspaceEdit();\n\t\t\t\treturn action;\n\t\t\t}\n\t\t}));\n\n\t\tconst selection = new types.Selection(0, 0, 1, 1);\n\n\t\tawait rpcProtocol.sync();\n\n\t\tconst value = await commands.executeCommand<vscode.CodeAction[]>('vscode.executeCodeActionProvider', model.uri, selection, undefined, 1000);\n\t\tassert.strictEqual(didCallResolve, 1);\n\t\tassert.strictEqual(value.length, 1);\n\n\t\tconst [first] = value;\n\t\tassert.strictEqual(first.title, 'title'); // does NOT change\n\t\tassert.ok(first.edit); // is set\n\t});\n\n\t// --- code lens\n\n\ttestApiCmd('CodeLens, back and forth', function () {\n\n\t\tconst complexArg = {\n\t\t\tfoo() { },\n\t\t\tbar() { },\n\t\t\tbig: extHost\n\t\t};\n\n\t\tdisposables.push(extHost.registerCodeLensProvider(nullExtensionDescription, defaultSelector, <vscode.CodeLensProvider>{\n\t\t\tprovideCodeLenses(): any {\n\t\t\t\treturn [new types.CodeLens(new types.Range(0, 0, 1, 1), { title: 'Title', command: 'cmd', arguments: [1, true, complexArg] })];\n\t\t\t}\n\t\t}));\n\n\t\treturn rpcProtocol.sync().then(() => {\n\t\t\treturn commands.executeCommand<vscode.CodeLens[]>('vscode.executeCodeLensProvider', model.uri).then(value => {\n\t\t\t\tassert.strictEqual(value.length, 1);\n\t\t\t\tconst [first] = value;\n\n\t\t\t\tassert.strictEqual(first.command!.title, 'Title');\n\t\t\t\tassert.strictEqual(first.command!.command, 'cmd');\n\t\t\t\tassert.strictEqual(first.command!.arguments![0], 1);\n\t\t\t\tassert.strictEqual(first.command!.arguments![1], true);\n\t\t\t\tassert.strictEqual(first.command!.arguments![2], complexArg);\n\t\t\t});\n\t\t});\n\t});\n\n\ttestApiCmd('CodeLens, resolve', async function () {\n\n\t\tlet resolveCount = 0;\n\n\t\tdisposables.push(extHost.registerCodeLensProvider(nullExtensionDescription, defaultSelector, <vscode.CodeLensProvider>{\n\t\t\tprovideCodeLenses(): any {\n\t\t\t\treturn [\n\t\t\t\t\tnew types.CodeLens(new types.Range(0, 0, 1, 1)),\n\t\t\t\t\tnew types.CodeLens(new types.Range(0, 0, 1, 1)),\n\t\t\t\t\tnew types.CodeLens(new types.Range(0, 0, 1, 1)),\n\t\t\t\t\tnew types.CodeLens(new types.Range(0, 0, 1, 1), { title: 'Already resolved', command: 'fff' })\n\t\t\t\t];\n\t\t\t},\n\t\t\tresolveCodeLens(codeLens: types.CodeLens) {\n\t\t\t\tcodeLens.command = { title: resolveCount.toString(), command: 'resolved' };\n\t\t\t\tresolveCount += 1;\n\t\t\t\treturn codeLens;\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\n\t\tlet value = await commands.executeCommand<vscode.CodeLens[]>('vscode.executeCodeLensProvider', model.uri, 2);\n\n\t\tassert.strictEqual(value.length, 3); // the resolve argument defines the number of results being returned\n\t\tassert.strictEqual(resolveCount, 2);\n\n\t\tresolveCount = 0;\n\t\tvalue = await commands.executeCommand<vscode.CodeLens[]>('vscode.executeCodeLensProvider', model.uri);\n\n\t\tassert.strictEqual(value.length, 4);\n\t\tassert.strictEqual(resolveCount, 0);\n\t});\n\n\ttestApiCmd('Links, back and forth', function () {\n\n\t\tdisposables.push(extHost.registerDocumentLinkProvider(nullExtensionDescription, defaultSelector, <vscode.DocumentLinkProvider>{\n\t\t\tprovideDocumentLinks(): any {\n\t\t\t\treturn [new types.DocumentLink(new types.Range(0, 0, 0, 20), URI.parse('foo:bar'))];\n\t\t\t}\n\t\t}));\n\n\t\treturn rpcProtocol.sync().then(() => {\n\t\t\treturn commands.executeCommand<vscode.DocumentLink[]>('vscode.executeLinkProvider', model.uri).then(value => {\n\t\t\t\tassert.strictEqual(value.length, 1);\n\t\t\t\tconst [first] = value;\n\n\t\t\t\tassert.strictEqual(first.target + '', 'foo:bar');\n\t\t\t\tassert.strictEqual(first.range.start.line, 0);\n\t\t\t\tassert.strictEqual(first.range.start.character, 0);\n\t\t\t\tassert.strictEqual(first.range.end.line, 0);\n\t\t\t\tassert.strictEqual(first.range.end.character, 20);\n\t\t\t});\n\t\t});\n\t});\n\n\ttestApiCmd('What\\'s the condition for DocumentLink target to be undefined? #106308', async function () {\n\t\tdisposables.push(extHost.registerDocumentLinkProvider(nullExtensionDescription, defaultSelector, <vscode.DocumentLinkProvider>{\n\t\t\tprovideDocumentLinks(): any {\n\t\t\t\treturn [new types.DocumentLink(new types.Range(0, 0, 0, 20), undefined)];\n\t\t\t},\n\t\t\tresolveDocumentLink(link) {\n\t\t\t\tlink.target = URI.parse('foo:bar');\n\t\t\t\treturn link;\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\n\t\tconst links1 = await commands.executeCommand<vscode.DocumentLink[]>('vscode.executeLinkProvider', model.uri);\n\t\tassert.strictEqual(links1.length, 1);\n\t\tassert.strictEqual(links1[0].target, undefined);\n\n\t\tconst links2 = await commands.executeCommand<vscode.DocumentLink[]>('vscode.executeLinkProvider', model.uri, 1000);\n\t\tassert.strictEqual(links2.length, 1);\n\t\tassert.strictEqual(links2[0].target!.toString(), URI.parse('foo:bar').toString());\n\n\t});\n\n\ttestApiCmd('DocumentLink[] vscode.executeLinkProvider returns lack tooltip #213970', async function () {\n\t\tdisposables.push(extHost.registerDocumentLinkProvider(nullExtensionDescription, defaultSelector, <vscode.DocumentLinkProvider>{\n\t\t\tprovideDocumentLinks(): any {\n\t\t\t\tconst link = new types.DocumentLink(new types.Range(0, 0, 0, 20), URI.parse('foo:bar'));\n\t\t\t\tlink.tooltip = 'Link Tooltip';\n\t\t\t\treturn [link];\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\n\t\tconst links1 = await commands.executeCommand<vscode.DocumentLink[]>('vscode.executeLinkProvider', model.uri);\n\t\tassert.strictEqual(links1.length, 1);\n\t\tassert.strictEqual(links1[0].tooltip, 'Link Tooltip');\n\t});\n\n\n\ttest('Color provider', function () {\n\n\t\tdisposables.push(extHost.registerColorProvider(nullExtensionDescription, defaultSelector, <vscode.DocumentColorProvider>{\n\t\t\tprovideDocumentColors(): vscode.ColorInformation[] {\n\t\t\t\treturn [new types.ColorInformation(new types.Range(0, 0, 0, 20), new types.Color(0.1, 0.2, 0.3, 0.4))];\n\t\t\t},\n\t\t\tprovideColorPresentations(): vscode.ColorPresentation[] {\n\t\t\t\tconst cp = new types.ColorPresentation('#ABC');\n\t\t\t\tcp.textEdit = types.TextEdit.replace(new types.Range(1, 0, 1, 20), '#ABC');\n\t\t\t\tcp.additionalTextEdits = [types.TextEdit.insert(new types.Position(2, 20), '*')];\n\t\t\t\treturn [cp];\n\t\t\t}\n\t\t}));\n\n\t\treturn rpcProtocol.sync().then(() => {\n\t\t\treturn commands.executeCommand<vscode.ColorInformation[]>('vscode.executeDocumentColorProvider', model.uri).then(value => {\n\t\t\t\tassert.strictEqual(value.length, 1);\n\t\t\t\tconst [first] = value;\n\n\t\t\t\tassert.strictEqual(first.color.red, 0.1);\n\t\t\t\tassert.strictEqual(first.color.green, 0.2);\n\t\t\t\tassert.strictEqual(first.color.blue, 0.3);\n\t\t\t\tassert.strictEqual(first.color.alpha, 0.4);\n\t\t\t\tassert.strictEqual(first.range.start.line, 0);\n\t\t\t\tassert.strictEqual(first.range.start.character, 0);\n\t\t\t\tassert.strictEqual(first.range.end.line, 0);\n\t\t\t\tassert.strictEqual(first.range.end.character, 20);\n\t\t\t});\n\t\t}).then(() => {\n\t\t\tconst color = new types.Color(0.5, 0.6, 0.7, 0.8);\n\t\t\tconst range = new types.Range(0, 0, 0, 20);\n\t\t\treturn commands.executeCommand<vscode.ColorPresentation[]>('vscode.executeColorPresentationProvider', color, { uri: model.uri, range }).then(value => {\n\t\t\t\tassert.strictEqual(value.length, 1);\n\t\t\t\tconst [first] = value;\n\n\t\t\t\tassert.strictEqual(first.label, '#ABC');\n\t\t\t\tassert.strictEqual(first.textEdit!.newText, '#ABC');\n\t\t\t\tassert.strictEqual(first.textEdit!.range.start.line, 1);\n\t\t\t\tassert.strictEqual(first.textEdit!.range.start.character, 0);\n\t\t\t\tassert.strictEqual(first.textEdit!.range.end.line, 1);\n\t\t\t\tassert.strictEqual(first.textEdit!.range.end.character, 20);\n\t\t\t\tassert.strictEqual(first.additionalTextEdits!.length, 1);\n\t\t\t\tassert.strictEqual(first.additionalTextEdits![0].range.start.line, 2);\n\t\t\t\tassert.strictEqual(first.additionalTextEdits![0].range.start.character, 20);\n\t\t\t\tassert.strictEqual(first.additionalTextEdits![0].range.end.line, 2);\n\t\t\t\tassert.strictEqual(first.additionalTextEdits![0].range.end.character, 20);\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('\"TypeError: e.onCancellationRequested is not a function\" calling hover provider in Insiders #54174', function () {\n\n\t\tdisposables.push(extHost.registerHoverProvider(nullExtensionDescription, defaultSelector, <vscode.HoverProvider>{\n\t\t\tprovideHover(): any {\n\t\t\t\treturn new types.Hover('fofofofo');\n\t\t\t}\n\t\t}));\n\n\t\treturn rpcProtocol.sync().then(() => {\n\t\t\treturn commands.executeCommand<vscode.Hover[]>('vscode.executeHoverProvider', model.uri, new types.Position(1, 1)).then(value => {\n\t\t\t\tassert.strictEqual(value.length, 1);\n\t\t\t\tassert.strictEqual(value[0].contents.length, 1);\n\t\t\t});\n\t\t});\n\t});\n\n\t// --- inline hints\n\n\ttestApiCmd('Inlay Hints, back and forth', async function () {\n\t\tdisposables.push(extHost.registerInlayHintsProvider(nullExtensionDescription, defaultSelector, <vscode.InlayHintsProvider>{\n\t\t\tprovideInlayHints() {\n\t\t\t\treturn [new types.InlayHint(new types.Position(0, 1), 'Foo')];\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\n\t\tconst value = await commands.executeCommand<vscode.InlayHint[]>('vscode.executeInlayHintProvider', model.uri, new types.Range(0, 0, 20, 20));\n\t\tassert.strictEqual(value.length, 1);\n\n\t\tconst [first] = value;\n\t\tassert.strictEqual(first.label, 'Foo');\n\t\tassert.strictEqual(first.position.line, 0);\n\t\tassert.strictEqual(first.position.character, 1);\n\t});\n\n\ttestApiCmd('Inline Hints, merge', async function () {\n\t\tdisposables.push(extHost.registerInlayHintsProvider(nullExtensionDescription, defaultSelector, <vscode.InlayHintsProvider>{\n\t\t\tprovideInlayHints() {\n\t\t\t\tconst part = new types.InlayHintLabelPart('Bar');\n\t\t\t\tpart.tooltip = 'part_tooltip';\n\t\t\t\tpart.command = { command: 'cmd', title: 'part' };\n\t\t\t\tconst hint = new types.InlayHint(new types.Position(10, 11), [part]);\n\t\t\t\thint.tooltip = 'hint_tooltip';\n\t\t\t\thint.paddingLeft = true;\n\t\t\t\thint.paddingRight = false;\n\t\t\t\treturn [hint];\n\t\t\t}\n\t\t}));\n\n\t\tdisposables.push(extHost.registerInlayHintsProvider(nullExtensionDescription, defaultSelector, <vscode.InlayHintsProvider>{\n\t\t\tprovideInlayHints() {\n\t\t\t\tconst hint = new types.InlayHint(new types.Position(0, 1), 'Foo', types.InlayHintKind.Parameter);\n\t\t\t\thint.textEdits = [types.TextEdit.insert(new types.Position(0, 0), 'Hello')];\n\t\t\t\treturn [hint];\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\n\t\tconst value = await commands.executeCommand<vscode.InlayHint[]>('vscode.executeInlayHintProvider', model.uri, new types.Range(0, 0, 20, 20));\n\t\tassert.strictEqual(value.length, 2);\n\n\t\tconst [first, second] = value;\n\t\tassert.strictEqual(first.label, 'Foo');\n\t\tassert.strictEqual(first.position.line, 0);\n\t\tassert.strictEqual(first.position.character, 1);\n\t\tassert.strictEqual(first.textEdits?.length, 1);\n\t\tassert.strictEqual(first.textEdits[0].newText, 'Hello');\n\n\t\tassert.strictEqual(second.position.line, 10);\n\t\tassert.strictEqual(second.position.character, 11);\n\t\tassert.strictEqual(second.paddingLeft, true);\n\t\tassert.strictEqual(second.paddingRight, false);\n\t\tassert.strictEqual(second.tooltip, 'hint_tooltip');\n\n\t\tconst label = (<types.InlayHintLabelPart[]>second.label)[0];\n\t\tassertType(label instanceof types.InlayHintLabelPart);\n\t\tassert.strictEqual(label.value, 'Bar');\n\t\tassert.strictEqual(label.tooltip, 'part_tooltip');\n\t\tassert.strictEqual(label.command?.command, 'cmd');\n\t\tassert.strictEqual(label.command?.title, 'part');\n\t});\n\n\ttestApiCmd('Inline Hints, bad provider', async function () {\n\t\tdisposables.push(extHost.registerInlayHintsProvider(nullExtensionDescription, defaultSelector, <vscode.InlayHintsProvider>{\n\t\t\tprovideInlayHints() {\n\t\t\t\treturn [new types.InlayHint(new types.Position(0, 1), 'Foo')];\n\t\t\t}\n\t\t}));\n\t\tdisposables.push(extHost.registerInlayHintsProvider(nullExtensionDescription, defaultSelector, <vscode.InlayHintsProvider>{\n\t\t\tprovideInlayHints() {\n\t\t\t\tthrow new Error();\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\n\t\tconst value = await commands.executeCommand<vscode.InlayHint[]>('vscode.executeInlayHintProvider', model.uri, new types.Range(0, 0, 20, 20));\n\t\tassert.strictEqual(value.length, 1);\n\n\t\tconst [first] = value;\n\t\tassert.strictEqual(first.label, 'Foo');\n\t\tassert.strictEqual(first.position.line, 0);\n\t\tassert.strictEqual(first.position.character, 1);\n\t});\n\n\t// --- selection ranges\n\n\ttest('Selection Range, back and forth', async function () {\n\n\t\tdisposables.push(extHost.registerSelectionRangeProvider(nullExtensionDescription, defaultSelector, <vscode.SelectionRangeProvider>{\n\t\t\tprovideSelectionRanges() {\n\t\t\t\treturn [\n\t\t\t\t\tnew types.SelectionRange(new types.Range(0, 10, 0, 18), new types.SelectionRange(new types.Range(0, 2, 0, 20))),\n\t\t\t\t];\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = await commands.executeCommand<vscode.SelectionRange[]>('vscode.executeSelectionRangeProvider', model.uri, [new types.Position(0, 10)]);\n\t\tassert.strictEqual(value.length, 1);\n\t\tassert.ok(value[0].parent);\n\t});\n\n\t// --- call hierarchy\n\n\ttest('CallHierarchy, back and forth', async function () {\n\n\t\tdisposables.push(extHost.registerCallHierarchyProvider(nullExtensionDescription, defaultSelector, new class implements vscode.CallHierarchyProvider {\n\n\t\t\tprepareCallHierarchy(document: vscode.TextDocument, position: vscode.Position,): vscode.ProviderResult<vscode.CallHierarchyItem> {\n\t\t\t\treturn new types.CallHierarchyItem(types.SymbolKind.Constant, 'ROOT', 'ROOT', document.uri, new types.Range(0, 0, 0, 0), new types.Range(0, 0, 0, 0));\n\t\t\t}\n\n\t\t\tprovideCallHierarchyIncomingCalls(item: vscode.CallHierarchyItem, token: vscode.CancellationToken): vscode.ProviderResult<vscode.CallHierarchyIncomingCall[]> {\n\n\t\t\t\treturn [new types.CallHierarchyIncomingCall(\n\t\t\t\t\tnew types.CallHierarchyItem(types.SymbolKind.Constant, 'INCOMING', 'INCOMING', item.uri, new types.Range(0, 0, 0, 0), new types.Range(0, 0, 0, 0)),\n\t\t\t\t\t[new types.Range(0, 0, 0, 0)]\n\t\t\t\t)];\n\t\t\t}\n\n\t\t\tprovideCallHierarchyOutgoingCalls(item: vscode.CallHierarchyItem, token: vscode.CancellationToken): vscode.ProviderResult<vscode.CallHierarchyOutgoingCall[]> {\n\t\t\t\treturn [new types.CallHierarchyOutgoingCall(\n\t\t\t\t\tnew types.CallHierarchyItem(types.SymbolKind.Constant, 'OUTGOING', 'OUTGOING', item.uri, new types.Range(0, 0, 0, 0), new types.Range(0, 0, 0, 0)),\n\t\t\t\t\t[new types.Range(0, 0, 0, 0)]\n\t\t\t\t)];\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\n\t\tconst root = await commands.executeCommand<vscode.CallHierarchyItem[]>('vscode.prepareCallHierarchy', model.uri, new types.Position(0, 0));\n\n\t\tassert.ok(Array.isArray(root));\n\t\tassert.strictEqual(root.length, 1);\n\t\tassert.strictEqual(root[0].name, 'ROOT');\n\n\t\tconst incoming = await commands.executeCommand<vscode.CallHierarchyIncomingCall[]>('vscode.provideIncomingCalls', root[0]);\n\t\tassert.strictEqual(incoming.length, 1);\n\t\tassert.strictEqual(incoming[0].from.name, 'INCOMING');\n\n\t\tconst outgoing = await commands.executeCommand<vscode.CallHierarchyOutgoingCall[]>('vscode.provideOutgoingCalls', root[0]);\n\t\tassert.strictEqual(outgoing.length, 1);\n\t\tassert.strictEqual(outgoing[0].to.name, 'OUTGOING');\n\t});\n\n\ttest('prepareCallHierarchy throws TypeError if clangd returns empty result #137415', async function () {\n\n\t\tdisposables.push(extHost.registerCallHierarchyProvider(nullExtensionDescription, defaultSelector, new class implements vscode.CallHierarchyProvider {\n\t\t\tprepareCallHierarchy(document: vscode.TextDocument, position: vscode.Position,): vscode.ProviderResult<vscode.CallHierarchyItem[]> {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tprovideCallHierarchyIncomingCalls(item: vscode.CallHierarchyItem, token: vscode.CancellationToken): vscode.ProviderResult<vscode.CallHierarchyIncomingCall[]> {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tprovideCallHierarchyOutgoingCalls(item: vscode.CallHierarchyItem, token: vscode.CancellationToken): vscode.ProviderResult<vscode.CallHierarchyOutgoingCall[]> {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\n\t\tconst root = await commands.executeCommand<vscode.CallHierarchyItem[]>('vscode.prepareCallHierarchy', model.uri, new types.Position(0, 0));\n\n\t\tassert.ok(Array.isArray(root));\n\t\tassert.strictEqual(root.length, 0);\n\t});\n\n\t// --- type hierarchy\n\n\ttest('TypeHierarchy, back and forth', async function () {\n\n\n\t\tdisposables.push(extHost.registerTypeHierarchyProvider(nullExtensionDescription, defaultSelector, new class implements vscode.TypeHierarchyProvider {\n\t\t\tprepareTypeHierarchy(document: vscode.TextDocument, position: vscode.Position, token: vscode.CancellationToken): vscode.ProviderResult<vscode.TypeHierarchyItem[]> {\n\t\t\t\treturn [new types.TypeHierarchyItem(types.SymbolKind.Constant, 'ROOT', 'ROOT', document.uri, new types.Range(0, 0, 0, 0), new types.Range(0, 0, 0, 0))];\n\t\t\t}\n\t\t\tprovideTypeHierarchySupertypes(item: vscode.TypeHierarchyItem, token: vscode.CancellationToken): vscode.ProviderResult<vscode.TypeHierarchyItem[]> {\n\t\t\t\treturn [new types.TypeHierarchyItem(types.SymbolKind.Constant, 'SUPER', 'SUPER', item.uri, new types.Range(0, 0, 0, 0), new types.Range(0, 0, 0, 0))];\n\t\t\t}\n\t\t\tprovideTypeHierarchySubtypes(item: vscode.TypeHierarchyItem, token: vscode.CancellationToken): vscode.ProviderResult<vscode.TypeHierarchyItem[]> {\n\t\t\t\treturn [new types.TypeHierarchyItem(types.SymbolKind.Constant, 'SUB', 'SUB', item.uri, new types.Range(0, 0, 0, 0), new types.Range(0, 0, 0, 0))];\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\n\t\tconst root = await commands.executeCommand<vscode.TypeHierarchyItem[]>('vscode.prepareTypeHierarchy', model.uri, new types.Position(0, 0));\n\n\t\tassert.ok(Array.isArray(root));\n\t\tassert.strictEqual(root.length, 1);\n\t\tassert.strictEqual(root[0].name, 'ROOT');\n\n\t\tconst incoming = await commands.executeCommand<vscode.TypeHierarchyItem[]>('vscode.provideSupertypes', root[0]);\n\t\tassert.strictEqual(incoming.length, 1);\n\t\tassert.strictEqual(incoming[0].name, 'SUPER');\n\n\t\tconst outgoing = await commands.executeCommand<vscode.TypeHierarchyItem[]>('vscode.provideSubtypes', root[0]);\n\t\tassert.strictEqual(outgoing.length, 1);\n\t\tassert.strictEqual(outgoing[0].name, 'SUB');\n\t});\n\n\ttest('selectionRangeProvider on inner array always returns outer array #91852', async function () {\n\n\t\tdisposables.push(extHost.registerSelectionRangeProvider(nullExtensionDescription, defaultSelector, <vscode.SelectionRangeProvider>{\n\t\t\tprovideSelectionRanges(_doc, positions) {\n\t\t\t\tconst [first] = positions;\n\t\t\t\treturn [\n\t\t\t\t\tnew types.SelectionRange(new types.Range(first.line, first.character, first.line, first.character)),\n\t\t\t\t];\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = await commands.executeCommand<vscode.SelectionRange[]>('vscode.executeSelectionRangeProvider', model.uri, [new types.Position(0, 10)]);\n\t\tassert.strictEqual(value.length, 1);\n\t\tassert.strictEqual(value[0].range.start.line, 0);\n\t\tassert.strictEqual(value[0].range.start.character, 10);\n\t\tassert.strictEqual(value[0].range.end.line, 0);\n\t\tassert.strictEqual(value[0].range.end.character, 10);\n\t});\n\n\ttest('more element test of selectionRangeProvider on inner array always returns outer array #91852', async function () {\n\n\t\tdisposables.push(extHost.registerSelectionRangeProvider(nullExtensionDescription, defaultSelector, <vscode.SelectionRangeProvider>{\n\t\t\tprovideSelectionRanges(_doc, positions) {\n\t\t\t\tconst [first, second] = positions;\n\t\t\t\treturn [\n\t\t\t\t\tnew types.SelectionRange(new types.Range(first.line, first.character, first.line, first.character)),\n\t\t\t\t\tnew types.SelectionRange(new types.Range(second.line, second.character, second.line, second.character)),\n\t\t\t\t];\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = await commands.executeCommand<vscode.SelectionRange[]>(\n\t\t\t'vscode.executeSelectionRangeProvider',\n\t\t\tmodel.uri,\n\t\t\t[new types.Position(0, 0), new types.Position(0, 10)]\n\t\t);\n\t\tassert.strictEqual(value.length, 2);\n\t\tassert.strictEqual(value[0].range.start.line, 0);\n\t\tassert.strictEqual(value[0].range.start.character, 0);\n\t\tassert.strictEqual(value[0].range.end.line, 0);\n\t\tassert.strictEqual(value[0].range.end.character, 0);\n\t\tassert.strictEqual(value[1].range.start.line, 0);\n\t\tassert.strictEqual(value[1].range.start.character, 10);\n\t\tassert.strictEqual(value[1].range.end.line, 0);\n\t\tassert.strictEqual(value[1].range.end.character, 10);\n\t});\n});\n"],
  "mappings": "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",
  "names": ["edit", "a", "b", "c", "d"]
}
