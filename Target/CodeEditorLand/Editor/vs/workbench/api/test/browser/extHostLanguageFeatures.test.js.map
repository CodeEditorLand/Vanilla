{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/test/browser/extHostLanguageFeatures.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { TestInstantiationService } from '../../../../platform/instantiation/test/common/instantiationServiceMock.js';\nimport { setUnexpectedErrorHandler, errorHandler } from '../../../../base/common/errors.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport * as types from '../../common/extHostTypes.js';\nimport { createTextModel } from '../../../../editor/test/common/testTextModel.js';\nimport { Position as EditorPosition, Position } from '../../../../editor/common/core/position.js';\nimport { Range as EditorRange } from '../../../../editor/common/core/range.js';\nimport { TestRPCProtocol } from '../common/testRPCProtocol.js';\nimport { IMarkerService } from '../../../../platform/markers/common/markers.js';\nimport { MarkerService } from '../../../../platform/markers/common/markerService.js';\nimport { ExtHostLanguageFeatures } from '../../common/extHostLanguageFeatures.js';\nimport { MainThreadLanguageFeatures } from '../../browser/mainThreadLanguageFeatures.js';\nimport { ExtHostCommands } from '../../common/extHostCommands.js';\nimport { MainThreadCommands } from '../../browser/mainThreadCommands.js';\nimport { ExtHostDocuments } from '../../common/extHostDocuments.js';\nimport { ExtHostDocumentsAndEditors } from '../../common/extHostDocumentsAndEditors.js';\nimport * as languages from '../../../../editor/common/languages.js';\nimport { getCodeLensModel } from '../../../../editor/contrib/codelens/browser/codelens.js';\nimport { getDefinitionsAtPosition, getImplementationsAtPosition, getTypeDefinitionsAtPosition, getDeclarationsAtPosition, getReferencesAtPosition } from '../../../../editor/contrib/gotoSymbol/browser/goToSymbol.js';\nimport { getHoversPromise } from '../../../../editor/contrib/hover/browser/getHover.js';\nimport { getOccurrencesAtPosition } from '../../../../editor/contrib/wordHighlighter/browser/wordHighlighter.js';\nimport { getCodeActions } from '../../../../editor/contrib/codeAction/browser/codeAction.js';\nimport { getWorkspaceSymbols } from '../../../contrib/search/common/search.js';\nimport { rename } from '../../../../editor/contrib/rename/browser/rename.js';\nimport { provideSignatureHelp } from '../../../../editor/contrib/parameterHints/browser/provideSignatureHelp.js';\nimport { provideSuggestionItems, CompletionOptions } from '../../../../editor/contrib/suggest/browser/suggest.js';\nimport { getDocumentFormattingEditsUntilResult, getDocumentRangeFormattingEditsUntilResult, getOnTypeFormattingEdits } from '../../../../editor/contrib/format/browser/format.js';\nimport { getLinks } from '../../../../editor/contrib/links/browser/getLinks.js';\nimport { MainContext, ExtHostContext } from '../../common/extHost.protocol.js';\nimport { ExtHostDiagnostics } from '../../common/extHostDiagnostics.js';\nimport type * as vscode from 'vscode';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { NullLogService } from '../../../../platform/log/common/log.js';\nimport { ITextModel, EndOfLineSequence } from '../../../../editor/common/model.js';\nimport { getColors } from '../../../../editor/contrib/colorPicker/browser/color.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { nullExtensionDescription as defaultExtension } from '../../../services/extensions/common/extensions.js';\nimport { provideSelectionRanges } from '../../../../editor/contrib/smartSelect/browser/smartSelect.js';\nimport { mock } from '../../../../base/test/common/mock.js';\nimport { IEditorWorkerService } from '../../../../editor/common/services/editorWorker.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { NullApiDeprecationService } from '../../common/extHostApiDeprecationService.js';\nimport { Progress } from '../../../../platform/progress/common/progress.js';\nimport { IExtHostFileSystemInfo } from '../../common/extHostFileSystemInfo.js';\nimport { URITransformerService } from '../../common/extHostUriTransformerService.js';\nimport { OutlineModel } from '../../../../editor/contrib/documentSymbols/browser/outlineModel.js';\nimport { ILanguageFeaturesService } from '../../../../editor/common/services/languageFeatures.js';\nimport { LanguageFeaturesService } from '../../../../editor/common/services/languageFeaturesService.js';\nimport { CodeActionTriggerSource } from '../../../../editor/contrib/codeAction/common/types.js';\nimport { IUriIdentityService } from '../../../../platform/uriIdentity/common/uriIdentity.js';\nimport { IExtHostTelemetry } from '../../common/extHostTelemetry.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\n\nsuite('ExtHostLanguageFeatures', function () {\n\n\tconst defaultSelector = { scheme: 'far' };\n\tlet model: ITextModel;\n\tlet extHost: ExtHostLanguageFeatures;\n\tlet mainThread: MainThreadLanguageFeatures;\n\tconst disposables = new DisposableStore();\n\tlet rpcProtocol: TestRPCProtocol;\n\tlet languageFeaturesService: ILanguageFeaturesService;\n\tlet originalErrorHandler: (e: any) => any;\n\tlet instantiationService: TestInstantiationService;\n\n\tsetup(() => {\n\n\t\tmodel = createTextModel(\n\t\t\t[\n\t\t\t\t'This is the first line',\n\t\t\t\t'This is the second line',\n\t\t\t\t'This is the third line',\n\t\t\t].join('\\n'),\n\t\t\tundefined,\n\t\t\tundefined,\n\t\t\tURI.parse('far://testing/file.a'));\n\n\t\trpcProtocol = new TestRPCProtocol();\n\n\t\tlanguageFeaturesService = new LanguageFeaturesService();\n\n\t\t// Use IInstantiationService to get typechecking when instantiating\n\t\tlet inst: IInstantiationService;\n\t\t{\n\t\t\tinstantiationService = new TestInstantiationService();\n\t\t\tinstantiationService.stub(IMarkerService, MarkerService);\n\t\t\tinstantiationService.set(ILanguageFeaturesService, languageFeaturesService);\n\t\t\tinstantiationService.set(IUriIdentityService, new class extends mock<IUriIdentityService>() {\n\t\t\t\toverride asCanonicalUri(uri: URI): URI {\n\t\t\t\t\treturn uri;\n\t\t\t\t}\n\t\t\t});\n\t\t\tinst = instantiationService;\n\t\t}\n\n\t\toriginalErrorHandler = errorHandler.getUnexpectedErrorHandler();\n\t\tsetUnexpectedErrorHandler(() => { });\n\n\t\tconst extHostDocumentsAndEditors = new ExtHostDocumentsAndEditors(rpcProtocol, new NullLogService());\n\t\textHostDocumentsAndEditors.$acceptDocumentsAndEditorsDelta({\n\t\t\taddedDocuments: [{\n\t\t\t\tisDirty: false,\n\t\t\t\tversionId: model.getVersionId(),\n\t\t\t\tlanguageId: model.getLanguageId(),\n\t\t\t\turi: model.uri,\n\t\t\t\tlines: model.getValue().split(model.getEOL()),\n\t\t\t\tEOL: model.getEOL(),\n\t\t\t}]\n\t\t});\n\t\tconst extHostDocuments = new ExtHostDocuments(rpcProtocol, extHostDocumentsAndEditors);\n\t\trpcProtocol.set(ExtHostContext.ExtHostDocuments, extHostDocuments);\n\n\t\tconst commands = new ExtHostCommands(rpcProtocol, new NullLogService(), new class extends mock<IExtHostTelemetry>() {\n\t\t\toverride onExtensionError(): boolean {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t\trpcProtocol.set(ExtHostContext.ExtHostCommands, commands);\n\t\trpcProtocol.set(MainContext.MainThreadCommands, disposables.add(inst.createInstance(MainThreadCommands, rpcProtocol)));\n\n\t\tconst diagnostics = new ExtHostDiagnostics(rpcProtocol, new NullLogService(), new class extends mock<IExtHostFileSystemInfo>() { }, extHostDocumentsAndEditors);\n\t\trpcProtocol.set(ExtHostContext.ExtHostDiagnostics, diagnostics);\n\n\t\textHost = new ExtHostLanguageFeatures(rpcProtocol, new URITransformerService(null), extHostDocuments, commands, diagnostics, new NullLogService(), NullApiDeprecationService, new class extends mock<IExtHostTelemetry>() {\n\t\t\toverride onExtensionError(): boolean {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t\trpcProtocol.set(ExtHostContext.ExtHostLanguageFeatures, extHost);\n\n\t\tmainThread = rpcProtocol.set(MainContext.MainThreadLanguageFeatures, disposables.add(inst.createInstance(MainThreadLanguageFeatures, rpcProtocol)));\n\t});\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\n\t\tsetUnexpectedErrorHandler(originalErrorHandler);\n\t\tmodel.dispose();\n\t\tmainThread.dispose();\n\t\tinstantiationService.dispose();\n\n\t\treturn rpcProtocol.sync();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\t// --- outline\n\n\ttest('DocumentSymbols, register/deregister', async () => {\n\t\tassert.strictEqual(languageFeaturesService.documentSymbolProvider.all(model).length, 0);\n\t\tconst d1 = extHost.registerDocumentSymbolProvider(defaultExtension, defaultSelector, new class implements vscode.DocumentSymbolProvider {\n\t\t\tprovideDocumentSymbols() {\n\t\t\t\treturn <vscode.SymbolInformation[]>[];\n\t\t\t}\n\t\t});\n\n\t\tawait rpcProtocol.sync();\n\t\tassert.strictEqual(languageFeaturesService.documentSymbolProvider.all(model).length, 1);\n\t\td1.dispose();\n\t\treturn rpcProtocol.sync();\n\n\t});\n\n\ttest('DocumentSymbols, evil provider', async () => {\n\t\tdisposables.add(extHost.registerDocumentSymbolProvider(defaultExtension, defaultSelector, new class implements vscode.DocumentSymbolProvider {\n\t\t\tprovideDocumentSymbols(): any {\n\t\t\t\tthrow new Error('evil document symbol provider');\n\t\t\t}\n\t\t}));\n\t\tdisposables.add(extHost.registerDocumentSymbolProvider(defaultExtension, defaultSelector, new class implements vscode.DocumentSymbolProvider {\n\t\t\tprovideDocumentSymbols(): any {\n\t\t\t\treturn [new types.SymbolInformation('test', types.SymbolKind.Field, new types.Range(0, 0, 0, 0))];\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = (await OutlineModel.create(languageFeaturesService.documentSymbolProvider, model, CancellationToken.None)).asListOfDocumentSymbols();\n\t\tassert.strictEqual(value.length, 1);\n\t});\n\n\ttest('DocumentSymbols, data conversion', async () => {\n\t\tdisposables.add(extHost.registerDocumentSymbolProvider(defaultExtension, defaultSelector, new class implements vscode.DocumentSymbolProvider {\n\t\t\tprovideDocumentSymbols(): any {\n\t\t\t\treturn [new types.SymbolInformation('test', types.SymbolKind.Field, new types.Range(0, 0, 0, 0))];\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = (await OutlineModel.create(languageFeaturesService.documentSymbolProvider, model, CancellationToken.None)).asListOfDocumentSymbols();\n\t\tassert.strictEqual(value.length, 1);\n\t\tconst entry = value[0];\n\t\tassert.strictEqual(entry.name, 'test');\n\t\tassert.deepStrictEqual(entry.range, { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 1 });\n\t});\n\n\ttest('Quick Outline uses a not ideal sorting, #138502', async function () {\n\t\tconst symbols = [\n\t\t\t{ name: 'containers', range: { startLineNumber: 1, startColumn: 1, endLineNumber: 4, endColumn: 26 } },\n\t\t\t{ name: 'container 0', range: { startLineNumber: 2, startColumn: 5, endLineNumber: 5, endColumn: 1 } },\n\t\t\t{ name: 'name', range: { startLineNumber: 2, startColumn: 5, endLineNumber: 2, endColumn: 16 } },\n\t\t\t{ name: 'ports', range: { startLineNumber: 3, startColumn: 5, endLineNumber: 5, endColumn: 1 } },\n\t\t\t{ name: 'ports 0', range: { startLineNumber: 4, startColumn: 9, endLineNumber: 4, endColumn: 26 } },\n\t\t\t{ name: 'containerPort', range: { startLineNumber: 4, startColumn: 9, endLineNumber: 4, endColumn: 26 } }\n\t\t];\n\n\t\tdisposables.add(extHost.registerDocumentSymbolProvider(defaultExtension, defaultSelector, {\n\t\t\tprovideDocumentSymbols: (doc, token): any => {\n\t\t\t\treturn symbols.map(s => {\n\t\t\t\t\treturn new types.SymbolInformation(\n\t\t\t\t\t\ts.name,\n\t\t\t\t\t\ttypes.SymbolKind.Object,\n\t\t\t\t\t\tnew types.Range(s.range.startLineNumber - 1, s.range.startColumn - 1, s.range.endLineNumber - 1, s.range.endColumn - 1)\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\n\t\tconst value = (await OutlineModel.create(languageFeaturesService.documentSymbolProvider, model, CancellationToken.None)).asListOfDocumentSymbols();\n\n\t\tassert.strictEqual(value.length, 6);\n\t\tassert.deepStrictEqual(value.map(s => s.name), ['containers', 'container 0', 'name', 'ports', 'ports 0', 'containerPort']);\n\t});\n\n\t// --- code lens\n\n\ttest('CodeLens, evil provider', async () => {\n\n\t\tdisposables.add(extHost.registerCodeLensProvider(defaultExtension, defaultSelector, new class implements vscode.CodeLensProvider {\n\t\t\tprovideCodeLenses(): any {\n\t\t\t\tthrow new Error('evil');\n\t\t\t}\n\t\t}));\n\t\tdisposables.add(extHost.registerCodeLensProvider(defaultExtension, defaultSelector, new class implements vscode.CodeLensProvider {\n\t\t\tprovideCodeLenses() {\n\t\t\t\treturn [new types.CodeLens(new types.Range(0, 0, 0, 0))];\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = await getCodeLensModel(languageFeaturesService.codeLensProvider, model, CancellationToken.None);\n\t\tassert.strictEqual(value.lenses.length, 1);\n\t\tvalue.dispose();\n\t});\n\n\ttest('CodeLens, do not resolve a resolved lens', async () => {\n\n\t\tdisposables.add(extHost.registerCodeLensProvider(defaultExtension, defaultSelector, new class implements vscode.CodeLensProvider {\n\t\t\tprovideCodeLenses(): any {\n\t\t\t\treturn [new types.CodeLens(\n\t\t\t\t\tnew types.Range(0, 0, 0, 0),\n\t\t\t\t\t{ command: 'id', title: 'Title' })];\n\t\t\t}\n\t\t\tresolveCodeLens(): any {\n\t\t\t\tassert.ok(false, 'do not resolve');\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = await getCodeLensModel(languageFeaturesService.codeLensProvider, model, CancellationToken.None);\n\t\tassert.strictEqual(value.lenses.length, 1);\n\t\tconst [data] = value.lenses;\n\t\tconst symbol = await Promise.resolve(data.provider.resolveCodeLens!(model, data.symbol, CancellationToken.None));\n\t\tassert.strictEqual(symbol!.command!.id, 'id');\n\t\tassert.strictEqual(symbol!.command!.title, 'Title');\n\t\tvalue.dispose();\n\t});\n\n\ttest('CodeLens, missing command', async () => {\n\n\t\tdisposables.add(extHost.registerCodeLensProvider(defaultExtension, defaultSelector, new class implements vscode.CodeLensProvider {\n\t\t\tprovideCodeLenses() {\n\t\t\t\treturn [new types.CodeLens(new types.Range(0, 0, 0, 0))];\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = await getCodeLensModel(languageFeaturesService.codeLensProvider, model, CancellationToken.None);\n\t\tassert.strictEqual(value.lenses.length, 1);\n\t\tconst [data] = value.lenses;\n\t\tconst symbol = await Promise.resolve(data.provider.resolveCodeLens!(model, data.symbol, CancellationToken.None));\n\t\tassert.strictEqual(symbol, undefined);\n\t\tvalue.dispose();\n\t});\n\n\t// --- definition\n\n\ttest('Definition, data conversion', async () => {\n\n\t\tdisposables.add(extHost.registerDefinitionProvider(defaultExtension, defaultSelector, new class implements vscode.DefinitionProvider {\n\t\t\tprovideDefinition(): any {\n\t\t\t\treturn [new types.Location(model.uri, new types.Range(1, 2, 3, 4))];\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = await getDefinitionsAtPosition(languageFeaturesService.definitionProvider, model, new EditorPosition(1, 1), false, CancellationToken.None);\n\t\tassert.strictEqual(value.length, 1);\n\t\tconst [entry] = value;\n\t\tassert.deepStrictEqual(entry.range, { startLineNumber: 2, startColumn: 3, endLineNumber: 4, endColumn: 5 });\n\t\tassert.strictEqual(entry.uri.toString(), model.uri.toString());\n\t});\n\n\ttest('Definition, one or many', async () => {\n\n\t\tdisposables.add(extHost.registerDefinitionProvider(defaultExtension, defaultSelector, new class implements vscode.DefinitionProvider {\n\t\t\tprovideDefinition(): any {\n\t\t\t\treturn [new types.Location(model.uri, new types.Range(1, 1, 1, 1))];\n\t\t\t}\n\t\t}));\n\t\tdisposables.add(extHost.registerDefinitionProvider(defaultExtension, defaultSelector, new class implements vscode.DefinitionProvider {\n\t\t\tprovideDefinition(): any {\n\t\t\t\treturn new types.Location(model.uri, new types.Range(2, 1, 1, 1));\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = await getDefinitionsAtPosition(languageFeaturesService.definitionProvider, model, new EditorPosition(1, 1), false, CancellationToken.None);\n\t\tassert.strictEqual(value.length, 2);\n\t});\n\n\ttest('Definition, registration order', async () => {\n\n\t\tdisposables.add(extHost.registerDefinitionProvider(defaultExtension, defaultSelector, new class implements vscode.DefinitionProvider {\n\t\t\tprovideDefinition(): any {\n\t\t\t\treturn [new types.Location(URI.parse('far://first'), new types.Range(2, 3, 4, 5))];\n\t\t\t}\n\t\t}));\n\n\t\tdisposables.add(extHost.registerDefinitionProvider(defaultExtension, defaultSelector, new class implements vscode.DefinitionProvider {\n\t\t\tprovideDefinition(): any {\n\t\t\t\treturn new types.Location(URI.parse('far://second'), new types.Range(1, 2, 3, 4));\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = await getDefinitionsAtPosition(languageFeaturesService.definitionProvider, model, new EditorPosition(1, 1), false, CancellationToken.None);\n\t\tassert.strictEqual(value.length, 2);\n\t\t// let [first, second] = value;\n\t\tassert.strictEqual(value[0].uri.authority, 'second');\n\t\tassert.strictEqual(value[1].uri.authority, 'first');\n\t});\n\n\ttest('Definition, evil provider', async () => {\n\n\t\tdisposables.add(extHost.registerDefinitionProvider(defaultExtension, defaultSelector, new class implements vscode.DefinitionProvider {\n\t\t\tprovideDefinition(): any {\n\t\t\t\tthrow new Error('evil provider');\n\t\t\t}\n\t\t}));\n\t\tdisposables.add(extHost.registerDefinitionProvider(defaultExtension, defaultSelector, new class implements vscode.DefinitionProvider {\n\t\t\tprovideDefinition(): any {\n\t\t\t\treturn new types.Location(model.uri, new types.Range(1, 1, 1, 1));\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = await getDefinitionsAtPosition(languageFeaturesService.definitionProvider, model, new EditorPosition(1, 1), false, CancellationToken.None);\n\t\tassert.strictEqual(value.length, 1);\n\t});\n\n\t// -- declaration\n\n\ttest('Declaration, data conversion', async () => {\n\n\t\tdisposables.add(extHost.registerDeclarationProvider(defaultExtension, defaultSelector, new class implements vscode.DeclarationProvider {\n\t\t\tprovideDeclaration(): any {\n\t\t\t\treturn [new types.Location(model.uri, new types.Range(1, 2, 3, 4))];\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = await getDeclarationsAtPosition(languageFeaturesService.declarationProvider, model, new EditorPosition(1, 1), false, CancellationToken.None);\n\t\tassert.strictEqual(value.length, 1);\n\t\tconst [entry] = value;\n\t\tassert.deepStrictEqual(entry.range, { startLineNumber: 2, startColumn: 3, endLineNumber: 4, endColumn: 5 });\n\t\tassert.strictEqual(entry.uri.toString(), model.uri.toString());\n\t});\n\n\t// --- implementation\n\n\ttest('Implementation, data conversion', async () => {\n\n\t\tdisposables.add(extHost.registerImplementationProvider(defaultExtension, defaultSelector, new class implements vscode.ImplementationProvider {\n\t\t\tprovideImplementation(): any {\n\t\t\t\treturn [new types.Location(model.uri, new types.Range(1, 2, 3, 4))];\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = await getImplementationsAtPosition(languageFeaturesService.implementationProvider, model, new EditorPosition(1, 1), false, CancellationToken.None);\n\t\tassert.strictEqual(value.length, 1);\n\t\tconst [entry] = value;\n\t\tassert.deepStrictEqual(entry.range, { startLineNumber: 2, startColumn: 3, endLineNumber: 4, endColumn: 5 });\n\t\tassert.strictEqual(entry.uri.toString(), model.uri.toString());\n\t});\n\n\t// --- type definition\n\n\ttest('Type Definition, data conversion', async () => {\n\n\t\tdisposables.add(extHost.registerTypeDefinitionProvider(defaultExtension, defaultSelector, new class implements vscode.TypeDefinitionProvider {\n\t\t\tprovideTypeDefinition(): any {\n\t\t\t\treturn [new types.Location(model.uri, new types.Range(1, 2, 3, 4))];\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = await getTypeDefinitionsAtPosition(languageFeaturesService.typeDefinitionProvider, model, new EditorPosition(1, 1), false, CancellationToken.None);\n\t\tassert.strictEqual(value.length, 1);\n\t\tconst [entry] = value;\n\t\tassert.deepStrictEqual(entry.range, { startLineNumber: 2, startColumn: 3, endLineNumber: 4, endColumn: 5 });\n\t\tassert.strictEqual(entry.uri.toString(), model.uri.toString());\n\t});\n\n\t// --- extra info\n\n\ttest('HoverProvider, word range at pos', async () => {\n\n\t\tdisposables.add(extHost.registerHoverProvider(defaultExtension, defaultSelector, new class implements vscode.HoverProvider {\n\t\t\tprovideHover(): any {\n\t\t\t\treturn new types.Hover('Hello');\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst hovers = await getHoversPromise(languageFeaturesService.hoverProvider, model, new EditorPosition(1, 1), CancellationToken.None);\n\t\tassert.strictEqual(hovers.length, 1);\n\t\tconst [entry] = hovers;\n\t\tassert.deepStrictEqual(entry.range, { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 5 });\n\t});\n\n\n\ttest('HoverProvider, given range', async () => {\n\n\t\tdisposables.add(extHost.registerHoverProvider(defaultExtension, defaultSelector, new class implements vscode.HoverProvider {\n\t\t\tprovideHover(): any {\n\t\t\t\treturn new types.Hover('Hello', new types.Range(3, 0, 8, 7));\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst hovers = await getHoversPromise(languageFeaturesService.hoverProvider, model, new EditorPosition(1, 1), CancellationToken.None);\n\t\tassert.strictEqual(hovers.length, 1);\n\t\tconst [entry] = hovers;\n\t\tassert.deepStrictEqual(entry.range, { startLineNumber: 4, startColumn: 1, endLineNumber: 9, endColumn: 8 });\n\t});\n\n\n\ttest('HoverProvider, registration order', async () => {\n\t\tdisposables.add(extHost.registerHoverProvider(defaultExtension, defaultSelector, new class implements vscode.HoverProvider {\n\t\t\tprovideHover(): any {\n\t\t\t\treturn new types.Hover('registered first');\n\t\t\t}\n\t\t}));\n\n\n\t\tdisposables.add(extHost.registerHoverProvider(defaultExtension, defaultSelector, new class implements vscode.HoverProvider {\n\t\t\tprovideHover(): any {\n\t\t\t\treturn new types.Hover('registered second');\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = await getHoversPromise(languageFeaturesService.hoverProvider, model, new EditorPosition(1, 1), CancellationToken.None);\n\t\tassert.strictEqual(value.length, 2);\n\t\tconst [first, second] = value;\n\t\tassert.strictEqual(first.contents[0].value, 'registered second');\n\t\tassert.strictEqual(second.contents[0].value, 'registered first');\n\t});\n\n\n\ttest('HoverProvider, evil provider', async () => {\n\n\t\tdisposables.add(extHost.registerHoverProvider(defaultExtension, defaultSelector, new class implements vscode.HoverProvider {\n\t\t\tprovideHover(): any {\n\t\t\t\tthrow new Error('evil');\n\t\t\t}\n\t\t}));\n\t\tdisposables.add(extHost.registerHoverProvider(defaultExtension, defaultSelector, new class implements vscode.HoverProvider {\n\t\t\tprovideHover(): any {\n\t\t\t\treturn new types.Hover('Hello');\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst hovers = await getHoversPromise(languageFeaturesService.hoverProvider, model, new EditorPosition(1, 1), CancellationToken.None);\n\t\tassert.strictEqual(hovers.length, 1);\n\t});\n\n\t// --- occurrences\n\n\ttest('Occurrences, data conversion', async () => {\n\n\t\tdisposables.add(extHost.registerDocumentHighlightProvider(defaultExtension, defaultSelector, new class implements vscode.DocumentHighlightProvider {\n\t\t\tprovideDocumentHighlights(): any {\n\t\t\t\treturn [new types.DocumentHighlight(new types.Range(0, 0, 0, 4))];\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = (await getOccurrencesAtPosition(languageFeaturesService.documentHighlightProvider, model, new EditorPosition(1, 2), CancellationToken.None))!;\n\t\tassert.strictEqual(value.size, 1);\n\t\tconst [entry] = Array.from(value.values())[0];\n\t\tassert.deepStrictEqual(entry.range, { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 5 });\n\t\tassert.strictEqual(entry.kind, languages.DocumentHighlightKind.Text);\n\t});\n\n\ttest('Occurrences, order 1/2', async () => {\n\n\t\tdisposables.add(extHost.registerDocumentHighlightProvider(defaultExtension, defaultSelector, new class implements vscode.DocumentHighlightProvider {\n\t\t\tprovideDocumentHighlights(): any {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}));\n\t\tdisposables.add(extHost.registerDocumentHighlightProvider(defaultExtension, '*', new class implements vscode.DocumentHighlightProvider {\n\t\t\tprovideDocumentHighlights(): any {\n\t\t\t\treturn [new types.DocumentHighlight(new types.Range(0, 0, 0, 4))];\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = (await getOccurrencesAtPosition(languageFeaturesService.documentHighlightProvider, model, new EditorPosition(1, 2), CancellationToken.None))!;\n\t\tassert.strictEqual(value.size, 1);\n\t\tconst [entry] = Array.from(value.values())[0];\n\t\tassert.deepStrictEqual(entry.range, { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 5 });\n\t\tassert.strictEqual(entry.kind, languages.DocumentHighlightKind.Text);\n\t});\n\n\ttest('Occurrences, order 2/2', async () => {\n\n\t\tdisposables.add(extHost.registerDocumentHighlightProvider(defaultExtension, defaultSelector, new class implements vscode.DocumentHighlightProvider {\n\t\t\tprovideDocumentHighlights(): any {\n\t\t\t\treturn [new types.DocumentHighlight(new types.Range(0, 0, 0, 2))];\n\t\t\t}\n\t\t}));\n\t\tdisposables.add(extHost.registerDocumentHighlightProvider(defaultExtension, '*', new class implements vscode.DocumentHighlightProvider {\n\t\t\tprovideDocumentHighlights(): any {\n\t\t\t\treturn [new types.DocumentHighlight(new types.Range(0, 0, 0, 4))];\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = (await getOccurrencesAtPosition(languageFeaturesService.documentHighlightProvider, model, new EditorPosition(1, 2), CancellationToken.None))!;\n\t\tassert.strictEqual(value.size, 1);\n\t\tconst [entry] = Array.from(value.values())[0];\n\t\tassert.deepStrictEqual(entry.range, { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 3 });\n\t\tassert.strictEqual(entry.kind, languages.DocumentHighlightKind.Text);\n\t});\n\n\ttest('Occurrences, evil provider', async () => {\n\n\t\tdisposables.add(extHost.registerDocumentHighlightProvider(defaultExtension, defaultSelector, new class implements vscode.DocumentHighlightProvider {\n\t\t\tprovideDocumentHighlights(): any {\n\t\t\t\tthrow new Error('evil');\n\t\t\t}\n\t\t}));\n\n\t\tdisposables.add(extHost.registerDocumentHighlightProvider(defaultExtension, defaultSelector, new class implements vscode.DocumentHighlightProvider {\n\t\t\tprovideDocumentHighlights(): any {\n\t\t\t\treturn [new types.DocumentHighlight(new types.Range(0, 0, 0, 4))];\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = await getOccurrencesAtPosition(languageFeaturesService.documentHighlightProvider, model, new EditorPosition(1, 2), CancellationToken.None);\n\t\tassert.strictEqual(value!.size, 1);\n\t});\n\n\t// --- references\n\n\ttest('References, registration order', async () => {\n\n\t\tdisposables.add(extHost.registerReferenceProvider(defaultExtension, defaultSelector, new class implements vscode.ReferenceProvider {\n\t\t\tprovideReferences(): any {\n\t\t\t\treturn [new types.Location(URI.parse('far://register/first'), new types.Range(0, 0, 0, 0))];\n\t\t\t}\n\t\t}));\n\n\t\tdisposables.add(extHost.registerReferenceProvider(defaultExtension, defaultSelector, new class implements vscode.ReferenceProvider {\n\t\t\tprovideReferences(): any {\n\t\t\t\treturn [new types.Location(URI.parse('far://register/second'), new types.Range(0, 0, 0, 0))];\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = await getReferencesAtPosition(languageFeaturesService.referenceProvider, model, new EditorPosition(1, 2), false, false, CancellationToken.None);\n\t\tassert.strictEqual(value.length, 2);\n\t\tconst [first, second] = value;\n\t\tassert.strictEqual(first.uri.path, '/second');\n\t\tassert.strictEqual(second.uri.path, '/first');\n\t});\n\n\ttest('References, data conversion', async () => {\n\n\t\tdisposables.add(extHost.registerReferenceProvider(defaultExtension, defaultSelector, new class implements vscode.ReferenceProvider {\n\t\t\tprovideReferences(): any {\n\t\t\t\treturn [new types.Location(model.uri, new types.Position(0, 0))];\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = await getReferencesAtPosition(languageFeaturesService.referenceProvider, model, new EditorPosition(1, 2), false, false, CancellationToken.None);\n\t\tassert.strictEqual(value.length, 1);\n\t\tconst [item] = value;\n\t\tassert.deepStrictEqual(item.range, { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 1 });\n\t\tassert.strictEqual(item.uri.toString(), model.uri.toString());\n\t});\n\n\ttest('References, evil provider', async () => {\n\n\t\tdisposables.add(extHost.registerReferenceProvider(defaultExtension, defaultSelector, new class implements vscode.ReferenceProvider {\n\t\t\tprovideReferences(): any {\n\t\t\t\tthrow new Error('evil');\n\t\t\t}\n\t\t}));\n\t\tdisposables.add(extHost.registerReferenceProvider(defaultExtension, defaultSelector, new class implements vscode.ReferenceProvider {\n\t\t\tprovideReferences(): any {\n\t\t\t\treturn [new types.Location(model.uri, new types.Range(0, 0, 0, 0))];\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = await getReferencesAtPosition(languageFeaturesService.referenceProvider, model, new EditorPosition(1, 2), false, false, CancellationToken.None);\n\t\tassert.strictEqual(value.length, 1);\n\t});\n\n\t// --- quick fix\n\n\ttest('Quick Fix, command data conversion', async () => {\n\n\t\tdisposables.add(extHost.registerCodeActionProvider(defaultExtension, defaultSelector, {\n\t\t\tprovideCodeActions(): vscode.Command[] {\n\t\t\t\treturn [\n\t\t\t\t\t{ command: 'test1', title: 'Testing1' },\n\t\t\t\t\t{ command: 'test2', title: 'Testing2' }\n\t\t\t\t];\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = await getCodeActions(languageFeaturesService.codeActionProvider, model, model.getFullModelRange(), { type: languages.CodeActionTriggerType.Invoke, triggerAction: CodeActionTriggerSource.QuickFix }, Progress.None, CancellationToken.None);\n\t\tconst { validActions: actions } = value;\n\t\tassert.strictEqual(actions.length, 2);\n\t\tconst [first, second] = actions;\n\t\tassert.strictEqual(first.action.title, 'Testing1');\n\t\tassert.strictEqual(first.action.command!.id, 'test1');\n\t\tassert.strictEqual(second.action.title, 'Testing2');\n\t\tassert.strictEqual(second.action.command!.id, 'test2');\n\t\tvalue.dispose();\n\t});\n\n\ttest('Quick Fix, code action data conversion', async () => {\n\n\t\tdisposables.add(extHost.registerCodeActionProvider(defaultExtension, defaultSelector, {\n\t\t\tprovideCodeActions(): vscode.CodeAction[] {\n\t\t\t\treturn [\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle: 'Testing1',\n\t\t\t\t\t\tcommand: { title: 'Testing1Command', command: 'test1' },\n\t\t\t\t\t\tkind: types.CodeActionKind.Empty.append('test.scope')\n\t\t\t\t\t}\n\t\t\t\t];\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = await getCodeActions(languageFeaturesService.codeActionProvider, model, model.getFullModelRange(), { type: languages.CodeActionTriggerType.Invoke, triggerAction: CodeActionTriggerSource.Default }, Progress.None, CancellationToken.None);\n\t\tconst { validActions: actions } = value;\n\t\tassert.strictEqual(actions.length, 1);\n\t\tconst [first] = actions;\n\t\tassert.strictEqual(first.action.title, 'Testing1');\n\t\tassert.strictEqual(first.action.command!.title, 'Testing1Command');\n\t\tassert.strictEqual(first.action.command!.id, 'test1');\n\t\tassert.strictEqual(first.action.kind, 'test.scope');\n\t\tvalue.dispose();\n\t});\n\n\n\ttest('Cannot read property \\'id\\' of undefined, #29469', async () => {\n\n\t\tdisposables.add(extHost.registerCodeActionProvider(defaultExtension, defaultSelector, new class implements vscode.CodeActionProvider {\n\t\t\tprovideCodeActions(): any {\n\t\t\t\treturn [\n\t\t\t\t\tundefined,\n\t\t\t\t\tnull,\n\t\t\t\t\t{ command: 'test', title: 'Testing' }\n\t\t\t\t];\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = await getCodeActions(languageFeaturesService.codeActionProvider, model, model.getFullModelRange(), { type: languages.CodeActionTriggerType.Invoke, triggerAction: CodeActionTriggerSource.Default }, Progress.None, CancellationToken.None);\n\t\tconst { validActions: actions } = value;\n\t\tassert.strictEqual(actions.length, 1);\n\t\tvalue.dispose();\n\t});\n\n\ttest('Quick Fix, evil provider', async () => {\n\n\t\tdisposables.add(extHost.registerCodeActionProvider(defaultExtension, defaultSelector, new class implements vscode.CodeActionProvider {\n\t\t\tprovideCodeActions(): any {\n\t\t\t\tthrow new Error('evil');\n\t\t\t}\n\t\t}));\n\t\tdisposables.add(extHost.registerCodeActionProvider(defaultExtension, defaultSelector, new class implements vscode.CodeActionProvider {\n\t\t\tprovideCodeActions(): any {\n\t\t\t\treturn [{ command: 'test', title: 'Testing' }];\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = await getCodeActions(languageFeaturesService.codeActionProvider, model, model.getFullModelRange(), { type: languages.CodeActionTriggerType.Invoke, triggerAction: CodeActionTriggerSource.QuickFix }, Progress.None, CancellationToken.None);\n\t\tconst { validActions: actions } = value;\n\t\tassert.strictEqual(actions.length, 1);\n\t\tvalue.dispose();\n\t});\n\n\t// --- navigate types\n\n\ttest('Navigate types, evil provider', async () => {\n\n\t\tdisposables.add(extHost.registerWorkspaceSymbolProvider(defaultExtension, new class implements vscode.WorkspaceSymbolProvider {\n\t\t\tprovideWorkspaceSymbols(): any {\n\t\t\t\tthrow new Error('evil');\n\t\t\t}\n\t\t}));\n\n\t\tdisposables.add(extHost.registerWorkspaceSymbolProvider(defaultExtension, new class implements vscode.WorkspaceSymbolProvider {\n\t\t\tprovideWorkspaceSymbols(): any {\n\t\t\t\treturn [new types.SymbolInformation('testing', types.SymbolKind.Array, new types.Range(0, 0, 1, 1))];\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = await getWorkspaceSymbols('');\n\t\tassert.strictEqual(value.length, 1);\n\t\tconst [first] = value;\n\t\tassert.strictEqual(first.symbol.name, 'testing');\n\t});\n\n\ttest('Navigate types, de-duplicate results', async () => {\n\t\tconst uri = URI.from({ scheme: 'foo', path: '/some/path' });\n\t\tdisposables.add(extHost.registerWorkspaceSymbolProvider(defaultExtension, new class implements vscode.WorkspaceSymbolProvider {\n\t\t\tprovideWorkspaceSymbols(): any {\n\t\t\t\treturn [new types.SymbolInformation('ONE', types.SymbolKind.Array, undefined, new types.Location(uri, new types.Range(0, 0, 1, 1)))];\n\t\t\t}\n\t\t}));\n\n\t\tdisposables.add(extHost.registerWorkspaceSymbolProvider(defaultExtension, new class implements vscode.WorkspaceSymbolProvider {\n\t\t\tprovideWorkspaceSymbols(): any {\n\t\t\t\treturn [new types.SymbolInformation('ONE', types.SymbolKind.Array, undefined, new types.Location(uri, new types.Range(0, 0, 1, 1)))]; // get de-duped\n\t\t\t}\n\t\t}));\n\n\t\tdisposables.add(extHost.registerWorkspaceSymbolProvider(defaultExtension, new class implements vscode.WorkspaceSymbolProvider {\n\t\t\tprovideWorkspaceSymbols(): any {\n\t\t\t\treturn [new types.SymbolInformation('ONE', types.SymbolKind.Array, undefined, new types.Location(uri, undefined!))]; // NO dedupe because of resolve\n\t\t\t}\n\t\t\tresolveWorkspaceSymbol(a: vscode.SymbolInformation) {\n\t\t\t\treturn a;\n\t\t\t}\n\t\t}));\n\n\t\tdisposables.add(extHost.registerWorkspaceSymbolProvider(defaultExtension, new class implements vscode.WorkspaceSymbolProvider {\n\t\t\tprovideWorkspaceSymbols(): any {\n\t\t\t\treturn [new types.SymbolInformation('ONE', types.SymbolKind.Struct, undefined, new types.Location(uri, new types.Range(0, 0, 1, 1)))]; // NO dedupe because of kind\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = await getWorkspaceSymbols('');\n\t\tassert.strictEqual(value.length, 3);\n\t});\n\n\t// --- rename\n\n\ttest('Rename, evil provider 0/2', async () => {\n\n\t\tdisposables.add(extHost.registerRenameProvider(defaultExtension, defaultSelector, new class implements vscode.RenameProvider {\n\t\t\tprovideRenameEdits(): any {\n\t\t\t\tthrow new class Foo { };\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\ttry {\n\t\t\tawait rename(languageFeaturesService.renameProvider, model, new EditorPosition(1, 1), 'newName');\n\t\t\tthrow Error();\n\t\t}\n\t\tcatch (err) {\n\t\t\t// expected\n\t\t}\n\t});\n\n\ttest('Rename, evil provider 1/2', async () => {\n\n\t\tdisposables.add(extHost.registerRenameProvider(defaultExtension, defaultSelector, new class implements vscode.RenameProvider {\n\t\t\tprovideRenameEdits(): any {\n\t\t\t\tthrow Error('evil');\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = await rename(languageFeaturesService.renameProvider, model, new EditorPosition(1, 1), 'newName');\n\t\tassert.strictEqual(value.rejectReason, 'evil');\n\t});\n\n\ttest('Rename, evil provider 2/2', async () => {\n\n\t\tdisposables.add(extHost.registerRenameProvider(defaultExtension, '*', new class implements vscode.RenameProvider {\n\t\t\tprovideRenameEdits(): any {\n\t\t\t\tthrow Error('evil');\n\t\t\t}\n\t\t}));\n\n\t\tdisposables.add(extHost.registerRenameProvider(defaultExtension, defaultSelector, new class implements vscode.RenameProvider {\n\t\t\tprovideRenameEdits(): any {\n\t\t\t\tconst edit = new types.WorkspaceEdit();\n\t\t\t\tedit.replace(model.uri, new types.Range(0, 0, 0, 0), 'testing');\n\t\t\t\treturn edit;\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = await rename(languageFeaturesService.renameProvider, model, new EditorPosition(1, 1), 'newName');\n\t\tassert.strictEqual(value.edits.length, 1);\n\t});\n\n\ttest('Rename, ordering', async () => {\n\n\t\tdisposables.add(extHost.registerRenameProvider(defaultExtension, '*', new class implements vscode.RenameProvider {\n\t\t\tprovideRenameEdits(): any {\n\t\t\t\tconst edit = new types.WorkspaceEdit();\n\t\t\t\tedit.replace(model.uri, new types.Range(0, 0, 0, 0), 'testing');\n\t\t\t\tedit.replace(model.uri, new types.Range(1, 0, 1, 0), 'testing');\n\t\t\t\treturn edit;\n\t\t\t}\n\t\t}));\n\n\t\tdisposables.add(extHost.registerRenameProvider(defaultExtension, defaultSelector, new class implements vscode.RenameProvider {\n\t\t\tprovideRenameEdits(): any {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = await rename(languageFeaturesService.renameProvider, model, new EditorPosition(1, 1), 'newName');\n\t\t// least relevant rename provider\n\t\tassert.strictEqual(value.edits.length, 2);\n\t});\n\n\ttest('Multiple RenameProviders don\\'t respect all possible PrepareRename handlers 1/2, #98352', async function () {\n\n\t\tconst called = [false, false, false, false];\n\n\t\tdisposables.add(extHost.registerRenameProvider(defaultExtension, defaultSelector, new class implements vscode.RenameProvider {\n\t\t\tprepareRename(document: vscode.TextDocument, position: vscode.Position,): vscode.ProviderResult<vscode.Range> {\n\t\t\t\tcalled[0] = true;\n\t\t\t\tconst range = document.getWordRangeAtPosition(position);\n\t\t\t\treturn range;\n\t\t\t}\n\n\t\t\tprovideRenameEdits(): vscode.ProviderResult<vscode.WorkspaceEdit> {\n\t\t\t\tcalled[1] = true;\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}));\n\n\t\tdisposables.add(extHost.registerRenameProvider(defaultExtension, defaultSelector, new class implements vscode.RenameProvider {\n\t\t\tprepareRename(document: vscode.TextDocument, position: vscode.Position,): vscode.ProviderResult<vscode.Range> {\n\t\t\t\tcalled[2] = true;\n\t\t\t\treturn Promise.reject('Cannot rename this symbol2.');\n\t\t\t}\n\t\t\tprovideRenameEdits(): vscode.ProviderResult<vscode.WorkspaceEdit> {\n\t\t\t\tcalled[3] = true;\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tawait rename(languageFeaturesService.renameProvider, model, new EditorPosition(1, 1), 'newName');\n\n\t\tassert.deepStrictEqual(called, [true, true, true, false]);\n\t});\n\n\ttest('Multiple RenameProviders don\\'t respect all possible PrepareRename handlers 2/2, #98352', async function () {\n\n\t\tconst called = [false, false, false];\n\n\t\tdisposables.add(extHost.registerRenameProvider(defaultExtension, defaultSelector, new class implements vscode.RenameProvider {\n\t\t\tprepareRename(document: vscode.TextDocument, position: vscode.Position,): vscode.ProviderResult<vscode.Range> {\n\t\t\t\tcalled[0] = true;\n\t\t\t\tconst range = document.getWordRangeAtPosition(position);\n\t\t\t\treturn range;\n\t\t\t}\n\n\t\t\tprovideRenameEdits(): vscode.ProviderResult<vscode.WorkspaceEdit> {\n\t\t\t\tcalled[1] = true;\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}));\n\n\t\tdisposables.add(extHost.registerRenameProvider(defaultExtension, defaultSelector, new class implements vscode.RenameProvider {\n\n\t\t\tprovideRenameEdits(document: vscode.TextDocument, position: vscode.Position, newName: string,): vscode.ProviderResult<vscode.WorkspaceEdit> {\n\t\t\t\tcalled[2] = true;\n\t\t\t\treturn new types.WorkspaceEdit();\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tawait rename(languageFeaturesService.renameProvider, model, new EditorPosition(1, 1), 'newName');\n\n\t\t// first provider has NO prepare which means it is taken by default\n\t\tassert.deepStrictEqual(called, [false, false, true]);\n\t});\n\n\t// --- parameter hints\n\n\ttest('Parameter Hints, order', async () => {\n\n\t\tdisposables.add(extHost.registerSignatureHelpProvider(defaultExtension, defaultSelector, new class implements vscode.SignatureHelpProvider {\n\t\t\tprovideSignatureHelp(): any {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}, []));\n\n\t\tdisposables.add(extHost.registerSignatureHelpProvider(defaultExtension, defaultSelector, new class implements vscode.SignatureHelpProvider {\n\t\t\tprovideSignatureHelp(): vscode.SignatureHelp {\n\t\t\t\treturn {\n\t\t\t\t\tsignatures: [],\n\t\t\t\t\tactiveParameter: 0,\n\t\t\t\t\tactiveSignature: 0\n\t\t\t\t};\n\t\t\t}\n\t\t}, []));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = await provideSignatureHelp(languageFeaturesService.signatureHelpProvider, model, new EditorPosition(1, 1), { triggerKind: languages.SignatureHelpTriggerKind.Invoke, isRetrigger: false }, CancellationToken.None);\n\t\tassert.ok(value);\n\t});\n\n\ttest('Parameter Hints, evil provider', async () => {\n\n\t\tdisposables.add(extHost.registerSignatureHelpProvider(defaultExtension, defaultSelector, new class implements vscode.SignatureHelpProvider {\n\t\t\tprovideSignatureHelp(): any {\n\t\t\t\tthrow new Error('evil');\n\t\t\t}\n\t\t}, []));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = await provideSignatureHelp(languageFeaturesService.signatureHelpProvider, model, new EditorPosition(1, 1), { triggerKind: languages.SignatureHelpTriggerKind.Invoke, isRetrigger: false }, CancellationToken.None);\n\t\tassert.strictEqual(value, undefined);\n\t});\n\n\t// --- suggestions\n\n\ttest('Suggest, order 1/3', async () => {\n\n\t\tdisposables.add(extHost.registerCompletionItemProvider(defaultExtension, '*', new class implements vscode.CompletionItemProvider {\n\t\t\tprovideCompletionItems(): any {\n\t\t\t\treturn [new types.CompletionItem('testing1')];\n\t\t\t}\n\t\t}, []));\n\n\t\tdisposables.add(extHost.registerCompletionItemProvider(defaultExtension, defaultSelector, new class implements vscode.CompletionItemProvider {\n\t\t\tprovideCompletionItems(): any {\n\t\t\t\treturn [new types.CompletionItem('testing2')];\n\t\t\t}\n\t\t}, []));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = await provideSuggestionItems(languageFeaturesService.completionProvider, model, new EditorPosition(1, 1), new CompletionOptions(undefined, new Set<languages.CompletionItemKind>().add(languages.CompletionItemKind.Snippet)));\n\t\tassert.strictEqual(value.items.length, 1);\n\t\tassert.strictEqual(value.items[0].completion.insertText, 'testing2');\n\t\tvalue.disposable.dispose();\n\t});\n\n\ttest('Suggest, order 2/3', async () => {\n\n\t\tdisposables.add(extHost.registerCompletionItemProvider(defaultExtension, '*', new class implements vscode.CompletionItemProvider {\n\t\t\tprovideCompletionItems(): any {\n\t\t\t\treturn [new types.CompletionItem('weak-selector')]; // weaker selector but result\n\t\t\t}\n\t\t}, []));\n\n\t\tdisposables.add(extHost.registerCompletionItemProvider(defaultExtension, defaultSelector, new class implements vscode.CompletionItemProvider {\n\t\t\tprovideCompletionItems(): any {\n\t\t\t\treturn []; // stronger selector but not a good result;\n\t\t\t}\n\t\t}, []));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = await provideSuggestionItems(languageFeaturesService.completionProvider, model, new EditorPosition(1, 1), new CompletionOptions(undefined, new Set<languages.CompletionItemKind>().add(languages.CompletionItemKind.Snippet)));\n\t\tassert.strictEqual(value.items.length, 1);\n\t\tassert.strictEqual(value.items[0].completion.insertText, 'weak-selector');\n\t\tvalue.disposable.dispose();\n\t});\n\n\ttest('Suggest, order 3/3', async () => {\n\n\t\tdisposables.add(extHost.registerCompletionItemProvider(defaultExtension, defaultSelector, new class implements vscode.CompletionItemProvider {\n\t\t\tprovideCompletionItems(): any {\n\t\t\t\treturn [new types.CompletionItem('strong-1')];\n\t\t\t}\n\t\t}, []));\n\n\t\tdisposables.add(extHost.registerCompletionItemProvider(defaultExtension, defaultSelector, new class implements vscode.CompletionItemProvider {\n\t\t\tprovideCompletionItems(): any {\n\t\t\t\treturn [new types.CompletionItem('strong-2')];\n\t\t\t}\n\t\t}, []));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = await provideSuggestionItems(languageFeaturesService.completionProvider, model, new EditorPosition(1, 1), new CompletionOptions(undefined, new Set<languages.CompletionItemKind>().add(languages.CompletionItemKind.Snippet)));\n\t\tassert.strictEqual(value.items.length, 2);\n\t\tassert.strictEqual(value.items[0].completion.insertText, 'strong-1'); // sort by label\n\t\tassert.strictEqual(value.items[1].completion.insertText, 'strong-2');\n\t\tvalue.disposable.dispose();\n\t});\n\n\ttest('Suggest, evil provider', async () => {\n\n\t\tdisposables.add(extHost.registerCompletionItemProvider(defaultExtension, defaultSelector, new class implements vscode.CompletionItemProvider {\n\t\t\tprovideCompletionItems(): any {\n\t\t\t\tthrow new Error('evil');\n\t\t\t}\n\t\t}, []));\n\n\t\tdisposables.add(extHost.registerCompletionItemProvider(defaultExtension, defaultSelector, new class implements vscode.CompletionItemProvider {\n\t\t\tprovideCompletionItems(): any {\n\t\t\t\treturn [new types.CompletionItem('testing')];\n\t\t\t}\n\t\t}, []));\n\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = await provideSuggestionItems(languageFeaturesService.completionProvider, model, new EditorPosition(1, 1), new CompletionOptions(undefined, new Set<languages.CompletionItemKind>().add(languages.CompletionItemKind.Snippet)));\n\t\tassert.strictEqual(value.items[0].container.incomplete, false);\n\t\tvalue.disposable.dispose();\n\n\t});\n\n\ttest('Suggest, CompletionList', async () => {\n\n\t\tdisposables.add(extHost.registerCompletionItemProvider(defaultExtension, defaultSelector, new class implements vscode.CompletionItemProvider {\n\t\t\tprovideCompletionItems(): any {\n\t\t\t\treturn new types.CompletionList([<any>new types.CompletionItem('hello')], true);\n\t\t\t}\n\t\t}, []));\n\n\t\tawait rpcProtocol.sync();\n\t\tawait provideSuggestionItems(languageFeaturesService.completionProvider, model, new EditorPosition(1, 1), new CompletionOptions(undefined, new Set<languages.CompletionItemKind>().add(languages.CompletionItemKind.Snippet))).then(model => {\n\t\t\tassert.strictEqual(model.items[0].container.incomplete, true);\n\t\t\tmodel.disposable.dispose();\n\t\t});\n\t});\n\n\t// --- format\n\n\tconst NullWorkerService = new class extends mock<IEditorWorkerService>() {\n\t\toverride computeMoreMinimalEdits(resource: URI, edits: languages.TextEdit[] | null | undefined): Promise<languages.TextEdit[] | undefined> {\n\t\t\treturn Promise.resolve(edits ?? undefined);\n\t\t}\n\t};\n\n\ttest('Format Doc, data conversion', async () => {\n\t\tdisposables.add(extHost.registerDocumentFormattingEditProvider(defaultExtension, defaultSelector, new class implements vscode.DocumentFormattingEditProvider {\n\t\t\tprovideDocumentFormattingEdits(): any {\n\t\t\t\treturn [new types.TextEdit(new types.Range(0, 0, 0, 0), 'testing'), types.TextEdit.setEndOfLine(types.EndOfLine.LF)];\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = (await getDocumentFormattingEditsUntilResult(NullWorkerService, languageFeaturesService, model, { insertSpaces: true, tabSize: 4 }, CancellationToken.None))!;\n\t\tassert.strictEqual(value.length, 2);\n\t\tconst [first, second] = value;\n\t\tassert.strictEqual(first.text, 'testing');\n\t\tassert.deepStrictEqual(first.range, { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 1 });\n\t\tassert.strictEqual(second.eol, EndOfLineSequence.LF);\n\t\tassert.strictEqual(second.text, '');\n\t\tassert.deepStrictEqual(second.range, { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 1 });\n\t});\n\n\ttest('Format Doc, evil provider', async () => {\n\t\tdisposables.add(extHost.registerDocumentFormattingEditProvider(defaultExtension, defaultSelector, new class implements vscode.DocumentFormattingEditProvider {\n\t\t\tprovideDocumentFormattingEdits(): any {\n\t\t\t\tthrow new Error('evil');\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\treturn getDocumentFormattingEditsUntilResult(NullWorkerService, languageFeaturesService, model, { insertSpaces: true, tabSize: 4 }, CancellationToken.None);\n\t});\n\n\ttest('Format Doc, order', async () => {\n\n\t\tdisposables.add(extHost.registerDocumentFormattingEditProvider(defaultExtension, defaultSelector, new class implements vscode.DocumentFormattingEditProvider {\n\t\t\tprovideDocumentFormattingEdits(): any {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}));\n\n\t\tdisposables.add(extHost.registerDocumentFormattingEditProvider(defaultExtension, defaultSelector, new class implements vscode.DocumentFormattingEditProvider {\n\t\t\tprovideDocumentFormattingEdits(): any {\n\t\t\t\treturn [new types.TextEdit(new types.Range(0, 0, 0, 0), 'testing')];\n\t\t\t}\n\t\t}));\n\n\t\tdisposables.add(extHost.registerDocumentFormattingEditProvider(defaultExtension, defaultSelector, new class implements vscode.DocumentFormattingEditProvider {\n\t\t\tprovideDocumentFormattingEdits(): any {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = (await getDocumentFormattingEditsUntilResult(NullWorkerService, languageFeaturesService, model, { insertSpaces: true, tabSize: 4 }, CancellationToken.None))!;\n\t\tassert.strictEqual(value.length, 1);\n\t\tconst [first] = value;\n\t\tassert.strictEqual(first.text, 'testing');\n\t\tassert.deepStrictEqual(first.range, { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 1 });\n\t});\n\n\ttest('Format Range, data conversion', async () => {\n\t\tdisposables.add(extHost.registerDocumentRangeFormattingEditProvider(defaultExtension, defaultSelector, new class implements vscode.DocumentRangeFormattingEditProvider {\n\t\t\tprovideDocumentRangeFormattingEdits(): any {\n\t\t\t\treturn [new types.TextEdit(new types.Range(0, 0, 0, 0), 'testing')];\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = (await getDocumentRangeFormattingEditsUntilResult(NullWorkerService, languageFeaturesService, model, new EditorRange(1, 1, 1, 1), { insertSpaces: true, tabSize: 4 }, CancellationToken.None))!;\n\t\tassert.strictEqual(value.length, 1);\n\t\tconst [first] = value;\n\t\tassert.strictEqual(first.text, 'testing');\n\t\tassert.deepStrictEqual(first.range, { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 1 });\n\t});\n\n\ttest('Format Range, + format_doc', async () => {\n\t\tdisposables.add(extHost.registerDocumentRangeFormattingEditProvider(defaultExtension, defaultSelector, new class implements vscode.DocumentRangeFormattingEditProvider {\n\t\t\tprovideDocumentRangeFormattingEdits(): any {\n\t\t\t\treturn [new types.TextEdit(new types.Range(0, 0, 0, 0), 'range')];\n\t\t\t}\n\t\t}));\n\t\tdisposables.add(extHost.registerDocumentRangeFormattingEditProvider(defaultExtension, defaultSelector, new class implements vscode.DocumentRangeFormattingEditProvider {\n\t\t\tprovideDocumentRangeFormattingEdits(): any {\n\t\t\t\treturn [new types.TextEdit(new types.Range(2, 3, 4, 5), 'range2')];\n\t\t\t}\n\t\t}));\n\t\tdisposables.add(extHost.registerDocumentFormattingEditProvider(defaultExtension, defaultSelector, new class implements vscode.DocumentFormattingEditProvider {\n\t\t\tprovideDocumentFormattingEdits(): any {\n\t\t\t\treturn [new types.TextEdit(new types.Range(0, 0, 1, 1), 'doc')];\n\t\t\t}\n\t\t}));\n\t\tawait rpcProtocol.sync();\n\t\tconst value = (await getDocumentRangeFormattingEditsUntilResult(NullWorkerService, languageFeaturesService, model, new EditorRange(1, 1, 1, 1), { insertSpaces: true, tabSize: 4 }, CancellationToken.None))!;\n\t\tassert.strictEqual(value.length, 1);\n\t\tconst [first] = value;\n\t\tassert.strictEqual(first.text, 'range2');\n\t\tassert.strictEqual(first.range.startLineNumber, 3);\n\t\tassert.strictEqual(first.range.startColumn, 4);\n\t\tassert.strictEqual(first.range.endLineNumber, 5);\n\t\tassert.strictEqual(first.range.endColumn, 6);\n\t});\n\n\ttest('Format Range, evil provider', async () => {\n\t\tdisposables.add(extHost.registerDocumentRangeFormattingEditProvider(defaultExtension, defaultSelector, new class implements vscode.DocumentRangeFormattingEditProvider {\n\t\t\tprovideDocumentRangeFormattingEdits(): any {\n\t\t\t\tthrow new Error('evil');\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\treturn getDocumentRangeFormattingEditsUntilResult(NullWorkerService, languageFeaturesService, model, new EditorRange(1, 1, 1, 1), { insertSpaces: true, tabSize: 4 }, CancellationToken.None);\n\t});\n\n\ttest('Format on Type, data conversion', async () => {\n\n\t\tdisposables.add(extHost.registerOnTypeFormattingEditProvider(defaultExtension, defaultSelector, new class implements vscode.OnTypeFormattingEditProvider {\n\t\t\tprovideOnTypeFormattingEdits(): any {\n\t\t\t\treturn [new types.TextEdit(new types.Range(0, 0, 0, 0), arguments[2])];\n\t\t\t}\n\t\t}, [';']));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = (await getOnTypeFormattingEdits(NullWorkerService, languageFeaturesService, model, new EditorPosition(1, 1), ';', { insertSpaces: true, tabSize: 2 }, CancellationToken.None))!;\n\t\tassert.strictEqual(value.length, 1);\n\t\tconst [first] = value;\n\t\tassert.strictEqual(first.text, ';');\n\t\tassert.deepStrictEqual(first.range, { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 1 });\n\t});\n\n\ttest('Links, data conversion', async () => {\n\n\t\tdisposables.add(extHost.registerDocumentLinkProvider(defaultExtension, defaultSelector, new class implements vscode.DocumentLinkProvider {\n\t\t\tprovideDocumentLinks() {\n\t\t\t\tconst link = new types.DocumentLink(new types.Range(0, 0, 1, 1), URI.parse('foo:bar#3'));\n\t\t\t\tlink.tooltip = 'tooltip';\n\t\t\t\treturn [link];\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst { links } = disposables.add(await getLinks(languageFeaturesService.linkProvider, model, CancellationToken.None));\n\t\tassert.strictEqual(links.length, 1);\n\t\tconst [first] = links;\n\t\tassert.strictEqual(first.url?.toString(), 'foo:bar#3');\n\t\tassert.deepStrictEqual(first.range, { startLineNumber: 1, startColumn: 1, endLineNumber: 2, endColumn: 2 });\n\t\tassert.strictEqual(first.tooltip, 'tooltip');\n\t});\n\n\ttest('Links, evil provider', async () => {\n\n\t\tdisposables.add(extHost.registerDocumentLinkProvider(defaultExtension, defaultSelector, new class implements vscode.DocumentLinkProvider {\n\t\t\tprovideDocumentLinks() {\n\t\t\t\treturn [new types.DocumentLink(new types.Range(0, 0, 1, 1), URI.parse('foo:bar#3'))];\n\t\t\t}\n\t\t}));\n\n\t\tdisposables.add(extHost.registerDocumentLinkProvider(defaultExtension, defaultSelector, new class implements vscode.DocumentLinkProvider {\n\t\t\tprovideDocumentLinks(): any {\n\t\t\t\tthrow new Error();\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst { links } = disposables.add(await getLinks(languageFeaturesService.linkProvider, model, CancellationToken.None));\n\t\tassert.strictEqual(links.length, 1);\n\t\tconst [first] = links;\n\t\tassert.strictEqual(first.url?.toString(), 'foo:bar#3');\n\t\tassert.deepStrictEqual(first.range, { startLineNumber: 1, startColumn: 1, endLineNumber: 2, endColumn: 2 });\n\t});\n\n\ttest('Document colors, data conversion', async () => {\n\n\t\tdisposables.add(extHost.registerColorProvider(defaultExtension, defaultSelector, new class implements vscode.DocumentColorProvider {\n\t\t\tprovideDocumentColors(): vscode.ColorInformation[] {\n\t\t\t\treturn [new types.ColorInformation(new types.Range(0, 0, 0, 20), new types.Color(0.1, 0.2, 0.3, 0.4))];\n\t\t\t}\n\t\t\tprovideColorPresentations(color: vscode.Color, context: { range: vscode.Range; document: vscode.TextDocument }): vscode.ColorPresentation[] {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\t\tconst value = await getColors(languageFeaturesService.colorProvider, model, CancellationToken.None);\n\t\tassert.strictEqual(value.length, 1);\n\t\tconst [first] = value;\n\t\tassert.deepStrictEqual(first.colorInfo.color, { red: 0.1, green: 0.2, blue: 0.3, alpha: 0.4 });\n\t\tassert.deepStrictEqual(first.colorInfo.range, { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 21 });\n\t});\n\n\t// -- selection ranges\n\n\ttest('Selection Ranges, data conversion', async () => {\n\t\tdisposables.add(extHost.registerSelectionRangeProvider(defaultExtension, defaultSelector, new class implements vscode.SelectionRangeProvider {\n\t\t\tprovideSelectionRanges() {\n\t\t\t\treturn [\n\t\t\t\t\tnew types.SelectionRange(new types.Range(0, 10, 0, 18), new types.SelectionRange(new types.Range(0, 2, 0, 20))),\n\t\t\t\t];\n\t\t\t}\n\t\t}));\n\n\t\tawait rpcProtocol.sync();\n\n\t\tprovideSelectionRanges(languageFeaturesService.selectionRangeProvider, model, [new Position(1, 17)], { selectLeadingAndTrailingWhitespace: true, selectSubwords: true }, CancellationToken.None).then(ranges => {\n\t\t\tassert.strictEqual(ranges.length, 1);\n\t\t\tassert.ok(ranges[0].length >= 2);\n\t\t});\n\t});\n\n\ttest('Selection Ranges, bad data', async () => {\n\n\t\ttry {\n\t\t\tconst _a = new types.SelectionRange(new types.Range(0, 10, 0, 18),\n\t\t\t\tnew types.SelectionRange(new types.Range(0, 11, 0, 18))\n\t\t\t);\n\t\t\tassert.ok(false, String(_a));\n\t\t} catch (err) {\n\t\t\tassert.ok(true);\n\t\t}\n\n\t});\n});\n"],
  "mappings": "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",
  "names": ["model"]
}
