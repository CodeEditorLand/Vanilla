{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/test/browser/extHostDocumentData.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ExtHostDocumentData } from '../../common/extHostDocumentData.js';\nimport { Position } from '../../common/extHostTypes.js';\nimport { Range } from '../../../../editor/common/core/range.js';\nimport { MainThreadDocumentsShape } from '../../common/extHost.protocol.js';\nimport { IModelChangedEvent } from '../../../../editor/common/model/mirrorTextModel.js';\nimport { mock } from '../../../../base/test/common/mock.js';\nimport * as perfData from './extHostDocumentData.test.perf-data.js';\nimport { setDefaultGetWordAtTextConfig } from '../../../../editor/common/core/wordHelper.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\n\nsuite('ExtHostDocumentData', () => {\n\n\tlet data: ExtHostDocumentData;\n\n\tfunction assertPositionAt(offset: number, line: number, character: number) {\n\t\tconst position = data.document.positionAt(offset);\n\t\tassert.strictEqual(position.line, line);\n\t\tassert.strictEqual(position.character, character);\n\t}\n\n\tfunction assertOffsetAt(line: number, character: number, offset: number) {\n\t\tconst pos = new Position(line, character);\n\t\tconst actual = data.document.offsetAt(pos);\n\t\tassert.strictEqual(actual, offset);\n\t}\n\n\tsetup(function () {\n\t\tdata = new ExtHostDocumentData(undefined!, URI.file(''), [\n\t\t\t'This is line one', //16\n\t\t\t'and this is line number two', //27\n\t\t\t'it is followed by #3', //20\n\t\t\t'and finished with the fourth.', //29\n\t\t], '\\n', 1, 'text', false);\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('readonly-ness', () => {\n\t\tassert.throws(() => (data as any).document.uri = null);\n\t\tassert.throws(() => (data as any).document.fileName = 'foofile');\n\t\tassert.throws(() => (data as any).document.isDirty = false);\n\t\tassert.throws(() => (data as any).document.isUntitled = false);\n\t\tassert.throws(() => (data as any).document.languageId = 'dddd');\n\t\tassert.throws(() => (data as any).document.lineCount = 9);\n\t});\n\n\ttest('save, when disposed', function () {\n\t\tlet saved: URI;\n\t\tconst data = new ExtHostDocumentData(new class extends mock<MainThreadDocumentsShape>() {\n\t\t\toverride $trySaveDocument(uri: URI) {\n\t\t\t\tassert.ok(!saved);\n\t\t\t\tsaved = uri;\n\t\t\t\treturn Promise.resolve(true);\n\t\t\t}\n\t\t}, URI.parse('foo:bar'), [], '\\n', 1, 'text', true);\n\n\t\treturn data.document.save().then(() => {\n\t\t\tassert.strictEqual(saved.toString(), 'foo:bar');\n\n\t\t\tdata.dispose();\n\n\t\t\treturn data.document.save().then(() => {\n\t\t\t\tassert.ok(false, 'expected failure');\n\t\t\t}, err => {\n\t\t\t\tassert.ok(err);\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('read, when disposed', function () {\n\t\tdata.dispose();\n\n\t\tconst { document } = data;\n\t\tassert.strictEqual(document.lineCount, 4);\n\t\tassert.strictEqual(document.lineAt(0).text, 'This is line one');\n\t});\n\n\ttest('lines', () => {\n\n\t\tassert.strictEqual(data.document.lineCount, 4);\n\n\t\tassert.throws(() => data.document.lineAt(-1));\n\t\tassert.throws(() => data.document.lineAt(data.document.lineCount));\n\t\tassert.throws(() => data.document.lineAt(Number.MAX_VALUE));\n\t\tassert.throws(() => data.document.lineAt(Number.MIN_VALUE));\n\t\tassert.throws(() => data.document.lineAt(0.8));\n\n\t\tlet line = data.document.lineAt(0);\n\t\tassert.strictEqual(line.lineNumber, 0);\n\t\tassert.strictEqual(line.text.length, 16);\n\t\tassert.strictEqual(line.text, 'This is line one');\n\t\tassert.strictEqual(line.isEmptyOrWhitespace, false);\n\t\tassert.strictEqual(line.firstNonWhitespaceCharacterIndex, 0);\n\n\t\tdata.onEvents({\n\t\t\tchanges: [{\n\t\t\t\trange: { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 1 },\n\t\t\t\trangeOffset: undefined!,\n\t\t\t\trangeLength: undefined!,\n\t\t\t\ttext: '\\t '\n\t\t\t}],\n\t\t\teol: undefined!,\n\t\t\tversionId: undefined!,\n\t\t\tisRedoing: false,\n\t\t\tisUndoing: false,\n\t\t});\n\n\t\t// line didn't change\n\t\tassert.strictEqual(line.text, 'This is line one');\n\t\tassert.strictEqual(line.firstNonWhitespaceCharacterIndex, 0);\n\n\t\t// fetch line again\n\t\tline = data.document.lineAt(0);\n\t\tassert.strictEqual(line.text, '\\t This is line one');\n\t\tassert.strictEqual(line.firstNonWhitespaceCharacterIndex, 2);\n\t});\n\n\ttest('line, issue #5704', function () {\n\n\t\tlet line = data.document.lineAt(0);\n\t\tlet { range, rangeIncludingLineBreak } = line;\n\t\tassert.strictEqual(range.end.line, 0);\n\t\tassert.strictEqual(range.end.character, 16);\n\t\tassert.strictEqual(rangeIncludingLineBreak.end.line, 1);\n\t\tassert.strictEqual(rangeIncludingLineBreak.end.character, 0);\n\n\t\tline = data.document.lineAt(data.document.lineCount - 1);\n\t\trange = line.range;\n\t\trangeIncludingLineBreak = line.rangeIncludingLineBreak;\n\t\tassert.strictEqual(range.end.line, 3);\n\t\tassert.strictEqual(range.end.character, 29);\n\t\tassert.strictEqual(rangeIncludingLineBreak.end.line, 3);\n\t\tassert.strictEqual(rangeIncludingLineBreak.end.character, 29);\n\n\t});\n\n\ttest('offsetAt', () => {\n\t\tassertOffsetAt(0, 0, 0);\n\t\tassertOffsetAt(0, 1, 1);\n\t\tassertOffsetAt(0, 16, 16);\n\t\tassertOffsetAt(1, 0, 17);\n\t\tassertOffsetAt(1, 3, 20);\n\t\tassertOffsetAt(2, 0, 45);\n\t\tassertOffsetAt(4, 29, 95);\n\t\tassertOffsetAt(4, 30, 95);\n\t\tassertOffsetAt(4, Number.MAX_VALUE, 95);\n\t\tassertOffsetAt(5, 29, 95);\n\t\tassertOffsetAt(Number.MAX_VALUE, 29, 95);\n\t\tassertOffsetAt(Number.MAX_VALUE, Number.MAX_VALUE, 95);\n\t});\n\n\ttest('offsetAt, after remove', function () {\n\n\t\tdata.onEvents({\n\t\t\tchanges: [{\n\t\t\t\trange: { startLineNumber: 1, startColumn: 3, endLineNumber: 1, endColumn: 6 },\n\t\t\t\trangeOffset: undefined!,\n\t\t\t\trangeLength: undefined!,\n\t\t\t\ttext: ''\n\t\t\t}],\n\t\t\teol: undefined!,\n\t\t\tversionId: undefined!,\n\t\t\tisRedoing: false,\n\t\t\tisUndoing: false,\n\t\t});\n\n\t\tassertOffsetAt(0, 1, 1);\n\t\tassertOffsetAt(0, 13, 13);\n\t\tassertOffsetAt(1, 0, 14);\n\t});\n\n\ttest('offsetAt, after replace', function () {\n\n\t\tdata.onEvents({\n\t\t\tchanges: [{\n\t\t\t\trange: { startLineNumber: 1, startColumn: 3, endLineNumber: 1, endColumn: 6 },\n\t\t\t\trangeOffset: undefined!,\n\t\t\t\trangeLength: undefined!,\n\t\t\t\ttext: 'is could be'\n\t\t\t}],\n\t\t\teol: undefined!,\n\t\t\tversionId: undefined!,\n\t\t\tisRedoing: false,\n\t\t\tisUndoing: false,\n\t\t});\n\n\t\tassertOffsetAt(0, 1, 1);\n\t\tassertOffsetAt(0, 24, 24);\n\t\tassertOffsetAt(1, 0, 25);\n\t});\n\n\ttest('offsetAt, after insert line', function () {\n\n\t\tdata.onEvents({\n\t\t\tchanges: [{\n\t\t\t\trange: { startLineNumber: 1, startColumn: 3, endLineNumber: 1, endColumn: 6 },\n\t\t\t\trangeOffset: undefined!,\n\t\t\t\trangeLength: undefined!,\n\t\t\t\ttext: 'is could be\\na line with number'\n\t\t\t}],\n\t\t\teol: undefined!,\n\t\t\tversionId: undefined!,\n\t\t\tisRedoing: false,\n\t\t\tisUndoing: false,\n\t\t});\n\n\t\tassertOffsetAt(0, 1, 1);\n\t\tassertOffsetAt(0, 13, 13);\n\t\tassertOffsetAt(1, 0, 14);\n\t\tassertOffsetAt(1, 18, 13 + 1 + 18);\n\t\tassertOffsetAt(1, 29, 13 + 1 + 29);\n\t\tassertOffsetAt(2, 0, 13 + 1 + 29 + 1);\n\t});\n\n\ttest('offsetAt, after remove line', function () {\n\n\t\tdata.onEvents({\n\t\t\tchanges: [{\n\t\t\t\trange: { startLineNumber: 1, startColumn: 3, endLineNumber: 2, endColumn: 6 },\n\t\t\t\trangeOffset: undefined!,\n\t\t\t\trangeLength: undefined!,\n\t\t\t\ttext: ''\n\t\t\t}],\n\t\t\teol: undefined!,\n\t\t\tversionId: undefined!,\n\t\t\tisRedoing: false,\n\t\t\tisUndoing: false,\n\t\t});\n\n\t\tassertOffsetAt(0, 1, 1);\n\t\tassertOffsetAt(0, 2, 2);\n\t\tassertOffsetAt(1, 0, 25);\n\t});\n\n\ttest('positionAt', () => {\n\t\tassertPositionAt(0, 0, 0);\n\t\tassertPositionAt(Number.MIN_VALUE, 0, 0);\n\t\tassertPositionAt(1, 0, 1);\n\t\tassertPositionAt(16, 0, 16);\n\t\tassertPositionAt(17, 1, 0);\n\t\tassertPositionAt(20, 1, 3);\n\t\tassertPositionAt(45, 2, 0);\n\t\tassertPositionAt(95, 3, 29);\n\t\tassertPositionAt(96, 3, 29);\n\t\tassertPositionAt(99, 3, 29);\n\t\tassertPositionAt(Number.MAX_VALUE, 3, 29);\n\t});\n\n\ttest('getWordRangeAtPosition', () => {\n\t\tdata = new ExtHostDocumentData(undefined!, URI.file(''), [\n\t\t\t'aaaa bbbb+cccc abc'\n\t\t], '\\n', 1, 'text', false);\n\n\t\tlet range = data.document.getWordRangeAtPosition(new Position(0, 2))!;\n\t\tassert.strictEqual(range.start.line, 0);\n\t\tassert.strictEqual(range.start.character, 0);\n\t\tassert.strictEqual(range.end.line, 0);\n\t\tassert.strictEqual(range.end.character, 4);\n\n\t\t// ignore bad regular expresson /.*/\n\t\tassert.throws(() => data.document.getWordRangeAtPosition(new Position(0, 2), /.*/)!);\n\n\t\trange = data.document.getWordRangeAtPosition(new Position(0, 5), /[a-z+]+/)!;\n\t\tassert.strictEqual(range.start.line, 0);\n\t\tassert.strictEqual(range.start.character, 5);\n\t\tassert.strictEqual(range.end.line, 0);\n\t\tassert.strictEqual(range.end.character, 14);\n\n\t\trange = data.document.getWordRangeAtPosition(new Position(0, 17), /[a-z+]+/)!;\n\t\tassert.strictEqual(range.start.line, 0);\n\t\tassert.strictEqual(range.start.character, 15);\n\t\tassert.strictEqual(range.end.line, 0);\n\t\tassert.strictEqual(range.end.character, 18);\n\n\t\trange = data.document.getWordRangeAtPosition(new Position(0, 11), /yy/)!;\n\t\tassert.strictEqual(range, undefined);\n\t});\n\n\ttest('getWordRangeAtPosition doesn\\'t quite use the regex as expected, #29102', function () {\n\t\tdata = new ExtHostDocumentData(undefined!, URI.file(''), [\n\t\t\t'some text here',\n\t\t\t'/** foo bar */',\n\t\t\t'function() {',\n\t\t\t'\t\"far boo\"',\n\t\t\t'}'\n\t\t], '\\n', 1, 'text', false);\n\n\t\tlet range = data.document.getWordRangeAtPosition(new Position(0, 0), /\\/\\*.+\\*\\//);\n\t\tassert.strictEqual(range, undefined);\n\n\t\trange = data.document.getWordRangeAtPosition(new Position(1, 0), /\\/\\*.+\\*\\//)!;\n\t\tassert.strictEqual(range.start.line, 1);\n\t\tassert.strictEqual(range.start.character, 0);\n\t\tassert.strictEqual(range.end.line, 1);\n\t\tassert.strictEqual(range.end.character, 14);\n\n\t\trange = data.document.getWordRangeAtPosition(new Position(3, 0), /(\"|').*\\1/);\n\t\tassert.strictEqual(range, undefined);\n\n\t\trange = data.document.getWordRangeAtPosition(new Position(3, 1), /(\"|').*\\1/)!;\n\t\tassert.strictEqual(range.start.line, 3);\n\t\tassert.strictEqual(range.start.character, 1);\n\t\tassert.strictEqual(range.end.line, 3);\n\t\tassert.strictEqual(range.end.character, 10);\n\t});\n\n\n\ttest('getWordRangeAtPosition can freeze the extension host #95319', function () {\n\n\t\tconst regex = /(https?:\\/\\/github\\.com\\/(([^\\s]+)\\/([^\\s]+))\\/([^\\s]+\\/)?(issues|pull)\\/([0-9]+))|(([^\\s]+)\\/([^\\s]+))?#([1-9][0-9]*)($|[\\s\\:\\;\\-\\(\\=])/;\n\n\t\tdata = new ExtHostDocumentData(undefined!, URI.file(''), [\n\t\t\tperfData._$_$_expensive\n\t\t], '\\n', 1, 'text', false);\n\n\t\t// this test only ensures that we eventually give and timeout (when searching \"funny\" words and long lines)\n\t\t// for the sake of speedy tests we lower the timeBudget here\n\t\tconst config = setDefaultGetWordAtTextConfig({ maxLen: 1000, windowSize: 15, timeBudget: 30 });\n\t\ttry {\n\t\t\tlet range = data.document.getWordRangeAtPosition(new Position(0, 1_177_170), regex)!;\n\t\t\tassert.strictEqual(range, undefined);\n\n\t\t\tconst pos = new Position(0, 1177170);\n\t\t\trange = data.document.getWordRangeAtPosition(pos)!;\n\t\t\tassert.ok(range);\n\t\t\tassert.ok(range.contains(pos));\n\t\t\tassert.strictEqual(data.document.getText(range), 'TaskDefinition');\n\n\t\t} finally {\n\t\t\tconfig.dispose();\n\t\t}\n\t});\n\n\ttest('Rename popup sometimes populates with text on the left side omitted #96013', function () {\n\n\t\tconst regex = /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g;\n\t\tconst line = 'int abcdefhijklmnopqwvrstxyz;';\n\n\t\tdata = new ExtHostDocumentData(undefined!, URI.file(''), [\n\t\t\tline\n\t\t], '\\n', 1, 'text', false);\n\n\t\tconst range = data.document.getWordRangeAtPosition(new Position(0, 27), regex)!;\n\t\tassert.strictEqual(range.start.line, 0);\n\t\tassert.strictEqual(range.end.line, 0);\n\t\tassert.strictEqual(range.start.character, 4);\n\t\tassert.strictEqual(range.end.character, 28);\n\t});\n\n\ttest('Custom snippet $TM_SELECTED_TEXT not show suggestion #108892', function () {\n\n\t\tdata = new ExtHostDocumentData(undefined!, URI.file(''), [\n\t\t\t`        <p><span xml:lang=\"en\">Sheldon</span>, soprannominato \"<span xml:lang=\"en\">Shelly</span> dalla madre e dalla sorella, \u00E8 nato a <span xml:lang=\"en\">Galveston</span>, in <span xml:lang=\"en\">Texas</span>, il 26 febbraio 1980 in un supermercato. \u00C8 stato un bambino prodigio, come testimoniato dal suo quoziente d'intelligenza (187, di molto superiore alla norma) e dalla sua rapida carriera scolastica: si \u00E8 diplomato all'eta di 11 anni approdando alla stessa et\u00E0 alla formazione universitaria e all'et\u00E0 di 16 anni ha ottenuto il suo primo dottorato di ricerca. All'inizio della serie e per gran parte di essa vive con il coinquilino Leonard nell'appartamento 4A al 2311 <span xml:lang=\"en\">North Los Robles Avenue</span> di <span xml:lang=\"en\">Pasadena</span>, per poi trasferirsi nell'appartamento di <span xml:lang=\"en\">Penny</span> con <span xml:lang=\"en\">Amy</span> nella decima stagione. Come pi\u00F9 volte afferma lui stesso possiede una memoria eidetica e un orecchio assoluto. \u00C8 stato educato da una madre estremamente religiosa e, in pi\u00F9 occasioni, questo aspetto contrasta con il rigore scientifico di <span xml:lang=\"en\">Sheldon</span>; tuttavia la donna sembra essere l'unica persona in grado di comandarlo a bacchetta.</p>`\n\t\t], '\\n', 1, 'text', false);\n\n\t\tconst pos = new Position(0, 55);\n\t\tconst range = data.document.getWordRangeAtPosition(pos)!;\n\t\tassert.strictEqual(range.start.line, 0);\n\t\tassert.strictEqual(range.end.line, 0);\n\t\tassert.strictEqual(range.start.character, 47);\n\t\tassert.strictEqual(range.end.character, 61);\n\t\tassert.strictEqual(data.document.getText(range), 'soprannominato');\n\t});\n});\n\nenum AssertDocumentLineMappingDirection {\n\tOffsetToPosition,\n\tPositionToOffset\n}\n\nsuite('ExtHostDocumentData updates line mapping', () => {\n\n\tfunction positionToStr(position: { line: number; character: number }): string {\n\t\treturn '(' + position.line + ',' + position.character + ')';\n\t}\n\n\tfunction assertDocumentLineMapping(doc: ExtHostDocumentData, direction: AssertDocumentLineMappingDirection): void {\n\t\tconst allText = doc.getText();\n\n\t\tlet line = 0, character = 0, previousIsCarriageReturn = false;\n\t\tfor (let offset = 0; offset <= allText.length; offset++) {\n\t\t\t// The position coordinate system cannot express the position between \\r and \\n\n\t\t\tconst position: Position = new Position(line, character + (previousIsCarriageReturn ? -1 : 0));\n\n\t\t\tif (direction === AssertDocumentLineMappingDirection.OffsetToPosition) {\n\t\t\t\tconst actualPosition = doc.document.positionAt(offset);\n\t\t\t\tassert.strictEqual(positionToStr(actualPosition), positionToStr(position), 'positionAt mismatch for offset ' + offset);\n\t\t\t} else {\n\t\t\t\t// The position coordinate system cannot express the position between \\r and \\n\n\t\t\t\tconst expectedOffset: number = offset + (previousIsCarriageReturn ? -1 : 0);\n\t\t\t\tconst actualOffset = doc.document.offsetAt(position);\n\t\t\t\tassert.strictEqual(actualOffset, expectedOffset, 'offsetAt mismatch for position ' + positionToStr(position));\n\t\t\t}\n\n\t\t\tif (allText.charAt(offset) === '\\n') {\n\t\t\t\tline++;\n\t\t\t\tcharacter = 0;\n\t\t\t} else {\n\t\t\t\tcharacter++;\n\t\t\t}\n\n\t\t\tpreviousIsCarriageReturn = (allText.charAt(offset) === '\\r');\n\t\t}\n\t}\n\n\tfunction createChangeEvent(range: Range, text: string, eol?: string): IModelChangedEvent {\n\t\treturn {\n\t\t\tchanges: [{\n\t\t\t\trange: range,\n\t\t\t\trangeOffset: undefined!,\n\t\t\t\trangeLength: undefined!,\n\t\t\t\ttext: text\n\t\t\t}],\n\t\t\teol: eol!,\n\t\t\tversionId: undefined!,\n\t\t\tisRedoing: false,\n\t\t\tisUndoing: false,\n\t\t};\n\t}\n\n\tfunction testLineMappingDirectionAfterEvents(lines: string[], eol: string, direction: AssertDocumentLineMappingDirection, e: IModelChangedEvent): void {\n\t\tconst myDocument = new ExtHostDocumentData(undefined!, URI.file(''), lines.slice(0), eol, 1, 'text', false);\n\t\tassertDocumentLineMapping(myDocument, direction);\n\n\t\tmyDocument.onEvents(e);\n\t\tassertDocumentLineMapping(myDocument, direction);\n\t}\n\n\tfunction testLineMappingAfterEvents(lines: string[], e: IModelChangedEvent): void {\n\t\ttestLineMappingDirectionAfterEvents(lines, '\\n', AssertDocumentLineMappingDirection.PositionToOffset, e);\n\t\ttestLineMappingDirectionAfterEvents(lines, '\\n', AssertDocumentLineMappingDirection.OffsetToPosition, e);\n\n\t\ttestLineMappingDirectionAfterEvents(lines, '\\r\\n', AssertDocumentLineMappingDirection.PositionToOffset, e);\n\t\ttestLineMappingDirectionAfterEvents(lines, '\\r\\n', AssertDocumentLineMappingDirection.OffsetToPosition, e);\n\t}\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('line mapping', () => {\n\t\ttestLineMappingAfterEvents([\n\t\t\t'This is line one',\n\t\t\t'and this is line number two',\n\t\t\t'it is followed by #3',\n\t\t\t'and finished with the fourth.',\n\t\t], { changes: [], eol: undefined!, versionId: 7, isRedoing: false, isUndoing: false });\n\t});\n\n\ttest('after remove', () => {\n\t\ttestLineMappingAfterEvents([\n\t\t\t'This is line one',\n\t\t\t'and this is line number two',\n\t\t\t'it is followed by #3',\n\t\t\t'and finished with the fourth.',\n\t\t], createChangeEvent(new Range(1, 3, 1, 6), ''));\n\t});\n\n\ttest('after replace', () => {\n\t\ttestLineMappingAfterEvents([\n\t\t\t'This is line one',\n\t\t\t'and this is line number two',\n\t\t\t'it is followed by #3',\n\t\t\t'and finished with the fourth.',\n\t\t], createChangeEvent(new Range(1, 3, 1, 6), 'is could be'));\n\t});\n\n\ttest('after insert line', () => {\n\t\ttestLineMappingAfterEvents([\n\t\t\t'This is line one',\n\t\t\t'and this is line number two',\n\t\t\t'it is followed by #3',\n\t\t\t'and finished with the fourth.',\n\t\t], createChangeEvent(new Range(1, 3, 1, 6), 'is could be\\na line with number'));\n\t});\n\n\ttest('after insert two lines', () => {\n\t\ttestLineMappingAfterEvents([\n\t\t\t'This is line one',\n\t\t\t'and this is line number two',\n\t\t\t'it is followed by #3',\n\t\t\t'and finished with the fourth.',\n\t\t], createChangeEvent(new Range(1, 3, 1, 6), 'is could be\\na line with number\\nyet another line'));\n\t});\n\n\ttest('after remove line', () => {\n\t\ttestLineMappingAfterEvents([\n\t\t\t'This is line one',\n\t\t\t'and this is line number two',\n\t\t\t'it is followed by #3',\n\t\t\t'and finished with the fourth.',\n\t\t], createChangeEvent(new Range(1, 3, 2, 6), ''));\n\t});\n\n\ttest('after remove two lines', () => {\n\t\ttestLineMappingAfterEvents([\n\t\t\t'This is line one',\n\t\t\t'and this is line number two',\n\t\t\t'it is followed by #3',\n\t\t\t'and finished with the fourth.',\n\t\t], createChangeEvent(new Range(1, 3, 3, 6), ''));\n\t});\n\n\ttest('after deleting entire content', () => {\n\t\ttestLineMappingAfterEvents([\n\t\t\t'This is line one',\n\t\t\t'and this is line number two',\n\t\t\t'it is followed by #3',\n\t\t\t'and finished with the fourth.',\n\t\t], createChangeEvent(new Range(1, 3, 4, 30), ''));\n\t});\n\n\ttest('after replacing entire content', () => {\n\t\ttestLineMappingAfterEvents([\n\t\t\t'This is line one',\n\t\t\t'and this is line number two',\n\t\t\t'it is followed by #3',\n\t\t\t'and finished with the fourth.',\n\t\t], createChangeEvent(new Range(1, 3, 4, 30), 'some new text\\nthat\\nspans multiple lines'));\n\t});\n\n\ttest('after changing EOL to CRLF', () => {\n\t\ttestLineMappingAfterEvents([\n\t\t\t'This is line one',\n\t\t\t'and this is line number two',\n\t\t\t'it is followed by #3',\n\t\t\t'and finished with the fourth.',\n\t\t], createChangeEvent(new Range(1, 1, 1, 1), '', '\\r\\n'));\n\t});\n\n\ttest('after changing EOL to LF', () => {\n\t\ttestLineMappingAfterEvents([\n\t\t\t'This is line one',\n\t\t\t'and this is line number two',\n\t\t\t'it is followed by #3',\n\t\t\t'and finished with the fourth.',\n\t\t], createChangeEvent(new Range(1, 1, 1, 1), '', '\\n'));\n\t});\n});\n"],
  "mappings": "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",
  "names": ["data", "AssertDocumentLineMappingDirection"]
}
