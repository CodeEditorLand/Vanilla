{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/test/browser/extHostFileSystemEventService.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport assert from 'assert';\nimport { ExtHostFileSystemEventService } from '../../common/extHostFileSystemEventService.js';\nimport { IMainContext } from '../../common/extHost.protocol.js';\nimport { NullLogService } from '../../../../platform/log/common/log.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\n\nsuite('ExtHostFileSystemEventService', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('FileSystemWatcher ignore events properties are reversed #26851', function () {\n\n\t\tconst protocol: IMainContext = {\n\t\t\tgetProxy: () => { return undefined!; },\n\t\t\tset: undefined!,\n\t\t\tdispose: undefined!,\n\t\t\tassertRegistered: undefined!,\n\t\t\tdrain: undefined!\n\t\t};\n\n\t\tconst watcher1 = new ExtHostFileSystemEventService(protocol, new NullLogService(), undefined!).createFileSystemWatcher(undefined!, undefined!, '**/somethingInteresting', { correlate: false });\n\t\tassert.strictEqual(watcher1.ignoreChangeEvents, false);\n\t\tassert.strictEqual(watcher1.ignoreCreateEvents, false);\n\t\tassert.strictEqual(watcher1.ignoreDeleteEvents, false);\n\t\twatcher1.dispose();\n\n\t\tconst watcher2 = new ExtHostFileSystemEventService(protocol, new NullLogService(), undefined!).createFileSystemWatcher(undefined!, undefined!, '**/somethingBoring', { ignoreCreateEvents: true, ignoreChangeEvents: true, ignoreDeleteEvents: true, correlate: false });\n\t\tassert.strictEqual(watcher2.ignoreChangeEvents, true);\n\t\tassert.strictEqual(watcher2.ignoreCreateEvents, true);\n\t\tassert.strictEqual(watcher2.ignoreDeleteEvents, true);\n\t\twatcher2.dispose();\n\t});\n\n});\n"],
  "mappings": ";;AAIA,OAAO,YAAY;AACnB,SAAS,qCAAqC;AAC9C,SAAS,oBAAoB;AAC7B,SAAS,sBAAsB;AAC/B,SAAS,+CAA+C;AAExD,MAAM,iCAAiC,MAAM;AAE5C,0CAAwC;AAExC,OAAK,kEAAkE,WAAY;AAElF,UAAM,WAAyB;AAAA,MAC9B,UAAU,6BAAM;AAAE,eAAO;AAAA,MAAY,GAA3B;AAAA,MACV,KAAK;AAAA,MACL,SAAS;AAAA,MACT,kBAAkB;AAAA,MAClB,OAAO;AAAA,IACR;AAEA,UAAM,WAAW,IAAI,8BAA8B,UAAU,IAAI,eAAe,GAAG,MAAU,EAAE,wBAAwB,QAAY,QAAY,2BAA2B,EAAE,WAAW,MAAM,CAAC;AAC9L,WAAO,YAAY,SAAS,oBAAoB,KAAK;AACrD,WAAO,YAAY,SAAS,oBAAoB,KAAK;AACrD,WAAO,YAAY,SAAS,oBAAoB,KAAK;AACrD,aAAS,QAAQ;AAEjB,UAAM,WAAW,IAAI,8BAA8B,UAAU,IAAI,eAAe,GAAG,MAAU,EAAE,wBAAwB,QAAY,QAAY,sBAAsB,EAAE,oBAAoB,MAAM,oBAAoB,MAAM,oBAAoB,MAAM,WAAW,MAAM,CAAC;AACvQ,WAAO,YAAY,SAAS,oBAAoB,IAAI;AACpD,WAAO,YAAY,SAAS,oBAAoB,IAAI;AACpD,WAAO,YAAY,SAAS,oBAAoB,IAAI;AACpD,aAAS,QAAQ;AAAA,EAClB,CAAC;AAEF,CAAC;",
  "names": []
}
