{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/test/browser/extHostBulkEdits.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport assert from 'assert';\nimport * as extHostTypes from '../../common/extHostTypes.js';\nimport { MainContext, IWorkspaceEditDto, MainThreadBulkEditsShape, IWorkspaceTextEditDto } from '../../common/extHost.protocol.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { mock } from '../../../../base/test/common/mock.js';\nimport { ExtHostDocumentsAndEditors } from '../../common/extHostDocumentsAndEditors.js';\nimport { SingleProxyRPCProtocol, TestRPCProtocol } from '../common/testRPCProtocol.js';\nimport { NullLogService } from '../../../../platform/log/common/log.js';\nimport { ExtHostBulkEdits } from '../../common/extHostBulkEdits.js';\nimport { nullExtensionDescription } from '../../../services/extensions/common/extensions.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\nimport { SerializableObjectWithBuffers } from '../../../services/extensions/common/proxyIdentifier.js';\n\nsuite('ExtHostBulkEdits.applyWorkspaceEdit', () => {\n\n\tconst resource = URI.parse('foo:bar');\n\tlet bulkEdits: ExtHostBulkEdits;\n\tlet workspaceResourceEdits: IWorkspaceEditDto;\n\n\tsetup(() => {\n\t\tworkspaceResourceEdits = null!;\n\n\t\tconst rpcProtocol = new TestRPCProtocol();\n\t\trpcProtocol.set(MainContext.MainThreadBulkEdits, new class extends mock<MainThreadBulkEditsShape>() {\n\t\t\toverride $tryApplyWorkspaceEdit(_workspaceResourceEdits: SerializableObjectWithBuffers<IWorkspaceEditDto>): Promise<boolean> {\n\t\t\t\tworkspaceResourceEdits = _workspaceResourceEdits.value;\n\t\t\t\treturn Promise.resolve(true);\n\t\t\t}\n\t\t});\n\t\tconst documentsAndEditors = new ExtHostDocumentsAndEditors(SingleProxyRPCProtocol(null), new NullLogService());\n\t\tdocumentsAndEditors.$acceptDocumentsAndEditorsDelta({\n\t\t\taddedDocuments: [{\n\t\t\t\tisDirty: false,\n\t\t\t\tlanguageId: 'foo',\n\t\t\t\turi: resource,\n\t\t\t\tversionId: 1337,\n\t\t\t\tlines: ['foo'],\n\t\t\t\tEOL: '\\n',\n\t\t\t}]\n\t\t});\n\t\tbulkEdits = new ExtHostBulkEdits(rpcProtocol, documentsAndEditors);\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('uses version id if document available', async () => {\n\t\tconst edit = new extHostTypes.WorkspaceEdit();\n\t\tedit.replace(resource, new extHostTypes.Range(0, 0, 0, 0), 'hello');\n\t\tawait bulkEdits.applyWorkspaceEdit(edit, nullExtensionDescription, undefined);\n\t\tassert.strictEqual(workspaceResourceEdits.edits.length, 1);\n\t\tconst [first] = workspaceResourceEdits.edits;\n\t\tassert.strictEqual((<IWorkspaceTextEditDto>first).versionId, 1337);\n\t});\n\n\ttest('does not use version id if document is not available', async () => {\n\t\tconst edit = new extHostTypes.WorkspaceEdit();\n\t\tedit.replace(URI.parse('foo:bar2'), new extHostTypes.Range(0, 0, 0, 0), 'hello');\n\t\tawait bulkEdits.applyWorkspaceEdit(edit, nullExtensionDescription, undefined);\n\t\tassert.strictEqual(workspaceResourceEdits.edits.length, 1);\n\t\tconst [first] = workspaceResourceEdits.edits;\n\t\tassert.ok(typeof (<IWorkspaceTextEditDto>first).versionId === 'undefined');\n\t});\n\n});\n"],
  "mappings": "AAIA,OAAO,YAAY;AACnB,YAAY,kBAAkB;AAC9B,SAAS,aAAa,mBAAmB,0BAA0B,6BAA6B;AAChG,SAAS,WAAW;AACpB,SAAS,YAAY;AACrB,SAAS,kCAAkC;AAC3C,SAAS,wBAAwB,uBAAuB;AACxD,SAAS,sBAAsB;AAC/B,SAAS,wBAAwB;AACjC,SAAS,gCAAgC;AACzC,SAAS,+CAA+C;AACxD,SAAS,qCAAqC;AAE9C,MAAM,uCAAuC,MAAM;AAElD,QAAM,WAAW,IAAI,MAAM,SAAS;AACpC,MAAI;AACJ,MAAI;AAEJ,QAAM,MAAM;AACX,6BAAyB;AAEzB,UAAM,cAAc,IAAI,gBAAgB;AACxC,gBAAY,IAAI,YAAY,qBAAqB,IAAI,cAAc,KAA+B,EAAE;AAAA,MAC1F,uBAAuB,yBAA6F;AAC5H,iCAAyB,wBAAwB;AACjD,eAAO,QAAQ,QAAQ,IAAI;AAAA,MAC5B;AAAA,IACD,GAAC;AACD,UAAM,sBAAsB,IAAI,2BAA2B,uBAAuB,IAAI,GAAG,IAAI,eAAe,CAAC;AAC7G,wBAAoB,gCAAgC;AAAA,MACnD,gBAAgB,CAAC;AAAA,QAChB,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,KAAK;AAAA,QACL,WAAW;AAAA,QACX,OAAO,CAAC,KAAK;AAAA,QACb,KAAK;AAAA,MACN,CAAC;AAAA,IACF,CAAC;AACD,gBAAY,IAAI,iBAAiB,aAAa,mBAAmB;AAAA,EAClE,CAAC;AAED,0CAAwC;AAExC,OAAK,yCAAyC,YAAY;AACzD,UAAM,OAAO,IAAI,aAAa,cAAc;AAC5C,SAAK,QAAQ,UAAU,IAAI,aAAa,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,OAAO;AAClE,UAAM,UAAU,mBAAmB,MAAM,0BAA0B,MAAS;AAC5E,WAAO,YAAY,uBAAuB,MAAM,QAAQ,CAAC;AACzD,UAAM,CAAC,KAAK,IAAI,uBAAuB;AACvC,WAAO,YAAoC,MAAO,WAAW,IAAI;AAAA,EAClE,CAAC;AAED,OAAK,wDAAwD,YAAY;AACxE,UAAM,OAAO,IAAI,aAAa,cAAc;AAC5C,SAAK,QAAQ,IAAI,MAAM,UAAU,GAAG,IAAI,aAAa,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,OAAO;AAC/E,UAAM,UAAU,mBAAmB,MAAM,0BAA0B,MAAS;AAC5E,WAAO,YAAY,uBAAuB,MAAM,QAAQ,CAAC;AACzD,UAAM,CAAC,KAAK,IAAI,uBAAuB;AACvC,WAAO,GAAG,OAA+B,MAAO,cAAc,WAAW;AAAA,EAC1E,CAAC;AAEF,CAAC;",
  "names": []
}
