{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/test/browser/mainThreadBulkEdits.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { IWorkspaceTextEditDto } from '../../common/extHost.protocol.js';\nimport { mock } from '../../../../base/test/common/mock.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { FileSystemProviderCapabilities, IFileService } from '../../../../platform/files/common/files.js';\nimport { reviveWorkspaceEditDto } from '../../browser/mainThreadBulkEdits.js';\nimport { UriIdentityService } from '../../../../platform/uriIdentity/common/uriIdentityService.js';\nimport { IWorkspaceTextEdit } from '../../../../editor/common/languages.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\n\nsuite('MainThreadBulkEdits', function () {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('\"Rename failed to apply edits\" in monorepo with pnpm #158845', function () {\n\n\n\t\tconst fileService = new class extends mock<IFileService>() {\n\t\t\toverride onDidChangeFileSystemProviderCapabilities = Event.None;\n\t\t\toverride onDidChangeFileSystemProviderRegistrations = Event.None;\n\n\t\t\toverride hasProvider(uri: URI) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\toverride hasCapability(resource: URI, capability: FileSystemProviderCapabilities): boolean {\n\t\t\t\t// if (resource.scheme === 'case' && capability === FileSystemProviderCapabilities.PathCaseSensitive) {\n\t\t\t\t// \treturn false;\n\t\t\t\t// }\n\t\t\t\t// NO capabilities, esp not being case-sensitive\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\n\t\tconst uriIdentityService = new UriIdentityService(fileService);\n\n\t\tconst edits: IWorkspaceTextEditDto[] = [\n\t\t\t{ resource: URI.from({ scheme: 'case', path: '/hello/WORLD/foo.txt' }), textEdit: { range: { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 1 }, text: 'sss' }, versionId: undefined },\n\t\t\t{ resource: URI.from({ scheme: 'case', path: '/heLLO/world/fOO.txt' }), textEdit: { range: { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 1 }, text: 'sss' }, versionId: undefined },\n\t\t\t{ resource: URI.from({ scheme: 'case', path: '/other/path.txt' }), textEdit: { range: { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 1 }, text: 'sss' }, versionId: undefined },\n\t\t\t{ resource: URI.from({ scheme: 'foo', path: '/other/path.txt' }), textEdit: { range: { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 1 }, text: 'sss' }, versionId: undefined },\n\t\t];\n\n\n\t\tconst out = reviveWorkspaceEditDto({ edits }, uriIdentityService);\n\n\t\tassert.strictEqual((<IWorkspaceTextEdit>out.edits[0]).resource.path, '/hello/WORLD/foo.txt');\n\t\tassert.strictEqual((<IWorkspaceTextEdit>out.edits[1]).resource.path, '/hello/WORLD/foo.txt'); // the FIRST occurrence defined the shape!\n\t\tassert.strictEqual((<IWorkspaceTextEdit>out.edits[2]).resource.path, '/other/path.txt');\n\t\tassert.strictEqual((<IWorkspaceTextEdit>out.edits[3]).resource.path, '/other/path.txt');\n\n\t\turiIdentityService.dispose();\n\n\t});\n});\n"],
  "mappings": "AAKA,OAAO,YAAY;AACnB,SAAS,6BAA6B;AACtC,SAAS,YAAY;AACrB,SAAS,aAAa;AACtB,SAAS,WAAW;AACpB,SAAS,gCAAgC,oBAAoB;AAC7D,SAAS,8BAA8B;AACvC,SAAS,0BAA0B;AACnC,SAAS,0BAA0B;AACnC,SAAS,+CAA+C;AAExD,MAAM,uBAAuB,WAAY;AAExC,0CAAwC;AAExC,OAAK,gEAAgE,WAAY;AAGhF,UAAM,cAAc,IAAI,cAAc,KAAmB,EAAE;AAAA,MACjD,4CAA4C,MAAM;AAAA,MAClD,6CAA6C,MAAM;AAAA,MAEnD,YAAY,KAAU;AAC9B,eAAO;AAAA,MACR;AAAA,MAES,cAAc,UAAe,YAAqD;AAK1F,eAAO;AAAA,MACR;AAAA,IACD;AAEA,UAAM,qBAAqB,IAAI,mBAAmB,WAAW;AAE7D,UAAM,QAAiC;AAAA,MACtC,EAAE,UAAU,IAAI,KAAK,EAAE,QAAQ,QAAQ,MAAM,uBAAuB,CAAC,GAAG,UAAU,EAAE,OAAO,EAAE,iBAAiB,GAAG,aAAa,GAAG,eAAe,GAAG,WAAW,EAAE,GAAG,MAAM,MAAM,GAAG,WAAW,OAAU;AAAA,MACvM,EAAE,UAAU,IAAI,KAAK,EAAE,QAAQ,QAAQ,MAAM,uBAAuB,CAAC,GAAG,UAAU,EAAE,OAAO,EAAE,iBAAiB,GAAG,aAAa,GAAG,eAAe,GAAG,WAAW,EAAE,GAAG,MAAM,MAAM,GAAG,WAAW,OAAU;AAAA,MACvM,EAAE,UAAU,IAAI,KAAK,EAAE,QAAQ,QAAQ,MAAM,kBAAkB,CAAC,GAAG,UAAU,EAAE,OAAO,EAAE,iBAAiB,GAAG,aAAa,GAAG,eAAe,GAAG,WAAW,EAAE,GAAG,MAAM,MAAM,GAAG,WAAW,OAAU;AAAA,MAClM,EAAE,UAAU,IAAI,KAAK,EAAE,QAAQ,OAAO,MAAM,kBAAkB,CAAC,GAAG,UAAU,EAAE,OAAO,EAAE,iBAAiB,GAAG,aAAa,GAAG,eAAe,GAAG,WAAW,EAAE,GAAG,MAAM,MAAM,GAAG,WAAW,OAAU;AAAA,IAClM;AAGA,UAAM,MAAM,uBAAuB,EAAE,MAAM,GAAG,kBAAkB;AAEhE,WAAO,YAAiC,IAAI,MAAM,CAAC,EAAG,SAAS,MAAM,sBAAsB;AAC3F,WAAO,YAAiC,IAAI,MAAM,CAAC,EAAG,SAAS,MAAM,sBAAsB;AAC3F,WAAO,YAAiC,IAAI,MAAM,CAAC,EAAG,SAAS,MAAM,iBAAiB;AACtF,WAAO,YAAiC,IAAI,MAAM,CAAC,EAAG,SAAS,MAAM,iBAAiB;AAEtF,uBAAmB,QAAQ;AAAA,EAE5B,CAAC;AACF,CAAC;",
  "names": []
}
