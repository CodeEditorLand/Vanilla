import o from"assert";import{ExtHostCommands as a}from"../../common/extHostCommands.js";import"../../common/extHost.protocol.js";import{CommandsRegistry as u}from"../../../../platform/commands/common/commands.js";import{SingleProxyRPCProtocol as m}from"../common/testRPCProtocol.js";import{mock as r}from"../../../../base/test/common/mock.js";import{NullLogService as d}from"../../../../platform/log/common/log.js";import"../../common/extHostTelemetry.js";import{ensureNoDisposablesAreLeakedInTestSuite as l}from"../../../../base/test/common/utils.js";suite("ExtHostCommands",function(){l(),test("dispose calls unregister",function(){let e;const s=new class extends r(){$registerCommand(t){}$unregisterCommand(t){e=t}};new a(m(s),new d,new class extends r(){onExtensionError(){return!0}}).registerCommand(!0,"foo",()=>{}).dispose(),o.strictEqual(e,"foo"),o.strictEqual(u.getCommand("foo"),void 0)}),test("dispose bubbles only once",function(){let e=0;const s=new class extends r(){$registerCommand(n){}$unregisterCommand(n){e+=1}},t=new a(m(s),new d,new class extends r(){onExtensionError(){return!0}}).registerCommand(!0,"foo",()=>{});t.dispose(),t.dispose(),t.dispose(),o.strictEqual(e,1)}),test("execute with retry",async function(){let e=0;const s=new class extends r(){$registerCommand(n){}async $executeCommand(n,x,c){if(e++,o.strictEqual(c,e===1),e===1)throw o.strictEqual(c,!0),new Error("$executeCommand:retry");return o.strictEqual(c,!1),17}},t=await new a(m(s),new d,new class extends r(){onExtensionError(){return!0}}).executeCommand("fooo",[this,!0]);o.strictEqual(t,17),o.strictEqual(e,2)}),test("onCommand:abc activates extensions when executed from command palette, but not when executed programmatically with vscode.commands.executeCommand #150293",async function(){const e=[],s=new class extends r(){$registerCommand(n){}$fireCommandActivationEvent(n){e.push(n)}},i=new a(m(s),new d,new class extends r(){onExtensionError(){return!0}});i.registerCommand(!0,"extCmd",n=>n);const t=await i.executeCommand("extCmd",this);o.strictEqual(t,this),o.deepStrictEqual(e,["extCmd"])})});
