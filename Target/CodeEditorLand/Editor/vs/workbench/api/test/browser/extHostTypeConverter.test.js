import t from"assert";import*as i from"../../common/extHostTypes.js";import{MarkdownString as r,NotebookCellOutputItem as n,NotebookData as d,LanguageSelector as h,WorkspaceEdit as s}from"../../common/extHostTypeConverters.js";import{isEmptyObject as c}from"../../../../base/common/types.js";import{URI as u}from"../../../../base/common/uri.js";import"../../common/extHost.protocol.js";import{ensureNoDisposablesAreLeakedInTestSuite as k}from"../../../../base/test/common/utils.js";suite("ExtHostTypeConverter",function(){k();function l(e){let o=0;for(const a in e)Object.prototype.hasOwnProperty.call(e,a)&&(o+=1);return o}test("MarkdownConvert - uris",function(){let e=r.from("Hello");t.strictEqual(c(e.uris),!0),t.strictEqual(e.value,"Hello"),e=r.from("Hello [link](foo)"),t.strictEqual(e.value,"Hello [link](foo)"),t.strictEqual(c(e.uris),!0),e=r.from("Hello [link](www.noscheme.bad)"),t.strictEqual(e.value,"Hello [link](www.noscheme.bad)"),t.strictEqual(c(e.uris),!0),e=r.from("Hello [link](foo:path)"),t.strictEqual(e.value,"Hello [link](foo:path)"),t.strictEqual(l(e.uris),1),t.ok(!!e.uris["foo:path"]),e=r.from("hello@foo.bar"),t.strictEqual(e.value,"hello@foo.bar"),t.strictEqual(l(e.uris),1),e=r.from("*hello* [click](command:me)"),t.strictEqual(e.value,"*hello* [click](command:me)"),t.strictEqual(l(e.uris),1),t.ok(!!e.uris["command:me"]),e=r.from("*hello* [click](file:///somepath/here). [click](file:///somepath/here)"),t.strictEqual(e.value,"*hello* [click](file:///somepath/here). [click](file:///somepath/here)"),t.strictEqual(l(e.uris),1),t.ok(!!e.uris["file:///somepath/here"]),e=r.from("*hello* [click](file:///somepath/here). [click](file:///somepath/here)"),t.strictEqual(e.value,"*hello* [click](file:///somepath/here). [click](file:///somepath/here)"),t.strictEqual(l(e.uris),1),t.ok(!!e.uris["file:///somepath/here"]),e=r.from("*hello* [click](file:///somepath/here). [click](file:///somepath/here2)"),t.strictEqual(e.value,"*hello* [click](file:///somepath/here). [click](file:///somepath/here2)"),t.strictEqual(l(e.uris),2),t.ok(!!e.uris["file:///somepath/here"]),t.ok(!!e.uris["file:///somepath/here2"])}),test("NPM script explorer running a script from the hover does not work #65561",function(){const e=r.from("*hello* [click](command:npm.runScriptFromHover?%7B%22documentUri%22%3A%7B%22%24mid%22%3A1%2C%22external%22%3A%22file%3A%2F%2F%2Fc%253A%2Ffoo%2Fbaz.ex%22%2C%22path%22%3A%22%2Fc%3A%2Ffoo%2Fbaz.ex%22%2C%22scheme%22%3A%22file%22%7D%2C%22script%22%3A%22dev%22%7D)");t.strictEqual(l(e.uris),2);for(const o of Object.values(e.uris))o.scheme==="file"?t.ok(u.revive(o).toString().indexOf("file:///c%3A")===0):t.strictEqual(o.scheme,"command")}),test("Notebook metadata is ignored when using Notebook Serializer #125716",function(){const e=new i.NotebookData([]);e.cells.push(new i.NotebookCellData(i.NotebookCellKind.Code,"hello","fooLang")),e.metadata={foo:"bar",bar:123};const o=d.from(e);t.strictEqual(o.cells.length,1),t.strictEqual(o.cells[0].language,"fooLang"),t.strictEqual(o.cells[0].source,"hello"),t.deepStrictEqual(o.metadata,e.metadata)}),test("NotebookCellOutputItem",function(){const e=i.NotebookCellOutputItem.text("Hello","foo/bar"),o=n.from(e);t.strictEqual(o.mime,"foo/bar"),t.deepStrictEqual(Array.from(o.valueBytes.buffer),Array.from(new TextEncoder().encode("Hello")));const a=n.to(o);t.strictEqual(a.mime,e.mime),t.deepStrictEqual(Array.from(a.data),Array.from(e.data))}),test("LanguageSelector",function(){const e=h.from({language:"bat",notebookType:"xxx"});t.ok(typeof e=="object"),t.deepStrictEqual(e,{language:"bat",notebookType:"xxx",scheme:void 0,pattern:void 0,exclusive:void 0})}),test("JS/TS Surround With Code Actions provide bad Workspace Edits when obtained by VSCode Command API #178654",function(){const e=u.parse("file:///foo/bar"),o=new i.WorkspaceEdit;o.set(e,[i.SnippetTextEdit.insert(new i.Position(1,1),new i.SnippetString("foo$0bar"))]);const a=s.from(o),m=a.edits[0];t.strictEqual(m.textEdit.insertAsSnippet,!0);const f=s.to(a),p=s.from(f).edits[0];t.strictEqual(p.textEdit.insertAsSnippet,!0)})});
