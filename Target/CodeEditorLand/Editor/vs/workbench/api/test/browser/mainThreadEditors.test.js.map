{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/test/browser/mainThreadEditors.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { Event } from '../../../../base/common/event.js';\nimport { DisposableStore, IReference, ImmortalReference } from '../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { mock } from '../../../../base/test/common/mock.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\nimport { IBulkEditService } from '../../../../editor/browser/services/bulkEditService.js';\nimport { ICodeEditorService } from '../../../../editor/browser/services/codeEditorService.js';\nimport { EditOperation } from '../../../../editor/common/core/editOperation.js';\nimport { Position } from '../../../../editor/common/core/position.js';\nimport { Range } from '../../../../editor/common/core/range.js';\nimport { ITextSnapshot } from '../../../../editor/common/model.js';\nimport { IEditorWorkerService } from '../../../../editor/common/services/editorWorker.js';\nimport { IModelService } from '../../../../editor/common/services/model.js';\nimport { ModelService } from '../../../../editor/common/services/modelService.js';\nimport { IResolvedTextEditorModel, ITextModelService } from '../../../../editor/common/services/resolverService.js';\nimport { TestCodeEditorService } from '../../../../editor/test/browser/editorTestServices.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { TestConfigurationService } from '../../../../platform/configuration/test/common/testConfigurationService.js';\nimport { IDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nimport { TestDialogService } from '../../../../platform/dialogs/test/common/testDialogService.js';\nimport { IEnvironmentService } from '../../../../platform/environment/common/environment.js';\nimport { IFileService } from '../../../../platform/files/common/files.js';\nimport { SyncDescriptor } from '../../../../platform/instantiation/common/descriptors.js';\nimport { InstantiationService } from '../../../../platform/instantiation/common/instantiationService.js';\nimport { ServiceCollection } from '../../../../platform/instantiation/common/serviceCollection.js';\nimport { ILabelService } from '../../../../platform/label/common/label.js';\nimport { ILogService, NullLogService } from '../../../../platform/log/common/log.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { TestNotificationService } from '../../../../platform/notification/test/common/testNotificationService.js';\nimport { TestThemeService } from '../../../../platform/theme/test/common/testThemeService.js';\nimport { IUndoRedoService } from '../../../../platform/undoRedo/common/undoRedo.js';\nimport { UndoRedoService } from '../../../../platform/undoRedo/common/undoRedoService.js';\nimport { IUriIdentityService } from '../../../../platform/uriIdentity/common/uriIdentity.js';\nimport { UriIdentityService } from '../../../../platform/uriIdentity/common/uriIdentityService.js';\nimport { IWorkspaceContextService } from '../../../../platform/workspace/common/workspace.js';\nimport { MainThreadBulkEdits } from '../../browser/mainThreadBulkEdits.js';\nimport { IWorkspaceTextEditDto } from '../../common/extHost.protocol.js';\nimport { SingleProxyRPCProtocol } from '../common/testRPCProtocol.js';\nimport { BulkEditService } from '../../../contrib/bulkEdit/browser/bulkEditService.js';\nimport { IEditorGroupsService } from '../../../services/editor/common/editorGroupsService.js';\nimport { IEditorService } from '../../../services/editor/common/editorService.js';\nimport { IWorkbenchEnvironmentService } from '../../../services/environment/common/environmentService.js';\nimport { SerializableObjectWithBuffers } from '../../../services/extensions/common/proxyIdentifier.js';\nimport { LabelService } from '../../../services/label/common/labelService.js';\nimport { ILifecycleService } from '../../../services/lifecycle/common/lifecycle.js';\nimport { IPaneCompositePartService } from '../../../services/panecomposite/browser/panecomposite.js';\nimport { ITextFileService } from '../../../services/textfile/common/textfiles.js';\nimport { ICopyOperation, ICreateFileOperation, ICreateOperation, IDeleteOperation, IMoveOperation, IWorkingCopyFileService } from '../../../services/workingCopy/common/workingCopyFileService.js';\nimport { IWorkingCopyService } from '../../../services/workingCopy/common/workingCopyService.js';\nimport { TestEditorGroupsService, TestEditorService, TestEnvironmentService, TestFileService, TestLifecycleService, TestWorkingCopyService } from '../../../test/browser/workbenchTestServices.js';\nimport { TestContextService, TestTextResourcePropertiesService } from '../../../test/common/workbenchTestServices.js';\nimport { ILanguageService } from '../../../../editor/common/languages/language.js';\nimport { LanguageService } from '../../../../editor/common/services/languageService.js';\nimport { ILanguageConfigurationService } from '../../../../editor/common/languages/languageConfigurationRegistry.js';\nimport { TestLanguageConfigurationService } from '../../../../editor/test/common/modes/testLanguageConfigurationService.js';\n\nsuite('MainThreadEditors', () => {\n\n\tlet disposables: DisposableStore;\n\tconst resource = URI.parse('foo:bar');\n\n\tlet modelService: IModelService;\n\n\tlet bulkEdits: MainThreadBulkEdits;\n\n\tconst movedResources = new Map<URI, URI>();\n\tconst copiedResources = new Map<URI, URI>();\n\tconst createdResources = new Set<URI>();\n\tconst deletedResources = new Set<URI>();\n\n\tsetup(() => {\n\t\tdisposables = new DisposableStore();\n\n\t\tmovedResources.clear();\n\t\tcopiedResources.clear();\n\t\tcreatedResources.clear();\n\t\tdeletedResources.clear();\n\n\t\tconst configService = new TestConfigurationService();\n\t\tconst dialogService = new TestDialogService();\n\t\tconst notificationService = new TestNotificationService();\n\t\tconst undoRedoService = new UndoRedoService(dialogService, notificationService);\n\t\tconst themeService = new TestThemeService();\n\n\t\tconst services = new ServiceCollection();\n\t\tservices.set(IBulkEditService, new SyncDescriptor(BulkEditService));\n\t\tservices.set(ILabelService, new SyncDescriptor(LabelService));\n\t\tservices.set(ILogService, new NullLogService());\n\t\tservices.set(IWorkspaceContextService, new TestContextService());\n\t\tservices.set(IEnvironmentService, TestEnvironmentService);\n\t\tservices.set(IWorkbenchEnvironmentService, TestEnvironmentService);\n\t\tservices.set(IConfigurationService, configService);\n\t\tservices.set(IDialogService, dialogService);\n\t\tservices.set(INotificationService, notificationService);\n\t\tservices.set(IUndoRedoService, undoRedoService);\n\t\tservices.set(IModelService, modelService);\n\t\tservices.set(ICodeEditorService, new TestCodeEditorService(themeService));\n\t\tservices.set(IFileService, new TestFileService());\n\t\tservices.set(IUriIdentityService, new SyncDescriptor(UriIdentityService));\n\t\tservices.set(IEditorService, disposables.add(new TestEditorService()));\n\t\tservices.set(ILifecycleService, new TestLifecycleService());\n\t\tservices.set(IWorkingCopyService, new TestWorkingCopyService());\n\t\tservices.set(IEditorGroupsService, new TestEditorGroupsService());\n\t\tservices.set(ITextFileService, new class extends mock<ITextFileService>() {\n\t\t\toverride isDirty() { return false; }\n\t\t\toverride files = <any>{\n\t\t\t\tonDidSave: Event.None,\n\t\t\t\tonDidRevert: Event.None,\n\t\t\t\tonDidChangeDirty: Event.None\n\t\t\t};\n\t\t\toverride create(operations: { resource: URI }[]) {\n\t\t\t\tfor (const o of operations) {\n\t\t\t\t\tcreatedResources.add(o.resource);\n\t\t\t\t}\n\t\t\t\treturn Promise.resolve(Object.create(null));\n\t\t\t}\n\t\t\toverride async getEncodedReadable(resource: URI, value?: string | ITextSnapshot): Promise<any> {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t});\n\t\tservices.set(IWorkingCopyFileService, new class extends mock<IWorkingCopyFileService>() {\n\t\t\toverride onDidRunWorkingCopyFileOperation = Event.None;\n\t\t\toverride createFolder(operations: ICreateOperation[]): any {\n\t\t\t\tthis.create(operations);\n\t\t\t}\n\t\t\toverride create(operations: ICreateFileOperation[]) {\n\t\t\t\tfor (const operation of operations) {\n\t\t\t\t\tcreatedResources.add(operation.resource);\n\t\t\t\t}\n\t\t\t\treturn Promise.resolve(Object.create(null));\n\t\t\t}\n\t\t\toverride move(operations: IMoveOperation[]) {\n\t\t\t\tconst { source, target } = operations[0].file;\n\t\t\t\tmovedResources.set(source, target);\n\t\t\t\treturn Promise.resolve(Object.create(null));\n\t\t\t}\n\t\t\toverride copy(operations: ICopyOperation[]) {\n\t\t\t\tconst { source, target } = operations[0].file;\n\t\t\t\tcopiedResources.set(source, target);\n\t\t\t\treturn Promise.resolve(Object.create(null));\n\t\t\t}\n\t\t\toverride delete(operations: IDeleteOperation[]) {\n\t\t\t\tfor (const operation of operations) {\n\t\t\t\t\tdeletedResources.add(operation.resource);\n\t\t\t\t}\n\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t}\n\t\t});\n\t\tservices.set(ITextModelService, new class extends mock<ITextModelService>() {\n\t\t\toverride createModelReference(resource: URI): Promise<IReference<IResolvedTextEditorModel>> {\n\t\t\t\tconst textEditorModel = new class extends mock<IResolvedTextEditorModel>() {\n\t\t\t\t\toverride textEditorModel = modelService.getModel(resource)!;\n\t\t\t\t};\n\t\t\t\ttextEditorModel.isReadonly = () => false;\n\t\t\t\treturn Promise.resolve(new ImmortalReference(textEditorModel));\n\t\t\t}\n\t\t});\n\t\tservices.set(IEditorWorkerService, new class extends mock<IEditorWorkerService>() {\n\n\t\t});\n\t\tservices.set(IPaneCompositePartService, new class extends mock<IPaneCompositePartService>() implements IPaneCompositePartService {\n\t\t\toverride onDidPaneCompositeOpen = Event.None;\n\t\t\toverride onDidPaneCompositeClose = Event.None;\n\t\t\toverride getActivePaneComposite() {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t});\n\n\t\tservices.set(ILanguageService, disposables.add(new LanguageService()));\n\t\tservices.set(ILanguageConfigurationService, new TestLanguageConfigurationService());\n\n\t\tconst instaService = new InstantiationService(services);\n\n\t\tmodelService = new ModelService(\n\t\t\tconfigService,\n\t\t\tnew TestTextResourcePropertiesService(configService),\n\t\t\tundoRedoService,\n\t\t\tinstaService\n\t\t);\n\n\t\tbulkEdits = instaService.createInstance(MainThreadBulkEdits, SingleProxyRPCProtocol(null));\n\t});\n\n\tteardown(() => {\n\t\tdisposables.dispose();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest(`applyWorkspaceEdit returns false if model is changed by user`, () => {\n\n\t\tconst model = disposables.add(modelService.createModel('something', null, resource));\n\n\t\tconst workspaceResourceEdit: IWorkspaceTextEditDto = {\n\t\t\tresource: resource,\n\t\t\tversionId: model.getVersionId(),\n\t\t\ttextEdit: {\n\t\t\t\ttext: 'asdfg',\n\t\t\t\trange: new Range(1, 1, 1, 1)\n\t\t\t}\n\t\t};\n\n\t\t// Act as if the user edited the model\n\t\tmodel.applyEdits([EditOperation.insert(new Position(0, 0), 'something')]);\n\n\t\treturn bulkEdits.$tryApplyWorkspaceEdit(new SerializableObjectWithBuffers({ edits: [workspaceResourceEdit] })).then((result) => {\n\t\t\tassert.strictEqual(result, false);\n\t\t});\n\t});\n\n\ttest(`issue #54773: applyWorkspaceEdit checks model version in race situation`, () => {\n\n\t\tconst model = disposables.add(modelService.createModel('something', null, resource));\n\n\t\tconst workspaceResourceEdit1: IWorkspaceTextEditDto = {\n\t\t\tresource: resource,\n\t\t\tversionId: model.getVersionId(),\n\t\t\ttextEdit: {\n\t\t\t\ttext: 'asdfg',\n\t\t\t\trange: new Range(1, 1, 1, 1)\n\t\t\t}\n\t\t};\n\t\tconst workspaceResourceEdit2: IWorkspaceTextEditDto = {\n\t\t\tresource: resource,\n\t\t\tversionId: model.getVersionId(),\n\t\t\ttextEdit: {\n\t\t\t\ttext: 'asdfg',\n\t\t\t\trange: new Range(1, 1, 1, 1)\n\t\t\t}\n\t\t};\n\n\t\tconst p1 = bulkEdits.$tryApplyWorkspaceEdit(new SerializableObjectWithBuffers({ edits: [workspaceResourceEdit1] })).then((result) => {\n\t\t\t// first edit request succeeds\n\t\t\tassert.strictEqual(result, true);\n\t\t});\n\t\tconst p2 = bulkEdits.$tryApplyWorkspaceEdit(new SerializableObjectWithBuffers({ edits: [workspaceResourceEdit2] })).then((result) => {\n\t\t\t// second edit request fails\n\t\t\tassert.strictEqual(result, false);\n\t\t});\n\t\treturn Promise.all([p1, p2]);\n\t});\n\n\ttest(`applyWorkspaceEdit with only resource edit`, () => {\n\t\treturn bulkEdits.$tryApplyWorkspaceEdit(new SerializableObjectWithBuffers({\n\t\t\tedits: [\n\t\t\t\t{ oldResource: resource, newResource: resource, options: undefined },\n\t\t\t\t{ oldResource: undefined, newResource: resource, options: undefined },\n\t\t\t\t{ oldResource: resource, newResource: undefined, options: undefined }\n\t\t\t]\n\t\t})).then((result) => {\n\t\t\tassert.strictEqual(result, true);\n\t\t\tassert.strictEqual(movedResources.get(resource), resource);\n\t\t\tassert.strictEqual(createdResources.has(resource), true);\n\t\t\tassert.strictEqual(deletedResources.has(resource), true);\n\t\t});\n\t});\n});\n"],
  "mappings": "AAKA,OAAO,YAAY;AACnB,SAAS,aAAa;AACtB,SAAS,iBAAiB,YAAY,yBAAyB;AAC/D,SAAS,WAAW;AACpB,SAAS,YAAY;AACrB,SAAS,+CAA+C;AACxD,SAAS,wBAAwB;AACjC,SAAS,0BAA0B;AACnC,SAAS,qBAAqB;AAC9B,SAAS,gBAAgB;AACzB,SAAS,aAAa;AACtB,SAAS,qBAAqB;AAC9B,SAAS,4BAA4B;AACrC,SAAS,qBAAqB;AAC9B,SAAS,oBAAoB;AAC7B,SAAS,0BAA0B,yBAAyB;AAC5D,SAAS,6BAA6B;AACtC,SAAS,6BAA6B;AACtC,SAAS,gCAAgC;AACzC,SAAS,sBAAsB;AAC/B,SAAS,yBAAyB;AAClC,SAAS,2BAA2B;AACpC,SAAS,oBAAoB;AAC7B,SAAS,sBAAsB;AAC/B,SAAS,4BAA4B;AACrC,SAAS,yBAAyB;AAClC,SAAS,qBAAqB;AAC9B,SAAS,aAAa,sBAAsB;AAC5C,SAAS,4BAA4B;AACrC,SAAS,+BAA+B;AACxC,SAAS,wBAAwB;AACjC,SAAS,wBAAwB;AACjC,SAAS,uBAAuB;AAChC,SAAS,2BAA2B;AACpC,SAAS,0BAA0B;AACnC,SAAS,gCAAgC;AACzC,SAAS,2BAA2B;AACpC,SAAS,6BAA6B;AACtC,SAAS,8BAA8B;AACvC,SAAS,uBAAuB;AAChC,SAAS,4BAA4B;AACrC,SAAS,sBAAsB;AAC/B,SAAS,oCAAoC;AAC7C,SAAS,qCAAqC;AAC9C,SAAS,oBAAoB;AAC7B,SAAS,yBAAyB;AAClC,SAAS,iCAAiC;AAC1C,SAAS,wBAAwB;AACjC,SAAS,gBAAgB,sBAAsB,kBAAkB,kBAAkB,gBAAgB,+BAA+B;AAClI,SAAS,2BAA2B;AACpC,SAAS,yBAAyB,mBAAmB,wBAAwB,iBAAiB,sBAAsB,8BAA8B;AAClJ,SAAS,oBAAoB,yCAAyC;AACtE,SAAS,wBAAwB;AACjC,SAAS,uBAAuB;AAChC,SAAS,qCAAqC;AAC9C,SAAS,wCAAwC;AAEjD,MAAM,qBAAqB,MAAM;AAEhC,MAAI;AACJ,QAAM,WAAW,IAAI,MAAM,SAAS;AAEpC,MAAI;AAEJ,MAAI;AAEJ,QAAM,iBAAiB,oBAAI,IAAc;AACzC,QAAM,kBAAkB,oBAAI,IAAc;AAC1C,QAAM,mBAAmB,oBAAI,IAAS;AACtC,QAAM,mBAAmB,oBAAI,IAAS;AAEtC,QAAM,MAAM;AACX,kBAAc,IAAI,gBAAgB;AAElC,mBAAe,MAAM;AACrB,oBAAgB,MAAM;AACtB,qBAAiB,MAAM;AACvB,qBAAiB,MAAM;AAEvB,UAAM,gBAAgB,IAAI,yBAAyB;AACnD,UAAM,gBAAgB,IAAI,kBAAkB;AAC5C,UAAM,sBAAsB,IAAI,wBAAwB;AACxD,UAAM,kBAAkB,IAAI,gBAAgB,eAAe,mBAAmB;AAC9E,UAAM,eAAe,IAAI,iBAAiB;AAE1C,UAAM,WAAW,IAAI,kBAAkB;AACvC,aAAS,IAAI,kBAAkB,IAAI,eAAe,eAAe,CAAC;AAClE,aAAS,IAAI,eAAe,IAAI,eAAe,YAAY,CAAC;AAC5D,aAAS,IAAI,aAAa,IAAI,eAAe,CAAC;AAC9C,aAAS,IAAI,0BAA0B,IAAI,mBAAmB,CAAC;AAC/D,aAAS,IAAI,qBAAqB,sBAAsB;AACxD,aAAS,IAAI,8BAA8B,sBAAsB;AACjE,aAAS,IAAI,uBAAuB,aAAa;AACjD,aAAS,IAAI,gBAAgB,aAAa;AAC1C,aAAS,IAAI,sBAAsB,mBAAmB;AACtD,aAAS,IAAI,kBAAkB,eAAe;AAC9C,aAAS,IAAI,eAAe,YAAY;AACxC,aAAS,IAAI,oBAAoB,IAAI,sBAAsB,YAAY,CAAC;AACxE,aAAS,IAAI,cAAc,IAAI,gBAAgB,CAAC;AAChD,aAAS,IAAI,qBAAqB,IAAI,eAAe,kBAAkB,CAAC;AACxE,aAAS,IAAI,gBAAgB,YAAY,IAAI,IAAI,kBAAkB,CAAC,CAAC;AACrE,aAAS,IAAI,mBAAmB,IAAI,qBAAqB,CAAC;AAC1D,aAAS,IAAI,qBAAqB,IAAI,uBAAuB,CAAC;AAC9D,aAAS,IAAI,sBAAsB,IAAI,wBAAwB,CAAC;AAChE,aAAS,IAAI,kBAAkB,IAAI,cAAc,KAAuB,EAAE;AAAA,MAChE,UAAU;AAAE,eAAO;AAAA,MAAO;AAAA,MAC1B,QAAa;AAAA,QACrB,WAAW,MAAM;AAAA,QACjB,aAAa,MAAM;AAAA,QACnB,kBAAkB,MAAM;AAAA,MACzB;AAAA,MACS,OAAO,YAAiC;AAChD,mBAAW,KAAK,YAAY;AAC3B,2BAAiB,IAAI,EAAE,QAAQ;AAAA,QAChC;AACA,eAAO,QAAQ,QAAQ,uBAAO,OAAO,IAAI,CAAC;AAAA,MAC3C;AAAA,MACA,MAAe,mBAAmBA,WAAe,OAA8C;AAC9F,eAAO;AAAA,MACR;AAAA,IACD,GAAC;AACD,aAAS,IAAI,yBAAyB,IAAI,cAAc,KAA8B,EAAE;AAAA,MAC9E,mCAAmC,MAAM;AAAA,MACzC,aAAa,YAAqC;AAC1D,aAAK,OAAO,UAAU;AAAA,MACvB;AAAA,MACS,OAAO,YAAoC;AACnD,mBAAW,aAAa,YAAY;AACnC,2BAAiB,IAAI,UAAU,QAAQ;AAAA,QACxC;AACA,eAAO,QAAQ,QAAQ,uBAAO,OAAO,IAAI,CAAC;AAAA,MAC3C;AAAA,MACS,KAAK,YAA8B;AAC3C,cAAM,EAAE,QAAQ,OAAO,IAAI,WAAW,CAAC,EAAE;AACzC,uBAAe,IAAI,QAAQ,MAAM;AACjC,eAAO,QAAQ,QAAQ,uBAAO,OAAO,IAAI,CAAC;AAAA,MAC3C;AAAA,MACS,KAAK,YAA8B;AAC3C,cAAM,EAAE,QAAQ,OAAO,IAAI,WAAW,CAAC,EAAE;AACzC,wBAAgB,IAAI,QAAQ,MAAM;AAClC,eAAO,QAAQ,QAAQ,uBAAO,OAAO,IAAI,CAAC;AAAA,MAC3C;AAAA,MACS,OAAO,YAAgC;AAC/C,mBAAW,aAAa,YAAY;AACnC,2BAAiB,IAAI,UAAU,QAAQ;AAAA,QACxC;AACA,eAAO,QAAQ,QAAQ,MAAS;AAAA,MACjC;AAAA,IACD,GAAC;AACD,aAAS,IAAI,mBAAmB,IAAI,cAAc,KAAwB,EAAE;AAAA,MAClE,qBAAqBA,WAA8D;AAC3F,cAAM,kBAAkB,IAAI,cAAc,KAA+B,EAAE;AAAA,UACjE,kBAAkB,aAAa,SAASA,SAAQ;AAAA,QAC1D;AACA,wBAAgB,aAAa,MAAM;AACnC,eAAO,QAAQ,QAAQ,IAAI,kBAAkB,eAAe,CAAC;AAAA,MAC9D;AAAA,IACD,GAAC;AACD,aAAS,IAAI,sBAAsB,IAAI,cAAc,KAA2B,EAAE;AAAA,IAElF,GAAC;AACD,aAAS,IAAI,2BAA2B,IAAI,cAAc,KAAgC,EAAuC;AAAA,MACvH,yBAAyB,MAAM;AAAA,MAC/B,0BAA0B,MAAM;AAAA,MAChC,yBAAyB;AACjC,eAAO;AAAA,MACR;AAAA,IACD,GAAC;AAED,aAAS,IAAI,kBAAkB,YAAY,IAAI,IAAI,gBAAgB,CAAC,CAAC;AACrE,aAAS,IAAI,+BAA+B,IAAI,iCAAiC,CAAC;AAElF,UAAM,eAAe,IAAI,qBAAqB,QAAQ;AAEtD,mBAAe,IAAI;AAAA,MAClB;AAAA,MACA,IAAI,kCAAkC,aAAa;AAAA,MACnD;AAAA,MACA;AAAA,IACD;AAEA,gBAAY,aAAa,eAAe,qBAAqB,uBAAuB,IAAI,CAAC;AAAA,EAC1F,CAAC;AAED,WAAS,MAAM;AACd,gBAAY,QAAQ;AAAA,EACrB,CAAC;AAED,0CAAwC;AAExC,OAAK,gEAAgE,MAAM;AAE1E,UAAM,QAAQ,YAAY,IAAI,aAAa,YAAY,aAAa,MAAM,QAAQ,CAAC;AAEnF,UAAM,wBAA+C;AAAA,MACpD;AAAA,MACA,WAAW,MAAM,aAAa;AAAA,MAC9B,UAAU;AAAA,QACT,MAAM;AAAA,QACN,OAAO,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC;AAAA,MAC5B;AAAA,IACD;AAGA,UAAM,WAAW,CAAC,cAAc,OAAO,IAAI,SAAS,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;AAExE,WAAO,UAAU,uBAAuB,IAAI,8BAA8B,EAAE,OAAO,CAAC,qBAAqB,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,WAAW;AAC/H,aAAO,YAAY,QAAQ,KAAK;AAAA,IACjC,CAAC;AAAA,EACF,CAAC;AAED,OAAK,2EAA2E,MAAM;AAErF,UAAM,QAAQ,YAAY,IAAI,aAAa,YAAY,aAAa,MAAM,QAAQ,CAAC;AAEnF,UAAM,yBAAgD;AAAA,MACrD;AAAA,MACA,WAAW,MAAM,aAAa;AAAA,MAC9B,UAAU;AAAA,QACT,MAAM;AAAA,QACN,OAAO,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC;AAAA,MAC5B;AAAA,IACD;AACA,UAAM,yBAAgD;AAAA,MACrD;AAAA,MACA,WAAW,MAAM,aAAa;AAAA,MAC9B,UAAU;AAAA,QACT,MAAM;AAAA,QACN,OAAO,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC;AAAA,MAC5B;AAAA,IACD;AAEA,UAAM,KAAK,UAAU,uBAAuB,IAAI,8BAA8B,EAAE,OAAO,CAAC,sBAAsB,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,WAAW;AAEpI,aAAO,YAAY,QAAQ,IAAI;AAAA,IAChC,CAAC;AACD,UAAM,KAAK,UAAU,uBAAuB,IAAI,8BAA8B,EAAE,OAAO,CAAC,sBAAsB,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,WAAW;AAEpI,aAAO,YAAY,QAAQ,KAAK;AAAA,IACjC,CAAC;AACD,WAAO,QAAQ,IAAI,CAAC,IAAI,EAAE,CAAC;AAAA,EAC5B,CAAC;AAED,OAAK,8CAA8C,MAAM;AACxD,WAAO,UAAU,uBAAuB,IAAI,8BAA8B;AAAA,MACzE,OAAO;AAAA,QACN,EAAE,aAAa,UAAU,aAAa,UAAU,SAAS,OAAU;AAAA,QACnE,EAAE,aAAa,QAAW,aAAa,UAAU,SAAS,OAAU;AAAA,QACpE,EAAE,aAAa,UAAU,aAAa,QAAW,SAAS,OAAU;AAAA,MACrE;AAAA,IACD,CAAC,CAAC,EAAE,KAAK,CAAC,WAAW;AACpB,aAAO,YAAY,QAAQ,IAAI;AAC/B,aAAO,YAAY,eAAe,IAAI,QAAQ,GAAG,QAAQ;AACzD,aAAO,YAAY,iBAAiB,IAAI,QAAQ,GAAG,IAAI;AACvD,aAAO,YAAY,iBAAiB,IAAI,QAAQ,GAAG,IAAI;AAAA,IACxD,CAAC;AAAA,EACF,CAAC;AACF,CAAC;",
  "names": ["resource"]
}
