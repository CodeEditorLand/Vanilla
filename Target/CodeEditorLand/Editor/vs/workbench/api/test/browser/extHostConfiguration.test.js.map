{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/test/browser/extHostConfiguration.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { URI, UriComponents } from '../../../../base/common/uri.js';\nimport { ExtHostWorkspace } from '../../common/extHostWorkspace.js';\nimport { ExtHostConfigProvider } from '../../common/extHostConfiguration.js';\nimport { MainThreadConfigurationShape, IConfigurationInitData } from '../../common/extHost.protocol.js';\nimport { ConfigurationModel, ConfigurationModelParser } from '../../../../platform/configuration/common/configurationModels.js';\nimport { TestRPCProtocol } from '../common/testRPCProtocol.js';\nimport { mock } from '../../../../base/test/common/mock.js';\nimport { IWorkspaceFolder, WorkspaceFolder } from '../../../../platform/workspace/common/workspace.js';\nimport { ConfigurationTarget, IConfigurationModel, IConfigurationChange } from '../../../../platform/configuration/common/configuration.js';\nimport { NullLogService } from '../../../../platform/log/common/log.js';\nimport { IExtHostInitDataService } from '../../common/extHostInitDataService.js';\nimport { IExtHostFileSystemInfo } from '../../common/extHostFileSystemInfo.js';\nimport { FileSystemProviderCapabilities } from '../../../../platform/files/common/files.js';\nimport { isLinux } from '../../../../base/common/platform.js';\nimport { IURITransformerService } from '../../common/extHostUriTransformerService.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\n\nsuite('ExtHostConfiguration', function () {\n\n\tclass RecordingShape extends mock<MainThreadConfigurationShape>() {\n\t\tlastArgs!: [ConfigurationTarget, string, any];\n\t\toverride $updateConfigurationOption(target: ConfigurationTarget, key: string, value: any): Promise<void> {\n\t\t\tthis.lastArgs = [target, key, value];\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\t}\n\n\tfunction createExtHostWorkspace(): ExtHostWorkspace {\n\t\treturn new ExtHostWorkspace(new TestRPCProtocol(), new class extends mock<IExtHostInitDataService>() { }, new class extends mock<IExtHostFileSystemInfo>() { override getCapabilities() { return isLinux ? FileSystemProviderCapabilities.PathCaseSensitive : undefined; } }, new NullLogService(), new class extends mock<IURITransformerService>() { });\n\t}\n\n\tfunction createExtHostConfiguration(contents: any = Object.create(null), shape?: MainThreadConfigurationShape) {\n\t\tif (!shape) {\n\t\t\tshape = new class extends mock<MainThreadConfigurationShape>() { };\n\t\t}\n\t\treturn new ExtHostConfigProvider(shape, createExtHostWorkspace(), createConfigurationData(contents), new NullLogService());\n\t}\n\n\tfunction createConfigurationData(contents: any): IConfigurationInitData {\n\t\treturn {\n\t\t\tdefaults: new ConfigurationModel(contents, [], [], undefined, new NullLogService()),\n\t\t\tpolicy: ConfigurationModel.createEmptyModel(new NullLogService()),\n\t\t\tapplication: ConfigurationModel.createEmptyModel(new NullLogService()),\n\t\t\tuser: new ConfigurationModel(contents, [], [], undefined, new NullLogService()),\n\t\t\tworkspace: ConfigurationModel.createEmptyModel(new NullLogService()),\n\t\t\tfolders: [],\n\t\t\tconfigurationScopes: []\n\t\t};\n\t}\n\n\tconst store = ensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('getConfiguration fails regression test 1.7.1 -> 1.8 #15552', function () {\n\t\tconst extHostConfig = createExtHostConfiguration({\n\t\t\t'search': {\n\t\t\t\t'exclude': {\n\t\t\t\t\t'**/node_modules': true\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tassert.strictEqual(extHostConfig.getConfiguration('search.exclude')['**/node_modules'], true);\n\t\tassert.strictEqual(extHostConfig.getConfiguration('search.exclude').get('**/node_modules'), true);\n\t\tassert.strictEqual(extHostConfig.getConfiguration('search').get<any>('exclude')['**/node_modules'], true);\n\n\t\tassert.strictEqual(extHostConfig.getConfiguration('search.exclude').has('**/node_modules'), true);\n\t\tassert.strictEqual(extHostConfig.getConfiguration('search').has('exclude.**/node_modules'), true);\n\t});\n\n\ttest('has/get', () => {\n\n\t\tconst all = createExtHostConfiguration({\n\t\t\t'farboo': {\n\t\t\t\t'config0': true,\n\t\t\t\t'nested': {\n\t\t\t\t\t'config1': 42,\n\t\t\t\t\t'config2': 'Das Pferd frisst kein Reis.'\n\t\t\t\t},\n\t\t\t\t'config4': ''\n\t\t\t}\n\t\t});\n\n\t\tconst config = all.getConfiguration('farboo');\n\n\t\tassert.ok(config.has('config0'));\n\t\tassert.strictEqual(config.get('config0'), true);\n\t\tassert.strictEqual(config.get('config4'), '');\n\t\tassert.strictEqual(config['config0'], true);\n\t\tassert.strictEqual(config['config4'], '');\n\n\t\tassert.ok(config.has('nested.config1'));\n\t\tassert.strictEqual(config.get('nested.config1'), 42);\n\t\tassert.ok(config.has('nested.config2'));\n\t\tassert.strictEqual(config.get('nested.config2'), 'Das Pferd frisst kein Reis.');\n\n\t\tassert.ok(config.has('nested'));\n\t\tassert.deepStrictEqual(config.get('nested'), { config1: 42, config2: 'Das Pferd frisst kein Reis.' });\n\t});\n\n\ttest('can modify the returned configuration', function () {\n\n\t\tconst all = createExtHostConfiguration({\n\t\t\t'farboo': {\n\t\t\t\t'config0': true,\n\t\t\t\t'nested': {\n\t\t\t\t\t'config1': 42,\n\t\t\t\t\t'config2': 'Das Pferd frisst kein Reis.'\n\t\t\t\t},\n\t\t\t\t'config4': ''\n\t\t\t},\n\t\t\t'workbench': {\n\t\t\t\t'colorCustomizations': {\n\t\t\t\t\t'statusBar.foreground': 'somevalue'\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tlet testObject = all.getConfiguration();\n\t\tlet actual = testObject.get<any>('farboo')!;\n\t\tactual['nested']['config1'] = 41;\n\t\tassert.strictEqual(41, actual['nested']['config1']);\n\t\tactual['farboo1'] = 'newValue';\n\t\tassert.strictEqual('newValue', actual['farboo1']);\n\n\t\ttestObject = all.getConfiguration();\n\t\tactual = testObject.get('farboo')!;\n\t\tassert.strictEqual(actual['nested']['config1'], 42);\n\t\tassert.strictEqual(actual['farboo1'], undefined);\n\n\t\ttestObject = all.getConfiguration();\n\t\tactual = testObject.get('farboo')!;\n\t\tassert.strictEqual(actual['config0'], true);\n\t\tactual['config0'] = false;\n\t\tassert.strictEqual(actual['config0'], false);\n\n\t\ttestObject = all.getConfiguration();\n\t\tactual = testObject.get('farboo')!;\n\t\tassert.strictEqual(actual['config0'], true);\n\n\t\ttestObject = all.getConfiguration();\n\t\tactual = testObject.inspect('farboo')!;\n\t\tactual['value'] = 'effectiveValue';\n\t\tassert.strictEqual('effectiveValue', actual['value']);\n\n\t\ttestObject = all.getConfiguration('workbench');\n\t\tactual = testObject.get('colorCustomizations')!;\n\t\tactual['statusBar.foreground'] = undefined;\n\t\tassert.strictEqual(actual['statusBar.foreground'], undefined);\n\t\ttestObject = all.getConfiguration('workbench');\n\t\tactual = testObject.get('colorCustomizations')!;\n\t\tassert.strictEqual(actual['statusBar.foreground'], 'somevalue');\n\t});\n\n\ttest('Stringify returned configuration', function () {\n\n\t\tconst all = createExtHostConfiguration({\n\t\t\t'farboo': {\n\t\t\t\t'config0': true,\n\t\t\t\t'nested': {\n\t\t\t\t\t'config1': 42,\n\t\t\t\t\t'config2': 'Das Pferd frisst kein Reis.'\n\t\t\t\t},\n\t\t\t\t'config4': ''\n\t\t\t},\n\t\t\t'workbench': {\n\t\t\t\t'colorCustomizations': {\n\t\t\t\t\t'statusBar.foreground': 'somevalue'\n\t\t\t\t},\n\t\t\t\t'emptyobjectkey': {\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst testObject = all.getConfiguration();\n\t\tlet actual: any = testObject.get('farboo');\n\t\tassert.deepStrictEqual(JSON.stringify({\n\t\t\t'config0': true,\n\t\t\t'nested': {\n\t\t\t\t'config1': 42,\n\t\t\t\t'config2': 'Das Pferd frisst kein Reis.'\n\t\t\t},\n\t\t\t'config4': ''\n\t\t}), JSON.stringify(actual));\n\n\t\tassert.deepStrictEqual(undefined, JSON.stringify(testObject.get('unknownkey')));\n\n\t\tactual = testObject.get('farboo')!;\n\t\tactual['config0'] = false;\n\t\tassert.deepStrictEqual(JSON.stringify({\n\t\t\t'config0': false,\n\t\t\t'nested': {\n\t\t\t\t'config1': 42,\n\t\t\t\t'config2': 'Das Pferd frisst kein Reis.'\n\t\t\t},\n\t\t\t'config4': ''\n\t\t}), JSON.stringify(actual));\n\n\t\tactual = testObject.get<any>('workbench')!['colorCustomizations']!;\n\t\tactual['statusBar.background'] = 'anothervalue';\n\t\tassert.deepStrictEqual(JSON.stringify({\n\t\t\t'statusBar.foreground': 'somevalue',\n\t\t\t'statusBar.background': 'anothervalue'\n\t\t}), JSON.stringify(actual));\n\n\t\tactual = testObject.get('workbench');\n\t\tactual['unknownkey'] = 'somevalue';\n\t\tassert.deepStrictEqual(JSON.stringify({\n\t\t\t'colorCustomizations': {\n\t\t\t\t'statusBar.foreground': 'somevalue'\n\t\t\t},\n\t\t\t'emptyobjectkey': {},\n\t\t\t'unknownkey': 'somevalue'\n\t\t}), JSON.stringify(actual));\n\n\t\tactual = all.getConfiguration('workbench').get('emptyobjectkey');\n\t\tactual = {\n\t\t\t...(actual || {}),\n\t\t\t'statusBar.background': `#0ff`,\n\t\t\t'statusBar.foreground': `#ff0`,\n\t\t};\n\t\tassert.deepStrictEqual(JSON.stringify({\n\t\t\t'statusBar.background': `#0ff`,\n\t\t\t'statusBar.foreground': `#ff0`,\n\t\t}), JSON.stringify(actual));\n\n\t\tactual = all.getConfiguration('workbench').get('unknownkey');\n\t\tactual = {\n\t\t\t...(actual || {}),\n\t\t\t'statusBar.background': `#0ff`,\n\t\t\t'statusBar.foreground': `#ff0`,\n\t\t};\n\t\tassert.deepStrictEqual(JSON.stringify({\n\t\t\t'statusBar.background': `#0ff`,\n\t\t\t'statusBar.foreground': `#ff0`,\n\t\t}), JSON.stringify(actual));\n\t});\n\n\ttest('cannot modify returned configuration', function () {\n\n\t\tconst all = createExtHostConfiguration({\n\t\t\t'farboo': {\n\t\t\t\t'config0': true,\n\t\t\t\t'nested': {\n\t\t\t\t\t'config1': 42,\n\t\t\t\t\t'config2': 'Das Pferd frisst kein Reis.'\n\t\t\t\t},\n\t\t\t\t'config4': ''\n\t\t\t}\n\t\t});\n\n\t\tconst testObject: any = all.getConfiguration();\n\n\t\ttry {\n\t\t\ttestObject['get'] = null;\n\t\t\tassert.fail('This should be readonly');\n\t\t} catch (e) {\n\t\t}\n\n\t\ttry {\n\t\t\ttestObject['farboo']['config0'] = false;\n\t\t\tassert.fail('This should be readonly');\n\t\t} catch (e) {\n\t\t}\n\n\t\ttry {\n\t\t\ttestObject['farboo']['farboo1'] = 'hello';\n\t\t\tassert.fail('This should be readonly');\n\t\t} catch (e) {\n\t\t}\n\t});\n\n\ttest('inspect in no workspace context', function () {\n\t\tconst testObject = new ExtHostConfigProvider(\n\t\t\tnew class extends mock<MainThreadConfigurationShape>() { },\n\t\t\tcreateExtHostWorkspace(),\n\t\t\t{\n\t\t\t\tdefaults: new ConfigurationModel({\n\t\t\t\t\t'editor': {\n\t\t\t\t\t\t'wordWrap': 'off'\n\t\t\t\t\t}\n\t\t\t\t}, ['editor.wordWrap'], [], undefined, new NullLogService()),\n\t\t\t\tpolicy: ConfigurationModel.createEmptyModel(new NullLogService()),\n\t\t\t\tapplication: ConfigurationModel.createEmptyModel(new NullLogService()),\n\t\t\t\tuser: new ConfigurationModel({\n\t\t\t\t\t'editor': {\n\t\t\t\t\t\t'wordWrap': 'on'\n\t\t\t\t\t}\n\t\t\t\t}, ['editor.wordWrap'], [], undefined, new NullLogService()),\n\t\t\t\tworkspace: new ConfigurationModel({}, [], [], undefined, new NullLogService()),\n\t\t\t\tfolders: [],\n\t\t\t\tconfigurationScopes: []\n\t\t\t},\n\t\t\tnew NullLogService()\n\t\t);\n\n\t\tlet actual = testObject.getConfiguration().inspect('editor.wordWrap')!;\n\t\tassert.strictEqual(actual.defaultValue, 'off');\n\t\tassert.strictEqual(actual.globalValue, 'on');\n\t\tassert.strictEqual(actual.workspaceValue, undefined);\n\t\tassert.strictEqual(actual.workspaceFolderValue, undefined);\n\n\t\tactual = testObject.getConfiguration('editor').inspect('wordWrap')!;\n\t\tassert.strictEqual(actual.defaultValue, 'off');\n\t\tassert.strictEqual(actual.globalValue, 'on');\n\t\tassert.strictEqual(actual.workspaceValue, undefined);\n\t\tassert.strictEqual(actual.workspaceFolderValue, undefined);\n\t});\n\n\ttest('inspect in single root context', function () {\n\t\tconst workspaceUri = URI.file('foo');\n\t\tconst folders: [UriComponents, IConfigurationModel][] = [];\n\t\tconst workspace = new ConfigurationModel({\n\t\t\t'editor': {\n\t\t\t\t'wordWrap': 'bounded'\n\t\t\t}\n\t\t}, ['editor.wordWrap'], [], undefined, new NullLogService());\n\t\tfolders.push([workspaceUri, workspace]);\n\t\tconst extHostWorkspace = createExtHostWorkspace();\n\t\textHostWorkspace.$initializeWorkspace({\n\t\t\t'id': 'foo',\n\t\t\t'folders': [aWorkspaceFolder(URI.file('foo'), 0)],\n\t\t\t'name': 'foo'\n\t\t}, true);\n\t\tconst testObject = new ExtHostConfigProvider(\n\t\t\tnew class extends mock<MainThreadConfigurationShape>() { },\n\t\t\textHostWorkspace,\n\t\t\t{\n\t\t\t\tdefaults: new ConfigurationModel({\n\t\t\t\t\t'editor': {\n\t\t\t\t\t\t'wordWrap': 'off'\n\t\t\t\t\t}\n\t\t\t\t}, ['editor.wordWrap'], [], undefined, new NullLogService()),\n\t\t\t\tpolicy: ConfigurationModel.createEmptyModel(new NullLogService()),\n\t\t\t\tapplication: ConfigurationModel.createEmptyModel(new NullLogService()),\n\t\t\t\tuser: new ConfigurationModel({\n\t\t\t\t\t'editor': {\n\t\t\t\t\t\t'wordWrap': 'on'\n\t\t\t\t\t}\n\t\t\t\t}, ['editor.wordWrap'], [], undefined, new NullLogService()),\n\t\t\t\tworkspace,\n\t\t\t\tfolders,\n\t\t\t\tconfigurationScopes: []\n\t\t\t},\n\t\t\tnew NullLogService()\n\t\t);\n\n\t\tlet actual1 = testObject.getConfiguration().inspect('editor.wordWrap')!;\n\t\tassert.strictEqual(actual1.defaultValue, 'off');\n\t\tassert.strictEqual(actual1.globalValue, 'on');\n\t\tassert.strictEqual(actual1.workspaceValue, 'bounded');\n\t\tassert.strictEqual(actual1.workspaceFolderValue, undefined);\n\n\t\tactual1 = testObject.getConfiguration('editor').inspect('wordWrap')!;\n\t\tassert.strictEqual(actual1.defaultValue, 'off');\n\t\tassert.strictEqual(actual1.globalValue, 'on');\n\t\tassert.strictEqual(actual1.workspaceValue, 'bounded');\n\t\tassert.strictEqual(actual1.workspaceFolderValue, undefined);\n\n\t\tlet actual2 = testObject.getConfiguration(undefined, workspaceUri).inspect('editor.wordWrap')!;\n\t\tassert.strictEqual(actual2.defaultValue, 'off');\n\t\tassert.strictEqual(actual2.globalValue, 'on');\n\t\tassert.strictEqual(actual2.workspaceValue, 'bounded');\n\t\tassert.strictEqual(actual2.workspaceFolderValue, 'bounded');\n\n\t\tactual2 = testObject.getConfiguration('editor', workspaceUri).inspect('wordWrap')!;\n\t\tassert.strictEqual(actual2.defaultValue, 'off');\n\t\tassert.strictEqual(actual2.globalValue, 'on');\n\t\tassert.strictEqual(actual2.workspaceValue, 'bounded');\n\t\tassert.strictEqual(actual2.workspaceFolderValue, 'bounded');\n\t});\n\n\ttest('inspect in multi root context', function () {\n\t\tconst workspace = new ConfigurationModel({\n\t\t\t'editor': {\n\t\t\t\t'wordWrap': 'bounded'\n\t\t\t}\n\t\t}, ['editor.wordWrap'], [], undefined, new NullLogService());\n\n\t\tconst firstRoot = URI.file('foo1');\n\t\tconst secondRoot = URI.file('foo2');\n\t\tconst thirdRoot = URI.file('foo3');\n\t\tconst folders: [UriComponents, IConfigurationModel][] = [];\n\t\tfolders.push([firstRoot, new ConfigurationModel({\n\t\t\t'editor': {\n\t\t\t\t'wordWrap': 'off',\n\t\t\t\t'lineNumbers': 'relative'\n\t\t\t}\n\t\t}, ['editor.wordWrap'], [], undefined, new NullLogService())]);\n\t\tfolders.push([secondRoot, new ConfigurationModel({\n\t\t\t'editor': {\n\t\t\t\t'wordWrap': 'on'\n\t\t\t}\n\t\t}, ['editor.wordWrap'], [], undefined, new NullLogService())]);\n\t\tfolders.push([thirdRoot, new ConfigurationModel({}, [], [], undefined, new NullLogService())]);\n\n\t\tconst extHostWorkspace = createExtHostWorkspace();\n\t\textHostWorkspace.$initializeWorkspace({\n\t\t\t'id': 'foo',\n\t\t\t'folders': [aWorkspaceFolder(firstRoot, 0), aWorkspaceFolder(secondRoot, 1)],\n\t\t\t'name': 'foo'\n\t\t}, true);\n\t\tconst testObject = new ExtHostConfigProvider(\n\t\t\tnew class extends mock<MainThreadConfigurationShape>() { },\n\t\t\textHostWorkspace,\n\t\t\t{\n\t\t\t\tdefaults: new ConfigurationModel({\n\t\t\t\t\t'editor': {\n\t\t\t\t\t\t'wordWrap': 'off',\n\t\t\t\t\t\t'lineNumbers': 'on'\n\t\t\t\t\t}\n\t\t\t\t}, ['editor.wordWrap'], [], undefined, new NullLogService()),\n\t\t\t\tpolicy: ConfigurationModel.createEmptyModel(new NullLogService()),\n\t\t\t\tapplication: ConfigurationModel.createEmptyModel(new NullLogService()),\n\t\t\t\tuser: new ConfigurationModel({\n\t\t\t\t\t'editor': {\n\t\t\t\t\t\t'wordWrap': 'on'\n\t\t\t\t\t}\n\t\t\t\t}, ['editor.wordWrap'], [], undefined, new NullLogService()),\n\t\t\t\tworkspace,\n\t\t\t\tfolders,\n\t\t\t\tconfigurationScopes: []\n\t\t\t},\n\t\t\tnew NullLogService()\n\t\t);\n\n\t\tlet actual1 = testObject.getConfiguration().inspect('editor.wordWrap')!;\n\t\tassert.strictEqual(actual1.defaultValue, 'off');\n\t\tassert.strictEqual(actual1.globalValue, 'on');\n\t\tassert.strictEqual(actual1.workspaceValue, 'bounded');\n\t\tassert.strictEqual(actual1.workspaceFolderValue, undefined);\n\n\t\tactual1 = testObject.getConfiguration('editor').inspect('wordWrap')!;\n\t\tassert.strictEqual(actual1.defaultValue, 'off');\n\t\tassert.strictEqual(actual1.globalValue, 'on');\n\t\tassert.strictEqual(actual1.workspaceValue, 'bounded');\n\t\tassert.strictEqual(actual1.workspaceFolderValue, undefined);\n\n\t\tactual1 = testObject.getConfiguration('editor').inspect('lineNumbers')!;\n\t\tassert.strictEqual(actual1.defaultValue, 'on');\n\t\tassert.strictEqual(actual1.globalValue, undefined);\n\t\tassert.strictEqual(actual1.workspaceValue, undefined);\n\t\tassert.strictEqual(actual1.workspaceFolderValue, undefined);\n\n\t\tlet actual2 = testObject.getConfiguration(undefined, firstRoot).inspect('editor.wordWrap')!;\n\t\tassert.strictEqual(actual2.defaultValue, 'off');\n\t\tassert.strictEqual(actual2.globalValue, 'on');\n\t\tassert.strictEqual(actual2.workspaceValue, 'bounded');\n\t\tassert.strictEqual(actual2.workspaceFolderValue, 'off');\n\n\t\tactual2 = testObject.getConfiguration('editor', firstRoot).inspect('wordWrap')!;\n\t\tassert.strictEqual(actual2.defaultValue, 'off');\n\t\tassert.strictEqual(actual2.globalValue, 'on');\n\t\tassert.strictEqual(actual2.workspaceValue, 'bounded');\n\t\tassert.strictEqual(actual2.workspaceFolderValue, 'off');\n\n\t\tactual2 = testObject.getConfiguration('editor', firstRoot).inspect('lineNumbers')!;\n\t\tassert.strictEqual(actual2.defaultValue, 'on');\n\t\tassert.strictEqual(actual2.globalValue, undefined);\n\t\tassert.strictEqual(actual2.workspaceValue, undefined);\n\t\tassert.strictEqual(actual2.workspaceFolderValue, 'relative');\n\n\t\tactual2 = testObject.getConfiguration(undefined, secondRoot).inspect('editor.wordWrap')!;\n\t\tassert.strictEqual(actual2.defaultValue, 'off');\n\t\tassert.strictEqual(actual2.globalValue, 'on');\n\t\tassert.strictEqual(actual2.workspaceValue, 'bounded');\n\t\tassert.strictEqual(actual2.workspaceFolderValue, 'on');\n\n\t\tactual2 = testObject.getConfiguration('editor', secondRoot).inspect('wordWrap')!;\n\t\tassert.strictEqual(actual2.defaultValue, 'off');\n\t\tassert.strictEqual(actual2.globalValue, 'on');\n\t\tassert.strictEqual(actual2.workspaceValue, 'bounded');\n\t\tassert.strictEqual(actual2.workspaceFolderValue, 'on');\n\n\t\tactual2 = testObject.getConfiguration(undefined, thirdRoot).inspect('editor.wordWrap')!;\n\t\tassert.strictEqual(actual2.defaultValue, 'off');\n\t\tassert.strictEqual(actual2.globalValue, 'on');\n\t\tassert.strictEqual(actual2.workspaceValue, 'bounded');\n\t\tassert.ok(Object.keys(actual2).indexOf('workspaceFolderValue') !== -1);\n\t\tassert.strictEqual(actual2.workspaceFolderValue, undefined);\n\n\t\tactual2 = testObject.getConfiguration('editor', thirdRoot).inspect('wordWrap')!;\n\t\tassert.strictEqual(actual2.defaultValue, 'off');\n\t\tassert.strictEqual(actual2.globalValue, 'on');\n\t\tassert.strictEqual(actual2.workspaceValue, 'bounded');\n\t\tassert.ok(Object.keys(actual2).indexOf('workspaceFolderValue') !== -1);\n\t\tassert.strictEqual(actual2.workspaceFolderValue, undefined);\n\t});\n\n\ttest('inspect with language overrides', function () {\n\t\tconst firstRoot = URI.file('foo1');\n\t\tconst secondRoot = URI.file('foo2');\n\t\tconst folders: [UriComponents, IConfigurationModel][] = [];\n\t\tfolders.push([firstRoot, toConfigurationModel({\n\t\t\t'editor.wordWrap': 'bounded',\n\t\t\t'[typescript]': {\n\t\t\t\t'editor.wordWrap': 'unbounded',\n\t\t\t}\n\t\t})]);\n\t\tfolders.push([secondRoot, toConfigurationModel({})]);\n\n\t\tconst extHostWorkspace = createExtHostWorkspace();\n\t\textHostWorkspace.$initializeWorkspace({\n\t\t\t'id': 'foo',\n\t\t\t'folders': [aWorkspaceFolder(firstRoot, 0), aWorkspaceFolder(secondRoot, 1)],\n\t\t\t'name': 'foo'\n\t\t}, true);\n\t\tconst testObject = new ExtHostConfigProvider(\n\t\t\tnew class extends mock<MainThreadConfigurationShape>() { },\n\t\t\textHostWorkspace,\n\t\t\t{\n\t\t\t\tdefaults: toConfigurationModel({\n\t\t\t\t\t'editor.wordWrap': 'off',\n\t\t\t\t\t'[markdown]': {\n\t\t\t\t\t\t'editor.wordWrap': 'bounded',\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tpolicy: ConfigurationModel.createEmptyModel(new NullLogService()),\n\t\t\t\tapplication: ConfigurationModel.createEmptyModel(new NullLogService()),\n\t\t\t\tuser: toConfigurationModel({\n\t\t\t\t\t'editor.wordWrap': 'bounded',\n\t\t\t\t\t'[typescript]': {\n\t\t\t\t\t\t'editor.lineNumbers': 'off',\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tworkspace: toConfigurationModel({\n\t\t\t\t\t'[typescript]': {\n\t\t\t\t\t\t'editor.wordWrap': 'unbounded',\n\t\t\t\t\t\t'editor.lineNumbers': 'off',\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tfolders,\n\t\t\t\tconfigurationScopes: []\n\t\t\t},\n\t\t\tnew NullLogService()\n\t\t);\n\n\t\tlet actual = testObject.getConfiguration(undefined, { uri: firstRoot, languageId: 'typescript' }).inspect('editor.wordWrap')!;\n\t\tassert.strictEqual(actual.defaultValue, 'off');\n\t\tassert.strictEqual(actual.globalValue, 'bounded');\n\t\tassert.strictEqual(actual.workspaceValue, undefined);\n\t\tassert.strictEqual(actual.workspaceFolderValue, 'bounded');\n\t\tassert.strictEqual(actual.defaultLanguageValue, undefined);\n\t\tassert.strictEqual(actual.globalLanguageValue, undefined);\n\t\tassert.strictEqual(actual.workspaceLanguageValue, 'unbounded');\n\t\tassert.strictEqual(actual.workspaceFolderLanguageValue, 'unbounded');\n\t\tassert.deepStrictEqual(actual.languageIds, ['markdown', 'typescript']);\n\n\t\tactual = testObject.getConfiguration(undefined, { uri: secondRoot, languageId: 'typescript' }).inspect('editor.wordWrap')!;\n\t\tassert.strictEqual(actual.defaultValue, 'off');\n\t\tassert.strictEqual(actual.globalValue, 'bounded');\n\t\tassert.strictEqual(actual.workspaceValue, undefined);\n\t\tassert.strictEqual(actual.workspaceFolderValue, undefined);\n\t\tassert.strictEqual(actual.defaultLanguageValue, undefined);\n\t\tassert.strictEqual(actual.globalLanguageValue, undefined);\n\t\tassert.strictEqual(actual.workspaceLanguageValue, 'unbounded');\n\t\tassert.strictEqual(actual.workspaceFolderLanguageValue, undefined);\n\t\tassert.deepStrictEqual(actual.languageIds, ['markdown', 'typescript']);\n\t});\n\n\ttest('application is not set in inspect', () => {\n\n\t\tconst testObject = new ExtHostConfigProvider(\n\t\t\tnew class extends mock<MainThreadConfigurationShape>() { },\n\t\t\tcreateExtHostWorkspace(),\n\t\t\t{\n\t\t\t\tdefaults: new ConfigurationModel({\n\t\t\t\t\t'editor': {\n\t\t\t\t\t\t'wordWrap': 'off',\n\t\t\t\t\t\t'lineNumbers': 'on',\n\t\t\t\t\t\t'fontSize': '12px'\n\t\t\t\t\t}\n\t\t\t\t}, ['editor.wordWrap'], [], undefined, new NullLogService()),\n\t\t\t\tpolicy: ConfigurationModel.createEmptyModel(new NullLogService()),\n\t\t\t\tapplication: new ConfigurationModel({\n\t\t\t\t\t'editor': {\n\t\t\t\t\t\t'wordWrap': 'on'\n\t\t\t\t\t}\n\t\t\t\t}, ['editor.wordWrap'], [], undefined, new NullLogService()),\n\t\t\t\tuser: new ConfigurationModel({\n\t\t\t\t\t'editor': {\n\t\t\t\t\t\t'wordWrap': 'auto',\n\t\t\t\t\t\t'lineNumbers': 'off'\n\t\t\t\t\t}\n\t\t\t\t}, ['editor.wordWrap'], [], undefined, new NullLogService()),\n\t\t\t\tworkspace: new ConfigurationModel({}, [], [], undefined, new NullLogService()),\n\t\t\t\tfolders: [],\n\t\t\t\tconfigurationScopes: []\n\t\t\t},\n\t\t\tnew NullLogService()\n\t\t);\n\n\t\tlet actual = testObject.getConfiguration().inspect('editor.wordWrap')!;\n\t\tassert.strictEqual(actual.defaultValue, 'off');\n\t\tassert.strictEqual(actual.globalValue, 'auto');\n\t\tassert.strictEqual(actual.workspaceValue, undefined);\n\t\tassert.strictEqual(actual.workspaceFolderValue, undefined);\n\t\tassert.strictEqual(testObject.getConfiguration().get('editor.wordWrap'), 'auto');\n\n\t\tactual = testObject.getConfiguration().inspect('editor.lineNumbers')!;\n\t\tassert.strictEqual(actual.defaultValue, 'on');\n\t\tassert.strictEqual(actual.globalValue, 'off');\n\t\tassert.strictEqual(actual.workspaceValue, undefined);\n\t\tassert.strictEqual(actual.workspaceFolderValue, undefined);\n\t\tassert.strictEqual(testObject.getConfiguration().get('editor.lineNumbers'), 'off');\n\n\t\tactual = testObject.getConfiguration().inspect('editor.fontSize')!;\n\t\tassert.strictEqual(actual.defaultValue, '12px');\n\t\tassert.strictEqual(actual.globalValue, undefined);\n\t\tassert.strictEqual(actual.workspaceValue, undefined);\n\t\tassert.strictEqual(actual.workspaceFolderValue, undefined);\n\t\tassert.strictEqual(testObject.getConfiguration().get('editor.fontSize'), '12px');\n\t});\n\n\ttest('getConfiguration vs get', function () {\n\n\t\tconst all = createExtHostConfiguration({\n\t\t\t'farboo': {\n\t\t\t\t'config0': true,\n\t\t\t\t'config4': 38\n\t\t\t}\n\t\t});\n\n\t\tlet config = all.getConfiguration('farboo.config0');\n\t\tassert.strictEqual(config.get(''), undefined);\n\t\tassert.strictEqual(config.has(''), false);\n\n\t\tconfig = all.getConfiguration('farboo');\n\t\tassert.strictEqual(config.get('config0'), true);\n\t\tassert.strictEqual(config.has('config0'), true);\n\t});\n\n\ttest('name vs property', function () {\n\t\tconst all = createExtHostConfiguration({\n\t\t\t'farboo': {\n\t\t\t\t'get': 'get-prop'\n\t\t\t}\n\t\t});\n\t\tconst config = all.getConfiguration('farboo');\n\n\t\tassert.ok(config.has('get'));\n\t\tassert.strictEqual(config.get('get'), 'get-prop');\n\t\tassert.deepStrictEqual(config['get'], config.get);\n\t\tassert.throws(() => config['get'] = <any>'get-prop');\n\t});\n\n\ttest('update: no target passes null', function () {\n\t\tconst shape = new RecordingShape();\n\t\tconst allConfig = createExtHostConfiguration({\n\t\t\t'foo': {\n\t\t\t\t'bar': 1,\n\t\t\t\t'far': 1\n\t\t\t}\n\t\t}, shape);\n\n\t\tconst config = allConfig.getConfiguration('foo');\n\t\tconfig.update('bar', 42);\n\n\t\tassert.strictEqual(shape.lastArgs[0], null);\n\t});\n\n\ttest('update/section to key', function () {\n\n\t\tconst shape = new RecordingShape();\n\t\tconst allConfig = createExtHostConfiguration({\n\t\t\t'foo': {\n\t\t\t\t'bar': 1,\n\t\t\t\t'far': 1\n\t\t\t}\n\t\t}, shape);\n\n\t\tlet config = allConfig.getConfiguration('foo');\n\t\tconfig.update('bar', 42, true);\n\n\t\tassert.strictEqual(shape.lastArgs[0], ConfigurationTarget.USER);\n\t\tassert.strictEqual(shape.lastArgs[1], 'foo.bar');\n\t\tassert.strictEqual(shape.lastArgs[2], 42);\n\n\t\tconfig = allConfig.getConfiguration('');\n\t\tconfig.update('bar', 42, true);\n\t\tassert.strictEqual(shape.lastArgs[1], 'bar');\n\n\t\tconfig.update('foo.bar', 42, true);\n\t\tassert.strictEqual(shape.lastArgs[1], 'foo.bar');\n\t});\n\n\ttest('update, what is #15834', function () {\n\t\tconst shape = new RecordingShape();\n\t\tconst allConfig = createExtHostConfiguration({\n\t\t\t'editor': {\n\t\t\t\t'formatOnSave': true\n\t\t\t}\n\t\t}, shape);\n\n\t\tallConfig.getConfiguration('editor').update('formatOnSave', { extensions: ['ts'] });\n\t\tassert.strictEqual(shape.lastArgs[1], 'editor.formatOnSave');\n\t\tassert.deepStrictEqual(shape.lastArgs[2], { extensions: ['ts'] });\n\t});\n\n\ttest('update/error-state not OK', function () {\n\n\t\tconst shape = new class extends mock<MainThreadConfigurationShape>() {\n\t\t\toverride $updateConfigurationOption(target: ConfigurationTarget, key: string, value: any): Promise<any> {\n\t\t\t\treturn Promise.reject(new Error('Unknown Key')); // something !== OK\n\t\t\t}\n\t\t};\n\n\t\treturn createExtHostConfiguration({}, shape)\n\t\t\t.getConfiguration('')\n\t\t\t.update('', true, false)\n\t\t\t.then(() => assert.ok(false), err => { /* expecting rejection */ });\n\t});\n\n\ttest('configuration change event', (done) => {\n\n\t\tconst workspaceFolder = aWorkspaceFolder(URI.file('folder1'), 0);\n\t\tconst extHostWorkspace = createExtHostWorkspace();\n\t\textHostWorkspace.$initializeWorkspace({\n\t\t\t'id': 'foo',\n\t\t\t'folders': [workspaceFolder],\n\t\t\t'name': 'foo'\n\t\t}, true);\n\t\tconst testObject = new ExtHostConfigProvider(\n\t\t\tnew class extends mock<MainThreadConfigurationShape>() { },\n\t\t\textHostWorkspace,\n\t\t\tcreateConfigurationData({\n\t\t\t\t'farboo': {\n\t\t\t\t\t'config': false,\n\t\t\t\t\t'updatedConfig': false\n\t\t\t\t}\n\t\t\t}),\n\t\t\tnew NullLogService()\n\t\t);\n\n\t\tconst newConfigData = createConfigurationData({\n\t\t\t'farboo': {\n\t\t\t\t'config': false,\n\t\t\t\t'updatedConfig': true,\n\t\t\t\t'newConfig': true,\n\t\t\t}\n\t\t});\n\t\tconst configEventData: IConfigurationChange = { keys: ['farboo.updatedConfig', 'farboo.newConfig'], overrides: [] };\n\t\tstore.add(testObject.onDidChangeConfiguration(e => {\n\n\t\t\tassert.deepStrictEqual(testObject.getConfiguration().get('farboo'), {\n\t\t\t\t'config': false,\n\t\t\t\t'updatedConfig': true,\n\t\t\t\t'newConfig': true,\n\t\t\t});\n\n\t\t\tassert.ok(e.affectsConfiguration('farboo'));\n\t\t\tassert.ok(e.affectsConfiguration('farboo', workspaceFolder.uri));\n\t\t\tassert.ok(e.affectsConfiguration('farboo', URI.file('any')));\n\n\t\t\tassert.ok(e.affectsConfiguration('farboo.updatedConfig'));\n\t\t\tassert.ok(e.affectsConfiguration('farboo.updatedConfig', workspaceFolder.uri));\n\t\t\tassert.ok(e.affectsConfiguration('farboo.updatedConfig', URI.file('any')));\n\n\t\t\tassert.ok(e.affectsConfiguration('farboo.newConfig'));\n\t\t\tassert.ok(e.affectsConfiguration('farboo.newConfig', workspaceFolder.uri));\n\t\t\tassert.ok(e.affectsConfiguration('farboo.newConfig', URI.file('any')));\n\n\t\t\tassert.ok(!e.affectsConfiguration('farboo.config'));\n\t\t\tassert.ok(!e.affectsConfiguration('farboo.config', workspaceFolder.uri));\n\t\t\tassert.ok(!e.affectsConfiguration('farboo.config', URI.file('any')));\n\t\t\tdone();\n\t\t}));\n\n\t\ttestObject.$acceptConfigurationChanged(newConfigData, configEventData);\n\t});\n\n\ttest('get return instance of array value', function () {\n\t\tconst testObject = createExtHostConfiguration({ 'far': { 'boo': [] } });\n\n\t\tconst value: string[] = testObject.getConfiguration().get('far.boo', []);\n\t\tvalue.push('a');\n\n\t\tconst actual = testObject.getConfiguration().get('far.boo', []);\n\t\tassert.deepStrictEqual(actual, []);\n\t});\n\n\tfunction aWorkspaceFolder(uri: URI, index: number, name: string = ''): IWorkspaceFolder {\n\t\treturn new WorkspaceFolder({ uri, name, index });\n\t}\n\n\tfunction toConfigurationModel(obj: any): ConfigurationModel {\n\t\tconst parser = new ConfigurationModelParser('test', new NullLogService());\n\t\tparser.parse(JSON.stringify(obj));\n\t\treturn parser.configurationModel;\n\t}\n\n});\n"],
  "mappings": "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",
  "names": []
}
