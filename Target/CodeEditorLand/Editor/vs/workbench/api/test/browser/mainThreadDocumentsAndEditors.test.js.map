{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/test/browser/mainThreadDocumentsAndEditors.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { MainThreadDocumentsAndEditors } from '../../browser/mainThreadDocumentsAndEditors.js';\nimport { SingleProxyRPCProtocol } from '../common/testRPCProtocol.js';\nimport { TestConfigurationService } from '../../../../platform/configuration/test/common/testConfigurationService.js';\nimport { ModelService } from '../../../../editor/common/services/modelService.js';\nimport { TestCodeEditorService } from '../../../../editor/test/browser/editorTestServices.js';\nimport { ITextFileService } from '../../../services/textfile/common/textfiles.js';\nimport { ExtHostDocumentsAndEditorsShape, IDocumentsAndEditorsDelta } from '../../common/extHost.protocol.js';\nimport { createTestCodeEditor, ITestCodeEditor } from '../../../../editor/test/browser/testCodeEditor.js';\nimport { mock } from '../../../../base/test/common/mock.js';\nimport { TestEditorService, TestEditorGroupsService, TestEnvironmentService, TestPathService } from '../../../test/browser/workbenchTestServices.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { ITextModel } from '../../../../editor/common/model.js';\nimport { ServiceCollection } from '../../../../platform/instantiation/common/serviceCollection.js';\nimport { ICodeEditorService } from '../../../../editor/browser/services/codeEditorService.js';\nimport { IFileService } from '../../../../platform/files/common/files.js';\nimport { TestThemeService } from '../../../../platform/theme/test/common/testThemeService.js';\nimport { UndoRedoService } from '../../../../platform/undoRedo/common/undoRedoService.js';\nimport { TestDialogService } from '../../../../platform/dialogs/test/common/testDialogService.js';\nimport { TestNotificationService } from '../../../../platform/notification/test/common/testNotificationService.js';\nimport { TestTextResourcePropertiesService, TestWorkingCopyFileService } from '../../../test/common/workbenchTestServices.js';\nimport { UriIdentityService } from '../../../../platform/uriIdentity/common/uriIdentityService.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { IPaneCompositePartService } from '../../../services/panecomposite/browser/panecomposite.js';\nimport { TextModel } from '../../../../editor/common/model/textModel.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\nimport { TestInstantiationService } from '../../../../platform/instantiation/test/common/instantiationServiceMock.js';\nimport { ILanguageService } from '../../../../editor/common/languages/language.js';\nimport { LanguageService } from '../../../../editor/common/services/languageService.js';\nimport { ILanguageConfigurationService } from '../../../../editor/common/languages/languageConfigurationRegistry.js';\nimport { TestLanguageConfigurationService } from '../../../../editor/test/common/modes/testLanguageConfigurationService.js';\nimport { IUndoRedoService } from '../../../../platform/undoRedo/common/undoRedo.js';\n\nsuite('MainThreadDocumentsAndEditors', () => {\n\n\tlet disposables: DisposableStore;\n\n\tlet modelService: ModelService;\n\tlet codeEditorService: TestCodeEditorService;\n\tlet textFileService: ITextFileService;\n\tconst deltas: IDocumentsAndEditorsDelta[] = [];\n\n\tfunction myCreateTestCodeEditor(model: ITextModel | undefined): ITestCodeEditor {\n\t\treturn createTestCodeEditor(model, {\n\t\t\thasTextFocus: false,\n\t\t\tserviceCollection: new ServiceCollection(\n\t\t\t\t[ICodeEditorService, codeEditorService]\n\t\t\t)\n\t\t});\n\t}\n\n\tsetup(() => {\n\t\tdisposables = new DisposableStore();\n\n\t\tdeltas.length = 0;\n\t\tconst configService = new TestConfigurationService();\n\t\tconfigService.setUserConfiguration('editor', { 'detectIndentation': false });\n\t\tconst dialogService = new TestDialogService();\n\t\tconst notificationService = new TestNotificationService();\n\t\tconst undoRedoService = new UndoRedoService(dialogService, notificationService);\n\t\tconst themeService = new TestThemeService();\n\t\tconst instantiationService = new TestInstantiationService();\n\t\tinstantiationService.set(ILanguageService, disposables.add(new LanguageService()));\n\t\tinstantiationService.set(ILanguageConfigurationService, new TestLanguageConfigurationService());\n\t\tinstantiationService.set(IUndoRedoService, undoRedoService);\n\t\tmodelService = new ModelService(\n\t\t\tconfigService,\n\t\t\tnew TestTextResourcePropertiesService(configService),\n\t\t\tundoRedoService,\n\t\t\tinstantiationService\n\t\t);\n\t\tcodeEditorService = new TestCodeEditorService(themeService);\n\t\ttextFileService = new class extends mock<ITextFileService>() {\n\t\t\toverride isDirty() { return false; }\n\t\t\toverride files = <any>{\n\t\t\t\tonDidSave: Event.None,\n\t\t\t\tonDidRevert: Event.None,\n\t\t\t\tonDidChangeDirty: Event.None\n\t\t\t};\n\t\t};\n\t\tconst workbenchEditorService = disposables.add(new TestEditorService());\n\t\tconst editorGroupService = new TestEditorGroupsService();\n\n\t\tconst fileService = new class extends mock<IFileService>() {\n\t\t\toverride onDidRunOperation = Event.None;\n\t\t\toverride onDidChangeFileSystemProviderCapabilities = Event.None;\n\t\t\toverride onDidChangeFileSystemProviderRegistrations = Event.None;\n\t\t};\n\n\t\tnew MainThreadDocumentsAndEditors(\n\t\t\tSingleProxyRPCProtocol(new class extends mock<ExtHostDocumentsAndEditorsShape>() {\n\t\t\t\toverride $acceptDocumentsAndEditorsDelta(delta: IDocumentsAndEditorsDelta) { deltas.push(delta); }\n\t\t\t}),\n\t\t\tmodelService,\n\t\t\ttextFileService,\n\t\t\tworkbenchEditorService,\n\t\t\tcodeEditorService,\n\t\t\tfileService,\n\t\t\tnull!,\n\t\t\teditorGroupService,\n\t\t\tnew class extends mock<IPaneCompositePartService>() implements IPaneCompositePartService {\n\t\t\t\toverride onDidPaneCompositeOpen = Event.None;\n\t\t\t\toverride onDidPaneCompositeClose = Event.None;\n\t\t\t\toverride getActivePaneComposite() {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t},\n\t\t\tTestEnvironmentService,\n\t\t\tnew TestWorkingCopyFileService(),\n\t\t\tnew UriIdentityService(fileService),\n\t\t\tnew class extends mock<IClipboardService>() {\n\t\t\t\toverride readText() {\n\t\t\t\t\treturn Promise.resolve('clipboard_contents');\n\t\t\t\t}\n\t\t\t},\n\t\t\tnew TestPathService(),\n\t\t\tnew TestConfigurationService(),\n\t\t);\n\t});\n\n\tteardown(() => {\n\t\tdisposables.dispose();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('Model#add', () => {\n\t\tdeltas.length = 0;\n\n\t\tdisposables.add(modelService.createModel('farboo', null));\n\n\t\tassert.strictEqual(deltas.length, 1);\n\t\tconst [delta] = deltas;\n\n\t\tassert.strictEqual(delta.addedDocuments!.length, 1);\n\t\tassert.strictEqual(delta.removedDocuments, undefined);\n\t\tassert.strictEqual(delta.addedEditors, undefined);\n\t\tassert.strictEqual(delta.removedEditors, undefined);\n\t\tassert.strictEqual(delta.newActiveEditor, undefined);\n\t});\n\n\ttest('ignore huge model', function () {\n\n\t\tconst oldLimit = TextModel._MODEL_SYNC_LIMIT;\n\t\ttry {\n\t\t\tconst largeModelString = 'abc'.repeat(1024);\n\t\t\tTextModel._MODEL_SYNC_LIMIT = largeModelString.length / 2;\n\n\t\t\tconst model = modelService.createModel(largeModelString, null);\n\t\t\tdisposables.add(model);\n\t\t\tassert.ok(model.isTooLargeForSyncing());\n\n\t\t\tassert.strictEqual(deltas.length, 1);\n\t\t\tconst [delta] = deltas;\n\t\t\tassert.strictEqual(delta.newActiveEditor, null);\n\t\t\tassert.strictEqual(delta.addedDocuments, undefined);\n\t\t\tassert.strictEqual(delta.removedDocuments, undefined);\n\t\t\tassert.strictEqual(delta.addedEditors, undefined);\n\t\t\tassert.strictEqual(delta.removedEditors, undefined);\n\n\t\t} finally {\n\t\t\tTextModel._MODEL_SYNC_LIMIT = oldLimit;\n\t\t}\n\t});\n\n\ttest('ignore huge model from editor', function () {\n\n\t\tconst oldLimit = TextModel._MODEL_SYNC_LIMIT;\n\t\ttry {\n\t\t\tconst largeModelString = 'abc'.repeat(1024);\n\t\t\tTextModel._MODEL_SYNC_LIMIT = largeModelString.length / 2;\n\n\t\t\tconst model = modelService.createModel(largeModelString, null);\n\t\t\tconst editor = myCreateTestCodeEditor(model);\n\n\t\t\tassert.strictEqual(deltas.length, 1);\n\t\t\tdeltas.length = 0;\n\t\t\tassert.strictEqual(deltas.length, 0);\n\t\t\teditor.dispose();\n\t\t\tmodel.dispose();\n\n\t\t} finally {\n\t\t\tTextModel._MODEL_SYNC_LIMIT = oldLimit;\n\t\t}\n\t});\n\n\ttest('ignore simple widget model', function () {\n\t\tthis.timeout(1000 * 60); // increase timeout for this one test\n\n\t\tconst model = modelService.createModel('test', null, undefined, true);\n\t\tdisposables.add(model);\n\t\tassert.ok(model.isForSimpleWidget);\n\n\t\tassert.strictEqual(deltas.length, 1);\n\t\tconst [delta] = deltas;\n\t\tassert.strictEqual(delta.newActiveEditor, null);\n\t\tassert.strictEqual(delta.addedDocuments, undefined);\n\t\tassert.strictEqual(delta.removedDocuments, undefined);\n\t\tassert.strictEqual(delta.addedEditors, undefined);\n\t\tassert.strictEqual(delta.removedEditors, undefined);\n\t});\n\n\ttest('ignore editor w/o model', () => {\n\t\tconst editor = myCreateTestCodeEditor(undefined);\n\t\tassert.strictEqual(deltas.length, 1);\n\t\tconst [delta] = deltas;\n\t\tassert.strictEqual(delta.newActiveEditor, null);\n\t\tassert.strictEqual(delta.addedDocuments, undefined);\n\t\tassert.strictEqual(delta.removedDocuments, undefined);\n\t\tassert.strictEqual(delta.addedEditors, undefined);\n\t\tassert.strictEqual(delta.removedEditors, undefined);\n\n\t\teditor.dispose();\n\t});\n\n\ttest('editor with model', () => {\n\t\tdeltas.length = 0;\n\n\t\tconst model = modelService.createModel('farboo', null);\n\t\tconst editor = myCreateTestCodeEditor(model);\n\n\t\tassert.strictEqual(deltas.length, 2);\n\t\tconst [first, second] = deltas;\n\t\tassert.strictEqual(first.addedDocuments!.length, 1);\n\t\tassert.strictEqual(first.newActiveEditor, undefined);\n\t\tassert.strictEqual(first.removedDocuments, undefined);\n\t\tassert.strictEqual(first.addedEditors, undefined);\n\t\tassert.strictEqual(first.removedEditors, undefined);\n\n\t\tassert.strictEqual(second.addedEditors!.length, 1);\n\t\tassert.strictEqual(second.addedDocuments, undefined);\n\t\tassert.strictEqual(second.removedDocuments, undefined);\n\t\tassert.strictEqual(second.removedEditors, undefined);\n\t\tassert.strictEqual(second.newActiveEditor, undefined);\n\n\t\teditor.dispose();\n\t\tmodel.dispose();\n\t});\n\n\ttest('editor with dispos-ed/-ing model', () => {\n\t\tconst model = modelService.createModel('farboo', null);\n\t\tconst editor = myCreateTestCodeEditor(model);\n\n\t\t// ignore things until now\n\t\tdeltas.length = 0;\n\n\t\tmodelService.destroyModel(model.uri);\n\t\tassert.strictEqual(deltas.length, 1);\n\t\tconst [first] = deltas;\n\n\t\tassert.strictEqual(first.newActiveEditor, undefined);\n\t\tassert.strictEqual(first.removedEditors!.length, 1);\n\t\tassert.strictEqual(first.removedDocuments!.length, 1);\n\t\tassert.strictEqual(first.addedDocuments, undefined);\n\t\tassert.strictEqual(first.addedEditors, undefined);\n\n\t\teditor.dispose();\n\t\tmodel.dispose();\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
