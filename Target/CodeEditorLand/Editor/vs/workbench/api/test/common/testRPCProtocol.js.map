{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/test/common/testRPCProtocol.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isThenable } from '../../../../base/common/async.js';\nimport { CharCode } from '../../../../base/common/charCode.js';\nimport { IExtHostRpcService } from '../../common/extHostRpcService.js';\nimport { IExtHostContext } from '../../../services/extensions/common/extHostCustomers.js';\nimport { ExtensionHostKind } from '../../../services/extensions/common/extensionHostKind.js';\nimport { Proxied, ProxyIdentifier, SerializableObjectWithBuffers } from '../../../services/extensions/common/proxyIdentifier.js';\nimport { parseJsonAndRestoreBufferRefs, stringifyJsonWithBufferRefs } from '../../../services/extensions/common/rpcProtocol.js';\n\nexport function SingleProxyRPCProtocol(thing: any): IExtHostContext & IExtHostRpcService {\n\treturn {\n\t\t_serviceBrand: undefined,\n\t\tremoteAuthority: null!,\n\t\tgetProxy<T>(): T {\n\t\t\treturn thing;\n\t\t},\n\t\tset<T, R extends T>(identifier: ProxyIdentifier<T>, value: R): R {\n\t\t\treturn value;\n\t\t},\n\t\tdispose: undefined!,\n\t\tassertRegistered: undefined!,\n\t\tdrain: undefined!,\n\t\textensionHostKind: ExtensionHostKind.LocalProcess\n\t};\n}\n\n/** Makes a fake {@link SingleProxyRPCProtocol} on which any method can be called */\nexport function AnyCallRPCProtocol<T>(useCalls?: { [K in keyof T]: T[K] }) {\n\treturn SingleProxyRPCProtocol(new Proxy({}, {\n\t\tget(_target, prop: string) {\n\t\t\tif (useCalls && prop in useCalls) {\n\t\t\t\treturn (useCalls as any)[prop];\n\t\t\t}\n\t\t\treturn () => Promise.resolve(undefined);\n\t\t}\n\t}));\n}\n\nexport class TestRPCProtocol implements IExtHostContext, IExtHostRpcService {\n\n\tpublic _serviceBrand: undefined;\n\tpublic remoteAuthority = null!;\n\tpublic extensionHostKind = ExtensionHostKind.LocalProcess;\n\n\tprivate _callCountValue: number = 0;\n\tprivate _idle?: Promise<any>;\n\tprivate _completeIdle?: Function;\n\n\tprivate readonly _locals: { [id: string]: any };\n\tprivate readonly _proxies: { [id: string]: any };\n\n\tconstructor() {\n\t\tthis._locals = Object.create(null);\n\t\tthis._proxies = Object.create(null);\n\t}\n\n\tdrain(): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n\n\tprivate get _callCount(): number {\n\t\treturn this._callCountValue;\n\t}\n\n\tprivate set _callCount(value: number) {\n\t\tthis._callCountValue = value;\n\t\tif (this._callCountValue === 0) {\n\t\t\tthis._completeIdle?.();\n\t\t\tthis._idle = undefined;\n\t\t}\n\t}\n\n\tsync(): Promise<any> {\n\t\treturn new Promise<any>((c) => {\n\t\t\tsetTimeout(c, 0);\n\t\t}).then(() => {\n\t\t\tif (this._callCount === 0) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tif (!this._idle) {\n\t\t\t\tthis._idle = new Promise<any>((c, e) => {\n\t\t\t\t\tthis._completeIdle = c;\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn this._idle;\n\t\t});\n\t}\n\n\tpublic getProxy<T>(identifier: ProxyIdentifier<T>): Proxied<T> {\n\t\tif (!this._proxies[identifier.sid]) {\n\t\t\tthis._proxies[identifier.sid] = this._createProxy(identifier.sid);\n\t\t}\n\t\treturn this._proxies[identifier.sid];\n\t}\n\n\tprivate _createProxy<T>(proxyId: string): T {\n\t\tconst handler = {\n\t\t\tget: (target: any, name: PropertyKey) => {\n\t\t\t\tif (typeof name === 'string' && !target[name] && name.charCodeAt(0) === CharCode.DollarSign) {\n\t\t\t\t\ttarget[name] = (...myArgs: any[]) => {\n\t\t\t\t\t\treturn this._remoteCall(proxyId, name, myArgs);\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn target[name];\n\t\t\t}\n\t\t};\n\t\treturn new Proxy(Object.create(null), handler);\n\t}\n\n\tpublic set<T, R extends T>(identifier: ProxyIdentifier<T>, value: R): R {\n\t\tthis._locals[identifier.sid] = value;\n\t\treturn value;\n\t}\n\n\tprotected _remoteCall(proxyId: string, path: string, args: any[]): Promise<any> {\n\t\tthis._callCount++;\n\n\t\treturn new Promise<any>((c) => {\n\t\t\tsetTimeout(c, 0);\n\t\t}).then(() => {\n\t\t\tconst instance = this._locals[proxyId];\n\t\t\t// pretend the args went over the wire... (invoke .toJSON on objects...)\n\t\t\tconst wireArgs = simulateWireTransfer(args);\n\t\t\tlet p: Promise<any>;\n\t\t\ttry {\n\t\t\t\tconst result = (<Function>instance[path]).apply(instance, wireArgs);\n\t\t\t\tp = isThenable(result) ? result : Promise.resolve(result);\n\t\t\t} catch (err) {\n\t\t\t\tp = Promise.reject(err);\n\t\t\t}\n\n\t\t\treturn p.then(result => {\n\t\t\t\tthis._callCount--;\n\t\t\t\t// pretend the result went over the wire... (invoke .toJSON on objects...)\n\t\t\t\tconst wireResult = simulateWireTransfer(result);\n\t\t\t\treturn wireResult;\n\t\t\t}, err => {\n\t\t\t\tthis._callCount--;\n\t\t\t\treturn Promise.reject(err);\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic dispose() {\n\t\tthrow new Error('Not implemented!');\n\t}\n\n\tpublic assertRegistered(identifiers: ProxyIdentifier<any>[]): void {\n\t\tthrow new Error('Not implemented!');\n\t}\n}\n\nfunction simulateWireTransfer<T>(obj: T): T {\n\tif (!obj) {\n\t\treturn obj;\n\t}\n\n\tif (Array.isArray(obj)) {\n\t\treturn obj.map(simulateWireTransfer) as any;\n\t}\n\n\tif (obj instanceof SerializableObjectWithBuffers) {\n\t\tconst { jsonString, referencedBuffers } = stringifyJsonWithBufferRefs(obj);\n\t\treturn parseJsonAndRestoreBufferRefs(jsonString, referencedBuffers, null);\n\t} else {\n\t\treturn JSON.parse(JSON.stringify(obj));\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
