{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/node/extHostSearch.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore, IDisposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { URI } from '../../../base/common/uri.js';\nimport * as pfs from '../../../base/node/pfs.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { IExtHostConfiguration } from '../common/extHostConfiguration.js';\nimport { IExtHostInitDataService } from '../common/extHostInitDataService.js';\nimport { IExtHostRpcService } from '../common/extHostRpcService.js';\nimport { ExtHostSearch, reviveQuery } from '../common/extHostSearch.js';\nimport { IURITransformerService } from '../common/extHostUriTransformerService.js';\nimport { IFileQuery, IRawFileQuery, ISearchCompleteStats, ISerializedSearchProgressItem, isSerializedFileMatch, ITextQuery } from '../../services/search/common/search.js';\nimport { TextSearchManager } from '../../services/search/common/textSearchManager.js';\nimport { SearchService } from '../../services/search/node/rawSearchService.js';\nimport { RipgrepSearchProvider } from '../../services/search/node/ripgrepSearchProvider.js';\nimport { OutputChannel } from '../../services/search/node/ripgrepSearchUtils.js';\nimport { NativeTextSearchManager } from '../../services/search/node/textSearchManager.js';\nimport type * as vscode from 'vscode';\n\nexport class NativeExtHostSearch extends ExtHostSearch implements IDisposable {\n\n\tprotected _pfs: typeof pfs = pfs; // allow extending for tests\n\n\tprivate _internalFileSearchHandle: number = -1;\n\tprivate _internalFileSearchProvider: SearchService | null = null;\n\n\tprivate _registeredEHSearchProvider = false;\n\n\tprivate _numThreadsPromise: Promise<number | undefined> | undefined;\n\n\tprivate readonly _disposables = new DisposableStore();\n\n\tprivate isDisposed = false;\n\n\tconstructor(\n\t\t@IExtHostRpcService extHostRpc: IExtHostRpcService,\n\t\t@IExtHostInitDataService initData: IExtHostInitDataService,\n\t\t@IURITransformerService _uriTransformer: IURITransformerService,\n\t\t@IExtHostConfiguration private readonly configurationService: IExtHostConfiguration,\n\t\t@ILogService _logService: ILogService,\n\t) {\n\t\tsuper(extHostRpc, _uriTransformer, _logService);\n\t\tthis.getNumThreads = this.getNumThreads.bind(this);\n\t\tthis.getNumThreadsCached = this.getNumThreadsCached.bind(this);\n\t\tthis.handleConfigurationChanged = this.handleConfigurationChanged.bind(this);\n\t\tconst outputChannel = new OutputChannel('RipgrepSearchUD', this._logService);\n\t\tthis._disposables.add(this.registerTextSearchProvider(Schemas.vscodeUserData, new RipgrepSearchProvider(outputChannel, this.getNumThreadsCached)));\n\t\tif (initData.remote.isRemote && initData.remote.authority) {\n\t\t\tthis._registerEHSearchProviders();\n\t\t}\n\n\t\tconfigurationService.getConfigProvider().then(provider => {\n\t\t\tif (this.isDisposed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._disposables.add(provider.onDidChangeConfiguration(this.handleConfigurationChanged));\n\t\t});\n\t}\n\n\tprivate handleConfigurationChanged(event: vscode.ConfigurationChangeEvent) {\n\t\tif (!event.affectsConfiguration('search')) {\n\t\t\treturn;\n\t\t}\n\t\tthis._numThreadsPromise = undefined;\n\t}\n\n\tasync getNumThreads(): Promise<number | undefined> {\n\t\tconst configProvider = await this.configurationService.getConfigProvider();\n\t\tconst numThreads = configProvider.getConfiguration('search').get<number>('ripgrep.maxThreads');\n\t\treturn numThreads;\n\t}\n\n\tasync getNumThreadsCached(): Promise<number | undefined> {\n\t\tif (!this._numThreadsPromise) {\n\t\t\tthis._numThreadsPromise = this.getNumThreads();\n\t\t}\n\t\treturn this._numThreadsPromise;\n\t}\n\n\tdispose(): void {\n\t\tthis.isDisposed = true;\n\t\tthis._disposables.dispose();\n\t}\n\n\toverride $enableExtensionHostSearch(): void {\n\t\tthis._registerEHSearchProviders();\n\t}\n\n\tprivate _registerEHSearchProviders(): void {\n\t\tif (this._registeredEHSearchProvider) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._registeredEHSearchProvider = true;\n\t\tconst outputChannel = new OutputChannel('RipgrepSearchEH', this._logService);\n\t\tthis._disposables.add(this.registerTextSearchProvider(Schemas.file, new RipgrepSearchProvider(outputChannel, this.getNumThreadsCached)));\n\t\tthis._disposables.add(this.registerInternalFileSearchProvider(Schemas.file, new SearchService('fileSearchProvider', this.getNumThreadsCached)));\n\t}\n\n\tprivate registerInternalFileSearchProvider(scheme: string, provider: SearchService): IDisposable {\n\t\tconst handle = this._handlePool++;\n\t\tthis._internalFileSearchProvider = provider;\n\t\tthis._internalFileSearchHandle = handle;\n\t\tthis._proxy.$registerFileSearchProvider(handle, this._transformScheme(scheme));\n\t\treturn toDisposable(() => {\n\t\t\tthis._internalFileSearchProvider = null;\n\t\t\tthis._proxy.$unregisterProvider(handle);\n\t\t});\n\t}\n\n\toverride $provideFileSearchResults(handle: number, session: number, rawQuery: IRawFileQuery, token: vscode.CancellationToken): Promise<ISearchCompleteStats> {\n\t\tconst query = reviveQuery(rawQuery);\n\t\tif (handle === this._internalFileSearchHandle) {\n\t\t\tconst start = Date.now();\n\t\t\treturn this.doInternalFileSearch(handle, session, query, token).then(result => {\n\t\t\t\tconst elapsed = Date.now() - start;\n\t\t\t\tthis._logService.debug(`Ext host file search time: ${elapsed}ms`);\n\t\t\t\treturn result;\n\t\t\t});\n\t\t}\n\n\t\treturn super.$provideFileSearchResults(handle, session, rawQuery, token);\n\t}\n\n\toverride async doInternalFileSearchWithCustomCallback(rawQuery: IFileQuery, token: vscode.CancellationToken, handleFileMatch: (data: URI[]) => void): Promise<ISearchCompleteStats> {\n\t\tconst onResult = (ev: ISerializedSearchProgressItem) => {\n\t\t\tif (isSerializedFileMatch(ev)) {\n\t\t\t\tev = [ev];\n\t\t\t}\n\n\t\t\tif (Array.isArray(ev)) {\n\t\t\t\thandleFileMatch(ev.map(m => URI.file(m.path)));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (ev.message) {\n\t\t\t\tthis._logService.debug('ExtHostSearch', ev.message);\n\t\t\t}\n\t\t};\n\n\t\tif (!this._internalFileSearchProvider) {\n\t\t\tthrow new Error('No internal file search handler');\n\t\t}\n\t\tconst numThreads = await this.getNumThreadsCached();\n\t\treturn <Promise<ISearchCompleteStats>>this._internalFileSearchProvider.doFileSearch(rawQuery, numThreads, onResult, token);\n\t}\n\n\tprivate async doInternalFileSearch(handle: number, session: number, rawQuery: IFileQuery, token: vscode.CancellationToken): Promise<ISearchCompleteStats> {\n\t\treturn this.doInternalFileSearchWithCustomCallback(rawQuery, token, (data) => {\n\t\t\tthis._proxy.$handleFileMatch(handle, session, data);\n\t\t});\n\t}\n\n\toverride $clearCache(cacheKey: string): Promise<void> {\n\t\tthis._internalFileSearchProvider?.clearCache(cacheKey);\n\n\t\treturn super.$clearCache(cacheKey);\n\t}\n\n\tprotected override createTextSearchManager(query: ITextQuery, provider: vscode.TextSearchProviderNew): TextSearchManager {\n\t\treturn new NativeTextSearchManager(query, provider, undefined, 'textSearchProvider');\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
