import{LogLevel as y,createHttpPatch as R,createNetPatch as M,createProxyResolver as H,createTlsPatch as S,loadSystemCertificates as j}from"@vscode/proxy-agent";import{URI as B}from"../../../base/common/uri.js";import{LogLevel as g}from"../../../platform/log/common/log.js";import{createRequire as D}from"node:module";const x=D(import.meta.url),E=x("http"),A=x("https"),k=x("tls"),I=x("net"),$=!1;function J(o,e,c,n,f,u){const s=u.environment.useHostProxy,m=typeof s=="boolean"?s:!u.remote.isRemote,t={resolveProxy:a=>o.resolveProxy(a),lookupProxyAuthorization:O.bind(void 0,o,n,f,e,{},{},u.remote.isRemote,m),getProxyURL:()=>e.getConfiguration("http").get("proxy"),getProxySupport:()=>e.getConfiguration("http").get("proxySupport")||"off",getNoProxyConfig:()=>e.getConfiguration("http").get("noProxy")||[],addCertificatesV1:()=>V(e),addCertificatesV2:()=>K(e),log:n,getLogLevel:()=>{const a=n.getLevel();switch(a){case g.Trace:return y.Trace;case g.Debug:return y.Debug;case g.Info:return y.Info;case g.Warning:return y.Warning;case g.Error:return y.Error;case g.Off:return y.Off;default:return p(a)}function p(h){return n.error("Unknown log level",h),y.Debug}},proxyResolveTelemetry:()=>{},useHostProxy:m,loadAdditionalCertificates:async()=>{const a=[];if(u.remote.isRemote&&a.push(j({log:n})),m){n.trace("ProxyResolver#loadAdditionalCertificates: Loading certificates from main process");const p=o.loadCertificates();p.then(h=>n.trace("ProxyResolver#loadAdditionalCertificates: Loaded certificates from main process",h.length)),a.push(p)}return u.environment.extensionTestsLocationURI&&A.globalAgent.testCertificates?.length&&(n.trace("ProxyResolver#loadAdditionalCertificates: Loading test certificates"),a.push(Promise.resolve(A.globalAgent.testCertificates))),(await Promise.all(a)).flat()},env:process.env},l=H(t),r=N(t,l);return q(c,r)}function N(o,e){function c(n,f){return Object.assign(n.default||n,f)}return{http:c(E,R(o,E,e)),https:c(A,R(o,A,e)),net:c(I,M(o,I)),tls:c(k,S(o,k))}}function V(o){const e=o.getConfiguration("http");return!e.get("experimental.systemCertificatesV2",$)&&!!e.get("systemCertificates")}function K(o){const e=o.getConfiguration("http");return!!e.get("experimental.systemCertificatesV2",$)&&!!e.get("systemCertificates")}const z=new Map;function q(o,e){return o.getExtensionPathIndex().then(c=>{const n=x("module"),f=n._load;n._load=function(s,m,t){if(s==="net")return e.net;if(s==="tls")return e.tls;if(s!=="http"&&s!=="https")return f.apply(this,arguments);const l=c.findSubstr(B.file(m.filename));let r=z.get(l);if(r||z.set(l,r={}),!r[s]){const a=e[s];r[s]={...a}}return r[s]}})}async function O(o,e,c,n,f,u,s,m,t,l,r){const a=f[t];l&&(f[t]=l),e.trace("ProxyResolver#lookupProxyAuthorization callback",`proxyURL:${t}`,`proxyAuthenticate:${l}`,`proxyAuthenticateCache:${a}`);const p=l||a,h=Array.isArray(p)?p:typeof p=="string"?[p]:[];if(U(c,h,s),h.some(i=>/^(Negotiate|Kerberos)( |$)/i.test(i))&&!r.kerberosRequested){r.kerberosRequested=!0;try{const i=await import("kerberos"),d=new URL(t),P=n.getConfiguration("http").get("proxyKerberosServicePrincipal")||(process.platform==="win32"?`HTTP/${d.hostname}`:`HTTP@${d.hostname}`);return e.debug("ProxyResolver#lookupProxyAuthorization Kerberos authentication lookup",`proxyURL:${t}`,`spn:${P}`),"Negotiate "+await(await i.initializeClient(P)).step("")}catch(i){e.debug("ProxyResolver#lookupProxyAuthorization Kerberos authentication failed",i)}if(s&&m){e.debug("ProxyResolver#lookupProxyAuthorization Kerberos authentication lookup on host",`proxyURL:${t}`);const i=await o.lookupKerberosAuthorization(t);if(i)return"Negotiate "+i}}const v=h.find(i=>/^Basic( |$)/i.test(i));if(v)try{const i=u[t];if(i)if(r.basicAuthCacheUsed)e.debug("ProxyResolver#lookupProxyAuthorization Basic authentication deleting cached credentials",`proxyURL:${t}`),delete u[t];else return e.debug("ProxyResolver#lookupProxyAuthorization Basic authentication using cached credentials",`proxyURL:${t}`),r.basicAuthCacheUsed=!0,i;r.basicAuthAttempt=(r.basicAuthAttempt||0)+1;const d=/ realm="([^"]+)"/i.exec(v)?.[1];e.debug("ProxyResolver#lookupProxyAuthorization Basic authentication lookup",`proxyURL:${t}`,`realm:${d}`);const P=new URL(t),C={scheme:"basic",host:P.hostname,port:Number(P.port),realm:d||"",isProxy:!0,attempt:r.basicAuthAttempt},b=await o.lookupAuthorization(C);if(b){e.debug("ProxyResolver#lookupProxyAuthorization Basic authentication received credentials",`proxyURL:${t}`,`realm:${d}`);const T="Basic "+Buffer.from(`${b.username}:${b.password}`).toString("base64");return u[t]=T,T}else e.debug("ProxyResolver#lookupProxyAuthorization Basic authentication received no credentials",`proxyURL:${t}`,`realm:${d}`)}catch(i){e.error("ProxyResolver#lookupProxyAuthorization Basic authentication failed",i)}}let w=!1;function U(o,e,c){w||!e.length||(w=!0,o.$publicLog2("proxyAuthenticationRequest",{authenticationType:e.map(n=>n.split(" ")[0]).join(","),extensionHostType:c?"remote":"local"}))}export{J as connectProxyResolver};
