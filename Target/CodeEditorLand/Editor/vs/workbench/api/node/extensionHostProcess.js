import C from"minimist";import*as _ from"net";import{ProcessTimeRunOnceScheduler as k}from"../../../base/common/async.js";import{VSBuffer as P}from"../../../base/common/buffer.js";import{isCancellationError as b,isSigPipeError as D,onUnexpectedError as E}from"../../../base/common/errors.js";import*as x from"../../../base/common/performance.js";import{realpath as O}from"../../../base/node/extpath.js";import{Promises as N}from"../../../base/node/pfs.js";import{BufferedEmitter as M,PersistentProtocol as w,ProtocolConstants as H}from"../../../base/parts/ipc/common/ipc.net.js";import{NodeSocket as h,WebSocketNodeSocket as U}from"../../../base/parts/ipc/node/ipc.net.js";import{boolean as A}from"../../../editor/common/config/editorOptions.js";import L from"../../../platform/product/common/product.js";import{ExtensionHostMain as B}from"../common/extensionHostMain.js";import{createURITransformer as W}from"./uriTransformer.js";import{ExtHostConnectionType as S,readExtHostConnection as $}from"../../services/extensions/common/extensionHostEnv.js";import{ExtensionHostExitCode as V,MessageType as y,createMessageOfType as R,isMessageOfType as G}from"../../services/extensions/common/extensionHostProtocol.js";import"../common/extHost.common.services.js";import"./extHost.node.services.js";import{createRequire as j}from"node:module";const T=j(import.meta.url);(function(){for(let e=0;e<process.execArgv.length;e++)process.execArgv[e]==="--inspect-port=0"&&(process.execArgv.splice(e,1),e--)})();const f=C(process.argv.slice(2),{boolean:["transformURIs","skipWorkspaceStorageLock"],string:["useHostProxy"]});(function(){const o=T("module"),e=o._load;o._load=function(i){if(i==="natives")throw new Error('Either the extension or an NPM dependency is using the [unsupported "natives" node module](https://go.microsoft.com/fwlink/?linkid=871887).');return e.apply(this,arguments)}})();const u=process.exit.bind(process),F=process.on.bind(process);function X(o){process.exit=function(e){if(o)u(e);else{const i=new Error("An extension called process.exit() and this was prevented.");console.warn(i.stack)}},process.crash=function(){const e=new Error("An extension called process.crash() and this was prevented.");console.warn(e.stack)},process.env.ELECTRON_RUN_AS_NODE="1",process.on=function(e,i){e==="uncaughtException"&&(i=function(){try{return i.call(void 0,arguments)}catch{}}),F(e,i)}}let m=function(o){u()};function q(){const o=$(process.env);if(o.type===S.MessagePort)return new Promise((e,i)=>{const t=s=>{const c=s[0],p=new M;c.on("message",n=>p.fire(P.wrap(n.data))),c.on("close",()=>{m("renderer closed the MessagePort")}),c.start(),e({onMessage:p.event,send:n=>c.postMessage(n.buffer)})};process.parentPort.on("message",s=>t(s.ports))});if(o.type===S.Socket)return new Promise((e,i)=>{let t=null;const s=setTimeout(()=>{m("VSCODE_EXTHOST_IPC_SOCKET timeout")},6e4),c=H.ReconnectionGraceTime,p=H.ReconnectionShortGraceTime,n=new k(()=>m("renderer disconnected for too long (1)"),c),r=new k(()=>m("renderer disconnected for too long (2)"),p);process.on("message",(d,g)=>{if(d&&d.type==="VSCODE_EXTHOST_IPC_SOCKET"){g.setNoDelay(!0);const I=P.wrap(Buffer.from(d.initialDataChunk,"base64"));let l;if(d.skipWebSocketFrames)l=new h(g,"extHost-socket");else{const v=P.wrap(Buffer.from(d.inflateBytes,"base64"));l=new U(new h(g,"extHost-socket"),d.permessageDeflate,v,!1)}t?(n.cancel(),r.cancel(),t.beginAcceptReconnection(l,I),t.endAcceptReconnection(),t.sendResume()):(clearTimeout(s),t=new w({socket:l,initialChunk:I}),t.sendResume(),t.onDidDispose(()=>m("renderer disconnected")),e(t),t.onSocketClose(()=>{n.schedule()}))}if(d&&d.type==="VSCODE_EXTHOST_IPC_REDUCE_GRACE_TIME"){if(r.isScheduled())return;n.isScheduled()&&r.schedule()}});const a={type:"VSCODE_EXTHOST_IPC_READY"};process.send?.(a)});{const e=o.pipeName;return new Promise((i,t)=>{const s=_.createConnection(e,()=>{s.removeListener("error",t);const c=new w({socket:new h(s,"extHost-renderer")});c.sendResume(),i(c)});s.once("error",t),s.on("close",()=>{m("renderer closed the socket")})})}}async function K(){const o=await q();return new class{_onMessage=new M;onMessage=this._onMessage.event;_terminating;_protocolListener;constructor(){this._terminating=!1,this._protocolListener=o.onMessage(e=>{G(e,y.Terminate)?(this._terminating=!0,this._protocolListener.dispose(),m("received terminate message from renderer")):this._onMessage.fire(e)})}send(e){this._terminating||o.send(e)}async drain(){if(o.drain)return o.drain()}}}function z(o){return new Promise(e=>{const i=o.onMessage(t=>{i.dispose();const s=JSON.parse(t.toString()),c=s.commit,p=L.commit;if(c&&p&&c!==p&&u(V.VersionMismatch),s.parentPid){let n=0;setInterval(function(){try{process.kill(s.parentPid,0),n=0}catch(a){a&&a.code==="EPERM"?(n++,n>=3&&m(`parent process ${s.parentPid} does not exist anymore (3 x EPERM): ${a.message} (code: ${a.code}) (errno: ${a.errno})`)):m(`parent process ${s.parentPid} does not exist anymore: ${a.message} (code: ${a.code}) (errno: ${a.errno})`)}},1e3);let r;try{r=T("native-watchdog"),r.start(s.parentPid)}catch(a){E(a)}}o.send(R(y.Initialized)),e({protocol:o,initData:s})});o.send(R(y.Ready))})}async function J(){const o=[];process.on("unhandledRejection",(n,r)=>{o.push(r),setTimeout(()=>{const a=o.indexOf(r);a>=0&&r.catch(d=>{o.splice(a,1),b(d)||(console.warn(`rejected promise not handled within 1 second: ${d}`),d&&d.stack&&console.warn(`stack trace: ${d.stack}`),n&&E(n))})},1e3)}),process.on("rejectionHandled",n=>{const r=o.indexOf(n);r>=0&&o.splice(r,1)}),process.on("uncaughtException",function(n){D(n)||E(n)}),x.mark("code/extHost/willConnectToRenderer");const e=await K();x.mark("code/extHost/didConnectToRenderer");const i=await z(e);x.mark("code/extHost/didWaitForInitData");const{initData:t}=i;X(!!t.environment.extensionTestsLocationURI),t.environment.useHostProxy=f.useHostProxy!==void 0?f.useHostProxy!=="false":void 0,t.environment.skipWorkspaceStorageLock=A(f.skipWorkspaceStorageLock,!1);const s=new class{pid=process.pid;exit(r){u(r)}fsExists(r){return N.exists(r)}fsRealpath(r){return O(r)}};let c=null;t.remote.authority&&f.transformURIs&&(c=W(t.remote.authority));const p=new B(i.protocol,t,s,c);m=n=>p.terminate(n)}J().catch(o=>console.log(o));
