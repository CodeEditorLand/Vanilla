{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/node/extHostDownloadService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { join } from '../../../base/common/path.js';\nimport { tmpdir } from 'os';\nimport { generateUuid } from '../../../base/common/uuid.js';\nimport { IExtHostCommands } from '../common/extHostCommands.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { MainContext } from '../common/extHost.protocol.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { IExtHostRpcService } from '../common/extHostRpcService.js';\n\nexport class ExtHostDownloadService extends Disposable {\n\n\tconstructor(\n\t\t@IExtHostRpcService extHostRpc: IExtHostRpcService,\n\t\t@IExtHostCommands commands: IExtHostCommands\n\t) {\n\t\tsuper();\n\n\t\tconst proxy = extHostRpc.getProxy(MainContext.MainThreadDownloadService);\n\n\t\tcommands.registerCommand(false, '_workbench.downloadResource', async (resource: URI): Promise<any> => {\n\t\t\tconst location = URI.file(join(tmpdir(), generateUuid()));\n\t\t\tawait proxy.$download(resource, location);\n\t\t\treturn location;\n\t\t});\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,YAAY;AACrB,SAAS,cAAc;AACvB,SAAS,oBAAoB;AAC7B,SAAS,wBAAwB;AACjC,SAAS,kBAAkB;AAC3B,SAAS,mBAAmB;AAC5B,SAAS,WAAW;AACpB,SAAS,0BAA0B;AAE5B,IAAM,yBAAN,cAAqC,WAAW;AAAA,EAdvD,OAcuD;AAAA;AAAA;AAAA,EAEtD,YACqB,YACF,UACjB;AACD,UAAM;AAEN,UAAM,QAAQ,WAAW,SAAS,YAAY,yBAAyB;AAEvE,aAAS,gBAAgB,OAAO,+BAA+B,OAAO,aAAgC;AACrG,YAAM,WAAW,IAAI,KAAK,KAAK,OAAO,GAAG,aAAa,CAAC,CAAC;AACxD,YAAM,MAAM,UAAU,UAAU,QAAQ;AACxC,aAAO;AAAA,IACR,CAAC;AAAA,EACF;AACD;AAhBa,yBAAN;AAAA,EAGJ;AAAA,EACA;AAAA,GAJU;",
  "names": []
}
