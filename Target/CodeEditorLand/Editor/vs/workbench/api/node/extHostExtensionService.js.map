{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/node/extHostExtensionService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// ESM-uncomment-begin\nimport { createRequire } from \"node:module\";\nimport { Schemas } from \"../../../base/common/network.js\";\nimport * as performance from \"../../../base/common/performance.js\";\nimport { URI } from \"../../../base/common/uri.js\";\nimport { realpathSync } from \"../../../base/node/extpath.js\";\nimport type { IExtensionDescription } from \"../../../platform/extensions/common/extensions.js\";\nimport { createApiFactoryAndRegisterActors } from \"../common/extHost.api.impl.js\";\nimport type { ExtensionActivationTimesBuilder } from \"../common/extHostExtensionActivator.js\";\nimport { AbstractExtHostExtensionService } from \"../common/extHostExtensionService.js\";\nimport { RequireInterceptor } from \"../common/extHostRequireInterceptor.js\";\nimport { ExtensionRuntime } from \"../common/extHostTypes.js\";\nimport { CLIServer } from \"./extHostCLIServer.js\";\nimport { ExtHostConsoleForwarder } from \"./extHostConsoleForwarder.js\";\nimport { ExtHostDiskFileSystemProvider } from \"./extHostDiskFileSystemProvider.js\";\nimport { ExtHostDownloadService } from \"./extHostDownloadService.js\";\nimport { connectProxyResolver } from \"./proxyResolver.js\";\nconst require = createRequire(import.meta.url);\n// ESM-uncomment-end\n\nclass NodeModuleRequireInterceptor extends RequireInterceptor {\n\tprotected _installInterceptor(): void {\n\t\tconst that = this;\n\t\tconst node_module = require(\"module\");\n\t\tconst originalLoad = node_module._load;\n\t\tnode_module._load = function load(\n\t\t\trequest: string,\n\t\t\tparent: { filename: string },\n\t\t\tisMain: boolean,\n\t\t) {\n\t\t\trequest = applyAlternatives(request);\n\t\t\tif (!that._factories.has(request)) {\n\t\t\t\treturn originalLoad.apply(this, arguments);\n\t\t\t}\n\t\t\treturn that._factories\n\t\t\t\t.get(request)!\n\t\t\t\t.load(\n\t\t\t\t\trequest,\n\t\t\t\t\tURI.file(realpathSync(parent.filename)),\n\t\t\t\t\t(request) =>\n\t\t\t\t\t\toriginalLoad.apply(this, [request, parent, isMain]),\n\t\t\t\t);\n\t\t};\n\n\t\tconst originalLookup = node_module._resolveLookupPaths;\n\t\tnode_module._resolveLookupPaths = (\n\t\t\trequest: string,\n\t\t\tparent: unknown,\n\t\t) => {\n\t\t\treturn originalLookup.call(\n\t\t\t\tthis,\n\t\t\t\tapplyAlternatives(request),\n\t\t\t\tparent,\n\t\t\t);\n\t\t};\n\n\t\tconst originalResolveFilename = node_module._resolveFilename;\n\t\tnode_module._resolveFilename = function resolveFilename(\n\t\t\trequest: string,\n\t\t\tparent: unknown,\n\t\t\tisMain: boolean,\n\t\t\toptions?: { paths?: string[] },\n\t\t) {\n\t\t\tif (\n\t\t\t\trequest === \"vsda\" &&\n\t\t\t\tArray.isArray(options?.paths) &&\n\t\t\t\toptions.paths.length === 0\n\t\t\t) {\n\t\t\t\t// ESM: ever since we moved to ESM, `require.main` will be `undefined` for extensions\n\t\t\t\t// Some extensions have been using `require.resolve('vsda', { paths: require.main.paths })`\n\t\t\t\t// to find the `vsda` module in our app root. To be backwards compatible with this pattern,\n\t\t\t\t// we help by filling in the `paths` array with the node modules paths of the current module.\n\t\t\t\toptions.paths = node_module._nodeModulePaths(\n\t\t\t\t\timport.meta.dirname,\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn originalResolveFilename.call(\n\t\t\t\tthis,\n\t\t\t\trequest,\n\t\t\t\tparent,\n\t\t\t\tisMain,\n\t\t\t\toptions,\n\t\t\t);\n\t\t};\n\n\t\tconst applyAlternatives = (request: string) => {\n\t\t\tfor (const alternativeModuleName of that._alternatives) {\n\t\t\t\tconst alternative = alternativeModuleName(request);\n\t\t\t\tif (alternative) {\n\t\t\t\t\trequest = alternative;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn request;\n\t\t};\n\t}\n}\n\nexport class ExtHostExtensionService extends AbstractExtHostExtensionService {\n\treadonly extensionRuntime = ExtensionRuntime.Node;\n\n\tprotected async _beforeAlmostReadyToRunExtensions(): Promise<void> {\n\t\t// make sure console.log calls make it to the render\n\t\tthis._instaService.createInstance(ExtHostConsoleForwarder);\n\n\t\t// initialize API and register actors\n\t\tconst extensionApiFactory = this._instaService.invokeFunction(\n\t\t\tcreateApiFactoryAndRegisterActors,\n\t\t);\n\n\t\t// Register Download command\n\t\tthis._instaService.createInstance(ExtHostDownloadService);\n\n\t\t// Register CLI Server for ipc\n\t\tif (this._initData.remote.isRemote && this._initData.remote.authority) {\n\t\t\tconst cliServer = this._instaService.createInstance(CLIServer);\n\t\t\tprocess.env[\"VSCODE_IPC_HOOK_CLI\"] = cliServer.ipcHandlePath;\n\t\t}\n\n\t\t// Register local file system shortcut\n\t\tthis._instaService.createInstance(ExtHostDiskFileSystemProvider);\n\n\t\t// Module loading tricks\n\t\tconst interceptor = this._instaService.createInstance(\n\t\t\tNodeModuleRequireInterceptor,\n\t\t\textensionApiFactory,\n\t\t\t{ mine: this._myRegistry, all: this._globalRegistry },\n\t\t);\n\t\tawait interceptor.install();\n\t\tperformance.mark(\"code/extHost/didInitAPI\");\n\n\t\t// Do this when extension service exists, but extensions are not being activated yet.\n\t\tconst configProvider =\n\t\t\tawait this._extHostConfiguration.getConfigProvider();\n\t\tawait connectProxyResolver(\n\t\t\tthis._extHostWorkspace,\n\t\t\tconfigProvider,\n\t\t\tthis,\n\t\t\tthis._logService,\n\t\t\tthis._mainThreadTelemetryProxy,\n\t\t\tthis._initData,\n\t\t);\n\t\tperformance.mark(\"code/extHost/didInitProxyResolver\");\n\t}\n\n\tprotected _getEntryPoint(\n\t\textensionDescription: IExtensionDescription,\n\t): string | undefined {\n\t\treturn extensionDescription.main;\n\t}\n\n\tprotected async _loadCommonJSModule<T>(\n\t\textension: IExtensionDescription | null,\n\t\tmodule: URI,\n\t\tactivationTimesBuilder: ExtensionActivationTimesBuilder,\n\t): Promise<T> {\n\t\tif (module.scheme !== Schemas.file) {\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot load URI: '${module}', must be of file-scheme`,\n\t\t\t);\n\t\t}\n\t\tlet r: T | null = null;\n\t\tactivationTimesBuilder.codeLoadingStart();\n\t\tthis._logService.trace(\n\t\t\t`ExtensionService#loadCommonJSModule ${module.toString(true)}`,\n\t\t);\n\t\tthis._logService.flush();\n\t\tconst extensionId = extension?.identifier.value;\n\t\tif (extension) {\n\t\t\tawait this._extHostLocalizationService.initializeLocalizedMessages(\n\t\t\t\textension,\n\t\t\t);\n\t\t}\n\t\ttry {\n\t\t\tif (extensionId) {\n\t\t\t\tperformance.mark(\n\t\t\t\t\t`code/extHost/willLoadExtensionCode/${extensionId}`,\n\t\t\t\t);\n\t\t\t}\n\t\t\tr = <T>(\n\t\t\t\t(\n\t\t\t\t\trequire.__$__nodeRequire ?? require\n\t\t\t\t) /* TODO@esm drop the first */(module.fsPath)\n\t\t\t);\n\t\t} finally {\n\t\t\tif (extensionId) {\n\t\t\t\tperformance.mark(\n\t\t\t\t\t`code/extHost/didLoadExtensionCode/${extensionId}`,\n\t\t\t\t);\n\t\t\t}\n\t\t\tactivationTimesBuilder.codeLoadingStop();\n\t\t}\n\t\treturn r;\n\t}\n\n\tpublic async $setRemoteEnvironment(env: {\n\t\t[key: string]: string | null;\n\t}): Promise<void> {\n\t\tif (!this._initData.remote.isRemote) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const key in env) {\n\t\t\tconst value = env[key];\n\t\t\tif (value === null) {\n\t\t\t\tdelete process.env[key];\n\t\t\t} else {\n\t\t\t\tprocess.env[key] = value;\n\t\t\t}\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": ["require", "request"]
}
