{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadEditSessionIdentityParticipant.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { localize } from '../../../nls.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { extHostCustomer, IExtHostContext } from '../../services/extensions/common/extHostCustomers.js';\nimport { IDisposable } from '../../../base/common/lifecycle.js';\nimport { raceCancellationError } from '../../../base/common/async.js';\nimport { IEditSessionIdentityCreateParticipant, IEditSessionIdentityService } from '../../../platform/workspace/common/editSessions.js';\nimport { ExtHostContext, ExtHostWorkspaceShape } from '../common/extHost.protocol.js';\nimport { WorkspaceFolder } from '../../../platform/workspace/common/workspace.js';\n\nclass ExtHostEditSessionIdentityCreateParticipant implements IEditSessionIdentityCreateParticipant {\n\n\tprivate readonly _proxy: ExtHostWorkspaceShape;\n\tprivate readonly timeout = 10000;\n\n\tconstructor(extHostContext: IExtHostContext) {\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostWorkspace);\n\t}\n\n\tasync participate(workspaceFolder: WorkspaceFolder, token: CancellationToken): Promise<void> {\n\t\tconst p = new Promise<any>((resolve, reject) => {\n\n\t\t\tsetTimeout(\n\t\t\t\t() => reject(new Error(localize('timeout.onWillCreateEditSessionIdentity', \"Aborted onWillCreateEditSessionIdentity-event after 10000ms\"))),\n\t\t\t\tthis.timeout\n\t\t\t);\n\t\t\tthis._proxy.$onWillCreateEditSessionIdentity(workspaceFolder.uri, token, this.timeout).then(resolve, reject);\n\t\t});\n\n\t\treturn raceCancellationError(p, token);\n\t}\n}\n\n@extHostCustomer\nexport class EditSessionIdentityCreateParticipant {\n\n\tprivate _saveParticipantDisposable: IDisposable;\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IEditSessionIdentityService private readonly _editSessionIdentityService: IEditSessionIdentityService\n\t) {\n\t\tthis._saveParticipantDisposable = this._editSessionIdentityService.addEditSessionIdentityCreateParticipant(instantiationService.createInstance(ExtHostEditSessionIdentityCreateParticipant, extHostContext));\n\t}\n\n\tdispose(): void {\n\t\tthis._saveParticipantDisposable.dispose();\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,yBAAyB;AAClC,SAAS,gBAAgB;AACzB,SAAS,6BAA6B;AACtC,SAAS,iBAAiB,uBAAuB;AACjD,SAAS,mBAAmB;AAC5B,SAAS,6BAA6B;AACtC,SAAS,uCAAuC,mCAAmC;AACnF,SAAS,gBAAgB,6BAA6B;AACtD,SAAS,uBAAuB;AAEhC,MAAM,4CAA6F;AAAA,EAfnG,OAemG;AAAA;AAAA;AAAA,EAEjF;AAAA,EACA,UAAU;AAAA,EAE3B,YAAY,gBAAiC;AAC5C,SAAK,SAAS,eAAe,SAAS,eAAe,gBAAgB;AAAA,EACtE;AAAA,EAEA,MAAM,YAAY,iBAAkC,OAAyC;AAC5F,UAAM,IAAI,IAAI,QAAa,CAAC,SAAS,WAAW;AAE/C;AAAA,QACC,MAAM,OAAO,IAAI,MAAM,SAAS,2CAA2C,6DAA6D,CAAC,CAAC;AAAA,QAC1I,KAAK;AAAA,MACN;AACA,WAAK,OAAO,iCAAiC,gBAAgB,KAAK,OAAO,KAAK,OAAO,EAAE,KAAK,SAAS,MAAM;AAAA,IAC5G,CAAC;AAED,WAAO,sBAAsB,GAAG,KAAK;AAAA,EACtC;AACD;AAGO,IAAM,uCAAN,MAA2C;AAAA,EAIjD,YACC,gBACuB,sBACuB,6BAC7C;AAD6C;AAE9C,SAAK,6BAA6B,KAAK,4BAA4B,wCAAwC,qBAAqB,eAAe,6CAA6C,cAAc,CAAC;AAAA,EAC5M;AAAA,EARQ;AAAA,EAUR,UAAgB;AACf,SAAK,2BAA2B,QAAQ;AAAA,EACzC;AACD;AAfkD;AAArC,uCAAN;AAAA,EADN;AAAA,EAOE;AAAA,EACA;AAAA,GAPU;",
  "names": []
}
