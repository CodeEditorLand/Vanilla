{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadTimeline.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { CancellationToken } from \"../../../base/common/cancellation.js\";\nimport { Emitter } from \"../../../base/common/event.js\";\nimport { revive } from \"../../../base/common/marshalling.js\";\nimport type { URI } from \"../../../base/common/uri.js\";\nimport { ILogService } from \"../../../platform/log/common/log.js\";\nimport {\n\tITimelineService,\n\ttype Timeline,\n\ttype TimelineChangeEvent,\n\ttype TimelineOptions,\n\ttype TimelineProviderDescriptor,\n} from \"../../contrib/timeline/common/timeline.js\";\nimport {\n\ttype IExtHostContext,\n\textHostNamedCustomer,\n} from \"../../services/extensions/common/extHostCustomers.js\";\nimport {\n\tExtHostContext,\n\ttype ExtHostTimelineShape,\n\tMainContext,\n\ttype MainThreadTimelineShape,\n} from \"../common/extHost.protocol.js\";\n\n@extHostNamedCustomer(MainContext.MainThreadTimeline)\nexport class MainThreadTimeline implements MainThreadTimelineShape {\n\tprivate readonly _proxy: ExtHostTimelineShape;\n\tprivate readonly _providerEmitters = new Map<\n\t\tstring,\n\t\tEmitter<TimelineChangeEvent>\n\t>();\n\n\tconstructor(\n\t\tcontext: IExtHostContext,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@ITimelineService private readonly _timelineService: ITimelineService,\n\t) {\n\t\tthis._proxy = context.getProxy(ExtHostContext.ExtHostTimeline);\n\t}\n\n\t$registerTimelineProvider(provider: TimelineProviderDescriptor): void {\n\t\tthis.logService.trace(\n\t\t\t`MainThreadTimeline#registerTimelineProvider: id=${provider.id}`,\n\t\t);\n\n\t\tconst proxy = this._proxy;\n\n\t\tconst emitters = this._providerEmitters;\n\t\tlet onDidChange = emitters.get(provider.id);\n\t\tif (onDidChange === undefined) {\n\t\t\tonDidChange = new Emitter<TimelineChangeEvent>();\n\t\t\temitters.set(provider.id, onDidChange);\n\t\t}\n\n\t\tthis._timelineService.registerTimelineProvider({\n\t\t\t...provider,\n\t\t\tonDidChange: onDidChange.event,\n\t\t\tasync provideTimeline(\n\t\t\t\turi: URI,\n\t\t\t\toptions: TimelineOptions,\n\t\t\t\ttoken: CancellationToken,\n\t\t\t) {\n\t\t\t\treturn revive<Timeline>(\n\t\t\t\t\tawait proxy.$getTimeline(provider.id, uri, options, token),\n\t\t\t\t);\n\t\t\t},\n\t\t\tdispose() {\n\t\t\t\temitters.delete(provider.id);\n\t\t\t\tonDidChange?.dispose();\n\t\t\t},\n\t\t});\n\t}\n\n\t$unregisterTimelineProvider(id: string): void {\n\t\tthis.logService.trace(\n\t\t\t`MainThreadTimeline#unregisterTimelineProvider: id=${id}`,\n\t\t);\n\n\t\tthis._timelineService.unregisterTimelineProvider(id);\n\t}\n\n\t$emitTimelineChangeEvent(e: TimelineChangeEvent): void {\n\t\tthis.logService.trace(\n\t\t\t`MainThreadTimeline#emitChangeEvent: id=${e.id}, uri=${e.uri?.toString(true)}`,\n\t\t);\n\n\t\tconst emitter = this._providerEmitters.get(e.id);\n\t\temitter?.fire(e);\n\t}\n\n\tdispose(): void {\n\t\t// noop\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAMA,SAAS,eAAe;AACxB,SAAS,cAAc;AAEvB,SAAS,mBAAmB;AAC5B;AAAA,EACC;AAAA,OAKM;AACP;AAAA,EAEC;AAAA,OACM;AACP;AAAA,EACC;AAAA,EAEA;AAAA,OAEM;AAGA,IAAM,qBAAN,MAA4D;AAAA,EAOlE,YACC,SAC8B,YACK,kBAClC;AAF6B;AACK;AAEnC,SAAK,SAAS,QAAQ,SAAS,eAAe,eAAe;AAAA,EAC9D;AAAA,EAZiB;AAAA,EACA,oBAAoB,oBAAI,IAGvC;AAAA,EAUF,0BAA0B,UAA4C;AACrE,SAAK,WAAW;AAAA,MACf,mDAAmD,SAAS,EAAE;AAAA,IAC/D;AAEA,UAAM,QAAQ,KAAK;AAEnB,UAAM,WAAW,KAAK;AACtB,QAAI,cAAc,SAAS,IAAI,SAAS,EAAE;AAC1C,QAAI,gBAAgB,QAAW;AAC9B,oBAAc,IAAI,QAA6B;AAC/C,eAAS,IAAI,SAAS,IAAI,WAAW;AAAA,IACtC;AAEA,SAAK,iBAAiB,yBAAyB;AAAA,MAC9C,GAAG;AAAA,MACH,aAAa,YAAY;AAAA,MACzB,MAAM,gBACL,KACA,SACA,OACC;AACD,eAAO;AAAA,UACN,MAAM,MAAM,aAAa,SAAS,IAAI,KAAK,SAAS,KAAK;AAAA,QAC1D;AAAA,MACD;AAAA,MACA,UAAU;AACT,iBAAS,OAAO,SAAS,EAAE;AAC3B,qBAAa,QAAQ;AAAA,MACtB;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEA,4BAA4B,IAAkB;AAC7C,SAAK,WAAW;AAAA,MACf,qDAAqD,EAAE;AAAA,IACxD;AAEA,SAAK,iBAAiB,2BAA2B,EAAE;AAAA,EACpD;AAAA,EAEA,yBAAyB,GAA8B;AACtD,SAAK,WAAW;AAAA,MACf,0CAA0C,EAAE,EAAE,SAAS,EAAE,KAAK,SAAS,IAAI,CAAC;AAAA,IAC7E;AAEA,UAAM,UAAU,KAAK,kBAAkB,IAAI,EAAE,EAAE;AAC/C,aAAS,KAAK,CAAC;AAAA,EAChB;AAAA,EAEA,UAAgB;AAAA,EAEhB;AACD;AApEmE;AAAtD,qBAAN;AAAA,EADN,qBAAqB,YAAY,kBAAkB;AAAA,EAUjD;AAAA,EACA;AAAA,GAVU;",
  "names": []
}
