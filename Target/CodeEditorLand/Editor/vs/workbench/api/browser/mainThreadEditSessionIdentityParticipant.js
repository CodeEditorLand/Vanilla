var m=Object.defineProperty;var l=Object.getOwnPropertyDescriptor;var c=(s,t,e,o)=>{for(var i=o>1?void 0:o?l(t,e):t,r=s.length-1,n;r>=0;r--)(n=s[r])&&(i=(o?n(t,e,i):n(i))||i);return o&&i&&m(t,e,i),i},p=(s,t)=>(e,o)=>t(e,o,s);import{raceCancellationError as d}from"../../../base/common/async.js";import{localize as y}from"../../../nls.js";import{IInstantiationService as I}from"../../../platform/instantiation/common/instantiation.js";import{IEditSessionIdentityService as x}from"../../../platform/workspace/common/editSessions.js";import{extHostCustomer as v}from"../../services/extensions/common/extHostCustomers.js";import{ExtHostContext as E}from"../common/extHost.protocol.js";class S{_proxy;timeout=1e4;constructor(t){this._proxy=t.getProxy(E.ExtHostWorkspace)}async participate(t,e){const o=new Promise((i,r)=>{setTimeout(()=>r(new Error(y("timeout.onWillCreateEditSessionIdentity","Aborted onWillCreateEditSessionIdentity-event after 10000ms"))),this.timeout),this._proxy.$onWillCreateEditSessionIdentity(t.uri,e,this.timeout).then(i,r)});return d(o,e)}}let a=class{constructor(t,e,o){this._editSessionIdentityService=o;this._saveParticipantDisposable=this._editSessionIdentityService.addEditSessionIdentityCreateParticipant(e.createInstance(S,t))}_saveParticipantDisposable;dispose(){this._saveParticipantDisposable.dispose()}};a=c([v,p(1,I),p(2,x)],a);export{a as EditSessionIdentityCreateParticipant};
