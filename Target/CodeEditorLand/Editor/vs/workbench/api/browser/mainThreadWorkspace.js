var C=Object.defineProperty;var W=Object.getOwnPropertyDescriptor;var f=(d,e,r,i)=>{for(var t=i>1?void 0:i?W(e,r):e,o=d.length-1,s;o>=0;o--)(s=d[o])&&(t=(i?s(e,r,t):s(t))||t);return i&&t&&C(e,r,t),t},n=(d,e)=>(r,i)=>e(r,i,d);import{coalesce as x,firstOrDefault as T}from"../../../../vs/base/common/arrays.js";import"../../../../vs/base/common/cancellation.js";import{isCancellationError as g}from"../../../../vs/base/common/errors.js";import{DisposableStore as E}from"../../../../vs/base/common/lifecycle.js";import{isNative as b}from"../../../../vs/base/common/platform.js";import{URI as l}from"../../../../vs/base/common/uri.js";import{localize as p}from"../../../../vs/nls.js";import{IEnvironmentService as P}from"../../../../vs/platform/environment/common/environment.js";import{IFileService as D}from"../../../../vs/platform/files/common/files.js";import{IInstantiationService as U}from"../../../../vs/platform/instantiation/common/instantiation.js";import{ILabelService as M}from"../../../../vs/platform/label/common/label.js";import{INotificationService as F}from"../../../../vs/platform/notification/common/notification.js";import{IRequestService as R}from"../../../../vs/platform/request/common/request.js";import{ICanonicalUriService as $}from"../../../../vs/platform/workspace/common/canonicalUri.js";import{IEditSessionIdentityService as q}from"../../../../vs/platform/workspace/common/editSessions.js";import{isUntitledWorkspace as A,IWorkspaceContextService as w,WorkbenchState as B}from"../../../../vs/platform/workspace/common/workspace.js";import{IWorkspaceTrustManagementService as H,IWorkspaceTrustRequestService as O}from"../../../../vs/platform/workspace/common/workspaceTrust.js";import{EditorResourceAccessor as z,SaveReason as Q,SideBySideEditor as k}from"../../../../vs/workbench/common/editor.js";import{IEditorService as G}from"../../../../vs/workbench/services/editor/common/editorService.js";import{extHostNamedCustomer as L}from"../../../../vs/workbench/services/extensions/common/extHostCustomers.js";import{checkGlobFileExists as j}from"../../../../vs/workbench/services/extensions/common/workspaceContains.js";import{QueryBuilder as Y}from"../../../../vs/workbench/services/search/common/queryBuilder.js";import{ISearchService as K}from"../../../../vs/workbench/services/search/common/search.js";import{IWorkspaceEditingService as X}from"../../../../vs/workbench/services/workspaces/common/workspaceEditing.js";import{ExtHostContext as J,MainContext as N}from"../common/extHost.protocol.js";let v=class{constructor(e,r,i,t,o,s,a,u,S,m,I,c,_,V,Z){this._searchService=r;this._contextService=i;this._editSessionIdentityService=t;this._canonicalUriService=o;this._editorService=s;this._workspaceEditingService=a;this._notificationService=u;this._requestService=S;this._instantiationService=m;this._labelService=I;this._environmentService=c;this._workspaceTrustManagementService=V;this._workspaceTrustRequestService=Z;this._proxy=e.getProxy(J.ExtHostWorkspace);const h=this._contextService.getWorkspace();h.configuration&&!b&&!_.hasProvider(h.configuration)?this._proxy.$initializeWorkspace(this.getWorkspaceData(h),this.isWorkspaceTrusted()):this._contextService.getCompleteWorkspace().then(y=>this._proxy.$initializeWorkspace(this.getWorkspaceData(y),this.isWorkspaceTrusted())),this._contextService.onDidChangeWorkspaceFolders(this._onDidChangeWorkspace,this,this._toDispose),this._contextService.onDidChangeWorkbenchState(this._onDidChangeWorkspace,this,this._toDispose),this._workspaceTrustManagementService.onDidChangeTrust(this._onDidGrantWorkspaceTrust,this,this._toDispose)}_toDispose=new E;_activeCancelTokens=Object.create(null);_proxy;_queryBuilder=this._instantiationService.createInstance(Y);dispose(){this._toDispose.dispose();for(const e in this._activeCancelTokens)this._activeCancelTokens[e].cancel()}$updateWorkspaceFolders(e,r,i,t){const o=t.map(s=>({uri:l.revive(s.uri),name:s.name}));return this._notificationService.status(this.getStatusMessage(e,o.length,i),{hideAfter:10*1e3}),this._workspaceEditingService.updateFolders(r,i,o,!0)}getStatusMessage(e,r,i){let t;const o=r>0,s=i>0;return o&&!s?r===1?t=p("folderStatusMessageAddSingleFolder","Extension '{0}' added 1 folder to the workspace",e):t=p("folderStatusMessageAddMultipleFolders","Extension '{0}' added {1} folders to the workspace",e,r):s&&!o?i===1?t=p("folderStatusMessageRemoveSingleFolder","Extension '{0}' removed 1 folder from the workspace",e):t=p("folderStatusMessageRemoveMultipleFolders","Extension '{0}' removed {1} folders from the workspace",e,i):t=p("folderStatusChangeFolder","Extension '{0}' changed folders of the workspace",e),t}_onDidChangeWorkspace(){this._proxy.$acceptWorkspaceData(this.getWorkspaceData(this._contextService.getWorkspace()))}getWorkspaceData(e){return this._contextService.getWorkbenchState()===B.EMPTY?null:{configuration:e.configuration||void 0,isUntitled:e.configuration?A(e.configuration,this._environmentService):!1,folders:e.folders,id:e.id,name:this._labelService.getWorkspaceLabel(e),transient:e.transient}}$startFileSearch(e,r,i){const t=l.revive(e),o=this._contextService.getWorkspace(),s=this._queryBuilder.file(t?[t]:o.folders,r);return this._searchService.fileSearch(s,i).then(a=>a.results.map(u=>u.resource),a=>g(a)?null:Promise.reject(a))}$startTextSearch(e,r,i,t,o){const s=l.revive(r),a=this._contextService.getWorkspace(),u=s?[s]:a.folders.map(c=>c.uri),S=this._queryBuilder.text(e,u,i);S._reason="startTextSearch";const m=c=>{c.results&&this._proxy.$handleTextSearchResult(c,t)};return this._searchService.textSearch(S,o,m).then(c=>({limitHit:c.limitHit}),c=>g(c)?null:Promise.reject(c))}$checkExists(e,r,i){return this._instantiationService.invokeFunction(t=>j(t,e,r,i))}async $save(e,r){const i=l.revive(e),t=[...this._editorService.findEditors(i,{supportSideBySide:k.PRIMARY})],o=await this._editorService.save(t,{reason:Q.EXPLICIT,saveAs:r.saveAs,force:!r.saveAs});return T(this._saveResultToUris(o))}_saveResultToUris(e){return e.success?x(e.editors.map(r=>z.getCanonicalUri(r,{supportSideBySide:k.PRIMARY}))):[]}$saveAll(e){return this._editorService.saveAll({includeUntitled:e}).then(r=>r.success)}$resolveProxy(e){return this._requestService.resolveProxy(e)}$lookupAuthorization(e){return this._requestService.lookupAuthorization(e)}$lookupKerberosAuthorization(e){return this._requestService.lookupKerberosAuthorization(e)}$loadCertificates(){return this._requestService.loadCertificates()}$requestWorkspaceTrust(e){return this._workspaceTrustRequestService.requestWorkspaceTrust(e)}isWorkspaceTrusted(){return this._workspaceTrustManagementService.isWorkspaceTrusted()}_onDidGrantWorkspaceTrust(){this._proxy.$onDidGrantWorkspaceTrust()}registeredEditSessionProviders=new Map;$registerEditSessionIdentityProvider(e,r){const i=this._editSessionIdentityService.registerEditSessionIdentityProvider({scheme:r,getEditSessionIdentifier:async(t,o)=>this._proxy.$getEditSessionIdentifier(t.uri,o),provideEditSessionIdentityMatch:async(t,o,s,a)=>this._proxy.$provideEditSessionIdentityMatch(t.uri,o,s,a)});this.registeredEditSessionProviders.set(e,i),this._toDispose.add(i)}$unregisterEditSessionIdentityProvider(e){this.registeredEditSessionProviders.get(e)?.dispose(),this.registeredEditSessionProviders.delete(e)}registeredCanonicalUriProviders=new Map;$registerCanonicalUriProvider(e,r){const i=this._canonicalUriService.registerCanonicalUriProvider({scheme:r,provideCanonicalUri:async(t,o,s)=>{const a=await this._proxy.$provideCanonicalUri(t,o,s);return a&&l.revive(a)}});this.registeredCanonicalUriProviders.set(e,i),this._toDispose.add(i)}$unregisterCanonicalUriProvider(e){this.registeredCanonicalUriProviders.get(e)?.dispose(),this.registeredCanonicalUriProviders.delete(e)}};v=f([L(N.MainThreadWorkspace),n(1,K),n(2,w),n(3,q),n(4,$),n(5,G),n(6,X),n(7,F),n(8,R),n(9,U),n(10,M),n(11,P),n(12,D),n(13,H),n(14,O)],v);export{v as MainThreadWorkspace};
