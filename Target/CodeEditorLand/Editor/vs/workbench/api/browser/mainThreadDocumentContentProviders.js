var m=Object.defineProperty;var l=Object.getOwnPropertyDescriptor;var c=(s,t,n,e)=>{for(var r=e>1?void 0:e?l(t,n):t,o=s.length-1,i;o>=0;o--)(i=s[o])&&(r=(e?i(t,n,r):i(r))||r);return e&&r&&m(t,n,r),r},d=(s,t)=>(n,e)=>t(n,e,s);import{CancellationTokenSource as v}from"../../../base/common/cancellation.js";import{onUnexpectedError as g}from"../../../base/common/errors.js";import{DisposableMap as u,dispose as x}from"../../../base/common/lifecycle.js";import{URI as S}from"../../../base/common/uri.js";import{EditOperation as h}from"../../../editor/common/core/editOperation.js";import{Range as C}from"../../../editor/common/core/range.js";import{ILanguageService as y}from"../../../editor/common/languages/language.js";import{IEditorWorkerService as _}from"../../../editor/common/services/editorWorker.js";import{IModelService as f}from"../../../editor/common/services/model.js";import{ITextModelService as M}from"../../../editor/common/services/resolverService.js";import{extHostNamedCustomer as I}from"../../services/extensions/common/extHostCustomers.js";import{ExtHostContext as P,MainContext as T}from"../common/extHost.protocol.js";let a=class{constructor(t,n,e,r,o){this._textModelResolverService=n;this._languageService=e;this._modelService=r;this._editorWorkerService=o;this._proxy=t.getProxy(P.ExtHostDocumentContentProviders)}_resourceContentProvider=new u;_pendingUpdate=new Map;_proxy;dispose(){this._resourceContentProvider.dispose(),x(this._pendingUpdate.values())}$registerTextContentProvider(t,n){const e=this._textModelResolverService.registerTextModelContentProvider(n,{provideTextContent:r=>this._proxy.$provideTextDocumentContent(t,r).then(o=>{if(typeof o=="string"){const i=o.substr(0,1+o.search(/\r?\n/)),p=this._languageService.createByFilepathOrFirstLine(r,i);return this._modelService.createModel(o,p,r)}return null})});this._resourceContentProvider.set(t,e)}$unregisterTextContentProvider(t){this._resourceContentProvider.deleteAndDispose(t)}async $onVirtualDocumentChange(t,n){const e=this._modelService.getModel(S.revive(t));if(!e)return;this._pendingUpdate.get(e.id)?.cancel();const o=new v;this._pendingUpdate.set(e.id,o);try{const i=await this._editorWorkerService.computeMoreMinimalEdits(e.uri,[{text:n,range:e.getFullModelRange()}]);if(this._pendingUpdate.delete(e.id),o.token.isCancellationRequested)return;i&&i.length>0&&e.applyEdits(i.map(p=>h.replace(C.lift(p.range),p.text)))}catch(i){g(i)}}};a=c([I(T.MainThreadDocumentContentProviders),d(1,M),d(2,y),d(3,f),d(4,_)],a);export{a as MainThreadDocumentContentProviders};
