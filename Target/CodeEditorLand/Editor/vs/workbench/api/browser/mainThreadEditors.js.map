{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadEditors.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { illegalArgument } from \"../../../base/common/errors.js\";\nimport {\n\tDisposableStore,\n\ttype IDisposable,\n\tdispose,\n} from \"../../../base/common/lifecycle.js\";\nimport { equals as objectEquals } from \"../../../base/common/objects.js\";\nimport { URI, type UriComponents } from \"../../../base/common/uri.js\";\nimport {\n\ttype ICodeEditor,\n\tgetCodeEditor,\n} from \"../../../editor/browser/editorBrowser.js\";\nimport { ICodeEditorService } from \"../../../editor/browser/services/codeEditorService.js\";\nimport type { ISingleEditOperation } from \"../../../editor/common/core/editOperation.js\";\nimport type { IRange } from \"../../../editor/common/core/range.js\";\nimport type { ISelection } from \"../../../editor/common/core/selection.js\";\nimport type { IChange } from \"../../../editor/common/diff/legacyLinesDiffComputer.js\";\nimport type {\n\tIDecorationOptions,\n\tIDecorationRenderOptions,\n} from \"../../../editor/common/editorCommon.js\";\nimport { CommandsRegistry } from \"../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../platform/configuration/common/configuration.js\";\nimport {\n\tEditorActivation,\n\tEditorResolution,\n\ttype IResourceEditorInput,\n\ttype ITextEditorOptions,\n} from \"../../../platform/editor/common/editor.js\";\nimport { IEnvironmentService } from \"../../../platform/environment/common/environment.js\";\nimport type { ExtensionIdentifier } from \"../../../platform/extensions/common/extensions.js\";\nimport type { ServicesAccessor } from \"../../../platform/instantiation/common/instantiation.js\";\nimport type { IEditorControl } from \"../../common/editor.js\";\nimport type { DirtyDiffContribution } from \"../../contrib/scm/browser/dirtydiffDecorator.js\";\nimport {\n\ttype EditorGroupColumn,\n\tcolumnToEditorGroup,\n\teditorGroupToColumn,\n} from \"../../services/editor/common/editorGroupColumn.js\";\nimport { IEditorGroupsService } from \"../../services/editor/common/editorGroupsService.js\";\nimport { IEditorService } from \"../../services/editor/common/editorService.js\";\nimport type { IExtHostContext } from \"../../services/extensions/common/extHostCustomers.js\";\nimport { IWorkingCopyService } from \"../../services/workingCopy/common/workingCopyService.js\";\nimport {\n\tExtHostContext,\n\ttype ExtHostEditorsShape,\n\ttype IApplyEditsOptions,\n\ttype ITextDocumentShowOptions,\n\ttype ITextEditorConfigurationUpdate,\n\ttype ITextEditorPositionData,\n\ttype IUndoStopOptions,\n\ttype MainThreadTextEditorsShape,\n\ttype TextEditorRevealType,\n} from \"../common/extHost.protocol.js\";\nimport type { MainThreadTextEditor } from \"./mainThreadEditor.js\";\n\nexport interface IMainThreadEditorLocator {\n\tgetEditor(id: string): MainThreadTextEditor | undefined;\n\tfindTextEditorIdFor(editorControl: IEditorControl): string | undefined;\n\tgetIdOfCodeEditor(codeEditor: ICodeEditor): string | undefined;\n}\n\nexport class MainThreadTextEditors implements MainThreadTextEditorsShape {\n\tprivate static INSTANCE_COUNT = 0;\n\n\tprivate readonly _instanceId: string;\n\tprivate readonly _proxy: ExtHostEditorsShape;\n\tprivate readonly _toDispose = new DisposableStore();\n\tprivate _textEditorsListenersMap: { [editorId: string]: IDisposable[] };\n\tprivate _editorPositionData: ITextEditorPositionData | null;\n\tprivate _registeredDecorationTypes: { [decorationType: string]: boolean };\n\n\tconstructor(\n\t\tprivate readonly _editorLocator: IMainThreadEditorLocator,\n\t\textHostContext: IExtHostContext,\n\t\t@ICodeEditorService\n\t\tprivate readonly _codeEditorService: ICodeEditorService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IEditorGroupsService\n\t\tprivate readonly _editorGroupService: IEditorGroupsService,\n\t\t@IConfigurationService\n\t\tprivate readonly _configurationService: IConfigurationService,\n\t) {\n\t\tthis._instanceId = String(++MainThreadTextEditors.INSTANCE_COUNT);\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostEditors);\n\n\t\tthis._textEditorsListenersMap = Object.create(null);\n\t\tthis._editorPositionData = null;\n\n\t\tthis._toDispose.add(\n\t\t\tthis._editorService.onDidVisibleEditorsChange(() =>\n\t\t\t\tthis._updateActiveAndVisibleTextEditors(),\n\t\t\t),\n\t\t);\n\t\tthis._toDispose.add(\n\t\t\tthis._editorGroupService.onDidRemoveGroup(() =>\n\t\t\t\tthis._updateActiveAndVisibleTextEditors(),\n\t\t\t),\n\t\t);\n\t\tthis._toDispose.add(\n\t\t\tthis._editorGroupService.onDidMoveGroup(() =>\n\t\t\t\tthis._updateActiveAndVisibleTextEditors(),\n\t\t\t),\n\t\t);\n\n\t\tthis._registeredDecorationTypes = Object.create(null);\n\t}\n\n\tdispose(): void {\n\t\tObject.keys(this._textEditorsListenersMap).forEach((editorId) => {\n\t\t\tdispose(this._textEditorsListenersMap[editorId]);\n\t\t});\n\t\tthis._textEditorsListenersMap = Object.create(null);\n\t\tthis._toDispose.dispose();\n\t\tfor (const decorationType in this._registeredDecorationTypes) {\n\t\t\tthis._codeEditorService.removeDecorationType(decorationType);\n\t\t}\n\t\tthis._registeredDecorationTypes = Object.create(null);\n\t}\n\n\thandleTextEditorAdded(textEditor: MainThreadTextEditor): void {\n\t\tconst id = textEditor.getId();\n\t\tconst toDispose: IDisposable[] = [];\n\t\ttoDispose.push(\n\t\t\ttextEditor.onPropertiesChanged((data) => {\n\t\t\t\tthis._proxy.$acceptEditorPropertiesChanged(id, data);\n\t\t\t}),\n\t\t);\n\n\t\tthis._textEditorsListenersMap[id] = toDispose;\n\t}\n\n\thandleTextEditorRemoved(id: string): void {\n\t\tdispose(this._textEditorsListenersMap[id]);\n\t\tdelete this._textEditorsListenersMap[id];\n\t}\n\n\tprivate _updateActiveAndVisibleTextEditors(): void {\n\t\t// editor columns\n\t\tconst editorPositionData = this._getTextEditorPositionData();\n\t\tif (!objectEquals(this._editorPositionData, editorPositionData)) {\n\t\t\tthis._editorPositionData = editorPositionData;\n\t\t\tthis._proxy.$acceptEditorPositionData(this._editorPositionData);\n\t\t}\n\t}\n\n\tprivate _getTextEditorPositionData(): ITextEditorPositionData {\n\t\tconst result: ITextEditorPositionData = Object.create(null);\n\t\tfor (const editorPane of this._editorService.visibleEditorPanes) {\n\t\t\tconst id = this._editorLocator.findTextEditorIdFor(editorPane);\n\t\t\tif (id) {\n\t\t\t\tresult[id] = editorGroupToColumn(\n\t\t\t\t\tthis._editorGroupService,\n\t\t\t\t\teditorPane.group,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t// --- from extension host process\n\n\tasync $tryShowTextDocument(\n\t\tresource: UriComponents,\n\t\toptions: ITextDocumentShowOptions,\n\t): Promise<string | undefined> {\n\t\tconst uri = URI.revive(resource);\n\n\t\tconst editorOptions: ITextEditorOptions = {\n\t\t\tpreserveFocus: options.preserveFocus,\n\t\t\tpinned: options.pinned,\n\t\t\tselection: options.selection,\n\t\t\t// preserve pre 1.38 behaviour to not make group active when preserveFocus: true\n\t\t\t// but make sure to restore the editor to fix https://github.com/microsoft/vscode/issues/79633\n\t\t\tactivation: options.preserveFocus\n\t\t\t\t? EditorActivation.RESTORE\n\t\t\t\t: undefined,\n\t\t\toverride: EditorResolution.EXCLUSIVE_ONLY,\n\t\t};\n\n\t\tconst input: IResourceEditorInput = {\n\t\t\tresource: uri,\n\t\t\toptions: editorOptions,\n\t\t};\n\n\t\tconst editor = await this._editorService.openEditor(\n\t\t\tinput,\n\t\t\tcolumnToEditorGroup(\n\t\t\t\tthis._editorGroupService,\n\t\t\t\tthis._configurationService,\n\t\t\t\toptions.position,\n\t\t\t),\n\t\t);\n\t\tif (!editor) {\n\t\t\treturn undefined;\n\t\t}\n\t\t// Composite editors are made up of many editors so we return the active one at the time of opening\n\t\tconst editorControl = editor.getControl();\n\t\tconst codeEditor = getCodeEditor(editorControl);\n\t\treturn codeEditor\n\t\t\t? this._editorLocator.getIdOfCodeEditor(codeEditor)\n\t\t\t: undefined;\n\t}\n\n\tasync $tryShowEditor(\n\t\tid: string,\n\t\tposition?: EditorGroupColumn,\n\t): Promise<void> {\n\t\tconst mainThreadEditor = this._editorLocator.getEditor(id);\n\t\tif (mainThreadEditor) {\n\t\t\tconst model = mainThreadEditor.getModel();\n\t\t\tawait this._editorService.openEditor(\n\t\t\t\t{\n\t\t\t\t\tresource: model.uri,\n\t\t\t\t\toptions: { preserveFocus: false },\n\t\t\t\t},\n\t\t\t\tcolumnToEditorGroup(\n\t\t\t\t\tthis._editorGroupService,\n\t\t\t\t\tthis._configurationService,\n\t\t\t\t\tposition,\n\t\t\t\t),\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t}\n\n\tasync $tryHideEditor(id: string): Promise<void> {\n\t\tconst mainThreadEditor = this._editorLocator.getEditor(id);\n\t\tif (mainThreadEditor) {\n\t\t\tconst editorPanes = this._editorService.visibleEditorPanes;\n\t\t\tfor (const editorPane of editorPanes) {\n\t\t\t\tif (mainThreadEditor.matches(editorPane)) {\n\t\t\t\t\tawait editorPane.group.closeEditor(editorPane.input);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t$trySetSelections(id: string, selections: ISelection[]): Promise<void> {\n\t\tconst editor = this._editorLocator.getEditor(id);\n\t\tif (!editor) {\n\t\t\treturn Promise.reject(illegalArgument(`TextEditor(${id})`));\n\t\t}\n\t\teditor.setSelections(selections);\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\t$trySetDecorations(\n\t\tid: string,\n\t\tkey: string,\n\t\tranges: IDecorationOptions[],\n\t): Promise<void> {\n\t\tkey = `${this._instanceId}-${key}`;\n\t\tconst editor = this._editorLocator.getEditor(id);\n\t\tif (!editor) {\n\t\t\treturn Promise.reject(illegalArgument(`TextEditor(${id})`));\n\t\t}\n\t\teditor.setDecorations(key, ranges);\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\t$trySetDecorationsFast(\n\t\tid: string,\n\t\tkey: string,\n\t\tranges: number[],\n\t): Promise<void> {\n\t\tkey = `${this._instanceId}-${key}`;\n\t\tconst editor = this._editorLocator.getEditor(id);\n\t\tif (!editor) {\n\t\t\treturn Promise.reject(illegalArgument(`TextEditor(${id})`));\n\t\t}\n\t\teditor.setDecorationsFast(key, ranges);\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\t$tryRevealRange(\n\t\tid: string,\n\t\trange: IRange,\n\t\trevealType: TextEditorRevealType,\n\t): Promise<void> {\n\t\tconst editor = this._editorLocator.getEditor(id);\n\t\tif (!editor) {\n\t\t\treturn Promise.reject(illegalArgument(`TextEditor(${id})`));\n\t\t}\n\t\teditor.revealRange(range, revealType);\n\t\treturn Promise.resolve();\n\t}\n\n\t$trySetOptions(\n\t\tid: string,\n\t\toptions: ITextEditorConfigurationUpdate,\n\t): Promise<void> {\n\t\tconst editor = this._editorLocator.getEditor(id);\n\t\tif (!editor) {\n\t\t\treturn Promise.reject(illegalArgument(`TextEditor(${id})`));\n\t\t}\n\t\teditor.setConfiguration(options);\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\t$tryApplyEdits(\n\t\tid: string,\n\t\tmodelVersionId: number,\n\t\tedits: ISingleEditOperation[],\n\t\topts: IApplyEditsOptions,\n\t): Promise<boolean> {\n\t\tconst editor = this._editorLocator.getEditor(id);\n\t\tif (!editor) {\n\t\t\treturn Promise.reject(illegalArgument(`TextEditor(${id})`));\n\t\t}\n\t\treturn Promise.resolve(editor.applyEdits(modelVersionId, edits, opts));\n\t}\n\n\t$tryInsertSnippet(\n\t\tid: string,\n\t\tmodelVersionId: number,\n\t\ttemplate: string,\n\t\tranges: readonly IRange[],\n\t\topts: IUndoStopOptions,\n\t): Promise<boolean> {\n\t\tconst editor = this._editorLocator.getEditor(id);\n\t\tif (!editor) {\n\t\t\treturn Promise.reject(illegalArgument(`TextEditor(${id})`));\n\t\t}\n\t\treturn Promise.resolve(\n\t\t\teditor.insertSnippet(modelVersionId, template, ranges, opts),\n\t\t);\n\t}\n\n\t$registerTextEditorDecorationType(\n\t\textensionId: ExtensionIdentifier,\n\t\tkey: string,\n\t\toptions: IDecorationRenderOptions,\n\t): void {\n\t\tkey = `${this._instanceId}-${key}`;\n\t\tthis._registeredDecorationTypes[key] = true;\n\t\tthis._codeEditorService.registerDecorationType(\n\t\t\t`exthost-api-${extensionId}`,\n\t\t\tkey,\n\t\t\toptions,\n\t\t);\n\t}\n\n\t$removeTextEditorDecorationType(key: string): void {\n\t\tkey = `${this._instanceId}-${key}`;\n\t\tdelete this._registeredDecorationTypes[key];\n\t\tthis._codeEditorService.removeDecorationType(key);\n\t}\n\n\t$getDiffInformation(id: string): Promise<IChange[]> {\n\t\tconst editor = this._editorLocator.getEditor(id);\n\n\t\tif (!editor) {\n\t\t\treturn Promise.reject(new Error(\"No such TextEditor\"));\n\t\t}\n\n\t\tconst codeEditor = editor.getCodeEditor();\n\t\tif (!codeEditor) {\n\t\t\treturn Promise.reject(new Error(\"No such CodeEditor\"));\n\t\t}\n\n\t\tconst codeEditorId = codeEditor.getId();\n\t\tconst diffEditors = this._codeEditorService.listDiffEditors();\n\t\tconst [diffEditor] = diffEditors.filter(\n\t\t\t(d) =>\n\t\t\t\td.getOriginalEditor().getId() === codeEditorId ||\n\t\t\t\td.getModifiedEditor().getId() === codeEditorId,\n\t\t);\n\n\t\tif (diffEditor) {\n\t\t\treturn Promise.resolve(diffEditor.getLineChanges() || []);\n\t\t}\n\n\t\tconst dirtyDiffContribution = codeEditor.getContribution(\n\t\t\t\"editor.contrib.dirtydiff\",\n\t\t);\n\n\t\tif (dirtyDiffContribution) {\n\t\t\treturn Promise.resolve(\n\t\t\t\t(dirtyDiffContribution as DirtyDiffContribution).getChanges(),\n\t\t\t);\n\t\t}\n\n\t\treturn Promise.resolve([]);\n\t}\n}\n\n// --- commands\n\nCommandsRegistry.registerCommand(\n\t\"_workbench.revertAllDirty\",\n\tasync (accessor: ServicesAccessor) => {\n\t\tconst environmentService = accessor.get(IEnvironmentService);\n\t\tif (!environmentService.extensionTestsLocationURI) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Command is only available when running extension tests.\",\n\t\t\t);\n\t\t}\n\n\t\tconst workingCopyService = accessor.get(IWorkingCopyService);\n\t\tfor (const workingCopy of workingCopyService.dirtyWorkingCopies) {\n\t\t\tawait workingCopy.revert({ soft: true });\n\t\t}\n\t},\n);\n"],
  "mappings": "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",
  "names": []
}
