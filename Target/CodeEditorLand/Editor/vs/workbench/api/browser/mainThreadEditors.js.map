{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadEditors.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { illegalArgument } from '../../../base/common/errors.js';\nimport { IDisposable, dispose, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { equals as objectEquals } from '../../../base/common/objects.js';\nimport { URI, UriComponents } from '../../../base/common/uri.js';\nimport { ICodeEditorService } from '../../../editor/browser/services/codeEditorService.js';\nimport { IRange } from '../../../editor/common/core/range.js';\nimport { ISelection } from '../../../editor/common/core/selection.js';\nimport { IDecorationOptions, IDecorationRenderOptions } from '../../../editor/common/editorCommon.js';\nimport { ISingleEditOperation } from '../../../editor/common/core/editOperation.js';\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\nimport { ITextEditorOptions, IResourceEditorInput, EditorActivation, EditorResolution } from '../../../platform/editor/common/editor.js';\nimport { ServicesAccessor } from '../../../platform/instantiation/common/instantiation.js';\nimport { MainThreadTextEditor } from './mainThreadEditor.js';\nimport { ExtHostContext, ExtHostEditorsShape, IApplyEditsOptions, ITextDocumentShowOptions, ITextEditorConfigurationUpdate, ITextEditorPositionData, IUndoStopOptions, MainThreadTextEditorsShape, TextEditorRevealType } from '../common/extHost.protocol.js';\nimport { editorGroupToColumn, columnToEditorGroup, EditorGroupColumn } from '../../services/editor/common/editorGroupColumn.js';\nimport { IEditorService } from '../../services/editor/common/editorService.js';\nimport { IEditorGroupsService } from '../../services/editor/common/editorGroupsService.js';\nimport { IEnvironmentService } from '../../../platform/environment/common/environment.js';\nimport { IWorkingCopyService } from '../../services/workingCopy/common/workingCopyService.js';\nimport { ExtensionIdentifier } from '../../../platform/extensions/common/extensions.js';\nimport { IChange } from '../../../editor/common/diff/legacyLinesDiffComputer.js';\nimport { IExtHostContext } from '../../services/extensions/common/extHostCustomers.js';\nimport { IEditorControl } from '../../common/editor.js';\nimport { getCodeEditor, ICodeEditor } from '../../../editor/browser/editorBrowser.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { DirtyDiffContribution } from '../../contrib/scm/browser/dirtydiffDecorator.js';\n\nexport interface IMainThreadEditorLocator {\n\tgetEditor(id: string): MainThreadTextEditor | undefined;\n\tfindTextEditorIdFor(editorControl: IEditorControl): string | undefined;\n\tgetIdOfCodeEditor(codeEditor: ICodeEditor): string | undefined;\n}\n\nexport class MainThreadTextEditors implements MainThreadTextEditorsShape {\n\n\tprivate static INSTANCE_COUNT: number = 0;\n\n\tprivate readonly _instanceId: string;\n\tprivate readonly _proxy: ExtHostEditorsShape;\n\tprivate readonly _toDispose = new DisposableStore();\n\tprivate _textEditorsListenersMap: { [editorId: string]: IDisposable[] };\n\tprivate _editorPositionData: ITextEditorPositionData | null;\n\tprivate _registeredDecorationTypes: { [decorationType: string]: boolean };\n\n\tconstructor(\n\t\tprivate readonly _editorLocator: IMainThreadEditorLocator,\n\t\textHostContext: IExtHostContext,\n\t\t@ICodeEditorService private readonly _codeEditorService: ICodeEditorService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IEditorGroupsService private readonly _editorGroupService: IEditorGroupsService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService\n\t) {\n\t\tthis._instanceId = String(++MainThreadTextEditors.INSTANCE_COUNT);\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostEditors);\n\n\t\tthis._textEditorsListenersMap = Object.create(null);\n\t\tthis._editorPositionData = null;\n\n\t\tthis._toDispose.add(this._editorService.onDidVisibleEditorsChange(() => this._updateActiveAndVisibleTextEditors()));\n\t\tthis._toDispose.add(this._editorGroupService.onDidRemoveGroup(() => this._updateActiveAndVisibleTextEditors()));\n\t\tthis._toDispose.add(this._editorGroupService.onDidMoveGroup(() => this._updateActiveAndVisibleTextEditors()));\n\n\t\tthis._registeredDecorationTypes = Object.create(null);\n\t}\n\n\tdispose(): void {\n\t\tObject.keys(this._textEditorsListenersMap).forEach((editorId) => {\n\t\t\tdispose(this._textEditorsListenersMap[editorId]);\n\t\t});\n\t\tthis._textEditorsListenersMap = Object.create(null);\n\t\tthis._toDispose.dispose();\n\t\tfor (const decorationType in this._registeredDecorationTypes) {\n\t\t\tthis._codeEditorService.removeDecorationType(decorationType);\n\t\t}\n\t\tthis._registeredDecorationTypes = Object.create(null);\n\t}\n\n\thandleTextEditorAdded(textEditor: MainThreadTextEditor): void {\n\t\tconst id = textEditor.getId();\n\t\tconst toDispose: IDisposable[] = [];\n\t\ttoDispose.push(textEditor.onPropertiesChanged((data) => {\n\t\t\tthis._proxy.$acceptEditorPropertiesChanged(id, data);\n\t\t}));\n\n\t\tthis._textEditorsListenersMap[id] = toDispose;\n\t}\n\n\thandleTextEditorRemoved(id: string): void {\n\t\tdispose(this._textEditorsListenersMap[id]);\n\t\tdelete this._textEditorsListenersMap[id];\n\t}\n\n\tprivate _updateActiveAndVisibleTextEditors(): void {\n\n\t\t// editor columns\n\t\tconst editorPositionData = this._getTextEditorPositionData();\n\t\tif (!objectEquals(this._editorPositionData, editorPositionData)) {\n\t\t\tthis._editorPositionData = editorPositionData;\n\t\t\tthis._proxy.$acceptEditorPositionData(this._editorPositionData);\n\t\t}\n\t}\n\n\tprivate _getTextEditorPositionData(): ITextEditorPositionData {\n\t\tconst result: ITextEditorPositionData = Object.create(null);\n\t\tfor (const editorPane of this._editorService.visibleEditorPanes) {\n\t\t\tconst id = this._editorLocator.findTextEditorIdFor(editorPane);\n\t\t\tif (id) {\n\t\t\t\tresult[id] = editorGroupToColumn(this._editorGroupService, editorPane.group);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t// --- from extension host process\n\n\tasync $tryShowTextDocument(resource: UriComponents, options: ITextDocumentShowOptions): Promise<string | undefined> {\n\t\tconst uri = URI.revive(resource);\n\n\t\tconst editorOptions: ITextEditorOptions = {\n\t\t\tpreserveFocus: options.preserveFocus,\n\t\t\tpinned: options.pinned,\n\t\t\tselection: options.selection,\n\t\t\t// preserve pre 1.38 behaviour to not make group active when preserveFocus: true\n\t\t\t// but make sure to restore the editor to fix https://github.com/microsoft/vscode/issues/79633\n\t\t\tactivation: options.preserveFocus ? EditorActivation.RESTORE : undefined,\n\t\t\toverride: EditorResolution.EXCLUSIVE_ONLY\n\t\t};\n\n\t\tconst input: IResourceEditorInput = {\n\t\t\tresource: uri,\n\t\t\toptions: editorOptions\n\t\t};\n\n\t\tconst editor = await this._editorService.openEditor(input, columnToEditorGroup(this._editorGroupService, this._configurationService, options.position));\n\t\tif (!editor) {\n\t\t\treturn undefined;\n\t\t}\n\t\t// Composite editors are made up of many editors so we return the active one at the time of opening\n\t\tconst editorControl = editor.getControl();\n\t\tconst codeEditor = getCodeEditor(editorControl);\n\t\treturn codeEditor ? this._editorLocator.getIdOfCodeEditor(codeEditor) : undefined;\n\t}\n\n\tasync $tryShowEditor(id: string, position?: EditorGroupColumn): Promise<void> {\n\t\tconst mainThreadEditor = this._editorLocator.getEditor(id);\n\t\tif (mainThreadEditor) {\n\t\t\tconst model = mainThreadEditor.getModel();\n\t\t\tawait this._editorService.openEditor({\n\t\t\t\tresource: model.uri,\n\t\t\t\toptions: { preserveFocus: false }\n\t\t\t}, columnToEditorGroup(this._editorGroupService, this._configurationService, position));\n\t\t\treturn;\n\t\t}\n\t}\n\n\tasync $tryHideEditor(id: string): Promise<void> {\n\t\tconst mainThreadEditor = this._editorLocator.getEditor(id);\n\t\tif (mainThreadEditor) {\n\t\t\tconst editorPanes = this._editorService.visibleEditorPanes;\n\t\t\tfor (const editorPane of editorPanes) {\n\t\t\t\tif (mainThreadEditor.matches(editorPane)) {\n\t\t\t\t\tawait editorPane.group.closeEditor(editorPane.input);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t$trySetSelections(id: string, selections: ISelection[]): Promise<void> {\n\t\tconst editor = this._editorLocator.getEditor(id);\n\t\tif (!editor) {\n\t\t\treturn Promise.reject(illegalArgument(`TextEditor(${id})`));\n\t\t}\n\t\teditor.setSelections(selections);\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\t$trySetDecorations(id: string, key: string, ranges: IDecorationOptions[]): Promise<void> {\n\t\tkey = `${this._instanceId}-${key}`;\n\t\tconst editor = this._editorLocator.getEditor(id);\n\t\tif (!editor) {\n\t\t\treturn Promise.reject(illegalArgument(`TextEditor(${id})`));\n\t\t}\n\t\teditor.setDecorations(key, ranges);\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\t$trySetDecorationsFast(id: string, key: string, ranges: number[]): Promise<void> {\n\t\tkey = `${this._instanceId}-${key}`;\n\t\tconst editor = this._editorLocator.getEditor(id);\n\t\tif (!editor) {\n\t\t\treturn Promise.reject(illegalArgument(`TextEditor(${id})`));\n\t\t}\n\t\teditor.setDecorationsFast(key, ranges);\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\t$tryRevealRange(id: string, range: IRange, revealType: TextEditorRevealType): Promise<void> {\n\t\tconst editor = this._editorLocator.getEditor(id);\n\t\tif (!editor) {\n\t\t\treturn Promise.reject(illegalArgument(`TextEditor(${id})`));\n\t\t}\n\t\teditor.revealRange(range, revealType);\n\t\treturn Promise.resolve();\n\t}\n\n\t$trySetOptions(id: string, options: ITextEditorConfigurationUpdate): Promise<void> {\n\t\tconst editor = this._editorLocator.getEditor(id);\n\t\tif (!editor) {\n\t\t\treturn Promise.reject(illegalArgument(`TextEditor(${id})`));\n\t\t}\n\t\teditor.setConfiguration(options);\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\t$tryApplyEdits(id: string, modelVersionId: number, edits: ISingleEditOperation[], opts: IApplyEditsOptions): Promise<boolean> {\n\t\tconst editor = this._editorLocator.getEditor(id);\n\t\tif (!editor) {\n\t\t\treturn Promise.reject(illegalArgument(`TextEditor(${id})`));\n\t\t}\n\t\treturn Promise.resolve(editor.applyEdits(modelVersionId, edits, opts));\n\t}\n\n\t$tryInsertSnippet(id: string, modelVersionId: number, template: string, ranges: readonly IRange[], opts: IUndoStopOptions): Promise<boolean> {\n\t\tconst editor = this._editorLocator.getEditor(id);\n\t\tif (!editor) {\n\t\t\treturn Promise.reject(illegalArgument(`TextEditor(${id})`));\n\t\t}\n\t\treturn Promise.resolve(editor.insertSnippet(modelVersionId, template, ranges, opts));\n\t}\n\n\t$registerTextEditorDecorationType(extensionId: ExtensionIdentifier, key: string, options: IDecorationRenderOptions): void {\n\t\tkey = `${this._instanceId}-${key}`;\n\t\tthis._registeredDecorationTypes[key] = true;\n\t\tthis._codeEditorService.registerDecorationType(`exthost-api-${extensionId}`, key, options);\n\t}\n\n\t$removeTextEditorDecorationType(key: string): void {\n\t\tkey = `${this._instanceId}-${key}`;\n\t\tdelete this._registeredDecorationTypes[key];\n\t\tthis._codeEditorService.removeDecorationType(key);\n\t}\n\n\t$getDiffInformation(id: string): Promise<IChange[]> {\n\t\tconst editor = this._editorLocator.getEditor(id);\n\n\t\tif (!editor) {\n\t\t\treturn Promise.reject(new Error('No such TextEditor'));\n\t\t}\n\n\t\tconst codeEditor = editor.getCodeEditor();\n\t\tif (!codeEditor) {\n\t\t\treturn Promise.reject(new Error('No such CodeEditor'));\n\t\t}\n\n\t\tconst codeEditorId = codeEditor.getId();\n\t\tconst diffEditors = this._codeEditorService.listDiffEditors();\n\t\tconst [diffEditor] = diffEditors.filter(d => d.getOriginalEditor().getId() === codeEditorId || d.getModifiedEditor().getId() === codeEditorId);\n\n\t\tif (diffEditor) {\n\t\t\treturn Promise.resolve(diffEditor.getLineChanges() || []);\n\t\t}\n\n\t\tconst dirtyDiffContribution = codeEditor.getContribution('editor.contrib.dirtydiff');\n\n\t\tif (dirtyDiffContribution) {\n\t\t\treturn Promise.resolve((dirtyDiffContribution as DirtyDiffContribution).getChanges());\n\t\t}\n\n\t\treturn Promise.resolve([]);\n\t}\n}\n\n// --- commands\n\nCommandsRegistry.registerCommand('_workbench.revertAllDirty', async function (accessor: ServicesAccessor) {\n\tconst environmentService = accessor.get(IEnvironmentService);\n\tif (!environmentService.extensionTestsLocationURI) {\n\t\tthrow new Error('Command is only available when running extension tests.');\n\t}\n\n\tconst workingCopyService = accessor.get(IWorkingCopyService);\n\tfor (const workingCopy of workingCopyService.dirtyWorkingCopies) {\n\t\tawait workingCopy.revert({ soft: true });\n\t}\n});\n"],
  "mappings": "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",
  "names": []
}
