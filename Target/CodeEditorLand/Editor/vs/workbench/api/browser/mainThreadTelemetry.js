var l=Object.defineProperty;var S=Object.getOwnPropertyDescriptor;var u=(i,t,e)=>t in i?l(i,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[t]=e;var a=(i,t,e,r)=>{for(var o=r>1?void 0:r?S(t,e):t,s=i.length-1,p;s>=0;s--)(p=i[s])&&(o=(r?p(t,e,o):p(o))||o);return r&&o&&l(t,e,o),o},m=(i,t)=>(e,r)=>t(e,r,i);var y=(i,t,e)=>u(i,typeof t!="symbol"?t+"":t,e);import{Disposable as f}from"../../../base/common/lifecycle.js";import{IConfigurationService as _}from"../../../platform/configuration/common/configuration.js";import{IEnvironmentService as d}from"../../../platform/environment/common/environment.js";import{IProductService as h}from"../../../platform/product/common/productService.js";import{ITelemetryService as g,TELEMETRY_OLD_SETTING_ID as E,TELEMETRY_SETTING_ID as x,TelemetryLevel as T}from"../../../platform/telemetry/common/telemetry.js";import{supportsTelemetry as v}from"../../../platform/telemetry/common/telemetryUtils.js";import{extHostNamedCustomer as C}from"../../services/extensions/common/extHostCustomers.js";import{ExtHostContext as I,MainContext as L}from"../common/extHost.protocol.js";let n=class extends f{constructor(e,r,o,s,p){super();this._telemetryService=r;this._configurationService=o;this._environmentService=s;this._productService=p;this._proxy=e.getProxy(I.ExtHostTelemetry),v(this._productService,this._environmentService)&&this._register(this._configurationService.onDidChangeConfiguration(c=>{(c.affectsConfiguration(x)||c.affectsConfiguration(E))&&this._proxy.$onDidChangeTelemetryLevel(this.telemetryLevel)})),this._proxy.$initializeTelemetryLevel(this.telemetryLevel,v(this._productService,this._environmentService),this._productService.enabledTelemetryLevels)}_proxy;get telemetryLevel(){return v(this._productService,this._environmentService)?this._telemetryService.telemetryLevel:T.NONE}$publicLog(e,r=Object.create(null)){r[n._name]=!0,this._telemetryService.publicLog(e,r)}$publicLog2(e,r){this.$publicLog(e,r)}};y(n,"_name","pluginHostTelemetry"),n=a([C(L.MainThreadTelemetry),m(1,g),m(2,_),m(3,d),m(4,h)],n);export{n as MainThreadTelemetry};
