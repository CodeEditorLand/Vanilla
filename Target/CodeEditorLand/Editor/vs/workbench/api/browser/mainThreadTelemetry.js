var p=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var a=(m,i,t,e)=>{for(var r=e>1?void 0:e?y(i,t):i,s=m.length-1,v;s>=0;s--)(v=m[s])&&(r=(e?v(i,t,r):v(r))||r);return e&&r&&p(i,t,r),r},n=(m,i)=>(t,e)=>i(t,e,m);import{Disposable as S}from"../../../base/common/lifecycle.js";import{IConfigurationService as u}from"../../../platform/configuration/common/configuration.js";import{IEnvironmentService as f}from"../../../platform/environment/common/environment.js";import{IProductService as _}from"../../../platform/product/common/productService.js";import{ITelemetryService as d,TelemetryLevel as h,TELEMETRY_OLD_SETTING_ID as E,TELEMETRY_SETTING_ID as T}from"../../../platform/telemetry/common/telemetry.js";import{supportsTelemetry as c}from"../../../platform/telemetry/common/telemetryUtils.js";import{extHostNamedCustomer as x}from"../../services/extensions/common/extHostCustomers.js";import{ExtHostContext as g,MainContext as C}from"../common/extHost.protocol.js";let o=class extends S{constructor(t,e,r,s,v){super();this._telemetryService=e;this._configurationService=r;this._environmentService=s;this._productService=v;this._proxy=t.getProxy(g.ExtHostTelemetry),c(this._productService,this._environmentService)&&this._register(this._configurationService.onDidChangeConfiguration(l=>{(l.affectsConfiguration(T)||l.affectsConfiguration(E))&&this._proxy.$onDidChangeTelemetryLevel(this.telemetryLevel)})),this._proxy.$initializeTelemetryLevel(this.telemetryLevel,c(this._productService,this._environmentService),this._productService.enabledTelemetryLevels)}_proxy;static _name="pluginHostTelemetry";get telemetryLevel(){return c(this._productService,this._environmentService)?this._telemetryService.telemetryLevel:h.NONE}$publicLog(t,e=Object.create(null)){e[o._name]=!0,this._telemetryService.publicLog(t,e)}$publicLog2(t,e){this.$publicLog(t,e)}};o=a([x(C.MainThreadTelemetry),n(1,d),n(2,u),n(3,f),n(4,_)],o);export{o as MainThreadTelemetry};
