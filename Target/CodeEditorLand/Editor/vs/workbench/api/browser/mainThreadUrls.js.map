{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadUrls.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ExtHostContext, MainContext, MainThreadUrlsShape, ExtHostUrlsShape } from '../common/extHost.protocol.js';\nimport { extHostNamedCustomer, IExtHostContext } from '../../services/extensions/common/extHostCustomers.js';\nimport { IURLService, IOpenURLOptions } from '../../../platform/url/common/url.js';\nimport { URI, UriComponents } from '../../../base/common/uri.js';\nimport { IDisposable } from '../../../base/common/lifecycle.js';\nimport { IExtensionContributedURLHandler, IExtensionUrlHandler } from '../../services/extensions/browser/extensionUrlHandler.js';\nimport { ExtensionIdentifier } from '../../../platform/extensions/common/extensions.js';\n\nclass ExtensionUrlHandler implements IExtensionContributedURLHandler {\n\n\tconstructor(\n\t\tprivate readonly proxy: ExtHostUrlsShape,\n\t\tprivate readonly handle: number,\n\t\treadonly extensionId: ExtensionIdentifier,\n\t\treadonly extensionDisplayName: string\n\t) { }\n\n\thandleURL(uri: URI, options?: IOpenURLOptions): Promise<boolean> {\n\t\tif (!ExtensionIdentifier.equals(this.extensionId, uri.authority)) {\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\treturn Promise.resolve(this.proxy.$handleExternalUri(this.handle, uri)).then(() => true);\n\t}\n}\n\n@extHostNamedCustomer(MainContext.MainThreadUrls)\nexport class MainThreadUrls implements MainThreadUrlsShape {\n\n\tprivate readonly proxy: ExtHostUrlsShape;\n\tprivate handlers = new Map<number, { extensionId: ExtensionIdentifier; disposable: IDisposable }>();\n\n\tconstructor(\n\t\tcontext: IExtHostContext,\n\t\t@IURLService private readonly urlService: IURLService,\n\t\t@IExtensionUrlHandler private readonly extensionUrlHandler: IExtensionUrlHandler\n\t) {\n\t\tthis.proxy = context.getProxy(ExtHostContext.ExtHostUrls);\n\t}\n\n\t$registerUriHandler(handle: number, extensionId: ExtensionIdentifier, extensionDisplayName: string): Promise<void> {\n\t\tconst handler = new ExtensionUrlHandler(this.proxy, handle, extensionId, extensionDisplayName);\n\t\tconst disposable = this.urlService.registerHandler(handler);\n\n\t\tthis.handlers.set(handle, { extensionId, disposable });\n\t\tthis.extensionUrlHandler.registerExtensionHandler(extensionId, handler);\n\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\t$unregisterUriHandler(handle: number): Promise<void> {\n\t\tconst tuple = this.handlers.get(handle);\n\n\t\tif (!tuple) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tconst { extensionId, disposable } = tuple;\n\n\t\tthis.extensionUrlHandler.unregisterExtensionHandler(extensionId);\n\t\tthis.handlers.delete(handle);\n\t\tdisposable.dispose();\n\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tasync $createAppUri(uri: UriComponents): Promise<URI> {\n\t\treturn this.urlService.create(uri);\n\t}\n\n\tdispose(): void {\n\t\tthis.handlers.forEach(({ disposable }) => disposable.dispose());\n\t\tthis.handlers.clear();\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,gBAAgB,aAAa,qBAAqB,wBAAwB;AACnF,SAAS,sBAAsB,uBAAuB;AACtD,SAAS,aAAa,uBAAuB;AAC7C,SAAS,KAAK,qBAAqB;AACnC,SAAS,mBAAmB;AAC5B,SAAS,iCAAiC,4BAA4B;AACtE,SAAS,2BAA2B;AAEpC,MAAM,oBAA+D;AAAA,EAEpE,YACkB,OACA,QACR,aACA,sBACR;AAJgB;AACA;AACR;AACA;AAAA,EACN;AAAA,EApBL,OAaqE;AAAA;AAAA;AAAA,EASpE,UAAU,KAAU,SAA6C;AAChE,QAAI,CAAC,oBAAoB,OAAO,KAAK,aAAa,IAAI,SAAS,GAAG;AACjE,aAAO,QAAQ,QAAQ,KAAK;AAAA,IAC7B;AAEA,WAAO,QAAQ,QAAQ,KAAK,MAAM,mBAAmB,KAAK,QAAQ,GAAG,CAAC,EAAE,KAAK,MAAM,IAAI;AAAA,EACxF;AACD;AAGO,IAAM,iBAAN,MAAoD;AAAA,EAK1D,YACC,SAC8B,YACS,qBACtC;AAF6B;AACS;AAEvC,SAAK,QAAQ,QAAQ,SAAS,eAAe,WAAW;AAAA,EACzD;AAAA,EATiB;AAAA,EACT,WAAW,oBAAI,IAA2E;AAAA,EAUlG,oBAAoB,QAAgB,aAAkC,sBAA6C;AAClH,UAAM,UAAU,IAAI,oBAAoB,KAAK,OAAO,QAAQ,aAAa,oBAAoB;AAC7F,UAAM,aAAa,KAAK,WAAW,gBAAgB,OAAO;AAE1D,SAAK,SAAS,IAAI,QAAQ,EAAE,aAAa,WAAW,CAAC;AACrD,SAAK,oBAAoB,yBAAyB,aAAa,OAAO;AAEtE,WAAO,QAAQ,QAAQ,MAAS;AAAA,EACjC;AAAA,EAEA,sBAAsB,QAA+B;AACpD,UAAM,QAAQ,KAAK,SAAS,IAAI,MAAM;AAEtC,QAAI,CAAC,OAAO;AACX,aAAO,QAAQ,QAAQ,MAAS;AAAA,IACjC;AAEA,UAAM,EAAE,aAAa,WAAW,IAAI;AAEpC,SAAK,oBAAoB,2BAA2B,WAAW;AAC/D,SAAK,SAAS,OAAO,MAAM;AAC3B,eAAW,QAAQ;AAEnB,WAAO,QAAQ,QAAQ,MAAS;AAAA,EACjC;AAAA,EAEA,MAAM,cAAc,KAAkC;AACrD,WAAO,KAAK,WAAW,OAAO,GAAG;AAAA,EAClC;AAAA,EAEA,UAAgB;AACf,SAAK,SAAS,QAAQ,CAAC,EAAE,WAAW,MAAM,WAAW,QAAQ,CAAC;AAC9D,SAAK,SAAS,MAAM;AAAA,EACrB;AACD;AA/C2D;AAA9C,iBAAN;AAAA,EADN,qBAAqB,YAAY,cAAc;AAAA,EAQ7C;AAAA,EACA;AAAA,GARU;",
  "names": []
}
