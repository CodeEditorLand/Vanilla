{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadOutputService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Registry } from '../../../platform/registry/common/platform.js';\nimport { Extensions, IOutputChannelRegistry, IOutputService, IOutputChannel, OUTPUT_VIEW_ID, OutputChannelUpdateMode } from '../../services/output/common/output.js';\nimport { MainThreadOutputServiceShape, MainContext, ExtHostOutputServiceShape, ExtHostContext } from '../common/extHost.protocol.js';\nimport { extHostNamedCustomer, IExtHostContext } from '../../services/extensions/common/extHostCustomers.js';\nimport { UriComponents, URI } from '../../../base/common/uri.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { Event } from '../../../base/common/event.js';\nimport { IViewsService } from '../../services/views/common/viewsService.js';\nimport { isNumber } from '../../../base/common/types.js';\n\n@extHostNamedCustomer(MainContext.MainThreadOutputService)\nexport class MainThreadOutputService extends Disposable implements MainThreadOutputServiceShape {\n\n\tprivate static _extensionIdPool = new Map<string, number>();\n\n\tprivate readonly _proxy: ExtHostOutputServiceShape;\n\tprivate readonly _outputService: IOutputService;\n\tprivate readonly _viewsService: IViewsService;\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@IOutputService outputService: IOutputService,\n\t\t@IViewsService viewsService: IViewsService,\n\t) {\n\t\tsuper();\n\t\tthis._outputService = outputService;\n\t\tthis._viewsService = viewsService;\n\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostOutputService);\n\n\t\tconst setVisibleChannel = () => {\n\t\t\tconst visibleChannel = this._viewsService.isViewVisible(OUTPUT_VIEW_ID) ? this._outputService.getActiveChannel() : undefined;\n\t\t\tthis._proxy.$setVisibleChannel(visibleChannel ? visibleChannel.id : null);\n\t\t};\n\t\tthis._register(Event.any<any>(this._outputService.onActiveOutputChannel, Event.filter(this._viewsService.onDidChangeViewVisibility, ({ id }) => id === OUTPUT_VIEW_ID))(() => setVisibleChannel()));\n\t\tsetVisibleChannel();\n\t}\n\n\tpublic async $register(label: string, file: UriComponents, languageId: string | undefined, extensionId: string): Promise<string> {\n\t\tconst idCounter = (MainThreadOutputService._extensionIdPool.get(extensionId) || 0) + 1;\n\t\tMainThreadOutputService._extensionIdPool.set(extensionId, idCounter);\n\t\tconst id = `extension-output-${extensionId}-#${idCounter}-${label}`;\n\t\tconst resource = URI.revive(file);\n\n\t\tRegistry.as<IOutputChannelRegistry>(Extensions.OutputChannels).registerChannel({ id, label, file: resource, log: false, languageId, extensionId });\n\t\tthis._register(toDisposable(() => this.$dispose(id)));\n\t\treturn id;\n\t}\n\n\tpublic async $update(channelId: string, mode: OutputChannelUpdateMode, till?: number): Promise<void> {\n\t\tconst channel = this._getChannel(channelId);\n\t\tif (channel) {\n\t\t\tif (mode === OutputChannelUpdateMode.Append) {\n\t\t\t\tchannel.update(mode);\n\t\t\t} else if (isNumber(till)) {\n\t\t\t\tchannel.update(mode, till);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async $reveal(channelId: string, preserveFocus: boolean): Promise<void> {\n\t\tconst channel = this._getChannel(channelId);\n\t\tif (channel) {\n\t\t\tthis._outputService.showChannel(channel.id, preserveFocus);\n\t\t}\n\t}\n\n\tpublic async $close(channelId: string): Promise<void> {\n\t\tif (this._viewsService.isViewVisible(OUTPUT_VIEW_ID)) {\n\t\t\tconst activeChannel = this._outputService.getActiveChannel();\n\t\t\tif (activeChannel && channelId === activeChannel.id) {\n\t\t\t\tthis._viewsService.closeView(OUTPUT_VIEW_ID);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async $dispose(channelId: string): Promise<void> {\n\t\tconst channel = this._getChannel(channelId);\n\t\tchannel?.dispose();\n\t}\n\n\tprivate _getChannel(channelId: string): IOutputChannel | undefined {\n\t\treturn this._outputService.getChannel(channelId);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;;;AAKA,SAAS,gBAAgB;AACzB,SAAS,YAAY,wBAAwB,gBAAgB,gBAAgB,gBAAgB,+BAA+B;AAC5H,SAAS,8BAA8B,aAAa,2BAA2B,sBAAsB;AACrG,SAAS,sBAAsB,uBAAuB;AACtD,SAAS,eAAe,WAAW;AACnC,SAAS,YAAY,oBAAoB;AACzC,SAAS,aAAa;AACtB,SAAS,qBAAqB;AAC9B,SAAS,gBAAgB;AAGlB,IAAM,0BAAN,cAAsC,WAAmD;AAAA,EAI9E;AAAA,EACA;AAAA,EACA;AAAA,EAEjB,YACC,gBACgB,eACD,cACd;AACD,UAAM;AACN,SAAK,iBAAiB;AACtB,SAAK,gBAAgB;AAErB,SAAK,SAAS,eAAe,SAAS,eAAe,oBAAoB;AAEzE,UAAM,oBAAoB,6BAAM;AAC/B,YAAM,iBAAiB,KAAK,cAAc,cAAc,cAAc,IAAI,KAAK,eAAe,iBAAiB,IAAI;AACnH,WAAK,OAAO,mBAAmB,iBAAiB,eAAe,KAAK,IAAI;AAAA,IACzE,GAH0B;AAI1B,SAAK,UAAU,MAAM,IAAS,KAAK,eAAe,uBAAuB,MAAM,OAAO,KAAK,cAAc,2BAA2B,CAAC,EAAE,GAAG,MAAM,OAAO,cAAc,CAAC,EAAE,MAAM,kBAAkB,CAAC,CAAC;AAClM,sBAAkB;AAAA,EACnB;AAAA,EAEA,MAAa,UAAU,OAAe,MAAqB,YAAgC,aAAsC;AAChI,UAAM,aAAa,wBAAwB,iBAAiB,IAAI,WAAW,KAAK,KAAK;AACrF,4BAAwB,iBAAiB,IAAI,aAAa,SAAS;AACnE,UAAM,KAAK,oBAAoB,WAAW,KAAK,SAAS,IAAI,KAAK;AACjE,UAAM,WAAW,IAAI,OAAO,IAAI;AAEhC,aAAS,GAA2B,WAAW,cAAc,EAAE,gBAAgB,EAAE,IAAI,OAAO,MAAM,UAAU,KAAK,OAAO,YAAY,YAAY,CAAC;AACjJ,SAAK,UAAU,aAAa,MAAM,KAAK,SAAS,EAAE,CAAC,CAAC;AACpD,WAAO;AAAA,EACR;AAAA,EAEA,MAAa,QAAQ,WAAmB,MAA+B,MAA8B;AACpG,UAAM,UAAU,KAAK,YAAY,SAAS;AAC1C,QAAI,SAAS;AACZ,UAAI,SAAS,wBAAwB,QAAQ;AAC5C,gBAAQ,OAAO,IAAI;AAAA,MACpB,WAAW,SAAS,IAAI,GAAG;AAC1B,gBAAQ,OAAO,MAAM,IAAI;AAAA,MAC1B;AAAA,IACD;AAAA,EACD;AAAA,EAEA,MAAa,QAAQ,WAAmB,eAAuC;AAC9E,UAAM,UAAU,KAAK,YAAY,SAAS;AAC1C,QAAI,SAAS;AACZ,WAAK,eAAe,YAAY,QAAQ,IAAI,aAAa;AAAA,IAC1D;AAAA,EACD;AAAA,EAEA,MAAa,OAAO,WAAkC;AACrD,QAAI,KAAK,cAAc,cAAc,cAAc,GAAG;AACrD,YAAM,gBAAgB,KAAK,eAAe,iBAAiB;AAC3D,UAAI,iBAAiB,cAAc,cAAc,IAAI;AACpD,aAAK,cAAc,UAAU,cAAc;AAAA,MAC5C;AAAA,IACD;AAAA,EACD;AAAA,EAEA,MAAa,SAAS,WAAkC;AACvD,UAAM,UAAU,KAAK,YAAY,SAAS;AAC1C,aAAS,QAAQ;AAAA,EAClB;AAAA,EAEQ,YAAY,WAA+C;AAClE,WAAO,KAAK,eAAe,WAAW,SAAS;AAAA,EAChD;AACD;AAzEgG;AAE/F,cAFY,yBAEG,oBAAmB,oBAAI,IAAoB;AAF9C,0BAAN;AAAA,EADN,qBAAqB,YAAY,uBAAuB;AAAA,EAWtD;AAAA,EACA;AAAA,GAXU;",
  "names": []
}
