var w=Object.defineProperty;var D=Object.getOwnPropertyDescriptor;var P=(g,o,e,i)=>{for(var t=i>1?void 0:i?D(o,e):o,r=g.length-1,s;r>=0;r--)(s=g[r])&&(t=(i?s(o,e,t):s(t))||t);return i&&t&&w(o,e,t),t},h=(g,o)=>(e,i)=>o(e,i,g);import{DeferredPromise as T}from"../../../base/common/async.js";import"../../../base/common/cancellation.js";import{Emitter as k}from"../../../base/common/event.js";import"../../../base/common/htmlContent.js";import{Disposable as M,DisposableMap as C}from"../../../base/common/lifecycle.js";import{revive as I}from"../../../base/common/marshalling.js";import{escapeRegExpCharacters as $}from"../../../base/common/strings.js";import{ThemeIcon as E}from"../../../base/common/themables.js";import{URI as R}from"../../../base/common/uri.js";import"../../../editor/common/core/position.js";import{Range as f}from"../../../editor/common/core/range.js";import{getWordAtText as x}from"../../../editor/common/core/wordHelper.js";import{CompletionItemKind as N}from"../../../editor/common/languages.js";import"../../../editor/common/model.js";import{ILanguageFeaturesService as W}from"../../../editor/common/services/languageFeatures.js";import{ExtensionIdentifier as F}from"../../../platform/extensions/common/extensions.js";import{IInstantiationService as L}from"../../../platform/instantiation/common/instantiation.js";import{ILogService as H}from"../../../platform/log/common/log.js";import{ExtHostContext as q,MainContext as U}from"../common/extHost.protocol.js";import{IChatWidgetService as V}from"../../contrib/chat/browser/chat.js";import{ChatInputPart as j}from"../../contrib/chat/browser/chatInputPart.js";import{AddDynamicVariableAction as B}from"../../contrib/chat/browser/contrib/chatDynamicVariables.js";import{ChatAgentLocation as Q,IChatAgentService as K}from"../../contrib/chat/common/chatAgents.js";import{ChatRequestAgentPart as z}from"../../contrib/chat/common/chatParserTypes.js";import{ChatRequestParser as G}from"../../contrib/chat/common/chatRequestParser.js";import{IChatService as J}from"../../contrib/chat/common/chatService.js";import{extHostNamedCustomer as O}from"../../services/extensions/common/extHostCustomers.js";import{IExtensionService as X}from"../../services/extensions/common/extensions.js";class Y{constructor(o){this.content=o}kind="progressTask";deferred=new T;_onDidAddProgress=new k;get onDidAddProgress(){return this._onDidAddProgress.event}progress=[];task(){return this.deferred.p}isSettled(){return this.deferred.isSettled}complete(o){this.deferred.complete(o)}add(o){this.progress.push(o),this._onDidAddProgress.fire(o)}}let _=class extends M{constructor(e,i,t,r,s,a,p,l){super();this._chatAgentService=i;this._chatService=t;this._languageFeaturesService=r;this._chatWidgetService=s;this._instantiationService=a;this._logService=p;this._extensionService=l;this._proxy=e.getProxy(q.ExtHostChatAgents2),this._register(this._chatService.onDidDisposeSession(n=>{this._proxy.$releaseSession(n.sessionId)})),this._register(this._chatService.onDidPerformUserAction(n=>{if(typeof n.agentId=="string"){for(const[d,m]of this._agents)if(m.id===n.agentId){n.action.kind==="vote"?this._proxy.$acceptFeedback(d,n.result??{},n.action):this._proxy.$acceptAction(d,n.result||{},n);break}}}))}_agents=this._register(new C);_agentCompletionProviders=this._register(new C);_agentIdsToCompletionProviders=this._register(new C);_chatParticipantDetectionProviders=this._register(new C);_pendingProgress=new Map;_proxy;_responsePartHandlePool=0;_activeTasks=new Map;$unregisterAgent(e){this._agents.deleteAndDispose(e)}$transferActiveChatSession(e){const i=this._chatWidgetService.lastFocusedWidget,t=i?.viewModel?.model.sessionId;if(!t){this._logService.error("MainThreadChat#$transferActiveChatSession: No active chat session found");return}const r=i?.inputEditor.getValue()??"";this._chatService.transferChatSession({sessionId:t,inputValue:r},R.revive(e))}$registerAgent(e,i,t,r,s){const a=this._chatAgentService.getAgent(t);if(!a&&!s)throw this._chatAgentService.getAgentsByName(t).length?new Error(`chatParticipant must be declared with an ID in package.json. The "id" property may be missing! "${t}"`):new Error(`chatParticipant must be declared in package.json: ${t}`);const p={invoke:async(n,d,m,u)=>{this._pendingProgress.set(n.requestId,d);try{return await this._proxy.$invokeAgent(e,n,{history:m},u)??{}}finally{this._pendingProgress.delete(n.requestId)}},provideFollowups:async(n,d,m,u)=>this._agents.get(e)?.hasFollowups?this._proxy.$provideFollowups(n,e,d,{history:m},u):[],provideWelcomeMessage:n=>this._proxy.$provideWelcomeMessage(e,n),provideChatTitle:(n,d)=>this._proxy.$provideChatTitle(e,n,d),provideSampleQuestions:(n,d)=>this._proxy.$provideSampleQuestions(e,n,d)};let l;if(!a&&s){const n=this._extensionService.extensions.find(d=>F.equals(d.identifier,i));l=this._chatAgentService.registerDynamicAgent({id:t,name:s.name,description:s.description,extensionId:i,extensionDisplayName:n?.displayName??i.value,extensionPublisherId:n?.publisher??"",publisherDisplayName:s.publisherName,fullName:s.fullName,metadata:I(r),slashCommands:[],disambiguation:[],locations:[Q.Panel]},p)}else l=this._chatAgentService.registerAgentImplementation(t,p);this._agents.set(e,{id:t,extensionId:i,dispose:l.dispose,hasFollowups:r.hasFollowups})}$updateAgent(e,i){const t=this._agents.get(e);if(!t){this._logService.error(`MainThreadChatAgents2#$updateAgent: No agent with handle ${e} registered`);return}t.hasFollowups=i.hasFollowups,this._chatAgentService.updateAgent(t.id,I(i))}async $handleProgressChunk(e,i,t){const r=I(i);if(r.kind==="progressTask"){const s=++this._responsePartHandlePool,a=`${e}_${s}`,p=new Y(r.content);return this._activeTasks.set(a,p),this._pendingProgress.get(e)?.(p),s}else if(t!==void 0){const s=`${e}_${t}`,a=this._activeTasks.get(s);switch(r.kind){case"progressTaskResult":return a&&r.content?(a.complete(r.content.value),this._activeTasks.delete(s)):a?.complete(void 0),t;case"warning":case"reference":a?.add(r);return}}this._pendingProgress.get(e)?.(r)}$registerAgentCompletionsProvider(e,i,t){const r=async(s,a)=>(await this._proxy.$invokeCompletionProvider(e,s,a)).map(l=>({...l,icon:l.icon?E.fromId(l.icon):void 0}));this._agentIdsToCompletionProviders.set(i,this._chatAgentService.registerAgentCompletionProvider(i,r)),this._agentCompletionProviders.set(e,this._languageFeaturesService.completionProvider.register({scheme:j.INPUT_SCHEME,hasAccessToAllModels:!0},{_debugDisplayName:"chatAgentCompletions:"+e,triggerCharacters:t,provideCompletionItems:async(s,a,p,l)=>{const n=this._chatWidgetService.getWidgetByInputUri(s.uri);if(!n||!n.viewModel)return;const d=t.map(c=>$(c)).join(""),m=new RegExp(`[${d}]\\S*`,"g"),u=x(a.column,m,s.getLineContent(a.lineNumber),0)?.word??"";if(u&&!t.some(c=>u.startsWith(c)))return;const b=this._instantiationService.createInstance(G).parseChatRequest(n.viewModel.sessionId,s.getValue()).parts.find(c=>c instanceof z),y=this._agents.get(e)?.id;if(b?.agent.id!==y)return;const v=Z(s,a,m);return v?{suggestions:(await r(u,l)).map(c=>{const A=c.insertText??(typeof c.label=="string"?c.label:c.label.label),S=new f(v.insert.startLineNumber,v.insert.startColumn,v.insert.endLineNumber,v.insert.startColumn+A.length);return{label:c.label,range:v,insertText:A+" ",kind:N.Text,detail:c.detail,documentation:c.documentation,command:{id:B.ID,title:"",arguments:[{id:c.id,widget:n,range:S,variableData:I(c.value),command:c.command}]}}})}:null}}))}$unregisterAgentCompletionsProvider(e,i){this._agentCompletionProviders.deleteAndDispose(e),this._agentIdsToCompletionProviders.deleteAndDispose(i)}$registerChatParticipantDetectionProvider(e){this._chatParticipantDetectionProviders.set(e,this._chatAgentService.registerChatParticipantDetectionProvider(e,{provideParticipantDetection:async(i,t,r,s)=>await this._proxy.$detectChatParticipant(e,i,{history:t},r,s)}))}$unregisterChatParticipantDetectionProvider(e){this._chatParticipantDetectionProviders.deleteAndDispose(e)}};_=P([O(U.MainThreadChatAgents2),h(1,K),h(2,J),h(3,W),h(4,V),h(5,L),h(6,H),h(7,X)],_);function Z(g,o,e){const i=x(o.column,e,g.getLineContent(o.lineNumber),0);if(!i&&g.getWordUntilPosition(o).word)return;let t,r;return i?(t=new f(o.lineNumber,i.startColumn,o.lineNumber,o.column),r=new f(o.lineNumber,i.startColumn,o.lineNumber,i.endColumn)):t=r=f.fromPositions(o),{insert:t,replace:r}}export{_ as MainThreadChatAgents2,Y as MainThreadChatTask};
