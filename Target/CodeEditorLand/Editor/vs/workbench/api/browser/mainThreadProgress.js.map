{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadProgress.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IProgress, IProgressService, IProgressStep, ProgressLocation, IProgressOptions, IProgressNotificationOptions } from '../../../platform/progress/common/progress.js';\nimport { MainThreadProgressShape, MainContext, ExtHostProgressShape, ExtHostContext } from '../common/extHost.protocol.js';\nimport { extHostNamedCustomer, IExtHostContext } from '../../services/extensions/common/extHostCustomers.js';\nimport { Action } from '../../../base/common/actions.js';\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\nimport { localize } from '../../../nls.js';\n\nclass ManageExtensionAction extends Action {\n\tconstructor(extensionId: string, label: string, commandService: ICommandService) {\n\t\tsuper(extensionId, label, undefined, true, () => {\n\t\t\treturn commandService.executeCommand('_extensions.manage', extensionId);\n\t\t});\n\t}\n}\n\n@extHostNamedCustomer(MainContext.MainThreadProgress)\nexport class MainThreadProgress implements MainThreadProgressShape {\n\n\tprivate readonly _progressService: IProgressService;\n\tprivate _progress = new Map<number, { resolve: () => void; progress: IProgress<IProgressStep> }>();\n\tprivate readonly _proxy: ExtHostProgressShape;\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@IProgressService progressService: IProgressService,\n\t\t@ICommandService private readonly _commandService: ICommandService\n\t) {\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostProgress);\n\t\tthis._progressService = progressService;\n\t}\n\n\tdispose(): void {\n\t\tthis._progress.forEach(handle => handle.resolve());\n\t\tthis._progress.clear();\n\t}\n\n\tasync $startProgress(handle: number, options: IProgressOptions, extensionId?: string): Promise<void> {\n\t\tconst task = this._createTask(handle);\n\n\t\tif (options.location === ProgressLocation.Notification && extensionId) {\n\t\t\tconst notificationOptions: IProgressNotificationOptions = {\n\t\t\t\t...options,\n\t\t\t\tlocation: ProgressLocation.Notification,\n\t\t\t\tsecondaryActions: [new ManageExtensionAction(extensionId, localize('manageExtension', \"Manage Extension\"), this._commandService)]\n\t\t\t};\n\n\t\t\toptions = notificationOptions;\n\t\t}\n\n\t\tthis._progressService.withProgress(options, task, () => this._proxy.$acceptProgressCanceled(handle));\n\t}\n\n\t$progressReport(handle: number, message: IProgressStep): void {\n\t\tconst entry = this._progress.get(handle);\n\t\tentry?.progress.report(message);\n\t}\n\n\t$progressEnd(handle: number): void {\n\t\tconst entry = this._progress.get(handle);\n\t\tif (entry) {\n\t\t\tentry.resolve();\n\t\t\tthis._progress.delete(handle);\n\t\t}\n\t}\n\n\tprivate _createTask(handle: number) {\n\t\treturn (progress: IProgress<IProgressStep>) => {\n\t\t\treturn new Promise<void>(resolve => {\n\t\t\t\tthis._progress.set(handle, { resolve, progress });\n\t\t\t});\n\t\t};\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,WAAW,kBAAkB,eAAe,kBAAkB,kBAAkB,oCAAoC;AAC7H,SAAS,yBAAyB,aAAa,sBAAsB,sBAAsB;AAC3F,SAAS,sBAAsB,uBAAuB;AACtD,SAAS,cAAc;AACvB,SAAS,uBAAuB;AAChC,SAAS,gBAAgB;AAEzB,MAAM,8BAA8B,OAAO;AAAA,EAZ3C,OAY2C;AAAA;AAAA;AAAA,EAC1C,YAAY,aAAqB,OAAe,gBAAiC;AAChF,UAAM,aAAa,OAAO,QAAW,MAAM,MAAM;AAChD,aAAO,eAAe,eAAe,sBAAsB,WAAW;AAAA,IACvE,CAAC;AAAA,EACF;AACD;AAGO,IAAM,qBAAN,MAA4D;AAAA,EAMlE,YACC,gBACkB,iBACgB,iBACjC;AADiC;AAElC,SAAK,SAAS,eAAe,SAAS,eAAe,eAAe;AACpE,SAAK,mBAAmB;AAAA,EACzB;AAAA,EAXiB;AAAA,EACT,YAAY,oBAAI,IAAyE;AAAA,EAChF;AAAA,EAWjB,UAAgB;AACf,SAAK,UAAU,QAAQ,YAAU,OAAO,QAAQ,CAAC;AACjD,SAAK,UAAU,MAAM;AAAA,EACtB;AAAA,EAEA,MAAM,eAAe,QAAgB,SAA2B,aAAqC;AACpG,UAAM,OAAO,KAAK,YAAY,MAAM;AAEpC,QAAI,QAAQ,aAAa,iBAAiB,gBAAgB,aAAa;AACtE,YAAM,sBAAoD;AAAA,QACzD,GAAG;AAAA,QACH,UAAU,iBAAiB;AAAA,QAC3B,kBAAkB,CAAC,IAAI,sBAAsB,aAAa,SAAS,mBAAmB,kBAAkB,GAAG,KAAK,eAAe,CAAC;AAAA,MACjI;AAEA,gBAAU;AAAA,IACX;AAEA,SAAK,iBAAiB,aAAa,SAAS,MAAM,MAAM,KAAK,OAAO,wBAAwB,MAAM,CAAC;AAAA,EACpG;AAAA,EAEA,gBAAgB,QAAgB,SAA8B;AAC7D,UAAM,QAAQ,KAAK,UAAU,IAAI,MAAM;AACvC,WAAO,SAAS,OAAO,OAAO;AAAA,EAC/B;AAAA,EAEA,aAAa,QAAsB;AAClC,UAAM,QAAQ,KAAK,UAAU,IAAI,MAAM;AACvC,QAAI,OAAO;AACV,YAAM,QAAQ;AACd,WAAK,UAAU,OAAO,MAAM;AAAA,IAC7B;AAAA,EACD;AAAA,EAEQ,YAAY,QAAgB;AACnC,WAAO,CAAC,aAAuC;AAC9C,aAAO,IAAI,QAAc,aAAW;AACnC,aAAK,UAAU,IAAI,QAAQ,EAAE,SAAS,SAAS,CAAC;AAAA,MACjD,CAAC;AAAA,IACF;AAAA,EACD;AACD;AAxDmE;AAAtD,qBAAN;AAAA,EADN,qBAAqB,YAAY,kBAAkB;AAAA,EASjD;AAAA,EACA;AAAA,GATU;",
  "names": []
}
