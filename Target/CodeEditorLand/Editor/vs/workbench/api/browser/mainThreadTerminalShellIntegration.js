var f=Object.defineProperty;var S=Object.getOwnPropertyDescriptor;var u=(r,s,t,n)=>{for(var a=n>1?void 0:n?S(s,t):s,o=r.length-1,d;o>=0;o--)(d=r[o])&&(a=(n?d(s,t,a):d(a))||a);return n&&a&&f(s,t,a),a},h=(r,s)=>(t,n)=>s(t,n,r);import{Event as p}from"../../../base/common/event.js";import{Disposable as y,toDisposable as T}from"../../../base/common/lifecycle.js";import{URI as D}from"../../../base/common/uri.js";import{TerminalCapability as m}from"../../../platform/terminal/common/capabilities/capabilities.js";import{ExtHostContext as g,MainContext as b}from"../common/extHost.protocol.js";import{ITerminalService as w}from"../../contrib/terminal/browser/terminal.js";import{IWorkbenchEnvironmentService as H}from"../../services/environment/common/environmentService.js";import{extHostNamedCustomer as $}from"../../services/extensions/common/extHostCustomers.js";import{TerminalShellExecutionCommandLineConfidence as C}from"../common/extHostTypes.js";let c=class extends y{constructor(t,n,a){super();this._terminalService=n;this._proxy=t.getProxy(g.ExtHostTerminalShellIntegration);const o=new Map;this._register(T(()=>{for(const e of o.values())e.dispose()}));const d=this._store.add(this._terminalService.createOnInstanceEvent(e=>p.map(p.filter(e.capabilities.onDidAddCapabilityType,i=>i===m.CommandDetection),()=>e))).event;this._store.add(d(e=>this._proxy.$shellIntegrationChange(e.instanceId)));const x=this._store.add(this._terminalService.createOnInstanceCapabilityEvent(m.CommandDetection,e=>e.onCommandExecuted));let l;this._store.add(x.event(e=>{if(e.data===l)return;l=e.data;const i=e.instance.instanceId;this._proxy.$shellExecutionStart(i,e.data.command,v(e.data),e.data.isTrusted,this._convertCwdToUri(e.data.cwd)),o.get(i)?.dispose(),o.set(i,p.accumulate(e.instance.onData,50,this._store)(E=>this._proxy.$shellExecutionData(i,E.join(""))))}));const I=this._store.add(this._terminalService.createOnInstanceCapabilityEvent(m.CommandDetection,e=>e.onCommandFinished));this._store.add(I.event(e=>{l=void 0;const i=e.instance.instanceId;o.get(i)?.dispose(),setTimeout(()=>{this._proxy.$shellExecutionEnd(i,e.data.command,v(e.data),e.data.isTrusted,e.data.exitCode)})}));const _=this._store.add(this._terminalService.createOnInstanceCapabilityEvent(m.CwdDetection,e=>e.onDidChangeCwd));this._store.add(_.event(e=>{this._proxy.$cwdChange(e.instance.instanceId,this._convertCwdToUri(e.data))})),this._store.add(this._terminalService.onDidDisposeInstance(e=>this._proxy.$closeTerminal(e.instanceId)))}_proxy;$executeCommand(t,n){this._terminalService.getInstanceFromId(t)?.runCommand(n,!0)}_convertCwdToUri(t){return t?D.file(t):void 0}};c=u([$(b.MainThreadTerminalShellIntegration),h(1,w),h(2,H)],c);function v(r){switch(r.commandLineConfidence){case"high":return C.High;case"medium":return C.Medium;case"low":default:return C.Low}}export{c as MainThreadTerminalShellIntegration};
