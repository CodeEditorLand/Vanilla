{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadCustomEditors.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { multibyteAwareBtoa } from \"../../../base/browser/dom.js\";\nimport {\n\ttype CancelablePromise,\n\tcreateCancelablePromise,\n} from \"../../../base/common/async.js\";\nimport type { VSBuffer } from \"../../../base/common/buffer.js\";\nimport { CancellationToken } from \"../../../base/common/cancellation.js\";\nimport {\n\tisCancellationError,\n\tonUnexpectedError,\n} from \"../../../base/common/errors.js\";\nimport { Emitter, Event } from \"../../../base/common/event.js\";\nimport {\n\tDisposable,\n\tDisposableMap,\n\tDisposableStore,\n\ttype IReference,\n} from \"../../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../../base/common/network.js\";\nimport { basename } from \"../../../base/common/path.js\";\nimport {\n\tisEqual,\n\tisEqualOrParent,\n\ttoLocalResource,\n} from \"../../../base/common/resources.js\";\nimport { URI, type UriComponents } from \"../../../base/common/uri.js\";\nimport { generateUuid } from \"../../../base/common/uuid.js\";\nimport { localize } from \"../../../nls.js\";\nimport { IFileDialogService } from \"../../../platform/dialogs/common/dialogs.js\";\nimport {\n\tFileOperation,\n\tIFileService,\n} from \"../../../platform/files/common/files.js\";\nimport { IInstantiationService } from \"../../../platform/instantiation/common/instantiation.js\";\nimport { ILabelService } from \"../../../platform/label/common/label.js\";\nimport { IStorageService } from \"../../../platform/storage/common/storage.js\";\nimport {\n\tIUndoRedoService,\n\tUndoRedoElementType,\n} from \"../../../platform/undoRedo/common/undoRedo.js\";\nimport type { IRevertOptions, ISaveOptions } from \"../../common/editor.js\";\nimport { CustomEditorInput } from \"../../contrib/customEditor/browser/customEditorInput.js\";\nimport type { CustomDocumentBackupData } from \"../../contrib/customEditor/browser/customEditorInputFactory.js\";\nimport {\n\ttype ICustomEditorModel,\n\tICustomEditorService,\n} from \"../../contrib/customEditor/common/customEditor.js\";\nimport { CustomTextEditorModel } from \"../../contrib/customEditor/common/customTextEditorModel.js\";\nimport {\n\tExtensionKeyedWebviewOriginStore,\n\ttype WebviewExtensionDescription,\n} from \"../../contrib/webview/browser/webview.js\";\nimport type { WebviewInput } from \"../../contrib/webviewPanel/browser/webviewEditorInput.js\";\nimport { IWebviewWorkbenchService } from \"../../contrib/webviewPanel/browser/webviewWorkbenchService.js\";\nimport { editorGroupToColumn } from \"../../services/editor/common/editorGroupColumn.js\";\nimport { IEditorGroupsService } from \"../../services/editor/common/editorGroupsService.js\";\nimport { IEditorService } from \"../../services/editor/common/editorService.js\";\nimport { IWorkbenchEnvironmentService } from \"../../services/environment/common/environmentService.js\";\nimport type { IExtHostContext } from \"../../services/extensions/common/extHostCustomers.js\";\nimport { IExtensionService } from \"../../services/extensions/common/extensions.js\";\nimport { IPathService } from \"../../services/path/common/pathService.js\";\nimport { ResourceWorkingCopy } from \"../../services/workingCopy/common/resourceWorkingCopy.js\";\nimport {\n\ttype IWorkingCopy,\n\ttype IWorkingCopyBackup,\n\ttype IWorkingCopySaveEvent,\n\tNO_TYPE_ID,\n\tWorkingCopyCapabilities,\n} from \"../../services/workingCopy/common/workingCopy.js\";\nimport {\n\tIWorkingCopyFileService,\n\ttype WorkingCopyFileEvent,\n} from \"../../services/workingCopy/common/workingCopyFileService.js\";\nimport { IWorkingCopyService } from \"../../services/workingCopy/common/workingCopyService.js\";\nimport * as extHostProtocol from \"../common/extHost.protocol.js\";\nimport type { MainThreadWebviewPanels } from \"./mainThreadWebviewPanels.js\";\nimport {\n\ttype MainThreadWebviews,\n\treviveWebviewExtension,\n} from \"./mainThreadWebviews.js\";\n\nenum CustomEditorModelType {\n\tCustom = 0,\n\tText = 1,\n}\n\nexport class MainThreadCustomEditors\n\textends Disposable\n\timplements extHostProtocol.MainThreadCustomEditorsShape\n{\n\tprivate readonly _proxyCustomEditors: extHostProtocol.ExtHostCustomEditorsShape;\n\n\tprivate readonly _editorProviders = this._register(\n\t\tnew DisposableMap<string>(),\n\t);\n\n\tprivate readonly _editorRenameBackups = new Map<\n\t\tstring,\n\t\tCustomDocumentBackupData\n\t>();\n\n\tprivate readonly _webviewOriginStore: ExtensionKeyedWebviewOriginStore;\n\n\tconstructor(\n\t\tcontext: IExtHostContext,\n\t\tprivate readonly mainThreadWebview: MainThreadWebviews,\n\t\tprivate readonly mainThreadWebviewPanels: MainThreadWebviewPanels,\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IWorkingCopyService workingCopyService: IWorkingCopyService,\n\t\t@IWorkingCopyFileService\n\t\tworkingCopyFileService: IWorkingCopyFileService,\n\t\t@ICustomEditorService\n\t\tprivate readonly _customEditorService: ICustomEditorService,\n\t\t@IEditorGroupsService\n\t\tprivate readonly _editorGroupService: IEditorGroupsService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IInstantiationService\n\t\tprivate readonly _instantiationService: IInstantiationService,\n\t\t@IWebviewWorkbenchService\n\t\tprivate readonly _webviewWorkbenchService: IWebviewWorkbenchService,\n\t) {\n\t\tsuper();\n\n\t\tthis._webviewOriginStore = new ExtensionKeyedWebviewOriginStore(\n\t\t\t\"mainThreadCustomEditors.origins\",\n\t\t\tstorageService,\n\t\t);\n\n\t\tthis._proxyCustomEditors = context.getProxy(\n\t\t\textHostProtocol.ExtHostContext.ExtHostCustomEditors,\n\t\t);\n\n\t\tthis._register(\n\t\t\tworkingCopyFileService.registerWorkingCopyProvider(\n\t\t\t\t(editorResource) => {\n\t\t\t\t\tconst matchedWorkingCopies: IWorkingCopy[] = [];\n\n\t\t\t\t\tfor (const workingCopy of workingCopyService.workingCopies) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tworkingCopy instanceof MainThreadCustomEditorModel\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tisEqualOrParent(\n\t\t\t\t\t\t\t\t\teditorResource,\n\t\t\t\t\t\t\t\t\tworkingCopy.editorResource,\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tmatchedWorkingCopies.push(workingCopy);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn matchedWorkingCopies;\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\t// This reviver's only job is to activate custom editor extensions.\n\t\tthis._register(\n\t\t\t_webviewWorkbenchService.registerResolver({\n\t\t\t\tcanResolve: (webview: WebviewInput) => {\n\t\t\t\t\tif (webview instanceof CustomEditorInput) {\n\t\t\t\t\t\textensionService.activateByEvent(\n\t\t\t\t\t\t\t`onCustomEditor:${webview.viewType}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t},\n\t\t\t\tresolveWebview: () => {\n\t\t\t\t\tthrow new Error(\"not implemented\");\n\t\t\t\t},\n\t\t\t}),\n\t\t);\n\n\t\t// Working copy operations\n\t\tthis._register(\n\t\t\tworkingCopyFileService.onWillRunWorkingCopyFileOperation(\n\t\t\t\tasync (e) => this.onWillRunWorkingCopyFileOperation(e),\n\t\t\t),\n\t\t);\n\t}\n\n\tpublic $registerTextEditorProvider(\n\t\textensionData: extHostProtocol.WebviewExtensionDescription,\n\t\tviewType: string,\n\t\toptions: extHostProtocol.IWebviewPanelOptions,\n\t\tcapabilities: extHostProtocol.CustomTextEditorCapabilities,\n\t\tserializeBuffersForPostMessage: boolean,\n\t): void {\n\t\tthis.registerEditorProvider(\n\t\t\tCustomEditorModelType.Text,\n\t\t\treviveWebviewExtension(extensionData),\n\t\t\tviewType,\n\t\t\toptions,\n\t\t\tcapabilities,\n\t\t\ttrue,\n\t\t\tserializeBuffersForPostMessage,\n\t\t);\n\t}\n\n\tpublic $registerCustomEditorProvider(\n\t\textensionData: extHostProtocol.WebviewExtensionDescription,\n\t\tviewType: string,\n\t\toptions: extHostProtocol.IWebviewPanelOptions,\n\t\tsupportsMultipleEditorsPerDocument: boolean,\n\t\tserializeBuffersForPostMessage: boolean,\n\t): void {\n\t\tthis.registerEditorProvider(\n\t\t\tCustomEditorModelType.Custom,\n\t\t\treviveWebviewExtension(extensionData),\n\t\t\tviewType,\n\t\t\toptions,\n\t\t\t{},\n\t\t\tsupportsMultipleEditorsPerDocument,\n\t\t\tserializeBuffersForPostMessage,\n\t\t);\n\t}\n\n\tprivate registerEditorProvider(\n\t\tmodelType: CustomEditorModelType,\n\t\textension: WebviewExtensionDescription,\n\t\tviewType: string,\n\t\toptions: extHostProtocol.IWebviewPanelOptions,\n\t\tcapabilities: extHostProtocol.CustomTextEditorCapabilities,\n\t\tsupportsMultipleEditorsPerDocument: boolean,\n\t\tserializeBuffersForPostMessage: boolean,\n\t): void {\n\t\tif (this._editorProviders.has(viewType)) {\n\t\t\tthrow new Error(`Provider for ${viewType} already registered`);\n\t\t}\n\n\t\tconst disposables = new DisposableStore();\n\n\t\tdisposables.add(\n\t\t\tthis._customEditorService.registerCustomEditorCapabilities(\n\t\t\t\tviewType,\n\t\t\t\t{\n\t\t\t\t\tsupportsMultipleEditorsPerDocument,\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tdisposables.add(\n\t\t\tthis._webviewWorkbenchService.registerResolver({\n\t\t\t\tcanResolve: (webviewInput) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\twebviewInput instanceof CustomEditorInput &&\n\t\t\t\t\t\twebviewInput.viewType === viewType\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\tresolveWebview: async (\n\t\t\t\t\twebviewInput: CustomEditorInput,\n\t\t\t\t\tcancellation: CancellationToken,\n\t\t\t\t) => {\n\t\t\t\t\tconst handle = generateUuid();\n\t\t\t\t\tconst resource = webviewInput.resource;\n\n\t\t\t\t\twebviewInput.webview.origin =\n\t\t\t\t\t\tthis._webviewOriginStore.getOrigin(\n\t\t\t\t\t\t\tviewType,\n\t\t\t\t\t\t\textension.id,\n\t\t\t\t\t\t);\n\n\t\t\t\t\tthis.mainThreadWebviewPanels.addWebviewInput(\n\t\t\t\t\t\thandle,\n\t\t\t\t\t\twebviewInput,\n\t\t\t\t\t\t{ serializeBuffersForPostMessage },\n\t\t\t\t\t);\n\t\t\t\t\twebviewInput.webview.options = options;\n\t\t\t\t\twebviewInput.webview.extension = extension;\n\n\t\t\t\t\t// If there's an old resource this was a move and we must resolve the backup at the same time as the webview\n\t\t\t\t\t// This is because the backup must be ready upon model creation, and the input resolve method comes after\n\t\t\t\t\tlet backupId = webviewInput.backupId;\n\t\t\t\t\tif (webviewInput.oldResource && !webviewInput.backupId) {\n\t\t\t\t\t\tconst backup = this._editorRenameBackups.get(\n\t\t\t\t\t\t\twebviewInput.oldResource.toString(),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbackupId = backup?.backupId;\n\t\t\t\t\t\tthis._editorRenameBackups.delete(\n\t\t\t\t\t\t\twebviewInput.oldResource.toString(),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet modelRef: IReference<ICustomEditorModel>;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tmodelRef = await this.getOrCreateCustomEditorModel(\n\t\t\t\t\t\t\tmodelType,\n\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\tviewType,\n\t\t\t\t\t\t\t{ backupId },\n\t\t\t\t\t\t\tcancellation,\n\t\t\t\t\t\t);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tonUnexpectedError(error);\n\t\t\t\t\t\twebviewInput.webview.setHtml(\n\t\t\t\t\t\t\tthis.mainThreadWebview.getWebviewResolvedFailedContent(\n\t\t\t\t\t\t\t\tviewType,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (cancellation.isCancellationRequested) {\n\t\t\t\t\t\tmodelRef.dispose();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\twebviewInput.webview.onDidDispose(() => {\n\t\t\t\t\t\t// If the model is still dirty, make sure we have time to save it\n\t\t\t\t\t\tif (modelRef.object.isDirty()) {\n\t\t\t\t\t\t\tconst sub = modelRef.object.onDidChangeDirty(() => {\n\t\t\t\t\t\t\t\tif (!modelRef.object.isDirty()) {\n\t\t\t\t\t\t\t\t\tsub.dispose();\n\t\t\t\t\t\t\t\t\tmodelRef.dispose();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmodelRef.dispose();\n\t\t\t\t\t});\n\n\t\t\t\t\tif (capabilities.supportsMove) {\n\t\t\t\t\t\twebviewInput.onMove(async (newResource: URI) => {\n\t\t\t\t\t\t\tconst oldModel = modelRef;\n\t\t\t\t\t\t\tmodelRef = await this.getOrCreateCustomEditorModel(\n\t\t\t\t\t\t\t\tmodelType,\n\t\t\t\t\t\t\t\tnewResource,\n\t\t\t\t\t\t\t\tviewType,\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tCancellationToken.None,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tthis._proxyCustomEditors.$onMoveCustomEditor(\n\t\t\t\t\t\t\t\thandle,\n\t\t\t\t\t\t\t\tnewResource,\n\t\t\t\t\t\t\t\tviewType,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\toldModel.dispose();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait this._proxyCustomEditors.$resolveCustomEditor(\n\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\thandle,\n\t\t\t\t\t\t\tviewType,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttitle: webviewInput.getTitle(),\n\t\t\t\t\t\t\t\tcontentOptions:\n\t\t\t\t\t\t\t\t\twebviewInput.webview.contentOptions,\n\t\t\t\t\t\t\t\toptions: webviewInput.webview.options,\n\t\t\t\t\t\t\t\tactive:\n\t\t\t\t\t\t\t\t\twebviewInput ===\n\t\t\t\t\t\t\t\t\tthis._editorService.activeEditor,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\teditorGroupToColumn(\n\t\t\t\t\t\t\t\tthis._editorGroupService,\n\t\t\t\t\t\t\t\twebviewInput.group || 0,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tcancellation,\n\t\t\t\t\t\t);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tonUnexpectedError(error);\n\t\t\t\t\t\twebviewInput.webview.setHtml(\n\t\t\t\t\t\t\tthis.mainThreadWebview.getWebviewResolvedFailedContent(\n\t\t\t\t\t\t\t\tviewType,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tmodelRef.dispose();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t}),\n\t\t);\n\n\t\tthis._editorProviders.set(viewType, disposables);\n\t}\n\n\tpublic $unregisterEditorProvider(viewType: string): void {\n\t\tif (!this._editorProviders.has(viewType)) {\n\t\t\tthrow new Error(`No provider for ${viewType} registered`);\n\t\t}\n\n\t\tthis._editorProviders.deleteAndDispose(viewType);\n\n\t\tthis._customEditorService.models.disposeAllModelsForView(viewType);\n\t}\n\n\tprivate async getOrCreateCustomEditorModel(\n\t\tmodelType: CustomEditorModelType,\n\t\tresource: URI,\n\t\tviewType: string,\n\t\toptions: { backupId?: string },\n\t\tcancellation: CancellationToken,\n\t): Promise<IReference<ICustomEditorModel>> {\n\t\tconst existingModel = this._customEditorService.models.tryRetain(\n\t\t\tresource,\n\t\t\tviewType,\n\t\t);\n\t\tif (existingModel) {\n\t\t\treturn existingModel;\n\t\t}\n\n\t\tswitch (modelType) {\n\t\t\tcase CustomEditorModelType.Text: {\n\t\t\t\tconst model = CustomTextEditorModel.create(\n\t\t\t\t\tthis._instantiationService,\n\t\t\t\t\tviewType,\n\t\t\t\t\tresource,\n\t\t\t\t);\n\t\t\t\treturn this._customEditorService.models.add(\n\t\t\t\t\tresource,\n\t\t\t\t\tviewType,\n\t\t\t\t\tmodel,\n\t\t\t\t);\n\t\t\t}\n\t\t\tcase CustomEditorModelType.Custom: {\n\t\t\t\tconst model = MainThreadCustomEditorModel.create(\n\t\t\t\t\tthis._instantiationService,\n\t\t\t\t\tthis._proxyCustomEditors,\n\t\t\t\t\tviewType,\n\t\t\t\t\tresource,\n\t\t\t\t\toptions,\n\t\t\t\t\t() => {\n\t\t\t\t\t\treturn Array.from(\n\t\t\t\t\t\t\tthis.mainThreadWebviewPanels.webviewInputs,\n\t\t\t\t\t\t).filter(\n\t\t\t\t\t\t\t(editor) =>\n\t\t\t\t\t\t\t\teditor instanceof CustomEditorInput &&\n\t\t\t\t\t\t\t\tisEqual(editor.resource, resource),\n\t\t\t\t\t\t) as CustomEditorInput[];\n\t\t\t\t\t},\n\t\t\t\t\tcancellation,\n\t\t\t\t);\n\t\t\t\treturn this._customEditorService.models.add(\n\t\t\t\t\tresource,\n\t\t\t\t\tviewType,\n\t\t\t\t\tmodel,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async $onDidEdit(\n\t\tresourceComponents: UriComponents,\n\t\tviewType: string,\n\t\teditId: number,\n\t\tlabel: string | undefined,\n\t): Promise<void> {\n\t\tconst model = await this.getCustomEditorModel(\n\t\t\tresourceComponents,\n\t\t\tviewType,\n\t\t);\n\t\tmodel.pushEdit(editId, label);\n\t}\n\n\tpublic async $onContentChange(\n\t\tresourceComponents: UriComponents,\n\t\tviewType: string,\n\t): Promise<void> {\n\t\tconst model = await this.getCustomEditorModel(\n\t\t\tresourceComponents,\n\t\t\tviewType,\n\t\t);\n\t\tmodel.changeContent();\n\t}\n\n\tprivate async getCustomEditorModel(\n\t\tresourceComponents: UriComponents,\n\t\tviewType: string,\n\t) {\n\t\tconst resource = URI.revive(resourceComponents);\n\t\tconst model = await this._customEditorService.models.get(\n\t\t\tresource,\n\t\t\tviewType,\n\t\t);\n\t\tif (!model || !(model instanceof MainThreadCustomEditorModel)) {\n\t\t\tthrow new Error(\"Could not find model for webview editor\");\n\t\t}\n\t\treturn model;\n\t}\n\n\t//#region Working Copy\n\tprivate async onWillRunWorkingCopyFileOperation(e: WorkingCopyFileEvent) {\n\t\tif (e.operation !== FileOperation.MOVE) {\n\t\t\treturn;\n\t\t}\n\t\te.waitUntil(\n\t\t\t(async () => {\n\t\t\t\tconst models = [];\n\t\t\t\tfor (const file of e.files) {\n\t\t\t\t\tif (file.source) {\n\t\t\t\t\t\tmodels.push(\n\t\t\t\t\t\t\t...(await this._customEditorService.models.getAllModels(\n\t\t\t\t\t\t\t\tfile.source,\n\t\t\t\t\t\t\t)),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const model of models) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tmodel instanceof MainThreadCustomEditorModel &&\n\t\t\t\t\t\tmodel.isDirty()\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst workingCopy = await model.backup(\n\t\t\t\t\t\t\tCancellationToken.None,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (workingCopy.meta) {\n\t\t\t\t\t\t\t// This cast is safe because we do an instanceof check above and a custom document backup data is always returned\n\t\t\t\t\t\t\tthis._editorRenameBackups.set(\n\t\t\t\t\t\t\t\tmodel.editorResource.toString(),\n\t\t\t\t\t\t\t\tworkingCopy.meta as CustomDocumentBackupData,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})(),\n\t\t);\n\t}\n\t//#endregion\n}\n\nnamespace HotExitState {\n\texport enum Type {\n\t\tAllowed = 0,\n\t\tNotAllowed = 1,\n\t\tPending = 2,\n\t}\n\n\texport const Allowed = Object.freeze({ type: Type.Allowed } as const);\n\texport const NotAllowed = Object.freeze({ type: Type.NotAllowed } as const);\n\n\texport class Pending {\n\t\treadonly type = Type.Pending;\n\n\t\tconstructor(public readonly operation: CancelablePromise<string>) {}\n\t}\n\n\texport type State = typeof Allowed | typeof NotAllowed | Pending;\n}\n\nclass MainThreadCustomEditorModel\n\textends ResourceWorkingCopy\n\timplements ICustomEditorModel\n{\n\tprivate _fromBackup = false;\n\tprivate _hotExitState: HotExitState.State = HotExitState.Allowed;\n\tprivate _backupId: string | undefined;\n\n\tprivate _currentEditIndex = -1;\n\tprivate _savePoint = -1;\n\tprivate readonly _edits: Array<number> = [];\n\tprivate _isDirtyFromContentChange = false;\n\n\tprivate _ongoingSave?: CancelablePromise<void>;\n\n\t// TODO@mjbvz consider to enable a `typeId` that is specific for custom\n\t// editors. Using a distinct `typeId` allows the working copy to have\n\t// any resource (including file based resources) even if other working\n\t// copies exist with the same resource.\n\t//\n\t// IMPORTANT: changing the `typeId` has an impact on backups for this\n\t// working copy. Any value that is not the empty string will be used\n\t// as seed to the backup. Only change the `typeId` if you have implemented\n\t// a fallback solution to resolve any existing backups that do not have\n\t// this seed.\n\treadonly typeId = NO_TYPE_ID;\n\n\tpublic static async create(\n\t\tinstantiationService: IInstantiationService,\n\t\tproxy: extHostProtocol.ExtHostCustomEditorsShape,\n\t\tviewType: string,\n\t\tresource: URI,\n\t\toptions: { backupId?: string },\n\t\tgetEditors: () => CustomEditorInput[],\n\t\tcancellation: CancellationToken,\n\t): Promise<MainThreadCustomEditorModel> {\n\t\tconst editors = getEditors();\n\t\tlet untitledDocumentData: VSBuffer | undefined;\n\t\tif (editors.length !== 0) {\n\t\t\tuntitledDocumentData = editors[0].untitledDocumentData;\n\t\t}\n\t\tconst { editable } = await proxy.$createCustomDocument(\n\t\t\tresource,\n\t\t\tviewType,\n\t\t\toptions.backupId,\n\t\t\tuntitledDocumentData,\n\t\t\tcancellation,\n\t\t);\n\t\treturn instantiationService.createInstance(\n\t\t\tMainThreadCustomEditorModel,\n\t\t\tproxy,\n\t\t\tviewType,\n\t\t\tresource,\n\t\t\t!!options.backupId,\n\t\t\teditable,\n\t\t\t!!untitledDocumentData,\n\t\t\tgetEditors,\n\t\t);\n\t}\n\n\tconstructor(\n\t\tprivate readonly _proxy: extHostProtocol.ExtHostCustomEditorsShape,\n\t\tprivate readonly _viewType: string,\n\t\tprivate readonly _editorResource: URI,\n\t\tfromBackup: boolean,\n\t\tprivate readonly _editable: boolean,\n\t\tstartDirty: boolean,\n\t\tprivate readonly _getEditors: () => CustomEditorInput[],\n\t\t@IFileDialogService\n\t\tprivate readonly _fileDialogService: IFileDialogService,\n\t\t@IFileService fileService: IFileService,\n\t\t@ILabelService private readonly _labelService: ILabelService,\n\t\t@IUndoRedoService private readonly _undoService: IUndoRedoService,\n\t\t@IWorkbenchEnvironmentService\n\t\tprivate readonly _environmentService: IWorkbenchEnvironmentService,\n\t\t@IWorkingCopyService workingCopyService: IWorkingCopyService,\n\t\t@IPathService private readonly _pathService: IPathService,\n\t\t@IExtensionService extensionService: IExtensionService,\n\t) {\n\t\tsuper(\n\t\t\tMainThreadCustomEditorModel.toWorkingCopyResource(\n\t\t\t\t_viewType,\n\t\t\t\t_editorResource,\n\t\t\t),\n\t\t\tfileService,\n\t\t);\n\n\t\tthis._fromBackup = fromBackup;\n\n\t\tif (_editable) {\n\t\t\tthis._register(workingCopyService.registerWorkingCopy(this));\n\n\t\t\tthis._register(\n\t\t\t\textensionService.onWillStop((e) => {\n\t\t\t\t\tif (!this.isDirty()) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\te.veto(\n\t\t\t\t\t\t(async () => {\n\t\t\t\t\t\t\tconst didSave = await this.save();\n\t\t\t\t\t\t\tif (!didSave) {\n\t\t\t\t\t\t\t\t// Veto\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn false; // Don't veto\n\t\t\t\t\t\t})(),\n\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\"vetoExtHostRestart\",\n\t\t\t\t\t\t\t\"Custom editor '{0}' could not be saved.\",\n\t\t\t\t\t\t\tthis.name,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\n\t\t// Normally means we're re-opening an untitled file\n\t\tif (startDirty) {\n\t\t\tthis._isDirtyFromContentChange = true;\n\t\t}\n\t}\n\n\tget editorResource() {\n\t\treturn this._editorResource;\n\t}\n\n\toverride dispose() {\n\t\tif (this._editable) {\n\t\t\tthis._undoService.removeElements(this._editorResource);\n\t\t}\n\n\t\tthis._proxy.$disposeCustomDocument(\n\t\t\tthis._editorResource,\n\t\t\tthis._viewType,\n\t\t);\n\n\t\tsuper.dispose();\n\t}\n\n\t//#region IWorkingCopy\n\n\t// Make sure each custom editor has a unique resource for backup and edits\n\tprivate static toWorkingCopyResource(viewType: string, resource: URI) {\n\t\tconst authority = viewType.replace(/[^a-z0-9\\-_]/gi, \"-\");\n\t\tconst path = `/${multibyteAwareBtoa(resource.with({ query: null, fragment: null }).toString(true))}`;\n\t\treturn URI.from({\n\t\t\tscheme: Schemas.vscodeCustomEditor,\n\t\t\tauthority: authority,\n\t\t\tpath: path,\n\t\t\tquery: JSON.stringify(resource.toJSON()),\n\t\t});\n\t}\n\n\tpublic get name() {\n\t\treturn basename(this._labelService.getUriLabel(this._editorResource));\n\t}\n\n\tpublic get capabilities(): WorkingCopyCapabilities {\n\t\treturn this.isUntitled()\n\t\t\t? WorkingCopyCapabilities.Untitled\n\t\t\t: WorkingCopyCapabilities.None;\n\t}\n\n\tpublic isDirty(): boolean {\n\t\tif (this._isDirtyFromContentChange) {\n\t\t\treturn true;\n\t\t}\n\t\tif (this._edits.length > 0) {\n\t\t\treturn this._savePoint !== this._currentEditIndex;\n\t\t}\n\t\treturn this._fromBackup;\n\t}\n\n\tprivate isUntitled() {\n\t\treturn this._editorResource.scheme === Schemas.untitled;\n\t}\n\n\tprivate readonly _onDidChangeDirty: Emitter<void> = this._register(\n\t\tnew Emitter<void>(),\n\t);\n\treadonly onDidChangeDirty: Event<void> = this._onDidChangeDirty.event;\n\n\tprivate readonly _onDidChangeContent: Emitter<void> = this._register(\n\t\tnew Emitter<void>(),\n\t);\n\treadonly onDidChangeContent: Event<void> = this._onDidChangeContent.event;\n\n\tprivate readonly _onDidSave: Emitter<IWorkingCopySaveEvent> =\n\t\tthis._register(new Emitter<IWorkingCopySaveEvent>());\n\treadonly onDidSave: Event<IWorkingCopySaveEvent> = this._onDidSave.event;\n\n\treadonly onDidChangeReadonly = Event.None;\n\n\t//#endregion\n\n\tpublic isReadonly(): boolean {\n\t\treturn !this._editable;\n\t}\n\n\tpublic get viewType() {\n\t\treturn this._viewType;\n\t}\n\n\tpublic get backupId() {\n\t\treturn this._backupId;\n\t}\n\n\tpublic pushEdit(editId: number, label: string | undefined) {\n\t\tif (!this._editable) {\n\t\t\tthrow new Error(\"Document is not editable\");\n\t\t}\n\n\t\tthis.change(() => {\n\t\t\tthis.spliceEdits(editId);\n\t\t\tthis._currentEditIndex = this._edits.length - 1;\n\t\t});\n\n\t\tthis._undoService.pushElement({\n\t\t\ttype: UndoRedoElementType.Resource,\n\t\t\tresource: this._editorResource,\n\t\t\tlabel: label ?? localize(\"defaultEditLabel\", \"Edit\"),\n\t\t\tcode: \"undoredo.customEditorEdit\",\n\t\t\tundo: () => this.undo(),\n\t\t\tredo: () => this.redo(),\n\t\t});\n\t}\n\n\tpublic changeContent() {\n\t\tthis.change(() => {\n\t\t\tthis._isDirtyFromContentChange = true;\n\t\t});\n\t}\n\n\tprivate async undo(): Promise<void> {\n\t\tif (!this._editable) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._currentEditIndex < 0) {\n\t\t\t// nothing to undo\n\t\t\treturn;\n\t\t}\n\n\t\tconst undoneEdit = this._edits[this._currentEditIndex];\n\t\tthis.change(() => {\n\t\t\t--this._currentEditIndex;\n\t\t});\n\t\tawait this._proxy.$undo(\n\t\t\tthis._editorResource,\n\t\t\tthis.viewType,\n\t\t\tundoneEdit,\n\t\t\tthis.isDirty(),\n\t\t);\n\t}\n\n\tprivate async redo(): Promise<void> {\n\t\tif (!this._editable) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._currentEditIndex >= this._edits.length - 1) {\n\t\t\t// nothing to redo\n\t\t\treturn;\n\t\t}\n\n\t\tconst redoneEdit = this._edits[this._currentEditIndex + 1];\n\t\tthis.change(() => {\n\t\t\t++this._currentEditIndex;\n\t\t});\n\t\tawait this._proxy.$redo(\n\t\t\tthis._editorResource,\n\t\t\tthis.viewType,\n\t\t\tredoneEdit,\n\t\t\tthis.isDirty(),\n\t\t);\n\t}\n\n\tprivate spliceEdits(editToInsert?: number) {\n\t\tconst start = this._currentEditIndex + 1;\n\t\tconst toRemove = this._edits.length - this._currentEditIndex;\n\n\t\tconst removedEdits =\n\t\t\ttypeof editToInsert === \"number\"\n\t\t\t\t? this._edits.splice(start, toRemove, editToInsert)\n\t\t\t\t: this._edits.splice(start, toRemove);\n\n\t\tif (removedEdits.length) {\n\t\t\tthis._proxy.$disposeEdits(\n\t\t\t\tthis._editorResource,\n\t\t\t\tthis._viewType,\n\t\t\t\tremovedEdits,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate change(makeEdit: () => void): void {\n\t\tconst wasDirty = this.isDirty();\n\t\tmakeEdit();\n\t\tthis._onDidChangeContent.fire();\n\n\t\tif (this.isDirty() !== wasDirty) {\n\t\t\tthis._onDidChangeDirty.fire();\n\t\t}\n\t}\n\n\tpublic async revert(options?: IRevertOptions) {\n\t\tif (!this._editable) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\tthis._currentEditIndex === this._savePoint &&\n\t\t\t!this._isDirtyFromContentChange &&\n\t\t\t!this._fromBackup\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!options?.soft) {\n\t\t\tthis._proxy.$revert(\n\t\t\t\tthis._editorResource,\n\t\t\t\tthis.viewType,\n\t\t\t\tCancellationToken.None,\n\t\t\t);\n\t\t}\n\n\t\tthis.change(() => {\n\t\t\tthis._isDirtyFromContentChange = false;\n\t\t\tthis._fromBackup = false;\n\t\t\tthis._currentEditIndex = this._savePoint;\n\t\t\tthis.spliceEdits();\n\t\t});\n\t}\n\n\tpublic async save(options?: ISaveOptions): Promise<boolean> {\n\t\tconst result = !!(await this.saveCustomEditor(options));\n\n\t\t// Emit Save Event\n\t\tif (result) {\n\t\t\tthis._onDidSave.fire({\n\t\t\t\treason: options?.reason,\n\t\t\t\tsource: options?.source,\n\t\t\t});\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic async saveCustomEditor(\n\t\toptions?: ISaveOptions,\n\t): Promise<URI | undefined> {\n\t\tif (!this._editable) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (this.isUntitled()) {\n\t\t\tconst targetUri = await this.suggestUntitledSavePath(options);\n\t\t\tif (!targetUri) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tawait this.saveCustomEditorAs(\n\t\t\t\tthis._editorResource,\n\t\t\t\ttargetUri,\n\t\t\t\toptions,\n\t\t\t);\n\t\t\treturn targetUri;\n\t\t}\n\n\t\tconst savePromise = createCancelablePromise((token) =>\n\t\t\tthis._proxy.$onSave(this._editorResource, this.viewType, token),\n\t\t);\n\t\tthis._ongoingSave?.cancel();\n\t\tthis._ongoingSave = savePromise;\n\n\t\ttry {\n\t\t\tawait savePromise;\n\n\t\t\tif (this._ongoingSave === savePromise) {\n\t\t\t\t// Make sure we are still doing the same save\n\t\t\t\tthis.change(() => {\n\t\t\t\t\tthis._isDirtyFromContentChange = false;\n\t\t\t\t\tthis._savePoint = this._currentEditIndex;\n\t\t\t\t\tthis._fromBackup = false;\n\t\t\t\t});\n\t\t\t}\n\t\t} finally {\n\t\t\tif (this._ongoingSave === savePromise) {\n\t\t\t\t// Make sure we are still doing the same save\n\t\t\t\tthis._ongoingSave = undefined;\n\t\t\t}\n\t\t}\n\n\t\treturn this._editorResource;\n\t}\n\n\tprivate suggestUntitledSavePath(\n\t\toptions: ISaveOptions | undefined,\n\t): Promise<URI | undefined> {\n\t\tif (!this.isUntitled()) {\n\t\t\tthrow new Error(\"Resource is not untitled\");\n\t\t}\n\n\t\tconst remoteAuthority = this._environmentService.remoteAuthority;\n\t\tconst localResource = toLocalResource(\n\t\t\tthis._editorResource,\n\t\t\tremoteAuthority,\n\t\t\tthis._pathService.defaultUriScheme,\n\t\t);\n\n\t\treturn this._fileDialogService.pickFileToSave(\n\t\t\tlocalResource,\n\t\t\toptions?.availableFileSystems,\n\t\t);\n\t}\n\n\tpublic async saveCustomEditorAs(\n\t\tresource: URI,\n\t\ttargetResource: URI,\n\t\t_options?: ISaveOptions,\n\t): Promise<boolean> {\n\t\tif (this._editable) {\n\t\t\t// TODO: handle cancellation\n\t\t\tawait createCancelablePromise((token) =>\n\t\t\t\tthis._proxy.$onSaveAs(\n\t\t\t\t\tthis._editorResource,\n\t\t\t\t\tthis.viewType,\n\t\t\t\t\ttargetResource,\n\t\t\t\t\ttoken,\n\t\t\t\t),\n\t\t\t);\n\t\t\tthis.change(() => {\n\t\t\t\tthis._savePoint = this._currentEditIndex;\n\t\t\t});\n\t\t\treturn true;\n\t\t} else {\n\t\t\t// Since the editor is readonly, just copy the file over\n\t\t\tawait this.fileService.copy(\n\t\t\t\tresource,\n\t\t\t\ttargetResource,\n\t\t\t\tfalse /* overwrite */,\n\t\t\t);\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic get canHotExit() {\n\t\treturn (\n\t\t\ttypeof this._backupId === \"string\" &&\n\t\t\tthis._hotExitState.type === HotExitState.Type.Allowed\n\t\t);\n\t}\n\n\tpublic async backup(token: CancellationToken): Promise<IWorkingCopyBackup> {\n\t\tconst editors = this._getEditors();\n\t\tif (!editors.length) {\n\t\t\tthrow new Error(\"No editors found for resource, cannot back up\");\n\t\t}\n\t\tconst primaryEditor = editors[0];\n\n\t\tconst backupMeta: CustomDocumentBackupData = {\n\t\t\tviewType: this.viewType,\n\t\t\teditorResource: this._editorResource,\n\t\t\tbackupId: \"\",\n\t\t\textension: primaryEditor.extension\n\t\t\t\t? {\n\t\t\t\t\t\tid: primaryEditor.extension.id.value,\n\t\t\t\t\t\tlocation: primaryEditor.extension.location!,\n\t\t\t\t\t}\n\t\t\t\t: undefined,\n\t\t\twebview: {\n\t\t\t\torigin: primaryEditor.webview.origin,\n\t\t\t\toptions: primaryEditor.webview.options,\n\t\t\t\tstate: primaryEditor.webview.state,\n\t\t\t},\n\t\t};\n\n\t\tconst backupData: IWorkingCopyBackup = {\n\t\t\tmeta: backupMeta,\n\t\t};\n\n\t\tif (!this._editable) {\n\t\t\treturn backupData;\n\t\t}\n\n\t\tif (this._hotExitState.type === HotExitState.Type.Pending) {\n\t\t\tthis._hotExitState.operation.cancel();\n\t\t}\n\n\t\tconst pendingState = new HotExitState.Pending(\n\t\t\tcreateCancelablePromise((token) =>\n\t\t\t\tthis._proxy.$backup(\n\t\t\t\t\tthis._editorResource.toJSON(),\n\t\t\t\t\tthis.viewType,\n\t\t\t\t\ttoken,\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\t\tthis._hotExitState = pendingState;\n\n\t\ttoken.onCancellationRequested(() => {\n\t\t\tpendingState.operation.cancel();\n\t\t});\n\n\t\tlet errorMessage = \"\";\n\t\ttry {\n\t\t\tconst backupId = await pendingState.operation;\n\t\t\t// Make sure state has not changed in the meantime\n\t\t\tif (this._hotExitState === pendingState) {\n\t\t\t\tthis._hotExitState = HotExitState.Allowed;\n\t\t\t\tbackupData.meta!.backupId = backupId;\n\t\t\t\tthis._backupId = backupId;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tif (isCancellationError(e)) {\n\t\t\t\t// This is expected\n\t\t\t\tthrow e;\n\t\t\t}\n\n\t\t\t// Otherwise it could be a real error. Make sure state has not changed in the meantime.\n\t\t\tif (this._hotExitState === pendingState) {\n\t\t\t\tthis._hotExitState = HotExitState.NotAllowed;\n\t\t\t}\n\t\t\tif (e.message) {\n\t\t\t\terrorMessage = e.message;\n\t\t\t}\n\t\t}\n\n\t\tif (this._hotExitState === HotExitState.Allowed) {\n\t\t\treturn backupData;\n\t\t}\n\n\t\tthrow new Error(`Cannot backup in this state: ${errorMessage}`);\n\t}\n}\n"],
  "mappings": "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",
  "names": ["CustomEditorModelType", "HotExitState", "Type", "token"]
}
