{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadCustomEditors.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { multibyteAwareBtoa } from '../../../base/browser/dom.js';\nimport { CancelablePromise, createCancelablePromise } from '../../../base/common/async.js';\nimport { VSBuffer } from '../../../base/common/buffer.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { isCancellationError, onUnexpectedError } from '../../../base/common/errors.js';\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { Disposable, DisposableMap, DisposableStore, IReference } from '../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { basename } from '../../../base/common/path.js';\nimport { isEqual, isEqualOrParent, toLocalResource } from '../../../base/common/resources.js';\nimport { URI, UriComponents } from '../../../base/common/uri.js';\nimport { generateUuid } from '../../../base/common/uuid.js';\nimport { localize } from '../../../nls.js';\nimport { IFileDialogService } from '../../../platform/dialogs/common/dialogs.js';\nimport { FileOperation, IFileService } from '../../../platform/files/common/files.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { ILabelService } from '../../../platform/label/common/label.js';\nimport { IStorageService } from '../../../platform/storage/common/storage.js';\nimport { IUndoRedoService, UndoRedoElementType } from '../../../platform/undoRedo/common/undoRedo.js';\nimport { MainThreadWebviewPanels } from './mainThreadWebviewPanels.js';\nimport { MainThreadWebviews, reviveWebviewExtension } from './mainThreadWebviews.js';\nimport * as extHostProtocol from '../common/extHost.protocol.js';\nimport { IRevertOptions, ISaveOptions } from '../../common/editor.js';\nimport { CustomEditorInput } from '../../contrib/customEditor/browser/customEditorInput.js';\nimport { CustomDocumentBackupData } from '../../contrib/customEditor/browser/customEditorInputFactory.js';\nimport { ICustomEditorModel, ICustomEditorService } from '../../contrib/customEditor/common/customEditor.js';\nimport { CustomTextEditorModel } from '../../contrib/customEditor/common/customTextEditorModel.js';\nimport { ExtensionKeyedWebviewOriginStore, WebviewExtensionDescription } from '../../contrib/webview/browser/webview.js';\nimport { WebviewInput } from '../../contrib/webviewPanel/browser/webviewEditorInput.js';\nimport { IWebviewWorkbenchService } from '../../contrib/webviewPanel/browser/webviewWorkbenchService.js';\nimport { editorGroupToColumn } from '../../services/editor/common/editorGroupColumn.js';\nimport { IEditorGroupsService } from '../../services/editor/common/editorGroupsService.js';\nimport { IEditorService } from '../../services/editor/common/editorService.js';\nimport { IWorkbenchEnvironmentService } from '../../services/environment/common/environmentService.js';\nimport { IExtensionService } from '../../services/extensions/common/extensions.js';\nimport { IExtHostContext } from '../../services/extensions/common/extHostCustomers.js';\nimport { IPathService } from '../../services/path/common/pathService.js';\nimport { ResourceWorkingCopy } from '../../services/workingCopy/common/resourceWorkingCopy.js';\nimport { IWorkingCopy, IWorkingCopyBackup, IWorkingCopySaveEvent, NO_TYPE_ID, WorkingCopyCapabilities } from '../../services/workingCopy/common/workingCopy.js';\nimport { IWorkingCopyFileService, WorkingCopyFileEvent } from '../../services/workingCopy/common/workingCopyFileService.js';\nimport { IWorkingCopyService } from '../../services/workingCopy/common/workingCopyService.js';\n\nconst enum CustomEditorModelType {\n\tCustom,\n\tText,\n}\n\nexport class MainThreadCustomEditors extends Disposable implements extHostProtocol.MainThreadCustomEditorsShape {\n\n\tprivate readonly _proxyCustomEditors: extHostProtocol.ExtHostCustomEditorsShape;\n\n\tprivate readonly _editorProviders = this._register(new DisposableMap<string>());\n\n\tprivate readonly _editorRenameBackups = new Map<string, CustomDocumentBackupData>();\n\n\tprivate readonly _webviewOriginStore: ExtensionKeyedWebviewOriginStore;\n\n\tconstructor(\n\t\tcontext: IExtHostContext,\n\t\tprivate readonly mainThreadWebview: MainThreadWebviews,\n\t\tprivate readonly mainThreadWebviewPanels: MainThreadWebviewPanels,\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IWorkingCopyService workingCopyService: IWorkingCopyService,\n\t\t@IWorkingCopyFileService workingCopyFileService: IWorkingCopyFileService,\n\t\t@ICustomEditorService private readonly _customEditorService: ICustomEditorService,\n\t\t@IEditorGroupsService private readonly _editorGroupService: IEditorGroupsService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IWebviewWorkbenchService private readonly _webviewWorkbenchService: IWebviewWorkbenchService,\n\t) {\n\t\tsuper();\n\n\t\tthis._webviewOriginStore = new ExtensionKeyedWebviewOriginStore('mainThreadCustomEditors.origins', storageService);\n\n\t\tthis._proxyCustomEditors = context.getProxy(extHostProtocol.ExtHostContext.ExtHostCustomEditors);\n\n\t\tthis._register(workingCopyFileService.registerWorkingCopyProvider((editorResource) => {\n\t\t\tconst matchedWorkingCopies: IWorkingCopy[] = [];\n\n\t\t\tfor (const workingCopy of workingCopyService.workingCopies) {\n\t\t\t\tif (workingCopy instanceof MainThreadCustomEditorModel) {\n\t\t\t\t\tif (isEqualOrParent(editorResource, workingCopy.editorResource)) {\n\t\t\t\t\t\tmatchedWorkingCopies.push(workingCopy);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn matchedWorkingCopies;\n\t\t}));\n\n\t\t// This reviver's only job is to activate custom editor extensions.\n\t\tthis._register(_webviewWorkbenchService.registerResolver({\n\t\t\tcanResolve: (webview: WebviewInput) => {\n\t\t\t\tif (webview instanceof CustomEditorInput) {\n\t\t\t\t\textensionService.activateByEvent(`onCustomEditor:${webview.viewType}`);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tresolveWebview: () => { throw new Error('not implemented'); }\n\t\t}));\n\n\t\t// Working copy operations\n\t\tthis._register(workingCopyFileService.onWillRunWorkingCopyFileOperation(async e => this.onWillRunWorkingCopyFileOperation(e)));\n\t}\n\n\tpublic $registerTextEditorProvider(extensionData: extHostProtocol.WebviewExtensionDescription, viewType: string, options: extHostProtocol.IWebviewPanelOptions, capabilities: extHostProtocol.CustomTextEditorCapabilities, serializeBuffersForPostMessage: boolean): void {\n\t\tthis.registerEditorProvider(CustomEditorModelType.Text, reviveWebviewExtension(extensionData), viewType, options, capabilities, true, serializeBuffersForPostMessage);\n\t}\n\n\tpublic $registerCustomEditorProvider(extensionData: extHostProtocol.WebviewExtensionDescription, viewType: string, options: extHostProtocol.IWebviewPanelOptions, supportsMultipleEditorsPerDocument: boolean, serializeBuffersForPostMessage: boolean): void {\n\t\tthis.registerEditorProvider(CustomEditorModelType.Custom, reviveWebviewExtension(extensionData), viewType, options, {}, supportsMultipleEditorsPerDocument, serializeBuffersForPostMessage);\n\t}\n\n\tprivate registerEditorProvider(\n\t\tmodelType: CustomEditorModelType,\n\t\textension: WebviewExtensionDescription,\n\t\tviewType: string,\n\t\toptions: extHostProtocol.IWebviewPanelOptions,\n\t\tcapabilities: extHostProtocol.CustomTextEditorCapabilities,\n\t\tsupportsMultipleEditorsPerDocument: boolean,\n\t\tserializeBuffersForPostMessage: boolean,\n\t): void {\n\t\tif (this._editorProviders.has(viewType)) {\n\t\t\tthrow new Error(`Provider for ${viewType} already registered`);\n\t\t}\n\n\t\tconst disposables = new DisposableStore();\n\n\t\tdisposables.add(this._customEditorService.registerCustomEditorCapabilities(viewType, {\n\t\t\tsupportsMultipleEditorsPerDocument\n\t\t}));\n\n\t\tdisposables.add(this._webviewWorkbenchService.registerResolver({\n\t\t\tcanResolve: (webviewInput) => {\n\t\t\t\treturn webviewInput instanceof CustomEditorInput && webviewInput.viewType === viewType;\n\t\t\t},\n\t\t\tresolveWebview: async (webviewInput: CustomEditorInput, cancellation: CancellationToken) => {\n\t\t\t\tconst handle = generateUuid();\n\t\t\t\tconst resource = webviewInput.resource;\n\n\t\t\t\twebviewInput.webview.origin = this._webviewOriginStore.getOrigin(viewType, extension.id);\n\n\t\t\t\tthis.mainThreadWebviewPanels.addWebviewInput(handle, webviewInput, { serializeBuffersForPostMessage });\n\t\t\t\twebviewInput.webview.options = options;\n\t\t\t\twebviewInput.webview.extension = extension;\n\n\t\t\t\t// If there's an old resource this was a move and we must resolve the backup at the same time as the webview\n\t\t\t\t// This is because the backup must be ready upon model creation, and the input resolve method comes after\n\t\t\t\tlet backupId = webviewInput.backupId;\n\t\t\t\tif (webviewInput.oldResource && !webviewInput.backupId) {\n\t\t\t\t\tconst backup = this._editorRenameBackups.get(webviewInput.oldResource.toString());\n\t\t\t\t\tbackupId = backup?.backupId;\n\t\t\t\t\tthis._editorRenameBackups.delete(webviewInput.oldResource.toString());\n\t\t\t\t}\n\n\t\t\t\tlet modelRef: IReference<ICustomEditorModel>;\n\t\t\t\ttry {\n\t\t\t\t\tmodelRef = await this.getOrCreateCustomEditorModel(modelType, resource, viewType, { backupId }, cancellation);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tonUnexpectedError(error);\n\t\t\t\t\twebviewInput.webview.setHtml(this.mainThreadWebview.getWebviewResolvedFailedContent(viewType));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (cancellation.isCancellationRequested) {\n\t\t\t\t\tmodelRef.dispose();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\twebviewInput.webview.onDidDispose(() => {\n\t\t\t\t\t// If the model is still dirty, make sure we have time to save it\n\t\t\t\t\tif (modelRef.object.isDirty()) {\n\t\t\t\t\t\tconst sub = modelRef.object.onDidChangeDirty(() => {\n\t\t\t\t\t\t\tif (!modelRef.object.isDirty()) {\n\t\t\t\t\t\t\t\tsub.dispose();\n\t\t\t\t\t\t\t\tmodelRef.dispose();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tmodelRef.dispose();\n\t\t\t\t});\n\n\t\t\t\tif (capabilities.supportsMove) {\n\t\t\t\t\twebviewInput.onMove(async (newResource: URI) => {\n\t\t\t\t\t\tconst oldModel = modelRef;\n\t\t\t\t\t\tmodelRef = await this.getOrCreateCustomEditorModel(modelType, newResource, viewType, {}, CancellationToken.None);\n\t\t\t\t\t\tthis._proxyCustomEditors.$onMoveCustomEditor(handle, newResource, viewType);\n\t\t\t\t\t\toldModel.dispose();\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tawait this._proxyCustomEditors.$resolveCustomEditor(resource, handle, viewType, {\n\t\t\t\t\t\ttitle: webviewInput.getTitle(),\n\t\t\t\t\t\tcontentOptions: webviewInput.webview.contentOptions,\n\t\t\t\t\t\toptions: webviewInput.webview.options,\n\t\t\t\t\t\tactive: webviewInput === this._editorService.activeEditor,\n\t\t\t\t\t}, editorGroupToColumn(this._editorGroupService, webviewInput.group || 0), cancellation);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tonUnexpectedError(error);\n\t\t\t\t\twebviewInput.webview.setHtml(this.mainThreadWebview.getWebviewResolvedFailedContent(viewType));\n\t\t\t\t\tmodelRef.dispose();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tthis._editorProviders.set(viewType, disposables);\n\t}\n\n\tpublic $unregisterEditorProvider(viewType: string): void {\n\t\tif (!this._editorProviders.has(viewType)) {\n\t\t\tthrow new Error(`No provider for ${viewType} registered`);\n\t\t}\n\n\t\tthis._editorProviders.deleteAndDispose(viewType);\n\n\t\tthis._customEditorService.models.disposeAllModelsForView(viewType);\n\t}\n\n\tprivate async getOrCreateCustomEditorModel(\n\t\tmodelType: CustomEditorModelType,\n\t\tresource: URI,\n\t\tviewType: string,\n\t\toptions: { backupId?: string },\n\t\tcancellation: CancellationToken,\n\t): Promise<IReference<ICustomEditorModel>> {\n\t\tconst existingModel = this._customEditorService.models.tryRetain(resource, viewType);\n\t\tif (existingModel) {\n\t\t\treturn existingModel;\n\t\t}\n\n\t\tswitch (modelType) {\n\t\t\tcase CustomEditorModelType.Text:\n\t\t\t\t{\n\t\t\t\t\tconst model = CustomTextEditorModel.create(this._instantiationService, viewType, resource);\n\t\t\t\t\treturn this._customEditorService.models.add(resource, viewType, model);\n\t\t\t\t}\n\t\t\tcase CustomEditorModelType.Custom:\n\t\t\t\t{\n\t\t\t\t\tconst model = MainThreadCustomEditorModel.create(this._instantiationService, this._proxyCustomEditors, viewType, resource, options, () => {\n\t\t\t\t\t\treturn Array.from(this.mainThreadWebviewPanels.webviewInputs)\n\t\t\t\t\t\t\t.filter(editor => editor instanceof CustomEditorInput && isEqual(editor.resource, resource)) as CustomEditorInput[];\n\t\t\t\t\t}, cancellation);\n\t\t\t\t\treturn this._customEditorService.models.add(resource, viewType, model);\n\t\t\t\t}\n\t\t}\n\t}\n\n\tpublic async $onDidEdit(resourceComponents: UriComponents, viewType: string, editId: number, label: string | undefined): Promise<void> {\n\t\tconst model = await this.getCustomEditorModel(resourceComponents, viewType);\n\t\tmodel.pushEdit(editId, label);\n\t}\n\n\tpublic async $onContentChange(resourceComponents: UriComponents, viewType: string): Promise<void> {\n\t\tconst model = await this.getCustomEditorModel(resourceComponents, viewType);\n\t\tmodel.changeContent();\n\t}\n\n\tprivate async getCustomEditorModel(resourceComponents: UriComponents, viewType: string) {\n\t\tconst resource = URI.revive(resourceComponents);\n\t\tconst model = await this._customEditorService.models.get(resource, viewType);\n\t\tif (!model || !(model instanceof MainThreadCustomEditorModel)) {\n\t\t\tthrow new Error('Could not find model for webview editor');\n\t\t}\n\t\treturn model;\n\t}\n\n\t//#region Working Copy\n\tprivate async onWillRunWorkingCopyFileOperation(e: WorkingCopyFileEvent) {\n\t\tif (e.operation !== FileOperation.MOVE) {\n\t\t\treturn;\n\t\t}\n\t\te.waitUntil((async () => {\n\t\t\tconst models = [];\n\t\t\tfor (const file of e.files) {\n\t\t\t\tif (file.source) {\n\t\t\t\t\tmodels.push(...(await this._customEditorService.models.getAllModels(file.source)));\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const model of models) {\n\t\t\t\tif (model instanceof MainThreadCustomEditorModel && model.isDirty()) {\n\t\t\t\t\tconst workingCopy = await model.backup(CancellationToken.None);\n\t\t\t\t\tif (workingCopy.meta) {\n\t\t\t\t\t\t// This cast is safe because we do an instanceof check above and a custom document backup data is always returned\n\t\t\t\t\t\tthis._editorRenameBackups.set(model.editorResource.toString(), workingCopy.meta as CustomDocumentBackupData);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})());\n\t}\n\t//#endregion\n}\n\nnamespace HotExitState {\n\texport const enum Type {\n\t\tAllowed,\n\t\tNotAllowed,\n\t\tPending,\n\t}\n\n\texport const Allowed = Object.freeze({ type: Type.Allowed } as const);\n\texport const NotAllowed = Object.freeze({ type: Type.NotAllowed } as const);\n\n\texport class Pending {\n\t\treadonly type = Type.Pending;\n\n\t\tconstructor(\n\t\t\tpublic readonly operation: CancelablePromise<string>,\n\t\t) { }\n\t}\n\n\texport type State = typeof Allowed | typeof NotAllowed | Pending;\n}\n\n\nclass MainThreadCustomEditorModel extends ResourceWorkingCopy implements ICustomEditorModel {\n\n\tprivate _fromBackup: boolean = false;\n\tprivate _hotExitState: HotExitState.State = HotExitState.Allowed;\n\tprivate _backupId: string | undefined;\n\n\tprivate _currentEditIndex: number = -1;\n\tprivate _savePoint: number = -1;\n\tprivate readonly _edits: Array<number> = [];\n\tprivate _isDirtyFromContentChange = false;\n\n\tprivate _ongoingSave?: CancelablePromise<void>;\n\n\t// TODO@mjbvz consider to enable a `typeId` that is specific for custom\n\t// editors. Using a distinct `typeId` allows the working copy to have\n\t// any resource (including file based resources) even if other working\n\t// copies exist with the same resource.\n\t//\n\t// IMPORTANT: changing the `typeId` has an impact on backups for this\n\t// working copy. Any value that is not the empty string will be used\n\t// as seed to the backup. Only change the `typeId` if you have implemented\n\t// a fallback solution to resolve any existing backups that do not have\n\t// this seed.\n\treadonly typeId = NO_TYPE_ID;\n\n\tpublic static async create(\n\t\tinstantiationService: IInstantiationService,\n\t\tproxy: extHostProtocol.ExtHostCustomEditorsShape,\n\t\tviewType: string,\n\t\tresource: URI,\n\t\toptions: { backupId?: string },\n\t\tgetEditors: () => CustomEditorInput[],\n\t\tcancellation: CancellationToken,\n\t): Promise<MainThreadCustomEditorModel> {\n\t\tconst editors = getEditors();\n\t\tlet untitledDocumentData: VSBuffer | undefined;\n\t\tif (editors.length !== 0) {\n\t\t\tuntitledDocumentData = editors[0].untitledDocumentData;\n\t\t}\n\t\tconst { editable } = await proxy.$createCustomDocument(resource, viewType, options.backupId, untitledDocumentData, cancellation);\n\t\treturn instantiationService.createInstance(MainThreadCustomEditorModel, proxy, viewType, resource, !!options.backupId, editable, !!untitledDocumentData, getEditors);\n\t}\n\n\tconstructor(\n\t\tprivate readonly _proxy: extHostProtocol.ExtHostCustomEditorsShape,\n\t\tprivate readonly _viewType: string,\n\t\tprivate readonly _editorResource: URI,\n\t\tfromBackup: boolean,\n\t\tprivate readonly _editable: boolean,\n\t\tstartDirty: boolean,\n\t\tprivate readonly _getEditors: () => CustomEditorInput[],\n\t\t@IFileDialogService private readonly _fileDialogService: IFileDialogService,\n\t\t@IFileService fileService: IFileService,\n\t\t@ILabelService private readonly _labelService: ILabelService,\n\t\t@IUndoRedoService private readonly _undoService: IUndoRedoService,\n\t\t@IWorkbenchEnvironmentService private readonly _environmentService: IWorkbenchEnvironmentService,\n\t\t@IWorkingCopyService workingCopyService: IWorkingCopyService,\n\t\t@IPathService private readonly _pathService: IPathService,\n\t\t@IExtensionService extensionService: IExtensionService,\n\t) {\n\t\tsuper(MainThreadCustomEditorModel.toWorkingCopyResource(_viewType, _editorResource), fileService);\n\n\t\tthis._fromBackup = fromBackup;\n\n\t\tif (_editable) {\n\t\t\tthis._register(workingCopyService.registerWorkingCopy(this));\n\n\t\t\tthis._register(extensionService.onWillStop(e => {\n\t\t\t\tif (!this.isDirty()) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\te.veto((async () => {\n\t\t\t\t\tconst didSave = await this.save();\n\t\t\t\t\tif (!didSave) {\n\t\t\t\t\t\t// Veto\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\treturn false; // Don't veto\n\t\t\t\t})(), localize('vetoExtHostRestart', \"Custom editor '{0}' could not be saved.\", this.name));\n\t\t\t}));\n\t\t}\n\n\t\t// Normally means we're re-opening an untitled file\n\t\tif (startDirty) {\n\t\t\tthis._isDirtyFromContentChange = true;\n\t\t}\n\t}\n\n\tget editorResource() {\n\t\treturn this._editorResource;\n\t}\n\n\toverride dispose() {\n\t\tif (this._editable) {\n\t\t\tthis._undoService.removeElements(this._editorResource);\n\t\t}\n\n\t\tthis._proxy.$disposeCustomDocument(this._editorResource, this._viewType);\n\n\t\tsuper.dispose();\n\t}\n\n\t//#region IWorkingCopy\n\n\t// Make sure each custom editor has a unique resource for backup and edits\n\tprivate static toWorkingCopyResource(viewType: string, resource: URI) {\n\t\tconst authority = viewType.replace(/[^a-z0-9\\-_]/gi, '-');\n\t\tconst path = `/${multibyteAwareBtoa(resource.with({ query: null, fragment: null }).toString(true))}`;\n\t\treturn URI.from({\n\t\t\tscheme: Schemas.vscodeCustomEditor,\n\t\t\tauthority: authority,\n\t\t\tpath: path,\n\t\t\tquery: JSON.stringify(resource.toJSON()),\n\t\t});\n\t}\n\n\tpublic get name() {\n\t\treturn basename(this._labelService.getUriLabel(this._editorResource));\n\t}\n\n\tpublic get capabilities(): WorkingCopyCapabilities {\n\t\treturn this.isUntitled() ? WorkingCopyCapabilities.Untitled : WorkingCopyCapabilities.None;\n\t}\n\n\tpublic isDirty(): boolean {\n\t\tif (this._isDirtyFromContentChange) {\n\t\t\treturn true;\n\t\t}\n\t\tif (this._edits.length > 0) {\n\t\t\treturn this._savePoint !== this._currentEditIndex;\n\t\t}\n\t\treturn this._fromBackup;\n\t}\n\n\tprivate isUntitled() {\n\t\treturn this._editorResource.scheme === Schemas.untitled;\n\t}\n\n\tprivate readonly _onDidChangeDirty: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidChangeDirty: Event<void> = this._onDidChangeDirty.event;\n\n\tprivate readonly _onDidChangeContent: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidChangeContent: Event<void> = this._onDidChangeContent.event;\n\n\tprivate readonly _onDidSave: Emitter<IWorkingCopySaveEvent> = this._register(new Emitter<IWorkingCopySaveEvent>());\n\treadonly onDidSave: Event<IWorkingCopySaveEvent> = this._onDidSave.event;\n\n\treadonly onDidChangeReadonly = Event.None;\n\n\t//#endregion\n\n\tpublic isReadonly(): boolean {\n\t\treturn !this._editable;\n\t}\n\n\tpublic get viewType() {\n\t\treturn this._viewType;\n\t}\n\n\tpublic get backupId() {\n\t\treturn this._backupId;\n\t}\n\n\tpublic pushEdit(editId: number, label: string | undefined) {\n\t\tif (!this._editable) {\n\t\t\tthrow new Error('Document is not editable');\n\t\t}\n\n\t\tthis.change(() => {\n\t\t\tthis.spliceEdits(editId);\n\t\t\tthis._currentEditIndex = this._edits.length - 1;\n\t\t});\n\n\t\tthis._undoService.pushElement({\n\t\t\ttype: UndoRedoElementType.Resource,\n\t\t\tresource: this._editorResource,\n\t\t\tlabel: label ?? localize('defaultEditLabel', \"Edit\"),\n\t\t\tcode: 'undoredo.customEditorEdit',\n\t\t\tundo: () => this.undo(),\n\t\t\tredo: () => this.redo(),\n\t\t});\n\t}\n\n\tpublic changeContent() {\n\t\tthis.change(() => {\n\t\t\tthis._isDirtyFromContentChange = true;\n\t\t});\n\t}\n\n\tprivate async undo(): Promise<void> {\n\t\tif (!this._editable) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._currentEditIndex < 0) {\n\t\t\t// nothing to undo\n\t\t\treturn;\n\t\t}\n\n\t\tconst undoneEdit = this._edits[this._currentEditIndex];\n\t\tthis.change(() => {\n\t\t\t--this._currentEditIndex;\n\t\t});\n\t\tawait this._proxy.$undo(this._editorResource, this.viewType, undoneEdit, this.isDirty());\n\t}\n\n\tprivate async redo(): Promise<void> {\n\t\tif (!this._editable) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._currentEditIndex >= this._edits.length - 1) {\n\t\t\t// nothing to redo\n\t\t\treturn;\n\t\t}\n\n\t\tconst redoneEdit = this._edits[this._currentEditIndex + 1];\n\t\tthis.change(() => {\n\t\t\t++this._currentEditIndex;\n\t\t});\n\t\tawait this._proxy.$redo(this._editorResource, this.viewType, redoneEdit, this.isDirty());\n\t}\n\n\tprivate spliceEdits(editToInsert?: number) {\n\t\tconst start = this._currentEditIndex + 1;\n\t\tconst toRemove = this._edits.length - this._currentEditIndex;\n\n\t\tconst removedEdits = typeof editToInsert === 'number'\n\t\t\t? this._edits.splice(start, toRemove, editToInsert)\n\t\t\t: this._edits.splice(start, toRemove);\n\n\t\tif (removedEdits.length) {\n\t\t\tthis._proxy.$disposeEdits(this._editorResource, this._viewType, removedEdits);\n\t\t}\n\t}\n\n\tprivate change(makeEdit: () => void): void {\n\t\tconst wasDirty = this.isDirty();\n\t\tmakeEdit();\n\t\tthis._onDidChangeContent.fire();\n\n\t\tif (this.isDirty() !== wasDirty) {\n\t\t\tthis._onDidChangeDirty.fire();\n\t\t}\n\t}\n\n\tpublic async revert(options?: IRevertOptions) {\n\t\tif (!this._editable) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._currentEditIndex === this._savePoint && !this._isDirtyFromContentChange && !this._fromBackup) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!options?.soft) {\n\t\t\tthis._proxy.$revert(this._editorResource, this.viewType, CancellationToken.None);\n\t\t}\n\n\t\tthis.change(() => {\n\t\t\tthis._isDirtyFromContentChange = false;\n\t\t\tthis._fromBackup = false;\n\t\t\tthis._currentEditIndex = this._savePoint;\n\t\t\tthis.spliceEdits();\n\t\t});\n\t}\n\n\tpublic async save(options?: ISaveOptions): Promise<boolean> {\n\t\tconst result = !!await this.saveCustomEditor(options);\n\n\t\t// Emit Save Event\n\t\tif (result) {\n\t\t\tthis._onDidSave.fire({ reason: options?.reason, source: options?.source });\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic async saveCustomEditor(options?: ISaveOptions): Promise<URI | undefined> {\n\t\tif (!this._editable) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (this.isUntitled()) {\n\t\t\tconst targetUri = await this.suggestUntitledSavePath(options);\n\t\t\tif (!targetUri) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tawait this.saveCustomEditorAs(this._editorResource, targetUri, options);\n\t\t\treturn targetUri;\n\t\t}\n\n\t\tconst savePromise = createCancelablePromise(token => this._proxy.$onSave(this._editorResource, this.viewType, token));\n\t\tthis._ongoingSave?.cancel();\n\t\tthis._ongoingSave = savePromise;\n\n\t\ttry {\n\t\t\tawait savePromise;\n\n\t\t\tif (this._ongoingSave === savePromise) { // Make sure we are still doing the same save\n\t\t\t\tthis.change(() => {\n\t\t\t\t\tthis._isDirtyFromContentChange = false;\n\t\t\t\t\tthis._savePoint = this._currentEditIndex;\n\t\t\t\t\tthis._fromBackup = false;\n\t\t\t\t});\n\t\t\t}\n\t\t} finally {\n\t\t\tif (this._ongoingSave === savePromise) { // Make sure we are still doing the same save\n\t\t\t\tthis._ongoingSave = undefined;\n\t\t\t}\n\t\t}\n\n\t\treturn this._editorResource;\n\t}\n\n\tprivate suggestUntitledSavePath(options: ISaveOptions | undefined): Promise<URI | undefined> {\n\t\tif (!this.isUntitled()) {\n\t\t\tthrow new Error('Resource is not untitled');\n\t\t}\n\n\t\tconst remoteAuthority = this._environmentService.remoteAuthority;\n\t\tconst localResource = toLocalResource(this._editorResource, remoteAuthority, this._pathService.defaultUriScheme);\n\n\t\treturn this._fileDialogService.pickFileToSave(localResource, options?.availableFileSystems);\n\t}\n\n\tpublic async saveCustomEditorAs(resource: URI, targetResource: URI, _options?: ISaveOptions): Promise<boolean> {\n\t\tif (this._editable) {\n\t\t\t// TODO: handle cancellation\n\t\t\tawait createCancelablePromise(token => this._proxy.$onSaveAs(this._editorResource, this.viewType, targetResource, token));\n\t\t\tthis.change(() => {\n\t\t\t\tthis._savePoint = this._currentEditIndex;\n\t\t\t});\n\t\t\treturn true;\n\t\t} else {\n\t\t\t// Since the editor is readonly, just copy the file over\n\t\t\tawait this.fileService.copy(resource, targetResource, false /* overwrite */);\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic get canHotExit() { return typeof this._backupId === 'string' && this._hotExitState.type === HotExitState.Type.Allowed; }\n\n\tpublic async backup(token: CancellationToken): Promise<IWorkingCopyBackup> {\n\t\tconst editors = this._getEditors();\n\t\tif (!editors.length) {\n\t\t\tthrow new Error('No editors found for resource, cannot back up');\n\t\t}\n\t\tconst primaryEditor = editors[0];\n\n\t\tconst backupMeta: CustomDocumentBackupData = {\n\t\t\tviewType: this.viewType,\n\t\t\teditorResource: this._editorResource,\n\t\t\tbackupId: '',\n\t\t\textension: primaryEditor.extension ? {\n\t\t\t\tid: primaryEditor.extension.id.value,\n\t\t\t\tlocation: primaryEditor.extension.location!,\n\t\t\t} : undefined,\n\t\t\twebview: {\n\t\t\t\torigin: primaryEditor.webview.origin,\n\t\t\t\toptions: primaryEditor.webview.options,\n\t\t\t\tstate: primaryEditor.webview.state,\n\t\t\t}\n\t\t};\n\n\t\tconst backupData: IWorkingCopyBackup = {\n\t\t\tmeta: backupMeta\n\t\t};\n\n\t\tif (!this._editable) {\n\t\t\treturn backupData;\n\t\t}\n\n\t\tif (this._hotExitState.type === HotExitState.Type.Pending) {\n\t\t\tthis._hotExitState.operation.cancel();\n\t\t}\n\n\t\tconst pendingState = new HotExitState.Pending(\n\t\t\tcreateCancelablePromise(token =>\n\t\t\t\tthis._proxy.$backup(this._editorResource.toJSON(), this.viewType, token)));\n\t\tthis._hotExitState = pendingState;\n\n\t\ttoken.onCancellationRequested(() => {\n\t\t\tpendingState.operation.cancel();\n\t\t});\n\n\t\tlet errorMessage = '';\n\t\ttry {\n\t\t\tconst backupId = await pendingState.operation;\n\t\t\t// Make sure state has not changed in the meantime\n\t\t\tif (this._hotExitState === pendingState) {\n\t\t\t\tthis._hotExitState = HotExitState.Allowed;\n\t\t\t\tbackupData.meta!.backupId = backupId;\n\t\t\t\tthis._backupId = backupId;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tif (isCancellationError(e)) {\n\t\t\t\t// This is expected\n\t\t\t\tthrow e;\n\t\t\t}\n\n\t\t\t// Otherwise it could be a real error. Make sure state has not changed in the meantime.\n\t\t\tif (this._hotExitState === pendingState) {\n\t\t\t\tthis._hotExitState = HotExitState.NotAllowed;\n\t\t\t}\n\t\t\tif (e.message) {\n\t\t\t\terrorMessage = e.message;\n\t\t\t}\n\t\t}\n\n\t\tif (this._hotExitState === HotExitState.Allowed) {\n\t\t\treturn backupData;\n\t\t}\n\n\t\tthrow new Error(`Cannot backup in this state: ${errorMessage}`);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,0BAA0B;AACnC,SAAS,mBAAmB,+BAA+B;AAC3D,SAAS,gBAAgB;AACzB,SAAS,yBAAyB;AAClC,SAAS,qBAAqB,yBAAyB;AACvD,SAAS,SAAS,aAAa;AAC/B,SAAS,YAAY,eAAe,iBAAiB,kBAAkB;AACvE,SAAS,eAAe;AACxB,SAAS,gBAAgB;AACzB,SAAS,SAAS,iBAAiB,uBAAuB;AAC1D,SAAS,KAAK,qBAAqB;AACnC,SAAS,oBAAoB;AAC7B,SAAS,gBAAgB;AACzB,SAAS,0BAA0B;AACnC,SAAS,eAAe,oBAAoB;AAC5C,SAAS,6BAA6B;AACtC,SAAS,qBAAqB;AAC9B,SAAS,uBAAuB;AAChC,SAAS,kBAAkB,2BAA2B;AACtD,SAAS,+BAA+B;AACxC,SAAS,oBAAoB,8BAA8B;AAC3D,YAAY,qBAAqB;AACjC,SAAS,gBAAgB,oBAAoB;AAC7C,SAAS,yBAAyB;AAClC,SAAS,gCAAgC;AACzC,SAAS,oBAAoB,4BAA4B;AACzD,SAAS,6BAA6B;AACtC,SAAS,kCAAkC,mCAAmC;AAC9E,SAAS,oBAAoB;AAC7B,SAAS,gCAAgC;AACzC,SAAS,2BAA2B;AACpC,SAAS,4BAA4B;AACrC,SAAS,sBAAsB;AAC/B,SAAS,oCAAoC;AAC7C,SAAS,yBAAyB;AAClC,SAAS,uBAAuB;AAChC,SAAS,oBAAoB;AAC7B,SAAS,2BAA2B;AACpC,SAAS,cAAc,oBAAoB,uBAAuB,YAAY,+BAA+B;AAC7G,SAAS,yBAAyB,4BAA4B;AAC9D,SAAS,2BAA2B;AAEpC,IAAW,wBAAX,kBAAWA,2BAAX;AACC,EAAAA,8CAAA;AACA,EAAAA,8CAAA;AAFU,SAAAA;AAAA,GAAA;AAKJ,IAAM,0BAAN,cAAsC,WAAmE;AAAA,EAU/G,YACC,SACiB,mBACA,yBACE,kBACF,gBACI,oBACI,wBACc,sBACA,qBACN,gBACO,uBACG,0BAC1C;AACD,UAAM;AAZW;AACA;AAKsB;AACA;AACN;AACO;AACG;AAI3C,SAAK,sBAAsB,IAAI,iCAAiC,mCAAmC,cAAc;AAEjH,SAAK,sBAAsB,QAAQ,SAAS,gBAAgB,eAAe,oBAAoB;AAE/F,SAAK,UAAU,uBAAuB,4BAA4B,CAAC,mBAAmB;AACrF,YAAM,uBAAuC,CAAC;AAE9C,iBAAW,eAAe,mBAAmB,eAAe;AAC3D,YAAI,uBAAuB,6BAA6B;AACvD,cAAI,gBAAgB,gBAAgB,YAAY,cAAc,GAAG;AAChE,iCAAqB,KAAK,WAAW;AAAA,UACtC;AAAA,QACD;AAAA,MACD;AACA,aAAO;AAAA,IACR,CAAC,CAAC;AAGF,SAAK,UAAU,yBAAyB,iBAAiB;AAAA,MACxD,YAAY,wBAAC,YAA0B;AACtC,YAAI,mBAAmB,mBAAmB;AACzC,2BAAiB,gBAAgB,kBAAkB,QAAQ,QAAQ,EAAE;AAAA,QACtE;AACA,eAAO;AAAA,MACR,GALY;AAAA,MAMZ,gBAAgB,6BAAM;AAAE,cAAM,IAAI,MAAM,iBAAiB;AAAA,MAAG,GAA5C;AAAA,IACjB,CAAC,CAAC;AAGF,SAAK,UAAU,uBAAuB,kCAAkC,OAAM,MAAK,KAAK,kCAAkC,CAAC,CAAC,CAAC;AAAA,EAC9H;AAAA,EA5GD,OAoDgH;AAAA;AAAA;AAAA,EAE9F;AAAA,EAEA,mBAAmB,KAAK,UAAU,IAAI,cAAsB,CAAC;AAAA,EAE7D,uBAAuB,oBAAI,IAAsC;AAAA,EAEjE;AAAA,EAkDV,4BAA4B,eAA4D,UAAkB,SAA+C,cAA4D,gCAA+C;AAC1Q,SAAK,uBAAuB,cAA4B,uBAAuB,aAAa,GAAG,UAAU,SAAS,cAAc,MAAM,8BAA8B;AAAA,EACrK;AAAA,EAEO,8BAA8B,eAA4D,UAAkB,SAA+C,oCAA6C,gCAA+C;AAC7P,SAAK,uBAAuB,gBAA8B,uBAAuB,aAAa,GAAG,UAAU,SAAS,CAAC,GAAG,oCAAoC,8BAA8B;AAAA,EAC3L;AAAA,EAEQ,uBACP,WACA,WACA,UACA,SACA,cACA,oCACA,gCACO;AACP,QAAI,KAAK,iBAAiB,IAAI,QAAQ,GAAG;AACxC,YAAM,IAAI,MAAM,gBAAgB,QAAQ,qBAAqB;AAAA,IAC9D;AAEA,UAAM,cAAc,IAAI,gBAAgB;AAExC,gBAAY,IAAI,KAAK,qBAAqB,iCAAiC,UAAU;AAAA,MACpF;AAAA,IACD,CAAC,CAAC;AAEF,gBAAY,IAAI,KAAK,yBAAyB,iBAAiB;AAAA,MAC9D,YAAY,wBAAC,iBAAiB;AAC7B,eAAO,wBAAwB,qBAAqB,aAAa,aAAa;AAAA,MAC/E,GAFY;AAAA,MAGZ,gBAAgB,8BAAO,cAAiC,iBAAoC;AAC3F,cAAM,SAAS,aAAa;AAC5B,cAAM,WAAW,aAAa;AAE9B,qBAAa,QAAQ,SAAS,KAAK,oBAAoB,UAAU,UAAU,UAAU,EAAE;AAEvF,aAAK,wBAAwB,gBAAgB,QAAQ,cAAc,EAAE,+BAA+B,CAAC;AACrG,qBAAa,QAAQ,UAAU;AAC/B,qBAAa,QAAQ,YAAY;AAIjC,YAAI,WAAW,aAAa;AAC5B,YAAI,aAAa,eAAe,CAAC,aAAa,UAAU;AACvD,gBAAM,SAAS,KAAK,qBAAqB,IAAI,aAAa,YAAY,SAAS,CAAC;AAChF,qBAAW,QAAQ;AACnB,eAAK,qBAAqB,OAAO,aAAa,YAAY,SAAS,CAAC;AAAA,QACrE;AAEA,YAAI;AACJ,YAAI;AACH,qBAAW,MAAM,KAAK,6BAA6B,WAAW,UAAU,UAAU,EAAE,SAAS,GAAG,YAAY;AAAA,QAC7G,SAAS,OAAO;AACf,4BAAkB,KAAK;AACvB,uBAAa,QAAQ,QAAQ,KAAK,kBAAkB,gCAAgC,QAAQ,CAAC;AAC7F;AAAA,QACD;AAEA,YAAI,aAAa,yBAAyB;AACzC,mBAAS,QAAQ;AACjB;AAAA,QACD;AAEA,qBAAa,QAAQ,aAAa,MAAM;AAEvC,cAAI,SAAS,OAAO,QAAQ,GAAG;AAC9B,kBAAM,MAAM,SAAS,OAAO,iBAAiB,MAAM;AAClD,kBAAI,CAAC,SAAS,OAAO,QAAQ,GAAG;AAC/B,oBAAI,QAAQ;AACZ,yBAAS,QAAQ;AAAA,cAClB;AAAA,YACD,CAAC;AACD;AAAA,UACD;AAEA,mBAAS,QAAQ;AAAA,QAClB,CAAC;AAED,YAAI,aAAa,cAAc;AAC9B,uBAAa,OAAO,OAAO,gBAAqB;AAC/C,kBAAM,WAAW;AACjB,uBAAW,MAAM,KAAK,6BAA6B,WAAW,aAAa,UAAU,CAAC,GAAG,kBAAkB,IAAI;AAC/G,iBAAK,oBAAoB,oBAAoB,QAAQ,aAAa,QAAQ;AAC1E,qBAAS,QAAQ;AAAA,UAClB,CAAC;AAAA,QACF;AAEA,YAAI;AACH,gBAAM,KAAK,oBAAoB,qBAAqB,UAAU,QAAQ,UAAU;AAAA,YAC/E,OAAO,aAAa,SAAS;AAAA,YAC7B,gBAAgB,aAAa,QAAQ;AAAA,YACrC,SAAS,aAAa,QAAQ;AAAA,YAC9B,QAAQ,iBAAiB,KAAK,eAAe;AAAA,UAC9C,GAAG,oBAAoB,KAAK,qBAAqB,aAAa,SAAS,CAAC,GAAG,YAAY;AAAA,QACxF,SAAS,OAAO;AACf,4BAAkB,KAAK;AACvB,uBAAa,QAAQ,QAAQ,KAAK,kBAAkB,gCAAgC,QAAQ,CAAC;AAC7F,mBAAS,QAAQ;AACjB;AAAA,QACD;AAAA,MACD,GAtEgB;AAAA,IAuEjB,CAAC,CAAC;AAEF,SAAK,iBAAiB,IAAI,UAAU,WAAW;AAAA,EAChD;AAAA,EAEO,0BAA0B,UAAwB;AACxD,QAAI,CAAC,KAAK,iBAAiB,IAAI,QAAQ,GAAG;AACzC,YAAM,IAAI,MAAM,mBAAmB,QAAQ,aAAa;AAAA,IACzD;AAEA,SAAK,iBAAiB,iBAAiB,QAAQ;AAE/C,SAAK,qBAAqB,OAAO,wBAAwB,QAAQ;AAAA,EAClE;AAAA,EAEA,MAAc,6BACb,WACA,UACA,UACA,SACA,cAC0C;AAC1C,UAAM,gBAAgB,KAAK,qBAAqB,OAAO,UAAU,UAAU,QAAQ;AACnF,QAAI,eAAe;AAClB,aAAO;AAAA,IACR;AAEA,YAAQ,WAAW;AAAA,MAClB,KAAK,cACJ;AACC,cAAM,QAAQ,sBAAsB,OAAO,KAAK,uBAAuB,UAAU,QAAQ;AACzF,eAAO,KAAK,qBAAqB,OAAO,IAAI,UAAU,UAAU,KAAK;AAAA,MACtE;AAAA,MACD,KAAK,gBACJ;AACC,cAAM,QAAQ,4BAA4B,OAAO,KAAK,uBAAuB,KAAK,qBAAqB,UAAU,UAAU,SAAS,MAAM;AACzI,iBAAO,MAAM,KAAK,KAAK,wBAAwB,aAAa,EAC1D,OAAO,YAAU,kBAAkB,qBAAqB,QAAQ,OAAO,UAAU,QAAQ,CAAC;AAAA,QAC7F,GAAG,YAAY;AACf,eAAO,KAAK,qBAAqB,OAAO,IAAI,UAAU,UAAU,KAAK;AAAA,MACtE;AAAA,IACF;AAAA,EACD;AAAA,EAEA,MAAa,WAAW,oBAAmC,UAAkB,QAAgB,OAA0C;AACtI,UAAM,QAAQ,MAAM,KAAK,qBAAqB,oBAAoB,QAAQ;AAC1E,UAAM,SAAS,QAAQ,KAAK;AAAA,EAC7B;AAAA,EAEA,MAAa,iBAAiB,oBAAmC,UAAiC;AACjG,UAAM,QAAQ,MAAM,KAAK,qBAAqB,oBAAoB,QAAQ;AAC1E,UAAM,cAAc;AAAA,EACrB;AAAA,EAEA,MAAc,qBAAqB,oBAAmC,UAAkB;AACvF,UAAM,WAAW,IAAI,OAAO,kBAAkB;AAC9C,UAAM,QAAQ,MAAM,KAAK,qBAAqB,OAAO,IAAI,UAAU,QAAQ;AAC3E,QAAI,CAAC,SAAS,EAAE,iBAAiB,8BAA8B;AAC9D,YAAM,IAAI,MAAM,yCAAyC;AAAA,IAC1D;AACA,WAAO;AAAA,EACR;AAAA;AAAA,EAGA,MAAc,kCAAkC,GAAyB;AACxE,QAAI,EAAE,cAAc,cAAc,MAAM;AACvC;AAAA,IACD;AACA,MAAE,WAAW,YAAY;AACxB,YAAM,SAAS,CAAC;AAChB,iBAAW,QAAQ,EAAE,OAAO;AAC3B,YAAI,KAAK,QAAQ;AAChB,iBAAO,KAAK,GAAI,MAAM,KAAK,qBAAqB,OAAO,aAAa,KAAK,MAAM,CAAE;AAAA,QAClF;AAAA,MACD;AACA,iBAAW,SAAS,QAAQ;AAC3B,YAAI,iBAAiB,+BAA+B,MAAM,QAAQ,GAAG;AACpE,gBAAM,cAAc,MAAM,MAAM,OAAO,kBAAkB,IAAI;AAC7D,cAAI,YAAY,MAAM;AAErB,iBAAK,qBAAqB,IAAI,MAAM,eAAe,SAAS,GAAG,YAAY,IAAgC;AAAA,UAC5G;AAAA,QACD;AAAA,MACD;AAAA,IACD,GAAG,CAAC;AAAA,EACL;AAAA;AAED;AAvPa,0BAAN;AAAA,EAcJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAtBU;AAyPb,IAAU;AAAA,CAAV,CAAUC,kBAAV;AACQ,MAAW;AAAX,IAAWC,UAAX;AACN,IAAAA,YAAA;AACA,IAAAA,YAAA;AACA,IAAAA,YAAA;AAAA,KAHiB,OAAAD,cAAA,SAAAA,cAAA;AAMX,EAAMA,cAAA,UAAU,OAAO,OAAO,EAAE,MAAM,gBAAa,CAAU;AAC7D,EAAMA,cAAA,aAAa,OAAO,OAAO,EAAE,MAAM,mBAAgB,CAAU;AAAA,EAEnE,MAAM,QAAQ;AAAA,IAGpB,YACiB,WACf;AADe;AAAA,IACb;AAAA,IA5TN,OAuTsB;AAAA;AAAA;AAAA,IACX,OAAO;AAAA,EAKjB;AANO,EAAAA,cAAM;AAAA,GAVJ;AAsBV,IAAM,8BAAN,cAA0C,oBAAkD;AAAA,EA2C3F,YACkB,QACA,WACA,iBACjB,YACiB,WACjB,YACiB,aACoB,oBACvB,aACkB,eACG,cACY,qBAC1B,oBACU,cACZ,kBAClB;AACD,UAAM,4BAA4B,sBAAsB,WAAW,eAAe,GAAG,WAAW;AAhB/E;AACA;AACA;AAEA;AAEA;AACoB;AAEL;AACG;AACY;AAEhB;AAK/B,SAAK,cAAc;AAEnB,QAAI,WAAW;AACd,WAAK,UAAU,mBAAmB,oBAAoB,IAAI,CAAC;AAE3D,WAAK,UAAU,iBAAiB,WAAW,OAAK;AAC/C,YAAI,CAAC,KAAK,QAAQ,GAAG;AACpB;AAAA,QACD;AAEA,UAAE,MAAM,YAAY;AACnB,gBAAM,UAAU,MAAM,KAAK,KAAK;AAChC,cAAI,CAAC,SAAS;AAEb,mBAAO;AAAA,UACR;AACA,iBAAO;AAAA,QACR,GAAG,GAAG,SAAS,sBAAsB,2CAA2C,KAAK,IAAI,CAAC;AAAA,MAC3F,CAAC,CAAC;AAAA,IACH;AAGA,QAAI,YAAY;AACf,WAAK,4BAA4B;AAAA,IAClC;AAAA,EACD;AAAA,EA1ZD,OAmU4F;AAAA;AAAA;AAAA,EAEnF,cAAuB;AAAA,EACvB,gBAAoC,aAAa;AAAA,EACjD;AAAA,EAEA,oBAA4B;AAAA,EAC5B,aAAqB;AAAA,EACZ,SAAwB,CAAC;AAAA,EAClC,4BAA4B;AAAA,EAE5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYC,SAAS;AAAA,EAElB,aAAoB,OACnB,sBACA,OACA,UACA,UACA,SACA,YACA,cACuC;AACvC,UAAM,UAAU,WAAW;AAC3B,QAAI;AACJ,QAAI,QAAQ,WAAW,GAAG;AACzB,6BAAuB,QAAQ,CAAC,EAAE;AAAA,IACnC;AACA,UAAM,EAAE,SAAS,IAAI,MAAM,MAAM,sBAAsB,UAAU,UAAU,QAAQ,UAAU,sBAAsB,YAAY;AAC/H,WAAO,qBAAqB,eAAe,6BAA6B,OAAO,UAAU,UAAU,CAAC,CAAC,QAAQ,UAAU,UAAU,CAAC,CAAC,sBAAsB,UAAU;AAAA,EACpK;AAAA,EAgDA,IAAI,iBAAiB;AACpB,WAAO,KAAK;AAAA,EACb;AAAA,EAES,UAAU;AAClB,QAAI,KAAK,WAAW;AACnB,WAAK,aAAa,eAAe,KAAK,eAAe;AAAA,IACtD;AAEA,SAAK,OAAO,uBAAuB,KAAK,iBAAiB,KAAK,SAAS;AAEvE,UAAM,QAAQ;AAAA,EACf;AAAA;AAAA;AAAA,EAKA,OAAe,sBAAsB,UAAkB,UAAe;AACrE,UAAM,YAAY,SAAS,QAAQ,kBAAkB,GAAG;AACxD,UAAM,OAAO,IAAI,mBAAmB,SAAS,KAAK,EAAE,OAAO,MAAM,UAAU,KAAK,CAAC,EAAE,SAAS,IAAI,CAAC,CAAC;AAClG,WAAO,IAAI,KAAK;AAAA,MACf,QAAQ,QAAQ;AAAA,MAChB;AAAA,MACA;AAAA,MACA,OAAO,KAAK,UAAU,SAAS,OAAO,CAAC;AAAA,IACxC,CAAC;AAAA,EACF;AAAA,EAEA,IAAW,OAAO;AACjB,WAAO,SAAS,KAAK,cAAc,YAAY,KAAK,eAAe,CAAC;AAAA,EACrE;AAAA,EAEA,IAAW,eAAwC;AAClD,WAAO,KAAK,WAAW,IAAI,wBAAwB,WAAW,wBAAwB;AAAA,EACvF;AAAA,EAEO,UAAmB;AACzB,QAAI,KAAK,2BAA2B;AACnC,aAAO;AAAA,IACR;AACA,QAAI,KAAK,OAAO,SAAS,GAAG;AAC3B,aAAO,KAAK,eAAe,KAAK;AAAA,IACjC;AACA,WAAO,KAAK;AAAA,EACb;AAAA,EAEQ,aAAa;AACpB,WAAO,KAAK,gBAAgB,WAAW,QAAQ;AAAA,EAChD;AAAA,EAEiB,oBAAmC,KAAK,UAAU,IAAI,QAAc,CAAC;AAAA,EAC7E,mBAAgC,KAAK,kBAAkB;AAAA,EAE/C,sBAAqC,KAAK,UAAU,IAAI,QAAc,CAAC;AAAA,EAC/E,qBAAkC,KAAK,oBAAoB;AAAA,EAEnD,aAA6C,KAAK,UAAU,IAAI,QAA+B,CAAC;AAAA,EACxG,YAA0C,KAAK,WAAW;AAAA,EAE1D,sBAAsB,MAAM;AAAA;AAAA,EAI9B,aAAsB;AAC5B,WAAO,CAAC,KAAK;AAAA,EACd;AAAA,EAEA,IAAW,WAAW;AACrB,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,IAAW,WAAW;AACrB,WAAO,KAAK;AAAA,EACb;AAAA,EAEO,SAAS,QAAgB,OAA2B;AAC1D,QAAI,CAAC,KAAK,WAAW;AACpB,YAAM,IAAI,MAAM,0BAA0B;AAAA,IAC3C;AAEA,SAAK,OAAO,MAAM;AACjB,WAAK,YAAY,MAAM;AACvB,WAAK,oBAAoB,KAAK,OAAO,SAAS;AAAA,IAC/C,CAAC;AAED,SAAK,aAAa,YAAY;AAAA,MAC7B,MAAM,oBAAoB;AAAA,MAC1B,UAAU,KAAK;AAAA,MACf,OAAO,SAAS,SAAS,oBAAoB,MAAM;AAAA,MACnD,MAAM;AAAA,MACN,MAAM,6BAAM,KAAK,KAAK,GAAhB;AAAA,MACN,MAAM,6BAAM,KAAK,KAAK,GAAhB;AAAA,IACP,CAAC;AAAA,EACF;AAAA,EAEO,gBAAgB;AACtB,SAAK,OAAO,MAAM;AACjB,WAAK,4BAA4B;AAAA,IAClC,CAAC;AAAA,EACF;AAAA,EAEA,MAAc,OAAsB;AACnC,QAAI,CAAC,KAAK,WAAW;AACpB;AAAA,IACD;AAEA,QAAI,KAAK,oBAAoB,GAAG;AAE/B;AAAA,IACD;AAEA,UAAM,aAAa,KAAK,OAAO,KAAK,iBAAiB;AACrD,SAAK,OAAO,MAAM;AACjB,QAAE,KAAK;AAAA,IACR,CAAC;AACD,UAAM,KAAK,OAAO,MAAM,KAAK,iBAAiB,KAAK,UAAU,YAAY,KAAK,QAAQ,CAAC;AAAA,EACxF;AAAA,EAEA,MAAc,OAAsB;AACnC,QAAI,CAAC,KAAK,WAAW;AACpB;AAAA,IACD;AAEA,QAAI,KAAK,qBAAqB,KAAK,OAAO,SAAS,GAAG;AAErD;AAAA,IACD;AAEA,UAAM,aAAa,KAAK,OAAO,KAAK,oBAAoB,CAAC;AACzD,SAAK,OAAO,MAAM;AACjB,QAAE,KAAK;AAAA,IACR,CAAC;AACD,UAAM,KAAK,OAAO,MAAM,KAAK,iBAAiB,KAAK,UAAU,YAAY,KAAK,QAAQ,CAAC;AAAA,EACxF;AAAA,EAEQ,YAAY,cAAuB;AAC1C,UAAM,QAAQ,KAAK,oBAAoB;AACvC,UAAM,WAAW,KAAK,OAAO,SAAS,KAAK;AAE3C,UAAM,eAAe,OAAO,iBAAiB,WAC1C,KAAK,OAAO,OAAO,OAAO,UAAU,YAAY,IAChD,KAAK,OAAO,OAAO,OAAO,QAAQ;AAErC,QAAI,aAAa,QAAQ;AACxB,WAAK,OAAO,cAAc,KAAK,iBAAiB,KAAK,WAAW,YAAY;AAAA,IAC7E;AAAA,EACD;AAAA,EAEQ,OAAO,UAA4B;AAC1C,UAAM,WAAW,KAAK,QAAQ;AAC9B,aAAS;AACT,SAAK,oBAAoB,KAAK;AAE9B,QAAI,KAAK,QAAQ,MAAM,UAAU;AAChC,WAAK,kBAAkB,KAAK;AAAA,IAC7B;AAAA,EACD;AAAA,EAEA,MAAa,OAAO,SAA0B;AAC7C,QAAI,CAAC,KAAK,WAAW;AACpB;AAAA,IACD;AAEA,QAAI,KAAK,sBAAsB,KAAK,cAAc,CAAC,KAAK,6BAA6B,CAAC,KAAK,aAAa;AACvG;AAAA,IACD;AAEA,QAAI,CAAC,SAAS,MAAM;AACnB,WAAK,OAAO,QAAQ,KAAK,iBAAiB,KAAK,UAAU,kBAAkB,IAAI;AAAA,IAChF;AAEA,SAAK,OAAO,MAAM;AACjB,WAAK,4BAA4B;AACjC,WAAK,cAAc;AACnB,WAAK,oBAAoB,KAAK;AAC9B,WAAK,YAAY;AAAA,IAClB,CAAC;AAAA,EACF;AAAA,EAEA,MAAa,KAAK,SAA0C;AAC3D,UAAM,SAAS,CAAC,CAAC,MAAM,KAAK,iBAAiB,OAAO;AAGpD,QAAI,QAAQ;AACX,WAAK,WAAW,KAAK,EAAE,QAAQ,SAAS,QAAQ,QAAQ,SAAS,OAAO,CAAC;AAAA,IAC1E;AAEA,WAAO;AAAA,EACR;AAAA,EAEA,MAAa,iBAAiB,SAAkD;AAC/E,QAAI,CAAC,KAAK,WAAW;AACpB,aAAO;AAAA,IACR;AAEA,QAAI,KAAK,WAAW,GAAG;AACtB,YAAM,YAAY,MAAM,KAAK,wBAAwB,OAAO;AAC5D,UAAI,CAAC,WAAW;AACf,eAAO;AAAA,MACR;AAEA,YAAM,KAAK,mBAAmB,KAAK,iBAAiB,WAAW,OAAO;AACtE,aAAO;AAAA,IACR;AAEA,UAAM,cAAc,wBAAwB,WAAS,KAAK,OAAO,QAAQ,KAAK,iBAAiB,KAAK,UAAU,KAAK,CAAC;AACpH,SAAK,cAAc,OAAO;AAC1B,SAAK,eAAe;AAEpB,QAAI;AACH,YAAM;AAEN,UAAI,KAAK,iBAAiB,aAAa;AACtC,aAAK,OAAO,MAAM;AACjB,eAAK,4BAA4B;AACjC,eAAK,aAAa,KAAK;AACvB,eAAK,cAAc;AAAA,QACpB,CAAC;AAAA,MACF;AAAA,IACD,UAAE;AACD,UAAI,KAAK,iBAAiB,aAAa;AACtC,aAAK,eAAe;AAAA,MACrB;AAAA,IACD;AAEA,WAAO,KAAK;AAAA,EACb;AAAA,EAEQ,wBAAwB,SAA6D;AAC5F,QAAI,CAAC,KAAK,WAAW,GAAG;AACvB,YAAM,IAAI,MAAM,0BAA0B;AAAA,IAC3C;AAEA,UAAM,kBAAkB,KAAK,oBAAoB;AACjD,UAAM,gBAAgB,gBAAgB,KAAK,iBAAiB,iBAAiB,KAAK,aAAa,gBAAgB;AAE/G,WAAO,KAAK,mBAAmB,eAAe,eAAe,SAAS,oBAAoB;AAAA,EAC3F;AAAA,EAEA,MAAa,mBAAmB,UAAe,gBAAqB,UAA2C;AAC9G,QAAI,KAAK,WAAW;AAEnB,YAAM,wBAAwB,WAAS,KAAK,OAAO,UAAU,KAAK,iBAAiB,KAAK,UAAU,gBAAgB,KAAK,CAAC;AACxH,WAAK,OAAO,MAAM;AACjB,aAAK,aAAa,KAAK;AAAA,MACxB,CAAC;AACD,aAAO;AAAA,IACR,OAAO;AAEN,YAAM,KAAK,YAAY;AAAA,QAAK;AAAA,QAAU;AAAA,QAAgB;AAAA;AAAA,MAAqB;AAC3E,aAAO;AAAA,IACR;AAAA,EACD;AAAA,EAEA,IAAW,aAAa;AAAE,WAAO,OAAO,KAAK,cAAc,YAAY,KAAK,cAAc,SAAS;AAAA,EAA2B;AAAA,EAE9H,MAAa,OAAO,OAAuD;AAC1E,UAAM,UAAU,KAAK,YAAY;AACjC,QAAI,CAAC,QAAQ,QAAQ;AACpB,YAAM,IAAI,MAAM,+CAA+C;AAAA,IAChE;AACA,UAAM,gBAAgB,QAAQ,CAAC;AAE/B,UAAM,aAAuC;AAAA,MAC5C,UAAU,KAAK;AAAA,MACf,gBAAgB,KAAK;AAAA,MACrB,UAAU;AAAA,MACV,WAAW,cAAc,YAAY;AAAA,QACpC,IAAI,cAAc,UAAU,GAAG;AAAA,QAC/B,UAAU,cAAc,UAAU;AAAA,MACnC,IAAI;AAAA,MACJ,SAAS;AAAA,QACR,QAAQ,cAAc,QAAQ;AAAA,QAC9B,SAAS,cAAc,QAAQ;AAAA,QAC/B,OAAO,cAAc,QAAQ;AAAA,MAC9B;AAAA,IACD;AAEA,UAAM,aAAiC;AAAA,MACtC,MAAM;AAAA,IACP;AAEA,QAAI,CAAC,KAAK,WAAW;AACpB,aAAO;AAAA,IACR;AAEA,QAAI,KAAK,cAAc,SAAS,iBAA2B;AAC1D,WAAK,cAAc,UAAU,OAAO;AAAA,IACrC;AAEA,UAAM,eAAe,IAAI,aAAa;AAAA,MACrC,wBAAwB,CAAAE,WACvB,KAAK,OAAO,QAAQ,KAAK,gBAAgB,OAAO,GAAG,KAAK,UAAUA,MAAK,CAAC;AAAA,IAAC;AAC3E,SAAK,gBAAgB;AAErB,UAAM,wBAAwB,MAAM;AACnC,mBAAa,UAAU,OAAO;AAAA,IAC/B,CAAC;AAED,QAAI,eAAe;AACnB,QAAI;AACH,YAAM,WAAW,MAAM,aAAa;AAEpC,UAAI,KAAK,kBAAkB,cAAc;AACxC,aAAK,gBAAgB,aAAa;AAClC,mBAAW,KAAM,WAAW;AAC5B,aAAK,YAAY;AAAA,MAClB;AAAA,IACD,SAAS,GAAG;AACX,UAAI,oBAAoB,CAAC,GAAG;AAE3B,cAAM;AAAA,MACP;AAGA,UAAI,KAAK,kBAAkB,cAAc;AACxC,aAAK,gBAAgB,aAAa;AAAA,MACnC;AACA,UAAI,EAAE,SAAS;AACd,uBAAe,EAAE;AAAA,MAClB;AAAA,IACD;AAEA,QAAI,KAAK,kBAAkB,aAAa,SAAS;AAChD,aAAO;AAAA,IACR;AAEA,UAAM,IAAI,MAAM,gCAAgC,YAAY,EAAE;AAAA,EAC/D;AACD;AAlaM,8BAAN;AAAA,EAmDG;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GA1DG;",
  "names": ["CustomEditorModelType", "HotExitState", "Type", "token"]
}
