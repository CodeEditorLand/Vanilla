{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadDecorations.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from '../../../base/common/uri.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { IDisposable, dispose } from '../../../base/common/lifecycle.js';\nimport { ExtHostContext, MainContext, MainThreadDecorationsShape, ExtHostDecorationsShape, DecorationData, DecorationRequest } from '../common/extHost.protocol.js';\nimport { extHostNamedCustomer, IExtHostContext } from '../../services/extensions/common/extHostCustomers.js';\nimport { IDecorationsService, IDecorationData } from '../../services/decorations/common/decorations.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\n\nclass DecorationRequestsQueue {\n\n\tprivate _idPool = 0;\n\tprivate _requests = new Map<number, DecorationRequest>();\n\tprivate _resolver = new Map<number, (data: DecorationData) => any>();\n\n\tprivate _timer: any;\n\n\tconstructor(\n\t\tprivate readonly _proxy: ExtHostDecorationsShape,\n\t\tprivate readonly _handle: number\n\t) {\n\t\t//\n\t}\n\n\tenqueue(uri: URI, token: CancellationToken): Promise<DecorationData> {\n\t\tconst id = ++this._idPool;\n\t\tconst result = new Promise<DecorationData>(resolve => {\n\t\t\tthis._requests.set(id, { id, uri });\n\t\t\tthis._resolver.set(id, resolve);\n\t\t\tthis._processQueue();\n\t\t});\n\t\tconst sub = token.onCancellationRequested(() => {\n\t\t\tthis._requests.delete(id);\n\t\t\tthis._resolver.delete(id);\n\t\t});\n\t\treturn result.finally(() => sub.dispose());\n\t}\n\n\tprivate _processQueue(): void {\n\t\tif (typeof this._timer === 'number') {\n\t\t\t// already queued\n\t\t\treturn;\n\t\t}\n\t\tthis._timer = setTimeout(() => {\n\t\t\t// make request\n\t\t\tconst requests = this._requests;\n\t\t\tconst resolver = this._resolver;\n\t\t\tthis._proxy.$provideDecorations(this._handle, [...requests.values()], CancellationToken.None).then(data => {\n\t\t\t\tfor (const [id, resolve] of resolver) {\n\t\t\t\t\tresolve(data[id]);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// reset\n\t\t\tthis._requests = new Map();\n\t\t\tthis._resolver = new Map();\n\t\t\tthis._timer = undefined;\n\t\t}, 0);\n\t}\n}\n\n@extHostNamedCustomer(MainContext.MainThreadDecorations)\nexport class MainThreadDecorations implements MainThreadDecorationsShape {\n\n\tprivate readonly _provider = new Map<number, [Emitter<URI[]>, IDisposable]>();\n\tprivate readonly _proxy: ExtHostDecorationsShape;\n\n\tconstructor(\n\t\tcontext: IExtHostContext,\n\t\t@IDecorationsService private readonly _decorationsService: IDecorationsService\n\t) {\n\t\tthis._proxy = context.getProxy(ExtHostContext.ExtHostDecorations);\n\t}\n\n\tdispose() {\n\t\tthis._provider.forEach(value => dispose(value));\n\t\tthis._provider.clear();\n\t}\n\n\t$registerDecorationProvider(handle: number, label: string): void {\n\t\tconst emitter = new Emitter<URI[]>();\n\t\tconst queue = new DecorationRequestsQueue(this._proxy, handle);\n\t\tconst registration = this._decorationsService.registerDecorationsProvider({\n\t\t\tlabel,\n\t\t\tonDidChange: emitter.event,\n\t\t\tprovideDecorations: async (uri, token): Promise<IDecorationData | undefined> => {\n\t\t\t\tconst data = await queue.enqueue(uri, token);\n\t\t\t\tif (!data) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\tconst [bubble, tooltip, letter, themeColor] = data;\n\t\t\t\treturn {\n\t\t\t\t\tweight: 10,\n\t\t\t\t\tbubble: bubble ?? false,\n\t\t\t\t\tcolor: themeColor?.id,\n\t\t\t\t\ttooltip,\n\t\t\t\t\tletter\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\t\tthis._provider.set(handle, [emitter, registration]);\n\t}\n\n\t$onDidChange(handle: number, resources: UriComponents[]): void {\n\t\tconst provider = this._provider.get(handle);\n\t\tif (provider) {\n\t\t\tconst [emitter] = provider;\n\t\t\temitter.fire(resources && resources.map(r => URI.revive(r)));\n\t\t}\n\t}\n\n\t$unregisterDecorationProvider(handle: number): void {\n\t\tconst provider = this._provider.get(handle);\n\t\tif (provider) {\n\t\t\tdispose(provider);\n\t\t\tthis._provider.delete(handle);\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
