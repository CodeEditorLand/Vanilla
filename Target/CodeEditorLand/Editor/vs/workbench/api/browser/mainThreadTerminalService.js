var w=Object.defineProperty;var L=Object.getOwnPropertyDescriptor;var I=(o,e,i,t)=>{for(var r=t>1?void 0:t?L(e,i):e,a=o.length-1,l;a>=0;a--)(l=o[a])&&(r=(t?l(e,i,r):l(r))||r);return t&&r&&w(e,i,r),r},s=(o,e)=>(i,t)=>e(i,t,o);import{Promises as k}from"../../../base/common/async.js";import{Disposable as $,DisposableStore as R,MutableDisposable as _,combinedDisposable as A}from"../../../base/common/lifecycle.js";import{OS as P}from"../../../base/common/platform.js";import{URI as g}from"../../../base/common/uri.js";import{IInstantiationService as M}from"../../../platform/instantiation/common/instantiation.js";import{ILogService as F}from"../../../platform/log/common/log.js";import{TerminalCapability as H}from"../../../platform/terminal/common/capabilities/capabilities.js";import{deserializeEnvironmentDescriptionMap as O,deserializeEnvironmentVariableCollection as V,serializeEnvironmentVariableCollection as Q}from"../../../platform/terminal/common/environmentVariableShared.js";import{ProcessPropertyType as z,TerminalExitReason as S,TerminalLocation as b}from"../../../platform/terminal/common/terminal.js";import{TerminalDataBufferer as q}from"../../../platform/terminal/common/terminalDataBuffering.js";import{ITerminalEditorService as U,ITerminalGroupService as B,ITerminalService as E}from"../../contrib/terminal/browser/terminal.js";import{TerminalProcessExtHostProxy as G}from"../../contrib/terminal/browser/terminalProcessExtHostProxy.js";import{IEnvironmentVariableService as j}from"../../contrib/terminal/common/environmentVariable.js";import{ITerminalProfileResolverService as W,ITerminalProfileService as N}from"../../contrib/terminal/common/terminal.js";import{ITerminalLinkProviderService as J}from"../../contrib/terminalContrib/links/browser/links.js";import{ITerminalQuickFixService as K,TerminalQuickFixType as T}from"../../contrib/terminalContrib/quickFix/browser/quickFix.js";import{extHostNamedCustomer as X}from"../../services/extensions/common/extHostCustomers.js";import{IRemoteAgentService as Y}from"../../services/remote/common/remoteAgentService.js";import{ExtHostContext as Z,MainContext as ee}from"../common/extHost.protocol.js";let h=class{constructor(e,i,t,r,a,l,c,d,p,u,m,y){this._extHostContext=e;this._terminalService=i;this._terminalLinkProviderService=t;this._terminalQuickFixService=r;this._instantiationService=a;this._environmentVariableService=l;this._logService=c;this._terminalProfileResolverService=d;this._terminalGroupService=u;this._terminalEditorService=m;this._terminalProfileService=y;this._proxy=e.getProxy(Z.ExtHostTerminalService),this._store.add(i.onDidCreateInstance(n=>{this._onTerminalOpened(n),this._onInstanceDimensionsChanged(n)})),this._store.add(i.onDidDisposeInstance(n=>this._onTerminalDisposed(n))),this._store.add(i.onAnyInstanceProcessIdReady(n=>this._onTerminalProcessIdReady(n))),this._store.add(i.onDidChangeInstanceDimensions(n=>this._onInstanceDimensionsChanged(n))),this._store.add(i.onAnyInstanceMaximumDimensionsChange(n=>this._onInstanceMaximumDimensionsChanged(n))),this._store.add(i.onDidRequestStartExtensionTerminal(n=>this._onRequestStartExtensionTerminal(n))),this._store.add(i.onDidChangeActiveInstance(n=>this._onActiveTerminalChanged(n?n.instanceId:null))),this._store.add(i.onAnyInstanceTitleChange(n=>n&&this._onTitleChanged(n.instanceId,n.title))),this._store.add(i.onAnyInstanceDataInput(n=>this._proxy.$acceptTerminalInteraction(n.instanceId))),this._store.add(i.onAnyInstanceSelectionChange(n=>this._proxy.$acceptTerminalSelection(n.instanceId,n.selection)));for(const n of this._terminalService.instances)this._onTerminalOpened(n),n.processReady.then(()=>this._onTerminalProcessIdReady(n));const f=this._terminalService.activeInstance;if(f&&this._proxy.$acceptActiveTerminalChanged(f.instanceId),this._environmentVariableService.collections.size>0){const D=[...this._environmentVariableService.collections.entries()].map(x=>[x[0],Q(x[1].map)]);this._proxy.$initEnvironmentVariableCollections(D)}p.getEnvironment().then(async n=>{this._os=n?.os||P,this._updateDefaultProfile()}),this._store.add(this._terminalProfileService.onDidChangeAvailableProfiles(()=>this._updateDefaultProfile()))}_store=new R;_proxy;_extHostTerminals=new Map;_terminalProcessProxies=new Map;_profileProviders=new Map;_quickFixProviders=new Map;_dataEventTracker=new _;_sendCommandEventListener=new _;_linkProvider=this._store.add(new _);_os=P;dispose(){this._store.dispose();for(const e of this._profileProviders.values())e.dispose();for(const e of this._quickFixProviders.values())e.dispose()}async _updateDefaultProfile(){const e=this._extHostContext.remoteAuthority??void 0,i=this._terminalProfileResolverService.getDefaultProfile({remoteAuthority:e,os:this._os}),t=this._terminalProfileResolverService.getDefaultProfile({remoteAuthority:e,os:this._os,allowAutomationShell:!0});this._proxy.$acceptDefaultProfile(...await Promise.all([i,t]))}async _getTerminalInstance(e){return typeof e=="string"?this._extHostTerminals.get(e):this._terminalService.getInstanceFromId(e)}async $createTerminal(e,i){const t={name:i.name,executable:i.shellPath,args:i.shellArgs,cwd:typeof i.cwd=="string"?i.cwd:g.revive(i.cwd),icon:i.icon,color:i.color,initialText:i.initialText,waitOnExit:i.waitOnExit,ignoreConfigurationCwd:!0,env:i.env,strictEnv:i.strictEnv,hideFromUser:i.hideFromUser,customPtyImplementation:i.isExtensionCustomPtyTerminal?(l,c,d)=>new G(l,c,d,this._terminalService):void 0,extHostTerminalId:e,forceShellIntegration:i.forceShellIntegration,isFeatureTerminal:i.isFeatureTerminal,isExtensionOwnedTerminal:i.isExtensionOwnedTerminal,useShellEnvironment:i.useShellEnvironment,isTransient:i.isTransient},r=k.withAsyncBody(async l=>{const c=await this._terminalService.createTerminal({config:t,location:await this._deserializeParentTerminal(i.location)});l(c)});this._extHostTerminals.set(e,r);const a=await r;this._store.add(a.onDisposed(()=>{this._extHostTerminals.delete(e)}))}async _deserializeParentTerminal(e){if(typeof e=="object"&&"parentTerminal"in e){const i=await this._extHostTerminals.get(e.parentTerminal.toString());return i?{parentTerminal:i}:void 0}return e}async $show(e,i){const t=await this._getTerminalInstance(e);t&&(this._terminalService.setActiveInstance(t),t.target===b.Editor?await this._terminalEditorService.revealActiveEditor(i):await this._terminalGroupService.showPanel(!i))}async $hide(e){const i=await this._getTerminalInstance(e),t=this._terminalService.activeInstance;t&&t.instanceId===i?.instanceId&&t.target!==b.Editor&&this._terminalGroupService.hidePanel()}async $dispose(e){(await this._getTerminalInstance(e))?.dispose(S.Extension)}async $sendText(e,i,t){await(await this._getTerminalInstance(e))?.sendText(i,t)}$sendProcessExit(e,i){this._terminalProcessProxies.get(e)?.emitExit(i)}$startSendingDataEvents(){if(!this._dataEventTracker.value){this._dataEventTracker.value=this._instantiationService.createInstance(v,(e,i)=>{this._onTerminalData(e,i)});for(const e of this._terminalService.instances)for(const i of e.initialDataEvents||[])this._onTerminalData(e.instanceId,i)}}$stopSendingDataEvents(){this._dataEventTracker.clear()}$startSendingCommandEvents(){if(this._sendCommandEventListener.value)return;const e=this._terminalService.createOnInstanceCapabilityEvent(H.CommandDetection,t=>t.onCommandFinished),i=e.event(t=>{this._onDidExecuteCommand(t.instance.instanceId,{commandLine:t.data.command,cwd:t.data.cwd,exitCode:t.data.exitCode,output:t.data.getOutput()})});this._sendCommandEventListener.value=A(e,i)}$stopSendingCommandEvents(){this._sendCommandEventListener.clear()}$startLinkProvider(){this._linkProvider.value=this._terminalLinkProviderService.registerLinkProvider(new ie(this._proxy))}$stopLinkProvider(){this._linkProvider.clear()}$registerProcessSupport(e){this._terminalService.registerProcessSupport(e)}$registerProfileProvider(e,i){this._profileProviders.set(e,this._terminalProfileService.registerTerminalProfileProvider(i,e,{createContributedTerminalProfile:async t=>this._proxy.$createContributedProfileTerminal(e,t)}))}$unregisterProfileProvider(e){this._profileProviders.get(e)?.dispose(),this._profileProviders.delete(e)}async $registerQuickFixProvider(e,i){this._quickFixProviders.set(e,this._terminalQuickFixService.registerQuickFixProvider(e,{provideTerminalQuickFixes:async(t,r,a,l)=>{if(l.isCancellationRequested)return;a.outputMatcher?.length&&a.outputMatcher.length>40&&(a.outputMatcher.length=40,this._logService.warn("Cannot exceed output matcher length of 40"));const c=t.command.match(a.commandLineMatcher);if(!c||!r)return;const d=a.outputMatcher;let p;if(d&&(p=te(r,d)),!p)return;const u={commandLineMatch:c,outputMatch:p,commandLine:t.command};if(u){const m=await this._proxy.$provideTerminalQuickFixes(e,u,l);if(m&&Array.isArray(m))return m.map(y=>C(e,i,y));if(m)return C(e,i,m)}}}))}$unregisterQuickFixProvider(e){this._quickFixProviders.get(e)?.dispose(),this._quickFixProviders.delete(e)}_onActiveTerminalChanged(e){this._proxy.$acceptActiveTerminalChanged(e)}_onTerminalData(e,i){this._proxy.$acceptTerminalProcessData(e,i)}_onDidExecuteCommand(e,i){this._proxy.$acceptDidExecuteCommand(e,i)}_onTitleChanged(e,i){this._proxy.$acceptTerminalTitleChange(e,i)}_onTerminalDisposed(e){this._proxy.$acceptTerminalClosed(e.instanceId,e.exitCode,e.exitReason??S.Unknown)}_onTerminalOpened(e){const i=e.shellLaunchConfig.extHostTerminalId,t={name:e.shellLaunchConfig.name,executable:e.shellLaunchConfig.executable,args:e.shellLaunchConfig.args,cwd:e.shellLaunchConfig.cwd,env:e.shellLaunchConfig.env,hideFromUser:e.shellLaunchConfig.hideFromUser};this._proxy.$acceptTerminalOpened(e.instanceId,i,e.title,t)}_onTerminalProcessIdReady(e){e.processId!==void 0&&this._proxy.$acceptTerminalProcessId(e.instanceId,e.processId)}_onInstanceDimensionsChanged(e){this._proxy.$acceptTerminalDimensions(e.instanceId,e.cols,e.rows)}_onInstanceMaximumDimensionsChanged(e){this._proxy.$acceptTerminalMaximumDimensions(e.instanceId,e.maxCols,e.maxRows)}_onRequestStartExtensionTerminal(e){const i=e.proxy;this._terminalProcessProxies.set(i.instanceId,i);const t=e.cols&&e.rows?{columns:e.cols,rows:e.rows}:void 0;this._proxy.$startExtensionTerminal(i.instanceId,t).then(e.callback),i.onInput(r=>this._proxy.$acceptProcessInput(i.instanceId,r)),i.onShutdown(r=>this._proxy.$acceptProcessShutdown(i.instanceId,r)),i.onRequestCwd(()=>this._proxy.$acceptProcessRequestCwd(i.instanceId)),i.onRequestInitialCwd(()=>this._proxy.$acceptProcessRequestInitialCwd(i.instanceId))}$sendProcessData(e,i){this._terminalProcessProxies.get(e)?.emitData(i)}$sendProcessReady(e,i,t,r){this._terminalProcessProxies.get(e)?.emitReady(i,t,r)}$sendProcessProperty(e,i){i.type===z.Title&&this._terminalService.getInstanceFromId(e)?.rename(i.value),this._terminalProcessProxies.get(e)?.emitProcessProperty(i)}$setEnvironmentVariableCollection(e,i,t,r){if(t){const a={persistent:i,map:V(t),descriptionMap:O(r)};this._environmentVariableService.set(e,a)}else this._environmentVariableService.delete(e)}};h=I([X(ee.MainThreadTerminalService),s(1,E),s(2,J),s(3,K),s(4,M),s(5,j),s(6,F),s(7,W),s(8,Y),s(9,B),s(10,U),s(11,N)],h);let v=class extends ${constructor(i,t){super();this._callback=i;this._terminalService=t;this._register(this._bufferer=new q(this._callback));for(const r of this._terminalService.instances)this._registerInstance(r);this._register(this._terminalService.onDidCreateInstance(r=>this._registerInstance(r))),this._register(this._terminalService.onDidDisposeInstance(r=>this._bufferer.stopBuffering(r.instanceId)))}_bufferer;_registerInstance(i){this._register(this._bufferer.startBuffering(i.instanceId,i.onData))}};v=I([s(1,E)],v);class ie{constructor(e){this._proxy=e}async provideLinks(e,i){const t=this._proxy;return(await t.$provideLinks(e.instanceId,i)).map(a=>({id:a.id,startIndex:a.startIndex,length:a.length,label:a.label,activate:()=>t.$activateLink(e.instanceId,a.id)}))}}function te(o,e){const i=o.join(`
`).match(e.lineMatcher);return i?{regexMatch:i,outputLines:o}:void 0}function C(o,e,i){let t=T.TerminalCommand;return"uri"in i?(i.uri=g.revive(i.uri),t=T.Opener):"id"in i&&(t=T.VscodeCommand),{id:o,type:t,source:e,...i}}export{h as MainThreadTerminalService,te as getOutputMatchForLines};
