{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadNotebookKernels.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { DisposableMap, DisposableStore, IDisposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { URI, UriComponents } from '../../../base/common/uri.js';\nimport { ILanguageService } from '../../../editor/common/languages/language.js';\nimport { ExtensionIdentifier } from '../../../platform/extensions/common/extensions.js';\nimport { NotebookDto } from './mainThreadNotebookDto.js';\nimport { extHostNamedCustomer, IExtHostContext } from '../../services/extensions/common/extHostCustomers.js';\nimport { INotebookEditor } from '../../contrib/notebook/browser/notebookBrowser.js';\nimport { INotebookEditorService } from '../../contrib/notebook/browser/services/notebookEditorService.js';\nimport { INotebookCellExecution, INotebookExecution, INotebookExecutionStateService, NotebookExecutionType } from '../../contrib/notebook/common/notebookExecutionStateService.js';\nimport { IKernelSourceActionProvider, INotebookKernel, INotebookKernelChangeEvent, INotebookKernelDetectionTask, INotebookKernelService, VariablesResult } from '../../contrib/notebook/common/notebookKernelService.js';\nimport { SerializableObjectWithBuffers } from '../../services/extensions/common/proxyIdentifier.js';\nimport { ExtHostContext, ExtHostNotebookKernelsShape, ICellExecuteUpdateDto, ICellExecutionCompleteDto, INotebookKernelDto2, MainContext, MainThreadNotebookKernelsShape } from '../common/extHost.protocol.js';\nimport { INotebookService } from '../../contrib/notebook/common/notebookService.js';\nimport { AsyncIterableObject, AsyncIterableSource } from '../../../base/common/async.js';\n\nabstract class MainThreadKernel implements INotebookKernel {\n\tprivate readonly _onDidChange = new Emitter<INotebookKernelChangeEvent>();\n\tprivate readonly preloads: { uri: URI; provides: readonly string[] }[];\n\treadonly onDidChange: Event<INotebookKernelChangeEvent> = this._onDidChange.event;\n\n\treadonly id: string;\n\treadonly viewType: string;\n\treadonly extension: ExtensionIdentifier;\n\n\timplementsInterrupt: boolean;\n\tlabel: string;\n\tdescription?: string;\n\tdetail?: string;\n\tsupportedLanguages: string[];\n\timplementsExecutionOrder: boolean;\n\thasVariableProvider: boolean;\n\tlocalResourceRoot: URI;\n\n\tpublic get preloadUris() {\n\t\treturn this.preloads.map(p => p.uri);\n\t}\n\n\tpublic get preloadProvides() {\n\t\treturn this.preloads.flatMap(p => p.provides);\n\t}\n\n\tconstructor(data: INotebookKernelDto2, private _languageService: ILanguageService) {\n\t\tthis.id = data.id;\n\t\tthis.viewType = data.notebookType;\n\t\tthis.extension = data.extensionId;\n\n\t\tthis.implementsInterrupt = data.supportsInterrupt ?? false;\n\t\tthis.label = data.label;\n\t\tthis.description = data.description;\n\t\tthis.detail = data.detail;\n\t\tthis.supportedLanguages = isNonEmptyArray(data.supportedLanguages) ? data.supportedLanguages : _languageService.getRegisteredLanguageIds();\n\t\tthis.implementsExecutionOrder = data.supportsExecutionOrder ?? false;\n\t\tthis.hasVariableProvider = data.hasVariableProvider ?? false;\n\t\tthis.localResourceRoot = URI.revive(data.extensionLocation);\n\t\tthis.preloads = data.preloads?.map(u => ({ uri: URI.revive(u.uri), provides: u.provides })) ?? [];\n\t}\n\n\n\tupdate(data: Partial<INotebookKernelDto2>) {\n\n\t\tconst event: INotebookKernelChangeEvent = Object.create(null);\n\t\tif (data.label !== undefined) {\n\t\t\tthis.label = data.label;\n\t\t\tevent.label = true;\n\t\t}\n\t\tif (data.description !== undefined) {\n\t\t\tthis.description = data.description;\n\t\t\tevent.description = true;\n\t\t}\n\t\tif (data.detail !== undefined) {\n\t\t\tthis.detail = data.detail;\n\t\t\tevent.detail = true;\n\t\t}\n\t\tif (data.supportedLanguages !== undefined) {\n\t\t\tthis.supportedLanguages = isNonEmptyArray(data.supportedLanguages) ? data.supportedLanguages : this._languageService.getRegisteredLanguageIds();\n\t\t\tevent.supportedLanguages = true;\n\t\t}\n\t\tif (data.supportsExecutionOrder !== undefined) {\n\t\t\tthis.implementsExecutionOrder = data.supportsExecutionOrder;\n\t\t\tevent.hasExecutionOrder = true;\n\t\t}\n\t\tif (data.supportsInterrupt !== undefined) {\n\t\t\tthis.implementsInterrupt = data.supportsInterrupt;\n\t\t\tevent.hasInterruptHandler = true;\n\t\t}\n\t\tif (data.hasVariableProvider !== undefined) {\n\t\t\tthis.hasVariableProvider = data.hasVariableProvider;\n\t\t\tevent.hasVariableProvider = true;\n\t\t}\n\t\tthis._onDidChange.fire(event);\n\t}\n\n\tabstract executeNotebookCellsRequest(uri: URI, cellHandles: number[]): Promise<void>;\n\tabstract cancelNotebookCellExecution(uri: URI, cellHandles: number[]): Promise<void>;\n\tabstract provideVariables(notebookUri: URI, parentId: number | undefined, kind: 'named' | 'indexed', start: number, token: CancellationToken): AsyncIterableObject<VariablesResult>;\n}\n\nclass MainThreadKernelDetectionTask implements INotebookKernelDetectionTask {\n\tconstructor(readonly notebookType: string) { }\n}\n\n@extHostNamedCustomer(MainContext.MainThreadNotebookKernels)\nexport class MainThreadNotebookKernels implements MainThreadNotebookKernelsShape {\n\n\tprivate readonly _editors = new DisposableMap<INotebookEditor>();\n\tprivate readonly _disposables = new DisposableStore();\n\n\tprivate readonly _kernels = new Map<number, [kernel: MainThreadKernel, registraion: IDisposable]>();\n\tprivate readonly _kernelDetectionTasks = new Map<number, [task: MainThreadKernelDetectionTask, registraion: IDisposable]>();\n\tprivate readonly _kernelSourceActionProviders = new Map<number, [provider: IKernelSourceActionProvider, registraion: IDisposable]>();\n\tprivate readonly _kernelSourceActionProvidersEventRegistrations = new Map<number, IDisposable>();\n\n\tprivate readonly _proxy: ExtHostNotebookKernelsShape;\n\n\tprivate readonly _executions = new Map<number, INotebookCellExecution>();\n\tprivate readonly _notebookExecutions = new Map<number, INotebookExecution>();\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t\t@INotebookKernelService private readonly _notebookKernelService: INotebookKernelService,\n\t\t@INotebookExecutionStateService private readonly _notebookExecutionStateService: INotebookExecutionStateService,\n\t\t@INotebookService private readonly _notebookService: INotebookService,\n\t\t@INotebookEditorService notebookEditorService: INotebookEditorService\n\t) {\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostNotebookKernels);\n\n\t\tnotebookEditorService.listNotebookEditors().forEach(this._onEditorAdd, this);\n\t\tnotebookEditorService.onDidAddNotebookEditor(this._onEditorAdd, this, this._disposables);\n\t\tnotebookEditorService.onDidRemoveNotebookEditor(this._onEditorRemove, this, this._disposables);\n\n\t\tthis._disposables.add(toDisposable(() => {\n\t\t\t// EH shut down, complete all executions started by this EH\n\t\t\tthis._executions.forEach(e => {\n\t\t\t\te.complete({});\n\t\t\t});\n\t\t\tthis._notebookExecutions.forEach(e => e.complete());\n\t\t}));\n\n\t\tthis._disposables.add(this._notebookExecutionStateService.onDidChangeExecution(e => {\n\t\t\tif (e.type === NotebookExecutionType.cell) {\n\t\t\t\tthis._proxy.$cellExecutionChanged(e.notebook, e.cellHandle, e.changed?.state);\n\t\t\t}\n\t\t}));\n\n\t\tthis._disposables.add(this._notebookKernelService.onDidChangeSelectedNotebooks(e => {\n\t\t\tfor (const [handle, [kernel,]] of this._kernels) {\n\t\t\t\tif (e.oldKernel === kernel.id) {\n\t\t\t\t\tthis._proxy.$acceptNotebookAssociation(handle, e.notebook, false);\n\t\t\t\t} else if (e.newKernel === kernel.id) {\n\t\t\t\t\tthis._proxy.$acceptNotebookAssociation(handle, e.notebook, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t\tfor (const [, registration] of this._kernels.values()) {\n\t\t\tregistration.dispose();\n\t\t}\n\t\tfor (const [, registration] of this._kernelDetectionTasks.values()) {\n\t\t\tregistration.dispose();\n\t\t}\n\t\tfor (const [, registration] of this._kernelSourceActionProviders.values()) {\n\t\t\tregistration.dispose();\n\t\t}\n\t\tthis._editors.dispose();\n\t}\n\n\t// --- kernel ipc\n\n\tprivate _onEditorAdd(editor: INotebookEditor) {\n\n\t\tconst ipcListener = editor.onDidReceiveMessage(e => {\n\t\t\tif (!editor.hasModel()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst { selected } = this._notebookKernelService.getMatchingKernel(editor.textModel);\n\t\t\tif (!selected) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfor (const [handle, candidate] of this._kernels) {\n\t\t\t\tif (candidate[0] === selected) {\n\t\t\t\t\tthis._proxy.$acceptKernelMessageFromRenderer(handle, editor.getId(), e.message);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis._editors.set(editor, ipcListener);\n\t}\n\n\tprivate _onEditorRemove(editor: INotebookEditor) {\n\t\tthis._editors.deleteAndDispose(editor);\n\t}\n\n\tasync $postMessage(handle: number, editorId: string | undefined, message: any): Promise<boolean> {\n\t\tconst tuple = this._kernels.get(handle);\n\t\tif (!tuple) {\n\t\t\tthrow new Error('kernel already disposed');\n\t\t}\n\t\tconst [kernel] = tuple;\n\t\tlet didSend = false;\n\t\tfor (const [editor] of this._editors) {\n\t\t\tif (!editor.hasModel()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (this._notebookKernelService.getMatchingKernel(editor.textModel).selected !== kernel) {\n\t\t\t\t// different kernel\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (editorId === undefined) {\n\t\t\t\t// all editors\n\t\t\t\teditor.postMessage(message);\n\t\t\t\tdidSend = true;\n\t\t\t} else if (editor.getId() === editorId) {\n\t\t\t\t// selected editors\n\t\t\t\teditor.postMessage(message);\n\t\t\t\tdidSend = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn didSend;\n\t}\n\n\tprivate variableRequestIndex = 0;\n\tprivate variableRequestMap = new Map<string, AsyncIterableSource<VariablesResult>>();\n\t$receiveVariable(requestId: string, variable: VariablesResult) {\n\t\tconst source = this.variableRequestMap.get(requestId);\n\t\tif (source) {\n\t\t\tsource.emitOne(variable);\n\t\t}\n\t}\n\n\t// --- kernel adding/updating/removal\n\n\tasync $addKernel(handle: number, data: INotebookKernelDto2): Promise<void> {\n\t\tconst that = this;\n\t\tconst kernel = new class extends MainThreadKernel {\n\t\t\tasync executeNotebookCellsRequest(uri: URI, handles: number[]): Promise<void> {\n\t\t\t\tawait that._proxy.$executeCells(handle, uri, handles);\n\t\t\t}\n\t\t\tasync cancelNotebookCellExecution(uri: URI, handles: number[]): Promise<void> {\n\t\t\t\tawait that._proxy.$cancelCells(handle, uri, handles);\n\t\t\t}\n\t\t\tprovideVariables(notebookUri: URI, parentId: number | undefined, kind: 'named' | 'indexed', start: number, token: CancellationToken): AsyncIterableObject<VariablesResult> {\n\t\t\t\tconst requestId = `${handle}variables${that.variableRequestIndex++}`;\n\t\t\t\tif (that.variableRequestMap.has(requestId)) {\n\t\t\t\t\treturn that.variableRequestMap.get(requestId)!.asyncIterable;\n\t\t\t\t}\n\n\t\t\t\tconst source = new AsyncIterableSource<VariablesResult>();\n\t\t\t\tthat.variableRequestMap.set(requestId, source);\n\t\t\t\tthat._proxy.$provideVariables(handle, requestId, notebookUri, parentId, kind, start, token).then(() => {\n\t\t\t\t\tsource.resolve();\n\t\t\t\t\tthat.variableRequestMap.delete(requestId);\n\t\t\t\t}).catch((err) => {\n\t\t\t\t\tsource.reject(err);\n\t\t\t\t\tthat.variableRequestMap.delete(requestId);\n\t\t\t\t});\n\n\t\t\t\treturn source.asyncIterable;\n\t\t\t}\n\t\t}(data, this._languageService);\n\n\t\tconst disposables = this._disposables.add(new DisposableStore());\n\t\t// Ensure _kernels is up to date before we register a kernel.\n\t\tthis._kernels.set(handle, [kernel, disposables]);\n\t\tdisposables.add(this._notebookKernelService.registerKernel(kernel));\n\t}\n\n\t$updateKernel(handle: number, data: Partial<INotebookKernelDto2>): void {\n\t\tconst tuple = this._kernels.get(handle);\n\t\tif (tuple) {\n\t\t\ttuple[0].update(data);\n\t\t}\n\t}\n\n\t$removeKernel(handle: number): void {\n\t\tconst tuple = this._kernels.get(handle);\n\t\tif (tuple) {\n\t\t\ttuple[1].dispose();\n\t\t\tthis._kernels.delete(handle);\n\t\t}\n\t}\n\n\t$updateNotebookPriority(handle: number, notebook: UriComponents, value: number | undefined): void {\n\t\tconst tuple = this._kernels.get(handle);\n\t\tif (tuple) {\n\t\t\tthis._notebookKernelService.updateKernelNotebookAffinity(tuple[0], URI.revive(notebook), value);\n\t\t}\n\t}\n\n\t// --- Cell execution\n\n\t$createExecution(handle: number, controllerId: string, rawUri: UriComponents, cellHandle: number): void {\n\t\tconst uri = URI.revive(rawUri);\n\t\tconst notebook = this._notebookService.getNotebookTextModel(uri);\n\t\tif (!notebook) {\n\t\t\tthrow new Error(`Notebook not found: ${uri.toString()}`);\n\t\t}\n\n\t\tconst kernel = this._notebookKernelService.getMatchingKernel(notebook);\n\t\tif (!kernel.selected || kernel.selected.id !== controllerId) {\n\t\t\tthrow new Error(`Kernel is not selected: ${kernel.selected?.id} !== ${controllerId}`);\n\t\t}\n\t\tconst execution = this._notebookExecutionStateService.createCellExecution(uri, cellHandle);\n\t\texecution.confirm();\n\t\tthis._executions.set(handle, execution);\n\t}\n\n\t$updateExecution(handle: number, data: SerializableObjectWithBuffers<ICellExecuteUpdateDto[]>): void {\n\t\tconst updates = data.value;\n\t\ttry {\n\t\t\tconst execution = this._executions.get(handle);\n\t\t\texecution?.update(updates.map(NotebookDto.fromCellExecuteUpdateDto));\n\t\t} catch (e) {\n\t\t\tonUnexpectedError(e);\n\t\t}\n\t}\n\n\t$completeExecution(handle: number, data: SerializableObjectWithBuffers<ICellExecutionCompleteDto>): void {\n\t\ttry {\n\t\t\tconst execution = this._executions.get(handle);\n\t\t\texecution?.complete(NotebookDto.fromCellExecuteCompleteDto(data.value));\n\t\t} catch (e) {\n\t\t\tonUnexpectedError(e);\n\t\t} finally {\n\t\t\tthis._executions.delete(handle);\n\t\t}\n\t}\n\n\t// --- Notebook execution\n\n\t$createNotebookExecution(handle: number, controllerId: string, rawUri: UriComponents): void {\n\t\tconst uri = URI.revive(rawUri);\n\t\tconst notebook = this._notebookService.getNotebookTextModel(uri);\n\t\tif (!notebook) {\n\t\t\tthrow new Error(`Notebook not found: ${uri.toString()}`);\n\t\t}\n\n\t\tconst kernel = this._notebookKernelService.getMatchingKernel(notebook);\n\t\tif (!kernel.selected || kernel.selected.id !== controllerId) {\n\t\t\tthrow new Error(`Kernel is not selected: ${kernel.selected?.id} !== ${controllerId}`);\n\t\t}\n\t\tconst execution = this._notebookExecutionStateService.createExecution(uri);\n\t\texecution.confirm();\n\t\tthis._notebookExecutions.set(handle, execution);\n\t}\n\n\t$beginNotebookExecution(handle: number): void {\n\t\ttry {\n\t\t\tconst execution = this._notebookExecutions.get(handle);\n\t\t\texecution?.begin();\n\t\t} catch (e) {\n\t\t\tonUnexpectedError(e);\n\t\t}\n\t}\n\n\t$completeNotebookExecution(handle: number): void {\n\t\ttry {\n\t\t\tconst execution = this._notebookExecutions.get(handle);\n\t\t\texecution?.complete();\n\t\t} catch (e) {\n\t\t\tonUnexpectedError(e);\n\t\t} finally {\n\t\t\tthis._notebookExecutions.delete(handle);\n\t\t}\n\t}\n\n\t// --- notebook kernel detection task\n\tasync $addKernelDetectionTask(handle: number, notebookType: string): Promise<void> {\n\t\tconst kernelDetectionTask = new MainThreadKernelDetectionTask(notebookType);\n\t\tconst registration = this._notebookKernelService.registerNotebookKernelDetectionTask(kernelDetectionTask);\n\t\tthis._kernelDetectionTasks.set(handle, [kernelDetectionTask, registration]);\n\t}\n\n\t$removeKernelDetectionTask(handle: number): void {\n\t\tconst tuple = this._kernelDetectionTasks.get(handle);\n\t\tif (tuple) {\n\t\t\ttuple[1].dispose();\n\t\t\tthis._kernelDetectionTasks.delete(handle);\n\t\t}\n\t}\n\n\t// --- notebook kernel source action provider\n\n\tasync $addKernelSourceActionProvider(handle: number, eventHandle: number, notebookType: string): Promise<void> {\n\t\tconst kernelSourceActionProvider: IKernelSourceActionProvider = {\n\t\t\tviewType: notebookType,\n\t\t\tprovideKernelSourceActions: async () => {\n\t\t\t\tconst actions = await this._proxy.$provideKernelSourceActions(handle, CancellationToken.None);\n\n\t\t\t\treturn actions.map(action => {\n\t\t\t\t\tlet documentation = action.documentation;\n\t\t\t\t\tif (action.documentation && typeof action.documentation !== 'string') {\n\t\t\t\t\t\tdocumentation = URI.revive(action.documentation);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tlabel: action.label,\n\t\t\t\t\t\tcommand: action.command,\n\t\t\t\t\t\tdescription: action.description,\n\t\t\t\t\t\tdetail: action.detail,\n\t\t\t\t\t\tdocumentation,\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tif (typeof eventHandle === 'number') {\n\t\t\tconst emitter = new Emitter<void>();\n\t\t\tthis._kernelSourceActionProvidersEventRegistrations.set(eventHandle, emitter);\n\t\t\tkernelSourceActionProvider.onDidChangeSourceActions = emitter.event;\n\t\t}\n\n\t\tconst registration = this._notebookKernelService.registerKernelSourceActionProvider(notebookType, kernelSourceActionProvider);\n\t\tthis._kernelSourceActionProviders.set(handle, [kernelSourceActionProvider, registration]);\n\t}\n\n\t$removeKernelSourceActionProvider(handle: number, eventHandle: number): void {\n\t\tconst tuple = this._kernelSourceActionProviders.get(handle);\n\t\tif (tuple) {\n\t\t\ttuple[1].dispose();\n\t\t\tthis._kernelSourceActionProviders.delete(handle);\n\t\t}\n\t\tif (typeof eventHandle === 'number') {\n\t\t\tthis._kernelSourceActionProvidersEventRegistrations.delete(eventHandle);\n\t\t}\n\t}\n\n\t$emitNotebookKernelSourceActionsChangeEvent(eventHandle: number): void {\n\t\tconst emitter = this._kernelSourceActionProvidersEventRegistrations.get(eventHandle);\n\t\tif (emitter instanceof Emitter) {\n\t\t\temitter.fire(undefined);\n\t\t}\n\t}\n\n\t$variablesUpdated(notebookUri: UriComponents): void {\n\t\tthis._notebookKernelService.notifyVariablesChange(URI.revive(notebookUri));\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
