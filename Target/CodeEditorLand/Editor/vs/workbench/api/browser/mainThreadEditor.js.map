{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadEditor.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { equals } from \"../../../base/common/arrays.js\";\nimport { Emitter, type Event } from \"../../../base/common/event.js\";\nimport { DisposableStore } from \"../../../base/common/lifecycle.js\";\nimport type { ICodeEditor } from \"../../../editor/browser/editorBrowser.js\";\nimport {\n\tEditorOption,\n\tRenderLineNumbersType,\n\tTextEditorCursorStyle,\n\tcursorStyleToString,\n} from \"../../../editor/common/config/editorOptions.js\";\nimport type { ISingleEditOperation } from \"../../../editor/common/core/editOperation.js\";\nimport { type IRange, Range } from \"../../../editor/common/core/range.js\";\nimport {\n\ttype ISelection,\n\tSelection,\n} from \"../../../editor/common/core/selection.js\";\nimport {\n\ttype IDecorationOptions,\n\tScrollType,\n} from \"../../../editor/common/editorCommon.js\";\nimport type {\n\tITextModel,\n\tITextModelUpdateOptions,\n} from \"../../../editor/common/model.js\";\nimport type { IModelService } from \"../../../editor/common/services/model.js\";\nimport {\n\tCodeEditorStateFlag,\n\tEditorState,\n} from \"../../../editor/contrib/editorState/browser/editorState.js\";\nimport { SnippetController2 } from \"../../../editor/contrib/snippet/browser/snippetController2.js\";\nimport { SnippetParser } from \"../../../editor/contrib/snippet/browser/snippetParser.js\";\nimport type { ISnippetEdit } from \"../../../editor/contrib/snippet/browser/snippetSession.js\";\nimport type { IClipboardService } from \"../../../platform/clipboard/common/clipboardService.js\";\nimport type { IEditorPane } from \"../../common/editor.js\";\nimport {\n\ttype IApplyEditsOptions,\n\ttype IEditorPropertiesChangeData,\n\ttype IResolvedTextEditorConfiguration,\n\ttype ITextEditorConfigurationUpdate,\n\ttype IUndoStopOptions,\n\tTextEditorRevealType,\n} from \"../common/extHost.protocol.js\";\nimport type { MainThreadDocuments } from \"./mainThreadDocuments.js\";\n\nexport interface IFocusTracker {\n\tonGainedFocus(): void;\n\tonLostFocus(): void;\n}\n\nexport class MainThreadTextEditorProperties {\n\tpublic static readFromEditor(\n\t\tpreviousProperties: MainThreadTextEditorProperties | null,\n\t\tmodel: ITextModel,\n\t\tcodeEditor: ICodeEditor | null,\n\t): MainThreadTextEditorProperties {\n\t\tconst selections =\n\t\t\tMainThreadTextEditorProperties._readSelectionsFromCodeEditor(\n\t\t\t\tpreviousProperties,\n\t\t\t\tcodeEditor,\n\t\t\t);\n\t\tconst options =\n\t\t\tMainThreadTextEditorProperties._readOptionsFromCodeEditor(\n\t\t\t\tpreviousProperties,\n\t\t\t\tmodel,\n\t\t\t\tcodeEditor,\n\t\t\t);\n\t\tconst visibleRanges =\n\t\t\tMainThreadTextEditorProperties._readVisibleRangesFromCodeEditor(\n\t\t\t\tpreviousProperties,\n\t\t\t\tcodeEditor,\n\t\t\t);\n\t\treturn new MainThreadTextEditorProperties(\n\t\t\tselections,\n\t\t\toptions,\n\t\t\tvisibleRanges,\n\t\t);\n\t}\n\n\tprivate static _readSelectionsFromCodeEditor(\n\t\tpreviousProperties: MainThreadTextEditorProperties | null,\n\t\tcodeEditor: ICodeEditor | null,\n\t): Selection[] {\n\t\tlet result: Selection[] | null = null;\n\t\tif (codeEditor) {\n\t\t\tresult = codeEditor.getSelections();\n\t\t}\n\t\tif (!result && previousProperties) {\n\t\t\tresult = previousProperties.selections;\n\t\t}\n\t\tif (!result) {\n\t\t\tresult = [new Selection(1, 1, 1, 1)];\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate static _readOptionsFromCodeEditor(\n\t\tpreviousProperties: MainThreadTextEditorProperties | null,\n\t\tmodel: ITextModel,\n\t\tcodeEditor: ICodeEditor | null,\n\t): IResolvedTextEditorConfiguration {\n\t\tif (model.isDisposed()) {\n\t\t\tif (previousProperties) {\n\t\t\t\t// shutdown time\n\t\t\t\treturn previousProperties.options;\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"No valid properties\");\n\t\t\t}\n\t\t}\n\n\t\tlet cursorStyle: TextEditorCursorStyle;\n\t\tlet lineNumbers: RenderLineNumbersType;\n\t\tif (codeEditor) {\n\t\t\tconst options = codeEditor.getOptions();\n\t\t\tconst lineNumbersOpts = options.get(EditorOption.lineNumbers);\n\t\t\tcursorStyle = options.get(EditorOption.cursorStyle);\n\t\t\tlineNumbers = lineNumbersOpts.renderType;\n\t\t} else if (previousProperties) {\n\t\t\tcursorStyle = previousProperties.options.cursorStyle;\n\t\t\tlineNumbers = previousProperties.options.lineNumbers;\n\t\t} else {\n\t\t\tcursorStyle = TextEditorCursorStyle.Line;\n\t\t\tlineNumbers = RenderLineNumbersType.On;\n\t\t}\n\n\t\tconst modelOptions = model.getOptions();\n\t\treturn {\n\t\t\tinsertSpaces: modelOptions.insertSpaces,\n\t\t\ttabSize: modelOptions.tabSize,\n\t\t\tindentSize: modelOptions.indentSize,\n\t\t\toriginalIndentSize: modelOptions.originalIndentSize,\n\t\t\tcursorStyle: cursorStyle,\n\t\t\tlineNumbers: lineNumbers,\n\t\t};\n\t}\n\n\tprivate static _readVisibleRangesFromCodeEditor(\n\t\tpreviousProperties: MainThreadTextEditorProperties | null,\n\t\tcodeEditor: ICodeEditor | null,\n\t): Range[] {\n\t\tif (codeEditor) {\n\t\t\treturn codeEditor.getVisibleRanges();\n\t\t}\n\t\treturn [];\n\t}\n\n\tconstructor(\n\t\tpublic readonly selections: Selection[],\n\t\tpublic readonly options: IResolvedTextEditorConfiguration,\n\t\tpublic readonly visibleRanges: Range[],\n\t) {}\n\n\tpublic generateDelta(\n\t\toldProps: MainThreadTextEditorProperties | null,\n\t\tselectionChangeSource: string | null,\n\t): IEditorPropertiesChangeData | null {\n\t\tconst delta: IEditorPropertiesChangeData = {\n\t\t\toptions: null,\n\t\t\tselections: null,\n\t\t\tvisibleRanges: null,\n\t\t};\n\n\t\tif (\n\t\t\t!oldProps ||\n\t\t\t!MainThreadTextEditorProperties._selectionsEqual(\n\t\t\t\toldProps.selections,\n\t\t\t\tthis.selections,\n\t\t\t)\n\t\t) {\n\t\t\tdelta.selections = {\n\t\t\t\tselections: this.selections,\n\t\t\t\tsource: selectionChangeSource ?? undefined,\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\t!oldProps ||\n\t\t\t!MainThreadTextEditorProperties._optionsEqual(\n\t\t\t\toldProps.options,\n\t\t\t\tthis.options,\n\t\t\t)\n\t\t) {\n\t\t\tdelta.options = this.options;\n\t\t}\n\n\t\tif (\n\t\t\t!oldProps ||\n\t\t\t!MainThreadTextEditorProperties._rangesEqual(\n\t\t\t\toldProps.visibleRanges,\n\t\t\t\tthis.visibleRanges,\n\t\t\t)\n\t\t) {\n\t\t\tdelta.visibleRanges = this.visibleRanges;\n\t\t}\n\n\t\tif (delta.selections || delta.options || delta.visibleRanges) {\n\t\t\t// something changed\n\t\t\treturn delta;\n\t\t}\n\t\t// nothing changed\n\t\treturn null;\n\t}\n\n\tprivate static _selectionsEqual(\n\t\ta: readonly Selection[],\n\t\tb: readonly Selection[],\n\t): boolean {\n\t\treturn equals(a, b, (aValue, bValue) => aValue.equalsSelection(bValue));\n\t}\n\n\tprivate static _rangesEqual(\n\t\ta: readonly Range[],\n\t\tb: readonly Range[],\n\t): boolean {\n\t\treturn equals(a, b, (aValue, bValue) => aValue.equalsRange(bValue));\n\t}\n\n\tprivate static _optionsEqual(\n\t\ta: IResolvedTextEditorConfiguration,\n\t\tb: IResolvedTextEditorConfiguration,\n\t): boolean {\n\t\tif ((a && !b) || (!a && b)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!a && !b) {\n\t\t\treturn true;\n\t\t}\n\t\treturn (\n\t\t\ta.tabSize === b.tabSize &&\n\t\t\ta.indentSize === b.indentSize &&\n\t\t\ta.insertSpaces === b.insertSpaces &&\n\t\t\ta.cursorStyle === b.cursorStyle &&\n\t\t\ta.lineNumbers === b.lineNumbers\n\t\t);\n\t}\n}\n\n/**\n * Text Editor that is permanently bound to the same model.\n * It can be bound or not to a CodeEditor.\n */\nexport class MainThreadTextEditor {\n\tprivate readonly _id: string;\n\tprivate readonly _model: ITextModel;\n\tprivate readonly _mainThreadDocuments: MainThreadDocuments;\n\tprivate readonly _modelService: IModelService;\n\tprivate readonly _clipboardService: IClipboardService;\n\tprivate readonly _modelListeners = new DisposableStore();\n\tprivate _codeEditor: ICodeEditor | null;\n\tprivate readonly _focusTracker: IFocusTracker;\n\tprivate readonly _codeEditorListeners = new DisposableStore();\n\n\tprivate _properties: MainThreadTextEditorProperties | null;\n\tprivate readonly _onPropertiesChanged: Emitter<IEditorPropertiesChangeData>;\n\n\tconstructor(\n\t\tid: string,\n\t\tmodel: ITextModel,\n\t\tcodeEditor: ICodeEditor,\n\t\tfocusTracker: IFocusTracker,\n\t\tmainThreadDocuments: MainThreadDocuments,\n\t\tmodelService: IModelService,\n\t\tclipboardService: IClipboardService,\n\t) {\n\t\tthis._id = id;\n\t\tthis._model = model;\n\t\tthis._codeEditor = null;\n\t\tthis._properties = null;\n\t\tthis._focusTracker = focusTracker;\n\t\tthis._mainThreadDocuments = mainThreadDocuments;\n\t\tthis._modelService = modelService;\n\t\tthis._clipboardService = clipboardService;\n\n\t\tthis._onPropertiesChanged = new Emitter<IEditorPropertiesChangeData>();\n\n\t\tthis._modelListeners.add(\n\t\t\tthis._model.onDidChangeOptions((e) => {\n\t\t\t\tthis._updatePropertiesNow(null);\n\t\t\t}),\n\t\t);\n\n\t\tthis.setCodeEditor(codeEditor);\n\t\tthis._updatePropertiesNow(null);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._modelListeners.dispose();\n\t\tthis._codeEditor = null;\n\t\tthis._codeEditorListeners.dispose();\n\t}\n\n\tprivate _updatePropertiesNow(selectionChangeSource: string | null): void {\n\t\tthis._setProperties(\n\t\t\tMainThreadTextEditorProperties.readFromEditor(\n\t\t\t\tthis._properties,\n\t\t\t\tthis._model,\n\t\t\t\tthis._codeEditor,\n\t\t\t),\n\t\t\tselectionChangeSource,\n\t\t);\n\t}\n\n\tprivate _setProperties(\n\t\tnewProperties: MainThreadTextEditorProperties,\n\t\tselectionChangeSource: string | null,\n\t): void {\n\t\tconst delta = newProperties.generateDelta(\n\t\t\tthis._properties,\n\t\t\tselectionChangeSource,\n\t\t);\n\t\tthis._properties = newProperties;\n\t\tif (delta) {\n\t\t\tthis._onPropertiesChanged.fire(delta);\n\t\t}\n\t}\n\n\tpublic getId(): string {\n\t\treturn this._id;\n\t}\n\n\tpublic getModel(): ITextModel {\n\t\treturn this._model;\n\t}\n\n\tpublic getCodeEditor(): ICodeEditor | null {\n\t\treturn this._codeEditor;\n\t}\n\n\tpublic hasCodeEditor(codeEditor: ICodeEditor | null): boolean {\n\t\treturn this._codeEditor === codeEditor;\n\t}\n\n\tpublic setCodeEditor(codeEditor: ICodeEditor | null): void {\n\t\tif (this.hasCodeEditor(codeEditor)) {\n\t\t\t// Nothing to do...\n\t\t\treturn;\n\t\t}\n\t\tthis._codeEditorListeners.clear();\n\n\t\tthis._codeEditor = codeEditor;\n\t\tif (this._codeEditor) {\n\t\t\t// Catch early the case that this code editor gets a different model set and disassociate from this model\n\t\t\tthis._codeEditorListeners.add(\n\t\t\t\tthis._codeEditor.onDidChangeModel(() => {\n\t\t\t\t\tthis.setCodeEditor(null);\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tthis._codeEditorListeners.add(\n\t\t\t\tthis._codeEditor.onDidFocusEditorWidget(() => {\n\t\t\t\t\tthis._focusTracker.onGainedFocus();\n\t\t\t\t}),\n\t\t\t);\n\t\t\tthis._codeEditorListeners.add(\n\t\t\t\tthis._codeEditor.onDidBlurEditorWidget(() => {\n\t\t\t\t\tthis._focusTracker.onLostFocus();\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tlet nextSelectionChangeSource: string | null = null;\n\t\t\tthis._codeEditorListeners.add(\n\t\t\t\tthis._mainThreadDocuments.onIsCaughtUpWithContentChanges(\n\t\t\t\t\t(uri) => {\n\t\t\t\t\t\tif (uri.toString() === this._model.uri.toString()) {\n\t\t\t\t\t\t\tconst selectionChangeSource =\n\t\t\t\t\t\t\t\tnextSelectionChangeSource;\n\t\t\t\t\t\t\tnextSelectionChangeSource = null;\n\t\t\t\t\t\t\tthis._updatePropertiesNow(selectionChangeSource);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tconst isValidCodeEditor = () => {\n\t\t\t\t// Due to event timings, it is possible that there is a model change event not yet delivered to us.\n\t\t\t\t// > e.g. a model change event is emitted to a listener which then decides to update editor options\n\t\t\t\t// > In this case the editor configuration change event reaches us first.\n\t\t\t\t// So simply check that the model is still attached to this code editor\n\t\t\t\treturn (\n\t\t\t\t\tthis._codeEditor &&\n\t\t\t\t\tthis._codeEditor.getModel() === this._model\n\t\t\t\t);\n\t\t\t};\n\n\t\t\tconst updateProperties = (selectionChangeSource: string | null) => {\n\t\t\t\t// Some editor events get delivered faster than model content changes. This is\n\t\t\t\t// problematic, as this leads to editor properties reaching the extension host\n\t\t\t\t// too soon, before the model content change that was the root cause.\n\t\t\t\t//\n\t\t\t\t// If this case is identified, then let's update editor properties on the next model\n\t\t\t\t// content change instead.\n\t\t\t\tif (\n\t\t\t\t\tthis._mainThreadDocuments.isCaughtUpWithContentChanges(\n\t\t\t\t\t\tthis._model.uri,\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tnextSelectionChangeSource = null;\n\t\t\t\t\tthis._updatePropertiesNow(selectionChangeSource);\n\t\t\t\t} else {\n\t\t\t\t\t// update editor properties on the next model content change\n\t\t\t\t\tnextSelectionChangeSource = selectionChangeSource;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis._codeEditorListeners.add(\n\t\t\t\tthis._codeEditor.onDidChangeCursorSelection((e) => {\n\t\t\t\t\t// selection\n\t\t\t\t\tif (!isValidCodeEditor()) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tupdateProperties(e.source);\n\t\t\t\t}),\n\t\t\t);\n\t\t\tthis._codeEditorListeners.add(\n\t\t\t\tthis._codeEditor.onDidChangeConfiguration((e) => {\n\t\t\t\t\t// options\n\t\t\t\t\tif (!isValidCodeEditor()) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tupdateProperties(null);\n\t\t\t\t}),\n\t\t\t);\n\t\t\tthis._codeEditorListeners.add(\n\t\t\t\tthis._codeEditor.onDidLayoutChange(() => {\n\t\t\t\t\t// visibleRanges\n\t\t\t\t\tif (!isValidCodeEditor()) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tupdateProperties(null);\n\t\t\t\t}),\n\t\t\t);\n\t\t\tthis._codeEditorListeners.add(\n\t\t\t\tthis._codeEditor.onDidScrollChange(() => {\n\t\t\t\t\t// visibleRanges\n\t\t\t\t\tif (!isValidCodeEditor()) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tupdateProperties(null);\n\t\t\t\t}),\n\t\t\t);\n\t\t\tthis._updatePropertiesNow(null);\n\t\t}\n\t}\n\n\tpublic isVisible(): boolean {\n\t\treturn !!this._codeEditor;\n\t}\n\n\tpublic getProperties(): MainThreadTextEditorProperties {\n\t\treturn this._properties!;\n\t}\n\n\tpublic get onPropertiesChanged(): Event<IEditorPropertiesChangeData> {\n\t\treturn this._onPropertiesChanged.event;\n\t}\n\n\tpublic setSelections(selections: ISelection[]): void {\n\t\tif (this._codeEditor) {\n\t\t\tthis._codeEditor.setSelections(selections);\n\t\t\treturn;\n\t\t}\n\n\t\tconst newSelections = selections.map(Selection.liftSelection);\n\t\tthis._setProperties(\n\t\t\tnew MainThreadTextEditorProperties(\n\t\t\t\tnewSelections,\n\t\t\t\tthis._properties!.options,\n\t\t\t\tthis._properties!.visibleRanges,\n\t\t\t),\n\t\t\tnull,\n\t\t);\n\t}\n\n\tprivate _setIndentConfiguration(\n\t\tnewConfiguration: ITextEditorConfigurationUpdate,\n\t): void {\n\t\tconst creationOpts = this._modelService.getCreationOptions(\n\t\t\tthis._model.getLanguageId(),\n\t\t\tthis._model.uri,\n\t\t\tthis._model.isForSimpleWidget,\n\t\t);\n\n\t\tif (\n\t\t\tnewConfiguration.tabSize === \"auto\" ||\n\t\t\tnewConfiguration.insertSpaces === \"auto\"\n\t\t) {\n\t\t\t// one of the options was set to 'auto' => detect indentation\n\t\t\tlet insertSpaces = creationOpts.insertSpaces;\n\t\t\tlet tabSize = creationOpts.tabSize;\n\n\t\t\tif (\n\t\t\t\tnewConfiguration.insertSpaces !== \"auto\" &&\n\t\t\t\ttypeof newConfiguration.insertSpaces !== \"undefined\"\n\t\t\t) {\n\t\t\t\tinsertSpaces = newConfiguration.insertSpaces;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tnewConfiguration.tabSize !== \"auto\" &&\n\t\t\t\ttypeof newConfiguration.tabSize !== \"undefined\"\n\t\t\t) {\n\t\t\t\ttabSize = newConfiguration.tabSize;\n\t\t\t}\n\n\t\t\tthis._model.detectIndentation(insertSpaces, tabSize);\n\t\t\treturn;\n\t\t}\n\n\t\tconst newOpts: ITextModelUpdateOptions = {};\n\t\tif (typeof newConfiguration.insertSpaces !== \"undefined\") {\n\t\t\tnewOpts.insertSpaces = newConfiguration.insertSpaces;\n\t\t}\n\t\tif (typeof newConfiguration.tabSize !== \"undefined\") {\n\t\t\tnewOpts.tabSize = newConfiguration.tabSize;\n\t\t}\n\t\tif (typeof newConfiguration.indentSize !== \"undefined\") {\n\t\t\tnewOpts.indentSize = newConfiguration.indentSize;\n\t\t}\n\t\tthis._model.updateOptions(newOpts);\n\t}\n\n\tpublic setConfiguration(\n\t\tnewConfiguration: ITextEditorConfigurationUpdate,\n\t): void {\n\t\tthis._setIndentConfiguration(newConfiguration);\n\n\t\tif (!this._codeEditor) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (newConfiguration.cursorStyle) {\n\t\t\tconst newCursorStyle = cursorStyleToString(\n\t\t\t\tnewConfiguration.cursorStyle,\n\t\t\t);\n\t\t\tthis._codeEditor.updateOptions({\n\t\t\t\tcursorStyle: newCursorStyle,\n\t\t\t});\n\t\t}\n\n\t\tif (typeof newConfiguration.lineNumbers !== \"undefined\") {\n\t\t\tlet lineNumbers: \"on\" | \"off\" | \"relative\" | \"interval\";\n\t\t\tswitch (newConfiguration.lineNumbers) {\n\t\t\t\tcase RenderLineNumbersType.On:\n\t\t\t\t\tlineNumbers = \"on\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase RenderLineNumbersType.Relative:\n\t\t\t\t\tlineNumbers = \"relative\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase RenderLineNumbersType.Interval:\n\t\t\t\t\tlineNumbers = \"interval\";\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlineNumbers = \"off\";\n\t\t\t}\n\t\t\tthis._codeEditor.updateOptions({\n\t\t\t\tlineNumbers: lineNumbers,\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic setDecorations(key: string, ranges: IDecorationOptions[]): void {\n\t\tif (!this._codeEditor) {\n\t\t\treturn;\n\t\t}\n\t\tthis._codeEditor.setDecorationsByType(\"exthost-api\", key, ranges);\n\t}\n\n\tpublic setDecorationsFast(key: string, _ranges: number[]): void {\n\t\tif (!this._codeEditor) {\n\t\t\treturn;\n\t\t}\n\t\tconst ranges: Range[] = [];\n\t\tfor (let i = 0, len = Math.floor(_ranges.length / 4); i < len; i++) {\n\t\t\tranges[i] = new Range(\n\t\t\t\t_ranges[4 * i],\n\t\t\t\t_ranges[4 * i + 1],\n\t\t\t\t_ranges[4 * i + 2],\n\t\t\t\t_ranges[4 * i + 3],\n\t\t\t);\n\t\t}\n\t\tthis._codeEditor.setDecorationsByTypeFast(key, ranges);\n\t}\n\n\tpublic revealRange(range: IRange, revealType: TextEditorRevealType): void {\n\t\tif (!this._codeEditor) {\n\t\t\treturn;\n\t\t}\n\t\tswitch (revealType) {\n\t\t\tcase TextEditorRevealType.Default:\n\t\t\t\tthis._codeEditor.revealRange(range, ScrollType.Smooth);\n\t\t\t\tbreak;\n\t\t\tcase TextEditorRevealType.InCenter:\n\t\t\t\tthis._codeEditor.revealRangeInCenter(range, ScrollType.Smooth);\n\t\t\t\tbreak;\n\t\t\tcase TextEditorRevealType.InCenterIfOutsideViewport:\n\t\t\t\tthis._codeEditor.revealRangeInCenterIfOutsideViewport(\n\t\t\t\t\trange,\n\t\t\t\t\tScrollType.Smooth,\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase TextEditorRevealType.AtTop:\n\t\t\t\tthis._codeEditor.revealRangeAtTop(range, ScrollType.Smooth);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.warn(`Unknown revealType: ${revealType}`);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tpublic isFocused(): boolean {\n\t\tif (this._codeEditor) {\n\t\t\treturn this._codeEditor.hasTextFocus();\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic matches(editor: IEditorPane): boolean {\n\t\tif (!editor) {\n\t\t\treturn false;\n\t\t}\n\t\treturn editor.getControl() === this._codeEditor;\n\t}\n\n\tpublic applyEdits(\n\t\tversionIdCheck: number,\n\t\tedits: ISingleEditOperation[],\n\t\topts: IApplyEditsOptions,\n\t): boolean {\n\t\tif (this._model.getVersionId() !== versionIdCheck) {\n\t\t\t// throw new Error('Model has changed in the meantime!');\n\t\t\t// model changed in the meantime\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!this._codeEditor) {\n\t\t\t// console.warn('applyEdits on invisible editor');\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof opts.setEndOfLine !== \"undefined\") {\n\t\t\tthis._model.pushEOL(opts.setEndOfLine);\n\t\t}\n\n\t\tconst transformedEdits = edits.map((edit): ISingleEditOperation => {\n\t\t\treturn {\n\t\t\t\trange: Range.lift(edit.range),\n\t\t\t\ttext: edit.text,\n\t\t\t\tforceMoveMarkers: edit.forceMoveMarkers,\n\t\t\t};\n\t\t});\n\n\t\tif (opts.undoStopBefore) {\n\t\t\tthis._codeEditor.pushUndoStop();\n\t\t}\n\t\tthis._codeEditor.executeEdits(\"MainThreadTextEditor\", transformedEdits);\n\t\tif (opts.undoStopAfter) {\n\t\t\tthis._codeEditor.pushUndoStop();\n\t\t}\n\t\treturn true;\n\t}\n\n\tasync insertSnippet(\n\t\tmodelVersionId: number,\n\t\ttemplate: string,\n\t\tranges: readonly IRange[],\n\t\topts: IUndoStopOptions,\n\t) {\n\t\tif (!this._codeEditor || !this._codeEditor.hasModel()) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// check if clipboard is required and only iff read it (async)\n\t\tlet clipboardText: string | undefined;\n\t\tconst needsTemplate = SnippetParser.guessNeedsClipboard(template);\n\t\tif (needsTemplate) {\n\t\t\tconst state = new EditorState(\n\t\t\t\tthis._codeEditor,\n\t\t\t\tCodeEditorStateFlag.Value | CodeEditorStateFlag.Position,\n\t\t\t);\n\t\t\tclipboardText = await this._clipboardService.readText();\n\t\t\tif (!state.validate(this._codeEditor)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tif (this._codeEditor.getModel().getVersionId() !== modelVersionId) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst snippetController = SnippetController2.get(this._codeEditor);\n\t\tif (!snippetController) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis._codeEditor.focus();\n\n\t\t// make modifications as snippet edit\n\t\tconst edits: ISnippetEdit[] = ranges.map((range) => ({\n\t\t\trange: Range.lift(range),\n\t\t\ttemplate,\n\t\t}));\n\t\tsnippetController.apply(edits, {\n\t\t\toverwriteBefore: 0,\n\t\t\toverwriteAfter: 0,\n\t\t\tundoStopBefore: opts.undoStopBefore,\n\t\t\tundoStopAfter: opts.undoStopAfter,\n\t\t\tclipboardText,\n\t\t});\n\n\t\treturn true;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
