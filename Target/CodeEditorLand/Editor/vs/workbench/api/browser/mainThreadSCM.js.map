{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadSCM.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Barrier } from '../../../base/common/async.js';\nimport { URI, UriComponents } from '../../../base/common/uri.js';\nimport { Event, Emitter } from '../../../base/common/event.js';\nimport { IObservable, observableValue, observableValueOpts, transaction } from '../../../base/common/observable.js';\nimport { IDisposable, DisposableStore, combinedDisposable, dispose, Disposable } from '../../../base/common/lifecycle.js';\nimport { ISCMService, ISCMRepository, ISCMProvider, ISCMResource, ISCMResourceGroup, ISCMResourceDecorations, IInputValidation, ISCMViewService, InputValidationType, ISCMActionButtonDescriptor } from '../../contrib/scm/common/scm.js';\nimport { ExtHostContext, MainThreadSCMShape, ExtHostSCMShape, SCMProviderFeatures, SCMRawResourceSplices, SCMGroupFeatures, MainContext, SCMHistoryItemDto, SCMHistoryItemRefsChangeEventDto, SCMHistoryItemRefDto } from '../common/extHost.protocol.js';\nimport { Command } from '../../../editor/common/languages.js';\nimport { extHostNamedCustomer, IExtHostContext } from '../../services/extensions/common/extHostCustomers.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { MarshalledId } from '../../../base/common/marshallingIds.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { IMarkdownString } from '../../../base/common/htmlContent.js';\nimport { IQuickDiffService, QuickDiffProvider } from '../../contrib/scm/common/quickDiff.js';\nimport { ISCMHistoryItem, ISCMHistoryItemChange, ISCMHistoryItemRef, ISCMHistoryItemRefsChangeEvent, ISCMHistoryOptions, ISCMHistoryProvider } from '../../contrib/scm/common/history.js';\nimport { ResourceTree } from '../../../base/common/resourceTree.js';\nimport { IUriIdentityService } from '../../../platform/uriIdentity/common/uriIdentity.js';\nimport { IWorkspaceContextService } from '../../../platform/workspace/common/workspace.js';\nimport { basename } from '../../../base/common/resources.js';\nimport { ILanguageService } from '../../../editor/common/languages/language.js';\nimport { IModelService } from '../../../editor/common/services/model.js';\nimport { ITextModelContentProvider, ITextModelService } from '../../../editor/common/services/resolverService.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { ITextModel } from '../../../editor/common/model.js';\nimport { structuralEquals } from '../../../base/common/equals.js';\nimport { historyItemBaseRefColor, historyItemRefColor, historyItemRemoteRefColor } from '../../contrib/scm/browser/scmHistory.js';\nimport { ColorIdentifier } from '../../../platform/theme/common/colorUtils.js';\n\nfunction getIconFromIconDto(iconDto?: UriComponents | { light: UriComponents; dark: UriComponents } | ThemeIcon): URI | { light: URI; dark: URI } | ThemeIcon | undefined {\n\tif (iconDto === undefined) {\n\t\treturn undefined;\n\t} else if (URI.isUri(iconDto)) {\n\t\treturn URI.revive(iconDto);\n\t} else if (ThemeIcon.isThemeIcon(iconDto)) {\n\t\treturn iconDto;\n\t} else {\n\t\tconst icon = iconDto as { light: UriComponents; dark: UriComponents };\n\t\treturn { light: URI.revive(icon.light), dark: URI.revive(icon.dark) };\n\t}\n}\n\nfunction toISCMHistoryItem(historyItemDto: SCMHistoryItemDto): ISCMHistoryItem {\n\tconst references = historyItemDto.references?.map(r => ({\n\t\t...r, icon: getIconFromIconDto(r.icon)\n\t}));\n\n\tconst newLineIndex = historyItemDto.message.indexOf('\\n');\n\tconst subject = newLineIndex === -1 ?\n\t\thistoryItemDto.message : `${historyItemDto.message.substring(0, newLineIndex)}\\u2026`;\n\n\treturn { ...historyItemDto, subject, references };\n}\n\nfunction toISCMHistoryItemRef(historyItemRefDto?: SCMHistoryItemRefDto, color?: ColorIdentifier): ISCMHistoryItemRef | undefined {\n\treturn historyItemRefDto ? { ...historyItemRefDto, icon: getIconFromIconDto(historyItemRefDto.icon), color: color } : undefined;\n}\n\nclass SCMInputBoxContentProvider extends Disposable implements ITextModelContentProvider {\n\tconstructor(\n\t\ttextModelService: ITextModelService,\n\t\tprivate readonly modelService: IModelService,\n\t\tprivate readonly languageService: ILanguageService,\n\t) {\n\t\tsuper();\n\t\tthis._register(textModelService.registerTextModelContentProvider(Schemas.vscodeSourceControl, this));\n\t}\n\n\tasync provideTextContent(resource: URI): Promise<ITextModel | null> {\n\t\tconst existing = this.modelService.getModel(resource);\n\t\tif (existing) {\n\t\t\treturn existing;\n\t\t}\n\t\treturn this.modelService.createModel('', this.languageService.createById('scminput'), resource);\n\t}\n}\n\nclass MainThreadSCMResourceGroup implements ISCMResourceGroup {\n\n\treadonly resources: ISCMResource[] = [];\n\n\tprivate _resourceTree: ResourceTree<ISCMResource, ISCMResourceGroup> | undefined;\n\tget resourceTree(): ResourceTree<ISCMResource, ISCMResourceGroup> {\n\t\tif (!this._resourceTree) {\n\t\t\tconst rootUri = this.provider.rootUri ?? URI.file('/');\n\t\t\tthis._resourceTree = new ResourceTree<ISCMResource, ISCMResourceGroup>(this, rootUri, this._uriIdentService.extUri);\n\t\t\tfor (const resource of this.resources) {\n\t\t\t\tthis._resourceTree.add(resource.sourceUri, resource);\n\t\t\t}\n\t\t}\n\n\t\treturn this._resourceTree;\n\t}\n\n\tprivate readonly _onDidChange = new Emitter<void>();\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tprivate readonly _onDidChangeResources = new Emitter<void>();\n\treadonly onDidChangeResources = this._onDidChangeResources.event;\n\n\tget hideWhenEmpty(): boolean { return !!this.features.hideWhenEmpty; }\n\n\tconstructor(\n\t\tprivate readonly sourceControlHandle: number,\n\t\tprivate readonly handle: number,\n\t\tpublic provider: ISCMProvider,\n\t\tpublic features: SCMGroupFeatures,\n\t\tpublic label: string,\n\t\tpublic id: string,\n\t\tpublic readonly multiDiffEditorEnableViewChanges: boolean,\n\t\tprivate readonly _uriIdentService: IUriIdentityService\n\t) { }\n\n\ttoJSON(): any {\n\t\treturn {\n\t\t\t$mid: MarshalledId.ScmResourceGroup,\n\t\t\tsourceControlHandle: this.sourceControlHandle,\n\t\t\tgroupHandle: this.handle\n\t\t};\n\t}\n\n\tsplice(start: number, deleteCount: number, toInsert: ISCMResource[]) {\n\t\tthis.resources.splice(start, deleteCount, ...toInsert);\n\t\tthis._resourceTree = undefined;\n\n\t\tthis._onDidChangeResources.fire();\n\t}\n\n\t$updateGroup(features: SCMGroupFeatures): void {\n\t\tthis.features = { ...this.features, ...features };\n\t\tthis._onDidChange.fire();\n\t}\n\n\t$updateGroupLabel(label: string): void {\n\t\tthis.label = label;\n\t\tthis._onDidChange.fire();\n\t}\n}\n\nclass MainThreadSCMResource implements ISCMResource {\n\n\tconstructor(\n\t\tprivate readonly proxy: ExtHostSCMShape,\n\t\tprivate readonly sourceControlHandle: number,\n\t\tprivate readonly groupHandle: number,\n\t\tprivate readonly handle: number,\n\t\treadonly sourceUri: URI,\n\t\treadonly resourceGroup: ISCMResourceGroup,\n\t\treadonly decorations: ISCMResourceDecorations,\n\t\treadonly contextValue: string | undefined,\n\t\treadonly command: Command | undefined,\n\t\treadonly multiDiffEditorOriginalUri: URI | undefined,\n\t\treadonly multiDiffEditorModifiedUri: URI | undefined,\n\t) { }\n\n\topen(preserveFocus: boolean): Promise<void> {\n\t\treturn this.proxy.$executeResourceCommand(this.sourceControlHandle, this.groupHandle, this.handle, preserveFocus);\n\t}\n\n\ttoJSON(): any {\n\t\treturn {\n\t\t\t$mid: MarshalledId.ScmResource,\n\t\t\tsourceControlHandle: this.sourceControlHandle,\n\t\t\tgroupHandle: this.groupHandle,\n\t\t\thandle: this.handle\n\t\t};\n\t}\n}\n\nclass MainThreadSCMHistoryProvider implements ISCMHistoryProvider {\n\tprivate readonly _historyItemRef = observableValueOpts<ISCMHistoryItemRef | undefined>({\n\t\towner: this,\n\t\tequalsFn: structuralEquals\n\t}, undefined);\n\tget historyItemRef(): IObservable<ISCMHistoryItemRef | undefined> { return this._historyItemRef; }\n\n\tprivate readonly _historyItemRemoteRef = observableValueOpts<ISCMHistoryItemRef | undefined>({\n\t\towner: this,\n\t\tequalsFn: structuralEquals\n\t}, undefined);\n\tget historyItemRemoteRef(): IObservable<ISCMHistoryItemRef | undefined> { return this._historyItemRemoteRef; }\n\n\tprivate readonly _historyItemBaseRef = observableValueOpts<ISCMHistoryItemRef | undefined>({\n\t\towner: this,\n\t\tequalsFn: structuralEquals\n\t}, undefined);\n\tget historyItemBaseRef(): IObservable<ISCMHistoryItemRef | undefined> { return this._historyItemBaseRef; }\n\n\tprivate readonly _historyItemRefChanges = observableValue<ISCMHistoryItemRefsChangeEvent>(this, { added: [], modified: [], removed: [] });\n\tget historyItemRefChanges(): IObservable<ISCMHistoryItemRefsChangeEvent> { return this._historyItemRefChanges; }\n\n\tconstructor(private readonly proxy: ExtHostSCMShape, private readonly handle: number) { }\n\n\tasync resolveHistoryItemRefsCommonAncestor(historyItemRefs: string[]): Promise<string | undefined> {\n\t\treturn this.proxy.$resolveHistoryItemRefsCommonAncestor(this.handle, historyItemRefs, CancellationToken.None);\n\t}\n\n\tasync provideHistoryItemRefs(): Promise<ISCMHistoryItemRef[] | undefined> {\n\t\tconst historyItemRefs = await this.proxy.$provideHistoryItemRefs(this.handle, CancellationToken.None);\n\t\treturn historyItemRefs?.map(ref => ({ ...ref, icon: getIconFromIconDto(ref.icon) }));\n\t}\n\n\tasync provideHistoryItems(options: ISCMHistoryOptions): Promise<ISCMHistoryItem[] | undefined> {\n\t\tconst historyItems = await this.proxy.$provideHistoryItems(this.handle, options, CancellationToken.None);\n\t\treturn historyItems?.map(historyItem => toISCMHistoryItem(historyItem));\n\t}\n\n\tasync provideHistoryItemChanges(historyItemId: string, historyItemParentId: string | undefined): Promise<ISCMHistoryItemChange[] | undefined> {\n\t\tconst changes = await this.proxy.$provideHistoryItemChanges(this.handle, historyItemId, historyItemParentId, CancellationToken.None);\n\t\treturn changes?.map(change => ({\n\t\t\turi: URI.revive(change.uri),\n\t\t\toriginalUri: change.originalUri && URI.revive(change.originalUri),\n\t\t\tmodifiedUri: change.modifiedUri && URI.revive(change.modifiedUri),\n\t\t\trenameUri: change.renameUri && URI.revive(change.renameUri)\n\t\t}));\n\t}\n\n\t$onDidChangeCurrentHistoryItemRefs(historyItemRef?: SCMHistoryItemRefDto, historyItemRemoteRef?: SCMHistoryItemRefDto, historyItemBaseRef?: SCMHistoryItemRefDto): void {\n\t\ttransaction(tx => {\n\t\t\tthis._historyItemRef.set(toISCMHistoryItemRef(historyItemRef, historyItemRefColor), tx);\n\t\t\tthis._historyItemRemoteRef.set(toISCMHistoryItemRef(historyItemRemoteRef, historyItemRemoteRefColor), tx);\n\t\t\tthis._historyItemBaseRef.set(toISCMHistoryItemRef(historyItemBaseRef, historyItemBaseRefColor), tx);\n\t\t});\n\t}\n\n\t$onDidChangeHistoryItemRefs(historyItemRefs: SCMHistoryItemRefsChangeEventDto): void {\n\t\tconst added = historyItemRefs.added.map(ref => toISCMHistoryItemRef(ref)!);\n\t\tconst modified = historyItemRefs.modified.map(ref => toISCMHistoryItemRef(ref)!);\n\t\tconst removed = historyItemRefs.removed.map(ref => toISCMHistoryItemRef(ref)!);\n\n\t\tthis._historyItemRefChanges.set({ added, modified, removed }, undefined);\n\t}\n}\n\nclass MainThreadSCMProvider implements ISCMProvider, QuickDiffProvider {\n\n\tprivate static ID_HANDLE = 0;\n\tprivate _id = `scm${MainThreadSCMProvider.ID_HANDLE++}`;\n\tget id(): string { return this._id; }\n\n\treadonly groups: MainThreadSCMResourceGroup[] = [];\n\tprivate readonly _onDidChangeResourceGroups = new Emitter<void>();\n\treadonly onDidChangeResourceGroups = this._onDidChangeResourceGroups.event;\n\n\tprivate readonly _onDidChangeResources = new Emitter<void>();\n\treadonly onDidChangeResources = this._onDidChangeResources.event;\n\n\tprivate readonly _groupsByHandle: { [handle: number]: MainThreadSCMResourceGroup } = Object.create(null);\n\n\t// get groups(): ISequence<ISCMResourceGroup> {\n\t// \treturn {\n\t// \t\telements: this._groups,\n\t// \t\tonDidSplice: this._onDidSplice.event\n\t// \t};\n\n\t// \t// return this._groups\n\t// \t// \t.filter(g => g.resources.elements.length > 0 || !g.features.hideWhenEmpty);\n\t// }\n\n\n\tprivate features: SCMProviderFeatures = {};\n\n\tget handle(): number { return this._handle; }\n\tget label(): string { return this._label; }\n\tget rootUri(): URI | undefined { return this._rootUri; }\n\tget inputBoxTextModel(): ITextModel { return this._inputBoxTextModel; }\n\tget contextValue(): string { return this._providerId; }\n\n\tget acceptInputCommand(): Command | undefined { return this.features.acceptInputCommand; }\n\tget actionButton(): ISCMActionButtonDescriptor | undefined { return this.features.actionButton ?? undefined; }\n\n\tprivate readonly _count = observableValue<number | undefined>(this, undefined);\n\tget count() { return this._count; }\n\n\tprivate readonly _statusBarCommands = observableValue<readonly Command[] | undefined>(this, undefined);\n\tget statusBarCommands() { return this._statusBarCommands; }\n\n\tprivate readonly _name: string | undefined;\n\tget name(): string { return this._name ?? this._label; }\n\n\tprivate readonly _commitTemplate = observableValue<string>(this, '');\n\tget commitTemplate() { return this._commitTemplate; }\n\n\tprivate readonly _onDidChange = new Emitter<void>();\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tprivate _quickDiff: IDisposable | undefined;\n\tpublic readonly isSCM: boolean = true;\n\n\tprivate readonly _historyProvider = observableValue<MainThreadSCMHistoryProvider | undefined>(this, undefined);\n\tget historyProvider() { return this._historyProvider; }\n\n\tconstructor(\n\t\tprivate readonly proxy: ExtHostSCMShape,\n\t\tprivate readonly _handle: number,\n\t\tprivate readonly _providerId: string,\n\t\tprivate readonly _label: string,\n\t\tprivate readonly _rootUri: URI | undefined,\n\t\tprivate readonly _inputBoxTextModel: ITextModel,\n\t\tprivate readonly _quickDiffService: IQuickDiffService,\n\t\tprivate readonly _uriIdentService: IUriIdentityService,\n\t\tprivate readonly _workspaceContextService: IWorkspaceContextService\n\t) {\n\t\tif (_rootUri) {\n\t\t\tconst folder = this._workspaceContextService.getWorkspaceFolder(_rootUri);\n\t\t\tif (folder?.uri.toString() === _rootUri.toString()) {\n\t\t\t\tthis._name = folder.name;\n\t\t\t} else if (_rootUri.path !== '/') {\n\t\t\t\tthis._name = basename(_rootUri);\n\t\t\t}\n\t\t}\n\t}\n\n\t$updateSourceControl(features: SCMProviderFeatures): void {\n\t\tthis.features = { ...this.features, ...features };\n\t\tthis._onDidChange.fire();\n\n\t\tif (typeof features.commitTemplate !== 'undefined') {\n\t\t\tthis._commitTemplate.set(features.commitTemplate, undefined);\n\t\t}\n\n\t\tif (typeof features.count !== 'undefined') {\n\t\t\tthis._count.set(features.count, undefined);\n\t\t}\n\n\t\tif (typeof features.statusBarCommands !== 'undefined') {\n\t\t\tthis._statusBarCommands.set(features.statusBarCommands, undefined);\n\t\t}\n\n\t\tif (features.hasQuickDiffProvider && !this._quickDiff) {\n\t\t\tthis._quickDiff = this._quickDiffService.addQuickDiffProvider({\n\t\t\t\tlabel: features.quickDiffLabel ?? this.label,\n\t\t\t\trootUri: this.rootUri,\n\t\t\t\tisSCM: this.isSCM,\n\t\t\t\tgetOriginalResource: (uri: URI) => this.getOriginalResource(uri)\n\t\t\t});\n\t\t} else if (features.hasQuickDiffProvider === false && this._quickDiff) {\n\t\t\tthis._quickDiff.dispose();\n\t\t\tthis._quickDiff = undefined;\n\t\t}\n\n\t\tif (features.hasHistoryProvider && !this.historyProvider.get()) {\n\t\t\tconst historyProvider = new MainThreadSCMHistoryProvider(this.proxy, this.handle);\n\t\t\tthis._historyProvider.set(historyProvider, undefined);\n\t\t} else if (features.hasHistoryProvider === false && this.historyProvider.get()) {\n\t\t\tthis._historyProvider.set(undefined, undefined);\n\t\t}\n\t}\n\n\t$registerGroups(_groups: [number /*handle*/, string /*id*/, string /*label*/, SCMGroupFeatures, /* multiDiffEditorEnableViewChanges */ boolean][]): void {\n\t\tconst groups = _groups.map(([handle, id, label, features, multiDiffEditorEnableViewChanges]) => {\n\t\t\tconst group = new MainThreadSCMResourceGroup(\n\t\t\t\tthis.handle,\n\t\t\t\thandle,\n\t\t\t\tthis,\n\t\t\t\tfeatures,\n\t\t\t\tlabel,\n\t\t\t\tid,\n\t\t\t\tmultiDiffEditorEnableViewChanges,\n\t\t\t\tthis._uriIdentService\n\t\t\t);\n\n\t\t\tthis._groupsByHandle[handle] = group;\n\t\t\treturn group;\n\t\t});\n\n\t\tthis.groups.splice(this.groups.length, 0, ...groups);\n\t\tthis._onDidChangeResourceGroups.fire();\n\t}\n\n\t$updateGroup(handle: number, features: SCMGroupFeatures): void {\n\t\tconst group = this._groupsByHandle[handle];\n\n\t\tif (!group) {\n\t\t\treturn;\n\t\t}\n\n\t\tgroup.$updateGroup(features);\n\t}\n\n\t$updateGroupLabel(handle: number, label: string): void {\n\t\tconst group = this._groupsByHandle[handle];\n\n\t\tif (!group) {\n\t\t\treturn;\n\t\t}\n\n\t\tgroup.$updateGroupLabel(label);\n\t}\n\n\t$spliceGroupResourceStates(splices: SCMRawResourceSplices[]): void {\n\t\tfor (const [groupHandle, groupSlices] of splices) {\n\t\t\tconst group = this._groupsByHandle[groupHandle];\n\n\t\t\tif (!group) {\n\t\t\t\tconsole.warn(`SCM group ${groupHandle} not found in provider ${this.label}`);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// reverse the splices sequence in order to apply them correctly\n\t\t\tgroupSlices.reverse();\n\n\t\t\tfor (const [start, deleteCount, rawResources] of groupSlices) {\n\t\t\t\tconst resources = rawResources.map(rawResource => {\n\t\t\t\t\tconst [handle, sourceUri, icons, tooltip, strikeThrough, faded, contextValue, command, multiDiffEditorOriginalUri, multiDiffEditorModifiedUri] = rawResource;\n\n\t\t\t\t\tconst [light, dark] = icons;\n\t\t\t\t\tconst icon = ThemeIcon.isThemeIcon(light) ? light : URI.revive(light);\n\t\t\t\t\tconst iconDark = (ThemeIcon.isThemeIcon(dark) ? dark : URI.revive(dark)) || icon;\n\n\t\t\t\t\tconst decorations = {\n\t\t\t\t\t\ticon: icon,\n\t\t\t\t\t\ticonDark: iconDark,\n\t\t\t\t\t\ttooltip,\n\t\t\t\t\t\tstrikeThrough,\n\t\t\t\t\t\tfaded\n\t\t\t\t\t};\n\n\t\t\t\t\treturn new MainThreadSCMResource(\n\t\t\t\t\t\tthis.proxy,\n\t\t\t\t\t\tthis.handle,\n\t\t\t\t\t\tgroupHandle,\n\t\t\t\t\t\thandle,\n\t\t\t\t\t\tURI.revive(sourceUri),\n\t\t\t\t\t\tgroup,\n\t\t\t\t\t\tdecorations,\n\t\t\t\t\t\tcontextValue || undefined,\n\t\t\t\t\t\tcommand,\n\t\t\t\t\t\tURI.revive(multiDiffEditorOriginalUri),\n\t\t\t\t\t\tURI.revive(multiDiffEditorModifiedUri),\n\t\t\t\t\t);\n\t\t\t\t});\n\n\t\t\t\tgroup.splice(start, deleteCount, resources);\n\t\t\t}\n\t\t}\n\n\t\tthis._onDidChangeResources.fire();\n\t}\n\n\t$unregisterGroup(handle: number): void {\n\t\tconst group = this._groupsByHandle[handle];\n\n\t\tif (!group) {\n\t\t\treturn;\n\t\t}\n\n\t\tdelete this._groupsByHandle[handle];\n\t\tthis.groups.splice(this.groups.indexOf(group), 1);\n\t\tthis._onDidChangeResourceGroups.fire();\n\t}\n\n\tasync getOriginalResource(uri: URI): Promise<URI | null> {\n\t\tif (!this.features.hasQuickDiffProvider) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst result = await this.proxy.$provideOriginalResource(this.handle, uri, CancellationToken.None);\n\t\treturn result && URI.revive(result);\n\t}\n\n\t$onDidChangeHistoryProviderCurrentHistoryItemRefs(historyItemRef?: SCMHistoryItemRefDto, historyItemRemoteRef?: SCMHistoryItemRefDto, historyItemBaseRef?: SCMHistoryItemRefDto): void {\n\t\tif (!this.historyProvider.get()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._historyProvider.get()?.$onDidChangeCurrentHistoryItemRefs(historyItemRef, historyItemRemoteRef, historyItemBaseRef);\n\t}\n\n\t$onDidChangeHistoryProviderHistoryItemRefs(historyItemRefs: SCMHistoryItemRefsChangeEventDto): void {\n\t\tif (!this.historyProvider.get()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._historyProvider.get()?.$onDidChangeHistoryItemRefs(historyItemRefs);\n\t}\n\n\ttoJSON(): any {\n\t\treturn {\n\t\t\t$mid: MarshalledId.ScmProvider,\n\t\t\thandle: this.handle\n\t\t};\n\t}\n\n\tdispose(): void {\n\t\tthis._quickDiff?.dispose();\n\t}\n}\n\n@extHostNamedCustomer(MainContext.MainThreadSCM)\nexport class MainThreadSCM implements MainThreadSCMShape {\n\n\tprivate readonly _proxy: ExtHostSCMShape;\n\tprivate _repositories = new Map<number, ISCMRepository>();\n\tprivate _repositoryBarriers = new Map<number, Barrier>();\n\tprivate _repositoryDisposables = new Map<number, IDisposable>();\n\tprivate readonly _disposables = new DisposableStore();\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@ISCMService private readonly scmService: ISCMService,\n\t\t@ISCMViewService private readonly scmViewService: ISCMViewService,\n\t\t@ILanguageService private readonly languageService: ILanguageService,\n\t\t@IModelService private readonly modelService: IModelService,\n\t\t@ITextModelService private readonly textModelService: ITextModelService,\n\t\t@IQuickDiffService private readonly quickDiffService: IQuickDiffService,\n\t\t@IUriIdentityService private readonly _uriIdentService: IUriIdentityService,\n\t\t@IWorkspaceContextService private readonly workspaceContextService: IWorkspaceContextService\n\t) {\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostSCM);\n\n\t\tthis._disposables.add(new SCMInputBoxContentProvider(this.textModelService, this.modelService, this.languageService));\n\t}\n\n\tdispose(): void {\n\t\tdispose(this._repositories.values());\n\t\tthis._repositories.clear();\n\n\t\tdispose(this._repositoryDisposables.values());\n\t\tthis._repositoryDisposables.clear();\n\n\t\tthis._disposables.dispose();\n\t}\n\n\tasync $registerSourceControl(handle: number, id: string, label: string, rootUri: UriComponents | undefined, inputBoxDocumentUri: UriComponents): Promise<void> {\n\t\tthis._repositoryBarriers.set(handle, new Barrier());\n\n\t\tconst inputBoxTextModelRef = await this.textModelService.createModelReference(URI.revive(inputBoxDocumentUri));\n\t\tconst provider = new MainThreadSCMProvider(this._proxy, handle, id, label, rootUri ? URI.revive(rootUri) : undefined, inputBoxTextModelRef.object.textEditorModel, this.quickDiffService, this._uriIdentService, this.workspaceContextService);\n\t\tconst repository = this.scmService.registerSCMProvider(provider);\n\t\tthis._repositories.set(handle, repository);\n\n\t\tconst disposable = combinedDisposable(\n\t\t\tinputBoxTextModelRef,\n\t\t\tEvent.filter(this.scmViewService.onDidFocusRepository, r => r === repository)(_ => this._proxy.$setSelectedSourceControl(handle)),\n\t\t\trepository.input.onDidChange(({ value }) => this._proxy.$onInputBoxValueChange(handle, value))\n\t\t);\n\t\tthis._repositoryDisposables.set(handle, disposable);\n\n\t\tif (this.scmViewService.focusedRepository === repository) {\n\t\t\tsetTimeout(() => this._proxy.$setSelectedSourceControl(handle), 0);\n\t\t}\n\n\t\tif (repository.input.value) {\n\t\t\tsetTimeout(() => this._proxy.$onInputBoxValueChange(handle, repository.input.value), 0);\n\t\t}\n\n\t\tthis._repositoryBarriers.get(handle)?.open();\n\t}\n\n\tasync $updateSourceControl(handle: number, features: SCMProviderFeatures): Promise<void> {\n\t\tawait this._repositoryBarriers.get(handle)?.wait();\n\t\tconst repository = this._repositories.get(handle);\n\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst provider = repository.provider as MainThreadSCMProvider;\n\t\tprovider.$updateSourceControl(features);\n\t}\n\n\tasync $unregisterSourceControl(handle: number): Promise<void> {\n\t\tawait this._repositoryBarriers.get(handle)?.wait();\n\t\tconst repository = this._repositories.get(handle);\n\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._repositoryDisposables.get(handle)!.dispose();\n\t\tthis._repositoryDisposables.delete(handle);\n\n\t\trepository.dispose();\n\t\tthis._repositories.delete(handle);\n\t}\n\n\tasync $registerGroups(sourceControlHandle: number, groups: [number /*handle*/, string /*id*/, string /*label*/, SCMGroupFeatures, /* multiDiffEditorEnableViewChanges */ boolean][], splices: SCMRawResourceSplices[]): Promise<void> {\n\t\tawait this._repositoryBarriers.get(sourceControlHandle)?.wait();\n\t\tconst repository = this._repositories.get(sourceControlHandle);\n\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst provider = repository.provider as MainThreadSCMProvider;\n\t\tprovider.$registerGroups(groups);\n\t\tprovider.$spliceGroupResourceStates(splices);\n\t}\n\n\tasync $updateGroup(sourceControlHandle: number, groupHandle: number, features: SCMGroupFeatures): Promise<void> {\n\t\tawait this._repositoryBarriers.get(sourceControlHandle)?.wait();\n\t\tconst repository = this._repositories.get(sourceControlHandle);\n\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst provider = repository.provider as MainThreadSCMProvider;\n\t\tprovider.$updateGroup(groupHandle, features);\n\t}\n\n\tasync $updateGroupLabel(sourceControlHandle: number, groupHandle: number, label: string): Promise<void> {\n\t\tawait this._repositoryBarriers.get(sourceControlHandle)?.wait();\n\t\tconst repository = this._repositories.get(sourceControlHandle);\n\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst provider = repository.provider as MainThreadSCMProvider;\n\t\tprovider.$updateGroupLabel(groupHandle, label);\n\t}\n\n\tasync $spliceResourceStates(sourceControlHandle: number, splices: SCMRawResourceSplices[]): Promise<void> {\n\t\tawait this._repositoryBarriers.get(sourceControlHandle)?.wait();\n\t\tconst repository = this._repositories.get(sourceControlHandle);\n\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst provider = repository.provider as MainThreadSCMProvider;\n\t\tprovider.$spliceGroupResourceStates(splices);\n\t}\n\n\tasync $unregisterGroup(sourceControlHandle: number, handle: number): Promise<void> {\n\t\tawait this._repositoryBarriers.get(sourceControlHandle)?.wait();\n\t\tconst repository = this._repositories.get(sourceControlHandle);\n\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst provider = repository.provider as MainThreadSCMProvider;\n\t\tprovider.$unregisterGroup(handle);\n\t}\n\n\tasync $setInputBoxValue(sourceControlHandle: number, value: string): Promise<void> {\n\t\tawait this._repositoryBarriers.get(sourceControlHandle)?.wait();\n\t\tconst repository = this._repositories.get(sourceControlHandle);\n\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\trepository.input.setValue(value, false);\n\t}\n\n\tasync $setInputBoxPlaceholder(sourceControlHandle: number, placeholder: string): Promise<void> {\n\t\tawait this._repositoryBarriers.get(sourceControlHandle)?.wait();\n\t\tconst repository = this._repositories.get(sourceControlHandle);\n\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\trepository.input.placeholder = placeholder;\n\t}\n\n\tasync $setInputBoxEnablement(sourceControlHandle: number, enabled: boolean): Promise<void> {\n\t\tawait this._repositoryBarriers.get(sourceControlHandle)?.wait();\n\t\tconst repository = this._repositories.get(sourceControlHandle);\n\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\trepository.input.enabled = enabled;\n\t}\n\n\tasync $setInputBoxVisibility(sourceControlHandle: number, visible: boolean): Promise<void> {\n\t\tawait this._repositoryBarriers.get(sourceControlHandle)?.wait();\n\t\tconst repository = this._repositories.get(sourceControlHandle);\n\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\trepository.input.visible = visible;\n\t}\n\n\tasync $showValidationMessage(sourceControlHandle: number, message: string | IMarkdownString, type: InputValidationType): Promise<void> {\n\t\tawait this._repositoryBarriers.get(sourceControlHandle)?.wait();\n\t\tconst repository = this._repositories.get(sourceControlHandle);\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\trepository.input.showValidationMessage(message, type);\n\t}\n\n\tasync $setValidationProviderIsEnabled(sourceControlHandle: number, enabled: boolean): Promise<void> {\n\t\tawait this._repositoryBarriers.get(sourceControlHandle)?.wait();\n\t\tconst repository = this._repositories.get(sourceControlHandle);\n\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (enabled) {\n\t\t\trepository.input.validateInput = async (value, pos): Promise<IInputValidation | undefined> => {\n\t\t\t\tconst result = await this._proxy.$validateInput(sourceControlHandle, value, pos);\n\t\t\t\treturn result && { message: result[0], type: result[1] };\n\t\t\t};\n\t\t} else {\n\t\t\trepository.input.validateInput = async () => undefined;\n\t\t}\n\t}\n\n\tasync $onDidChangeHistoryProviderCurrentHistoryItemRefs(sourceControlHandle: number, historyItemRef?: SCMHistoryItemRefDto, historyItemRemoteRef?: SCMHistoryItemRefDto, historyItemBaseRef?: SCMHistoryItemRefDto): Promise<void> {\n\t\tawait this._repositoryBarriers.get(sourceControlHandle)?.wait();\n\t\tconst repository = this._repositories.get(sourceControlHandle);\n\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst provider = repository.provider as MainThreadSCMProvider;\n\t\tprovider.$onDidChangeHistoryProviderCurrentHistoryItemRefs(historyItemRef, historyItemRemoteRef, historyItemBaseRef);\n\t}\n\n\tasync $onDidChangeHistoryProviderHistoryItemRefs(sourceControlHandle: number, historyItemRefs: SCMHistoryItemRefsChangeEventDto): Promise<void> {\n\t\tawait this._repositoryBarriers.get(sourceControlHandle)?.wait();\n\t\tconst repository = this._repositories.get(sourceControlHandle);\n\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst provider = repository.provider as MainThreadSCMProvider;\n\t\tprovider.$onDidChangeHistoryProviderHistoryItemRefs(historyItemRefs);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
