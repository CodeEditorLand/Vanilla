{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadSCM.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Barrier } from \"../../../base/common/async.js\";\nimport { CancellationToken } from \"../../../base/common/cancellation.js\";\nimport { structuralEquals } from \"../../../base/common/equals.js\";\nimport { Emitter, Event } from \"../../../base/common/event.js\";\nimport type { IMarkdownString } from \"../../../base/common/htmlContent.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n\tcombinedDisposable,\n\tdispose,\n} from \"../../../base/common/lifecycle.js\";\nimport { MarshalledId } from \"../../../base/common/marshallingIds.js\";\nimport { Schemas } from \"../../../base/common/network.js\";\nimport {\n\ttype IObservable,\n\tobservableValue,\n\tobservableValueOpts,\n\ttransaction,\n} from \"../../../base/common/observable.js\";\nimport { ResourceTree } from \"../../../base/common/resourceTree.js\";\nimport { basename } from \"../../../base/common/resources.js\";\nimport { ThemeIcon } from \"../../../base/common/themables.js\";\nimport { URI, type UriComponents } from \"../../../base/common/uri.js\";\nimport type { Command } from \"../../../editor/common/languages.js\";\nimport { ILanguageService } from \"../../../editor/common/languages/language.js\";\nimport type { ITextModel } from \"../../../editor/common/model.js\";\nimport { IModelService } from \"../../../editor/common/services/model.js\";\nimport {\n\ttype ITextModelContentProvider,\n\tITextModelService,\n} from \"../../../editor/common/services/resolverService.js\";\nimport type { ColorIdentifier } from \"../../../platform/theme/common/colorUtils.js\";\nimport { IUriIdentityService } from \"../../../platform/uriIdentity/common/uriIdentity.js\";\nimport { IWorkspaceContextService } from \"../../../platform/workspace/common/workspace.js\";\nimport {\n\thistoryItemBaseRefColor,\n\thistoryItemRefColor,\n\thistoryItemRemoteRefColor,\n} from \"../../contrib/scm/browser/scmHistory.js\";\nimport type {\n\tISCMHistoryItem,\n\tISCMHistoryItemChange,\n\tISCMHistoryItemRef,\n\tISCMHistoryItemRefsChangeEvent,\n\tISCMHistoryOptions,\n\tISCMHistoryProvider,\n} from \"../../contrib/scm/common/history.js\";\nimport {\n\tIQuickDiffService,\n\ttype QuickDiffProvider,\n} from \"../../contrib/scm/common/quickDiff.js\";\nimport {\n\ttype IInputValidation,\n\ttype ISCMActionButtonDescriptor,\n\ttype ISCMProvider,\n\ttype ISCMRepository,\n\ttype ISCMResource,\n\ttype ISCMResourceDecorations,\n\ttype ISCMResourceGroup,\n\tISCMService,\n\tISCMViewService,\n\ttype InputValidationType,\n} from \"../../contrib/scm/common/scm.js\";\nimport {\n\ttype IExtHostContext,\n\textHostNamedCustomer,\n} from \"../../services/extensions/common/extHostCustomers.js\";\nimport {\n\tExtHostContext,\n\ttype ExtHostSCMShape,\n\tMainContext,\n\ttype MainThreadSCMShape,\n\ttype SCMGroupFeatures,\n\ttype SCMHistoryItemDto,\n\ttype SCMHistoryItemRefDto,\n\ttype SCMHistoryItemRefsChangeEventDto,\n\ttype SCMProviderFeatures,\n\ttype SCMRawResourceSplices,\n} from \"../common/extHost.protocol.js\";\n\nfunction getIconFromIconDto(\n\ticonDto?:\n\t\t| UriComponents\n\t\t| { light: UriComponents; dark: UriComponents }\n\t\t| ThemeIcon,\n): URI | { light: URI; dark: URI } | ThemeIcon | undefined {\n\tif (iconDto === undefined) {\n\t\treturn undefined;\n\t} else if (URI.isUri(iconDto)) {\n\t\treturn URI.revive(iconDto);\n\t} else if (ThemeIcon.isThemeIcon(iconDto)) {\n\t\treturn iconDto;\n\t} else {\n\t\tconst icon = iconDto as { light: UriComponents; dark: UriComponents };\n\t\treturn { light: URI.revive(icon.light), dark: URI.revive(icon.dark) };\n\t}\n}\n\nfunction toISCMHistoryItem(historyItemDto: SCMHistoryItemDto): ISCMHistoryItem {\n\tconst references = historyItemDto.references?.map((r) => ({\n\t\t...r,\n\t\ticon: getIconFromIconDto(r.icon),\n\t}));\n\n\tconst newLineIndex = historyItemDto.message.indexOf(\"\\n\");\n\tconst subject =\n\t\tnewLineIndex === -1\n\t\t\t? historyItemDto.message\n\t\t\t: `${historyItemDto.message.substring(0, newLineIndex)}\\u2026`;\n\n\treturn { ...historyItemDto, subject, references };\n}\n\nfunction toISCMHistoryItemRef(\n\thistoryItemRefDto?: SCMHistoryItemRefDto,\n\tcolor?: ColorIdentifier,\n): ISCMHistoryItemRef | undefined {\n\treturn historyItemRefDto\n\t\t? {\n\t\t\t\t...historyItemRefDto,\n\t\t\t\ticon: getIconFromIconDto(historyItemRefDto.icon),\n\t\t\t\tcolor: color,\n\t\t\t}\n\t\t: undefined;\n}\n\nclass SCMInputBoxContentProvider\n\textends Disposable\n\timplements ITextModelContentProvider\n{\n\tconstructor(\n\t\ttextModelService: ITextModelService,\n\t\tprivate readonly modelService: IModelService,\n\t\tprivate readonly languageService: ILanguageService,\n\t) {\n\t\tsuper();\n\t\tthis._register(\n\t\t\ttextModelService.registerTextModelContentProvider(\n\t\t\t\tSchemas.vscodeSourceControl,\n\t\t\t\tthis,\n\t\t\t),\n\t\t);\n\t}\n\n\tasync provideTextContent(resource: URI): Promise<ITextModel | null> {\n\t\tconst existing = this.modelService.getModel(resource);\n\t\tif (existing) {\n\t\t\treturn existing;\n\t\t}\n\t\treturn this.modelService.createModel(\n\t\t\t\"\",\n\t\t\tthis.languageService.createById(\"scminput\"),\n\t\t\tresource,\n\t\t);\n\t}\n}\n\nclass MainThreadSCMResourceGroup implements ISCMResourceGroup {\n\treadonly resources: ISCMResource[] = [];\n\n\tprivate _resourceTree:\n\t\t| ResourceTree<ISCMResource, ISCMResourceGroup>\n\t\t| undefined;\n\tget resourceTree(): ResourceTree<ISCMResource, ISCMResourceGroup> {\n\t\tif (!this._resourceTree) {\n\t\t\tconst rootUri = this.provider.rootUri ?? URI.file(\"/\");\n\t\t\tthis._resourceTree = new ResourceTree<\n\t\t\t\tISCMResource,\n\t\t\t\tISCMResourceGroup\n\t\t\t>(this, rootUri, this._uriIdentService.extUri);\n\t\t\tfor (const resource of this.resources) {\n\t\t\t\tthis._resourceTree.add(resource.sourceUri, resource);\n\t\t\t}\n\t\t}\n\n\t\treturn this._resourceTree;\n\t}\n\n\tprivate readonly _onDidChange = new Emitter<void>();\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tprivate readonly _onDidChangeResources = new Emitter<void>();\n\treadonly onDidChangeResources = this._onDidChangeResources.event;\n\n\tget hideWhenEmpty(): boolean {\n\t\treturn !!this.features.hideWhenEmpty;\n\t}\n\n\tconstructor(\n\t\tprivate readonly sourceControlHandle: number,\n\t\tprivate readonly handle: number,\n\t\tpublic provider: ISCMProvider,\n\t\tpublic features: SCMGroupFeatures,\n\t\tpublic label: string,\n\t\tpublic id: string,\n\t\tpublic readonly multiDiffEditorEnableViewChanges: boolean,\n\t\tprivate readonly _uriIdentService: IUriIdentityService,\n\t) {}\n\n\ttoJSON(): any {\n\t\treturn {\n\t\t\t$mid: MarshalledId.ScmResourceGroup,\n\t\t\tsourceControlHandle: this.sourceControlHandle,\n\t\t\tgroupHandle: this.handle,\n\t\t};\n\t}\n\n\tsplice(start: number, deleteCount: number, toInsert: ISCMResource[]) {\n\t\tthis.resources.splice(start, deleteCount, ...toInsert);\n\t\tthis._resourceTree = undefined;\n\n\t\tthis._onDidChangeResources.fire();\n\t}\n\n\t$updateGroup(features: SCMGroupFeatures): void {\n\t\tthis.features = { ...this.features, ...features };\n\t\tthis._onDidChange.fire();\n\t}\n\n\t$updateGroupLabel(label: string): void {\n\t\tthis.label = label;\n\t\tthis._onDidChange.fire();\n\t}\n}\n\nclass MainThreadSCMResource implements ISCMResource {\n\tconstructor(\n\t\tprivate readonly proxy: ExtHostSCMShape,\n\t\tprivate readonly sourceControlHandle: number,\n\t\tprivate readonly groupHandle: number,\n\t\tprivate readonly handle: number,\n\t\treadonly sourceUri: URI,\n\t\treadonly resourceGroup: ISCMResourceGroup,\n\t\treadonly decorations: ISCMResourceDecorations,\n\t\treadonly contextValue: string | undefined,\n\t\treadonly command: Command | undefined,\n\t\treadonly multiDiffEditorOriginalUri: URI | undefined,\n\t\treadonly multiDiffEditorModifiedUri: URI | undefined,\n\t) {}\n\n\topen(preserveFocus: boolean): Promise<void> {\n\t\treturn this.proxy.$executeResourceCommand(\n\t\t\tthis.sourceControlHandle,\n\t\t\tthis.groupHandle,\n\t\t\tthis.handle,\n\t\t\tpreserveFocus,\n\t\t);\n\t}\n\n\ttoJSON(): any {\n\t\treturn {\n\t\t\t$mid: MarshalledId.ScmResource,\n\t\t\tsourceControlHandle: this.sourceControlHandle,\n\t\t\tgroupHandle: this.groupHandle,\n\t\t\thandle: this.handle,\n\t\t};\n\t}\n}\n\nclass MainThreadSCMHistoryProvider implements ISCMHistoryProvider {\n\tprivate readonly _historyItemRef = observableValueOpts<\n\t\tISCMHistoryItemRef | undefined\n\t>(\n\t\t{\n\t\t\towner: this,\n\t\t\tequalsFn: structuralEquals,\n\t\t},\n\t\tundefined,\n\t);\n\tget historyItemRef(): IObservable<ISCMHistoryItemRef | undefined> {\n\t\treturn this._historyItemRef;\n\t}\n\n\tprivate readonly _historyItemRemoteRef = observableValueOpts<\n\t\tISCMHistoryItemRef | undefined\n\t>(\n\t\t{\n\t\t\towner: this,\n\t\t\tequalsFn: structuralEquals,\n\t\t},\n\t\tundefined,\n\t);\n\tget historyItemRemoteRef(): IObservable<ISCMHistoryItemRef | undefined> {\n\t\treturn this._historyItemRemoteRef;\n\t}\n\n\tprivate readonly _historyItemBaseRef = observableValueOpts<\n\t\tISCMHistoryItemRef | undefined\n\t>(\n\t\t{\n\t\t\towner: this,\n\t\t\tequalsFn: structuralEquals,\n\t\t},\n\t\tundefined,\n\t);\n\tget historyItemBaseRef(): IObservable<ISCMHistoryItemRef | undefined> {\n\t\treturn this._historyItemBaseRef;\n\t}\n\n\tprivate readonly _historyItemRefChanges =\n\t\tobservableValue<ISCMHistoryItemRefsChangeEvent>(this, {\n\t\t\tadded: [],\n\t\t\tmodified: [],\n\t\t\tremoved: [],\n\t\t});\n\tget historyItemRefChanges(): IObservable<ISCMHistoryItemRefsChangeEvent> {\n\t\treturn this._historyItemRefChanges;\n\t}\n\n\tconstructor(\n\t\tprivate readonly proxy: ExtHostSCMShape,\n\t\tprivate readonly handle: number,\n\t) {}\n\n\tasync resolveHistoryItemRefsCommonAncestor(\n\t\thistoryItemRefs: string[],\n\t): Promise<string | undefined> {\n\t\treturn this.proxy.$resolveHistoryItemRefsCommonAncestor(\n\t\t\tthis.handle,\n\t\t\thistoryItemRefs,\n\t\t\tCancellationToken.None,\n\t\t);\n\t}\n\n\tasync provideHistoryItemRefs(): Promise<ISCMHistoryItemRef[] | undefined> {\n\t\tconst historyItemRefs = await this.proxy.$provideHistoryItemRefs(\n\t\t\tthis.handle,\n\t\t\tCancellationToken.None,\n\t\t);\n\t\treturn historyItemRefs?.map((ref) => ({\n\t\t\t...ref,\n\t\t\ticon: getIconFromIconDto(ref.icon),\n\t\t}));\n\t}\n\n\tasync provideHistoryItems(\n\t\toptions: ISCMHistoryOptions,\n\t): Promise<ISCMHistoryItem[] | undefined> {\n\t\tconst historyItems = await this.proxy.$provideHistoryItems(\n\t\t\tthis.handle,\n\t\t\toptions,\n\t\t\tCancellationToken.None,\n\t\t);\n\t\treturn historyItems?.map((historyItem) =>\n\t\t\ttoISCMHistoryItem(historyItem),\n\t\t);\n\t}\n\n\tasync provideHistoryItemChanges(\n\t\thistoryItemId: string,\n\t\thistoryItemParentId: string | undefined,\n\t): Promise<ISCMHistoryItemChange[] | undefined> {\n\t\tconst changes = await this.proxy.$provideHistoryItemChanges(\n\t\t\tthis.handle,\n\t\t\thistoryItemId,\n\t\t\thistoryItemParentId,\n\t\t\tCancellationToken.None,\n\t\t);\n\t\treturn changes?.map((change) => ({\n\t\t\turi: URI.revive(change.uri),\n\t\t\toriginalUri: change.originalUri && URI.revive(change.originalUri),\n\t\t\tmodifiedUri: change.modifiedUri && URI.revive(change.modifiedUri),\n\t\t\trenameUri: change.renameUri && URI.revive(change.renameUri),\n\t\t}));\n\t}\n\n\t$onDidChangeCurrentHistoryItemRefs(\n\t\thistoryItemRef?: SCMHistoryItemRefDto,\n\t\thistoryItemRemoteRef?: SCMHistoryItemRefDto,\n\t\thistoryItemBaseRef?: SCMHistoryItemRefDto,\n\t): void {\n\t\ttransaction((tx) => {\n\t\t\tthis._historyItemRef.set(\n\t\t\t\ttoISCMHistoryItemRef(historyItemRef, historyItemRefColor),\n\t\t\t\ttx,\n\t\t\t);\n\t\t\tthis._historyItemRemoteRef.set(\n\t\t\t\ttoISCMHistoryItemRef(\n\t\t\t\t\thistoryItemRemoteRef,\n\t\t\t\t\thistoryItemRemoteRefColor,\n\t\t\t\t),\n\t\t\t\ttx,\n\t\t\t);\n\t\t\tthis._historyItemBaseRef.set(\n\t\t\t\ttoISCMHistoryItemRef(\n\t\t\t\t\thistoryItemBaseRef,\n\t\t\t\t\thistoryItemBaseRefColor,\n\t\t\t\t),\n\t\t\t\ttx,\n\t\t\t);\n\t\t});\n\t}\n\n\t$onDidChangeHistoryItemRefs(\n\t\thistoryItemRefs: SCMHistoryItemRefsChangeEventDto,\n\t): void {\n\t\tconst added = historyItemRefs.added.map(\n\t\t\t(ref) => toISCMHistoryItemRef(ref)!,\n\t\t);\n\t\tconst modified = historyItemRefs.modified.map(\n\t\t\t(ref) => toISCMHistoryItemRef(ref)!,\n\t\t);\n\t\tconst removed = historyItemRefs.removed.map(\n\t\t\t(ref) => toISCMHistoryItemRef(ref)!,\n\t\t);\n\n\t\tthis._historyItemRefChanges.set(\n\t\t\t{ added, modified, removed },\n\t\t\tundefined,\n\t\t);\n\t}\n}\n\nclass MainThreadSCMProvider implements ISCMProvider, QuickDiffProvider {\n\tprivate static ID_HANDLE = 0;\n\tprivate _id = `scm${MainThreadSCMProvider.ID_HANDLE++}`;\n\tget id(): string {\n\t\treturn this._id;\n\t}\n\n\treadonly groups: MainThreadSCMResourceGroup[] = [];\n\tprivate readonly _onDidChangeResourceGroups = new Emitter<void>();\n\treadonly onDidChangeResourceGroups = this._onDidChangeResourceGroups.event;\n\n\tprivate readonly _onDidChangeResources = new Emitter<void>();\n\treadonly onDidChangeResources = this._onDidChangeResources.event;\n\n\tprivate readonly _groupsByHandle: {\n\t\t[handle: number]: MainThreadSCMResourceGroup;\n\t} = Object.create(null);\n\n\t// get groups(): ISequence<ISCMResourceGroup> {\n\t// \treturn {\n\t// \t\telements: this._groups,\n\t// \t\tonDidSplice: this._onDidSplice.event\n\t// \t};\n\n\t// \t// return this._groups\n\t// \t// \t.filter(g => g.resources.elements.length > 0 || !g.features.hideWhenEmpty);\n\t// }\n\n\tprivate features: SCMProviderFeatures = {};\n\n\tget handle(): number {\n\t\treturn this._handle;\n\t}\n\tget label(): string {\n\t\treturn this._label;\n\t}\n\tget rootUri(): URI | undefined {\n\t\treturn this._rootUri;\n\t}\n\tget inputBoxTextModel(): ITextModel {\n\t\treturn this._inputBoxTextModel;\n\t}\n\tget contextValue(): string {\n\t\treturn this._providerId;\n\t}\n\n\tget acceptInputCommand(): Command | undefined {\n\t\treturn this.features.acceptInputCommand;\n\t}\n\tget actionButton(): ISCMActionButtonDescriptor | undefined {\n\t\treturn this.features.actionButton ?? undefined;\n\t}\n\n\tprivate readonly _count = observableValue<number | undefined>(\n\t\tthis,\n\t\tundefined,\n\t);\n\tget count() {\n\t\treturn this._count;\n\t}\n\n\tprivate readonly _statusBarCommands = observableValue<\n\t\treadonly Command[] | undefined\n\t>(this, undefined);\n\tget statusBarCommands() {\n\t\treturn this._statusBarCommands;\n\t}\n\n\tprivate readonly _name: string | undefined;\n\tget name(): string {\n\t\treturn this._name ?? this._label;\n\t}\n\n\tprivate readonly _commitTemplate = observableValue<string>(this, \"\");\n\tget commitTemplate() {\n\t\treturn this._commitTemplate;\n\t}\n\n\tprivate readonly _onDidChange = new Emitter<void>();\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tprivate _quickDiff: IDisposable | undefined;\n\tpublic readonly isSCM: boolean = true;\n\n\tprivate readonly _historyProvider = observableValue<\n\t\tMainThreadSCMHistoryProvider | undefined\n\t>(this, undefined);\n\tget historyProvider() {\n\t\treturn this._historyProvider;\n\t}\n\n\tconstructor(\n\t\tprivate readonly proxy: ExtHostSCMShape,\n\t\tprivate readonly _handle: number,\n\t\tprivate readonly _providerId: string,\n\t\tprivate readonly _label: string,\n\t\tprivate readonly _rootUri: URI | undefined,\n\t\tprivate readonly _inputBoxTextModel: ITextModel,\n\t\tprivate readonly _quickDiffService: IQuickDiffService,\n\t\tprivate readonly _uriIdentService: IUriIdentityService,\n\t\tprivate readonly _workspaceContextService: IWorkspaceContextService,\n\t) {\n\t\tif (_rootUri) {\n\t\t\tconst folder =\n\t\t\t\tthis._workspaceContextService.getWorkspaceFolder(_rootUri);\n\t\t\tif (folder?.uri.toString() === _rootUri.toString()) {\n\t\t\t\tthis._name = folder.name;\n\t\t\t} else if (_rootUri.path !== \"/\") {\n\t\t\t\tthis._name = basename(_rootUri);\n\t\t\t}\n\t\t}\n\t}\n\n\t$updateSourceControl(features: SCMProviderFeatures): void {\n\t\tthis.features = { ...this.features, ...features };\n\t\tthis._onDidChange.fire();\n\n\t\tif (typeof features.commitTemplate !== \"undefined\") {\n\t\t\tthis._commitTemplate.set(features.commitTemplate, undefined);\n\t\t}\n\n\t\tif (typeof features.count !== \"undefined\") {\n\t\t\tthis._count.set(features.count, undefined);\n\t\t}\n\n\t\tif (typeof features.statusBarCommands !== \"undefined\") {\n\t\t\tthis._statusBarCommands.set(features.statusBarCommands, undefined);\n\t\t}\n\n\t\tif (features.hasQuickDiffProvider && !this._quickDiff) {\n\t\t\tthis._quickDiff = this._quickDiffService.addQuickDiffProvider({\n\t\t\t\tlabel: features.quickDiffLabel ?? this.label,\n\t\t\t\trootUri: this.rootUri,\n\t\t\t\tisSCM: this.isSCM,\n\t\t\t\tgetOriginalResource: (uri: URI) =>\n\t\t\t\t\tthis.getOriginalResource(uri),\n\t\t\t});\n\t\t} else if (features.hasQuickDiffProvider === false && this._quickDiff) {\n\t\t\tthis._quickDiff.dispose();\n\t\t\tthis._quickDiff = undefined;\n\t\t}\n\n\t\tif (features.hasHistoryProvider && !this.historyProvider.get()) {\n\t\t\tconst historyProvider = new MainThreadSCMHistoryProvider(\n\t\t\t\tthis.proxy,\n\t\t\t\tthis.handle,\n\t\t\t);\n\t\t\tthis._historyProvider.set(historyProvider, undefined);\n\t\t} else if (\n\t\t\tfeatures.hasHistoryProvider === false &&\n\t\t\tthis.historyProvider.get()\n\t\t) {\n\t\t\tthis._historyProvider.set(undefined, undefined);\n\t\t}\n\t}\n\n\t$registerGroups(\n\t\t_groups: [\n\t\t\tnumber /*handle*/,\n\t\t\tstring /*id*/,\n\t\t\tstring /*label*/,\n\t\t\tSCMGroupFeatures,\n\t\t\t/* multiDiffEditorEnableViewChanges */ boolean,\n\t\t][],\n\t): void {\n\t\tconst groups = _groups.map(\n\t\t\t([\n\t\t\t\thandle,\n\t\t\t\tid,\n\t\t\t\tlabel,\n\t\t\t\tfeatures,\n\t\t\t\tmultiDiffEditorEnableViewChanges,\n\t\t\t]) => {\n\t\t\t\tconst group = new MainThreadSCMResourceGroup(\n\t\t\t\t\tthis.handle,\n\t\t\t\t\thandle,\n\t\t\t\t\tthis,\n\t\t\t\t\tfeatures,\n\t\t\t\t\tlabel,\n\t\t\t\t\tid,\n\t\t\t\t\tmultiDiffEditorEnableViewChanges,\n\t\t\t\t\tthis._uriIdentService,\n\t\t\t\t);\n\n\t\t\t\tthis._groupsByHandle[handle] = group;\n\t\t\t\treturn group;\n\t\t\t},\n\t\t);\n\n\t\tthis.groups.splice(this.groups.length, 0, ...groups);\n\t\tthis._onDidChangeResourceGroups.fire();\n\t}\n\n\t$updateGroup(handle: number, features: SCMGroupFeatures): void {\n\t\tconst group = this._groupsByHandle[handle];\n\n\t\tif (!group) {\n\t\t\treturn;\n\t\t}\n\n\t\tgroup.$updateGroup(features);\n\t}\n\n\t$updateGroupLabel(handle: number, label: string): void {\n\t\tconst group = this._groupsByHandle[handle];\n\n\t\tif (!group) {\n\t\t\treturn;\n\t\t}\n\n\t\tgroup.$updateGroupLabel(label);\n\t}\n\n\t$spliceGroupResourceStates(splices: SCMRawResourceSplices[]): void {\n\t\tfor (const [groupHandle, groupSlices] of splices) {\n\t\t\tconst group = this._groupsByHandle[groupHandle];\n\n\t\t\tif (!group) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t`SCM group ${groupHandle} not found in provider ${this.label}`,\n\t\t\t\t);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// reverse the splices sequence in order to apply them correctly\n\t\t\tgroupSlices.reverse();\n\n\t\t\tfor (const [start, deleteCount, rawResources] of groupSlices) {\n\t\t\t\tconst resources = rawResources.map((rawResource) => {\n\t\t\t\t\tconst [\n\t\t\t\t\t\thandle,\n\t\t\t\t\t\tsourceUri,\n\t\t\t\t\t\ticons,\n\t\t\t\t\t\ttooltip,\n\t\t\t\t\t\tstrikeThrough,\n\t\t\t\t\t\tfaded,\n\t\t\t\t\t\tcontextValue,\n\t\t\t\t\t\tcommand,\n\t\t\t\t\t\tmultiDiffEditorOriginalUri,\n\t\t\t\t\t\tmultiDiffEditorModifiedUri,\n\t\t\t\t\t] = rawResource;\n\n\t\t\t\t\tconst [light, dark] = icons;\n\t\t\t\t\tconst icon = ThemeIcon.isThemeIcon(light)\n\t\t\t\t\t\t? light\n\t\t\t\t\t\t: URI.revive(light);\n\t\t\t\t\tconst iconDark =\n\t\t\t\t\t\t(ThemeIcon.isThemeIcon(dark)\n\t\t\t\t\t\t\t? dark\n\t\t\t\t\t\t\t: URI.revive(dark)) || icon;\n\n\t\t\t\t\tconst decorations = {\n\t\t\t\t\t\ticon: icon,\n\t\t\t\t\t\ticonDark: iconDark,\n\t\t\t\t\t\ttooltip,\n\t\t\t\t\t\tstrikeThrough,\n\t\t\t\t\t\tfaded,\n\t\t\t\t\t};\n\n\t\t\t\t\treturn new MainThreadSCMResource(\n\t\t\t\t\t\tthis.proxy,\n\t\t\t\t\t\tthis.handle,\n\t\t\t\t\t\tgroupHandle,\n\t\t\t\t\t\thandle,\n\t\t\t\t\t\tURI.revive(sourceUri),\n\t\t\t\t\t\tgroup,\n\t\t\t\t\t\tdecorations,\n\t\t\t\t\t\tcontextValue || undefined,\n\t\t\t\t\t\tcommand,\n\t\t\t\t\t\tURI.revive(multiDiffEditorOriginalUri),\n\t\t\t\t\t\tURI.revive(multiDiffEditorModifiedUri),\n\t\t\t\t\t);\n\t\t\t\t});\n\n\t\t\t\tgroup.splice(start, deleteCount, resources);\n\t\t\t}\n\t\t}\n\n\t\tthis._onDidChangeResources.fire();\n\t}\n\n\t$unregisterGroup(handle: number): void {\n\t\tconst group = this._groupsByHandle[handle];\n\n\t\tif (!group) {\n\t\t\treturn;\n\t\t}\n\n\t\tdelete this._groupsByHandle[handle];\n\t\tthis.groups.splice(this.groups.indexOf(group), 1);\n\t\tthis._onDidChangeResourceGroups.fire();\n\t}\n\n\tasync getOriginalResource(uri: URI): Promise<URI | null> {\n\t\tif (!this.features.hasQuickDiffProvider) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst result = await this.proxy.$provideOriginalResource(\n\t\t\tthis.handle,\n\t\t\turi,\n\t\t\tCancellationToken.None,\n\t\t);\n\t\treturn result && URI.revive(result);\n\t}\n\n\t$onDidChangeHistoryProviderCurrentHistoryItemRefs(\n\t\thistoryItemRef?: SCMHistoryItemRefDto,\n\t\thistoryItemRemoteRef?: SCMHistoryItemRefDto,\n\t\thistoryItemBaseRef?: SCMHistoryItemRefDto,\n\t): void {\n\t\tif (!this.historyProvider.get()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._historyProvider\n\t\t\t.get()\n\t\t\t?.$onDidChangeCurrentHistoryItemRefs(\n\t\t\t\thistoryItemRef,\n\t\t\t\thistoryItemRemoteRef,\n\t\t\t\thistoryItemBaseRef,\n\t\t\t);\n\t}\n\n\t$onDidChangeHistoryProviderHistoryItemRefs(\n\t\thistoryItemRefs: SCMHistoryItemRefsChangeEventDto,\n\t): void {\n\t\tif (!this.historyProvider.get()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._historyProvider\n\t\t\t.get()\n\t\t\t?.$onDidChangeHistoryItemRefs(historyItemRefs);\n\t}\n\n\ttoJSON(): any {\n\t\treturn {\n\t\t\t$mid: MarshalledId.ScmProvider,\n\t\t\thandle: this.handle,\n\t\t};\n\t}\n\n\tdispose(): void {\n\t\tthis._quickDiff?.dispose();\n\t}\n}\n\n@extHostNamedCustomer(MainContext.MainThreadSCM)\nexport class MainThreadSCM implements MainThreadSCMShape {\n\tprivate readonly _proxy: ExtHostSCMShape;\n\tprivate _repositories = new Map<number, ISCMRepository>();\n\tprivate _repositoryBarriers = new Map<number, Barrier>();\n\tprivate _repositoryDisposables = new Map<number, IDisposable>();\n\tprivate readonly _disposables = new DisposableStore();\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@ISCMService private readonly scmService: ISCMService,\n\t\t@ISCMViewService private readonly scmViewService: ISCMViewService,\n\t\t@ILanguageService private readonly languageService: ILanguageService,\n\t\t@IModelService private readonly modelService: IModelService,\n\t\t@ITextModelService private readonly textModelService: ITextModelService,\n\t\t@IQuickDiffService private readonly quickDiffService: IQuickDiffService,\n\t\t@IUriIdentityService private readonly _uriIdentService: IUriIdentityService,\n\t\t@IWorkspaceContextService private readonly workspaceContextService: IWorkspaceContextService\n\t) {\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostSCM);\n\n\t\tthis._disposables.add(new SCMInputBoxContentProvider(this.textModelService, this.modelService, this.languageService));\n\t}\n\n\tdispose(): void {\n\t\tdispose(this._repositories.values());\n\t\tthis._repositories.clear();\n\n\t\tdispose(this._repositoryDisposables.values());\n\t\tthis._repositoryDisposables.clear();\n\n\t\tthis._disposables.dispose();\n\t}\n\n\tasync $registerSourceControl(\n\t\thandle: number,\n\t\tid: string,\n\t\tlabel: string,\n\t\trootUri: UriComponents | undefined,\n\t\tinputBoxDocumentUri: UriComponents,\n\t): Promise<void> {\n\t\tthis._repositoryBarriers.set(handle, new Barrier());\n\n\t\tconst inputBoxTextModelRef =\n\t\t\tawait this.textModelService.createModelReference(\n\t\t\t\tURI.revive(inputBoxDocumentUri),\n\t\t\t);\n\t\tconst provider = new MainThreadSCMProvider(\n\t\t\tthis._proxy,\n\t\t\thandle,\n\t\t\tid,\n\t\t\tlabel,\n\t\t\trootUri ? URI.revive(rootUri) : undefined,\n\t\t\tinputBoxTextModelRef.object.textEditorModel,\n\t\t\tthis.quickDiffService,\n\t\t\tthis._uriIdentService,\n\t\t\tthis.workspaceContextService,\n\t\t);\n\t\tconst repository = this.scmService.registerSCMProvider(provider);\n\t\tthis._repositories.set(handle, repository);\n\n\t\tconst disposable = combinedDisposable(\n\t\t\tinputBoxTextModelRef,\n\t\t\tEvent.filter(\n\t\t\t\tthis.scmViewService.onDidFocusRepository,\n\t\t\t\t(r) => r === repository,\n\t\t\t)((_) => this._proxy.$setSelectedSourceControl(handle)),\n\t\t\trepository.input.onDidChange(({ value }) =>\n\t\t\t\tthis._proxy.$onInputBoxValueChange(handle, value),\n\t\t\t),\n\t\t);\n\t\tthis._repositoryDisposables.set(handle, disposable);\n\n\t\tif (this.scmViewService.focusedRepository === repository) {\n\t\t\tsetTimeout(() => this._proxy.$setSelectedSourceControl(handle), 0);\n\t\t}\n\n\t\tif (repository.input.value) {\n\t\t\tsetTimeout(\n\t\t\t\t() =>\n\t\t\t\t\tthis._proxy.$onInputBoxValueChange(\n\t\t\t\t\t\thandle,\n\t\t\t\t\t\trepository.input.value,\n\t\t\t\t\t),\n\t\t\t\t0,\n\t\t\t);\n\t\t}\n\n\t\tthis._repositoryBarriers.get(handle)?.open();\n\t}\n\n\tasync $updateSourceControl(\n\t\thandle: number,\n\t\tfeatures: SCMProviderFeatures,\n\t): Promise<void> {\n\t\tawait this._repositoryBarriers.get(handle)?.wait();\n\t\tconst repository = this._repositories.get(handle);\n\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst provider = repository.provider as MainThreadSCMProvider;\n\t\tprovider.$updateSourceControl(features);\n\t}\n\n\tasync $unregisterSourceControl(handle: number): Promise<void> {\n\t\tawait this._repositoryBarriers.get(handle)?.wait();\n\t\tconst repository = this._repositories.get(handle);\n\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._repositoryDisposables.get(handle)!.dispose();\n\t\tthis._repositoryDisposables.delete(handle);\n\n\t\trepository.dispose();\n\t\tthis._repositories.delete(handle);\n\t}\n\n\tasync $registerGroups(\n\t\tsourceControlHandle: number,\n\t\tgroups: [\n\t\t\tnumber /*handle*/,\n\t\t\tstring /*id*/,\n\t\t\tstring /*label*/,\n\t\t\tSCMGroupFeatures,\n\t\t\t/* multiDiffEditorEnableViewChanges */ boolean,\n\t\t][],\n\t\tsplices: SCMRawResourceSplices[],\n\t): Promise<void> {\n\t\tawait this._repositoryBarriers.get(sourceControlHandle)?.wait();\n\t\tconst repository = this._repositories.get(sourceControlHandle);\n\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst provider = repository.provider as MainThreadSCMProvider;\n\t\tprovider.$registerGroups(groups);\n\t\tprovider.$spliceGroupResourceStates(splices);\n\t}\n\n\tasync $updateGroup(\n\t\tsourceControlHandle: number,\n\t\tgroupHandle: number,\n\t\tfeatures: SCMGroupFeatures,\n\t): Promise<void> {\n\t\tawait this._repositoryBarriers.get(sourceControlHandle)?.wait();\n\t\tconst repository = this._repositories.get(sourceControlHandle);\n\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst provider = repository.provider as MainThreadSCMProvider;\n\t\tprovider.$updateGroup(groupHandle, features);\n\t}\n\n\tasync $updateGroupLabel(\n\t\tsourceControlHandle: number,\n\t\tgroupHandle: number,\n\t\tlabel: string,\n\t): Promise<void> {\n\t\tawait this._repositoryBarriers.get(sourceControlHandle)?.wait();\n\t\tconst repository = this._repositories.get(sourceControlHandle);\n\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst provider = repository.provider as MainThreadSCMProvider;\n\t\tprovider.$updateGroupLabel(groupHandle, label);\n\t}\n\n\tasync $spliceResourceStates(\n\t\tsourceControlHandle: number,\n\t\tsplices: SCMRawResourceSplices[],\n\t): Promise<void> {\n\t\tawait this._repositoryBarriers.get(sourceControlHandle)?.wait();\n\t\tconst repository = this._repositories.get(sourceControlHandle);\n\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst provider = repository.provider as MainThreadSCMProvider;\n\t\tprovider.$spliceGroupResourceStates(splices);\n\t}\n\n\tasync $unregisterGroup(\n\t\tsourceControlHandle: number,\n\t\thandle: number,\n\t): Promise<void> {\n\t\tawait this._repositoryBarriers.get(sourceControlHandle)?.wait();\n\t\tconst repository = this._repositories.get(sourceControlHandle);\n\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst provider = repository.provider as MainThreadSCMProvider;\n\t\tprovider.$unregisterGroup(handle);\n\t}\n\n\tasync $setInputBoxValue(\n\t\tsourceControlHandle: number,\n\t\tvalue: string,\n\t): Promise<void> {\n\t\tawait this._repositoryBarriers.get(sourceControlHandle)?.wait();\n\t\tconst repository = this._repositories.get(sourceControlHandle);\n\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\trepository.input.setValue(value, false);\n\t}\n\n\tasync $setInputBoxPlaceholder(\n\t\tsourceControlHandle: number,\n\t\tplaceholder: string,\n\t): Promise<void> {\n\t\tawait this._repositoryBarriers.get(sourceControlHandle)?.wait();\n\t\tconst repository = this._repositories.get(sourceControlHandle);\n\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\trepository.input.placeholder = placeholder;\n\t}\n\n\tasync $setInputBoxEnablement(\n\t\tsourceControlHandle: number,\n\t\tenabled: boolean,\n\t): Promise<void> {\n\t\tawait this._repositoryBarriers.get(sourceControlHandle)?.wait();\n\t\tconst repository = this._repositories.get(sourceControlHandle);\n\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\trepository.input.enabled = enabled;\n\t}\n\n\tasync $setInputBoxVisibility(\n\t\tsourceControlHandle: number,\n\t\tvisible: boolean,\n\t): Promise<void> {\n\t\tawait this._repositoryBarriers.get(sourceControlHandle)?.wait();\n\t\tconst repository = this._repositories.get(sourceControlHandle);\n\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\trepository.input.visible = visible;\n\t}\n\n\tasync $showValidationMessage(\n\t\tsourceControlHandle: number,\n\t\tmessage: string | IMarkdownString,\n\t\ttype: InputValidationType,\n\t): Promise<void> {\n\t\tawait this._repositoryBarriers.get(sourceControlHandle)?.wait();\n\t\tconst repository = this._repositories.get(sourceControlHandle);\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\trepository.input.showValidationMessage(message, type);\n\t}\n\n\tasync $setValidationProviderIsEnabled(\n\t\tsourceControlHandle: number,\n\t\tenabled: boolean,\n\t): Promise<void> {\n\t\tawait this._repositoryBarriers.get(sourceControlHandle)?.wait();\n\t\tconst repository = this._repositories.get(sourceControlHandle);\n\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (enabled) {\n\t\t\trepository.input.validateInput = async (\n\t\t\t\tvalue,\n\t\t\t\tpos,\n\t\t\t): Promise<IInputValidation | undefined> => {\n\t\t\t\tconst result = await this._proxy.$validateInput(\n\t\t\t\t\tsourceControlHandle,\n\t\t\t\t\tvalue,\n\t\t\t\t\tpos,\n\t\t\t\t);\n\t\t\t\treturn result && { message: result[0], type: result[1] };\n\t\t\t};\n\t\t} else {\n\t\t\trepository.input.validateInput = async () => undefined;\n\t\t}\n\t}\n\n\tasync $onDidChangeHistoryProviderCurrentHistoryItemRefs(\n\t\tsourceControlHandle: number,\n\t\thistoryItemRef?: SCMHistoryItemRefDto,\n\t\thistoryItemRemoteRef?: SCMHistoryItemRefDto,\n\t\thistoryItemBaseRef?: SCMHistoryItemRefDto,\n\t): Promise<void> {\n\t\tawait this._repositoryBarriers.get(sourceControlHandle)?.wait();\n\t\tconst repository = this._repositories.get(sourceControlHandle);\n\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst provider = repository.provider as MainThreadSCMProvider;\n\t\tprovider.$onDidChangeHistoryProviderCurrentHistoryItemRefs(\n\t\t\thistoryItemRef,\n\t\t\thistoryItemRemoteRef,\n\t\t\thistoryItemBaseRef,\n\t\t);\n\t}\n\n\tasync $onDidChangeHistoryProviderHistoryItemRefs(\n\t\tsourceControlHandle: number,\n\t\thistoryItemRefs: SCMHistoryItemRefsChangeEventDto,\n\t): Promise<void> {\n\t\tawait this._repositoryBarriers.get(sourceControlHandle)?.wait();\n\t\tconst repository = this._repositories.get(sourceControlHandle);\n\n\t\tif (!repository) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst provider = repository.provider as MainThreadSCMProvider;\n\t\tprovider.$onDidChangeHistoryProviderHistoryItemRefs(historyItemRefs);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
