var v=Object.defineProperty;var I=Object.getOwnPropertyDescriptor;var c=(i,e,t,r)=>{for(var o=r>1?void 0:r?I(e,t):e,a=i.length-1,n;a>=0;a--)(n=i[a])&&(o=(r?n(e,t,o):n(o))||o);return r&&o&&v(e,t,o),o},p=(i,e)=>(t,r)=>e(t,r,i);import{raceCancellationError as d}from"../../../../vs/base/common/async.js";import"../../../../vs/base/common/cancellation.js";import"../../../../vs/base/common/lifecycle.js";import{shouldSynchronizeModel as S}from"../../../../vs/editor/common/model.js";import{localize as f}from"../../../../vs/nls.js";import{IInstantiationService as u}from"../../../../vs/platform/instantiation/common/instantiation.js";import"../../../../vs/platform/progress/common/progress.js";import{extHostCustomer as P}from"../../../../vs/workbench/services/extensions/common/extHostCustomers.js";import{ITextFileService as E}from"../../../../vs/workbench/services/textfile/common/textfiles.js";import{ExtHostContext as T}from"../common/extHost.protocol.js";class h{_proxy;constructor(e){this._proxy=e.getProxy(T.ExtHostDocumentSaveParticipant)}async participate(e,t,r,o){if(!e.textEditorModel||!S(e.textEditorModel))return;const a=new Promise((n,l)=>{setTimeout(()=>l(new Error(f("timeout.onWillSave","Aborted onWillSaveTextDocument-event after 1750ms"))),1750),this._proxy.$participateInSave(e.resource,t.reason).then(m=>{if(!m.every(x=>x))return Promise.reject(new Error("listener failed"))}).then(n,l)});return d(a,o)}}let s=class{constructor(e,t,r){this._textFileService=r;this._saveParticipantDisposable=this._textFileService.files.addSaveParticipant(t.createInstance(h,e))}_saveParticipantDisposable;dispose(){this._saveParticipantDisposable.dispose()}};s=c([P,p(1,u),p(2,E)],s);export{s as SaveParticipant};
