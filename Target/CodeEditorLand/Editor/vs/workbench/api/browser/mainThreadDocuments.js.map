{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadDocuments.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toErrorMessage } from '../../../base/common/errorMessage.js';\nimport { IReference, dispose, Disposable } from '../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { URI, UriComponents } from '../../../base/common/uri.js';\nimport { ITextModel, shouldSynchronizeModel } from '../../../editor/common/model.js';\nimport { IModelService } from '../../../editor/common/services/model.js';\nimport { ITextModelService } from '../../../editor/common/services/resolverService.js';\nimport { IFileService, FileOperation } from '../../../platform/files/common/files.js';\nimport { ExtHostContext, ExtHostDocumentsShape, MainThreadDocumentsShape } from '../common/extHost.protocol.js';\nimport { ITextFileService } from '../../services/textfile/common/textfiles.js';\nimport { IWorkbenchEnvironmentService } from '../../services/environment/common/environmentService.js';\nimport { toLocalResource, extUri, IExtUri } from '../../../base/common/resources.js';\nimport { IWorkingCopyFileService } from '../../services/workingCopy/common/workingCopyFileService.js';\nimport { IUriIdentityService } from '../../../platform/uriIdentity/common/uriIdentity.js';\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { IPathService } from '../../services/path/common/pathService.js';\nimport { ResourceMap } from '../../../base/common/map.js';\nimport { IExtHostContext } from '../../services/extensions/common/extHostCustomers.js';\nimport { ErrorNoTelemetry } from '../../../base/common/errors.js';\n\nexport class BoundModelReferenceCollection {\n\n\tprivate _data = new Array<{ uri: URI; length: number; dispose(): void }>();\n\tprivate _length = 0;\n\n\tconstructor(\n\t\tprivate readonly _extUri: IExtUri,\n\t\tprivate readonly _maxAge: number = 1000 * 60 * 3, // auto-dispse by age\n\t\tprivate readonly _maxLength: number = 1024 * 1024 * 80, // auto-dispose by total length\n\t\tprivate readonly _maxSize: number = 50 // auto-dispose by number of references\n\t) {\n\t\t//\n\t}\n\n\tdispose(): void {\n\t\tthis._data = dispose(this._data);\n\t}\n\n\tremove(uri: URI): void {\n\t\tfor (const entry of [...this._data] /* copy array because dispose will modify it */) {\n\t\t\tif (this._extUri.isEqualOrParent(entry.uri, uri)) {\n\t\t\t\tentry.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tadd(uri: URI, ref: IReference<any>, length: number = 0): void {\n\t\t// const length = ref.object.textEditorModel.getValueLength();\n\t\tconst dispose = () => {\n\t\t\tconst idx = this._data.indexOf(entry);\n\t\t\tif (idx >= 0) {\n\t\t\t\tthis._length -= length;\n\t\t\t\tref.dispose();\n\t\t\t\tclearTimeout(handle);\n\t\t\t\tthis._data.splice(idx, 1);\n\t\t\t}\n\t\t};\n\t\tconst handle = setTimeout(dispose, this._maxAge);\n\t\tconst entry = { uri, length, dispose };\n\n\t\tthis._data.push(entry);\n\t\tthis._length += length;\n\t\tthis._cleanup();\n\t}\n\n\tprivate _cleanup(): void {\n\t\t// clean-up wrt total length\n\t\twhile (this._length > this._maxLength) {\n\t\t\tthis._data[0].dispose();\n\t\t}\n\t\t// clean-up wrt number of documents\n\t\tconst extraSize = Math.ceil(this._maxSize * 1.2);\n\t\tif (this._data.length >= extraSize) {\n\t\t\tdispose(this._data.slice(0, extraSize - this._maxSize));\n\t\t}\n\t}\n}\n\nclass ModelTracker extends Disposable {\n\n\tprivate _knownVersionId: number;\n\n\tconstructor(\n\t\tprivate readonly _model: ITextModel,\n\t\tprivate readonly _onIsCaughtUpWithContentChanges: Emitter<URI>,\n\t\tprivate readonly _proxy: ExtHostDocumentsShape,\n\t\tprivate readonly _textFileService: ITextFileService,\n\t) {\n\t\tsuper();\n\t\tthis._knownVersionId = this._model.getVersionId();\n\t\tthis._store.add(this._model.onDidChangeContent((e) => {\n\t\t\tthis._knownVersionId = e.versionId;\n\t\t\tthis._proxy.$acceptModelChanged(this._model.uri, e, this._textFileService.isDirty(this._model.uri));\n\t\t\tif (this.isCaughtUpWithContentChanges()) {\n\t\t\t\tthis._onIsCaughtUpWithContentChanges.fire(this._model.uri);\n\t\t\t}\n\t\t}));\n\t}\n\n\tisCaughtUpWithContentChanges(): boolean {\n\t\treturn (this._model.getVersionId() === this._knownVersionId);\n\t}\n}\n\nexport class MainThreadDocuments extends Disposable implements MainThreadDocumentsShape {\n\n\tprivate _onIsCaughtUpWithContentChanges = this._store.add(new Emitter<URI>());\n\treadonly onIsCaughtUpWithContentChanges = this._onIsCaughtUpWithContentChanges.event;\n\n\tprivate readonly _proxy: ExtHostDocumentsShape;\n\tprivate readonly _modelTrackers = new ResourceMap<ModelTracker>();\n\tprivate readonly _modelReferenceCollection: BoundModelReferenceCollection;\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@IModelService private readonly _modelService: IModelService,\n\t\t@ITextFileService private readonly _textFileService: ITextFileService,\n\t\t@IFileService private readonly _fileService: IFileService,\n\t\t@ITextModelService private readonly _textModelResolverService: ITextModelService,\n\t\t@IWorkbenchEnvironmentService private readonly _environmentService: IWorkbenchEnvironmentService,\n\t\t@IUriIdentityService private readonly _uriIdentityService: IUriIdentityService,\n\t\t@IWorkingCopyFileService workingCopyFileService: IWorkingCopyFileService,\n\t\t@IPathService private readonly _pathService: IPathService\n\t) {\n\t\tsuper();\n\n\t\tthis._modelReferenceCollection = this._store.add(new BoundModelReferenceCollection(_uriIdentityService.extUri));\n\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostDocuments);\n\n\t\tthis._store.add(_modelService.onModelLanguageChanged(this._onModelModeChanged, this));\n\n\t\tthis._store.add(_textFileService.files.onDidSave(e => {\n\t\t\tif (this._shouldHandleFileEvent(e.model.resource)) {\n\t\t\t\tthis._proxy.$acceptModelSaved(e.model.resource);\n\t\t\t}\n\t\t}));\n\t\tthis._store.add(_textFileService.files.onDidChangeDirty(m => {\n\t\t\tif (this._shouldHandleFileEvent(m.resource)) {\n\t\t\t\tthis._proxy.$acceptDirtyStateChanged(m.resource, m.isDirty());\n\t\t\t}\n\t\t}));\n\n\t\tthis._store.add(workingCopyFileService.onDidRunWorkingCopyFileOperation(e => {\n\t\t\tconst isMove = e.operation === FileOperation.MOVE;\n\t\t\tif (isMove || e.operation === FileOperation.DELETE) {\n\t\t\t\tfor (const pair of e.files) {\n\t\t\t\t\tconst removed = isMove ? pair.source : pair.target;\n\t\t\t\t\tif (removed) {\n\t\t\t\t\t\tthis._modelReferenceCollection.remove(removed);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\toverride dispose(): void {\n\t\tdispose(this._modelTrackers.values());\n\t\tthis._modelTrackers.clear();\n\t\tsuper.dispose();\n\t}\n\n\tisCaughtUpWithContentChanges(resource: URI): boolean {\n\t\tconst tracker = this._modelTrackers.get(resource);\n\t\tif (tracker) {\n\t\t\treturn tracker.isCaughtUpWithContentChanges();\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate _shouldHandleFileEvent(resource: URI): boolean {\n\t\tconst model = this._modelService.getModel(resource);\n\t\treturn !!model && shouldSynchronizeModel(model);\n\t}\n\n\thandleModelAdded(model: ITextModel): void {\n\t\t// Same filter as in mainThreadEditorsTracker\n\t\tif (!shouldSynchronizeModel(model)) {\n\t\t\t// don't synchronize too large models\n\t\t\treturn;\n\t\t}\n\t\tthis._modelTrackers.set(model.uri, new ModelTracker(model, this._onIsCaughtUpWithContentChanges, this._proxy, this._textFileService));\n\t}\n\n\tprivate _onModelModeChanged(event: { model: ITextModel; oldLanguageId: string }): void {\n\t\tconst { model } = event;\n\t\tif (!this._modelTrackers.has(model.uri)) {\n\t\t\treturn;\n\t\t}\n\t\tthis._proxy.$acceptModelLanguageChanged(model.uri, model.getLanguageId());\n\t}\n\n\thandleModelRemoved(modelUrl: URI): void {\n\t\tif (!this._modelTrackers.has(modelUrl)) {\n\t\t\treturn;\n\t\t}\n\t\tthis._modelTrackers.get(modelUrl)!.dispose();\n\t\tthis._modelTrackers.delete(modelUrl);\n\t}\n\n\t// --- from extension host process\n\n\tasync $trySaveDocument(uri: UriComponents): Promise<boolean> {\n\t\tconst target = await this._textFileService.save(URI.revive(uri));\n\t\treturn Boolean(target);\n\t}\n\n\tasync $tryOpenDocument(uriData: UriComponents): Promise<URI> {\n\t\tconst inputUri = URI.revive(uriData);\n\t\tif (!inputUri.scheme || !(inputUri.fsPath || inputUri.authority)) {\n\t\t\tthrow new ErrorNoTelemetry(`Invalid uri. Scheme and authority or path must be set.`);\n\t\t}\n\n\t\tconst canonicalUri = this._uriIdentityService.asCanonicalUri(inputUri);\n\n\t\tlet promise: Promise<URI>;\n\t\tswitch (canonicalUri.scheme) {\n\t\t\tcase Schemas.untitled:\n\t\t\t\tpromise = this._handleUntitledScheme(canonicalUri);\n\t\t\t\tbreak;\n\t\t\tcase Schemas.file:\n\t\t\tdefault:\n\t\t\t\tpromise = this._handleAsResourceInput(canonicalUri);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tlet documentUri: URI | undefined;\n\t\ttry {\n\t\t\tdocumentUri = await promise;\n\t\t} catch (err) {\n\t\t\tthrow new ErrorNoTelemetry(`cannot open ${canonicalUri.toString()}. Detail: ${toErrorMessage(err)}`);\n\t\t}\n\t\tif (!documentUri) {\n\t\t\tthrow new ErrorNoTelemetry(`cannot open ${canonicalUri.toString()}`);\n\t\t} else if (!extUri.isEqual(documentUri, canonicalUri)) {\n\t\t\tthrow new ErrorNoTelemetry(`cannot open ${canonicalUri.toString()}. Detail: Actual document opened as ${documentUri.toString()}`);\n\t\t} else if (!this._modelTrackers.has(canonicalUri)) {\n\t\t\tthrow new ErrorNoTelemetry(`cannot open ${canonicalUri.toString()}. Detail: Files above 50MB cannot be synchronized with extensions.`);\n\t\t} else {\n\t\t\treturn canonicalUri;\n\t\t}\n\t}\n\n\t$tryCreateDocument(options?: { language?: string; content?: string }): Promise<URI> {\n\t\treturn this._doCreateUntitled(undefined, options ? options.language : undefined, options ? options.content : undefined);\n\t}\n\n\tprivate async _handleAsResourceInput(uri: URI): Promise<URI> {\n\t\tconst ref = await this._textModelResolverService.createModelReference(uri);\n\t\tthis._modelReferenceCollection.add(uri, ref, ref.object.textEditorModel.getValueLength());\n\t\treturn ref.object.textEditorModel.uri;\n\t}\n\n\tprivate async _handleUntitledScheme(uri: URI): Promise<URI> {\n\t\tconst asLocalUri = toLocalResource(uri, this._environmentService.remoteAuthority, this._pathService.defaultUriScheme);\n\t\tconst exists = await this._fileService.exists(asLocalUri);\n\t\tif (exists) {\n\t\t\t// don't create a new file ontop of an existing file\n\t\t\treturn Promise.reject(new Error('file already exists'));\n\t\t}\n\t\treturn await this._doCreateUntitled(Boolean(uri.path) ? uri : undefined);\n\t}\n\n\tprivate async _doCreateUntitled(associatedResource?: URI, languageId?: string, initialValue?: string): Promise<URI> {\n\t\tconst model = this._textFileService.untitled.create({\n\t\t\tassociatedResource,\n\t\t\tlanguageId,\n\t\t\tinitialValue\n\t\t});\n\t\tconst resource = model.resource;\n\t\tconst ref = await this._textModelResolverService.createModelReference(resource);\n\t\tif (!this._modelTrackers.has(resource)) {\n\t\t\tref.dispose();\n\t\t\tthrow new Error(`expected URI ${resource.toString()} to have come to LIFE`);\n\t\t}\n\t\tthis._modelReferenceCollection.add(resource, ref, ref.object.textEditorModel.getValueLength());\n\t\tEvent.once(model.onDidRevert)(() => this._modelReferenceCollection.remove(resource));\n\t\tthis._proxy.$acceptDirtyStateChanged(resource, true); // mark as dirty\n\t\treturn resource;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["dispose"]
}
