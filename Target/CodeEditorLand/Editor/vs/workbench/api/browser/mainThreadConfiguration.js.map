{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadConfiguration.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from '../../../base/common/uri.js';\nimport { IDisposable } from '../../../base/common/lifecycle.js';\nimport { Registry } from '../../../platform/registry/common/platform.js';\nimport { IConfigurationRegistry, Extensions as ConfigurationExtensions, ConfigurationScope, getScopes } from '../../../platform/configuration/common/configurationRegistry.js';\nimport { IWorkspaceContextService, WorkbenchState } from '../../../platform/workspace/common/workspace.js';\nimport { MainThreadConfigurationShape, MainContext, ExtHostContext, IConfigurationInitData } from '../common/extHost.protocol.js';\nimport { extHostNamedCustomer, IExtHostContext } from '../../services/extensions/common/extHostCustomers.js';\nimport { ConfigurationTarget, IConfigurationService, IConfigurationOverrides } from '../../../platform/configuration/common/configuration.js';\nimport { IEnvironmentService } from '../../../platform/environment/common/environment.js';\n\n@extHostNamedCustomer(MainContext.MainThreadConfiguration)\nexport class MainThreadConfiguration implements MainThreadConfigurationShape {\n\n\tprivate readonly _configurationListener: IDisposable;\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@IWorkspaceContextService private readonly _workspaceContextService: IWorkspaceContextService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IEnvironmentService private readonly _environmentService: IEnvironmentService,\n\t) {\n\t\tconst proxy = extHostContext.getProxy(ExtHostContext.ExtHostConfiguration);\n\n\t\tproxy.$initializeConfiguration(this._getConfigurationData());\n\t\tthis._configurationListener = configurationService.onDidChangeConfiguration(e => {\n\t\t\tproxy.$acceptConfigurationChanged(this._getConfigurationData(), e.change);\n\t\t});\n\t}\n\n\tprivate _getConfigurationData(): IConfigurationInitData {\n\t\tconst configurationData: IConfigurationInitData = { ...(this.configurationService.getConfigurationData()!), configurationScopes: [] };\n\t\t// Send configurations scopes only in development mode.\n\t\tif (!this._environmentService.isBuilt || this._environmentService.isExtensionDevelopment) {\n\t\t\tconfigurationData.configurationScopes = getScopes();\n\t\t}\n\t\treturn configurationData;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._configurationListener.dispose();\n\t}\n\n\t$updateConfigurationOption(target: ConfigurationTarget | null, key: string, value: any, overrides: IConfigurationOverrides | undefined, scopeToLanguage: boolean | undefined): Promise<void> {\n\t\toverrides = { resource: overrides?.resource ? URI.revive(overrides.resource) : undefined, overrideIdentifier: overrides?.overrideIdentifier };\n\t\treturn this.writeConfiguration(target, key, value, overrides, scopeToLanguage);\n\t}\n\n\t$removeConfigurationOption(target: ConfigurationTarget | null, key: string, overrides: IConfigurationOverrides | undefined, scopeToLanguage: boolean | undefined): Promise<void> {\n\t\toverrides = { resource: overrides?.resource ? URI.revive(overrides.resource) : undefined, overrideIdentifier: overrides?.overrideIdentifier };\n\t\treturn this.writeConfiguration(target, key, undefined, overrides, scopeToLanguage);\n\t}\n\n\tprivate writeConfiguration(target: ConfigurationTarget | null, key: string, value: any, overrides: IConfigurationOverrides, scopeToLanguage: boolean | undefined): Promise<void> {\n\t\ttarget = target !== null && target !== undefined ? target : this.deriveConfigurationTarget(key, overrides);\n\t\tconst configurationValue = this.configurationService.inspect(key, overrides);\n\t\tswitch (target) {\n\t\t\tcase ConfigurationTarget.MEMORY:\n\t\t\t\treturn this._updateValue(key, value, target, configurationValue?.memory?.override, overrides, scopeToLanguage);\n\t\t\tcase ConfigurationTarget.WORKSPACE_FOLDER:\n\t\t\t\treturn this._updateValue(key, value, target, configurationValue?.workspaceFolder?.override, overrides, scopeToLanguage);\n\t\t\tcase ConfigurationTarget.WORKSPACE:\n\t\t\t\treturn this._updateValue(key, value, target, configurationValue?.workspace?.override, overrides, scopeToLanguage);\n\t\t\tcase ConfigurationTarget.USER_REMOTE:\n\t\t\t\treturn this._updateValue(key, value, target, configurationValue?.userRemote?.override, overrides, scopeToLanguage);\n\t\t\tdefault:\n\t\t\t\treturn this._updateValue(key, value, target, configurationValue?.userLocal?.override, overrides, scopeToLanguage);\n\t\t}\n\t}\n\n\tprivate _updateValue(key: string, value: any, configurationTarget: ConfigurationTarget, overriddenValue: any | undefined, overrides: IConfigurationOverrides, scopeToLanguage: boolean | undefined): Promise<void> {\n\t\toverrides = scopeToLanguage === true ? overrides\n\t\t\t: scopeToLanguage === false ? { resource: overrides.resource }\n\t\t\t\t: overrides.overrideIdentifier && overriddenValue !== undefined ? overrides\n\t\t\t\t\t: { resource: overrides.resource };\n\t\treturn this.configurationService.updateValue(key, value, overrides, configurationTarget, { donotNotifyError: true });\n\t}\n\n\tprivate deriveConfigurationTarget(key: string, overrides: IConfigurationOverrides): ConfigurationTarget {\n\t\tif (overrides.resource && this._workspaceContextService.getWorkbenchState() === WorkbenchState.WORKSPACE) {\n\t\t\tconst configurationProperties = Registry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration).getConfigurationProperties();\n\t\t\tif (configurationProperties[key] && (configurationProperties[key].scope === ConfigurationScope.RESOURCE || configurationProperties[key].scope === ConfigurationScope.LANGUAGE_OVERRIDABLE)) {\n\t\t\t\treturn ConfigurationTarget.WORKSPACE_FOLDER;\n\t\t\t}\n\t\t}\n\t\treturn ConfigurationTarget.WORKSPACE;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
