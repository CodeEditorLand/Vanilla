{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadTelemetry.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from \"../../../base/common/lifecycle.js\";\nimport { IConfigurationService } from \"../../../platform/configuration/common/configuration.js\";\nimport { IEnvironmentService } from \"../../../platform/environment/common/environment.js\";\nimport { IProductService } from \"../../../platform/product/common/productService.js\";\nimport type {\n\tClassifiedEvent,\n\tIGDPRProperty,\n\tOmitMetadata,\n\tStrictPropertyCheck,\n} from \"../../../platform/telemetry/common/gdprTypings.js\";\nimport {\n\tITelemetryService,\n\tTELEMETRY_OLD_SETTING_ID,\n\tTELEMETRY_SETTING_ID,\n\tTelemetryLevel,\n} from \"../../../platform/telemetry/common/telemetry.js\";\nimport { supportsTelemetry } from \"../../../platform/telemetry/common/telemetryUtils.js\";\nimport {\n\ttype IExtHostContext,\n\textHostNamedCustomer,\n} from \"../../services/extensions/common/extHostCustomers.js\";\nimport {\n\tExtHostContext,\n\ttype ExtHostTelemetryShape,\n\tMainContext,\n\ttype MainThreadTelemetryShape,\n} from \"../common/extHost.protocol.js\";\n\n@extHostNamedCustomer(MainContext.MainThreadTelemetry)\nexport class MainThreadTelemetry\n\textends Disposable\n\timplements MainThreadTelemetryShape\n{\n\tprivate readonly _proxy: ExtHostTelemetryShape;\n\n\tprivate static readonly _name = \"pluginHostTelemetry\";\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@ITelemetryService\n\t\tprivate readonly _telemetryService: ITelemetryService,\n\t\t@IConfigurationService\n\t\tprivate readonly _configurationService: IConfigurationService,\n\t\t@IEnvironmentService\n\t\tprivate readonly _environmentService: IEnvironmentService,\n\t\t@IProductService private readonly _productService: IProductService,\n\t) {\n\t\tsuper();\n\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostTelemetry);\n\n\t\tif (supportsTelemetry(this._productService, this._environmentService)) {\n\t\t\tthis._register(\n\t\t\t\tthis._configurationService.onDidChangeConfiguration((e) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\te.affectsConfiguration(TELEMETRY_SETTING_ID) ||\n\t\t\t\t\t\te.affectsConfiguration(TELEMETRY_OLD_SETTING_ID)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis._proxy.$onDidChangeTelemetryLevel(\n\t\t\t\t\t\t\tthis.telemetryLevel,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t\tthis._proxy.$initializeTelemetryLevel(\n\t\t\tthis.telemetryLevel,\n\t\t\tsupportsTelemetry(this._productService, this._environmentService),\n\t\t\tthis._productService.enabledTelemetryLevels,\n\t\t);\n\t}\n\n\tprivate get telemetryLevel(): TelemetryLevel {\n\t\tif (\n\t\t\t!supportsTelemetry(this._productService, this._environmentService)\n\t\t) {\n\t\t\treturn TelemetryLevel.NONE;\n\t\t}\n\n\t\treturn this._telemetryService.telemetryLevel;\n\t}\n\n\t$publicLog(eventName: string, data: any = Object.create(null)): void {\n\t\t// __GDPR__COMMON__ \"pluginHostTelemetry\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\tdata[MainThreadTelemetry._name] = true;\n\t\tthis._telemetryService.publicLog(eventName, data);\n\t}\n\n\t$publicLog2<\n\t\tE extends ClassifiedEvent<OmitMetadata<T>> = never,\n\t\tT extends IGDPRProperty = never,\n\t>(eventName: string, data?: StrictPropertyCheck<T, E>): void {\n\t\tthis.$publicLog(eventName, data as any);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;;;AAKA,SAAS,kBAAkB;AAC3B,SAAS,6BAA6B;AACtC,SAAS,2BAA2B;AACpC,SAAS,uBAAuB;AAOhC;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,yBAAyB;AAClC;AAAA,EAEC;AAAA,OACM;AACP;AAAA,EACC;AAAA,EAEA;AAAA,OAEM;AAGA,IAAM,sBAAN,cACE,WAET;AAAA,EAKC,YACC,gBAEiB,mBAEA,uBAEA,qBACiB,iBACjC;AACD,UAAM;AAPW;AAEA;AAEA;AACiB;AAIlC,SAAK,SAAS,eAAe,SAAS,eAAe,gBAAgB;AAErE,QAAI,kBAAkB,KAAK,iBAAiB,KAAK,mBAAmB,GAAG;AACtE,WAAK;AAAA,QACJ,KAAK,sBAAsB,yBAAyB,CAAC,MAAM;AAC1D,cACC,EAAE,qBAAqB,oBAAoB,KAC3C,EAAE,qBAAqB,wBAAwB,GAC9C;AACD,iBAAK,OAAO;AAAA,cACX,KAAK;AAAA,YACN;AAAA,UACD;AAAA,QACD,CAAC;AAAA,MACF;AAAA,IACD;AACA,SAAK,OAAO;AAAA,MACX,KAAK;AAAA,MACL,kBAAkB,KAAK,iBAAiB,KAAK,mBAAmB;AAAA,MAChE,KAAK,gBAAgB;AAAA,IACtB;AAAA,EACD;AAAA,EArCiB;AAAA,EAuCjB,IAAY,iBAAiC;AAC5C,QACC,CAAC,kBAAkB,KAAK,iBAAiB,KAAK,mBAAmB,GAChE;AACD,aAAO,eAAe;AAAA,IACvB;AAEA,WAAO,KAAK,kBAAkB;AAAA,EAC/B;AAAA,EAEA,WAAW,WAAmB,OAAY,uBAAO,OAAO,IAAI,GAAS;AAEpE,SAAK,oBAAoB,KAAK,IAAI;AAClC,SAAK,kBAAkB,UAAU,WAAW,IAAI;AAAA,EACjD;AAAA,EAEA,YAGE,WAAmB,MAAwC;AAC5D,SAAK,WAAW,WAAW,IAAW;AAAA,EACvC;AACD;AA9DA;AAGC,cANY,qBAMY,SAAQ;AANpB,sBAAN;AAAA,EADN,qBAAqB,YAAY,mBAAmB;AAAA,EAWlD;AAAA,EAEA;AAAA,EAEA;AAAA,EAEA;AAAA,GAhBU;",
  "names": []
}
