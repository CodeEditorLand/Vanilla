{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadTelemetry.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { IEnvironmentService } from '../../../platform/environment/common/environment.js';\nimport { IProductService } from '../../../platform/product/common/productService.js';\nimport { ClassifiedEvent, IGDPRProperty, OmitMetadata, StrictPropertyCheck } from '../../../platform/telemetry/common/gdprTypings.js';\nimport { ITelemetryService, TelemetryLevel, TELEMETRY_OLD_SETTING_ID, TELEMETRY_SETTING_ID } from '../../../platform/telemetry/common/telemetry.js';\nimport { supportsTelemetry } from '../../../platform/telemetry/common/telemetryUtils.js';\nimport { extHostNamedCustomer, IExtHostContext } from '../../services/extensions/common/extHostCustomers.js';\nimport { ExtHostContext, ExtHostTelemetryShape, MainContext, MainThreadTelemetryShape } from '../common/extHost.protocol.js';\n\n@extHostNamedCustomer(MainContext.MainThreadTelemetry)\nexport class MainThreadTelemetry extends Disposable implements MainThreadTelemetryShape {\n\tprivate readonly _proxy: ExtHostTelemetryShape;\n\n\tprivate static readonly _name = 'pluginHostTelemetry';\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@ITelemetryService private readonly _telemetryService: ITelemetryService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IEnvironmentService private readonly _environmentService: IEnvironmentService,\n\t\t@IProductService private readonly _productService: IProductService,\n\t) {\n\t\tsuper();\n\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostTelemetry);\n\n\t\tif (supportsTelemetry(this._productService, this._environmentService)) {\n\t\t\tthis._register(this._configurationService.onDidChangeConfiguration(e => {\n\t\t\t\tif (e.affectsConfiguration(TELEMETRY_SETTING_ID) || e.affectsConfiguration(TELEMETRY_OLD_SETTING_ID)) {\n\t\t\t\t\tthis._proxy.$onDidChangeTelemetryLevel(this.telemetryLevel);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t\tthis._proxy.$initializeTelemetryLevel(this.telemetryLevel, supportsTelemetry(this._productService, this._environmentService), this._productService.enabledTelemetryLevels);\n\t}\n\n\tprivate get telemetryLevel(): TelemetryLevel {\n\t\tif (!supportsTelemetry(this._productService, this._environmentService)) {\n\t\t\treturn TelemetryLevel.NONE;\n\t\t}\n\n\t\treturn this._telemetryService.telemetryLevel;\n\t}\n\n\t$publicLog(eventName: string, data: any = Object.create(null)): void {\n\t\t// __GDPR__COMMON__ \"pluginHostTelemetry\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\tdata[MainThreadTelemetry._name] = true;\n\t\tthis._telemetryService.publicLog(eventName, data);\n\t}\n\n\t$publicLog2<E extends ClassifiedEvent<OmitMetadata<T>> = never, T extends IGDPRProperty = never>(eventName: string, data?: StrictPropertyCheck<T, E>): void {\n\t\tthis.$publicLog(eventName, data as any);\n\t}\n}\n\n\n"],
  "mappings": ";;;;;;;;;;;;;;AAKA,SAAS,kBAAkB;AAC3B,SAAS,6BAA6B;AACtC,SAAS,2BAA2B;AACpC,SAAS,uBAAuB;AAChC,SAAS,iBAAiB,eAAe,cAAc,2BAA2B;AAClF,SAAS,mBAAmB,gBAAgB,0BAA0B,4BAA4B;AAClG,SAAS,yBAAyB;AAClC,SAAS,sBAAsB,uBAAuB;AACtD,SAAS,gBAAgB,uBAAuB,aAAa,gCAAgC;AAGtF,IAAM,sBAAN,cAAkC,WAA+C;AAAA,EAKvF,YACC,gBACoC,mBACI,uBACF,qBACJ,iBACjC;AACD,UAAM;AAL8B;AACI;AACF;AACJ;AAIlC,SAAK,SAAS,eAAe,SAAS,eAAe,gBAAgB;AAErE,QAAI,kBAAkB,KAAK,iBAAiB,KAAK,mBAAmB,GAAG;AACtE,WAAK,UAAU,KAAK,sBAAsB,yBAAyB,OAAK;AACvE,YAAI,EAAE,qBAAqB,oBAAoB,KAAK,EAAE,qBAAqB,wBAAwB,GAAG;AACrG,eAAK,OAAO,2BAA2B,KAAK,cAAc;AAAA,QAC3D;AAAA,MACD,CAAC,CAAC;AAAA,IACH;AACA,SAAK,OAAO,0BAA0B,KAAK,gBAAgB,kBAAkB,KAAK,iBAAiB,KAAK,mBAAmB,GAAG,KAAK,gBAAgB,sBAAsB;AAAA,EAC1K;AAAA,EAvBiB;AAAA,EAyBjB,IAAY,iBAAiC;AAC5C,QAAI,CAAC,kBAAkB,KAAK,iBAAiB,KAAK,mBAAmB,GAAG;AACvE,aAAO,eAAe;AAAA,IACvB;AAEA,WAAO,KAAK,kBAAkB;AAAA,EAC/B;AAAA,EAEA,WAAW,WAAmB,OAAY,uBAAO,OAAO,IAAI,GAAS;AAEpE,SAAK,oBAAoB,KAAK,IAAI;AAClC,SAAK,kBAAkB,UAAU,WAAW,IAAI;AAAA,EACjD;AAAA,EAEA,YAAiG,WAAmB,MAAwC;AAC3J,SAAK,WAAW,WAAW,IAAW;AAAA,EACvC;AACD;AA3CwF;AAGvF,cAHY,qBAGY,SAAQ;AAHpB,sBAAN;AAAA,EADN,qBAAqB,YAAY,mBAAmB;AAAA,EAQlD;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAVU;",
  "names": []
}
