{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadProfileContentHandlers.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { CancellationToken } from \"../../../base/common/cancellation.js\";\nimport {\n\tDisposable,\n\tDisposableMap,\n\ttype IDisposable,\n} from \"../../../base/common/lifecycle.js\";\nimport { revive } from \"../../../base/common/marshalling.js\";\nimport type { URI } from \"../../../base/common/uri.js\";\nimport {\n\ttype IExtHostContext,\n\textHostNamedCustomer,\n} from \"../../services/extensions/common/extHostCustomers.js\";\nimport {\n\ttype ISaveProfileResult,\n\tIUserDataProfileImportExportService,\n} from \"../../services/userDataProfile/common/userDataProfile.js\";\nimport {\n\tExtHostContext,\n\ttype ExtHostProfileContentHandlersShape,\n\tMainContext,\n\ttype MainThreadProfileContentHandlersShape,\n} from \"../common/extHost.protocol.js\";\n\n@extHostNamedCustomer(MainContext.MainThreadProfileContentHandlers)\nexport class MainThreadProfileContentHandlers\n\textends Disposable\n\timplements MainThreadProfileContentHandlersShape\n{\n\tprivate readonly proxy: ExtHostProfileContentHandlersShape;\n\n\tprivate readonly registeredHandlers = this._register(\n\t\tnew DisposableMap<string, IDisposable>(),\n\t);\n\n\tconstructor(\n\t\tcontext: IExtHostContext,\n\t\t@IUserDataProfileImportExportService\n\t\tprivate readonly userDataProfileImportExportService: IUserDataProfileImportExportService,\n\t) {\n\t\tsuper();\n\t\tthis.proxy = context.getProxy(\n\t\t\tExtHostContext.ExtHostProfileContentHandlers,\n\t\t);\n\t}\n\n\tasync $registerProfileContentHandler(\n\t\tid: string,\n\t\tname: string,\n\t\tdescription: string | undefined,\n\t\textensionId: string,\n\t): Promise<void> {\n\t\tthis.registeredHandlers.set(\n\t\t\tid,\n\t\t\tthis.userDataProfileImportExportService.registerProfileContentHandler(\n\t\t\t\tid,\n\t\t\t\t{\n\t\t\t\t\tname,\n\t\t\t\t\tdescription,\n\t\t\t\t\textensionId,\n\t\t\t\t\tsaveProfile: async (\n\t\t\t\t\t\tname: string,\n\t\t\t\t\t\tcontent: string,\n\t\t\t\t\t\ttoken: CancellationToken,\n\t\t\t\t\t) => {\n\t\t\t\t\t\tconst result = await this.proxy.$saveProfile(\n\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tcontent,\n\t\t\t\t\t\t\ttoken,\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn result\n\t\t\t\t\t\t\t? revive<ISaveProfileResult>(result)\n\t\t\t\t\t\t\t: null;\n\t\t\t\t\t},\n\t\t\t\t\treadProfile: async (uri: URI, token: CancellationToken) => {\n\t\t\t\t\t\treturn this.proxy.$readProfile(id, uri, token);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tasync $unregisterProfileContentHandler(id: string): Promise<void> {\n\t\tthis.registeredHandlers.deleteAndDispose(id);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAMA;AAAA,EACC;AAAA,EACA;AAAA,OAEM;AACP,SAAS,cAAc;AAEvB;AAAA,EAEC;AAAA,OACM;AACP;AAAA,EAEC;AAAA,OACM;AACP;AAAA,EACC;AAAA,EAEA;AAAA,OAEM;AAGA,IAAM,mCAAN,cACE,WAET;AAAA,EAOC,YACC,SAEiB,oCAChB;AACD,UAAM;AAFW;AAGjB,SAAK,QAAQ,QAAQ;AAAA,MACpB,eAAe;AAAA,IAChB;AAAA,EACD;AAAA,EAfiB;AAAA,EAEA,qBAAqB,KAAK;AAAA,IAC1C,IAAI,cAAmC;AAAA,EACxC;AAAA,EAaA,MAAM,+BACL,IACA,MACA,aACA,aACgB;AAChB,SAAK,mBAAmB;AAAA,MACvB;AAAA,MACA,KAAK,mCAAmC;AAAA,QACvC;AAAA,QACA;AAAA,UACC;AAAA,UACA;AAAA,UACA;AAAA,UACA,aAAa,8BACZA,OACA,SACA,UACI;AACJ,kBAAM,SAAS,MAAM,KAAK,MAAM;AAAA,cAC/B;AAAA,cACAA;AAAA,cACA;AAAA,cACA;AAAA,YACD;AACA,mBAAO,SACJ,OAA2B,MAAM,IACjC;AAAA,UACJ,GAda;AAAA,UAeb,aAAa,8BAAO,KAAU,UAA6B;AAC1D,mBAAO,KAAK,MAAM,aAAa,IAAI,KAAK,KAAK;AAAA,UAC9C,GAFa;AAAA,QAGd;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EAEA,MAAM,iCAAiC,IAA2B;AACjE,SAAK,mBAAmB,iBAAiB,EAAE;AAAA,EAC5C;AACD;AA1DA;AAHa,mCAAN;AAAA,EADN,qBAAqB,YAAY,gCAAgC;AAAA,EAa/D;AAAA,GAZU;",
  "names": ["name"]
}
