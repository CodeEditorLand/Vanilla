{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadNotebookDto.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as notebookCommon from \"../../contrib/notebook/common/notebookCommon.js\";\nimport { CellExecutionUpdateType } from \"../../contrib/notebook/common/notebookExecutionService.js\";\nimport type {\n\tICellExecuteUpdate,\n\tICellExecutionComplete,\n} from \"../../contrib/notebook/common/notebookExecutionStateService.js\";\nimport type * as extHostProtocol from \"../common/extHost.protocol.js\";\n\nexport namespace NotebookDto {\n\texport function toNotebookOutputItemDto(\n\t\titem: notebookCommon.IOutputItemDto,\n\t): extHostProtocol.NotebookOutputItemDto {\n\t\treturn {\n\t\t\tmime: item.mime,\n\t\t\tvalueBytes: item.data,\n\t\t};\n\t}\n\n\texport function toNotebookOutputDto(\n\t\toutput: notebookCommon.IOutputDto,\n\t): extHostProtocol.NotebookOutputDto {\n\t\treturn {\n\t\t\toutputId: output.outputId,\n\t\t\tmetadata: output.metadata,\n\t\t\titems: output.outputs.map(toNotebookOutputItemDto),\n\t\t};\n\t}\n\n\texport function toNotebookCellDataDto(\n\t\tcell: notebookCommon.ICellDto2,\n\t): extHostProtocol.NotebookCellDataDto {\n\t\treturn {\n\t\t\tcellKind: cell.cellKind,\n\t\t\tlanguage: cell.language,\n\t\t\tmime: cell.mime,\n\t\t\tsource: cell.source,\n\t\t\tinternalMetadata: cell.internalMetadata,\n\t\t\tmetadata: cell.metadata,\n\t\t\toutputs: cell.outputs.map(toNotebookOutputDto),\n\t\t};\n\t}\n\n\texport function toNotebookDataDto(\n\t\tdata: notebookCommon.NotebookData,\n\t): extHostProtocol.NotebookDataDto {\n\t\treturn {\n\t\t\tmetadata: data.metadata,\n\t\t\tcells: data.cells.map(toNotebookCellDataDto),\n\t\t};\n\t}\n\n\texport function fromNotebookOutputItemDto(\n\t\titem: extHostProtocol.NotebookOutputItemDto,\n\t): notebookCommon.IOutputItemDto {\n\t\treturn {\n\t\t\tmime: item.mime,\n\t\t\tdata: item.valueBytes,\n\t\t};\n\t}\n\n\texport function fromNotebookOutputDto(\n\t\toutput: extHostProtocol.NotebookOutputDto,\n\t): notebookCommon.IOutputDto {\n\t\treturn {\n\t\t\toutputId: output.outputId,\n\t\t\tmetadata: output.metadata,\n\t\t\toutputs: output.items.map(fromNotebookOutputItemDto),\n\t\t};\n\t}\n\n\texport function fromNotebookCellDataDto(\n\t\tcell: extHostProtocol.NotebookCellDataDto,\n\t): notebookCommon.ICellDto2 {\n\t\treturn {\n\t\t\tcellKind: cell.cellKind,\n\t\t\tlanguage: cell.language,\n\t\t\tmime: cell.mime,\n\t\t\tsource: cell.source,\n\t\t\toutputs: cell.outputs.map(fromNotebookOutputDto),\n\t\t\tmetadata: cell.metadata,\n\t\t\tinternalMetadata: cell.internalMetadata,\n\t\t};\n\t}\n\n\texport function fromNotebookDataDto(\n\t\tdata: extHostProtocol.NotebookDataDto,\n\t): notebookCommon.NotebookData {\n\t\treturn {\n\t\t\tmetadata: data.metadata,\n\t\t\tcells: data.cells.map(fromNotebookCellDataDto),\n\t\t};\n\t}\n\n\texport function toNotebookCellDto(\n\t\tcell: notebookCommon.ICell,\n\t): extHostProtocol.NotebookCellDto {\n\t\treturn {\n\t\t\thandle: cell.handle,\n\t\t\turi: cell.uri,\n\t\t\tsource: cell.textBuffer.getLinesContent(),\n\t\t\teol: cell.textBuffer.getEOL(),\n\t\t\tlanguage: cell.language,\n\t\t\tcellKind: cell.cellKind,\n\t\t\toutputs: cell.outputs.map(toNotebookOutputDto),\n\t\t\tmetadata: cell.metadata,\n\t\t\tinternalMetadata: cell.internalMetadata,\n\t\t};\n\t}\n\n\texport function fromCellExecuteUpdateDto(\n\t\tdata: extHostProtocol.ICellExecuteUpdateDto,\n\t): ICellExecuteUpdate {\n\t\tif (data.editType === CellExecutionUpdateType.Output) {\n\t\t\treturn {\n\t\t\t\teditType: data.editType,\n\t\t\t\tcellHandle: data.cellHandle,\n\t\t\t\tappend: data.append,\n\t\t\t\toutputs: data.outputs.map(fromNotebookOutputDto),\n\t\t\t};\n\t\t} else if (data.editType === CellExecutionUpdateType.OutputItems) {\n\t\t\treturn {\n\t\t\t\teditType: data.editType,\n\t\t\t\tappend: data.append,\n\t\t\t\toutputId: data.outputId,\n\t\t\t\titems: data.items.map(fromNotebookOutputItemDto),\n\t\t\t};\n\t\t} else {\n\t\t\treturn data;\n\t\t}\n\t}\n\n\texport function fromCellExecuteCompleteDto(\n\t\tdata: extHostProtocol.ICellExecutionCompleteDto,\n\t): ICellExecutionComplete {\n\t\treturn data;\n\t}\n\n\texport function fromCellEditOperationDto(\n\t\tedit: extHostProtocol.ICellEditOperationDto,\n\t): notebookCommon.ICellEditOperation {\n\t\tif (edit.editType === notebookCommon.CellEditType.Replace) {\n\t\t\treturn {\n\t\t\t\teditType: edit.editType,\n\t\t\t\tindex: edit.index,\n\t\t\t\tcount: edit.count,\n\t\t\t\tcells: edit.cells.map(fromNotebookCellDataDto),\n\t\t\t};\n\t\t} else {\n\t\t\treturn edit;\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": ["NotebookDto"]
}
