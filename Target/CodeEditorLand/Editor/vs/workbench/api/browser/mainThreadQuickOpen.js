var h=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var k=(u,e,t,o)=>{for(var r=o>1?void 0:o?f(e,t):e,s=u.length-1,i;s>=0;s--)(i=u[s])&&(r=(o?i(e,t,r):i(r))||r);return o&&r&&h(e,t,r),r},l=(u,e)=>(t,o)=>e(t,o,u);import{DisposableStore as v}from"../../../base/common/lifecycle.js";import{URI as I}from"../../../base/common/uri.js";import{IQuickInputService as y}from"../../../platform/quickinput/common/quickInput.js";import{extHostNamedCustomer as P}from"../../services/extensions/common/extHostCustomers.js";import{ExtHostContext as Q,MainContext as S}from"../common/extHost.protocol.js";function m(u){u.dark=I.revive(u.dark),u.light&&(u.light=I.revive(u.light))}let p=class{_proxy;_quickInputService;_items={};constructor(e,t){this._proxy=e.getProxy(Q.ExtHostQuickOpen),this._quickInputService=t}dispose(){for(const[e,t]of this.sessions)t.store.dispose()}$show(e,t,o){const r=new Promise((s,i)=>{this._items[e]={resolve:s,reject:i}});return t={...t,onDidFocus:s=>{s&&this._proxy.$onItemSelected(s.handle)}},t.canPickMany?this._quickInputService.pick(r,t,o).then(s=>{if(s)return s.map(i=>i.handle)}):this._quickInputService.pick(r,t,o).then(s=>{if(s)return s.handle})}$setItems(e,t){return this._items[e]&&(this._items[e].resolve(t),delete this._items[e]),Promise.resolve()}$setError(e,t){return this._items[e]&&(this._items[e].reject(t),delete this._items[e]),Promise.resolve()}$input(e,t,o){const r=Object.create(null);return e&&(r.title=e.title,r.password=e.password,r.placeHolder=e.placeHolder,r.valueSelection=e.valueSelection,r.prompt=e.prompt,r.value=e.value,r.ignoreFocusLost=e.ignoreFocusOut),t&&(r.validateInput=s=>this._proxy.$validateInput(s)),this._quickInputService.input(r,o)}sessions=new Map;$createOrUpdate(e){const t=e.id;let o=this.sessions.get(t);if(!o){const i=new v,n=e.type==="quickPick"?this._quickInputService.createQuickPick():this._quickInputService.createInputBox();if(i.add(n),i.add(n.onDidAccept(()=>{this._proxy.$onDidAccept(t)})),i.add(n.onDidTriggerButton(c=>{this._proxy.$onDidTriggerButton(t,c.handle)})),i.add(n.onDidChangeValue(c=>{this._proxy.$onDidChangeValue(t,c)})),i.add(n.onDidHide(()=>{this._proxy.$onDidHide(t)})),e.type==="quickPick"){const c=n;i.add(c.onDidChangeActive(a=>{this._proxy.$onDidChangeActive(t,a.map(d=>d.handle))})),i.add(c.onDidChangeSelection(a=>{this._proxy.$onDidChangeSelection(t,a.map(d=>d.handle))})),i.add(c.onDidTriggerItemButton(a=>{this._proxy.$onDidTriggerItemButton(t,a.item.handle,a.button.handle)}))}o={input:n,handlesToItems:new Map,store:i},this.sessions.set(t,o)}const{input:r,handlesToItems:s}=o;for(const i in e)i==="id"||i==="type"||(i==="visible"?e.visible?r.show():r.hide():i==="items"?(s.clear(),e[i].forEach(n=>{n.type!=="separator"&&(n.buttons&&(n.buttons=n.buttons.map(c=>(c.iconPath&&m(c.iconPath),c))),s.set(n.handle,n))}),r[i]=e[i]):i==="activeItems"||i==="selectedItems"?r[i]=e[i].filter(n=>s.has(n)).map(n=>s.get(n)):i==="buttons"?r[i]=e.buttons.map(n=>n.handle===-1?this._quickInputService.backButton:(n.iconPath&&m(n.iconPath),n)):r[i]=e[i]);return Promise.resolve(void 0)}$dispose(e){const t=this.sessions.get(e);return t&&(t.store.dispose(),this.sessions.delete(e)),Promise.resolve(void 0)}};p=k([P(S.MainThreadQuickOpen),l(1,y)],p);export{p as MainThreadQuickOpen};
