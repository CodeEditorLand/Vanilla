{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadCLICommands.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Schemas } from '../../../base/common/network.js';\nimport { isWeb } from '../../../base/common/platform.js';\nimport { isString } from '../../../base/common/types.js';\nimport { URI, UriComponents } from '../../../base/common/uri.js';\nimport { localize } from '../../../nls.js';\nimport { CommandsRegistry, ICommandService } from '../../../platform/commands/common/commands.js';\nimport { IExtensionGalleryService, IExtensionManagementService } from '../../../platform/extensionManagement/common/extensionManagement.js';\nimport { ExtensionManagementCLI } from '../../../platform/extensionManagement/common/extensionManagementCLI.js';\nimport { getExtensionId } from '../../../platform/extensionManagement/common/extensionManagementUtil.js';\nimport { IExtensionManifest } from '../../../platform/extensions/common/extensions.js';\nimport { IInstantiationService, ServicesAccessor } from '../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection.js';\nimport { ILabelService } from '../../../platform/label/common/label.js';\nimport { AbstractMessageLogger, ILogger, LogLevel } from '../../../platform/log/common/log.js';\nimport { IOpenerService } from '../../../platform/opener/common/opener.js';\nimport { IOpenWindowOptions, IWindowOpenable } from '../../../platform/window/common/window.js';\nimport { IWorkbenchEnvironmentService } from '../../services/environment/common/environmentService.js';\nimport { IExtensionManagementServerService } from '../../services/extensionManagement/common/extensionManagement.js';\nimport { IExtensionManifestPropertiesService } from '../../services/extensions/common/extensionManifestPropertiesService.js';\n\n\n// this class contains the commands that the CLI server is reying on\n\nCommandsRegistry.registerCommand('_remoteCLI.openExternal', function (accessor: ServicesAccessor, uri: UriComponents | string): Promise<boolean> {\n\tconst openerService = accessor.get(IOpenerService);\n\treturn openerService.open(isString(uri) ? uri : URI.revive(uri), { openExternal: true, allowTunneling: true });\n});\n\nCommandsRegistry.registerCommand('_remoteCLI.windowOpen', function (accessor: ServicesAccessor, toOpen: IWindowOpenable[], options: IOpenWindowOptions) {\n\tconst commandService = accessor.get(ICommandService);\n\tif (!toOpen.length) {\n\t\treturn commandService.executeCommand('_files.newWindow', options);\n\t}\n\treturn commandService.executeCommand('_files.windowOpen', toOpen, options);\n});\n\nCommandsRegistry.registerCommand('_remoteCLI.getSystemStatus', function (accessor: ServicesAccessor): Promise<string | undefined> {\n\tconst commandService = accessor.get(ICommandService);\n\treturn commandService.executeCommand<string>('_issues.getSystemStatus');\n});\n\ninterface ManageExtensionsArgs {\n\tlist?: { showVersions?: boolean; category?: string };\n\tinstall?: (string | URI)[];\n\tuninstall?: string[];\n\tforce?: boolean;\n}\n\nCommandsRegistry.registerCommand('_remoteCLI.manageExtensions', async function (accessor: ServicesAccessor, args: ManageExtensionsArgs): Promise<string | undefined> {\n\tconst instantiationService = accessor.get(IInstantiationService);\n\tconst extensionManagementServerService = accessor.get(IExtensionManagementServerService);\n\tconst remoteExtensionManagementService = extensionManagementServerService.remoteExtensionManagementServer?.extensionManagementService;\n\tif (!remoteExtensionManagementService) {\n\t\treturn;\n\t}\n\n\tconst lines: string[] = [];\n\tconst logger = new class extends AbstractMessageLogger {\n\t\tprotected override log(level: LogLevel, message: string): void {\n\t\t\tlines.push(message);\n\t\t}\n\t}();\n\tconst cliService = instantiationService.createChild(new ServiceCollection([IExtensionManagementService, remoteExtensionManagementService])).createInstance(RemoteExtensionManagementCLI, logger);\n\n\tif (args.list) {\n\t\tawait cliService.listExtensions(!!args.list.showVersions, args.list.category, undefined);\n\t} else {\n\t\tconst revive = (inputs: (string | UriComponents)[]) => inputs.map(input => isString(input) ? input : URI.revive(input));\n\t\tif (Array.isArray(args.install) && args.install.length) {\n\t\t\ttry {\n\t\t\t\tawait cliService.installExtensions(revive(args.install), [], { isMachineScoped: true }, !!args.force);\n\t\t\t} catch (e) {\n\t\t\t\tlines.push(e.message);\n\t\t\t}\n\t\t}\n\t\tif (Array.isArray(args.uninstall) && args.uninstall.length) {\n\t\t\ttry {\n\t\t\t\tawait cliService.uninstallExtensions(revive(args.uninstall), !!args.force, undefined);\n\t\t\t} catch (e) {\n\t\t\t\tlines.push(e.message);\n\t\t\t}\n\t\t}\n\t}\n\treturn lines.join('\\n');\n});\n\nclass RemoteExtensionManagementCLI extends ExtensionManagementCLI {\n\n\tprivate _location: string | undefined;\n\n\tconstructor(\n\t\tlogger: ILogger,\n\t\t@IExtensionManagementService extensionManagementService: IExtensionManagementService,\n\t\t@IExtensionGalleryService extensionGalleryService: IExtensionGalleryService,\n\t\t@ILabelService labelService: ILabelService,\n\t\t@IWorkbenchEnvironmentService envService: IWorkbenchEnvironmentService,\n\t\t@IExtensionManifestPropertiesService private readonly _extensionManifestPropertiesService: IExtensionManifestPropertiesService,\n\t) {\n\t\tsuper(logger, extensionManagementService, extensionGalleryService);\n\n\t\tconst remoteAuthority = envService.remoteAuthority;\n\t\tthis._location = remoteAuthority ? labelService.getHostLabel(Schemas.vscodeRemote, remoteAuthority) : undefined;\n\t}\n\n\tprotected override get location(): string | undefined {\n\t\treturn this._location;\n\t}\n\n\tprotected override validateExtensionKind(manifest: IExtensionManifest): boolean {\n\t\tif (!this._extensionManifestPropertiesService.canExecuteOnWorkspace(manifest)\n\t\t\t// Web extensions installed on remote can be run in web worker extension host\n\t\t\t&& !(isWeb && this._extensionManifestPropertiesService.canExecuteOnWeb(manifest))) {\n\t\t\tthis.logger.info(localize('cannot be installed', \"Cannot install the '{0}' extension because it is declared to not run in this setup.\", getExtensionId(manifest.publisher, manifest.name)));\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
