{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadCLICommands.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Schemas } from \"../../../base/common/network.js\";\nimport { isWeb } from \"../../../base/common/platform.js\";\nimport { isString } from \"../../../base/common/types.js\";\nimport { URI, type UriComponents } from \"../../../base/common/uri.js\";\nimport { localize } from \"../../../nls.js\";\nimport {\n\tCommandsRegistry,\n\tICommandService,\n} from \"../../../platform/commands/common/commands.js\";\nimport {\n\tIExtensionGalleryService,\n\tIExtensionManagementService,\n} from \"../../../platform/extensionManagement/common/extensionManagement.js\";\nimport { ExtensionManagementCLI } from \"../../../platform/extensionManagement/common/extensionManagementCLI.js\";\nimport { getExtensionId } from \"../../../platform/extensionManagement/common/extensionManagementUtil.js\";\nimport type { IExtensionManifest } from \"../../../platform/extensions/common/extensions.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../platform/instantiation/common/instantiation.js\";\nimport { ServiceCollection } from \"../../../platform/instantiation/common/serviceCollection.js\";\nimport { ILabelService } from \"../../../platform/label/common/label.js\";\nimport {\n\tAbstractMessageLogger,\n\ttype ILogger,\n\ttype LogLevel,\n} from \"../../../platform/log/common/log.js\";\nimport { IOpenerService } from \"../../../platform/opener/common/opener.js\";\nimport type {\n\tIOpenWindowOptions,\n\tIWindowOpenable,\n} from \"../../../platform/window/common/window.js\";\nimport { IWorkbenchEnvironmentService } from \"../../services/environment/common/environmentService.js\";\nimport { IExtensionManagementServerService } from \"../../services/extensionManagement/common/extensionManagement.js\";\nimport { IExtensionManifestPropertiesService } from \"../../services/extensions/common/extensionManifestPropertiesService.js\";\n\n// this class contains the commands that the CLI server is reying on\n\nCommandsRegistry.registerCommand(\n\t\"_remoteCLI.openExternal\",\n\t(\n\t\taccessor: ServicesAccessor,\n\t\turi: UriComponents | string,\n\t): Promise<boolean> => {\n\t\tconst openerService = accessor.get(IOpenerService);\n\t\treturn openerService.open(isString(uri) ? uri : URI.revive(uri), {\n\t\t\topenExternal: true,\n\t\t\tallowTunneling: true,\n\t\t});\n\t},\n);\n\nCommandsRegistry.registerCommand(\n\t\"_remoteCLI.windowOpen\",\n\t(\n\t\taccessor: ServicesAccessor,\n\t\ttoOpen: IWindowOpenable[],\n\t\toptions: IOpenWindowOptions,\n\t) => {\n\t\tconst commandService = accessor.get(ICommandService);\n\t\tif (!toOpen.length) {\n\t\t\treturn commandService.executeCommand(\"_files.newWindow\", options);\n\t\t}\n\t\treturn commandService.executeCommand(\n\t\t\t\"_files.windowOpen\",\n\t\t\ttoOpen,\n\t\t\toptions,\n\t\t);\n\t},\n);\n\nCommandsRegistry.registerCommand(\n\t\"_remoteCLI.getSystemStatus\",\n\t(accessor: ServicesAccessor): Promise<string | undefined> => {\n\t\tconst commandService = accessor.get(ICommandService);\n\t\treturn commandService.executeCommand<string>(\"_issues.getSystemStatus\");\n\t},\n);\n\ninterface ManageExtensionsArgs {\n\tlist?: { showVersions?: boolean; category?: string };\n\tinstall?: (string | URI)[];\n\tuninstall?: string[];\n\tforce?: boolean;\n}\n\nCommandsRegistry.registerCommand(\n\t\"_remoteCLI.manageExtensions\",\n\tasync (\n\t\taccessor: ServicesAccessor,\n\t\targs: ManageExtensionsArgs,\n\t): Promise<string | undefined> => {\n\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\tconst extensionManagementServerService = accessor.get(\n\t\t\tIExtensionManagementServerService,\n\t\t);\n\t\tconst remoteExtensionManagementService =\n\t\t\textensionManagementServerService.remoteExtensionManagementServer\n\t\t\t\t?.extensionManagementService;\n\t\tif (!remoteExtensionManagementService) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst lines: string[] = [];\n\t\tconst logger = new (class extends AbstractMessageLogger {\n\t\t\tprotected override log(level: LogLevel, message: string): void {\n\t\t\t\tlines.push(message);\n\t\t\t}\n\t\t})();\n\t\tconst cliService = instantiationService\n\t\t\t.createChild(\n\t\t\t\tnew ServiceCollection([\n\t\t\t\t\tIExtensionManagementService,\n\t\t\t\t\tremoteExtensionManagementService,\n\t\t\t\t]),\n\t\t\t)\n\t\t\t.createInstance(RemoteExtensionManagementCLI, logger);\n\n\t\tif (args.list) {\n\t\t\tawait cliService.listExtensions(\n\t\t\t\t!!args.list.showVersions,\n\t\t\t\targs.list.category,\n\t\t\t\tundefined,\n\t\t\t);\n\t\t} else {\n\t\t\tconst revive = (inputs: (string | UriComponents)[]) =>\n\t\t\t\tinputs.map((input) =>\n\t\t\t\t\tisString(input) ? input : URI.revive(input),\n\t\t\t\t);\n\t\t\tif (Array.isArray(args.install) && args.install.length) {\n\t\t\t\ttry {\n\t\t\t\t\tawait cliService.installExtensions(\n\t\t\t\t\t\trevive(args.install),\n\t\t\t\t\t\t[],\n\t\t\t\t\t\t{ isMachineScoped: true },\n\t\t\t\t\t\t!!args.force,\n\t\t\t\t\t);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tlines.push(e.message);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (Array.isArray(args.uninstall) && args.uninstall.length) {\n\t\t\t\ttry {\n\t\t\t\t\tawait cliService.uninstallExtensions(\n\t\t\t\t\t\trevive(args.uninstall),\n\t\t\t\t\t\t!!args.force,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tlines.push(e.message);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn lines.join(\"\\n\");\n\t},\n);\n\nclass RemoteExtensionManagementCLI extends ExtensionManagementCLI {\n\tprivate _location: string | undefined;\n\n\tconstructor(\n\t\tlogger: ILogger,\n\t\t@IExtensionManagementService\n\t\textensionManagementService: IExtensionManagementService,\n\t\t@IExtensionGalleryService\n\t\textensionGalleryService: IExtensionGalleryService,\n\t\t@ILabelService labelService: ILabelService,\n\t\t@IWorkbenchEnvironmentService envService: IWorkbenchEnvironmentService,\n\t\t@IExtensionManifestPropertiesService\n\t\tprivate readonly _extensionManifestPropertiesService: IExtensionManifestPropertiesService,\n\t) {\n\t\tsuper(logger, extensionManagementService, extensionGalleryService);\n\n\t\tconst remoteAuthority = envService.remoteAuthority;\n\t\tthis._location = remoteAuthority\n\t\t\t? labelService.getHostLabel(Schemas.vscodeRemote, remoteAuthority)\n\t\t\t: undefined;\n\t}\n\n\tprotected override get location(): string | undefined {\n\t\treturn this._location;\n\t}\n\n\tprotected override validateExtensionKind(\n\t\tmanifest: IExtensionManifest,\n\t): boolean {\n\t\tif (\n\t\t\t!this._extensionManifestPropertiesService.canExecuteOnWorkspace(\n\t\t\t\tmanifest,\n\t\t\t) &&\n\t\t\t// Web extensions installed on remote can be run in web worker extension host\n\t\t\t!(\n\t\t\t\tisWeb &&\n\t\t\t\tthis._extensionManifestPropertiesService.canExecuteOnWeb(\n\t\t\t\t\tmanifest,\n\t\t\t\t)\n\t\t\t)\n\t\t) {\n\t\t\tthis.logger.info(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"cannot be installed\",\n\t\t\t\t\t\"Cannot install the '{0}' extension because it is declared to not run in this setup.\",\n\t\t\t\t\tgetExtensionId(manifest.publisher, manifest.name),\n\t\t\t\t),\n\t\t\t);\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
