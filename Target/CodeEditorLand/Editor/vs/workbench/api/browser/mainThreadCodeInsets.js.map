{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadCodeInsets.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getWindow } from \"../../../base/browser/dom.js\";\nimport { DisposableStore } from \"../../../base/common/lifecycle.js\";\nimport { isEqual } from \"../../../base/common/resources.js\";\nimport { URI, type UriComponents } from \"../../../base/common/uri.js\";\nimport type {\n\tIActiveCodeEditor,\n\tIViewZone,\n} from \"../../../editor/browser/editorBrowser.js\";\nimport { ICodeEditorService } from \"../../../editor/browser/services/codeEditorService.js\";\nimport type { ExtensionIdentifier } from \"../../../platform/extensions/common/extensions.js\";\nimport {\n\ttype IWebviewElement,\n\tIWebviewService,\n} from \"../../contrib/webview/browser/webview.js\";\nimport {\n\ttype IExtHostContext,\n\textHostNamedCustomer,\n} from \"../../services/extensions/common/extHostCustomers.js\";\nimport {\n\tExtHostContext,\n\ttype ExtHostEditorInsetsShape,\n\ttype IWebviewContentOptions,\n\tMainContext,\n\ttype MainThreadEditorInsetsShape,\n} from \"../common/extHost.protocol.js\";\nimport { reviveWebviewContentOptions } from \"./mainThreadWebviews.js\";\n\n// todo@jrieken move these things back into something like contrib/insets\nclass EditorWebviewZone implements IViewZone {\n\treadonly domNode: HTMLElement;\n\treadonly afterLineNumber: number;\n\treadonly afterColumn: number;\n\treadonly heightInLines: number;\n\n\tprivate _id?: string;\n\t// suppressMouseDown?: boolean | undefined;\n\t// heightInPx?: number | undefined;\n\t// minWidthInPx?: number | undefined;\n\t// marginDomNode?: HTMLElement | null | undefined;\n\t// onDomNodeTop?: ((top: number) => void) | undefined;\n\t// onComputedHeight?: ((height: number) => void) | undefined;\n\n\tconstructor(\n\t\treadonly editor: IActiveCodeEditor,\n\t\treadonly line: number,\n\t\treadonly height: number,\n\t\treadonly webview: IWebviewElement,\n\t) {\n\t\tthis.domNode = document.createElement(\"div\");\n\t\tthis.domNode.style.zIndex = \"10\"; // without this, the webview is not interactive\n\t\tthis.afterLineNumber = line;\n\t\tthis.afterColumn = 1;\n\t\tthis.heightInLines = height;\n\n\t\teditor.changeViewZones(\n\t\t\t(accessor) => (this._id = accessor.addZone(this)),\n\t\t);\n\t\twebview.mountTo(this.domNode, getWindow(editor.getDomNode()));\n\t}\n\n\tdispose(): void {\n\t\tthis.editor.changeViewZones(\n\t\t\t(accessor) => this._id && accessor.removeZone(this._id),\n\t\t);\n\t}\n}\n\n@extHostNamedCustomer(MainContext.MainThreadEditorInsets)\nexport class MainThreadEditorInsets implements MainThreadEditorInsetsShape {\n\tprivate readonly _proxy: ExtHostEditorInsetsShape;\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate readonly _insets = new Map<number, EditorWebviewZone>();\n\n\tconstructor(\n\t\tcontext: IExtHostContext,\n\t\t@ICodeEditorService private readonly _editorService: ICodeEditorService,\n\t\t@IWebviewService private readonly _webviewService: IWebviewService,\n\t) {\n\t\tthis._proxy = context.getProxy(ExtHostContext.ExtHostEditorInsets);\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t}\n\n\tasync $createEditorInset(\n\t\thandle: number,\n\t\tid: string,\n\t\turi: UriComponents,\n\t\tline: number,\n\t\theight: number,\n\t\toptions: IWebviewContentOptions,\n\t\textensionId: ExtensionIdentifier,\n\t\textensionLocation: UriComponents,\n\t): Promise<void> {\n\t\tlet editor: IActiveCodeEditor | undefined;\n\t\tid = id.substr(0, id.indexOf(\",\")); //todo@jrieken HACK\n\n\t\tfor (const candidate of this._editorService.listCodeEditors()) {\n\t\t\tif (\n\t\t\t\tcandidate.getId() === id &&\n\t\t\t\tcandidate.hasModel() &&\n\t\t\t\tisEqual(candidate.getModel().uri, URI.revive(uri))\n\t\t\t) {\n\t\t\t\teditor = candidate;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!editor) {\n\t\t\tsetTimeout(() => this._proxy.$onDidDispose(handle));\n\t\t\treturn;\n\t\t}\n\n\t\tconst disposables = new DisposableStore();\n\n\t\tconst webview = this._webviewService.createWebviewElement({\n\t\t\ttitle: undefined,\n\t\t\toptions: {\n\t\t\t\tenableFindWidget: false,\n\t\t\t},\n\t\t\tcontentOptions: reviveWebviewContentOptions(options),\n\t\t\textension: {\n\t\t\t\tid: extensionId,\n\t\t\t\tlocation: URI.revive(extensionLocation),\n\t\t\t},\n\t\t});\n\n\t\tconst webviewZone = new EditorWebviewZone(\n\t\t\teditor,\n\t\t\tline,\n\t\t\theight,\n\t\t\twebview,\n\t\t);\n\n\t\tconst remove = () => {\n\t\t\tdisposables.dispose();\n\t\t\tthis._proxy.$onDidDispose(handle);\n\t\t\tthis._insets.delete(handle);\n\t\t};\n\n\t\tdisposables.add(editor.onDidChangeModel(remove));\n\t\tdisposables.add(editor.onDidDispose(remove));\n\t\tdisposables.add(webviewZone);\n\t\tdisposables.add(webview);\n\t\tdisposables.add(\n\t\t\twebview.onMessage((msg) =>\n\t\t\t\tthis._proxy.$onDidReceiveMessage(handle, msg.message),\n\t\t\t),\n\t\t);\n\n\t\tthis._insets.set(handle, webviewZone);\n\t}\n\n\t$disposeEditorInset(handle: number): void {\n\t\tconst inset = this.getInset(handle);\n\t\tthis._insets.delete(handle);\n\t\tinset.dispose();\n\t}\n\n\t$setHtml(handle: number, value: string): void {\n\t\tconst inset = this.getInset(handle);\n\t\tinset.webview.setHtml(value);\n\t}\n\n\t$setOptions(handle: number, options: IWebviewContentOptions): void {\n\t\tconst inset = this.getInset(handle);\n\t\tinset.webview.contentOptions = reviveWebviewContentOptions(options);\n\t}\n\n\tasync $postMessage(handle: number, value: any): Promise<boolean> {\n\t\tconst inset = this.getInset(handle);\n\t\tinset.webview.postMessage(value);\n\t\treturn true;\n\t}\n\n\tprivate getInset(handle: number): EditorWebviewZone {\n\t\tconst inset = this._insets.get(handle);\n\t\tif (!inset) {\n\t\t\tthrow new Error(\"Unknown inset\");\n\t\t}\n\t\treturn inset;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
