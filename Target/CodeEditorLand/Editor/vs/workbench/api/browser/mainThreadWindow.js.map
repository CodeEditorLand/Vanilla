{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadWindow.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from \"../../../base/common/event.js\";\nimport { DisposableStore } from \"../../../base/common/lifecycle.js\";\nimport { URI, type UriComponents } from \"../../../base/common/uri.js\";\nimport { IOpenerService } from \"../../../platform/opener/common/opener.js\";\nimport {\n\ttype IExtHostContext,\n\textHostNamedCustomer,\n} from \"../../services/extensions/common/extHostCustomers.js\";\nimport { IHostService } from \"../../services/host/browser/host.js\";\nimport { IUserActivityService } from \"../../services/userActivity/common/userActivityService.js\";\nimport {\n\tExtHostContext,\n\ttype ExtHostWindowShape,\n\ttype IOpenUriOptions,\n\tMainContext,\n\ttype MainThreadWindowShape,\n} from \"../common/extHost.protocol.js\";\n\n@extHostNamedCustomer(MainContext.MainThreadWindow)\nexport class MainThreadWindow implements MainThreadWindowShape {\n\tprivate readonly proxy: ExtHostWindowShape;\n\tprivate readonly disposables = new DisposableStore();\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@IHostService private readonly hostService: IHostService,\n\t\t@IOpenerService private readonly openerService: IOpenerService,\n\t\t@IUserActivityService\n\t\tprivate readonly userActivityService: IUserActivityService,\n\t) {\n\t\tthis.proxy = extHostContext.getProxy(ExtHostContext.ExtHostWindow);\n\n\t\tEvent.latch(hostService.onDidChangeFocus)(\n\t\t\tthis.proxy.$onDidChangeWindowFocus,\n\t\t\tthis.proxy,\n\t\t\tthis.disposables,\n\t\t);\n\t\tuserActivityService.onDidChangeIsActive(\n\t\t\tthis.proxy.$onDidChangeWindowActive,\n\t\t\tthis.proxy,\n\t\t\tthis.disposables,\n\t\t);\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables.dispose();\n\t}\n\n\t$getInitialState() {\n\t\treturn Promise.resolve({\n\t\t\tisFocused: this.hostService.hasFocus,\n\t\t\tisActive: this.userActivityService.isActive,\n\t\t});\n\t}\n\n\tasync $openUri(\n\t\turiComponents: UriComponents,\n\t\turiString: string | undefined,\n\t\toptions: IOpenUriOptions,\n\t): Promise<boolean> {\n\t\tconst uri = URI.from(uriComponents);\n\t\tlet target: URI | string;\n\t\tif (uriString && URI.parse(uriString).toString() === uri.toString()) {\n\t\t\t// called with string and no transformation happened -> keep string\n\t\t\ttarget = uriString;\n\t\t} else {\n\t\t\t// called with URI or transformed -> use uri\n\t\t\ttarget = uri;\n\t\t}\n\t\treturn this.openerService.open(target, {\n\t\t\topenExternal: true,\n\t\t\tallowTunneling: options.allowTunneling,\n\t\t\tallowContributedOpeners: options.allowContributedOpeners,\n\t\t});\n\t}\n\n\tasync $asExternalUri(\n\t\turiComponents: UriComponents,\n\t\toptions: IOpenUriOptions,\n\t): Promise<UriComponents> {\n\t\tconst result = await this.openerService.resolveExternalUri(\n\t\t\tURI.revive(uriComponents),\n\t\t\toptions,\n\t\t);\n\t\treturn result.resolved;\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,aAAa;AACtB,SAAS,uBAAuB;AAChC,SAAS,WAA+B;AACxC,SAAS,sBAAsB;AAC/B;AAAA,EAEC;AAAA,OACM;AACP,SAAS,oBAAoB;AAC7B,SAAS,4BAA4B;AACrC;AAAA,EACC;AAAA,EAGA;AAAA,OAEM;AAGA,IAAM,mBAAN,MAAwD;AAAA,EAI9D,YACC,gBAC+B,aACE,eAEhB,qBAChB;AAJ8B;AACE;AAEhB;AAEjB,SAAK,QAAQ,eAAe,SAAS,eAAe,aAAa;AAEjE,UAAM,MAAM,YAAY,gBAAgB;AAAA,MACvC,KAAK,MAAM;AAAA,MACX,KAAK;AAAA,MACL,KAAK;AAAA,IACN;AACA,wBAAoB;AAAA,MACnB,KAAK,MAAM;AAAA,MACX,KAAK;AAAA,MACL,KAAK;AAAA,IACN;AAAA,EACD;AAAA,EAtBiB;AAAA,EACA,cAAc,IAAI,gBAAgB;AAAA,EAuBnD,UAAgB;AACf,SAAK,YAAY,QAAQ;AAAA,EAC1B;AAAA,EAEA,mBAAmB;AAClB,WAAO,QAAQ,QAAQ;AAAA,MACtB,WAAW,KAAK,YAAY;AAAA,MAC5B,UAAU,KAAK,oBAAoB;AAAA,IACpC,CAAC;AAAA,EACF;AAAA,EAEA,MAAM,SACL,eACA,WACA,SACmB;AACnB,UAAM,MAAM,IAAI,KAAK,aAAa;AAClC,QAAI;AACJ,QAAI,aAAa,IAAI,MAAM,SAAS,EAAE,SAAS,MAAM,IAAI,SAAS,GAAG;AAEpE,eAAS;AAAA,IACV,OAAO;AAEN,eAAS;AAAA,IACV;AACA,WAAO,KAAK,cAAc,KAAK,QAAQ;AAAA,MACtC,cAAc;AAAA,MACd,gBAAgB,QAAQ;AAAA,MACxB,yBAAyB,QAAQ;AAAA,IAClC,CAAC;AAAA,EACF;AAAA,EAEA,MAAM,eACL,eACA,SACyB;AACzB,UAAM,SAAS,MAAM,KAAK,cAAc;AAAA,MACvC,IAAI,OAAO,aAAa;AAAA,MACxB;AAAA,IACD;AACA,WAAO,OAAO;AAAA,EACf;AACD;AAnE+D;AAAlD,mBAAN;AAAA,EADN,qBAAqB,YAAY,gBAAgB;AAAA,EAO/C;AAAA,EACA;AAAA,EACA;AAAA,GARU;",
  "names": []
}
