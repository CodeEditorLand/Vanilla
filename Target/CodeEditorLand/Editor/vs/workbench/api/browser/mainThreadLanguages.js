var p=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var d=(i,t,e,r)=>{for(var o=r>1?void 0:r?m(t,e):t,s=i.length-1,a;s>=0;s--)(a=i[s])&&(o=(r?a(t,e,o):a(o))||o);return r&&o&&p(t,e,o),o},n=(i,t)=>(e,r)=>t(e,r,i);import{URI as u}from"../../../base/common/uri.js";import{ILanguageService as c}from"../../../editor/common/languages/language.js";import{IModelService as l}from"../../../editor/common/services/model.js";import{MainContext as v,ExtHostContext as S}from"../common/extHost.protocol.js";import{extHostNamedCustomer as f}from"../../services/extensions/common/extHostCustomers.js";import{Range as I}from"../../../editor/common/core/range.js";import{ITextModelService as x}from"../../../editor/common/services/resolverService.js";import{ILanguageStatusService as y}from"../../services/languageStatus/common/languageStatusService.js";import{DisposableMap as h,DisposableStore as L}from"../../../base/common/lifecycle.js";let g=class{constructor(t,e,r,o,s){this._languageService=e;this._modelService=r;this._resolverService=o;this._languageStatusService=s;this._proxy=t.getProxy(S.ExtHostLanguages),this._proxy.$acceptLanguageIds(e.getRegisteredLanguageIds()),this._disposables.add(e.onDidChange(a=>{this._proxy.$acceptLanguageIds(e.getRegisteredLanguageIds())}))}_disposables=new L;_proxy;_status=new h;dispose(){this._disposables.dispose(),this._status.dispose()}async $changeLanguage(t,e){if(!this._languageService.isRegisteredLanguageId(e))return Promise.reject(new Error(`Unknown language id: ${e}`));const r=u.revive(t),o=await this._resolverService.createModelReference(r);try{o.object.textEditorModel.setLanguage(this._languageService.createById(e))}finally{o.dispose()}}async $tokensAtPosition(t,e){const r=u.revive(t),o=this._modelService.getModel(r);if(!o)return;o.tokenization.tokenizeIfCheap(e.lineNumber);const s=o.tokenization.getLineTokens(e.lineNumber),a=s.findTokenIndexAtOffset(e.column-1);return{type:s.getStandardTokenType(a),range:new I(e.lineNumber,1+s.getStartOffset(a),e.lineNumber,1+s.getEndOffset(a))}}$setLanguageStatus(t,e){this._status.get(t)?.dispose(),this._status.set(t,this._languageStatusService.addStatus(e))}$removeLanguageStatus(t){this._status.get(t)?.dispose()}};g=d([f(v.MainThreadLanguages),n(1,c),n(2,l),n(3,x),n(4,y)],g);export{g as MainThreadLanguages};
