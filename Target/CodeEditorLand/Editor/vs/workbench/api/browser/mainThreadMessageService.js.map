{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadMessageService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { type IAction, toAction } from \"../../../base/common/actions.js\";\nimport { Event } from \"../../../base/common/event.js\";\nimport type { IDisposable } from \"../../../base/common/lifecycle.js\";\nimport type Severity from \"../../../base/common/severity.js\";\nimport * as nls from \"../../../nls.js\";\nimport { ICommandService } from \"../../../platform/commands/common/commands.js\";\nimport {\n\tIDialogService,\n\ttype IPromptButton,\n} from \"../../../platform/dialogs/common/dialogs.js\";\nimport {\n\tINotificationService,\n\ttype INotificationSource,\n} from \"../../../platform/notification/common/notification.js\";\nimport {\n\ttype IExtHostContext,\n\textHostNamedCustomer,\n} from \"../../services/extensions/common/extHostCustomers.js\";\nimport { IExtensionService } from \"../../services/extensions/common/extensions.js\";\nimport {\n\tMainContext,\n\ttype MainThreadMessageOptions,\n\ttype MainThreadMessageServiceShape,\n} from \"../common/extHost.protocol.js\";\n\n@extHostNamedCustomer(MainContext.MainThreadMessageService)\nexport class MainThreadMessageService implements MainThreadMessageServiceShape {\n\tprivate extensionsListener: IDisposable;\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@INotificationService private readonly _notificationService: INotificationService,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@IDialogService private readonly _dialogService: IDialogService,\n\t\t@IExtensionService extensionService: IExtensionService\n\t) {\n\t\tthis.extensionsListener = extensionService.onDidChangeExtensions(e => {\n\t\t\tfor (const extension of e.removed) {\n\t\t\t\tthis._notificationService.removeFilter(extension.identifier.value);\n\t\t\t}\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis.extensionsListener.dispose();\n\t}\n\n\t$showMessage(\n\t\tseverity: Severity,\n\t\tmessage: string,\n\t\toptions: MainThreadMessageOptions,\n\t\tcommands: {\n\t\t\ttitle: string;\n\t\t\tisCloseAffordance: boolean;\n\t\t\thandle: number;\n\t\t}[],\n\t): Promise<number | undefined> {\n\t\tif (options.modal) {\n\t\t\treturn this._showModalMessage(\n\t\t\t\tseverity,\n\t\t\t\tmessage,\n\t\t\t\toptions.detail,\n\t\t\t\tcommands,\n\t\t\t\toptions.useCustom,\n\t\t\t);\n\t\t} else {\n\t\t\treturn this._showMessage(severity, message, commands, options);\n\t\t}\n\t}\n\n\tprivate _showMessage(\n\t\tseverity: Severity,\n\t\tmessage: string,\n\t\tcommands: {\n\t\t\ttitle: string;\n\t\t\tisCloseAffordance: boolean;\n\t\t\thandle: number;\n\t\t}[],\n\t\toptions: MainThreadMessageOptions,\n\t): Promise<number | undefined> {\n\t\treturn new Promise<number | undefined>((resolve) => {\n\t\t\tconst primaryActions: IAction[] = commands.map((command) =>\n\t\t\t\ttoAction({\n\t\t\t\t\tid: `_extension_message_handle_${command.handle}`,\n\t\t\t\t\tlabel: command.title,\n\t\t\t\t\tenabled: true,\n\t\t\t\t\trun: () => {\n\t\t\t\t\t\tresolve(command.handle);\n\t\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tlet source: string | INotificationSource | undefined;\n\t\t\tif (options.source) {\n\t\t\t\tsource = {\n\t\t\t\t\tlabel: options.source.label,\n\t\t\t\t\tid: options.source.identifier.value,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (!source) {\n\t\t\t\tsource = nls.localize(\"defaultSource\", \"Extension\");\n\t\t\t}\n\n\t\t\tconst secondaryActions: IAction[] = [];\n\t\t\tif (options.source) {\n\t\t\t\tsecondaryActions.push(\n\t\t\t\t\ttoAction({\n\t\t\t\t\t\tid: options.source.identifier.value,\n\t\t\t\t\t\tlabel: nls.localize(\n\t\t\t\t\t\t\t\"manageExtension\",\n\t\t\t\t\t\t\t\"Manage Extension\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\trun: () => {\n\t\t\t\t\t\t\treturn this._commandService.executeCommand(\n\t\t\t\t\t\t\t\t\"_extensions.manage\",\n\t\t\t\t\t\t\t\toptions.source!.identifier.value,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst messageHandle = this._notificationService.notify({\n\t\t\t\tseverity,\n\t\t\t\tmessage,\n\t\t\t\tactions: {\n\t\t\t\t\tprimary: primaryActions,\n\t\t\t\t\tsecondary: secondaryActions,\n\t\t\t\t},\n\t\t\t\tsource,\n\t\t\t});\n\n\t\t\t// if promise has not been resolved yet, now is the time to ensure a return value\n\t\t\t// otherwise if already resolved it means the user clicked one of the buttons\n\t\t\tEvent.once(messageHandle.onDidClose)(() => {\n\t\t\t\tresolve(undefined);\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate async _showModalMessage(\n\t\tseverity: Severity,\n\t\tmessage: string,\n\t\tdetail: string | undefined,\n\t\tcommands: {\n\t\t\ttitle: string;\n\t\t\tisCloseAffordance: boolean;\n\t\t\thandle: number;\n\t\t}[],\n\t\tuseCustom?: boolean,\n\t): Promise<number | undefined> {\n\t\tconst buttons: IPromptButton<number>[] = [];\n\t\tlet cancelButton: IPromptButton<number | undefined> | undefined;\n\n\t\tfor (const command of commands) {\n\t\t\tconst button: IPromptButton<number> = {\n\t\t\t\tlabel: command.title,\n\t\t\t\trun: () => command.handle,\n\t\t\t};\n\n\t\t\tif (command.isCloseAffordance) {\n\t\t\t\tcancelButton = button;\n\t\t\t} else {\n\t\t\t\tbuttons.push(button);\n\t\t\t}\n\t\t}\n\n\t\tif (!cancelButton) {\n\t\t\tif (buttons.length > 0) {\n\t\t\t\tcancelButton = {\n\t\t\t\t\tlabel: nls.localize(\"cancel\", \"Cancel\"),\n\t\t\t\t\trun: () => undefined,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcancelButton = {\n\t\t\t\t\tlabel: nls.localize(\n\t\t\t\t\t\t{ key: \"ok\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\t\t\"&&OK\",\n\t\t\t\t\t),\n\t\t\t\t\trun: () => undefined,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tconst { result } = await this._dialogService.prompt({\n\t\t\ttype: severity,\n\t\t\tmessage,\n\t\t\tdetail,\n\t\t\tbuttons,\n\t\t\tcancelButton,\n\t\t\tcustom: useCustom,\n\t\t});\n\n\t\treturn result;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
