{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadNotebook.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { coalesce } from \"../../../base/common/arrays.js\";\nimport { VSBuffer } from \"../../../base/common/buffer.js\";\nimport { CancellationToken } from \"../../../base/common/cancellation.js\";\nimport { Emitter } from \"../../../base/common/event.js\";\nimport type { IRelativePattern } from \"../../../base/common/glob.js\";\nimport {\n\tDisposableStore,\n\ttype IDisposable,\n\tdispose,\n} from \"../../../base/common/lifecycle.js\";\nimport { revive } from \"../../../base/common/marshalling.js\";\nimport { StopWatch } from \"../../../base/common/stopwatch.js\";\nimport { assertType } from \"../../../base/common/types.js\";\nimport { URI } from \"../../../base/common/uri.js\";\nimport { CommandsRegistry } from \"../../../platform/commands/common/commands.js\";\nimport { ILogService } from \"../../../platform/log/common/log.js\";\nimport { INotebookCellStatusBarService } from \"../../contrib/notebook/common/notebookCellStatusBarService.js\";\nimport type {\n\tINotebookCellStatusBarItemProvider,\n\tINotebookContributionData,\n\tINotebookExclusiveDocumentFilter,\n\tNotebookData,\n\tNotebookExtensionDescription,\n\tTransientOptions,\n} from \"../../contrib/notebook/common/notebookCommon.js\";\nimport {\n\tINotebookService,\n\tSimpleNotebookProviderInfo,\n} from \"../../contrib/notebook/common/notebookService.js\";\nimport type { NotebookPriorityInfo } from \"../../contrib/search/common/search.js\";\nimport type { INotebookFileMatchNoModel } from \"../../contrib/search/common/searchNotebookHelpers.js\";\nimport {\n\ttype IExtHostContext,\n\textHostNamedCustomer,\n} from \"../../services/extensions/common/extHostCustomers.js\";\nimport { SerializableObjectWithBuffers } from \"../../services/extensions/common/proxyIdentifier.js\";\nimport {\n\tExtHostContext,\n\ttype ExtHostNotebookShape,\n\tMainContext,\n\ttype MainThreadNotebookShape,\n} from \"../common/extHost.protocol.js\";\nimport { NotebookDto } from \"./mainThreadNotebookDto.js\";\n\n@extHostNamedCustomer(MainContext.MainThreadNotebook)\nexport class MainThreadNotebooks implements MainThreadNotebookShape {\n\tprivate readonly _disposables = new DisposableStore();\n\n\tprivate readonly _proxy: ExtHostNotebookShape;\n\tprivate readonly _notebookSerializer = new Map<number, IDisposable>();\n\tprivate readonly _notebookCellStatusBarRegistrations = new Map<\n\t\tnumber,\n\t\tIDisposable\n\t>();\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@INotebookService private readonly _notebookService: INotebookService,\n\t\t@INotebookCellStatusBarService\n\t\tprivate readonly _cellStatusBarService: INotebookCellStatusBarService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t) {\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostNotebook);\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t\tdispose(this._notebookSerializer.values());\n\t}\n\n\t$registerNotebookSerializer(\n\t\thandle: number,\n\t\textension: NotebookExtensionDescription,\n\t\tviewType: string,\n\t\toptions: TransientOptions,\n\t\tdata: INotebookContributionData | undefined,\n\t): void {\n\t\tconst disposables = new DisposableStore();\n\n\t\tdisposables.add(\n\t\t\tthis._notebookService.registerNotebookSerializer(\n\t\t\t\tviewType,\n\t\t\t\textension,\n\t\t\t\t{\n\t\t\t\t\toptions,\n\t\t\t\t\tdataToNotebook: async (\n\t\t\t\t\t\tdata: VSBuffer,\n\t\t\t\t\t): Promise<NotebookData> => {\n\t\t\t\t\t\tconst sw = new StopWatch();\n\t\t\t\t\t\tlet result: NotebookData;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tdata.byteLength === 0 &&\n\t\t\t\t\t\t\tviewType === \"interactive\"\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// we don't want any starting cells for an empty interactive window.\n\t\t\t\t\t\t\tresult = NotebookDto.fromNotebookDataDto({\n\t\t\t\t\t\t\t\tcells: [],\n\t\t\t\t\t\t\t\tmetadata: {},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst dto = await this._proxy.$dataToNotebook(\n\t\t\t\t\t\t\t\thandle,\n\t\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\t\tCancellationToken.None,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tresult = NotebookDto.fromNotebookDataDto(dto.value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._logService.trace(\n\t\t\t\t\t\t\t`[NotebookSerializer] dataToNotebook DONE after ${sw.elapsed()}ms`,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tviewType,\n\t\t\t\t\t\t\t\textensionId: extension.id.value,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t},\n\t\t\t\t\tnotebookToData: (data: NotebookData): Promise<VSBuffer> => {\n\t\t\t\t\t\tconst sw = new StopWatch();\n\t\t\t\t\t\tconst result = this._proxy.$notebookToData(\n\t\t\t\t\t\t\thandle,\n\t\t\t\t\t\t\tnew SerializableObjectWithBuffers(\n\t\t\t\t\t\t\t\tNotebookDto.toNotebookDataDto(data),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tCancellationToken.None,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis._logService.trace(\n\t\t\t\t\t\t\t`[NotebookSerializer] notebookToData DONE after ${sw.elapsed()}`,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tviewType,\n\t\t\t\t\t\t\t\textensionId: extension.id.value,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t},\n\t\t\t\t\tsave: async (uri, versionId, options, token) => {\n\t\t\t\t\t\tconst stat = await this._proxy.$saveNotebook(\n\t\t\t\t\t\t\thandle,\n\t\t\t\t\t\t\turi,\n\t\t\t\t\t\t\tversionId,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\ttoken,\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...stat,\n\t\t\t\t\t\t\tchildren: undefined,\n\t\t\t\t\t\t\tresource: uri,\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t\tsearchInNotebooks: async (\n\t\t\t\t\t\ttextQuery,\n\t\t\t\t\t\ttoken,\n\t\t\t\t\t\tallPriorityInfo,\n\t\t\t\t\t): Promise<{\n\t\t\t\t\t\tresults: INotebookFileMatchNoModel<URI>[];\n\t\t\t\t\t\tlimitHit: boolean;\n\t\t\t\t\t}> => {\n\t\t\t\t\t\tconst contributedType =\n\t\t\t\t\t\t\tthis._notebookService.getContributedNotebookType(\n\t\t\t\t\t\t\t\tviewType,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tif (!contributedType) {\n\t\t\t\t\t\t\treturn { results: [], limitHit: false };\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst fileNames = contributedType.selectors;\n\n\t\t\t\t\t\tconst includes = fileNames.map((selector) => {\n\t\t\t\t\t\t\tconst globPattern =\n\t\t\t\t\t\t\t\t(selector as INotebookExclusiveDocumentFilter)\n\t\t\t\t\t\t\t\t\t.include ||\n\t\t\t\t\t\t\t\t(selector as IRelativePattern | string);\n\t\t\t\t\t\t\treturn globPattern.toString();\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (!includes.length) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tresults: [],\n\t\t\t\t\t\t\t\tlimitHit: false,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst thisPriorityInfo = coalesce<NotebookPriorityInfo>(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tisFromSettings: false,\n\t\t\t\t\t\t\t\t\tfilenamePatterns: includes,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t...(allPriorityInfo.get(viewType) ?? []),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst otherEditorsPriorityInfo = Array.from(\n\t\t\t\t\t\t\tallPriorityInfo.keys(),\n\t\t\t\t\t\t).flatMap((key) => {\n\t\t\t\t\t\t\tif (key !== viewType) {\n\t\t\t\t\t\t\t\treturn allPriorityInfo.get(key) ?? [];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn [];\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tconst searchComplete =\n\t\t\t\t\t\t\tawait this._proxy.$searchInNotebooks(\n\t\t\t\t\t\t\t\thandle,\n\t\t\t\t\t\t\t\ttextQuery,\n\t\t\t\t\t\t\t\tthisPriorityInfo,\n\t\t\t\t\t\t\t\totherEditorsPriorityInfo,\n\t\t\t\t\t\t\t\ttoken,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tconst revivedResults: INotebookFileMatchNoModel<URI>[] =\n\t\t\t\t\t\t\tsearchComplete.results.map((result) => {\n\t\t\t\t\t\t\t\tconst resource = URI.revive(result.resource);\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\t\t\tcellResults: result.cellResults.map((e) =>\n\t\t\t\t\t\t\t\t\t\trevive(e),\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tresults: revivedResults,\n\t\t\t\t\t\t\tlimitHit: searchComplete.limitHit,\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tif (data) {\n\t\t\tdisposables.add(\n\t\t\t\tthis._notebookService.registerContributedNotebookType(\n\t\t\t\t\tviewType,\n\t\t\t\t\tdata,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t\tthis._notebookSerializer.set(handle, disposables);\n\n\t\tthis._logService.trace(\n\t\t\t\"[NotebookSerializer] registered notebook serializer\",\n\t\t\t{\n\t\t\t\tviewType,\n\t\t\t\textensionId: extension.id.value,\n\t\t\t},\n\t\t);\n\t}\n\n\t$unregisterNotebookSerializer(handle: number): void {\n\t\tthis._notebookSerializer.get(handle)?.dispose();\n\t\tthis._notebookSerializer.delete(handle);\n\t}\n\n\t$emitCellStatusBarEvent(eventHandle: number): void {\n\t\tconst emitter =\n\t\t\tthis._notebookCellStatusBarRegistrations.get(eventHandle);\n\t\tif (emitter instanceof Emitter) {\n\t\t\temitter.fire(undefined);\n\t\t}\n\t}\n\n\tasync $registerNotebookCellStatusBarItemProvider(\n\t\thandle: number,\n\t\teventHandle: number | undefined,\n\t\tviewType: string,\n\t): Promise<void> {\n\t\tconst that = this;\n\t\tconst provider: INotebookCellStatusBarItemProvider = {\n\t\t\tasync provideCellStatusBarItems(\n\t\t\t\turi: URI,\n\t\t\t\tindex: number,\n\t\t\t\ttoken: CancellationToken,\n\t\t\t) {\n\t\t\t\tconst result =\n\t\t\t\t\tawait that._proxy.$provideNotebookCellStatusBarItems(\n\t\t\t\t\t\thandle,\n\t\t\t\t\t\turi,\n\t\t\t\t\t\tindex,\n\t\t\t\t\t\ttoken,\n\t\t\t\t\t);\n\t\t\t\treturn {\n\t\t\t\t\titems: result?.items ?? [],\n\t\t\t\t\tdispose() {\n\t\t\t\t\t\tif (result) {\n\t\t\t\t\t\t\tthat._proxy.$releaseNotebookCellStatusBarItems(\n\t\t\t\t\t\t\t\tresult.cacheId,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t},\n\t\t\tviewType,\n\t\t};\n\n\t\tif (typeof eventHandle === \"number\") {\n\t\t\tconst emitter = new Emitter<void>();\n\t\t\tthis._notebookCellStatusBarRegistrations.set(eventHandle, emitter);\n\t\t\tprovider.onDidChangeStatusBarItems = emitter.event;\n\t\t}\n\n\t\tconst disposable =\n\t\t\tthis._cellStatusBarService.registerCellStatusBarItemProvider(\n\t\t\t\tprovider,\n\t\t\t);\n\t\tthis._notebookCellStatusBarRegistrations.set(handle, disposable);\n\t}\n\n\tasync $unregisterNotebookCellStatusBarItemProvider(\n\t\thandle: number,\n\t\teventHandle: number | undefined,\n\t): Promise<void> {\n\t\tconst unregisterThing = (handle: number) => {\n\t\t\tconst entry = this._notebookCellStatusBarRegistrations.get(handle);\n\t\t\tif (entry) {\n\t\t\t\tthis._notebookCellStatusBarRegistrations.get(handle)?.dispose();\n\t\t\t\tthis._notebookCellStatusBarRegistrations.delete(handle);\n\t\t\t}\n\t\t};\n\t\tunregisterThing(handle);\n\t\tif (typeof eventHandle === \"number\") {\n\t\t\tunregisterThing(eventHandle);\n\t\t}\n\t}\n}\n\nCommandsRegistry.registerCommand(\n\t\"_executeDataToNotebook\",\n\tasync (accessor, ...args) => {\n\t\tconst [notebookType, bytes] = args;\n\t\tassertType(typeof notebookType === \"string\", \"string\");\n\t\tassertType(bytes instanceof VSBuffer, \"VSBuffer\");\n\n\t\tconst notebookService = accessor.get(INotebookService);\n\t\tconst info =\n\t\t\tawait notebookService.withNotebookDataProvider(notebookType);\n\t\tif (!(info instanceof SimpleNotebookProviderInfo)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst dto = await info.serializer.dataToNotebook(bytes);\n\t\treturn new SerializableObjectWithBuffers(\n\t\t\tNotebookDto.toNotebookDataDto(dto),\n\t\t);\n\t},\n);\n\nCommandsRegistry.registerCommand(\n\t\"_executeNotebookToData\",\n\tasync (accessor, ...args) => {\n\t\tconst [notebookType, dto] = args;\n\t\tassertType(typeof notebookType === \"string\", \"string\");\n\t\tassertType(typeof dto === \"object\");\n\n\t\tconst notebookService = accessor.get(INotebookService);\n\t\tconst info =\n\t\t\tawait notebookService.withNotebookDataProvider(notebookType);\n\t\tif (!(info instanceof SimpleNotebookProviderInfo)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst data = NotebookDto.fromNotebookDataDto(dto.value);\n\t\tconst bytes = await info.serializer.notebookToData(data);\n\t\treturn bytes;\n\t},\n);\n"],
  "mappings": "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",
  "names": ["data", "options", "handle"]
}
