var v=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var s=(r,e,i,a)=>{for(var t=a>1?void 0:a?u(e,i):e,n=r.length-1,o;n>=0;n--)(o=r[n])&&(t=(a?o(e,i,t):o(t))||t);return a&&t&&v(e,i,t),t},c=(r,e)=>(i,a)=>e(i,a,r);import{Schemas as f}from"../../../base/common/network.js";import{URI as d}from"../../../base/common/uri.js";import{IFileDialogService as O}from"../../../platform/dialogs/common/dialogs.js";import{extHostNamedCustomer as p}from"../../services/extensions/common/extHostCustomers.js";import{MainContext as S}from"../common/extHost.protocol.js";let l=class{constructor(e,i){this._fileDialogService=i}dispose(){}async $showOpenDialog(e){const i=l._convertOpenOptions(e);return i.defaultUri||(i.defaultUri=await this._fileDialogService.defaultFilePath()),Promise.resolve(this._fileDialogService.showOpenDialog(i))}async $showSaveDialog(e){const i=l._convertSaveOptions(e);return i.defaultUri||(i.defaultUri=await this._fileDialogService.defaultFilePath()),Promise.resolve(this._fileDialogService.showSaveDialog(i))}static _convertOpenOptions(e){const i={openLabel:e?.openLabel||void 0,canSelectFiles:e?.canSelectFiles||!e?.canSelectFiles&&!e?.canSelectFolders,canSelectFolders:e?.canSelectFolders,canSelectMany:e?.canSelectMany,defaultUri:e?.defaultUri?d.revive(e.defaultUri):void 0,title:e?.title||void 0,availableFileSystems:e?.allowUIResources?[f.vscodeRemote,f.file]:[]};if(e?.filters){i.filters=[];for(const[a,t]of Object.entries(e.filters))i.filters.push({name:a,extensions:t})}return i}static _convertSaveOptions(e){const i={defaultUri:e?.defaultUri?d.revive(e.defaultUri):void 0,saveLabel:e?.saveLabel||void 0,title:e?.title||void 0};if(e?.filters){i.filters=[];for(const[a,t]of Object.entries(e.filters))i.filters.push({name:a,extensions:t})}return i}};l=s([p(S.MainThreadDialogs),c(1,O)],l);export{l as MainThreadDialogs};
