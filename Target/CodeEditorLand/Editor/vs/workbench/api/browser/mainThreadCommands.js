var C=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var c=(i,e,t,o)=>{for(var n=o>1?void 0:o?p(e,t):e,a=i.length-1,m;a>=0;a--)(m=i[a])&&(n=(o?m(e,t,n):m(n))||n);return o&&n&&C(e,t,n),n},d=(i,e)=>(t,o)=>e(t,o,i);import{DisposableMap as u}from"../../../../vs/base/common/lifecycle.js";import{revive as g}from"../../../../vs/base/common/marshalling.js";import{isString as v}from"../../../../vs/base/common/types.js";import{CommandsRegistry as r,ICommandService as f}from"../../../../vs/platform/commands/common/commands.js";import{IExtensionService as h}from"../../../../vs/workbench/services/extensions/common/extensions.js";import{extHostNamedCustomer as l}from"../../../../vs/workbench/services/extensions/common/extHostCustomers.js";import{SerializableObjectWithBuffers as x}from"../../../../vs/workbench/services/extensions/common/proxyIdentifier.js";import{ExtHostContext as _,MainContext as y}from"../common/extHost.protocol.js";let s=class{constructor(e,t,o){this._commandService=t;this._extensionService=o;this._proxy=e.getProxy(_.ExtHostCommands),this._generateCommandsDocumentationRegistration=r.registerCommand("_generateCommandsDocumentation",()=>this._generateCommandsDocumentation())}_commandRegistrations=new u;_generateCommandsDocumentationRegistration;_proxy;dispose(){this._commandRegistrations.dispose(),this._generateCommandsDocumentationRegistration.dispose()}async _generateCommandsDocumentation(){const e=await this._proxy.$getContributedCommandMetadata(),t=r.getCommands();for(const[n,a]of t)a.metadata&&(e[n]=a.metadata);const o=[];for(const n in e)o.push("`"+n+"` - "+S(e[n]));console.log(o.join(`
`))}$registerCommand(e){this._commandRegistrations.set(e,r.registerCommand(e,(t,...o)=>this._proxy.$executeContributedCommand(e,...o).then(n=>g(n))))}$unregisterCommand(e){this._commandRegistrations.deleteAndDispose(e)}$fireCommandActivationEvent(e){const t=`onCommand:${e}`;this._extensionService.activationEventIsDone(t)||this._extensionService.activateByEvent(t)}async $executeCommand(e,t,o){t instanceof x&&(t=t.value);for(let n=0;n<t.length;n++)t[n]=g(t[n]);if(o&&t.length>0&&!r.getCommand(e))throw await this._extensionService.activateByEvent(`onCommand:${e}`),new Error("$executeCommand:retry");return this._commandService.executeCommand(e,...t)}$getCommands(){return Promise.resolve([...r.getCommands().keys()])}};s=c([l(y.MainThreadCommands),d(1,f),d(2,h)],s);function S(i){if(typeof i=="string")return i;{const t=[v(i.description)?i.description:i.description.original];if(t.push(`

`),i.args)for(const o of i.args)t.push(`* _${o.name}_ - ${o.description||""}
`);return i.returns&&t.push(`* _(returns)_ - ${i.returns}`),t.push(`

`),t.join("")}}export{s as MainThreadCommands};
