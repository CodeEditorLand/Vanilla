{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadDownloadService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { MainContext, MainThreadDownloadServiceShape } from '../common/extHost.protocol.js';\nimport { extHostNamedCustomer, IExtHostContext } from '../../services/extensions/common/extHostCustomers.js';\nimport { IDownloadService } from '../../../platform/download/common/download.js';\nimport { UriComponents, URI } from '../../../base/common/uri.js';\n\n@extHostNamedCustomer(MainContext.MainThreadDownloadService)\nexport class MainThreadDownloadService extends Disposable implements MainThreadDownloadServiceShape {\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@IDownloadService private readonly downloadService: IDownloadService\n\t) {\n\t\tsuper();\n\t}\n\n\t$download(uri: UriComponents, to: UriComponents): Promise<void> {\n\t\treturn this.downloadService.download(URI.revive(uri), URI.revive(to));\n\t}\n\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,kBAAkB;AAC3B,SAAS,aAAa,sCAAsC;AAC5D,SAAS,sBAAsB,uBAAuB;AACtD,SAAS,wBAAwB;AACjC,SAAS,eAAe,WAAW;AAG5B,IAAM,4BAAN,cAAwC,WAAqD;AAAA,EAEnG,YACC,gBACmC,iBAClC;AACD,UAAM;AAF6B;AAAA,EAGpC;AAAA,EAEA,UAAU,KAAoB,IAAkC;AAC/D,WAAO,KAAK,gBAAgB,SAAS,IAAI,OAAO,GAAG,GAAG,IAAI,OAAO,EAAE,CAAC;AAAA,EACrE;AAED;AAboG;AAAvF,4BAAN;AAAA,EADN,qBAAqB,YAAY,yBAAyB;AAAA,EAKxD;AAAA,GAJU;",
  "names": []
}
