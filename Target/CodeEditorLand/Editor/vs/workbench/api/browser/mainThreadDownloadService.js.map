{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadDownloadService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from \"../../../base/common/lifecycle.js\";\nimport { URI, type UriComponents } from \"../../../base/common/uri.js\";\nimport { IDownloadService } from \"../../../platform/download/common/download.js\";\nimport {\n\ttype IExtHostContext,\n\textHostNamedCustomer,\n} from \"../../services/extensions/common/extHostCustomers.js\";\nimport {\n\tMainContext,\n\ttype MainThreadDownloadServiceShape,\n} from \"../common/extHost.protocol.js\";\n\n@extHostNamedCustomer(MainContext.MainThreadDownloadService)\nexport class MainThreadDownloadService\n\textends Disposable\n\timplements MainThreadDownloadServiceShape\n{\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@IDownloadService private readonly downloadService: IDownloadService,\n\t) {\n\t\tsuper();\n\t}\n\n\t$download(uri: UriComponents, to: UriComponents): Promise<void> {\n\t\treturn this.downloadService.download(URI.revive(uri), URI.revive(to));\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,kBAAkB;AAC3B,SAAS,WAA+B;AACxC,SAAS,wBAAwB;AACjC;AAAA,EAEC;AAAA,OACM;AACP;AAAA,EACC;AAAA,OAEM;AAGA,IAAM,4BAAN,cACE,WAET;AAAA,EACC,YACC,gBACmC,iBAClC;AACD,UAAM;AAF6B;AAAA,EAGpC;AAAA,EAEA,UAAU,KAAoB,IAAkC;AAC/D,WAAO,KAAK,gBAAgB,SAAS,IAAI,OAAO,GAAG,GAAG,IAAI,OAAO,EAAE,CAAC;AAAA,EACrE;AACD;AAXA;AAHa,4BAAN;AAAA,EADN,qBAAqB,YAAY,yBAAyB;AAAA,EAOxD;AAAA,GANU;",
  "names": []
}
