{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadExtensionService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Action } from \"../../../base/common/actions.js\";\nimport type { VSBuffer } from \"../../../base/common/buffer.js\";\nimport { CancellationToken } from \"../../../base/common/cancellation.js\";\nimport {\n\ttype SerializedError,\n\ttransformErrorFromSerialization,\n} from \"../../../base/common/errors.js\";\nimport { FileAccess } from \"../../../base/common/network.js\";\nimport Severity from \"../../../base/common/severity.js\";\nimport { URI, type UriComponents } from \"../../../base/common/uri.js\";\nimport { localize } from \"../../../nls.js\";\nimport { ICommandService } from \"../../../platform/commands/common/commands.js\";\nimport type { ILocalExtension } from \"../../../platform/extensionManagement/common/extensionManagement.js\";\nimport { areSameExtensions } from \"../../../platform/extensionManagement/common/extensionManagementUtil.js\";\nimport type {\n\tExtensionIdentifier,\n\tIExtensionDescription,\n} from \"../../../platform/extensions/common/extensions.js\";\nimport { INotificationService } from \"../../../platform/notification/common/notification.js\";\nimport {\n\ttype IRemoteConnectionData,\n\tManagedRemoteConnection,\n\ttype RemoteConnection,\n\tRemoteConnectionType,\n\ttype ResolvedAuthority,\n\tWebSocketRemoteConnection,\n} from \"../../../platform/remote/common/remoteAuthorityResolver.js\";\nimport {\n\ttype IExtension,\n\tIExtensionsWorkbenchService,\n} from \"../../contrib/extensions/common/extensions.js\";\nimport { IWorkbenchEnvironmentService } from \"../../services/environment/common/environmentService.js\";\nimport {\n\tEnablementState,\n\tIWorkbenchExtensionEnablementService,\n} from \"../../services/extensionManagement/common/extensionManagement.js\";\nimport {\n\ttype IExtHostContext,\n\ttype IInternalExtHostContext,\n\textHostNamedCustomer,\n} from \"../../services/extensions/common/extHostCustomers.js\";\nimport { ExtensionHostKind } from \"../../services/extensions/common/extensionHostKind.js\";\nimport type { IExtensionDescriptionDelta } from \"../../services/extensions/common/extensionHostProtocol.js\";\nimport type {\n\tIExtensionHostProxy,\n\tIResolveAuthorityResult,\n} from \"../../services/extensions/common/extensionHostProxy.js\";\nimport {\n\ttype ActivationKind,\n\ttype ExtensionActivationReason,\n\tIExtensionService,\n\ttype IInternalExtensionService,\n\ttype MissingExtensionDependency,\n} from \"../../services/extensions/common/extensions.js\";\nimport type { Dto } from \"../../services/extensions/common/proxyIdentifier.js\";\nimport { IHostService } from \"../../services/host/browser/host.js\";\nimport { ITimerService } from \"../../services/timer/browser/timerService.js\";\nimport {\n\tExtHostContext,\n\ttype ExtHostExtensionServiceShape,\n\tMainContext,\n\ttype MainThreadExtensionServiceShape,\n} from \"../common/extHost.protocol.js\";\n\n@extHostNamedCustomer(MainContext.MainThreadExtensionService)\nexport class MainThreadExtensionService\n\timplements MainThreadExtensionServiceShape\n{\n\tprivate readonly _extensionHostKind: ExtensionHostKind;\n\tprivate readonly _internalExtensionService: IInternalExtensionService;\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@IExtensionService private readonly _extensionService: IExtensionService,\n\t\t@INotificationService private readonly _notificationService: INotificationService,\n\t\t@IExtensionsWorkbenchService private readonly _extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IHostService private readonly _hostService: IHostService,\n\t\t@IWorkbenchExtensionEnablementService private readonly _extensionEnablementService: IWorkbenchExtensionEnablementService,\n\t\t@ITimerService private readonly _timerService: ITimerService,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@IWorkbenchEnvironmentService protected readonly _environmentService: IWorkbenchEnvironmentService,\n\t) {\n\t\tthis._extensionHostKind = extHostContext.extensionHostKind;\n\n\t\tconst internalExtHostContext = (<IInternalExtHostContext>extHostContext);\n\t\tthis._internalExtensionService = internalExtHostContext.internalExtensionService;\n\t\tinternalExtHostContext._setExtensionHostProxy(\n\t\t\tnew ExtensionHostProxy(extHostContext.getProxy(ExtHostContext.ExtHostExtensionService))\n\t\t);\n\t\tinternalExtHostContext._setAllMainProxyIdentifiers(Object.keys(MainContext).map((key) => (<any>MainContext)[key]));\n\t}\n\n\tpublic dispose(): void {}\n\n\t$getExtension(extensionId: string) {\n\t\treturn this._extensionService.getExtension(extensionId);\n\t}\n\t$activateExtension(\n\t\textensionId: ExtensionIdentifier,\n\t\treason: ExtensionActivationReason,\n\t): Promise<void> {\n\t\treturn this._internalExtensionService._activateById(\n\t\t\textensionId,\n\t\t\treason,\n\t\t);\n\t}\n\tasync $onWillActivateExtension(\n\t\textensionId: ExtensionIdentifier,\n\t): Promise<void> {\n\t\tthis._internalExtensionService._onWillActivateExtension(extensionId);\n\t}\n\t$onDidActivateExtension(\n\t\textensionId: ExtensionIdentifier,\n\t\tcodeLoadingTime: number,\n\t\tactivateCallTime: number,\n\t\tactivateResolvedTime: number,\n\t\tactivationReason: ExtensionActivationReason,\n\t): void {\n\t\tthis._internalExtensionService._onDidActivateExtension(\n\t\t\textensionId,\n\t\t\tcodeLoadingTime,\n\t\t\tactivateCallTime,\n\t\t\tactivateResolvedTime,\n\t\t\tactivationReason,\n\t\t);\n\t}\n\t$onExtensionRuntimeError(\n\t\textensionId: ExtensionIdentifier,\n\t\tdata: SerializedError,\n\t): void {\n\t\tconst error = transformErrorFromSerialization(data);\n\t\tthis._internalExtensionService._onExtensionRuntimeError(\n\t\t\textensionId,\n\t\t\terror,\n\t\t);\n\t\tconsole.error(`[${extensionId.value}]${error.message}`);\n\t\tconsole.error(error.stack);\n\t}\n\tasync $onExtensionActivationError(\n\t\textensionId: ExtensionIdentifier,\n\t\tdata: SerializedError,\n\t\tmissingExtensionDependency: MissingExtensionDependency | null,\n\t): Promise<void> {\n\t\tconst error = transformErrorFromSerialization(data);\n\n\t\tthis._internalExtensionService._onDidActivateExtensionError(\n\t\t\textensionId,\n\t\t\terror,\n\t\t);\n\n\t\tif (missingExtensionDependency) {\n\t\t\tconst extension = await this._extensionService.getExtension(\n\t\t\t\textensionId.value,\n\t\t\t);\n\t\t\tif (extension) {\n\t\t\t\tconst local =\n\t\t\t\t\tawait this._extensionsWorkbenchService.queryLocal();\n\t\t\t\tconst installedDependency = local.find((i) =>\n\t\t\t\t\tareSameExtensions(i.identifier, {\n\t\t\t\t\t\tid: missingExtensionDependency.dependency,\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t\tif (installedDependency?.local) {\n\t\t\t\t\tawait this._handleMissingInstalledDependency(\n\t\t\t\t\t\textension,\n\t\t\t\t\t\tinstalledDependency.local,\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tawait this._handleMissingNotInstalledDependency(\n\t\t\t\t\t\textension,\n\t\t\t\t\t\tmissingExtensionDependency.dependency,\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst isDev =\n\t\t\t!this._environmentService.isBuilt ||\n\t\t\tthis._environmentService.isExtensionDevelopment;\n\t\tif (isDev) {\n\t\t\tthis._notificationService.error(error);\n\t\t\treturn;\n\t\t}\n\n\t\tconsole.error(error.message);\n\t}\n\n\tprivate async _handleMissingInstalledDependency(\n\t\textension: IExtensionDescription,\n\t\tmissingInstalledDependency: ILocalExtension,\n\t): Promise<void> {\n\t\tconst extName = extension.displayName || extension.name;\n\t\tif (\n\t\t\tthis._extensionEnablementService.isEnabled(\n\t\t\t\tmissingInstalledDependency,\n\t\t\t)\n\t\t) {\n\t\t\tthis._notificationService.notify({\n\t\t\t\tseverity: Severity.Error,\n\t\t\t\tmessage: localize(\n\t\t\t\t\t\"reload window\",\n\t\t\t\t\t\"Cannot activate the '{0}' extension because it depends on the '{1}' extension, which is not loaded. Would you like to reload the window to load the extension?\",\n\t\t\t\t\textName,\n\t\t\t\t\tmissingInstalledDependency.manifest.displayName ||\n\t\t\t\t\t\tmissingInstalledDependency.manifest.name,\n\t\t\t\t),\n\t\t\t\tactions: {\n\t\t\t\t\tprimary: [\n\t\t\t\t\t\tnew Action(\n\t\t\t\t\t\t\t\"reload\",\n\t\t\t\t\t\t\tlocalize(\"reload\", \"Reload Window\"),\n\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t() => this._hostService.reload(),\n\t\t\t\t\t\t),\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t});\n\t\t} else {\n\t\t\tconst enablementState =\n\t\t\t\tthis._extensionEnablementService.getEnablementState(\n\t\t\t\t\tmissingInstalledDependency,\n\t\t\t\t);\n\t\t\tif (\n\t\t\t\tenablementState === EnablementState.DisabledByVirtualWorkspace\n\t\t\t) {\n\t\t\t\tthis._notificationService.notify({\n\t\t\t\t\tseverity: Severity.Error,\n\t\t\t\t\tmessage: localize(\n\t\t\t\t\t\t\"notSupportedInWorkspace\",\n\t\t\t\t\t\t\"Cannot activate the '{0}' extension because it depends on the '{1}' extension which is not supported in the current workspace\",\n\t\t\t\t\t\textName,\n\t\t\t\t\t\tmissingInstalledDependency.manifest.displayName ||\n\t\t\t\t\t\t\tmissingInstalledDependency.manifest.name,\n\t\t\t\t\t),\n\t\t\t\t});\n\t\t\t} else if (\n\t\t\t\tenablementState === EnablementState.DisabledByTrustRequirement\n\t\t\t) {\n\t\t\t\tthis._notificationService.notify({\n\t\t\t\t\tseverity: Severity.Error,\n\t\t\t\t\tmessage: localize(\n\t\t\t\t\t\t\"restrictedMode\",\n\t\t\t\t\t\t\"Cannot activate the '{0}' extension because it depends on the '{1}' extension which is not supported in Restricted Mode\",\n\t\t\t\t\t\textName,\n\t\t\t\t\t\tmissingInstalledDependency.manifest.displayName ||\n\t\t\t\t\t\t\tmissingInstalledDependency.manifest.name,\n\t\t\t\t\t),\n\t\t\t\t\tactions: {\n\t\t\t\t\t\tprimary: [\n\t\t\t\t\t\t\tnew Action(\n\t\t\t\t\t\t\t\t\"manageWorkspaceTrust\",\n\t\t\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\t\t\"manageWorkspaceTrust\",\n\t\t\t\t\t\t\t\t\t\"Manage Workspace Trust\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\t() =>\n\t\t\t\t\t\t\t\t\tthis._commandService.executeCommand(\n\t\t\t\t\t\t\t\t\t\t\"workbench.trust.manage\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t} else if (\n\t\t\t\tthis._extensionEnablementService.canChangeEnablement(\n\t\t\t\t\tmissingInstalledDependency,\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tthis._notificationService.notify({\n\t\t\t\t\tseverity: Severity.Error,\n\t\t\t\t\tmessage: localize(\n\t\t\t\t\t\t\"disabledDep\",\n\t\t\t\t\t\t\"Cannot activate the '{0}' extension because it depends on the '{1}' extension which is disabled. Would you like to enable the extension and reload the window?\",\n\t\t\t\t\t\textName,\n\t\t\t\t\t\tmissingInstalledDependency.manifest.displayName ||\n\t\t\t\t\t\t\tmissingInstalledDependency.manifest.name,\n\t\t\t\t\t),\n\t\t\t\t\tactions: {\n\t\t\t\t\t\tprimary: [\n\t\t\t\t\t\t\tnew Action(\n\t\t\t\t\t\t\t\t\"enable\",\n\t\t\t\t\t\t\t\tlocalize(\"enable dep\", \"Enable and Reload\"),\n\t\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\t() =>\n\t\t\t\t\t\t\t\t\tthis._extensionEnablementService\n\t\t\t\t\t\t\t\t\t\t.setEnablement(\n\t\t\t\t\t\t\t\t\t\t\t[missingInstalledDependency],\n\t\t\t\t\t\t\t\t\t\t\tenablementState ===\n\t\t\t\t\t\t\t\t\t\t\t\tEnablementState.DisabledGlobally\n\t\t\t\t\t\t\t\t\t\t\t\t? EnablementState.EnabledGlobally\n\t\t\t\t\t\t\t\t\t\t\t\t: EnablementState.EnabledWorkspace,\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\t\t\t\t\t() => this._hostService.reload(),\n\t\t\t\t\t\t\t\t\t\t\t(e) =>\n\t\t\t\t\t\t\t\t\t\t\t\tthis._notificationService.error(\n\t\t\t\t\t\t\t\t\t\t\t\t\te,\n\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis._notificationService.notify({\n\t\t\t\t\tseverity: Severity.Error,\n\t\t\t\t\tmessage: localize(\n\t\t\t\t\t\t\"disabledDepNoAction\",\n\t\t\t\t\t\t\"Cannot activate the '{0}' extension because it depends on the '{1}' extension which is disabled.\",\n\t\t\t\t\t\textName,\n\t\t\t\t\t\tmissingInstalledDependency.manifest.displayName ||\n\t\t\t\t\t\t\tmissingInstalledDependency.manifest.name,\n\t\t\t\t\t),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async _handleMissingNotInstalledDependency(\n\t\textension: IExtensionDescription,\n\t\tmissingDependency: string,\n\t): Promise<void> {\n\t\tconst extName = extension.displayName || extension.name;\n\t\tlet dependencyExtension: IExtension | null = null;\n\t\ttry {\n\t\t\tdependencyExtension = (\n\t\t\t\tawait this._extensionsWorkbenchService.getExtensions(\n\t\t\t\t\t[{ id: missingDependency }],\n\t\t\t\t\tCancellationToken.None,\n\t\t\t\t)\n\t\t\t)[0];\n\t\t} catch (err) {}\n\t\tif (dependencyExtension) {\n\t\t\tthis._notificationService.notify({\n\t\t\t\tseverity: Severity.Error,\n\t\t\t\tmessage: localize(\n\t\t\t\t\t\"uninstalledDep\",\n\t\t\t\t\t\"Cannot activate the '{0}' extension because it depends on the '{1}' extension from '{2}', which is not installed. Would you like to install the extension and reload the window?\",\n\t\t\t\t\textName,\n\t\t\t\t\tdependencyExtension.displayName,\n\t\t\t\t\tdependencyExtension.publisherDisplayName,\n\t\t\t\t),\n\t\t\t\tactions: {\n\t\t\t\t\tprimary: [\n\t\t\t\t\t\tnew Action(\n\t\t\t\t\t\t\t\"install\",\n\t\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\t\"install missing dep\",\n\t\t\t\t\t\t\t\t\"Install and Reload\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t() =>\n\t\t\t\t\t\t\t\tthis._extensionsWorkbenchService\n\t\t\t\t\t\t\t\t\t.install(dependencyExtension)\n\t\t\t\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\t\t\t\t() => this._hostService.reload(),\n\t\t\t\t\t\t\t\t\t\t(e) =>\n\t\t\t\t\t\t\t\t\t\t\tthis._notificationService.error(e),\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t});\n\t\t} else {\n\t\t\tthis._notificationService.error(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"unknownDep\",\n\t\t\t\t\t\"Cannot activate the '{0}' extension because it depends on an unknown '{1}' extension.\",\n\t\t\t\t\textName,\n\t\t\t\t\tmissingDependency,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t}\n\n\tasync $setPerformanceMarks(marks: PerformanceMark[]): Promise<void> {\n\t\tif (this._extensionHostKind === ExtensionHostKind.LocalProcess) {\n\t\t\tthis._timerService.setPerformanceMarks(\"localExtHost\", marks);\n\t\t} else if (\n\t\t\tthis._extensionHostKind === ExtensionHostKind.LocalWebWorker\n\t\t) {\n\t\t\tthis._timerService.setPerformanceMarks(\"workerExtHost\", marks);\n\t\t} else {\n\t\t\tthis._timerService.setPerformanceMarks(\"remoteExtHost\", marks);\n\t\t}\n\t}\n\n\tasync $asBrowserUri(uri: UriComponents): Promise<UriComponents> {\n\t\treturn FileAccess.uriToBrowserUri(URI.revive(uri));\n\t}\n}\n\nclass ExtensionHostProxy implements IExtensionHostProxy {\n\tconstructor(private readonly _actual: ExtHostExtensionServiceShape) {}\n\n\tasync resolveAuthority(\n\t\tremoteAuthority: string,\n\t\tresolveAttempt: number,\n\t): Promise<IResolveAuthorityResult> {\n\t\tconst resolved = reviveResolveAuthorityResult(\n\t\t\tawait this._actual.$resolveAuthority(\n\t\t\t\tremoteAuthority,\n\t\t\t\tresolveAttempt,\n\t\t\t),\n\t\t);\n\t\treturn resolved;\n\t}\n\tasync getCanonicalURI(\n\t\tremoteAuthority: string,\n\t\turi: URI,\n\t): Promise<URI | null> {\n\t\tconst uriComponents = await this._actual.$getCanonicalURI(\n\t\t\tremoteAuthority,\n\t\t\turi,\n\t\t);\n\t\treturn uriComponents ? URI.revive(uriComponents) : uriComponents;\n\t}\n\tstartExtensionHost(\n\t\textensionsDelta: IExtensionDescriptionDelta,\n\t): Promise<void> {\n\t\treturn this._actual.$startExtensionHost(extensionsDelta);\n\t}\n\textensionTestsExecute(): Promise<number> {\n\t\treturn this._actual.$extensionTestsExecute();\n\t}\n\tactivateByEvent(\n\t\tactivationEvent: string,\n\t\tactivationKind: ActivationKind,\n\t): Promise<void> {\n\t\treturn this._actual.$activateByEvent(activationEvent, activationKind);\n\t}\n\tactivate(\n\t\textensionId: ExtensionIdentifier,\n\t\treason: ExtensionActivationReason,\n\t): Promise<boolean> {\n\t\treturn this._actual.$activate(extensionId, reason);\n\t}\n\tsetRemoteEnvironment(env: { [key: string]: string | null }): Promise<void> {\n\t\treturn this._actual.$setRemoteEnvironment(env);\n\t}\n\tupdateRemoteConnectionData(\n\t\tconnectionData: IRemoteConnectionData,\n\t): Promise<void> {\n\t\treturn this._actual.$updateRemoteConnectionData(connectionData);\n\t}\n\tdeltaExtensions(\n\t\textensionsDelta: IExtensionDescriptionDelta,\n\t): Promise<void> {\n\t\treturn this._actual.$deltaExtensions(extensionsDelta);\n\t}\n\ttest_latency(n: number): Promise<number> {\n\t\treturn this._actual.$test_latency(n);\n\t}\n\ttest_up(b: VSBuffer): Promise<number> {\n\t\treturn this._actual.$test_up(b);\n\t}\n\ttest_down(size: number): Promise<VSBuffer> {\n\t\treturn this._actual.$test_down(size);\n\t}\n}\n\nfunction reviveResolveAuthorityResult(\n\tresult: Dto<IResolveAuthorityResult>,\n): IResolveAuthorityResult {\n\tif (result.type === \"ok\") {\n\t\treturn {\n\t\t\ttype: \"ok\",\n\t\t\tvalue: {\n\t\t\t\t...result.value,\n\t\t\t\tauthority: reviveResolvedAuthority(result.value.authority),\n\t\t\t},\n\t\t};\n\t} else {\n\t\treturn result;\n\t}\n}\n\nfunction reviveResolvedAuthority(\n\tresolvedAuthority: Dto<ResolvedAuthority>,\n): ResolvedAuthority {\n\treturn {\n\t\t...resolvedAuthority,\n\t\tconnectTo: reviveConnection(resolvedAuthority.connectTo),\n\t};\n}\n\nfunction reviveConnection(connection: Dto<RemoteConnection>): RemoteConnection {\n\tif (connection.type === RemoteConnectionType.WebSocket) {\n\t\treturn new WebSocketRemoteConnection(connection.host, connection.port);\n\t}\n\treturn new ManagedRemoteConnection(connection.id);\n}\n"],
  "mappings": "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",
  "names": []
}
