{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadExtensionService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Action } from '../../../base/common/actions.js';\nimport { VSBuffer } from '../../../base/common/buffer.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { SerializedError, transformErrorFromSerialization } from '../../../base/common/errors.js';\nimport { FileAccess } from '../../../base/common/network.js';\nimport Severity from '../../../base/common/severity.js';\nimport { URI, UriComponents } from '../../../base/common/uri.js';\nimport { localize } from '../../../nls.js';\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\nimport { ILocalExtension } from '../../../platform/extensionManagement/common/extensionManagement.js';\nimport { areSameExtensions } from '../../../platform/extensionManagement/common/extensionManagementUtil.js';\nimport { ExtensionIdentifier, IExtensionDescription } from '../../../platform/extensions/common/extensions.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nimport { IRemoteConnectionData, ManagedRemoteConnection, RemoteConnection, RemoteConnectionType, ResolvedAuthority, WebSocketRemoteConnection } from '../../../platform/remote/common/remoteAuthorityResolver.js';\nimport { ExtHostContext, ExtHostExtensionServiceShape, MainContext, MainThreadExtensionServiceShape } from '../common/extHost.protocol.js';\nimport { IExtension, IExtensionsWorkbenchService } from '../../contrib/extensions/common/extensions.js';\nimport { IWorkbenchEnvironmentService } from '../../services/environment/common/environmentService.js';\nimport { EnablementState, IWorkbenchExtensionEnablementService } from '../../services/extensionManagement/common/extensionManagement.js';\nimport { ExtensionHostKind } from '../../services/extensions/common/extensionHostKind.js';\nimport { IExtensionDescriptionDelta } from '../../services/extensions/common/extensionHostProtocol.js';\nimport { IExtensionHostProxy, IResolveAuthorityResult } from '../../services/extensions/common/extensionHostProxy.js';\nimport { ActivationKind, ExtensionActivationReason, IExtensionService, IInternalExtensionService, MissingExtensionDependency } from '../../services/extensions/common/extensions.js';\nimport { extHostNamedCustomer, IExtHostContext, IInternalExtHostContext } from '../../services/extensions/common/extHostCustomers.js';\nimport { Dto } from '../../services/extensions/common/proxyIdentifier.js';\nimport { IHostService } from '../../services/host/browser/host.js';\nimport { ITimerService } from '../../services/timer/browser/timerService.js';\n\n@extHostNamedCustomer(MainContext.MainThreadExtensionService)\nexport class MainThreadExtensionService implements MainThreadExtensionServiceShape {\n\n\tprivate readonly _extensionHostKind: ExtensionHostKind;\n\tprivate readonly _internalExtensionService: IInternalExtensionService;\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@IExtensionService private readonly _extensionService: IExtensionService,\n\t\t@INotificationService private readonly _notificationService: INotificationService,\n\t\t@IExtensionsWorkbenchService private readonly _extensionsWorkbenchService: IExtensionsWorkbenchService,\n\t\t@IHostService private readonly _hostService: IHostService,\n\t\t@IWorkbenchExtensionEnablementService private readonly _extensionEnablementService: IWorkbenchExtensionEnablementService,\n\t\t@ITimerService private readonly _timerService: ITimerService,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@IWorkbenchEnvironmentService protected readonly _environmentService: IWorkbenchEnvironmentService,\n\t) {\n\t\tthis._extensionHostKind = extHostContext.extensionHostKind;\n\n\t\tconst internalExtHostContext = (<IInternalExtHostContext>extHostContext);\n\t\tthis._internalExtensionService = internalExtHostContext.internalExtensionService;\n\t\tinternalExtHostContext._setExtensionHostProxy(\n\t\t\tnew ExtensionHostProxy(extHostContext.getProxy(ExtHostContext.ExtHostExtensionService))\n\t\t);\n\t\tinternalExtHostContext._setAllMainProxyIdentifiers(Object.keys(MainContext).map((key) => (<any>MainContext)[key]));\n\t}\n\n\tpublic dispose(): void {\n\t}\n\n\t$getExtension(extensionId: string) {\n\t\treturn this._extensionService.getExtension(extensionId);\n\t}\n\t$activateExtension(extensionId: ExtensionIdentifier, reason: ExtensionActivationReason): Promise<void> {\n\t\treturn this._internalExtensionService._activateById(extensionId, reason);\n\t}\n\tasync $onWillActivateExtension(extensionId: ExtensionIdentifier): Promise<void> {\n\t\tthis._internalExtensionService._onWillActivateExtension(extensionId);\n\t}\n\t$onDidActivateExtension(extensionId: ExtensionIdentifier, codeLoadingTime: number, activateCallTime: number, activateResolvedTime: number, activationReason: ExtensionActivationReason): void {\n\t\tthis._internalExtensionService._onDidActivateExtension(extensionId, codeLoadingTime, activateCallTime, activateResolvedTime, activationReason);\n\t}\n\t$onExtensionRuntimeError(extensionId: ExtensionIdentifier, data: SerializedError): void {\n\t\tconst error = transformErrorFromSerialization(data);\n\t\tthis._internalExtensionService._onExtensionRuntimeError(extensionId, error);\n\t\tconsole.error(`[${extensionId.value}]${error.message}`);\n\t\tconsole.error(error.stack);\n\t}\n\tasync $onExtensionActivationError(extensionId: ExtensionIdentifier, data: SerializedError, missingExtensionDependency: MissingExtensionDependency | null): Promise<void> {\n\t\tconst error = transformErrorFromSerialization(data);\n\n\t\tthis._internalExtensionService._onDidActivateExtensionError(extensionId, error);\n\n\t\tif (missingExtensionDependency) {\n\t\t\tconst extension = await this._extensionService.getExtension(extensionId.value);\n\t\t\tif (extension) {\n\t\t\t\tconst local = await this._extensionsWorkbenchService.queryLocal();\n\t\t\t\tconst installedDependency = local.find(i => areSameExtensions(i.identifier, { id: missingExtensionDependency.dependency }));\n\t\t\t\tif (installedDependency?.local) {\n\t\t\t\t\tawait this._handleMissingInstalledDependency(extension, installedDependency.local);\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tawait this._handleMissingNotInstalledDependency(extension, missingExtensionDependency.dependency);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst isDev = !this._environmentService.isBuilt || this._environmentService.isExtensionDevelopment;\n\t\tif (isDev) {\n\t\t\tthis._notificationService.error(error);\n\t\t\treturn;\n\t\t}\n\n\t\tconsole.error(error.message);\n\t}\n\n\tprivate async _handleMissingInstalledDependency(extension: IExtensionDescription, missingInstalledDependency: ILocalExtension): Promise<void> {\n\t\tconst extName = extension.displayName || extension.name;\n\t\tif (this._extensionEnablementService.isEnabled(missingInstalledDependency)) {\n\t\t\tthis._notificationService.notify({\n\t\t\t\tseverity: Severity.Error,\n\t\t\t\tmessage: localize('reload window', \"Cannot activate the '{0}' extension because it depends on the '{1}' extension, which is not loaded. Would you like to reload the window to load the extension?\", extName, missingInstalledDependency.manifest.displayName || missingInstalledDependency.manifest.name),\n\t\t\t\tactions: {\n\t\t\t\t\tprimary: [new Action('reload', localize('reload', \"Reload Window\"), '', true, () => this._hostService.reload())]\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tconst enablementState = this._extensionEnablementService.getEnablementState(missingInstalledDependency);\n\t\t\tif (enablementState === EnablementState.DisabledByVirtualWorkspace) {\n\t\t\t\tthis._notificationService.notify({\n\t\t\t\t\tseverity: Severity.Error,\n\t\t\t\t\tmessage: localize('notSupportedInWorkspace', \"Cannot activate the '{0}' extension because it depends on the '{1}' extension which is not supported in the current workspace\", extName, missingInstalledDependency.manifest.displayName || missingInstalledDependency.manifest.name),\n\t\t\t\t});\n\t\t\t} else if (enablementState === EnablementState.DisabledByTrustRequirement) {\n\t\t\t\tthis._notificationService.notify({\n\t\t\t\t\tseverity: Severity.Error,\n\t\t\t\t\tmessage: localize('restrictedMode', \"Cannot activate the '{0}' extension because it depends on the '{1}' extension which is not supported in Restricted Mode\", extName, missingInstalledDependency.manifest.displayName || missingInstalledDependency.manifest.name),\n\t\t\t\t\tactions: {\n\t\t\t\t\t\tprimary: [new Action('manageWorkspaceTrust', localize('manageWorkspaceTrust', \"Manage Workspace Trust\"), '', true,\n\t\t\t\t\t\t\t() => this._commandService.executeCommand('workbench.trust.manage'))]\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (this._extensionEnablementService.canChangeEnablement(missingInstalledDependency)) {\n\t\t\t\tthis._notificationService.notify({\n\t\t\t\t\tseverity: Severity.Error,\n\t\t\t\t\tmessage: localize('disabledDep', \"Cannot activate the '{0}' extension because it depends on the '{1}' extension which is disabled. Would you like to enable the extension and reload the window?\", extName, missingInstalledDependency.manifest.displayName || missingInstalledDependency.manifest.name),\n\t\t\t\t\tactions: {\n\t\t\t\t\t\tprimary: [new Action('enable', localize('enable dep', \"Enable and Reload\"), '', true,\n\t\t\t\t\t\t\t() => this._extensionEnablementService.setEnablement([missingInstalledDependency], enablementState === EnablementState.DisabledGlobally ? EnablementState.EnabledGlobally : EnablementState.EnabledWorkspace)\n\t\t\t\t\t\t\t\t.then(() => this._hostService.reload(), e => this._notificationService.error(e)))]\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis._notificationService.notify({\n\t\t\t\t\tseverity: Severity.Error,\n\t\t\t\t\tmessage: localize('disabledDepNoAction', \"Cannot activate the '{0}' extension because it depends on the '{1}' extension which is disabled.\", extName, missingInstalledDependency.manifest.displayName || missingInstalledDependency.manifest.name),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async _handleMissingNotInstalledDependency(extension: IExtensionDescription, missingDependency: string): Promise<void> {\n\t\tconst extName = extension.displayName || extension.name;\n\t\tlet dependencyExtension: IExtension | null = null;\n\t\ttry {\n\t\t\tdependencyExtension = (await this._extensionsWorkbenchService.getExtensions([{ id: missingDependency }], CancellationToken.None))[0];\n\t\t} catch (err) {\n\t\t}\n\t\tif (dependencyExtension) {\n\t\t\tthis._notificationService.notify({\n\t\t\t\tseverity: Severity.Error,\n\t\t\t\tmessage: localize('uninstalledDep', \"Cannot activate the '{0}' extension because it depends on the '{1}' extension from '{2}', which is not installed. Would you like to install the extension and reload the window?\", extName, dependencyExtension.displayName, dependencyExtension.publisherDisplayName),\n\t\t\t\tactions: {\n\t\t\t\t\tprimary: [new Action('install', localize('install missing dep', \"Install and Reload\"), '', true,\n\t\t\t\t\t\t() => this._extensionsWorkbenchService.install(dependencyExtension)\n\t\t\t\t\t\t\t.then(() => this._hostService.reload(), e => this._notificationService.error(e)))]\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tthis._notificationService.error(localize('unknownDep', \"Cannot activate the '{0}' extension because it depends on an unknown '{1}' extension.\", extName, missingDependency));\n\t\t}\n\t}\n\n\tasync $setPerformanceMarks(marks: PerformanceMark[]): Promise<void> {\n\t\tif (this._extensionHostKind === ExtensionHostKind.LocalProcess) {\n\t\t\tthis._timerService.setPerformanceMarks('localExtHost', marks);\n\t\t} else if (this._extensionHostKind === ExtensionHostKind.LocalWebWorker) {\n\t\t\tthis._timerService.setPerformanceMarks('workerExtHost', marks);\n\t\t} else {\n\t\t\tthis._timerService.setPerformanceMarks('remoteExtHost', marks);\n\t\t}\n\t}\n\n\tasync $asBrowserUri(uri: UriComponents): Promise<UriComponents> {\n\t\treturn FileAccess.uriToBrowserUri(URI.revive(uri));\n\t}\n}\n\nclass ExtensionHostProxy implements IExtensionHostProxy {\n\tconstructor(\n\t\tprivate readonly _actual: ExtHostExtensionServiceShape\n\t) { }\n\n\tasync resolveAuthority(remoteAuthority: string, resolveAttempt: number): Promise<IResolveAuthorityResult> {\n\t\tconst resolved = reviveResolveAuthorityResult(await this._actual.$resolveAuthority(remoteAuthority, resolveAttempt));\n\t\treturn resolved;\n\t}\n\tasync getCanonicalURI(remoteAuthority: string, uri: URI): Promise<URI | null> {\n\t\tconst uriComponents = await this._actual.$getCanonicalURI(remoteAuthority, uri);\n\t\treturn (uriComponents ? URI.revive(uriComponents) : uriComponents);\n\t}\n\tstartExtensionHost(extensionsDelta: IExtensionDescriptionDelta): Promise<void> {\n\t\treturn this._actual.$startExtensionHost(extensionsDelta);\n\t}\n\textensionTestsExecute(): Promise<number> {\n\t\treturn this._actual.$extensionTestsExecute();\n\t}\n\tactivateByEvent(activationEvent: string, activationKind: ActivationKind): Promise<void> {\n\t\treturn this._actual.$activateByEvent(activationEvent, activationKind);\n\t}\n\tactivate(extensionId: ExtensionIdentifier, reason: ExtensionActivationReason): Promise<boolean> {\n\t\treturn this._actual.$activate(extensionId, reason);\n\t}\n\tsetRemoteEnvironment(env: { [key: string]: string | null }): Promise<void> {\n\t\treturn this._actual.$setRemoteEnvironment(env);\n\t}\n\tupdateRemoteConnectionData(connectionData: IRemoteConnectionData): Promise<void> {\n\t\treturn this._actual.$updateRemoteConnectionData(connectionData);\n\t}\n\tdeltaExtensions(extensionsDelta: IExtensionDescriptionDelta): Promise<void> {\n\t\treturn this._actual.$deltaExtensions(extensionsDelta);\n\t}\n\ttest_latency(n: number): Promise<number> {\n\t\treturn this._actual.$test_latency(n);\n\t}\n\ttest_up(b: VSBuffer): Promise<number> {\n\t\treturn this._actual.$test_up(b);\n\t}\n\ttest_down(size: number): Promise<VSBuffer> {\n\t\treturn this._actual.$test_down(size);\n\t}\n}\n\nfunction reviveResolveAuthorityResult(result: Dto<IResolveAuthorityResult>): IResolveAuthorityResult {\n\tif (result.type === 'ok') {\n\t\treturn {\n\t\t\ttype: 'ok',\n\t\t\tvalue: {\n\t\t\t\t...result.value,\n\t\t\t\tauthority: reviveResolvedAuthority(result.value.authority),\n\t\t\t}\n\t\t};\n\t} else {\n\t\treturn result;\n\t}\n}\n\nfunction reviveResolvedAuthority(resolvedAuthority: Dto<ResolvedAuthority>): ResolvedAuthority {\n\treturn {\n\t\t...resolvedAuthority,\n\t\tconnectTo: reviveConnection(resolvedAuthority.connectTo),\n\t};\n}\n\nfunction reviveConnection(connection: Dto<RemoteConnection>): RemoteConnection {\n\tif (connection.type === RemoteConnectionType.WebSocket) {\n\t\treturn new WebSocketRemoteConnection(connection.host, connection.port);\n\t}\n\treturn new ManagedRemoteConnection(connection.id);\n}\n"],
  "mappings": "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",
  "names": []
}
