{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadFileSystem.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from \"../../../base/common/buffer.js\";\nimport { Emitter, Event } from \"../../../base/common/event.js\";\nimport type { IMarkdownString } from \"../../../base/common/htmlContent.js\";\nimport {\n\tDisposableMap,\n\tDisposableStore,\n\ttype IDisposable,\n\ttoDisposable,\n} from \"../../../base/common/lifecycle.js\";\nimport { URI, type UriComponents } from \"../../../base/common/uri.js\";\nimport {\n\tFileOperationError,\n\tFileOperationResult,\n\tFilePermission,\n\ttype FileSystemProviderCapabilities,\n\tFileSystemProviderErrorCode,\n\tFileType,\n\ttype IFileChange,\n\ttype IFileDeleteOptions,\n\ttype IFileOpenOptions,\n\ttype IFileOverwriteOptions,\n\tIFileService,\n\ttype IFileStat,\n\ttype IFileStatWithPartialMetadata,\n\ttype IFileSystemProviderWithFileFolderCopyCapability,\n\ttype IFileSystemProviderWithFileReadWriteCapability,\n\ttype IFileSystemProviderWithOpenReadWriteCloseCapability,\n\ttype IFileWriteOptions,\n\ttype IStat,\n\ttype IWatchOptions,\n\ttoFileSystemProviderErrorCode,\n} from \"../../../platform/files/common/files.js\";\nimport {\n\ttype IExtHostContext,\n\textHostNamedCustomer,\n} from \"../../services/extensions/common/extHostCustomers.js\";\nimport {\n\tExtHostContext,\n\ttype ExtHostFileSystemShape,\n\ttype IFileChangeDto,\n\tMainContext,\n\ttype MainThreadFileSystemShape,\n} from \"../common/extHost.protocol.js\";\n\n@extHostNamedCustomer(MainContext.MainThreadFileSystem)\nexport class MainThreadFileSystem implements MainThreadFileSystemShape {\n\tprivate readonly _proxy: ExtHostFileSystemShape;\n\tprivate readonly _fileProvider = new DisposableMap<\n\t\tnumber,\n\t\tRemoteFileSystemProvider\n\t>();\n\tprivate readonly _disposables = new DisposableStore();\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@IFileService private readonly _fileService: IFileService,\n\t) {\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostFileSystem);\n\n\t\tconst infoProxy = extHostContext.getProxy(\n\t\t\tExtHostContext.ExtHostFileSystemInfo,\n\t\t);\n\n\t\tfor (const entry of _fileService.listCapabilities()) {\n\t\t\tinfoProxy.$acceptProviderInfos(\n\t\t\t\tURI.from({ scheme: entry.scheme, path: \"/dummy\" }),\n\t\t\t\tentry.capabilities,\n\t\t\t);\n\t\t}\n\t\tthis._disposables.add(\n\t\t\t_fileService.onDidChangeFileSystemProviderRegistrations((e) =>\n\t\t\t\tinfoProxy.$acceptProviderInfos(\n\t\t\t\t\tURI.from({ scheme: e.scheme, path: \"/dummy\" }),\n\t\t\t\t\te.provider?.capabilities ?? null,\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\t\tthis._disposables.add(\n\t\t\t_fileService.onDidChangeFileSystemProviderCapabilities((e) =>\n\t\t\t\tinfoProxy.$acceptProviderInfos(\n\t\t\t\t\tURI.from({ scheme: e.scheme, path: \"/dummy\" }),\n\t\t\t\t\te.provider.capabilities,\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t\tthis._fileProvider.dispose();\n\t}\n\n\tasync $registerFileSystemProvider(\n\t\thandle: number,\n\t\tscheme: string,\n\t\tcapabilities: FileSystemProviderCapabilities,\n\t\treadonlyMessage?: IMarkdownString,\n\t): Promise<void> {\n\t\tthis._fileProvider.set(\n\t\t\thandle,\n\t\t\tnew RemoteFileSystemProvider(\n\t\t\t\tthis._fileService,\n\t\t\t\tscheme,\n\t\t\t\tcapabilities,\n\t\t\t\treadonlyMessage,\n\t\t\t\thandle,\n\t\t\t\tthis._proxy,\n\t\t\t),\n\t\t);\n\t}\n\n\t$unregisterProvider(handle: number): void {\n\t\tthis._fileProvider.deleteAndDispose(handle);\n\t}\n\n\t$onFileSystemChange(handle: number, changes: IFileChangeDto[]): void {\n\t\tconst fileProvider = this._fileProvider.get(handle);\n\t\tif (!fileProvider) {\n\t\t\tthrow new Error(\"Unknown file provider\");\n\t\t}\n\t\tfileProvider.$onFileSystemChange(changes);\n\t}\n\n\t// --- consumer fs, vscode.workspace.fs\n\n\t$stat(uri: UriComponents): Promise<IStat> {\n\t\treturn this._fileService\n\t\t\t.stat(URI.revive(uri))\n\t\t\t.then((stat) => {\n\t\t\t\treturn {\n\t\t\t\t\tctime: stat.ctime,\n\t\t\t\t\tmtime: stat.mtime,\n\t\t\t\t\tsize: stat.size,\n\t\t\t\t\tpermissions: stat.readonly\n\t\t\t\t\t\t? FilePermission.Readonly\n\t\t\t\t\t\t: undefined,\n\t\t\t\t\ttype: MainThreadFileSystem._asFileType(stat),\n\t\t\t\t};\n\t\t\t})\n\t\t\t.catch(MainThreadFileSystem._handleError);\n\t}\n\n\t$readdir(uri: UriComponents): Promise<[string, FileType][]> {\n\t\treturn this._fileService\n\t\t\t.resolve(URI.revive(uri), { resolveMetadata: false })\n\t\t\t.then((stat) => {\n\t\t\t\tif (!stat.isDirectory) {\n\t\t\t\t\tconst err = new Error(stat.name);\n\t\t\t\t\terr.name = FileSystemProviderErrorCode.FileNotADirectory;\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\t\t\t\treturn stat.children\n\t\t\t\t\t? stat.children.map(\n\t\t\t\t\t\t\t(child) =>\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tchild.name,\n\t\t\t\t\t\t\t\t\tMainThreadFileSystem._asFileType(child),\n\t\t\t\t\t\t\t\t] as [string, FileType],\n\t\t\t\t\t\t)\n\t\t\t\t\t: [];\n\t\t\t})\n\t\t\t.catch(MainThreadFileSystem._handleError);\n\t}\n\n\tprivate static _asFileType(\n\t\tstat: IFileStat | IFileStatWithPartialMetadata,\n\t): FileType {\n\t\tlet res = 0;\n\t\tif (stat.isFile) {\n\t\t\tres += FileType.File;\n\t\t} else if (stat.isDirectory) {\n\t\t\tres += FileType.Directory;\n\t\t}\n\t\tif (stat.isSymbolicLink) {\n\t\t\tres += FileType.SymbolicLink;\n\t\t}\n\t\treturn res;\n\t}\n\n\t$readFile(uri: UriComponents): Promise<VSBuffer> {\n\t\treturn this._fileService\n\t\t\t.readFile(URI.revive(uri))\n\t\t\t.then((file) => file.value)\n\t\t\t.catch(MainThreadFileSystem._handleError);\n\t}\n\n\t$writeFile(uri: UriComponents, content: VSBuffer): Promise<void> {\n\t\treturn this._fileService\n\t\t\t.writeFile(URI.revive(uri), content)\n\t\t\t.then(() => undefined)\n\t\t\t.catch(MainThreadFileSystem._handleError);\n\t}\n\n\t$rename(\n\t\tsource: UriComponents,\n\t\ttarget: UriComponents,\n\t\topts: IFileOverwriteOptions,\n\t): Promise<void> {\n\t\treturn this._fileService\n\t\t\t.move(URI.revive(source), URI.revive(target), opts.overwrite)\n\t\t\t.then(() => undefined)\n\t\t\t.catch(MainThreadFileSystem._handleError);\n\t}\n\n\t$copy(\n\t\tsource: UriComponents,\n\t\ttarget: UriComponents,\n\t\topts: IFileOverwriteOptions,\n\t): Promise<void> {\n\t\treturn this._fileService\n\t\t\t.copy(URI.revive(source), URI.revive(target), opts.overwrite)\n\t\t\t.then(() => undefined)\n\t\t\t.catch(MainThreadFileSystem._handleError);\n\t}\n\n\t$mkdir(uri: UriComponents): Promise<void> {\n\t\treturn this._fileService\n\t\t\t.createFolder(URI.revive(uri))\n\t\t\t.then(() => undefined)\n\t\t\t.catch(MainThreadFileSystem._handleError);\n\t}\n\n\t$delete(uri: UriComponents, opts: IFileDeleteOptions): Promise<void> {\n\t\treturn this._fileService\n\t\t\t.del(URI.revive(uri), opts)\n\t\t\t.catch(MainThreadFileSystem._handleError);\n\t}\n\n\tprivate static _handleError(err: any): never {\n\t\tif (err instanceof FileOperationError) {\n\t\t\tswitch (err.fileOperationResult) {\n\t\t\t\tcase FileOperationResult.FILE_NOT_FOUND:\n\t\t\t\t\terr.name = FileSystemProviderErrorCode.FileNotFound;\n\t\t\t\t\tbreak;\n\t\t\t\tcase FileOperationResult.FILE_IS_DIRECTORY:\n\t\t\t\t\terr.name = FileSystemProviderErrorCode.FileIsADirectory;\n\t\t\t\t\tbreak;\n\t\t\t\tcase FileOperationResult.FILE_PERMISSION_DENIED:\n\t\t\t\t\terr.name = FileSystemProviderErrorCode.NoPermissions;\n\t\t\t\t\tbreak;\n\t\t\t\tcase FileOperationResult.FILE_MOVE_CONFLICT:\n\t\t\t\t\terr.name = FileSystemProviderErrorCode.FileExists;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else if (err instanceof Error) {\n\t\t\tconst code = toFileSystemProviderErrorCode(err);\n\t\t\tif (code !== FileSystemProviderErrorCode.Unknown) {\n\t\t\t\terr.name = code;\n\t\t\t}\n\t\t}\n\n\t\tthrow err;\n\t}\n\n\t$ensureActivation(scheme: string): Promise<void> {\n\t\treturn this._fileService.activateProvider(scheme);\n\t}\n}\n\nclass RemoteFileSystemProvider\n\timplements\n\t\tIFileSystemProviderWithFileReadWriteCapability,\n\t\tIFileSystemProviderWithOpenReadWriteCloseCapability,\n\t\tIFileSystemProviderWithFileFolderCopyCapability\n{\n\tprivate readonly _onDidChange = new Emitter<readonly IFileChange[]>();\n\tprivate readonly _registration: IDisposable;\n\n\treadonly onDidChangeFile: Event<readonly IFileChange[]> =\n\t\tthis._onDidChange.event;\n\n\treadonly capabilities: FileSystemProviderCapabilities;\n\treadonly onDidChangeCapabilities: Event<void> = Event.None;\n\n\tconstructor(\n\t\tfileService: IFileService,\n\t\tscheme: string,\n\t\tcapabilities: FileSystemProviderCapabilities,\n\t\tpublic readonly readOnlyMessage: IMarkdownString | undefined,\n\t\tprivate readonly _handle: number,\n\t\tprivate readonly _proxy: ExtHostFileSystemShape,\n\t) {\n\t\tthis.capabilities = capabilities;\n\t\tthis._registration = fileService.registerProvider(scheme, this);\n\t}\n\n\tdispose(): void {\n\t\tthis._registration.dispose();\n\t\tthis._onDidChange.dispose();\n\t}\n\n\twatch(resource: URI, opts: IWatchOptions) {\n\t\tconst session = Math.random();\n\t\tthis._proxy.$watch(this._handle, session, resource, opts);\n\t\treturn toDisposable(() => {\n\t\t\tthis._proxy.$unwatch(this._handle, session);\n\t\t});\n\t}\n\n\t$onFileSystemChange(changes: IFileChangeDto[]): void {\n\t\tthis._onDidChange.fire(\n\t\t\tchanges.map(RemoteFileSystemProvider._createFileChange),\n\t\t);\n\t}\n\n\tprivate static _createFileChange(dto: IFileChangeDto): IFileChange {\n\t\treturn { resource: URI.revive(dto.resource), type: dto.type };\n\t}\n\n\t// --- forwarding calls\n\n\tstat(resource: URI): Promise<IStat> {\n\t\treturn this._proxy\n\t\t\t.$stat(this._handle, resource)\n\t\t\t.then(undefined, (err) => {\n\t\t\t\tthrow err;\n\t\t\t});\n\t}\n\n\treadFile(resource: URI): Promise<Uint8Array> {\n\t\treturn this._proxy\n\t\t\t.$readFile(this._handle, resource)\n\t\t\t.then((buffer) => buffer.buffer);\n\t}\n\n\twriteFile(\n\t\tresource: URI,\n\t\tcontent: Uint8Array,\n\t\topts: IFileWriteOptions,\n\t): Promise<void> {\n\t\treturn this._proxy.$writeFile(\n\t\t\tthis._handle,\n\t\t\tresource,\n\t\t\tVSBuffer.wrap(content),\n\t\t\topts,\n\t\t);\n\t}\n\n\tdelete(resource: URI, opts: IFileDeleteOptions): Promise<void> {\n\t\treturn this._proxy.$delete(this._handle, resource, opts);\n\t}\n\n\tmkdir(resource: URI): Promise<void> {\n\t\treturn this._proxy.$mkdir(this._handle, resource);\n\t}\n\n\treaddir(resource: URI): Promise<[string, FileType][]> {\n\t\treturn this._proxy.$readdir(this._handle, resource);\n\t}\n\n\trename(\n\t\tresource: URI,\n\t\ttarget: URI,\n\t\topts: IFileOverwriteOptions,\n\t): Promise<void> {\n\t\treturn this._proxy.$rename(this._handle, resource, target, opts);\n\t}\n\n\tcopy(\n\t\tresource: URI,\n\t\ttarget: URI,\n\t\topts: IFileOverwriteOptions,\n\t): Promise<void> {\n\t\treturn this._proxy.$copy(this._handle, resource, target, opts);\n\t}\n\n\topen(resource: URI, opts: IFileOpenOptions): Promise<number> {\n\t\treturn this._proxy.$open(this._handle, resource, opts);\n\t}\n\n\tclose(fd: number): Promise<void> {\n\t\treturn this._proxy.$close(this._handle, fd);\n\t}\n\n\tread(\n\t\tfd: number,\n\t\tpos: number,\n\t\tdata: Uint8Array,\n\t\toffset: number,\n\t\tlength: number,\n\t): Promise<number> {\n\t\treturn this._proxy\n\t\t\t.$read(this._handle, fd, pos, length)\n\t\t\t.then((readData) => {\n\t\t\t\tdata.set(readData.buffer, offset);\n\t\t\t\treturn readData.byteLength;\n\t\t\t});\n\t}\n\n\twrite(\n\t\tfd: number,\n\t\tpos: number,\n\t\tdata: Uint8Array,\n\t\toffset: number,\n\t\tlength: number,\n\t): Promise<number> {\n\t\treturn this._proxy.$write(\n\t\t\tthis._handle,\n\t\t\tfd,\n\t\t\tpos,\n\t\t\tVSBuffer.wrap(data).slice(offset, offset + length),\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
