{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadErrors.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\ttype SerializedError,\n\tonUnexpectedError,\n\ttransformErrorFromSerialization,\n} from \"../../../base/common/errors.js\";\nimport { extHostNamedCustomer } from \"../../services/extensions/common/extHostCustomers.js\";\nimport {\n\tMainContext,\n\ttype MainThreadErrorsShape,\n} from \"../common/extHost.protocol.js\";\n\n@extHostNamedCustomer(MainContext.MainThreadErrors)\nexport class MainThreadErrors implements MainThreadErrorsShape {\n\tdispose(): void {\n\t\t//\n\t}\n\n\t$onUnexpectedError(err: any | SerializedError): void {\n\t\tif (err && err.$isError) {\n\t\t\terr = transformErrorFromSerialization(err);\n\t\t}\n\t\tonUnexpectedError(err);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;AAKA;AAAA,EAEC;AAAA,EACA;AAAA,OACM;AACP,SAAS,4BAA4B;AACrC;AAAA,EACC;AAAA,OAEM;AAGA,IAAM,mBAAN,MAAwD;AAAA,EAC9D,UAAgB;AAAA,EAEhB;AAAA,EAEA,mBAAmB,KAAkC;AACpD,QAAI,OAAO,IAAI,UAAU;AACxB,YAAM,gCAAgC,GAAG;AAAA,IAC1C;AACA,sBAAkB,GAAG;AAAA,EACtB;AACD;AAX+D;AAAlD,mBAAN;AAAA,EADN,qBAAqB,YAAY,gBAAgB;AAAA,GACrC;",
  "names": []
}
