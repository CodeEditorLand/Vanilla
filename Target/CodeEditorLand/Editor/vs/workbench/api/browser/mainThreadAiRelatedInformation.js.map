{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadAiRelatedInformation.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from \"../../../base/common/cancellation.js\";\nimport { Disposable, DisposableMap } from \"../../../base/common/lifecycle.js\";\nimport {\n\ttype IAiRelatedInformationProvider,\n\tIAiRelatedInformationService,\n\ttype RelatedInformationResult,\n} from \"../../services/aiRelatedInformation/common/aiRelatedInformation.js\";\nimport {\n\ttype IExtHostContext,\n\textHostNamedCustomer,\n} from \"../../services/extensions/common/extHostCustomers.js\";\nimport {\n\ttype ExtHostAiRelatedInformationShape,\n\tExtHostContext,\n\tMainContext,\n\ttype MainThreadAiRelatedInformationShape,\n} from \"../common/extHost.protocol.js\";\nimport type { RelatedInformationType } from \"../common/extHostTypes.js\";\n\n@extHostNamedCustomer(MainContext.MainThreadAiRelatedInformation)\nexport class MainThreadAiRelatedInformation\n\textends Disposable\n\timplements MainThreadAiRelatedInformationShape\n{\n\tprivate readonly _proxy: ExtHostAiRelatedInformationShape;\n\tprivate readonly _registrations = this._register(\n\t\tnew DisposableMap<number>(),\n\t);\n\n\tconstructor(\n\t\tcontext: IExtHostContext,\n\t\t@IAiRelatedInformationService private readonly _aiRelatedInformationService: IAiRelatedInformationService,\n\t) {\n\t\tsuper();\n\t\tthis._proxy = context.getProxy(ExtHostContext.ExtHostAiRelatedInformation);\n\t}\n\n\t$getAiRelatedInformation(\n\t\tquery: string,\n\t\ttypes: RelatedInformationType[],\n\t): Promise<RelatedInformationResult[]> {\n\t\t// TODO: use a real cancellation token\n\t\treturn this._aiRelatedInformationService.getRelatedInformation(\n\t\t\tquery,\n\t\t\ttypes,\n\t\t\tCancellationToken.None,\n\t\t);\n\t}\n\n\t$registerAiRelatedInformationProvider(\n\t\thandle: number,\n\t\ttype: RelatedInformationType,\n\t): void {\n\t\tconst provider: IAiRelatedInformationProvider = {\n\t\t\tprovideAiRelatedInformation: (query, token) => {\n\t\t\t\treturn this._proxy.$provideAiRelatedInformation(\n\t\t\t\t\thandle,\n\t\t\t\t\tquery,\n\t\t\t\t\ttoken,\n\t\t\t\t);\n\t\t\t},\n\t\t};\n\t\tthis._registrations.set(\n\t\t\thandle,\n\t\t\tthis._aiRelatedInformationService.registerAiRelatedInformationProvider(\n\t\t\t\ttype,\n\t\t\t\tprovider,\n\t\t\t),\n\t\t);\n\t}\n\n\t$unregisterAiRelatedInformationProvider(handle: number): void {\n\t\tthis._registrations.deleteAndDispose(handle);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,yBAAyB;AAClC,SAAS,YAAY,qBAAqB;AAC1C;AAAA,EAEC;AAAA,OAEM;AACP;AAAA,EAEC;AAAA,OACM;AACP;AAAA,EAEC;AAAA,EACA;AAAA,OAEM;AAIA,IAAM,iCAAN,cACE,WAET;AAAA,EAMC,YACC,SAC+C,8BAC9C;AACD,UAAM;AAFyC;AAG/C,SAAK,SAAS,QAAQ,SAAS,eAAe,2BAA2B;AAAA,EAC1E;AAAA,EAXiB;AAAA,EACA,iBAAiB,KAAK;AAAA,IACtC,IAAI,cAAsB;AAAA,EAC3B;AAAA,EAUA,yBACC,OACA,OACsC;AAEtC,WAAO,KAAK,6BAA6B;AAAA,MACxC;AAAA,MACA;AAAA,MACA,kBAAkB;AAAA,IACnB;AAAA,EACD;AAAA,EAEA,sCACC,QACA,MACO;AACP,UAAM,WAA0C;AAAA,MAC/C,6BAA6B,wBAAC,OAAO,UAAU;AAC9C,eAAO,KAAK,OAAO;AAAA,UAClB;AAAA,UACA;AAAA,UACA;AAAA,QACD;AAAA,MACD,GAN6B;AAAA,IAO9B;AACA,SAAK,eAAe;AAAA,MACnB;AAAA,MACA,KAAK,6BAA6B;AAAA,QACjC;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EAEA,wCAAwC,QAAsB;AAC7D,SAAK,eAAe,iBAAiB,MAAM;AAAA,EAC5C;AACD;AAnDA;AAHa,iCAAN;AAAA,EADN,qBAAqB,YAAY,8BAA8B;AAAA,EAY7D;AAAA,GAXU;",
  "names": []
}
