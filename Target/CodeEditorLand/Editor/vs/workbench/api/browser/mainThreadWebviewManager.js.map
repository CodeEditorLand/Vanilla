{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadWebviewManager.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { MainThreadCustomEditors } from './mainThreadCustomEditors.js';\nimport { MainThreadWebviewPanels } from './mainThreadWebviewPanels.js';\nimport { MainThreadWebviews } from './mainThreadWebviews.js';\nimport { MainThreadWebviewsViews } from './mainThreadWebviewViews.js';\nimport * as extHostProtocol from '../common/extHost.protocol.js';\nimport { extHostCustomer, IExtHostContext } from '../../services/extensions/common/extHostCustomers.js';\n\n@extHostCustomer\nexport class MainThreadWebviewManager extends Disposable {\n\tconstructor(\n\t\tcontext: IExtHostContext,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tconst webviews = this._register(instantiationService.createInstance(MainThreadWebviews, context));\n\t\tcontext.set(extHostProtocol.MainContext.MainThreadWebviews, webviews);\n\n\t\tconst webviewPanels = this._register(instantiationService.createInstance(MainThreadWebviewPanels, context, webviews));\n\t\tcontext.set(extHostProtocol.MainContext.MainThreadWebviewPanels, webviewPanels);\n\n\t\tconst customEditors = this._register(instantiationService.createInstance(MainThreadCustomEditors, context, webviews, webviewPanels));\n\t\tcontext.set(extHostProtocol.MainContext.MainThreadCustomEditors, customEditors);\n\n\t\tconst webviewViews = this._register(instantiationService.createInstance(MainThreadWebviewsViews, context, webviews));\n\t\tcontext.set(extHostProtocol.MainContext.MainThreadWebviewViews, webviewViews);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,kBAAkB;AAC3B,SAAS,6BAA6B;AACtC,SAAS,+BAA+B;AACxC,SAAS,+BAA+B;AACxC,SAAS,0BAA0B;AACnC,SAAS,+BAA+B;AACxC,YAAY,qBAAqB;AACjC,SAAS,iBAAiB,uBAAuB;AAG1C,IAAM,2BAAN,cAAuC,WAAW;AAAA,EACxD,YACC,SACuB,sBACtB;AACD,UAAM;AAEN,UAAM,WAAW,KAAK,UAAU,qBAAqB,eAAe,oBAAoB,OAAO,CAAC;AAChG,YAAQ,IAAI,gBAAgB,YAAY,oBAAoB,QAAQ;AAEpE,UAAM,gBAAgB,KAAK,UAAU,qBAAqB,eAAe,yBAAyB,SAAS,QAAQ,CAAC;AACpH,YAAQ,IAAI,gBAAgB,YAAY,yBAAyB,aAAa;AAE9E,UAAM,gBAAgB,KAAK,UAAU,qBAAqB,eAAe,yBAAyB,SAAS,UAAU,aAAa,CAAC;AACnI,YAAQ,IAAI,gBAAgB,YAAY,yBAAyB,aAAa;AAE9E,UAAM,eAAe,KAAK,UAAU,qBAAqB,eAAe,yBAAyB,SAAS,QAAQ,CAAC;AACnH,YAAQ,IAAI,gBAAgB,YAAY,wBAAwB,YAAY;AAAA,EAC7E;AACD;AAnByD;AAA5C,2BAAN;AAAA,EADN;AAAA,EAIE;AAAA,GAHU;",
  "names": []
}
