{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadLabelService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, DisposableMap } from '../../../base/common/lifecycle.js';\nimport { ILabelService, ResourceLabelFormatter } from '../../../platform/label/common/label.js';\nimport { MainContext, MainThreadLabelServiceShape } from '../common/extHost.protocol.js';\nimport { extHostNamedCustomer, IExtHostContext } from '../../services/extensions/common/extHostCustomers.js';\n\n@extHostNamedCustomer(MainContext.MainThreadLabelService)\nexport class MainThreadLabelService extends Disposable implements MainThreadLabelServiceShape {\n\n\tprivate readonly _resourceLabelFormatters = this._register(new DisposableMap<number>());\n\n\tconstructor(\n\t\t_: IExtHostContext,\n\t\t@ILabelService private readonly _labelService: ILabelService\n\t) {\n\t\tsuper();\n\t}\n\n\t$registerResourceLabelFormatter(handle: number, formatter: ResourceLabelFormatter): void {\n\t\t// Dynamicily registered formatters should have priority over those contributed via package.json\n\t\tformatter.priority = true;\n\t\tconst disposable = this._labelService.registerCachedFormatter(formatter);\n\t\tthis._resourceLabelFormatters.set(handle, disposable);\n\t}\n\n\t$unregisterResourceLabelFormatter(handle: number): void {\n\t\tthis._resourceLabelFormatters.deleteAndDispose(handle);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,YAAY,qBAAqB;AAC1C,SAAS,eAAe,8BAA8B;AACtD,SAAS,aAAa,mCAAmC;AACzD,SAAS,sBAAsB,uBAAuB;AAG/C,IAAM,yBAAN,cAAqC,WAAkD;AAAA,EAI7F,YACC,GACgC,eAC/B;AACD,UAAM;AAF0B;AAAA,EAGjC;AAAA,EAPiB,2BAA2B,KAAK,UAAU,IAAI,cAAsB,CAAC;AAAA,EAStF,gCAAgC,QAAgB,WAAyC;AAExF,cAAU,WAAW;AACrB,UAAM,aAAa,KAAK,cAAc,wBAAwB,SAAS;AACvE,SAAK,yBAAyB,IAAI,QAAQ,UAAU;AAAA,EACrD;AAAA,EAEA,kCAAkC,QAAsB;AACvD,SAAK,yBAAyB,iBAAiB,MAAM;AAAA,EACtD;AACD;AArB8F;AAAjF,yBAAN;AAAA,EADN,qBAAqB,YAAY,sBAAsB;AAAA,EAOrD;AAAA,GANU;",
  "names": []
}
