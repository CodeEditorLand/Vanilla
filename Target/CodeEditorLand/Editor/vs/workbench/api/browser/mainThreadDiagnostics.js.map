{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadDiagnostics.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IDisposable } from \"../../../base/common/lifecycle.js\";\nimport { URI, type UriComponents } from \"../../../base/common/uri.js\";\nimport {\n\ttype IMarkerData,\n\tIMarkerService,\n} from \"../../../platform/markers/common/markers.js\";\nimport { IUriIdentityService } from \"../../../platform/uriIdentity/common/uriIdentity.js\";\nimport {\n\ttype IExtHostContext,\n\textHostNamedCustomer,\n} from \"../../services/extensions/common/extHostCustomers.js\";\nimport {\n\tExtHostContext,\n\ttype ExtHostDiagnosticsShape,\n\tMainContext,\n\ttype MainThreadDiagnosticsShape,\n} from \"../common/extHost.protocol.js\";\n\n@extHostNamedCustomer(MainContext.MainThreadDiagnostics)\nexport class MainThreadDiagnostics implements MainThreadDiagnosticsShape {\n\tprivate readonly _activeOwners = new Set<string>();\n\n\tprivate readonly _proxy: ExtHostDiagnosticsShape;\n\tprivate readonly _markerListener: IDisposable;\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@IMarkerService private readonly _markerService: IMarkerService,\n\t\t@IUriIdentityService\n\t\tprivate readonly _uriIdentService: IUriIdentityService,\n\t) {\n\t\tthis._proxy = extHostContext.getProxy(\n\t\t\tExtHostContext.ExtHostDiagnostics,\n\t\t);\n\n\t\tthis._markerListener = this._markerService.onMarkerChanged(\n\t\t\tthis._forwardMarkers,\n\t\t\tthis,\n\t\t);\n\t}\n\n\tdispose(): void {\n\t\tthis._markerListener.dispose();\n\t\tthis._activeOwners.forEach((owner) =>\n\t\t\tthis._markerService.changeAll(owner, []),\n\t\t);\n\t\tthis._activeOwners.clear();\n\t}\n\n\tprivate _forwardMarkers(resources: readonly URI[]): void {\n\t\tconst data: [UriComponents, IMarkerData[]][] = [];\n\t\tfor (const resource of resources) {\n\t\t\tconst allMarkerData = this._markerService.read({ resource });\n\t\t\tif (allMarkerData.length === 0) {\n\t\t\t\tdata.push([resource, []]);\n\t\t\t} else {\n\t\t\t\tconst forgeinMarkerData = allMarkerData.filter(\n\t\t\t\t\t(marker) => !this._activeOwners.has(marker.owner),\n\t\t\t\t);\n\t\t\t\tif (forgeinMarkerData.length > 0) {\n\t\t\t\t\tdata.push([resource, forgeinMarkerData]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (data.length > 0) {\n\t\t\tthis._proxy.$acceptMarkersChange(data);\n\t\t}\n\t}\n\n\t$changeMany(\n\t\towner: string,\n\t\tentries: [UriComponents, IMarkerData[]][],\n\t): void {\n\t\tfor (const entry of entries) {\n\t\t\tconst [uri, markers] = entry;\n\t\t\tif (markers) {\n\t\t\t\tfor (const marker of markers) {\n\t\t\t\t\tif (marker.relatedInformation) {\n\t\t\t\t\t\tfor (const relatedInformation of marker.relatedInformation) {\n\t\t\t\t\t\t\trelatedInformation.resource = URI.revive(\n\t\t\t\t\t\t\t\trelatedInformation.resource,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (marker.code && typeof marker.code !== \"string\") {\n\t\t\t\t\t\tmarker.code.target = URI.revive(marker.code.target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._markerService.changeOne(\n\t\t\t\towner,\n\t\t\t\tthis._uriIdentService.asCanonicalUri(URI.revive(uri)),\n\t\t\t\tmarkers,\n\t\t\t);\n\t\t}\n\t\tthis._activeOwners.add(owner);\n\t}\n\n\t$clear(owner: string): void {\n\t\tthis._markerService.changeAll(owner, []);\n\t\tthis._activeOwners.delete(owner);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAMA,SAAS,WAA+B;AACxC;AAAA,EAEC;AAAA,OACM;AACP,SAAS,2BAA2B;AACpC;AAAA,EAEC;AAAA,OACM;AACP;AAAA,EACC;AAAA,EAEA;AAAA,OAEM;AAGA,IAAM,wBAAN,MAAkE;AAAA,EAMxE,YACC,gBACiC,gBAEhB,kBAChB;AAHgC;AAEhB;AAEjB,SAAK,SAAS,eAAe;AAAA,MAC5B,eAAe;AAAA,IAChB;AAEA,SAAK,kBAAkB,KAAK,eAAe;AAAA,MAC1C,KAAK;AAAA,MACL;AAAA,IACD;AAAA,EACD;AAAA,EAnBiB,gBAAgB,oBAAI,IAAY;AAAA,EAEhC;AAAA,EACA;AAAA,EAkBjB,UAAgB;AACf,SAAK,gBAAgB,QAAQ;AAC7B,SAAK,cAAc;AAAA,MAAQ,CAAC,UAC3B,KAAK,eAAe,UAAU,OAAO,CAAC,CAAC;AAAA,IACxC;AACA,SAAK,cAAc,MAAM;AAAA,EAC1B;AAAA,EAEQ,gBAAgB,WAAiC;AACxD,UAAM,OAAyC,CAAC;AAChD,eAAW,YAAY,WAAW;AACjC,YAAM,gBAAgB,KAAK,eAAe,KAAK,EAAE,SAAS,CAAC;AAC3D,UAAI,cAAc,WAAW,GAAG;AAC/B,aAAK,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;AAAA,MACzB,OAAO;AACN,cAAM,oBAAoB,cAAc;AAAA,UACvC,CAAC,WAAW,CAAC,KAAK,cAAc,IAAI,OAAO,KAAK;AAAA,QACjD;AACA,YAAI,kBAAkB,SAAS,GAAG;AACjC,eAAK,KAAK,CAAC,UAAU,iBAAiB,CAAC;AAAA,QACxC;AAAA,MACD;AAAA,IACD;AACA,QAAI,KAAK,SAAS,GAAG;AACpB,WAAK,OAAO,qBAAqB,IAAI;AAAA,IACtC;AAAA,EACD;AAAA,EAEA,YACC,OACA,SACO;AACP,eAAW,SAAS,SAAS;AAC5B,YAAM,CAAC,KAAK,OAAO,IAAI;AACvB,UAAI,SAAS;AACZ,mBAAW,UAAU,SAAS;AAC7B,cAAI,OAAO,oBAAoB;AAC9B,uBAAW,sBAAsB,OAAO,oBAAoB;AAC3D,iCAAmB,WAAW,IAAI;AAAA,gBACjC,mBAAmB;AAAA,cACpB;AAAA,YACD;AAAA,UACD;AACA,cAAI,OAAO,QAAQ,OAAO,OAAO,SAAS,UAAU;AACnD,mBAAO,KAAK,SAAS,IAAI,OAAO,OAAO,KAAK,MAAM;AAAA,UACnD;AAAA,QACD;AAAA,MACD;AACA,WAAK,eAAe;AAAA,QACnB;AAAA,QACA,KAAK,iBAAiB,eAAe,IAAI,OAAO,GAAG,CAAC;AAAA,QACpD;AAAA,MACD;AAAA,IACD;AACA,SAAK,cAAc,IAAI,KAAK;AAAA,EAC7B;AAAA,EAEA,OAAO,OAAqB;AAC3B,SAAK,eAAe,UAAU,OAAO,CAAC,CAAC;AACvC,SAAK,cAAc,OAAO,KAAK;AAAA,EAChC;AACD;AAnFyE;AAA5D,wBAAN;AAAA,EADN,qBAAqB,YAAY,qBAAqB;AAAA,EASpD;AAAA,EACA;AAAA,GATU;",
  "names": []
}
