{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadDocumentContentProviders.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationTokenSource } from \"../../../base/common/cancellation.js\";\nimport { onUnexpectedError } from \"../../../base/common/errors.js\";\nimport { DisposableMap, dispose } from \"../../../base/common/lifecycle.js\";\nimport { URI, type UriComponents } from \"../../../base/common/uri.js\";\nimport { EditOperation } from \"../../../editor/common/core/editOperation.js\";\nimport { Range } from \"../../../editor/common/core/range.js\";\nimport { ILanguageService } from \"../../../editor/common/languages/language.js\";\nimport type { ITextModel } from \"../../../editor/common/model.js\";\nimport { IEditorWorkerService } from \"../../../editor/common/services/editorWorker.js\";\nimport { IModelService } from \"../../../editor/common/services/model.js\";\nimport { ITextModelService } from \"../../../editor/common/services/resolverService.js\";\nimport {\n\ttype IExtHostContext,\n\textHostNamedCustomer,\n} from \"../../services/extensions/common/extHostCustomers.js\";\nimport {\n\tExtHostContext,\n\ttype ExtHostDocumentContentProvidersShape,\n\tMainContext,\n\ttype MainThreadDocumentContentProvidersShape,\n} from \"../common/extHost.protocol.js\";\n\n@extHostNamedCustomer(MainContext.MainThreadDocumentContentProviders)\nexport class MainThreadDocumentContentProviders\n\timplements MainThreadDocumentContentProvidersShape\n{\n\tprivate readonly _resourceContentProvider = new DisposableMap<number>();\n\tprivate readonly _pendingUpdate = new Map<\n\t\tstring,\n\t\tCancellationTokenSource\n\t>();\n\tprivate readonly _proxy: ExtHostDocumentContentProvidersShape;\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@ITextModelService\n\t\tprivate readonly _textModelResolverService: ITextModelService,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t\t@IModelService private readonly _modelService: IModelService,\n\t\t@IEditorWorkerService\n\t\tprivate readonly _editorWorkerService: IEditorWorkerService,\n\t) {\n\t\tthis._proxy = extHostContext.getProxy(\n\t\t\tExtHostContext.ExtHostDocumentContentProviders,\n\t\t);\n\t}\n\n\tdispose(): void {\n\t\tthis._resourceContentProvider.dispose();\n\t\tdispose(this._pendingUpdate.values());\n\t}\n\n\t$registerTextContentProvider(handle: number, scheme: string): void {\n\t\tconst registration =\n\t\t\tthis._textModelResolverService.registerTextModelContentProvider(\n\t\t\t\tscheme,\n\t\t\t\t{\n\t\t\t\t\tprovideTextContent: (\n\t\t\t\t\t\turi: URI,\n\t\t\t\t\t): Promise<ITextModel | null> => {\n\t\t\t\t\t\treturn this._proxy\n\t\t\t\t\t\t\t.$provideTextDocumentContent(handle, uri)\n\t\t\t\t\t\t\t.then((value) => {\n\t\t\t\t\t\t\t\tif (typeof value === \"string\") {\n\t\t\t\t\t\t\t\t\tconst firstLineText = value.substr(\n\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\t1 + value.search(/\\r?\\n/),\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tconst languageSelection =\n\t\t\t\t\t\t\t\t\t\tthis._languageService.createByFilepathOrFirstLine(\n\t\t\t\t\t\t\t\t\t\t\turi,\n\t\t\t\t\t\t\t\t\t\t\tfirstLineText,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\treturn this._modelService.createModel(\n\t\t\t\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\t\t\t\tlanguageSelection,\n\t\t\t\t\t\t\t\t\t\turi,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t);\n\t\tthis._resourceContentProvider.set(handle, registration);\n\t}\n\n\t$unregisterTextContentProvider(handle: number): void {\n\t\tthis._resourceContentProvider.deleteAndDispose(handle);\n\t}\n\n\tasync $onVirtualDocumentChange(\n\t\turi: UriComponents,\n\t\tvalue: string,\n\t): Promise<void> {\n\t\tconst model = this._modelService.getModel(URI.revive(uri));\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\n\t\t// cancel and dispose an existing update\n\t\tconst pending = this._pendingUpdate.get(model.id);\n\t\tpending?.cancel();\n\n\t\t// create and keep update token\n\t\tconst myToken = new CancellationTokenSource();\n\t\tthis._pendingUpdate.set(model.id, myToken);\n\n\t\ttry {\n\t\t\tconst edits =\n\t\t\t\tawait this._editorWorkerService.computeMoreMinimalEdits(\n\t\t\t\t\tmodel.uri,\n\t\t\t\t\t[{ text: value, range: model.getFullModelRange() }],\n\t\t\t\t);\n\n\t\t\t// remove token\n\t\t\tthis._pendingUpdate.delete(model.id);\n\n\t\t\tif (myToken.token.isCancellationRequested) {\n\t\t\t\t// ignore this\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (edits && edits.length > 0) {\n\t\t\t\t// use the evil-edit as these models show in readonly-editor only\n\t\t\t\tmodel.applyEdits(\n\t\t\t\t\tedits.map((edit) =>\n\t\t\t\t\t\tEditOperation.replace(\n\t\t\t\t\t\t\tRange.lift(edit.range),\n\t\t\t\t\t\t\tedit.text,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tonUnexpectedError(error);\n\t\t}\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,+BAA+B;AACxC,SAAS,yBAAyB;AAClC,SAAS,eAAe,eAAe;AACvC,SAAS,WAA+B;AACxC,SAAS,qBAAqB;AAC9B,SAAS,aAAa;AACtB,SAAS,wBAAwB;AAEjC,SAAS,4BAA4B;AACrC,SAAS,qBAAqB;AAC9B,SAAS,yBAAyB;AAClC;AAAA,EAEC;AAAA,OACM;AACP;AAAA,EACC;AAAA,EAEA;AAAA,OAEM;AAGA,IAAM,qCAAN,MAEP;AAAA,EAQC,YACC,gBAEiB,2BACkB,kBACH,eAEf,sBAChB;AALgB;AACkB;AACH;AAEf;AAEjB,SAAK,SAAS,eAAe;AAAA,MAC5B,eAAe;AAAA,IAChB;AAAA,EACD;AAAA,EAnBiB,2BAA2B,IAAI,cAAsB;AAAA,EACrD,iBAAiB,oBAAI,IAGpC;AAAA,EACe;AAAA,EAgBjB,UAAgB;AACf,SAAK,yBAAyB,QAAQ;AACtC,YAAQ,KAAK,eAAe,OAAO,CAAC;AAAA,EACrC;AAAA,EAEA,6BAA6B,QAAgB,QAAsB;AAClE,UAAM,eACL,KAAK,0BAA0B;AAAA,MAC9B;AAAA,MACA;AAAA,QACC,oBAAoB,wBACnB,QACgC;AAChC,iBAAO,KAAK,OACV,4BAA4B,QAAQ,GAAG,EACvC,KAAK,CAAC,UAAU;AAChB,gBAAI,OAAO,UAAU,UAAU;AAC9B,oBAAM,gBAAgB,MAAM;AAAA,gBAC3B;AAAA,gBACA,IAAI,MAAM,OAAO,OAAO;AAAA,cACzB;AACA,oBAAM,oBACL,KAAK,iBAAiB;AAAA,gBACrB;AAAA,gBACA;AAAA,cACD;AACD,qBAAO,KAAK,cAAc;AAAA,gBACzB;AAAA,gBACA;AAAA,gBACA;AAAA,cACD;AAAA,YACD;AACA,mBAAO;AAAA,UACR,CAAC;AAAA,QACH,GAxBoB;AAAA,MAyBrB;AAAA,IACD;AACD,SAAK,yBAAyB,IAAI,QAAQ,YAAY;AAAA,EACvD;AAAA,EAEA,+BAA+B,QAAsB;AACpD,SAAK,yBAAyB,iBAAiB,MAAM;AAAA,EACtD;AAAA,EAEA,MAAM,yBACL,KACA,OACgB;AAChB,UAAM,QAAQ,KAAK,cAAc,SAAS,IAAI,OAAO,GAAG,CAAC;AACzD,QAAI,CAAC,OAAO;AACX;AAAA,IACD;AAGA,UAAM,UAAU,KAAK,eAAe,IAAI,MAAM,EAAE;AAChD,aAAS,OAAO;AAGhB,UAAM,UAAU,IAAI,wBAAwB;AAC5C,SAAK,eAAe,IAAI,MAAM,IAAI,OAAO;AAEzC,QAAI;AACH,YAAM,QACL,MAAM,KAAK,qBAAqB;AAAA,QAC/B,MAAM;AAAA,QACN,CAAC,EAAE,MAAM,OAAO,OAAO,MAAM,kBAAkB,EAAE,CAAC;AAAA,MACnD;AAGD,WAAK,eAAe,OAAO,MAAM,EAAE;AAEnC,UAAI,QAAQ,MAAM,yBAAyB;AAE1C;AAAA,MACD;AACA,UAAI,SAAS,MAAM,SAAS,GAAG;AAE9B,cAAM;AAAA,UACL,MAAM;AAAA,YAAI,CAAC,SACV,cAAc;AAAA,cACb,MAAM,KAAK,KAAK,KAAK;AAAA,cACrB,KAAK;AAAA,YACN;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,IACD,SAAS,OAAO;AACf,wBAAkB,KAAK;AAAA,IACxB;AAAA,EACD;AACD;AAhHA;AAFa,qCAAN;AAAA,EADN,qBAAqB,YAAY,kCAAkC;AAAA,EAajE;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,GAhBU;",
  "names": []
}
