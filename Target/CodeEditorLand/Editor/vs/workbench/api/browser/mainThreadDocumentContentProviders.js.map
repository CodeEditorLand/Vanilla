{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadDocumentContentProviders.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { dispose, DisposableMap } from '../../../base/common/lifecycle.js';\nimport { URI, UriComponents } from '../../../base/common/uri.js';\nimport { EditOperation } from '../../../editor/common/core/editOperation.js';\nimport { Range } from '../../../editor/common/core/range.js';\nimport { ITextModel } from '../../../editor/common/model.js';\nimport { IEditorWorkerService } from '../../../editor/common/services/editorWorker.js';\nimport { IModelService } from '../../../editor/common/services/model.js';\nimport { ILanguageService } from '../../../editor/common/languages/language.js';\nimport { ITextModelService } from '../../../editor/common/services/resolverService.js';\nimport { extHostNamedCustomer, IExtHostContext } from '../../services/extensions/common/extHostCustomers.js';\nimport { ExtHostContext, ExtHostDocumentContentProvidersShape, MainContext, MainThreadDocumentContentProvidersShape } from '../common/extHost.protocol.js';\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\n\n@extHostNamedCustomer(MainContext.MainThreadDocumentContentProviders)\nexport class MainThreadDocumentContentProviders implements MainThreadDocumentContentProvidersShape {\n\n\tprivate readonly _resourceContentProvider = new DisposableMap<number>();\n\tprivate readonly _pendingUpdate = new Map<string, CancellationTokenSource>();\n\tprivate readonly _proxy: ExtHostDocumentContentProvidersShape;\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@ITextModelService private readonly _textModelResolverService: ITextModelService,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t\t@IModelService private readonly _modelService: IModelService,\n\t\t@IEditorWorkerService private readonly _editorWorkerService: IEditorWorkerService\n\t) {\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostDocumentContentProviders);\n\t}\n\n\tdispose(): void {\n\t\tthis._resourceContentProvider.dispose();\n\t\tdispose(this._pendingUpdate.values());\n\t}\n\n\t$registerTextContentProvider(handle: number, scheme: string): void {\n\t\tconst registration = this._textModelResolverService.registerTextModelContentProvider(scheme, {\n\t\t\tprovideTextContent: (uri: URI): Promise<ITextModel | null> => {\n\t\t\t\treturn this._proxy.$provideTextDocumentContent(handle, uri).then(value => {\n\t\t\t\t\tif (typeof value === 'string') {\n\t\t\t\t\t\tconst firstLineText = value.substr(0, 1 + value.search(/\\r?\\n/));\n\t\t\t\t\t\tconst languageSelection = this._languageService.createByFilepathOrFirstLine(uri, firstLineText);\n\t\t\t\t\t\treturn this._modelService.createModel(value, languageSelection, uri);\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tthis._resourceContentProvider.set(handle, registration);\n\t}\n\n\t$unregisterTextContentProvider(handle: number): void {\n\t\tthis._resourceContentProvider.deleteAndDispose(handle);\n\t}\n\n\tasync $onVirtualDocumentChange(uri: UriComponents, value: string): Promise<void> {\n\t\tconst model = this._modelService.getModel(URI.revive(uri));\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\n\t\t// cancel and dispose an existing update\n\t\tconst pending = this._pendingUpdate.get(model.id);\n\t\tpending?.cancel();\n\n\t\t// create and keep update token\n\t\tconst myToken = new CancellationTokenSource();\n\t\tthis._pendingUpdate.set(model.id, myToken);\n\n\t\ttry {\n\t\t\tconst edits = await this._editorWorkerService.computeMoreMinimalEdits(model.uri, [{ text: value, range: model.getFullModelRange() }]);\n\n\t\t\t// remove token\n\t\t\tthis._pendingUpdate.delete(model.id);\n\n\t\t\tif (myToken.token.isCancellationRequested) {\n\t\t\t\t// ignore this\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (edits && edits.length > 0) {\n\t\t\t\t// use the evil-edit as these models show in readonly-editor only\n\t\t\t\tmodel.applyEdits(edits.map(edit => EditOperation.replace(Range.lift(edit.range), edit.text)));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tonUnexpectedError(error);\n\t\t}\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,yBAAyB;AAClC,SAAS,SAAS,qBAAqB;AACvC,SAAS,KAAK,qBAAqB;AACnC,SAAS,qBAAqB;AAC9B,SAAS,aAAa;AACtB,SAAS,kBAAkB;AAC3B,SAAS,4BAA4B;AACrC,SAAS,qBAAqB;AAC9B,SAAS,wBAAwB;AACjC,SAAS,yBAAyB;AAClC,SAAS,sBAAsB,uBAAuB;AACtD,SAAS,gBAAgB,sCAAsC,aAAa,+CAA+C;AAC3H,SAAS,+BAA+B;AAGjC,IAAM,qCAAN,MAA4F;AAAA,EAMlG,YACC,gBACoC,2BACD,kBACH,eACO,sBACtC;AAJmC;AACD;AACH;AACO;AAEvC,SAAK,SAAS,eAAe,SAAS,eAAe,+BAA+B;AAAA,EACrF;AAAA,EAZiB,2BAA2B,IAAI,cAAsB;AAAA,EACrD,iBAAiB,oBAAI,IAAqC;AAAA,EAC1D;AAAA,EAYjB,UAAgB;AACf,SAAK,yBAAyB,QAAQ;AACtC,YAAQ,KAAK,eAAe,OAAO,CAAC;AAAA,EACrC;AAAA,EAEA,6BAA6B,QAAgB,QAAsB;AAClE,UAAM,eAAe,KAAK,0BAA0B,iCAAiC,QAAQ;AAAA,MAC5F,oBAAoB,wBAAC,QAAyC;AAC7D,eAAO,KAAK,OAAO,4BAA4B,QAAQ,GAAG,EAAE,KAAK,WAAS;AACzE,cAAI,OAAO,UAAU,UAAU;AAC9B,kBAAM,gBAAgB,MAAM,OAAO,GAAG,IAAI,MAAM,OAAO,OAAO,CAAC;AAC/D,kBAAM,oBAAoB,KAAK,iBAAiB,4BAA4B,KAAK,aAAa;AAC9F,mBAAO,KAAK,cAAc,YAAY,OAAO,mBAAmB,GAAG;AAAA,UACpE;AACA,iBAAO;AAAA,QACR,CAAC;AAAA,MACF,GAToB;AAAA,IAUrB,CAAC;AACD,SAAK,yBAAyB,IAAI,QAAQ,YAAY;AAAA,EACvD;AAAA,EAEA,+BAA+B,QAAsB;AACpD,SAAK,yBAAyB,iBAAiB,MAAM;AAAA,EACtD;AAAA,EAEA,MAAM,yBAAyB,KAAoB,OAA8B;AAChF,UAAM,QAAQ,KAAK,cAAc,SAAS,IAAI,OAAO,GAAG,CAAC;AACzD,QAAI,CAAC,OAAO;AACX;AAAA,IACD;AAGA,UAAM,UAAU,KAAK,eAAe,IAAI,MAAM,EAAE;AAChD,aAAS,OAAO;AAGhB,UAAM,UAAU,IAAI,wBAAwB;AAC5C,SAAK,eAAe,IAAI,MAAM,IAAI,OAAO;AAEzC,QAAI;AACH,YAAM,QAAQ,MAAM,KAAK,qBAAqB,wBAAwB,MAAM,KAAK,CAAC,EAAE,MAAM,OAAO,OAAO,MAAM,kBAAkB,EAAE,CAAC,CAAC;AAGpI,WAAK,eAAe,OAAO,MAAM,EAAE;AAEnC,UAAI,QAAQ,MAAM,yBAAyB;AAE1C;AAAA,MACD;AACA,UAAI,SAAS,MAAM,SAAS,GAAG;AAE9B,cAAM,WAAW,MAAM,IAAI,UAAQ,cAAc,QAAQ,MAAM,KAAK,KAAK,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC;AAAA,MAC7F;AAAA,IACD,SAAS,OAAO;AACf,wBAAkB,KAAK;AAAA,IACxB;AAAA,EACD;AACD;AAzEmG;AAAtF,qCAAN;AAAA,EADN,qBAAqB,YAAY,kCAAkC;AAAA,EASjE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAXU;",
  "names": []
}
