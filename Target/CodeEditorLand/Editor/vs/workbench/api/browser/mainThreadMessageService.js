var h=Object.defineProperty;var b=Object.getOwnPropertyDescriptor;var p=(l,i,t,n)=>{for(var e=n>1?void 0:n?b(i,t):i,s=l.length-1,r;s>=0;s--)(r=l[s])&&(e=(n?r(i,t,e):r(e))||e);return n&&e&&h(i,t,e),e},m=(l,i)=>(t,n)=>i(t,n,l);import{toAction as v}from"../../../base/common/actions.js";import{Event as g}from"../../../base/common/event.js";import*as u from"../../../nls.js";import{ICommandService as y}from"../../../platform/commands/common/commands.js";import{IDialogService as S}from"../../../platform/dialogs/common/dialogs.js";import{INotificationService as x}from"../../../platform/notification/common/notification.js";import{extHostNamedCustomer as I}from"../../services/extensions/common/extHostCustomers.js";import{IExtensionService as C}from"../../services/extensions/common/extensions.js";import{MainContext as _}from"../common/extHost.protocol.js";let f=class{constructor(i,t,n,e,s){this._notificationService=t;this._commandService=n;this._dialogService=e;this.extensionsListener=s.onDidChangeExtensions(r=>{for(const o of r.removed)this._notificationService.removeFilter(o.identifier.value)})}extensionsListener;dispose(){this.extensionsListener.dispose()}$showMessage(i,t,n,e){return n.modal?this._showModalMessage(i,t,n.detail,e,n.useCustom):this._showMessage(i,t,e,n)}_showMessage(i,t,n,e){return new Promise(s=>{const r=n.map(a=>v({id:`_extension_message_handle_${a.handle}`,label:a.title,enabled:!0,run:()=>(s(a.handle),Promise.resolve())}));let o;e.source&&(o={label:e.source.label,id:e.source.identifier.value}),o||(o=u.localize("defaultSource","Extension"));const d=[];e.source&&d.push(v({id:e.source.identifier.value,label:u.localize("manageExtension","Manage Extension"),run:()=>this._commandService.executeCommand("_extensions.manage",e.source.identifier.value)}));const c=this._notificationService.notify({severity:i,message:t,actions:{primary:r,secondary:d},source:o});g.once(c.onDidClose)(()=>{s(void 0)})})}async _showModalMessage(i,t,n,e,s){const r=[];let o;for(const c of e){const a={label:c.title,run:()=>c.handle};c.isCloseAffordance?o=a:r.push(a)}o||(r.length>0?o={label:u.localize("cancel","Cancel"),run:()=>{}}:o={label:u.localize({key:"ok",comment:["&& denotes a mnemonic"]},"&&OK"),run:()=>{}});const{result:d}=await this._dialogService.prompt({type:i,message:t,detail:n,buttons:r,cancelButton:o,custom:s});return d}};f=p([I(_.MainThreadMessageService),m(1,x),m(2,y),m(3,S),m(4,C)],f);export{f as MainThreadMessageService};
