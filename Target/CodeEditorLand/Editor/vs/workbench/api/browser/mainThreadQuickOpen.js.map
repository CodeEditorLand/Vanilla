{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadQuickOpen.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IPickOptions, IInputOptions, IQuickInputService, IQuickInput, IQuickPick, IQuickPickItem } from '../../../platform/quickinput/common/quickInput.js';\nimport { ExtHostContext, MainThreadQuickOpenShape, ExtHostQuickOpenShape, TransferQuickPickItem, MainContext, TransferQuickInput, TransferQuickInputButton, IInputBoxOptions, TransferQuickPickItemOrSeparator } from '../common/extHost.protocol.js';\nimport { extHostNamedCustomer, IExtHostContext } from '../../services/extensions/common/extHostCustomers.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\n\ninterface QuickInputSession {\n\tinput: IQuickInput;\n\thandlesToItems: Map<number, TransferQuickPickItem>;\n\tstore: DisposableStore;\n}\n\nfunction reviveIconPathUris(iconPath: { dark: URI; light?: URI | undefined }) {\n\ticonPath.dark = URI.revive(iconPath.dark);\n\tif (iconPath.light) {\n\t\ticonPath.light = URI.revive(iconPath.light);\n\t}\n}\n\n@extHostNamedCustomer(MainContext.MainThreadQuickOpen)\nexport class MainThreadQuickOpen implements MainThreadQuickOpenShape {\n\n\tprivate readonly _proxy: ExtHostQuickOpenShape;\n\tprivate readonly _quickInputService: IQuickInputService;\n\tprivate readonly _items: Record<number, {\n\t\tresolve(items: TransferQuickPickItemOrSeparator[]): void;\n\t\treject(error: Error): void;\n\t}> = {};\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@IQuickInputService quickInputService: IQuickInputService\n\t) {\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostQuickOpen);\n\t\tthis._quickInputService = quickInputService;\n\t}\n\n\tpublic dispose(): void {\n\t\tfor (const [_id, session] of this.sessions) {\n\t\t\tsession.store.dispose();\n\t\t}\n\t}\n\n\t$show(instance: number, options: IPickOptions<TransferQuickPickItem>, token: CancellationToken): Promise<number | number[] | undefined> {\n\t\tconst contents = new Promise<TransferQuickPickItemOrSeparator[]>((resolve, reject) => {\n\t\t\tthis._items[instance] = { resolve, reject };\n\t\t});\n\n\t\toptions = {\n\t\t\t...options,\n\t\t\tonDidFocus: el => {\n\t\t\t\tif (el) {\n\t\t\t\t\tthis._proxy.$onItemSelected((<TransferQuickPickItem>el).handle);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tif (options.canPickMany) {\n\t\t\treturn this._quickInputService.pick(contents, options as { canPickMany: true }, token).then(items => {\n\t\t\t\tif (items) {\n\t\t\t\t\treturn items.map(item => item.handle);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t} else {\n\t\t\treturn this._quickInputService.pick(contents, options, token).then(item => {\n\t\t\t\tif (item) {\n\t\t\t\t\treturn item.handle;\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t}\n\t}\n\n\t$setItems(instance: number, items: TransferQuickPickItemOrSeparator[]): Promise<void> {\n\t\tif (this._items[instance]) {\n\t\t\tthis._items[instance].resolve(items);\n\t\t\tdelete this._items[instance];\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n\n\t$setError(instance: number, error: Error): Promise<void> {\n\t\tif (this._items[instance]) {\n\t\t\tthis._items[instance].reject(error);\n\t\t\tdelete this._items[instance];\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n\n\t// ---- input\n\n\t$input(options: IInputBoxOptions | undefined, validateInput: boolean, token: CancellationToken): Promise<string | undefined> {\n\t\tconst inputOptions: IInputOptions = Object.create(null);\n\n\t\tif (options) {\n\t\t\tinputOptions.title = options.title;\n\t\t\tinputOptions.password = options.password;\n\t\t\tinputOptions.placeHolder = options.placeHolder;\n\t\t\tinputOptions.valueSelection = options.valueSelection;\n\t\t\tinputOptions.prompt = options.prompt;\n\t\t\tinputOptions.value = options.value;\n\t\t\tinputOptions.ignoreFocusLost = options.ignoreFocusOut;\n\t\t}\n\n\t\tif (validateInput) {\n\t\t\tinputOptions.validateInput = (value) => {\n\t\t\t\treturn this._proxy.$validateInput(value);\n\t\t\t};\n\t\t}\n\n\t\treturn this._quickInputService.input(inputOptions, token);\n\t}\n\n\t// ---- QuickInput\n\n\tprivate sessions = new Map<number, QuickInputSession>();\n\n\t$createOrUpdate(params: TransferQuickInput): Promise<void> {\n\t\tconst sessionId = params.id;\n\t\tlet session = this.sessions.get(sessionId);\n\t\tif (!session) {\n\t\t\tconst store = new DisposableStore();\n\t\t\tconst input = params.type === 'quickPick' ? this._quickInputService.createQuickPick() : this._quickInputService.createInputBox();\n\t\t\tstore.add(input);\n\t\t\tstore.add(input.onDidAccept(() => {\n\t\t\t\tthis._proxy.$onDidAccept(sessionId);\n\t\t\t}));\n\t\t\tstore.add(input.onDidTriggerButton(button => {\n\t\t\t\tthis._proxy.$onDidTriggerButton(sessionId, (button as TransferQuickInputButton).handle);\n\t\t\t}));\n\t\t\tstore.add(input.onDidChangeValue(value => {\n\t\t\t\tthis._proxy.$onDidChangeValue(sessionId, value);\n\t\t\t}));\n\t\t\tstore.add(input.onDidHide(() => {\n\t\t\t\tthis._proxy.$onDidHide(sessionId);\n\t\t\t}));\n\n\t\t\tif (params.type === 'quickPick') {\n\t\t\t\t// Add extra events specific for quickpick\n\t\t\t\tconst quickpick = input as IQuickPick<IQuickPickItem>;\n\t\t\t\tstore.add(quickpick.onDidChangeActive(items => {\n\t\t\t\t\tthis._proxy.$onDidChangeActive(sessionId, items.map(item => (item as TransferQuickPickItem).handle));\n\t\t\t\t}));\n\t\t\t\tstore.add(quickpick.onDidChangeSelection(items => {\n\t\t\t\t\tthis._proxy.$onDidChangeSelection(sessionId, items.map(item => (item as TransferQuickPickItem).handle));\n\t\t\t\t}));\n\t\t\t\tstore.add(quickpick.onDidTriggerItemButton((e) => {\n\t\t\t\t\tthis._proxy.$onDidTriggerItemButton(sessionId, (e.item as TransferQuickPickItem).handle, (e.button as TransferQuickInputButton).handle);\n\t\t\t\t}));\n\t\t\t}\n\n\t\t\tsession = {\n\t\t\t\tinput,\n\t\t\t\thandlesToItems: new Map(),\n\t\t\t\tstore\n\t\t\t};\n\t\t\tthis.sessions.set(sessionId, session);\n\t\t}\n\t\tconst { input, handlesToItems } = session;\n\t\tfor (const param in params) {\n\t\t\tif (param === 'id' || param === 'type') {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (param === 'visible') {\n\t\t\t\tif (params.visible) {\n\t\t\t\t\tinput.show();\n\t\t\t\t} else {\n\t\t\t\t\tinput.hide();\n\t\t\t\t}\n\t\t\t} else if (param === 'items') {\n\t\t\t\thandlesToItems.clear();\n\t\t\t\tparams[param].forEach((item: TransferQuickPickItemOrSeparator) => {\n\t\t\t\t\tif (item.type === 'separator') {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (item.buttons) {\n\t\t\t\t\t\titem.buttons = item.buttons.map((button: TransferQuickInputButton) => {\n\t\t\t\t\t\t\tif (button.iconPath) {\n\t\t\t\t\t\t\t\treviveIconPathUris(button.iconPath);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn button;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\thandlesToItems.set(item.handle, item);\n\t\t\t\t});\n\t\t\t\t(input as any)[param] = params[param];\n\t\t\t} else if (param === 'activeItems' || param === 'selectedItems') {\n\t\t\t\t(input as any)[param] = params[param]\n\t\t\t\t\t.filter((handle: number) => handlesToItems.has(handle))\n\t\t\t\t\t.map((handle: number) => handlesToItems.get(handle));\n\t\t\t} else if (param === 'buttons') {\n\t\t\t\t(input as any)[param] = params.buttons!.map(button => {\n\t\t\t\t\tif (button.handle === -1) {\n\t\t\t\t\t\treturn this._quickInputService.backButton;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (button.iconPath) {\n\t\t\t\t\t\treviveIconPathUris(button.iconPath);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn button;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t(input as any)[param] = params[param];\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\t$dispose(sessionId: number): Promise<void> {\n\t\tconst session = this.sessions.get(sessionId);\n\t\tif (session) {\n\t\t\tsession.store.dispose();\n\t\t\tthis.sessions.delete(sessionId);\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n}\n"],
  "mappings": "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",
  "names": ["input"]
}
