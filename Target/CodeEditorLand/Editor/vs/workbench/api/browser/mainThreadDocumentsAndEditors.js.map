{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadDocumentsAndEditors.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { diffMaps, diffSets } from \"../../../base/common/collections.js\";\nimport { Event } from \"../../../base/common/event.js\";\nimport {\n\tDisposableMap,\n\tDisposableStore,\n\tcombinedDisposable,\n} from \"../../../base/common/lifecycle.js\";\nimport {\n\ttype IActiveCodeEditor,\n\ttype ICodeEditor,\n\tisCodeEditor,\n\tisDiffEditor,\n} from \"../../../editor/browser/editorBrowser.js\";\nimport { ICodeEditorService } from \"../../../editor/browser/services/codeEditorService.js\";\nimport type { IEditor } from \"../../../editor/common/editorCommon.js\";\nimport {\n\ttype ITextModel,\n\tshouldSynchronizeModel,\n} from \"../../../editor/common/model.js\";\nimport { IModelService } from \"../../../editor/common/services/model.js\";\nimport { ITextModelService } from \"../../../editor/common/services/resolverService.js\";\nimport { IClipboardService } from \"../../../platform/clipboard/common/clipboardService.js\";\nimport { IConfigurationService } from \"../../../platform/configuration/common/configuration.js\";\nimport { IFileService } from \"../../../platform/files/common/files.js\";\nimport { IUriIdentityService } from \"../../../platform/uriIdentity/common/uriIdentity.js\";\nimport { AbstractTextEditor } from \"../../browser/parts/editor/textEditor.js\";\nimport type { IEditorPane } from \"../../common/editor.js\";\nimport { ViewContainerLocation } from \"../../common/views.js\";\nimport {\n\ttype EditorGroupColumn,\n\teditorGroupToColumn,\n} from \"../../services/editor/common/editorGroupColumn.js\";\nimport { IEditorGroupsService } from \"../../services/editor/common/editorGroupsService.js\";\nimport { IEditorService } from \"../../services/editor/common/editorService.js\";\nimport { IWorkbenchEnvironmentService } from \"../../services/environment/common/environmentService.js\";\nimport {\n\ttype IExtHostContext,\n\textHostCustomer,\n} from \"../../services/extensions/common/extHostCustomers.js\";\nimport { IPaneCompositePartService } from \"../../services/panecomposite/browser/panecomposite.js\";\nimport { IPathService } from \"../../services/path/common/pathService.js\";\nimport { ITextFileService } from \"../../services/textfile/common/textfiles.js\";\nimport { IWorkingCopyFileService } from \"../../services/workingCopy/common/workingCopyFileService.js\";\nimport {\n\tExtHostContext,\n\ttype ExtHostDocumentsAndEditorsShape,\n\ttype IDocumentsAndEditorsDelta,\n\ttype IModelAddedData,\n\ttype ITextEditorAddData,\n\tMainContext,\n} from \"../common/extHost.protocol.js\";\nimport { MainThreadDocuments } from \"./mainThreadDocuments.js\";\nimport { MainThreadTextEditor } from \"./mainThreadEditor.js\";\nimport { MainThreadTextEditors } from \"./mainThreadEditors.js\";\n\nclass TextEditorSnapshot {\n\treadonly id: string;\n\n\tconstructor(readonly editor: IActiveCodeEditor) {\n\t\tthis.id = `${editor.getId()},${editor.getModel().id}`;\n\t}\n}\n\nclass DocumentAndEditorStateDelta {\n\treadonly isEmpty: boolean;\n\n\tconstructor(\n\t\treadonly removedDocuments: ITextModel[],\n\t\treadonly addedDocuments: ITextModel[],\n\t\treadonly removedEditors: TextEditorSnapshot[],\n\t\treadonly addedEditors: TextEditorSnapshot[],\n\t\treadonly oldActiveEditor: string | null | undefined,\n\t\treadonly newActiveEditor: string | null | undefined,\n\t) {\n\t\tthis.isEmpty =\n\t\t\tthis.removedDocuments.length === 0 &&\n\t\t\tthis.addedDocuments.length === 0 &&\n\t\t\tthis.removedEditors.length === 0 &&\n\t\t\tthis.addedEditors.length === 0 &&\n\t\t\toldActiveEditor === newActiveEditor;\n\t}\n\n\ttoString(): string {\n\t\tlet ret = \"DocumentAndEditorStateDelta\\n\";\n\t\tret += `\\tRemoved Documents: [${this.removedDocuments.map((d) => d.uri.toString(true)).join(\", \")}]\\n`;\n\t\tret += `\\tAdded Documents: [${this.addedDocuments.map((d) => d.uri.toString(true)).join(\", \")}]\\n`;\n\t\tret += `\\tRemoved Editors: [${this.removedEditors.map((e) => e.id).join(\", \")}]\\n`;\n\t\tret += `\\tAdded Editors: [${this.addedEditors.map((e) => e.id).join(\", \")}]\\n`;\n\t\tret += `\\tNew Active Editor: ${this.newActiveEditor}\\n`;\n\t\treturn ret;\n\t}\n}\n\nclass DocumentAndEditorState {\n\tstatic compute(\n\t\tbefore: DocumentAndEditorState | undefined,\n\t\tafter: DocumentAndEditorState,\n\t): DocumentAndEditorStateDelta {\n\t\tif (!before) {\n\t\t\treturn new DocumentAndEditorStateDelta(\n\t\t\t\t[],\n\t\t\t\t[...after.documents.values()],\n\t\t\t\t[],\n\t\t\t\t[...after.textEditors.values()],\n\t\t\t\tundefined,\n\t\t\t\tafter.activeEditor,\n\t\t\t);\n\t\t}\n\t\tconst documentDelta = diffSets(before.documents, after.documents);\n\t\tconst editorDelta = diffMaps(before.textEditors, after.textEditors);\n\t\tconst oldActiveEditor =\n\t\t\tbefore.activeEditor !== after.activeEditor\n\t\t\t\t? before.activeEditor\n\t\t\t\t: undefined;\n\t\tconst newActiveEditor =\n\t\t\tbefore.activeEditor !== after.activeEditor\n\t\t\t\t? after.activeEditor\n\t\t\t\t: undefined;\n\n\t\treturn new DocumentAndEditorStateDelta(\n\t\t\tdocumentDelta.removed,\n\t\t\tdocumentDelta.added,\n\t\t\teditorDelta.removed,\n\t\t\teditorDelta.added,\n\t\t\toldActiveEditor,\n\t\t\tnewActiveEditor,\n\t\t);\n\t}\n\n\tconstructor(\n\t\treadonly documents: Set<ITextModel>,\n\t\treadonly textEditors: Map<string, TextEditorSnapshot>,\n\t\treadonly activeEditor: string | null | undefined,\n\t) {\n\t\t//\n\t}\n}\n\nenum ActiveEditorOrder {\n\tEditor = 0,\n\tPanel = 1,\n}\n\nclass MainThreadDocumentAndEditorStateComputer {\n\tprivate readonly _toDispose = new DisposableStore();\n\tprivate readonly _toDisposeOnEditorRemove = new DisposableMap<string>();\n\tprivate _currentState?: DocumentAndEditorState;\n\tprivate _activeEditorOrder: ActiveEditorOrder = ActiveEditorOrder.Editor;\n\n\tconstructor(\n\t\tprivate readonly _onDidChangeState: (delta: DocumentAndEditorStateDelta) => void,\n\t\t@IModelService private readonly _modelService: IModelService,\n\t\t@ICodeEditorService private readonly _codeEditorService: ICodeEditorService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IPaneCompositePartService private readonly _paneCompositeService: IPaneCompositePartService,\n\t) {\n\t\tthis._modelService.onModelAdded(this._updateStateOnModelAdd, this, this._toDispose);\n\t\tthis._modelService.onModelRemoved(_ => this._updateState(), this, this._toDispose);\n\t\tthis._editorService.onDidActiveEditorChange(_ => this._updateState(), this, this._toDispose);\n\n\t\tthis._codeEditorService.onCodeEditorAdd(this._onDidAddEditor, this, this._toDispose);\n\t\tthis._codeEditorService.onCodeEditorRemove(this._onDidRemoveEditor, this, this._toDispose);\n\t\tthis._codeEditorService.listCodeEditors().forEach(this._onDidAddEditor, this);\n\n\t\tEvent.filter(this._paneCompositeService.onDidPaneCompositeOpen, event => event.viewContainerLocation === ViewContainerLocation.Panel)(_ => this._activeEditorOrder = ActiveEditorOrder.Panel, undefined, this._toDispose);\n\t\tEvent.filter(this._paneCompositeService.onDidPaneCompositeClose, event => event.viewContainerLocation === ViewContainerLocation.Panel)(_ => this._activeEditorOrder = ActiveEditorOrder.Editor, undefined, this._toDispose);\n\t\tthis._editorService.onDidVisibleEditorsChange(_ => this._activeEditorOrder = ActiveEditorOrder.Editor, undefined, this._toDispose);\n\n\t\tthis._updateState();\n\t}\n\n\tdispose(): void {\n\t\tthis._toDispose.dispose();\n\t\tthis._toDisposeOnEditorRemove.dispose();\n\t}\n\n\tprivate _onDidAddEditor(e: ICodeEditor): void {\n\t\tthis._toDisposeOnEditorRemove.set(\n\t\t\te.getId(),\n\t\t\tcombinedDisposable(\n\t\t\t\te.onDidChangeModel(() => this._updateState()),\n\t\t\t\te.onDidFocusEditorText(() => this._updateState()),\n\t\t\t\te.onDidFocusEditorWidget(() => this._updateState(e)),\n\t\t\t),\n\t\t);\n\t\tthis._updateState();\n\t}\n\n\tprivate _onDidRemoveEditor(e: ICodeEditor): void {\n\t\tconst id = e.getId();\n\t\tif (this._toDisposeOnEditorRemove.has(id)) {\n\t\t\tthis._toDisposeOnEditorRemove.deleteAndDispose(id);\n\t\t\tthis._updateState();\n\t\t}\n\t}\n\n\tprivate _updateStateOnModelAdd(model: ITextModel): void {\n\t\tif (!shouldSynchronizeModel(model)) {\n\t\t\t// ignore\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._currentState) {\n\t\t\t// too early\n\t\t\tthis._updateState();\n\t\t\treturn;\n\t\t}\n\n\t\t// small (fast) delta\n\t\tthis._currentState = new DocumentAndEditorState(\n\t\t\tthis._currentState.documents.add(model),\n\t\t\tthis._currentState.textEditors,\n\t\t\tthis._currentState.activeEditor,\n\t\t);\n\n\t\tthis._onDidChangeState(\n\t\t\tnew DocumentAndEditorStateDelta(\n\t\t\t\t[],\n\t\t\t\t[model],\n\t\t\t\t[],\n\t\t\t\t[],\n\t\t\t\tundefined,\n\t\t\t\tundefined,\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate _updateState(widgetFocusCandidate?: ICodeEditor): void {\n\t\t// models: ignore too large models\n\t\tconst models = new Set<ITextModel>();\n\t\tfor (const model of this._modelService.getModels()) {\n\t\t\tif (shouldSynchronizeModel(model)) {\n\t\t\t\tmodels.add(model);\n\t\t\t}\n\t\t}\n\n\t\t// editor: only take those that have a not too large model\n\t\tconst editors = new Map<string, TextEditorSnapshot>();\n\t\tlet activeEditor: string | null = null; // Strict null work. This doesn't like being undefined!\n\n\t\tfor (const editor of this._codeEditorService.listCodeEditors()) {\n\t\t\tif (editor.isSimpleWidget) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst model = editor.getModel();\n\t\t\tif (\n\t\t\t\teditor.hasModel() &&\n\t\t\t\tmodel &&\n\t\t\t\tshouldSynchronizeModel(model) &&\n\t\t\t\t!model.isDisposed() && // model disposed\n\t\t\t\tBoolean(this._modelService.getModel(model.uri)) // model disposing, the flag didn't flip yet but the model service already removed it\n\t\t\t) {\n\t\t\t\tconst apiEditor = new TextEditorSnapshot(editor);\n\t\t\t\teditors.set(apiEditor.id, apiEditor);\n\t\t\t\tif (\n\t\t\t\t\teditor.hasTextFocus() ||\n\t\t\t\t\t(widgetFocusCandidate === editor && editor.hasWidgetFocus())\n\t\t\t\t) {\n\t\t\t\t\t// text focus has priority, widget focus is tricky because multiple\n\t\t\t\t\t// editors might claim widget focus at the same time. therefore we use a\n\t\t\t\t\t// candidate (which is the editor that has raised an widget focus event)\n\t\t\t\t\t// in addition to the widget focus check\n\t\t\t\t\tactiveEditor = apiEditor.id;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// active editor: if none of the previous editors had focus we try\n\t\t// to match output panels or the active workbench editor with\n\t\t// one of editor we have just computed\n\t\tif (!activeEditor) {\n\t\t\tlet candidate: IEditor | undefined;\n\t\t\tif (this._activeEditorOrder === ActiveEditorOrder.Editor) {\n\t\t\t\tcandidate =\n\t\t\t\t\tthis._getActiveEditorFromEditorPart() ||\n\t\t\t\t\tthis._getActiveEditorFromPanel();\n\t\t\t} else {\n\t\t\t\tcandidate =\n\t\t\t\t\tthis._getActiveEditorFromPanel() ||\n\t\t\t\t\tthis._getActiveEditorFromEditorPart();\n\t\t\t}\n\n\t\t\tif (candidate) {\n\t\t\t\tfor (const snapshot of editors.values()) {\n\t\t\t\t\tif (candidate === snapshot.editor) {\n\t\t\t\t\t\tactiveEditor = snapshot.id;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// compute new state and compare against old\n\t\tconst newState = new DocumentAndEditorState(\n\t\t\tmodels,\n\t\t\teditors,\n\t\t\tactiveEditor,\n\t\t);\n\t\tconst delta = DocumentAndEditorState.compute(\n\t\t\tthis._currentState,\n\t\t\tnewState,\n\t\t);\n\t\tif (!delta.isEmpty) {\n\t\t\tthis._currentState = newState;\n\t\t\tthis._onDidChangeState(delta);\n\t\t}\n\t}\n\n\tprivate _getActiveEditorFromPanel(): IEditor | undefined {\n\t\tconst panel = this._paneCompositeService.getActivePaneComposite(\n\t\t\tViewContainerLocation.Panel,\n\t\t);\n\t\tif (panel instanceof AbstractTextEditor) {\n\t\t\tconst control = panel.getControl();\n\t\t\tif (isCodeEditor(control)) {\n\t\t\t\treturn control;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate _getActiveEditorFromEditorPart(): IEditor | undefined {\n\t\tlet activeTextEditorControl =\n\t\t\tthis._editorService.activeTextEditorControl;\n\t\tif (isDiffEditor(activeTextEditorControl)) {\n\t\t\tactiveTextEditorControl =\n\t\t\t\tactiveTextEditorControl.getModifiedEditor();\n\t\t}\n\t\treturn activeTextEditorControl;\n\t}\n}\n\n@extHostCustomer\nexport class MainThreadDocumentsAndEditors {\n\tprivate readonly _toDispose = new DisposableStore();\n\tprivate readonly _proxy: ExtHostDocumentsAndEditorsShape;\n\tprivate readonly _mainThreadDocuments: MainThreadDocuments;\n\tprivate readonly _mainThreadEditors: MainThreadTextEditors;\n\tprivate readonly _textEditors = new Map<string, MainThreadTextEditor>();\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@IModelService private readonly _modelService: IModelService,\n\t\t@ITextFileService private readonly _textFileService: ITextFileService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t\t@IFileService fileService: IFileService,\n\t\t@ITextModelService textModelResolverService: ITextModelService,\n\t\t@IEditorGroupsService private readonly _editorGroupService: IEditorGroupsService,\n\t\t@IPaneCompositePartService paneCompositeService: IPaneCompositePartService,\n\t\t@IWorkbenchEnvironmentService environmentService: IWorkbenchEnvironmentService,\n\t\t@IWorkingCopyFileService workingCopyFileService: IWorkingCopyFileService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t\t@IClipboardService private readonly _clipboardService: IClipboardService,\n\t\t@IPathService pathService: IPathService,\n\t\t@IConfigurationService configurationService: IConfigurationService\n\t) {\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostDocumentsAndEditors);\n\n\t\tthis._mainThreadDocuments = this._toDispose.add(new MainThreadDocuments(extHostContext, this._modelService, this._textFileService, fileService, textModelResolverService, environmentService, uriIdentityService, workingCopyFileService, pathService));\n\t\textHostContext.set(MainContext.MainThreadDocuments, this._mainThreadDocuments);\n\n\t\tthis._mainThreadEditors = this._toDispose.add(new MainThreadTextEditors(this, extHostContext, codeEditorService, this._editorService, this._editorGroupService, configurationService));\n\t\textHostContext.set(MainContext.MainThreadTextEditors, this._mainThreadEditors);\n\n\t\t// It is expected that the ctor of the state computer calls our `_onDelta`.\n\t\tthis._toDispose.add(new MainThreadDocumentAndEditorStateComputer(delta => this._onDelta(delta), _modelService, codeEditorService, this._editorService, paneCompositeService));\n\t}\n\n\tdispose(): void {\n\t\tthis._toDispose.dispose();\n\t}\n\n\tprivate _onDelta(delta: DocumentAndEditorStateDelta): void {\n\t\tconst removedEditors: string[] = [];\n\t\tconst addedEditors: MainThreadTextEditor[] = [];\n\n\t\t// removed models\n\t\tconst removedDocuments = delta.removedDocuments.map((m) => m.uri);\n\n\t\t// added editors\n\t\tfor (const apiEditor of delta.addedEditors) {\n\t\t\tconst mainThreadEditor = new MainThreadTextEditor(\n\t\t\t\tapiEditor.id,\n\t\t\t\tapiEditor.editor.getModel(),\n\t\t\t\tapiEditor.editor,\n\t\t\t\t{ onGainedFocus() {}, onLostFocus() {} },\n\t\t\t\tthis._mainThreadDocuments,\n\t\t\t\tthis._modelService,\n\t\t\t\tthis._clipboardService,\n\t\t\t);\n\n\t\t\tthis._textEditors.set(apiEditor.id, mainThreadEditor);\n\t\t\taddedEditors.push(mainThreadEditor);\n\t\t}\n\n\t\t// removed editors\n\t\tfor (const { id } of delta.removedEditors) {\n\t\t\tconst mainThreadEditor = this._textEditors.get(id);\n\t\t\tif (mainThreadEditor) {\n\t\t\t\tmainThreadEditor.dispose();\n\t\t\t\tthis._textEditors.delete(id);\n\t\t\t\tremovedEditors.push(id);\n\t\t\t}\n\t\t}\n\n\t\tconst extHostDelta: IDocumentsAndEditorsDelta = Object.create(null);\n\t\tlet empty = true;\n\t\tif (delta.newActiveEditor !== undefined) {\n\t\t\tempty = false;\n\t\t\textHostDelta.newActiveEditor = delta.newActiveEditor;\n\t\t}\n\t\tif (removedDocuments.length > 0) {\n\t\t\tempty = false;\n\t\t\textHostDelta.removedDocuments = removedDocuments;\n\t\t}\n\t\tif (removedEditors.length > 0) {\n\t\t\tempty = false;\n\t\t\textHostDelta.removedEditors = removedEditors;\n\t\t}\n\t\tif (delta.addedDocuments.length > 0) {\n\t\t\tempty = false;\n\t\t\textHostDelta.addedDocuments = delta.addedDocuments.map((m) =>\n\t\t\t\tthis._toModelAddData(m),\n\t\t\t);\n\t\t}\n\t\tif (delta.addedEditors.length > 0) {\n\t\t\tempty = false;\n\t\t\textHostDelta.addedEditors = addedEditors.map((e) =>\n\t\t\t\tthis._toTextEditorAddData(e),\n\t\t\t);\n\t\t}\n\n\t\tif (!empty) {\n\t\t\t// first update ext host\n\t\t\tthis._proxy.$acceptDocumentsAndEditorsDelta(extHostDelta);\n\n\t\t\t// second update dependent document/editor states\n\t\t\tremovedDocuments.forEach(\n\t\t\t\tthis._mainThreadDocuments.handleModelRemoved,\n\t\t\t\tthis._mainThreadDocuments,\n\t\t\t);\n\t\t\tdelta.addedDocuments.forEach(\n\t\t\t\tthis._mainThreadDocuments.handleModelAdded,\n\t\t\t\tthis._mainThreadDocuments,\n\t\t\t);\n\n\t\t\tremovedEditors.forEach(\n\t\t\t\tthis._mainThreadEditors.handleTextEditorRemoved,\n\t\t\t\tthis._mainThreadEditors,\n\t\t\t);\n\t\t\taddedEditors.forEach(\n\t\t\t\tthis._mainThreadEditors.handleTextEditorAdded,\n\t\t\t\tthis._mainThreadEditors,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _toModelAddData(model: ITextModel): IModelAddedData {\n\t\treturn {\n\t\t\turi: model.uri,\n\t\t\tversionId: model.getVersionId(),\n\t\t\tlines: model.getLinesContent(),\n\t\t\tEOL: model.getEOL(),\n\t\t\tlanguageId: model.getLanguageId(),\n\t\t\tisDirty: this._textFileService.isDirty(model.uri),\n\t\t};\n\t}\n\n\tprivate _toTextEditorAddData(\n\t\ttextEditor: MainThreadTextEditor,\n\t): ITextEditorAddData {\n\t\tconst props = textEditor.getProperties();\n\t\treturn {\n\t\t\tid: textEditor.getId(),\n\t\t\tdocumentUri: textEditor.getModel().uri,\n\t\t\toptions: props.options,\n\t\t\tselections: props.selections,\n\t\t\tvisibleRanges: props.visibleRanges,\n\t\t\teditorPosition: this._findEditorPosition(textEditor),\n\t\t};\n\t}\n\n\tprivate _findEditorPosition(\n\t\teditor: MainThreadTextEditor,\n\t): EditorGroupColumn | undefined {\n\t\tfor (const editorPane of this._editorService.visibleEditorPanes) {\n\t\t\tif (editor.matches(editorPane)) {\n\t\t\t\treturn editorGroupToColumn(\n\t\t\t\t\tthis._editorGroupService,\n\t\t\t\t\teditorPane.group,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tfindTextEditorIdFor(editorPane: IEditorPane): string | undefined {\n\t\tfor (const [id, editor] of this._textEditors) {\n\t\t\tif (editor.matches(editorPane)) {\n\t\t\t\treturn id;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tgetIdOfCodeEditor(codeEditor: ICodeEditor): string | undefined {\n\t\tfor (const [id, editor] of this._textEditors) {\n\t\t\tif (editor.getCodeEditor() === codeEditor) {\n\t\t\t\treturn id;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tgetEditor(id: string): MainThreadTextEditor | undefined {\n\t\treturn this._textEditors.get(id);\n\t}\n}\n"],
  "mappings": "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",
  "names": ["ActiveEditorOrder"]
}
