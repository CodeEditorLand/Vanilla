{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadChatVariables.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableMap } from \"../../../base/common/lifecycle.js\";\nimport { revive } from \"../../../base/common/marshalling.js\";\nimport {\n\ttype IChatRequestVariableValue,\n\ttype IChatVariableData,\n\ttype IChatVariableResolverProgress,\n\tIChatVariablesService,\n} from \"../../contrib/chat/common/chatVariables.js\";\nimport {\n\ttype IExtHostContext,\n\textHostNamedCustomer,\n} from \"../../services/extensions/common/extHostCustomers.js\";\nimport {\n\ttype ExtHostChatVariablesShape,\n\tExtHostContext,\n\ttype IChatVariableResolverProgressDto,\n\tMainContext,\n\ttype MainThreadChatVariablesShape,\n} from \"../common/extHost.protocol.js\";\n\n@extHostNamedCustomer(MainContext.MainThreadChatVariables)\nexport class MainThreadChatVariables implements MainThreadChatVariablesShape {\n\tprivate readonly _proxy: ExtHostChatVariablesShape;\n\tprivate readonly _variables = new DisposableMap<number>();\n\tprivate readonly _pendingProgress = new Map<\n\t\tstring,\n\t\t(part: IChatVariableResolverProgress) => void\n\t>();\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@IChatVariablesService\n\t\tprivate readonly _chatVariablesService: IChatVariablesService,\n\t) {\n\t\tthis._proxy = extHostContext.getProxy(\n\t\t\tExtHostContext.ExtHostChatVariables,\n\t\t);\n\t}\n\n\tdispose(): void {\n\t\tthis._variables.clearAndDisposeAll();\n\t}\n\n\t$registerVariable(handle: number, data: IChatVariableData): void {\n\t\tconst registration = this._chatVariablesService.registerVariable(\n\t\t\tdata,\n\t\t\tasync (messageText, _arg, model, progress, token) => {\n\t\t\t\tconst varRequestId = `${model.sessionId}-${handle}`;\n\t\t\t\tthis._pendingProgress.set(varRequestId, progress);\n\t\t\t\tconst result = revive<IChatRequestVariableValue>(\n\t\t\t\t\tawait this._proxy.$resolveVariable(\n\t\t\t\t\t\thandle,\n\t\t\t\t\t\tvarRequestId,\n\t\t\t\t\t\tmessageText,\n\t\t\t\t\t\ttoken,\n\t\t\t\t\t),\n\t\t\t\t);\n\n\t\t\t\tthis._pendingProgress.delete(varRequestId);\n\t\t\t\treturn result as any; // 'revive' type signature doesn't like this type for some reason\n\t\t\t},\n\t\t);\n\t\tthis._variables.set(handle, registration);\n\t}\n\n\tasync $handleProgressChunk(\n\t\trequestId: string,\n\t\tprogress: IChatVariableResolverProgressDto,\n\t): Promise<number | void> {\n\t\tconst revivedProgress = revive(progress);\n\t\tthis._pendingProgress.get(requestId)?.(\n\t\t\trevivedProgress as IChatVariableResolverProgress,\n\t\t);\n\t}\n\n\t$unregisterVariable(handle: number): void {\n\t\tthis._variables.deleteAndDispose(handle);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,qBAAqB;AAC9B,SAAS,cAAc;AACvB;AAAA,EAIC;AAAA,OACM;AACP;AAAA,EAEC;AAAA,OACM;AACP;AAAA,EAEC;AAAA,EAEA;AAAA,OAEM;AAGA,IAAM,0BAAN,MAAsE;AAAA,EAQ5E,YACC,gBAEiB,uBAChB;AADgB;AAEjB,SAAK,SAAS,eAAe;AAAA,MAC5B,eAAe;AAAA,IAChB;AAAA,EACD;AAAA,EAfiB;AAAA,EACA,aAAa,IAAI,cAAsB;AAAA,EACvC,mBAAmB,oBAAI,IAGtC;AAAA,EAYF,UAAgB;AACf,SAAK,WAAW,mBAAmB;AAAA,EACpC;AAAA,EAEA,kBAAkB,QAAgB,MAA+B;AAChE,UAAM,eAAe,KAAK,sBAAsB;AAAA,MAC/C;AAAA,MACA,OAAO,aAAa,MAAM,OAAO,UAAU,UAAU;AACpD,cAAM,eAAe,GAAG,MAAM,SAAS,IAAI,MAAM;AACjD,aAAK,iBAAiB,IAAI,cAAc,QAAQ;AAChD,cAAM,SAAS;AAAA,UACd,MAAM,KAAK,OAAO;AAAA,YACjB;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACD;AAAA,QACD;AAEA,aAAK,iBAAiB,OAAO,YAAY;AACzC,eAAO;AAAA,MACR;AAAA,IACD;AACA,SAAK,WAAW,IAAI,QAAQ,YAAY;AAAA,EACzC;AAAA,EAEA,MAAM,qBACL,WACA,UACyB;AACzB,UAAM,kBAAkB,OAAO,QAAQ;AACvC,SAAK,iBAAiB,IAAI,SAAS;AAAA,MAClC;AAAA,IACD;AAAA,EACD;AAAA,EAEA,oBAAoB,QAAsB;AACzC,SAAK,WAAW,iBAAiB,MAAM;AAAA,EACxC;AACD;AAzD6E;AAAhE,0BAAN;AAAA,EADN,qBAAqB,YAAY,uBAAuB;AAAA,EAWtD;AAAA,GAVU;",
  "names": []
}
