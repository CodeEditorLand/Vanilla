{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadWorkspace.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { isCancellationError } from '../../../base/common/errors.js';\nimport { DisposableStore, IDisposable } from '../../../base/common/lifecycle.js';\nimport { isNative } from '../../../base/common/platform.js';\nimport { URI, UriComponents } from '../../../base/common/uri.js';\nimport { localize } from '../../../nls.js';\nimport { IEnvironmentService } from '../../../platform/environment/common/environment.js';\nimport { IFileService } from '../../../platform/files/common/files.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { ILabelService } from '../../../platform/label/common/label.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nimport { AuthInfo, Credentials, IRequestService } from '../../../platform/request/common/request.js';\nimport { WorkspaceTrustRequestOptions, IWorkspaceTrustManagementService, IWorkspaceTrustRequestService } from '../../../platform/workspace/common/workspaceTrust.js';\nimport { IWorkspace, IWorkspaceContextService, WorkbenchState, isUntitledWorkspace, WorkspaceFolder } from '../../../platform/workspace/common/workspace.js';\nimport { extHostNamedCustomer, IExtHostContext } from '../../services/extensions/common/extHostCustomers.js';\nimport { checkGlobFileExists } from '../../services/extensions/common/workspaceContains.js';\nimport { IFileQueryBuilderOptions, ITextQueryBuilderOptions, QueryBuilder } from '../../services/search/common/queryBuilder.js';\nimport { IEditorService, ISaveEditorsResult } from '../../services/editor/common/editorService.js';\nimport { IFileMatch, IPatternInfo, ISearchProgressItem, ISearchService } from '../../services/search/common/search.js';\nimport { IWorkspaceEditingService } from '../../services/workspaces/common/workspaceEditing.js';\nimport { ExtHostContext, ExtHostWorkspaceShape, ITextSearchComplete, IWorkspaceData, MainContext, MainThreadWorkspaceShape } from '../common/extHost.protocol.js';\nimport { IEditSessionIdentityService } from '../../../platform/workspace/common/editSessions.js';\nimport { EditorResourceAccessor, SaveReason, SideBySideEditor } from '../../common/editor.js';\nimport { coalesce } from '../../../base/common/arrays.js';\nimport { ICanonicalUriService } from '../../../platform/workspace/common/canonicalUri.js';\nimport { revive } from '../../../base/common/marshalling.js';\n\n@extHostNamedCustomer(MainContext.MainThreadWorkspace)\nexport class MainThreadWorkspace implements MainThreadWorkspaceShape {\n\n\tprivate readonly _toDispose = new DisposableStore();\n\tprivate readonly _activeCancelTokens: { [id: number]: CancellationTokenSource } = Object.create(null);\n\tprivate readonly _proxy: ExtHostWorkspaceShape;\n\tprivate readonly _queryBuilder = this._instantiationService.createInstance(QueryBuilder);\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@ISearchService private readonly _searchService: ISearchService,\n\t\t@IWorkspaceContextService private readonly _contextService: IWorkspaceContextService,\n\t\t@IEditSessionIdentityService private readonly _editSessionIdentityService: IEditSessionIdentityService,\n\t\t@ICanonicalUriService private readonly _canonicalUriService: ICanonicalUriService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IWorkspaceEditingService private readonly _workspaceEditingService: IWorkspaceEditingService,\n\t\t@INotificationService private readonly _notificationService: INotificationService,\n\t\t@IRequestService private readonly _requestService: IRequestService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@ILabelService private readonly _labelService: ILabelService,\n\t\t@IEnvironmentService private readonly _environmentService: IEnvironmentService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IWorkspaceTrustManagementService private readonly _workspaceTrustManagementService: IWorkspaceTrustManagementService,\n\t\t@IWorkspaceTrustRequestService private readonly _workspaceTrustRequestService: IWorkspaceTrustRequestService\n\t) {\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostWorkspace);\n\t\tconst workspace = this._contextService.getWorkspace();\n\t\t// The workspace file is provided be a unknown file system provider. It might come\n\t\t// from the extension host. So initialize now knowing that `rootPath` is undefined.\n\t\tif (workspace.configuration && !isNative && !fileService.hasProvider(workspace.configuration)) {\n\t\t\tthis._proxy.$initializeWorkspace(this.getWorkspaceData(workspace), this.isWorkspaceTrusted());\n\t\t} else {\n\t\t\tthis._contextService.getCompleteWorkspace().then(workspace => this._proxy.$initializeWorkspace(this.getWorkspaceData(workspace), this.isWorkspaceTrusted()));\n\t\t}\n\t\tthis._contextService.onDidChangeWorkspaceFolders(this._onDidChangeWorkspace, this, this._toDispose);\n\t\tthis._contextService.onDidChangeWorkbenchState(this._onDidChangeWorkspace, this, this._toDispose);\n\t\tthis._workspaceTrustManagementService.onDidChangeTrust(this._onDidGrantWorkspaceTrust, this, this._toDispose);\n\t}\n\n\tdispose(): void {\n\t\tthis._toDispose.dispose();\n\n\t\tfor (const requestId in this._activeCancelTokens) {\n\t\t\tconst tokenSource = this._activeCancelTokens[requestId];\n\t\t\ttokenSource.cancel();\n\t\t}\n\t}\n\n\t// --- workspace ---\n\n\t$updateWorkspaceFolders(extensionName: string, index: number, deleteCount: number, foldersToAdd: { uri: UriComponents; name?: string }[]): Promise<void> {\n\t\tconst workspaceFoldersToAdd = foldersToAdd.map(f => ({ uri: URI.revive(f.uri), name: f.name }));\n\n\t\t// Indicate in status message\n\t\tthis._notificationService.status(this.getStatusMessage(extensionName, workspaceFoldersToAdd.length, deleteCount), { hideAfter: 10 * 1000 /* 10s */ });\n\n\t\treturn this._workspaceEditingService.updateFolders(index, deleteCount, workspaceFoldersToAdd, true);\n\t}\n\n\tprivate getStatusMessage(extensionName: string, addCount: number, removeCount: number): string {\n\t\tlet message: string;\n\n\t\tconst wantsToAdd = addCount > 0;\n\t\tconst wantsToDelete = removeCount > 0;\n\n\t\t// Add Folders\n\t\tif (wantsToAdd && !wantsToDelete) {\n\t\t\tif (addCount === 1) {\n\t\t\t\tmessage = localize('folderStatusMessageAddSingleFolder', \"Extension '{0}' added 1 folder to the workspace\", extensionName);\n\t\t\t} else {\n\t\t\t\tmessage = localize('folderStatusMessageAddMultipleFolders', \"Extension '{0}' added {1} folders to the workspace\", extensionName, addCount);\n\t\t\t}\n\t\t}\n\n\t\t// Delete Folders\n\t\telse if (wantsToDelete && !wantsToAdd) {\n\t\t\tif (removeCount === 1) {\n\t\t\t\tmessage = localize('folderStatusMessageRemoveSingleFolder', \"Extension '{0}' removed 1 folder from the workspace\", extensionName);\n\t\t\t} else {\n\t\t\t\tmessage = localize('folderStatusMessageRemoveMultipleFolders', \"Extension '{0}' removed {1} folders from the workspace\", extensionName, removeCount);\n\t\t\t}\n\t\t}\n\n\t\t// Change Folders\n\t\telse {\n\t\t\tmessage = localize('folderStatusChangeFolder', \"Extension '{0}' changed folders of the workspace\", extensionName);\n\t\t}\n\n\t\treturn message;\n\t}\n\n\tprivate _onDidChangeWorkspace(): void {\n\t\tthis._proxy.$acceptWorkspaceData(this.getWorkspaceData(this._contextService.getWorkspace()));\n\t}\n\n\tprivate getWorkspaceData(workspace: IWorkspace): IWorkspaceData | null {\n\t\tif (this._contextService.getWorkbenchState() === WorkbenchState.EMPTY) {\n\t\t\treturn null;\n\t\t}\n\t\treturn {\n\t\t\tconfiguration: workspace.configuration || undefined,\n\t\t\tisUntitled: workspace.configuration ? isUntitledWorkspace(workspace.configuration, this._environmentService) : false,\n\t\t\tfolders: workspace.folders,\n\t\t\tid: workspace.id,\n\t\t\tname: this._labelService.getWorkspaceLabel(workspace),\n\t\t\ttransient: workspace.transient\n\t\t};\n\t}\n\n\t// --- search ---\n\n\t$startFileSearch(_includeFolder: UriComponents | null, options: IFileQueryBuilderOptions<UriComponents>, token: CancellationToken): Promise<UriComponents[] | null> {\n\t\tconst includeFolder = URI.revive(_includeFolder);\n\t\tconst workspace = this._contextService.getWorkspace();\n\n\t\tconst query = this._queryBuilder.file(\n\t\t\tincludeFolder ? [includeFolder] : workspace.folders,\n\t\t\trevive(options)\n\t\t);\n\n\t\treturn this._searchService.fileSearch(query, token).then(result => {\n\t\t\treturn result.results.map(m => m.resource);\n\t\t}, err => {\n\t\t\tif (!isCancellationError(err)) {\n\t\t\t\treturn Promise.reject(err);\n\t\t\t}\n\t\t\treturn null;\n\t\t});\n\t}\n\n\t$startTextSearch(pattern: IPatternInfo, _folder: UriComponents | null, options: ITextQueryBuilderOptions<UriComponents>, requestId: number, token: CancellationToken): Promise<ITextSearchComplete | null> {\n\t\tconst folder = URI.revive(_folder);\n\t\tconst workspace = this._contextService.getWorkspace();\n\t\tconst folders = folder ? [folder] : workspace.folders.map(folder => folder.uri);\n\n\t\tconst query = this._queryBuilder.text(pattern, folders, revive(options));\n\t\tquery._reason = 'startTextSearch';\n\n\t\tconst onProgress = (p: ISearchProgressItem) => {\n\t\t\tif ((<IFileMatch>p).results) {\n\t\t\t\tthis._proxy.$handleTextSearchResult(<IFileMatch>p, requestId);\n\t\t\t}\n\t\t};\n\n\t\tconst search = this._searchService.textSearch(query, token, onProgress).then(\n\t\t\tresult => {\n\t\t\t\treturn { limitHit: result.limitHit };\n\t\t\t},\n\t\t\terr => {\n\t\t\t\tif (!isCancellationError(err)) {\n\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t});\n\n\t\treturn search;\n\t}\n\n\t$checkExists(folders: readonly UriComponents[], includes: string[], token: CancellationToken): Promise<boolean> {\n\t\treturn this._instantiationService.invokeFunction((accessor) => checkGlobFileExists(accessor, folders, includes, token));\n\t}\n\n\t// --- save & edit resources ---\n\n\tasync $save(uriComponents: UriComponents, options: { saveAs: boolean }): Promise<UriComponents | undefined> {\n\t\tconst uri = URI.revive(uriComponents);\n\n\t\tconst editors = [...this._editorService.findEditors(uri, { supportSideBySide: SideBySideEditor.PRIMARY })];\n\t\tconst result = await this._editorService.save(editors, {\n\t\t\treason: SaveReason.EXPLICIT,\n\t\t\tsaveAs: options.saveAs,\n\t\t\tforce: !options.saveAs\n\t\t});\n\n\t\treturn this._saveResultToUris(result).at(0);\n\t}\n\n\tprivate _saveResultToUris(result: ISaveEditorsResult): URI[] {\n\t\tif (!result.success) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn coalesce(result.editors.map(editor => EditorResourceAccessor.getCanonicalUri(editor, { supportSideBySide: SideBySideEditor.PRIMARY })));\n\t}\n\n\t$saveAll(includeUntitled?: boolean): Promise<boolean> {\n\t\treturn this._editorService.saveAll({ includeUntitled }).then(res => res.success);\n\t}\n\n\t$resolveProxy(url: string): Promise<string | undefined> {\n\t\treturn this._requestService.resolveProxy(url);\n\t}\n\n\t$lookupAuthorization(authInfo: AuthInfo): Promise<Credentials | undefined> {\n\t\treturn this._requestService.lookupAuthorization(authInfo);\n\t}\n\n\t$lookupKerberosAuthorization(url: string): Promise<string | undefined> {\n\t\treturn this._requestService.lookupKerberosAuthorization(url);\n\t}\n\n\t$loadCertificates(): Promise<string[]> {\n\t\treturn this._requestService.loadCertificates();\n\t}\n\n\t// --- trust ---\n\n\t$requestWorkspaceTrust(options?: WorkspaceTrustRequestOptions): Promise<boolean | undefined> {\n\t\treturn this._workspaceTrustRequestService.requestWorkspaceTrust(options);\n\t}\n\n\tprivate isWorkspaceTrusted(): boolean {\n\t\treturn this._workspaceTrustManagementService.isWorkspaceTrusted();\n\t}\n\n\tprivate _onDidGrantWorkspaceTrust(): void {\n\t\tthis._proxy.$onDidGrantWorkspaceTrust();\n\t}\n\n\t// --- edit sessions ---\n\tprivate registeredEditSessionProviders = new Map<number, IDisposable>();\n\n\t$registerEditSessionIdentityProvider(handle: number, scheme: string) {\n\t\tconst disposable = this._editSessionIdentityService.registerEditSessionIdentityProvider({\n\t\t\tscheme: scheme,\n\t\t\tgetEditSessionIdentifier: async (workspaceFolder: WorkspaceFolder, token: CancellationToken) => {\n\t\t\t\treturn this._proxy.$getEditSessionIdentifier(workspaceFolder.uri, token);\n\t\t\t},\n\t\t\tprovideEditSessionIdentityMatch: async (workspaceFolder: WorkspaceFolder, identity1: string, identity2: string, token: CancellationToken) => {\n\t\t\t\treturn this._proxy.$provideEditSessionIdentityMatch(workspaceFolder.uri, identity1, identity2, token);\n\t\t\t}\n\t\t});\n\n\t\tthis.registeredEditSessionProviders.set(handle, disposable);\n\t\tthis._toDispose.add(disposable);\n\t}\n\n\t$unregisterEditSessionIdentityProvider(handle: number) {\n\t\tconst disposable = this.registeredEditSessionProviders.get(handle);\n\t\tdisposable?.dispose();\n\t\tthis.registeredEditSessionProviders.delete(handle);\n\t}\n\n\t// --- canonical uri identities ---\n\tprivate registeredCanonicalUriProviders = new Map<number, IDisposable>();\n\n\t$registerCanonicalUriProvider(handle: number, scheme: string) {\n\t\tconst disposable = this._canonicalUriService.registerCanonicalUriProvider({\n\t\t\tscheme: scheme,\n\t\t\tprovideCanonicalUri: async (uri: UriComponents, targetScheme: string, token: CancellationToken) => {\n\t\t\t\tconst result = await this._proxy.$provideCanonicalUri(uri, targetScheme, token);\n\t\t\t\tif (result) {\n\t\t\t\t\treturn URI.revive(result);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t});\n\n\t\tthis.registeredCanonicalUriProviders.set(handle, disposable);\n\t\tthis._toDispose.add(disposable);\n\t}\n\n\t$unregisterCanonicalUriProvider(handle: number) {\n\t\tconst disposable = this.registeredCanonicalUriProviders.get(handle);\n\t\tdisposable?.dispose();\n\t\tthis.registeredCanonicalUriProviders.delete(handle);\n\t}\n}\n"],
  "mappings": "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",
  "names": ["workspace", "folder"]
}
