{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadNotebookDocumentsAndEditors.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { diffMaps, diffSets } from \"../../../base/common/collections.js\";\nimport {\n\tDisposableMap,\n\tDisposableStore,\n\tcombinedDisposable,\n} from \"../../../base/common/lifecycle.js\";\nimport type { URI } from \"../../../base/common/uri.js\";\nimport { IInstantiationService } from \"../../../platform/instantiation/common/instantiation.js\";\nimport { ILogService } from \"../../../platform/log/common/log.js\";\nimport {\n\ttype IActiveNotebookEditor,\n\ttype INotebookEditor,\n\tgetNotebookEditorFromEditorPane,\n} from \"../../contrib/notebook/browser/notebookBrowser.js\";\nimport { INotebookEditorService } from \"../../contrib/notebook/browser/services/notebookEditorService.js\";\nimport type { NotebookTextModel } from \"../../contrib/notebook/common/model/notebookTextModel.js\";\nimport { INotebookService } from \"../../contrib/notebook/common/notebookService.js\";\nimport { editorGroupToColumn } from \"../../services/editor/common/editorGroupColumn.js\";\nimport { IEditorGroupsService } from \"../../services/editor/common/editorGroupsService.js\";\nimport { IEditorService } from \"../../services/editor/common/editorService.js\";\nimport {\n\ttype IExtHostContext,\n\textHostCustomer,\n} from \"../../services/extensions/common/extHostCustomers.js\";\nimport { SerializableObjectWithBuffers } from \"../../services/extensions/common/proxyIdentifier.js\";\nimport {\n\tExtHostContext,\n\ttype ExtHostNotebookShape,\n\ttype INotebookDocumentsAndEditorsDelta,\n\ttype INotebookEditorAddData,\n\ttype INotebookModelAddedData,\n\tMainContext,\n} from \"../common/extHost.protocol.js\";\nimport { MainThreadNotebookDocuments } from \"./mainThreadNotebookDocuments.js\";\nimport { NotebookDto } from \"./mainThreadNotebookDto.js\";\nimport { MainThreadNotebookEditors } from \"./mainThreadNotebookEditors.js\";\n\ninterface INotebookAndEditorDelta {\n\tremovedDocuments: URI[];\n\taddedDocuments: NotebookTextModel[];\n\tremovedEditors: string[];\n\taddedEditors: IActiveNotebookEditor[];\n\tnewActiveEditor?: string | null;\n\tvisibleEditors?: string[];\n}\n\nclass NotebookAndEditorState {\n\tstatic delta(\n\t\tbefore: NotebookAndEditorState | undefined,\n\t\tafter: NotebookAndEditorState,\n\t): INotebookAndEditorDelta {\n\t\tif (!before) {\n\t\t\treturn {\n\t\t\t\taddedDocuments: [...after.documents],\n\t\t\t\tremovedDocuments: [],\n\t\t\t\taddedEditors: [...after.textEditors.values()],\n\t\t\t\tremovedEditors: [],\n\t\t\t\tvisibleEditors: [...after.visibleEditors].map(\n\t\t\t\t\t(editor) => editor[0],\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\t\tconst documentDelta = diffSets(before.documents, after.documents);\n\t\tconst editorDelta = diffMaps(before.textEditors, after.textEditors);\n\n\t\tconst newActiveEditor =\n\t\t\tbefore.activeEditor !== after.activeEditor\n\t\t\t\t? after.activeEditor\n\t\t\t\t: undefined;\n\t\tconst visibleEditorDelta = diffMaps(\n\t\t\tbefore.visibleEditors,\n\t\t\tafter.visibleEditors,\n\t\t);\n\n\t\treturn {\n\t\t\taddedDocuments: documentDelta.added,\n\t\t\tremovedDocuments: documentDelta.removed.map((e) => e.uri),\n\t\t\taddedEditors: editorDelta.added,\n\t\t\tremovedEditors: editorDelta.removed.map((removed) =>\n\t\t\t\tremoved.getId(),\n\t\t\t),\n\t\t\tnewActiveEditor: newActiveEditor,\n\t\t\tvisibleEditors:\n\t\t\t\tvisibleEditorDelta.added.length === 0 &&\n\t\t\t\tvisibleEditorDelta.removed.length === 0\n\t\t\t\t\t? undefined\n\t\t\t\t\t: [...after.visibleEditors].map((editor) => editor[0]),\n\t\t};\n\t}\n\n\tconstructor(\n\t\treadonly documents: Set<NotebookTextModel>,\n\t\treadonly textEditors: Map<string, IActiveNotebookEditor>,\n\t\treadonly activeEditor: string | null | undefined,\n\t\treadonly visibleEditors: Map<string, IActiveNotebookEditor>,\n\t) {\n\t\t//\n\t}\n}\n\n@extHostCustomer\nexport class MainThreadNotebooksAndEditors {\n\t// private readonly _onDidAddNotebooks = new Emitter<NotebookTextModel[]>();\n\t// private readonly _onDidRemoveNotebooks = new Emitter<URI[]>();\n\t// private readonly _onDidAddEditors = new Emitter<IActiveNotebookEditor[]>();\n\t// private readonly _onDidRemoveEditors = new Emitter<string[]>();\n\n\t// readonly onDidAddNotebooks: Event<NotebookTextModel[]> = this._onDidAddNotebooks.event;\n\t// readonly onDidRemoveNotebooks: Event<URI[]> = this._onDidRemoveNotebooks.event;\n\t// readonly onDidAddEditors: Event<IActiveNotebookEditor[]> = this._onDidAddEditors.event;\n\t// readonly onDidRemoveEditors: Event<string[]> = this._onDidRemoveEditors.event;\n\n\tprivate readonly _proxy: Pick<\n\t\tExtHostNotebookShape,\n\t\t\"$acceptDocumentAndEditorsDelta\"\n\t>;\n\tprivate readonly _disposables = new DisposableStore();\n\n\tprivate readonly _editorListeners = new DisposableMap<string>();\n\n\tprivate _currentState?: NotebookAndEditorState;\n\n\tprivate readonly _mainThreadNotebooks: MainThreadNotebookDocuments;\n\tprivate readonly _mainThreadEditors: MainThreadNotebookEditors;\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@INotebookService private readonly _notebookService: INotebookService,\n\t\t@INotebookEditorService\n\t\tprivate readonly _notebookEditorService: INotebookEditorService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IEditorGroupsService\n\t\tprivate readonly _editorGroupService: IEditorGroupsService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t) {\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostNotebook);\n\n\t\tthis._mainThreadNotebooks = instantiationService.createInstance(\n\t\t\tMainThreadNotebookDocuments,\n\t\t\textHostContext,\n\t\t);\n\t\tthis._mainThreadEditors = instantiationService.createInstance(\n\t\t\tMainThreadNotebookEditors,\n\t\t\textHostContext,\n\t\t);\n\n\t\textHostContext.set(\n\t\t\tMainContext.MainThreadNotebookDocuments,\n\t\t\tthis._mainThreadNotebooks,\n\t\t);\n\t\textHostContext.set(\n\t\t\tMainContext.MainThreadNotebookEditors,\n\t\t\tthis._mainThreadEditors,\n\t\t);\n\n\t\tthis._notebookService.onWillAddNotebookDocument(\n\t\t\t() => this._updateState(),\n\t\t\tthis,\n\t\t\tthis._disposables,\n\t\t);\n\t\tthis._notebookService.onDidRemoveNotebookDocument(\n\t\t\t() => this._updateState(),\n\t\t\tthis,\n\t\t\tthis._disposables,\n\t\t);\n\t\tthis._editorService.onDidActiveEditorChange(\n\t\t\t() => this._updateState(),\n\t\t\tthis,\n\t\t\tthis._disposables,\n\t\t);\n\t\tthis._editorService.onDidVisibleEditorsChange(\n\t\t\t() => this._updateState(),\n\t\t\tthis,\n\t\t\tthis._disposables,\n\t\t);\n\t\tthis._notebookEditorService.onDidAddNotebookEditor(\n\t\t\tthis._handleEditorAdd,\n\t\t\tthis,\n\t\t\tthis._disposables,\n\t\t);\n\t\tthis._notebookEditorService.onDidRemoveNotebookEditor(\n\t\t\tthis._handleEditorRemove,\n\t\t\tthis,\n\t\t\tthis._disposables,\n\t\t);\n\t\tthis._updateState();\n\t}\n\n\tdispose() {\n\t\tthis._mainThreadNotebooks.dispose();\n\t\tthis._mainThreadEditors.dispose();\n\t\tthis._disposables.dispose();\n\t\tthis._editorListeners.dispose();\n\t}\n\n\tprivate _handleEditorAdd(editor: INotebookEditor): void {\n\t\tthis._editorListeners.set(\n\t\t\teditor.getId(),\n\t\t\tcombinedDisposable(\n\t\t\t\teditor.onDidChangeModel(() => this._updateState()),\n\t\t\t\teditor.onDidFocusWidget(() => this._updateState(editor)),\n\t\t\t),\n\t\t);\n\t\tthis._updateState();\n\t}\n\n\tprivate _handleEditorRemove(editor: INotebookEditor): void {\n\t\tthis._editorListeners.deleteAndDispose(editor.getId());\n\t\tthis._updateState();\n\t}\n\n\tprivate _updateState(focusedEditor?: INotebookEditor): void {\n\t\tconst editors = new Map<string, IActiveNotebookEditor>();\n\t\tconst visibleEditorsMap = new Map<string, IActiveNotebookEditor>();\n\n\t\tfor (const editor of this._notebookEditorService.listNotebookEditors()) {\n\t\t\tif (editor.hasModel()) {\n\t\t\t\teditors.set(editor.getId(), editor);\n\t\t\t}\n\t\t}\n\n\t\tconst activeNotebookEditor = getNotebookEditorFromEditorPane(\n\t\t\tthis._editorService.activeEditorPane,\n\t\t);\n\t\tlet activeEditor: string | null = null;\n\t\tif (activeNotebookEditor) {\n\t\t\tactiveEditor = activeNotebookEditor.getId();\n\t\t} else if (focusedEditor?.textModel) {\n\t\t\tactiveEditor = focusedEditor.getId();\n\t\t}\n\t\tif (activeEditor && !editors.has(activeEditor)) {\n\t\t\tthis._logService.trace(\n\t\t\t\t\"MainThreadNotebooksAndEditors#_updateState: active editor is not in editors list\",\n\t\t\t\tactiveEditor,\n\t\t\t\teditors.keys(),\n\t\t\t);\n\t\t\tactiveEditor = null;\n\t\t}\n\n\t\tfor (const editorPane of this._editorService.visibleEditorPanes) {\n\t\t\tconst notebookEditor = getNotebookEditorFromEditorPane(editorPane);\n\t\t\tif (\n\t\t\t\tnotebookEditor?.hasModel() &&\n\t\t\t\teditors.has(notebookEditor.getId())\n\t\t\t) {\n\t\t\t\tvisibleEditorsMap.set(notebookEditor.getId(), notebookEditor);\n\t\t\t}\n\t\t}\n\n\t\tconst newState = new NotebookAndEditorState(\n\t\t\tnew Set(this._notebookService.listNotebookDocuments()),\n\t\t\teditors,\n\t\t\tactiveEditor,\n\t\t\tvisibleEditorsMap,\n\t\t);\n\t\tthis._onDelta(\n\t\t\tNotebookAndEditorState.delta(this._currentState, newState),\n\t\t);\n\t\tthis._currentState = newState;\n\t}\n\n\tprivate _onDelta(delta: INotebookAndEditorDelta): void {\n\t\tif (MainThreadNotebooksAndEditors._isDeltaEmpty(delta)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst dto: INotebookDocumentsAndEditorsDelta = {\n\t\t\tremovedDocuments: delta.removedDocuments,\n\t\t\tremovedEditors: delta.removedEditors,\n\t\t\tnewActiveEditor: delta.newActiveEditor,\n\t\t\tvisibleEditors: delta.visibleEditors,\n\t\t\taddedDocuments: delta.addedDocuments.map(\n\t\t\t\tMainThreadNotebooksAndEditors._asModelAddData,\n\t\t\t),\n\t\t\taddedEditors: delta.addedEditors.map(this._asEditorAddData, this),\n\t\t};\n\n\t\t// send to extension FIRST\n\t\tthis._proxy.$acceptDocumentAndEditorsDelta(\n\t\t\tnew SerializableObjectWithBuffers(dto),\n\t\t);\n\n\t\t// handle internally\n\t\tthis._mainThreadEditors.handleEditorsRemoved(delta.removedEditors);\n\t\tthis._mainThreadNotebooks.handleNotebooksRemoved(\n\t\t\tdelta.removedDocuments,\n\t\t);\n\t\tthis._mainThreadNotebooks.handleNotebooksAdded(delta.addedDocuments);\n\t\tthis._mainThreadEditors.handleEditorsAdded(delta.addedEditors);\n\t}\n\n\tprivate static _isDeltaEmpty(delta: INotebookAndEditorDelta): boolean {\n\t\tif (\n\t\t\tdelta.addedDocuments !== undefined &&\n\t\t\tdelta.addedDocuments.length > 0\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\t\tif (\n\t\t\tdelta.removedDocuments !== undefined &&\n\t\t\tdelta.removedDocuments.length > 0\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\t\tif (delta.addedEditors !== undefined && delta.addedEditors.length > 0) {\n\t\t\treturn false;\n\t\t}\n\t\tif (\n\t\t\tdelta.removedEditors !== undefined &&\n\t\t\tdelta.removedEditors.length > 0\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\t\tif (\n\t\t\tdelta.visibleEditors !== undefined &&\n\t\t\tdelta.visibleEditors.length > 0\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\t\tif (delta.newActiveEditor !== undefined) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate static _asModelAddData(\n\t\te: NotebookTextModel,\n\t): INotebookModelAddedData {\n\t\treturn {\n\t\t\tviewType: e.viewType,\n\t\t\turi: e.uri,\n\t\t\tmetadata: e.metadata,\n\t\t\tversionId: e.versionId,\n\t\t\tcells: e.cells.map(NotebookDto.toNotebookCellDto),\n\t\t};\n\t}\n\n\tprivate _asEditorAddData(\n\t\tadd: IActiveNotebookEditor,\n\t): INotebookEditorAddData {\n\t\tconst pane = this._editorService.visibleEditorPanes.find(\n\t\t\t(pane) => getNotebookEditorFromEditorPane(pane) === add,\n\t\t);\n\n\t\treturn {\n\t\t\tid: add.getId(),\n\t\t\tdocumentUri: add.textModel.uri,\n\t\t\tselections: add.getSelections(),\n\t\t\tvisibleRanges: add.visibleRanges,\n\t\t\tviewColumn:\n\t\t\t\tpane &&\n\t\t\t\teditorGroupToColumn(this._editorGroupService, pane.group),\n\t\t};\n\t}\n}\n"],
  "mappings": "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",
  "names": ["pane"]
}
