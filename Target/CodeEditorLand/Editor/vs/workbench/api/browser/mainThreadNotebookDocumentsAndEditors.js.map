{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadNotebookDocumentsAndEditors.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { diffMaps, diffSets } from '../../../base/common/collections.js';\nimport { combinedDisposable, DisposableStore, DisposableMap } from '../../../base/common/lifecycle.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { MainThreadNotebookDocuments } from './mainThreadNotebookDocuments.js';\nimport { NotebookDto } from './mainThreadNotebookDto.js';\nimport { MainThreadNotebookEditors } from './mainThreadNotebookEditors.js';\nimport { extHostCustomer, IExtHostContext } from '../../services/extensions/common/extHostCustomers.js';\nimport { editorGroupToColumn } from '../../services/editor/common/editorGroupColumn.js';\nimport { getNotebookEditorFromEditorPane, IActiveNotebookEditor, INotebookEditor } from '../../contrib/notebook/browser/notebookBrowser.js';\nimport { INotebookEditorService } from '../../contrib/notebook/browser/services/notebookEditorService.js';\nimport { NotebookTextModel } from '../../contrib/notebook/common/model/notebookTextModel.js';\nimport { INotebookService } from '../../contrib/notebook/common/notebookService.js';\nimport { IEditorGroupsService } from '../../services/editor/common/editorGroupsService.js';\nimport { IEditorService } from '../../services/editor/common/editorService.js';\nimport { ExtHostContext, ExtHostNotebookShape, INotebookDocumentsAndEditorsDelta, INotebookEditorAddData, INotebookModelAddedData, MainContext } from '../common/extHost.protocol.js';\nimport { SerializableObjectWithBuffers } from '../../services/extensions/common/proxyIdentifier.js';\n\ninterface INotebookAndEditorDelta {\n\tremovedDocuments: URI[];\n\taddedDocuments: NotebookTextModel[];\n\tremovedEditors: string[];\n\taddedEditors: IActiveNotebookEditor[];\n\tnewActiveEditor?: string | null;\n\tvisibleEditors?: string[];\n}\n\nclass NotebookAndEditorState {\n\tstatic delta(before: NotebookAndEditorState | undefined, after: NotebookAndEditorState): INotebookAndEditorDelta {\n\t\tif (!before) {\n\t\t\treturn {\n\t\t\t\taddedDocuments: [...after.documents],\n\t\t\t\tremovedDocuments: [],\n\t\t\t\taddedEditors: [...after.textEditors.values()],\n\t\t\t\tremovedEditors: [],\n\t\t\t\tvisibleEditors: [...after.visibleEditors].map(editor => editor[0])\n\t\t\t};\n\t\t}\n\t\tconst documentDelta = diffSets(before.documents, after.documents);\n\t\tconst editorDelta = diffMaps(before.textEditors, after.textEditors);\n\n\t\tconst newActiveEditor = before.activeEditor !== after.activeEditor ? after.activeEditor : undefined;\n\t\tconst visibleEditorDelta = diffMaps(before.visibleEditors, after.visibleEditors);\n\n\t\treturn {\n\t\t\taddedDocuments: documentDelta.added,\n\t\t\tremovedDocuments: documentDelta.removed.map(e => e.uri),\n\t\t\taddedEditors: editorDelta.added,\n\t\t\tremovedEditors: editorDelta.removed.map(removed => removed.getId()),\n\t\t\tnewActiveEditor: newActiveEditor,\n\t\t\tvisibleEditors: visibleEditorDelta.added.length === 0 && visibleEditorDelta.removed.length === 0\n\t\t\t\t? undefined\n\t\t\t\t: [...after.visibleEditors].map(editor => editor[0])\n\t\t};\n\t}\n\n\tconstructor(\n\t\treadonly documents: Set<NotebookTextModel>,\n\t\treadonly textEditors: Map<string, IActiveNotebookEditor>,\n\t\treadonly activeEditor: string | null | undefined,\n\t\treadonly visibleEditors: Map<string, IActiveNotebookEditor>\n\t) {\n\t\t//\n\t}\n}\n\n@extHostCustomer\nexport class MainThreadNotebooksAndEditors {\n\n\t// private readonly _onDidAddNotebooks = new Emitter<NotebookTextModel[]>();\n\t// private readonly _onDidRemoveNotebooks = new Emitter<URI[]>();\n\t// private readonly _onDidAddEditors = new Emitter<IActiveNotebookEditor[]>();\n\t// private readonly _onDidRemoveEditors = new Emitter<string[]>();\n\n\t// readonly onDidAddNotebooks: Event<NotebookTextModel[]> = this._onDidAddNotebooks.event;\n\t// readonly onDidRemoveNotebooks: Event<URI[]> = this._onDidRemoveNotebooks.event;\n\t// readonly onDidAddEditors: Event<IActiveNotebookEditor[]> = this._onDidAddEditors.event;\n\t// readonly onDidRemoveEditors: Event<string[]> = this._onDidRemoveEditors.event;\n\n\tprivate readonly _proxy: Pick<ExtHostNotebookShape, '$acceptDocumentAndEditorsDelta'>;\n\tprivate readonly _disposables = new DisposableStore();\n\n\tprivate readonly _editorListeners = new DisposableMap<string>();\n\n\tprivate _currentState?: NotebookAndEditorState;\n\n\tprivate readonly _mainThreadNotebooks: MainThreadNotebookDocuments;\n\tprivate readonly _mainThreadEditors: MainThreadNotebookEditors;\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@INotebookService private readonly _notebookService: INotebookService,\n\t\t@INotebookEditorService private readonly _notebookEditorService: INotebookEditorService,\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@IEditorGroupsService private readonly _editorGroupService: IEditorGroupsService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t) {\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostNotebook);\n\n\t\tthis._mainThreadNotebooks = instantiationService.createInstance(MainThreadNotebookDocuments, extHostContext);\n\t\tthis._mainThreadEditors = instantiationService.createInstance(MainThreadNotebookEditors, extHostContext);\n\n\t\textHostContext.set(MainContext.MainThreadNotebookDocuments, this._mainThreadNotebooks);\n\t\textHostContext.set(MainContext.MainThreadNotebookEditors, this._mainThreadEditors);\n\n\t\tthis._notebookService.onWillAddNotebookDocument(() => this._updateState(), this, this._disposables);\n\t\tthis._notebookService.onDidRemoveNotebookDocument(() => this._updateState(), this, this._disposables);\n\t\tthis._editorService.onDidActiveEditorChange(() => this._updateState(), this, this._disposables);\n\t\tthis._editorService.onDidVisibleEditorsChange(() => this._updateState(), this, this._disposables);\n\t\tthis._notebookEditorService.onDidAddNotebookEditor(this._handleEditorAdd, this, this._disposables);\n\t\tthis._notebookEditorService.onDidRemoveNotebookEditor(this._handleEditorRemove, this, this._disposables);\n\t\tthis._updateState();\n\t}\n\n\tdispose() {\n\t\tthis._mainThreadNotebooks.dispose();\n\t\tthis._mainThreadEditors.dispose();\n\t\tthis._disposables.dispose();\n\t\tthis._editorListeners.dispose();\n\t}\n\n\tprivate _handleEditorAdd(editor: INotebookEditor): void {\n\t\tthis._editorListeners.set(editor.getId(), combinedDisposable(\n\t\t\teditor.onDidChangeModel(() => this._updateState()),\n\t\t\teditor.onDidFocusWidget(() => this._updateState(editor)),\n\t\t));\n\t\tthis._updateState();\n\t}\n\n\tprivate _handleEditorRemove(editor: INotebookEditor): void {\n\t\tthis._editorListeners.deleteAndDispose(editor.getId());\n\t\tthis._updateState();\n\t}\n\n\tprivate _updateState(focusedEditor?: INotebookEditor): void {\n\n\t\tconst editors = new Map<string, IActiveNotebookEditor>();\n\t\tconst visibleEditorsMap = new Map<string, IActiveNotebookEditor>();\n\n\t\tfor (const editor of this._notebookEditorService.listNotebookEditors()) {\n\t\t\tif (editor.hasModel()) {\n\t\t\t\teditors.set(editor.getId(), editor);\n\t\t\t}\n\t\t}\n\n\t\tconst activeNotebookEditor = getNotebookEditorFromEditorPane(this._editorService.activeEditorPane);\n\t\tlet activeEditor: string | null = null;\n\t\tif (activeNotebookEditor) {\n\t\t\tactiveEditor = activeNotebookEditor.getId();\n\t\t} else if (focusedEditor?.textModel) {\n\t\t\tactiveEditor = focusedEditor.getId();\n\t\t}\n\t\tif (activeEditor && !editors.has(activeEditor)) {\n\t\t\tthis._logService.trace('MainThreadNotebooksAndEditors#_updateState: active editor is not in editors list', activeEditor, editors.keys());\n\t\t\tactiveEditor = null;\n\t\t}\n\n\t\tfor (const editorPane of this._editorService.visibleEditorPanes) {\n\t\t\tconst notebookEditor = getNotebookEditorFromEditorPane(editorPane);\n\t\t\tif (notebookEditor?.hasModel() && editors.has(notebookEditor.getId())) {\n\t\t\t\tvisibleEditorsMap.set(notebookEditor.getId(), notebookEditor);\n\t\t\t}\n\t\t}\n\n\t\tconst newState = new NotebookAndEditorState(new Set(this._notebookService.listNotebookDocuments()), editors, activeEditor, visibleEditorsMap);\n\t\tthis._onDelta(NotebookAndEditorState.delta(this._currentState, newState));\n\t\tthis._currentState = newState;\n\t}\n\n\tprivate _onDelta(delta: INotebookAndEditorDelta): void {\n\t\tif (MainThreadNotebooksAndEditors._isDeltaEmpty(delta)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst dto: INotebookDocumentsAndEditorsDelta = {\n\t\t\tremovedDocuments: delta.removedDocuments,\n\t\t\tremovedEditors: delta.removedEditors,\n\t\t\tnewActiveEditor: delta.newActiveEditor,\n\t\t\tvisibleEditors: delta.visibleEditors,\n\t\t\taddedDocuments: delta.addedDocuments.map(MainThreadNotebooksAndEditors._asModelAddData),\n\t\t\taddedEditors: delta.addedEditors.map(this._asEditorAddData, this),\n\t\t};\n\n\t\t// send to extension FIRST\n\t\tthis._proxy.$acceptDocumentAndEditorsDelta(new SerializableObjectWithBuffers(dto));\n\n\t\t// handle internally\n\t\tthis._mainThreadEditors.handleEditorsRemoved(delta.removedEditors);\n\t\tthis._mainThreadNotebooks.handleNotebooksRemoved(delta.removedDocuments);\n\t\tthis._mainThreadNotebooks.handleNotebooksAdded(delta.addedDocuments);\n\t\tthis._mainThreadEditors.handleEditorsAdded(delta.addedEditors);\n\t}\n\n\tprivate static _isDeltaEmpty(delta: INotebookAndEditorDelta): boolean {\n\t\tif (delta.addedDocuments !== undefined && delta.addedDocuments.length > 0) {\n\t\t\treturn false;\n\t\t}\n\t\tif (delta.removedDocuments !== undefined && delta.removedDocuments.length > 0) {\n\t\t\treturn false;\n\t\t}\n\t\tif (delta.addedEditors !== undefined && delta.addedEditors.length > 0) {\n\t\t\treturn false;\n\t\t}\n\t\tif (delta.removedEditors !== undefined && delta.removedEditors.length > 0) {\n\t\t\treturn false;\n\t\t}\n\t\tif (delta.visibleEditors !== undefined && delta.visibleEditors.length > 0) {\n\t\t\treturn false;\n\t\t}\n\t\tif (delta.newActiveEditor !== undefined) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate static _asModelAddData(e: NotebookTextModel): INotebookModelAddedData {\n\t\treturn {\n\t\t\tviewType: e.viewType,\n\t\t\turi: e.uri,\n\t\t\tmetadata: e.metadata,\n\t\t\tversionId: e.versionId,\n\t\t\tcells: e.cells.map(NotebookDto.toNotebookCellDto)\n\t\t};\n\t}\n\n\tprivate _asEditorAddData(add: IActiveNotebookEditor): INotebookEditorAddData {\n\n\t\tconst pane = this._editorService.visibleEditorPanes.find(pane => getNotebookEditorFromEditorPane(pane) === add);\n\n\t\treturn {\n\t\t\tid: add.getId(),\n\t\t\tdocumentUri: add.textModel.uri,\n\t\t\tselections: add.getSelections(),\n\t\t\tvisibleRanges: add.visibleRanges,\n\t\t\tviewColumn: pane && editorGroupToColumn(this._editorGroupService, pane.group)\n\t\t};\n\t}\n}\n"],
  "mappings": "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",
  "names": ["pane"]
}
