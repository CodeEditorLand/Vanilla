{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/browser/mainThreadChatAgents2.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DeferredPromise } from \"../../../base/common/async.js\";\nimport type { CancellationToken } from \"../../../base/common/cancellation.js\";\nimport { Emitter, type Event } from \"../../../base/common/event.js\";\nimport type { IMarkdownString } from \"../../../base/common/htmlContent.js\";\nimport {\n\tDisposable,\n\tDisposableMap,\n\ttype IDisposable,\n} from \"../../../base/common/lifecycle.js\";\nimport { revive } from \"../../../base/common/marshalling.js\";\nimport { escapeRegExpCharacters } from \"../../../base/common/strings.js\";\nimport { ThemeIcon } from \"../../../base/common/themables.js\";\nimport { URI, type UriComponents } from \"../../../base/common/uri.js\";\nimport type { Position } from \"../../../editor/common/core/position.js\";\nimport { Range } from \"../../../editor/common/core/range.js\";\nimport { getWordAtText } from \"../../../editor/common/core/wordHelper.js\";\nimport {\n\ttype CompletionContext,\n\ttype CompletionItem,\n\tCompletionItemKind,\n\ttype CompletionList,\n} from \"../../../editor/common/languages.js\";\nimport type { ITextModel } from \"../../../editor/common/model.js\";\nimport { ILanguageFeaturesService } from \"../../../editor/common/services/languageFeatures.js\";\nimport { ExtensionIdentifier } from \"../../../platform/extensions/common/extensions.js\";\nimport { IInstantiationService } from \"../../../platform/instantiation/common/instantiation.js\";\nimport { ILogService } from \"../../../platform/log/common/log.js\";\nimport { IChatWidgetService } from \"../../contrib/chat/browser/chat.js\";\nimport { ChatInputPart } from \"../../contrib/chat/browser/chatInputPart.js\";\nimport {\n\tAddDynamicVariableAction,\n\ttype IAddDynamicVariableContext,\n} from \"../../contrib/chat/browser/contrib/chatDynamicVariables.js\";\nimport {\n\tChatAgentLocation,\n\ttype IChatAgentHistoryEntry,\n\ttype IChatAgentImplementation,\n\ttype IChatAgentRequest,\n\tIChatAgentService,\n} from \"../../contrib/chat/common/chatAgents.js\";\nimport { ChatRequestAgentPart } from \"../../contrib/chat/common/chatParserTypes.js\";\nimport { ChatRequestParser } from \"../../contrib/chat/common/chatRequestParser.js\";\nimport {\n\ttype IChatContentReference,\n\ttype IChatFollowup,\n\ttype IChatProgress,\n\tIChatService,\n\ttype IChatTask,\n\ttype IChatWarningMessage,\n} from \"../../contrib/chat/common/chatService.js\";\nimport {\n\ttype IExtHostContext,\n\textHostNamedCustomer,\n} from \"../../services/extensions/common/extHostCustomers.js\";\nimport { IExtensionService } from \"../../services/extensions/common/extensions.js\";\nimport {\n\ttype ExtHostChatAgentsShape2,\n\tExtHostContext,\n\ttype IChatParticipantMetadata,\n\ttype IChatProgressDto,\n\ttype IDynamicChatAgentProps,\n\ttype IExtensionChatAgentMetadata,\n\tMainContext,\n\ttype MainThreadChatAgentsShape2,\n} from \"../common/extHost.protocol.js\";\n\ninterface AgentData {\n\tdispose: () => void;\n\tid: string;\n\textensionId: ExtensionIdentifier;\n\thasFollowups?: boolean;\n}\n\nexport class MainThreadChatTask implements IChatTask {\n\tpublic readonly kind = \"progressTask\";\n\n\tpublic readonly deferred = new DeferredPromise<string | void>();\n\n\tprivate readonly _onDidAddProgress = new Emitter<\n\t\tIChatWarningMessage | IChatContentReference\n\t>();\n\tpublic get onDidAddProgress(): Event<\n\t\tIChatWarningMessage | IChatContentReference\n\t> {\n\t\treturn this._onDidAddProgress.event;\n\t}\n\n\tpublic readonly progress: (IChatWarningMessage | IChatContentReference)[] =\n\t\t[];\n\n\tconstructor(public content: IMarkdownString) {}\n\n\ttask() {\n\t\treturn this.deferred.p;\n\t}\n\n\tisSettled() {\n\t\treturn this.deferred.isSettled;\n\t}\n\n\tcomplete(v: string | void) {\n\t\tthis.deferred.complete(v);\n\t}\n\n\tadd(progress: IChatWarningMessage | IChatContentReference): void {\n\t\tthis.progress.push(progress);\n\t\tthis._onDidAddProgress.fire(progress);\n\t}\n}\n\n@extHostNamedCustomer(MainContext.MainThreadChatAgents2)\nexport class MainThreadChatAgents2\n\textends Disposable\n\timplements MainThreadChatAgentsShape2\n{\n\tprivate readonly _agents = this._register(\n\t\tnew DisposableMap<number, AgentData>(),\n\t);\n\tprivate readonly _agentCompletionProviders = this._register(\n\t\tnew DisposableMap<number, IDisposable>(),\n\t);\n\tprivate readonly _agentIdsToCompletionProviders = this._register(\n\t\tnew DisposableMap<string, IDisposable>(),\n\t);\n\n\tprivate readonly _chatParticipantDetectionProviders = this._register(\n\t\tnew DisposableMap<number, IDisposable>(),\n\t);\n\n\tprivate readonly _pendingProgress = new Map<\n\t\tstring,\n\t\t(part: IChatProgress) => void\n\t>();\n\tprivate readonly _proxy: ExtHostChatAgentsShape2;\n\n\tprivate _responsePartHandlePool = 0;\n\tprivate readonly _activeTasks = new Map<string, IChatTask>();\n\n\tconstructor(\n\t\textHostContext: IExtHostContext,\n\t\t@IChatAgentService private readonly _chatAgentService: IChatAgentService,\n\t\t@IChatService private readonly _chatService: IChatService,\n\t\t@ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService,\n\t\t@IChatWidgetService private readonly _chatWidgetService: IChatWidgetService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@IExtensionService private readonly _extensionService: IExtensionService,\n\t) {\n\t\tsuper();\n\t\tthis._proxy = extHostContext.getProxy(ExtHostContext.ExtHostChatAgents2);\n\n\t\tthis._register(this._chatService.onDidDisposeSession(e => {\n\t\t\tthis._proxy.$releaseSession(e.sessionId);\n\t\t}));\n\t\tthis._register(this._chatService.onDidPerformUserAction(e => {\n\t\t\tif (typeof e.agentId === 'string') {\n\t\t\t\tfor (const [handle, agent] of this._agents) {\n\t\t\t\t\tif (agent.id === e.agentId) {\n\t\t\t\t\t\tif (e.action.kind === 'vote') {\n\t\t\t\t\t\t\tthis._proxy.$acceptFeedback(handle, e.result ?? {}, e.action);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._proxy.$acceptAction(handle, e.result || {}, e);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\t$unregisterAgent(handle: number): void {\n\t\tthis._agents.deleteAndDispose(handle);\n\t}\n\n\t$transferActiveChatSession(toWorkspace: UriComponents): void {\n\t\tconst widget = this._chatWidgetService.lastFocusedWidget;\n\t\tconst sessionId = widget?.viewModel?.model.sessionId;\n\t\tif (!sessionId) {\n\t\t\tthis._logService.error(\n\t\t\t\t`MainThreadChat#$transferActiveChatSession: No active chat session found`,\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tconst inputValue = widget?.inputEditor.getValue() ?? \"\";\n\t\tthis._chatService.transferChatSession(\n\t\t\t{ sessionId, inputValue },\n\t\t\tURI.revive(toWorkspace),\n\t\t);\n\t}\n\n\t$registerAgent(\n\t\thandle: number,\n\t\textension: ExtensionIdentifier,\n\t\tid: string,\n\t\tmetadata: IExtensionChatAgentMetadata,\n\t\tdynamicProps: IDynamicChatAgentProps | undefined,\n\t): void {\n\t\tconst staticAgentRegistration = this._chatAgentService.getAgent(id);\n\t\tif (!staticAgentRegistration && !dynamicProps) {\n\t\t\tif (this._chatAgentService.getAgentsByName(id).length) {\n\t\t\t\t// Likely some extension authors will not adopt the new ID, so give a hint if they register a\n\t\t\t\t// participant by name instead of ID.\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`chatParticipant must be declared with an ID in package.json. The \"id\" property may be missing! \"${id}\"`,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthrow new Error(\n\t\t\t\t`chatParticipant must be declared in package.json: ${id}`,\n\t\t\t);\n\t\t}\n\n\t\tconst impl: IChatAgentImplementation = {\n\t\t\tinvoke: async (request, progress, history, token) => {\n\t\t\t\tthis._pendingProgress.set(request.requestId, progress);\n\t\t\t\ttry {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t(await this._proxy.$invokeAgent(\n\t\t\t\t\t\t\thandle,\n\t\t\t\t\t\t\trequest,\n\t\t\t\t\t\t\t{ history },\n\t\t\t\t\t\t\ttoken,\n\t\t\t\t\t\t)) ?? {}\n\t\t\t\t\t);\n\t\t\t\t} finally {\n\t\t\t\t\tthis._pendingProgress.delete(request.requestId);\n\t\t\t\t}\n\t\t\t},\n\t\t\tprovideFollowups: async (\n\t\t\t\trequest,\n\t\t\t\tresult,\n\t\t\t\thistory,\n\t\t\t\ttoken,\n\t\t\t): Promise<IChatFollowup[]> => {\n\t\t\t\tif (!this._agents.get(handle)?.hasFollowups) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\n\t\t\t\treturn this._proxy.$provideFollowups(\n\t\t\t\t\trequest,\n\t\t\t\t\thandle,\n\t\t\t\t\tresult,\n\t\t\t\t\t{ history },\n\t\t\t\t\ttoken,\n\t\t\t\t);\n\t\t\t},\n\t\t\tprovideWelcomeMessage: (\n\t\t\t\tlocation: ChatAgentLocation,\n\t\t\t\ttoken: CancellationToken,\n\t\t\t) => {\n\t\t\t\treturn this._proxy.$provideWelcomeMessage(\n\t\t\t\t\thandle,\n\t\t\t\t\tlocation,\n\t\t\t\t\ttoken,\n\t\t\t\t);\n\t\t\t},\n\t\t\tprovideChatTitle: (history, token) => {\n\t\t\t\treturn this._proxy.$provideChatTitle(handle, history, token);\n\t\t\t},\n\t\t\tprovideSampleQuestions: (\n\t\t\t\tlocation: ChatAgentLocation,\n\t\t\t\ttoken: CancellationToken,\n\t\t\t) => {\n\t\t\t\treturn this._proxy.$provideSampleQuestions(\n\t\t\t\t\thandle,\n\t\t\t\t\tlocation,\n\t\t\t\t\ttoken,\n\t\t\t\t);\n\t\t\t},\n\t\t};\n\n\t\tlet disposable: IDisposable;\n\t\tif (!staticAgentRegistration && dynamicProps) {\n\t\t\tconst extensionDescription = this._extensionService.extensions.find(\n\t\t\t\t(e) => ExtensionIdentifier.equals(e.identifier, extension),\n\t\t\t);\n\t\t\tdisposable = this._chatAgentService.registerDynamicAgent(\n\t\t\t\t{\n\t\t\t\t\tid,\n\t\t\t\t\tname: dynamicProps.name,\n\t\t\t\t\tdescription: dynamicProps.description,\n\t\t\t\t\textensionId: extension,\n\t\t\t\t\textensionDisplayName:\n\t\t\t\t\t\textensionDescription?.displayName ?? extension.value,\n\t\t\t\t\textensionPublisherId: extensionDescription?.publisher ?? \"\",\n\t\t\t\t\tpublisherDisplayName: dynamicProps.publisherName,\n\t\t\t\t\tfullName: dynamicProps.fullName,\n\t\t\t\t\tmetadata: revive(metadata),\n\t\t\t\t\tslashCommands: [],\n\t\t\t\t\tdisambiguation: [],\n\t\t\t\t\tlocations: [ChatAgentLocation.Panel], // TODO all dynamic participants are panel only?\n\t\t\t\t},\n\t\t\t\timpl,\n\t\t\t);\n\t\t} else {\n\t\t\tdisposable = this._chatAgentService.registerAgentImplementation(\n\t\t\t\tid,\n\t\t\t\timpl,\n\t\t\t);\n\t\t}\n\n\t\tthis._agents.set(handle, {\n\t\t\tid: id,\n\t\t\textensionId: extension,\n\t\t\tdispose: disposable.dispose,\n\t\t\thasFollowups: metadata.hasFollowups,\n\t\t});\n\t}\n\n\t$updateAgent(\n\t\thandle: number,\n\t\tmetadataUpdate: IExtensionChatAgentMetadata,\n\t): void {\n\t\tconst data = this._agents.get(handle);\n\t\tif (!data) {\n\t\t\tthis._logService.error(\n\t\t\t\t`MainThreadChatAgents2#$updateAgent: No agent with handle ${handle} registered`,\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\tdata.hasFollowups = metadataUpdate.hasFollowups;\n\t\tthis._chatAgentService.updateAgent(data.id, revive(metadataUpdate));\n\t}\n\n\tasync $handleProgressChunk(\n\t\trequestId: string,\n\t\tprogress: IChatProgressDto,\n\t\tresponsePartHandle?: number,\n\t): Promise<number | void> {\n\t\tconst revivedProgress = revive(progress) as IChatProgress;\n\t\tif (revivedProgress.kind === \"progressTask\") {\n\t\t\tconst handle = ++this._responsePartHandlePool;\n\t\t\tconst responsePartId = `${requestId}_${handle}`;\n\t\t\tconst task = new MainThreadChatTask(revivedProgress.content);\n\t\t\tthis._activeTasks.set(responsePartId, task);\n\t\t\tthis._pendingProgress.get(requestId)?.(task);\n\t\t\treturn handle;\n\t\t} else if (responsePartHandle !== undefined) {\n\t\t\tconst responsePartId = `${requestId}_${responsePartHandle}`;\n\t\t\tconst task = this._activeTasks.get(responsePartId);\n\t\t\tswitch (revivedProgress.kind) {\n\t\t\t\tcase \"progressTaskResult\":\n\t\t\t\t\tif (task && revivedProgress.content) {\n\t\t\t\t\t\ttask.complete(revivedProgress.content.value);\n\t\t\t\t\t\tthis._activeTasks.delete(responsePartId);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttask?.complete(undefined);\n\t\t\t\t\t}\n\t\t\t\t\treturn responsePartHandle;\n\t\t\t\tcase \"warning\":\n\t\t\t\tcase \"reference\":\n\t\t\t\t\ttask?.add(revivedProgress);\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthis._pendingProgress.get(requestId)?.(revivedProgress);\n\t}\n\n\t$registerAgentCompletionsProvider(\n\t\thandle: number,\n\t\tid: string,\n\t\ttriggerCharacters: string[],\n\t): void {\n\t\tconst provide = async (query: string, token: CancellationToken) => {\n\t\t\tconst completions = await this._proxy.$invokeCompletionProvider(\n\t\t\t\thandle,\n\t\t\t\tquery,\n\t\t\t\ttoken,\n\t\t\t);\n\t\t\treturn completions.map((c) => ({\n\t\t\t\t...c,\n\t\t\t\ticon: c.icon ? ThemeIcon.fromId(c.icon) : undefined,\n\t\t\t}));\n\t\t};\n\t\tthis._agentIdsToCompletionProviders.set(\n\t\t\tid,\n\t\t\tthis._chatAgentService.registerAgentCompletionProvider(id, provide),\n\t\t);\n\n\t\tthis._agentCompletionProviders.set(\n\t\t\thandle,\n\t\t\tthis._languageFeaturesService.completionProvider.register(\n\t\t\t\t{\n\t\t\t\t\tscheme: ChatInputPart.INPUT_SCHEME,\n\t\t\t\t\thasAccessToAllModels: true,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t_debugDisplayName: \"chatAgentCompletions:\" + handle,\n\t\t\t\t\ttriggerCharacters,\n\t\t\t\t\tprovideCompletionItems: async (\n\t\t\t\t\t\tmodel: ITextModel,\n\t\t\t\t\t\tposition: Position,\n\t\t\t\t\t\t_context: CompletionContext,\n\t\t\t\t\t\ttoken: CancellationToken,\n\t\t\t\t\t) => {\n\t\t\t\t\t\tconst widget =\n\t\t\t\t\t\t\tthis._chatWidgetService.getWidgetByInputUri(\n\t\t\t\t\t\t\t\tmodel.uri,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tif (!widget || !widget.viewModel) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst triggerCharsPart = triggerCharacters\n\t\t\t\t\t\t\t.map((c) => escapeRegExpCharacters(c))\n\t\t\t\t\t\t\t.join(\"\");\n\t\t\t\t\t\tconst wordRegex = new RegExp(\n\t\t\t\t\t\t\t`[${triggerCharsPart}]\\\\S*`,\n\t\t\t\t\t\t\t\"g\",\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst query =\n\t\t\t\t\t\t\tgetWordAtText(\n\t\t\t\t\t\t\t\tposition.column,\n\t\t\t\t\t\t\t\twordRegex,\n\t\t\t\t\t\t\t\tmodel.getLineContent(position.lineNumber),\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t)?.word ?? \"\";\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tquery &&\n\t\t\t\t\t\t\t!triggerCharacters.some((c) => query.startsWith(c))\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst parsedRequest = this._instantiationService\n\t\t\t\t\t\t\t.createInstance(ChatRequestParser)\n\t\t\t\t\t\t\t.parseChatRequest(\n\t\t\t\t\t\t\t\twidget.viewModel.sessionId,\n\t\t\t\t\t\t\t\tmodel.getValue(),\n\t\t\t\t\t\t\t).parts;\n\t\t\t\t\t\tconst agentPart = parsedRequest.find(\n\t\t\t\t\t\t\t(part): part is ChatRequestAgentPart =>\n\t\t\t\t\t\t\t\tpart instanceof ChatRequestAgentPart,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst thisAgentId = this._agents.get(handle)?.id;\n\t\t\t\t\t\tif (agentPart?.agent.id !== thisAgentId) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst range = computeCompletionRanges(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\tposition,\n\t\t\t\t\t\t\twordRegex,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (!range) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst result = await provide(query, token);\n\t\t\t\t\t\tconst variableItems = result.map((v) => {\n\t\t\t\t\t\t\tconst insertText =\n\t\t\t\t\t\t\t\tv.insertText ??\n\t\t\t\t\t\t\t\t(typeof v.label === \"string\"\n\t\t\t\t\t\t\t\t\t? v.label\n\t\t\t\t\t\t\t\t\t: v.label.label);\n\t\t\t\t\t\t\tconst rangeAfterInsert = new Range(\n\t\t\t\t\t\t\t\trange.insert.startLineNumber,\n\t\t\t\t\t\t\t\trange.insert.startColumn,\n\t\t\t\t\t\t\t\trange.insert.endLineNumber,\n\t\t\t\t\t\t\t\trange.insert.startColumn + insertText.length,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tlabel: v.label,\n\t\t\t\t\t\t\t\trange,\n\t\t\t\t\t\t\t\tinsertText: insertText + \" \",\n\t\t\t\t\t\t\t\tkind: CompletionItemKind.Text,\n\t\t\t\t\t\t\t\tdetail: v.detail,\n\t\t\t\t\t\t\t\tdocumentation: v.documentation,\n\t\t\t\t\t\t\t\tcommand: {\n\t\t\t\t\t\t\t\t\tid: AddDynamicVariableAction.ID,\n\t\t\t\t\t\t\t\t\ttitle: \"\",\n\t\t\t\t\t\t\t\t\targuments: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tid: v.id,\n\t\t\t\t\t\t\t\t\t\t\twidget,\n\t\t\t\t\t\t\t\t\t\t\trange: rangeAfterInsert,\n\t\t\t\t\t\t\t\t\t\t\tvariableData: revive(\n\t\t\t\t\t\t\t\t\t\t\t\tv.value,\n\t\t\t\t\t\t\t\t\t\t\t) as any,\n\t\t\t\t\t\t\t\t\t\t\tcommand: v.command,\n\t\t\t\t\t\t\t\t\t\t} satisfies IAddDynamicVariableContext,\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t} satisfies CompletionItem;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tsuggestions: variableItems,\n\t\t\t\t\t\t} satisfies CompletionList;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\t$unregisterAgentCompletionsProvider(handle: number, id: string): void {\n\t\tthis._agentCompletionProviders.deleteAndDispose(handle);\n\t\tthis._agentIdsToCompletionProviders.deleteAndDispose(id);\n\t}\n\n\t$registerChatParticipantDetectionProvider(handle: number): void {\n\t\tthis._chatParticipantDetectionProviders.set(\n\t\t\thandle,\n\t\t\tthis._chatAgentService.registerChatParticipantDetectionProvider(\n\t\t\t\thandle,\n\t\t\t\t{\n\t\t\t\t\tprovideParticipantDetection: async (\n\t\t\t\t\t\trequest: IChatAgentRequest,\n\t\t\t\t\t\thistory: IChatAgentHistoryEntry[],\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\tlocation: ChatAgentLocation;\n\t\t\t\t\t\t\tparticipants: IChatParticipantMetadata[];\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttoken: CancellationToken,\n\t\t\t\t\t) => {\n\t\t\t\t\t\treturn await this._proxy.$detectChatParticipant(\n\t\t\t\t\t\t\thandle,\n\t\t\t\t\t\t\trequest,\n\t\t\t\t\t\t\t{ history },\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\ttoken,\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\t$unregisterChatParticipantDetectionProvider(handle: number): void {\n\t\tthis._chatParticipantDetectionProviders.deleteAndDispose(handle);\n\t}\n}\n\nfunction computeCompletionRanges(\n\tmodel: ITextModel,\n\tposition: Position,\n\treg: RegExp,\n): { insert: Range; replace: Range } | undefined {\n\tconst varWord = getWordAtText(\n\t\tposition.column,\n\t\treg,\n\t\tmodel.getLineContent(position.lineNumber),\n\t\t0,\n\t);\n\tif (!varWord && model.getWordUntilPosition(position).word) {\n\t\t// inside a \"normal\" word\n\t\treturn;\n\t}\n\n\tlet insert: Range;\n\tlet replace: Range;\n\tif (varWord) {\n\t\tinsert = new Range(\n\t\t\tposition.lineNumber,\n\t\t\tvarWord.startColumn,\n\t\t\tposition.lineNumber,\n\t\t\tposition.column,\n\t\t);\n\t\treplace = new Range(\n\t\t\tposition.lineNumber,\n\t\t\tvarWord.startColumn,\n\t\t\tposition.lineNumber,\n\t\t\tvarWord.endColumn,\n\t\t);\n\t} else {\n\t\tinsert = replace = Range.fromPositions(position);\n\t}\n\n\treturn { insert, replace };\n}\n"],
  "mappings": "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",
  "names": []
}
