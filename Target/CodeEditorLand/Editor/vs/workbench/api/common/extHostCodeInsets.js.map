{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostCodeInsets.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type * as vscode from \"vscode\";\nimport { Emitter } from \"../../../base/common/event.js\";\nimport { DisposableStore } from \"../../../base/common/lifecycle.js\";\nimport type { IExtensionDescription } from \"../../../platform/extensions/common/extensions.js\";\nimport {\n\ttype WebviewRemoteInfo,\n\tasWebviewUri,\n\twebviewGenericCspSource,\n} from \"../../contrib/webview/common/webview.js\";\nimport type {\n\tExtHostEditorInsetsShape,\n\tMainThreadEditorInsetsShape,\n} from \"./extHost.protocol.js\";\nimport type { ExtHostTextEditor } from \"./extHostTextEditor.js\";\nimport type { ExtHostEditors } from \"./extHostTextEditors.js\";\n\nexport class ExtHostEditorInsets implements ExtHostEditorInsetsShape {\n\tprivate _handlePool = 0;\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate _insets = new Map<\n\t\tnumber,\n\t\t{\n\t\t\teditor: vscode.TextEditor;\n\t\t\tinset: vscode.WebviewEditorInset;\n\t\t\tonDidReceiveMessage: Emitter<any>;\n\t\t}\n\t>();\n\n\tconstructor(\n\t\tprivate readonly _proxy: MainThreadEditorInsetsShape,\n\t\tprivate readonly _editors: ExtHostEditors,\n\t\tprivate readonly _remoteInfo: WebviewRemoteInfo,\n\t) {\n\t\t// dispose editor inset whenever the hosting editor goes away\n\t\tthis._disposables.add(\n\t\t\t_editors.onDidChangeVisibleTextEditors(() => {\n\t\t\t\tconst visibleEditor = _editors.getVisibleTextEditors();\n\t\t\t\tfor (const value of this._insets.values()) {\n\t\t\t\t\tif (visibleEditor.indexOf(value.editor) < 0) {\n\t\t\t\t\t\tvalue.inset.dispose(); // will remove from `this._insets`\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tdispose(): void {\n\t\tthis._insets.forEach((value) => value.inset.dispose());\n\t\tthis._disposables.dispose();\n\t}\n\n\tcreateWebviewEditorInset(\n\t\teditor: vscode.TextEditor,\n\t\tline: number,\n\t\theight: number,\n\t\toptions: vscode.WebviewOptions | undefined,\n\t\textension: IExtensionDescription,\n\t): vscode.WebviewEditorInset {\n\t\tlet apiEditor: ExtHostTextEditor | undefined;\n\t\tfor (const candidate of this._editors.getVisibleTextEditors(true)) {\n\t\t\tif (candidate.value === editor) {\n\t\t\t\tapiEditor = <ExtHostTextEditor>candidate;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!apiEditor) {\n\t\t\tthrow new Error(\"not a visible editor\");\n\t\t}\n\n\t\tconst that = this;\n\t\tconst handle = this._handlePool++;\n\t\tconst onDidReceiveMessage = new Emitter<any>();\n\t\tconst onDidDispose = new Emitter<void>();\n\n\t\tconst webview = new (class implements vscode.Webview {\n\t\t\tprivate _html = \"\";\n\t\t\tprivate _options: vscode.WebviewOptions = Object.create(null);\n\n\t\t\tasWebviewUri(resource: vscode.Uri): vscode.Uri {\n\t\t\t\treturn asWebviewUri(resource, that._remoteInfo);\n\t\t\t}\n\n\t\t\tget cspSource(): string {\n\t\t\t\treturn webviewGenericCspSource;\n\t\t\t}\n\n\t\t\tset options(value: vscode.WebviewOptions) {\n\t\t\t\tthis._options = value;\n\t\t\t\tthat._proxy.$setOptions(handle, value);\n\t\t\t}\n\n\t\t\tget options(): vscode.WebviewOptions {\n\t\t\t\treturn this._options;\n\t\t\t}\n\n\t\t\tset html(value: string) {\n\t\t\t\tthis._html = value;\n\t\t\t\tthat._proxy.$setHtml(handle, value);\n\t\t\t}\n\n\t\t\tget html(): string {\n\t\t\t\treturn this._html;\n\t\t\t}\n\n\t\t\tget onDidReceiveMessage(): vscode.Event<any> {\n\t\t\t\treturn onDidReceiveMessage.event;\n\t\t\t}\n\n\t\t\tpostMessage(message: any): Thenable<boolean> {\n\t\t\t\treturn that._proxy.$postMessage(handle, message);\n\t\t\t}\n\t\t})();\n\n\t\tconst inset = new (class implements vscode.WebviewEditorInset {\n\t\t\treadonly editor: vscode.TextEditor = editor;\n\t\t\treadonly line: number = line;\n\t\t\treadonly height: number = height;\n\t\t\treadonly webview: vscode.Webview = webview;\n\t\t\treadonly onDidDispose: vscode.Event<void> = onDidDispose.event;\n\n\t\t\tdispose(): void {\n\t\t\t\tif (that._insets.has(handle)) {\n\t\t\t\t\tthat._insets.delete(handle);\n\t\t\t\t\tthat._proxy.$disposeEditorInset(handle);\n\t\t\t\t\tonDidDispose.fire();\n\n\t\t\t\t\t// final cleanup\n\t\t\t\t\tonDidDispose.dispose();\n\t\t\t\t\tonDidReceiveMessage.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t})();\n\n\t\tthis._proxy.$createEditorInset(\n\t\t\thandle,\n\t\t\tapiEditor.id,\n\t\t\tapiEditor.value.document.uri,\n\t\t\tline + 1,\n\t\t\theight,\n\t\t\toptions || {},\n\t\t\textension.identifier,\n\t\t\textension.extensionLocation,\n\t\t);\n\t\tthis._insets.set(handle, { editor, inset, onDidReceiveMessage });\n\n\t\treturn inset;\n\t}\n\n\t$onDidDispose(handle: number): void {\n\t\tconst value = this._insets.get(handle);\n\t\tif (value) {\n\t\t\tvalue.inset.dispose();\n\t\t}\n\t}\n\n\t$onDidReceiveMessage(handle: number, message: any): void {\n\t\tconst value = this._insets.get(handle);\n\t\tvalue?.onDidReceiveMessage.fire(message);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
