{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/configurationExtensionPoint.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IStringDictionary } from \"../../../base/common/collections.js\";\nimport { MarkdownString } from \"../../../base/common/htmlContent.js\";\nimport type { IJSONSchema } from \"../../../base/common/jsonSchema.js\";\nimport { Disposable } from \"../../../base/common/lifecycle.js\";\nimport * as objects from \"../../../base/common/objects.js\";\nimport { isObject, isUndefined } from \"../../../base/common/types.js\";\nimport * as nls from \"../../../nls.js\";\nimport {\n\tConfigurationScope,\n\tExtensions,\n\ttype IConfigurationDefaults,\n\ttype IConfigurationDelta,\n\ttype IConfigurationNode,\n\ttype IConfigurationRegistry,\n\tOVERRIDE_PROPERTY_REGEX,\n\tconfigurationDefaultsSchemaId,\n\tgetAllConfigurationProperties,\n\tgetDefaultValue,\n\tparseScope,\n\tvalidateProperty,\n} from \"../../../platform/configuration/common/configurationRegistry.js\";\nimport {\n\tExtensionIdentifierMap,\n\ttype IExtensionManifest,\n} from \"../../../platform/extensions/common/extensions.js\";\nimport { SyncDescriptor } from \"../../../platform/instantiation/common/descriptors.js\";\nimport {\n\ttype IJSONContributionRegistry,\n\tExtensions as JSONExtensions,\n} from \"../../../platform/jsonschemas/common/jsonContributionRegistry.js\";\nimport { Registry } from \"../../../platform/registry/common/platform.js\";\nimport {\n\tlaunchSchemaId,\n\ttasksSchemaId,\n\tworkspaceSettingsSchemaId,\n} from \"../../services/configuration/common/configuration.js\";\nimport {\n\tExtensions as ExtensionFeaturesExtensions,\n\ttype IExtensionFeatureTableRenderer,\n\ttype IExtensionFeaturesRegistry,\n\ttype IRenderedData,\n\ttype IRowData,\n\ttype ITableData,\n} from \"../../services/extensionManagement/common/extensionFeatures.js\";\nimport {\n\tExtensionsRegistry,\n\ttype IExtensionPointUser,\n} from \"../../services/extensions/common/extensionsRegistry.js\";\n\nconst jsonRegistry = Registry.as<IJSONContributionRegistry>(\n\tJSONExtensions.JSONContribution,\n);\nconst configurationRegistry = Registry.as<IConfigurationRegistry>(\n\tExtensions.Configuration,\n);\n\nconst configurationEntrySchema: IJSONSchema = {\n\ttype: \"object\",\n\tdefaultSnippets: [{ body: { title: \"\", properties: {} } }],\n\tproperties: {\n\t\ttitle: {\n\t\t\tdescription: nls.localize(\n\t\t\t\t\"vscode.extension.contributes.configuration.title\",\n\t\t\t\t\"A title for the current category of settings. This label will be rendered in the Settings editor as a subheading. If the title is the same as the extension display name, then the category will be grouped under the main extension heading.\",\n\t\t\t),\n\t\t\ttype: \"string\",\n\t\t},\n\t\torder: {\n\t\t\tdescription: nls.localize(\n\t\t\t\t\"vscode.extension.contributes.configuration.order\",\n\t\t\t\t\"When specified, gives the order of this category of settings relative to other categories.\",\n\t\t\t),\n\t\t\ttype: \"integer\",\n\t\t},\n\t\tproperties: {\n\t\t\tdescription: nls.localize(\n\t\t\t\t\"vscode.extension.contributes.configuration.properties\",\n\t\t\t\t\"Description of the configuration properties.\",\n\t\t\t),\n\t\t\ttype: \"object\",\n\t\t\tpropertyNames: {\n\t\t\t\tpattern: \"\\\\S+\",\n\t\t\t\tpatternErrorMessage: nls.localize(\n\t\t\t\t\t\"vscode.extension.contributes.configuration.property.empty\",\n\t\t\t\t\t\"Property should not be empty.\",\n\t\t\t\t),\n\t\t\t},\n\t\t\tadditionalProperties: {\n\t\t\t\tanyOf: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle: nls.localize(\n\t\t\t\t\t\t\t\"vscode.extension.contributes.configuration.properties.schema\",\n\t\t\t\t\t\t\t\"Schema of the configuration property.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\t$ref: \"http://json-schema.org/draft-07/schema#\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tscope: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tenum: [\n\t\t\t\t\t\t\t\t\t\"application\",\n\t\t\t\t\t\t\t\t\t\"machine\",\n\t\t\t\t\t\t\t\t\t\"window\",\n\t\t\t\t\t\t\t\t\t\"resource\",\n\t\t\t\t\t\t\t\t\t\"language-overridable\",\n\t\t\t\t\t\t\t\t\t\"machine-overridable\",\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tdefault: \"window\",\n\t\t\t\t\t\t\t\tenumDescriptions: [\n\t\t\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\t\t\"scope.application.description\",\n\t\t\t\t\t\t\t\t\t\t\"Configuration that can be configured only in the user settings.\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\t\t\"scope.machine.description\",\n\t\t\t\t\t\t\t\t\t\t\"Configuration that can be configured only in the user settings or only in the remote settings.\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\t\t\"scope.window.description\",\n\t\t\t\t\t\t\t\t\t\t\"Configuration that can be configured in the user, remote or workspace settings.\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\t\t\"scope.resource.description\",\n\t\t\t\t\t\t\t\t\t\t\"Configuration that can be configured in the user, remote, workspace or folder settings.\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\t\t\"scope.language-overridable.description\",\n\t\t\t\t\t\t\t\t\t\t\"Resource configuration that can be configured in language specific settings.\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\t\t\"scope.machine-overridable.description\",\n\t\t\t\t\t\t\t\t\t\t\"Machine configuration that can be configured also in workspace or folder settings.\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tmarkdownDescription: nls.localize(\n\t\t\t\t\t\t\t\t\t\"scope.description\",\n\t\t\t\t\t\t\t\t\t\"Scope in which the configuration is applicable. Available scopes are `application`, `machine`, `window`, `resource`, and `machine-overridable`.\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tenumDescriptions: {\n\t\t\t\t\t\t\t\ttype: \"array\",\n\t\t\t\t\t\t\t\titems: {\n\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\t\"scope.enumDescriptions\",\n\t\t\t\t\t\t\t\t\t\"Descriptions for enum values\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmarkdownEnumDescriptions: {\n\t\t\t\t\t\t\t\ttype: \"array\",\n\t\t\t\t\t\t\t\titems: {\n\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\t\"scope.markdownEnumDescriptions\",\n\t\t\t\t\t\t\t\t\t\"Descriptions for enum values in the markdown format.\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tenumItemLabels: {\n\t\t\t\t\t\t\t\ttype: \"array\",\n\t\t\t\t\t\t\t\titems: {\n\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tmarkdownDescription: nls.localize(\n\t\t\t\t\t\t\t\t\t\"scope.enumItemLabels\",\n\t\t\t\t\t\t\t\t\t\"Labels for enum values to be displayed in the Settings editor. When specified, the {0} values still show after the labels, but less prominently.\",\n\t\t\t\t\t\t\t\t\t\"`enum`\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmarkdownDescription: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\t\"scope.markdownDescription\",\n\t\t\t\t\t\t\t\t\t\"The description in the markdown format.\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdeprecationMessage: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\t\"scope.deprecationMessage\",\n\t\t\t\t\t\t\t\t\t\"If set, the property is marked as deprecated and the given message is shown as an explanation.\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmarkdownDeprecationMessage: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\t\"scope.markdownDeprecationMessage\",\n\t\t\t\t\t\t\t\t\t\"If set, the property is marked as deprecated and the given message is shown as an explanation in the markdown format.\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\teditPresentation: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tenum: [\"singlelineText\", \"multilineText\"],\n\t\t\t\t\t\t\t\tenumDescriptions: [\n\t\t\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\t\t\"scope.singlelineText.description\",\n\t\t\t\t\t\t\t\t\t\t\"The value will be shown in an inputbox.\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\t\t\"scope.multilineText.description\",\n\t\t\t\t\t\t\t\t\t\t\"The value will be shown in a textarea.\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tdefault: \"singlelineText\",\n\t\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\t\"scope.editPresentation\",\n\t\t\t\t\t\t\t\t\t\"When specified, controls the presentation format of the string setting.\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\torder: {\n\t\t\t\t\t\t\t\ttype: \"integer\",\n\t\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\t\"scope.order\",\n\t\t\t\t\t\t\t\t\t\"When specified, gives the order of this setting relative to other settings within the same category. Settings with an order property will be placed before settings without this property set.\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tignoreSync: {\n\t\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\t\"scope.ignoreSync\",\n\t\t\t\t\t\t\t\t\t\"When enabled, Settings Sync will not sync the user value of this configuration by default.\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t},\n\t},\n};\n\n// build up a delta across two ext points and only apply it once\nlet _configDelta: IConfigurationDelta | undefined;\n\n// BEGIN VSCode extension point `configurationDefaults`\nconst defaultConfigurationExtPoint =\n\tExtensionsRegistry.registerExtensionPoint<IConfigurationNode>({\n\t\textensionPoint: \"configurationDefaults\",\n\t\tjsonSchema: {\n\t\t\t$ref: configurationDefaultsSchemaId,\n\t\t},\n\t});\ndefaultConfigurationExtPoint.setHandler((extensions, { added, removed }) => {\n\tif (_configDelta) {\n\t\t// HIGHLY unlikely, but just in case\n\t\tconfigurationRegistry.deltaConfiguration(_configDelta);\n\t}\n\n\tconst configNow = (_configDelta = {});\n\t// schedule a HIGHLY unlikely task in case only the default configurations EXT point changes\n\tqueueMicrotask(() => {\n\t\tif (_configDelta === configNow) {\n\t\t\tconfigurationRegistry.deltaConfiguration(_configDelta);\n\t\t\t_configDelta = undefined;\n\t\t}\n\t});\n\n\tif (removed.length) {\n\t\tconst removedDefaultConfigurations =\n\t\t\tremoved.map<IConfigurationDefaults>((extension) => ({\n\t\t\t\toverrides: objects.deepClone(extension.value),\n\t\t\t\tsource: {\n\t\t\t\t\tid: extension.description.identifier.value,\n\t\t\t\t\tdisplayName: extension.description.displayName,\n\t\t\t\t},\n\t\t\t}));\n\t\t_configDelta.removedDefaults = removedDefaultConfigurations;\n\t}\n\tif (added.length) {\n\t\tconst registeredProperties =\n\t\t\tconfigurationRegistry.getConfigurationProperties();\n\t\tconst allowedScopes = [\n\t\t\tConfigurationScope.MACHINE_OVERRIDABLE,\n\t\t\tConfigurationScope.WINDOW,\n\t\t\tConfigurationScope.RESOURCE,\n\t\t\tConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t];\n\t\tconst addedDefaultConfigurations = added.map<IConfigurationDefaults>(\n\t\t\t(extension) => {\n\t\t\t\tconst overrides: IStringDictionary<any> = objects.deepClone(\n\t\t\t\t\textension.value,\n\t\t\t\t);\n\t\t\t\tfor (const key of Object.keys(overrides)) {\n\t\t\t\t\tconst registeredPropertyScheme = registeredProperties[key];\n\t\t\t\t\tif (\n\t\t\t\t\t\tregisteredPropertyScheme?.disallowConfigurationDefault\n\t\t\t\t\t) {\n\t\t\t\t\t\textension.collector.warn(\n\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\"config.property.preventDefaultConfiguration.warning\",\n\t\t\t\t\t\t\t\t\"Cannot register configuration defaults for '{0}'. This setting does not allow contributing configuration defaults.\",\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tdelete overrides[key];\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (!OVERRIDE_PROPERTY_REGEX.test(key)) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tregisteredPropertyScheme?.scope &&\n\t\t\t\t\t\t\t!allowedScopes.includes(\n\t\t\t\t\t\t\t\tregisteredPropertyScheme.scope,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\textension.collector.warn(\n\t\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\t\"config.property.defaultConfiguration.warning\",\n\t\t\t\t\t\t\t\t\t\"Cannot register configuration defaults for '{0}'. Only defaults for machine-overridable, window, resource and language overridable scoped settings are supported.\",\n\t\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdelete overrides[key];\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\toverrides,\n\t\t\t\t\tsource: {\n\t\t\t\t\t\tid: extension.description.identifier.value,\n\t\t\t\t\t\tdisplayName: extension.description.displayName,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t},\n\t\t);\n\t\t_configDelta.addedDefaults = addedDefaultConfigurations;\n\t}\n});\n// END VSCode extension point `configurationDefaults`\n\n// BEGIN VSCode extension point `configuration`\nconst configurationExtPoint =\n\tExtensionsRegistry.registerExtensionPoint<IConfigurationNode>({\n\t\textensionPoint: \"configuration\",\n\t\tdeps: [defaultConfigurationExtPoint],\n\t\tjsonSchema: {\n\t\t\tdescription: nls.localize(\n\t\t\t\t\"vscode.extension.contributes.configuration\",\n\t\t\t\t\"Contributes configuration settings.\",\n\t\t\t),\n\t\t\toneOf: [\n\t\t\t\tconfigurationEntrySchema,\n\t\t\t\t{\n\t\t\t\t\ttype: \"array\",\n\t\t\t\t\titems: configurationEntrySchema,\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t});\n\nconst extensionConfigurations: ExtensionIdentifierMap<IConfigurationNode[]> =\n\tnew ExtensionIdentifierMap<IConfigurationNode[]>();\n\nconfigurationExtPoint.setHandler((extensions, { added, removed }) => {\n\t// HIGHLY unlikely (only configuration but not defaultConfiguration EXT point changes)\n\t_configDelta ??= {};\n\n\tif (removed.length) {\n\t\tconst removedConfigurations: IConfigurationNode[] = [];\n\t\tfor (const extension of removed) {\n\t\t\tremovedConfigurations.push(\n\t\t\t\t...(extensionConfigurations.get(\n\t\t\t\t\textension.description.identifier,\n\t\t\t\t) || []),\n\t\t\t);\n\t\t\textensionConfigurations.delete(extension.description.identifier);\n\t\t}\n\t\t_configDelta.removedConfigurations = removedConfigurations;\n\t}\n\n\tconst seenProperties = new Set<string>();\n\n\tfunction handleConfiguration(\n\t\tnode: IConfigurationNode,\n\t\textension: IExtensionPointUser<any>,\n\t): IConfigurationNode {\n\t\tconst configuration = objects.deepClone(node);\n\n\t\tif (configuration.title && typeof configuration.title !== \"string\") {\n\t\t\textension.collector.error(\n\t\t\t\tnls.localize(\n\t\t\t\t\t\"invalid.title\",\n\t\t\t\t\t\"'configuration.title' must be a string\",\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\tvalidateProperties(configuration, extension);\n\n\t\tconfiguration.id = node.id || extension.description.identifier.value;\n\t\tconfiguration.extensionInfo = {\n\t\t\tid: extension.description.identifier.value,\n\t\t\tdisplayName: extension.description.displayName,\n\t\t};\n\t\tconfiguration.restrictedProperties =\n\t\t\textension.description.capabilities?.untrustedWorkspaces\n\t\t\t\t?.supported === \"limited\"\n\t\t\t\t? extension.description.capabilities?.untrustedWorkspaces\n\t\t\t\t\t\t.restrictedConfigurations\n\t\t\t\t: undefined;\n\t\tconfiguration.title =\n\t\t\tconfiguration.title ||\n\t\t\textension.description.displayName ||\n\t\t\textension.description.identifier.value;\n\t\treturn configuration;\n\t}\n\n\tfunction validateProperties(\n\t\tconfiguration: IConfigurationNode,\n\t\textension: IExtensionPointUser<any>,\n\t): void {\n\t\tconst properties = configuration.properties;\n\t\tif (properties) {\n\t\t\tif (typeof properties !== \"object\") {\n\t\t\t\textension.collector.error(\n\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\"invalid.properties\",\n\t\t\t\t\t\t\"'configuration.properties' must be an object\",\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tconfiguration.properties = {};\n\t\t\t}\n\t\t\tfor (const key in properties) {\n\t\t\t\tconst propertyConfiguration = properties[key];\n\t\t\t\tconst message = validateProperty(key, propertyConfiguration);\n\t\t\t\tif (message) {\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\textension.collector.warn(message);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (seenProperties.has(key)) {\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\textension.collector.warn(\n\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\"config.property.duplicate\",\n\t\t\t\t\t\t\t\"Cannot register '{0}'. This property is already registered.\",\n\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (!isObject(propertyConfiguration)) {\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\textension.collector.error(\n\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\"invalid.property\",\n\t\t\t\t\t\t\t\"configuration.properties property '{0}' must be an object\",\n\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tseenProperties.add(key);\n\t\t\t\tpropertyConfiguration.scope = propertyConfiguration.scope\n\t\t\t\t\t? parseScope(propertyConfiguration.scope.toString())\n\t\t\t\t\t: ConfigurationScope.WINDOW;\n\t\t\t}\n\t\t}\n\t\tconst subNodes = configuration.allOf;\n\t\tif (subNodes) {\n\t\t\textension.collector.error(\n\t\t\t\tnls.localize(\n\t\t\t\t\t\"invalid.allOf\",\n\t\t\t\t\t\"'configuration.allOf' is deprecated and should no longer be used. Instead, pass multiple configuration sections as an array to the 'configuration' contribution point.\",\n\t\t\t\t),\n\t\t\t);\n\t\t\tfor (const node of subNodes) {\n\t\t\t\tvalidateProperties(node, extension);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (added.length) {\n\t\tconst addedConfigurations: IConfigurationNode[] = [];\n\t\tfor (const extension of added) {\n\t\t\tconst configurations: IConfigurationNode[] = [];\n\t\t\tconst value = <IConfigurationNode | IConfigurationNode[]>(\n\t\t\t\textension.value\n\t\t\t);\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\tvalue.forEach((v) =>\n\t\t\t\t\tconfigurations.push(handleConfiguration(v, extension)),\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tconfigurations.push(handleConfiguration(value, extension));\n\t\t\t}\n\t\t\textensionConfigurations.set(\n\t\t\t\textension.description.identifier,\n\t\t\t\tconfigurations,\n\t\t\t);\n\t\t\taddedConfigurations.push(...configurations);\n\t\t}\n\n\t\t_configDelta.addedConfigurations = addedConfigurations;\n\t}\n\n\tconfigurationRegistry.deltaConfiguration(_configDelta);\n\t_configDelta = undefined;\n});\n// END VSCode extension point `configuration`\n\njsonRegistry.registerSchema(\"vscode://schemas/workspaceConfig\", {\n\tallowComments: true,\n\tallowTrailingCommas: true,\n\tdefault: {\n\t\tfolders: [\n\t\t\t{\n\t\t\t\tpath: \"\",\n\t\t\t},\n\t\t],\n\t\tsettings: {},\n\t},\n\trequired: [\"folders\"],\n\tproperties: {\n\t\tfolders: {\n\t\t\tminItems: 0,\n\t\t\tuniqueItems: true,\n\t\t\tdescription: nls.localize(\n\t\t\t\t\"workspaceConfig.folders.description\",\n\t\t\t\t\"List of folders to be loaded in the workspace.\",\n\t\t\t),\n\t\t\titems: {\n\t\t\t\ttype: \"object\",\n\t\t\t\tdefaultSnippets: [{ body: { path: \"$1\" } }],\n\t\t\t\toneOf: [\n\t\t\t\t\t{\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tpath: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\t\"workspaceConfig.path.description\",\n\t\t\t\t\t\t\t\t\t\"A file path. e.g. `/root/folderA` or `./folderA` for a relative path that will be resolved against the location of the workspace file.\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tname: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\t\"workspaceConfig.name.description\",\n\t\t\t\t\t\t\t\t\t\"An optional name for the folder. \",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\trequired: [\"path\"],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\turi: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\t\"workspaceConfig.uri.description\",\n\t\t\t\t\t\t\t\t\t\"URI of the folder\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tname: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\t\"workspaceConfig.name.description\",\n\t\t\t\t\t\t\t\t\t\"An optional name for the folder. \",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\trequired: [\"uri\"],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t},\n\t\tsettings: {\n\t\t\ttype: \"object\",\n\t\t\tdefault: {},\n\t\t\tdescription: nls.localize(\n\t\t\t\t\"workspaceConfig.settings.description\",\n\t\t\t\t\"Workspace settings\",\n\t\t\t),\n\t\t\t$ref: workspaceSettingsSchemaId,\n\t\t},\n\t\tlaunch: {\n\t\t\ttype: \"object\",\n\t\t\tdefault: { configurations: [], compounds: [] },\n\t\t\tdescription: nls.localize(\n\t\t\t\t\"workspaceConfig.launch.description\",\n\t\t\t\t\"Workspace launch configurations\",\n\t\t\t),\n\t\t\t$ref: launchSchemaId,\n\t\t},\n\t\ttasks: {\n\t\t\ttype: \"object\",\n\t\t\tdefault: { version: \"2.0.0\", tasks: [] },\n\t\t\tdescription: nls.localize(\n\t\t\t\t\"workspaceConfig.tasks.description\",\n\t\t\t\t\"Workspace task configurations\",\n\t\t\t),\n\t\t\t$ref: tasksSchemaId,\n\t\t},\n\t\textensions: {\n\t\t\ttype: \"object\",\n\t\t\tdefault: {},\n\t\t\tdescription: nls.localize(\n\t\t\t\t\"workspaceConfig.extensions.description\",\n\t\t\t\t\"Workspace extensions\",\n\t\t\t),\n\t\t\t$ref: \"vscode://schemas/extensions\",\n\t\t},\n\t\tremoteAuthority: {\n\t\t\ttype: \"string\",\n\t\t\tdoNotSuggest: true,\n\t\t\tdescription: nls.localize(\n\t\t\t\t\"workspaceConfig.remoteAuthority\",\n\t\t\t\t\"The remote server where the workspace is located.\",\n\t\t\t),\n\t\t},\n\t\ttransient: {\n\t\t\ttype: \"boolean\",\n\t\t\tdoNotSuggest: true,\n\t\t\tdescription: nls.localize(\n\t\t\t\t\"workspaceConfig.transient\",\n\t\t\t\t\"A transient workspace will disappear when restarting or reloading.\",\n\t\t\t),\n\t\t},\n\t},\n\terrorMessage: nls.localize(\n\t\t\"unknownWorkspaceProperty\",\n\t\t\"Unknown workspace configuration property\",\n\t),\n});\n\nclass SettingsTableRenderer\n\textends Disposable\n\timplements IExtensionFeatureTableRenderer\n{\n\treadonly type = \"table\";\n\n\tshouldRender(manifest: IExtensionManifest): boolean {\n\t\treturn !!manifest.contributes?.configuration;\n\t}\n\n\trender(manifest: IExtensionManifest): IRenderedData<ITableData> {\n\t\tconst configuration: IConfigurationNode[] = manifest.contributes\n\t\t\t?.configuration\n\t\t\t? Array.isArray(manifest.contributes.configuration)\n\t\t\t\t? manifest.contributes.configuration\n\t\t\t\t: [manifest.contributes.configuration]\n\t\t\t: [];\n\n\t\tconst properties = getAllConfigurationProperties(configuration);\n\n\t\tconst contrib = properties ? Object.keys(properties) : [];\n\t\tconst headers = [\n\t\t\tnls.localize(\"setting name\", \"ID\"),\n\t\t\tnls.localize(\"description\", \"Description\"),\n\t\t\tnls.localize(\"default\", \"Default\"),\n\t\t];\n\t\tconst rows: IRowData[][] = contrib\n\t\t\t.sort((a, b) => a.localeCompare(b))\n\t\t\t.map((key) => {\n\t\t\t\treturn [\n\t\t\t\t\tnew MarkdownString().appendMarkdown(`\\`${key}\\``),\n\t\t\t\t\tproperties[key].markdownDescription\n\t\t\t\t\t\t? new MarkdownString(\n\t\t\t\t\t\t\t\tproperties[key].markdownDescription,\n\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t: (properties[key].description ?? \"\"),\n\t\t\t\t\tnew MarkdownString().appendCodeblock(\n\t\t\t\t\t\t\"json\",\n\t\t\t\t\t\tJSON.stringify(\n\t\t\t\t\t\t\tisUndefined(properties[key].default)\n\t\t\t\t\t\t\t\t? getDefaultValue(properties[key].type)\n\t\t\t\t\t\t\t\t: properties[key].default,\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t2,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t];\n\t\t\t});\n\n\t\treturn {\n\t\t\tdata: {\n\t\t\t\theaders,\n\t\t\t\trows,\n\t\t\t},\n\t\t\tdispose: () => {},\n\t\t};\n\t}\n}\n\nRegistry.as<IExtensionFeaturesRegistry>(\n\tExtensionFeaturesExtensions.ExtensionFeaturesRegistry,\n).registerExtensionFeature({\n\tid: \"configuration\",\n\tlabel: nls.localize(\"settings\", \"Settings\"),\n\taccess: {\n\t\tcanToggle: false,\n\t},\n\trenderer: new SyncDescriptor(SettingsTableRenderer),\n});\n"],
  "mappings": "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",
  "names": []
}
