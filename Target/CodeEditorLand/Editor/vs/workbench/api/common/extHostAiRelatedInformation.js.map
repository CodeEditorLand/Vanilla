{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostAiRelatedInformation.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type {\n\tCancellationToken,\n\tRelatedInformationProvider,\n\tRelatedInformationResult,\n\tRelatedInformationType,\n} from \"vscode\";\nimport type { IExtensionDescription } from \"../../../platform/extensions/common/extensions.js\";\nimport {\n\ttype ExtHostAiRelatedInformationShape,\n\ttype IMainContext,\n\tMainContext,\n\ttype MainThreadAiRelatedInformationShape,\n} from \"./extHost.protocol.js\";\nimport { Disposable } from \"./extHostTypes.js\";\n\nexport class ExtHostRelatedInformation\n\timplements ExtHostAiRelatedInformationShape\n{\n\tprivate _relatedInformationProviders: Map<\n\t\tnumber,\n\t\tRelatedInformationProvider\n\t> = new Map();\n\tprivate _nextHandle = 0;\n\n\tprivate readonly _proxy: MainThreadAiRelatedInformationShape;\n\n\tconstructor(mainContext: IMainContext) {\n\t\tthis._proxy = mainContext.getProxy(\n\t\t\tMainContext.MainThreadAiRelatedInformation,\n\t\t);\n\t}\n\n\tasync $provideAiRelatedInformation(\n\t\thandle: number,\n\t\tquery: string,\n\t\ttoken: CancellationToken,\n\t): Promise<RelatedInformationResult[]> {\n\t\tif (this._relatedInformationProviders.size === 0) {\n\t\t\tthrow new Error(\"No related information providers registered\");\n\t\t}\n\n\t\tconst provider = this._relatedInformationProviders.get(handle);\n\t\tif (!provider) {\n\t\t\tthrow new Error(\"related information provider not found\");\n\t\t}\n\n\t\tconst result =\n\t\t\t(await provider.provideRelatedInformation(query, token)) ?? [];\n\t\treturn result;\n\t}\n\n\tgetRelatedInformation(\n\t\textension: IExtensionDescription,\n\t\tquery: string,\n\t\ttypes: RelatedInformationType[],\n\t): Promise<RelatedInformationResult[]> {\n\t\treturn this._proxy.$getAiRelatedInformation(query, types);\n\t}\n\n\tregisterRelatedInformationProvider(\n\t\textension: IExtensionDescription,\n\t\ttype: RelatedInformationType,\n\t\tprovider: RelatedInformationProvider,\n\t): Disposable {\n\t\tconst handle = this._nextHandle;\n\t\tthis._nextHandle++;\n\t\tthis._relatedInformationProviders.set(handle, provider);\n\t\tthis._proxy.$registerAiRelatedInformationProvider(handle, type);\n\t\treturn new Disposable(() => {\n\t\t\tthis._proxy.$unregisterAiRelatedInformationProvider(handle);\n\t\t\tthis._relatedInformationProviders.delete(handle);\n\t\t});\n\t}\n}\n"],
  "mappings": ";;AAYA;AAAA,EAGC;AAAA,OAEM;AACP,SAAS,kBAAkB;AAEpB,MAAM,0BAEb;AAAA,EAtBA,OAsBA;AAAA;AAAA;AAAA,EACS,+BAGJ,oBAAI,IAAI;AAAA,EACJ,cAAc;AAAA,EAEL;AAAA,EAEjB,YAAY,aAA2B;AACtC,SAAK,SAAS,YAAY;AAAA,MACzB,YAAY;AAAA,IACb;AAAA,EACD;AAAA,EAEA,MAAM,6BACL,QACA,OACA,OACsC;AACtC,QAAI,KAAK,6BAA6B,SAAS,GAAG;AACjD,YAAM,IAAI,MAAM,6CAA6C;AAAA,IAC9D;AAEA,UAAM,WAAW,KAAK,6BAA6B,IAAI,MAAM;AAC7D,QAAI,CAAC,UAAU;AACd,YAAM,IAAI,MAAM,wCAAwC;AAAA,IACzD;AAEA,UAAM,SACJ,MAAM,SAAS,0BAA0B,OAAO,KAAK,KAAM,CAAC;AAC9D,WAAO;AAAA,EACR;AAAA,EAEA,sBACC,WACA,OACA,OACsC;AACtC,WAAO,KAAK,OAAO,yBAAyB,OAAO,KAAK;AAAA,EACzD;AAAA,EAEA,mCACC,WACA,MACA,UACa;AACb,UAAM,SAAS,KAAK;AACpB,SAAK;AACL,SAAK,6BAA6B,IAAI,QAAQ,QAAQ;AACtD,SAAK,OAAO,sCAAsC,QAAQ,IAAI;AAC9D,WAAO,IAAI,WAAW,MAAM;AAC3B,WAAK,OAAO,wCAAwC,MAAM;AAC1D,WAAK,6BAA6B,OAAO,MAAM;AAAA,IAChD,CAAC;AAAA,EACF;AACD;",
  "names": []
}
