import{MainContext as n}from"./extHost.protocol.js";import{Disposable as i}from"./extHostTypes.js";class x{_relatedInformationProviders=new Map;_nextHandle=0;_proxy;constructor(t){this._proxy=t.getProxy(n.MainThreadAiRelatedInformation)}async $provideAiRelatedInformation(t,o,r){if(this._relatedInformationProviders.size===0)throw new Error("No related information providers registered");const e=this._relatedInformationProviders.get(t);if(!e)throw new Error("related information provider not found");return await e.provideRelatedInformation(o,r)??[]}getRelatedInformation(t,o,r){return this._proxy.$getAiRelatedInformation(o,r)}registerRelatedInformationProvider(t,o,r){const e=this._nextHandle;return this._nextHandle++,this._relatedInformationProviders.set(e,r),this._proxy.$registerAiRelatedInformationProvider(e,o),new i(()=>{this._proxy.$unregisterAiRelatedInformationProvider(e),this._relatedInformationProviders.delete(e)})}}export{x as ExtHostRelatedInformation};
