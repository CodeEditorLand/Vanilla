{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/cache.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport class Cache<T> {\n\tprivate static readonly enableDebugLogging = false;\n\n\tprivate readonly _data = new Map<number, readonly T[]>();\n\tprivate _idPool = 1;\n\n\tconstructor(private readonly id: string) {}\n\n\tadd(item: readonly T[]): number {\n\t\tconst id = this._idPool++;\n\t\tthis._data.set(id, item);\n\t\tthis.logDebugInfo();\n\t\treturn id;\n\t}\n\n\tget(pid: number, id: number): T | undefined {\n\t\treturn this._data.has(pid) ? this._data.get(pid)![id] : undefined;\n\t}\n\n\tdelete(id: number) {\n\t\tthis._data.delete(id);\n\t\tthis.logDebugInfo();\n\t}\n\n\tprivate logDebugInfo() {\n\t\tif (!Cache.enableDebugLogging) {\n\t\t\treturn;\n\t\t}\n\t\tconsole.log(`${this.id} cache size - ${this._data.size}`);\n\t}\n}\n"],
  "mappings": ";;AAKO,MAAM,MAAS;AAAA,EAMrB,YAA6B,IAAY;AAAZ;AAAA,EAAa;AAAA,EAX3C,OAKsB;AAAA;AAAA;AAAA,EACrB,OAAwB,qBAAqB;AAAA,EAE5B,QAAQ,oBAAI,IAA0B;AAAA,EAC/C,UAAU;AAAA,EAIlB,IAAI,MAA4B;AAC/B,UAAM,KAAK,KAAK;AAChB,SAAK,MAAM,IAAI,IAAI,IAAI;AACvB,SAAK,aAAa;AAClB,WAAO;AAAA,EACR;AAAA,EAEA,IAAI,KAAa,IAA2B;AAC3C,WAAO,KAAK,MAAM,IAAI,GAAG,IAAI,KAAK,MAAM,IAAI,GAAG,EAAG,EAAE,IAAI;AAAA,EACzD;AAAA,EAEA,OAAO,IAAY;AAClB,SAAK,MAAM,OAAO,EAAE;AACpB,SAAK,aAAa;AAAA,EACnB;AAAA,EAEQ,eAAe;AACtB,QAAI,CAAC,MAAM,oBAAoB;AAC9B;AAAA,IACD;AACA,YAAQ,IAAI,GAAG,KAAK,EAAE,iBAAiB,KAAK,MAAM,IAAI,EAAE;AAAA,EACzD;AACD;",
  "names": []
}
