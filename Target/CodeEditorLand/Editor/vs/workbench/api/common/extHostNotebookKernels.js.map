{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostNotebookKernels.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type * as vscode from \"vscode\";\nimport { asArray } from \"../../../base/common/arrays.js\";\nimport { DeferredPromise, timeout } from \"../../../base/common/async.js\";\nimport {\n\ttype CancellationToken,\n\tCancellationTokenSource,\n} from \"../../../base/common/cancellation.js\";\nimport { Emitter } from \"../../../base/common/event.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n} from \"../../../base/common/lifecycle.js\";\nimport { ResourceMap } from \"../../../base/common/map.js\";\nimport { URI, type UriComponents } from \"../../../base/common/uri.js\";\nimport {\n\tExtensionIdentifier,\n\ttype IExtensionDescription,\n} from \"../../../platform/extensions/common/extensions.js\";\nimport { ILogService } from \"../../../platform/log/common/log.js\";\nimport type {\n\tINotebookKernelSourceAction,\n\tNotebookCellExecutionState,\n} from \"../../contrib/notebook/common/notebookCommon.js\";\nimport { CellExecutionUpdateType } from \"../../contrib/notebook/common/notebookExecutionService.js\";\nimport { variablePageSize } from \"../../contrib/notebook/common/notebookKernelService.js\";\nimport { asWebviewUri } from \"../../contrib/webview/common/webview.js\";\nimport { checkProposedApiEnabled } from \"../../services/extensions/common/extensions.js\";\nimport { SerializableObjectWithBuffers } from \"../../services/extensions/common/proxyIdentifier.js\";\nimport {\n\ttype ExtHostNotebookKernelsShape,\n\ttype ICellExecuteUpdateDto,\n\ttype IMainContext,\n\ttype INotebookKernelDto2,\n\tMainContext,\n\ttype MainThreadNotebookKernelsShape,\n\ttype NotebookOutputDto,\n\ttype VariablesResult,\n} from \"./extHost.protocol.js\";\nimport {\n\tApiCommand,\n\tApiCommandArgument,\n\tApiCommandResult,\n\ttype ExtHostCommands,\n} from \"./extHostCommands.js\";\nimport type { IExtHostInitDataService } from \"./extHostInitDataService.js\";\nimport type { ExtHostNotebookController } from \"./extHostNotebook.js\";\nimport type {\n\tExtHostCell,\n\tExtHostNotebookDocument,\n} from \"./extHostNotebookDocument.js\";\nimport * as extHostTypeConverters from \"./extHostTypeConverters.js\";\nimport {\n\tNotebookCellExecutionState as ExtHostNotebookCellExecutionState,\n\tNotebookCellOutput,\n\tNotebookControllerAffinity2,\n\tNotebookVariablesRequestKind,\n} from \"./extHostTypes.js\";\n\ninterface IKernelData {\n\textensionId: ExtensionIdentifier;\n\tcontroller: vscode.NotebookController;\n\tonDidChangeSelection: Emitter<{\n\t\tselected: boolean;\n\t\tnotebook: vscode.NotebookDocument;\n\t}>;\n\tonDidReceiveMessage: Emitter<{\n\t\teditor: vscode.NotebookEditor;\n\t\tmessage: any;\n\t}>;\n\tassociatedNotebooks: ResourceMap<boolean>;\n}\n\ntype ExtHostSelectKernelArgs =\n\t| ControllerInfo\n\t| { notebookEditor: vscode.NotebookEditor }\n\t| (ControllerInfo & { notebookEditor: vscode.NotebookEditor })\n\t| undefined;\ntype SelectKernelReturnArgs =\n\t| ControllerInfo\n\t| { notebookEditorId: string }\n\t| (ControllerInfo & { notebookEditorId: string })\n\t| undefined;\ntype ControllerInfo = { id: string; extension: string };\n\nexport class ExtHostNotebookKernels implements ExtHostNotebookKernelsShape {\n\tprivate readonly _proxy: MainThreadNotebookKernelsShape;\n\tprivate readonly _activeExecutions =\n\t\tnew ResourceMap<NotebookCellExecutionTask>();\n\tprivate readonly _activeNotebookExecutions = new ResourceMap<\n\t\t[NotebookExecutionTask, IDisposable]\n\t>();\n\n\tprivate _kernelDetectionTask = new Map<\n\t\tnumber,\n\t\tvscode.NotebookControllerDetectionTask\n\t>();\n\tprivate _kernelDetectionTaskHandlePool = 0;\n\n\tprivate _kernelSourceActionProviders = new Map<\n\t\tnumber,\n\t\tvscode.NotebookKernelSourceActionProvider\n\t>();\n\tprivate _kernelSourceActionProviderHandlePool = 0;\n\n\tprivate readonly _kernelData = new Map<number, IKernelData>();\n\tprivate _handlePool = 0;\n\n\tprivate readonly _onDidChangeCellExecutionState =\n\t\tnew Emitter<vscode.NotebookCellExecutionStateChangeEvent>();\n\treadonly onDidChangeNotebookCellExecutionState =\n\t\tthis._onDidChangeCellExecutionState.event;\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\tprivate readonly _initData: IExtHostInitDataService,\n\t\tprivate readonly _extHostNotebook: ExtHostNotebookController,\n\t\tprivate _commands: ExtHostCommands,\n\t\t@ILogService private readonly _logService: ILogService,\n\t) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadNotebookKernels);\n\n\t\t// todo@rebornix @joyceerhl: move to APICommands once stabilized.\n\t\tconst selectKernelApiCommand = new ApiCommand(\n\t\t\t'notebook.selectKernel',\n\t\t\t'_notebook.selectKernel',\n\t\t\t'Trigger kernel picker for specified notebook editor widget',\n\t\t\t[\n\t\t\t\tnew ApiCommandArgument<ExtHostSelectKernelArgs, SelectKernelReturnArgs>('options', 'Select kernel options', v => true, (v: ExtHostSelectKernelArgs) => {\n\t\t\t\t\tif (v && 'notebookEditor' in v && 'id' in v) {\n\t\t\t\t\t\tconst notebookEditorId = this._extHostNotebook.getIdByEditor(v.notebookEditor);\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tid: v.id, extension: v.extension, notebookEditorId\n\t\t\t\t\t\t};\n\t\t\t\t\t} else if (v && 'notebookEditor' in v) {\n\t\t\t\t\t\tconst notebookEditorId = this._extHostNotebook.getIdByEditor(v.notebookEditor);\n\t\t\t\t\t\tif (notebookEditorId === undefined) {\n\t\t\t\t\t\t\tthrow new Error(`Cannot invoke 'notebook.selectKernel' for unrecognized notebook editor ${v.notebookEditor.notebook.uri.toString()}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn { notebookEditorId };\n\t\t\t\t\t}\n\t\t\t\t\treturn v;\n\t\t\t\t})\n\t\t\t],\n\t\t\tApiCommandResult.Void);\n\n\t\tconst requestKernelVariablesApiCommand = new ApiCommand(\n\t\t\t'vscode.executeNotebookVariableProvider',\n\t\t\t'_executeNotebookVariableProvider',\n\t\t\t'Execute notebook variable provider',\n\t\t\t[ApiCommandArgument.Uri],\n\t\t\tnew ApiCommandResult<VariablesResult[], vscode.VariablesResult[]>('A promise that resolves to an array of variables', (value, apiArgs) => {\n\t\t\t\treturn value.map(variable => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvariable: {\n\t\t\t\t\t\t\tname: variable.name,\n\t\t\t\t\t\t\tvalue: variable.value,\n\t\t\t\t\t\t\texpression: variable.expression,\n\t\t\t\t\t\t\ttype: variable.type,\n\t\t\t\t\t\t\tlanguage: variable.language\n\t\t\t\t\t\t},\n\t\t\t\t\t\thasNamedChildren: variable.hasNamedChildren,\n\t\t\t\t\t\tindexedChildrenCount: variable.indexedChildrenCount\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t})\n\t\t);\n\t\tthis._commands.registerApiCommand(selectKernelApiCommand);\n\t\tthis._commands.registerApiCommand(requestKernelVariablesApiCommand);\n\t}\n\n\tcreateNotebookController(\n\t\textension: IExtensionDescription,\n\t\tid: string,\n\t\tviewType: string,\n\t\tlabel: string,\n\t\thandler?: (\n\t\t\tcells: vscode.NotebookCell[],\n\t\t\tnotebook: vscode.NotebookDocument,\n\t\t\tcontroller: vscode.NotebookController,\n\t\t) => void | Thenable<void>,\n\t\tpreloads?: vscode.NotebookRendererScript[],\n\t): vscode.NotebookController {\n\t\tfor (const data of this._kernelData.values()) {\n\t\t\tif (\n\t\t\t\tdata.controller.id === id &&\n\t\t\t\tExtensionIdentifier.equals(\n\t\t\t\t\textension.identifier,\n\t\t\t\t\tdata.extensionId,\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`notebook controller with id '${id}' ALREADY exist`,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tconst handle = this._handlePool++;\n\t\tconst that = this;\n\n\t\tthis._logService.trace(\n\t\t\t`NotebookController[${handle}], CREATED by ${extension.identifier.value}, ${id}`,\n\t\t);\n\n\t\tconst _defaultExecutHandler = () =>\n\t\t\tconsole.warn(\n\t\t\t\t`NO execute handler from notebook controller '${data.id}' of extension: '${extension.identifier}'`,\n\t\t\t);\n\n\t\tlet isDisposed = false;\n\n\t\tconst onDidChangeSelection = new Emitter<{\n\t\t\tselected: boolean;\n\t\t\tnotebook: vscode.NotebookDocument;\n\t\t}>();\n\t\tconst onDidReceiveMessage = new Emitter<{\n\t\t\teditor: vscode.NotebookEditor;\n\t\t\tmessage: any;\n\t\t}>();\n\n\t\tconst data: INotebookKernelDto2 = {\n\t\t\tid: createKernelId(extension.identifier, id),\n\t\t\tnotebookType: viewType,\n\t\t\textensionId: extension.identifier,\n\t\t\textensionLocation: extension.extensionLocation,\n\t\t\tlabel: label || extension.identifier.value,\n\t\t\tpreloads: preloads\n\t\t\t\t? preloads.map(\n\t\t\t\t\t\textHostTypeConverters.NotebookRendererScript.from,\n\t\t\t\t\t)\n\t\t\t\t: [],\n\t\t};\n\n\t\t//\n\t\tlet _executeHandler = handler ?? _defaultExecutHandler;\n\t\tlet _interruptHandler:\n\t\t\t| ((\n\t\t\t\t\tthis: vscode.NotebookController,\n\t\t\t\t\tnotebook: vscode.NotebookDocument,\n\t\t\t  ) => void | Thenable<void>)\n\t\t\t| undefined;\n\t\tlet _variableProvider: vscode.NotebookVariableProvider | undefined;\n\n\t\tthis._proxy.$addKernel(handle, data).catch((err) => {\n\t\t\t// this can happen when a kernel with that ID is already registered\n\t\t\tconsole.log(err);\n\t\t\tisDisposed = true;\n\t\t});\n\n\t\t// update: all setters write directly into the dto object\n\t\t// and trigger an update. the actual update will only happen\n\t\t// once per event loop execution\n\t\tlet tokenPool = 0;\n\t\tconst _update = () => {\n\t\t\tif (isDisposed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst myToken = ++tokenPool;\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (myToken === tokenPool) {\n\t\t\t\t\tthis._proxy.$updateKernel(handle, data);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// notebook documents that are associated to this controller\n\t\tconst associatedNotebooks = new ResourceMap<boolean>();\n\n\t\tconst controller: vscode.NotebookController = {\n\t\t\tget id() {\n\t\t\t\treturn id;\n\t\t\t},\n\t\t\tget notebookType() {\n\t\t\t\treturn data.notebookType;\n\t\t\t},\n\t\t\tonDidChangeSelectedNotebooks: onDidChangeSelection.event,\n\t\t\tget label() {\n\t\t\t\treturn data.label;\n\t\t\t},\n\t\t\tset label(value) {\n\t\t\t\tdata.label = value ?? extension.displayName ?? extension.name;\n\t\t\t\t_update();\n\t\t\t},\n\t\t\tget detail() {\n\t\t\t\treturn data.detail ?? \"\";\n\t\t\t},\n\t\t\tset detail(value) {\n\t\t\t\tdata.detail = value;\n\t\t\t\t_update();\n\t\t\t},\n\t\t\tget description() {\n\t\t\t\treturn data.description ?? \"\";\n\t\t\t},\n\t\t\tset description(value) {\n\t\t\t\tdata.description = value;\n\t\t\t\t_update();\n\t\t\t},\n\t\t\tget supportedLanguages() {\n\t\t\t\treturn data.supportedLanguages;\n\t\t\t},\n\t\t\tset supportedLanguages(value) {\n\t\t\t\tdata.supportedLanguages = value;\n\t\t\t\t_update();\n\t\t\t},\n\t\t\tget supportsExecutionOrder() {\n\t\t\t\treturn data.supportsExecutionOrder ?? false;\n\t\t\t},\n\t\t\tset supportsExecutionOrder(value) {\n\t\t\t\tdata.supportsExecutionOrder = value;\n\t\t\t\t_update();\n\t\t\t},\n\t\t\tget rendererScripts() {\n\t\t\t\treturn data.preloads\n\t\t\t\t\t? data.preloads.map(\n\t\t\t\t\t\t\textHostTypeConverters.NotebookRendererScript.to,\n\t\t\t\t\t\t)\n\t\t\t\t\t: [];\n\t\t\t},\n\t\t\tget executeHandler() {\n\t\t\t\treturn _executeHandler;\n\t\t\t},\n\t\t\tset executeHandler(value) {\n\t\t\t\t_executeHandler = value ?? _defaultExecutHandler;\n\t\t\t},\n\t\t\tget interruptHandler() {\n\t\t\t\treturn _interruptHandler;\n\t\t\t},\n\t\t\tset interruptHandler(value) {\n\t\t\t\t_interruptHandler = value;\n\t\t\t\tdata.supportsInterrupt = Boolean(value);\n\t\t\t\t_update();\n\t\t\t},\n\t\t\tset variableProvider(value) {\n\t\t\t\tcheckProposedApiEnabled(extension, \"notebookVariableProvider\");\n\t\t\t\t_variableProvider = value;\n\t\t\t\tdata.hasVariableProvider = !!value;\n\t\t\t\tvalue?.onDidChangeVariables((e) =>\n\t\t\t\t\tthat._proxy.$variablesUpdated(e.uri),\n\t\t\t\t);\n\t\t\t\t_update();\n\t\t\t},\n\t\t\tget variableProvider() {\n\t\t\t\treturn _variableProvider;\n\t\t\t},\n\t\t\tcreateNotebookCellExecution(cell) {\n\t\t\t\tif (isDisposed) {\n\t\t\t\t\tthrow new Error(\"notebook controller is DISPOSED\");\n\t\t\t\t}\n\t\t\t\tif (!associatedNotebooks.has(cell.notebook.uri)) {\n\t\t\t\t\tthat._logService.trace(\n\t\t\t\t\t\t`NotebookController[${handle}] NOT associated to notebook, associated to THESE notebooks:`,\n\t\t\t\t\t\tArray.from(associatedNotebooks.keys()).map((u) =>\n\t\t\t\t\t\t\tu.toString(),\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`notebook controller is NOT associated to notebook: ${cell.notebook.uri.toString()}`,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn that._createNotebookCellExecution(\n\t\t\t\t\tcell,\n\t\t\t\t\tcreateKernelId(extension.identifier, this.id),\n\t\t\t\t);\n\t\t\t},\n\t\t\tcreateNotebookExecution(notebook) {\n\t\t\t\tcheckProposedApiEnabled(extension, \"notebookExecution\");\n\t\t\t\tif (isDisposed) {\n\t\t\t\t\tthrow new Error(\"notebook controller is DISPOSED\");\n\t\t\t\t}\n\t\t\t\tif (!associatedNotebooks.has(notebook.uri)) {\n\t\t\t\t\tthat._logService.trace(\n\t\t\t\t\t\t`NotebookController[${handle}] NOT associated to notebook, associated to THESE notebooks:`,\n\t\t\t\t\t\tArray.from(associatedNotebooks.keys()).map((u) =>\n\t\t\t\t\t\t\tu.toString(),\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`notebook controller is NOT associated to notebook: ${notebook.uri.toString()}`,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn that._createNotebookExecution(\n\t\t\t\t\tnotebook,\n\t\t\t\t\tcreateKernelId(extension.identifier, this.id),\n\t\t\t\t);\n\t\t\t},\n\t\t\tdispose: () => {\n\t\t\t\tif (!isDisposed) {\n\t\t\t\t\tthis._logService.trace(\n\t\t\t\t\t\t`NotebookController[${handle}], DISPOSED`,\n\t\t\t\t\t);\n\t\t\t\t\tisDisposed = true;\n\t\t\t\t\tthis._kernelData.delete(handle);\n\t\t\t\t\tonDidChangeSelection.dispose();\n\t\t\t\t\tonDidReceiveMessage.dispose();\n\t\t\t\t\tthis._proxy.$removeKernel(handle);\n\t\t\t\t}\n\t\t\t},\n\t\t\t// --- priority\n\t\t\tupdateNotebookAffinity(notebook, priority) {\n\t\t\t\tif (priority === NotebookControllerAffinity2.Hidden) {\n\t\t\t\t\t// This api only adds an extra enum value, the function is the same, so just gate on the new value being passed\n\t\t\t\t\t// for proposedAPI check.\n\t\t\t\t\tcheckProposedApiEnabled(\n\t\t\t\t\t\textension,\n\t\t\t\t\t\t\"notebookControllerAffinityHidden\",\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tthat._proxy.$updateNotebookPriority(\n\t\t\t\t\thandle,\n\t\t\t\t\tnotebook.uri,\n\t\t\t\t\tpriority,\n\t\t\t\t);\n\t\t\t},\n\t\t\t// --- ipc\n\t\t\tonDidReceiveMessage: onDidReceiveMessage.event,\n\t\t\tpostMessage(message, editor) {\n\t\t\t\tcheckProposedApiEnabled(extension, \"notebookMessaging\");\n\t\t\t\treturn that._proxy.$postMessage(\n\t\t\t\t\thandle,\n\t\t\t\t\teditor && that._extHostNotebook.getIdByEditor(editor),\n\t\t\t\t\tmessage,\n\t\t\t\t);\n\t\t\t},\n\t\t\tasWebviewUri(uri: URI) {\n\t\t\t\tcheckProposedApiEnabled(extension, \"notebookMessaging\");\n\t\t\t\treturn asWebviewUri(uri, that._initData.remote);\n\t\t\t},\n\t\t};\n\n\t\tthis._kernelData.set(handle, {\n\t\t\textensionId: extension.identifier,\n\t\t\tcontroller,\n\t\t\tonDidReceiveMessage,\n\t\t\tonDidChangeSelection,\n\t\t\tassociatedNotebooks,\n\t\t});\n\t\treturn controller;\n\t}\n\n\tgetIdByController(controller: vscode.NotebookController) {\n\t\tfor (const [_, candidate] of this._kernelData) {\n\t\t\tif (candidate.controller === controller) {\n\t\t\t\treturn createKernelId(candidate.extensionId, controller.id);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tcreateNotebookControllerDetectionTask(\n\t\textension: IExtensionDescription,\n\t\tviewType: string,\n\t): vscode.NotebookControllerDetectionTask {\n\t\tconst handle = this._kernelDetectionTaskHandlePool++;\n\n\t\tthis._logService.trace(\n\t\t\t`NotebookControllerDetectionTask[${handle}], CREATED by ${extension.identifier.value}`,\n\t\t);\n\t\tthis._proxy.$addKernelDetectionTask(handle, viewType);\n\n\t\tconst detectionTask: vscode.NotebookControllerDetectionTask = {\n\t\t\tdispose: () => {\n\t\t\t\tthis._kernelDetectionTask.delete(handle);\n\t\t\t\tthis._proxy.$removeKernelDetectionTask(handle);\n\t\t\t},\n\t\t};\n\n\t\tthis._kernelDetectionTask.set(handle, detectionTask);\n\t\treturn detectionTask;\n\t}\n\n\tregisterKernelSourceActionProvider(\n\t\textension: IExtensionDescription,\n\t\tviewType: string,\n\t\tprovider: vscode.NotebookKernelSourceActionProvider,\n\t) {\n\t\tconst handle = this._kernelSourceActionProviderHandlePool++;\n\t\tconst eventHandle =\n\t\t\ttypeof provider.onDidChangeNotebookKernelSourceActions ===\n\t\t\t\"function\"\n\t\t\t\t? handle\n\t\t\t\t: undefined;\n\n\t\tthis._kernelSourceActionProviders.set(handle, provider);\n\t\tthis._logService.trace(\n\t\t\t`NotebookKernelSourceActionProvider[${handle}], CREATED by ${extension.identifier.value}`,\n\t\t);\n\t\tthis._proxy.$addKernelSourceActionProvider(handle, handle, viewType);\n\n\t\tlet subscription: vscode.Disposable | undefined;\n\t\tif (eventHandle !== undefined) {\n\t\t\tsubscription = provider.onDidChangeNotebookKernelSourceActions!(\n\t\t\t\t(_) =>\n\t\t\t\t\tthis._proxy.$emitNotebookKernelSourceActionsChangeEvent(\n\t\t\t\t\t\teventHandle,\n\t\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tthis._kernelSourceActionProviders.delete(handle);\n\t\t\t\tthis._proxy.$removeKernelSourceActionProvider(handle, handle);\n\t\t\t\tsubscription?.dispose();\n\t\t\t},\n\t\t};\n\t}\n\n\tasync $provideKernelSourceActions(\n\t\thandle: number,\n\t\ttoken: CancellationToken,\n\t): Promise<INotebookKernelSourceAction[]> {\n\t\tconst provider = this._kernelSourceActionProviders.get(handle);\n\t\tif (provider) {\n\t\t\tconst disposables = new DisposableStore();\n\t\t\tconst ret =\n\t\t\t\tawait provider.provideNotebookKernelSourceActions(token);\n\t\t\treturn (ret ?? []).map((item) =>\n\t\t\t\textHostTypeConverters.NotebookKernelSourceAction.from(\n\t\t\t\t\titem,\n\t\t\t\t\tthis._commands.converter,\n\t\t\t\t\tdisposables,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t\treturn [];\n\t}\n\n\t$acceptNotebookAssociation(\n\t\thandle: number,\n\t\turi: UriComponents,\n\t\tvalue: boolean,\n\t): void {\n\t\tconst obj = this._kernelData.get(handle);\n\t\tif (obj) {\n\t\t\t// update data structure\n\t\t\tconst notebook = this._extHostNotebook.getNotebookDocument(\n\t\t\t\tURI.revive(uri),\n\t\t\t)!;\n\t\t\tif (value) {\n\t\t\t\tobj.associatedNotebooks.set(notebook.uri, true);\n\t\t\t} else {\n\t\t\t\tobj.associatedNotebooks.delete(notebook.uri);\n\t\t\t}\n\t\t\tthis._logService.trace(\n\t\t\t\t`NotebookController[${handle}] ASSOCIATE notebook`,\n\t\t\t\tnotebook.uri.toString(),\n\t\t\t\tvalue,\n\t\t\t);\n\t\t\t// send event\n\t\t\tobj.onDidChangeSelection.fire({\n\t\t\t\tselected: value,\n\t\t\t\tnotebook: notebook.apiNotebook,\n\t\t\t});\n\t\t}\n\t}\n\n\tasync $executeCells(\n\t\thandle: number,\n\t\turi: UriComponents,\n\t\thandles: number[],\n\t): Promise<void> {\n\t\tconst obj = this._kernelData.get(handle);\n\t\tif (!obj) {\n\t\t\t// extension can dispose kernels in the meantime\n\t\t\treturn;\n\t\t}\n\t\tconst document = this._extHostNotebook.getNotebookDocument(\n\t\t\tURI.revive(uri),\n\t\t);\n\t\tconst cells: vscode.NotebookCell[] = [];\n\t\tfor (const cellHandle of handles) {\n\t\t\tconst cell = document.getCell(cellHandle);\n\t\t\tif (cell) {\n\t\t\t\tcells.push(cell.apiCell);\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tthis._logService.trace(\n\t\t\t\t`NotebookController[${handle}] EXECUTE cells`,\n\t\t\t\tdocument.uri.toString(),\n\t\t\t\tcells.length,\n\t\t\t);\n\t\t\tawait obj.controller.executeHandler.call(\n\t\t\t\tobj.controller,\n\t\t\t\tcells,\n\t\t\t\tdocument.apiNotebook,\n\t\t\t\tobj.controller,\n\t\t\t);\n\t\t} catch (err) {\n\t\t\t//\n\t\t\tthis._logService.error(\n\t\t\t\t`NotebookController[${handle}] execute cells FAILED`,\n\t\t\t\terr,\n\t\t\t);\n\t\t\tconsole.error(err);\n\t\t}\n\t}\n\n\tasync $cancelCells(\n\t\thandle: number,\n\t\turi: UriComponents,\n\t\thandles: number[],\n\t): Promise<void> {\n\t\tconst obj = this._kernelData.get(handle);\n\t\tif (!obj) {\n\t\t\t// extension can dispose kernels in the meantime\n\t\t\treturn;\n\t\t}\n\n\t\t// cancel or interrupt depends on the controller. When an interrupt handler is used we\n\t\t// don't trigger the cancelation token of executions.\n\t\tconst document = this._extHostNotebook.getNotebookDocument(\n\t\t\tURI.revive(uri),\n\t\t);\n\t\tif (obj.controller.interruptHandler) {\n\t\t\tawait obj.controller.interruptHandler.call(\n\t\t\t\tobj.controller,\n\t\t\t\tdocument.apiNotebook,\n\t\t\t);\n\t\t} else {\n\t\t\tfor (const cellHandle of handles) {\n\t\t\t\tconst cell = document.getCell(cellHandle);\n\t\t\t\tif (cell) {\n\t\t\t\t\tthis._activeExecutions.get(cell.uri)?.cancel();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (obj.controller.interruptHandler) {\n\t\t\t// If we're interrupting all cells, we also need to cancel the notebook level execution.\n\t\t\tconst items = this._activeNotebookExecutions.get(document.uri);\n\t\t\tthis._activeNotebookExecutions.delete(document.uri);\n\t\t\tif (handles.length && Array.isArray(items) && items.length) {\n\t\t\t\titems.forEach((d) => d.dispose());\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate id = 0;\n\tprivate variableStore: Record<string, vscode.Variable> = {};\n\n\tasync $provideVariables(\n\t\thandle: number,\n\t\trequestId: string,\n\t\tnotebookUri: UriComponents,\n\t\tparentId: number | undefined,\n\t\tkind: \"named\" | \"indexed\",\n\t\tstart: number,\n\t\ttoken: CancellationToken,\n\t): Promise<void> {\n\t\tconst obj = this._kernelData.get(handle);\n\t\tif (!obj) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst document = this._extHostNotebook.getNotebookDocument(\n\t\t\tURI.revive(notebookUri),\n\t\t);\n\t\tconst variableProvider = obj.controller.variableProvider;\n\t\tif (!variableProvider) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet parent: vscode.Variable | undefined;\n\t\tif (parentId !== undefined) {\n\t\t\tparent = this.variableStore[parentId];\n\t\t\tif (!parent) {\n\t\t\t\t// request for unknown parent\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\t// root request, clear store\n\t\t\tthis.variableStore = {};\n\t\t}\n\n\t\tconst requestKind =\n\t\t\tkind === \"named\"\n\t\t\t\t? NotebookVariablesRequestKind.Named\n\t\t\t\t: NotebookVariablesRequestKind.Indexed;\n\t\tconst variableResults = variableProvider.provideVariables(\n\t\t\tdocument.apiNotebook,\n\t\t\tparent,\n\t\t\trequestKind,\n\t\t\tstart,\n\t\t\ttoken,\n\t\t);\n\n\t\tlet resultCount = 0;\n\t\tfor await (const result of variableResults) {\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst variable = {\n\t\t\t\tid: this.id++,\n\t\t\t\tname: result.variable.name,\n\t\t\t\tvalue: result.variable.value,\n\t\t\t\ttype: result.variable.type,\n\t\t\t\tinterfaces: result.variable.interfaces,\n\t\t\t\tlanguage: result.variable.language,\n\t\t\t\texpression: result.variable.expression,\n\t\t\t\thasNamedChildren: result.hasNamedChildren,\n\t\t\t\tindexedChildrenCount: result.indexedChildrenCount,\n\t\t\t\textensionId: obj.extensionId.value,\n\t\t\t};\n\t\t\tthis.variableStore[variable.id] = result.variable;\n\t\t\tthis._proxy.$receiveVariable(requestId, variable);\n\n\t\t\tif (resultCount++ >= variablePageSize) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\t$acceptKernelMessageFromRenderer(\n\t\thandle: number,\n\t\teditorId: string,\n\t\tmessage: any,\n\t): void {\n\t\tconst obj = this._kernelData.get(handle);\n\t\tif (!obj) {\n\t\t\t// extension can dispose kernels in the meantime\n\t\t\treturn;\n\t\t}\n\n\t\tconst editor = this._extHostNotebook.getEditorById(editorId);\n\t\tobj.onDidReceiveMessage.fire(\n\t\t\tObject.freeze({ editor: editor.apiEditor, message }),\n\t\t);\n\t}\n\n\t$cellExecutionChanged(\n\t\turi: UriComponents,\n\t\tcellHandle: number,\n\t\tstate: NotebookCellExecutionState | undefined,\n\t): void {\n\t\tconst document = this._extHostNotebook.getNotebookDocument(\n\t\t\tURI.revive(uri),\n\t\t);\n\t\tconst cell = document.getCell(cellHandle);\n\t\tif (cell) {\n\t\t\tconst newState = state\n\t\t\t\t? extHostTypeConverters.NotebookCellExecutionState.to(state)\n\t\t\t\t: ExtHostNotebookCellExecutionState.Idle;\n\t\t\tif (newState !== undefined) {\n\t\t\t\tthis._onDidChangeCellExecutionState.fire({\n\t\t\t\t\tcell: cell.apiCell,\n\t\t\t\t\tstate: newState,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\t// ---\n\n\t_createNotebookCellExecution(\n\t\tcell: vscode.NotebookCell,\n\t\tcontrollerId: string,\n\t): vscode.NotebookCellExecution {\n\t\tif (cell.index < 0) {\n\t\t\tthrow new Error(\n\t\t\t\t\"CANNOT execute cell that has been REMOVED from notebook\",\n\t\t\t);\n\t\t}\n\t\tconst notebook = this._extHostNotebook.getNotebookDocument(\n\t\t\tcell.notebook.uri,\n\t\t);\n\t\tconst cellObj = notebook.getCellFromApiCell(cell);\n\t\tif (!cellObj) {\n\t\t\tthrow new Error(\"invalid cell\");\n\t\t}\n\t\tif (this._activeExecutions.has(cellObj.uri)) {\n\t\t\tthrow new Error(`duplicate execution for ${cellObj.uri}`);\n\t\t}\n\t\tconst execution = new NotebookCellExecutionTask(\n\t\t\tcontrollerId,\n\t\t\tcellObj,\n\t\t\tthis._proxy,\n\t\t);\n\t\tthis._activeExecutions.set(cellObj.uri, execution);\n\t\tconst listener = execution.onDidChangeState(() => {\n\t\t\tif (execution.state === NotebookCellExecutionTaskState.Resolved) {\n\t\t\t\texecution.dispose();\n\t\t\t\tlistener.dispose();\n\t\t\t\tthis._activeExecutions.delete(cellObj.uri);\n\t\t\t}\n\t\t});\n\t\treturn execution.asApiObject();\n\t}\n\n\t// ---\n\n\t_createNotebookExecution(\n\t\tnb: vscode.NotebookDocument,\n\t\tcontrollerId: string,\n\t): vscode.NotebookExecution {\n\t\tconst notebook = this._extHostNotebook.getNotebookDocument(nb.uri);\n\t\tconst runningCell = nb.getCells().find((cell) => {\n\t\t\tconst apiCell = notebook.getCellFromApiCell(cell);\n\t\t\treturn apiCell && this._activeExecutions.has(apiCell.uri);\n\t\t});\n\t\tif (runningCell) {\n\t\t\tthrow new Error(\n\t\t\t\t`duplicate cell execution for ${runningCell.document.uri}`,\n\t\t\t);\n\t\t}\n\t\tif (this._activeNotebookExecutions.has(notebook.uri)) {\n\t\t\tthrow new Error(`duplicate notebook execution for ${notebook.uri}`);\n\t\t}\n\t\tconst execution = new NotebookExecutionTask(\n\t\t\tcontrollerId,\n\t\t\tnotebook,\n\t\t\tthis._proxy,\n\t\t);\n\t\tconst listener = execution.onDidChangeState(() => {\n\t\t\tif (execution.state === NotebookExecutionTaskState.Resolved) {\n\t\t\t\texecution.dispose();\n\t\t\t\tlistener.dispose();\n\t\t\t\tthis._activeNotebookExecutions.delete(notebook.uri);\n\t\t\t}\n\t\t});\n\t\tthis._activeNotebookExecutions.set(notebook.uri, [execution, listener]);\n\t\treturn execution.asApiObject();\n\t}\n}\n\nenum NotebookCellExecutionTaskState {\n\tInit = 0,\n\tStarted = 1,\n\tResolved = 2,\n}\n\nclass NotebookCellExecutionTask extends Disposable {\n\tprivate static HANDLE = 0;\n\tprivate _handle = NotebookCellExecutionTask.HANDLE++;\n\n\tprivate _onDidChangeState = new Emitter<void>();\n\treadonly onDidChangeState = this._onDidChangeState.event;\n\n\tprivate _state = NotebookCellExecutionTaskState.Init;\n\tget state(): NotebookCellExecutionTaskState {\n\t\treturn this._state;\n\t}\n\n\tprivate readonly _tokenSource = this._register(\n\t\tnew CancellationTokenSource(),\n\t);\n\n\tprivate readonly _collector: TimeoutBasedCollector<ICellExecuteUpdateDto>;\n\n\tprivate _executionOrder: number | undefined;\n\n\tconstructor(\n\t\tcontrollerId: string,\n\t\tprivate readonly _cell: ExtHostCell,\n\t\tprivate readonly _proxy: MainThreadNotebookKernelsShape,\n\t) {\n\t\tsuper();\n\n\t\tthis._collector = new TimeoutBasedCollector(10, (updates) =>\n\t\t\tthis.update(updates),\n\t\t);\n\n\t\tthis._executionOrder = _cell.internalMetadata.executionOrder;\n\t\tthis._proxy.$createExecution(\n\t\t\tthis._handle,\n\t\t\tcontrollerId,\n\t\t\tthis._cell.notebook.uri,\n\t\t\tthis._cell.handle,\n\t\t);\n\t}\n\n\tcancel(): void {\n\t\tthis._tokenSource.cancel();\n\t}\n\n\tprivate async updateSoon(update: ICellExecuteUpdateDto): Promise<void> {\n\t\tawait this._collector.addItem(update);\n\t}\n\n\tprivate async update(\n\t\tupdate: ICellExecuteUpdateDto | ICellExecuteUpdateDto[],\n\t): Promise<void> {\n\t\tconst updates = Array.isArray(update) ? update : [update];\n\t\treturn this._proxy.$updateExecution(\n\t\t\tthis._handle,\n\t\t\tnew SerializableObjectWithBuffers(updates),\n\t\t);\n\t}\n\n\tprivate verifyStateForOutput() {\n\t\tif (this._state === NotebookCellExecutionTaskState.Init) {\n\t\t\tthrow new Error(\"Must call start before modifying cell output\");\n\t\t}\n\n\t\tif (this._state === NotebookCellExecutionTaskState.Resolved) {\n\t\t\tthrow new Error(\"Cannot modify cell output after calling resolve\");\n\t\t}\n\t}\n\n\tprivate cellIndexToHandle(\n\t\tcellOrCellIndex: vscode.NotebookCell | undefined,\n\t): number {\n\t\tlet cell: ExtHostCell | undefined = this._cell;\n\t\tif (cellOrCellIndex) {\n\t\t\tcell = this._cell.notebook.getCellFromApiCell(cellOrCellIndex);\n\t\t}\n\t\tif (!cell) {\n\t\t\tthrow new Error(\"INVALID cell\");\n\t\t}\n\t\treturn cell.handle;\n\t}\n\n\tprivate validateAndConvertOutputs(\n\t\titems: vscode.NotebookCellOutput[],\n\t): NotebookOutputDto[] {\n\t\treturn items.map((output) => {\n\t\t\tconst newOutput = NotebookCellOutput.ensureUniqueMimeTypes(\n\t\t\t\toutput.items,\n\t\t\t\ttrue,\n\t\t\t);\n\t\t\tif (newOutput === output.items) {\n\t\t\t\treturn extHostTypeConverters.NotebookCellOutput.from(output);\n\t\t\t}\n\t\t\treturn extHostTypeConverters.NotebookCellOutput.from({\n\t\t\t\titems: newOutput,\n\t\t\t\tid: output.id,\n\t\t\t\tmetadata: output.metadata,\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate async updateOutputs(\n\t\toutputs: vscode.NotebookCellOutput | vscode.NotebookCellOutput[],\n\t\tcell: vscode.NotebookCell | undefined,\n\t\tappend: boolean,\n\t): Promise<void> {\n\t\tconst handle = this.cellIndexToHandle(cell);\n\t\tconst outputDtos = this.validateAndConvertOutputs(asArray(outputs));\n\t\treturn this.updateSoon({\n\t\t\teditType: CellExecutionUpdateType.Output,\n\t\t\tcellHandle: handle,\n\t\t\tappend,\n\t\t\toutputs: outputDtos,\n\t\t});\n\t}\n\n\tprivate async updateOutputItems(\n\t\titems: vscode.NotebookCellOutputItem | vscode.NotebookCellOutputItem[],\n\t\toutput: vscode.NotebookCellOutput,\n\t\tappend: boolean,\n\t): Promise<void> {\n\t\titems = NotebookCellOutput.ensureUniqueMimeTypes(asArray(items), true);\n\t\treturn this.updateSoon({\n\t\t\teditType: CellExecutionUpdateType.OutputItems,\n\t\t\titems: items.map(extHostTypeConverters.NotebookCellOutputItem.from),\n\t\t\toutputId: output.id,\n\t\t\tappend,\n\t\t});\n\t}\n\n\tasApiObject(): vscode.NotebookCellExecution {\n\t\tconst that = this;\n\t\tconst result: vscode.NotebookCellExecution = {\n\t\t\tget token() {\n\t\t\t\treturn that._tokenSource.token;\n\t\t\t},\n\t\t\tget cell() {\n\t\t\t\treturn that._cell.apiCell;\n\t\t\t},\n\t\t\tget executionOrder() {\n\t\t\t\treturn that._executionOrder;\n\t\t\t},\n\t\t\tset executionOrder(v: number | undefined) {\n\t\t\t\tthat._executionOrder = v;\n\t\t\t\tthat.update([\n\t\t\t\t\t{\n\t\t\t\t\t\teditType: CellExecutionUpdateType.ExecutionState,\n\t\t\t\t\t\texecutionOrder: that._executionOrder,\n\t\t\t\t\t},\n\t\t\t\t]);\n\t\t\t},\n\n\t\t\tstart(startTime?: number): void {\n\t\t\t\tif (\n\t\t\t\t\tthat._state === NotebookCellExecutionTaskState.Resolved ||\n\t\t\t\t\tthat._state === NotebookCellExecutionTaskState.Started\n\t\t\t\t) {\n\t\t\t\t\tthrow new Error(\"Cannot call start again\");\n\t\t\t\t}\n\n\t\t\t\tthat._state = NotebookCellExecutionTaskState.Started;\n\t\t\t\tthat._onDidChangeState.fire();\n\n\t\t\t\tthat.update({\n\t\t\t\t\teditType: CellExecutionUpdateType.ExecutionState,\n\t\t\t\t\trunStartTime: startTime,\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tend(\n\t\t\t\tsuccess: boolean | undefined,\n\t\t\t\tendTime?: number,\n\t\t\t\texecutionError?: vscode.CellExecutionError,\n\t\t\t): void {\n\t\t\t\tif (that._state === NotebookCellExecutionTaskState.Resolved) {\n\t\t\t\t\tthrow new Error(\"Cannot call resolve twice\");\n\t\t\t\t}\n\n\t\t\t\tthat._state = NotebookCellExecutionTaskState.Resolved;\n\t\t\t\tthat._onDidChangeState.fire();\n\n\t\t\t\t// The last update needs to be ordered correctly and applied immediately,\n\t\t\t\t// so we use updateSoon and immediately flush.\n\t\t\t\tthat._collector.flush();\n\n\t\t\t\tconst error = executionError\n\t\t\t\t\t? {\n\t\t\t\t\t\t\tmessage: executionError.message,\n\t\t\t\t\t\t\tstack: executionError.stack,\n\t\t\t\t\t\t\tlocation: executionError?.location\n\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\tstartLineNumber:\n\t\t\t\t\t\t\t\t\t\t\texecutionError.location.start.line,\n\t\t\t\t\t\t\t\t\t\tstartColumn:\n\t\t\t\t\t\t\t\t\t\t\texecutionError.location.start\n\t\t\t\t\t\t\t\t\t\t\t\t.character,\n\t\t\t\t\t\t\t\t\t\tendLineNumber:\n\t\t\t\t\t\t\t\t\t\t\texecutionError.location.end.line,\n\t\t\t\t\t\t\t\t\t\tendColumn:\n\t\t\t\t\t\t\t\t\t\t\texecutionError.location.end\n\t\t\t\t\t\t\t\t\t\t\t\t.character,\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\t\turi: executionError.uri,\n\t\t\t\t\t\t}\n\t\t\t\t\t: undefined;\n\n\t\t\t\tthat._proxy.$completeExecution(\n\t\t\t\t\tthat._handle,\n\t\t\t\t\tnew SerializableObjectWithBuffers({\n\t\t\t\t\t\trunEndTime: endTime,\n\t\t\t\t\t\tlastRunSuccess: success,\n\t\t\t\t\t\terror,\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t},\n\n\t\t\tclearOutput(cell?: vscode.NotebookCell): Thenable<void> {\n\t\t\t\tthat.verifyStateForOutput();\n\t\t\t\treturn that.updateOutputs([], cell, false);\n\t\t\t},\n\n\t\t\tappendOutput(\n\t\t\t\toutputs:\n\t\t\t\t\t| vscode.NotebookCellOutput\n\t\t\t\t\t| vscode.NotebookCellOutput[],\n\t\t\t\tcell?: vscode.NotebookCell,\n\t\t\t): Promise<void> {\n\t\t\t\tthat.verifyStateForOutput();\n\t\t\t\treturn that.updateOutputs(outputs, cell, true);\n\t\t\t},\n\n\t\t\treplaceOutput(\n\t\t\t\toutputs:\n\t\t\t\t\t| vscode.NotebookCellOutput\n\t\t\t\t\t| vscode.NotebookCellOutput[],\n\t\t\t\tcell?: vscode.NotebookCell,\n\t\t\t): Promise<void> {\n\t\t\t\tthat.verifyStateForOutput();\n\t\t\t\treturn that.updateOutputs(outputs, cell, false);\n\t\t\t},\n\n\t\t\tappendOutputItems(\n\t\t\t\titems:\n\t\t\t\t\t| vscode.NotebookCellOutputItem\n\t\t\t\t\t| vscode.NotebookCellOutputItem[],\n\t\t\t\toutput: vscode.NotebookCellOutput,\n\t\t\t): Promise<void> {\n\t\t\t\tthat.verifyStateForOutput();\n\t\t\t\treturn that.updateOutputItems(items, output, true);\n\t\t\t},\n\n\t\t\treplaceOutputItems(\n\t\t\t\titems:\n\t\t\t\t\t| vscode.NotebookCellOutputItem\n\t\t\t\t\t| vscode.NotebookCellOutputItem[],\n\t\t\t\toutput: vscode.NotebookCellOutput,\n\t\t\t): Promise<void> {\n\t\t\t\tthat.verifyStateForOutput();\n\t\t\t\treturn that.updateOutputItems(items, output, false);\n\t\t\t},\n\t\t};\n\t\treturn Object.freeze(result);\n\t}\n}\n\nenum NotebookExecutionTaskState {\n\tInit = 0,\n\tStarted = 1,\n\tResolved = 2,\n}\n\nclass NotebookExecutionTask extends Disposable {\n\tprivate static HANDLE = 0;\n\tprivate _handle = NotebookExecutionTask.HANDLE++;\n\n\tprivate _onDidChangeState = new Emitter<void>();\n\treadonly onDidChangeState = this._onDidChangeState.event;\n\n\tprivate _state = NotebookExecutionTaskState.Init;\n\tget state(): NotebookExecutionTaskState {\n\t\treturn this._state;\n\t}\n\n\tprivate readonly _tokenSource = this._register(\n\t\tnew CancellationTokenSource(),\n\t);\n\n\tconstructor(\n\t\tcontrollerId: string,\n\t\tprivate readonly _notebook: ExtHostNotebookDocument,\n\t\tprivate readonly _proxy: MainThreadNotebookKernelsShape,\n\t) {\n\t\tsuper();\n\n\t\tthis._proxy.$createNotebookExecution(\n\t\t\tthis._handle,\n\t\t\tcontrollerId,\n\t\t\tthis._notebook.uri,\n\t\t);\n\t}\n\n\tcancel(): void {\n\t\tthis._tokenSource.cancel();\n\t}\n\tasApiObject(): vscode.NotebookExecution {\n\t\tconst result: vscode.NotebookExecution = {\n\t\t\tstart: () => {\n\t\t\t\tif (\n\t\t\t\t\tthis._state === NotebookExecutionTaskState.Resolved ||\n\t\t\t\t\tthis._state === NotebookExecutionTaskState.Started\n\t\t\t\t) {\n\t\t\t\t\tthrow new Error(\"Cannot call start again\");\n\t\t\t\t}\n\n\t\t\t\tthis._state = NotebookExecutionTaskState.Started;\n\t\t\t\tthis._onDidChangeState.fire();\n\n\t\t\t\tthis._proxy.$beginNotebookExecution(this._handle);\n\t\t\t},\n\n\t\t\tend: () => {\n\t\t\t\tif (this._state === NotebookExecutionTaskState.Resolved) {\n\t\t\t\t\tthrow new Error(\"Cannot call resolve twice\");\n\t\t\t\t}\n\n\t\t\t\tthis._state = NotebookExecutionTaskState.Resolved;\n\t\t\t\tthis._onDidChangeState.fire();\n\n\t\t\t\tthis._proxy.$completeNotebookExecution(this._handle);\n\t\t\t},\n\t\t};\n\t\treturn Object.freeze(result);\n\t}\n}\n\nclass TimeoutBasedCollector<T> {\n\tprivate batch: T[] = [];\n\tprivate startedTimer = Date.now();\n\tprivate currentDeferred: DeferredPromise<void> | undefined;\n\n\tconstructor(\n\t\tprivate readonly delay: number,\n\t\tprivate readonly callback: (items: T[]) => Promise<void>,\n\t) {}\n\n\taddItem(item: T): Promise<void> {\n\t\tthis.batch.push(item);\n\t\tif (!this.currentDeferred) {\n\t\t\tthis.currentDeferred = new DeferredPromise<void>();\n\t\t\tthis.startedTimer = Date.now();\n\t\t\ttimeout(this.delay).then(() => {\n\t\t\t\treturn this.flush();\n\t\t\t});\n\t\t}\n\n\t\t// This can be called by the extension repeatedly for a long time before the timeout is able to run.\n\t\t// Force a flush after the delay.\n\t\tif (Date.now() - this.startedTimer > this.delay) {\n\t\t\treturn this.flush();\n\t\t}\n\n\t\treturn this.currentDeferred.p;\n\t}\n\n\tflush(): Promise<void> {\n\t\tif (this.batch.length === 0 || !this.currentDeferred) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst deferred = this.currentDeferred;\n\t\tthis.currentDeferred = undefined;\n\t\tconst batch = this.batch;\n\t\tthis.batch = [];\n\t\treturn this.callback(batch).finally(() => deferred.complete());\n\t}\n}\n\nexport function createKernelId(\n\textensionIdentifier: ExtensionIdentifier,\n\tid: string,\n): string {\n\treturn `${extensionIdentifier.value}/${id}`;\n}\n"],
  "mappings": "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",
  "names": ["data", "NotebookCellExecutionTaskState", "NotebookExecutionTaskState"]
}
