{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostDecorations.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type * as vscode from \"vscode\";\nimport { asArray, groupBy } from \"../../../base/common/arrays.js\";\nimport type { CancellationToken } from \"../../../base/common/cancellation.js\";\nimport { dirname } from \"../../../base/common/path.js\";\nimport { compare, count } from \"../../../base/common/strings.js\";\nimport { URI } from \"../../../base/common/uri.js\";\nimport type { IExtensionDescription } from \"../../../platform/extensions/common/extensions.js\";\nimport { createDecorator } from \"../../../platform/instantiation/common/instantiation.js\";\nimport { ILogService } from \"../../../platform/log/common/log.js\";\nimport { checkProposedApiEnabled } from \"../../services/extensions/common/extensions.js\";\nimport {\n\ttype DecorationData,\n\ttype DecorationReply,\n\ttype DecorationRequest,\n\ttype ExtHostDecorationsShape,\n\tMainContext,\n\ttype MainThreadDecorationsShape,\n} from \"./extHost.protocol.js\";\nimport { IExtHostRpcService } from \"./extHostRpcService.js\";\nimport { Disposable, FileDecoration } from \"./extHostTypes.js\";\n\ninterface ProviderData {\n\tprovider: vscode.FileDecorationProvider;\n\textensionDescription: IExtensionDescription;\n}\n\nexport class ExtHostDecorations implements ExtHostDecorationsShape {\n\tprivate static _handlePool = 0;\n\tprivate static _maxEventSize = 250;\n\n\treadonly _serviceBrand: undefined;\n\tprivate readonly _provider = new Map<number, ProviderData>();\n\tprivate readonly _proxy: MainThreadDecorationsShape;\n\n\tconstructor(\n\t\t@IExtHostRpcService extHostRpc: IExtHostRpcService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t) {\n\t\tthis._proxy = extHostRpc.getProxy(MainContext.MainThreadDecorations);\n\t}\n\n\tregisterFileDecorationProvider(\n\t\tprovider: vscode.FileDecorationProvider,\n\t\textensionDescription: IExtensionDescription,\n\t): vscode.Disposable {\n\t\tconst handle = ExtHostDecorations._handlePool++;\n\t\tthis._provider.set(handle, { provider, extensionDescription });\n\t\tthis._proxy.$registerDecorationProvider(\n\t\t\thandle,\n\t\t\textensionDescription.identifier.value,\n\t\t);\n\n\t\tconst listener =\n\t\t\tprovider.onDidChangeFileDecorations &&\n\t\t\tprovider.onDidChangeFileDecorations((e) => {\n\t\t\t\tif (!e) {\n\t\t\t\t\tthis._proxy.$onDidChange(handle, null);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst array = asArray(e);\n\t\t\t\tif (array.length <= ExtHostDecorations._maxEventSize) {\n\t\t\t\t\tthis._proxy.$onDidChange(handle, array);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// too many resources per event. pick one resource per folder, starting\n\t\t\t\t// with parent folders\n\t\t\t\tthis._logService.warn(\n\t\t\t\t\t\"[Decorations] CAPPING events from decorations provider\",\n\t\t\t\t\textensionDescription.identifier.value,\n\t\t\t\t\tarray.length,\n\t\t\t\t);\n\t\t\t\tconst mapped = array.map((uri) => ({\n\t\t\t\t\turi,\n\t\t\t\t\trank: count(uri.path, \"/\"),\n\t\t\t\t}));\n\t\t\t\tconst groups = groupBy(\n\t\t\t\t\tmapped,\n\t\t\t\t\t(a, b) =>\n\t\t\t\t\t\ta.rank - b.rank || compare(a.uri.path, b.uri.path),\n\t\t\t\t);\n\t\t\t\tconst picked: URI[] = [];\n\t\t\t\touter: for (const uris of groups) {\n\t\t\t\t\tlet lastDirname: string | undefined;\n\t\t\t\t\tfor (const obj of uris) {\n\t\t\t\t\t\tconst myDirname = dirname(obj.uri.path);\n\t\t\t\t\t\tif (lastDirname !== myDirname) {\n\t\t\t\t\t\t\tlastDirname = myDirname;\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tpicked.push(obj.uri) >=\n\t\t\t\t\t\t\t\tExtHostDecorations._maxEventSize\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tbreak outer;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._proxy.$onDidChange(handle, picked);\n\t\t\t});\n\n\t\treturn new Disposable(() => {\n\t\t\tlistener?.dispose();\n\t\t\tthis._proxy.$unregisterDecorationProvider(handle);\n\t\t\tthis._provider.delete(handle);\n\t\t});\n\t}\n\n\tasync $provideDecorations(\n\t\thandle: number,\n\t\trequests: DecorationRequest[],\n\t\ttoken: CancellationToken,\n\t): Promise<DecorationReply> {\n\t\tif (!this._provider.has(handle)) {\n\t\t\t// might have been unregistered in the meantime\n\t\t\treturn Object.create(null);\n\t\t}\n\n\t\tconst result: DecorationReply = Object.create(null);\n\t\tconst { provider, extensionDescription: extensionId } =\n\t\t\tthis._provider.get(handle)!;\n\n\t\tawait Promise.all(\n\t\t\trequests.map(async (request) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst { uri, id } = request;\n\t\t\t\t\tconst data = await Promise.resolve(\n\t\t\t\t\t\tprovider.provideFileDecoration(URI.revive(uri), token),\n\t\t\t\t\t);\n\t\t\t\t\tif (!data) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\ttry {\n\t\t\t\t\t\tFileDecoration.validate(data);\n\t\t\t\t\t\tif (data.badge && typeof data.badge !== \"string\") {\n\t\t\t\t\t\t\tcheckProposedApiEnabled(\n\t\t\t\t\t\t\t\textensionId,\n\t\t\t\t\t\t\t\t\"codiconDecoration\",\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult[id] = <DecorationData>[\n\t\t\t\t\t\t\tdata.propagate,\n\t\t\t\t\t\t\tdata.tooltip,\n\t\t\t\t\t\t\tdata.badge,\n\t\t\t\t\t\t\tdata.color,\n\t\t\t\t\t\t];\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tthis._logService.warn(\n\t\t\t\t\t\t\t`INVALID decoration from extension '${extensionId.identifier.value}': ${e}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\tthis._logService.error(err);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\treturn result;\n\t}\n}\n\nexport const IExtHostDecorations = createDecorator<IExtHostDecorations>(\n\t\"IExtHostDecorations\",\n);\nexport interface IExtHostDecorations extends ExtHostDecorations {}\n"],
  "mappings": "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",
  "names": []
}
