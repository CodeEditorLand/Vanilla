{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostFileSystem.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from '../../../base/common/uri.js';\nimport { MainContext, IMainContext, ExtHostFileSystemShape, MainThreadFileSystemShape, IFileChangeDto } from './extHost.protocol.js';\nimport type * as vscode from 'vscode';\nimport * as files from '../../../platform/files/common/files.js';\nimport { IDisposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { FileChangeType } from './extHostTypes.js';\nimport * as typeConverter from './extHostTypeConverters.js';\nimport { ExtHostLanguageFeatures } from './extHostLanguageFeatures.js';\nimport { State, StateMachine, LinkComputer, Edge } from '../../../editor/common/languages/linkComputer.js';\nimport { commonPrefixLength } from '../../../base/common/strings.js';\nimport { CharCode } from '../../../base/common/charCode.js';\nimport { VSBuffer } from '../../../base/common/buffer.js';\nimport { IExtensionDescription } from '../../../platform/extensions/common/extensions.js';\nimport { checkProposedApiEnabled } from '../../services/extensions/common/extensions.js';\nimport { IMarkdownString, isMarkdownString } from '../../../base/common/htmlContent.js';\n\nclass FsLinkProvider {\n\n\tprivate _schemes: string[] = [];\n\tprivate _stateMachine?: StateMachine;\n\n\tadd(scheme: string): void {\n\t\tthis._stateMachine = undefined;\n\t\tthis._schemes.push(scheme);\n\t}\n\n\tdelete(scheme: string): void {\n\t\tconst idx = this._schemes.indexOf(scheme);\n\t\tif (idx >= 0) {\n\t\t\tthis._schemes.splice(idx, 1);\n\t\t\tthis._stateMachine = undefined;\n\t\t}\n\t}\n\n\tprivate _initStateMachine(): void {\n\t\tif (!this._stateMachine) {\n\n\t\t\t// sort and compute common prefix with previous scheme\n\t\t\t// then build state transitions based on the data\n\t\t\tconst schemes = this._schemes.sort();\n\t\t\tconst edges: Edge[] = [];\n\t\t\tlet prevScheme: string | undefined;\n\t\t\tlet prevState: State;\n\t\t\tlet lastState = State.LastKnownState;\n\t\t\tlet nextState = State.LastKnownState;\n\t\t\tfor (const scheme of schemes) {\n\n\t\t\t\t// skip the common prefix of the prev scheme\n\t\t\t\t// and continue with its last state\n\t\t\t\tlet pos = !prevScheme ? 0 : commonPrefixLength(prevScheme, scheme);\n\t\t\t\tif (pos === 0) {\n\t\t\t\t\tprevState = State.Start;\n\t\t\t\t} else {\n\t\t\t\t\tprevState = nextState;\n\t\t\t\t}\n\n\t\t\t\tfor (; pos < scheme.length; pos++) {\n\t\t\t\t\t// keep creating new (next) states until the\n\t\t\t\t\t// end (and the BeforeColon-state) is reached\n\t\t\t\t\tif (pos + 1 === scheme.length) {\n\t\t\t\t\t\t// Save the last state here, because we need to continue for the next scheme\n\t\t\t\t\t\tlastState = nextState;\n\t\t\t\t\t\tnextState = State.BeforeColon;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnextState += 1;\n\t\t\t\t\t}\n\t\t\t\t\tedges.push([prevState, scheme.toUpperCase().charCodeAt(pos), nextState]);\n\t\t\t\t\tedges.push([prevState, scheme.toLowerCase().charCodeAt(pos), nextState]);\n\t\t\t\t\tprevState = nextState;\n\t\t\t\t}\n\n\t\t\t\tprevScheme = scheme;\n\t\t\t\t// Restore the last state\n\t\t\t\tnextState = lastState;\n\t\t\t}\n\n\t\t\t// all link must match this pattern `<scheme>:/<more>`\n\t\t\tedges.push([State.BeforeColon, CharCode.Colon, State.AfterColon]);\n\t\t\tedges.push([State.AfterColon, CharCode.Slash, State.End]);\n\n\t\t\tthis._stateMachine = new StateMachine(edges);\n\t\t}\n\t}\n\n\tprovideDocumentLinks(document: vscode.TextDocument): vscode.ProviderResult<vscode.DocumentLink[]> {\n\t\tthis._initStateMachine();\n\n\t\tconst result: vscode.DocumentLink[] = [];\n\t\tconst links = LinkComputer.computeLinks({\n\t\t\tgetLineContent(lineNumber: number): string {\n\t\t\t\treturn document.lineAt(lineNumber - 1).text;\n\t\t\t},\n\t\t\tgetLineCount(): number {\n\t\t\t\treturn document.lineCount;\n\t\t\t}\n\t\t}, this._stateMachine);\n\n\t\tfor (const link of links) {\n\t\t\tconst docLink = typeConverter.DocumentLink.to(link);\n\t\t\tif (docLink.target) {\n\t\t\t\tresult.push(docLink);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n\nexport class ExtHostFileSystem implements ExtHostFileSystemShape {\n\n\tprivate readonly _proxy: MainThreadFileSystemShape;\n\tprivate readonly _linkProvider = new FsLinkProvider();\n\tprivate readonly _fsProvider = new Map<number, vscode.FileSystemProvider>();\n\tprivate readonly _registeredSchemes = new Set<string>();\n\tprivate readonly _watches = new Map<number, IDisposable>();\n\n\tprivate _linkProviderRegistration?: IDisposable;\n\tprivate _handlePool: number = 0;\n\n\tconstructor(mainContext: IMainContext, private _extHostLanguageFeatures: ExtHostLanguageFeatures) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadFileSystem);\n\t}\n\n\tdispose(): void {\n\t\tthis._linkProviderRegistration?.dispose();\n\t}\n\n\tregisterFileSystemProvider(extension: IExtensionDescription, scheme: string, provider: vscode.FileSystemProvider, options: { isCaseSensitive?: boolean; isReadonly?: boolean | vscode.MarkdownString } = {}) {\n\n\t\t// validate the given provider is complete\n\t\tExtHostFileSystem._validateFileSystemProvider(provider);\n\n\t\tif (this._registeredSchemes.has(scheme)) {\n\t\t\tthrow new Error(`a provider for the scheme '${scheme}' is already registered`);\n\t\t}\n\n\t\t//\n\t\tif (!this._linkProviderRegistration) {\n\t\t\tthis._linkProviderRegistration = this._extHostLanguageFeatures.registerDocumentLinkProvider(extension, '*', this._linkProvider);\n\t\t}\n\n\t\tconst handle = this._handlePool++;\n\t\tthis._linkProvider.add(scheme);\n\t\tthis._registeredSchemes.add(scheme);\n\t\tthis._fsProvider.set(handle, provider);\n\n\t\tlet capabilities = files.FileSystemProviderCapabilities.FileReadWrite;\n\t\tif (options.isCaseSensitive) {\n\t\t\tcapabilities += files.FileSystemProviderCapabilities.PathCaseSensitive;\n\t\t}\n\t\tif (options.isReadonly) {\n\t\t\tcapabilities += files.FileSystemProviderCapabilities.Readonly;\n\t\t}\n\t\tif (typeof provider.copy === 'function') {\n\t\t\tcapabilities += files.FileSystemProviderCapabilities.FileFolderCopy;\n\t\t}\n\t\tif (typeof provider.open === 'function' && typeof provider.close === 'function'\n\t\t\t&& typeof provider.read === 'function' && typeof provider.write === 'function'\n\t\t) {\n\t\t\tcheckProposedApiEnabled(extension, 'fsChunks');\n\t\t\tcapabilities += files.FileSystemProviderCapabilities.FileOpenReadWriteClose;\n\t\t}\n\n\t\tlet readOnlyMessage: IMarkdownString | undefined;\n\t\tif (options.isReadonly && isMarkdownString(options.isReadonly) && options.isReadonly.value !== '') {\n\t\t\treadOnlyMessage = {\n\t\t\t\tvalue: options.isReadonly.value,\n\t\t\t\tisTrusted: options.isReadonly.isTrusted,\n\t\t\t\tsupportThemeIcons: options.isReadonly.supportThemeIcons,\n\t\t\t\tsupportHtml: options.isReadonly.supportHtml,\n\t\t\t\tbaseUri: options.isReadonly.baseUri,\n\t\t\t\turis: options.isReadonly.uris\n\t\t\t};\n\t\t}\n\n\t\tthis._proxy.$registerFileSystemProvider(handle, scheme, capabilities, readOnlyMessage).catch(err => {\n\t\t\tconsole.error(`FAILED to register filesystem provider of ${extension.identifier.value}-extension for the scheme ${scheme}`);\n\t\t\tconsole.error(err);\n\t\t});\n\n\t\tconst subscription = provider.onDidChangeFile(event => {\n\t\t\tconst mapped: IFileChangeDto[] = [];\n\t\t\tfor (const e of event) {\n\t\t\t\tconst { uri: resource, type } = e;\n\t\t\t\tif (resource.scheme !== scheme) {\n\t\t\t\t\t// dropping events for wrong scheme\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlet newType: files.FileChangeType | undefined;\n\t\t\t\tswitch (type) {\n\t\t\t\t\tcase FileChangeType.Changed:\n\t\t\t\t\t\tnewType = files.FileChangeType.UPDATED;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase FileChangeType.Created:\n\t\t\t\t\t\tnewType = files.FileChangeType.ADDED;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase FileChangeType.Deleted:\n\t\t\t\t\t\tnewType = files.FileChangeType.DELETED;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error('Unknown FileChangeType');\n\t\t\t\t}\n\t\t\t\tmapped.push({ resource, type: newType });\n\t\t\t}\n\t\t\tthis._proxy.$onFileSystemChange(handle, mapped);\n\t\t});\n\n\t\treturn toDisposable(() => {\n\t\t\tsubscription.dispose();\n\t\t\tthis._linkProvider.delete(scheme);\n\t\t\tthis._registeredSchemes.delete(scheme);\n\t\t\tthis._fsProvider.delete(handle);\n\t\t\tthis._proxy.$unregisterProvider(handle);\n\t\t});\n\t}\n\n\tprivate static _validateFileSystemProvider(provider: vscode.FileSystemProvider) {\n\t\tif (!provider) {\n\t\t\tthrow new Error('MISSING provider');\n\t\t}\n\t\tif (typeof provider.watch !== 'function') {\n\t\t\tthrow new Error('Provider does NOT implement watch');\n\t\t}\n\t\tif (typeof provider.stat !== 'function') {\n\t\t\tthrow new Error('Provider does NOT implement stat');\n\t\t}\n\t\tif (typeof provider.readDirectory !== 'function') {\n\t\t\tthrow new Error('Provider does NOT implement readDirectory');\n\t\t}\n\t\tif (typeof provider.createDirectory !== 'function') {\n\t\t\tthrow new Error('Provider does NOT implement createDirectory');\n\t\t}\n\t\tif (typeof provider.readFile !== 'function') {\n\t\t\tthrow new Error('Provider does NOT implement readFile');\n\t\t}\n\t\tif (typeof provider.writeFile !== 'function') {\n\t\t\tthrow new Error('Provider does NOT implement writeFile');\n\t\t}\n\t\tif (typeof provider.delete !== 'function') {\n\t\t\tthrow new Error('Provider does NOT implement delete');\n\t\t}\n\t\tif (typeof provider.rename !== 'function') {\n\t\t\tthrow new Error('Provider does NOT implement rename');\n\t\t}\n\t}\n\n\tprivate static _asIStat(stat: vscode.FileStat): files.IStat {\n\t\tconst { type, ctime, mtime, size, permissions } = stat;\n\t\treturn { type, ctime, mtime, size, permissions };\n\t}\n\n\t$stat(handle: number, resource: UriComponents): Promise<files.IStat> {\n\t\treturn Promise.resolve(this._getFsProvider(handle).stat(URI.revive(resource))).then(stat => ExtHostFileSystem._asIStat(stat));\n\t}\n\n\t$readdir(handle: number, resource: UriComponents): Promise<[string, files.FileType][]> {\n\t\treturn Promise.resolve(this._getFsProvider(handle).readDirectory(URI.revive(resource)));\n\t}\n\n\t$readFile(handle: number, resource: UriComponents): Promise<VSBuffer> {\n\t\treturn Promise.resolve(this._getFsProvider(handle).readFile(URI.revive(resource))).then(data => VSBuffer.wrap(data));\n\t}\n\n\t$writeFile(handle: number, resource: UriComponents, content: VSBuffer, opts: files.IFileWriteOptions): Promise<void> {\n\t\treturn Promise.resolve(this._getFsProvider(handle).writeFile(URI.revive(resource), content.buffer, opts));\n\t}\n\n\t$delete(handle: number, resource: UriComponents, opts: files.IFileDeleteOptions): Promise<void> {\n\t\treturn Promise.resolve(this._getFsProvider(handle).delete(URI.revive(resource), opts));\n\t}\n\n\t$rename(handle: number, oldUri: UriComponents, newUri: UriComponents, opts: files.IFileOverwriteOptions): Promise<void> {\n\t\treturn Promise.resolve(this._getFsProvider(handle).rename(URI.revive(oldUri), URI.revive(newUri), opts));\n\t}\n\n\t$copy(handle: number, oldUri: UriComponents, newUri: UriComponents, opts: files.IFileOverwriteOptions): Promise<void> {\n\t\tconst provider = this._getFsProvider(handle);\n\t\tif (!provider.copy) {\n\t\t\tthrow new Error('FileSystemProvider does not implement \"copy\"');\n\t\t}\n\t\treturn Promise.resolve(provider.copy(URI.revive(oldUri), URI.revive(newUri), opts));\n\t}\n\n\t$mkdir(handle: number, resource: UriComponents): Promise<void> {\n\t\treturn Promise.resolve(this._getFsProvider(handle).createDirectory(URI.revive(resource)));\n\t}\n\n\t$watch(handle: number, session: number, resource: UriComponents, opts: files.IWatchOptions): void {\n\t\tconst subscription = this._getFsProvider(handle).watch(URI.revive(resource), opts);\n\t\tthis._watches.set(session, subscription);\n\t}\n\n\t$unwatch(_handle: number, session: number): void {\n\t\tconst subscription = this._watches.get(session);\n\t\tif (subscription) {\n\t\t\tsubscription.dispose();\n\t\t\tthis._watches.delete(session);\n\t\t}\n\t}\n\n\t$open(handle: number, resource: UriComponents, opts: files.IFileOpenOptions): Promise<number> {\n\t\tconst provider = this._getFsProvider(handle);\n\t\tif (!provider.open) {\n\t\t\tthrow new Error('FileSystemProvider does not implement \"open\"');\n\t\t}\n\t\treturn Promise.resolve(provider.open(URI.revive(resource), opts));\n\t}\n\n\t$close(handle: number, fd: number): Promise<void> {\n\t\tconst provider = this._getFsProvider(handle);\n\t\tif (!provider.close) {\n\t\t\tthrow new Error('FileSystemProvider does not implement \"close\"');\n\t\t}\n\t\treturn Promise.resolve(provider.close(fd));\n\t}\n\n\t$read(handle: number, fd: number, pos: number, length: number): Promise<VSBuffer> {\n\t\tconst provider = this._getFsProvider(handle);\n\t\tif (!provider.read) {\n\t\t\tthrow new Error('FileSystemProvider does not implement \"read\"');\n\t\t}\n\t\tconst data = VSBuffer.alloc(length);\n\t\treturn Promise.resolve(provider.read(fd, pos, data.buffer, 0, length)).then(read => {\n\t\t\treturn data.slice(0, read); // don't send zeros\n\t\t});\n\t}\n\n\t$write(handle: number, fd: number, pos: number, data: VSBuffer): Promise<number> {\n\t\tconst provider = this._getFsProvider(handle);\n\t\tif (!provider.write) {\n\t\t\tthrow new Error('FileSystemProvider does not implement \"write\"');\n\t\t}\n\t\treturn Promise.resolve(provider.write(fd, pos, data.buffer, 0, data.byteLength));\n\t}\n\n\tprivate _getFsProvider(handle: number): vscode.FileSystemProvider {\n\t\tconst provider = this._fsProvider.get(handle);\n\t\tif (!provider) {\n\t\t\tconst err = new Error();\n\t\t\terr.name = 'ENOPRO';\n\t\t\terr.message = `no provider`;\n\t\t\tthrow err;\n\t\t}\n\t\treturn provider;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
