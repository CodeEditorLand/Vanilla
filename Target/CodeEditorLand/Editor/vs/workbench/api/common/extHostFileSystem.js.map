{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostFileSystem.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type * as vscode from \"vscode\";\nimport { VSBuffer } from \"../../../base/common/buffer.js\";\nimport { CharCode } from \"../../../base/common/charCode.js\";\nimport {\n\ttype IMarkdownString,\n\tisMarkdownString,\n} from \"../../../base/common/htmlContent.js\";\nimport {\n\ttype IDisposable,\n\ttoDisposable,\n} from \"../../../base/common/lifecycle.js\";\nimport { commonPrefixLength } from \"../../../base/common/strings.js\";\nimport { URI, type UriComponents } from \"../../../base/common/uri.js\";\nimport {\n\ttype Edge,\n\tLinkComputer,\n\tState,\n\tStateMachine,\n} from \"../../../editor/common/languages/linkComputer.js\";\nimport type { IExtensionDescription } from \"../../../platform/extensions/common/extensions.js\";\nimport * as files from \"../../../platform/files/common/files.js\";\nimport { checkProposedApiEnabled } from \"../../services/extensions/common/extensions.js\";\nimport {\n\ttype ExtHostFileSystemShape,\n\ttype IFileChangeDto,\n\ttype IMainContext,\n\tMainContext,\n\ttype MainThreadFileSystemShape,\n} from \"./extHost.protocol.js\";\nimport type { ExtHostLanguageFeatures } from \"./extHostLanguageFeatures.js\";\nimport * as typeConverter from \"./extHostTypeConverters.js\";\nimport { FileChangeType } from \"./extHostTypes.js\";\n\nclass FsLinkProvider {\n\tprivate _schemes: string[] = [];\n\tprivate _stateMachine?: StateMachine;\n\n\tadd(scheme: string): void {\n\t\tthis._stateMachine = undefined;\n\t\tthis._schemes.push(scheme);\n\t}\n\n\tdelete(scheme: string): void {\n\t\tconst idx = this._schemes.indexOf(scheme);\n\t\tif (idx >= 0) {\n\t\t\tthis._schemes.splice(idx, 1);\n\t\t\tthis._stateMachine = undefined;\n\t\t}\n\t}\n\n\tprivate _initStateMachine(): void {\n\t\tif (!this._stateMachine) {\n\t\t\t// sort and compute common prefix with previous scheme\n\t\t\t// then build state transitions based on the data\n\t\t\tconst schemes = this._schemes.sort();\n\t\t\tconst edges: Edge[] = [];\n\t\t\tlet prevScheme: string | undefined;\n\t\t\tlet prevState: State;\n\t\t\tlet lastState = State.LastKnownState;\n\t\t\tlet nextState = State.LastKnownState;\n\t\t\tfor (const scheme of schemes) {\n\t\t\t\t// skip the common prefix of the prev scheme\n\t\t\t\t// and continue with its last state\n\t\t\t\tlet pos = prevScheme\n\t\t\t\t\t? commonPrefixLength(prevScheme, scheme)\n\t\t\t\t\t: 0;\n\t\t\t\tif (pos === 0) {\n\t\t\t\t\tprevState = State.Start;\n\t\t\t\t} else {\n\t\t\t\t\tprevState = nextState;\n\t\t\t\t}\n\n\t\t\t\tfor (; pos < scheme.length; pos++) {\n\t\t\t\t\t// keep creating new (next) states until the\n\t\t\t\t\t// end (and the BeforeColon-state) is reached\n\t\t\t\t\tif (pos + 1 === scheme.length) {\n\t\t\t\t\t\t// Save the last state here, because we need to continue for the next scheme\n\t\t\t\t\t\tlastState = nextState;\n\t\t\t\t\t\tnextState = State.BeforeColon;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnextState += 1;\n\t\t\t\t\t}\n\t\t\t\t\tedges.push([\n\t\t\t\t\t\tprevState,\n\t\t\t\t\t\tscheme.toUpperCase().charCodeAt(pos),\n\t\t\t\t\t\tnextState,\n\t\t\t\t\t]);\n\t\t\t\t\tedges.push([\n\t\t\t\t\t\tprevState,\n\t\t\t\t\t\tscheme.toLowerCase().charCodeAt(pos),\n\t\t\t\t\t\tnextState,\n\t\t\t\t\t]);\n\t\t\t\t\tprevState = nextState;\n\t\t\t\t}\n\n\t\t\t\tprevScheme = scheme;\n\t\t\t\t// Restore the last state\n\t\t\t\tnextState = lastState;\n\t\t\t}\n\n\t\t\t// all link must match this pattern `<scheme>:/<more>`\n\t\t\tedges.push([State.BeforeColon, CharCode.Colon, State.AfterColon]);\n\t\t\tedges.push([State.AfterColon, CharCode.Slash, State.End]);\n\n\t\t\tthis._stateMachine = new StateMachine(edges);\n\t\t}\n\t}\n\n\tprovideDocumentLinks(\n\t\tdocument: vscode.TextDocument,\n\t): vscode.ProviderResult<vscode.DocumentLink[]> {\n\t\tthis._initStateMachine();\n\n\t\tconst result: vscode.DocumentLink[] = [];\n\t\tconst links = LinkComputer.computeLinks(\n\t\t\t{\n\t\t\t\tgetLineContent(lineNumber: number): string {\n\t\t\t\t\treturn document.lineAt(lineNumber - 1).text;\n\t\t\t\t},\n\t\t\t\tgetLineCount(): number {\n\t\t\t\t\treturn document.lineCount;\n\t\t\t\t},\n\t\t\t},\n\t\t\tthis._stateMachine,\n\t\t);\n\n\t\tfor (const link of links) {\n\t\t\tconst docLink = typeConverter.DocumentLink.to(link);\n\t\t\tif (docLink.target) {\n\t\t\t\tresult.push(docLink);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n\nexport class ExtHostFileSystem implements ExtHostFileSystemShape {\n\tprivate readonly _proxy: MainThreadFileSystemShape;\n\tprivate readonly _linkProvider = new FsLinkProvider();\n\tprivate readonly _fsProvider = new Map<number, vscode.FileSystemProvider>();\n\tprivate readonly _registeredSchemes = new Set<string>();\n\tprivate readonly _watches = new Map<number, IDisposable>();\n\n\tprivate _linkProviderRegistration?: IDisposable;\n\tprivate _handlePool = 0;\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\tprivate _extHostLanguageFeatures: ExtHostLanguageFeatures,\n\t) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadFileSystem);\n\t}\n\n\tdispose(): void {\n\t\tthis._linkProviderRegistration?.dispose();\n\t}\n\n\tregisterFileSystemProvider(\n\t\textension: IExtensionDescription,\n\t\tscheme: string,\n\t\tprovider: vscode.FileSystemProvider,\n\t\toptions: {\n\t\t\tisCaseSensitive?: boolean;\n\t\t\tisReadonly?: boolean | vscode.MarkdownString;\n\t\t} = {},\n\t) {\n\t\t// validate the given provider is complete\n\t\tExtHostFileSystem._validateFileSystemProvider(provider);\n\n\t\tif (this._registeredSchemes.has(scheme)) {\n\t\t\tthrow new Error(\n\t\t\t\t`a provider for the scheme '${scheme}' is already registered`,\n\t\t\t);\n\t\t}\n\n\t\t//\n\t\tif (!this._linkProviderRegistration) {\n\t\t\tthis._linkProviderRegistration =\n\t\t\t\tthis._extHostLanguageFeatures.registerDocumentLinkProvider(\n\t\t\t\t\textension,\n\t\t\t\t\t\"*\",\n\t\t\t\t\tthis._linkProvider,\n\t\t\t\t);\n\t\t}\n\n\t\tconst handle = this._handlePool++;\n\t\tthis._linkProvider.add(scheme);\n\t\tthis._registeredSchemes.add(scheme);\n\t\tthis._fsProvider.set(handle, provider);\n\n\t\tlet capabilities = files.FileSystemProviderCapabilities.FileReadWrite;\n\t\tif (options.isCaseSensitive) {\n\t\t\tcapabilities +=\n\t\t\t\tfiles.FileSystemProviderCapabilities.PathCaseSensitive;\n\t\t}\n\t\tif (options.isReadonly) {\n\t\t\tcapabilities += files.FileSystemProviderCapabilities.Readonly;\n\t\t}\n\t\tif (typeof provider.copy === \"function\") {\n\t\t\tcapabilities += files.FileSystemProviderCapabilities.FileFolderCopy;\n\t\t}\n\t\tif (\n\t\t\ttypeof provider.open === \"function\" &&\n\t\t\ttypeof provider.close === \"function\" &&\n\t\t\ttypeof provider.read === \"function\" &&\n\t\t\ttypeof provider.write === \"function\"\n\t\t) {\n\t\t\tcheckProposedApiEnabled(extension, \"fsChunks\");\n\t\t\tcapabilities +=\n\t\t\t\tfiles.FileSystemProviderCapabilities.FileOpenReadWriteClose;\n\t\t}\n\n\t\tlet readOnlyMessage: IMarkdownString | undefined;\n\t\tif (\n\t\t\toptions.isReadonly &&\n\t\t\tisMarkdownString(options.isReadonly) &&\n\t\t\toptions.isReadonly.value !== \"\"\n\t\t) {\n\t\t\treadOnlyMessage = {\n\t\t\t\tvalue: options.isReadonly.value,\n\t\t\t\tisTrusted: options.isReadonly.isTrusted,\n\t\t\t\tsupportThemeIcons: options.isReadonly.supportThemeIcons,\n\t\t\t\tsupportHtml: options.isReadonly.supportHtml,\n\t\t\t\tbaseUri: options.isReadonly.baseUri,\n\t\t\t\turis: options.isReadonly.uris,\n\t\t\t};\n\t\t}\n\n\t\tthis._proxy\n\t\t\t.$registerFileSystemProvider(\n\t\t\t\thandle,\n\t\t\t\tscheme,\n\t\t\t\tcapabilities,\n\t\t\t\treadOnlyMessage,\n\t\t\t)\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.error(\n\t\t\t\t\t`FAILED to register filesystem provider of ${extension.identifier.value}-extension for the scheme ${scheme}`,\n\t\t\t\t);\n\t\t\t\tconsole.error(err);\n\t\t\t});\n\n\t\tconst subscription = provider.onDidChangeFile((event) => {\n\t\t\tconst mapped: IFileChangeDto[] = [];\n\t\t\tfor (const e of event) {\n\t\t\t\tconst { uri: resource, type } = e;\n\t\t\t\tif (resource.scheme !== scheme) {\n\t\t\t\t\t// dropping events for wrong scheme\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlet newType: files.FileChangeType | undefined;\n\t\t\t\tswitch (type) {\n\t\t\t\t\tcase FileChangeType.Changed:\n\t\t\t\t\t\tnewType = files.FileChangeType.UPDATED;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase FileChangeType.Created:\n\t\t\t\t\t\tnewType = files.FileChangeType.ADDED;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase FileChangeType.Deleted:\n\t\t\t\t\t\tnewType = files.FileChangeType.DELETED;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(\"Unknown FileChangeType\");\n\t\t\t\t}\n\t\t\t\tmapped.push({ resource, type: newType });\n\t\t\t}\n\t\t\tthis._proxy.$onFileSystemChange(handle, mapped);\n\t\t});\n\n\t\treturn toDisposable(() => {\n\t\t\tsubscription.dispose();\n\t\t\tthis._linkProvider.delete(scheme);\n\t\t\tthis._registeredSchemes.delete(scheme);\n\t\t\tthis._fsProvider.delete(handle);\n\t\t\tthis._proxy.$unregisterProvider(handle);\n\t\t});\n\t}\n\n\tprivate static _validateFileSystemProvider(\n\t\tprovider: vscode.FileSystemProvider,\n\t) {\n\t\tif (!provider) {\n\t\t\tthrow new Error(\"MISSING provider\");\n\t\t}\n\t\tif (typeof provider.watch !== \"function\") {\n\t\t\tthrow new Error(\"Provider does NOT implement watch\");\n\t\t}\n\t\tif (typeof provider.stat !== \"function\") {\n\t\t\tthrow new Error(\"Provider does NOT implement stat\");\n\t\t}\n\t\tif (typeof provider.readDirectory !== \"function\") {\n\t\t\tthrow new Error(\"Provider does NOT implement readDirectory\");\n\t\t}\n\t\tif (typeof provider.createDirectory !== \"function\") {\n\t\t\tthrow new Error(\"Provider does NOT implement createDirectory\");\n\t\t}\n\t\tif (typeof provider.readFile !== \"function\") {\n\t\t\tthrow new Error(\"Provider does NOT implement readFile\");\n\t\t}\n\t\tif (typeof provider.writeFile !== \"function\") {\n\t\t\tthrow new Error(\"Provider does NOT implement writeFile\");\n\t\t}\n\t\tif (typeof provider.delete !== \"function\") {\n\t\t\tthrow new Error(\"Provider does NOT implement delete\");\n\t\t}\n\t\tif (typeof provider.rename !== \"function\") {\n\t\t\tthrow new Error(\"Provider does NOT implement rename\");\n\t\t}\n\t}\n\n\tprivate static _asIStat(stat: vscode.FileStat): files.IStat {\n\t\tconst { type, ctime, mtime, size, permissions } = stat;\n\t\treturn { type, ctime, mtime, size, permissions };\n\t}\n\n\t$stat(handle: number, resource: UriComponents): Promise<files.IStat> {\n\t\treturn Promise.resolve(\n\t\t\tthis._getFsProvider(handle).stat(URI.revive(resource)),\n\t\t).then((stat) => ExtHostFileSystem._asIStat(stat));\n\t}\n\n\t$readdir(\n\t\thandle: number,\n\t\tresource: UriComponents,\n\t): Promise<[string, files.FileType][]> {\n\t\treturn Promise.resolve(\n\t\t\tthis._getFsProvider(handle).readDirectory(URI.revive(resource)),\n\t\t);\n\t}\n\n\t$readFile(handle: number, resource: UriComponents): Promise<VSBuffer> {\n\t\treturn Promise.resolve(\n\t\t\tthis._getFsProvider(handle).readFile(URI.revive(resource)),\n\t\t).then((data) => VSBuffer.wrap(data));\n\t}\n\n\t$writeFile(\n\t\thandle: number,\n\t\tresource: UriComponents,\n\t\tcontent: VSBuffer,\n\t\topts: files.IFileWriteOptions,\n\t): Promise<void> {\n\t\treturn Promise.resolve(\n\t\t\tthis._getFsProvider(handle).writeFile(\n\t\t\t\tURI.revive(resource),\n\t\t\t\tcontent.buffer,\n\t\t\t\topts,\n\t\t\t),\n\t\t);\n\t}\n\n\t$delete(\n\t\thandle: number,\n\t\tresource: UriComponents,\n\t\topts: files.IFileDeleteOptions,\n\t): Promise<void> {\n\t\treturn Promise.resolve(\n\t\t\tthis._getFsProvider(handle).delete(URI.revive(resource), opts),\n\t\t);\n\t}\n\n\t$rename(\n\t\thandle: number,\n\t\toldUri: UriComponents,\n\t\tnewUri: UriComponents,\n\t\topts: files.IFileOverwriteOptions,\n\t): Promise<void> {\n\t\treturn Promise.resolve(\n\t\t\tthis._getFsProvider(handle).rename(\n\t\t\t\tURI.revive(oldUri),\n\t\t\t\tURI.revive(newUri),\n\t\t\t\topts,\n\t\t\t),\n\t\t);\n\t}\n\n\t$copy(\n\t\thandle: number,\n\t\toldUri: UriComponents,\n\t\tnewUri: UriComponents,\n\t\topts: files.IFileOverwriteOptions,\n\t): Promise<void> {\n\t\tconst provider = this._getFsProvider(handle);\n\t\tif (!provider.copy) {\n\t\t\tthrow new Error('FileSystemProvider does not implement \"copy\"');\n\t\t}\n\t\treturn Promise.resolve(\n\t\t\tprovider.copy(URI.revive(oldUri), URI.revive(newUri), opts),\n\t\t);\n\t}\n\n\t$mkdir(handle: number, resource: UriComponents): Promise<void> {\n\t\treturn Promise.resolve(\n\t\t\tthis._getFsProvider(handle).createDirectory(URI.revive(resource)),\n\t\t);\n\t}\n\n\t$watch(\n\t\thandle: number,\n\t\tsession: number,\n\t\tresource: UriComponents,\n\t\topts: files.IWatchOptions,\n\t): void {\n\t\tconst subscription = this._getFsProvider(handle).watch(\n\t\t\tURI.revive(resource),\n\t\t\topts,\n\t\t);\n\t\tthis._watches.set(session, subscription);\n\t}\n\n\t$unwatch(_handle: number, session: number): void {\n\t\tconst subscription = this._watches.get(session);\n\t\tif (subscription) {\n\t\t\tsubscription.dispose();\n\t\t\tthis._watches.delete(session);\n\t\t}\n\t}\n\n\t$open(\n\t\thandle: number,\n\t\tresource: UriComponents,\n\t\topts: files.IFileOpenOptions,\n\t): Promise<number> {\n\t\tconst provider = this._getFsProvider(handle);\n\t\tif (!provider.open) {\n\t\t\tthrow new Error('FileSystemProvider does not implement \"open\"');\n\t\t}\n\t\treturn Promise.resolve(provider.open(URI.revive(resource), opts));\n\t}\n\n\t$close(handle: number, fd: number): Promise<void> {\n\t\tconst provider = this._getFsProvider(handle);\n\t\tif (!provider.close) {\n\t\t\tthrow new Error('FileSystemProvider does not implement \"close\"');\n\t\t}\n\t\treturn Promise.resolve(provider.close(fd));\n\t}\n\n\t$read(\n\t\thandle: number,\n\t\tfd: number,\n\t\tpos: number,\n\t\tlength: number,\n\t): Promise<VSBuffer> {\n\t\tconst provider = this._getFsProvider(handle);\n\t\tif (!provider.read) {\n\t\t\tthrow new Error('FileSystemProvider does not implement \"read\"');\n\t\t}\n\t\tconst data = VSBuffer.alloc(length);\n\t\treturn Promise.resolve(\n\t\t\tprovider.read(fd, pos, data.buffer, 0, length),\n\t\t).then((read) => {\n\t\t\treturn data.slice(0, read); // don't send zeros\n\t\t});\n\t}\n\n\t$write(\n\t\thandle: number,\n\t\tfd: number,\n\t\tpos: number,\n\t\tdata: VSBuffer,\n\t): Promise<number> {\n\t\tconst provider = this._getFsProvider(handle);\n\t\tif (!provider.write) {\n\t\t\tthrow new Error('FileSystemProvider does not implement \"write\"');\n\t\t}\n\t\treturn Promise.resolve(\n\t\t\tprovider.write(fd, pos, data.buffer, 0, data.byteLength),\n\t\t);\n\t}\n\n\tprivate _getFsProvider(handle: number): vscode.FileSystemProvider {\n\t\tconst provider = this._fsProvider.get(handle);\n\t\tif (!provider) {\n\t\t\tconst err = new Error();\n\t\t\terr.name = \"ENOPRO\";\n\t\t\terr.message = `no provider`;\n\t\t\tthrow err;\n\t\t}\n\t\treturn provider;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
