{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostDocumentsAndEditors.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type * as vscode from \"vscode\";\nimport * as assert from \"../../../base/common/assert.js\";\nimport { Emitter, type Event } from \"../../../base/common/event.js\";\nimport { Iterable } from \"../../../base/common/iterator.js\";\nimport { Lazy } from \"../../../base/common/lazy.js\";\nimport { dispose } from \"../../../base/common/lifecycle.js\";\nimport { ResourceMap } from \"../../../base/common/map.js\";\nimport { Schemas } from \"../../../base/common/network.js\";\nimport { URI } from \"../../../base/common/uri.js\";\nimport { createDecorator } from \"../../../platform/instantiation/common/instantiation.js\";\nimport { ILogService } from \"../../../platform/log/common/log.js\";\nimport {\n\ttype ExtHostDocumentsAndEditorsShape,\n\ttype IDocumentsAndEditorsDelta,\n\tMainContext,\n} from \"./extHost.protocol.js\";\nimport { ExtHostDocumentData } from \"./extHostDocumentData.js\";\nimport { IExtHostRpcService } from \"./extHostRpcService.js\";\nimport { ExtHostTextEditor } from \"./extHostTextEditor.js\";\nimport * as typeConverters from \"./extHostTypeConverters.js\";\n\nclass Reference<T> {\n\tprivate _count = 0;\n\tconstructor(readonly value: T) {}\n\tref() {\n\t\tthis._count++;\n\t}\n\tunref() {\n\t\treturn --this._count === 0;\n\t}\n}\n\nexport class ExtHostDocumentsAndEditors\n\timplements ExtHostDocumentsAndEditorsShape\n{\n\treadonly _serviceBrand: undefined;\n\n\tprivate _activeEditorId: string | null = null;\n\n\tprivate readonly _editors = new Map<string, ExtHostTextEditor>();\n\tprivate readonly _documents = new ResourceMap<\n\t\tReference<ExtHostDocumentData>\n\t>();\n\n\tprivate readonly _onDidAddDocuments = new Emitter<\n\t\treadonly ExtHostDocumentData[]\n\t>();\n\tprivate readonly _onDidRemoveDocuments = new Emitter<\n\t\treadonly ExtHostDocumentData[]\n\t>();\n\tprivate readonly _onDidChangeVisibleTextEditors = new Emitter<\n\t\treadonly vscode.TextEditor[]\n\t>();\n\tprivate readonly _onDidChangeActiveTextEditor = new Emitter<\n\t\tvscode.TextEditor | undefined\n\t>();\n\n\treadonly onDidAddDocuments: Event<readonly ExtHostDocumentData[]> =\n\t\tthis._onDidAddDocuments.event;\n\treadonly onDidRemoveDocuments: Event<readonly ExtHostDocumentData[]> =\n\t\tthis._onDidRemoveDocuments.event;\n\treadonly onDidChangeVisibleTextEditors: Event<\n\t\treadonly vscode.TextEditor[]\n\t> = this._onDidChangeVisibleTextEditors.event;\n\treadonly onDidChangeActiveTextEditor: Event<vscode.TextEditor | undefined> =\n\t\tthis._onDidChangeActiveTextEditor.event;\n\n\tconstructor(\n\t\t@IExtHostRpcService private readonly _extHostRpc: IExtHostRpcService,\n\t\t@ILogService private readonly _logService: ILogService\n\t) { }\n\n\t$acceptDocumentsAndEditorsDelta(delta: IDocumentsAndEditorsDelta): void {\n\t\tthis.acceptDocumentsAndEditorsDelta(delta);\n\t}\n\n\tacceptDocumentsAndEditorsDelta(delta: IDocumentsAndEditorsDelta): void {\n\t\tconst removedDocuments: ExtHostDocumentData[] = [];\n\t\tconst addedDocuments: ExtHostDocumentData[] = [];\n\t\tconst removedEditors: ExtHostTextEditor[] = [];\n\n\t\tif (delta.removedDocuments) {\n\t\t\tfor (const uriComponent of delta.removedDocuments) {\n\t\t\t\tconst uri = URI.revive(uriComponent);\n\t\t\t\tconst data = this._documents.get(uri);\n\t\t\t\tif (data?.unref()) {\n\t\t\t\t\tthis._documents.delete(uri);\n\t\t\t\t\tremovedDocuments.push(data.value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (delta.addedDocuments) {\n\t\t\tfor (const data of delta.addedDocuments) {\n\t\t\t\tconst resource = URI.revive(data.uri);\n\t\t\t\tlet ref = this._documents.get(resource);\n\n\t\t\t\t// double check -> only notebook cell documents should be\n\t\t\t\t// referenced/opened more than once...\n\t\t\t\tif (ref) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tresource.scheme !== Schemas.vscodeNotebookCell &&\n\t\t\t\t\t\tresource.scheme !== Schemas.vscodeInteractiveInput\n\t\t\t\t\t) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t`document '${resource} already exists!'`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!ref) {\n\t\t\t\t\tref = new Reference(\n\t\t\t\t\t\tnew ExtHostDocumentData(\n\t\t\t\t\t\t\tthis._extHostRpc.getProxy(\n\t\t\t\t\t\t\t\tMainContext.MainThreadDocuments,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\tdata.lines,\n\t\t\t\t\t\t\tdata.EOL,\n\t\t\t\t\t\t\tdata.versionId,\n\t\t\t\t\t\t\tdata.languageId,\n\t\t\t\t\t\t\tdata.isDirty,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tthis._documents.set(resource, ref);\n\t\t\t\t\taddedDocuments.push(ref.value);\n\t\t\t\t}\n\n\t\t\t\tref.ref();\n\t\t\t}\n\t\t}\n\n\t\tif (delta.removedEditors) {\n\t\t\tfor (const id of delta.removedEditors) {\n\t\t\t\tconst editor = this._editors.get(id);\n\t\t\t\tthis._editors.delete(id);\n\t\t\t\tif (editor) {\n\t\t\t\t\tremovedEditors.push(editor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (delta.addedEditors) {\n\t\t\tfor (const data of delta.addedEditors) {\n\t\t\t\tconst resource = URI.revive(data.documentUri);\n\t\t\t\tassert.ok(\n\t\t\t\t\tthis._documents.has(resource),\n\t\t\t\t\t`document '${resource}' does not exist`,\n\t\t\t\t);\n\t\t\t\tassert.ok(\n\t\t\t\t\t!this._editors.has(data.id),\n\t\t\t\t\t`editor '${data.id}' already exists!`,\n\t\t\t\t);\n\n\t\t\t\tconst documentData = this._documents.get(resource)!.value;\n\t\t\t\tconst editor = new ExtHostTextEditor(\n\t\t\t\t\tdata.id,\n\t\t\t\t\tthis._extHostRpc.getProxy(\n\t\t\t\t\t\tMainContext.MainThreadTextEditors,\n\t\t\t\t\t),\n\t\t\t\t\tthis._logService,\n\t\t\t\t\tnew Lazy(() => documentData.document),\n\t\t\t\t\tdata.selections.map(typeConverters.Selection.to),\n\t\t\t\t\tdata.options,\n\t\t\t\t\tdata.visibleRanges.map((range) =>\n\t\t\t\t\t\ttypeConverters.Range.to(range),\n\t\t\t\t\t),\n\t\t\t\t\ttypeof data.editorPosition === \"number\"\n\t\t\t\t\t\t? typeConverters.ViewColumn.to(data.editorPosition)\n\t\t\t\t\t\t: undefined,\n\t\t\t\t);\n\t\t\t\tthis._editors.set(data.id, editor);\n\t\t\t}\n\t\t}\n\n\t\tif (delta.newActiveEditor !== undefined) {\n\t\t\tassert.ok(\n\t\t\t\tdelta.newActiveEditor === null ||\n\t\t\t\t\tthis._editors.has(delta.newActiveEditor),\n\t\t\t\t`active editor '${delta.newActiveEditor}' does not exist`,\n\t\t\t);\n\t\t\tthis._activeEditorId = delta.newActiveEditor;\n\t\t}\n\n\t\tdispose(removedDocuments);\n\t\tdispose(removedEditors);\n\n\t\t// now that the internal state is complete, fire events\n\t\tif (delta.removedDocuments) {\n\t\t\tthis._onDidRemoveDocuments.fire(removedDocuments);\n\t\t}\n\t\tif (delta.addedDocuments) {\n\t\t\tthis._onDidAddDocuments.fire(addedDocuments);\n\t\t}\n\n\t\tif (delta.removedEditors || delta.addedEditors) {\n\t\t\tthis._onDidChangeVisibleTextEditors.fire(\n\t\t\t\tthis.allEditors().map((editor) => editor.value),\n\t\t\t);\n\t\t}\n\t\tif (delta.newActiveEditor !== undefined) {\n\t\t\tthis._onDidChangeActiveTextEditor.fire(this.activeEditor());\n\t\t}\n\t}\n\n\tgetDocument(uri: URI): ExtHostDocumentData | undefined {\n\t\treturn this._documents.get(uri)?.value;\n\t}\n\n\tallDocuments(): Iterable<ExtHostDocumentData> {\n\t\treturn Iterable.map(this._documents.values(), (ref) => ref.value);\n\t}\n\n\tgetEditor(id: string): ExtHostTextEditor | undefined {\n\t\treturn this._editors.get(id);\n\t}\n\n\tactiveEditor(): vscode.TextEditor | undefined;\n\tactiveEditor(internal: true): ExtHostTextEditor | undefined;\n\tactiveEditor(\n\t\tinternal?: true,\n\t): vscode.TextEditor | ExtHostTextEditor | undefined {\n\t\tif (!this._activeEditorId) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst editor = this._editors.get(this._activeEditorId);\n\t\tif (internal) {\n\t\t\treturn editor;\n\t\t} else {\n\t\t\treturn editor?.value;\n\t\t}\n\t}\n\n\tallEditors(): ExtHostTextEditor[] {\n\t\treturn [...this._editors.values()];\n\t}\n}\n\nexport interface IExtHostDocumentsAndEditors\n\textends ExtHostDocumentsAndEditors {}\nexport const IExtHostDocumentsAndEditors =\n\tcreateDecorator<IExtHostDocumentsAndEditors>(\"IExtHostDocumentsAndEditors\");\n"],
  "mappings": "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",
  "names": []
}
