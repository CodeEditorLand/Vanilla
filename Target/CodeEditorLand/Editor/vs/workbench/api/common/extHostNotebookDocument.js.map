{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostNotebookDocument.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Schemas } from '../../../base/common/network.js';\nimport { URI } from '../../../base/common/uri.js';\nimport * as extHostProtocol from './extHost.protocol.js';\nimport { ExtHostDocuments } from './extHostDocuments.js';\nimport { ExtHostDocumentsAndEditors } from './extHostDocumentsAndEditors.js';\nimport * as extHostTypeConverters from './extHostTypeConverters.js';\nimport { NotebookRange } from './extHostTypes.js';\nimport * as notebookCommon from '../../contrib/notebook/common/notebookCommon.js';\nimport * as vscode from 'vscode';\n\nclass RawContentChangeEvent {\n\n\tconstructor(\n\t\treadonly start: number,\n\t\treadonly deletedCount: number,\n\t\treadonly deletedItems: vscode.NotebookCell[],\n\t\treadonly items: ExtHostCell[]\n\t) { }\n\n\tasApiEvent(): vscode.NotebookDocumentContentChange {\n\t\treturn {\n\t\t\trange: new NotebookRange(this.start, this.start + this.deletedCount),\n\t\t\taddedCells: this.items.map(cell => cell.apiCell),\n\t\t\tremovedCells: this.deletedItems,\n\t\t};\n\t}\n}\n\nexport class ExtHostCell {\n\n\tstatic asModelAddData(cell: extHostProtocol.NotebookCellDto): extHostProtocol.IModelAddedData {\n\t\treturn {\n\t\t\tEOL: cell.eol,\n\t\t\tlines: cell.source,\n\t\t\tlanguageId: cell.language,\n\t\t\turi: cell.uri,\n\t\t\tisDirty: false,\n\t\t\tversionId: 1\n\t\t};\n\t}\n\n\tprivate _outputs: vscode.NotebookCellOutput[];\n\tprivate _metadata: Readonly<notebookCommon.NotebookCellMetadata>;\n\tprivate _previousResult: Readonly<vscode.NotebookCellExecutionSummary | undefined>;\n\n\tprivate _internalMetadata: notebookCommon.NotebookCellInternalMetadata;\n\treadonly handle: number;\n\treadonly uri: URI;\n\treadonly cellKind: notebookCommon.CellKind;\n\n\tprivate _apiCell: vscode.NotebookCell | undefined;\n\tprivate _mime: string | undefined;\n\n\tconstructor(\n\t\treadonly notebook: ExtHostNotebookDocument,\n\t\tprivate readonly _extHostDocument: ExtHostDocumentsAndEditors,\n\t\tprivate readonly _cellData: extHostProtocol.NotebookCellDto,\n\t) {\n\t\tthis.handle = _cellData.handle;\n\t\tthis.uri = URI.revive(_cellData.uri);\n\t\tthis.cellKind = _cellData.cellKind;\n\t\tthis._outputs = _cellData.outputs.map(extHostTypeConverters.NotebookCellOutput.to);\n\t\tthis._internalMetadata = _cellData.internalMetadata ?? {};\n\t\tthis._metadata = Object.freeze(_cellData.metadata ?? {});\n\t\tthis._previousResult = Object.freeze(extHostTypeConverters.NotebookCellExecutionSummary.to(_cellData.internalMetadata ?? {}));\n\t}\n\n\tget internalMetadata(): notebookCommon.NotebookCellInternalMetadata {\n\t\treturn this._internalMetadata;\n\t}\n\n\tget apiCell(): vscode.NotebookCell {\n\t\tif (!this._apiCell) {\n\t\t\tconst that = this;\n\t\t\tconst data = this._extHostDocument.getDocument(this.uri);\n\t\t\tif (!data) {\n\t\t\t\tthrow new Error(`MISSING extHostDocument for notebook cell: ${this.uri}`);\n\t\t\t}\n\t\t\tconst apiCell: vscode.NotebookCell = {\n\t\t\t\tget index() { return that.notebook.getCellIndex(that); },\n\t\t\t\tnotebook: that.notebook.apiNotebook,\n\t\t\t\tkind: extHostTypeConverters.NotebookCellKind.to(this._cellData.cellKind),\n\t\t\t\tdocument: data.document,\n\t\t\t\tget mime() { return that._mime; },\n\t\t\t\tset mime(value: string | undefined) { that._mime = value; },\n\t\t\t\tget outputs() { return that._outputs.slice(0); },\n\t\t\t\tget metadata() { return that._metadata; },\n\t\t\t\tget executionSummary() { return that._previousResult; }\n\t\t\t};\n\t\t\tthis._apiCell = Object.freeze(apiCell);\n\t\t}\n\t\treturn this._apiCell;\n\t}\n\n\tsetOutputs(newOutputs: extHostProtocol.NotebookOutputDto[]): void {\n\t\tthis._outputs = newOutputs.map(extHostTypeConverters.NotebookCellOutput.to);\n\t}\n\n\tsetOutputItems(outputId: string, append: boolean, newOutputItems: extHostProtocol.NotebookOutputItemDto[]) {\n\t\tconst newItems = newOutputItems.map(extHostTypeConverters.NotebookCellOutputItem.to);\n\t\tconst output = this._outputs.find(op => op.id === outputId);\n\t\tif (output) {\n\t\t\tif (!append) {\n\t\t\t\toutput.items.length = 0;\n\t\t\t}\n\t\t\toutput.items.push(...newItems);\n\n\t\t\tif (output.items.length > 1 && output.items.every(item => notebookCommon.isTextStreamMime(item.mime))) {\n\t\t\t\t// Look for the mimes in the items, and keep track of their order.\n\t\t\t\t// Merge the streams into one output item, per mime type.\n\t\t\t\tconst mimeOutputs = new Map<string, Uint8Array[]>();\n\t\t\t\tconst mimeTypes: string[] = [];\n\t\t\t\toutput.items.forEach(item => {\n\t\t\t\t\tlet items: Uint8Array[];\n\t\t\t\t\tif (mimeOutputs.has(item.mime)) {\n\t\t\t\t\t\titems = mimeOutputs.get(item.mime)!;\n\t\t\t\t\t} else {\n\t\t\t\t\t\titems = [];\n\t\t\t\t\t\tmimeOutputs.set(item.mime, items);\n\t\t\t\t\t\tmimeTypes.push(item.mime);\n\t\t\t\t\t}\n\t\t\t\t\titems.push(item.data);\n\t\t\t\t});\n\t\t\t\toutput.items.length = 0;\n\t\t\t\tmimeTypes.forEach(mime => {\n\t\t\t\t\tconst compressed = notebookCommon.compressOutputItemStreams(mimeOutputs.get(mime)!);\n\t\t\t\t\toutput.items.push({\n\t\t\t\t\t\tmime,\n\t\t\t\t\t\tdata: compressed.data.buffer\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tsetMetadata(newMetadata: notebookCommon.NotebookCellMetadata): void {\n\t\tthis._metadata = Object.freeze(newMetadata);\n\t}\n\n\tsetInternalMetadata(newInternalMetadata: notebookCommon.NotebookCellInternalMetadata): void {\n\t\tthis._internalMetadata = newInternalMetadata;\n\t\tthis._previousResult = Object.freeze(extHostTypeConverters.NotebookCellExecutionSummary.to(newInternalMetadata));\n\t}\n\n\tsetMime(newMime: string | undefined) {\n\n\t}\n}\n\n\nexport class ExtHostNotebookDocument {\n\n\tprivate static _handlePool: number = 0;\n\treadonly handle = ExtHostNotebookDocument._handlePool++;\n\n\tprivate readonly _cells: ExtHostCell[] = [];\n\n\tprivate readonly _notebookType: string;\n\n\tprivate _notebook: vscode.NotebookDocument | undefined;\n\tprivate _metadata: Record<string, any>;\n\tprivate _versionId: number = 0;\n\tprivate _isDirty: boolean = false;\n\tprivate _disposed: boolean = false;\n\n\tconstructor(\n\t\tprivate readonly _proxy: extHostProtocol.MainThreadNotebookDocumentsShape,\n\t\tprivate readonly _textDocumentsAndEditors: ExtHostDocumentsAndEditors,\n\t\tprivate readonly _textDocuments: ExtHostDocuments,\n\t\treadonly uri: URI,\n\t\tdata: extHostProtocol.INotebookModelAddedData\n\t) {\n\t\tthis._notebookType = data.viewType;\n\t\tthis._metadata = Object.freeze(data.metadata ?? Object.create(null));\n\t\tthis._spliceNotebookCells([[0, 0, data.cells]], true /* init -> no event*/, undefined);\n\t\tthis._versionId = data.versionId;\n\t}\n\n\tdispose() {\n\t\tthis._disposed = true;\n\t}\n\n\tget versionId(): number {\n\t\treturn this._versionId;\n\t}\n\n\tget apiNotebook(): vscode.NotebookDocument {\n\t\tif (!this._notebook) {\n\t\t\tconst that = this;\n\t\t\tconst apiObject: vscode.NotebookDocument = {\n\t\t\t\tget uri() { return that.uri; },\n\t\t\t\tget version() { return that._versionId; },\n\t\t\t\tget notebookType() { return that._notebookType; },\n\t\t\t\tget isDirty() { return that._isDirty; },\n\t\t\t\tget isUntitled() { return that.uri.scheme === Schemas.untitled; },\n\t\t\t\tget isClosed() { return that._disposed; },\n\t\t\t\tget metadata() { return that._metadata; },\n\t\t\t\tget cellCount() { return that._cells.length; },\n\t\t\t\tcellAt(index) {\n\t\t\t\t\tindex = that._validateIndex(index);\n\t\t\t\t\treturn that._cells[index].apiCell;\n\t\t\t\t},\n\t\t\t\tgetCells(range) {\n\t\t\t\t\tconst cells = range ? that._getCells(range) : that._cells;\n\t\t\t\t\treturn cells.map(cell => cell.apiCell);\n\t\t\t\t},\n\t\t\t\tsave() {\n\t\t\t\t\treturn that._save();\n\t\t\t\t},\n\t\t\t\t[Symbol.for('debug.description')]() {\n\t\t\t\t\treturn `NotebookDocument(${this.uri.toString()})`;\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis._notebook = Object.freeze(apiObject);\n\t\t}\n\t\treturn this._notebook;\n\t}\n\n\tacceptDocumentPropertiesChanged(data: extHostProtocol.INotebookDocumentPropertiesChangeData) {\n\t\tif (data.metadata) {\n\t\t\tthis._metadata = Object.freeze({ ...this._metadata, ...data.metadata });\n\t\t}\n\t}\n\n\tacceptDirty(isDirty: boolean): void {\n\t\tthis._isDirty = isDirty;\n\t}\n\n\tacceptModelChanged(event: extHostProtocol.NotebookCellsChangedEventDto, isDirty: boolean, newMetadata: notebookCommon.NotebookDocumentMetadata | undefined): vscode.NotebookDocumentChangeEvent {\n\t\tthis._versionId = event.versionId;\n\t\tthis._isDirty = isDirty;\n\t\tthis.acceptDocumentPropertiesChanged({ metadata: newMetadata });\n\n\t\tconst result = {\n\t\t\tnotebook: this.apiNotebook,\n\t\t\tmetadata: newMetadata,\n\t\t\tcellChanges: <vscode.NotebookDocumentCellChange[]>[],\n\t\t\tcontentChanges: <vscode.NotebookDocumentContentChange[]>[],\n\t\t};\n\n\t\ttype RelaxedCellChange = Partial<vscode.NotebookDocumentCellChange> & { cell: vscode.NotebookCell };\n\t\tconst relaxedCellChanges: RelaxedCellChange[] = [];\n\n\t\t// -- apply change and populate content changes\n\n\t\tfor (const rawEvent of event.rawEvents) {\n\t\t\tif (rawEvent.kind === notebookCommon.NotebookCellsChangeType.ModelChange) {\n\t\t\t\tthis._spliceNotebookCells(rawEvent.changes, false, result.contentChanges);\n\n\t\t\t} else if (rawEvent.kind === notebookCommon.NotebookCellsChangeType.Move) {\n\t\t\t\tthis._moveCells(rawEvent.index, rawEvent.length, rawEvent.newIdx, result.contentChanges);\n\n\t\t\t} else if (rawEvent.kind === notebookCommon.NotebookCellsChangeType.Output) {\n\t\t\t\tthis._setCellOutputs(rawEvent.index, rawEvent.outputs);\n\t\t\t\trelaxedCellChanges.push({ cell: this._cells[rawEvent.index].apiCell, outputs: this._cells[rawEvent.index].apiCell.outputs });\n\n\t\t\t} else if (rawEvent.kind === notebookCommon.NotebookCellsChangeType.OutputItem) {\n\t\t\t\tthis._setCellOutputItems(rawEvent.index, rawEvent.outputId, rawEvent.append, rawEvent.outputItems);\n\t\t\t\trelaxedCellChanges.push({ cell: this._cells[rawEvent.index].apiCell, outputs: this._cells[rawEvent.index].apiCell.outputs });\n\n\t\t\t} else if (rawEvent.kind === notebookCommon.NotebookCellsChangeType.ChangeCellLanguage) {\n\t\t\t\tthis._changeCellLanguage(rawEvent.index, rawEvent.language);\n\t\t\t\trelaxedCellChanges.push({ cell: this._cells[rawEvent.index].apiCell, document: this._cells[rawEvent.index].apiCell.document });\n\n\t\t\t} else if (rawEvent.kind === notebookCommon.NotebookCellsChangeType.ChangeCellContent) {\n\t\t\t\trelaxedCellChanges.push({ cell: this._cells[rawEvent.index].apiCell, document: this._cells[rawEvent.index].apiCell.document });\n\n\t\t\t} else if (rawEvent.kind === notebookCommon.NotebookCellsChangeType.ChangeCellMime) {\n\t\t\t\tthis._changeCellMime(rawEvent.index, rawEvent.mime);\n\t\t\t} else if (rawEvent.kind === notebookCommon.NotebookCellsChangeType.ChangeCellMetadata) {\n\t\t\t\tthis._changeCellMetadata(rawEvent.index, rawEvent.metadata);\n\t\t\t\trelaxedCellChanges.push({ cell: this._cells[rawEvent.index].apiCell, metadata: this._cells[rawEvent.index].apiCell.metadata });\n\n\t\t\t} else if (rawEvent.kind === notebookCommon.NotebookCellsChangeType.ChangeCellInternalMetadata) {\n\t\t\t\tthis._changeCellInternalMetadata(rawEvent.index, rawEvent.internalMetadata);\n\t\t\t\trelaxedCellChanges.push({ cell: this._cells[rawEvent.index].apiCell, executionSummary: this._cells[rawEvent.index].apiCell.executionSummary });\n\t\t\t}\n\t\t}\n\n\t\t// -- compact cellChanges\n\n\t\tconst map = new Map<vscode.NotebookCell, number>();\n\t\tfor (let i = 0; i < relaxedCellChanges.length; i++) {\n\t\t\tconst relaxedCellChange = relaxedCellChanges[i];\n\t\t\tconst existing = map.get(relaxedCellChange.cell);\n\t\t\tif (existing === undefined) {\n\t\t\t\tconst newLen = result.cellChanges.push({\n\t\t\t\t\tdocument: undefined,\n\t\t\t\t\texecutionSummary: undefined,\n\t\t\t\t\tmetadata: undefined,\n\t\t\t\t\toutputs: undefined,\n\t\t\t\t\t...relaxedCellChange,\n\t\t\t\t});\n\t\t\t\tmap.set(relaxedCellChange.cell, newLen - 1);\n\t\t\t} else {\n\t\t\t\tresult.cellChanges[existing] = {\n\t\t\t\t\t...result.cellChanges[existing],\n\t\t\t\t\t...relaxedCellChange\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\t// Freeze event properties so handlers cannot accidentally modify them\n\t\tObject.freeze(result);\n\t\tObject.freeze(result.cellChanges);\n\t\tObject.freeze(result.contentChanges);\n\n\t\treturn result;\n\t}\n\n\tprivate _validateIndex(index: number): number {\n\t\tindex = index | 0;\n\t\tif (index < 0) {\n\t\t\treturn 0;\n\t\t} else if (index >= this._cells.length) {\n\t\t\treturn this._cells.length - 1;\n\t\t} else {\n\t\t\treturn index;\n\t\t}\n\t}\n\n\tprivate _validateRange(range: vscode.NotebookRange): vscode.NotebookRange {\n\t\tlet start = range.start | 0;\n\t\tlet end = range.end | 0;\n\t\tif (start < 0) {\n\t\t\tstart = 0;\n\t\t}\n\t\tif (end > this._cells.length) {\n\t\t\tend = this._cells.length;\n\t\t}\n\t\treturn range.with({ start, end });\n\t}\n\n\tprivate _getCells(range: vscode.NotebookRange): ExtHostCell[] {\n\t\trange = this._validateRange(range);\n\t\tconst result: ExtHostCell[] = [];\n\t\tfor (let i = range.start; i < range.end; i++) {\n\t\t\tresult.push(this._cells[i]);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate async _save(): Promise<boolean> {\n\t\tif (this._disposed) {\n\t\t\treturn Promise.reject(new Error('Notebook has been closed'));\n\t\t}\n\t\treturn this._proxy.$trySaveNotebook(this.uri);\n\t}\n\n\tprivate _spliceNotebookCells(splices: notebookCommon.NotebookCellTextModelSplice<extHostProtocol.NotebookCellDto>[], initialization: boolean, bucket: vscode.NotebookDocumentContentChange[] | undefined): void {\n\t\tif (this._disposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst contentChangeEvents: RawContentChangeEvent[] = [];\n\t\tconst addedCellDocuments: extHostProtocol.IModelAddedData[] = [];\n\t\tconst removedCellDocuments: URI[] = [];\n\n\t\tsplices.reverse().forEach(splice => {\n\t\t\tconst cellDtos = splice[2];\n\t\t\tconst newCells = cellDtos.map(cell => {\n\n\t\t\t\tconst extCell = new ExtHostCell(this, this._textDocumentsAndEditors, cell);\n\t\t\t\tif (!initialization) {\n\t\t\t\t\taddedCellDocuments.push(ExtHostCell.asModelAddData(cell));\n\t\t\t\t}\n\t\t\t\treturn extCell;\n\t\t\t});\n\n\t\t\tconst changeEvent = new RawContentChangeEvent(splice[0], splice[1], [], newCells);\n\t\t\tconst deletedItems = this._cells.splice(splice[0], splice[1], ...newCells);\n\t\t\tfor (const cell of deletedItems) {\n\t\t\t\tremovedCellDocuments.push(cell.uri);\n\t\t\t\tchangeEvent.deletedItems.push(cell.apiCell);\n\t\t\t}\n\t\t\tcontentChangeEvents.push(changeEvent);\n\t\t});\n\n\t\tthis._textDocumentsAndEditors.acceptDocumentsAndEditorsDelta({\n\t\t\taddedDocuments: addedCellDocuments,\n\t\t\tremovedDocuments: removedCellDocuments\n\t\t});\n\n\t\tif (bucket) {\n\t\t\tfor (const changeEvent of contentChangeEvents) {\n\t\t\t\tbucket.push(changeEvent.asApiEvent());\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _moveCells(index: number, length: number, newIdx: number, bucket: vscode.NotebookDocumentContentChange[]): void {\n\t\tconst cells = this._cells.splice(index, length);\n\t\tthis._cells.splice(newIdx, 0, ...cells);\n\t\tconst changes = [\n\t\t\tnew RawContentChangeEvent(index, length, cells.map(c => c.apiCell), []),\n\t\t\tnew RawContentChangeEvent(newIdx, 0, [], cells)\n\t\t];\n\t\tfor (const change of changes) {\n\t\t\tbucket.push(change.asApiEvent());\n\t\t}\n\t}\n\n\tprivate _setCellOutputs(index: number, outputs: extHostProtocol.NotebookOutputDto[]): void {\n\t\tconst cell = this._cells[index];\n\t\tcell.setOutputs(outputs);\n\t}\n\n\tprivate _setCellOutputItems(index: number, outputId: string, append: boolean, outputItems: extHostProtocol.NotebookOutputItemDto[]): void {\n\t\tconst cell = this._cells[index];\n\t\tcell.setOutputItems(outputId, append, outputItems);\n\t}\n\n\tprivate _changeCellLanguage(index: number, newLanguageId: string): void {\n\t\tconst cell = this._cells[index];\n\t\tif (cell.apiCell.document.languageId !== newLanguageId) {\n\t\t\tthis._textDocuments.$acceptModelLanguageChanged(cell.uri, newLanguageId);\n\t\t}\n\t}\n\n\tprivate _changeCellMime(index: number, newMime: string | undefined): void {\n\t\tconst cell = this._cells[index];\n\t\tcell.apiCell.mime = newMime;\n\t}\n\n\tprivate _changeCellMetadata(index: number, newMetadata: notebookCommon.NotebookCellMetadata): void {\n\t\tconst cell = this._cells[index];\n\t\tcell.setMetadata(newMetadata);\n\t}\n\n\tprivate _changeCellInternalMetadata(index: number, newInternalMetadata: notebookCommon.NotebookCellInternalMetadata): void {\n\t\tconst cell = this._cells[index];\n\t\tcell.setInternalMetadata(newInternalMetadata);\n\t}\n\n\tgetCellFromApiCell(apiCell: vscode.NotebookCell): ExtHostCell | undefined {\n\t\treturn this._cells.find(cell => cell.apiCell === apiCell);\n\t}\n\n\tgetCellFromIndex(index: number): ExtHostCell | undefined {\n\t\treturn this._cells[index];\n\t}\n\n\tgetCell(cellHandle: number): ExtHostCell | undefined {\n\t\treturn this._cells.find(cell => cell.handle === cellHandle);\n\t}\n\n\tgetCellIndex(cell: ExtHostCell): number {\n\t\treturn this._cells.indexOf(cell);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
