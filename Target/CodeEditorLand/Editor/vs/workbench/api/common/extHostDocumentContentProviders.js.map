{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostDocumentContentProviders.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type * as vscode from \"vscode\";\nimport { CancellationToken } from \"../../../base/common/cancellation.js\";\nimport { onUnexpectedError } from \"../../../base/common/errors.js\";\nimport type { IDisposable } from \"../../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../../base/common/network.js\";\nimport { splitLines } from \"../../../base/common/strings.js\";\nimport { URI, type UriComponents } from \"../../../base/common/uri.js\";\nimport type { ILogService } from \"../../../platform/log/common/log.js\";\nimport {\n\ttype ExtHostDocumentContentProvidersShape,\n\ttype IMainContext,\n\tMainContext,\n\ttype MainThreadDocumentContentProvidersShape,\n} from \"./extHost.protocol.js\";\nimport type { ExtHostDocumentsAndEditors } from \"./extHostDocumentsAndEditors.js\";\nimport { Disposable } from \"./extHostTypes.js\";\n\nexport class ExtHostDocumentContentProvider\n\timplements ExtHostDocumentContentProvidersShape\n{\n\tprivate static _handlePool = 0;\n\n\tprivate readonly _documentContentProviders = new Map<\n\t\tnumber,\n\t\tvscode.TextDocumentContentProvider\n\t>();\n\tprivate readonly _proxy: MainThreadDocumentContentProvidersShape;\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\tprivate readonly _documentsAndEditors: ExtHostDocumentsAndEditors,\n\t\tprivate readonly _logService: ILogService,\n\t) {\n\t\tthis._proxy = mainContext.getProxy(\n\t\t\tMainContext.MainThreadDocumentContentProviders,\n\t\t);\n\t}\n\n\tregisterTextDocumentContentProvider(\n\t\tscheme: string,\n\t\tprovider: vscode.TextDocumentContentProvider,\n\t): vscode.Disposable {\n\t\t// todo@remote\n\t\t// check with scheme from fs-providers!\n\t\tif (Object.keys(Schemas).indexOf(scheme) >= 0) {\n\t\t\tthrow new Error(`scheme '${scheme}' already registered`);\n\t\t}\n\n\t\tconst handle = ExtHostDocumentContentProvider._handlePool++;\n\n\t\tthis._documentContentProviders.set(handle, provider);\n\t\tthis._proxy.$registerTextContentProvider(handle, scheme);\n\n\t\tlet subscription: IDisposable | undefined;\n\t\tif (typeof provider.onDidChange === \"function\") {\n\t\t\tlet lastEvent: Promise<void> | undefined;\n\n\t\t\tsubscription = provider.onDidChange(async (uri) => {\n\t\t\t\tif (uri.scheme !== scheme) {\n\t\t\t\t\tthis._logService.warn(\n\t\t\t\t\t\t`Provider for scheme '${scheme}' is firing event for schema '${uri.scheme}' which will be IGNORED`,\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (!this._documentsAndEditors.getDocument(uri)) {\n\t\t\t\t\t// ignore event if document isn't open\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (lastEvent) {\n\t\t\t\t\tawait lastEvent;\n\t\t\t\t}\n\n\t\t\t\tconst thisEvent = this.$provideTextDocumentContent(handle, uri)\n\t\t\t\t\t.then(async (value) => {\n\t\t\t\t\t\tif (!value && typeof value !== \"string\") {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst document =\n\t\t\t\t\t\t\tthis._documentsAndEditors.getDocument(uri);\n\t\t\t\t\t\tif (!document) {\n\t\t\t\t\t\t\t// disposed in the meantime\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// create lines and compare\n\t\t\t\t\t\tconst lines = splitLines(value);\n\n\t\t\t\t\t\t// broadcast event when content changed\n\t\t\t\t\t\tif (!document.equalLines(lines)) {\n\t\t\t\t\t\t\treturn this._proxy.$onVirtualDocumentChange(\n\t\t\t\t\t\t\t\turi,\n\t\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(onUnexpectedError)\n\t\t\t\t\t.finally(() => {\n\t\t\t\t\t\tif (lastEvent === thisEvent) {\n\t\t\t\t\t\t\tlastEvent = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\tlastEvent = thisEvent;\n\t\t\t});\n\t\t}\n\t\treturn new Disposable(() => {\n\t\t\tif (this._documentContentProviders.delete(handle)) {\n\t\t\t\tthis._proxy.$unregisterTextContentProvider(handle);\n\t\t\t}\n\t\t\tif (subscription) {\n\t\t\t\tsubscription.dispose();\n\t\t\t\tsubscription = undefined;\n\t\t\t}\n\t\t});\n\t}\n\n\t$provideTextDocumentContent(\n\t\thandle: number,\n\t\turi: UriComponents,\n\t): Promise<string | null | undefined> {\n\t\tconst provider = this._documentContentProviders.get(handle);\n\t\tif (!provider) {\n\t\t\treturn Promise.reject(\n\t\t\t\tnew Error(`unsupported uri-scheme: ${uri.scheme}`),\n\t\t\t);\n\t\t}\n\t\treturn Promise.resolve(\n\t\t\tprovider.provideTextDocumentContent(\n\t\t\t\tURI.revive(uri),\n\t\t\t\tCancellationToken.None,\n\t\t\t),\n\t\t);\n\t}\n}\n"],
  "mappings": ";;AAMA,SAAS,yBAAyB;AAClC,SAAS,yBAAyB;AAElC,SAAS,eAAe;AACxB,SAAS,kBAAkB;AAC3B,SAAS,WAA+B;AAExC;AAAA,EAGC;AAAA,OAEM;AAEP,SAAS,kBAAkB;AAEpB,MAAM,+BAEb;AAAA,EASC,YACC,aACiB,sBACA,aAChB;AAFgB;AACA;AAEjB,SAAK,SAAS,YAAY;AAAA,MACzB,YAAY;AAAA,IACb;AAAA,EACD;AAAA,EAzCD,OAwBA;AAAA;AAAA;AAAA,EACC,OAAe,cAAc;AAAA,EAEZ,4BAA4B,oBAAI,IAG/C;AAAA,EACe;AAAA,EAYjB,oCACC,QACA,UACoB;AAGpB,QAAI,OAAO,KAAK,OAAO,EAAE,QAAQ,MAAM,KAAK,GAAG;AAC9C,YAAM,IAAI,MAAM,WAAW,MAAM,sBAAsB;AAAA,IACxD;AAEA,UAAM,SAAS,+BAA+B;AAE9C,SAAK,0BAA0B,IAAI,QAAQ,QAAQ;AACnD,SAAK,OAAO,6BAA6B,QAAQ,MAAM;AAEvD,QAAI;AACJ,QAAI,OAAO,SAAS,gBAAgB,YAAY;AAC/C,UAAI;AAEJ,qBAAe,SAAS,YAAY,OAAO,QAAQ;AAClD,YAAI,IAAI,WAAW,QAAQ;AAC1B,eAAK,YAAY;AAAA,YAChB,wBAAwB,MAAM,iCAAiC,IAAI,MAAM;AAAA,UAC1E;AACA;AAAA,QACD;AACA,YAAI,CAAC,KAAK,qBAAqB,YAAY,GAAG,GAAG;AAEhD;AAAA,QACD;AAEA,YAAI,WAAW;AACd,gBAAM;AAAA,QACP;AAEA,cAAM,YAAY,KAAK,4BAA4B,QAAQ,GAAG,EAC5D,KAAK,OAAO,UAAU;AACtB,cAAI,CAAC,SAAS,OAAO,UAAU,UAAU;AACxC;AAAA,UACD;AAEA,gBAAM,WACL,KAAK,qBAAqB,YAAY,GAAG;AAC1C,cAAI,CAAC,UAAU;AAEd;AAAA,UACD;AAGA,gBAAM,QAAQ,WAAW,KAAK;AAG9B,cAAI,CAAC,SAAS,WAAW,KAAK,GAAG;AAChC,mBAAO,KAAK,OAAO;AAAA,cAClB;AAAA,cACA;AAAA,YACD;AAAA,UACD;AAAA,QACD,CAAC,EACA,MAAM,iBAAiB,EACvB,QAAQ,MAAM;AACd,cAAI,cAAc,WAAW;AAC5B,wBAAY;AAAA,UACb;AAAA,QACD,CAAC;AAEF,oBAAY;AAAA,MACb,CAAC;AAAA,IACF;AACA,WAAO,IAAI,WAAW,MAAM;AAC3B,UAAI,KAAK,0BAA0B,OAAO,MAAM,GAAG;AAClD,aAAK,OAAO,+BAA+B,MAAM;AAAA,MAClD;AACA,UAAI,cAAc;AACjB,qBAAa,QAAQ;AACrB,uBAAe;AAAA,MAChB;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEA,4BACC,QACA,KACqC;AACrC,UAAM,WAAW,KAAK,0BAA0B,IAAI,MAAM;AAC1D,QAAI,CAAC,UAAU;AACd,aAAO,QAAQ;AAAA,QACd,IAAI,MAAM,2BAA2B,IAAI,MAAM,EAAE;AAAA,MAClD;AAAA,IACD;AACA,WAAO,QAAQ;AAAA,MACd,SAAS;AAAA,QACR,IAAI,OAAO,GAAG;AAAA,QACd,kBAAkB;AAAA,MACnB;AAAA,IACD;AAAA,EACD;AACD;",
  "names": []
}
