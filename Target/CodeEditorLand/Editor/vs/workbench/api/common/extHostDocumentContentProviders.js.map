{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostDocumentContentProviders.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { URI, UriComponents } from '../../../base/common/uri.js';\nimport { IDisposable } from '../../../base/common/lifecycle.js';\nimport { Disposable } from './extHostTypes.js';\nimport type * as vscode from 'vscode';\nimport { MainContext, ExtHostDocumentContentProvidersShape, MainThreadDocumentContentProvidersShape, IMainContext } from './extHost.protocol.js';\nimport { ExtHostDocumentsAndEditors } from './extHostDocumentsAndEditors.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { splitLines } from '../../../base/common/strings.js';\n\nexport class ExtHostDocumentContentProvider implements ExtHostDocumentContentProvidersShape {\n\n\tprivate static _handlePool = 0;\n\n\tprivate readonly _documentContentProviders = new Map<number, vscode.TextDocumentContentProvider>();\n\tprivate readonly _proxy: MainThreadDocumentContentProvidersShape;\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\tprivate readonly _documentsAndEditors: ExtHostDocumentsAndEditors,\n\t\tprivate readonly _logService: ILogService,\n\t) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadDocumentContentProviders);\n\t}\n\n\tregisterTextDocumentContentProvider(scheme: string, provider: vscode.TextDocumentContentProvider): vscode.Disposable {\n\t\t// todo@remote\n\t\t// check with scheme from fs-providers!\n\t\tif (Object.keys(Schemas).indexOf(scheme) >= 0) {\n\t\t\tthrow new Error(`scheme '${scheme}' already registered`);\n\t\t}\n\n\t\tconst handle = ExtHostDocumentContentProvider._handlePool++;\n\n\t\tthis._documentContentProviders.set(handle, provider);\n\t\tthis._proxy.$registerTextContentProvider(handle, scheme);\n\n\t\tlet subscription: IDisposable | undefined;\n\t\tif (typeof provider.onDidChange === 'function') {\n\n\t\t\tlet lastEvent: Promise<void> | undefined;\n\n\t\t\tsubscription = provider.onDidChange(async uri => {\n\t\t\t\tif (uri.scheme !== scheme) {\n\t\t\t\t\tthis._logService.warn(`Provider for scheme '${scheme}' is firing event for schema '${uri.scheme}' which will be IGNORED`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (!this._documentsAndEditors.getDocument(uri)) {\n\t\t\t\t\t// ignore event if document isn't open\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (lastEvent) {\n\t\t\t\t\tawait lastEvent;\n\t\t\t\t}\n\n\t\t\t\tconst thisEvent = this.$provideTextDocumentContent(handle, uri)\n\t\t\t\t\t.then(async value => {\n\t\t\t\t\t\tif (!value && typeof value !== 'string') {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst document = this._documentsAndEditors.getDocument(uri);\n\t\t\t\t\t\tif (!document) {\n\t\t\t\t\t\t\t// disposed in the meantime\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// create lines and compare\n\t\t\t\t\t\tconst lines = splitLines(value);\n\n\t\t\t\t\t\t// broadcast event when content changed\n\t\t\t\t\t\tif (!document.equalLines(lines)) {\n\t\t\t\t\t\t\treturn this._proxy.$onVirtualDocumentChange(uri, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(onUnexpectedError)\n\t\t\t\t\t.finally(() => {\n\t\t\t\t\t\tif (lastEvent === thisEvent) {\n\t\t\t\t\t\t\tlastEvent = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\tlastEvent = thisEvent;\n\t\t\t});\n\t\t}\n\t\treturn new Disposable(() => {\n\t\t\tif (this._documentContentProviders.delete(handle)) {\n\t\t\t\tthis._proxy.$unregisterTextContentProvider(handle);\n\t\t\t}\n\t\t\tif (subscription) {\n\t\t\t\tsubscription.dispose();\n\t\t\t\tsubscription = undefined;\n\t\t\t}\n\t\t});\n\t}\n\n\t$provideTextDocumentContent(handle: number, uri: UriComponents): Promise<string | null | undefined> {\n\t\tconst provider = this._documentContentProviders.get(handle);\n\t\tif (!provider) {\n\t\t\treturn Promise.reject(new Error(`unsupported uri-scheme: ${uri.scheme}`));\n\t\t}\n\t\treturn Promise.resolve(provider.provideTextDocumentContent(URI.revive(uri), CancellationToken.None));\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,yBAAyB;AAClC,SAAS,KAAK,qBAAqB;AACnC,SAAS,mBAAmB;AAC5B,SAAS,kBAAkB;AAE3B,SAAS,aAAa,sCAAsC,yCAAyC,oBAAoB;AACzH,SAAS,kCAAkC;AAC3C,SAAS,eAAe;AACxB,SAAS,mBAAmB;AAC5B,SAAS,yBAAyB;AAClC,SAAS,kBAAkB;AAEpB,MAAM,+BAA+E;AAAA,EAO3F,YACC,aACiB,sBACA,aAChB;AAFgB;AACA;AAEjB,SAAK,SAAS,YAAY,SAAS,YAAY,kCAAkC;AAAA,EAClF;AAAA,EA9BD,OAiB4F;AAAA;AAAA;AAAA,EAE3F,OAAe,cAAc;AAAA,EAEZ,4BAA4B,oBAAI,IAAgD;AAAA,EAChF;AAAA,EAUjB,oCAAoC,QAAgB,UAAiE;AAGpH,QAAI,OAAO,KAAK,OAAO,EAAE,QAAQ,MAAM,KAAK,GAAG;AAC9C,YAAM,IAAI,MAAM,WAAW,MAAM,sBAAsB;AAAA,IACxD;AAEA,UAAM,SAAS,+BAA+B;AAE9C,SAAK,0BAA0B,IAAI,QAAQ,QAAQ;AACnD,SAAK,OAAO,6BAA6B,QAAQ,MAAM;AAEvD,QAAI;AACJ,QAAI,OAAO,SAAS,gBAAgB,YAAY;AAE/C,UAAI;AAEJ,qBAAe,SAAS,YAAY,OAAM,QAAO;AAChD,YAAI,IAAI,WAAW,QAAQ;AAC1B,eAAK,YAAY,KAAK,wBAAwB,MAAM,iCAAiC,IAAI,MAAM,yBAAyB;AACxH;AAAA,QACD;AACA,YAAI,CAAC,KAAK,qBAAqB,YAAY,GAAG,GAAG;AAEhD;AAAA,QACD;AAEA,YAAI,WAAW;AACd,gBAAM;AAAA,QACP;AAEA,cAAM,YAAY,KAAK,4BAA4B,QAAQ,GAAG,EAC5D,KAAK,OAAM,UAAS;AACpB,cAAI,CAAC,SAAS,OAAO,UAAU,UAAU;AACxC;AAAA,UACD;AAEA,gBAAM,WAAW,KAAK,qBAAqB,YAAY,GAAG;AAC1D,cAAI,CAAC,UAAU;AAEd;AAAA,UACD;AAGA,gBAAM,QAAQ,WAAW,KAAK;AAG9B,cAAI,CAAC,SAAS,WAAW,KAAK,GAAG;AAChC,mBAAO,KAAK,OAAO,yBAAyB,KAAK,KAAK;AAAA,UACvD;AAAA,QACD,CAAC,EACA,MAAM,iBAAiB,EACvB,QAAQ,MAAM;AACd,cAAI,cAAc,WAAW;AAC5B,wBAAY;AAAA,UACb;AAAA,QACD,CAAC;AAEF,oBAAY;AAAA,MACb,CAAC;AAAA,IACF;AACA,WAAO,IAAI,WAAW,MAAM;AAC3B,UAAI,KAAK,0BAA0B,OAAO,MAAM,GAAG;AAClD,aAAK,OAAO,+BAA+B,MAAM;AAAA,MAClD;AACA,UAAI,cAAc;AACjB,qBAAa,QAAQ;AACrB,uBAAe;AAAA,MAChB;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEA,4BAA4B,QAAgB,KAAwD;AACnG,UAAM,WAAW,KAAK,0BAA0B,IAAI,MAAM;AAC1D,QAAI,CAAC,UAAU;AACd,aAAO,QAAQ,OAAO,IAAI,MAAM,2BAA2B,IAAI,MAAM,EAAE,CAAC;AAAA,IACzE;AACA,WAAO,QAAQ,QAAQ,SAAS,2BAA2B,IAAI,OAAO,GAAG,GAAG,kBAAkB,IAAI,CAAC;AAAA,EACpG;AACD;",
  "names": []
}
