{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostStoragePaths.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from \"../../../base/common/uri.js\";\nimport type { IExtensionDescription } from \"../../../platform/extensions/common/extensions.js\";\nimport { createDecorator } from \"../../../platform/instantiation/common/instantiation.js\";\nimport { ILogService } from \"../../../platform/log/common/log.js\";\nimport type {\n\tIEnvironment,\n\tIStaticWorkspaceData,\n} from \"../../services/extensions/common/extensionHostProtocol.js\";\nimport { IExtHostConsumerFileSystem } from \"./extHostFileSystemConsumer.js\";\nimport { IExtHostInitDataService } from \"./extHostInitDataService.js\";\n\nexport const IExtensionStoragePaths = createDecorator<IExtensionStoragePaths>(\n\t\"IExtensionStoragePaths\",\n);\n\nexport interface IExtensionStoragePaths {\n\treadonly _serviceBrand: undefined;\n\twhenReady: Promise<any>;\n\tworkspaceValue(extension: IExtensionDescription): URI | undefined;\n\tglobalValue(extension: IExtensionDescription): URI;\n\tonWillDeactivateAll(): void;\n}\n\nexport class ExtensionStoragePaths implements IExtensionStoragePaths {\n\treadonly _serviceBrand: undefined;\n\n\tprivate readonly _workspace?: IStaticWorkspaceData;\n\tprotected readonly _environment: IEnvironment;\n\n\treadonly whenReady: Promise<URI | undefined>;\n\tprivate _value?: URI;\n\n\tconstructor(\n\t\t@IExtHostInitDataService initData: IExtHostInitDataService,\n\t\t@ILogService protected readonly _logService: ILogService,\n\t\t@IExtHostConsumerFileSystem private readonly _extHostFileSystem: IExtHostConsumerFileSystem\n\t) {\n\t\tthis._workspace = initData.workspace ?? undefined;\n\t\tthis._environment = initData.environment;\n\t\tthis.whenReady = this._getOrCreateWorkspaceStoragePath().then(value => this._value = value);\n\t}\n\n\tprotected async _getWorkspaceStorageURI(storageName: string): Promise<URI> {\n\t\treturn URI.joinPath(\n\t\t\tthis._environment.workspaceStorageHome,\n\t\t\tstorageName,\n\t\t);\n\t}\n\n\tprivate async _getOrCreateWorkspaceStoragePath(): Promise<URI | undefined> {\n\t\tif (!this._workspace) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\t\tconst storageName = this._workspace.id;\n\t\tconst storageUri = await this._getWorkspaceStorageURI(storageName);\n\n\t\ttry {\n\t\t\tawait this._extHostFileSystem.value.stat(storageUri);\n\t\t\tthis._logService.trace(\n\t\t\t\t\"[ExtHostStorage] storage dir already exists\",\n\t\t\t\tstorageUri,\n\t\t\t);\n\t\t\treturn storageUri;\n\t\t} catch {\n\t\t\t// doesn't exist, that's OK\n\t\t}\n\n\t\ttry {\n\t\t\tthis._logService.trace(\n\t\t\t\t\"[ExtHostStorage] creating dir and metadata-file\",\n\t\t\t\tstorageUri,\n\t\t\t);\n\t\t\tawait this._extHostFileSystem.value.createDirectory(storageUri);\n\t\t\tawait this._extHostFileSystem.value.writeFile(\n\t\t\t\tURI.joinPath(storageUri, \"meta.json\"),\n\t\t\t\tnew TextEncoder().encode(\n\t\t\t\t\tJSON.stringify(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: this._workspace.id,\n\t\t\t\t\t\t\tconfiguration: URI.revive(\n\t\t\t\t\t\t\t\tthis._workspace.configuration,\n\t\t\t\t\t\t\t)?.toString(),\n\t\t\t\t\t\t\tname: this._workspace.name,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t2,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t);\n\t\t\treturn storageUri;\n\t\t} catch (e) {\n\t\t\tthis._logService.error(\"[ExtHostStorage]\", e);\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tworkspaceValue(extension: IExtensionDescription): URI | undefined {\n\t\tif (this._value) {\n\t\t\treturn URI.joinPath(this._value, extension.identifier.value);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tglobalValue(extension: IExtensionDescription): URI {\n\t\treturn URI.joinPath(\n\t\t\tthis._environment.globalStorageHome,\n\t\t\textension.identifier.value.toLowerCase(),\n\t\t);\n\t}\n\n\tonWillDeactivateAll(): void {}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,WAAW;AAEpB,SAAS,uBAAuB;AAChC,SAAS,mBAAmB;AAK5B,SAAS,kCAAkC;AAC3C,SAAS,+BAA+B;AAEjC,MAAM,yBAAyB;AAAA,EACrC;AACD;AAUO,IAAM,wBAAN,MAA8D;AAAA,EASpE,YAC0B,UACO,aACa,oBAC5C;AAF+B;AACa;AAE7C,SAAK,aAAa,SAAS,aAAa;AACxC,SAAK,eAAe,SAAS;AAC7B,SAAK,YAAY,KAAK,iCAAiC,EAAE,KAAK,WAAS,KAAK,SAAS,KAAK;AAAA,EAC3F;AAAA,EA7CD,OA4BqE;AAAA;AAAA;AAAA,EAC3D;AAAA,EAEQ;AAAA,EACE;AAAA,EAEV;AAAA,EACD;AAAA,EAYR,MAAgB,wBAAwB,aAAmC;AAC1E,WAAO,IAAI;AAAA,MACV,KAAK,aAAa;AAAA,MAClB;AAAA,IACD;AAAA,EACD;AAAA,EAEA,MAAc,mCAA6D;AAC1E,QAAI,CAAC,KAAK,YAAY;AACrB,aAAO,QAAQ,QAAQ,MAAS;AAAA,IACjC;AACA,UAAM,cAAc,KAAK,WAAW;AACpC,UAAM,aAAa,MAAM,KAAK,wBAAwB,WAAW;AAEjE,QAAI;AACH,YAAM,KAAK,mBAAmB,MAAM,KAAK,UAAU;AACnD,WAAK,YAAY;AAAA,QAChB;AAAA,QACA;AAAA,MACD;AACA,aAAO;AAAA,IACR,QAAQ;AAAA,IAER;AAEA,QAAI;AACH,WAAK,YAAY;AAAA,QAChB;AAAA,QACA;AAAA,MACD;AACA,YAAM,KAAK,mBAAmB,MAAM,gBAAgB,UAAU;AAC9D,YAAM,KAAK,mBAAmB,MAAM;AAAA,QACnC,IAAI,SAAS,YAAY,WAAW;AAAA,QACpC,IAAI,YAAY,EAAE;AAAA,UACjB,KAAK;AAAA,YACJ;AAAA,cACC,IAAI,KAAK,WAAW;AAAA,cACpB,eAAe,IAAI;AAAA,gBAClB,KAAK,WAAW;AAAA,cACjB,GAAG,SAAS;AAAA,cACZ,MAAM,KAAK,WAAW;AAAA,YACvB;AAAA,YACA;AAAA,YACA;AAAA,UACD;AAAA,QACD;AAAA,MACD;AACA,aAAO;AAAA,IACR,SAAS,GAAG;AACX,WAAK,YAAY,MAAM,oBAAoB,CAAC;AAC5C,aAAO;AAAA,IACR;AAAA,EACD;AAAA,EAEA,eAAe,WAAmD;AACjE,QAAI,KAAK,QAAQ;AAChB,aAAO,IAAI,SAAS,KAAK,QAAQ,UAAU,WAAW,KAAK;AAAA,IAC5D;AACA,WAAO;AAAA,EACR;AAAA,EAEA,YAAY,WAAuC;AAClD,WAAO,IAAI;AAAA,MACV,KAAK,aAAa;AAAA,MAClB,UAAU,WAAW,MAAM,YAAY;AAAA,IACxC;AAAA,EACD;AAAA,EAEA,sBAA4B;AAAA,EAAC;AAC9B;AAxFa,wBAAN;AAAA,EAUJ;AAAA,EACA;AAAA,EACA;AAAA,GAZU;",
  "names": []
}
