{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostChatVariables.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type * as vscode from \"vscode\";\nimport type { CancellationToken } from \"../../../base/common/cancellation.js\";\nimport { onUnexpectedExternalError } from \"../../../base/common/errors.js\";\nimport {\n\ttype IDisposable,\n\ttoDisposable,\n} from \"../../../base/common/lifecycle.js\";\nimport { ThemeIcon } from \"../../../base/common/themables.js\";\nimport type { IExtensionDescription } from \"../../../platform/extensions/common/extensions.js\";\nimport type {\n\tIChatRequestVariableValue,\n\tIChatVariableData,\n} from \"../../contrib/chat/common/chatVariables.js\";\nimport { checkProposedApiEnabled } from \"../../services/extensions/common/extensions.js\";\nimport {\n\ttype ExtHostChatVariablesShape,\n\ttype IChatVariableResolverProgressDto,\n\ttype IMainContext,\n\tMainContext,\n\ttype MainThreadChatVariablesShape,\n} from \"./extHost.protocol.js\";\nimport * as typeConvert from \"./extHostTypeConverters.js\";\nimport * as extHostTypes from \"./extHostTypes.js\";\n\nexport class ExtHostChatVariables implements ExtHostChatVariablesShape {\n\tprivate static _idPool = 0;\n\n\tprivate readonly _resolver = new Map<\n\t\tnumber,\n\t\t{\n\t\t\textension: IExtensionDescription;\n\t\t\tdata: IChatVariableData;\n\t\t\tresolver: vscode.ChatVariableResolver;\n\t\t}\n\t>();\n\tprivate readonly _proxy: MainThreadChatVariablesShape;\n\n\tconstructor(mainContext: IMainContext) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadChatVariables);\n\t}\n\n\tasync $resolveVariable(\n\t\thandle: number,\n\t\trequestId: string,\n\t\tmessageText: string,\n\t\ttoken: CancellationToken,\n\t): Promise<IChatRequestVariableValue | undefined> {\n\t\tconst item = this._resolver.get(handle);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\ttry {\n\t\t\tif (item.resolver.resolve2) {\n\t\t\t\tcheckProposedApiEnabled(\n\t\t\t\t\titem.extension,\n\t\t\t\t\t\"chatParticipantAdditions\",\n\t\t\t\t);\n\t\t\t\tconst stream = new ChatVariableResolverResponseStream(\n\t\t\t\t\trequestId,\n\t\t\t\t\tthis._proxy,\n\t\t\t\t);\n\t\t\t\tconst value = await item.resolver.resolve2(\n\t\t\t\t\titem.data.name,\n\t\t\t\t\t{ prompt: messageText },\n\t\t\t\t\tstream.apiObject,\n\t\t\t\t\ttoken,\n\t\t\t\t);\n\n\t\t\t\t// Temp, ignoring other returned values to convert the array into a single value\n\t\t\t\tif (value && value[0]) {\n\t\t\t\t\treturn value[0].value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst value = await item.resolver.resolve(\n\t\t\t\t\titem.data.name,\n\t\t\t\t\t{ prompt: messageText },\n\t\t\t\t\ttoken,\n\t\t\t\t);\n\t\t\t\tif (value && value[0]) {\n\t\t\t\t\treturn value[0].value;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tonUnexpectedExternalError(err);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tregisterVariableResolver(\n\t\textension: IExtensionDescription,\n\t\tid: string,\n\t\tname: string,\n\t\tuserDescription: string,\n\t\tmodelDescription: string | undefined,\n\t\tisSlow: boolean | undefined,\n\t\tresolver: vscode.ChatVariableResolver,\n\t\tfullName?: string,\n\t\tthemeIconId?: string,\n\t): IDisposable {\n\t\tconst handle = ExtHostChatVariables._idPool++;\n\t\tconst icon = themeIconId ? ThemeIcon.fromId(themeIconId) : undefined;\n\t\tthis._resolver.set(handle, {\n\t\t\textension,\n\t\t\tdata: {\n\t\t\t\tid,\n\t\t\t\tname,\n\t\t\t\tdescription: userDescription,\n\t\t\t\tmodelDescription,\n\t\t\t\ticon,\n\t\t\t},\n\t\t\tresolver: resolver,\n\t\t});\n\t\tthis._proxy.$registerVariable(handle, {\n\t\t\tid,\n\t\t\tname,\n\t\t\tdescription: userDescription,\n\t\t\tmodelDescription,\n\t\t\tisSlow,\n\t\t\tfullName,\n\t\t\ticon,\n\t\t});\n\n\t\treturn toDisposable(() => {\n\t\t\tthis._resolver.delete(handle);\n\t\t\tthis._proxy.$unregisterVariable(handle);\n\t\t});\n\t}\n}\n\nclass ChatVariableResolverResponseStream {\n\tprivate _isClosed = false;\n\tprivate _apiObject: vscode.ChatVariableResolverResponseStream | undefined;\n\n\tconstructor(\n\t\tprivate readonly _requestId: string,\n\t\tprivate readonly _proxy: MainThreadChatVariablesShape,\n\t) {}\n\n\tclose() {\n\t\tthis._isClosed = true;\n\t}\n\n\tget apiObject() {\n\t\tif (!this._apiObject) {\n\t\t\tconst that = this;\n\n\t\t\tfunction throwIfDone(source: Function | undefined) {\n\t\t\t\tif (that._isClosed) {\n\t\t\t\t\tconst err = new Error(\"Response stream has been closed\");\n\t\t\t\t\tError.captureStackTrace(err, source);\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst _report = (progress: IChatVariableResolverProgressDto) => {\n\t\t\t\tthis._proxy.$handleProgressChunk(this._requestId, progress);\n\t\t\t};\n\n\t\t\tthis._apiObject = {\n\t\t\t\tprogress(value) {\n\t\t\t\t\tthrowIfDone(this.progress);\n\t\t\t\t\tconst part = new extHostTypes.ChatResponseProgressPart(\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t);\n\t\t\t\t\tconst dto = typeConvert.ChatResponseProgressPart.from(part);\n\t\t\t\t\t_report(dto);\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\treference(value) {\n\t\t\t\t\tthrowIfDone(this.reference);\n\t\t\t\t\tconst part = new extHostTypes.ChatResponseReferencePart(\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t);\n\t\t\t\t\tconst dto =\n\t\t\t\t\t\ttypeConvert.ChatResponseReferencePart.from(part);\n\t\t\t\t\t_report(dto);\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tpush(part) {\n\t\t\t\t\tthrowIfDone(this.push);\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tpart instanceof extHostTypes.ChatResponseReferencePart\n\t\t\t\t\t) {\n\t\t\t\t\t\t_report(\n\t\t\t\t\t\t\ttypeConvert.ChatResponseReferencePart.from(part),\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tpart instanceof extHostTypes.ChatResponseProgressPart\n\t\t\t\t\t) {\n\t\t\t\t\t\t_report(\n\t\t\t\t\t\t\ttypeConvert.ChatResponseProgressPart.from(part),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\treturn this._apiObject;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["throwIfDone"]
}
