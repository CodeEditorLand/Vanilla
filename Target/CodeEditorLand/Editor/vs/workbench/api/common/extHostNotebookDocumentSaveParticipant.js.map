{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostNotebookDocumentSaveParticipant.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { AsyncEmitter, Event } from '../../../base/common/event.js';\nimport { URI, UriComponents } from '../../../base/common/uri.js';\nimport { IExtensionDescription } from '../../../platform/extensions/common/extensions.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { ExtHostNotebookDocumentSaveParticipantShape, IWorkspaceEditDto, MainThreadBulkEditsShape } from './extHost.protocol.js';\nimport { ExtHostNotebookController } from './extHostNotebook.js';\nimport { TextDocumentSaveReason, WorkspaceEdit as WorksapceEditConverter } from './extHostTypeConverters.js';\nimport { WorkspaceEdit } from './extHostTypes.js';\nimport { SaveReason } from '../../common/editor.js';\nimport { SerializableObjectWithBuffers } from '../../services/extensions/common/proxyIdentifier.js';\nimport { NotebookDocumentWillSaveEvent } from 'vscode';\n\ninterface IExtensionListener<E> {\n\textension: IExtensionDescription;\n\t(e: E): any;\n}\n\nexport class ExtHostNotebookDocumentSaveParticipant implements ExtHostNotebookDocumentSaveParticipantShape {\n\n\tprivate readonly _onWillSaveNotebookDocumentEvent = new AsyncEmitter<NotebookDocumentWillSaveEvent>();\n\n\tconstructor(\n\t\tprivate readonly _logService: ILogService,\n\t\tprivate readonly _notebooksAndEditors: ExtHostNotebookController,\n\t\tprivate readonly _mainThreadBulkEdits: MainThreadBulkEditsShape,\n\t\tprivate readonly _thresholds: { timeout: number; errors: number } = { timeout: 1500, errors: 3 }) {\n\n\t}\n\n\tdispose(): void {\n\t}\n\n\tgetOnWillSaveNotebookDocumentEvent(extension: IExtensionDescription): Event<NotebookDocumentWillSaveEvent> {\n\t\treturn (listener, thisArg, disposables) => {\n\t\t\tconst wrappedListener: IExtensionListener<NotebookDocumentWillSaveEvent> = function wrapped(e) { listener.call(thisArg, e); };\n\t\t\twrappedListener.extension = extension;\n\t\t\treturn this._onWillSaveNotebookDocumentEvent.event(wrappedListener, undefined, disposables);\n\t\t};\n\t}\n\n\tasync $participateInSave(resource: UriComponents, reason: SaveReason, token: CancellationToken): Promise<boolean> {\n\t\tconst revivedUri = URI.revive(resource);\n\t\tconst document = this._notebooksAndEditors.getNotebookDocument(revivedUri);\n\n\t\tif (!document) {\n\t\t\tthrow new Error('Unable to resolve notebook document');\n\t\t}\n\n\t\tconst edits: WorkspaceEdit[] = [];\n\n\t\tawait this._onWillSaveNotebookDocumentEvent.fireAsync({ notebook: document.apiNotebook, reason: TextDocumentSaveReason.to(reason) }, token, async (thenable: Promise<unknown>, listener) => {\n\t\t\tconst now = Date.now();\n\t\t\tconst data = await await Promise.resolve(thenable);\n\t\t\tif (Date.now() - now > this._thresholds.timeout) {\n\t\t\t\tthis._logService.warn('onWillSaveNotebookDocument-listener from extension', (<IExtensionListener<NotebookDocumentWillSaveEvent>>listener).extension.identifier);\n\t\t\t}\n\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (data) {\n\t\t\t\tif (data instanceof WorkspaceEdit) {\n\t\t\t\t\tedits.push(data);\n\t\t\t\t} else {\n\t\t\t\t\t// ignore invalid data\n\t\t\t\t\tthis._logService.warn('onWillSaveNotebookDocument-listener from extension', (<IExtensionListener<NotebookDocumentWillSaveEvent>>listener).extension.identifier, 'ignored due to invalid data');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t});\n\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (edits.length === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst dto: IWorkspaceEditDto = { edits: [] };\n\t\tfor (const edit of edits) {\n\t\t\tconst { edits } = WorksapceEditConverter.from(edit);\n\t\t\tdto.edits = dto.edits.concat(edits);\n\t\t}\n\n\t\treturn this._mainThreadBulkEdits.$tryApplyWorkspaceEdit(new SerializableObjectWithBuffers(dto));\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,yBAAyB;AAClC,SAAS,cAAc,aAAa;AACpC,SAAS,KAAK,qBAAqB;AACnC,SAAS,6BAA6B;AACtC,SAAS,mBAAmB;AAC5B,SAAS,6CAA6C,mBAAmB,gCAAgC;AACzG,SAAS,iCAAiC;AAC1C,SAAS,wBAAwB,iBAAiB,8BAA8B;AAChF,SAAS,qBAAqB;AAC9B,SAAS,kBAAkB;AAC3B,SAAS,qCAAqC;AAC9C,SAAS,qCAAqC;AAOvC,MAAM,uCAA8F;AAAA,EAI1G,YACkB,aACA,sBACA,sBACA,cAAmD,EAAE,SAAS,MAAM,QAAQ,EAAE,GAAG;AAHjF;AACA;AACA;AACA;AAAA,EAElB;AAAA,EAjCD,OAuB2G;AAAA;AAAA;AAAA,EAEzF,mCAAmC,IAAI,aAA4C;AAAA,EAUpG,UAAgB;AAAA,EAChB;AAAA,EAEA,mCAAmC,WAAwE;AAC1G,WAAO,CAAC,UAAU,SAAS,gBAAgB;AAC1C,YAAM,kBAAqE,gCAAS,QAAQ,GAAG;AAAE,iBAAS,KAAK,SAAS,CAAC;AAAA,MAAG,GAAjD;AAC3E,sBAAgB,YAAY;AAC5B,aAAO,KAAK,iCAAiC,MAAM,iBAAiB,QAAW,WAAW;AAAA,IAC3F;AAAA,EACD;AAAA,EAEA,MAAM,mBAAmB,UAAyB,QAAoB,OAA4C;AACjH,UAAM,aAAa,IAAI,OAAO,QAAQ;AACtC,UAAM,WAAW,KAAK,qBAAqB,oBAAoB,UAAU;AAEzE,QAAI,CAAC,UAAU;AACd,YAAM,IAAI,MAAM,qCAAqC;AAAA,IACtD;AAEA,UAAM,QAAyB,CAAC;AAEhC,UAAM,KAAK,iCAAiC,UAAU,EAAE,UAAU,SAAS,aAAa,QAAQ,uBAAuB,GAAG,MAAM,EAAE,GAAG,OAAO,OAAO,UAA4B,aAAa;AAC3L,YAAM,MAAM,KAAK,IAAI;AACrB,YAAM,OAAO,MAAM,MAAM,QAAQ,QAAQ,QAAQ;AACjD,UAAI,KAAK,IAAI,IAAI,MAAM,KAAK,YAAY,SAAS;AAChD,aAAK,YAAY,KAAK,sDAA0G,SAAU,UAAU,UAAU;AAAA,MAC/J;AAEA,UAAI,MAAM,yBAAyB;AAClC;AAAA,MACD;AAEA,UAAI,MAAM;AACT,YAAI,gBAAgB,eAAe;AAClC,gBAAM,KAAK,IAAI;AAAA,QAChB,OAAO;AAEN,eAAK,YAAY,KAAK,sDAA0G,SAAU,UAAU,YAAY,6BAA6B;AAAA,QAC9L;AAAA,MACD;AAEA;AAAA,IACD,CAAC;AAED,QAAI,MAAM,yBAAyB;AAClC,aAAO;AAAA,IACR;AAEA,QAAI,MAAM,WAAW,GAAG;AACvB,aAAO;AAAA,IACR;AAEA,UAAM,MAAyB,EAAE,OAAO,CAAC,EAAE;AAC3C,eAAW,QAAQ,OAAO;AACzB,YAAM,EAAE,OAAAA,OAAM,IAAI,uBAAuB,KAAK,IAAI;AAClD,UAAI,QAAQ,IAAI,MAAM,OAAOA,MAAK;AAAA,IACnC;AAEA,WAAO,KAAK,qBAAqB,uBAAuB,IAAI,8BAA8B,GAAG,CAAC;AAAA,EAC/F;AACD;",
  "names": ["edits"]
}
