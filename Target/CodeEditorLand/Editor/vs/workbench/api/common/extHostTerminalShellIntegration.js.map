{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostTerminalShellIntegration.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type * as vscode from \"vscode\";\nimport {\n\ttype AsyncIterableEmitter,\n\tAsyncIterableObject,\n\tBarrier,\n} from \"../../../base/common/async.js\";\nimport { Emitter, type Event } from \"../../../base/common/event.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttoDisposable,\n} from \"../../../base/common/lifecycle.js\";\nimport { URI, type UriComponents } from \"../../../base/common/uri.js\";\nimport { createDecorator } from \"../../../platform/instantiation/common/instantiation.js\";\nimport {\n\ttype ExtHostTerminalShellIntegrationShape,\n\tMainContext,\n\ttype MainThreadTerminalShellIntegrationShape,\n} from \"./extHost.protocol.js\";\nimport { IExtHostRpcService } from \"./extHostRpcService.js\";\nimport { IExtHostTerminalService } from \"./extHostTerminalService.js\";\nimport { TerminalShellExecutionCommandLineConfidence } from \"./extHostTypes.js\";\n\nexport interface IExtHostTerminalShellIntegration\n\textends ExtHostTerminalShellIntegrationShape {\n\treadonly _serviceBrand: undefined;\n\n\treadonly onDidChangeTerminalShellIntegration: Event<vscode.TerminalShellIntegrationChangeEvent>;\n\treadonly onDidStartTerminalShellExecution: Event<vscode.TerminalShellExecutionStartEvent>;\n\treadonly onDidEndTerminalShellExecution: Event<vscode.TerminalShellExecutionEndEvent>;\n}\nexport const IExtHostTerminalShellIntegration =\n\tcreateDecorator<IExtHostTerminalShellIntegration>(\n\t\t\"IExtHostTerminalShellIntegration\",\n\t);\n\nexport class ExtHostTerminalShellIntegration\n\textends Disposable\n\timplements IExtHostTerminalShellIntegration\n{\n\treadonly _serviceBrand: undefined;\n\n\tprotected _proxy: MainThreadTerminalShellIntegrationShape;\n\n\tprivate _activeShellIntegrations: Map<\n\t\t/*instanceId*/ number,\n\t\tInternalTerminalShellIntegration\n\t> = new Map();\n\n\tprotected readonly _onDidChangeTerminalShellIntegration =\n\t\tnew Emitter<vscode.TerminalShellIntegrationChangeEvent>();\n\treadonly onDidChangeTerminalShellIntegration =\n\t\tthis._onDidChangeTerminalShellIntegration.event;\n\tprotected readonly _onDidStartTerminalShellExecution =\n\t\tnew Emitter<vscode.TerminalShellExecutionStartEvent>();\n\treadonly onDidStartTerminalShellExecution =\n\t\tthis._onDidStartTerminalShellExecution.event;\n\tprotected readonly _onDidEndTerminalShellExecution =\n\t\tnew Emitter<vscode.TerminalShellExecutionEndEvent>();\n\treadonly onDidEndTerminalShellExecution =\n\t\tthis._onDidEndTerminalShellExecution.event;\n\n\tconstructor(\n\t\t@IExtHostRpcService extHostRpc: IExtHostRpcService,\n\t\t@IExtHostTerminalService\n\t\tprivate readonly _extHostTerminalService: IExtHostTerminalService,\n\t) {\n\t\tsuper();\n\n\t\tthis._proxy = extHostRpc.getProxy(\n\t\t\tMainContext.MainThreadTerminalShellIntegration,\n\t\t);\n\n\t\t// Clean up listeners\n\t\tthis._register(\n\t\t\ttoDisposable(() => {\n\t\t\t\tfor (const [_, integration] of this._activeShellIntegrations) {\n\t\t\t\t\tintegration.dispose();\n\t\t\t\t}\n\t\t\t\tthis._activeShellIntegrations.clear();\n\t\t\t}),\n\t\t);\n\n\t\t// Convenient test code:\n\t\t// this.onDidChangeTerminalShellIntegration(e => {\n\t\t// \tconsole.log('*** onDidChangeTerminalShellIntegration', e);\n\t\t// });\n\t\t// this.onDidStartTerminalShellExecution(async e => {\n\t\t// \tconsole.log('*** onDidStartTerminalShellExecution', e);\n\t\t// \t// new Promise<void>(r => {\n\t\t// \t// \t(async () => {\n\t\t// \t// \t\tfor await (const d of e.execution.read()) {\n\t\t// \t// \t\t\tconsole.log('data2', d);\n\t\t// \t// \t\t}\n\t\t// \t// \t})();\n\t\t// \t// });\n\t\t// \tfor await (const d of e.execution.read()) {\n\t\t// \t\tconsole.log('data', d);\n\t\t// \t}\n\t\t// });\n\t\t// this.onDidEndTerminalShellExecution(e => {\n\t\t// \tconsole.log('*** onDidEndTerminalShellExecution', e);\n\t\t// });\n\t\t// setTimeout(() => {\n\t\t// \tconsole.log('before executeCommand(\\\"echo hello\\\")');\n\t\t// \tArray.from(this._activeShellIntegrations.values())[0].value.executeCommand('echo hello');\n\t\t// \tconsole.log('after executeCommand(\\\"echo hello\\\")');\n\t\t// }, 4000);\n\t}\n\n\tpublic $shellIntegrationChange(instanceId: number): void {\n\t\tconst terminal =\n\t\t\tthis._extHostTerminalService.getTerminalById(instanceId);\n\t\tif (!terminal) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst apiTerminal = terminal.value;\n\t\tlet shellIntegration = this._activeShellIntegrations.get(instanceId);\n\t\tif (!shellIntegration) {\n\t\t\tshellIntegration = new InternalTerminalShellIntegration(\n\t\t\t\tterminal.value,\n\t\t\t\tthis._onDidStartTerminalShellExecution,\n\t\t\t);\n\t\t\tthis._activeShellIntegrations.set(instanceId, shellIntegration);\n\t\t\tshellIntegration.store.add(\n\t\t\t\tterminal.onWillDispose(() =>\n\t\t\t\t\tthis._activeShellIntegrations.get(instanceId)?.dispose(),\n\t\t\t\t),\n\t\t\t);\n\t\t\tshellIntegration.store.add(\n\t\t\t\tshellIntegration.onDidRequestShellExecution((commandLine) =>\n\t\t\t\t\tthis._proxy.$executeCommand(instanceId, commandLine),\n\t\t\t\t),\n\t\t\t);\n\t\t\tshellIntegration.store.add(\n\t\t\t\tshellIntegration.onDidRequestEndExecution((e) =>\n\t\t\t\t\tthis._onDidEndTerminalShellExecution.fire(e),\n\t\t\t\t),\n\t\t\t);\n\t\t\tshellIntegration.store.add(\n\t\t\t\tshellIntegration.onDidRequestChangeShellIntegration((e) =>\n\t\t\t\t\tthis._onDidChangeTerminalShellIntegration.fire(e),\n\t\t\t\t),\n\t\t\t);\n\t\t\tterminal.shellIntegration = shellIntegration.value;\n\t\t}\n\t\tthis._onDidChangeTerminalShellIntegration.fire({\n\t\t\tterminal: apiTerminal,\n\t\t\tshellIntegration: shellIntegration.value,\n\t\t});\n\t}\n\n\tpublic $shellExecutionStart(\n\t\tinstanceId: number,\n\t\tcommandLineValue: string,\n\t\tcommandLineConfidence: TerminalShellExecutionCommandLineConfidence,\n\t\tisTrusted: boolean,\n\t\tcwd: UriComponents | undefined,\n\t): void {\n\t\t// Force shellIntegration creation if it hasn't been created yet, this could when events\n\t\t// don't come through on startup\n\t\tif (!this._activeShellIntegrations.has(instanceId)) {\n\t\t\tthis.$shellIntegrationChange(instanceId);\n\t\t}\n\t\tconst commandLine: vscode.TerminalShellExecutionCommandLine = {\n\t\t\tvalue: commandLineValue,\n\t\t\tconfidence: commandLineConfidence,\n\t\t\tisTrusted,\n\t\t};\n\t\tthis._activeShellIntegrations\n\t\t\t.get(instanceId)\n\t\t\t?.startShellExecution(commandLine, URI.revive(cwd));\n\t}\n\n\tpublic $shellExecutionEnd(\n\t\tinstanceId: number,\n\t\tcommandLineValue: string,\n\t\tcommandLineConfidence: TerminalShellExecutionCommandLineConfidence,\n\t\tisTrusted: boolean,\n\t\texitCode: number | undefined,\n\t): void {\n\t\tconst commandLine: vscode.TerminalShellExecutionCommandLine = {\n\t\t\tvalue: commandLineValue,\n\t\t\tconfidence: commandLineConfidence,\n\t\t\tisTrusted,\n\t\t};\n\t\tthis._activeShellIntegrations\n\t\t\t.get(instanceId)\n\t\t\t?.endShellExecution(commandLine, exitCode);\n\t}\n\n\tpublic $shellExecutionData(instanceId: number, data: string): void {\n\t\tthis._activeShellIntegrations.get(instanceId)?.emitData(data);\n\t}\n\n\tpublic $cwdChange(\n\t\tinstanceId: number,\n\t\tcwd: UriComponents | undefined,\n\t): void {\n\t\tthis._activeShellIntegrations.get(instanceId)?.setCwd(URI.revive(cwd));\n\t}\n\n\tpublic $closeTerminal(instanceId: number): void {\n\t\tthis._activeShellIntegrations.get(instanceId)?.dispose();\n\t\tthis._activeShellIntegrations.delete(instanceId);\n\t}\n}\n\nclass InternalTerminalShellIntegration extends Disposable {\n\tprivate _currentExecution: InternalTerminalShellExecution | undefined;\n\tget currentExecution(): InternalTerminalShellExecution | undefined {\n\t\treturn this._currentExecution;\n\t}\n\n\tprivate _ignoreNextExecution = false;\n\tprivate _cwd: URI | undefined;\n\n\treadonly store: DisposableStore = this._register(new DisposableStore());\n\n\treadonly value: vscode.TerminalShellIntegration;\n\n\tprotected readonly _onDidRequestChangeShellIntegration = this._register(\n\t\tnew Emitter<vscode.TerminalShellIntegrationChangeEvent>(),\n\t);\n\treadonly onDidRequestChangeShellIntegration =\n\t\tthis._onDidRequestChangeShellIntegration.event;\n\tprotected readonly _onDidRequestShellExecution = this._register(\n\t\tnew Emitter<string>(),\n\t);\n\treadonly onDidRequestShellExecution =\n\t\tthis._onDidRequestShellExecution.event;\n\tprotected readonly _onDidRequestEndExecution = this._register(\n\t\tnew Emitter<vscode.TerminalShellExecutionEndEvent>(),\n\t);\n\treadonly onDidRequestEndExecution = this._onDidRequestEndExecution.event;\n\n\tconstructor(\n\t\tprivate readonly _terminal: vscode.Terminal,\n\t\tprivate readonly _onDidStartTerminalShellExecution: Emitter<vscode.TerminalShellExecutionStartEvent>,\n\t) {\n\t\tsuper();\n\n\t\tconst that = this;\n\t\tthis.value = {\n\t\t\tget cwd(): URI | undefined {\n\t\t\t\treturn that._cwd;\n\t\t\t},\n\t\t\t// executeCommand(commandLine: string): vscode.TerminalShellExecution;\n\t\t\t// executeCommand(executable: string, args: string[]): vscode.TerminalShellExecution;\n\t\t\texecuteCommand(\n\t\t\t\tcommandLineOrExecutable: string,\n\t\t\t\targs?: string[],\n\t\t\t): vscode.TerminalShellExecution {\n\t\t\t\tlet commandLineValue: string = commandLineOrExecutable;\n\t\t\t\tif (args) {\n\t\t\t\t\tcommandLineValue += ` \"${args.map((e) => `${e.replaceAll('\"', '\\\\\"')}`).join('\" \"')}\"`;\n\t\t\t\t}\n\n\t\t\t\tthat._onDidRequestShellExecution.fire(commandLineValue);\n\t\t\t\t// Fire the event in a microtask to allow the extension to use the execution before\n\t\t\t\t// the start event fires\n\t\t\t\tconst commandLine: vscode.TerminalShellExecutionCommandLine = {\n\t\t\t\t\tvalue: commandLineValue,\n\t\t\t\t\tconfidence:\n\t\t\t\t\t\tTerminalShellExecutionCommandLineConfidence.High,\n\t\t\t\t\tisTrusted: true,\n\t\t\t\t};\n\t\t\t\tconst execution = that.startShellExecution(\n\t\t\t\t\tcommandLine,\n\t\t\t\t\tthat._cwd,\n\t\t\t\t\ttrue,\n\t\t\t\t).value;\n\t\t\t\tthat._ignoreNextExecution = true;\n\t\t\t\treturn execution;\n\t\t\t},\n\t\t};\n\t}\n\n\tstartShellExecution(\n\t\tcommandLine: vscode.TerminalShellExecutionCommandLine,\n\t\tcwd: URI | undefined,\n\t\tfireEventInMicrotask?: boolean,\n\t): InternalTerminalShellExecution {\n\t\tif (this._ignoreNextExecution && this._currentExecution) {\n\t\t\tthis._ignoreNextExecution = false;\n\t\t} else {\n\t\t\tif (this._currentExecution) {\n\t\t\t\tthis._currentExecution.endExecution(undefined);\n\t\t\t\tthis._onDidRequestEndExecution.fire({\n\t\t\t\t\tterminal: this._terminal,\n\t\t\t\t\tshellIntegration: this.value,\n\t\t\t\t\texecution: this._currentExecution.value,\n\t\t\t\t\texitCode: undefined,\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Fallback to the shell integration's cwd as the cwd may not have been restored after a reload\n\t\t\tconst currentExecution = (this._currentExecution =\n\t\t\t\tnew InternalTerminalShellExecution(\n\t\t\t\t\tcommandLine,\n\t\t\t\t\tcwd ?? this._cwd,\n\t\t\t\t));\n\t\t\tif (fireEventInMicrotask) {\n\t\t\t\tqueueMicrotask(() =>\n\t\t\t\t\tthis._onDidStartTerminalShellExecution.fire({\n\t\t\t\t\t\tterminal: this._terminal,\n\t\t\t\t\t\tshellIntegration: this.value,\n\t\t\t\t\t\texecution: currentExecution.value,\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis._onDidStartTerminalShellExecution.fire({\n\t\t\t\t\tterminal: this._terminal,\n\t\t\t\t\tshellIntegration: this.value,\n\t\t\t\t\texecution: this._currentExecution.value,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn this._currentExecution;\n\t}\n\n\temitData(data: string): void {\n\t\tthis.currentExecution?.emitData(data);\n\t}\n\n\tendShellExecution(\n\t\tcommandLine: vscode.TerminalShellExecutionCommandLine | undefined,\n\t\texitCode: number | undefined,\n\t): void {\n\t\tif (this._currentExecution) {\n\t\t\tthis._currentExecution.endExecution(commandLine);\n\t\t\tthis._onDidRequestEndExecution.fire({\n\t\t\t\tterminal: this._terminal,\n\t\t\t\tshellIntegration: this.value,\n\t\t\t\texecution: this._currentExecution.value,\n\t\t\t\texitCode,\n\t\t\t});\n\t\t\tthis._currentExecution = undefined;\n\t\t}\n\t}\n\n\tsetCwd(cwd: URI | undefined): void {\n\t\tlet wasChanged = false;\n\t\tif (URI.isUri(this._cwd)) {\n\t\t\twasChanged =\n\t\t\t\t!URI.isUri(cwd) || this._cwd.toString() !== cwd.toString();\n\t\t} else if (this._cwd !== cwd) {\n\t\t\twasChanged = true;\n\t\t}\n\t\tif (wasChanged) {\n\t\t\tthis._cwd = cwd;\n\t\t\tthis._onDidRequestChangeShellIntegration.fire({\n\t\t\t\tterminal: this._terminal,\n\t\t\t\tshellIntegration: this.value,\n\t\t\t});\n\t\t}\n\t}\n}\n\nclass InternalTerminalShellExecution {\n\tprivate _dataStream: ShellExecutionDataStream | undefined;\n\n\tprivate _ended = false;\n\n\treadonly value: vscode.TerminalShellExecution;\n\n\tconstructor(\n\t\tprivate _commandLine: vscode.TerminalShellExecutionCommandLine,\n\t\treadonly cwd: URI | undefined,\n\t) {\n\t\tconst that = this;\n\t\tthis.value = {\n\t\t\tget commandLine(): vscode.TerminalShellExecutionCommandLine {\n\t\t\t\treturn that._commandLine;\n\t\t\t},\n\t\t\tget cwd(): URI | undefined {\n\t\t\t\treturn that.cwd;\n\t\t\t},\n\t\t\tread(): AsyncIterable<string> {\n\t\t\t\treturn that._createDataStream();\n\t\t\t},\n\t\t};\n\t}\n\n\tprivate _createDataStream(): AsyncIterable<string> {\n\t\tif (!this._dataStream) {\n\t\t\tif (this._ended) {\n\t\t\t\treturn AsyncIterableObject.EMPTY;\n\t\t\t}\n\t\t\tthis._dataStream = new ShellExecutionDataStream();\n\t\t}\n\t\treturn this._dataStream.createIterable();\n\t}\n\n\temitData(data: string): void {\n\t\tthis._dataStream?.emitData(data);\n\t}\n\n\tendExecution(\n\t\tcommandLine: vscode.TerminalShellExecutionCommandLine | undefined,\n\t): void {\n\t\tif (commandLine) {\n\t\t\tthis._commandLine = commandLine;\n\t\t}\n\t\tthis._dataStream?.endExecution();\n\t\tthis._dataStream = undefined;\n\t\tthis._ended = true;\n\t}\n}\n\nclass ShellExecutionDataStream extends Disposable {\n\tprivate _barrier: Barrier | undefined;\n\tprivate _emitters: AsyncIterableEmitter<string>[] = [];\n\n\tcreateIterable(): AsyncIterable<string> {\n\t\tif (!this._barrier) {\n\t\t\tthis._barrier = new Barrier();\n\t\t}\n\t\tconst barrier = this._barrier;\n\t\tconst iterable = new AsyncIterableObject<string>(async (emitter) => {\n\t\t\tthis._emitters.push(emitter);\n\t\t\tawait barrier.wait();\n\t\t});\n\t\treturn iterable;\n\t}\n\n\temitData(data: string): void {\n\t\tfor (const emitter of this._emitters) {\n\t\t\temitter.emitOne(data);\n\t\t}\n\t}\n\n\tendExecution(): void {\n\t\tthis._barrier?.open();\n\t\tthis._barrier = undefined;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
