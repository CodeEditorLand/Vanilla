{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostApiCommands.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type * as vscode from \"vscode\";\nimport { isFalsyOrEmpty } from \"../../../base/common/arrays.js\";\nimport type { VSBuffer } from \"../../../base/common/buffer.js\";\nimport { Schemas, matchesSomeScheme } from \"../../../base/common/network.js\";\nimport { URI } from \"../../../base/common/uri.js\";\nimport type { IPosition } from \"../../../editor/common/core/position.js\";\nimport type { IRange } from \"../../../editor/common/core/range.js\";\nimport type { ISelection } from \"../../../editor/common/core/selection.js\";\nimport * as languages from \"../../../editor/common/languages.js\";\nimport { decodeSemanticTokensDto } from \"../../../editor/common/services/semanticTokensDto.js\";\nimport { validateWhenClauses } from \"../../../platform/contextkey/common/contextkey.js\";\nimport type { ITextEditorOptions } from \"../../../platform/editor/common/editor.js\";\nimport type {\n\tTransientCellMetadata,\n\tTransientDocumentMetadata,\n} from \"../../contrib/notebook/common/notebookCommon.js\";\nimport type * as search from \"../../contrib/search/common/search.js\";\nimport type {\n\tICallHierarchyItemDto,\n\tIIncomingCallDto,\n\tIInlineValueContextDto,\n\tIOutgoingCallDto,\n\tIRawColorInfo,\n\tITypeHierarchyItemDto,\n\tIWorkspaceEditDto,\n} from \"./extHost.protocol.js\";\nimport {\n\tApiCommand,\n\tApiCommandArgument,\n\tApiCommandResult,\n\ttype ExtHostCommands,\n} from \"./extHostCommands.js\";\nimport type { CustomCodeAction } from \"./extHostLanguageFeatures.js\";\nimport * as typeConverters from \"./extHostTypeConverters.js\";\nimport * as types from \"./extHostTypes.js\";\n\n//#region --- NEW world\n\nconst newCommands: ApiCommand[] = [\n\t// -- document highlights\n\tnew ApiCommand(\n\t\t\"vscode.executeDocumentHighlights\",\n\t\t\"_executeDocumentHighlights\",\n\t\t\"Execute document highlight provider.\",\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<\n\t\t\tlanguages.DocumentHighlight[],\n\t\t\ttypes.DocumentHighlight[] | undefined\n\t\t>(\n\t\t\t\"A promise that resolves to an array of DocumentHighlight-instances.\",\n\t\t\ttryMapWith(typeConverters.DocumentHighlight.to),\n\t\t),\n\t),\n\t// -- document symbols\n\tnew ApiCommand(\n\t\t\"vscode.executeDocumentSymbolProvider\",\n\t\t\"_executeDocumentSymbolProvider\",\n\t\t\"Execute document symbol provider.\",\n\t\t[ApiCommandArgument.Uri],\n\t\tnew ApiCommandResult<\n\t\t\tlanguages.DocumentSymbol[],\n\t\t\tvscode.SymbolInformation[] | undefined\n\t\t>(\n\t\t\t\"A promise that resolves to an array of SymbolInformation and DocumentSymbol instances.\",\n\t\t\t(value, apiArgs) => {\n\t\t\t\tif (isFalsyOrEmpty(value)) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\tclass MergedInfo\n\t\t\t\t\textends types.SymbolInformation\n\t\t\t\t\timplements vscode.DocumentSymbol\n\t\t\t\t{\n\t\t\t\t\tstatic to(symbol: languages.DocumentSymbol): MergedInfo {\n\t\t\t\t\t\tconst res = new MergedInfo(\n\t\t\t\t\t\t\tsymbol.name,\n\t\t\t\t\t\t\ttypeConverters.SymbolKind.to(symbol.kind),\n\t\t\t\t\t\t\tsymbol.containerName || \"\",\n\t\t\t\t\t\t\tnew types.Location(\n\t\t\t\t\t\t\t\tapiArgs[0],\n\t\t\t\t\t\t\t\ttypeConverters.Range.to(symbol.range),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tres.detail = symbol.detail;\n\t\t\t\t\t\tres.range = res.location.range;\n\t\t\t\t\t\tres.selectionRange = typeConverters.Range.to(\n\t\t\t\t\t\t\tsymbol.selectionRange,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tres.children = symbol.children\n\t\t\t\t\t\t\t? symbol.children.map(MergedInfo.to)\n\t\t\t\t\t\t\t: [];\n\t\t\t\t\t\treturn res;\n\t\t\t\t\t}\n\n\t\t\t\t\tdetail!: string;\n\t\t\t\t\trange!: vscode.Range;\n\t\t\t\t\tselectionRange!: vscode.Range;\n\t\t\t\t\tchildren!: vscode.DocumentSymbol[];\n\t\t\t\t\toverride containerName!: string;\n\t\t\t\t}\n\t\t\t\treturn value.map(MergedInfo.to);\n\t\t\t},\n\t\t),\n\t),\n\t// -- formatting\n\tnew ApiCommand(\n\t\t\"vscode.executeFormatDocumentProvider\",\n\t\t\"_executeFormatDocumentProvider\",\n\t\t\"Execute document format provider.\",\n\t\t[\n\t\t\tApiCommandArgument.Uri,\n\t\t\tnew ApiCommandArgument(\n\t\t\t\t\"options\",\n\t\t\t\t\"Formatting options\",\n\t\t\t\t(_) => true,\n\t\t\t\t(v) => v,\n\t\t\t),\n\t\t],\n\t\tnew ApiCommandResult<\n\t\t\tlanguages.TextEdit[],\n\t\t\ttypes.TextEdit[] | undefined\n\t\t>(\n\t\t\t\"A promise that resolves to an array of TextEdits.\",\n\t\t\ttryMapWith(typeConverters.TextEdit.to),\n\t\t),\n\t),\n\tnew ApiCommand(\n\t\t\"vscode.executeFormatRangeProvider\",\n\t\t\"_executeFormatRangeProvider\",\n\t\t\"Execute range format provider.\",\n\t\t[\n\t\t\tApiCommandArgument.Uri,\n\t\t\tApiCommandArgument.Range,\n\t\t\tnew ApiCommandArgument(\n\t\t\t\t\"options\",\n\t\t\t\t\"Formatting options\",\n\t\t\t\t(_) => true,\n\t\t\t\t(v) => v,\n\t\t\t),\n\t\t],\n\t\tnew ApiCommandResult<\n\t\t\tlanguages.TextEdit[],\n\t\t\ttypes.TextEdit[] | undefined\n\t\t>(\n\t\t\t\"A promise that resolves to an array of TextEdits.\",\n\t\t\ttryMapWith(typeConverters.TextEdit.to),\n\t\t),\n\t),\n\tnew ApiCommand(\n\t\t\"vscode.executeFormatOnTypeProvider\",\n\t\t\"_executeFormatOnTypeProvider\",\n\t\t\"Execute format on type provider.\",\n\t\t[\n\t\t\tApiCommandArgument.Uri,\n\t\t\tApiCommandArgument.Position,\n\t\t\tnew ApiCommandArgument(\n\t\t\t\t\"ch\",\n\t\t\t\t\"Trigger character\",\n\t\t\t\t(v) => typeof v === \"string\",\n\t\t\t\t(v) => v,\n\t\t\t),\n\t\t\tnew ApiCommandArgument(\n\t\t\t\t\"options\",\n\t\t\t\t\"Formatting options\",\n\t\t\t\t(_) => true,\n\t\t\t\t(v) => v,\n\t\t\t),\n\t\t],\n\t\tnew ApiCommandResult<\n\t\t\tlanguages.TextEdit[],\n\t\t\ttypes.TextEdit[] | undefined\n\t\t>(\n\t\t\t\"A promise that resolves to an array of TextEdits.\",\n\t\t\ttryMapWith(typeConverters.TextEdit.to),\n\t\t),\n\t),\n\t// -- go to symbol (definition, type definition, declaration, impl, references)\n\tnew ApiCommand(\n\t\t\"vscode.executeDefinitionProvider\",\n\t\t\"_executeDefinitionProvider\",\n\t\t\"Execute all definition providers.\",\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<\n\t\t\t(languages.Location | languages.LocationLink)[],\n\t\t\t(types.Location | vscode.LocationLink)[] | undefined\n\t\t>(\n\t\t\t\"A promise that resolves to an array of Location or LocationLink instances.\",\n\t\t\tmapLocationOrLocationLink,\n\t\t),\n\t),\n\tnew ApiCommand(\n\t\t\"vscode.experimental.executeDefinitionProvider_recursive\",\n\t\t\"_executeDefinitionProvider_recursive\",\n\t\t\"Execute all definition providers.\",\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<\n\t\t\t(languages.Location | languages.LocationLink)[],\n\t\t\t(types.Location | vscode.LocationLink)[] | undefined\n\t\t>(\n\t\t\t\"A promise that resolves to an array of Location or LocationLink instances.\",\n\t\t\tmapLocationOrLocationLink,\n\t\t),\n\t),\n\tnew ApiCommand(\n\t\t\"vscode.executeTypeDefinitionProvider\",\n\t\t\"_executeTypeDefinitionProvider\",\n\t\t\"Execute all type definition providers.\",\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<\n\t\t\t(languages.Location | languages.LocationLink)[],\n\t\t\t(types.Location | vscode.LocationLink)[] | undefined\n\t\t>(\n\t\t\t\"A promise that resolves to an array of Location or LocationLink instances.\",\n\t\t\tmapLocationOrLocationLink,\n\t\t),\n\t),\n\tnew ApiCommand(\n\t\t\"vscode.experimental.executeTypeDefinitionProvider_recursive\",\n\t\t\"_executeTypeDefinitionProvider_recursive\",\n\t\t\"Execute all type definition providers.\",\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<\n\t\t\t(languages.Location | languages.LocationLink)[],\n\t\t\t(types.Location | vscode.LocationLink)[] | undefined\n\t\t>(\n\t\t\t\"A promise that resolves to an array of Location or LocationLink instances.\",\n\t\t\tmapLocationOrLocationLink,\n\t\t),\n\t),\n\tnew ApiCommand(\n\t\t\"vscode.executeDeclarationProvider\",\n\t\t\"_executeDeclarationProvider\",\n\t\t\"Execute all declaration providers.\",\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<\n\t\t\t(languages.Location | languages.LocationLink)[],\n\t\t\t(types.Location | vscode.LocationLink)[] | undefined\n\t\t>(\n\t\t\t\"A promise that resolves to an array of Location or LocationLink instances.\",\n\t\t\tmapLocationOrLocationLink,\n\t\t),\n\t),\n\tnew ApiCommand(\n\t\t\"vscode.experimental.executeDeclarationProvider_recursive\",\n\t\t\"_executeDeclarationProvider_recursive\",\n\t\t\"Execute all declaration providers.\",\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<\n\t\t\t(languages.Location | languages.LocationLink)[],\n\t\t\t(types.Location | vscode.LocationLink)[] | undefined\n\t\t>(\n\t\t\t\"A promise that resolves to an array of Location or LocationLink instances.\",\n\t\t\tmapLocationOrLocationLink,\n\t\t),\n\t),\n\tnew ApiCommand(\n\t\t\"vscode.executeImplementationProvider\",\n\t\t\"_executeImplementationProvider\",\n\t\t\"Execute all implementation providers.\",\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<\n\t\t\t(languages.Location | languages.LocationLink)[],\n\t\t\t(types.Location | vscode.LocationLink)[] | undefined\n\t\t>(\n\t\t\t\"A promise that resolves to an array of Location or LocationLink instances.\",\n\t\t\tmapLocationOrLocationLink,\n\t\t),\n\t),\n\tnew ApiCommand(\n\t\t\"vscode.experimental.executeImplementationProvider_recursive\",\n\t\t\"_executeImplementationProvider_recursive\",\n\t\t\"Execute all implementation providers.\",\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<\n\t\t\t(languages.Location | languages.LocationLink)[],\n\t\t\t(types.Location | vscode.LocationLink)[] | undefined\n\t\t>(\n\t\t\t\"A promise that resolves to an array of Location or LocationLink instances.\",\n\t\t\tmapLocationOrLocationLink,\n\t\t),\n\t),\n\tnew ApiCommand(\n\t\t\"vscode.executeReferenceProvider\",\n\t\t\"_executeReferenceProvider\",\n\t\t\"Execute all reference providers.\",\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<\n\t\t\tlanguages.Location[],\n\t\t\ttypes.Location[] | undefined\n\t\t>(\n\t\t\t\"A promise that resolves to an array of Location-instances.\",\n\t\t\ttryMapWith(typeConverters.location.to),\n\t\t),\n\t),\n\tnew ApiCommand(\n\t\t\"vscode.experimental.executeReferenceProvider\",\n\t\t\"_executeReferenceProvider_recursive\",\n\t\t\"Execute all reference providers.\",\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<\n\t\t\tlanguages.Location[],\n\t\t\ttypes.Location[] | undefined\n\t\t>(\n\t\t\t\"A promise that resolves to an array of Location-instances.\",\n\t\t\ttryMapWith(typeConverters.location.to),\n\t\t),\n\t),\n\t// -- hover\n\tnew ApiCommand(\n\t\t\"vscode.executeHoverProvider\",\n\t\t\"_executeHoverProvider\",\n\t\t\"Execute all hover providers.\",\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<languages.Hover[], types.Hover[] | undefined>(\n\t\t\t\"A promise that resolves to an array of Hover-instances.\",\n\t\t\ttryMapWith(typeConverters.Hover.to),\n\t\t),\n\t),\n\tnew ApiCommand(\n\t\t\"vscode.experimental.executeHoverProvider_recursive\",\n\t\t\"_executeHoverProvider_recursive\",\n\t\t\"Execute all hover providers.\",\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<languages.Hover[], types.Hover[] | undefined>(\n\t\t\t\"A promise that resolves to an array of Hover-instances.\",\n\t\t\ttryMapWith(typeConverters.Hover.to),\n\t\t),\n\t),\n\t// -- selection range\n\tnew ApiCommand(\n\t\t\"vscode.executeSelectionRangeProvider\",\n\t\t\"_executeSelectionRangeProvider\",\n\t\t\"Execute selection range provider.\",\n\t\t[\n\t\t\tApiCommandArgument.Uri,\n\t\t\tnew ApiCommandArgument<types.Position[], IPosition[]>(\n\t\t\t\t\"position\",\n\t\t\t\t\"A position in a text document\",\n\t\t\t\t(v) =>\n\t\t\t\t\tArray.isArray(v) &&\n\t\t\t\t\tv.every((v) => types.Position.isPosition(v)),\n\t\t\t\t(v) => v.map(typeConverters.Position.from),\n\t\t\t),\n\t\t],\n\t\tnew ApiCommandResult<IRange[][], types.SelectionRange[]>(\n\t\t\t\"A promise that resolves to an array of ranges.\",\n\t\t\t(result) => {\n\t\t\t\treturn result.map((ranges) => {\n\t\t\t\t\tlet node: types.SelectionRange | undefined;\n\t\t\t\t\tfor (const range of ranges.reverse()) {\n\t\t\t\t\t\tnode = new types.SelectionRange(\n\t\t\t\t\t\t\ttypeConverters.Range.to(range),\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn node!;\n\t\t\t\t});\n\t\t\t},\n\t\t),\n\t),\n\t// -- symbol search\n\tnew ApiCommand(\n\t\t\"vscode.executeWorkspaceSymbolProvider\",\n\t\t\"_executeWorkspaceSymbolProvider\",\n\t\t\"Execute all workspace symbol providers.\",\n\t\t[ApiCommandArgument.String.with(\"query\", \"Search string\")],\n\t\tnew ApiCommandResult<\n\t\t\tsearch.IWorkspaceSymbol[],\n\t\t\ttypes.SymbolInformation[]\n\t\t>(\n\t\t\t\"A promise that resolves to an array of SymbolInformation-instances.\",\n\t\t\t(value) => {\n\t\t\t\treturn value.map(typeConverters.WorkspaceSymbol.to);\n\t\t\t},\n\t\t),\n\t),\n\t// --- call hierarchy\n\tnew ApiCommand(\n\t\t\"vscode.prepareCallHierarchy\",\n\t\t\"_executePrepareCallHierarchy\",\n\t\t\"Prepare call hierarchy at a position inside a document\",\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<\n\t\t\tICallHierarchyItemDto[],\n\t\t\ttypes.CallHierarchyItem[]\n\t\t>(\n\t\t\t\"A promise that resolves to an array of CallHierarchyItem-instances\",\n\t\t\t(v) => v.map(typeConverters.CallHierarchyItem.to),\n\t\t),\n\t),\n\tnew ApiCommand(\n\t\t\"vscode.provideIncomingCalls\",\n\t\t\"_executeProvideIncomingCalls\",\n\t\t\"Compute incoming calls for an item\",\n\t\t[ApiCommandArgument.CallHierarchyItem],\n\t\tnew ApiCommandResult<\n\t\t\tIIncomingCallDto[],\n\t\t\ttypes.CallHierarchyIncomingCall[]\n\t\t>(\n\t\t\t\"A promise that resolves to an array of CallHierarchyIncomingCall-instances\",\n\t\t\t(v) => v.map(typeConverters.CallHierarchyIncomingCall.to),\n\t\t),\n\t),\n\tnew ApiCommand(\n\t\t\"vscode.provideOutgoingCalls\",\n\t\t\"_executeProvideOutgoingCalls\",\n\t\t\"Compute outgoing calls for an item\",\n\t\t[ApiCommandArgument.CallHierarchyItem],\n\t\tnew ApiCommandResult<\n\t\t\tIOutgoingCallDto[],\n\t\t\ttypes.CallHierarchyOutgoingCall[]\n\t\t>(\n\t\t\t\"A promise that resolves to an array of CallHierarchyOutgoingCall-instances\",\n\t\t\t(v) => v.map(typeConverters.CallHierarchyOutgoingCall.to),\n\t\t),\n\t),\n\t// --- rename\n\tnew ApiCommand(\n\t\t\"vscode.prepareRename\",\n\t\t\"_executePrepareRename\",\n\t\t\"Execute the prepareRename of rename provider.\",\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<\n\t\t\tlanguages.RenameLocation,\n\t\t\t{ range: types.Range; placeholder: string } | undefined\n\t\t>(\n\t\t\t\"A promise that resolves to a range and placeholder text.\",\n\t\t\t(value) => {\n\t\t\t\tif (!value) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\trange: typeConverters.Range.to(value.range),\n\t\t\t\t\tplaceholder: value.text,\n\t\t\t\t};\n\t\t\t},\n\t\t),\n\t),\n\tnew ApiCommand(\n\t\t\"vscode.executeDocumentRenameProvider\",\n\t\t\"_executeDocumentRenameProvider\",\n\t\t\"Execute rename provider.\",\n\t\t[\n\t\t\tApiCommandArgument.Uri,\n\t\t\tApiCommandArgument.Position,\n\t\t\tApiCommandArgument.String.with(\"newName\", \"The new symbol name\"),\n\t\t],\n\t\tnew ApiCommandResult<\n\t\t\tIWorkspaceEditDto & { rejectReason?: string },\n\t\t\ttypes.WorkspaceEdit | undefined\n\t\t>(\"A promise that resolves to a WorkspaceEdit.\", (value) => {\n\t\t\tif (!value) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tif (value.rejectReason) {\n\t\t\t\tthrow new Error(value.rejectReason);\n\t\t\t}\n\t\t\treturn typeConverters.WorkspaceEdit.to(value);\n\t\t}),\n\t),\n\t// --- links\n\tnew ApiCommand(\n\t\t\"vscode.executeLinkProvider\",\n\t\t\"_executeLinkProvider\",\n\t\t\"Execute document link provider.\",\n\t\t[\n\t\t\tApiCommandArgument.Uri,\n\t\t\tApiCommandArgument.Number.with(\n\t\t\t\t\"linkResolveCount\",\n\t\t\t\t\"Number of links that should be resolved, only when links are unresolved.\",\n\t\t\t).optional(),\n\t\t],\n\t\tnew ApiCommandResult<languages.ILink[], vscode.DocumentLink[]>(\n\t\t\t\"A promise that resolves to an array of DocumentLink-instances.\",\n\t\t\t(value) => value.map(typeConverters.DocumentLink.to),\n\t\t),\n\t),\n\t// --- semantic tokens\n\tnew ApiCommand(\n\t\t\"vscode.provideDocumentSemanticTokensLegend\",\n\t\t\"_provideDocumentSemanticTokensLegend\",\n\t\t\"Provide semantic tokens legend for a document\",\n\t\t[ApiCommandArgument.Uri],\n\t\tnew ApiCommandResult<\n\t\t\tlanguages.SemanticTokensLegend,\n\t\t\ttypes.SemanticTokensLegend | undefined\n\t\t>(\"A promise that resolves to SemanticTokensLegend.\", (value) => {\n\t\t\tif (!value) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn new types.SemanticTokensLegend(\n\t\t\t\tvalue.tokenTypes,\n\t\t\t\tvalue.tokenModifiers,\n\t\t\t);\n\t\t}),\n\t),\n\tnew ApiCommand(\n\t\t\"vscode.provideDocumentSemanticTokens\",\n\t\t\"_provideDocumentSemanticTokens\",\n\t\t\"Provide semantic tokens for a document\",\n\t\t[ApiCommandArgument.Uri],\n\t\tnew ApiCommandResult<VSBuffer, types.SemanticTokens | undefined>(\n\t\t\t\"A promise that resolves to SemanticTokens.\",\n\t\t\t(value) => {\n\t\t\t\tif (!value) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\tconst semanticTokensDto = decodeSemanticTokensDto(value);\n\t\t\t\tif (semanticTokensDto.type !== \"full\") {\n\t\t\t\t\t// only accepting full semantic tokens from provideDocumentSemanticTokens\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\treturn new types.SemanticTokens(\n\t\t\t\t\tsemanticTokensDto.data,\n\t\t\t\t\tundefined,\n\t\t\t\t);\n\t\t\t},\n\t\t),\n\t),\n\tnew ApiCommand(\n\t\t\"vscode.provideDocumentRangeSemanticTokensLegend\",\n\t\t\"_provideDocumentRangeSemanticTokensLegend\",\n\t\t\"Provide semantic tokens legend for a document range\",\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Range.optional()],\n\t\tnew ApiCommandResult<\n\t\t\tlanguages.SemanticTokensLegend,\n\t\t\ttypes.SemanticTokensLegend | undefined\n\t\t>(\"A promise that resolves to SemanticTokensLegend.\", (value) => {\n\t\t\tif (!value) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn new types.SemanticTokensLegend(\n\t\t\t\tvalue.tokenTypes,\n\t\t\t\tvalue.tokenModifiers,\n\t\t\t);\n\t\t}),\n\t),\n\tnew ApiCommand(\n\t\t\"vscode.provideDocumentRangeSemanticTokens\",\n\t\t\"_provideDocumentRangeSemanticTokens\",\n\t\t\"Provide semantic tokens for a document range\",\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Range],\n\t\tnew ApiCommandResult<VSBuffer, types.SemanticTokens | undefined>(\n\t\t\t\"A promise that resolves to SemanticTokens.\",\n\t\t\t(value) => {\n\t\t\t\tif (!value) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\tconst semanticTokensDto = decodeSemanticTokensDto(value);\n\t\t\t\tif (semanticTokensDto.type !== \"full\") {\n\t\t\t\t\t// only accepting full semantic tokens from provideDocumentRangeSemanticTokens\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\treturn new types.SemanticTokens(\n\t\t\t\t\tsemanticTokensDto.data,\n\t\t\t\t\tundefined,\n\t\t\t\t);\n\t\t\t},\n\t\t),\n\t),\n\t// --- completions\n\tnew ApiCommand(\n\t\t\"vscode.executeCompletionItemProvider\",\n\t\t\"_executeCompletionItemProvider\",\n\t\t\"Execute completion item provider.\",\n\t\t[\n\t\t\tApiCommandArgument.Uri,\n\t\t\tApiCommandArgument.Position,\n\t\t\tApiCommandArgument.String.with(\n\t\t\t\t\"triggerCharacter\",\n\t\t\t\t\"Trigger completion when the user types the character, like `,` or `(`\",\n\t\t\t).optional(),\n\t\t\tApiCommandArgument.Number.with(\n\t\t\t\t\"itemResolveCount\",\n\t\t\t\t\"Number of completions to resolve (too large numbers slow down completions)\",\n\t\t\t).optional(),\n\t\t],\n\t\tnew ApiCommandResult<languages.CompletionList, vscode.CompletionList>(\n\t\t\t\"A promise that resolves to a CompletionList-instance.\",\n\t\t\t(value, _args, converter) => {\n\t\t\t\tif (!value) {\n\t\t\t\t\treturn new types.CompletionList([]);\n\t\t\t\t}\n\t\t\t\tconst items = value.suggestions.map((suggestion) =>\n\t\t\t\t\ttypeConverters.CompletionItem.to(suggestion, converter),\n\t\t\t\t);\n\t\t\t\treturn new types.CompletionList(items, value.incomplete);\n\t\t\t},\n\t\t),\n\t),\n\t// --- signature help\n\tnew ApiCommand(\n\t\t\"vscode.executeSignatureHelpProvider\",\n\t\t\"_executeSignatureHelpProvider\",\n\t\t\"Execute signature help provider.\",\n\t\t[\n\t\t\tApiCommandArgument.Uri,\n\t\t\tApiCommandArgument.Position,\n\t\t\tApiCommandArgument.String.with(\n\t\t\t\t\"triggerCharacter\",\n\t\t\t\t\"Trigger signature help when the user types the character, like `,` or `(`\",\n\t\t\t).optional(),\n\t\t],\n\t\tnew ApiCommandResult<\n\t\t\tlanguages.SignatureHelp,\n\t\t\tvscode.SignatureHelp | undefined\n\t\t>(\"A promise that resolves to SignatureHelp.\", (value) => {\n\t\t\tif (value) {\n\t\t\t\treturn typeConverters.SignatureHelp.to(value);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}),\n\t),\n\t// --- code lens\n\tnew ApiCommand(\n\t\t\"vscode.executeCodeLensProvider\",\n\t\t\"_executeCodeLensProvider\",\n\t\t\"Execute code lens provider.\",\n\t\t[\n\t\t\tApiCommandArgument.Uri,\n\t\t\tApiCommandArgument.Number.with(\n\t\t\t\t\"itemResolveCount\",\n\t\t\t\t\"Number of lenses that should be resolved and returned. Will only return resolved lenses, will impact performance)\",\n\t\t\t).optional(),\n\t\t],\n\t\tnew ApiCommandResult<\n\t\t\tlanguages.CodeLens[],\n\t\t\tvscode.CodeLens[] | undefined\n\t\t>(\n\t\t\t\"A promise that resolves to an array of CodeLens-instances.\",\n\t\t\t(value, _args, converter) => {\n\t\t\t\treturn tryMapWith<languages.CodeLens, vscode.CodeLens>(\n\t\t\t\t\t(item) => {\n\t\t\t\t\t\treturn new types.CodeLens(\n\t\t\t\t\t\t\ttypeConverters.Range.to(item.range),\n\t\t\t\t\t\t\titem.command &&\n\t\t\t\t\t\t\t\tconverter.fromInternal(item.command),\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t)(value);\n\t\t\t},\n\t\t),\n\t),\n\t// --- code actions\n\tnew ApiCommand(\n\t\t\"vscode.executeCodeActionProvider\",\n\t\t\"_executeCodeActionProvider\",\n\t\t\"Execute code action provider.\",\n\t\t[\n\t\t\tApiCommandArgument.Uri,\n\t\t\tnew ApiCommandArgument(\n\t\t\t\t\"rangeOrSelection\",\n\t\t\t\t\"Range in a text document. Some refactoring provider requires Selection object.\",\n\t\t\t\t(v) => types.Range.isRange(v),\n\t\t\t\t(v) =>\n\t\t\t\t\ttypes.Selection.isSelection(v)\n\t\t\t\t\t\t? typeConverters.Selection.from(v)\n\t\t\t\t\t\t: typeConverters.Range.from(v),\n\t\t\t),\n\t\t\tApiCommandArgument.String.with(\n\t\t\t\t\"kind\",\n\t\t\t\t\"Code action kind to return code actions for\",\n\t\t\t).optional(),\n\t\t\tApiCommandArgument.Number.with(\n\t\t\t\t\"itemResolveCount\",\n\t\t\t\t\"Number of code actions to resolve (too large numbers slow down code actions)\",\n\t\t\t).optional(),\n\t\t],\n\t\tnew ApiCommandResult<\n\t\t\tCustomCodeAction[],\n\t\t\t(vscode.CodeAction | vscode.Command | undefined)[] | undefined\n\t\t>(\n\t\t\t\"A promise that resolves to an array of Command-instances.\",\n\t\t\t(value, _args, converter) => {\n\t\t\t\treturn tryMapWith<\n\t\t\t\t\tCustomCodeAction,\n\t\t\t\t\tvscode.CodeAction | vscode.Command | undefined\n\t\t\t\t>((codeAction) => {\n\t\t\t\t\tif (codeAction._isSynthetic) {\n\t\t\t\t\t\tif (!codeAction.command) {\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\"Synthetic code actions must have a command\",\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn converter.fromInternal(codeAction.command);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst ret = new types.CodeAction(\n\t\t\t\t\t\t\tcodeAction.title,\n\t\t\t\t\t\t\tcodeAction.kind\n\t\t\t\t\t\t\t\t? new types.CodeActionKind(codeAction.kind)\n\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (codeAction.edit) {\n\t\t\t\t\t\t\tret.edit = typeConverters.WorkspaceEdit.to(\n\t\t\t\t\t\t\t\tcodeAction.edit,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (codeAction.command) {\n\t\t\t\t\t\t\tret.command = converter.fromInternal(\n\t\t\t\t\t\t\t\tcodeAction.command,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tret.isPreferred = codeAction.isPreferred;\n\t\t\t\t\t\treturn ret;\n\t\t\t\t\t}\n\t\t\t\t})(value);\n\t\t\t},\n\t\t),\n\t),\n\t// --- colors\n\tnew ApiCommand(\n\t\t\"vscode.executeDocumentColorProvider\",\n\t\t\"_executeDocumentColorProvider\",\n\t\t\"Execute document color provider.\",\n\t\t[ApiCommandArgument.Uri],\n\t\tnew ApiCommandResult<IRawColorInfo[], vscode.ColorInformation[]>(\n\t\t\t\"A promise that resolves to an array of ColorInformation objects.\",\n\t\t\t(result) => {\n\t\t\t\tif (result) {\n\t\t\t\t\treturn result.map(\n\t\t\t\t\t\t(ci) =>\n\t\t\t\t\t\t\tnew types.ColorInformation(\n\t\t\t\t\t\t\t\ttypeConverters.Range.to(ci.range),\n\t\t\t\t\t\t\t\ttypeConverters.Color.to(ci.color),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t},\n\t\t),\n\t),\n\tnew ApiCommand(\n\t\t\"vscode.executeColorPresentationProvider\",\n\t\t\"_executeColorPresentationProvider\",\n\t\t\"Execute color presentation provider.\",\n\t\t[\n\t\t\tnew ApiCommandArgument<\n\t\t\t\ttypes.Color,\n\t\t\t\t[number, number, number, number]\n\t\t\t>(\n\t\t\t\t\"color\",\n\t\t\t\t\"The color to show and insert\",\n\t\t\t\t(v) => v instanceof types.Color,\n\t\t\t\ttypeConverters.Color.from,\n\t\t\t),\n\t\t\tnew ApiCommandArgument<\n\t\t\t\t{ uri: URI; range: types.Range },\n\t\t\t\t{ uri: URI; range: IRange }\n\t\t\t>(\n\t\t\t\t\"context\",\n\t\t\t\t\"Context object with uri and range\",\n\t\t\t\t(_v) => true,\n\t\t\t\t(v) => ({\n\t\t\t\t\turi: v.uri,\n\t\t\t\t\trange: typeConverters.Range.from(v.range),\n\t\t\t\t}),\n\t\t\t),\n\t\t],\n\t\tnew ApiCommandResult<\n\t\t\tlanguages.IColorPresentation[],\n\t\t\ttypes.ColorPresentation[]\n\t\t>(\n\t\t\t\"A promise that resolves to an array of ColorPresentation objects.\",\n\t\t\t(result) => {\n\t\t\t\tif (result) {\n\t\t\t\t\treturn result.map(typeConverters.ColorPresentation.to);\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t},\n\t\t),\n\t),\n\t// --- inline hints\n\tnew ApiCommand(\n\t\t\"vscode.executeInlayHintProvider\",\n\t\t\"_executeInlayHintProvider\",\n\t\t\"Execute inlay hints provider\",\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Range],\n\t\tnew ApiCommandResult<languages.InlayHint[], vscode.InlayHint[]>(\n\t\t\t\"A promise that resolves to an array of Inlay objects\",\n\t\t\t(result, args, converter) => {\n\t\t\t\treturn result.map(\n\t\t\t\t\ttypeConverters.InlayHint.to.bind(undefined, converter),\n\t\t\t\t);\n\t\t\t},\n\t\t),\n\t),\n\t// --- folding\n\tnew ApiCommand(\n\t\t\"vscode.executeFoldingRangeProvider\",\n\t\t\"_executeFoldingRangeProvider\",\n\t\t\"Execute folding range provider\",\n\t\t[ApiCommandArgument.Uri],\n\t\tnew ApiCommandResult<\n\t\t\tlanguages.FoldingRange[] | undefined,\n\t\t\tvscode.FoldingRange[] | undefined\n\t\t>(\n\t\t\t\"A promise that resolves to an array of FoldingRange objects\",\n\t\t\t(result, args) => {\n\t\t\t\tif (result) {\n\t\t\t\t\treturn result.map(typeConverters.FoldingRange.to);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t),\n\t),\n\n\t// --- notebooks\n\tnew ApiCommand(\n\t\t\"vscode.resolveNotebookContentProviders\",\n\t\t\"_resolveNotebookContentProvider\",\n\t\t\"Resolve Notebook Content Providers\",\n\t\t[\n\t\t\t// new ApiCommandArgument<string, string>('viewType', '', v => typeof v === 'string', v => v),\n\t\t\t// new ApiCommandArgument<string, string>('displayName', '', v => typeof v === 'string', v => v),\n\t\t\t// new ApiCommandArgument<object, object>('options', '', v => typeof v === 'object', v => v),\n\t\t],\n\t\tnew ApiCommandResult<\n\t\t\t{\n\t\t\t\tviewType: string;\n\t\t\t\tdisplayName: string;\n\t\t\t\toptions: {\n\t\t\t\t\ttransientOutputs: boolean;\n\t\t\t\t\ttransientCellMetadata: TransientCellMetadata;\n\t\t\t\t\ttransientDocumentMetadata: TransientDocumentMetadata;\n\t\t\t\t};\n\t\t\t\tfilenamePattern: (\n\t\t\t\t\t| vscode.GlobPattern\n\t\t\t\t\t| {\n\t\t\t\t\t\t\tinclude: vscode.GlobPattern;\n\t\t\t\t\t\t\texclude: vscode.GlobPattern;\n\t\t\t\t\t  }\n\t\t\t\t)[];\n\t\t\t}[],\n\t\t\t| {\n\t\t\t\t\tviewType: string;\n\t\t\t\t\tdisplayName: string;\n\t\t\t\t\tfilenamePattern: (\n\t\t\t\t\t\t| vscode.GlobPattern\n\t\t\t\t\t\t| {\n\t\t\t\t\t\t\t\tinclude: vscode.GlobPattern;\n\t\t\t\t\t\t\t\texclude: vscode.GlobPattern;\n\t\t\t\t\t\t  }\n\t\t\t\t\t)[];\n\t\t\t\t\toptions: vscode.NotebookDocumentContentOptions;\n\t\t\t  }[]\n\t\t\t| undefined\n\t\t>(\n\t\t\t\"A promise that resolves to an array of NotebookContentProvider static info objects.\",\n\t\t\ttryMapWith((item) => {\n\t\t\t\treturn {\n\t\t\t\t\tviewType: item.viewType,\n\t\t\t\t\tdisplayName: item.displayName,\n\t\t\t\t\toptions: {\n\t\t\t\t\t\ttransientOutputs: item.options.transientOutputs,\n\t\t\t\t\t\ttransientCellMetadata:\n\t\t\t\t\t\t\titem.options.transientCellMetadata,\n\t\t\t\t\t\ttransientDocumentMetadata:\n\t\t\t\t\t\t\titem.options.transientDocumentMetadata,\n\t\t\t\t\t},\n\t\t\t\t\tfilenamePattern: item.filenamePattern.map((pattern) =>\n\t\t\t\t\t\ttypeConverters.NotebookExclusiveDocumentPattern.to(\n\t\t\t\t\t\t\tpattern,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t};\n\t\t\t}),\n\t\t),\n\t),\n\t// --- debug support\n\tnew ApiCommand(\n\t\t\"vscode.executeInlineValueProvider\",\n\t\t\"_executeInlineValueProvider\",\n\t\t\"Execute inline value provider\",\n\t\t[\n\t\t\tApiCommandArgument.Uri,\n\t\t\tApiCommandArgument.Range,\n\t\t\tnew ApiCommandArgument<\n\t\t\t\ttypes.InlineValueContext,\n\t\t\t\tIInlineValueContextDto\n\t\t\t>(\n\t\t\t\t\"context\",\n\t\t\t\t\"An InlineValueContext\",\n\t\t\t\t(v) =>\n\t\t\t\t\tv &&\n\t\t\t\t\ttypeof v.frameId === \"number\" &&\n\t\t\t\t\tv.stoppedLocation instanceof types.Range,\n\t\t\t\t(v) => typeConverters.InlineValueContext.from(v),\n\t\t\t),\n\t\t],\n\t\tnew ApiCommandResult<languages.InlineValue[], vscode.InlineValue[]>(\n\t\t\t\"A promise that resolves to an array of InlineValue objects\",\n\t\t\t(result) => {\n\t\t\t\treturn result.map(typeConverters.InlineValue.to);\n\t\t\t},\n\t\t),\n\t),\n\t// --- open'ish commands\n\tnew ApiCommand(\n\t\t\"vscode.open\",\n\t\t\"_workbench.open\",\n\t\t\"Opens the provided resource in the editor. Can be a text or binary file, or an http(s) URL. If you need more control over the options for opening a text file, use vscode.window.showTextDocument instead.\",\n\t\t[\n\t\t\tnew ApiCommandArgument<URI | string>(\n\t\t\t\t\"uriOrString\",\n\t\t\t\t\"Uri-instance or string (only http/https)\",\n\t\t\t\t(v) =>\n\t\t\t\t\tURI.isUri(v) ||\n\t\t\t\t\t(typeof v === \"string\" &&\n\t\t\t\t\t\tmatchesSomeScheme(v, Schemas.http, Schemas.https)),\n\t\t\t\t(v) => v,\n\t\t\t),\n\t\t\tnew ApiCommandArgument<\n\t\t\t\t| vscode.ViewColumn\n\t\t\t\t| typeConverters.TextEditorOpenOptions\n\t\t\t\t| undefined,\n\t\t\t\t[vscode.ViewColumn?, ITextEditorOptions?] | undefined\n\t\t\t>(\n\t\t\t\t\"columnOrOptions\",\n\t\t\t\t\"Either the column in which to open or editor options, see vscode.TextDocumentShowOptions\",\n\t\t\t\t(v) =>\n\t\t\t\t\tv === undefined ||\n\t\t\t\t\ttypeof v === \"number\" ||\n\t\t\t\t\ttypeof v === \"object\",\n\t\t\t\t(v) =>\n\t\t\t\t\tv\n\t\t\t\t\t\t? typeof v === \"number\"\n\t\t\t\t\t\t\t? [typeConverters.ViewColumn.from(v), undefined]\n\t\t\t\t\t\t\t: [\n\t\t\t\t\t\t\t\t\ttypeConverters.ViewColumn.from(\n\t\t\t\t\t\t\t\t\t\tv.viewColumn,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\ttypeConverters.TextEditorOpenOptions.from(\n\t\t\t\t\t\t\t\t\t\tv,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t: v,\n\t\t\t).optional(),\n\t\t\tApiCommandArgument.String.with(\"label\", \"\").optional(),\n\t\t],\n\t\tApiCommandResult.Void,\n\t),\n\tnew ApiCommand(\n\t\t\"vscode.openWith\",\n\t\t\"_workbench.openWith\",\n\t\t\"Opens the provided resource with a specific editor.\",\n\t\t[\n\t\t\tApiCommandArgument.Uri.with(\"resource\", \"Resource to open\"),\n\t\t\tApiCommandArgument.String.with(\n\t\t\t\t\"viewId\",\n\t\t\t\t\"Custom editor view id. This should be the viewType string for custom editors or the notebookType string for notebooks. Use 'default' to use VS Code's default text editor\",\n\t\t\t),\n\t\t\tnew ApiCommandArgument<\n\t\t\t\t| vscode.ViewColumn\n\t\t\t\t| typeConverters.TextEditorOpenOptions\n\t\t\t\t| undefined,\n\t\t\t\t[vscode.ViewColumn?, ITextEditorOptions?] | undefined\n\t\t\t>(\n\t\t\t\t\"columnOrOptions\",\n\t\t\t\t\"Either the column in which to open or editor options, see vscode.TextDocumentShowOptions\",\n\t\t\t\t(v) =>\n\t\t\t\t\tv === undefined ||\n\t\t\t\t\ttypeof v === \"number\" ||\n\t\t\t\t\ttypeof v === \"object\",\n\t\t\t\t(v) =>\n\t\t\t\t\tv\n\t\t\t\t\t\t? typeof v === \"number\"\n\t\t\t\t\t\t\t? [typeConverters.ViewColumn.from(v), undefined]\n\t\t\t\t\t\t\t: [\n\t\t\t\t\t\t\t\t\ttypeConverters.ViewColumn.from(\n\t\t\t\t\t\t\t\t\t\tv.viewColumn,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\ttypeConverters.TextEditorOpenOptions.from(\n\t\t\t\t\t\t\t\t\t\tv,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t: v,\n\t\t\t).optional(),\n\t\t],\n\t\tApiCommandResult.Void,\n\t),\n\tnew ApiCommand(\n\t\t\"vscode.diff\",\n\t\t\"_workbench.diff\",\n\t\t\"Opens the provided resources in the diff editor to compare their contents.\",\n\t\t[\n\t\t\tApiCommandArgument.Uri.with(\n\t\t\t\t\"left\",\n\t\t\t\t\"Left-hand side resource of the diff editor\",\n\t\t\t),\n\t\t\tApiCommandArgument.Uri.with(\n\t\t\t\t\"right\",\n\t\t\t\t\"Right-hand side resource of the diff editor\",\n\t\t\t),\n\t\t\tApiCommandArgument.String.with(\n\t\t\t\t\"title\",\n\t\t\t\t\"Human readable title for the diff editor\",\n\t\t\t).optional(),\n\t\t\tnew ApiCommandArgument<\n\t\t\t\ttypeConverters.TextEditorOpenOptions | undefined,\n\t\t\t\t[number?, ITextEditorOptions?] | undefined\n\t\t\t>(\n\t\t\t\t\"columnOrOptions\",\n\t\t\t\t\"Either the column in which to open or editor options, see vscode.TextDocumentShowOptions\",\n\t\t\t\t(v) => v === undefined || typeof v === \"object\",\n\t\t\t\t(v) =>\n\t\t\t\t\tv && [\n\t\t\t\t\t\ttypeConverters.ViewColumn.from(v.viewColumn),\n\t\t\t\t\t\ttypeConverters.TextEditorOpenOptions.from(v),\n\t\t\t\t\t],\n\t\t\t).optional(),\n\t\t],\n\t\tApiCommandResult.Void,\n\t),\n\tnew ApiCommand(\n\t\t\"vscode.changes\",\n\t\t\"_workbench.changes\",\n\t\t\"Opens a list of resources in the changes editor to compare their contents.\",\n\t\t[\n\t\t\tApiCommandArgument.String.with(\n\t\t\t\t\"title\",\n\t\t\t\t\"Human readable title for the changes editor\",\n\t\t\t),\n\t\t\tnew ApiCommandArgument<[URI, URI?, URI?][]>(\n\t\t\t\t\"resourceList\",\n\t\t\t\t\"List of resources to compare\",\n\t\t\t\t(resources) => {\n\t\t\t\t\tfor (const resource of resources) {\n\t\t\t\t\t\tif (resource.length !== 3) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst [label, left, right] = resource;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!URI.isUri(label) ||\n\t\t\t\t\t\t\t(!URI.isUri(left) &&\n\t\t\t\t\t\t\t\tleft !== undefined &&\n\t\t\t\t\t\t\t\tleft !== null) ||\n\t\t\t\t\t\t\t(!URI.isUri(right) &&\n\t\t\t\t\t\t\t\tright !== undefined &&\n\t\t\t\t\t\t\t\tright !== null)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\t\t\t\t},\n\t\t\t\t(v) => v,\n\t\t\t),\n\t\t],\n\t\tApiCommandResult.Void,\n\t),\n\t// --- type hierarchy\n\tnew ApiCommand(\n\t\t\"vscode.prepareTypeHierarchy\",\n\t\t\"_executePrepareTypeHierarchy\",\n\t\t\"Prepare type hierarchy at a position inside a document\",\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<\n\t\t\tITypeHierarchyItemDto[],\n\t\t\ttypes.TypeHierarchyItem[]\n\t\t>(\n\t\t\t\"A promise that resolves to an array of TypeHierarchyItem-instances\",\n\t\t\t(v) => v.map(typeConverters.TypeHierarchyItem.to),\n\t\t),\n\t),\n\tnew ApiCommand(\n\t\t\"vscode.provideSupertypes\",\n\t\t\"_executeProvideSupertypes\",\n\t\t\"Compute supertypes for an item\",\n\t\t[ApiCommandArgument.TypeHierarchyItem],\n\t\tnew ApiCommandResult<\n\t\t\tITypeHierarchyItemDto[],\n\t\t\ttypes.TypeHierarchyItem[]\n\t\t>(\n\t\t\t\"A promise that resolves to an array of TypeHierarchyItem-instances\",\n\t\t\t(v) => v.map(typeConverters.TypeHierarchyItem.to),\n\t\t),\n\t),\n\tnew ApiCommand(\n\t\t\"vscode.provideSubtypes\",\n\t\t\"_executeProvideSubtypes\",\n\t\t\"Compute subtypes for an item\",\n\t\t[ApiCommandArgument.TypeHierarchyItem],\n\t\tnew ApiCommandResult<\n\t\t\tITypeHierarchyItemDto[],\n\t\t\ttypes.TypeHierarchyItem[]\n\t\t>(\n\t\t\t\"A promise that resolves to an array of TypeHierarchyItem-instances\",\n\t\t\t(v) => v.map(typeConverters.TypeHierarchyItem.to),\n\t\t),\n\t),\n\t// --- testing\n\tnew ApiCommand(\n\t\t\"vscode.revealTestInExplorer\",\n\t\t\"_revealTestInExplorer\",\n\t\t\"Reveals a test instance in the explorer\",\n\t\t[ApiCommandArgument.TestItem],\n\t\tApiCommandResult.Void,\n\t),\n\t// --- continue edit session\n\tnew ApiCommand(\n\t\t\"vscode.experimental.editSession.continue\",\n\t\t\"_workbench.editSessions.actions.continueEditSession\",\n\t\t\"Continue the current edit session in a different workspace\",\n\t\t[\n\t\t\tApiCommandArgument.Uri.with(\n\t\t\t\t\"workspaceUri\",\n\t\t\t\t\"The target workspace to continue the current edit session in\",\n\t\t\t),\n\t\t],\n\t\tApiCommandResult.Void,\n\t),\n\t// --- context keys\n\tnew ApiCommand(\n\t\t\"setContext\",\n\t\t\"_setContext\",\n\t\t\"Set a custom context key value that can be used in when clauses.\",\n\t\t[\n\t\t\tApiCommandArgument.String.with(\"name\", \"The context key name\"),\n\t\t\tnew ApiCommandArgument(\n\t\t\t\t\"value\",\n\t\t\t\t\"The context key value\",\n\t\t\t\t() => true,\n\t\t\t\t(v) => v,\n\t\t\t),\n\t\t],\n\t\tApiCommandResult.Void,\n\t),\n\t// --- mapped edits\n\tnew ApiCommand(\n\t\t\"vscode.executeMappedEditsProvider\",\n\t\t\"_executeMappedEditsProvider\",\n\t\t\"Execute Mapped Edits Provider\",\n\t\t[\n\t\t\tApiCommandArgument.Uri,\n\t\t\tApiCommandArgument.StringArray,\n\t\t\tnew ApiCommandArgument(\n\t\t\t\t\"MappedEditsContext\",\n\t\t\t\t\"Mapped Edits Context\",\n\t\t\t\t(v: unknown) => typeConverters.MappedEditsContext.is(v),\n\t\t\t\t(v: vscode.MappedEditsContext) =>\n\t\t\t\t\ttypeConverters.MappedEditsContext.from(v),\n\t\t\t),\n\t\t],\n\t\tnew ApiCommandResult<\n\t\t\tIWorkspaceEditDto | null,\n\t\t\tvscode.WorkspaceEdit | null\n\t\t>(\"A promise that resolves to a workspace edit or null\", (value) => {\n\t\t\treturn value ? typeConverters.WorkspaceEdit.to(value) : null;\n\t\t}),\n\t),\n\t// --- inline chat\n\tnew ApiCommand(\n\t\t\"vscode.editorChat.start\",\n\t\t\"inlineChat.start\",\n\t\t\"Invoke a new editor chat session\",\n\t\t[\n\t\t\tnew ApiCommandArgument<\n\t\t\t\tInlineChatEditorApiArg | undefined,\n\t\t\t\tInlineChatRunOptions | undefined\n\t\t\t>(\n\t\t\t\t\"Run arguments\",\n\t\t\t\t\"\",\n\t\t\t\t(_v) => true,\n\t\t\t\t(v) => {\n\t\t\t\t\tif (!v) {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tinitialRange: v.initialRange\n\t\t\t\t\t\t\t? typeConverters.Range.from(v.initialRange)\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\tinitialSelection: types.Selection.isSelection(\n\t\t\t\t\t\t\tv.initialSelection,\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t? typeConverters.Selection.from(v.initialSelection)\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\tmessage: v.message,\n\t\t\t\t\t\tautoSend: v.autoSend,\n\t\t\t\t\t\tposition: v.position\n\t\t\t\t\t\t\t? typeConverters.Position.from(v.position)\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t),\n\t\t],\n\t\tApiCommandResult.Void,\n\t),\n];\n\ntype InlineChatEditorApiArg = {\n\tinitialRange?: vscode.Range;\n\tinitialSelection?: vscode.Selection;\n\tmessage?: string;\n\tautoSend?: boolean;\n\tposition?: vscode.Position;\n};\n\ntype InlineChatRunOptions = {\n\tinitialRange?: IRange;\n\tinitialSelection?: ISelection;\n\tmessage?: string;\n\tautoSend?: boolean;\n\tposition?: IPosition;\n};\n\n//#endregion\n\n//#region OLD world\n\nexport class ExtHostApiCommands {\n\tstatic register(commands: ExtHostCommands) {\n\t\tnewCommands.forEach(commands.registerApiCommand, commands);\n\n\t\tthis._registerValidateWhenClausesCommand(commands);\n\t}\n\n\tprivate static _registerValidateWhenClausesCommand(\n\t\tcommands: ExtHostCommands,\n\t) {\n\t\tcommands.registerCommand(\n\t\t\tfalse,\n\t\t\t\"_validateWhenClauses\",\n\t\t\tvalidateWhenClauses,\n\t\t);\n\t}\n}\n\nfunction tryMapWith<T, R>(f: (x: T) => R) {\n\treturn (value: T[]) => {\n\t\tif (Array.isArray(value)) {\n\t\t\treturn value.map(f);\n\t\t}\n\t\treturn undefined;\n\t};\n}\n\nfunction mapLocationOrLocationLink(\n\tvalues: (languages.Location | languages.LocationLink)[],\n): (types.Location | vscode.LocationLink)[] | undefined {\n\tif (!Array.isArray(values)) {\n\t\treturn undefined;\n\t}\n\tconst result: (types.Location | vscode.LocationLink)[] = [];\n\tfor (const item of values) {\n\t\tif (languages.isLocationLink(item)) {\n\t\t\tresult.push(typeConverters.DefinitionLink.to(item));\n\t\t} else {\n\t\t\tresult.push(typeConverters.location.to(item));\n\t\t}\n\t}\n\treturn result;\n}\n"],
  "mappings": "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",
  "names": ["v"]
}
