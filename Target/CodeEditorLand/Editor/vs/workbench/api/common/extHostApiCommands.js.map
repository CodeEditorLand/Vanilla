{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostApiCommands.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isFalsyOrEmpty } from '../../../base/common/arrays.js';\nimport { VSBuffer } from '../../../base/common/buffer.js';\nimport { Schemas, matchesSomeScheme } from '../../../base/common/network.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { IPosition } from '../../../editor/common/core/position.js';\nimport { IRange } from '../../../editor/common/core/range.js';\nimport { ISelection } from '../../../editor/common/core/selection.js';\nimport * as languages from '../../../editor/common/languages.js';\nimport { decodeSemanticTokensDto } from '../../../editor/common/services/semanticTokensDto.js';\nimport { validateWhenClauses } from '../../../platform/contextkey/common/contextkey.js';\nimport { ITextEditorOptions } from '../../../platform/editor/common/editor.js';\nimport { ICallHierarchyItemDto, IIncomingCallDto, IInlineValueContextDto, IOutgoingCallDto, IRawColorInfo, ITypeHierarchyItemDto, IWorkspaceEditDto } from './extHost.protocol.js';\nimport { ApiCommand, ApiCommandArgument, ApiCommandResult, ExtHostCommands } from './extHostCommands.js';\nimport { CustomCodeAction } from './extHostLanguageFeatures.js';\nimport * as typeConverters from './extHostTypeConverters.js';\nimport * as types from './extHostTypes.js';\nimport { TransientCellMetadata, TransientDocumentMetadata } from '../../contrib/notebook/common/notebookCommon.js';\nimport * as search from '../../contrib/search/common/search.js';\nimport type * as vscode from 'vscode';\n\n//#region --- NEW world\n\nconst newCommands: ApiCommand[] = [\n\t// -- document highlights\n\tnew ApiCommand(\n\t\t'vscode.executeDocumentHighlights', '_executeDocumentHighlights', 'Execute document highlight provider.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<languages.DocumentHighlight[], types.DocumentHighlight[] | undefined>('A promise that resolves to an array of DocumentHighlight-instances.', tryMapWith(typeConverters.DocumentHighlight.to))\n\t),\n\t// -- document symbols\n\tnew ApiCommand(\n\t\t'vscode.executeDocumentSymbolProvider', '_executeDocumentSymbolProvider', 'Execute document symbol provider.',\n\t\t[ApiCommandArgument.Uri],\n\t\tnew ApiCommandResult<languages.DocumentSymbol[], vscode.SymbolInformation[] | undefined>('A promise that resolves to an array of SymbolInformation and DocumentSymbol instances.', (value, apiArgs) => {\n\n\t\t\tif (isFalsyOrEmpty(value)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tclass MergedInfo extends types.SymbolInformation implements vscode.DocumentSymbol {\n\t\t\t\tstatic to(symbol: languages.DocumentSymbol): MergedInfo {\n\t\t\t\t\tconst res = new MergedInfo(\n\t\t\t\t\t\tsymbol.name,\n\t\t\t\t\t\ttypeConverters.SymbolKind.to(symbol.kind),\n\t\t\t\t\t\tsymbol.containerName || '',\n\t\t\t\t\t\tnew types.Location(apiArgs[0], typeConverters.Range.to(symbol.range))\n\t\t\t\t\t);\n\t\t\t\t\tres.detail = symbol.detail;\n\t\t\t\t\tres.range = res.location.range;\n\t\t\t\t\tres.selectionRange = typeConverters.Range.to(symbol.selectionRange);\n\t\t\t\t\tres.children = symbol.children ? symbol.children.map(MergedInfo.to) : [];\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\n\t\t\t\tdetail!: string;\n\t\t\t\trange!: vscode.Range;\n\t\t\t\tselectionRange!: vscode.Range;\n\t\t\t\tchildren!: vscode.DocumentSymbol[];\n\t\t\t\toverride containerName!: string;\n\t\t\t}\n\t\t\treturn value.map(MergedInfo.to);\n\n\t\t})\n\t),\n\t// -- formatting\n\tnew ApiCommand(\n\t\t'vscode.executeFormatDocumentProvider', '_executeFormatDocumentProvider', 'Execute document format provider.',\n\t\t[ApiCommandArgument.Uri, new ApiCommandArgument('options', 'Formatting options', _ => true, v => v)],\n\t\tnew ApiCommandResult<languages.TextEdit[], types.TextEdit[] | undefined>('A promise that resolves to an array of TextEdits.', tryMapWith(typeConverters.TextEdit.to))\n\t),\n\tnew ApiCommand(\n\t\t'vscode.executeFormatRangeProvider', '_executeFormatRangeProvider', 'Execute range format provider.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Range, new ApiCommandArgument('options', 'Formatting options', _ => true, v => v)],\n\t\tnew ApiCommandResult<languages.TextEdit[], types.TextEdit[] | undefined>('A promise that resolves to an array of TextEdits.', tryMapWith(typeConverters.TextEdit.to))\n\t),\n\tnew ApiCommand(\n\t\t'vscode.executeFormatOnTypeProvider', '_executeFormatOnTypeProvider', 'Execute format on type provider.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position, new ApiCommandArgument('ch', 'Trigger character', v => typeof v === 'string', v => v), new ApiCommandArgument('options', 'Formatting options', _ => true, v => v)],\n\t\tnew ApiCommandResult<languages.TextEdit[], types.TextEdit[] | undefined>('A promise that resolves to an array of TextEdits.', tryMapWith(typeConverters.TextEdit.to))\n\t),\n\t// -- go to symbol (definition, type definition, declaration, impl, references)\n\tnew ApiCommand(\n\t\t'vscode.executeDefinitionProvider', '_executeDefinitionProvider', 'Execute all definition providers.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<(languages.Location | languages.LocationLink)[], (types.Location | vscode.LocationLink)[] | undefined>('A promise that resolves to an array of Location or LocationLink instances.', mapLocationOrLocationLink)\n\t),\n\tnew ApiCommand(\n\t\t'vscode.experimental.executeDefinitionProvider_recursive', '_executeDefinitionProvider_recursive', 'Execute all definition providers.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<(languages.Location | languages.LocationLink)[], (types.Location | vscode.LocationLink)[] | undefined>('A promise that resolves to an array of Location or LocationLink instances.', mapLocationOrLocationLink)\n\t),\n\tnew ApiCommand(\n\t\t'vscode.executeTypeDefinitionProvider', '_executeTypeDefinitionProvider', 'Execute all type definition providers.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<(languages.Location | languages.LocationLink)[], (types.Location | vscode.LocationLink)[] | undefined>('A promise that resolves to an array of Location or LocationLink instances.', mapLocationOrLocationLink)\n\t),\n\tnew ApiCommand(\n\t\t'vscode.experimental.executeTypeDefinitionProvider_recursive', '_executeTypeDefinitionProvider_recursive', 'Execute all type definition providers.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<(languages.Location | languages.LocationLink)[], (types.Location | vscode.LocationLink)[] | undefined>('A promise that resolves to an array of Location or LocationLink instances.', mapLocationOrLocationLink)\n\t),\n\tnew ApiCommand(\n\t\t'vscode.executeDeclarationProvider', '_executeDeclarationProvider', 'Execute all declaration providers.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<(languages.Location | languages.LocationLink)[], (types.Location | vscode.LocationLink)[] | undefined>('A promise that resolves to an array of Location or LocationLink instances.', mapLocationOrLocationLink)\n\t),\n\tnew ApiCommand(\n\t\t'vscode.experimental.executeDeclarationProvider_recursive', '_executeDeclarationProvider_recursive', 'Execute all declaration providers.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<(languages.Location | languages.LocationLink)[], (types.Location | vscode.LocationLink)[] | undefined>('A promise that resolves to an array of Location or LocationLink instances.', mapLocationOrLocationLink)\n\t),\n\tnew ApiCommand(\n\t\t'vscode.executeImplementationProvider', '_executeImplementationProvider', 'Execute all implementation providers.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<(languages.Location | languages.LocationLink)[], (types.Location | vscode.LocationLink)[] | undefined>('A promise that resolves to an array of Location or LocationLink instances.', mapLocationOrLocationLink)\n\t),\n\tnew ApiCommand(\n\t\t'vscode.experimental.executeImplementationProvider_recursive', '_executeImplementationProvider_recursive', 'Execute all implementation providers.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<(languages.Location | languages.LocationLink)[], (types.Location | vscode.LocationLink)[] | undefined>('A promise that resolves to an array of Location or LocationLink instances.', mapLocationOrLocationLink)\n\t),\n\tnew ApiCommand(\n\t\t'vscode.executeReferenceProvider', '_executeReferenceProvider', 'Execute all reference providers.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<languages.Location[], types.Location[] | undefined>('A promise that resolves to an array of Location-instances.', tryMapWith(typeConverters.location.to))\n\t),\n\tnew ApiCommand(\n\t\t'vscode.experimental.executeReferenceProvider', '_executeReferenceProvider_recursive', 'Execute all reference providers.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<languages.Location[], types.Location[] | undefined>('A promise that resolves to an array of Location-instances.', tryMapWith(typeConverters.location.to))\n\t),\n\t// -- hover\n\tnew ApiCommand(\n\t\t'vscode.executeHoverProvider', '_executeHoverProvider', 'Execute all hover providers.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<languages.Hover[], types.Hover[] | undefined>('A promise that resolves to an array of Hover-instances.', tryMapWith(typeConverters.Hover.to))\n\t),\n\tnew ApiCommand(\n\t\t'vscode.experimental.executeHoverProvider_recursive', '_executeHoverProvider_recursive', 'Execute all hover providers.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<languages.Hover[], types.Hover[] | undefined>('A promise that resolves to an array of Hover-instances.', tryMapWith(typeConverters.Hover.to))\n\t),\n\t// -- selection range\n\tnew ApiCommand(\n\t\t'vscode.executeSelectionRangeProvider', '_executeSelectionRangeProvider', 'Execute selection range provider.',\n\t\t[ApiCommandArgument.Uri, new ApiCommandArgument<types.Position[], IPosition[]>('position', 'A position in a text document', v => Array.isArray(v) && v.every(v => types.Position.isPosition(v)), v => v.map(typeConverters.Position.from))],\n\t\tnew ApiCommandResult<IRange[][], types.SelectionRange[]>('A promise that resolves to an array of ranges.', result => {\n\t\t\treturn result.map(ranges => {\n\t\t\t\tlet node: types.SelectionRange | undefined;\n\t\t\t\tfor (const range of ranges.reverse()) {\n\t\t\t\t\tnode = new types.SelectionRange(typeConverters.Range.to(range), node);\n\t\t\t\t}\n\t\t\t\treturn node!;\n\t\t\t});\n\t\t})\n\t),\n\t// -- symbol search\n\tnew ApiCommand(\n\t\t'vscode.executeWorkspaceSymbolProvider', '_executeWorkspaceSymbolProvider', 'Execute all workspace symbol providers.',\n\t\t[ApiCommandArgument.String.with('query', 'Search string')],\n\t\tnew ApiCommandResult<search.IWorkspaceSymbol[], types.SymbolInformation[]>('A promise that resolves to an array of SymbolInformation-instances.', value => {\n\t\t\treturn value.map(typeConverters.WorkspaceSymbol.to);\n\t\t})\n\t),\n\t// --- call hierarchy\n\tnew ApiCommand(\n\t\t'vscode.prepareCallHierarchy', '_executePrepareCallHierarchy', 'Prepare call hierarchy at a position inside a document',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<ICallHierarchyItemDto[], types.CallHierarchyItem[]>('A promise that resolves to an array of CallHierarchyItem-instances', v => v.map(typeConverters.CallHierarchyItem.to))\n\t),\n\tnew ApiCommand(\n\t\t'vscode.provideIncomingCalls', '_executeProvideIncomingCalls', 'Compute incoming calls for an item',\n\t\t[ApiCommandArgument.CallHierarchyItem],\n\t\tnew ApiCommandResult<IIncomingCallDto[], types.CallHierarchyIncomingCall[]>('A promise that resolves to an array of CallHierarchyIncomingCall-instances', v => v.map(typeConverters.CallHierarchyIncomingCall.to))\n\t),\n\tnew ApiCommand(\n\t\t'vscode.provideOutgoingCalls', '_executeProvideOutgoingCalls', 'Compute outgoing calls for an item',\n\t\t[ApiCommandArgument.CallHierarchyItem],\n\t\tnew ApiCommandResult<IOutgoingCallDto[], types.CallHierarchyOutgoingCall[]>('A promise that resolves to an array of CallHierarchyOutgoingCall-instances', v => v.map(typeConverters.CallHierarchyOutgoingCall.to))\n\t),\n\t// --- rename\n\tnew ApiCommand(\n\t\t'vscode.prepareRename', '_executePrepareRename', 'Execute the prepareRename of rename provider.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<languages.RenameLocation, { range: types.Range; placeholder: string } | undefined>('A promise that resolves to a range and placeholder text.', value => {\n\t\t\tif (!value) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\trange: typeConverters.Range.to(value.range),\n\t\t\t\tplaceholder: value.text\n\t\t\t};\n\t\t})\n\t),\n\tnew ApiCommand(\n\t\t'vscode.executeDocumentRenameProvider', '_executeDocumentRenameProvider', 'Execute rename provider.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position, ApiCommandArgument.String.with('newName', 'The new symbol name')],\n\t\tnew ApiCommandResult<IWorkspaceEditDto & { rejectReason?: string }, types.WorkspaceEdit | undefined>('A promise that resolves to a WorkspaceEdit.', value => {\n\t\t\tif (!value) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tif (value.rejectReason) {\n\t\t\t\tthrow new Error(value.rejectReason);\n\t\t\t}\n\t\t\treturn typeConverters.WorkspaceEdit.to(value);\n\t\t})\n\t),\n\t// --- links\n\tnew ApiCommand(\n\t\t'vscode.executeLinkProvider', '_executeLinkProvider', 'Execute document link provider.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Number.with('linkResolveCount', 'Number of links that should be resolved, only when links are unresolved.').optional()],\n\t\tnew ApiCommandResult<languages.ILink[], vscode.DocumentLink[]>('A promise that resolves to an array of DocumentLink-instances.', value => value.map(typeConverters.DocumentLink.to))\n\t),\n\t// --- semantic tokens\n\tnew ApiCommand(\n\t\t'vscode.provideDocumentSemanticTokensLegend', '_provideDocumentSemanticTokensLegend', 'Provide semantic tokens legend for a document',\n\t\t[ApiCommandArgument.Uri],\n\t\tnew ApiCommandResult<languages.SemanticTokensLegend, types.SemanticTokensLegend | undefined>('A promise that resolves to SemanticTokensLegend.', value => {\n\t\t\tif (!value) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn new types.SemanticTokensLegend(value.tokenTypes, value.tokenModifiers);\n\t\t})\n\t),\n\tnew ApiCommand(\n\t\t'vscode.provideDocumentSemanticTokens', '_provideDocumentSemanticTokens', 'Provide semantic tokens for a document',\n\t\t[ApiCommandArgument.Uri],\n\t\tnew ApiCommandResult<VSBuffer, types.SemanticTokens | undefined>('A promise that resolves to SemanticTokens.', value => {\n\t\t\tif (!value) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tconst semanticTokensDto = decodeSemanticTokensDto(value);\n\t\t\tif (semanticTokensDto.type !== 'full') {\n\t\t\t\t// only accepting full semantic tokens from provideDocumentSemanticTokens\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn new types.SemanticTokens(semanticTokensDto.data, undefined);\n\t\t})\n\t),\n\tnew ApiCommand(\n\t\t'vscode.provideDocumentRangeSemanticTokensLegend', '_provideDocumentRangeSemanticTokensLegend', 'Provide semantic tokens legend for a document range',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Range.optional()],\n\t\tnew ApiCommandResult<languages.SemanticTokensLegend, types.SemanticTokensLegend | undefined>('A promise that resolves to SemanticTokensLegend.', value => {\n\t\t\tif (!value) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn new types.SemanticTokensLegend(value.tokenTypes, value.tokenModifiers);\n\t\t})\n\t),\n\tnew ApiCommand(\n\t\t'vscode.provideDocumentRangeSemanticTokens', '_provideDocumentRangeSemanticTokens', 'Provide semantic tokens for a document range',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Range],\n\t\tnew ApiCommandResult<VSBuffer, types.SemanticTokens | undefined>('A promise that resolves to SemanticTokens.', value => {\n\t\t\tif (!value) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tconst semanticTokensDto = decodeSemanticTokensDto(value);\n\t\t\tif (semanticTokensDto.type !== 'full') {\n\t\t\t\t// only accepting full semantic tokens from provideDocumentRangeSemanticTokens\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn new types.SemanticTokens(semanticTokensDto.data, undefined);\n\t\t})\n\t),\n\t// --- completions\n\tnew ApiCommand(\n\t\t'vscode.executeCompletionItemProvider', '_executeCompletionItemProvider', 'Execute completion item provider.',\n\t\t[\n\t\t\tApiCommandArgument.Uri,\n\t\t\tApiCommandArgument.Position,\n\t\t\tApiCommandArgument.String.with('triggerCharacter', 'Trigger completion when the user types the character, like `,` or `(`').optional(),\n\t\t\tApiCommandArgument.Number.with('itemResolveCount', 'Number of completions to resolve (too large numbers slow down completions)').optional()\n\t\t],\n\t\tnew ApiCommandResult<languages.CompletionList, vscode.CompletionList>('A promise that resolves to a CompletionList-instance.', (value, _args, converter) => {\n\t\t\tif (!value) {\n\t\t\t\treturn new types.CompletionList([]);\n\t\t\t}\n\t\t\tconst items = value.suggestions.map(suggestion => typeConverters.CompletionItem.to(suggestion, converter));\n\t\t\treturn new types.CompletionList(items, value.incomplete);\n\t\t})\n\t),\n\t// --- signature help\n\tnew ApiCommand(\n\t\t'vscode.executeSignatureHelpProvider', '_executeSignatureHelpProvider', 'Execute signature help provider.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position, ApiCommandArgument.String.with('triggerCharacter', 'Trigger signature help when the user types the character, like `,` or `(`').optional()],\n\t\tnew ApiCommandResult<languages.SignatureHelp, vscode.SignatureHelp | undefined>('A promise that resolves to SignatureHelp.', value => {\n\t\t\tif (value) {\n\t\t\t\treturn typeConverters.SignatureHelp.to(value);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t})\n\t),\n\t// --- code lens\n\tnew ApiCommand(\n\t\t'vscode.executeCodeLensProvider', '_executeCodeLensProvider', 'Execute code lens provider.',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Number.with('itemResolveCount', 'Number of lenses that should be resolved and returned. Will only return resolved lenses, will impact performance)').optional()],\n\t\tnew ApiCommandResult<languages.CodeLens[], vscode.CodeLens[] | undefined>('A promise that resolves to an array of CodeLens-instances.', (value, _args, converter) => {\n\t\t\treturn tryMapWith<languages.CodeLens, vscode.CodeLens>(item => {\n\t\t\t\treturn new types.CodeLens(typeConverters.Range.to(item.range), item.command && converter.fromInternal(item.command));\n\t\t\t})(value);\n\t\t})\n\t),\n\t// --- code actions\n\tnew ApiCommand(\n\t\t'vscode.executeCodeActionProvider', '_executeCodeActionProvider', 'Execute code action provider.',\n\t\t[\n\t\t\tApiCommandArgument.Uri,\n\t\t\tnew ApiCommandArgument('rangeOrSelection', 'Range in a text document. Some refactoring provider requires Selection object.', v => types.Range.isRange(v), v => types.Selection.isSelection(v) ? typeConverters.Selection.from(v) : typeConverters.Range.from(v)),\n\t\t\tApiCommandArgument.String.with('kind', 'Code action kind to return code actions for').optional(),\n\t\t\tApiCommandArgument.Number.with('itemResolveCount', 'Number of code actions to resolve (too large numbers slow down code actions)').optional()\n\t\t],\n\t\tnew ApiCommandResult<CustomCodeAction[], (vscode.CodeAction | vscode.Command | undefined)[] | undefined>('A promise that resolves to an array of Command-instances.', (value, _args, converter) => {\n\t\t\treturn tryMapWith<CustomCodeAction, vscode.CodeAction | vscode.Command | undefined>((codeAction) => {\n\t\t\t\tif (codeAction._isSynthetic) {\n\t\t\t\t\tif (!codeAction.command) {\n\t\t\t\t\t\tthrow new Error('Synthetic code actions must have a command');\n\t\t\t\t\t}\n\t\t\t\t\treturn converter.fromInternal(codeAction.command);\n\t\t\t\t} else {\n\t\t\t\t\tconst ret = new types.CodeAction(\n\t\t\t\t\t\tcodeAction.title,\n\t\t\t\t\t\tcodeAction.kind ? new types.CodeActionKind(codeAction.kind) : undefined\n\t\t\t\t\t);\n\t\t\t\t\tif (codeAction.edit) {\n\t\t\t\t\t\tret.edit = typeConverters.WorkspaceEdit.to(codeAction.edit);\n\t\t\t\t\t}\n\t\t\t\t\tif (codeAction.command) {\n\t\t\t\t\t\tret.command = converter.fromInternal(codeAction.command);\n\t\t\t\t\t}\n\t\t\t\t\tret.isPreferred = codeAction.isPreferred;\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t})(value);\n\t\t})\n\t),\n\t// --- colors\n\tnew ApiCommand(\n\t\t'vscode.executeDocumentColorProvider', '_executeDocumentColorProvider', 'Execute document color provider.',\n\t\t[ApiCommandArgument.Uri],\n\t\tnew ApiCommandResult<IRawColorInfo[], vscode.ColorInformation[]>('A promise that resolves to an array of ColorInformation objects.', result => {\n\t\t\tif (result) {\n\t\t\t\treturn result.map(ci => new types.ColorInformation(typeConverters.Range.to(ci.range), typeConverters.Color.to(ci.color)));\n\t\t\t}\n\t\t\treturn [];\n\t\t})\n\t),\n\tnew ApiCommand(\n\t\t'vscode.executeColorPresentationProvider', '_executeColorPresentationProvider', 'Execute color presentation provider.',\n\t\t[\n\t\t\tnew ApiCommandArgument<types.Color, [number, number, number, number]>('color', 'The color to show and insert', v => v instanceof types.Color, typeConverters.Color.from),\n\t\t\tnew ApiCommandArgument<{ uri: URI; range: types.Range }, { uri: URI; range: IRange }>('context', 'Context object with uri and range', _v => true, v => ({ uri: v.uri, range: typeConverters.Range.from(v.range) })),\n\t\t],\n\t\tnew ApiCommandResult<languages.IColorPresentation[], types.ColorPresentation[]>('A promise that resolves to an array of ColorPresentation objects.', result => {\n\t\t\tif (result) {\n\t\t\t\treturn result.map(typeConverters.ColorPresentation.to);\n\t\t\t}\n\t\t\treturn [];\n\t\t})\n\t),\n\t// --- inline hints\n\tnew ApiCommand(\n\t\t'vscode.executeInlayHintProvider', '_executeInlayHintProvider', 'Execute inlay hints provider',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Range],\n\t\tnew ApiCommandResult<languages.InlayHint[], vscode.InlayHint[]>('A promise that resolves to an array of Inlay objects', (result, args, converter) => {\n\t\t\treturn result.map(typeConverters.InlayHint.to.bind(undefined, converter));\n\t\t})\n\t),\n\t// --- folding\n\tnew ApiCommand(\n\t\t'vscode.executeFoldingRangeProvider', '_executeFoldingRangeProvider', 'Execute folding range provider',\n\t\t[ApiCommandArgument.Uri],\n\t\tnew ApiCommandResult<languages.FoldingRange[] | undefined, vscode.FoldingRange[] | undefined>('A promise that resolves to an array of FoldingRange objects', (result, args) => {\n\t\t\tif (result) {\n\t\t\t\treturn result.map(typeConverters.FoldingRange.to);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t})\n\t),\n\n\t// --- notebooks\n\tnew ApiCommand(\n\t\t'vscode.resolveNotebookContentProviders', '_resolveNotebookContentProvider', 'Resolve Notebook Content Providers',\n\t\t[\n\t\t\t// new ApiCommandArgument<string, string>('viewType', '', v => typeof v === 'string', v => v),\n\t\t\t// new ApiCommandArgument<string, string>('displayName', '', v => typeof v === 'string', v => v),\n\t\t\t// new ApiCommandArgument<object, object>('options', '', v => typeof v === 'object', v => v),\n\t\t],\n\t\tnew ApiCommandResult<{\n\t\t\tviewType: string;\n\t\t\tdisplayName: string;\n\t\t\toptions: { transientOutputs: boolean; transientCellMetadata: TransientCellMetadata; transientDocumentMetadata: TransientDocumentMetadata };\n\t\t\tfilenamePattern: (vscode.GlobPattern | { include: vscode.GlobPattern; exclude: vscode.GlobPattern })[];\n\t\t}[], {\n\t\t\tviewType: string;\n\t\t\tdisplayName: string;\n\t\t\tfilenamePattern: (vscode.GlobPattern | { include: vscode.GlobPattern; exclude: vscode.GlobPattern })[];\n\t\t\toptions: vscode.NotebookDocumentContentOptions;\n\t\t}[] | undefined>('A promise that resolves to an array of NotebookContentProvider static info objects.', tryMapWith(item => {\n\t\t\treturn {\n\t\t\t\tviewType: item.viewType,\n\t\t\t\tdisplayName: item.displayName,\n\t\t\t\toptions: {\n\t\t\t\t\ttransientOutputs: item.options.transientOutputs,\n\t\t\t\t\ttransientCellMetadata: item.options.transientCellMetadata,\n\t\t\t\t\ttransientDocumentMetadata: item.options.transientDocumentMetadata\n\t\t\t\t},\n\t\t\t\tfilenamePattern: item.filenamePattern.map(pattern => typeConverters.NotebookExclusiveDocumentPattern.to(pattern))\n\t\t\t};\n\t\t}))\n\t),\n\t// --- debug support\n\tnew ApiCommand(\n\t\t'vscode.executeInlineValueProvider', '_executeInlineValueProvider', 'Execute inline value provider',\n\t\t[\n\t\t\tApiCommandArgument.Uri,\n\t\t\tApiCommandArgument.Range,\n\t\t\tnew ApiCommandArgument<types.InlineValueContext, IInlineValueContextDto>('context', 'An InlineValueContext', v => v && typeof v.frameId === 'number' && v.stoppedLocation instanceof types.Range, v => typeConverters.InlineValueContext.from(v))\n\t\t],\n\t\tnew ApiCommandResult<languages.InlineValue[], vscode.InlineValue[]>('A promise that resolves to an array of InlineValue objects', result => {\n\t\t\treturn result.map(typeConverters.InlineValue.to);\n\t\t})\n\t),\n\t// --- open'ish commands\n\tnew ApiCommand(\n\t\t'vscode.open', '_workbench.open', 'Opens the provided resource in the editor. Can be a text or binary file, or an http(s) URL. If you need more control over the options for opening a text file, use vscode.window.showTextDocument instead.',\n\t\t[\n\t\t\tnew ApiCommandArgument<URI | string>('uriOrString', 'Uri-instance or string (only http/https)', v => URI.isUri(v) || (typeof v === 'string' && matchesSomeScheme(v, Schemas.http, Schemas.https)), v => v),\n\t\t\tnew ApiCommandArgument<vscode.ViewColumn | typeConverters.TextEditorOpenOptions | undefined, [vscode.ViewColumn?, ITextEditorOptions?] | undefined>('columnOrOptions', 'Either the column in which to open or editor options, see vscode.TextDocumentShowOptions',\n\t\t\t\tv => v === undefined || typeof v === 'number' || typeof v === 'object',\n\t\t\t\tv => !v ? v : typeof v === 'number' ? [typeConverters.ViewColumn.from(v), undefined] : [typeConverters.ViewColumn.from(v.viewColumn), typeConverters.TextEditorOpenOptions.from(v)]\n\t\t\t).optional(),\n\t\t\tApiCommandArgument.String.with('label', '').optional()\n\t\t],\n\t\tApiCommandResult.Void\n\t),\n\tnew ApiCommand(\n\t\t'vscode.openWith', '_workbench.openWith', 'Opens the provided resource with a specific editor.',\n\t\t[\n\t\t\tApiCommandArgument.Uri.with('resource', 'Resource to open'),\n\t\t\tApiCommandArgument.String.with('viewId', 'Custom editor view id. This should be the viewType string for custom editors or the notebookType string for notebooks. Use \\'default\\' to use VS Code\\'s default text editor'),\n\t\t\tnew ApiCommandArgument<vscode.ViewColumn | typeConverters.TextEditorOpenOptions | undefined, [vscode.ViewColumn?, ITextEditorOptions?] | undefined>('columnOrOptions', 'Either the column in which to open or editor options, see vscode.TextDocumentShowOptions',\n\t\t\t\tv => v === undefined || typeof v === 'number' || typeof v === 'object',\n\t\t\t\tv => !v ? v : typeof v === 'number' ? [typeConverters.ViewColumn.from(v), undefined] : [typeConverters.ViewColumn.from(v.viewColumn), typeConverters.TextEditorOpenOptions.from(v)],\n\t\t\t).optional()\n\t\t],\n\t\tApiCommandResult.Void\n\t),\n\tnew ApiCommand(\n\t\t'vscode.diff', '_workbench.diff', 'Opens the provided resources in the diff editor to compare their contents.',\n\t\t[\n\t\t\tApiCommandArgument.Uri.with('left', 'Left-hand side resource of the diff editor'),\n\t\t\tApiCommandArgument.Uri.with('right', 'Right-hand side resource of the diff editor'),\n\t\t\tApiCommandArgument.String.with('title', 'Human readable title for the diff editor').optional(),\n\t\t\tnew ApiCommandArgument<typeConverters.TextEditorOpenOptions | undefined, [number?, ITextEditorOptions?] | undefined>('columnOrOptions', 'Either the column in which to open or editor options, see vscode.TextDocumentShowOptions',\n\t\t\t\tv => v === undefined || typeof v === 'object',\n\t\t\t\tv => v && [typeConverters.ViewColumn.from(v.viewColumn), typeConverters.TextEditorOpenOptions.from(v)]\n\t\t\t).optional(),\n\t\t],\n\t\tApiCommandResult.Void\n\t),\n\tnew ApiCommand(\n\t\t'vscode.changes', '_workbench.changes', 'Opens a list of resources in the changes editor to compare their contents.',\n\t\t[\n\t\t\tApiCommandArgument.String.with('title', 'Human readable title for the changes editor'),\n\t\t\tnew ApiCommandArgument<[URI, URI?, URI?][]>('resourceList', 'List of resources to compare',\n\t\t\t\tresources => {\n\t\t\t\t\tfor (const resource of resources) {\n\t\t\t\t\t\tif (resource.length !== 3) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst [label, left, right] = resource;\n\t\t\t\t\t\tif (!URI.isUri(label) ||\n\t\t\t\t\t\t\t(!URI.isUri(left) && left !== undefined && left !== null) ||\n\t\t\t\t\t\t\t(!URI.isUri(right) && right !== undefined && right !== null)) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\t\t\t\t},\n\t\t\t\tv => v)\n\t\t],\n\t\tApiCommandResult.Void\n\t),\n\t// --- type hierarchy\n\tnew ApiCommand(\n\t\t'vscode.prepareTypeHierarchy', '_executePrepareTypeHierarchy', 'Prepare type hierarchy at a position inside a document',\n\t\t[ApiCommandArgument.Uri, ApiCommandArgument.Position],\n\t\tnew ApiCommandResult<ITypeHierarchyItemDto[], types.TypeHierarchyItem[]>('A promise that resolves to an array of TypeHierarchyItem-instances', v => v.map(typeConverters.TypeHierarchyItem.to))\n\t),\n\tnew ApiCommand(\n\t\t'vscode.provideSupertypes', '_executeProvideSupertypes', 'Compute supertypes for an item',\n\t\t[ApiCommandArgument.TypeHierarchyItem],\n\t\tnew ApiCommandResult<ITypeHierarchyItemDto[], types.TypeHierarchyItem[]>('A promise that resolves to an array of TypeHierarchyItem-instances', v => v.map(typeConverters.TypeHierarchyItem.to))\n\t),\n\tnew ApiCommand(\n\t\t'vscode.provideSubtypes', '_executeProvideSubtypes', 'Compute subtypes for an item',\n\t\t[ApiCommandArgument.TypeHierarchyItem],\n\t\tnew ApiCommandResult<ITypeHierarchyItemDto[], types.TypeHierarchyItem[]>('A promise that resolves to an array of TypeHierarchyItem-instances', v => v.map(typeConverters.TypeHierarchyItem.to))\n\t),\n\t// --- testing\n\tnew ApiCommand(\n\t\t'vscode.revealTestInExplorer', '_revealTestInExplorer', 'Reveals a test instance in the explorer',\n\t\t[ApiCommandArgument.TestItem],\n\t\tApiCommandResult.Void\n\t),\n\t// --- continue edit session\n\tnew ApiCommand(\n\t\t'vscode.experimental.editSession.continue', '_workbench.editSessions.actions.continueEditSession', 'Continue the current edit session in a different workspace',\n\t\t[ApiCommandArgument.Uri.with('workspaceUri', 'The target workspace to continue the current edit session in')],\n\t\tApiCommandResult.Void\n\t),\n\t// --- context keys\n\tnew ApiCommand(\n\t\t'setContext', '_setContext', 'Set a custom context key value that can be used in when clauses.',\n\t\t[\n\t\t\tApiCommandArgument.String.with('name', 'The context key name'),\n\t\t\tnew ApiCommandArgument('value', 'The context key value', () => true, v => v),\n\t\t],\n\t\tApiCommandResult.Void\n\t),\n\t// --- mapped edits\n\tnew ApiCommand(\n\t\t'vscode.executeMappedEditsProvider', '_executeMappedEditsProvider', 'Execute Mapped Edits Provider',\n\t\t[\n\t\t\tApiCommandArgument.Uri,\n\t\t\tApiCommandArgument.StringArray,\n\t\t\tnew ApiCommandArgument(\n\t\t\t\t'MappedEditsContext',\n\t\t\t\t'Mapped Edits Context',\n\t\t\t\t(v: unknown) => typeConverters.MappedEditsContext.is(v),\n\t\t\t\t(v: vscode.MappedEditsContext) => typeConverters.MappedEditsContext.from(v)\n\t\t\t)\n\t\t],\n\t\tnew ApiCommandResult<IWorkspaceEditDto | null, vscode.WorkspaceEdit | null>(\n\t\t\t'A promise that resolves to a workspace edit or null',\n\t\t\t(value) => {\n\t\t\t\treturn value ? typeConverters.WorkspaceEdit.to(value) : null;\n\t\t\t})\n\t),\n\t// --- inline chat\n\tnew ApiCommand(\n\t\t'vscode.editorChat.start', 'inlineChat.start', 'Invoke a new editor chat session',\n\t\t[new ApiCommandArgument<InlineChatEditorApiArg | undefined, InlineChatRunOptions | undefined>('Run arguments', '', _v => true, v => {\n\n\t\t\tif (!v) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tinitialRange: v.initialRange ? typeConverters.Range.from(v.initialRange) : undefined,\n\t\t\t\tinitialSelection: types.Selection.isSelection(v.initialSelection) ? typeConverters.Selection.from(v.initialSelection) : undefined,\n\t\t\t\tmessage: v.message,\n\t\t\t\tautoSend: v.autoSend,\n\t\t\t\tposition: v.position ? typeConverters.Position.from(v.position) : undefined,\n\t\t\t};\n\t\t})],\n\t\tApiCommandResult.Void\n\t)\n];\n\ntype InlineChatEditorApiArg = {\n\tinitialRange?: vscode.Range;\n\tinitialSelection?: vscode.Selection;\n\tmessage?: string;\n\tautoSend?: boolean;\n\tposition?: vscode.Position;\n};\n\ntype InlineChatRunOptions = {\n\tinitialRange?: IRange;\n\tinitialSelection?: ISelection;\n\tmessage?: string;\n\tautoSend?: boolean;\n\tposition?: IPosition;\n};\n\n//#endregion\n\n\n//#region OLD world\n\nexport class ExtHostApiCommands {\n\n\tstatic register(commands: ExtHostCommands) {\n\n\t\tnewCommands.forEach(commands.registerApiCommand, commands);\n\n\t\tthis._registerValidateWhenClausesCommand(commands);\n\t}\n\n\tprivate static _registerValidateWhenClausesCommand(commands: ExtHostCommands) {\n\t\tcommands.registerCommand(false, '_validateWhenClauses', validateWhenClauses);\n\t}\n}\n\nfunction tryMapWith<T, R>(f: (x: T) => R) {\n\treturn (value: T[]) => {\n\t\tif (Array.isArray(value)) {\n\t\t\treturn value.map(f);\n\t\t}\n\t\treturn undefined;\n\t};\n}\n\nfunction mapLocationOrLocationLink(values: (languages.Location | languages.LocationLink)[]): (types.Location | vscode.LocationLink)[] | undefined {\n\tif (!Array.isArray(values)) {\n\t\treturn undefined;\n\t}\n\tconst result: (types.Location | vscode.LocationLink)[] = [];\n\tfor (const item of values) {\n\t\tif (languages.isLocationLink(item)) {\n\t\t\tresult.push(typeConverters.DefinitionLink.to(item));\n\t\t} else {\n\t\t\tresult.push(typeConverters.location.to(item));\n\t\t}\n\t}\n\treturn result;\n}\n"],
  "mappings": "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",
  "names": ["v"]
}
