var m=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var i=(r,o,e,a)=>{for(var t=a>1?void 0:a?p(o,e):o,s=r.length-1,c;s>=0;s--)(c=r[s])&&(t=(a?c(o,e,t):c(t))||t);return a&&t&&m(o,e,t),t},d=(r,o)=>(e,a)=>o(e,a,r);import"vscode";import{VSBuffer as g}from"../../../base/common/buffer.js";import{Disposable as k,DisposableStore as S,toDisposable as l}from"../../../base/common/lifecycle.js";import{createDecorator as y}from"../../../platform/instantiation/common/instantiation.js";import{MainContext as u}from"./extHost.protocol.js";import{IExtHostRpcService as h}from"./extHostRpcService.js";const F=y("IExtHostManagedSockets");let n=class{_proxy;_remoteSocketIdCounter=0;_factory=null;_managedRemoteSockets=new Map;constructor(o){this._proxy=o.getProxy(u.MainThreadManagedSockets)}setFactory(o,e){for(const a of this._managedRemoteSockets.values())a.dispose();this._factory&&this._proxy.$unregisterSocketFactory(this._factory.socketFactoryId),this._factory=new f(o,e),this._proxy.$registerSocketFactory(this._factory.socketFactoryId)}async $openRemoteSocket(o){if(!this._factory||this._factory.socketFactoryId!==o)throw new Error(`No socket factory with id ${o}`);const e=++this._remoteSocketIdCounter,a=await this._factory.makeConnection(),t=new S;return this._managedRemoteSockets.set(e,new M(e,a,t)),t.add(l(()=>this._managedRemoteSockets.delete(e))),t.add(a.onDidEnd(()=>{this._proxy.$onDidManagedSocketEnd(e),t.dispose()})),t.add(a.onDidClose(s=>{this._proxy.$onDidManagedSocketClose(e,s?.stack??s?.message),t.dispose()})),t.add(a.onDidReceiveMessage(s=>this._proxy.$onDidManagedSocketHaveData(e,g.wrap(s)))),e}$remoteSocketWrite(o,e){this._managedRemoteSockets.get(o)?.actual.send(e.buffer)}$remoteSocketEnd(o){const e=this._managedRemoteSockets.get(o);e&&(e.actual.end(),e.dispose())}async $remoteSocketDrain(o){await this._managedRemoteSockets.get(o)?.actual.drain?.()}};n=i([d(0,h)],n);class f{constructor(o,e){this.socketFactoryId=o;this.makeConnection=e}}class M extends k{constructor(e,a,t){super();this.socketId=e;this.actual=a;this._register(t)}}export{n as ExtHostManagedSockets,F as IExtHostManagedSockets};
