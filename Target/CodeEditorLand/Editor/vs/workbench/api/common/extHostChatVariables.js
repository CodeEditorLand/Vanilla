import{onUnexpectedExternalError as m}from"../../../base/common/errors.js";import{toDisposable as u}from"../../../base/common/lifecycle.js";import{ThemeIcon as v}from"../../../base/common/themables.js";import{MainContext as b}from"./extHost.protocol.js";import*as l from"./extHostTypeConverters.js";import*as p from"./extHostTypes.js";import{checkProposedApiEnabled as C}from"../../services/extensions/common/extensions.js";class d{static _idPool=0;_resolver=new Map;_proxy;constructor(i){this._proxy=i.getProxy(b.MainThreadChatVariables)}async $resolveVariable(i,o,t,s){const e=this._resolver.get(i);if(e)try{if(e.resolver.resolve2){C(e.extension,"chatParticipantAdditions");const r=new R(o,this._proxy),a=await e.resolver.resolve2(e.data.name,{prompt:t},r.apiObject,s);if(a&&a[0])return a[0].value}else{const r=await e.resolver.resolve(e.data.name,{prompt:t},s);if(r&&r[0])return r[0].value}}catch(r){m(r)}}registerVariableResolver(i,o,t,s,e,r,a,f,h){const n=d._idPool++,c=h?v.fromId(h):void 0;return this._resolver.set(n,{extension:i,data:{id:o,name:t,description:s,modelDescription:e,icon:c},resolver:a}),this._proxy.$registerVariable(n,{id:o,name:t,description:s,modelDescription:e,isSlow:r,fullName:f,icon:c}),u(()=>{this._resolver.delete(n),this._proxy.$unregisterVariable(n)})}}class R{constructor(i,o){this._requestId=i;this._proxy=o}_isClosed=!1;_apiObject;close(){this._isClosed=!0}get apiObject(){if(!this._apiObject){let t=function(e){if(o._isClosed){const r=new Error("Response stream has been closed");throw Error.captureStackTrace(r,e),r}};var i=t;const o=this,s=e=>{this._proxy.$handleProgressChunk(this._requestId,e)};this._apiObject={progress(e){t(this.progress);const r=new p.ChatResponseProgressPart(e),a=l.ChatResponseProgressPart.from(r);return s(a),this},reference(e){t(this.reference);const r=new p.ChatResponseReferencePart(e),a=l.ChatResponseReferencePart.from(r);return s(a),this},push(e){return t(this.push),e instanceof p.ChatResponseReferencePart?s(l.ChatResponseReferencePart.from(e)):e instanceof p.ChatResponseProgressPart&&s(l.ChatResponseProgressPart.from(e)),this}}}return this._apiObject}}export{d as ExtHostChatVariables};
