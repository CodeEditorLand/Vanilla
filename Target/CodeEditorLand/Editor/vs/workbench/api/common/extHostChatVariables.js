import{onUnexpectedExternalError as f}from"../../../base/common/errors.js";import{toDisposable as u}from"../../../base/common/lifecycle.js";import{ThemeIcon as b}from"../../../base/common/themables.js";import{checkProposedApiEnabled as v}from"../../services/extensions/common/extensions.js";import{MainContext as C}from"./extHost.protocol.js";import*as p from"./extHostTypeConverters.js";import*as l from"./extHostTypes.js";class d{static _idPool=0;_resolver=new Map;_proxy;constructor(o){this._proxy=o.getProxy(C.MainThreadChatVariables)}async $resolveVariable(o,i,t,s){const e=this._resolver.get(o);if(e)try{if(e.resolver.resolve2){v(e.extension,"chatParticipantAdditions");const r=new y(i,this._proxy),a=await e.resolver.resolve2(e.data.name,{prompt:t},r.apiObject,s);if(a&&a[0])return a[0].value}else{const r=await e.resolver.resolve(e.data.name,{prompt:t},s);if(r&&r[0])return r[0].value}}catch(r){f(r)}}registerVariableResolver(o,i,t,s,e,r,a,m,c){const n=d._idPool++,h=c?b.fromId(c):void 0;return this._resolver.set(n,{extension:o,data:{id:i,name:t,description:s,modelDescription:e,icon:h},resolver:a}),this._proxy.$registerVariable(n,{id:i,name:t,description:s,modelDescription:e,isSlow:r,fullName:m,icon:h}),u(()=>{this._resolver.delete(n),this._proxy.$unregisterVariable(n)})}}class y{constructor(o,i){this._requestId=o;this._proxy=i}_isClosed=!1;_apiObject;close(){this._isClosed=!0}get apiObject(){if(!this._apiObject){let t=function(e){if(i._isClosed){const r=new Error("Response stream has been closed");throw Error.captureStackTrace(r,e),r}};var o=t;const i=this,s=e=>{this._proxy.$handleProgressChunk(this._requestId,e)};this._apiObject={progress(e){t(this.progress);const r=new l.ChatResponseProgressPart(e),a=p.ChatResponseProgressPart.from(r);return s(a),this},reference(e){t(this.reference);const r=new l.ChatResponseReferencePart(e),a=p.ChatResponseReferencePart.from(r);return s(a),this},push(e){return t(this.push),e instanceof l.ChatResponseReferencePart?s(p.ChatResponseReferencePart.from(e)):e instanceof l.ChatResponseProgressPart&&s(p.ChatResponseProgressPart.from(e)),this}}}return this._apiObject}}export{d as ExtHostChatVariables};
