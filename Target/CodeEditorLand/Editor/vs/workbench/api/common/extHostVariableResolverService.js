var E=Object.defineProperty;var x=Object.getOwnPropertyDescriptor;var v=(d,n,o,r)=>{for(var i=r>1?void 0:r?x(n,o):n,s=d.length-1,a;s>=0;s--)(a=d[s])&&(i=(r?a(n,o,i):a(i))||i);return r&&i&&E(n,o,i),i},c=(d,n)=>(o,r)=>n(o,r,d);import{Lazy as I}from"../../../base/common/lazy.js";import{Disposable as b}from"../../../base/common/lifecycle.js";import*as g from"../../../base/common/path.js";import*as p from"../../../base/common/process.js";import{createDecorator as h}from"../../../platform/instantiation/common/instantiation.js";import{AbstractVariableResolverService as H}from"../../services/configurationResolver/common/variableResolver.js";import{IExtHostConfiguration as y}from"./extHostConfiguration.js";import{IExtHostDocumentsAndEditors as C}from"./extHostDocumentsAndEditors.js";import{IExtHostEditorTabs as T}from"./extHostEditorTabs.js";import{IExtHostExtensionService as k}from"./extHostExtensionService.js";import{CustomEditorTabInput as P,NotebookDiffEditorTabInput as R,NotebookEditorTabInput as D,TextDiffTabInput as S,TextTabInput as w}from"./extHostTypes.js";import{IExtHostWorkspace as F}from"./extHostWorkspace.js";const X=h("IExtHostVariableResolverProvider");class W extends H{constructor(n,o,r,i,s,a,l){function m(){if(r){const e=r.activeEditor();if(e)return e.document.uri;const t=i.tabGroups.all.find(f=>f.isActive)?.activeTab;if(t!==void 0){if(t.input instanceof S||t.input instanceof R)return t.input.modified;if(t.input instanceof w||t.input instanceof D||t.input instanceof P)return t.input.uri}}}super({getFolderUri:e=>{const t=a.folders.filter(f=>f.name===e);if(t&&t.length>0)return t[0].uri},getWorkspaceFolderCount:()=>a.folders.length,getConfigurationValue:(e,t)=>s.getConfiguration(void 0,e).get(t),getAppRoot:()=>p.cwd(),getExecPath:()=>p.env.VSCODE_EXEC_PATH,getFilePath:()=>{const e=m();if(e)return g.normalize(e.fsPath)},getWorkspaceFolderPathForFile:()=>{if(o){const e=m();if(e){const t=o.getWorkspaceFolder(e);if(t)return g.normalize(t.uri.fsPath)}}},getSelectedText:()=>{if(r){const e=r.activeEditor();if(e&&!e.selection.isEmpty)return e.document.getText(e.selection)}},getLineNumber:()=>{if(r){const e=r.activeEditor();if(e)return String(e.selection.end.line+1)}},getExtension:e=>n.getExtension(e)},void 0,l?Promise.resolve(l):void 0,Promise.resolve(p.env))}}let u=class extends b{constructor(o,r,i,s,a){super();this.extensionService=o;this.workspaceService=r;this.editorService=i;this.configurationService=s;this.editorTabs=a}_resolver=new I(async()=>{const o=await this.configurationService.getConfigProvider(),i={folders:await this.workspaceService.getWorkspaceFolders2()||[]};return this._register(this.workspaceService.onDidChangeWorkspace(async s=>{i.folders=await this.workspaceService.getWorkspaceFolders2()||[]})),new W(this.extensionService,this.workspaceService,this.editorService,this.editorTabs,o,i,this.homeDir())});getResolver(){return this._resolver.value}homeDir(){}};u=v([c(0,k),c(1,F),c(2,C),c(3,y),c(4,T)],u);export{u as ExtHostVariableResolverProviderService,X as IExtHostVariableResolverProvider};
