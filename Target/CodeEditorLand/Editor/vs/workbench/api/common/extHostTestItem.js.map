{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostTestItem.ts"],
  "sourcesContent": ["import type * as vscode from \"vscode\";\nimport { URI } from \"../../../base/common/uri.js\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as editorRange from \"../../../editor/common/core/range.js\";\nimport {\n\tTestId,\n\tTestIdPathParts,\n} from \"../../contrib/testing/common/testId.js\";\nimport {\n\ttype ExtHostTestItemEvent,\n\ttype ITestChildrenLike,\n\ttype ITestItemApi,\n\ttype ITestItemChildren,\n\tTestItemCollection,\n\tTestItemEventOp,\n\tcreateTestItemChildren,\n} from \"../../contrib/testing/common/testItemCollection.js\";\nimport {\n\ttype ITestItem,\n\ttype ITestItemContext,\n\tdenamespaceTestTag,\n} from \"../../contrib/testing/common/testTypes.js\";\nimport type { ExtHostDocumentsAndEditors } from \"./extHostDocumentsAndEditors.js\";\nimport {\n\ttype IExtHostTestItemApi,\n\tcreatePrivateApiFor,\n\tgetPrivateApiFor,\n} from \"./extHostTestingPrivateApi.js\";\nimport * as Convert from \"./extHostTypeConverters.js\";\n\nconst testItemPropAccessor = <K extends keyof vscode.TestItem>(\n\tapi: IExtHostTestItemApi,\n\tdefaultValue: vscode.TestItem[K],\n\tequals: (a: vscode.TestItem[K], b: vscode.TestItem[K]) => boolean,\n\ttoUpdate: (\n\t\tnewValue: vscode.TestItem[K],\n\t\toldValue: vscode.TestItem[K],\n\t) => ExtHostTestItemEvent,\n) => {\n\tlet value = defaultValue;\n\treturn {\n\t\tenumerable: true,\n\t\tconfigurable: false,\n\t\tget() {\n\t\t\treturn value;\n\t\t},\n\t\tset(newValue: vscode.TestItem[K]) {\n\t\t\tif (!equals(value, newValue)) {\n\t\t\t\tconst oldValue = value;\n\t\t\t\tvalue = newValue;\n\t\t\t\tapi.listener?.(toUpdate(newValue, oldValue));\n\t\t\t}\n\t\t},\n\t};\n};\n\ntype WritableProps = Pick<\n\tvscode.TestItem,\n\t| \"range\"\n\t| \"label\"\n\t| \"description\"\n\t| \"sortText\"\n\t| \"canResolveChildren\"\n\t| \"busy\"\n\t| \"error\"\n\t| \"tags\"\n>;\n\nconst strictEqualComparator = <T>(a: T, b: T) => a === b;\n\nconst propComparators: {\n\t[K in keyof Required<WritableProps>]: (\n\t\ta: vscode.TestItem[K],\n\t\tb: vscode.TestItem[K],\n\t) => boolean;\n} = {\n\trange: (a, b) => {\n\t\tif (a === b) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!a || !b) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.isEqual(b);\n\t},\n\tlabel: strictEqualComparator,\n\tdescription: strictEqualComparator,\n\tsortText: strictEqualComparator,\n\tbusy: strictEqualComparator,\n\terror: strictEqualComparator,\n\tcanResolveChildren: strictEqualComparator,\n\ttags: (a, b) => {\n\t\tif (a.length !== b.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (a.some((t1) => !b.find((t2) => t1.id === t2.id))) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n};\n\nconst evSetProps =\n\t<T>(\n\t\tfn: (newValue: T) => Partial<ITestItem>,\n\t): ((newValue: T) => ExtHostTestItemEvent) =>\n\t(v) => ({ op: TestItemEventOp.SetProp, update: fn(v) });\n\nconst makePropDescriptors = (\n\tapi: IExtHostTestItemApi,\n\tlabel: string,\n): { [K in keyof Required<WritableProps>]: PropertyDescriptor } => ({\n\trange: (() => {\n\t\tlet value: vscode.Range | undefined;\n\t\tconst updateProps = evSetProps<vscode.Range | undefined>((r) => ({\n\t\t\trange: editorRange.Range.lift(Convert.Range.from(r)),\n\t\t}));\n\t\treturn {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget() {\n\t\t\t\treturn value;\n\t\t\t},\n\t\t\tset(newValue: vscode.Range | undefined) {\n\t\t\t\tapi.listener?.({ op: TestItemEventOp.DocumentSynced });\n\t\t\t\tif (!propComparators.range(value, newValue)) {\n\t\t\t\t\tvalue = newValue;\n\t\t\t\t\tapi.listener?.(updateProps(newValue));\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t})(),\n\tlabel: testItemPropAccessor<\"label\">(\n\t\tapi,\n\t\tlabel,\n\t\tpropComparators.label,\n\t\tevSetProps((label) => ({ label })),\n\t),\n\tdescription: testItemPropAccessor<\"description\">(\n\t\tapi,\n\t\tundefined,\n\t\tpropComparators.description,\n\t\tevSetProps((description) => ({ description })),\n\t),\n\tsortText: testItemPropAccessor<\"sortText\">(\n\t\tapi,\n\t\tundefined,\n\t\tpropComparators.sortText,\n\t\tevSetProps((sortText) => ({ sortText })),\n\t),\n\tcanResolveChildren: testItemPropAccessor<\"canResolveChildren\">(\n\t\tapi,\n\t\tfalse,\n\t\tpropComparators.canResolveChildren,\n\t\t(state) => ({\n\t\t\top: TestItemEventOp.UpdateCanResolveChildren,\n\t\t\tstate,\n\t\t}),\n\t),\n\tbusy: testItemPropAccessor<\"busy\">(\n\t\tapi,\n\t\tfalse,\n\t\tpropComparators.busy,\n\t\tevSetProps((busy) => ({ busy })),\n\t),\n\terror: testItemPropAccessor<\"error\">(\n\t\tapi,\n\t\tundefined,\n\t\tpropComparators.error,\n\t\tevSetProps((error) => ({\n\t\t\terror: Convert.MarkdownString.fromStrict(error) || null,\n\t\t})),\n\t),\n\ttags: testItemPropAccessor<\"tags\">(\n\t\tapi,\n\t\t[],\n\t\tpropComparators.tags,\n\t\t(current, previous) => ({\n\t\t\top: TestItemEventOp.SetTags,\n\t\t\tnew: current.map(Convert.TestTag.from),\n\t\t\told: previous.map(Convert.TestTag.from),\n\t\t}),\n\t),\n});\n\nconst toItemFromPlain = (item: ITestItem.Serialized): TestItemImpl => {\n\tconst testId = TestId.fromString(item.extId);\n\tconst testItem = new TestItemImpl(\n\t\ttestId.controllerId,\n\t\ttestId.localId,\n\t\titem.label,\n\t\tURI.revive(item.uri) || undefined,\n\t);\n\ttestItem.range = Convert.Range.to(item.range || undefined);\n\ttestItem.description = item.description || undefined;\n\ttestItem.sortText = item.sortText || undefined;\n\ttestItem.tags = item.tags.map((t) =>\n\t\tConvert.TestTag.to({ id: denamespaceTestTag(t).tagId }),\n\t);\n\treturn testItem;\n};\n\nexport const toItemFromContext = (context: ITestItemContext): TestItemImpl => {\n\tlet node: TestItemImpl | undefined;\n\tfor (const test of context.tests) {\n\t\tconst next = toItemFromPlain(test.item);\n\t\tgetPrivateApiFor(next).parent = node;\n\t\tnode = next;\n\t}\n\n\treturn node!;\n};\n\nexport class TestItemImpl implements vscode.TestItem {\n\tpublic readonly id!: string;\n\tpublic readonly uri!: vscode.Uri | undefined;\n\tpublic readonly children!: ITestItemChildren<vscode.TestItem>;\n\tpublic readonly parent!: TestItemImpl | undefined;\n\n\tpublic range!: vscode.Range | undefined;\n\tpublic description!: string | undefined;\n\tpublic sortText!: string | undefined;\n\tpublic label!: string;\n\tpublic error!: string | vscode.MarkdownString;\n\tpublic busy!: boolean;\n\tpublic canResolveChildren!: boolean;\n\tpublic tags!: readonly vscode.TestTag[];\n\n\t/**\n\t * Note that data is deprecated and here for back-compat only\n\t */\n\tconstructor(\n\t\tcontrollerId: string,\n\t\tid: string,\n\t\tlabel: string,\n\t\turi: vscode.Uri | undefined,\n\t) {\n\t\tif (id.includes(TestIdPathParts.Delimiter)) {\n\t\t\tthrow new Error(\n\t\t\t\t`Test IDs may not include the ${JSON.stringify(id)} symbol`,\n\t\t\t);\n\t\t}\n\n\t\tconst api = createPrivateApiFor(this, controllerId);\n\t\tObject.defineProperties(this, {\n\t\t\tid: {\n\t\t\t\tvalue: id,\n\t\t\t\tenumerable: true,\n\t\t\t\twritable: false,\n\t\t\t},\n\t\t\turi: {\n\t\t\t\tvalue: uri,\n\t\t\t\tenumerable: true,\n\t\t\t\twritable: false,\n\t\t\t},\n\t\t\tparent: {\n\t\t\t\tenumerable: false,\n\t\t\t\tget() {\n\t\t\t\t\treturn api.parent instanceof TestItemRootImpl\n\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t: api.parent;\n\t\t\t\t},\n\t\t\t},\n\t\t\tchildren: {\n\t\t\t\tvalue: createTestItemChildren(\n\t\t\t\t\tapi,\n\t\t\t\t\tgetPrivateApiFor,\n\t\t\t\t\tTestItemImpl,\n\t\t\t\t),\n\t\t\t\tenumerable: true,\n\t\t\t\twritable: false,\n\t\t\t},\n\t\t\t...makePropDescriptors(api, label),\n\t\t});\n\t}\n}\n\nexport class TestItemRootImpl extends TestItemImpl {\n\tpublic readonly _isRoot = true;\n\n\tconstructor(controllerId: string, label: string) {\n\t\tsuper(controllerId, controllerId, label, undefined);\n\t}\n}\n\nexport class ExtHostTestItemCollection extends TestItemCollection<TestItemImpl> {\n\tconstructor(\n\t\tcontrollerId: string,\n\t\tcontrollerLabel: string,\n\t\teditors: ExtHostDocumentsAndEditors,\n\t) {\n\t\tsuper({\n\t\t\tcontrollerId,\n\t\t\tgetDocumentVersion: (uri) =>\n\t\t\t\turi && editors.getDocument(uri)?.version,\n\t\t\tgetApiFor: getPrivateApiFor as (\n\t\t\t\timpl: TestItemImpl,\n\t\t\t) => ITestItemApi<TestItemImpl>,\n\t\t\tgetChildren: (item) =>\n\t\t\t\titem.children as ITestChildrenLike<TestItemImpl>,\n\t\t\troot: new TestItemRootImpl(controllerId, controllerLabel),\n\t\t\ttoITestItem: Convert.TestItem.from,\n\t\t});\n\t}\n}\n"],
  "mappings": "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",
  "names": ["label"]
}
