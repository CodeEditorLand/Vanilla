{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostSCM.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/* eslint-disable local/code-no-native-private */\n\nimport { URI, UriComponents } from '../../../base/common/uri.js';\nimport { Event, Emitter } from '../../../base/common/event.js';\nimport { debounce } from '../../../base/common/decorators.js';\nimport { DisposableStore, IDisposable, MutableDisposable } from '../../../base/common/lifecycle.js';\nimport { asPromise } from '../../../base/common/async.js';\nimport { ExtHostCommands } from './extHostCommands.js';\nimport { MainContext, MainThreadSCMShape, SCMRawResource, SCMRawResourceSplice, SCMRawResourceSplices, IMainContext, ExtHostSCMShape, ICommandDto, MainThreadTelemetryShape, SCMGroupFeatures, SCMHistoryItemDto, SCMHistoryItemChangeDto, SCMHistoryItemRefDto } from './extHost.protocol.js';\nimport { sortedDiff, equals } from '../../../base/common/arrays.js';\nimport { comparePaths } from '../../../base/common/comparers.js';\nimport type * as vscode from 'vscode';\nimport { ISplice } from '../../../base/common/sequence.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { ExtensionIdentifierMap, IExtensionDescription } from '../../../platform/extensions/common/extensions.js';\nimport { MarshalledId } from '../../../base/common/marshallingIds.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { IMarkdownString } from '../../../base/common/htmlContent.js';\nimport { MarkdownString } from './extHostTypeConverters.js';\nimport { checkProposedApiEnabled, isProposedApiEnabled } from '../../services/extensions/common/extensions.js';\nimport { ExtHostDocuments } from './extHostDocuments.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { isLinux } from '../../../base/common/platform.js';\n\ntype ProviderHandle = number;\ntype GroupHandle = number;\ntype ResourceStateHandle = number;\n\nfunction isUri(thing: any): thing is vscode.Uri {\n\treturn thing instanceof URI;\n}\n\nfunction uriEquals(a: vscode.Uri, b: vscode.Uri): boolean {\n\tif (a.scheme === Schemas.file && b.scheme === Schemas.file && isLinux) {\n\t\treturn a.toString() === b.toString();\n\t}\n\n\treturn a.toString().toLowerCase() === b.toString().toLowerCase();\n}\n\nfunction getIconResource(decorations?: vscode.SourceControlResourceThemableDecorations): UriComponents | ThemeIcon | undefined {\n\tif (!decorations) {\n\t\treturn undefined;\n\t} else if (typeof decorations.iconPath === 'string') {\n\t\treturn URI.file(decorations.iconPath);\n\t} else if (URI.isUri(decorations.iconPath)) {\n\t\treturn decorations.iconPath;\n\t} else if (ThemeIcon.isThemeIcon(decorations.iconPath)) {\n\t\treturn decorations.iconPath;\n\t} else {\n\t\treturn undefined;\n\t}\n}\n\nfunction getHistoryItemIconDto(icon: vscode.Uri | { light: vscode.Uri; dark: vscode.Uri } | vscode.ThemeIcon | undefined): UriComponents | { light: UriComponents; dark: UriComponents } | ThemeIcon | undefined {\n\tif (!icon) {\n\t\treturn undefined;\n\t} else if (URI.isUri(icon)) {\n\t\treturn icon;\n\t} else if (ThemeIcon.isThemeIcon(icon)) {\n\t\treturn icon;\n\t} else {\n\t\tconst iconDto = icon as { light: URI; dark: URI };\n\t\treturn { light: iconDto.light, dark: iconDto.dark };\n\t}\n}\n\nfunction toSCMHistoryItemDto(historyItem: vscode.SourceControlHistoryItem): SCMHistoryItemDto {\n\tconst references = historyItem.references?.map(r => ({\n\t\t...r, icon: getHistoryItemIconDto(r.icon)\n\t}));\n\n\treturn { ...historyItem, references };\n}\n\nfunction toSCMHistoryItemRefDto(historyItemRef?: vscode.SourceControlHistoryItemRef): SCMHistoryItemRefDto | undefined {\n\treturn historyItemRef ? { ...historyItemRef, icon: getHistoryItemIconDto(historyItemRef.icon) } : undefined;\n}\n\nfunction compareResourceThemableDecorations(a: vscode.SourceControlResourceThemableDecorations, b: vscode.SourceControlResourceThemableDecorations): number {\n\tif (!a.iconPath && !b.iconPath) {\n\t\treturn 0;\n\t} else if (!a.iconPath) {\n\t\treturn -1;\n\t} else if (!b.iconPath) {\n\t\treturn 1;\n\t}\n\n\tconst aPath = typeof a.iconPath === 'string' ? a.iconPath : URI.isUri(a.iconPath) ? a.iconPath.fsPath : (a.iconPath as vscode.ThemeIcon).id;\n\tconst bPath = typeof b.iconPath === 'string' ? b.iconPath : URI.isUri(b.iconPath) ? b.iconPath.fsPath : (b.iconPath as vscode.ThemeIcon).id;\n\treturn comparePaths(aPath, bPath);\n}\n\nfunction compareResourceStatesDecorations(a: vscode.SourceControlResourceDecorations, b: vscode.SourceControlResourceDecorations): number {\n\tlet result = 0;\n\n\tif (a.strikeThrough !== b.strikeThrough) {\n\t\treturn a.strikeThrough ? 1 : -1;\n\t}\n\n\tif (a.faded !== b.faded) {\n\t\treturn a.faded ? 1 : -1;\n\t}\n\n\tif (a.tooltip !== b.tooltip) {\n\t\treturn (a.tooltip || '').localeCompare(b.tooltip || '');\n\t}\n\n\tresult = compareResourceThemableDecorations(a, b);\n\n\tif (result !== 0) {\n\t\treturn result;\n\t}\n\n\tif (a.light && b.light) {\n\t\tresult = compareResourceThemableDecorations(a.light, b.light);\n\t} else if (a.light) {\n\t\treturn 1;\n\t} else if (b.light) {\n\t\treturn -1;\n\t}\n\n\tif (result !== 0) {\n\t\treturn result;\n\t}\n\n\tif (a.dark && b.dark) {\n\t\tresult = compareResourceThemableDecorations(a.dark, b.dark);\n\t} else if (a.dark) {\n\t\treturn 1;\n\t} else if (b.dark) {\n\t\treturn -1;\n\t}\n\n\treturn result;\n}\n\nfunction compareCommands(a: vscode.Command, b: vscode.Command): number {\n\tif (a.command !== b.command) {\n\t\treturn a.command < b.command ? -1 : 1;\n\t}\n\n\tif (a.title !== b.title) {\n\t\treturn a.title < b.title ? -1 : 1;\n\t}\n\n\tif (a.tooltip !== b.tooltip) {\n\t\tif (a.tooltip !== undefined && b.tooltip !== undefined) {\n\t\t\treturn a.tooltip < b.tooltip ? -1 : 1;\n\t\t} else if (a.tooltip !== undefined) {\n\t\t\treturn 1;\n\t\t} else if (b.tooltip !== undefined) {\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\tif (a.arguments === b.arguments) {\n\t\treturn 0;\n\t} else if (!a.arguments) {\n\t\treturn -1;\n\t} else if (!b.arguments) {\n\t\treturn 1;\n\t} else if (a.arguments.length !== b.arguments.length) {\n\t\treturn a.arguments.length - b.arguments.length;\n\t}\n\n\tfor (let i = 0; i < a.arguments.length; i++) {\n\t\tconst aArg = a.arguments[i];\n\t\tconst bArg = b.arguments[i];\n\n\t\tif (aArg === bArg) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (isUri(aArg) && isUri(bArg) && uriEquals(aArg, bArg)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\treturn aArg < bArg ? -1 : 1;\n\t}\n\n\treturn 0;\n}\n\nfunction compareResourceStates(a: vscode.SourceControlResourceState, b: vscode.SourceControlResourceState): number {\n\tlet result = comparePaths(a.resourceUri.fsPath, b.resourceUri.fsPath, true);\n\n\tif (result !== 0) {\n\t\treturn result;\n\t}\n\n\tif (a.command && b.command) {\n\t\tresult = compareCommands(a.command, b.command);\n\t} else if (a.command) {\n\t\treturn 1;\n\t} else if (b.command) {\n\t\treturn -1;\n\t}\n\n\tif (result !== 0) {\n\t\treturn result;\n\t}\n\n\tif (a.decorations && b.decorations) {\n\t\tresult = compareResourceStatesDecorations(a.decorations, b.decorations);\n\t} else if (a.decorations) {\n\t\treturn 1;\n\t} else if (b.decorations) {\n\t\treturn -1;\n\t}\n\n\tif (result !== 0) {\n\t\treturn result;\n\t}\n\n\tif (a.multiFileDiffEditorModifiedUri && b.multiFileDiffEditorModifiedUri) {\n\t\tresult = comparePaths(a.multiFileDiffEditorModifiedUri.fsPath, b.multiFileDiffEditorModifiedUri.fsPath, true);\n\t} else if (a.multiFileDiffEditorModifiedUri) {\n\t\treturn 1;\n\t} else if (b.multiFileDiffEditorModifiedUri) {\n\t\treturn -1;\n\t}\n\n\tif (result !== 0) {\n\t\treturn result;\n\t}\n\n\tif (a.multiDiffEditorOriginalUri && b.multiDiffEditorOriginalUri) {\n\t\tresult = comparePaths(a.multiDiffEditorOriginalUri.fsPath, b.multiDiffEditorOriginalUri.fsPath, true);\n\t} else if (a.multiDiffEditorOriginalUri) {\n\t\treturn 1;\n\t} else if (b.multiDiffEditorOriginalUri) {\n\t\treturn -1;\n\t}\n\n\treturn result;\n}\n\nfunction compareArgs(a: any[], b: any[]): boolean {\n\tfor (let i = 0; i < a.length; i++) {\n\t\tif (a[i] !== b[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction commandEquals(a: vscode.Command, b: vscode.Command): boolean {\n\treturn a.command === b.command\n\t\t&& a.title === b.title\n\t\t&& a.tooltip === b.tooltip\n\t\t&& (a.arguments && b.arguments ? compareArgs(a.arguments, b.arguments) : a.arguments === b.arguments);\n}\n\nfunction commandListEquals(a: readonly vscode.Command[], b: readonly vscode.Command[]): boolean {\n\treturn equals(a, b, commandEquals);\n}\n\nexport interface IValidateInput {\n\t(value: string, cursorPosition: number): vscode.ProviderResult<vscode.SourceControlInputBoxValidation | undefined | null>;\n}\n\nexport class ExtHostSCMInputBox implements vscode.SourceControlInputBox {\n\n\t#proxy: MainThreadSCMShape;\n\t#extHostDocuments: ExtHostDocuments;\n\n\tprivate _value: string = '';\n\n\tget value(): string {\n\t\treturn this._value;\n\t}\n\n\tset value(value: string) {\n\t\tvalue = value ?? '';\n\t\tthis.#proxy.$setInputBoxValue(this._sourceControlHandle, value);\n\t\tthis.updateValue(value);\n\t}\n\n\tprivate readonly _onDidChange = new Emitter<string>();\n\n\tget onDidChange(): Event<string> {\n\t\treturn this._onDidChange.event;\n\t}\n\n\tprivate _placeholder: string = '';\n\n\tget placeholder(): string {\n\t\treturn this._placeholder;\n\t}\n\n\tset placeholder(placeholder: string) {\n\t\tthis.#proxy.$setInputBoxPlaceholder(this._sourceControlHandle, placeholder);\n\t\tthis._placeholder = placeholder;\n\t}\n\n\tprivate _validateInput: IValidateInput | undefined;\n\n\tget validateInput(): IValidateInput | undefined {\n\t\tcheckProposedApiEnabled(this._extension, 'scmValidation');\n\n\t\treturn this._validateInput;\n\t}\n\n\tset validateInput(fn: IValidateInput | undefined) {\n\t\tcheckProposedApiEnabled(this._extension, 'scmValidation');\n\n\t\tif (fn && typeof fn !== 'function') {\n\t\t\tthrow new Error(`[${this._extension.identifier.value}]: Invalid SCM input box validation function`);\n\t\t}\n\n\t\tthis._validateInput = fn;\n\t\tthis.#proxy.$setValidationProviderIsEnabled(this._sourceControlHandle, !!fn);\n\t}\n\n\tprivate _enabled: boolean = true;\n\n\tget enabled(): boolean {\n\t\treturn this._enabled;\n\t}\n\n\tset enabled(enabled: boolean) {\n\t\tenabled = !!enabled;\n\n\t\tif (this._enabled === enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._enabled = enabled;\n\t\tthis.#proxy.$setInputBoxEnablement(this._sourceControlHandle, enabled);\n\t}\n\n\tprivate _visible: boolean = true;\n\n\tget visible(): boolean {\n\t\treturn this._visible;\n\t}\n\n\tset visible(visible: boolean) {\n\t\tvisible = !!visible;\n\n\t\tif (this._visible === visible) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._visible = visible;\n\t\tthis.#proxy.$setInputBoxVisibility(this._sourceControlHandle, visible);\n\t}\n\n\tget document(): vscode.TextDocument {\n\t\tcheckProposedApiEnabled(this._extension, 'scmTextDocument');\n\n\t\treturn this.#extHostDocuments.getDocument(this._documentUri);\n\t}\n\n\tconstructor(private _extension: IExtensionDescription, _extHostDocuments: ExtHostDocuments, proxy: MainThreadSCMShape, private _sourceControlHandle: number, private _documentUri: URI) {\n\t\tthis.#extHostDocuments = _extHostDocuments;\n\t\tthis.#proxy = proxy;\n\t}\n\n\tshowValidationMessage(message: string | vscode.MarkdownString, type: vscode.SourceControlInputBoxValidationType) {\n\t\tcheckProposedApiEnabled(this._extension, 'scmValidation');\n\n\t\tthis.#proxy.$showValidationMessage(this._sourceControlHandle, message, type as any);\n\t}\n\n\t$onInputBoxValueChange(value: string): void {\n\t\tthis.updateValue(value);\n\t}\n\n\tprivate updateValue(value: string): void {\n\t\tthis._value = value;\n\t\tthis._onDidChange.fire(value);\n\t}\n}\n\nclass ExtHostSourceControlResourceGroup implements vscode.SourceControlResourceGroup {\n\n\tprivate static _handlePool: number = 0;\n\tprivate _resourceHandlePool: number = 0;\n\tprivate _resourceStates: vscode.SourceControlResourceState[] = [];\n\n\tprivate _resourceStatesMap = new Map<ResourceStateHandle, vscode.SourceControlResourceState>();\n\tprivate _resourceStatesCommandsMap = new Map<ResourceStateHandle, vscode.Command>();\n\tprivate _resourceStatesDisposablesMap = new Map<ResourceStateHandle, IDisposable>();\n\n\tprivate readonly _onDidUpdateResourceStates = new Emitter<void>();\n\treadonly onDidUpdateResourceStates = this._onDidUpdateResourceStates.event;\n\n\tprivate _disposed = false;\n\tget disposed(): boolean { return this._disposed; }\n\tprivate readonly _onDidDispose = new Emitter<void>();\n\treadonly onDidDispose = this._onDidDispose.event;\n\n\tprivate _handlesSnapshot: number[] = [];\n\tprivate _resourceSnapshot: vscode.SourceControlResourceState[] = [];\n\n\tget id(): string { return this._id; }\n\n\tget label(): string { return this._label; }\n\tset label(label: string) {\n\t\tthis._label = label;\n\t\tthis._proxy.$updateGroupLabel(this._sourceControlHandle, this.handle, label);\n\t}\n\n\tprivate _hideWhenEmpty: boolean | undefined = undefined;\n\tget hideWhenEmpty(): boolean | undefined { return this._hideWhenEmpty; }\n\tset hideWhenEmpty(hideWhenEmpty: boolean | undefined) {\n\t\tthis._hideWhenEmpty = hideWhenEmpty;\n\t\tthis._proxy.$updateGroup(this._sourceControlHandle, this.handle, this.features);\n\t}\n\n\tget features(): SCMGroupFeatures {\n\t\treturn {\n\t\t\thideWhenEmpty: this.hideWhenEmpty\n\t\t};\n\t}\n\n\tget resourceStates(): vscode.SourceControlResourceState[] { return [...this._resourceStates]; }\n\tset resourceStates(resources: vscode.SourceControlResourceState[]) {\n\t\tthis._resourceStates = [...resources];\n\t\tthis._onDidUpdateResourceStates.fire();\n\t}\n\n\treadonly handle = ExtHostSourceControlResourceGroup._handlePool++;\n\n\tconstructor(\n\t\tprivate _proxy: MainThreadSCMShape,\n\t\tprivate _commands: ExtHostCommands,\n\t\tprivate _sourceControlHandle: number,\n\t\tprivate _id: string,\n\t\tprivate _label: string,\n\t\tpublic readonly multiDiffEditorEnableViewChanges: boolean,\n\t\tprivate readonly _extension: IExtensionDescription,\n\t) { }\n\n\tgetResourceState(handle: number): vscode.SourceControlResourceState | undefined {\n\t\treturn this._resourceStatesMap.get(handle);\n\t}\n\n\t$executeResourceCommand(handle: number, preserveFocus: boolean): Promise<void> {\n\t\tconst command = this._resourceStatesCommandsMap.get(handle);\n\n\t\tif (!command) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn asPromise(() => this._commands.executeCommand(command.command, ...(command.arguments || []), preserveFocus));\n\t}\n\n\t_takeResourceStateSnapshot(): SCMRawResourceSplice[] {\n\t\tconst snapshot = [...this._resourceStates].sort(compareResourceStates);\n\t\tconst diffs = sortedDiff(this._resourceSnapshot, snapshot, compareResourceStates);\n\n\t\tconst splices = diffs.map<ISplice<{ rawResource: SCMRawResource; handle: number }>>(diff => {\n\t\t\tconst toInsert = diff.toInsert.map(r => {\n\t\t\t\tconst handle = this._resourceHandlePool++;\n\t\t\t\tthis._resourceStatesMap.set(handle, r);\n\n\t\t\t\tconst sourceUri = r.resourceUri;\n\n\t\t\t\tlet command: ICommandDto | undefined;\n\t\t\t\tif (r.command) {\n\t\t\t\t\tif (r.command.command === 'vscode.open' || r.command.command === 'vscode.diff' || r.command.command === 'vscode.changes') {\n\t\t\t\t\t\tconst disposables = new DisposableStore();\n\t\t\t\t\t\tcommand = this._commands.converter.toInternal(r.command, disposables);\n\t\t\t\t\t\tthis._resourceStatesDisposablesMap.set(handle, disposables);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._resourceStatesCommandsMap.set(handle, r.command);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst hasScmMultiDiffEditorProposalEnabled = isProposedApiEnabled(this._extension, 'scmMultiDiffEditor');\n\t\t\t\tconst multiFileDiffEditorOriginalUri = hasScmMultiDiffEditorProposalEnabled ? r.multiDiffEditorOriginalUri : undefined;\n\t\t\t\tconst multiFileDiffEditorModifiedUri = hasScmMultiDiffEditorProposalEnabled ? r.multiFileDiffEditorModifiedUri : undefined;\n\n\t\t\t\tconst icon = getIconResource(r.decorations);\n\t\t\t\tconst lightIcon = r.decorations && getIconResource(r.decorations.light) || icon;\n\t\t\t\tconst darkIcon = r.decorations && getIconResource(r.decorations.dark) || icon;\n\t\t\t\tconst icons: SCMRawResource[2] = [lightIcon, darkIcon];\n\n\t\t\t\tconst tooltip = (r.decorations && r.decorations.tooltip) || '';\n\t\t\t\tconst strikeThrough = r.decorations && !!r.decorations.strikeThrough;\n\t\t\t\tconst faded = r.decorations && !!r.decorations.faded;\n\t\t\t\tconst contextValue = r.contextValue || '';\n\n\t\t\t\tconst rawResource = [handle, sourceUri, icons, tooltip, strikeThrough, faded, contextValue, command, multiFileDiffEditorOriginalUri, multiFileDiffEditorModifiedUri] as SCMRawResource;\n\n\t\t\t\treturn { rawResource, handle };\n\t\t\t});\n\n\t\t\treturn { start: diff.start, deleteCount: diff.deleteCount, toInsert };\n\t\t});\n\n\t\tconst rawResourceSplices = splices\n\t\t\t.map(({ start, deleteCount, toInsert }) => [start, deleteCount, toInsert.map(i => i.rawResource)] as SCMRawResourceSplice);\n\n\t\tconst reverseSplices = splices.reverse();\n\n\t\tfor (const { start, deleteCount, toInsert } of reverseSplices) {\n\t\t\tconst handles = toInsert.map(i => i.handle);\n\t\t\tconst handlesToDelete = this._handlesSnapshot.splice(start, deleteCount, ...handles);\n\n\t\t\tfor (const handle of handlesToDelete) {\n\t\t\t\tthis._resourceStatesMap.delete(handle);\n\t\t\t\tthis._resourceStatesCommandsMap.delete(handle);\n\t\t\t\tthis._resourceStatesDisposablesMap.get(handle)?.dispose();\n\t\t\t\tthis._resourceStatesDisposablesMap.delete(handle);\n\t\t\t}\n\t\t}\n\n\t\tthis._resourceSnapshot = snapshot;\n\t\treturn rawResourceSplices;\n\t}\n\n\tdispose(): void {\n\t\tthis._disposed = true;\n\t\tthis._onDidDispose.fire();\n\t}\n}\n\nclass ExtHostSourceControl implements vscode.SourceControl {\n\n\tprivate static _handlePool: number = 0;\n\n\t#proxy: MainThreadSCMShape;\n\n\tprivate _groups: Map<GroupHandle, ExtHostSourceControlResourceGroup> = new Map<GroupHandle, ExtHostSourceControlResourceGroup>();\n\n\tget id(): string {\n\t\treturn this._id;\n\t}\n\n\tget label(): string {\n\t\treturn this._label;\n\t}\n\n\tget rootUri(): vscode.Uri | undefined {\n\t\treturn this._rootUri;\n\t}\n\n\tprivate _inputBox: ExtHostSCMInputBox;\n\tget inputBox(): ExtHostSCMInputBox { return this._inputBox; }\n\n\tprivate _count: number | undefined = undefined;\n\n\tget count(): number | undefined {\n\t\treturn this._count;\n\t}\n\n\tset count(count: number | undefined) {\n\t\tif (this._count === count) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._count = count;\n\t\tthis.#proxy.$updateSourceControl(this.handle, { count });\n\t}\n\n\tprivate _quickDiffProvider: vscode.QuickDiffProvider | undefined = undefined;\n\n\tget quickDiffProvider(): vscode.QuickDiffProvider | undefined {\n\t\treturn this._quickDiffProvider;\n\t}\n\n\tset quickDiffProvider(quickDiffProvider: vscode.QuickDiffProvider | undefined) {\n\t\tthis._quickDiffProvider = quickDiffProvider;\n\t\tlet quickDiffLabel = undefined;\n\t\tif (isProposedApiEnabled(this._extension, 'quickDiffProvider')) {\n\t\t\tquickDiffLabel = quickDiffProvider?.label;\n\t\t}\n\t\tthis.#proxy.$updateSourceControl(this.handle, { hasQuickDiffProvider: !!quickDiffProvider, quickDiffLabel });\n\t}\n\n\tprivate _historyProvider: vscode.SourceControlHistoryProvider | undefined;\n\tprivate readonly _historyProviderDisposable = new MutableDisposable<DisposableStore>();\n\n\tget historyProvider(): vscode.SourceControlHistoryProvider | undefined {\n\t\tcheckProposedApiEnabled(this._extension, 'scmHistoryProvider');\n\t\treturn this._historyProvider;\n\t}\n\n\tset historyProvider(historyProvider: vscode.SourceControlHistoryProvider | undefined) {\n\t\tcheckProposedApiEnabled(this._extension, 'scmHistoryProvider');\n\n\t\tthis._historyProvider = historyProvider;\n\t\tthis._historyProviderDisposable.value = new DisposableStore();\n\n\t\tthis.#proxy.$updateSourceControl(this.handle, { hasHistoryProvider: !!historyProvider });\n\n\t\tif (historyProvider) {\n\t\t\tthis._historyProviderDisposable.value.add(historyProvider.onDidChangeCurrentHistoryItemRefs(() => {\n\t\t\t\tconst historyItemRef = toSCMHistoryItemRefDto(historyProvider?.currentHistoryItemRef);\n\t\t\t\tconst historyItemRemoteRef = toSCMHistoryItemRefDto(historyProvider?.currentHistoryItemRemoteRef);\n\t\t\t\tconst historyItemBaseRef = toSCMHistoryItemRefDto(historyProvider?.currentHistoryItemBaseRef);\n\n\t\t\t\tthis.#proxy.$onDidChangeHistoryProviderCurrentHistoryItemRefs(this.handle, historyItemRef, historyItemRemoteRef, historyItemBaseRef);\n\t\t\t}));\n\t\t\tthis._historyProviderDisposable.value.add(historyProvider.onDidChangeHistoryItemRefs((e) => {\n\t\t\t\tif (e.added.length === 0 && e.modified.length === 0 && e.removed.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst added = e.added.map(ref => ({ ...ref, icon: getHistoryItemIconDto(ref.icon) }));\n\t\t\t\tconst modified = e.modified.map(ref => ({ ...ref, icon: getHistoryItemIconDto(ref.icon) }));\n\t\t\t\tconst removed = e.removed.map(ref => ({ ...ref, icon: getHistoryItemIconDto(ref.icon) }));\n\n\t\t\t\tthis.#proxy.$onDidChangeHistoryProviderHistoryItemRefs(this.handle, { added, modified, removed });\n\t\t\t}));\n\t\t}\n\t}\n\n\tprivate _commitTemplate: string | undefined = undefined;\n\n\tget commitTemplate(): string | undefined {\n\t\treturn this._commitTemplate;\n\t}\n\n\tset commitTemplate(commitTemplate: string | undefined) {\n\t\tif (commitTemplate === this._commitTemplate) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._commitTemplate = commitTemplate;\n\t\tthis.#proxy.$updateSourceControl(this.handle, { commitTemplate });\n\t}\n\n\tprivate readonly _acceptInputDisposables = new MutableDisposable<DisposableStore>();\n\tprivate _acceptInputCommand: vscode.Command | undefined = undefined;\n\n\tget acceptInputCommand(): vscode.Command | undefined {\n\t\treturn this._acceptInputCommand;\n\t}\n\n\tset acceptInputCommand(acceptInputCommand: vscode.Command | undefined) {\n\t\tthis._acceptInputDisposables.value = new DisposableStore();\n\n\t\tthis._acceptInputCommand = acceptInputCommand;\n\n\t\tconst internal = this._commands.converter.toInternal(acceptInputCommand, this._acceptInputDisposables.value);\n\t\tthis.#proxy.$updateSourceControl(this.handle, { acceptInputCommand: internal });\n\t}\n\n\tprivate readonly _actionButtonDisposables = new MutableDisposable<DisposableStore>();\n\tprivate _actionButton: vscode.SourceControlActionButton | undefined;\n\tget actionButton(): vscode.SourceControlActionButton | undefined {\n\t\tcheckProposedApiEnabled(this._extension, 'scmActionButton');\n\t\treturn this._actionButton;\n\t}\n\tset actionButton(actionButton: vscode.SourceControlActionButton | undefined) {\n\t\tcheckProposedApiEnabled(this._extension, 'scmActionButton');\n\t\tthis._actionButtonDisposables.value = new DisposableStore();\n\n\t\tthis._actionButton = actionButton;\n\n\t\tconst internal = actionButton !== undefined ?\n\t\t\t{\n\t\t\t\tcommand: this._commands.converter.toInternal(actionButton.command, this._actionButtonDisposables.value),\n\t\t\t\tsecondaryCommands: actionButton.secondaryCommands?.map(commandGroup => {\n\t\t\t\t\treturn commandGroup.map(command => this._commands.converter.toInternal(command, this._actionButtonDisposables.value!));\n\t\t\t\t}),\n\t\t\t\tdescription: actionButton.description,\n\t\t\t\tenabled: actionButton.enabled\n\t\t\t} : undefined;\n\t\tthis.#proxy.$updateSourceControl(this.handle, { actionButton: internal ?? null });\n\t}\n\n\n\tprivate readonly _statusBarDisposables = new MutableDisposable<DisposableStore>();\n\tprivate _statusBarCommands: vscode.Command[] | undefined = undefined;\n\n\tget statusBarCommands(): vscode.Command[] | undefined {\n\t\treturn this._statusBarCommands;\n\t}\n\n\tset statusBarCommands(statusBarCommands: vscode.Command[] | undefined) {\n\t\tif (this._statusBarCommands && statusBarCommands && commandListEquals(this._statusBarCommands, statusBarCommands)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._statusBarDisposables.value = new DisposableStore();\n\n\t\tthis._statusBarCommands = statusBarCommands;\n\n\t\tconst internal = (statusBarCommands || []).map(c => this._commands.converter.toInternal(c, this._statusBarDisposables.value!)) as ICommandDto[];\n\t\tthis.#proxy.$updateSourceControl(this.handle, { statusBarCommands: internal });\n\t}\n\n\tprivate _selected: boolean = false;\n\n\tget selected(): boolean {\n\t\treturn this._selected;\n\t}\n\n\tprivate readonly _onDidChangeSelection = new Emitter<boolean>();\n\treadonly onDidChangeSelection = this._onDidChangeSelection.event;\n\n\tprivate handle: number = ExtHostSourceControl._handlePool++;\n\n\tconstructor(\n\t\tprivate readonly _extension: IExtensionDescription,\n\t\t_extHostDocuments: ExtHostDocuments,\n\t\tproxy: MainThreadSCMShape,\n\t\tprivate _commands: ExtHostCommands,\n\t\tprivate _id: string,\n\t\tprivate _label: string,\n\t\tprivate _rootUri?: vscode.Uri\n\t) {\n\t\tthis.#proxy = proxy;\n\n\t\tconst inputBoxDocumentUri = URI.from({\n\t\t\tscheme: Schemas.vscodeSourceControl,\n\t\t\tpath: `${_id}/scm${this.handle}/input`,\n\t\t\tquery: _rootUri ? `rootUri=${encodeURIComponent(_rootUri.toString())}` : undefined\n\t\t});\n\n\t\tthis._inputBox = new ExtHostSCMInputBox(_extension, _extHostDocuments, this.#proxy, this.handle, inputBoxDocumentUri);\n\t\tthis.#proxy.$registerSourceControl(this.handle, _id, _label, _rootUri, inputBoxDocumentUri);\n\t}\n\n\tprivate createdResourceGroups = new Map<ExtHostSourceControlResourceGroup, IDisposable>();\n\tprivate updatedResourceGroups = new Set<ExtHostSourceControlResourceGroup>();\n\n\tcreateResourceGroup(id: string, label: string, options?: { multiDiffEditorEnableViewChanges?: boolean }): ExtHostSourceControlResourceGroup {\n\t\tconst multiDiffEditorEnableViewChanges = isProposedApiEnabled(this._extension, 'scmMultiDiffEditor') && options?.multiDiffEditorEnableViewChanges === true;\n\t\tconst group = new ExtHostSourceControlResourceGroup(this.#proxy, this._commands, this.handle, id, label, multiDiffEditorEnableViewChanges, this._extension);\n\t\tconst disposable = Event.once(group.onDidDispose)(() => this.createdResourceGroups.delete(group));\n\t\tthis.createdResourceGroups.set(group, disposable);\n\t\tthis.eventuallyAddResourceGroups();\n\t\treturn group;\n\t}\n\n\t@debounce(100)\n\teventuallyAddResourceGroups(): void {\n\t\tconst groups: [number /*handle*/, string /*id*/, string /*label*/, SCMGroupFeatures, /*multiDiffEditorEnableViewChanges*/ boolean][] = [];\n\t\tconst splices: SCMRawResourceSplices[] = [];\n\n\t\tfor (const [group, disposable] of this.createdResourceGroups) {\n\t\t\tdisposable.dispose();\n\n\t\t\tconst updateListener = group.onDidUpdateResourceStates(() => {\n\t\t\t\tthis.updatedResourceGroups.add(group);\n\t\t\t\tthis.eventuallyUpdateResourceStates();\n\t\t\t});\n\n\t\t\tEvent.once(group.onDidDispose)(() => {\n\t\t\t\tthis.updatedResourceGroups.delete(group);\n\t\t\t\tupdateListener.dispose();\n\t\t\t\tthis._groups.delete(group.handle);\n\t\t\t\tthis.#proxy.$unregisterGroup(this.handle, group.handle);\n\t\t\t});\n\n\t\t\tgroups.push([group.handle, group.id, group.label, group.features, group.multiDiffEditorEnableViewChanges]);\n\n\t\t\tconst snapshot = group._takeResourceStateSnapshot();\n\n\t\t\tif (snapshot.length > 0) {\n\t\t\t\tsplices.push([group.handle, snapshot]);\n\t\t\t}\n\n\t\t\tthis._groups.set(group.handle, group);\n\t\t}\n\n\t\tthis.#proxy.$registerGroups(this.handle, groups, splices);\n\t\tthis.createdResourceGroups.clear();\n\t}\n\n\t@debounce(100)\n\teventuallyUpdateResourceStates(): void {\n\t\tconst splices: SCMRawResourceSplices[] = [];\n\n\t\tthis.updatedResourceGroups.forEach(group => {\n\t\t\tconst snapshot = group._takeResourceStateSnapshot();\n\n\t\t\tif (snapshot.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsplices.push([group.handle, snapshot]);\n\t\t});\n\n\t\tif (splices.length > 0) {\n\t\t\tthis.#proxy.$spliceResourceStates(this.handle, splices);\n\t\t}\n\n\t\tthis.updatedResourceGroups.clear();\n\t}\n\n\tgetResourceGroup(handle: GroupHandle): ExtHostSourceControlResourceGroup | undefined {\n\t\treturn this._groups.get(handle);\n\t}\n\n\tsetSelectionState(selected: boolean): void {\n\t\tthis._selected = selected;\n\t\tthis._onDidChangeSelection.fire(selected);\n\t}\n\n\tdispose(): void {\n\t\tthis._acceptInputDisposables.dispose();\n\t\tthis._actionButtonDisposables.dispose();\n\t\tthis._statusBarDisposables.dispose();\n\n\t\tthis._groups.forEach(group => group.dispose());\n\t\tthis.#proxy.$unregisterSourceControl(this.handle);\n\t}\n}\n\nexport class ExtHostSCM implements ExtHostSCMShape {\n\n\tprivate static _handlePool: number = 0;\n\n\tprivate _proxy: MainThreadSCMShape;\n\tprivate readonly _telemetry: MainThreadTelemetryShape;\n\tprivate _sourceControls: Map<ProviderHandle, ExtHostSourceControl> = new Map<ProviderHandle, ExtHostSourceControl>();\n\tprivate _sourceControlsByExtension: ExtensionIdentifierMap<ExtHostSourceControl[]> = new ExtensionIdentifierMap<ExtHostSourceControl[]>();\n\n\tprivate readonly _onDidChangeActiveProvider = new Emitter<vscode.SourceControl>();\n\tget onDidChangeActiveProvider(): Event<vscode.SourceControl> { return this._onDidChangeActiveProvider.event; }\n\n\tprivate _selectedSourceControlHandle: number | undefined;\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\tprivate _commands: ExtHostCommands,\n\t\tprivate _extHostDocuments: ExtHostDocuments,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadSCM);\n\t\tthis._telemetry = mainContext.getProxy(MainContext.MainThreadTelemetry);\n\n\t\t_commands.registerArgumentProcessor({\n\t\t\tprocessArgument: arg => {\n\t\t\t\tif (arg && arg.$mid === MarshalledId.ScmResource) {\n\t\t\t\t\tconst sourceControl = this._sourceControls.get(arg.sourceControlHandle);\n\n\t\t\t\t\tif (!sourceControl) {\n\t\t\t\t\t\treturn arg;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst group = sourceControl.getResourceGroup(arg.groupHandle);\n\n\t\t\t\t\tif (!group) {\n\t\t\t\t\t\treturn arg;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn group.getResourceState(arg.handle);\n\t\t\t\t} else if (arg && arg.$mid === MarshalledId.ScmResourceGroup) {\n\t\t\t\t\tconst sourceControl = this._sourceControls.get(arg.sourceControlHandle);\n\n\t\t\t\t\tif (!sourceControl) {\n\t\t\t\t\t\treturn arg;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn sourceControl.getResourceGroup(arg.groupHandle);\n\t\t\t\t} else if (arg && arg.$mid === MarshalledId.ScmProvider) {\n\t\t\t\t\tconst sourceControl = this._sourceControls.get(arg.handle);\n\n\t\t\t\t\tif (!sourceControl) {\n\t\t\t\t\t\treturn arg;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn sourceControl;\n\t\t\t\t}\n\n\t\t\t\treturn arg;\n\t\t\t}\n\t\t});\n\t}\n\n\tcreateSourceControl(extension: IExtensionDescription, id: string, label: string, rootUri: vscode.Uri | undefined): vscode.SourceControl {\n\t\tthis.logService.trace('ExtHostSCM#createSourceControl', extension.identifier.value, id, label, rootUri);\n\n\t\ttype TEvent = { extensionId: string };\n\t\ttype TMeta = {\n\t\t\towner: 'joaomoreno';\n\t\t\textensionId: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'The ID of the extension contributing to the Source Control API.' };\n\t\t\tcomment: 'This is used to know what extensions contribute to the Source Control API.';\n\t\t};\n\t\tthis._telemetry.$publicLog2<TEvent, TMeta>('api/scm/createSourceControl', {\n\t\t\textensionId: extension.identifier.value,\n\t\t});\n\n\t\tconst handle = ExtHostSCM._handlePool++;\n\t\tconst sourceControl = new ExtHostSourceControl(extension, this._extHostDocuments, this._proxy, this._commands, id, label, rootUri);\n\t\tthis._sourceControls.set(handle, sourceControl);\n\n\t\tconst sourceControls = this._sourceControlsByExtension.get(extension.identifier) || [];\n\t\tsourceControls.push(sourceControl);\n\t\tthis._sourceControlsByExtension.set(extension.identifier, sourceControls);\n\n\t\treturn sourceControl;\n\t}\n\n\t// Deprecated\n\tgetLastInputBox(extension: IExtensionDescription): ExtHostSCMInputBox | undefined {\n\t\tthis.logService.trace('ExtHostSCM#getLastInputBox', extension.identifier.value);\n\n\t\tconst sourceControls = this._sourceControlsByExtension.get(extension.identifier);\n\t\tconst sourceControl = sourceControls && sourceControls[sourceControls.length - 1];\n\t\treturn sourceControl && sourceControl.inputBox;\n\t}\n\n\t$provideOriginalResource(sourceControlHandle: number, uriComponents: UriComponents, token: CancellationToken): Promise<UriComponents | null> {\n\t\tconst uri = URI.revive(uriComponents);\n\t\tthis.logService.trace('ExtHostSCM#$provideOriginalResource', sourceControlHandle, uri.toString());\n\n\t\tconst sourceControl = this._sourceControls.get(sourceControlHandle);\n\n\t\tif (!sourceControl || !sourceControl.quickDiffProvider || !sourceControl.quickDiffProvider.provideOriginalResource) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\treturn asPromise(() => sourceControl.quickDiffProvider!.provideOriginalResource!(uri, token))\n\t\t\t.then<UriComponents | null>(r => r || null);\n\t}\n\n\t$onInputBoxValueChange(sourceControlHandle: number, value: string): Promise<void> {\n\t\tthis.logService.trace('ExtHostSCM#$onInputBoxValueChange', sourceControlHandle);\n\n\t\tconst sourceControl = this._sourceControls.get(sourceControlHandle);\n\n\t\tif (!sourceControl) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tsourceControl.inputBox.$onInputBoxValueChange(value);\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\t$executeResourceCommand(sourceControlHandle: number, groupHandle: number, handle: number, preserveFocus: boolean): Promise<void> {\n\t\tthis.logService.trace('ExtHostSCM#$executeResourceCommand', sourceControlHandle, groupHandle, handle);\n\n\t\tconst sourceControl = this._sourceControls.get(sourceControlHandle);\n\n\t\tif (!sourceControl) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tconst group = sourceControl.getResourceGroup(groupHandle);\n\n\t\tif (!group) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn group.$executeResourceCommand(handle, preserveFocus);\n\t}\n\n\t$validateInput(sourceControlHandle: number, value: string, cursorPosition: number): Promise<[string | IMarkdownString, number] | undefined> {\n\t\tthis.logService.trace('ExtHostSCM#$validateInput', sourceControlHandle);\n\n\t\tconst sourceControl = this._sourceControls.get(sourceControlHandle);\n\n\t\tif (!sourceControl) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tif (!sourceControl.inputBox.validateInput) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn asPromise(() => sourceControl.inputBox.validateInput!(value, cursorPosition)).then(result => {\n\t\t\tif (!result) {\n\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t}\n\n\t\t\tconst message = MarkdownString.fromStrict(result.message);\n\t\t\tif (!message) {\n\t\t\t\treturn Promise.resolve(undefined);\n\t\t\t}\n\n\t\t\treturn Promise.resolve<[string | IMarkdownString, number]>([message, result.type]);\n\t\t});\n\t}\n\n\t$setSelectedSourceControl(selectedSourceControlHandle: number | undefined): Promise<void> {\n\t\tthis.logService.trace('ExtHostSCM#$setSelectedSourceControl', selectedSourceControlHandle);\n\n\t\tif (selectedSourceControlHandle !== undefined) {\n\t\t\tthis._sourceControls.get(selectedSourceControlHandle)?.setSelectionState(true);\n\t\t}\n\n\t\tif (this._selectedSourceControlHandle !== undefined) {\n\t\t\tthis._sourceControls.get(this._selectedSourceControlHandle)?.setSelectionState(false);\n\t\t}\n\n\t\tthis._selectedSourceControlHandle = selectedSourceControlHandle;\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tasync $resolveHistoryItemRefsCommonAncestor(sourceControlHandle: number, historyItemRefs: string[], token: CancellationToken): Promise<string | undefined> {\n\t\tconst historyProvider = this._sourceControls.get(sourceControlHandle)?.historyProvider;\n\t\treturn await historyProvider?.resolveHistoryItemRefsCommonAncestor(historyItemRefs, token) ?? undefined;\n\t}\n\n\tasync $provideHistoryItemRefs(sourceControlHandle: number, token: CancellationToken): Promise<SCMHistoryItemRefDto[] | undefined> {\n\t\tconst historyProvider = this._sourceControls.get(sourceControlHandle)?.historyProvider;\n\t\tconst historyItemRefs = await historyProvider?.provideHistoryItemRefs(token);\n\n\t\treturn historyItemRefs?.map(ref => ({ ...ref, icon: getHistoryItemIconDto(ref.icon) })) ?? undefined;\n\t}\n\n\tasync $provideHistoryItems(sourceControlHandle: number, options: any, token: CancellationToken): Promise<SCMHistoryItemDto[] | undefined> {\n\t\tconst historyProvider = this._sourceControls.get(sourceControlHandle)?.historyProvider;\n\t\tconst historyItems = await historyProvider?.provideHistoryItems(options, token);\n\n\t\treturn historyItems?.map(item => toSCMHistoryItemDto(item)) ?? undefined;\n\t}\n\n\tasync $provideHistoryItemChanges(sourceControlHandle: number, historyItemId: string, historyItemParentId: string | undefined, token: CancellationToken): Promise<SCMHistoryItemChangeDto[] | undefined> {\n\t\tconst historyProvider = this._sourceControls.get(sourceControlHandle)?.historyProvider;\n\t\treturn await historyProvider?.provideHistoryItemChanges(historyItemId, historyItemParentId, token) ?? undefined;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
