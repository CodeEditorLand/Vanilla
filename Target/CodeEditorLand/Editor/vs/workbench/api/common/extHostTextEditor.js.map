{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostTextEditor.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ok } from '../../../base/common/assert.js';\nimport { ReadonlyError, illegalArgument } from '../../../base/common/errors.js';\nimport { IdGenerator } from '../../../base/common/idGenerator.js';\nimport { TextEditorCursorStyle } from '../../../editor/common/config/editorOptions.js';\nimport { IRange } from '../../../editor/common/core/range.js';\nimport { ISingleEditOperation } from '../../../editor/common/core/editOperation.js';\nimport { IResolvedTextEditorConfiguration, ITextEditorConfigurationUpdate, MainThreadTextEditorsShape } from './extHost.protocol.js';\nimport * as TypeConverters from './extHostTypeConverters.js';\nimport { EndOfLine, Position, Range, Selection, SnippetString, TextEditorLineNumbersStyle, TextEditorRevealType } from './extHostTypes.js';\nimport type * as vscode from 'vscode';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { Lazy } from '../../../base/common/lazy.js';\nimport { IExtensionDescription } from '../../../platform/extensions/common/extensions.js';\n\nexport class TextEditorDecorationType {\n\n\tprivate static readonly _Keys = new IdGenerator('TextEditorDecorationType');\n\n\treadonly value: vscode.TextEditorDecorationType;\n\n\tconstructor(proxy: MainThreadTextEditorsShape, extension: IExtensionDescription, options: vscode.DecorationRenderOptions) {\n\t\tconst key = TextEditorDecorationType._Keys.nextId();\n\t\tproxy.$registerTextEditorDecorationType(extension.identifier, key, TypeConverters.DecorationRenderOptions.from(options));\n\t\tthis.value = Object.freeze({\n\t\t\tkey,\n\t\t\tdispose() {\n\t\t\t\tproxy.$removeTextEditorDecorationType(key);\n\t\t\t}\n\t\t});\n\t}\n\n}\n\nexport interface ITextEditOperation {\n\trange: vscode.Range;\n\ttext: string | null;\n\tforceMoveMarkers: boolean;\n}\n\nexport interface IEditData {\n\tdocumentVersionId: number;\n\tedits: ITextEditOperation[];\n\tsetEndOfLine: EndOfLine | undefined;\n\tundoStopBefore: boolean;\n\tundoStopAfter: boolean;\n}\n\nclass TextEditorEdit {\n\n\tprivate readonly _document: vscode.TextDocument;\n\tprivate readonly _documentVersionId: number;\n\tprivate readonly _undoStopBefore: boolean;\n\tprivate readonly _undoStopAfter: boolean;\n\tprivate _collectedEdits: ITextEditOperation[] = [];\n\tprivate _setEndOfLine: EndOfLine | undefined = undefined;\n\tprivate _finalized: boolean = false;\n\n\tconstructor(document: vscode.TextDocument, options: { undoStopBefore: boolean; undoStopAfter: boolean }) {\n\t\tthis._document = document;\n\t\tthis._documentVersionId = document.version;\n\t\tthis._undoStopBefore = options.undoStopBefore;\n\t\tthis._undoStopAfter = options.undoStopAfter;\n\t}\n\n\tfinalize(): IEditData {\n\t\tthis._finalized = true;\n\t\treturn {\n\t\t\tdocumentVersionId: this._documentVersionId,\n\t\t\tedits: this._collectedEdits,\n\t\t\tsetEndOfLine: this._setEndOfLine,\n\t\t\tundoStopBefore: this._undoStopBefore,\n\t\t\tundoStopAfter: this._undoStopAfter\n\t\t};\n\t}\n\n\tprivate _throwIfFinalized() {\n\t\tif (this._finalized) {\n\t\t\tthrow new Error('Edit is only valid while callback runs');\n\t\t}\n\t}\n\n\treplace(location: Position | Range | Selection, value: string): void {\n\t\tthis._throwIfFinalized();\n\t\tlet range: Range | null = null;\n\n\t\tif (location instanceof Position) {\n\t\t\trange = new Range(location, location);\n\t\t} else if (location instanceof Range) {\n\t\t\trange = location;\n\t\t} else {\n\t\t\tthrow new Error('Unrecognized location');\n\t\t}\n\n\t\tthis._pushEdit(range, value, false);\n\t}\n\n\tinsert(location: Position, value: string): void {\n\t\tthis._throwIfFinalized();\n\t\tthis._pushEdit(new Range(location, location), value, true);\n\t}\n\n\tdelete(location: Range | Selection): void {\n\t\tthis._throwIfFinalized();\n\t\tlet range: Range | null = null;\n\n\t\tif (location instanceof Range) {\n\t\t\trange = location;\n\t\t} else {\n\t\t\tthrow new Error('Unrecognized location');\n\t\t}\n\n\t\tthis._pushEdit(range, null, true);\n\t}\n\n\tprivate _pushEdit(range: Range, text: string | null, forceMoveMarkers: boolean): void {\n\t\tconst validRange = this._document.validateRange(range);\n\t\tthis._collectedEdits.push({\n\t\t\trange: validRange,\n\t\t\ttext: text,\n\t\t\tforceMoveMarkers: forceMoveMarkers\n\t\t});\n\t}\n\n\tsetEndOfLine(endOfLine: EndOfLine): void {\n\t\tthis._throwIfFinalized();\n\t\tif (endOfLine !== EndOfLine.LF && endOfLine !== EndOfLine.CRLF) {\n\t\t\tthrow illegalArgument('endOfLine');\n\t\t}\n\n\t\tthis._setEndOfLine = endOfLine;\n\t}\n}\n\nexport class ExtHostTextEditorOptions {\n\n\tprivate _proxy: MainThreadTextEditorsShape;\n\tprivate _id: string;\n\tprivate _logService: ILogService;\n\n\tprivate _tabSize!: number;\n\tprivate _indentSize!: number;\n\tprivate _originalIndentSize!: number | 'tabSize';\n\tprivate _insertSpaces!: boolean;\n\tprivate _cursorStyle!: TextEditorCursorStyle;\n\tprivate _lineNumbers!: TextEditorLineNumbersStyle;\n\n\treadonly value: vscode.TextEditorOptions;\n\n\tconstructor(proxy: MainThreadTextEditorsShape, id: string, source: IResolvedTextEditorConfiguration, logService: ILogService) {\n\t\tthis._proxy = proxy;\n\t\tthis._id = id;\n\t\tthis._accept(source);\n\t\tthis._logService = logService;\n\n\t\tconst that = this;\n\n\t\tthis.value = {\n\t\t\tget tabSize(): number | string {\n\t\t\t\treturn that._tabSize;\n\t\t\t},\n\t\t\tset tabSize(value: number | string) {\n\t\t\t\tthat._setTabSize(value);\n\t\t\t},\n\t\t\tget indentSize(): number | string {\n\t\t\t\treturn that._indentSize;\n\t\t\t},\n\t\t\tset indentSize(value: number | string) {\n\t\t\t\tthat._setIndentSize(value);\n\t\t\t},\n\t\t\tget insertSpaces(): boolean | string {\n\t\t\t\treturn that._insertSpaces;\n\t\t\t},\n\t\t\tset insertSpaces(value: boolean | string) {\n\t\t\t\tthat._setInsertSpaces(value);\n\t\t\t},\n\t\t\tget cursorStyle(): TextEditorCursorStyle {\n\t\t\t\treturn that._cursorStyle;\n\t\t\t},\n\t\t\tset cursorStyle(value: TextEditorCursorStyle) {\n\t\t\t\tthat._setCursorStyle(value);\n\t\t\t},\n\t\t\tget lineNumbers(): TextEditorLineNumbersStyle {\n\t\t\t\treturn that._lineNumbers;\n\t\t\t},\n\t\t\tset lineNumbers(value: TextEditorLineNumbersStyle) {\n\t\t\t\tthat._setLineNumbers(value);\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic _accept(source: IResolvedTextEditorConfiguration): void {\n\t\tthis._tabSize = source.tabSize;\n\t\tthis._indentSize = source.indentSize;\n\t\tthis._originalIndentSize = source.originalIndentSize;\n\t\tthis._insertSpaces = source.insertSpaces;\n\t\tthis._cursorStyle = source.cursorStyle;\n\t\tthis._lineNumbers = TypeConverters.TextEditorLineNumbersStyle.to(source.lineNumbers);\n\t}\n\n\t// --- internal: tabSize\n\n\tprivate _validateTabSize(value: number | string): number | 'auto' | null {\n\t\tif (value === 'auto') {\n\t\t\treturn 'auto';\n\t\t}\n\t\tif (typeof value === 'number') {\n\t\t\tconst r = Math.floor(value);\n\t\t\treturn (r > 0 ? r : null);\n\t\t}\n\t\tif (typeof value === 'string') {\n\t\t\tconst r = parseInt(value, 10);\n\t\t\tif (isNaN(r)) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn (r > 0 ? r : null);\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate _setTabSize(value: number | string) {\n\t\tconst tabSize = this._validateTabSize(value);\n\t\tif (tabSize === null) {\n\t\t\t// ignore invalid call\n\t\t\treturn;\n\t\t}\n\t\tif (typeof tabSize === 'number') {\n\t\t\tif (this._tabSize === tabSize) {\n\t\t\t\t// nothing to do\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// reflect the new tabSize value immediately\n\t\t\tthis._tabSize = tabSize;\n\t\t}\n\t\tthis._warnOnError('setTabSize', this._proxy.$trySetOptions(this._id, {\n\t\t\ttabSize: tabSize\n\t\t}));\n\t}\n\n\t// --- internal: indentSize\n\n\tprivate _validateIndentSize(value: number | string): number | 'tabSize' | null {\n\t\tif (value === 'tabSize') {\n\t\t\treturn 'tabSize';\n\t\t}\n\t\tif (typeof value === 'number') {\n\t\t\tconst r = Math.floor(value);\n\t\t\treturn (r > 0 ? r : null);\n\t\t}\n\t\tif (typeof value === 'string') {\n\t\t\tconst r = parseInt(value, 10);\n\t\t\tif (isNaN(r)) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn (r > 0 ? r : null);\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate _setIndentSize(value: number | string) {\n\t\tconst indentSize = this._validateIndentSize(value);\n\t\tif (indentSize === null) {\n\t\t\t// ignore invalid call\n\t\t\treturn;\n\t\t}\n\t\tif (typeof indentSize === 'number') {\n\t\t\tif (this._originalIndentSize === indentSize) {\n\t\t\t\t// nothing to do\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// reflect the new indentSize value immediately\n\t\t\tthis._indentSize = indentSize;\n\t\t\tthis._originalIndentSize = indentSize;\n\t\t}\n\t\tthis._warnOnError('setIndentSize', this._proxy.$trySetOptions(this._id, {\n\t\t\tindentSize: indentSize\n\t\t}));\n\t}\n\n\t// --- internal: insert spaces\n\n\tprivate _validateInsertSpaces(value: boolean | string): boolean | 'auto' {\n\t\tif (value === 'auto') {\n\t\t\treturn 'auto';\n\t\t}\n\t\treturn (value === 'false' ? false : Boolean(value));\n\t}\n\n\tprivate _setInsertSpaces(value: boolean | string) {\n\t\tconst insertSpaces = this._validateInsertSpaces(value);\n\t\tif (typeof insertSpaces === 'boolean') {\n\t\t\tif (this._insertSpaces === insertSpaces) {\n\t\t\t\t// nothing to do\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// reflect the new insertSpaces value immediately\n\t\t\tthis._insertSpaces = insertSpaces;\n\t\t}\n\t\tthis._warnOnError('setInsertSpaces', this._proxy.$trySetOptions(this._id, {\n\t\t\tinsertSpaces: insertSpaces\n\t\t}));\n\t}\n\n\t// --- internal: cursor style\n\n\tprivate _setCursorStyle(value: TextEditorCursorStyle) {\n\t\tif (this._cursorStyle === value) {\n\t\t\t// nothing to do\n\t\t\treturn;\n\t\t}\n\t\tthis._cursorStyle = value;\n\t\tthis._warnOnError('setCursorStyle', this._proxy.$trySetOptions(this._id, {\n\t\t\tcursorStyle: value\n\t\t}));\n\t}\n\n\t// --- internal: line number\n\n\tprivate _setLineNumbers(value: TextEditorLineNumbersStyle) {\n\t\tif (this._lineNumbers === value) {\n\t\t\t// nothing to do\n\t\t\treturn;\n\t\t}\n\t\tthis._lineNumbers = value;\n\t\tthis._warnOnError('setLineNumbers', this._proxy.$trySetOptions(this._id, {\n\t\t\tlineNumbers: TypeConverters.TextEditorLineNumbersStyle.from(value)\n\t\t}));\n\t}\n\n\tpublic assign(newOptions: vscode.TextEditorOptions) {\n\t\tconst bulkConfigurationUpdate: ITextEditorConfigurationUpdate = {};\n\t\tlet hasUpdate = false;\n\n\t\tif (typeof newOptions.tabSize !== 'undefined') {\n\t\t\tconst tabSize = this._validateTabSize(newOptions.tabSize);\n\t\t\tif (tabSize === 'auto') {\n\t\t\t\thasUpdate = true;\n\t\t\t\tbulkConfigurationUpdate.tabSize = tabSize;\n\t\t\t} else if (typeof tabSize === 'number' && this._tabSize !== tabSize) {\n\t\t\t\t// reflect the new tabSize value immediately\n\t\t\t\tthis._tabSize = tabSize;\n\t\t\t\thasUpdate = true;\n\t\t\t\tbulkConfigurationUpdate.tabSize = tabSize;\n\t\t\t}\n\t\t}\n\n\t\tif (typeof newOptions.indentSize !== 'undefined') {\n\t\t\tconst indentSize = this._validateIndentSize(newOptions.indentSize);\n\t\t\tif (indentSize === 'tabSize') {\n\t\t\t\thasUpdate = true;\n\t\t\t\tbulkConfigurationUpdate.indentSize = indentSize;\n\t\t\t} else if (typeof indentSize === 'number' && this._originalIndentSize !== indentSize) {\n\t\t\t\t// reflect the new indentSize value immediately\n\t\t\t\tthis._indentSize = indentSize;\n\t\t\t\tthis._originalIndentSize = indentSize;\n\t\t\t\thasUpdate = true;\n\t\t\t\tbulkConfigurationUpdate.indentSize = indentSize;\n\t\t\t}\n\t\t}\n\n\t\tif (typeof newOptions.insertSpaces !== 'undefined') {\n\t\t\tconst insertSpaces = this._validateInsertSpaces(newOptions.insertSpaces);\n\t\t\tif (insertSpaces === 'auto') {\n\t\t\t\thasUpdate = true;\n\t\t\t\tbulkConfigurationUpdate.insertSpaces = insertSpaces;\n\t\t\t} else if (this._insertSpaces !== insertSpaces) {\n\t\t\t\t// reflect the new insertSpaces value immediately\n\t\t\t\tthis._insertSpaces = insertSpaces;\n\t\t\t\thasUpdate = true;\n\t\t\t\tbulkConfigurationUpdate.insertSpaces = insertSpaces;\n\t\t\t}\n\t\t}\n\n\t\tif (typeof newOptions.cursorStyle !== 'undefined') {\n\t\t\tif (this._cursorStyle !== newOptions.cursorStyle) {\n\t\t\t\tthis._cursorStyle = newOptions.cursorStyle;\n\t\t\t\thasUpdate = true;\n\t\t\t\tbulkConfigurationUpdate.cursorStyle = newOptions.cursorStyle;\n\t\t\t}\n\t\t}\n\n\t\tif (typeof newOptions.lineNumbers !== 'undefined') {\n\t\t\tif (this._lineNumbers !== newOptions.lineNumbers) {\n\t\t\t\tthis._lineNumbers = newOptions.lineNumbers;\n\t\t\t\thasUpdate = true;\n\t\t\t\tbulkConfigurationUpdate.lineNumbers = TypeConverters.TextEditorLineNumbersStyle.from(newOptions.lineNumbers);\n\t\t\t}\n\t\t}\n\n\t\tif (hasUpdate) {\n\t\t\tthis._warnOnError('setOptions', this._proxy.$trySetOptions(this._id, bulkConfigurationUpdate));\n\t\t}\n\t}\n\n\tprivate _warnOnError(action: string, promise: Promise<any>): void {\n\t\tpromise.catch(err => {\n\t\t\tthis._logService.warn(`ExtHostTextEditorOptions '${action}' failed:'`);\n\t\t\tthis._logService.warn(err);\n\t\t});\n\t}\n}\n\nexport class ExtHostTextEditor {\n\n\tprivate _selections: Selection[];\n\tprivate _options: ExtHostTextEditorOptions;\n\tprivate _visibleRanges: Range[];\n\tprivate _viewColumn: vscode.ViewColumn | undefined;\n\tprivate _disposed: boolean = false;\n\tprivate _hasDecorationsForKey = new Set<string>();\n\n\treadonly value: vscode.TextEditor;\n\n\tconstructor(\n\t\treadonly id: string,\n\t\tprivate readonly _proxy: MainThreadTextEditorsShape,\n\t\tprivate readonly _logService: ILogService,\n\t\tdocument: Lazy<vscode.TextDocument>,\n\t\tselections: Selection[], options: IResolvedTextEditorConfiguration,\n\t\tvisibleRanges: Range[], viewColumn: vscode.ViewColumn | undefined\n\t) {\n\t\tthis._selections = selections;\n\t\tthis._options = new ExtHostTextEditorOptions(this._proxy, this.id, options, _logService);\n\t\tthis._visibleRanges = visibleRanges;\n\t\tthis._viewColumn = viewColumn;\n\n\t\tconst that = this;\n\n\t\tthis.value = Object.freeze({\n\t\t\tget document(): vscode.TextDocument {\n\t\t\t\treturn document.value;\n\t\t\t},\n\t\t\tset document(_value) {\n\t\t\t\tthrow new ReadonlyError('document');\n\t\t\t},\n\t\t\t// --- selection\n\t\t\tget selection(): Selection {\n\t\t\t\treturn that._selections && that._selections[0];\n\t\t\t},\n\t\t\tset selection(value: Selection) {\n\t\t\t\tif (!(value instanceof Selection)) {\n\t\t\t\t\tthrow illegalArgument('selection');\n\t\t\t\t}\n\t\t\t\tthat._selections = [value];\n\t\t\t\tthat._trySetSelection();\n\t\t\t},\n\t\t\tget selections(): Selection[] {\n\t\t\t\treturn that._selections;\n\t\t\t},\n\t\t\tset selections(value: Selection[]) {\n\t\t\t\tif (!Array.isArray(value) || value.some(a => !(a instanceof Selection))) {\n\t\t\t\t\tthrow illegalArgument('selections');\n\t\t\t\t}\n\t\t\t\tthat._selections = value;\n\t\t\t\tthat._trySetSelection();\n\t\t\t},\n\t\t\t// --- visible ranges\n\t\t\tget visibleRanges(): Range[] {\n\t\t\t\treturn that._visibleRanges;\n\t\t\t},\n\t\t\tset visibleRanges(_value: Range[]) {\n\t\t\t\tthrow new ReadonlyError('visibleRanges');\n\t\t\t},\n\t\t\t// --- options\n\t\t\tget options(): vscode.TextEditorOptions {\n\t\t\t\treturn that._options.value;\n\t\t\t},\n\t\t\tset options(value: vscode.TextEditorOptions) {\n\t\t\t\tif (!that._disposed) {\n\t\t\t\t\tthat._options.assign(value);\n\t\t\t\t}\n\t\t\t},\n\t\t\t// --- view column\n\t\t\tget viewColumn(): vscode.ViewColumn | undefined {\n\t\t\t\treturn that._viewColumn;\n\t\t\t},\n\t\t\tset viewColumn(_value) {\n\t\t\t\tthrow new ReadonlyError('viewColumn');\n\t\t\t},\n\t\t\t// --- edit\n\t\t\tedit(callback: (edit: TextEditorEdit) => void, options: { undoStopBefore: boolean; undoStopAfter: boolean } = { undoStopBefore: true, undoStopAfter: true }): Promise<boolean> {\n\t\t\t\tif (that._disposed) {\n\t\t\t\t\treturn Promise.reject(new Error('TextEditor#edit not possible on closed editors'));\n\t\t\t\t}\n\t\t\t\tconst edit = new TextEditorEdit(document.value, options);\n\t\t\t\tcallback(edit);\n\t\t\t\treturn that._applyEdit(edit);\n\t\t\t},\n\t\t\t// --- snippet edit\n\t\t\tinsertSnippet(snippet: SnippetString, where?: Position | readonly Position[] | Range | readonly Range[], options: { undoStopBefore: boolean; undoStopAfter: boolean } = { undoStopBefore: true, undoStopAfter: true }): Promise<boolean> {\n\t\t\t\tif (that._disposed) {\n\t\t\t\t\treturn Promise.reject(new Error('TextEditor#insertSnippet not possible on closed editors'));\n\t\t\t\t}\n\t\t\t\tlet ranges: IRange[];\n\n\t\t\t\tif (!where || (Array.isArray(where) && where.length === 0)) {\n\t\t\t\t\tranges = that._selections.map(range => TypeConverters.Range.from(range));\n\n\t\t\t\t} else if (where instanceof Position) {\n\t\t\t\t\tconst { lineNumber, column } = TypeConverters.Position.from(where);\n\t\t\t\t\tranges = [{ startLineNumber: lineNumber, startColumn: column, endLineNumber: lineNumber, endColumn: column }];\n\n\t\t\t\t} else if (where instanceof Range) {\n\t\t\t\t\tranges = [TypeConverters.Range.from(where)];\n\t\t\t\t} else {\n\t\t\t\t\tranges = [];\n\t\t\t\t\tfor (const posOrRange of where) {\n\t\t\t\t\t\tif (posOrRange instanceof Range) {\n\t\t\t\t\t\t\tranges.push(TypeConverters.Range.from(posOrRange));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst { lineNumber, column } = TypeConverters.Position.from(posOrRange);\n\t\t\t\t\t\t\tranges.push({ startLineNumber: lineNumber, startColumn: column, endLineNumber: lineNumber, endColumn: column });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn _proxy.$tryInsertSnippet(id, document.value.version, snippet.value, ranges, options);\n\t\t\t},\n\t\t\tsetDecorations(decorationType: vscode.TextEditorDecorationType, ranges: Range[] | vscode.DecorationOptions[]): void {\n\t\t\t\tconst willBeEmpty = (ranges.length === 0);\n\t\t\t\tif (willBeEmpty && !that._hasDecorationsForKey.has(decorationType.key)) {\n\t\t\t\t\t// avoid no-op call to the renderer\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (willBeEmpty) {\n\t\t\t\t\tthat._hasDecorationsForKey.delete(decorationType.key);\n\t\t\t\t} else {\n\t\t\t\t\tthat._hasDecorationsForKey.add(decorationType.key);\n\t\t\t\t}\n\t\t\t\tthat._runOnProxy(() => {\n\t\t\t\t\tif (TypeConverters.isDecorationOptionsArr(ranges)) {\n\t\t\t\t\t\treturn _proxy.$trySetDecorations(\n\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\tdecorationType.key,\n\t\t\t\t\t\t\tTypeConverters.fromRangeOrRangeWithMessage(ranges)\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst _ranges: number[] = new Array<number>(4 * ranges.length);\n\t\t\t\t\t\tfor (let i = 0, len = ranges.length; i < len; i++) {\n\t\t\t\t\t\t\tconst range = ranges[i];\n\t\t\t\t\t\t\t_ranges[4 * i] = range.start.line + 1;\n\t\t\t\t\t\t\t_ranges[4 * i + 1] = range.start.character + 1;\n\t\t\t\t\t\t\t_ranges[4 * i + 2] = range.end.line + 1;\n\t\t\t\t\t\t\t_ranges[4 * i + 3] = range.end.character + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn _proxy.$trySetDecorationsFast(\n\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\tdecorationType.key,\n\t\t\t\t\t\t\t_ranges\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\trevealRange(range: Range, revealType: vscode.TextEditorRevealType): void {\n\t\t\t\tthat._runOnProxy(() => _proxy.$tryRevealRange(\n\t\t\t\t\tid,\n\t\t\t\t\tTypeConverters.Range.from(range),\n\t\t\t\t\t(revealType || TextEditorRevealType.Default)\n\t\t\t\t));\n\t\t\t},\n\t\t\tshow(column: vscode.ViewColumn) {\n\t\t\t\t_proxy.$tryShowEditor(id, TypeConverters.ViewColumn.from(column));\n\t\t\t},\n\t\t\thide() {\n\t\t\t\t_proxy.$tryHideEditor(id);\n\t\t\t},\n\t\t\t[Symbol.for('debug.description')]() {\n\t\t\t\treturn `TextEditor(${this.document.uri.toString()})`;\n\t\t\t}\n\t\t});\n\t}\n\n\tdispose() {\n\t\tok(!this._disposed);\n\t\tthis._disposed = true;\n\t}\n\n\t// --- incoming: extension host MUST accept what the renderer says\n\n\t_acceptOptions(options: IResolvedTextEditorConfiguration): void {\n\t\tok(!this._disposed);\n\t\tthis._options._accept(options);\n\t}\n\n\t_acceptVisibleRanges(value: Range[]): void {\n\t\tok(!this._disposed);\n\t\tthis._visibleRanges = value;\n\t}\n\n\t_acceptViewColumn(value: vscode.ViewColumn) {\n\t\tok(!this._disposed);\n\t\tthis._viewColumn = value;\n\t}\n\n\t_acceptSelections(selections: Selection[]): void {\n\t\tok(!this._disposed);\n\t\tthis._selections = selections;\n\t}\n\n\tprivate async _trySetSelection(): Promise<vscode.TextEditor | null | undefined> {\n\t\tconst selection = this._selections.map(TypeConverters.Selection.from);\n\t\tawait this._runOnProxy(() => this._proxy.$trySetSelections(this.id, selection));\n\t\treturn this.value;\n\t}\n\n\tprivate _applyEdit(editBuilder: TextEditorEdit): Promise<boolean> {\n\t\tconst editData = editBuilder.finalize();\n\n\t\t// return when there is nothing to do\n\t\tif (editData.edits.length === 0 && !editData.setEndOfLine) {\n\t\t\treturn Promise.resolve(true);\n\t\t}\n\n\t\t// check that the edits are not overlapping (i.e. illegal)\n\t\tconst editRanges = editData.edits.map(edit => edit.range);\n\n\t\t// sort ascending (by end and then by start)\n\t\teditRanges.sort((a, b) => {\n\t\t\tif (a.end.line === b.end.line) {\n\t\t\t\tif (a.end.character === b.end.character) {\n\t\t\t\t\tif (a.start.line === b.start.line) {\n\t\t\t\t\t\treturn a.start.character - b.start.character;\n\t\t\t\t\t}\n\t\t\t\t\treturn a.start.line - b.start.line;\n\t\t\t\t}\n\t\t\t\treturn a.end.character - b.end.character;\n\t\t\t}\n\t\t\treturn a.end.line - b.end.line;\n\t\t});\n\n\t\t// check that no edits are overlapping\n\t\tfor (let i = 0, count = editRanges.length - 1; i < count; i++) {\n\t\t\tconst rangeEnd = editRanges[i].end;\n\t\t\tconst nextRangeStart = editRanges[i + 1].start;\n\n\t\t\tif (nextRangeStart.isBefore(rangeEnd)) {\n\t\t\t\t// overlapping ranges\n\t\t\t\treturn Promise.reject(\n\t\t\t\t\tnew Error('Overlapping ranges are not allowed!')\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// prepare data for serialization\n\t\tconst edits = editData.edits.map((edit): ISingleEditOperation => {\n\t\t\treturn {\n\t\t\t\trange: TypeConverters.Range.from(edit.range),\n\t\t\t\ttext: edit.text,\n\t\t\t\tforceMoveMarkers: edit.forceMoveMarkers\n\t\t\t};\n\t\t});\n\n\t\treturn this._proxy.$tryApplyEdits(this.id, editData.documentVersionId, edits, {\n\t\t\tsetEndOfLine: typeof editData.setEndOfLine === 'number' ? TypeConverters.EndOfLine.from(editData.setEndOfLine) : undefined,\n\t\t\tundoStopBefore: editData.undoStopBefore,\n\t\t\tundoStopAfter: editData.undoStopAfter\n\t\t});\n\t}\n\tprivate _runOnProxy(callback: () => Promise<any>): Promise<ExtHostTextEditor | undefined | null> {\n\t\tif (this._disposed) {\n\t\t\tthis._logService.warn('TextEditor is closed/disposed');\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn callback().then(() => this, err => {\n\t\t\tif (!(err instanceof Error && err.name === 'DISPOSED')) {\n\t\t\t\tthis._logService.warn(err);\n\t\t\t}\n\t\t\treturn null;\n\t\t});\n\t}\n}\n"],
  "mappings": "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",
  "names": ["options"]
}
