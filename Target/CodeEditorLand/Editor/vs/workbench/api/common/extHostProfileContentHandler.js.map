{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostProfileContentHandler.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { toDisposable } from '../../../base/common/lifecycle.js';\nimport { isString } from '../../../base/common/types.js';\nimport { URI, UriComponents } from '../../../base/common/uri.js';\nimport { IExtensionDescription } from '../../../platform/extensions/common/extensions.js';\nimport { checkProposedApiEnabled } from '../../services/extensions/common/extensions.js';\nimport { ISaveProfileResult } from '../../services/userDataProfile/common/userDataProfile.js';\nimport type * as vscode from 'vscode';\nimport { ExtHostProfileContentHandlersShape, IMainContext, MainContext, MainThreadProfileContentHandlersShape } from './extHost.protocol.js';\n\n\nexport class ExtHostProfileContentHandlers implements ExtHostProfileContentHandlersShape {\n\n\tprivate readonly proxy: MainThreadProfileContentHandlersShape;\n\n\tprivate readonly handlers = new Map<string, vscode.ProfileContentHandler>();\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t) {\n\t\tthis.proxy = mainContext.getProxy(MainContext.MainThreadProfileContentHandlers);\n\t}\n\n\tregisterProfileContentHandler(\n\t\textension: IExtensionDescription,\n\t\tid: string,\n\t\thandler: vscode.ProfileContentHandler,\n\t): vscode.Disposable {\n\t\tcheckProposedApiEnabled(extension, 'profileContentHandlers');\n\t\tif (this.handlers.has(id)) {\n\t\t\tthrow new Error(`Handler with id '${id}' already registered`);\n\t\t}\n\n\t\tthis.handlers.set(id, handler);\n\t\tthis.proxy.$registerProfileContentHandler(id, handler.name, handler.description, extension.identifier.value);\n\n\t\treturn toDisposable(() => {\n\t\t\tthis.handlers.delete(id);\n\t\t\tthis.proxy.$unregisterProfileContentHandler(id);\n\t\t});\n\t}\n\n\tasync $saveProfile(id: string, name: string, content: string, token: CancellationToken): Promise<ISaveProfileResult | null> {\n\t\tconst handler = this.handlers.get(id);\n\t\tif (!handler) {\n\t\t\tthrow new Error(`Unknown handler with id: ${id}`);\n\t\t}\n\n\t\treturn handler.saveProfile(name, content, token);\n\t}\n\n\tasync $readProfile(id: string, idOrUri: string | UriComponents, token: CancellationToken): Promise<string | null> {\n\t\tconst handler = this.handlers.get(id);\n\t\tif (!handler) {\n\t\t\tthrow new Error(`Unknown handler with id: ${id}`);\n\t\t}\n\n\t\treturn handler.readProfile(isString(idOrUri) ? idOrUri : URI.revive(idOrUri), token);\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,yBAAyB;AAClC,SAAS,oBAAoB;AAC7B,SAAS,gBAAgB;AACzB,SAAS,KAAK,qBAAqB;AACnC,SAAS,6BAA6B;AACtC,SAAS,+BAA+B;AACxC,SAAS,0BAA0B;AAEnC,SAAS,oCAAoC,cAAc,aAAa,6CAA6C;AAG9G,MAAM,8BAA4E;AAAA,EAhBzF,OAgByF;AAAA;AAAA;AAAA,EAEvE;AAAA,EAEA,WAAW,oBAAI,IAA0C;AAAA,EAE1E,YACC,aACC;AACD,SAAK,QAAQ,YAAY,SAAS,YAAY,gCAAgC;AAAA,EAC/E;AAAA,EAEA,8BACC,WACA,IACA,SACoB;AACpB,4BAAwB,WAAW,wBAAwB;AAC3D,QAAI,KAAK,SAAS,IAAI,EAAE,GAAG;AAC1B,YAAM,IAAI,MAAM,oBAAoB,EAAE,sBAAsB;AAAA,IAC7D;AAEA,SAAK,SAAS,IAAI,IAAI,OAAO;AAC7B,SAAK,MAAM,+BAA+B,IAAI,QAAQ,MAAM,QAAQ,aAAa,UAAU,WAAW,KAAK;AAE3G,WAAO,aAAa,MAAM;AACzB,WAAK,SAAS,OAAO,EAAE;AACvB,WAAK,MAAM,iCAAiC,EAAE;AAAA,IAC/C,CAAC;AAAA,EACF;AAAA,EAEA,MAAM,aAAa,IAAY,MAAc,SAAiB,OAA8D;AAC3H,UAAM,UAAU,KAAK,SAAS,IAAI,EAAE;AACpC,QAAI,CAAC,SAAS;AACb,YAAM,IAAI,MAAM,4BAA4B,EAAE,EAAE;AAAA,IACjD;AAEA,WAAO,QAAQ,YAAY,MAAM,SAAS,KAAK;AAAA,EAChD;AAAA,EAEA,MAAM,aAAa,IAAY,SAAiC,OAAkD;AACjH,UAAM,UAAU,KAAK,SAAS,IAAI,EAAE;AACpC,QAAI,CAAC,SAAS;AACb,YAAM,IAAI,MAAM,4BAA4B,EAAE,EAAE;AAAA,IACjD;AAEA,WAAO,QAAQ,YAAY,SAAS,OAAO,IAAI,UAAU,IAAI,OAAO,OAAO,GAAG,KAAK;AAAA,EACpF;AACD;",
  "names": []
}
