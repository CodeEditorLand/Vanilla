{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostProfileContentHandler.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type * as vscode from \"vscode\";\nimport type { CancellationToken } from \"../../../base/common/cancellation.js\";\nimport { toDisposable } from \"../../../base/common/lifecycle.js\";\nimport { isString } from \"../../../base/common/types.js\";\nimport { URI, type UriComponents } from \"../../../base/common/uri.js\";\nimport type { IExtensionDescription } from \"../../../platform/extensions/common/extensions.js\";\nimport { checkProposedApiEnabled } from \"../../services/extensions/common/extensions.js\";\nimport type { ISaveProfileResult } from \"../../services/userDataProfile/common/userDataProfile.js\";\nimport {\n\ttype ExtHostProfileContentHandlersShape,\n\ttype IMainContext,\n\tMainContext,\n\ttype MainThreadProfileContentHandlersShape,\n} from \"./extHost.protocol.js\";\n\nexport class ExtHostProfileContentHandlers\n\timplements ExtHostProfileContentHandlersShape\n{\n\tprivate readonly proxy: MainThreadProfileContentHandlersShape;\n\n\tprivate readonly handlers = new Map<string, vscode.ProfileContentHandler>();\n\n\tconstructor(mainContext: IMainContext) {\n\t\tthis.proxy = mainContext.getProxy(\n\t\t\tMainContext.MainThreadProfileContentHandlers,\n\t\t);\n\t}\n\n\tregisterProfileContentHandler(\n\t\textension: IExtensionDescription,\n\t\tid: string,\n\t\thandler: vscode.ProfileContentHandler,\n\t): vscode.Disposable {\n\t\tcheckProposedApiEnabled(extension, \"profileContentHandlers\");\n\t\tif (this.handlers.has(id)) {\n\t\t\tthrow new Error(`Handler with id '${id}' already registered`);\n\t\t}\n\n\t\tthis.handlers.set(id, handler);\n\t\tthis.proxy.$registerProfileContentHandler(\n\t\t\tid,\n\t\t\thandler.name,\n\t\t\thandler.description,\n\t\t\textension.identifier.value,\n\t\t);\n\n\t\treturn toDisposable(() => {\n\t\t\tthis.handlers.delete(id);\n\t\t\tthis.proxy.$unregisterProfileContentHandler(id);\n\t\t});\n\t}\n\n\tasync $saveProfile(\n\t\tid: string,\n\t\tname: string,\n\t\tcontent: string,\n\t\ttoken: CancellationToken,\n\t): Promise<ISaveProfileResult | null> {\n\t\tconst handler = this.handlers.get(id);\n\t\tif (!handler) {\n\t\t\tthrow new Error(`Unknown handler with id: ${id}`);\n\t\t}\n\n\t\treturn handler.saveProfile(name, content, token);\n\t}\n\n\tasync $readProfile(\n\t\tid: string,\n\t\tidOrUri: string | UriComponents,\n\t\ttoken: CancellationToken,\n\t): Promise<string | null> {\n\t\tconst handler = this.handlers.get(id);\n\t\tif (!handler) {\n\t\t\tthrow new Error(`Unknown handler with id: ${id}`);\n\t\t}\n\n\t\treturn handler.readProfile(\n\t\t\tisString(idOrUri) ? idOrUri : URI.revive(idOrUri),\n\t\t\ttoken,\n\t\t);\n\t}\n}\n"],
  "mappings": ";;AAOA,SAAS,oBAAoB;AAC7B,SAAS,gBAAgB;AACzB,SAAS,WAA+B;AAExC,SAAS,+BAA+B;AAExC;AAAA,EAGC;AAAA,OAEM;AAEA,MAAM,8BAEb;AAAA,EAtBA,OAsBA;AAAA;AAAA;AAAA,EACkB;AAAA,EAEA,WAAW,oBAAI,IAA0C;AAAA,EAE1E,YAAY,aAA2B;AACtC,SAAK,QAAQ,YAAY;AAAA,MACxB,YAAY;AAAA,IACb;AAAA,EACD;AAAA,EAEA,8BACC,WACA,IACA,SACoB;AACpB,4BAAwB,WAAW,wBAAwB;AAC3D,QAAI,KAAK,SAAS,IAAI,EAAE,GAAG;AAC1B,YAAM,IAAI,MAAM,oBAAoB,EAAE,sBAAsB;AAAA,IAC7D;AAEA,SAAK,SAAS,IAAI,IAAI,OAAO;AAC7B,SAAK,MAAM;AAAA,MACV;AAAA,MACA,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,UAAU,WAAW;AAAA,IACtB;AAEA,WAAO,aAAa,MAAM;AACzB,WAAK,SAAS,OAAO,EAAE;AACvB,WAAK,MAAM,iCAAiC,EAAE;AAAA,IAC/C,CAAC;AAAA,EACF;AAAA,EAEA,MAAM,aACL,IACA,MACA,SACA,OACqC;AACrC,UAAM,UAAU,KAAK,SAAS,IAAI,EAAE;AACpC,QAAI,CAAC,SAAS;AACb,YAAM,IAAI,MAAM,4BAA4B,EAAE,EAAE;AAAA,IACjD;AAEA,WAAO,QAAQ,YAAY,MAAM,SAAS,KAAK;AAAA,EAChD;AAAA,EAEA,MAAM,aACL,IACA,SACA,OACyB;AACzB,UAAM,UAAU,KAAK,SAAS,IAAI,EAAE;AACpC,QAAI,CAAC,SAAS;AACb,YAAM,IAAI,MAAM,4BAA4B,EAAE,EAAE;AAAA,IACjD;AAEA,WAAO,QAAQ;AAAA,MACd,SAAS,OAAO,IAAI,UAAU,IAAI,OAAO,OAAO;AAAA,MAChD;AAAA,IACD;AAAA,EACD;AACD;",
  "names": []
}
