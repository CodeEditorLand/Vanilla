{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostChatAgents2.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type * as vscode from \"vscode\";\nimport { coalesce } from \"../../../base/common/arrays.js\";\nimport { raceCancellation } from \"../../../base/common/async.js\";\nimport type { CancellationToken } from \"../../../base/common/cancellation.js\";\nimport { toErrorMessage } from \"../../../base/common/errorMessage.js\";\nimport { Emitter } from \"../../../base/common/event.js\";\nimport type { IMarkdownString } from \"../../../base/common/htmlContent.js\";\nimport { Iterable } from \"../../../base/common/iterator.js\";\nimport {\n\tDisposable,\n\tDisposableMap,\n\tDisposableStore,\n\ttoDisposable,\n} from \"../../../base/common/lifecycle.js\";\nimport { revive } from \"../../../base/common/marshalling.js\";\nimport { StopWatch } from \"../../../base/common/stopwatch.js\";\nimport { assertType } from \"../../../base/common/types.js\";\nimport { URI } from \"../../../base/common/uri.js\";\nimport type { Location } from \"../../../editor/common/languages.js\";\nimport {\n\tExtensionIdentifier,\n\ttype IExtensionDescription,\n} from \"../../../platform/extensions/common/extensions.js\";\nimport type { ILogService } from \"../../../platform/log/common/log.js\";\nimport {\n\tChatAgentLocation,\n\ttype IChatAgentRequest,\n\ttype IChatAgentResult,\n\ttype IChatAgentResultTimings,\n} from \"../../contrib/chat/common/chatAgents.js\";\nimport {\n\tChatAgentVoteDirection,\n\ttype IChatContentReference,\n\ttype IChatFollowup,\n\ttype IChatResponseErrorDetails,\n\ttype IChatUserActionEvent,\n\ttype IChatVoteAction,\n} from \"../../contrib/chat/common/chatService.js\";\nimport {\n\tcheckProposedApiEnabled,\n\tisProposedApiEnabled,\n} from \"../../services/extensions/common/extensions.js\";\nimport type { Dto } from \"../../services/extensions/common/proxyIdentifier.js\";\nimport {\n\ttype ExtHostChatAgentsShape2,\n\ttype IChatAgentCompletionItem,\n\ttype IChatAgentHistoryEntryDto,\n\ttype IChatProgressDto,\n\ttype IExtensionChatAgentMetadata,\n\ttype IMainContext,\n\tMainContext,\n\ttype MainThreadChatAgentsShape2,\n} from \"./extHost.protocol.js\";\nimport type { CommandsConverter, ExtHostCommands } from \"./extHostCommands.js\";\nimport type { ExtHostDocuments } from \"./extHostDocuments.js\";\nimport * as typeConvert from \"./extHostTypeConverters.js\";\nimport * as extHostTypes from \"./extHostTypes.js\";\n\nclass ChatAgentResponseStream {\n\tprivate _stopWatch = StopWatch.create(false);\n\tprivate _isClosed = false;\n\tprivate _firstProgress: number | undefined;\n\tprivate _apiObject: vscode.ChatResponseStream | undefined;\n\n\tconstructor(\n\t\tprivate readonly _extension: IExtensionDescription,\n\t\tprivate readonly _request: IChatAgentRequest,\n\t\tprivate readonly _proxy: MainThreadChatAgentsShape2,\n\t\tprivate readonly _commandsConverter: CommandsConverter,\n\t\tprivate readonly _sessionDisposables: DisposableStore,\n\t) {}\n\n\tclose() {\n\t\tthis._isClosed = true;\n\t}\n\n\tget timings(): IChatAgentResultTimings {\n\t\treturn {\n\t\t\tfirstProgress: this._firstProgress,\n\t\t\ttotalElapsed: this._stopWatch.elapsed(),\n\t\t};\n\t}\n\n\tget apiObject() {\n\t\tif (!this._apiObject) {\n\t\t\tconst that = this;\n\t\t\tthis._stopWatch.reset();\n\n\t\t\tfunction throwIfDone(source: Function | undefined) {\n\t\t\t\tif (that._isClosed) {\n\t\t\t\t\tconst err = new Error(\"Response stream has been closed\");\n\t\t\t\t\tError.captureStackTrace(err, source);\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst _report = (\n\t\t\t\tprogress: IChatProgressDto,\n\t\t\t\ttask?: (\n\t\t\t\t\tprogress: vscode.Progress<\n\t\t\t\t\t\t| vscode.ChatResponseWarningPart\n\t\t\t\t\t\t| vscode.ChatResponseReferencePart\n\t\t\t\t\t>,\n\t\t\t\t) => Thenable<string | void>,\n\t\t\t) => {\n\t\t\t\t// Measure the time to the first progress update with real markdown content\n\t\t\t\tif (\n\t\t\t\t\ttypeof this._firstProgress === \"undefined\" &&\n\t\t\t\t\t(progress.kind === \"markdownContent\" ||\n\t\t\t\t\t\tprogress.kind === \"markdownVuln\")\n\t\t\t\t) {\n\t\t\t\t\tthis._firstProgress = this._stopWatch.elapsed();\n\t\t\t\t}\n\n\t\t\t\tif (task) {\n\t\t\t\t\tconst progressReporterPromise =\n\t\t\t\t\t\tthis._proxy.$handleProgressChunk(\n\t\t\t\t\t\t\tthis._request.requestId,\n\t\t\t\t\t\t\tprogress,\n\t\t\t\t\t\t);\n\t\t\t\t\tconst progressReporter = {\n\t\t\t\t\t\treport: (\n\t\t\t\t\t\t\tp:\n\t\t\t\t\t\t\t\t| vscode.ChatResponseWarningPart\n\t\t\t\t\t\t\t\t| vscode.ChatResponseReferencePart,\n\t\t\t\t\t\t) => {\n\t\t\t\t\t\t\tprogressReporterPromise?.then((handle) => {\n\t\t\t\t\t\t\t\tif (handle) {\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\textHostTypes.MarkdownString.isMarkdownString(\n\t\t\t\t\t\t\t\t\t\t\tp.value,\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\tthis._proxy.$handleProgressChunk(\n\t\t\t\t\t\t\t\t\t\t\tthis._request.requestId,\n\t\t\t\t\t\t\t\t\t\t\ttypeConvert.ChatResponseWarningPart.from(\n\t\t\t\t\t\t\t\t\t\t\t\t<\n\t\t\t\t\t\t\t\t\t\t\t\t\tvscode.ChatResponseWarningPart\n\t\t\t\t\t\t\t\t\t\t\t\t>p,\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\thandle,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tthis._proxy.$handleProgressChunk(\n\t\t\t\t\t\t\t\t\t\t\tthis._request.requestId,\n\t\t\t\t\t\t\t\t\t\t\ttypeConvert.ChatResponseReferencePart.from(\n\t\t\t\t\t\t\t\t\t\t\t\t<\n\t\t\t\t\t\t\t\t\t\t\t\t\tvscode.ChatResponseReferencePart\n\t\t\t\t\t\t\t\t\t\t\t\t>p,\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\thandle,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\n\t\t\t\t\tPromise.all([\n\t\t\t\t\t\tprogressReporterPromise,\n\t\t\t\t\t\ttask?.(progressReporter),\n\t\t\t\t\t]).then(([handle, res]) => {\n\t\t\t\t\t\tif (handle !== undefined) {\n\t\t\t\t\t\t\tthis._proxy.$handleProgressChunk(\n\t\t\t\t\t\t\t\tthis._request.requestId,\n\t\t\t\t\t\t\t\ttypeConvert.ChatTaskResult.from(res),\n\t\t\t\t\t\t\t\thandle,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis._proxy.$handleProgressChunk(\n\t\t\t\t\t\tthis._request.requestId,\n\t\t\t\t\t\tprogress,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis._apiObject = {\n\t\t\t\tmarkdown(value) {\n\t\t\t\t\tthrowIfDone(this.markdown);\n\t\t\t\t\tconst part = new extHostTypes.ChatResponseMarkdownPart(\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t);\n\t\t\t\t\tconst dto = typeConvert.ChatResponseMarkdownPart.from(part);\n\t\t\t\t\t_report(dto);\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tmarkdownWithVulnerabilities(value, vulnerabilities) {\n\t\t\t\t\tthrowIfDone(this.markdown);\n\t\t\t\t\tif (vulnerabilities) {\n\t\t\t\t\t\tcheckProposedApiEnabled(\n\t\t\t\t\t\t\tthat._extension,\n\t\t\t\t\t\t\t\"chatParticipantAdditions\",\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst part =\n\t\t\t\t\t\tnew extHostTypes.ChatResponseMarkdownWithVulnerabilitiesPart(\n\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\tvulnerabilities,\n\t\t\t\t\t\t);\n\t\t\t\t\tconst dto =\n\t\t\t\t\t\ttypeConvert.ChatResponseMarkdownWithVulnerabilitiesPart.from(\n\t\t\t\t\t\t\tpart,\n\t\t\t\t\t\t);\n\t\t\t\t\t_report(dto);\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tcodeblockUri(value) {\n\t\t\t\t\tthrowIfDone(this.codeblockUri);\n\t\t\t\t\tcheckProposedApiEnabled(\n\t\t\t\t\t\tthat._extension,\n\t\t\t\t\t\t\"chatParticipantAdditions\",\n\t\t\t\t\t);\n\t\t\t\t\tconst part = new extHostTypes.ChatResponseCodeblockUriPart(\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t);\n\t\t\t\t\tconst dto =\n\t\t\t\t\t\ttypeConvert.ChatResponseCodeblockUriPart.from(part);\n\t\t\t\t\t_report(dto);\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tfiletree(value, baseUri) {\n\t\t\t\t\tthrowIfDone(this.filetree);\n\t\t\t\t\tconst part = new extHostTypes.ChatResponseFileTreePart(\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\tbaseUri,\n\t\t\t\t\t);\n\t\t\t\t\tconst dto = typeConvert.ChatResponseFilesPart.from(part);\n\t\t\t\t\t_report(dto);\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tanchor(value, title?: string) {\n\t\t\t\t\tthrowIfDone(this.anchor);\n\t\t\t\t\tconst part = new extHostTypes.ChatResponseAnchorPart(\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\ttitle,\n\t\t\t\t\t);\n\t\t\t\t\tconst dto = typeConvert.ChatResponseAnchorPart.from(part);\n\t\t\t\t\t_report(dto);\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tbutton(value) {\n\t\t\t\t\tthrowIfDone(this.anchor);\n\t\t\t\t\tconst part = new extHostTypes.ChatResponseCommandButtonPart(\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t);\n\t\t\t\t\tconst dto = typeConvert.ChatResponseCommandButtonPart.from(\n\t\t\t\t\t\tpart,\n\t\t\t\t\t\tthat._commandsConverter,\n\t\t\t\t\t\tthat._sessionDisposables,\n\t\t\t\t\t);\n\t\t\t\t\t_report(dto);\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tprogress(\n\t\t\t\t\tvalue,\n\t\t\t\t\ttask?: (\n\t\t\t\t\t\tprogress: vscode.Progress<vscode.ChatResponseWarningPart>,\n\t\t\t\t\t) => Thenable<string | void>,\n\t\t\t\t) {\n\t\t\t\t\tthrowIfDone(this.progress);\n\t\t\t\t\tconst part = new extHostTypes.ChatResponseProgressPart2(\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\ttask,\n\t\t\t\t\t);\n\t\t\t\t\tconst dto = task\n\t\t\t\t\t\t? typeConvert.ChatTask.from(part)\n\t\t\t\t\t\t: typeConvert.ChatResponseProgressPart.from(part);\n\t\t\t\t\t_report(dto, task);\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\twarning(value) {\n\t\t\t\t\tthrowIfDone(this.progress);\n\t\t\t\t\tcheckProposedApiEnabled(\n\t\t\t\t\t\tthat._extension,\n\t\t\t\t\t\t\"chatParticipantAdditions\",\n\t\t\t\t\t);\n\t\t\t\t\tconst part = new extHostTypes.ChatResponseWarningPart(\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t);\n\t\t\t\t\tconst dto = typeConvert.ChatResponseWarningPart.from(part);\n\t\t\t\t\t_report(dto);\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\treference(value, iconPath) {\n\t\t\t\t\treturn this.reference2(value, iconPath);\n\t\t\t\t},\n\t\t\t\treference2(value, iconPath, options) {\n\t\t\t\t\tthrowIfDone(this.reference);\n\n\t\t\t\t\tif (typeof value === \"object\" && \"variableName\" in value) {\n\t\t\t\t\t\tcheckProposedApiEnabled(\n\t\t\t\t\t\t\tthat._extension,\n\t\t\t\t\t\t\t\"chatParticipantAdditions\",\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (\n\t\t\t\t\t\ttypeof value === \"object\" &&\n\t\t\t\t\t\t\"variableName\" in value &&\n\t\t\t\t\t\t!value.value\n\t\t\t\t\t) {\n\t\t\t\t\t\t// The participant used this variable. Does that variable have any references to pull in?\n\t\t\t\t\t\tconst matchingVarData =\n\t\t\t\t\t\t\tthat._request.variables.variables.find(\n\t\t\t\t\t\t\t\t(v) => v.name === value.variableName,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tif (matchingVarData) {\n\t\t\t\t\t\t\tlet references:\n\t\t\t\t\t\t\t\t| Dto<IChatContentReference>[]\n\t\t\t\t\t\t\t\t| undefined;\n\t\t\t\t\t\t\tif (matchingVarData.references?.length) {\n\t\t\t\t\t\t\t\treferences = matchingVarData.references.map(\n\t\t\t\t\t\t\t\t\t(r) =>\n\t\t\t\t\t\t\t\t\t\t({\n\t\t\t\t\t\t\t\t\t\t\tkind: \"reference\",\n\t\t\t\t\t\t\t\t\t\t\treference: {\n\t\t\t\t\t\t\t\t\t\t\t\tvariableName:\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue.variableName,\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: r.reference as\n\t\t\t\t\t\t\t\t\t\t\t\t\t| URI\n\t\t\t\t\t\t\t\t\t\t\t\t\t| Location,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t}) satisfies IChatContentReference,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Participant sent a variableName reference but the variable produced no references. Show variable reference with no value\n\t\t\t\t\t\t\t\tconst part =\n\t\t\t\t\t\t\t\t\tnew extHostTypes.ChatResponseReferencePart(\n\t\t\t\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\t\t\t\ticonPath,\n\t\t\t\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tconst dto =\n\t\t\t\t\t\t\t\t\ttypeConvert.ChatResponseReferencePart.from(\n\t\t\t\t\t\t\t\t\t\tpart,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\treferences = [dto];\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treferences.forEach((r) => _report(r));\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Something went wrong- that variable doesn't actually exist\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst part = new extHostTypes.ChatResponseReferencePart(\n\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\ticonPath,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst dto =\n\t\t\t\t\t\t\ttypeConvert.ChatResponseReferencePart.from(part);\n\t\t\t\t\t\t_report(dto);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tcodeCitation(\n\t\t\t\t\tvalue: vscode.Uri,\n\t\t\t\t\tlicense: string,\n\t\t\t\t\tsnippet: string,\n\t\t\t\t): void {\n\t\t\t\t\tthrowIfDone(this.codeCitation);\n\t\t\t\t\tcheckProposedApiEnabled(\n\t\t\t\t\t\tthat._extension,\n\t\t\t\t\t\t\"chatParticipantAdditions\",\n\t\t\t\t\t);\n\n\t\t\t\t\tconst part = new extHostTypes.ChatResponseCodeCitationPart(\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\tlicense,\n\t\t\t\t\t\tsnippet,\n\t\t\t\t\t);\n\t\t\t\t\tconst dto =\n\t\t\t\t\t\ttypeConvert.ChatResponseCodeCitationPart.from(part);\n\t\t\t\t\t_report(dto);\n\t\t\t\t},\n\t\t\t\ttextEdit(target, edits) {\n\t\t\t\t\tthrowIfDone(this.textEdit);\n\t\t\t\t\tcheckProposedApiEnabled(\n\t\t\t\t\t\tthat._extension,\n\t\t\t\t\t\t\"chatParticipantAdditions\",\n\t\t\t\t\t);\n\n\t\t\t\t\tconst part = new extHostTypes.ChatResponseTextEditPart(\n\t\t\t\t\t\ttarget,\n\t\t\t\t\t\tedits,\n\t\t\t\t\t);\n\t\t\t\t\tconst dto = typeConvert.ChatResponseTextEditPart.from(part);\n\t\t\t\t\t_report(dto);\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tdetectedParticipant(participant, command) {\n\t\t\t\t\tthrowIfDone(this.detectedParticipant);\n\t\t\t\t\tcheckProposedApiEnabled(\n\t\t\t\t\t\tthat._extension,\n\t\t\t\t\t\t\"chatParticipantAdditions\",\n\t\t\t\t\t);\n\n\t\t\t\t\tconst part =\n\t\t\t\t\t\tnew extHostTypes.ChatResponseDetectedParticipantPart(\n\t\t\t\t\t\t\tparticipant,\n\t\t\t\t\t\t\tcommand,\n\t\t\t\t\t\t);\n\t\t\t\t\tconst dto =\n\t\t\t\t\t\ttypeConvert.ChatResponseDetectedParticipantPart.from(\n\t\t\t\t\t\t\tpart,\n\t\t\t\t\t\t);\n\t\t\t\t\t_report(dto);\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tconfirmation(title, message, data, buttons) {\n\t\t\t\t\tthrowIfDone(this.confirmation);\n\t\t\t\t\tcheckProposedApiEnabled(\n\t\t\t\t\t\tthat._extension,\n\t\t\t\t\t\t\"chatParticipantAdditions\",\n\t\t\t\t\t);\n\n\t\t\t\t\tconst part = new extHostTypes.ChatResponseConfirmationPart(\n\t\t\t\t\t\ttitle,\n\t\t\t\t\t\tmessage,\n\t\t\t\t\t\tdata,\n\t\t\t\t\t\tbuttons,\n\t\t\t\t\t);\n\t\t\t\t\tconst dto =\n\t\t\t\t\t\ttypeConvert.ChatResponseConfirmationPart.from(part);\n\t\t\t\t\t_report(dto);\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tpush(part) {\n\t\t\t\t\tthrowIfDone(this.push);\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tpart instanceof extHostTypes.ChatResponseTextEditPart ||\n\t\t\t\t\t\tpart instanceof\n\t\t\t\t\t\t\textHostTypes.ChatResponseMarkdownWithVulnerabilitiesPart ||\n\t\t\t\t\t\tpart instanceof\n\t\t\t\t\t\t\textHostTypes.ChatResponseDetectedParticipantPart ||\n\t\t\t\t\t\tpart instanceof extHostTypes.ChatResponseWarningPart ||\n\t\t\t\t\t\tpart instanceof\n\t\t\t\t\t\t\textHostTypes.ChatResponseConfirmationPart ||\n\t\t\t\t\t\tpart instanceof\n\t\t\t\t\t\t\textHostTypes.ChatResponseCodeCitationPart ||\n\t\t\t\t\t\tpart instanceof extHostTypes.ChatResponseMovePart\n\t\t\t\t\t) {\n\t\t\t\t\t\tcheckProposedApiEnabled(\n\t\t\t\t\t\t\tthat._extension,\n\t\t\t\t\t\t\t\"chatParticipantAdditions\",\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tpart instanceof extHostTypes.ChatResponseReferencePart\n\t\t\t\t\t) {\n\t\t\t\t\t\t// Ensure variable reference values get fixed up\n\t\t\t\t\t\tthis.reference2(\n\t\t\t\t\t\t\tpart.value,\n\t\t\t\t\t\t\tpart.iconPath,\n\t\t\t\t\t\t\tpart.options,\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst dto = typeConvert.ChatResponsePart.from(\n\t\t\t\t\t\t\tpart,\n\t\t\t\t\t\t\tthat._commandsConverter,\n\t\t\t\t\t\t\tthat._sessionDisposables,\n\t\t\t\t\t\t);\n\t\t\t\t\t\t_report(dto);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\treturn this._apiObject;\n\t}\n}\n\nexport class ExtHostChatAgents2\n\textends Disposable\n\timplements ExtHostChatAgentsShape2\n{\n\tprivate static _idPool = 0;\n\n\tprivate readonly _agents = new Map<number, ExtHostChatAgent>();\n\tprivate readonly _proxy: MainThreadChatAgentsShape2;\n\n\tprivate static _participantDetectionProviderIdPool = 0;\n\tprivate readonly _participantDetectionProviders = new Map<\n\t\tnumber,\n\t\tvscode.ChatParticipantDetectionProvider\n\t>();\n\n\tprivate readonly _sessionDisposables: DisposableMap<\n\t\tstring,\n\t\tDisposableStore\n\t> = this._register(new DisposableMap());\n\tprivate readonly _completionDisposables: DisposableMap<\n\t\tnumber,\n\t\tDisposableStore\n\t> = this._register(new DisposableMap());\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\tprivate readonly _logService: ILogService,\n\t\tprivate readonly _commands: ExtHostCommands,\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t) {\n\t\tsuper();\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadChatAgents2);\n\t}\n\n\ttransferActiveChat(newWorkspace: vscode.Uri): void {\n\t\tthis._proxy.$transferActiveChatSession(newWorkspace);\n\t}\n\n\tcreateChatAgent(\n\t\textension: IExtensionDescription,\n\t\tid: string,\n\t\thandler: vscode.ChatExtendedRequestHandler,\n\t): vscode.ChatParticipant {\n\t\tconst handle = ExtHostChatAgents2._idPool++;\n\t\tconst agent = new ExtHostChatAgent(\n\t\t\textension,\n\t\t\tid,\n\t\t\tthis._proxy,\n\t\t\thandle,\n\t\t\thandler,\n\t\t);\n\t\tthis._agents.set(handle, agent);\n\n\t\tthis._proxy.$registerAgent(\n\t\t\thandle,\n\t\t\textension.identifier,\n\t\t\tid,\n\t\t\t{},\n\t\t\tundefined,\n\t\t);\n\t\treturn agent.apiAgent;\n\t}\n\n\tcreateDynamicChatAgent(\n\t\textension: IExtensionDescription,\n\t\tid: string,\n\t\tdynamicProps: vscode.DynamicChatParticipantProps,\n\t\thandler: vscode.ChatExtendedRequestHandler,\n\t): vscode.ChatParticipant {\n\t\tconst handle = ExtHostChatAgents2._idPool++;\n\t\tconst agent = new ExtHostChatAgent(\n\t\t\textension,\n\t\t\tid,\n\t\t\tthis._proxy,\n\t\t\thandle,\n\t\t\thandler,\n\t\t);\n\t\tthis._agents.set(handle, agent);\n\n\t\tthis._proxy.$registerAgent(\n\t\t\thandle,\n\t\t\textension.identifier,\n\t\t\tid,\n\t\t\t{ isSticky: true } satisfies IExtensionChatAgentMetadata,\n\t\t\tdynamicProps,\n\t\t);\n\t\treturn agent.apiAgent;\n\t}\n\n\tregisterChatParticipantDetectionProvider(\n\t\tprovider: vscode.ChatParticipantDetectionProvider,\n\t): vscode.Disposable {\n\t\tconst handle = ExtHostChatAgents2._participantDetectionProviderIdPool++;\n\t\tthis._participantDetectionProviders.set(handle, provider);\n\t\tthis._proxy.$registerChatParticipantDetectionProvider(handle);\n\t\treturn toDisposable(() => {\n\t\t\tthis._participantDetectionProviders.delete(handle);\n\t\t\tthis._proxy.$unregisterChatParticipantDetectionProvider(handle);\n\t\t});\n\t}\n\n\tasync $detectChatParticipant(\n\t\thandle: number,\n\t\trequestDto: Dto<IChatAgentRequest>,\n\t\tcontext: { history: IChatAgentHistoryEntryDto[] },\n\t\toptions: {\n\t\t\tlocation: ChatAgentLocation;\n\t\t\tparticipants?: vscode.ChatParticipantMetadata[];\n\t\t},\n\t\ttoken: CancellationToken,\n\t): Promise<vscode.ChatParticipantDetectionResult | null | undefined> {\n\t\tconst { request, location, history } = await this._createRequest(\n\t\t\trequestDto,\n\t\t\tcontext,\n\t\t);\n\n\t\tconst provider = this._participantDetectionProviders.get(handle);\n\t\tif (!provider) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn provider.provideParticipantDetection(\n\t\t\ttypeConvert.ChatAgentRequest.to(request, location),\n\t\t\t{ history },\n\t\t\t{\n\t\t\t\tparticipants: options.participants,\n\t\t\t\tlocation: typeConvert.ChatLocation.to(options.location),\n\t\t\t},\n\t\t\ttoken,\n\t\t);\n\t}\n\n\tprivate async _createRequest(\n\t\trequestDto: Dto<IChatAgentRequest>,\n\t\tcontext: { history: IChatAgentHistoryEntryDto[] },\n\t) {\n\t\tconst request = revive<IChatAgentRequest>(requestDto);\n\t\tconst convertedHistory = await this.prepareHistoryTurns(\n\t\t\trequest.agentId,\n\t\t\tcontext,\n\t\t);\n\n\t\t// in-place converting for location-data\n\t\tlet location:\n\t\t\t| vscode.ChatRequestEditorData\n\t\t\t| vscode.ChatRequestNotebookData\n\t\t\t| undefined;\n\t\tif (request.locationData?.type === ChatAgentLocation.Editor) {\n\t\t\t// editor data\n\t\t\tconst document = this._documents.getDocument(\n\t\t\t\trequest.locationData.document,\n\t\t\t);\n\t\t\tlocation = new extHostTypes.ChatRequestEditorData(\n\t\t\t\tdocument,\n\t\t\t\ttypeConvert.Selection.to(request.locationData.selection),\n\t\t\t\ttypeConvert.Range.to(request.locationData.wholeRange),\n\t\t\t);\n\t\t} else if (request.locationData?.type === ChatAgentLocation.Notebook) {\n\t\t\t// notebook data\n\t\t\tconst cell = this._documents.getDocument(\n\t\t\t\trequest.locationData.sessionInputUri,\n\t\t\t);\n\t\t\tlocation = new extHostTypes.ChatRequestNotebookData(cell);\n\t\t} else if (request.locationData?.type === ChatAgentLocation.Terminal) {\n\t\t\t// TBD\n\t\t}\n\n\t\treturn { request, location, history: convertedHistory };\n\t}\n\n\tasync $invokeAgent(\n\t\thandle: number,\n\t\trequestDto: Dto<IChatAgentRequest>,\n\t\tcontext: { history: IChatAgentHistoryEntryDto[] },\n\t\ttoken: CancellationToken,\n\t): Promise<IChatAgentResult | undefined> {\n\t\tconst agent = this._agents.get(handle);\n\t\tif (!agent) {\n\t\t\tthrow new Error(\n\t\t\t\t`[CHAT](${handle}) CANNOT invoke agent because the agent is not registered`,\n\t\t\t);\n\t\t}\n\n\t\tlet stream: ChatAgentResponseStream | undefined;\n\n\t\ttry {\n\t\t\tconst { request, location, history } = await this._createRequest(\n\t\t\t\trequestDto,\n\t\t\t\tcontext,\n\t\t\t);\n\n\t\t\t// Init session disposables\n\t\t\tlet sessionDisposables = this._sessionDisposables.get(\n\t\t\t\trequest.sessionId,\n\t\t\t);\n\t\t\tif (!sessionDisposables) {\n\t\t\t\tsessionDisposables = new DisposableStore();\n\t\t\t\tthis._sessionDisposables.set(\n\t\t\t\t\trequest.sessionId,\n\t\t\t\t\tsessionDisposables,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tstream = new ChatAgentResponseStream(\n\t\t\t\tagent.extension,\n\t\t\t\trequest,\n\t\t\t\tthis._proxy,\n\t\t\t\tthis._commands.converter,\n\t\t\t\tsessionDisposables,\n\t\t\t);\n\n\t\t\tconst task = agent.invoke(\n\t\t\t\ttypeConvert.ChatAgentRequest.to(request, location),\n\t\t\t\t{ history },\n\t\t\t\tstream.apiObject,\n\t\t\t\ttoken,\n\t\t\t);\n\n\t\t\treturn await raceCancellation(\n\t\t\t\tPromise.resolve(task).then((result) => {\n\t\t\t\t\tif (result?.metadata) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tJSON.stringify(result.metadata);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tconst msg = `result.metadata MUST be JSON.stringify-able. Got error: ${err.message}`;\n\t\t\t\t\t\t\tthis._logService.error(\n\t\t\t\t\t\t\t\t`[${agent.extension.identifier.value}] [@${agent.id}] ${msg}`,\n\t\t\t\t\t\t\t\tagent.extension,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\terrorDetails: { message: msg },\n\t\t\t\t\t\t\t\ttimings: stream?.timings,\n\t\t\t\t\t\t\t\tnextQuestion: result.nextQuestion,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlet errorDetails: IChatResponseErrorDetails | undefined;\n\t\t\t\t\tif (result?.errorDetails) {\n\t\t\t\t\t\terrorDetails = {\n\t\t\t\t\t\t\t...result.errorDetails,\n\t\t\t\t\t\t\tresponseIsIncomplete: true,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tif (errorDetails?.responseIsRedacted) {\n\t\t\t\t\t\tcheckProposedApiEnabled(\n\t\t\t\t\t\t\tagent.extension,\n\t\t\t\t\t\t\t\"chatParticipantPrivate\",\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\terrorDetails,\n\t\t\t\t\t\ttimings: stream?.timings,\n\t\t\t\t\t\tmetadata: result?.metadata,\n\t\t\t\t\t\tnextQuestion: result?.nextQuestion,\n\t\t\t\t\t} satisfies IChatAgentResult;\n\t\t\t\t}),\n\t\t\t\ttoken,\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tthis._logService.error(e, agent.extension);\n\n\t\t\tif (e instanceof extHostTypes.LanguageModelError && e.cause) {\n\t\t\t\te = e.cause;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\terrorDetails: {\n\t\t\t\t\tmessage: toErrorMessage(e),\n\t\t\t\t\tresponseIsIncomplete: true,\n\t\t\t\t},\n\t\t\t};\n\t\t} finally {\n\t\t\tstream?.close();\n\t\t}\n\t}\n\n\tprivate async prepareHistoryTurns(\n\t\tagentId: string,\n\t\tcontext: { history: IChatAgentHistoryEntryDto[] },\n\t): Promise<(vscode.ChatRequestTurn | vscode.ChatResponseTurn)[]> {\n\t\tconst res: (vscode.ChatRequestTurn | vscode.ChatResponseTurn)[] = [];\n\n\t\tfor (const h of context.history) {\n\t\t\tconst ehResult = typeConvert.ChatAgentResult.to(h.result);\n\t\t\tconst result: vscode.ChatResult =\n\t\t\t\tagentId === h.request.agentId\n\t\t\t\t\t? ehResult\n\t\t\t\t\t: { ...ehResult, metadata: undefined };\n\n\t\t\t// REQUEST turn\n\t\t\tconst varsWithoutTools = h.request.variables.variables\n\t\t\t\t.filter((v) => !v.isTool)\n\t\t\t\t.map(typeConvert.ChatPromptReference.to);\n\t\t\tconst toolReferences = h.request.variables.variables\n\t\t\t\t.filter((v) => v.isTool)\n\t\t\t\t.map(typeConvert.ChatLanguageModelToolReference.to);\n\t\t\tconst turn = new extHostTypes.ChatRequestTurn(\n\t\t\t\th.request.message,\n\t\t\t\th.request.command,\n\t\t\t\tvarsWithoutTools,\n\t\t\t\th.request.agentId,\n\t\t\t);\n\t\t\tturn.toolReferences = toolReferences;\n\t\t\tres.push(turn);\n\n\t\t\t// RESPONSE turn\n\t\t\tconst parts = coalesce(\n\t\t\t\th.response.map((r) =>\n\t\t\t\t\ttypeConvert.ChatResponsePart.toContent(\n\t\t\t\t\t\tr,\n\t\t\t\t\t\tthis._commands.converter,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t);\n\t\t\tres.push(\n\t\t\t\tnew extHostTypes.ChatResponseTurn(\n\t\t\t\t\tparts,\n\t\t\t\t\tresult,\n\t\t\t\t\th.request.agentId,\n\t\t\t\t\th.request.command,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\treturn res;\n\t}\n\n\t$releaseSession(sessionId: string): void {\n\t\tthis._sessionDisposables.deleteAndDispose(sessionId);\n\t}\n\n\tasync $provideFollowups(\n\t\trequestDto: Dto<IChatAgentRequest>,\n\t\thandle: number,\n\t\tresult: IChatAgentResult,\n\t\tcontext: { history: IChatAgentHistoryEntryDto[] },\n\t\ttoken: CancellationToken,\n\t): Promise<IChatFollowup[]> {\n\t\tconst agent = this._agents.get(handle);\n\t\tif (!agent) {\n\t\t\treturn Promise.resolve([]);\n\t\t}\n\n\t\tconst request = revive<IChatAgentRequest>(requestDto);\n\t\tconst convertedHistory = await this.prepareHistoryTurns(\n\t\t\tagent.id,\n\t\t\tcontext,\n\t\t);\n\n\t\tconst ehResult = typeConvert.ChatAgentResult.to(result);\n\t\treturn (\n\t\t\tawait agent.provideFollowups(\n\t\t\t\tehResult,\n\t\t\t\t{ history: convertedHistory },\n\t\t\t\ttoken,\n\t\t\t)\n\t\t)\n\t\t\t.filter((f) => {\n\t\t\t\t// The followup must refer to a participant that exists from the same extension\n\t\t\t\tconst isValid =\n\t\t\t\t\t!f.participant ||\n\t\t\t\t\tIterable.some(\n\t\t\t\t\t\tthis._agents.values(),\n\t\t\t\t\t\t(a) =>\n\t\t\t\t\t\t\ta.id === f.participant &&\n\t\t\t\t\t\t\tExtensionIdentifier.equals(\n\t\t\t\t\t\t\t\ta.extension.identifier,\n\t\t\t\t\t\t\t\tagent.extension.identifier,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\tif (!isValid) {\n\t\t\t\t\tthis._logService.warn(\n\t\t\t\t\t\t`[@${agent.id}] ChatFollowup refers to an unknown participant: ${f.participant}`,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn isValid;\n\t\t\t})\n\t\t\t.map((f) => typeConvert.ChatFollowup.from(f, request));\n\t}\n\n\t$acceptFeedback(\n\t\thandle: number,\n\t\tresult: IChatAgentResult,\n\t\tvoteAction: IChatVoteAction,\n\t): void {\n\t\tconst agent = this._agents.get(handle);\n\t\tif (!agent) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst ehResult = typeConvert.ChatAgentResult.to(result);\n\t\tlet kind: extHostTypes.ChatResultFeedbackKind;\n\t\tswitch (voteAction.direction) {\n\t\t\tcase ChatAgentVoteDirection.Down:\n\t\t\t\tkind = extHostTypes.ChatResultFeedbackKind.Unhelpful;\n\t\t\t\tbreak;\n\t\t\tcase ChatAgentVoteDirection.Up:\n\t\t\t\tkind = extHostTypes.ChatResultFeedbackKind.Helpful;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconst feedback: vscode.ChatResultFeedback = {\n\t\t\tresult: ehResult,\n\t\t\tkind,\n\t\t\tunhelpfulReason: isProposedApiEnabled(\n\t\t\t\tagent.extension,\n\t\t\t\t\"chatParticipantAdditions\",\n\t\t\t)\n\t\t\t\t? voteAction.reason\n\t\t\t\t: undefined,\n\t\t};\n\t\tagent.acceptFeedback(Object.freeze(feedback));\n\t}\n\n\t$acceptAction(\n\t\thandle: number,\n\t\tresult: IChatAgentResult,\n\t\tevent: IChatUserActionEvent,\n\t): void {\n\t\tconst agent = this._agents.get(handle);\n\t\tif (!agent) {\n\t\t\treturn;\n\t\t}\n\t\tif (event.action.kind === \"vote\") {\n\t\t\t// handled by $acceptFeedback\n\t\t\treturn;\n\t\t}\n\n\t\tconst ehAction = typeConvert.ChatAgentUserActionEvent.to(\n\t\t\tresult,\n\t\t\tevent,\n\t\t\tthis._commands.converter,\n\t\t);\n\t\tif (ehAction) {\n\t\t\tagent.acceptAction(Object.freeze(ehAction));\n\t\t}\n\t}\n\n\tasync $invokeCompletionProvider(\n\t\thandle: number,\n\t\tquery: string,\n\t\ttoken: CancellationToken,\n\t): Promise<IChatAgentCompletionItem[]> {\n\t\tconst agent = this._agents.get(handle);\n\t\tif (!agent) {\n\t\t\treturn [];\n\t\t}\n\n\t\tlet disposables = this._completionDisposables.get(handle);\n\t\tif (disposables) {\n\t\t\t// Clear any disposables from the last invocation of this completion provider\n\t\t\tdisposables.clear();\n\t\t} else {\n\t\t\tdisposables = new DisposableStore();\n\t\t\tthis._completionDisposables.set(handle, disposables);\n\t\t}\n\n\t\tconst items = await agent.invokeCompletionProvider(query, token);\n\n\t\treturn items.map((i) =>\n\t\t\ttypeConvert.ChatAgentCompletionItem.from(\n\t\t\t\ti,\n\t\t\t\tthis._commands.converter,\n\t\t\t\tdisposables,\n\t\t\t),\n\t\t);\n\t}\n\n\tasync $provideWelcomeMessage(\n\t\thandle: number,\n\t\tlocation: ChatAgentLocation,\n\t\ttoken: CancellationToken,\n\t): Promise<(string | IMarkdownString)[] | undefined> {\n\t\tconst agent = this._agents.get(handle);\n\t\tif (!agent) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn await agent.provideWelcomeMessage(\n\t\t\ttypeConvert.ChatLocation.to(location),\n\t\t\ttoken,\n\t\t);\n\t}\n\n\tasync $provideChatTitle(\n\t\thandle: number,\n\t\tcontext: IChatAgentHistoryEntryDto[],\n\t\ttoken: CancellationToken,\n\t): Promise<string | undefined> {\n\t\tconst agent = this._agents.get(handle);\n\t\tif (!agent) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst history = await this.prepareHistoryTurns(agent.id, {\n\t\t\thistory: context,\n\t\t});\n\t\treturn await agent.provideTitle({ history }, token);\n\t}\n\n\tasync $provideSampleQuestions(\n\t\thandle: number,\n\t\tlocation: ChatAgentLocation,\n\t\ttoken: CancellationToken,\n\t): Promise<IChatFollowup[] | undefined> {\n\t\tconst agent = this._agents.get(handle);\n\t\tif (!agent) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn (\n\t\t\tawait agent.provideSampleQuestions(\n\t\t\t\ttypeConvert.ChatLocation.to(location),\n\t\t\t\ttoken,\n\t\t\t)\n\t\t).map((f) => typeConvert.ChatFollowup.from(f, undefined));\n\t}\n}\n\nclass ExtHostChatAgent {\n\tprivate _followupProvider: vscode.ChatFollowupProvider | undefined;\n\tprivate _iconPath:\n\t\t| vscode.Uri\n\t\t| { light: vscode.Uri; dark: vscode.Uri }\n\t\t| vscode.ThemeIcon\n\t\t| undefined;\n\tprivate _helpTextPrefix: string | vscode.MarkdownString | undefined;\n\tprivate _helpTextVariablesPrefix:\n\t\t| string\n\t\t| vscode.MarkdownString\n\t\t| undefined;\n\tprivate _helpTextPostfix: string | vscode.MarkdownString | undefined;\n\tprivate _isSecondary: boolean | undefined;\n\tprivate _onDidReceiveFeedback = new Emitter<vscode.ChatResultFeedback>();\n\tprivate _onDidPerformAction = new Emitter<vscode.ChatUserActionEvent>();\n\tprivate _supportIssueReporting: boolean | undefined;\n\tprivate _agentVariableProvider?: {\n\t\tprovider: vscode.ChatParticipantCompletionItemProvider;\n\t\ttriggerCharacters: string[];\n\t};\n\tprivate _welcomeMessageProvider?:\n\t\t| vscode.ChatWelcomeMessageProvider\n\t\t| undefined;\n\tprivate _titleProvider?: vscode.ChatTitleProvider | undefined;\n\tprivate _requester: vscode.ChatRequesterInformation | undefined;\n\tprivate _supportsSlowReferences: boolean | undefined;\n\n\tconstructor(\n\t\tpublic readonly extension: IExtensionDescription,\n\t\tpublic readonly id: string,\n\t\tprivate readonly _proxy: MainThreadChatAgentsShape2,\n\t\tprivate readonly _handle: number,\n\t\tprivate _requestHandler: vscode.ChatExtendedRequestHandler,\n\t) {}\n\n\tacceptFeedback(feedback: vscode.ChatResultFeedback) {\n\t\tthis._onDidReceiveFeedback.fire(feedback);\n\t}\n\n\tacceptAction(event: vscode.ChatUserActionEvent) {\n\t\tthis._onDidPerformAction.fire(event);\n\t}\n\n\tasync invokeCompletionProvider(\n\t\tquery: string,\n\t\ttoken: CancellationToken,\n\t): Promise<vscode.ChatCompletionItem[]> {\n\t\tif (!this._agentVariableProvider) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn (\n\t\t\t(await this._agentVariableProvider.provider.provideCompletionItems(\n\t\t\t\tquery,\n\t\t\t\ttoken,\n\t\t\t)) ?? []\n\t\t);\n\t}\n\n\tasync provideFollowups(\n\t\tresult: vscode.ChatResult,\n\t\tcontext: vscode.ChatContext,\n\t\ttoken: CancellationToken,\n\t): Promise<vscode.ChatFollowup[]> {\n\t\tif (!this._followupProvider) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst followups = await this._followupProvider.provideFollowups(\n\t\t\tresult,\n\t\t\tcontext,\n\t\t\ttoken,\n\t\t);\n\t\tif (!followups) {\n\t\t\treturn [];\n\t\t}\n\t\treturn (\n\t\t\tfollowups\n\t\t\t\t// Filter out \"command followups\" from older providers\n\t\t\t\t.filter((f) => !(f && \"commandId\" in f))\n\t\t\t\t// Filter out followups from older providers before 'message' changed to 'prompt'\n\t\t\t\t.filter((f) => !(f && \"message\" in f))\n\t\t);\n\t}\n\n\tasync provideWelcomeMessage(\n\t\tlocation: vscode.ChatLocation,\n\t\ttoken: CancellationToken,\n\t): Promise<(string | IMarkdownString)[] | undefined> {\n\t\tif (!this._welcomeMessageProvider) {\n\t\t\treturn [];\n\t\t}\n\t\tconst content =\n\t\t\tawait this._welcomeMessageProvider.provideWelcomeMessage(\n\t\t\t\tlocation,\n\t\t\t\ttoken,\n\t\t\t);\n\t\tif (!content) {\n\t\t\treturn [];\n\t\t}\n\t\treturn content.map((item) => {\n\t\t\tif (typeof item === \"string\") {\n\t\t\t\treturn item;\n\t\t\t} else {\n\t\t\t\treturn typeConvert.MarkdownString.from(item);\n\t\t\t}\n\t\t});\n\t}\n\n\tasync provideTitle(\n\t\tcontext: vscode.ChatContext,\n\t\ttoken: CancellationToken,\n\t): Promise<string | undefined> {\n\t\tif (!this._titleProvider) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn (\n\t\t\t(await this._titleProvider.provideChatTitle(context, token)) ??\n\t\t\tundefined\n\t\t);\n\t}\n\n\tasync provideSampleQuestions(\n\t\tlocation: vscode.ChatLocation,\n\t\ttoken: CancellationToken,\n\t): Promise<vscode.ChatFollowup[]> {\n\t\tif (\n\t\t\t!this._welcomeMessageProvider ||\n\t\t\t!this._welcomeMessageProvider.provideSampleQuestions\n\t\t) {\n\t\t\treturn [];\n\t\t}\n\t\tconst content =\n\t\t\tawait this._welcomeMessageProvider.provideSampleQuestions(\n\t\t\t\tlocation,\n\t\t\t\ttoken,\n\t\t\t);\n\t\tif (!content) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn content;\n\t}\n\n\tget apiAgent(): vscode.ChatParticipant {\n\t\tlet disposed = false;\n\t\tlet updateScheduled = false;\n\t\tconst updateMetadataSoon = () => {\n\t\t\tif (disposed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (updateScheduled) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tupdateScheduled = true;\n\t\t\tqueueMicrotask(() => {\n\t\t\t\tthis._proxy.$updateAgent(this._handle, {\n\t\t\t\t\ticon: this._iconPath\n\t\t\t\t\t\t? this._iconPath instanceof URI\n\t\t\t\t\t\t\t? this._iconPath\n\t\t\t\t\t\t\t: \"light\" in this._iconPath\n\t\t\t\t\t\t\t\t? this._iconPath.light\n\t\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t\t: undefined,\n\t\t\t\t\ticonDark: this._iconPath\n\t\t\t\t\t\t? \"dark\" in this._iconPath\n\t\t\t\t\t\t\t? this._iconPath.dark\n\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t\t: undefined,\n\t\t\t\t\tthemeIcon:\n\t\t\t\t\t\tthis._iconPath instanceof extHostTypes.ThemeIcon\n\t\t\t\t\t\t\t? this._iconPath\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\thasFollowups: this._followupProvider !== undefined,\n\t\t\t\t\tisSecondary: this._isSecondary,\n\t\t\t\t\thelpTextPrefix:\n\t\t\t\t\t\t!this._helpTextPrefix ||\n\t\t\t\t\t\ttypeof this._helpTextPrefix === \"string\"\n\t\t\t\t\t\t\t? this._helpTextPrefix\n\t\t\t\t\t\t\t: typeConvert.MarkdownString.from(\n\t\t\t\t\t\t\t\t\tthis._helpTextPrefix,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\thelpTextVariablesPrefix:\n\t\t\t\t\t\t!this._helpTextVariablesPrefix ||\n\t\t\t\t\t\ttypeof this._helpTextVariablesPrefix === \"string\"\n\t\t\t\t\t\t\t? this._helpTextVariablesPrefix\n\t\t\t\t\t\t\t: typeConvert.MarkdownString.from(\n\t\t\t\t\t\t\t\t\tthis._helpTextVariablesPrefix,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\thelpTextPostfix:\n\t\t\t\t\t\t!this._helpTextPostfix ||\n\t\t\t\t\t\ttypeof this._helpTextPostfix === \"string\"\n\t\t\t\t\t\t\t? this._helpTextPostfix\n\t\t\t\t\t\t\t: typeConvert.MarkdownString.from(\n\t\t\t\t\t\t\t\t\tthis._helpTextPostfix,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\tsupportIssueReporting: this._supportIssueReporting,\n\t\t\t\t\trequester: this._requester,\n\t\t\t\t\tsupportsSlowVariables: this._supportsSlowReferences,\n\t\t\t\t});\n\t\t\t\tupdateScheduled = false;\n\t\t\t});\n\t\t};\n\n\t\tconst that = this;\n\t\treturn {\n\t\t\tget id() {\n\t\t\t\treturn that.id;\n\t\t\t},\n\t\t\tget iconPath() {\n\t\t\t\treturn that._iconPath;\n\t\t\t},\n\t\t\tset iconPath(v) {\n\t\t\t\tthat._iconPath = v;\n\t\t\t\tupdateMetadataSoon();\n\t\t\t},\n\t\t\tget requestHandler() {\n\t\t\t\treturn that._requestHandler;\n\t\t\t},\n\t\t\tset requestHandler(v) {\n\t\t\t\tassertType(typeof v === \"function\", \"Invalid request handler\");\n\t\t\t\tthat._requestHandler = v;\n\t\t\t},\n\t\t\tget followupProvider() {\n\t\t\t\treturn that._followupProvider;\n\t\t\t},\n\t\t\tset followupProvider(v) {\n\t\t\t\tthat._followupProvider = v;\n\t\t\t\tupdateMetadataSoon();\n\t\t\t},\n\t\t\tget helpTextPrefix() {\n\t\t\t\tcheckProposedApiEnabled(\n\t\t\t\t\tthat.extension,\n\t\t\t\t\t\"defaultChatParticipant\",\n\t\t\t\t);\n\t\t\t\treturn that._helpTextPrefix;\n\t\t\t},\n\t\t\tset helpTextPrefix(v) {\n\t\t\t\tcheckProposedApiEnabled(\n\t\t\t\t\tthat.extension,\n\t\t\t\t\t\"defaultChatParticipant\",\n\t\t\t\t);\n\t\t\t\tthat._helpTextPrefix = v;\n\t\t\t\tupdateMetadataSoon();\n\t\t\t},\n\t\t\tget helpTextVariablesPrefix() {\n\t\t\t\tcheckProposedApiEnabled(\n\t\t\t\t\tthat.extension,\n\t\t\t\t\t\"defaultChatParticipant\",\n\t\t\t\t);\n\t\t\t\treturn that._helpTextVariablesPrefix;\n\t\t\t},\n\t\t\tset helpTextVariablesPrefix(v) {\n\t\t\t\tcheckProposedApiEnabled(\n\t\t\t\t\tthat.extension,\n\t\t\t\t\t\"defaultChatParticipant\",\n\t\t\t\t);\n\t\t\t\tthat._helpTextVariablesPrefix = v;\n\t\t\t\tupdateMetadataSoon();\n\t\t\t},\n\t\t\tget helpTextPostfix() {\n\t\t\t\tcheckProposedApiEnabled(\n\t\t\t\t\tthat.extension,\n\t\t\t\t\t\"defaultChatParticipant\",\n\t\t\t\t);\n\t\t\t\treturn that._helpTextPostfix;\n\t\t\t},\n\t\t\tset helpTextPostfix(v) {\n\t\t\t\tcheckProposedApiEnabled(\n\t\t\t\t\tthat.extension,\n\t\t\t\t\t\"defaultChatParticipant\",\n\t\t\t\t);\n\t\t\t\tthat._helpTextPostfix = v;\n\t\t\t\tupdateMetadataSoon();\n\t\t\t},\n\t\t\tget isSecondary() {\n\t\t\t\tcheckProposedApiEnabled(\n\t\t\t\t\tthat.extension,\n\t\t\t\t\t\"defaultChatParticipant\",\n\t\t\t\t);\n\t\t\t\treturn that._isSecondary;\n\t\t\t},\n\t\t\tset isSecondary(v) {\n\t\t\t\tcheckProposedApiEnabled(\n\t\t\t\t\tthat.extension,\n\t\t\t\t\t\"defaultChatParticipant\",\n\t\t\t\t);\n\t\t\t\tthat._isSecondary = v;\n\t\t\t\tupdateMetadataSoon();\n\t\t\t},\n\t\t\tget supportIssueReporting() {\n\t\t\t\tcheckProposedApiEnabled(\n\t\t\t\t\tthat.extension,\n\t\t\t\t\t\"chatParticipantPrivate\",\n\t\t\t\t);\n\t\t\t\treturn that._supportIssueReporting;\n\t\t\t},\n\t\t\tset supportIssueReporting(v) {\n\t\t\t\tcheckProposedApiEnabled(\n\t\t\t\t\tthat.extension,\n\t\t\t\t\t\"chatParticipantPrivate\",\n\t\t\t\t);\n\t\t\t\tthat._supportIssueReporting = v;\n\t\t\t\tupdateMetadataSoon();\n\t\t\t},\n\t\t\tget onDidReceiveFeedback() {\n\t\t\t\treturn that._onDidReceiveFeedback.event;\n\t\t\t},\n\t\t\tset participantVariableProvider(v) {\n\t\t\t\tcheckProposedApiEnabled(\n\t\t\t\t\tthat.extension,\n\t\t\t\t\t\"chatParticipantAdditions\",\n\t\t\t\t);\n\t\t\t\tthat._agentVariableProvider = v;\n\t\t\t\tif (v) {\n\t\t\t\t\tif (!v.triggerCharacters.length) {\n\t\t\t\t\t\tthrow new Error(\"triggerCharacters are required\");\n\t\t\t\t\t}\n\n\t\t\t\t\tthat._proxy.$registerAgentCompletionsProvider(\n\t\t\t\t\t\tthat._handle,\n\t\t\t\t\t\tthat.id,\n\t\t\t\t\t\tv.triggerCharacters,\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tthat._proxy.$unregisterAgentCompletionsProvider(\n\t\t\t\t\t\tthat._handle,\n\t\t\t\t\t\tthat.id,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\tget participantVariableProvider() {\n\t\t\t\tcheckProposedApiEnabled(\n\t\t\t\t\tthat.extension,\n\t\t\t\t\t\"chatParticipantAdditions\",\n\t\t\t\t);\n\t\t\t\treturn that._agentVariableProvider;\n\t\t\t},\n\t\t\tset welcomeMessageProvider(v) {\n\t\t\t\tcheckProposedApiEnabled(\n\t\t\t\t\tthat.extension,\n\t\t\t\t\t\"defaultChatParticipant\",\n\t\t\t\t);\n\t\t\t\tthat._welcomeMessageProvider = v;\n\t\t\t\tupdateMetadataSoon();\n\t\t\t},\n\t\t\tget welcomeMessageProvider() {\n\t\t\t\tcheckProposedApiEnabled(\n\t\t\t\t\tthat.extension,\n\t\t\t\t\t\"defaultChatParticipant\",\n\t\t\t\t);\n\t\t\t\treturn that._welcomeMessageProvider;\n\t\t\t},\n\t\t\tset titleProvider(v) {\n\t\t\t\tcheckProposedApiEnabled(\n\t\t\t\t\tthat.extension,\n\t\t\t\t\t\"defaultChatParticipant\",\n\t\t\t\t);\n\t\t\t\tthat._titleProvider = v;\n\t\t\t\tupdateMetadataSoon();\n\t\t\t},\n\t\t\tget titleProvider() {\n\t\t\t\tcheckProposedApiEnabled(\n\t\t\t\t\tthat.extension,\n\t\t\t\t\t\"defaultChatParticipant\",\n\t\t\t\t);\n\t\t\t\treturn that._titleProvider;\n\t\t\t},\n\t\t\tonDidPerformAction: isProposedApiEnabled(\n\t\t\t\tthis.extension,\n\t\t\t\t\"chatParticipantAdditions\",\n\t\t\t)\n\t\t\t\t? this._onDidPerformAction.event\n\t\t\t\t: undefined!,\n\t\t\tset requester(v) {\n\t\t\t\tthat._requester = v;\n\t\t\t\tupdateMetadataSoon();\n\t\t\t},\n\t\t\tget requester() {\n\t\t\t\treturn that._requester;\n\t\t\t},\n\t\t\tset supportsSlowReferences(v) {\n\t\t\t\tcheckProposedApiEnabled(\n\t\t\t\t\tthat.extension,\n\t\t\t\t\t\"chatParticipantPrivate\",\n\t\t\t\t);\n\t\t\t\tthat._supportsSlowReferences = v;\n\t\t\t\tupdateMetadataSoon();\n\t\t\t},\n\t\t\tget supportsSlowReferences() {\n\t\t\t\tcheckProposedApiEnabled(\n\t\t\t\t\tthat.extension,\n\t\t\t\t\t\"chatParticipantPrivate\",\n\t\t\t\t);\n\t\t\t\treturn that._supportsSlowReferences;\n\t\t\t},\n\t\t\tdispose() {\n\t\t\t\tdisposed = true;\n\t\t\t\tthat._followupProvider = undefined;\n\t\t\t\tthat._onDidReceiveFeedback.dispose();\n\t\t\t\tthat._proxy.$unregisterAgent(that._handle);\n\t\t\t},\n\t\t} satisfies vscode.ChatParticipant;\n\t}\n\n\tinvoke(\n\t\trequest: vscode.ChatRequest,\n\t\tcontext: vscode.ChatContext,\n\t\tresponse: vscode.ChatResponseStream,\n\t\ttoken: CancellationToken,\n\t): vscode.ProviderResult<vscode.ChatResult | void> {\n\t\treturn this._requestHandler(request, context, response, token);\n\t}\n}\n"],
  "mappings": "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",
  "names": ["throwIfDone"]
}
