{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostChatAgents2.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { coalesce } from '../../../base/common/arrays.js';\nimport { raceCancellation } from '../../../base/common/async.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { toErrorMessage } from '../../../base/common/errorMessage.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { IMarkdownString } from '../../../base/common/htmlContent.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { Disposable, DisposableMap, DisposableStore, toDisposable } from '../../../base/common/lifecycle.js';\nimport { revive } from '../../../base/common/marshalling.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\nimport { assertType } from '../../../base/common/types.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Location } from '../../../editor/common/languages.js';\nimport { ExtensionIdentifier, IExtensionDescription } from '../../../platform/extensions/common/extensions.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { ExtHostChatAgentsShape2, IChatAgentCompletionItem, IChatAgentHistoryEntryDto, IChatProgressDto, IExtensionChatAgentMetadata, IMainContext, MainContext, MainThreadChatAgentsShape2 } from './extHost.protocol.js';\nimport { CommandsConverter, ExtHostCommands } from './extHostCommands.js';\nimport { ExtHostDocuments } from './extHostDocuments.js';\nimport * as typeConvert from './extHostTypeConverters.js';\nimport * as extHostTypes from './extHostTypes.js';\nimport { ChatAgentLocation, IChatAgentRequest, IChatAgentResult, IChatAgentResultTimings } from '../../contrib/chat/common/chatAgents.js';\nimport { ChatAgentVoteDirection, IChatContentReference, IChatFollowup, IChatResponseErrorDetails, IChatUserActionEvent, IChatVoteAction } from '../../contrib/chat/common/chatService.js';\nimport { checkProposedApiEnabled, isProposedApiEnabled } from '../../services/extensions/common/extensions.js';\nimport { Dto } from '../../services/extensions/common/proxyIdentifier.js';\nimport type * as vscode from 'vscode';\n\nclass ChatAgentResponseStream {\n\n\tprivate _stopWatch = StopWatch.create(false);\n\tprivate _isClosed: boolean = false;\n\tprivate _firstProgress: number | undefined;\n\tprivate _apiObject: vscode.ChatResponseStream | undefined;\n\n\tconstructor(\n\t\tprivate readonly _extension: IExtensionDescription,\n\t\tprivate readonly _request: IChatAgentRequest,\n\t\tprivate readonly _proxy: MainThreadChatAgentsShape2,\n\t\tprivate readonly _commandsConverter: CommandsConverter,\n\t\tprivate readonly _sessionDisposables: DisposableStore\n\t) { }\n\n\tclose() {\n\t\tthis._isClosed = true;\n\t}\n\n\tget timings(): IChatAgentResultTimings {\n\t\treturn {\n\t\t\tfirstProgress: this._firstProgress,\n\t\t\ttotalElapsed: this._stopWatch.elapsed()\n\t\t};\n\t}\n\n\tget apiObject() {\n\n\t\tif (!this._apiObject) {\n\n\t\t\tconst that = this;\n\t\t\tthis._stopWatch.reset();\n\n\t\t\tfunction throwIfDone(source: Function | undefined) {\n\t\t\t\tif (that._isClosed) {\n\t\t\t\t\tconst err = new Error('Response stream has been closed');\n\t\t\t\t\tError.captureStackTrace(err, source);\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst _report = (progress: IChatProgressDto, task?: (progress: vscode.Progress<vscode.ChatResponseWarningPart | vscode.ChatResponseReferencePart>) => Thenable<string | void>) => {\n\t\t\t\t// Measure the time to the first progress update with real markdown content\n\t\t\t\tif (typeof this._firstProgress === 'undefined' && (progress.kind === 'markdownContent' || progress.kind === 'markdownVuln')) {\n\t\t\t\t\tthis._firstProgress = this._stopWatch.elapsed();\n\t\t\t\t}\n\n\t\t\t\tif (task) {\n\t\t\t\t\tconst progressReporterPromise = this._proxy.$handleProgressChunk(this._request.requestId, progress);\n\t\t\t\t\tconst progressReporter = {\n\t\t\t\t\t\treport: (p: vscode.ChatResponseWarningPart | vscode.ChatResponseReferencePart) => {\n\t\t\t\t\t\t\tprogressReporterPromise?.then((handle) => {\n\t\t\t\t\t\t\t\tif (handle) {\n\t\t\t\t\t\t\t\t\tif (extHostTypes.MarkdownString.isMarkdownString(p.value)) {\n\t\t\t\t\t\t\t\t\t\tthis._proxy.$handleProgressChunk(this._request.requestId, typeConvert.ChatResponseWarningPart.from(<vscode.ChatResponseWarningPart>p), handle);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tthis._proxy.$handleProgressChunk(this._request.requestId, typeConvert.ChatResponseReferencePart.from(<vscode.ChatResponseReferencePart>p), handle);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tPromise.all([progressReporterPromise, task?.(progressReporter)]).then(([handle, res]) => {\n\t\t\t\t\t\tif (handle !== undefined) {\n\t\t\t\t\t\t\tthis._proxy.$handleProgressChunk(this._request.requestId, typeConvert.ChatTaskResult.from(res), handle);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis._proxy.$handleProgressChunk(this._request.requestId, progress);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis._apiObject = {\n\t\t\t\tmarkdown(value) {\n\t\t\t\t\tthrowIfDone(this.markdown);\n\t\t\t\t\tconst part = new extHostTypes.ChatResponseMarkdownPart(value);\n\t\t\t\t\tconst dto = typeConvert.ChatResponseMarkdownPart.from(part);\n\t\t\t\t\t_report(dto);\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tmarkdownWithVulnerabilities(value, vulnerabilities) {\n\t\t\t\t\tthrowIfDone(this.markdown);\n\t\t\t\t\tif (vulnerabilities) {\n\t\t\t\t\t\tcheckProposedApiEnabled(that._extension, 'chatParticipantAdditions');\n\t\t\t\t\t}\n\n\t\t\t\t\tconst part = new extHostTypes.ChatResponseMarkdownWithVulnerabilitiesPart(value, vulnerabilities);\n\t\t\t\t\tconst dto = typeConvert.ChatResponseMarkdownWithVulnerabilitiesPart.from(part);\n\t\t\t\t\t_report(dto);\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tcodeblockUri(value) {\n\t\t\t\t\tthrowIfDone(this.codeblockUri);\n\t\t\t\t\tcheckProposedApiEnabled(that._extension, 'chatParticipantAdditions');\n\t\t\t\t\tconst part = new extHostTypes.ChatResponseCodeblockUriPart(value);\n\t\t\t\t\tconst dto = typeConvert.ChatResponseCodeblockUriPart.from(part);\n\t\t\t\t\t_report(dto);\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tfiletree(value, baseUri) {\n\t\t\t\t\tthrowIfDone(this.filetree);\n\t\t\t\t\tconst part = new extHostTypes.ChatResponseFileTreePart(value, baseUri);\n\t\t\t\t\tconst dto = typeConvert.ChatResponseFilesPart.from(part);\n\t\t\t\t\t_report(dto);\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tanchor(value, title?: string) {\n\t\t\t\t\tthrowIfDone(this.anchor);\n\t\t\t\t\tconst part = new extHostTypes.ChatResponseAnchorPart(value, title);\n\t\t\t\t\tconst dto = typeConvert.ChatResponseAnchorPart.from(part);\n\t\t\t\t\t_report(dto);\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tbutton(value) {\n\t\t\t\t\tthrowIfDone(this.anchor);\n\t\t\t\t\tconst part = new extHostTypes.ChatResponseCommandButtonPart(value);\n\t\t\t\t\tconst dto = typeConvert.ChatResponseCommandButtonPart.from(part, that._commandsConverter, that._sessionDisposables);\n\t\t\t\t\t_report(dto);\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tprogress(value, task?: ((progress: vscode.Progress<vscode.ChatResponseWarningPart>) => Thenable<string | void>)) {\n\t\t\t\t\tthrowIfDone(this.progress);\n\t\t\t\t\tconst part = new extHostTypes.ChatResponseProgressPart2(value, task);\n\t\t\t\t\tconst dto = task ? typeConvert.ChatTask.from(part) : typeConvert.ChatResponseProgressPart.from(part);\n\t\t\t\t\t_report(dto, task);\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\twarning(value) {\n\t\t\t\t\tthrowIfDone(this.progress);\n\t\t\t\t\tcheckProposedApiEnabled(that._extension, 'chatParticipantAdditions');\n\t\t\t\t\tconst part = new extHostTypes.ChatResponseWarningPart(value);\n\t\t\t\t\tconst dto = typeConvert.ChatResponseWarningPart.from(part);\n\t\t\t\t\t_report(dto);\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\treference(value, iconPath) {\n\t\t\t\t\treturn this.reference2(value, iconPath);\n\t\t\t\t},\n\t\t\t\treference2(value, iconPath, options) {\n\t\t\t\t\tthrowIfDone(this.reference);\n\n\t\t\t\t\tif (typeof value === 'object' && 'variableName' in value) {\n\t\t\t\t\t\tcheckProposedApiEnabled(that._extension, 'chatParticipantAdditions');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (typeof value === 'object' && 'variableName' in value && !value.value) {\n\t\t\t\t\t\t// The participant used this variable. Does that variable have any references to pull in?\n\t\t\t\t\t\tconst matchingVarData = that._request.variables.variables.find(v => v.name === value.variableName);\n\t\t\t\t\t\tif (matchingVarData) {\n\t\t\t\t\t\t\tlet references: Dto<IChatContentReference>[] | undefined;\n\t\t\t\t\t\t\tif (matchingVarData.references?.length) {\n\t\t\t\t\t\t\t\treferences = matchingVarData.references.map(r => ({\n\t\t\t\t\t\t\t\t\tkind: 'reference',\n\t\t\t\t\t\t\t\t\treference: { variableName: value.variableName, value: r.reference as URI | Location }\n\t\t\t\t\t\t\t\t} satisfies IChatContentReference));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Participant sent a variableName reference but the variable produced no references. Show variable reference with no value\n\t\t\t\t\t\t\t\tconst part = new extHostTypes.ChatResponseReferencePart(value, iconPath, options);\n\t\t\t\t\t\t\t\tconst dto = typeConvert.ChatResponseReferencePart.from(part);\n\t\t\t\t\t\t\t\treferences = [dto];\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treferences.forEach(r => _report(r));\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Something went wrong- that variable doesn't actually exist\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst part = new extHostTypes.ChatResponseReferencePart(value, iconPath, options);\n\t\t\t\t\t\tconst dto = typeConvert.ChatResponseReferencePart.from(part);\n\t\t\t\t\t\t_report(dto);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tcodeCitation(value: vscode.Uri, license: string, snippet: string): void {\n\t\t\t\t\tthrowIfDone(this.codeCitation);\n\t\t\t\t\tcheckProposedApiEnabled(that._extension, 'chatParticipantAdditions');\n\n\t\t\t\t\tconst part = new extHostTypes.ChatResponseCodeCitationPart(value, license, snippet);\n\t\t\t\t\tconst dto = typeConvert.ChatResponseCodeCitationPart.from(part);\n\t\t\t\t\t_report(dto);\n\t\t\t\t},\n\t\t\t\ttextEdit(target, edits) {\n\t\t\t\t\tthrowIfDone(this.textEdit);\n\t\t\t\t\tcheckProposedApiEnabled(that._extension, 'chatParticipantAdditions');\n\n\t\t\t\t\tconst part = new extHostTypes.ChatResponseTextEditPart(target, edits);\n\t\t\t\t\tconst dto = typeConvert.ChatResponseTextEditPart.from(part);\n\t\t\t\t\t_report(dto);\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tdetectedParticipant(participant, command) {\n\t\t\t\t\tthrowIfDone(this.detectedParticipant);\n\t\t\t\t\tcheckProposedApiEnabled(that._extension, 'chatParticipantAdditions');\n\n\t\t\t\t\tconst part = new extHostTypes.ChatResponseDetectedParticipantPart(participant, command);\n\t\t\t\t\tconst dto = typeConvert.ChatResponseDetectedParticipantPart.from(part);\n\t\t\t\t\t_report(dto);\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tconfirmation(title, message, data, buttons) {\n\t\t\t\t\tthrowIfDone(this.confirmation);\n\t\t\t\t\tcheckProposedApiEnabled(that._extension, 'chatParticipantAdditions');\n\n\t\t\t\t\tconst part = new extHostTypes.ChatResponseConfirmationPart(title, message, data, buttons);\n\t\t\t\t\tconst dto = typeConvert.ChatResponseConfirmationPart.from(part);\n\t\t\t\t\t_report(dto);\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tpush(part) {\n\t\t\t\t\tthrowIfDone(this.push);\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tpart instanceof extHostTypes.ChatResponseTextEditPart ||\n\t\t\t\t\t\tpart instanceof extHostTypes.ChatResponseMarkdownWithVulnerabilitiesPart ||\n\t\t\t\t\t\tpart instanceof extHostTypes.ChatResponseDetectedParticipantPart ||\n\t\t\t\t\t\tpart instanceof extHostTypes.ChatResponseWarningPart ||\n\t\t\t\t\t\tpart instanceof extHostTypes.ChatResponseConfirmationPart ||\n\t\t\t\t\t\tpart instanceof extHostTypes.ChatResponseCodeCitationPart ||\n\t\t\t\t\t\tpart instanceof extHostTypes.ChatResponseMovePart\n\t\t\t\t\t) {\n\t\t\t\t\t\tcheckProposedApiEnabled(that._extension, 'chatParticipantAdditions');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (part instanceof extHostTypes.ChatResponseReferencePart) {\n\t\t\t\t\t\t// Ensure variable reference values get fixed up\n\t\t\t\t\t\tthis.reference2(part.value, part.iconPath, part.options);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst dto = typeConvert.ChatResponsePart.from(part, that._commandsConverter, that._sessionDisposables);\n\t\t\t\t\t\t_report(dto);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\treturn this._apiObject;\n\t}\n}\n\nexport class ExtHostChatAgents2 extends Disposable implements ExtHostChatAgentsShape2 {\n\n\tprivate static _idPool = 0;\n\n\tprivate readonly _agents = new Map<number, ExtHostChatAgent>();\n\tprivate readonly _proxy: MainThreadChatAgentsShape2;\n\n\tprivate static _participantDetectionProviderIdPool = 0;\n\tprivate readonly _participantDetectionProviders = new Map<number, vscode.ChatParticipantDetectionProvider>();\n\n\tprivate readonly _sessionDisposables: DisposableMap<string, DisposableStore> = this._register(new DisposableMap());\n\tprivate readonly _completionDisposables: DisposableMap<number, DisposableStore> = this._register(new DisposableMap());\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\tprivate readonly _logService: ILogService,\n\t\tprivate readonly _commands: ExtHostCommands,\n\t\tprivate readonly _documents: ExtHostDocuments\n\t) {\n\t\tsuper();\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadChatAgents2);\n\t}\n\n\ttransferActiveChat(newWorkspace: vscode.Uri): void {\n\t\tthis._proxy.$transferActiveChatSession(newWorkspace);\n\t}\n\n\tcreateChatAgent(extension: IExtensionDescription, id: string, handler: vscode.ChatExtendedRequestHandler): vscode.ChatParticipant {\n\t\tconst handle = ExtHostChatAgents2._idPool++;\n\t\tconst agent = new ExtHostChatAgent(extension, id, this._proxy, handle, handler);\n\t\tthis._agents.set(handle, agent);\n\n\t\tthis._proxy.$registerAgent(handle, extension.identifier, id, {}, undefined);\n\t\treturn agent.apiAgent;\n\t}\n\n\tcreateDynamicChatAgent(extension: IExtensionDescription, id: string, dynamicProps: vscode.DynamicChatParticipantProps, handler: vscode.ChatExtendedRequestHandler): vscode.ChatParticipant {\n\t\tconst handle = ExtHostChatAgents2._idPool++;\n\t\tconst agent = new ExtHostChatAgent(extension, id, this._proxy, handle, handler);\n\t\tthis._agents.set(handle, agent);\n\n\t\tthis._proxy.$registerAgent(handle, extension.identifier, id, { isSticky: true } satisfies IExtensionChatAgentMetadata, dynamicProps);\n\t\treturn agent.apiAgent;\n\t}\n\n\tregisterChatParticipantDetectionProvider(provider: vscode.ChatParticipantDetectionProvider): vscode.Disposable {\n\t\tconst handle = ExtHostChatAgents2._participantDetectionProviderIdPool++;\n\t\tthis._participantDetectionProviders.set(handle, provider);\n\t\tthis._proxy.$registerChatParticipantDetectionProvider(handle);\n\t\treturn toDisposable(() => {\n\t\t\tthis._participantDetectionProviders.delete(handle);\n\t\t\tthis._proxy.$unregisterChatParticipantDetectionProvider(handle);\n\t\t});\n\t}\n\n\tasync $detectChatParticipant(handle: number, requestDto: Dto<IChatAgentRequest>, context: { history: IChatAgentHistoryEntryDto[] }, options: { location: ChatAgentLocation; participants?: vscode.ChatParticipantMetadata[] }, token: CancellationToken): Promise<vscode.ChatParticipantDetectionResult | null | undefined> {\n\t\tconst { request, location, history } = await this._createRequest(requestDto, context);\n\n\t\tconst provider = this._participantDetectionProviders.get(handle);\n\t\tif (!provider) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn provider.provideParticipantDetection(\n\t\t\ttypeConvert.ChatAgentRequest.to(request, location),\n\t\t\t{ history },\n\t\t\t{ participants: options.participants, location: typeConvert.ChatLocation.to(options.location) },\n\t\t\ttoken\n\t\t);\n\t}\n\n\tprivate async _createRequest(requestDto: Dto<IChatAgentRequest>, context: { history: IChatAgentHistoryEntryDto[] }) {\n\t\tconst request = revive<IChatAgentRequest>(requestDto);\n\t\tconst convertedHistory = await this.prepareHistoryTurns(request.agentId, context);\n\n\t\t// in-place converting for location-data\n\t\tlet location: vscode.ChatRequestEditorData | vscode.ChatRequestNotebookData | undefined;\n\t\tif (request.locationData?.type === ChatAgentLocation.Editor) {\n\t\t\t// editor data\n\t\t\tconst document = this._documents.getDocument(request.locationData.document);\n\t\t\tlocation = new extHostTypes.ChatRequestEditorData(document, typeConvert.Selection.to(request.locationData.selection), typeConvert.Range.to(request.locationData.wholeRange));\n\n\t\t} else if (request.locationData?.type === ChatAgentLocation.Notebook) {\n\t\t\t// notebook data\n\t\t\tconst cell = this._documents.getDocument(request.locationData.sessionInputUri);\n\t\t\tlocation = new extHostTypes.ChatRequestNotebookData(cell);\n\n\t\t} else if (request.locationData?.type === ChatAgentLocation.Terminal) {\n\t\t\t// TBD\n\t\t}\n\n\t\treturn { request, location, history: convertedHistory };\n\t}\n\n\tasync $invokeAgent(handle: number, requestDto: Dto<IChatAgentRequest>, context: { history: IChatAgentHistoryEntryDto[] }, token: CancellationToken): Promise<IChatAgentResult | undefined> {\n\t\tconst agent = this._agents.get(handle);\n\t\tif (!agent) {\n\t\t\tthrow new Error(`[CHAT](${handle}) CANNOT invoke agent because the agent is not registered`);\n\t\t}\n\n\t\tlet stream: ChatAgentResponseStream | undefined;\n\n\t\ttry {\n\t\t\tconst { request, location, history } = await this._createRequest(requestDto, context);\n\n\t\t\t// Init session disposables\n\t\t\tlet sessionDisposables = this._sessionDisposables.get(request.sessionId);\n\t\t\tif (!sessionDisposables) {\n\t\t\t\tsessionDisposables = new DisposableStore();\n\t\t\t\tthis._sessionDisposables.set(request.sessionId, sessionDisposables);\n\t\t\t}\n\n\t\t\tstream = new ChatAgentResponseStream(agent.extension, request, this._proxy, this._commands.converter, sessionDisposables);\n\n\t\t\tconst task = agent.invoke(\n\t\t\t\ttypeConvert.ChatAgentRequest.to(request, location),\n\t\t\t\t{ history },\n\t\t\t\tstream.apiObject,\n\t\t\t\ttoken\n\t\t\t);\n\n\t\t\treturn await raceCancellation(Promise.resolve(task).then((result) => {\n\t\t\t\tif (result?.metadata) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tJSON.stringify(result.metadata);\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tconst msg = `result.metadata MUST be JSON.stringify-able. Got error: ${err.message}`;\n\t\t\t\t\t\tthis._logService.error(`[${agent.extension.identifier.value}] [@${agent.id}] ${msg}`, agent.extension);\n\t\t\t\t\t\treturn { errorDetails: { message: msg }, timings: stream?.timings, nextQuestion: result.nextQuestion };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet errorDetails: IChatResponseErrorDetails | undefined;\n\t\t\t\tif (result?.errorDetails) {\n\t\t\t\t\terrorDetails = {\n\t\t\t\t\t\t...result.errorDetails,\n\t\t\t\t\t\tresponseIsIncomplete: true\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tif (errorDetails?.responseIsRedacted) {\n\t\t\t\t\tcheckProposedApiEnabled(agent.extension, 'chatParticipantPrivate');\n\t\t\t\t}\n\n\t\t\t\treturn { errorDetails, timings: stream?.timings, metadata: result?.metadata, nextQuestion: result?.nextQuestion } satisfies IChatAgentResult;\n\t\t\t}), token);\n\t\t} catch (e) {\n\t\t\tthis._logService.error(e, agent.extension);\n\n\t\t\tif (e instanceof extHostTypes.LanguageModelError && e.cause) {\n\t\t\t\te = e.cause;\n\t\t\t}\n\n\t\t\treturn { errorDetails: { message: toErrorMessage(e), responseIsIncomplete: true } };\n\n\t\t} finally {\n\t\t\tstream?.close();\n\t\t}\n\t}\n\n\tprivate async prepareHistoryTurns(agentId: string, context: { history: IChatAgentHistoryEntryDto[] }): Promise<(vscode.ChatRequestTurn | vscode.ChatResponseTurn)[]> {\n\t\tconst res: (vscode.ChatRequestTurn | vscode.ChatResponseTurn)[] = [];\n\n\t\tfor (const h of context.history) {\n\t\t\tconst ehResult = typeConvert.ChatAgentResult.to(h.result);\n\t\t\tconst result: vscode.ChatResult = agentId === h.request.agentId ?\n\t\t\t\tehResult :\n\t\t\t\t{ ...ehResult, metadata: undefined };\n\n\t\t\t// REQUEST turn\n\t\t\tconst varsWithoutTools = h.request.variables.variables\n\t\t\t\t.filter(v => !v.isTool)\n\t\t\t\t.map(typeConvert.ChatPromptReference.to);\n\t\t\tconst toolReferences = h.request.variables.variables\n\t\t\t\t.filter(v => v.isTool)\n\t\t\t\t.map(typeConvert.ChatLanguageModelToolReference.to);\n\t\t\tconst turn = new extHostTypes.ChatRequestTurn(h.request.message, h.request.command, varsWithoutTools, h.request.agentId);\n\t\t\tturn.toolReferences = toolReferences;\n\t\t\tres.push(turn);\n\n\t\t\t// RESPONSE turn\n\t\t\tconst parts = coalesce(h.response.map(r => typeConvert.ChatResponsePart.toContent(r, this._commands.converter)));\n\t\t\tres.push(new extHostTypes.ChatResponseTurn(parts, result, h.request.agentId, h.request.command));\n\t\t}\n\n\t\treturn res;\n\t}\n\n\t$releaseSession(sessionId: string): void {\n\t\tthis._sessionDisposables.deleteAndDispose(sessionId);\n\t}\n\n\tasync $provideFollowups(requestDto: Dto<IChatAgentRequest>, handle: number, result: IChatAgentResult, context: { history: IChatAgentHistoryEntryDto[] }, token: CancellationToken): Promise<IChatFollowup[]> {\n\t\tconst agent = this._agents.get(handle);\n\t\tif (!agent) {\n\t\t\treturn Promise.resolve([]);\n\t\t}\n\n\t\tconst request = revive<IChatAgentRequest>(requestDto);\n\t\tconst convertedHistory = await this.prepareHistoryTurns(agent.id, context);\n\n\t\tconst ehResult = typeConvert.ChatAgentResult.to(result);\n\t\treturn (await agent.provideFollowups(ehResult, { history: convertedHistory }, token))\n\t\t\t.filter(f => {\n\t\t\t\t// The followup must refer to a participant that exists from the same extension\n\t\t\t\tconst isValid = !f.participant || Iterable.some(\n\t\t\t\t\tthis._agents.values(),\n\t\t\t\t\ta => a.id === f.participant && ExtensionIdentifier.equals(a.extension.identifier, agent.extension.identifier));\n\t\t\t\tif (!isValid) {\n\t\t\t\t\tthis._logService.warn(`[@${agent.id}] ChatFollowup refers to an unknown participant: ${f.participant}`);\n\t\t\t\t}\n\t\t\t\treturn isValid;\n\t\t\t})\n\t\t\t.map(f => typeConvert.ChatFollowup.from(f, request));\n\t}\n\n\t$acceptFeedback(handle: number, result: IChatAgentResult, voteAction: IChatVoteAction): void {\n\t\tconst agent = this._agents.get(handle);\n\t\tif (!agent) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst ehResult = typeConvert.ChatAgentResult.to(result);\n\t\tlet kind: extHostTypes.ChatResultFeedbackKind;\n\t\tswitch (voteAction.direction) {\n\t\t\tcase ChatAgentVoteDirection.Down:\n\t\t\t\tkind = extHostTypes.ChatResultFeedbackKind.Unhelpful;\n\t\t\t\tbreak;\n\t\t\tcase ChatAgentVoteDirection.Up:\n\t\t\t\tkind = extHostTypes.ChatResultFeedbackKind.Helpful;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconst feedback: vscode.ChatResultFeedback = {\n\t\t\tresult: ehResult,\n\t\t\tkind,\n\t\t\tunhelpfulReason: isProposedApiEnabled(agent.extension, 'chatParticipantAdditions') ? voteAction.reason : undefined,\n\t\t};\n\t\tagent.acceptFeedback(Object.freeze(feedback));\n\t}\n\n\t$acceptAction(handle: number, result: IChatAgentResult, event: IChatUserActionEvent): void {\n\t\tconst agent = this._agents.get(handle);\n\t\tif (!agent) {\n\t\t\treturn;\n\t\t}\n\t\tif (event.action.kind === 'vote') {\n\t\t\t// handled by $acceptFeedback\n\t\t\treturn;\n\t\t}\n\n\t\tconst ehAction = typeConvert.ChatAgentUserActionEvent.to(result, event, this._commands.converter);\n\t\tif (ehAction) {\n\t\t\tagent.acceptAction(Object.freeze(ehAction));\n\t\t}\n\t}\n\n\tasync $invokeCompletionProvider(handle: number, query: string, token: CancellationToken): Promise<IChatAgentCompletionItem[]> {\n\t\tconst agent = this._agents.get(handle);\n\t\tif (!agent) {\n\t\t\treturn [];\n\t\t}\n\n\t\tlet disposables = this._completionDisposables.get(handle);\n\t\tif (disposables) {\n\t\t\t// Clear any disposables from the last invocation of this completion provider\n\t\t\tdisposables.clear();\n\t\t} else {\n\t\t\tdisposables = new DisposableStore();\n\t\t\tthis._completionDisposables.set(handle, disposables);\n\t\t}\n\n\t\tconst items = await agent.invokeCompletionProvider(query, token);\n\n\t\treturn items.map((i) => typeConvert.ChatAgentCompletionItem.from(i, this._commands.converter, disposables));\n\t}\n\n\tasync $provideWelcomeMessage(handle: number, location: ChatAgentLocation, token: CancellationToken): Promise<(string | IMarkdownString)[] | undefined> {\n\t\tconst agent = this._agents.get(handle);\n\t\tif (!agent) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn await agent.provideWelcomeMessage(typeConvert.ChatLocation.to(location), token);\n\t}\n\n\tasync $provideChatTitle(handle: number, context: IChatAgentHistoryEntryDto[], token: CancellationToken): Promise<string | undefined> {\n\t\tconst agent = this._agents.get(handle);\n\t\tif (!agent) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst history = await this.prepareHistoryTurns(agent.id, { history: context });\n\t\treturn await agent.provideTitle({ history }, token);\n\t}\n\n\tasync $provideSampleQuestions(handle: number, location: ChatAgentLocation, token: CancellationToken): Promise<IChatFollowup[] | undefined> {\n\t\tconst agent = this._agents.get(handle);\n\t\tif (!agent) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn (await agent.provideSampleQuestions(typeConvert.ChatLocation.to(location), token))\n\t\t\t.map(f => typeConvert.ChatFollowup.from(f, undefined));\n\t}\n}\n\nclass ExtHostChatAgent {\n\n\tprivate _followupProvider: vscode.ChatFollowupProvider | undefined;\n\tprivate _iconPath: vscode.Uri | { light: vscode.Uri; dark: vscode.Uri } | vscode.ThemeIcon | undefined;\n\tprivate _helpTextPrefix: string | vscode.MarkdownString | undefined;\n\tprivate _helpTextVariablesPrefix: string | vscode.MarkdownString | undefined;\n\tprivate _helpTextPostfix: string | vscode.MarkdownString | undefined;\n\tprivate _isSecondary: boolean | undefined;\n\tprivate _onDidReceiveFeedback = new Emitter<vscode.ChatResultFeedback>();\n\tprivate _onDidPerformAction = new Emitter<vscode.ChatUserActionEvent>();\n\tprivate _supportIssueReporting: boolean | undefined;\n\tprivate _agentVariableProvider?: { provider: vscode.ChatParticipantCompletionItemProvider; triggerCharacters: string[] };\n\tprivate _welcomeMessageProvider?: vscode.ChatWelcomeMessageProvider | undefined;\n\tprivate _titleProvider?: vscode.ChatTitleProvider | undefined;\n\tprivate _requester: vscode.ChatRequesterInformation | undefined;\n\tprivate _supportsSlowReferences: boolean | undefined;\n\n\tconstructor(\n\t\tpublic readonly extension: IExtensionDescription,\n\t\tpublic readonly id: string,\n\t\tprivate readonly _proxy: MainThreadChatAgentsShape2,\n\t\tprivate readonly _handle: number,\n\t\tprivate _requestHandler: vscode.ChatExtendedRequestHandler,\n\t) { }\n\n\tacceptFeedback(feedback: vscode.ChatResultFeedback) {\n\t\tthis._onDidReceiveFeedback.fire(feedback);\n\t}\n\n\tacceptAction(event: vscode.ChatUserActionEvent) {\n\t\tthis._onDidPerformAction.fire(event);\n\t}\n\n\tasync invokeCompletionProvider(query: string, token: CancellationToken): Promise<vscode.ChatCompletionItem[]> {\n\t\tif (!this._agentVariableProvider) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn await this._agentVariableProvider.provider.provideCompletionItems(query, token) ?? [];\n\t}\n\n\tasync provideFollowups(result: vscode.ChatResult, context: vscode.ChatContext, token: CancellationToken): Promise<vscode.ChatFollowup[]> {\n\t\tif (!this._followupProvider) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst followups = await this._followupProvider.provideFollowups(result, context, token);\n\t\tif (!followups) {\n\t\t\treturn [];\n\t\t}\n\t\treturn followups\n\t\t\t// Filter out \"command followups\" from older providers\n\t\t\t.filter(f => !(f && 'commandId' in f))\n\t\t\t// Filter out followups from older providers before 'message' changed to 'prompt'\n\t\t\t.filter(f => !(f && 'message' in f));\n\t}\n\n\tasync provideWelcomeMessage(location: vscode.ChatLocation, token: CancellationToken): Promise<(string | IMarkdownString)[] | undefined> {\n\t\tif (!this._welcomeMessageProvider) {\n\t\t\treturn [];\n\t\t}\n\t\tconst content = await this._welcomeMessageProvider.provideWelcomeMessage(location, token);\n\t\tif (!content) {\n\t\t\treturn [];\n\t\t}\n\t\treturn content.map(item => {\n\t\t\tif (typeof item === 'string') {\n\t\t\t\treturn item;\n\t\t\t} else {\n\t\t\t\treturn typeConvert.MarkdownString.from(item);\n\t\t\t}\n\t\t});\n\t}\n\n\tasync provideTitle(context: vscode.ChatContext, token: CancellationToken): Promise<string | undefined> {\n\t\tif (!this._titleProvider) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn await this._titleProvider.provideChatTitle(context, token) ?? undefined;\n\t}\n\n\tasync provideSampleQuestions(location: vscode.ChatLocation, token: CancellationToken): Promise<vscode.ChatFollowup[]> {\n\t\tif (!this._welcomeMessageProvider || !this._welcomeMessageProvider.provideSampleQuestions) {\n\t\t\treturn [];\n\t\t}\n\t\tconst content = await this._welcomeMessageProvider.provideSampleQuestions(location, token);\n\t\tif (!content) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn content;\n\t}\n\n\tget apiAgent(): vscode.ChatParticipant {\n\t\tlet disposed = false;\n\t\tlet updateScheduled = false;\n\t\tconst updateMetadataSoon = () => {\n\t\t\tif (disposed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (updateScheduled) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tupdateScheduled = true;\n\t\t\tqueueMicrotask(() => {\n\t\t\t\tthis._proxy.$updateAgent(this._handle, {\n\t\t\t\t\ticon: !this._iconPath ? undefined :\n\t\t\t\t\t\tthis._iconPath instanceof URI ? this._iconPath :\n\t\t\t\t\t\t\t'light' in this._iconPath ? this._iconPath.light :\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\ticonDark: !this._iconPath ? undefined :\n\t\t\t\t\t\t'dark' in this._iconPath ? this._iconPath.dark :\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\tthemeIcon: this._iconPath instanceof extHostTypes.ThemeIcon ? this._iconPath : undefined,\n\t\t\t\t\thasFollowups: this._followupProvider !== undefined,\n\t\t\t\t\tisSecondary: this._isSecondary,\n\t\t\t\t\thelpTextPrefix: (!this._helpTextPrefix || typeof this._helpTextPrefix === 'string') ? this._helpTextPrefix : typeConvert.MarkdownString.from(this._helpTextPrefix),\n\t\t\t\t\thelpTextVariablesPrefix: (!this._helpTextVariablesPrefix || typeof this._helpTextVariablesPrefix === 'string') ? this._helpTextVariablesPrefix : typeConvert.MarkdownString.from(this._helpTextVariablesPrefix),\n\t\t\t\t\thelpTextPostfix: (!this._helpTextPostfix || typeof this._helpTextPostfix === 'string') ? this._helpTextPostfix : typeConvert.MarkdownString.from(this._helpTextPostfix),\n\t\t\t\t\tsupportIssueReporting: this._supportIssueReporting,\n\t\t\t\t\trequester: this._requester,\n\t\t\t\t\tsupportsSlowVariables: this._supportsSlowReferences,\n\t\t\t\t});\n\t\t\t\tupdateScheduled = false;\n\t\t\t});\n\t\t};\n\n\t\tconst that = this;\n\t\treturn {\n\t\t\tget id() {\n\t\t\t\treturn that.id;\n\t\t\t},\n\t\t\tget iconPath() {\n\t\t\t\treturn that._iconPath;\n\t\t\t},\n\t\t\tset iconPath(v) {\n\t\t\t\tthat._iconPath = v;\n\t\t\t\tupdateMetadataSoon();\n\t\t\t},\n\t\t\tget requestHandler() {\n\t\t\t\treturn that._requestHandler;\n\t\t\t},\n\t\t\tset requestHandler(v) {\n\t\t\t\tassertType(typeof v === 'function', 'Invalid request handler');\n\t\t\t\tthat._requestHandler = v;\n\t\t\t},\n\t\t\tget followupProvider() {\n\t\t\t\treturn that._followupProvider;\n\t\t\t},\n\t\t\tset followupProvider(v) {\n\t\t\t\tthat._followupProvider = v;\n\t\t\t\tupdateMetadataSoon();\n\t\t\t},\n\t\t\tget helpTextPrefix() {\n\t\t\t\tcheckProposedApiEnabled(that.extension, 'defaultChatParticipant');\n\t\t\t\treturn that._helpTextPrefix;\n\t\t\t},\n\t\t\tset helpTextPrefix(v) {\n\t\t\t\tcheckProposedApiEnabled(that.extension, 'defaultChatParticipant');\n\t\t\t\tthat._helpTextPrefix = v;\n\t\t\t\tupdateMetadataSoon();\n\t\t\t},\n\t\t\tget helpTextVariablesPrefix() {\n\t\t\t\tcheckProposedApiEnabled(that.extension, 'defaultChatParticipant');\n\t\t\t\treturn that._helpTextVariablesPrefix;\n\t\t\t},\n\t\t\tset helpTextVariablesPrefix(v) {\n\t\t\t\tcheckProposedApiEnabled(that.extension, 'defaultChatParticipant');\n\t\t\t\tthat._helpTextVariablesPrefix = v;\n\t\t\t\tupdateMetadataSoon();\n\t\t\t},\n\t\t\tget helpTextPostfix() {\n\t\t\t\tcheckProposedApiEnabled(that.extension, 'defaultChatParticipant');\n\t\t\t\treturn that._helpTextPostfix;\n\t\t\t},\n\t\t\tset helpTextPostfix(v) {\n\t\t\t\tcheckProposedApiEnabled(that.extension, 'defaultChatParticipant');\n\t\t\t\tthat._helpTextPostfix = v;\n\t\t\t\tupdateMetadataSoon();\n\t\t\t},\n\t\t\tget isSecondary() {\n\t\t\t\tcheckProposedApiEnabled(that.extension, 'defaultChatParticipant');\n\t\t\t\treturn that._isSecondary;\n\t\t\t},\n\t\t\tset isSecondary(v) {\n\t\t\t\tcheckProposedApiEnabled(that.extension, 'defaultChatParticipant');\n\t\t\t\tthat._isSecondary = v;\n\t\t\t\tupdateMetadataSoon();\n\t\t\t},\n\t\t\tget supportIssueReporting() {\n\t\t\t\tcheckProposedApiEnabled(that.extension, 'chatParticipantPrivate');\n\t\t\t\treturn that._supportIssueReporting;\n\t\t\t},\n\t\t\tset supportIssueReporting(v) {\n\t\t\t\tcheckProposedApiEnabled(that.extension, 'chatParticipantPrivate');\n\t\t\t\tthat._supportIssueReporting = v;\n\t\t\t\tupdateMetadataSoon();\n\t\t\t},\n\t\t\tget onDidReceiveFeedback() {\n\t\t\t\treturn that._onDidReceiveFeedback.event;\n\t\t\t},\n\t\t\tset participantVariableProvider(v) {\n\t\t\t\tcheckProposedApiEnabled(that.extension, 'chatParticipantAdditions');\n\t\t\t\tthat._agentVariableProvider = v;\n\t\t\t\tif (v) {\n\t\t\t\t\tif (!v.triggerCharacters.length) {\n\t\t\t\t\t\tthrow new Error('triggerCharacters are required');\n\t\t\t\t\t}\n\n\t\t\t\t\tthat._proxy.$registerAgentCompletionsProvider(that._handle, that.id, v.triggerCharacters);\n\t\t\t\t} else {\n\t\t\t\t\tthat._proxy.$unregisterAgentCompletionsProvider(that._handle, that.id);\n\t\t\t\t}\n\t\t\t},\n\t\t\tget participantVariableProvider() {\n\t\t\t\tcheckProposedApiEnabled(that.extension, 'chatParticipantAdditions');\n\t\t\t\treturn that._agentVariableProvider;\n\t\t\t},\n\t\t\tset welcomeMessageProvider(v) {\n\t\t\t\tcheckProposedApiEnabled(that.extension, 'defaultChatParticipant');\n\t\t\t\tthat._welcomeMessageProvider = v;\n\t\t\t\tupdateMetadataSoon();\n\t\t\t},\n\t\t\tget welcomeMessageProvider() {\n\t\t\t\tcheckProposedApiEnabled(that.extension, 'defaultChatParticipant');\n\t\t\t\treturn that._welcomeMessageProvider;\n\t\t\t},\n\t\t\tset titleProvider(v) {\n\t\t\t\tcheckProposedApiEnabled(that.extension, 'defaultChatParticipant');\n\t\t\t\tthat._titleProvider = v;\n\t\t\t\tupdateMetadataSoon();\n\t\t\t},\n\t\t\tget titleProvider() {\n\t\t\t\tcheckProposedApiEnabled(that.extension, 'defaultChatParticipant');\n\t\t\t\treturn that._titleProvider;\n\t\t\t},\n\t\t\tonDidPerformAction: !isProposedApiEnabled(this.extension, 'chatParticipantAdditions')\n\t\t\t\t? undefined!\n\t\t\t\t: this._onDidPerformAction.event\n\t\t\t,\n\t\t\tset requester(v) {\n\t\t\t\tthat._requester = v;\n\t\t\t\tupdateMetadataSoon();\n\t\t\t},\n\t\t\tget requester() {\n\t\t\t\treturn that._requester;\n\t\t\t},\n\t\t\tset supportsSlowReferences(v) {\n\t\t\t\tcheckProposedApiEnabled(that.extension, 'chatParticipantPrivate');\n\t\t\t\tthat._supportsSlowReferences = v;\n\t\t\t\tupdateMetadataSoon();\n\t\t\t},\n\t\t\tget supportsSlowReferences() {\n\t\t\t\tcheckProposedApiEnabled(that.extension, 'chatParticipantPrivate');\n\t\t\t\treturn that._supportsSlowReferences;\n\t\t\t},\n\t\t\tdispose() {\n\t\t\t\tdisposed = true;\n\t\t\t\tthat._followupProvider = undefined;\n\t\t\t\tthat._onDidReceiveFeedback.dispose();\n\t\t\t\tthat._proxy.$unregisterAgent(that._handle);\n\t\t\t},\n\t\t} satisfies vscode.ChatParticipant;\n\t}\n\n\tinvoke(request: vscode.ChatRequest, context: vscode.ChatContext, response: vscode.ChatResponseStream, token: CancellationToken): vscode.ProviderResult<vscode.ChatResult | void> {\n\t\treturn this._requestHandler(request, context, response, token);\n\t}\n}\n"],
  "mappings": "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",
  "names": ["throwIfDone"]
}
