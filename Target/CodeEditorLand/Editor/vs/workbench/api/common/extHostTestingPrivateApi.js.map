{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostTestingPrivateApi.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ExtHostTestItemEvent, InvalidTestItemError } from '../../contrib/testing/common/testItemCollection.js';\nimport * as vscode from 'vscode';\n\nexport interface IExtHostTestItemApi {\n\tcontrollerId: string;\n\tparent?: vscode.TestItem;\n\tlistener?: (evt: ExtHostTestItemEvent) => void;\n}\n\nconst eventPrivateApis = new WeakMap<vscode.TestItem, IExtHostTestItemApi>();\n\nexport const createPrivateApiFor = (impl: vscode.TestItem, controllerId: string) => {\n\tconst api: IExtHostTestItemApi = { controllerId };\n\teventPrivateApis.set(impl, api);\n\treturn api;\n};\n\n/**\n * Gets the private API for a test item implementation. This implementation\n * is a managed object, but we keep a weakmap to avoid exposing any of the\n * internals to extensions.\n */\nexport const getPrivateApiFor = (impl: vscode.TestItem) => {\n\tconst api = eventPrivateApis.get(impl);\n\tif (!api) {\n\t\tthrow new InvalidTestItemError(impl?.id || '<unknown>');\n\t}\n\n\treturn api;\n};\n"],
  "mappings": ";;AAKA,SAAS,sBAAsB,4BAA4B;AAC3D,YAAY,YAAY;AAQxB,MAAM,mBAAmB,oBAAI,QAA8C;AAEpE,MAAM,sBAAsB,wBAAC,MAAuB,iBAAyB;AACnF,QAAM,MAA2B,EAAE,aAAa;AAChD,mBAAiB,IAAI,MAAM,GAAG;AAC9B,SAAO;AACR,GAJmC;AAW5B,MAAM,mBAAmB,wBAAC,SAA0B;AAC1D,QAAM,MAAM,iBAAiB,IAAI,IAAI;AACrC,MAAI,CAAC,KAAK;AACT,UAAM,IAAI,qBAAqB,MAAM,MAAM,WAAW;AAAA,EACvD;AAEA,SAAO;AACR,GAPgC;",
  "names": []
}
