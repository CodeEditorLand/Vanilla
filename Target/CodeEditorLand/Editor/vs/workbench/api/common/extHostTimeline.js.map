{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostTimeline.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type * as vscode from \"vscode\";\nimport type { CancellationToken } from \"../../../base/common/cancellation.js\";\nimport {\n\tDisposableStore,\n\ttype IDisposable,\n\ttoDisposable,\n} from \"../../../base/common/lifecycle.js\";\nimport { MarshalledId } from \"../../../base/common/marshallingIds.js\";\nimport { isString } from \"../../../base/common/types.js\";\nimport { URI, type UriComponents } from \"../../../base/common/uri.js\";\nimport { ExtensionIdentifier } from \"../../../platform/extensions/common/extensions.js\";\nimport { createDecorator } from \"../../../platform/instantiation/common/instantiation.js\";\nimport type {\n\tTimeline,\n\tTimelineItem,\n\tTimelineOptions,\n\tTimelineProvider,\n} from \"../../contrib/timeline/common/timeline.js\";\nimport {\n\ttype ExtHostTimelineShape,\n\ttype IMainContext,\n\tMainContext,\n\ttype MainThreadTimelineShape,\n} from \"./extHost.protocol.js\";\nimport type { CommandsConverter, ExtHostCommands } from \"./extHostCommands.js\";\nimport { MarkdownString } from \"./extHostTypeConverters.js\";\nimport {\n\tMarkdownString as MarkdownStringType,\n\tThemeIcon,\n} from \"./extHostTypes.js\";\n\nexport interface IExtHostTimeline extends ExtHostTimelineShape {\n\treadonly _serviceBrand: undefined;\n\t$getTimeline(\n\t\tid: string,\n\t\turi: UriComponents,\n\t\toptions: vscode.TimelineOptions,\n\t\ttoken: vscode.CancellationToken,\n\t): Promise<Timeline | undefined>;\n}\n\nexport const IExtHostTimeline =\n\tcreateDecorator<IExtHostTimeline>(\"IExtHostTimeline\");\n\nexport class ExtHostTimeline implements IExtHostTimeline {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _proxy: MainThreadTimelineShape;\n\n\tprivate _providers = new Map<\n\t\tstring,\n\t\t{ provider: TimelineProvider; extension: ExtensionIdentifier }\n\t>();\n\n\tprivate _itemsBySourceAndUriMap = new Map<\n\t\tstring,\n\t\tMap<string | undefined, Map<string, vscode.TimelineItem>>\n\t>();\n\n\tconstructor(mainContext: IMainContext, commands: ExtHostCommands) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadTimeline);\n\n\t\tcommands.registerArgumentProcessor({\n\t\t\tprocessArgument: (arg, extension) => {\n\t\t\t\tif (arg && arg.$mid === MarshalledId.TimelineActionContext) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis._providers.get(arg.source) &&\n\t\t\t\t\t\tExtensionIdentifier.equals(\n\t\t\t\t\t\t\textension,\n\t\t\t\t\t\t\tthis._providers.get(arg.source)?.extension,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst uri =\n\t\t\t\t\t\t\targ.uri === undefined\n\t\t\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t\t\t: URI.revive(arg.uri);\n\t\t\t\t\t\treturn this._itemsBySourceAndUriMap\n\t\t\t\t\t\t\t.get(arg.source)\n\t\t\t\t\t\t\t?.get(getUriKey(uri))\n\t\t\t\t\t\t\t?.get(arg.handle);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn arg;\n\t\t\t},\n\t\t});\n\t}\n\n\tasync $getTimeline(\n\t\tid: string,\n\t\turi: UriComponents,\n\t\toptions: vscode.TimelineOptions,\n\t\ttoken: vscode.CancellationToken,\n\t): Promise<Timeline | undefined> {\n\t\tconst item = this._providers.get(id);\n\t\treturn item?.provider.provideTimeline(URI.revive(uri), options, token);\n\t}\n\n\tregisterTimelineProvider(\n\t\tscheme: string | string[],\n\t\tprovider: vscode.TimelineProvider,\n\t\textensionId: ExtensionIdentifier,\n\t\tcommandConverter: CommandsConverter,\n\t): IDisposable {\n\t\tconst timelineDisposables = new DisposableStore();\n\n\t\tconst convertTimelineItem = this.convertTimelineItem(\n\t\t\tprovider.id,\n\t\t\tcommandConverter,\n\t\t\ttimelineDisposables,\n\t\t).bind(this);\n\n\t\tlet disposable: IDisposable | undefined;\n\t\tif (provider.onDidChange) {\n\t\t\tdisposable = provider.onDidChange(\n\t\t\t\t(e) =>\n\t\t\t\t\tthis._proxy.$emitTimelineChangeEvent({\n\t\t\t\t\t\turi: undefined,\n\t\t\t\t\t\treset: true,\n\t\t\t\t\t\t...e,\n\t\t\t\t\t\tid: provider.id,\n\t\t\t\t\t}),\n\t\t\t\tthis,\n\t\t\t);\n\t\t}\n\n\t\tconst itemsBySourceAndUriMap = this._itemsBySourceAndUriMap;\n\t\treturn this.registerTimelineProviderCore(\n\t\t\t{\n\t\t\t\t...provider,\n\t\t\t\tscheme: scheme,\n\t\t\t\tonDidChange: undefined,\n\t\t\t\tasync provideTimeline(\n\t\t\t\t\turi: URI,\n\t\t\t\t\toptions: TimelineOptions,\n\t\t\t\t\ttoken: CancellationToken,\n\t\t\t\t) {\n\t\t\t\t\tif (options?.resetCache) {\n\t\t\t\t\t\ttimelineDisposables.clear();\n\n\t\t\t\t\t\t// For now, only allow the caching of a single Uri\n\t\t\t\t\t\t// itemsBySourceAndUriMap.get(provider.id)?.get(getUriKey(uri))?.clear();\n\t\t\t\t\t\titemsBySourceAndUriMap.get(provider.id)?.clear();\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = await provider.provideTimeline(\n\t\t\t\t\t\turi,\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\ttoken,\n\t\t\t\t\t);\n\t\t\t\t\tif (result === undefined || result === null) {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\t// TODO: Should we bother converting all the data if we aren't caching? Meaning it is being requested by an extension?\n\n\t\t\t\t\tconst convertItem = convertTimelineItem(uri, options);\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\tsource: provider.id,\n\t\t\t\t\t\titems: result.items.map(convertItem),\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tdispose() {\n\t\t\t\t\tfor (const sourceMap of itemsBySourceAndUriMap.values()) {\n\t\t\t\t\t\tsourceMap.get(provider.id)?.clear();\n\t\t\t\t\t}\n\n\t\t\t\t\tdisposable?.dispose();\n\t\t\t\t\ttimelineDisposables.dispose();\n\t\t\t\t},\n\t\t\t},\n\t\t\textensionId,\n\t\t);\n\t}\n\n\tprivate convertTimelineItem(\n\t\tsource: string,\n\t\tcommandConverter: CommandsConverter,\n\t\tdisposables: DisposableStore,\n\t) {\n\t\treturn (uri: URI, options?: TimelineOptions) => {\n\t\t\tlet items: Map<string, vscode.TimelineItem> | undefined;\n\t\t\tif (options?.cacheResults) {\n\t\t\t\tlet itemsByUri = this._itemsBySourceAndUriMap.get(source);\n\t\t\t\tif (itemsByUri === undefined) {\n\t\t\t\t\titemsByUri = new Map();\n\t\t\t\t\tthis._itemsBySourceAndUriMap.set(source, itemsByUri);\n\t\t\t\t}\n\n\t\t\t\tconst uriKey = getUriKey(uri);\n\t\t\t\titems = itemsByUri.get(uriKey);\n\t\t\t\tif (items === undefined) {\n\t\t\t\t\titems = new Map();\n\t\t\t\t\titemsByUri.set(uriKey, items);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn (item: vscode.TimelineItem): TimelineItem => {\n\t\t\t\tconst { iconPath, ...props } = item;\n\n\t\t\t\tconst handle = `${source}|${item.id ?? item.timestamp}`;\n\t\t\t\titems?.set(handle, item);\n\n\t\t\t\tlet icon;\n\t\t\t\tlet iconDark;\n\t\t\t\tlet themeIcon;\n\t\t\t\tif (item.iconPath) {\n\t\t\t\t\tif (iconPath instanceof ThemeIcon) {\n\t\t\t\t\t\tthemeIcon = { id: iconPath.id, color: iconPath.color };\n\t\t\t\t\t} else if (URI.isUri(iconPath)) {\n\t\t\t\t\t\ticon = iconPath;\n\t\t\t\t\t\ticonDark = iconPath;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t({ light: icon, dark: iconDark } = iconPath as {\n\t\t\t\t\t\t\tlight: URI;\n\t\t\t\t\t\t\tdark: URI;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet tooltip;\n\t\t\t\tif (MarkdownStringType.isMarkdownString(props.tooltip)) {\n\t\t\t\t\ttooltip = MarkdownString.from(props.tooltip);\n\t\t\t\t} else if (isString(props.tooltip)) {\n\t\t\t\t\ttooltip = props.tooltip;\n\t\t\t\t}\n\t\t\t\t// TODO @jkearl, remove once migration complete.\n\t\t\t\telse if (\n\t\t\t\t\tMarkdownStringType.isMarkdownString((props as any).detail)\n\t\t\t\t) {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\"Using deprecated TimelineItem.detail, migrate to TimelineItem.tooltip\",\n\t\t\t\t\t);\n\t\t\t\t\ttooltip = MarkdownString.from((props as any).detail);\n\t\t\t\t} else if (isString((props as any).detail)) {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\"Using deprecated TimelineItem.detail, migrate to TimelineItem.tooltip\",\n\t\t\t\t\t);\n\t\t\t\t\ttooltip = (props as any).detail;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\t...props,\n\t\t\t\t\tid: props.id ?? undefined,\n\t\t\t\t\thandle: handle,\n\t\t\t\t\tsource: source,\n\t\t\t\t\tcommand: item.command\n\t\t\t\t\t\t? commandConverter.toInternal(item.command, disposables)\n\t\t\t\t\t\t: undefined,\n\t\t\t\t\ticon: icon,\n\t\t\t\t\ticonDark: iconDark,\n\t\t\t\t\tthemeIcon: themeIcon,\n\t\t\t\t\ttooltip,\n\t\t\t\t\taccessibilityInformation: item.accessibilityInformation,\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t}\n\n\tprivate registerTimelineProviderCore(\n\t\tprovider: TimelineProvider,\n\t\textension: ExtensionIdentifier,\n\t): IDisposable {\n\t\t// console.log(`ExtHostTimeline#registerTimelineProvider: id=${provider.id}`);\n\n\t\tconst existing = this._providers.get(provider.id);\n\t\tif (existing) {\n\t\t\tthrow new Error(`Timeline Provider ${provider.id} already exists.`);\n\t\t}\n\n\t\tthis._proxy.$registerTimelineProvider({\n\t\t\tid: provider.id,\n\t\t\tlabel: provider.label,\n\t\t\tscheme: provider.scheme,\n\t\t});\n\t\tthis._providers.set(provider.id, { provider, extension });\n\n\t\treturn toDisposable(() => {\n\t\t\tfor (const sourceMap of this._itemsBySourceAndUriMap.values()) {\n\t\t\t\tsourceMap.get(provider.id)?.clear();\n\t\t\t}\n\n\t\t\tthis._providers.delete(provider.id);\n\t\t\tthis._proxy.$unregisterTimelineProvider(provider.id);\n\t\t\tprovider.dispose();\n\t\t});\n\t}\n}\n\nfunction getUriKey(uri: URI | undefined): string | undefined {\n\treturn uri?.toString();\n}\n"],
  "mappings": "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",
  "names": []
}
