{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostTimeline.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { UriComponents, URI } from '../../../base/common/uri.js';\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nimport { ExtHostTimelineShape, MainThreadTimelineShape, IMainContext, MainContext } from './extHost.protocol.js';\nimport { Timeline, TimelineItem, TimelineOptions, TimelineProvider } from '../../contrib/timeline/common/timeline.js';\nimport { IDisposable, toDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { CommandsConverter, ExtHostCommands } from './extHostCommands.js';\nimport { ThemeIcon, MarkdownString as MarkdownStringType } from './extHostTypes.js';\nimport { MarkdownString } from './extHostTypeConverters.js';\nimport { ExtensionIdentifier } from '../../../platform/extensions/common/extensions.js';\nimport { MarshalledId } from '../../../base/common/marshallingIds.js';\nimport { isString } from '../../../base/common/types.js';\n\nexport interface IExtHostTimeline extends ExtHostTimelineShape {\n\treadonly _serviceBrand: undefined;\n\t$getTimeline(id: string, uri: UriComponents, options: vscode.TimelineOptions, token: vscode.CancellationToken): Promise<Timeline | undefined>;\n}\n\nexport const IExtHostTimeline = createDecorator<IExtHostTimeline>('IExtHostTimeline');\n\nexport class ExtHostTimeline implements IExtHostTimeline {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _proxy: MainThreadTimelineShape;\n\n\tprivate _providers = new Map<string, { provider: TimelineProvider; extension: ExtensionIdentifier }>();\n\n\tprivate _itemsBySourceAndUriMap = new Map<string, Map<string | undefined, Map<string, vscode.TimelineItem>>>();\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\tcommands: ExtHostCommands,\n\t) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadTimeline);\n\n\t\tcommands.registerArgumentProcessor({\n\t\t\tprocessArgument: (arg, extension) => {\n\t\t\t\tif (arg && arg.$mid === MarshalledId.TimelineActionContext) {\n\t\t\t\t\tif (this._providers.get(arg.source) && ExtensionIdentifier.equals(extension, this._providers.get(arg.source)?.extension)) {\n\t\t\t\t\t\tconst uri = arg.uri === undefined ? undefined : URI.revive(arg.uri);\n\t\t\t\t\t\treturn this._itemsBySourceAndUriMap.get(arg.source)?.get(getUriKey(uri))?.get(arg.handle);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn arg;\n\t\t\t}\n\t\t});\n\t}\n\n\tasync $getTimeline(id: string, uri: UriComponents, options: vscode.TimelineOptions, token: vscode.CancellationToken): Promise<Timeline | undefined> {\n\t\tconst item = this._providers.get(id);\n\t\treturn item?.provider.provideTimeline(URI.revive(uri), options, token);\n\t}\n\n\tregisterTimelineProvider(scheme: string | string[], provider: vscode.TimelineProvider, extensionId: ExtensionIdentifier, commandConverter: CommandsConverter): IDisposable {\n\t\tconst timelineDisposables = new DisposableStore();\n\n\t\tconst convertTimelineItem = this.convertTimelineItem(provider.id, commandConverter, timelineDisposables).bind(this);\n\n\t\tlet disposable: IDisposable | undefined;\n\t\tif (provider.onDidChange) {\n\t\t\tdisposable = provider.onDidChange(e => this._proxy.$emitTimelineChangeEvent({ uri: undefined, reset: true, ...e, id: provider.id }), this);\n\t\t}\n\n\t\tconst itemsBySourceAndUriMap = this._itemsBySourceAndUriMap;\n\t\treturn this.registerTimelineProviderCore({\n\t\t\t...provider,\n\t\t\tscheme: scheme,\n\t\t\tonDidChange: undefined,\n\t\t\tasync provideTimeline(uri: URI, options: TimelineOptions, token: CancellationToken) {\n\t\t\t\tif (options?.resetCache) {\n\t\t\t\t\ttimelineDisposables.clear();\n\n\t\t\t\t\t// For now, only allow the caching of a single Uri\n\t\t\t\t\t// itemsBySourceAndUriMap.get(provider.id)?.get(getUriKey(uri))?.clear();\n\t\t\t\t\titemsBySourceAndUriMap.get(provider.id)?.clear();\n\t\t\t\t}\n\n\t\t\t\tconst result = await provider.provideTimeline(uri, options, token);\n\t\t\t\tif (result === undefined || result === null) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t// TODO: Should we bother converting all the data if we aren't caching? Meaning it is being requested by an extension?\n\n\t\t\t\tconst convertItem = convertTimelineItem(uri, options);\n\t\t\t\treturn {\n\t\t\t\t\t...result,\n\t\t\t\t\tsource: provider.id,\n\t\t\t\t\titems: result.items.map(convertItem)\n\t\t\t\t};\n\t\t\t},\n\t\t\tdispose() {\n\t\t\t\tfor (const sourceMap of itemsBySourceAndUriMap.values()) {\n\t\t\t\t\tsourceMap.get(provider.id)?.clear();\n\t\t\t\t}\n\n\t\t\t\tdisposable?.dispose();\n\t\t\t\ttimelineDisposables.dispose();\n\t\t\t}\n\t\t}, extensionId);\n\t}\n\n\tprivate convertTimelineItem(source: string, commandConverter: CommandsConverter, disposables: DisposableStore) {\n\t\treturn (uri: URI, options?: TimelineOptions) => {\n\t\t\tlet items: Map<string, vscode.TimelineItem> | undefined;\n\t\t\tif (options?.cacheResults) {\n\t\t\t\tlet itemsByUri = this._itemsBySourceAndUriMap.get(source);\n\t\t\t\tif (itemsByUri === undefined) {\n\t\t\t\t\titemsByUri = new Map();\n\t\t\t\t\tthis._itemsBySourceAndUriMap.set(source, itemsByUri);\n\t\t\t\t}\n\n\t\t\t\tconst uriKey = getUriKey(uri);\n\t\t\t\titems = itemsByUri.get(uriKey);\n\t\t\t\tif (items === undefined) {\n\t\t\t\t\titems = new Map();\n\t\t\t\t\titemsByUri.set(uriKey, items);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn (item: vscode.TimelineItem): TimelineItem => {\n\t\t\t\tconst { iconPath, ...props } = item;\n\n\t\t\t\tconst handle = `${source}|${item.id ?? item.timestamp}`;\n\t\t\t\titems?.set(handle, item);\n\n\t\t\t\tlet icon;\n\t\t\t\tlet iconDark;\n\t\t\t\tlet themeIcon;\n\t\t\t\tif (item.iconPath) {\n\t\t\t\t\tif (iconPath instanceof ThemeIcon) {\n\t\t\t\t\t\tthemeIcon = { id: iconPath.id, color: iconPath.color };\n\t\t\t\t\t}\n\t\t\t\t\telse if (URI.isUri(iconPath)) {\n\t\t\t\t\t\ticon = iconPath;\n\t\t\t\t\t\ticonDark = iconPath;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t({ light: icon, dark: iconDark } = iconPath as { light: URI; dark: URI });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet tooltip;\n\t\t\t\tif (MarkdownStringType.isMarkdownString(props.tooltip)) {\n\t\t\t\t\ttooltip = MarkdownString.from(props.tooltip);\n\t\t\t\t}\n\t\t\t\telse if (isString(props.tooltip)) {\n\t\t\t\t\ttooltip = props.tooltip;\n\t\t\t\t}\n\t\t\t\t// TODO @jkearl, remove once migration complete.\n\t\t\t\telse if (MarkdownStringType.isMarkdownString((props as any).detail)) {\n\t\t\t\t\tconsole.warn('Using deprecated TimelineItem.detail, migrate to TimelineItem.tooltip');\n\t\t\t\t\ttooltip = MarkdownString.from((props as any).detail);\n\t\t\t\t}\n\t\t\t\telse if (isString((props as any).detail)) {\n\t\t\t\t\tconsole.warn('Using deprecated TimelineItem.detail, migrate to TimelineItem.tooltip');\n\t\t\t\t\ttooltip = (props as any).detail;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\t...props,\n\t\t\t\t\tid: props.id ?? undefined,\n\t\t\t\t\thandle: handle,\n\t\t\t\t\tsource: source,\n\t\t\t\t\tcommand: item.command ? commandConverter.toInternal(item.command, disposables) : undefined,\n\t\t\t\t\ticon: icon,\n\t\t\t\t\ticonDark: iconDark,\n\t\t\t\t\tthemeIcon: themeIcon,\n\t\t\t\t\ttooltip,\n\t\t\t\t\taccessibilityInformation: item.accessibilityInformation\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t}\n\n\tprivate registerTimelineProviderCore(provider: TimelineProvider, extension: ExtensionIdentifier): IDisposable {\n\t\t// console.log(`ExtHostTimeline#registerTimelineProvider: id=${provider.id}`);\n\n\t\tconst existing = this._providers.get(provider.id);\n\t\tif (existing) {\n\t\t\tthrow new Error(`Timeline Provider ${provider.id} already exists.`);\n\t\t}\n\n\t\tthis._proxy.$registerTimelineProvider({\n\t\t\tid: provider.id,\n\t\t\tlabel: provider.label,\n\t\t\tscheme: provider.scheme\n\t\t});\n\t\tthis._providers.set(provider.id, { provider, extension });\n\n\t\treturn toDisposable(() => {\n\t\t\tfor (const sourceMap of this._itemsBySourceAndUriMap.values()) {\n\t\t\t\tsourceMap.get(provider.id)?.clear();\n\t\t\t}\n\n\t\t\tthis._providers.delete(provider.id);\n\t\t\tthis._proxy.$unregisterTimelineProvider(provider.id);\n\t\t\tprovider.dispose();\n\t\t});\n\t}\n}\n\nfunction getUriKey(uri: URI | undefined): string | undefined {\n\treturn uri?.toString();\n}\n"],
  "mappings": "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",
  "names": []
}
