{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostDocumentSaveParticipant.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from '../../../base/common/event.js';\nimport { URI, UriComponents } from '../../../base/common/uri.js';\nimport { illegalState } from '../../../base/common/errors.js';\nimport { ExtHostDocumentSaveParticipantShape, IWorkspaceEditDto, MainThreadBulkEditsShape } from './extHost.protocol.js';\nimport { TextEdit } from './extHostTypes.js';\nimport { Range, TextDocumentSaveReason, EndOfLine } from './extHostTypeConverters.js';\nimport { ExtHostDocuments } from './extHostDocuments.js';\nimport { SaveReason } from '../../common/editor.js';\nimport type * as vscode from 'vscode';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { IExtensionDescription } from '../../../platform/extensions/common/extensions.js';\nimport { SerializableObjectWithBuffers } from '../../services/extensions/common/proxyIdentifier.js';\n\ntype Listener = [Function, any, IExtensionDescription];\n\nexport class ExtHostDocumentSaveParticipant implements ExtHostDocumentSaveParticipantShape {\n\n\tprivate readonly _callbacks = new LinkedList<Listener>();\n\tprivate readonly _badListeners = new WeakMap<Function, number>();\n\n\tconstructor(\n\t\tprivate readonly _logService: ILogService,\n\t\tprivate readonly _documents: ExtHostDocuments,\n\t\tprivate readonly _mainThreadBulkEdits: MainThreadBulkEditsShape,\n\t\tprivate readonly _thresholds: { timeout: number; errors: number } = { timeout: 1500, errors: 3 }\n\t) {\n\t\t//\n\t}\n\n\tdispose(): void {\n\t\tthis._callbacks.clear();\n\t}\n\n\tgetOnWillSaveTextDocumentEvent(extension: IExtensionDescription): Event<vscode.TextDocumentWillSaveEvent> {\n\t\treturn (listener, thisArg, disposables) => {\n\t\t\tconst remove = this._callbacks.push([listener, thisArg, extension]);\n\t\t\tconst result = { dispose: remove };\n\t\t\tif (Array.isArray(disposables)) {\n\t\t\t\tdisposables.push(result);\n\t\t\t}\n\t\t\treturn result;\n\t\t};\n\t}\n\n\tasync $participateInSave(data: UriComponents, reason: SaveReason): Promise<boolean[]> {\n\t\tconst resource = URI.revive(data);\n\n\t\tlet didTimeout = false;\n\t\tconst didTimeoutHandle = setTimeout(() => didTimeout = true, this._thresholds.timeout);\n\n\t\tconst results: boolean[] = [];\n\t\ttry {\n\t\t\tfor (const listener of [...this._callbacks]) { // copy to prevent concurrent modifications\n\t\t\t\tif (didTimeout) {\n\t\t\t\t\t// timeout - no more listeners\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tconst document = this._documents.getDocument(resource);\n\t\t\t\tconst success = await this._deliverEventAsyncAndBlameBadListeners(listener, <any>{ document, reason: TextDocumentSaveReason.to(reason) });\n\t\t\t\tresults.push(success);\n\t\t\t}\n\t\t} finally {\n\t\t\tclearTimeout(didTimeoutHandle);\n\t\t}\n\t\treturn results;\n\t}\n\n\tprivate _deliverEventAsyncAndBlameBadListeners([listener, thisArg, extension]: Listener, stubEvent: vscode.TextDocumentWillSaveEvent): Promise<any> {\n\t\tconst errors = this._badListeners.get(listener);\n\t\tif (typeof errors === 'number' && errors > this._thresholds.errors) {\n\t\t\t// bad listener - ignore\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\treturn this._deliverEventAsync(extension, listener, thisArg, stubEvent).then(() => {\n\t\t\t// don't send result across the wire\n\t\t\treturn true;\n\n\t\t}, err => {\n\n\t\t\tthis._logService.error(`onWillSaveTextDocument-listener from extension '${extension.identifier.value}' threw ERROR`);\n\t\t\tthis._logService.error(err);\n\n\t\t\tif (!(err instanceof Error) || (<Error>err).message !== 'concurrent_edits') {\n\t\t\t\tconst errors = this._badListeners.get(listener);\n\t\t\t\tthis._badListeners.set(listener, !errors ? 1 : errors + 1);\n\n\t\t\t\tif (typeof errors === 'number' && errors > this._thresholds.errors) {\n\t\t\t\t\tthis._logService.info(`onWillSaveTextDocument-listener from extension '${extension.identifier.value}' will now be IGNORED because of timeouts and/or errors`);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tprivate _deliverEventAsync(extension: IExtensionDescription, listener: Function, thisArg: any, stubEvent: vscode.TextDocumentWillSaveEvent): Promise<any> {\n\n\t\tconst promises: Promise<vscode.TextEdit[]>[] = [];\n\n\t\tconst t1 = Date.now();\n\t\tconst { document, reason } = stubEvent;\n\t\tconst { version } = document;\n\n\t\tconst event = Object.freeze<vscode.TextDocumentWillSaveEvent>({\n\t\t\tdocument,\n\t\t\treason,\n\t\t\twaitUntil(p: Promise<any | vscode.TextEdit[]>) {\n\t\t\t\tif (Object.isFrozen(promises)) {\n\t\t\t\t\tthrow illegalState('waitUntil can not be called async');\n\t\t\t\t}\n\t\t\t\tpromises.push(Promise.resolve(p));\n\t\t\t}\n\t\t});\n\n\t\ttry {\n\t\t\t// fire event\n\t\t\tlistener.apply(thisArg, [event]);\n\t\t} catch (err) {\n\t\t\treturn Promise.reject(err);\n\t\t}\n\n\t\t// freeze promises after event call\n\t\tObject.freeze(promises);\n\n\t\treturn new Promise<vscode.TextEdit[][]>((resolve, reject) => {\n\t\t\t// join on all listener promises, reject after timeout\n\t\t\tconst handle = setTimeout(() => reject(new Error('timeout')), this._thresholds.timeout);\n\n\t\t\treturn Promise.all(promises).then(edits => {\n\t\t\t\tthis._logService.debug(`onWillSaveTextDocument-listener from extension '${extension.identifier.value}' finished after ${(Date.now() - t1)}ms`);\n\t\t\t\tclearTimeout(handle);\n\t\t\t\tresolve(edits);\n\t\t\t}).catch(err => {\n\t\t\t\tclearTimeout(handle);\n\t\t\t\treject(err);\n\t\t\t});\n\n\t\t}).then(values => {\n\t\t\tconst dto: IWorkspaceEditDto = { edits: [] };\n\t\t\tfor (const value of values) {\n\t\t\t\tif (Array.isArray(value) && (<vscode.TextEdit[]>value).every(e => e instanceof TextEdit)) {\n\t\t\t\t\tfor (const { newText, newEol, range } of value) {\n\t\t\t\t\t\tdto.edits.push({\n\t\t\t\t\t\t\tresource: document.uri,\n\t\t\t\t\t\t\tversionId: undefined,\n\t\t\t\t\t\t\ttextEdit: {\n\t\t\t\t\t\t\t\trange: range && Range.from(range),\n\t\t\t\t\t\t\t\ttext: newText,\n\t\t\t\t\t\t\t\teol: newEol && EndOfLine.from(newEol),\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// apply edits if any and if document\n\t\t\t// didn't change somehow in the meantime\n\t\t\tif (dto.edits.length === 0) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tif (version === document.version) {\n\t\t\t\treturn this._mainThreadBulkEdits.$tryApplyWorkspaceEdit(new SerializableObjectWithBuffers(dto));\n\t\t\t}\n\n\t\t\treturn Promise.reject(new Error('concurrent_edits'));\n\t\t});\n\t}\n}\n"],
  "mappings": "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",
  "names": ["errors"]
}
