var m=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var p=(t,e,o,s)=>{for(var r=s>1?void 0:s?g(e,o):e,n=t.length-1,i;n>=0;n--)(i=t[n])&&(r=(s?i(e,o,r):i(r))||r);return s&&r&&m(e,o,r),r};import{ProgressLocation as h}from"./extHostTypeConverters.js";import{Progress as d}from"../../../platform/progress/common/progress.js";import{CancellationTokenSource as P,CancellationToken as S}from"../../../base/common/cancellation.js";import{throttle as u}from"../../../base/common/decorators.js";import{onUnexpectedExternalError as f}from"../../../base/common/errors.js";class D{_proxy;_handles=0;_mapHandleToCancellationSource=new Map;constructor(e){this._proxy=e}async withProgress(e,o,s){const r=this._handles++,{title:n,location:i,cancellable:a}=o,l={label:e.displayName||e.name,id:e.identifier.value};return this._proxy.$startProgress(r,{location:h.from(i),title:n,source:l,cancellable:a},e.isUnderDevelopment?void 0:e.identifier.value).catch(f),this._withProgress(r,s,!!a)}_withProgress(e,o,s){let r;s&&(r=new P,this._mapHandleToCancellationSource.set(e,r));const n=a=>{this._proxy.$progressEnd(a),this._mapHandleToCancellationSource.delete(a),r?.dispose()};let i;try{i=o(new c(this._proxy,e),s&&r?r.token:S.None)}catch(a){throw n(e),a}return i.then(a=>n(e),a=>n(e)),i}$acceptProgressCanceled(e){const o=this._mapHandleToCancellationSource.get(e);o&&(o.cancel(),this._mapHandleToCancellationSource.delete(e))}}function T(t,e){return t.message=e.message,typeof e.increment=="number"&&(typeof t.increment=="number"?t.increment+=e.increment:t.increment=e.increment),t}class c extends d{constructor(o,s){super(r=>this.throttledReport(r));this._proxy=o;this._handle=s}throttledReport(o){this._proxy.$progressReport(this._handle,o)}}p([u(100,(t,e)=>T(t,e),()=>Object.create(null))],c.prototype,"throttledReport",1);export{D as ExtHostProgress};
