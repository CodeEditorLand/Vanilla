{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostInteractive.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { NotebookEditor } from \"vscode\";\nimport { URI, type UriComponents } from \"../../../base/common/uri.js\";\nimport type { ILogService } from \"../../../platform/log/common/log.js\";\nimport type {\n\tExtHostInteractiveShape,\n\tIMainContext,\n} from \"./extHost.protocol.js\";\nimport {\n\tApiCommand,\n\tApiCommandArgument,\n\tApiCommandResult,\n\ttype ExtHostCommands,\n} from \"./extHostCommands.js\";\nimport type { ExtHostDocumentsAndEditors } from \"./extHostDocumentsAndEditors.js\";\nimport type { ExtHostNotebookController } from \"./extHostNotebook.js\";\n\nexport class ExtHostInteractive implements ExtHostInteractiveShape {\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\tprivate _extHostNotebooks: ExtHostNotebookController,\n\t\tprivate _textDocumentsAndEditors: ExtHostDocumentsAndEditors,\n\t\tprivate _commands: ExtHostCommands,\n\t\t_logService: ILogService,\n\t) {\n\t\tconst openApiCommand = new ApiCommand(\n\t\t\t\"interactive.open\",\n\t\t\t\"_interactive.open\",\n\t\t\t\"Open interactive window and return notebook editor and input URI\",\n\t\t\t[\n\t\t\t\tnew ApiCommandArgument(\n\t\t\t\t\t\"showOptions\",\n\t\t\t\t\t\"Show Options\",\n\t\t\t\t\t(v) => true,\n\t\t\t\t\t(v) => v,\n\t\t\t\t),\n\t\t\t\tnew ApiCommandArgument(\n\t\t\t\t\t\"resource\",\n\t\t\t\t\t\"Interactive resource Uri\",\n\t\t\t\t\t(v) => true,\n\t\t\t\t\t(v) => v,\n\t\t\t\t),\n\t\t\t\tnew ApiCommandArgument(\n\t\t\t\t\t\"controllerId\",\n\t\t\t\t\t\"Notebook controller Id\",\n\t\t\t\t\t(v) => true,\n\t\t\t\t\t(v) => v,\n\t\t\t\t),\n\t\t\t\tnew ApiCommandArgument(\n\t\t\t\t\t\"title\",\n\t\t\t\t\t\"Interactive editor title\",\n\t\t\t\t\t(v) => true,\n\t\t\t\t\t(v) => v,\n\t\t\t\t),\n\t\t\t],\n\t\t\tnew ApiCommandResult<\n\t\t\t\t{\n\t\t\t\t\tnotebookUri: UriComponents;\n\t\t\t\t\tinputUri: UriComponents;\n\t\t\t\t\tnotebookEditorId?: string;\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tnotebookUri: URI;\n\t\t\t\t\tinputUri: URI;\n\t\t\t\t\tnotebookEditor?: NotebookEditor;\n\t\t\t\t}\n\t\t\t>(\n\t\t\t\t\"Notebook and input URI\",\n\t\t\t\t(v: {\n\t\t\t\t\tnotebookUri: UriComponents;\n\t\t\t\t\tinputUri: UriComponents;\n\t\t\t\t\tnotebookEditorId?: string;\n\t\t\t\t}) => {\n\t\t\t\t\t_logService.debug(\n\t\t\t\t\t\t\"[ExtHostInteractive] open iw with notebook editor id\",\n\t\t\t\t\t\tv.notebookEditorId,\n\t\t\t\t\t);\n\t\t\t\t\tif (v.notebookEditorId !== undefined) {\n\t\t\t\t\t\tconst editor = this._extHostNotebooks.getEditorById(\n\t\t\t\t\t\t\tv.notebookEditorId,\n\t\t\t\t\t\t);\n\t\t\t\t\t\t_logService.debug(\n\t\t\t\t\t\t\t\"[ExtHostInteractive] notebook editor found\",\n\t\t\t\t\t\t\teditor.id,\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tnotebookUri: URI.revive(v.notebookUri),\n\t\t\t\t\t\t\tinputUri: URI.revive(v.inputUri),\n\t\t\t\t\t\t\tnotebookEditor: editor.apiEditor,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\t_logService.debug(\n\t\t\t\t\t\t\"[ExtHostInteractive] notebook editor not found, uris for the interactive document\",\n\t\t\t\t\t\tv.notebookUri,\n\t\t\t\t\t\tv.inputUri,\n\t\t\t\t\t);\n\t\t\t\t\treturn {\n\t\t\t\t\t\tnotebookUri: URI.revive(v.notebookUri),\n\t\t\t\t\t\tinputUri: URI.revive(v.inputUri),\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t\tthis._commands.registerApiCommand(openApiCommand);\n\t}\n\n\t$willAddInteractiveDocument(\n\t\turi: UriComponents,\n\t\teol: string,\n\t\tlanguageId: string,\n\t\tnotebookUri: UriComponents,\n\t) {\n\t\tthis._textDocumentsAndEditors.acceptDocumentsAndEditorsDelta({\n\t\t\taddedDocuments: [\n\t\t\t\t{\n\t\t\t\t\tEOL: eol,\n\t\t\t\t\tlines: [\"\"],\n\t\t\t\t\tlanguageId: languageId,\n\t\t\t\t\turi: uri,\n\t\t\t\t\tisDirty: false,\n\t\t\t\t\tversionId: 1,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\t$willRemoveInteractiveDocument(\n\t\turi: UriComponents,\n\t\tnotebookUri: UriComponents,\n\t) {\n\t\tthis._textDocumentsAndEditors.acceptDocumentsAndEditorsDelta({\n\t\t\tremovedDocuments: [uri],\n\t\t});\n\t}\n}\n"],
  "mappings": ";;AAMA,SAAS,WAA+B;AAMxC;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OAEM;AAIA,MAAM,mBAAsD;AAAA,EAClE,YACC,aACQ,mBACA,0BACA,WACR,aACC;AAJO;AACA;AACA;AAGR,UAAM,iBAAiB,IAAI;AAAA,MAC1B;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,QACC,IAAI;AAAA,UACH;AAAA,UACA;AAAA,UACA,CAAC,MAAM;AAAA,UACP,CAAC,MAAM;AAAA,QACR;AAAA,QACA,IAAI;AAAA,UACH;AAAA,UACA;AAAA,UACA,CAAC,MAAM;AAAA,UACP,CAAC,MAAM;AAAA,QACR;AAAA,QACA,IAAI;AAAA,UACH;AAAA,UACA;AAAA,UACA,CAAC,MAAM;AAAA,UACP,CAAC,MAAM;AAAA,QACR;AAAA,QACA,IAAI;AAAA,UACH;AAAA,UACA;AAAA,UACA,CAAC,MAAM;AAAA,UACP,CAAC,MAAM;AAAA,QACR;AAAA,MACD;AAAA,MACA,IAAI;AAAA,QAYH;AAAA,QACA,CAAC,MAIK;AACL,sBAAY;AAAA,YACX;AAAA,YACA,EAAE;AAAA,UACH;AACA,cAAI,EAAE,qBAAqB,QAAW;AACrC,kBAAM,SAAS,KAAK,kBAAkB;AAAA,cACrC,EAAE;AAAA,YACH;AACA,wBAAY;AAAA,cACX;AAAA,cACA,OAAO;AAAA,YACR;AACA,mBAAO;AAAA,cACN,aAAa,IAAI,OAAO,EAAE,WAAW;AAAA,cACrC,UAAU,IAAI,OAAO,EAAE,QAAQ;AAAA,cAC/B,gBAAgB,OAAO;AAAA,YACxB;AAAA,UACD;AACA,sBAAY;AAAA,YACX;AAAA,YACA,EAAE;AAAA,YACF,EAAE;AAAA,UACH;AACA,iBAAO;AAAA,YACN,aAAa,IAAI,OAAO,EAAE,WAAW;AAAA,YACrC,UAAU,IAAI,OAAO,EAAE,QAAQ;AAAA,UAChC;AAAA,QACD;AAAA,MACD;AAAA,IACD;AACA,SAAK,UAAU,mBAAmB,cAAc;AAAA,EACjD;AAAA,EA5GD,OAqBmE;AAAA;AAAA;AAAA,EAyFlE,4BACC,KACA,KACA,YACA,aACC;AACD,SAAK,yBAAyB,+BAA+B;AAAA,MAC5D,gBAAgB;AAAA,QACf;AAAA,UACC,KAAK;AAAA,UACL,OAAO,CAAC,EAAE;AAAA,UACV;AAAA,UACA;AAAA,UACA,SAAS;AAAA,UACT,WAAW;AAAA,QACZ;AAAA,MACD;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEA,+BACC,KACA,aACC;AACD,SAAK,yBAAyB,+BAA+B;AAAA,MAC5D,kBAAkB,CAAC,GAAG;AAAA,IACvB,CAAC;AAAA,EACF;AACD;",
  "names": []
}
