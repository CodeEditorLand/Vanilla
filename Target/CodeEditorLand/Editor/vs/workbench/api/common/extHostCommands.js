var S=Object.defineProperty;var E=Object.getOwnPropertyDescriptor;var g=(l,e,t,n)=>{for(var r=n>1?void 0:n?E(e,t):e,o=l.length-1,i;o>=0;o--)(i=l[o])&&(r=(n?i(e,t,r):i(r))||r);return n&&r&&S(e,t,r),r},f=(l,e)=>(t,n)=>e(t,n,l);import{isNonEmptyArray as _}from"../../../base/common/arrays.js";import{VSBuffer as p}from"../../../base/common/buffer.js";import{toErrorMessage as P}from"../../../base/common/errorMessage.js";import{toDisposable as H}from"../../../base/common/lifecycle.js";import{revive as C}from"../../../base/common/marshalling.js";import{cloneAndChange as x}from"../../../base/common/objects.js";import{StopWatch as b}from"../../../base/common/stopwatch.js";import{validateConstraint as A}from"../../../base/common/types.js";import{URI as I}from"../../../base/common/uri.js";import{generateUuid as $}from"../../../base/common/uuid.js";import{Position as D}from"../../../editor/common/core/position.js";import{Range as v}from"../../../editor/common/core/range.js";import{createDecorator as R}from"../../../platform/instantiation/common/instantiation.js";import{ILogService as M}from"../../../platform/log/common/log.js";import{TelemetryTrustedValue as V}from"../../../platform/telemetry/common/telemetryUtils.js";import{SerializableObjectWithBuffers as k}from"../../services/extensions/common/proxyIdentifier.js";import{MainContext as T}from"./extHost.protocol.js";import{IExtHostRpcService as U}from"./extHostRpcService.js";import{IExtHostTelemetry as O}from"./extHostTelemetry.js";import{TestItemImpl as L}from"./extHostTestItem.js";import*as a from"./extHostTypeConverters.js";import*as c from"./extHostTypes.js";let y=class{_serviceBrand;#e;_commands=new Map;_apiCommands=new Map;#t;_logService;#n;_argumentProcessors;converter;constructor(e,t,n){this.#e=e.getProxy(T.MainThreadCommands),this._logService=t,this.#n=n,this.#t=e.getProxy(T.MainThreadTelemetry),this.converter=new N(this,r=>{const o=this._apiCommands.get(r);return o?.result===h.Void?o:void 0},t),this._argumentProcessors=[{processArgument(r){return C(r)}},{processArgument(r){return x(r,o=>{if(v.isIRange(o))return a.Range.to(o);if(D.isIPosition(o))return a.Position.to(o);if(v.isIRange(o.range)&&I.isUri(o.uri))return a.location.to(o);if(o instanceof p)return o.buffer.buffer;if(!Array.isArray(o))return o})}}]}registerArgumentProcessor(e){this._argumentProcessors.push(e)}registerApiCommand(e){const t=this.registerCommand(!1,e.id,async(...n)=>{const r=e.args.map((i,m)=>{if(!i.validate(n[m]))throw new Error(`Invalid argument '${i.name}' when running '${e.id}', received: ${typeof n[m]=="object"?JSON.stringify(n[m],null,"	"):n[m]} `);return i.convert(n[m])}),o=await this.executeCommand(e.internalId,...r);return e.result.convert(o,n,this.converter)},void 0,{description:e.description,args:e.args,returns:e.result.description});return this._apiCommands.set(e.id,e),new c.Disposable(()=>{t.dispose(),this._apiCommands.delete(e.id)})}registerCommand(e,t,n,r,o,i){if(this._logService.trace("ExtHostCommands#registerCommand",t),!t.trim().length)throw new Error("invalid id");if(this._commands.has(t))throw new Error(`command '${t}' already exists`);return this._commands.set(t,{callback:n,thisArg:r,metadata:o,extension:i}),e&&this.#e.$registerCommand(t),new c.Disposable(()=>{this._commands.delete(t)&&e&&this.#e.$unregisterCommand(t)})}executeCommand(e,...t){return this._logService.trace("ExtHostCommands#executeCommand",e),this._doExecuteCommand(e,t,!0)}async _doExecuteCommand(e,t,n){if(this._commands.has(e))return this.#e.$fireCommandActivationEvent(e),this._executeContributedCommand(e,t,!1);{let r=!1;const o=x(t,i=>{if(i instanceof c.Position)return a.Position.from(i);if(i instanceof c.Range)return a.Range.from(i);if(i instanceof c.Location)return a.location.from(i);if(c.NotebookRange.isNotebookRange(i))return a.NotebookRange.from(i);if(i instanceof ArrayBuffer)return r=!0,p.wrap(new Uint8Array(i));if(i instanceof Uint8Array)return r=!0,p.wrap(i);if(i instanceof p)return r=!0,i;if(!Array.isArray(i))return i});try{const i=await this.#e.$executeCommand(e,r?new k(o):o,n);return C(i)}catch(i){if(i instanceof Error&&i.message==="$executeCommand:retry")return this._doExecuteCommand(e,t,!1);throw i}}}async _executeContributedCommand(e,t,n){const r=this._commands.get(e);if(!r)throw new Error("Unknown command");const{callback:o,thisArg:i,metadata:m}=r;if(m?.args)for(let d=0;d<m.args.length;d++)try{A(t[d],m.args[d].constraint)}catch{throw new Error(`Running the contributed command: '${e}' failed. Illegal argument '${m.args[d].name}' - ${m.args[d].description}`)}const w=b.create();try{return await o.apply(i,t)}catch(d){if(e===this.converter.delegatingCommandId){const u=this.converter.getActualCommand(...t);u&&(e=u.command)}if(this._logService.error(d,e,r.extension?.identifier),!n)throw d;if(r.extension?.identifier){const u=this.#n.onExtensionError(r.extension.identifier,d);this._logService.trace("forwarded error to extension?",u,r.extension?.identifier)}throw new class extends Error{id=e;source=r.extension?.displayName??r.extension?.name;constructor(){super(P(d))}}}finally{this._reportTelemetry(r,e,w.elapsed())}}_reportTelemetry(e,t,n){e.extension&&this.#t.$publicLog2("Extension:ActionExecuted",{extensionId:e.extension.identifier.value,id:new V(t),duration:n})}$executeContributedCommand(e,...t){this._logService.trace("ExtHostCommands#$executeContributedCommand",e);const n=this._commands.get(e);return n?(t=t.map(r=>this._argumentProcessors.reduce((o,i)=>i.processArgument(o,n.extension?.identifier),r)),this._executeContributedCommand(e,t,!0)):Promise.reject(new Error(`Contributed command '${e}' does not exist.`))}getCommands(e=!1){return this._logService.trace("ExtHostCommands#getCommands",e),this.#e.$getCommands().then(t=>(e&&(t=t.filter(n=>n[0]!=="_")),t))}$getContributedCommandMetadata(){const e=Object.create(null);for(const[t,n]of this._commands){const{metadata:r}=n;r&&(e[t]=r)}return Promise.resolve(e)}};y=g([f(0,U),f(1,M),f(2,O)],y);const de=R("IExtHostCommands");class N{constructor(e,t,n){this._commands=e;this._lookupApiCommand=t;this._logService=n;this._commands.registerCommand(!0,this.delegatingCommandId,this._executeConvertedCommand,this)}delegatingCommandId=`__vsc${$()}`;_cache=new Map;_cachIdPool=0;toInternal(e,t){if(!e)return;const n={$ident:void 0,id:e.command,title:e.title,tooltip:e.tooltip};if(!e.command)return n;const r=this._lookupApiCommand(e.command);if(r)n.id=r.internalId,n.arguments=r.args.map((o,i)=>o.convert(e.arguments&&e.arguments[i]));else if(_(e.arguments)){const o=`${e.command} /${++this._cachIdPool}`;this._cache.set(o,e),t.add(H(()=>{this._cache.delete(o),this._logService.trace("CommandsConverter#DISPOSE",o)})),n.$ident=o,n.id=this.delegatingCommandId,n.arguments=[o],this._logService.trace("CommandsConverter#CREATE",e.command,o)}return n}fromInternal(e){return typeof e.$ident=="string"?this._cache.get(e.$ident):{command:e.id,title:e.title,arguments:e.arguments}}getActualCommand(...e){return this._cache.get(e[0])}_executeConvertedCommand(...e){const t=this.getActualCommand(...e);return this._logService.trace("CommandsConverter#EXECUTE",e[0],t?t.command:"MISSING"),t?this._commands.executeCommand(t.command,...t.arguments||[]):Promise.reject(`Actual command not found, wanted to execute ${e[0]}`)}}class s{constructor(e,t,n,r){this.name=e;this.description=t;this.validate=n;this.convert=r}static Uri=new s("uri","Uri of a text document",e=>I.isUri(e),e=>e);static Position=new s("position","A position in a text document",e=>c.Position.isPosition(e),a.Position.from);static Range=new s("range","A range in a text document",e=>c.Range.isRange(e),a.Range.from);static Selection=new s("selection","A selection in a text document",e=>c.Selection.isSelection(e),a.Selection.from);static Number=new s("number","",e=>typeof e=="number",e=>e);static String=new s("string","",e=>typeof e=="string",e=>e);static StringArray=s.Arr(s.String);static Arr(e){return new s(`${e.name}_array`,`Array of ${e.name}, ${e.description}`,t=>Array.isArray(t)&&t.every(n=>e.validate(n)),t=>t.map(n=>e.convert(n)))}static CallHierarchyItem=new s("item","A call hierarchy item",e=>e instanceof c.CallHierarchyItem,a.CallHierarchyItem.from);static TypeHierarchyItem=new s("item","A type hierarchy item",e=>e instanceof c.TypeHierarchyItem,a.TypeHierarchyItem.from);static TestItem=new s("testItem","A VS Code TestItem",e=>e instanceof L,a.TestItem.from);optional(){return new s(this.name,`(optional) ${this.description}`,e=>e==null||this.validate(e),e=>e===void 0?void 0:e===null?null:this.convert(e))}with(e,t){return new s(e??this.name,t??this.description,this.validate,this.convert)}}class h{constructor(e,t){this.description=e;this.convert=t}static Void=new h("no result",e=>e)}class ce{constructor(e,t,n,r,o){this.id=e;this.internalId=t;this.description=n;this.args=r;this.result=o}}export{ce as ApiCommand,s as ApiCommandArgument,h as ApiCommandResult,N as CommandsConverter,y as ExtHostCommands,de as IExtHostCommands};
