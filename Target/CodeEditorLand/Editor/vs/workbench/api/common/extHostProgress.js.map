{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostProgress.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { ProgressOptions } from \"vscode\";\nimport {\n\tCancellationToken,\n\tCancellationTokenSource,\n} from \"../../../base/common/cancellation.js\";\nimport { throttle } from \"../../../base/common/decorators.js\";\nimport { onUnexpectedExternalError } from \"../../../base/common/errors.js\";\nimport type { IExtensionDescription } from \"../../../platform/extensions/common/extensions.js\";\nimport {\n\ttype IProgressStep,\n\tProgress,\n} from \"../../../platform/progress/common/progress.js\";\nimport type {\n\tExtHostProgressShape,\n\tMainThreadProgressShape,\n} from \"./extHost.protocol.js\";\nimport { ProgressLocation } from \"./extHostTypeConverters.js\";\n\nexport class ExtHostProgress implements ExtHostProgressShape {\n\tprivate _proxy: MainThreadProgressShape;\n\tprivate _handles = 0;\n\tprivate _mapHandleToCancellationSource: Map<\n\t\tnumber,\n\t\tCancellationTokenSource\n\t> = new Map();\n\n\tconstructor(proxy: MainThreadProgressShape) {\n\t\tthis._proxy = proxy;\n\t}\n\n\tasync withProgress<R>(\n\t\textension: IExtensionDescription,\n\t\toptions: ProgressOptions,\n\t\ttask: (\n\t\t\tprogress: Progress<IProgressStep>,\n\t\t\ttoken: CancellationToken,\n\t\t) => Thenable<R>,\n\t): Promise<R> {\n\t\tconst handle = this._handles++;\n\t\tconst { title, location, cancellable } = options;\n\t\tconst source = {\n\t\t\tlabel: extension.displayName || extension.name,\n\t\t\tid: extension.identifier.value,\n\t\t};\n\n\t\tthis._proxy\n\t\t\t.$startProgress(\n\t\t\t\thandle,\n\t\t\t\t{\n\t\t\t\t\tlocation: ProgressLocation.from(location),\n\t\t\t\t\ttitle,\n\t\t\t\t\tsource,\n\t\t\t\t\tcancellable,\n\t\t\t\t},\n\t\t\t\textension.isUnderDevelopment\n\t\t\t\t\t? undefined\n\t\t\t\t\t: extension.identifier.value,\n\t\t\t)\n\t\t\t.catch(onUnexpectedExternalError);\n\t\treturn this._withProgress(handle, task, !!cancellable);\n\t}\n\n\tprivate _withProgress<R>(\n\t\thandle: number,\n\t\ttask: (\n\t\t\tprogress: Progress<IProgressStep>,\n\t\t\ttoken: CancellationToken,\n\t\t) => Thenable<R>,\n\t\tcancellable: boolean,\n\t): Thenable<R> {\n\t\tlet source: CancellationTokenSource | undefined;\n\t\tif (cancellable) {\n\t\t\tsource = new CancellationTokenSource();\n\t\t\tthis._mapHandleToCancellationSource.set(handle, source);\n\t\t}\n\n\t\tconst progressEnd = (handle: number): void => {\n\t\t\tthis._proxy.$progressEnd(handle);\n\t\t\tthis._mapHandleToCancellationSource.delete(handle);\n\t\t\tsource?.dispose();\n\t\t};\n\n\t\tlet p: Thenable<R>;\n\n\t\ttry {\n\t\t\tp = task(\n\t\t\t\tnew ProgressCallback(this._proxy, handle),\n\t\t\t\tcancellable && source ? source.token : CancellationToken.None,\n\t\t\t);\n\t\t} catch (err) {\n\t\t\tprogressEnd(handle);\n\t\t\tthrow err;\n\t\t}\n\n\t\tp.then(\n\t\t\t(result) => progressEnd(handle),\n\t\t\t(err) => progressEnd(handle),\n\t\t);\n\t\treturn p;\n\t}\n\n\tpublic $acceptProgressCanceled(handle: number): void {\n\t\tconst source = this._mapHandleToCancellationSource.get(handle);\n\t\tif (source) {\n\t\t\tsource.cancel();\n\t\t\tthis._mapHandleToCancellationSource.delete(handle);\n\t\t}\n\t}\n}\n\nfunction mergeProgress(\n\tresult: IProgressStep,\n\tcurrentValue: IProgressStep,\n): IProgressStep {\n\tresult.message = currentValue.message;\n\tif (typeof currentValue.increment === \"number\") {\n\t\tif (typeof result.increment === \"number\") {\n\t\t\tresult.increment += currentValue.increment;\n\t\t} else {\n\t\t\tresult.increment = currentValue.increment;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nclass ProgressCallback extends Progress<IProgressStep> {\n\tconstructor(\n\t\tprivate _proxy: MainThreadProgressShape,\n\t\tprivate _handle: number,\n\t) {\n\t\tsuper((p) => this.throttledReport(p));\n\t}\n\n\t@throttle(\n\t\t100,\n\t\t(result: IProgressStep, currentValue: IProgressStep) =>\n\t\t\tmergeProgress(result, currentValue),\n\t\t() => Object.create(null),\n\t)\n\tthrottledReport(p: IProgressStep): void {\n\t\tthis._proxy.$progressReport(this._handle, p);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;AAMA;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,gBAAgB;AACzB,SAAS,iCAAiC;AAE1C;AAAA,EAEC;AAAA,OACM;AAKP,SAAS,wBAAwB;AAE1B,MAAM,gBAAgD;AAAA,EAvB7D,OAuB6D;AAAA;AAAA;AAAA,EACpD;AAAA,EACA,WAAW;AAAA,EACX,iCAGJ,oBAAI,IAAI;AAAA,EAEZ,YAAY,OAAgC;AAC3C,SAAK,SAAS;AAAA,EACf;AAAA,EAEA,MAAM,aACL,WACA,SACA,MAIa;AACb,UAAM,SAAS,KAAK;AACpB,UAAM,EAAE,OAAO,UAAU,YAAY,IAAI;AACzC,UAAM,SAAS;AAAA,MACd,OAAO,UAAU,eAAe,UAAU;AAAA,MAC1C,IAAI,UAAU,WAAW;AAAA,IAC1B;AAEA,SAAK,OACH;AAAA,MACA;AAAA,MACA;AAAA,QACC,UAAU,iBAAiB,KAAK,QAAQ;AAAA,QACxC;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,MACA,UAAU,qBACP,SACA,UAAU,WAAW;AAAA,IACzB,EACC,MAAM,yBAAyB;AACjC,WAAO,KAAK,cAAc,QAAQ,MAAM,CAAC,CAAC,WAAW;AAAA,EACtD;AAAA,EAEQ,cACP,QACA,MAIA,aACc;AACd,QAAI;AACJ,QAAI,aAAa;AAChB,eAAS,IAAI,wBAAwB;AACrC,WAAK,+BAA+B,IAAI,QAAQ,MAAM;AAAA,IACvD;AAEA,UAAM,cAAc,wBAACA,YAAyB;AAC7C,WAAK,OAAO,aAAaA,OAAM;AAC/B,WAAK,+BAA+B,OAAOA,OAAM;AACjD,cAAQ,QAAQ;AAAA,IACjB,GAJoB;AAMpB,QAAI;AAEJ,QAAI;AACH,UAAI;AAAA,QACH,IAAI,iBAAiB,KAAK,QAAQ,MAAM;AAAA,QACxC,eAAe,SAAS,OAAO,QAAQ,kBAAkB;AAAA,MAC1D;AAAA,IACD,SAAS,KAAK;AACb,kBAAY,MAAM;AAClB,YAAM;AAAA,IACP;AAEA,MAAE;AAAA,MACD,CAAC,WAAW,YAAY,MAAM;AAAA,MAC9B,CAAC,QAAQ,YAAY,MAAM;AAAA,IAC5B;AACA,WAAO;AAAA,EACR;AAAA,EAEO,wBAAwB,QAAsB;AACpD,UAAM,SAAS,KAAK,+BAA+B,IAAI,MAAM;AAC7D,QAAI,QAAQ;AACX,aAAO,OAAO;AACd,WAAK,+BAA+B,OAAO,MAAM;AAAA,IAClD;AAAA,EACD;AACD;AAEA,SAAS,cACR,QACA,cACgB;AAChB,SAAO,UAAU,aAAa;AAC9B,MAAI,OAAO,aAAa,cAAc,UAAU;AAC/C,QAAI,OAAO,OAAO,cAAc,UAAU;AACzC,aAAO,aAAa,aAAa;AAAA,IAClC,OAAO;AACN,aAAO,YAAY,aAAa;AAAA,IACjC;AAAA,EACD;AAEA,SAAO;AACR;AAdS;AAgBT,MAAM,yBAAyB,SAAwB;AAAA,EACtD,YACS,QACA,SACP;AACD,UAAM,CAAC,MAAM,KAAK,gBAAgB,CAAC,CAAC;AAH5B;AACA;AAAA,EAGT;AAAA,EAzID,OAmIuD;AAAA;AAAA;AAAA,EActD,gBAAgB,GAAwB;AACvC,SAAK,OAAO,gBAAgB,KAAK,SAAS,CAAC;AAAA,EAC5C;AACD;AAHC;AAAA,EANC;AAAA,IACA;AAAA,IACA,CAAC,QAAuB,iBACvB,cAAc,QAAQ,YAAY;AAAA,IACnC,MAAM,uBAAO,OAAO,IAAI;AAAA,EACzB;AAAA,GAbK,iBAcL;",
  "names": ["handle"]
}
