{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostLoggerService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { revive } from \"../../../base/common/marshalling.js\";\nimport { URI, type UriComponents } from \"../../../base/common/uri.js\";\nimport {\n\tAbstractLoggerService,\n\tAbstractMessageLogger,\n\ttype ILogger,\n\ttype ILoggerOptions,\n\ttype LogLevel,\n} from \"../../../platform/log/common/log.js\";\nimport {\n\ttype ExtHostLogLevelServiceShape,\n\tMainContext,\n\ttype MainThreadLoggerShape,\n} from \"./extHost.protocol.js\";\nimport { IExtHostInitDataService } from \"./extHostInitDataService.js\";\nimport { IExtHostRpcService } from \"./extHostRpcService.js\";\n\nexport class ExtHostLoggerService\n\textends AbstractLoggerService\n\timplements ExtHostLogLevelServiceShape\n{\n\tdeclare readonly _serviceBrand: undefined;\n\tprotected readonly _proxy: MainThreadLoggerShape;\n\n\tconstructor(\n\t\t@IExtHostRpcService rpc: IExtHostRpcService,\n\t\t@IExtHostInitDataService initData: IExtHostInitDataService,\n\t) {\n\t\tsuper(\n\t\t\tinitData.logLevel,\n\t\t\tinitData.logsLocation,\n\t\t\tinitData.loggers.map((logger) => revive(logger)),\n\t\t);\n\t\tthis._proxy = rpc.getProxy(MainContext.MainThreadLogger);\n\t}\n\n\t$setLogLevel(logLevel: LogLevel, resource?: UriComponents): void {\n\t\tif (resource) {\n\t\t\tthis.setLogLevel(URI.revive(resource), logLevel);\n\t\t} else {\n\t\t\tthis.setLogLevel(logLevel);\n\t\t}\n\t}\n\n\toverride setVisibility(resource: URI, visibility: boolean): void {\n\t\tsuper.setVisibility(resource, visibility);\n\t\tthis._proxy.$setVisibility(resource, visibility);\n\t}\n\n\tprotected doCreateLogger(\n\t\tresource: URI,\n\t\tlogLevel: LogLevel,\n\t\toptions?: ILoggerOptions,\n\t): ILogger {\n\t\treturn new Logger(this._proxy, resource, logLevel, options);\n\t}\n}\n\nclass Logger extends AbstractMessageLogger {\n\tprivate isLoggerCreated = false;\n\tprivate buffer: [LogLevel, string][] = [];\n\n\tconstructor(\n\t\tprivate readonly proxy: MainThreadLoggerShape,\n\t\tprivate readonly file: URI,\n\t\tlogLevel: LogLevel,\n\t\tloggerOptions?: ILoggerOptions,\n\t) {\n\t\tsuper(loggerOptions?.logLevel === \"always\");\n\t\tthis.setLevel(logLevel);\n\t\tthis.proxy.$createLogger(file, loggerOptions).then(() => {\n\t\t\tthis.doLog(this.buffer);\n\t\t\tthis.isLoggerCreated = true;\n\t\t});\n\t}\n\n\tprotected log(level: LogLevel, message: string) {\n\t\tconst messages: [LogLevel, string][] = [[level, message]];\n\t\tif (this.isLoggerCreated) {\n\t\t\tthis.doLog(messages);\n\t\t} else {\n\t\t\tthis.buffer.push(...messages);\n\t\t}\n\t}\n\n\tprivate doLog(messages: [LogLevel, string][]) {\n\t\tthis.proxy.$log(this.file, messages);\n\t}\n\n\toverride flush(): void {\n\t\tthis.proxy.$flush(this.file);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,cAAc;AACvB,SAAS,WAA+B;AACxC;AAAA,EACC;AAAA,EACA;AAAA,OAIM;AACP;AAAA,EAEC;AAAA,OAEM;AACP,SAAS,+BAA+B;AACxC,SAAS,0BAA0B;AAE5B,IAAM,uBAAN,cACE,sBAET;AAAA,EAzBA,OAyBA;AAAA;AAAA;AAAA,EAEoB;AAAA,EAEnB,YACqB,KACK,UACxB;AACD;AAAA,MACC,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS,QAAQ,IAAI,CAAC,WAAW,OAAO,MAAM,CAAC;AAAA,IAChD;AACA,SAAK,SAAS,IAAI,SAAS,YAAY,gBAAgB;AAAA,EACxD;AAAA,EAEA,aAAa,UAAoB,UAAgC;AAChE,QAAI,UAAU;AACb,WAAK,YAAY,IAAI,OAAO,QAAQ,GAAG,QAAQ;AAAA,IAChD,OAAO;AACN,WAAK,YAAY,QAAQ;AAAA,IAC1B;AAAA,EACD;AAAA,EAES,cAAc,UAAe,YAA2B;AAChE,UAAM,cAAc,UAAU,UAAU;AACxC,SAAK,OAAO,eAAe,UAAU,UAAU;AAAA,EAChD;AAAA,EAEU,eACT,UACA,UACA,SACU;AACV,WAAO,IAAI,OAAO,KAAK,QAAQ,UAAU,UAAU,OAAO;AAAA,EAC3D;AACD;AAvCa,uBAAN;AAAA,EAQJ;AAAA,EACA;AAAA,GATU;AAyCb,MAAM,eAAe,sBAAsB;AAAA,EAI1C,YACkB,OACA,MACjB,UACA,eACC;AACD,UAAM,eAAe,aAAa,QAAQ;AALzB;AACA;AAKjB,SAAK,SAAS,QAAQ;AACtB,SAAK,MAAM,cAAc,MAAM,aAAa,EAAE,KAAK,MAAM;AACxD,WAAK,MAAM,KAAK,MAAM;AACtB,WAAK,kBAAkB;AAAA,IACxB,CAAC;AAAA,EACF;AAAA,EA/ED,OA+D2C;AAAA;AAAA;AAAA,EAClC,kBAAkB;AAAA,EAClB,SAA+B,CAAC;AAAA,EAgB9B,IAAI,OAAiB,SAAiB;AAC/C,UAAM,WAAiC,CAAC,CAAC,OAAO,OAAO,CAAC;AACxD,QAAI,KAAK,iBAAiB;AACzB,WAAK,MAAM,QAAQ;AAAA,IACpB,OAAO;AACN,WAAK,OAAO,KAAK,GAAG,QAAQ;AAAA,IAC7B;AAAA,EACD;AAAA,EAEQ,MAAM,UAAgC;AAC7C,SAAK,MAAM,KAAK,KAAK,MAAM,QAAQ;AAAA,EACpC;AAAA,EAES,QAAc;AACtB,SAAK,MAAM,OAAO,KAAK,IAAI;AAAA,EAC5B;AACD;",
  "names": []
}
