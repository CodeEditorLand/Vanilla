{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostNotebookEditors.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from '../../../base/common/event.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { ExtHostNotebookEditorsShape, INotebookEditorPropertiesChangeData, INotebookEditorViewColumnInfo } from './extHost.protocol.js';\nimport { ExtHostNotebookController } from './extHostNotebook.js';\nimport * as typeConverters from './extHostTypeConverters.js';\nimport type * as vscode from 'vscode';\n\n\nexport class ExtHostNotebookEditors implements ExtHostNotebookEditorsShape {\n\n\tprivate readonly _onDidChangeNotebookEditorSelection = new Emitter<vscode.NotebookEditorSelectionChangeEvent>();\n\tprivate readonly _onDidChangeNotebookEditorVisibleRanges = new Emitter<vscode.NotebookEditorVisibleRangesChangeEvent>();\n\n\treadonly onDidChangeNotebookEditorSelection = this._onDidChangeNotebookEditorSelection.event;\n\treadonly onDidChangeNotebookEditorVisibleRanges = this._onDidChangeNotebookEditorVisibleRanges.event;\n\n\tconstructor(\n\t\t@ILogService private readonly _logService: ILogService,\n\t\tprivate readonly _notebooksAndEditors: ExtHostNotebookController,\n\t) { }\n\n\t$acceptEditorPropertiesChanged(id: string, data: INotebookEditorPropertiesChangeData): void {\n\t\tthis._logService.debug('ExtHostNotebook#$acceptEditorPropertiesChanged', id, data);\n\t\tconst editor = this._notebooksAndEditors.getEditorById(id);\n\t\t// ONE: make all state updates\n\t\tif (data.visibleRanges) {\n\t\t\teditor._acceptVisibleRanges(data.visibleRanges.ranges.map(typeConverters.NotebookRange.to));\n\t\t}\n\t\tif (data.selections) {\n\t\t\teditor._acceptSelections(data.selections.selections.map(typeConverters.NotebookRange.to));\n\t\t}\n\n\t\t// TWO: send all events after states have been updated\n\t\tif (data.visibleRanges) {\n\t\t\tthis._onDidChangeNotebookEditorVisibleRanges.fire({\n\t\t\t\tnotebookEditor: editor.apiEditor,\n\t\t\t\tvisibleRanges: editor.apiEditor.visibleRanges\n\t\t\t});\n\t\t}\n\t\tif (data.selections) {\n\t\t\tthis._onDidChangeNotebookEditorSelection.fire(Object.freeze({\n\t\t\t\tnotebookEditor: editor.apiEditor,\n\t\t\t\tselections: editor.apiEditor.selections\n\t\t\t}));\n\t\t}\n\t}\n\n\t$acceptEditorViewColumns(data: INotebookEditorViewColumnInfo): void {\n\t\tfor (const id in data) {\n\t\t\tconst editor = this._notebooksAndEditors.getEditorById(id);\n\t\t\teditor._acceptViewColumn(typeConverters.ViewColumn.to(data[id]));\n\t\t}\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,eAAe;AACxB,SAAS,mBAAmB;AAC5B,SAAS,6BAA6B,qCAAqC,qCAAqC;AAChH,SAAS,iCAAiC;AAC1C,YAAY,oBAAoB;AAIzB,IAAM,yBAAN,MAAoE;AAAA,EAQ1E,YAC+B,aACb,sBAChB;AAF6B;AACb;AAAA,EACd;AAAA,EAxBL,OAa2E;AAAA;AAAA;AAAA,EAEzD,sCAAsC,IAAI,QAAmD;AAAA,EAC7F,0CAA0C,IAAI,QAAuD;AAAA,EAE7G,qCAAqC,KAAK,oCAAoC;AAAA,EAC9E,yCAAyC,KAAK,wCAAwC;AAAA,EAO/F,+BAA+B,IAAY,MAAiD;AAC3F,SAAK,YAAY,MAAM,kDAAkD,IAAI,IAAI;AACjF,UAAM,SAAS,KAAK,qBAAqB,cAAc,EAAE;AAEzD,QAAI,KAAK,eAAe;AACvB,aAAO,qBAAqB,KAAK,cAAc,OAAO,IAAI,eAAe,cAAc,EAAE,CAAC;AAAA,IAC3F;AACA,QAAI,KAAK,YAAY;AACpB,aAAO,kBAAkB,KAAK,WAAW,WAAW,IAAI,eAAe,cAAc,EAAE,CAAC;AAAA,IACzF;AAGA,QAAI,KAAK,eAAe;AACvB,WAAK,wCAAwC,KAAK;AAAA,QACjD,gBAAgB,OAAO;AAAA,QACvB,eAAe,OAAO,UAAU;AAAA,MACjC,CAAC;AAAA,IACF;AACA,QAAI,KAAK,YAAY;AACpB,WAAK,oCAAoC,KAAK,OAAO,OAAO;AAAA,QAC3D,gBAAgB,OAAO;AAAA,QACvB,YAAY,OAAO,UAAU;AAAA,MAC9B,CAAC,CAAC;AAAA,IACH;AAAA,EACD;AAAA,EAEA,yBAAyB,MAA2C;AACnE,eAAW,MAAM,MAAM;AACtB,YAAM,SAAS,KAAK,qBAAqB,cAAc,EAAE;AACzD,aAAO,kBAAkB,eAAe,WAAW,GAAG,KAAK,EAAE,CAAC,CAAC;AAAA,IAChE;AAAA,EACD;AACD;AA7Ca,yBAAN;AAAA,EASJ;AAAA,GATU;",
  "names": []
}
