{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostVariableResolverService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Lazy } from '../../../base/common/lazy.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport * as path from '../../../base/common/path.js';\nimport * as process from '../../../base/common/process.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nimport { IExtHostDocumentsAndEditors } from './extHostDocumentsAndEditors.js';\nimport { IExtHostEditorTabs } from './extHostEditorTabs.js';\nimport { IExtHostExtensionService } from './extHostExtensionService.js';\nimport { CustomEditorTabInput, NotebookDiffEditorTabInput, NotebookEditorTabInput, TextDiffTabInput, TextTabInput } from './extHostTypes.js';\nimport { IExtHostWorkspace } from './extHostWorkspace.js';\nimport { IConfigurationResolverService } from '../../services/configurationResolver/common/configurationResolver.js';\nimport { AbstractVariableResolverService } from '../../services/configurationResolver/common/variableResolver.js';\nimport * as vscode from 'vscode';\nimport { ExtHostConfigProvider, IExtHostConfiguration } from './extHostConfiguration.js';\n\nexport interface IExtHostVariableResolverProvider {\n\treadonly _serviceBrand: undefined;\n\tgetResolver(): Promise<IConfigurationResolverService>;\n}\n\nexport const IExtHostVariableResolverProvider = createDecorator<IExtHostVariableResolverProvider>('IExtHostVariableResolverProvider');\n\ninterface DynamicContext {\n\tfolders: vscode.WorkspaceFolder[];\n}\n\nclass ExtHostVariableResolverService extends AbstractVariableResolverService {\n\n\tconstructor(\n\t\textensionService: IExtHostExtensionService,\n\t\tworkspaceService: IExtHostWorkspace,\n\t\teditorService: IExtHostDocumentsAndEditors,\n\t\teditorTabs: IExtHostEditorTabs,\n\t\tconfigProvider: ExtHostConfigProvider,\n\t\tcontext: DynamicContext,\n\t\thomeDir: string | undefined,\n\t) {\n\t\tfunction getActiveUri(): URI | undefined {\n\t\t\tif (editorService) {\n\t\t\t\tconst activeEditor = editorService.activeEditor();\n\t\t\t\tif (activeEditor) {\n\t\t\t\t\treturn activeEditor.document.uri;\n\t\t\t\t}\n\t\t\t\tconst activeTab = editorTabs.tabGroups.all.find(group => group.isActive)?.activeTab;\n\t\t\t\tif (activeTab !== undefined) {\n\t\t\t\t\t// Resolve a resource from the tab\n\t\t\t\t\tif (activeTab.input instanceof TextDiffTabInput || activeTab.input instanceof NotebookDiffEditorTabInput) {\n\t\t\t\t\t\treturn activeTab.input.modified;\n\t\t\t\t\t} else if (activeTab.input instanceof TextTabInput || activeTab.input instanceof NotebookEditorTabInput || activeTab.input instanceof CustomEditorTabInput) {\n\t\t\t\t\t\treturn activeTab.input.uri;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}\n\n\t\tsuper({\n\t\t\tgetFolderUri: (folderName: string): URI | undefined => {\n\t\t\t\tconst found = context.folders.filter(f => f.name === folderName);\n\t\t\t\tif (found && found.length > 0) {\n\t\t\t\t\treturn found[0].uri;\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tgetWorkspaceFolderCount: (): number => {\n\t\t\t\treturn context.folders.length;\n\t\t\t},\n\t\t\tgetConfigurationValue: (folderUri: URI | undefined, section: string): string | undefined => {\n\t\t\t\treturn configProvider.getConfiguration(undefined, folderUri).get<string>(section);\n\t\t\t},\n\t\t\tgetAppRoot: (): string | undefined => {\n\t\t\t\treturn process.cwd();\n\t\t\t},\n\t\t\tgetExecPath: (): string | undefined => {\n\t\t\t\treturn process.env['VSCODE_EXEC_PATH'];\n\t\t\t},\n\t\t\tgetFilePath: (): string | undefined => {\n\t\t\t\tconst activeUri = getActiveUri();\n\t\t\t\tif (activeUri) {\n\t\t\t\t\treturn path.normalize(activeUri.fsPath);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tgetWorkspaceFolderPathForFile: (): string | undefined => {\n\t\t\t\tif (workspaceService) {\n\t\t\t\t\tconst activeUri = getActiveUri();\n\t\t\t\t\tif (activeUri) {\n\t\t\t\t\t\tconst ws = workspaceService.getWorkspaceFolder(activeUri);\n\t\t\t\t\t\tif (ws) {\n\t\t\t\t\t\t\treturn path.normalize(ws.uri.fsPath);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tgetSelectedText: (): string | undefined => {\n\t\t\t\tif (editorService) {\n\t\t\t\t\tconst activeEditor = editorService.activeEditor();\n\t\t\t\t\tif (activeEditor && !activeEditor.selection.isEmpty) {\n\t\t\t\t\t\treturn activeEditor.document.getText(activeEditor.selection);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tgetLineNumber: (): string | undefined => {\n\t\t\t\tif (editorService) {\n\t\t\t\t\tconst activeEditor = editorService.activeEditor();\n\t\t\t\t\tif (activeEditor) {\n\t\t\t\t\t\treturn String(activeEditor.selection.end.line + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tgetExtension: (id) => {\n\t\t\t\treturn extensionService.getExtension(id);\n\t\t\t},\n\t\t}, undefined, homeDir ? Promise.resolve(homeDir) : undefined, Promise.resolve(process.env));\n\t}\n}\n\nexport class ExtHostVariableResolverProviderService extends Disposable implements IExtHostVariableResolverProvider {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _resolver = new Lazy(async () => {\n\t\tconst configProvider = await this.configurationService.getConfigProvider();\n\t\tconst folders = await this.workspaceService.getWorkspaceFolders2() || [];\n\n\t\tconst dynamic: DynamicContext = { folders };\n\t\tthis._register(this.workspaceService.onDidChangeWorkspace(async e => {\n\t\t\tdynamic.folders = await this.workspaceService.getWorkspaceFolders2() || [];\n\t\t}));\n\n\t\treturn new ExtHostVariableResolverService(\n\t\t\tthis.extensionService,\n\t\t\tthis.workspaceService,\n\t\t\tthis.editorService,\n\t\t\tthis.editorTabs,\n\t\t\tconfigProvider,\n\t\t\tdynamic,\n\t\t\tthis.homeDir(),\n\t\t);\n\t});\n\n\tconstructor(\n\t\t@IExtHostExtensionService private readonly extensionService: IExtHostExtensionService,\n\t\t@IExtHostWorkspace private readonly workspaceService: IExtHostWorkspace,\n\t\t@IExtHostDocumentsAndEditors private readonly editorService: IExtHostDocumentsAndEditors,\n\t\t@IExtHostConfiguration private readonly configurationService: IExtHostConfiguration,\n\t\t@IExtHostEditorTabs private readonly editorTabs: IExtHostEditorTabs,\n\t) {\n\t\tsuper();\n\t}\n\n\tpublic getResolver(): Promise<IConfigurationResolverService> {\n\t\treturn this._resolver.value;\n\t}\n\n\tprotected homeDir(): string | undefined {\n\t\treturn undefined;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
