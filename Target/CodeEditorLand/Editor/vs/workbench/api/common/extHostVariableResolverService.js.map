{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostVariableResolverService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type * as vscode from \"vscode\";\nimport { Lazy } from \"../../../base/common/lazy.js\";\nimport { Disposable } from \"../../../base/common/lifecycle.js\";\nimport * as path from \"../../../base/common/path.js\";\nimport * as process from \"../../../base/common/process.js\";\nimport type { URI } from \"../../../base/common/uri.js\";\nimport { createDecorator } from \"../../../platform/instantiation/common/instantiation.js\";\nimport type { IConfigurationResolverService } from \"../../services/configurationResolver/common/configurationResolver.js\";\nimport { AbstractVariableResolverService } from \"../../services/configurationResolver/common/variableResolver.js\";\nimport {\n\ttype ExtHostConfigProvider,\n\tIExtHostConfiguration,\n} from \"./extHostConfiguration.js\";\nimport { IExtHostDocumentsAndEditors } from \"./extHostDocumentsAndEditors.js\";\nimport { IExtHostEditorTabs } from \"./extHostEditorTabs.js\";\nimport { IExtHostExtensionService } from \"./extHostExtensionService.js\";\nimport {\n\tCustomEditorTabInput,\n\tNotebookDiffEditorTabInput,\n\tNotebookEditorTabInput,\n\tTextDiffTabInput,\n\tTextTabInput,\n} from \"./extHostTypes.js\";\nimport { IExtHostWorkspace } from \"./extHostWorkspace.js\";\n\nexport interface IExtHostVariableResolverProvider {\n\treadonly _serviceBrand: undefined;\n\tgetResolver(): Promise<IConfigurationResolverService>;\n}\n\nexport const IExtHostVariableResolverProvider =\n\tcreateDecorator<IExtHostVariableResolverProvider>(\n\t\t\"IExtHostVariableResolverProvider\",\n\t);\n\ninterface DynamicContext {\n\tfolders: vscode.WorkspaceFolder[];\n}\n\nclass ExtHostVariableResolverService extends AbstractVariableResolverService {\n\tconstructor(\n\t\textensionService: IExtHostExtensionService,\n\t\tworkspaceService: IExtHostWorkspace,\n\t\teditorService: IExtHostDocumentsAndEditors,\n\t\teditorTabs: IExtHostEditorTabs,\n\t\tconfigProvider: ExtHostConfigProvider,\n\t\tcontext: DynamicContext,\n\t\thomeDir: string | undefined,\n\t) {\n\t\tfunction getActiveUri(): URI | undefined {\n\t\t\tif (editorService) {\n\t\t\t\tconst activeEditor = editorService.activeEditor();\n\t\t\t\tif (activeEditor) {\n\t\t\t\t\treturn activeEditor.document.uri;\n\t\t\t\t}\n\t\t\t\tconst activeTab = editorTabs.tabGroups.all.find(\n\t\t\t\t\t(group) => group.isActive,\n\t\t\t\t)?.activeTab;\n\t\t\t\tif (activeTab !== undefined) {\n\t\t\t\t\t// Resolve a resource from the tab\n\t\t\t\t\tif (\n\t\t\t\t\t\tactiveTab.input instanceof TextDiffTabInput ||\n\t\t\t\t\t\tactiveTab.input instanceof NotebookDiffEditorTabInput\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn activeTab.input.modified;\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tactiveTab.input instanceof TextTabInput ||\n\t\t\t\t\t\tactiveTab.input instanceof NotebookEditorTabInput ||\n\t\t\t\t\t\tactiveTab.input instanceof CustomEditorTabInput\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn activeTab.input.uri;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}\n\n\t\tsuper(\n\t\t\t{\n\t\t\t\tgetFolderUri: (folderName: string): URI | undefined => {\n\t\t\t\t\tconst found = context.folders.filter(\n\t\t\t\t\t\t(f) => f.name === folderName,\n\t\t\t\t\t);\n\t\t\t\t\tif (found && found.length > 0) {\n\t\t\t\t\t\treturn found[0].uri;\n\t\t\t\t\t}\n\t\t\t\t\treturn undefined;\n\t\t\t\t},\n\t\t\t\tgetWorkspaceFolderCount: (): number => {\n\t\t\t\t\treturn context.folders.length;\n\t\t\t\t},\n\t\t\t\tgetConfigurationValue: (\n\t\t\t\t\tfolderUri: URI | undefined,\n\t\t\t\t\tsection: string,\n\t\t\t\t): string | undefined => {\n\t\t\t\t\treturn configProvider\n\t\t\t\t\t\t.getConfiguration(undefined, folderUri)\n\t\t\t\t\t\t.get<string>(section);\n\t\t\t\t},\n\t\t\t\tgetAppRoot: (): string | undefined => {\n\t\t\t\t\treturn process.cwd();\n\t\t\t\t},\n\t\t\t\tgetExecPath: (): string | undefined => {\n\t\t\t\t\treturn process.env[\"VSCODE_EXEC_PATH\"];\n\t\t\t\t},\n\t\t\t\tgetFilePath: (): string | undefined => {\n\t\t\t\t\tconst activeUri = getActiveUri();\n\t\t\t\t\tif (activeUri) {\n\t\t\t\t\t\treturn path.normalize(activeUri.fsPath);\n\t\t\t\t\t}\n\t\t\t\t\treturn undefined;\n\t\t\t\t},\n\t\t\t\tgetWorkspaceFolderPathForFile: (): string | undefined => {\n\t\t\t\t\tif (workspaceService) {\n\t\t\t\t\t\tconst activeUri = getActiveUri();\n\t\t\t\t\t\tif (activeUri) {\n\t\t\t\t\t\t\tconst ws =\n\t\t\t\t\t\t\t\tworkspaceService.getWorkspaceFolder(activeUri);\n\t\t\t\t\t\t\tif (ws) {\n\t\t\t\t\t\t\t\treturn path.normalize(ws.uri.fsPath);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn undefined;\n\t\t\t\t},\n\t\t\t\tgetSelectedText: (): string | undefined => {\n\t\t\t\t\tif (editorService) {\n\t\t\t\t\t\tconst activeEditor = editorService.activeEditor();\n\t\t\t\t\t\tif (activeEditor && !activeEditor.selection.isEmpty) {\n\t\t\t\t\t\t\treturn activeEditor.document.getText(\n\t\t\t\t\t\t\t\tactiveEditor.selection,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn undefined;\n\t\t\t\t},\n\t\t\t\tgetLineNumber: (): string | undefined => {\n\t\t\t\t\tif (editorService) {\n\t\t\t\t\t\tconst activeEditor = editorService.activeEditor();\n\t\t\t\t\t\tif (activeEditor) {\n\t\t\t\t\t\t\treturn String(activeEditor.selection.end.line + 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn undefined;\n\t\t\t\t},\n\t\t\t\tgetExtension: (id) => {\n\t\t\t\t\treturn extensionService.getExtension(id);\n\t\t\t\t},\n\t\t\t},\n\t\t\tundefined,\n\t\t\thomeDir ? Promise.resolve(homeDir) : undefined,\n\t\t\tPromise.resolve(process.env),\n\t\t);\n\t}\n}\n\nexport class ExtHostVariableResolverProviderService\n\textends Disposable\n\timplements IExtHostVariableResolverProvider\n{\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _resolver = new Lazy(async () => {\n\t\tconst configProvider =\n\t\t\tawait this.configurationService.getConfigProvider();\n\t\tconst folders =\n\t\t\t(await this.workspaceService.getWorkspaceFolders2()) || [];\n\n\t\tconst dynamic: DynamicContext = { folders };\n\t\tthis._register(\n\t\t\tthis.workspaceService.onDidChangeWorkspace(async (e) => {\n\t\t\t\tdynamic.folders =\n\t\t\t\t\t(await this.workspaceService.getWorkspaceFolders2()) || [];\n\t\t\t}),\n\t\t);\n\n\t\treturn new ExtHostVariableResolverService(\n\t\t\tthis.extensionService,\n\t\t\tthis.workspaceService,\n\t\t\tthis.editorService,\n\t\t\tthis.editorTabs,\n\t\t\tconfigProvider,\n\t\t\tdynamic,\n\t\t\tthis.homeDir(),\n\t\t);\n\t});\n\n\tconstructor(\n\t\t@IExtHostExtensionService private readonly extensionService: IExtHostExtensionService,\n\t\t@IExtHostWorkspace private readonly workspaceService: IExtHostWorkspace,\n\t\t@IExtHostDocumentsAndEditors private readonly editorService: IExtHostDocumentsAndEditors,\n\t\t@IExtHostConfiguration private readonly configurationService: IExtHostConfiguration,\n\t\t@IExtHostEditorTabs private readonly editorTabs: IExtHostEditorTabs,\n\t) {\n\t\tsuper();\n\t}\n\n\tpublic getResolver(): Promise<IConfigurationResolverService> {\n\t\treturn this._resolver.value;\n\t}\n\n\tprotected homeDir(): string | undefined {\n\t\treturn undefined;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
