{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostDocuments.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { URI, UriComponents } from '../../../base/common/uri.js';\nimport { IModelChangedEvent } from '../../../editor/common/model/mirrorTextModel.js';\nimport { ExtHostDocumentsShape, IMainContext, MainContext, MainThreadDocumentsShape } from './extHost.protocol.js';\nimport { ExtHostDocumentData, setWordDefinitionFor } from './extHostDocumentData.js';\nimport { ExtHostDocumentsAndEditors } from './extHostDocumentsAndEditors.js';\nimport * as TypeConverters from './extHostTypeConverters.js';\nimport type * as vscode from 'vscode';\nimport { assertIsDefined } from '../../../base/common/types.js';\nimport { deepFreeze } from '../../../base/common/objects.js';\nimport { TextDocumentChangeReason } from './extHostTypes.js';\n\nexport class ExtHostDocuments implements ExtHostDocumentsShape {\n\n\tprivate readonly _onDidAddDocument = new Emitter<vscode.TextDocument>();\n\tprivate readonly _onDidRemoveDocument = new Emitter<vscode.TextDocument>();\n\tprivate readonly _onDidChangeDocument = new Emitter<vscode.TextDocumentChangeEvent>();\n\tprivate readonly _onDidSaveDocument = new Emitter<vscode.TextDocument>();\n\n\treadonly onDidAddDocument: Event<vscode.TextDocument> = this._onDidAddDocument.event;\n\treadonly onDidRemoveDocument: Event<vscode.TextDocument> = this._onDidRemoveDocument.event;\n\treadonly onDidChangeDocument: Event<vscode.TextDocumentChangeEvent> = this._onDidChangeDocument.event;\n\treadonly onDidSaveDocument: Event<vscode.TextDocument> = this._onDidSaveDocument.event;\n\n\tprivate readonly _toDispose = new DisposableStore();\n\tprivate _proxy: MainThreadDocumentsShape;\n\tprivate _documentsAndEditors: ExtHostDocumentsAndEditors;\n\tprivate _documentLoader = new Map<string, Promise<ExtHostDocumentData>>();\n\n\tconstructor(mainContext: IMainContext, documentsAndEditors: ExtHostDocumentsAndEditors) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadDocuments);\n\t\tthis._documentsAndEditors = documentsAndEditors;\n\n\t\tthis._documentsAndEditors.onDidRemoveDocuments(documents => {\n\t\t\tfor (const data of documents) {\n\t\t\t\tthis._onDidRemoveDocument.fire(data.document);\n\t\t\t}\n\t\t}, undefined, this._toDispose);\n\t\tthis._documentsAndEditors.onDidAddDocuments(documents => {\n\t\t\tfor (const data of documents) {\n\t\t\t\tthis._onDidAddDocument.fire(data.document);\n\t\t\t}\n\t\t}, undefined, this._toDispose);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._toDispose.dispose();\n\t}\n\n\tpublic getAllDocumentData(): ExtHostDocumentData[] {\n\t\treturn [...this._documentsAndEditors.allDocuments()];\n\t}\n\n\tpublic getDocumentData(resource: vscode.Uri): ExtHostDocumentData | undefined {\n\t\tif (!resource) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst data = this._documentsAndEditors.getDocument(resource);\n\t\tif (data) {\n\t\t\treturn data;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tpublic getDocument(resource: vscode.Uri): vscode.TextDocument {\n\t\tconst data = this.getDocumentData(resource);\n\t\tif (!data?.document) {\n\t\t\tthrow new Error(`Unable to retrieve document from URI '${resource}'`);\n\t\t}\n\t\treturn data.document;\n\t}\n\n\tpublic ensureDocumentData(uri: URI): Promise<ExtHostDocumentData> {\n\n\t\tconst cached = this._documentsAndEditors.getDocument(uri);\n\t\tif (cached) {\n\t\t\treturn Promise.resolve(cached);\n\t\t}\n\n\t\tlet promise = this._documentLoader.get(uri.toString());\n\t\tif (!promise) {\n\t\t\tpromise = this._proxy.$tryOpenDocument(uri).then(uriData => {\n\t\t\t\tthis._documentLoader.delete(uri.toString());\n\t\t\t\tconst canonicalUri = URI.revive(uriData);\n\t\t\t\treturn assertIsDefined(this._documentsAndEditors.getDocument(canonicalUri));\n\t\t\t}, err => {\n\t\t\t\tthis._documentLoader.delete(uri.toString());\n\t\t\t\treturn Promise.reject(err);\n\t\t\t});\n\t\t\tthis._documentLoader.set(uri.toString(), promise);\n\t\t}\n\n\t\treturn promise;\n\t}\n\n\tpublic createDocumentData(options?: { language?: string; content?: string }): Promise<URI> {\n\t\treturn this._proxy.$tryCreateDocument(options).then(data => URI.revive(data));\n\t}\n\n\tpublic $acceptModelLanguageChanged(uriComponents: UriComponents, newLanguageId: string): void {\n\t\tconst uri = URI.revive(uriComponents);\n\t\tconst data = this._documentsAndEditors.getDocument(uri);\n\t\tif (!data) {\n\t\t\tthrow new Error('unknown document');\n\t\t}\n\t\t// Treat a language change as a remove + add\n\n\t\tthis._onDidRemoveDocument.fire(data.document);\n\t\tdata._acceptLanguageId(newLanguageId);\n\t\tthis._onDidAddDocument.fire(data.document);\n\t}\n\n\tpublic $acceptModelSaved(uriComponents: UriComponents): void {\n\t\tconst uri = URI.revive(uriComponents);\n\t\tconst data = this._documentsAndEditors.getDocument(uri);\n\t\tif (!data) {\n\t\t\tthrow new Error('unknown document');\n\t\t}\n\t\tthis.$acceptDirtyStateChanged(uriComponents, false);\n\t\tthis._onDidSaveDocument.fire(data.document);\n\t}\n\n\tpublic $acceptDirtyStateChanged(uriComponents: UriComponents, isDirty: boolean): void {\n\t\tconst uri = URI.revive(uriComponents);\n\t\tconst data = this._documentsAndEditors.getDocument(uri);\n\t\tif (!data) {\n\t\t\tthrow new Error('unknown document');\n\t\t}\n\t\tdata._acceptIsDirty(isDirty);\n\t\tthis._onDidChangeDocument.fire({\n\t\t\tdocument: data.document,\n\t\t\tcontentChanges: [],\n\t\t\treason: undefined\n\t\t});\n\t}\n\n\tpublic $acceptModelChanged(uriComponents: UriComponents, events: IModelChangedEvent, isDirty: boolean): void {\n\t\tconst uri = URI.revive(uriComponents);\n\t\tconst data = this._documentsAndEditors.getDocument(uri);\n\t\tif (!data) {\n\t\t\tthrow new Error('unknown document');\n\t\t}\n\t\tdata._acceptIsDirty(isDirty);\n\t\tdata.onEvents(events);\n\n\t\tlet reason: vscode.TextDocumentChangeReason | undefined = undefined;\n\t\tif (events.isUndoing) {\n\t\t\treason = TextDocumentChangeReason.Undo;\n\t\t} else if (events.isRedoing) {\n\t\t\treason = TextDocumentChangeReason.Redo;\n\t\t}\n\n\t\tthis._onDidChangeDocument.fire(deepFreeze({\n\t\t\tdocument: data.document,\n\t\t\tcontentChanges: events.changes.map((change) => {\n\t\t\t\treturn {\n\t\t\t\t\trange: TypeConverters.Range.to(change.range),\n\t\t\t\t\trangeOffset: change.rangeOffset,\n\t\t\t\t\trangeLength: change.rangeLength,\n\t\t\t\t\ttext: change.text\n\t\t\t\t};\n\t\t\t}),\n\t\t\treason\n\t\t}));\n\t}\n\n\tpublic setWordDefinitionFor(languageId: string, wordDefinition: RegExp | undefined): void {\n\t\tsetWordDefinitionFor(languageId, wordDefinition);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
