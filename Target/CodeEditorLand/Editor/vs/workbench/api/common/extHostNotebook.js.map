{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostNotebook.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type * as vscode from \"vscode\";\nimport { VSBuffer } from \"../../../base/common/buffer.js\";\nimport type { CancellationToken } from \"../../../base/common/cancellation.js\";\nimport { Emitter, type Event } from \"../../../base/common/event.js\";\nimport type { IRelativePattern } from \"../../../base/common/glob.js\";\nimport {\n\tDisposableStore,\n\ttype IDisposable,\n\ttoDisposable,\n} from \"../../../base/common/lifecycle.js\";\nimport { ResourceMap, ResourceSet } from \"../../../base/common/map.js\";\nimport { MarshalledId } from \"../../../base/common/marshallingIds.js\";\nimport { Schemas } from \"../../../base/common/network.js\";\nimport { filter } from \"../../../base/common/objects.js\";\nimport { isFalsyOrWhitespace } from \"../../../base/common/strings.js\";\nimport { assertIsDefined } from \"../../../base/common/types.js\";\nimport { URI, type UriComponents } from \"../../../base/common/uri.js\";\nimport { localize } from \"../../../nls.js\";\nimport type { IExtensionDescription } from \"../../../platform/extensions/common/extensions.js\";\nimport * as files from \"../../../platform/files/common/files.js\";\nimport type { ILogService } from \"../../../platform/log/common/log.js\";\nimport type {\n\tINotebookContributionData,\n\tINotebookExclusiveDocumentFilter,\n} from \"../../contrib/notebook/common/notebookCommon.js\";\nimport { CellSearchModel } from \"../../contrib/search/common/cellSearchModel.js\";\nimport type { NotebookPriorityInfo } from \"../../contrib/search/common/search.js\";\nimport {\n\ttype INotebookCellMatchNoModel,\n\ttype INotebookFileMatchNoModel,\n\ttype IRawClosedNotebookFileMatch,\n\tgenericCellMatchesToTextSearchMatches,\n} from \"../../contrib/search/common/searchNotebookHelpers.js\";\nimport {\n\tRegisteredEditorPriority,\n\tglobMatchesResource,\n} from \"../../services/editor/common/editorResolverService.js\";\nimport { SerializableObjectWithBuffers } from \"../../services/extensions/common/proxyIdentifier.js\";\nimport {\n\ttype IFileQuery,\n\ttype ITextQuery,\n\tQueryType,\n} from \"../../services/search/common/search.js\";\nimport { Cache } from \"./cache.js\";\nimport {\n\ttype ExtHostNotebookShape,\n\ttype IMainContext,\n\ttype IModelAddedData,\n\ttype INotebookCellStatusBarListDto,\n\ttype INotebookDocumentShowOptions,\n\ttype INotebookDocumentsAndEditorsDelta,\n\ttype INotebookEditorAddData,\n\ttype INotebookPartialFileStatsWithMetadata,\n\tMainContext,\n\ttype MainThreadNotebookDocumentsShape,\n\ttype MainThreadNotebookEditorsShape,\n\ttype MainThreadNotebookShape,\n\ttype NotebookDataDto,\n} from \"./extHost.protocol.js\";\nimport {\n\tApiCommand,\n\tApiCommandArgument,\n\tApiCommandResult,\n\ttype CommandsConverter,\n\ttype ExtHostCommands,\n} from \"./extHostCommands.js\";\nimport type { ExtHostDocuments } from \"./extHostDocuments.js\";\nimport type { ExtHostDocumentsAndEditors } from \"./extHostDocumentsAndEditors.js\";\nimport type { IExtHostConsumerFileSystem } from \"./extHostFileSystemConsumer.js\";\nimport {\n\tExtHostCell,\n\tExtHostNotebookDocument,\n} from \"./extHostNotebookDocument.js\";\nimport { ExtHostNotebookEditor } from \"./extHostNotebookEditor.js\";\nimport type { IExtHostSearch } from \"./extHostSearch.js\";\nimport * as typeConverters from \"./extHostTypeConverters.js\";\nimport * as extHostTypes from \"./extHostTypes.js\";\n\nexport class ExtHostNotebookController implements ExtHostNotebookShape {\n\tprivate static _notebookStatusBarItemProviderHandlePool = 0;\n\n\tprivate readonly _notebookProxy: MainThreadNotebookShape;\n\tprivate readonly _notebookDocumentsProxy: MainThreadNotebookDocumentsShape;\n\tprivate readonly _notebookEditorsProxy: MainThreadNotebookEditorsShape;\n\n\tprivate readonly _notebookStatusBarItemProviders = new Map<\n\t\tnumber,\n\t\tvscode.NotebookCellStatusBarItemProvider\n\t>();\n\tprivate readonly _documents = new ResourceMap<ExtHostNotebookDocument>();\n\tprivate readonly _editors = new Map<string, ExtHostNotebookEditor>();\n\tprivate readonly _commandsConverter: CommandsConverter;\n\n\tprivate readonly _onDidChangeActiveNotebookEditor = new Emitter<\n\t\tvscode.NotebookEditor | undefined\n\t>();\n\treadonly onDidChangeActiveNotebookEditor =\n\t\tthis._onDidChangeActiveNotebookEditor.event;\n\n\tprivate _activeNotebookEditor: ExtHostNotebookEditor | undefined;\n\tget activeNotebookEditor(): vscode.NotebookEditor | undefined {\n\t\treturn this._activeNotebookEditor?.apiEditor;\n\t}\n\tprivate _visibleNotebookEditors: ExtHostNotebookEditor[] = [];\n\tget visibleNotebookEditors(): vscode.NotebookEditor[] {\n\t\treturn this._visibleNotebookEditors.map((editor) => editor.apiEditor);\n\t}\n\n\tprivate _onDidOpenNotebookDocument = new Emitter<vscode.NotebookDocument>();\n\tonDidOpenNotebookDocument: Event<vscode.NotebookDocument> =\n\t\tthis._onDidOpenNotebookDocument.event;\n\tprivate _onDidCloseNotebookDocument =\n\t\tnew Emitter<vscode.NotebookDocument>();\n\tonDidCloseNotebookDocument: Event<vscode.NotebookDocument> =\n\t\tthis._onDidCloseNotebookDocument.event;\n\n\tprivate _onDidChangeVisibleNotebookEditors = new Emitter<\n\t\tvscode.NotebookEditor[]\n\t>();\n\tonDidChangeVisibleNotebookEditors =\n\t\tthis._onDidChangeVisibleNotebookEditors.event;\n\n\tprivate _statusBarCache = new Cache<IDisposable>(\n\t\t\"NotebookCellStatusBarCache\",\n\t);\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\tcommands: ExtHostCommands,\n\t\tprivate _textDocumentsAndEditors: ExtHostDocumentsAndEditors,\n\t\tprivate _textDocuments: ExtHostDocuments,\n\t\tprivate _extHostFileSystem: IExtHostConsumerFileSystem,\n\t\tprivate _extHostSearch: IExtHostSearch,\n\t\tprivate _logService: ILogService,\n\t) {\n\t\tthis._notebookProxy = mainContext.getProxy(\n\t\t\tMainContext.MainThreadNotebook,\n\t\t);\n\t\tthis._notebookDocumentsProxy = mainContext.getProxy(\n\t\t\tMainContext.MainThreadNotebookDocuments,\n\t\t);\n\t\tthis._notebookEditorsProxy = mainContext.getProxy(\n\t\t\tMainContext.MainThreadNotebookEditors,\n\t\t);\n\t\tthis._commandsConverter = commands.converter;\n\n\t\tcommands.registerArgumentProcessor({\n\t\t\t// Serialized INotebookCellActionContext\n\t\t\tprocessArgument: (arg) => {\n\t\t\t\tif (\n\t\t\t\t\targ &&\n\t\t\t\t\targ.$mid === MarshalledId.NotebookCellActionContext\n\t\t\t\t) {\n\t\t\t\t\tconst notebookUri = arg.notebookEditor?.notebookUri;\n\t\t\t\t\tconst cellHandle = arg.cell.handle;\n\n\t\t\t\t\tconst data = this._documents.get(notebookUri);\n\t\t\t\t\tconst cell = data?.getCell(cellHandle);\n\t\t\t\t\tif (cell) {\n\t\t\t\t\t\treturn cell.apiCell;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (arg && arg.$mid === MarshalledId.NotebookActionContext) {\n\t\t\t\t\tconst notebookUri = arg.uri;\n\t\t\t\t\tconst data = this._documents.get(notebookUri);\n\t\t\t\t\tif (data) {\n\t\t\t\t\t\treturn data.apiNotebook;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn arg;\n\t\t\t},\n\t\t});\n\n\t\tExtHostNotebookController._registerApiCommands(commands);\n\t}\n\n\tgetEditorById(editorId: string): ExtHostNotebookEditor {\n\t\tconst editor = this._editors.get(editorId);\n\t\tif (!editor) {\n\t\t\tthrow new Error(\n\t\t\t\t`unknown text editor: ${editorId}. known editors: ${[...this._editors.keys()]} `,\n\t\t\t);\n\t\t}\n\t\treturn editor;\n\t}\n\n\tgetIdByEditor(editor: vscode.NotebookEditor): string | undefined {\n\t\tfor (const [id, candidate] of this._editors) {\n\t\t\tif (candidate.apiEditor === editor) {\n\t\t\t\treturn id;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tget notebookDocuments() {\n\t\treturn [...this._documents.values()];\n\t}\n\n\tgetNotebookDocument(\n\t\turi: URI,\n\t\trelaxed: true,\n\t): ExtHostNotebookDocument | undefined;\n\tgetNotebookDocument(uri: URI): ExtHostNotebookDocument;\n\tgetNotebookDocument(\n\t\turi: URI,\n\t\trelaxed?: true,\n\t): ExtHostNotebookDocument | undefined {\n\t\tconst result = this._documents.get(uri);\n\t\tif (!result && !relaxed) {\n\t\t\tthrow new Error(`NO notebook document for '${uri}'`);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate static _convertNotebookRegistrationData(\n\t\textension: IExtensionDescription,\n\t\tregistration: vscode.NotebookRegistrationData | undefined,\n\t): INotebookContributionData | undefined {\n\t\tif (!registration) {\n\t\t\treturn;\n\t\t}\n\t\tconst viewOptionsFilenamePattern = registration.filenamePattern\n\t\t\t.map((pattern) =>\n\t\t\t\ttypeConverters.NotebookExclusiveDocumentPattern.from(pattern),\n\t\t\t)\n\t\t\t.filter((pattern) => pattern !== undefined) as (\n\t\t\t| string\n\t\t\t| IRelativePattern\n\t\t\t| INotebookExclusiveDocumentFilter\n\t\t)[];\n\t\tif (registration.filenamePattern && !viewOptionsFilenamePattern) {\n\t\t\tconsole.warn(\n\t\t\t\t`Notebook content provider view options file name pattern is invalid ${registration.filenamePattern}`,\n\t\t\t);\n\t\t\treturn undefined;\n\t\t}\n\t\treturn {\n\t\t\textension: extension.identifier,\n\t\t\tproviderDisplayName: extension.displayName || extension.name,\n\t\t\tdisplayName: registration.displayName,\n\t\t\tfilenamePattern: viewOptionsFilenamePattern,\n\t\t\tpriority: registration.exclusive\n\t\t\t\t? RegisteredEditorPriority.exclusive\n\t\t\t\t: undefined,\n\t\t};\n\t}\n\n\tregisterNotebookCellStatusBarItemProvider(\n\t\textension: IExtensionDescription,\n\t\tnotebookType: string,\n\t\tprovider: vscode.NotebookCellStatusBarItemProvider,\n\t) {\n\t\tconst handle =\n\t\t\tExtHostNotebookController._notebookStatusBarItemProviderHandlePool++;\n\t\tconst eventHandle =\n\t\t\ttypeof provider.onDidChangeCellStatusBarItems === \"function\"\n\t\t\t\t? ExtHostNotebookController._notebookStatusBarItemProviderHandlePool++\n\t\t\t\t: undefined;\n\n\t\tthis._notebookStatusBarItemProviders.set(handle, provider);\n\t\tthis._notebookProxy.$registerNotebookCellStatusBarItemProvider(\n\t\t\thandle,\n\t\t\teventHandle,\n\t\t\tnotebookType,\n\t\t);\n\n\t\tlet subscription: vscode.Disposable | undefined;\n\t\tif (eventHandle !== undefined) {\n\t\t\tsubscription = provider.onDidChangeCellStatusBarItems!((_) =>\n\t\t\t\tthis._notebookProxy.$emitCellStatusBarEvent(eventHandle),\n\t\t\t);\n\t\t}\n\n\t\treturn new extHostTypes.Disposable(() => {\n\t\t\tthis._notebookStatusBarItemProviders.delete(handle);\n\t\t\tthis._notebookProxy.$unregisterNotebookCellStatusBarItemProvider(\n\t\t\t\thandle,\n\t\t\t\teventHandle,\n\t\t\t);\n\t\t\tsubscription?.dispose();\n\t\t});\n\t}\n\n\tasync createNotebookDocument(options: {\n\t\tviewType: string;\n\t\tcontent?: vscode.NotebookData;\n\t}): Promise<URI> {\n\t\tconst canonicalUri =\n\t\t\tawait this._notebookDocumentsProxy.$tryCreateNotebook({\n\t\t\t\tviewType: options.viewType,\n\t\t\t\tcontent:\n\t\t\t\t\toptions.content &&\n\t\t\t\t\ttypeConverters.NotebookData.from(options.content),\n\t\t\t});\n\t\treturn URI.revive(canonicalUri);\n\t}\n\n\tasync openNotebookDocument(uri: URI): Promise<vscode.NotebookDocument> {\n\t\tconst cached = this._documents.get(uri);\n\t\tif (cached) {\n\t\t\treturn cached.apiNotebook;\n\t\t}\n\t\tconst canonicalUri =\n\t\t\tawait this._notebookDocumentsProxy.$tryOpenNotebook(uri);\n\t\tconst document = this._documents.get(URI.revive(canonicalUri));\n\t\treturn assertIsDefined(document?.apiNotebook);\n\t}\n\n\tasync showNotebookDocument(\n\t\tnotebook: vscode.NotebookDocument,\n\t\toptions?: vscode.NotebookDocumentShowOptions,\n\t): Promise<vscode.NotebookEditor> {\n\t\tlet resolvedOptions: INotebookDocumentShowOptions;\n\t\tif (typeof options === \"object\") {\n\t\t\tresolvedOptions = {\n\t\t\t\tposition: typeConverters.ViewColumn.from(options.viewColumn),\n\t\t\t\tpreserveFocus: options.preserveFocus,\n\t\t\t\tselections:\n\t\t\t\t\toptions.selections &&\n\t\t\t\t\toptions.selections.map(typeConverters.NotebookRange.from),\n\t\t\t\tpinned:\n\t\t\t\t\ttypeof options.preview === \"boolean\"\n\t\t\t\t\t\t? !options.preview\n\t\t\t\t\t\t: undefined,\n\t\t\t\tlabel: options?.label,\n\t\t\t};\n\t\t} else {\n\t\t\tresolvedOptions = {\n\t\t\t\tpreserveFocus: false,\n\t\t\t\tpinned: true,\n\t\t\t};\n\t\t}\n\n\t\tconst viewType = options?.asRepl ? \"repl\" : notebook.notebookType;\n\t\tconst editorId =\n\t\t\tawait this._notebookEditorsProxy.$tryShowNotebookDocument(\n\t\t\t\tnotebook.uri,\n\t\t\t\tviewType,\n\t\t\t\tresolvedOptions,\n\t\t\t);\n\t\tconst editor = editorId && this._editors.get(editorId)?.apiEditor;\n\n\t\tif (editor) {\n\t\t\treturn editor;\n\t\t}\n\n\t\tif (editorId) {\n\t\t\tthrow new Error(\n\t\t\t\t`Could NOT open editor for \"${notebook.uri.toString()}\" because another editor opened in the meantime.`,\n\t\t\t);\n\t\t} else {\n\t\t\tthrow new Error(\n\t\t\t\t`Could NOT open editor for \"${notebook.uri.toString()}\".`,\n\t\t\t);\n\t\t}\n\t}\n\n\tasync $provideNotebookCellStatusBarItems(\n\t\thandle: number,\n\t\turi: UriComponents,\n\t\tindex: number,\n\t\ttoken: CancellationToken,\n\t): Promise<INotebookCellStatusBarListDto | undefined> {\n\t\tconst provider = this._notebookStatusBarItemProviders.get(handle);\n\t\tconst revivedUri = URI.revive(uri);\n\t\tconst document = this._documents.get(revivedUri);\n\t\tif (!document || !provider) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst cell = document.getCellFromIndex(index);\n\t\tif (!cell) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst result = await provider.provideCellStatusBarItems(\n\t\t\tcell.apiCell,\n\t\t\ttoken,\n\t\t);\n\t\tif (!result) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst disposables = new DisposableStore();\n\t\tconst cacheId = this._statusBarCache.add([disposables]);\n\t\tconst resultArr = Array.isArray(result) ? result : [result];\n\t\tconst items = resultArr.map((item) =>\n\t\t\ttypeConverters.NotebookStatusBarItem.from(\n\t\t\t\titem,\n\t\t\t\tthis._commandsConverter,\n\t\t\t\tdisposables,\n\t\t\t),\n\t\t);\n\t\treturn {\n\t\t\tcacheId,\n\t\t\titems,\n\t\t};\n\t}\n\n\t$releaseNotebookCellStatusBarItems(cacheId: number): void {\n\t\tthis._statusBarCache.delete(cacheId);\n\t}\n\n\t// --- serialize/deserialize\n\n\tprivate _handlePool = 0;\n\tprivate readonly _notebookSerializer = new Map<\n\t\tnumber,\n\t\t{\n\t\t\tviewType: string;\n\t\t\tserializer: vscode.NotebookSerializer;\n\t\t\toptions: vscode.NotebookDocumentContentOptions | undefined;\n\t\t}\n\t>();\n\n\tregisterNotebookSerializer(\n\t\textension: IExtensionDescription,\n\t\tviewType: string,\n\t\tserializer: vscode.NotebookSerializer,\n\t\toptions?: vscode.NotebookDocumentContentOptions,\n\t\tregistration?: vscode.NotebookRegistrationData,\n\t): vscode.Disposable {\n\t\tif (isFalsyOrWhitespace(viewType)) {\n\t\t\tthrow new Error(`viewType cannot be empty or just whitespace`);\n\t\t}\n\t\tconst handle = this._handlePool++;\n\t\tthis._notebookSerializer.set(handle, { viewType, serializer, options });\n\t\tthis._notebookProxy.$registerNotebookSerializer(\n\t\t\thandle,\n\t\t\t{ id: extension.identifier, location: extension.extensionLocation },\n\t\t\tviewType,\n\t\t\ttypeConverters.NotebookDocumentContentOptions.from(options),\n\t\t\tExtHostNotebookController._convertNotebookRegistrationData(\n\t\t\t\textension,\n\t\t\t\tregistration,\n\t\t\t),\n\t\t);\n\t\treturn toDisposable(() => {\n\t\t\tthis._notebookProxy.$unregisterNotebookSerializer(handle);\n\t\t});\n\t}\n\n\tasync $dataToNotebook(\n\t\thandle: number,\n\t\tbytes: VSBuffer,\n\t\ttoken: CancellationToken,\n\t): Promise<SerializableObjectWithBuffers<NotebookDataDto>> {\n\t\tconst serializer = this._notebookSerializer.get(handle);\n\t\tif (!serializer) {\n\t\t\tthrow new Error(\"NO serializer found\");\n\t\t}\n\t\tconst data = await serializer.serializer.deserializeNotebook(\n\t\t\tbytes.buffer,\n\t\t\ttoken,\n\t\t);\n\t\treturn new SerializableObjectWithBuffers(\n\t\t\ttypeConverters.NotebookData.from(data),\n\t\t);\n\t}\n\n\tasync $notebookToData(\n\t\thandle: number,\n\t\tdata: SerializableObjectWithBuffers<NotebookDataDto>,\n\t\ttoken: CancellationToken,\n\t): Promise<VSBuffer> {\n\t\tconst serializer = this._notebookSerializer.get(handle);\n\t\tif (!serializer) {\n\t\t\tthrow new Error(\"NO serializer found\");\n\t\t}\n\t\tconst bytes = await serializer.serializer.serializeNotebook(\n\t\t\ttypeConverters.NotebookData.to(data.value),\n\t\t\ttoken,\n\t\t);\n\t\treturn VSBuffer.wrap(bytes);\n\t}\n\n\tasync $saveNotebook(\n\t\thandle: number,\n\t\turiComponents: UriComponents,\n\t\tversionId: number,\n\t\toptions: files.IWriteFileOptions,\n\t\ttoken: CancellationToken,\n\t): Promise<INotebookPartialFileStatsWithMetadata> {\n\t\tconst uri = URI.revive(uriComponents);\n\t\tconst serializer = this._notebookSerializer.get(handle);\n\t\tthis.trace(\n\t\t\t`enter saveNotebook(versionId: ${versionId}, ${uri.toString()})`,\n\t\t);\n\n\t\tif (!serializer) {\n\t\t\tthrow new Error(\"NO serializer found\");\n\t\t}\n\n\t\tconst document = this._documents.get(uri);\n\t\tif (!document) {\n\t\t\tthrow new Error(\"Document NOT found\");\n\t\t}\n\n\t\tif (document.versionId !== versionId) {\n\t\t\tthrow new Error(\"Document version mismatch\");\n\t\t}\n\n\t\tif (!this._extHostFileSystem.value.isWritableFileSystem(uri.scheme)) {\n\t\t\tthrow new files.FileOperationError(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"err.readonly\",\n\t\t\t\t\t\"Unable to modify read-only file '{0}'\",\n\t\t\t\t\tthis._resourceForError(uri),\n\t\t\t\t),\n\t\t\t\tfiles.FileOperationResult.FILE_PERMISSION_DENIED,\n\t\t\t);\n\t\t}\n\n\t\tconst data: vscode.NotebookData = {\n\t\t\tmetadata: filter(\n\t\t\t\tdocument.apiNotebook.metadata,\n\t\t\t\t(key) =>\n\t\t\t\t\t!(serializer.options?.transientDocumentMetadata ?? {})[key],\n\t\t\t),\n\t\t\tcells: [],\n\t\t};\n\n\t\t// this data must be retrieved before any async calls to ensure the data is for the correct version\n\t\tfor (const cell of document.apiNotebook.getCells()) {\n\t\t\tconst cellData = new extHostTypes.NotebookCellData(\n\t\t\t\tcell.kind,\n\t\t\t\tcell.document.getText(),\n\t\t\t\tcell.document.languageId,\n\t\t\t\tcell.mime,\n\t\t\t\tserializer.options?.transientOutputs ? [] : [...cell.outputs],\n\t\t\t\tcell.metadata,\n\t\t\t\tcell.executionSummary,\n\t\t\t);\n\n\t\t\tcellData.metadata = filter(\n\t\t\t\tcell.metadata,\n\t\t\t\t(key) =>\n\t\t\t\t\t!(serializer.options?.transientCellMetadata ?? {})[key],\n\t\t\t);\n\t\t\tdata.cells.push(cellData);\n\t\t}\n\n\t\t// validate write\n\t\tawait this._validateWriteFile(uri, options);\n\n\t\tif (token.isCancellationRequested) {\n\t\t\tthrow new Error(\"canceled\");\n\t\t}\n\t\tconst bytes = await serializer.serializer.serializeNotebook(\n\t\t\tdata,\n\t\t\ttoken,\n\t\t);\n\t\tif (token.isCancellationRequested) {\n\t\t\tthrow new Error(\"canceled\");\n\t\t}\n\n\t\t// Don't accept any cancellation beyond this point, we need to report the result of the file write\n\t\tthis.trace(`serialized versionId: ${versionId} ${uri.toString()}`);\n\t\tawait this._extHostFileSystem.value.writeFile(uri, bytes);\n\t\tthis.trace(`Finished write versionId: ${versionId} ${uri.toString()}`);\n\t\tconst providerExtUri =\n\t\t\tthis._extHostFileSystem.getFileSystemProviderExtUri(uri.scheme);\n\t\tconst stat = await this._extHostFileSystem.value.stat(uri);\n\n\t\tconst fileStats = {\n\t\t\tname: providerExtUri.basename(uri),\n\t\t\tisFile: (stat.type & files.FileType.File) !== 0,\n\t\t\tisDirectory: (stat.type & files.FileType.Directory) !== 0,\n\t\t\tisSymbolicLink: (stat.type & files.FileType.SymbolicLink) !== 0,\n\t\t\tmtime: stat.mtime,\n\t\t\tctime: stat.ctime,\n\t\t\tsize: stat.size,\n\t\t\treadonly:\n\t\t\t\tBoolean(\n\t\t\t\t\t(stat.permissions ?? 0) & files.FilePermission.Readonly,\n\t\t\t\t) ||\n\t\t\t\t!this._extHostFileSystem.value.isWritableFileSystem(uri.scheme),\n\t\t\tlocked: Boolean(\n\t\t\t\t(stat.permissions ?? 0) & files.FilePermission.Locked,\n\t\t\t),\n\t\t\tetag: files.etag({ mtime: stat.mtime, size: stat.size }),\n\t\t\tchildren: undefined,\n\t\t};\n\n\t\tthis.trace(\n\t\t\t`exit saveNotebook(versionId: ${versionId}, ${uri.toString()})`,\n\t\t);\n\t\treturn fileStats;\n\t}\n\n\t/**\n\t * Search for query in all notebooks that can be deserialized by the serializer fetched by `handle`.\n\t *\n\t * @param handle used to get notebook serializer\n\t * @param textQuery the text query to search using\n\t * @param viewTypeFileTargets the globs (and associated ranks) that are targetting for opening this type of notebook\n\t * @param otherViewTypeFileTargets ranked globs for other editors that we should consider when deciding whether it will open as this notebook\n\t * @param token cancellation token\n\t * @returns `IRawClosedNotebookFileMatch` for every file. Files without matches will just have a `IRawClosedNotebookFileMatch`\n\t * \twith no `cellResults`. This allows the caller to know what was searched in already, even if it did not yield results.\n\t */\n\tasync $searchInNotebooks(\n\t\thandle: number,\n\t\ttextQuery: ITextQuery,\n\t\tviewTypeFileTargets: NotebookPriorityInfo[],\n\t\totherViewTypeFileTargets: NotebookPriorityInfo[],\n\t\ttoken: CancellationToken,\n\t): Promise<{ results: IRawClosedNotebookFileMatch[]; limitHit: boolean }> {\n\t\tconst serializer = this._notebookSerializer.get(handle)?.serializer;\n\t\tif (!serializer) {\n\t\t\treturn {\n\t\t\t\tlimitHit: false,\n\t\t\t\tresults: [],\n\t\t\t};\n\t\t}\n\n\t\tconst finalMatchedTargets = new ResourceSet();\n\n\t\tconst runFileQueries = async (\n\t\t\tincludes: NotebookPriorityInfo[],\n\t\t\ttoken: CancellationToken,\n\t\t\ttextQuery: ITextQuery,\n\t\t): Promise<void> => {\n\t\t\tawait Promise.all(\n\t\t\t\tincludes.map(\n\t\t\t\t\tasync (include) =>\n\t\t\t\t\t\tawait Promise.all(\n\t\t\t\t\t\t\tinclude.filenamePatterns.map((filePattern) => {\n\t\t\t\t\t\t\t\tconst query: IFileQuery = {\n\t\t\t\t\t\t\t\t\t_reason: textQuery._reason,\n\t\t\t\t\t\t\t\t\tfolderQueries: textQuery.folderQueries,\n\t\t\t\t\t\t\t\t\tincludePattern: textQuery.includePattern,\n\t\t\t\t\t\t\t\t\texcludePattern: textQuery.excludePattern,\n\t\t\t\t\t\t\t\t\tmaxResults: textQuery.maxResults,\n\t\t\t\t\t\t\t\t\ttype: QueryType.File,\n\t\t\t\t\t\t\t\t\tfilePattern,\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t// use priority info to exclude info from other globs\n\t\t\t\t\t\t\t\treturn this._extHostSearch\n\t\t\t\t\t\t\t\t\t.doInternalFileSearchWithCustomCallback(\n\t\t\t\t\t\t\t\t\t\tquery,\n\t\t\t\t\t\t\t\t\t\ttoken,\n\t\t\t\t\t\t\t\t\t\t(data) => {\n\t\t\t\t\t\t\t\t\t\t\tdata.forEach((uri) => {\n\t\t\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t\t\tfinalMatchedTargets.has(uri)\n\t\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tconst hasOtherMatches =\n\t\t\t\t\t\t\t\t\t\t\t\t\totherViewTypeFileTargets.some(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(target) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// use the same strategy that the editor service uses to open editors\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// https://github.com/microsoft/vscode/blob/ac1631528e67637da65ec994c6dc35d73f6e33cc/src/vs/workbench/services/editor/browser/editorResolverService.ts#L359-L366\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinclude.isFromSettings &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t!target.isFromSettings\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// if the include is from the settings and target isn't, even if it matches, it's still overridden.\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// longer filePatterns are considered more specifc, so they always have precedence the shorter patterns\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn target.filenamePatterns.some(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttargetFilePattern,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tglobMatchesResource(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttargetFilePattern,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\turi,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t\t\tif (hasOtherMatches) {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tfinalMatchedTargets.add(uri);\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\t\t\t\t\t// temporary fix for https://github.com/microsoft/vscode/issues/205044: don't show notebook results for remotehub repos.\n\t\t\t\t\t\t\t\t\t\tif (err.code === \"ENOENT\") {\n\t\t\t\t\t\t\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\t\t\t\t\t\t`Could not find notebook search results, ignoring notebook results.`,\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\t\tlimitHit: false,\n\t\t\t\t\t\t\t\t\t\t\t\tmessages: [],\n\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tthrow err;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t);\n\t\t\treturn;\n\t\t};\n\n\t\tawait runFileQueries(viewTypeFileTargets, token, textQuery);\n\n\t\tconst results = new ResourceMap<INotebookFileMatchNoModel>();\n\t\tlet limitHit = false;\n\t\tconst promises = Array.from(finalMatchedTargets).map(async (uri) => {\n\t\t\tconst cellMatches: INotebookCellMatchNoModel[] = [];\n\n\t\t\ttry {\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\ttextQuery.maxResults &&\n\t\t\t\t\t[...results.values()].reduce(\n\t\t\t\t\t\t(acc, value) => acc + value.cellResults.length,\n\t\t\t\t\t\t0,\n\t\t\t\t\t) > textQuery.maxResults\n\t\t\t\t) {\n\t\t\t\t\tlimitHit = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst simpleCells: Array<{ input: string; outputs: string[] }> =\n\t\t\t\t\t[];\n\t\t\t\tconst notebook = this._documents.get(uri);\n\t\t\t\tif (notebook) {\n\t\t\t\t\tconst cells = notebook.apiNotebook.getCells();\n\t\t\t\t\tcells.forEach((e) =>\n\t\t\t\t\t\tsimpleCells.push({\n\t\t\t\t\t\t\tinput: e.document.getText(),\n\t\t\t\t\t\t\toutputs: e.outputs.flatMap((value) =>\n\t\t\t\t\t\t\t\tvalue.items.map((output) =>\n\t\t\t\t\t\t\t\t\toutput.data.toString(),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tconst fileContent =\n\t\t\t\t\t\tawait this._extHostFileSystem.value.readFile(uri);\n\t\t\t\t\tconst bytes = VSBuffer.fromString(fileContent.toString());\n\t\t\t\t\tconst notebook = await serializer.deserializeNotebook(\n\t\t\t\t\t\tbytes.buffer,\n\t\t\t\t\t\ttoken,\n\t\t\t\t\t);\n\t\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconst data = typeConverters.NotebookData.from(notebook);\n\n\t\t\t\t\tdata.cells.forEach((cell) =>\n\t\t\t\t\t\tsimpleCells.push({\n\t\t\t\t\t\t\tinput: cell.source,\n\t\t\t\t\t\t\toutputs: cell.outputs.flatMap((value) =>\n\t\t\t\t\t\t\t\tvalue.items.map((output) =>\n\t\t\t\t\t\t\t\t\toutput.valueBytes.toString(),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tsimpleCells.forEach((cell, index) => {\n\t\t\t\t\tconst target = textQuery.contentPattern.pattern;\n\t\t\t\t\tconst cellModel = new CellSearchModel(\n\t\t\t\t\t\tcell.input,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tcell.outputs,\n\t\t\t\t\t);\n\n\t\t\t\t\tconst inputMatches = cellModel.findInInputs(target);\n\t\t\t\t\tconst outputMatches = cellModel.findInOutputs(target);\n\t\t\t\t\tconst webviewResults = outputMatches\n\t\t\t\t\t\t.flatMap((outputMatch) =>\n\t\t\t\t\t\t\tgenericCellMatchesToTextSearchMatches(\n\t\t\t\t\t\t\t\toutputMatch.matches,\n\t\t\t\t\t\t\t\toutputMatch.textBuffer,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.map((textMatch, index) => {\n\t\t\t\t\t\t\ttextMatch.webviewIndex = index;\n\t\t\t\t\t\t\treturn textMatch;\n\t\t\t\t\t\t});\n\n\t\t\t\t\tif (inputMatches.length > 0 || outputMatches.length > 0) {\n\t\t\t\t\t\tconst cellMatch: INotebookCellMatchNoModel = {\n\t\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\t\tcontentResults:\n\t\t\t\t\t\t\t\tgenericCellMatchesToTextSearchMatches(\n\t\t\t\t\t\t\t\t\tinputMatches,\n\t\t\t\t\t\t\t\t\tcellModel.inputTextBuffer,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\twebviewResults,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tcellMatches.push(cellMatch);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tconst fileMatch = {\n\t\t\t\t\tresource: uri,\n\t\t\t\t\tcellResults: cellMatches,\n\t\t\t\t};\n\t\t\t\tresults.set(uri, fileMatch);\n\t\t\t\treturn;\n\t\t\t} catch (e) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\n\t\tawait Promise.all(promises);\n\t\treturn {\n\t\t\tlimitHit,\n\t\t\tresults: [...results.values()],\n\t\t};\n\t}\n\n\tprivate async _validateWriteFile(\n\t\turi: URI,\n\t\toptions: files.IWriteFileOptions,\n\t) {\n\t\tconst stat = await this._extHostFileSystem.value.stat(uri);\n\t\t// Dirty write prevention\n\t\tif (\n\t\t\ttypeof options?.mtime === \"number\" &&\n\t\t\ttypeof options.etag === \"string\" &&\n\t\t\toptions.etag !== files.ETAG_DISABLED &&\n\t\t\ttypeof stat.mtime === \"number\" &&\n\t\t\ttypeof stat.size === \"number\" &&\n\t\t\toptions.mtime < stat.mtime &&\n\t\t\toptions.etag !==\n\t\t\t\tfiles.etag({\n\t\t\t\t\tmtime: options.mtime /* not using stat.mtime for a reason, see above */,\n\t\t\t\t\tsize: stat.size,\n\t\t\t\t})\n\t\t) {\n\t\t\tthrow new files.FileOperationError(\n\t\t\t\tlocalize(\"fileModifiedError\", \"File Modified Since\"),\n\t\t\t\tfiles.FileOperationResult.FILE_MODIFIED_SINCE,\n\t\t\t\toptions,\n\t\t\t);\n\t\t}\n\n\t\treturn;\n\t}\n\n\tprivate _resourceForError(uri: URI): string {\n\t\treturn uri.scheme === Schemas.file ? uri.fsPath : uri.toString();\n\t}\n\n\t// --- open, save, saveAs, backup\n\n\tprivate _createExtHostEditor(\n\t\tdocument: ExtHostNotebookDocument,\n\t\teditorId: string,\n\t\tdata: INotebookEditorAddData,\n\t) {\n\t\tif (this._editors.has(editorId)) {\n\t\t\tthrow new Error(`editor with id ALREADY EXSIST: ${editorId}`);\n\t\t}\n\n\t\tconst editor = new ExtHostNotebookEditor(\n\t\t\teditorId,\n\t\t\tthis._notebookEditorsProxy,\n\t\t\tdocument,\n\t\t\tdata.visibleRanges.map(typeConverters.NotebookRange.to),\n\t\t\tdata.selections.map(typeConverters.NotebookRange.to),\n\t\t\ttypeof data.viewColumn === \"number\"\n\t\t\t\t? typeConverters.ViewColumn.to(data.viewColumn)\n\t\t\t\t: undefined,\n\t\t);\n\n\t\tthis._editors.set(editorId, editor);\n\t}\n\n\t$acceptDocumentAndEditorsDelta(\n\t\tdelta: SerializableObjectWithBuffers<INotebookDocumentsAndEditorsDelta>,\n\t): void {\n\t\tif (delta.value.removedDocuments) {\n\t\t\tfor (const uri of delta.value.removedDocuments) {\n\t\t\t\tconst revivedUri = URI.revive(uri);\n\t\t\t\tconst document = this._documents.get(revivedUri);\n\n\t\t\t\tif (document) {\n\t\t\t\t\tdocument.dispose();\n\t\t\t\t\tthis._documents.delete(revivedUri);\n\t\t\t\t\tthis._textDocumentsAndEditors.$acceptDocumentsAndEditorsDelta(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tremovedDocuments: document.apiNotebook\n\t\t\t\t\t\t\t\t.getCells()\n\t\t\t\t\t\t\t\t.map((cell) => cell.document.uri),\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t\tthis._onDidCloseNotebookDocument.fire(document.apiNotebook);\n\t\t\t\t}\n\n\t\t\t\tfor (const editor of this._editors.values()) {\n\t\t\t\t\tif (\n\t\t\t\t\t\teditor.notebookData.uri.toString() ===\n\t\t\t\t\t\trevivedUri.toString()\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis._editors.delete(editor.id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (delta.value.addedDocuments) {\n\t\t\tconst addedCellDocuments: IModelAddedData[] = [];\n\n\t\t\tfor (const modelData of delta.value.addedDocuments) {\n\t\t\t\tconst uri = URI.revive(modelData.uri);\n\n\t\t\t\tif (this._documents.has(uri)) {\n\t\t\t\t\tthrow new Error(`adding EXISTING notebook ${uri} `);\n\t\t\t\t}\n\n\t\t\t\tconst document = new ExtHostNotebookDocument(\n\t\t\t\t\tthis._notebookDocumentsProxy,\n\t\t\t\t\tthis._textDocumentsAndEditors,\n\t\t\t\t\tthis._textDocuments,\n\t\t\t\t\turi,\n\t\t\t\t\tmodelData,\n\t\t\t\t);\n\n\t\t\t\t// add cell document as vscode.TextDocument\n\t\t\t\taddedCellDocuments.push(\n\t\t\t\t\t...modelData.cells.map((cell) =>\n\t\t\t\t\t\tExtHostCell.asModelAddData(cell),\n\t\t\t\t\t),\n\t\t\t\t);\n\n\t\t\t\tthis._documents.get(uri)?.dispose();\n\t\t\t\tthis._documents.set(uri, document);\n\t\t\t\tthis._textDocumentsAndEditors.$acceptDocumentsAndEditorsDelta({\n\t\t\t\t\taddedDocuments: addedCellDocuments,\n\t\t\t\t});\n\n\t\t\t\tthis._onDidOpenNotebookDocument.fire(document.apiNotebook);\n\t\t\t}\n\t\t}\n\n\t\tif (delta.value.addedEditors) {\n\t\t\tfor (const editorModelData of delta.value.addedEditors) {\n\t\t\t\tif (this._editors.has(editorModelData.id)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst revivedUri = URI.revive(editorModelData.documentUri);\n\t\t\t\tconst document = this._documents.get(revivedUri);\n\n\t\t\t\tif (document) {\n\t\t\t\t\tthis._createExtHostEditor(\n\t\t\t\t\t\tdocument,\n\t\t\t\t\t\teditorModelData.id,\n\t\t\t\t\t\teditorModelData,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst removedEditors: ExtHostNotebookEditor[] = [];\n\n\t\tif (delta.value.removedEditors) {\n\t\t\tfor (const editorid of delta.value.removedEditors) {\n\t\t\t\tconst editor = this._editors.get(editorid);\n\n\t\t\t\tif (editor) {\n\t\t\t\t\tthis._editors.delete(editorid);\n\n\t\t\t\t\tif (this._activeNotebookEditor?.id === editor.id) {\n\t\t\t\t\t\tthis._activeNotebookEditor = undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tremovedEditors.push(editor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (delta.value.visibleEditors) {\n\t\t\tthis._visibleNotebookEditors = delta.value.visibleEditors\n\t\t\t\t.map((id) => this._editors.get(id)!)\n\t\t\t\t.filter((editor) => !!editor) as ExtHostNotebookEditor[];\n\t\t\tconst visibleEditorsSet = new Set<string>();\n\t\t\tthis._visibleNotebookEditors.forEach((editor) =>\n\t\t\t\tvisibleEditorsSet.add(editor.id),\n\t\t\t);\n\n\t\t\tfor (const editor of this._editors.values()) {\n\t\t\t\tconst newValue = visibleEditorsSet.has(editor.id);\n\t\t\t\teditor._acceptVisibility(newValue);\n\t\t\t}\n\n\t\t\tthis._visibleNotebookEditors = [...this._editors.values()]\n\t\t\t\t.map((e) => e)\n\t\t\t\t.filter((e) => e.visible);\n\t\t\tthis._onDidChangeVisibleNotebookEditors.fire(\n\t\t\t\tthis.visibleNotebookEditors,\n\t\t\t);\n\t\t}\n\n\t\tif (delta.value.newActiveEditor === null) {\n\t\t\t// clear active notebook as current active editor is non-notebook editor\n\t\t\tthis._activeNotebookEditor = undefined;\n\t\t} else if (delta.value.newActiveEditor) {\n\t\t\tconst activeEditor = this._editors.get(delta.value.newActiveEditor);\n\t\t\tif (!activeEditor) {\n\t\t\t\tconsole.error(\n\t\t\t\t\t`FAILED to find active notebook editor ${delta.value.newActiveEditor}`,\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis._activeNotebookEditor = this._editors.get(\n\t\t\t\tdelta.value.newActiveEditor,\n\t\t\t);\n\t\t}\n\t\tif (delta.value.newActiveEditor !== undefined) {\n\t\t\tthis._onDidChangeActiveNotebookEditor.fire(\n\t\t\t\tthis._activeNotebookEditor?.apiEditor,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate static _registerApiCommands(extHostCommands: ExtHostCommands) {\n\t\tconst notebookTypeArg = ApiCommandArgument.String.with(\n\t\t\t\"notebookType\",\n\t\t\t\"A notebook type\",\n\t\t);\n\n\t\tconst commandDataToNotebook = new ApiCommand(\n\t\t\t\"vscode.executeDataToNotebook\",\n\t\t\t\"_executeDataToNotebook\",\n\t\t\t\"Invoke notebook serializer\",\n\t\t\t[\n\t\t\t\tnotebookTypeArg,\n\t\t\t\tnew ApiCommandArgument<Uint8Array, VSBuffer>(\n\t\t\t\t\t\"data\",\n\t\t\t\t\t\"Bytes to convert to data\",\n\t\t\t\t\t(v) => v instanceof Uint8Array,\n\t\t\t\t\t(v) => VSBuffer.wrap(v),\n\t\t\t\t),\n\t\t\t],\n\t\t\tnew ApiCommandResult<\n\t\t\t\tSerializableObjectWithBuffers<NotebookDataDto>,\n\t\t\t\tvscode.NotebookData\n\t\t\t>(\"Notebook Data\", (data) =>\n\t\t\t\ttypeConverters.NotebookData.to(data.value),\n\t\t\t),\n\t\t);\n\n\t\tconst commandNotebookToData = new ApiCommand(\n\t\t\t\"vscode.executeNotebookToData\",\n\t\t\t\"_executeNotebookToData\",\n\t\t\t\"Invoke notebook serializer\",\n\t\t\t[\n\t\t\t\tnotebookTypeArg,\n\t\t\t\tnew ApiCommandArgument<\n\t\t\t\t\tvscode.NotebookData,\n\t\t\t\t\tSerializableObjectWithBuffers<NotebookDataDto>\n\t\t\t\t>(\n\t\t\t\t\t\"NotebookData\",\n\t\t\t\t\t\"Notebook data to convert to bytes\",\n\t\t\t\t\t(v) => true,\n\t\t\t\t\t(v) =>\n\t\t\t\t\t\tnew SerializableObjectWithBuffers(\n\t\t\t\t\t\t\ttypeConverters.NotebookData.from(v),\n\t\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t],\n\t\t\tnew ApiCommandResult<VSBuffer, Uint8Array>(\n\t\t\t\t\"Bytes\",\n\t\t\t\t(dto) => dto.buffer,\n\t\t\t),\n\t\t);\n\n\t\textHostCommands.registerApiCommand(commandDataToNotebook);\n\t\textHostCommands.registerApiCommand(commandNotebookToData);\n\t}\n\n\tprivate trace(msg: string): void {\n\t\tthis._logService.trace(`[Extension Host Notebook] ${msg}`);\n\t}\n}\n"],
  "mappings": "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",
  "names": ["token", "textQuery", "notebook", "index"]
}
