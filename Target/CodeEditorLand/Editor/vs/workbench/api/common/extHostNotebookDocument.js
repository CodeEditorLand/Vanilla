import"vscode";import{Schemas as v}from"../../../base/common/network.js";import{URI as k}from"../../../base/common/uri.js";import*as d from"../../contrib/notebook/common/notebookCommon.js";import"./extHost.protocol.js";import"./extHostDocuments.js";import"./extHostDocumentsAndEditors.js";import*as u from"./extHostTypeConverters.js";import{NotebookRange as f}from"./extHostTypes.js";class h{constructor(e,l,o,s){this.start=e;this.deletedCount=l;this.deletedItems=o;this.items=s}asApiEvent(){return{range:new f(this.start,this.start+this.deletedCount),addedCells:this.items.map(e=>e.apiCell),removedCells:this.deletedItems}}}class p{constructor(e,l,o){this.notebook=e;this._extHostDocument=l;this._cellData=o;this.handle=o.handle,this.uri=k.revive(o.uri),this.cellKind=o.cellKind,this._outputs=o.outputs.map(u.NotebookCellOutput.to),this._internalMetadata=o.internalMetadata??{},this._metadata=Object.freeze(o.metadata??{}),this._previousResult=Object.freeze(u.NotebookCellExecutionSummary.to(o.internalMetadata??{}))}static asModelAddData(e){return{EOL:e.eol,lines:e.source,languageId:e.language,uri:e.uri,isDirty:!1,versionId:1}}_outputs;_metadata;_previousResult;_internalMetadata;handle;uri;cellKind;_apiCell;_mime;get internalMetadata(){return this._internalMetadata}get apiCell(){if(!this._apiCell){const e=this,l=this._extHostDocument.getDocument(this.uri);if(!l)throw new Error(`MISSING extHostDocument for notebook cell: ${this.uri}`);const o={get index(){return e.notebook.getCellIndex(e)},notebook:e.notebook.apiNotebook,kind:u.NotebookCellKind.to(this._cellData.cellKind),document:l.document,get mime(){return e._mime},set mime(s){e._mime=s},get outputs(){return e._outputs.slice(0)},get metadata(){return e._metadata},get executionSummary(){return e._previousResult}};this._apiCell=Object.freeze(o)}return this._apiCell}setOutputs(e){this._outputs=e.map(u.NotebookCellOutput.to)}setOutputItems(e,l,o){const s=o.map(u.NotebookCellOutputItem.to),n=this._outputs.find(a=>a.id===e);if(n&&(l||(n.items.length=0),n.items.push(...s),n.items.length>1&&n.items.every(a=>d.isTextStreamMime(a.mime)))){const a=new Map,t=[];n.items.forEach(i=>{let r;a.has(i.mime)?r=a.get(i.mime):(r=[],a.set(i.mime,r),t.push(i.mime)),r.push(i.data)}),n.items.length=0,t.forEach(i=>{const r=d.compressOutputItemStreams(a.get(i));n.items.push({mime:i,data:r.data.buffer})})}}setMetadata(e){this._metadata=Object.freeze(e)}setInternalMetadata(e){this._internalMetadata=e,this._previousResult=Object.freeze(u.NotebookCellExecutionSummary.to(e))}setMime(e){}}class C{constructor(e,l,o,s,n){this._proxy=e;this._textDocumentsAndEditors=l;this._textDocuments=o;this.uri=s;this._notebookType=n.viewType,this._metadata=Object.freeze(n.metadata??Object.create(null)),this._spliceNotebookCells([[0,0,n.cells]],!0,void 0),this._versionId=n.versionId}static _handlePool=0;handle=C._handlePool++;_cells=[];_notebookType;_notebook;_metadata;_versionId=0;_isDirty=!1;_disposed=!1;dispose(){this._disposed=!0}get versionId(){return this._versionId}get apiNotebook(){if(!this._notebook){const e=this,l={get uri(){return e.uri},get version(){return e._versionId},get notebookType(){return e._notebookType},get isDirty(){return e._isDirty},get isUntitled(){return e.uri.scheme===v.untitled},get isClosed(){return e._disposed},get metadata(){return e._metadata},get cellCount(){return e._cells.length},cellAt(o){return o=e._validateIndex(o),e._cells[o].apiCell},getCells(o){return(o?e._getCells(o):e._cells).map(n=>n.apiCell)},save(){return e._save()},[Symbol.for("debug.description")](){return`NotebookDocument(${this.uri.toString()})`}};this._notebook=Object.freeze(l)}return this._notebook}acceptDocumentPropertiesChanged(e){e.metadata&&(this._metadata=Object.freeze({...this._metadata,...e.metadata}))}acceptDirty(e){this._isDirty=e}acceptModelChanged(e,l,o){this._versionId=e.versionId,this._isDirty=l,this.acceptDocumentPropertiesChanged({metadata:o});const s={notebook:this.apiNotebook,metadata:o,cellChanges:[],contentChanges:[]},n=[];for(const t of e.rawEvents)t.kind===d.NotebookCellsChangeType.ModelChange?this._spliceNotebookCells(t.changes,!1,s.contentChanges):t.kind===d.NotebookCellsChangeType.Move?this._moveCells(t.index,t.length,t.newIdx,s.contentChanges):t.kind===d.NotebookCellsChangeType.Output?(this._setCellOutputs(t.index,t.outputs),n.push({cell:this._cells[t.index].apiCell,outputs:this._cells[t.index].apiCell.outputs})):t.kind===d.NotebookCellsChangeType.OutputItem?(this._setCellOutputItems(t.index,t.outputId,t.append,t.outputItems),n.push({cell:this._cells[t.index].apiCell,outputs:this._cells[t.index].apiCell.outputs})):t.kind===d.NotebookCellsChangeType.ChangeCellLanguage?(this._changeCellLanguage(t.index,t.language),n.push({cell:this._cells[t.index].apiCell,document:this._cells[t.index].apiCell.document})):t.kind===d.NotebookCellsChangeType.ChangeCellContent?n.push({cell:this._cells[t.index].apiCell,document:this._cells[t.index].apiCell.document}):t.kind===d.NotebookCellsChangeType.ChangeCellMime?this._changeCellMime(t.index,t.mime):t.kind===d.NotebookCellsChangeType.ChangeCellMetadata?(this._changeCellMetadata(t.index,t.metadata),n.push({cell:this._cells[t.index].apiCell,metadata:this._cells[t.index].apiCell.metadata})):t.kind===d.NotebookCellsChangeType.ChangeCellInternalMetadata&&(this._changeCellInternalMetadata(t.index,t.internalMetadata),n.push({cell:this._cells[t.index].apiCell,executionSummary:this._cells[t.index].apiCell.executionSummary}));const a=new Map;for(let t=0;t<n.length;t++){const i=n[t],r=a.get(i.cell);if(r===void 0){const m=s.cellChanges.push({document:void 0,executionSummary:void 0,metadata:void 0,outputs:void 0,...i});a.set(i.cell,m-1)}else s.cellChanges[r]={...s.cellChanges[r],...i}}return Object.freeze(s),Object.freeze(s.cellChanges),Object.freeze(s.contentChanges),s}_validateIndex(e){return e=e|0,e<0?0:e>=this._cells.length?this._cells.length-1:e}_validateRange(e){let l=e.start|0,o=e.end|0;return l<0&&(l=0),o>this._cells.length&&(o=this._cells.length),e.with({start:l,end:o})}_getCells(e){e=this._validateRange(e);const l=[];for(let o=e.start;o<e.end;o++)l.push(this._cells[o]);return l}async _save(){return this._disposed?Promise.reject(new Error("Notebook has been closed")):this._proxy.$trySaveNotebook(this.uri)}_spliceNotebookCells(e,l,o){if(this._disposed)return;const s=[],n=[],a=[];if(e.reverse().forEach(t=>{const r=t[2].map(c=>{const _=new p(this,this._textDocumentsAndEditors,c);return l||n.push(p.asModelAddData(c)),_}),m=new h(t[0],t[1],[],r),g=this._cells.splice(t[0],t[1],...r);for(const c of g)a.push(c.uri),m.deletedItems.push(c.apiCell);s.push(m)}),this._textDocumentsAndEditors.acceptDocumentsAndEditorsDelta({addedDocuments:n,removedDocuments:a}),o)for(const t of s)o.push(t.asApiEvent())}_moveCells(e,l,o,s){const n=this._cells.splice(e,l);this._cells.splice(o,0,...n);const a=[new h(e,l,n.map(t=>t.apiCell),[]),new h(o,0,[],n)];for(const t of a)s.push(t.asApiEvent())}_setCellOutputs(e,l){this._cells[e].setOutputs(l)}_setCellOutputItems(e,l,o,s){this._cells[e].setOutputItems(l,o,s)}_changeCellLanguage(e,l){const o=this._cells[e];o.apiCell.document.languageId!==l&&this._textDocuments.$acceptModelLanguageChanged(o.uri,l)}_changeCellMime(e,l){const o=this._cells[e];o.apiCell.mime=l}_changeCellMetadata(e,l){this._cells[e].setMetadata(l)}_changeCellInternalMetadata(e,l){this._cells[e].setInternalMetadata(l)}getCellFromApiCell(e){return this._cells.find(l=>l.apiCell===e)}getCellFromIndex(e){return this._cells[e]}getCell(e){return this._cells.find(l=>l.handle===e)}getCellIndex(e){return this._cells.indexOf(e)}}export{p as ExtHostCell,C as ExtHostNotebookDocument};
