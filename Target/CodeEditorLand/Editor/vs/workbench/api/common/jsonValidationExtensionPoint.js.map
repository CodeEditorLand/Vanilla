{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/jsonValidationExtensionPoint.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../../nls.js';\nimport { ExtensionsRegistry } from '../../services/extensions/common/extensionsRegistry.js';\nimport * as resources from '../../../base/common/resources.js';\nimport { isString } from '../../../base/common/types.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { Extensions, IExtensionFeatureTableRenderer, IExtensionFeaturesRegistry, IRenderedData, IRowData, ITableData } from '../../services/extensionManagement/common/extensionFeatures.js';\nimport { IExtensionManifest } from '../../../platform/extensions/common/extensions.js';\nimport { Registry } from '../../../platform/registry/common/platform.js';\nimport { SyncDescriptor } from '../../../platform/instantiation/common/descriptors.js';\nimport { MarkdownString } from '../../../base/common/htmlContent.js';\n\ninterface IJSONValidationExtensionPoint {\n\tfileMatch: string | string[];\n\turl: string;\n}\n\nconst configurationExtPoint = ExtensionsRegistry.registerExtensionPoint<IJSONValidationExtensionPoint[]>({\n\textensionPoint: 'jsonValidation',\n\tdefaultExtensionKind: ['workspace', 'web'],\n\tjsonSchema: {\n\t\tdescription: nls.localize('contributes.jsonValidation', 'Contributes json schema configuration.'),\n\t\ttype: 'array',\n\t\tdefaultSnippets: [{ body: [{ fileMatch: '${1:file.json}', url: '${2:url}' }] }],\n\t\titems: {\n\t\t\ttype: 'object',\n\t\t\tdefaultSnippets: [{ body: { fileMatch: '${1:file.json}', url: '${2:url}' } }],\n\t\t\tproperties: {\n\t\t\t\tfileMatch: {\n\t\t\t\t\ttype: ['string', 'array'],\n\t\t\t\t\tdescription: nls.localize('contributes.jsonValidation.fileMatch', 'The file pattern (or an array of patterns) to match, for example \"package.json\" or \"*.launch\". Exclusion patterns start with \\'!\\''),\n\t\t\t\t\titems: {\n\t\t\t\t\t\ttype: ['string']\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\turl: {\n\t\t\t\t\tdescription: nls.localize('contributes.jsonValidation.url', 'A schema URL (\\'http:\\', \\'https:\\') or relative path to the extension folder (\\'./\\').'),\n\t\t\t\t\ttype: 'string'\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n\nexport class JSONValidationExtensionPoint {\n\n\tconstructor() {\n\t\tconfigurationExtPoint.setHandler((extensions) => {\n\t\t\tfor (const extension of extensions) {\n\t\t\t\tconst extensionValue = <IJSONValidationExtensionPoint[]>extension.value;\n\t\t\t\tconst collector = extension.collector;\n\t\t\t\tconst extensionLocation = extension.description.extensionLocation;\n\n\t\t\t\tif (!extensionValue || !Array.isArray(extensionValue)) {\n\t\t\t\t\tcollector.error(nls.localize('invalid.jsonValidation', \"'configuration.jsonValidation' must be a array\"));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\textensionValue.forEach(extension => {\n\t\t\t\t\tif (!isString(extension.fileMatch) && !(Array.isArray(extension.fileMatch) && extension.fileMatch.every(isString))) {\n\t\t\t\t\t\tcollector.error(nls.localize('invalid.fileMatch', \"'configuration.jsonValidation.fileMatch' must be defined as a string or an array of strings.\"));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconst uri = extension.url;\n\t\t\t\t\tif (!isString(uri)) {\n\t\t\t\t\t\tcollector.error(nls.localize('invalid.url', \"'configuration.jsonValidation.url' must be a URL or relative path\"));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (uri.startsWith('./')) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst colorThemeLocation = resources.joinPath(extensionLocation, uri);\n\t\t\t\t\t\t\tif (!resources.isEqualOrParent(colorThemeLocation, extensionLocation)) {\n\t\t\t\t\t\t\t\tcollector.warn(nls.localize('invalid.path.1', \"Expected `contributes.{0}.url` ({1}) to be included inside extension's folder ({2}). This might make the extension non-portable.\", configurationExtPoint.name, colorThemeLocation.toString(), extensionLocation.path));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tcollector.error(nls.localize('invalid.url.fileschema', \"'configuration.jsonValidation.url' is an invalid relative URL: {0}\", e.message));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (!/^[^:/?#]+:\\/\\//.test(uri)) {\n\t\t\t\t\t\tcollector.error(nls.localize('invalid.url.schema', \"'configuration.jsonValidation.url' must be an absolute URL or start with './'  to reference schemas located in the extension.\"));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n}\n\nclass JSONValidationDataRenderer extends Disposable implements IExtensionFeatureTableRenderer {\n\n\treadonly type = 'table';\n\n\tshouldRender(manifest: IExtensionManifest): boolean {\n\t\treturn !!manifest.contributes?.jsonValidation;\n\t}\n\n\trender(manifest: IExtensionManifest): IRenderedData<ITableData> {\n\t\tconst contrib = manifest.contributes?.jsonValidation || [];\n\t\tif (!contrib.length) {\n\t\t\treturn { data: { headers: [], rows: [] }, dispose: () => { } };\n\t\t}\n\n\t\tconst headers = [\n\t\t\tnls.localize('fileMatch', \"File Match\"),\n\t\t\tnls.localize('schema', \"Schema\"),\n\t\t];\n\n\t\tconst rows: IRowData[][] = contrib.map(v => {\n\t\t\treturn [\n\t\t\t\tnew MarkdownString().appendMarkdown(`\\`${Array.isArray(v.fileMatch) ? v.fileMatch.join(', ') : v.fileMatch}\\``),\n\t\t\t\tv.url,\n\t\t\t];\n\t\t});\n\n\t\treturn {\n\t\t\tdata: {\n\t\t\t\theaders,\n\t\t\t\trows\n\t\t\t},\n\t\t\tdispose: () => { }\n\t\t};\n\t}\n}\n\nRegistry.as<IExtensionFeaturesRegistry>(Extensions.ExtensionFeaturesRegistry).registerExtensionFeature({\n\tid: 'jsonValidation',\n\tlabel: nls.localize('jsonValidation', \"JSON Validation\"),\n\taccess: {\n\t\tcanToggle: false\n\t},\n\trenderer: new SyncDescriptor(JSONValidationDataRenderer),\n});\n"],
  "mappings": "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",
  "names": ["extension"]
}
