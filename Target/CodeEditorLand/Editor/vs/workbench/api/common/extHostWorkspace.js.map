{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostWorkspace.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type * as vscode from \"vscode\";\nimport {\n\tdelta as arrayDelta,\n\tmapArrayOrNot,\n} from \"../../../base/common/arrays.js\";\nimport { AsyncIterableObject, Barrier } from \"../../../base/common/async.js\";\nimport { CancellationToken } from \"../../../base/common/cancellation.js\";\nimport {\n\tAsyncEmitter,\n\tEmitter,\n\ttype Event,\n} from \"../../../base/common/event.js\";\nimport {\n\tDisposableStore,\n\ttoDisposable,\n} from \"../../../base/common/lifecycle.js\";\nimport { revive } from \"../../../base/common/marshalling.js\";\nimport { Schemas } from \"../../../base/common/network.js\";\nimport { Counter } from \"../../../base/common/numbers.js\";\nimport {\n\tExtUri,\n\tbasename,\n\tbasenameOrAuthority,\n\tdirname,\n\trelativePath,\n} from \"../../../base/common/resources.js\";\nimport { compare } from \"../../../base/common/strings.js\";\nimport { TernarySearchTree } from \"../../../base/common/ternarySearchTree.js\";\nimport { URI, type UriComponents } from \"../../../base/common/uri.js\";\nimport { localize } from \"../../../nls.js\";\nimport type {\n\tExtensionIdentifier,\n\tIExtensionDescription,\n} from \"../../../platform/extensions/common/extensions.js\";\nimport { FileSystemProviderCapabilities } from \"../../../platform/files/common/files.js\";\nimport { createDecorator } from \"../../../platform/instantiation/common/instantiation.js\";\nimport { ILogService } from \"../../../platform/log/common/log.js\";\nimport { Severity } from \"../../../platform/notification/common/notification.js\";\nimport type {\n\tAuthInfo,\n\tCredentials,\n} from \"../../../platform/request/common/request.js\";\nimport type { EditSessionIdentityMatch } from \"../../../platform/workspace/common/editSessions.js\";\nimport {\n\tWorkspace,\n\tWorkspaceFolder,\n} from \"../../../platform/workspace/common/workspace.js\";\nimport type {\n\tIFileQueryBuilderOptions,\n\tISearchPatternBuilder,\n\tITextQueryBuilderOptions,\n} from \"../../services/search/common/queryBuilder.js\";\nimport {\n\ttype IRawFileMatch2,\n\ttype ITextSearchResult,\n\tresultIsMatch,\n} from \"../../services/search/common/search.js\";\nimport {\n\tExcludeSettingOptions,\n\tTextSearchContextNew,\n\tTextSearchMatchNew,\n} from \"../../services/search/common/searchExtTypes.js\";\nimport {\n\ttype ExtHostWorkspaceShape,\n\ttype IRelativePatternDto,\n\ttype IWorkspaceData,\n\tMainContext,\n\ttype MainThreadMessageOptions,\n\ttype MainThreadMessageServiceShape,\n\ttype MainThreadWorkspaceShape,\n} from \"./extHost.protocol.js\";\nimport { IExtHostFileSystemInfo } from \"./extHostFileSystemInfo.js\";\nimport { IExtHostInitDataService } from \"./extHostInitDataService.js\";\nimport { IExtHostRpcService } from \"./extHostRpcService.js\";\nimport { GlobPattern } from \"./extHostTypeConverters.js\";\nimport { Range } from \"./extHostTypes.js\";\nimport { IURITransformerService } from \"./extHostUriTransformerService.js\";\n\nexport interface IExtHostWorkspaceProvider {\n\tgetWorkspaceFolder2(\n\t\turi: vscode.Uri,\n\t\tresolveParent?: boolean,\n\t): Promise<vscode.WorkspaceFolder | undefined>;\n\tresolveWorkspaceFolder(\n\t\turi: vscode.Uri,\n\t): Promise<vscode.WorkspaceFolder | undefined>;\n\tgetWorkspaceFolders2(): Promise<vscode.WorkspaceFolder[] | undefined>;\n\tresolveProxy(url: string): Promise<string | undefined>;\n\tlookupAuthorization(authInfo: AuthInfo): Promise<Credentials | undefined>;\n\tlookupKerberosAuthorization(url: string): Promise<string | undefined>;\n\tloadCertificates(): Promise<string[]>;\n}\n\nfunction isFolderEqual(\n\tfolderA: URI,\n\tfolderB: URI,\n\textHostFileSystemInfo: IExtHostFileSystemInfo,\n): boolean {\n\treturn new ExtUri((uri) =>\n\t\tignorePathCasing(uri, extHostFileSystemInfo),\n\t).isEqual(folderA, folderB);\n}\n\nfunction compareWorkspaceFolderByUri(\n\ta: vscode.WorkspaceFolder,\n\tb: vscode.WorkspaceFolder,\n\textHostFileSystemInfo: IExtHostFileSystemInfo,\n): number {\n\treturn isFolderEqual(a.uri, b.uri, extHostFileSystemInfo)\n\t\t? 0\n\t\t: compare(a.uri.toString(), b.uri.toString());\n}\n\nfunction compareWorkspaceFolderByUriAndNameAndIndex(\n\ta: vscode.WorkspaceFolder,\n\tb: vscode.WorkspaceFolder,\n\textHostFileSystemInfo: IExtHostFileSystemInfo,\n): number {\n\tif (a.index !== b.index) {\n\t\treturn a.index < b.index ? -1 : 1;\n\t}\n\n\treturn isFolderEqual(a.uri, b.uri, extHostFileSystemInfo)\n\t\t? compare(a.name, b.name)\n\t\t: compare(a.uri.toString(), b.uri.toString());\n}\n\nfunction delta(\n\toldFolders: vscode.WorkspaceFolder[],\n\tnewFolders: vscode.WorkspaceFolder[],\n\tcompare: (\n\t\ta: vscode.WorkspaceFolder,\n\t\tb: vscode.WorkspaceFolder,\n\t\textHostFileSystemInfo: IExtHostFileSystemInfo,\n\t) => number,\n\textHostFileSystemInfo: IExtHostFileSystemInfo,\n): { removed: vscode.WorkspaceFolder[]; added: vscode.WorkspaceFolder[] } {\n\tconst oldSortedFolders = oldFolders\n\t\t.slice(0)\n\t\t.sort((a, b) => compare(a, b, extHostFileSystemInfo));\n\tconst newSortedFolders = newFolders\n\t\t.slice(0)\n\t\t.sort((a, b) => compare(a, b, extHostFileSystemInfo));\n\n\treturn arrayDelta(oldSortedFolders, newSortedFolders, (a, b) =>\n\t\tcompare(a, b, extHostFileSystemInfo),\n\t);\n}\n\nfunction ignorePathCasing(\n\turi: URI,\n\textHostFileSystemInfo: IExtHostFileSystemInfo,\n): boolean {\n\tconst capabilities = extHostFileSystemInfo.getCapabilities(uri.scheme);\n\treturn !(\n\t\tcapabilities &&\n\t\tcapabilities & FileSystemProviderCapabilities.PathCaseSensitive\n\t);\n}\n\ninterface MutableWorkspaceFolder extends vscode.WorkspaceFolder {\n\tname: string;\n\tindex: number;\n}\n\ninterface QueryOptions<T> {\n\toptions: T;\n\tfolder: URI | undefined;\n}\n\nclass ExtHostWorkspaceImpl extends Workspace {\n\tstatic toExtHostWorkspace(\n\t\tdata: IWorkspaceData | null,\n\t\tpreviousConfirmedWorkspace: ExtHostWorkspaceImpl | undefined,\n\t\tpreviousUnconfirmedWorkspace: ExtHostWorkspaceImpl | undefined,\n\t\textHostFileSystemInfo: IExtHostFileSystemInfo,\n\t): {\n\t\tworkspace: ExtHostWorkspaceImpl | null;\n\t\tadded: vscode.WorkspaceFolder[];\n\t\tremoved: vscode.WorkspaceFolder[];\n\t} {\n\t\tif (!data) {\n\t\t\treturn { workspace: null, added: [], removed: [] };\n\t\t}\n\n\t\tconst { id, name, folders, configuration, transient, isUntitled } =\n\t\t\tdata;\n\t\tconst newWorkspaceFolders: vscode.WorkspaceFolder[] = [];\n\n\t\t// If we have an existing workspace, we try to find the folders that match our\n\t\t// data and update their properties. It could be that an extension stored them\n\t\t// for later use and we want to keep them \"live\" if they are still present.\n\t\tconst oldWorkspace = previousConfirmedWorkspace;\n\t\tif (previousConfirmedWorkspace) {\n\t\t\tfolders.forEach((folderData, index) => {\n\t\t\t\tconst folderUri = URI.revive(folderData.uri);\n\t\t\t\tconst existingFolder = ExtHostWorkspaceImpl._findFolder(\n\t\t\t\t\tpreviousUnconfirmedWorkspace || previousConfirmedWorkspace,\n\t\t\t\t\tfolderUri,\n\t\t\t\t\textHostFileSystemInfo,\n\t\t\t\t);\n\n\t\t\t\tif (existingFolder) {\n\t\t\t\t\texistingFolder.name = folderData.name;\n\t\t\t\t\texistingFolder.index = folderData.index;\n\n\t\t\t\t\tnewWorkspaceFolders.push(existingFolder);\n\t\t\t\t} else {\n\t\t\t\t\tnewWorkspaceFolders.push({\n\t\t\t\t\t\turi: folderUri,\n\t\t\t\t\t\tname: folderData.name,\n\t\t\t\t\t\tindex,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tnewWorkspaceFolders.push(\n\t\t\t\t...folders.map(({ uri, name, index }) => ({\n\t\t\t\t\turi: URI.revive(uri),\n\t\t\t\t\tname,\n\t\t\t\t\tindex,\n\t\t\t\t})),\n\t\t\t);\n\t\t}\n\n\t\t// make sure to restore sort order based on index\n\t\tnewWorkspaceFolders.sort((f1, f2) => (f1.index < f2.index ? -1 : 1));\n\n\t\tconst workspace = new ExtHostWorkspaceImpl(\n\t\t\tid,\n\t\t\tname,\n\t\t\tnewWorkspaceFolders,\n\t\t\t!!transient,\n\t\t\tconfiguration ? URI.revive(configuration) : null,\n\t\t\t!!isUntitled,\n\t\t\t(uri) => ignorePathCasing(uri, extHostFileSystemInfo),\n\t\t);\n\t\tconst { added, removed } = delta(\n\t\t\toldWorkspace ? oldWorkspace.workspaceFolders : [],\n\t\t\tworkspace.workspaceFolders,\n\t\t\tcompareWorkspaceFolderByUri,\n\t\t\textHostFileSystemInfo,\n\t\t);\n\n\t\treturn { workspace, added, removed };\n\t}\n\n\tprivate static _findFolder(\n\t\tworkspace: ExtHostWorkspaceImpl,\n\t\tfolderUriToFind: URI,\n\t\textHostFileSystemInfo: IExtHostFileSystemInfo,\n\t): MutableWorkspaceFolder | undefined {\n\t\tfor (let i = 0; i < workspace.folders.length; i++) {\n\t\t\tconst folder = workspace.workspaceFolders[i];\n\t\t\tif (\n\t\t\t\tisFolderEqual(\n\t\t\t\t\tfolder.uri,\n\t\t\t\t\tfolderUriToFind,\n\t\t\t\t\textHostFileSystemInfo,\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\treturn folder;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate readonly _workspaceFolders: vscode.WorkspaceFolder[] = [];\n\tprivate readonly _structure: TernarySearchTree<URI, vscode.WorkspaceFolder>;\n\n\tconstructor(\n\t\tid: string,\n\t\tprivate _name: string,\n\t\tfolders: vscode.WorkspaceFolder[],\n\t\ttransient: boolean,\n\t\tconfiguration: URI | null,\n\t\tprivate _isUntitled: boolean,\n\t\tignorePathCasing: (key: URI) => boolean,\n\t) {\n\t\tsuper(\n\t\t\tid,\n\t\t\tfolders.map((f) => new WorkspaceFolder(f)),\n\t\t\ttransient,\n\t\t\tconfiguration,\n\t\t\tignorePathCasing,\n\t\t);\n\t\tthis._structure = TernarySearchTree.forUris<vscode.WorkspaceFolder>(\n\t\t\tignorePathCasing,\n\t\t\t() => true,\n\t\t);\n\n\t\t// setup the workspace folder data structure\n\t\tfolders.forEach((folder) => {\n\t\t\tthis._workspaceFolders.push(folder);\n\t\t\tthis._structure.set(folder.uri, folder);\n\t\t});\n\t}\n\n\tget name(): string {\n\t\treturn this._name;\n\t}\n\n\tget isUntitled(): boolean {\n\t\treturn this._isUntitled;\n\t}\n\n\tget workspaceFolders(): vscode.WorkspaceFolder[] {\n\t\treturn this._workspaceFolders.slice(0);\n\t}\n\n\tgetWorkspaceFolder(\n\t\turi: URI,\n\t\tresolveParent?: boolean,\n\t): vscode.WorkspaceFolder | undefined {\n\t\tif (resolveParent && this._structure.get(uri)) {\n\t\t\t// `uri` is a workspace folder so we check for its parent\n\t\t\turi = dirname(uri);\n\t\t}\n\t\treturn this._structure.findSubstr(uri);\n\t}\n\n\tresolveWorkspaceFolder(uri: URI): vscode.WorkspaceFolder | undefined {\n\t\treturn this._structure.get(uri);\n\t}\n}\n\nexport class ExtHostWorkspace\n\timplements ExtHostWorkspaceShape, IExtHostWorkspaceProvider\n{\n\treadonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidChangeWorkspace =\n\t\tnew Emitter<vscode.WorkspaceFoldersChangeEvent>();\n\treadonly onDidChangeWorkspace: Event<vscode.WorkspaceFoldersChangeEvent> =\n\t\tthis._onDidChangeWorkspace.event;\n\n\tprivate readonly _onDidGrantWorkspaceTrust = new Emitter<void>();\n\treadonly onDidGrantWorkspaceTrust: Event<void> =\n\t\tthis._onDidGrantWorkspaceTrust.event;\n\n\tprivate readonly _logService: ILogService;\n\tprivate readonly _requestIdProvider: Counter;\n\tprivate readonly _barrier: Barrier;\n\n\tprivate _confirmedWorkspace?: ExtHostWorkspaceImpl;\n\tprivate _unconfirmedWorkspace?: ExtHostWorkspaceImpl;\n\n\tprivate readonly _proxy: MainThreadWorkspaceShape;\n\tprivate readonly _messageService: MainThreadMessageServiceShape;\n\tprivate readonly _extHostFileSystemInfo: IExtHostFileSystemInfo;\n\tprivate readonly _uriTransformerService: IURITransformerService;\n\n\tprivate readonly _activeSearchCallbacks: ((\n\t\tmatch: IRawFileMatch2,\n\t) => any)[] = [];\n\n\tprivate _trusted = false;\n\n\tprivate readonly _editSessionIdentityProviders = new Map<\n\t\tstring,\n\t\tvscode.EditSessionIdentityProvider\n\t>();\n\n\tconstructor(\n\t\t@IExtHostRpcService extHostRpc: IExtHostRpcService,\n\t\t@IExtHostInitDataService initData: IExtHostInitDataService,\n\t\t@IExtHostFileSystemInfo extHostFileSystemInfo: IExtHostFileSystemInfo,\n\t\t@ILogService logService: ILogService,\n\t\t@IURITransformerService uriTransformerService: IURITransformerService,\n\t) {\n\t\tthis._logService = logService;\n\t\tthis._extHostFileSystemInfo = extHostFileSystemInfo;\n\t\tthis._uriTransformerService = uriTransformerService;\n\t\tthis._requestIdProvider = new Counter();\n\t\tthis._barrier = new Barrier();\n\n\t\tthis._proxy = extHostRpc.getProxy(MainContext.MainThreadWorkspace);\n\t\tthis._messageService = extHostRpc.getProxy(\n\t\t\tMainContext.MainThreadMessageService,\n\t\t);\n\t\tconst data = initData.workspace;\n\t\tthis._confirmedWorkspace = data\n\t\t\t? new ExtHostWorkspaceImpl(\n\t\t\t\t\tdata.id,\n\t\t\t\t\tdata.name,\n\t\t\t\t\t[],\n\t\t\t\t\t!!data.transient,\n\t\t\t\t\tdata.configuration ? URI.revive(data.configuration) : null,\n\t\t\t\t\t!!data.isUntitled,\n\t\t\t\t\t(uri) => ignorePathCasing(uri, extHostFileSystemInfo),\n\t\t\t\t)\n\t\t\t: undefined;\n\t}\n\n\t$initializeWorkspace(data: IWorkspaceData | null, trusted: boolean): void {\n\t\tthis._trusted = trusted;\n\t\tthis.$acceptWorkspaceData(data);\n\t\tthis._barrier.open();\n\t}\n\n\twaitForInitializeCall(): Promise<boolean> {\n\t\treturn this._barrier.wait();\n\t}\n\n\t// --- workspace ---\n\n\tget workspace(): Workspace | undefined {\n\t\treturn this._actualWorkspace;\n\t}\n\n\tget name(): string | undefined {\n\t\treturn this._actualWorkspace ? this._actualWorkspace.name : undefined;\n\t}\n\n\tget workspaceFile(): vscode.Uri | undefined {\n\t\tif (this._actualWorkspace) {\n\t\t\tif (this._actualWorkspace.configuration) {\n\t\t\t\tif (this._actualWorkspace.isUntitled) {\n\t\t\t\t\treturn URI.from({\n\t\t\t\t\t\tscheme: Schemas.untitled,\n\t\t\t\t\t\tpath: basename(\n\t\t\t\t\t\t\tdirname(this._actualWorkspace.configuration),\n\t\t\t\t\t\t),\n\t\t\t\t\t}); // Untitled Workspace: return untitled URI\n\t\t\t\t}\n\n\t\t\t\treturn this._actualWorkspace.configuration; // Workspace: return the configuration location\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate get _actualWorkspace(): ExtHostWorkspaceImpl | undefined {\n\t\treturn this._unconfirmedWorkspace || this._confirmedWorkspace;\n\t}\n\n\tgetWorkspaceFolders(): vscode.WorkspaceFolder[] | undefined {\n\t\tif (!this._actualWorkspace) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this._actualWorkspace.workspaceFolders.slice(0);\n\t}\n\n\tasync getWorkspaceFolders2(): Promise<\n\t\tvscode.WorkspaceFolder[] | undefined\n\t> {\n\t\tawait this._barrier.wait();\n\t\tif (!this._actualWorkspace) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this._actualWorkspace.workspaceFolders.slice(0);\n\t}\n\n\tupdateWorkspaceFolders(\n\t\textension: IExtensionDescription,\n\t\tindex: number,\n\t\tdeleteCount: number,\n\t\t...workspaceFoldersToAdd: { uri: vscode.Uri; name?: string }[]\n\t): boolean {\n\t\tconst validatedDistinctWorkspaceFoldersToAdd: {\n\t\t\turi: vscode.Uri;\n\t\t\tname?: string;\n\t\t}[] = [];\n\t\tif (Array.isArray(workspaceFoldersToAdd)) {\n\t\t\tworkspaceFoldersToAdd.forEach((folderToAdd) => {\n\t\t\t\tif (\n\t\t\t\t\tURI.isUri(folderToAdd.uri) &&\n\t\t\t\t\t!validatedDistinctWorkspaceFoldersToAdd.some((f) =>\n\t\t\t\t\t\tisFolderEqual(\n\t\t\t\t\t\t\tf.uri,\n\t\t\t\t\t\t\tfolderToAdd.uri,\n\t\t\t\t\t\t\tthis._extHostFileSystemInfo,\n\t\t\t\t\t\t),\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tvalidatedDistinctWorkspaceFoldersToAdd.push({\n\t\t\t\t\t\turi: folderToAdd.uri,\n\t\t\t\t\t\tname:\n\t\t\t\t\t\t\tfolderToAdd.name ||\n\t\t\t\t\t\t\tbasenameOrAuthority(folderToAdd.uri),\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (!!this._unconfirmedWorkspace) {\n\t\t\treturn false; // prevent accumulated calls without a confirmed workspace\n\t\t}\n\n\t\tif ([index, deleteCount].some((i) => typeof i !== \"number\" || i < 0)) {\n\t\t\treturn false; // validate numbers\n\t\t}\n\n\t\tif (\n\t\t\tdeleteCount === 0 &&\n\t\t\tvalidatedDistinctWorkspaceFoldersToAdd.length === 0\n\t\t) {\n\t\t\treturn false; // nothing to delete or add\n\t\t}\n\n\t\tconst currentWorkspaceFolders: MutableWorkspaceFolder[] = this\n\t\t\t._actualWorkspace\n\t\t\t? this._actualWorkspace.workspaceFolders\n\t\t\t: [];\n\t\tif (index + deleteCount > currentWorkspaceFolders.length) {\n\t\t\treturn false; // cannot delete more than we have\n\t\t}\n\n\t\t// Simulate the updateWorkspaceFolders method on our data to do more validation\n\t\tconst newWorkspaceFolders = currentWorkspaceFolders.slice(0);\n\t\tnewWorkspaceFolders.splice(\n\t\t\tindex,\n\t\t\tdeleteCount,\n\t\t\t...validatedDistinctWorkspaceFoldersToAdd.map((f) => ({\n\t\t\t\turi: f.uri,\n\t\t\t\tname: f.name || basenameOrAuthority(f.uri),\n\t\t\t\tindex: undefined! /* fixed later */,\n\t\t\t})),\n\t\t);\n\n\t\tfor (let i = 0; i < newWorkspaceFolders.length; i++) {\n\t\t\tconst folder = newWorkspaceFolders[i];\n\t\t\tif (\n\t\t\t\tnewWorkspaceFolders.some(\n\t\t\t\t\t(otherFolder, index) =>\n\t\t\t\t\t\tindex !== i &&\n\t\t\t\t\t\tisFolderEqual(\n\t\t\t\t\t\t\tfolder.uri,\n\t\t\t\t\t\t\totherFolder.uri,\n\t\t\t\t\t\t\tthis._extHostFileSystemInfo,\n\t\t\t\t\t\t),\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\treturn false; // cannot add the same folder multiple times\n\t\t\t}\n\t\t}\n\n\t\tnewWorkspaceFolders.forEach((f, index) => (f.index = index)); // fix index\n\t\tconst { added, removed } = delta(\n\t\t\tcurrentWorkspaceFolders,\n\t\t\tnewWorkspaceFolders,\n\t\t\tcompareWorkspaceFolderByUriAndNameAndIndex,\n\t\t\tthis._extHostFileSystemInfo,\n\t\t);\n\t\tif (added.length === 0 && removed.length === 0) {\n\t\t\treturn false; // nothing actually changed\n\t\t}\n\n\t\t// Trigger on main side\n\t\tif (this._proxy) {\n\t\t\tconst extName = extension.displayName || extension.name;\n\t\t\tthis._proxy\n\t\t\t\t.$updateWorkspaceFolders(\n\t\t\t\t\textName,\n\t\t\t\t\tindex,\n\t\t\t\t\tdeleteCount,\n\t\t\t\t\tvalidatedDistinctWorkspaceFoldersToAdd,\n\t\t\t\t)\n\t\t\t\t.then(undefined, (error) => {\n\t\t\t\t\t// in case of an error, make sure to clear out the unconfirmed workspace\n\t\t\t\t\t// because we cannot expect the acknowledgement from the main side for this\n\t\t\t\t\tthis._unconfirmedWorkspace = undefined;\n\n\t\t\t\t\t// show error to user\n\t\t\t\t\tconst options: MainThreadMessageOptions = {\n\t\t\t\t\t\tsource: {\n\t\t\t\t\t\t\tidentifier: extension.identifier,\n\t\t\t\t\t\t\tlabel: extension.displayName || extension.name,\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t\tthis._messageService.$showMessage(\n\t\t\t\t\t\tSeverity.Error,\n\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\"updateerror\",\n\t\t\t\t\t\t\t\"Extension '{0}' failed to update workspace folders: {1}\",\n\t\t\t\t\t\t\textName,\n\t\t\t\t\t\t\terror.toString(),\n\t\t\t\t\t\t),\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\t[],\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t}\n\n\t\t// Try to accept directly\n\t\tthis.trySetWorkspaceFolders(newWorkspaceFolders);\n\n\t\treturn true;\n\t}\n\n\tgetWorkspaceFolder(\n\t\turi: vscode.Uri,\n\t\tresolveParent?: boolean,\n\t): vscode.WorkspaceFolder | undefined {\n\t\tif (!this._actualWorkspace) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this._actualWorkspace.getWorkspaceFolder(uri, resolveParent);\n\t}\n\n\tasync getWorkspaceFolder2(\n\t\turi: vscode.Uri,\n\t\tresolveParent?: boolean,\n\t): Promise<vscode.WorkspaceFolder | undefined> {\n\t\tawait this._barrier.wait();\n\t\tif (!this._actualWorkspace) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this._actualWorkspace.getWorkspaceFolder(uri, resolveParent);\n\t}\n\n\tasync resolveWorkspaceFolder(\n\t\turi: vscode.Uri,\n\t): Promise<vscode.WorkspaceFolder | undefined> {\n\t\tawait this._barrier.wait();\n\t\tif (!this._actualWorkspace) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this._actualWorkspace.resolveWorkspaceFolder(uri);\n\t}\n\n\tgetPath(): string | undefined {\n\t\t// this is legacy from the days before having\n\t\t// multi-root and we keep it only alive if there\n\t\t// is just one workspace folder.\n\t\tif (!this._actualWorkspace) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst { folders } = this._actualWorkspace;\n\t\tif (folders.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\t\t// #54483 @Joh Why are we still using fsPath?\n\t\treturn folders[0].uri.fsPath;\n\t}\n\n\tgetRelativePath(\n\t\tpathOrUri: string | vscode.Uri,\n\t\tincludeWorkspace?: boolean,\n\t): string {\n\t\tlet resource: URI | undefined;\n\t\tlet path = \"\";\n\t\tif (typeof pathOrUri === \"string\") {\n\t\t\tresource = URI.file(pathOrUri);\n\t\t\tpath = pathOrUri;\n\t\t} else if (typeof pathOrUri !== \"undefined\") {\n\t\t\tresource = pathOrUri;\n\t\t\tpath = pathOrUri.fsPath;\n\t\t}\n\n\t\tif (!resource) {\n\t\t\treturn path;\n\t\t}\n\n\t\tconst folder = this.getWorkspaceFolder(resource, true);\n\n\t\tif (!folder) {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (typeof includeWorkspace === \"undefined\" && this._actualWorkspace) {\n\t\t\tincludeWorkspace = this._actualWorkspace.folders.length > 1;\n\t\t}\n\n\t\tlet result = relativePath(folder.uri, resource);\n\t\tif (includeWorkspace && folder.name) {\n\t\t\tresult = `${folder.name}/${result}`;\n\t\t}\n\t\treturn result!;\n\t}\n\n\tprivate trySetWorkspaceFolders(folders: vscode.WorkspaceFolder[]): void {\n\t\t// Update directly here. The workspace is unconfirmed as long as we did not get an\n\t\t// acknowledgement from the main side (via $acceptWorkspaceData)\n\t\tif (this._actualWorkspace) {\n\t\t\tthis._unconfirmedWorkspace =\n\t\t\t\tExtHostWorkspaceImpl.toExtHostWorkspace(\n\t\t\t\t\t{\n\t\t\t\t\t\tid: this._actualWorkspace.id,\n\t\t\t\t\t\tname: this._actualWorkspace.name,\n\t\t\t\t\t\tconfiguration: this._actualWorkspace.configuration,\n\t\t\t\t\t\tfolders,\n\t\t\t\t\t\tisUntitled: this._actualWorkspace.isUntitled,\n\t\t\t\t\t},\n\t\t\t\t\tthis._actualWorkspace,\n\t\t\t\t\tundefined,\n\t\t\t\t\tthis._extHostFileSystemInfo,\n\t\t\t\t).workspace || undefined;\n\t\t}\n\t}\n\n\t$acceptWorkspaceData(data: IWorkspaceData | null): void {\n\t\tconst { workspace, added, removed } =\n\t\t\tExtHostWorkspaceImpl.toExtHostWorkspace(\n\t\t\t\tdata,\n\t\t\t\tthis._confirmedWorkspace,\n\t\t\t\tthis._unconfirmedWorkspace,\n\t\t\t\tthis._extHostFileSystemInfo,\n\t\t\t);\n\n\t\t// Update our workspace object. We have a confirmed workspace, so we drop our\n\t\t// unconfirmed workspace.\n\t\tthis._confirmedWorkspace = workspace || undefined;\n\t\tthis._unconfirmedWorkspace = undefined;\n\n\t\t// Events\n\t\tthis._onDidChangeWorkspace.fire(\n\t\t\tObject.freeze({\n\t\t\t\tadded,\n\t\t\t\tremoved,\n\t\t\t}),\n\t\t);\n\t}\n\n\t// --- search ---\n\n\t/**\n\t * Note, null/undefined have different and important meanings for \"exclude\"\n\t */\n\tfindFiles(\n\t\tinclude: vscode.GlobPattern | undefined,\n\t\texclude: vscode.GlobPattern | null | undefined,\n\t\tmaxResults: number | undefined,\n\t\textensionId: ExtensionIdentifier,\n\t\ttoken: vscode.CancellationToken = CancellationToken.None,\n\t): Promise<vscode.Uri[]> {\n\t\tthis._logService.trace(\n\t\t\t`extHostWorkspace#findFiles: fileSearch, extension: ${extensionId.value}, entryPoint: findFiles`,\n\t\t);\n\n\t\tlet excludeString = \"\";\n\t\tlet useFileExcludes = true;\n\t\tif (exclude === null) {\n\t\t\tuseFileExcludes = false;\n\t\t} else if (exclude !== undefined) {\n\t\t\tif (typeof exclude === \"string\") {\n\t\t\t\texcludeString = exclude;\n\t\t\t} else {\n\t\t\t\texcludeString = exclude.pattern;\n\t\t\t}\n\t\t}\n\n\t\t// todo: consider exclude baseURI if available\n\t\treturn this._findFilesImpl(\n\t\t\tinclude,\n\t\t\tundefined,\n\t\t\t{\n\t\t\t\texclude: [excludeString],\n\t\t\t\tmaxResults,\n\t\t\t\tuseExcludeSettings: useFileExcludes\n\t\t\t\t\t? ExcludeSettingOptions.FilesExclude\n\t\t\t\t\t: ExcludeSettingOptions.None,\n\t\t\t\tuseIgnoreFiles: {\n\t\t\t\t\tlocal: false,\n\t\t\t\t},\n\t\t\t},\n\t\t\ttoken,\n\t\t);\n\t}\n\n\tfindFiles2(\n\t\tfilePattern: vscode.GlobPattern | undefined,\n\t\toptions: vscode.FindFiles2Options = {},\n\t\textensionId: ExtensionIdentifier,\n\t\ttoken: vscode.CancellationToken = CancellationToken.None,\n\t): Promise<vscode.Uri[]> {\n\t\tthis._logService.trace(\n\t\t\t`extHostWorkspace#findFiles2: fileSearch, extension: ${extensionId.value}, entryPoint: findFiles2`,\n\t\t);\n\n\t\tconst useDefaultExcludes = options.useDefaultExcludes ?? true;\n\t\tconst useDefaultSearchExcludes =\n\t\t\toptions.useDefaultSearchExcludes ?? true;\n\t\tconst excludeSetting = useDefaultExcludes\n\t\t\t? useDefaultSearchExcludes\n\t\t\t\t? ExcludeSettingOptions.SearchAndFilesExclude\n\t\t\t\t: ExcludeSettingOptions.FilesExclude\n\t\t\t: ExcludeSettingOptions.None;\n\t\tconst newOptions: vscode.FindFiles2OptionsNew = {\n\t\t\texclude: options.exclude ? [options.exclude] : undefined,\n\t\t\tuseIgnoreFiles: {\n\t\t\t\tlocal: options.useIgnoreFiles,\n\t\t\t\tglobal: options.useGlobalIgnoreFiles,\n\t\t\t\tparent: options.useParentIgnoreFiles,\n\t\t\t},\n\t\t\tuseExcludeSettings: excludeSetting,\n\t\t\tfollowSymlinks: options.followSymlinks,\n\t\t\tmaxResults: options.maxResults,\n\t\t};\n\t\treturn this._findFilesImpl(\n\t\t\tundefined,\n\t\t\tfilePattern !== undefined ? [filePattern] : [],\n\t\t\tnewOptions,\n\t\t\ttoken,\n\t\t);\n\t}\n\n\tfindFiles2New(\n\t\tfilePatterns: vscode.GlobPattern[],\n\t\toptions: vscode.FindFiles2OptionsNew = {},\n\t\textensionId: ExtensionIdentifier,\n\t\ttoken: vscode.CancellationToken = CancellationToken.None,\n\t): Promise<vscode.Uri[]> {\n\t\tthis._logService.trace(\n\t\t\t`extHostWorkspace#findFiles2New: fileSearch, extension: ${extensionId.value}, entryPoint: findFiles2New`,\n\t\t);\n\t\treturn this._findFilesImpl(undefined, filePatterns, options, token);\n\t}\n\n\tprivate async _findFilesImpl(\n\t\t// the old `findFiles` used `include` to query, but the new `findFiles2` uses `filePattern` to query.\n\t\t// `filePattern` is the proper way to handle this, since it takes less precedence than the ignore files.\n\t\tinclude: vscode.GlobPattern | undefined,\n\t\tfilePatterns: vscode.GlobPattern[] | undefined,\n\t\toptions: vscode.FindFiles2OptionsNew,\n\t\ttoken: vscode.CancellationToken = CancellationToken.None,\n\t): Promise<vscode.Uri[]> {\n\t\tif (token && token.isCancellationRequested) {\n\t\t\treturn Promise.resolve([]);\n\t\t}\n\n\t\tconst filePatternsToUse =\n\t\t\tinclude !== undefined ? [include] : filePatterns;\n\t\tconst queryOptions: QueryOptions<IFileQueryBuilderOptions>[] =\n\t\t\tfilePatternsToUse?.map((filePattern) => {\n\t\t\t\tconst excludePatterns = globsToISearchPatternBuilder(\n\t\t\t\t\toptions.exclude,\n\t\t\t\t);\n\n\t\t\t\tconst fileQueries: IFileQueryBuilderOptions = {\n\t\t\t\t\tignoreSymlinks:\n\t\t\t\t\t\ttypeof options.followSymlinks === \"boolean\"\n\t\t\t\t\t\t\t? !options.followSymlinks\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\tdisregardIgnoreFiles:\n\t\t\t\t\t\ttypeof options.useIgnoreFiles?.local === \"boolean\"\n\t\t\t\t\t\t\t? !options.useIgnoreFiles.local\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\tdisregardGlobalIgnoreFiles:\n\t\t\t\t\t\ttypeof options.useIgnoreFiles?.global === \"boolean\"\n\t\t\t\t\t\t\t? !options.useIgnoreFiles.global\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\tdisregardParentIgnoreFiles:\n\t\t\t\t\t\ttypeof options.useIgnoreFiles?.parent === \"boolean\"\n\t\t\t\t\t\t\t? !options.useIgnoreFiles.parent\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\tdisregardExcludeSettings:\n\t\t\t\t\t\toptions.useExcludeSettings !== undefined &&\n\t\t\t\t\t\toptions.useExcludeSettings ===\n\t\t\t\t\t\t\tExcludeSettingOptions.None,\n\t\t\t\t\tdisregardSearchExcludeSettings:\n\t\t\t\t\t\toptions.useExcludeSettings !== undefined &&\n\t\t\t\t\t\toptions.useExcludeSettings !==\n\t\t\t\t\t\t\tExcludeSettingOptions.SearchAndFilesExclude,\n\t\t\t\t\tmaxResults: options.maxResults,\n\t\t\t\t\texcludePattern:\n\t\t\t\t\t\texcludePatterns.length > 0\n\t\t\t\t\t\t\t? excludePatterns\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t_reason: \"startFileSearch\",\n\t\t\t\t\tshouldGlobSearch: include ? undefined : true,\n\t\t\t\t};\n\n\t\t\t\tconst parseInclude = parseSearchExcludeInclude(\n\t\t\t\t\tGlobPattern.from(filePattern),\n\t\t\t\t);\n\t\t\t\tconst folderToUse = parseInclude?.folder;\n\t\t\t\tif (include) {\n\t\t\t\t\tfileQueries.includePattern = parseInclude?.pattern;\n\t\t\t\t} else {\n\t\t\t\t\tfileQueries.filePattern = parseInclude?.pattern;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tfolder: folderToUse,\n\t\t\t\t\toptions: fileQueries,\n\t\t\t\t};\n\t\t\t}) ?? [];\n\n\t\treturn this._findFilesBase(queryOptions, token);\n\t}\n\n\tprivate async _findFilesBase(\n\t\tqueryOptions: QueryOptions<IFileQueryBuilderOptions>[] | undefined,\n\t\ttoken: CancellationToken,\n\t): Promise<vscode.Uri[]> {\n\t\tconst result = await Promise.all(\n\t\t\tqueryOptions?.map((option) =>\n\t\t\t\tthis._proxy\n\t\t\t\t\t.$startFileSearch(\n\t\t\t\t\t\toption.folder ?? null,\n\t\t\t\t\t\toption.options,\n\t\t\t\t\t\ttoken,\n\t\t\t\t\t)\n\t\t\t\t\t.then((data) =>\n\t\t\t\t\t\tArray.isArray(data)\n\t\t\t\t\t\t\t? data.map((d) => URI.revive(d))\n\t\t\t\t\t\t\t: [],\n\t\t\t\t\t),\n\t\t\t) ?? [],\n\t\t);\n\n\t\treturn result.flat();\n\t}\n\n\tfindTextInFilesNew(\n\t\tquery: vscode.TextSearchQueryNew,\n\t\toptions: vscode.FindTextInFilesOptionsNew | undefined,\n\t\textensionId: ExtensionIdentifier,\n\t\ttoken: vscode.CancellationToken = CancellationToken.None,\n\t): vscode.FindTextInFilesResponse {\n\t\tthis._logService.trace(\n\t\t\t`extHostWorkspace#findTextInFilesNew: textSearch, extension: ${extensionId.value}, entryPoint: findTextInFilesNew`,\n\t\t);\n\n\t\tconst getOptions = (\n\t\t\tinclude: vscode.GlobPattern | undefined,\n\t\t): QueryOptions<ITextQueryBuilderOptions> => {\n\t\t\tif (!options) {\n\t\t\t\treturn {\n\t\t\t\t\tfolder: undefined,\n\t\t\t\t\toptions: {},\n\t\t\t\t};\n\t\t\t}\n\t\t\tconst parsedInclude = include\n\t\t\t\t? parseSearchExcludeInclude(GlobPattern.from(include))\n\t\t\t\t: undefined;\n\n\t\t\tconst excludePatterns = options.exclude\n\t\t\t\t? globsToISearchPatternBuilder(options.exclude)\n\t\t\t\t: undefined;\n\n\t\t\treturn {\n\t\t\t\toptions: {\n\t\t\t\t\tignoreSymlinks:\n\t\t\t\t\t\ttypeof options.followSymlinks === \"boolean\"\n\t\t\t\t\t\t\t? !options.followSymlinks\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\tdisregardIgnoreFiles:\n\t\t\t\t\t\ttypeof options.useIgnoreFiles === \"boolean\"\n\t\t\t\t\t\t\t? !options.useIgnoreFiles\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\tdisregardGlobalIgnoreFiles:\n\t\t\t\t\t\ttypeof options.useIgnoreFiles?.global === \"boolean\"\n\t\t\t\t\t\t\t? !options.useIgnoreFiles?.global\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\tdisregardParentIgnoreFiles:\n\t\t\t\t\t\ttypeof options.useIgnoreFiles?.parent === \"boolean\"\n\t\t\t\t\t\t\t? !options.useIgnoreFiles?.parent\n\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\tdisregardExcludeSettings:\n\t\t\t\t\t\toptions.useExcludeSettings !== undefined &&\n\t\t\t\t\t\toptions.useExcludeSettings ===\n\t\t\t\t\t\t\tExcludeSettingOptions.None,\n\t\t\t\t\tdisregardSearchExcludeSettings:\n\t\t\t\t\t\toptions.useExcludeSettings !== undefined &&\n\t\t\t\t\t\toptions.useExcludeSettings !==\n\t\t\t\t\t\t\tExcludeSettingOptions.SearchAndFilesExclude,\n\t\t\t\t\tfileEncoding: options.encoding,\n\t\t\t\t\tmaxResults: options.maxResults,\n\t\t\t\t\tpreviewOptions: options.previewOptions\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\tmatchLines:\n\t\t\t\t\t\t\t\t\toptions.previewOptions?.numMatchLines ??\n\t\t\t\t\t\t\t\t\t100,\n\t\t\t\t\t\t\t\tcharsPerLine:\n\t\t\t\t\t\t\t\t\toptions.previewOptions?.charsPerLine ??\n\t\t\t\t\t\t\t\t\t10000,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t: undefined,\n\t\t\t\t\tsurroundingContext: options.surroundingContext,\n\n\t\t\t\t\tincludePattern: parsedInclude?.pattern,\n\t\t\t\t\texcludePattern: excludePatterns,\n\t\t\t\t} satisfies ITextQueryBuilderOptions,\n\t\t\t\tfolder: parsedInclude?.folder,\n\t\t\t} satisfies QueryOptions<ITextQueryBuilderOptions>;\n\t\t};\n\n\t\tconst queryOptionsRaw: (\n\t\t\t| QueryOptions<ITextQueryBuilderOptions>\n\t\t\t| undefined\n\t\t)[] = options?.include?.map((include) => getOptions(include)) ?? [\n\t\t\tgetOptions(undefined),\n\t\t];\n\n\t\tconst queryOptions = queryOptionsRaw.filter(\n\t\t\t(queryOps): queryOps is QueryOptions<ITextQueryBuilderOptions> =>\n\t\t\t\t!!queryOps,\n\t\t);\n\n\t\tconst disposables = new DisposableStore();\n\t\tconst progressEmitter = disposables.add(\n\t\t\tnew Emitter<{ result: ITextSearchResult<URI>; uri: URI }>(),\n\t\t);\n\t\tconst complete = this.findTextInFilesBase(\n\t\t\tquery,\n\t\t\tqueryOptions,\n\t\t\t(result, uri) => progressEmitter.fire({ result, uri }),\n\t\t\ttoken,\n\t\t);\n\t\tconst asyncIterable =\n\t\t\tnew AsyncIterableObject<vscode.TextSearchResultNew>(\n\t\t\t\tasync (emitter) => {\n\t\t\t\t\tdisposables.add(\n\t\t\t\t\t\tprogressEmitter.event((e) => {\n\t\t\t\t\t\t\tconst result = e.result;\n\t\t\t\t\t\t\tconst uri = e.uri;\n\t\t\t\t\t\t\tif (resultIsMatch(result)) {\n\t\t\t\t\t\t\t\temitter.emitOne(\n\t\t\t\t\t\t\t\t\tnew TextSearchMatchNew(\n\t\t\t\t\t\t\t\t\t\turi,\n\t\t\t\t\t\t\t\t\t\tresult.rangeLocations.map((range) => ({\n\t\t\t\t\t\t\t\t\t\t\tpreviewRange: new Range(\n\t\t\t\t\t\t\t\t\t\t\t\trange.preview.startLineNumber,\n\t\t\t\t\t\t\t\t\t\t\t\trange.preview.startColumn,\n\t\t\t\t\t\t\t\t\t\t\t\trange.preview.endLineNumber,\n\t\t\t\t\t\t\t\t\t\t\t\trange.preview.endColumn,\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\tsourceRange: new Range(\n\t\t\t\t\t\t\t\t\t\t\t\trange.source.startLineNumber,\n\t\t\t\t\t\t\t\t\t\t\t\trange.source.startColumn,\n\t\t\t\t\t\t\t\t\t\t\t\trange.source.endLineNumber,\n\t\t\t\t\t\t\t\t\t\t\t\trange.source.endColumn,\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t\t\t\tresult.previewText,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\temitter.emitOne(\n\t\t\t\t\t\t\t\t\tnew TextSearchContextNew(\n\t\t\t\t\t\t\t\t\t\turi,\n\t\t\t\t\t\t\t\t\t\tresult.text,\n\t\t\t\t\t\t\t\t\t\tresult.lineNumber,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t\tawait complete;\n\t\t\t\t},\n\t\t\t);\n\n\t\treturn {\n\t\t\tresults: asyncIterable,\n\t\t\tcomplete: complete.then((e) => {\n\t\t\t\tdisposables.dispose();\n\t\t\t\treturn {\n\t\t\t\t\tlimitHit: e?.limitHit ?? false,\n\t\t\t\t};\n\t\t\t}),\n\t\t};\n\t}\n\n\tasync findTextInFilesBase(\n\t\tquery: vscode.TextSearchQuery,\n\t\tqueryOptions: QueryOptions<ITextQueryBuilderOptions>[] | undefined,\n\t\tcallback: (result: ITextSearchResult<URI>, uri: URI) => void,\n\t\ttoken: vscode.CancellationToken = CancellationToken.None,\n\t): Promise<vscode.TextSearchComplete> {\n\t\tconst requestId = this._requestIdProvider.getNext();\n\n\t\tlet isCanceled = false;\n\t\ttoken.onCancellationRequested((_) => {\n\t\t\tisCanceled = true;\n\t\t});\n\n\t\tthis._activeSearchCallbacks[requestId] = (p) => {\n\t\t\tif (isCanceled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst uri = URI.revive(p.resource);\n\t\t\tp.results!.forEach((rawResult) => {\n\t\t\t\tconst result: ITextSearchResult<URI> = revive(rawResult);\n\t\t\t\tcallback(result, uri);\n\t\t\t});\n\t\t};\n\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn {};\n\t\t}\n\n\t\ttry {\n\t\t\tconst result = await Promise.all(\n\t\t\t\tqueryOptions?.map(\n\t\t\t\t\t(option) =>\n\t\t\t\t\t\tthis._proxy.$startTextSearch(\n\t\t\t\t\t\t\tquery,\n\t\t\t\t\t\t\toption.folder ?? null,\n\t\t\t\t\t\t\toption.options,\n\t\t\t\t\t\t\trequestId,\n\t\t\t\t\t\t\ttoken,\n\t\t\t\t\t\t) || {},\n\t\t\t\t) ?? [],\n\t\t\t);\n\t\t\tdelete this._activeSearchCallbacks[requestId];\n\t\t\treturn (\n\t\t\t\tresult.reduce((acc, val) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tlimitHit: acc?.limitHit || (val?.limitHit ?? false),\n\t\t\t\t\t\tmessage: [\n\t\t\t\t\t\t\tacc?.message ?? [],\n\t\t\t\t\t\t\tval?.message ?? [],\n\t\t\t\t\t\t].flat(),\n\t\t\t\t\t};\n\t\t\t\t}, {}) ?? { limitHit: false }\n\t\t\t);\n\t\t} catch (err) {\n\t\t\tdelete this._activeSearchCallbacks[requestId];\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\tasync findTextInFiles(\n\t\tquery: vscode.TextSearchQuery,\n\t\toptions: vscode.FindTextInFilesOptions & { useSearchExclude?: boolean },\n\t\tcallback: (result: vscode.TextSearchResult) => void,\n\t\textensionId: ExtensionIdentifier,\n\t\ttoken: vscode.CancellationToken = CancellationToken.None,\n\t): Promise<vscode.TextSearchComplete> {\n\t\tthis._logService.trace(\n\t\t\t`extHostWorkspace#findTextInFiles: textSearch, extension: ${extensionId.value}, entryPoint: findTextInFiles`,\n\t\t);\n\n\t\tconst previewOptions: vscode.TextSearchPreviewOptions =\n\t\t\ttypeof options.previewOptions === \"undefined\"\n\t\t\t\t? {\n\t\t\t\t\t\tmatchLines: 100,\n\t\t\t\t\t\tcharsPerLine: 10000,\n\t\t\t\t\t}\n\t\t\t\t: options.previewOptions;\n\n\t\tconst parsedInclude = parseSearchExcludeInclude(\n\t\t\tGlobPattern.from(options.include),\n\t\t);\n\n\t\tconst excludePattern =\n\t\t\ttypeof options.exclude === \"string\"\n\t\t\t\t? options.exclude\n\t\t\t\t: options.exclude\n\t\t\t\t\t? options.exclude.pattern\n\t\t\t\t\t: undefined;\n\t\tconst queryOptions: ITextQueryBuilderOptions = {\n\t\t\tignoreSymlinks:\n\t\t\t\ttypeof options.followSymlinks === \"boolean\"\n\t\t\t\t\t? !options.followSymlinks\n\t\t\t\t\t: undefined,\n\t\t\tdisregardIgnoreFiles:\n\t\t\t\ttypeof options.useIgnoreFiles === \"boolean\"\n\t\t\t\t\t? !options.useIgnoreFiles\n\t\t\t\t\t: undefined,\n\t\t\tdisregardGlobalIgnoreFiles:\n\t\t\t\ttypeof options.useGlobalIgnoreFiles === \"boolean\"\n\t\t\t\t\t? !options.useGlobalIgnoreFiles\n\t\t\t\t\t: undefined,\n\t\t\tdisregardParentIgnoreFiles:\n\t\t\t\ttypeof options.useParentIgnoreFiles === \"boolean\"\n\t\t\t\t\t? !options.useParentIgnoreFiles\n\t\t\t\t\t: undefined,\n\t\t\tdisregardExcludeSettings:\n\t\t\t\ttypeof options.useDefaultExcludes === \"boolean\"\n\t\t\t\t\t? !options.useDefaultExcludes\n\t\t\t\t\t: true,\n\t\t\tdisregardSearchExcludeSettings:\n\t\t\t\ttypeof options.useSearchExclude === \"boolean\"\n\t\t\t\t\t? !options.useSearchExclude\n\t\t\t\t\t: true,\n\t\t\tfileEncoding: options.encoding,\n\t\t\tmaxResults: options.maxResults,\n\t\t\tpreviewOptions,\n\t\t\tsurroundingContext: options.afterContext, // TODO: remove ability to have before/after context separately\n\n\t\t\tincludePattern: parsedInclude?.pattern,\n\t\t\texcludePattern: excludePattern\n\t\t\t\t? [{ pattern: excludePattern }]\n\t\t\t\t: undefined,\n\t\t};\n\n\t\tconst progress = (result: ITextSearchResult<URI>, uri: URI) => {\n\t\t\tif (resultIsMatch(result)) {\n\t\t\t\tcallback({\n\t\t\t\t\turi,\n\t\t\t\t\tpreview: {\n\t\t\t\t\t\ttext: result.previewText,\n\t\t\t\t\t\tmatches: mapArrayOrNot(\n\t\t\t\t\t\t\tresult.rangeLocations,\n\t\t\t\t\t\t\t(m) =>\n\t\t\t\t\t\t\t\tnew Range(\n\t\t\t\t\t\t\t\t\tm.preview.startLineNumber,\n\t\t\t\t\t\t\t\t\tm.preview.startColumn,\n\t\t\t\t\t\t\t\t\tm.preview.endLineNumber,\n\t\t\t\t\t\t\t\t\tm.preview.endColumn,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t\tranges: mapArrayOrNot(\n\t\t\t\t\t\tresult.rangeLocations,\n\t\t\t\t\t\t(r) =>\n\t\t\t\t\t\t\tnew Range(\n\t\t\t\t\t\t\t\tr.source.startLineNumber,\n\t\t\t\t\t\t\t\tr.source.startColumn,\n\t\t\t\t\t\t\t\tr.source.endLineNumber,\n\t\t\t\t\t\t\t\tr.source.endColumn,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t} satisfies vscode.TextSearchMatch);\n\t\t\t} else {\n\t\t\t\tcallback({\n\t\t\t\t\turi,\n\t\t\t\t\ttext: result.text,\n\t\t\t\t\tlineNumber: result.lineNumber,\n\t\t\t\t} satisfies vscode.TextSearchContext);\n\t\t\t}\n\t\t};\n\n\t\treturn this.findTextInFilesBase(\n\t\t\tquery,\n\t\t\t[{ options: queryOptions, folder: parsedInclude?.folder }],\n\t\t\tprogress,\n\t\t\ttoken,\n\t\t);\n\t}\n\n\t$handleTextSearchResult(result: IRawFileMatch2, requestId: number): void {\n\t\tthis._activeSearchCallbacks[requestId]?.(result);\n\t}\n\n\tasync save(uri: URI): Promise<URI | undefined> {\n\t\tconst result = await this._proxy.$save(uri, { saveAs: false });\n\n\t\treturn URI.revive(result);\n\t}\n\n\tasync saveAs(uri: URI): Promise<URI | undefined> {\n\t\tconst result = await this._proxy.$save(uri, { saveAs: true });\n\n\t\treturn URI.revive(result);\n\t}\n\n\tsaveAll(includeUntitled?: boolean): Promise<boolean> {\n\t\treturn this._proxy.$saveAll(includeUntitled);\n\t}\n\n\tresolveProxy(url: string): Promise<string | undefined> {\n\t\treturn this._proxy.$resolveProxy(url);\n\t}\n\n\tlookupAuthorization(authInfo: AuthInfo): Promise<Credentials | undefined> {\n\t\treturn this._proxy.$lookupAuthorization(authInfo);\n\t}\n\n\tlookupKerberosAuthorization(url: string): Promise<string | undefined> {\n\t\treturn this._proxy.$lookupKerberosAuthorization(url);\n\t}\n\n\tloadCertificates(): Promise<string[]> {\n\t\treturn this._proxy.$loadCertificates();\n\t}\n\n\t// --- trust ---\n\n\tget trusted(): boolean {\n\t\treturn this._trusted;\n\t}\n\n\trequestWorkspaceTrust(\n\t\toptions?: vscode.WorkspaceTrustRequestOptions,\n\t): Promise<boolean | undefined> {\n\t\treturn this._proxy.$requestWorkspaceTrust(options);\n\t}\n\n\t$onDidGrantWorkspaceTrust(): void {\n\t\tif (!this._trusted) {\n\t\t\tthis._trusted = true;\n\t\t\tthis._onDidGrantWorkspaceTrust.fire();\n\t\t}\n\t}\n\n\t// --- edit sessions ---\n\n\tprivate _providerHandlePool = 0;\n\n\t// called by ext host\n\tregisterEditSessionIdentityProvider(\n\t\tscheme: string,\n\t\tprovider: vscode.EditSessionIdentityProvider,\n\t) {\n\t\tif (this._editSessionIdentityProviders.has(scheme)) {\n\t\t\tthrow new Error(\n\t\t\t\t`A provider has already been registered for scheme ${scheme}`,\n\t\t\t);\n\t\t}\n\n\t\tthis._editSessionIdentityProviders.set(scheme, provider);\n\t\tconst outgoingScheme =\n\t\t\tthis._uriTransformerService.transformOutgoingScheme(scheme);\n\t\tconst handle = this._providerHandlePool++;\n\t\tthis._proxy.$registerEditSessionIdentityProvider(\n\t\t\thandle,\n\t\t\toutgoingScheme,\n\t\t);\n\n\t\treturn toDisposable(() => {\n\t\t\tthis._editSessionIdentityProviders.delete(scheme);\n\t\t\tthis._proxy.$unregisterEditSessionIdentityProvider(handle);\n\t\t});\n\t}\n\n\t// called by main thread\n\tasync $getEditSessionIdentifier(\n\t\tworkspaceFolder: UriComponents,\n\t\tcancellationToken: CancellationToken,\n\t): Promise<string | undefined> {\n\t\tthis._logService.info(\n\t\t\t\"Getting edit session identifier for workspaceFolder\",\n\t\t\tworkspaceFolder,\n\t\t);\n\t\tconst folder = await this.resolveWorkspaceFolder(\n\t\t\tURI.revive(workspaceFolder),\n\t\t);\n\t\tif (!folder) {\n\t\t\tthis._logService.warn(\"Unable to resolve workspace folder\");\n\t\t\treturn undefined;\n\t\t}\n\n\t\tthis._logService.info(\n\t\t\t\"Invoking #provideEditSessionIdentity for workspaceFolder\",\n\t\t\tfolder,\n\t\t);\n\n\t\tconst provider = this._editSessionIdentityProviders.get(\n\t\t\tfolder.uri.scheme,\n\t\t);\n\t\tthis._logService.info(\n\t\t\t`Provider for scheme ${folder.uri.scheme} is defined: `,\n\t\t\t!!provider,\n\t\t);\n\t\tif (!provider) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst result = await provider.provideEditSessionIdentity(\n\t\t\tfolder,\n\t\t\tcancellationToken,\n\t\t);\n\t\tthis._logService.info(\n\t\t\t\"Provider returned edit session identifier: \",\n\t\t\tresult,\n\t\t);\n\t\tif (!result) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tasync $provideEditSessionIdentityMatch(\n\t\tworkspaceFolder: UriComponents,\n\t\tidentity1: string,\n\t\tidentity2: string,\n\t\tcancellationToken: CancellationToken,\n\t): Promise<EditSessionIdentityMatch | undefined> {\n\t\tthis._logService.info(\n\t\t\t\"Getting edit session identifier for workspaceFolder\",\n\t\t\tworkspaceFolder,\n\t\t);\n\t\tconst folder = await this.resolveWorkspaceFolder(\n\t\t\tURI.revive(workspaceFolder),\n\t\t);\n\t\tif (!folder) {\n\t\t\tthis._logService.warn(\"Unable to resolve workspace folder\");\n\t\t\treturn undefined;\n\t\t}\n\n\t\tthis._logService.info(\n\t\t\t\"Invoking #provideEditSessionIdentity for workspaceFolder\",\n\t\t\tfolder,\n\t\t);\n\n\t\tconst provider = this._editSessionIdentityProviders.get(\n\t\t\tfolder.uri.scheme,\n\t\t);\n\t\tthis._logService.info(\n\t\t\t`Provider for scheme ${folder.uri.scheme} is defined: `,\n\t\t\t!!provider,\n\t\t);\n\t\tif (!provider) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst result = await provider.provideEditSessionIdentityMatch?.(\n\t\t\tidentity1,\n\t\t\tidentity2,\n\t\t\tcancellationToken,\n\t\t);\n\t\tthis._logService.info(\n\t\t\t\"Provider returned edit session identifier match result: \",\n\t\t\tresult,\n\t\t);\n\t\tif (!result) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate readonly _onWillCreateEditSessionIdentityEvent =\n\t\tnew AsyncEmitter<vscode.EditSessionIdentityWillCreateEvent>();\n\n\tgetOnWillCreateEditSessionIdentityEvent(\n\t\textension: IExtensionDescription,\n\t): Event<vscode.EditSessionIdentityWillCreateEvent> {\n\t\treturn (listener, thisArg, disposables) => {\n\t\t\tconst wrappedListener: IExtensionListener<vscode.EditSessionIdentityWillCreateEvent> =\n\t\t\t\tfunction wrapped(e) {\n\t\t\t\t\tlistener.call(thisArg, e);\n\t\t\t\t};\n\t\t\twrappedListener.extension = extension;\n\t\t\treturn this._onWillCreateEditSessionIdentityEvent.event(\n\t\t\t\twrappedListener,\n\t\t\t\tundefined,\n\t\t\t\tdisposables,\n\t\t\t);\n\t\t};\n\t}\n\n\t// main thread calls this to trigger participants\n\tasync $onWillCreateEditSessionIdentity(\n\t\tworkspaceFolder: UriComponents,\n\t\ttoken: CancellationToken,\n\t\ttimeout: number,\n\t): Promise<void> {\n\t\tconst folder = await this.resolveWorkspaceFolder(\n\t\t\tURI.revive(workspaceFolder),\n\t\t);\n\n\t\tif (folder === undefined) {\n\t\t\tthrow new Error(\"Unable to resolve workspace folder\");\n\t\t}\n\n\t\tawait this._onWillCreateEditSessionIdentityEvent.fireAsync(\n\t\t\t{ workspaceFolder: folder },\n\t\t\ttoken,\n\t\t\tasync (thenable: Promise<unknown>, listener) => {\n\t\t\t\tconst now = Date.now();\n\t\t\t\tawait Promise.resolve(thenable);\n\t\t\t\tif (Date.now() - now > timeout) {\n\t\t\t\t\tthis._logService.warn(\n\t\t\t\t\t\t\"SLOW edit session create-participant\",\n\t\t\t\t\t\t(<\n\t\t\t\t\t\t\tIExtensionListener<vscode.EditSessionIdentityWillCreateEvent>\n\t\t\t\t\t\t>listener).extension.identifier,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\t// --- canonical uri identity ---\n\n\tprivate readonly _canonicalUriProviders = new Map<\n\t\tstring,\n\t\tvscode.CanonicalUriProvider\n\t>();\n\n\t// called by ext host\n\tregisterCanonicalUriProvider(\n\t\tscheme: string,\n\t\tprovider: vscode.CanonicalUriProvider,\n\t) {\n\t\tif (this._canonicalUriProviders.has(scheme)) {\n\t\t\tthrow new Error(\n\t\t\t\t`A provider has already been registered for scheme ${scheme}`,\n\t\t\t);\n\t\t}\n\n\t\tthis._canonicalUriProviders.set(scheme, provider);\n\t\tconst outgoingScheme =\n\t\t\tthis._uriTransformerService.transformOutgoingScheme(scheme);\n\t\tconst handle = this._providerHandlePool++;\n\t\tthis._proxy.$registerCanonicalUriProvider(handle, outgoingScheme);\n\n\t\treturn toDisposable(() => {\n\t\t\tthis._canonicalUriProviders.delete(scheme);\n\t\t\tthis._proxy.$unregisterCanonicalUriProvider(handle);\n\t\t});\n\t}\n\n\tasync provideCanonicalUri(\n\t\turi: URI,\n\t\toptions: vscode.CanonicalUriRequestOptions,\n\t\tcancellationToken: CancellationToken,\n\t): Promise<URI | undefined> {\n\t\tconst provider = this._canonicalUriProviders.get(uri.scheme);\n\t\tif (!provider) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst result = await provider.provideCanonicalUri?.(\n\t\t\tURI.revive(uri),\n\t\t\toptions,\n\t\t\tcancellationToken,\n\t\t);\n\t\tif (!result) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t// called by main thread\n\tasync $provideCanonicalUri(\n\t\turi: UriComponents,\n\t\ttargetScheme: string,\n\t\tcancellationToken: CancellationToken,\n\t): Promise<UriComponents | undefined> {\n\t\treturn this.provideCanonicalUri(\n\t\t\tURI.revive(uri),\n\t\t\t{ targetScheme },\n\t\t\tcancellationToken,\n\t\t);\n\t}\n}\n\nexport const IExtHostWorkspace =\n\tcreateDecorator<IExtHostWorkspace>(\"IExtHostWorkspace\");\nexport interface IExtHostWorkspace\n\textends ExtHostWorkspace,\n\t\tExtHostWorkspaceShape,\n\t\tIExtHostWorkspaceProvider {}\n\nfunction parseSearchExcludeInclude(\n\tinclude: string | IRelativePatternDto | undefined | null,\n): { pattern: string; folder?: URI } | undefined {\n\tlet pattern: string | undefined;\n\tlet includeFolder: URI | undefined;\n\tif (include) {\n\t\tif (typeof include === \"string\") {\n\t\t\tpattern = include;\n\t\t} else {\n\t\t\tpattern = include.pattern;\n\t\t\tincludeFolder = URI.revive(include.baseUri);\n\t\t}\n\n\t\treturn {\n\t\t\tpattern,\n\t\t\tfolder: includeFolder,\n\t\t};\n\t}\n\treturn undefined;\n}\n\ninterface IExtensionListener<E> {\n\textension: IExtensionDescription;\n\t(e: E): any;\n}\n\nfunction globsToISearchPatternBuilder(\n\texcludes: vscode.GlobPattern[] | undefined,\n): ISearchPatternBuilder<URI>[] {\n\treturn (\n\t\texcludes?.map((exclude): ISearchPatternBuilder<URI> | undefined => {\n\t\t\tif (typeof exclude === \"string\") {\n\t\t\t\tif (exclude === \"\") {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tpattern: exclude,\n\t\t\t\t\turi: undefined,\n\t\t\t\t} satisfies ISearchPatternBuilder<URI>;\n\t\t\t} else {\n\t\t\t\tconst parsedExclude = parseSearchExcludeInclude(exclude);\n\t\t\t\tif (!parsedExclude) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tpattern: parsedExclude.pattern,\n\t\t\t\t\turi: parsedExclude.folder,\n\t\t\t\t} satisfies ISearchPatternBuilder<URI>;\n\t\t\t}\n\t\t}) ?? []\n\t).filter((e): e is ISearchPatternBuilder<URI> => !!e);\n}\n"],
  "mappings": "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",
  "names": ["compare", "ignorePathCasing", "name", "index"]
}
