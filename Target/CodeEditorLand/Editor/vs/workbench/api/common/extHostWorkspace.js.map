{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostWorkspace.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { delta as arrayDelta, mapArrayOrNot } from '../../../base/common/arrays.js';\nimport { AsyncIterableObject, Barrier } from '../../../base/common/async.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { AsyncEmitter, Emitter, Event } from '../../../base/common/event.js';\nimport { DisposableStore, toDisposable } from '../../../base/common/lifecycle.js';\nimport { TernarySearchTree } from '../../../base/common/ternarySearchTree.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { Counter } from '../../../base/common/numbers.js';\nimport { basename, basenameOrAuthority, dirname, ExtUri, relativePath } from '../../../base/common/resources.js';\nimport { compare } from '../../../base/common/strings.js';\nimport { URI, UriComponents } from '../../../base/common/uri.js';\nimport { localize } from '../../../nls.js';\nimport { ExtensionIdentifier, IExtensionDescription } from '../../../platform/extensions/common/extensions.js';\nimport { FileSystemProviderCapabilities } from '../../../platform/files/common/files.js';\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { Severity } from '../../../platform/notification/common/notification.js';\nimport { EditSessionIdentityMatch } from '../../../platform/workspace/common/editSessions.js';\nimport { Workspace, WorkspaceFolder } from '../../../platform/workspace/common/workspace.js';\nimport { IExtHostFileSystemInfo } from './extHostFileSystemInfo.js';\nimport { IExtHostInitDataService } from './extHostInitDataService.js';\nimport { IExtHostRpcService } from './extHostRpcService.js';\nimport { GlobPattern } from './extHostTypeConverters.js';\nimport { Range } from './extHostTypes.js';\nimport { IURITransformerService } from './extHostUriTransformerService.js';\nimport { IFileQueryBuilderOptions, ISearchPatternBuilder, ITextQueryBuilderOptions } from '../../services/search/common/queryBuilder.js';\nimport { IRawFileMatch2, ITextSearchResult, resultIsMatch } from '../../services/search/common/search.js';\nimport type * as vscode from 'vscode';\nimport { ExtHostWorkspaceShape, IRelativePatternDto, IWorkspaceData, MainContext, MainThreadMessageOptions, MainThreadMessageServiceShape, MainThreadWorkspaceShape } from './extHost.protocol.js';\nimport { revive } from '../../../base/common/marshalling.js';\nimport { AuthInfo, Credentials } from '../../../platform/request/common/request.js';\nimport { ExcludeSettingOptions, TextSearchContextNew, TextSearchMatchNew } from '../../services/search/common/searchExtTypes.js';\n\nexport interface IExtHostWorkspaceProvider {\n\tgetWorkspaceFolder2(uri: vscode.Uri, resolveParent?: boolean): Promise<vscode.WorkspaceFolder | undefined>;\n\tresolveWorkspaceFolder(uri: vscode.Uri): Promise<vscode.WorkspaceFolder | undefined>;\n\tgetWorkspaceFolders2(): Promise<vscode.WorkspaceFolder[] | undefined>;\n\tresolveProxy(url: string): Promise<string | undefined>;\n\tlookupAuthorization(authInfo: AuthInfo): Promise<Credentials | undefined>;\n\tlookupKerberosAuthorization(url: string): Promise<string | undefined>;\n\tloadCertificates(): Promise<string[]>;\n}\n\nfunction isFolderEqual(folderA: URI, folderB: URI, extHostFileSystemInfo: IExtHostFileSystemInfo): boolean {\n\treturn new ExtUri(uri => ignorePathCasing(uri, extHostFileSystemInfo)).isEqual(folderA, folderB);\n}\n\nfunction compareWorkspaceFolderByUri(a: vscode.WorkspaceFolder, b: vscode.WorkspaceFolder, extHostFileSystemInfo: IExtHostFileSystemInfo): number {\n\treturn isFolderEqual(a.uri, b.uri, extHostFileSystemInfo) ? 0 : compare(a.uri.toString(), b.uri.toString());\n}\n\nfunction compareWorkspaceFolderByUriAndNameAndIndex(a: vscode.WorkspaceFolder, b: vscode.WorkspaceFolder, extHostFileSystemInfo: IExtHostFileSystemInfo): number {\n\tif (a.index !== b.index) {\n\t\treturn a.index < b.index ? -1 : 1;\n\t}\n\n\treturn isFolderEqual(a.uri, b.uri, extHostFileSystemInfo) ? compare(a.name, b.name) : compare(a.uri.toString(), b.uri.toString());\n}\n\nfunction delta(oldFolders: vscode.WorkspaceFolder[], newFolders: vscode.WorkspaceFolder[], compare: (a: vscode.WorkspaceFolder, b: vscode.WorkspaceFolder, extHostFileSystemInfo: IExtHostFileSystemInfo) => number, extHostFileSystemInfo: IExtHostFileSystemInfo): { removed: vscode.WorkspaceFolder[]; added: vscode.WorkspaceFolder[] } {\n\tconst oldSortedFolders = oldFolders.slice(0).sort((a, b) => compare(a, b, extHostFileSystemInfo));\n\tconst newSortedFolders = newFolders.slice(0).sort((a, b) => compare(a, b, extHostFileSystemInfo));\n\n\treturn arrayDelta(oldSortedFolders, newSortedFolders, (a, b) => compare(a, b, extHostFileSystemInfo));\n}\n\nfunction ignorePathCasing(uri: URI, extHostFileSystemInfo: IExtHostFileSystemInfo): boolean {\n\tconst capabilities = extHostFileSystemInfo.getCapabilities(uri.scheme);\n\treturn !(capabilities && (capabilities & FileSystemProviderCapabilities.PathCaseSensitive));\n}\n\ninterface MutableWorkspaceFolder extends vscode.WorkspaceFolder {\n\tname: string;\n\tindex: number;\n}\n\ninterface QueryOptions<T> {\n\toptions: T;\n\tfolder: URI | undefined;\n}\n\nclass ExtHostWorkspaceImpl extends Workspace {\n\n\tstatic toExtHostWorkspace(data: IWorkspaceData | null, previousConfirmedWorkspace: ExtHostWorkspaceImpl | undefined, previousUnconfirmedWorkspace: ExtHostWorkspaceImpl | undefined, extHostFileSystemInfo: IExtHostFileSystemInfo): { workspace: ExtHostWorkspaceImpl | null; added: vscode.WorkspaceFolder[]; removed: vscode.WorkspaceFolder[] } {\n\t\tif (!data) {\n\t\t\treturn { workspace: null, added: [], removed: [] };\n\t\t}\n\n\t\tconst { id, name, folders, configuration, transient, isUntitled } = data;\n\t\tconst newWorkspaceFolders: vscode.WorkspaceFolder[] = [];\n\n\t\t// If we have an existing workspace, we try to find the folders that match our\n\t\t// data and update their properties. It could be that an extension stored them\n\t\t// for later use and we want to keep them \"live\" if they are still present.\n\t\tconst oldWorkspace = previousConfirmedWorkspace;\n\t\tif (previousConfirmedWorkspace) {\n\t\t\tfolders.forEach((folderData, index) => {\n\t\t\t\tconst folderUri = URI.revive(folderData.uri);\n\t\t\t\tconst existingFolder = ExtHostWorkspaceImpl._findFolder(previousUnconfirmedWorkspace || previousConfirmedWorkspace, folderUri, extHostFileSystemInfo);\n\n\t\t\t\tif (existingFolder) {\n\t\t\t\t\texistingFolder.name = folderData.name;\n\t\t\t\t\texistingFolder.index = folderData.index;\n\n\t\t\t\t\tnewWorkspaceFolders.push(existingFolder);\n\t\t\t\t} else {\n\t\t\t\t\tnewWorkspaceFolders.push({ uri: folderUri, name: folderData.name, index });\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tnewWorkspaceFolders.push(...folders.map(({ uri, name, index }) => ({ uri: URI.revive(uri), name, index })));\n\t\t}\n\n\t\t// make sure to restore sort order based on index\n\t\tnewWorkspaceFolders.sort((f1, f2) => f1.index < f2.index ? -1 : 1);\n\n\t\tconst workspace = new ExtHostWorkspaceImpl(id, name, newWorkspaceFolders, !!transient, configuration ? URI.revive(configuration) : null, !!isUntitled, uri => ignorePathCasing(uri, extHostFileSystemInfo));\n\t\tconst { added, removed } = delta(oldWorkspace ? oldWorkspace.workspaceFolders : [], workspace.workspaceFolders, compareWorkspaceFolderByUri, extHostFileSystemInfo);\n\n\t\treturn { workspace, added, removed };\n\t}\n\n\tprivate static _findFolder(workspace: ExtHostWorkspaceImpl, folderUriToFind: URI, extHostFileSystemInfo: IExtHostFileSystemInfo): MutableWorkspaceFolder | undefined {\n\t\tfor (let i = 0; i < workspace.folders.length; i++) {\n\t\t\tconst folder = workspace.workspaceFolders[i];\n\t\t\tif (isFolderEqual(folder.uri, folderUriToFind, extHostFileSystemInfo)) {\n\t\t\t\treturn folder;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate readonly _workspaceFolders: vscode.WorkspaceFolder[] = [];\n\tprivate readonly _structure: TernarySearchTree<URI, vscode.WorkspaceFolder>;\n\n\tconstructor(id: string, private _name: string, folders: vscode.WorkspaceFolder[], transient: boolean, configuration: URI | null, private _isUntitled: boolean, ignorePathCasing: (key: URI) => boolean) {\n\t\tsuper(id, folders.map(f => new WorkspaceFolder(f)), transient, configuration, ignorePathCasing);\n\t\tthis._structure = TernarySearchTree.forUris<vscode.WorkspaceFolder>(ignorePathCasing, () => true);\n\n\t\t// setup the workspace folder data structure\n\t\tfolders.forEach(folder => {\n\t\t\tthis._workspaceFolders.push(folder);\n\t\t\tthis._structure.set(folder.uri, folder);\n\t\t});\n\t}\n\n\tget name(): string {\n\t\treturn this._name;\n\t}\n\n\tget isUntitled(): boolean {\n\t\treturn this._isUntitled;\n\t}\n\n\tget workspaceFolders(): vscode.WorkspaceFolder[] {\n\t\treturn this._workspaceFolders.slice(0);\n\t}\n\n\tgetWorkspaceFolder(uri: URI, resolveParent?: boolean): vscode.WorkspaceFolder | undefined {\n\t\tif (resolveParent && this._structure.get(uri)) {\n\t\t\t// `uri` is a workspace folder so we check for its parent\n\t\t\turi = dirname(uri);\n\t\t}\n\t\treturn this._structure.findSubstr(uri);\n\t}\n\n\tresolveWorkspaceFolder(uri: URI): vscode.WorkspaceFolder | undefined {\n\t\treturn this._structure.get(uri);\n\t}\n}\n\nexport class ExtHostWorkspace implements ExtHostWorkspaceShape, IExtHostWorkspaceProvider {\n\n\treadonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidChangeWorkspace = new Emitter<vscode.WorkspaceFoldersChangeEvent>();\n\treadonly onDidChangeWorkspace: Event<vscode.WorkspaceFoldersChangeEvent> = this._onDidChangeWorkspace.event;\n\n\tprivate readonly _onDidGrantWorkspaceTrust = new Emitter<void>();\n\treadonly onDidGrantWorkspaceTrust: Event<void> = this._onDidGrantWorkspaceTrust.event;\n\n\tprivate readonly _logService: ILogService;\n\tprivate readonly _requestIdProvider: Counter;\n\tprivate readonly _barrier: Barrier;\n\n\tprivate _confirmedWorkspace?: ExtHostWorkspaceImpl;\n\tprivate _unconfirmedWorkspace?: ExtHostWorkspaceImpl;\n\n\tprivate readonly _proxy: MainThreadWorkspaceShape;\n\tprivate readonly _messageService: MainThreadMessageServiceShape;\n\tprivate readonly _extHostFileSystemInfo: IExtHostFileSystemInfo;\n\tprivate readonly _uriTransformerService: IURITransformerService;\n\n\tprivate readonly _activeSearchCallbacks: ((match: IRawFileMatch2) => any)[] = [];\n\n\tprivate _trusted: boolean = false;\n\n\tprivate readonly _editSessionIdentityProviders = new Map<string, vscode.EditSessionIdentityProvider>();\n\n\tconstructor(\n\t\t@IExtHostRpcService extHostRpc: IExtHostRpcService,\n\t\t@IExtHostInitDataService initData: IExtHostInitDataService,\n\t\t@IExtHostFileSystemInfo extHostFileSystemInfo: IExtHostFileSystemInfo,\n\t\t@ILogService logService: ILogService,\n\t\t@IURITransformerService uriTransformerService: IURITransformerService,\n\t) {\n\t\tthis._logService = logService;\n\t\tthis._extHostFileSystemInfo = extHostFileSystemInfo;\n\t\tthis._uriTransformerService = uriTransformerService;\n\t\tthis._requestIdProvider = new Counter();\n\t\tthis._barrier = new Barrier();\n\n\t\tthis._proxy = extHostRpc.getProxy(MainContext.MainThreadWorkspace);\n\t\tthis._messageService = extHostRpc.getProxy(MainContext.MainThreadMessageService);\n\t\tconst data = initData.workspace;\n\t\tthis._confirmedWorkspace = data ? new ExtHostWorkspaceImpl(data.id, data.name, [], !!data.transient, data.configuration ? URI.revive(data.configuration) : null, !!data.isUntitled, uri => ignorePathCasing(uri, extHostFileSystemInfo)) : undefined;\n\t}\n\n\t$initializeWorkspace(data: IWorkspaceData | null, trusted: boolean): void {\n\t\tthis._trusted = trusted;\n\t\tthis.$acceptWorkspaceData(data);\n\t\tthis._barrier.open();\n\t}\n\n\twaitForInitializeCall(): Promise<boolean> {\n\t\treturn this._barrier.wait();\n\t}\n\n\t// --- workspace ---\n\n\tget workspace(): Workspace | undefined {\n\t\treturn this._actualWorkspace;\n\t}\n\n\tget name(): string | undefined {\n\t\treturn this._actualWorkspace ? this._actualWorkspace.name : undefined;\n\t}\n\n\tget workspaceFile(): vscode.Uri | undefined {\n\t\tif (this._actualWorkspace) {\n\t\t\tif (this._actualWorkspace.configuration) {\n\t\t\t\tif (this._actualWorkspace.isUntitled) {\n\t\t\t\t\treturn URI.from({ scheme: Schemas.untitled, path: basename(dirname(this._actualWorkspace.configuration)) }); // Untitled Workspace: return untitled URI\n\t\t\t\t}\n\n\t\t\t\treturn this._actualWorkspace.configuration; // Workspace: return the configuration location\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate get _actualWorkspace(): ExtHostWorkspaceImpl | undefined {\n\t\treturn this._unconfirmedWorkspace || this._confirmedWorkspace;\n\t}\n\n\tgetWorkspaceFolders(): vscode.WorkspaceFolder[] | undefined {\n\t\tif (!this._actualWorkspace) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this._actualWorkspace.workspaceFolders.slice(0);\n\t}\n\n\tasync getWorkspaceFolders2(): Promise<vscode.WorkspaceFolder[] | undefined> {\n\t\tawait this._barrier.wait();\n\t\tif (!this._actualWorkspace) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this._actualWorkspace.workspaceFolders.slice(0);\n\t}\n\n\tupdateWorkspaceFolders(extension: IExtensionDescription, index: number, deleteCount: number, ...workspaceFoldersToAdd: { uri: vscode.Uri; name?: string }[]): boolean {\n\t\tconst validatedDistinctWorkspaceFoldersToAdd: { uri: vscode.Uri; name?: string }[] = [];\n\t\tif (Array.isArray(workspaceFoldersToAdd)) {\n\t\t\tworkspaceFoldersToAdd.forEach(folderToAdd => {\n\t\t\t\tif (URI.isUri(folderToAdd.uri) && !validatedDistinctWorkspaceFoldersToAdd.some(f => isFolderEqual(f.uri, folderToAdd.uri, this._extHostFileSystemInfo))) {\n\t\t\t\t\tvalidatedDistinctWorkspaceFoldersToAdd.push({ uri: folderToAdd.uri, name: folderToAdd.name || basenameOrAuthority(folderToAdd.uri) });\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (!!this._unconfirmedWorkspace) {\n\t\t\treturn false; // prevent accumulated calls without a confirmed workspace\n\t\t}\n\n\t\tif ([index, deleteCount].some(i => typeof i !== 'number' || i < 0)) {\n\t\t\treturn false; // validate numbers\n\t\t}\n\n\t\tif (deleteCount === 0 && validatedDistinctWorkspaceFoldersToAdd.length === 0) {\n\t\t\treturn false; // nothing to delete or add\n\t\t}\n\n\t\tconst currentWorkspaceFolders: MutableWorkspaceFolder[] = this._actualWorkspace ? this._actualWorkspace.workspaceFolders : [];\n\t\tif (index + deleteCount > currentWorkspaceFolders.length) {\n\t\t\treturn false; // cannot delete more than we have\n\t\t}\n\n\t\t// Simulate the updateWorkspaceFolders method on our data to do more validation\n\t\tconst newWorkspaceFolders = currentWorkspaceFolders.slice(0);\n\t\tnewWorkspaceFolders.splice(index, deleteCount, ...validatedDistinctWorkspaceFoldersToAdd.map(f => ({ uri: f.uri, name: f.name || basenameOrAuthority(f.uri), index: undefined! /* fixed later */ })));\n\n\t\tfor (let i = 0; i < newWorkspaceFolders.length; i++) {\n\t\t\tconst folder = newWorkspaceFolders[i];\n\t\t\tif (newWorkspaceFolders.some((otherFolder, index) => index !== i && isFolderEqual(folder.uri, otherFolder.uri, this._extHostFileSystemInfo))) {\n\t\t\t\treturn false; // cannot add the same folder multiple times\n\t\t\t}\n\t\t}\n\n\t\tnewWorkspaceFolders.forEach((f, index) => f.index = index); // fix index\n\t\tconst { added, removed } = delta(currentWorkspaceFolders, newWorkspaceFolders, compareWorkspaceFolderByUriAndNameAndIndex, this._extHostFileSystemInfo);\n\t\tif (added.length === 0 && removed.length === 0) {\n\t\t\treturn false; // nothing actually changed\n\t\t}\n\n\t\t// Trigger on main side\n\t\tif (this._proxy) {\n\t\t\tconst extName = extension.displayName || extension.name;\n\t\t\tthis._proxy.$updateWorkspaceFolders(extName, index, deleteCount, validatedDistinctWorkspaceFoldersToAdd).then(undefined, error => {\n\n\t\t\t\t// in case of an error, make sure to clear out the unconfirmed workspace\n\t\t\t\t// because we cannot expect the acknowledgement from the main side for this\n\t\t\t\tthis._unconfirmedWorkspace = undefined;\n\n\t\t\t\t// show error to user\n\t\t\t\tconst options: MainThreadMessageOptions = { source: { identifier: extension.identifier, label: extension.displayName || extension.name } };\n\t\t\t\tthis._messageService.$showMessage(Severity.Error, localize('updateerror', \"Extension '{0}' failed to update workspace folders: {1}\", extName, error.toString()), options, []);\n\t\t\t});\n\t\t}\n\n\t\t// Try to accept directly\n\t\tthis.trySetWorkspaceFolders(newWorkspaceFolders);\n\n\t\treturn true;\n\t}\n\n\tgetWorkspaceFolder(uri: vscode.Uri, resolveParent?: boolean): vscode.WorkspaceFolder | undefined {\n\t\tif (!this._actualWorkspace) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this._actualWorkspace.getWorkspaceFolder(uri, resolveParent);\n\t}\n\n\tasync getWorkspaceFolder2(uri: vscode.Uri, resolveParent?: boolean): Promise<vscode.WorkspaceFolder | undefined> {\n\t\tawait this._barrier.wait();\n\t\tif (!this._actualWorkspace) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this._actualWorkspace.getWorkspaceFolder(uri, resolveParent);\n\t}\n\n\tasync resolveWorkspaceFolder(uri: vscode.Uri): Promise<vscode.WorkspaceFolder | undefined> {\n\t\tawait this._barrier.wait();\n\t\tif (!this._actualWorkspace) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this._actualWorkspace.resolveWorkspaceFolder(uri);\n\t}\n\n\tgetPath(): string | undefined {\n\n\t\t// this is legacy from the days before having\n\t\t// multi-root and we keep it only alive if there\n\t\t// is just one workspace folder.\n\t\tif (!this._actualWorkspace) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst { folders } = this._actualWorkspace;\n\t\tif (folders.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\t\t// #54483 @Joh Why are we still using fsPath?\n\t\treturn folders[0].uri.fsPath;\n\t}\n\n\tgetRelativePath(pathOrUri: string | vscode.Uri, includeWorkspace?: boolean): string {\n\n\t\tlet resource: URI | undefined;\n\t\tlet path: string = '';\n\t\tif (typeof pathOrUri === 'string') {\n\t\t\tresource = URI.file(pathOrUri);\n\t\t\tpath = pathOrUri;\n\t\t} else if (typeof pathOrUri !== 'undefined') {\n\t\t\tresource = pathOrUri;\n\t\t\tpath = pathOrUri.fsPath;\n\t\t}\n\n\t\tif (!resource) {\n\t\t\treturn path;\n\t\t}\n\n\t\tconst folder = this.getWorkspaceFolder(\n\t\t\tresource,\n\t\t\ttrue\n\t\t);\n\n\t\tif (!folder) {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (typeof includeWorkspace === 'undefined' && this._actualWorkspace) {\n\t\t\tincludeWorkspace = this._actualWorkspace.folders.length > 1;\n\t\t}\n\n\t\tlet result = relativePath(folder.uri, resource);\n\t\tif (includeWorkspace && folder.name) {\n\t\t\tresult = `${folder.name}/${result}`;\n\t\t}\n\t\treturn result!;\n\t}\n\n\tprivate trySetWorkspaceFolders(folders: vscode.WorkspaceFolder[]): void {\n\n\t\t// Update directly here. The workspace is unconfirmed as long as we did not get an\n\t\t// acknowledgement from the main side (via $acceptWorkspaceData)\n\t\tif (this._actualWorkspace) {\n\t\t\tthis._unconfirmedWorkspace = ExtHostWorkspaceImpl.toExtHostWorkspace({\n\t\t\t\tid: this._actualWorkspace.id,\n\t\t\t\tname: this._actualWorkspace.name,\n\t\t\t\tconfiguration: this._actualWorkspace.configuration,\n\t\t\t\tfolders,\n\t\t\t\tisUntitled: this._actualWorkspace.isUntitled\n\t\t\t}, this._actualWorkspace, undefined, this._extHostFileSystemInfo).workspace || undefined;\n\t\t}\n\t}\n\n\t$acceptWorkspaceData(data: IWorkspaceData | null): void {\n\n\t\tconst { workspace, added, removed } = ExtHostWorkspaceImpl.toExtHostWorkspace(data, this._confirmedWorkspace, this._unconfirmedWorkspace, this._extHostFileSystemInfo);\n\n\t\t// Update our workspace object. We have a confirmed workspace, so we drop our\n\t\t// unconfirmed workspace.\n\t\tthis._confirmedWorkspace = workspace || undefined;\n\t\tthis._unconfirmedWorkspace = undefined;\n\n\t\t// Events\n\t\tthis._onDidChangeWorkspace.fire(Object.freeze({\n\t\t\tadded,\n\t\t\tremoved,\n\t\t}));\n\t}\n\n\t// --- search ---\n\n\t/**\n\t * Note, null/undefined have different and important meanings for \"exclude\"\n\t */\n\tfindFiles(include: vscode.GlobPattern | undefined, exclude: vscode.GlobPattern | null | undefined, maxResults: number | undefined, extensionId: ExtensionIdentifier, token: vscode.CancellationToken = CancellationToken.None): Promise<vscode.Uri[]> {\n\t\tthis._logService.trace(`extHostWorkspace#findFiles: fileSearch, extension: ${extensionId.value}, entryPoint: findFiles`);\n\n\t\tlet excludeString: string = '';\n\t\tlet useFileExcludes = true;\n\t\tif (exclude === null) {\n\t\t\tuseFileExcludes = false;\n\t\t} else if (exclude !== undefined) {\n\t\t\tif (typeof exclude === 'string') {\n\t\t\t\texcludeString = exclude;\n\t\t\t} else {\n\t\t\t\texcludeString = exclude.pattern;\n\t\t\t}\n\t\t}\n\n\t\t// todo: consider exclude baseURI if available\n\t\treturn this._findFilesImpl(include, undefined, {\n\t\t\texclude: [excludeString],\n\t\t\tmaxResults,\n\t\t\tuseExcludeSettings: useFileExcludes ? ExcludeSettingOptions.FilesExclude : ExcludeSettingOptions.None,\n\t\t\tuseIgnoreFiles: {\n\t\t\t\tlocal: false\n\t\t\t}\n\t\t}, token);\n\t}\n\n\tfindFiles2(filePattern: vscode.GlobPattern | undefined,\n\t\toptions: vscode.FindFiles2Options = {},\n\t\textensionId: ExtensionIdentifier,\n\t\ttoken: vscode.CancellationToken = CancellationToken.None): Promise<vscode.Uri[]> {\n\t\tthis._logService.trace(`extHostWorkspace#findFiles2: fileSearch, extension: ${extensionId.value}, entryPoint: findFiles2`);\n\n\n\t\tconst useDefaultExcludes = options.useDefaultExcludes ?? true;\n\t\tconst useDefaultSearchExcludes = options.useDefaultSearchExcludes ?? true;\n\t\tconst excludeSetting = useDefaultExcludes ?\n\t\t\t(useDefaultSearchExcludes ? ExcludeSettingOptions.SearchAndFilesExclude : ExcludeSettingOptions.FilesExclude) :\n\t\t\tExcludeSettingOptions.None;\n\t\tconst newOptions: vscode.FindFiles2OptionsNew = {\n\t\t\texclude: options.exclude ? [options.exclude] : undefined,\n\t\t\tuseIgnoreFiles: {\n\t\t\t\tlocal: options.useIgnoreFiles,\n\t\t\t\tglobal: options.useGlobalIgnoreFiles,\n\t\t\t\tparent: options.useParentIgnoreFiles\n\t\t\t},\n\t\t\tuseExcludeSettings: excludeSetting,\n\t\t\tfollowSymlinks: options.followSymlinks,\n\t\t\tmaxResults: options.maxResults,\n\t\t};\n\t\treturn this._findFilesImpl(undefined, filePattern !== undefined ? [filePattern] : [], newOptions, token);\n\t}\n\n\tfindFiles2New(filePatterns: vscode.GlobPattern[],\n\t\toptions: vscode.FindFiles2OptionsNew = {},\n\t\textensionId: ExtensionIdentifier,\n\t\ttoken: vscode.CancellationToken = CancellationToken.None): Promise<vscode.Uri[]> {\n\t\tthis._logService.trace(`extHostWorkspace#findFiles2New: fileSearch, extension: ${extensionId.value}, entryPoint: findFiles2New`);\n\t\treturn this._findFilesImpl(undefined, filePatterns, options, token);\n\t}\n\n\tprivate async _findFilesImpl(\n\t\t// the old `findFiles` used `include` to query, but the new `findFiles2` uses `filePattern` to query.\n\t\t// `filePattern` is the proper way to handle this, since it takes less precedence than the ignore files.\n\t\tinclude: vscode.GlobPattern | undefined,\n\t\tfilePatterns: vscode.GlobPattern[] | undefined,\n\t\toptions: vscode.FindFiles2OptionsNew,\n\t\ttoken: vscode.CancellationToken = CancellationToken.None): Promise<vscode.Uri[]> {\n\t\tif (token && token.isCancellationRequested) {\n\t\t\treturn Promise.resolve([]);\n\t\t}\n\n\n\t\tconst filePatternsToUse = include !== undefined ? [include] : filePatterns;\n\t\tconst queryOptions: QueryOptions<IFileQueryBuilderOptions>[] = filePatternsToUse?.map(filePattern => {\n\n\t\t\tconst excludePatterns = globsToISearchPatternBuilder(options.exclude);\n\n\t\t\tconst fileQueries: IFileQueryBuilderOptions = {\n\t\t\t\tignoreSymlinks: typeof options.followSymlinks === 'boolean' ? !options.followSymlinks : undefined,\n\t\t\t\tdisregardIgnoreFiles: typeof options.useIgnoreFiles?.local === 'boolean' ? !options.useIgnoreFiles.local : undefined,\n\t\t\t\tdisregardGlobalIgnoreFiles: typeof options.useIgnoreFiles?.global === 'boolean' ? !options.useIgnoreFiles.global : undefined,\n\t\t\t\tdisregardParentIgnoreFiles: typeof options.useIgnoreFiles?.parent === 'boolean' ? !options.useIgnoreFiles.parent : undefined,\n\t\t\t\tdisregardExcludeSettings: options.useExcludeSettings !== undefined && options.useExcludeSettings === ExcludeSettingOptions.None,\n\t\t\t\tdisregardSearchExcludeSettings: options.useExcludeSettings !== undefined && (options.useExcludeSettings !== ExcludeSettingOptions.SearchAndFilesExclude),\n\t\t\t\tmaxResults: options.maxResults,\n\t\t\t\texcludePattern: excludePatterns.length > 0 ? excludePatterns : undefined,\n\t\t\t\t_reason: 'startFileSearch',\n\t\t\t\tshouldGlobSearch: include ? undefined : true,\n\t\t\t};\n\n\t\t\tconst parseInclude = parseSearchExcludeInclude(GlobPattern.from(filePattern));\n\t\t\tconst folderToUse = parseInclude?.folder;\n\t\t\tif (include) {\n\t\t\t\tfileQueries.includePattern = parseInclude?.pattern;\n\t\t\t} else {\n\t\t\t\tfileQueries.filePattern = parseInclude?.pattern;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tfolder: folderToUse,\n\t\t\t\toptions: fileQueries\n\t\t\t};\n\t\t}) ?? [];\n\n\t\treturn this._findFilesBase(queryOptions, token);\n\t}\n\n\tprivate async _findFilesBase(\n\t\tqueryOptions: QueryOptions<IFileQueryBuilderOptions>[] | undefined,\n\t\ttoken: CancellationToken\n\t): Promise<vscode.Uri[]> {\n\t\tconst result = await Promise.all(queryOptions?.map(option => this._proxy.$startFileSearch(\n\t\t\toption.folder ?? null,\n\t\t\toption.options,\n\t\t\ttoken).then(data => Array.isArray(data) ? data.map(d => URI.revive(d)) : [])\n\t\t) ?? []);\n\n\t\treturn result.flat();\n\t}\n\n\tfindTextInFilesNew(query: vscode.TextSearchQueryNew, options: vscode.FindTextInFilesOptionsNew | undefined, extensionId: ExtensionIdentifier, token: vscode.CancellationToken = CancellationToken.None): vscode.FindTextInFilesResponse {\n\t\tthis._logService.trace(`extHostWorkspace#findTextInFilesNew: textSearch, extension: ${extensionId.value}, entryPoint: findTextInFilesNew`);\n\n\n\t\tconst getOptions = (include: vscode.GlobPattern | undefined): QueryOptions<ITextQueryBuilderOptions> => {\n\t\t\tif (!options) {\n\t\t\t\treturn {\n\t\t\t\t\tfolder: undefined,\n\t\t\t\t\toptions: {}\n\t\t\t\t};\n\t\t\t}\n\t\t\tconst parsedInclude = include ? parseSearchExcludeInclude(GlobPattern.from(include)) : undefined;\n\n\t\t\tconst excludePatterns = options.exclude ? globsToISearchPatternBuilder(options.exclude) : undefined;\n\n\t\t\treturn {\n\t\t\t\toptions: {\n\n\t\t\t\t\tignoreSymlinks: typeof options.followSymlinks === 'boolean' ? !options.followSymlinks : undefined,\n\t\t\t\t\tdisregardIgnoreFiles: typeof options.useIgnoreFiles === 'boolean' ? !options.useIgnoreFiles : undefined,\n\t\t\t\t\tdisregardGlobalIgnoreFiles: typeof options.useIgnoreFiles?.global === 'boolean' ? !options.useIgnoreFiles?.global : undefined,\n\t\t\t\t\tdisregardParentIgnoreFiles: typeof options.useIgnoreFiles?.parent === 'boolean' ? !options.useIgnoreFiles?.parent : undefined,\n\t\t\t\t\tdisregardExcludeSettings: options.useExcludeSettings !== undefined && options.useExcludeSettings === ExcludeSettingOptions.None,\n\t\t\t\t\tdisregardSearchExcludeSettings: options.useExcludeSettings !== undefined && (options.useExcludeSettings !== ExcludeSettingOptions.SearchAndFilesExclude),\n\t\t\t\t\tfileEncoding: options.encoding,\n\t\t\t\t\tmaxResults: options.maxResults,\n\t\t\t\t\tpreviewOptions: options.previewOptions ? {\n\t\t\t\t\t\tmatchLines: options.previewOptions?.numMatchLines ?? 100,\n\t\t\t\t\t\tcharsPerLine: options.previewOptions?.charsPerLine ?? 10000,\n\t\t\t\t\t} : undefined,\n\t\t\t\t\tsurroundingContext: options.surroundingContext,\n\n\t\t\t\t\tincludePattern: parsedInclude?.pattern,\n\t\t\t\t\texcludePattern: excludePatterns\n\t\t\t\t} satisfies ITextQueryBuilderOptions,\n\t\t\t\tfolder: parsedInclude?.folder\n\t\t\t} satisfies QueryOptions<ITextQueryBuilderOptions>;\n\t\t};\n\n\t\tconst queryOptionsRaw: (QueryOptions<ITextQueryBuilderOptions> | undefined)[] = ((options?.include?.map((include) =>\n\t\t\tgetOptions(include)))) ?? [getOptions(undefined)];\n\n\t\tconst queryOptions = queryOptionsRaw.filter((queryOps): queryOps is QueryOptions<ITextQueryBuilderOptions> => !!queryOps);\n\n\t\tconst disposables = new DisposableStore();\n\t\tconst progressEmitter = disposables.add(new Emitter<{ result: ITextSearchResult<URI>; uri: URI }>());\n\t\tconst complete = this.findTextInFilesBase(\n\t\t\tquery,\n\t\t\tqueryOptions,\n\t\t\t(result, uri) => progressEmitter.fire({ result, uri }),\n\t\t\ttoken\n\t\t);\n\t\tconst asyncIterable = new AsyncIterableObject<vscode.TextSearchResultNew>(async emitter => {\n\t\t\tdisposables.add(progressEmitter.event(e => {\n\t\t\t\tconst result = e.result;\n\t\t\t\tconst uri = e.uri;\n\t\t\t\tif (resultIsMatch(result)) {\n\t\t\t\t\temitter.emitOne(new TextSearchMatchNew(\n\t\t\t\t\t\turi,\n\t\t\t\t\t\tresult.rangeLocations.map((range) => ({\n\t\t\t\t\t\t\tpreviewRange: new Range(range.preview.startLineNumber, range.preview.startColumn, range.preview.endLineNumber, range.preview.endColumn),\n\t\t\t\t\t\t\tsourceRange: new Range(range.source.startLineNumber, range.source.startColumn, range.source.endLineNumber, range.source.endColumn)\n\t\t\t\t\t\t})),\n\t\t\t\t\t\tresult.previewText\n\n\t\t\t\t\t));\n\t\t\t\t} else {\n\t\t\t\t\temitter.emitOne(new TextSearchContextNew(\n\t\t\t\t\t\turi,\n\t\t\t\t\t\tresult.text,\n\t\t\t\t\t\tresult.lineNumber\n\t\t\t\t\t));\n\n\t\t\t\t}\n\t\t\t}));\n\t\t\tawait complete;\n\t\t});\n\n\t\treturn {\n\t\t\tresults: asyncIterable,\n\t\t\tcomplete: complete.then((e) => {\n\t\t\t\tdisposables.dispose();\n\t\t\t\treturn {\n\t\t\t\t\tlimitHit: e?.limitHit ?? false\n\t\t\t\t};\n\t\t\t}),\n\t\t};\n\t}\n\n\n\tasync findTextInFilesBase(query: vscode.TextSearchQuery, queryOptions: QueryOptions<ITextQueryBuilderOptions>[] | undefined, callback: (result: ITextSearchResult<URI>, uri: URI) => void, token: vscode.CancellationToken = CancellationToken.None): Promise<vscode.TextSearchComplete> {\n\t\tconst requestId = this._requestIdProvider.getNext();\n\n\t\tlet isCanceled = false;\n\t\ttoken.onCancellationRequested(_ => {\n\t\t\tisCanceled = true;\n\t\t});\n\n\t\tthis._activeSearchCallbacks[requestId] = p => {\n\t\t\tif (isCanceled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst uri = URI.revive(p.resource);\n\t\t\tp.results!.forEach(rawResult => {\n\t\t\t\tconst result: ITextSearchResult<URI> = revive(rawResult);\n\t\t\t\tcallback(result, uri);\n\t\t\t});\n\t\t};\n\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn {};\n\t\t}\n\n\t\ttry {\n\t\t\tconst result = await Promise.all(queryOptions?.map(option => this._proxy.$startTextSearch(\n\t\t\t\tquery,\n\t\t\t\toption.folder ?? null,\n\t\t\t\toption.options,\n\t\t\t\trequestId,\n\t\t\t\ttoken) || {}\n\t\t\t) ?? []);\n\t\t\tdelete this._activeSearchCallbacks[requestId];\n\t\t\treturn result.reduce((acc, val) => {\n\t\t\t\treturn {\n\t\t\t\t\tlimitHit: acc?.limitHit || (val?.limitHit ?? false),\n\t\t\t\t\tmessage: [acc?.message ?? [], val?.message ?? []].flat(),\n\t\t\t\t};\n\t\t\t}, {}) ?? { limitHit: false };\n\n\t\t} catch (err) {\n\t\t\tdelete this._activeSearchCallbacks[requestId];\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\tasync findTextInFiles(query: vscode.TextSearchQuery, options: vscode.FindTextInFilesOptions & { useSearchExclude?: boolean }, callback: (result: vscode.TextSearchResult) => void, extensionId: ExtensionIdentifier, token: vscode.CancellationToken = CancellationToken.None): Promise<vscode.TextSearchComplete> {\n\t\tthis._logService.trace(`extHostWorkspace#findTextInFiles: textSearch, extension: ${extensionId.value}, entryPoint: findTextInFiles`);\n\n\t\tconst previewOptions: vscode.TextSearchPreviewOptions = typeof options.previewOptions === 'undefined' ?\n\t\t\t{\n\t\t\t\tmatchLines: 100,\n\t\t\t\tcharsPerLine: 10000\n\t\t\t} :\n\t\t\toptions.previewOptions;\n\n\t\tconst parsedInclude = parseSearchExcludeInclude(GlobPattern.from(options.include));\n\n\t\tconst excludePattern = (typeof options.exclude === 'string') ? options.exclude :\n\t\t\toptions.exclude ? options.exclude.pattern : undefined;\n\t\tconst queryOptions: ITextQueryBuilderOptions = {\n\t\t\tignoreSymlinks: typeof options.followSymlinks === 'boolean' ? !options.followSymlinks : undefined,\n\t\t\tdisregardIgnoreFiles: typeof options.useIgnoreFiles === 'boolean' ? !options.useIgnoreFiles : undefined,\n\t\t\tdisregardGlobalIgnoreFiles: typeof options.useGlobalIgnoreFiles === 'boolean' ? !options.useGlobalIgnoreFiles : undefined,\n\t\t\tdisregardParentIgnoreFiles: typeof options.useParentIgnoreFiles === 'boolean' ? !options.useParentIgnoreFiles : undefined,\n\t\t\tdisregardExcludeSettings: typeof options.useDefaultExcludes === 'boolean' ? !options.useDefaultExcludes : true,\n\t\t\tdisregardSearchExcludeSettings: typeof options.useSearchExclude === 'boolean' ? !options.useSearchExclude : true,\n\t\t\tfileEncoding: options.encoding,\n\t\t\tmaxResults: options.maxResults,\n\t\t\tpreviewOptions,\n\t\t\tsurroundingContext: options.afterContext, // TODO: remove ability to have before/after context separately\n\n\t\t\tincludePattern: parsedInclude?.pattern,\n\t\t\texcludePattern: excludePattern ? [{ pattern: excludePattern }] : undefined,\n\t\t};\n\n\t\tconst progress = (result: ITextSearchResult<URI>, uri: URI) => {\n\t\t\tif (resultIsMatch(result)) {\n\t\t\t\tcallback({\n\t\t\t\t\turi,\n\t\t\t\t\tpreview: {\n\t\t\t\t\t\ttext: result.previewText,\n\t\t\t\t\t\tmatches: mapArrayOrNot(\n\t\t\t\t\t\t\tresult.rangeLocations,\n\t\t\t\t\t\t\tm => new Range(m.preview.startLineNumber, m.preview.startColumn, m.preview.endLineNumber, m.preview.endColumn))\n\t\t\t\t\t},\n\t\t\t\t\tranges: mapArrayOrNot(\n\t\t\t\t\t\tresult.rangeLocations,\n\t\t\t\t\t\tr => new Range(r.source.startLineNumber, r.source.startColumn, r.source.endLineNumber, r.source.endColumn))\n\t\t\t\t} satisfies vscode.TextSearchMatch);\n\t\t\t} else {\n\t\t\t\tcallback({\n\t\t\t\t\turi,\n\t\t\t\t\ttext: result.text,\n\t\t\t\t\tlineNumber: result.lineNumber\n\t\t\t\t} satisfies vscode.TextSearchContext);\n\t\t\t}\n\t\t};\n\n\t\treturn this.findTextInFilesBase(query, [{ options: queryOptions, folder: parsedInclude?.folder }], progress, token);\n\t}\n\n\t$handleTextSearchResult(result: IRawFileMatch2, requestId: number): void {\n\t\tthis._activeSearchCallbacks[requestId]?.(result);\n\t}\n\n\tasync save(uri: URI): Promise<URI | undefined> {\n\t\tconst result = await this._proxy.$save(uri, { saveAs: false });\n\n\t\treturn URI.revive(result);\n\t}\n\n\tasync saveAs(uri: URI): Promise<URI | undefined> {\n\t\tconst result = await this._proxy.$save(uri, { saveAs: true });\n\n\t\treturn URI.revive(result);\n\t}\n\n\tsaveAll(includeUntitled?: boolean): Promise<boolean> {\n\t\treturn this._proxy.$saveAll(includeUntitled);\n\t}\n\n\tresolveProxy(url: string): Promise<string | undefined> {\n\t\treturn this._proxy.$resolveProxy(url);\n\t}\n\n\tlookupAuthorization(authInfo: AuthInfo): Promise<Credentials | undefined> {\n\t\treturn this._proxy.$lookupAuthorization(authInfo);\n\t}\n\n\tlookupKerberosAuthorization(url: string): Promise<string | undefined> {\n\t\treturn this._proxy.$lookupKerberosAuthorization(url);\n\t}\n\n\tloadCertificates(): Promise<string[]> {\n\t\treturn this._proxy.$loadCertificates();\n\t}\n\n\t// --- trust ---\n\n\tget trusted(): boolean {\n\t\treturn this._trusted;\n\t}\n\n\trequestWorkspaceTrust(options?: vscode.WorkspaceTrustRequestOptions): Promise<boolean | undefined> {\n\t\treturn this._proxy.$requestWorkspaceTrust(options);\n\t}\n\n\t$onDidGrantWorkspaceTrust(): void {\n\t\tif (!this._trusted) {\n\t\t\tthis._trusted = true;\n\t\t\tthis._onDidGrantWorkspaceTrust.fire();\n\t\t}\n\t}\n\n\t// --- edit sessions ---\n\n\tprivate _providerHandlePool = 0;\n\n\t// called by ext host\n\tregisterEditSessionIdentityProvider(scheme: string, provider: vscode.EditSessionIdentityProvider) {\n\t\tif (this._editSessionIdentityProviders.has(scheme)) {\n\t\t\tthrow new Error(`A provider has already been registered for scheme ${scheme}`);\n\t\t}\n\n\t\tthis._editSessionIdentityProviders.set(scheme, provider);\n\t\tconst outgoingScheme = this._uriTransformerService.transformOutgoingScheme(scheme);\n\t\tconst handle = this._providerHandlePool++;\n\t\tthis._proxy.$registerEditSessionIdentityProvider(handle, outgoingScheme);\n\n\t\treturn toDisposable(() => {\n\t\t\tthis._editSessionIdentityProviders.delete(scheme);\n\t\t\tthis._proxy.$unregisterEditSessionIdentityProvider(handle);\n\t\t});\n\t}\n\n\t// called by main thread\n\tasync $getEditSessionIdentifier(workspaceFolder: UriComponents, cancellationToken: CancellationToken): Promise<string | undefined> {\n\t\tthis._logService.info('Getting edit session identifier for workspaceFolder', workspaceFolder);\n\t\tconst folder = await this.resolveWorkspaceFolder(URI.revive(workspaceFolder));\n\t\tif (!folder) {\n\t\t\tthis._logService.warn('Unable to resolve workspace folder');\n\t\t\treturn undefined;\n\t\t}\n\n\t\tthis._logService.info('Invoking #provideEditSessionIdentity for workspaceFolder', folder);\n\n\t\tconst provider = this._editSessionIdentityProviders.get(folder.uri.scheme);\n\t\tthis._logService.info(`Provider for scheme ${folder.uri.scheme} is defined: `, !!provider);\n\t\tif (!provider) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst result = await provider.provideEditSessionIdentity(folder, cancellationToken);\n\t\tthis._logService.info('Provider returned edit session identifier: ', result);\n\t\tif (!result) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tasync $provideEditSessionIdentityMatch(workspaceFolder: UriComponents, identity1: string, identity2: string, cancellationToken: CancellationToken): Promise<EditSessionIdentityMatch | undefined> {\n\t\tthis._logService.info('Getting edit session identifier for workspaceFolder', workspaceFolder);\n\t\tconst folder = await this.resolveWorkspaceFolder(URI.revive(workspaceFolder));\n\t\tif (!folder) {\n\t\t\tthis._logService.warn('Unable to resolve workspace folder');\n\t\t\treturn undefined;\n\t\t}\n\n\t\tthis._logService.info('Invoking #provideEditSessionIdentity for workspaceFolder', folder);\n\n\t\tconst provider = this._editSessionIdentityProviders.get(folder.uri.scheme);\n\t\tthis._logService.info(`Provider for scheme ${folder.uri.scheme} is defined: `, !!provider);\n\t\tif (!provider) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst result = await provider.provideEditSessionIdentityMatch?.(identity1, identity2, cancellationToken);\n\t\tthis._logService.info('Provider returned edit session identifier match result: ', result);\n\t\tif (!result) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate readonly _onWillCreateEditSessionIdentityEvent = new AsyncEmitter<vscode.EditSessionIdentityWillCreateEvent>();\n\n\tgetOnWillCreateEditSessionIdentityEvent(extension: IExtensionDescription): Event<vscode.EditSessionIdentityWillCreateEvent> {\n\t\treturn (listener, thisArg, disposables) => {\n\t\t\tconst wrappedListener: IExtensionListener<vscode.EditSessionIdentityWillCreateEvent> = function wrapped(e) { listener.call(thisArg, e); };\n\t\t\twrappedListener.extension = extension;\n\t\t\treturn this._onWillCreateEditSessionIdentityEvent.event(wrappedListener, undefined, disposables);\n\t\t};\n\t}\n\n\t// main thread calls this to trigger participants\n\tasync $onWillCreateEditSessionIdentity(workspaceFolder: UriComponents, token: CancellationToken, timeout: number): Promise<void> {\n\t\tconst folder = await this.resolveWorkspaceFolder(URI.revive(workspaceFolder));\n\n\t\tif (folder === undefined) {\n\t\t\tthrow new Error('Unable to resolve workspace folder');\n\t\t}\n\n\t\tawait this._onWillCreateEditSessionIdentityEvent.fireAsync({ workspaceFolder: folder }, token, async (thenable: Promise<unknown>, listener) => {\n\t\t\tconst now = Date.now();\n\t\t\tawait Promise.resolve(thenable);\n\t\t\tif (Date.now() - now > timeout) {\n\t\t\t\tthis._logService.warn('SLOW edit session create-participant', (<IExtensionListener<vscode.EditSessionIdentityWillCreateEvent>>listener).extension.identifier);\n\t\t\t}\n\t\t});\n\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\t// --- canonical uri identity ---\n\n\tprivate readonly _canonicalUriProviders = new Map<string, vscode.CanonicalUriProvider>();\n\n\t// called by ext host\n\tregisterCanonicalUriProvider(scheme: string, provider: vscode.CanonicalUriProvider) {\n\t\tif (this._canonicalUriProviders.has(scheme)) {\n\t\t\tthrow new Error(`A provider has already been registered for scheme ${scheme}`);\n\t\t}\n\n\t\tthis._canonicalUriProviders.set(scheme, provider);\n\t\tconst outgoingScheme = this._uriTransformerService.transformOutgoingScheme(scheme);\n\t\tconst handle = this._providerHandlePool++;\n\t\tthis._proxy.$registerCanonicalUriProvider(handle, outgoingScheme);\n\n\t\treturn toDisposable(() => {\n\t\t\tthis._canonicalUriProviders.delete(scheme);\n\t\t\tthis._proxy.$unregisterCanonicalUriProvider(handle);\n\t\t});\n\t}\n\n\tasync provideCanonicalUri(uri: URI, options: vscode.CanonicalUriRequestOptions, cancellationToken: CancellationToken): Promise<URI | undefined> {\n\t\tconst provider = this._canonicalUriProviders.get(uri.scheme);\n\t\tif (!provider) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst result = await provider.provideCanonicalUri?.(URI.revive(uri), options, cancellationToken);\n\t\tif (!result) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t// called by main thread\n\tasync $provideCanonicalUri(uri: UriComponents, targetScheme: string, cancellationToken: CancellationToken): Promise<UriComponents | undefined> {\n\t\treturn this.provideCanonicalUri(URI.revive(uri), { targetScheme }, cancellationToken);\n\t}\n}\n\nexport const IExtHostWorkspace = createDecorator<IExtHostWorkspace>('IExtHostWorkspace');\nexport interface IExtHostWorkspace extends ExtHostWorkspace, ExtHostWorkspaceShape, IExtHostWorkspaceProvider { }\n\nfunction parseSearchExcludeInclude(include: string | IRelativePatternDto | undefined | null): { pattern: string; folder?: URI } | undefined {\n\tlet pattern: string | undefined;\n\tlet includeFolder: URI | undefined;\n\tif (include) {\n\t\tif (typeof include === 'string') {\n\t\t\tpattern = include;\n\t\t} else {\n\t\t\tpattern = include.pattern;\n\t\t\tincludeFolder = URI.revive(include.baseUri);\n\t\t}\n\n\t\treturn {\n\t\t\tpattern,\n\t\t\tfolder: includeFolder\n\t\t};\n\t}\n\treturn undefined;\n}\n\ninterface IExtensionListener<E> {\n\textension: IExtensionDescription;\n\t(e: E): any;\n}\n\nfunction globsToISearchPatternBuilder(excludes: vscode.GlobPattern[] | undefined): ISearchPatternBuilder<URI>[] {\n\treturn (\n\t\texcludes?.map((exclude): ISearchPatternBuilder<URI> | undefined => {\n\t\t\tif (typeof exclude === 'string') {\n\t\t\t\tif (exclude === '') {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tpattern: exclude,\n\t\t\t\t\turi: undefined\n\t\t\t\t} satisfies ISearchPatternBuilder<URI>;\n\t\t\t} else {\n\t\t\t\tconst parsedExclude = parseSearchExcludeInclude(exclude);\n\t\t\t\tif (!parsedExclude) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tpattern: parsedExclude.pattern,\n\t\t\t\t\turi: parsedExclude.folder\n\t\t\t\t} satisfies ISearchPatternBuilder<URI>;\n\t\t\t}\n\t\t}) ?? []\n\t).filter((e): e is ISearchPatternBuilder<URI> => !!e);\n}\n"],
  "mappings": "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",
  "names": ["compare", "ignorePathCasing", "name", "index"]
}
