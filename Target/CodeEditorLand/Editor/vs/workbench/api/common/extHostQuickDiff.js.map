{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostQuickDiff.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type * as vscode from \"vscode\";\nimport { asPromise } from \"../../../base/common/async.js\";\nimport type { CancellationToken } from \"../../../base/common/cancellation.js\";\nimport { URI, type UriComponents } from \"../../../base/common/uri.js\";\nimport type { IURITransformer } from \"../../../base/common/uriIpc.js\";\nimport {\n\ttype ExtHostQuickDiffShape,\n\ttype IMainContext,\n\tMainContext,\n\ttype MainThreadQuickDiffShape,\n} from \"./extHost.protocol.js\";\nimport { DocumentSelector } from \"./extHostTypeConverters.js\";\n\nexport class ExtHostQuickDiff implements ExtHostQuickDiffShape {\n\tprivate static handlePool = 0;\n\n\tprivate proxy: MainThreadQuickDiffShape;\n\tprivate providers: Map<number, vscode.QuickDiffProvider> = new Map();\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\tprivate readonly uriTransformer: IURITransformer | undefined,\n\t) {\n\t\tthis.proxy = mainContext.getProxy(MainContext.MainThreadQuickDiff);\n\t}\n\n\t$provideOriginalResource(\n\t\thandle: number,\n\t\turiComponents: UriComponents,\n\t\ttoken: CancellationToken,\n\t): Promise<UriComponents | null> {\n\t\tconst uri = URI.revive(uriComponents);\n\t\tconst provider = this.providers.get(handle);\n\n\t\tif (!provider) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\treturn asPromise(() =>\n\t\t\tprovider.provideOriginalResource!(uri, token),\n\t\t).then<UriComponents | null>((r) => r || null);\n\t}\n\n\tregisterQuickDiffProvider(\n\t\tselector: vscode.DocumentSelector,\n\t\tquickDiffProvider: vscode.QuickDiffProvider,\n\t\tlabel: string,\n\t\trootUri?: vscode.Uri,\n\t): vscode.Disposable {\n\t\tconst handle = ExtHostQuickDiff.handlePool++;\n\t\tthis.providers.set(handle, quickDiffProvider);\n\t\tthis.proxy.$registerQuickDiffProvider(\n\t\t\thandle,\n\t\t\tDocumentSelector.from(selector, this.uriTransformer),\n\t\t\tlabel,\n\t\t\trootUri,\n\t\t);\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tthis.proxy.$unregisterQuickDiffProvider(handle);\n\t\t\t\tthis.providers.delete(handle);\n\t\t\t},\n\t\t};\n\t}\n}\n"],
  "mappings": ";;AAMA,SAAS,iBAAiB;AAE1B,SAAS,WAA+B;AAExC;AAAA,EAGC;AAAA,OAEM;AACP,SAAS,wBAAwB;AAE1B,MAAM,iBAAkD;AAAA,EAM9D,YACC,aACiB,gBAChB;AADgB;AAEjB,SAAK,QAAQ,YAAY,SAAS,YAAY,mBAAmB;AAAA,EAClE;AAAA,EA7BD,OAkB+D;AAAA;AAAA;AAAA,EAC9D,OAAe,aAAa;AAAA,EAEpB;AAAA,EACA,YAAmD,oBAAI,IAAI;AAAA,EASnE,yBACC,QACA,eACA,OACgC;AAChC,UAAM,MAAM,IAAI,OAAO,aAAa;AACpC,UAAM,WAAW,KAAK,UAAU,IAAI,MAAM;AAE1C,QAAI,CAAC,UAAU;AACd,aAAO,QAAQ,QAAQ,IAAI;AAAA,IAC5B;AAEA,WAAO;AAAA,MAAU,MAChB,SAAS,wBAAyB,KAAK,KAAK;AAAA,IAC7C,EAAE,KAA2B,CAAC,MAAM,KAAK,IAAI;AAAA,EAC9C;AAAA,EAEA,0BACC,UACA,mBACA,OACA,SACoB;AACpB,UAAM,SAAS,iBAAiB;AAChC,SAAK,UAAU,IAAI,QAAQ,iBAAiB;AAC5C,SAAK,MAAM;AAAA,MACV;AAAA,MACA,iBAAiB,KAAK,UAAU,KAAK,cAAc;AAAA,MACnD;AAAA,MACA;AAAA,IACD;AACA,WAAO;AAAA,MACN,SAAS,6BAAM;AACd,aAAK,MAAM,6BAA6B,MAAM;AAC9C,aAAK,UAAU,OAAO,MAAM;AAAA,MAC7B,GAHS;AAAA,IAIV;AAAA,EACD;AACD;",
  "names": []
}
