{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostQuickDiff.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type * as vscode from 'vscode';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { URI, UriComponents } from '../../../base/common/uri.js';\nimport { ExtHostQuickDiffShape, IMainContext, MainContext, MainThreadQuickDiffShape } from './extHost.protocol.js';\nimport { asPromise } from '../../../base/common/async.js';\nimport { DocumentSelector } from './extHostTypeConverters.js';\nimport { IURITransformer } from '../../../base/common/uriIpc.js';\n\nexport class ExtHostQuickDiff implements ExtHostQuickDiffShape {\n\tprivate static handlePool: number = 0;\n\n\tprivate proxy: MainThreadQuickDiffShape;\n\tprivate providers: Map<number, vscode.QuickDiffProvider> = new Map();\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\tprivate readonly uriTransformer: IURITransformer | undefined\n\t) {\n\t\tthis.proxy = mainContext.getProxy(MainContext.MainThreadQuickDiff);\n\t}\n\n\t$provideOriginalResource(handle: number, uriComponents: UriComponents, token: CancellationToken): Promise<UriComponents | null> {\n\t\tconst uri = URI.revive(uriComponents);\n\t\tconst provider = this.providers.get(handle);\n\n\t\tif (!provider) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\treturn asPromise(() => provider.provideOriginalResource!(uri, token))\n\t\t\t.then<UriComponents | null>(r => r || null);\n\t}\n\n\tregisterQuickDiffProvider(selector: vscode.DocumentSelector, quickDiffProvider: vscode.QuickDiffProvider, label: string, rootUri?: vscode.Uri): vscode.Disposable {\n\t\tconst handle = ExtHostQuickDiff.handlePool++;\n\t\tthis.providers.set(handle, quickDiffProvider);\n\t\tthis.proxy.$registerQuickDiffProvider(handle, DocumentSelector.from(selector, this.uriTransformer), label, rootUri);\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tthis.proxy.$unregisterQuickDiffProvider(handle);\n\t\t\t\tthis.providers.delete(handle);\n\t\t\t}\n\t\t};\n\t}\n}\n"],
  "mappings": ";;AAMA,SAAS,yBAAyB;AAClC,SAAS,KAAK,qBAAqB;AACnC,SAAS,uBAAuB,cAAc,aAAa,gCAAgC;AAC3F,SAAS,iBAAiB;AAC1B,SAAS,wBAAwB;AACjC,SAAS,uBAAuB;AAEzB,MAAM,iBAAkD;AAAA,EAM9D,YACC,aACiB,gBAChB;AADgB;AAEjB,SAAK,QAAQ,YAAY,SAAS,YAAY,mBAAmB;AAAA,EAClE;AAAA,EAxBD,OAa+D;AAAA;AAAA;AAAA,EAC9D,OAAe,aAAqB;AAAA,EAE5B;AAAA,EACA,YAAmD,oBAAI,IAAI;AAAA,EASnE,yBAAyB,QAAgB,eAA8B,OAAyD;AAC/H,UAAM,MAAM,IAAI,OAAO,aAAa;AACpC,UAAM,WAAW,KAAK,UAAU,IAAI,MAAM;AAE1C,QAAI,CAAC,UAAU;AACd,aAAO,QAAQ,QAAQ,IAAI;AAAA,IAC5B;AAEA,WAAO,UAAU,MAAM,SAAS,wBAAyB,KAAK,KAAK,CAAC,EAClE,KAA2B,OAAK,KAAK,IAAI;AAAA,EAC5C;AAAA,EAEA,0BAA0B,UAAmC,mBAA6C,OAAe,SAAyC;AACjK,UAAM,SAAS,iBAAiB;AAChC,SAAK,UAAU,IAAI,QAAQ,iBAAiB;AAC5C,SAAK,MAAM,2BAA2B,QAAQ,iBAAiB,KAAK,UAAU,KAAK,cAAc,GAAG,OAAO,OAAO;AAClH,WAAO;AAAA,MACN,SAAS,6BAAM;AACd,aAAK,MAAM,6BAA6B,MAAM;AAC9C,aAAK,UAAU,OAAO,MAAM;AAAA,MAC7B,GAHS;AAAA,IAIV;AAAA,EACD;AACD;",
  "names": []
}
