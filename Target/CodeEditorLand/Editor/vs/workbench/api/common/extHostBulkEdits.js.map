{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostBulkEdits.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type * as vscode from \"vscode\";\nimport type { IExtensionDescription } from \"../../../platform/extensions/common/extensions.js\";\nimport { SerializableObjectWithBuffers } from \"../../services/extensions/common/proxyIdentifier.js\";\nimport {\n\tMainContext,\n\ttype MainThreadBulkEditsShape,\n} from \"./extHost.protocol.js\";\nimport type { ExtHostDocumentsAndEditors } from \"./extHostDocumentsAndEditors.js\";\nimport { IExtHostRpcService } from \"./extHostRpcService.js\";\nimport { WorkspaceEdit } from \"./extHostTypeConverters.js\";\n\nexport class ExtHostBulkEdits {\n\tprivate readonly _proxy: MainThreadBulkEditsShape;\n\tprivate readonly _versionInformationProvider: WorkspaceEdit.IVersionInformationProvider;\n\n\tconstructor(\n\t\t@IExtHostRpcService extHostRpc: IExtHostRpcService,\n\t\textHostDocumentsAndEditors: ExtHostDocumentsAndEditors,\n\t) {\n\t\tthis._proxy = extHostRpc.getProxy(MainContext.MainThreadBulkEdits);\n\n\t\tthis._versionInformationProvider = {\n\t\t\tgetTextDocumentVersion: (uri) =>\n\t\t\t\textHostDocumentsAndEditors.getDocument(uri)?.version,\n\t\t\tgetNotebookDocumentVersion: () => undefined,\n\t\t};\n\t}\n\n\tapplyWorkspaceEdit(\n\t\tedit: vscode.WorkspaceEdit,\n\t\textension: IExtensionDescription,\n\t\tmetadata: vscode.WorkspaceEditMetadata | undefined,\n\t): Promise<boolean> {\n\t\tconst dto = new SerializableObjectWithBuffers(\n\t\t\tWorkspaceEdit.from(edit, this._versionInformationProvider),\n\t\t);\n\t\treturn this._proxy.$tryApplyWorkspaceEdit(\n\t\t\tdto,\n\t\t\tundefined,\n\t\t\tmetadata?.isRefactoring ?? false,\n\t\t);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAOA,SAAS,qCAAqC;AAC9C;AAAA,EACC;AAAA,OAEM;AAEP,SAAS,0BAA0B;AACnC,SAAS,qBAAqB;AAEvB,IAAM,mBAAN,MAAuB;AAAA,EAhB9B,OAgB8B;AAAA;AAAA;AAAA,EACZ;AAAA,EACA;AAAA,EAEjB,YACqB,YACpB,4BACC;AACD,SAAK,SAAS,WAAW,SAAS,YAAY,mBAAmB;AAEjE,SAAK,8BAA8B;AAAA,MAClC,wBAAwB,wBAAC,QACxB,2BAA2B,YAAY,GAAG,GAAG,SADtB;AAAA,MAExB,4BAA4B,6BAAM,QAAN;AAAA,IAC7B;AAAA,EACD;AAAA,EAEA,mBACC,MACA,WACA,UACmB;AACnB,UAAM,MAAM,IAAI;AAAA,MACf,cAAc,KAAK,MAAM,KAAK,2BAA2B;AAAA,IAC1D;AACA,WAAO,KAAK,OAAO;AAAA,MAClB;AAAA,MACA;AAAA,MACA,UAAU,iBAAiB;AAAA,IAC5B;AAAA,EACD;AACD;AA/Ba,mBAAN;AAAA,EAKJ;AAAA,GALU;",
  "names": []
}
