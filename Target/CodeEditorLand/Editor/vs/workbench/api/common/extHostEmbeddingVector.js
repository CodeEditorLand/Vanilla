import{MainContext as n}from"./extHost.protocol.js";import{Disposable as d}from"./extHostTypes.js";class v{_AiEmbeddingVectorProviders=new Map;_nextHandle=0;_proxy;constructor(r){this._proxy=r.getProxy(n.MainThreadAiEmbeddingVector)}async $provideAiEmbeddingVector(r,i,o){if(this._AiEmbeddingVectorProviders.size===0)throw new Error("No embedding vector providers registered");const e=this._AiEmbeddingVectorProviders.get(r);if(!e)throw new Error("Embedding vector provider not found");const t=await e.provideEmbeddingVector(i,o);if(!t)throw new Error("Embedding vector provider returned undefined");return t}registerEmbeddingVectorProvider(r,i,o){const e=this._nextHandle;return this._nextHandle++,this._AiEmbeddingVectorProviders.set(e,o),this._proxy.$registerAiEmbeddingVectorProvider(i,e),new d(()=>{this._proxy.$unregisterAiEmbeddingVectorProvider(e),this._AiEmbeddingVectorProviders.delete(e)})}}export{v as ExtHostAiEmbeddingVector};
