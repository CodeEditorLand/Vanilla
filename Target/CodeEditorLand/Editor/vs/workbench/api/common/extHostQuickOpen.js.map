{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostQuickOpen.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { dispose, IDisposable } from '../../../base/common/lifecycle.js';\nimport { ExtHostCommands } from './extHostCommands.js';\nimport { IExtHostWorkspaceProvider } from './extHostWorkspace.js';\nimport { InputBox, InputBoxOptions, InputBoxValidationMessage, QuickInput, QuickInputButton, QuickPick, QuickPickItem, QuickPickItemButtonEvent, QuickPickOptions, WorkspaceFolder, WorkspaceFolderPickOptions } from 'vscode';\nimport { ExtHostQuickOpenShape, IMainContext, MainContext, TransferQuickInput, TransferQuickInputButton, TransferQuickPickItemOrSeparator } from './extHost.protocol.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { ThemeIcon, QuickInputButtons, QuickPickItemKind, InputBoxValidationSeverity } from './extHostTypes.js';\nimport { isCancellationError } from '../../../base/common/errors.js';\nimport { IExtensionDescription } from '../../../platform/extensions/common/extensions.js';\nimport { coalesce } from '../../../base/common/arrays.js';\nimport Severity from '../../../base/common/severity.js';\nimport { ThemeIcon as ThemeIconUtils } from '../../../base/common/themables.js';\nimport { isProposedApiEnabled } from '../../services/extensions/common/extensions.js';\nimport { MarkdownString } from './extHostTypeConverters.js';\n\nexport type Item = string | QuickPickItem;\n\nexport interface ExtHostQuickOpen {\n\tshowQuickPick(extension: IExtensionDescription, itemsOrItemsPromise: QuickPickItem[] | Promise<QuickPickItem[]>, options: QuickPickOptions & { canPickMany: true }, token?: CancellationToken): Promise<QuickPickItem[] | undefined>;\n\tshowQuickPick(extension: IExtensionDescription, itemsOrItemsPromise: string[] | Promise<string[]>, options?: QuickPickOptions, token?: CancellationToken): Promise<string | undefined>;\n\tshowQuickPick(extension: IExtensionDescription, itemsOrItemsPromise: QuickPickItem[] | Promise<QuickPickItem[]>, options?: QuickPickOptions, token?: CancellationToken): Promise<QuickPickItem | undefined>;\n\tshowQuickPick(extension: IExtensionDescription, itemsOrItemsPromise: Item[] | Promise<Item[]>, options?: QuickPickOptions, token?: CancellationToken): Promise<Item | Item[] | undefined>;\n\n\tshowInput(options?: InputBoxOptions, token?: CancellationToken): Promise<string | undefined>;\n\n\tshowWorkspaceFolderPick(options?: WorkspaceFolderPickOptions, token?: CancellationToken): Promise<WorkspaceFolder | undefined>;\n\n\tcreateQuickPick<T extends QuickPickItem>(extension: IExtensionDescription): QuickPick<T>;\n\n\tcreateInputBox(extension: IExtensionDescription): InputBox;\n}\n\nexport function createExtHostQuickOpen(mainContext: IMainContext, workspace: IExtHostWorkspaceProvider, commands: ExtHostCommands): ExtHostQuickOpenShape & ExtHostQuickOpen {\n\tconst proxy = mainContext.getProxy(MainContext.MainThreadQuickOpen);\n\n\tclass ExtHostQuickOpenImpl implements ExtHostQuickOpenShape {\n\n\t\tprivate _workspace: IExtHostWorkspaceProvider;\n\t\tprivate _commands: ExtHostCommands;\n\n\t\tprivate _onDidSelectItem?: (handle: number) => void;\n\t\tprivate _validateInput?: (input: string) => string | InputBoxValidationMessage | undefined | null | Thenable<string | InputBoxValidationMessage | undefined | null>;\n\n\t\tprivate _sessions = new Map<number, ExtHostQuickInput>();\n\n\t\tprivate _instances = 0;\n\n\t\tconstructor(workspace: IExtHostWorkspaceProvider, commands: ExtHostCommands) {\n\t\t\tthis._workspace = workspace;\n\t\t\tthis._commands = commands;\n\t\t}\n\n\t\tshowQuickPick(extension: IExtensionDescription, itemsOrItemsPromise: QuickPickItem[] | Promise<QuickPickItem[]>, options: QuickPickOptions & { canPickMany: true }, token?: CancellationToken): Promise<QuickPickItem[] | undefined>;\n\t\tshowQuickPick(extension: IExtensionDescription, itemsOrItemsPromise: string[] | Promise<string[]>, options?: QuickPickOptions, token?: CancellationToken): Promise<string | undefined>;\n\t\tshowQuickPick(extension: IExtensionDescription, itemsOrItemsPromise: QuickPickItem[] | Promise<QuickPickItem[]>, options?: QuickPickOptions, token?: CancellationToken): Promise<QuickPickItem | undefined>;\n\t\tshowQuickPick(extension: IExtensionDescription, itemsOrItemsPromise: Item[] | Promise<Item[]>, options?: QuickPickOptions, token: CancellationToken = CancellationToken.None): Promise<Item | Item[] | undefined> {\n\t\t\t// clear state from last invocation\n\t\t\tthis._onDidSelectItem = undefined;\n\n\t\t\tconst itemsPromise = Promise.resolve(itemsOrItemsPromise);\n\n\t\t\tconst instance = ++this._instances;\n\n\t\t\tconst quickPickWidget = proxy.$show(instance, {\n\t\t\t\ttitle: options?.title,\n\t\t\t\tplaceHolder: options?.placeHolder,\n\t\t\t\tmatchOnDescription: options?.matchOnDescription,\n\t\t\t\tmatchOnDetail: options?.matchOnDetail,\n\t\t\t\tignoreFocusLost: options?.ignoreFocusOut,\n\t\t\t\tcanPickMany: options?.canPickMany,\n\t\t\t}, token);\n\n\t\t\tconst widgetClosedMarker = {};\n\t\t\tconst widgetClosedPromise = quickPickWidget.then(() => widgetClosedMarker);\n\n\t\t\treturn Promise.race([widgetClosedPromise, itemsPromise]).then(result => {\n\t\t\t\tif (result === widgetClosedMarker) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\tconst allowedTooltips = isProposedApiEnabled(extension, 'quickPickItemTooltip');\n\n\t\t\t\treturn itemsPromise.then(items => {\n\n\t\t\t\t\tconst pickItems: TransferQuickPickItemOrSeparator[] = [];\n\t\t\t\t\tfor (let handle = 0; handle < items.length; handle++) {\n\t\t\t\t\t\tconst item = items[handle];\n\t\t\t\t\t\tif (typeof item === 'string') {\n\t\t\t\t\t\t\tpickItems.push({ label: item, handle });\n\t\t\t\t\t\t} else if (item.kind === QuickPickItemKind.Separator) {\n\t\t\t\t\t\t\tpickItems.push({ type: 'separator', label: item.label });\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (item.tooltip && !allowedTooltips) {\n\t\t\t\t\t\t\t\tconsole.warn(`Extension '${extension.identifier.value}' uses a tooltip which is proposed API that is only available when running out of dev or with the following command line switch: --enable-proposed-api ${extension.identifier.value}`);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst icon = (item.iconPath) ? getIconPathOrClass(item.iconPath) : undefined;\n\t\t\t\t\t\t\tpickItems.push({\n\t\t\t\t\t\t\t\tlabel: item.label,\n\t\t\t\t\t\t\t\ticonPath: icon?.iconPath,\n\t\t\t\t\t\t\t\ticonClass: icon?.iconClass,\n\t\t\t\t\t\t\t\tdescription: item.description,\n\t\t\t\t\t\t\t\tdetail: item.detail,\n\t\t\t\t\t\t\t\tpicked: item.picked,\n\t\t\t\t\t\t\t\talwaysShow: item.alwaysShow,\n\t\t\t\t\t\t\t\ttooltip: allowedTooltips ? MarkdownString.fromStrict(item.tooltip) : undefined,\n\t\t\t\t\t\t\t\thandle\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// handle selection changes\n\t\t\t\t\tif (options && typeof options.onDidSelectItem === 'function') {\n\t\t\t\t\t\tthis._onDidSelectItem = (handle) => {\n\t\t\t\t\t\t\toptions.onDidSelectItem!(items[handle]);\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// show items\n\t\t\t\t\tproxy.$setItems(instance, pickItems);\n\n\t\t\t\t\treturn quickPickWidget.then(handle => {\n\t\t\t\t\t\tif (typeof handle === 'number') {\n\t\t\t\t\t\t\treturn items[handle];\n\t\t\t\t\t\t} else if (Array.isArray(handle)) {\n\t\t\t\t\t\t\treturn handle.map(h => items[h]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}).then(undefined, err => {\n\t\t\t\tif (isCancellationError(err)) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\tproxy.$setError(instance, err);\n\n\t\t\t\treturn Promise.reject(err);\n\t\t\t});\n\t\t}\n\n\t\t$onItemSelected(handle: number): void {\n\t\t\tthis._onDidSelectItem?.(handle);\n\t\t}\n\n\t\t// ---- input\n\n\t\tshowInput(options?: InputBoxOptions, token: CancellationToken = CancellationToken.None): Promise<string | undefined> {\n\n\t\t\t// global validate fn used in callback below\n\t\t\tthis._validateInput = options?.validateInput;\n\n\t\t\treturn proxy.$input(options, typeof this._validateInput === 'function', token)\n\t\t\t\t.then(undefined, err => {\n\t\t\t\t\tif (isCancellationError(err)) {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t});\n\t\t}\n\n\t\tasync $validateInput(input: string): Promise<string | { content: string; severity: Severity } | null | undefined> {\n\t\t\tif (!this._validateInput) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst result = await this._validateInput(input);\n\t\t\tif (!result || typeof result === 'string') {\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tlet severity: Severity;\n\t\t\tswitch (result.severity) {\n\t\t\t\tcase InputBoxValidationSeverity.Info:\n\t\t\t\t\tseverity = Severity.Info;\n\t\t\t\t\tbreak;\n\t\t\t\tcase InputBoxValidationSeverity.Warning:\n\t\t\t\t\tseverity = Severity.Warning;\n\t\t\t\t\tbreak;\n\t\t\t\tcase InputBoxValidationSeverity.Error:\n\t\t\t\t\tseverity = Severity.Error;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tseverity = result.message ? Severity.Error : Severity.Ignore;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tcontent: result.message,\n\t\t\t\tseverity\n\t\t\t};\n\t\t}\n\n\t\t// ---- workspace folder picker\n\n\t\tasync showWorkspaceFolderPick(options?: WorkspaceFolderPickOptions, token = CancellationToken.None): Promise<WorkspaceFolder | undefined> {\n\t\t\tconst selectedFolder = await this._commands.executeCommand<WorkspaceFolder>('_workbench.pickWorkspaceFolder', [options]);\n\t\t\tif (!selectedFolder) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tconst workspaceFolders = await this._workspace.getWorkspaceFolders2();\n\t\t\tif (!workspaceFolders) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn workspaceFolders.find(folder => folder.uri.toString() === selectedFolder.uri.toString());\n\t\t}\n\n\t\t// ---- QuickInput\n\n\t\tcreateQuickPick<T extends QuickPickItem>(extension: IExtensionDescription): QuickPick<T> {\n\t\t\tconst session: ExtHostQuickPick<T> = new ExtHostQuickPick(extension, () => this._sessions.delete(session._id));\n\t\t\tthis._sessions.set(session._id, session);\n\t\t\treturn session;\n\t\t}\n\n\t\tcreateInputBox(extension: IExtensionDescription): InputBox {\n\t\t\tconst session: ExtHostInputBox = new ExtHostInputBox(extension, () => this._sessions.delete(session._id));\n\t\t\tthis._sessions.set(session._id, session);\n\t\t\treturn session;\n\t\t}\n\n\t\t$onDidChangeValue(sessionId: number, value: string): void {\n\t\t\tconst session = this._sessions.get(sessionId);\n\t\t\tsession?._fireDidChangeValue(value);\n\t\t}\n\n\t\t$onDidAccept(sessionId: number): void {\n\t\t\tconst session = this._sessions.get(sessionId);\n\t\t\tsession?._fireDidAccept();\n\t\t}\n\n\t\t$onDidChangeActive(sessionId: number, handles: number[]): void {\n\t\t\tconst session = this._sessions.get(sessionId);\n\t\t\tif (session instanceof ExtHostQuickPick) {\n\t\t\t\tsession._fireDidChangeActive(handles);\n\t\t\t}\n\t\t}\n\n\t\t$onDidChangeSelection(sessionId: number, handles: number[]): void {\n\t\t\tconst session = this._sessions.get(sessionId);\n\t\t\tif (session instanceof ExtHostQuickPick) {\n\t\t\t\tsession._fireDidChangeSelection(handles);\n\t\t\t}\n\t\t}\n\n\t\t$onDidTriggerButton(sessionId: number, handle: number): void {\n\t\t\tconst session = this._sessions.get(sessionId);\n\t\t\tsession?._fireDidTriggerButton(handle);\n\t\t}\n\n\t\t$onDidTriggerItemButton(sessionId: number, itemHandle: number, buttonHandle: number): void {\n\t\t\tconst session = this._sessions.get(sessionId);\n\t\t\tif (session instanceof ExtHostQuickPick) {\n\t\t\t\tsession._fireDidTriggerItemButton(itemHandle, buttonHandle);\n\t\t\t}\n\t\t}\n\n\t\t$onDidHide(sessionId: number): void {\n\t\t\tconst session = this._sessions.get(sessionId);\n\t\t\tsession?._fireDidHide();\n\t\t}\n\t}\n\n\tclass ExtHostQuickInput implements QuickInput {\n\n\t\tprivate static _nextId = 1;\n\t\t_id = ExtHostQuickPick._nextId++;\n\n\t\tprivate _title: string | undefined;\n\t\tprivate _steps: number | undefined;\n\t\tprivate _totalSteps: number | undefined;\n\t\tprivate _visible = false;\n\t\tprivate _expectingHide = false;\n\t\tprivate _enabled = true;\n\t\tprivate _busy = false;\n\t\tprivate _ignoreFocusOut = true;\n\t\tprivate _value = '';\n\t\tprivate _placeholder: string | undefined;\n\t\tprivate _buttons: QuickInputButton[] = [];\n\t\tprivate _handlesToButtons = new Map<number, QuickInputButton>();\n\t\tprivate readonly _onDidAcceptEmitter = new Emitter<void>();\n\t\tprivate readonly _onDidChangeValueEmitter = new Emitter<string>();\n\t\tprivate readonly _onDidTriggerButtonEmitter = new Emitter<QuickInputButton>();\n\t\tprivate readonly _onDidHideEmitter = new Emitter<void>();\n\t\tprivate _updateTimeout: any;\n\t\tprivate _pendingUpdate: TransferQuickInput = { id: this._id };\n\n\t\tprivate _disposed = false;\n\t\tprotected _disposables: IDisposable[] = [\n\t\t\tthis._onDidTriggerButtonEmitter,\n\t\t\tthis._onDidHideEmitter,\n\t\t\tthis._onDidAcceptEmitter,\n\t\t\tthis._onDidChangeValueEmitter\n\t\t];\n\n\t\tconstructor(protected _extension: IExtensionDescription, private _onDidDispose: () => void) {\n\t\t}\n\n\t\tget title() {\n\t\t\treturn this._title;\n\t\t}\n\n\t\tset title(title: string | undefined) {\n\t\t\tthis._title = title;\n\t\t\tthis.update({ title });\n\t\t}\n\n\t\tget step() {\n\t\t\treturn this._steps;\n\t\t}\n\n\t\tset step(step: number | undefined) {\n\t\t\tthis._steps = step;\n\t\t\tthis.update({ step });\n\t\t}\n\n\t\tget totalSteps() {\n\t\t\treturn this._totalSteps;\n\t\t}\n\n\t\tset totalSteps(totalSteps: number | undefined) {\n\t\t\tthis._totalSteps = totalSteps;\n\t\t\tthis.update({ totalSteps });\n\t\t}\n\n\t\tget enabled() {\n\t\t\treturn this._enabled;\n\t\t}\n\n\t\tset enabled(enabled: boolean) {\n\t\t\tthis._enabled = enabled;\n\t\t\tthis.update({ enabled });\n\t\t}\n\n\t\tget busy() {\n\t\t\treturn this._busy;\n\t\t}\n\n\t\tset busy(busy: boolean) {\n\t\t\tthis._busy = busy;\n\t\t\tthis.update({ busy });\n\t\t}\n\n\t\tget ignoreFocusOut() {\n\t\t\treturn this._ignoreFocusOut;\n\t\t}\n\n\t\tset ignoreFocusOut(ignoreFocusOut: boolean) {\n\t\t\tthis._ignoreFocusOut = ignoreFocusOut;\n\t\t\tthis.update({ ignoreFocusOut });\n\t\t}\n\n\t\tget value() {\n\t\t\treturn this._value;\n\t\t}\n\n\t\tset value(value: string) {\n\t\t\tthis._value = value;\n\t\t\tthis.update({ value });\n\t\t}\n\n\t\tget placeholder() {\n\t\t\treturn this._placeholder;\n\t\t}\n\n\t\tset placeholder(placeholder: string | undefined) {\n\t\t\tthis._placeholder = placeholder;\n\t\t\tthis.update({ placeholder });\n\t\t}\n\n\t\tonDidChangeValue = this._onDidChangeValueEmitter.event;\n\n\t\tonDidAccept = this._onDidAcceptEmitter.event;\n\n\t\tget buttons() {\n\t\t\treturn this._buttons;\n\t\t}\n\n\t\tset buttons(buttons: QuickInputButton[]) {\n\t\t\tconst allowedButtonLocation = isProposedApiEnabled(this._extension, 'quickInputButtonLocation');\n\t\t\tif (!allowedButtonLocation && buttons.some(button => button.location)) {\n\t\t\t\tconsole.warn(`Extension '${this._extension.identifier.value}' uses a button location which is proposed API that is only available when running out of dev or with the following command line switch: --enable-proposed-api ${this._extension.identifier.value}`);\n\t\t\t}\n\t\t\tthis._buttons = buttons.slice();\n\t\t\tthis._handlesToButtons.clear();\n\t\t\tbuttons.forEach((button, i) => {\n\t\t\t\tconst handle = button === QuickInputButtons.Back ? -1 : i;\n\t\t\t\tthis._handlesToButtons.set(handle, button);\n\t\t\t});\n\t\t\tthis.update({\n\t\t\t\tbuttons: buttons.map<TransferQuickInputButton>((button, i) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...getIconPathOrClass(button.iconPath),\n\t\t\t\t\t\ttooltip: button.tooltip,\n\t\t\t\t\t\thandle: button === QuickInputButtons.Back ? -1 : i,\n\t\t\t\t\t\tlocation: allowedButtonLocation ? button.location : undefined\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t\t});\n\t\t}\n\n\t\tonDidTriggerButton = this._onDidTriggerButtonEmitter.event;\n\n\t\tshow(): void {\n\t\t\tthis._visible = true;\n\t\t\tthis._expectingHide = true;\n\t\t\tthis.update({ visible: true });\n\t\t}\n\n\t\thide(): void {\n\t\t\tthis._visible = false;\n\t\t\tthis.update({ visible: false });\n\t\t}\n\n\t\tonDidHide = this._onDidHideEmitter.event;\n\n\t\t_fireDidAccept() {\n\t\t\tthis._onDidAcceptEmitter.fire();\n\t\t}\n\n\t\t_fireDidChangeValue(value: string) {\n\t\t\tthis._value = value;\n\t\t\tthis._onDidChangeValueEmitter.fire(value);\n\t\t}\n\n\t\t_fireDidTriggerButton(handle: number) {\n\t\t\tconst button = this._handlesToButtons.get(handle);\n\t\t\tif (button) {\n\t\t\t\tthis._onDidTriggerButtonEmitter.fire(button);\n\t\t\t}\n\t\t}\n\n\t\t_fireDidHide() {\n\t\t\tif (this._expectingHide) {\n\t\t\t\t// if this._visible is true, it means that .show() was called between\n\t\t\t\t// .hide() and .onDidHide. To ensure the correct number of onDidHide events\n\t\t\t\t// are emitted, we set this._expectingHide to this value so that\n\t\t\t\t// the next time .hide() is called, we can emit the event again.\n\t\t\t\t// Example:\n\t\t\t\t// .show() -> .hide() -> .show() -> .hide() should emit 2 onDidHide events.\n\t\t\t\t// .show() -> .hide() -> .hide() should emit 1 onDidHide event.\n\t\t\t\t// Fixes #135747\n\t\t\t\tthis._expectingHide = this._visible;\n\t\t\t\tthis._onDidHideEmitter.fire();\n\t\t\t}\n\t\t}\n\n\t\tdispose(): void {\n\t\t\tif (this._disposed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._disposed = true;\n\t\t\tthis._fireDidHide();\n\t\t\tthis._disposables = dispose(this._disposables);\n\t\t\tif (this._updateTimeout) {\n\t\t\t\tclearTimeout(this._updateTimeout);\n\t\t\t\tthis._updateTimeout = undefined;\n\t\t\t}\n\t\t\tthis._onDidDispose();\n\t\t\tproxy.$dispose(this._id);\n\t\t}\n\n\t\tprotected update(properties: Record<string, any>): void {\n\t\t\tif (this._disposed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfor (const key of Object.keys(properties)) {\n\t\t\t\tconst value = properties[key];\n\t\t\t\tthis._pendingUpdate[key] = value === undefined ? null : value;\n\t\t\t}\n\n\t\t\tif ('visible' in this._pendingUpdate) {\n\t\t\t\tif (this._updateTimeout) {\n\t\t\t\t\tclearTimeout(this._updateTimeout);\n\t\t\t\t\tthis._updateTimeout = undefined;\n\t\t\t\t}\n\t\t\t\tthis.dispatchUpdate();\n\t\t\t} else if (this._visible && !this._updateTimeout) {\n\t\t\t\t// Defer the update so that multiple changes to setters dont cause a redraw each\n\t\t\t\tthis._updateTimeout = setTimeout(() => {\n\t\t\t\t\tthis._updateTimeout = undefined;\n\t\t\t\t\tthis.dispatchUpdate();\n\t\t\t\t}, 0);\n\t\t\t}\n\t\t}\n\n\t\tprivate dispatchUpdate() {\n\t\t\tproxy.$createOrUpdate(this._pendingUpdate);\n\t\t\tthis._pendingUpdate = { id: this._id };\n\t\t}\n\t}\n\n\tfunction getIconUris(iconPath: QuickInputButton['iconPath']): { dark: URI; light?: URI } | { id: string } {\n\t\tif (iconPath instanceof ThemeIcon) {\n\t\t\treturn { id: iconPath.id };\n\t\t}\n\t\tconst dark = getDarkIconUri(iconPath as URI | { light: URI; dark: URI });\n\t\tconst light = getLightIconUri(iconPath as URI | { light: URI; dark: URI });\n\t\t// Tolerate strings: https://github.com/microsoft/vscode/issues/110432#issuecomment-726144556\n\t\treturn {\n\t\t\tdark: typeof dark === 'string' ? URI.file(dark) : dark,\n\t\t\tlight: typeof light === 'string' ? URI.file(light) : light\n\t\t};\n\t}\n\n\tfunction getLightIconUri(iconPath: URI | { light: URI; dark: URI }) {\n\t\treturn typeof iconPath === 'object' && 'light' in iconPath ? iconPath.light : iconPath;\n\t}\n\n\tfunction getDarkIconUri(iconPath: URI | { light: URI; dark: URI }) {\n\t\treturn typeof iconPath === 'object' && 'dark' in iconPath ? iconPath.dark : iconPath;\n\t}\n\n\tfunction getIconPathOrClass(icon: QuickInputButton['iconPath']) {\n\t\tconst iconPathOrIconClass = getIconUris(icon);\n\t\tlet iconPath: { dark: URI; light?: URI | undefined } | undefined;\n\t\tlet iconClass: string | undefined;\n\t\tif ('id' in iconPathOrIconClass) {\n\t\t\ticonClass = ThemeIconUtils.asClassName(iconPathOrIconClass);\n\t\t} else {\n\t\t\ticonPath = iconPathOrIconClass;\n\t\t}\n\n\t\treturn {\n\t\t\ticonPath,\n\t\t\ticonClass\n\t\t};\n\t}\n\n\tclass ExtHostQuickPick<T extends QuickPickItem> extends ExtHostQuickInput implements QuickPick<T> {\n\n\t\tprivate _items: T[] = [];\n\t\tprivate _handlesToItems = new Map<number, T>();\n\t\tprivate _itemsToHandles = new Map<T, number>();\n\t\tprivate _canSelectMany = false;\n\t\tprivate _matchOnDescription = true;\n\t\tprivate _matchOnDetail = true;\n\t\tprivate _sortByLabel = true;\n\t\tprivate _keepScrollPosition = false;\n\t\tprivate _activeItems: T[] = [];\n\t\tprivate readonly _onDidChangeActiveEmitter = new Emitter<T[]>();\n\t\tprivate _selectedItems: T[] = [];\n\t\tprivate readonly _onDidChangeSelectionEmitter = new Emitter<T[]>();\n\t\tprivate readonly _onDidTriggerItemButtonEmitter = new Emitter<QuickPickItemButtonEvent<T>>();\n\n\t\tconstructor(extension: IExtensionDescription, onDispose: () => void) {\n\t\t\tsuper(extension, onDispose);\n\t\t\tthis._disposables.push(\n\t\t\t\tthis._onDidChangeActiveEmitter,\n\t\t\t\tthis._onDidChangeSelectionEmitter,\n\t\t\t\tthis._onDidTriggerItemButtonEmitter\n\t\t\t);\n\t\t\tthis.update({ type: 'quickPick' });\n\t\t}\n\n\t\tget items() {\n\t\t\treturn this._items;\n\t\t}\n\n\t\tset items(items: T[]) {\n\t\t\tthis._items = items.slice();\n\t\t\tthis._handlesToItems.clear();\n\t\t\tthis._itemsToHandles.clear();\n\t\t\titems.forEach((item, i) => {\n\t\t\t\tthis._handlesToItems.set(i, item);\n\t\t\t\tthis._itemsToHandles.set(item, i);\n\t\t\t});\n\n\t\t\tconst allowedTooltips = isProposedApiEnabled(this._extension, 'quickPickItemTooltip');\n\n\t\t\tconst pickItems: TransferQuickPickItemOrSeparator[] = [];\n\t\t\tfor (let handle = 0; handle < items.length; handle++) {\n\t\t\t\tconst item = items[handle];\n\t\t\t\tif (item.kind === QuickPickItemKind.Separator) {\n\t\t\t\t\tpickItems.push({ type: 'separator', label: item.label });\n\t\t\t\t} else {\n\t\t\t\t\tif (item.tooltip && !allowedTooltips) {\n\t\t\t\t\t\tconsole.warn(`Extension '${this._extension.identifier.value}' uses a tooltip which is proposed API that is only available when running out of dev or with the following command line switch: --enable-proposed-api ${this._extension.identifier.value}`);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst icon = (item.iconPath) ? getIconPathOrClass(item.iconPath) : undefined;\n\t\t\t\t\tpickItems.push({\n\t\t\t\t\t\thandle,\n\t\t\t\t\t\tlabel: item.label,\n\t\t\t\t\t\ticonPath: icon?.iconPath,\n\t\t\t\t\t\ticonClass: icon?.iconClass,\n\t\t\t\t\t\tdescription: item.description,\n\t\t\t\t\t\tdetail: item.detail,\n\t\t\t\t\t\tpicked: item.picked,\n\t\t\t\t\t\talwaysShow: item.alwaysShow,\n\t\t\t\t\t\ttooltip: allowedTooltips ? MarkdownString.fromStrict(item.tooltip) : undefined,\n\t\t\t\t\t\tbuttons: item.buttons?.map<TransferQuickInputButton>((button, i) => {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...getIconPathOrClass(button.iconPath),\n\t\t\t\t\t\t\t\ttooltip: button.tooltip,\n\t\t\t\t\t\t\t\thandle: i\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}),\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.update({\n\t\t\t\titems: pickItems,\n\t\t\t});\n\t\t}\n\n\t\tget canSelectMany() {\n\t\t\treturn this._canSelectMany;\n\t\t}\n\n\t\tset canSelectMany(canSelectMany: boolean) {\n\t\t\tthis._canSelectMany = canSelectMany;\n\t\t\tthis.update({ canSelectMany });\n\t\t}\n\n\t\tget matchOnDescription() {\n\t\t\treturn this._matchOnDescription;\n\t\t}\n\n\t\tset matchOnDescription(matchOnDescription: boolean) {\n\t\t\tthis._matchOnDescription = matchOnDescription;\n\t\t\tthis.update({ matchOnDescription });\n\t\t}\n\n\t\tget matchOnDetail() {\n\t\t\treturn this._matchOnDetail;\n\t\t}\n\n\t\tset matchOnDetail(matchOnDetail: boolean) {\n\t\t\tthis._matchOnDetail = matchOnDetail;\n\t\t\tthis.update({ matchOnDetail });\n\t\t}\n\n\t\tget sortByLabel() {\n\t\t\treturn this._sortByLabel;\n\t\t}\n\n\t\tset sortByLabel(sortByLabel: boolean) {\n\t\t\tthis._sortByLabel = sortByLabel;\n\t\t\tthis.update({ sortByLabel });\n\t\t}\n\n\t\tget keepScrollPosition() {\n\t\t\treturn this._keepScrollPosition;\n\t\t}\n\n\t\tset keepScrollPosition(keepScrollPosition: boolean) {\n\t\t\tthis._keepScrollPosition = keepScrollPosition;\n\t\t\tthis.update({ keepScrollPosition });\n\t\t}\n\n\t\tget activeItems() {\n\t\t\treturn this._activeItems;\n\t\t}\n\n\t\tset activeItems(activeItems: T[]) {\n\t\t\tthis._activeItems = activeItems.filter(item => this._itemsToHandles.has(item));\n\t\t\tthis.update({ activeItems: this._activeItems.map(item => this._itemsToHandles.get(item)) });\n\t\t}\n\n\t\tonDidChangeActive = this._onDidChangeActiveEmitter.event;\n\n\t\tget selectedItems() {\n\t\t\treturn this._selectedItems;\n\t\t}\n\n\t\tset selectedItems(selectedItems: T[]) {\n\t\t\tthis._selectedItems = selectedItems.filter(item => this._itemsToHandles.has(item));\n\t\t\tthis.update({ selectedItems: this._selectedItems.map(item => this._itemsToHandles.get(item)) });\n\t\t}\n\n\t\tonDidChangeSelection = this._onDidChangeSelectionEmitter.event;\n\n\t\t_fireDidChangeActive(handles: number[]) {\n\t\t\tconst items = coalesce(handles.map(handle => this._handlesToItems.get(handle)));\n\t\t\tthis._activeItems = items;\n\t\t\tthis._onDidChangeActiveEmitter.fire(items);\n\t\t}\n\n\t\t_fireDidChangeSelection(handles: number[]) {\n\t\t\tconst items = coalesce(handles.map(handle => this._handlesToItems.get(handle)));\n\t\t\tthis._selectedItems = items;\n\t\t\tthis._onDidChangeSelectionEmitter.fire(items);\n\t\t}\n\n\t\tonDidTriggerItemButton = this._onDidTriggerItemButtonEmitter.event;\n\n\t\t_fireDidTriggerItemButton(itemHandle: number, buttonHandle: number) {\n\t\t\tconst item = this._handlesToItems.get(itemHandle)!;\n\t\t\tif (!item || !item.buttons || !item.buttons.length) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst button = item.buttons[buttonHandle];\n\t\t\tif (button) {\n\t\t\t\tthis._onDidTriggerItemButtonEmitter.fire({\n\t\t\t\t\tbutton,\n\t\t\t\t\titem\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tclass ExtHostInputBox extends ExtHostQuickInput implements InputBox {\n\n\t\tprivate _password = false;\n\t\tprivate _prompt: string | undefined;\n\t\tprivate _valueSelection: readonly [number, number] | undefined;\n\t\tprivate _validationMessage: string | InputBoxValidationMessage | undefined;\n\n\t\tconstructor(extension: IExtensionDescription, onDispose: () => void) {\n\t\t\tsuper(extension, onDispose);\n\t\t\tthis.update({ type: 'inputBox' });\n\t\t}\n\n\t\tget password() {\n\t\t\treturn this._password;\n\t\t}\n\n\t\tset password(password: boolean) {\n\t\t\tthis._password = password;\n\t\t\tthis.update({ password });\n\t\t}\n\n\t\tget prompt() {\n\t\t\treturn this._prompt;\n\t\t}\n\n\t\tset prompt(prompt: string | undefined) {\n\t\t\tthis._prompt = prompt;\n\t\t\tthis.update({ prompt });\n\t\t}\n\n\t\tget valueSelection() {\n\t\t\treturn this._valueSelection;\n\t\t}\n\n\t\tset valueSelection(valueSelection: readonly [number, number] | undefined) {\n\t\t\tthis._valueSelection = valueSelection;\n\t\t\tthis.update({ valueSelection });\n\t\t}\n\n\t\tget validationMessage() {\n\t\t\treturn this._validationMessage;\n\t\t}\n\n\t\tset validationMessage(validationMessage: string | InputBoxValidationMessage | undefined) {\n\t\t\tthis._validationMessage = validationMessage;\n\t\t\tif (!validationMessage) {\n\t\t\t\tthis.update({ validationMessage: undefined, severity: Severity.Ignore });\n\t\t\t} else if (typeof validationMessage === 'string') {\n\t\t\t\tthis.update({ validationMessage, severity: Severity.Error });\n\t\t\t} else {\n\t\t\t\tthis.update({ validationMessage: validationMessage.message, severity: validationMessage.severity ?? Severity.Error });\n\t\t\t}\n\t\t}\n\t}\n\n\treturn new ExtHostQuickOpenImpl(workspace, commands);\n}\n"],
  "mappings": "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",
  "names": ["workspace", "commands"]
}
