var l=Object.defineProperty;var n=Object.getOwnPropertyDescriptor;var p=(i,o,e,r)=>{for(var t=r>1?void 0:r?n(o,e):o,s=i.length-1,L;s>=0;s--)(L=i[s])&&(t=(r?L(o,e,t):L(t))||t);return r&&t&&l(o,e,t),t},a=(i,o)=>(e,r)=>o(e,r,i);import{revive as v}from"../../../base/common/marshalling.js";import{URI as h}from"../../../base/common/uri.js";import{AbstractLoggerService as d,AbstractMessageLogger as c}from"../../../platform/log/common/log.js";import{MainContext as f}from"./extHost.protocol.js";import{IExtHostInitDataService as m}from"./extHostInitDataService.js";import{IExtHostRpcService as x}from"./extHostRpcService.js";let g=class extends d{_proxy;constructor(o,e){super(e.logLevel,e.logsLocation,e.loggers.map(r=>v(r))),this._proxy=o.getProxy(f.MainThreadLogger)}$setLogLevel(o,e){e?this.setLogLevel(h.revive(e),o):this.setLogLevel(o)}setVisibility(o,e){super.setVisibility(o,e),this._proxy.$setVisibility(o,e)}doCreateLogger(o,e,r){return new y(this._proxy,o,e,r)}};g=p([a(0,x),a(1,m)],g);class y extends c{constructor(e,r,t,s){super(s?.logLevel==="always");this.proxy=e;this.file=r;this.setLevel(t),this.proxy.$createLogger(r,s).then(()=>{this.doLog(this.buffer),this.isLoggerCreated=!0})}isLoggerCreated=!1;buffer=[];log(e,r){const t=[[e,r]];this.isLoggerCreated?this.doLog(t):this.buffer.push(...t)}doLog(e){this.proxy.$log(this.file,e)}flush(){this.proxy.$flush(this.file)}}export{g as ExtHostLoggerService};
