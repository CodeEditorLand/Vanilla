import{illegalArgument as d}from"../../../base/common/errors.js";import*as i from"./extHostTypeConverters.js";import*as s from"./extHostTypes.js";class r{constructor(o,e,t,n,a,c){this.id=o;this._proxy=e;this.notebookData=t;this._selections=a,this._visibleRanges=n,this._viewColumn=c}static apiEditorsToExtHost=new WeakMap;_selections=[];_visibleRanges=[];_viewColumn;_visible=!1;_editor;get apiEditor(){if(!this._editor){const o=this;this._editor={get notebook(){return o.notebookData.apiNotebook},get selection(){return o._selections[0]},set selection(e){this.selections=[e]},get selections(){return o._selections},set selections(e){if(!Array.isArray(e)||!e.every(s.NotebookRange.isNotebookRange))throw d("selections");o._selections=e,o._trySetSelections(e)},get visibleRanges(){return o._visibleRanges},revealRange(e,t){o._proxy.$tryRevealRange(o.id,i.NotebookRange.from(e),t??s.NotebookEditorRevealType.Default)},get viewColumn(){return o._viewColumn},[Symbol.for("debug.description")](){return`NotebookEditor(${this.notebook.uri.toString()})`}},r.apiEditorsToExtHost.set(this._editor,this)}return this._editor}get visible(){return this._visible}_acceptVisibility(o){this._visible=o}_acceptVisibleRanges(o){this._visibleRanges=o}_acceptSelections(o){this._selections=o}_trySetSelections(o){this._proxy.$trySetSelections(this.id,o.map(i.NotebookRange.from))}_acceptViewColumn(o){this._viewColumn=o}}export{r as ExtHostNotebookEditor};
