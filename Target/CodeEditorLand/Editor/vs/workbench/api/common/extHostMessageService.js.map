{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostMessageService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type * as vscode from \"vscode\";\nimport type Severity from \"../../../base/common/severity.js\";\nimport type { IExtensionDescription } from \"../../../platform/extensions/common/extensions.js\";\nimport { ILogService } from \"../../../platform/log/common/log.js\";\nimport { checkProposedApiEnabled } from \"../../services/extensions/common/extensions.js\";\nimport {\n\ttype IMainContext,\n\tMainContext,\n\ttype MainThreadMessageOptions,\n\ttype MainThreadMessageServiceShape,\n} from \"./extHost.protocol.js\";\n\nfunction isMessageItem(item: any): item is vscode.MessageItem {\n\treturn item && item.title;\n}\n\nexport class ExtHostMessageService {\n\tprivate _proxy: MainThreadMessageServiceShape;\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\t@ILogService private readonly _logService: ILogService,\n\t) {\n\t\tthis._proxy = mainContext.getProxy(\n\t\t\tMainContext.MainThreadMessageService,\n\t\t);\n\t}\n\n\tshowMessage(\n\t\textension: IExtensionDescription,\n\t\tseverity: Severity,\n\t\tmessage: string,\n\t\toptionsOrFirstItem: vscode.MessageOptions | string | undefined,\n\t\trest: string[],\n\t): Promise<string | undefined>;\n\tshowMessage(\n\t\textension: IExtensionDescription,\n\t\tseverity: Severity,\n\t\tmessage: string,\n\t\toptionsOrFirstItem:\n\t\t\t| vscode.MessageOptions\n\t\t\t| vscode.MessageItem\n\t\t\t| undefined,\n\t\trest: vscode.MessageItem[],\n\t): Promise<vscode.MessageItem | undefined>;\n\tshowMessage(\n\t\textension: IExtensionDescription,\n\t\tseverity: Severity,\n\t\tmessage: string,\n\t\toptionsOrFirstItem:\n\t\t\t| vscode.MessageOptions\n\t\t\t| vscode.MessageItem\n\t\t\t| string\n\t\t\t| undefined,\n\t\trest: Array<vscode.MessageItem | string>,\n\t): Promise<string | vscode.MessageItem | undefined>;\n\tshowMessage(\n\t\textension: IExtensionDescription,\n\t\tseverity: Severity,\n\t\tmessage: string,\n\t\toptionsOrFirstItem:\n\t\t\t| vscode.MessageOptions\n\t\t\t| string\n\t\t\t| vscode.MessageItem\n\t\t\t| undefined,\n\t\trest: Array<string | vscode.MessageItem>,\n\t): Promise<string | vscode.MessageItem | undefined> {\n\t\tconst options: MainThreadMessageOptions = {\n\t\t\tsource: {\n\t\t\t\tidentifier: extension.identifier,\n\t\t\t\tlabel: extension.displayName || extension.name,\n\t\t\t},\n\t\t};\n\t\tlet items: (string | vscode.MessageItem)[];\n\n\t\tif (\n\t\t\ttypeof optionsOrFirstItem === \"string\" ||\n\t\t\tisMessageItem(optionsOrFirstItem)\n\t\t) {\n\t\t\titems = [optionsOrFirstItem, ...rest];\n\t\t} else {\n\t\t\toptions.modal = optionsOrFirstItem?.modal;\n\t\t\toptions.useCustom = optionsOrFirstItem?.useCustom;\n\t\t\toptions.detail = optionsOrFirstItem?.detail;\n\t\t\titems = rest;\n\t\t}\n\n\t\tif (options.useCustom) {\n\t\t\tcheckProposedApiEnabled(extension, \"resolvers\");\n\t\t}\n\n\t\tconst commands: {\n\t\t\ttitle: string;\n\t\t\tisCloseAffordance: boolean;\n\t\t\thandle: number;\n\t\t}[] = [];\n\t\tlet hasCloseAffordance = false;\n\n\t\tfor (let handle = 0; handle < items.length; handle++) {\n\t\t\tconst command = items[handle];\n\t\t\tif (typeof command === \"string\") {\n\t\t\t\tcommands.push({\n\t\t\t\t\ttitle: command,\n\t\t\t\t\thandle,\n\t\t\t\t\tisCloseAffordance: false,\n\t\t\t\t});\n\t\t\t} else if (typeof command === \"object\") {\n\t\t\t\tconst { title, isCloseAffordance } = command;\n\t\t\t\tcommands.push({\n\t\t\t\t\ttitle,\n\t\t\t\t\tisCloseAffordance: !!isCloseAffordance,\n\t\t\t\t\thandle,\n\t\t\t\t});\n\t\t\t\tif (isCloseAffordance) {\n\t\t\t\t\tif (hasCloseAffordance) {\n\t\t\t\t\t\tthis._logService.warn(\n\t\t\t\t\t\t\t`[${extension.identifier}] Only one message item can have 'isCloseAffordance':`,\n\t\t\t\t\t\t\tcommand,\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\thasCloseAffordance = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._logService.warn(\n\t\t\t\t\t`[${extension.identifier}] Invalid message item:`,\n\t\t\t\t\tcommand,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn this._proxy\n\t\t\t.$showMessage(severity, message, options, commands)\n\t\t\t.then((handle) => {\n\t\t\t\tif (typeof handle === \"number\") {\n\t\t\t\t\treturn items[handle];\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAQA,SAAS,mBAAmB;AAC5B,SAAS,+BAA+B;AACxC;AAAA,EAEC;AAAA,OAGM;AAEP,SAAS,cAAc,MAAuC;AAC7D,SAAO,QAAQ,KAAK;AACrB;AAFS;AAIF,IAAM,wBAAN,MAA4B;AAAA,EAGlC,YACC,aAC8B,aAC7B;AAD6B;AAE9B,SAAK,SAAS,YAAY;AAAA,MACzB,YAAY;AAAA,IACb;AAAA,EACD;AAAA,EA/BD,OAqBmC;AAAA;AAAA;AAAA,EAC1B;AAAA,EAuCR,YACC,WACA,UACA,SACA,oBAKA,MACmD;AACnD,UAAM,UAAoC;AAAA,MACzC,QAAQ;AAAA,QACP,YAAY,UAAU;AAAA,QACtB,OAAO,UAAU,eAAe,UAAU;AAAA,MAC3C;AAAA,IACD;AACA,QAAI;AAEJ,QACC,OAAO,uBAAuB,YAC9B,cAAc,kBAAkB,GAC/B;AACD,cAAQ,CAAC,oBAAoB,GAAG,IAAI;AAAA,IACrC,OAAO;AACN,cAAQ,QAAQ,oBAAoB;AACpC,cAAQ,YAAY,oBAAoB;AACxC,cAAQ,SAAS,oBAAoB;AACrC,cAAQ;AAAA,IACT;AAEA,QAAI,QAAQ,WAAW;AACtB,8BAAwB,WAAW,WAAW;AAAA,IAC/C;AAEA,UAAM,WAIA,CAAC;AACP,QAAI,qBAAqB;AAEzB,aAAS,SAAS,GAAG,SAAS,MAAM,QAAQ,UAAU;AACrD,YAAM,UAAU,MAAM,MAAM;AAC5B,UAAI,OAAO,YAAY,UAAU;AAChC,iBAAS,KAAK;AAAA,UACb,OAAO;AAAA,UACP;AAAA,UACA,mBAAmB;AAAA,QACpB,CAAC;AAAA,MACF,WAAW,OAAO,YAAY,UAAU;AACvC,cAAM,EAAE,OAAO,kBAAkB,IAAI;AACrC,iBAAS,KAAK;AAAA,UACb;AAAA,UACA,mBAAmB,CAAC,CAAC;AAAA,UACrB;AAAA,QACD,CAAC;AACD,YAAI,mBAAmB;AACtB,cAAI,oBAAoB;AACvB,iBAAK,YAAY;AAAA,cAChB,IAAI,UAAU,UAAU;AAAA,cACxB;AAAA,YACD;AAAA,UACD,OAAO;AACN,iCAAqB;AAAA,UACtB;AAAA,QACD;AAAA,MACD,OAAO;AACN,aAAK,YAAY;AAAA,UAChB,IAAI,UAAU,UAAU;AAAA,UACxB;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAEA,WAAO,KAAK,OACV,aAAa,UAAU,SAAS,SAAS,QAAQ,EACjD,KAAK,CAAC,WAAW;AACjB,UAAI,OAAO,WAAW,UAAU;AAC/B,eAAO,MAAM,MAAM;AAAA,MACpB;AACA,aAAO;AAAA,IACR,CAAC;AAAA,EACH;AACD;AA5Ha,wBAAN;AAAA,EAKJ;AAAA,GALU;",
  "names": []
}
