{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostFileSystemEventService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type * as vscode from \"vscode\";\nimport type { CancellationToken } from \"../../../base/common/cancellation.js\";\nimport {\n\tAsyncEmitter,\n\tEmitter,\n\ttype Event,\n\ttype IWaitUntil,\n\ttype IWaitUntilData,\n} from \"../../../base/common/event.js\";\nimport { GLOBSTAR, GLOB_SPLIT, parse } from \"../../../base/common/glob.js\";\nimport { Lazy } from \"../../../base/common/lazy.js\";\nimport { URI } from \"../../../base/common/uri.js\";\nimport type { IExtensionDescription } from \"../../../platform/extensions/common/extensions.js\";\nimport {\n\tFileChangeFilter,\n\tFileOperation,\n} from \"../../../platform/files/common/files.js\";\nimport type { ILogService } from \"../../../platform/log/common/log.js\";\nimport {\n\ttype ExtHostFileSystemEventServiceShape,\n\ttype FileSystemEvents,\n\ttype IMainContext,\n\ttype IRelativePatternDto,\n\ttype IWillRunFileOperationParticipation,\n\ttype IWorkspaceEditDto,\n\tMainContext,\n\ttype SourceTargetPair,\n} from \"./extHost.protocol.js\";\nimport type { ExtHostDocumentsAndEditors } from \"./extHostDocumentsAndEditors.js\";\nimport * as typeConverter from \"./extHostTypeConverters.js\";\nimport { Disposable, WorkspaceEdit } from \"./extHostTypes.js\";\nimport type { IExtHostWorkspace } from \"./extHostWorkspace.js\";\n\nexport interface FileSystemWatcherCreateOptions {\n\treadonly correlate: boolean;\n\n\treadonly ignoreCreateEvents?: boolean;\n\treadonly ignoreChangeEvents?: boolean;\n\treadonly ignoreDeleteEvents?: boolean;\n\n\treadonly excludes?: string[];\n}\n\nclass FileSystemWatcher implements vscode.FileSystemWatcher {\n\tprivate readonly session = Math.random();\n\n\tprivate readonly _onDidCreate = new Emitter<vscode.Uri>();\n\tprivate readonly _onDidChange = new Emitter<vscode.Uri>();\n\tprivate readonly _onDidDelete = new Emitter<vscode.Uri>();\n\n\tprivate _disposable: Disposable;\n\tprivate _config: number;\n\n\tget ignoreCreateEvents(): boolean {\n\t\treturn Boolean(this._config & 0b001);\n\t}\n\n\tget ignoreChangeEvents(): boolean {\n\t\treturn Boolean(this._config & 0b010);\n\t}\n\n\tget ignoreDeleteEvents(): boolean {\n\t\treturn Boolean(this._config & 0b100);\n\t}\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\tworkspace: IExtHostWorkspace,\n\t\textension: IExtensionDescription,\n\t\tdispatcher: Event<FileSystemEvents>,\n\t\tglobPattern: string | IRelativePatternDto,\n\t\toptions?: FileSystemWatcherCreateOptions,\n\t) {\n\t\tthis._config = 0;\n\t\tif (options?.ignoreCreateEvents) {\n\t\t\tthis._config += 0b001;\n\t\t}\n\t\tif (options?.ignoreChangeEvents) {\n\t\t\tthis._config += 0b010;\n\t\t}\n\t\tif (options?.ignoreDeleteEvents) {\n\t\t\tthis._config += 0b100;\n\t\t}\n\n\t\tconst parsedPattern = parse(globPattern);\n\n\t\t// 1.64.x behaviour change: given the new support to watch any folder\n\t\t// we start to ignore events outside the workspace when only a string\n\t\t// pattern is provided to avoid sending events to extensions that are\n\t\t// unexpected.\n\t\t// https://github.com/microsoft/vscode/issues/3025\n\t\tconst excludeOutOfWorkspaceEvents = typeof globPattern === \"string\";\n\n\t\t// 1.84.x introduces new proposed API for a watcher to set exclude\n\t\t// rules. In these cases, we turn the file watcher into correlation\n\t\t// mode and ignore any event that does not match the correlation ID.\n\t\tconst excludeUncorrelatedEvents = options?.correlate;\n\n\t\tconst subscription = dispatcher((events) => {\n\t\t\tif (\n\t\t\t\ttypeof events.session === \"number\" &&\n\t\t\t\tevents.session !== this.session\n\t\t\t) {\n\t\t\t\treturn; // ignore events from other file watchers that are in correlation mode\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\texcludeUncorrelatedEvents &&\n\t\t\t\ttypeof events.session === \"undefined\"\n\t\t\t) {\n\t\t\t\treturn; // ignore events from other non-correlating file watcher when we are in correlation mode\n\t\t\t}\n\n\t\t\tif (!options?.ignoreCreateEvents) {\n\t\t\t\tfor (const created of events.created) {\n\t\t\t\t\tconst uri = URI.revive(created);\n\t\t\t\t\tif (\n\t\t\t\t\t\tparsedPattern(uri.fsPath) &&\n\t\t\t\t\t\t(!excludeOutOfWorkspaceEvents ||\n\t\t\t\t\t\t\tworkspace.getWorkspaceFolder(uri))\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis._onDidCreate.fire(uri);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!options?.ignoreChangeEvents) {\n\t\t\t\tfor (const changed of events.changed) {\n\t\t\t\t\tconst uri = URI.revive(changed);\n\t\t\t\t\tif (\n\t\t\t\t\t\tparsedPattern(uri.fsPath) &&\n\t\t\t\t\t\t(!excludeOutOfWorkspaceEvents ||\n\t\t\t\t\t\t\tworkspace.getWorkspaceFolder(uri))\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis._onDidChange.fire(uri);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!options?.ignoreDeleteEvents) {\n\t\t\t\tfor (const deleted of events.deleted) {\n\t\t\t\t\tconst uri = URI.revive(deleted);\n\t\t\t\t\tif (\n\t\t\t\t\t\tparsedPattern(uri.fsPath) &&\n\t\t\t\t\t\t(!excludeOutOfWorkspaceEvents ||\n\t\t\t\t\t\t\tworkspace.getWorkspaceFolder(uri))\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis._onDidDelete.fire(uri);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis._disposable = Disposable.from(\n\t\t\tthis.ensureWatching(\n\t\t\t\tmainContext,\n\t\t\t\textension,\n\t\t\t\tglobPattern,\n\t\t\t\toptions,\n\t\t\t\toptions?.correlate,\n\t\t\t),\n\t\t\tthis._onDidCreate,\n\t\t\tthis._onDidChange,\n\t\t\tthis._onDidDelete,\n\t\t\tsubscription,\n\t\t);\n\t}\n\n\tprivate ensureWatching(\n\t\tmainContext: IMainContext,\n\t\textension: IExtensionDescription,\n\t\tglobPattern: string | IRelativePatternDto,\n\t\toptions: FileSystemWatcherCreateOptions | undefined,\n\t\tcorrelate: boolean | undefined,\n\t): Disposable {\n\t\tconst disposable = Disposable.from();\n\n\t\tif (typeof globPattern === \"string\") {\n\t\t\treturn disposable; // workspace is already watched by default, no need to watch again!\n\t\t}\n\n\t\tif (\n\t\t\toptions?.ignoreChangeEvents &&\n\t\t\toptions?.ignoreCreateEvents &&\n\t\t\toptions?.ignoreDeleteEvents\n\t\t) {\n\t\t\treturn disposable; // no need to watch if we ignore all events\n\t\t}\n\n\t\tconst proxy = mainContext.getProxy(\n\t\t\tMainContext.MainThreadFileSystemEventService,\n\t\t);\n\n\t\tlet recursive = false;\n\t\tif (\n\t\t\tglobPattern.pattern.includes(GLOBSTAR) ||\n\t\t\tglobPattern.pattern.includes(GLOB_SPLIT)\n\t\t) {\n\t\t\trecursive = true; // only watch recursively if pattern indicates the need for it\n\t\t}\n\n\t\tlet filter: FileChangeFilter | undefined;\n\t\tif (correlate) {\n\t\t\tif (\n\t\t\t\toptions?.ignoreChangeEvents ||\n\t\t\t\toptions?.ignoreCreateEvents ||\n\t\t\t\toptions?.ignoreDeleteEvents\n\t\t\t) {\n\t\t\t\tfilter =\n\t\t\t\t\tFileChangeFilter.UPDATED |\n\t\t\t\t\tFileChangeFilter.ADDED |\n\t\t\t\t\tFileChangeFilter.DELETED;\n\n\t\t\t\tif (options?.ignoreChangeEvents) {\n\t\t\t\t\tfilter &= ~FileChangeFilter.UPDATED;\n\t\t\t\t}\n\n\t\t\t\tif (options?.ignoreCreateEvents) {\n\t\t\t\t\tfilter &= ~FileChangeFilter.ADDED;\n\t\t\t\t}\n\n\t\t\t\tif (options?.ignoreDeleteEvents) {\n\t\t\t\t\tfilter &= ~FileChangeFilter.DELETED;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tproxy.$watch(\n\t\t\textension.identifier.value,\n\t\t\tthis.session,\n\t\t\tglobPattern.baseUri,\n\t\t\t{ recursive, excludes: options?.excludes ?? [], filter },\n\t\t\tBoolean(correlate),\n\t\t);\n\n\t\treturn Disposable.from({ dispose: () => proxy.$unwatch(this.session) });\n\t}\n\n\tdispose() {\n\t\tthis._disposable.dispose();\n\t}\n\n\tget onDidCreate(): Event<vscode.Uri> {\n\t\treturn this._onDidCreate.event;\n\t}\n\n\tget onDidChange(): Event<vscode.Uri> {\n\t\treturn this._onDidChange.event;\n\t}\n\n\tget onDidDelete(): Event<vscode.Uri> {\n\t\treturn this._onDidDelete.event;\n\t}\n}\n\ninterface IExtensionListener<E> {\n\textension: IExtensionDescription;\n\t(e: E): any;\n}\n\nclass LazyRevivedFileSystemEvents implements FileSystemEvents {\n\tconstructor(private readonly _events: FileSystemEvents) {}\n\n\treadonly session = this._events.session;\n\n\tprivate _created = new Lazy(\n\t\t() => this._events.created.map(URI.revive) as URI[],\n\t);\n\tget created(): URI[] {\n\t\treturn this._created.value;\n\t}\n\n\tprivate _changed = new Lazy(\n\t\t() => this._events.changed.map(URI.revive) as URI[],\n\t);\n\tget changed(): URI[] {\n\t\treturn this._changed.value;\n\t}\n\n\tprivate _deleted = new Lazy(\n\t\t() => this._events.deleted.map(URI.revive) as URI[],\n\t);\n\tget deleted(): URI[] {\n\t\treturn this._deleted.value;\n\t}\n}\n\nexport class ExtHostFileSystemEventService\n\timplements ExtHostFileSystemEventServiceShape\n{\n\tprivate readonly _onFileSystemEvent = new Emitter<FileSystemEvents>();\n\n\tprivate readonly _onDidRenameFile = new Emitter<vscode.FileRenameEvent>();\n\tprivate readonly _onDidCreateFile = new Emitter<vscode.FileCreateEvent>();\n\tprivate readonly _onDidDeleteFile = new Emitter<vscode.FileDeleteEvent>();\n\tprivate readonly _onWillRenameFile =\n\t\tnew AsyncEmitter<vscode.FileWillRenameEvent>();\n\tprivate readonly _onWillCreateFile =\n\t\tnew AsyncEmitter<vscode.FileWillCreateEvent>();\n\tprivate readonly _onWillDeleteFile =\n\t\tnew AsyncEmitter<vscode.FileWillDeleteEvent>();\n\n\treadonly onDidRenameFile: Event<vscode.FileRenameEvent> =\n\t\tthis._onDidRenameFile.event;\n\treadonly onDidCreateFile: Event<vscode.FileCreateEvent> =\n\t\tthis._onDidCreateFile.event;\n\treadonly onDidDeleteFile: Event<vscode.FileDeleteEvent> =\n\t\tthis._onDidDeleteFile.event;\n\n\tconstructor(\n\t\tprivate readonly _mainContext: IMainContext,\n\t\tprivate readonly _logService: ILogService,\n\t\tprivate readonly _extHostDocumentsAndEditors: ExtHostDocumentsAndEditors,\n\t) {\n\t\t//\n\t}\n\n\t//--- file events\n\n\tcreateFileSystemWatcher(\n\t\tworkspace: IExtHostWorkspace,\n\t\textension: IExtensionDescription,\n\t\tglobPattern: vscode.GlobPattern,\n\t\toptions?: FileSystemWatcherCreateOptions,\n\t): vscode.FileSystemWatcher {\n\t\treturn new FileSystemWatcher(\n\t\t\tthis._mainContext,\n\t\t\tworkspace,\n\t\t\textension,\n\t\t\tthis._onFileSystemEvent.event,\n\t\t\ttypeConverter.GlobPattern.from(globPattern),\n\t\t\toptions,\n\t\t);\n\t}\n\n\t$onFileEvent(events: FileSystemEvents) {\n\t\tthis._onFileSystemEvent.fire(new LazyRevivedFileSystemEvents(events));\n\t}\n\n\t//--- file operations\n\n\t$onDidRunFileOperation(\n\t\toperation: FileOperation,\n\t\tfiles: SourceTargetPair[],\n\t): void {\n\t\tswitch (operation) {\n\t\t\tcase FileOperation.MOVE:\n\t\t\t\tthis._onDidRenameFile.fire(\n\t\t\t\t\tObject.freeze({\n\t\t\t\t\t\tfiles: files.map((f) => ({\n\t\t\t\t\t\t\toldUri: URI.revive(f.source!),\n\t\t\t\t\t\t\tnewUri: URI.revive(f.target),\n\t\t\t\t\t\t})),\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase FileOperation.DELETE:\n\t\t\t\tthis._onDidDeleteFile.fire(\n\t\t\t\t\tObject.freeze({\n\t\t\t\t\t\tfiles: files.map((f) => URI.revive(f.target)),\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase FileOperation.CREATE:\n\t\t\tcase FileOperation.COPY:\n\t\t\t\tthis._onDidCreateFile.fire(\n\t\t\t\t\tObject.freeze({\n\t\t\t\t\t\tfiles: files.map((f) => URI.revive(f.target)),\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t//ignore, dont send\n\t\t}\n\t}\n\n\tgetOnWillRenameFileEvent(\n\t\textension: IExtensionDescription,\n\t): Event<vscode.FileWillRenameEvent> {\n\t\treturn this._createWillExecuteEvent(extension, this._onWillRenameFile);\n\t}\n\n\tgetOnWillCreateFileEvent(\n\t\textension: IExtensionDescription,\n\t): Event<vscode.FileWillCreateEvent> {\n\t\treturn this._createWillExecuteEvent(extension, this._onWillCreateFile);\n\t}\n\n\tgetOnWillDeleteFileEvent(\n\t\textension: IExtensionDescription,\n\t): Event<vscode.FileWillDeleteEvent> {\n\t\treturn this._createWillExecuteEvent(extension, this._onWillDeleteFile);\n\t}\n\n\tprivate _createWillExecuteEvent<E extends IWaitUntil>(\n\t\textension: IExtensionDescription,\n\t\temitter: AsyncEmitter<E>,\n\t): Event<E> {\n\t\treturn (listener, thisArg, disposables) => {\n\t\t\tconst wrappedListener: IExtensionListener<E> = function wrapped(\n\t\t\t\te: E,\n\t\t\t) {\n\t\t\t\tlistener.call(thisArg, e);\n\t\t\t};\n\t\t\twrappedListener.extension = extension;\n\t\t\treturn emitter.event(wrappedListener, undefined, disposables);\n\t\t};\n\t}\n\n\tasync $onWillRunFileOperation(\n\t\toperation: FileOperation,\n\t\tfiles: SourceTargetPair[],\n\t\ttimeout: number,\n\t\ttoken: CancellationToken,\n\t): Promise<IWillRunFileOperationParticipation | undefined> {\n\t\tswitch (operation) {\n\t\t\tcase FileOperation.MOVE:\n\t\t\t\treturn await this._fireWillEvent(\n\t\t\t\t\tthis._onWillRenameFile,\n\t\t\t\t\t{\n\t\t\t\t\t\tfiles: files.map((f) => ({\n\t\t\t\t\t\t\toldUri: URI.revive(f.source!),\n\t\t\t\t\t\t\tnewUri: URI.revive(f.target),\n\t\t\t\t\t\t})),\n\t\t\t\t\t},\n\t\t\t\t\ttimeout,\n\t\t\t\t\ttoken,\n\t\t\t\t);\n\t\t\tcase FileOperation.DELETE:\n\t\t\t\treturn await this._fireWillEvent(\n\t\t\t\t\tthis._onWillDeleteFile,\n\t\t\t\t\t{ files: files.map((f) => URI.revive(f.target)) },\n\t\t\t\t\ttimeout,\n\t\t\t\t\ttoken,\n\t\t\t\t);\n\t\t\tcase FileOperation.CREATE:\n\t\t\tcase FileOperation.COPY:\n\t\t\t\treturn await this._fireWillEvent(\n\t\t\t\t\tthis._onWillCreateFile,\n\t\t\t\t\t{ files: files.map((f) => URI.revive(f.target)) },\n\t\t\t\t\ttimeout,\n\t\t\t\t\ttoken,\n\t\t\t\t);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate async _fireWillEvent<E extends IWaitUntil>(\n\t\temitter: AsyncEmitter<E>,\n\t\tdata: IWaitUntilData<E>,\n\t\ttimeout: number,\n\t\ttoken: CancellationToken,\n\t): Promise<IWillRunFileOperationParticipation | undefined> {\n\t\tconst extensionNames = new Set<string>();\n\t\tconst edits: [IExtensionDescription, WorkspaceEdit][] = [];\n\n\t\tawait emitter.fireAsync(\n\t\t\tdata,\n\t\t\ttoken,\n\t\t\tasync (thenable: Promise<unknown>, listener) => {\n\t\t\t\t// ignore all results except for WorkspaceEdits. Those are stored in an array.\n\t\t\t\tconst now = Date.now();\n\t\t\t\tconst result = await Promise.resolve(thenable);\n\t\t\t\tif (result instanceof WorkspaceEdit) {\n\t\t\t\t\tedits.push([\n\t\t\t\t\t\t(<IExtensionListener<E>>listener).extension,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t]);\n\t\t\t\t\textensionNames.add(\n\t\t\t\t\t\t(<IExtensionListener<E>>listener).extension\n\t\t\t\t\t\t\t.displayName ??\n\t\t\t\t\t\t\t(<IExtensionListener<E>>listener).extension\n\t\t\t\t\t\t\t\t.identifier.value,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (Date.now() - now > timeout) {\n\t\t\t\t\tthis._logService.warn(\n\t\t\t\t\t\t\"SLOW file-participant\",\n\t\t\t\t\t\t(<IExtensionListener<E>>listener).extension.identifier,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (edits.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// concat all WorkspaceEdits collected via waitUntil-call and send them over to the renderer\n\t\tconst dto: IWorkspaceEditDto = { edits: [] };\n\t\tfor (const [, edit] of edits) {\n\t\t\tconst { edits } = typeConverter.WorkspaceEdit.from(edit, {\n\t\t\t\tgetTextDocumentVersion: (uri) =>\n\t\t\t\t\tthis._extHostDocumentsAndEditors.getDocument(uri)?.version,\n\t\t\t\tgetNotebookDocumentVersion: () => undefined,\n\t\t\t});\n\t\t\tdto.edits = dto.edits.concat(edits);\n\t\t}\n\t\treturn { edit: dto, extensionNames: Array.from(extensionNames) };\n\t}\n}\n"],
  "mappings": "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",
  "names": ["edits"]
}
