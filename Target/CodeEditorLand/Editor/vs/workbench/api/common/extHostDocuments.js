import{Emitter as s}from"../../../base/common/event.js";import{DisposableStore as a}from"../../../base/common/lifecycle.js";import{deepFreeze as u}from"../../../base/common/objects.js";import{assertIsDefined as D}from"../../../base/common/types.js";import{URI as d}from"../../../base/common/uri.js";import{MainContext as p}from"./extHost.protocol.js";import{setWordDefinitionFor as h}from"./extHostDocumentData.js";import*as v from"./extHostTypeConverters.js";import{TextDocumentChangeReason as m}from"./extHostTypes.js";class w{_onDidAddDocument=new s;_onDidRemoveDocument=new s;_onDidChangeDocument=new s;_onDidSaveDocument=new s;onDidAddDocument=this._onDidAddDocument.event;onDidRemoveDocument=this._onDidRemoveDocument.event;onDidChangeDocument=this._onDidChangeDocument.event;onDidSaveDocument=this._onDidSaveDocument.event;_toDispose=new a;_proxy;_documentsAndEditors;_documentLoader=new Map;constructor(e,t){this._proxy=e.getProxy(p.MainThreadDocuments),this._documentsAndEditors=t,this._documentsAndEditors.onDidRemoveDocuments(n=>{for(const o of n)this._onDidRemoveDocument.fire(o.document)},void 0,this._toDispose),this._documentsAndEditors.onDidAddDocuments(n=>{for(const o of n)this._onDidAddDocument.fire(o.document)},void 0,this._toDispose)}dispose(){this._toDispose.dispose()}getAllDocumentData(){return[...this._documentsAndEditors.allDocuments()]}getDocumentData(e){if(!e)return;const t=this._documentsAndEditors.getDocument(e);if(t)return t}getDocument(e){const t=this.getDocumentData(e);if(!t?.document)throw new Error(`Unable to retrieve document from URI '${e}'`);return t.document}ensureDocumentData(e){const t=this._documentsAndEditors.getDocument(e);if(t)return Promise.resolve(t);let n=this._documentLoader.get(e.toString());return n||(n=this._proxy.$tryOpenDocument(e).then(o=>{this._documentLoader.delete(e.toString());const i=d.revive(o);return D(this._documentsAndEditors.getDocument(i))},o=>(this._documentLoader.delete(e.toString()),Promise.reject(o))),this._documentLoader.set(e.toString(),n)),n}createDocumentData(e){return this._proxy.$tryCreateDocument(e).then(t=>d.revive(t))}$acceptModelLanguageChanged(e,t){const n=d.revive(e),o=this._documentsAndEditors.getDocument(n);if(!o)throw new Error("unknown document");this._onDidRemoveDocument.fire(o.document),o._acceptLanguageId(t),this._onDidAddDocument.fire(o.document)}$acceptModelSaved(e){const t=d.revive(e),n=this._documentsAndEditors.getDocument(t);if(!n)throw new Error("unknown document");this.$acceptDirtyStateChanged(e,!1),this._onDidSaveDocument.fire(n.document)}$acceptDirtyStateChanged(e,t){const n=d.revive(e),o=this._documentsAndEditors.getDocument(n);if(!o)throw new Error("unknown document");o._acceptIsDirty(t),this._onDidChangeDocument.fire({document:o.document,contentChanges:[],reason:void 0})}$acceptModelChanged(e,t,n){const o=d.revive(e),i=this._documentsAndEditors.getDocument(o);if(!i)throw new Error("unknown document");i._acceptIsDirty(n),i.onEvents(t);let c;t.isUndoing?c=m.Undo:t.isRedoing&&(c=m.Redo),this._onDidChangeDocument.fire(u({document:i.document,contentChanges:t.changes.map(r=>({range:v.Range.to(r.range),rangeOffset:r.rangeOffset,rangeLength:r.rangeLength,text:r.text})),reason:c}))}setWordDefinitionFor(e,t){h(e,t)}}export{w as ExtHostDocuments};
