{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHost.api.impl.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport * as errors from '../../../base/common/errors.js';\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { combinedDisposable } from '../../../base/common/lifecycle.js';\nimport { Schemas, matchesScheme } from '../../../base/common/network.js';\nimport Severity from '../../../base/common/severity.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { TextEditorCursorStyle } from '../../../editor/common/config/editorOptions.js';\nimport { score, targetsNotebooks } from '../../../editor/common/languageSelector.js';\nimport * as languageConfiguration from '../../../editor/common/languages/languageConfiguration.js';\nimport { OverviewRulerLane } from '../../../editor/common/model.js';\nimport { ExtensionIdentifierSet, IExtensionDescription } from '../../../platform/extensions/common/extensions.js';\nimport * as files from '../../../platform/files/common/files.js';\nimport { ServicesAccessor } from '../../../platform/instantiation/common/instantiation.js';\nimport { ILogService, ILoggerService, LogLevel } from '../../../platform/log/common/log.js';\nimport { getRemoteName } from '../../../platform/remote/common/remoteHosts.js';\nimport { TelemetryTrustedValue } from '../../../platform/telemetry/common/telemetryUtils.js';\nimport { EditSessionIdentityMatch } from '../../../platform/workspace/common/editSessions.js';\nimport { CandidatePortSource, ExtHostContext, ExtHostLogLevelServiceShape, MainContext } from './extHost.protocol.js';\nimport { ExtHostRelatedInformation } from './extHostAiRelatedInformation.js';\nimport { ExtHostApiCommands } from './extHostApiCommands.js';\nimport { IExtHostApiDeprecationService } from './extHostApiDeprecationService.js';\nimport { IExtHostAuthentication } from './extHostAuthentication.js';\nimport { ExtHostBulkEdits } from './extHostBulkEdits.js';\nimport { ExtHostChatAgents2 } from './extHostChatAgents2.js';\nimport { ExtHostChatVariables } from './extHostChatVariables.js';\nimport { ExtHostClipboard } from './extHostClipboard.js';\nimport { ExtHostEditorInsets } from './extHostCodeInsets.js';\nimport { IExtHostCommands } from './extHostCommands.js';\nimport { createExtHostComments } from './extHostComments.js';\nimport { ExtHostConfigProvider, IExtHostConfiguration } from './extHostConfiguration.js';\nimport { ExtHostCustomEditors } from './extHostCustomEditors.js';\nimport { IExtHostDebugService } from './extHostDebugService.js';\nimport { IExtHostDecorations } from './extHostDecorations.js';\nimport { ExtHostDiagnostics } from './extHostDiagnostics.js';\nimport { ExtHostDialogs } from './extHostDialogs.js';\nimport { ExtHostDocumentContentProvider } from './extHostDocumentContentProviders.js';\nimport { ExtHostDocumentSaveParticipant } from './extHostDocumentSaveParticipant.js';\nimport { ExtHostDocuments } from './extHostDocuments.js';\nimport { IExtHostDocumentsAndEditors } from './extHostDocumentsAndEditors.js';\nimport { IExtHostEditorTabs } from './extHostEditorTabs.js';\nimport { ExtHostEmbeddings } from './extHostEmbedding.js';\nimport { ExtHostAiEmbeddingVector } from './extHostEmbeddingVector.js';\nimport { Extension, IExtHostExtensionService } from './extHostExtensionService.js';\nimport { ExtHostFileSystem } from './extHostFileSystem.js';\nimport { IExtHostConsumerFileSystem } from './extHostFileSystemConsumer.js';\nimport { ExtHostFileSystemEventService, FileSystemWatcherCreateOptions } from './extHostFileSystemEventService.js';\nimport { IExtHostFileSystemInfo } from './extHostFileSystemInfo.js';\nimport { IExtHostInitDataService } from './extHostInitDataService.js';\nimport { ExtHostInteractive } from './extHostInteractive.js';\nimport { ExtHostLabelService } from './extHostLabelService.js';\nimport { ExtHostLanguageFeatures } from './extHostLanguageFeatures.js';\nimport { ExtHostLanguageModelTools } from './extHostLanguageModelTools.js';\nimport { IExtHostLanguageModels } from './extHostLanguageModels.js';\nimport { ExtHostLanguages } from './extHostLanguages.js';\nimport { IExtHostLocalizationService } from './extHostLocalizationService.js';\nimport { IExtHostManagedSockets } from './extHostManagedSockets.js';\nimport { ExtHostMessageService } from './extHostMessageService.js';\nimport { ExtHostNotebookController } from './extHostNotebook.js';\nimport { ExtHostNotebookDocumentSaveParticipant } from './extHostNotebookDocumentSaveParticipant.js';\nimport { ExtHostNotebookDocuments } from './extHostNotebookDocuments.js';\nimport { ExtHostNotebookEditors } from './extHostNotebookEditors.js';\nimport { ExtHostNotebookKernels } from './extHostNotebookKernels.js';\nimport { ExtHostNotebookRenderers } from './extHostNotebookRenderers.js';\nimport { IExtHostOutputService } from './extHostOutput.js';\nimport { ExtHostProfileContentHandlers } from './extHostProfileContentHandler.js';\nimport { ExtHostProgress } from './extHostProgress.js';\nimport { ExtHostQuickDiff } from './extHostQuickDiff.js';\nimport { createExtHostQuickOpen } from './extHostQuickOpen.js';\nimport { IExtHostRpcService } from './extHostRpcService.js';\nimport { ExtHostSCM } from './extHostSCM.js';\nimport { IExtHostSearch } from './extHostSearch.js';\nimport { IExtHostSecretState } from './extHostSecretState.js';\nimport { ExtHostShare } from './extHostShare.js';\nimport { ExtHostSpeech } from './extHostSpeech.js';\nimport { ExtHostStatusBar } from './extHostStatusBar.js';\nimport { IExtHostStorage } from './extHostStorage.js';\nimport { IExtensionStoragePaths } from './extHostStoragePaths.js';\nimport { IExtHostTask } from './extHostTask.js';\nimport { ExtHostTelemetryLogger, IExtHostTelemetry, isNewAppInstall } from './extHostTelemetry.js';\nimport { IExtHostTerminalService } from './extHostTerminalService.js';\nimport { IExtHostTerminalShellIntegration } from './extHostTerminalShellIntegration.js';\nimport { IExtHostTesting } from './extHostTesting.js';\nimport { ExtHostEditors } from './extHostTextEditors.js';\nimport { ExtHostTheming } from './extHostTheming.js';\nimport { ExtHostTimeline } from './extHostTimeline.js';\nimport { ExtHostTreeViews } from './extHostTreeViews.js';\nimport { IExtHostTunnelService } from './extHostTunnelService.js';\nimport * as typeConverters from './extHostTypeConverters.js';\nimport * as extHostTypes from './extHostTypes.js';\nimport { ExtHostUriOpeners } from './extHostUriOpener.js';\nimport { IURITransformerService } from './extHostUriTransformerService.js';\nimport { ExtHostUrls } from './extHostUrls.js';\nimport { ExtHostWebviews } from './extHostWebview.js';\nimport { ExtHostWebviewPanels } from './extHostWebviewPanels.js';\nimport { ExtHostWebviewViews } from './extHostWebviewView.js';\nimport { IExtHostWindow } from './extHostWindow.js';\nimport { IExtHostWorkspace } from './extHostWorkspace.js';\nimport { DebugConfigurationProviderTriggerKind } from '../../contrib/debug/common/debug.js';\nimport { ExtensionDescriptionRegistry } from '../../services/extensions/common/extensionDescriptionRegistry.js';\nimport { UIKind } from '../../services/extensions/common/extensionHostProtocol.js';\nimport { checkProposedApiEnabled, isProposedApiEnabled } from '../../services/extensions/common/extensions.js';\nimport { ProxyIdentifier } from '../../services/extensions/common/proxyIdentifier.js';\nimport { ExcludeSettingOptions, TextSearchCompleteMessageType, TextSearchContextNew, TextSearchMatchNew } from '../../services/search/common/searchExtTypes.js';\nimport type * as vscode from 'vscode';\n\nexport interface IExtensionRegistries {\n\tmine: ExtensionDescriptionRegistry;\n\tall: ExtensionDescriptionRegistry;\n}\n\nexport interface IExtensionApiFactory {\n\t(extension: IExtensionDescription, extensionInfo: IExtensionRegistries, configProvider: ExtHostConfigProvider): typeof vscode;\n}\n\n/**\n * This method instantiates and returns the extension API surface\n */\nexport function createApiFactoryAndRegisterActors(accessor: ServicesAccessor): IExtensionApiFactory {\n\n\t// services\n\tconst initData = accessor.get(IExtHostInitDataService);\n\tconst extHostFileSystemInfo = accessor.get(IExtHostFileSystemInfo);\n\tconst extHostConsumerFileSystem = accessor.get(IExtHostConsumerFileSystem);\n\tconst extensionService = accessor.get(IExtHostExtensionService);\n\tconst extHostWorkspace = accessor.get(IExtHostWorkspace);\n\tconst extHostTelemetry = accessor.get(IExtHostTelemetry);\n\tconst extHostConfiguration = accessor.get(IExtHostConfiguration);\n\tconst uriTransformer = accessor.get(IURITransformerService);\n\tconst rpcProtocol = accessor.get(IExtHostRpcService);\n\tconst extHostStorage = accessor.get(IExtHostStorage);\n\tconst extensionStoragePaths = accessor.get(IExtensionStoragePaths);\n\tconst extHostLoggerService = accessor.get(ILoggerService);\n\tconst extHostLogService = accessor.get(ILogService);\n\tconst extHostTunnelService = accessor.get(IExtHostTunnelService);\n\tconst extHostApiDeprecation = accessor.get(IExtHostApiDeprecationService);\n\tconst extHostWindow = accessor.get(IExtHostWindow);\n\tconst extHostSecretState = accessor.get(IExtHostSecretState);\n\tconst extHostEditorTabs = accessor.get(IExtHostEditorTabs);\n\tconst extHostManagedSockets = accessor.get(IExtHostManagedSockets);\n\tconst extHostAuthentication = accessor.get(IExtHostAuthentication);\n\tconst extHostLanguageModels = accessor.get(IExtHostLanguageModels);\n\n\t// register addressable instances\n\trpcProtocol.set(ExtHostContext.ExtHostFileSystemInfo, extHostFileSystemInfo);\n\trpcProtocol.set(ExtHostContext.ExtHostLogLevelServiceShape, <ExtHostLogLevelServiceShape><any>extHostLoggerService);\n\trpcProtocol.set(ExtHostContext.ExtHostWorkspace, extHostWorkspace);\n\trpcProtocol.set(ExtHostContext.ExtHostConfiguration, extHostConfiguration);\n\trpcProtocol.set(ExtHostContext.ExtHostExtensionService, extensionService);\n\trpcProtocol.set(ExtHostContext.ExtHostStorage, extHostStorage);\n\trpcProtocol.set(ExtHostContext.ExtHostTunnelService, extHostTunnelService);\n\trpcProtocol.set(ExtHostContext.ExtHostWindow, extHostWindow);\n\trpcProtocol.set(ExtHostContext.ExtHostSecretState, extHostSecretState);\n\trpcProtocol.set(ExtHostContext.ExtHostTelemetry, extHostTelemetry);\n\trpcProtocol.set(ExtHostContext.ExtHostEditorTabs, extHostEditorTabs);\n\trpcProtocol.set(ExtHostContext.ExtHostManagedSockets, extHostManagedSockets);\n\trpcProtocol.set(ExtHostContext.ExtHostAuthentication, extHostAuthentication);\n\trpcProtocol.set(ExtHostContext.ExtHostChatProvider, extHostLanguageModels);\n\n\t// automatically create and register addressable instances\n\tconst extHostDecorations = rpcProtocol.set(ExtHostContext.ExtHostDecorations, accessor.get(IExtHostDecorations));\n\tconst extHostDocumentsAndEditors = rpcProtocol.set(ExtHostContext.ExtHostDocumentsAndEditors, accessor.get(IExtHostDocumentsAndEditors));\n\tconst extHostCommands = rpcProtocol.set(ExtHostContext.ExtHostCommands, accessor.get(IExtHostCommands));\n\tconst extHostTerminalService = rpcProtocol.set(ExtHostContext.ExtHostTerminalService, accessor.get(IExtHostTerminalService));\n\tconst extHostTerminalShellIntegration = rpcProtocol.set(ExtHostContext.ExtHostTerminalShellIntegration, accessor.get(IExtHostTerminalShellIntegration));\n\tconst extHostDebugService = rpcProtocol.set(ExtHostContext.ExtHostDebugService, accessor.get(IExtHostDebugService));\n\tconst extHostSearch = rpcProtocol.set(ExtHostContext.ExtHostSearch, accessor.get(IExtHostSearch));\n\tconst extHostTask = rpcProtocol.set(ExtHostContext.ExtHostTask, accessor.get(IExtHostTask));\n\tconst extHostOutputService = rpcProtocol.set(ExtHostContext.ExtHostOutputService, accessor.get(IExtHostOutputService));\n\tconst extHostLocalization = rpcProtocol.set(ExtHostContext.ExtHostLocalization, accessor.get(IExtHostLocalizationService));\n\n\t// manually create and register addressable instances\n\tconst extHostUrls = rpcProtocol.set(ExtHostContext.ExtHostUrls, new ExtHostUrls(rpcProtocol));\n\tconst extHostDocuments = rpcProtocol.set(ExtHostContext.ExtHostDocuments, new ExtHostDocuments(rpcProtocol, extHostDocumentsAndEditors));\n\tconst extHostDocumentContentProviders = rpcProtocol.set(ExtHostContext.ExtHostDocumentContentProviders, new ExtHostDocumentContentProvider(rpcProtocol, extHostDocumentsAndEditors, extHostLogService));\n\tconst extHostDocumentSaveParticipant = rpcProtocol.set(ExtHostContext.ExtHostDocumentSaveParticipant, new ExtHostDocumentSaveParticipant(extHostLogService, extHostDocuments, rpcProtocol.getProxy(MainContext.MainThreadBulkEdits)));\n\tconst extHostNotebook = rpcProtocol.set(ExtHostContext.ExtHostNotebook, new ExtHostNotebookController(rpcProtocol, extHostCommands, extHostDocumentsAndEditors, extHostDocuments, extHostConsumerFileSystem, extHostSearch, extHostLogService));\n\tconst extHostNotebookDocuments = rpcProtocol.set(ExtHostContext.ExtHostNotebookDocuments, new ExtHostNotebookDocuments(extHostNotebook));\n\tconst extHostNotebookEditors = rpcProtocol.set(ExtHostContext.ExtHostNotebookEditors, new ExtHostNotebookEditors(extHostLogService, extHostNotebook));\n\tconst extHostNotebookKernels = rpcProtocol.set(ExtHostContext.ExtHostNotebookKernels, new ExtHostNotebookKernels(rpcProtocol, initData, extHostNotebook, extHostCommands, extHostLogService));\n\tconst extHostNotebookRenderers = rpcProtocol.set(ExtHostContext.ExtHostNotebookRenderers, new ExtHostNotebookRenderers(rpcProtocol, extHostNotebook));\n\tconst extHostNotebookDocumentSaveParticipant = rpcProtocol.set(ExtHostContext.ExtHostNotebookDocumentSaveParticipant, new ExtHostNotebookDocumentSaveParticipant(extHostLogService, extHostNotebook, rpcProtocol.getProxy(MainContext.MainThreadBulkEdits)));\n\tconst extHostEditors = rpcProtocol.set(ExtHostContext.ExtHostEditors, new ExtHostEditors(rpcProtocol, extHostDocumentsAndEditors));\n\tconst extHostTreeViews = rpcProtocol.set(ExtHostContext.ExtHostTreeViews, new ExtHostTreeViews(rpcProtocol.getProxy(MainContext.MainThreadTreeViews), extHostCommands, extHostLogService));\n\tconst extHostEditorInsets = rpcProtocol.set(ExtHostContext.ExtHostEditorInsets, new ExtHostEditorInsets(rpcProtocol.getProxy(MainContext.MainThreadEditorInsets), extHostEditors, initData.remote));\n\tconst extHostDiagnostics = rpcProtocol.set(ExtHostContext.ExtHostDiagnostics, new ExtHostDiagnostics(rpcProtocol, extHostLogService, extHostFileSystemInfo, extHostDocumentsAndEditors));\n\tconst extHostLanguages = rpcProtocol.set(ExtHostContext.ExtHostLanguages, new ExtHostLanguages(rpcProtocol, extHostDocuments, extHostCommands.converter, uriTransformer));\n\tconst extHostLanguageFeatures = rpcProtocol.set(ExtHostContext.ExtHostLanguageFeatures, new ExtHostLanguageFeatures(rpcProtocol, uriTransformer, extHostDocuments, extHostCommands, extHostDiagnostics, extHostLogService, extHostApiDeprecation, extHostTelemetry));\n\tconst extHostFileSystem = rpcProtocol.set(ExtHostContext.ExtHostFileSystem, new ExtHostFileSystem(rpcProtocol, extHostLanguageFeatures));\n\tconst extHostFileSystemEvent = rpcProtocol.set(ExtHostContext.ExtHostFileSystemEventService, new ExtHostFileSystemEventService(rpcProtocol, extHostLogService, extHostDocumentsAndEditors));\n\tconst extHostQuickOpen = rpcProtocol.set(ExtHostContext.ExtHostQuickOpen, createExtHostQuickOpen(rpcProtocol, extHostWorkspace, extHostCommands));\n\tconst extHostSCM = rpcProtocol.set(ExtHostContext.ExtHostSCM, new ExtHostSCM(rpcProtocol, extHostCommands, extHostDocuments, extHostLogService));\n\tconst extHostQuickDiff = rpcProtocol.set(ExtHostContext.ExtHostQuickDiff, new ExtHostQuickDiff(rpcProtocol, uriTransformer));\n\tconst extHostShare = rpcProtocol.set(ExtHostContext.ExtHostShare, new ExtHostShare(rpcProtocol, uriTransformer));\n\tconst extHostComment = rpcProtocol.set(ExtHostContext.ExtHostComments, createExtHostComments(rpcProtocol, extHostCommands, extHostDocuments));\n\tconst extHostProgress = rpcProtocol.set(ExtHostContext.ExtHostProgress, new ExtHostProgress(rpcProtocol.getProxy(MainContext.MainThreadProgress)));\n\tconst extHostLabelService = rpcProtocol.set(ExtHostContext.ExtHostLabelService, new ExtHostLabelService(rpcProtocol));\n\tconst extHostTheming = rpcProtocol.set(ExtHostContext.ExtHostTheming, new ExtHostTheming(rpcProtocol));\n\tconst extHostTimeline = rpcProtocol.set(ExtHostContext.ExtHostTimeline, new ExtHostTimeline(rpcProtocol, extHostCommands));\n\tconst extHostWebviews = rpcProtocol.set(ExtHostContext.ExtHostWebviews, new ExtHostWebviews(rpcProtocol, initData.remote, extHostWorkspace, extHostLogService, extHostApiDeprecation));\n\tconst extHostWebviewPanels = rpcProtocol.set(ExtHostContext.ExtHostWebviewPanels, new ExtHostWebviewPanels(rpcProtocol, extHostWebviews, extHostWorkspace));\n\tconst extHostCustomEditors = rpcProtocol.set(ExtHostContext.ExtHostCustomEditors, new ExtHostCustomEditors(rpcProtocol, extHostDocuments, extensionStoragePaths, extHostWebviews, extHostWebviewPanels));\n\tconst extHostWebviewViews = rpcProtocol.set(ExtHostContext.ExtHostWebviewViews, new ExtHostWebviewViews(rpcProtocol, extHostWebviews));\n\tconst extHostTesting = rpcProtocol.set(ExtHostContext.ExtHostTesting, accessor.get(IExtHostTesting));\n\tconst extHostUriOpeners = rpcProtocol.set(ExtHostContext.ExtHostUriOpeners, new ExtHostUriOpeners(rpcProtocol));\n\tconst extHostProfileContentHandlers = rpcProtocol.set(ExtHostContext.ExtHostProfileContentHandlers, new ExtHostProfileContentHandlers(rpcProtocol));\n\trpcProtocol.set(ExtHostContext.ExtHostInteractive, new ExtHostInteractive(rpcProtocol, extHostNotebook, extHostDocumentsAndEditors, extHostCommands, extHostLogService));\n\tconst extHostChatAgents2 = rpcProtocol.set(ExtHostContext.ExtHostChatAgents2, new ExtHostChatAgents2(rpcProtocol, extHostLogService, extHostCommands, extHostDocuments));\n\tconst extHostChatVariables = rpcProtocol.set(ExtHostContext.ExtHostChatVariables, new ExtHostChatVariables(rpcProtocol));\n\tconst extHostLanguageModelTools = rpcProtocol.set(ExtHostContext.ExtHostLanguageModelTools, new ExtHostLanguageModelTools(rpcProtocol));\n\tconst extHostAiRelatedInformation = rpcProtocol.set(ExtHostContext.ExtHostAiRelatedInformation, new ExtHostRelatedInformation(rpcProtocol));\n\tconst extHostAiEmbeddingVector = rpcProtocol.set(ExtHostContext.ExtHostAiEmbeddingVector, new ExtHostAiEmbeddingVector(rpcProtocol));\n\tconst extHostStatusBar = rpcProtocol.set(ExtHostContext.ExtHostStatusBar, new ExtHostStatusBar(rpcProtocol, extHostCommands.converter));\n\tconst extHostSpeech = rpcProtocol.set(ExtHostContext.ExtHostSpeech, new ExtHostSpeech(rpcProtocol));\n\tconst extHostEmbeddings = rpcProtocol.set(ExtHostContext.ExtHostEmbeddings, new ExtHostEmbeddings(rpcProtocol));\n\n\t// Check that no named customers are missing\n\tconst expected = Object.values<ProxyIdentifier<any>>(ExtHostContext);\n\trpcProtocol.assertRegistered(expected);\n\n\t// Other instances\n\tconst extHostBulkEdits = new ExtHostBulkEdits(rpcProtocol, extHostDocumentsAndEditors);\n\tconst extHostClipboard = new ExtHostClipboard(rpcProtocol);\n\tconst extHostMessageService = new ExtHostMessageService(rpcProtocol, extHostLogService);\n\tconst extHostDialogs = new ExtHostDialogs(rpcProtocol);\n\n\t// Register API-ish commands\n\tExtHostApiCommands.register(extHostCommands);\n\n\treturn function (extension: IExtensionDescription, extensionInfo: IExtensionRegistries, configProvider: ExtHostConfigProvider): typeof vscode {\n\n\t\t// Wraps an event with error handling and telemetry so that we know what extension fails\n\t\t// handling events. This will prevent us from reporting this as \"our\" error-telemetry and\n\t\t// allows for better blaming\n\t\tfunction _asExtensionEvent<T>(actual: vscode.Event<T>): vscode.Event<T> {\n\t\t\treturn (listener, thisArgs, disposables) => {\n\t\t\t\tconst handle = actual(e => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlistener.call(thisArgs, e);\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\terrors.onUnexpectedExternalError(new Error(`[ExtensionListenerError] Extension '${extension.identifier.value}' FAILED to handle event: ${err.toString()}`, { cause: err }));\n\t\t\t\t\t\textHostTelemetry.onExtensionError(extension.identifier, err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tdisposables?.push(handle);\n\t\t\t\treturn handle;\n\t\t\t};\n\t\t}\n\n\n\t\t// Check document selectors for being overly generic. Technically this isn't a problem but\n\t\t// in practice many extensions say they support `fooLang` but need fs-access to do so. Those\n\t\t// extension should specify then the `file`-scheme, e.g. `{ scheme: 'fooLang', language: 'fooLang' }`\n\t\t// We only inform once, it is not a warning because we just want to raise awareness and because\n\t\t// we cannot say if the extension is doing it right or wrong...\n\t\tconst checkSelector = (function () {\n\t\t\tlet done = !extension.isUnderDevelopment;\n\t\t\tfunction informOnce() {\n\t\t\t\tif (!done) {\n\t\t\t\t\textHostLogService.info(`Extension '${extension.identifier.value}' uses a document selector without scheme. Learn more about this: https://go.microsoft.com/fwlink/?linkid=872305`);\n\t\t\t\t\tdone = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn function perform(selector: vscode.DocumentSelector): vscode.DocumentSelector {\n\t\t\t\tif (Array.isArray(selector)) {\n\t\t\t\t\tselector.forEach(perform);\n\t\t\t\t} else if (typeof selector === 'string') {\n\t\t\t\t\tinformOnce();\n\t\t\t\t} else {\n\t\t\t\t\tconst filter = selector as vscode.DocumentFilter; // TODO: microsoft/TypeScript#42768\n\t\t\t\t\tif (typeof filter.scheme === 'undefined') {\n\t\t\t\t\t\tinformOnce();\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof filter.exclusive === 'boolean') {\n\t\t\t\t\t\tcheckProposedApiEnabled(extension, 'documentFiltersExclusive');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn selector;\n\t\t\t};\n\t\t})();\n\n\t\tconst authentication: typeof vscode.authentication = {\n\t\t\tgetSession(providerId: string, scopes: readonly string[], options?: vscode.AuthenticationGetSessionOptions) {\n\t\t\t\tif (typeof options?.forceNewSession === 'object' && options.forceNewSession.learnMore) {\n\t\t\t\t\tcheckProposedApiEnabled(extension, 'authLearnMore');\n\t\t\t\t}\n\t\t\t\treturn extHostAuthentication.getSession(extension, providerId, scopes, options as any);\n\t\t\t},\n\t\t\tgetAccounts(providerId: string) {\n\t\t\t\treturn extHostAuthentication.getAccounts(providerId);\n\t\t\t},\n\t\t\t// TODO: remove this after GHPR and Codespaces move off of it\n\t\t\tasync hasSession(providerId: string, scopes: readonly string[]) {\n\t\t\t\tcheckProposedApiEnabled(extension, 'authSession');\n\t\t\t\treturn !!(await extHostAuthentication.getSession(extension, providerId, scopes, { silent: true } as any));\n\t\t\t},\n\t\t\tget onDidChangeSessions(): vscode.Event<vscode.AuthenticationSessionsChangeEvent> {\n\t\t\t\treturn _asExtensionEvent(extHostAuthentication.onDidChangeSessions);\n\t\t\t},\n\t\t\tregisterAuthenticationProvider(id: string, label: string, provider: vscode.AuthenticationProvider, options?: vscode.AuthenticationProviderOptions): vscode.Disposable {\n\t\t\t\treturn extHostAuthentication.registerAuthenticationProvider(id, label, provider, options);\n\t\t\t}\n\t\t};\n\n\t\t// namespace: commands\n\t\tconst commands: typeof vscode.commands = {\n\t\t\tregisterCommand(id: string, command: <T>(...args: any[]) => T | Thenable<T>, thisArgs?: any): vscode.Disposable {\n\t\t\t\treturn extHostCommands.registerCommand(true, id, command, thisArgs, undefined, extension);\n\t\t\t},\n\t\t\tregisterTextEditorCommand(id: string, callback: (textEditor: vscode.TextEditor, edit: vscode.TextEditorEdit, ...args: any[]) => void, thisArg?: any): vscode.Disposable {\n\t\t\t\treturn extHostCommands.registerCommand(true, id, (...args: any[]): any => {\n\t\t\t\t\tconst activeTextEditor = extHostEditors.getActiveTextEditor();\n\t\t\t\t\tif (!activeTextEditor) {\n\t\t\t\t\t\textHostLogService.warn('Cannot execute ' + id + ' because there is no active text editor.');\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn activeTextEditor.edit((edit: vscode.TextEditorEdit) => {\n\t\t\t\t\t\tcallback.apply(thisArg, [activeTextEditor, edit, ...args]);\n\n\t\t\t\t\t}).then((result) => {\n\t\t\t\t\t\tif (!result) {\n\t\t\t\t\t\t\textHostLogService.warn('Edits from command ' + id + ' were not applied.');\n\t\t\t\t\t\t}\n\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\textHostLogService.warn('An error occurred while running command ' + id, err);\n\t\t\t\t\t});\n\t\t\t\t}, undefined, undefined, extension);\n\t\t\t},\n\t\t\tregisterDiffInformationCommand: (id: string, callback: (diff: vscode.LineChange[], ...args: any[]) => any, thisArg?: any): vscode.Disposable => {\n\t\t\t\tcheckProposedApiEnabled(extension, 'diffCommand');\n\t\t\t\treturn extHostCommands.registerCommand(true, id, async (...args: any[]): Promise<any> => {\n\t\t\t\t\tconst activeTextEditor = extHostDocumentsAndEditors.activeEditor(true);\n\t\t\t\t\tif (!activeTextEditor) {\n\t\t\t\t\t\textHostLogService.warn('Cannot execute ' + id + ' because there is no active text editor.');\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst diff = await extHostEditors.getDiffInformation(activeTextEditor.id);\n\t\t\t\t\tcallback.apply(thisArg, [diff, ...args]);\n\t\t\t\t}, undefined, undefined, extension);\n\t\t\t},\n\t\t\texecuteCommand<T>(id: string, ...args: any[]): Thenable<T> {\n\t\t\t\treturn extHostCommands.executeCommand<T>(id, ...args);\n\t\t\t},\n\t\t\tgetCommands(filterInternal: boolean = false): Thenable<string[]> {\n\t\t\t\treturn extHostCommands.getCommands(filterInternal);\n\t\t\t}\n\t\t};\n\n\t\t// namespace: env\n\t\tconst env: typeof vscode.env = {\n\t\t\tget machineId() { return initData.telemetryInfo.machineId; },\n\t\t\tget sessionId() { return initData.telemetryInfo.sessionId; },\n\t\t\tget language() { return initData.environment.appLanguage; },\n\t\t\tget appName() { return initData.environment.appName; },\n\t\t\tget appRoot() { return initData.environment.appRoot?.fsPath ?? ''; },\n\t\t\tget appHost() { return initData.environment.appHost; },\n\t\t\tget uriScheme() { return initData.environment.appUriScheme; },\n\t\t\tget clipboard(): vscode.Clipboard { return extHostClipboard.value; },\n\t\t\tget shell() {\n\t\t\t\treturn extHostTerminalService.getDefaultShell(false);\n\t\t\t},\n\t\t\tget onDidChangeShell() {\n\t\t\t\treturn _asExtensionEvent(extHostTerminalService.onDidChangeShell);\n\t\t\t},\n\t\t\tget isTelemetryEnabled() {\n\t\t\t\treturn extHostTelemetry.getTelemetryConfiguration();\n\t\t\t},\n\t\t\tget onDidChangeTelemetryEnabled(): vscode.Event<boolean> {\n\t\t\t\treturn _asExtensionEvent(extHostTelemetry.onDidChangeTelemetryEnabled);\n\t\t\t},\n\t\t\tget telemetryConfiguration(): vscode.TelemetryConfiguration {\n\t\t\t\tcheckProposedApiEnabled(extension, 'telemetry');\n\t\t\t\treturn extHostTelemetry.getTelemetryDetails();\n\t\t\t},\n\t\t\tget onDidChangeTelemetryConfiguration(): vscode.Event<vscode.TelemetryConfiguration> {\n\t\t\t\tcheckProposedApiEnabled(extension, 'telemetry');\n\t\t\t\treturn _asExtensionEvent(extHostTelemetry.onDidChangeTelemetryConfiguration);\n\t\t\t},\n\t\t\tget isNewAppInstall() {\n\t\t\t\treturn isNewAppInstall(initData.telemetryInfo.firstSessionDate);\n\t\t\t},\n\t\t\tcreateTelemetryLogger(sender: vscode.TelemetrySender, options?: vscode.TelemetryLoggerOptions): vscode.TelemetryLogger {\n\t\t\t\tExtHostTelemetryLogger.validateSender(sender);\n\t\t\t\treturn extHostTelemetry.instantiateLogger(extension, sender, options);\n\t\t\t},\n\t\t\topenExternal(uri: URI, options?: { allowContributedOpeners?: boolean | string }) {\n\t\t\t\treturn extHostWindow.openUri(uri, {\n\t\t\t\t\tallowTunneling: !!initData.remote.authority,\n\t\t\t\t\tallowContributedOpeners: options?.allowContributedOpeners,\n\t\t\t\t});\n\t\t\t},\n\t\t\tasync asExternalUri(uri: URI) {\n\t\t\t\tif (uri.scheme === initData.environment.appUriScheme) {\n\t\t\t\t\treturn extHostUrls.createAppUri(uri);\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\treturn await extHostWindow.asExternalUri(uri, { allowTunneling: !!initData.remote.authority });\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (matchesScheme(uri, Schemas.http) || matchesScheme(uri, Schemas.https)) {\n\t\t\t\t\t\treturn uri;\n\t\t\t\t\t}\n\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\t\t\t},\n\t\t\tget remoteName() {\n\t\t\t\treturn getRemoteName(initData.remote.authority);\n\t\t\t},\n\t\t\tget remoteAuthority() {\n\t\t\t\tcheckProposedApiEnabled(extension, 'resolvers');\n\t\t\t\treturn initData.remote.authority;\n\t\t\t},\n\t\t\tget uiKind() {\n\t\t\t\treturn initData.uiKind;\n\t\t\t},\n\t\t\tget logLevel() {\n\t\t\t\treturn extHostLogService.getLevel();\n\t\t\t},\n\t\t\tget onDidChangeLogLevel() {\n\t\t\t\treturn _asExtensionEvent(extHostLogService.onDidChangeLogLevel);\n\t\t\t},\n\t\t\tget appQuality(): string | undefined {\n\t\t\t\tcheckProposedApiEnabled(extension, 'resolvers');\n\t\t\t\treturn initData.quality;\n\t\t\t},\n\t\t\tget appCommit(): string | undefined {\n\t\t\t\tcheckProposedApiEnabled(extension, 'resolvers');\n\t\t\t\treturn initData.commit;\n\t\t\t},\n\t\t};\n\t\tif (!initData.environment.extensionTestsLocationURI) {\n\t\t\t// allow to patch env-function when running tests\n\t\t\tObject.freeze(env);\n\t\t}\n\n\t\t// namespace: tests\n\t\tconst tests: typeof vscode.tests = {\n\t\t\tcreateTestController(provider, label, refreshHandler?: (token: vscode.CancellationToken) => Thenable<void> | void) {\n\t\t\t\treturn extHostTesting.createTestController(extension, provider, label, refreshHandler);\n\t\t\t},\n\t\t\tcreateTestObserver() {\n\t\t\t\tcheckProposedApiEnabled(extension, 'testObserver');\n\t\t\t\treturn extHostTesting.createTestObserver();\n\t\t\t},\n\t\t\trunTests(provider) {\n\t\t\t\tcheckProposedApiEnabled(extension, 'testObserver');\n\t\t\t\treturn extHostTesting.runTests(provider);\n\t\t\t},\n\t\t\tregisterTestFollowupProvider(provider) {\n\t\t\t\tcheckProposedApiEnabled(extension, 'testObserver');\n\t\t\t\treturn extHostTesting.registerTestFollowupProvider(provider);\n\t\t\t},\n\t\t\tget onDidChangeTestResults() {\n\t\t\t\tcheckProposedApiEnabled(extension, 'testObserver');\n\t\t\t\treturn _asExtensionEvent(extHostTesting.onResultsChanged);\n\t\t\t},\n\t\t\tget testResults() {\n\t\t\t\tcheckProposedApiEnabled(extension, 'testObserver');\n\t\t\t\treturn extHostTesting.results;\n\t\t\t},\n\t\t};\n\n\t\t// namespace: extensions\n\t\tconst extensionKind = initData.remote.isRemote\n\t\t\t? extHostTypes.ExtensionKind.Workspace\n\t\t\t: extHostTypes.ExtensionKind.UI;\n\n\t\tconst extensions: typeof vscode.extensions = {\n\t\t\tgetExtension(extensionId: string, includeFromDifferentExtensionHosts?: boolean): vscode.Extension<any> | undefined {\n\t\t\t\tif (!isProposedApiEnabled(extension, 'extensionsAny')) {\n\t\t\t\t\tincludeFromDifferentExtensionHosts = false;\n\t\t\t\t}\n\t\t\t\tconst mine = extensionInfo.mine.getExtensionDescription(extensionId);\n\t\t\t\tif (mine) {\n\t\t\t\t\treturn new Extension(extensionService, extension.identifier, mine, extensionKind, false);\n\t\t\t\t}\n\t\t\t\tif (includeFromDifferentExtensionHosts) {\n\t\t\t\t\tconst foreign = extensionInfo.all.getExtensionDescription(extensionId);\n\t\t\t\t\tif (foreign) {\n\t\t\t\t\t\treturn new Extension(extensionService, extension.identifier, foreign, extensionKind /* TODO@alexdima THIS IS WRONG */, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tget all(): vscode.Extension<any>[] {\n\t\t\t\tconst result: vscode.Extension<any>[] = [];\n\t\t\t\tfor (const desc of extensionInfo.mine.getAllExtensionDescriptions()) {\n\t\t\t\t\tresult.push(new Extension(extensionService, extension.identifier, desc, extensionKind, false));\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\tget allAcrossExtensionHosts(): vscode.Extension<any>[] {\n\t\t\t\tcheckProposedApiEnabled(extension, 'extensionsAny');\n\t\t\t\tconst local = new ExtensionIdentifierSet(extensionInfo.mine.getAllExtensionDescriptions().map(desc => desc.identifier));\n\t\t\t\tconst result: vscode.Extension<any>[] = [];\n\t\t\t\tfor (const desc of extensionInfo.all.getAllExtensionDescriptions()) {\n\t\t\t\t\tconst isFromDifferentExtensionHost = !local.has(desc.identifier);\n\t\t\t\t\tresult.push(new Extension(extensionService, extension.identifier, desc, extensionKind /* TODO@alexdima THIS IS WRONG */, isFromDifferentExtensionHost));\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\tget onDidChange() {\n\t\t\t\tif (isProposedApiEnabled(extension, 'extensionsAny')) {\n\t\t\t\t\treturn _asExtensionEvent(Event.any(extensionInfo.mine.onDidChange, extensionInfo.all.onDidChange));\n\t\t\t\t}\n\t\t\t\treturn _asExtensionEvent(extensionInfo.mine.onDidChange);\n\t\t\t}\n\t\t};\n\n\t\t// namespace: languages\n\t\tconst languages: typeof vscode.languages = {\n\t\t\tcreateDiagnosticCollection(name?: string): vscode.DiagnosticCollection {\n\t\t\t\treturn extHostDiagnostics.createDiagnosticCollection(extension.identifier, name);\n\t\t\t},\n\t\t\tget onDidChangeDiagnostics() {\n\t\t\t\treturn _asExtensionEvent(extHostDiagnostics.onDidChangeDiagnostics);\n\t\t\t},\n\t\t\tgetDiagnostics: (resource?: vscode.Uri) => {\n\t\t\t\treturn <any>extHostDiagnostics.getDiagnostics(resource);\n\t\t\t},\n\t\t\tgetLanguages(): Thenable<string[]> {\n\t\t\t\treturn extHostLanguages.getLanguages();\n\t\t\t},\n\t\t\tsetTextDocumentLanguage(document: vscode.TextDocument, languageId: string): Thenable<vscode.TextDocument> {\n\t\t\t\treturn extHostLanguages.changeLanguage(document.uri, languageId);\n\t\t\t},\n\t\t\tmatch(selector: vscode.DocumentSelector, document: vscode.TextDocument): number {\n\t\t\t\tconst interalSelector = typeConverters.LanguageSelector.from(selector);\n\t\t\t\tlet notebook: vscode.NotebookDocument | undefined;\n\t\t\t\tif (targetsNotebooks(interalSelector)) {\n\t\t\t\t\tnotebook = extHostNotebook.notebookDocuments.find(value => value.apiNotebook.getCells().find(c => c.document === document))?.apiNotebook;\n\t\t\t\t}\n\t\t\t\treturn score(interalSelector, document.uri, document.languageId, true, notebook?.uri, notebook?.notebookType);\n\t\t\t},\n\t\t\tregisterCodeActionsProvider(selector: vscode.DocumentSelector, provider: vscode.CodeActionProvider, metadata?: vscode.CodeActionProviderMetadata): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerCodeActionProvider(extension, checkSelector(selector), provider, metadata);\n\t\t\t},\n\t\t\tregisterDocumentPasteEditProvider(selector: vscode.DocumentSelector, provider: vscode.DocumentPasteEditProvider, metadata: vscode.DocumentPasteProviderMetadata): vscode.Disposable {\n\t\t\t\tcheckProposedApiEnabled(extension, 'documentPaste');\n\t\t\t\treturn extHostLanguageFeatures.registerDocumentPasteEditProvider(extension, checkSelector(selector), provider, metadata);\n\t\t\t},\n\t\t\tregisterCodeLensProvider(selector: vscode.DocumentSelector, provider: vscode.CodeLensProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerCodeLensProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterDefinitionProvider(selector: vscode.DocumentSelector, provider: vscode.DefinitionProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerDefinitionProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterDeclarationProvider(selector: vscode.DocumentSelector, provider: vscode.DeclarationProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerDeclarationProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterImplementationProvider(selector: vscode.DocumentSelector, provider: vscode.ImplementationProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerImplementationProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterTypeDefinitionProvider(selector: vscode.DocumentSelector, provider: vscode.TypeDefinitionProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerTypeDefinitionProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterHoverProvider(selector: vscode.DocumentSelector, provider: vscode.HoverProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerHoverProvider(extension, checkSelector(selector), provider, extension.identifier);\n\t\t\t},\n\t\t\tregisterEvaluatableExpressionProvider(selector: vscode.DocumentSelector, provider: vscode.EvaluatableExpressionProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerEvaluatableExpressionProvider(extension, checkSelector(selector), provider, extension.identifier);\n\t\t\t},\n\t\t\tregisterInlineValuesProvider(selector: vscode.DocumentSelector, provider: vscode.InlineValuesProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerInlineValuesProvider(extension, checkSelector(selector), provider, extension.identifier);\n\t\t\t},\n\t\t\tregisterDocumentHighlightProvider(selector: vscode.DocumentSelector, provider: vscode.DocumentHighlightProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerDocumentHighlightProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterMultiDocumentHighlightProvider(selector: vscode.DocumentSelector, provider: vscode.MultiDocumentHighlightProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerMultiDocumentHighlightProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterLinkedEditingRangeProvider(selector: vscode.DocumentSelector, provider: vscode.LinkedEditingRangeProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerLinkedEditingRangeProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterReferenceProvider(selector: vscode.DocumentSelector, provider: vscode.ReferenceProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerReferenceProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterRenameProvider(selector: vscode.DocumentSelector, provider: vscode.RenameProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerRenameProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterNewSymbolNamesProvider(selector: vscode.DocumentSelector, provider: vscode.NewSymbolNamesProvider): vscode.Disposable {\n\t\t\t\tcheckProposedApiEnabled(extension, 'newSymbolNamesProvider');\n\t\t\t\treturn extHostLanguageFeatures.registerNewSymbolNamesProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterDocumentSymbolProvider(selector: vscode.DocumentSelector, provider: vscode.DocumentSymbolProvider, metadata?: vscode.DocumentSymbolProviderMetadata): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerDocumentSymbolProvider(extension, checkSelector(selector), provider, metadata);\n\t\t\t},\n\t\t\tregisterWorkspaceSymbolProvider(provider: vscode.WorkspaceSymbolProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerWorkspaceSymbolProvider(extension, provider);\n\t\t\t},\n\t\t\tregisterDocumentFormattingEditProvider(selector: vscode.DocumentSelector, provider: vscode.DocumentFormattingEditProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerDocumentFormattingEditProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterDocumentRangeFormattingEditProvider(selector: vscode.DocumentSelector, provider: vscode.DocumentRangeFormattingEditProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerDocumentRangeFormattingEditProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterOnTypeFormattingEditProvider(selector: vscode.DocumentSelector, provider: vscode.OnTypeFormattingEditProvider, firstTriggerCharacter: string, ...moreTriggerCharacters: string[]): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerOnTypeFormattingEditProvider(extension, checkSelector(selector), provider, [firstTriggerCharacter].concat(moreTriggerCharacters));\n\t\t\t},\n\t\t\tregisterDocumentSemanticTokensProvider(selector: vscode.DocumentSelector, provider: vscode.DocumentSemanticTokensProvider, legend: vscode.SemanticTokensLegend): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerDocumentSemanticTokensProvider(extension, checkSelector(selector), provider, legend);\n\t\t\t},\n\t\t\tregisterDocumentRangeSemanticTokensProvider(selector: vscode.DocumentSelector, provider: vscode.DocumentRangeSemanticTokensProvider, legend: vscode.SemanticTokensLegend): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerDocumentRangeSemanticTokensProvider(extension, checkSelector(selector), provider, legend);\n\t\t\t},\n\t\t\tregisterSignatureHelpProvider(selector: vscode.DocumentSelector, provider: vscode.SignatureHelpProvider, firstItem?: string | vscode.SignatureHelpProviderMetadata, ...remaining: string[]): vscode.Disposable {\n\t\t\t\tif (typeof firstItem === 'object') {\n\t\t\t\t\treturn extHostLanguageFeatures.registerSignatureHelpProvider(extension, checkSelector(selector), provider, firstItem);\n\t\t\t\t}\n\t\t\t\treturn extHostLanguageFeatures.registerSignatureHelpProvider(extension, checkSelector(selector), provider, typeof firstItem === 'undefined' ? [] : [firstItem, ...remaining]);\n\t\t\t},\n\t\t\tregisterCompletionItemProvider(selector: vscode.DocumentSelector, provider: vscode.CompletionItemProvider, ...triggerCharacters: string[]): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerCompletionItemProvider(extension, checkSelector(selector), provider, triggerCharacters);\n\t\t\t},\n\t\t\tregisterInlineCompletionItemProvider(selector: vscode.DocumentSelector, provider: vscode.InlineCompletionItemProvider, metadata?: vscode.InlineCompletionItemProviderMetadata): vscode.Disposable {\n\t\t\t\tif (provider.handleDidShowCompletionItem) {\n\t\t\t\t\tcheckProposedApiEnabled(extension, 'inlineCompletionsAdditions');\n\t\t\t\t}\n\t\t\t\tif (provider.handleDidPartiallyAcceptCompletionItem) {\n\t\t\t\t\tcheckProposedApiEnabled(extension, 'inlineCompletionsAdditions');\n\t\t\t\t}\n\t\t\t\tif (metadata) {\n\t\t\t\t\tcheckProposedApiEnabled(extension, 'inlineCompletionsAdditions');\n\t\t\t\t}\n\t\t\t\treturn extHostLanguageFeatures.registerInlineCompletionsProvider(extension, checkSelector(selector), provider, metadata);\n\t\t\t},\n\t\t\tregisterInlineEditProvider(selector: vscode.DocumentSelector, provider: vscode.InlineEditProvider): vscode.Disposable {\n\t\t\t\tcheckProposedApiEnabled(extension, 'inlineEdit');\n\t\t\t\treturn extHostLanguageFeatures.registerInlineEditProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterDocumentLinkProvider(selector: vscode.DocumentSelector, provider: vscode.DocumentLinkProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerDocumentLinkProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterColorProvider(selector: vscode.DocumentSelector, provider: vscode.DocumentColorProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerColorProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterFoldingRangeProvider(selector: vscode.DocumentSelector, provider: vscode.FoldingRangeProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerFoldingRangeProvider(extension, checkSelector(selector), provider);\n\t\t\t},\n\t\t\tregisterSelectionRangeProvider(selector: vscode.DocumentSelector, provider: vscode.SelectionRangeProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerSelectionRangeProvider(extension, selector, provider);\n\t\t\t},\n\t\t\tregisterCallHierarchyProvider(selector: vscode.DocumentSelector, provider: vscode.CallHierarchyProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerCallHierarchyProvider(extension, selector, provider);\n\t\t\t},\n\t\t\tregisterTypeHierarchyProvider(selector: vscode.DocumentSelector, provider: vscode.TypeHierarchyProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerTypeHierarchyProvider(extension, selector, provider);\n\t\t\t},\n\t\t\tsetLanguageConfiguration: (language: string, configuration: vscode.LanguageConfiguration): vscode.Disposable => {\n\t\t\t\treturn extHostLanguageFeatures.setLanguageConfiguration(extension, language, configuration);\n\t\t\t},\n\t\t\tgetTokenInformationAtPosition(doc: vscode.TextDocument, pos: vscode.Position) {\n\t\t\t\tcheckProposedApiEnabled(extension, 'tokenInformation');\n\t\t\t\treturn extHostLanguages.tokenAtPosition(doc, pos);\n\t\t\t},\n\t\t\tregisterInlayHintsProvider(selector: vscode.DocumentSelector, provider: vscode.InlayHintsProvider): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerInlayHintsProvider(extension, selector, provider);\n\t\t\t},\n\t\t\tcreateLanguageStatusItem(id: string, selector: vscode.DocumentSelector): vscode.LanguageStatusItem {\n\t\t\t\treturn extHostLanguages.createLanguageStatusItem(extension, id, selector);\n\t\t\t},\n\t\t\tregisterDocumentDropEditProvider(selector: vscode.DocumentSelector, provider: vscode.DocumentDropEditProvider, metadata?: vscode.DocumentDropEditProviderMetadata): vscode.Disposable {\n\t\t\t\treturn extHostLanguageFeatures.registerDocumentOnDropEditProvider(extension, selector, provider, isProposedApiEnabled(extension, 'documentPaste') ? metadata : undefined);\n\t\t\t}\n\t\t};\n\n\t\t// namespace: window\n\t\tconst window: typeof vscode.window = {\n\t\t\tget activeTextEditor() {\n\t\t\t\treturn extHostEditors.getActiveTextEditor();\n\t\t\t},\n\t\t\tget visibleTextEditors() {\n\t\t\t\treturn extHostEditors.getVisibleTextEditors();\n\t\t\t},\n\t\t\tget activeTerminal() {\n\t\t\t\treturn extHostTerminalService.activeTerminal;\n\t\t\t},\n\t\t\tget terminals() {\n\t\t\t\treturn extHostTerminalService.terminals;\n\t\t\t},\n\t\t\tasync showTextDocument(documentOrUri: vscode.TextDocument | vscode.Uri, columnOrOptions?: vscode.ViewColumn | vscode.TextDocumentShowOptions, preserveFocus?: boolean): Promise<vscode.TextEditor> {\n\t\t\t\tif (URI.isUri(documentOrUri) && documentOrUri.scheme === Schemas.vscodeRemote && !documentOrUri.authority) {\n\t\t\t\t\textHostApiDeprecation.report('workspace.showTextDocument', extension, `A URI of 'vscode-remote' scheme requires an authority.`);\n\t\t\t\t}\n\t\t\t\tconst document = await (URI.isUri(documentOrUri)\n\t\t\t\t\t? Promise.resolve(workspace.openTextDocument(documentOrUri))\n\t\t\t\t\t: Promise.resolve(<vscode.TextDocument>documentOrUri));\n\n\t\t\t\treturn extHostEditors.showTextDocument(document, columnOrOptions, preserveFocus);\n\t\t\t},\n\t\t\tcreateTextEditorDecorationType(options: vscode.DecorationRenderOptions): vscode.TextEditorDecorationType {\n\t\t\t\treturn extHostEditors.createTextEditorDecorationType(extension, options);\n\t\t\t},\n\t\t\tonDidChangeActiveTextEditor(listener, thisArg?, disposables?) {\n\t\t\t\treturn _asExtensionEvent(extHostEditors.onDidChangeActiveTextEditor)(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidChangeVisibleTextEditors(listener, thisArg, disposables) {\n\t\t\t\treturn _asExtensionEvent(extHostEditors.onDidChangeVisibleTextEditors)(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidChangeTextEditorSelection(listener: (e: vscode.TextEditorSelectionChangeEvent) => any, thisArgs?: any, disposables?: extHostTypes.Disposable[]) {\n\t\t\t\treturn _asExtensionEvent(extHostEditors.onDidChangeTextEditorSelection)(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tonDidChangeTextEditorOptions(listener: (e: vscode.TextEditorOptionsChangeEvent) => any, thisArgs?: any, disposables?: extHostTypes.Disposable[]) {\n\t\t\t\treturn _asExtensionEvent(extHostEditors.onDidChangeTextEditorOptions)(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tonDidChangeTextEditorVisibleRanges(listener: (e: vscode.TextEditorVisibleRangesChangeEvent) => any, thisArgs?: any, disposables?: extHostTypes.Disposable[]) {\n\t\t\t\treturn _asExtensionEvent(extHostEditors.onDidChangeTextEditorVisibleRanges)(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tonDidChangeTextEditorViewColumn(listener, thisArg?, disposables?) {\n\t\t\t\treturn _asExtensionEvent(extHostEditors.onDidChangeTextEditorViewColumn)(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidCloseTerminal(listener, thisArg?, disposables?) {\n\t\t\t\treturn _asExtensionEvent(extHostTerminalService.onDidCloseTerminal)(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidOpenTerminal(listener, thisArg?, disposables?) {\n\t\t\t\treturn _asExtensionEvent(extHostTerminalService.onDidOpenTerminal)(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidChangeActiveTerminal(listener, thisArg?, disposables?) {\n\t\t\t\treturn _asExtensionEvent(extHostTerminalService.onDidChangeActiveTerminal)(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidChangeTerminalDimensions(listener, thisArg?, disposables?) {\n\t\t\t\tcheckProposedApiEnabled(extension, 'terminalDimensions');\n\t\t\t\treturn _asExtensionEvent(extHostTerminalService.onDidChangeTerminalDimensions)(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidChangeTerminalState(listener, thisArg?, disposables?) {\n\t\t\t\treturn _asExtensionEvent(extHostTerminalService.onDidChangeTerminalState)(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidWriteTerminalData(listener, thisArg?, disposables?) {\n\t\t\t\tcheckProposedApiEnabled(extension, 'terminalDataWriteEvent');\n\t\t\t\treturn _asExtensionEvent(extHostTerminalService.onDidWriteTerminalData)(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidExecuteTerminalCommand(listener, thisArg?, disposables?) {\n\t\t\t\tcheckProposedApiEnabled(extension, 'terminalExecuteCommandEvent');\n\t\t\t\treturn _asExtensionEvent(extHostTerminalService.onDidExecuteTerminalCommand)(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidChangeTerminalShellIntegration(listener, thisArg?, disposables?) {\n\t\t\t\treturn _asExtensionEvent(extHostTerminalShellIntegration.onDidChangeTerminalShellIntegration)(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidStartTerminalShellExecution(listener, thisArg?, disposables?) {\n\t\t\t\treturn _asExtensionEvent(extHostTerminalShellIntegration.onDidStartTerminalShellExecution)(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidEndTerminalShellExecution(listener, thisArg?, disposables?) {\n\t\t\t\treturn _asExtensionEvent(extHostTerminalShellIntegration.onDidEndTerminalShellExecution)(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tget state() {\n\t\t\t\treturn extHostWindow.getState();\n\t\t\t},\n\t\t\tonDidChangeWindowState(listener, thisArg?, disposables?) {\n\t\t\t\treturn _asExtensionEvent(extHostWindow.onDidChangeWindowState)(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tshowInformationMessage(message: string, ...rest: Array<vscode.MessageOptions | string | vscode.MessageItem>) {\n\t\t\t\treturn <Thenable<any>>extHostMessageService.showMessage(extension, Severity.Info, message, rest[0], <Array<string | vscode.MessageItem>>rest.slice(1));\n\t\t\t},\n\t\t\tshowWarningMessage(message: string, ...rest: Array<vscode.MessageOptions | string | vscode.MessageItem>) {\n\t\t\t\treturn <Thenable<any>>extHostMessageService.showMessage(extension, Severity.Warning, message, rest[0], <Array<string | vscode.MessageItem>>rest.slice(1));\n\t\t\t},\n\t\t\tshowErrorMessage(message: string, ...rest: Array<vscode.MessageOptions | string | vscode.MessageItem>) {\n\t\t\t\treturn <Thenable<any>>extHostMessageService.showMessage(extension, Severity.Error, message, rest[0], <Array<string | vscode.MessageItem>>rest.slice(1));\n\t\t\t},\n\t\t\tshowQuickPick(items: any, options?: vscode.QuickPickOptions, token?: vscode.CancellationToken): any {\n\t\t\t\treturn extHostQuickOpen.showQuickPick(extension, items, options, token);\n\t\t\t},\n\t\t\tshowWorkspaceFolderPick(options?: vscode.WorkspaceFolderPickOptions) {\n\t\t\t\treturn extHostQuickOpen.showWorkspaceFolderPick(options);\n\t\t\t},\n\t\t\tshowInputBox(options?: vscode.InputBoxOptions, token?: vscode.CancellationToken) {\n\t\t\t\treturn extHostQuickOpen.showInput(options, token);\n\t\t\t},\n\t\t\tshowOpenDialog(options) {\n\t\t\t\treturn extHostDialogs.showOpenDialog(extension, options);\n\t\t\t},\n\t\t\tshowSaveDialog(options) {\n\t\t\t\treturn extHostDialogs.showSaveDialog(options);\n\t\t\t},\n\t\t\tcreateStatusBarItem(alignmentOrId?: vscode.StatusBarAlignment | string, priorityOrAlignment?: number | vscode.StatusBarAlignment, priorityArg?: number): vscode.StatusBarItem {\n\t\t\t\tlet id: string | undefined;\n\t\t\t\tlet alignment: number | undefined;\n\t\t\t\tlet priority: number | undefined;\n\n\t\t\t\tif (typeof alignmentOrId === 'string') {\n\t\t\t\t\tid = alignmentOrId;\n\t\t\t\t\talignment = priorityOrAlignment;\n\t\t\t\t\tpriority = priorityArg;\n\t\t\t\t} else {\n\t\t\t\t\talignment = alignmentOrId;\n\t\t\t\t\tpriority = priorityOrAlignment;\n\t\t\t\t}\n\n\t\t\t\treturn extHostStatusBar.createStatusBarEntry(extension, id, alignment, priority);\n\t\t\t},\n\t\t\tsetStatusBarMessage(text: string, timeoutOrThenable?: number | Thenable<any>): vscode.Disposable {\n\t\t\t\treturn extHostStatusBar.setStatusBarMessage(text, timeoutOrThenable);\n\t\t\t},\n\t\t\twithScmProgress<R>(task: (progress: vscode.Progress<number>) => Thenable<R>) {\n\t\t\t\textHostApiDeprecation.report('window.withScmProgress', extension,\n\t\t\t\t\t`Use 'withProgress' instead.`);\n\n\t\t\t\treturn extHostProgress.withProgress(extension, { location: extHostTypes.ProgressLocation.SourceControl }, (progress, token) => task({ report(n: number) { /*noop*/ } }));\n\t\t\t},\n\t\t\twithProgress<R>(options: vscode.ProgressOptions, task: (progress: vscode.Progress<{ message?: string; worked?: number }>, token: vscode.CancellationToken) => Thenable<R>) {\n\t\t\t\treturn extHostProgress.withProgress(extension, options, task);\n\t\t\t},\n\t\t\tcreateOutputChannel(name: string, options: string | { log: true } | undefined): any {\n\t\t\t\treturn extHostOutputService.createOutputChannel(name, options, extension);\n\t\t\t},\n\t\t\tcreateWebviewPanel(viewType: string, title: string, showOptions: vscode.ViewColumn | { viewColumn: vscode.ViewColumn; preserveFocus?: boolean }, options?: vscode.WebviewPanelOptions & vscode.WebviewOptions): vscode.WebviewPanel {\n\t\t\t\treturn extHostWebviewPanels.createWebviewPanel(extension, viewType, title, showOptions, options);\n\t\t\t},\n\t\t\tcreateWebviewTextEditorInset(editor: vscode.TextEditor, line: number, height: number, options?: vscode.WebviewOptions): vscode.WebviewEditorInset {\n\t\t\t\tcheckProposedApiEnabled(extension, 'editorInsets');\n\t\t\t\treturn extHostEditorInsets.createWebviewEditorInset(editor, line, height, options, extension);\n\t\t\t},\n\t\t\tcreateTerminal(nameOrOptions?: vscode.TerminalOptions | vscode.ExtensionTerminalOptions | string, shellPath?: string, shellArgs?: readonly string[] | string): vscode.Terminal {\n\t\t\t\tif (typeof nameOrOptions === 'object') {\n\t\t\t\t\tif ('pty' in nameOrOptions) {\n\t\t\t\t\t\treturn extHostTerminalService.createExtensionTerminal(nameOrOptions);\n\t\t\t\t\t}\n\t\t\t\t\treturn extHostTerminalService.createTerminalFromOptions(nameOrOptions);\n\t\t\t\t}\n\t\t\t\treturn extHostTerminalService.createTerminal(nameOrOptions, shellPath, shellArgs);\n\t\t\t},\n\t\t\tregisterTerminalLinkProvider(provider: vscode.TerminalLinkProvider): vscode.Disposable {\n\t\t\t\treturn extHostTerminalService.registerLinkProvider(provider);\n\t\t\t},\n\t\t\tregisterTerminalProfileProvider(id: string, provider: vscode.TerminalProfileProvider): vscode.Disposable {\n\t\t\t\treturn extHostTerminalService.registerProfileProvider(extension, id, provider);\n\t\t\t},\n\t\t\tregisterTerminalQuickFixProvider(id: string, provider: vscode.TerminalQuickFixProvider): vscode.Disposable {\n\t\t\t\tcheckProposedApiEnabled(extension, 'terminalQuickFixProvider');\n\t\t\t\treturn extHostTerminalService.registerTerminalQuickFixProvider(id, extension.identifier.value, provider);\n\t\t\t},\n\t\t\tregisterTreeDataProvider(viewId: string, treeDataProvider: vscode.TreeDataProvider<any>): vscode.Disposable {\n\t\t\t\treturn extHostTreeViews.registerTreeDataProvider(viewId, treeDataProvider, extension);\n\t\t\t},\n\t\t\tcreateTreeView(viewId: string, options: { treeDataProvider: vscode.TreeDataProvider<any> }): vscode.TreeView<any> {\n\t\t\t\treturn extHostTreeViews.createTreeView(viewId, options, extension);\n\t\t\t},\n\t\t\tregisterWebviewPanelSerializer: (viewType: string, serializer: vscode.WebviewPanelSerializer) => {\n\t\t\t\treturn extHostWebviewPanels.registerWebviewPanelSerializer(extension, viewType, serializer);\n\t\t\t},\n\t\t\tregisterCustomEditorProvider: (viewType: string, provider: vscode.CustomTextEditorProvider | vscode.CustomReadonlyEditorProvider, options: { webviewOptions?: vscode.WebviewPanelOptions; supportsMultipleEditorsPerDocument?: boolean } = {}) => {\n\t\t\t\treturn extHostCustomEditors.registerCustomEditorProvider(extension, viewType, provider, options);\n\t\t\t},\n\t\t\tregisterFileDecorationProvider(provider: vscode.FileDecorationProvider) {\n\t\t\t\treturn extHostDecorations.registerFileDecorationProvider(provider, extension);\n\t\t\t},\n\t\t\tregisterUriHandler(handler: vscode.UriHandler) {\n\t\t\t\treturn extHostUrls.registerUriHandler(extension, handler);\n\t\t\t},\n\t\t\tcreateQuickPick<T extends vscode.QuickPickItem>(): vscode.QuickPick<T> {\n\t\t\t\treturn extHostQuickOpen.createQuickPick(extension);\n\t\t\t},\n\t\t\tcreateInputBox(): vscode.InputBox {\n\t\t\t\treturn extHostQuickOpen.createInputBox(extension);\n\t\t\t},\n\t\t\tget activeColorTheme(): vscode.ColorTheme {\n\t\t\t\treturn extHostTheming.activeColorTheme;\n\t\t\t},\n\t\t\tonDidChangeActiveColorTheme(listener, thisArg?, disposables?) {\n\t\t\t\treturn _asExtensionEvent(extHostTheming.onDidChangeActiveColorTheme)(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tregisterWebviewViewProvider(viewId: string, provider: vscode.WebviewViewProvider, options?: {\n\t\t\t\twebviewOptions?: {\n\t\t\t\t\tretainContextWhenHidden?: boolean;\n\t\t\t\t};\n\t\t\t}) {\n\t\t\t\treturn extHostWebviewViews.registerWebviewViewProvider(extension, viewId, provider, options?.webviewOptions);\n\t\t\t},\n\t\t\tget activeNotebookEditor(): vscode.NotebookEditor | undefined {\n\t\t\t\treturn extHostNotebook.activeNotebookEditor;\n\t\t\t},\n\t\t\tonDidChangeActiveNotebookEditor(listener, thisArgs?, disposables?) {\n\t\t\t\treturn _asExtensionEvent(extHostNotebook.onDidChangeActiveNotebookEditor)(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tget visibleNotebookEditors() {\n\t\t\t\treturn extHostNotebook.visibleNotebookEditors;\n\t\t\t},\n\t\t\tget onDidChangeVisibleNotebookEditors() {\n\t\t\t\treturn _asExtensionEvent(extHostNotebook.onDidChangeVisibleNotebookEditors);\n\t\t\t},\n\t\t\tonDidChangeNotebookEditorSelection(listener, thisArgs?, disposables?) {\n\t\t\t\treturn _asExtensionEvent(extHostNotebookEditors.onDidChangeNotebookEditorSelection)(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tonDidChangeNotebookEditorVisibleRanges(listener, thisArgs?, disposables?) {\n\t\t\t\treturn _asExtensionEvent(extHostNotebookEditors.onDidChangeNotebookEditorVisibleRanges)(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tshowNotebookDocument(document, options?) {\n\t\t\t\treturn extHostNotebook.showNotebookDocument(document, options);\n\t\t\t},\n\t\t\tregisterExternalUriOpener(id: string, opener: vscode.ExternalUriOpener, metadata: vscode.ExternalUriOpenerMetadata) {\n\t\t\t\tcheckProposedApiEnabled(extension, 'externalUriOpener');\n\t\t\t\treturn extHostUriOpeners.registerExternalUriOpener(extension.identifier, id, opener, metadata);\n\t\t\t},\n\t\t\tregisterProfileContentHandler(id: string, handler: vscode.ProfileContentHandler) {\n\t\t\t\tcheckProposedApiEnabled(extension, 'profileContentHandlers');\n\t\t\t\treturn extHostProfileContentHandlers.registerProfileContentHandler(extension, id, handler);\n\t\t\t},\n\t\t\tregisterQuickDiffProvider(selector: vscode.DocumentSelector, quickDiffProvider: vscode.QuickDiffProvider, label: string, rootUri?: vscode.Uri): vscode.Disposable {\n\t\t\t\tcheckProposedApiEnabled(extension, 'quickDiffProvider');\n\t\t\t\treturn extHostQuickDiff.registerQuickDiffProvider(checkSelector(selector), quickDiffProvider, label, rootUri);\n\t\t\t},\n\t\t\tget tabGroups(): vscode.TabGroups {\n\t\t\t\treturn extHostEditorTabs.tabGroups;\n\t\t\t},\n\t\t\tregisterShareProvider(selector: vscode.DocumentSelector, provider: vscode.ShareProvider): vscode.Disposable {\n\t\t\t\tcheckProposedApiEnabled(extension, 'shareProvider');\n\t\t\t\treturn extHostShare.registerShareProvider(checkSelector(selector), provider);\n\t\t\t}\n\t\t};\n\n\t\t// namespace: workspace\n\n\t\tconst workspace: typeof vscode.workspace = {\n\t\t\tget rootPath() {\n\t\t\t\textHostApiDeprecation.report('workspace.rootPath', extension,\n\t\t\t\t\t`Please use 'workspace.workspaceFolders' instead. More details: https://aka.ms/vscode-eliminating-rootpath`);\n\n\t\t\t\treturn extHostWorkspace.getPath();\n\t\t\t},\n\t\t\tset rootPath(value) {\n\t\t\t\tthrow new errors.ReadonlyError('rootPath');\n\t\t\t},\n\t\t\tgetWorkspaceFolder(resource) {\n\t\t\t\treturn extHostWorkspace.getWorkspaceFolder(resource);\n\t\t\t},\n\t\t\tget workspaceFolders() {\n\t\t\t\treturn extHostWorkspace.getWorkspaceFolders();\n\t\t\t},\n\t\t\tget name() {\n\t\t\t\treturn extHostWorkspace.name;\n\t\t\t},\n\t\t\tset name(value) {\n\t\t\t\tthrow new errors.ReadonlyError('name');\n\t\t\t},\n\t\t\tget workspaceFile() {\n\t\t\t\treturn extHostWorkspace.workspaceFile;\n\t\t\t},\n\t\t\tset workspaceFile(value) {\n\t\t\t\tthrow new errors.ReadonlyError('workspaceFile');\n\t\t\t},\n\t\t\tupdateWorkspaceFolders: (index, deleteCount, ...workspaceFoldersToAdd) => {\n\t\t\t\treturn extHostWorkspace.updateWorkspaceFolders(extension, index, deleteCount || 0, ...workspaceFoldersToAdd);\n\t\t\t},\n\t\t\tonDidChangeWorkspaceFolders: function (listener, thisArgs?, disposables?) {\n\t\t\t\treturn _asExtensionEvent(extHostWorkspace.onDidChangeWorkspace)(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tasRelativePath: (pathOrUri, includeWorkspace?) => {\n\t\t\t\treturn extHostWorkspace.getRelativePath(pathOrUri, includeWorkspace);\n\t\t\t},\n\t\t\tfindFiles: (include, exclude, maxResults?, token?) => {\n\t\t\t\t// Note, undefined/null have different meanings on \"exclude\"\n\t\t\t\treturn extHostWorkspace.findFiles(include, exclude, maxResults, extension.identifier, token);\n\t\t\t},\n\t\t\tfindFiles2: (filePattern: vscode.GlobPattern, options?: vscode.FindFiles2Options, token?: vscode.CancellationToken): Thenable<vscode.Uri[]> => {\n\t\t\t\tcheckProposedApiEnabled(extension, 'findFiles2');\n\t\t\t\treturn extHostWorkspace.findFiles2(filePattern, options, extension.identifier, token);\n\t\t\t},\n\t\t\tfindFiles2New: (filePattern: vscode.GlobPattern[], options?: vscode.FindFiles2OptionsNew, token?: vscode.CancellationToken): Thenable<vscode.Uri[]> => {\n\t\t\t\tcheckProposedApiEnabled(extension, 'findFiles2New');\n\t\t\t\treturn extHostWorkspace.findFiles2New(filePattern, options, extension.identifier, token);\n\t\t\t},\n\t\t\tfindTextInFiles: (query: vscode.TextSearchQuery, optionsOrCallback: vscode.FindTextInFilesOptions | ((result: vscode.TextSearchResult) => void), callbackOrToken?: vscode.CancellationToken | ((result: vscode.TextSearchResult) => void), token?: vscode.CancellationToken) => {\n\t\t\t\tcheckProposedApiEnabled(extension, 'findTextInFiles');\n\t\t\t\tlet options: vscode.FindTextInFilesOptions;\n\t\t\t\tlet callback: (result: vscode.TextSearchResult) => void;\n\n\t\t\t\tif (typeof optionsOrCallback === 'object') {\n\t\t\t\t\toptions = optionsOrCallback;\n\t\t\t\t\tcallback = callbackOrToken as (result: vscode.TextSearchResult) => void;\n\t\t\t\t} else {\n\t\t\t\t\toptions = {};\n\t\t\t\t\tcallback = optionsOrCallback;\n\t\t\t\t\ttoken = callbackOrToken as vscode.CancellationToken;\n\t\t\t\t}\n\n\t\t\t\treturn extHostWorkspace.findTextInFiles(query, options || {}, callback, extension.identifier, token);\n\t\t\t},\n\t\t\tfindTextInFilesNew: (query: vscode.TextSearchQueryNew, options?: vscode.FindTextInFilesOptionsNew, token?: vscode.CancellationToken): vscode.FindTextInFilesResponse => {\n\t\t\t\tcheckProposedApiEnabled(extension, 'findTextInFilesNew');\n\t\t\t\tcheckProposedApiEnabled(extension, 'textSearchProviderNew');\n\t\t\t\treturn extHostWorkspace.findTextInFilesNew(query, options, extension.identifier, token);\n\t\t\t},\n\t\t\tsave: (uri) => {\n\t\t\t\treturn extHostWorkspace.save(uri);\n\t\t\t},\n\t\t\tsaveAs: (uri) => {\n\t\t\t\treturn extHostWorkspace.saveAs(uri);\n\t\t\t},\n\t\t\tsaveAll: (includeUntitled?) => {\n\t\t\t\treturn extHostWorkspace.saveAll(includeUntitled);\n\t\t\t},\n\t\t\tapplyEdit(edit: vscode.WorkspaceEdit, metadata?: vscode.WorkspaceEditMetadata): Thenable<boolean> {\n\t\t\t\treturn extHostBulkEdits.applyWorkspaceEdit(edit, extension, metadata);\n\t\t\t},\n\t\t\tcreateFileSystemWatcher: (pattern, optionsOrIgnoreCreate, ignoreChange?, ignoreDelete?): vscode.FileSystemWatcher => {\n\t\t\t\tlet options: FileSystemWatcherCreateOptions | undefined = undefined;\n\n\t\t\t\tif (typeof optionsOrIgnoreCreate === 'boolean') {\n\t\t\t\t\toptions = {\n\t\t\t\t\t\tignoreCreateEvents: Boolean(optionsOrIgnoreCreate),\n\t\t\t\t\t\tignoreChangeEvents: Boolean(ignoreChange),\n\t\t\t\t\t\tignoreDeleteEvents: Boolean(ignoreDelete),\n\t\t\t\t\t\tcorrelate: false\n\t\t\t\t\t};\n\t\t\t\t} else if (optionsOrIgnoreCreate) {\n\t\t\t\t\tcheckProposedApiEnabled(extension, 'createFileSystemWatcher');\n\t\t\t\t\toptions = {\n\t\t\t\t\t\t...optionsOrIgnoreCreate,\n\t\t\t\t\t\tcorrelate: true\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn extHostFileSystemEvent.createFileSystemWatcher(extHostWorkspace, extension, pattern, options);\n\t\t\t},\n\t\t\tget textDocuments() {\n\t\t\t\treturn extHostDocuments.getAllDocumentData().map(data => data.document);\n\t\t\t},\n\t\t\tset textDocuments(value) {\n\t\t\t\tthrow new errors.ReadonlyError('textDocuments');\n\t\t\t},\n\t\t\topenTextDocument(uriOrFileNameOrOptions?: vscode.Uri | string | { language?: string; content?: string }) {\n\t\t\t\tlet uriPromise: Thenable<URI>;\n\n\t\t\t\tconst options = uriOrFileNameOrOptions as { language?: string; content?: string };\n\t\t\t\tif (typeof uriOrFileNameOrOptions === 'string') {\n\t\t\t\t\turiPromise = Promise.resolve(URI.file(uriOrFileNameOrOptions));\n\t\t\t\t} else if (URI.isUri(uriOrFileNameOrOptions)) {\n\t\t\t\t\turiPromise = Promise.resolve(uriOrFileNameOrOptions);\n\t\t\t\t} else if (!options || typeof options === 'object') {\n\t\t\t\t\turiPromise = extHostDocuments.createDocumentData(options);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('illegal argument - uriOrFileNameOrOptions');\n\t\t\t\t}\n\n\t\t\t\treturn uriPromise.then(uri => {\n\t\t\t\t\textHostLogService.trace(`openTextDocument from ${extension.identifier}`);\n\t\t\t\t\tif (uri.scheme === Schemas.vscodeRemote && !uri.authority) {\n\t\t\t\t\t\textHostApiDeprecation.report('workspace.openTextDocument', extension, `A URI of 'vscode-remote' scheme requires an authority.`);\n\t\t\t\t\t}\n\t\t\t\t\treturn extHostDocuments.ensureDocumentData(uri).then(documentData => {\n\t\t\t\t\t\treturn documentData.document;\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t\tonDidOpenTextDocument: (listener, thisArgs?, disposables?) => {\n\t\t\t\treturn _asExtensionEvent(extHostDocuments.onDidAddDocument)(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tonDidCloseTextDocument: (listener, thisArgs?, disposables?) => {\n\t\t\t\treturn _asExtensionEvent(extHostDocuments.onDidRemoveDocument)(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tonDidChangeTextDocument: (listener, thisArgs?, disposables?) => {\n\t\t\t\treturn _asExtensionEvent(extHostDocuments.onDidChangeDocument)(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tonDidSaveTextDocument: (listener, thisArgs?, disposables?) => {\n\t\t\t\treturn _asExtensionEvent(extHostDocuments.onDidSaveDocument)(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tonWillSaveTextDocument: (listener, thisArgs?, disposables?) => {\n\t\t\t\treturn _asExtensionEvent(extHostDocumentSaveParticipant.getOnWillSaveTextDocumentEvent(extension))(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tget notebookDocuments(): vscode.NotebookDocument[] {\n\t\t\t\treturn extHostNotebook.notebookDocuments.map(d => d.apiNotebook);\n\t\t\t},\n\t\t\tasync openNotebookDocument(uriOrType?: URI | string, content?: vscode.NotebookData) {\n\t\t\t\tlet uri: URI;\n\t\t\t\tif (URI.isUri(uriOrType)) {\n\t\t\t\t\turi = uriOrType;\n\t\t\t\t\tawait extHostNotebook.openNotebookDocument(uriOrType);\n\t\t\t\t} else if (typeof uriOrType === 'string') {\n\t\t\t\t\turi = URI.revive(await extHostNotebook.createNotebookDocument({ viewType: uriOrType, content }));\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Invalid arguments');\n\t\t\t\t}\n\t\t\t\treturn extHostNotebook.getNotebookDocument(uri).apiNotebook;\n\t\t\t},\n\t\t\tonDidSaveNotebookDocument(listener, thisArg, disposables) {\n\t\t\t\treturn _asExtensionEvent(extHostNotebookDocuments.onDidSaveNotebookDocument)(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidChangeNotebookDocument(listener, thisArg, disposables) {\n\t\t\t\treturn _asExtensionEvent(extHostNotebookDocuments.onDidChangeNotebookDocument)(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonWillSaveNotebookDocument(listener, thisArg, disposables) {\n\t\t\t\treturn _asExtensionEvent(extHostNotebookDocumentSaveParticipant.getOnWillSaveNotebookDocumentEvent(extension))(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tget onDidOpenNotebookDocument() {\n\t\t\t\treturn _asExtensionEvent(extHostNotebook.onDidOpenNotebookDocument);\n\t\t\t},\n\t\t\tget onDidCloseNotebookDocument() {\n\t\t\t\treturn _asExtensionEvent(extHostNotebook.onDidCloseNotebookDocument);\n\t\t\t},\n\t\t\tregisterNotebookSerializer(viewType: string, serializer: vscode.NotebookSerializer, options?: vscode.NotebookDocumentContentOptions, registration?: vscode.NotebookRegistrationData) {\n\t\t\t\treturn extHostNotebook.registerNotebookSerializer(extension, viewType, serializer, options, isProposedApiEnabled(extension, 'notebookLiveShare') ? registration : undefined);\n\t\t\t},\n\t\t\tonDidChangeConfiguration: (listener: (_: any) => any, thisArgs?: any, disposables?: extHostTypes.Disposable[]) => {\n\t\t\t\treturn _asExtensionEvent(configProvider.onDidChangeConfiguration)(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tgetConfiguration(section?: string, scope?: vscode.ConfigurationScope | null): vscode.WorkspaceConfiguration {\n\t\t\t\tscope = arguments.length === 1 ? undefined : scope;\n\t\t\t\treturn configProvider.getConfiguration(section, scope, extension);\n\t\t\t},\n\t\t\tregisterTextDocumentContentProvider(scheme: string, provider: vscode.TextDocumentContentProvider) {\n\t\t\t\treturn extHostDocumentContentProviders.registerTextDocumentContentProvider(scheme, provider);\n\t\t\t},\n\t\t\tregisterTaskProvider: (type: string, provider: vscode.TaskProvider) => {\n\t\t\t\textHostApiDeprecation.report('window.registerTaskProvider', extension,\n\t\t\t\t\t`Use the corresponding function on the 'tasks' namespace instead`);\n\n\t\t\t\treturn extHostTask.registerTaskProvider(extension, type, provider);\n\t\t\t},\n\t\t\tregisterFileSystemProvider(scheme, provider, options) {\n\t\t\t\treturn combinedDisposable(\n\t\t\t\t\textHostFileSystem.registerFileSystemProvider(extension, scheme, provider, options),\n\t\t\t\t\textHostConsumerFileSystem.addFileSystemProvider(scheme, provider, options)\n\t\t\t\t);\n\t\t\t},\n\t\t\tget fs() {\n\t\t\t\treturn extHostConsumerFileSystem.value;\n\t\t\t},\n\t\t\tregisterFileSearchProvider: (scheme: string, provider: vscode.FileSearchProvider) => {\n\t\t\t\tcheckProposedApiEnabled(extension, 'fileSearchProvider');\n\t\t\t\treturn extHostSearch.registerFileSearchProviderOld(scheme, provider);\n\t\t\t},\n\t\t\tregisterTextSearchProvider: (scheme: string, provider: vscode.TextSearchProvider) => {\n\t\t\t\tcheckProposedApiEnabled(extension, 'textSearchProvider');\n\t\t\t\treturn extHostSearch.registerTextSearchProviderOld(scheme, provider);\n\t\t\t},\n\t\t\tregisterAITextSearchProvider: (scheme: string, provider: vscode.AITextSearchProvider) => {\n\t\t\t\t// there are some dependencies on textSearchProvider, so we need to check for both\n\t\t\t\tcheckProposedApiEnabled(extension, 'aiTextSearchProvider');\n\t\t\t\tcheckProposedApiEnabled(extension, 'textSearchProvider');\n\t\t\t\treturn extHostSearch.registerAITextSearchProviderOld(scheme, provider);\n\t\t\t},\n\t\t\tregisterFileSearchProviderNew: (scheme: string, provider: vscode.FileSearchProviderNew) => {\n\t\t\t\tcheckProposedApiEnabled(extension, 'fileSearchProviderNew');\n\t\t\t\treturn extHostSearch.registerFileSearchProvider(scheme, provider);\n\t\t\t},\n\t\t\tregisterTextSearchProviderNew: (scheme: string, provider: vscode.TextSearchProviderNew) => {\n\t\t\t\tcheckProposedApiEnabled(extension, 'textSearchProviderNew');\n\t\t\t\treturn extHostSearch.registerTextSearchProvider(scheme, provider);\n\t\t\t},\n\t\t\tregisterAITextSearchProviderNew: (scheme: string, provider: vscode.AITextSearchProviderNew) => {\n\t\t\t\t// there are some dependencies on textSearchProvider, so we need to check for both\n\t\t\t\tcheckProposedApiEnabled(extension, 'aiTextSearchProviderNew');\n\t\t\t\tcheckProposedApiEnabled(extension, 'textSearchProviderNew');\n\t\t\t\treturn extHostSearch.registerAITextSearchProvider(scheme, provider);\n\t\t\t},\n\t\t\tregisterRemoteAuthorityResolver: (authorityPrefix: string, resolver: vscode.RemoteAuthorityResolver) => {\n\t\t\t\tcheckProposedApiEnabled(extension, 'resolvers');\n\t\t\t\treturn extensionService.registerRemoteAuthorityResolver(authorityPrefix, resolver);\n\t\t\t},\n\t\t\tregisterResourceLabelFormatter: (formatter: vscode.ResourceLabelFormatter) => {\n\t\t\t\tcheckProposedApiEnabled(extension, 'resolvers');\n\t\t\t\treturn extHostLabelService.$registerResourceLabelFormatter(formatter);\n\t\t\t},\n\t\t\tgetRemoteExecServer: (authority: string) => {\n\t\t\t\tcheckProposedApiEnabled(extension, 'resolvers');\n\t\t\t\treturn extensionService.getRemoteExecServer(authority);\n\t\t\t},\n\t\t\tonDidCreateFiles: (listener, thisArg, disposables) => {\n\t\t\t\treturn _asExtensionEvent(extHostFileSystemEvent.onDidCreateFile)(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidDeleteFiles: (listener, thisArg, disposables) => {\n\t\t\t\treturn _asExtensionEvent(extHostFileSystemEvent.onDidDeleteFile)(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidRenameFiles: (listener, thisArg, disposables) => {\n\t\t\t\treturn _asExtensionEvent(extHostFileSystemEvent.onDidRenameFile)(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonWillCreateFiles: (listener: (e: vscode.FileWillCreateEvent) => any, thisArg?: any, disposables?: vscode.Disposable[]) => {\n\t\t\t\treturn _asExtensionEvent(extHostFileSystemEvent.getOnWillCreateFileEvent(extension))(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonWillDeleteFiles: (listener: (e: vscode.FileWillDeleteEvent) => any, thisArg?: any, disposables?: vscode.Disposable[]) => {\n\t\t\t\treturn _asExtensionEvent(extHostFileSystemEvent.getOnWillDeleteFileEvent(extension))(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonWillRenameFiles: (listener: (e: vscode.FileWillRenameEvent) => any, thisArg?: any, disposables?: vscode.Disposable[]) => {\n\t\t\t\treturn _asExtensionEvent(extHostFileSystemEvent.getOnWillRenameFileEvent(extension))(listener, thisArg, disposables);\n\t\t\t},\n\t\t\topenTunnel: (forward: vscode.TunnelOptions) => {\n\t\t\t\tcheckProposedApiEnabled(extension, 'tunnels');\n\t\t\t\treturn extHostTunnelService.openTunnel(extension, forward).then(value => {\n\t\t\t\t\tif (!value) {\n\t\t\t\t\t\tthrow new Error('cannot open tunnel');\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t});\n\t\t\t},\n\t\t\tget tunnels() {\n\t\t\t\tcheckProposedApiEnabled(extension, 'tunnels');\n\t\t\t\treturn extHostTunnelService.getTunnels();\n\t\t\t},\n\t\t\tonDidChangeTunnels: (listener, thisArg?, disposables?) => {\n\t\t\t\tcheckProposedApiEnabled(extension, 'tunnels');\n\t\t\t\treturn _asExtensionEvent(extHostTunnelService.onDidChangeTunnels)(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tregisterPortAttributesProvider: (portSelector: vscode.PortAttributesSelector, provider: vscode.PortAttributesProvider) => {\n\t\t\t\tcheckProposedApiEnabled(extension, 'portsAttributes');\n\t\t\t\treturn extHostTunnelService.registerPortsAttributesProvider(portSelector, provider);\n\t\t\t},\n\t\t\tregisterTunnelProvider: (tunnelProvider: vscode.TunnelProvider, information: vscode.TunnelInformation) => {\n\t\t\t\tcheckProposedApiEnabled(extension, 'tunnelFactory');\n\t\t\t\treturn extHostTunnelService.registerTunnelProvider(tunnelProvider, information);\n\t\t\t},\n\t\t\tregisterTimelineProvider: (scheme: string | string[], provider: vscode.TimelineProvider) => {\n\t\t\t\tcheckProposedApiEnabled(extension, 'timeline');\n\t\t\t\treturn extHostTimeline.registerTimelineProvider(scheme, provider, extension.identifier, extHostCommands.converter);\n\t\t\t},\n\t\t\tget isTrusted() {\n\t\t\t\treturn extHostWorkspace.trusted;\n\t\t\t},\n\t\t\trequestWorkspaceTrust: (options?: vscode.WorkspaceTrustRequestOptions) => {\n\t\t\t\tcheckProposedApiEnabled(extension, 'workspaceTrust');\n\t\t\t\treturn extHostWorkspace.requestWorkspaceTrust(options);\n\t\t\t},\n\t\t\tonDidGrantWorkspaceTrust: (listener, thisArgs?, disposables?) => {\n\t\t\t\treturn _asExtensionEvent(extHostWorkspace.onDidGrantWorkspaceTrust)(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tregisterEditSessionIdentityProvider: (scheme: string, provider: vscode.EditSessionIdentityProvider) => {\n\t\t\t\tcheckProposedApiEnabled(extension, 'editSessionIdentityProvider');\n\t\t\t\treturn extHostWorkspace.registerEditSessionIdentityProvider(scheme, provider);\n\t\t\t},\n\t\t\tonWillCreateEditSessionIdentity: (listener, thisArgs?, disposables?) => {\n\t\t\t\tcheckProposedApiEnabled(extension, 'editSessionIdentityProvider');\n\t\t\t\treturn _asExtensionEvent(extHostWorkspace.getOnWillCreateEditSessionIdentityEvent(extension))(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tregisterCanonicalUriProvider: (scheme: string, provider: vscode.CanonicalUriProvider) => {\n\t\t\t\tcheckProposedApiEnabled(extension, 'canonicalUriProvider');\n\t\t\t\treturn extHostWorkspace.registerCanonicalUriProvider(scheme, provider);\n\t\t\t},\n\t\t\tgetCanonicalUri: (uri: vscode.Uri, options: vscode.CanonicalUriRequestOptions, token: vscode.CancellationToken) => {\n\t\t\t\tcheckProposedApiEnabled(extension, 'canonicalUriProvider');\n\t\t\t\treturn extHostWorkspace.provideCanonicalUri(uri, options, token);\n\t\t\t}\n\t\t};\n\n\t\t// namespace: scm\n\t\tconst scm: typeof vscode.scm = {\n\t\t\tget inputBox() {\n\t\t\t\textHostApiDeprecation.report('scm.inputBox', extension,\n\t\t\t\t\t`Use 'SourceControl.inputBox' instead`);\n\n\t\t\t\treturn extHostSCM.getLastInputBox(extension)!; // Strict null override - Deprecated api\n\t\t\t},\n\t\t\tcreateSourceControl(id: string, label: string, rootUri?: vscode.Uri) {\n\t\t\t\treturn extHostSCM.createSourceControl(extension, id, label, rootUri);\n\t\t\t}\n\t\t};\n\n\t\t// namespace: comments\n\t\tconst comments: typeof vscode.comments = {\n\t\t\tcreateCommentController(id: string, label: string) {\n\t\t\t\treturn extHostComment.createCommentController(extension, id, label);\n\t\t\t}\n\t\t};\n\n\t\t// namespace: debug\n\t\tconst debug: typeof vscode.debug = {\n\t\t\tget activeDebugSession() {\n\t\t\t\treturn extHostDebugService.activeDebugSession;\n\t\t\t},\n\t\t\tget activeDebugConsole() {\n\t\t\t\treturn extHostDebugService.activeDebugConsole;\n\t\t\t},\n\t\t\tget breakpoints() {\n\t\t\t\treturn extHostDebugService.breakpoints;\n\t\t\t},\n\t\t\tget activeStackItem() {\n\t\t\t\treturn extHostDebugService.activeStackItem;\n\t\t\t},\n\t\t\tregisterDebugVisualizationProvider(id, provider) {\n\t\t\t\tcheckProposedApiEnabled(extension, 'debugVisualization');\n\t\t\t\treturn extHostDebugService.registerDebugVisualizationProvider(extension, id, provider);\n\t\t\t},\n\t\t\tregisterDebugVisualizationTreeProvider(id, provider) {\n\t\t\t\tcheckProposedApiEnabled(extension, 'debugVisualization');\n\t\t\t\treturn extHostDebugService.registerDebugVisualizationTree(extension, id, provider);\n\t\t\t},\n\t\t\tonDidStartDebugSession(listener, thisArg?, disposables?) {\n\t\t\t\treturn _asExtensionEvent(extHostDebugService.onDidStartDebugSession)(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidTerminateDebugSession(listener, thisArg?, disposables?) {\n\t\t\t\treturn _asExtensionEvent(extHostDebugService.onDidTerminateDebugSession)(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidChangeActiveDebugSession(listener, thisArg?, disposables?) {\n\t\t\t\treturn _asExtensionEvent(extHostDebugService.onDidChangeActiveDebugSession)(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidReceiveDebugSessionCustomEvent(listener, thisArg?, disposables?) {\n\t\t\t\treturn _asExtensionEvent(extHostDebugService.onDidReceiveDebugSessionCustomEvent)(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tonDidChangeBreakpoints(listener, thisArgs?, disposables?) {\n\t\t\t\treturn _asExtensionEvent(extHostDebugService.onDidChangeBreakpoints)(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tonDidChangeActiveStackItem(listener, thisArg?, disposables?) {\n\t\t\t\treturn _asExtensionEvent(extHostDebugService.onDidChangeActiveStackItem)(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tregisterDebugConfigurationProvider(debugType: string, provider: vscode.DebugConfigurationProvider, triggerKind?: vscode.DebugConfigurationProviderTriggerKind) {\n\t\t\t\treturn extHostDebugService.registerDebugConfigurationProvider(debugType, provider, triggerKind || DebugConfigurationProviderTriggerKind.Initial);\n\t\t\t},\n\t\t\tregisterDebugAdapterDescriptorFactory(debugType: string, factory: vscode.DebugAdapterDescriptorFactory) {\n\t\t\t\treturn extHostDebugService.registerDebugAdapterDescriptorFactory(extension, debugType, factory);\n\t\t\t},\n\t\t\tregisterDebugAdapterTrackerFactory(debugType: string, factory: vscode.DebugAdapterTrackerFactory) {\n\t\t\t\treturn extHostDebugService.registerDebugAdapterTrackerFactory(debugType, factory);\n\t\t\t},\n\t\t\tstartDebugging(folder: vscode.WorkspaceFolder | undefined, nameOrConfig: string | vscode.DebugConfiguration, parentSessionOrOptions?: vscode.DebugSession | vscode.DebugSessionOptions) {\n\t\t\t\tif (!parentSessionOrOptions || (typeof parentSessionOrOptions === 'object' && 'configuration' in parentSessionOrOptions)) {\n\t\t\t\t\treturn extHostDebugService.startDebugging(folder, nameOrConfig, { parentSession: parentSessionOrOptions });\n\t\t\t\t}\n\t\t\t\treturn extHostDebugService.startDebugging(folder, nameOrConfig, parentSessionOrOptions || {});\n\t\t\t},\n\t\t\tstopDebugging(session?: vscode.DebugSession) {\n\t\t\t\treturn extHostDebugService.stopDebugging(session);\n\t\t\t},\n\t\t\taddBreakpoints(breakpoints: readonly vscode.Breakpoint[]) {\n\t\t\t\treturn extHostDebugService.addBreakpoints(breakpoints);\n\t\t\t},\n\t\t\tremoveBreakpoints(breakpoints: readonly vscode.Breakpoint[]) {\n\t\t\t\treturn extHostDebugService.removeBreakpoints(breakpoints);\n\t\t\t},\n\t\t\tasDebugSourceUri(source: vscode.DebugProtocolSource, session?: vscode.DebugSession): vscode.Uri {\n\t\t\t\treturn extHostDebugService.asDebugSourceUri(source, session);\n\t\t\t}\n\t\t};\n\n\t\tconst tasks: typeof vscode.tasks = {\n\t\t\tregisterTaskProvider: (type: string, provider: vscode.TaskProvider) => {\n\t\t\t\treturn extHostTask.registerTaskProvider(extension, type, provider);\n\t\t\t},\n\t\t\tfetchTasks: (filter?: vscode.TaskFilter): Thenable<vscode.Task[]> => {\n\t\t\t\treturn extHostTask.fetchTasks(filter);\n\t\t\t},\n\t\t\texecuteTask: (task: vscode.Task): Thenable<vscode.TaskExecution> => {\n\t\t\t\treturn extHostTask.executeTask(extension, task);\n\t\t\t},\n\t\t\tget taskExecutions(): vscode.TaskExecution[] {\n\t\t\t\treturn extHostTask.taskExecutions;\n\t\t\t},\n\t\t\tonDidStartTask: (listeners, thisArgs?, disposables?) => {\n\t\t\t\treturn _asExtensionEvent(extHostTask.onDidStartTask)(listeners, thisArgs, disposables);\n\t\t\t},\n\t\t\tonDidEndTask: (listeners, thisArgs?, disposables?) => {\n\t\t\t\treturn _asExtensionEvent(extHostTask.onDidEndTask)(listeners, thisArgs, disposables);\n\t\t\t},\n\t\t\tonDidStartTaskProcess: (listeners, thisArgs?, disposables?) => {\n\t\t\t\treturn _asExtensionEvent(extHostTask.onDidStartTaskProcess)(listeners, thisArgs, disposables);\n\t\t\t},\n\t\t\tonDidEndTaskProcess: (listeners, thisArgs?, disposables?) => {\n\t\t\t\treturn _asExtensionEvent(extHostTask.onDidEndTaskProcess)(listeners, thisArgs, disposables);\n\t\t\t}\n\t\t};\n\n\t\t// namespace: notebook\n\t\tconst notebooks: typeof vscode.notebooks = {\n\t\t\tcreateNotebookController(id: string, notebookType: string, label: string, handler?, rendererScripts?: vscode.NotebookRendererScript[]) {\n\t\t\t\treturn extHostNotebookKernels.createNotebookController(extension, id, notebookType, label, handler, isProposedApiEnabled(extension, 'notebookMessaging') ? rendererScripts : undefined);\n\t\t\t},\n\t\t\tregisterNotebookCellStatusBarItemProvider: (notebookType: string, provider: vscode.NotebookCellStatusBarItemProvider) => {\n\t\t\t\treturn extHostNotebook.registerNotebookCellStatusBarItemProvider(extension, notebookType, provider);\n\t\t\t},\n\t\t\tcreateRendererMessaging(rendererId) {\n\t\t\t\treturn extHostNotebookRenderers.createRendererMessaging(extension, rendererId);\n\t\t\t},\n\t\t\tcreateNotebookControllerDetectionTask(notebookType: string) {\n\t\t\t\tcheckProposedApiEnabled(extension, 'notebookKernelSource');\n\t\t\t\treturn extHostNotebookKernels.createNotebookControllerDetectionTask(extension, notebookType);\n\t\t\t},\n\t\t\tregisterKernelSourceActionProvider(notebookType: string, provider: vscode.NotebookKernelSourceActionProvider) {\n\t\t\t\tcheckProposedApiEnabled(extension, 'notebookKernelSource');\n\t\t\t\treturn extHostNotebookKernels.registerKernelSourceActionProvider(extension, notebookType, provider);\n\t\t\t},\n\t\t\tonDidChangeNotebookCellExecutionState(listener, thisArgs?, disposables?) {\n\t\t\t\tcheckProposedApiEnabled(extension, 'notebookCellExecutionState');\n\t\t\t\treturn _asExtensionEvent(extHostNotebookKernels.onDidChangeNotebookCellExecutionState)(listener, thisArgs, disposables);\n\t\t\t}\n\t\t};\n\n\t\t// namespace: l10n\n\t\tconst l10n: typeof vscode.l10n = {\n\t\t\tt(...params: [message: string, ...args: Array<string | number | boolean>] | [message: string, args: Record<string, any>] | [{ message: string; args?: Array<string | number | boolean> | Record<string, any>; comment: string | string[] }]): string {\n\t\t\t\tif (typeof params[0] === 'string') {\n\t\t\t\t\tconst key = params.shift() as string;\n\n\t\t\t\t\t// We have either rest args which are Array<string | number | boolean> or an array with a single Record<string, any>.\n\t\t\t\t\t// This ensures we get a Record<string | number, any> which will be formatted correctly.\n\t\t\t\t\tconst argsFormatted = !params || typeof params[0] !== 'object' ? params : params[0];\n\t\t\t\t\treturn extHostLocalization.getMessage(extension.identifier.value, { message: key, args: argsFormatted as Record<string | number, any> | undefined });\n\t\t\t\t}\n\n\t\t\t\treturn extHostLocalization.getMessage(extension.identifier.value, params[0]);\n\t\t\t},\n\t\t\tget bundle() {\n\t\t\t\treturn extHostLocalization.getBundle(extension.identifier.value);\n\t\t\t},\n\t\t\tget uri() {\n\t\t\t\treturn extHostLocalization.getBundleUri(extension.identifier.value);\n\t\t\t}\n\t\t};\n\n\t\t// namespace: interactive\n\t\tconst interactive: typeof vscode.interactive = {\n\t\t\ttransferActiveChat(toWorkspace: vscode.Uri) {\n\t\t\t\tcheckProposedApiEnabled(extension, 'interactive');\n\t\t\t\treturn extHostChatAgents2.transferActiveChat(toWorkspace);\n\t\t\t}\n\t\t};\n\n\t\t// namespace: ai\n\t\tconst ai: typeof vscode.ai = {\n\t\t\tgetRelatedInformation(query: string, types: vscode.RelatedInformationType[]): Thenable<vscode.RelatedInformationResult[]> {\n\t\t\t\tcheckProposedApiEnabled(extension, 'aiRelatedInformation');\n\t\t\t\treturn extHostAiRelatedInformation.getRelatedInformation(extension, query, types);\n\t\t\t},\n\t\t\tregisterRelatedInformationProvider(type: vscode.RelatedInformationType, provider: vscode.RelatedInformationProvider) {\n\t\t\t\tcheckProposedApiEnabled(extension, 'aiRelatedInformation');\n\t\t\t\treturn extHostAiRelatedInformation.registerRelatedInformationProvider(extension, type, provider);\n\t\t\t},\n\t\t\tregisterEmbeddingVectorProvider(model: string, provider: vscode.EmbeddingVectorProvider) {\n\t\t\t\tcheckProposedApiEnabled(extension, 'aiRelatedInformation');\n\t\t\t\treturn extHostAiEmbeddingVector.registerEmbeddingVectorProvider(extension, model, provider);\n\t\t\t}\n\t\t};\n\n\t\t// namespace: chat\n\t\tconst chat: typeof vscode.chat = {\n\t\t\tregisterChatResponseProvider(id: string, provider: vscode.ChatResponseProvider, metadata: vscode.ChatResponseProviderMetadata) {\n\t\t\t\tcheckProposedApiEnabled(extension, 'chatProvider');\n\t\t\t\treturn extHostLanguageModels.registerLanguageModel(extension, id, provider, metadata);\n\t\t\t},\n\t\t\tregisterChatVariableResolver(id: string, name: string, userDescription: string, modelDescription: string | undefined, isSlow: boolean | undefined, resolver: vscode.ChatVariableResolver, fullName?: string, icon?: vscode.ThemeIcon) {\n\t\t\t\tcheckProposedApiEnabled(extension, 'chatVariableResolver');\n\t\t\t\treturn extHostChatVariables.registerVariableResolver(extension, id, name, userDescription, modelDescription, isSlow, resolver, fullName, icon?.id);\n\t\t\t},\n\t\t\tregisterMappedEditsProvider(selector: vscode.DocumentSelector, provider: vscode.MappedEditsProvider) {\n\t\t\t\tcheckProposedApiEnabled(extension, 'mappedEditsProvider');\n\t\t\t\treturn extHostLanguageFeatures.registerMappedEditsProvider(extension, selector, provider);\n\t\t\t},\n\t\t\tcreateChatParticipant(id: string, handler: vscode.ChatExtendedRequestHandler) {\n\t\t\t\treturn extHostChatAgents2.createChatAgent(extension, id, handler);\n\t\t\t},\n\t\t\tcreateDynamicChatParticipant(id: string, dynamicProps: vscode.DynamicChatParticipantProps, handler: vscode.ChatExtendedRequestHandler): vscode.ChatParticipant {\n\t\t\t\tcheckProposedApiEnabled(extension, 'chatParticipantPrivate');\n\t\t\t\treturn extHostChatAgents2.createDynamicChatAgent(extension, id, dynamicProps, handler);\n\t\t\t},\n\t\t\tregisterChatParticipantDetectionProvider(provider: vscode.ChatParticipantDetectionProvider) {\n\t\t\t\tcheckProposedApiEnabled(extension, 'chatParticipantAdditions');\n\t\t\t\treturn extHostChatAgents2.registerChatParticipantDetectionProvider(provider);\n\t\t\t},\n\t\t};\n\n\t\t// namespace: lm\n\t\tconst lm: typeof vscode.lm = {\n\t\t\tselectChatModels: (selector) => {\n\t\t\t\treturn extHostLanguageModels.selectLanguageModels(extension, selector ?? {});\n\t\t\t},\n\t\t\tonDidChangeChatModels: (listener, thisArgs?, disposables?) => {\n\t\t\t\treturn extHostLanguageModels.onDidChangeProviders(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tregisterChatModelProvider: (id, provider, metadata) => {\n\t\t\t\tcheckProposedApiEnabled(extension, 'chatProvider');\n\t\t\t\treturn extHostLanguageModels.registerLanguageModel(extension, id, provider, metadata);\n\t\t\t},\n\t\t\t// --- embeddings\n\t\t\tget embeddingModels() {\n\t\t\t\tcheckProposedApiEnabled(extension, 'embeddings');\n\t\t\t\treturn extHostEmbeddings.embeddingsModels;\n\t\t\t},\n\t\t\tonDidChangeEmbeddingModels: (listener, thisArgs?, disposables?) => {\n\t\t\t\tcheckProposedApiEnabled(extension, 'embeddings');\n\t\t\t\treturn extHostEmbeddings.onDidChange(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tregisterEmbeddingsProvider(embeddingsModel, provider) {\n\t\t\t\tcheckProposedApiEnabled(extension, 'embeddings');\n\t\t\t\treturn extHostEmbeddings.registerEmbeddingsProvider(extension, embeddingsModel, provider);\n\t\t\t},\n\t\t\tasync computeEmbeddings(embeddingsModel, input, token?): Promise<any> {\n\t\t\t\tcheckProposedApiEnabled(extension, 'embeddings');\n\t\t\t\tif (typeof input === 'string') {\n\t\t\t\t\treturn extHostEmbeddings.computeEmbeddings(embeddingsModel, input, token);\n\t\t\t\t} else {\n\t\t\t\t\treturn extHostEmbeddings.computeEmbeddings(embeddingsModel, input, token);\n\t\t\t\t}\n\t\t\t},\n\t\t\tregisterTool(toolId: string, tool: vscode.LanguageModelTool) {\n\t\t\t\tcheckProposedApiEnabled(extension, 'lmTools');\n\t\t\t\treturn extHostLanguageModelTools.registerTool(extension, toolId, tool);\n\t\t\t},\n\t\t\tinvokeTool(toolId: string, parameters: vscode.LanguageModelToolInvocationOptions, token: vscode.CancellationToken) {\n\t\t\t\tcheckProposedApiEnabled(extension, 'lmTools');\n\t\t\t\treturn extHostLanguageModelTools.invokeTool(toolId, parameters, token);\n\t\t\t},\n\t\t\tget tools() {\n\t\t\t\tcheckProposedApiEnabled(extension, 'lmTools');\n\t\t\t\treturn extHostLanguageModelTools.tools;\n\t\t\t},\n\t\t};\n\n\t\t// namespace: speech\n\t\tconst speech: typeof vscode.speech = {\n\t\t\tregisterSpeechProvider(id: string, provider: vscode.SpeechProvider) {\n\t\t\t\tcheckProposedApiEnabled(extension, 'speech');\n\t\t\t\treturn extHostSpeech.registerProvider(extension.identifier, id, provider);\n\t\t\t}\n\t\t};\n\n\t\treturn <typeof vscode>{\n\t\t\tversion: initData.version,\n\t\t\t// namespaces\n\t\t\tai,\n\t\t\tauthentication,\n\t\t\tcommands,\n\t\t\tcomments,\n\t\t\tchat,\n\t\t\tdebug,\n\t\t\tenv,\n\t\t\textensions,\n\t\t\tinteractive,\n\t\t\tl10n,\n\t\t\tlanguages,\n\t\t\tlm,\n\t\t\tnotebooks,\n\t\t\tscm,\n\t\t\tspeech,\n\t\t\ttasks,\n\t\t\ttests,\n\t\t\twindow,\n\t\t\tworkspace,\n\t\t\t// types\n\t\t\tBreakpoint: extHostTypes.Breakpoint,\n\t\t\tTerminalOutputAnchor: extHostTypes.TerminalOutputAnchor,\n\t\t\tChatResultFeedbackKind: extHostTypes.ChatResultFeedbackKind,\n\t\t\tChatVariableLevel: extHostTypes.ChatVariableLevel,\n\t\t\tChatCompletionItem: extHostTypes.ChatCompletionItem,\n\t\t\tCallHierarchyIncomingCall: extHostTypes.CallHierarchyIncomingCall,\n\t\t\tCallHierarchyItem: extHostTypes.CallHierarchyItem,\n\t\t\tCallHierarchyOutgoingCall: extHostTypes.CallHierarchyOutgoingCall,\n\t\t\tCancellationError: errors.CancellationError,\n\t\t\tCancellationTokenSource: CancellationTokenSource,\n\t\t\tCandidatePortSource: CandidatePortSource,\n\t\t\tCodeAction: extHostTypes.CodeAction,\n\t\t\tCodeActionKind: extHostTypes.CodeActionKind,\n\t\t\tCodeActionTriggerKind: extHostTypes.CodeActionTriggerKind,\n\t\t\tCodeLens: extHostTypes.CodeLens,\n\t\t\tColor: extHostTypes.Color,\n\t\t\tColorInformation: extHostTypes.ColorInformation,\n\t\t\tColorPresentation: extHostTypes.ColorPresentation,\n\t\t\tColorThemeKind: extHostTypes.ColorThemeKind,\n\t\t\tCommentMode: extHostTypes.CommentMode,\n\t\t\tCommentState: extHostTypes.CommentState,\n\t\t\tCommentThreadCollapsibleState: extHostTypes.CommentThreadCollapsibleState,\n\t\t\tCommentThreadState: extHostTypes.CommentThreadState,\n\t\t\tCommentThreadApplicability: extHostTypes.CommentThreadApplicability,\n\t\t\tCommentThreadFocus: extHostTypes.CommentThreadFocus,\n\t\t\tCompletionItem: extHostTypes.CompletionItem,\n\t\t\tCompletionItemKind: extHostTypes.CompletionItemKind,\n\t\t\tCompletionItemTag: extHostTypes.CompletionItemTag,\n\t\t\tCompletionList: extHostTypes.CompletionList,\n\t\t\tCompletionTriggerKind: extHostTypes.CompletionTriggerKind,\n\t\t\tConfigurationTarget: extHostTypes.ConfigurationTarget,\n\t\t\tCustomExecution: extHostTypes.CustomExecution,\n\t\t\tDebugAdapterExecutable: extHostTypes.DebugAdapterExecutable,\n\t\t\tDebugAdapterInlineImplementation: extHostTypes.DebugAdapterInlineImplementation,\n\t\t\tDebugAdapterNamedPipeServer: extHostTypes.DebugAdapterNamedPipeServer,\n\t\t\tDebugAdapterServer: extHostTypes.DebugAdapterServer,\n\t\t\tDebugConfigurationProviderTriggerKind: DebugConfigurationProviderTriggerKind,\n\t\t\tDebugConsoleMode: extHostTypes.DebugConsoleMode,\n\t\t\tDebugVisualization: extHostTypes.DebugVisualization,\n\t\t\tDecorationRangeBehavior: extHostTypes.DecorationRangeBehavior,\n\t\t\tDiagnostic: extHostTypes.Diagnostic,\n\t\t\tDiagnosticRelatedInformation: extHostTypes.DiagnosticRelatedInformation,\n\t\t\tDiagnosticSeverity: extHostTypes.DiagnosticSeverity,\n\t\t\tDiagnosticTag: extHostTypes.DiagnosticTag,\n\t\t\tDisposable: extHostTypes.Disposable,\n\t\t\tDocumentHighlight: extHostTypes.DocumentHighlight,\n\t\t\tDocumentHighlightKind: extHostTypes.DocumentHighlightKind,\n\t\t\tMultiDocumentHighlight: extHostTypes.MultiDocumentHighlight,\n\t\t\tDocumentLink: extHostTypes.DocumentLink,\n\t\t\tDocumentSymbol: extHostTypes.DocumentSymbol,\n\t\t\tEndOfLine: extHostTypes.EndOfLine,\n\t\t\tEnvironmentVariableMutatorType: extHostTypes.EnvironmentVariableMutatorType,\n\t\t\tEvaluatableExpression: extHostTypes.EvaluatableExpression,\n\t\t\tInlineValueText: extHostTypes.InlineValueText,\n\t\t\tInlineValueVariableLookup: extHostTypes.InlineValueVariableLookup,\n\t\t\tInlineValueEvaluatableExpression: extHostTypes.InlineValueEvaluatableExpression,\n\t\t\tInlineCompletionTriggerKind: extHostTypes.InlineCompletionTriggerKind,\n\t\t\tEventEmitter: Emitter,\n\t\t\tExtensionKind: extHostTypes.ExtensionKind,\n\t\t\tExtensionMode: extHostTypes.ExtensionMode,\n\t\t\tExternalUriOpenerPriority: extHostTypes.ExternalUriOpenerPriority,\n\t\t\tFileChangeType: extHostTypes.FileChangeType,\n\t\t\tFileDecoration: extHostTypes.FileDecoration,\n\t\t\tFileDecoration2: extHostTypes.FileDecoration,\n\t\t\tFileSystemError: extHostTypes.FileSystemError,\n\t\t\tFileType: files.FileType,\n\t\t\tFilePermission: files.FilePermission,\n\t\t\tFoldingRange: extHostTypes.FoldingRange,\n\t\t\tFoldingRangeKind: extHostTypes.FoldingRangeKind,\n\t\t\tFunctionBreakpoint: extHostTypes.FunctionBreakpoint,\n\t\t\tInlineCompletionItem: extHostTypes.InlineSuggestion,\n\t\t\tInlineCompletionList: extHostTypes.InlineSuggestionList,\n\t\t\tHover: extHostTypes.Hover,\n\t\t\tVerboseHover: extHostTypes.VerboseHover,\n\t\t\tHoverVerbosityAction: extHostTypes.HoverVerbosityAction,\n\t\t\tIndentAction: languageConfiguration.IndentAction,\n\t\t\tLocation: extHostTypes.Location,\n\t\t\tMarkdownString: extHostTypes.MarkdownString,\n\t\t\tOverviewRulerLane: OverviewRulerLane,\n\t\t\tParameterInformation: extHostTypes.ParameterInformation,\n\t\t\tPortAutoForwardAction: extHostTypes.PortAutoForwardAction,\n\t\t\tPosition: extHostTypes.Position,\n\t\t\tProcessExecution: extHostTypes.ProcessExecution,\n\t\t\tProgressLocation: extHostTypes.ProgressLocation,\n\t\t\tQuickInputButtonLocation: extHostTypes.QuickInputButtonLocation,\n\t\t\tQuickInputButtons: extHostTypes.QuickInputButtons,\n\t\t\tRange: extHostTypes.Range,\n\t\t\tRelativePattern: extHostTypes.RelativePattern,\n\t\t\tSelection: extHostTypes.Selection,\n\t\t\tSelectionRange: extHostTypes.SelectionRange,\n\t\t\tSemanticTokens: extHostTypes.SemanticTokens,\n\t\t\tSemanticTokensBuilder: extHostTypes.SemanticTokensBuilder,\n\t\t\tSemanticTokensEdit: extHostTypes.SemanticTokensEdit,\n\t\t\tSemanticTokensEdits: extHostTypes.SemanticTokensEdits,\n\t\t\tSemanticTokensLegend: extHostTypes.SemanticTokensLegend,\n\t\t\tShellExecution: extHostTypes.ShellExecution,\n\t\t\tShellQuoting: extHostTypes.ShellQuoting,\n\t\t\tSignatureHelp: extHostTypes.SignatureHelp,\n\t\t\tSignatureHelpTriggerKind: extHostTypes.SignatureHelpTriggerKind,\n\t\t\tSignatureInformation: extHostTypes.SignatureInformation,\n\t\t\tSnippetString: extHostTypes.SnippetString,\n\t\t\tSourceBreakpoint: extHostTypes.SourceBreakpoint,\n\t\t\tStandardTokenType: extHostTypes.StandardTokenType,\n\t\t\tStatusBarAlignment: extHostTypes.StatusBarAlignment,\n\t\t\tSymbolInformation: extHostTypes.SymbolInformation,\n\t\t\tSymbolKind: extHostTypes.SymbolKind,\n\t\t\tSymbolTag: extHostTypes.SymbolTag,\n\t\t\tTask: extHostTypes.Task,\n\t\t\tTaskGroup: extHostTypes.TaskGroup,\n\t\t\tTaskPanelKind: extHostTypes.TaskPanelKind,\n\t\t\tTaskRevealKind: extHostTypes.TaskRevealKind,\n\t\t\tTaskScope: extHostTypes.TaskScope,\n\t\t\tTerminalLink: extHostTypes.TerminalLink,\n\t\t\tTerminalQuickFixTerminalCommand: extHostTypes.TerminalQuickFixCommand,\n\t\t\tTerminalQuickFixOpener: extHostTypes.TerminalQuickFixOpener,\n\t\t\tTerminalLocation: extHostTypes.TerminalLocation,\n\t\t\tTerminalProfile: extHostTypes.TerminalProfile,\n\t\t\tTerminalExitReason: extHostTypes.TerminalExitReason,\n\t\t\tTerminalShellExecutionCommandLineConfidence: extHostTypes.TerminalShellExecutionCommandLineConfidence,\n\t\t\tTextDocumentSaveReason: extHostTypes.TextDocumentSaveReason,\n\t\t\tTextEdit: extHostTypes.TextEdit,\n\t\t\tSnippetTextEdit: extHostTypes.SnippetTextEdit,\n\t\t\tTextEditorCursorStyle: TextEditorCursorStyle,\n\t\t\tTextEditorLineNumbersStyle: extHostTypes.TextEditorLineNumbersStyle,\n\t\t\tTextEditorRevealType: extHostTypes.TextEditorRevealType,\n\t\t\tTextEditorSelectionChangeKind: extHostTypes.TextEditorSelectionChangeKind,\n\t\t\tSyntaxTokenType: extHostTypes.SyntaxTokenType,\n\t\t\tTextDocumentChangeReason: extHostTypes.TextDocumentChangeReason,\n\t\t\tThemeColor: extHostTypes.ThemeColor,\n\t\t\tThemeIcon: extHostTypes.ThemeIcon,\n\t\t\tTreeItem: extHostTypes.TreeItem,\n\t\t\tTreeItemCheckboxState: extHostTypes.TreeItemCheckboxState,\n\t\t\tTreeItemCollapsibleState: extHostTypes.TreeItemCollapsibleState,\n\t\t\tTypeHierarchyItem: extHostTypes.TypeHierarchyItem,\n\t\t\tUIKind: UIKind,\n\t\t\tUri: URI,\n\t\t\tViewColumn: extHostTypes.ViewColumn,\n\t\t\tWorkspaceEdit: extHostTypes.WorkspaceEdit,\n\t\t\t// proposed api types\n\t\t\tDocumentPasteTriggerKind: extHostTypes.DocumentPasteTriggerKind,\n\t\t\tDocumentDropEdit: extHostTypes.DocumentDropEdit,\n\t\t\tDocumentDropOrPasteEditKind: extHostTypes.DocumentDropOrPasteEditKind,\n\t\t\tDocumentPasteEdit: extHostTypes.DocumentPasteEdit,\n\t\t\tInlayHint: extHostTypes.InlayHint,\n\t\t\tInlayHintLabelPart: extHostTypes.InlayHintLabelPart,\n\t\t\tInlayHintKind: extHostTypes.InlayHintKind,\n\t\t\tRemoteAuthorityResolverError: extHostTypes.RemoteAuthorityResolverError,\n\t\t\tResolvedAuthority: extHostTypes.ResolvedAuthority,\n\t\t\tManagedResolvedAuthority: extHostTypes.ManagedResolvedAuthority,\n\t\t\tSourceControlInputBoxValidationType: extHostTypes.SourceControlInputBoxValidationType,\n\t\t\tExtensionRuntime: extHostTypes.ExtensionRuntime,\n\t\t\tTimelineItem: extHostTypes.TimelineItem,\n\t\t\tNotebookRange: extHostTypes.NotebookRange,\n\t\t\tNotebookCellKind: extHostTypes.NotebookCellKind,\n\t\t\tNotebookCellExecutionState: extHostTypes.NotebookCellExecutionState,\n\t\t\tNotebookCellData: extHostTypes.NotebookCellData,\n\t\t\tNotebookData: extHostTypes.NotebookData,\n\t\t\tNotebookRendererScript: extHostTypes.NotebookRendererScript,\n\t\t\tNotebookCellStatusBarAlignment: extHostTypes.NotebookCellStatusBarAlignment,\n\t\t\tNotebookEditorRevealType: extHostTypes.NotebookEditorRevealType,\n\t\t\tNotebookCellOutput: extHostTypes.NotebookCellOutput,\n\t\t\tNotebookCellOutputItem: extHostTypes.NotebookCellOutputItem,\n\t\t\tNotebookCellStatusBarItem: extHostTypes.NotebookCellStatusBarItem,\n\t\t\tNotebookControllerAffinity: extHostTypes.NotebookControllerAffinity,\n\t\t\tNotebookControllerAffinity2: extHostTypes.NotebookControllerAffinity2,\n\t\t\tNotebookEdit: extHostTypes.NotebookEdit,\n\t\t\tNotebookKernelSourceAction: extHostTypes.NotebookKernelSourceAction,\n\t\t\tNotebookVariablesRequestKind: extHostTypes.NotebookVariablesRequestKind,\n\t\t\tPortAttributes: extHostTypes.PortAttributes,\n\t\t\tLinkedEditingRanges: extHostTypes.LinkedEditingRanges,\n\t\t\tTestResultState: extHostTypes.TestResultState,\n\t\t\tTestRunRequest: extHostTypes.TestRunRequest,\n\t\t\tTestMessage: extHostTypes.TestMessage,\n\t\t\tTestMessageStackFrame: extHostTypes.TestMessageStackFrame,\n\t\t\tTestTag: extHostTypes.TestTag,\n\t\t\tTestRunProfileKind: extHostTypes.TestRunProfileKind,\n\t\t\tTextSearchCompleteMessageType: TextSearchCompleteMessageType,\n\t\t\tDataTransfer: extHostTypes.DataTransfer,\n\t\t\tDataTransferItem: extHostTypes.DataTransferItem,\n\t\t\tTestCoverageCount: extHostTypes.TestCoverageCount,\n\t\t\tFileCoverage: extHostTypes.FileCoverage,\n\t\t\tFileCoverage2: extHostTypes.FileCoverage,\n\t\t\tStatementCoverage: extHostTypes.StatementCoverage,\n\t\t\tBranchCoverage: extHostTypes.BranchCoverage,\n\t\t\tDeclarationCoverage: extHostTypes.DeclarationCoverage,\n\t\t\tWorkspaceTrustState: extHostTypes.WorkspaceTrustState,\n\t\t\tLanguageStatusSeverity: extHostTypes.LanguageStatusSeverity,\n\t\t\tQuickPickItemKind: extHostTypes.QuickPickItemKind,\n\t\t\tInputBoxValidationSeverity: extHostTypes.InputBoxValidationSeverity,\n\t\t\tTabInputText: extHostTypes.TextTabInput,\n\t\t\tTabInputTextDiff: extHostTypes.TextDiffTabInput,\n\t\t\tTabInputTextMerge: extHostTypes.TextMergeTabInput,\n\t\t\tTabInputCustom: extHostTypes.CustomEditorTabInput,\n\t\t\tTabInputNotebook: extHostTypes.NotebookEditorTabInput,\n\t\t\tTabInputNotebookDiff: extHostTypes.NotebookDiffEditorTabInput,\n\t\t\tTabInputWebview: extHostTypes.WebviewEditorTabInput,\n\t\t\tTabInputTerminal: extHostTypes.TerminalEditorTabInput,\n\t\t\tTabInputInteractiveWindow: extHostTypes.InteractiveWindowInput,\n\t\t\tTabInputChat: extHostTypes.ChatEditorTabInput,\n\t\t\tTabInputTextMultiDiff: extHostTypes.TextMultiDiffTabInput,\n\t\t\tTelemetryTrustedValue: TelemetryTrustedValue,\n\t\t\tLogLevel: LogLevel,\n\t\t\tEditSessionIdentityMatch: EditSessionIdentityMatch,\n\t\t\tInteractiveSessionVoteDirection: extHostTypes.InteractiveSessionVoteDirection,\n\t\t\tChatCopyKind: extHostTypes.ChatCopyKind,\n\t\t\tInteractiveEditorResponseFeedbackKind: extHostTypes.InteractiveEditorResponseFeedbackKind,\n\t\t\tDebugStackFrame: extHostTypes.DebugStackFrame,\n\t\t\tDebugThread: extHostTypes.DebugThread,\n\t\t\tRelatedInformationType: extHostTypes.RelatedInformationType,\n\t\t\tSpeechToTextStatus: extHostTypes.SpeechToTextStatus,\n\t\t\tTextToSpeechStatus: extHostTypes.TextToSpeechStatus,\n\t\t\tPartialAcceptTriggerKind: extHostTypes.PartialAcceptTriggerKind,\n\t\t\tKeywordRecognitionStatus: extHostTypes.KeywordRecognitionStatus,\n\t\t\tChatResponseMarkdownPart: extHostTypes.ChatResponseMarkdownPart,\n\t\t\tChatResponseFileTreePart: extHostTypes.ChatResponseFileTreePart,\n\t\t\tChatResponseAnchorPart: extHostTypes.ChatResponseAnchorPart,\n\t\t\tChatResponseProgressPart: extHostTypes.ChatResponseProgressPart,\n\t\t\tChatResponseProgressPart2: extHostTypes.ChatResponseProgressPart2,\n\t\t\tChatResponseReferencePart: extHostTypes.ChatResponseReferencePart,\n\t\t\tChatResponseReferencePart2: extHostTypes.ChatResponseReferencePart,\n\t\t\tChatResponseCodeCitationPart: extHostTypes.ChatResponseCodeCitationPart,\n\t\t\tChatResponseWarningPart: extHostTypes.ChatResponseWarningPart,\n\t\t\tChatResponseTextEditPart: extHostTypes.ChatResponseTextEditPart,\n\t\t\tChatResponseMarkdownWithVulnerabilitiesPart: extHostTypes.ChatResponseMarkdownWithVulnerabilitiesPart,\n\t\t\tChatResponseCommandButtonPart: extHostTypes.ChatResponseCommandButtonPart,\n\t\t\tChatResponseDetectedParticipantPart: extHostTypes.ChatResponseDetectedParticipantPart,\n\t\t\tChatResponseConfirmationPart: extHostTypes.ChatResponseConfirmationPart,\n\t\t\tChatResponseMovePart: extHostTypes.ChatResponseMovePart,\n\t\t\tChatResponseReferencePartStatusKind: extHostTypes.ChatResponseReferencePartStatusKind,\n\t\t\tChatRequestTurn: extHostTypes.ChatRequestTurn,\n\t\t\tChatResponseTurn: extHostTypes.ChatResponseTurn,\n\t\t\tChatLocation: extHostTypes.ChatLocation,\n\t\t\tChatRequestEditorData: extHostTypes.ChatRequestEditorData,\n\t\t\tChatRequestNotebookData: extHostTypes.ChatRequestNotebookData,\n\t\t\tLanguageModelChatMessageRole: extHostTypes.LanguageModelChatMessageRole,\n\t\t\tLanguageModelChatMessage: extHostTypes.LanguageModelChatMessage,\n\t\t\tLanguageModelChatMessageToolResultPart: extHostTypes.LanguageModelToolResultPart,\n\t\t\tLanguageModelChatResponseTextPart: extHostTypes.LanguageModelTextPart,\n\t\t\tLanguageModelChatResponseToolCallPart: extHostTypes.LanguageModelToolCallPart,\n\t\t\tLanguageModelError: extHostTypes.LanguageModelError,\n\t\t\tNewSymbolName: extHostTypes.NewSymbolName,\n\t\t\tNewSymbolNameTag: extHostTypes.NewSymbolNameTag,\n\t\t\tNewSymbolNameTriggerKind: extHostTypes.NewSymbolNameTriggerKind,\n\t\t\tInlineEdit: extHostTypes.InlineEdit,\n\t\t\tInlineEditTriggerKind: extHostTypes.InlineEditTriggerKind,\n\t\t\tExcludeSettingOptions: ExcludeSettingOptions,\n\t\t\tTextSearchContextNew: TextSearchContextNew,\n\t\t\tTextSearchMatchNew: TextSearchMatchNew,\n\t\t\tTextSearchCompleteMessageTypeNew: TextSearchCompleteMessageType,\n\t\t};\n\t};\n}\n"],
  "mappings": ";;AAKA,SAAS,+BAA+B;AACxC,YAAY,YAAY;AACxB,SAAS,SAAS,aAAa;AAC/B,SAAS,0BAA0B;AACnC,SAAS,SAAS,qBAAqB;AACvC,OAAO,cAAc;AACrB,SAAS,WAAW;AACpB,SAAS,6BAA6B;AACtC,SAAS,OAAO,wBAAwB;AACxC,YAAY,2BAA2B;AACvC,SAAS,yBAAyB;AAClC,SAAS,wBAAwB,6BAA6B;AAC9D,YAAY,WAAW;AACvB,SAAS,wBAAwB;AACjC,SAAS,aAAa,gBAAgB,gBAAgB;AACtD,SAAS,qBAAqB;AAC9B,SAAS,6BAA6B;AACtC,SAAS,gCAAgC;AACzC,SAAS,qBAAqB,gBAAgB,6BAA6B,mBAAmB;AAC9F,SAAS,iCAAiC;AAC1C,SAAS,0BAA0B;AACnC,SAAS,qCAAqC;AAC9C,SAAS,8BAA8B;AACvC,SAAS,wBAAwB;AACjC,SAAS,0BAA0B;AACnC,SAAS,4BAA4B;AACrC,SAAS,wBAAwB;AACjC,SAAS,2BAA2B;AACpC,SAAS,wBAAwB;AACjC,SAAS,6BAA6B;AACtC,SAAS,uBAAuB,6BAA6B;AAC7D,SAAS,4BAA4B;AACrC,SAAS,4BAA4B;AACrC,SAAS,2BAA2B;AACpC,SAAS,0BAA0B;AACnC,SAAS,sBAAsB;AAC/B,SAAS,sCAAsC;AAC/C,SAAS,sCAAsC;AAC/C,SAAS,wBAAwB;AACjC,SAAS,mCAAmC;AAC5C,SAAS,0BAA0B;AACnC,SAAS,yBAAyB;AAClC,SAAS,gCAAgC;AACzC,SAAS,WAAW,gCAAgC;AACpD,SAAS,yBAAyB;AAClC,SAAS,kCAAkC;AAC3C,SAAS,+BAA+B,sCAAsC;AAC9E,SAAS,8BAA8B;AACvC,SAAS,+BAA+B;AACxC,SAAS,0BAA0B;AACnC,SAAS,2BAA2B;AACpC,SAAS,+BAA+B;AACxC,SAAS,iCAAiC;AAC1C,SAAS,8BAA8B;AACvC,SAAS,wBAAwB;AACjC,SAAS,mCAAmC;AAC5C,SAAS,8BAA8B;AACvC,SAAS,6BAA6B;AACtC,SAAS,iCAAiC;AAC1C,SAAS,8CAA8C;AACvD,SAAS,gCAAgC;AACzC,SAAS,8BAA8B;AACvC,SAAS,8BAA8B;AACvC,SAAS,gCAAgC;AACzC,SAAS,6BAA6B;AACtC,SAAS,qCAAqC;AAC9C,SAAS,uBAAuB;AAChC,SAAS,wBAAwB;AACjC,SAAS,8BAA8B;AACvC,SAAS,0BAA0B;AACnC,SAAS,kBAAkB;AAC3B,SAAS,sBAAsB;AAC/B,SAAS,2BAA2B;AACpC,SAAS,oBAAoB;AAC7B,SAAS,qBAAqB;AAC9B,SAAS,wBAAwB;AACjC,SAAS,uBAAuB;AAChC,SAAS,8BAA8B;AACvC,SAAS,oBAAoB;AAC7B,SAAS,wBAAwB,mBAAmB,uBAAuB;AAC3E,SAAS,+BAA+B;AACxC,SAAS,wCAAwC;AACjD,SAAS,uBAAuB;AAChC,SAAS,sBAAsB;AAC/B,SAAS,sBAAsB;AAC/B,SAAS,uBAAuB;AAChC,SAAS,wBAAwB;AACjC,SAAS,6BAA6B;AACtC,YAAY,oBAAoB;AAChC,YAAY,kBAAkB;AAC9B,SAAS,yBAAyB;AAClC,SAAS,8BAA8B;AACvC,SAAS,mBAAmB;AAC5B,SAAS,uBAAuB;AAChC,SAAS,4BAA4B;AACrC,SAAS,2BAA2B;AACpC,SAAS,sBAAsB;AAC/B,SAAS,yBAAyB;AAClC,SAAS,6CAA6C;AACtD,SAAS,oCAAoC;AAC7C,SAAS,cAAc;AACvB,SAAS,yBAAyB,4BAA4B;AAC9D,SAAS,uBAAuB;AAChC,SAAS,uBAAuB,+BAA+B,sBAAsB,0BAA0B;AAexG,SAAS,kCAAkC,UAAkD;AAGnG,QAAM,WAAW,SAAS,IAAI,uBAAuB;AACrD,QAAM,wBAAwB,SAAS,IAAI,sBAAsB;AACjE,QAAM,4BAA4B,SAAS,IAAI,0BAA0B;AACzE,QAAM,mBAAmB,SAAS,IAAI,wBAAwB;AAC9D,QAAM,mBAAmB,SAAS,IAAI,iBAAiB;AACvD,QAAM,mBAAmB,SAAS,IAAI,iBAAiB;AACvD,QAAM,uBAAuB,SAAS,IAAI,qBAAqB;AAC/D,QAAM,iBAAiB,SAAS,IAAI,sBAAsB;AAC1D,QAAM,cAAc,SAAS,IAAI,kBAAkB;AACnD,QAAM,iBAAiB,SAAS,IAAI,eAAe;AACnD,QAAM,wBAAwB,SAAS,IAAI,sBAAsB;AACjE,QAAM,uBAAuB,SAAS,IAAI,cAAc;AACxD,QAAM,oBAAoB,SAAS,IAAI,WAAW;AAClD,QAAM,uBAAuB,SAAS,IAAI,qBAAqB;AAC/D,QAAM,wBAAwB,SAAS,IAAI,6BAA6B;AACxE,QAAM,gBAAgB,SAAS,IAAI,cAAc;AACjD,QAAM,qBAAqB,SAAS,IAAI,mBAAmB;AAC3D,QAAM,oBAAoB,SAAS,IAAI,kBAAkB;AACzD,QAAM,wBAAwB,SAAS,IAAI,sBAAsB;AACjE,QAAM,wBAAwB,SAAS,IAAI,sBAAsB;AACjE,QAAM,wBAAwB,SAAS,IAAI,sBAAsB;AAGjE,cAAY,IAAI,eAAe,uBAAuB,qBAAqB;AAC3E,cAAY,IAAI,eAAe,6BAA+D,oBAAoB;AAClH,cAAY,IAAI,eAAe,kBAAkB,gBAAgB;AACjE,cAAY,IAAI,eAAe,sBAAsB,oBAAoB;AACzE,cAAY,IAAI,eAAe,yBAAyB,gBAAgB;AACxE,cAAY,IAAI,eAAe,gBAAgB,cAAc;AAC7D,cAAY,IAAI,eAAe,sBAAsB,oBAAoB;AACzE,cAAY,IAAI,eAAe,eAAe,aAAa;AAC3D,cAAY,IAAI,eAAe,oBAAoB,kBAAkB;AACrE,cAAY,IAAI,eAAe,kBAAkB,gBAAgB;AACjE,cAAY,IAAI,eAAe,mBAAmB,iBAAiB;AACnE,cAAY,IAAI,eAAe,uBAAuB,qBAAqB;AAC3E,cAAY,IAAI,eAAe,uBAAuB,qBAAqB;AAC3E,cAAY,IAAI,eAAe,qBAAqB,qBAAqB;AAGzE,QAAM,qBAAqB,YAAY,IAAI,eAAe,oBAAoB,SAAS,IAAI,mBAAmB,CAAC;AAC/G,QAAM,6BAA6B,YAAY,IAAI,eAAe,4BAA4B,SAAS,IAAI,2BAA2B,CAAC;AACvI,QAAM,kBAAkB,YAAY,IAAI,eAAe,iBAAiB,SAAS,IAAI,gBAAgB,CAAC;AACtG,QAAM,yBAAyB,YAAY,IAAI,eAAe,wBAAwB,SAAS,IAAI,uBAAuB,CAAC;AAC3H,QAAM,kCAAkC,YAAY,IAAI,eAAe,iCAAiC,SAAS,IAAI,gCAAgC,CAAC;AACtJ,QAAM,sBAAsB,YAAY,IAAI,eAAe,qBAAqB,SAAS,IAAI,oBAAoB,CAAC;AAClH,QAAM,gBAAgB,YAAY,IAAI,eAAe,eAAe,SAAS,IAAI,cAAc,CAAC;AAChG,QAAM,cAAc,YAAY,IAAI,eAAe,aAAa,SAAS,IAAI,YAAY,CAAC;AAC1F,QAAM,uBAAuB,YAAY,IAAI,eAAe,sBAAsB,SAAS,IAAI,qBAAqB,CAAC;AACrH,QAAM,sBAAsB,YAAY,IAAI,eAAe,qBAAqB,SAAS,IAAI,2BAA2B,CAAC;AAGzH,QAAM,cAAc,YAAY,IAAI,eAAe,aAAa,IAAI,YAAY,WAAW,CAAC;AAC5F,QAAM,mBAAmB,YAAY,IAAI,eAAe,kBAAkB,IAAI,iBAAiB,aAAa,0BAA0B,CAAC;AACvI,QAAM,kCAAkC,YAAY,IAAI,eAAe,iCAAiC,IAAI,+BAA+B,aAAa,4BAA4B,iBAAiB,CAAC;AACtM,QAAM,iCAAiC,YAAY,IAAI,eAAe,gCAAgC,IAAI,+BAA+B,mBAAmB,kBAAkB,YAAY,SAAS,YAAY,mBAAmB,CAAC,CAAC;AACpO,QAAM,kBAAkB,YAAY,IAAI,eAAe,iBAAiB,IAAI,0BAA0B,aAAa,iBAAiB,4BAA4B,kBAAkB,2BAA2B,eAAe,iBAAiB,CAAC;AAC9O,QAAM,2BAA2B,YAAY,IAAI,eAAe,0BAA0B,IAAI,yBAAyB,eAAe,CAAC;AACvI,QAAM,yBAAyB,YAAY,IAAI,eAAe,wBAAwB,IAAI,uBAAuB,mBAAmB,eAAe,CAAC;AACpJ,QAAM,yBAAyB,YAAY,IAAI,eAAe,wBAAwB,IAAI,uBAAuB,aAAa,UAAU,iBAAiB,iBAAiB,iBAAiB,CAAC;AAC5L,QAAM,2BAA2B,YAAY,IAAI,eAAe,0BAA0B,IAAI,yBAAyB,aAAa,eAAe,CAAC;AACpJ,QAAM,yCAAyC,YAAY,IAAI,eAAe,wCAAwC,IAAI,uCAAuC,mBAAmB,iBAAiB,YAAY,SAAS,YAAY,mBAAmB,CAAC,CAAC;AAC3P,QAAM,iBAAiB,YAAY,IAAI,eAAe,gBAAgB,IAAI,eAAe,aAAa,0BAA0B,CAAC;AACjI,QAAM,mBAAmB,YAAY,IAAI,eAAe,kBAAkB,IAAI,iBAAiB,YAAY,SAAS,YAAY,mBAAmB,GAAG,iBAAiB,iBAAiB,CAAC;AACzL,QAAM,sBAAsB,YAAY,IAAI,eAAe,qBAAqB,IAAI,oBAAoB,YAAY,SAAS,YAAY,sBAAsB,GAAG,gBAAgB,SAAS,MAAM,CAAC;AAClM,QAAM,qBAAqB,YAAY,IAAI,eAAe,oBAAoB,IAAI,mBAAmB,aAAa,mBAAmB,uBAAuB,0BAA0B,CAAC;AACvL,QAAM,mBAAmB,YAAY,IAAI,eAAe,kBAAkB,IAAI,iBAAiB,aAAa,kBAAkB,gBAAgB,WAAW,cAAc,CAAC;AACxK,QAAM,0BAA0B,YAAY,IAAI,eAAe,yBAAyB,IAAI,wBAAwB,aAAa,gBAAgB,kBAAkB,iBAAiB,oBAAoB,mBAAmB,uBAAuB,gBAAgB,CAAC;AACnQ,QAAM,oBAAoB,YAAY,IAAI,eAAe,mBAAmB,IAAI,kBAAkB,aAAa,uBAAuB,CAAC;AACvI,QAAM,yBAAyB,YAAY,IAAI,eAAe,+BAA+B,IAAI,8BAA8B,aAAa,mBAAmB,0BAA0B,CAAC;AAC1L,QAAM,mBAAmB,YAAY,IAAI,eAAe,kBAAkB,uBAAuB,aAAa,kBAAkB,eAAe,CAAC;AAChJ,QAAM,aAAa,YAAY,IAAI,eAAe,YAAY,IAAI,WAAW,aAAa,iBAAiB,kBAAkB,iBAAiB,CAAC;AAC/I,QAAM,mBAAmB,YAAY,IAAI,eAAe,kBAAkB,IAAI,iBAAiB,aAAa,cAAc,CAAC;AAC3H,QAAM,eAAe,YAAY,IAAI,eAAe,cAAc,IAAI,aAAa,aAAa,cAAc,CAAC;AAC/G,QAAM,iBAAiB,YAAY,IAAI,eAAe,iBAAiB,sBAAsB,aAAa,iBAAiB,gBAAgB,CAAC;AAC5I,QAAM,kBAAkB,YAAY,IAAI,eAAe,iBAAiB,IAAI,gBAAgB,YAAY,SAAS,YAAY,kBAAkB,CAAC,CAAC;AACjJ,QAAM,sBAAsB,YAAY,IAAI,eAAe,qBAAqB,IAAI,oBAAoB,WAAW,CAAC;AACpH,QAAM,iBAAiB,YAAY,IAAI,eAAe,gBAAgB,IAAI,eAAe,WAAW,CAAC;AACrG,QAAM,kBAAkB,YAAY,IAAI,eAAe,iBAAiB,IAAI,gBAAgB,aAAa,eAAe,CAAC;AACzH,QAAM,kBAAkB,YAAY,IAAI,eAAe,iBAAiB,IAAI,gBAAgB,aAAa,SAAS,QAAQ,kBAAkB,mBAAmB,qBAAqB,CAAC;AACrL,QAAM,uBAAuB,YAAY,IAAI,eAAe,sBAAsB,IAAI,qBAAqB,aAAa,iBAAiB,gBAAgB,CAAC;AAC1J,QAAM,uBAAuB,YAAY,IAAI,eAAe,sBAAsB,IAAI,qBAAqB,aAAa,kBAAkB,uBAAuB,iBAAiB,oBAAoB,CAAC;AACvM,QAAM,sBAAsB,YAAY,IAAI,eAAe,qBAAqB,IAAI,oBAAoB,aAAa,eAAe,CAAC;AACrI,QAAM,iBAAiB,YAAY,IAAI,eAAe,gBAAgB,SAAS,IAAI,eAAe,CAAC;AACnG,QAAM,oBAAoB,YAAY,IAAI,eAAe,mBAAmB,IAAI,kBAAkB,WAAW,CAAC;AAC9G,QAAM,gCAAgC,YAAY,IAAI,eAAe,+BAA+B,IAAI,8BAA8B,WAAW,CAAC;AAClJ,cAAY,IAAI,eAAe,oBAAoB,IAAI,mBAAmB,aAAa,iBAAiB,4BAA4B,iBAAiB,iBAAiB,CAAC;AACvK,QAAM,qBAAqB,YAAY,IAAI,eAAe,oBAAoB,IAAI,mBAAmB,aAAa,mBAAmB,iBAAiB,gBAAgB,CAAC;AACvK,QAAM,uBAAuB,YAAY,IAAI,eAAe,sBAAsB,IAAI,qBAAqB,WAAW,CAAC;AACvH,QAAM,4BAA4B,YAAY,IAAI,eAAe,2BAA2B,IAAI,0BAA0B,WAAW,CAAC;AACtI,QAAM,8BAA8B,YAAY,IAAI,eAAe,6BAA6B,IAAI,0BAA0B,WAAW,CAAC;AAC1I,QAAM,2BAA2B,YAAY,IAAI,eAAe,0BAA0B,IAAI,yBAAyB,WAAW,CAAC;AACnI,QAAM,mBAAmB,YAAY,IAAI,eAAe,kBAAkB,IAAI,iBAAiB,aAAa,gBAAgB,SAAS,CAAC;AACtI,QAAM,gBAAgB,YAAY,IAAI,eAAe,eAAe,IAAI,cAAc,WAAW,CAAC;AAClG,QAAM,oBAAoB,YAAY,IAAI,eAAe,mBAAmB,IAAI,kBAAkB,WAAW,CAAC;AAG9G,QAAM,WAAW,OAAO,OAA6B,cAAc;AACnE,cAAY,iBAAiB,QAAQ;AAGrC,QAAM,mBAAmB,IAAI,iBAAiB,aAAa,0BAA0B;AACrF,QAAM,mBAAmB,IAAI,iBAAiB,WAAW;AACzD,QAAM,wBAAwB,IAAI,sBAAsB,aAAa,iBAAiB;AACtF,QAAM,iBAAiB,IAAI,eAAe,WAAW;AAGrD,qBAAmB,SAAS,eAAe;AAE3C,SAAO,SAAU,WAAkC,eAAqC,gBAAsD;AAK7I,aAAS,kBAAqB,QAA0C;AACvE,aAAO,CAAC,UAAU,UAAU,gBAAgB;AAC3C,cAAM,SAAS,OAAO,OAAK;AAC1B,cAAI;AACH,qBAAS,KAAK,UAAU,CAAC;AAAA,UAC1B,SAAS,KAAK;AACb,mBAAO,0BAA0B,IAAI,MAAM,uCAAuC,UAAU,WAAW,KAAK,6BAA6B,IAAI,SAAS,CAAC,IAAI,EAAE,OAAO,IAAI,CAAC,CAAC;AAC1K,6BAAiB,iBAAiB,UAAU,YAAY,GAAG;AAAA,UAC5D;AAAA,QACD,CAAC;AACD,qBAAa,KAAK,MAAM;AACxB,eAAO;AAAA,MACR;AAAA,IACD;AAbS;AAqBT,UAAM,gBAAiB,WAAY;AAClC,UAAI,OAAO,CAAC,UAAU;AACtB,eAAS,aAAa;AACrB,YAAI,CAAC,MAAM;AACV,4BAAkB,KAAK,cAAc,UAAU,WAAW,KAAK,kHAAkH;AACjL,iBAAO;AAAA,QACR;AAAA,MACD;AALS;AAMT,aAAO,gCAAS,QAAQ,UAA4D;AACnF,YAAI,MAAM,QAAQ,QAAQ,GAAG;AAC5B,mBAAS,QAAQ,OAAO;AAAA,QACzB,WAAW,OAAO,aAAa,UAAU;AACxC,qBAAW;AAAA,QACZ,OAAO;AACN,gBAAM,SAAS;AACf,cAAI,OAAO,OAAO,WAAW,aAAa;AACzC,uBAAW;AAAA,UACZ;AACA,cAAI,OAAO,OAAO,cAAc,WAAW;AAC1C,oCAAwB,WAAW,0BAA0B;AAAA,UAC9D;AAAA,QACD;AACA,eAAO;AAAA,MACR,GAfO;AAAA,IAgBR,EAAG;AAEH,UAAM,iBAA+C;AAAA,MACpD,WAAW,YAAoB,QAA2B,SAAkD;AAC3G,YAAI,OAAO,SAAS,oBAAoB,YAAY,QAAQ,gBAAgB,WAAW;AACtF,kCAAwB,WAAW,eAAe;AAAA,QACnD;AACA,eAAO,sBAAsB,WAAW,WAAW,YAAY,QAAQ,OAAc;AAAA,MACtF;AAAA,MACA,YAAY,YAAoB;AAC/B,eAAO,sBAAsB,YAAY,UAAU;AAAA,MACpD;AAAA;AAAA,MAEA,MAAM,WAAW,YAAoB,QAA2B;AAC/D,gCAAwB,WAAW,aAAa;AAChD,eAAO,CAAC,CAAE,MAAM,sBAAsB,WAAW,WAAW,YAAY,QAAQ,EAAE,QAAQ,KAAK,CAAQ;AAAA,MACxG;AAAA,MACA,IAAI,sBAA8E;AACjF,eAAO,kBAAkB,sBAAsB,mBAAmB;AAAA,MACnE;AAAA,MACA,+BAA+B,IAAY,OAAe,UAAyC,SAAmE;AACrK,eAAO,sBAAsB,+BAA+B,IAAI,OAAO,UAAU,OAAO;AAAA,MACzF;AAAA,IACD;AAGA,UAAM,WAAmC;AAAA,MACxC,gBAAgB,IAAY,SAAiD,UAAmC;AAC/G,eAAO,gBAAgB,gBAAgB,MAAM,IAAI,SAAS,UAAU,QAAW,SAAS;AAAA,MACzF;AAAA,MACA,0BAA0B,IAAY,UAAgG,SAAkC;AACvK,eAAO,gBAAgB,gBAAgB,MAAM,IAAI,IAAI,SAAqB;AACzE,gBAAM,mBAAmB,eAAe,oBAAoB;AAC5D,cAAI,CAAC,kBAAkB;AACtB,8BAAkB,KAAK,oBAAoB,KAAK,0CAA0C;AAC1F,mBAAO;AAAA,UACR;AAEA,iBAAO,iBAAiB,KAAK,CAAC,SAAgC;AAC7D,qBAAS,MAAM,SAAS,CAAC,kBAAkB,MAAM,GAAG,IAAI,CAAC;AAAA,UAE1D,CAAC,EAAE,KAAK,CAAC,WAAW;AACnB,gBAAI,CAAC,QAAQ;AACZ,gCAAkB,KAAK,wBAAwB,KAAK,oBAAoB;AAAA,YACzE;AAAA,UACD,GAAG,CAAC,QAAQ;AACX,8BAAkB,KAAK,6CAA6C,IAAI,GAAG;AAAA,UAC5E,CAAC;AAAA,QACF,GAAG,QAAW,QAAW,SAAS;AAAA,MACnC;AAAA,MACA,gCAAgC,wBAAC,IAAY,UAA8D,YAAqC;AAC/I,gCAAwB,WAAW,aAAa;AAChD,eAAO,gBAAgB,gBAAgB,MAAM,IAAI,UAAU,SAA8B;AACxF,gBAAM,mBAAmB,2BAA2B,aAAa,IAAI;AACrE,cAAI,CAAC,kBAAkB;AACtB,8BAAkB,KAAK,oBAAoB,KAAK,0CAA0C;AAC1F,mBAAO;AAAA,UACR;AAEA,gBAAM,OAAO,MAAM,eAAe,mBAAmB,iBAAiB,EAAE;AACxE,mBAAS,MAAM,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC;AAAA,QACxC,GAAG,QAAW,QAAW,SAAS;AAAA,MACnC,GAZgC;AAAA,MAahC,eAAkB,OAAe,MAA0B;AAC1D,eAAO,gBAAgB,eAAkB,IAAI,GAAG,IAAI;AAAA,MACrD;AAAA,MACA,YAAY,iBAA0B,OAA2B;AAChE,eAAO,gBAAgB,YAAY,cAAc;AAAA,MAClD;AAAA,IACD;AAGA,UAAM,MAAyB;AAAA,MAC9B,IAAI,YAAY;AAAE,eAAO,SAAS,cAAc;AAAA,MAAW;AAAA,MAC3D,IAAI,YAAY;AAAE,eAAO,SAAS,cAAc;AAAA,MAAW;AAAA,MAC3D,IAAI,WAAW;AAAE,eAAO,SAAS,YAAY;AAAA,MAAa;AAAA,MAC1D,IAAI,UAAU;AAAE,eAAO,SAAS,YAAY;AAAA,MAAS;AAAA,MACrD,IAAI,UAAU;AAAE,eAAO,SAAS,YAAY,SAAS,UAAU;AAAA,MAAI;AAAA,MACnE,IAAI,UAAU;AAAE,eAAO,SAAS,YAAY;AAAA,MAAS;AAAA,MACrD,IAAI,YAAY;AAAE,eAAO,SAAS,YAAY;AAAA,MAAc;AAAA,MAC5D,IAAI,YAA8B;AAAE,eAAO,iBAAiB;AAAA,MAAO;AAAA,MACnE,IAAI,QAAQ;AACX,eAAO,uBAAuB,gBAAgB,KAAK;AAAA,MACpD;AAAA,MACA,IAAI,mBAAmB;AACtB,eAAO,kBAAkB,uBAAuB,gBAAgB;AAAA,MACjE;AAAA,MACA,IAAI,qBAAqB;AACxB,eAAO,iBAAiB,0BAA0B;AAAA,MACnD;AAAA,MACA,IAAI,8BAAqD;AACxD,eAAO,kBAAkB,iBAAiB,2BAA2B;AAAA,MACtE;AAAA,MACA,IAAI,yBAAwD;AAC3D,gCAAwB,WAAW,WAAW;AAC9C,eAAO,iBAAiB,oBAAoB;AAAA,MAC7C;AAAA,MACA,IAAI,oCAAiF;AACpF,gCAAwB,WAAW,WAAW;AAC9C,eAAO,kBAAkB,iBAAiB,iCAAiC;AAAA,MAC5E;AAAA,MACA,IAAI,kBAAkB;AACrB,eAAO,gBAAgB,SAAS,cAAc,gBAAgB;AAAA,MAC/D;AAAA,MACA,sBAAsB,QAAgC,SAAiE;AACtH,+BAAuB,eAAe,MAAM;AAC5C,eAAO,iBAAiB,kBAAkB,WAAW,QAAQ,OAAO;AAAA,MACrE;AAAA,MACA,aAAa,KAAU,SAA0D;AAChF,eAAO,cAAc,QAAQ,KAAK;AAAA,UACjC,gBAAgB,CAAC,CAAC,SAAS,OAAO;AAAA,UAClC,yBAAyB,SAAS;AAAA,QACnC,CAAC;AAAA,MACF;AAAA,MACA,MAAM,cAAc,KAAU;AAC7B,YAAI,IAAI,WAAW,SAAS,YAAY,cAAc;AACrD,iBAAO,YAAY,aAAa,GAAG;AAAA,QACpC;AAEA,YAAI;AACH,iBAAO,MAAM,cAAc,cAAc,KAAK,EAAE,gBAAgB,CAAC,CAAC,SAAS,OAAO,UAAU,CAAC;AAAA,QAC9F,SAAS,KAAK;AACb,cAAI,cAAc,KAAK,QAAQ,IAAI,KAAK,cAAc,KAAK,QAAQ,KAAK,GAAG;AAC1E,mBAAO;AAAA,UACR;AAEA,gBAAM;AAAA,QACP;AAAA,MACD;AAAA,MACA,IAAI,aAAa;AAChB,eAAO,cAAc,SAAS,OAAO,SAAS;AAAA,MAC/C;AAAA,MACA,IAAI,kBAAkB;AACrB,gCAAwB,WAAW,WAAW;AAC9C,eAAO,SAAS,OAAO;AAAA,MACxB;AAAA,MACA,IAAI,SAAS;AACZ,eAAO,SAAS;AAAA,MACjB;AAAA,MACA,IAAI,WAAW;AACd,eAAO,kBAAkB,SAAS;AAAA,MACnC;AAAA,MACA,IAAI,sBAAsB;AACzB,eAAO,kBAAkB,kBAAkB,mBAAmB;AAAA,MAC/D;AAAA,MACA,IAAI,aAAiC;AACpC,gCAAwB,WAAW,WAAW;AAC9C,eAAO,SAAS;AAAA,MACjB;AAAA,MACA,IAAI,YAAgC;AACnC,gCAAwB,WAAW,WAAW;AAC9C,eAAO,SAAS;AAAA,MACjB;AAAA,IACD;AACA,QAAI,CAAC,SAAS,YAAY,2BAA2B;AAEpD,aAAO,OAAO,GAAG;AAAA,IAClB;AAGA,UAAM,QAA6B;AAAA,MAClC,qBAAqB,UAAU,OAAO,gBAA6E;AAClH,eAAO,eAAe,qBAAqB,WAAW,UAAU,OAAO,cAAc;AAAA,MACtF;AAAA,MACA,qBAAqB;AACpB,gCAAwB,WAAW,cAAc;AACjD,eAAO,eAAe,mBAAmB;AAAA,MAC1C;AAAA,MACA,SAAS,UAAU;AAClB,gCAAwB,WAAW,cAAc;AACjD,eAAO,eAAe,SAAS,QAAQ;AAAA,MACxC;AAAA,MACA,6BAA6B,UAAU;AACtC,gCAAwB,WAAW,cAAc;AACjD,eAAO,eAAe,6BAA6B,QAAQ;AAAA,MAC5D;AAAA,MACA,IAAI,yBAAyB;AAC5B,gCAAwB,WAAW,cAAc;AACjD,eAAO,kBAAkB,eAAe,gBAAgB;AAAA,MACzD;AAAA,MACA,IAAI,cAAc;AACjB,gCAAwB,WAAW,cAAc;AACjD,eAAO,eAAe;AAAA,MACvB;AAAA,IACD;AAGA,UAAM,gBAAgB,SAAS,OAAO,WACnC,aAAa,cAAc,YAC3B,aAAa,cAAc;AAE9B,UAAM,aAAuC;AAAA,MAC5C,aAAa,aAAqB,oCAAiF;AAClH,YAAI,CAAC,qBAAqB,WAAW,eAAe,GAAG;AACtD,+CAAqC;AAAA,QACtC;AACA,cAAM,OAAO,cAAc,KAAK,wBAAwB,WAAW;AACnE,YAAI,MAAM;AACT,iBAAO,IAAI,UAAU,kBAAkB,UAAU,YAAY,MAAM,eAAe,KAAK;AAAA,QACxF;AACA,YAAI,oCAAoC;AACvC,gBAAM,UAAU,cAAc,IAAI,wBAAwB,WAAW;AACrE,cAAI,SAAS;AACZ,mBAAO,IAAI,UAAU,kBAAkB,UAAU,YAAY,SAAS,eAAiD,IAAI;AAAA,UAC5H;AAAA,QACD;AACA,eAAO;AAAA,MACR;AAAA,MACA,IAAI,MAA+B;AAClC,cAAM,SAAkC,CAAC;AACzC,mBAAW,QAAQ,cAAc,KAAK,4BAA4B,GAAG;AACpE,iBAAO,KAAK,IAAI,UAAU,kBAAkB,UAAU,YAAY,MAAM,eAAe,KAAK,CAAC;AAAA,QAC9F;AACA,eAAO;AAAA,MACR;AAAA,MACA,IAAI,0BAAmD;AACtD,gCAAwB,WAAW,eAAe;AAClD,cAAM,QAAQ,IAAI,uBAAuB,cAAc,KAAK,4BAA4B,EAAE,IAAI,UAAQ,KAAK,UAAU,CAAC;AACtH,cAAM,SAAkC,CAAC;AACzC,mBAAW,QAAQ,cAAc,IAAI,4BAA4B,GAAG;AACnE,gBAAM,+BAA+B,CAAC,MAAM,IAAI,KAAK,UAAU;AAC/D,iBAAO,KAAK,IAAI,UAAU,kBAAkB,UAAU,YAAY,MAAM,eAAiD,4BAA4B,CAAC;AAAA,QACvJ;AACA,eAAO;AAAA,MACR;AAAA,MACA,IAAI,cAAc;AACjB,YAAI,qBAAqB,WAAW,eAAe,GAAG;AACrD,iBAAO,kBAAkB,MAAM,IAAI,cAAc,KAAK,aAAa,cAAc,IAAI,WAAW,CAAC;AAAA,QAClG;AACA,eAAO,kBAAkB,cAAc,KAAK,WAAW;AAAA,MACxD;AAAA,IACD;AAGA,UAAM,YAAqC;AAAA,MAC1C,2BAA2B,MAA4C;AACtE,eAAO,mBAAmB,2BAA2B,UAAU,YAAY,IAAI;AAAA,MAChF;AAAA,MACA,IAAI,yBAAyB;AAC5B,eAAO,kBAAkB,mBAAmB,sBAAsB;AAAA,MACnE;AAAA,MACA,gBAAgB,wBAAC,aAA0B;AAC1C,eAAY,mBAAmB,eAAe,QAAQ;AAAA,MACvD,GAFgB;AAAA,MAGhB,eAAmC;AAClC,eAAO,iBAAiB,aAAa;AAAA,MACtC;AAAA,MACA,wBAAwB,UAA+B,YAAmD;AACzG,eAAO,iBAAiB,eAAe,SAAS,KAAK,UAAU;AAAA,MAChE;AAAA,MACA,MAAM,UAAmC,UAAuC;AAC/E,cAAM,kBAAkB,eAAe,iBAAiB,KAAK,QAAQ;AACrE,YAAI;AACJ,YAAI,iBAAiB,eAAe,GAAG;AACtC,qBAAW,gBAAgB,kBAAkB,KAAK,WAAS,MAAM,YAAY,SAAS,EAAE,KAAK,OAAK,EAAE,aAAa,QAAQ,CAAC,GAAG;AAAA,QAC9H;AACA,eAAO,MAAM,iBAAiB,SAAS,KAAK,SAAS,YAAY,MAAM,UAAU,KAAK,UAAU,YAAY;AAAA,MAC7G;AAAA,MACA,4BAA4B,UAAmC,UAAqC,UAAiE;AACpK,eAAO,wBAAwB,2BAA2B,WAAW,cAAc,QAAQ,GAAG,UAAU,QAAQ;AAAA,MACjH;AAAA,MACA,kCAAkC,UAAmC,UAA4C,UAAmE;AACnL,gCAAwB,WAAW,eAAe;AAClD,eAAO,wBAAwB,kCAAkC,WAAW,cAAc,QAAQ,GAAG,UAAU,QAAQ;AAAA,MACxH;AAAA,MACA,yBAAyB,UAAmC,UAAsD;AACjH,eAAO,wBAAwB,yBAAyB,WAAW,cAAc,QAAQ,GAAG,QAAQ;AAAA,MACrG;AAAA,MACA,2BAA2B,UAAmC,UAAwD;AACrH,eAAO,wBAAwB,2BAA2B,WAAW,cAAc,QAAQ,GAAG,QAAQ;AAAA,MACvG;AAAA,MACA,4BAA4B,UAAmC,UAAyD;AACvH,eAAO,wBAAwB,4BAA4B,WAAW,cAAc,QAAQ,GAAG,QAAQ;AAAA,MACxG;AAAA,MACA,+BAA+B,UAAmC,UAA4D;AAC7H,eAAO,wBAAwB,+BAA+B,WAAW,cAAc,QAAQ,GAAG,QAAQ;AAAA,MAC3G;AAAA,MACA,+BAA+B,UAAmC,UAA4D;AAC7H,eAAO,wBAAwB,+BAA+B,WAAW,cAAc,QAAQ,GAAG,QAAQ;AAAA,MAC3G;AAAA,MACA,sBAAsB,UAAmC,UAAmD;AAC3G,eAAO,wBAAwB,sBAAsB,WAAW,cAAc,QAAQ,GAAG,UAAU,UAAU,UAAU;AAAA,MACxH;AAAA,MACA,sCAAsC,UAAmC,UAAmE;AAC3I,eAAO,wBAAwB,sCAAsC,WAAW,cAAc,QAAQ,GAAG,UAAU,UAAU,UAAU;AAAA,MACxI;AAAA,MACA,6BAA6B,UAAmC,UAA0D;AACzH,eAAO,wBAAwB,6BAA6B,WAAW,cAAc,QAAQ,GAAG,UAAU,UAAU,UAAU;AAAA,MAC/H;AAAA,MACA,kCAAkC,UAAmC,UAA+D;AACnI,eAAO,wBAAwB,kCAAkC,WAAW,cAAc,QAAQ,GAAG,QAAQ;AAAA,MAC9G;AAAA,MACA,uCAAuC,UAAmC,UAAoE;AAC7I,eAAO,wBAAwB,uCAAuC,WAAW,cAAc,QAAQ,GAAG,QAAQ;AAAA,MACnH;AAAA,MACA,mCAAmC,UAAmC,UAAgE;AACrI,eAAO,wBAAwB,mCAAmC,WAAW,cAAc,QAAQ,GAAG,QAAQ;AAAA,MAC/G;AAAA,MACA,0BAA0B,UAAmC,UAAuD;AACnH,eAAO,wBAAwB,0BAA0B,WAAW,cAAc,QAAQ,GAAG,QAAQ;AAAA,MACtG;AAAA,MACA,uBAAuB,UAAmC,UAAoD;AAC7G,eAAO,wBAAwB,uBAAuB,WAAW,cAAc,QAAQ,GAAG,QAAQ;AAAA,MACnG;AAAA,MACA,+BAA+B,UAAmC,UAA4D;AAC7H,gCAAwB,WAAW,wBAAwB;AAC3D,eAAO,wBAAwB,+BAA+B,WAAW,cAAc,QAAQ,GAAG,QAAQ;AAAA,MAC3G;AAAA,MACA,+BAA+B,UAAmC,UAAyC,UAAqE;AAC/K,eAAO,wBAAwB,+BAA+B,WAAW,cAAc,QAAQ,GAAG,UAAU,QAAQ;AAAA,MACrH;AAAA,MACA,gCAAgC,UAA6D;AAC5F,eAAO,wBAAwB,gCAAgC,WAAW,QAAQ;AAAA,MACnF;AAAA,MACA,uCAAuC,UAAmC,UAAoE;AAC7I,eAAO,wBAAwB,uCAAuC,WAAW,cAAc,QAAQ,GAAG,QAAQ;AAAA,MACnH;AAAA,MACA,4CAA4C,UAAmC,UAAyE;AACvJ,eAAO,wBAAwB,4CAA4C,WAAW,cAAc,QAAQ,GAAG,QAAQ;AAAA,MACxH;AAAA,MACA,qCAAqC,UAAmC,UAA+C,0BAAkC,uBAAoD;AAC5M,eAAO,wBAAwB,qCAAqC,WAAW,cAAc,QAAQ,GAAG,UAAU,CAAC,qBAAqB,EAAE,OAAO,qBAAqB,CAAC;AAAA,MACxK;AAAA,MACA,uCAAuC,UAAmC,UAAiD,QAAwD;AAClL,eAAO,wBAAwB,uCAAuC,WAAW,cAAc,QAAQ,GAAG,UAAU,MAAM;AAAA,MAC3H;AAAA,MACA,4CAA4C,UAAmC,UAAsD,QAAwD;AAC5L,eAAO,wBAAwB,4CAA4C,WAAW,cAAc,QAAQ,GAAG,UAAU,MAAM;AAAA,MAChI;AAAA,MACA,8BAA8B,UAAmC,UAAwC,cAA8D,WAAwC;AAC9M,YAAI,OAAO,cAAc,UAAU;AAClC,iBAAO,wBAAwB,8BAA8B,WAAW,cAAc,QAAQ,GAAG,UAAU,SAAS;AAAA,QACrH;AACA,eAAO,wBAAwB,8BAA8B,WAAW,cAAc,QAAQ,GAAG,UAAU,OAAO,cAAc,cAAc,CAAC,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;AAAA,MAC7K;AAAA,MACA,+BAA+B,UAAmC,aAA4C,mBAAgD;AAC7J,eAAO,wBAAwB,+BAA+B,WAAW,cAAc,QAAQ,GAAG,UAAU,iBAAiB;AAAA,MAC9H;AAAA,MACA,qCAAqC,UAAmC,UAA+C,UAA2E;AACjM,YAAI,SAAS,6BAA6B;AACzC,kCAAwB,WAAW,4BAA4B;AAAA,QAChE;AACA,YAAI,SAAS,wCAAwC;AACpD,kCAAwB,WAAW,4BAA4B;AAAA,QAChE;AACA,YAAI,UAAU;AACb,kCAAwB,WAAW,4BAA4B;AAAA,QAChE;AACA,eAAO,wBAAwB,kCAAkC,WAAW,cAAc,QAAQ,GAAG,UAAU,QAAQ;AAAA,MACxH;AAAA,MACA,2BAA2B,UAAmC,UAAwD;AACrH,gCAAwB,WAAW,YAAY;AAC/C,eAAO,wBAAwB,2BAA2B,WAAW,cAAc,QAAQ,GAAG,QAAQ;AAAA,MACvG;AAAA,MACA,6BAA6B,UAAmC,UAA0D;AACzH,eAAO,wBAAwB,6BAA6B,WAAW,cAAc,QAAQ,GAAG,QAAQ;AAAA,MACzG;AAAA,MACA,sBAAsB,UAAmC,UAA2D;AACnH,eAAO,wBAAwB,sBAAsB,WAAW,cAAc,QAAQ,GAAG,QAAQ;AAAA,MAClG;AAAA,MACA,6BAA6B,UAAmC,UAA0D;AACzH,eAAO,wBAAwB,6BAA6B,WAAW,cAAc,QAAQ,GAAG,QAAQ;AAAA,MACzG;AAAA,MACA,+BAA+B,UAAmC,UAA4D;AAC7H,eAAO,wBAAwB,+BAA+B,WAAW,UAAU,QAAQ;AAAA,MAC5F;AAAA,MACA,8BAA8B,UAAmC,UAA2D;AAC3H,eAAO,wBAAwB,8BAA8B,WAAW,UAAU,QAAQ;AAAA,MAC3F;AAAA,MACA,8BAA8B,UAAmC,UAA2D;AAC3H,eAAO,wBAAwB,8BAA8B,WAAW,UAAU,QAAQ;AAAA,MAC3F;AAAA,MACA,0BAA0B,wBAAC,UAAkB,kBAAmE;AAC/G,eAAO,wBAAwB,yBAAyB,WAAW,UAAU,aAAa;AAAA,MAC3F,GAF0B;AAAA,MAG1B,8BAA8B,KAA0B,KAAsB;AAC7E,gCAAwB,WAAW,kBAAkB;AACrD,eAAO,iBAAiB,gBAAgB,KAAK,GAAG;AAAA,MACjD;AAAA,MACA,2BAA2B,UAAmC,UAAwD;AACrH,eAAO,wBAAwB,2BAA2B,WAAW,UAAU,QAAQ;AAAA,MACxF;AAAA,MACA,yBAAyB,IAAY,UAA8D;AAClG,eAAO,iBAAiB,yBAAyB,WAAW,IAAI,QAAQ;AAAA,MACzE;AAAA,MACA,iCAAiC,UAAmC,UAA2C,UAAuE;AACrL,eAAO,wBAAwB,mCAAmC,WAAW,UAAU,UAAU,qBAAqB,WAAW,eAAe,IAAI,WAAW,MAAS;AAAA,MACzK;AAAA,IACD;AAGA,UAAM,SAA+B;AAAA,MACpC,IAAI,mBAAmB;AACtB,eAAO,eAAe,oBAAoB;AAAA,MAC3C;AAAA,MACA,IAAI,qBAAqB;AACxB,eAAO,eAAe,sBAAsB;AAAA,MAC7C;AAAA,MACA,IAAI,iBAAiB;AACpB,eAAO,uBAAuB;AAAA,MAC/B;AAAA,MACA,IAAI,YAAY;AACf,eAAO,uBAAuB;AAAA,MAC/B;AAAA,MACA,MAAM,iBAAiB,eAAiD,iBAAsE,eAAqD;AAClM,YAAI,IAAI,MAAM,aAAa,KAAK,cAAc,WAAW,QAAQ,gBAAgB,CAAC,cAAc,WAAW;AAC1G,gCAAsB,OAAO,8BAA8B,WAAW,wDAAwD;AAAA,QAC/H;AACA,cAAM,WAAW,OAAO,IAAI,MAAM,aAAa,IAC5C,QAAQ,QAAQ,UAAU,iBAAiB,aAAa,CAAC,IACzD,QAAQ,QAA6B,aAAa;AAErD,eAAO,eAAe,iBAAiB,UAAU,iBAAiB,aAAa;AAAA,MAChF;AAAA,MACA,+BAA+B,SAA0E;AACxG,eAAO,eAAe,+BAA+B,WAAW,OAAO;AAAA,MACxE;AAAA,MACA,4BAA4B,UAAU,SAAU,aAAc;AAC7D,eAAO,kBAAkB,eAAe,2BAA2B,EAAE,UAAU,SAAS,WAAW;AAAA,MACpG;AAAA,MACA,8BAA8B,UAAU,SAAS,aAAa;AAC7D,eAAO,kBAAkB,eAAe,6BAA6B,EAAE,UAAU,SAAS,WAAW;AAAA,MACtG;AAAA,MACA,+BAA+B,UAA6D,UAAgB,aAAyC;AACpJ,eAAO,kBAAkB,eAAe,8BAA8B,EAAE,UAAU,UAAU,WAAW;AAAA,MACxG;AAAA,MACA,6BAA6B,UAA2D,UAAgB,aAAyC;AAChJ,eAAO,kBAAkB,eAAe,4BAA4B,EAAE,UAAU,UAAU,WAAW;AAAA,MACtG;AAAA,MACA,mCAAmC,UAAiE,UAAgB,aAAyC;AAC5J,eAAO,kBAAkB,eAAe,kCAAkC,EAAE,UAAU,UAAU,WAAW;AAAA,MAC5G;AAAA,MACA,gCAAgC,UAAU,SAAU,aAAc;AACjE,eAAO,kBAAkB,eAAe,+BAA+B,EAAE,UAAU,SAAS,WAAW;AAAA,MACxG;AAAA,MACA,mBAAmB,UAAU,SAAU,aAAc;AACpD,eAAO,kBAAkB,uBAAuB,kBAAkB,EAAE,UAAU,SAAS,WAAW;AAAA,MACnG;AAAA,MACA,kBAAkB,UAAU,SAAU,aAAc;AACnD,eAAO,kBAAkB,uBAAuB,iBAAiB,EAAE,UAAU,SAAS,WAAW;AAAA,MAClG;AAAA,MACA,0BAA0B,UAAU,SAAU,aAAc;AAC3D,eAAO,kBAAkB,uBAAuB,yBAAyB,EAAE,UAAU,SAAS,WAAW;AAAA,MAC1G;AAAA,MACA,8BAA8B,UAAU,SAAU,aAAc;AAC/D,gCAAwB,WAAW,oBAAoB;AACvD,eAAO,kBAAkB,uBAAuB,6BAA6B,EAAE,UAAU,SAAS,WAAW;AAAA,MAC9G;AAAA,MACA,yBAAyB,UAAU,SAAU,aAAc;AAC1D,eAAO,kBAAkB,uBAAuB,wBAAwB,EAAE,UAAU,SAAS,WAAW;AAAA,MACzG;AAAA,MACA,uBAAuB,UAAU,SAAU,aAAc;AACxD,gCAAwB,WAAW,wBAAwB;AAC3D,eAAO,kBAAkB,uBAAuB,sBAAsB,EAAE,UAAU,SAAS,WAAW;AAAA,MACvG;AAAA,MACA,4BAA4B,UAAU,SAAU,aAAc;AAC7D,gCAAwB,WAAW,6BAA6B;AAChE,eAAO,kBAAkB,uBAAuB,2BAA2B,EAAE,UAAU,SAAS,WAAW;AAAA,MAC5G;AAAA,MACA,oCAAoC,UAAU,SAAU,aAAc;AACrE,eAAO,kBAAkB,gCAAgC,mCAAmC,EAAE,UAAU,SAAS,WAAW;AAAA,MAC7H;AAAA,MACA,iCAAiC,UAAU,SAAU,aAAc;AAClE,eAAO,kBAAkB,gCAAgC,gCAAgC,EAAE,UAAU,SAAS,WAAW;AAAA,MAC1H;AAAA,MACA,+BAA+B,UAAU,SAAU,aAAc;AAChE,eAAO,kBAAkB,gCAAgC,8BAA8B,EAAE,UAAU,SAAS,WAAW;AAAA,MACxH;AAAA,MACA,IAAI,QAAQ;AACX,eAAO,cAAc,SAAS;AAAA,MAC/B;AAAA,MACA,uBAAuB,UAAU,SAAU,aAAc;AACxD,eAAO,kBAAkB,cAAc,sBAAsB,EAAE,UAAU,SAAS,WAAW;AAAA,MAC9F;AAAA,MACA,uBAAuB,YAAoB,MAAkE;AAC5G,eAAsB,sBAAsB,YAAY,WAAW,SAAS,MAAM,SAAS,KAAK,CAAC,GAAuC,KAAK,MAAM,CAAC,CAAC;AAAA,MACtJ;AAAA,MACA,mBAAmB,YAAoB,MAAkE;AACxG,eAAsB,sBAAsB,YAAY,WAAW,SAAS,SAAS,SAAS,KAAK,CAAC,GAAuC,KAAK,MAAM,CAAC,CAAC;AAAA,MACzJ;AAAA,MACA,iBAAiB,YAAoB,MAAkE;AACtG,eAAsB,sBAAsB,YAAY,WAAW,SAAS,OAAO,SAAS,KAAK,CAAC,GAAuC,KAAK,MAAM,CAAC,CAAC;AAAA,MACvJ;AAAA,MACA,cAAc,OAAY,SAAmC,OAAuC;AACnG,eAAO,iBAAiB,cAAc,WAAW,OAAO,SAAS,KAAK;AAAA,MACvE;AAAA,MACA,wBAAwB,SAA6C;AACpE,eAAO,iBAAiB,wBAAwB,OAAO;AAAA,MACxD;AAAA,MACA,aAAa,SAAkC,OAAkC;AAChF,eAAO,iBAAiB,UAAU,SAAS,KAAK;AAAA,MACjD;AAAA,MACA,eAAe,SAAS;AACvB,eAAO,eAAe,eAAe,WAAW,OAAO;AAAA,MACxD;AAAA,MACA,eAAe,SAAS;AACvB,eAAO,eAAe,eAAe,OAAO;AAAA,MAC7C;AAAA,MACA,oBAAoB,eAAoD,qBAA0D,aAA4C;AAC7K,YAAI;AACJ,YAAI;AACJ,YAAI;AAEJ,YAAI,OAAO,kBAAkB,UAAU;AACtC,eAAK;AACL,sBAAY;AACZ,qBAAW;AAAA,QACZ,OAAO;AACN,sBAAY;AACZ,qBAAW;AAAA,QACZ;AAEA,eAAO,iBAAiB,qBAAqB,WAAW,IAAI,WAAW,QAAQ;AAAA,MAChF;AAAA,MACA,oBAAoB,MAAc,mBAA+D;AAChG,eAAO,iBAAiB,oBAAoB,MAAM,iBAAiB;AAAA,MACpE;AAAA,MACA,gBAAmB,MAA0D;AAC5E,8BAAsB;AAAA,UAAO;AAAA,UAA0B;AAAA,UACtD;AAAA,QAA6B;AAE9B,eAAO,gBAAgB,aAAa,WAAW,EAAE,UAAU,aAAa,iBAAiB,cAAc,GAAG,CAAC,UAAU,UAAU,KAAK,EAAE,OAAO,GAAW;AAAA,QAAW,EAAE,CAAC,CAAC;AAAA,MACxK;AAAA,MACA,aAAgB,SAAiC,MAA0H;AAC1K,eAAO,gBAAgB,aAAa,WAAW,SAAS,IAAI;AAAA,MAC7D;AAAA,MACA,oBAAoB,MAAc,SAAkD;AACnF,eAAO,qBAAqB,oBAAoB,MAAM,SAAS,SAAS;AAAA,MACzE;AAAA,MACA,mBAAmB,UAAkB,OAAe,aAA6F,SAAmF;AACnO,eAAO,qBAAqB,mBAAmB,WAAW,UAAU,OAAO,aAAa,OAAO;AAAA,MAChG;AAAA,MACA,6BAA6B,QAA2B,MAAc,QAAgB,SAA4D;AACjJ,gCAAwB,WAAW,cAAc;AACjD,eAAO,oBAAoB,yBAAyB,QAAQ,MAAM,QAAQ,SAAS,SAAS;AAAA,MAC7F;AAAA,MACA,eAAe,eAAmF,WAAoB,WAAyD;AAC9K,YAAI,OAAO,kBAAkB,UAAU;AACtC,cAAI,SAAS,eAAe;AAC3B,mBAAO,uBAAuB,wBAAwB,aAAa;AAAA,UACpE;AACA,iBAAO,uBAAuB,0BAA0B,aAAa;AAAA,QACtE;AACA,eAAO,uBAAuB,eAAe,eAAe,WAAW,SAAS;AAAA,MACjF;AAAA,MACA,6BAA6B,UAA0D;AACtF,eAAO,uBAAuB,qBAAqB,QAAQ;AAAA,MAC5D;AAAA,MACA,gCAAgC,IAAY,UAA6D;AACxG,eAAO,uBAAuB,wBAAwB,WAAW,IAAI,QAAQ;AAAA,MAC9E;AAAA,MACA,iCAAiC,IAAY,UAA8D;AAC1G,gCAAwB,WAAW,0BAA0B;AAC7D,eAAO,uBAAuB,iCAAiC,IAAI,UAAU,WAAW,OAAO,QAAQ;AAAA,MACxG;AAAA,MACA,yBAAyB,QAAgB,kBAAmE;AAC3G,eAAO,iBAAiB,yBAAyB,QAAQ,kBAAkB,SAAS;AAAA,MACrF;AAAA,MACA,eAAe,QAAgB,SAAmF;AACjH,eAAO,iBAAiB,eAAe,QAAQ,SAAS,SAAS;AAAA,MAClE;AAAA,MACA,gCAAgC,wBAAC,UAAkB,eAA8C;AAChG,eAAO,qBAAqB,+BAA+B,WAAW,UAAU,UAAU;AAAA,MAC3F,GAFgC;AAAA,MAGhC,8BAA8B,wBAAC,UAAkB,UAAiF,UAAyG,CAAC,MAAM;AACjP,eAAO,qBAAqB,6BAA6B,WAAW,UAAU,UAAU,OAAO;AAAA,MAChG,GAF8B;AAAA,MAG9B,+BAA+B,UAAyC;AACvE,eAAO,mBAAmB,+BAA+B,UAAU,SAAS;AAAA,MAC7E;AAAA,MACA,mBAAmB,SAA4B;AAC9C,eAAO,YAAY,mBAAmB,WAAW,OAAO;AAAA,MACzD;AAAA,MACA,kBAAuE;AACtE,eAAO,iBAAiB,gBAAgB,SAAS;AAAA,MAClD;AAAA,MACA,iBAAkC;AACjC,eAAO,iBAAiB,eAAe,SAAS;AAAA,MACjD;AAAA,MACA,IAAI,mBAAsC;AACzC,eAAO,eAAe;AAAA,MACvB;AAAA,MACA,4BAA4B,UAAU,SAAU,aAAc;AAC7D,eAAO,kBAAkB,eAAe,2BAA2B,EAAE,UAAU,SAAS,WAAW;AAAA,MACpG;AAAA,MACA,4BAA4B,QAAgB,UAAsC,SAI/E;AACF,eAAO,oBAAoB,4BAA4B,WAAW,QAAQ,UAAU,SAAS,cAAc;AAAA,MAC5G;AAAA,MACA,IAAI,uBAA0D;AAC7D,eAAO,gBAAgB;AAAA,MACxB;AAAA,MACA,gCAAgC,UAAU,UAAW,aAAc;AAClE,eAAO,kBAAkB,gBAAgB,+BAA+B,EAAE,UAAU,UAAU,WAAW;AAAA,MAC1G;AAAA,MACA,IAAI,yBAAyB;AAC5B,eAAO,gBAAgB;AAAA,MACxB;AAAA,MACA,IAAI,oCAAoC;AACvC,eAAO,kBAAkB,gBAAgB,iCAAiC;AAAA,MAC3E;AAAA,MACA,mCAAmC,UAAU,UAAW,aAAc;AACrE,eAAO,kBAAkB,uBAAuB,kCAAkC,EAAE,UAAU,UAAU,WAAW;AAAA,MACpH;AAAA,MACA,uCAAuC,UAAU,UAAW,aAAc;AACzE,eAAO,kBAAkB,uBAAuB,sCAAsC,EAAE,UAAU,UAAU,WAAW;AAAA,MACxH;AAAA,MACA,qBAAqB,UAAU,SAAU;AACxC,eAAO,gBAAgB,qBAAqB,UAAU,OAAO;AAAA,MAC9D;AAAA,MACA,0BAA0B,IAAY,QAAkC,UAA4C;AACnH,gCAAwB,WAAW,mBAAmB;AACtD,eAAO,kBAAkB,0BAA0B,UAAU,YAAY,IAAI,QAAQ,QAAQ;AAAA,MAC9F;AAAA,MACA,8BAA8B,IAAY,SAAuC;AAChF,gCAAwB,WAAW,wBAAwB;AAC3D,eAAO,8BAA8B,8BAA8B,WAAW,IAAI,OAAO;AAAA,MAC1F;AAAA,MACA,0BAA0B,UAAmC,mBAA6C,OAAe,SAAyC;AACjK,gCAAwB,WAAW,mBAAmB;AACtD,eAAO,iBAAiB,0BAA0B,cAAc,QAAQ,GAAG,mBAAmB,OAAO,OAAO;AAAA,MAC7G;AAAA,MACA,IAAI,YAA8B;AACjC,eAAO,kBAAkB;AAAA,MAC1B;AAAA,MACA,sBAAsB,UAAmC,UAAmD;AAC3G,gCAAwB,WAAW,eAAe;AAClD,eAAO,aAAa,sBAAsB,cAAc,QAAQ,GAAG,QAAQ;AAAA,MAC5E;AAAA,IACD;AAIA,UAAM,YAAqC;AAAA,MAC1C,IAAI,WAAW;AACd,8BAAsB;AAAA,UAAO;AAAA,UAAsB;AAAA,UAClD;AAAA,QAA2G;AAE5G,eAAO,iBAAiB,QAAQ;AAAA,MACjC;AAAA,MACA,IAAI,SAAS,OAAO;AACnB,cAAM,IAAI,OAAO,cAAc,UAAU;AAAA,MAC1C;AAAA,MACA,mBAAmB,UAAU;AAC5B,eAAO,iBAAiB,mBAAmB,QAAQ;AAAA,MACpD;AAAA,MACA,IAAI,mBAAmB;AACtB,eAAO,iBAAiB,oBAAoB;AAAA,MAC7C;AAAA,MACA,IAAI,OAAO;AACV,eAAO,iBAAiB;AAAA,MACzB;AAAA,MACA,IAAI,KAAK,OAAO;AACf,cAAM,IAAI,OAAO,cAAc,MAAM;AAAA,MACtC;AAAA,MACA,IAAI,gBAAgB;AACnB,eAAO,iBAAiB;AAAA,MACzB;AAAA,MACA,IAAI,cAAc,OAAO;AACxB,cAAM,IAAI,OAAO,cAAc,eAAe;AAAA,MAC/C;AAAA,MACA,wBAAwB,wBAAC,OAAO,gBAAgB,0BAA0B;AACzE,eAAO,iBAAiB,uBAAuB,WAAW,OAAO,eAAe,GAAG,GAAG,qBAAqB;AAAA,MAC5G,GAFwB;AAAA,MAGxB,6BAA6B,gCAAU,UAAU,UAAW,aAAc;AACzE,eAAO,kBAAkB,iBAAiB,oBAAoB,EAAE,UAAU,UAAU,WAAW;AAAA,MAChG,GAF6B;AAAA,MAG7B,gBAAgB,wBAAC,WAAW,qBAAsB;AACjD,eAAO,iBAAiB,gBAAgB,WAAW,gBAAgB;AAAA,MACpE,GAFgB;AAAA,MAGhB,WAAW,wBAAC,SAAS,SAAS,YAAa,UAAW;AAErD,eAAO,iBAAiB,UAAU,SAAS,SAAS,YAAY,UAAU,YAAY,KAAK;AAAA,MAC5F,GAHW;AAAA,MAIX,YAAY,wBAAC,aAAiC,SAAoC,UAA6D;AAC9I,gCAAwB,WAAW,YAAY;AAC/C,eAAO,iBAAiB,WAAW,aAAa,SAAS,UAAU,YAAY,KAAK;AAAA,MACrF,GAHY;AAAA,MAIZ,eAAe,wBAAC,aAAmC,SAAuC,UAA6D;AACtJ,gCAAwB,WAAW,eAAe;AAClD,eAAO,iBAAiB,cAAc,aAAa,SAAS,UAAU,YAAY,KAAK;AAAA,MACxF,GAHe;AAAA,MAIf,iBAAiB,wBAAC,OAA+B,mBAAgG,iBAA0F,UAAqC;AAC/Q,gCAAwB,WAAW,iBAAiB;AACpD,YAAI;AACJ,YAAI;AAEJ,YAAI,OAAO,sBAAsB,UAAU;AAC1C,oBAAU;AACV,qBAAW;AAAA,QACZ,OAAO;AACN,oBAAU,CAAC;AACX,qBAAW;AACX,kBAAQ;AAAA,QACT;AAEA,eAAO,iBAAiB,gBAAgB,OAAO,WAAW,CAAC,GAAG,UAAU,UAAU,YAAY,KAAK;AAAA,MACpG,GAfiB;AAAA,MAgBjB,oBAAoB,wBAAC,OAAkC,SAA4C,UAAqE;AACvK,gCAAwB,WAAW,oBAAoB;AACvD,gCAAwB,WAAW,uBAAuB;AAC1D,eAAO,iBAAiB,mBAAmB,OAAO,SAAS,UAAU,YAAY,KAAK;AAAA,MACvF,GAJoB;AAAA,MAKpB,MAAM,wBAAC,QAAQ;AACd,eAAO,iBAAiB,KAAK,GAAG;AAAA,MACjC,GAFM;AAAA,MAGN,QAAQ,wBAAC,QAAQ;AAChB,eAAO,iBAAiB,OAAO,GAAG;AAAA,MACnC,GAFQ;AAAA,MAGR,SAAS,wBAAC,oBAAqB;AAC9B,eAAO,iBAAiB,QAAQ,eAAe;AAAA,MAChD,GAFS;AAAA,MAGT,UAAU,MAA4B,UAA4D;AACjG,eAAO,iBAAiB,mBAAmB,MAAM,WAAW,QAAQ;AAAA,MACrE;AAAA,MACA,yBAAyB,wBAAC,SAAS,uBAAuB,cAAe,iBAA4C;AACpH,YAAI,UAAsD;AAE1D,YAAI,OAAO,0BAA0B,WAAW;AAC/C,oBAAU;AAAA,YACT,oBAAoB,QAAQ,qBAAqB;AAAA,YACjD,oBAAoB,QAAQ,YAAY;AAAA,YACxC,oBAAoB,QAAQ,YAAY;AAAA,YACxC,WAAW;AAAA,UACZ;AAAA,QACD,WAAW,uBAAuB;AACjC,kCAAwB,WAAW,yBAAyB;AAC5D,oBAAU;AAAA,YACT,GAAG;AAAA,YACH,WAAW;AAAA,UACZ;AAAA,QACD;AAEA,eAAO,uBAAuB,wBAAwB,kBAAkB,WAAW,SAAS,OAAO;AAAA,MACpG,GAnByB;AAAA,MAoBzB,IAAI,gBAAgB;AACnB,eAAO,iBAAiB,mBAAmB,EAAE,IAAI,UAAQ,KAAK,QAAQ;AAAA,MACvE;AAAA,MACA,IAAI,cAAc,OAAO;AACxB,cAAM,IAAI,OAAO,cAAc,eAAe;AAAA,MAC/C;AAAA,MACA,iBAAiB,wBAAwF;AACxG,YAAI;AAEJ,cAAM,UAAU;AAChB,YAAI,OAAO,2BAA2B,UAAU;AAC/C,uBAAa,QAAQ,QAAQ,IAAI,KAAK,sBAAsB,CAAC;AAAA,QAC9D,WAAW,IAAI,MAAM,sBAAsB,GAAG;AAC7C,uBAAa,QAAQ,QAAQ,sBAAsB;AAAA,QACpD,WAAW,CAAC,WAAW,OAAO,YAAY,UAAU;AACnD,uBAAa,iBAAiB,mBAAmB,OAAO;AAAA,QACzD,OAAO;AACN,gBAAM,IAAI,MAAM,2CAA2C;AAAA,QAC5D;AAEA,eAAO,WAAW,KAAK,SAAO;AAC7B,4BAAkB,MAAM,yBAAyB,UAAU,UAAU,EAAE;AACvE,cAAI,IAAI,WAAW,QAAQ,gBAAgB,CAAC,IAAI,WAAW;AAC1D,kCAAsB,OAAO,8BAA8B,WAAW,wDAAwD;AAAA,UAC/H;AACA,iBAAO,iBAAiB,mBAAmB,GAAG,EAAE,KAAK,kBAAgB;AACpE,mBAAO,aAAa;AAAA,UACrB,CAAC;AAAA,QACF,CAAC;AAAA,MACF;AAAA,MACA,uBAAuB,wBAAC,UAAU,UAAW,gBAAiB;AAC7D,eAAO,kBAAkB,iBAAiB,gBAAgB,EAAE,UAAU,UAAU,WAAW;AAAA,MAC5F,GAFuB;AAAA,MAGvB,wBAAwB,wBAAC,UAAU,UAAW,gBAAiB;AAC9D,eAAO,kBAAkB,iBAAiB,mBAAmB,EAAE,UAAU,UAAU,WAAW;AAAA,MAC/F,GAFwB;AAAA,MAGxB,yBAAyB,wBAAC,UAAU,UAAW,gBAAiB;AAC/D,eAAO,kBAAkB,iBAAiB,mBAAmB,EAAE,UAAU,UAAU,WAAW;AAAA,MAC/F,GAFyB;AAAA,MAGzB,uBAAuB,wBAAC,UAAU,UAAW,gBAAiB;AAC7D,eAAO,kBAAkB,iBAAiB,iBAAiB,EAAE,UAAU,UAAU,WAAW;AAAA,MAC7F,GAFuB;AAAA,MAGvB,wBAAwB,wBAAC,UAAU,UAAW,gBAAiB;AAC9D,eAAO,kBAAkB,+BAA+B,+BAA+B,SAAS,CAAC,EAAE,UAAU,UAAU,WAAW;AAAA,MACnI,GAFwB;AAAA,MAGxB,IAAI,oBAA+C;AAClD,eAAO,gBAAgB,kBAAkB,IAAI,OAAK,EAAE,WAAW;AAAA,MAChE;AAAA,MACA,MAAM,qBAAqB,WAA0B,SAA+B;AACnF,YAAI;AACJ,YAAI,IAAI,MAAM,SAAS,GAAG;AACzB,gBAAM;AACN,gBAAM,gBAAgB,qBAAqB,SAAS;AAAA,QACrD,WAAW,OAAO,cAAc,UAAU;AACzC,gBAAM,IAAI,OAAO,MAAM,gBAAgB,uBAAuB,EAAE,UAAU,WAAW,QAAQ,CAAC,CAAC;AAAA,QAChG,OAAO;AACN,gBAAM,IAAI,MAAM,mBAAmB;AAAA,QACpC;AACA,eAAO,gBAAgB,oBAAoB,GAAG,EAAE;AAAA,MACjD;AAAA,MACA,0BAA0B,UAAU,SAAS,aAAa;AACzD,eAAO,kBAAkB,yBAAyB,yBAAyB,EAAE,UAAU,SAAS,WAAW;AAAA,MAC5G;AAAA,MACA,4BAA4B,UAAU,SAAS,aAAa;AAC3D,eAAO,kBAAkB,yBAAyB,2BAA2B,EAAE,UAAU,SAAS,WAAW;AAAA,MAC9G;AAAA,MACA,2BAA2B,UAAU,SAAS,aAAa;AAC1D,eAAO,kBAAkB,uCAAuC,mCAAmC,SAAS,CAAC,EAAE,UAAU,SAAS,WAAW;AAAA,MAC9I;AAAA,MACA,IAAI,4BAA4B;AAC/B,eAAO,kBAAkB,gBAAgB,yBAAyB;AAAA,MACnE;AAAA,MACA,IAAI,6BAA6B;AAChC,eAAO,kBAAkB,gBAAgB,0BAA0B;AAAA,MACpE;AAAA,MACA,2BAA2B,UAAkB,YAAuC,SAAiD,cAAgD;AACpL,eAAO,gBAAgB,2BAA2B,WAAW,UAAU,YAAY,SAAS,qBAAqB,WAAW,mBAAmB,IAAI,eAAe,MAAS;AAAA,MAC5K;AAAA,MACA,0BAA0B,wBAAC,UAA2B,UAAgB,gBAA4C;AACjH,eAAO,kBAAkB,eAAe,wBAAwB,EAAE,UAAU,UAAU,WAAW;AAAA,MAClG,GAF0B;AAAA,MAG1B,iBAAiB,SAAkB,OAAyE;AAC3G,gBAAQ,UAAU,WAAW,IAAI,SAAY;AAC7C,eAAO,eAAe,iBAAiB,SAAS,OAAO,SAAS;AAAA,MACjE;AAAA,MACA,oCAAoC,QAAgB,UAA8C;AACjG,eAAO,gCAAgC,oCAAoC,QAAQ,QAAQ;AAAA,MAC5F;AAAA,MACA,sBAAsB,wBAAC,MAAc,aAAkC;AACtE,8BAAsB;AAAA,UAAO;AAAA,UAA+B;AAAA,UAC3D;AAAA,QAAiE;AAElE,eAAO,YAAY,qBAAqB,WAAW,MAAM,QAAQ;AAAA,MAClE,GALsB;AAAA,MAMtB,2BAA2B,QAAQ,UAAU,SAAS;AACrD,eAAO;AAAA,UACN,kBAAkB,2BAA2B,WAAW,QAAQ,UAAU,OAAO;AAAA,UACjF,0BAA0B,sBAAsB,QAAQ,UAAU,OAAO;AAAA,QAC1E;AAAA,MACD;AAAA,MACA,IAAI,KAAK;AACR,eAAO,0BAA0B;AAAA,MAClC;AAAA,MACA,4BAA4B,wBAAC,QAAgB,aAAwC;AACpF,gCAAwB,WAAW,oBAAoB;AACvD,eAAO,cAAc,8BAA8B,QAAQ,QAAQ;AAAA,MACpE,GAH4B;AAAA,MAI5B,4BAA4B,wBAAC,QAAgB,aAAwC;AACpF,gCAAwB,WAAW,oBAAoB;AACvD,eAAO,cAAc,8BAA8B,QAAQ,QAAQ;AAAA,MACpE,GAH4B;AAAA,MAI5B,8BAA8B,wBAAC,QAAgB,aAA0C;AAExF,gCAAwB,WAAW,sBAAsB;AACzD,gCAAwB,WAAW,oBAAoB;AACvD,eAAO,cAAc,gCAAgC,QAAQ,QAAQ;AAAA,MACtE,GAL8B;AAAA,MAM9B,+BAA+B,wBAAC,QAAgB,aAA2C;AAC1F,gCAAwB,WAAW,uBAAuB;AAC1D,eAAO,cAAc,2BAA2B,QAAQ,QAAQ;AAAA,MACjE,GAH+B;AAAA,MAI/B,+BAA+B,wBAAC,QAAgB,aAA2C;AAC1F,gCAAwB,WAAW,uBAAuB;AAC1D,eAAO,cAAc,2BAA2B,QAAQ,QAAQ;AAAA,MACjE,GAH+B;AAAA,MAI/B,iCAAiC,wBAAC,QAAgB,aAA6C;AAE9F,gCAAwB,WAAW,yBAAyB;AAC5D,gCAAwB,WAAW,uBAAuB;AAC1D,eAAO,cAAc,6BAA6B,QAAQ,QAAQ;AAAA,MACnE,GALiC;AAAA,MAMjC,iCAAiC,wBAAC,iBAAyB,aAA6C;AACvG,gCAAwB,WAAW,WAAW;AAC9C,eAAO,iBAAiB,gCAAgC,iBAAiB,QAAQ;AAAA,MAClF,GAHiC;AAAA,MAIjC,gCAAgC,wBAAC,cAA6C;AAC7E,gCAAwB,WAAW,WAAW;AAC9C,eAAO,oBAAoB,gCAAgC,SAAS;AAAA,MACrE,GAHgC;AAAA,MAIhC,qBAAqB,wBAAC,cAAsB;AAC3C,gCAAwB,WAAW,WAAW;AAC9C,eAAO,iBAAiB,oBAAoB,SAAS;AAAA,MACtD,GAHqB;AAAA,MAIrB,kBAAkB,wBAAC,UAAU,SAAS,gBAAgB;AACrD,eAAO,kBAAkB,uBAAuB,eAAe,EAAE,UAAU,SAAS,WAAW;AAAA,MAChG,GAFkB;AAAA,MAGlB,kBAAkB,wBAAC,UAAU,SAAS,gBAAgB;AACrD,eAAO,kBAAkB,uBAAuB,eAAe,EAAE,UAAU,SAAS,WAAW;AAAA,MAChG,GAFkB;AAAA,MAGlB,kBAAkB,wBAAC,UAAU,SAAS,gBAAgB;AACrD,eAAO,kBAAkB,uBAAuB,eAAe,EAAE,UAAU,SAAS,WAAW;AAAA,MAChG,GAFkB;AAAA,MAGlB,mBAAmB,wBAAC,UAAkD,SAAe,gBAAsC;AAC1H,eAAO,kBAAkB,uBAAuB,yBAAyB,SAAS,CAAC,EAAE,UAAU,SAAS,WAAW;AAAA,MACpH,GAFmB;AAAA,MAGnB,mBAAmB,wBAAC,UAAkD,SAAe,gBAAsC;AAC1H,eAAO,kBAAkB,uBAAuB,yBAAyB,SAAS,CAAC,EAAE,UAAU,SAAS,WAAW;AAAA,MACpH,GAFmB;AAAA,MAGnB,mBAAmB,wBAAC,UAAkD,SAAe,gBAAsC;AAC1H,eAAO,kBAAkB,uBAAuB,yBAAyB,SAAS,CAAC,EAAE,UAAU,SAAS,WAAW;AAAA,MACpH,GAFmB;AAAA,MAGnB,YAAY,wBAAC,YAAkC;AAC9C,gCAAwB,WAAW,SAAS;AAC5C,eAAO,qBAAqB,WAAW,WAAW,OAAO,EAAE,KAAK,WAAS;AACxE,cAAI,CAAC,OAAO;AACX,kBAAM,IAAI,MAAM,oBAAoB;AAAA,UACrC;AACA,iBAAO;AAAA,QACR,CAAC;AAAA,MACF,GARY;AAAA,MASZ,IAAI,UAAU;AACb,gCAAwB,WAAW,SAAS;AAC5C,eAAO,qBAAqB,WAAW;AAAA,MACxC;AAAA,MACA,oBAAoB,wBAAC,UAAU,SAAU,gBAAiB;AACzD,gCAAwB,WAAW,SAAS;AAC5C,eAAO,kBAAkB,qBAAqB,kBAAkB,EAAE,UAAU,SAAS,WAAW;AAAA,MACjG,GAHoB;AAAA,MAIpB,gCAAgC,wBAAC,cAA6C,aAA4C;AACzH,gCAAwB,WAAW,iBAAiB;AACpD,eAAO,qBAAqB,gCAAgC,cAAc,QAAQ;AAAA,MACnF,GAHgC;AAAA,MAIhC,wBAAwB,wBAAC,gBAAuC,gBAA0C;AACzG,gCAAwB,WAAW,eAAe;AAClD,eAAO,qBAAqB,uBAAuB,gBAAgB,WAAW;AAAA,MAC/E,GAHwB;AAAA,MAIxB,0BAA0B,wBAAC,QAA2B,aAAsC;AAC3F,gCAAwB,WAAW,UAAU;AAC7C,eAAO,gBAAgB,yBAAyB,QAAQ,UAAU,UAAU,YAAY,gBAAgB,SAAS;AAAA,MAClH,GAH0B;AAAA,MAI1B,IAAI,YAAY;AACf,eAAO,iBAAiB;AAAA,MACzB;AAAA,MACA,uBAAuB,wBAAC,YAAkD;AACzE,gCAAwB,WAAW,gBAAgB;AACnD,eAAO,iBAAiB,sBAAsB,OAAO;AAAA,MACtD,GAHuB;AAAA,MAIvB,0BAA0B,wBAAC,UAAU,UAAW,gBAAiB;AAChE,eAAO,kBAAkB,iBAAiB,wBAAwB,EAAE,UAAU,UAAU,WAAW;AAAA,MACpG,GAF0B;AAAA,MAG1B,qCAAqC,wBAAC,QAAgB,aAAiD;AACtG,gCAAwB,WAAW,6BAA6B;AAChE,eAAO,iBAAiB,oCAAoC,QAAQ,QAAQ;AAAA,MAC7E,GAHqC;AAAA,MAIrC,iCAAiC,wBAAC,UAAU,UAAW,gBAAiB;AACvE,gCAAwB,WAAW,6BAA6B;AAChE,eAAO,kBAAkB,iBAAiB,wCAAwC,SAAS,CAAC,EAAE,UAAU,UAAU,WAAW;AAAA,MAC9H,GAHiC;AAAA,MAIjC,8BAA8B,wBAAC,QAAgB,aAA0C;AACxF,gCAAwB,WAAW,sBAAsB;AACzD,eAAO,iBAAiB,6BAA6B,QAAQ,QAAQ;AAAA,MACtE,GAH8B;AAAA,MAI9B,iBAAiB,wBAAC,KAAiB,SAA4C,UAAoC;AAClH,gCAAwB,WAAW,sBAAsB;AACzD,eAAO,iBAAiB,oBAAoB,KAAK,SAAS,KAAK;AAAA,MAChE,GAHiB;AAAA,IAIlB;AAGA,UAAM,MAAyB;AAAA,MAC9B,IAAI,WAAW;AACd,8BAAsB;AAAA,UAAO;AAAA,UAAgB;AAAA,UAC5C;AAAA,QAAsC;AAEvC,eAAO,WAAW,gBAAgB,SAAS;AAAA,MAC5C;AAAA,MACA,oBAAoB,IAAY,OAAe,SAAsB;AACpE,eAAO,WAAW,oBAAoB,WAAW,IAAI,OAAO,OAAO;AAAA,MACpE;AAAA,IACD;AAGA,UAAM,WAAmC;AAAA,MACxC,wBAAwB,IAAY,OAAe;AAClD,eAAO,eAAe,wBAAwB,WAAW,IAAI,KAAK;AAAA,MACnE;AAAA,IACD;AAGA,UAAM,QAA6B;AAAA,MAClC,IAAI,qBAAqB;AACxB,eAAO,oBAAoB;AAAA,MAC5B;AAAA,MACA,IAAI,qBAAqB;AACxB,eAAO,oBAAoB;AAAA,MAC5B;AAAA,MACA,IAAI,cAAc;AACjB,eAAO,oBAAoB;AAAA,MAC5B;AAAA,MACA,IAAI,kBAAkB;AACrB,eAAO,oBAAoB;AAAA,MAC5B;AAAA,MACA,mCAAmC,IAAI,UAAU;AAChD,gCAAwB,WAAW,oBAAoB;AACvD,eAAO,oBAAoB,mCAAmC,WAAW,IAAI,QAAQ;AAAA,MACtF;AAAA,MACA,uCAAuC,IAAI,UAAU;AACpD,gCAAwB,WAAW,oBAAoB;AACvD,eAAO,oBAAoB,+BAA+B,WAAW,IAAI,QAAQ;AAAA,MAClF;AAAA,MACA,uBAAuB,UAAU,SAAU,aAAc;AACxD,eAAO,kBAAkB,oBAAoB,sBAAsB,EAAE,UAAU,SAAS,WAAW;AAAA,MACpG;AAAA,MACA,2BAA2B,UAAU,SAAU,aAAc;AAC5D,eAAO,kBAAkB,oBAAoB,0BAA0B,EAAE,UAAU,SAAS,WAAW;AAAA,MACxG;AAAA,MACA,8BAA8B,UAAU,SAAU,aAAc;AAC/D,eAAO,kBAAkB,oBAAoB,6BAA6B,EAAE,UAAU,SAAS,WAAW;AAAA,MAC3G;AAAA,MACA,oCAAoC,UAAU,SAAU,aAAc;AACrE,eAAO,kBAAkB,oBAAoB,mCAAmC,EAAE,UAAU,SAAS,WAAW;AAAA,MACjH;AAAA,MACA,uBAAuB,UAAU,UAAW,aAAc;AACzD,eAAO,kBAAkB,oBAAoB,sBAAsB,EAAE,UAAU,UAAU,WAAW;AAAA,MACrG;AAAA,MACA,2BAA2B,UAAU,SAAU,aAAc;AAC5D,eAAO,kBAAkB,oBAAoB,0BAA0B,EAAE,UAAU,SAAS,WAAW;AAAA,MACxG;AAAA,MACA,mCAAmC,WAAmB,UAA6C,aAA4D;AAC9J,eAAO,oBAAoB,mCAAmC,WAAW,UAAU,eAAe,sCAAsC,OAAO;AAAA,MAChJ;AAAA,MACA,sCAAsC,WAAmB,SAA+C;AACvG,eAAO,oBAAoB,sCAAsC,WAAW,WAAW,OAAO;AAAA,MAC/F;AAAA,MACA,mCAAmC,WAAmB,SAA4C;AACjG,eAAO,oBAAoB,mCAAmC,WAAW,OAAO;AAAA,MACjF;AAAA,MACA,eAAe,QAA4C,cAAkD,wBAA2E;AACvL,YAAI,CAAC,0BAA2B,OAAO,2BAA2B,YAAY,mBAAmB,wBAAyB;AACzH,iBAAO,oBAAoB,eAAe,QAAQ,cAAc,EAAE,eAAe,uBAAuB,CAAC;AAAA,QAC1G;AACA,eAAO,oBAAoB,eAAe,QAAQ,cAAc,0BAA0B,CAAC,CAAC;AAAA,MAC7F;AAAA,MACA,cAAc,SAA+B;AAC5C,eAAO,oBAAoB,cAAc,OAAO;AAAA,MACjD;AAAA,MACA,eAAe,aAA2C;AACzD,eAAO,oBAAoB,eAAe,WAAW;AAAA,MACtD;AAAA,MACA,kBAAkB,aAA2C;AAC5D,eAAO,oBAAoB,kBAAkB,WAAW;AAAA,MACzD;AAAA,MACA,iBAAiB,QAAoC,SAA2C;AAC/F,eAAO,oBAAoB,iBAAiB,QAAQ,OAAO;AAAA,MAC5D;AAAA,IACD;AAEA,UAAM,QAA6B;AAAA,MAClC,sBAAsB,wBAAC,MAAc,aAAkC;AACtE,eAAO,YAAY,qBAAqB,WAAW,MAAM,QAAQ;AAAA,MAClE,GAFsB;AAAA,MAGtB,YAAY,wBAAC,WAAwD;AACpE,eAAO,YAAY,WAAW,MAAM;AAAA,MACrC,GAFY;AAAA,MAGZ,aAAa,wBAAC,SAAsD;AACnE,eAAO,YAAY,YAAY,WAAW,IAAI;AAAA,MAC/C,GAFa;AAAA,MAGb,IAAI,iBAAyC;AAC5C,eAAO,YAAY;AAAA,MACpB;AAAA,MACA,gBAAgB,wBAAC,WAAW,UAAW,gBAAiB;AACvD,eAAO,kBAAkB,YAAY,cAAc,EAAE,WAAW,UAAU,WAAW;AAAA,MACtF,GAFgB;AAAA,MAGhB,cAAc,wBAAC,WAAW,UAAW,gBAAiB;AACrD,eAAO,kBAAkB,YAAY,YAAY,EAAE,WAAW,UAAU,WAAW;AAAA,MACpF,GAFc;AAAA,MAGd,uBAAuB,wBAAC,WAAW,UAAW,gBAAiB;AAC9D,eAAO,kBAAkB,YAAY,qBAAqB,EAAE,WAAW,UAAU,WAAW;AAAA,MAC7F,GAFuB;AAAA,MAGvB,qBAAqB,wBAAC,WAAW,UAAW,gBAAiB;AAC5D,eAAO,kBAAkB,YAAY,mBAAmB,EAAE,WAAW,UAAU,WAAW;AAAA,MAC3F,GAFqB;AAAA,IAGtB;AAGA,UAAM,YAAqC;AAAA,MAC1C,yBAAyB,IAAY,cAAsB,OAAe,SAAU,iBAAmD;AACtI,eAAO,uBAAuB,yBAAyB,WAAW,IAAI,cAAc,OAAO,SAAS,qBAAqB,WAAW,mBAAmB,IAAI,kBAAkB,MAAS;AAAA,MACvL;AAAA,MACA,2CAA2C,wBAAC,cAAsB,aAAuD;AACxH,eAAO,gBAAgB,0CAA0C,WAAW,cAAc,QAAQ;AAAA,MACnG,GAF2C;AAAA,MAG3C,wBAAwB,YAAY;AACnC,eAAO,yBAAyB,wBAAwB,WAAW,UAAU;AAAA,MAC9E;AAAA,MACA,sCAAsC,cAAsB;AAC3D,gCAAwB,WAAW,sBAAsB;AACzD,eAAO,uBAAuB,sCAAsC,WAAW,YAAY;AAAA,MAC5F;AAAA,MACA,mCAAmC,cAAsB,UAAqD;AAC7G,gCAAwB,WAAW,sBAAsB;AACzD,eAAO,uBAAuB,mCAAmC,WAAW,cAAc,QAAQ;AAAA,MACnG;AAAA,MACA,sCAAsC,UAAU,UAAW,aAAc;AACxE,gCAAwB,WAAW,4BAA4B;AAC/D,eAAO,kBAAkB,uBAAuB,qCAAqC,EAAE,UAAU,UAAU,WAAW;AAAA,MACvH;AAAA,IACD;AAGA,UAAM,OAA2B;AAAA,MAChC,KAAK,QAAgP;AACpP,YAAI,OAAO,OAAO,CAAC,MAAM,UAAU;AAClC,gBAAM,MAAM,OAAO,MAAM;AAIzB,gBAAM,gBAAgB,CAAC,UAAU,OAAO,OAAO,CAAC,MAAM,WAAW,SAAS,OAAO,CAAC;AAClF,iBAAO,oBAAoB,WAAW,UAAU,WAAW,OAAO,EAAE,SAAS,KAAK,MAAM,cAA0D,CAAC;AAAA,QACpJ;AAEA,eAAO,oBAAoB,WAAW,UAAU,WAAW,OAAO,OAAO,CAAC,CAAC;AAAA,MAC5E;AAAA,MACA,IAAI,SAAS;AACZ,eAAO,oBAAoB,UAAU,UAAU,WAAW,KAAK;AAAA,MAChE;AAAA,MACA,IAAI,MAAM;AACT,eAAO,oBAAoB,aAAa,UAAU,WAAW,KAAK;AAAA,MACnE;AAAA,IACD;AAGA,UAAM,cAAyC;AAAA,MAC9C,mBAAmB,aAAyB;AAC3C,gCAAwB,WAAW,aAAa;AAChD,eAAO,mBAAmB,mBAAmB,WAAW;AAAA,MACzD;AAAA,IACD;AAGA,UAAM,KAAuB;AAAA,MAC5B,sBAAsB,OAAe,OAAqF;AACzH,gCAAwB,WAAW,sBAAsB;AACzD,eAAO,4BAA4B,sBAAsB,WAAW,OAAO,KAAK;AAAA,MACjF;AAAA,MACA,mCAAmC,MAAqC,UAA6C;AACpH,gCAAwB,WAAW,sBAAsB;AACzD,eAAO,4BAA4B,mCAAmC,WAAW,MAAM,QAAQ;AAAA,MAChG;AAAA,MACA,gCAAgC,OAAe,UAA0C;AACxF,gCAAwB,WAAW,sBAAsB;AACzD,eAAO,yBAAyB,gCAAgC,WAAW,OAAO,QAAQ;AAAA,MAC3F;AAAA,IACD;AAGA,UAAM,OAA2B;AAAA,MAChC,6BAA6B,IAAY,UAAuC,UAA+C;AAC9H,gCAAwB,WAAW,cAAc;AACjD,eAAO,sBAAsB,sBAAsB,WAAW,IAAI,UAAU,QAAQ;AAAA,MACrF;AAAA,MACA,6BAA6B,IAAY,MAAc,iBAAyB,kBAAsC,QAA6B,UAAuC,UAAmB,MAAyB;AACrO,gCAAwB,WAAW,sBAAsB;AACzD,eAAO,qBAAqB,yBAAyB,WAAW,IAAI,MAAM,iBAAiB,kBAAkB,QAAQ,UAAU,UAAU,MAAM,EAAE;AAAA,MAClJ;AAAA,MACA,4BAA4B,UAAmC,UAAsC;AACpG,gCAAwB,WAAW,qBAAqB;AACxD,eAAO,wBAAwB,4BAA4B,WAAW,UAAU,QAAQ;AAAA,MACzF;AAAA,MACA,sBAAsB,IAAY,SAA4C;AAC7E,eAAO,mBAAmB,gBAAgB,WAAW,IAAI,OAAO;AAAA,MACjE;AAAA,MACA,6BAA6B,IAAY,cAAkD,SAAoE;AAC9J,gCAAwB,WAAW,wBAAwB;AAC3D,eAAO,mBAAmB,uBAAuB,WAAW,IAAI,cAAc,OAAO;AAAA,MACtF;AAAA,MACA,yCAAyC,UAAmD;AAC3F,gCAAwB,WAAW,0BAA0B;AAC7D,eAAO,mBAAmB,yCAAyC,QAAQ;AAAA,MAC5E;AAAA,IACD;AAGA,UAAM,KAAuB;AAAA,MAC5B,kBAAkB,wBAAC,aAAa;AAC/B,eAAO,sBAAsB,qBAAqB,WAAW,YAAY,CAAC,CAAC;AAAA,MAC5E,GAFkB;AAAA,MAGlB,uBAAuB,wBAAC,UAAU,UAAW,gBAAiB;AAC7D,eAAO,sBAAsB,qBAAqB,UAAU,UAAU,WAAW;AAAA,MAClF,GAFuB;AAAA,MAGvB,2BAA2B,wBAAC,IAAI,UAAU,aAAa;AACtD,gCAAwB,WAAW,cAAc;AACjD,eAAO,sBAAsB,sBAAsB,WAAW,IAAI,UAAU,QAAQ;AAAA,MACrF,GAH2B;AAAA;AAAA,MAK3B,IAAI,kBAAkB;AACrB,gCAAwB,WAAW,YAAY;AAC/C,eAAO,kBAAkB;AAAA,MAC1B;AAAA,MACA,4BAA4B,wBAAC,UAAU,UAAW,gBAAiB;AAClE,gCAAwB,WAAW,YAAY;AAC/C,eAAO,kBAAkB,YAAY,UAAU,UAAU,WAAW;AAAA,MACrE,GAH4B;AAAA,MAI5B,2BAA2B,iBAAiB,UAAU;AACrD,gCAAwB,WAAW,YAAY;AAC/C,eAAO,kBAAkB,2BAA2B,WAAW,iBAAiB,QAAQ;AAAA,MACzF;AAAA,MACA,MAAM,kBAAkB,iBAAiB,OAAO,OAAsB;AACrE,gCAAwB,WAAW,YAAY;AAC/C,YAAI,OAAO,UAAU,UAAU;AAC9B,iBAAO,kBAAkB,kBAAkB,iBAAiB,OAAO,KAAK;AAAA,QACzE,OAAO;AACN,iBAAO,kBAAkB,kBAAkB,iBAAiB,OAAO,KAAK;AAAA,QACzE;AAAA,MACD;AAAA,MACA,aAAa,QAAgB,MAAgC;AAC5D,gCAAwB,WAAW,SAAS;AAC5C,eAAO,0BAA0B,aAAa,WAAW,QAAQ,IAAI;AAAA,MACtE;AAAA,MACA,WAAW,QAAgB,YAAuD,OAAiC;AAClH,gCAAwB,WAAW,SAAS;AAC5C,eAAO,0BAA0B,WAAW,QAAQ,YAAY,KAAK;AAAA,MACtE;AAAA,MACA,IAAI,QAAQ;AACX,gCAAwB,WAAW,SAAS;AAC5C,eAAO,0BAA0B;AAAA,MAClC;AAAA,IACD;AAGA,UAAM,SAA+B;AAAA,MACpC,uBAAuB,IAAY,UAAiC;AACnE,gCAAwB,WAAW,QAAQ;AAC3C,eAAO,cAAc,iBAAiB,UAAU,YAAY,IAAI,QAAQ;AAAA,MACzE;AAAA,IACD;AAEA,WAAsB;AAAA,MACrB,SAAS,SAAS;AAAA;AAAA,MAElB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA,MAEA,YAAY,aAAa;AAAA,MACzB,sBAAsB,aAAa;AAAA,MACnC,wBAAwB,aAAa;AAAA,MACrC,mBAAmB,aAAa;AAAA,MAChC,oBAAoB,aAAa;AAAA,MACjC,2BAA2B,aAAa;AAAA,MACxC,mBAAmB,aAAa;AAAA,MAChC,2BAA2B,aAAa;AAAA,MACxC,mBAAmB,OAAO;AAAA,MAC1B;AAAA,MACA;AAAA,MACA,YAAY,aAAa;AAAA,MACzB,gBAAgB,aAAa;AAAA,MAC7B,uBAAuB,aAAa;AAAA,MACpC,UAAU,aAAa;AAAA,MACvB,OAAO,aAAa;AAAA,MACpB,kBAAkB,aAAa;AAAA,MAC/B,mBAAmB,aAAa;AAAA,MAChC,gBAAgB,aAAa;AAAA,MAC7B,aAAa,aAAa;AAAA,MAC1B,cAAc,aAAa;AAAA,MAC3B,+BAA+B,aAAa;AAAA,MAC5C,oBAAoB,aAAa;AAAA,MACjC,4BAA4B,aAAa;AAAA,MACzC,oBAAoB,aAAa;AAAA,MACjC,gBAAgB,aAAa;AAAA,MAC7B,oBAAoB,aAAa;AAAA,MACjC,mBAAmB,aAAa;AAAA,MAChC,gBAAgB,aAAa;AAAA,MAC7B,uBAAuB,aAAa;AAAA,MACpC,qBAAqB,aAAa;AAAA,MAClC,iBAAiB,aAAa;AAAA,MAC9B,wBAAwB,aAAa;AAAA,MACrC,kCAAkC,aAAa;AAAA,MAC/C,6BAA6B,aAAa;AAAA,MAC1C,oBAAoB,aAAa;AAAA,MACjC;AAAA,MACA,kBAAkB,aAAa;AAAA,MAC/B,oBAAoB,aAAa;AAAA,MACjC,yBAAyB,aAAa;AAAA,MACtC,YAAY,aAAa;AAAA,MACzB,8BAA8B,aAAa;AAAA,MAC3C,oBAAoB,aAAa;AAAA,MACjC,eAAe,aAAa;AAAA,MAC5B,YAAY,aAAa;AAAA,MACzB,mBAAmB,aAAa;AAAA,MAChC,uBAAuB,aAAa;AAAA,MACpC,wBAAwB,aAAa;AAAA,MACrC,cAAc,aAAa;AAAA,MAC3B,gBAAgB,aAAa;AAAA,MAC7B,WAAW,aAAa;AAAA,MACxB,gCAAgC,aAAa;AAAA,MAC7C,uBAAuB,aAAa;AAAA,MACpC,iBAAiB,aAAa;AAAA,MAC9B,2BAA2B,aAAa;AAAA,MACxC,kCAAkC,aAAa;AAAA,MAC/C,6BAA6B,aAAa;AAAA,MAC1C,cAAc;AAAA,MACd,eAAe,aAAa;AAAA,MAC5B,eAAe,aAAa;AAAA,MAC5B,2BAA2B,aAAa;AAAA,MACxC,gBAAgB,aAAa;AAAA,MAC7B,gBAAgB,aAAa;AAAA,MAC7B,iBAAiB,aAAa;AAAA,MAC9B,iBAAiB,aAAa;AAAA,MAC9B,UAAU,MAAM;AAAA,MAChB,gBAAgB,MAAM;AAAA,MACtB,cAAc,aAAa;AAAA,MAC3B,kBAAkB,aAAa;AAAA,MAC/B,oBAAoB,aAAa;AAAA,MACjC,sBAAsB,aAAa;AAAA,MACnC,sBAAsB,aAAa;AAAA,MACnC,OAAO,aAAa;AAAA,MACpB,cAAc,aAAa;AAAA,MAC3B,sBAAsB,aAAa;AAAA,MACnC,cAAc,sBAAsB;AAAA,MACpC,UAAU,aAAa;AAAA,MACvB,gBAAgB,aAAa;AAAA,MAC7B;AAAA,MACA,sBAAsB,aAAa;AAAA,MACnC,uBAAuB,aAAa;AAAA,MACpC,UAAU,aAAa;AAAA,MACvB,kBAAkB,aAAa;AAAA,MAC/B,kBAAkB,aAAa;AAAA,MAC/B,0BAA0B,aAAa;AAAA,MACvC,mBAAmB,aAAa;AAAA,MAChC,OAAO,aAAa;AAAA,MACpB,iBAAiB,aAAa;AAAA,MAC9B,WAAW,aAAa;AAAA,MACxB,gBAAgB,aAAa;AAAA,MAC7B,gBAAgB,aAAa;AAAA,MAC7B,uBAAuB,aAAa;AAAA,MACpC,oBAAoB,aAAa;AAAA,MACjC,qBAAqB,aAAa;AAAA,MAClC,sBAAsB,aAAa;AAAA,MACnC,gBAAgB,aAAa;AAAA,MAC7B,cAAc,aAAa;AAAA,MAC3B,eAAe,aAAa;AAAA,MAC5B,0BAA0B,aAAa;AAAA,MACvC,sBAAsB,aAAa;AAAA,MACnC,eAAe,aAAa;AAAA,MAC5B,kBAAkB,aAAa;AAAA,MAC/B,mBAAmB,aAAa;AAAA,MAChC,oBAAoB,aAAa;AAAA,MACjC,mBAAmB,aAAa;AAAA,MAChC,YAAY,aAAa;AAAA,MACzB,WAAW,aAAa;AAAA,MACxB,MAAM,aAAa;AAAA,MACnB,WAAW,aAAa;AAAA,MACxB,eAAe,aAAa;AAAA,MAC5B,gBAAgB,aAAa;AAAA,MAC7B,WAAW,aAAa;AAAA,MACxB,cAAc,aAAa;AAAA,MAC3B,iCAAiC,aAAa;AAAA,MAC9C,wBAAwB,aAAa;AAAA,MACrC,kBAAkB,aAAa;AAAA,MAC/B,iBAAiB,aAAa;AAAA,MAC9B,oBAAoB,aAAa;AAAA,MACjC,6CAA6C,aAAa;AAAA,MAC1D,wBAAwB,aAAa;AAAA,MACrC,UAAU,aAAa;AAAA,MACvB,iBAAiB,aAAa;AAAA,MAC9B;AAAA,MACA,4BAA4B,aAAa;AAAA,MACzC,sBAAsB,aAAa;AAAA,MACnC,+BAA+B,aAAa;AAAA,MAC5C,iBAAiB,aAAa;AAAA,MAC9B,0BAA0B,aAAa;AAAA,MACvC,YAAY,aAAa;AAAA,MACzB,WAAW,aAAa;AAAA,MACxB,UAAU,aAAa;AAAA,MACvB,uBAAuB,aAAa;AAAA,MACpC,0BAA0B,aAAa;AAAA,MACvC,mBAAmB,aAAa;AAAA,MAChC;AAAA,MACA,KAAK;AAAA,MACL,YAAY,aAAa;AAAA,MACzB,eAAe,aAAa;AAAA;AAAA,MAE5B,0BAA0B,aAAa;AAAA,MACvC,kBAAkB,aAAa;AAAA,MAC/B,6BAA6B,aAAa;AAAA,MAC1C,mBAAmB,aAAa;AAAA,MAChC,WAAW,aAAa;AAAA,MACxB,oBAAoB,aAAa;AAAA,MACjC,eAAe,aAAa;AAAA,MAC5B,8BAA8B,aAAa;AAAA,MAC3C,mBAAmB,aAAa;AAAA,MAChC,0BAA0B,aAAa;AAAA,MACvC,qCAAqC,aAAa;AAAA,MAClD,kBAAkB,aAAa;AAAA,MAC/B,cAAc,aAAa;AAAA,MAC3B,eAAe,aAAa;AAAA,MAC5B,kBAAkB,aAAa;AAAA,MAC/B,4BAA4B,aAAa;AAAA,MACzC,kBAAkB,aAAa;AAAA,MAC/B,cAAc,aAAa;AAAA,MAC3B,wBAAwB,aAAa;AAAA,MACrC,gCAAgC,aAAa;AAAA,MAC7C,0BAA0B,aAAa;AAAA,MACvC,oBAAoB,aAAa;AAAA,MACjC,wBAAwB,aAAa;AAAA,MACrC,2BAA2B,aAAa;AAAA,MACxC,4BAA4B,aAAa;AAAA,MACzC,6BAA6B,aAAa;AAAA,MAC1C,cAAc,aAAa;AAAA,MAC3B,4BAA4B,aAAa;AAAA,MACzC,8BAA8B,aAAa;AAAA,MAC3C,gBAAgB,aAAa;AAAA,MAC7B,qBAAqB,aAAa;AAAA,MAClC,iBAAiB,aAAa;AAAA,MAC9B,gBAAgB,aAAa;AAAA,MAC7B,aAAa,aAAa;AAAA,MAC1B,uBAAuB,aAAa;AAAA,MACpC,SAAS,aAAa;AAAA,MACtB,oBAAoB,aAAa;AAAA,MACjC;AAAA,MACA,cAAc,aAAa;AAAA,MAC3B,kBAAkB,aAAa;AAAA,MAC/B,mBAAmB,aAAa;AAAA,MAChC,cAAc,aAAa;AAAA,MAC3B,eAAe,aAAa;AAAA,MAC5B,mBAAmB,aAAa;AAAA,MAChC,gBAAgB,aAAa;AAAA,MAC7B,qBAAqB,aAAa;AAAA,MAClC,qBAAqB,aAAa;AAAA,MAClC,wBAAwB,aAAa;AAAA,MACrC,mBAAmB,aAAa;AAAA,MAChC,4BAA4B,aAAa;AAAA,MACzC,cAAc,aAAa;AAAA,MAC3B,kBAAkB,aAAa;AAAA,MAC/B,mBAAmB,aAAa;AAAA,MAChC,gBAAgB,aAAa;AAAA,MAC7B,kBAAkB,aAAa;AAAA,MAC/B,sBAAsB,aAAa;AAAA,MACnC,iBAAiB,aAAa;AAAA,MAC9B,kBAAkB,aAAa;AAAA,MAC/B,2BAA2B,aAAa;AAAA,MACxC,cAAc,aAAa;AAAA,MAC3B,uBAAuB,aAAa;AAAA,MACpC;AAAA,MACA;AAAA,MACA;AAAA,MACA,iCAAiC,aAAa;AAAA,MAC9C,cAAc,aAAa;AAAA,MAC3B,uCAAuC,aAAa;AAAA,MACpD,iBAAiB,aAAa;AAAA,MAC9B,aAAa,aAAa;AAAA,MAC1B,wBAAwB,aAAa;AAAA,MACrC,oBAAoB,aAAa;AAAA,MACjC,oBAAoB,aAAa;AAAA,MACjC,0BAA0B,aAAa;AAAA,MACvC,0BAA0B,aAAa;AAAA,MACvC,0BAA0B,aAAa;AAAA,MACvC,0BAA0B,aAAa;AAAA,MACvC,wBAAwB,aAAa;AAAA,MACrC,0BAA0B,aAAa;AAAA,MACvC,2BAA2B,aAAa;AAAA,MACxC,2BAA2B,aAAa;AAAA,MACxC,4BAA4B,aAAa;AAAA,MACzC,8BAA8B,aAAa;AAAA,MAC3C,yBAAyB,aAAa;AAAA,MACtC,0BAA0B,aAAa;AAAA,MACvC,6CAA6C,aAAa;AAAA,MAC1D,+BAA+B,aAAa;AAAA,MAC5C,qCAAqC,aAAa;AAAA,MAClD,8BAA8B,aAAa;AAAA,MAC3C,sBAAsB,aAAa;AAAA,MACnC,qCAAqC,aAAa;AAAA,MAClD,iBAAiB,aAAa;AAAA,MAC9B,kBAAkB,aAAa;AAAA,MAC/B,cAAc,aAAa;AAAA,MAC3B,uBAAuB,aAAa;AAAA,MACpC,yBAAyB,aAAa;AAAA,MACtC,8BAA8B,aAAa;AAAA,MAC3C,0BAA0B,aAAa;AAAA,MACvC,wCAAwC,aAAa;AAAA,MACrD,mCAAmC,aAAa;AAAA,MAChD,uCAAuC,aAAa;AAAA,MACpD,oBAAoB,aAAa;AAAA,MACjC,eAAe,aAAa;AAAA,MAC5B,kBAAkB,aAAa;AAAA,MAC/B,0BAA0B,aAAa;AAAA,MACvC,YAAY,aAAa;AAAA,MACzB,uBAAuB,aAAa;AAAA,MACpC;AAAA,MACA;AAAA,MACA;AAAA,MACA,kCAAkC;AAAA,IACnC;AAAA,EACD;AACD;AA5nDgB;",
  "names": []
}
