var I=Object.defineProperty;var x=Object.getOwnPropertyDescriptor;var D=(h,e,i,o)=>{for(var r=o>1?void 0:o?x(e,i):e,c=h.length-1,s;c>=0;c--)(s=h[c])&&(r=(o?s(e,i,r):s(r))||r);return o&&r&&I(e,i,r),r},u=(h,e)=>(i,o)=>e(i,o,h);import{localize as A}from"../../../nls.js";import{MarkerSeverity as C}from"../../../platform/markers/common/markers.js";import{URI as _}from"../../../base/common/uri.js";import{MainContext as S}from"./extHost.protocol.js";import{DiagnosticSeverity as m}from"./extHostTypes.js";import*as f from"./extHostTypeConverters.js";import{Event as R,DebounceEmitter as M}from"../../../base/common/event.js";import{ILogService as k}from"../../../platform/log/common/log.js";import{ResourceMap as U}from"../../../base/common/map.js";import"../../../platform/extensions/common/extensions.js";import{IExtHostFileSystemInfo as E}from"./extHostFileSystemInfo.js";import"../../../base/common/resources.js";import"./extHostDocumentsAndEditors.js";class v{constructor(e,i,o,r,c,s,t,n){this._name=e;this._owner=i;this._maxDiagnosticsTotal=o;this._maxDiagnosticsPerFile=r;this._modelVersionIdProvider=c;this._maxDiagnosticsTotal=Math.max(r,o),this.#e=new U(d=>s.getComparisonKey(d)),this.#i=t,this.#o=n}#i;#o;#e;_isDisposed=!1;dispose(){this._isDisposed||(this.#o.fire([...this.#e.keys()]),this.#i?.$clear(this._owner),this.#e.clear(),this._isDisposed=!0)}get name(){return this._checkDisposed(),this._name}set(e,i){if(!e){this.clear();return}this._checkDisposed();let o=[];if(_.isUri(e)){if(!i){this.delete(e);return}this.#e.set(e,i.slice()),o=[e]}else if(Array.isArray(e)){o=[];let s;e=[...e].sort(v._compareIndexedTuplesByUri);for(const t of e){const[n,d]=t;if((!s||n.toString()!==s.toString())&&(s&&this.#e.get(s).length===0&&this.#e.delete(s),s=n,o.push(n),this.#e.set(n,[])),d)this.#e.get(n)?.push(...d);else{const a=this.#e.get(n);a&&(a.length=0)}}}if(this.#o.fire(o),!this.#i)return;const r=[];let c=0;for(const s of o){let t=[];const n=this.#e.get(s);if(n)if(n.length>this._maxDiagnosticsPerFile){t=[];const d=[m.Error,m.Warning,m.Information,m.Hint];e:for(let a=0;a<4;a++)for(const y of n)if(y.severity===d[a]&&t.push({...f.Diagnostic.from(y),modelVersionId:this._modelVersionIdProvider(s)})===this._maxDiagnosticsPerFile)break e;t.push({severity:C.Info,message:A({key:"limitHit",comment:["amount of errors/warning skipped due to limits"]},"Not showing {0} further errors and warnings.",n.length-this._maxDiagnosticsPerFile),startLineNumber:t[t.length-1].startLineNumber,startColumn:t[t.length-1].startColumn,endLineNumber:t[t.length-1].endLineNumber,endColumn:t[t.length-1].endColumn})}else t=n.map(d=>({...f.Diagnostic.from(d),modelVersionId:this._modelVersionIdProvider(s)}));if(r.push([s,t]),c+=t.length,c>this._maxDiagnosticsTotal)break}this.#i.$changeMany(this._owner,r)}delete(e){this._checkDisposed(),this.#o.fire([e]),this.#e.delete(e),this.#i?.$changeMany(this._owner,[[e,void 0]])}clear(){this._checkDisposed(),this.#o.fire([...this.#e.keys()]),this.#e.clear(),this.#i?.$clear(this._owner)}forEach(e,i){this._checkDisposed();for(const[o,r]of this)e.call(i,o,r,this)}*[Symbol.iterator](){this._checkDisposed();for(const e of this.#e.keys())yield[e,this.get(e)]}get(e){this._checkDisposed();const i=this.#e.get(e);return Array.isArray(i)?Object.freeze(i.slice(0)):[]}has(e){return this._checkDisposed(),Array.isArray(this.#e.get(e))}_checkDisposed(){if(this._isDisposed)throw new Error("illegal state - object is disposed")}static _compareIndexedTuplesByUri(e,i){return e[0].toString()<i[0].toString()?-1:e[0].toString()>i[0].toString()?1:0}}let l=class{constructor(e,i,o,r){this._logService=i;this._fileSystemInfoService=o;this._extHostDocumentsAndEditors=r;this._proxy=e.getProxy(S.MainThreadDiagnostics)}static _idPool=0;static _maxDiagnosticsPerFile=1e3;static _maxDiagnosticsTotal=1.1*this._maxDiagnosticsPerFile;_proxy;_collections=new Map;_onDidChangeDiagnostics=new M({merge:e=>e.flat(),delay:50});static _mapper(e){const i=new U;for(const o of e)i.set(o,o);return{uris:Object.freeze(Array.from(i.values()))}}onDidChangeDiagnostics=R.map(this._onDidChangeDiagnostics.event,l._mapper);createDiagnosticCollection(e,i){const{_collections:o,_proxy:r,_onDidChangeDiagnostics:c,_logService:s,_fileSystemInfoService:t,_extHostDocumentsAndEditors:n}=this,d=new class{$changeMany(g,p){r.$changeMany(g,p),s.trace("[DiagnosticCollection] change many (extension, owner, uris)",e.value,g,p.length===0?"CLEARING":p)}$clear(g){r.$clear(g),s.trace("[DiagnosticCollection] remove all (extension, owner)",e.value,g)}dispose(){r.dispose()}};let a;if(!i)i="_generated_diagnostic_collection_name_#"+l._idPool++,a=i;else if(!o.has(i))a=i;else{this._logService.warn(`DiagnosticCollection with name '${i}' does already exist.`);do a=i+l._idPool++;while(o.has(a))}return new class extends v{constructor(){super(i,a,l._maxDiagnosticsTotal,l._maxDiagnosticsPerFile,g=>n.getDocument(g)?.version,t.extUri,d,c),o.set(a,this)}dispose(){super.dispose(),o.delete(a)}}}getDiagnostics(e){if(e)return this._getDiagnostics(e);{const i=new Map,o=[];for(const r of this._collections.values())r.forEach((c,s)=>{let t=i.get(c.toString());typeof t>"u"&&(t=o.length,i.set(c.toString(),t),o.push([c,[]])),o[t][1]=o[t][1].concat(...s)});return o}}_getDiagnostics(e){let i=[];for(const o of this._collections.values())o.has(e)&&(i=i.concat(o.get(e)));return i}_mirrorCollection;$acceptMarkersChange(e){if(!this._mirrorCollection){const i="_generated_mirror",o=new v(i,i,Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER,r=>{},this._fileSystemInfoService.extUri,void 0,this._onDidChangeDiagnostics);this._collections.set(i,o),this._mirrorCollection=o}for(const[i,o]of e)this._mirrorCollection.set(_.revive(i),o.map(f.Diagnostic.to))}};l=D([u(1,k),u(2,E)],l);export{v as DiagnosticCollection,l as ExtHostDiagnostics};
