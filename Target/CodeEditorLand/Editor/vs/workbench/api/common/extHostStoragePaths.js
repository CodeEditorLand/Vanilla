var m=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var d=(i,e,t,o)=>{for(var r=o>1?void 0:o?p(e,t):e,c=i.length-1,l;c>=0;c--)(l=i[c])&&(r=(o?l(e,t,r):l(r))||r);return o&&r&&m(e,t,r),r},a=(i,e)=>(t,o)=>e(t,o,i);import{URI as n}from"../../../base/common/uri.js";import{createDecorator as v}from"../../../platform/instantiation/common/instantiation.js";import{ILogService as u}from"../../../platform/log/common/log.js";import{IExtHostConsumerFileSystem as h}from"./extHostFileSystemConsumer.js";import{IExtHostInitDataService as g}from"./extHostInitDataService.js";const w=v("IExtensionStoragePaths");let s=class{constructor(e,t,o){this._logService=t;this._extHostFileSystem=o;this._workspace=e.workspace??void 0,this._environment=e.environment,this.whenReady=this._getOrCreateWorkspaceStoragePath().then(r=>this._value=r)}_serviceBrand;_workspace;_environment;whenReady;_value;async _getWorkspaceStorageURI(e){return n.joinPath(this._environment.workspaceStorageHome,e)}async _getOrCreateWorkspaceStoragePath(){if(!this._workspace)return Promise.resolve(void 0);const e=this._workspace.id,t=await this._getWorkspaceStorageURI(e);try{return await this._extHostFileSystem.value.stat(t),this._logService.trace("[ExtHostStorage] storage dir already exists",t),t}catch{}try{return this._logService.trace("[ExtHostStorage] creating dir and metadata-file",t),await this._extHostFileSystem.value.createDirectory(t),await this._extHostFileSystem.value.writeFile(n.joinPath(t,"meta.json"),new TextEncoder().encode(JSON.stringify({id:this._workspace.id,configuration:n.revive(this._workspace.configuration)?.toString(),name:this._workspace.name},void 0,2))),t}catch(o){this._logService.error("[ExtHostStorage]",o);return}}workspaceValue(e){if(this._value)return n.joinPath(this._value,e.identifier.value)}globalValue(e){return n.joinPath(this._environment.globalStorageHome,e.identifier.value.toLowerCase())}onWillDeactivateAll(){}};s=d([a(0,g),a(1,u),a(2,h)],s);export{s as ExtensionStoragePaths,w as IExtensionStoragePaths};
