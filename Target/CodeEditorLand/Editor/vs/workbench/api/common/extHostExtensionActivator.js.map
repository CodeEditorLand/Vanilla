{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostExtensionActivator.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type * as vscode from \"vscode\";\nimport { Barrier } from \"../../../base/common/async.js\";\nimport * as errors from \"../../../base/common/errors.js\";\nimport {\n\tDisposable,\n\ttype IDisposable,\n} from \"../../../base/common/lifecycle.js\";\nimport {\n\ttype ExtensionIdentifier,\n\tExtensionIdentifierMap,\n} from \"../../../platform/extensions/common/extensions.js\";\nimport { ILogService } from \"../../../platform/log/common/log.js\";\nimport { ExtensionDescriptionRegistry } from \"../../services/extensions/common/extensionDescriptionRegistry.js\";\nimport {\n\ttype ExtensionActivationReason,\n\tMissingExtensionDependency,\n} from \"../../services/extensions/common/extensions.js\";\n\n/**\n * Represents the source code (module) of an extension.\n */\nexport interface IExtensionModule {\n\tactivate?(ctx: vscode.ExtensionContext): Promise<IExtensionAPI>;\n\tdeactivate?(): void;\n}\n\n/**\n * Represents the API of an extension (return value of `activate`).\n */\nexport type IExtensionAPI = {};\n\nexport type ExtensionActivationTimesFragment = {\n\tstartup?: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"PerformanceAndHealth\";\n\t\tcomment: \"Activation occurred during startup\";\n\t};\n\tcodeLoadingTime?: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"PerformanceAndHealth\";\n\t\tcomment: \"Time it took to load the extension's code\";\n\t};\n\tactivateCallTime?: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"PerformanceAndHealth\";\n\t\tcomment: \"Time it took to call activate\";\n\t};\n\tactivateResolvedTime?: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"PerformanceAndHealth\";\n\t\tcomment: \"Time it took for async-activation to finish\";\n\t};\n};\n\nexport class ExtensionActivationTimes {\n\tpublic static readonly NONE = new ExtensionActivationTimes(\n\t\tfalse,\n\t\t-1,\n\t\t-1,\n\t\t-1,\n\t);\n\n\tpublic readonly startup: boolean;\n\tpublic readonly codeLoadingTime: number;\n\tpublic readonly activateCallTime: number;\n\tpublic readonly activateResolvedTime: number;\n\n\tconstructor(\n\t\tstartup: boolean,\n\t\tcodeLoadingTime: number,\n\t\tactivateCallTime: number,\n\t\tactivateResolvedTime: number,\n\t) {\n\t\tthis.startup = startup;\n\t\tthis.codeLoadingTime = codeLoadingTime;\n\t\tthis.activateCallTime = activateCallTime;\n\t\tthis.activateResolvedTime = activateResolvedTime;\n\t}\n}\n\nexport class ExtensionActivationTimesBuilder {\n\tprivate readonly _startup: boolean;\n\tprivate _codeLoadingStart: number;\n\tprivate _codeLoadingStop: number;\n\tprivate _activateCallStart: number;\n\tprivate _activateCallStop: number;\n\tprivate _activateResolveStart: number;\n\tprivate _activateResolveStop: number;\n\n\tconstructor(startup: boolean) {\n\t\tthis._startup = startup;\n\t\tthis._codeLoadingStart = -1;\n\t\tthis._codeLoadingStop = -1;\n\t\tthis._activateCallStart = -1;\n\t\tthis._activateCallStop = -1;\n\t\tthis._activateResolveStart = -1;\n\t\tthis._activateResolveStop = -1;\n\t}\n\n\tprivate _delta(start: number, stop: number): number {\n\t\tif (start === -1 || stop === -1) {\n\t\t\treturn -1;\n\t\t}\n\t\treturn stop - start;\n\t}\n\n\tpublic build(): ExtensionActivationTimes {\n\t\treturn new ExtensionActivationTimes(\n\t\t\tthis._startup,\n\t\t\tthis._delta(this._codeLoadingStart, this._codeLoadingStop),\n\t\t\tthis._delta(this._activateCallStart, this._activateCallStop),\n\t\t\tthis._delta(this._activateResolveStart, this._activateResolveStop),\n\t\t);\n\t}\n\n\tpublic codeLoadingStart(): void {\n\t\tthis._codeLoadingStart = Date.now();\n\t}\n\n\tpublic codeLoadingStop(): void {\n\t\tthis._codeLoadingStop = Date.now();\n\t}\n\n\tpublic activateCallStart(): void {\n\t\tthis._activateCallStart = Date.now();\n\t}\n\n\tpublic activateCallStop(): void {\n\t\tthis._activateCallStop = Date.now();\n\t}\n\n\tpublic activateResolveStart(): void {\n\t\tthis._activateResolveStart = Date.now();\n\t}\n\n\tpublic activateResolveStop(): void {\n\t\tthis._activateResolveStop = Date.now();\n\t}\n}\n\nexport class ActivatedExtension {\n\tpublic readonly activationFailed: boolean;\n\tpublic readonly activationFailedError: Error | null;\n\tpublic readonly activationTimes: ExtensionActivationTimes;\n\tpublic readonly module: IExtensionModule;\n\tpublic readonly exports: IExtensionAPI | undefined;\n\tpublic readonly disposable: IDisposable;\n\n\tconstructor(\n\t\tactivationFailed: boolean,\n\t\tactivationFailedError: Error | null,\n\t\tactivationTimes: ExtensionActivationTimes,\n\t\tmodule: IExtensionModule,\n\t\texports: IExtensionAPI | undefined,\n\t\tdisposable: IDisposable,\n\t) {\n\t\tthis.activationFailed = activationFailed;\n\t\tthis.activationFailedError = activationFailedError;\n\t\tthis.activationTimes = activationTimes;\n\t\tthis.module = module;\n\t\tthis.exports = exports;\n\t\tthis.disposable = disposable;\n\t}\n}\n\nexport class EmptyExtension extends ActivatedExtension {\n\tconstructor(activationTimes: ExtensionActivationTimes) {\n\t\tsuper(\n\t\t\tfalse,\n\t\t\tnull,\n\t\t\tactivationTimes,\n\t\t\t{ activate: undefined, deactivate: undefined },\n\t\t\tundefined,\n\t\t\tDisposable.None,\n\t\t);\n\t}\n}\n\nexport class HostExtension extends ActivatedExtension {\n\tconstructor() {\n\t\tsuper(\n\t\t\tfalse,\n\t\t\tnull,\n\t\t\tExtensionActivationTimes.NONE,\n\t\t\t{ activate: undefined, deactivate: undefined },\n\t\t\tundefined,\n\t\t\tDisposable.None,\n\t\t);\n\t}\n}\n\nclass FailedExtension extends ActivatedExtension {\n\tconstructor(activationError: Error) {\n\t\tsuper(\n\t\t\ttrue,\n\t\t\tactivationError,\n\t\t\tExtensionActivationTimes.NONE,\n\t\t\t{ activate: undefined, deactivate: undefined },\n\t\t\tundefined,\n\t\t\tDisposable.None,\n\t\t);\n\t}\n}\n\nexport interface IExtensionsActivatorHost {\n\tonExtensionActivationError(\n\t\textensionId: ExtensionIdentifier,\n\t\terror: Error | null,\n\t\tmissingExtensionDependency: MissingExtensionDependency | null,\n\t): void;\n\tactualActivateExtension(\n\t\textensionId: ExtensionIdentifier,\n\t\treason: ExtensionActivationReason,\n\t): Promise<ActivatedExtension>;\n}\n\ntype ActivationIdAndReason = {\n\tid: ExtensionIdentifier;\n\treason: ExtensionActivationReason;\n};\n\nexport class ExtensionsActivator implements IDisposable {\n\tprivate readonly _registry: ExtensionDescriptionRegistry;\n\tprivate readonly _globalRegistry: ExtensionDescriptionRegistry;\n\tprivate readonly _host: IExtensionsActivatorHost;\n\tprivate readonly _operations: ExtensionIdentifierMap<ActivationOperation>;\n\t/**\n\t * A map of already activated events to speed things up if the same activation event is triggered multiple times.\n\t */\n\tprivate readonly _alreadyActivatedEvents: {\n\t\t[activationEvent: string]: boolean;\n\t};\n\n\tconstructor(\n\t\tregistry: ExtensionDescriptionRegistry,\n\t\tglobalRegistry: ExtensionDescriptionRegistry,\n\t\thost: IExtensionsActivatorHost,\n\t\t@ILogService private readonly _logService: ILogService\n\t) {\n\t\tthis._registry = registry;\n\t\tthis._globalRegistry = globalRegistry;\n\t\tthis._host = host;\n\t\tthis._operations = new ExtensionIdentifierMap<ActivationOperation>();\n\t\tthis._alreadyActivatedEvents = Object.create(null);\n\t}\n\n\tpublic dispose(): void {\n\t\tfor (const [_, op] of this._operations) {\n\t\t\top.dispose();\n\t\t}\n\t}\n\n\tpublic async waitForActivatingExtensions(): Promise<void> {\n\t\tconst res: Promise<boolean>[] = [];\n\t\tfor (const [_, op] of this._operations) {\n\t\t\tres.push(op.wait());\n\t\t}\n\t\tawait Promise.all(res);\n\t}\n\n\tpublic isActivated(extensionId: ExtensionIdentifier): boolean {\n\t\tconst op = this._operations.get(extensionId);\n\t\treturn Boolean(op && op.value);\n\t}\n\n\tpublic getActivatedExtension(\n\t\textensionId: ExtensionIdentifier,\n\t): ActivatedExtension {\n\t\tconst op = this._operations.get(extensionId);\n\t\tif (!op || !op.value) {\n\t\t\tthrow new Error(\n\t\t\t\t`Extension '${extensionId.value}' is not known or not activated`,\n\t\t\t);\n\t\t}\n\t\treturn op.value;\n\t}\n\n\tpublic async activateByEvent(\n\t\tactivationEvent: string,\n\t\tstartup: boolean,\n\t): Promise<void> {\n\t\tif (this._alreadyActivatedEvents[activationEvent]) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst activateExtensions =\n\t\t\tthis._registry.getExtensionDescriptionsForActivationEvent(\n\t\t\t\tactivationEvent,\n\t\t\t);\n\t\tawait this._activateExtensions(\n\t\t\tactivateExtensions.map((e) => ({\n\t\t\t\tid: e.identifier,\n\t\t\t\treason: { startup, extensionId: e.identifier, activationEvent },\n\t\t\t})),\n\t\t);\n\n\t\tthis._alreadyActivatedEvents[activationEvent] = true;\n\t}\n\n\tpublic activateById(\n\t\textensionId: ExtensionIdentifier,\n\t\treason: ExtensionActivationReason,\n\t): Promise<void> {\n\t\tconst desc = this._registry.getExtensionDescription(extensionId);\n\t\tif (!desc) {\n\t\t\tthrow new Error(`Extension '${extensionId.value}' is not known`);\n\t\t}\n\t\treturn this._activateExtensions([{ id: desc.identifier, reason }]);\n\t}\n\n\tprivate async _activateExtensions(\n\t\textensions: ActivationIdAndReason[],\n\t): Promise<void> {\n\t\tconst operations = extensions\n\t\t\t.filter((p) => !this.isActivated(p.id))\n\t\t\t.map((ext) => this._handleActivationRequest(ext));\n\t\tawait Promise.all(operations.map((op) => op.wait()));\n\t}\n\n\t/**\n\t * Handle semantics related to dependencies for `currentExtension`.\n\t * We don't need to worry about dependency loops because they are handled by the registry.\n\t */\n\tprivate _handleActivationRequest(\n\t\tcurrentActivation: ActivationIdAndReason,\n\t): ActivationOperation {\n\t\tif (this._operations.has(currentActivation.id)) {\n\t\t\treturn this._operations.get(currentActivation.id)!;\n\t\t}\n\n\t\tif (this._isHostExtension(currentActivation.id)) {\n\t\t\treturn this._createAndSaveOperation(\n\t\t\t\tcurrentActivation,\n\t\t\t\tnull,\n\t\t\t\t[],\n\t\t\t\tnull,\n\t\t\t);\n\t\t}\n\n\t\tconst currentExtension = this._registry.getExtensionDescription(\n\t\t\tcurrentActivation.id,\n\t\t);\n\t\tif (!currentExtension) {\n\t\t\t// Error condition 0: unknown extension\n\t\t\tconst error = new Error(\n\t\t\t\t`Cannot activate unknown extension '${currentActivation.id.value}'`,\n\t\t\t);\n\t\t\tconst result = this._createAndSaveOperation(\n\t\t\t\tcurrentActivation,\n\t\t\t\tnull,\n\t\t\t\t[],\n\t\t\t\tnew FailedExtension(error),\n\t\t\t);\n\t\t\tthis._host.onExtensionActivationError(\n\t\t\t\tcurrentActivation.id,\n\t\t\t\terror,\n\t\t\t\tnew MissingExtensionDependency(currentActivation.id.value),\n\t\t\t);\n\t\t\treturn result;\n\t\t}\n\n\t\tconst deps: ActivationOperation[] = [];\n\t\tconst depIds =\n\t\t\ttypeof currentExtension.extensionDependencies === \"undefined\"\n\t\t\t\t? []\n\t\t\t\t: currentExtension.extensionDependencies;\n\t\tfor (const depId of depIds) {\n\t\t\tif (this._isResolvedExtension(depId)) {\n\t\t\t\t// This dependency is already resolved\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst dep = this._operations.get(depId);\n\t\t\tif (dep) {\n\t\t\t\tdeps.push(dep);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (this._isHostExtension(depId)) {\n\t\t\t\t// must first wait for the dependency to activate\n\t\t\t\tdeps.push(\n\t\t\t\t\tthis._handleActivationRequest({\n\t\t\t\t\t\tid: this._globalRegistry.getExtensionDescription(depId)!\n\t\t\t\t\t\t\t.identifier,\n\t\t\t\t\t\treason: currentActivation.reason,\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst depDesc = this._registry.getExtensionDescription(depId);\n\t\t\tif (depDesc) {\n\t\t\t\tif (!depDesc.main && !depDesc.browser) {\n\t\t\t\t\t// this dependency does not need to activate because it is descriptive only\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// must first wait for the dependency to activate\n\t\t\t\tdeps.push(\n\t\t\t\t\tthis._handleActivationRequest({\n\t\t\t\t\t\tid: depDesc.identifier,\n\t\t\t\t\t\treason: currentActivation.reason,\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Error condition 1: unknown dependency\n\t\t\tconst currentExtensionFriendlyName =\n\t\t\t\tcurrentExtension.displayName ||\n\t\t\t\tcurrentExtension.identifier.value;\n\t\t\tconst error = new Error(\n\t\t\t\t`Cannot activate the '${currentExtensionFriendlyName}' extension because it depends on unknown extension '${depId}'`,\n\t\t\t);\n\t\t\tconst result = this._createAndSaveOperation(\n\t\t\t\tcurrentActivation,\n\t\t\t\tcurrentExtension.displayName,\n\t\t\t\t[],\n\t\t\t\tnew FailedExtension(error),\n\t\t\t);\n\t\t\tthis._host.onExtensionActivationError(\n\t\t\t\tcurrentExtension.identifier,\n\t\t\t\terror,\n\t\t\t\tnew MissingExtensionDependency(depId),\n\t\t\t);\n\t\t\treturn result;\n\t\t}\n\n\t\treturn this._createAndSaveOperation(\n\t\t\tcurrentActivation,\n\t\t\tcurrentExtension.displayName,\n\t\t\tdeps,\n\t\t\tnull,\n\t\t);\n\t}\n\n\tprivate _createAndSaveOperation(\n\t\tactivation: ActivationIdAndReason,\n\t\tdisplayName: string | null | undefined,\n\t\tdeps: ActivationOperation[],\n\t\tvalue: ActivatedExtension | null,\n\t): ActivationOperation {\n\t\tconst operation = new ActivationOperation(\n\t\t\tactivation.id,\n\t\t\tdisplayName,\n\t\t\tactivation.reason,\n\t\t\tdeps,\n\t\t\tvalue,\n\t\t\tthis._host,\n\t\t\tthis._logService,\n\t\t);\n\t\tthis._operations.set(activation.id, operation);\n\t\treturn operation;\n\t}\n\n\tprivate _isHostExtension(\n\t\textensionId: ExtensionIdentifier | string,\n\t): boolean {\n\t\treturn ExtensionDescriptionRegistry.isHostExtension(\n\t\t\textensionId,\n\t\t\tthis._registry,\n\t\t\tthis._globalRegistry,\n\t\t);\n\t}\n\n\tprivate _isResolvedExtension(\n\t\textensionId: ExtensionIdentifier | string,\n\t): boolean {\n\t\tconst extensionDescription =\n\t\t\tthis._globalRegistry.getExtensionDescription(extensionId);\n\t\tif (!extensionDescription) {\n\t\t\t// unknown extension\n\t\t\treturn false;\n\t\t}\n\t\treturn !extensionDescription.main && !extensionDescription.browser;\n\t}\n}\n\nclass ActivationOperation {\n\tprivate readonly _barrier = new Barrier();\n\tprivate _isDisposed = false;\n\n\tpublic get value(): ActivatedExtension | null {\n\t\treturn this._value;\n\t}\n\n\tpublic get friendlyName(): string {\n\t\treturn this._displayName || this._id.value;\n\t}\n\n\tconstructor(\n\t\tprivate readonly _id: ExtensionIdentifier,\n\t\tprivate readonly _displayName: string | null | undefined,\n\t\tprivate readonly _reason: ExtensionActivationReason,\n\t\tprivate readonly _deps: ActivationOperation[],\n\t\tprivate _value: ActivatedExtension | null,\n\t\tprivate readonly _host: IExtensionsActivatorHost,\n\t\t@ILogService private readonly _logService: ILogService\n\t) {\n\t\tthis._initialize();\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._isDisposed = true;\n\t}\n\n\tpublic wait() {\n\t\treturn this._barrier.wait();\n\t}\n\n\tprivate async _initialize(): Promise<void> {\n\t\tawait this._waitForDepsThenActivate();\n\t\tthis._barrier.open();\n\t}\n\n\tprivate async _waitForDepsThenActivate(): Promise<void> {\n\t\tif (this._value) {\n\t\t\t// this operation is already finished\n\t\t\treturn;\n\t\t}\n\n\t\twhile (this._deps.length > 0) {\n\t\t\t// remove completed deps\n\t\t\tfor (let i = 0; i < this._deps.length; i++) {\n\t\t\t\tconst dep = this._deps[i];\n\n\t\t\t\tif (dep.value && !dep.value.activationFailed) {\n\t\t\t\t\t// the dependency is already activated OK\n\t\t\t\t\tthis._deps.splice(i, 1);\n\t\t\t\t\ti--;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (dep.value && dep.value.activationFailed) {\n\t\t\t\t\t// Error condition 2: a dependency has already failed activation\n\t\t\t\t\tconst error = new Error(\n\t\t\t\t\t\t`Cannot activate the '${this.friendlyName}' extension because its dependency '${dep.friendlyName}' failed to activate`,\n\t\t\t\t\t);\n\t\t\t\t\t(<any>error).detail = dep.value.activationFailedError;\n\t\t\t\t\tthis._value = new FailedExtension(error);\n\t\t\t\t\tthis._host.onExtensionActivationError(\n\t\t\t\t\t\tthis._id,\n\t\t\t\t\t\terror,\n\t\t\t\t\t\tnull,\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._deps.length > 0) {\n\t\t\t\t// wait for one dependency\n\t\t\t\tawait Promise.race(this._deps.map((dep) => dep.wait()));\n\t\t\t}\n\t\t}\n\n\t\tawait this._activate();\n\t}\n\n\tprivate async _activate(): Promise<void> {\n\t\ttry {\n\t\t\tthis._value = await this._host.actualActivateExtension(\n\t\t\t\tthis._id,\n\t\t\t\tthis._reason,\n\t\t\t);\n\t\t} catch (err) {\n\t\t\tconst error = new Error();\n\t\t\tif (err && err.name) {\n\t\t\t\terror.name = err.name;\n\t\t\t}\n\t\t\tif (err && err.message) {\n\t\t\t\terror.message = `Activating extension '${this._id.value}' failed: ${err.message}.`;\n\t\t\t} else {\n\t\t\t\terror.message = `Activating extension '${this._id.value}' failed: ${err}.`;\n\t\t\t}\n\t\t\tif (err && err.stack) {\n\t\t\t\terror.stack = err.stack;\n\t\t\t}\n\n\t\t\t// Treat the extension as being empty\n\t\t\tthis._value = new FailedExtension(error);\n\n\t\t\tif (this._isDisposed && errors.isCancellationError(err)) {\n\t\t\t\t// It is expected for ongoing activations to fail if the extension host is going down\n\t\t\t\t// So simply ignore and don't log canceled errors in this case\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._host.onExtensionActivationError(this._id, error, null);\n\t\t\tthis._logService.error(\n\t\t\t\t`Activating extension ${this._id.value} failed due to an error:`,\n\t\t\t);\n\t\t\tthis._logService.error(err);\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
