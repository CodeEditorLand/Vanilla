{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostWebview.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/* eslint-disable local/code-no-native-private */\n\nimport type * as vscode from \"vscode\";\nimport type { VSBuffer } from \"../../../base/common/buffer.js\";\nimport { Emitter, type Event } from \"../../../base/common/event.js\";\nimport { Disposable } from \"../../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../../base/common/network.js\";\nimport * as objects from \"../../../base/common/objects.js\";\nimport { URI } from \"../../../base/common/uri.js\";\nimport {\n\tnormalizeVersion,\n\tparseVersion,\n} from \"../../../platform/extensions/common/extensionValidator.js\";\nimport type { IExtensionDescription } from \"../../../platform/extensions/common/extensions.js\";\nimport type { ILogService } from \"../../../platform/log/common/log.js\";\nimport {\n\ttype WebviewRemoteInfo,\n\tasWebviewUri,\n\twebviewGenericCspSource,\n} from \"../../contrib/webview/common/webview.js\";\nimport type { SerializableObjectWithBuffers } from \"../../services/extensions/common/proxyIdentifier.js\";\nimport * as extHostProtocol from \"./extHost.protocol.js\";\nimport type { IExtHostApiDeprecationService } from \"./extHostApiDeprecationService.js\";\nimport {\n\tdeserializeWebviewMessage,\n\tserializeWebviewMessage,\n} from \"./extHostWebviewMessaging.js\";\nimport type { IExtHostWorkspace } from \"./extHostWorkspace.js\";\n\nexport class ExtHostWebview implements vscode.Webview {\n\treadonly #handle: extHostProtocol.WebviewHandle;\n\treadonly #proxy: extHostProtocol.MainThreadWebviewsShape;\n\treadonly #deprecationService: IExtHostApiDeprecationService;\n\n\treadonly #remoteInfo: WebviewRemoteInfo;\n\treadonly #workspace: IExtHostWorkspace | undefined;\n\treadonly #extension: IExtensionDescription;\n\n\t#html = \"\";\n\t#options: vscode.WebviewOptions;\n\t#isDisposed = false;\n\t#hasCalledAsWebviewUri = false;\n\n\t#serializeBuffersForPostMessage: boolean;\n\t#shouldRewriteOldResourceUris: boolean;\n\n\tconstructor(\n\t\thandle: extHostProtocol.WebviewHandle,\n\t\tproxy: extHostProtocol.MainThreadWebviewsShape,\n\t\toptions: vscode.WebviewOptions,\n\t\tremoteInfo: WebviewRemoteInfo,\n\t\tworkspace: IExtHostWorkspace | undefined,\n\t\textension: IExtensionDescription,\n\t\tdeprecationService: IExtHostApiDeprecationService,\n\t) {\n\t\tthis.#handle = handle;\n\t\tthis.#proxy = proxy;\n\t\tthis.#options = options;\n\t\tthis.#remoteInfo = remoteInfo;\n\t\tthis.#workspace = workspace;\n\t\tthis.#extension = extension;\n\t\tthis.#serializeBuffersForPostMessage =\n\t\t\tshouldSerializeBuffersForPostMessage(extension);\n\t\tthis.#shouldRewriteOldResourceUris =\n\t\t\tshouldTryRewritingOldResourceUris(extension);\n\t\tthis.#deprecationService = deprecationService;\n\t}\n\n\t/* internal */ readonly _onMessageEmitter = new Emitter<any>();\n\tpublic readonly onDidReceiveMessage: Event<any> =\n\t\tthis._onMessageEmitter.event;\n\n\treadonly #onDidDisposeEmitter = new Emitter<void>();\n\t/* internal */ readonly _onDidDispose: Event<void> =\n\t\tthis.#onDidDisposeEmitter.event;\n\n\tpublic dispose() {\n\t\tthis.#isDisposed = true;\n\n\t\tthis.#onDidDisposeEmitter.fire();\n\n\t\tthis.#onDidDisposeEmitter.dispose();\n\t\tthis._onMessageEmitter.dispose();\n\t}\n\n\tpublic asWebviewUri(resource: vscode.Uri): vscode.Uri {\n\t\tthis.#hasCalledAsWebviewUri = true;\n\t\treturn asWebviewUri(resource, this.#remoteInfo);\n\t}\n\n\tpublic get cspSource(): string {\n\t\tconst extensionLocation = this.#extension.extensionLocation;\n\t\tif (\n\t\t\textensionLocation.scheme === Schemas.https ||\n\t\t\textensionLocation.scheme === Schemas.http\n\t\t) {\n\t\t\t// The extension is being served up from a CDN.\n\t\t\t// Also include the CDN in the default csp.\n\t\t\tlet extensionCspRule = extensionLocation.toString();\n\t\t\tif (!extensionCspRule.endsWith(\"/\")) {\n\t\t\t\t// Always treat the location as a directory so that we allow all content under it\n\t\t\t\textensionCspRule += \"/\";\n\t\t\t}\n\t\t\treturn extensionCspRule + \" \" + webviewGenericCspSource;\n\t\t}\n\t\treturn webviewGenericCspSource;\n\t}\n\n\tpublic get html(): string {\n\t\tthis.assertNotDisposed();\n\t\treturn this.#html;\n\t}\n\n\tpublic set html(value: string) {\n\t\tthis.assertNotDisposed();\n\t\tif (this.#html !== value) {\n\t\t\tthis.#html = value;\n\t\t\tif (\n\t\t\t\tthis.#shouldRewriteOldResourceUris &&\n\t\t\t\t!this.#hasCalledAsWebviewUri &&\n\t\t\t\t/([\"'])vscode-resource:([^\\s'\"]+?)([\"'])/i.test(value)\n\t\t\t) {\n\t\t\t\tthis.#hasCalledAsWebviewUri = true;\n\t\t\t\tthis.#deprecationService.report(\n\t\t\t\t\t\"Webview vscode-resource: uris\",\n\t\t\t\t\tthis.#extension,\n\t\t\t\t\t`Please migrate to use the 'webview.asWebviewUri' api instead: https://aka.ms/vscode-webview-use-aswebviewuri`,\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis.#proxy.$setHtml(\n\t\t\t\tthis.#handle,\n\t\t\t\tthis.rewriteOldResourceUrlsIfNeeded(value),\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic get options(): vscode.WebviewOptions {\n\t\tthis.assertNotDisposed();\n\t\treturn this.#options;\n\t}\n\n\tpublic set options(newOptions: vscode.WebviewOptions) {\n\t\tthis.assertNotDisposed();\n\n\t\tif (!objects.equals(this.#options, newOptions)) {\n\t\t\tthis.#proxy.$setOptions(\n\t\t\t\tthis.#handle,\n\t\t\t\tserializeWebviewOptions(\n\t\t\t\t\tthis.#extension,\n\t\t\t\t\tthis.#workspace,\n\t\t\t\t\tnewOptions,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\tthis.#options = newOptions;\n\t}\n\n\tpublic async postMessage(message: any): Promise<boolean> {\n\t\tif (this.#isDisposed) {\n\t\t\treturn false;\n\t\t}\n\t\tconst serialized = serializeWebviewMessage(message, {\n\t\t\tserializeBuffersForPostMessage:\n\t\t\t\tthis.#serializeBuffersForPostMessage,\n\t\t});\n\t\treturn this.#proxy.$postMessage(\n\t\t\tthis.#handle,\n\t\t\tserialized.message,\n\t\t\t...serialized.buffers,\n\t\t);\n\t}\n\n\tprivate assertNotDisposed() {\n\t\tif (this.#isDisposed) {\n\t\t\tthrow new Error(\"Webview is disposed\");\n\t\t}\n\t}\n\n\tprivate rewriteOldResourceUrlsIfNeeded(value: string): string {\n\t\tif (!this.#shouldRewriteOldResourceUris) {\n\t\t\treturn value;\n\t\t}\n\n\t\tconst isRemote =\n\t\t\tthis.#extension.extensionLocation?.scheme === Schemas.vscodeRemote;\n\t\tconst remoteAuthority =\n\t\t\tthis.#extension.extensionLocation.scheme === Schemas.vscodeRemote\n\t\t\t\t? this.#extension.extensionLocation.authority\n\t\t\t\t: undefined;\n\t\treturn value\n\t\t\t.replace(\n\t\t\t\t/([\"'])(?:vscode-resource):(\\/\\/([^\\s/'\"]+?)(?=\\/))?([^\\s'\"]+?)([\"'])/gi,\n\t\t\t\t(_match, startQuote, _1, scheme, path, endQuote) => {\n\t\t\t\t\tconst uri = URI.from({\n\t\t\t\t\t\tscheme: scheme || \"file\",\n\t\t\t\t\t\tpath: decodeURIComponent(path),\n\t\t\t\t\t});\n\t\t\t\t\tconst webviewUri = asWebviewUri(uri, {\n\t\t\t\t\t\tisRemote,\n\t\t\t\t\t\tauthority: remoteAuthority,\n\t\t\t\t\t}).toString();\n\t\t\t\t\treturn `${startQuote}${webviewUri}${endQuote}`;\n\t\t\t\t},\n\t\t\t)\n\t\t\t.replace(\n\t\t\t\t/([\"'])(?:vscode-webview-resource):(\\/\\/[^\\s/'\"]+\\/([^\\s/'\"]+?)(?=\\/))?([^\\s'\"]+?)([\"'])/gi,\n\t\t\t\t(_match, startQuote, _1, scheme, path, endQuote) => {\n\t\t\t\t\tconst uri = URI.from({\n\t\t\t\t\t\tscheme: scheme || \"file\",\n\t\t\t\t\t\tpath: decodeURIComponent(path),\n\t\t\t\t\t});\n\t\t\t\t\tconst webviewUri = asWebviewUri(uri, {\n\t\t\t\t\t\tisRemote,\n\t\t\t\t\t\tauthority: remoteAuthority,\n\t\t\t\t\t}).toString();\n\t\t\t\t\treturn `${startQuote}${webviewUri}${endQuote}`;\n\t\t\t\t},\n\t\t\t);\n\t}\n}\n\nexport function shouldSerializeBuffersForPostMessage(\n\textension: IExtensionDescription,\n): boolean {\n\ttry {\n\t\tconst version = normalizeVersion(\n\t\t\tparseVersion(extension.engines.vscode),\n\t\t);\n\t\treturn !!version && version.majorBase >= 1 && version.minorBase >= 57;\n\t} catch {\n\t\treturn false;\n\t}\n}\n\nfunction shouldTryRewritingOldResourceUris(\n\textension: IExtensionDescription,\n): boolean {\n\ttry {\n\t\tconst version = normalizeVersion(\n\t\t\tparseVersion(extension.engines.vscode),\n\t\t);\n\t\tif (!version) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn (\n\t\t\tversion.majorBase < 1 ||\n\t\t\t(version.majorBase === 1 && version.minorBase < 60)\n\t\t);\n\t} catch {\n\t\treturn false;\n\t}\n}\n\nexport class ExtHostWebviews\n\textends Disposable\n\timplements extHostProtocol.ExtHostWebviewsShape\n{\n\tprivate readonly _webviewProxy: extHostProtocol.MainThreadWebviewsShape;\n\n\tprivate readonly _webviews = new Map<\n\t\textHostProtocol.WebviewHandle,\n\t\tExtHostWebview\n\t>();\n\n\tconstructor(\n\t\tmainContext: extHostProtocol.IMainContext,\n\t\tprivate readonly remoteInfo: WebviewRemoteInfo,\n\t\tprivate readonly workspace: IExtHostWorkspace | undefined,\n\t\tprivate readonly _logService: ILogService,\n\t\tprivate readonly _deprecationService: IExtHostApiDeprecationService,\n\t) {\n\t\tsuper();\n\t\tthis._webviewProxy = mainContext.getProxy(\n\t\t\textHostProtocol.MainContext.MainThreadWebviews,\n\t\t);\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\n\t\tfor (const webview of this._webviews.values()) {\n\t\t\twebview.dispose();\n\t\t}\n\t\tthis._webviews.clear();\n\t}\n\n\tpublic $onMessage(\n\t\thandle: extHostProtocol.WebviewHandle,\n\t\tjsonMessage: string,\n\t\tbuffers: SerializableObjectWithBuffers<VSBuffer[]>,\n\t): void {\n\t\tconst webview = this.getWebview(handle);\n\t\tif (webview) {\n\t\t\tconst { message } = deserializeWebviewMessage(\n\t\t\t\tjsonMessage,\n\t\t\t\tbuffers.value,\n\t\t\t);\n\t\t\twebview._onMessageEmitter.fire(message);\n\t\t}\n\t}\n\n\tpublic $onMissingCsp(\n\t\t_handle: extHostProtocol.WebviewHandle,\n\t\textensionId: string,\n\t): void {\n\t\tthis._logService.warn(\n\t\t\t`${extensionId} created a webview without a content security policy: https://aka.ms/vscode-webview-missing-csp`,\n\t\t);\n\t}\n\n\tpublic createNewWebview(\n\t\thandle: string,\n\t\toptions: extHostProtocol.IWebviewContentOptions,\n\t\textension: IExtensionDescription,\n\t): ExtHostWebview {\n\t\tconst webview = new ExtHostWebview(\n\t\t\thandle,\n\t\t\tthis._webviewProxy,\n\t\t\treviveOptions(options),\n\t\t\tthis.remoteInfo,\n\t\t\tthis.workspace,\n\t\t\textension,\n\t\t\tthis._deprecationService,\n\t\t);\n\t\tthis._webviews.set(handle, webview);\n\n\t\tconst sub = webview._onDidDispose(() => {\n\t\t\tsub.dispose();\n\t\t\tthis.deleteWebview(handle);\n\t\t});\n\n\t\treturn webview;\n\t}\n\n\tpublic deleteWebview(handle: string) {\n\t\tthis._webviews.delete(handle);\n\t}\n\n\tprivate getWebview(\n\t\thandle: extHostProtocol.WebviewHandle,\n\t): ExtHostWebview | undefined {\n\t\treturn this._webviews.get(handle);\n\t}\n}\n\nexport function toExtensionData(\n\textension: IExtensionDescription,\n): extHostProtocol.WebviewExtensionDescription {\n\treturn { id: extension.identifier, location: extension.extensionLocation };\n}\n\nexport function serializeWebviewOptions(\n\textension: IExtensionDescription,\n\tworkspace: IExtHostWorkspace | undefined,\n\toptions: vscode.WebviewOptions,\n): extHostProtocol.IWebviewContentOptions {\n\treturn {\n\t\tenableCommandUris: options.enableCommandUris,\n\t\tenableScripts: options.enableScripts,\n\t\tenableForms: options.enableForms,\n\t\tportMapping: options.portMapping,\n\t\tlocalResourceRoots:\n\t\t\toptions.localResourceRoots ||\n\t\t\tgetDefaultLocalResourceRoots(extension, workspace),\n\t};\n}\n\nfunction reviveOptions(\n\toptions: extHostProtocol.IWebviewContentOptions,\n): vscode.WebviewOptions {\n\treturn {\n\t\tenableCommandUris: options.enableCommandUris,\n\t\tenableScripts: options.enableScripts,\n\t\tenableForms: options.enableForms,\n\t\tportMapping: options.portMapping,\n\t\tlocalResourceRoots: options.localResourceRoots?.map((components) =>\n\t\t\tURI.from(components),\n\t\t),\n\t};\n}\n\nfunction getDefaultLocalResourceRoots(\n\textension: IExtensionDescription,\n\tworkspace: IExtHostWorkspace | undefined,\n): URI[] {\n\treturn [\n\t\t...(workspace?.getWorkspaceFolders() || []).map((x) => x.uri),\n\t\textension.extensionLocation,\n\t];\n}\n"],
  "mappings": "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",
  "names": []
}
