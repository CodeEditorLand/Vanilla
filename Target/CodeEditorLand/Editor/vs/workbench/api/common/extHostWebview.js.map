{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostWebview.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/* eslint-disable local/code-no-native-private */\n\nimport { VSBuffer } from '../../../base/common/buffer.js';\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport * as objects from '../../../base/common/objects.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { normalizeVersion, parseVersion } from '../../../platform/extensions/common/extensionValidator.js';\nimport { IExtensionDescription } from '../../../platform/extensions/common/extensions.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { IExtHostApiDeprecationService } from './extHostApiDeprecationService.js';\nimport { deserializeWebviewMessage, serializeWebviewMessage } from './extHostWebviewMessaging.js';\nimport { IExtHostWorkspace } from './extHostWorkspace.js';\nimport { WebviewRemoteInfo, asWebviewUri, webviewGenericCspSource } from '../../contrib/webview/common/webview.js';\nimport { SerializableObjectWithBuffers } from '../../services/extensions/common/proxyIdentifier.js';\nimport type * as vscode from 'vscode';\nimport * as extHostProtocol from './extHost.protocol.js';\n\nexport class ExtHostWebview implements vscode.Webview {\n\n\treadonly #handle: extHostProtocol.WebviewHandle;\n\treadonly #proxy: extHostProtocol.MainThreadWebviewsShape;\n\treadonly #deprecationService: IExtHostApiDeprecationService;\n\n\treadonly #remoteInfo: WebviewRemoteInfo;\n\treadonly #workspace: IExtHostWorkspace | undefined;\n\treadonly #extension: IExtensionDescription;\n\n\t#html: string = '';\n\t#options: vscode.WebviewOptions;\n\t#isDisposed: boolean = false;\n\t#hasCalledAsWebviewUri = false;\n\n\t#serializeBuffersForPostMessage: boolean;\n\t#shouldRewriteOldResourceUris: boolean;\n\n\tconstructor(\n\t\thandle: extHostProtocol.WebviewHandle,\n\t\tproxy: extHostProtocol.MainThreadWebviewsShape,\n\t\toptions: vscode.WebviewOptions,\n\t\tremoteInfo: WebviewRemoteInfo,\n\t\tworkspace: IExtHostWorkspace | undefined,\n\t\textension: IExtensionDescription,\n\t\tdeprecationService: IExtHostApiDeprecationService,\n\t) {\n\t\tthis.#handle = handle;\n\t\tthis.#proxy = proxy;\n\t\tthis.#options = options;\n\t\tthis.#remoteInfo = remoteInfo;\n\t\tthis.#workspace = workspace;\n\t\tthis.#extension = extension;\n\t\tthis.#serializeBuffersForPostMessage = shouldSerializeBuffersForPostMessage(extension);\n\t\tthis.#shouldRewriteOldResourceUris = shouldTryRewritingOldResourceUris(extension);\n\t\tthis.#deprecationService = deprecationService;\n\t}\n\n\t/* internal */ readonly _onMessageEmitter = new Emitter<any>();\n\tpublic readonly onDidReceiveMessage: Event<any> = this._onMessageEmitter.event;\n\n\treadonly #onDidDisposeEmitter = new Emitter<void>();\n\t/* internal */ readonly _onDidDispose: Event<void> = this.#onDidDisposeEmitter.event;\n\n\tpublic dispose() {\n\t\tthis.#isDisposed = true;\n\n\t\tthis.#onDidDisposeEmitter.fire();\n\n\t\tthis.#onDidDisposeEmitter.dispose();\n\t\tthis._onMessageEmitter.dispose();\n\t}\n\n\tpublic asWebviewUri(resource: vscode.Uri): vscode.Uri {\n\t\tthis.#hasCalledAsWebviewUri = true;\n\t\treturn asWebviewUri(resource, this.#remoteInfo);\n\t}\n\n\tpublic get cspSource(): string {\n\t\tconst extensionLocation = this.#extension.extensionLocation;\n\t\tif (extensionLocation.scheme === Schemas.https || extensionLocation.scheme === Schemas.http) {\n\t\t\t// The extension is being served up from a CDN.\n\t\t\t// Also include the CDN in the default csp.\n\t\t\tlet extensionCspRule = extensionLocation.toString();\n\t\t\tif (!extensionCspRule.endsWith('/')) {\n\t\t\t\t// Always treat the location as a directory so that we allow all content under it\n\t\t\t\textensionCspRule += '/';\n\t\t\t}\n\t\t\treturn extensionCspRule + ' ' + webviewGenericCspSource;\n\t\t}\n\t\treturn webviewGenericCspSource;\n\t}\n\n\tpublic get html(): string {\n\t\tthis.assertNotDisposed();\n\t\treturn this.#html;\n\t}\n\n\tpublic set html(value: string) {\n\t\tthis.assertNotDisposed();\n\t\tif (this.#html !== value) {\n\t\t\tthis.#html = value;\n\t\t\tif (this.#shouldRewriteOldResourceUris && !this.#hasCalledAsWebviewUri && /([\"'])vscode-resource:([^\\s'\"]+?)([\"'])/i.test(value)) {\n\t\t\t\tthis.#hasCalledAsWebviewUri = true;\n\t\t\t\tthis.#deprecationService.report('Webview vscode-resource: uris', this.#extension,\n\t\t\t\t\t`Please migrate to use the 'webview.asWebviewUri' api instead: https://aka.ms/vscode-webview-use-aswebviewuri`);\n\t\t\t}\n\t\t\tthis.#proxy.$setHtml(this.#handle, this.rewriteOldResourceUrlsIfNeeded(value));\n\t\t}\n\t}\n\n\tpublic get options(): vscode.WebviewOptions {\n\t\tthis.assertNotDisposed();\n\t\treturn this.#options;\n\t}\n\n\tpublic set options(newOptions: vscode.WebviewOptions) {\n\t\tthis.assertNotDisposed();\n\n\t\tif (!objects.equals(this.#options, newOptions)) {\n\t\t\tthis.#proxy.$setOptions(this.#handle, serializeWebviewOptions(this.#extension, this.#workspace, newOptions));\n\t\t}\n\n\t\tthis.#options = newOptions;\n\t}\n\n\tpublic async postMessage(message: any): Promise<boolean> {\n\t\tif (this.#isDisposed) {\n\t\t\treturn false;\n\t\t}\n\t\tconst serialized = serializeWebviewMessage(message, { serializeBuffersForPostMessage: this.#serializeBuffersForPostMessage });\n\t\treturn this.#proxy.$postMessage(this.#handle, serialized.message, ...serialized.buffers);\n\t}\n\n\tprivate assertNotDisposed() {\n\t\tif (this.#isDisposed) {\n\t\t\tthrow new Error('Webview is disposed');\n\t\t}\n\t}\n\n\tprivate rewriteOldResourceUrlsIfNeeded(value: string): string {\n\t\tif (!this.#shouldRewriteOldResourceUris) {\n\t\t\treturn value;\n\t\t}\n\n\t\tconst isRemote = this.#extension.extensionLocation?.scheme === Schemas.vscodeRemote;\n\t\tconst remoteAuthority = this.#extension.extensionLocation.scheme === Schemas.vscodeRemote ? this.#extension.extensionLocation.authority : undefined;\n\t\treturn value\n\t\t\t.replace(/([\"'])(?:vscode-resource):(\\/\\/([^\\s\\/'\"]+?)(?=\\/))?([^\\s'\"]+?)([\"'])/gi, (_match, startQuote, _1, scheme, path, endQuote) => {\n\t\t\t\tconst uri = URI.from({\n\t\t\t\t\tscheme: scheme || 'file',\n\t\t\t\t\tpath: decodeURIComponent(path),\n\t\t\t\t});\n\t\t\t\tconst webviewUri = asWebviewUri(uri, { isRemote, authority: remoteAuthority }).toString();\n\t\t\t\treturn `${startQuote}${webviewUri}${endQuote}`;\n\t\t\t})\n\t\t\t.replace(/([\"'])(?:vscode-webview-resource):(\\/\\/[^\\s\\/'\"]+\\/([^\\s\\/'\"]+?)(?=\\/))?([^\\s'\"]+?)([\"'])/gi, (_match, startQuote, _1, scheme, path, endQuote) => {\n\t\t\t\tconst uri = URI.from({\n\t\t\t\t\tscheme: scheme || 'file',\n\t\t\t\t\tpath: decodeURIComponent(path),\n\t\t\t\t});\n\t\t\t\tconst webviewUri = asWebviewUri(uri, { isRemote, authority: remoteAuthority }).toString();\n\t\t\t\treturn `${startQuote}${webviewUri}${endQuote}`;\n\t\t\t});\n\t}\n}\n\nexport function shouldSerializeBuffersForPostMessage(extension: IExtensionDescription): boolean {\n\ttry {\n\t\tconst version = normalizeVersion(parseVersion(extension.engines.vscode));\n\t\treturn !!version && version.majorBase >= 1 && version.minorBase >= 57;\n\t} catch {\n\t\treturn false;\n\t}\n}\n\nfunction shouldTryRewritingOldResourceUris(extension: IExtensionDescription): boolean {\n\ttry {\n\t\tconst version = normalizeVersion(parseVersion(extension.engines.vscode));\n\t\tif (!version) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn version.majorBase < 1 || (version.majorBase === 1 && version.minorBase < 60);\n\t} catch {\n\t\treturn false;\n\t}\n}\n\nexport class ExtHostWebviews extends Disposable implements extHostProtocol.ExtHostWebviewsShape {\n\n\tprivate readonly _webviewProxy: extHostProtocol.MainThreadWebviewsShape;\n\n\tprivate readonly _webviews = new Map<extHostProtocol.WebviewHandle, ExtHostWebview>();\n\n\tconstructor(\n\t\tmainContext: extHostProtocol.IMainContext,\n\t\tprivate readonly remoteInfo: WebviewRemoteInfo,\n\t\tprivate readonly workspace: IExtHostWorkspace | undefined,\n\t\tprivate readonly _logService: ILogService,\n\t\tprivate readonly _deprecationService: IExtHostApiDeprecationService,\n\t) {\n\t\tsuper();\n\t\tthis._webviewProxy = mainContext.getProxy(extHostProtocol.MainContext.MainThreadWebviews);\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\n\t\tfor (const webview of this._webviews.values()) {\n\t\t\twebview.dispose();\n\t\t}\n\t\tthis._webviews.clear();\n\t}\n\n\tpublic $onMessage(\n\t\thandle: extHostProtocol.WebviewHandle,\n\t\tjsonMessage: string,\n\t\tbuffers: SerializableObjectWithBuffers<VSBuffer[]>\n\t): void {\n\t\tconst webview = this.getWebview(handle);\n\t\tif (webview) {\n\t\t\tconst { message } = deserializeWebviewMessage(jsonMessage, buffers.value);\n\t\t\twebview._onMessageEmitter.fire(message);\n\t\t}\n\t}\n\n\tpublic $onMissingCsp(\n\t\t_handle: extHostProtocol.WebviewHandle,\n\t\textensionId: string\n\t): void {\n\t\tthis._logService.warn(`${extensionId} created a webview without a content security policy: https://aka.ms/vscode-webview-missing-csp`);\n\t}\n\n\tpublic createNewWebview(handle: string, options: extHostProtocol.IWebviewContentOptions, extension: IExtensionDescription): ExtHostWebview {\n\t\tconst webview = new ExtHostWebview(handle, this._webviewProxy, reviveOptions(options), this.remoteInfo, this.workspace, extension, this._deprecationService);\n\t\tthis._webviews.set(handle, webview);\n\n\t\tconst sub = webview._onDidDispose(() => {\n\t\t\tsub.dispose();\n\t\t\tthis.deleteWebview(handle);\n\t\t});\n\n\t\treturn webview;\n\t}\n\n\tpublic deleteWebview(handle: string) {\n\t\tthis._webviews.delete(handle);\n\t}\n\n\tprivate getWebview(handle: extHostProtocol.WebviewHandle): ExtHostWebview | undefined {\n\t\treturn this._webviews.get(handle);\n\t}\n}\n\nexport function toExtensionData(extension: IExtensionDescription): extHostProtocol.WebviewExtensionDescription {\n\treturn { id: extension.identifier, location: extension.extensionLocation };\n}\n\nexport function serializeWebviewOptions(\n\textension: IExtensionDescription,\n\tworkspace: IExtHostWorkspace | undefined,\n\toptions: vscode.WebviewOptions,\n): extHostProtocol.IWebviewContentOptions {\n\treturn {\n\t\tenableCommandUris: options.enableCommandUris,\n\t\tenableScripts: options.enableScripts,\n\t\tenableForms: options.enableForms,\n\t\tportMapping: options.portMapping,\n\t\tlocalResourceRoots: options.localResourceRoots || getDefaultLocalResourceRoots(extension, workspace)\n\t};\n}\n\nfunction reviveOptions(options: extHostProtocol.IWebviewContentOptions): vscode.WebviewOptions {\n\treturn {\n\t\tenableCommandUris: options.enableCommandUris,\n\t\tenableScripts: options.enableScripts,\n\t\tenableForms: options.enableForms,\n\t\tportMapping: options.portMapping,\n\t\tlocalResourceRoots: options.localResourceRoots?.map(components => URI.from(components)),\n\t};\n}\n\nfunction getDefaultLocalResourceRoots(\n\textension: IExtensionDescription,\n\tworkspace: IExtHostWorkspace | undefined,\n): URI[] {\n\treturn [\n\t\t...(workspace?.getWorkspaceFolders() || []).map(x => x.uri),\n\t\textension.extensionLocation,\n\t];\n}\n"],
  "mappings": "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",
  "names": []
}
