{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostSpeech.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { DisposableStore, IDisposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { ExtHostSpeechShape, IMainContext, MainContext, MainThreadSpeechShape } from './extHost.protocol.js';\nimport type * as vscode from 'vscode';\nimport { ExtensionIdentifier } from '../../../platform/extensions/common/extensions.js';\n\nexport class ExtHostSpeech implements ExtHostSpeechShape {\n\n\tprivate static ID_POOL = 1;\n\n\tprivate readonly proxy: MainThreadSpeechShape;\n\n\tprivate readonly providers = new Map<number, vscode.SpeechProvider>();\n\tprivate readonly sessions = new Map<number, CancellationTokenSource>();\n\tprivate readonly synthesizers = new Map<number, vscode.TextToSpeechSession>();\n\n\tconstructor(\n\t\tmainContext: IMainContext\n\t) {\n\t\tthis.proxy = mainContext.getProxy(MainContext.MainThreadSpeech);\n\t}\n\n\tasync $createSpeechToTextSession(handle: number, session: number, language?: string): Promise<void> {\n\t\tconst provider = this.providers.get(handle);\n\t\tif (!provider) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst disposables = new DisposableStore();\n\n\t\tconst cts = new CancellationTokenSource();\n\t\tthis.sessions.set(session, cts);\n\n\t\tconst speechToTextSession = await provider.provideSpeechToTextSession(cts.token, language ? { language } : undefined);\n\t\tif (!speechToTextSession) {\n\t\t\treturn;\n\t\t}\n\n\t\tdisposables.add(speechToTextSession.onDidChange(e => {\n\t\t\tif (cts.token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.proxy.$emitSpeechToTextEvent(session, e);\n\t\t}));\n\n\t\tdisposables.add(cts.token.onCancellationRequested(() => disposables.dispose()));\n\t}\n\n\tasync $cancelSpeechToTextSession(session: number): Promise<void> {\n\t\tthis.sessions.get(session)?.dispose(true);\n\t\tthis.sessions.delete(session);\n\t}\n\n\tasync $createTextToSpeechSession(handle: number, session: number, language?: string): Promise<void> {\n\t\tconst provider = this.providers.get(handle);\n\t\tif (!provider) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst disposables = new DisposableStore();\n\n\t\tconst cts = new CancellationTokenSource();\n\t\tthis.sessions.set(session, cts);\n\n\t\tconst textToSpeech = await provider.provideTextToSpeechSession(cts.token, language ? { language } : undefined);\n\t\tif (!textToSpeech) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.synthesizers.set(session, textToSpeech);\n\n\t\tdisposables.add(textToSpeech.onDidChange(e => {\n\t\t\tif (cts.token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.proxy.$emitTextToSpeechEvent(session, e);\n\t\t}));\n\n\t\tdisposables.add(cts.token.onCancellationRequested(() => disposables.dispose()));\n\t}\n\n\tasync $synthesizeSpeech(session: number, text: string): Promise<void> {\n\t\tthis.synthesizers.get(session)?.synthesize(text);\n\t}\n\n\tasync $cancelTextToSpeechSession(session: number): Promise<void> {\n\t\tthis.sessions.get(session)?.dispose(true);\n\t\tthis.sessions.delete(session);\n\t\tthis.synthesizers.delete(session);\n\t}\n\n\tasync $createKeywordRecognitionSession(handle: number, session: number): Promise<void> {\n\t\tconst provider = this.providers.get(handle);\n\t\tif (!provider) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst disposables = new DisposableStore();\n\n\t\tconst cts = new CancellationTokenSource();\n\t\tthis.sessions.set(session, cts);\n\n\t\tconst keywordRecognitionSession = await provider.provideKeywordRecognitionSession(cts.token);\n\t\tif (!keywordRecognitionSession) {\n\t\t\treturn;\n\t\t}\n\n\t\tdisposables.add(keywordRecognitionSession.onDidChange(e => {\n\t\t\tif (cts.token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.proxy.$emitKeywordRecognitionEvent(session, e);\n\t\t}));\n\n\t\tdisposables.add(cts.token.onCancellationRequested(() => disposables.dispose()));\n\t}\n\n\tasync $cancelKeywordRecognitionSession(session: number): Promise<void> {\n\t\tthis.sessions.get(session)?.dispose(true);\n\t\tthis.sessions.delete(session);\n\t}\n\n\tregisterProvider(extension: ExtensionIdentifier, identifier: string, provider: vscode.SpeechProvider): IDisposable {\n\t\tconst handle = ExtHostSpeech.ID_POOL++;\n\n\t\tthis.providers.set(handle, provider);\n\t\tthis.proxy.$registerProvider(handle, identifier, { extension, displayName: extension.value });\n\n\t\treturn toDisposable(() => {\n\t\t\tthis.proxy.$unregisterProvider(handle);\n\t\t\tthis.providers.delete(handle);\n\t\t});\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
