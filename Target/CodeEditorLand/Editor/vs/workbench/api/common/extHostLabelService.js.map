{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostLabelService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\ttype IDisposable,\n\ttoDisposable,\n} from \"../../../base/common/lifecycle.js\";\nimport type { ResourceLabelFormatter } from \"../../../platform/label/common/label.js\";\nimport {\n\ttype ExtHostLabelServiceShape,\n\ttype IMainContext,\n\tMainContext,\n\ttype MainThreadLabelServiceShape,\n} from \"./extHost.protocol.js\";\n\nexport class ExtHostLabelService implements ExtHostLabelServiceShape {\n\tprivate readonly _proxy: MainThreadLabelServiceShape;\n\tprivate _handlePool = 0;\n\n\tconstructor(mainContext: IMainContext) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadLabelService);\n\t}\n\n\t$registerResourceLabelFormatter(\n\t\tformatter: ResourceLabelFormatter,\n\t): IDisposable {\n\t\tconst handle = this._handlePool++;\n\t\tthis._proxy.$registerResourceLabelFormatter(handle, formatter);\n\n\t\treturn toDisposable(() => {\n\t\t\tthis._proxy.$unregisterResourceLabelFormatter(handle);\n\t\t});\n\t}\n}\n"],
  "mappings": ";;AAKA;AAAA,EAEC;AAAA,OACM;AAEP;AAAA,EAGC;AAAA,OAEM;AAEA,MAAM,oBAAwD;AAAA,EAjBrE,OAiBqE;AAAA;AAAA;AAAA,EACnD;AAAA,EACT,cAAc;AAAA,EAEtB,YAAY,aAA2B;AACtC,SAAK,SAAS,YAAY,SAAS,YAAY,sBAAsB;AAAA,EACtE;AAAA,EAEA,gCACC,WACc;AACd,UAAM,SAAS,KAAK;AACpB,SAAK,OAAO,gCAAgC,QAAQ,SAAS;AAE7D,WAAO,aAAa,MAAM;AACzB,WAAK,OAAO,kCAAkC,MAAM;AAAA,IACrD,CAAC;AAAA,EACF;AACD;",
  "names": []
}
