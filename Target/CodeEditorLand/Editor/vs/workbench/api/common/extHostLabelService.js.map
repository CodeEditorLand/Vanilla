{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostLabelService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ResourceLabelFormatter } from '../../../platform/label/common/label.js';\nimport { IDisposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { MainThreadLabelServiceShape, ExtHostLabelServiceShape, MainContext, IMainContext } from './extHost.protocol.js';\n\nexport class ExtHostLabelService implements ExtHostLabelServiceShape {\n\n\tprivate readonly _proxy: MainThreadLabelServiceShape;\n\tprivate _handlePool: number = 0;\n\n\tconstructor(mainContext: IMainContext) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadLabelService);\n\t}\n\n\t$registerResourceLabelFormatter(formatter: ResourceLabelFormatter): IDisposable {\n\t\tconst handle = this._handlePool++;\n\t\tthis._proxy.$registerResourceLabelFormatter(handle, formatter);\n\n\t\treturn toDisposable(() => {\n\t\t\tthis._proxy.$unregisterResourceLabelFormatter(handle);\n\t\t});\n\t}\n}"],
  "mappings": ";;AAKA,SAAS,8BAA8B;AACvC,SAAS,aAAa,oBAAoB;AAC1C,SAAS,6BAA6B,0BAA0B,aAAa,oBAAoB;AAE1F,MAAM,oBAAwD;AAAA,EATrE,OASqE;AAAA;AAAA;AAAA,EAEnD;AAAA,EACT,cAAsB;AAAA,EAE9B,YAAY,aAA2B;AACtC,SAAK,SAAS,YAAY,SAAS,YAAY,sBAAsB;AAAA,EACtE;AAAA,EAEA,gCAAgC,WAAgD;AAC/E,UAAM,SAAS,KAAK;AACpB,SAAK,OAAO,gCAAgC,QAAQ,SAAS;AAE7D,WAAO,aAAa,MAAM;AACzB,WAAK,OAAO,kCAAkC,MAAM;AAAA,IACrD,CAAC;AAAA,EACF;AACD;",
  "names": []
}
