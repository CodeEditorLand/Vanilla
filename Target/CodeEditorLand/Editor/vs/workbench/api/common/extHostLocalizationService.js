var f=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var l=(o,e,i,t)=>{for(var n=t>1?void 0:t?p(e,i):e,r=o.length-1,a;r>=0;r--)(a=o[r])&&(n=(t?a(e,i,n):a(n))||n);return t&&n&&f(e,i,n),n},s=(o,e)=>(i,t)=>e(i,t,o);import{LANGUAGE_DEFAULT as h}from"../../../base/common/platform.js";import{format2 as g}from"../../../base/common/strings.js";import{URI as d}from"../../../base/common/uri.js";import{createDecorator as m}from"../../../platform/instantiation/common/instantiation.js";import{ILogService as v}from"../../../platform/log/common/log.js";import{MainContext as y}from"./extHost.protocol.js";import{IExtHostInitDataService as L}from"./extHostInitDataService.js";import{IExtHostRpcService as I}from"./extHostRpcService.js";let u=class{constructor(e,i,t){this.logService=t;this._proxy=i.getProxy(y.MainThreadLocalization),this.currentLanguage=e.environment.appLanguage,this.isDefaultLanguage=this.currentLanguage===h}_serviceBrand;_proxy;currentLanguage;isDefaultLanguage;bundleCache=new Map;getMessage(e,i){const{message:t,args:n,comment:r}=i;if(this.isDefaultLanguage)return g(t,n??{});let a=t;r&&r.length>0&&(a+=`/${Array.isArray(r)?r.join(""):r}`);const c=this.bundleCache.get(e)?.contents[a];return c||this.logService.warn(`Using default string since no string found in i18n bundle that has the key: ${a}`),g(c??t,n??{})}getBundle(e){return this.bundleCache.get(e)?.contents}getBundleUri(e){return this.bundleCache.get(e)?.uri}async initializeLocalizedMessages(e){if(this.isDefaultLanguage||!e.l10n&&!e.isBuiltin||this.bundleCache.has(e.identifier.value))return;let i;const t=await this.getBundleLocation(e);if(!t){this.logService.error(`No bundle location found for extension ${e.identifier.value}`);return}try{const n=await this._proxy.$fetchBundleContents(t),r=JSON.parse(n);i=e.isBuiltin?r.contents?.bundle:r}catch(n){this.logService.error(`Failed to load translations for ${e.identifier.value} from ${t}: ${n.message}`);return}i&&this.bundleCache.set(e.identifier.value,{contents:i,uri:t})}async getBundleLocation(e){if(e.isBuiltin){const i=await this._proxy.$fetchBuiltInBundleUri(e.identifier.value,this.currentLanguage);return d.revive(i)}return e.l10n?d.joinPath(e.extensionLocation,e.l10n,`bundle.l10n.${this.currentLanguage}.json`):void 0}};u=l([s(0,L),s(1,I),s(2,v)],u);const C=m("IExtHostLocalizationService");export{u as ExtHostLocalizationService,C as IExtHostLocalizationService};
