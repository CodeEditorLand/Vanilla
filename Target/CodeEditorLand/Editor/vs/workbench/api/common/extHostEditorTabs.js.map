{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostEditorTabs.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type * as vscode from \"vscode\";\nimport { diffSets } from \"../../../base/common/collections.js\";\nimport { Emitter } from \"../../../base/common/event.js\";\nimport { assertIsDefined } from \"../../../base/common/types.js\";\nimport { URI } from \"../../../base/common/uri.js\";\nimport { createDecorator } from \"../../../platform/instantiation/common/instantiation.js\";\nimport {\n\ttype IEditorTabDto,\n\ttype IEditorTabGroupDto,\n\ttype IExtHostEditorTabsShape,\n\tMainContext,\n\ttype MainThreadEditorTabsShape,\n\tTabInputKind,\n\tTabModelOperationKind,\n\ttype TabOperation,\n} from \"./extHost.protocol.js\";\nimport { IExtHostRpcService } from \"./extHostRpcService.js\";\nimport * as typeConverters from \"./extHostTypeConverters.js\";\nimport {\n\tChatEditorTabInput,\n\tCustomEditorTabInput,\n\tInteractiveWindowInput,\n\tNotebookDiffEditorTabInput,\n\tNotebookEditorTabInput,\n\tTerminalEditorTabInput,\n\tTextDiffTabInput,\n\tTextMergeTabInput,\n\tTextMultiDiffTabInput,\n\tTextTabInput,\n\tWebviewEditorTabInput,\n} from \"./extHostTypes.js\";\n\nexport interface IExtHostEditorTabs extends IExtHostEditorTabsShape {\n\treadonly _serviceBrand: undefined;\n\ttabGroups: vscode.TabGroups;\n}\n\nexport const IExtHostEditorTabs =\n\tcreateDecorator<IExtHostEditorTabs>(\"IExtHostEditorTabs\");\n\ntype AnyTabInput =\n\t| TextTabInput\n\t| TextDiffTabInput\n\t| TextMultiDiffTabInput\n\t| CustomEditorTabInput\n\t| NotebookEditorTabInput\n\t| NotebookDiffEditorTabInput\n\t| WebviewEditorTabInput\n\t| TerminalEditorTabInput\n\t| InteractiveWindowInput\n\t| ChatEditorTabInput;\n\nclass ExtHostEditorTab {\n\tprivate _apiObject: vscode.Tab | undefined;\n\tprivate _dto!: IEditorTabDto;\n\tprivate _input: AnyTabInput | undefined;\n\tprivate _parentGroup: ExtHostEditorTabGroup;\n\tprivate readonly _activeTabIdGetter: () => string;\n\n\tconstructor(\n\t\tdto: IEditorTabDto,\n\t\tparentGroup: ExtHostEditorTabGroup,\n\t\tactiveTabIdGetter: () => string,\n\t) {\n\t\tthis._activeTabIdGetter = activeTabIdGetter;\n\t\tthis._parentGroup = parentGroup;\n\t\tthis.acceptDtoUpdate(dto);\n\t}\n\n\tget apiObject(): vscode.Tab {\n\t\tif (!this._apiObject) {\n\t\t\t// Don't want to lose reference to parent `this` in the getters\n\t\t\tconst that = this;\n\t\t\tconst obj: vscode.Tab = {\n\t\t\t\tget isActive() {\n\t\t\t\t\t// We use a getter function here to always ensure at most 1 active tab per group and prevent iteration for being required\n\t\t\t\t\treturn that._dto.id === that._activeTabIdGetter();\n\t\t\t\t},\n\t\t\t\tget label() {\n\t\t\t\t\treturn that._dto.label;\n\t\t\t\t},\n\t\t\t\tget input() {\n\t\t\t\t\treturn that._input;\n\t\t\t\t},\n\t\t\t\tget isDirty() {\n\t\t\t\t\treturn that._dto.isDirty;\n\t\t\t\t},\n\t\t\t\tget isPinned() {\n\t\t\t\t\treturn that._dto.isPinned;\n\t\t\t\t},\n\t\t\t\tget isPreview() {\n\t\t\t\t\treturn that._dto.isPreview;\n\t\t\t\t},\n\t\t\t\tget group() {\n\t\t\t\t\treturn that._parentGroup.apiObject;\n\t\t\t\t},\n\t\t\t};\n\t\t\tthis._apiObject = Object.freeze<vscode.Tab>(obj);\n\t\t}\n\t\treturn this._apiObject;\n\t}\n\n\tget tabId(): string {\n\t\treturn this._dto.id;\n\t}\n\n\tacceptDtoUpdate(dto: IEditorTabDto) {\n\t\tthis._dto = dto;\n\t\tthis._input = this._initInput();\n\t}\n\n\tprivate _initInput() {\n\t\tswitch (this._dto.input.kind) {\n\t\t\tcase TabInputKind.TextInput:\n\t\t\t\treturn new TextTabInput(URI.revive(this._dto.input.uri));\n\t\t\tcase TabInputKind.TextDiffInput:\n\t\t\t\treturn new TextDiffTabInput(\n\t\t\t\t\tURI.revive(this._dto.input.original),\n\t\t\t\t\tURI.revive(this._dto.input.modified),\n\t\t\t\t);\n\t\t\tcase TabInputKind.TextMergeInput:\n\t\t\t\treturn new TextMergeTabInput(\n\t\t\t\t\tURI.revive(this._dto.input.base),\n\t\t\t\t\tURI.revive(this._dto.input.input1),\n\t\t\t\t\tURI.revive(this._dto.input.input2),\n\t\t\t\t\tURI.revive(this._dto.input.result),\n\t\t\t\t);\n\t\t\tcase TabInputKind.CustomEditorInput:\n\t\t\t\treturn new CustomEditorTabInput(\n\t\t\t\t\tURI.revive(this._dto.input.uri),\n\t\t\t\t\tthis._dto.input.viewType,\n\t\t\t\t);\n\t\t\tcase TabInputKind.WebviewEditorInput:\n\t\t\t\treturn new WebviewEditorTabInput(this._dto.input.viewType);\n\t\t\tcase TabInputKind.NotebookInput:\n\t\t\t\treturn new NotebookEditorTabInput(\n\t\t\t\t\tURI.revive(this._dto.input.uri),\n\t\t\t\t\tthis._dto.input.notebookType,\n\t\t\t\t);\n\t\t\tcase TabInputKind.NotebookDiffInput:\n\t\t\t\treturn new NotebookDiffEditorTabInput(\n\t\t\t\t\tURI.revive(this._dto.input.original),\n\t\t\t\t\tURI.revive(this._dto.input.modified),\n\t\t\t\t\tthis._dto.input.notebookType,\n\t\t\t\t);\n\t\t\tcase TabInputKind.TerminalEditorInput:\n\t\t\t\treturn new TerminalEditorTabInput();\n\t\t\tcase TabInputKind.InteractiveEditorInput:\n\t\t\t\treturn new InteractiveWindowInput(\n\t\t\t\t\tURI.revive(this._dto.input.uri),\n\t\t\t\t\tURI.revive(this._dto.input.inputBoxUri),\n\t\t\t\t);\n\t\t\tcase TabInputKind.ChatEditorInput:\n\t\t\t\treturn new ChatEditorTabInput();\n\t\t\tcase TabInputKind.MultiDiffEditorInput:\n\t\t\t\treturn new TextMultiDiffTabInput(\n\t\t\t\t\tthis._dto.input.diffEditors.map(\n\t\t\t\t\t\t(diff) =>\n\t\t\t\t\t\t\tnew TextDiffTabInput(\n\t\t\t\t\t\t\t\tURI.revive(diff.original),\n\t\t\t\t\t\t\t\tURI.revive(diff.modified),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\tdefault:\n\t\t\t\treturn undefined;\n\t\t}\n\t}\n}\n\nclass ExtHostEditorTabGroup {\n\tprivate _apiObject: vscode.TabGroup | undefined;\n\tprivate _dto: IEditorTabGroupDto;\n\tprivate _tabs: ExtHostEditorTab[] = [];\n\tprivate _activeTabId = \"\";\n\tprivate _activeGroupIdGetter: () => number | undefined;\n\n\tconstructor(\n\t\tdto: IEditorTabGroupDto,\n\t\tactiveGroupIdGetter: () => number | undefined,\n\t) {\n\t\tthis._dto = dto;\n\t\tthis._activeGroupIdGetter = activeGroupIdGetter;\n\t\t// Construct all tabs from the given dto\n\t\tfor (const tabDto of dto.tabs) {\n\t\t\tif (tabDto.isActive) {\n\t\t\t\tthis._activeTabId = tabDto.id;\n\t\t\t}\n\t\t\tthis._tabs.push(\n\t\t\t\tnew ExtHostEditorTab(tabDto, this, () => this.activeTabId()),\n\t\t\t);\n\t\t}\n\t}\n\n\tget apiObject(): vscode.TabGroup {\n\t\tif (!this._apiObject) {\n\t\t\t// Don't want to lose reference to parent `this` in the getters\n\t\t\tconst that = this;\n\t\t\tconst obj: vscode.TabGroup = {\n\t\t\t\tget isActive() {\n\t\t\t\t\t// We use a getter function here to always ensure at most 1 active group and prevent iteration for being required\n\t\t\t\t\treturn that._dto.groupId === that._activeGroupIdGetter();\n\t\t\t\t},\n\t\t\t\tget viewColumn() {\n\t\t\t\t\treturn typeConverters.ViewColumn.to(that._dto.viewColumn);\n\t\t\t\t},\n\t\t\t\tget activeTab() {\n\t\t\t\t\treturn that._tabs.find(\n\t\t\t\t\t\t(tab) => tab.tabId === that._activeTabId,\n\t\t\t\t\t)?.apiObject;\n\t\t\t\t},\n\t\t\t\tget tabs() {\n\t\t\t\t\treturn Object.freeze(\n\t\t\t\t\t\tthat._tabs.map((tab) => tab.apiObject),\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t};\n\t\t\tthis._apiObject = Object.freeze<vscode.TabGroup>(obj);\n\t\t}\n\t\treturn this._apiObject;\n\t}\n\n\tget groupId(): number {\n\t\treturn this._dto.groupId;\n\t}\n\n\tget tabs(): ExtHostEditorTab[] {\n\t\treturn this._tabs;\n\t}\n\n\tacceptGroupDtoUpdate(dto: IEditorTabGroupDto) {\n\t\tthis._dto = dto;\n\t}\n\n\tacceptTabOperation(operation: TabOperation): ExtHostEditorTab {\n\t\t// In the open case we add the tab to the group\n\t\tif (operation.kind === TabModelOperationKind.TAB_OPEN) {\n\t\t\tconst tab = new ExtHostEditorTab(operation.tabDto, this, () =>\n\t\t\t\tthis.activeTabId(),\n\t\t\t);\n\t\t\t// Insert tab at editor index\n\t\t\tthis._tabs.splice(operation.index, 0, tab);\n\t\t\tif (operation.tabDto.isActive) {\n\t\t\t\tthis._activeTabId = tab.tabId;\n\t\t\t}\n\t\t\treturn tab;\n\t\t} else if (operation.kind === TabModelOperationKind.TAB_CLOSE) {\n\t\t\tconst tab = this._tabs.splice(operation.index, 1)[0];\n\t\t\tif (!tab) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`Tab close updated received for index ${operation.index} which does not exist`,\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (tab.tabId === this._activeTabId) {\n\t\t\t\tthis._activeTabId = \"\";\n\t\t\t}\n\t\t\treturn tab;\n\t\t} else if (operation.kind === TabModelOperationKind.TAB_MOVE) {\n\t\t\tif (operation.oldIndex === undefined) {\n\t\t\t\tthrow new Error(\"Invalid old index on move IPC\");\n\t\t\t}\n\t\t\t// Splice to remove at old index and insert at new index === moving the tab\n\t\t\tconst tab = this._tabs.splice(operation.oldIndex, 1)[0];\n\t\t\tif (!tab) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`Tab move updated received for index ${operation.oldIndex} which does not exist`,\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis._tabs.splice(operation.index, 0, tab);\n\t\t\treturn tab;\n\t\t}\n\t\tconst tab = this._tabs.find(\n\t\t\t(extHostTab) => extHostTab.tabId === operation.tabDto.id,\n\t\t);\n\t\tif (!tab) {\n\t\t\tthrow new Error(\"INVALID tab\");\n\t\t}\n\t\tif (operation.tabDto.isActive) {\n\t\t\tthis._activeTabId = operation.tabDto.id;\n\t\t} else if (\n\t\t\tthis._activeTabId === operation.tabDto.id &&\n\t\t\t!operation.tabDto.isActive\n\t\t) {\n\t\t\t// Events aren't guaranteed to be in order so if we receive a dto that matches the active tab id\n\t\t\t// but isn't active we mark the active tab id as empty. This prevent onDidActiveTabChange from\n\t\t\t// firing incorrectly\n\t\t\tthis._activeTabId = \"\";\n\t\t}\n\t\ttab.acceptDtoUpdate(operation.tabDto);\n\t\treturn tab;\n\t}\n\n\t// Not a getter since it must be a function to be used as a callback for the tabs\n\tactiveTabId(): string {\n\t\treturn this._activeTabId;\n\t}\n}\n\nexport class ExtHostEditorTabs implements IExtHostEditorTabs {\n\treadonly _serviceBrand: undefined;\n\n\tprivate readonly _proxy: MainThreadEditorTabsShape;\n\tprivate readonly _onDidChangeTabs = new Emitter<vscode.TabChangeEvent>();\n\tprivate readonly _onDidChangeTabGroups =\n\t\tnew Emitter<vscode.TabGroupChangeEvent>();\n\n\t// Have to use ! because this gets initialized via an RPC proxy\n\tprivate _activeGroupId!: number;\n\n\tprivate _extHostTabGroups: ExtHostEditorTabGroup[] = [];\n\n\tprivate _apiObject: vscode.TabGroups | undefined;\n\n\tconstructor(@IExtHostRpcService extHostRpc: IExtHostRpcService) {\n\t\tthis._proxy = extHostRpc.getProxy(MainContext.MainThreadEditorTabs);\n\t}\n\n\tget tabGroups(): vscode.TabGroups {\n\t\tif (!this._apiObject) {\n\t\t\tconst that = this;\n\t\t\tconst obj: vscode.TabGroups = {\n\t\t\t\t// never changes -> simple value\n\t\t\t\tonDidChangeTabGroups: that._onDidChangeTabGroups.event,\n\t\t\t\tonDidChangeTabs: that._onDidChangeTabs.event,\n\t\t\t\t// dynamic -> getters\n\t\t\t\tget all() {\n\t\t\t\t\treturn Object.freeze(\n\t\t\t\t\t\tthat._extHostTabGroups.map((group) => group.apiObject),\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\tget activeTabGroup() {\n\t\t\t\t\tconst activeTabGroupId = that._activeGroupId;\n\t\t\t\t\tconst activeTabGroup = assertIsDefined(\n\t\t\t\t\t\tthat._extHostTabGroups.find(\n\t\t\t\t\t\t\t(candidate) =>\n\t\t\t\t\t\t\t\tcandidate.groupId === activeTabGroupId,\n\t\t\t\t\t\t)?.apiObject,\n\t\t\t\t\t);\n\t\t\t\t\treturn activeTabGroup;\n\t\t\t\t},\n\t\t\t\tclose: async (\n\t\t\t\t\ttabOrTabGroup:\n\t\t\t\t\t\t| vscode.Tab\n\t\t\t\t\t\t| readonly vscode.Tab[]\n\t\t\t\t\t\t| vscode.TabGroup\n\t\t\t\t\t\t| readonly vscode.TabGroup[],\n\t\t\t\t\tpreserveFocus?: boolean,\n\t\t\t\t) => {\n\t\t\t\t\tconst tabsOrTabGroups = Array.isArray(tabOrTabGroup)\n\t\t\t\t\t\t? tabOrTabGroup\n\t\t\t\t\t\t: [tabOrTabGroup];\n\t\t\t\t\tif (!tabsOrTabGroups.length) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\t// Check which type was passed in and call the appropriate close\n\t\t\t\t\t// Casting is needed as typescript doesn't seem to infer enough from this\n\t\t\t\t\tif (isTabGroup(tabsOrTabGroups[0])) {\n\t\t\t\t\t\treturn this._closeGroups(\n\t\t\t\t\t\t\ttabsOrTabGroups as vscode.TabGroup[],\n\t\t\t\t\t\t\tpreserveFocus,\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn this._closeTabs(\n\t\t\t\t\t\t\ttabsOrTabGroups as vscode.Tab[],\n\t\t\t\t\t\t\tpreserveFocus,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t// move: async (tab: vscode.Tab, viewColumn: ViewColumn, index: number, preserveFocus?: boolean) => {\n\t\t\t\t// \tconst extHostTab = this._findExtHostTabFromApi(tab);\n\t\t\t\t// \tif (!extHostTab) {\n\t\t\t\t// \t\tthrow new Error('Invalid tab');\n\t\t\t\t// \t}\n\t\t\t\t// \tthis._proxy.$moveTab(extHostTab.tabId, index, typeConverters.ViewColumn.from(viewColumn), preserveFocus);\n\t\t\t\t// \treturn;\n\t\t\t\t// }\n\t\t\t};\n\t\t\tthis._apiObject = Object.freeze(obj);\n\t\t}\n\t\treturn this._apiObject;\n\t}\n\n\t$acceptEditorTabModel(tabGroups: IEditorTabGroupDto[]): void {\n\t\tconst groupIdsBefore = new Set(\n\t\t\tthis._extHostTabGroups.map((group) => group.groupId),\n\t\t);\n\t\tconst groupIdsAfter = new Set(tabGroups.map((dto) => dto.groupId));\n\t\tconst diff = diffSets(groupIdsBefore, groupIdsAfter);\n\n\t\tconst closed: vscode.TabGroup[] = this._extHostTabGroups\n\t\t\t.filter((group) => diff.removed.includes(group.groupId))\n\t\t\t.map((group) => group.apiObject);\n\t\tconst opened: vscode.TabGroup[] = [];\n\t\tconst changed: vscode.TabGroup[] = [];\n\n\t\tthis._extHostTabGroups = tabGroups.map((tabGroup) => {\n\t\t\tconst group = new ExtHostEditorTabGroup(\n\t\t\t\ttabGroup,\n\t\t\t\t() => this._activeGroupId,\n\t\t\t);\n\t\t\tif (diff.added.includes(group.groupId)) {\n\t\t\t\topened.push(group.apiObject);\n\t\t\t} else {\n\t\t\t\tchanged.push(group.apiObject);\n\t\t\t}\n\t\t\treturn group;\n\t\t});\n\n\t\t// Set the active tab group id\n\t\tconst activeTabGroupId = assertIsDefined(\n\t\t\ttabGroups.find((group) => group.isActive === true)?.groupId,\n\t\t);\n\t\tif (\n\t\t\tactiveTabGroupId !== undefined &&\n\t\t\tthis._activeGroupId !== activeTabGroupId\n\t\t) {\n\t\t\tthis._activeGroupId = activeTabGroupId;\n\t\t}\n\t\tthis._onDidChangeTabGroups.fire(\n\t\t\tObject.freeze({ opened, closed, changed }),\n\t\t);\n\t}\n\n\t$acceptTabGroupUpdate(groupDto: IEditorTabGroupDto) {\n\t\tconst group = this._extHostTabGroups.find(\n\t\t\t(group) => group.groupId === groupDto.groupId,\n\t\t);\n\t\tif (!group) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Update Group IPC call received before group creation.\",\n\t\t\t);\n\t\t}\n\t\tgroup.acceptGroupDtoUpdate(groupDto);\n\t\tif (groupDto.isActive) {\n\t\t\tthis._activeGroupId = groupDto.groupId;\n\t\t}\n\t\tthis._onDidChangeTabGroups.fire(\n\t\t\tObject.freeze({\n\t\t\t\tchanged: [group.apiObject],\n\t\t\t\topened: [],\n\t\t\t\tclosed: [],\n\t\t\t}),\n\t\t);\n\t}\n\n\t$acceptTabOperation(operation: TabOperation) {\n\t\tconst group = this._extHostTabGroups.find(\n\t\t\t(group) => group.groupId === operation.groupId,\n\t\t);\n\t\tif (!group) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Update Tabs IPC call received before group creation.\",\n\t\t\t);\n\t\t}\n\t\tconst tab = group.acceptTabOperation(operation);\n\n\t\t// Construct the tab change event based on the operation\n\t\tswitch (operation.kind) {\n\t\t\tcase TabModelOperationKind.TAB_OPEN:\n\t\t\t\tthis._onDidChangeTabs.fire(\n\t\t\t\t\tObject.freeze({\n\t\t\t\t\t\topened: [tab.apiObject],\n\t\t\t\t\t\tclosed: [],\n\t\t\t\t\t\tchanged: [],\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\tcase TabModelOperationKind.TAB_CLOSE:\n\t\t\t\tthis._onDidChangeTabs.fire(\n\t\t\t\t\tObject.freeze({\n\t\t\t\t\t\topened: [],\n\t\t\t\t\t\tclosed: [tab.apiObject],\n\t\t\t\t\t\tchanged: [],\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\tcase TabModelOperationKind.TAB_MOVE:\n\t\t\tcase TabModelOperationKind.TAB_UPDATE:\n\t\t\t\tthis._onDidChangeTabs.fire(\n\t\t\t\t\tObject.freeze({\n\t\t\t\t\t\topened: [],\n\t\t\t\t\t\tclosed: [],\n\t\t\t\t\t\tchanged: [tab.apiObject],\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t}\n\t}\n\n\tprivate _findExtHostTabFromApi(\n\t\tapiTab: vscode.Tab,\n\t): ExtHostEditorTab | undefined {\n\t\tfor (const group of this._extHostTabGroups) {\n\t\t\tfor (const tab of group.tabs) {\n\t\t\t\tif (tab.apiObject === apiTab) {\n\t\t\t\t\treturn tab;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tprivate _findExtHostTabGroupFromApi(\n\t\tapiTabGroup: vscode.TabGroup,\n\t): ExtHostEditorTabGroup | undefined {\n\t\treturn this._extHostTabGroups.find(\n\t\t\t(candidate) => candidate.apiObject === apiTabGroup,\n\t\t);\n\t}\n\n\tprivate async _closeTabs(\n\t\ttabs: vscode.Tab[],\n\t\tpreserveFocus?: boolean,\n\t): Promise<boolean> {\n\t\tconst extHostTabIds: string[] = [];\n\t\tfor (const tab of tabs) {\n\t\t\tconst extHostTab = this._findExtHostTabFromApi(tab);\n\t\t\tif (!extHostTab) {\n\t\t\t\tthrow new Error(\"Tab close: Invalid tab not found!\");\n\t\t\t}\n\t\t\textHostTabIds.push(extHostTab.tabId);\n\t\t}\n\t\treturn this._proxy.$closeTab(extHostTabIds, preserveFocus);\n\t}\n\n\tprivate async _closeGroups(\n\t\tgroups: vscode.TabGroup[],\n\t\tpreserverFoucs?: boolean,\n\t): Promise<boolean> {\n\t\tconst extHostGroupIds: number[] = [];\n\t\tfor (const group of groups) {\n\t\t\tconst extHostGroup = this._findExtHostTabGroupFromApi(group);\n\t\t\tif (!extHostGroup) {\n\t\t\t\tthrow new Error(\"Group close: Invalid group not found!\");\n\t\t\t}\n\t\t\textHostGroupIds.push(extHostGroup.groupId);\n\t\t}\n\t\treturn this._proxy.$closeGroup(extHostGroupIds, preserverFoucs);\n\t}\n}\n\n//#region Utils\nfunction isTabGroup(obj: unknown): obj is vscode.TabGroup {\n\tconst tabGroup = obj as vscode.TabGroup;\n\tif (tabGroup.tabs !== undefined) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n//#endregion\n"],
  "mappings": "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",
  "names": ["tab", "group"]
}
