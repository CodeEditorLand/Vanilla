{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostSecretState.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from \"../../../base/common/event.js\";\nimport { createDecorator } from \"../../../platform/instantiation/common/instantiation.js\";\nimport {\n\ttype ExtHostSecretStateShape,\n\tMainContext,\n\ttype MainThreadSecretStateShape,\n} from \"./extHost.protocol.js\";\nimport type { IExtHostRpcService } from \"./extHostRpcService.js\";\n\nexport class ExtHostSecretState implements ExtHostSecretStateShape {\n\tprivate _proxy: MainThreadSecretStateShape;\n\tprivate _onDidChangePassword = new Emitter<{\n\t\textensionId: string;\n\t\tkey: string;\n\t}>();\n\treadonly onDidChangePassword = this._onDidChangePassword.event;\n\n\tconstructor(mainContext: IExtHostRpcService) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadSecretState);\n\t}\n\n\tasync $onDidChangePassword(e: {\n\t\textensionId: string;\n\t\tkey: string;\n\t}): Promise<void> {\n\t\tthis._onDidChangePassword.fire(e);\n\t}\n\n\tget(extensionId: string, key: string): Promise<string | undefined> {\n\t\treturn this._proxy.$getPassword(extensionId, key);\n\t}\n\n\tstore(extensionId: string, key: string, value: string): Promise<void> {\n\t\treturn this._proxy.$setPassword(extensionId, key, value);\n\t}\n\n\tdelete(extensionId: string, key: string): Promise<void> {\n\t\treturn this._proxy.$deletePassword(extensionId, key);\n\t}\n}\n\nexport interface IExtHostSecretState extends ExtHostSecretState {}\nexport const IExtHostSecretState = createDecorator<IExtHostSecretState>(\n\t\"IExtHostSecretState\",\n);\n"],
  "mappings": ";;AAKA,SAAS,eAAe;AACxB,SAAS,uBAAuB;AAChC;AAAA,EAEC;AAAA,OAEM;AAGA,MAAM,mBAAsD;AAAA,EAdnE,OAcmE;AAAA;AAAA;AAAA,EAC1D;AAAA,EACA,uBAAuB,IAAI,QAGhC;AAAA,EACM,sBAAsB,KAAK,qBAAqB;AAAA,EAEzD,YAAY,aAAiC;AAC5C,SAAK,SAAS,YAAY,SAAS,YAAY,qBAAqB;AAAA,EACrE;AAAA,EAEA,MAAM,qBAAqB,GAGT;AACjB,SAAK,qBAAqB,KAAK,CAAC;AAAA,EACjC;AAAA,EAEA,IAAI,aAAqB,KAA0C;AAClE,WAAO,KAAK,OAAO,aAAa,aAAa,GAAG;AAAA,EACjD;AAAA,EAEA,MAAM,aAAqB,KAAa,OAA8B;AACrE,WAAO,KAAK,OAAO,aAAa,aAAa,KAAK,KAAK;AAAA,EACxD;AAAA,EAEA,OAAO,aAAqB,KAA4B;AACvD,WAAO,KAAK,OAAO,gBAAgB,aAAa,GAAG;AAAA,EACpD;AACD;AAGO,MAAM,sBAAsB;AAAA,EAClC;AACD;",
  "names": []
}
