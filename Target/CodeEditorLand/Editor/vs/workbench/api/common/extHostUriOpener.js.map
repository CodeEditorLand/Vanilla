{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostUriOpener.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type * as vscode from \"vscode\";\nimport type { CancellationToken } from \"../../../base/common/cancellation.js\";\nimport { toDisposable } from \"../../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../../base/common/network.js\";\nimport { URI, type UriComponents } from \"../../../base/common/uri.js\";\nimport type * as languages from \"../../../editor/common/languages.js\";\nimport type { ExtensionIdentifier } from \"../../../platform/extensions/common/extensions.js\";\nimport {\n\ttype ExtHostUriOpenersShape,\n\ttype IMainContext,\n\tMainContext,\n\ttype MainThreadUriOpenersShape,\n} from \"./extHost.protocol.js\";\n\nexport class ExtHostUriOpeners implements ExtHostUriOpenersShape {\n\tprivate static readonly supportedSchemes = new Set<string>([\n\t\tSchemas.http,\n\t\tSchemas.https,\n\t]);\n\n\tprivate readonly _proxy: MainThreadUriOpenersShape;\n\n\tprivate readonly _openers = new Map<string, vscode.ExternalUriOpener>();\n\n\tconstructor(mainContext: IMainContext) {\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadUriOpeners);\n\t}\n\n\tregisterExternalUriOpener(\n\t\textensionId: ExtensionIdentifier,\n\t\tid: string,\n\t\topener: vscode.ExternalUriOpener,\n\t\tmetadata: vscode.ExternalUriOpenerMetadata,\n\t): vscode.Disposable {\n\t\tif (this._openers.has(id)) {\n\t\t\tthrow new Error(`Opener with id '${id}' already registered`);\n\t\t}\n\n\t\tconst invalidScheme = metadata.schemes.find(\n\t\t\t(scheme) => !ExtHostUriOpeners.supportedSchemes.has(scheme),\n\t\t);\n\t\tif (invalidScheme) {\n\t\t\tthrow new Error(\n\t\t\t\t`Scheme '${invalidScheme}' is not supported. Only http and https are currently supported.`,\n\t\t\t);\n\t\t}\n\n\t\tthis._openers.set(id, opener);\n\t\tthis._proxy.$registerUriOpener(\n\t\t\tid,\n\t\t\tmetadata.schemes,\n\t\t\textensionId,\n\t\t\tmetadata.label,\n\t\t);\n\n\t\treturn toDisposable(() => {\n\t\t\tthis._openers.delete(id);\n\t\t\tthis._proxy.$unregisterUriOpener(id);\n\t\t});\n\t}\n\n\tasync $canOpenUri(\n\t\tid: string,\n\t\turiComponents: UriComponents,\n\t\ttoken: CancellationToken,\n\t): Promise<languages.ExternalUriOpenerPriority> {\n\t\tconst opener = this._openers.get(id);\n\t\tif (!opener) {\n\t\t\tthrow new Error(`Unknown opener with id: ${id}`);\n\t\t}\n\n\t\tconst uri = URI.revive(uriComponents);\n\t\treturn opener.canOpenExternalUri(uri, token);\n\t}\n\n\tasync $openUri(\n\t\tid: string,\n\t\tcontext: { resolvedUri: UriComponents; sourceUri: UriComponents },\n\t\ttoken: CancellationToken,\n\t): Promise<void> {\n\t\tconst opener = this._openers.get(id);\n\t\tif (!opener) {\n\t\t\tthrow new Error(`Unknown opener id: '${id}'`);\n\t\t}\n\n\t\treturn opener.openExternalUri(\n\t\t\tURI.revive(context.resolvedUri),\n\t\t\t{\n\t\t\t\tsourceUri: URI.revive(context.sourceUri),\n\t\t\t},\n\t\t\ttoken,\n\t\t);\n\t}\n}\n"],
  "mappings": ";;AAOA,SAAS,oBAAoB;AAC7B,SAAS,eAAe;AACxB,SAAS,WAA+B;AAGxC;AAAA,EAGC;AAAA,OAEM;AAEA,MAAM,kBAAoD;AAAA,EAnBjE,OAmBiE;AAAA;AAAA;AAAA,EAChE,OAAwB,mBAAmB,oBAAI,IAAY;AAAA,IAC1D,QAAQ;AAAA,IACR,QAAQ;AAAA,EACT,CAAC;AAAA,EAEgB;AAAA,EAEA,WAAW,oBAAI,IAAsC;AAAA,EAEtE,YAAY,aAA2B;AACtC,SAAK,SAAS,YAAY,SAAS,YAAY,oBAAoB;AAAA,EACpE;AAAA,EAEA,0BACC,aACA,IACA,QACA,UACoB;AACpB,QAAI,KAAK,SAAS,IAAI,EAAE,GAAG;AAC1B,YAAM,IAAI,MAAM,mBAAmB,EAAE,sBAAsB;AAAA,IAC5D;AAEA,UAAM,gBAAgB,SAAS,QAAQ;AAAA,MACtC,CAAC,WAAW,CAAC,kBAAkB,iBAAiB,IAAI,MAAM;AAAA,IAC3D;AACA,QAAI,eAAe;AAClB,YAAM,IAAI;AAAA,QACT,WAAW,aAAa;AAAA,MACzB;AAAA,IACD;AAEA,SAAK,SAAS,IAAI,IAAI,MAAM;AAC5B,SAAK,OAAO;AAAA,MACX;AAAA,MACA,SAAS;AAAA,MACT;AAAA,MACA,SAAS;AAAA,IACV;AAEA,WAAO,aAAa,MAAM;AACzB,WAAK,SAAS,OAAO,EAAE;AACvB,WAAK,OAAO,qBAAqB,EAAE;AAAA,IACpC,CAAC;AAAA,EACF;AAAA,EAEA,MAAM,YACL,IACA,eACA,OAC+C;AAC/C,UAAM,SAAS,KAAK,SAAS,IAAI,EAAE;AACnC,QAAI,CAAC,QAAQ;AACZ,YAAM,IAAI,MAAM,2BAA2B,EAAE,EAAE;AAAA,IAChD;AAEA,UAAM,MAAM,IAAI,OAAO,aAAa;AACpC,WAAO,OAAO,mBAAmB,KAAK,KAAK;AAAA,EAC5C;AAAA,EAEA,MAAM,SACL,IACA,SACA,OACgB;AAChB,UAAM,SAAS,KAAK,SAAS,IAAI,EAAE;AACnC,QAAI,CAAC,QAAQ;AACZ,YAAM,IAAI,MAAM,uBAAuB,EAAE,GAAG;AAAA,IAC7C;AAEA,WAAO,OAAO;AAAA,MACb,IAAI,OAAO,QAAQ,WAAW;AAAA,MAC9B;AAAA,QACC,WAAW,IAAI,OAAO,QAAQ,SAAS;AAAA,MACxC;AAAA,MACA;AAAA,IACD;AAAA,EACD;AACD;",
  "names": []
}
