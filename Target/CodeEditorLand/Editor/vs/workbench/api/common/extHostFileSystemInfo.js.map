{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostFileSystemInfo.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Schemas } from \"../../../base/common/network.js\";\nimport { ExtUri, type IExtUri } from \"../../../base/common/resources.js\";\nimport type { UriComponents } from \"../../../base/common/uri.js\";\nimport { FileSystemProviderCapabilities } from \"../../../platform/files/common/files.js\";\nimport { createDecorator } from \"../../../platform/instantiation/common/instantiation.js\";\nimport type { ExtHostFileSystemInfoShape } from \"./extHost.protocol.js\";\n\nexport class ExtHostFileSystemInfo implements ExtHostFileSystemInfoShape {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _systemSchemes = new Set(Object.keys(Schemas));\n\tprivate readonly _providerInfo = new Map<string, number>();\n\n\treadonly extUri: IExtUri;\n\n\tconstructor() {\n\t\tthis.extUri = new ExtUri((uri) => {\n\t\t\tconst capabilities = this._providerInfo.get(uri.scheme);\n\t\t\tif (capabilities === undefined) {\n\t\t\t\t// default: not ignore\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (\n\t\t\t\tcapabilities & FileSystemProviderCapabilities.PathCaseSensitive\n\t\t\t) {\n\t\t\t\t// configured as case sensitive\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t}\n\n\t$acceptProviderInfos(\n\t\turi: UriComponents,\n\t\tcapabilities: number | null,\n\t): void {\n\t\tif (capabilities === null) {\n\t\t\tthis._providerInfo.delete(uri.scheme);\n\t\t} else {\n\t\t\tthis._providerInfo.set(uri.scheme, capabilities);\n\t\t}\n\t}\n\n\tisFreeScheme(scheme: string): boolean {\n\t\treturn (\n\t\t\t!this._providerInfo.has(scheme) && !this._systemSchemes.has(scheme)\n\t\t);\n\t}\n\n\tgetCapabilities(scheme: string): number | undefined {\n\t\treturn this._providerInfo.get(scheme);\n\t}\n}\n\nexport interface IExtHostFileSystemInfo extends ExtHostFileSystemInfo {\n\treadonly extUri: IExtUri;\n}\nexport const IExtHostFileSystemInfo = createDecorator<IExtHostFileSystemInfo>(\n\t\"IExtHostFileSystemInfo\",\n);\n"],
  "mappings": ";;AAKA,SAAS,eAAe;AACxB,SAAS,cAA4B;AAErC,SAAS,sCAAsC;AAC/C,SAAS,uBAAuB;AAGzB,MAAM,sBAA4D;AAAA,EAZzE,OAYyE;AAAA;AAAA;AAAA,EAGvD,iBAAiB,IAAI,IAAI,OAAO,KAAK,OAAO,CAAC;AAAA,EAC7C,gBAAgB,oBAAI,IAAoB;AAAA,EAEhD;AAAA,EAET,cAAc;AACb,SAAK,SAAS,IAAI,OAAO,CAAC,QAAQ;AACjC,YAAM,eAAe,KAAK,cAAc,IAAI,IAAI,MAAM;AACtD,UAAI,iBAAiB,QAAW;AAE/B,eAAO;AAAA,MACR;AACA,UACC,eAAe,+BAA+B,mBAC7C;AAED,eAAO;AAAA,MACR;AACA,aAAO;AAAA,IACR,CAAC;AAAA,EACF;AAAA,EAEA,qBACC,KACA,cACO;AACP,QAAI,iBAAiB,MAAM;AAC1B,WAAK,cAAc,OAAO,IAAI,MAAM;AAAA,IACrC,OAAO;AACN,WAAK,cAAc,IAAI,IAAI,QAAQ,YAAY;AAAA,IAChD;AAAA,EACD;AAAA,EAEA,aAAa,QAAyB;AACrC,WACC,CAAC,KAAK,cAAc,IAAI,MAAM,KAAK,CAAC,KAAK,eAAe,IAAI,MAAM;AAAA,EAEpE;AAAA,EAEA,gBAAgB,QAAoC;AACnD,WAAO,KAAK,cAAc,IAAI,MAAM;AAAA,EACrC;AACD;AAKO,MAAM,yBAAyB;AAAA,EACrC;AACD;",
  "names": []
}
