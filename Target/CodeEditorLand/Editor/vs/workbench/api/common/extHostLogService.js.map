{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostLogService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from \"../../../nls.js\";\nimport { ILoggerService } from \"../../../platform/log/common/log.js\";\nimport { LogService } from \"../../../platform/log/common/logService.js\";\nimport { IExtHostInitDataService } from \"./extHostInitDataService.js\";\n\nexport class ExtHostLogService extends LogService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\tisWorker: boolean,\n\t\t@ILoggerService loggerService: ILoggerService,\n\t\t@IExtHostInitDataService initData: IExtHostInitDataService,\n\t) {\n\t\tconst id = initData.remote.isRemote\n\t\t\t? \"remoteexthost\"\n\t\t\t: isWorker\n\t\t\t\t? \"workerexthost\"\n\t\t\t\t: \"exthost\";\n\t\tconst name = initData.remote.isRemote\n\t\t\t? localize(\"remote\", \"Extension Host (Remote)\")\n\t\t\t: isWorker\n\t\t\t\t? localize(\"worker\", \"Extension Host (Worker)\")\n\t\t\t\t: localize(\"local\", \"Extension Host\");\n\t\tsuper(loggerService.createLogger(id, { name }));\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,gBAAgB;AACzB,SAAS,sBAAsB;AAC/B,SAAS,kBAAkB;AAC3B,SAAS,+BAA+B;AAEjC,IAAM,oBAAN,cAAgC,WAAW;AAAA,EAVlD,OAUkD;AAAA;AAAA;AAAA,EAGjD,YACC,UACgB,eACS,UACxB;AACD,UAAM,KAAK,SAAS,OAAO,WACxB,kBACA,WACC,kBACA;AACJ,UAAM,OAAO,SAAS,OAAO,WAC1B,SAAS,UAAU,yBAAyB,IAC5C,WACC,SAAS,UAAU,yBAAyB,IAC5C,SAAS,SAAS,gBAAgB;AACtC,UAAM,cAAc,aAAa,IAAI,EAAE,KAAK,CAAC,CAAC;AAAA,EAC/C;AACD;AApBa,oBAAN;AAAA,EAKJ;AAAA,EACA;AAAA,GANU;",
  "names": []
}
