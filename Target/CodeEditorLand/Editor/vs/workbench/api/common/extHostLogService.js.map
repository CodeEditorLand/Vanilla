{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostLogService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from '../../../nls.js';\nimport { ILoggerService } from '../../../platform/log/common/log.js';\nimport { LogService } from '../../../platform/log/common/logService.js';\nimport { IExtHostInitDataService } from './extHostInitDataService.js';\n\nexport class ExtHostLogService extends LogService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\tisWorker: boolean,\n\t\t@ILoggerService loggerService: ILoggerService,\n\t\t@IExtHostInitDataService initData: IExtHostInitDataService,\n\t) {\n\t\tconst id = initData.remote.isRemote ? 'remoteexthost' : isWorker ? 'workerexthost' : 'exthost';\n\t\tconst name = initData.remote.isRemote ? localize('remote', \"Extension Host (Remote)\") : isWorker ? localize('worker', \"Extension Host (Worker)\") : localize('local', \"Extension Host\");\n\t\tsuper(loggerService.createLogger(id, { name }));\n\t}\n\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,gBAAgB;AACzB,SAAS,sBAAsB;AAC/B,SAAS,kBAAkB;AAC3B,SAAS,+BAA+B;AAEjC,IAAM,oBAAN,cAAgC,WAAW;AAAA,EAVlD,OAUkD;AAAA;AAAA;AAAA,EAIjD,YACC,UACgB,eACS,UACxB;AACD,UAAM,KAAK,SAAS,OAAO,WAAW,kBAAkB,WAAW,kBAAkB;AACrF,UAAM,OAAO,SAAS,OAAO,WAAW,SAAS,UAAU,yBAAyB,IAAI,WAAW,SAAS,UAAU,yBAAyB,IAAI,SAAS,SAAS,gBAAgB;AACrL,UAAM,cAAc,aAAa,IAAI,EAAE,KAAK,CAAC,CAAC;AAAA,EAC/C;AAED;AAda,oBAAN;AAAA,EAMJ;AAAA,EACA;AAAA,GAPU;",
  "names": []
}
