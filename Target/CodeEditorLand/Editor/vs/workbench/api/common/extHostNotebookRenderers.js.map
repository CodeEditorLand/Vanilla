{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostNotebookRenderers.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from '../../../base/common/event.js';\nimport { IExtensionDescription } from '../../../platform/extensions/common/extensions.js';\nimport { ExtHostNotebookRenderersShape, IMainContext, MainContext, MainThreadNotebookRenderersShape } from './extHost.protocol.js';\nimport { ExtHostNotebookController } from './extHostNotebook.js';\nimport { ExtHostNotebookEditor } from './extHostNotebookEditor.js';\nimport * as vscode from 'vscode';\n\n\nexport class ExtHostNotebookRenderers implements ExtHostNotebookRenderersShape {\n\tprivate readonly _rendererMessageEmitters = new Map<string /* rendererId */, Emitter<{ editor: vscode.NotebookEditor; message: any }>>();\n\tprivate readonly proxy: MainThreadNotebookRenderersShape;\n\n\tconstructor(mainContext: IMainContext, private readonly _extHostNotebook: ExtHostNotebookController) {\n\t\tthis.proxy = mainContext.getProxy(MainContext.MainThreadNotebookRenderers);\n\t}\n\n\tpublic $postRendererMessage(editorId: string, rendererId: string, message: unknown): void {\n\t\tconst editor = this._extHostNotebook.getEditorById(editorId);\n\t\tthis._rendererMessageEmitters.get(rendererId)?.fire({ editor: editor.apiEditor, message });\n\t}\n\n\tpublic createRendererMessaging(manifest: IExtensionDescription, rendererId: string): vscode.NotebookRendererMessaging {\n\t\tif (!manifest.contributes?.notebookRenderer?.some(r => r.id === rendererId)) {\n\t\t\tthrow new Error(`Extensions may only call createRendererMessaging() for renderers they contribute (got ${rendererId})`);\n\t\t}\n\n\t\tconst messaging: vscode.NotebookRendererMessaging = {\n\t\t\tonDidReceiveMessage: (listener, thisArg, disposables) => {\n\t\t\t\treturn this.getOrCreateEmitterFor(rendererId).event(listener, thisArg, disposables);\n\t\t\t},\n\t\t\tpostMessage: (message, editorOrAlias) => {\n\t\t\t\tif (ExtHostNotebookEditor.apiEditorsToExtHost.has(message)) { // back compat for swapped args\n\t\t\t\t\t[message, editorOrAlias] = [editorOrAlias, message];\n\t\t\t\t}\n\n\t\t\t\tconst extHostEditor = editorOrAlias && ExtHostNotebookEditor.apiEditorsToExtHost.get(editorOrAlias);\n\t\t\t\treturn this.proxy.$postMessage(extHostEditor?.id, rendererId, message);\n\t\t\t},\n\t\t};\n\n\t\treturn messaging;\n\t}\n\n\tprivate getOrCreateEmitterFor(rendererId: string) {\n\t\tlet emitter = this._rendererMessageEmitters.get(rendererId);\n\t\tif (emitter) {\n\t\t\treturn emitter;\n\t\t}\n\n\t\temitter = new Emitter({\n\t\t\tonDidRemoveLastListener: () => {\n\t\t\t\temitter?.dispose();\n\t\t\t\tthis._rendererMessageEmitters.delete(rendererId);\n\t\t\t}\n\t\t});\n\n\t\tthis._rendererMessageEmitters.set(rendererId, emitter);\n\n\t\treturn emitter;\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,eAAe;AACxB,SAAS,6BAA6B;AACtC,SAAS,+BAA+B,cAAc,aAAa,wCAAwC;AAC3G,SAAS,iCAAiC;AAC1C,SAAS,6BAA6B;AACtC,YAAY,YAAY;AAGjB,MAAM,yBAAkE;AAAA,EAI9E,YAAY,aAA4C,kBAA6C;AAA7C;AACvD,SAAK,QAAQ,YAAY,SAAS,YAAY,2BAA2B;AAAA,EAC1E;AAAA,EAnBD,OAa+E;AAAA;AAAA;AAAA,EAC7D,2BAA2B,oBAAI,IAAuF;AAAA,EACtH;AAAA,EAMV,qBAAqB,UAAkB,YAAoB,SAAwB;AACzF,UAAM,SAAS,KAAK,iBAAiB,cAAc,QAAQ;AAC3D,SAAK,yBAAyB,IAAI,UAAU,GAAG,KAAK,EAAE,QAAQ,OAAO,WAAW,QAAQ,CAAC;AAAA,EAC1F;AAAA,EAEO,wBAAwB,UAAiC,YAAsD;AACrH,QAAI,CAAC,SAAS,aAAa,kBAAkB,KAAK,OAAK,EAAE,OAAO,UAAU,GAAG;AAC5E,YAAM,IAAI,MAAM,yFAAyF,UAAU,GAAG;AAAA,IACvH;AAEA,UAAM,YAA8C;AAAA,MACnD,qBAAqB,wBAAC,UAAU,SAAS,gBAAgB;AACxD,eAAO,KAAK,sBAAsB,UAAU,EAAE,MAAM,UAAU,SAAS,WAAW;AAAA,MACnF,GAFqB;AAAA,MAGrB,aAAa,wBAAC,SAAS,kBAAkB;AACxC,YAAI,sBAAsB,oBAAoB,IAAI,OAAO,GAAG;AAC3D,WAAC,SAAS,aAAa,IAAI,CAAC,eAAe,OAAO;AAAA,QACnD;AAEA,cAAM,gBAAgB,iBAAiB,sBAAsB,oBAAoB,IAAI,aAAa;AAClG,eAAO,KAAK,MAAM,aAAa,eAAe,IAAI,YAAY,OAAO;AAAA,MACtE,GAPa;AAAA,IAQd;AAEA,WAAO;AAAA,EACR;AAAA,EAEQ,sBAAsB,YAAoB;AACjD,QAAI,UAAU,KAAK,yBAAyB,IAAI,UAAU;AAC1D,QAAI,SAAS;AACZ,aAAO;AAAA,IACR;AAEA,cAAU,IAAI,QAAQ;AAAA,MACrB,yBAAyB,6BAAM;AAC9B,iBAAS,QAAQ;AACjB,aAAK,yBAAyB,OAAO,UAAU;AAAA,MAChD,GAHyB;AAAA,IAI1B,CAAC;AAED,SAAK,yBAAyB,IAAI,YAAY,OAAO;AAErD,WAAO;AAAA,EACR;AACD;",
  "names": []
}
