{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostNotebookRenderers.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type * as vscode from \"vscode\";\nimport { Emitter } from \"../../../base/common/event.js\";\nimport type { IExtensionDescription } from \"../../../platform/extensions/common/extensions.js\";\nimport {\n\ttype ExtHostNotebookRenderersShape,\n\ttype IMainContext,\n\tMainContext,\n\ttype MainThreadNotebookRenderersShape,\n} from \"./extHost.protocol.js\";\nimport type { ExtHostNotebookController } from \"./extHostNotebook.js\";\nimport { ExtHostNotebookEditor } from \"./extHostNotebookEditor.js\";\n\nexport class ExtHostNotebookRenderers implements ExtHostNotebookRenderersShape {\n\tprivate readonly _rendererMessageEmitters = new Map<\n\t\tstring /* rendererId */,\n\t\tEmitter<{ editor: vscode.NotebookEditor; message: any }>\n\t>();\n\tprivate readonly proxy: MainThreadNotebookRenderersShape;\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\tprivate readonly _extHostNotebook: ExtHostNotebookController,\n\t) {\n\t\tthis.proxy = mainContext.getProxy(\n\t\t\tMainContext.MainThreadNotebookRenderers,\n\t\t);\n\t}\n\n\tpublic $postRendererMessage(\n\t\teditorId: string,\n\t\trendererId: string,\n\t\tmessage: unknown,\n\t): void {\n\t\tconst editor = this._extHostNotebook.getEditorById(editorId);\n\t\tthis._rendererMessageEmitters\n\t\t\t.get(rendererId)\n\t\t\t?.fire({ editor: editor.apiEditor, message });\n\t}\n\n\tpublic createRendererMessaging(\n\t\tmanifest: IExtensionDescription,\n\t\trendererId: string,\n\t): vscode.NotebookRendererMessaging {\n\t\tif (\n\t\t\t!manifest.contributes?.notebookRenderer?.some(\n\t\t\t\t(r) => r.id === rendererId,\n\t\t\t)\n\t\t) {\n\t\t\tthrow new Error(\n\t\t\t\t`Extensions may only call createRendererMessaging() for renderers they contribute (got ${rendererId})`,\n\t\t\t);\n\t\t}\n\n\t\tconst messaging: vscode.NotebookRendererMessaging = {\n\t\t\tonDidReceiveMessage: (listener, thisArg, disposables) => {\n\t\t\t\treturn this.getOrCreateEmitterFor(rendererId).event(\n\t\t\t\t\tlistener,\n\t\t\t\t\tthisArg,\n\t\t\t\t\tdisposables,\n\t\t\t\t);\n\t\t\t},\n\t\t\tpostMessage: (message, editorOrAlias) => {\n\t\t\t\tif (ExtHostNotebookEditor.apiEditorsToExtHost.has(message)) {\n\t\t\t\t\t// back compat for swapped args\n\t\t\t\t\t[message, editorOrAlias] = [editorOrAlias, message];\n\t\t\t\t}\n\n\t\t\t\tconst extHostEditor =\n\t\t\t\t\teditorOrAlias &&\n\t\t\t\t\tExtHostNotebookEditor.apiEditorsToExtHost.get(\n\t\t\t\t\t\teditorOrAlias,\n\t\t\t\t\t);\n\t\t\t\treturn this.proxy.$postMessage(\n\t\t\t\t\textHostEditor?.id,\n\t\t\t\t\trendererId,\n\t\t\t\t\tmessage,\n\t\t\t\t);\n\t\t\t},\n\t\t};\n\n\t\treturn messaging;\n\t}\n\n\tprivate getOrCreateEmitterFor(rendererId: string) {\n\t\tlet emitter = this._rendererMessageEmitters.get(rendererId);\n\t\tif (emitter) {\n\t\t\treturn emitter;\n\t\t}\n\n\t\temitter = new Emitter({\n\t\t\tonDidRemoveLastListener: () => {\n\t\t\t\temitter?.dispose();\n\t\t\t\tthis._rendererMessageEmitters.delete(rendererId);\n\t\t\t},\n\t\t});\n\n\t\tthis._rendererMessageEmitters.set(rendererId, emitter);\n\n\t\treturn emitter;\n\t}\n}\n"],
  "mappings": ";;AAMA,SAAS,eAAe;AAExB;AAAA,EAGC;AAAA,OAEM;AAEP,SAAS,6BAA6B;AAE/B,MAAM,yBAAkE;AAAA,EAO9E,YACC,aACiB,kBAChB;AADgB;AAEjB,SAAK,QAAQ,YAAY;AAAA,MACxB,YAAY;AAAA,IACb;AAAA,EACD;AAAA,EA/BD,OAiB+E;AAAA;AAAA;AAAA,EAC7D,2BAA2B,oBAAI,IAG9C;AAAA,EACe;AAAA,EAWV,qBACN,UACA,YACA,SACO;AACP,UAAM,SAAS,KAAK,iBAAiB,cAAc,QAAQ;AAC3D,SAAK,yBACH,IAAI,UAAU,GACb,KAAK,EAAE,QAAQ,OAAO,WAAW,QAAQ,CAAC;AAAA,EAC9C;AAAA,EAEO,wBACN,UACA,YACmC;AACnC,QACC,CAAC,SAAS,aAAa,kBAAkB;AAAA,MACxC,CAAC,MAAM,EAAE,OAAO;AAAA,IACjB,GACC;AACD,YAAM,IAAI;AAAA,QACT,yFAAyF,UAAU;AAAA,MACpG;AAAA,IACD;AAEA,UAAM,YAA8C;AAAA,MACnD,qBAAqB,wBAAC,UAAU,SAAS,gBAAgB;AACxD,eAAO,KAAK,sBAAsB,UAAU,EAAE;AAAA,UAC7C;AAAA,UACA;AAAA,UACA;AAAA,QACD;AAAA,MACD,GANqB;AAAA,MAOrB,aAAa,wBAAC,SAAS,kBAAkB;AACxC,YAAI,sBAAsB,oBAAoB,IAAI,OAAO,GAAG;AAE3D,WAAC,SAAS,aAAa,IAAI,CAAC,eAAe,OAAO;AAAA,QACnD;AAEA,cAAM,gBACL,iBACA,sBAAsB,oBAAoB;AAAA,UACzC;AAAA,QACD;AACD,eAAO,KAAK,MAAM;AAAA,UACjB,eAAe;AAAA,UACf;AAAA,UACA;AAAA,QACD;AAAA,MACD,GAhBa;AAAA,IAiBd;AAEA,WAAO;AAAA,EACR;AAAA,EAEQ,sBAAsB,YAAoB;AACjD,QAAI,UAAU,KAAK,yBAAyB,IAAI,UAAU;AAC1D,QAAI,SAAS;AACZ,aAAO;AAAA,IACR;AAEA,cAAU,IAAI,QAAQ;AAAA,MACrB,yBAAyB,6BAAM;AAC9B,iBAAS,QAAQ;AACjB,aAAK,yBAAyB,OAAO,UAAU;AAAA,MAChD,GAHyB;AAAA,IAI1B,CAAC;AAED,SAAK,yBAAyB,IAAI,YAAY,OAAO;AAErD,WAAO;AAAA,EACR;AACD;",
  "names": []
}
