{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/api/common/extHostTextEditors.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type * as vscode from \"vscode\";\nimport * as arrays from \"../../../base/common/arrays.js\";\nimport { Emitter, type Event } from \"../../../base/common/event.js\";\nimport { Disposable } from \"../../../base/common/lifecycle.js\";\nimport type { IExtensionDescription } from \"../../../platform/extensions/common/extensions.js\";\nimport {\n\ttype ExtHostEditorsShape,\n\ttype IEditorPropertiesChangeData,\n\ttype IMainContext,\n\ttype ITextDocumentShowOptions,\n\ttype ITextEditorPositionData,\n\tMainContext,\n\ttype MainThreadTextEditorsShape,\n} from \"./extHost.protocol.js\";\nimport type { ExtHostDocumentsAndEditors } from \"./extHostDocumentsAndEditors.js\";\nimport {\n\ttype ExtHostTextEditor,\n\tTextEditorDecorationType,\n} from \"./extHostTextEditor.js\";\nimport * as TypeConverters from \"./extHostTypeConverters.js\";\nimport { TextEditorSelectionChangeKind } from \"./extHostTypes.js\";\n\nexport class ExtHostEditors extends Disposable implements ExtHostEditorsShape {\n\tprivate readonly _onDidChangeTextEditorSelection =\n\t\tnew Emitter<vscode.TextEditorSelectionChangeEvent>();\n\tprivate readonly _onDidChangeTextEditorOptions =\n\t\tnew Emitter<vscode.TextEditorOptionsChangeEvent>();\n\tprivate readonly _onDidChangeTextEditorVisibleRanges =\n\t\tnew Emitter<vscode.TextEditorVisibleRangesChangeEvent>();\n\tprivate readonly _onDidChangeTextEditorViewColumn =\n\t\tnew Emitter<vscode.TextEditorViewColumnChangeEvent>();\n\tprivate readonly _onDidChangeActiveTextEditor = new Emitter<\n\t\tvscode.TextEditor | undefined\n\t>();\n\tprivate readonly _onDidChangeVisibleTextEditors = new Emitter<\n\t\treadonly vscode.TextEditor[]\n\t>();\n\n\treadonly onDidChangeTextEditorSelection: Event<vscode.TextEditorSelectionChangeEvent> =\n\t\tthis._onDidChangeTextEditorSelection.event;\n\treadonly onDidChangeTextEditorOptions: Event<vscode.TextEditorOptionsChangeEvent> =\n\t\tthis._onDidChangeTextEditorOptions.event;\n\treadonly onDidChangeTextEditorVisibleRanges: Event<vscode.TextEditorVisibleRangesChangeEvent> =\n\t\tthis._onDidChangeTextEditorVisibleRanges.event;\n\treadonly onDidChangeTextEditorViewColumn: Event<vscode.TextEditorViewColumnChangeEvent> =\n\t\tthis._onDidChangeTextEditorViewColumn.event;\n\treadonly onDidChangeActiveTextEditor: Event<vscode.TextEditor | undefined> =\n\t\tthis._onDidChangeActiveTextEditor.event;\n\treadonly onDidChangeVisibleTextEditors: Event<\n\t\treadonly vscode.TextEditor[]\n\t> = this._onDidChangeVisibleTextEditors.event;\n\n\tprivate readonly _proxy: MainThreadTextEditorsShape;\n\n\tconstructor(\n\t\tmainContext: IMainContext,\n\t\tprivate readonly _extHostDocumentsAndEditors: ExtHostDocumentsAndEditors,\n\t) {\n\t\tsuper();\n\t\tthis._proxy = mainContext.getProxy(MainContext.MainThreadTextEditors);\n\n\t\tthis._register(\n\t\t\tthis._extHostDocumentsAndEditors.onDidChangeVisibleTextEditors(\n\t\t\t\t(e) => this._onDidChangeVisibleTextEditors.fire(e),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis._extHostDocumentsAndEditors.onDidChangeActiveTextEditor((e) =>\n\t\t\t\tthis._onDidChangeActiveTextEditor.fire(e),\n\t\t\t),\n\t\t);\n\t}\n\n\tgetActiveTextEditor(): vscode.TextEditor | undefined {\n\t\treturn this._extHostDocumentsAndEditors.activeEditor();\n\t}\n\n\tgetVisibleTextEditors(): vscode.TextEditor[];\n\tgetVisibleTextEditors(internal: true): ExtHostTextEditor[];\n\tgetVisibleTextEditors(\n\t\tinternal?: true,\n\t): ExtHostTextEditor[] | vscode.TextEditor[] {\n\t\tconst editors = this._extHostDocumentsAndEditors.allEditors();\n\t\treturn internal ? editors : editors.map((editor) => editor.value);\n\t}\n\n\tshowTextDocument(\n\t\tdocument: vscode.TextDocument,\n\t\tcolumn: vscode.ViewColumn,\n\t\tpreserveFocus: boolean,\n\t): Promise<vscode.TextEditor>;\n\tshowTextDocument(\n\t\tdocument: vscode.TextDocument,\n\t\toptions: {\n\t\t\tcolumn: vscode.ViewColumn;\n\t\t\tpreserveFocus: boolean;\n\t\t\tpinned: boolean;\n\t\t},\n\t): Promise<vscode.TextEditor>;\n\tshowTextDocument(\n\t\tdocument: vscode.TextDocument,\n\t\tcolumnOrOptions:\n\t\t\t| vscode.ViewColumn\n\t\t\t| vscode.TextDocumentShowOptions\n\t\t\t| undefined,\n\t\tpreserveFocus?: boolean,\n\t): Promise<vscode.TextEditor>;\n\tasync showTextDocument(\n\t\tdocument: vscode.TextDocument,\n\t\tcolumnOrOptions:\n\t\t\t| vscode.ViewColumn\n\t\t\t| vscode.TextDocumentShowOptions\n\t\t\t| undefined,\n\t\tpreserveFocus?: boolean,\n\t): Promise<vscode.TextEditor> {\n\t\tlet options: ITextDocumentShowOptions;\n\t\tif (typeof columnOrOptions === \"number\") {\n\t\t\toptions = {\n\t\t\t\tposition: TypeConverters.ViewColumn.from(columnOrOptions),\n\t\t\t\tpreserveFocus,\n\t\t\t};\n\t\t} else if (typeof columnOrOptions === \"object\") {\n\t\t\toptions = {\n\t\t\t\tposition: TypeConverters.ViewColumn.from(\n\t\t\t\t\tcolumnOrOptions.viewColumn,\n\t\t\t\t),\n\t\t\t\tpreserveFocus: columnOrOptions.preserveFocus,\n\t\t\t\tselection:\n\t\t\t\t\ttypeof columnOrOptions.selection === \"object\"\n\t\t\t\t\t\t? TypeConverters.Range.from(columnOrOptions.selection)\n\t\t\t\t\t\t: undefined,\n\t\t\t\tpinned:\n\t\t\t\t\ttypeof columnOrOptions.preview === \"boolean\"\n\t\t\t\t\t\t? !columnOrOptions.preview\n\t\t\t\t\t\t: undefined,\n\t\t\t};\n\t\t} else {\n\t\t\toptions = {\n\t\t\t\tpreserveFocus: false,\n\t\t\t};\n\t\t}\n\n\t\tconst editorId = await this._proxy.$tryShowTextDocument(\n\t\t\tdocument.uri,\n\t\t\toptions,\n\t\t);\n\t\tconst editor =\n\t\t\teditorId && this._extHostDocumentsAndEditors.getEditor(editorId);\n\t\tif (editor) {\n\t\t\treturn editor.value;\n\t\t}\n\t\t// we have no editor... having an id means that we had an editor\n\t\t// on the main side and that it isn't the current editor anymore...\n\t\tif (editorId) {\n\t\t\tthrow new Error(\n\t\t\t\t`Could NOT open editor for \"${document.uri.toString()}\" because another editor opened in the meantime.`,\n\t\t\t);\n\t\t} else {\n\t\t\tthrow new Error(\n\t\t\t\t`Could NOT open editor for \"${document.uri.toString()}\".`,\n\t\t\t);\n\t\t}\n\t}\n\n\tcreateTextEditorDecorationType(\n\t\textension: IExtensionDescription,\n\t\toptions: vscode.DecorationRenderOptions,\n\t): vscode.TextEditorDecorationType {\n\t\treturn new TextEditorDecorationType(this._proxy, extension, options)\n\t\t\t.value;\n\t}\n\n\t// --- called from main thread\n\n\t$acceptEditorPropertiesChanged(\n\t\tid: string,\n\t\tdata: IEditorPropertiesChangeData,\n\t): void {\n\t\tconst textEditor = this._extHostDocumentsAndEditors.getEditor(id);\n\t\tif (!textEditor) {\n\t\t\tthrow new Error(\"unknown text editor\");\n\t\t}\n\n\t\t// (1) set all properties\n\t\tif (data.options) {\n\t\t\ttextEditor._acceptOptions(data.options);\n\t\t}\n\t\tif (data.selections) {\n\t\t\tconst selections = data.selections.selections.map(\n\t\t\t\tTypeConverters.Selection.to,\n\t\t\t);\n\t\t\ttextEditor._acceptSelections(selections);\n\t\t}\n\t\tif (data.visibleRanges) {\n\t\t\tconst visibleRanges = arrays.coalesce(\n\t\t\t\tdata.visibleRanges.map(TypeConverters.Range.to),\n\t\t\t);\n\t\t\ttextEditor._acceptVisibleRanges(visibleRanges);\n\t\t}\n\n\t\t// (2) fire change events\n\t\tif (data.options) {\n\t\t\tthis._onDidChangeTextEditorOptions.fire({\n\t\t\t\ttextEditor: textEditor.value,\n\t\t\t\toptions: {\n\t\t\t\t\t...data.options,\n\t\t\t\t\tlineNumbers: TypeConverters.TextEditorLineNumbersStyle.to(\n\t\t\t\t\t\tdata.options.lineNumbers,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tif (data.selections) {\n\t\t\tconst kind = TextEditorSelectionChangeKind.fromValue(\n\t\t\t\tdata.selections.source,\n\t\t\t);\n\t\t\tconst selections = data.selections.selections.map(\n\t\t\t\tTypeConverters.Selection.to,\n\t\t\t);\n\t\t\tthis._onDidChangeTextEditorSelection.fire({\n\t\t\t\ttextEditor: textEditor.value,\n\t\t\t\tselections,\n\t\t\t\tkind,\n\t\t\t});\n\t\t}\n\t\tif (data.visibleRanges) {\n\t\t\tconst visibleRanges = arrays.coalesce(\n\t\t\t\tdata.visibleRanges.map(TypeConverters.Range.to),\n\t\t\t);\n\t\t\tthis._onDidChangeTextEditorVisibleRanges.fire({\n\t\t\t\ttextEditor: textEditor.value,\n\t\t\t\tvisibleRanges,\n\t\t\t});\n\t\t}\n\t}\n\n\t$acceptEditorPositionData(data: ITextEditorPositionData): void {\n\t\tfor (const id in data) {\n\t\t\tconst textEditor = this._extHostDocumentsAndEditors.getEditor(id);\n\t\t\tif (!textEditor) {\n\t\t\t\tthrow new Error(\"Unknown text editor\");\n\t\t\t}\n\t\t\tconst viewColumn = TypeConverters.ViewColumn.to(data[id]);\n\t\t\tif (textEditor.value.viewColumn !== viewColumn) {\n\t\t\t\ttextEditor._acceptViewColumn(viewColumn);\n\t\t\t\tthis._onDidChangeTextEditorViewColumn.fire({\n\t\t\t\t\ttextEditor: textEditor.value,\n\t\t\t\t\tviewColumn,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tgetDiffInformation(id: string): Promise<vscode.LineChange[]> {\n\t\treturn Promise.resolve(this._proxy.$getDiffInformation(id));\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
