{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/common/component.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Memento, MementoObject } from './memento.js';\nimport { IThemeService, Themable } from '../../platform/theme/common/themeService.js';\nimport { IStorageService, IStorageValueChangeEvent, StorageScope, StorageTarget } from '../../platform/storage/common/storage.js';\nimport { DisposableStore } from '../../base/common/lifecycle.js';\nimport { Event } from '../../base/common/event.js';\n\nexport class Component extends Themable {\n\n\tprivate readonly memento: Memento;\n\n\tconstructor(\n\t\tprivate readonly id: string,\n\t\tthemeService: IThemeService,\n\t\tstorageService: IStorageService\n\t) {\n\t\tsuper(themeService);\n\n\t\tthis.memento = new Memento(this.id, storageService);\n\n\t\tthis._register(storageService.onWillSaveState(() => {\n\n\t\t\t// Ask the component to persist state into the memento\n\t\t\tthis.saveState();\n\n\t\t\t// Then save the memento into storage\n\t\t\tthis.memento.saveMemento();\n\t\t}));\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tprotected getMemento(scope: StorageScope, target: StorageTarget): MementoObject {\n\t\treturn this.memento.getMemento(scope, target);\n\t}\n\n\tprotected reloadMemento(scope: StorageScope): void {\n\t\treturn this.memento.reloadMemento(scope);\n\t}\n\n\tprotected onDidChangeMementoValue(scope: StorageScope, disposables: DisposableStore): Event<IStorageValueChangeEvent> {\n\t\treturn this.memento.onDidChangeValue(scope, disposables);\n\t}\n\n\tprotected saveState(): void {\n\t\t// Subclasses to implement for storing state\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,SAAS,qBAAqB;AACvC,SAAS,eAAe,gBAAgB;AACxC,SAAS,iBAAiB,0BAA0B,cAAc,qBAAqB;AACvF,SAAS,uBAAuB;AAChC,SAAS,aAAa;AAEf,MAAM,kBAAkB,SAAS;AAAA,EAIvC,YACkB,IACjB,cACA,gBACC;AACD,UAAM,YAAY;AAJD;AAMjB,SAAK,UAAU,IAAI,QAAQ,KAAK,IAAI,cAAc;AAElD,SAAK,UAAU,eAAe,gBAAgB,MAAM;AAGnD,WAAK,UAAU;AAGf,WAAK,QAAQ,YAAY;AAAA,IAC1B,CAAC,CAAC;AAAA,EACH;AAAA,EAhCD,OAWwC;AAAA;AAAA;AAAA,EAEtB;AAAA,EAqBjB,QAAgB;AACf,WAAO,KAAK;AAAA,EACb;AAAA,EAEU,WAAW,OAAqB,QAAsC;AAC/E,WAAO,KAAK,QAAQ,WAAW,OAAO,MAAM;AAAA,EAC7C;AAAA,EAEU,cAAc,OAA2B;AAClD,WAAO,KAAK,QAAQ,cAAc,KAAK;AAAA,EACxC;AAAA,EAEU,wBAAwB,OAAqB,aAA+D;AACrH,WAAO,KAAK,QAAQ,iBAAiB,OAAO,WAAW;AAAA,EACxD;AAAA,EAEU,YAAkB;AAAA,EAE5B;AACD;",
  "names": []
}
