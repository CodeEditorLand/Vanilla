{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/common/contextkeys.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore } from \"../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../base/common/network.js\";\nimport { isLinux } from \"../../base/common/platform.js\";\nimport {\n\tbasename,\n\tdirname,\n\textname,\n\tisEqual,\n} from \"../../base/common/resources.js\";\nimport type { URI } from \"../../base/common/uri.js\";\nimport { ILanguageService } from \"../../editor/common/languages/language.js\";\nimport { IModelService } from \"../../editor/common/services/model.js\";\nimport { localize } from \"../../nls.js\";\nimport {\n\ttype IContextKey,\n\tIContextKeyService,\n\tRawContextKey,\n} from \"../../platform/contextkey/common/contextkey.js\";\nimport { IFileService } from \"../../platform/files/common/files.js\";\nimport type { IEditorResolverService } from \"../services/editor/common/editorResolverService.js\";\nimport { DEFAULT_EDITOR_ASSOCIATION } from \"./editor.js\";\nimport type { EditorInput } from \"./editor/editorInput.js\";\n\n//#region < --- Workbench --- >\n\nexport const WorkbenchStateContext = new RawContextKey<string>(\n\t\"workbenchState\",\n\tundefined,\n\t{\n\t\ttype: \"string\",\n\t\tdescription: localize(\n\t\t\t\"workbenchState\",\n\t\t\t\"The kind of workspace opened in the window, either 'empty' (no workspace), 'folder' (single folder) or 'workspace' (multi-root workspace)\",\n\t\t),\n\t},\n);\nexport const WorkspaceFolderCountContext = new RawContextKey<number>(\n\t\"workspaceFolderCount\",\n\t0,\n\tlocalize(\n\t\t\"workspaceFolderCount\",\n\t\t\"The number of root folders in the workspace\",\n\t),\n);\n\nexport const OpenFolderWorkspaceSupportContext = new RawContextKey<boolean>(\n\t\"openFolderWorkspaceSupport\",\n\ttrue,\n\ttrue,\n);\nexport const EnterMultiRootWorkspaceSupportContext = new RawContextKey<boolean>(\n\t\"enterMultiRootWorkspaceSupport\",\n\ttrue,\n\ttrue,\n);\nexport const EmptyWorkspaceSupportContext = new RawContextKey<boolean>(\n\t\"emptyWorkspaceSupport\",\n\ttrue,\n\ttrue,\n);\n\nexport const DirtyWorkingCopiesContext = new RawContextKey<boolean>(\n\t\"dirtyWorkingCopies\",\n\tfalse,\n\tlocalize(\n\t\t\"dirtyWorkingCopies\",\n\t\t\"Whether there are any working copies with unsaved changes\",\n\t),\n);\n\nexport const RemoteNameContext = new RawContextKey<string>(\n\t\"remoteName\",\n\t\"\",\n\tlocalize(\n\t\t\"remoteName\",\n\t\t\"The name of the remote the window is connected to or an empty string if not connected to any remote\",\n\t),\n);\n\nexport const VirtualWorkspaceContext = new RawContextKey<string>(\n\t\"virtualWorkspace\",\n\t\"\",\n\tlocalize(\n\t\t\"virtualWorkspace\",\n\t\t\"The scheme of the current workspace is from a virtual file system or an empty string.\",\n\t),\n);\nexport const TemporaryWorkspaceContext = new RawContextKey<boolean>(\n\t\"temporaryWorkspace\",\n\tfalse,\n\tlocalize(\n\t\t\"temporaryWorkspace\",\n\t\t\"The scheme of the current workspace is from a temporary file system.\",\n\t),\n);\n\nexport const IsMainWindowFullscreenContext = new RawContextKey<boolean>(\n\t\"isFullscreen\",\n\tfalse,\n\tlocalize(\"isFullscreen\", \"Whether the main window is in fullscreen mode\"),\n);\nexport const IsAuxiliaryWindowFocusedContext = new RawContextKey<boolean>(\n\t\"isAuxiliaryWindowFocusedContext\",\n\tfalse,\n\tlocalize(\n\t\t\"isAuxiliaryWindowFocusedContext\",\n\t\t\"Whether an auxiliary window is focused\",\n\t),\n);\n\nexport const HasWebFileSystemAccess = new RawContextKey<boolean>(\n\t\"hasWebFileSystemAccess\",\n\tfalse,\n\ttrue,\n); // Support for FileSystemAccess web APIs (https://wicg.github.io/file-system-access)\n\nexport const EmbedderIdentifierContext = new RawContextKey<string | undefined>(\n\t\"embedderIdentifier\",\n\tundefined,\n\tlocalize(\n\t\t\"embedderIdentifier\",\n\t\t\"The identifier of the embedder according to the product service, if one is defined\",\n\t),\n);\n\n//#endregion\n\n//#region < --- Editor --- >\n\n// Editor State Context Keys\nexport const ActiveEditorDirtyContext = new RawContextKey<boolean>(\n\t\"activeEditorIsDirty\",\n\tfalse,\n\tlocalize(\n\t\t\"activeEditorIsDirty\",\n\t\t\"Whether the active editor has unsaved changes\",\n\t),\n);\nexport const ActiveEditorPinnedContext = new RawContextKey<boolean>(\n\t\"activeEditorIsNotPreview\",\n\tfalse,\n\tlocalize(\n\t\t\"activeEditorIsNotPreview\",\n\t\t\"Whether the active editor is not in preview mode\",\n\t),\n);\nexport const ActiveEditorFirstInGroupContext = new RawContextKey<boolean>(\n\t\"activeEditorIsFirstInGroup\",\n\tfalse,\n\tlocalize(\n\t\t\"activeEditorIsFirstInGroup\",\n\t\t\"Whether the active editor is the first one in its group\",\n\t),\n);\nexport const ActiveEditorLastInGroupContext = new RawContextKey<boolean>(\n\t\"activeEditorIsLastInGroup\",\n\tfalse,\n\tlocalize(\n\t\t\"activeEditorIsLastInGroup\",\n\t\t\"Whether the active editor is the last one in its group\",\n\t),\n);\nexport const ActiveEditorStickyContext = new RawContextKey<boolean>(\n\t\"activeEditorIsPinned\",\n\tfalse,\n\tlocalize(\"activeEditorIsPinned\", \"Whether the active editor is pinned\"),\n);\nexport const ActiveEditorReadonlyContext = new RawContextKey<boolean>(\n\t\"activeEditorIsReadonly\",\n\tfalse,\n\tlocalize(\n\t\t\"activeEditorIsReadonly\",\n\t\t\"Whether the active editor is read-only\",\n\t),\n);\nexport const ActiveCompareEditorCanSwapContext = new RawContextKey<boolean>(\n\t\"activeCompareEditorCanSwap\",\n\tfalse,\n\tlocalize(\n\t\t\"activeCompareEditorCanSwap\",\n\t\t\"Whether the active compare editor can swap sides\",\n\t),\n);\nexport const ActiveEditorCanToggleReadonlyContext = new RawContextKey<boolean>(\n\t\"activeEditorCanToggleReadonly\",\n\ttrue,\n\tlocalize(\n\t\t\"activeEditorCanToggleReadonly\",\n\t\t\"Whether the active editor can toggle between being read-only or writeable\",\n\t),\n);\nexport const ActiveEditorCanRevertContext = new RawContextKey<boolean>(\n\t\"activeEditorCanRevert\",\n\tfalse,\n\tlocalize(\"activeEditorCanRevert\", \"Whether the active editor can revert\"),\n);\nexport const ActiveEditorCanSplitInGroupContext = new RawContextKey<boolean>(\n\t\"activeEditorCanSplitInGroup\",\n\ttrue,\n);\n\n// Editor Kind Context Keys\nexport const ActiveEditorContext = new RawContextKey<string | null>(\n\t\"activeEditor\",\n\tnull,\n\t{\n\t\ttype: \"string\",\n\t\tdescription: localize(\n\t\t\t\"activeEditor\",\n\t\t\t\"The identifier of the active editor\",\n\t\t),\n\t},\n);\nexport const ActiveEditorAvailableEditorIdsContext = new RawContextKey<string>(\n\t\"activeEditorAvailableEditorIds\",\n\t\"\",\n\tlocalize(\n\t\t\"activeEditorAvailableEditorIds\",\n\t\t\"The available editor identifiers that are usable for the active editor\",\n\t),\n);\nexport const TextCompareEditorVisibleContext = new RawContextKey<boolean>(\n\t\"textCompareEditorVisible\",\n\tfalse,\n\tlocalize(\n\t\t\"textCompareEditorVisible\",\n\t\t\"Whether a text compare editor is visible\",\n\t),\n);\nexport const TextCompareEditorActiveContext = new RawContextKey<boolean>(\n\t\"textCompareEditorActive\",\n\tfalse,\n\tlocalize(\n\t\t\"textCompareEditorActive\",\n\t\t\"Whether a text compare editor is active\",\n\t),\n);\nexport const SideBySideEditorActiveContext = new RawContextKey<boolean>(\n\t\"sideBySideEditorActive\",\n\tfalse,\n\tlocalize(\n\t\t\"sideBySideEditorActive\",\n\t\t\"Whether a side by side editor is active\",\n\t),\n);\n\n// Editor Group Context Keys\nexport const EditorGroupEditorsCountContext = new RawContextKey<number>(\n\t\"groupEditorsCount\",\n\t0,\n\tlocalize(\"groupEditorsCount\", \"The number of opened editor groups\"),\n);\nexport const ActiveEditorGroupEmptyContext = new RawContextKey<boolean>(\n\t\"activeEditorGroupEmpty\",\n\tfalse,\n\tlocalize(\n\t\t\"activeEditorGroupEmpty\",\n\t\t\"Whether the active editor group is empty\",\n\t),\n);\nexport const ActiveEditorGroupIndexContext = new RawContextKey<number>(\n\t\"activeEditorGroupIndex\",\n\t0,\n\tlocalize(\"activeEditorGroupIndex\", \"The index of the active editor group\"),\n);\nexport const ActiveEditorGroupLastContext = new RawContextKey<boolean>(\n\t\"activeEditorGroupLast\",\n\tfalse,\n\tlocalize(\n\t\t\"activeEditorGroupLast\",\n\t\t\"Whether the active editor group is the last group\",\n\t),\n);\nexport const ActiveEditorGroupLockedContext = new RawContextKey<boolean>(\n\t\"activeEditorGroupLocked\",\n\tfalse,\n\tlocalize(\n\t\t\"activeEditorGroupLocked\",\n\t\t\"Whether the active editor group is locked\",\n\t),\n);\nexport const MultipleEditorGroupsContext = new RawContextKey<boolean>(\n\t\"multipleEditorGroups\",\n\tfalse,\n\tlocalize(\n\t\t\"multipleEditorGroups\",\n\t\t\"Whether there are multiple editor groups opened\",\n\t),\n);\nexport const SingleEditorGroupsContext =\n\tMultipleEditorGroupsContext.toNegated();\nexport const MultipleEditorsSelectedInGroupContext = new RawContextKey<boolean>(\n\t\"multipleEditorsSelectedInGroup\",\n\tfalse,\n\tlocalize(\n\t\t\"multipleEditorsSelectedInGroup\",\n\t\t\"Whether multiple editors have been selected in an editor group\",\n\t),\n);\nexport const TwoEditorsSelectedInGroupContext = new RawContextKey<boolean>(\n\t\"twoEditorsSelectedInGroup\",\n\tfalse,\n\tlocalize(\n\t\t\"twoEditorsSelectedInGroup\",\n\t\t\"Whether exactly two editors have been selected in an editor group\",\n\t),\n);\nexport const SelectedEditorsInGroupFileOrUntitledResourceContextKey =\n\tnew RawContextKey<boolean>(\n\t\t\"SelectedEditorsInGroupFileOrUntitledResourceContextKey\",\n\t\ttrue,\n\t\tlocalize(\n\t\t\t\"SelectedEditorsInGroupFileOrUntitledResourceContextKey\",\n\t\t\t\"Whether all selected editors in a group have a file or untitled resource associated\",\n\t\t),\n\t);\n\n// Editor Part Context Keys\nexport const EditorPartMultipleEditorGroupsContext = new RawContextKey<boolean>(\n\t\"editorPartMultipleEditorGroups\",\n\tfalse,\n\tlocalize(\n\t\t\"editorPartMultipleEditorGroups\",\n\t\t\"Whether there are multiple editor groups opened in an editor part\",\n\t),\n);\nexport const EditorPartSingleEditorGroupsContext =\n\tEditorPartMultipleEditorGroupsContext.toNegated();\nexport const EditorPartMaximizedEditorGroupContext = new RawContextKey<boolean>(\n\t\"editorPartMaximizedEditorGroup\",\n\tfalse,\n\tlocalize(\n\t\t\"editorPartEditorGroupMaximized\",\n\t\t\"Editor Part has a maximized group\",\n\t),\n);\nexport const IsAuxiliaryEditorPartContext = new RawContextKey<boolean>(\n\t\"isAuxiliaryEditorPart\",\n\tfalse,\n\tlocalize(\"isAuxiliaryEditorPart\", \"Editor Part is in an auxiliary window\"),\n);\n\n// Editor Layout Context Keys\nexport const EditorsVisibleContext = new RawContextKey<boolean>(\n\t\"editorIsOpen\",\n\tfalse,\n\tlocalize(\"editorIsOpen\", \"Whether an editor is open\"),\n);\nexport const InEditorZenModeContext = new RawContextKey<boolean>(\n\t\"inZenMode\",\n\tfalse,\n\tlocalize(\"inZenMode\", \"Whether Zen mode is enabled\"),\n);\nexport const IsMainEditorCenteredLayoutContext = new RawContextKey<boolean>(\n\t\"isCenteredLayout\",\n\tfalse,\n\tlocalize(\n\t\t\"isMainEditorCenteredLayout\",\n\t\t\"Whether centered layout is enabled for the main editor\",\n\t),\n);\nexport const SplitEditorsVertically = new RawContextKey<boolean>(\n\t\"splitEditorsVertically\",\n\tfalse,\n\tlocalize(\"splitEditorsVertically\", \"Whether editors split vertically\"),\n);\nexport const MainEditorAreaVisibleContext = new RawContextKey<boolean>(\n\t\"mainEditorAreaVisible\",\n\ttrue,\n\tlocalize(\n\t\t\"mainEditorAreaVisible\",\n\t\t\"Whether the editor area in the main window is visible\",\n\t),\n);\nexport const EditorTabsVisibleContext = new RawContextKey<boolean>(\n\t\"editorTabsVisible\",\n\ttrue,\n\tlocalize(\"editorTabsVisible\", \"Whether editor tabs are visible\"),\n);\n\n//#endregion\n\n//#region < --- Side Bar --- >\n\nexport const SideBarVisibleContext = new RawContextKey<boolean>(\n\t\"sideBarVisible\",\n\tfalse,\n\tlocalize(\"sideBarVisible\", \"Whether the sidebar is visible\"),\n);\nexport const SidebarFocusContext = new RawContextKey<boolean>(\n\t\"sideBarFocus\",\n\tfalse,\n\tlocalize(\"sideBarFocus\", \"Whether the sidebar has keyboard focus\"),\n);\nexport const ActiveViewletContext = new RawContextKey<string>(\n\t\"activeViewlet\",\n\t\"\",\n\tlocalize(\"activeViewlet\", \"The identifier of the active viewlet\"),\n);\n\n//#endregion\n\n//#region < --- Status Bar --- >\n\nexport const StatusBarFocused = new RawContextKey<boolean>(\n\t\"statusBarFocused\",\n\tfalse,\n\tlocalize(\"statusBarFocused\", \"Whether the status bar has keyboard focus\"),\n);\n\n//#endregion\n\n//#region < --- Title Bar --- >\n\nexport const TitleBarStyleContext = new RawContextKey<string>(\n\t\"titleBarStyle\",\n\tisLinux ? \"native\" : \"custom\",\n\tlocalize(\"titleBarStyle\", \"Style of the window title bar\"),\n);\nexport const TitleBarVisibleContext = new RawContextKey<boolean>(\n\t\"titleBarVisible\",\n\tfalse,\n\tlocalize(\"titleBarVisible\", \"Whether the title bar is visible\"),\n);\n\n//#endregion\n\n//#region < --- Banner --- >\n\nexport const BannerFocused = new RawContextKey<boolean>(\n\t\"bannerFocused\",\n\tfalse,\n\tlocalize(\"bannerFocused\", \"Whether the banner has keyboard focus\"),\n);\n\n//#endregion\n\n//#region < --- Notifications --- >\n\nexport const NotificationFocusedContext = new RawContextKey<boolean>(\n\t\"notificationFocus\",\n\ttrue,\n\tlocalize(\"notificationFocus\", \"Whether a notification has keyboard focus\"),\n);\nexport const NotificationsCenterVisibleContext = new RawContextKey<boolean>(\n\t\"notificationCenterVisible\",\n\tfalse,\n\tlocalize(\n\t\t\"notificationCenterVisible\",\n\t\t\"Whether the notifications center is visible\",\n\t),\n);\nexport const NotificationsToastsVisibleContext = new RawContextKey<boolean>(\n\t\"notificationToastsVisible\",\n\tfalse,\n\tlocalize(\n\t\t\"notificationToastsVisible\",\n\t\t\"Whether a notification toast is visible\",\n\t),\n);\n\n//#endregion\n\n//#region < --- Auxiliary Bar --- >\n\nexport const ActiveAuxiliaryContext = new RawContextKey<string>(\n\t\"activeAuxiliary\",\n\t\"\",\n\tlocalize(\"activeAuxiliary\", \"The identifier of the active auxiliary panel\"),\n);\nexport const AuxiliaryBarFocusContext = new RawContextKey<boolean>(\n\t\"auxiliaryBarFocus\",\n\tfalse,\n\tlocalize(\n\t\t\"auxiliaryBarFocus\",\n\t\t\"Whether the auxiliary bar has keyboard focus\",\n\t),\n);\nexport const AuxiliaryBarVisibleContext = new RawContextKey<boolean>(\n\t\"auxiliaryBarVisible\",\n\tfalse,\n\tlocalize(\"auxiliaryBarVisible\", \"Whether the auxiliary bar is visible\"),\n);\n\n//#endregion\n\n//#region < --- Panel --- >\n\nexport const ActivePanelContext = new RawContextKey<string>(\n\t\"activePanel\",\n\t\"\",\n\tlocalize(\"activePanel\", \"The identifier of the active panel\"),\n);\nexport const PanelFocusContext = new RawContextKey<boolean>(\n\t\"panelFocus\",\n\tfalse,\n\tlocalize(\"panelFocus\", \"Whether the panel has keyboard focus\"),\n);\nexport const PanelPositionContext = new RawContextKey<string>(\n\t\"panelPosition\",\n\t\"bottom\",\n\tlocalize(\"panelPosition\", \"The position of the panel, always 'bottom'\"),\n);\nexport const PanelAlignmentContext = new RawContextKey<string>(\n\t\"panelAlignment\",\n\t\"center\",\n\tlocalize(\n\t\t\"panelAlignment\",\n\t\t\"The alignment of the panel, either 'center', 'left', 'right' or 'justify'\",\n\t),\n);\nexport const PanelVisibleContext = new RawContextKey<boolean>(\n\t\"panelVisible\",\n\tfalse,\n\tlocalize(\"panelVisible\", \"Whether the panel is visible\"),\n);\nexport const PanelMaximizedContext = new RawContextKey<boolean>(\n\t\"panelMaximized\",\n\tfalse,\n\tlocalize(\"panelMaximized\", \"Whether the panel is maximized\"),\n);\n\n//#endregion\n\n//#region < --- Views --- >\n\nexport const FocusedViewContext = new RawContextKey<string>(\n\t\"focusedView\",\n\t\"\",\n\tlocalize(\n\t\t\"focusedView\",\n\t\t\"The identifier of the view that has keyboard focus\",\n\t),\n);\nexport function getVisbileViewContextKey(viewId: string): string {\n\treturn `view.${viewId}.visible`;\n}\n\n//#endregion\n\n//#region < --- Resources --- >\n\nexport class ResourceContextKey {\n\t// NOTE: DO NOT CHANGE THE DEFAULT VALUE TO ANYTHING BUT\n\t// UNDEFINED! IT IS IMPORTANT THAT DEFAULTS ARE INHERITED\n\t// FROM THE PARENT CONTEXT AND ONLY UNDEFINED DOES THIS\n\n\tstatic readonly Scheme = new RawContextKey<string>(\n\t\t\"resourceScheme\",\n\t\tundefined,\n\t\t{\n\t\t\ttype: \"string\",\n\t\t\tdescription: localize(\n\t\t\t\t\"resourceScheme\",\n\t\t\t\t\"The scheme of the resource\",\n\t\t\t),\n\t\t},\n\t);\n\tstatic readonly Filename = new RawContextKey<string>(\n\t\t\"resourceFilename\",\n\t\tundefined,\n\t\t{\n\t\t\ttype: \"string\",\n\t\t\tdescription: localize(\n\t\t\t\t\"resourceFilename\",\n\t\t\t\t\"The file name of the resource\",\n\t\t\t),\n\t\t},\n\t);\n\tstatic readonly Dirname = new RawContextKey<string>(\n\t\t\"resourceDirname\",\n\t\tundefined,\n\t\t{\n\t\t\ttype: \"string\",\n\t\t\tdescription: localize(\n\t\t\t\t\"resourceDirname\",\n\t\t\t\t\"The folder name the resource is contained in\",\n\t\t\t),\n\t\t},\n\t);\n\tstatic readonly Path = new RawContextKey<string>(\n\t\t\"resourcePath\",\n\t\tundefined,\n\t\t{\n\t\t\ttype: \"string\",\n\t\t\tdescription: localize(\n\t\t\t\t\"resourcePath\",\n\t\t\t\t\"The full path of the resource\",\n\t\t\t),\n\t\t},\n\t);\n\tstatic readonly LangId = new RawContextKey<string>(\n\t\t\"resourceLangId\",\n\t\tundefined,\n\t\t{\n\t\t\ttype: \"string\",\n\t\t\tdescription: localize(\n\t\t\t\t\"resourceLangId\",\n\t\t\t\t\"The language identifier of the resource\",\n\t\t\t),\n\t\t},\n\t);\n\tstatic readonly Resource = new RawContextKey<string>(\n\t\t\"resource\",\n\t\tundefined,\n\t\t{\n\t\t\ttype: \"URI\",\n\t\t\tdescription: localize(\n\t\t\t\t\"resource\",\n\t\t\t\t\"The full value of the resource including scheme and path\",\n\t\t\t),\n\t\t},\n\t);\n\tstatic readonly Extension = new RawContextKey<string>(\n\t\t\"resourceExtname\",\n\t\tundefined,\n\t\t{\n\t\t\ttype: \"string\",\n\t\t\tdescription: localize(\n\t\t\t\t\"resourceExtname\",\n\t\t\t\t\"The extension name of the resource\",\n\t\t\t),\n\t\t},\n\t);\n\tstatic readonly HasResource = new RawContextKey<boolean>(\n\t\t\"resourceSet\",\n\t\tundefined,\n\t\t{\n\t\t\ttype: \"boolean\",\n\t\t\tdescription: localize(\n\t\t\t\t\"resourceSet\",\n\t\t\t\t\"Whether a resource is present or not\",\n\t\t\t),\n\t\t},\n\t);\n\tstatic readonly IsFileSystemResource = new RawContextKey<boolean>(\n\t\t\"isFileSystemResource\",\n\t\tundefined,\n\t\t{\n\t\t\ttype: \"boolean\",\n\t\t\tdescription: localize(\n\t\t\t\t\"isFileSystemResource\",\n\t\t\t\t\"Whether the resource is backed by a file system provider\",\n\t\t\t),\n\t\t},\n\t);\n\n\tprivate readonly _disposables = new DisposableStore();\n\n\tprivate _value: URI | undefined;\n\tprivate readonly _resourceKey: IContextKey<string | null>;\n\tprivate readonly _schemeKey: IContextKey<string | null>;\n\tprivate readonly _filenameKey: IContextKey<string | null>;\n\tprivate readonly _dirnameKey: IContextKey<string | null>;\n\tprivate readonly _pathKey: IContextKey<string | null>;\n\tprivate readonly _langIdKey: IContextKey<string | null>;\n\tprivate readonly _extensionKey: IContextKey<string | null>;\n\tprivate readonly _hasResource: IContextKey<boolean>;\n\tprivate readonly _isFileSystemResource: IContextKey<boolean>;\n\n\tconstructor(\n\t\t@IContextKeyService\n\t\tprivate readonly _contextKeyService: IContextKeyService,\n\t\t@IFileService private readonly _fileService: IFileService,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t\t@IModelService private readonly _modelService: IModelService,\n\t) {\n\t\tthis._schemeKey = ResourceContextKey.Scheme.bindTo(\n\t\t\tthis._contextKeyService,\n\t\t);\n\t\tthis._filenameKey = ResourceContextKey.Filename.bindTo(\n\t\t\tthis._contextKeyService,\n\t\t);\n\t\tthis._dirnameKey = ResourceContextKey.Dirname.bindTo(\n\t\t\tthis._contextKeyService,\n\t\t);\n\t\tthis._pathKey = ResourceContextKey.Path.bindTo(this._contextKeyService);\n\t\tthis._langIdKey = ResourceContextKey.LangId.bindTo(\n\t\t\tthis._contextKeyService,\n\t\t);\n\t\tthis._resourceKey = ResourceContextKey.Resource.bindTo(\n\t\t\tthis._contextKeyService,\n\t\t);\n\t\tthis._extensionKey = ResourceContextKey.Extension.bindTo(\n\t\t\tthis._contextKeyService,\n\t\t);\n\t\tthis._hasResource = ResourceContextKey.HasResource.bindTo(\n\t\t\tthis._contextKeyService,\n\t\t);\n\t\tthis._isFileSystemResource =\n\t\t\tResourceContextKey.IsFileSystemResource.bindTo(\n\t\t\t\tthis._contextKeyService,\n\t\t\t);\n\n\t\tthis._disposables.add(\n\t\t\t_fileService.onDidChangeFileSystemProviderRegistrations(() => {\n\t\t\t\tconst resource = this.get();\n\t\t\t\tthis._isFileSystemResource.set(\n\t\t\t\t\tBoolean(resource && _fileService.hasProvider(resource)),\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\n\t\tthis._disposables.add(\n\t\t\t_modelService.onModelAdded((model) => {\n\t\t\t\tif (isEqual(model.uri, this.get())) {\n\t\t\t\t\tthis._setLangId();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis._disposables.add(\n\t\t\t_modelService.onModelLanguageChanged((e) => {\n\t\t\t\tif (isEqual(e.model.uri, this.get())) {\n\t\t\t\t\tthis._setLangId();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t}\n\n\tprivate _setLangId(): void {\n\t\tconst value = this.get();\n\t\tif (!value) {\n\t\t\tthis._langIdKey.set(null);\n\t\t\treturn;\n\t\t}\n\t\tconst langId =\n\t\t\tthis._modelService.getModel(value)?.getLanguageId() ??\n\t\t\tthis._languageService.guessLanguageIdByFilepathOrFirstLine(value);\n\t\tthis._langIdKey.set(langId);\n\t}\n\n\tset(value: URI | null | undefined) {\n\t\tvalue = value ?? undefined;\n\t\tif (isEqual(this._value, value)) {\n\t\t\treturn;\n\t\t}\n\t\tthis._value = value;\n\t\tthis._contextKeyService.bufferChangeEvents(() => {\n\t\t\tthis._resourceKey.set(value ? value.toString() : null);\n\t\t\tthis._schemeKey.set(value ? value.scheme : null);\n\t\t\tthis._filenameKey.set(value ? basename(value) : null);\n\t\t\tthis._dirnameKey.set(value ? this.uriToPath(dirname(value)) : null);\n\t\t\tthis._pathKey.set(value ? this.uriToPath(value) : null);\n\t\t\tthis._setLangId();\n\t\t\tthis._extensionKey.set(value ? extname(value) : null);\n\t\t\tthis._hasResource.set(Boolean(value));\n\t\t\tthis._isFileSystemResource.set(\n\t\t\t\tvalue ? this._fileService.hasProvider(value) : false,\n\t\t\t);\n\t\t});\n\t}\n\n\tprivate uriToPath(uri: URI): string {\n\t\tif (uri.scheme === Schemas.file) {\n\t\t\treturn uri.fsPath;\n\t\t}\n\n\t\treturn uri.path;\n\t}\n\n\treset(): void {\n\t\tthis._value = undefined;\n\t\tthis._contextKeyService.bufferChangeEvents(() => {\n\t\t\tthis._resourceKey.reset();\n\t\t\tthis._schemeKey.reset();\n\t\t\tthis._filenameKey.reset();\n\t\t\tthis._dirnameKey.reset();\n\t\t\tthis._pathKey.reset();\n\t\t\tthis._langIdKey.reset();\n\t\t\tthis._extensionKey.reset();\n\t\t\tthis._hasResource.reset();\n\t\t\tthis._isFileSystemResource.reset();\n\t\t});\n\t}\n\n\tget(): URI | undefined {\n\t\treturn this._value;\n\t}\n}\n\n//#endregion\n\nexport function applyAvailableEditorIds(\n\tcontextKey: IContextKey<string>,\n\teditor: EditorInput | undefined | null,\n\teditorResolverService: IEditorResolverService,\n): void {\n\tif (!editor) {\n\t\tcontextKey.set(\"\");\n\t\treturn;\n\t}\n\n\tconst editorResource = editor.resource;\n\tif (\n\t\teditorResource?.scheme === Schemas.untitled &&\n\t\teditor.editorId !== DEFAULT_EDITOR_ASSOCIATION.id\n\t) {\n\t\t// Non text editor untitled files cannot be easily serialized between extensions\n\t\t// so instead we disable this context key to prevent common commands that act on the active editor\n\t\tcontextKey.set(\"\");\n\t} else {\n\t\tconst editors = editorResource\n\t\t\t? editorResolverService\n\t\t\t\t\t.getEditors(editorResource)\n\t\t\t\t\t.map((editor) => editor.id)\n\t\t\t: [];\n\t\tcontextKey.set(editors.join(\",\"));\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,uBAAuB;AAChC,SAAS,eAAe;AACxB,SAAS,eAAe;AACxB;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AAEP,SAAS,wBAAwB;AACjC,SAAS,qBAAqB;AAC9B,SAAS,gBAAgB;AACzB;AAAA,EAEC;AAAA,EACA;AAAA,OACM;AACP,SAAS,oBAAoB;AAE7B,SAAS,kCAAkC;AAKpC,MAAM,wBAAwB,IAAI;AAAA,EACxC;AAAA,EACA;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,MACZ;AAAA,MACA;AAAA,IACD;AAAA,EACD;AACD;AACO,MAAM,8BAA8B,IAAI;AAAA,EAC9C;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AAEO,MAAM,oCAAoC,IAAI;AAAA,EACpD;AAAA,EACA;AAAA,EACA;AACD;AACO,MAAM,wCAAwC,IAAI;AAAA,EACxD;AAAA,EACA;AAAA,EACA;AACD;AACO,MAAM,+BAA+B,IAAI;AAAA,EAC/C;AAAA,EACA;AAAA,EACA;AACD;AAEO,MAAM,4BAA4B,IAAI;AAAA,EAC5C;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AAEO,MAAM,oBAAoB,IAAI;AAAA,EACpC;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AAEO,MAAM,0BAA0B,IAAI;AAAA,EAC1C;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AACO,MAAM,4BAA4B,IAAI;AAAA,EAC5C;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AAEO,MAAM,gCAAgC,IAAI;AAAA,EAChD;AAAA,EACA;AAAA,EACA,SAAS,gBAAgB,+CAA+C;AACzE;AACO,MAAM,kCAAkC,IAAI;AAAA,EAClD;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AAEO,MAAM,yBAAyB,IAAI;AAAA,EACzC;AAAA,EACA;AAAA,EACA;AACD;AAEO,MAAM,4BAA4B,IAAI;AAAA,EAC5C;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AAOO,MAAM,2BAA2B,IAAI;AAAA,EAC3C;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AACO,MAAM,4BAA4B,IAAI;AAAA,EAC5C;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AACO,MAAM,kCAAkC,IAAI;AAAA,EAClD;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AACO,MAAM,iCAAiC,IAAI;AAAA,EACjD;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AACO,MAAM,4BAA4B,IAAI;AAAA,EAC5C;AAAA,EACA;AAAA,EACA,SAAS,wBAAwB,qCAAqC;AACvE;AACO,MAAM,8BAA8B,IAAI;AAAA,EAC9C;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AACO,MAAM,oCAAoC,IAAI;AAAA,EACpD;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AACO,MAAM,uCAAuC,IAAI;AAAA,EACvD;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AACO,MAAM,+BAA+B,IAAI;AAAA,EAC/C;AAAA,EACA;AAAA,EACA,SAAS,yBAAyB,sCAAsC;AACzE;AACO,MAAM,qCAAqC,IAAI;AAAA,EACrD;AAAA,EACA;AACD;AAGO,MAAM,sBAAsB,IAAI;AAAA,EACtC;AAAA,EACA;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,aAAa;AAAA,MACZ;AAAA,MACA;AAAA,IACD;AAAA,EACD;AACD;AACO,MAAM,wCAAwC,IAAI;AAAA,EACxD;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AACO,MAAM,kCAAkC,IAAI;AAAA,EAClD;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AACO,MAAM,iCAAiC,IAAI;AAAA,EACjD;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AACO,MAAM,gCAAgC,IAAI;AAAA,EAChD;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AAGO,MAAM,iCAAiC,IAAI;AAAA,EACjD;AAAA,EACA;AAAA,EACA,SAAS,qBAAqB,oCAAoC;AACnE;AACO,MAAM,gCAAgC,IAAI;AAAA,EAChD;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AACO,MAAM,gCAAgC,IAAI;AAAA,EAChD;AAAA,EACA;AAAA,EACA,SAAS,0BAA0B,sCAAsC;AAC1E;AACO,MAAM,+BAA+B,IAAI;AAAA,EAC/C;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AACO,MAAM,iCAAiC,IAAI;AAAA,EACjD;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AACO,MAAM,8BAA8B,IAAI;AAAA,EAC9C;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AACO,MAAM,4BACZ,4BAA4B,UAAU;AAChC,MAAM,wCAAwC,IAAI;AAAA,EACxD;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AACO,MAAM,mCAAmC,IAAI;AAAA,EACnD;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AACO,MAAM,yDACZ,IAAI;AAAA,EACH;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AAGM,MAAM,wCAAwC,IAAI;AAAA,EACxD;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AACO,MAAM,sCACZ,sCAAsC,UAAU;AAC1C,MAAM,wCAAwC,IAAI;AAAA,EACxD;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AACO,MAAM,+BAA+B,IAAI;AAAA,EAC/C;AAAA,EACA;AAAA,EACA,SAAS,yBAAyB,uCAAuC;AAC1E;AAGO,MAAM,wBAAwB,IAAI;AAAA,EACxC;AAAA,EACA;AAAA,EACA,SAAS,gBAAgB,2BAA2B;AACrD;AACO,MAAM,yBAAyB,IAAI;AAAA,EACzC;AAAA,EACA;AAAA,EACA,SAAS,aAAa,6BAA6B;AACpD;AACO,MAAM,oCAAoC,IAAI;AAAA,EACpD;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AACO,MAAM,yBAAyB,IAAI;AAAA,EACzC;AAAA,EACA;AAAA,EACA,SAAS,0BAA0B,kCAAkC;AACtE;AACO,MAAM,+BAA+B,IAAI;AAAA,EAC/C;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AACO,MAAM,2BAA2B,IAAI;AAAA,EAC3C;AAAA,EACA;AAAA,EACA,SAAS,qBAAqB,iCAAiC;AAChE;AAMO,MAAM,wBAAwB,IAAI;AAAA,EACxC;AAAA,EACA;AAAA,EACA,SAAS,kBAAkB,gCAAgC;AAC5D;AACO,MAAM,sBAAsB,IAAI;AAAA,EACtC;AAAA,EACA;AAAA,EACA,SAAS,gBAAgB,wCAAwC;AAClE;AACO,MAAM,uBAAuB,IAAI;AAAA,EACvC;AAAA,EACA;AAAA,EACA,SAAS,iBAAiB,sCAAsC;AACjE;AAMO,MAAM,mBAAmB,IAAI;AAAA,EACnC;AAAA,EACA;AAAA,EACA,SAAS,oBAAoB,2CAA2C;AACzE;AAMO,MAAM,uBAAuB,IAAI;AAAA,EACvC;AAAA,EACA,UAAU,WAAW;AAAA,EACrB,SAAS,iBAAiB,+BAA+B;AAC1D;AACO,MAAM,yBAAyB,IAAI;AAAA,EACzC;AAAA,EACA;AAAA,EACA,SAAS,mBAAmB,kCAAkC;AAC/D;AAMO,MAAM,gBAAgB,IAAI;AAAA,EAChC;AAAA,EACA;AAAA,EACA,SAAS,iBAAiB,uCAAuC;AAClE;AAMO,MAAM,6BAA6B,IAAI;AAAA,EAC7C;AAAA,EACA;AAAA,EACA,SAAS,qBAAqB,2CAA2C;AAC1E;AACO,MAAM,oCAAoC,IAAI;AAAA,EACpD;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AACO,MAAM,oCAAoC,IAAI;AAAA,EACpD;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AAMO,MAAM,yBAAyB,IAAI;AAAA,EACzC;AAAA,EACA;AAAA,EACA,SAAS,mBAAmB,8CAA8C;AAC3E;AACO,MAAM,2BAA2B,IAAI;AAAA,EAC3C;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AACO,MAAM,6BAA6B,IAAI;AAAA,EAC7C;AAAA,EACA;AAAA,EACA,SAAS,uBAAuB,sCAAsC;AACvE;AAMO,MAAM,qBAAqB,IAAI;AAAA,EACrC;AAAA,EACA;AAAA,EACA,SAAS,eAAe,oCAAoC;AAC7D;AACO,MAAM,oBAAoB,IAAI;AAAA,EACpC;AAAA,EACA;AAAA,EACA,SAAS,cAAc,sCAAsC;AAC9D;AACO,MAAM,uBAAuB,IAAI;AAAA,EACvC;AAAA,EACA;AAAA,EACA,SAAS,iBAAiB,4CAA4C;AACvE;AACO,MAAM,wBAAwB,IAAI;AAAA,EACxC;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AACO,MAAM,sBAAsB,IAAI;AAAA,EACtC;AAAA,EACA;AAAA,EACA,SAAS,gBAAgB,8BAA8B;AACxD;AACO,MAAM,wBAAwB,IAAI;AAAA,EACxC;AAAA,EACA;AAAA,EACA,SAAS,kBAAkB,gCAAgC;AAC5D;AAMO,MAAM,qBAAqB,IAAI;AAAA,EACrC;AAAA,EACA;AAAA,EACA;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AACO,SAAS,yBAAyB,QAAwB;AAChE,SAAO,QAAQ,MAAM;AACtB;AAFgB;AAQT,IAAM,qBAAN,MAAyB;AAAA,EAsH/B,YAEkB,oBACc,cACI,kBACH,eAC/B;AAJgB;AACc;AACI;AACH;AAEhC,SAAK,aAAa,mBAAmB,OAAO;AAAA,MAC3C,KAAK;AAAA,IACN;AACA,SAAK,eAAe,mBAAmB,SAAS;AAAA,MAC/C,KAAK;AAAA,IACN;AACA,SAAK,cAAc,mBAAmB,QAAQ;AAAA,MAC7C,KAAK;AAAA,IACN;AACA,SAAK,WAAW,mBAAmB,KAAK,OAAO,KAAK,kBAAkB;AACtE,SAAK,aAAa,mBAAmB,OAAO;AAAA,MAC3C,KAAK;AAAA,IACN;AACA,SAAK,eAAe,mBAAmB,SAAS;AAAA,MAC/C,KAAK;AAAA,IACN;AACA,SAAK,gBAAgB,mBAAmB,UAAU;AAAA,MACjD,KAAK;AAAA,IACN;AACA,SAAK,eAAe,mBAAmB,YAAY;AAAA,MAClD,KAAK;AAAA,IACN;AACA,SAAK,wBACJ,mBAAmB,qBAAqB;AAAA,MACvC,KAAK;AAAA,IACN;AAED,SAAK,aAAa;AAAA,MACjB,aAAa,2CAA2C,MAAM;AAC7D,cAAM,WAAW,KAAK,IAAI;AAC1B,aAAK,sBAAsB;AAAA,UAC1B,QAAQ,YAAY,aAAa,YAAY,QAAQ,CAAC;AAAA,QACvD;AAAA,MACD,CAAC;AAAA,IACF;AAEA,SAAK,aAAa;AAAA,MACjB,cAAc,aAAa,CAAC,UAAU;AACrC,YAAI,QAAQ,MAAM,KAAK,KAAK,IAAI,CAAC,GAAG;AACnC,eAAK,WAAW;AAAA,QACjB;AAAA,MACD,CAAC;AAAA,IACF;AACA,SAAK,aAAa;AAAA,MACjB,cAAc,uBAAuB,CAAC,MAAM;AAC3C,YAAI,QAAQ,EAAE,MAAM,KAAK,KAAK,IAAI,CAAC,GAAG;AACrC,eAAK,WAAW;AAAA,QACjB;AAAA,MACD,CAAC;AAAA,IACF;AAAA,EACD;AAAA,EAltBD,OAmiBgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAK/B,OAAgB,SAAS,IAAI;AAAA,IAC5B;AAAA,IACA;AAAA,IACA;AAAA,MACC,MAAM;AAAA,MACN,aAAa;AAAA,QACZ;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EACA,OAAgB,WAAW,IAAI;AAAA,IAC9B;AAAA,IACA;AAAA,IACA;AAAA,MACC,MAAM;AAAA,MACN,aAAa;AAAA,QACZ;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EACA,OAAgB,UAAU,IAAI;AAAA,IAC7B;AAAA,IACA;AAAA,IACA;AAAA,MACC,MAAM;AAAA,MACN,aAAa;AAAA,QACZ;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EACA,OAAgB,OAAO,IAAI;AAAA,IAC1B;AAAA,IACA;AAAA,IACA;AAAA,MACC,MAAM;AAAA,MACN,aAAa;AAAA,QACZ;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EACA,OAAgB,SAAS,IAAI;AAAA,IAC5B;AAAA,IACA;AAAA,IACA;AAAA,MACC,MAAM;AAAA,MACN,aAAa;AAAA,QACZ;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EACA,OAAgB,WAAW,IAAI;AAAA,IAC9B;AAAA,IACA;AAAA,IACA;AAAA,MACC,MAAM;AAAA,MACN,aAAa;AAAA,QACZ;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EACA,OAAgB,YAAY,IAAI;AAAA,IAC/B;AAAA,IACA;AAAA,IACA;AAAA,MACC,MAAM;AAAA,MACN,aAAa;AAAA,QACZ;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EACA,OAAgB,cAAc,IAAI;AAAA,IACjC;AAAA,IACA;AAAA,IACA;AAAA,MACC,MAAM;AAAA,MACN,aAAa;AAAA,QACZ;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EACA,OAAgB,uBAAuB,IAAI;AAAA,IAC1C;AAAA,IACA;AAAA,IACA;AAAA,MACC,MAAM;AAAA,MACN,aAAa;AAAA,QACZ;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EAEiB,eAAe,IAAI,gBAAgB;AAAA,EAE5C;AAAA,EACS;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EA6DjB,UAAgB;AACf,SAAK,aAAa,QAAQ;AAAA,EAC3B;AAAA,EAEQ,aAAmB;AAC1B,UAAM,QAAQ,KAAK,IAAI;AACvB,QAAI,CAAC,OAAO;AACX,WAAK,WAAW,IAAI,IAAI;AACxB;AAAA,IACD;AACA,UAAM,SACL,KAAK,cAAc,SAAS,KAAK,GAAG,cAAc,KAClD,KAAK,iBAAiB,qCAAqC,KAAK;AACjE,SAAK,WAAW,IAAI,MAAM;AAAA,EAC3B;AAAA,EAEA,IAAI,OAA+B;AAClC,YAAQ,SAAS;AACjB,QAAI,QAAQ,KAAK,QAAQ,KAAK,GAAG;AAChC;AAAA,IACD;AACA,SAAK,SAAS;AACd,SAAK,mBAAmB,mBAAmB,MAAM;AAChD,WAAK,aAAa,IAAI,QAAQ,MAAM,SAAS,IAAI,IAAI;AACrD,WAAK,WAAW,IAAI,QAAQ,MAAM,SAAS,IAAI;AAC/C,WAAK,aAAa,IAAI,QAAQ,SAAS,KAAK,IAAI,IAAI;AACpD,WAAK,YAAY,IAAI,QAAQ,KAAK,UAAU,QAAQ,KAAK,CAAC,IAAI,IAAI;AAClE,WAAK,SAAS,IAAI,QAAQ,KAAK,UAAU,KAAK,IAAI,IAAI;AACtD,WAAK,WAAW;AAChB,WAAK,cAAc,IAAI,QAAQ,QAAQ,KAAK,IAAI,IAAI;AACpD,WAAK,aAAa,IAAI,QAAQ,KAAK,CAAC;AACpC,WAAK,sBAAsB;AAAA,QAC1B,QAAQ,KAAK,aAAa,YAAY,KAAK,IAAI;AAAA,MAChD;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEQ,UAAU,KAAkB;AACnC,QAAI,IAAI,WAAW,QAAQ,MAAM;AAChC,aAAO,IAAI;AAAA,IACZ;AAEA,WAAO,IAAI;AAAA,EACZ;AAAA,EAEA,QAAc;AACb,SAAK,SAAS;AACd,SAAK,mBAAmB,mBAAmB,MAAM;AAChD,WAAK,aAAa,MAAM;AACxB,WAAK,WAAW,MAAM;AACtB,WAAK,aAAa,MAAM;AACxB,WAAK,YAAY,MAAM;AACvB,WAAK,SAAS,MAAM;AACpB,WAAK,WAAW,MAAM;AACtB,WAAK,cAAc,MAAM;AACzB,WAAK,aAAa,MAAM;AACxB,WAAK,sBAAsB,MAAM;AAAA,IAClC,CAAC;AAAA,EACF;AAAA,EAEA,MAAuB;AACtB,WAAO,KAAK;AAAA,EACb;AACD;AAhPa,qBAAN;AAAA,EAuHJ;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,GA3HU;AAoPN,SAAS,wBACf,YACA,QACA,uBACO;AACP,MAAI,CAAC,QAAQ;AACZ,eAAW,IAAI,EAAE;AACjB;AAAA,EACD;AAEA,QAAM,iBAAiB,OAAO;AAC9B,MACC,gBAAgB,WAAW,QAAQ,YACnC,OAAO,aAAa,2BAA2B,IAC9C;AAGD,eAAW,IAAI,EAAE;AAAA,EAClB,OAAO;AACN,UAAM,UAAU,iBACb,sBACC,WAAW,cAAc,EACzB,IAAI,CAACA,YAAWA,QAAO,EAAE,IAC1B,CAAC;AACJ,eAAW,IAAI,QAAQ,KAAK,GAAG,CAAC;AAAA,EACjC;AACD;AA1BgB;",
  "names": ["editor"]
}
