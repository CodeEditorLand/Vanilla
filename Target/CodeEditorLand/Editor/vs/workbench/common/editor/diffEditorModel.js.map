{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/common/editor/diffEditorModel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { EditorModel } from './editorModel.js';\nimport { IResolvableEditorModel } from '../../../platform/editor/common/editor.js';\n\n/**\n * The base editor model for the diff editor. It is made up of two editor models, the original version\n * and the modified version.\n */\nexport class DiffEditorModel extends EditorModel {\n\n\tprotected readonly _originalModel: IResolvableEditorModel | undefined;\n\tget originalModel(): IResolvableEditorModel | undefined { return this._originalModel; }\n\n\tprotected readonly _modifiedModel: IResolvableEditorModel | undefined;\n\tget modifiedModel(): IResolvableEditorModel | undefined { return this._modifiedModel; }\n\n\tconstructor(originalModel: IResolvableEditorModel | undefined, modifiedModel: IResolvableEditorModel | undefined) {\n\t\tsuper();\n\n\t\tthis._originalModel = originalModel;\n\t\tthis._modifiedModel = modifiedModel;\n\t}\n\n\toverride async resolve(): Promise<void> {\n\t\tawait Promise.all([\n\t\t\tthis._originalModel?.resolve(),\n\t\t\tthis._modifiedModel?.resolve()\n\t\t]);\n\t}\n\n\toverride isResolved(): boolean {\n\t\treturn !!(this._originalModel?.isResolved() && this._modifiedModel?.isResolved());\n\t}\n\n\toverride dispose(): void {\n\n\t\t// Do not propagate the dispose() call to the two models inside. We never created the two models\n\t\t// (original and modified) so we can not dispose them without sideeffects. Rather rely on the\n\t\t// models getting disposed when their related inputs get disposed from the diffEditorInput.\n\n\t\tsuper.dispose();\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,mBAAmB;AAC5B,SAAS,8BAA8B;AAMhC,MAAM,wBAAwB,YAAY;AAAA,EAZjD,OAYiD;AAAA;AAAA;AAAA,EAE7B;AAAA,EACnB,IAAI,gBAAoD;AAAE,WAAO,KAAK;AAAA,EAAgB;AAAA,EAEnE;AAAA,EACnB,IAAI,gBAAoD;AAAE,WAAO,KAAK;AAAA,EAAgB;AAAA,EAEtF,YAAY,eAAmD,eAAmD;AACjH,UAAM;AAEN,SAAK,iBAAiB;AACtB,SAAK,iBAAiB;AAAA,EACvB;AAAA,EAEA,MAAe,UAAyB;AACvC,UAAM,QAAQ,IAAI;AAAA,MACjB,KAAK,gBAAgB,QAAQ;AAAA,MAC7B,KAAK,gBAAgB,QAAQ;AAAA,IAC9B,CAAC;AAAA,EACF;AAAA,EAES,aAAsB;AAC9B,WAAO,CAAC,EAAE,KAAK,gBAAgB,WAAW,KAAK,KAAK,gBAAgB,WAAW;AAAA,EAChF;AAAA,EAES,UAAgB;AAMxB,UAAM,QAAQ;AAAA,EACf;AACD;",
  "names": []
}
