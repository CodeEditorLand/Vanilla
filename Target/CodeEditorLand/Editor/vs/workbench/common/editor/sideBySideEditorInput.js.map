{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/common/editor/sideBySideEditorInput.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from '../../../base/common/event.js';\nimport { IMarkdownString } from '../../../base/common/htmlContent.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { localize } from '../../../nls.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { Registry } from '../../../platform/registry/common/platform.js';\nimport { EditorInputCapabilities, GroupIdentifier, ISaveOptions, IRevertOptions, EditorExtensions, IEditorFactoryRegistry, IEditorSerializer, ISideBySideEditorInput, IUntypedEditorInput, isResourceSideBySideEditorInput, isDiffEditorInput, isResourceDiffEditorInput, IResourceSideBySideEditorInput, findViewStateForEditor, IMoveResult, isEditorInput, isResourceEditorInput, Verbosity, isResourceMergeEditorInput, isResourceMultiDiffEditorInput } from '../editor.js';\nimport { EditorInput, IUntypedEditorOptions } from './editorInput.js';\nimport { IEditorService } from '../../services/editor/common/editorService.js';\n\n/**\n * Side by side editor inputs that have a primary and secondary side.\n */\nexport class SideBySideEditorInput extends EditorInput implements ISideBySideEditorInput {\n\n\tstatic readonly ID: string = 'workbench.editorinputs.sidebysideEditorInput';\n\n\toverride get typeId(): string {\n\t\treturn SideBySideEditorInput.ID;\n\t}\n\n\toverride get capabilities(): EditorInputCapabilities {\n\n\t\t// Use primary capabilities as main capabilities...\n\t\tlet capabilities = this.primary.capabilities;\n\n\t\t// ...with the exception of `CanSplitInGroup` which\n\t\t// is only relevant to single editors.\n\t\tcapabilities &= ~EditorInputCapabilities.CanSplitInGroup;\n\n\t\t// Trust: should be considered for both sides\n\t\tif (this.secondary.hasCapability(EditorInputCapabilities.RequiresTrust)) {\n\t\t\tcapabilities |= EditorInputCapabilities.RequiresTrust;\n\t\t}\n\n\t\t// Singleton: should be considered for both sides\n\t\tif (this.secondary.hasCapability(EditorInputCapabilities.Singleton)) {\n\t\t\tcapabilities |= EditorInputCapabilities.Singleton;\n\t\t}\n\n\t\t// Indicate we show more than one editor\n\t\tcapabilities |= EditorInputCapabilities.MultipleEditors;\n\n\t\treturn capabilities;\n\t}\n\n\tget resource(): URI | undefined {\n\t\tif (this.hasIdenticalSides) {\n\t\t\t// pretend to be just primary side when being asked for a resource\n\t\t\t// in case both sides are the same. this can help when components\n\t\t\t// want to identify this input among others (e.g. in history).\n\t\t\treturn this.primary.resource;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate hasIdenticalSides = this.primary.matches(this.secondary);\n\n\tconstructor(\n\t\tprotected readonly preferredName: string | undefined,\n\t\tprotected readonly preferredDescription: string | undefined,\n\t\treadonly secondary: EditorInput,\n\t\treadonly primary: EditorInput,\n\t\t@IEditorService private readonly editorService: IEditorService\n\t) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// When the primary or secondary input gets disposed, dispose this diff editor input\n\t\tthis._register(Event.once(Event.any(this.primary.onWillDispose, this.secondary.onWillDispose))(() => {\n\t\t\tif (!this.isDisposed()) {\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}));\n\n\t\t// Re-emit some events from the primary side to the outside\n\t\tthis._register(this.primary.onDidChangeDirty(() => this._onDidChangeDirty.fire()));\n\n\t\t// Re-emit some events from both sides to the outside\n\t\tthis._register(this.primary.onDidChangeCapabilities(() => this._onDidChangeCapabilities.fire()));\n\t\tthis._register(this.secondary.onDidChangeCapabilities(() => this._onDidChangeCapabilities.fire()));\n\t\tthis._register(this.primary.onDidChangeLabel(() => this._onDidChangeLabel.fire()));\n\t\tthis._register(this.secondary.onDidChangeLabel(() => this._onDidChangeLabel.fire()));\n\t}\n\n\toverride getName(): string {\n\t\tconst preferredName = this.getPreferredName();\n\t\tif (preferredName) {\n\t\t\treturn preferredName;\n\t\t}\n\n\t\tif (this.hasIdenticalSides) {\n\t\t\treturn this.primary.getName(); // keep name concise when same editor is opened side by side\n\t\t}\n\n\t\treturn localize('sideBySideLabels', \"{0} - {1}\", this.secondary.getName(), this.primary.getName());\n\t}\n\n\tgetPreferredName(): string | undefined {\n\t\treturn this.preferredName;\n\t}\n\n\toverride getDescription(verbosity?: Verbosity): string | undefined {\n\t\tconst preferredDescription = this.getPreferredDescription();\n\t\tif (preferredDescription) {\n\t\t\treturn preferredDescription;\n\t\t}\n\n\t\tif (this.hasIdenticalSides) {\n\t\t\treturn this.primary.getDescription(verbosity);\n\t\t}\n\n\t\treturn super.getDescription(verbosity);\n\t}\n\n\tgetPreferredDescription(): string | undefined {\n\t\treturn this.preferredDescription;\n\t}\n\n\toverride getTitle(verbosity?: Verbosity): string {\n\t\tlet title: string;\n\t\tif (this.hasIdenticalSides) {\n\t\t\ttitle = this.primary.getTitle(verbosity) ?? this.getName();\n\t\t} else {\n\t\t\ttitle = super.getTitle(verbosity);\n\t\t}\n\n\t\tconst preferredTitle = this.getPreferredTitle();\n\t\tif (preferredTitle) {\n\t\t\ttitle = `${preferredTitle} (${title})`;\n\t\t}\n\n\t\treturn title;\n\t}\n\n\tprotected getPreferredTitle(): string | undefined {\n\t\tif (this.preferredName && this.preferredDescription) {\n\t\t\treturn `${this.preferredName} ${this.preferredDescription}`;\n\t\t}\n\n\t\tif (this.preferredName || this.preferredDescription) {\n\t\t\treturn this.preferredName ?? this.preferredDescription;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\toverride getLabelExtraClasses(): string[] {\n\t\tif (this.hasIdenticalSides) {\n\t\t\treturn this.primary.getLabelExtraClasses();\n\t\t}\n\n\t\treturn super.getLabelExtraClasses();\n\t}\n\n\toverride getAriaLabel(): string {\n\t\tif (this.hasIdenticalSides) {\n\t\t\treturn this.primary.getAriaLabel();\n\t\t}\n\n\t\treturn super.getAriaLabel();\n\t}\n\n\toverride getTelemetryDescriptor(): { [key: string]: unknown } {\n\t\tconst descriptor = this.primary.getTelemetryDescriptor();\n\n\t\treturn { ...descriptor, ...super.getTelemetryDescriptor() };\n\t}\n\n\toverride isDirty(): boolean {\n\t\treturn this.primary.isDirty();\n\t}\n\n\toverride isSaving(): boolean {\n\t\treturn this.primary.isSaving();\n\t}\n\n\toverride async save(group: GroupIdentifier, options?: ISaveOptions): Promise<EditorInput | IUntypedEditorInput | undefined> {\n\t\tconst primarySaveResult = await this.primary.save(group, options);\n\n\t\treturn this.saveResultToEditor(primarySaveResult);\n\t}\n\n\toverride async saveAs(group: GroupIdentifier, options?: ISaveOptions): Promise<EditorInput | IUntypedEditorInput | undefined> {\n\t\tconst primarySaveResult = await this.primary.saveAs(group, options);\n\n\t\treturn this.saveResultToEditor(primarySaveResult);\n\t}\n\n\tprivate saveResultToEditor(primarySaveResult: EditorInput | IUntypedEditorInput | undefined): EditorInput | IUntypedEditorInput | undefined {\n\t\tif (!primarySaveResult || !this.hasIdenticalSides) {\n\t\t\treturn primarySaveResult;\n\t\t}\n\n\t\tif (this.primary.matches(primarySaveResult)) {\n\t\t\treturn this;\n\t\t}\n\n\t\tif (primarySaveResult instanceof EditorInput) {\n\t\t\treturn new SideBySideEditorInput(this.preferredName, this.preferredDescription, primarySaveResult, primarySaveResult, this.editorService);\n\t\t}\n\n\t\tif (!isResourceDiffEditorInput(primarySaveResult) && !isResourceMultiDiffEditorInput(primarySaveResult) && !isResourceSideBySideEditorInput(primarySaveResult) && !isResourceMergeEditorInput(primarySaveResult)) {\n\t\t\treturn {\n\t\t\t\tprimary: primarySaveResult,\n\t\t\t\tsecondary: primarySaveResult,\n\t\t\t\tlabel: this.preferredName,\n\t\t\t\tdescription: this.preferredDescription\n\t\t\t};\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\toverride revert(group: GroupIdentifier, options?: IRevertOptions): Promise<void> {\n\t\treturn this.primary.revert(group, options);\n\t}\n\n\toverride async rename(group: GroupIdentifier, target: URI): Promise<IMoveResult | undefined> {\n\t\tif (!this.hasIdenticalSides) {\n\t\t\treturn; // currently only enabled when both sides are identical\n\t\t}\n\n\t\t// Forward rename to primary side\n\t\tconst renameResult = await this.primary.rename(group, target);\n\t\tif (!renameResult) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Build a side-by-side result from the rename result\n\n\t\tif (isEditorInput(renameResult.editor)) {\n\t\t\treturn {\n\t\t\t\teditor: new SideBySideEditorInput(this.preferredName, this.preferredDescription, renameResult.editor, renameResult.editor, this.editorService),\n\t\t\t\toptions: {\n\t\t\t\t\t...renameResult.options,\n\t\t\t\t\tviewState: findViewStateForEditor(this, group, this.editorService)\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tif (isResourceEditorInput(renameResult.editor)) {\n\t\t\treturn {\n\t\t\t\teditor: {\n\t\t\t\t\tlabel: this.preferredName,\n\t\t\t\t\tdescription: this.preferredDescription,\n\t\t\t\t\tprimary: renameResult.editor,\n\t\t\t\t\tsecondary: renameResult.editor,\n\t\t\t\t\toptions: {\n\t\t\t\t\t\t...renameResult.options,\n\t\t\t\t\t\tviewState: findViewStateForEditor(this, group, this.editorService)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\toverride isReadonly(): boolean | IMarkdownString {\n\t\treturn this.primary.isReadonly();\n\t}\n\n\toverride toUntyped(options?: IUntypedEditorOptions): IResourceSideBySideEditorInput | undefined {\n\t\tconst primaryResourceEditorInput = this.primary.toUntyped(options);\n\t\tconst secondaryResourceEditorInput = this.secondary.toUntyped(options);\n\n\t\t// Prevent nested side by side editors which are unsupported\n\t\tif (\n\t\t\tprimaryResourceEditorInput && secondaryResourceEditorInput &&\n\t\t\t!isResourceDiffEditorInput(primaryResourceEditorInput) && !isResourceDiffEditorInput(secondaryResourceEditorInput) &&\n\t\t\t!isResourceMultiDiffEditorInput(primaryResourceEditorInput) && !isResourceMultiDiffEditorInput(secondaryResourceEditorInput) &&\n\t\t\t!isResourceSideBySideEditorInput(primaryResourceEditorInput) && !isResourceSideBySideEditorInput(secondaryResourceEditorInput) &&\n\t\t\t!isResourceMergeEditorInput(primaryResourceEditorInput) && !isResourceMergeEditorInput(secondaryResourceEditorInput)\n\t\t) {\n\t\t\tconst untypedInput: IResourceSideBySideEditorInput = {\n\t\t\t\tlabel: this.preferredName,\n\t\t\t\tdescription: this.preferredDescription,\n\t\t\t\tprimary: primaryResourceEditorInput,\n\t\t\t\tsecondary: secondaryResourceEditorInput\n\t\t\t};\n\n\t\t\tif (typeof options?.preserveViewState === 'number') {\n\t\t\t\tuntypedInput.options = {\n\t\t\t\t\tviewState: findViewStateForEditor(this, options.preserveViewState, this.editorService)\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn untypedInput;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\toverride matches(otherInput: EditorInput | IUntypedEditorInput): boolean {\n\t\tif (this === otherInput) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (isDiffEditorInput(otherInput) || isResourceDiffEditorInput(otherInput)) {\n\t\t\treturn false; // prevent subclass from matching\n\t\t}\n\n\t\tif (otherInput instanceof SideBySideEditorInput) {\n\t\t\treturn this.primary.matches(otherInput.primary) && this.secondary.matches(otherInput.secondary);\n\t\t}\n\n\t\tif (isResourceSideBySideEditorInput(otherInput)) {\n\t\t\treturn this.primary.matches(otherInput.primary) && this.secondary.matches(otherInput.secondary);\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\n// Register SideBySide/DiffEditor Input Serializer\ninterface ISerializedSideBySideEditorInput {\n\tname: string | undefined;\n\tdescription: string | undefined;\n\n\tprimarySerialized: string;\n\tsecondarySerialized: string;\n\n\tprimaryTypeId: string;\n\tsecondaryTypeId: string;\n}\n\nexport abstract class AbstractSideBySideEditorInputSerializer implements IEditorSerializer {\n\n\tcanSerialize(editorInput: EditorInput): boolean {\n\t\tconst input = editorInput as SideBySideEditorInput;\n\n\t\tif (input.primary && input.secondary) {\n\t\t\tconst [secondaryInputSerializer, primaryInputSerializer] = this.getSerializers(input.secondary.typeId, input.primary.typeId);\n\n\t\t\treturn !!(secondaryInputSerializer?.canSerialize(input.secondary) && primaryInputSerializer?.canSerialize(input.primary));\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tserialize(editorInput: EditorInput): string | undefined {\n\t\tconst input = editorInput as SideBySideEditorInput;\n\n\t\tif (input.primary && input.secondary) {\n\t\t\tconst [secondaryInputSerializer, primaryInputSerializer] = this.getSerializers(input.secondary.typeId, input.primary.typeId);\n\t\t\tif (primaryInputSerializer && secondaryInputSerializer) {\n\t\t\t\tconst primarySerialized = primaryInputSerializer.serialize(input.primary);\n\t\t\t\tconst secondarySerialized = secondaryInputSerializer.serialize(input.secondary);\n\n\t\t\t\tif (primarySerialized && secondarySerialized) {\n\t\t\t\t\tconst serializedEditorInput: ISerializedSideBySideEditorInput = {\n\t\t\t\t\t\tname: input.getPreferredName(),\n\t\t\t\t\t\tdescription: input.getPreferredDescription(),\n\t\t\t\t\t\tprimarySerialized,\n\t\t\t\t\t\tsecondarySerialized,\n\t\t\t\t\t\tprimaryTypeId: input.primary.typeId,\n\t\t\t\t\t\tsecondaryTypeId: input.secondary.typeId\n\t\t\t\t\t};\n\n\t\t\t\t\treturn JSON.stringify(serializedEditorInput);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tdeserialize(instantiationService: IInstantiationService, serializedEditorInput: string): EditorInput | undefined {\n\t\tconst deserialized: ISerializedSideBySideEditorInput = JSON.parse(serializedEditorInput);\n\n\t\tconst [secondaryInputSerializer, primaryInputSerializer] = this.getSerializers(deserialized.secondaryTypeId, deserialized.primaryTypeId);\n\t\tif (primaryInputSerializer && secondaryInputSerializer) {\n\t\t\tconst primaryInput = primaryInputSerializer.deserialize(instantiationService, deserialized.primarySerialized);\n\t\t\tconst secondaryInput = secondaryInputSerializer.deserialize(instantiationService, deserialized.secondarySerialized);\n\n\t\t\tif (primaryInput instanceof EditorInput && secondaryInput instanceof EditorInput) {\n\t\t\t\treturn this.createEditorInput(instantiationService, deserialized.name, deserialized.description, secondaryInput, primaryInput);\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate getSerializers(secondaryEditorInputTypeId: string, primaryEditorInputTypeId: string): [IEditorSerializer | undefined, IEditorSerializer | undefined] {\n\t\tconst registry = Registry.as<IEditorFactoryRegistry>(EditorExtensions.EditorFactory);\n\n\t\treturn [registry.getEditorSerializer(secondaryEditorInputTypeId), registry.getEditorSerializer(primaryEditorInputTypeId)];\n\t}\n\n\tprotected abstract createEditorInput(instantiationService: IInstantiationService, name: string | undefined, description: string | undefined, secondaryInput: EditorInput, primaryInput: EditorInput): EditorInput;\n}\n\nexport class SideBySideEditorInputSerializer extends AbstractSideBySideEditorInputSerializer {\n\n\tprotected createEditorInput(instantiationService: IInstantiationService, name: string | undefined, description: string | undefined, secondaryInput: EditorInput, primaryInput: EditorInput): EditorInput {\n\t\treturn instantiationService.createInstance(SideBySideEditorInput, name, description, secondaryInput, primaryInput);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
