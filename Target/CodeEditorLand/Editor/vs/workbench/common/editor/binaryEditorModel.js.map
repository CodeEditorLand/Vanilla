{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/common/editor/binaryEditorModel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { EditorModel } from './editorModel.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { IFileService } from '../../../platform/files/common/files.js';\nimport { Mimes } from '../../../base/common/mime.js';\n\n/**\n * An editor model that just represents a resource that can be loaded.\n */\nexport class BinaryEditorModel extends EditorModel {\n\n\tprivate readonly mime = Mimes.binary;\n\n\tprivate size: number | undefined;\n\tprivate etag: string | undefined;\n\n\tconstructor(\n\t\treadonly resource: URI,\n\t\tprivate readonly name: string,\n\t\t@IFileService private readonly fileService: IFileService\n\t) {\n\t\tsuper();\n\t}\n\n\t/**\n\t * The name of the binary resource.\n\t */\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n\t/**\n\t * The size of the binary resource if known.\n\t */\n\tgetSize(): number | undefined {\n\t\treturn this.size;\n\t}\n\n\t/**\n\t * The mime of the binary resource if known.\n\t */\n\tgetMime(): string {\n\t\treturn this.mime;\n\t}\n\n\t/**\n\t * The etag of the binary resource if known.\n\t */\n\tgetETag(): string | undefined {\n\t\treturn this.etag;\n\t}\n\n\toverride async resolve(): Promise<void> {\n\n\t\t// Make sure to resolve up to date stat for file resources\n\t\tif (this.fileService.hasProvider(this.resource)) {\n\t\t\tconst stat = await this.fileService.stat(this.resource);\n\t\t\tthis.etag = stat.etag;\n\t\t\tif (typeof stat.size === 'number') {\n\t\t\t\tthis.size = stat.size;\n\t\t\t}\n\t\t}\n\n\t\treturn super.resolve();\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,mBAAmB;AAC5B,SAAS,WAAW;AACpB,SAAS,oBAAoB;AAC7B,SAAS,aAAa;AAKf,IAAM,oBAAN,cAAgC,YAAY;AAAA,EAOlD,YACU,UACQ,MACc,aAC9B;AACD,UAAM;AAJG;AACQ;AACc;AAAA,EAGhC;AAAA,EA1BD,OAamD;AAAA;AAAA;AAAA,EAEjC,OAAO,MAAM;AAAA,EAEtB;AAAA,EACA;AAAA;AAAA;AAAA;AAAA,EAaR,UAAkB;AACjB,WAAO,KAAK;AAAA,EACb;AAAA;AAAA;AAAA;AAAA,EAKA,UAA8B;AAC7B,WAAO,KAAK;AAAA,EACb;AAAA;AAAA;AAAA;AAAA,EAKA,UAAkB;AACjB,WAAO,KAAK;AAAA,EACb;AAAA;AAAA;AAAA;AAAA,EAKA,UAA8B;AAC7B,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,MAAe,UAAyB;AAGvC,QAAI,KAAK,YAAY,YAAY,KAAK,QAAQ,GAAG;AAChD,YAAM,OAAO,MAAM,KAAK,YAAY,KAAK,KAAK,QAAQ;AACtD,WAAK,OAAO,KAAK;AACjB,UAAI,OAAO,KAAK,SAAS,UAAU;AAClC,aAAK,OAAO,KAAK;AAAA,MAClB;AAAA,IACD;AAEA,WAAO,MAAM,QAAQ;AAAA,EACtB;AACD;AAxDa,oBAAN;AAAA,EAUJ;AAAA,GAVU;",
  "names": []
}
