var p=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var c=(d,r,e,t)=>{for(var i=t>1?void 0:t?f(r,e):r,s=d.length-1,a;s>=0;s--)(a=d[s])&&(i=(t?a(r,e,i):a(i))||i);return t&&i&&p(r,e,i),i},o=(d,r)=>(e,t)=>r(e,t,d);import{dirname as h,isEqual as m}from"../../../base/common/resources.js";import{ITextResourceConfigurationService as g}from"../../../editor/common/services/textResourceConfiguration.js";import{isConfigured as v}from"../../../platform/configuration/common/configuration.js";import{ByteSize as _,IFileService as b,getLargeFileConfirmationLimit as S}from"../../../platform/files/common/files.js";import{ILabelService as L}from"../../../platform/label/common/label.js";import{ICustomEditorLabelService as R}from"../../services/editor/common/customEditorLabelService.js";import{IFilesConfigurationService as D}from"../../services/filesConfiguration/common/filesConfigurationService.js";import{EditorInputCapabilities as l,Verbosity as n}from"../editor.js";import{EditorInput as I}from"./editorInput.js";let u=class extends I{constructor(e,t,i,s,a,y,T){super();this.resource=e;this.labelService=i;this.fileService=s;this.filesConfigurationService=a;this.textResourceConfigurationService=y;this.customEditorLabelService=T;this._preferredResource=t||e,this.registerListeners()}get capabilities(){let e=l.CanSplitInGroup;return this.fileService.hasProvider(this.resource)?this.filesConfigurationService.isReadonly(this.resource)&&(e|=l.Readonly):e|=l.Untitled,e&l.Readonly||(e|=l.CanDropIntoEditor),e}_preferredResource;get preferredResource(){return this._preferredResource}registerListeners(){this._register(this.labelService.onDidChangeFormatters(e=>this.onLabelEvent(e.scheme))),this._register(this.fileService.onDidChangeFileSystemProviderRegistrations(e=>this.onLabelEvent(e.scheme))),this._register(this.fileService.onDidChangeFileSystemProviderCapabilities(e=>this.onLabelEvent(e.scheme))),this._register(this.customEditorLabelService.onDidChange(()=>this.updateLabel()))}onLabelEvent(e){e===this._preferredResource.scheme&&this.updateLabel()}updateLabel(){this._name=void 0,this._shortDescription=void 0,this._mediumDescription=void 0,this._longDescription=void 0,this._shortTitle=void 0,this._mediumTitle=void 0,this._longTitle=void 0,this._onDidChangeLabel.fire()}setPreferredResource(e){m(e,this._preferredResource)||(this._preferredResource=e,this.updateLabel())}_name=void 0;getName(){return typeof this._name!="string"&&(this._name=this.customEditorLabelService.getName(this._preferredResource)??this.labelService.getUriBasenameLabel(this._preferredResource)),this._name}getDescription(e=n.MEDIUM){switch(e){case n.SHORT:return this.shortDescription;case n.LONG:return this.longDescription;case n.MEDIUM:default:return this.mediumDescription}}_shortDescription=void 0;get shortDescription(){return typeof this._shortDescription!="string"&&(this._shortDescription=this.labelService.getUriBasenameLabel(h(this._preferredResource))),this._shortDescription}_mediumDescription=void 0;get mediumDescription(){return typeof this._mediumDescription!="string"&&(this._mediumDescription=this.labelService.getUriLabel(h(this._preferredResource),{relative:!0})),this._mediumDescription}_longDescription=void 0;get longDescription(){return typeof this._longDescription!="string"&&(this._longDescription=this.labelService.getUriLabel(h(this._preferredResource))),this._longDescription}_shortTitle=void 0;get shortTitle(){return typeof this._shortTitle!="string"&&(this._shortTitle=this.getName()),this._shortTitle}_mediumTitle=void 0;get mediumTitle(){return typeof this._mediumTitle!="string"&&(this._mediumTitle=this.labelService.getUriLabel(this._preferredResource,{relative:!0})),this._mediumTitle}_longTitle=void 0;get longTitle(){return typeof this._longTitle!="string"&&(this._longTitle=this.labelService.getUriLabel(this._preferredResource)),this._longTitle}getTitle(e){switch(e){case n.SHORT:return this.shortTitle;case n.LONG:return this.longTitle;default:case n.MEDIUM:return this.mediumTitle}}isReadonly(){return this.filesConfigurationService.isReadonly(this.resource)}ensureLimits(e){if(e?.limits)return e.limits;const t=S(this.resource);let i;const s=this.textResourceConfigurationService.inspect(this.resource,null,"workbench.editorLargeFileConfirmation");return v(s)&&(i=s.value*_.MB),{size:i??t}}};u=c([o(2,L),o(3,b),o(4,D),o(5,g),o(6,R)],u);export{u as AbstractResourceEditorInput};
