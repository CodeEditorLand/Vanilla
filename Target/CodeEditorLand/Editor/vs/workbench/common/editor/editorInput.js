import{Emitter as t}from"../../../base/common/event.js";import"../../../base/common/htmlContent.js";import"../../../base/common/lifecycle.js";import{isEqual as n}from"../../../base/common/resources.js";import"../../../base/common/themables.js";import"../../../base/common/uri.js";import"../../../platform/dialogs/common/dialogs.js";import{AbstractEditorInput as o,EditorInputCapabilities as r,EditorResourceAccessor as s,isEditorInput as d,Verbosity as a}from"../editor.js";class O extends o{_onDidChangeDirty=this._register(new t);_onDidChangeLabel=this._register(new t);_onDidChangeCapabilities=this._register(new t);_onWillDispose=this._register(new t);onDidChangeDirty=this._onDidChangeDirty.event;onDidChangeLabel=this._onDidChangeLabel.event;onDidChangeCapabilities=this._onDidChangeCapabilities.event;onWillDispose=this._onWillDispose.event;closeHandler;get editorId(){}get capabilities(){return r.Readonly}hasCapability(e){return e===r.None?this.capabilities===r.None:(this.capabilities&e)!==0}isReadonly(){return this.hasCapability(r.Readonly)}getName(){return`Editor ${this.typeId}`}getDescription(e){}getTitle(e){return this.getName()}getLabelExtraClasses(){return[]}getAriaLabel(){return this.getTitle(a.SHORT)}getIcon(){}getTelemetryDescriptor(){return{typeId:this.typeId}}isDirty(){return!1}isModified(){return this.isDirty()}isSaving(){return!1}async resolve(){return null}async save(e,i){return this}async saveAs(e,i){return this}async revert(e,i){}async rename(e,i){}copy(){return this}canMove(e,i){return!0}matches(e){if(d(e))return this===e;const i=e.options?.override;return this.editorId!==i&&i!==void 0&&this.editorId!==void 0?!1:n(this.resource,s.getCanonicalUri(e))}prefersEditorPane(e){return e.at(0)}toUntyped(e){}isDisposed(){return this._store.isDisposed}dispose(){this.isDisposed()||this._onWillDispose.fire(),super.dispose()}}export{O as EditorInput};
