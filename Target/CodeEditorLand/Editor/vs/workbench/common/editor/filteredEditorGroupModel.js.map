{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/common/editor/filteredEditorGroupModel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IUntypedEditorInput, IMatchEditorOptions, EditorsOrder, GroupIdentifier } from '../editor.js';\nimport { EditorInput } from './editorInput.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { IGroupModelChangeEvent, IReadonlyEditorGroupModel } from './editorGroupModel.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\n\nabstract class FilteredEditorGroupModel extends Disposable implements IReadonlyEditorGroupModel {\n\n\tprivate readonly _onDidModelChange = this._register(new Emitter<IGroupModelChangeEvent>());\n\treadonly onDidModelChange = this._onDidModelChange.event;\n\n\tconstructor(\n\t\tprotected readonly model: IReadonlyEditorGroupModel\n\t) {\n\t\tsuper();\n\n\t\tthis._register(this.model.onDidModelChange(e => {\n\t\t\tconst candidateOrIndex = e.editorIndex ?? e.editor;\n\t\t\tif (candidateOrIndex !== undefined) {\n\t\t\t\tif (!this.filter(candidateOrIndex)) {\n\t\t\t\t\treturn; // exclude events for excluded items\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._onDidModelChange.fire(e);\n\t\t}));\n\t}\n\n\tget id(): GroupIdentifier { return this.model.id; }\n\tget isLocked(): boolean { return this.model.isLocked; }\n\tget stickyCount(): number { return this.model.stickyCount; }\n\n\tget activeEditor(): EditorInput | null { return this.model.activeEditor && this.filter(this.model.activeEditor) ? this.model.activeEditor : null; }\n\tget previewEditor(): EditorInput | null { return this.model.previewEditor && this.filter(this.model.previewEditor) ? this.model.previewEditor : null; }\n\tget selectedEditors(): EditorInput[] { return this.model.selectedEditors.filter(e => this.filter(e)); }\n\n\tisPinned(editorOrIndex: EditorInput | number): boolean { return this.model.isPinned(editorOrIndex); }\n\tisTransient(editorOrIndex: EditorInput | number): boolean { return this.model.isTransient(editorOrIndex); }\n\tisSticky(editorOrIndex: EditorInput | number): boolean { return this.model.isSticky(editorOrIndex); }\n\tisActive(editor: EditorInput | IUntypedEditorInput): boolean { return this.model.isActive(editor); }\n\tisSelected(editorOrIndex: EditorInput | number): boolean { return this.model.isSelected(editorOrIndex); }\n\n\tisFirst(editor: EditorInput): boolean {\n\t\treturn this.model.isFirst(editor, this.getEditors(EditorsOrder.SEQUENTIAL));\n\t}\n\n\tisLast(editor: EditorInput): boolean {\n\t\treturn this.model.isLast(editor, this.getEditors(EditorsOrder.SEQUENTIAL));\n\t}\n\n\tgetEditors(order: EditorsOrder, options?: { excludeSticky?: boolean }): EditorInput[] {\n\t\tconst editors = this.model.getEditors(order, options);\n\t\treturn editors.filter(e => this.filter(e));\n\t}\n\n\tfindEditor(candidate: EditorInput | null, options?: IMatchEditorOptions): [EditorInput, number] | undefined {\n\t\tconst result = this.model.findEditor(candidate, options);\n\t\tif (!result) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this.filter(result[1]) ? result : undefined;\n\t}\n\n\tabstract get count(): number;\n\n\tabstract getEditorByIndex(index: number): EditorInput | undefined;\n\tabstract indexOf(editor: EditorInput | IUntypedEditorInput | null, editors?: EditorInput[], options?: IMatchEditorOptions): number;\n\tabstract contains(editor: EditorInput | IUntypedEditorInput, options?: IMatchEditorOptions): boolean;\n\n\tprotected abstract filter(editorOrIndex: EditorInput | number): boolean;\n}\n\nexport class StickyEditorGroupModel extends FilteredEditorGroupModel {\n\tget count(): number { return this.model.stickyCount; }\n\n\toverride getEditors(order: EditorsOrder, options?: { excludeSticky?: boolean }): EditorInput[] {\n\t\tif (options?.excludeSticky) {\n\t\t\treturn [];\n\t\t}\n\t\tif (order === EditorsOrder.SEQUENTIAL) {\n\t\t\treturn this.model.getEditors(EditorsOrder.SEQUENTIAL).slice(0, this.model.stickyCount);\n\t\t}\n\t\treturn super.getEditors(order, options);\n\t}\n\n\toverride isSticky(editorOrIndex: number | EditorInput): boolean {\n\t\treturn true;\n\t}\n\n\tgetEditorByIndex(index: number): EditorInput | undefined {\n\t\treturn index < this.count ? this.model.getEditorByIndex(index) : undefined;\n\t}\n\n\tindexOf(editor: EditorInput | IUntypedEditorInput | null, editors?: EditorInput[], options?: IMatchEditorOptions): number {\n\t\tconst editorIndex = this.model.indexOf(editor, editors, options);\n\t\tif (editorIndex < 0 || editorIndex >= this.model.stickyCount) {\n\t\t\treturn -1;\n\t\t}\n\t\treturn editorIndex;\n\t}\n\n\tcontains(candidate: EditorInput | IUntypedEditorInput, options?: IMatchEditorOptions): boolean {\n\t\tconst editorIndex = this.model.indexOf(candidate, undefined, options);\n\t\treturn editorIndex >= 0 && editorIndex < this.model.stickyCount;\n\t}\n\n\tprotected filter(candidateOrIndex: EditorInput | number): boolean {\n\t\treturn this.model.isSticky(candidateOrIndex);\n\t}\n}\n\nexport class UnstickyEditorGroupModel extends FilteredEditorGroupModel {\n\tget count(): number { return this.model.count - this.model.stickyCount; }\n\toverride get stickyCount(): number { return 0; }\n\n\toverride isSticky(editorOrIndex: number | EditorInput): boolean {\n\t\treturn false;\n\t}\n\n\toverride getEditors(order: EditorsOrder, options?: { excludeSticky?: boolean }): EditorInput[] {\n\t\tif (order === EditorsOrder.SEQUENTIAL) {\n\t\t\treturn this.model.getEditors(EditorsOrder.SEQUENTIAL).slice(this.model.stickyCount);\n\t\t}\n\t\treturn super.getEditors(order, options);\n\t}\n\n\tgetEditorByIndex(index: number): EditorInput | undefined {\n\t\treturn index >= 0 ? this.model.getEditorByIndex(index + this.model.stickyCount) : undefined;\n\t}\n\n\tindexOf(editor: EditorInput | IUntypedEditorInput | null, editors?: EditorInput[], options?: IMatchEditorOptions): number {\n\t\tconst editorIndex = this.model.indexOf(editor, editors, options);\n\t\tif (editorIndex < this.model.stickyCount || editorIndex >= this.model.count) {\n\t\t\treturn -1;\n\t\t}\n\t\treturn editorIndex - this.model.stickyCount;\n\t}\n\n\tcontains(candidate: EditorInput | IUntypedEditorInput, options?: IMatchEditorOptions): boolean {\n\t\tconst editorIndex = this.model.indexOf(candidate, undefined, options);\n\t\treturn editorIndex >= this.model.stickyCount && editorIndex < this.model.count;\n\t}\n\n\tprotected filter(candidateOrIndex: EditorInput | number): boolean {\n\t\treturn !this.model.isSticky(candidateOrIndex);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
