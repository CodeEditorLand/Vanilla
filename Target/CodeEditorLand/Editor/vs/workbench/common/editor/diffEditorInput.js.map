{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/common/editor/diffEditorInput.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { shorten } from \"../../../base/common/labels.js\";\nimport { localize } from \"../../../nls.js\";\nimport { isResolvedEditorModel } from \"../../../platform/editor/common/editor.js\";\nimport type { IInstantiationService } from \"../../../platform/instantiation/common/instantiation.js\";\nimport { IEditorService } from \"../../services/editor/common/editorService.js\";\nimport {\n\tBINARY_DIFF_EDITOR_ID,\n\tEditorInputCapabilities,\n\ttype IDiffEditorInput,\n\ttype IEditorDescriptor,\n\ttype IEditorPane,\n\ttype IResourceDiffEditorInput,\n\ttype IResourceSideBySideEditorInput,\n\ttype IUntypedEditorInput,\n\tTEXT_DIFF_EDITOR_ID,\n\tVerbosity,\n\tisResourceDiffEditorInput,\n} from \"../editor.js\";\nimport { DiffEditorModel } from \"./diffEditorModel.js\";\nimport type { EditorInput, IUntypedEditorOptions } from \"./editorInput.js\";\nimport type { EditorModel } from \"./editorModel.js\";\nimport {\n\tAbstractSideBySideEditorInputSerializer,\n\tSideBySideEditorInput,\n} from \"./sideBySideEditorInput.js\";\nimport { TextDiffEditorModel } from \"./textDiffEditorModel.js\";\nimport { BaseTextEditorModel } from \"./textEditorModel.js\";\n\ninterface IDiffEditorInputLabels {\n\tname: string;\n\n\tshortDescription: string | undefined;\n\tmediumDescription: string | undefined;\n\tlongDescription: string | undefined;\n\n\tforceDescription: boolean;\n\n\tshortTitle: string;\n\tmediumTitle: string;\n\tlongTitle: string;\n}\n\n/**\n * The base editor input for the diff editor. It is made up of two editor inputs, the original version\n * and the modified version.\n */\nexport class DiffEditorInput\n\textends SideBySideEditorInput\n\timplements IDiffEditorInput\n{\n\tstatic override readonly ID: string = \"workbench.editors.diffEditorInput\";\n\n\toverride get typeId(): string {\n\t\treturn DiffEditorInput.ID;\n\t}\n\n\toverride get editorId(): string | undefined {\n\t\treturn this.modified.editorId === this.original.editorId\n\t\t\t? this.modified.editorId\n\t\t\t: undefined;\n\t}\n\n\toverride get capabilities(): EditorInputCapabilities {\n\t\tlet capabilities = super.capabilities;\n\n\t\t// Force description capability depends on labels\n\t\tif (this.labels.forceDescription) {\n\t\t\tcapabilities |= EditorInputCapabilities.ForceDescription;\n\t\t}\n\n\t\treturn capabilities;\n\t}\n\n\tprivate cachedModel: DiffEditorModel | undefined = undefined;\n\n\tprivate readonly labels = this.computeLabels();\n\n\tconstructor(\n\t\tpreferredName: string | undefined,\n\t\tpreferredDescription: string | undefined,\n\t\treadonly original: EditorInput,\n\t\treadonly modified: EditorInput,\n\t\tprivate readonly forceOpenAsBinary: boolean | undefined,\n\t\t@IEditorService editorService: IEditorService,\n\t) {\n\t\tsuper(\n\t\t\tpreferredName,\n\t\t\tpreferredDescription,\n\t\t\toriginal,\n\t\t\tmodified,\n\t\t\teditorService,\n\t\t);\n\t}\n\n\tprivate computeLabels(): IDiffEditorInputLabels {\n\t\t// Name\n\t\tlet name: string;\n\t\tlet forceDescription = false;\n\t\tif (this.preferredName) {\n\t\t\tname = this.preferredName;\n\t\t} else {\n\t\t\tconst originalName = this.original.getName();\n\t\t\tconst modifiedName = this.modified.getName();\n\n\t\t\tname = localize(\n\t\t\t\t\"sideBySideLabels\",\n\t\t\t\t\"{0} \u2194 {1}\",\n\t\t\t\toriginalName,\n\t\t\t\tmodifiedName,\n\t\t\t);\n\n\t\t\t// Enforce description when the names are identical\n\t\t\tforceDescription = originalName === modifiedName;\n\t\t}\n\n\t\t// Description\n\t\tlet shortDescription: string | undefined;\n\t\tlet mediumDescription: string | undefined;\n\t\tlet longDescription: string | undefined;\n\t\tif (this.preferredDescription) {\n\t\t\tshortDescription = this.preferredDescription;\n\t\t\tmediumDescription = this.preferredDescription;\n\t\t\tlongDescription = this.preferredDescription;\n\t\t} else {\n\t\t\tshortDescription = this.computeLabel(\n\t\t\t\tthis.original.getDescription(Verbosity.SHORT),\n\t\t\t\tthis.modified.getDescription(Verbosity.SHORT),\n\t\t\t);\n\t\t\tlongDescription = this.computeLabel(\n\t\t\t\tthis.original.getDescription(Verbosity.LONG),\n\t\t\t\tthis.modified.getDescription(Verbosity.LONG),\n\t\t\t);\n\n\t\t\t// Medium Description: try to be verbose by computing\n\t\t\t// a label that resembles the difference between the two\n\t\t\tconst originalMediumDescription = this.original.getDescription(\n\t\t\t\tVerbosity.MEDIUM,\n\t\t\t);\n\t\t\tconst modifiedMediumDescription = this.modified.getDescription(\n\t\t\t\tVerbosity.MEDIUM,\n\t\t\t);\n\t\t\tif (\n\t\t\t\ttypeof originalMediumDescription === \"string\" &&\n\t\t\t\ttypeof modifiedMediumDescription === \"string\" && // we can only `shorten` when both sides are strings...\n\t\t\t\t(originalMediumDescription || modifiedMediumDescription) // ...however never when both sides are empty strings\n\t\t\t) {\n\t\t\t\tconst [\n\t\t\t\t\tshortenedOriginalMediumDescription,\n\t\t\t\t\tshortenedModifiedMediumDescription,\n\t\t\t\t] = shorten([\n\t\t\t\t\toriginalMediumDescription,\n\t\t\t\t\tmodifiedMediumDescription,\n\t\t\t\t]);\n\t\t\t\tmediumDescription = this.computeLabel(\n\t\t\t\t\tshortenedOriginalMediumDescription,\n\t\t\t\t\tshortenedModifiedMediumDescription,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// Title\n\t\tlet shortTitle = this.computeLabel(\n\t\t\tthis.original.getTitle(Verbosity.SHORT) ?? this.original.getName(),\n\t\t\tthis.modified.getTitle(Verbosity.SHORT) ?? this.modified.getName(),\n\t\t\t\" \u2194 \",\n\t\t);\n\t\tlet mediumTitle = this.computeLabel(\n\t\t\tthis.original.getTitle(Verbosity.MEDIUM) ?? this.original.getName(),\n\t\t\tthis.modified.getTitle(Verbosity.MEDIUM) ?? this.modified.getName(),\n\t\t\t\" \u2194 \",\n\t\t);\n\t\tlet longTitle = this.computeLabel(\n\t\t\tthis.original.getTitle(Verbosity.LONG) ?? this.original.getName(),\n\t\t\tthis.modified.getTitle(Verbosity.LONG) ?? this.modified.getName(),\n\t\t\t\" \u2194 \",\n\t\t);\n\n\t\tconst preferredTitle = this.getPreferredTitle();\n\t\tif (preferredTitle) {\n\t\t\tshortTitle = `${preferredTitle} (${shortTitle})`;\n\t\t\tmediumTitle = `${preferredTitle} (${mediumTitle})`;\n\t\t\tlongTitle = `${preferredTitle} (${longTitle})`;\n\t\t}\n\n\t\treturn {\n\t\t\tname,\n\t\t\tshortDescription,\n\t\t\tmediumDescription,\n\t\t\tlongDescription,\n\t\t\tforceDescription,\n\t\t\tshortTitle,\n\t\t\tmediumTitle,\n\t\t\tlongTitle,\n\t\t};\n\t}\n\n\tprivate computeLabel(\n\t\toriginalLabel: string,\n\t\tmodifiedLabel: string,\n\t\tseparator?: string,\n\t): string;\n\tprivate computeLabel(\n\t\toriginalLabel: string | undefined,\n\t\tmodifiedLabel: string | undefined,\n\t\tseparator?: string,\n\t): string | undefined;\n\tprivate computeLabel(\n\t\toriginalLabel: string | undefined,\n\t\tmodifiedLabel: string | undefined,\n\t\tseparator = \" - \",\n\t): string | undefined {\n\t\tif (!originalLabel || !modifiedLabel) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (originalLabel === modifiedLabel) {\n\t\t\treturn modifiedLabel;\n\t\t}\n\n\t\treturn `${originalLabel}${separator}${modifiedLabel}`;\n\t}\n\n\toverride getName(): string {\n\t\treturn this.labels.name;\n\t}\n\n\toverride getDescription(verbosity = Verbosity.MEDIUM): string | undefined {\n\t\tswitch (verbosity) {\n\t\t\tcase Verbosity.SHORT:\n\t\t\t\treturn this.labels.shortDescription;\n\t\t\tcase Verbosity.LONG:\n\t\t\t\treturn this.labels.longDescription;\n\t\t\tcase Verbosity.MEDIUM:\n\t\t\tdefault:\n\t\t\t\treturn this.labels.mediumDescription;\n\t\t}\n\t}\n\n\toverride getTitle(verbosity?: Verbosity): string {\n\t\tswitch (verbosity) {\n\t\t\tcase Verbosity.SHORT:\n\t\t\t\treturn this.labels.shortTitle;\n\t\t\tcase Verbosity.LONG:\n\t\t\t\treturn this.labels.longTitle;\n\t\t\tdefault:\n\t\t\tcase Verbosity.MEDIUM:\n\t\t\t\treturn this.labels.mediumTitle;\n\t\t}\n\t}\n\n\toverride async resolve(): Promise<EditorModel> {\n\t\t// Create Model - we never reuse our cached model if refresh is true because we cannot\n\t\t// decide for the inputs within if the cached model can be reused or not. There may be\n\t\t// inputs that need to be loaded again and thus we always recreate the model and dispose\n\t\t// the previous one - if any.\n\t\tconst resolvedModel = await this.createModel();\n\t\tthis.cachedModel?.dispose();\n\n\t\tthis.cachedModel = resolvedModel;\n\n\t\treturn this.cachedModel;\n\t}\n\n\toverride prefersEditorPane<T extends IEditorDescriptor<IEditorPane>>(\n\t\teditorPanes: T[],\n\t): T | undefined {\n\t\tif (this.forceOpenAsBinary) {\n\t\t\treturn editorPanes.find(\n\t\t\t\t(editorPane) => editorPane.typeId === BINARY_DIFF_EDITOR_ID,\n\t\t\t);\n\t\t}\n\n\t\treturn editorPanes.find(\n\t\t\t(editorPane) => editorPane.typeId === TEXT_DIFF_EDITOR_ID,\n\t\t);\n\t}\n\n\tprivate async createModel(): Promise<DiffEditorModel> {\n\t\t// Join resolve call over two inputs and build diff editor model\n\t\tconst [originalEditorModel, modifiedEditorModel] = await Promise.all([\n\t\t\tthis.original.resolve(),\n\t\t\tthis.modified.resolve(),\n\t\t]);\n\n\t\t// If both are text models, return textdiffeditor model\n\t\tif (\n\t\t\tmodifiedEditorModel instanceof BaseTextEditorModel &&\n\t\t\toriginalEditorModel instanceof BaseTextEditorModel\n\t\t) {\n\t\t\treturn new TextDiffEditorModel(\n\t\t\t\toriginalEditorModel,\n\t\t\t\tmodifiedEditorModel,\n\t\t\t);\n\t\t}\n\n\t\t// Otherwise return normal diff model\n\t\treturn new DiffEditorModel(\n\t\t\tisResolvedEditorModel(originalEditorModel)\n\t\t\t\t? originalEditorModel\n\t\t\t\t: undefined,\n\t\t\tisResolvedEditorModel(modifiedEditorModel)\n\t\t\t\t? modifiedEditorModel\n\t\t\t\t: undefined,\n\t\t);\n\t}\n\n\toverride toUntyped(\n\t\toptions?: IUntypedEditorOptions,\n\t): (IResourceDiffEditorInput & IResourceSideBySideEditorInput) | undefined {\n\t\tconst untyped = super.toUntyped(options);\n\t\tif (untyped) {\n\t\t\treturn {\n\t\t\t\t...untyped,\n\t\t\t\tmodified: untyped.primary,\n\t\t\t\toriginal: untyped.secondary,\n\t\t\t};\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\toverride matches(otherInput: EditorInput | IUntypedEditorInput): boolean {\n\t\tif (this === otherInput) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (otherInput instanceof DiffEditorInput) {\n\t\t\treturn (\n\t\t\t\tthis.modified.matches(otherInput.modified) &&\n\t\t\t\tthis.original.matches(otherInput.original) &&\n\t\t\t\totherInput.forceOpenAsBinary === this.forceOpenAsBinary\n\t\t\t);\n\t\t}\n\n\t\tif (isResourceDiffEditorInput(otherInput)) {\n\t\t\treturn (\n\t\t\t\tthis.modified.matches(otherInput.modified) &&\n\t\t\t\tthis.original.matches(otherInput.original)\n\t\t\t);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\toverride dispose(): void {\n\t\t// Free the diff editor model but do not propagate the dispose() call to the two inputs\n\t\t// We never created the two inputs (original and modified) so we can not dispose\n\t\t// them without sideeffects.\n\t\tif (this.cachedModel) {\n\t\t\tthis.cachedModel.dispose();\n\t\t\tthis.cachedModel = undefined;\n\t\t}\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport class DiffEditorInputSerializer extends AbstractSideBySideEditorInputSerializer {\n\tprotected createEditorInput(\n\t\tinstantiationService: IInstantiationService,\n\t\tname: string | undefined,\n\t\tdescription: string | undefined,\n\t\tsecondaryInput: EditorInput,\n\t\tprimaryInput: EditorInput,\n\t): EditorInput {\n\t\treturn instantiationService.createInstance(\n\t\t\tDiffEditorInput,\n\t\t\tname,\n\t\t\tdescription,\n\t\t\tsecondaryInput,\n\t\t\tprimaryInput,\n\t\t\tundefined,\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
