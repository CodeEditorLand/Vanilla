{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/common/editor/editorOptions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IRange } from '../../../editor/common/core/range.js';\nimport { ICodeEditorViewState, IDiffEditorViewState, IEditor, ScrollType } from '../../../editor/common/editorCommon.js';\nimport { ITextEditorOptions, TextEditorSelectionRevealType, TextEditorSelectionSource } from '../../../platform/editor/common/editor.js';\nimport { isTextEditorViewState } from '../editor.js';\n\nexport function applyTextEditorOptions(options: ITextEditorOptions, editor: IEditor, scrollType: ScrollType): boolean {\n\tlet applied = false;\n\n\t// Restore view state if any\n\tconst viewState = massageEditorViewState(options);\n\tif (isTextEditorViewState(viewState)) {\n\t\teditor.restoreViewState(viewState);\n\n\t\tapplied = true;\n\t}\n\n\t// Restore selection if any\n\tif (options.selection) {\n\t\tconst range: IRange = {\n\t\t\tstartLineNumber: options.selection.startLineNumber,\n\t\t\tstartColumn: options.selection.startColumn,\n\t\t\tendLineNumber: options.selection.endLineNumber ?? options.selection.startLineNumber,\n\t\t\tendColumn: options.selection.endColumn ?? options.selection.startColumn\n\t\t};\n\n\t\t// Apply selection with a source so that listeners can\n\t\t// distinguish this selection change from others.\n\t\t// If no source is provided, set a default source to\n\t\t// signal this navigation.\n\t\teditor.setSelection(range, options.selectionSource ?? TextEditorSelectionSource.NAVIGATION);\n\n\t\t// Reveal selection\n\t\tif (options.selectionRevealType === TextEditorSelectionRevealType.NearTop) {\n\t\t\teditor.revealRangeNearTop(range, scrollType);\n\t\t} else if (options.selectionRevealType === TextEditorSelectionRevealType.NearTopIfOutsideViewport) {\n\t\t\teditor.revealRangeNearTopIfOutsideViewport(range, scrollType);\n\t\t} else if (options.selectionRevealType === TextEditorSelectionRevealType.CenterIfOutsideViewport) {\n\t\t\teditor.revealRangeInCenterIfOutsideViewport(range, scrollType);\n\t\t} else {\n\t\t\teditor.revealRangeInCenter(range, scrollType);\n\t\t}\n\n\t\tapplied = true;\n\t}\n\n\treturn applied;\n}\n\nfunction massageEditorViewState(options: ITextEditorOptions): object | undefined {\n\n\t// Without a selection or view state, just return immediately\n\tif (!options.selection || !options.viewState) {\n\t\treturn options.viewState;\n\t}\n\n\t// Diff editor: since we have an explicit selection, clear the\n\t// cursor state from the modified side where the selection\n\t// applies. This avoids a redundant selection change event.\n\tconst candidateDiffViewState = options.viewState as IDiffEditorViewState;\n\tif (candidateDiffViewState.modified) {\n\t\tcandidateDiffViewState.modified.cursorState = [];\n\n\t\treturn candidateDiffViewState;\n\t}\n\n\t// Code editor: since we have an explicit selection, clear the\n\t// cursor state. This avoids a redundant selection change event.\n\tconst candidateEditorViewState = options.viewState as ICodeEditorViewState;\n\tif (candidateEditorViewState.cursorState) {\n\t\tcandidateEditorViewState.cursorState = [];\n\t}\n\n\treturn candidateEditorViewState;\n}\n"],
  "mappings": ";;AAKA,SAAS,cAAc;AACvB,SAAS,sBAAsB,sBAAsB,SAAS,kBAAkB;AAChF,SAAS,oBAAoB,+BAA+B,iCAAiC;AAC7F,SAAS,6BAA6B;AAE/B,SAAS,uBAAuB,SAA6B,QAAiB,YAAiC;AACrH,MAAI,UAAU;AAGd,QAAM,YAAY,uBAAuB,OAAO;AAChD,MAAI,sBAAsB,SAAS,GAAG;AACrC,WAAO,iBAAiB,SAAS;AAEjC,cAAU;AAAA,EACX;AAGA,MAAI,QAAQ,WAAW;AACtB,UAAM,QAAgB;AAAA,MACrB,iBAAiB,QAAQ,UAAU;AAAA,MACnC,aAAa,QAAQ,UAAU;AAAA,MAC/B,eAAe,QAAQ,UAAU,iBAAiB,QAAQ,UAAU;AAAA,MACpE,WAAW,QAAQ,UAAU,aAAa,QAAQ,UAAU;AAAA,IAC7D;AAMA,WAAO,aAAa,OAAO,QAAQ,mBAAmB,0BAA0B,UAAU;AAG1F,QAAI,QAAQ,wBAAwB,8BAA8B,SAAS;AAC1E,aAAO,mBAAmB,OAAO,UAAU;AAAA,IAC5C,WAAW,QAAQ,wBAAwB,8BAA8B,0BAA0B;AAClG,aAAO,oCAAoC,OAAO,UAAU;AAAA,IAC7D,WAAW,QAAQ,wBAAwB,8BAA8B,yBAAyB;AACjG,aAAO,qCAAqC,OAAO,UAAU;AAAA,IAC9D,OAAO;AACN,aAAO,oBAAoB,OAAO,UAAU;AAAA,IAC7C;AAEA,cAAU;AAAA,EACX;AAEA,SAAO;AACR;AAzCgB;AA2ChB,SAAS,uBAAuB,SAAiD;AAGhF,MAAI,CAAC,QAAQ,aAAa,CAAC,QAAQ,WAAW;AAC7C,WAAO,QAAQ;AAAA,EAChB;AAKA,QAAM,yBAAyB,QAAQ;AACvC,MAAI,uBAAuB,UAAU;AACpC,2BAAuB,SAAS,cAAc,CAAC;AAE/C,WAAO;AAAA,EACR;AAIA,QAAM,2BAA2B,QAAQ;AACzC,MAAI,yBAAyB,aAAa;AACzC,6BAAyB,cAAc,CAAC;AAAA,EACzC;AAEA,SAAO;AACR;AAzBS;",
  "names": []
}
