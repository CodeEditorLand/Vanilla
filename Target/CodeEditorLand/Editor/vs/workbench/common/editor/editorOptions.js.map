{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/common/editor/editorOptions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IRange } from \"../../../editor/common/core/range.js\";\nimport type {\n\tICodeEditorViewState,\n\tIDiffEditorViewState,\n\tIEditor,\n\tScrollType,\n} from \"../../../editor/common/editorCommon.js\";\nimport {\n\ttype ITextEditorOptions,\n\tTextEditorSelectionRevealType,\n\tTextEditorSelectionSource,\n} from \"../../../platform/editor/common/editor.js\";\nimport { isTextEditorViewState } from \"../editor.js\";\n\nexport function applyTextEditorOptions(\n\toptions: ITextEditorOptions,\n\teditor: IEditor,\n\tscrollType: ScrollType,\n): boolean {\n\tlet applied = false;\n\n\t// Restore view state if any\n\tconst viewState = massageEditorViewState(options);\n\tif (isTextEditorViewState(viewState)) {\n\t\teditor.restoreViewState(viewState);\n\n\t\tapplied = true;\n\t}\n\n\t// Restore selection if any\n\tif (options.selection) {\n\t\tconst range: IRange = {\n\t\t\tstartLineNumber: options.selection.startLineNumber,\n\t\t\tstartColumn: options.selection.startColumn,\n\t\t\tendLineNumber:\n\t\t\t\toptions.selection.endLineNumber ??\n\t\t\t\toptions.selection.startLineNumber,\n\t\t\tendColumn:\n\t\t\t\toptions.selection.endColumn ?? options.selection.startColumn,\n\t\t};\n\n\t\t// Apply selection with a source so that listeners can\n\t\t// distinguish this selection change from others.\n\t\t// If no source is provided, set a default source to\n\t\t// signal this navigation.\n\t\teditor.setSelection(\n\t\t\trange,\n\t\t\toptions.selectionSource ?? TextEditorSelectionSource.NAVIGATION,\n\t\t);\n\n\t\t// Reveal selection\n\t\tif (\n\t\t\toptions.selectionRevealType ===\n\t\t\tTextEditorSelectionRevealType.NearTop\n\t\t) {\n\t\t\teditor.revealRangeNearTop(range, scrollType);\n\t\t} else if (\n\t\t\toptions.selectionRevealType ===\n\t\t\tTextEditorSelectionRevealType.NearTopIfOutsideViewport\n\t\t) {\n\t\t\teditor.revealRangeNearTopIfOutsideViewport(range, scrollType);\n\t\t} else if (\n\t\t\toptions.selectionRevealType ===\n\t\t\tTextEditorSelectionRevealType.CenterIfOutsideViewport\n\t\t) {\n\t\t\teditor.revealRangeInCenterIfOutsideViewport(range, scrollType);\n\t\t} else {\n\t\t\teditor.revealRangeInCenter(range, scrollType);\n\t\t}\n\n\t\tapplied = true;\n\t}\n\n\treturn applied;\n}\n\nfunction massageEditorViewState(\n\toptions: ITextEditorOptions,\n): object | undefined {\n\t// Without a selection or view state, just return immediately\n\tif (!options.selection || !options.viewState) {\n\t\treturn options.viewState;\n\t}\n\n\t// Diff editor: since we have an explicit selection, clear the\n\t// cursor state from the modified side where the selection\n\t// applies. This avoids a redundant selection change event.\n\tconst candidateDiffViewState = options.viewState as IDiffEditorViewState;\n\tif (candidateDiffViewState.modified) {\n\t\tcandidateDiffViewState.modified.cursorState = [];\n\n\t\treturn candidateDiffViewState;\n\t}\n\n\t// Code editor: since we have an explicit selection, clear the\n\t// cursor state. This avoids a redundant selection change event.\n\tconst candidateEditorViewState = options.viewState as ICodeEditorViewState;\n\tif (candidateEditorViewState.cursorState) {\n\t\tcandidateEditorViewState.cursorState = [];\n\t}\n\n\treturn candidateEditorViewState;\n}\n"],
  "mappings": ";;AAYA;AAAA,EAEC;AAAA,EACA;AAAA,OACM;AACP,SAAS,6BAA6B;AAE/B,SAAS,uBACf,SACA,QACA,YACU;AACV,MAAI,UAAU;AAGd,QAAM,YAAY,uBAAuB,OAAO;AAChD,MAAI,sBAAsB,SAAS,GAAG;AACrC,WAAO,iBAAiB,SAAS;AAEjC,cAAU;AAAA,EACX;AAGA,MAAI,QAAQ,WAAW;AACtB,UAAM,QAAgB;AAAA,MACrB,iBAAiB,QAAQ,UAAU;AAAA,MACnC,aAAa,QAAQ,UAAU;AAAA,MAC/B,eACC,QAAQ,UAAU,iBAClB,QAAQ,UAAU;AAAA,MACnB,WACC,QAAQ,UAAU,aAAa,QAAQ,UAAU;AAAA,IACnD;AAMA,WAAO;AAAA,MACN;AAAA,MACA,QAAQ,mBAAmB,0BAA0B;AAAA,IACtD;AAGA,QACC,QAAQ,wBACR,8BAA8B,SAC7B;AACD,aAAO,mBAAmB,OAAO,UAAU;AAAA,IAC5C,WACC,QAAQ,wBACR,8BAA8B,0BAC7B;AACD,aAAO,oCAAoC,OAAO,UAAU;AAAA,IAC7D,WACC,QAAQ,wBACR,8BAA8B,yBAC7B;AACD,aAAO,qCAAqC,OAAO,UAAU;AAAA,IAC9D,OAAO;AACN,aAAO,oBAAoB,OAAO,UAAU;AAAA,IAC7C;AAEA,cAAU;AAAA,EACX;AAEA,SAAO;AACR;AA5DgB;AA8DhB,SAAS,uBACR,SACqB;AAErB,MAAI,CAAC,QAAQ,aAAa,CAAC,QAAQ,WAAW;AAC7C,WAAO,QAAQ;AAAA,EAChB;AAKA,QAAM,yBAAyB,QAAQ;AACvC,MAAI,uBAAuB,UAAU;AACpC,2BAAuB,SAAS,cAAc,CAAC;AAE/C,WAAO;AAAA,EACR;AAIA,QAAM,2BAA2B,QAAQ;AACzC,MAAI,yBAAyB,aAAa;AACzC,6BAAyB,cAAc,CAAC;AAAA,EACzC;AAEA,SAAO;AACR;AA1BS;",
  "names": []
}
