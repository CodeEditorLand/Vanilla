{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/common/editor/resourceEditorInput.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IMarkdownString } from \"../../../base/common/htmlContent.js\";\nimport { dirname, isEqual } from \"../../../base/common/resources.js\";\nimport type { URI } from \"../../../base/common/uri.js\";\nimport { ITextResourceConfigurationService } from \"../../../editor/common/services/textResourceConfiguration.js\";\nimport { isConfigured } from \"../../../platform/configuration/common/configuration.js\";\nimport {\n\tByteSize,\n\ttype IFileReadLimits,\n\tIFileService,\n\tgetLargeFileConfirmationLimit,\n} from \"../../../platform/files/common/files.js\";\nimport { ILabelService } from \"../../../platform/label/common/label.js\";\nimport { ICustomEditorLabelService } from \"../../services/editor/common/customEditorLabelService.js\";\nimport { IFilesConfigurationService } from \"../../services/filesConfiguration/common/filesConfigurationService.js\";\nimport {\n\tEditorInputCapabilities,\n\ttype EditorInputWithPreferredResource,\n\ttype IFileLimitedEditorInputOptions,\n\tVerbosity,\n} from \"../editor.js\";\nimport { EditorInput } from \"./editorInput.js\";\n\n/**\n * The base class for all editor inputs that open resources.\n */\nexport abstract class AbstractResourceEditorInput\n\textends EditorInput\n\timplements EditorInputWithPreferredResource\n{\n\toverride get capabilities(): EditorInputCapabilities {\n\t\tlet capabilities = EditorInputCapabilities.CanSplitInGroup;\n\n\t\tif (this.fileService.hasProvider(this.resource)) {\n\t\t\tif (this.filesConfigurationService.isReadonly(this.resource)) {\n\t\t\t\tcapabilities |= EditorInputCapabilities.Readonly;\n\t\t\t}\n\t\t} else {\n\t\t\tcapabilities |= EditorInputCapabilities.Untitled;\n\t\t}\n\n\t\tif (!(capabilities & EditorInputCapabilities.Readonly)) {\n\t\t\tcapabilities |= EditorInputCapabilities.CanDropIntoEditor;\n\t\t}\n\n\t\treturn capabilities;\n\t}\n\n\tprivate _preferredResource: URI;\n\tget preferredResource(): URI {\n\t\treturn this._preferredResource;\n\t}\n\n\tconstructor(\n\t\treadonly resource: URI,\n\t\tpreferredResource: URI | undefined,\n\t\t@ILabelService protected readonly labelService: ILabelService,\n\t\t@IFileService protected readonly fileService: IFileService,\n\t\t@IFilesConfigurationService protected readonly filesConfigurationService: IFilesConfigurationService,\n\t\t@ITextResourceConfigurationService protected readonly textResourceConfigurationService: ITextResourceConfigurationService,\n\t\t@ICustomEditorLabelService protected readonly customEditorLabelService: ICustomEditorLabelService\n\t) {\n\t\tsuper();\n\n\t\tthis._preferredResource = preferredResource || resource;\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\t// Clear our labels on certain label related events\n\t\tthis._register(\n\t\t\tthis.labelService.onDidChangeFormatters((e) =>\n\t\t\t\tthis.onLabelEvent(e.scheme),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.fileService.onDidChangeFileSystemProviderRegistrations((e) =>\n\t\t\t\tthis.onLabelEvent(e.scheme),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.fileService.onDidChangeFileSystemProviderCapabilities((e) =>\n\t\t\t\tthis.onLabelEvent(e.scheme),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.customEditorLabelService.onDidChange(() => this.updateLabel()),\n\t\t);\n\t}\n\n\tprivate onLabelEvent(scheme: string): void {\n\t\tif (scheme === this._preferredResource.scheme) {\n\t\t\tthis.updateLabel();\n\t\t}\n\t}\n\n\tprivate updateLabel(): void {\n\t\t// Clear any cached labels from before\n\t\tthis._name = undefined;\n\t\tthis._shortDescription = undefined;\n\t\tthis._mediumDescription = undefined;\n\t\tthis._longDescription = undefined;\n\t\tthis._shortTitle = undefined;\n\t\tthis._mediumTitle = undefined;\n\t\tthis._longTitle = undefined;\n\n\t\t// Trigger recompute of label\n\t\tthis._onDidChangeLabel.fire();\n\t}\n\n\tsetPreferredResource(preferredResource: URI): void {\n\t\tif (!isEqual(preferredResource, this._preferredResource)) {\n\t\t\tthis._preferredResource = preferredResource;\n\n\t\t\tthis.updateLabel();\n\t\t}\n\t}\n\n\tprivate _name: string | undefined = undefined;\n\toverride getName(): string {\n\t\tif (typeof this._name !== \"string\") {\n\t\t\tthis._name =\n\t\t\t\tthis.customEditorLabelService.getName(\n\t\t\t\t\tthis._preferredResource,\n\t\t\t\t) ??\n\t\t\t\tthis.labelService.getUriBasenameLabel(this._preferredResource);\n\t\t}\n\n\t\treturn this._name;\n\t}\n\n\toverride getDescription(verbosity = Verbosity.MEDIUM): string | undefined {\n\t\tswitch (verbosity) {\n\t\t\tcase Verbosity.SHORT:\n\t\t\t\treturn this.shortDescription;\n\t\t\tcase Verbosity.LONG:\n\t\t\t\treturn this.longDescription;\n\t\t\tcase Verbosity.MEDIUM:\n\t\t\tdefault:\n\t\t\t\treturn this.mediumDescription;\n\t\t}\n\t}\n\n\tprivate _shortDescription: string | undefined = undefined;\n\tprivate get shortDescription(): string {\n\t\tif (typeof this._shortDescription !== \"string\") {\n\t\t\tthis._shortDescription = this.labelService.getUriBasenameLabel(\n\t\t\t\tdirname(this._preferredResource),\n\t\t\t);\n\t\t}\n\n\t\treturn this._shortDescription;\n\t}\n\n\tprivate _mediumDescription: string | undefined = undefined;\n\tprivate get mediumDescription(): string {\n\t\tif (typeof this._mediumDescription !== \"string\") {\n\t\t\tthis._mediumDescription = this.labelService.getUriLabel(\n\t\t\t\tdirname(this._preferredResource),\n\t\t\t\t{ relative: true },\n\t\t\t);\n\t\t}\n\n\t\treturn this._mediumDescription;\n\t}\n\n\tprivate _longDescription: string | undefined = undefined;\n\tprivate get longDescription(): string {\n\t\tif (typeof this._longDescription !== \"string\") {\n\t\t\tthis._longDescription = this.labelService.getUriLabel(\n\t\t\t\tdirname(this._preferredResource),\n\t\t\t);\n\t\t}\n\n\t\treturn this._longDescription;\n\t}\n\n\tprivate _shortTitle: string | undefined = undefined;\n\tprivate get shortTitle(): string {\n\t\tif (typeof this._shortTitle !== \"string\") {\n\t\t\tthis._shortTitle = this.getName();\n\t\t}\n\n\t\treturn this._shortTitle;\n\t}\n\n\tprivate _mediumTitle: string | undefined = undefined;\n\tprivate get mediumTitle(): string {\n\t\tif (typeof this._mediumTitle !== \"string\") {\n\t\t\tthis._mediumTitle = this.labelService.getUriLabel(\n\t\t\t\tthis._preferredResource,\n\t\t\t\t{ relative: true },\n\t\t\t);\n\t\t}\n\n\t\treturn this._mediumTitle;\n\t}\n\n\tprivate _longTitle: string | undefined = undefined;\n\tprivate get longTitle(): string {\n\t\tif (typeof this._longTitle !== \"string\") {\n\t\t\tthis._longTitle = this.labelService.getUriLabel(\n\t\t\t\tthis._preferredResource,\n\t\t\t);\n\t\t}\n\n\t\treturn this._longTitle;\n\t}\n\n\toverride getTitle(verbosity?: Verbosity): string {\n\t\tswitch (verbosity) {\n\t\t\tcase Verbosity.SHORT:\n\t\t\t\treturn this.shortTitle;\n\t\t\tcase Verbosity.LONG:\n\t\t\t\treturn this.longTitle;\n\t\t\tdefault:\n\t\t\tcase Verbosity.MEDIUM:\n\t\t\t\treturn this.mediumTitle;\n\t\t}\n\t}\n\n\toverride isReadonly(): boolean | IMarkdownString {\n\t\treturn this.filesConfigurationService.isReadonly(this.resource);\n\t}\n\n\tprotected ensureLimits(\n\t\toptions?: IFileLimitedEditorInputOptions,\n\t): IFileReadLimits | undefined {\n\t\tif (options?.limits) {\n\t\t\treturn options.limits; // respect passed in limits if any\n\t\t}\n\n\t\t// We want to determine the large file configuration based on the best defaults\n\t\t// for the resource but also respecting user settings. We only apply user settings\n\t\t// if explicitly configured by the user. Otherwise we pick the best limit for the\n\t\t// resource scheme.\n\n\t\tconst defaultSizeLimit = getLargeFileConfirmationLimit(this.resource);\n\t\tlet configuredSizeLimit: number | undefined;\n\n\t\tconst configuredSizeLimitMb =\n\t\t\tthis.textResourceConfigurationService.inspect<number>(\n\t\t\t\tthis.resource,\n\t\t\t\tnull,\n\t\t\t\t\"workbench.editorLargeFileConfirmation\",\n\t\t\t);\n\t\tif (isConfigured(configuredSizeLimitMb)) {\n\t\t\tconfiguredSizeLimit = configuredSizeLimitMb.value * ByteSize.MB; // normalize to MB\n\t\t}\n\n\t\treturn {\n\t\t\tsize: configuredSizeLimit ?? defaultSizeLimit,\n\t\t};\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
