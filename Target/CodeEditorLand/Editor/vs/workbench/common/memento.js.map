{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/common/memento.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from \"../../base/common/errors.js\";\nimport type { Event } from \"../../base/common/event.js\";\nimport type { DisposableStore } from \"../../base/common/lifecycle.js\";\nimport { isEmptyObject } from \"../../base/common/types.js\";\nimport {\n\ttype IStorageService,\n\ttype IStorageValueChangeEvent,\n\tStorageScope,\n\ttype StorageTarget,\n} from \"../../platform/storage/common/storage.js\";\n\nexport type MementoObject = { [key: string]: any };\n\nexport class Memento {\n\tprivate static readonly applicationMementos = new Map<\n\t\tstring,\n\t\tScopedMemento\n\t>();\n\tprivate static readonly profileMementos = new Map<string, ScopedMemento>();\n\tprivate static readonly workspaceMementos = new Map<\n\t\tstring,\n\t\tScopedMemento\n\t>();\n\n\tprivate static readonly COMMON_PREFIX = \"memento/\";\n\n\tprivate readonly id: string;\n\n\tconstructor(\n\t\tid: string,\n\t\tprivate storageService: IStorageService,\n\t) {\n\t\tthis.id = Memento.COMMON_PREFIX + id;\n\t}\n\n\tgetMemento(scope: StorageScope, target: StorageTarget): MementoObject {\n\t\tswitch (scope) {\n\t\t\tcase StorageScope.WORKSPACE: {\n\t\t\t\tlet workspaceMemento = Memento.workspaceMementos.get(this.id);\n\t\t\t\tif (!workspaceMemento) {\n\t\t\t\t\tworkspaceMemento = new ScopedMemento(\n\t\t\t\t\t\tthis.id,\n\t\t\t\t\t\tscope,\n\t\t\t\t\t\ttarget,\n\t\t\t\t\t\tthis.storageService,\n\t\t\t\t\t);\n\t\t\t\t\tMemento.workspaceMementos.set(this.id, workspaceMemento);\n\t\t\t\t}\n\n\t\t\t\treturn workspaceMemento.getMemento();\n\t\t\t}\n\n\t\t\tcase StorageScope.PROFILE: {\n\t\t\t\tlet profileMemento = Memento.profileMementos.get(this.id);\n\t\t\t\tif (!profileMemento) {\n\t\t\t\t\tprofileMemento = new ScopedMemento(\n\t\t\t\t\t\tthis.id,\n\t\t\t\t\t\tscope,\n\t\t\t\t\t\ttarget,\n\t\t\t\t\t\tthis.storageService,\n\t\t\t\t\t);\n\t\t\t\t\tMemento.profileMementos.set(this.id, profileMemento);\n\t\t\t\t}\n\n\t\t\t\treturn profileMemento.getMemento();\n\t\t\t}\n\n\t\t\tcase StorageScope.APPLICATION: {\n\t\t\t\tlet applicationMemento = Memento.applicationMementos.get(\n\t\t\t\t\tthis.id,\n\t\t\t\t);\n\t\t\t\tif (!applicationMemento) {\n\t\t\t\t\tapplicationMemento = new ScopedMemento(\n\t\t\t\t\t\tthis.id,\n\t\t\t\t\t\tscope,\n\t\t\t\t\t\ttarget,\n\t\t\t\t\t\tthis.storageService,\n\t\t\t\t\t);\n\t\t\t\t\tMemento.applicationMementos.set(\n\t\t\t\t\t\tthis.id,\n\t\t\t\t\t\tapplicationMemento,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn applicationMemento.getMemento();\n\t\t\t}\n\t\t}\n\t}\n\n\tonDidChangeValue(\n\t\tscope: StorageScope,\n\t\tdisposables: DisposableStore,\n\t): Event<IStorageValueChangeEvent> {\n\t\treturn this.storageService.onDidChangeValue(\n\t\t\tscope,\n\t\t\tthis.id,\n\t\t\tdisposables,\n\t\t);\n\t}\n\n\tsaveMemento(): void {\n\t\tMemento.workspaceMementos.get(this.id)?.save();\n\t\tMemento.profileMementos.get(this.id)?.save();\n\t\tMemento.applicationMementos.get(this.id)?.save();\n\t}\n\n\treloadMemento(scope: StorageScope): void {\n\t\tlet memento: ScopedMemento | undefined;\n\t\tswitch (scope) {\n\t\t\tcase StorageScope.APPLICATION:\n\t\t\t\tmemento = Memento.applicationMementos.get(this.id);\n\t\t\t\tbreak;\n\t\t\tcase StorageScope.PROFILE:\n\t\t\t\tmemento = Memento.profileMementos.get(this.id);\n\t\t\t\tbreak;\n\t\t\tcase StorageScope.WORKSPACE:\n\t\t\t\tmemento = Memento.workspaceMementos.get(this.id);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tmemento?.reload();\n\t}\n\n\tstatic clear(scope: StorageScope): void {\n\t\tswitch (scope) {\n\t\t\tcase StorageScope.WORKSPACE:\n\t\t\t\tMemento.workspaceMementos.clear();\n\t\t\t\tbreak;\n\t\t\tcase StorageScope.PROFILE:\n\t\t\t\tMemento.profileMementos.clear();\n\t\t\t\tbreak;\n\t\t\tcase StorageScope.APPLICATION:\n\t\t\t\tMemento.applicationMementos.clear();\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n\nclass ScopedMemento {\n\tprivate mementoObj: MementoObject;\n\n\tconstructor(\n\t\tprivate id: string,\n\t\tprivate scope: StorageScope,\n\t\tprivate target: StorageTarget,\n\t\tprivate storageService: IStorageService,\n\t) {\n\t\tthis.mementoObj = this.doLoad();\n\t}\n\n\tprivate doLoad(): MementoObject {\n\t\ttry {\n\t\t\treturn this.storageService.getObject<MementoObject>(\n\t\t\t\tthis.id,\n\t\t\t\tthis.scope,\n\t\t\t\t{},\n\t\t\t);\n\t\t} catch (error) {\n\t\t\t// Seeing reports from users unable to open editors\n\t\t\t// from memento parsing exceptions. Log the contents\n\t\t\t// to diagnose further\n\t\t\t// https://github.com/microsoft/vscode/issues/102251\n\t\t\tonUnexpectedError(\n\t\t\t\t`[memento]: failed to parse contents: ${error} (id: ${this.id}, scope: ${this.scope}, contents: ${this.storageService.get(this.id, this.scope)})`,\n\t\t\t);\n\t\t}\n\n\t\treturn {};\n\t}\n\n\tgetMemento(): MementoObject {\n\t\treturn this.mementoObj;\n\t}\n\n\treload(): void {\n\t\t// Clear old\n\t\tfor (const name of Object.getOwnPropertyNames(this.mementoObj)) {\n\t\t\tdelete this.mementoObj[name];\n\t\t}\n\n\t\t// Assign new\n\t\tObject.assign(this.mementoObj, this.doLoad());\n\t}\n\n\tsave(): void {\n\t\tif (isEmptyObject(this.mementoObj)) {\n\t\t\tthis.storageService.remove(this.id, this.scope);\n\t\t} else {\n\t\t\tthis.storageService.store(\n\t\t\t\tthis.id,\n\t\t\t\tthis.mementoObj,\n\t\t\t\tthis.scope,\n\t\t\t\tthis.target,\n\t\t\t);\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
