{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/update/browser/updateService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, type Event } from \"../../../../base/common/event.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport {\n\tIUpdateService,\n\tState,\n\tUpdateType,\n} from \"../../../../platform/update/common/update.js\";\nimport { IBrowserWorkbenchEnvironmentService } from \"../../environment/browser/environmentService.js\";\nimport { IHostService } from \"../../host/browser/host.js\";\n\nexport interface IUpdate {\n\tversion: string;\n}\n\nexport interface IUpdateProvider {\n\t/**\n\t * Should return with the `IUpdate` object if an update is\n\t * available or `null` otherwise to signal that there are\n\t * no updates.\n\t */\n\tcheckForUpdate(): Promise<IUpdate | null>;\n}\n\nexport class BrowserUpdateService extends Disposable implements IUpdateService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _onStateChange = this._register(new Emitter<State>());\n\treadonly onStateChange: Event<State> = this._onStateChange.event;\n\n\tprivate _state: State = State.Uninitialized;\n\tget state(): State {\n\t\treturn this._state;\n\t}\n\tset state(state: State) {\n\t\tthis._state = state;\n\t\tthis._onStateChange.fire(state);\n\t}\n\n\tconstructor(\n\t\t@IBrowserWorkbenchEnvironmentService private readonly environmentService: IBrowserWorkbenchEnvironmentService,\n\t\t@IHostService private readonly hostService: IHostService\n\t) {\n\t\tsuper();\n\n\t\tthis.checkForUpdates(false);\n\t}\n\n\tasync isLatestVersion(): Promise<boolean | undefined> {\n\t\tconst update = await this.doCheckForUpdates(false);\n\t\tif (update === undefined) {\n\t\t\treturn undefined; // no update provider\n\t\t}\n\n\t\treturn !!update;\n\t}\n\n\tasync checkForUpdates(explicit: boolean): Promise<void> {\n\t\tawait this.doCheckForUpdates(explicit);\n\t}\n\n\tprivate async doCheckForUpdates(\n\t\texplicit: boolean,\n\t): Promise<\n\t\t| IUpdate\n\t\t| null /* no update available */\n\t\t| undefined /* no update provider */\n\t> {\n\t\tif (\n\t\t\tthis.environmentService.options &&\n\t\t\tthis.environmentService.options.updateProvider\n\t\t) {\n\t\t\tconst updateProvider =\n\t\t\t\tthis.environmentService.options.updateProvider;\n\n\t\t\t// State -> Checking for Updates\n\t\t\tthis.state = State.CheckingForUpdates(explicit);\n\n\t\t\tconst update = await updateProvider.checkForUpdate();\n\t\t\tif (update) {\n\t\t\t\t// State -> Downloaded\n\t\t\t\tthis.state = State.Ready({\n\t\t\t\t\tversion: update.version,\n\t\t\t\t\tproductVersion: update.version,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// State -> Idle\n\t\t\t\tthis.state = State.Idle(UpdateType.Archive);\n\t\t\t}\n\n\t\t\treturn update;\n\t\t}\n\n\t\treturn undefined; // no update provider to ask\n\t}\n\n\tasync downloadUpdate(): Promise<void> {\n\t\t// no-op\n\t}\n\n\tasync applyUpdate(): Promise<void> {\n\t\tthis.hostService.reload();\n\t}\n\n\tasync quitAndInstall(): Promise<void> {\n\t\tthis.hostService.reload();\n\t}\n\n\tasync _applySpecificUpdate(packagePath: string): Promise<void> {\n\t\t// noop\n\t}\n}\n\nregisterSingleton(\n\tIUpdateService,\n\tBrowserUpdateService,\n\tInstantiationType.Eager,\n);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,eAA2B;AACpC,SAAS,kBAAkB;AAC3B;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,2CAA2C;AACpD,SAAS,oBAAoB;AAetB,IAAM,uBAAN,cAAmC,WAAqC;AAAA,EAe9E,YACuD,oBACvB,aAC9B;AACD,UAAM;AAHgD;AACvB;AAI/B,SAAK,gBAAgB,KAAK;AAAA,EAC3B;AAAA,EAtDD,OAgC+E;AAAA;AAAA;AAAA,EAGtE,iBAAiB,KAAK,UAAU,IAAI,QAAe,CAAC;AAAA,EACnD,gBAA8B,KAAK,eAAe;AAAA,EAEnD,SAAgB,MAAM;AAAA,EAC9B,IAAI,QAAe;AAClB,WAAO,KAAK;AAAA,EACb;AAAA,EACA,IAAI,MAAM,OAAc;AACvB,SAAK,SAAS;AACd,SAAK,eAAe,KAAK,KAAK;AAAA,EAC/B;AAAA,EAWA,MAAM,kBAAgD;AACrD,UAAM,SAAS,MAAM,KAAK,kBAAkB,KAAK;AACjD,QAAI,WAAW,QAAW;AACzB,aAAO;AAAA,IACR;AAEA,WAAO,CAAC,CAAC;AAAA,EACV;AAAA,EAEA,MAAM,gBAAgB,UAAkC;AACvD,UAAM,KAAK,kBAAkB,QAAQ;AAAA,EACtC;AAAA,EAEA,MAAc,kBACb,UAKC;AACD,QACC,KAAK,mBAAmB,WACxB,KAAK,mBAAmB,QAAQ,gBAC/B;AACD,YAAM,iBACL,KAAK,mBAAmB,QAAQ;AAGjC,WAAK,QAAQ,MAAM,mBAAmB,QAAQ;AAE9C,YAAM,SAAS,MAAM,eAAe,eAAe;AACnD,UAAI,QAAQ;AAEX,aAAK,QAAQ,MAAM,MAAM;AAAA,UACxB,SAAS,OAAO;AAAA,UAChB,gBAAgB,OAAO;AAAA,QACxB,CAAC;AAAA,MACF,OAAO;AAEN,aAAK,QAAQ,MAAM,KAAK,WAAW,OAAO;AAAA,MAC3C;AAEA,aAAO;AAAA,IACR;AAEA,WAAO;AAAA,EACR;AAAA,EAEA,MAAM,iBAAgC;AAAA,EAEtC;AAAA,EAEA,MAAM,cAA6B;AAClC,SAAK,YAAY,OAAO;AAAA,EACzB;AAAA,EAEA,MAAM,iBAAgC;AACrC,SAAK,YAAY,OAAO;AAAA,EACzB;AAAA,EAEA,MAAM,qBAAqB,aAAoC;AAAA,EAE/D;AACD;AAvFa,uBAAN;AAAA,EAgBJ;AAAA,EACA;AAAA,GAjBU;AAyFb;AAAA,EACC;AAAA,EACA;AAAA,EACA,kBAAkB;AACnB;",
  "names": []
}
