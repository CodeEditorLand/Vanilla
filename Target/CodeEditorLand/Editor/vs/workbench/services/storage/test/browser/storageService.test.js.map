{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/storage/test/browser/storageService.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { strictEqual } from 'assert';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../../../base/common/network.js';\nimport { joinPath } from '../../../../../base/common/resources.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { IStorageChangeEvent, Storage } from '../../../../../base/parts/storage/common/storage.js';\nimport { flakySuite } from '../../../../../base/test/common/testUtils.js';\nimport { runWithFakedTimers } from '../../../../../base/test/common/timeTravelScheduler.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { FileService } from '../../../../../platform/files/common/fileService.js';\nimport { InMemoryFileSystemProvider } from '../../../../../platform/files/common/inMemoryFilesystemProvider.js';\nimport { NullLogService } from '../../../../../platform/log/common/log.js';\nimport { StorageScope, StorageTarget } from '../../../../../platform/storage/common/storage.js';\nimport { createSuite } from '../../../../../platform/storage/test/common/storageService.test.js';\nimport { IUserDataProfile } from '../../../../../platform/userDataProfile/common/userDataProfile.js';\nimport { BrowserStorageService, IndexedDBStorageDatabase } from '../../browser/storageService.js';\nimport { UserDataProfileService } from '../../../userDataProfile/common/userDataProfileService.js';\n\nasync function createStorageService(): Promise<[DisposableStore, BrowserStorageService]> {\n\tconst disposables = new DisposableStore();\n\tconst logService = new NullLogService();\n\n\tconst fileService = disposables.add(new FileService(logService));\n\n\tconst userDataProvider = disposables.add(new InMemoryFileSystemProvider());\n\tdisposables.add(fileService.registerProvider(Schemas.vscodeUserData, userDataProvider));\n\n\tconst profilesRoot = URI.file('/profiles').with({ scheme: Schemas.inMemory });\n\n\tconst inMemoryExtraProfileRoot = joinPath(profilesRoot, 'extra');\n\tconst inMemoryExtraProfile: IUserDataProfile = {\n\t\tid: 'id',\n\t\tname: 'inMemory',\n\t\tshortName: 'inMemory',\n\t\tisDefault: false,\n\t\tlocation: inMemoryExtraProfileRoot,\n\t\tglobalStorageHome: joinPath(inMemoryExtraProfileRoot, 'globalStorageHome'),\n\t\tsettingsResource: joinPath(inMemoryExtraProfileRoot, 'settingsResource'),\n\t\tkeybindingsResource: joinPath(inMemoryExtraProfileRoot, 'keybindingsResource'),\n\t\ttasksResource: joinPath(inMemoryExtraProfileRoot, 'tasksResource'),\n\t\tsnippetsHome: joinPath(inMemoryExtraProfileRoot, 'snippetsHome'),\n\t\textensionsResource: joinPath(inMemoryExtraProfileRoot, 'extensionsResource'),\n\t\tcacheHome: joinPath(inMemoryExtraProfileRoot, 'cache')\n\t};\n\n\tconst storageService = disposables.add(new BrowserStorageService({ id: 'workspace-storage-test' }, disposables.add(new UserDataProfileService(inMemoryExtraProfile)), logService));\n\n\tawait storageService.initialize();\n\n\treturn [disposables, storageService];\n}\n\nflakySuite('StorageService (browser)', function () {\n\tconst disposables = new DisposableStore();\n\tlet storageService: BrowserStorageService;\n\n\tcreateSuite<BrowserStorageService>({\n\t\tsetup: async () => {\n\t\t\tconst res = await createStorageService();\n\t\t\tdisposables.add(res[0]);\n\t\t\tstorageService = res[1];\n\n\t\t\treturn storageService;\n\t\t},\n\t\tteardown: async () => {\n\t\t\tawait storageService.clear();\n\t\t\tdisposables.clear();\n\t\t}\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n\nflakySuite('StorageService (browser specific)', () => {\n\tconst disposables = new DisposableStore();\n\tlet storageService: BrowserStorageService;\n\n\tsetup(async () => {\n\t\tconst res = await createStorageService();\n\t\tdisposables.add(res[0]);\n\n\t\tstorageService = res[1];\n\t});\n\n\tteardown(async () => {\n\t\tawait storageService.clear();\n\t\tdisposables.clear();\n\t});\n\n\ttest.skip('clear', () => { // slow test and also only ever being used as a developer action\n\t\treturn runWithFakedTimers({ useFakeTimers: true }, async () => {\n\t\t\tstorageService.store('bar', 'foo', StorageScope.APPLICATION, StorageTarget.MACHINE);\n\t\t\tstorageService.store('bar', 3, StorageScope.APPLICATION, StorageTarget.USER);\n\t\t\tstorageService.store('bar', 'foo', StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\t\tstorageService.store('bar', 3, StorageScope.PROFILE, StorageTarget.USER);\n\t\t\tstorageService.store('bar', 'foo', StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\t\tstorageService.store('bar', 3, StorageScope.WORKSPACE, StorageTarget.USER);\n\n\t\t\tawait storageService.clear();\n\n\t\t\tfor (const scope of [StorageScope.APPLICATION, StorageScope.PROFILE, StorageScope.WORKSPACE]) {\n\t\t\t\tfor (const target of [StorageTarget.USER, StorageTarget.MACHINE]) {\n\t\t\t\t\tstrictEqual(storageService.get('bar', scope), undefined);\n\t\t\t\t\tstrictEqual(storageService.keys(scope, target).length, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n\nflakySuite('IndexDBStorageDatabase (browser)', () => {\n\n\tconst id = 'workspace-storage-db-test';\n\tconst logService = new NullLogService();\n\n\tconst disposables = new DisposableStore();\n\n\tteardown(async () => {\n\t\tconst storage = disposables.add(await IndexedDBStorageDatabase.create({ id }, logService));\n\t\tawait storage.clear();\n\n\t\tdisposables.clear();\n\t});\n\n\ttest('Basics', async () => {\n\t\tlet storage = disposables.add(new Storage(disposables.add(await IndexedDBStorageDatabase.create({ id }, logService))));\n\n\t\tawait storage.init();\n\n\t\t// Insert initial data\n\t\tstorage.set('bar', 'foo');\n\t\tstorage.set('barNumber', 55);\n\t\tstorage.set('barBoolean', true);\n\t\tstorage.set('barUndefined', undefined);\n\t\tstorage.set('barNull', null);\n\n\t\tstrictEqual(storage.get('bar'), 'foo');\n\t\tstrictEqual(storage.get('barNumber'), '55');\n\t\tstrictEqual(storage.get('barBoolean'), 'true');\n\t\tstrictEqual(storage.get('barUndefined'), undefined);\n\t\tstrictEqual(storage.get('barNull'), undefined);\n\n\t\tstrictEqual(storage.size, 3);\n\t\tstrictEqual(storage.items.size, 3);\n\n\t\tawait storage.close();\n\n\t\tstorage = disposables.add(new Storage(disposables.add(await IndexedDBStorageDatabase.create({ id }, logService))));\n\n\t\tawait storage.init();\n\n\t\t// Check initial data still there\n\t\tstrictEqual(storage.get('bar'), 'foo');\n\t\tstrictEqual(storage.get('barNumber'), '55');\n\t\tstrictEqual(storage.get('barBoolean'), 'true');\n\t\tstrictEqual(storage.get('barUndefined'), undefined);\n\t\tstrictEqual(storage.get('barNull'), undefined);\n\n\t\tstrictEqual(storage.size, 3);\n\t\tstrictEqual(storage.items.size, 3);\n\n\t\t// Update data\n\t\tstorage.set('bar', 'foo2');\n\t\tstorage.set('barNumber', 552);\n\n\t\tstrictEqual(storage.get('bar'), 'foo2');\n\t\tstrictEqual(storage.get('barNumber'), '552');\n\n\t\tawait storage.close();\n\n\t\tstorage = disposables.add(new Storage(disposables.add(await IndexedDBStorageDatabase.create({ id }, logService))));\n\n\t\tawait storage.init();\n\n\t\t// Check initial data still there\n\t\tstrictEqual(storage.get('bar'), 'foo2');\n\t\tstrictEqual(storage.get('barNumber'), '552');\n\t\tstrictEqual(storage.get('barBoolean'), 'true');\n\t\tstrictEqual(storage.get('barUndefined'), undefined);\n\t\tstrictEqual(storage.get('barNull'), undefined);\n\n\t\tstrictEqual(storage.size, 3);\n\t\tstrictEqual(storage.items.size, 3);\n\n\t\t// Delete data\n\t\tstorage.delete('bar');\n\t\tstorage.delete('barNumber');\n\t\tstorage.delete('barBoolean');\n\n\t\tstrictEqual(storage.get('bar', 'undefined'), 'undefined');\n\t\tstrictEqual(storage.get('barNumber', 'undefinedNumber'), 'undefinedNumber');\n\t\tstrictEqual(storage.get('barBoolean', 'undefinedBoolean'), 'undefinedBoolean');\n\n\t\tstrictEqual(storage.size, 0);\n\t\tstrictEqual(storage.items.size, 0);\n\n\t\tawait storage.close();\n\n\t\tstorage = disposables.add(new Storage(disposables.add(await IndexedDBStorageDatabase.create({ id }, logService))));\n\n\t\tawait storage.init();\n\n\t\tstrictEqual(storage.get('bar', 'undefined'), 'undefined');\n\t\tstrictEqual(storage.get('barNumber', 'undefinedNumber'), 'undefinedNumber');\n\t\tstrictEqual(storage.get('barBoolean', 'undefinedBoolean'), 'undefinedBoolean');\n\n\t\tstrictEqual(storage.size, 0);\n\t\tstrictEqual(storage.items.size, 0);\n\t});\n\n\ttest('Clear', async () => {\n\t\tlet storage = disposables.add(new Storage(disposables.add(await IndexedDBStorageDatabase.create({ id }, logService))));\n\n\t\tawait storage.init();\n\n\t\tstorage.set('bar', 'foo');\n\t\tstorage.set('barNumber', 55);\n\t\tstorage.set('barBoolean', true);\n\n\t\tawait storage.close();\n\n\t\tconst db = disposables.add(await IndexedDBStorageDatabase.create({ id }, logService));\n\t\tstorage = disposables.add(new Storage(db));\n\n\t\tawait storage.init();\n\t\tawait db.clear();\n\n\t\tstorage = disposables.add(new Storage(disposables.add(await IndexedDBStorageDatabase.create({ id }, logService))));\n\n\t\tawait storage.init();\n\n\t\tstrictEqual(storage.get('bar'), undefined);\n\t\tstrictEqual(storage.get('barNumber'), undefined);\n\t\tstrictEqual(storage.get('barBoolean'), undefined);\n\n\t\tstrictEqual(storage.size, 0);\n\t\tstrictEqual(storage.items.size, 0);\n\t});\n\n\ttest('Inserts and Deletes at the same time', async () => {\n\t\tlet storage = disposables.add(new Storage(disposables.add(await IndexedDBStorageDatabase.create({ id }, logService))));\n\n\t\tawait storage.init();\n\n\t\tstorage.set('bar', 'foo');\n\t\tstorage.set('barNumber', 55);\n\t\tstorage.set('barBoolean', true);\n\n\t\tawait storage.close();\n\n\t\tstorage = disposables.add(new Storage(disposables.add(await IndexedDBStorageDatabase.create({ id }, logService))));\n\n\t\tawait storage.init();\n\n\t\tstorage.set('bar', 'foobar');\n\t\tconst largeItem = JSON.stringify({ largeItem: 'Hello World'.repeat(1000) });\n\t\tstorage.set('largeItem', largeItem);\n\t\tstorage.delete('barNumber');\n\t\tstorage.delete('barBoolean');\n\n\t\tawait storage.close();\n\n\t\tstorage = disposables.add(new Storage(disposables.add(await IndexedDBStorageDatabase.create({ id }, logService))));\n\n\t\tawait storage.init();\n\n\t\tstrictEqual(storage.get('bar'), 'foobar');\n\t\tstrictEqual(storage.get('largeItem'), largeItem);\n\t\tstrictEqual(storage.get('barNumber'), undefined);\n\t\tstrictEqual(storage.get('barBoolean'), undefined);\n\t});\n\n\ttest('Storage change event', async () => {\n\t\tconst storage = disposables.add(new Storage(disposables.add(await IndexedDBStorageDatabase.create({ id }, logService))));\n\t\tlet storageChangeEvents: IStorageChangeEvent[] = [];\n\t\tdisposables.add(storage.onDidChangeStorage(e => storageChangeEvents.push(e)));\n\n\t\tawait storage.init();\n\n\t\tstorage.set('notExternal', 42);\n\t\tlet storageValueChangeEvent = storageChangeEvents.find(e => e.key === 'notExternal');\n\t\tstrictEqual(storageValueChangeEvent?.external, false);\n\t\tstorageChangeEvents = [];\n\n\t\tstorage.set('isExternal', 42, true);\n\t\tstorageValueChangeEvent = storageChangeEvents.find(e => e.key === 'isExternal');\n\t\tstrictEqual(storageValueChangeEvent?.external, true);\n\n\t\tstorage.delete('notExternal');\n\t\tstorageValueChangeEvent = storageChangeEvents.find(e => e.key === 'notExternal');\n\t\tstrictEqual(storageValueChangeEvent?.external, false);\n\n\t\tstorage.delete('isExternal', true);\n\t\tstorageValueChangeEvent = storageChangeEvents.find(e => e.key === 'isExternal');\n\t\tstrictEqual(storageValueChangeEvent?.external, true);\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"],
  "mappings": "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",
  "names": []
}
