{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/search/node/ripgrepFileSearch.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as cp from 'child_process';\nimport * as path from '../../../../base/common/path.js';\nimport * as glob from '../../../../base/common/glob.js';\nimport { normalizeNFD } from '../../../../base/common/normalization.js';\nimport * as extpath from '../../../../base/common/extpath.js';\nimport { isMacintosh as isMac } from '../../../../base/common/platform.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { IFileQuery, IFolderQuery } from '../common/search.js';\nimport { anchorGlob } from './ripgrepSearchUtils.js';\nimport { rgPath } from '@vscode/ripgrep';\n\n// If @vscode/ripgrep is in an .asar file, then the binary is unpacked.\nconst rgDiskPath = rgPath.replace(/\\bnode_modules\\.asar\\b/, 'node_modules.asar.unpacked');\n\nexport function spawnRipgrepCmd(config: IFileQuery, folderQuery: IFolderQuery, includePattern?: glob.IExpression, excludePattern?: glob.IExpression, numThreads?: number) {\n\tconst rgArgs = getRgArgs(config, folderQuery, includePattern, excludePattern, numThreads);\n\tconst cwd = folderQuery.folder.fsPath;\n\treturn {\n\t\tcmd: cp.spawn(rgDiskPath, rgArgs.args, { cwd }),\n\t\trgDiskPath,\n\t\tsiblingClauses: rgArgs.siblingClauses,\n\t\trgArgs,\n\t\tcwd\n\t};\n}\n\nfunction getRgArgs(config: IFileQuery, folderQuery: IFolderQuery, includePattern?: glob.IExpression, excludePattern?: glob.IExpression, numThreads?: number) {\n\tconst args = ['--files', '--hidden', '--case-sensitive', '--no-require-git'];\n\n\t// includePattern can't have siblingClauses\n\tfoldersToIncludeGlobs([folderQuery], includePattern, false).forEach(globArg => {\n\t\tconst inclusion = anchorGlob(globArg);\n\t\targs.push('-g', inclusion);\n\t\tif (isMac) {\n\t\t\tconst normalized = normalizeNFD(inclusion);\n\t\t\tif (normalized !== inclusion) {\n\t\t\t\targs.push('-g', normalized);\n\t\t\t}\n\t\t}\n\t});\n\n\tconst rgGlobs = foldersToRgExcludeGlobs([folderQuery], excludePattern, undefined, false);\n\trgGlobs.globArgs.forEach(globArg => {\n\t\tconst exclusion = `!${anchorGlob(globArg)}`;\n\t\targs.push('-g', exclusion);\n\t\tif (isMac) {\n\t\t\tconst normalized = normalizeNFD(exclusion);\n\t\t\tif (normalized !== exclusion) {\n\t\t\t\targs.push('-g', normalized);\n\t\t\t}\n\t\t}\n\t});\n\tif (folderQuery.disregardIgnoreFiles !== false) {\n\t\t// Don't use .gitignore or .ignore\n\t\targs.push('--no-ignore');\n\t} else if (folderQuery.disregardParentIgnoreFiles !== false) {\n\t\targs.push('--no-ignore-parent');\n\t}\n\n\t// Follow symlinks\n\tif (!folderQuery.ignoreSymlinks) {\n\t\targs.push('--follow');\n\t}\n\n\tif (config.exists) {\n\t\targs.push('--quiet');\n\t}\n\n\tif (numThreads) {\n\t\targs.push('--threads', `${numThreads}`);\n\t}\n\n\targs.push('--no-config');\n\tif (folderQuery.disregardGlobalIgnoreFiles) {\n\t\targs.push('--no-ignore-global');\n\t}\n\n\treturn {\n\t\targs,\n\t\tsiblingClauses: rgGlobs.siblingClauses\n\t};\n}\n\ninterface IRgGlobResult {\n\tglobArgs: string[];\n\tsiblingClauses: glob.IExpression;\n}\n\nfunction foldersToRgExcludeGlobs(folderQueries: IFolderQuery[], globalExclude?: glob.IExpression, excludesToSkip?: Set<string>, absoluteGlobs = true): IRgGlobResult {\n\tconst globArgs: string[] = [];\n\tlet siblingClauses: glob.IExpression = {};\n\tfolderQueries.forEach(folderQuery => {\n\t\tconst totalExcludePattern = Object.assign({}, folderQuery.excludePattern || {}, globalExclude || {});\n\t\tconst result = globExprsToRgGlobs(totalExcludePattern, absoluteGlobs ? folderQuery.folder.fsPath : undefined, excludesToSkip);\n\t\tglobArgs.push(...result.globArgs);\n\t\tif (result.siblingClauses) {\n\t\t\tsiblingClauses = Object.assign(siblingClauses, result.siblingClauses);\n\t\t}\n\t});\n\n\treturn { globArgs, siblingClauses };\n}\n\nfunction foldersToIncludeGlobs(folderQueries: IFolderQuery[], globalInclude?: glob.IExpression, absoluteGlobs = true): string[] {\n\tconst globArgs: string[] = [];\n\tfolderQueries.forEach(folderQuery => {\n\t\tconst totalIncludePattern = Object.assign({}, globalInclude || {}, folderQuery.includePattern || {});\n\t\tconst result = globExprsToRgGlobs(totalIncludePattern, absoluteGlobs ? folderQuery.folder.fsPath : undefined);\n\t\tglobArgs.push(...result.globArgs);\n\t});\n\n\treturn globArgs;\n}\n\nfunction globExprsToRgGlobs(patterns: glob.IExpression, folder?: string, excludesToSkip?: Set<string>): IRgGlobResult {\n\tconst globArgs: string[] = [];\n\tconst siblingClauses: glob.IExpression = {};\n\tObject.keys(patterns)\n\t\t.forEach(key => {\n\t\t\tif (excludesToSkip && excludesToSkip.has(key)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!key) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst value = patterns[key];\n\t\t\tkey = trimTrailingSlash(folder ? getAbsoluteGlob(folder, key) : key);\n\n\t\t\t// glob.ts requires forward slashes, but a UNC path still must start with \\\\\n\t\t\t// #38165 and #38151\n\t\t\tif (key.startsWith('\\\\\\\\')) {\n\t\t\t\tkey = '\\\\\\\\' + key.substr(2).replace(/\\\\/g, '/');\n\t\t\t} else {\n\t\t\t\tkey = key.replace(/\\\\/g, '/');\n\t\t\t}\n\n\t\t\tif (typeof value === 'boolean' && value) {\n\t\t\t\tif (key.startsWith('\\\\\\\\')) {\n\t\t\t\t\t// Absolute globs UNC paths don't work properly, see #58758\n\t\t\t\t\tkey += '**';\n\t\t\t\t}\n\n\t\t\t\tglobArgs.push(fixDriveC(key));\n\t\t\t} else if (value && value.when) {\n\t\t\t\tsiblingClauses[key] = value;\n\t\t\t}\n\t\t});\n\n\treturn { globArgs, siblingClauses };\n}\n\n/**\n * Resolves a glob like \"node_modules/**\" in \"/foo/bar\" to \"/foo/bar/node_modules/**\".\n * Special cases C:/foo paths to write the glob like /foo instead - see https://github.com/BurntSushi/ripgrep/issues/530.\n *\n * Exported for testing\n */\nexport function getAbsoluteGlob(folder: string, key: string): string {\n\treturn path.isAbsolute(key) ?\n\t\tkey :\n\t\tpath.join(folder, key);\n}\n\nfunction trimTrailingSlash(str: string): string {\n\tstr = strings.rtrim(str, '\\\\');\n\treturn strings.rtrim(str, '/');\n}\n\nexport function fixDriveC(path: string): string {\n\tconst root = extpath.getRoot(path);\n\treturn root.toLowerCase() === 'c:/' ?\n\t\tpath.replace(/^c:[/\\\\]/i, '/') :\n\t\tpath;\n}\n"],
  "mappings": ";;AAKA,YAAY,QAAQ;AACpB,YAAY,UAAU;AACtB,YAAY,UAAU;AACtB,SAAS,oBAAoB;AAC7B,YAAY,aAAa;AACzB,SAAS,eAAe,aAAa;AACrC,YAAY,aAAa;AACzB,SAAS,YAAY,oBAAoB;AACzC,SAAS,kBAAkB;AAC3B,SAAS,cAAc;AAGvB,MAAM,aAAa,OAAO,QAAQ,0BAA0B,4BAA4B;AAEjF,SAAS,gBAAgB,QAAoB,aAA2B,gBAAmC,gBAAmC,YAAqB;AACzK,QAAM,SAAS,UAAU,QAAQ,aAAa,gBAAgB,gBAAgB,UAAU;AACxF,QAAM,MAAM,YAAY,OAAO;AAC/B,SAAO;AAAA,IACN,KAAK,GAAG,MAAM,YAAY,OAAO,MAAM,EAAE,IAAI,CAAC;AAAA,IAC9C;AAAA,IACA,gBAAgB,OAAO;AAAA,IACvB;AAAA,IACA;AAAA,EACD;AACD;AAVgB;AAYhB,SAAS,UAAU,QAAoB,aAA2B,gBAAmC,gBAAmC,YAAqB;AAC5J,QAAM,OAAO,CAAC,WAAW,YAAY,oBAAoB,kBAAkB;AAG3E,wBAAsB,CAAC,WAAW,GAAG,gBAAgB,KAAK,EAAE,QAAQ,aAAW;AAC9E,UAAM,YAAY,WAAW,OAAO;AACpC,SAAK,KAAK,MAAM,SAAS;AACzB,QAAI,OAAO;AACV,YAAM,aAAa,aAAa,SAAS;AACzC,UAAI,eAAe,WAAW;AAC7B,aAAK,KAAK,MAAM,UAAU;AAAA,MAC3B;AAAA,IACD;AAAA,EACD,CAAC;AAED,QAAM,UAAU,wBAAwB,CAAC,WAAW,GAAG,gBAAgB,QAAW,KAAK;AACvF,UAAQ,SAAS,QAAQ,aAAW;AACnC,UAAM,YAAY,IAAI,WAAW,OAAO,CAAC;AACzC,SAAK,KAAK,MAAM,SAAS;AACzB,QAAI,OAAO;AACV,YAAM,aAAa,aAAa,SAAS;AACzC,UAAI,eAAe,WAAW;AAC7B,aAAK,KAAK,MAAM,UAAU;AAAA,MAC3B;AAAA,IACD;AAAA,EACD,CAAC;AACD,MAAI,YAAY,yBAAyB,OAAO;AAE/C,SAAK,KAAK,aAAa;AAAA,EACxB,WAAW,YAAY,+BAA+B,OAAO;AAC5D,SAAK,KAAK,oBAAoB;AAAA,EAC/B;AAGA,MAAI,CAAC,YAAY,gBAAgB;AAChC,SAAK,KAAK,UAAU;AAAA,EACrB;AAEA,MAAI,OAAO,QAAQ;AAClB,SAAK,KAAK,SAAS;AAAA,EACpB;AAEA,MAAI,YAAY;AACf,SAAK,KAAK,aAAa,GAAG,UAAU,EAAE;AAAA,EACvC;AAEA,OAAK,KAAK,aAAa;AACvB,MAAI,YAAY,4BAA4B;AAC3C,SAAK,KAAK,oBAAoB;AAAA,EAC/B;AAEA,SAAO;AAAA,IACN;AAAA,IACA,gBAAgB,QAAQ;AAAA,EACzB;AACD;AAvDS;AA8DT,SAAS,wBAAwB,eAA+B,eAAkC,gBAA8B,gBAAgB,MAAqB;AACpK,QAAM,WAAqB,CAAC;AAC5B,MAAI,iBAAmC,CAAC;AACxC,gBAAc,QAAQ,iBAAe;AACpC,UAAM,sBAAsB,OAAO,OAAO,CAAC,GAAG,YAAY,kBAAkB,CAAC,GAAG,iBAAiB,CAAC,CAAC;AACnG,UAAM,SAAS,mBAAmB,qBAAqB,gBAAgB,YAAY,OAAO,SAAS,QAAW,cAAc;AAC5H,aAAS,KAAK,GAAG,OAAO,QAAQ;AAChC,QAAI,OAAO,gBAAgB;AAC1B,uBAAiB,OAAO,OAAO,gBAAgB,OAAO,cAAc;AAAA,IACrE;AAAA,EACD,CAAC;AAED,SAAO,EAAE,UAAU,eAAe;AACnC;AAbS;AAeT,SAAS,sBAAsB,eAA+B,eAAkC,gBAAgB,MAAgB;AAC/H,QAAM,WAAqB,CAAC;AAC5B,gBAAc,QAAQ,iBAAe;AACpC,UAAM,sBAAsB,OAAO,OAAO,CAAC,GAAG,iBAAiB,CAAC,GAAG,YAAY,kBAAkB,CAAC,CAAC;AACnG,UAAM,SAAS,mBAAmB,qBAAqB,gBAAgB,YAAY,OAAO,SAAS,MAAS;AAC5G,aAAS,KAAK,GAAG,OAAO,QAAQ;AAAA,EACjC,CAAC;AAED,SAAO;AACR;AATS;AAWT,SAAS,mBAAmB,UAA4B,QAAiB,gBAA6C;AACrH,QAAM,WAAqB,CAAC;AAC5B,QAAM,iBAAmC,CAAC;AAC1C,SAAO,KAAK,QAAQ,EAClB,QAAQ,SAAO;AACf,QAAI,kBAAkB,eAAe,IAAI,GAAG,GAAG;AAC9C;AAAA,IACD;AAEA,QAAI,CAAC,KAAK;AACT;AAAA,IACD;AAEA,UAAM,QAAQ,SAAS,GAAG;AAC1B,UAAM,kBAAkB,SAAS,gBAAgB,QAAQ,GAAG,IAAI,GAAG;AAInE,QAAI,IAAI,WAAW,MAAM,GAAG;AAC3B,YAAM,SAAS,IAAI,OAAO,CAAC,EAAE,QAAQ,OAAO,GAAG;AAAA,IAChD,OAAO;AACN,YAAM,IAAI,QAAQ,OAAO,GAAG;AAAA,IAC7B;AAEA,QAAI,OAAO,UAAU,aAAa,OAAO;AACxC,UAAI,IAAI,WAAW,MAAM,GAAG;AAE3B,eAAO;AAAA,MACR;AAEA,eAAS,KAAK,UAAU,GAAG,CAAC;AAAA,IAC7B,WAAW,SAAS,MAAM,MAAM;AAC/B,qBAAe,GAAG,IAAI;AAAA,IACvB;AAAA,EACD,CAAC;AAEF,SAAO,EAAE,UAAU,eAAe;AACnC;AArCS;AA6CF,SAAS,gBAAgB,QAAgB,KAAqB;AACpE,SAAO,KAAK,WAAW,GAAG,IACzB,MACA,KAAK,KAAK,QAAQ,GAAG;AACvB;AAJgB;AAMhB,SAAS,kBAAkB,KAAqB;AAC/C,QAAM,QAAQ,MAAM,KAAK,IAAI;AAC7B,SAAO,QAAQ,MAAM,KAAK,GAAG;AAC9B;AAHS;AAKF,SAAS,UAAUA,OAAsB;AAC/C,QAAM,OAAO,QAAQ,QAAQA,KAAI;AACjC,SAAO,KAAK,YAAY,MAAM,QAC7BA,MAAK,QAAQ,aAAa,GAAG,IAC7BA;AACF;AALgB;",
  "names": ["path"]
}
