{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/search/node/textSearchManager.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as pfs from \"../../../../base/node/pfs.js\";\nimport { toCanonicalName } from \"../../textfile/common/encoding.js\";\nimport type { ITextQuery, ITextSearchStats } from \"../common/search.js\";\nimport type { TextSearchProviderNew } from \"../common/searchExtTypes.js\";\nimport { TextSearchManager } from \"../common/textSearchManager.js\";\n\nexport class NativeTextSearchManager extends TextSearchManager {\n\tconstructor(\n\t\tquery: ITextQuery,\n\t\tprovider: TextSearchProviderNew,\n\t\t_pfs: typeof pfs = pfs,\n\t\tprocessType: ITextSearchStats[\"type\"] = \"searchProcess\",\n\t) {\n\t\tsuper(\n\t\t\t{ query, provider },\n\t\t\t{\n\t\t\t\treaddir: (resource) => _pfs.Promises.readdir(resource.fsPath),\n\t\t\t\ttoCanonicalName: (name) => toCanonicalName(name),\n\t\t\t},\n\t\t\tprocessType,\n\t\t);\n\t}\n}\n"],
  "mappings": ";;AAKA,YAAY,SAAS;AACrB,SAAS,uBAAuB;AAGhC,SAAS,yBAAyB;AAE3B,MAAM,gCAAgC,kBAAkB;AAAA,EAX/D,OAW+D;AAAA;AAAA;AAAA,EAC9D,YACC,OACA,UACA,OAAmB,KACnB,cAAwC,iBACvC;AACD;AAAA,MACC,EAAE,OAAO,SAAS;AAAA,MAClB;AAAA,QACC,SAAS,wBAAC,aAAa,KAAK,SAAS,QAAQ,SAAS,MAAM,GAAnD;AAAA,QACT,iBAAiB,wBAAC,SAAS,gBAAgB,IAAI,GAA9B;AAAA,MAClB;AAAA,MACA;AAAA,IACD;AAAA,EACD;AACD;",
  "names": []
}
