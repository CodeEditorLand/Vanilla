{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/search/node/textSearchManager.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toCanonicalName } from '../../textfile/common/encoding.js';\nimport * as pfs from '../../../../base/node/pfs.js';\nimport { ITextQuery, ITextSearchStats } from '../common/search.js';\nimport { TextSearchProviderNew } from '../common/searchExtTypes.js';\nimport { TextSearchManager } from '../common/textSearchManager.js';\n\nexport class NativeTextSearchManager extends TextSearchManager {\n\n\tconstructor(query: ITextQuery, provider: TextSearchProviderNew, _pfs: typeof pfs = pfs, processType: ITextSearchStats['type'] = 'searchProcess') {\n\t\tsuper({ query, provider }, {\n\t\t\treaddir: resource => _pfs.Promises.readdir(resource.fsPath),\n\t\t\ttoCanonicalName: name => toCanonicalName(name)\n\t\t}, processType);\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,uBAAuB;AAChC,YAAY,SAAS;AACrB,SAAS,YAAY,wBAAwB;AAC7C,SAAS,6BAA6B;AACtC,SAAS,yBAAyB;AAE3B,MAAM,gCAAgC,kBAAkB;AAAA,EAX/D,OAW+D;AAAA;AAAA;AAAA,EAE9D,YAAY,OAAmB,UAAiC,OAAmB,KAAK,cAAwC,iBAAiB;AAChJ,UAAM,EAAE,OAAO,SAAS,GAAG;AAAA,MAC1B,SAAS,qCAAY,KAAK,SAAS,QAAQ,SAAS,MAAM,GAAjD;AAAA,MACT,iBAAiB,iCAAQ,gBAAgB,IAAI,GAA5B;AAAA,IAClB,GAAG,WAAW;AAAA,EACf;AACD;",
  "names": []
}
