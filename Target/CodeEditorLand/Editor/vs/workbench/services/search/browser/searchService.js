var H=Object.defineProperty;var _=Object.getOwnPropertyDescriptor;var v=(d,c,e,r)=>{for(var t=r>1?void 0:r?_(c,e):c,i=d.length-1,s;i>=0;i--)(s=d[i])&&(t=(r?s(c,e,t):s(t))||t);return r&&t&&H(c,e,t),t},o=(d,c)=>(e,r)=>c(e,r,d);import"../../../../base/common/cancellation.js";import{IModelService as R}from"../../../../editor/common/services/model.js";import{IFileService as C}from"../../../../platform/files/common/files.js";import{IInstantiationService as U}from"../../../../platform/instantiation/common/instantiation.js";import{ILogService as Q}from"../../../../platform/log/common/log.js";import{ITelemetryService as E}from"../../../../platform/telemetry/common/telemetry.js";import{IEditorService as q}from"../../editor/common/editorService.js";import{IExtensionService as L}from"../../extensions/common/extensions.js";import{ISearchService as O,SearchProviderType as F,TextSearchCompleteMessageType as w}from"../common/search.js";import{SearchService as $}from"../common/searchService.js";import{IUriIdentityService as P}from"../../../../platform/uriIdentity/common/uriIdentity.js";import{logOnceWebWorkerWarning as z}from"../../../../base/common/worker/simpleWorker.js";import{Disposable as g,DisposableStore as M}from"../../../../base/common/lifecycle.js";import{createWebWorker as N}from"../../../../base/browser/defaultWorkerFactory.js";import{InstantiationType as j,registerSingleton as A}from"../../../../platform/instantiation/common/extensions.js";import{LocalFileSearchSimpleWorkerHost as B}from"../common/localFileSearchWorkerTypes.js";import{memoize as G}from"../../../../base/common/decorators.js";import"../../../../platform/files/browser/htmlFileSystemProvider.js";import{Schemas as x}from"../../../../base/common/network.js";import{URI as T}from"../../../../base/common/uri.js";import{Emitter as J}from"../../../../base/common/event.js";import{localize as W}from"../../../../nls.js";import{WebFileSystemAccess as b}from"../../../../platform/files/browser/webFileSystemAccess.js";import{revive as D}from"../../../../base/common/marshalling.js";let S=class extends ${constructor(e,r,t,i,s,l,y,h){super(e,r,t,i,s,l,h);this.instantiationService=y;const a=this.instantiationService.createInstance(p);this.registerSearchResultProvider(x.file,F.file,a),this.registerSearchResultProvider(x.file,F.text,a)}};S=v([o(0,R),o(1,q),o(2,E),o(3,Q),o(4,L),o(5,C),o(6,U),o(7,P)],S);let p=class extends g{constructor(e,r){super();this.fileService=e;this.uriIdentityService=r;this._worker=null}_worker;_onDidReceiveTextSearchMatch=new J;onDidReceiveTextSearchMatch=this._onDidReceiveTextSearchMatch.event;cache;queryId=0;sendTextSearchMatch(e,r){this._onDidReceiveTextSearchMatch.fire({match:e,queryId:r})}get fileSystemProvider(){return this.fileService.getProvider(x.file)}async cancelQuery(e){this._getOrCreateWorker().proxy.$cancelQuery(e)}async textSearch(e,r,t){try{const i=new M,s=this._getOrCreateWorker().proxy,l=[];let y=!1;return await Promise.all(e.folderQueries.map(async a=>{const m=this.queryId++;i.add(t?.onCancellationRequested(n=>this.cancelQuery(m))||g.None);const u=await this.fileSystemProvider.getHandle(a.folder);if(!u||!b.isFileSystemDirectoryHandle(u))return;const I=n=>({resource:T.revive(n.resource),results:D(n.results)});i.add(this.onDidReceiveTextSearchMatch(n=>{n.queryId===m&&r?.(I(n.match))}));const f=this.uriIdentityService.extUri.ignorePathCasing(a.folder),k=await s.$searchDirectory(u,e,a,f,m);for(const n of k.results)l.push(D(n));k.limitHit&&(y=!0)})),i.dispose(),{messages:[],results:l,limitHit:y}}catch{return{results:[],messages:[{text:W("errorSearchText","Unable to search with Web Worker text searcher"),type:w.Warning}]}}}async fileSearch(e,r){try{const t=new M;let i=!1;const s=this._getOrCreateWorker().proxy,l=[];return await Promise.all(e.folderQueries.map(async h=>{const a=this.queryId++;t.add(r?.onCancellationRequested(f=>this.cancelQuery(a))||g.None);const m=await this.fileSystemProvider.getHandle(h.folder);if(!m||!b.isFileSystemDirectoryHandle(m))return;const u=this.uriIdentityService.extUri.ignorePathCasing(h.folder),I=await s.$listDirectory(m,e,h,u,a);for(const f of I.results)l.push({resource:T.joinPath(h.folder,f)});I.limitHit&&(i=!0)})),t.dispose(),{messages:[],results:l,limitHit:i}}catch{return{results:[],messages:[{text:W("errorSearchFile","Unable to search with Web Worker file searcher"),type:w.Warning}]}}}async clearCache(e){this.cache?.key===e&&(this.cache=void 0)}_getOrCreateWorker(){if(!this._worker)try{this._worker=this._register(N("vs/workbench/services/search/worker/localFileSearch","LocalFileSearchWorker")),B.setChannel(this._worker,{$sendTextSearchMatch:(e,r)=>this.sendTextSearchMatch(e,r)})}catch(e){throw z(e),e}return this._worker}};v([G],p.prototype,"fileSystemProvider",1),p=v([o(0,C),o(1,P)],p),A(O,S,j.Delayed);export{p as LocalFileSearchWorkerClient,S as RemoteSearchService};
