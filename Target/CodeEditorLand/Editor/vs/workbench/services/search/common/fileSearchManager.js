import{CancellationTokenSource as S}from"../../../../../vs/base/common/cancellation.js";import{toErrorMessage as g}from"../../../../../vs/base/common/errorMessage.js";import*as v from"../../../../../vs/base/common/glob.js";import*as f from"../../../../../vs/base/common/path.js";import*as T from"../../../../../vs/base/common/resources.js";import{StopWatch as P}from"../../../../../vs/base/common/stopwatch.js";import{TernarySearchTree as b}from"../../../../../vs/base/common/ternarySearchTree.js";import"../../../../../vs/base/common/uri.js";import{DEFAULT_MAX_SEARCH_RESULTS as y,excludeToGlobPattern as C,hasSiblingFn as E,QueryGlobTester as x,resolvePatternsForProvider as p}from"../../../../../vs/workbench/services/search/common/search.js";import"../../../../../vs/workbench/services/search/common/searchExtTypes.js";class k{constructor(e,i,n){this.config=e;this.provider=i;this.sessionToken=n;this.filePattern=e.filePattern,this.includePattern=e.includePattern&&v.parse(e.includePattern),this.maxResults=e.maxResults||void 0,this.exists=e.exists,this.activeCancellationTokens=new Set,this.globalExcludePattern=e.excludePattern&&v.parse(e.excludePattern)}filePattern;includePattern;maxResults;exists;isLimitHit=!1;resultCount=0;isCanceled=!1;activeCancellationTokens;globalExcludePattern;cancel(){this.isCanceled=!0,this.activeCancellationTokens.forEach(e=>e.cancel()),this.activeCancellationTokens=new Set}search(e){const i=this.config.folderQueries||[];return new Promise((n,l)=>{const a=r=>{this.resultCount++,e(r)};if(this.isCanceled)return n({limitHit:this.isLimitHit});this.config.extraFileResources&&this.config.extraFileResources.forEach(r=>{const s=r.toString(),t=f.basename(s);this.globalExcludePattern&&this.globalExcludePattern(s,t)||this.matchFile(a,{base:r,basename:t})}),this.doSearch(i,a).then(r=>{n({limitHit:this.isLimitHit,stats:r||void 0})},r=>{l(new Error(g(r)))})})}async doSearch(e,i){const n=new S,a={folderOptions:e.map(t=>this.getSearchOptionsForFolder(t)),maxResults:this.config.maxResults??y,session:this.sessionToken},r=b.forUris();e.forEach(t=>{const o=new x(this.config,t),c=!o.hasSiblingExcludeClauses();r.set(t.folder,{queryTester:o,noSiblingsClauses:c,folder:t.folder,tree:this.initDirectoryTree()})});let s;try{this.activeCancellationTokens.add(n),s=P.create();const t=await this.provider.provideFileSearchResults(this.config.filePattern||"",a,n.token),o=s.elapsed(),c=P.create();return this.isCanceled&&!this.isLimitHit||(t&&t.forEach(h=>{const d=r.findSubstr(h),u=f.posix.relative(d.folder.path,h.path);if(d.noSiblingsClauses){const m=f.basename(h.path);this.matchFile(i,{base:d.folder,relativePath:u,basename:m});return}this.addDirectoryEntries(d.tree,d.folder,u,i)}),this.isCanceled&&!this.isLimitHit)?null:(r.forEach(h=>{this.matchDirectoryTree(h.tree,h.queryTester,i)}),{providerTime:o,postProcessTime:c.elapsed()})}finally{n.dispose(),this.activeCancellationTokens.delete(n)}}getSearchOptionsForFolder(e){const i=p(this.config.includePattern,e.includePattern);let n=e.excludePattern?.map(a=>({folder:a.folder,patterns:p(this.config.excludePattern,a.pattern)}));n?.length||(n=[{folder:void 0,patterns:p(this.config.excludePattern,void 0)}]);const l=C(n);return{folder:e.folder,excludes:l,includes:i,useIgnoreFiles:{local:!e.disregardIgnoreFiles,parent:!e.disregardParentIgnoreFiles,global:!e.disregardGlobalIgnoreFiles},followSymlinks:!e.ignoreSymlinks}}initDirectoryTree(){const e={rootEntries:[],pathToEntries:Object.create(null)};return e.pathToEntries["."]=e.rootEntries,e}addDirectoryEntries({pathToEntries:e},i,n,l){if(n===this.filePattern){const r=f.basename(this.filePattern);this.matchFile(l,{base:i,relativePath:this.filePattern,basename:r})}function a(r){const s=f.basename(r),t=f.dirname(r);let o=e[t];o||(o=e[t]=[],a(t)),o.push({base:i,relativePath:r,basename:s})}a(n)}matchDirectoryTree({rootEntries:e,pathToEntries:i},n,l){const a=this,r=this.filePattern;function s(t){const o=E(()=>t.map(c=>c.basename));for(let c=0,h=t.length;c<h;c++){const d=t[c],{relativePath:u,basename:m}=d;if(n.matchesExcludesSync(u,m,r!==m?o:void 0))continue;const I=i[u];if(I)s(I);else{if(u===r)continue;a.matchFile(l,d)}if(a.isLimitHit)break}}s(e)}matchFile(e,i){(!this.includePattern||i.relativePath&&this.includePattern(i.relativePath,i.basename))&&((this.exists||this.maxResults&&this.resultCount>=this.maxResults)&&(this.isLimitHit=!0,this.cancel()),this.isLimitHit||e(i))}}class F{static BATCH_SIZE=512;sessions=new Map;fileSearch(e,i,n,l){const a=this.getSessionTokenSource(e.cacheKey),r=new k(e,i,a&&a.token);let s=0;const t=o=>{s+=o.length,n(o.map(c=>this.rawMatchToSearchItem(c)))};return this.doSearch(r,F.BATCH_SIZE,t,l).then(o=>({limitHit:o.limitHit,stats:o.stats?{fromCache:!1,type:"fileSearchProvider",resultCount:s,detailStats:o.stats}:void 0,messages:[]}))}clearCache(e){this.getSessionTokenSource(e)?.cancel()}getSessionTokenSource(e){if(e)return this.sessions.has(e)||this.sessions.set(e,new S),this.sessions.get(e)}rawMatchToSearchItem(e){return e.relativePath?{resource:T.joinPath(e.base,e.relativePath)}:{resource:e.base}}doSearch(e,i,n,l){const a=l.onCancellationRequested(()=>{e.cancel()}),r=t=>{t&&(s.push(t),i>0&&s.length>=i&&(n(s),s=[]))};let s=[];return e.search(r).then(t=>(s.length&&n(s),a.dispose(),t),t=>(s.length&&n(s),a.dispose(),Promise.reject(t)))}}export{F as FileSearchManager};
