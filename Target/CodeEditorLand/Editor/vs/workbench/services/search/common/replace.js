import*as b from"../../../../base/common/strings.js";import{CharCode as n}from"../../../../base/common/charCode.js";import{buildReplaceStringWithCasePreserved as m}from"../../../../base/common/search.js";class P{_replacePattern;_hasParameters=!1;_regExp;_caseOpsRegExp;constructor(t,r,s){this._replacePattern=t;let e,a;typeof r=="boolean"?(a=r,this._regExp=s):(e=r,a=!!e.isRegExp,this._regExp=b.createRegExp(e.pattern,!!e.isRegExp,{matchCase:e.isCaseSensitive,wholeWord:e.isWordMatch,multiline:e.isMultiline,global:!1,unicode:!0})),a&&this.parseReplaceString(t),this._regExp.global&&(this._regExp=b.createRegExp(this._regExp.source,!0,{matchCase:!this._regExp.ignoreCase,wholeWord:!1,multiline:this._regExp.multiline,global:!1})),this._caseOpsRegExp=new RegExp(/([\s\S]*?)((?:\\[uUlL])+?|)(\$[0-9]+)([\s\S]*?)/g)}get hasParameters(){return this._hasParameters}get pattern(){return this._replacePattern}get regExp(){return this._regExp}getReplaceString(t,r){this._regExp.lastIndex=0;const s=this._regExp.exec(t);if(s){if(this.hasParameters){const e=this.replaceWithCaseOperations(t,this._regExp,this.buildReplaceString(s,r));return s[0]===t?e:e.substr(s.index,s[0].length-(t.length-e.length))}return this.buildReplaceString(s,r)}return null}replaceWithCaseOperations(t,r,s){if(!/\\[uUlL]/.test(s))return t.replace(r,s);const e=r.exec(t);if(e===null)return t.replace(r,s);let a,i="",o=0,l="";for(;(a=this._caseOpsRegExp.exec(s))!==null;){o=a.index;const c=a[0];l=c;let g=a[2];const f=a[3];if(!g){i+=c;continue}const p=e[parseInt(f.slice(1))];if(!p){i+=c;continue}const u=p.length;i+=a[1],g=g.replace(/\\/g,"");let h=0;for(;h<g.length;h++)switch(g[h]){case"U":i+=p.slice(h).toUpperCase(),h=u;break;case"u":i+=p[h].toUpperCase();break;case"L":i+=p.slice(h).toLowerCase(),h=u;break;case"l":i+=p[h].toLowerCase();break}h<u&&(i+=p.slice(h)),i+=a[4]}return i+=s.slice(o+l.length),t.replace(r,i)}buildReplaceString(t,r){return r?m(t,this._replacePattern):this._replacePattern}parseReplaceString(t){if(!t||t.length===0)return;let r=0,s="";for(let e=0,a=t.length;e<a;e++){const i=t.charCodeAt(e);if(i===n.Backslash){if(e++,e>=a)break;const o=t.charCodeAt(e);let l=null;switch(o){case n.Backslash:l="\\";break;case n.n:l=`
`;break;case n.t:l="	";break}l&&(s+=t.substring(r,e-1)+l,r=e+1)}if(i===n.DollarSign){if(e++,e>=a)break;const o=t.charCodeAt(e);let l=null;switch(o){case n.Digit0:l="$&",this._hasParameters=!0;break;case n.BackTick:case n.SingleQuote:this._hasParameters=!0;break;default:{if(!this.between(o,n.Digit1,n.Digit9))break;if(e===t.length-1){this._hasParameters=!0;break}let c=t.charCodeAt(++e);if(!this.between(c,n.Digit0,n.Digit9)){this._hasParameters=!0,--e;break}if(e===t.length-1){this._hasParameters=!0;break}if(c=t.charCodeAt(++e),!this.between(c,n.Digit0,n.Digit9)){this._hasParameters=!0,--e;break}break}}l&&(s+=t.substring(r,e-1)+l,r=e+1)}}r!==0&&(this._replacePattern=s+t.substring(r))}between(t,r,s){return r<=t&&t<=s}}export{P as ReplacePattern};
