import r from"assert";import{isWindows as t}from"../../../../../base/common/platform.js";import{URI as o}from"../../../../../base/common/uri.js";import{ensureNoDisposablesAreLeakedInTestSuite as c}from"../../../../../base/test/common/utils.js";import"../../../../../platform/workspace/common/workspace.js";import{testWorkspace as p}from"../../../../../platform/workspace/test/common/testWorkspace.js";import{resolveResourcesForSearchIncludes as a}from"../../common/queryBuilder.js";import{TestContextService as i}from"../../../../test/common/workbenchTestServices.js";suite("QueryBuilderCommon",()=>{c();let s;setup(()=>{const e=p(o.file(t?"C:\\testWorkspace":"/testWorkspace"));s=new i(e)}),test("resolveResourcesForSearchIncludes passes through paths without special glob characters",()=>{const e=a([o.file(t?"C:\\testWorkspace\\pages\\blog":"/testWorkspace/pages/blog")],s);r.deepStrictEqual(e,["./pages/blog"])}),test("resolveResourcesForSearchIncludes escapes paths with special characters",()=>{const e=a([o.file(t?"C:\\testWorkspace\\pages\\blog\\[postId]":"/testWorkspace/pages/blog/[postId]")],s);r.deepStrictEqual(e,["./pages/blog/[[]postId[]]"])})});
