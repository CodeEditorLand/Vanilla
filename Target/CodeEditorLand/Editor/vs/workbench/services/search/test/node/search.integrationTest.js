import i from"assert";import*as u from"../../../../../base/common/path.js";import*as y from"../../../../../base/common/platform.js";import{joinPath as S}from"../../../../../base/common/resources.js";import{URI as p}from"../../../../../base/common/uri.js";import{QueryType as r}from"../../common/search.js";import{Engine as a,FileWalker as F}from"../../node/fileSearch.js";import{flakySuite as Q}from"../../../../../base/test/node/testUtils.js";import{FileAccess as w}from"../../../../../base/common/network.js";const q=u.normalize(w.asFileUri("vs/workbench/services/search/test/node/fixtures").fsPath),v=p.file(u.join(q,"examples")),b=p.file(u.join(q,"more")),h={folder:p.file(q)},c=[h],O=[{folder:p.file(u.normalize(w.asFileUri("vs/workbench/services/search/test/node/fixtures2/36438").fsPath))}],g=[{folder:v},{folder:b}];Q("FileSearchEngine",()=>{test("Files: *.js",function(l){const n=new a({type:r.File,folderQueries:c,filePattern:"*.js"});let t=0;n.search(e=>{e&&t++},()=>{},e=>{i.ok(!e),i.strictEqual(t,4),l()})}),test("Files: maxResults",function(l){const n=new a({type:r.File,folderQueries:c,maxResults:1});let t=0;n.search(e=>{e&&t++},()=>{},e=>{i.ok(!e),i.strictEqual(t,1),l()})}),test("Files: maxResults without Ripgrep",function(l){const n=new a({type:r.File,folderQueries:c,maxResults:1});let t=0;n.search(e=>{e&&t++},()=>{},e=>{i.ok(!e),i.strictEqual(t,1),l()})}),test("Files: exists",function(l){const n=new a({type:r.File,folderQueries:c,includePattern:{"**/file.txt":!0},exists:!0});let t=0;n.search(e=>{e&&t++},()=>{},(e,s)=>{i.ok(!e),i.strictEqual(t,0),i.ok(s.limitHit),l()})}),test("Files: not exists",function(l){const n=new a({type:r.File,folderQueries:c,includePattern:{"**/nofile.txt":!0},exists:!0});let t=0;n.search(e=>{e&&t++},()=>{},(e,s)=>{i.ok(!e),i.strictEqual(t,0),i.ok(!s.limitHit),l()})}),test("Files: exists without Ripgrep",function(l){const n=new a({type:r.File,folderQueries:c,includePattern:{"**/file.txt":!0},exists:!0});let t=0;n.search(e=>{e&&t++},()=>{},(e,s)=>{i.ok(!e),i.strictEqual(t,0),i.ok(s.limitHit),l()})}),test("Files: not exists without Ripgrep",function(l){const n=new a({type:r.File,folderQueries:c,includePattern:{"**/nofile.txt":!0},exists:!0});let t=0;n.search(e=>{e&&t++},()=>{},(e,s)=>{i.ok(!e),i.strictEqual(t,0),i.ok(!s.limitHit),l()})}),test("Files: examples/com*",function(l){const n=new a({type:r.File,folderQueries:c,filePattern:u.join("examples","com*")});let t=0;n.search(e=>{e&&t++},()=>{},e=>{i.ok(!e),i.strictEqual(t,1),l()})}),test("Files: examples (fuzzy)",function(l){const n=new a({type:r.File,folderQueries:c,filePattern:"xl"});let t=0;n.search(e=>{e&&t++},()=>{},e=>{i.ok(!e),i.strictEqual(t,7),l()})}),test("Files: multiroot",function(l){const n=new a({type:r.File,folderQueries:g,filePattern:"file"});let t=0;n.search(e=>{e&&t++},()=>{},e=>{i.ok(!e),i.strictEqual(t,3),l()})}),test("Files: multiroot with includePattern and maxResults",function(l){const n=new a({type:r.File,folderQueries:g,maxResults:1,includePattern:{"*.txt":!0,"*.js":!0}});let t=0;n.search(e=>{e&&t++},()=>{},(e,s)=>{i.ok(!e),i.strictEqual(t,1),l()})}),test("Files: multiroot with includePattern and exists",function(l){const n=new a({type:r.File,folderQueries:g,exists:!0,includePattern:{"*.txt":!0,"*.js":!0}});let t=0;n.search(e=>{e&&t++},()=>{},(e,s)=>{i.ok(!e),i.strictEqual(t,0),i.ok(s.limitHit),l()})}),test("Files: NPE (CamelCase)",function(l){const n=new a({type:r.File,folderQueries:c,filePattern:"NullPE"});let t=0;n.search(e=>{e&&t++},()=>{},e=>{i.ok(!e),i.strictEqual(t,1),l()})}),test("Files: *.*",function(l){const n=new a({type:r.File,folderQueries:c,filePattern:"*.*"});let t=0;n.search(e=>{e&&t++},()=>{},e=>{i.ok(!e),i.strictEqual(t,14),l()})}),test("Files: *.as",function(l){const n=new a({type:r.File,folderQueries:c,filePattern:"*.as"});let t=0;n.search(e=>{e&&t++},()=>{},e=>{i.ok(!e),i.strictEqual(t,0),l()})}),test("Files: *.* without derived",function(l){const n=new a({type:r.File,folderQueries:c,filePattern:"site.*",excludePattern:{"**/*.css":{when:"$(basename).less"}}});let t=0,e;n.search(s=>{s&&t++,e=s},()=>{},s=>{i.ok(!s),i.strictEqual(t,1),i.strictEqual(u.basename(e.relativePath),"site.less"),l()})}),test("Files: *.* exclude folder without wildcard",function(l){const n=new a({type:r.File,folderQueries:c,filePattern:"*.*",excludePattern:{examples:!0}});let t=0;n.search(e=>{e&&t++},()=>{},e=>{i.ok(!e),i.strictEqual(t,8),l()})}),test("Files: exclude folder without wildcard #36438",function(l){const n=new a({type:r.File,folderQueries:O,excludePattern:{modules:!0}});let t=0;n.search(e=>{e&&t++},()=>{},e=>{i.ok(!e),i.strictEqual(t,1),l()})}),test("Files: include folder without wildcard #36438",function(l){const n=new a({type:r.File,folderQueries:O,includePattern:{"modules/**":!0}});let t=0;n.search(e=>{e&&t++},()=>{},e=>{i.ok(!e),i.strictEqual(t,1),l()})}),test("Files: *.* exclude folder with leading wildcard",function(l){const n=new a({type:r.File,folderQueries:c,filePattern:"*.*",excludePattern:{"**/examples":!0}});let t=0;n.search(e=>{e&&t++},()=>{},e=>{i.ok(!e),i.strictEqual(t,8),l()})}),test("Files: *.* exclude folder with trailing wildcard",function(l){const n=new a({type:r.File,folderQueries:c,filePattern:"*.*",excludePattern:{"examples/**":!0}});let t=0;n.search(e=>{e&&t++},()=>{},e=>{i.ok(!e),i.strictEqual(t,8),l()})}),test("Files: *.* exclude with unicode",function(l){const n=new a({type:r.File,folderQueries:c,filePattern:"*.*",excludePattern:{"**/\xFCm laut\u6C49\u8BED":!0}});let t=0;n.search(e=>{e&&t++},()=>{},e=>{i.ok(!e),i.strictEqual(t,13),l()})}),test("Files: *.* include with unicode",function(l){const n=new a({type:r.File,folderQueries:c,filePattern:"*.*",includePattern:{"**/\xFCm laut\u6C49\u8BED/*":!0}});let t=0;n.search(e=>{e&&t++},()=>{},e=>{i.ok(!e),i.strictEqual(t,1),l()})}),test("Files: multiroot with exclude",function(l){const n=[{folder:v,excludePattern:[{pattern:{"**/anotherfile.txt":!0}}]},{folder:b,excludePattern:[{pattern:{"**/file.txt":!0}}]}],t=new a({type:r.File,folderQueries:n,filePattern:"*"});let e=0;t.search(s=>{s&&e++},()=>{},s=>{i.ok(!s),i.strictEqual(e,5),l()})}),test("Files: Unicode and Spaces",function(l){const n=new a({type:r.File,folderQueries:c,filePattern:"\u6C49\u8BED"});let t=0,e;n.search(s=>{s&&t++,e=s},()=>{},s=>{i.ok(!s),i.strictEqual(t,1),i.strictEqual(u.basename(e.relativePath),"\u6C49\u8BED.txt"),l()})}),test("Files: no results",function(l){const n=new a({type:r.File,folderQueries:c,filePattern:"nofilematch"});let t=0;n.search(e=>{e&&t++},()=>{},e=>{i.ok(!e),i.strictEqual(t,0),l()})}),test("Files: relative path matched once",function(l){const n=new a({type:r.File,folderQueries:c,filePattern:u.normalize(u.join("examples","company.js"))});let t=0,e;n.search(s=>{s&&t++,e=s},()=>{},s=>{i.ok(!s),i.strictEqual(t,1),i.strictEqual(u.basename(e.relativePath),"company.js"),l()})}),test("Files: Include pattern, single files",function(l){const n=new a({type:r.File,folderQueries:c,includePattern:{"site.css":!0,"examples/company.js":!0,"examples/subfolder/subfile.txt":!0}}),t=[];n.search(e=>{t.push(e)},()=>{},e=>{i.ok(!e);const s=t.map(d=>u.basename(d.relativePath));i.ok(s.indexOf("site.css")!==-1,`site.css missing in ${JSON.stringify(s)}`),i.ok(s.indexOf("company.js")!==-1,`company.js missing in ${JSON.stringify(s)}`),i.ok(s.indexOf("subfile.txt")!==-1,`subfile.txt missing in ${JSON.stringify(s)}`),l()})}),test("Files: extraFiles only",function(l){const n=new a({type:r.File,folderQueries:[],extraFileResources:[p.file(u.normalize(u.join(w.asFileUri("vs/workbench/services/search/test/node/fixtures").fsPath,"site.css"))),p.file(u.normalize(u.join(w.asFileUri("vs/workbench/services/search/test/node/fixtures").fsPath,"examples","company.js"))),p.file(u.normalize(u.join(w.asFileUri("vs/workbench/services/search/test/node/fixtures").fsPath,"index.html")))],filePattern:"*.js"});let t=0,e;n.search(s=>{s&&t++,e=s},()=>{},s=>{i.ok(!s),i.strictEqual(t,1),i.strictEqual(u.basename(e.relativePath),"company.js"),l()})}),test("Files: extraFiles only (with include)",function(l){const n=new a({type:r.File,folderQueries:[],extraFileResources:[p.file(u.normalize(u.join(w.asFileUri("vs/workbench/services/search/test/node/fixtures").fsPath,"site.css"))),p.file(u.normalize(u.join(w.asFileUri("vs/workbench/services/search/test/node/fixtures").fsPath,"examples","company.js"))),p.file(u.normalize(u.join(w.asFileUri("vs/workbench/services/search/test/node/fixtures").fsPath,"index.html")))],filePattern:"*.*",includePattern:{"**/*.css":!0}});let t=0,e;n.search(s=>{s&&t++,e=s},()=>{},s=>{i.ok(!s),i.strictEqual(t,1),i.strictEqual(u.basename(e.relativePath),"site.css"),l()})}),test("Files: extraFiles only (with exclude)",function(l){const n=new a({type:r.File,folderQueries:[],extraFileResources:[p.file(u.normalize(u.join(w.asFileUri("vs/workbench/services/search/test/node/fixtures").fsPath,"site.css"))),p.file(u.normalize(u.join(w.asFileUri("vs/workbench/services/search/test/node/fixtures").fsPath,"examples","company.js"))),p.file(u.normalize(u.join(w.asFileUri("vs/workbench/services/search/test/node/fixtures").fsPath,"index.html")))],filePattern:"*.*",excludePattern:{"**/*.css":!0}});let t=0;n.search(e=>{e&&t++},()=>{},e=>{i.ok(!e),i.strictEqual(t,2),l()})}),test("Files: no dupes in nested folders",function(l){const n=new a({type:r.File,folderQueries:[{folder:v},{folder:S(v,"subfolder")}],filePattern:"subfile.txt"});let t=0;n.search(e=>{e&&t++},()=>{},e=>{i.ok(!e),i.strictEqual(t,1),l()})})}),Q("FileWalker",()=>{(y.isWindows?test.skip:test)("Find: exclude subfolder",function(n){const t="./more/file.txt",e="./examples/subfolder/subfile.txt",s=new F({type:r.File,folderQueries:c,excludePattern:{"**/something":!0}}),d=s.spawnFindCmd(h);s.readStdout(d,"utf8",(x,o)=>{i.strictEqual(x,null),i.notStrictEqual(o.split(`
`).indexOf(t),-1,o),i.notStrictEqual(o.split(`
`).indexOf(e),-1,o);const f=new F({type:r.File,folderQueries:c,excludePattern:{"**/subfolder":!0}}),E=f.spawnFindCmd(h);f.readStdout(E,"utf8",(P,m)=>{i.strictEqual(P,null),i.notStrictEqual(o.split(`
`).indexOf(t),-1,o),i.strictEqual(m.split(`
`).indexOf(e),-1,m),n()})})}),(y.isWindows?test.skip:test)("Find: folder excludes",function(n){const t=[{folder:p.file(q),excludePattern:[{pattern:{"**/subfolder":!0}}]}],e="./more/file.txt",s="./examples/subfolder/subfile.txt",d=new F({type:r.File,folderQueries:t}),x=d.spawnFindCmd(t[0]);d.readStdout(x,"utf8",(o,f)=>{i.strictEqual(o,null),i(l(f,e),f),i(!l(f,s),f),n()})}),(y.isWindows?test.skip:test)("Find: exclude multiple folders",function(n){const t="./index.html",e="./examples/small.js",s="./more/file.txt",d=new F({type:r.File,folderQueries:c,excludePattern:{"**/something":!0}}),x=d.spawnFindCmd(h);d.readStdout(x,"utf8",(o,f)=>{i.strictEqual(o,null),i.notStrictEqual(f.split(`
`).indexOf(t),-1,f),i.notStrictEqual(f.split(`
`).indexOf(e),-1,f),i.notStrictEqual(f.split(`
`).indexOf(s),-1,f);const E=new F({type:r.File,folderQueries:c,excludePattern:{"{**/examples,**/more}":!0}}),P=E.spawnFindCmd(h);E.readStdout(P,"utf8",(m,k)=>{i.strictEqual(m,null),i.notStrictEqual(f.split(`
`).indexOf(t),-1,f),i.strictEqual(k.split(`
`).indexOf(e),-1,k),i.strictEqual(k.split(`
`).indexOf(s),-1,k),n()})})}),(y.isWindows?test.skip:test)("Find: exclude folder path suffix",function(n){const t="./examples/company.js",e="./examples/subfolder/subfile.txt",s=new F({type:r.File,folderQueries:c,excludePattern:{"**/examples/something":!0}}),d=s.spawnFindCmd(h);s.readStdout(d,"utf8",(x,o)=>{i.strictEqual(x,null),i.notStrictEqual(o.split(`
`).indexOf(t),-1,o),i.notStrictEqual(o.split(`
`).indexOf(e),-1,o);const f=new F({type:r.File,folderQueries:c,excludePattern:{"**/examples/subfolder":!0}}),E=f.spawnFindCmd(h);f.readStdout(E,"utf8",(P,m)=>{i.strictEqual(P,null),i.notStrictEqual(o.split(`
`).indexOf(t),-1,o),i.strictEqual(m.split(`
`).indexOf(e),-1,m),n()})})}),(y.isWindows?test.skip:test)("Find: exclude subfolder path suffix",function(n){const t="./examples/subfolder/subfile.txt",e="./examples/subfolder/anotherfolder/anotherfile.txt",s=new F({type:r.File,folderQueries:c,excludePattern:{"**/subfolder/something":!0}}),d=s.spawnFindCmd(h);s.readStdout(d,"utf8",(x,o)=>{i.strictEqual(x,null),i.notStrictEqual(o.split(`
`).indexOf(t),-1,o),i.notStrictEqual(o.split(`
`).indexOf(e),-1,o);const f=new F({type:r.File,folderQueries:c,excludePattern:{"**/subfolder/anotherfolder":!0}}),E=f.spawnFindCmd(h);f.readStdout(E,"utf8",(P,m)=>{i.strictEqual(P,null),i.notStrictEqual(o.split(`
`).indexOf(t),-1,o),i.strictEqual(m.split(`
`).indexOf(e),-1,m),n()})})}),(y.isWindows?test.skip:test)("Find: exclude folder path",function(n){const t="./examples/company.js",e="./examples/subfolder/subfile.txt",s=new F({type:r.File,folderQueries:c,excludePattern:{"examples/something":!0}}),d=s.spawnFindCmd(h);s.readStdout(d,"utf8",(x,o)=>{i.strictEqual(x,null),i.notStrictEqual(o.split(`
`).indexOf(t),-1,o),i.notStrictEqual(o.split(`
`).indexOf(e),-1,o);const f=new F({type:r.File,folderQueries:c,excludePattern:{"examples/subfolder":!0}}),E=f.spawnFindCmd(h);f.readStdout(E,"utf8",(P,m)=>{i.strictEqual(P,null),i.notStrictEqual(o.split(`
`).indexOf(t),-1,o),i.strictEqual(m.split(`
`).indexOf(e),-1,m),n()})})}),(y.isWindows?test.skip:test)("Find: exclude combination of paths",function(n){const t=["./examples/subfolder/subfile.txt","./examples/company.js","./index.html"],e=["./examples/subfolder/anotherfolder/anotherfile.txt","./more/file.txt"],s=new F({type:r.File,folderQueries:c,excludePattern:{"**/subfolder/anotherfolder":!0,"**/something/else":!0,"**/more":!0,"**/andmore":!0}}),d=s.spawnFindCmd(h);s.readStdout(d,"utf8",(x,o)=>{i.strictEqual(x,null);for(const f of t)i.notStrictEqual(o.split(`
`).indexOf(f),-1,o);for(const f of e)i.strictEqual(o.split(`
`).indexOf(f),-1,o);n()})});function l(n,...t){const e=n.split(`
`);return t.every(s=>e.indexOf(s)>=0)}});
