{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/search/test/node/ripgrepFileSearch.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport * as platform from '../../../../../base/common/platform.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { fixDriveC, getAbsoluteGlob } from '../../node/ripgrepFileSearch.js';\n\nsuite('RipgrepFileSearch - etc', () => {\n\tensureNoDisposablesAreLeakedInTestSuite();\n\tfunction testGetAbsGlob(params: string[]): void {\n\t\tconst [folder, glob, expectedResult] = params;\n\t\tassert.strictEqual(fixDriveC(getAbsoluteGlob(folder, glob)), expectedResult, JSON.stringify(params));\n\t}\n\n\t(!platform.isWindows ? test.skip : test)('getAbsoluteGlob_win', () => {\n\t\t[\n\t\t\t['C:/foo/bar', 'glob/**', '/foo\\\\bar\\\\glob\\\\**'],\n\t\t\t['c:/', 'glob/**', '/glob\\\\**'],\n\t\t\t['C:\\\\foo\\\\bar', 'glob\\\\**', '/foo\\\\bar\\\\glob\\\\**'],\n\t\t\t['c:\\\\foo\\\\bar', 'glob\\\\**', '/foo\\\\bar\\\\glob\\\\**'],\n\t\t\t['c:\\\\', 'glob\\\\**', '/glob\\\\**'],\n\t\t\t['\\\\\\\\localhost\\\\c$\\\\foo\\\\bar', 'glob/**', '\\\\\\\\localhost\\\\c$\\\\foo\\\\bar\\\\glob\\\\**'],\n\n\t\t\t// absolute paths are not resolved further\n\t\t\t['c:/foo/bar', '/path/something', '/path/something'],\n\t\t\t['c:/foo/bar', 'c:\\\\project\\\\folder', '/project\\\\folder']\n\t\t].forEach(testGetAbsGlob);\n\t});\n\n\t(platform.isWindows ? test.skip : test)('getAbsoluteGlob_posix', () => {\n\t\t[\n\t\t\t['/foo/bar', 'glob/**', '/foo/bar/glob/**'],\n\t\t\t['/', 'glob/**', '/glob/**'],\n\n\t\t\t// absolute paths are not resolved further\n\t\t\t['/', '/project/folder', '/project/folder'],\n\t\t].forEach(testGetAbsGlob);\n\t});\n});\n"],
  "mappings": ";;AAKA,OAAO,YAAY;AACnB,YAAY,cAAc;AAC1B,SAAS,+CAA+C;AACxD,SAAS,WAAW,uBAAuB;AAE3C,MAAM,2BAA2B,MAAM;AACtC,0CAAwC;AACxC,WAAS,eAAe,QAAwB;AAC/C,UAAM,CAAC,QAAQ,MAAM,cAAc,IAAI;AACvC,WAAO,YAAY,UAAU,gBAAgB,QAAQ,IAAI,CAAC,GAAG,gBAAgB,KAAK,UAAU,MAAM,CAAC;AAAA,EACpG;AAHS;AAKT,GAAC,CAAC,SAAS,YAAY,KAAK,OAAO,MAAM,uBAAuB,MAAM;AACrE;AAAA,MACC,CAAC,cAAc,WAAW,qBAAqB;AAAA,MAC/C,CAAC,OAAO,WAAW,WAAW;AAAA,MAC9B,CAAC,gBAAgB,YAAY,qBAAqB;AAAA,MAClD,CAAC,gBAAgB,YAAY,qBAAqB;AAAA,MAClD,CAAC,QAAQ,YAAY,WAAW;AAAA,MAChC,CAAC,+BAA+B,WAAW,uCAAuC;AAAA;AAAA,MAGlF,CAAC,cAAc,mBAAmB,iBAAiB;AAAA,MACnD,CAAC,cAAc,uBAAuB,kBAAkB;AAAA,IACzD,EAAE,QAAQ,cAAc;AAAA,EACzB,CAAC;AAED,GAAC,SAAS,YAAY,KAAK,OAAO,MAAM,yBAAyB,MAAM;AACtE;AAAA,MACC,CAAC,YAAY,WAAW,kBAAkB;AAAA,MAC1C,CAAC,KAAK,WAAW,UAAU;AAAA;AAAA,MAG3B,CAAC,KAAK,mBAAmB,iBAAiB;AAAA,IAC3C,EAAE,QAAQ,cAAc;AAAA,EACzB,CAAC;AACF,CAAC;",
  "names": []
}
