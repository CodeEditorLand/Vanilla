{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/workspaces/test/common/workspaceTrust.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { mock } from '../../../../../base/test/common/mock.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { TestConfigurationService } from '../../../../../platform/configuration/test/common/testConfigurationService.js';\nimport { FileService } from '../../../../../platform/files/common/fileService.js';\nimport { TestInstantiationService } from '../../../../../platform/instantiation/test/common/instantiationServiceMock.js';\nimport { NullLogService } from '../../../../../platform/log/common/log.js';\nimport { IRemoteAuthorityResolverService } from '../../../../../platform/remote/common/remoteAuthorityResolver.js';\nimport { IStorageService, StorageScope, StorageTarget } from '../../../../../platform/storage/common/storage.js';\nimport { IWorkspaceContextService } from '../../../../../platform/workspace/common/workspace.js';\nimport { IWorkspaceTrustEnablementService, IWorkspaceTrustInfo } from '../../../../../platform/workspace/common/workspaceTrust.js';\nimport { Workspace } from '../../../../../platform/workspace/test/common/testWorkspace.js';\nimport { Memento } from '../../../../common/memento.js';\nimport { IWorkbenchEnvironmentService } from '../../../environment/common/environmentService.js';\nimport { IUriIdentityService } from '../../../../../platform/uriIdentity/common/uriIdentity.js';\nimport { UriIdentityService } from '../../../../../platform/uriIdentity/common/uriIdentityService.js';\nimport { WorkspaceTrustEnablementService, WorkspaceTrustManagementService, WORKSPACE_TRUST_STORAGE_KEY } from '../../common/workspaceTrust.js';\nimport { TestContextService, TestStorageService, TestWorkspaceTrustEnablementService } from '../../../../test/common/workbenchTestServices.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\n\nsuite('Workspace Trust', () => {\n\tconst store = ensureNoDisposablesAreLeakedInTestSuite();\n\n\tlet instantiationService: TestInstantiationService;\n\tlet configurationService: TestConfigurationService;\n\tlet environmentService: IWorkbenchEnvironmentService;\n\n\tsetup(async () => {\n\t\tinstantiationService = store.add(new TestInstantiationService());\n\n\t\tconfigurationService = new TestConfigurationService();\n\t\tinstantiationService.stub(IConfigurationService, configurationService);\n\n\t\tenvironmentService = {} as IWorkbenchEnvironmentService;\n\t\tinstantiationService.stub(IWorkbenchEnvironmentService, environmentService);\n\n\t\tconst fileService = store.add(new FileService(new NullLogService()));\n\t\tconst uriIdentityService = store.add(new UriIdentityService(fileService));\n\n\t\tinstantiationService.stub(IUriIdentityService, uriIdentityService);\n\t\tinstantiationService.stub(IRemoteAuthorityResolverService, new class extends mock<IRemoteAuthorityResolverService>() { });\n\t});\n\n\tsuite('Enablement', () => {\n\t\ttest('workspace trust enabled', async () => {\n\t\t\tawait configurationService.setUserConfiguration('security', getUserSettings(true, true));\n\t\t\tconst testObject = store.add(instantiationService.createInstance(WorkspaceTrustEnablementService));\n\n\t\t\tassert.strictEqual(testObject.isWorkspaceTrustEnabled(), true);\n\t\t});\n\n\t\ttest('workspace trust disabled (user setting)', async () => {\n\t\t\tawait configurationService.setUserConfiguration('security', getUserSettings(false, true));\n\t\t\tconst testObject = store.add(instantiationService.createInstance(WorkspaceTrustEnablementService));\n\n\t\t\tassert.strictEqual(testObject.isWorkspaceTrustEnabled(), false);\n\t\t});\n\n\t\ttest('workspace trust disabled (--disable-workspace-trust)', () => {\n\t\t\tinstantiationService.stub(IWorkbenchEnvironmentService, { ...environmentService, disableWorkspaceTrust: true });\n\t\t\tconst testObject = store.add(instantiationService.createInstance(WorkspaceTrustEnablementService));\n\n\t\t\tassert.strictEqual(testObject.isWorkspaceTrustEnabled(), false);\n\t\t});\n\t});\n\n\tsuite('Management', () => {\n\t\tlet storageService: TestStorageService;\n\t\tlet workspaceService: TestContextService;\n\n\t\tteardown(() => {\n\t\t\tMemento.clear(StorageScope.WORKSPACE);\n\t\t});\n\n\t\tsetup(() => {\n\t\t\tstorageService = store.add(new TestStorageService());\n\t\t\tinstantiationService.stub(IStorageService, storageService);\n\n\t\t\tworkspaceService = new TestContextService();\n\t\t\tinstantiationService.stub(IWorkspaceContextService, workspaceService);\n\n\t\t\tinstantiationService.stub(IWorkspaceTrustEnablementService, new TestWorkspaceTrustEnablementService());\n\t\t});\n\n\t\ttest('empty workspace - trusted', async () => {\n\t\t\tawait configurationService.setUserConfiguration('security', getUserSettings(true, true));\n\t\t\tworkspaceService.setWorkspace(new Workspace('empty-workspace'));\n\t\t\tconst testObject = await initializeTestObject();\n\n\t\t\tassert.strictEqual(true, testObject.isWorkspaceTrusted());\n\t\t});\n\n\t\ttest('empty workspace - untrusted', async () => {\n\t\t\tawait configurationService.setUserConfiguration('security', getUserSettings(true, false));\n\t\t\tworkspaceService.setWorkspace(new Workspace('empty-workspace'));\n\t\t\tconst testObject = await initializeTestObject();\n\n\t\t\tassert.strictEqual(false, testObject.isWorkspaceTrusted());\n\t\t});\n\n\t\ttest('empty workspace - trusted, open trusted file', async () => {\n\t\t\tawait configurationService.setUserConfiguration('security', getUserSettings(true, true));\n\t\t\tconst trustInfo: IWorkspaceTrustInfo = { uriTrustInfo: [{ uri: URI.parse('file:///Folder'), trusted: true }] };\n\t\t\tstorageService.store(WORKSPACE_TRUST_STORAGE_KEY, JSON.stringify(trustInfo), StorageScope.APPLICATION, StorageTarget.MACHINE);\n\n\t\t\t(environmentService as any).filesToOpenOrCreate = [{ fileUri: URI.parse('file:///Folder/file.txt') }];\n\t\t\tinstantiationService.stub(IWorkbenchEnvironmentService, { ...environmentService });\n\n\t\t\tworkspaceService.setWorkspace(new Workspace('empty-workspace'));\n\t\t\tconst testObject = await initializeTestObject();\n\n\t\t\tassert.strictEqual(true, testObject.isWorkspaceTrusted());\n\t\t});\n\n\t\ttest('empty workspace - trusted, open untrusted file', async () => {\n\t\t\tawait configurationService.setUserConfiguration('security', getUserSettings(true, true));\n\n\t\t\t(environmentService as any).filesToOpenOrCreate = [{ fileUri: URI.parse('file:///Folder/foo.txt') }];\n\t\t\tinstantiationService.stub(IWorkbenchEnvironmentService, { ...environmentService });\n\n\t\t\tworkspaceService.setWorkspace(new Workspace('empty-workspace'));\n\t\t\tconst testObject = await initializeTestObject();\n\n\t\t\tassert.strictEqual(false, testObject.isWorkspaceTrusted());\n\t\t});\n\n\t\tasync function initializeTestObject(): Promise<WorkspaceTrustManagementService> {\n\t\t\tconst workspaceTrustManagementService = store.add(instantiationService.createInstance(WorkspaceTrustManagementService));\n\t\t\tawait workspaceTrustManagementService.workspaceTrustInitialized;\n\n\t\t\treturn workspaceTrustManagementService;\n\t\t}\n\t});\n\n\tfunction getUserSettings(enabled: boolean, emptyWindow: boolean) {\n\t\treturn { workspace: { trust: { emptyWindow, enabled } } };\n\t}\n});\n"],
  "mappings": "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",
  "names": []
}
