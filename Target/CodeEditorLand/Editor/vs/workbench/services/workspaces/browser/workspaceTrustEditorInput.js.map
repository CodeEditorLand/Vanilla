{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/workspaces/browser/workspaceTrustEditorInput.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport type { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { registerIcon } from \"../../../../platform/theme/common/iconRegistry.js\";\nimport {\n\tEditorInputCapabilities,\n\ttype IUntypedEditorInput,\n} from \"../../../common/editor.js\";\nimport { EditorInput } from \"../../../common/editor/editorInput.js\";\n\nconst WorkspaceTrustEditorIcon = registerIcon(\n\t\"workspace-trust-editor-label-icon\",\n\tCodicon.shield,\n\tlocalize(\n\t\t\"workspaceTrustEditorLabelIcon\",\n\t\t\"Icon of the workspace trust editor label.\",\n\t),\n);\n\nexport class WorkspaceTrustEditorInput extends EditorInput {\n\tstatic readonly ID: string = \"workbench.input.workspaceTrust\";\n\n\toverride get capabilities(): EditorInputCapabilities {\n\t\treturn (\n\t\t\tEditorInputCapabilities.Readonly | EditorInputCapabilities.Singleton\n\t\t);\n\t}\n\n\toverride get typeId(): string {\n\t\treturn WorkspaceTrustEditorInput.ID;\n\t}\n\n\treadonly resource: URI = URI.from({\n\t\tscheme: Schemas.vscodeWorkspaceTrust,\n\t\tpath: `workspaceTrustEditor`,\n\t});\n\n\toverride matches(otherInput: EditorInput | IUntypedEditorInput): boolean {\n\t\treturn (\n\t\t\tsuper.matches(otherInput) ||\n\t\t\totherInput instanceof WorkspaceTrustEditorInput\n\t\t);\n\t}\n\n\toverride getName(): string {\n\t\treturn localize(\"workspaceTrustEditorInputName\", \"Workspace Trust\");\n\t}\n\n\toverride getIcon(): ThemeIcon {\n\t\treturn WorkspaceTrustEditorIcon;\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,eAAe;AACxB,SAAS,eAAe;AAExB,SAAS,WAAW;AACpB,SAAS,gBAAgB;AACzB,SAAS,oBAAoB;AAC7B;AAAA,EACC;AAAA,OAEM;AACP,SAAS,mBAAmB;AAE5B,MAAM,2BAA2B;AAAA,EAChC;AAAA,EACA,QAAQ;AAAA,EACR;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AAEO,MAAM,kCAAkC,YAAY;AAAA,EA1B3D,OA0B2D;AAAA;AAAA;AAAA,EAC1D,OAAgB,KAAa;AAAA,EAE7B,IAAa,eAAwC;AACpD,WACC,wBAAwB,WAAW,wBAAwB;AAAA,EAE7D;AAAA,EAEA,IAAa,SAAiB;AAC7B,WAAO,0BAA0B;AAAA,EAClC;AAAA,EAES,WAAgB,IAAI,KAAK;AAAA,IACjC,QAAQ,QAAQ;AAAA,IAChB,MAAM;AAAA,EACP,CAAC;AAAA,EAEQ,QAAQ,YAAwD;AACxE,WACC,MAAM,QAAQ,UAAU,KACxB,sBAAsB;AAAA,EAExB;AAAA,EAES,UAAkB;AAC1B,WAAO,SAAS,iCAAiC,iBAAiB;AAAA,EACnE;AAAA,EAES,UAAqB;AAC7B,WAAO;AAAA,EACR;AACD;",
  "names": []
}
