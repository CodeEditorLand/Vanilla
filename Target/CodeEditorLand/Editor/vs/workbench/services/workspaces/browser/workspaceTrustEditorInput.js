import{Codicon as i}from"../../../../../vs/base/common/codicons.js";import{Schemas as s}from"../../../../../vs/base/common/network.js";import"../../../../../vs/base/common/themables.js";import{URI as n}from"../../../../../vs/base/common/uri.js";import{localize as o}from"../../../../../vs/nls.js";import{registerIcon as a}from"../../../../../vs/platform/theme/common/iconRegistry.js";import{EditorInputCapabilities as t}from"../../../../../vs/workbench/common/editor.js";import{EditorInput as p}from"../../../../../vs/workbench/common/editor/editorInput.js";const c=a("workspace-trust-editor-label-icon",i.shield,o("workspaceTrustEditorLabelIcon","Icon of the workspace trust editor label."));class r extends p{static ID="workbench.input.workspaceTrust";get capabilities(){return t.Readonly|t.Singleton}get typeId(){return r.ID}resource=n.from({scheme:s.vscodeWorkspaceTrust,path:"workspaceTrustEditor"});matches(e){return super.matches(e)||e instanceof r}getName(){return o("workspaceTrustEditorInputName","Workspace Trust")}getIcon(){return c}}export{r as WorkspaceTrustEditorInput};
