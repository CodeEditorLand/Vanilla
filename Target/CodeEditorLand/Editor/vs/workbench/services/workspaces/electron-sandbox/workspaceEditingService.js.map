{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/workspaces/electron-sandbox/workspaceEditingService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from '../../../../nls.js';\nimport { IWorkspaceEditingService } from '../common/workspaceEditing.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { hasWorkspaceFileExtension, isUntitledWorkspace, isWorkspaceIdentifier, IWorkspaceContextService } from '../../../../platform/workspace/common/workspace.js';\nimport { IJSONEditingService } from '../../configuration/common/jsonEditing.js';\nimport { IWorkspacesService } from '../../../../platform/workspaces/common/workspaces.js';\nimport { WorkspaceService } from '../../configuration/browser/configurationService.js';\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\nimport { IExtensionService } from '../../extensions/common/extensions.js';\nimport { IWorkingCopyBackupService } from '../../workingCopy/common/workingCopyBackup.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { basename } from '../../../../base/common/resources.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nimport { IFileService } from '../../../../platform/files/common/files.js';\nimport { INativeWorkbenchEnvironmentService } from '../../environment/electron-sandbox/environmentService.js';\nimport { ILifecycleService, ShutdownReason } from '../../lifecycle/common/lifecycle.js';\nimport { IFileDialogService, IDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { ILabelService, Verbosity } from '../../../../platform/label/common/label.js';\nimport { ITextFileService } from '../../textfile/common/textfiles.js';\nimport { IHostService } from '../../host/browser/host.js';\nimport { AbstractWorkspaceEditingService } from '../browser/abstractWorkspaceEditingService.js';\nimport { INativeHostService } from '../../../../platform/native/common/native.js';\nimport { isMacintosh } from '../../../../base/common/platform.js';\nimport { WorkingCopyBackupService } from '../../workingCopy/common/workingCopyBackupService.js';\nimport { IUriIdentityService } from '../../../../platform/uriIdentity/common/uriIdentity.js';\nimport { IWorkspaceTrustManagementService } from '../../../../platform/workspace/common/workspaceTrust.js';\nimport { IWorkbenchConfigurationService } from '../../configuration/common/configuration.js';\nimport { IUserDataProfilesService } from '../../../../platform/userDataProfile/common/userDataProfile.js';\nimport { IUserDataProfileService } from '../../userDataProfile/common/userDataProfile.js';\nimport { ConfigurationTarget } from '../../../../platform/configuration/common/configuration.js';\n\nexport class NativeWorkspaceEditingService extends AbstractWorkspaceEditingService {\n\n\tconstructor(\n\t\t@IJSONEditingService jsonEditingService: IJSONEditingService,\n\t\t@IWorkspaceContextService contextService: WorkspaceService,\n\t\t@INativeHostService private nativeHostService: INativeHostService,\n\t\t@IWorkbenchConfigurationService configurationService: IWorkbenchConfigurationService,\n\t\t@IStorageService private storageService: IStorageService,\n\t\t@IExtensionService private extensionService: IExtensionService,\n\t\t@IWorkingCopyBackupService private workingCopyBackupService: IWorkingCopyBackupService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@IFileService fileService: IFileService,\n\t\t@ITextFileService textFileService: ITextFileService,\n\t\t@IWorkspacesService workspacesService: IWorkspacesService,\n\t\t@INativeWorkbenchEnvironmentService environmentService: INativeWorkbenchEnvironmentService,\n\t\t@IFileDialogService fileDialogService: IFileDialogService,\n\t\t@IDialogService dialogService: IDialogService,\n\t\t@ILifecycleService private readonly lifecycleService: ILifecycleService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@IHostService hostService: IHostService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t\t@IWorkspaceTrustManagementService workspaceTrustManagementService: IWorkspaceTrustManagementService,\n\t\t@IUserDataProfilesService userDataProfilesService: IUserDataProfilesService,\n\t\t@IUserDataProfileService userDataProfileService: IUserDataProfileService,\n\t) {\n\t\tsuper(jsonEditingService, contextService, configurationService, notificationService, commandService, fileService, textFileService, workspacesService, environmentService, fileDialogService, dialogService, hostService, uriIdentityService, workspaceTrustManagementService, userDataProfilesService, userDataProfileService);\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.lifecycleService.onBeforeShutdown(e => {\n\t\t\tconst saveOperation = this.saveUntitledBeforeShutdown(e.reason);\n\t\t\te.veto(saveOperation, 'veto.untitledWorkspace');\n\t\t}));\n\t}\n\n\tprivate async saveUntitledBeforeShutdown(reason: ShutdownReason): Promise<boolean> {\n\t\tif (reason !== ShutdownReason.LOAD && reason !== ShutdownReason.CLOSE) {\n\t\t\treturn false; // only interested when window is closing or loading\n\t\t}\n\n\t\tconst workspaceIdentifier = this.getCurrentWorkspaceIdentifier();\n\t\tif (!workspaceIdentifier || !isUntitledWorkspace(workspaceIdentifier.configPath, this.environmentService)) {\n\t\t\treturn false; // only care about untitled workspaces to ask for saving\n\t\t}\n\n\t\tconst windowCount = await this.nativeHostService.getWindowCount();\n\t\tif (reason === ShutdownReason.CLOSE && !isMacintosh && windowCount === 1) {\n\t\t\treturn false; // Windows/Linux: quits when last window is closed, so do not ask then\n\t\t}\n\n\t\tconst confirmSaveUntitledWorkspace = this.configurationService.getValue<boolean>('window.confirmSaveUntitledWorkspace') !== false;\n\t\tif (!confirmSaveUntitledWorkspace) {\n\t\t\tawait this.workspacesService.deleteUntitledWorkspace(workspaceIdentifier);\n\n\t\t\treturn false; // no confirmation configured\n\t\t}\n\n\t\tlet canceled = false;\n\t\tconst { result, checkboxChecked } = await this.dialogService.prompt<boolean>({\n\t\t\ttype: Severity.Warning,\n\t\t\tmessage: localize('saveWorkspaceMessage', \"Do you want to save your workspace configuration as a file?\"),\n\t\t\tdetail: localize('saveWorkspaceDetail', \"Save your workspace if you plan to open it again.\"),\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\tlabel: localize({ key: 'save', comment: ['&& denotes a mnemonic'] }, \"&&Save\"),\n\t\t\t\t\trun: async () => {\n\t\t\t\t\t\tconst newWorkspacePath = await this.pickNewWorkspacePath();\n\t\t\t\t\t\tif (!newWorkspacePath || !hasWorkspaceFileExtension(newWorkspacePath)) {\n\t\t\t\t\t\t\treturn true; // keep veto if no target was provided\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait this.saveWorkspaceAs(workspaceIdentifier, newWorkspacePath);\n\n\t\t\t\t\t\t\t// Make sure to add the new workspace to the history to find it again\n\t\t\t\t\t\t\tconst newWorkspaceIdentifier = await this.workspacesService.getWorkspaceIdentifier(newWorkspacePath);\n\t\t\t\t\t\t\tawait this.workspacesService.addRecentlyOpened([{\n\t\t\t\t\t\t\t\tlabel: this.labelService.getWorkspaceLabel(newWorkspaceIdentifier, { verbose: Verbosity.LONG }),\n\t\t\t\t\t\t\t\tworkspace: newWorkspaceIdentifier,\n\t\t\t\t\t\t\t\tremoteAuthority: this.environmentService.remoteAuthority // remember whether this was a remote window\n\t\t\t\t\t\t\t}]);\n\n\t\t\t\t\t\t\t// Delete the untitled one\n\t\t\t\t\t\t\tawait this.workspacesService.deleteUntitledWorkspace(workspaceIdentifier);\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t// ignore\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: localize({ key: 'doNotSave', comment: ['&& denotes a mnemonic'] }, \"Do&&n't Save\"),\n\t\t\t\t\trun: async () => {\n\t\t\t\t\t\tawait this.workspacesService.deleteUntitledWorkspace(workspaceIdentifier);\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t],\n\t\t\tcancelButton: {\n\t\t\t\trun: () => {\n\t\t\t\t\tcanceled = true;\n\n\t\t\t\t\treturn true; // veto\n\t\t\t\t}\n\t\t\t},\n\t\t\tcheckbox: {\n\t\t\t\tlabel: localize('doNotAskAgain', \"Always discard untitled workspaces without asking\")\n\t\t\t}\n\t\t});\n\n\t\tif (!canceled && checkboxChecked) {\n\t\t\tawait this.configurationService.updateValue('window.confirmSaveUntitledWorkspace', false, ConfigurationTarget.USER);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\toverride async isValidTargetWorkspacePath(workspaceUri: URI): Promise<boolean> {\n\t\tconst windows = await this.nativeHostService.getWindows({ includeAuxiliaryWindows: false });\n\n\t\t// Prevent overwriting a workspace that is currently opened in another window\n\t\tif (windows.some(window => isWorkspaceIdentifier(window.workspace) && this.uriIdentityService.extUri.isEqual(window.workspace.configPath, workspaceUri))) {\n\t\t\tawait this.dialogService.info(\n\t\t\t\tlocalize('workspaceOpenedMessage', \"Unable to save workspace '{0}'\", basename(workspaceUri)),\n\t\t\t\tlocalize('workspaceOpenedDetail', \"The workspace is already opened in another window. Please close that window first and then try again.\")\n\t\t\t);\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true; // OK\n\t}\n\n\tasync enterWorkspace(workspaceUri: URI): Promise<void> {\n\t\tconst stopped = await this.extensionService.stopExtensionHosts(localize('restartExtensionHost.reason', \"Opening a multi-root workspace.\"));\n\t\tif (!stopped) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst result = await this.doEnterWorkspace(workspaceUri);\n\t\tif (result) {\n\n\t\t\t// Migrate storage to new workspace\n\t\t\tawait this.storageService.switch(result.workspace, true /* preserve data */);\n\n\t\t\t// Reinitialize backup service\n\t\t\tif (this.workingCopyBackupService instanceof WorkingCopyBackupService) {\n\t\t\t\tconst newBackupWorkspaceHome = result.backupPath ? URI.file(result.backupPath).with({ scheme: this.environmentService.userRoamingDataHome.scheme }) : undefined;\n\t\t\t\tthis.workingCopyBackupService.reinitialize(newBackupWorkspaceHome);\n\t\t\t}\n\t\t}\n\n\t\t// TODO@aeschli: workaround until restarting works\n\t\tif (this.environmentService.remoteAuthority) {\n\t\t\tthis.hostService.reload();\n\t\t}\n\n\t\t// Restart the extension host: entering a workspace means a new location for\n\t\t// storage and potentially a change in the workspace.rootPath property.\n\t\telse {\n\t\t\tthis.extensionService.startExtensionHosts();\n\t\t}\n\t}\n}\n\nregisterSingleton(IWorkspaceEditingService, NativeWorkspaceEditingService, InstantiationType.Delayed);\n"],
  "mappings": "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",
  "names": []
}
