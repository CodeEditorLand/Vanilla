{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/workspaces/electron-sandbox/workspaceEditingService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isMacintosh } from \"../../../../base/common/platform.js\";\nimport { basename } from \"../../../../base/common/resources.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { ICommandService } from \"../../../../platform/commands/common/commands.js\";\nimport { ConfigurationTarget } from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\tIDialogService,\n\tIFileDialogService,\n} from \"../../../../platform/dialogs/common/dialogs.js\";\nimport { IFileService } from \"../../../../platform/files/common/files.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport {\n\tILabelService,\n\tVerbosity,\n} from \"../../../../platform/label/common/label.js\";\nimport { INativeHostService } from \"../../../../platform/native/common/native.js\";\nimport {\n\tINotificationService,\n\tSeverity,\n} from \"../../../../platform/notification/common/notification.js\";\nimport { IStorageService } from \"../../../../platform/storage/common/storage.js\";\nimport { IUriIdentityService } from \"../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport { IUserDataProfilesService } from \"../../../../platform/userDataProfile/common/userDataProfile.js\";\nimport {\n\tIWorkspaceContextService,\n\thasWorkspaceFileExtension,\n\tisUntitledWorkspace,\n\tisWorkspaceIdentifier,\n} from \"../../../../platform/workspace/common/workspace.js\";\nimport { IWorkspaceTrustManagementService } from \"../../../../platform/workspace/common/workspaceTrust.js\";\nimport { IWorkspacesService } from \"../../../../platform/workspaces/common/workspaces.js\";\nimport type { WorkspaceService } from \"../../configuration/browser/configurationService.js\";\nimport { IWorkbenchConfigurationService } from \"../../configuration/common/configuration.js\";\nimport { IJSONEditingService } from \"../../configuration/common/jsonEditing.js\";\nimport { INativeWorkbenchEnvironmentService } from \"../../environment/electron-sandbox/environmentService.js\";\nimport { IExtensionService } from \"../../extensions/common/extensions.js\";\nimport { IHostService } from \"../../host/browser/host.js\";\nimport {\n\tILifecycleService,\n\tShutdownReason,\n} from \"../../lifecycle/common/lifecycle.js\";\nimport { ITextFileService } from \"../../textfile/common/textfiles.js\";\nimport { IUserDataProfileService } from \"../../userDataProfile/common/userDataProfile.js\";\nimport { IWorkingCopyBackupService } from \"../../workingCopy/common/workingCopyBackup.js\";\nimport { WorkingCopyBackupService } from \"../../workingCopy/common/workingCopyBackupService.js\";\nimport { AbstractWorkspaceEditingService } from \"../browser/abstractWorkspaceEditingService.js\";\nimport { IWorkspaceEditingService } from \"../common/workspaceEditing.js\";\n\nexport class NativeWorkspaceEditingService extends AbstractWorkspaceEditingService {\n\tconstructor(\n\t\t@IJSONEditingService jsonEditingService: IJSONEditingService,\n\t\t@IWorkspaceContextService contextService: WorkspaceService,\n\t\t@INativeHostService private nativeHostService: INativeHostService,\n\t\t@IWorkbenchConfigurationService\n\t\tconfigurationService: IWorkbenchConfigurationService,\n\t\t@IStorageService private storageService: IStorageService,\n\t\t@IExtensionService private extensionService: IExtensionService,\n\t\t@IWorkingCopyBackupService\n\t\tprivate workingCopyBackupService: IWorkingCopyBackupService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@IFileService fileService: IFileService,\n\t\t@ITextFileService textFileService: ITextFileService,\n\t\t@IWorkspacesService workspacesService: IWorkspacesService,\n\t\t@INativeWorkbenchEnvironmentService\n\t\tenvironmentService: INativeWorkbenchEnvironmentService,\n\t\t@IFileDialogService fileDialogService: IFileDialogService,\n\t\t@IDialogService dialogService: IDialogService,\n\t\t@ILifecycleService private readonly lifecycleService: ILifecycleService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@IHostService hostService: IHostService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t\t@IWorkspaceTrustManagementService\n\t\tworkspaceTrustManagementService: IWorkspaceTrustManagementService,\n\t\t@IUserDataProfilesService\n\t\tuserDataProfilesService: IUserDataProfilesService,\n\t\t@IUserDataProfileService\n\t\tuserDataProfileService: IUserDataProfileService,\n\t) {\n\t\tsuper(\n\t\t\tjsonEditingService,\n\t\t\tcontextService,\n\t\t\tconfigurationService,\n\t\t\tnotificationService,\n\t\t\tcommandService,\n\t\t\tfileService,\n\t\t\ttextFileService,\n\t\t\tworkspacesService,\n\t\t\tenvironmentService,\n\t\t\tfileDialogService,\n\t\t\tdialogService,\n\t\t\thostService,\n\t\t\turiIdentityService,\n\t\t\tworkspaceTrustManagementService,\n\t\t\tuserDataProfilesService,\n\t\t\tuserDataProfileService,\n\t\t);\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(\n\t\t\tthis.lifecycleService.onBeforeShutdown((e) => {\n\t\t\t\tconst saveOperation = this.saveUntitledBeforeShutdown(e.reason);\n\t\t\t\te.veto(saveOperation, \"veto.untitledWorkspace\");\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate async saveUntitledBeforeShutdown(\n\t\treason: ShutdownReason,\n\t): Promise<boolean> {\n\t\tif (reason !== ShutdownReason.LOAD && reason !== ShutdownReason.CLOSE) {\n\t\t\treturn false; // only interested when window is closing or loading\n\t\t}\n\n\t\tconst workspaceIdentifier = this.getCurrentWorkspaceIdentifier();\n\t\tif (\n\t\t\t!workspaceIdentifier ||\n\t\t\t!isUntitledWorkspace(\n\t\t\t\tworkspaceIdentifier.configPath,\n\t\t\t\tthis.environmentService,\n\t\t\t)\n\t\t) {\n\t\t\treturn false; // only care about untitled workspaces to ask for saving\n\t\t}\n\n\t\tconst windowCount = await this.nativeHostService.getWindowCount();\n\t\tif (\n\t\t\treason === ShutdownReason.CLOSE &&\n\t\t\t!isMacintosh &&\n\t\t\twindowCount === 1\n\t\t) {\n\t\t\treturn false; // Windows/Linux: quits when last window is closed, so do not ask then\n\t\t}\n\n\t\tconst confirmSaveUntitledWorkspace =\n\t\t\tthis.configurationService.getValue<boolean>(\n\t\t\t\t\"window.confirmSaveUntitledWorkspace\",\n\t\t\t) !== false;\n\t\tif (!confirmSaveUntitledWorkspace) {\n\t\t\tawait this.workspacesService.deleteUntitledWorkspace(\n\t\t\t\tworkspaceIdentifier,\n\t\t\t);\n\n\t\t\treturn false; // no confirmation configured\n\t\t}\n\n\t\tlet canceled = false;\n\t\tconst { result, checkboxChecked } =\n\t\t\tawait this.dialogService.prompt<boolean>({\n\t\t\t\ttype: Severity.Warning,\n\t\t\t\tmessage: localize(\n\t\t\t\t\t\"saveWorkspaceMessage\",\n\t\t\t\t\t\"Do you want to save your workspace configuration as a file?\",\n\t\t\t\t),\n\t\t\t\tdetail: localize(\n\t\t\t\t\t\"saveWorkspaceDetail\",\n\t\t\t\t\t\"Save your workspace if you plan to open it again.\",\n\t\t\t\t),\n\t\t\t\tbuttons: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\t{ key: \"save\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\t\t\t\"&&Save\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\trun: async () => {\n\t\t\t\t\t\t\tconst newWorkspacePath =\n\t\t\t\t\t\t\t\tawait this.pickNewWorkspacePath();\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t!newWorkspacePath ||\n\t\t\t\t\t\t\t\t!hasWorkspaceFileExtension(newWorkspacePath)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn true; // keep veto if no target was provided\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tawait this.saveWorkspaceAs(\n\t\t\t\t\t\t\t\t\tworkspaceIdentifier,\n\t\t\t\t\t\t\t\t\tnewWorkspacePath,\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t// Make sure to add the new workspace to the history to find it again\n\t\t\t\t\t\t\t\tconst newWorkspaceIdentifier =\n\t\t\t\t\t\t\t\t\tawait this.workspacesService.getWorkspaceIdentifier(\n\t\t\t\t\t\t\t\t\t\tnewWorkspacePath,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tawait this.workspacesService.addRecentlyOpened([\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tlabel: this.labelService.getWorkspaceLabel(\n\t\t\t\t\t\t\t\t\t\t\tnewWorkspaceIdentifier,\n\t\t\t\t\t\t\t\t\t\t\t{ verbose: Verbosity.LONG },\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\tworkspace: newWorkspaceIdentifier,\n\t\t\t\t\t\t\t\t\t\tremoteAuthority:\n\t\t\t\t\t\t\t\t\t\t\tthis.environmentService\n\t\t\t\t\t\t\t\t\t\t\t\t.remoteAuthority, // remember whether this was a remote window\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t]);\n\n\t\t\t\t\t\t\t\t// Delete the untitled one\n\t\t\t\t\t\t\t\tawait this.workspacesService.deleteUntitledWorkspace(\n\t\t\t\t\t\t\t\t\tworkspaceIdentifier,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\t// ignore\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: \"doNotSave\",\n\t\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"Do&&n't Save\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\trun: async () => {\n\t\t\t\t\t\t\tawait this.workspacesService.deleteUntitledWorkspace(\n\t\t\t\t\t\t\t\tworkspaceIdentifier,\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tcancelButton: {\n\t\t\t\t\trun: () => {\n\t\t\t\t\t\tcanceled = true;\n\n\t\t\t\t\t\treturn true; // veto\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tcheckbox: {\n\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\"doNotAskAgain\",\n\t\t\t\t\t\t\"Always discard untitled workspaces without asking\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t});\n\n\t\tif (!canceled && checkboxChecked) {\n\t\t\tawait this.configurationService.updateValue(\n\t\t\t\t\"window.confirmSaveUntitledWorkspace\",\n\t\t\t\tfalse,\n\t\t\t\tConfigurationTarget.USER,\n\t\t\t);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\toverride async isValidTargetWorkspacePath(\n\t\tworkspaceUri: URI,\n\t): Promise<boolean> {\n\t\tconst windows = await this.nativeHostService.getWindows({\n\t\t\tincludeAuxiliaryWindows: false,\n\t\t});\n\n\t\t// Prevent overwriting a workspace that is currently opened in another window\n\t\tif (\n\t\t\twindows.some(\n\t\t\t\t(window) =>\n\t\t\t\t\tisWorkspaceIdentifier(window.workspace) &&\n\t\t\t\t\tthis.uriIdentityService.extUri.isEqual(\n\t\t\t\t\t\twindow.workspace.configPath,\n\t\t\t\t\t\tworkspaceUri,\n\t\t\t\t\t),\n\t\t\t)\n\t\t) {\n\t\t\tawait this.dialogService.info(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"workspaceOpenedMessage\",\n\t\t\t\t\t\"Unable to save workspace '{0}'\",\n\t\t\t\t\tbasename(workspaceUri),\n\t\t\t\t),\n\t\t\t\tlocalize(\n\t\t\t\t\t\"workspaceOpenedDetail\",\n\t\t\t\t\t\"The workspace is already opened in another window. Please close that window first and then try again.\",\n\t\t\t\t),\n\t\t\t);\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true; // OK\n\t}\n\n\tasync enterWorkspace(workspaceUri: URI): Promise<void> {\n\t\tconst stopped = await this.extensionService.stopExtensionHosts(\n\t\t\tlocalize(\n\t\t\t\t\"restartExtensionHost.reason\",\n\t\t\t\t\"Opening a multi-root workspace.\",\n\t\t\t),\n\t\t);\n\t\tif (!stopped) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst result = await this.doEnterWorkspace(workspaceUri);\n\t\tif (result) {\n\t\t\t// Migrate storage to new workspace\n\t\t\tawait this.storageService.switch(\n\t\t\t\tresult.workspace,\n\t\t\t\ttrue /* preserve data */,\n\t\t\t);\n\n\t\t\t// Reinitialize backup service\n\t\t\tif (\n\t\t\t\tthis.workingCopyBackupService instanceof\n\t\t\t\tWorkingCopyBackupService\n\t\t\t) {\n\t\t\t\tconst newBackupWorkspaceHome = result.backupPath\n\t\t\t\t\t? URI.file(result.backupPath).with({\n\t\t\t\t\t\t\tscheme: this.environmentService.userRoamingDataHome\n\t\t\t\t\t\t\t\t.scheme,\n\t\t\t\t\t\t})\n\t\t\t\t\t: undefined;\n\t\t\t\tthis.workingCopyBackupService.reinitialize(\n\t\t\t\t\tnewBackupWorkspaceHome,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// TODO@aeschli: workaround until restarting works\n\t\tif (this.environmentService.remoteAuthority) {\n\t\t\tthis.hostService.reload();\n\t\t}\n\n\t\t// Restart the extension host: entering a workspace means a new location for\n\t\t// storage and potentially a change in the workspace.rootPath property.\n\t\telse {\n\t\t\tthis.extensionService.startExtensionHosts();\n\t\t}\n\t}\n}\n\nregisterSingleton(\n\tIWorkspaceEditingService,\n\tNativeWorkspaceEditingService,\n\tInstantiationType.Delayed,\n);\n"],
  "mappings": "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",
  "names": []
}
