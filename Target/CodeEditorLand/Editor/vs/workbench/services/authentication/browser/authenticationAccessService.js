var u=Object.defineProperty;var v=Object.getOwnPropertyDescriptor;var A=(d,o,e,n)=>{for(var t=n>1?void 0:n?v(o,e):o,i=d.length-1,s;i>=0;i--)(s=d[i])&&(t=(n?s(o,e,t):s(t))||t);return n&&t&&u(o,e,t),t},l=(d,o)=>(e,n)=>o(e,n,d);import{Emitter as x}from"../../../../base/common/event.js";import{Disposable as p}from"../../../../base/common/lifecycle.js";import{InstantiationType as E,registerSingleton as m}from"../../../../platform/instantiation/common/extensions.js";import{createDecorator as S}from"../../../../platform/instantiation/common/instantiation.js";import{IProductService as f}from"../../../../platform/product/common/productService.js";import{IStorageService as w,StorageScope as g,StorageTarget as h}from"../../../../platform/storage/common/storage.js";const I=S("IAuthenticationAccessService");let c=class extends p{constructor(e,n){super();this._storageService=e;this._productService=n}_serviceBrand;_onDidChangeExtensionSessionAccess=this._register(new x);onDidChangeExtensionSessionAccess=this._onDidChangeExtensionSessionAccess.event;isAccessAllowed(e,n,t){const i=this._productService.trustedExtensionAuthAccess;if(Array.isArray(i)){if(i.includes(t))return!0}else if(i?.[e]?.includes(t))return!0;const r=this.readAllowedExtensions(e,n).find(a=>a.id===t);if(r)return r.allowed!==void 0?r.allowed:!0}readAllowedExtensions(e,n){let t=[];try{const i=this._storageService.get(`${e}-${n}`,g.APPLICATION);i&&(t=JSON.parse(i))}catch{}return t}updateAllowedExtensions(e,n,t){const i=this.readAllowedExtensions(e,n);for(const s of t){const r=i.findIndex(a=>a.id===s.id);r===-1?i.push(s):i[r].allowed=s.allowed}this._storageService.store(`${e}-${n}`,JSON.stringify(i),g.APPLICATION,h.USER),this._onDidChangeExtensionSessionAccess.fire({providerId:e,accountName:n})}removeAllowedExtensions(e,n){this._storageService.remove(`${e}-${n}`,g.APPLICATION),this._onDidChangeExtensionSessionAccess.fire({providerId:e,accountName:n})}};c=A([l(0,w),l(1,f)],c),m(I,c,E.Delayed);export{c as AuthenticationAccessService,I as IAuthenticationAccessService};
