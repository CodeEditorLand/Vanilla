{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/authentication/browser/authenticationService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from \"../../../../base/common/event.js\";\nimport {\n\tDisposable,\n\tDisposableMap,\n\tDisposableStore,\n\ttype IDisposable,\n\tisDisposable,\n\ttoDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { isFalsyOrWhitespace } from \"../../../../base/common/strings.js\";\nimport { isString } from \"../../../../base/common/types.js\";\nimport { localize } from \"../../../../nls.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport type { IProductService } from \"../../../../platform/product/common/productService.js\";\nimport type { ISecretStorageService } from \"../../../../platform/secrets/common/secrets.js\";\nimport { IBrowserWorkbenchEnvironmentService } from \"../../environment/browser/environmentService.js\";\nimport {\n\tActivationKind,\n\tIExtensionService,\n} from \"../../extensions/common/extensions.js\";\nimport {\n\ttype AuthenticationProviderInformation,\n\ttype AuthenticationSession,\n\ttype AuthenticationSessionAccount,\n\ttype AuthenticationSessionsChangeEvent,\n\ttype IAuthenticationCreateSessionOptions,\n\ttype IAuthenticationProvider,\n\tIAuthenticationService,\n} from \"../common/authentication.js\";\nimport { IAuthenticationAccessService } from \"./authenticationAccessService.js\";\n\nexport function getAuthenticationProviderActivationEvent(id: string): string {\n\treturn `onAuthenticationRequest:${id}`;\n}\n\n// TODO: pull this out into its own service\nexport type AuthenticationSessionInfo = {\n\treadonly id: string;\n\treadonly accessToken: string;\n\treadonly providerId: string;\n\treadonly canSignOut?: boolean;\n};\nexport async function getCurrentAuthenticationSessionInfo(\n\tsecretStorageService: ISecretStorageService,\n\tproductService: IProductService,\n): Promise<AuthenticationSessionInfo | undefined> {\n\tconst authenticationSessionValue = await secretStorageService.get(\n\t\t`${productService.urlProtocol}.loginAccount`,\n\t);\n\tif (authenticationSessionValue) {\n\t\ttry {\n\t\t\tconst authenticationSessionInfo: AuthenticationSessionInfo =\n\t\t\t\tJSON.parse(authenticationSessionValue);\n\t\t\tif (\n\t\t\t\tauthenticationSessionInfo &&\n\t\t\t\tisString(authenticationSessionInfo.id) &&\n\t\t\t\tisString(authenticationSessionInfo.accessToken) &&\n\t\t\t\tisString(authenticationSessionInfo.providerId)\n\t\t\t) {\n\t\t\t\treturn authenticationSessionInfo;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// This is a best effort operation.\n\t\t\tconsole.error(`Failed parsing current auth session value: ${e}`);\n\t\t}\n\t}\n\treturn undefined;\n}\n\nexport class AuthenticationService\n\textends Disposable\n\timplements IAuthenticationService\n{\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _onDidRegisterAuthenticationProvider: Emitter<AuthenticationProviderInformation> =\n\t\tthis._register(new Emitter<AuthenticationProviderInformation>());\n\treadonly onDidRegisterAuthenticationProvider: Event<AuthenticationProviderInformation> =\n\t\tthis._onDidRegisterAuthenticationProvider.event;\n\n\tprivate _onDidUnregisterAuthenticationProvider: Emitter<AuthenticationProviderInformation> =\n\t\tthis._register(new Emitter<AuthenticationProviderInformation>());\n\treadonly onDidUnregisterAuthenticationProvider: Event<AuthenticationProviderInformation> =\n\t\tthis._onDidUnregisterAuthenticationProvider.event;\n\n\tprivate _onDidChangeSessions: Emitter<{\n\t\tproviderId: string;\n\t\tlabel: string;\n\t\tevent: AuthenticationSessionsChangeEvent;\n\t}> = this._register(\n\t\tnew Emitter<{\n\t\t\tproviderId: string;\n\t\t\tlabel: string;\n\t\t\tevent: AuthenticationSessionsChangeEvent;\n\t\t}>(),\n\t);\n\treadonly onDidChangeSessions: Event<{\n\t\tproviderId: string;\n\t\tlabel: string;\n\t\tevent: AuthenticationSessionsChangeEvent;\n\t}> = this._onDidChangeSessions.event;\n\n\tprivate _onDidChangeDeclaredProviders: Emitter<void> = this._register(\n\t\tnew Emitter<void>(),\n\t);\n\treadonly onDidChangeDeclaredProviders: Event<void> =\n\t\tthis._onDidChangeDeclaredProviders.event;\n\n\tprivate _authenticationProviders: Map<string, IAuthenticationProvider> =\n\t\tnew Map<string, IAuthenticationProvider>();\n\tprivate _authenticationProviderDisposables: DisposableMap<\n\t\tstring,\n\t\tIDisposable\n\t> = this._register(new DisposableMap<string, IDisposable>());\n\n\tconstructor(\n\t\t@IExtensionService private readonly _extensionService: IExtensionService,\n\t\t@IAuthenticationAccessService authenticationAccessService: IAuthenticationAccessService,\n\t\t@IBrowserWorkbenchEnvironmentService private readonly _environmentService: IBrowserWorkbenchEnvironmentService\n\t) {\n\t\tsuper();\n\n\t\tthis._register(authenticationAccessService.onDidChangeExtensionSessionAccess(e => {\n\t\t\t// The access has changed, not the actual session itself but extensions depend on this event firing\n\t\t\t// when they have gained access to an account so this fires that event.\n\t\t\tthis._onDidChangeSessions.fire({\n\t\t\t\tproviderId: e.providerId,\n\t\t\t\tlabel: e.accountName,\n\t\t\t\tevent: {\n\t\t\t\t\tadded: [],\n\t\t\t\t\tchanged: [],\n\t\t\t\t\tremoved: []\n\t\t\t\t}\n\t\t\t});\n\t\t}));\n\n\t\tthis._registerEnvContributedAuthenticationProviders();\n\t}\n\n\tprivate _declaredProviders: AuthenticationProviderInformation[] = [];\n\tget declaredProviders(): AuthenticationProviderInformation[] {\n\t\treturn this._declaredProviders;\n\t}\n\n\tprivate _registerEnvContributedAuthenticationProviders(): void {\n\t\tif (\n\t\t\t!this._environmentService.options?.authenticationProviders?.length\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tfor (const provider of this._environmentService.options\n\t\t\t.authenticationProviders) {\n\t\t\tthis.registerAuthenticationProvider(provider.id, provider);\n\t\t}\n\t}\n\n\tregisterDeclaredAuthenticationProvider(\n\t\tprovider: AuthenticationProviderInformation,\n\t): void {\n\t\tif (isFalsyOrWhitespace(provider.id)) {\n\t\t\tthrow new Error(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"authentication.missingId\",\n\t\t\t\t\t\"An authentication contribution must specify an id.\",\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t\tif (isFalsyOrWhitespace(provider.label)) {\n\t\t\tthrow new Error(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"authentication.missingLabel\",\n\t\t\t\t\t\"An authentication contribution must specify a label.\",\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t\tif (this.declaredProviders.some((p) => p.id === provider.id)) {\n\t\t\tthrow new Error(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"authentication.idConflict\",\n\t\t\t\t\t\"This authentication id '{0}' has already been registered\",\n\t\t\t\t\tprovider.id,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t\tthis._declaredProviders.push(provider);\n\t\tthis._onDidChangeDeclaredProviders.fire();\n\t}\n\n\tunregisterDeclaredAuthenticationProvider(id: string): void {\n\t\tconst index = this.declaredProviders.findIndex(\n\t\t\t(provider) => provider.id === id,\n\t\t);\n\t\tif (index > -1) {\n\t\t\tthis.declaredProviders.splice(index, 1);\n\t\t}\n\t\tthis._onDidChangeDeclaredProviders.fire();\n\t}\n\n\tisAuthenticationProviderRegistered(id: string): boolean {\n\t\treturn this._authenticationProviders.has(id);\n\t}\n\n\tregisterAuthenticationProvider(\n\t\tid: string,\n\t\tauthenticationProvider: IAuthenticationProvider,\n\t): void {\n\t\tthis._authenticationProviders.set(id, authenticationProvider);\n\t\tconst disposableStore = new DisposableStore();\n\t\tdisposableStore.add(\n\t\t\tauthenticationProvider.onDidChangeSessions((e) =>\n\t\t\t\tthis._onDidChangeSessions.fire({\n\t\t\t\t\tproviderId: id,\n\t\t\t\t\tlabel: authenticationProvider.label,\n\t\t\t\t\tevent: e,\n\t\t\t\t}),\n\t\t\t),\n\t\t);\n\t\tif (isDisposable(authenticationProvider)) {\n\t\t\tdisposableStore.add(authenticationProvider);\n\t\t}\n\t\tthis._authenticationProviderDisposables.set(id, disposableStore);\n\t\tthis._onDidRegisterAuthenticationProvider.fire({\n\t\t\tid,\n\t\t\tlabel: authenticationProvider.label,\n\t\t});\n\t}\n\n\tunregisterAuthenticationProvider(id: string): void {\n\t\tconst provider = this._authenticationProviders.get(id);\n\t\tif (provider) {\n\t\t\tthis._authenticationProviders.delete(id);\n\t\t\tthis._onDidUnregisterAuthenticationProvider.fire({\n\t\t\t\tid,\n\t\t\t\tlabel: provider.label,\n\t\t\t});\n\t\t}\n\t\tthis._authenticationProviderDisposables.deleteAndDispose(id);\n\t}\n\n\tgetProviderIds(): string[] {\n\t\tconst providerIds: string[] = [];\n\t\tthis._authenticationProviders.forEach((provider) => {\n\t\t\tproviderIds.push(provider.id);\n\t\t});\n\t\treturn providerIds;\n\t}\n\n\tgetProvider(id: string): IAuthenticationProvider {\n\t\tif (this._authenticationProviders.has(id)) {\n\t\t\treturn this._authenticationProviders.get(id)!;\n\t\t}\n\t\tthrow new Error(\n\t\t\t`No authentication provider '${id}' is currently registered.`,\n\t\t);\n\t}\n\n\tasync getAccounts(\n\t\tid: string,\n\t): Promise<ReadonlyArray<AuthenticationSessionAccount>> {\n\t\t// TODO: Cache this\n\t\tconst sessions = await this.getSessions(id);\n\t\tconst accounts = new Array<AuthenticationSessionAccount>();\n\t\tconst seenAccounts = new Set<string>();\n\t\tfor (const session of sessions) {\n\t\t\tif (!seenAccounts.has(session.account.label)) {\n\t\t\t\tseenAccounts.add(session.account.label);\n\t\t\t\taccounts.push(session.account);\n\t\t\t}\n\t\t}\n\t\treturn accounts;\n\t}\n\n\tasync getSessions(\n\t\tid: string,\n\t\tscopes?: string[],\n\t\taccount?: AuthenticationSessionAccount,\n\t\tactivateImmediate = false,\n\t): Promise<ReadonlyArray<AuthenticationSession>> {\n\t\tconst authProvider =\n\t\t\tthis._authenticationProviders.get(id) ||\n\t\t\t(await this.tryActivateProvider(id, activateImmediate));\n\t\tif (authProvider) {\n\t\t\treturn await authProvider.getSessions(scopes, { account });\n\t\t} else {\n\t\t\tthrow new Error(\n\t\t\t\t`No authentication provider '${id}' is currently registered.`,\n\t\t\t);\n\t\t}\n\t}\n\n\tasync createSession(\n\t\tid: string,\n\t\tscopes: string[],\n\t\toptions?: IAuthenticationCreateSessionOptions,\n\t): Promise<AuthenticationSession> {\n\t\tconst authProvider =\n\t\t\tthis._authenticationProviders.get(id) ||\n\t\t\t(await this.tryActivateProvider(id, !!options?.activateImmediate));\n\t\tif (authProvider) {\n\t\t\treturn await authProvider.createSession(scopes, {\n\t\t\t\taccount: options?.account,\n\t\t\t});\n\t\t} else {\n\t\t\tthrow new Error(\n\t\t\t\t`No authentication provider '${id}' is currently registered.`,\n\t\t\t);\n\t\t}\n\t}\n\n\tasync removeSession(id: string, sessionId: string): Promise<void> {\n\t\tconst authProvider = this._authenticationProviders.get(id);\n\t\tif (authProvider) {\n\t\t\treturn authProvider.removeSession(sessionId);\n\t\t} else {\n\t\t\tthrow new Error(\n\t\t\t\t`No authentication provider '${id}' is currently registered.`,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate async tryActivateProvider(\n\t\tproviderId: string,\n\t\tactivateImmediate: boolean,\n\t): Promise<IAuthenticationProvider> {\n\t\tawait this._extensionService.activateByEvent(\n\t\t\tgetAuthenticationProviderActivationEvent(providerId),\n\t\t\tactivateImmediate\n\t\t\t\t? ActivationKind.Immediate\n\t\t\t\t: ActivationKind.Normal,\n\t\t);\n\t\tlet provider = this._authenticationProviders.get(providerId);\n\t\tif (provider) {\n\t\t\treturn provider;\n\t\t}\n\n\t\tconst store = new DisposableStore();\n\n\t\t// When activate has completed, the extension has made the call to `registerAuthenticationProvider`.\n\t\t// However, activate cannot block on this, so the renderer may not have gotten the event yet.\n\t\tconst didRegister: Promise<IAuthenticationProvider> = new Promise(\n\t\t\t(resolve, _) => {\n\t\t\t\tstore.add(\n\t\t\t\t\tEvent.once(this.onDidRegisterAuthenticationProvider)(\n\t\t\t\t\t\t(e) => {\n\t\t\t\t\t\t\tif (e.id === providerId) {\n\t\t\t\t\t\t\t\tprovider =\n\t\t\t\t\t\t\t\t\tthis._authenticationProviders.get(\n\t\t\t\t\t\t\t\t\t\tproviderId,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (provider) {\n\t\t\t\t\t\t\t\t\tresolve(provider);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\t\t`No authentication provider '${providerId}' is currently registered.`,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t},\n\t\t);\n\n\t\tconst didTimeout: Promise<IAuthenticationProvider> = new Promise(\n\t\t\t(_, reject) => {\n\t\t\t\tconst handle = setTimeout(() => {\n\t\t\t\t\treject(\n\t\t\t\t\t\t\"Timed out waiting for authentication provider to register\",\n\t\t\t\t\t);\n\t\t\t\t}, 5000);\n\n\t\t\t\tstore.add(toDisposable(() => clearTimeout(handle)));\n\t\t\t},\n\t\t);\n\n\t\treturn Promise.race([didRegister, didTimeout]).finally(() =>\n\t\t\tstore.dispose(),\n\t\t);\n\t}\n}\n\nregisterSingleton(\n\tIAuthenticationService,\n\tAuthenticationService,\n\tInstantiationType.Delayed,\n);\n"],
  "mappings": "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",
  "names": []
}
