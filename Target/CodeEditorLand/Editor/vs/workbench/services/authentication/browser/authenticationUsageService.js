var A=Object.defineProperty;var I=Object.getOwnPropertyDescriptor;var h=(a,r,e,s)=>{for(var t=s>1?void 0:s?I(r,e):r,n=a.length-1,i;n>=0;n--)(i=a[n])&&(t=(s?i(r,e,t):i(t))||t);return s&&t&&A(r,e,t),t},c=(a,r)=>(e,s)=>r(e,s,a);import{Queue as m}from"../../../../base/common/async.js";import{Disposable as x}from"../../../../base/common/lifecycle.js";import{InstantiationType as S,registerSingleton as U}from"../../../../platform/instantiation/common/extensions.js";import{createDecorator as f}from"../../../../platform/instantiation/common/instantiation.js";import{ILogService as l}from"../../../../platform/log/common/log.js";import{IProductService as p}from"../../../../platform/product/common/productService.js";import{IStorageService as _,StorageScope as d,StorageTarget as y}from"../../../../platform/storage/common/storage.js";import{IAuthenticationService as P}from"../common/authentication.js";const C=f("IAuthenticationUsageService");let g=class extends x{constructor(e,s,t,n){super();this._storageService=e;this._authenticationService=s;this._logService=t;const i=n.trustedExtensionAuthAccess;if(Array.isArray(i))for(const o of i)this._extensionsUsingAuth.add(o);else if(i)for(const o of Object.values(i))for(const u of o)this._extensionsUsingAuth.add(u);this._authenticationService.onDidRegisterAuthenticationProvider(o=>this._queue.queue(()=>this._addExtensionsToCache(o.id)))}_serviceBrand;_queue=new m;_extensionsUsingAuth=new Set;async initializeExtensionUsageCache(){await this._queue.queue(()=>Promise.all(this._authenticationService.getProviderIds().map(e=>this._addExtensionsToCache(e))))}async extensionUsesAuth(e){return await this._queue.whenIdle(),this._extensionsUsingAuth.has(e)}readAccountUsages(e,s){const t=`${e}-${s}-usages`,n=this._storageService.get(t,d.APPLICATION);let i=[];if(n)try{i=JSON.parse(n)}catch{}return i}removeAccountUsage(e,s){const t=`${e}-${s}-usages`;this._storageService.remove(t,d.APPLICATION)}addAccountUsage(e,s,t,n){const i=`${e}-${s}-usages`,o=this.readAccountUsages(e,s),u=o.findIndex(v=>v.extensionId===t);u>-1?o.splice(u,1,{extensionId:t,extensionName:n,lastUsed:Date.now()}):o.push({extensionId:t,extensionName:n,lastUsed:Date.now()}),this._storageService.store(i,JSON.stringify(o),d.APPLICATION,y.MACHINE),this._extensionsUsingAuth.add(t)}async _addExtensionsToCache(e){try{const s=await this._authenticationService.getAccounts(e);for(const t of s){const n=this.readAccountUsages(e,t.label);for(const i of n)this._extensionsUsingAuth.add(i.extensionId)}}catch(s){this._logService.error(s)}}};g=h([c(0,_),c(1,P),c(2,l),c(3,p)],g),U(C,g,S.Delayed);export{g as AuthenticationUsageService,C as IAuthenticationUsageService};
