{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/request/browser/requestService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport { request } from \"../../../../base/parts/request/browser/request.js\";\nimport type {\n\tIRequestContext,\n\tIRequestOptions,\n} from \"../../../../base/parts/request/common/request.js\";\nimport type { ServicesAccessor } from \"../../../../editor/browser/editorExtensions.js\";\nimport { CommandsRegistry } from \"../../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport {\n\tAbstractRequestService,\n\ttype AuthInfo,\n\ttype Credentials,\n\ttype IRequestService,\n} from \"../../../../platform/request/common/request.js\";\nimport { RequestChannelClient } from \"../../../../platform/request/common/requestIpc.js\";\nimport {\n\ttype IRemoteAgentConnection,\n\tIRemoteAgentService,\n} from \"../../remote/common/remoteAgentService.js\";\n\nexport class BrowserRequestService\n\textends AbstractRequestService\n\timplements IRequestService\n{\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IRemoteAgentService\n\t\tprivate readonly remoteAgentService: IRemoteAgentService,\n\t\t@IConfigurationService\n\t\tprivate readonly configurationService: IConfigurationService,\n\t\t@ILogService logService: ILogService,\n\t) {\n\t\tsuper(logService);\n\t}\n\n\tasync request(\n\t\toptions: IRequestOptions,\n\t\ttoken: CancellationToken,\n\t): Promise<IRequestContext> {\n\t\ttry {\n\t\t\tif (!options.proxyAuthorization) {\n\t\t\t\toptions.proxyAuthorization =\n\t\t\t\t\tthis.configurationService.getValue<string>(\n\t\t\t\t\t\t\"http.proxyAuthorization\",\n\t\t\t\t\t);\n\t\t\t}\n\t\t\tconst context = await this.logAndRequest(options, () =>\n\t\t\t\trequest(options, token),\n\t\t\t);\n\n\t\t\tconst connection = this.remoteAgentService.getConnection();\n\t\t\tif (connection && context.res.statusCode === 405) {\n\t\t\t\treturn this._makeRemoteRequest(connection, options, token);\n\t\t\t}\n\t\t\treturn context;\n\t\t} catch (error) {\n\t\t\tconst connection = this.remoteAgentService.getConnection();\n\t\t\tif (connection) {\n\t\t\t\treturn this._makeRemoteRequest(connection, options, token);\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync resolveProxy(url: string): Promise<string | undefined> {\n\t\treturn undefined; // not implemented in the web\n\t}\n\n\tasync lookupAuthorization(\n\t\tauthInfo: AuthInfo,\n\t): Promise<Credentials | undefined> {\n\t\treturn undefined; // not implemented in the web\n\t}\n\n\tasync lookupKerberosAuthorization(\n\t\turl: string,\n\t): Promise<string | undefined> {\n\t\treturn undefined; // not implemented in the web\n\t}\n\n\tasync loadCertificates(): Promise<string[]> {\n\t\treturn []; // not implemented in the web\n\t}\n\n\tprivate _makeRemoteRequest(\n\t\tconnection: IRemoteAgentConnection,\n\t\toptions: IRequestOptions,\n\t\ttoken: CancellationToken,\n\t): Promise<IRequestContext> {\n\t\treturn connection.withChannel(\"request\", (channel) =>\n\t\t\tnew RequestChannelClient(channel).request(options, token),\n\t\t);\n\t}\n}\n\n// --- Internal commands to help authentication for extensions\n\nCommandsRegistry.registerCommand(\n\t\"_workbench.fetchJSON\",\n\tasync (accessor: ServicesAccessor, url: string, method: string) => {\n\t\tconst result = await fetch(url, {\n\t\t\tmethod,\n\t\t\theaders: { Accept: \"application/json\" },\n\t\t});\n\n\t\tif (result.ok) {\n\t\t\treturn result.json();\n\t\t} else {\n\t\t\tthrow new Error(result.statusText);\n\t\t}\n\t},\n);\n"],
  "mappings": ";;;;;;;;;;;;AAMA,SAAS,eAAe;AAMxB,SAAS,wBAAwB;AACjC,SAAS,6BAA6B;AACtC,SAAS,mBAAmB;AAC5B;AAAA,EACC;AAAA,OAIM;AACP,SAAS,4BAA4B;AACrC;AAAA,EAEC;AAAA,OACM;AAEA,IAAM,wBAAN,cACE,uBAET;AAAA,EAGC,YAEkB,oBAEA,sBACJ,YACZ;AACD,UAAM,UAAU;AALC;AAEA;AAAA,EAIlB;AAAA,EAzCD,OA8BA;AAAA;AAAA;AAAA,EAaC,MAAM,QACL,SACA,OAC2B;AAC3B,QAAI;AACH,UAAI,CAAC,QAAQ,oBAAoB;AAChC,gBAAQ,qBACP,KAAK,qBAAqB;AAAA,UACzB;AAAA,QACD;AAAA,MACF;AACA,YAAM,UAAU,MAAM,KAAK;AAAA,QAAc;AAAA,QAAS,MACjD,QAAQ,SAAS,KAAK;AAAA,MACvB;AAEA,YAAM,aAAa,KAAK,mBAAmB,cAAc;AACzD,UAAI,cAAc,QAAQ,IAAI,eAAe,KAAK;AACjD,eAAO,KAAK,mBAAmB,YAAY,SAAS,KAAK;AAAA,MAC1D;AACA,aAAO;AAAA,IACR,SAAS,OAAO;AACf,YAAM,aAAa,KAAK,mBAAmB,cAAc;AACzD,UAAI,YAAY;AACf,eAAO,KAAK,mBAAmB,YAAY,SAAS,KAAK;AAAA,MAC1D;AACA,YAAM;AAAA,IACP;AAAA,EACD;AAAA,EAEA,MAAM,aAAa,KAA0C;AAC5D,WAAO;AAAA,EACR;AAAA,EAEA,MAAM,oBACL,UACmC;AACnC,WAAO;AAAA,EACR;AAAA,EAEA,MAAM,4BACL,KAC8B;AAC9B,WAAO;AAAA,EACR;AAAA,EAEA,MAAM,mBAAsC;AAC3C,WAAO,CAAC;AAAA,EACT;AAAA,EAEQ,mBACP,YACA,SACA,OAC2B;AAC3B,WAAO,WAAW;AAAA,MAAY;AAAA,MAAW,CAAC,YACzC,IAAI,qBAAqB,OAAO,EAAE,QAAQ,SAAS,KAAK;AAAA,IACzD;AAAA,EACD;AACD;AA1Ea,wBAAN;AAAA,EAOJ;AAAA,EAEA;AAAA,EAEA;AAAA,GAXU;AA8Eb,iBAAiB;AAAA,EAChB;AAAA,EACA,OAAO,UAA4B,KAAa,WAAmB;AAClE,UAAM,SAAS,MAAM,MAAM,KAAK;AAAA,MAC/B;AAAA,MACA,SAAS,EAAE,QAAQ,mBAAmB;AAAA,IACvC,CAAC;AAED,QAAI,OAAO,IAAI;AACd,aAAO,OAAO,KAAK;AAAA,IACpB,OAAO;AACN,YAAM,IAAI,MAAM,OAAO,UAAU;AAAA,IAClC;AAAA,EACD;AACD;",
  "names": []
}
