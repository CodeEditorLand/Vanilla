import e from"assert";import{DisposableStore as q}from"../../../../../base/common/lifecycle.js";import{Schemas as D}from"../../../../../base/common/network.js";import{URI as r}from"../../../../../base/common/uri.js";import{ensureNoDisposablesAreLeakedInTestSuite as w}from"../../../../../base/test/common/utils.js";import"../../../../browser/parts/editor/editorPart.js";import{DiffEditorInput as v}from"../../../../common/editor/diffEditorInput.js";import{EditorResolverService as O}from"../../browser/editorResolverService.js";import{IEditorGroupsService as N}from"../../common/editorGroupsService.js";import{IEditorResolverService as k,ResolvedStatus as c,RegisteredEditorPriority as g}from"../../common/editorResolverService.js";import{createEditorPart as _,TestFileEditorInput as I,TestServiceAccessor as h,workbenchInstantiationService as A}from"../../../../test/browser/workbenchTestServices.js";suite("EditorResolverService",()=>{const l="testEditorInputForEditorResolverService",E=new q;teardown(()=>E.clear()),w();async function y(s=A(void 0,E)){const i=await _(s,E);s.stub(N,i);const a=s.createInstance(O);return s.stub(k,a),E.add(a),[i,a,s.createInstance(h)]}function p(s,i,a){const d=new I(s,i);return a.add(d),d}test("Simple Resolve",async()=>{const[s,i]=await y(),a=i.registerEditor("*.test",{id:"TEST_EDITOR",label:"Test Editor Label",detail:"Test Editor Details",priority:g.default},{},{createEditorInput:({resource:t,options:n},u)=>({editor:new I(r.parse(t.toString()),l)})}),d=await i.resolveEditor({resource:r.file("my://resource-basics.test")},s.activeGroup);e.ok(d),e.notStrictEqual(typeof d,"number"),d!==c.ABORT&&d!==c.NONE&&(e.strictEqual(d.editor.typeId,l),d.editor.dispose()),a.dispose()}),test("Untitled Resolve",async()=>{const s="UNTITLED_TEST_INPUT",[i,a]=await y(),d=a.registerEditor("*.test",{id:"TEST_EDITOR",label:"Test Editor Label",detail:"Test Editor Details",priority:g.default},{},{createEditorInput:({resource:n,options:u},T)=>({editor:new I(r.parse(n.toString()),l)}),createUntitledEditorInput:({resource:n,options:u},T)=>({editor:new I(n||r.from({scheme:D.untitled}),s)})});let t=await a.resolveEditor({resource:void 0},i.activeGroup);e.ok(t),e.strictEqual(typeof t,"number"),t=await a.resolveEditor({resource:r.from({scheme:D.untitled,path:"foo.test"})},i.activeGroup),e.ok(t),e.notStrictEqual(typeof t,"number"),t!==c.ABORT&&t!==c.NONE&&(e.strictEqual(t.editor.typeId,s),t.editor.dispose()),t=await a.resolveEditor({resource:r.file("/fake.test"),forceUntitled:!0},i.activeGroup),e.ok(t),e.notStrictEqual(typeof t,"number"),t!==c.ABORT&&t!==c.NONE&&(e.strictEqual(t.editor.typeId,s),t.editor.dispose()),d.dispose()}),test("Side by side Resolve",async()=>{const[s,i]=await y(),a=i.registerEditor("*.test-primary",{id:"TEST_EDITOR_PRIMARY",label:"Test Editor Label Primary",detail:"Test Editor Details Primary",priority:g.default},{},{createEditorInput:({resource:n,options:u},T)=>({editor:p(r.parse(n.toString()),l,E)})}),d=i.registerEditor("*.test-secondary",{id:"TEST_EDITOR_SECONDARY",label:"Test Editor Label Secondary",detail:"Test Editor Details Secondary",priority:g.default},{},{createEditorInput:({resource:n,options:u},T)=>({editor:p(r.parse(n.toString()),l,E)})}),t=await i.resolveEditor({primary:{resource:r.file("my://resource-basics.test-primary")},secondary:{resource:r.file("my://resource-basics.test-secondary")}},s.activeGroup);e.ok(t),e.notStrictEqual(typeof t,"number"),t!==c.ABORT&&t!==c.NONE?(e.strictEqual(t.editor.typeId,"workbench.editorinputs.sidebysideEditorInput"),t.editor.dispose()):e.fail(),a.dispose(),d.dispose()}),test("Diff editor Resolve",async()=>{const[s,i,a]=await y(),d=i.registerEditor("*.test-diff",{id:"TEST_EDITOR",label:"Test Editor Label",detail:"Test Editor Details",priority:g.default},{},{createEditorInput:({resource:n,options:u},T)=>({editor:p(r.parse(n.toString()),l,E)}),createDiffEditorInput:({modified:n,original:u,options:T},S)=>({editor:a.instantiationService.createInstance(v,"name","description",p(r.parse(u.toString()),l,E),p(r.parse(n.toString()),l,E),void 0)})}),t=await i.resolveEditor({original:{resource:r.file("my://resource-basics.test-diff")},modified:{resource:r.file("my://resource-basics.test-diff")}},s.activeGroup);e.ok(t),e.notStrictEqual(typeof t,"number"),t!==c.ABORT&&t!==c.NONE?(e.strictEqual(t.editor.typeId,"workbench.editors.diffEditorInput"),t.editor.dispose()):e.fail(),d.dispose()}),test("Diff editor Resolve - Different Types",async()=>{const[s,i,a]=await y();let d=0,t=0,n=0;const u=i.registerEditor("*.test-diff",{id:"TEST_EDITOR",label:"Test Editor Label",detail:"Test Editor Details",priority:g.default},{},{createEditorInput:({resource:f,options:m},b)=>({editor:p(r.parse(f.toString()),l,E)}),createDiffEditorInput:({modified:f,original:m,options:b},R)=>(d++,{editor:a.instantiationService.createInstance(v,"name","description",p(r.parse(m.toString()),l,E),p(r.parse(f.toString()),l,E),void 0)})}),T=i.registerEditor("*.test-secondDiff",{id:"TEST_EDITOR_2",label:"Test Editor Label",detail:"Test Editor Details",priority:g.default},{},{createEditorInput:({resource:f,options:m},b)=>({editor:new I(r.parse(f.toString()),l)}),createDiffEditorInput:({modified:f,original:m,options:b},R)=>(t++,{editor:a.instantiationService.createInstance(v,"name","description",p(r.parse(m.toString()),l,E),p(r.parse(f.toString()),l,E),void 0)})}),S=i.registerEditor("*",{id:"default",label:"Test Editor Label",detail:"Test Editor Details",priority:g.option},{},{createEditorInput:({resource:f,options:m},b)=>({editor:new I(r.parse(f.toString()),l)}),createDiffEditorInput:({modified:f,original:m,options:b},R)=>(n++,{editor:a.instantiationService.createInstance(v,"name","description",p(r.parse(m.toString()),l,E),p(r.parse(f.toString()),l,E),void 0)})});let o=await i.resolveEditor({original:{resource:r.file("my://resource-basics.test-diff")},modified:{resource:r.file("my://resource-basics.test-diff")}},s.activeGroup);e.ok(o),e.notStrictEqual(typeof o,"number"),o!==c.ABORT&&o!==c.NONE?(e.strictEqual(d,1),e.strictEqual(t,0),e.strictEqual(n,0),e.strictEqual(o.editor.typeId,"workbench.editors.diffEditorInput"),o.editor.dispose()):e.fail(),o=await i.resolveEditor({original:{resource:r.file("my://resource-basics.test-secondDiff")},modified:{resource:r.file("my://resource-basics.test-secondDiff")}},s.activeGroup),e.ok(o),e.notStrictEqual(typeof o,"number"),o!==c.ABORT&&o!==c.NONE?(e.strictEqual(d,1),e.strictEqual(t,1),e.strictEqual(n,0),e.strictEqual(o.editor.typeId,"workbench.editors.diffEditorInput"),o.editor.dispose()):e.fail(),o=await i.resolveEditor({original:{resource:r.file("my://resource-basics.test-secondDiff")},modified:{resource:r.file("my://resource-basics.test-diff")}},s.activeGroup),e.ok(o),e.notStrictEqual(typeof o,"number"),o!==c.ABORT&&o!==c.NONE?(e.strictEqual(d,1),e.strictEqual(t,1),e.strictEqual(n,1),e.strictEqual(o.editor.typeId,"workbench.editors.diffEditorInput"),o.editor.dispose()):e.fail(),o=await i.resolveEditor({original:{resource:r.file("my://resource-basics.test-diff")},modified:{resource:r.file("my://resource-basics.test-secondDiff")}},s.activeGroup),e.ok(o),e.notStrictEqual(typeof o,"number"),o!==c.ABORT&&o!==c.NONE?(e.strictEqual(d,1),e.strictEqual(t,1),e.strictEqual(n,2),e.strictEqual(o.editor.typeId,"workbench.editors.diffEditorInput"),o.editor.dispose()):e.fail(),o=await i.resolveEditor({original:{resource:r.file("my://resource-basics.test-secondDiff")},modified:{resource:r.file("my://resource-basics.test-diff")},options:{override:"TEST_EDITOR"}},s.activeGroup),e.ok(o),e.notStrictEqual(typeof o,"number"),o!==c.ABORT&&o!==c.NONE?(e.strictEqual(d,2),e.strictEqual(t,1),e.strictEqual(n,2),e.strictEqual(o.editor.typeId,"workbench.editors.diffEditorInput"),o.editor.dispose()):e.fail(),u.dispose(),T.dispose(),S.dispose()}),test("Registry & Events",async()=>{const[,s]=await y();let i=0;E.add(s.onDidChangeEditorRegistrations(()=>{i++}));const a=s.getEditors(),d=s.registerEditor("*.test",{id:"TEST_EDITOR",label:"Test Editor Label",detail:"Test Editor Details",priority:g.default},{},{createEditorInput:({resource:t,options:n},u)=>({editor:new I(r.parse(t.toString()),l)})});e.strictEqual(i,1),e.strictEqual(s.getEditors().length,a.length+1),e.strictEqual(s.getEditors().some(t=>t.id==="TEST_EDITOR"),!0),d.dispose(),e.strictEqual(i,2),e.strictEqual(s.getEditors().length,a.length),e.strictEqual(s.getEditors().some(t=>t.id==="TEST_EDITOR"),!1)}),test("Multiple registrations to same glob and id #155859",async()=>{const[s,i,a]=await y(),d={id:"TEST_EDITOR",label:"Test Editor Label",detail:"Test Editor Details",priority:g.default},t=i.registerEditor("*.test",d,{},{createEditorInput:({resource:T,options:S},o)=>({editor:new I(r.parse(T.toString()),l)})}),n=i.registerEditor("*.test",d,{},{createDiffEditorInput:({modified:T,original:S,options:o},f)=>({editor:a.instantiationService.createInstance(v,"name","description",p(r.parse(S.toString()),l,E),p(r.parse(T.toString()),l,E),void 0)})});let u=await i.resolveEditor({original:{resource:r.file("my://resource-basics.test")},modified:{resource:r.file("my://resource-basics.test")}},s.activeGroup);e.ok(u),e.notStrictEqual(typeof u,"number"),u!==c.ABORT&&u!==c.NONE?(e.strictEqual(u.editor.typeId,"workbench.editors.diffEditorInput"),u.editor.dispose()):e.fail(),n.dispose(),u=await i.resolveEditor({original:{resource:r.file("my://resource-basics.test")},modified:{resource:r.file("my://resource-basics.test")}},s.activeGroup),e.ok(u),e.strictEqual(typeof u,"number"),u!==c.NONE&&e.fail(),t.dispose()})});
