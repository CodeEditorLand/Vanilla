import t from"assert";import{EditorExtensions as R,EditorInputCapabilities as m}from"../../../../common/editor.js";import{URI as E}from"../../../../../base/common/uri.js";import{workbenchInstantiationService as O,TestFileEditorInput as p,registerTestEditor as A,createEditorPart as D,registerTestSideBySideEditor as P}from"../../../../test/browser/workbenchTestServices.js";import{Registry as U}from"../../../../../platform/registry/common/platform.js";import"../../../../browser/parts/editor/editorPart.js";import{SyncDescriptor as M}from"../../../../../platform/instantiation/common/descriptors.js";import{GroupDirection as v,IEditorGroupsService as _}from"../../common/editorGroupsService.js";import{EditorActivation as g}from"../../../../../platform/editor/common/editor.js";import{WillSaveStateReason as b}from"../../../../../platform/storage/common/storage.js";import{DisposableStore as F,toDisposable as H}from"../../../../../base/common/lifecycle.js";import{EditorsObserver as q}from"../../../../browser/parts/editor/editorsObserver.js";import{timeout as T}from"../../../../../base/common/async.js";import{TestStorageService as f}from"../../../../test/common/workbenchTestServices.js";import{SideBySideEditorInput as k}from"../../../../common/editor/sideBySideEditorInput.js";import"../../../../../platform/instantiation/common/instantiation.js";import{ensureNoDisposablesAreLeakedInTestSuite as C}from"../../../../../base/test/common/utils.js";suite("EditorsObserver",function(){const S="MyTestEditorForEditorsObserver",I="testEditorInputForEditorsObserver",l="testSerializableEditorInputForEditorsObserver",u=new F;setup(()=>{u.add(A(S,[new M(p)],l)),u.add(P())}),teardown(()=>{u.clear()});async function h(){const c=O(void 0,u);c.invokeFunction(e=>U.as(R.EditorFactory).start(e));const d=await D(c,u);return c.stub(_,d),u.add(H(()=>d.clearState())),[d,c]}async function w(c=!1){const[d,e]=await h(),r=u.add(new q(c?d:void 0,d,u.add(new f)));return[d,r,e]}test("basics (single group)",async()=>{await G()}),test("basics (single group, scoped)",async()=>{await G(!0)});async function G(c=!1){const[d,e]=await w();let r=!1;u.add(e.onDidMostRecentlyActiveEditorsChange(()=>{r=!0}));let o=e.editors;t.strictEqual(o.length,0),t.strictEqual(r,!1);const i=new p(E.parse("foo://bar1"),l);await d.activeGroup.openEditor(i,{pinned:!0}),o=e.editors,t.strictEqual(o.length,1),t.strictEqual(o[0].groupId,d.activeGroup.id),t.strictEqual(o[0].editor,i),t.strictEqual(r,!0),t.strictEqual(e.hasEditor({resource:i.resource,typeId:i.typeId,editorId:i.editorId}),!0),t.strictEqual(e.hasEditors(i.resource),!0),t.strictEqual(e.hasEditor({resource:i.resource,typeId:"unknownTypeId",editorId:"unknownTypeId"}),!1);const s=new p(E.parse("foo://bar2"),l),a=new p(E.parse("foo://bar3"),l);t.strictEqual(e.hasEditors(s.resource),!1),t.strictEqual(e.hasEditor({resource:s.resource,typeId:s.typeId,editorId:s.editorId}),!1),await d.activeGroup.openEditor(s,{pinned:!0}),await d.activeGroup.openEditor(a,{pinned:!0}),o=e.editors,t.strictEqual(o.length,3),t.strictEqual(o[0].groupId,d.activeGroup.id),t.strictEqual(o[0].editor,a),t.strictEqual(o[1].groupId,d.activeGroup.id),t.strictEqual(o[1].editor,s),t.strictEqual(o[2].groupId,d.activeGroup.id),t.strictEqual(o[2].editor,i),t.strictEqual(e.hasEditor({resource:s.resource,typeId:s.typeId,editorId:s.editorId}),!0),t.strictEqual(e.hasEditor({resource:a.resource,typeId:a.typeId,editorId:a.editorId}),!0),await d.activeGroup.openEditor(s,{pinned:!0}),o=e.editors,t.strictEqual(o.length,3),t.strictEqual(o[0].groupId,d.activeGroup.id),t.strictEqual(o[0].editor,s),t.strictEqual(o[1].groupId,d.activeGroup.id),t.strictEqual(o[1].editor,a),t.strictEqual(o[2].groupId,d.activeGroup.id),t.strictEqual(o[2].editor,i),t.strictEqual(e.hasEditor({resource:i.resource,typeId:i.typeId,editorId:i.editorId}),!0),t.strictEqual(e.hasEditor({resource:s.resource,typeId:s.typeId,editorId:s.editorId}),!0),t.strictEqual(e.hasEditor({resource:a.resource,typeId:a.typeId,editorId:a.editorId}),!0),r=!1,await d.activeGroup.closeEditor(i),o=e.editors,t.strictEqual(o.length,2),t.strictEqual(o[0].groupId,d.activeGroup.id),t.strictEqual(o[0].editor,s),t.strictEqual(o[1].groupId,d.activeGroup.id),t.strictEqual(o[1].editor,a),t.strictEqual(r,!0),t.strictEqual(e.hasEditor({resource:i.resource,typeId:i.typeId,editorId:i.editorId}),!1),t.strictEqual(e.hasEditor({resource:s.resource,typeId:s.typeId,editorId:s.editorId}),!0),t.strictEqual(e.hasEditor({resource:a.resource,typeId:a.typeId,editorId:a.editorId}),!0),await d.activeGroup.closeAllEditors(),o=e.editors,t.strictEqual(o.length,0),t.strictEqual(e.hasEditor({resource:i.resource,typeId:i.typeId,editorId:i.editorId}),!1),t.strictEqual(e.hasEditor({resource:s.resource,typeId:s.typeId,editorId:s.editorId}),!1),t.strictEqual(e.hasEditor({resource:a.resource,typeId:a.typeId,editorId:a.editorId}),!1)}test("basics (multi group)",async()=>{const[c,d]=await w(),e=c.activeGroup;let r=d.editors;t.strictEqual(r.length,0);const o=u.add(c.addGroup(e,v.RIGHT)),i=new p(E.parse("foo://bar1"),l);await e.openEditor(i,{pinned:!0,activation:g.ACTIVATE}),await o.openEditor(i,{pinned:!0,activation:g.ACTIVATE}),r=d.editors,t.strictEqual(r.length,2),t.strictEqual(r[0].groupId,o.id),t.strictEqual(r[0].editor,i),t.strictEqual(r[1].groupId,e.id),t.strictEqual(r[1].editor,i),t.strictEqual(d.hasEditors(i.resource),!0),t.strictEqual(d.hasEditor({resource:i.resource,typeId:i.typeId,editorId:i.editorId}),!0),await e.openEditor(i,{pinned:!0,activation:g.ACTIVATE}),r=d.editors,t.strictEqual(r.length,2),t.strictEqual(r[0].groupId,e.id),t.strictEqual(r[0].editor,i),t.strictEqual(r[1].groupId,o.id),t.strictEqual(r[1].editor,i),t.strictEqual(d.hasEditors(i.resource),!0),t.strictEqual(d.hasEditor({resource:i.resource,typeId:i.typeId,editorId:i.editorId}),!0);const s=u.add(new p(E.parse("foo://bar2"),l));await e.openEditor(s,{inactive:!0}),r=d.editors,t.strictEqual(r.length,3),t.strictEqual(r[0].groupId,e.id),t.strictEqual(r[0].editor,i),t.strictEqual(r[1].groupId,e.id),t.strictEqual(r[1].editor,s),t.strictEqual(r[2].groupId,o.id),t.strictEqual(r[2].editor,i),t.strictEqual(d.hasEditors(i.resource),!0),t.strictEqual(d.hasEditors(s.resource),!0),t.strictEqual(d.hasEditor({resource:i.resource,typeId:i.typeId,editorId:i.editorId}),!0),t.strictEqual(d.hasEditor({resource:s.resource,typeId:s.typeId,editorId:s.editorId}),!0),await e.closeAllEditors(),r=d.editors,t.strictEqual(r.length,1),t.strictEqual(r[0].groupId,o.id),t.strictEqual(r[0].editor,i),t.strictEqual(d.hasEditors(i.resource),!0),t.strictEqual(d.hasEditors(s.resource),!1),t.strictEqual(d.hasEditor({resource:i.resource,typeId:i.typeId,editorId:i.editorId}),!0),t.strictEqual(d.hasEditor({resource:s.resource,typeId:s.typeId,editorId:s.editorId}),!1),await o.closeAllEditors(),r=d.editors,t.strictEqual(r.length,0),t.strictEqual(d.hasEditors(i.resource),!1),t.strictEqual(d.hasEditors(s.resource),!1),t.strictEqual(d.hasEditor({resource:i.resource,typeId:i.typeId,editorId:i.editorId}),!1),t.strictEqual(d.hasEditor({resource:s.resource,typeId:s.typeId,editorId:s.editorId}),!1),c.removeGroup(o)}),test("hasEditor/hasEditors - same resource, different type id",async()=>{const[c,d]=await w(),e=u.add(new p(E.parse("foo://bar1"),l)),r=u.add(new p(e.resource,"otherTypeId"));t.strictEqual(d.hasEditors(e.resource),!1),t.strictEqual(d.hasEditor({resource:e.resource,typeId:e.typeId,editorId:e.editorId}),!1),t.strictEqual(d.hasEditor({resource:r.resource,typeId:r.typeId,editorId:r.editorId}),!1),await c.activeGroup.openEditor(e,{pinned:!0}),t.strictEqual(d.hasEditors(e.resource),!0),t.strictEqual(d.hasEditor({resource:e.resource,typeId:e.typeId,editorId:e.editorId}),!0),t.strictEqual(d.hasEditor({resource:r.resource,typeId:r.typeId,editorId:r.editorId}),!1),await c.activeGroup.openEditor(r,{pinned:!0}),t.strictEqual(d.hasEditors(e.resource),!0),t.strictEqual(d.hasEditor({resource:e.resource,typeId:e.typeId,editorId:e.editorId}),!0),t.strictEqual(d.hasEditor({resource:r.resource,typeId:r.typeId,editorId:r.editorId}),!0),await c.activeGroup.closeEditor(r),t.strictEqual(d.hasEditors(e.resource),!0),t.strictEqual(d.hasEditor({resource:e.resource,typeId:e.typeId,editorId:e.editorId}),!0),t.strictEqual(d.hasEditor({resource:r.resource,typeId:r.typeId,editorId:r.editorId}),!1),await c.activeGroup.closeEditor(e),t.strictEqual(d.hasEditors(e.resource),!1),t.strictEqual(d.hasEditor({resource:e.resource,typeId:e.typeId,editorId:e.editorId}),!1),t.strictEqual(d.hasEditor({resource:r.resource,typeId:r.typeId,editorId:r.editorId}),!1)}),test("hasEditor/hasEditors - side by side editor support",async()=>{const[c,d,e]=await w(),r=u.add(new p(E.parse("foo://bar1"),l)),o=u.add(new p(E.parse("foo://bar2"),"otherTypeId")),i=e.createInstance(k,"name",void 0,o,r);t.strictEqual(d.hasEditors(r.resource),!1),t.strictEqual(d.hasEditor({resource:r.resource,typeId:r.typeId,editorId:r.editorId}),!1),t.strictEqual(d.hasEditor({resource:o.resource,typeId:o.typeId,editorId:o.editorId}),!1),await c.activeGroup.openEditor(i,{pinned:!0}),t.strictEqual(d.hasEditors(r.resource),!0),t.strictEqual(d.hasEditor({resource:r.resource,typeId:r.typeId,editorId:r.editorId}),!0),t.strictEqual(d.hasEditor({resource:o.resource,typeId:o.typeId,editorId:o.editorId}),!1),await c.activeGroup.openEditor(r,{pinned:!0}),t.strictEqual(d.hasEditors(r.resource),!0),t.strictEqual(d.hasEditor({resource:r.resource,typeId:r.typeId,editorId:r.editorId}),!0),t.strictEqual(d.hasEditor({resource:o.resource,typeId:o.typeId,editorId:o.editorId}),!1),await c.activeGroup.closeEditor(i),t.strictEqual(d.hasEditors(r.resource),!0),t.strictEqual(d.hasEditor({resource:r.resource,typeId:r.typeId,editorId:r.editorId}),!0),t.strictEqual(d.hasEditor({resource:o.resource,typeId:o.typeId,editorId:o.editorId}),!1),await c.activeGroup.closeEditor(r),t.strictEqual(d.hasEditors(r.resource),!1),t.strictEqual(d.hasEditor({resource:r.resource,typeId:r.typeId,editorId:r.editorId}),!1),t.strictEqual(d.hasEditor({resource:o.resource,typeId:o.typeId,editorId:o.editorId}),!1)}),test("copy group",async function(){const[c,d]=await w(),e=u.add(new p(E.parse("foo://bar1"),l)),r=u.add(new p(E.parse("foo://bar2"),l)),o=u.add(new p(E.parse("foo://bar3"),l)),i=c.activeGroup;await i.openEditor(e,{pinned:!0}),await i.openEditor(r,{pinned:!0}),await i.openEditor(o,{pinned:!0});let s=d.editors;t.strictEqual(s.length,3),t.strictEqual(s[0].groupId,i.id),t.strictEqual(s[0].editor,o),t.strictEqual(s[1].groupId,i.id),t.strictEqual(s[1].editor,r),t.strictEqual(s[2].groupId,i.id),t.strictEqual(s[2].editor,e),t.strictEqual(d.hasEditor({resource:e.resource,typeId:e.typeId,editorId:e.editorId}),!0),t.strictEqual(d.hasEditor({resource:r.resource,typeId:r.typeId,editorId:r.editorId}),!0),t.strictEqual(d.hasEditor({resource:o.resource,typeId:o.typeId,editorId:o.editorId}),!0);const a=c.copyGroup(i,i,v.RIGHT);a.setActive(!0),a.focus(),s=d.editors,t.strictEqual(s.length,6),t.strictEqual(s[0].groupId,a.id),t.strictEqual(s[0].editor,o),t.strictEqual(s[1].groupId,i.id),t.strictEqual(s[1].editor,o),t.strictEqual(s[2].groupId,a.id),t.strictEqual(s[2].editor,r),t.strictEqual(s[3].groupId,a.id),t.strictEqual(s[3].editor,e),t.strictEqual(s[4].groupId,i.id),t.strictEqual(s[4].editor,r),t.strictEqual(s[5].groupId,i.id),t.strictEqual(s[5].editor,e),t.strictEqual(d.hasEditor({resource:e.resource,typeId:e.typeId,editorId:e.editorId}),!0),t.strictEqual(d.hasEditor({resource:r.resource,typeId:r.typeId,editorId:r.editorId}),!0),t.strictEqual(d.hasEditor({resource:o.resource,typeId:o.typeId,editorId:o.editorId}),!0),await i.closeAllEditors(),t.strictEqual(d.hasEditor({resource:e.resource,typeId:e.typeId,editorId:e.editorId}),!0),t.strictEqual(d.hasEditor({resource:r.resource,typeId:r.typeId,editorId:r.editorId}),!0),t.strictEqual(d.hasEditor({resource:o.resource,typeId:o.typeId,editorId:o.editorId}),!0),await a.closeAllEditors(),t.strictEqual(d.hasEditor({resource:e.resource,typeId:e.typeId,editorId:e.editorId}),!1),t.strictEqual(d.hasEditor({resource:r.resource,typeId:r.typeId,editorId:r.editorId}),!1),t.strictEqual(d.hasEditor({resource:o.resource,typeId:o.typeId,editorId:o.editorId}),!1)}),test("initial editors are part of observer and state is persisted & restored (single group)",async()=>{const[c]=await h(),d=c.activeGroup,e=u.add(new p(E.parse("foo://bar1"),l)),r=u.add(new p(E.parse("foo://bar2"),l)),o=u.add(new p(E.parse("foo://bar3"),l));await d.openEditor(e,{pinned:!0}),await d.openEditor(r,{pinned:!0}),await d.openEditor(o,{pinned:!0});const i=u.add(new f),s=u.add(new q(void 0,c,i));await c.whenReady;let a=s.editors;t.strictEqual(a.length,3),t.strictEqual(a[0].groupId,d.id),t.strictEqual(a[0].editor,o),t.strictEqual(a[1].groupId,d.id),t.strictEqual(a[1].editor,r),t.strictEqual(a[2].groupId,d.id),t.strictEqual(a[2].editor,e),t.strictEqual(s.hasEditor({resource:e.resource,typeId:e.typeId,editorId:e.editorId}),!0),t.strictEqual(s.hasEditor({resource:r.resource,typeId:r.typeId,editorId:r.editorId}),!0),t.strictEqual(s.hasEditor({resource:o.resource,typeId:o.typeId,editorId:o.editorId}),!0),i.testEmitWillSaveState(b.SHUTDOWN);const n=u.add(new q(void 0,c,i));await c.whenReady,a=n.editors,t.strictEqual(a.length,3),t.strictEqual(a[0].groupId,d.id),t.strictEqual(a[0].editor,o),t.strictEqual(a[1].groupId,d.id),t.strictEqual(a[1].editor,r),t.strictEqual(a[2].groupId,d.id),t.strictEqual(a[2].editor,e),t.strictEqual(s.hasEditor({resource:e.resource,typeId:e.typeId,editorId:e.editorId}),!0),t.strictEqual(s.hasEditor({resource:r.resource,typeId:r.typeId,editorId:r.editorId}),!0),t.strictEqual(s.hasEditor({resource:o.resource,typeId:o.typeId,editorId:o.editorId}),!0)}),test("initial editors are part of observer (multi group)",async()=>{const[c]=await h(),d=c.activeGroup,e=u.add(new p(E.parse("foo://bar1"),l)),r=u.add(new p(E.parse("foo://bar2"),l)),o=u.add(new p(E.parse("foo://bar3"),l));await d.openEditor(e,{pinned:!0}),await d.openEditor(r,{pinned:!0});const i=u.add(c.addGroup(d,v.RIGHT));await i.openEditor(o,{pinned:!0});const s=u.add(new f),a=u.add(new q(void 0,c,s));await c.whenReady;let n=a.editors;t.strictEqual(n.length,3),t.strictEqual(n[0].groupId,i.id),t.strictEqual(n[0].editor,o),t.strictEqual(n[1].groupId,d.id),t.strictEqual(n[1].editor,r),t.strictEqual(n[2].groupId,d.id),t.strictEqual(n[2].editor,e),t.strictEqual(a.hasEditor({resource:e.resource,typeId:e.typeId,editorId:e.editorId}),!0),t.strictEqual(a.hasEditor({resource:r.resource,typeId:r.typeId,editorId:r.editorId}),!0),t.strictEqual(a.hasEditor({resource:o.resource,typeId:o.typeId,editorId:o.editorId}),!0),s.testEmitWillSaveState(b.SHUTDOWN);const y=u.add(new q(void 0,c,s));await c.whenReady,n=y.editors,t.strictEqual(n.length,3),t.strictEqual(n[0].groupId,i.id),t.strictEqual(n[0].editor,o),t.strictEqual(n[1].groupId,d.id),t.strictEqual(n[1].editor,r),t.strictEqual(n[2].groupId,d.id),t.strictEqual(n[2].editor,e),t.strictEqual(y.hasEditor({resource:e.resource,typeId:e.typeId,editorId:e.editorId}),!0),t.strictEqual(y.hasEditor({resource:r.resource,typeId:r.typeId,editorId:r.editorId}),!0),t.strictEqual(y.hasEditor({resource:o.resource,typeId:o.typeId,editorId:o.editorId}),!0)}),test("observer does not restore editors that cannot be serialized",async()=>{const[c]=await h(),d=c.activeGroup,e=u.add(new p(E.parse("foo://bar1"),I));await d.openEditor(e,{pinned:!0});const r=u.add(new f),o=u.add(new q(void 0,c,r));await c.whenReady;let i=o.editors;t.strictEqual(i.length,1),t.strictEqual(i[0].groupId,d.id),t.strictEqual(i[0].editor,e),t.strictEqual(o.hasEditor({resource:e.resource,typeId:e.typeId,editorId:e.editorId}),!0),r.testEmitWillSaveState(b.SHUTDOWN);const s=u.add(new q(void 0,c,r));await c.whenReady,i=s.editors,t.strictEqual(i.length,0),t.strictEqual(s.hasEditor({resource:e.resource,typeId:e.typeId,editorId:e.editorId}),!1)}),test("observer closes editors when limit reached (across all groups)",async()=>{const[c]=await h();u.add(c.enforcePartOptions({limit:{enabled:!0,value:3}}));const d=u.add(new f),e=u.add(new q(void 0,c,d)),r=c.activeGroup,o=u.add(c.addGroup(r,v.RIGHT)),i=u.add(new p(E.parse("foo://bar1"),I)),s=u.add(new p(E.parse("foo://bar2"),I)),a=u.add(new p(E.parse("foo://bar3"),I)),n=u.add(new p(E.parse("foo://bar4"),I));await r.openEditor(i,{pinned:!0}),await r.openEditor(s,{pinned:!0}),await r.openEditor(a,{pinned:!0}),await r.openEditor(n,{pinned:!0}),t.strictEqual(r.count,3),t.strictEqual(r.contains(i),!1),t.strictEqual(r.contains(s),!0),t.strictEqual(r.contains(a),!0),t.strictEqual(r.contains(n),!0),t.strictEqual(e.hasEditor({resource:i.resource,typeId:i.typeId,editorId:i.editorId}),!1),t.strictEqual(e.hasEditor({resource:s.resource,typeId:s.typeId,editorId:s.editorId}),!0),t.strictEqual(e.hasEditor({resource:a.resource,typeId:a.typeId,editorId:a.editorId}),!0),t.strictEqual(e.hasEditor({resource:n.resource,typeId:n.typeId,editorId:n.editorId}),!0),s.setDirty(),u.add(c.enforcePartOptions({limit:{enabled:!0,value:1}})),await T(0),t.strictEqual(r.count,2),t.strictEqual(r.contains(i),!1),t.strictEqual(r.contains(s),!0),t.strictEqual(r.contains(a),!1),t.strictEqual(r.contains(n),!0),t.strictEqual(e.hasEditor({resource:i.resource,typeId:i.typeId,editorId:i.editorId}),!1),t.strictEqual(e.hasEditor({resource:s.resource,typeId:s.typeId,editorId:s.editorId}),!0),t.strictEqual(e.hasEditor({resource:a.resource,typeId:a.typeId,editorId:a.editorId}),!1),t.strictEqual(e.hasEditor({resource:n.resource,typeId:n.typeId,editorId:n.editorId}),!0);const y=u.add(new p(E.parse("foo://bar5"),I));await o.openEditor(y,{pinned:!0}),t.strictEqual(r.count,1),t.strictEqual(r.contains(i),!1),t.strictEqual(r.contains(s),!0),t.strictEqual(r.contains(a),!1),t.strictEqual(r.contains(n),!1),t.strictEqual(o.contains(y),!0),t.strictEqual(e.hasEditor({resource:i.resource,typeId:i.typeId,editorId:i.editorId}),!1),t.strictEqual(e.hasEditor({resource:s.resource,typeId:s.typeId,editorId:s.editorId}),!0),t.strictEqual(e.hasEditor({resource:a.resource,typeId:a.typeId,editorId:a.editorId}),!1),t.strictEqual(e.hasEditor({resource:n.resource,typeId:n.typeId,editorId:n.editorId}),!1),t.strictEqual(e.hasEditor({resource:y.resource,typeId:y.typeId,editorId:y.editorId}),!0)}),test("observer closes editors when limit reached (in group)",async()=>{const[c]=await h();u.add(c.enforcePartOptions({limit:{enabled:!0,value:3,perEditorGroup:!0}}));const d=u.add(new f),e=u.add(new q(void 0,c,d)),r=c.activeGroup,o=u.add(c.addGroup(r,v.RIGHT)),i=u.add(new p(E.parse("foo://bar1"),I)),s=u.add(new p(E.parse("foo://bar2"),I)),a=u.add(new p(E.parse("foo://bar3"),I)),n=u.add(new p(E.parse("foo://bar4"),I));await r.openEditor(i,{pinned:!0}),await r.openEditor(s,{pinned:!0}),await r.openEditor(a,{pinned:!0}),await r.openEditor(n,{pinned:!0}),t.strictEqual(r.count,3),t.strictEqual(r.contains(i),!1),t.strictEqual(r.contains(s),!0),t.strictEqual(r.contains(a),!0),t.strictEqual(r.contains(n),!0),t.strictEqual(e.hasEditor({resource:i.resource,typeId:i.typeId,editorId:i.editorId}),!1),t.strictEqual(e.hasEditor({resource:s.resource,typeId:s.typeId,editorId:s.editorId}),!0),t.strictEqual(e.hasEditor({resource:a.resource,typeId:a.typeId,editorId:a.editorId}),!0),t.strictEqual(e.hasEditor({resource:n.resource,typeId:n.typeId,editorId:n.editorId}),!0),await o.openEditor(i,{pinned:!0}),await o.openEditor(s,{pinned:!0}),await o.openEditor(a,{pinned:!0}),await o.openEditor(n,{pinned:!0}),t.strictEqual(o.count,3),t.strictEqual(o.contains(i),!1),t.strictEqual(o.contains(s),!0),t.strictEqual(o.contains(a),!0),t.strictEqual(o.contains(n),!0),t.strictEqual(e.hasEditor({resource:i.resource,typeId:i.typeId,editorId:i.editorId}),!1),t.strictEqual(e.hasEditor({resource:s.resource,typeId:s.typeId,editorId:s.editorId}),!0),t.strictEqual(e.hasEditor({resource:a.resource,typeId:a.typeId,editorId:a.editorId}),!0),t.strictEqual(e.hasEditor({resource:n.resource,typeId:n.typeId,editorId:n.editorId}),!0),u.add(c.enforcePartOptions({limit:{enabled:!0,value:1,perEditorGroup:!0}})),await T(10),t.strictEqual(r.count,1),t.strictEqual(r.contains(i),!1),t.strictEqual(r.contains(s),!1),t.strictEqual(r.contains(a),!1),t.strictEqual(r.contains(n),!0),t.strictEqual(o.count,1),t.strictEqual(o.contains(i),!1),t.strictEqual(o.contains(s),!1),t.strictEqual(o.contains(a),!1),t.strictEqual(o.contains(n),!0),t.strictEqual(e.hasEditor({resource:i.resource,typeId:i.typeId,editorId:i.editorId}),!1),t.strictEqual(e.hasEditor({resource:s.resource,typeId:s.typeId,editorId:s.editorId}),!1),t.strictEqual(e.hasEditor({resource:a.resource,typeId:a.typeId,editorId:a.editorId}),!1),t.strictEqual(e.hasEditor({resource:n.resource,typeId:n.typeId,editorId:n.editorId}),!0)}),test("observer does not close sticky",async()=>{const[c]=await h();u.add(c.enforcePartOptions({limit:{enabled:!0,value:3}}));const d=u.add(new f),e=u.add(new q(void 0,c,d)),r=c.activeGroup,o=u.add(new p(E.parse("foo://bar1"),I)),i=u.add(new p(E.parse("foo://bar2"),I)),s=u.add(new p(E.parse("foo://bar3"),I)),a=u.add(new p(E.parse("foo://bar4"),I));await r.openEditor(o,{pinned:!0,sticky:!0}),await r.openEditor(i,{pinned:!0}),await r.openEditor(s,{pinned:!0}),await r.openEditor(a,{pinned:!0}),t.strictEqual(r.count,3),t.strictEqual(r.contains(o),!0),t.strictEqual(r.contains(i),!1),t.strictEqual(r.contains(s),!0),t.strictEqual(r.contains(a),!0),t.strictEqual(e.hasEditor({resource:o.resource,typeId:o.typeId,editorId:o.editorId}),!0),t.strictEqual(e.hasEditor({resource:i.resource,typeId:i.typeId,editorId:i.editorId}),!1),t.strictEqual(e.hasEditor({resource:s.resource,typeId:s.typeId,editorId:s.editorId}),!0),t.strictEqual(e.hasEditor({resource:a.resource,typeId:a.typeId,editorId:a.editorId}),!0)}),test("observer does not close scratchpads",async()=>{const[c]=await h();u.add(c.enforcePartOptions({limit:{enabled:!0,value:3}}));const d=u.add(new f),e=u.add(new q(void 0,c,d)),r=c.activeGroup,o=u.add(new p(E.parse("foo://bar1"),I));o.capabilities=m.Untitled|m.Scratchpad;const i=u.add(new p(E.parse("foo://bar2"),I)),s=u.add(new p(E.parse("foo://bar3"),I)),a=u.add(new p(E.parse("foo://bar4"),I));await r.openEditor(o,{pinned:!0}),await r.openEditor(i,{pinned:!0}),await r.openEditor(s,{pinned:!0}),await r.openEditor(a,{pinned:!0}),t.strictEqual(r.count,3),t.strictEqual(r.contains(o),!0),t.strictEqual(r.contains(i),!1),t.strictEqual(r.contains(s),!0),t.strictEqual(r.contains(a),!0),t.strictEqual(e.hasEditor({resource:o.resource,typeId:o.typeId,editorId:o.editorId}),!0),t.strictEqual(e.hasEditor({resource:i.resource,typeId:i.typeId,editorId:i.editorId}),!1),t.strictEqual(e.hasEditor({resource:s.resource,typeId:s.typeId,editorId:s.editorId}),!0),t.strictEqual(e.hasEditor({resource:a.resource,typeId:a.typeId,editorId:a.editorId}),!0)}),C()});
