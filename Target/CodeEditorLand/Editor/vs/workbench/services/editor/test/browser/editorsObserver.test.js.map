{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/editor/test/browser/editorsObserver.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { IEditorFactoryRegistry, EditorExtensions, EditorInputCapabilities } from '../../../../common/editor.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { workbenchInstantiationService, TestFileEditorInput, registerTestEditor, TestEditorPart, createEditorPart, registerTestSideBySideEditor } from '../../../../test/browser/workbenchTestServices.js';\nimport { Registry } from '../../../../../platform/registry/common/platform.js';\nimport { EditorPart } from '../../../../browser/parts/editor/editorPart.js';\nimport { SyncDescriptor } from '../../../../../platform/instantiation/common/descriptors.js';\nimport { GroupDirection, IEditorGroupsService } from '../../common/editorGroupsService.js';\nimport { EditorActivation } from '../../../../../platform/editor/common/editor.js';\nimport { WillSaveStateReason } from '../../../../../platform/storage/common/storage.js';\nimport { DisposableStore, toDisposable } from '../../../../../base/common/lifecycle.js';\nimport { EditorsObserver } from '../../../../browser/parts/editor/editorsObserver.js';\nimport { timeout } from '../../../../../base/common/async.js';\nimport { TestStorageService } from '../../../../test/common/workbenchTestServices.js';\nimport { SideBySideEditorInput } from '../../../../common/editor/sideBySideEditorInput.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\n\nsuite('EditorsObserver', function () {\n\n\tconst TEST_EDITOR_ID = 'MyTestEditorForEditorsObserver';\n\tconst TEST_EDITOR_INPUT_ID = 'testEditorInputForEditorsObserver';\n\tconst TEST_SERIALIZABLE_EDITOR_INPUT_ID = 'testSerializableEditorInputForEditorsObserver';\n\n\tconst disposables = new DisposableStore();\n\n\tsetup(() => {\n\t\tdisposables.add(registerTestEditor(TEST_EDITOR_ID, [new SyncDescriptor(TestFileEditorInput)], TEST_SERIALIZABLE_EDITOR_INPUT_ID));\n\t\tdisposables.add(registerTestSideBySideEditor());\n\t});\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t});\n\n\tasync function createPart(): Promise<[TestEditorPart, IInstantiationService]> {\n\t\tconst instantiationService = workbenchInstantiationService(undefined, disposables);\n\t\tinstantiationService.invokeFunction(accessor => Registry.as<IEditorFactoryRegistry>(EditorExtensions.EditorFactory).start(accessor));\n\n\t\tconst part = await createEditorPart(instantiationService, disposables);\n\t\tinstantiationService.stub(IEditorGroupsService, part);\n\t\tdisposables.add(toDisposable(() => part.clearState()));\n\n\t\treturn [part, instantiationService];\n\t}\n\n\tasync function createEditorObserver(scoped = false): Promise<[EditorPart, EditorsObserver, IInstantiationService]> {\n\t\tconst [part, instantiationService] = await createPart();\n\n\t\tconst observer = disposables.add(new EditorsObserver(scoped ? part : undefined, part, disposables.add(new TestStorageService())));\n\n\t\treturn [part, observer, instantiationService];\n\t}\n\n\ttest('basics (single group)', async () => {\n\t\tawait testSingleGroupBasics();\n\t});\n\n\ttest('basics (single group, scoped)', async () => {\n\t\tawait testSingleGroupBasics(true);\n\t});\n\n\tasync function testSingleGroupBasics(scoped = false) {\n\t\tconst [part, observer] = await createEditorObserver();\n\n\t\tlet onDidMostRecentlyActiveEditorsChangeCalled = false;\n\t\tdisposables.add(observer.onDidMostRecentlyActiveEditorsChange(() => {\n\t\t\tonDidMostRecentlyActiveEditorsChangeCalled = true;\n\t\t}));\n\n\t\tlet currentEditorsMRU = observer.editors;\n\t\tassert.strictEqual(currentEditorsMRU.length, 0);\n\t\tassert.strictEqual(onDidMostRecentlyActiveEditorsChangeCalled, false);\n\n\t\tconst input1 = new TestFileEditorInput(URI.parse('foo://bar1'), TEST_SERIALIZABLE_EDITOR_INPUT_ID);\n\n\t\tawait part.activeGroup.openEditor(input1, { pinned: true });\n\n\t\tcurrentEditorsMRU = observer.editors;\n\t\tassert.strictEqual(currentEditorsMRU.length, 1);\n\t\tassert.strictEqual(currentEditorsMRU[0].groupId, part.activeGroup.id);\n\t\tassert.strictEqual(currentEditorsMRU[0].editor, input1);\n\t\tassert.strictEqual(onDidMostRecentlyActiveEditorsChangeCalled, true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input1.resource, typeId: input1.typeId, editorId: input1.editorId }), true);\n\t\tassert.strictEqual(observer.hasEditors(input1.resource), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input1.resource, typeId: 'unknownTypeId', editorId: 'unknownTypeId' }), false);\n\n\t\tconst input2 = new TestFileEditorInput(URI.parse('foo://bar2'), TEST_SERIALIZABLE_EDITOR_INPUT_ID);\n\t\tconst input3 = new TestFileEditorInput(URI.parse('foo://bar3'), TEST_SERIALIZABLE_EDITOR_INPUT_ID);\n\n\t\tassert.strictEqual(observer.hasEditors(input2.resource), false);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input2.resource, typeId: input2.typeId, editorId: input2.editorId }), false);\n\n\t\tawait part.activeGroup.openEditor(input2, { pinned: true });\n\t\tawait part.activeGroup.openEditor(input3, { pinned: true });\n\n\t\tcurrentEditorsMRU = observer.editors;\n\t\tassert.strictEqual(currentEditorsMRU.length, 3);\n\t\tassert.strictEqual(currentEditorsMRU[0].groupId, part.activeGroup.id);\n\t\tassert.strictEqual(currentEditorsMRU[0].editor, input3);\n\t\tassert.strictEqual(currentEditorsMRU[1].groupId, part.activeGroup.id);\n\t\tassert.strictEqual(currentEditorsMRU[1].editor, input2);\n\t\tassert.strictEqual(currentEditorsMRU[2].groupId, part.activeGroup.id);\n\t\tassert.strictEqual(currentEditorsMRU[2].editor, input1);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input2.resource, typeId: input2.typeId, editorId: input2.editorId }), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input3.resource, typeId: input3.typeId, editorId: input3.editorId }), true);\n\n\t\tawait part.activeGroup.openEditor(input2, { pinned: true });\n\n\t\tcurrentEditorsMRU = observer.editors;\n\t\tassert.strictEqual(currentEditorsMRU.length, 3);\n\t\tassert.strictEqual(currentEditorsMRU[0].groupId, part.activeGroup.id);\n\t\tassert.strictEqual(currentEditorsMRU[0].editor, input2);\n\t\tassert.strictEqual(currentEditorsMRU[1].groupId, part.activeGroup.id);\n\t\tassert.strictEqual(currentEditorsMRU[1].editor, input3);\n\t\tassert.strictEqual(currentEditorsMRU[2].groupId, part.activeGroup.id);\n\t\tassert.strictEqual(currentEditorsMRU[2].editor, input1);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input1.resource, typeId: input1.typeId, editorId: input1.editorId }), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input2.resource, typeId: input2.typeId, editorId: input2.editorId }), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input3.resource, typeId: input3.typeId, editorId: input3.editorId }), true);\n\n\t\tonDidMostRecentlyActiveEditorsChangeCalled = false;\n\t\tawait part.activeGroup.closeEditor(input1);\n\n\t\tcurrentEditorsMRU = observer.editors;\n\t\tassert.strictEqual(currentEditorsMRU.length, 2);\n\t\tassert.strictEqual(currentEditorsMRU[0].groupId, part.activeGroup.id);\n\t\tassert.strictEqual(currentEditorsMRU[0].editor, input2);\n\t\tassert.strictEqual(currentEditorsMRU[1].groupId, part.activeGroup.id);\n\t\tassert.strictEqual(currentEditorsMRU[1].editor, input3);\n\t\tassert.strictEqual(onDidMostRecentlyActiveEditorsChangeCalled, true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input1.resource, typeId: input1.typeId, editorId: input1.editorId }), false);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input2.resource, typeId: input2.typeId, editorId: input2.editorId }), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input3.resource, typeId: input3.typeId, editorId: input3.editorId }), true);\n\n\t\tawait part.activeGroup.closeAllEditors();\n\t\tcurrentEditorsMRU = observer.editors;\n\t\tassert.strictEqual(currentEditorsMRU.length, 0);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input1.resource, typeId: input1.typeId, editorId: input1.editorId }), false);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input2.resource, typeId: input2.typeId, editorId: input2.editorId }), false);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input3.resource, typeId: input3.typeId, editorId: input3.editorId }), false);\n\t}\n\n\ttest('basics (multi group)', async () => {\n\t\tconst [part, observer] = await createEditorObserver();\n\n\t\tconst rootGroup = part.activeGroup;\n\n\t\tlet currentEditorsMRU = observer.editors;\n\t\tassert.strictEqual(currentEditorsMRU.length, 0);\n\n\t\tconst sideGroup = disposables.add(part.addGroup(rootGroup, GroupDirection.RIGHT));\n\n\t\tconst input1 = new TestFileEditorInput(URI.parse('foo://bar1'), TEST_SERIALIZABLE_EDITOR_INPUT_ID);\n\n\t\tawait rootGroup.openEditor(input1, { pinned: true, activation: EditorActivation.ACTIVATE });\n\t\tawait sideGroup.openEditor(input1, { pinned: true, activation: EditorActivation.ACTIVATE });\n\n\t\tcurrentEditorsMRU = observer.editors;\n\t\tassert.strictEqual(currentEditorsMRU.length, 2);\n\t\tassert.strictEqual(currentEditorsMRU[0].groupId, sideGroup.id);\n\t\tassert.strictEqual(currentEditorsMRU[0].editor, input1);\n\t\tassert.strictEqual(currentEditorsMRU[1].groupId, rootGroup.id);\n\t\tassert.strictEqual(currentEditorsMRU[1].editor, input1);\n\t\tassert.strictEqual(observer.hasEditors(input1.resource), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input1.resource, typeId: input1.typeId, editorId: input1.editorId }), true);\n\n\t\tawait rootGroup.openEditor(input1, { pinned: true, activation: EditorActivation.ACTIVATE });\n\n\t\tcurrentEditorsMRU = observer.editors;\n\t\tassert.strictEqual(currentEditorsMRU.length, 2);\n\t\tassert.strictEqual(currentEditorsMRU[0].groupId, rootGroup.id);\n\t\tassert.strictEqual(currentEditorsMRU[0].editor, input1);\n\t\tassert.strictEqual(currentEditorsMRU[1].groupId, sideGroup.id);\n\t\tassert.strictEqual(currentEditorsMRU[1].editor, input1);\n\t\tassert.strictEqual(observer.hasEditors(input1.resource), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input1.resource, typeId: input1.typeId, editorId: input1.editorId }), true);\n\n\t\t// Opening an editor inactive should not change\n\t\t// the most recent editor, but rather put it behind\n\t\tconst input2 = disposables.add(new TestFileEditorInput(URI.parse('foo://bar2'), TEST_SERIALIZABLE_EDITOR_INPUT_ID));\n\n\t\tawait rootGroup.openEditor(input2, { inactive: true });\n\n\t\tcurrentEditorsMRU = observer.editors;\n\t\tassert.strictEqual(currentEditorsMRU.length, 3);\n\t\tassert.strictEqual(currentEditorsMRU[0].groupId, rootGroup.id);\n\t\tassert.strictEqual(currentEditorsMRU[0].editor, input1);\n\t\tassert.strictEqual(currentEditorsMRU[1].groupId, rootGroup.id);\n\t\tassert.strictEqual(currentEditorsMRU[1].editor, input2);\n\t\tassert.strictEqual(currentEditorsMRU[2].groupId, sideGroup.id);\n\t\tassert.strictEqual(currentEditorsMRU[2].editor, input1);\n\t\tassert.strictEqual(observer.hasEditors(input1.resource), true);\n\t\tassert.strictEqual(observer.hasEditors(input2.resource), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input1.resource, typeId: input1.typeId, editorId: input1.editorId }), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input2.resource, typeId: input2.typeId, editorId: input2.editorId }), true);\n\n\t\tawait rootGroup.closeAllEditors();\n\n\t\tcurrentEditorsMRU = observer.editors;\n\t\tassert.strictEqual(currentEditorsMRU.length, 1);\n\t\tassert.strictEqual(currentEditorsMRU[0].groupId, sideGroup.id);\n\t\tassert.strictEqual(currentEditorsMRU[0].editor, input1);\n\t\tassert.strictEqual(observer.hasEditors(input1.resource), true);\n\t\tassert.strictEqual(observer.hasEditors(input2.resource), false);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input1.resource, typeId: input1.typeId, editorId: input1.editorId }), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input2.resource, typeId: input2.typeId, editorId: input2.editorId }), false);\n\n\t\tawait sideGroup.closeAllEditors();\n\n\t\tcurrentEditorsMRU = observer.editors;\n\t\tassert.strictEqual(currentEditorsMRU.length, 0);\n\t\tassert.strictEqual(observer.hasEditors(input1.resource), false);\n\t\tassert.strictEqual(observer.hasEditors(input2.resource), false);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input1.resource, typeId: input1.typeId, editorId: input1.editorId }), false);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input2.resource, typeId: input2.typeId, editorId: input2.editorId }), false);\n\n\t\tpart.removeGroup(sideGroup);\n\t});\n\n\ttest('hasEditor/hasEditors - same resource, different type id', async () => {\n\t\tconst [part, observer] = await createEditorObserver();\n\n\t\tconst input1 = disposables.add(new TestFileEditorInput(URI.parse('foo://bar1'), TEST_SERIALIZABLE_EDITOR_INPUT_ID));\n\t\tconst input2 = disposables.add(new TestFileEditorInput(input1.resource, 'otherTypeId'));\n\n\t\tassert.strictEqual(observer.hasEditors(input1.resource), false);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input1.resource, typeId: input1.typeId, editorId: input1.editorId }), false);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input2.resource, typeId: input2.typeId, editorId: input2.editorId }), false);\n\n\t\tawait part.activeGroup.openEditor(input1, { pinned: true });\n\n\t\tassert.strictEqual(observer.hasEditors(input1.resource), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input1.resource, typeId: input1.typeId, editorId: input1.editorId }), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input2.resource, typeId: input2.typeId, editorId: input2.editorId }), false);\n\n\t\tawait part.activeGroup.openEditor(input2, { pinned: true });\n\n\t\tassert.strictEqual(observer.hasEditors(input1.resource), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input1.resource, typeId: input1.typeId, editorId: input1.editorId }), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input2.resource, typeId: input2.typeId, editorId: input2.editorId }), true);\n\n\t\tawait part.activeGroup.closeEditor(input2);\n\n\t\tassert.strictEqual(observer.hasEditors(input1.resource), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input1.resource, typeId: input1.typeId, editorId: input1.editorId }), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input2.resource, typeId: input2.typeId, editorId: input2.editorId }), false);\n\n\t\tawait part.activeGroup.closeEditor(input1);\n\n\t\tassert.strictEqual(observer.hasEditors(input1.resource), false);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input1.resource, typeId: input1.typeId, editorId: input1.editorId }), false);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input2.resource, typeId: input2.typeId, editorId: input2.editorId }), false);\n\t});\n\n\ttest('hasEditor/hasEditors - side by side editor support', async () => {\n\t\tconst [part, observer, instantiationService] = await createEditorObserver();\n\n\t\tconst primary = disposables.add(new TestFileEditorInput(URI.parse('foo://bar1'), TEST_SERIALIZABLE_EDITOR_INPUT_ID));\n\t\tconst secondary = disposables.add(new TestFileEditorInput(URI.parse('foo://bar2'), 'otherTypeId'));\n\n\t\tconst input = instantiationService.createInstance(SideBySideEditorInput, 'name', undefined, secondary, primary);\n\n\t\tassert.strictEqual(observer.hasEditors(primary.resource), false);\n\t\tassert.strictEqual(observer.hasEditor({ resource: primary.resource, typeId: primary.typeId, editorId: primary.editorId }), false);\n\t\tassert.strictEqual(observer.hasEditor({ resource: secondary.resource, typeId: secondary.typeId, editorId: secondary.editorId }), false);\n\n\t\tawait part.activeGroup.openEditor(input, { pinned: true });\n\n\t\tassert.strictEqual(observer.hasEditors(primary.resource), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: primary.resource, typeId: primary.typeId, editorId: primary.editorId }), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: secondary.resource, typeId: secondary.typeId, editorId: secondary.editorId }), false);\n\n\t\tawait part.activeGroup.openEditor(primary, { pinned: true });\n\n\t\tassert.strictEqual(observer.hasEditors(primary.resource), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: primary.resource, typeId: primary.typeId, editorId: primary.editorId }), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: secondary.resource, typeId: secondary.typeId, editorId: secondary.editorId }), false);\n\n\t\tawait part.activeGroup.closeEditor(input);\n\n\t\tassert.strictEqual(observer.hasEditors(primary.resource), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: primary.resource, typeId: primary.typeId, editorId: primary.editorId }), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: secondary.resource, typeId: secondary.typeId, editorId: secondary.editorId }), false);\n\n\t\tawait part.activeGroup.closeEditor(primary);\n\n\t\tassert.strictEqual(observer.hasEditors(primary.resource), false);\n\t\tassert.strictEqual(observer.hasEditor({ resource: primary.resource, typeId: primary.typeId, editorId: primary.editorId }), false);\n\t\tassert.strictEqual(observer.hasEditor({ resource: secondary.resource, typeId: secondary.typeId, editorId: secondary.editorId }), false);\n\t});\n\n\ttest('copy group', async function () {\n\t\tconst [part, observer] = await createEditorObserver();\n\n\t\tconst input1 = disposables.add(new TestFileEditorInput(URI.parse('foo://bar1'), TEST_SERIALIZABLE_EDITOR_INPUT_ID));\n\t\tconst input2 = disposables.add(new TestFileEditorInput(URI.parse('foo://bar2'), TEST_SERIALIZABLE_EDITOR_INPUT_ID));\n\t\tconst input3 = disposables.add(new TestFileEditorInput(URI.parse('foo://bar3'), TEST_SERIALIZABLE_EDITOR_INPUT_ID));\n\n\t\tconst rootGroup = part.activeGroup;\n\n\t\tawait rootGroup.openEditor(input1, { pinned: true });\n\t\tawait rootGroup.openEditor(input2, { pinned: true });\n\t\tawait rootGroup.openEditor(input3, { pinned: true });\n\n\t\tlet currentEditorsMRU = observer.editors;\n\t\tassert.strictEqual(currentEditorsMRU.length, 3);\n\t\tassert.strictEqual(currentEditorsMRU[0].groupId, rootGroup.id);\n\t\tassert.strictEqual(currentEditorsMRU[0].editor, input3);\n\t\tassert.strictEqual(currentEditorsMRU[1].groupId, rootGroup.id);\n\t\tassert.strictEqual(currentEditorsMRU[1].editor, input2);\n\t\tassert.strictEqual(currentEditorsMRU[2].groupId, rootGroup.id);\n\t\tassert.strictEqual(currentEditorsMRU[2].editor, input1);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input1.resource, typeId: input1.typeId, editorId: input1.editorId }), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input2.resource, typeId: input2.typeId, editorId: input2.editorId }), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input3.resource, typeId: input3.typeId, editorId: input3.editorId }), true);\n\n\t\tconst copiedGroup = part.copyGroup(rootGroup, rootGroup, GroupDirection.RIGHT);\n\t\tcopiedGroup.setActive(true);\n\t\tcopiedGroup.focus();\n\n\t\tcurrentEditorsMRU = observer.editors;\n\t\tassert.strictEqual(currentEditorsMRU.length, 6);\n\t\tassert.strictEqual(currentEditorsMRU[0].groupId, copiedGroup.id);\n\t\tassert.strictEqual(currentEditorsMRU[0].editor, input3);\n\t\tassert.strictEqual(currentEditorsMRU[1].groupId, rootGroup.id);\n\t\tassert.strictEqual(currentEditorsMRU[1].editor, input3);\n\t\tassert.strictEqual(currentEditorsMRU[2].groupId, copiedGroup.id);\n\t\tassert.strictEqual(currentEditorsMRU[2].editor, input2);\n\t\tassert.strictEqual(currentEditorsMRU[3].groupId, copiedGroup.id);\n\t\tassert.strictEqual(currentEditorsMRU[3].editor, input1);\n\t\tassert.strictEqual(currentEditorsMRU[4].groupId, rootGroup.id);\n\t\tassert.strictEqual(currentEditorsMRU[4].editor, input2);\n\t\tassert.strictEqual(currentEditorsMRU[5].groupId, rootGroup.id);\n\t\tassert.strictEqual(currentEditorsMRU[5].editor, input1);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input1.resource, typeId: input1.typeId, editorId: input1.editorId }), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input2.resource, typeId: input2.typeId, editorId: input2.editorId }), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input3.resource, typeId: input3.typeId, editorId: input3.editorId }), true);\n\n\t\tawait rootGroup.closeAllEditors();\n\n\t\tassert.strictEqual(observer.hasEditor({ resource: input1.resource, typeId: input1.typeId, editorId: input1.editorId }), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input2.resource, typeId: input2.typeId, editorId: input2.editorId }), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input3.resource, typeId: input3.typeId, editorId: input3.editorId }), true);\n\n\t\tawait copiedGroup.closeAllEditors();\n\n\t\tassert.strictEqual(observer.hasEditor({ resource: input1.resource, typeId: input1.typeId, editorId: input1.editorId }), false);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input2.resource, typeId: input2.typeId, editorId: input2.editorId }), false);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input3.resource, typeId: input3.typeId, editorId: input3.editorId }), false);\n\t});\n\n\ttest('initial editors are part of observer and state is persisted & restored (single group)', async () => {\n\t\tconst [part] = await createPart();\n\n\t\tconst rootGroup = part.activeGroup;\n\n\t\tconst input1 = disposables.add(new TestFileEditorInput(URI.parse('foo://bar1'), TEST_SERIALIZABLE_EDITOR_INPUT_ID));\n\t\tconst input2 = disposables.add(new TestFileEditorInput(URI.parse('foo://bar2'), TEST_SERIALIZABLE_EDITOR_INPUT_ID));\n\t\tconst input3 = disposables.add(new TestFileEditorInput(URI.parse('foo://bar3'), TEST_SERIALIZABLE_EDITOR_INPUT_ID));\n\n\t\tawait rootGroup.openEditor(input1, { pinned: true });\n\t\tawait rootGroup.openEditor(input2, { pinned: true });\n\t\tawait rootGroup.openEditor(input3, { pinned: true });\n\n\t\tconst storage = disposables.add(new TestStorageService());\n\t\tconst observer = disposables.add(new EditorsObserver(undefined, part, storage));\n\t\tawait part.whenReady;\n\n\t\tlet currentEditorsMRU = observer.editors;\n\t\tassert.strictEqual(currentEditorsMRU.length, 3);\n\t\tassert.strictEqual(currentEditorsMRU[0].groupId, rootGroup.id);\n\t\tassert.strictEqual(currentEditorsMRU[0].editor, input3);\n\t\tassert.strictEqual(currentEditorsMRU[1].groupId, rootGroup.id);\n\t\tassert.strictEqual(currentEditorsMRU[1].editor, input2);\n\t\tassert.strictEqual(currentEditorsMRU[2].groupId, rootGroup.id);\n\t\tassert.strictEqual(currentEditorsMRU[2].editor, input1);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input1.resource, typeId: input1.typeId, editorId: input1.editorId }), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input2.resource, typeId: input2.typeId, editorId: input2.editorId }), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input3.resource, typeId: input3.typeId, editorId: input3.editorId }), true);\n\n\t\tstorage.testEmitWillSaveState(WillSaveStateReason.SHUTDOWN);\n\n\t\tconst restoredObserver = disposables.add(new EditorsObserver(undefined, part, storage));\n\t\tawait part.whenReady;\n\n\t\tcurrentEditorsMRU = restoredObserver.editors;\n\t\tassert.strictEqual(currentEditorsMRU.length, 3);\n\t\tassert.strictEqual(currentEditorsMRU[0].groupId, rootGroup.id);\n\t\tassert.strictEqual(currentEditorsMRU[0].editor, input3);\n\t\tassert.strictEqual(currentEditorsMRU[1].groupId, rootGroup.id);\n\t\tassert.strictEqual(currentEditorsMRU[1].editor, input2);\n\t\tassert.strictEqual(currentEditorsMRU[2].groupId, rootGroup.id);\n\t\tassert.strictEqual(currentEditorsMRU[2].editor, input1);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input1.resource, typeId: input1.typeId, editorId: input1.editorId }), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input2.resource, typeId: input2.typeId, editorId: input2.editorId }), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input3.resource, typeId: input3.typeId, editorId: input3.editorId }), true);\n\t});\n\n\ttest('initial editors are part of observer (multi group)', async () => {\n\t\tconst [part] = await createPart();\n\n\t\tconst rootGroup = part.activeGroup;\n\n\t\tconst input1 = disposables.add(new TestFileEditorInput(URI.parse('foo://bar1'), TEST_SERIALIZABLE_EDITOR_INPUT_ID));\n\t\tconst input2 = disposables.add(new TestFileEditorInput(URI.parse('foo://bar2'), TEST_SERIALIZABLE_EDITOR_INPUT_ID));\n\t\tconst input3 = disposables.add(new TestFileEditorInput(URI.parse('foo://bar3'), TEST_SERIALIZABLE_EDITOR_INPUT_ID));\n\n\t\tawait rootGroup.openEditor(input1, { pinned: true });\n\t\tawait rootGroup.openEditor(input2, { pinned: true });\n\n\t\tconst sideGroup = disposables.add(part.addGroup(rootGroup, GroupDirection.RIGHT));\n\t\tawait sideGroup.openEditor(input3, { pinned: true });\n\n\t\tconst storage = disposables.add(new TestStorageService());\n\t\tconst observer = disposables.add(new EditorsObserver(undefined, part, storage));\n\t\tawait part.whenReady;\n\n\t\tlet currentEditorsMRU = observer.editors;\n\t\tassert.strictEqual(currentEditorsMRU.length, 3);\n\t\tassert.strictEqual(currentEditorsMRU[0].groupId, sideGroup.id);\n\t\tassert.strictEqual(currentEditorsMRU[0].editor, input3);\n\t\tassert.strictEqual(currentEditorsMRU[1].groupId, rootGroup.id);\n\t\tassert.strictEqual(currentEditorsMRU[1].editor, input2);\n\t\tassert.strictEqual(currentEditorsMRU[2].groupId, rootGroup.id);\n\t\tassert.strictEqual(currentEditorsMRU[2].editor, input1);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input1.resource, typeId: input1.typeId, editorId: input1.editorId }), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input2.resource, typeId: input2.typeId, editorId: input2.editorId }), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input3.resource, typeId: input3.typeId, editorId: input3.editorId }), true);\n\n\t\tstorage.testEmitWillSaveState(WillSaveStateReason.SHUTDOWN);\n\n\t\tconst restoredObserver = disposables.add(new EditorsObserver(undefined, part, storage));\n\t\tawait part.whenReady;\n\n\t\tcurrentEditorsMRU = restoredObserver.editors;\n\t\tassert.strictEqual(currentEditorsMRU.length, 3);\n\t\tassert.strictEqual(currentEditorsMRU[0].groupId, sideGroup.id);\n\t\tassert.strictEqual(currentEditorsMRU[0].editor, input3);\n\t\tassert.strictEqual(currentEditorsMRU[1].groupId, rootGroup.id);\n\t\tassert.strictEqual(currentEditorsMRU[1].editor, input2);\n\t\tassert.strictEqual(currentEditorsMRU[2].groupId, rootGroup.id);\n\t\tassert.strictEqual(currentEditorsMRU[2].editor, input1);\n\t\tassert.strictEqual(restoredObserver.hasEditor({ resource: input1.resource, typeId: input1.typeId, editorId: input1.editorId }), true);\n\t\tassert.strictEqual(restoredObserver.hasEditor({ resource: input2.resource, typeId: input2.typeId, editorId: input2.editorId }), true);\n\t\tassert.strictEqual(restoredObserver.hasEditor({ resource: input3.resource, typeId: input3.typeId, editorId: input3.editorId }), true);\n\t});\n\n\ttest('observer does not restore editors that cannot be serialized', async () => {\n\t\tconst [part] = await createPart();\n\n\t\tconst rootGroup = part.activeGroup;\n\n\t\tconst input1 = disposables.add(new TestFileEditorInput(URI.parse('foo://bar1'), TEST_EDITOR_INPUT_ID));\n\n\t\tawait rootGroup.openEditor(input1, { pinned: true });\n\n\t\tconst storage = disposables.add(new TestStorageService());\n\t\tconst observer = disposables.add(new EditorsObserver(undefined, part, storage));\n\t\tawait part.whenReady;\n\n\t\tlet currentEditorsMRU = observer.editors;\n\t\tassert.strictEqual(currentEditorsMRU.length, 1);\n\t\tassert.strictEqual(currentEditorsMRU[0].groupId, rootGroup.id);\n\t\tassert.strictEqual(currentEditorsMRU[0].editor, input1);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input1.resource, typeId: input1.typeId, editorId: input1.editorId }), true);\n\n\t\tstorage.testEmitWillSaveState(WillSaveStateReason.SHUTDOWN);\n\n\t\tconst restoredObserver = disposables.add(new EditorsObserver(undefined, part, storage));\n\t\tawait part.whenReady;\n\n\t\tcurrentEditorsMRU = restoredObserver.editors;\n\t\tassert.strictEqual(currentEditorsMRU.length, 0);\n\t\tassert.strictEqual(restoredObserver.hasEditor({ resource: input1.resource, typeId: input1.typeId, editorId: input1.editorId }), false);\n\t});\n\n\ttest('observer closes editors when limit reached (across all groups)', async () => {\n\t\tconst [part] = await createPart();\n\t\tdisposables.add(part.enforcePartOptions({ limit: { enabled: true, value: 3 } }));\n\n\t\tconst storage = disposables.add(new TestStorageService());\n\t\tconst observer = disposables.add(new EditorsObserver(undefined, part, storage));\n\n\t\tconst rootGroup = part.activeGroup;\n\t\tconst sideGroup = disposables.add(part.addGroup(rootGroup, GroupDirection.RIGHT));\n\n\t\tconst input1 = disposables.add(new TestFileEditorInput(URI.parse('foo://bar1'), TEST_EDITOR_INPUT_ID));\n\t\tconst input2 = disposables.add(new TestFileEditorInput(URI.parse('foo://bar2'), TEST_EDITOR_INPUT_ID));\n\t\tconst input3 = disposables.add(new TestFileEditorInput(URI.parse('foo://bar3'), TEST_EDITOR_INPUT_ID));\n\t\tconst input4 = disposables.add(new TestFileEditorInput(URI.parse('foo://bar4'), TEST_EDITOR_INPUT_ID));\n\n\t\tawait rootGroup.openEditor(input1, { pinned: true });\n\t\tawait rootGroup.openEditor(input2, { pinned: true });\n\t\tawait rootGroup.openEditor(input3, { pinned: true });\n\t\tawait rootGroup.openEditor(input4, { pinned: true });\n\n\t\tassert.strictEqual(rootGroup.count, 3);\n\t\tassert.strictEqual(rootGroup.contains(input1), false);\n\t\tassert.strictEqual(rootGroup.contains(input2), true);\n\t\tassert.strictEqual(rootGroup.contains(input3), true);\n\t\tassert.strictEqual(rootGroup.contains(input4), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input1.resource, typeId: input1.typeId, editorId: input1.editorId }), false);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input2.resource, typeId: input2.typeId, editorId: input2.editorId }), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input3.resource, typeId: input3.typeId, editorId: input3.editorId }), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input4.resource, typeId: input4.typeId, editorId: input4.editorId }), true);\n\n\t\tinput2.setDirty();\n\t\tdisposables.add(part.enforcePartOptions({ limit: { enabled: true, value: 1 } }));\n\n\t\tawait timeout(0);\n\n\t\tassert.strictEqual(rootGroup.count, 2);\n\t\tassert.strictEqual(rootGroup.contains(input1), false);\n\t\tassert.strictEqual(rootGroup.contains(input2), true); // dirty\n\t\tassert.strictEqual(rootGroup.contains(input3), false);\n\t\tassert.strictEqual(rootGroup.contains(input4), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input1.resource, typeId: input1.typeId, editorId: input1.editorId }), false);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input2.resource, typeId: input2.typeId, editorId: input2.editorId }), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input3.resource, typeId: input3.typeId, editorId: input3.editorId }), false);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input4.resource, typeId: input4.typeId, editorId: input4.editorId }), true);\n\n\t\tconst input5 = disposables.add(new TestFileEditorInput(URI.parse('foo://bar5'), TEST_EDITOR_INPUT_ID));\n\t\tawait sideGroup.openEditor(input5, { pinned: true });\n\n\t\tassert.strictEqual(rootGroup.count, 1);\n\t\tassert.strictEqual(rootGroup.contains(input1), false);\n\t\tassert.strictEqual(rootGroup.contains(input2), true); // dirty\n\t\tassert.strictEqual(rootGroup.contains(input3), false);\n\t\tassert.strictEqual(rootGroup.contains(input4), false);\n\t\tassert.strictEqual(sideGroup.contains(input5), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input1.resource, typeId: input1.typeId, editorId: input1.editorId }), false);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input2.resource, typeId: input2.typeId, editorId: input2.editorId }), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input3.resource, typeId: input3.typeId, editorId: input3.editorId }), false);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input4.resource, typeId: input4.typeId, editorId: input4.editorId }), false);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input5.resource, typeId: input5.typeId, editorId: input5.editorId }), true);\n\t});\n\n\ttest('observer closes editors when limit reached (in group)', async () => {\n\t\tconst [part] = await createPart();\n\t\tdisposables.add(part.enforcePartOptions({ limit: { enabled: true, value: 3, perEditorGroup: true } }));\n\n\t\tconst storage = disposables.add(new TestStorageService());\n\t\tconst observer = disposables.add(new EditorsObserver(undefined, part, storage));\n\n\t\tconst rootGroup = part.activeGroup;\n\t\tconst sideGroup = disposables.add(part.addGroup(rootGroup, GroupDirection.RIGHT));\n\n\t\tconst input1 = disposables.add(new TestFileEditorInput(URI.parse('foo://bar1'), TEST_EDITOR_INPUT_ID));\n\t\tconst input2 = disposables.add(new TestFileEditorInput(URI.parse('foo://bar2'), TEST_EDITOR_INPUT_ID));\n\t\tconst input3 = disposables.add(new TestFileEditorInput(URI.parse('foo://bar3'), TEST_EDITOR_INPUT_ID));\n\t\tconst input4 = disposables.add(new TestFileEditorInput(URI.parse('foo://bar4'), TEST_EDITOR_INPUT_ID));\n\n\t\tawait rootGroup.openEditor(input1, { pinned: true });\n\t\tawait rootGroup.openEditor(input2, { pinned: true });\n\t\tawait rootGroup.openEditor(input3, { pinned: true });\n\t\tawait rootGroup.openEditor(input4, { pinned: true });\n\n\t\tassert.strictEqual(rootGroup.count, 3); // 1 editor got closed due to our limit!\n\t\tassert.strictEqual(rootGroup.contains(input1), false);\n\t\tassert.strictEqual(rootGroup.contains(input2), true);\n\t\tassert.strictEqual(rootGroup.contains(input3), true);\n\t\tassert.strictEqual(rootGroup.contains(input4), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input1.resource, typeId: input1.typeId, editorId: input1.editorId }), false);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input2.resource, typeId: input2.typeId, editorId: input2.editorId }), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input3.resource, typeId: input3.typeId, editorId: input3.editorId }), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input4.resource, typeId: input4.typeId, editorId: input4.editorId }), true);\n\n\t\tawait sideGroup.openEditor(input1, { pinned: true });\n\t\tawait sideGroup.openEditor(input2, { pinned: true });\n\t\tawait sideGroup.openEditor(input3, { pinned: true });\n\t\tawait sideGroup.openEditor(input4, { pinned: true });\n\n\t\tassert.strictEqual(sideGroup.count, 3);\n\t\tassert.strictEqual(sideGroup.contains(input1), false);\n\t\tassert.strictEqual(sideGroup.contains(input2), true);\n\t\tassert.strictEqual(sideGroup.contains(input3), true);\n\t\tassert.strictEqual(sideGroup.contains(input4), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input1.resource, typeId: input1.typeId, editorId: input1.editorId }), false);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input2.resource, typeId: input2.typeId, editorId: input2.editorId }), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input3.resource, typeId: input3.typeId, editorId: input3.editorId }), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input4.resource, typeId: input4.typeId, editorId: input4.editorId }), true);\n\n\t\tdisposables.add(part.enforcePartOptions({ limit: { enabled: true, value: 1, perEditorGroup: true } }));\n\n\t\tawait timeout(10);\n\n\t\tassert.strictEqual(rootGroup.count, 1);\n\t\tassert.strictEqual(rootGroup.contains(input1), false);\n\t\tassert.strictEqual(rootGroup.contains(input2), false);\n\t\tassert.strictEqual(rootGroup.contains(input3), false);\n\t\tassert.strictEqual(rootGroup.contains(input4), true);\n\n\t\tassert.strictEqual(sideGroup.count, 1);\n\t\tassert.strictEqual(sideGroup.contains(input1), false);\n\t\tassert.strictEqual(sideGroup.contains(input2), false);\n\t\tassert.strictEqual(sideGroup.contains(input3), false);\n\t\tassert.strictEqual(sideGroup.contains(input4), true);\n\n\t\tassert.strictEqual(observer.hasEditor({ resource: input1.resource, typeId: input1.typeId, editorId: input1.editorId }), false);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input2.resource, typeId: input2.typeId, editorId: input2.editorId }), false);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input3.resource, typeId: input3.typeId, editorId: input3.editorId }), false);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input4.resource, typeId: input4.typeId, editorId: input4.editorId }), true);\n\t});\n\n\ttest('observer does not close sticky', async () => {\n\t\tconst [part] = await createPart();\n\t\tdisposables.add(part.enforcePartOptions({ limit: { enabled: true, value: 3 } }));\n\n\t\tconst storage = disposables.add(new TestStorageService());\n\t\tconst observer = disposables.add(new EditorsObserver(undefined, part, storage));\n\n\t\tconst rootGroup = part.activeGroup;\n\n\t\tconst input1 = disposables.add(new TestFileEditorInput(URI.parse('foo://bar1'), TEST_EDITOR_INPUT_ID));\n\t\tconst input2 = disposables.add(new TestFileEditorInput(URI.parse('foo://bar2'), TEST_EDITOR_INPUT_ID));\n\t\tconst input3 = disposables.add(new TestFileEditorInput(URI.parse('foo://bar3'), TEST_EDITOR_INPUT_ID));\n\t\tconst input4 = disposables.add(new TestFileEditorInput(URI.parse('foo://bar4'), TEST_EDITOR_INPUT_ID));\n\n\t\tawait rootGroup.openEditor(input1, { pinned: true, sticky: true });\n\t\tawait rootGroup.openEditor(input2, { pinned: true });\n\t\tawait rootGroup.openEditor(input3, { pinned: true });\n\t\tawait rootGroup.openEditor(input4, { pinned: true });\n\n\t\tassert.strictEqual(rootGroup.count, 3);\n\t\tassert.strictEqual(rootGroup.contains(input1), true);\n\t\tassert.strictEqual(rootGroup.contains(input2), false);\n\t\tassert.strictEqual(rootGroup.contains(input3), true);\n\t\tassert.strictEqual(rootGroup.contains(input4), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input1.resource, typeId: input1.typeId, editorId: input1.editorId }), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input2.resource, typeId: input2.typeId, editorId: input2.editorId }), false);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input3.resource, typeId: input3.typeId, editorId: input3.editorId }), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input4.resource, typeId: input4.typeId, editorId: input4.editorId }), true);\n\t});\n\n\ttest('observer does not close scratchpads', async () => {\n\t\tconst [part] = await createPart();\n\t\tdisposables.add(part.enforcePartOptions({ limit: { enabled: true, value: 3 } }));\n\n\t\tconst storage = disposables.add(new TestStorageService());\n\t\tconst observer = disposables.add(new EditorsObserver(undefined, part, storage));\n\n\t\tconst rootGroup = part.activeGroup;\n\n\t\tconst input1 = disposables.add(new TestFileEditorInput(URI.parse('foo://bar1'), TEST_EDITOR_INPUT_ID));\n\t\tinput1.capabilities = EditorInputCapabilities.Untitled | EditorInputCapabilities.Scratchpad;\n\t\tconst input2 = disposables.add(new TestFileEditorInput(URI.parse('foo://bar2'), TEST_EDITOR_INPUT_ID));\n\t\tconst input3 = disposables.add(new TestFileEditorInput(URI.parse('foo://bar3'), TEST_EDITOR_INPUT_ID));\n\t\tconst input4 = disposables.add(new TestFileEditorInput(URI.parse('foo://bar4'), TEST_EDITOR_INPUT_ID));\n\n\t\tawait rootGroup.openEditor(input1, { pinned: true });\n\t\tawait rootGroup.openEditor(input2, { pinned: true });\n\t\tawait rootGroup.openEditor(input3, { pinned: true });\n\t\tawait rootGroup.openEditor(input4, { pinned: true });\n\n\t\tassert.strictEqual(rootGroup.count, 3);\n\t\tassert.strictEqual(rootGroup.contains(input1), true);\n\t\tassert.strictEqual(rootGroup.contains(input2), false);\n\t\tassert.strictEqual(rootGroup.contains(input3), true);\n\t\tassert.strictEqual(rootGroup.contains(input4), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input1.resource, typeId: input1.typeId, editorId: input1.editorId }), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input2.resource, typeId: input2.typeId, editorId: input2.editorId }), false);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input3.resource, typeId: input3.typeId, editorId: input3.editorId }), true);\n\t\tassert.strictEqual(observer.hasEditor({ resource: input4.resource, typeId: input4.typeId, editorId: input4.editorId }), true);\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"],
  "mappings": "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",
  "names": []
}
