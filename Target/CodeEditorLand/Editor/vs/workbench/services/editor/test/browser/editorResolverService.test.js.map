{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/editor/test/browser/editorResolverService.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../../../base/common/network.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { EditorPart } from '../../../../browser/parts/editor/editorPart.js';\nimport { DiffEditorInput } from '../../../../common/editor/diffEditorInput.js';\nimport { EditorResolverService } from '../../browser/editorResolverService.js';\nimport { IEditorGroupsService } from '../../common/editorGroupsService.js';\nimport { IEditorResolverService, ResolvedStatus, RegisteredEditorPriority } from '../../common/editorResolverService.js';\nimport { createEditorPart, ITestInstantiationService, TestFileEditorInput, TestServiceAccessor, workbenchInstantiationService } from '../../../../test/browser/workbenchTestServices.js';\n\nsuite('EditorResolverService', () => {\n\n\tconst TEST_EDITOR_INPUT_ID = 'testEditorInputForEditorResolverService';\n\tconst disposables = new DisposableStore();\n\n\tteardown(() => disposables.clear());\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tasync function createEditorResolverService(instantiationService: ITestInstantiationService = workbenchInstantiationService(undefined, disposables)): Promise<[EditorPart, EditorResolverService, TestServiceAccessor]> {\n\t\tconst part = await createEditorPart(instantiationService, disposables);\n\t\tinstantiationService.stub(IEditorGroupsService, part);\n\n\t\tconst editorResolverService = instantiationService.createInstance(EditorResolverService);\n\t\tinstantiationService.stub(IEditorResolverService, editorResolverService);\n\t\tdisposables.add(editorResolverService);\n\n\t\treturn [part, editorResolverService, instantiationService.createInstance(TestServiceAccessor)];\n\t}\n\n\tfunction constructDisposableFileEditorInput(uri: URI, typeId: string, store: DisposableStore): TestFileEditorInput {\n\t\tconst editor = new TestFileEditorInput(uri, typeId);\n\t\tstore.add(editor);\n\t\treturn editor;\n\t}\n\n\ttest('Simple Resolve', async () => {\n\t\tconst [part, service] = await createEditorResolverService();\n\t\tconst registeredEditor = service.registerEditor('*.test',\n\t\t\t{\n\t\t\t\tid: 'TEST_EDITOR',\n\t\t\t\tlabel: 'Test Editor Label',\n\t\t\t\tdetail: 'Test Editor Details',\n\t\t\t\tpriority: RegisteredEditorPriority.default\n\t\t\t},\n\t\t\t{},\n\t\t\t{\n\t\t\t\tcreateEditorInput: ({ resource, options }, group) => ({ editor: new TestFileEditorInput(URI.parse(resource.toString()), TEST_EDITOR_INPUT_ID) }),\n\t\t\t}\n\t\t);\n\n\t\tconst resultingResolution = await service.resolveEditor({ resource: URI.file('my://resource-basics.test') }, part.activeGroup);\n\t\tassert.ok(resultingResolution);\n\t\tassert.notStrictEqual(typeof resultingResolution, 'number');\n\t\tif (resultingResolution !== ResolvedStatus.ABORT && resultingResolution !== ResolvedStatus.NONE) {\n\t\t\tassert.strictEqual(resultingResolution.editor.typeId, TEST_EDITOR_INPUT_ID);\n\t\t\tresultingResolution.editor.dispose();\n\t\t}\n\t\tregisteredEditor.dispose();\n\t});\n\n\ttest('Untitled Resolve', async () => {\n\t\tconst UNTITLED_TEST_EDITOR_INPUT_ID = 'UNTITLED_TEST_INPUT';\n\t\tconst [part, service] = await createEditorResolverService();\n\t\tconst registeredEditor = service.registerEditor('*.test',\n\t\t\t{\n\t\t\t\tid: 'TEST_EDITOR',\n\t\t\t\tlabel: 'Test Editor Label',\n\t\t\t\tdetail: 'Test Editor Details',\n\t\t\t\tpriority: RegisteredEditorPriority.default\n\t\t\t},\n\t\t\t{},\n\t\t\t{\n\t\t\t\tcreateEditorInput: ({ resource, options }, group) => ({ editor: new TestFileEditorInput(URI.parse(resource.toString()), TEST_EDITOR_INPUT_ID) }),\n\t\t\t\tcreateUntitledEditorInput: ({ resource, options }, group) => ({ editor: new TestFileEditorInput((resource ? resource : URI.from({ scheme: Schemas.untitled })), UNTITLED_TEST_EDITOR_INPUT_ID) }),\n\t\t\t}\n\t\t);\n\n\t\t// Untyped untitled - no resource\n\t\tlet resultingResolution = await service.resolveEditor({ resource: undefined }, part.activeGroup);\n\t\tassert.ok(resultingResolution);\n\t\t// We don't expect untitled to match the *.test glob\n\t\tassert.strictEqual(typeof resultingResolution, 'number');\n\n\t\t// Untyped untitled - with untitled resource\n\t\tresultingResolution = await service.resolveEditor({ resource: URI.from({ scheme: Schemas.untitled, path: 'foo.test' }) }, part.activeGroup);\n\t\tassert.ok(resultingResolution);\n\t\tassert.notStrictEqual(typeof resultingResolution, 'number');\n\t\tif (resultingResolution !== ResolvedStatus.ABORT && resultingResolution !== ResolvedStatus.NONE) {\n\t\t\tassert.strictEqual(resultingResolution.editor.typeId, UNTITLED_TEST_EDITOR_INPUT_ID);\n\t\t\tresultingResolution.editor.dispose();\n\t\t}\n\n\t\t// Untyped untitled - file resource with forceUntitled\n\t\tresultingResolution = await service.resolveEditor({ resource: URI.file('/fake.test'), forceUntitled: true }, part.activeGroup);\n\t\tassert.ok(resultingResolution);\n\t\tassert.notStrictEqual(typeof resultingResolution, 'number');\n\t\tif (resultingResolution !== ResolvedStatus.ABORT && resultingResolution !== ResolvedStatus.NONE) {\n\t\t\tassert.strictEqual(resultingResolution.editor.typeId, UNTITLED_TEST_EDITOR_INPUT_ID);\n\t\t\tresultingResolution.editor.dispose();\n\t\t}\n\n\t\tregisteredEditor.dispose();\n\t});\n\n\ttest('Side by side Resolve', async () => {\n\t\tconst [part, service] = await createEditorResolverService();\n\t\tconst registeredEditorPrimary = service.registerEditor('*.test-primary',\n\t\t\t{\n\t\t\t\tid: 'TEST_EDITOR_PRIMARY',\n\t\t\t\tlabel: 'Test Editor Label Primary',\n\t\t\t\tdetail: 'Test Editor Details Primary',\n\t\t\t\tpriority: RegisteredEditorPriority.default\n\t\t\t},\n\t\t\t{},\n\t\t\t{\n\t\t\t\tcreateEditorInput: ({ resource, options }, group) => ({ editor: constructDisposableFileEditorInput(URI.parse(resource.toString()), TEST_EDITOR_INPUT_ID, disposables) }),\n\t\t\t}\n\t\t);\n\n\t\tconst registeredEditorSecondary = service.registerEditor('*.test-secondary',\n\t\t\t{\n\t\t\t\tid: 'TEST_EDITOR_SECONDARY',\n\t\t\t\tlabel: 'Test Editor Label Secondary',\n\t\t\t\tdetail: 'Test Editor Details Secondary',\n\t\t\t\tpriority: RegisteredEditorPriority.default\n\t\t\t},\n\t\t\t{},\n\t\t\t{\n\t\t\t\tcreateEditorInput: ({ resource, options }, group) => ({ editor: constructDisposableFileEditorInput(URI.parse(resource.toString()), TEST_EDITOR_INPUT_ID, disposables) }),\n\t\t\t}\n\t\t);\n\n\t\tconst resultingResolution = await service.resolveEditor({\n\t\t\tprimary: { resource: URI.file('my://resource-basics.test-primary') },\n\t\t\tsecondary: { resource: URI.file('my://resource-basics.test-secondary') }\n\t\t}, part.activeGroup);\n\t\tassert.ok(resultingResolution);\n\t\tassert.notStrictEqual(typeof resultingResolution, 'number');\n\t\tif (resultingResolution !== ResolvedStatus.ABORT && resultingResolution !== ResolvedStatus.NONE) {\n\t\t\tassert.strictEqual(resultingResolution.editor.typeId, 'workbench.editorinputs.sidebysideEditorInput');\n\t\t\tresultingResolution.editor.dispose();\n\t\t} else {\n\t\t\tassert.fail();\n\t\t}\n\t\tregisteredEditorPrimary.dispose();\n\t\tregisteredEditorSecondary.dispose();\n\t});\n\n\ttest('Diff editor Resolve', async () => {\n\t\tconst [part, service, accessor] = await createEditorResolverService();\n\t\tconst registeredEditor = service.registerEditor('*.test-diff',\n\t\t\t{\n\t\t\t\tid: 'TEST_EDITOR',\n\t\t\t\tlabel: 'Test Editor Label',\n\t\t\t\tdetail: 'Test Editor Details',\n\t\t\t\tpriority: RegisteredEditorPriority.default\n\t\t\t},\n\t\t\t{},\n\t\t\t{\n\t\t\t\tcreateEditorInput: ({ resource, options }, group) => ({ editor: constructDisposableFileEditorInput(URI.parse(resource.toString()), TEST_EDITOR_INPUT_ID, disposables) }),\n\t\t\t\tcreateDiffEditorInput: ({ modified, original, options }, group) => ({\n\t\t\t\t\teditor: accessor.instantiationService.createInstance(\n\t\t\t\t\t\tDiffEditorInput,\n\t\t\t\t\t\t'name',\n\t\t\t\t\t\t'description',\n\t\t\t\t\t\tconstructDisposableFileEditorInput(URI.parse(original.toString()), TEST_EDITOR_INPUT_ID, disposables),\n\t\t\t\t\t\tconstructDisposableFileEditorInput(URI.parse(modified.toString()), TEST_EDITOR_INPUT_ID, disposables),\n\t\t\t\t\t\tundefined)\n\t\t\t\t})\n\t\t\t}\n\t\t);\n\n\t\tconst resultingResolution = await service.resolveEditor({\n\t\t\toriginal: { resource: URI.file('my://resource-basics.test-diff') },\n\t\t\tmodified: { resource: URI.file('my://resource-basics.test-diff') }\n\t\t}, part.activeGroup);\n\t\tassert.ok(resultingResolution);\n\t\tassert.notStrictEqual(typeof resultingResolution, 'number');\n\t\tif (resultingResolution !== ResolvedStatus.ABORT && resultingResolution !== ResolvedStatus.NONE) {\n\t\t\tassert.strictEqual(resultingResolution.editor.typeId, 'workbench.editors.diffEditorInput');\n\t\t\tresultingResolution.editor.dispose();\n\t\t} else {\n\t\t\tassert.fail();\n\t\t}\n\t\tregisteredEditor.dispose();\n\t});\n\n\ttest('Diff editor Resolve - Different Types', async () => {\n\t\tconst [part, service, accessor] = await createEditorResolverService();\n\t\tlet diffOneCounter = 0;\n\t\tlet diffTwoCounter = 0;\n\t\tlet defaultDiffCounter = 0;\n\t\tconst registeredEditor = service.registerEditor('*.test-diff',\n\t\t\t{\n\t\t\t\tid: 'TEST_EDITOR',\n\t\t\t\tlabel: 'Test Editor Label',\n\t\t\t\tdetail: 'Test Editor Details',\n\t\t\t\tpriority: RegisteredEditorPriority.default\n\t\t\t},\n\t\t\t{},\n\t\t\t{\n\t\t\t\tcreateEditorInput: ({ resource, options }, group) => ({ editor: constructDisposableFileEditorInput(URI.parse(resource.toString()), TEST_EDITOR_INPUT_ID, disposables) }),\n\t\t\t\tcreateDiffEditorInput: ({ modified, original, options }, group) => {\n\t\t\t\t\tdiffOneCounter++;\n\t\t\t\t\treturn {\n\t\t\t\t\t\teditor: accessor.instantiationService.createInstance(\n\t\t\t\t\t\t\tDiffEditorInput,\n\t\t\t\t\t\t\t'name',\n\t\t\t\t\t\t\t'description',\n\t\t\t\t\t\t\tconstructDisposableFileEditorInput(URI.parse(original.toString()), TEST_EDITOR_INPUT_ID, disposables),\n\t\t\t\t\t\t\tconstructDisposableFileEditorInput(URI.parse(modified.toString()), TEST_EDITOR_INPUT_ID, disposables),\n\t\t\t\t\t\t\tundefined)\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tconst secondRegisteredEditor = service.registerEditor('*.test-secondDiff',\n\t\t\t{\n\t\t\t\tid: 'TEST_EDITOR_2',\n\t\t\t\tlabel: 'Test Editor Label',\n\t\t\t\tdetail: 'Test Editor Details',\n\t\t\t\tpriority: RegisteredEditorPriority.default\n\t\t\t},\n\t\t\t{},\n\t\t\t{\n\t\t\t\tcreateEditorInput: ({ resource, options }, group) => ({ editor: new TestFileEditorInput(URI.parse(resource.toString()), TEST_EDITOR_INPUT_ID) }),\n\t\t\t\tcreateDiffEditorInput: ({ modified, original, options }, group) => {\n\t\t\t\t\tdiffTwoCounter++;\n\t\t\t\t\treturn {\n\t\t\t\t\t\teditor: accessor.instantiationService.createInstance(\n\t\t\t\t\t\t\tDiffEditorInput,\n\t\t\t\t\t\t\t'name',\n\t\t\t\t\t\t\t'description',\n\t\t\t\t\t\t\tconstructDisposableFileEditorInput(URI.parse(original.toString()), TEST_EDITOR_INPUT_ID, disposables),\n\t\t\t\t\t\t\tconstructDisposableFileEditorInput(URI.parse(modified.toString()), TEST_EDITOR_INPUT_ID, disposables),\n\t\t\t\t\t\t\tundefined)\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tconst defaultRegisteredEditor = service.registerEditor('*',\n\t\t\t{\n\t\t\t\tid: 'default',\n\t\t\t\tlabel: 'Test Editor Label',\n\t\t\t\tdetail: 'Test Editor Details',\n\t\t\t\tpriority: RegisteredEditorPriority.option\n\t\t\t},\n\t\t\t{},\n\t\t\t{\n\t\t\t\tcreateEditorInput: ({ resource, options }, group) => ({ editor: new TestFileEditorInput(URI.parse(resource.toString()), TEST_EDITOR_INPUT_ID) }),\n\t\t\t\tcreateDiffEditorInput: ({ modified, original, options }, group) => {\n\t\t\t\t\tdefaultDiffCounter++;\n\t\t\t\t\treturn {\n\t\t\t\t\t\teditor: accessor.instantiationService.createInstance(\n\t\t\t\t\t\t\tDiffEditorInput,\n\t\t\t\t\t\t\t'name',\n\t\t\t\t\t\t\t'description',\n\t\t\t\t\t\t\tconstructDisposableFileEditorInput(URI.parse(original.toString()), TEST_EDITOR_INPUT_ID, disposables),\n\t\t\t\t\t\t\tconstructDisposableFileEditorInput(URI.parse(modified.toString()), TEST_EDITOR_INPUT_ID, disposables),\n\t\t\t\t\t\t\tundefined)\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tlet resultingResolution = await service.resolveEditor({\n\t\t\toriginal: { resource: URI.file('my://resource-basics.test-diff') },\n\t\t\tmodified: { resource: URI.file('my://resource-basics.test-diff') }\n\t\t}, part.activeGroup);\n\t\tassert.ok(resultingResolution);\n\t\tassert.notStrictEqual(typeof resultingResolution, 'number');\n\t\tif (resultingResolution !== ResolvedStatus.ABORT && resultingResolution !== ResolvedStatus.NONE) {\n\t\t\tassert.strictEqual(diffOneCounter, 1);\n\t\t\tassert.strictEqual(diffTwoCounter, 0);\n\t\t\tassert.strictEqual(defaultDiffCounter, 0);\n\t\t\tassert.strictEqual(resultingResolution.editor.typeId, 'workbench.editors.diffEditorInput');\n\t\t\tresultingResolution.editor.dispose();\n\t\t} else {\n\t\t\tassert.fail();\n\t\t}\n\n\t\tresultingResolution = await service.resolveEditor({\n\t\t\toriginal: { resource: URI.file('my://resource-basics.test-secondDiff') },\n\t\t\tmodified: { resource: URI.file('my://resource-basics.test-secondDiff') }\n\t\t}, part.activeGroup);\n\t\tassert.ok(resultingResolution);\n\t\tassert.notStrictEqual(typeof resultingResolution, 'number');\n\t\tif (resultingResolution !== ResolvedStatus.ABORT && resultingResolution !== ResolvedStatus.NONE) {\n\t\t\tassert.strictEqual(diffOneCounter, 1);\n\t\t\tassert.strictEqual(diffTwoCounter, 1);\n\t\t\tassert.strictEqual(defaultDiffCounter, 0);\n\t\t\tassert.strictEqual(resultingResolution.editor.typeId, 'workbench.editors.diffEditorInput');\n\t\t\tresultingResolution.editor.dispose();\n\t\t} else {\n\t\t\tassert.fail();\n\t\t}\n\n\t\tresultingResolution = await service.resolveEditor({\n\t\t\toriginal: { resource: URI.file('my://resource-basics.test-secondDiff') },\n\t\t\tmodified: { resource: URI.file('my://resource-basics.test-diff') }\n\t\t}, part.activeGroup);\n\t\tassert.ok(resultingResolution);\n\t\tassert.notStrictEqual(typeof resultingResolution, 'number');\n\t\tif (resultingResolution !== ResolvedStatus.ABORT && resultingResolution !== ResolvedStatus.NONE) {\n\t\t\tassert.strictEqual(diffOneCounter, 1);\n\t\t\tassert.strictEqual(diffTwoCounter, 1);\n\t\t\tassert.strictEqual(defaultDiffCounter, 1);\n\t\t\tassert.strictEqual(resultingResolution.editor.typeId, 'workbench.editors.diffEditorInput');\n\t\t\tresultingResolution.editor.dispose();\n\t\t} else {\n\t\t\tassert.fail();\n\t\t}\n\n\t\tresultingResolution = await service.resolveEditor({\n\t\t\toriginal: { resource: URI.file('my://resource-basics.test-diff') },\n\t\t\tmodified: { resource: URI.file('my://resource-basics.test-secondDiff') }\n\t\t}, part.activeGroup);\n\t\tassert.ok(resultingResolution);\n\t\tassert.notStrictEqual(typeof resultingResolution, 'number');\n\t\tif (resultingResolution !== ResolvedStatus.ABORT && resultingResolution !== ResolvedStatus.NONE) {\n\t\t\tassert.strictEqual(diffOneCounter, 1);\n\t\t\tassert.strictEqual(diffTwoCounter, 1);\n\t\t\tassert.strictEqual(defaultDiffCounter, 2);\n\t\t\tassert.strictEqual(resultingResolution.editor.typeId, 'workbench.editors.diffEditorInput');\n\t\t\tresultingResolution.editor.dispose();\n\t\t} else {\n\t\t\tassert.fail();\n\t\t}\n\n\t\tresultingResolution = await service.resolveEditor({\n\t\t\toriginal: { resource: URI.file('my://resource-basics.test-secondDiff') },\n\t\t\tmodified: { resource: URI.file('my://resource-basics.test-diff') },\n\t\t\toptions: { override: 'TEST_EDITOR' }\n\t\t}, part.activeGroup);\n\t\tassert.ok(resultingResolution);\n\t\tassert.notStrictEqual(typeof resultingResolution, 'number');\n\t\tif (resultingResolution !== ResolvedStatus.ABORT && resultingResolution !== ResolvedStatus.NONE) {\n\t\t\tassert.strictEqual(diffOneCounter, 2);\n\t\t\tassert.strictEqual(diffTwoCounter, 1);\n\t\t\tassert.strictEqual(defaultDiffCounter, 2);\n\t\t\tassert.strictEqual(resultingResolution.editor.typeId, 'workbench.editors.diffEditorInput');\n\t\t\tresultingResolution.editor.dispose();\n\t\t} else {\n\t\t\tassert.fail();\n\t\t}\n\n\t\tregisteredEditor.dispose();\n\t\tsecondRegisteredEditor.dispose();\n\t\tdefaultRegisteredEditor.dispose();\n\t});\n\n\ttest('Registry & Events', async () => {\n\t\tconst [, service] = await createEditorResolverService();\n\n\t\tlet eventCounter = 0;\n\t\tdisposables.add(service.onDidChangeEditorRegistrations(() => {\n\t\t\teventCounter++;\n\t\t}));\n\n\t\tconst editors = service.getEditors();\n\n\t\tconst registeredEditor = service.registerEditor('*.test',\n\t\t\t{\n\t\t\t\tid: 'TEST_EDITOR',\n\t\t\t\tlabel: 'Test Editor Label',\n\t\t\t\tdetail: 'Test Editor Details',\n\t\t\t\tpriority: RegisteredEditorPriority.default\n\t\t\t},\n\t\t\t{},\n\t\t\t{\n\t\t\t\tcreateEditorInput: ({ resource, options }, group) => ({ editor: new TestFileEditorInput(URI.parse(resource.toString()), TEST_EDITOR_INPUT_ID) })\n\t\t\t}\n\t\t);\n\n\t\tassert.strictEqual(eventCounter, 1);\n\t\tassert.strictEqual(service.getEditors().length, editors.length + 1);\n\t\tassert.strictEqual(service.getEditors().some(editor => editor.id === 'TEST_EDITOR'), true);\n\n\t\tregisteredEditor.dispose();\n\n\t\tassert.strictEqual(eventCounter, 2);\n\t\tassert.strictEqual(service.getEditors().length, editors.length);\n\t\tassert.strictEqual(service.getEditors().some(editor => editor.id === 'TEST_EDITOR'), false);\n\t});\n\n\ttest('Multiple registrations to same glob and id #155859', async () => {\n\t\tconst [part, service, accessor] = await createEditorResolverService();\n\t\tconst testEditorInfo = {\n\t\t\tid: 'TEST_EDITOR',\n\t\t\tlabel: 'Test Editor Label',\n\t\t\tdetail: 'Test Editor Details',\n\t\t\tpriority: RegisteredEditorPriority.default\n\t\t};\n\t\tconst registeredSingleEditor = service.registerEditor('*.test',\n\t\t\ttestEditorInfo,\n\t\t\t{},\n\t\t\t{\n\t\t\t\tcreateEditorInput: ({ resource, options }, group) => ({ editor: new TestFileEditorInput(URI.parse(resource.toString()), TEST_EDITOR_INPUT_ID) })\n\t\t\t}\n\t\t);\n\n\t\tconst registeredDiffEditor = service.registerEditor('*.test',\n\t\t\ttestEditorInfo,\n\t\t\t{},\n\t\t\t{\n\t\t\t\tcreateDiffEditorInput: ({ modified, original, options }, group) => ({\n\t\t\t\t\teditor: accessor.instantiationService.createInstance(\n\t\t\t\t\t\tDiffEditorInput,\n\t\t\t\t\t\t'name',\n\t\t\t\t\t\t'description',\n\t\t\t\t\t\tconstructDisposableFileEditorInput(URI.parse(original.toString()), TEST_EDITOR_INPUT_ID, disposables),\n\t\t\t\t\t\tconstructDisposableFileEditorInput(URI.parse(modified.toString()), TEST_EDITOR_INPUT_ID, disposables),\n\t\t\t\t\t\tundefined)\n\t\t\t\t})\n\t\t\t}\n\t\t);\n\n\t\t// Resolve a diff\n\t\tlet resultingResolution = await service.resolveEditor({\n\t\t\toriginal: { resource: URI.file('my://resource-basics.test') },\n\t\t\tmodified: { resource: URI.file('my://resource-basics.test') }\n\t\t}, part.activeGroup);\n\t\tassert.ok(resultingResolution);\n\t\tassert.notStrictEqual(typeof resultingResolution, 'number');\n\t\tif (resultingResolution !== ResolvedStatus.ABORT && resultingResolution !== ResolvedStatus.NONE) {\n\t\t\tassert.strictEqual(resultingResolution.editor.typeId, 'workbench.editors.diffEditorInput');\n\t\t\tresultingResolution.editor.dispose();\n\t\t} else {\n\t\t\tassert.fail();\n\t\t}\n\n\t\t// Remove diff registration\n\t\tregisteredDiffEditor.dispose();\n\n\t\t// Resolve a diff again, expected failure\n\t\tresultingResolution = await service.resolveEditor({\n\t\t\toriginal: { resource: URI.file('my://resource-basics.test') },\n\t\t\tmodified: { resource: URI.file('my://resource-basics.test') }\n\t\t}, part.activeGroup);\n\t\tassert.ok(resultingResolution);\n\t\tassert.strictEqual(typeof resultingResolution, 'number');\n\t\tif (resultingResolution !== ResolvedStatus.NONE) {\n\t\t\tassert.fail();\n\t\t}\n\n\t\tregisteredSingleEditor.dispose();\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
