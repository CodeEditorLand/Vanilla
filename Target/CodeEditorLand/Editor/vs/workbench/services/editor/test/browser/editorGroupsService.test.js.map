{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/editor/test/browser/editorGroupsService.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { workbenchInstantiationService, registerTestEditor, TestFileEditorInput, TestEditorPart, TestServiceAccessor, ITestInstantiationService, workbenchTeardown, createEditorParts, TestEditorParts } from '../../../../test/browser/workbenchTestServices.js';\nimport { GroupDirection, GroupsOrder, MergeGroupMode, GroupOrientation, GroupLocation, isEditorGroup, IEditorGroupsService, GroupsArrangement, IEditorGroupContextKeyProvider } from '../../common/editorGroupsService.js';\nimport { CloseDirection, IEditorPartOptions, EditorsOrder, EditorInputCapabilities, GroupModelChangeKind, SideBySideEditor, IEditorFactoryRegistry, EditorExtensions } from '../../../../common/editor.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { SyncDescriptor } from '../../../../../platform/instantiation/common/descriptors.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { MockScopableContextKeyService } from '../../../../../platform/keybinding/test/common/mockKeybindingService.js';\nimport { ConfirmResult } from '../../../../../platform/dialogs/common/dialogs.js';\nimport { TestConfigurationService } from '../../../../../platform/configuration/test/common/testConfigurationService.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { SideBySideEditorInput } from '../../../../common/editor/sideBySideEditorInput.js';\nimport { IGroupModelChangeEvent, IGroupEditorMoveEvent, IGroupEditorOpenEvent } from '../../../../common/editor/editorGroupModel.js';\nimport { TestInstantiationService } from '../../../../../platform/instantiation/test/common/instantiationServiceMock.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { Registry } from '../../../../../platform/registry/common/platform.js';\nimport { IContextKeyService, RawContextKey } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { Emitter } from '../../../../../base/common/event.js';\nimport { isEqual } from '../../../../../base/common/resources.js';\n\nsuite('EditorGroupsService', () => {\n\n\tconst TEST_EDITOR_ID = 'MyFileEditorForEditorGroupService';\n\tconst TEST_EDITOR_INPUT_ID = 'testEditorInputForEditorGroupService';\n\n\tconst disposables = new DisposableStore();\n\n\tlet testLocalInstantiationService: ITestInstantiationService | undefined = undefined;\n\n\tsetup(() => {\n\t\tdisposables.add(registerTestEditor(TEST_EDITOR_ID, [new SyncDescriptor(TestFileEditorInput), new SyncDescriptor(SideBySideEditorInput)], TEST_EDITOR_INPUT_ID));\n\t});\n\n\tteardown(async () => {\n\t\tif (testLocalInstantiationService) {\n\t\t\tawait workbenchTeardown(testLocalInstantiationService);\n\t\t\ttestLocalInstantiationService = undefined;\n\t\t}\n\n\t\tdisposables.clear();\n\t});\n\n\tasync function createParts(instantiationService = workbenchInstantiationService(undefined, disposables)): Promise<[TestEditorParts, TestInstantiationService]> {\n\t\tinstantiationService.invokeFunction(accessor => Registry.as<IEditorFactoryRegistry>(EditorExtensions.EditorFactory).start(accessor));\n\t\tconst parts = await createEditorParts(instantiationService, disposables);\n\t\tinstantiationService.stub(IEditorGroupsService, parts);\n\n\t\ttestLocalInstantiationService = instantiationService;\n\n\t\treturn [parts, instantiationService];\n\t}\n\n\tasync function createPart(instantiationService?: TestInstantiationService): Promise<[TestEditorPart, TestInstantiationService]> {\n\t\tconst [parts, testInstantiationService] = await createParts(instantiationService);\n\t\treturn [parts.testMainPart, testInstantiationService];\n\t}\n\n\tfunction createTestFileEditorInput(resource: URI, typeId: string): TestFileEditorInput {\n\t\treturn disposables.add(new TestFileEditorInput(resource, typeId));\n\t}\n\n\ttest('groups basics', async function () {\n\t\tconst instantiationService = workbenchInstantiationService({ contextKeyService: instantiationService => instantiationService.createInstance(MockScopableContextKeyService) }, disposables);\n\t\tconst [part] = await createPart(instantiationService);\n\n\t\tlet activeGroupModelChangeCounter = 0;\n\t\tconst activeGroupModelChangeListener = part.onDidChangeActiveGroup(() => {\n\t\t\tactiveGroupModelChangeCounter++;\n\t\t});\n\n\t\tlet groupAddedCounter = 0;\n\t\tconst groupAddedListener = part.onDidAddGroup(() => {\n\t\t\tgroupAddedCounter++;\n\t\t});\n\n\t\tlet groupRemovedCounter = 0;\n\t\tconst groupRemovedListener = part.onDidRemoveGroup(() => {\n\t\t\tgroupRemovedCounter++;\n\t\t});\n\n\t\tlet groupMovedCounter = 0;\n\t\tconst groupMovedListener = part.onDidMoveGroup(() => {\n\t\t\tgroupMovedCounter++;\n\t\t});\n\n\t\t// always a root group\n\t\tconst rootGroup = part.groups[0];\n\t\tassert.strictEqual(isEditorGroup(rootGroup), true);\n\t\tassert.strictEqual(part.groups.length, 1);\n\t\tassert.strictEqual(part.count, 1);\n\t\tassert.strictEqual(rootGroup, part.getGroup(rootGroup.id));\n\t\tassert.ok(part.activeGroup === rootGroup);\n\t\tassert.strictEqual(rootGroup.label, 'Group 1');\n\n\t\tlet mru = part.getGroups(GroupsOrder.MOST_RECENTLY_ACTIVE);\n\t\tassert.strictEqual(mru.length, 1);\n\t\tassert.strictEqual(mru[0], rootGroup);\n\n\t\tconst rightGroup = part.addGroup(rootGroup, GroupDirection.RIGHT);\n\t\tassert.strictEqual(rightGroup, part.getGroup(rightGroup.id));\n\t\tassert.strictEqual(groupAddedCounter, 1);\n\t\tassert.strictEqual(part.groups.length, 2);\n\t\tassert.strictEqual(part.count, 2);\n\t\tassert.ok(part.activeGroup === rootGroup);\n\t\tassert.strictEqual(rootGroup.label, 'Group 1');\n\t\tassert.strictEqual(rightGroup.label, 'Group 2');\n\n\t\tmru = part.getGroups(GroupsOrder.MOST_RECENTLY_ACTIVE);\n\t\tassert.strictEqual(mru.length, 2);\n\t\tassert.strictEqual(mru[0], rootGroup);\n\t\tassert.strictEqual(mru[1], rightGroup);\n\n\t\tassert.strictEqual(activeGroupModelChangeCounter, 0);\n\n\t\tlet rootGroupActiveChangeCounter = 0;\n\t\tconst rootGroupModelChangeListener = rootGroup.onDidModelChange(e => {\n\t\t\tif (e.kind === GroupModelChangeKind.GROUP_ACTIVE) {\n\t\t\t\trootGroupActiveChangeCounter++;\n\t\t\t}\n\t\t});\n\n\t\tlet rightGroupActiveChangeCounter = 0;\n\t\tconst rightGroupModelChangeListener = rightGroup.onDidModelChange(e => {\n\t\t\tif (e.kind === GroupModelChangeKind.GROUP_ACTIVE) {\n\t\t\t\trightGroupActiveChangeCounter++;\n\t\t\t}\n\t\t});\n\n\t\tpart.activateGroup(rightGroup);\n\t\tassert.ok(part.activeGroup === rightGroup);\n\t\tassert.strictEqual(activeGroupModelChangeCounter, 1);\n\t\tassert.strictEqual(rootGroupActiveChangeCounter, 1);\n\t\tassert.strictEqual(rightGroupActiveChangeCounter, 1);\n\n\t\trootGroupModelChangeListener.dispose();\n\t\trightGroupModelChangeListener.dispose();\n\n\t\tmru = part.getGroups(GroupsOrder.MOST_RECENTLY_ACTIVE);\n\t\tassert.strictEqual(mru.length, 2);\n\t\tassert.strictEqual(mru[0], rightGroup);\n\t\tassert.strictEqual(mru[1], rootGroup);\n\n\t\tconst downGroup = part.addGroup(rightGroup, GroupDirection.DOWN);\n\t\tlet didDispose = false;\n\t\tdisposables.add(downGroup.onWillDispose(() => {\n\t\t\tdidDispose = true;\n\t\t}));\n\t\tassert.strictEqual(groupAddedCounter, 2);\n\t\tassert.strictEqual(part.groups.length, 3);\n\t\tassert.ok(part.activeGroup === rightGroup);\n\t\tassert.ok(!downGroup.activeEditorPane);\n\t\tassert.strictEqual(rootGroup.label, 'Group 1');\n\t\tassert.strictEqual(rightGroup.label, 'Group 2');\n\t\tassert.strictEqual(downGroup.label, 'Group 3');\n\n\t\tmru = part.getGroups(GroupsOrder.MOST_RECENTLY_ACTIVE);\n\t\tassert.strictEqual(mru.length, 3);\n\t\tassert.strictEqual(mru[0], rightGroup);\n\t\tassert.strictEqual(mru[1], rootGroup);\n\t\tassert.strictEqual(mru[2], downGroup);\n\n\t\tconst gridOrder = part.getGroups(GroupsOrder.GRID_APPEARANCE);\n\t\tassert.strictEqual(gridOrder.length, 3);\n\t\tassert.strictEqual(gridOrder[0], rootGroup);\n\t\tassert.strictEqual(gridOrder[0].index, 0);\n\t\tassert.strictEqual(gridOrder[1], rightGroup);\n\t\tassert.strictEqual(gridOrder[1].index, 1);\n\t\tassert.strictEqual(gridOrder[2], downGroup);\n\t\tassert.strictEqual(gridOrder[2].index, 2);\n\n\t\tpart.moveGroup(downGroup, rightGroup, GroupDirection.DOWN);\n\t\tassert.strictEqual(groupMovedCounter, 1);\n\n\t\tpart.removeGroup(downGroup);\n\t\tassert.ok(!part.getGroup(downGroup.id));\n\t\tassert.ok(!part.hasGroup(downGroup.id));\n\t\tassert.strictEqual(didDispose, true);\n\t\tassert.strictEqual(groupRemovedCounter, 1);\n\t\tassert.strictEqual(part.groups.length, 2);\n\t\tassert.ok(part.activeGroup === rightGroup);\n\t\tassert.strictEqual(rootGroup.label, 'Group 1');\n\t\tassert.strictEqual(rightGroup.label, 'Group 2');\n\n\t\tmru = part.getGroups(GroupsOrder.MOST_RECENTLY_ACTIVE);\n\t\tassert.strictEqual(mru.length, 2);\n\t\tassert.strictEqual(mru[0], rightGroup);\n\t\tassert.strictEqual(mru[1], rootGroup);\n\n\t\tconst rightGroupContextKeyService = part.activeGroup.scopedContextKeyService;\n\t\tconst rootGroupContextKeyService = rootGroup.scopedContextKeyService;\n\n\t\tassert.ok(rightGroupContextKeyService);\n\t\tassert.ok(rootGroupContextKeyService);\n\t\tassert.ok(rightGroupContextKeyService !== rootGroupContextKeyService);\n\n\t\tpart.removeGroup(rightGroup);\n\t\tassert.strictEqual(groupRemovedCounter, 2);\n\t\tassert.strictEqual(part.groups.length, 1);\n\t\tassert.ok(part.activeGroup === rootGroup);\n\n\t\tmru = part.getGroups(GroupsOrder.MOST_RECENTLY_ACTIVE);\n\t\tassert.strictEqual(mru.length, 1);\n\t\tassert.strictEqual(mru[0], rootGroup);\n\n\t\tpart.removeGroup(rootGroup); // cannot remove root group\n\t\tassert.strictEqual(part.groups.length, 1);\n\t\tassert.strictEqual(groupRemovedCounter, 2);\n\t\tassert.ok(part.activeGroup === rootGroup);\n\n\t\tpart.setGroupOrientation(part.orientation === GroupOrientation.HORIZONTAL ? GroupOrientation.VERTICAL : GroupOrientation.HORIZONTAL);\n\n\t\tactiveGroupModelChangeListener.dispose();\n\t\tgroupAddedListener.dispose();\n\t\tgroupRemovedListener.dispose();\n\t\tgroupMovedListener.dispose();\n\t});\n\n\ttest('sideGroup', async () => {\n\t\tconst instantiationService = workbenchInstantiationService({ contextKeyService: instantiationService => instantiationService.createInstance(MockScopableContextKeyService) }, disposables);\n\t\tconst [part] = await createPart(instantiationService);\n\n\t\tconst rootGroup = part.activeGroup;\n\n\t\tconst input1 = createTestFileEditorInput(URI.file('foo/bar1'), TEST_EDITOR_INPUT_ID);\n\t\tconst input2 = createTestFileEditorInput(URI.file('foo/bar2'), TEST_EDITOR_INPUT_ID);\n\t\tconst input3 = createTestFileEditorInput(URI.file('foo/bar3'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait rootGroup.openEditor(input1, { pinned: true });\n\t\tawait part.sideGroup.openEditor(input2, { pinned: true });\n\t\tassert.strictEqual(part.count, 2);\n\n\t\tpart.activateGroup(rootGroup);\n\t\tawait part.sideGroup.openEditor(input3, { pinned: true });\n\t\tassert.strictEqual(part.count, 2);\n\t});\n\n\ttest('save & restore state', async function () {\n\t\tconst [part, instantiationService] = await createPart();\n\n\t\tconst rootGroup = part.groups[0];\n\t\tconst rightGroup = part.addGroup(rootGroup, GroupDirection.RIGHT);\n\t\tconst downGroup = part.addGroup(rightGroup, GroupDirection.DOWN);\n\n\t\tconst rootGroupInput = createTestFileEditorInput(URI.file('foo/bar1'), TEST_EDITOR_INPUT_ID);\n\t\tawait rootGroup.openEditor(rootGroupInput, { pinned: true });\n\n\t\tconst rightGroupInput = createTestFileEditorInput(URI.file('foo/bar2'), TEST_EDITOR_INPUT_ID);\n\t\tawait rightGroup.openEditor(rightGroupInput, { pinned: true });\n\n\t\tassert.strictEqual(part.groups.length, 3);\n\n\t\tpart.testSaveState();\n\t\tpart.dispose();\n\n\t\tconst [restoredPart] = await createPart(instantiationService);\n\n\t\tassert.strictEqual(restoredPart.groups.length, 3);\n\t\tassert.ok(restoredPart.getGroup(rootGroup.id));\n\t\tassert.ok(restoredPart.hasGroup(rootGroup.id));\n\t\tassert.ok(restoredPart.getGroup(rightGroup.id));\n\t\tassert.ok(restoredPart.hasGroup(rightGroup.id));\n\t\tassert.ok(restoredPart.getGroup(downGroup.id));\n\t\tassert.ok(restoredPart.hasGroup(downGroup.id));\n\n\t\trestoredPart.clearState();\n\t});\n\n\ttest('groups index / labels', async function () {\n\t\tconst [part] = await createPart();\n\n\t\tconst rootGroup = part.groups[0];\n\t\tconst rightGroup = part.addGroup(rootGroup, GroupDirection.RIGHT);\n\t\tconst downGroup = part.addGroup(rightGroup, GroupDirection.DOWN);\n\n\t\tlet groupIndexChangedCounter = 0;\n\t\tconst groupIndexChangedListener = part.onDidChangeGroupIndex(() => {\n\t\t\tgroupIndexChangedCounter++;\n\t\t});\n\n\t\tlet indexChangeCounter = 0;\n\t\tconst labelChangeListener = downGroup.onDidModelChange(e => {\n\t\t\tif (e.kind === GroupModelChangeKind.GROUP_INDEX) {\n\t\t\t\tindexChangeCounter++;\n\t\t\t}\n\t\t});\n\n\t\tassert.strictEqual(rootGroup.index, 0);\n\t\tassert.strictEqual(rightGroup.index, 1);\n\t\tassert.strictEqual(downGroup.index, 2);\n\t\tassert.strictEqual(rootGroup.label, 'Group 1');\n\t\tassert.strictEqual(rightGroup.label, 'Group 2');\n\t\tassert.strictEqual(downGroup.label, 'Group 3');\n\n\t\tpart.removeGroup(rightGroup);\n\t\tassert.strictEqual(rootGroup.index, 0);\n\t\tassert.strictEqual(downGroup.index, 1);\n\t\tassert.strictEqual(rootGroup.label, 'Group 1');\n\t\tassert.strictEqual(downGroup.label, 'Group 2');\n\t\tassert.strictEqual(indexChangeCounter, 1);\n\t\tassert.strictEqual(groupIndexChangedCounter, 1);\n\n\t\tpart.moveGroup(downGroup, rootGroup, GroupDirection.UP);\n\t\tassert.strictEqual(downGroup.index, 0);\n\t\tassert.strictEqual(rootGroup.index, 1);\n\t\tassert.strictEqual(downGroup.label, 'Group 1');\n\t\tassert.strictEqual(rootGroup.label, 'Group 2');\n\t\tassert.strictEqual(indexChangeCounter, 2);\n\t\tassert.strictEqual(groupIndexChangedCounter, 3);\n\n\t\tconst newFirstGroup = part.addGroup(downGroup, GroupDirection.UP);\n\t\tassert.strictEqual(newFirstGroup.index, 0);\n\t\tassert.strictEqual(downGroup.index, 1);\n\t\tassert.strictEqual(rootGroup.index, 2);\n\t\tassert.strictEqual(newFirstGroup.label, 'Group 1');\n\t\tassert.strictEqual(downGroup.label, 'Group 2');\n\t\tassert.strictEqual(rootGroup.label, 'Group 3');\n\t\tassert.strictEqual(indexChangeCounter, 3);\n\t\tassert.strictEqual(groupIndexChangedCounter, 6);\n\n\t\tlabelChangeListener.dispose();\n\t\tgroupIndexChangedListener.dispose();\n\t});\n\n\ttest('groups label', async function () {\n\t\tconst [part] = await createPart();\n\n\t\tconst rootGroup = part.groups[0];\n\t\tconst rightGroup = part.addGroup(rootGroup, GroupDirection.RIGHT);\n\n\t\tlet partLabelChangedCounter = 0;\n\t\tconst groupIndexChangedListener = part.onDidChangeGroupLabel(() => {\n\t\t\tpartLabelChangedCounter++;\n\t\t});\n\n\t\tlet rootGroupLabelChangeCounter = 0;\n\t\tconst rootGroupLabelChangeListener = rootGroup.onDidModelChange(e => {\n\t\t\tif (e.kind === GroupModelChangeKind.GROUP_LABEL) {\n\t\t\t\trootGroupLabelChangeCounter++;\n\t\t\t}\n\t\t});\n\n\t\tlet rightGroupLabelChangeCounter = 0;\n\t\tconst rightGroupLabelChangeListener = rightGroup.onDidModelChange(e => {\n\t\t\tif (e.kind === GroupModelChangeKind.GROUP_LABEL) {\n\t\t\t\trightGroupLabelChangeCounter++;\n\t\t\t}\n\t\t});\n\n\t\tassert.strictEqual(rootGroup.label, 'Group 1');\n\t\tassert.strictEqual(rightGroup.label, 'Group 2');\n\n\t\tpart.notifyGroupsLabelChange('Window 2');\n\n\t\tassert.strictEqual(rootGroup.label, 'Window 2: Group 1');\n\t\tassert.strictEqual(rightGroup.label, 'Window 2: Group 2');\n\n\t\tassert.strictEqual(rootGroupLabelChangeCounter, 1);\n\t\tassert.strictEqual(rightGroupLabelChangeCounter, 1);\n\t\tassert.strictEqual(partLabelChangedCounter, 2);\n\n\t\tpart.notifyGroupsLabelChange('Window 3');\n\n\t\tassert.strictEqual(rootGroup.label, 'Window 3: Group 1');\n\t\tassert.strictEqual(rightGroup.label, 'Window 3: Group 2');\n\n\t\tassert.strictEqual(rootGroupLabelChangeCounter, 2);\n\t\tassert.strictEqual(rightGroupLabelChangeCounter, 2);\n\t\tassert.strictEqual(partLabelChangedCounter, 4);\n\n\t\trootGroupLabelChangeListener.dispose();\n\t\trightGroupLabelChangeListener.dispose();\n\t\tgroupIndexChangedListener.dispose();\n\t});\n\n\ttest('copy/merge groups', async () => {\n\t\tconst [part] = await createPart();\n\n\t\tlet groupAddedCounter = 0;\n\t\tconst groupAddedListener = part.onDidAddGroup(() => {\n\t\t\tgroupAddedCounter++;\n\t\t});\n\n\t\tlet groupRemovedCounter = 0;\n\t\tconst groupRemovedListener = part.onDidRemoveGroup(() => {\n\t\t\tgroupRemovedCounter++;\n\t\t});\n\n\t\tconst rootGroup = part.groups[0];\n\t\tlet rootGroupDisposed = false;\n\t\tconst disposeListener = rootGroup.onWillDispose(() => {\n\t\t\trootGroupDisposed = true;\n\t\t});\n\n\t\tconst input = createTestFileEditorInput(URI.file('foo/bar'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait rootGroup.openEditor(input, { pinned: true });\n\t\tconst rightGroup = part.addGroup(rootGroup, GroupDirection.RIGHT);\n\t\tpart.activateGroup(rightGroup);\n\t\tconst downGroup = part.copyGroup(rootGroup, rightGroup, GroupDirection.DOWN);\n\t\tassert.strictEqual(groupAddedCounter, 2);\n\t\tassert.strictEqual(downGroup.count, 1);\n\t\tassert.ok(downGroup.activeEditor instanceof TestFileEditorInput);\n\t\tlet res = part.mergeGroup(rootGroup, rightGroup, { mode: MergeGroupMode.COPY_EDITORS });\n\t\tassert.strictEqual(res, true);\n\t\tassert.strictEqual(rightGroup.count, 1);\n\t\tassert.ok(rightGroup.activeEditor instanceof TestFileEditorInput);\n\t\tres = part.mergeGroup(rootGroup, rightGroup, { mode: MergeGroupMode.MOVE_EDITORS });\n\t\tassert.strictEqual(res, true);\n\t\tassert.strictEqual(rootGroup.count, 0);\n\t\tres = part.mergeGroup(rootGroup, downGroup);\n\t\tassert.strictEqual(res, true);\n\t\tassert.strictEqual(groupRemovedCounter, 1);\n\t\tassert.strictEqual(rootGroupDisposed, true);\n\n\t\tgroupAddedListener.dispose();\n\t\tgroupRemovedListener.dispose();\n\t\tdisposeListener.dispose();\n\t\tpart.dispose();\n\t});\n\n\ttest('merge all groups', async () => {\n\t\tconst [part] = await createPart();\n\n\t\tconst rootGroup = part.groups[0];\n\n\t\tconst input1 = createTestFileEditorInput(URI.file('foo/bar1'), TEST_EDITOR_INPUT_ID);\n\t\tconst input2 = createTestFileEditorInput(URI.file('foo/bar2'), TEST_EDITOR_INPUT_ID);\n\t\tconst input3 = createTestFileEditorInput(URI.file('foo/bar3'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait rootGroup.openEditor(input1, { pinned: true });\n\n\t\tconst rightGroup = part.addGroup(rootGroup, GroupDirection.RIGHT);\n\t\tawait rightGroup.openEditor(input2, { pinned: true });\n\n\t\tconst downGroup = part.copyGroup(rootGroup, rightGroup, GroupDirection.DOWN);\n\t\tawait downGroup.openEditor(input3, { pinned: true });\n\n\t\tpart.activateGroup(rootGroup);\n\n\t\tassert.strictEqual(rootGroup.count, 1);\n\n\t\tconst result = part.mergeAllGroups(part.activeGroup);\n\t\tassert.strictEqual(result, true);\n\t\tassert.strictEqual(rootGroup.count, 3);\n\n\t\tpart.dispose();\n\t});\n\n\ttest('whenReady / whenRestored', async () => {\n\t\tconst [part] = await createPart();\n\n\t\tawait part.whenReady;\n\t\tassert.strictEqual(part.isReady, true);\n\t\tawait part.whenRestored;\n\t});\n\n\ttest('options', async () => {\n\t\tconst [part] = await createPart();\n\n\t\tlet oldOptions!: IEditorPartOptions;\n\t\tlet newOptions!: IEditorPartOptions;\n\t\tdisposables.add(part.onDidChangeEditorPartOptions(event => {\n\t\t\toldOptions = event.oldPartOptions;\n\t\t\tnewOptions = event.newPartOptions;\n\t\t}));\n\n\t\tconst currentOptions = part.partOptions;\n\t\tassert.ok(currentOptions);\n\n\t\tdisposables.add(part.enforcePartOptions({ showTabs: 'single' }));\n\t\tassert.strictEqual(part.partOptions.showTabs, 'single');\n\t\tassert.strictEqual(newOptions.showTabs, 'single');\n\t\tassert.strictEqual(oldOptions, currentOptions);\n\t});\n\n\ttest('editor basics', async function () {\n\t\tconst [part] = await createPart();\n\t\tconst group = part.activeGroup;\n\t\tassert.strictEqual(group.isEmpty, true);\n\n\t\tlet activeEditorChangeCounter = 0;\n\t\tlet editorDidOpenCounter = 0;\n\t\tconst editorOpenEvents: IGroupModelChangeEvent[] = [];\n\t\tlet editorCloseCounter = 0;\n\t\tconst editorCloseEvents: IGroupModelChangeEvent[] = [];\n\t\tlet editorPinCounter = 0;\n\t\tlet editorStickyCounter = 0;\n\t\tlet editorCapabilitiesCounter = 0;\n\t\tconst editorGroupModelChangeListener = group.onDidModelChange(e => {\n\t\t\tif (e.kind === GroupModelChangeKind.EDITOR_OPEN) {\n\t\t\t\tassert.ok(e.editor);\n\t\t\t\teditorDidOpenCounter++;\n\t\t\t\teditorOpenEvents.push(e);\n\t\t\t} else if (e.kind === GroupModelChangeKind.EDITOR_PIN) {\n\t\t\t\tassert.ok(e.editor);\n\t\t\t\teditorPinCounter++;\n\t\t\t} else if (e.kind === GroupModelChangeKind.EDITOR_STICKY) {\n\t\t\t\tassert.ok(e.editor);\n\t\t\t\teditorStickyCounter++;\n\t\t\t} else if (e.kind === GroupModelChangeKind.EDITOR_CAPABILITIES) {\n\t\t\t\tassert.ok(e.editor);\n\t\t\t\teditorCapabilitiesCounter++;\n\t\t\t} else if (e.kind === GroupModelChangeKind.EDITOR_CLOSE) {\n\t\t\t\tassert.ok(e.editor);\n\t\t\t\teditorCloseCounter++;\n\t\t\t\teditorCloseEvents.push(e);\n\t\t\t}\n\t\t});\n\t\tconst activeEditorChangeListener = group.onDidActiveEditorChange(e => {\n\t\t\tassert.ok(e.editor);\n\t\t\tactiveEditorChangeCounter++;\n\t\t});\n\n\t\tlet editorCloseCounter1 = 0;\n\t\tconst editorCloseListener = group.onDidCloseEditor(() => {\n\t\t\teditorCloseCounter1++;\n\t\t});\n\n\t\tlet editorWillCloseCounter = 0;\n\t\tconst editorWillCloseListener = group.onWillCloseEditor(() => {\n\t\t\teditorWillCloseCounter++;\n\t\t});\n\n\t\tlet editorDidCloseCounter = 0;\n\t\tconst editorDidCloseListener = group.onDidCloseEditor(() => {\n\t\t\teditorDidCloseCounter++;\n\t\t});\n\n\t\tconst input = createTestFileEditorInput(URI.file('foo/bar'), TEST_EDITOR_INPUT_ID);\n\t\tconst inputInactive = createTestFileEditorInput(URI.file('foo/bar/inactive'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait group.openEditor(input, { pinned: true });\n\t\tawait group.openEditor(inputInactive, { inactive: true });\n\n\t\tassert.strictEqual(group.isActive(input), true);\n\t\tassert.strictEqual(group.isActive(inputInactive), false);\n\t\tassert.strictEqual(group.contains(input), true);\n\t\tassert.strictEqual(group.contains(inputInactive), true);\n\t\tassert.strictEqual(group.isEmpty, false);\n\t\tassert.strictEqual(group.count, 2);\n\t\tassert.strictEqual(editorCapabilitiesCounter, 0);\n\t\tassert.strictEqual(editorDidOpenCounter, 2);\n\t\tassert.strictEqual((editorOpenEvents[0] as IGroupEditorOpenEvent).editorIndex, 0);\n\t\tassert.strictEqual((editorOpenEvents[1] as IGroupEditorOpenEvent).editorIndex, 1);\n\t\tassert.strictEqual(editorOpenEvents[0].editor, input);\n\t\tassert.strictEqual(editorOpenEvents[1].editor, inputInactive);\n\t\tassert.strictEqual(activeEditorChangeCounter, 1);\n\t\tassert.strictEqual(group.getEditorByIndex(0), input);\n\t\tassert.strictEqual(group.getEditorByIndex(1), inputInactive);\n\t\tassert.strictEqual(group.getIndexOfEditor(input), 0);\n\t\tassert.strictEqual(group.getIndexOfEditor(inputInactive), 1);\n\t\tassert.strictEqual(group.isFirst(input), true);\n\t\tassert.strictEqual(group.isFirst(inputInactive), false);\n\t\tassert.strictEqual(group.isLast(input), false);\n\t\tassert.strictEqual(group.isLast(inputInactive), true);\n\n\t\tinput.capabilities = EditorInputCapabilities.RequiresTrust;\n\t\tassert.strictEqual(editorCapabilitiesCounter, 1);\n\n\t\tinputInactive.capabilities = EditorInputCapabilities.Singleton;\n\t\tassert.strictEqual(editorCapabilitiesCounter, 2);\n\n\t\tassert.strictEqual(group.previewEditor, inputInactive);\n\t\tassert.strictEqual(group.isPinned(inputInactive), false);\n\t\tgroup.pinEditor(inputInactive);\n\t\tassert.strictEqual(editorPinCounter, 1);\n\t\tassert.strictEqual(group.isPinned(inputInactive), true);\n\t\tassert.ok(!group.previewEditor);\n\n\t\tassert.strictEqual(group.activeEditor, input);\n\t\tassert.strictEqual(group.activeEditorPane?.getId(), TEST_EDITOR_ID);\n\t\tassert.strictEqual(group.count, 2);\n\n\t\tconst mru = group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE);\n\t\tassert.strictEqual(mru[0], input);\n\t\tassert.strictEqual(mru[1], inputInactive);\n\n\t\tawait group.openEditor(inputInactive);\n\t\tassert.strictEqual(activeEditorChangeCounter, 2);\n\t\tassert.strictEqual(group.activeEditor, inputInactive);\n\n\t\tawait group.openEditor(input);\n\t\tconst closed = await group.closeEditor(inputInactive);\n\t\tassert.strictEqual(closed, true);\n\n\t\tassert.strictEqual(activeEditorChangeCounter, 3);\n\t\tassert.strictEqual(editorCloseCounter, 1);\n\t\tassert.strictEqual((editorCloseEvents[0] as IGroupEditorOpenEvent).editorIndex, 1);\n\t\tassert.strictEqual(editorCloseEvents[0].editor, inputInactive);\n\t\tassert.strictEqual(editorCloseCounter1, 1);\n\t\tassert.strictEqual(editorWillCloseCounter, 1);\n\t\tassert.strictEqual(editorDidCloseCounter, 1);\n\n\t\tassert.ok(inputInactive.gotDisposed);\n\n\t\tassert.strictEqual(group.activeEditor, input);\n\n\t\tassert.strictEqual(editorStickyCounter, 0);\n\t\tgroup.stickEditor(input);\n\t\tassert.strictEqual(editorStickyCounter, 1);\n\t\tgroup.unstickEditor(input);\n\t\tassert.strictEqual(editorStickyCounter, 2);\n\n\t\teditorCloseListener.dispose();\n\t\teditorWillCloseListener.dispose();\n\t\teditorDidCloseListener.dispose();\n\t\tactiveEditorChangeListener.dispose();\n\t\teditorGroupModelChangeListener.dispose();\n\t});\n\n\ttest('openEditors / closeEditors', async () => {\n\t\tconst [part] = await createPart();\n\t\tconst group = part.activeGroup;\n\t\tassert.strictEqual(group.isEmpty, true);\n\n\t\tconst input = createTestFileEditorInput(URI.file('foo/bar'), TEST_EDITOR_INPUT_ID);\n\t\tconst inputInactive = createTestFileEditorInput(URI.file('foo/bar/inactive'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait group.openEditors([\n\t\t\t{ editor: input, options: { pinned: true } },\n\t\t\t{ editor: inputInactive }\n\t\t]);\n\n\t\tassert.strictEqual(group.count, 2);\n\t\tassert.strictEqual(group.getEditorByIndex(0), input);\n\t\tassert.strictEqual(group.getEditorByIndex(1), inputInactive);\n\n\t\tawait group.closeEditors([input, inputInactive]);\n\n\t\tassert.ok(input.gotDisposed);\n\t\tassert.ok(inputInactive.gotDisposed);\n\n\t\tassert.strictEqual(group.isEmpty, true);\n\t});\n\n\ttest('closeEditor - dirty editor handling', async () => {\n\t\tconst [part, instantiationService] = await createPart();\n\n\t\tconst accessor = instantiationService.createInstance(TestServiceAccessor);\n\t\taccessor.fileDialogService.setConfirmResult(ConfirmResult.DONT_SAVE);\n\n\t\tconst group = part.activeGroup;\n\n\t\tconst input = createTestFileEditorInput(URI.file('foo/bar'), TEST_EDITOR_INPUT_ID);\n\t\tinput.dirty = true;\n\n\t\tawait group.openEditor(input);\n\n\t\taccessor.fileDialogService.setConfirmResult(ConfirmResult.CANCEL);\n\t\tlet closed = await group.closeEditor(input);\n\t\tassert.strictEqual(closed, false);\n\n\t\tassert.ok(!input.gotDisposed);\n\n\t\taccessor.fileDialogService.setConfirmResult(ConfirmResult.DONT_SAVE);\n\t\tclosed = await group.closeEditor(input);\n\t\tassert.strictEqual(closed, true);\n\n\t\tassert.ok(input.gotDisposed);\n\t});\n\n\ttest('closeEditor (one, opened in multiple groups)', async () => {\n\t\tconst [part] = await createPart();\n\t\tconst group = part.activeGroup;\n\t\tassert.strictEqual(group.isEmpty, true);\n\n\t\tconst rightGroup = part.addGroup(group, GroupDirection.RIGHT);\n\n\t\tconst input = createTestFileEditorInput(URI.file('foo/bar'), TEST_EDITOR_INPUT_ID);\n\t\tconst inputInactive = createTestFileEditorInput(URI.file('foo/bar/inactive'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait group.openEditors([{ editor: input, options: { pinned: true } }, { editor: inputInactive }]);\n\t\tawait rightGroup.openEditors([{ editor: input, options: { pinned: true } }, { editor: inputInactive }]);\n\n\t\tlet closed = await rightGroup.closeEditor(input);\n\t\tassert.strictEqual(closed, true);\n\n\t\tassert.ok(!input.gotDisposed);\n\n\t\tclosed = await group.closeEditor(input);\n\t\tassert.strictEqual(closed, true);\n\n\t\tassert.ok(input.gotDisposed);\n\t});\n\n\ttest('closeEditors - dirty editor handling', async () => {\n\t\tconst [part, instantiationService] = await createPart();\n\n\t\tconst accessor = instantiationService.createInstance(TestServiceAccessor);\n\t\taccessor.fileDialogService.setConfirmResult(ConfirmResult.DONT_SAVE);\n\t\tlet closeResult = false;\n\n\t\tconst group = part.activeGroup;\n\n\t\tconst input1 = createTestFileEditorInput(URI.file('foo/bar1'), TEST_EDITOR_INPUT_ID);\n\t\tinput1.dirty = true;\n\n\t\tconst input2 = createTestFileEditorInput(URI.file('foo/bar2'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait group.openEditor(input1);\n\t\tawait group.openEditor(input2);\n\n\t\taccessor.fileDialogService.setConfirmResult(ConfirmResult.CANCEL);\n\t\tcloseResult = await group.closeEditors([input1, input2]);\n\t\tassert.strictEqual(closeResult, false);\n\n\t\tassert.ok(!input1.gotDisposed);\n\t\tassert.ok(!input2.gotDisposed);\n\n\t\taccessor.fileDialogService.setConfirmResult(ConfirmResult.DONT_SAVE);\n\t\tcloseResult = await group.closeEditors([input1, input2]);\n\t\tassert.strictEqual(closeResult, true);\n\n\t\tassert.ok(input1.gotDisposed);\n\t\tassert.ok(input2.gotDisposed);\n\t});\n\n\ttest('closeEditors (except one)', async () => {\n\t\tconst [part] = await createPart();\n\t\tconst group = part.activeGroup;\n\t\tassert.strictEqual(group.isEmpty, true);\n\n\t\tconst input1 = createTestFileEditorInput(URI.file('foo/bar1'), TEST_EDITOR_INPUT_ID);\n\t\tconst input2 = createTestFileEditorInput(URI.file('foo/bar2'), TEST_EDITOR_INPUT_ID);\n\t\tconst input3 = createTestFileEditorInput(URI.file('foo/bar3'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait group.openEditors([\n\t\t\t{ editor: input1, options: { pinned: true } },\n\t\t\t{ editor: input2, options: { pinned: true } },\n\t\t\t{ editor: input3 }\n\t\t]);\n\n\t\tassert.strictEqual(group.count, 3);\n\t\tassert.strictEqual(group.getEditorByIndex(0), input1);\n\t\tassert.strictEqual(group.getEditorByIndex(1), input2);\n\t\tassert.strictEqual(group.getEditorByIndex(2), input3);\n\n\t\tawait group.closeEditors({ except: input2 });\n\t\tassert.strictEqual(group.count, 1);\n\t\tassert.strictEqual(group.getEditorByIndex(0), input2);\n\t});\n\n\ttest('closeEditors (except one, sticky editor)', async () => {\n\t\tconst [part] = await createPart();\n\t\tconst group = part.activeGroup;\n\t\tassert.strictEqual(group.isEmpty, true);\n\n\t\tconst input1 = createTestFileEditorInput(URI.file('foo/bar1'), TEST_EDITOR_INPUT_ID);\n\t\tconst input2 = createTestFileEditorInput(URI.file('foo/bar2'), TEST_EDITOR_INPUT_ID);\n\t\tconst input3 = createTestFileEditorInput(URI.file('foo/bar3'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait group.openEditors([\n\t\t\t{ editor: input1, options: { pinned: true, sticky: true } },\n\t\t\t{ editor: input2, options: { pinned: true } },\n\t\t\t{ editor: input3 }\n\t\t]);\n\n\t\tassert.strictEqual(group.count, 3);\n\t\tassert.strictEqual(group.stickyCount, 1);\n\t\tassert.strictEqual(group.getEditorByIndex(0), input1);\n\t\tassert.strictEqual(group.getEditorByIndex(1), input2);\n\t\tassert.strictEqual(group.getEditorByIndex(2), input3);\n\n\t\tawait group.closeEditors({ except: input2, excludeSticky: true });\n\n\t\tassert.strictEqual(group.count, 2);\n\t\tassert.strictEqual(group.stickyCount, 1);\n\t\tassert.strictEqual(group.getEditorByIndex(0), input1);\n\t\tassert.strictEqual(group.getEditorByIndex(1), input2);\n\n\t\tawait group.closeEditors({ except: input2 });\n\n\t\tassert.strictEqual(group.count, 1);\n\t\tassert.strictEqual(group.stickyCount, 0);\n\t\tassert.strictEqual(group.getEditorByIndex(0), input2);\n\t});\n\n\ttest('closeEditors (saved only)', async () => {\n\t\tconst [part] = await createPart();\n\t\tconst group = part.activeGroup;\n\t\tassert.strictEqual(group.isEmpty, true);\n\n\t\tconst input1 = createTestFileEditorInput(URI.file('foo/bar1'), TEST_EDITOR_INPUT_ID);\n\t\tconst input2 = createTestFileEditorInput(URI.file('foo/bar2'), TEST_EDITOR_INPUT_ID);\n\t\tconst input3 = createTestFileEditorInput(URI.file('foo/bar3'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait group.openEditors([\n\t\t\t{ editor: input1, options: { pinned: true } },\n\t\t\t{ editor: input2, options: { pinned: true } },\n\t\t\t{ editor: input3 }\n\t\t]);\n\n\t\tassert.strictEqual(group.count, 3);\n\t\tassert.strictEqual(group.getEditorByIndex(0), input1);\n\t\tassert.strictEqual(group.getEditorByIndex(1), input2);\n\t\tassert.strictEqual(group.getEditorByIndex(2), input3);\n\n\t\tawait group.closeEditors({ savedOnly: true });\n\t\tassert.strictEqual(group.count, 0);\n\t});\n\n\ttest('closeEditors (saved only, sticky editor)', async () => {\n\t\tconst [part] = await createPart();\n\t\tconst group = part.activeGroup;\n\t\tassert.strictEqual(group.isEmpty, true);\n\n\t\tconst input1 = createTestFileEditorInput(URI.file('foo/bar1'), TEST_EDITOR_INPUT_ID);\n\t\tconst input2 = createTestFileEditorInput(URI.file('foo/bar2'), TEST_EDITOR_INPUT_ID);\n\t\tconst input3 = createTestFileEditorInput(URI.file('foo/bar3'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait group.openEditors([\n\t\t\t{ editor: input1, options: { pinned: true, sticky: true } },\n\t\t\t{ editor: input2, options: { pinned: true } },\n\t\t\t{ editor: input3 }\n\t\t]);\n\n\t\tassert.strictEqual(group.count, 3);\n\t\tassert.strictEqual(group.stickyCount, 1);\n\t\tassert.strictEqual(group.getEditorByIndex(0), input1);\n\t\tassert.strictEqual(group.getEditorByIndex(1), input2);\n\t\tassert.strictEqual(group.getEditorByIndex(2), input3);\n\n\t\tawait group.closeEditors({ savedOnly: true, excludeSticky: true });\n\n\t\tassert.strictEqual(group.count, 1);\n\t\tassert.strictEqual(group.stickyCount, 1);\n\t\tassert.strictEqual(group.getEditorByIndex(0), input1);\n\n\t\tawait group.closeEditors({ savedOnly: true });\n\t\tassert.strictEqual(group.count, 0);\n\t});\n\n\ttest('closeEditors (direction: right)', async () => {\n\t\tconst [part] = await createPart();\n\t\tconst group = part.activeGroup;\n\t\tassert.strictEqual(group.isEmpty, true);\n\n\t\tconst input1 = createTestFileEditorInput(URI.file('foo/bar1'), TEST_EDITOR_INPUT_ID);\n\t\tconst input2 = createTestFileEditorInput(URI.file('foo/bar2'), TEST_EDITOR_INPUT_ID);\n\t\tconst input3 = createTestFileEditorInput(URI.file('foo/bar3'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait group.openEditors([\n\t\t\t{ editor: input1, options: { pinned: true } },\n\t\t\t{ editor: input2, options: { pinned: true } },\n\t\t\t{ editor: input3 }\n\t\t]);\n\n\t\tassert.strictEqual(group.count, 3);\n\t\tassert.strictEqual(group.getEditorByIndex(0), input1);\n\t\tassert.strictEqual(group.getEditorByIndex(1), input2);\n\t\tassert.strictEqual(group.getEditorByIndex(2), input3);\n\n\t\tawait group.closeEditors({ direction: CloseDirection.RIGHT, except: input2 });\n\t\tassert.strictEqual(group.count, 2);\n\t\tassert.strictEqual(group.getEditorByIndex(0), input1);\n\t\tassert.strictEqual(group.getEditorByIndex(1), input2);\n\t});\n\n\ttest('closeEditors (direction: right, sticky editor)', async () => {\n\t\tconst [part] = await createPart();\n\t\tconst group = part.activeGroup;\n\t\tassert.strictEqual(group.isEmpty, true);\n\n\t\tconst input1 = createTestFileEditorInput(URI.file('foo/bar1'), TEST_EDITOR_INPUT_ID);\n\t\tconst input2 = createTestFileEditorInput(URI.file('foo/bar2'), TEST_EDITOR_INPUT_ID);\n\t\tconst input3 = createTestFileEditorInput(URI.file('foo/bar3'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait group.openEditors([\n\t\t\t{ editor: input1, options: { pinned: true, sticky: true } },\n\t\t\t{ editor: input2, options: { pinned: true } },\n\t\t\t{ editor: input3 }\n\t\t]);\n\n\t\tassert.strictEqual(group.count, 3);\n\t\tassert.strictEqual(group.stickyCount, 1);\n\t\tassert.strictEqual(group.getEditorByIndex(0), input1);\n\t\tassert.strictEqual(group.getEditorByIndex(1), input2);\n\t\tassert.strictEqual(group.getEditorByIndex(2), input3);\n\n\t\tawait group.closeEditors({ direction: CloseDirection.RIGHT, except: input2, excludeSticky: true });\n\t\tassert.strictEqual(group.count, 2);\n\t\tassert.strictEqual(group.stickyCount, 1);\n\t\tassert.strictEqual(group.getEditorByIndex(0), input1);\n\t\tassert.strictEqual(group.getEditorByIndex(1), input2);\n\n\t\tawait group.closeEditors({ direction: CloseDirection.RIGHT, except: input2 });\n\t\tassert.strictEqual(group.count, 2);\n\t\tassert.strictEqual(group.getEditorByIndex(0), input1);\n\t\tassert.strictEqual(group.getEditorByIndex(1), input2);\n\t});\n\n\ttest('closeEditors (direction: left)', async () => {\n\t\tconst [part] = await createPart();\n\t\tconst group = part.activeGroup;\n\t\tassert.strictEqual(group.isEmpty, true);\n\n\t\tconst input1 = createTestFileEditorInput(URI.file('foo/bar1'), TEST_EDITOR_INPUT_ID);\n\t\tconst input2 = createTestFileEditorInput(URI.file('foo/bar2'), TEST_EDITOR_INPUT_ID);\n\t\tconst input3 = createTestFileEditorInput(URI.file('foo/bar3'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait group.openEditors([\n\t\t\t{ editor: input1, options: { pinned: true } },\n\t\t\t{ editor: input2, options: { pinned: true } },\n\t\t\t{ editor: input3 }\n\t\t]);\n\n\t\tassert.strictEqual(group.count, 3);\n\t\tassert.strictEqual(group.getEditorByIndex(0), input1);\n\t\tassert.strictEqual(group.getEditorByIndex(1), input2);\n\t\tassert.strictEqual(group.getEditorByIndex(2), input3);\n\n\t\tawait group.closeEditors({ direction: CloseDirection.LEFT, except: input2 });\n\t\tassert.strictEqual(group.count, 2);\n\t\tassert.strictEqual(group.getEditorByIndex(0), input2);\n\t\tassert.strictEqual(group.getEditorByIndex(1), input3);\n\t});\n\n\ttest('closeEditors (direction: left, sticky editor)', async () => {\n\t\tconst [part] = await createPart();\n\t\tconst group = part.activeGroup;\n\t\tassert.strictEqual(group.isEmpty, true);\n\n\t\tconst input1 = createTestFileEditorInput(URI.file('foo/bar1'), TEST_EDITOR_INPUT_ID);\n\t\tconst input2 = createTestFileEditorInput(URI.file('foo/bar2'), TEST_EDITOR_INPUT_ID);\n\t\tconst input3 = createTestFileEditorInput(URI.file('foo/bar3'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait group.openEditors([\n\t\t\t{ editor: input1, options: { pinned: true, sticky: true } },\n\t\t\t{ editor: input2, options: { pinned: true } },\n\t\t\t{ editor: input3 }\n\t\t]);\n\n\t\tassert.strictEqual(group.count, 3);\n\t\tassert.strictEqual(group.stickyCount, 1);\n\t\tassert.strictEqual(group.getEditorByIndex(0), input1);\n\t\tassert.strictEqual(group.getEditorByIndex(1), input2);\n\t\tassert.strictEqual(group.getEditorByIndex(2), input3);\n\n\t\tawait group.closeEditors({ direction: CloseDirection.LEFT, except: input2, excludeSticky: true });\n\t\tassert.strictEqual(group.count, 3);\n\t\tassert.strictEqual(group.stickyCount, 1);\n\t\tassert.strictEqual(group.getEditorByIndex(0), input1);\n\t\tassert.strictEqual(group.getEditorByIndex(1), input2);\n\t\tassert.strictEqual(group.getEditorByIndex(2), input3);\n\n\t\tawait group.closeEditors({ direction: CloseDirection.LEFT, except: input2 });\n\t\tassert.strictEqual(group.count, 2);\n\t\tassert.strictEqual(group.getEditorByIndex(0), input2);\n\t\tassert.strictEqual(group.getEditorByIndex(1), input3);\n\t});\n\n\ttest('closeAllEditors', async () => {\n\t\tconst [part] = await createPart();\n\t\tconst group = part.activeGroup;\n\t\tassert.strictEqual(group.isEmpty, true);\n\n\t\tconst input = createTestFileEditorInput(URI.file('foo/bar'), TEST_EDITOR_INPUT_ID);\n\t\tconst inputInactive = createTestFileEditorInput(URI.file('foo/bar/inactive'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait group.openEditors([\n\t\t\t{ editor: input, options: { pinned: true } },\n\t\t\t{ editor: inputInactive }\n\t\t]);\n\n\t\tassert.strictEqual(group.count, 2);\n\t\tassert.strictEqual(group.getEditorByIndex(0), input);\n\t\tassert.strictEqual(group.getEditorByIndex(1), inputInactive);\n\n\t\tawait group.closeAllEditors();\n\t\tassert.strictEqual(group.isEmpty, true);\n\t});\n\n\ttest('closeAllEditors - dirty editor handling', async () => {\n\t\tconst [part, instantiationService] = await createPart();\n\t\tlet closeResult = true;\n\n\t\tconst accessor = instantiationService.createInstance(TestServiceAccessor);\n\t\taccessor.fileDialogService.setConfirmResult(ConfirmResult.DONT_SAVE);\n\n\t\tconst group = part.activeGroup;\n\n\t\tconst input1 = createTestFileEditorInput(URI.file('foo/bar1'), TEST_EDITOR_INPUT_ID);\n\t\tinput1.dirty = true;\n\n\t\tconst input2 = createTestFileEditorInput(URI.file('foo/bar2'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait group.openEditor(input1);\n\t\tawait group.openEditor(input2);\n\n\t\taccessor.fileDialogService.setConfirmResult(ConfirmResult.CANCEL);\n\t\tcloseResult = await group.closeAllEditors();\n\n\t\tassert.strictEqual(closeResult, false);\n\t\tassert.ok(!input1.gotDisposed);\n\t\tassert.ok(!input2.gotDisposed);\n\n\t\taccessor.fileDialogService.setConfirmResult(ConfirmResult.DONT_SAVE);\n\t\tcloseResult = await group.closeAllEditors();\n\n\t\tassert.strictEqual(closeResult, true);\n\t\tassert.ok(input1.gotDisposed);\n\t\tassert.ok(input2.gotDisposed);\n\t});\n\n\ttest('closeAllEditors (sticky editor)', async () => {\n\t\tconst [part] = await createPart();\n\t\tconst group = part.activeGroup;\n\t\tassert.strictEqual(group.isEmpty, true);\n\n\t\tconst input = createTestFileEditorInput(URI.file('foo/bar'), TEST_EDITOR_INPUT_ID);\n\t\tconst inputInactive = createTestFileEditorInput(URI.file('foo/bar/inactive'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait group.openEditors([\n\t\t\t{ editor: input, options: { pinned: true, sticky: true } },\n\t\t\t{ editor: inputInactive }\n\t\t]);\n\n\t\tassert.strictEqual(group.count, 2);\n\t\tassert.strictEqual(group.stickyCount, 1);\n\n\t\tawait group.closeAllEditors({ excludeSticky: true });\n\n\t\tassert.strictEqual(group.count, 1);\n\t\tassert.strictEqual(group.stickyCount, 1);\n\t\tassert.strictEqual(group.getEditorByIndex(0), input);\n\n\t\tawait group.closeAllEditors();\n\n\t\tassert.strictEqual(group.isEmpty, true);\n\t});\n\n\ttest('moveEditor (same group)', async () => {\n\t\tconst [part] = await createPart();\n\t\tconst group = part.activeGroup;\n\t\tassert.strictEqual(group.isEmpty, true);\n\n\t\tconst input = createTestFileEditorInput(URI.file('foo/bar'), TEST_EDITOR_INPUT_ID);\n\t\tconst inputInactive = createTestFileEditorInput(URI.file('foo/bar/inactive'), TEST_EDITOR_INPUT_ID);\n\n\t\tconst moveEvents: IGroupModelChangeEvent[] = [];\n\t\tconst editorGroupModelChangeListener = group.onDidModelChange(e => {\n\t\t\tif (e.kind === GroupModelChangeKind.EDITOR_MOVE) {\n\t\t\t\tassert.ok(e.editor);\n\t\t\t\tmoveEvents.push(e);\n\t\t\t}\n\t\t});\n\n\t\tawait group.openEditors([{ editor: input, options: { pinned: true } }, { editor: inputInactive }]);\n\t\tassert.strictEqual(group.count, 2);\n\t\tassert.strictEqual(group.getEditorByIndex(0), input);\n\t\tassert.strictEqual(group.getEditorByIndex(1), inputInactive);\n\t\tgroup.moveEditor(inputInactive, group, { index: 0 });\n\t\tassert.strictEqual(moveEvents.length, 1);\n\t\tassert.strictEqual((moveEvents[0] as IGroupEditorOpenEvent).editorIndex, 0);\n\t\tassert.strictEqual((moveEvents[0] as IGroupEditorMoveEvent).oldEditorIndex, 1);\n\t\tassert.strictEqual(moveEvents[0].editor, inputInactive);\n\t\tassert.strictEqual(group.getEditorByIndex(0), inputInactive);\n\t\tassert.strictEqual(group.getEditorByIndex(1), input);\n\n\t\tconst res = group.moveEditors([{ editor: inputInactive, options: { index: 1 } }], group);\n\t\tassert.strictEqual(res, true);\n\t\tassert.strictEqual(moveEvents.length, 2);\n\t\tassert.strictEqual((moveEvents[1] as IGroupEditorOpenEvent).editorIndex, 1);\n\t\tassert.strictEqual((moveEvents[1] as IGroupEditorMoveEvent).oldEditorIndex, 0);\n\t\tassert.strictEqual(moveEvents[1].editor, inputInactive);\n\t\tassert.strictEqual(group.getEditorByIndex(0), input);\n\t\tassert.strictEqual(group.getEditorByIndex(1), inputInactive);\n\n\t\teditorGroupModelChangeListener.dispose();\n\t});\n\n\ttest('moveEditor (across groups)', async () => {\n\t\tconst [part] = await createPart();\n\t\tconst group = part.activeGroup;\n\t\tassert.strictEqual(group.isEmpty, true);\n\n\t\tconst rightGroup = part.addGroup(group, GroupDirection.RIGHT);\n\n\t\tconst input = createTestFileEditorInput(URI.file('foo/bar'), TEST_EDITOR_INPUT_ID);\n\t\tconst inputInactive = createTestFileEditorInput(URI.file('foo/bar/inactive'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait group.openEditors([{ editor: input, options: { pinned: true } }, { editor: inputInactive }]);\n\t\tassert.strictEqual(group.count, 2);\n\t\tassert.strictEqual(group.getEditorByIndex(0), input);\n\t\tassert.strictEqual(group.getEditorByIndex(1), inputInactive);\n\t\tgroup.moveEditor(inputInactive, rightGroup, { index: 0 });\n\t\tassert.strictEqual(group.count, 1);\n\t\tassert.strictEqual(group.getEditorByIndex(0), input);\n\t\tassert.strictEqual(rightGroup.count, 1);\n\t\tassert.strictEqual(rightGroup.getEditorByIndex(0), inputInactive);\n\t});\n\n\ttest('moveEditors (across groups)', async () => {\n\t\tconst [part] = await createPart();\n\t\tconst group = part.activeGroup;\n\t\tassert.strictEqual(group.isEmpty, true);\n\n\t\tconst rightGroup = part.addGroup(group, GroupDirection.RIGHT);\n\n\t\tconst input1 = createTestFileEditorInput(URI.file('foo/bar1'), TEST_EDITOR_INPUT_ID);\n\t\tconst input2 = createTestFileEditorInput(URI.file('foo/bar2'), TEST_EDITOR_INPUT_ID);\n\t\tconst input3 = createTestFileEditorInput(URI.file('foo/bar3'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait group.openEditors([{ editor: input1, options: { pinned: true } }, { editor: input2, options: { pinned: true } }, { editor: input3, options: { pinned: true } }]);\n\t\tassert.strictEqual(group.getEditorByIndex(0), input1);\n\t\tassert.strictEqual(group.getEditorByIndex(1), input2);\n\t\tassert.strictEqual(group.getEditorByIndex(2), input3);\n\t\tgroup.moveEditors([{ editor: input2 }, { editor: input3 }], rightGroup);\n\t\tassert.strictEqual(group.count, 1);\n\t\tassert.strictEqual(rightGroup.count, 2);\n\t\tassert.strictEqual(group.getEditorByIndex(0), input1);\n\t\tassert.strictEqual(rightGroup.getEditorByIndex(0), input2);\n\t\tassert.strictEqual(rightGroup.getEditorByIndex(1), input3);\n\t});\n\n\ttest('copyEditor (across groups)', async () => {\n\t\tconst [part] = await createPart();\n\t\tconst group = part.activeGroup;\n\t\tassert.strictEqual(group.isEmpty, true);\n\n\t\tconst rightGroup = part.addGroup(group, GroupDirection.RIGHT);\n\n\t\tconst input = createTestFileEditorInput(URI.file('foo/bar'), TEST_EDITOR_INPUT_ID);\n\t\tconst inputInactive = createTestFileEditorInput(URI.file('foo/bar/inactive'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait group.openEditors([{ editor: input, options: { pinned: true } }, { editor: inputInactive }]);\n\t\tassert.strictEqual(group.count, 2);\n\t\tassert.strictEqual(group.getEditorByIndex(0), input);\n\t\tassert.strictEqual(group.getEditorByIndex(1), inputInactive);\n\t\tgroup.copyEditor(inputInactive, rightGroup, { index: 0 });\n\t\tassert.strictEqual(group.count, 2);\n\t\tassert.strictEqual(group.getEditorByIndex(0), input);\n\t\tassert.strictEqual(group.getEditorByIndex(1), inputInactive);\n\t\tassert.strictEqual(rightGroup.count, 1);\n\t\tassert.strictEqual(rightGroup.getEditorByIndex(0), inputInactive);\n\t});\n\n\ttest('copyEditors (across groups)', async () => {\n\t\tconst [part] = await createPart();\n\t\tconst group = part.activeGroup;\n\t\tassert.strictEqual(group.isEmpty, true);\n\n\t\tconst rightGroup = part.addGroup(group, GroupDirection.RIGHT);\n\n\t\tconst input1 = createTestFileEditorInput(URI.file('foo/bar1'), TEST_EDITOR_INPUT_ID);\n\t\tconst input2 = createTestFileEditorInput(URI.file('foo/bar2'), TEST_EDITOR_INPUT_ID);\n\t\tconst input3 = createTestFileEditorInput(URI.file('foo/bar3'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait group.openEditors([{ editor: input1, options: { pinned: true } }, { editor: input2, options: { pinned: true } }, { editor: input3, options: { pinned: true } }]);\n\t\tassert.strictEqual(group.getEditorByIndex(0), input1);\n\t\tassert.strictEqual(group.getEditorByIndex(1), input2);\n\t\tassert.strictEqual(group.getEditorByIndex(2), input3);\n\t\tgroup.copyEditors([{ editor: input1 }, { editor: input2 }, { editor: input3 }], rightGroup);\n\t\t[group, rightGroup].forEach(group => {\n\t\t\tassert.strictEqual(group.getEditorByIndex(0), input1);\n\t\t\tassert.strictEqual(group.getEditorByIndex(1), input2);\n\t\t\tassert.strictEqual(group.getEditorByIndex(2), input3);\n\t\t});\n\t});\n\n\ttest('replaceEditors', async () => {\n\t\tconst [part] = await createPart();\n\t\tconst group = part.activeGroup;\n\t\tassert.strictEqual(group.isEmpty, true);\n\n\t\tconst input = createTestFileEditorInput(URI.file('foo/bar'), TEST_EDITOR_INPUT_ID);\n\t\tconst inputInactive = createTestFileEditorInput(URI.file('foo/bar/inactive'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait group.openEditor(input);\n\t\tassert.strictEqual(group.count, 1);\n\t\tassert.strictEqual(group.getEditorByIndex(0), input);\n\n\t\tawait group.replaceEditors([{ editor: input, replacement: inputInactive }]);\n\t\tassert.strictEqual(group.count, 1);\n\t\tassert.strictEqual(group.getEditorByIndex(0), inputInactive);\n\t});\n\n\ttest('replaceEditors - dirty editor handling', async () => {\n\t\tconst [part, instantiationService] = await createPart();\n\n\t\tconst accessor = instantiationService.createInstance(TestServiceAccessor);\n\t\taccessor.fileDialogService.setConfirmResult(ConfirmResult.DONT_SAVE);\n\n\t\tconst group = part.activeGroup;\n\n\t\tconst input1 = createTestFileEditorInput(URI.file('foo/bar1'), TEST_EDITOR_INPUT_ID);\n\t\tinput1.dirty = true;\n\n\t\tconst input2 = createTestFileEditorInput(URI.file('foo/bar2'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait group.openEditor(input1);\n\t\tassert.strictEqual(group.activeEditor, input1);\n\n\t\taccessor.fileDialogService.setConfirmResult(ConfirmResult.CANCEL);\n\t\tawait group.replaceEditors([{ editor: input1, replacement: input2 }]);\n\n\t\tassert.strictEqual(group.activeEditor, input1);\n\t\tassert.ok(!input1.gotDisposed);\n\n\t\taccessor.fileDialogService.setConfirmResult(ConfirmResult.DONT_SAVE);\n\t\tawait group.replaceEditors([{ editor: input1, replacement: input2 }]);\n\n\t\tassert.strictEqual(group.activeEditor, input2);\n\t\tassert.ok(input1.gotDisposed);\n\t});\n\n\ttest('replaceEditors - forceReplaceDirty flag', async () => {\n\t\tconst [part, instantiationService] = await createPart();\n\n\t\tconst accessor = instantiationService.createInstance(TestServiceAccessor);\n\t\taccessor.fileDialogService.setConfirmResult(ConfirmResult.DONT_SAVE);\n\n\t\tconst group = part.activeGroup;\n\n\t\tconst input1 = createTestFileEditorInput(URI.file('foo/bar1'), TEST_EDITOR_INPUT_ID);\n\t\tinput1.dirty = true;\n\n\t\tconst input2 = createTestFileEditorInput(URI.file('foo/bar2'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait group.openEditor(input1);\n\t\tassert.strictEqual(group.activeEditor, input1);\n\t\taccessor.fileDialogService.setConfirmResult(ConfirmResult.CANCEL);\n\t\tawait group.replaceEditors([{ editor: input1, replacement: input2, forceReplaceDirty: false }]);\n\n\t\tassert.strictEqual(group.activeEditor, input1);\n\t\tassert.ok(!input1.gotDisposed);\n\n\t\tawait group.replaceEditors([{ editor: input1, replacement: input2, forceReplaceDirty: true }]);\n\n\t\tassert.strictEqual(group.activeEditor, input2);\n\t\tassert.ok(input1.gotDisposed);\n\t});\n\n\ttest('replaceEditors - proper index handling', async () => {\n\t\tconst [part] = await createPart();\n\t\tconst group = part.activeGroup;\n\t\tassert.strictEqual(group.isEmpty, true);\n\n\t\tconst input1 = createTestFileEditorInput(URI.file('foo/bar1'), TEST_EDITOR_INPUT_ID);\n\t\tconst input2 = createTestFileEditorInput(URI.file('foo/bar2'), TEST_EDITOR_INPUT_ID);\n\t\tconst input3 = createTestFileEditorInput(URI.file('foo/bar3'), TEST_EDITOR_INPUT_ID);\n\t\tconst input4 = createTestFileEditorInput(URI.file('foo/bar4'), TEST_EDITOR_INPUT_ID);\n\t\tconst input5 = createTestFileEditorInput(URI.file('foo/bar5'), TEST_EDITOR_INPUT_ID);\n\n\t\tconst input6 = createTestFileEditorInput(URI.file('foo/bar6'), TEST_EDITOR_INPUT_ID);\n\t\tconst input7 = createTestFileEditorInput(URI.file('foo/bar7'), TEST_EDITOR_INPUT_ID);\n\t\tconst input8 = createTestFileEditorInput(URI.file('foo/bar8'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait group.openEditor(input1, { pinned: true });\n\t\tawait group.openEditor(input2, { pinned: true });\n\t\tawait group.openEditor(input3, { pinned: true });\n\t\tawait group.openEditor(input4, { pinned: true });\n\t\tawait group.openEditor(input5, { pinned: true });\n\n\t\tawait group.replaceEditors([\n\t\t\t{ editor: input1, replacement: input6 },\n\t\t\t{ editor: input3, replacement: input7 },\n\t\t\t{ editor: input5, replacement: input8 }\n\t\t]);\n\n\t\tassert.strictEqual(group.getEditorByIndex(0), input6);\n\t\tassert.strictEqual(group.getEditorByIndex(1), input2);\n\t\tassert.strictEqual(group.getEditorByIndex(2), input7);\n\t\tassert.strictEqual(group.getEditorByIndex(3), input4);\n\t\tassert.strictEqual(group.getEditorByIndex(4), input8);\n\t});\n\n\ttest('replaceEditors - should be able to replace when side by side editor is involved with same input side by side', async () => {\n\t\tconst [part, instantiationService] = await createPart();\n\t\tconst group = part.activeGroup;\n\t\tassert.strictEqual(group.isEmpty, true);\n\n\t\tconst input = createTestFileEditorInput(URI.file('foo/bar'), TEST_EDITOR_INPUT_ID);\n\t\tconst sideBySideInput = instantiationService.createInstance(SideBySideEditorInput, undefined, undefined, input, input);\n\n\t\tawait group.openEditor(input);\n\t\tassert.strictEqual(group.count, 1);\n\t\tassert.strictEqual(group.getEditorByIndex(0), input);\n\n\t\tawait group.replaceEditors([{ editor: input, replacement: sideBySideInput }]);\n\t\tassert.strictEqual(group.count, 1);\n\t\tassert.strictEqual(group.getEditorByIndex(0), sideBySideInput);\n\n\t\tawait group.replaceEditors([{ editor: sideBySideInput, replacement: input }]);\n\t\tassert.strictEqual(group.count, 1);\n\t\tassert.strictEqual(group.getEditorByIndex(0), input);\n\t});\n\n\ttest('find editors', async () => {\n\t\tconst [part] = await createPart();\n\t\tconst group = part.activeGroup;\n\t\tconst group2 = part.addGroup(group, GroupDirection.RIGHT);\n\t\tassert.strictEqual(group.isEmpty, true);\n\n\t\tconst input1 = createTestFileEditorInput(URI.file('foo/bar1'), TEST_EDITOR_INPUT_ID);\n\t\tconst input2 = createTestFileEditorInput(URI.file('foo/bar1'), `${TEST_EDITOR_INPUT_ID}-1`);\n\t\tconst input3 = createTestFileEditorInput(URI.file('foo/bar3'), TEST_EDITOR_INPUT_ID);\n\t\tconst input4 = createTestFileEditorInput(URI.file('foo/bar4'), TEST_EDITOR_INPUT_ID);\n\t\tconst input5 = createTestFileEditorInput(URI.file('foo/bar4'), `${TEST_EDITOR_INPUT_ID}-1`);\n\n\t\tawait group.openEditor(input1, { pinned: true });\n\t\tawait group.openEditor(input2, { pinned: true });\n\t\tawait group.openEditor(input3, { pinned: true });\n\t\tawait group.openEditor(input4, { pinned: true });\n\t\tawait group2.openEditor(input5, { pinned: true });\n\n\t\tlet foundEditors = group.findEditors(URI.file('foo/bar1'));\n\t\tassert.strictEqual(foundEditors.length, 2);\n\t\tfoundEditors = group2.findEditors(URI.file('foo/bar4'));\n\t\tassert.strictEqual(foundEditors.length, 1);\n\t});\n\n\ttest('find editors (side by side support)', async () => {\n\t\tconst [part, instantiationService] = await createPart();\n\n\t\tconst accessor = instantiationService.createInstance(TestServiceAccessor);\n\n\t\tconst group = part.activeGroup;\n\t\tassert.strictEqual(group.isEmpty, true);\n\n\t\tconst secondaryInput = createTestFileEditorInput(URI.file('foo/bar-secondary'), TEST_EDITOR_INPUT_ID);\n\t\tconst primaryInput = createTestFileEditorInput(URI.file('foo/bar-primary'), `${TEST_EDITOR_INPUT_ID}-1`);\n\n\t\tconst sideBySideEditor = new SideBySideEditorInput(undefined, undefined, secondaryInput, primaryInput, accessor.editorService);\n\t\tawait group.openEditor(sideBySideEditor, { pinned: true });\n\n\t\tlet foundEditors = group.findEditors(URI.file('foo/bar-secondary'));\n\t\tassert.strictEqual(foundEditors.length, 0);\n\n\t\tfoundEditors = group.findEditors(URI.file('foo/bar-secondary'), { supportSideBySide: SideBySideEditor.PRIMARY });\n\t\tassert.strictEqual(foundEditors.length, 0);\n\n\t\tfoundEditors = group.findEditors(URI.file('foo/bar-primary'), { supportSideBySide: SideBySideEditor.PRIMARY });\n\t\tassert.strictEqual(foundEditors.length, 1);\n\n\t\tfoundEditors = group.findEditors(URI.file('foo/bar-secondary'), { supportSideBySide: SideBySideEditor.SECONDARY });\n\t\tassert.strictEqual(foundEditors.length, 1);\n\n\t\tfoundEditors = group.findEditors(URI.file('foo/bar-primary'), { supportSideBySide: SideBySideEditor.SECONDARY });\n\t\tassert.strictEqual(foundEditors.length, 0);\n\n\t\tfoundEditors = group.findEditors(URI.file('foo/bar-secondary'), { supportSideBySide: SideBySideEditor.ANY });\n\t\tassert.strictEqual(foundEditors.length, 1);\n\n\t\tfoundEditors = group.findEditors(URI.file('foo/bar-primary'), { supportSideBySide: SideBySideEditor.ANY });\n\t\tassert.strictEqual(foundEditors.length, 1);\n\t});\n\n\ttest('find neighbour group (left/right)', async function () {\n\t\tconst [part] = await createPart();\n\t\tconst rootGroup = part.activeGroup;\n\t\tconst rightGroup = part.addGroup(rootGroup, GroupDirection.RIGHT);\n\n\t\tassert.strictEqual(rightGroup, part.findGroup({ direction: GroupDirection.RIGHT }, rootGroup));\n\t\tassert.strictEqual(rootGroup, part.findGroup({ direction: GroupDirection.LEFT }, rightGroup));\n\t});\n\n\ttest('find neighbour group (up/down)', async function () {\n\t\tconst [part] = await createPart();\n\t\tconst rootGroup = part.activeGroup;\n\t\tconst downGroup = part.addGroup(rootGroup, GroupDirection.DOWN);\n\n\t\tassert.strictEqual(downGroup, part.findGroup({ direction: GroupDirection.DOWN }, rootGroup));\n\t\tassert.strictEqual(rootGroup, part.findGroup({ direction: GroupDirection.UP }, downGroup));\n\t});\n\n\ttest('find group by location (left/right)', async function () {\n\t\tconst [part] = await createPart();\n\t\tconst rootGroup = part.activeGroup;\n\t\tconst rightGroup = part.addGroup(rootGroup, GroupDirection.RIGHT);\n\t\tconst downGroup = part.addGroup(rightGroup, GroupDirection.DOWN);\n\n\t\tassert.strictEqual(rootGroup, part.findGroup({ location: GroupLocation.FIRST }));\n\t\tassert.strictEqual(downGroup, part.findGroup({ location: GroupLocation.LAST }));\n\n\t\tassert.strictEqual(rightGroup, part.findGroup({ location: GroupLocation.NEXT }, rootGroup));\n\t\tassert.strictEqual(rootGroup, part.findGroup({ location: GroupLocation.PREVIOUS }, rightGroup));\n\n\t\tassert.strictEqual(downGroup, part.findGroup({ location: GroupLocation.NEXT }, rightGroup));\n\t\tassert.strictEqual(rightGroup, part.findGroup({ location: GroupLocation.PREVIOUS }, downGroup));\n\t});\n\n\ttest('applyLayout (2x2)', async function () {\n\t\tconst [part] = await createPart();\n\n\t\tpart.applyLayout({ groups: [{ groups: [{}, {}] }, { groups: [{}, {}] }], orientation: GroupOrientation.HORIZONTAL });\n\n\t\tassert.strictEqual(part.groups.length, 4);\n\t});\n\n\ttest('getLayout', async function () {\n\t\tconst [part] = await createPart();\n\n\t\t// 2x2\n\t\tpart.applyLayout({ groups: [{ groups: [{}, {}] }, { groups: [{}, {}] }], orientation: GroupOrientation.HORIZONTAL });\n\t\tlet layout = part.getLayout();\n\n\t\tassert.strictEqual(layout.orientation, GroupOrientation.HORIZONTAL);\n\t\tassert.strictEqual(layout.groups.length, 2);\n\t\tassert.strictEqual(layout.groups[0].groups!.length, 2);\n\t\tassert.strictEqual(layout.groups[1].groups!.length, 2);\n\n\t\t// 3 columns\n\t\tpart.applyLayout({ groups: [{}, {}, {}], orientation: GroupOrientation.VERTICAL });\n\t\tlayout = part.getLayout();\n\n\t\tassert.strictEqual(layout.orientation, GroupOrientation.VERTICAL);\n\t\tassert.strictEqual(layout.groups.length, 3);\n\t\tassert.ok(typeof layout.groups[0].size === 'number');\n\t\tassert.ok(typeof layout.groups[1].size === 'number');\n\t\tassert.ok(typeof layout.groups[2].size === 'number');\n\t});\n\n\ttest('centeredLayout', async function () {\n\t\tconst [part] = await createPart();\n\n\t\tpart.centerLayout(true);\n\n\t\tassert.strictEqual(part.isLayoutCentered(), true);\n\t});\n\n\ttest('sticky editors', async () => {\n\t\tconst [part] = await createPart();\n\t\tconst group = part.activeGroup;\n\n\t\tassert.strictEqual(group.stickyCount, 0);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL).length, 0);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE).length, 0);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL, { excludeSticky: true }).length, 0);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE, { excludeSticky: true }).length, 0);\n\n\t\tconst input = createTestFileEditorInput(URI.file('foo/bar'), TEST_EDITOR_INPUT_ID);\n\t\tconst inputInactive = createTestFileEditorInput(URI.file('foo/bar/inactive'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait group.openEditor(input, { pinned: true });\n\t\tawait group.openEditor(inputInactive, { inactive: true });\n\n\t\tassert.strictEqual(group.stickyCount, 0);\n\t\tassert.strictEqual(group.isSticky(input), false);\n\t\tassert.strictEqual(group.isSticky(inputInactive), false);\n\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL).length, 2);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE).length, 2);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL, { excludeSticky: true }).length, 2);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE, { excludeSticky: true }).length, 2);\n\n\t\tgroup.stickEditor(input);\n\n\t\tassert.strictEqual(group.stickyCount, 1);\n\t\tassert.strictEqual(group.isSticky(input), true);\n\t\tassert.strictEqual(group.isSticky(inputInactive), false);\n\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL).length, 2);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE).length, 2);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL, { excludeSticky: true }).length, 1);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE, { excludeSticky: true }).length, 1);\n\n\t\tgroup.unstickEditor(input);\n\n\t\tassert.strictEqual(group.stickyCount, 0);\n\t\tassert.strictEqual(group.isSticky(input), false);\n\t\tassert.strictEqual(group.isSticky(inputInactive), false);\n\n\t\tassert.strictEqual(group.getIndexOfEditor(input), 0);\n\t\tassert.strictEqual(group.getIndexOfEditor(inputInactive), 1);\n\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL).length, 2);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE).length, 2);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL, { excludeSticky: true }).length, 2);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE, { excludeSticky: true }).length, 2);\n\n\t\tlet editorMoveCounter = 0;\n\t\tconst editorGroupModelChangeListener = group.onDidModelChange(e => {\n\t\t\tif (e.kind === GroupModelChangeKind.EDITOR_MOVE) {\n\t\t\t\tassert.ok(e.editor);\n\t\t\t\teditorMoveCounter++;\n\t\t\t}\n\t\t});\n\n\t\tgroup.stickEditor(inputInactive);\n\n\t\tassert.strictEqual(group.stickyCount, 1);\n\t\tassert.strictEqual(group.isSticky(input), false);\n\t\tassert.strictEqual(group.isSticky(inputInactive), true);\n\n\t\tassert.strictEqual(group.getIndexOfEditor(input), 1);\n\t\tassert.strictEqual(group.getIndexOfEditor(inputInactive), 0);\n\t\tassert.strictEqual(editorMoveCounter, 1);\n\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL).length, 2);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE).length, 2);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.SEQUENTIAL, { excludeSticky: true }).length, 1);\n\t\tassert.strictEqual(group.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE, { excludeSticky: true }).length, 1);\n\n\t\tconst inputSticky = createTestFileEditorInput(URI.file('foo/bar/sticky'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait group.openEditor(inputSticky, { sticky: true });\n\n\t\tassert.strictEqual(group.stickyCount, 2);\n\t\tassert.strictEqual(group.isSticky(input), false);\n\t\tassert.strictEqual(group.isSticky(inputInactive), true);\n\t\tassert.strictEqual(group.isSticky(inputSticky), true);\n\n\t\tassert.strictEqual(group.getIndexOfEditor(inputInactive), 0);\n\t\tassert.strictEqual(group.getIndexOfEditor(inputSticky), 1);\n\t\tassert.strictEqual(group.getIndexOfEditor(input), 2);\n\n\t\tawait group.openEditor(input, { sticky: true });\n\n\t\tassert.strictEqual(group.stickyCount, 3);\n\t\tassert.strictEqual(group.isSticky(input), true);\n\t\tassert.strictEqual(group.isSticky(inputInactive), true);\n\t\tassert.strictEqual(group.isSticky(inputSticky), true);\n\n\t\tassert.strictEqual(group.getIndexOfEditor(inputInactive), 0);\n\t\tassert.strictEqual(group.getIndexOfEditor(inputSticky), 1);\n\t\tassert.strictEqual(group.getIndexOfEditor(input), 2);\n\n\t\teditorGroupModelChangeListener.dispose();\n\t});\n\n\ttest('sticky: true wins over index', async () => {\n\t\tconst [part] = await createPart();\n\t\tconst group = part.activeGroup;\n\n\t\tassert.strictEqual(group.stickyCount, 0);\n\n\t\tconst input = createTestFileEditorInput(URI.file('foo/bar'), TEST_EDITOR_INPUT_ID);\n\t\tconst inputInactive = createTestFileEditorInput(URI.file('foo/bar/inactive'), TEST_EDITOR_INPUT_ID);\n\t\tconst inputSticky = createTestFileEditorInput(URI.file('foo/bar/sticky'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait group.openEditor(input, { pinned: true });\n\t\tawait group.openEditor(inputInactive, { inactive: true });\n\t\tawait group.openEditor(inputSticky, { sticky: true, index: 2 });\n\n\t\tassert.strictEqual(group.stickyCount, 1);\n\t\tassert.strictEqual(group.isSticky(inputSticky), true);\n\n\t\tassert.strictEqual(group.getIndexOfEditor(input), 1);\n\t\tassert.strictEqual(group.getIndexOfEditor(inputInactive), 2);\n\t\tassert.strictEqual(group.getIndexOfEditor(inputSticky), 0);\n\t});\n\n\ttest('selection: setSelection, isSelected, selectedEditors', async () => {\n\t\tconst [part] = await createPart();\n\t\tconst group = part.activeGroup;\n\n\t\tconst input1 = createTestFileEditorInput(URI.file('foo/bar1'), TEST_EDITOR_INPUT_ID);\n\t\tconst input2 = createTestFileEditorInput(URI.file('foo/bar2'), TEST_EDITOR_INPUT_ID);\n\t\tconst input3 = createTestFileEditorInput(URI.file('foo/bar3'), TEST_EDITOR_INPUT_ID);\n\n\t\tfunction isSelection(inputs: TestFileEditorInput[]): boolean {\n\t\t\tfor (const input of inputs) {\n\t\t\t\tif (group.selectedEditors.indexOf(input) === -1) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn inputs.length === group.selectedEditors.length;\n\t\t}\n\n\t\t// Active: input1, Selected: input1\n\t\tawait group.openEditors([input1, input2, input3].map(editor => ({ editor, options: { pinned: true } })));\n\n\t\tassert.strictEqual(group.isActive(input1), true);\n\t\tassert.strictEqual(group.isSelected(input1), true);\n\t\tassert.strictEqual(group.isSelected(input2), false);\n\t\tassert.strictEqual(group.isSelected(input3), false);\n\n\t\tassert.strictEqual(isSelection([input1]), true);\n\n\t\t// Active: input1, Selected: input1, input3\n\t\tawait group.setSelection(input1, [input3]);\n\n\t\tassert.strictEqual(group.isActive(input1), true);\n\t\tassert.strictEqual(group.isSelected(input1), true);\n\t\tassert.strictEqual(group.isSelected(input2), false);\n\t\tassert.strictEqual(group.isSelected(input3), true);\n\n\t\tassert.strictEqual(isSelection([input1, input3]), true);\n\n\t\t// Active: input2, Selected: input1, input3\n\t\tawait group.setSelection(input2, [input1, input3]);\n\n\t\tassert.strictEqual(group.isSelected(input1), true);\n\t\tassert.strictEqual(group.isActive(input2), true);\n\t\tassert.strictEqual(group.isSelected(input2), true);\n\t\tassert.strictEqual(group.isSelected(input3), true);\n\n\t\tassert.strictEqual(isSelection([input1, input2, input3]), true);\n\n\t\tawait group.setSelection(input1, []);\n\n\t\t// Selected: input3\n\t\tassert.strictEqual(group.isActive(input1), true);\n\t\tassert.strictEqual(group.isSelected(input1), true);\n\t\tassert.strictEqual(group.isSelected(input2), false);\n\t\tassert.strictEqual(group.isSelected(input3), false);\n\n\t\tassert.strictEqual(isSelection([input1]), true);\n\t});\n\n\ttest('moveEditor with context (across groups)', async () => {\n\t\tconst [part] = await createPart();\n\t\tconst group = part.activeGroup;\n\t\tassert.strictEqual(group.isEmpty, true);\n\n\t\tconst rightGroup = part.addGroup(group, GroupDirection.RIGHT);\n\n\t\tconst input = createTestFileEditorInput(URI.file('foo/bar'), TEST_EDITOR_INPUT_ID);\n\t\tconst inputInactive = createTestFileEditorInput(URI.file('foo/bar/inactive'), TEST_EDITOR_INPUT_ID);\n\t\tconst thirdInput = createTestFileEditorInput(URI.file('foo/bar/third'), TEST_EDITOR_INPUT_ID);\n\n\t\tlet leftFiredCount = 0;\n\t\tconst leftGroupListener = group.onWillMoveEditor(() => {\n\t\t\tleftFiredCount++;\n\t\t});\n\n\t\tlet rightFiredCount = 0;\n\t\tconst rightGroupListener = rightGroup.onWillMoveEditor(() => {\n\t\t\trightFiredCount++;\n\t\t});\n\n\t\tawait group.openEditors([{ editor: input, options: { pinned: true } }, { editor: inputInactive }, { editor: thirdInput }]);\n\t\tassert.strictEqual(leftFiredCount, 0);\n\t\tassert.strictEqual(rightFiredCount, 0);\n\n\t\tlet result = group.moveEditor(input, rightGroup);\n\t\tassert.strictEqual(result, true);\n\t\tassert.strictEqual(leftFiredCount, 1);\n\t\tassert.strictEqual(rightFiredCount, 0);\n\n\t\tresult = group.moveEditor(inputInactive, rightGroup);\n\t\tassert.strictEqual(result, true);\n\t\tassert.strictEqual(leftFiredCount, 2);\n\t\tassert.strictEqual(rightFiredCount, 0);\n\n\t\tresult = rightGroup.moveEditor(inputInactive, group);\n\t\tassert.strictEqual(result, true);\n\t\tassert.strictEqual(leftFiredCount, 2);\n\t\tassert.strictEqual(rightFiredCount, 1);\n\n\t\tleftGroupListener.dispose();\n\t\trightGroupListener.dispose();\n\t});\n\n\ttest('moveEditor disabled', async () => {\n\t\tconst [part] = await createPart();\n\t\tconst group = part.activeGroup;\n\t\tassert.strictEqual(group.isEmpty, true);\n\n\t\tconst rightGroup = part.addGroup(group, GroupDirection.RIGHT);\n\n\t\tconst input = createTestFileEditorInput(URI.file('foo/bar'), TEST_EDITOR_INPUT_ID);\n\t\tconst inputInactive = createTestFileEditorInput(URI.file('foo/bar/inactive'), TEST_EDITOR_INPUT_ID);\n\t\tconst thirdInput = createTestFileEditorInput(URI.file('foo/bar/third'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait group.openEditors([{ editor: input, options: { pinned: true } }, { editor: inputInactive }, { editor: thirdInput }]);\n\n\t\tinput.setMoveDisabled('disabled');\n\t\tconst result = group.moveEditor(input, rightGroup);\n\n\t\tassert.strictEqual(result, false);\n\t\tassert.strictEqual(group.count, 3);\n\t});\n\n\ttest('onWillOpenEditor', async () => {\n\t\tconst [part] = await createPart();\n\t\tconst group = part.activeGroup;\n\t\tassert.strictEqual(group.isEmpty, true);\n\n\t\tconst rightGroup = part.addGroup(group, GroupDirection.RIGHT);\n\n\t\tconst input = createTestFileEditorInput(URI.file('foo/bar'), TEST_EDITOR_INPUT_ID);\n\t\tconst secondInput = createTestFileEditorInput(URI.file('foo/bar/second'), TEST_EDITOR_INPUT_ID);\n\t\tconst thirdInput = createTestFileEditorInput(URI.file('foo/bar/third'), TEST_EDITOR_INPUT_ID);\n\n\t\tlet leftFiredCount = 0;\n\t\tconst leftGroupListener = group.onWillOpenEditor(() => {\n\t\t\tleftFiredCount++;\n\t\t});\n\n\t\tlet rightFiredCount = 0;\n\t\tconst rightGroupListener = rightGroup.onWillOpenEditor(() => {\n\t\t\trightFiredCount++;\n\t\t});\n\n\t\tawait group.openEditor(input);\n\t\tassert.strictEqual(leftFiredCount, 1);\n\t\tassert.strictEqual(rightFiredCount, 0);\n\n\t\trightGroup.openEditor(secondInput);\n\t\tassert.strictEqual(leftFiredCount, 1);\n\t\tassert.strictEqual(rightFiredCount, 1);\n\n\t\tgroup.openEditor(thirdInput);\n\t\tassert.strictEqual(leftFiredCount, 2);\n\t\tassert.strictEqual(rightFiredCount, 1);\n\n\t\t// Ensure move fires the open event too\n\t\trightGroup.moveEditor(secondInput, group);\n\t\tassert.strictEqual(leftFiredCount, 3);\n\t\tassert.strictEqual(rightFiredCount, 1);\n\n\t\tleftGroupListener.dispose();\n\t\trightGroupListener.dispose();\n\t});\n\n\ttest('copyEditor with context (across groups)', async () => {\n\t\tconst [part] = await createPart();\n\t\tconst group = part.activeGroup;\n\t\tassert.strictEqual(group.isEmpty, true);\n\t\tlet firedCount = 0;\n\t\tconst moveListener = group.onWillMoveEditor(() => firedCount++);\n\n\t\tconst rightGroup = part.addGroup(group, GroupDirection.RIGHT);\n\t\tconst input = createTestFileEditorInput(URI.file('foo/bar'), TEST_EDITOR_INPUT_ID);\n\t\tconst inputInactive = createTestFileEditorInput(URI.file('foo/bar/inactive'), TEST_EDITOR_INPUT_ID);\n\t\tawait group.openEditors([{ editor: input, options: { pinned: true } }, { editor: inputInactive }]);\n\t\tassert.strictEqual(firedCount, 0);\n\n\t\tgroup.copyEditor(inputInactive, rightGroup, { index: 0 });\n\n\t\tassert.strictEqual(firedCount, 0);\n\t\tmoveListener.dispose();\n\t});\n\n\ttest('locked groups - basics', async () => {\n\t\tconst [part] = await createPart();\n\t\tconst group = part.activeGroup;\n\n\t\tconst rightGroup = part.addGroup(group, GroupDirection.RIGHT);\n\n\t\tlet leftFiredCountFromPart = 0;\n\t\tlet rightFiredCountFromPart = 0;\n\t\tconst partListener = part.onDidChangeGroupLocked(g => {\n\t\t\tif (g === group) {\n\t\t\t\tleftFiredCountFromPart++;\n\t\t\t} else if (g === rightGroup) {\n\t\t\t\trightFiredCountFromPart++;\n\t\t\t}\n\t\t});\n\n\t\tlet leftFiredCountFromGroup = 0;\n\t\tconst leftGroupListener = group.onDidModelChange(e => {\n\t\t\tif (e.kind === GroupModelChangeKind.GROUP_LOCKED) {\n\t\t\t\tleftFiredCountFromGroup++;\n\t\t\t}\n\t\t});\n\n\t\tlet rightFiredCountFromGroup = 0;\n\t\tconst rightGroupListener = rightGroup.onDidModelChange(e => {\n\t\t\tif (e.kind === GroupModelChangeKind.GROUP_LOCKED) {\n\t\t\t\trightFiredCountFromGroup++;\n\t\t\t}\n\t\t});\n\n\t\trightGroup.lock(true);\n\t\trightGroup.lock(true);\n\n\t\tassert.strictEqual(leftFiredCountFromGroup, 0);\n\t\tassert.strictEqual(leftFiredCountFromPart, 0);\n\t\tassert.strictEqual(rightFiredCountFromGroup, 1);\n\t\tassert.strictEqual(rightFiredCountFromPart, 1);\n\n\t\trightGroup.lock(false);\n\t\trightGroup.lock(false);\n\n\t\tassert.strictEqual(leftFiredCountFromGroup, 0);\n\t\tassert.strictEqual(leftFiredCountFromPart, 0);\n\t\tassert.strictEqual(rightFiredCountFromGroup, 2);\n\t\tassert.strictEqual(rightFiredCountFromPart, 2);\n\n\t\tgroup.lock(true);\n\t\tgroup.lock(true);\n\n\t\tassert.strictEqual(leftFiredCountFromGroup, 1);\n\t\tassert.strictEqual(leftFiredCountFromPart, 1);\n\t\tassert.strictEqual(rightFiredCountFromGroup, 2);\n\t\tassert.strictEqual(rightFiredCountFromPart, 2);\n\n\t\tgroup.lock(false);\n\t\tgroup.lock(false);\n\n\t\tassert.strictEqual(leftFiredCountFromGroup, 2);\n\t\tassert.strictEqual(leftFiredCountFromPart, 2);\n\t\tassert.strictEqual(rightFiredCountFromGroup, 2);\n\t\tassert.strictEqual(rightFiredCountFromPart, 2);\n\n\t\tpartListener.dispose();\n\t\tleftGroupListener.dispose();\n\t\trightGroupListener.dispose();\n\t});\n\n\ttest('locked groups - single group is can be locked', async () => {\n\t\tconst [part] = await createPart();\n\t\tconst group = part.activeGroup;\n\n\t\tgroup.lock(true);\n\t\tassert.strictEqual(group.isLocked, true);\n\n\t\tconst rightGroup = part.addGroup(group, GroupDirection.RIGHT);\n\t\trightGroup.lock(true);\n\n\t\tassert.strictEqual(rightGroup.isLocked, true);\n\n\t\tpart.removeGroup(group);\n\t\tassert.strictEqual(rightGroup.isLocked, true);\n\n\t\tconst rightGroup2 = part.addGroup(rightGroup, GroupDirection.RIGHT);\n\t\trightGroup.lock(true);\n\t\trightGroup2.lock(true);\n\n\t\tassert.strictEqual(rightGroup.isLocked, true);\n\t\tassert.strictEqual(rightGroup2.isLocked, true);\n\n\t\tpart.removeGroup(rightGroup2);\n\n\t\tassert.strictEqual(rightGroup.isLocked, true);\n\t});\n\n\ttest('locked groups - auto locking via setting', async () => {\n\t\tconst instantiationService = workbenchInstantiationService(undefined, disposables);\n\t\tconst configurationService = new TestConfigurationService();\n\t\tawait configurationService.setUserConfiguration('workbench', { 'editor': { 'autoLockGroups': { 'testEditorInputForEditorGroupService': true } } });\n\t\tinstantiationService.stub(IConfigurationService, configurationService);\n\n\t\tconst [part] = await createPart(instantiationService);\n\n\t\tconst rootGroup = part.activeGroup;\n\t\tlet rightGroup = part.addGroup(rootGroup, GroupDirection.RIGHT);\n\n\t\tlet input1 = createTestFileEditorInput(URI.file('foo/bar1'), TEST_EDITOR_INPUT_ID);\n\t\tlet input2 = createTestFileEditorInput(URI.file('foo/bar2'), TEST_EDITOR_INPUT_ID);\n\n\t\t// First editor opens in right group: Locked=true\n\t\tawait rightGroup.openEditor(input1, { pinned: true });\n\t\tassert.strictEqual(rightGroup.isLocked, true);\n\n\t\t// Second editors opens in now unlocked right group: Locked=false\n\t\trightGroup.lock(false);\n\t\tawait rightGroup.openEditor(input2, { pinned: true });\n\t\tassert.strictEqual(rightGroup.isLocked, false);\n\n\t\t//First editor opens in root group without other groups being opened: Locked=false\n\t\tawait rightGroup.closeAllEditors();\n\t\tpart.removeGroup(rightGroup);\n\t\tawait rootGroup.closeAllEditors();\n\n\t\tinput1 = createTestFileEditorInput(URI.file('foo/bar1'), TEST_EDITOR_INPUT_ID);\n\t\tinput2 = createTestFileEditorInput(URI.file('foo/bar2'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait rootGroup.openEditor(input1, { pinned: true });\n\t\tassert.strictEqual(rootGroup.isLocked, false);\n\t\trightGroup = part.addGroup(rootGroup, GroupDirection.RIGHT);\n\t\tassert.strictEqual(rootGroup.isLocked, false);\n\t\tconst leftGroup = part.addGroup(rootGroup, GroupDirection.LEFT);\n\t\tassert.strictEqual(rootGroup.isLocked, false);\n\t\tpart.removeGroup(leftGroup);\n\t\tassert.strictEqual(rootGroup.isLocked, false);\n\t});\n\n\ttest('maximize editor group', async () => {\n\t\tconst instantiationService = workbenchInstantiationService(undefined, disposables);\n\t\tconst [part] = await createPart(instantiationService);\n\n\t\tconst rootGroup = part.activeGroup;\n\t\tconst editorPartSize = part.getSize(rootGroup);\n\n\t\t// If there is only one group, it should not be considered maximized\n\t\tassert.strictEqual(part.hasMaximizedGroup(), false);\n\n\t\tconst rightGroup = part.addGroup(rootGroup, GroupDirection.RIGHT);\n\t\tconst rightBottomGroup = part.addGroup(rightGroup, GroupDirection.DOWN);\n\n\t\tconst sizeRootGroup = part.getSize(rootGroup);\n\t\tconst sizeRightGroup = part.getSize(rightGroup);\n\t\tconst sizeRightBottomGroup = part.getSize(rightBottomGroup);\n\n\t\tlet maximizedValue;\n\t\tconst maxiizeGroupEventDisposable = part.onDidChangeGroupMaximized((maximized) => {\n\t\t\tmaximizedValue = maximized;\n\t\t});\n\n\t\tassert.strictEqual(part.hasMaximizedGroup(), false);\n\n\t\tpart.arrangeGroups(GroupsArrangement.MAXIMIZE, rootGroup);\n\n\t\tassert.strictEqual(part.hasMaximizedGroup(), true);\n\n\t\t// getSize()\n\t\tassert.deepStrictEqual(part.getSize(rootGroup), editorPartSize);\n\t\tassert.deepStrictEqual(part.getSize(rightGroup), { width: 0, height: 0 });\n\t\tassert.deepStrictEqual(part.getSize(rightBottomGroup), { width: 0, height: 0 });\n\n\t\tassert.deepStrictEqual(maximizedValue, true);\n\n\t\tpart.toggleMaximizeGroup();\n\n\t\tassert.strictEqual(part.hasMaximizedGroup(), false);\n\n\t\t// Size is restored\n\t\tassert.deepStrictEqual(part.getSize(rootGroup), sizeRootGroup);\n\t\tassert.deepStrictEqual(part.getSize(rightGroup), sizeRightGroup);\n\t\tassert.deepStrictEqual(part.getSize(rightBottomGroup), sizeRightBottomGroup);\n\n\t\tassert.deepStrictEqual(maximizedValue, false);\n\t\tmaxiizeGroupEventDisposable.dispose();\n\t});\n\n\ttest('transient editors - basics', async () => {\n\t\tconst [part] = await createPart();\n\t\tconst group = part.activeGroup;\n\n\t\tconst input = createTestFileEditorInput(URI.file('foo/bar'), TEST_EDITOR_INPUT_ID);\n\t\tconst inputTransient = createTestFileEditorInput(URI.file('foo/bar/inactive'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait group.openEditor(input, { pinned: true });\n\t\tawait group.openEditor(inputTransient, { transient: true });\n\n\t\tassert.strictEqual(group.isTransient(input), false);\n\t\tassert.strictEqual(group.isTransient(inputTransient), true);\n\n\t\tawait group.openEditor(input, { pinned: true });\n\t\tawait group.openEditor(inputTransient, { transient: true });\n\n\t\tassert.strictEqual(group.isTransient(inputTransient), true);\n\n\t\tawait group.openEditor(inputTransient, { transient: false });\n\t\tassert.strictEqual(group.isTransient(inputTransient), false);\n\n\t\tawait group.openEditor(inputTransient, { transient: true });\n\t\tassert.strictEqual(group.isTransient(inputTransient), false); // cannot make a non-transient editor transient when already opened\n\t});\n\n\ttest('transient editors - pinning clears transient', async () => {\n\t\tconst [part] = await createPart();\n\t\tconst group = part.activeGroup;\n\n\t\tconst input = createTestFileEditorInput(URI.file('foo/bar'), TEST_EDITOR_INPUT_ID);\n\t\tconst inputTransient = createTestFileEditorInput(URI.file('foo/bar/inactive'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait group.openEditor(input, { pinned: true });\n\t\tawait group.openEditor(inputTransient, { transient: true });\n\n\t\tassert.strictEqual(group.isTransient(input), false);\n\t\tassert.strictEqual(group.isTransient(inputTransient), true);\n\n\t\tawait group.openEditor(input, { pinned: true });\n\t\tawait group.openEditor(inputTransient, { pinned: true, transient: true });\n\n\t\tassert.strictEqual(group.isTransient(inputTransient), false);\n\t});\n\n\ttest('transient editors - overrides enablePreview setting', async function () {\n\t\tconst instantiationService = workbenchInstantiationService(undefined, disposables);\n\t\tconst configurationService = new TestConfigurationService();\n\t\tawait configurationService.setUserConfiguration('workbench', { 'editor': { 'enablePreview': false } });\n\t\tinstantiationService.stub(IConfigurationService, configurationService);\n\n\t\tconst [part] = await createPart(instantiationService);\n\n\t\tconst group = part.activeGroup;\n\t\tassert.strictEqual(group.isEmpty, true);\n\n\t\tconst input = createTestFileEditorInput(URI.file('foo/bar'), TEST_EDITOR_INPUT_ID);\n\t\tconst input2 = createTestFileEditorInput(URI.file('foo/bar2'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait group.openEditor(input, { pinned: false });\n\t\tassert.strictEqual(group.isPinned(input), true);\n\n\t\tawait group.openEditor(input2, { transient: true });\n\t\tassert.strictEqual(group.isPinned(input2), false);\n\n\t\tgroup.focus();\n\t\tassert.strictEqual(group.isPinned(input2), true);\n\t});\n\n\ttest('working sets - create / apply state', async function () {\n\t\tconst [part] = await createPart();\n\n\t\tconst input = createTestFileEditorInput(URI.file('foo/bar'), TEST_EDITOR_INPUT_ID);\n\t\tconst input2 = createTestFileEditorInput(URI.file('foo/bar2'), TEST_EDITOR_INPUT_ID);\n\n\t\tconst pane1 = await part.activeGroup.openEditor(input, { pinned: true });\n\t\tconst pane2 = await part.sideGroup.openEditor(input2, { pinned: true });\n\n\t\tconst state = part.createState();\n\n\t\tawait pane2?.group.closeAllEditors();\n\t\tawait pane1?.group.closeAllEditors();\n\n\t\tassert.strictEqual(part.count, 1);\n\t\tassert.strictEqual(part.activeGroup.isEmpty, true);\n\n\t\tawait part.applyState(state);\n\n\t\tassert.strictEqual(part.count, 2);\n\n\t\tassert.strictEqual(part.groups[0].contains(input), true);\n\t\tassert.strictEqual(part.groups[1].contains(input2), true);\n\n\t\tfor (const group of part.groups) {\n\t\t\tawait group.closeAllEditors();\n\t\t}\n\n\t\tconst emptyState = part.createState();\n\n\t\tawait part.applyState(emptyState);\n\t\tassert.strictEqual(part.count, 1);\n\n\t\tconst input3 = createTestFileEditorInput(URI.file('foo/bar3'), TEST_EDITOR_INPUT_ID);\n\t\tinput3.dirty = true;\n\t\tawait part.activeGroup.openEditor(input3, { pinned: true });\n\n\t\tawait part.applyState(emptyState);\n\n\t\tassert.strictEqual(part.count, 1);\n\t\tassert.strictEqual(part.groups[0].contains(input3), true); // dirty editors enforce to be there even when state is empty\n\n\t\tawait part.applyState('empty');\n\n\t\tassert.strictEqual(part.count, 1);\n\t\tassert.strictEqual(part.groups[0].contains(input3), true); // dirty editors enforce to be there even when state is empty\n\n\t\tinput3.dirty = false;\n\n\t\tawait part.applyState('empty');\n\n\t\tassert.strictEqual(part.count, 1);\n\t\tassert.strictEqual(part.activeGroup.isEmpty, true);\n\t});\n\n\ttest('context key provider', async function () {\n\t\tconst disposables = new DisposableStore();\n\n\t\t// Instantiate workbench and setup initial state\n\t\tconst instantiationService = workbenchInstantiationService({ contextKeyService: instantiationService => instantiationService.createInstance(MockScopableContextKeyService) }, disposables);\n\t\tconst rootContextKeyService = instantiationService.get(IContextKeyService);\n\n\t\tconst [parts] = await createParts(instantiationService);\n\n\t\tconst input1 = createTestFileEditorInput(URI.file('foo/bar'), TEST_EDITOR_INPUT_ID);\n\t\tconst input2 = createTestFileEditorInput(URI.file('foo/bar2'), TEST_EDITOR_INPUT_ID);\n\t\tconst input3 = createTestFileEditorInput(URI.file('foo/bar3'), TEST_EDITOR_INPUT_ID);\n\n\t\tconst group1 = parts.activeGroup;\n\t\tconst group2 = parts.addGroup(group1, GroupDirection.RIGHT);\n\n\t\tawait group2.openEditor(input2, { pinned: true });\n\t\tawait group1.openEditor(input1, { pinned: true });\n\n\t\t// Create context key provider\n\t\tconst rawContextKey = new RawContextKey<number>('testContextKey', parts.activeGroup.id);\n\t\tconst contextKeyProvider: IEditorGroupContextKeyProvider<number> = {\n\t\t\tcontextKey: rawContextKey,\n\t\t\tgetGroupContextKeyValue: (group) => group.id\n\t\t};\n\t\tdisposables.add(parts.registerContextKeyProvider(contextKeyProvider));\n\n\t\t// Initial state: group1 is active\n\t\tassert.strictEqual(parts.activeGroup.id, group1.id);\n\n\t\tlet globalContextKeyValue = rootContextKeyService.getContextKeyValue(rawContextKey.key);\n\t\tlet group1ContextKeyValue = group1.scopedContextKeyService.getContextKeyValue(rawContextKey.key);\n\t\tlet group2ContextKeyValue = group2.scopedContextKeyService.getContextKeyValue(rawContextKey.key);\n\t\tassert.strictEqual(globalContextKeyValue, group1.id);\n\t\tassert.strictEqual(group1ContextKeyValue, group1.id);\n\t\tassert.strictEqual(group2ContextKeyValue, group2.id);\n\n\t\t// Make group2 active and ensure both gloabal and local context key values are updated\n\t\tparts.activateGroup(group2);\n\n\t\tglobalContextKeyValue = rootContextKeyService.getContextKeyValue(rawContextKey.key);\n\t\tgroup1ContextKeyValue = group1.scopedContextKeyService.getContextKeyValue(rawContextKey.key);\n\t\tgroup2ContextKeyValue = group2.scopedContextKeyService.getContextKeyValue(rawContextKey.key);\n\t\tassert.strictEqual(globalContextKeyValue, group2.id);\n\t\tassert.strictEqual(group1ContextKeyValue, group1.id);\n\t\tassert.strictEqual(group2ContextKeyValue, group2.id);\n\n\t\t// Add a new group and ensure both gloabal and local context key values are updated\n\t\t// Group 3 will be active\n\t\tconst group3 = parts.addGroup(group2, GroupDirection.RIGHT);\n\t\tawait group3.openEditor(input3, { pinned: true });\n\n\t\tglobalContextKeyValue = rootContextKeyService.getContextKeyValue(rawContextKey.key);\n\t\tgroup1ContextKeyValue = group1.scopedContextKeyService.getContextKeyValue(rawContextKey.key);\n\t\tgroup2ContextKeyValue = group2.scopedContextKeyService.getContextKeyValue(rawContextKey.key);\n\t\tconst group3ContextKeyValue = group3.scopedContextKeyService.getContextKeyValue(rawContextKey.key);\n\t\tassert.strictEqual(globalContextKeyValue, group3.id);\n\t\tassert.strictEqual(group1ContextKeyValue, group1.id);\n\t\tassert.strictEqual(group2ContextKeyValue, group2.id);\n\t\tassert.strictEqual(group3ContextKeyValue, group3.id);\n\n\t\tdisposables.dispose();\n\t});\n\n\ttest('context key provider: onDidChange', async function () {\n\t\tconst disposables = new DisposableStore();\n\n\t\t// Instantiate workbench and setup initial state\n\t\tconst instantiationService = workbenchInstantiationService({ contextKeyService: instantiationService => instantiationService.createInstance(MockScopableContextKeyService) }, disposables);\n\t\tconst rootContextKeyService = instantiationService.get(IContextKeyService);\n\n\t\tconst parts = await createEditorParts(instantiationService, disposables);\n\n\t\tconst input1 = createTestFileEditorInput(URI.file('foo/bar'), TEST_EDITOR_INPUT_ID);\n\t\tconst input2 = createTestFileEditorInput(URI.file('foo/bar2'), TEST_EDITOR_INPUT_ID);\n\n\t\tconst group1 = parts.activeGroup;\n\t\tconst group2 = parts.addGroup(group1, GroupDirection.RIGHT);\n\n\t\tawait group2.openEditor(input2, { pinned: true });\n\t\tawait group1.openEditor(input1, { pinned: true });\n\n\t\t// Create context key provider\n\t\tlet offset = 0;\n\t\tconst _onDidChange = new Emitter<void>();\n\n\t\tconst rawContextKey = new RawContextKey<number>('testContextKey', parts.activeGroup.id);\n\t\tconst contextKeyProvider: IEditorGroupContextKeyProvider<number> = {\n\t\t\tcontextKey: rawContextKey,\n\t\t\tgetGroupContextKeyValue: (group) => group.id + offset,\n\t\t\tonDidChange: _onDidChange.event\n\t\t};\n\t\tdisposables.add(parts.registerContextKeyProvider(contextKeyProvider));\n\n\t\t// Initial state: group1 is active\n\t\tassert.strictEqual(parts.activeGroup.id, group1.id);\n\n\t\tlet globalContextKeyValue = rootContextKeyService.getContextKeyValue(rawContextKey.key);\n\t\tlet group1ContextKeyValue = group1.scopedContextKeyService.getContextKeyValue(rawContextKey.key);\n\t\tlet group2ContextKeyValue = group2.scopedContextKeyService.getContextKeyValue(rawContextKey.key);\n\t\tassert.strictEqual(globalContextKeyValue, group1.id + offset);\n\t\tassert.strictEqual(group1ContextKeyValue, group1.id + offset);\n\t\tassert.strictEqual(group2ContextKeyValue, group2.id + offset);\n\n\t\t// Make a change to the context key provider and fire onDidChange such that all context key values are updated\n\t\toffset = 10;\n\t\t_onDidChange.fire();\n\n\t\tglobalContextKeyValue = rootContextKeyService.getContextKeyValue(rawContextKey.key);\n\t\tgroup1ContextKeyValue = group1.scopedContextKeyService.getContextKeyValue(rawContextKey.key);\n\t\tgroup2ContextKeyValue = group2.scopedContextKeyService.getContextKeyValue(rawContextKey.key);\n\t\tassert.strictEqual(globalContextKeyValue, group1.id + offset);\n\t\tassert.strictEqual(group1ContextKeyValue, group1.id + offset);\n\t\tassert.strictEqual(group2ContextKeyValue, group2.id + offset);\n\n\t\tdisposables.dispose();\n\t});\n\n\ttest('context key provider: active editor change', async function () {\n\t\tconst disposables = new DisposableStore();\n\n\t\t// Instantiate workbench and setup initial state\n\t\tconst instantiationService = workbenchInstantiationService({ contextKeyService: instantiationService => instantiationService.createInstance(MockScopableContextKeyService) }, disposables);\n\t\tconst rootContextKeyService = instantiationService.get(IContextKeyService);\n\n\t\tconst parts = await createEditorParts(instantiationService, disposables);\n\n\t\tconst input1 = createTestFileEditorInput(URI.file('foo/bar'), TEST_EDITOR_INPUT_ID);\n\t\tconst input2 = createTestFileEditorInput(URI.file('foo/bar2'), TEST_EDITOR_INPUT_ID);\n\n\t\tconst group1 = parts.activeGroup;\n\n\t\tawait group1.openEditor(input2, { pinned: true });\n\t\tawait group1.openEditor(input1, { pinned: true });\n\n\t\t// Create context key provider\n\t\tconst rawContextKey = new RawContextKey<string>('testContextKey', input1.resource.toString());\n\t\tconst contextKeyProvider: IEditorGroupContextKeyProvider<string> = {\n\t\t\tcontextKey: rawContextKey,\n\t\t\tgetGroupContextKeyValue: (group) => group.activeEditor?.resource?.toString() ?? '',\n\t\t};\n\t\tdisposables.add(parts.registerContextKeyProvider(contextKeyProvider));\n\n\t\t// Initial state: input1 is active\n\t\tassert.strictEqual(isEqual(group1.activeEditor?.resource, input1.resource), true);\n\n\t\tlet globalContextKeyValue = rootContextKeyService.getContextKeyValue(rawContextKey.key);\n\t\tlet group1ContextKeyValue = group1.scopedContextKeyService.getContextKeyValue(rawContextKey.key);\n\t\tassert.strictEqual(globalContextKeyValue, input1.resource.toString());\n\t\tassert.strictEqual(group1ContextKeyValue, input1.resource.toString());\n\n\t\t// Make input2 active and ensure both gloabal and local context key values are updated\n\t\tawait group1.openEditor(input2);\n\n\t\tglobalContextKeyValue = rootContextKeyService.getContextKeyValue(rawContextKey.key);\n\t\tgroup1ContextKeyValue = group1.scopedContextKeyService.getContextKeyValue(rawContextKey.key);\n\t\tassert.strictEqual(globalContextKeyValue, input2.resource.toString());\n\t\tassert.strictEqual(group1ContextKeyValue, input2.resource.toString());\n\n\t\tdisposables.dispose();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"],
  "mappings": ";;AAKA,OAAO,YAAY;AACnB,SAAS,+BAA+B,oBAAoB,qBAAqB,gBAAgB,qBAAqB,2BAA2B,mBAAmB,mBAAmB,uBAAuB;AAC9M,SAAS,gBAAgB,aAAa,gBAAgB,kBAAkB,eAAe,eAAe,sBAAsB,mBAAmB,sCAAsC;AACrL,SAAS,gBAAgB,oBAAoB,cAAc,yBAAyB,sBAAsB,kBAAkB,wBAAwB,wBAAwB;AAC5K,SAAS,WAAW;AACpB,SAAS,sBAAsB;AAC/B,SAAS,uBAAuB;AAChC,SAAS,qCAAqC;AAC9C,SAAS,qBAAqB;AAC9B,SAAS,gCAAgC;AACzC,SAAS,6BAA6B;AACtC,SAAS,6BAA6B;AACtC,SAAS,wBAAwB,uBAAuB,6BAA6B;AACrF,SAAS,gCAAgC;AACzC,SAAS,+CAA+C;AACxD,SAAS,gBAAgB;AACzB,SAAS,oBAAoB,qBAAqB;AAClD,SAAS,eAAe;AACxB,SAAS,eAAe;AAExB,MAAM,uBAAuB,MAAM;AAElC,QAAM,iBAAiB;AACvB,QAAM,uBAAuB;AAE7B,QAAM,cAAc,IAAI,gBAAgB;AAExC,MAAI,gCAAuE;AAE3E,QAAM,MAAM;AACX,gBAAY,IAAI,mBAAmB,gBAAgB,CAAC,IAAI,eAAe,mBAAmB,GAAG,IAAI,eAAe,qBAAqB,CAAC,GAAG,oBAAoB,CAAC;AAAA,EAC/J,CAAC;AAED,WAAS,YAAY;AACpB,QAAI,+BAA+B;AAClC,YAAM,kBAAkB,6BAA6B;AACrD,sCAAgC;AAAA,IACjC;AAEA,gBAAY,MAAM;AAAA,EACnB,CAAC;AAED,iBAAe,YAAY,uBAAuB,8BAA8B,QAAW,WAAW,GAAyD;AAC9J,yBAAqB,eAAe,cAAY,SAAS,GAA2B,iBAAiB,aAAa,EAAE,MAAM,QAAQ,CAAC;AACnI,UAAM,QAAQ,MAAM,kBAAkB,sBAAsB,WAAW;AACvE,yBAAqB,KAAK,sBAAsB,KAAK;AAErD,oCAAgC;AAEhC,WAAO,CAAC,OAAO,oBAAoB;AAAA,EACpC;AARe;AAUf,iBAAe,WAAW,sBAAsG;AAC/H,UAAM,CAAC,OAAO,wBAAwB,IAAI,MAAM,YAAY,oBAAoB;AAChF,WAAO,CAAC,MAAM,cAAc,wBAAwB;AAAA,EACrD;AAHe;AAKf,WAAS,0BAA0B,UAAe,QAAqC;AACtF,WAAO,YAAY,IAAI,IAAI,oBAAoB,UAAU,MAAM,CAAC;AAAA,EACjE;AAFS;AAIT,OAAK,iBAAiB,iBAAkB;AACvC,UAAM,uBAAuB,8BAA8B,EAAE,mBAAmB,wBAAAA,0BAAwBA,sBAAqB,eAAe,6BAA6B,GAAzF,qBAA2F,GAAG,WAAW;AACzL,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW,oBAAoB;AAEpD,QAAI,gCAAgC;AACpC,UAAM,iCAAiC,KAAK,uBAAuB,MAAM;AACxE;AAAA,IACD,CAAC;AAED,QAAI,oBAAoB;AACxB,UAAM,qBAAqB,KAAK,cAAc,MAAM;AACnD;AAAA,IACD,CAAC;AAED,QAAI,sBAAsB;AAC1B,UAAM,uBAAuB,KAAK,iBAAiB,MAAM;AACxD;AAAA,IACD,CAAC;AAED,QAAI,oBAAoB;AACxB,UAAM,qBAAqB,KAAK,eAAe,MAAM;AACpD;AAAA,IACD,CAAC;AAGD,UAAM,YAAY,KAAK,OAAO,CAAC;AAC/B,WAAO,YAAY,cAAc,SAAS,GAAG,IAAI;AACjD,WAAO,YAAY,KAAK,OAAO,QAAQ,CAAC;AACxC,WAAO,YAAY,KAAK,OAAO,CAAC;AAChC,WAAO,YAAY,WAAW,KAAK,SAAS,UAAU,EAAE,CAAC;AACzD,WAAO,GAAG,KAAK,gBAAgB,SAAS;AACxC,WAAO,YAAY,UAAU,OAAO,SAAS;AAE7C,QAAI,MAAM,KAAK,UAAU,YAAY,oBAAoB;AACzD,WAAO,YAAY,IAAI,QAAQ,CAAC;AAChC,WAAO,YAAY,IAAI,CAAC,GAAG,SAAS;AAEpC,UAAM,aAAa,KAAK,SAAS,WAAW,eAAe,KAAK;AAChE,WAAO,YAAY,YAAY,KAAK,SAAS,WAAW,EAAE,CAAC;AAC3D,WAAO,YAAY,mBAAmB,CAAC;AACvC,WAAO,YAAY,KAAK,OAAO,QAAQ,CAAC;AACxC,WAAO,YAAY,KAAK,OAAO,CAAC;AAChC,WAAO,GAAG,KAAK,gBAAgB,SAAS;AACxC,WAAO,YAAY,UAAU,OAAO,SAAS;AAC7C,WAAO,YAAY,WAAW,OAAO,SAAS;AAE9C,UAAM,KAAK,UAAU,YAAY,oBAAoB;AACrD,WAAO,YAAY,IAAI,QAAQ,CAAC;AAChC,WAAO,YAAY,IAAI,CAAC,GAAG,SAAS;AACpC,WAAO,YAAY,IAAI,CAAC,GAAG,UAAU;AAErC,WAAO,YAAY,+BAA+B,CAAC;AAEnD,QAAI,+BAA+B;AACnC,UAAM,+BAA+B,UAAU,iBAAiB,OAAK;AACpE,UAAI,EAAE,SAAS,qBAAqB,cAAc;AACjD;AAAA,MACD;AAAA,IACD,CAAC;AAED,QAAI,gCAAgC;AACpC,UAAM,gCAAgC,WAAW,iBAAiB,OAAK;AACtE,UAAI,EAAE,SAAS,qBAAqB,cAAc;AACjD;AAAA,MACD;AAAA,IACD,CAAC;AAED,SAAK,cAAc,UAAU;AAC7B,WAAO,GAAG,KAAK,gBAAgB,UAAU;AACzC,WAAO,YAAY,+BAA+B,CAAC;AACnD,WAAO,YAAY,8BAA8B,CAAC;AAClD,WAAO,YAAY,+BAA+B,CAAC;AAEnD,iCAA6B,QAAQ;AACrC,kCAA8B,QAAQ;AAEtC,UAAM,KAAK,UAAU,YAAY,oBAAoB;AACrD,WAAO,YAAY,IAAI,QAAQ,CAAC;AAChC,WAAO,YAAY,IAAI,CAAC,GAAG,UAAU;AACrC,WAAO,YAAY,IAAI,CAAC,GAAG,SAAS;AAEpC,UAAM,YAAY,KAAK,SAAS,YAAY,eAAe,IAAI;AAC/D,QAAI,aAAa;AACjB,gBAAY,IAAI,UAAU,cAAc,MAAM;AAC7C,mBAAa;AAAA,IACd,CAAC,CAAC;AACF,WAAO,YAAY,mBAAmB,CAAC;AACvC,WAAO,YAAY,KAAK,OAAO,QAAQ,CAAC;AACxC,WAAO,GAAG,KAAK,gBAAgB,UAAU;AACzC,WAAO,GAAG,CAAC,UAAU,gBAAgB;AACrC,WAAO,YAAY,UAAU,OAAO,SAAS;AAC7C,WAAO,YAAY,WAAW,OAAO,SAAS;AAC9C,WAAO,YAAY,UAAU,OAAO,SAAS;AAE7C,UAAM,KAAK,UAAU,YAAY,oBAAoB;AACrD,WAAO,YAAY,IAAI,QAAQ,CAAC;AAChC,WAAO,YAAY,IAAI,CAAC,GAAG,UAAU;AACrC,WAAO,YAAY,IAAI,CAAC,GAAG,SAAS;AACpC,WAAO,YAAY,IAAI,CAAC,GAAG,SAAS;AAEpC,UAAM,YAAY,KAAK,UAAU,YAAY,eAAe;AAC5D,WAAO,YAAY,UAAU,QAAQ,CAAC;AACtC,WAAO,YAAY,UAAU,CAAC,GAAG,SAAS;AAC1C,WAAO,YAAY,UAAU,CAAC,EAAE,OAAO,CAAC;AACxC,WAAO,YAAY,UAAU,CAAC,GAAG,UAAU;AAC3C,WAAO,YAAY,UAAU,CAAC,EAAE,OAAO,CAAC;AACxC,WAAO,YAAY,UAAU,CAAC,GAAG,SAAS;AAC1C,WAAO,YAAY,UAAU,CAAC,EAAE,OAAO,CAAC;AAExC,SAAK,UAAU,WAAW,YAAY,eAAe,IAAI;AACzD,WAAO,YAAY,mBAAmB,CAAC;AAEvC,SAAK,YAAY,SAAS;AAC1B,WAAO,GAAG,CAAC,KAAK,SAAS,UAAU,EAAE,CAAC;AACtC,WAAO,GAAG,CAAC,KAAK,SAAS,UAAU,EAAE,CAAC;AACtC,WAAO,YAAY,YAAY,IAAI;AACnC,WAAO,YAAY,qBAAqB,CAAC;AACzC,WAAO,YAAY,KAAK,OAAO,QAAQ,CAAC;AACxC,WAAO,GAAG,KAAK,gBAAgB,UAAU;AACzC,WAAO,YAAY,UAAU,OAAO,SAAS;AAC7C,WAAO,YAAY,WAAW,OAAO,SAAS;AAE9C,UAAM,KAAK,UAAU,YAAY,oBAAoB;AACrD,WAAO,YAAY,IAAI,QAAQ,CAAC;AAChC,WAAO,YAAY,IAAI,CAAC,GAAG,UAAU;AACrC,WAAO,YAAY,IAAI,CAAC,GAAG,SAAS;AAEpC,UAAM,8BAA8B,KAAK,YAAY;AACrD,UAAM,6BAA6B,UAAU;AAE7C,WAAO,GAAG,2BAA2B;AACrC,WAAO,GAAG,0BAA0B;AACpC,WAAO,GAAG,gCAAgC,0BAA0B;AAEpE,SAAK,YAAY,UAAU;AAC3B,WAAO,YAAY,qBAAqB,CAAC;AACzC,WAAO,YAAY,KAAK,OAAO,QAAQ,CAAC;AACxC,WAAO,GAAG,KAAK,gBAAgB,SAAS;AAExC,UAAM,KAAK,UAAU,YAAY,oBAAoB;AACrD,WAAO,YAAY,IAAI,QAAQ,CAAC;AAChC,WAAO,YAAY,IAAI,CAAC,GAAG,SAAS;AAEpC,SAAK,YAAY,SAAS;AAC1B,WAAO,YAAY,KAAK,OAAO,QAAQ,CAAC;AACxC,WAAO,YAAY,qBAAqB,CAAC;AACzC,WAAO,GAAG,KAAK,gBAAgB,SAAS;AAExC,SAAK,oBAAoB,KAAK,gBAAgB,iBAAiB,aAAa,iBAAiB,WAAW,iBAAiB,UAAU;AAEnI,mCAA+B,QAAQ;AACvC,uBAAmB,QAAQ;AAC3B,yBAAqB,QAAQ;AAC7B,uBAAmB,QAAQ;AAAA,EAC5B,CAAC;AAED,OAAK,aAAa,YAAY;AAC7B,UAAM,uBAAuB,8BAA8B,EAAE,mBAAmB,wBAAAA,0BAAwBA,sBAAqB,eAAe,6BAA6B,GAAzF,qBAA2F,GAAG,WAAW;AACzL,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW,oBAAoB;AAEpD,UAAM,YAAY,KAAK;AAEvB,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACnF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACnF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AAEnF,UAAM,UAAU,WAAW,QAAQ,EAAE,QAAQ,KAAK,CAAC;AACnD,UAAM,KAAK,UAAU,WAAW,QAAQ,EAAE,QAAQ,KAAK,CAAC;AACxD,WAAO,YAAY,KAAK,OAAO,CAAC;AAEhC,SAAK,cAAc,SAAS;AAC5B,UAAM,KAAK,UAAU,WAAW,QAAQ,EAAE,QAAQ,KAAK,CAAC;AACxD,WAAO,YAAY,KAAK,OAAO,CAAC;AAAA,EACjC,CAAC;AAED,OAAK,wBAAwB,iBAAkB;AAC9C,UAAM,CAAC,MAAM,oBAAoB,IAAI,MAAM,WAAW;AAEtD,UAAM,YAAY,KAAK,OAAO,CAAC;AAC/B,UAAM,aAAa,KAAK,SAAS,WAAW,eAAe,KAAK;AAChE,UAAM,YAAY,KAAK,SAAS,YAAY,eAAe,IAAI;AAE/D,UAAM,iBAAiB,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AAC3F,UAAM,UAAU,WAAW,gBAAgB,EAAE,QAAQ,KAAK,CAAC;AAE3D,UAAM,kBAAkB,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AAC5F,UAAM,WAAW,WAAW,iBAAiB,EAAE,QAAQ,KAAK,CAAC;AAE7D,WAAO,YAAY,KAAK,OAAO,QAAQ,CAAC;AAExC,SAAK,cAAc;AACnB,SAAK,QAAQ;AAEb,UAAM,CAAC,YAAY,IAAI,MAAM,WAAW,oBAAoB;AAE5D,WAAO,YAAY,aAAa,OAAO,QAAQ,CAAC;AAChD,WAAO,GAAG,aAAa,SAAS,UAAU,EAAE,CAAC;AAC7C,WAAO,GAAG,aAAa,SAAS,UAAU,EAAE,CAAC;AAC7C,WAAO,GAAG,aAAa,SAAS,WAAW,EAAE,CAAC;AAC9C,WAAO,GAAG,aAAa,SAAS,WAAW,EAAE,CAAC;AAC9C,WAAO,GAAG,aAAa,SAAS,UAAU,EAAE,CAAC;AAC7C,WAAO,GAAG,aAAa,SAAS,UAAU,EAAE,CAAC;AAE7C,iBAAa,WAAW;AAAA,EACzB,CAAC;AAED,OAAK,yBAAyB,iBAAkB;AAC/C,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAEhC,UAAM,YAAY,KAAK,OAAO,CAAC;AAC/B,UAAM,aAAa,KAAK,SAAS,WAAW,eAAe,KAAK;AAChE,UAAM,YAAY,KAAK,SAAS,YAAY,eAAe,IAAI;AAE/D,QAAI,2BAA2B;AAC/B,UAAM,4BAA4B,KAAK,sBAAsB,MAAM;AAClE;AAAA,IACD,CAAC;AAED,QAAI,qBAAqB;AACzB,UAAM,sBAAsB,UAAU,iBAAiB,OAAK;AAC3D,UAAI,EAAE,SAAS,qBAAqB,aAAa;AAChD;AAAA,MACD;AAAA,IACD,CAAC;AAED,WAAO,YAAY,UAAU,OAAO,CAAC;AACrC,WAAO,YAAY,WAAW,OAAO,CAAC;AACtC,WAAO,YAAY,UAAU,OAAO,CAAC;AACrC,WAAO,YAAY,UAAU,OAAO,SAAS;AAC7C,WAAO,YAAY,WAAW,OAAO,SAAS;AAC9C,WAAO,YAAY,UAAU,OAAO,SAAS;AAE7C,SAAK,YAAY,UAAU;AAC3B,WAAO,YAAY,UAAU,OAAO,CAAC;AACrC,WAAO,YAAY,UAAU,OAAO,CAAC;AACrC,WAAO,YAAY,UAAU,OAAO,SAAS;AAC7C,WAAO,YAAY,UAAU,OAAO,SAAS;AAC7C,WAAO,YAAY,oBAAoB,CAAC;AACxC,WAAO,YAAY,0BAA0B,CAAC;AAE9C,SAAK,UAAU,WAAW,WAAW,eAAe,EAAE;AACtD,WAAO,YAAY,UAAU,OAAO,CAAC;AACrC,WAAO,YAAY,UAAU,OAAO,CAAC;AACrC,WAAO,YAAY,UAAU,OAAO,SAAS;AAC7C,WAAO,YAAY,UAAU,OAAO,SAAS;AAC7C,WAAO,YAAY,oBAAoB,CAAC;AACxC,WAAO,YAAY,0BAA0B,CAAC;AAE9C,UAAM,gBAAgB,KAAK,SAAS,WAAW,eAAe,EAAE;AAChE,WAAO,YAAY,cAAc,OAAO,CAAC;AACzC,WAAO,YAAY,UAAU,OAAO,CAAC;AACrC,WAAO,YAAY,UAAU,OAAO,CAAC;AACrC,WAAO,YAAY,cAAc,OAAO,SAAS;AACjD,WAAO,YAAY,UAAU,OAAO,SAAS;AAC7C,WAAO,YAAY,UAAU,OAAO,SAAS;AAC7C,WAAO,YAAY,oBAAoB,CAAC;AACxC,WAAO,YAAY,0BAA0B,CAAC;AAE9C,wBAAoB,QAAQ;AAC5B,8BAA0B,QAAQ;AAAA,EACnC,CAAC;AAED,OAAK,gBAAgB,iBAAkB;AACtC,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAEhC,UAAM,YAAY,KAAK,OAAO,CAAC;AAC/B,UAAM,aAAa,KAAK,SAAS,WAAW,eAAe,KAAK;AAEhE,QAAI,0BAA0B;AAC9B,UAAM,4BAA4B,KAAK,sBAAsB,MAAM;AAClE;AAAA,IACD,CAAC;AAED,QAAI,8BAA8B;AAClC,UAAM,+BAA+B,UAAU,iBAAiB,OAAK;AACpE,UAAI,EAAE,SAAS,qBAAqB,aAAa;AAChD;AAAA,MACD;AAAA,IACD,CAAC;AAED,QAAI,+BAA+B;AACnC,UAAM,gCAAgC,WAAW,iBAAiB,OAAK;AACtE,UAAI,EAAE,SAAS,qBAAqB,aAAa;AAChD;AAAA,MACD;AAAA,IACD,CAAC;AAED,WAAO,YAAY,UAAU,OAAO,SAAS;AAC7C,WAAO,YAAY,WAAW,OAAO,SAAS;AAE9C,SAAK,wBAAwB,UAAU;AAEvC,WAAO,YAAY,UAAU,OAAO,mBAAmB;AACvD,WAAO,YAAY,WAAW,OAAO,mBAAmB;AAExD,WAAO,YAAY,6BAA6B,CAAC;AACjD,WAAO,YAAY,8BAA8B,CAAC;AAClD,WAAO,YAAY,yBAAyB,CAAC;AAE7C,SAAK,wBAAwB,UAAU;AAEvC,WAAO,YAAY,UAAU,OAAO,mBAAmB;AACvD,WAAO,YAAY,WAAW,OAAO,mBAAmB;AAExD,WAAO,YAAY,6BAA6B,CAAC;AACjD,WAAO,YAAY,8BAA8B,CAAC;AAClD,WAAO,YAAY,yBAAyB,CAAC;AAE7C,iCAA6B,QAAQ;AACrC,kCAA8B,QAAQ;AACtC,8BAA0B,QAAQ;AAAA,EACnC,CAAC;AAED,OAAK,qBAAqB,YAAY;AACrC,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAEhC,QAAI,oBAAoB;AACxB,UAAM,qBAAqB,KAAK,cAAc,MAAM;AACnD;AAAA,IACD,CAAC;AAED,QAAI,sBAAsB;AAC1B,UAAM,uBAAuB,KAAK,iBAAiB,MAAM;AACxD;AAAA,IACD,CAAC;AAED,UAAM,YAAY,KAAK,OAAO,CAAC;AAC/B,QAAI,oBAAoB;AACxB,UAAM,kBAAkB,UAAU,cAAc,MAAM;AACrD,0BAAoB;AAAA,IACrB,CAAC;AAED,UAAM,QAAQ,0BAA0B,IAAI,KAAK,SAAS,GAAG,oBAAoB;AAEjF,UAAM,UAAU,WAAW,OAAO,EAAE,QAAQ,KAAK,CAAC;AAClD,UAAM,aAAa,KAAK,SAAS,WAAW,eAAe,KAAK;AAChE,SAAK,cAAc,UAAU;AAC7B,UAAM,YAAY,KAAK,UAAU,WAAW,YAAY,eAAe,IAAI;AAC3E,WAAO,YAAY,mBAAmB,CAAC;AACvC,WAAO,YAAY,UAAU,OAAO,CAAC;AACrC,WAAO,GAAG,UAAU,wBAAwB,mBAAmB;AAC/D,QAAI,MAAM,KAAK,WAAW,WAAW,YAAY,EAAE,MAAM,eAAe,aAAa,CAAC;AACtF,WAAO,YAAY,KAAK,IAAI;AAC5B,WAAO,YAAY,WAAW,OAAO,CAAC;AACtC,WAAO,GAAG,WAAW,wBAAwB,mBAAmB;AAChE,UAAM,KAAK,WAAW,WAAW,YAAY,EAAE,MAAM,eAAe,aAAa,CAAC;AAClF,WAAO,YAAY,KAAK,IAAI;AAC5B,WAAO,YAAY,UAAU,OAAO,CAAC;AACrC,UAAM,KAAK,WAAW,WAAW,SAAS;AAC1C,WAAO,YAAY,KAAK,IAAI;AAC5B,WAAO,YAAY,qBAAqB,CAAC;AACzC,WAAO,YAAY,mBAAmB,IAAI;AAE1C,uBAAmB,QAAQ;AAC3B,yBAAqB,QAAQ;AAC7B,oBAAgB,QAAQ;AACxB,SAAK,QAAQ;AAAA,EACd,CAAC;AAED,OAAK,oBAAoB,YAAY;AACpC,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAEhC,UAAM,YAAY,KAAK,OAAO,CAAC;AAE/B,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACnF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACnF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AAEnF,UAAM,UAAU,WAAW,QAAQ,EAAE,QAAQ,KAAK,CAAC;AAEnD,UAAM,aAAa,KAAK,SAAS,WAAW,eAAe,KAAK;AAChE,UAAM,WAAW,WAAW,QAAQ,EAAE,QAAQ,KAAK,CAAC;AAEpD,UAAM,YAAY,KAAK,UAAU,WAAW,YAAY,eAAe,IAAI;AAC3E,UAAM,UAAU,WAAW,QAAQ,EAAE,QAAQ,KAAK,CAAC;AAEnD,SAAK,cAAc,SAAS;AAE5B,WAAO,YAAY,UAAU,OAAO,CAAC;AAErC,UAAM,SAAS,KAAK,eAAe,KAAK,WAAW;AACnD,WAAO,YAAY,QAAQ,IAAI;AAC/B,WAAO,YAAY,UAAU,OAAO,CAAC;AAErC,SAAK,QAAQ;AAAA,EACd,CAAC;AAED,OAAK,4BAA4B,YAAY;AAC5C,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAEhC,UAAM,KAAK;AACX,WAAO,YAAY,KAAK,SAAS,IAAI;AACrC,UAAM,KAAK;AAAA,EACZ,CAAC;AAED,OAAK,WAAW,YAAY;AAC3B,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAEhC,QAAI;AACJ,QAAI;AACJ,gBAAY,IAAI,KAAK,6BAA6B,WAAS;AAC1D,mBAAa,MAAM;AACnB,mBAAa,MAAM;AAAA,IACpB,CAAC,CAAC;AAEF,UAAM,iBAAiB,KAAK;AAC5B,WAAO,GAAG,cAAc;AAExB,gBAAY,IAAI,KAAK,mBAAmB,EAAE,UAAU,SAAS,CAAC,CAAC;AAC/D,WAAO,YAAY,KAAK,YAAY,UAAU,QAAQ;AACtD,WAAO,YAAY,WAAW,UAAU,QAAQ;AAChD,WAAO,YAAY,YAAY,cAAc;AAAA,EAC9C,CAAC;AAED,OAAK,iBAAiB,iBAAkB;AACvC,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAChC,UAAM,QAAQ,KAAK;AACnB,WAAO,YAAY,MAAM,SAAS,IAAI;AAEtC,QAAI,4BAA4B;AAChC,QAAI,uBAAuB;AAC3B,UAAM,mBAA6C,CAAC;AACpD,QAAI,qBAAqB;AACzB,UAAM,oBAA8C,CAAC;AACrD,QAAI,mBAAmB;AACvB,QAAI,sBAAsB;AAC1B,QAAI,4BAA4B;AAChC,UAAM,iCAAiC,MAAM,iBAAiB,OAAK;AAClE,UAAI,EAAE,SAAS,qBAAqB,aAAa;AAChD,eAAO,GAAG,EAAE,MAAM;AAClB;AACA,yBAAiB,KAAK,CAAC;AAAA,MACxB,WAAW,EAAE,SAAS,qBAAqB,YAAY;AACtD,eAAO,GAAG,EAAE,MAAM;AAClB;AAAA,MACD,WAAW,EAAE,SAAS,qBAAqB,eAAe;AACzD,eAAO,GAAG,EAAE,MAAM;AAClB;AAAA,MACD,WAAW,EAAE,SAAS,qBAAqB,qBAAqB;AAC/D,eAAO,GAAG,EAAE,MAAM;AAClB;AAAA,MACD,WAAW,EAAE,SAAS,qBAAqB,cAAc;AACxD,eAAO,GAAG,EAAE,MAAM;AAClB;AACA,0BAAkB,KAAK,CAAC;AAAA,MACzB;AAAA,IACD,CAAC;AACD,UAAM,6BAA6B,MAAM,wBAAwB,OAAK;AACrE,aAAO,GAAG,EAAE,MAAM;AAClB;AAAA,IACD,CAAC;AAED,QAAI,sBAAsB;AAC1B,UAAM,sBAAsB,MAAM,iBAAiB,MAAM;AACxD;AAAA,IACD,CAAC;AAED,QAAI,yBAAyB;AAC7B,UAAM,0BAA0B,MAAM,kBAAkB,MAAM;AAC7D;AAAA,IACD,CAAC;AAED,QAAI,wBAAwB;AAC5B,UAAM,yBAAyB,MAAM,iBAAiB,MAAM;AAC3D;AAAA,IACD,CAAC;AAED,UAAM,QAAQ,0BAA0B,IAAI,KAAK,SAAS,GAAG,oBAAoB;AACjF,UAAM,gBAAgB,0BAA0B,IAAI,KAAK,kBAAkB,GAAG,oBAAoB;AAElG,UAAM,MAAM,WAAW,OAAO,EAAE,QAAQ,KAAK,CAAC;AAC9C,UAAM,MAAM,WAAW,eAAe,EAAE,UAAU,KAAK,CAAC;AAExD,WAAO,YAAY,MAAM,SAAS,KAAK,GAAG,IAAI;AAC9C,WAAO,YAAY,MAAM,SAAS,aAAa,GAAG,KAAK;AACvD,WAAO,YAAY,MAAM,SAAS,KAAK,GAAG,IAAI;AAC9C,WAAO,YAAY,MAAM,SAAS,aAAa,GAAG,IAAI;AACtD,WAAO,YAAY,MAAM,SAAS,KAAK;AACvC,WAAO,YAAY,MAAM,OAAO,CAAC;AACjC,WAAO,YAAY,2BAA2B,CAAC;AAC/C,WAAO,YAAY,sBAAsB,CAAC;AAC1C,WAAO,YAAa,iBAAiB,CAAC,EAA4B,aAAa,CAAC;AAChF,WAAO,YAAa,iBAAiB,CAAC,EAA4B,aAAa,CAAC;AAChF,WAAO,YAAY,iBAAiB,CAAC,EAAE,QAAQ,KAAK;AACpD,WAAO,YAAY,iBAAiB,CAAC,EAAE,QAAQ,aAAa;AAC5D,WAAO,YAAY,2BAA2B,CAAC;AAC/C,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,KAAK;AACnD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,aAAa;AAC3D,WAAO,YAAY,MAAM,iBAAiB,KAAK,GAAG,CAAC;AACnD,WAAO,YAAY,MAAM,iBAAiB,aAAa,GAAG,CAAC;AAC3D,WAAO,YAAY,MAAM,QAAQ,KAAK,GAAG,IAAI;AAC7C,WAAO,YAAY,MAAM,QAAQ,aAAa,GAAG,KAAK;AACtD,WAAO,YAAY,MAAM,OAAO,KAAK,GAAG,KAAK;AAC7C,WAAO,YAAY,MAAM,OAAO,aAAa,GAAG,IAAI;AAEpD,UAAM,eAAe,wBAAwB;AAC7C,WAAO,YAAY,2BAA2B,CAAC;AAE/C,kBAAc,eAAe,wBAAwB;AACrD,WAAO,YAAY,2BAA2B,CAAC;AAE/C,WAAO,YAAY,MAAM,eAAe,aAAa;AACrD,WAAO,YAAY,MAAM,SAAS,aAAa,GAAG,KAAK;AACvD,UAAM,UAAU,aAAa;AAC7B,WAAO,YAAY,kBAAkB,CAAC;AACtC,WAAO,YAAY,MAAM,SAAS,aAAa,GAAG,IAAI;AACtD,WAAO,GAAG,CAAC,MAAM,aAAa;AAE9B,WAAO,YAAY,MAAM,cAAc,KAAK;AAC5C,WAAO,YAAY,MAAM,kBAAkB,MAAM,GAAG,cAAc;AAClE,WAAO,YAAY,MAAM,OAAO,CAAC;AAEjC,UAAM,MAAM,MAAM,WAAW,aAAa,oBAAoB;AAC9D,WAAO,YAAY,IAAI,CAAC,GAAG,KAAK;AAChC,WAAO,YAAY,IAAI,CAAC,GAAG,aAAa;AAExC,UAAM,MAAM,WAAW,aAAa;AACpC,WAAO,YAAY,2BAA2B,CAAC;AAC/C,WAAO,YAAY,MAAM,cAAc,aAAa;AAEpD,UAAM,MAAM,WAAW,KAAK;AAC5B,UAAM,SAAS,MAAM,MAAM,YAAY,aAAa;AACpD,WAAO,YAAY,QAAQ,IAAI;AAE/B,WAAO,YAAY,2BAA2B,CAAC;AAC/C,WAAO,YAAY,oBAAoB,CAAC;AACxC,WAAO,YAAa,kBAAkB,CAAC,EAA4B,aAAa,CAAC;AACjF,WAAO,YAAY,kBAAkB,CAAC,EAAE,QAAQ,aAAa;AAC7D,WAAO,YAAY,qBAAqB,CAAC;AACzC,WAAO,YAAY,wBAAwB,CAAC;AAC5C,WAAO,YAAY,uBAAuB,CAAC;AAE3C,WAAO,GAAG,cAAc,WAAW;AAEnC,WAAO,YAAY,MAAM,cAAc,KAAK;AAE5C,WAAO,YAAY,qBAAqB,CAAC;AACzC,UAAM,YAAY,KAAK;AACvB,WAAO,YAAY,qBAAqB,CAAC;AACzC,UAAM,cAAc,KAAK;AACzB,WAAO,YAAY,qBAAqB,CAAC;AAEzC,wBAAoB,QAAQ;AAC5B,4BAAwB,QAAQ;AAChC,2BAAuB,QAAQ;AAC/B,+BAA2B,QAAQ;AACnC,mCAA+B,QAAQ;AAAA,EACxC,CAAC;AAED,OAAK,8BAA8B,YAAY;AAC9C,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAChC,UAAM,QAAQ,KAAK;AACnB,WAAO,YAAY,MAAM,SAAS,IAAI;AAEtC,UAAM,QAAQ,0BAA0B,IAAI,KAAK,SAAS,GAAG,oBAAoB;AACjF,UAAM,gBAAgB,0BAA0B,IAAI,KAAK,kBAAkB,GAAG,oBAAoB;AAElG,UAAM,MAAM,YAAY;AAAA,MACvB,EAAE,QAAQ,OAAO,SAAS,EAAE,QAAQ,KAAK,EAAE;AAAA,MAC3C,EAAE,QAAQ,cAAc;AAAA,IACzB,CAAC;AAED,WAAO,YAAY,MAAM,OAAO,CAAC;AACjC,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,KAAK;AACnD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,aAAa;AAE3D,UAAM,MAAM,aAAa,CAAC,OAAO,aAAa,CAAC;AAE/C,WAAO,GAAG,MAAM,WAAW;AAC3B,WAAO,GAAG,cAAc,WAAW;AAEnC,WAAO,YAAY,MAAM,SAAS,IAAI;AAAA,EACvC,CAAC;AAED,OAAK,uCAAuC,YAAY;AACvD,UAAM,CAAC,MAAM,oBAAoB,IAAI,MAAM,WAAW;AAEtD,UAAM,WAAW,qBAAqB,eAAe,mBAAmB;AACxE,aAAS,kBAAkB,iBAAiB,cAAc,SAAS;AAEnE,UAAM,QAAQ,KAAK;AAEnB,UAAM,QAAQ,0BAA0B,IAAI,KAAK,SAAS,GAAG,oBAAoB;AACjF,UAAM,QAAQ;AAEd,UAAM,MAAM,WAAW,KAAK;AAE5B,aAAS,kBAAkB,iBAAiB,cAAc,MAAM;AAChE,QAAI,SAAS,MAAM,MAAM,YAAY,KAAK;AAC1C,WAAO,YAAY,QAAQ,KAAK;AAEhC,WAAO,GAAG,CAAC,MAAM,WAAW;AAE5B,aAAS,kBAAkB,iBAAiB,cAAc,SAAS;AACnE,aAAS,MAAM,MAAM,YAAY,KAAK;AACtC,WAAO,YAAY,QAAQ,IAAI;AAE/B,WAAO,GAAG,MAAM,WAAW;AAAA,EAC5B,CAAC;AAED,OAAK,gDAAgD,YAAY;AAChE,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAChC,UAAM,QAAQ,KAAK;AACnB,WAAO,YAAY,MAAM,SAAS,IAAI;AAEtC,UAAM,aAAa,KAAK,SAAS,OAAO,eAAe,KAAK;AAE5D,UAAM,QAAQ,0BAA0B,IAAI,KAAK,SAAS,GAAG,oBAAoB;AACjF,UAAM,gBAAgB,0BAA0B,IAAI,KAAK,kBAAkB,GAAG,oBAAoB;AAElG,UAAM,MAAM,YAAY,CAAC,EAAE,QAAQ,OAAO,SAAS,EAAE,QAAQ,KAAK,EAAE,GAAG,EAAE,QAAQ,cAAc,CAAC,CAAC;AACjG,UAAM,WAAW,YAAY,CAAC,EAAE,QAAQ,OAAO,SAAS,EAAE,QAAQ,KAAK,EAAE,GAAG,EAAE,QAAQ,cAAc,CAAC,CAAC;AAEtG,QAAI,SAAS,MAAM,WAAW,YAAY,KAAK;AAC/C,WAAO,YAAY,QAAQ,IAAI;AAE/B,WAAO,GAAG,CAAC,MAAM,WAAW;AAE5B,aAAS,MAAM,MAAM,YAAY,KAAK;AACtC,WAAO,YAAY,QAAQ,IAAI;AAE/B,WAAO,GAAG,MAAM,WAAW;AAAA,EAC5B,CAAC;AAED,OAAK,wCAAwC,YAAY;AACxD,UAAM,CAAC,MAAM,oBAAoB,IAAI,MAAM,WAAW;AAEtD,UAAM,WAAW,qBAAqB,eAAe,mBAAmB;AACxE,aAAS,kBAAkB,iBAAiB,cAAc,SAAS;AACnE,QAAI,cAAc;AAElB,UAAM,QAAQ,KAAK;AAEnB,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACnF,WAAO,QAAQ;AAEf,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AAEnF,UAAM,MAAM,WAAW,MAAM;AAC7B,UAAM,MAAM,WAAW,MAAM;AAE7B,aAAS,kBAAkB,iBAAiB,cAAc,MAAM;AAChE,kBAAc,MAAM,MAAM,aAAa,CAAC,QAAQ,MAAM,CAAC;AACvD,WAAO,YAAY,aAAa,KAAK;AAErC,WAAO,GAAG,CAAC,OAAO,WAAW;AAC7B,WAAO,GAAG,CAAC,OAAO,WAAW;AAE7B,aAAS,kBAAkB,iBAAiB,cAAc,SAAS;AACnE,kBAAc,MAAM,MAAM,aAAa,CAAC,QAAQ,MAAM,CAAC;AACvD,WAAO,YAAY,aAAa,IAAI;AAEpC,WAAO,GAAG,OAAO,WAAW;AAC5B,WAAO,GAAG,OAAO,WAAW;AAAA,EAC7B,CAAC;AAED,OAAK,6BAA6B,YAAY;AAC7C,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAChC,UAAM,QAAQ,KAAK;AACnB,WAAO,YAAY,MAAM,SAAS,IAAI;AAEtC,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACnF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACnF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AAEnF,UAAM,MAAM,YAAY;AAAA,MACvB,EAAE,QAAQ,QAAQ,SAAS,EAAE,QAAQ,KAAK,EAAE;AAAA,MAC5C,EAAE,QAAQ,QAAQ,SAAS,EAAE,QAAQ,KAAK,EAAE;AAAA,MAC5C,EAAE,QAAQ,OAAO;AAAA,IAClB,CAAC;AAED,WAAO,YAAY,MAAM,OAAO,CAAC;AACjC,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AACpD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AACpD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AAEpD,UAAM,MAAM,aAAa,EAAE,QAAQ,OAAO,CAAC;AAC3C,WAAO,YAAY,MAAM,OAAO,CAAC;AACjC,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AAAA,EACrD,CAAC;AAED,OAAK,4CAA4C,YAAY;AAC5D,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAChC,UAAM,QAAQ,KAAK;AACnB,WAAO,YAAY,MAAM,SAAS,IAAI;AAEtC,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACnF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACnF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AAEnF,UAAM,MAAM,YAAY;AAAA,MACvB,EAAE,QAAQ,QAAQ,SAAS,EAAE,QAAQ,MAAM,QAAQ,KAAK,EAAE;AAAA,MAC1D,EAAE,QAAQ,QAAQ,SAAS,EAAE,QAAQ,KAAK,EAAE;AAAA,MAC5C,EAAE,QAAQ,OAAO;AAAA,IAClB,CAAC;AAED,WAAO,YAAY,MAAM,OAAO,CAAC;AACjC,WAAO,YAAY,MAAM,aAAa,CAAC;AACvC,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AACpD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AACpD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AAEpD,UAAM,MAAM,aAAa,EAAE,QAAQ,QAAQ,eAAe,KAAK,CAAC;AAEhE,WAAO,YAAY,MAAM,OAAO,CAAC;AACjC,WAAO,YAAY,MAAM,aAAa,CAAC;AACvC,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AACpD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AAEpD,UAAM,MAAM,aAAa,EAAE,QAAQ,OAAO,CAAC;AAE3C,WAAO,YAAY,MAAM,OAAO,CAAC;AACjC,WAAO,YAAY,MAAM,aAAa,CAAC;AACvC,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AAAA,EACrD,CAAC;AAED,OAAK,6BAA6B,YAAY;AAC7C,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAChC,UAAM,QAAQ,KAAK;AACnB,WAAO,YAAY,MAAM,SAAS,IAAI;AAEtC,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACnF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACnF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AAEnF,UAAM,MAAM,YAAY;AAAA,MACvB,EAAE,QAAQ,QAAQ,SAAS,EAAE,QAAQ,KAAK,EAAE;AAAA,MAC5C,EAAE,QAAQ,QAAQ,SAAS,EAAE,QAAQ,KAAK,EAAE;AAAA,MAC5C,EAAE,QAAQ,OAAO;AAAA,IAClB,CAAC;AAED,WAAO,YAAY,MAAM,OAAO,CAAC;AACjC,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AACpD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AACpD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AAEpD,UAAM,MAAM,aAAa,EAAE,WAAW,KAAK,CAAC;AAC5C,WAAO,YAAY,MAAM,OAAO,CAAC;AAAA,EAClC,CAAC;AAED,OAAK,4CAA4C,YAAY;AAC5D,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAChC,UAAM,QAAQ,KAAK;AACnB,WAAO,YAAY,MAAM,SAAS,IAAI;AAEtC,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACnF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACnF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AAEnF,UAAM,MAAM,YAAY;AAAA,MACvB,EAAE,QAAQ,QAAQ,SAAS,EAAE,QAAQ,MAAM,QAAQ,KAAK,EAAE;AAAA,MAC1D,EAAE,QAAQ,QAAQ,SAAS,EAAE,QAAQ,KAAK,EAAE;AAAA,MAC5C,EAAE,QAAQ,OAAO;AAAA,IAClB,CAAC;AAED,WAAO,YAAY,MAAM,OAAO,CAAC;AACjC,WAAO,YAAY,MAAM,aAAa,CAAC;AACvC,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AACpD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AACpD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AAEpD,UAAM,MAAM,aAAa,EAAE,WAAW,MAAM,eAAe,KAAK,CAAC;AAEjE,WAAO,YAAY,MAAM,OAAO,CAAC;AACjC,WAAO,YAAY,MAAM,aAAa,CAAC;AACvC,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AAEpD,UAAM,MAAM,aAAa,EAAE,WAAW,KAAK,CAAC;AAC5C,WAAO,YAAY,MAAM,OAAO,CAAC;AAAA,EAClC,CAAC;AAED,OAAK,mCAAmC,YAAY;AACnD,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAChC,UAAM,QAAQ,KAAK;AACnB,WAAO,YAAY,MAAM,SAAS,IAAI;AAEtC,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACnF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACnF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AAEnF,UAAM,MAAM,YAAY;AAAA,MACvB,EAAE,QAAQ,QAAQ,SAAS,EAAE,QAAQ,KAAK,EAAE;AAAA,MAC5C,EAAE,QAAQ,QAAQ,SAAS,EAAE,QAAQ,KAAK,EAAE;AAAA,MAC5C,EAAE,QAAQ,OAAO;AAAA,IAClB,CAAC;AAED,WAAO,YAAY,MAAM,OAAO,CAAC;AACjC,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AACpD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AACpD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AAEpD,UAAM,MAAM,aAAa,EAAE,WAAW,eAAe,OAAO,QAAQ,OAAO,CAAC;AAC5E,WAAO,YAAY,MAAM,OAAO,CAAC;AACjC,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AACpD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AAAA,EACrD,CAAC;AAED,OAAK,kDAAkD,YAAY;AAClE,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAChC,UAAM,QAAQ,KAAK;AACnB,WAAO,YAAY,MAAM,SAAS,IAAI;AAEtC,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACnF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACnF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AAEnF,UAAM,MAAM,YAAY;AAAA,MACvB,EAAE,QAAQ,QAAQ,SAAS,EAAE,QAAQ,MAAM,QAAQ,KAAK,EAAE;AAAA,MAC1D,EAAE,QAAQ,QAAQ,SAAS,EAAE,QAAQ,KAAK,EAAE;AAAA,MAC5C,EAAE,QAAQ,OAAO;AAAA,IAClB,CAAC;AAED,WAAO,YAAY,MAAM,OAAO,CAAC;AACjC,WAAO,YAAY,MAAM,aAAa,CAAC;AACvC,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AACpD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AACpD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AAEpD,UAAM,MAAM,aAAa,EAAE,WAAW,eAAe,OAAO,QAAQ,QAAQ,eAAe,KAAK,CAAC;AACjG,WAAO,YAAY,MAAM,OAAO,CAAC;AACjC,WAAO,YAAY,MAAM,aAAa,CAAC;AACvC,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AACpD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AAEpD,UAAM,MAAM,aAAa,EAAE,WAAW,eAAe,OAAO,QAAQ,OAAO,CAAC;AAC5E,WAAO,YAAY,MAAM,OAAO,CAAC;AACjC,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AACpD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AAAA,EACrD,CAAC;AAED,OAAK,kCAAkC,YAAY;AAClD,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAChC,UAAM,QAAQ,KAAK;AACnB,WAAO,YAAY,MAAM,SAAS,IAAI;AAEtC,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACnF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACnF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AAEnF,UAAM,MAAM,YAAY;AAAA,MACvB,EAAE,QAAQ,QAAQ,SAAS,EAAE,QAAQ,KAAK,EAAE;AAAA,MAC5C,EAAE,QAAQ,QAAQ,SAAS,EAAE,QAAQ,KAAK,EAAE;AAAA,MAC5C,EAAE,QAAQ,OAAO;AAAA,IAClB,CAAC;AAED,WAAO,YAAY,MAAM,OAAO,CAAC;AACjC,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AACpD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AACpD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AAEpD,UAAM,MAAM,aAAa,EAAE,WAAW,eAAe,MAAM,QAAQ,OAAO,CAAC;AAC3E,WAAO,YAAY,MAAM,OAAO,CAAC;AACjC,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AACpD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AAAA,EACrD,CAAC;AAED,OAAK,iDAAiD,YAAY;AACjE,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAChC,UAAM,QAAQ,KAAK;AACnB,WAAO,YAAY,MAAM,SAAS,IAAI;AAEtC,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACnF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACnF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AAEnF,UAAM,MAAM,YAAY;AAAA,MACvB,EAAE,QAAQ,QAAQ,SAAS,EAAE,QAAQ,MAAM,QAAQ,KAAK,EAAE;AAAA,MAC1D,EAAE,QAAQ,QAAQ,SAAS,EAAE,QAAQ,KAAK,EAAE;AAAA,MAC5C,EAAE,QAAQ,OAAO;AAAA,IAClB,CAAC;AAED,WAAO,YAAY,MAAM,OAAO,CAAC;AACjC,WAAO,YAAY,MAAM,aAAa,CAAC;AACvC,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AACpD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AACpD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AAEpD,UAAM,MAAM,aAAa,EAAE,WAAW,eAAe,MAAM,QAAQ,QAAQ,eAAe,KAAK,CAAC;AAChG,WAAO,YAAY,MAAM,OAAO,CAAC;AACjC,WAAO,YAAY,MAAM,aAAa,CAAC;AACvC,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AACpD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AACpD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AAEpD,UAAM,MAAM,aAAa,EAAE,WAAW,eAAe,MAAM,QAAQ,OAAO,CAAC;AAC3E,WAAO,YAAY,MAAM,OAAO,CAAC;AACjC,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AACpD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AAAA,EACrD,CAAC;AAED,OAAK,mBAAmB,YAAY;AACnC,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAChC,UAAM,QAAQ,KAAK;AACnB,WAAO,YAAY,MAAM,SAAS,IAAI;AAEtC,UAAM,QAAQ,0BAA0B,IAAI,KAAK,SAAS,GAAG,oBAAoB;AACjF,UAAM,gBAAgB,0BAA0B,IAAI,KAAK,kBAAkB,GAAG,oBAAoB;AAElG,UAAM,MAAM,YAAY;AAAA,MACvB,EAAE,QAAQ,OAAO,SAAS,EAAE,QAAQ,KAAK,EAAE;AAAA,MAC3C,EAAE,QAAQ,cAAc;AAAA,IACzB,CAAC;AAED,WAAO,YAAY,MAAM,OAAO,CAAC;AACjC,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,KAAK;AACnD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,aAAa;AAE3D,UAAM,MAAM,gBAAgB;AAC5B,WAAO,YAAY,MAAM,SAAS,IAAI;AAAA,EACvC,CAAC;AAED,OAAK,2CAA2C,YAAY;AAC3D,UAAM,CAAC,MAAM,oBAAoB,IAAI,MAAM,WAAW;AACtD,QAAI,cAAc;AAElB,UAAM,WAAW,qBAAqB,eAAe,mBAAmB;AACxE,aAAS,kBAAkB,iBAAiB,cAAc,SAAS;AAEnE,UAAM,QAAQ,KAAK;AAEnB,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACnF,WAAO,QAAQ;AAEf,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AAEnF,UAAM,MAAM,WAAW,MAAM;AAC7B,UAAM,MAAM,WAAW,MAAM;AAE7B,aAAS,kBAAkB,iBAAiB,cAAc,MAAM;AAChE,kBAAc,MAAM,MAAM,gBAAgB;AAE1C,WAAO,YAAY,aAAa,KAAK;AACrC,WAAO,GAAG,CAAC,OAAO,WAAW;AAC7B,WAAO,GAAG,CAAC,OAAO,WAAW;AAE7B,aAAS,kBAAkB,iBAAiB,cAAc,SAAS;AACnE,kBAAc,MAAM,MAAM,gBAAgB;AAE1C,WAAO,YAAY,aAAa,IAAI;AACpC,WAAO,GAAG,OAAO,WAAW;AAC5B,WAAO,GAAG,OAAO,WAAW;AAAA,EAC7B,CAAC;AAED,OAAK,mCAAmC,YAAY;AACnD,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAChC,UAAM,QAAQ,KAAK;AACnB,WAAO,YAAY,MAAM,SAAS,IAAI;AAEtC,UAAM,QAAQ,0BAA0B,IAAI,KAAK,SAAS,GAAG,oBAAoB;AACjF,UAAM,gBAAgB,0BAA0B,IAAI,KAAK,kBAAkB,GAAG,oBAAoB;AAElG,UAAM,MAAM,YAAY;AAAA,MACvB,EAAE,QAAQ,OAAO,SAAS,EAAE,QAAQ,MAAM,QAAQ,KAAK,EAAE;AAAA,MACzD,EAAE,QAAQ,cAAc;AAAA,IACzB,CAAC;AAED,WAAO,YAAY,MAAM,OAAO,CAAC;AACjC,WAAO,YAAY,MAAM,aAAa,CAAC;AAEvC,UAAM,MAAM,gBAAgB,EAAE,eAAe,KAAK,CAAC;AAEnD,WAAO,YAAY,MAAM,OAAO,CAAC;AACjC,WAAO,YAAY,MAAM,aAAa,CAAC;AACvC,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,KAAK;AAEnD,UAAM,MAAM,gBAAgB;AAE5B,WAAO,YAAY,MAAM,SAAS,IAAI;AAAA,EACvC,CAAC;AAED,OAAK,2BAA2B,YAAY;AAC3C,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAChC,UAAM,QAAQ,KAAK;AACnB,WAAO,YAAY,MAAM,SAAS,IAAI;AAEtC,UAAM,QAAQ,0BAA0B,IAAI,KAAK,SAAS,GAAG,oBAAoB;AACjF,UAAM,gBAAgB,0BAA0B,IAAI,KAAK,kBAAkB,GAAG,oBAAoB;AAElG,UAAM,aAAuC,CAAC;AAC9C,UAAM,iCAAiC,MAAM,iBAAiB,OAAK;AAClE,UAAI,EAAE,SAAS,qBAAqB,aAAa;AAChD,eAAO,GAAG,EAAE,MAAM;AAClB,mBAAW,KAAK,CAAC;AAAA,MAClB;AAAA,IACD,CAAC;AAED,UAAM,MAAM,YAAY,CAAC,EAAE,QAAQ,OAAO,SAAS,EAAE,QAAQ,KAAK,EAAE,GAAG,EAAE,QAAQ,cAAc,CAAC,CAAC;AACjG,WAAO,YAAY,MAAM,OAAO,CAAC;AACjC,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,KAAK;AACnD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,aAAa;AAC3D,UAAM,WAAW,eAAe,OAAO,EAAE,OAAO,EAAE,CAAC;AACnD,WAAO,YAAY,WAAW,QAAQ,CAAC;AACvC,WAAO,YAAa,WAAW,CAAC,EAA4B,aAAa,CAAC;AAC1E,WAAO,YAAa,WAAW,CAAC,EAA4B,gBAAgB,CAAC;AAC7E,WAAO,YAAY,WAAW,CAAC,EAAE,QAAQ,aAAa;AACtD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,aAAa;AAC3D,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,KAAK;AAEnD,UAAM,MAAM,MAAM,YAAY,CAAC,EAAE,QAAQ,eAAe,SAAS,EAAE,OAAO,EAAE,EAAE,CAAC,GAAG,KAAK;AACvF,WAAO,YAAY,KAAK,IAAI;AAC5B,WAAO,YAAY,WAAW,QAAQ,CAAC;AACvC,WAAO,YAAa,WAAW,CAAC,EAA4B,aAAa,CAAC;AAC1E,WAAO,YAAa,WAAW,CAAC,EAA4B,gBAAgB,CAAC;AAC7E,WAAO,YAAY,WAAW,CAAC,EAAE,QAAQ,aAAa;AACtD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,KAAK;AACnD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,aAAa;AAE3D,mCAA+B,QAAQ;AAAA,EACxC,CAAC;AAED,OAAK,8BAA8B,YAAY;AAC9C,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAChC,UAAM,QAAQ,KAAK;AACnB,WAAO,YAAY,MAAM,SAAS,IAAI;AAEtC,UAAM,aAAa,KAAK,SAAS,OAAO,eAAe,KAAK;AAE5D,UAAM,QAAQ,0BAA0B,IAAI,KAAK,SAAS,GAAG,oBAAoB;AACjF,UAAM,gBAAgB,0BAA0B,IAAI,KAAK,kBAAkB,GAAG,oBAAoB;AAElG,UAAM,MAAM,YAAY,CAAC,EAAE,QAAQ,OAAO,SAAS,EAAE,QAAQ,KAAK,EAAE,GAAG,EAAE,QAAQ,cAAc,CAAC,CAAC;AACjG,WAAO,YAAY,MAAM,OAAO,CAAC;AACjC,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,KAAK;AACnD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,aAAa;AAC3D,UAAM,WAAW,eAAe,YAAY,EAAE,OAAO,EAAE,CAAC;AACxD,WAAO,YAAY,MAAM,OAAO,CAAC;AACjC,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,KAAK;AACnD,WAAO,YAAY,WAAW,OAAO,CAAC;AACtC,WAAO,YAAY,WAAW,iBAAiB,CAAC,GAAG,aAAa;AAAA,EACjE,CAAC;AAED,OAAK,+BAA+B,YAAY;AAC/C,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAChC,UAAM,QAAQ,KAAK;AACnB,WAAO,YAAY,MAAM,SAAS,IAAI;AAEtC,UAAM,aAAa,KAAK,SAAS,OAAO,eAAe,KAAK;AAE5D,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACnF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACnF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AAEnF,UAAM,MAAM,YAAY,CAAC,EAAE,QAAQ,QAAQ,SAAS,EAAE,QAAQ,KAAK,EAAE,GAAG,EAAE,QAAQ,QAAQ,SAAS,EAAE,QAAQ,KAAK,EAAE,GAAG,EAAE,QAAQ,QAAQ,SAAS,EAAE,QAAQ,KAAK,EAAE,CAAC,CAAC;AACrK,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AACpD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AACpD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AACpD,UAAM,YAAY,CAAC,EAAE,QAAQ,OAAO,GAAG,EAAE,QAAQ,OAAO,CAAC,GAAG,UAAU;AACtE,WAAO,YAAY,MAAM,OAAO,CAAC;AACjC,WAAO,YAAY,WAAW,OAAO,CAAC;AACtC,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AACpD,WAAO,YAAY,WAAW,iBAAiB,CAAC,GAAG,MAAM;AACzD,WAAO,YAAY,WAAW,iBAAiB,CAAC,GAAG,MAAM;AAAA,EAC1D,CAAC;AAED,OAAK,8BAA8B,YAAY;AAC9C,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAChC,UAAM,QAAQ,KAAK;AACnB,WAAO,YAAY,MAAM,SAAS,IAAI;AAEtC,UAAM,aAAa,KAAK,SAAS,OAAO,eAAe,KAAK;AAE5D,UAAM,QAAQ,0BAA0B,IAAI,KAAK,SAAS,GAAG,oBAAoB;AACjF,UAAM,gBAAgB,0BAA0B,IAAI,KAAK,kBAAkB,GAAG,oBAAoB;AAElG,UAAM,MAAM,YAAY,CAAC,EAAE,QAAQ,OAAO,SAAS,EAAE,QAAQ,KAAK,EAAE,GAAG,EAAE,QAAQ,cAAc,CAAC,CAAC;AACjG,WAAO,YAAY,MAAM,OAAO,CAAC;AACjC,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,KAAK;AACnD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,aAAa;AAC3D,UAAM,WAAW,eAAe,YAAY,EAAE,OAAO,EAAE,CAAC;AACxD,WAAO,YAAY,MAAM,OAAO,CAAC;AACjC,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,KAAK;AACnD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,aAAa;AAC3D,WAAO,YAAY,WAAW,OAAO,CAAC;AACtC,WAAO,YAAY,WAAW,iBAAiB,CAAC,GAAG,aAAa;AAAA,EACjE,CAAC;AAED,OAAK,+BAA+B,YAAY;AAC/C,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAChC,UAAM,QAAQ,KAAK;AACnB,WAAO,YAAY,MAAM,SAAS,IAAI;AAEtC,UAAM,aAAa,KAAK,SAAS,OAAO,eAAe,KAAK;AAE5D,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACnF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACnF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AAEnF,UAAM,MAAM,YAAY,CAAC,EAAE,QAAQ,QAAQ,SAAS,EAAE,QAAQ,KAAK,EAAE,GAAG,EAAE,QAAQ,QAAQ,SAAS,EAAE,QAAQ,KAAK,EAAE,GAAG,EAAE,QAAQ,QAAQ,SAAS,EAAE,QAAQ,KAAK,EAAE,CAAC,CAAC;AACrK,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AACpD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AACpD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AACpD,UAAM,YAAY,CAAC,EAAE,QAAQ,OAAO,GAAG,EAAE,QAAQ,OAAO,GAAG,EAAE,QAAQ,OAAO,CAAC,GAAG,UAAU;AAC1F,KAAC,OAAO,UAAU,EAAE,QAAQ,CAAAC,WAAS;AACpC,aAAO,YAAYA,OAAM,iBAAiB,CAAC,GAAG,MAAM;AACpD,aAAO,YAAYA,OAAM,iBAAiB,CAAC,GAAG,MAAM;AACpD,aAAO,YAAYA,OAAM,iBAAiB,CAAC,GAAG,MAAM;AAAA,IACrD,CAAC;AAAA,EACF,CAAC;AAED,OAAK,kBAAkB,YAAY;AAClC,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAChC,UAAM,QAAQ,KAAK;AACnB,WAAO,YAAY,MAAM,SAAS,IAAI;AAEtC,UAAM,QAAQ,0BAA0B,IAAI,KAAK,SAAS,GAAG,oBAAoB;AACjF,UAAM,gBAAgB,0BAA0B,IAAI,KAAK,kBAAkB,GAAG,oBAAoB;AAElG,UAAM,MAAM,WAAW,KAAK;AAC5B,WAAO,YAAY,MAAM,OAAO,CAAC;AACjC,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,KAAK;AAEnD,UAAM,MAAM,eAAe,CAAC,EAAE,QAAQ,OAAO,aAAa,cAAc,CAAC,CAAC;AAC1E,WAAO,YAAY,MAAM,OAAO,CAAC;AACjC,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,aAAa;AAAA,EAC5D,CAAC;AAED,OAAK,0CAA0C,YAAY;AAC1D,UAAM,CAAC,MAAM,oBAAoB,IAAI,MAAM,WAAW;AAEtD,UAAM,WAAW,qBAAqB,eAAe,mBAAmB;AACxE,aAAS,kBAAkB,iBAAiB,cAAc,SAAS;AAEnE,UAAM,QAAQ,KAAK;AAEnB,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACnF,WAAO,QAAQ;AAEf,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AAEnF,UAAM,MAAM,WAAW,MAAM;AAC7B,WAAO,YAAY,MAAM,cAAc,MAAM;AAE7C,aAAS,kBAAkB,iBAAiB,cAAc,MAAM;AAChE,UAAM,MAAM,eAAe,CAAC,EAAE,QAAQ,QAAQ,aAAa,OAAO,CAAC,CAAC;AAEpE,WAAO,YAAY,MAAM,cAAc,MAAM;AAC7C,WAAO,GAAG,CAAC,OAAO,WAAW;AAE7B,aAAS,kBAAkB,iBAAiB,cAAc,SAAS;AACnE,UAAM,MAAM,eAAe,CAAC,EAAE,QAAQ,QAAQ,aAAa,OAAO,CAAC,CAAC;AAEpE,WAAO,YAAY,MAAM,cAAc,MAAM;AAC7C,WAAO,GAAG,OAAO,WAAW;AAAA,EAC7B,CAAC;AAED,OAAK,2CAA2C,YAAY;AAC3D,UAAM,CAAC,MAAM,oBAAoB,IAAI,MAAM,WAAW;AAEtD,UAAM,WAAW,qBAAqB,eAAe,mBAAmB;AACxE,aAAS,kBAAkB,iBAAiB,cAAc,SAAS;AAEnE,UAAM,QAAQ,KAAK;AAEnB,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACnF,WAAO,QAAQ;AAEf,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AAEnF,UAAM,MAAM,WAAW,MAAM;AAC7B,WAAO,YAAY,MAAM,cAAc,MAAM;AAC7C,aAAS,kBAAkB,iBAAiB,cAAc,MAAM;AAChE,UAAM,MAAM,eAAe,CAAC,EAAE,QAAQ,QAAQ,aAAa,QAAQ,mBAAmB,MAAM,CAAC,CAAC;AAE9F,WAAO,YAAY,MAAM,cAAc,MAAM;AAC7C,WAAO,GAAG,CAAC,OAAO,WAAW;AAE7B,UAAM,MAAM,eAAe,CAAC,EAAE,QAAQ,QAAQ,aAAa,QAAQ,mBAAmB,KAAK,CAAC,CAAC;AAE7F,WAAO,YAAY,MAAM,cAAc,MAAM;AAC7C,WAAO,GAAG,OAAO,WAAW;AAAA,EAC7B,CAAC;AAED,OAAK,0CAA0C,YAAY;AAC1D,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAChC,UAAM,QAAQ,KAAK;AACnB,WAAO,YAAY,MAAM,SAAS,IAAI;AAEtC,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACnF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACnF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACnF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACnF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AAEnF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACnF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACnF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AAEnF,UAAM,MAAM,WAAW,QAAQ,EAAE,QAAQ,KAAK,CAAC;AAC/C,UAAM,MAAM,WAAW,QAAQ,EAAE,QAAQ,KAAK,CAAC;AAC/C,UAAM,MAAM,WAAW,QAAQ,EAAE,QAAQ,KAAK,CAAC;AAC/C,UAAM,MAAM,WAAW,QAAQ,EAAE,QAAQ,KAAK,CAAC;AAC/C,UAAM,MAAM,WAAW,QAAQ,EAAE,QAAQ,KAAK,CAAC;AAE/C,UAAM,MAAM,eAAe;AAAA,MAC1B,EAAE,QAAQ,QAAQ,aAAa,OAAO;AAAA,MACtC,EAAE,QAAQ,QAAQ,aAAa,OAAO;AAAA,MACtC,EAAE,QAAQ,QAAQ,aAAa,OAAO;AAAA,IACvC,CAAC;AAED,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AACpD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AACpD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AACpD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AACpD,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,MAAM;AAAA,EACrD,CAAC;AAED,OAAK,gHAAgH,YAAY;AAChI,UAAM,CAAC,MAAM,oBAAoB,IAAI,MAAM,WAAW;AACtD,UAAM,QAAQ,KAAK;AACnB,WAAO,YAAY,MAAM,SAAS,IAAI;AAEtC,UAAM,QAAQ,0BAA0B,IAAI,KAAK,SAAS,GAAG,oBAAoB;AACjF,UAAM,kBAAkB,qBAAqB,eAAe,uBAAuB,QAAW,QAAW,OAAO,KAAK;AAErH,UAAM,MAAM,WAAW,KAAK;AAC5B,WAAO,YAAY,MAAM,OAAO,CAAC;AACjC,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,KAAK;AAEnD,UAAM,MAAM,eAAe,CAAC,EAAE,QAAQ,OAAO,aAAa,gBAAgB,CAAC,CAAC;AAC5E,WAAO,YAAY,MAAM,OAAO,CAAC;AACjC,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,eAAe;AAE7D,UAAM,MAAM,eAAe,CAAC,EAAE,QAAQ,iBAAiB,aAAa,MAAM,CAAC,CAAC;AAC5E,WAAO,YAAY,MAAM,OAAO,CAAC;AACjC,WAAO,YAAY,MAAM,iBAAiB,CAAC,GAAG,KAAK;AAAA,EACpD,CAAC;AAED,OAAK,gBAAgB,YAAY;AAChC,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAChC,UAAM,QAAQ,KAAK;AACnB,UAAM,SAAS,KAAK,SAAS,OAAO,eAAe,KAAK;AACxD,WAAO,YAAY,MAAM,SAAS,IAAI;AAEtC,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACnF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,GAAG,oBAAoB,IAAI;AAC1F,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACnF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACnF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,GAAG,oBAAoB,IAAI;AAE1F,UAAM,MAAM,WAAW,QAAQ,EAAE,QAAQ,KAAK,CAAC;AAC/C,UAAM,MAAM,WAAW,QAAQ,EAAE,QAAQ,KAAK,CAAC;AAC/C,UAAM,MAAM,WAAW,QAAQ,EAAE,QAAQ,KAAK,CAAC;AAC/C,UAAM,MAAM,WAAW,QAAQ,EAAE,QAAQ,KAAK,CAAC;AAC/C,UAAM,OAAO,WAAW,QAAQ,EAAE,QAAQ,KAAK,CAAC;AAEhD,QAAI,eAAe,MAAM,YAAY,IAAI,KAAK,UAAU,CAAC;AACzD,WAAO,YAAY,aAAa,QAAQ,CAAC;AACzC,mBAAe,OAAO,YAAY,IAAI,KAAK,UAAU,CAAC;AACtD,WAAO,YAAY,aAAa,QAAQ,CAAC;AAAA,EAC1C,CAAC;AAED,OAAK,uCAAuC,YAAY;AACvD,UAAM,CAAC,MAAM,oBAAoB,IAAI,MAAM,WAAW;AAEtD,UAAM,WAAW,qBAAqB,eAAe,mBAAmB;AAExE,UAAM,QAAQ,KAAK;AACnB,WAAO,YAAY,MAAM,SAAS,IAAI;AAEtC,UAAM,iBAAiB,0BAA0B,IAAI,KAAK,mBAAmB,GAAG,oBAAoB;AACpG,UAAM,eAAe,0BAA0B,IAAI,KAAK,iBAAiB,GAAG,GAAG,oBAAoB,IAAI;AAEvG,UAAM,mBAAmB,IAAI,sBAAsB,QAAW,QAAW,gBAAgB,cAAc,SAAS,aAAa;AAC7H,UAAM,MAAM,WAAW,kBAAkB,EAAE,QAAQ,KAAK,CAAC;AAEzD,QAAI,eAAe,MAAM,YAAY,IAAI,KAAK,mBAAmB,CAAC;AAClE,WAAO,YAAY,aAAa,QAAQ,CAAC;AAEzC,mBAAe,MAAM,YAAY,IAAI,KAAK,mBAAmB,GAAG,EAAE,mBAAmB,iBAAiB,QAAQ,CAAC;AAC/G,WAAO,YAAY,aAAa,QAAQ,CAAC;AAEzC,mBAAe,MAAM,YAAY,IAAI,KAAK,iBAAiB,GAAG,EAAE,mBAAmB,iBAAiB,QAAQ,CAAC;AAC7G,WAAO,YAAY,aAAa,QAAQ,CAAC;AAEzC,mBAAe,MAAM,YAAY,IAAI,KAAK,mBAAmB,GAAG,EAAE,mBAAmB,iBAAiB,UAAU,CAAC;AACjH,WAAO,YAAY,aAAa,QAAQ,CAAC;AAEzC,mBAAe,MAAM,YAAY,IAAI,KAAK,iBAAiB,GAAG,EAAE,mBAAmB,iBAAiB,UAAU,CAAC;AAC/G,WAAO,YAAY,aAAa,QAAQ,CAAC;AAEzC,mBAAe,MAAM,YAAY,IAAI,KAAK,mBAAmB,GAAG,EAAE,mBAAmB,iBAAiB,IAAI,CAAC;AAC3G,WAAO,YAAY,aAAa,QAAQ,CAAC;AAEzC,mBAAe,MAAM,YAAY,IAAI,KAAK,iBAAiB,GAAG,EAAE,mBAAmB,iBAAiB,IAAI,CAAC;AACzG,WAAO,YAAY,aAAa,QAAQ,CAAC;AAAA,EAC1C,CAAC;AAED,OAAK,qCAAqC,iBAAkB;AAC3D,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAChC,UAAM,YAAY,KAAK;AACvB,UAAM,aAAa,KAAK,SAAS,WAAW,eAAe,KAAK;AAEhE,WAAO,YAAY,YAAY,KAAK,UAAU,EAAE,WAAW,eAAe,MAAM,GAAG,SAAS,CAAC;AAC7F,WAAO,YAAY,WAAW,KAAK,UAAU,EAAE,WAAW,eAAe,KAAK,GAAG,UAAU,CAAC;AAAA,EAC7F,CAAC;AAED,OAAK,kCAAkC,iBAAkB;AACxD,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAChC,UAAM,YAAY,KAAK;AACvB,UAAM,YAAY,KAAK,SAAS,WAAW,eAAe,IAAI;AAE9D,WAAO,YAAY,WAAW,KAAK,UAAU,EAAE,WAAW,eAAe,KAAK,GAAG,SAAS,CAAC;AAC3F,WAAO,YAAY,WAAW,KAAK,UAAU,EAAE,WAAW,eAAe,GAAG,GAAG,SAAS,CAAC;AAAA,EAC1F,CAAC;AAED,OAAK,uCAAuC,iBAAkB;AAC7D,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAChC,UAAM,YAAY,KAAK;AACvB,UAAM,aAAa,KAAK,SAAS,WAAW,eAAe,KAAK;AAChE,UAAM,YAAY,KAAK,SAAS,YAAY,eAAe,IAAI;AAE/D,WAAO,YAAY,WAAW,KAAK,UAAU,EAAE,UAAU,cAAc,MAAM,CAAC,CAAC;AAC/E,WAAO,YAAY,WAAW,KAAK,UAAU,EAAE,UAAU,cAAc,KAAK,CAAC,CAAC;AAE9E,WAAO,YAAY,YAAY,KAAK,UAAU,EAAE,UAAU,cAAc,KAAK,GAAG,SAAS,CAAC;AAC1F,WAAO,YAAY,WAAW,KAAK,UAAU,EAAE,UAAU,cAAc,SAAS,GAAG,UAAU,CAAC;AAE9F,WAAO,YAAY,WAAW,KAAK,UAAU,EAAE,UAAU,cAAc,KAAK,GAAG,UAAU,CAAC;AAC1F,WAAO,YAAY,YAAY,KAAK,UAAU,EAAE,UAAU,cAAc,SAAS,GAAG,SAAS,CAAC;AAAA,EAC/F,CAAC;AAED,OAAK,qBAAqB,iBAAkB;AAC3C,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAEhC,SAAK,YAAY,EAAE,QAAQ,CAAC,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,aAAa,iBAAiB,WAAW,CAAC;AAEnH,WAAO,YAAY,KAAK,OAAO,QAAQ,CAAC;AAAA,EACzC,CAAC;AAED,OAAK,aAAa,iBAAkB;AACnC,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAGhC,SAAK,YAAY,EAAE,QAAQ,CAAC,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,aAAa,iBAAiB,WAAW,CAAC;AACnH,QAAI,SAAS,KAAK,UAAU;AAE5B,WAAO,YAAY,OAAO,aAAa,iBAAiB,UAAU;AAClE,WAAO,YAAY,OAAO,OAAO,QAAQ,CAAC;AAC1C,WAAO,YAAY,OAAO,OAAO,CAAC,EAAE,OAAQ,QAAQ,CAAC;AACrD,WAAO,YAAY,OAAO,OAAO,CAAC,EAAE,OAAQ,QAAQ,CAAC;AAGrD,SAAK,YAAY,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,aAAa,iBAAiB,SAAS,CAAC;AACjF,aAAS,KAAK,UAAU;AAExB,WAAO,YAAY,OAAO,aAAa,iBAAiB,QAAQ;AAChE,WAAO,YAAY,OAAO,OAAO,QAAQ,CAAC;AAC1C,WAAO,GAAG,OAAO,OAAO,OAAO,CAAC,EAAE,SAAS,QAAQ;AACnD,WAAO,GAAG,OAAO,OAAO,OAAO,CAAC,EAAE,SAAS,QAAQ;AACnD,WAAO,GAAG,OAAO,OAAO,OAAO,CAAC,EAAE,SAAS,QAAQ;AAAA,EACpD,CAAC;AAED,OAAK,kBAAkB,iBAAkB;AACxC,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAEhC,SAAK,aAAa,IAAI;AAEtB,WAAO,YAAY,KAAK,iBAAiB,GAAG,IAAI;AAAA,EACjD,CAAC;AAED,OAAK,kBAAkB,YAAY;AAClC,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAChC,UAAM,QAAQ,KAAK;AAEnB,WAAO,YAAY,MAAM,aAAa,CAAC;AACvC,WAAO,YAAY,MAAM,WAAW,aAAa,UAAU,EAAE,QAAQ,CAAC;AACtE,WAAO,YAAY,MAAM,WAAW,aAAa,oBAAoB,EAAE,QAAQ,CAAC;AAChF,WAAO,YAAY,MAAM,WAAW,aAAa,YAAY,EAAE,eAAe,KAAK,CAAC,EAAE,QAAQ,CAAC;AAC/F,WAAO,YAAY,MAAM,WAAW,aAAa,sBAAsB,EAAE,eAAe,KAAK,CAAC,EAAE,QAAQ,CAAC;AAEzG,UAAM,QAAQ,0BAA0B,IAAI,KAAK,SAAS,GAAG,oBAAoB;AACjF,UAAM,gBAAgB,0BAA0B,IAAI,KAAK,kBAAkB,GAAG,oBAAoB;AAElG,UAAM,MAAM,WAAW,OAAO,EAAE,QAAQ,KAAK,CAAC;AAC9C,UAAM,MAAM,WAAW,eAAe,EAAE,UAAU,KAAK,CAAC;AAExD,WAAO,YAAY,MAAM,aAAa,CAAC;AACvC,WAAO,YAAY,MAAM,SAAS,KAAK,GAAG,KAAK;AAC/C,WAAO,YAAY,MAAM,SAAS,aAAa,GAAG,KAAK;AAEvD,WAAO,YAAY,MAAM,WAAW,aAAa,UAAU,EAAE,QAAQ,CAAC;AACtE,WAAO,YAAY,MAAM,WAAW,aAAa,oBAAoB,EAAE,QAAQ,CAAC;AAChF,WAAO,YAAY,MAAM,WAAW,aAAa,YAAY,EAAE,eAAe,KAAK,CAAC,EAAE,QAAQ,CAAC;AAC/F,WAAO,YAAY,MAAM,WAAW,aAAa,sBAAsB,EAAE,eAAe,KAAK,CAAC,EAAE,QAAQ,CAAC;AAEzG,UAAM,YAAY,KAAK;AAEvB,WAAO,YAAY,MAAM,aAAa,CAAC;AACvC,WAAO,YAAY,MAAM,SAAS,KAAK,GAAG,IAAI;AAC9C,WAAO,YAAY,MAAM,SAAS,aAAa,GAAG,KAAK;AAEvD,WAAO,YAAY,MAAM,WAAW,aAAa,UAAU,EAAE,QAAQ,CAAC;AACtE,WAAO,YAAY,MAAM,WAAW,aAAa,oBAAoB,EAAE,QAAQ,CAAC;AAChF,WAAO,YAAY,MAAM,WAAW,aAAa,YAAY,EAAE,eAAe,KAAK,CAAC,EAAE,QAAQ,CAAC;AAC/F,WAAO,YAAY,MAAM,WAAW,aAAa,sBAAsB,EAAE,eAAe,KAAK,CAAC,EAAE,QAAQ,CAAC;AAEzG,UAAM,cAAc,KAAK;AAEzB,WAAO,YAAY,MAAM,aAAa,CAAC;AACvC,WAAO,YAAY,MAAM,SAAS,KAAK,GAAG,KAAK;AAC/C,WAAO,YAAY,MAAM,SAAS,aAAa,GAAG,KAAK;AAEvD,WAAO,YAAY,MAAM,iBAAiB,KAAK,GAAG,CAAC;AACnD,WAAO,YAAY,MAAM,iBAAiB,aAAa,GAAG,CAAC;AAE3D,WAAO,YAAY,MAAM,WAAW,aAAa,UAAU,EAAE,QAAQ,CAAC;AACtE,WAAO,YAAY,MAAM,WAAW,aAAa,oBAAoB,EAAE,QAAQ,CAAC;AAChF,WAAO,YAAY,MAAM,WAAW,aAAa,YAAY,EAAE,eAAe,KAAK,CAAC,EAAE,QAAQ,CAAC;AAC/F,WAAO,YAAY,MAAM,WAAW,aAAa,sBAAsB,EAAE,eAAe,KAAK,CAAC,EAAE,QAAQ,CAAC;AAEzG,QAAI,oBAAoB;AACxB,UAAM,iCAAiC,MAAM,iBAAiB,OAAK;AAClE,UAAI,EAAE,SAAS,qBAAqB,aAAa;AAChD,eAAO,GAAG,EAAE,MAAM;AAClB;AAAA,MACD;AAAA,IACD,CAAC;AAED,UAAM,YAAY,aAAa;AAE/B,WAAO,YAAY,MAAM,aAAa,CAAC;AACvC,WAAO,YAAY,MAAM,SAAS,KAAK,GAAG,KAAK;AAC/C,WAAO,YAAY,MAAM,SAAS,aAAa,GAAG,IAAI;AAEtD,WAAO,YAAY,MAAM,iBAAiB,KAAK,GAAG,CAAC;AACnD,WAAO,YAAY,MAAM,iBAAiB,aAAa,GAAG,CAAC;AAC3D,WAAO,YAAY,mBAAmB,CAAC;AAEvC,WAAO,YAAY,MAAM,WAAW,aAAa,UAAU,EAAE,QAAQ,CAAC;AACtE,WAAO,YAAY,MAAM,WAAW,aAAa,oBAAoB,EAAE,QAAQ,CAAC;AAChF,WAAO,YAAY,MAAM,WAAW,aAAa,YAAY,EAAE,eAAe,KAAK,CAAC,EAAE,QAAQ,CAAC;AAC/F,WAAO,YAAY,MAAM,WAAW,aAAa,sBAAsB,EAAE,eAAe,KAAK,CAAC,EAAE,QAAQ,CAAC;AAEzG,UAAM,cAAc,0BAA0B,IAAI,KAAK,gBAAgB,GAAG,oBAAoB;AAE9F,UAAM,MAAM,WAAW,aAAa,EAAE,QAAQ,KAAK,CAAC;AAEpD,WAAO,YAAY,MAAM,aAAa,CAAC;AACvC,WAAO,YAAY,MAAM,SAAS,KAAK,GAAG,KAAK;AAC/C,WAAO,YAAY,MAAM,SAAS,aAAa,GAAG,IAAI;AACtD,WAAO,YAAY,MAAM,SAAS,WAAW,GAAG,IAAI;AAEpD,WAAO,YAAY,MAAM,iBAAiB,aAAa,GAAG,CAAC;AAC3D,WAAO,YAAY,MAAM,iBAAiB,WAAW,GAAG,CAAC;AACzD,WAAO,YAAY,MAAM,iBAAiB,KAAK,GAAG,CAAC;AAEnD,UAAM,MAAM,WAAW,OAAO,EAAE,QAAQ,KAAK,CAAC;AAE9C,WAAO,YAAY,MAAM,aAAa,CAAC;AACvC,WAAO,YAAY,MAAM,SAAS,KAAK,GAAG,IAAI;AAC9C,WAAO,YAAY,MAAM,SAAS,aAAa,GAAG,IAAI;AACtD,WAAO,YAAY,MAAM,SAAS,WAAW,GAAG,IAAI;AAEpD,WAAO,YAAY,MAAM,iBAAiB,aAAa,GAAG,CAAC;AAC3D,WAAO,YAAY,MAAM,iBAAiB,WAAW,GAAG,CAAC;AACzD,WAAO,YAAY,MAAM,iBAAiB,KAAK,GAAG,CAAC;AAEnD,mCAA+B,QAAQ;AAAA,EACxC,CAAC;AAED,OAAK,gCAAgC,YAAY;AAChD,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAChC,UAAM,QAAQ,KAAK;AAEnB,WAAO,YAAY,MAAM,aAAa,CAAC;AAEvC,UAAM,QAAQ,0BAA0B,IAAI,KAAK,SAAS,GAAG,oBAAoB;AACjF,UAAM,gBAAgB,0BAA0B,IAAI,KAAK,kBAAkB,GAAG,oBAAoB;AAClG,UAAM,cAAc,0BAA0B,IAAI,KAAK,gBAAgB,GAAG,oBAAoB;AAE9F,UAAM,MAAM,WAAW,OAAO,EAAE,QAAQ,KAAK,CAAC;AAC9C,UAAM,MAAM,WAAW,eAAe,EAAE,UAAU,KAAK,CAAC;AACxD,UAAM,MAAM,WAAW,aAAa,EAAE,QAAQ,MAAM,OAAO,EAAE,CAAC;AAE9D,WAAO,YAAY,MAAM,aAAa,CAAC;AACvC,WAAO,YAAY,MAAM,SAAS,WAAW,GAAG,IAAI;AAEpD,WAAO,YAAY,MAAM,iBAAiB,KAAK,GAAG,CAAC;AACnD,WAAO,YAAY,MAAM,iBAAiB,aAAa,GAAG,CAAC;AAC3D,WAAO,YAAY,MAAM,iBAAiB,WAAW,GAAG,CAAC;AAAA,EAC1D,CAAC;AAED,OAAK,wDAAwD,YAAY;AACxE,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAChC,UAAM,QAAQ,KAAK;AAEnB,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACnF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACnF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AAEnF,aAAS,YAAY,QAAwC;AAC5D,iBAAW,SAAS,QAAQ;AAC3B,YAAI,MAAM,gBAAgB,QAAQ,KAAK,MAAM,IAAI;AAChD,iBAAO;AAAA,QACR;AAAA,MACD;AACA,aAAO,OAAO,WAAW,MAAM,gBAAgB;AAAA,IAChD;AAPS;AAUT,UAAM,MAAM,YAAY,CAAC,QAAQ,QAAQ,MAAM,EAAE,IAAI,aAAW,EAAE,QAAQ,SAAS,EAAE,QAAQ,KAAK,EAAE,EAAE,CAAC;AAEvG,WAAO,YAAY,MAAM,SAAS,MAAM,GAAG,IAAI;AAC/C,WAAO,YAAY,MAAM,WAAW,MAAM,GAAG,IAAI;AACjD,WAAO,YAAY,MAAM,WAAW,MAAM,GAAG,KAAK;AAClD,WAAO,YAAY,MAAM,WAAW,MAAM,GAAG,KAAK;AAElD,WAAO,YAAY,YAAY,CAAC,MAAM,CAAC,GAAG,IAAI;AAG9C,UAAM,MAAM,aAAa,QAAQ,CAAC,MAAM,CAAC;AAEzC,WAAO,YAAY,MAAM,SAAS,MAAM,GAAG,IAAI;AAC/C,WAAO,YAAY,MAAM,WAAW,MAAM,GAAG,IAAI;AACjD,WAAO,YAAY,MAAM,WAAW,MAAM,GAAG,KAAK;AAClD,WAAO,YAAY,MAAM,WAAW,MAAM,GAAG,IAAI;AAEjD,WAAO,YAAY,YAAY,CAAC,QAAQ,MAAM,CAAC,GAAG,IAAI;AAGtD,UAAM,MAAM,aAAa,QAAQ,CAAC,QAAQ,MAAM,CAAC;AAEjD,WAAO,YAAY,MAAM,WAAW,MAAM,GAAG,IAAI;AACjD,WAAO,YAAY,MAAM,SAAS,MAAM,GAAG,IAAI;AAC/C,WAAO,YAAY,MAAM,WAAW,MAAM,GAAG,IAAI;AACjD,WAAO,YAAY,MAAM,WAAW,MAAM,GAAG,IAAI;AAEjD,WAAO,YAAY,YAAY,CAAC,QAAQ,QAAQ,MAAM,CAAC,GAAG,IAAI;AAE9D,UAAM,MAAM,aAAa,QAAQ,CAAC,CAAC;AAGnC,WAAO,YAAY,MAAM,SAAS,MAAM,GAAG,IAAI;AAC/C,WAAO,YAAY,MAAM,WAAW,MAAM,GAAG,IAAI;AACjD,WAAO,YAAY,MAAM,WAAW,MAAM,GAAG,KAAK;AAClD,WAAO,YAAY,MAAM,WAAW,MAAM,GAAG,KAAK;AAElD,WAAO,YAAY,YAAY,CAAC,MAAM,CAAC,GAAG,IAAI;AAAA,EAC/C,CAAC;AAED,OAAK,2CAA2C,YAAY;AAC3D,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAChC,UAAM,QAAQ,KAAK;AACnB,WAAO,YAAY,MAAM,SAAS,IAAI;AAEtC,UAAM,aAAa,KAAK,SAAS,OAAO,eAAe,KAAK;AAE5D,UAAM,QAAQ,0BAA0B,IAAI,KAAK,SAAS,GAAG,oBAAoB;AACjF,UAAM,gBAAgB,0BAA0B,IAAI,KAAK,kBAAkB,GAAG,oBAAoB;AAClG,UAAM,aAAa,0BAA0B,IAAI,KAAK,eAAe,GAAG,oBAAoB;AAE5F,QAAI,iBAAiB;AACrB,UAAM,oBAAoB,MAAM,iBAAiB,MAAM;AACtD;AAAA,IACD,CAAC;AAED,QAAI,kBAAkB;AACtB,UAAM,qBAAqB,WAAW,iBAAiB,MAAM;AAC5D;AAAA,IACD,CAAC;AAED,UAAM,MAAM,YAAY,CAAC,EAAE,QAAQ,OAAO,SAAS,EAAE,QAAQ,KAAK,EAAE,GAAG,EAAE,QAAQ,cAAc,GAAG,EAAE,QAAQ,WAAW,CAAC,CAAC;AACzH,WAAO,YAAY,gBAAgB,CAAC;AACpC,WAAO,YAAY,iBAAiB,CAAC;AAErC,QAAI,SAAS,MAAM,WAAW,OAAO,UAAU;AAC/C,WAAO,YAAY,QAAQ,IAAI;AAC/B,WAAO,YAAY,gBAAgB,CAAC;AACpC,WAAO,YAAY,iBAAiB,CAAC;AAErC,aAAS,MAAM,WAAW,eAAe,UAAU;AACnD,WAAO,YAAY,QAAQ,IAAI;AAC/B,WAAO,YAAY,gBAAgB,CAAC;AACpC,WAAO,YAAY,iBAAiB,CAAC;AAErC,aAAS,WAAW,WAAW,eAAe,KAAK;AACnD,WAAO,YAAY,QAAQ,IAAI;AAC/B,WAAO,YAAY,gBAAgB,CAAC;AACpC,WAAO,YAAY,iBAAiB,CAAC;AAErC,sBAAkB,QAAQ;AAC1B,uBAAmB,QAAQ;AAAA,EAC5B,CAAC;AAED,OAAK,uBAAuB,YAAY;AACvC,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAChC,UAAM,QAAQ,KAAK;AACnB,WAAO,YAAY,MAAM,SAAS,IAAI;AAEtC,UAAM,aAAa,KAAK,SAAS,OAAO,eAAe,KAAK;AAE5D,UAAM,QAAQ,0BAA0B,IAAI,KAAK,SAAS,GAAG,oBAAoB;AACjF,UAAM,gBAAgB,0BAA0B,IAAI,KAAK,kBAAkB,GAAG,oBAAoB;AAClG,UAAM,aAAa,0BAA0B,IAAI,KAAK,eAAe,GAAG,oBAAoB;AAE5F,UAAM,MAAM,YAAY,CAAC,EAAE,QAAQ,OAAO,SAAS,EAAE,QAAQ,KAAK,EAAE,GAAG,EAAE,QAAQ,cAAc,GAAG,EAAE,QAAQ,WAAW,CAAC,CAAC;AAEzH,UAAM,gBAAgB,UAAU;AAChC,UAAM,SAAS,MAAM,WAAW,OAAO,UAAU;AAEjD,WAAO,YAAY,QAAQ,KAAK;AAChC,WAAO,YAAY,MAAM,OAAO,CAAC;AAAA,EAClC,CAAC;AAED,OAAK,oBAAoB,YAAY;AACpC,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAChC,UAAM,QAAQ,KAAK;AACnB,WAAO,YAAY,MAAM,SAAS,IAAI;AAEtC,UAAM,aAAa,KAAK,SAAS,OAAO,eAAe,KAAK;AAE5D,UAAM,QAAQ,0BAA0B,IAAI,KAAK,SAAS,GAAG,oBAAoB;AACjF,UAAM,cAAc,0BAA0B,IAAI,KAAK,gBAAgB,GAAG,oBAAoB;AAC9F,UAAM,aAAa,0BAA0B,IAAI,KAAK,eAAe,GAAG,oBAAoB;AAE5F,QAAI,iBAAiB;AACrB,UAAM,oBAAoB,MAAM,iBAAiB,MAAM;AACtD;AAAA,IACD,CAAC;AAED,QAAI,kBAAkB;AACtB,UAAM,qBAAqB,WAAW,iBAAiB,MAAM;AAC5D;AAAA,IACD,CAAC;AAED,UAAM,MAAM,WAAW,KAAK;AAC5B,WAAO,YAAY,gBAAgB,CAAC;AACpC,WAAO,YAAY,iBAAiB,CAAC;AAErC,eAAW,WAAW,WAAW;AACjC,WAAO,YAAY,gBAAgB,CAAC;AACpC,WAAO,YAAY,iBAAiB,CAAC;AAErC,UAAM,WAAW,UAAU;AAC3B,WAAO,YAAY,gBAAgB,CAAC;AACpC,WAAO,YAAY,iBAAiB,CAAC;AAGrC,eAAW,WAAW,aAAa,KAAK;AACxC,WAAO,YAAY,gBAAgB,CAAC;AACpC,WAAO,YAAY,iBAAiB,CAAC;AAErC,sBAAkB,QAAQ;AAC1B,uBAAmB,QAAQ;AAAA,EAC5B,CAAC;AAED,OAAK,2CAA2C,YAAY;AAC3D,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAChC,UAAM,QAAQ,KAAK;AACnB,WAAO,YAAY,MAAM,SAAS,IAAI;AACtC,QAAI,aAAa;AACjB,UAAM,eAAe,MAAM,iBAAiB,MAAM,YAAY;AAE9D,UAAM,aAAa,KAAK,SAAS,OAAO,eAAe,KAAK;AAC5D,UAAM,QAAQ,0BAA0B,IAAI,KAAK,SAAS,GAAG,oBAAoB;AACjF,UAAM,gBAAgB,0BAA0B,IAAI,KAAK,kBAAkB,GAAG,oBAAoB;AAClG,UAAM,MAAM,YAAY,CAAC,EAAE,QAAQ,OAAO,SAAS,EAAE,QAAQ,KAAK,EAAE,GAAG,EAAE,QAAQ,cAAc,CAAC,CAAC;AACjG,WAAO,YAAY,YAAY,CAAC;AAEhC,UAAM,WAAW,eAAe,YAAY,EAAE,OAAO,EAAE,CAAC;AAExD,WAAO,YAAY,YAAY,CAAC;AAChC,iBAAa,QAAQ;AAAA,EACtB,CAAC;AAED,OAAK,0BAA0B,YAAY;AAC1C,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAChC,UAAM,QAAQ,KAAK;AAEnB,UAAM,aAAa,KAAK,SAAS,OAAO,eAAe,KAAK;AAE5D,QAAI,yBAAyB;AAC7B,QAAI,0BAA0B;AAC9B,UAAM,eAAe,KAAK,uBAAuB,OAAK;AACrD,UAAI,MAAM,OAAO;AAChB;AAAA,MACD,WAAW,MAAM,YAAY;AAC5B;AAAA,MACD;AAAA,IACD,CAAC;AAED,QAAI,0BAA0B;AAC9B,UAAM,oBAAoB,MAAM,iBAAiB,OAAK;AACrD,UAAI,EAAE,SAAS,qBAAqB,cAAc;AACjD;AAAA,MACD;AAAA,IACD,CAAC;AAED,QAAI,2BAA2B;AAC/B,UAAM,qBAAqB,WAAW,iBAAiB,OAAK;AAC3D,UAAI,EAAE,SAAS,qBAAqB,cAAc;AACjD;AAAA,MACD;AAAA,IACD,CAAC;AAED,eAAW,KAAK,IAAI;AACpB,eAAW,KAAK,IAAI;AAEpB,WAAO,YAAY,yBAAyB,CAAC;AAC7C,WAAO,YAAY,wBAAwB,CAAC;AAC5C,WAAO,YAAY,0BAA0B,CAAC;AAC9C,WAAO,YAAY,yBAAyB,CAAC;AAE7C,eAAW,KAAK,KAAK;AACrB,eAAW,KAAK,KAAK;AAErB,WAAO,YAAY,yBAAyB,CAAC;AAC7C,WAAO,YAAY,wBAAwB,CAAC;AAC5C,WAAO,YAAY,0BAA0B,CAAC;AAC9C,WAAO,YAAY,yBAAyB,CAAC;AAE7C,UAAM,KAAK,IAAI;AACf,UAAM,KAAK,IAAI;AAEf,WAAO,YAAY,yBAAyB,CAAC;AAC7C,WAAO,YAAY,wBAAwB,CAAC;AAC5C,WAAO,YAAY,0BAA0B,CAAC;AAC9C,WAAO,YAAY,yBAAyB,CAAC;AAE7C,UAAM,KAAK,KAAK;AAChB,UAAM,KAAK,KAAK;AAEhB,WAAO,YAAY,yBAAyB,CAAC;AAC7C,WAAO,YAAY,wBAAwB,CAAC;AAC5C,WAAO,YAAY,0BAA0B,CAAC;AAC9C,WAAO,YAAY,yBAAyB,CAAC;AAE7C,iBAAa,QAAQ;AACrB,sBAAkB,QAAQ;AAC1B,uBAAmB,QAAQ;AAAA,EAC5B,CAAC;AAED,OAAK,iDAAiD,YAAY;AACjE,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAChC,UAAM,QAAQ,KAAK;AAEnB,UAAM,KAAK,IAAI;AACf,WAAO,YAAY,MAAM,UAAU,IAAI;AAEvC,UAAM,aAAa,KAAK,SAAS,OAAO,eAAe,KAAK;AAC5D,eAAW,KAAK,IAAI;AAEpB,WAAO,YAAY,WAAW,UAAU,IAAI;AAE5C,SAAK,YAAY,KAAK;AACtB,WAAO,YAAY,WAAW,UAAU,IAAI;AAE5C,UAAM,cAAc,KAAK,SAAS,YAAY,eAAe,KAAK;AAClE,eAAW,KAAK,IAAI;AACpB,gBAAY,KAAK,IAAI;AAErB,WAAO,YAAY,WAAW,UAAU,IAAI;AAC5C,WAAO,YAAY,YAAY,UAAU,IAAI;AAE7C,SAAK,YAAY,WAAW;AAE5B,WAAO,YAAY,WAAW,UAAU,IAAI;AAAA,EAC7C,CAAC;AAED,OAAK,4CAA4C,YAAY;AAC5D,UAAM,uBAAuB,8BAA8B,QAAW,WAAW;AACjF,UAAM,uBAAuB,IAAI,yBAAyB;AAC1D,UAAM,qBAAqB,qBAAqB,aAAa,EAAE,UAAU,EAAE,kBAAkB,EAAE,wCAAwC,KAAK,EAAE,EAAE,CAAC;AACjJ,yBAAqB,KAAK,uBAAuB,oBAAoB;AAErE,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW,oBAAoB;AAEpD,UAAM,YAAY,KAAK;AACvB,QAAI,aAAa,KAAK,SAAS,WAAW,eAAe,KAAK;AAE9D,QAAI,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACjF,QAAI,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AAGjF,UAAM,WAAW,WAAW,QAAQ,EAAE,QAAQ,KAAK,CAAC;AACpD,WAAO,YAAY,WAAW,UAAU,IAAI;AAG5C,eAAW,KAAK,KAAK;AACrB,UAAM,WAAW,WAAW,QAAQ,EAAE,QAAQ,KAAK,CAAC;AACpD,WAAO,YAAY,WAAW,UAAU,KAAK;AAG7C,UAAM,WAAW,gBAAgB;AACjC,SAAK,YAAY,UAAU;AAC3B,UAAM,UAAU,gBAAgB;AAEhC,aAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AAC7E,aAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AAE7E,UAAM,UAAU,WAAW,QAAQ,EAAE,QAAQ,KAAK,CAAC;AACnD,WAAO,YAAY,UAAU,UAAU,KAAK;AAC5C,iBAAa,KAAK,SAAS,WAAW,eAAe,KAAK;AAC1D,WAAO,YAAY,UAAU,UAAU,KAAK;AAC5C,UAAM,YAAY,KAAK,SAAS,WAAW,eAAe,IAAI;AAC9D,WAAO,YAAY,UAAU,UAAU,KAAK;AAC5C,SAAK,YAAY,SAAS;AAC1B,WAAO,YAAY,UAAU,UAAU,KAAK;AAAA,EAC7C,CAAC;AAED,OAAK,yBAAyB,YAAY;AACzC,UAAM,uBAAuB,8BAA8B,QAAW,WAAW;AACjF,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW,oBAAoB;AAEpD,UAAM,YAAY,KAAK;AACvB,UAAM,iBAAiB,KAAK,QAAQ,SAAS;AAG7C,WAAO,YAAY,KAAK,kBAAkB,GAAG,KAAK;AAElD,UAAM,aAAa,KAAK,SAAS,WAAW,eAAe,KAAK;AAChE,UAAM,mBAAmB,KAAK,SAAS,YAAY,eAAe,IAAI;AAEtE,UAAM,gBAAgB,KAAK,QAAQ,SAAS;AAC5C,UAAM,iBAAiB,KAAK,QAAQ,UAAU;AAC9C,UAAM,uBAAuB,KAAK,QAAQ,gBAAgB;AAE1D,QAAI;AACJ,UAAM,8BAA8B,KAAK,0BAA0B,CAAC,cAAc;AACjF,uBAAiB;AAAA,IAClB,CAAC;AAED,WAAO,YAAY,KAAK,kBAAkB,GAAG,KAAK;AAElD,SAAK,cAAc,kBAAkB,UAAU,SAAS;AAExD,WAAO,YAAY,KAAK,kBAAkB,GAAG,IAAI;AAGjD,WAAO,gBAAgB,KAAK,QAAQ,SAAS,GAAG,cAAc;AAC9D,WAAO,gBAAgB,KAAK,QAAQ,UAAU,GAAG,EAAE,OAAO,GAAG,QAAQ,EAAE,CAAC;AACxE,WAAO,gBAAgB,KAAK,QAAQ,gBAAgB,GAAG,EAAE,OAAO,GAAG,QAAQ,EAAE,CAAC;AAE9E,WAAO,gBAAgB,gBAAgB,IAAI;AAE3C,SAAK,oBAAoB;AAEzB,WAAO,YAAY,KAAK,kBAAkB,GAAG,KAAK;AAGlD,WAAO,gBAAgB,KAAK,QAAQ,SAAS,GAAG,aAAa;AAC7D,WAAO,gBAAgB,KAAK,QAAQ,UAAU,GAAG,cAAc;AAC/D,WAAO,gBAAgB,KAAK,QAAQ,gBAAgB,GAAG,oBAAoB;AAE3E,WAAO,gBAAgB,gBAAgB,KAAK;AAC5C,gCAA4B,QAAQ;AAAA,EACrC,CAAC;AAED,OAAK,8BAA8B,YAAY;AAC9C,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAChC,UAAM,QAAQ,KAAK;AAEnB,UAAM,QAAQ,0BAA0B,IAAI,KAAK,SAAS,GAAG,oBAAoB;AACjF,UAAM,iBAAiB,0BAA0B,IAAI,KAAK,kBAAkB,GAAG,oBAAoB;AAEnG,UAAM,MAAM,WAAW,OAAO,EAAE,QAAQ,KAAK,CAAC;AAC9C,UAAM,MAAM,WAAW,gBAAgB,EAAE,WAAW,KAAK,CAAC;AAE1D,WAAO,YAAY,MAAM,YAAY,KAAK,GAAG,KAAK;AAClD,WAAO,YAAY,MAAM,YAAY,cAAc,GAAG,IAAI;AAE1D,UAAM,MAAM,WAAW,OAAO,EAAE,QAAQ,KAAK,CAAC;AAC9C,UAAM,MAAM,WAAW,gBAAgB,EAAE,WAAW,KAAK,CAAC;AAE1D,WAAO,YAAY,MAAM,YAAY,cAAc,GAAG,IAAI;AAE1D,UAAM,MAAM,WAAW,gBAAgB,EAAE,WAAW,MAAM,CAAC;AAC3D,WAAO,YAAY,MAAM,YAAY,cAAc,GAAG,KAAK;AAE3D,UAAM,MAAM,WAAW,gBAAgB,EAAE,WAAW,KAAK,CAAC;AAC1D,WAAO,YAAY,MAAM,YAAY,cAAc,GAAG,KAAK;AAAA,EAC5D,CAAC;AAED,OAAK,gDAAgD,YAAY;AAChE,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAChC,UAAM,QAAQ,KAAK;AAEnB,UAAM,QAAQ,0BAA0B,IAAI,KAAK,SAAS,GAAG,oBAAoB;AACjF,UAAM,iBAAiB,0BAA0B,IAAI,KAAK,kBAAkB,GAAG,oBAAoB;AAEnG,UAAM,MAAM,WAAW,OAAO,EAAE,QAAQ,KAAK,CAAC;AAC9C,UAAM,MAAM,WAAW,gBAAgB,EAAE,WAAW,KAAK,CAAC;AAE1D,WAAO,YAAY,MAAM,YAAY,KAAK,GAAG,KAAK;AAClD,WAAO,YAAY,MAAM,YAAY,cAAc,GAAG,IAAI;AAE1D,UAAM,MAAM,WAAW,OAAO,EAAE,QAAQ,KAAK,CAAC;AAC9C,UAAM,MAAM,WAAW,gBAAgB,EAAE,QAAQ,MAAM,WAAW,KAAK,CAAC;AAExE,WAAO,YAAY,MAAM,YAAY,cAAc,GAAG,KAAK;AAAA,EAC5D,CAAC;AAED,OAAK,uDAAuD,iBAAkB;AAC7E,UAAM,uBAAuB,8BAA8B,QAAW,WAAW;AACjF,UAAM,uBAAuB,IAAI,yBAAyB;AAC1D,UAAM,qBAAqB,qBAAqB,aAAa,EAAE,UAAU,EAAE,iBAAiB,MAAM,EAAE,CAAC;AACrG,yBAAqB,KAAK,uBAAuB,oBAAoB;AAErE,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW,oBAAoB;AAEpD,UAAM,QAAQ,KAAK;AACnB,WAAO,YAAY,MAAM,SAAS,IAAI;AAEtC,UAAM,QAAQ,0BAA0B,IAAI,KAAK,SAAS,GAAG,oBAAoB;AACjF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AAEnF,UAAM,MAAM,WAAW,OAAO,EAAE,QAAQ,MAAM,CAAC;AAC/C,WAAO,YAAY,MAAM,SAAS,KAAK,GAAG,IAAI;AAE9C,UAAM,MAAM,WAAW,QAAQ,EAAE,WAAW,KAAK,CAAC;AAClD,WAAO,YAAY,MAAM,SAAS,MAAM,GAAG,KAAK;AAEhD,UAAM,MAAM;AACZ,WAAO,YAAY,MAAM,SAAS,MAAM,GAAG,IAAI;AAAA,EAChD,CAAC;AAED,OAAK,uCAAuC,iBAAkB;AAC7D,UAAM,CAAC,IAAI,IAAI,MAAM,WAAW;AAEhC,UAAM,QAAQ,0BAA0B,IAAI,KAAK,SAAS,GAAG,oBAAoB;AACjF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AAEnF,UAAM,QAAQ,MAAM,KAAK,YAAY,WAAW,OAAO,EAAE,QAAQ,KAAK,CAAC;AACvE,UAAM,QAAQ,MAAM,KAAK,UAAU,WAAW,QAAQ,EAAE,QAAQ,KAAK,CAAC;AAEtE,UAAM,QAAQ,KAAK,YAAY;AAE/B,UAAM,OAAO,MAAM,gBAAgB;AACnC,UAAM,OAAO,MAAM,gBAAgB;AAEnC,WAAO,YAAY,KAAK,OAAO,CAAC;AAChC,WAAO,YAAY,KAAK,YAAY,SAAS,IAAI;AAEjD,UAAM,KAAK,WAAW,KAAK;AAE3B,WAAO,YAAY,KAAK,OAAO,CAAC;AAEhC,WAAO,YAAY,KAAK,OAAO,CAAC,EAAE,SAAS,KAAK,GAAG,IAAI;AACvD,WAAO,YAAY,KAAK,OAAO,CAAC,EAAE,SAAS,MAAM,GAAG,IAAI;AAExD,eAAW,SAAS,KAAK,QAAQ;AAChC,YAAM,MAAM,gBAAgB;AAAA,IAC7B;AAEA,UAAM,aAAa,KAAK,YAAY;AAEpC,UAAM,KAAK,WAAW,UAAU;AAChC,WAAO,YAAY,KAAK,OAAO,CAAC;AAEhC,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACnF,WAAO,QAAQ;AACf,UAAM,KAAK,YAAY,WAAW,QAAQ,EAAE,QAAQ,KAAK,CAAC;AAE1D,UAAM,KAAK,WAAW,UAAU;AAEhC,WAAO,YAAY,KAAK,OAAO,CAAC;AAChC,WAAO,YAAY,KAAK,OAAO,CAAC,EAAE,SAAS,MAAM,GAAG,IAAI;AAExD,UAAM,KAAK,WAAW,OAAO;AAE7B,WAAO,YAAY,KAAK,OAAO,CAAC;AAChC,WAAO,YAAY,KAAK,OAAO,CAAC,EAAE,SAAS,MAAM,GAAG,IAAI;AAExD,WAAO,QAAQ;AAEf,UAAM,KAAK,WAAW,OAAO;AAE7B,WAAO,YAAY,KAAK,OAAO,CAAC;AAChC,WAAO,YAAY,KAAK,YAAY,SAAS,IAAI;AAAA,EAClD,CAAC;AAED,OAAK,wBAAwB,iBAAkB;AAC9C,UAAMC,eAAc,IAAI,gBAAgB;AAGxC,UAAM,uBAAuB,8BAA8B,EAAE,mBAAmB,wBAAAF,0BAAwBA,sBAAqB,eAAe,6BAA6B,GAAzF,qBAA2F,GAAGE,YAAW;AACzL,UAAM,wBAAwB,qBAAqB,IAAI,kBAAkB;AAEzE,UAAM,CAAC,KAAK,IAAI,MAAM,YAAY,oBAAoB;AAEtD,UAAM,SAAS,0BAA0B,IAAI,KAAK,SAAS,GAAG,oBAAoB;AAClF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AACnF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AAEnF,UAAM,SAAS,MAAM;AACrB,UAAM,SAAS,MAAM,SAAS,QAAQ,eAAe,KAAK;AAE1D,UAAM,OAAO,WAAW,QAAQ,EAAE,QAAQ,KAAK,CAAC;AAChD,UAAM,OAAO,WAAW,QAAQ,EAAE,QAAQ,KAAK,CAAC;AAGhD,UAAM,gBAAgB,IAAI,cAAsB,kBAAkB,MAAM,YAAY,EAAE;AACtF,UAAM,qBAA6D;AAAA,MAClE,YAAY;AAAA,MACZ,yBAAyB,wBAAC,UAAU,MAAM,IAAjB;AAAA,IAC1B;AACA,IAAAA,aAAY,IAAI,MAAM,2BAA2B,kBAAkB,CAAC;AAGpE,WAAO,YAAY,MAAM,YAAY,IAAI,OAAO,EAAE;AAElD,QAAI,wBAAwB,sBAAsB,mBAAmB,cAAc,GAAG;AACtF,QAAI,wBAAwB,OAAO,wBAAwB,mBAAmB,cAAc,GAAG;AAC/F,QAAI,wBAAwB,OAAO,wBAAwB,mBAAmB,cAAc,GAAG;AAC/F,WAAO,YAAY,uBAAuB,OAAO,EAAE;AACnD,WAAO,YAAY,uBAAuB,OAAO,EAAE;AACnD,WAAO,YAAY,uBAAuB,OAAO,EAAE;AAGnD,UAAM,cAAc,MAAM;AAE1B,4BAAwB,sBAAsB,mBAAmB,cAAc,GAAG;AAClF,4BAAwB,OAAO,wBAAwB,mBAAmB,cAAc,GAAG;AAC3F,4BAAwB,OAAO,wBAAwB,mBAAmB,cAAc,GAAG;AAC3F,WAAO,YAAY,uBAAuB,OAAO,EAAE;AACnD,WAAO,YAAY,uBAAuB,OAAO,EAAE;AACnD,WAAO,YAAY,uBAAuB,OAAO,EAAE;AAInD,UAAM,SAAS,MAAM,SAAS,QAAQ,eAAe,KAAK;AAC1D,UAAM,OAAO,WAAW,QAAQ,EAAE,QAAQ,KAAK,CAAC;AAEhD,4BAAwB,sBAAsB,mBAAmB,cAAc,GAAG;AAClF,4BAAwB,OAAO,wBAAwB,mBAAmB,cAAc,GAAG;AAC3F,4BAAwB,OAAO,wBAAwB,mBAAmB,cAAc,GAAG;AAC3F,UAAM,wBAAwB,OAAO,wBAAwB,mBAAmB,cAAc,GAAG;AACjG,WAAO,YAAY,uBAAuB,OAAO,EAAE;AACnD,WAAO,YAAY,uBAAuB,OAAO,EAAE;AACnD,WAAO,YAAY,uBAAuB,OAAO,EAAE;AACnD,WAAO,YAAY,uBAAuB,OAAO,EAAE;AAEnD,IAAAA,aAAY,QAAQ;AAAA,EACrB,CAAC;AAED,OAAK,qCAAqC,iBAAkB;AAC3D,UAAMA,eAAc,IAAI,gBAAgB;AAGxC,UAAM,uBAAuB,8BAA8B,EAAE,mBAAmB,wBAAAF,0BAAwBA,sBAAqB,eAAe,6BAA6B,GAAzF,qBAA2F,GAAGE,YAAW;AACzL,UAAM,wBAAwB,qBAAqB,IAAI,kBAAkB;AAEzE,UAAM,QAAQ,MAAM,kBAAkB,sBAAsBA,YAAW;AAEvE,UAAM,SAAS,0BAA0B,IAAI,KAAK,SAAS,GAAG,oBAAoB;AAClF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AAEnF,UAAM,SAAS,MAAM;AACrB,UAAM,SAAS,MAAM,SAAS,QAAQ,eAAe,KAAK;AAE1D,UAAM,OAAO,WAAW,QAAQ,EAAE,QAAQ,KAAK,CAAC;AAChD,UAAM,OAAO,WAAW,QAAQ,EAAE,QAAQ,KAAK,CAAC;AAGhD,QAAI,SAAS;AACb,UAAM,eAAe,IAAI,QAAc;AAEvC,UAAM,gBAAgB,IAAI,cAAsB,kBAAkB,MAAM,YAAY,EAAE;AACtF,UAAM,qBAA6D;AAAA,MAClE,YAAY;AAAA,MACZ,yBAAyB,wBAAC,UAAU,MAAM,KAAK,QAAtB;AAAA,MACzB,aAAa,aAAa;AAAA,IAC3B;AACA,IAAAA,aAAY,IAAI,MAAM,2BAA2B,kBAAkB,CAAC;AAGpE,WAAO,YAAY,MAAM,YAAY,IAAI,OAAO,EAAE;AAElD,QAAI,wBAAwB,sBAAsB,mBAAmB,cAAc,GAAG;AACtF,QAAI,wBAAwB,OAAO,wBAAwB,mBAAmB,cAAc,GAAG;AAC/F,QAAI,wBAAwB,OAAO,wBAAwB,mBAAmB,cAAc,GAAG;AAC/F,WAAO,YAAY,uBAAuB,OAAO,KAAK,MAAM;AAC5D,WAAO,YAAY,uBAAuB,OAAO,KAAK,MAAM;AAC5D,WAAO,YAAY,uBAAuB,OAAO,KAAK,MAAM;AAG5D,aAAS;AACT,iBAAa,KAAK;AAElB,4BAAwB,sBAAsB,mBAAmB,cAAc,GAAG;AAClF,4BAAwB,OAAO,wBAAwB,mBAAmB,cAAc,GAAG;AAC3F,4BAAwB,OAAO,wBAAwB,mBAAmB,cAAc,GAAG;AAC3F,WAAO,YAAY,uBAAuB,OAAO,KAAK,MAAM;AAC5D,WAAO,YAAY,uBAAuB,OAAO,KAAK,MAAM;AAC5D,WAAO,YAAY,uBAAuB,OAAO,KAAK,MAAM;AAE5D,IAAAA,aAAY,QAAQ;AAAA,EACrB,CAAC;AAED,OAAK,8CAA8C,iBAAkB;AACpE,UAAMA,eAAc,IAAI,gBAAgB;AAGxC,UAAM,uBAAuB,8BAA8B,EAAE,mBAAmB,wBAAAF,0BAAwBA,sBAAqB,eAAe,6BAA6B,GAAzF,qBAA2F,GAAGE,YAAW;AACzL,UAAM,wBAAwB,qBAAqB,IAAI,kBAAkB;AAEzE,UAAM,QAAQ,MAAM,kBAAkB,sBAAsBA,YAAW;AAEvE,UAAM,SAAS,0BAA0B,IAAI,KAAK,SAAS,GAAG,oBAAoB;AAClF,UAAM,SAAS,0BAA0B,IAAI,KAAK,UAAU,GAAG,oBAAoB;AAEnF,UAAM,SAAS,MAAM;AAErB,UAAM,OAAO,WAAW,QAAQ,EAAE,QAAQ,KAAK,CAAC;AAChD,UAAM,OAAO,WAAW,QAAQ,EAAE,QAAQ,KAAK,CAAC;AAGhD,UAAM,gBAAgB,IAAI,cAAsB,kBAAkB,OAAO,SAAS,SAAS,CAAC;AAC5F,UAAM,qBAA6D;AAAA,MAClE,YAAY;AAAA,MACZ,yBAAyB,wBAAC,UAAU,MAAM,cAAc,UAAU,SAAS,KAAK,IAAvD;AAAA,IAC1B;AACA,IAAAA,aAAY,IAAI,MAAM,2BAA2B,kBAAkB,CAAC;AAGpE,WAAO,YAAY,QAAQ,OAAO,cAAc,UAAU,OAAO,QAAQ,GAAG,IAAI;AAEhF,QAAI,wBAAwB,sBAAsB,mBAAmB,cAAc,GAAG;AACtF,QAAI,wBAAwB,OAAO,wBAAwB,mBAAmB,cAAc,GAAG;AAC/F,WAAO,YAAY,uBAAuB,OAAO,SAAS,SAAS,CAAC;AACpE,WAAO,YAAY,uBAAuB,OAAO,SAAS,SAAS,CAAC;AAGpE,UAAM,OAAO,WAAW,MAAM;AAE9B,4BAAwB,sBAAsB,mBAAmB,cAAc,GAAG;AAClF,4BAAwB,OAAO,wBAAwB,mBAAmB,cAAc,GAAG;AAC3F,WAAO,YAAY,uBAAuB,OAAO,SAAS,SAAS,CAAC;AACpE,WAAO,YAAY,uBAAuB,OAAO,SAAS,SAAS,CAAC;AAEpE,IAAAA,aAAY,QAAQ;AAAA,EACrB,CAAC;AAED,0CAAwC;AACzC,CAAC;",
  "names": ["instantiationService", "group", "disposables"]
}
