{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/editor/test/browser/editorService.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { EditorActivation, IResourceEditorInput } from '../../../../../platform/editor/common/editor.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { Event } from '../../../../../base/common/event.js';\nimport { DEFAULT_EDITOR_ASSOCIATION, EditorCloseContext, EditorsOrder, IEditorCloseEvent, EditorInputWithOptions, IEditorPane, IResourceDiffEditorInput, isEditorInputWithOptions, IUntitledTextResourceEditorInput, IUntypedEditorInput, SideBySideEditor, isEditorInput, EditorInputCapabilities } from '../../../../common/editor.js';\nimport { workbenchInstantiationService, TestServiceAccessor, registerTestEditor, TestFileEditorInput, ITestInstantiationService, registerTestResourceEditor, registerTestSideBySideEditor, createEditorPart, registerTestFileEditor, TestTextFileEditor, TestSingletonFileEditorInput, workbenchTeardown } from '../../../../test/browser/workbenchTestServices.js';\nimport { EditorService } from '../../browser/editorService.js';\nimport { IEditorGroup, IEditorGroupsService, GroupDirection, GroupsArrangement } from '../../common/editorGroupsService.js';\nimport { EditorPart } from '../../../../browser/parts/editor/editorPart.js';\nimport { ACTIVE_GROUP, IBaseSaveRevertAllEditorOptions, IEditorService, PreferredGroup, SIDE_GROUP } from '../../common/editorService.js';\nimport { SyncDescriptor } from '../../../../../platform/instantiation/common/descriptors.js';\nimport { FileEditorInput } from '../../../../contrib/files/browser/editors/fileEditorInput.js';\nimport { timeout } from '../../../../../base/common/async.js';\nimport { FileOperationEvent, FileOperation } from '../../../../../platform/files/common/files.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { MockScopableContextKeyService } from '../../../../../platform/keybinding/test/common/mockKeybindingService.js';\nimport { RegisteredEditorPriority } from '../../common/editorResolverService.js';\nimport { WorkspaceTrustUriResponse } from '../../../../../platform/workspace/common/workspaceTrust.js';\nimport { SideBySideEditorInput } from '../../../../common/editor/sideBySideEditorInput.js';\nimport { EditorInput } from '../../../../common/editor/editorInput.js';\nimport { ErrorPlaceholderEditor } from '../../../../browser/parts/editor/editorPlaceholder.js';\nimport { TestConfigurationService } from '../../../../../platform/configuration/test/common/testConfigurationService.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { PLAINTEXT_LANGUAGE_ID } from '../../../../../editor/common/languages/modesRegistry.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { IEditorPaneService } from '../../common/editorPaneService.js';\n\nsuite('EditorService', () => {\n\n\tconst TEST_EDITOR_ID = 'MyTestEditorForEditorService';\n\tconst TEST_EDITOR_INPUT_ID = 'testEditorInputForEditorService';\n\n\tconst disposables = new DisposableStore();\n\n\tlet testLocalInstantiationService: ITestInstantiationService | undefined = undefined;\n\n\tsetup(() => {\n\t\tdisposables.add(registerTestEditor(TEST_EDITOR_ID, [new SyncDescriptor(TestFileEditorInput), new SyncDescriptor(TestSingletonFileEditorInput)], TEST_EDITOR_INPUT_ID));\n\t\tdisposables.add(registerTestResourceEditor());\n\t\tdisposables.add(registerTestSideBySideEditor());\n\t});\n\n\tteardown(async () => {\n\t\tif (testLocalInstantiationService) {\n\t\t\tawait workbenchTeardown(testLocalInstantiationService);\n\t\t\ttestLocalInstantiationService = undefined;\n\t\t}\n\n\t\tdisposables.clear();\n\t});\n\n\tasync function createEditorService(instantiationService: ITestInstantiationService = workbenchInstantiationService(undefined, disposables)): Promise<[EditorPart, EditorService, TestServiceAccessor]> {\n\t\tconst part = await createEditorPart(instantiationService, disposables);\n\t\tinstantiationService.stub(IEditorGroupsService, part);\n\n\t\tconst editorService = disposables.add(instantiationService.createInstance(EditorService, undefined));\n\t\tinstantiationService.stub(IEditorService, editorService);\n\n\t\ttestLocalInstantiationService = instantiationService;\n\n\t\treturn [part, editorService, instantiationService.createInstance(TestServiceAccessor)];\n\t}\n\n\tfunction createTestFileEditorInput(resource: URI, typeId: string): TestFileEditorInput {\n\t\treturn disposables.add(new TestFileEditorInput(resource, typeId));\n\t}\n\n\ttest('openEditor() - basics', async () => {\n\t\tconst [, service, accessor] = await createEditorService();\n\n\t\tawait testOpenBasics(service, accessor.editorPaneService);\n\t});\n\n\ttest('openEditor() - basics (scoped)', async () => {\n\t\tconst [part, service, accessor] = await createEditorService();\n\t\tconst scoped = service.createScoped('main', disposables);\n\t\tawait part.whenReady;\n\n\t\tawait testOpenBasics(scoped, accessor.editorPaneService);\n\t});\n\n\tasync function testOpenBasics(editorService: IEditorService, editorPaneService: IEditorPaneService) {\n\t\tlet input = createTestFileEditorInput(URI.parse('my://resource-basics'), TEST_EDITOR_INPUT_ID);\n\t\tlet otherInput = createTestFileEditorInput(URI.parse('my://resource2-basics'), TEST_EDITOR_INPUT_ID);\n\n\t\tlet activeEditorChangeEventCounter = 0;\n\t\tdisposables.add(editorService.onDidActiveEditorChange(() => {\n\t\t\tactiveEditorChangeEventCounter++;\n\t\t}));\n\n\t\tlet visibleEditorChangeEventCounter = 0;\n\t\tdisposables.add(editorService.onDidVisibleEditorsChange(() => {\n\t\t\tvisibleEditorChangeEventCounter++;\n\t\t}));\n\n\t\tlet willOpenEditorListenerCounter = 0;\n\t\tdisposables.add(editorService.onWillOpenEditor(() => {\n\t\t\twillOpenEditorListenerCounter++;\n\t\t}));\n\n\t\tlet didCloseEditorListenerCounter = 0;\n\t\tdisposables.add(editorService.onDidCloseEditor(() => {\n\t\t\tdidCloseEditorListenerCounter++;\n\t\t}));\n\n\t\tlet willInstantiateEditorPaneListenerCounter = 0;\n\t\tdisposables.add(editorPaneService.onWillInstantiateEditorPane(e => {\n\t\t\tif (e.typeId === TEST_EDITOR_ID) {\n\t\t\t\twillInstantiateEditorPaneListenerCounter++;\n\t\t\t}\n\t\t}));\n\n\t\t// Open input\n\t\tlet editor = await editorService.openEditor(input, { pinned: true });\n\n\t\tassert.strictEqual(editor?.getId(), TEST_EDITOR_ID);\n\t\tassert.strictEqual(editor, editorService.activeEditorPane);\n\t\tassert.strictEqual(1, editorService.count);\n\t\tassert.strictEqual(input, editorService.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE)[0].editor);\n\t\tassert.strictEqual(input, editorService.getEditors(EditorsOrder.SEQUENTIAL)[0].editor);\n\t\tassert.strictEqual(input, editorService.activeEditor);\n\t\tassert.strictEqual(editorService.visibleEditorPanes.length, 1);\n\t\tassert.strictEqual(editorService.visibleEditorPanes[0], editor);\n\t\tassert.ok(!editorService.activeTextEditorControl);\n\t\tassert.ok(!editorService.activeTextEditorLanguageId);\n\t\tassert.strictEqual(editorService.visibleTextEditorControls.length, 0);\n\t\tassert.strictEqual(editorService.isOpened(input), true);\n\t\tassert.strictEqual(editorService.isOpened({ resource: input.resource, typeId: input.typeId, editorId: input.editorId }), true);\n\t\tassert.strictEqual(editorService.isOpened({ resource: input.resource, typeId: input.typeId, editorId: 'unknownTypeId' }), false);\n\t\tassert.strictEqual(editorService.isOpened({ resource: input.resource, typeId: 'unknownTypeId', editorId: input.editorId }), false);\n\t\tassert.strictEqual(editorService.isOpened({ resource: input.resource, typeId: 'unknownTypeId', editorId: 'unknownTypeId' }), false);\n\t\tassert.strictEqual(editorService.isVisible(input), true);\n\t\tassert.strictEqual(editorService.isVisible(otherInput), false);\n\t\tassert.strictEqual(willOpenEditorListenerCounter, 1);\n\t\tassert.strictEqual(activeEditorChangeEventCounter, 1);\n\t\tassert.strictEqual(visibleEditorChangeEventCounter, 1);\n\t\tassert.ok(editorPaneService.didInstantiateEditorPane(TEST_EDITOR_ID));\n\t\tassert.strictEqual(willInstantiateEditorPaneListenerCounter, 1);\n\n\t\t// Close input\n\t\tawait editor?.group.closeEditor(input);\n\n\t\tassert.strictEqual(0, editorService.count);\n\t\tassert.strictEqual(0, editorService.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE).length);\n\t\tassert.strictEqual(0, editorService.getEditors(EditorsOrder.SEQUENTIAL).length);\n\t\tassert.strictEqual(didCloseEditorListenerCounter, 1);\n\t\tassert.strictEqual(activeEditorChangeEventCounter, 2);\n\t\tassert.strictEqual(visibleEditorChangeEventCounter, 2);\n\t\tassert.ok(input.gotDisposed);\n\n\t\t// Open again 2 inputs (disposed editors are ignored!)\n\t\tawait editorService.openEditor(input, { pinned: true });\n\t\tassert.strictEqual(0, editorService.count);\n\n\t\t// Open again 2 inputs (recreate because disposed)\n\t\tinput = createTestFileEditorInput(URI.parse('my://resource-basics'), TEST_EDITOR_INPUT_ID);\n\t\totherInput = createTestFileEditorInput(URI.parse('my://resource2-basics'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait editorService.openEditor(input, { pinned: true });\n\t\teditor = await editorService.openEditor(otherInput, { pinned: true });\n\n\t\tassert.strictEqual(2, editorService.count);\n\t\tassert.strictEqual(otherInput, editorService.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE)[0].editor);\n\t\tassert.strictEqual(input, editorService.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE)[1].editor);\n\t\tassert.strictEqual(input, editorService.getEditors(EditorsOrder.SEQUENTIAL)[0].editor);\n\t\tassert.strictEqual(otherInput, editorService.getEditors(EditorsOrder.SEQUENTIAL)[1].editor);\n\t\tassert.strictEqual(editorService.visibleEditorPanes.length, 1);\n\t\tassert.strictEqual(editorService.isOpened(input), true);\n\t\tassert.strictEqual(editorService.isOpened({ resource: input.resource, typeId: input.typeId, editorId: input.editorId }), true);\n\t\tassert.strictEqual(editorService.isOpened(otherInput), true);\n\t\tassert.strictEqual(editorService.isOpened({ resource: otherInput.resource, typeId: otherInput.typeId, editorId: otherInput.editorId }), true);\n\n\t\tassert.strictEqual(activeEditorChangeEventCounter, 4);\n\t\tassert.strictEqual(willOpenEditorListenerCounter, 3);\n\t\tassert.strictEqual(visibleEditorChangeEventCounter, 4);\n\n\t\tconst stickyInput = createTestFileEditorInput(URI.parse('my://resource3-basics'), TEST_EDITOR_INPUT_ID);\n\t\tawait editorService.openEditor(stickyInput, { sticky: true });\n\n\t\tassert.strictEqual(3, editorService.count);\n\n\t\tconst allSequentialEditors = editorService.getEditors(EditorsOrder.SEQUENTIAL);\n\t\tassert.strictEqual(allSequentialEditors.length, 3);\n\t\tassert.strictEqual(stickyInput, allSequentialEditors[0].editor);\n\t\tassert.strictEqual(input, allSequentialEditors[1].editor);\n\t\tassert.strictEqual(otherInput, allSequentialEditors[2].editor);\n\n\t\tconst sequentialEditorsExcludingSticky = editorService.getEditors(EditorsOrder.SEQUENTIAL, { excludeSticky: true });\n\t\tassert.strictEqual(sequentialEditorsExcludingSticky.length, 2);\n\t\tassert.strictEqual(input, sequentialEditorsExcludingSticky[0].editor);\n\t\tassert.strictEqual(otherInput, sequentialEditorsExcludingSticky[1].editor);\n\n\t\tconst mruEditorsExcludingSticky = editorService.getEditors(EditorsOrder.MOST_RECENTLY_ACTIVE, { excludeSticky: true });\n\t\tassert.strictEqual(mruEditorsExcludingSticky.length, 2);\n\t\tassert.strictEqual(input, sequentialEditorsExcludingSticky[0].editor);\n\t\tassert.strictEqual(otherInput, sequentialEditorsExcludingSticky[1].editor);\n\t}\n\n\ttest('openEditor() - multiple calls are cancelled and indicated as such', async () => {\n\t\tconst [, service] = await createEditorService();\n\n\t\tconst input = createTestFileEditorInput(URI.parse('my://resource-basics'), TEST_EDITOR_INPUT_ID);\n\t\tconst otherInput = createTestFileEditorInput(URI.parse('my://resource2-basics'), TEST_EDITOR_INPUT_ID);\n\n\t\tlet activeEditorChangeEventCounter = 0;\n\t\tconst activeEditorChangeListener = service.onDidActiveEditorChange(() => {\n\t\t\tactiveEditorChangeEventCounter++;\n\t\t});\n\n\t\tlet visibleEditorChangeEventCounter = 0;\n\t\tconst visibleEditorChangeListener = service.onDidVisibleEditorsChange(() => {\n\t\t\tvisibleEditorChangeEventCounter++;\n\t\t});\n\n\t\tconst editorP1 = service.openEditor(input, { pinned: true });\n\t\tconst editorP2 = service.openEditor(otherInput, { pinned: true });\n\n\t\tconst editor1 = await editorP1;\n\t\tassert.strictEqual(editor1, undefined);\n\n\t\tconst editor2 = await editorP2;\n\t\tassert.strictEqual(editor2?.input, otherInput);\n\n\t\tassert.strictEqual(activeEditorChangeEventCounter, 1);\n\t\tassert.strictEqual(visibleEditorChangeEventCounter, 1);\n\n\t\tactiveEditorChangeListener.dispose();\n\t\tvisibleEditorChangeListener.dispose();\n\t});\n\n\ttest('openEditor() - same input does not cancel previous one - https://github.com/microsoft/vscode/issues/136684', async () => {\n\t\tconst [, service] = await createEditorService();\n\n\t\tlet input = createTestFileEditorInput(URI.parse('my://resource-basics'), TEST_EDITOR_INPUT_ID);\n\n\t\tlet editorP1 = service.openEditor(input, { pinned: true });\n\t\tlet editorP2 = service.openEditor(input, { pinned: true });\n\n\t\tlet editor1 = await editorP1;\n\t\tassert.strictEqual(editor1?.input, input);\n\n\t\tlet editor2 = await editorP2;\n\t\tassert.strictEqual(editor2?.input, input);\n\n\t\tassert.ok(editor2.group);\n\t\tawait editor2.group.closeAllEditors();\n\n\t\tinput = createTestFileEditorInput(URI.parse('my://resource-basics'), TEST_EDITOR_INPUT_ID);\n\t\tconst inputSame = createTestFileEditorInput(URI.parse('my://resource-basics'), TEST_EDITOR_INPUT_ID);\n\n\t\teditorP1 = service.openEditor(input, { pinned: true });\n\t\teditorP2 = service.openEditor(inputSame, { pinned: true });\n\n\t\teditor1 = await editorP1;\n\t\tassert.strictEqual(editor1?.input, input);\n\n\t\teditor2 = await editorP2;\n\t\tassert.strictEqual(editor2?.input, input);\n\t});\n\n\ttest('openEditor() - singleton typed editors reveal instead of split', async () => {\n\t\tconst [part, service] = await createEditorService();\n\n\t\tconst input1 = disposables.add(new TestSingletonFileEditorInput(URI.parse('my://resource-basics1'), TEST_EDITOR_INPUT_ID));\n\t\tconst input2 = disposables.add(new TestSingletonFileEditorInput(URI.parse('my://resource-basics2'), TEST_EDITOR_INPUT_ID));\n\n\t\tconst input1Group = (await service.openEditor(input1, { pinned: true }))?.group;\n\t\tconst input2Group = (await service.openEditor(input2, { pinned: true }, SIDE_GROUP))?.group;\n\n\t\tassert.strictEqual(part.activeGroup, input2Group);\n\n\t\tawait service.openEditor(input1, { pinned: true });\n\n\t\tassert.strictEqual(part.activeGroup, input1Group);\n\t});\n\n\ttest('openEditor() - locked groups', async () => {\n\t\tdisposables.add(registerTestFileEditor());\n\n\t\tconst [part, service, accessor] = await createEditorService();\n\n\t\tdisposables.add(accessor.editorResolverService.registerEditor(\n\t\t\t'*.editor-service-locked-group-tests',\n\t\t\t{ id: TEST_EDITOR_INPUT_ID, label: 'Label', priority: RegisteredEditorPriority.exclusive },\n\t\t\t{},\n\t\t\t{\n\t\t\t\tcreateEditorInput: editor => ({ editor: createTestFileEditorInput(editor.resource, TEST_EDITOR_INPUT_ID) })\n\t\t\t}\n\t\t));\n\n\t\tconst input1: IResourceEditorInput = { resource: URI.parse('file://resource-basics.editor-service-locked-group-tests'), options: { pinned: true } };\n\t\tconst input2: IResourceEditorInput = { resource: URI.parse('file://resource2-basics.editor-service-locked-group-tests'), options: { pinned: true } };\n\t\tconst input3: IResourceEditorInput = { resource: URI.parse('file://resource3-basics.editor-service-locked-group-tests'), options: { pinned: true } };\n\t\tconst input4: IResourceEditorInput = { resource: URI.parse('file://resource4-basics.editor-service-locked-group-tests'), options: { pinned: true } };\n\t\tconst input5: IResourceEditorInput = { resource: URI.parse('file://resource5-basics.editor-service-locked-group-tests'), options: { pinned: true } };\n\t\tconst input6: IResourceEditorInput = { resource: URI.parse('file://resource6-basics.editor-service-locked-group-tests'), options: { pinned: true } };\n\t\tconst input7: IResourceEditorInput = { resource: URI.parse('file://resource7-basics.editor-service-locked-group-tests'), options: { pinned: true } };\n\n\t\tconst editor1 = await service.openEditor(input1, { pinned: true });\n\t\tconst editor2 = await service.openEditor(input2, { pinned: true }, SIDE_GROUP);\n\n\t\tconst group1 = editor1?.group;\n\t\tassert.strictEqual(group1?.count, 1);\n\n\t\tconst group2 = editor2?.group;\n\t\tassert.strictEqual(group2?.count, 1);\n\n\t\tgroup2.lock(true);\n\t\tpart.activateGroup(group2.id);\n\n\t\t// Will open in group 1 because group 2 is locked\n\t\tawait service.openEditor(input3, { pinned: true });\n\n\t\tassert.strictEqual(group1.count, 2);\n\t\tassert.strictEqual(group1.activeEditor?.resource?.toString(), input3.resource.toString());\n\t\tassert.strictEqual(group2.count, 1);\n\n\t\t// Will open in group 2 because group was provided\n\t\tawait service.openEditor(input3, { pinned: true }, group2.id);\n\n\t\tassert.strictEqual(group1.count, 2);\n\t\tassert.strictEqual(group2.count, 2);\n\t\tassert.strictEqual(group2.activeEditor?.resource?.toString(), input3.resource.toString());\n\n\t\t// Will reveal editor in group 2 because it is contained\n\t\tawait service.openEditor(input2, { pinned: true }, group2);\n\t\tawait service.openEditor(input2, { pinned: true }, ACTIVE_GROUP);\n\n\t\tassert.strictEqual(group1.count, 2);\n\t\tassert.strictEqual(group2.count, 2);\n\t\tassert.strictEqual(group2.activeEditor?.resource?.toString(), input2.resource.toString());\n\n\t\t// Will open a new group because side group is locked\n\t\tpart.activateGroup(group1.id);\n\t\tconst editor3 = await service.openEditor(input4, { pinned: true }, SIDE_GROUP);\n\t\tassert.strictEqual(part.count, 3);\n\n\t\tconst group3 = editor3?.group;\n\t\tassert.strictEqual(group3?.count, 1);\n\n\t\t// Will reveal editor in group 2 because it is contained\n\t\tawait service.openEditor(input3, { pinned: true }, group2);\n\t\tpart.activateGroup(group1.id);\n\t\tawait service.openEditor(input3, { pinned: true }, SIDE_GROUP);\n\t\tassert.strictEqual(part.count, 3);\n\n\t\t// Will open a new group if all groups are locked\n\t\tgroup1.lock(true);\n\t\tgroup2.lock(true);\n\t\tgroup3.lock(true);\n\n\t\tpart.activateGroup(group1.id);\n\t\tconst editor5 = await service.openEditor(input5, { pinned: true });\n\t\tconst group4 = editor5?.group;\n\t\tassert.strictEqual(group4?.count, 1);\n\t\tassert.strictEqual(group4.activeEditor?.resource?.toString(), input5.resource.toString());\n\t\tassert.strictEqual(part.count, 4);\n\n\t\t// Will open editor in most recently non-locked group\n\t\tgroup1.lock(false);\n\t\tgroup2.lock(false);\n\t\tgroup3.lock(false);\n\t\tgroup4.lock(false);\n\n\t\tpart.activateGroup(group3.id);\n\t\tpart.activateGroup(group2.id);\n\t\tpart.activateGroup(group4.id);\n\t\tgroup4.lock(true);\n\t\tgroup2.lock(true);\n\n\t\tawait service.openEditor(input6, { pinned: true });\n\t\tassert.strictEqual(part.count, 4);\n\t\tassert.strictEqual(part.activeGroup, group3);\n\t\tassert.strictEqual(group3.activeEditor?.resource?.toString(), input6.resource.toString());\n\n\t\t// Will find the right group where editor is already opened in when all groups are locked\n\t\tgroup1.lock(true);\n\t\tgroup2.lock(true);\n\t\tgroup3.lock(true);\n\t\tgroup4.lock(true);\n\n\t\tpart.activateGroup(group1.id);\n\n\t\tawait service.openEditor(input6, { pinned: true });\n\n\t\tassert.strictEqual(part.count, 4);\n\t\tassert.strictEqual(part.activeGroup, group3);\n\t\tassert.strictEqual(group3.activeEditor?.resource?.toString(), input6.resource.toString());\n\n\t\tassert.strictEqual(part.activeGroup, group3);\n\t\tassert.strictEqual(group3.activeEditor?.resource?.toString(), input6.resource.toString());\n\n\t\tpart.activateGroup(group1.id);\n\n\t\tawait service.openEditor(input6, { pinned: true });\n\n\t\tassert.strictEqual(part.count, 4);\n\t\tassert.strictEqual(part.activeGroup, group3);\n\t\tassert.strictEqual(group3.activeEditor?.resource?.toString(), input6.resource.toString());\n\n\t\t// Will reveal an opened editor in the active locked group\n\t\tawait service.openEditor(input7, { pinned: true }, group3);\n\t\tawait service.openEditor(input6, { pinned: true });\n\n\t\tassert.strictEqual(part.count, 4);\n\t\tassert.strictEqual(part.activeGroup, group3);\n\t\tassert.strictEqual(group3.activeEditor?.resource?.toString(), input6.resource.toString());\n\t});\n\n\ttest('locked groups - workbench.editor.revealIfOpen', async () => {\n\t\tconst instantiationService = workbenchInstantiationService(undefined, disposables);\n\t\tconst configurationService = new TestConfigurationService();\n\t\tawait configurationService.setUserConfiguration('workbench', { 'editor': { 'revealIfOpen': true } });\n\t\tinstantiationService.stub(IConfigurationService, configurationService);\n\n\t\tdisposables.add(registerTestFileEditor());\n\n\t\tconst [part, service, accessor] = await createEditorService(instantiationService);\n\n\t\tdisposables.add(accessor.editorResolverService.registerEditor(\n\t\t\t'*.editor-service-locked-group-tests',\n\t\t\t{ id: TEST_EDITOR_INPUT_ID, label: 'Label', priority: RegisteredEditorPriority.exclusive },\n\t\t\t{},\n\t\t\t{\n\t\t\t\tcreateEditorInput: editor => ({ editor: createTestFileEditorInput(editor.resource, TEST_EDITOR_INPUT_ID) })\n\t\t\t}\n\t\t));\n\n\t\tconst rootGroup = part.activeGroup;\n\t\tconst rightGroup = part.addGroup(rootGroup, GroupDirection.RIGHT);\n\n\t\tpart.activateGroup(rootGroup);\n\n\t\tconst input1: IResourceEditorInput = { resource: URI.parse('file://resource-basics.editor-service-locked-group-tests'), options: { pinned: true } };\n\t\tconst input2: IResourceEditorInput = { resource: URI.parse('file://resource2-basics.editor-service-locked-group-tests'), options: { pinned: true } };\n\t\tconst input3: IResourceEditorInput = { resource: URI.parse('file://resource3-basics.editor-service-locked-group-tests'), options: { pinned: true } };\n\t\tconst input4: IResourceEditorInput = { resource: URI.parse('file://resource4-basics.editor-service-locked-group-tests'), options: { pinned: true } };\n\n\t\tawait service.openEditor(input1, rootGroup.id);\n\t\tawait service.openEditor(input2, rootGroup.id);\n\n\t\tassert.strictEqual(part.activeGroup.id, rootGroup.id);\n\n\t\tawait service.openEditor(input3, rightGroup.id);\n\t\tawait service.openEditor(input4, rightGroup.id);\n\n\t\tassert.strictEqual(part.activeGroup.id, rightGroup.id);\n\n\t\trootGroup.lock(true);\n\t\trightGroup.lock(true);\n\n\t\tawait service.openEditor(input1);\n\n\t\tassert.strictEqual(part.activeGroup.id, rootGroup.id);\n\t\tassert.strictEqual(part.activeGroup.activeEditor?.resource?.toString(), input1.resource.toString());\n\n\t\tawait service.openEditor(input3);\n\n\t\tassert.strictEqual(part.activeGroup.id, rightGroup.id);\n\t\tassert.strictEqual(part.activeGroup.activeEditor?.resource?.toString(), input3.resource.toString());\n\n\t\tassert.strictEqual(part.groups.length, 2);\n\t});\n\n\ttest('locked groups - revealIfVisible', async () => {\n\t\tdisposables.add(registerTestFileEditor());\n\n\t\tconst [part, service, accessor] = await createEditorService();\n\n\t\tdisposables.add(accessor.editorResolverService.registerEditor(\n\t\t\t'*.editor-service-locked-group-tests',\n\t\t\t{ id: TEST_EDITOR_INPUT_ID, label: 'Label', priority: RegisteredEditorPriority.exclusive },\n\t\t\t{},\n\t\t\t{\n\t\t\t\tcreateEditorInput: editor => ({ editor: createTestFileEditorInput(editor.resource, TEST_EDITOR_INPUT_ID) })\n\t\t\t}\n\t\t));\n\n\t\tconst rootGroup = part.activeGroup;\n\t\tconst rightGroup = part.addGroup(rootGroup, GroupDirection.RIGHT);\n\n\t\tpart.activateGroup(rootGroup);\n\n\t\tconst input1: IResourceEditorInput = { resource: URI.parse('file://resource-basics.editor-service-locked-group-tests'), options: { pinned: true } };\n\t\tconst input2: IResourceEditorInput = { resource: URI.parse('file://resource2-basics.editor-service-locked-group-tests'), options: { pinned: true } };\n\t\tconst input3: IResourceEditorInput = { resource: URI.parse('file://resource3-basics.editor-service-locked-group-tests'), options: { pinned: true } };\n\t\tconst input4: IResourceEditorInput = { resource: URI.parse('file://resource4-basics.editor-service-locked-group-tests'), options: { pinned: true } };\n\n\t\tawait service.openEditor(input1, rootGroup.id);\n\t\tawait service.openEditor(input2, rootGroup.id);\n\n\t\tassert.strictEqual(part.activeGroup.id, rootGroup.id);\n\n\t\tawait service.openEditor(input3, rightGroup.id);\n\t\tawait service.openEditor(input4, rightGroup.id);\n\n\t\tassert.strictEqual(part.activeGroup.id, rightGroup.id);\n\n\t\trootGroup.lock(true);\n\t\trightGroup.lock(true);\n\n\t\tawait service.openEditor({ ...input2, options: { ...input2.options, revealIfVisible: true } });\n\n\t\tassert.strictEqual(part.activeGroup.id, rootGroup.id);\n\t\tassert.strictEqual(part.activeGroup.activeEditor?.resource?.toString(), input2.resource.toString());\n\n\t\tawait service.openEditor({ ...input4, options: { ...input4.options, revealIfVisible: true } });\n\n\t\tassert.strictEqual(part.activeGroup.id, rightGroup.id);\n\t\tassert.strictEqual(part.activeGroup.activeEditor?.resource?.toString(), input4.resource.toString());\n\n\t\tassert.strictEqual(part.groups.length, 2);\n\t});\n\n\ttest('locked groups - revealIfOpened', async () => {\n\t\tdisposables.add(registerTestFileEditor());\n\n\t\tconst [part, service, accessor] = await createEditorService();\n\n\t\tdisposables.add(accessor.editorResolverService.registerEditor(\n\t\t\t'*.editor-service-locked-group-tests',\n\t\t\t{ id: TEST_EDITOR_INPUT_ID, label: 'Label', priority: RegisteredEditorPriority.exclusive },\n\t\t\t{},\n\t\t\t{\n\t\t\t\tcreateEditorInput: editor => ({ editor: createTestFileEditorInput(editor.resource, TEST_EDITOR_INPUT_ID) })\n\t\t\t}\n\t\t));\n\n\t\tconst rootGroup = part.activeGroup;\n\t\tconst rightGroup = part.addGroup(rootGroup, GroupDirection.RIGHT);\n\n\t\tpart.activateGroup(rootGroup);\n\n\t\tconst input1: IResourceEditorInput = { resource: URI.parse('file://resource-basics.editor-service-locked-group-tests'), options: { pinned: true } };\n\t\tconst input2: IResourceEditorInput = { resource: URI.parse('file://resource2-basics.editor-service-locked-group-tests'), options: { pinned: true } };\n\t\tconst input3: IResourceEditorInput = { resource: URI.parse('file://resource3-basics.editor-service-locked-group-tests'), options: { pinned: true } };\n\t\tconst input4: IResourceEditorInput = { resource: URI.parse('file://resource4-basics.editor-service-locked-group-tests'), options: { pinned: true } };\n\n\t\tawait service.openEditor(input1, rootGroup.id);\n\t\tawait service.openEditor(input2, rootGroup.id);\n\n\t\tassert.strictEqual(part.activeGroup.id, rootGroup.id);\n\n\t\tawait service.openEditor(input3, rightGroup.id);\n\t\tawait service.openEditor(input4, rightGroup.id);\n\n\t\tassert.strictEqual(part.activeGroup.id, rightGroup.id);\n\n\t\trootGroup.lock(true);\n\t\trightGroup.lock(true);\n\n\t\tawait service.openEditor({ ...input1, options: { ...input1.options, revealIfOpened: true } });\n\n\t\tassert.strictEqual(part.activeGroup.id, rootGroup.id);\n\t\tassert.strictEqual(part.activeGroup.activeEditor?.resource?.toString(), input1.resource.toString());\n\n\t\tawait service.openEditor({ ...input3, options: { ...input3.options, revealIfOpened: true } });\n\n\t\tassert.strictEqual(part.activeGroup.id, rightGroup.id);\n\t\tassert.strictEqual(part.activeGroup.activeEditor?.resource?.toString(), input3.resource.toString());\n\n\t\tassert.strictEqual(part.groups.length, 2);\n\t});\n\n\ttest('openEditor() - untyped, typed', () => {\n\t\treturn testOpenEditors(false);\n\t});\n\n\ttest('openEditors() - untyped, typed', () => {\n\t\treturn testOpenEditors(true);\n\t});\n\n\tasync function testOpenEditors(useOpenEditors: boolean) {\n\t\tdisposables.add(registerTestFileEditor());\n\n\t\tconst [part, service, accessor] = await createEditorService();\n\n\t\tlet rootGroup = part.activeGroup;\n\n\t\tlet editorFactoryCalled = 0;\n\t\tlet untitledEditorFactoryCalled = 0;\n\t\tlet diffEditorFactoryCalled = 0;\n\n\t\tlet lastEditorFactoryEditor: IResourceEditorInput | undefined = undefined;\n\t\tlet lastUntitledEditorFactoryEditor: IUntitledTextResourceEditorInput | undefined = undefined;\n\t\tlet lastDiffEditorFactoryEditor: IResourceDiffEditorInput | undefined = undefined;\n\n\t\tdisposables.add(accessor.editorResolverService.registerEditor(\n\t\t\t'*.editor-service-override-tests',\n\t\t\t{ id: TEST_EDITOR_INPUT_ID, label: 'Label', priority: RegisteredEditorPriority.exclusive },\n\t\t\t{},\n\t\t\t{\n\t\t\t\tcreateEditorInput: editor => {\n\t\t\t\t\teditorFactoryCalled++;\n\t\t\t\t\tlastEditorFactoryEditor = editor;\n\n\t\t\t\t\treturn { editor: createTestFileEditorInput(editor.resource, TEST_EDITOR_INPUT_ID) };\n\t\t\t\t},\n\t\t\t\tcreateUntitledEditorInput: untitledEditor => {\n\t\t\t\t\tuntitledEditorFactoryCalled++;\n\t\t\t\t\tlastUntitledEditorFactoryEditor = untitledEditor;\n\n\t\t\t\t\treturn { editor: createTestFileEditorInput(untitledEditor.resource ?? URI.parse(`untitled://my-untitled-editor-${untitledEditorFactoryCalled}`), TEST_EDITOR_INPUT_ID) };\n\t\t\t\t},\n\t\t\t\tcreateDiffEditorInput: diffEditor => {\n\t\t\t\t\tdiffEditorFactoryCalled++;\n\t\t\t\t\tlastDiffEditorFactoryEditor = diffEditor;\n\n\t\t\t\t\treturn { editor: createTestFileEditorInput(URI.file(`diff-editor-${diffEditorFactoryCalled}`), TEST_EDITOR_INPUT_ID) };\n\t\t\t\t}\n\t\t\t}\n\t\t));\n\n\t\tasync function resetTestState() {\n\t\t\teditorFactoryCalled = 0;\n\t\t\tuntitledEditorFactoryCalled = 0;\n\t\t\tdiffEditorFactoryCalled = 0;\n\n\t\t\tlastEditorFactoryEditor = undefined;\n\t\t\tlastUntitledEditorFactoryEditor = undefined;\n\t\t\tlastDiffEditorFactoryEditor = undefined;\n\n\t\t\tawait workbenchTeardown(accessor.instantiationService);\n\n\t\t\trootGroup = part.activeGroup;\n\t\t}\n\n\t\tasync function openEditor(editor: EditorInputWithOptions | IUntypedEditorInput, group?: PreferredGroup): Promise<IEditorPane | undefined> {\n\t\t\tif (useOpenEditors) {\n\t\t\t\t// The type safety isn't super good here, so we assist with runtime checks\n\t\t\t\t// Open editors expects untyped or editor input with options, you cannot pass a typed editor input\n\t\t\t\t// without options\n\t\t\t\tif (!isEditorInputWithOptions(editor) && isEditorInput(editor)) {\n\t\t\t\t\teditor = { editor: editor, options: {} };\n\t\t\t\t}\n\t\t\t\tconst panes = await service.openEditors([editor], group);\n\t\t\t\treturn panes[0];\n\t\t\t}\n\n\t\t\tif (isEditorInputWithOptions(editor)) {\n\t\t\t\treturn service.openEditor(editor.editor, editor.options, group);\n\t\t\t}\n\n\t\t\treturn service.openEditor(editor, group);\n\t\t}\n\n\t\t// untyped\n\t\t{\n\t\t\t// untyped resource editor, no options, no group\n\t\t\t{\n\t\t\t\tconst untypedEditor: IResourceEditorInput = { resource: URI.file('file.editor-service-override-tests') };\n\t\t\t\tconst pane = await openEditor(untypedEditor);\n\t\t\t\tlet typedEditor = pane?.input;\n\n\t\t\t\tassert.strictEqual(pane?.group, rootGroup);\n\t\t\t\tassert.ok(typedEditor instanceof TestFileEditorInput);\n\t\t\t\tassert.strictEqual(typedEditor.resource.toString(), untypedEditor.resource.toString());\n\n\t\t\t\tassert.strictEqual(editorFactoryCalled, 1);\n\t\t\t\tassert.strictEqual(untitledEditorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(diffEditorFactoryCalled, 0);\n\n\t\t\t\tassert.strictEqual(lastEditorFactoryEditor, untypedEditor);\n\t\t\t\tassert.ok(!lastUntitledEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastDiffEditorFactoryEditor);\n\n\t\t\t\t// opening the same editor should not create\n\t\t\t\t// a new editor input\n\t\t\t\tawait openEditor(untypedEditor);\n\t\t\t\tassert.strictEqual(pane?.group.activeEditor, typedEditor);\n\n\t\t\t\t// replaceEditors should work too\n\t\t\t\tconst untypedEditorReplacement: IResourceEditorInput = { resource: URI.file('file-replaced.editor-service-override-tests') };\n\t\t\t\tawait service.replaceEditors([{\n\t\t\t\t\teditor: typedEditor,\n\t\t\t\t\treplacement: untypedEditorReplacement\n\t\t\t\t}], rootGroup);\n\n\t\t\t\ttypedEditor = rootGroup.activeEditor!;\n\n\t\t\t\tassert.ok(typedEditor instanceof TestFileEditorInput);\n\t\t\t\tassert.strictEqual(typedEditor?.resource?.toString(), untypedEditorReplacement.resource.toString());\n\n\t\t\t\tassert.strictEqual(editorFactoryCalled, 3);\n\t\t\t\tassert.strictEqual(untitledEditorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(diffEditorFactoryCalled, 0);\n\n\t\t\t\tassert.strictEqual(lastEditorFactoryEditor, untypedEditorReplacement);\n\t\t\t\tassert.ok(!lastUntitledEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastDiffEditorFactoryEditor);\n\n\t\t\t\tawait resetTestState();\n\t\t\t}\n\n\t\t\t// untyped resource editor, options (override text), no group\n\t\t\t{\n\t\t\t\tconst untypedEditor: IResourceEditorInput = { resource: URI.file('file.editor-service-override-tests'), options: { override: DEFAULT_EDITOR_ASSOCIATION.id } };\n\t\t\t\tconst pane = await openEditor(untypedEditor);\n\t\t\t\tconst typedEditor = pane?.input;\n\n\t\t\t\tassert.strictEqual(pane?.group, rootGroup);\n\t\t\t\tassert.ok(typedEditor instanceof FileEditorInput);\n\t\t\t\tassert.strictEqual(typedEditor.resource.toString(), untypedEditor.resource.toString());\n\n\t\t\t\tassert.strictEqual(editorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(untitledEditorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(diffEditorFactoryCalled, 0);\n\n\t\t\t\tassert.ok(!lastEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastUntitledEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastDiffEditorFactoryEditor);\n\n\t\t\t\t// opening the same editor should not create\n\t\t\t\t// a new editor input\n\t\t\t\tawait openEditor(untypedEditor);\n\t\t\t\tassert.strictEqual(pane?.group.activeEditor, typedEditor);\n\n\t\t\t\tawait resetTestState();\n\t\t\t}\n\n\t\t\t// untyped resource editor, options (override text, sticky: true, preserveFocus: true), no group\n\t\t\t{\n\t\t\t\tconst untypedEditor: IResourceEditorInput = { resource: URI.file('file.editor-service-override-tests'), options: { sticky: true, preserveFocus: true, override: DEFAULT_EDITOR_ASSOCIATION.id } };\n\t\t\t\tconst pane = await openEditor(untypedEditor);\n\n\t\t\t\tassert.strictEqual(pane?.group, rootGroup);\n\t\t\t\tassert.ok(pane.input instanceof FileEditorInput);\n\t\t\t\tassert.strictEqual(pane.input.resource.toString(), untypedEditor.resource.toString());\n\t\t\t\tassert.strictEqual(pane.group.isSticky(pane.input), true);\n\n\t\t\t\tassert.strictEqual(editorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(untitledEditorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(diffEditorFactoryCalled, 0);\n\n\t\t\t\tassert.ok(!lastEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastUntitledEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastDiffEditorFactoryEditor);\n\n\t\t\t\tawait resetTestState();\n\t\t\t\tawait part.activeGroup.closeEditor(pane.input);\n\t\t\t}\n\n\t\t\t// untyped resource editor, options (override default), no group\n\t\t\t{\n\t\t\t\tconst untypedEditor: IResourceEditorInput = { resource: URI.file('file.editor-service-override-tests'), options: { override: DEFAULT_EDITOR_ASSOCIATION.id } };\n\t\t\t\tconst pane = await openEditor(untypedEditor);\n\n\t\t\t\tassert.strictEqual(pane?.group, rootGroup);\n\t\t\t\tassert.ok(pane.input instanceof FileEditorInput);\n\t\t\t\tassert.strictEqual(pane.input.resource.toString(), untypedEditor.resource.toString());\n\n\t\t\t\tassert.strictEqual(editorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(untitledEditorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(diffEditorFactoryCalled, 0);\n\n\t\t\t\tassert.ok(!lastEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastUntitledEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastDiffEditorFactoryEditor);\n\n\t\t\t\tawait resetTestState();\n\t\t\t}\n\n\t\t\t// untyped resource editor, options (override: TEST_EDITOR_INPUT_ID), no group\n\t\t\t{\n\t\t\t\tconst untypedEditor: IResourceEditorInput = { resource: URI.file('file.editor-service-override-tests'), options: { override: TEST_EDITOR_INPUT_ID } };\n\t\t\t\tconst pane = await openEditor(untypedEditor);\n\n\t\t\t\tassert.strictEqual(pane?.group, rootGroup);\n\t\t\t\tassert.ok(pane.input instanceof TestFileEditorInput);\n\t\t\t\tassert.strictEqual(pane.input.resource.toString(), untypedEditor.resource.toString());\n\n\t\t\t\tassert.strictEqual(editorFactoryCalled, 1);\n\t\t\t\tassert.strictEqual(untitledEditorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(diffEditorFactoryCalled, 0);\n\n\t\t\t\tassert.strictEqual(lastEditorFactoryEditor, untypedEditor);\n\t\t\t\tassert.ok(!lastUntitledEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastDiffEditorFactoryEditor);\n\n\t\t\t\tawait resetTestState();\n\t\t\t}\n\n\t\t\t// untyped resource editor, options (sticky: true, preserveFocus: true), no group\n\t\t\t{\n\t\t\t\tconst untypedEditor: IResourceEditorInput = { resource: URI.file('file.editor-service-override-tests'), options: { sticky: true, preserveFocus: true } };\n\t\t\t\tconst pane = await openEditor(untypedEditor);\n\n\t\t\t\tassert.strictEqual(pane?.group, rootGroup);\n\t\t\t\tassert.ok(pane.input instanceof TestFileEditorInput);\n\t\t\t\tassert.strictEqual(pane.input.resource.toString(), untypedEditor.resource.toString());\n\t\t\t\tassert.strictEqual(pane.group.isSticky(pane.input), true);\n\n\t\t\t\tassert.strictEqual(editorFactoryCalled, 1);\n\t\t\t\tassert.strictEqual(untitledEditorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(diffEditorFactoryCalled, 0);\n\n\t\t\t\tassert.strictEqual((lastEditorFactoryEditor as IResourceEditorInput).resource.toString(), untypedEditor.resource.toString());\n\t\t\t\tassert.strictEqual((lastEditorFactoryEditor as IResourceEditorInput).options?.preserveFocus, true);\n\t\t\t\tassert.ok(!lastUntitledEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastDiffEditorFactoryEditor);\n\n\t\t\t\tawait resetTestState();\n\t\t\t\tawait part.activeGroup.closeEditor(pane.input);\n\t\t\t}\n\n\t\t\t// untyped resource editor, options (override: TEST_EDITOR_INPUT_ID, sticky: true, preserveFocus: true), no group\n\t\t\t{\n\t\t\t\tconst untypedEditor: IResourceEditorInput = { resource: URI.file('file.editor-service-override-tests'), options: { sticky: true, preserveFocus: true, override: TEST_EDITOR_INPUT_ID } };\n\t\t\t\tconst pane = await openEditor(untypedEditor);\n\n\t\t\t\tassert.strictEqual(pane?.group, rootGroup);\n\t\t\t\tassert.ok(pane.input instanceof TestFileEditorInput);\n\t\t\t\tassert.strictEqual(pane.input.resource.toString(), untypedEditor.resource.toString());\n\t\t\t\tassert.strictEqual(pane.group.isSticky(pane.input), true);\n\n\t\t\t\tassert.strictEqual(editorFactoryCalled, 1);\n\t\t\t\tassert.strictEqual(untitledEditorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(diffEditorFactoryCalled, 0);\n\n\t\t\t\tassert.strictEqual((lastEditorFactoryEditor as IResourceEditorInput).resource.toString(), untypedEditor.resource.toString());\n\t\t\t\tassert.strictEqual((lastEditorFactoryEditor as IResourceEditorInput).options?.preserveFocus, true);\n\t\t\t\tassert.ok(!lastUntitledEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastDiffEditorFactoryEditor);\n\n\t\t\t\tawait resetTestState();\n\t\t\t\tawait part.activeGroup.closeEditor(pane.input);\n\t\t\t}\n\n\t\t\t// untyped resource editor, no options, SIDE_GROUP\n\t\t\t{\n\t\t\t\tconst untypedEditor: IResourceEditorInput = { resource: URI.file('file.editor-service-override-tests') };\n\t\t\t\tconst pane = await openEditor(untypedEditor, SIDE_GROUP);\n\n\t\t\t\tassert.strictEqual(accessor.editorGroupService.groups.length, 2);\n\t\t\t\tassert.notStrictEqual(pane?.group, rootGroup);\n\t\t\t\tassert.ok(pane?.input instanceof TestFileEditorInput);\n\t\t\t\tassert.strictEqual(pane?.input.resource.toString(), untypedEditor.resource.toString());\n\n\t\t\t\tassert.strictEqual(editorFactoryCalled, 1);\n\t\t\t\tassert.strictEqual(untitledEditorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(diffEditorFactoryCalled, 0);\n\n\t\t\t\tassert.strictEqual(lastEditorFactoryEditor, untypedEditor);\n\t\t\t\tassert.ok(!lastUntitledEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastDiffEditorFactoryEditor);\n\n\t\t\t\tawait resetTestState();\n\t\t\t}\n\n\t\t\t// untyped resource editor, options (override text), SIDE_GROUP\n\t\t\t{\n\t\t\t\tconst untypedEditor: IResourceEditorInput = { resource: URI.file('file.editor-service-override-tests'), options: { override: DEFAULT_EDITOR_ASSOCIATION.id } };\n\t\t\t\tconst pane = await openEditor(untypedEditor, SIDE_GROUP);\n\n\t\t\t\tassert.strictEqual(accessor.editorGroupService.groups.length, 2);\n\t\t\t\tassert.notStrictEqual(pane?.group, rootGroup);\n\t\t\t\tassert.ok(pane?.input instanceof FileEditorInput);\n\t\t\t\tassert.strictEqual(pane.input.resource.toString(), untypedEditor.resource.toString());\n\n\t\t\t\tassert.strictEqual(editorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(untitledEditorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(diffEditorFactoryCalled, 0);\n\n\t\t\t\tassert.ok(!lastEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastUntitledEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastDiffEditorFactoryEditor);\n\n\t\t\t\tawait resetTestState();\n\t\t\t}\n\t\t}\n\n\t\t// Typed\n\t\t{\n\t\t\t// typed editor, no options, no group\n\t\t\t{\n\t\t\t\tconst typedEditor = createTestFileEditorInput(URI.file('file.editor-service-override-tests'), TEST_EDITOR_INPUT_ID);\n\t\t\t\tconst pane = await openEditor({ editor: typedEditor });\n\t\t\t\tlet typedInput = pane?.input;\n\n\t\t\t\tassert.strictEqual(pane?.group, rootGroup);\n\t\t\t\tassert.ok(typedInput instanceof TestFileEditorInput);\n\t\t\t\tassert.strictEqual(typedInput.resource.toString(), typedEditor.resource.toString());\n\n\t\t\t\t// It's a typed editor input so the resolver should not have been called\n\t\t\t\tassert.strictEqual(editorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(untitledEditorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(diffEditorFactoryCalled, 0);\n\n\t\t\t\tassert.ok(!lastEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastUntitledEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastDiffEditorFactoryEditor);\n\n\t\t\t\t// opening the same editor should not create\n\t\t\t\t// a new editor input\n\t\t\t\tawait openEditor(typedEditor);\n\t\t\t\tassert.strictEqual(pane?.group.activeEditor, typedInput);\n\n\t\t\t\t// replaceEditors should work too\n\t\t\t\tconst typedEditorReplacement = createTestFileEditorInput(URI.file('file-replaced.editor-service-override-tests'), TEST_EDITOR_INPUT_ID);\n\t\t\t\tawait service.replaceEditors([{\n\t\t\t\t\teditor: typedEditor,\n\t\t\t\t\treplacement: typedEditorReplacement\n\t\t\t\t}], rootGroup);\n\n\t\t\t\ttypedInput = rootGroup.activeEditor!;\n\n\t\t\t\tassert.ok(typedInput instanceof TestFileEditorInput);\n\t\t\t\tassert.strictEqual(typedInput.resource.toString(), typedEditorReplacement.resource.toString());\n\n\t\t\t\tassert.strictEqual(editorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(untitledEditorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(diffEditorFactoryCalled, 0);\n\n\t\t\t\tassert.ok(!lastUntitledEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastDiffEditorFactoryEditor);\n\n\t\t\t\tawait resetTestState();\n\t\t\t}\n\n\t\t\t// typed editor, no options, no group\n\t\t\t{\n\t\t\t\tconst typedEditor = createTestFileEditorInput(URI.file('file.editor-service-override-tests'), TEST_EDITOR_INPUT_ID);\n\t\t\t\tconst pane = await openEditor({ editor: typedEditor });\n\t\t\t\tconst typedInput = pane?.input;\n\n\t\t\t\tassert.strictEqual(pane?.group, rootGroup);\n\t\t\t\tassert.ok(typedInput instanceof TestFileEditorInput);\n\t\t\t\tassert.strictEqual(typedInput.resource.toString(), typedEditor.resource.toString());\n\n\t\t\t\tassert.strictEqual(editorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(untitledEditorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(diffEditorFactoryCalled, 0);\n\n\t\t\t\tassert.ok(!lastEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastUntitledEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastDiffEditorFactoryEditor);\n\n\t\t\t\t// opening the same editor should not create\n\t\t\t\t// a new editor input\n\t\t\t\tawait openEditor(typedEditor);\n\t\t\t\tassert.strictEqual(pane?.group.activeEditor, typedEditor);\n\n\t\t\t\tawait resetTestState();\n\t\t\t}\n\n\t\t\t// typed editor, options (no override, sticky: true, preserveFocus: true), no group\n\t\t\t{\n\t\t\t\tconst typedEditor = createTestFileEditorInput(URI.file('file.editor-service-override-tests'), TEST_EDITOR_INPUT_ID);\n\t\t\t\tconst pane = await openEditor({ editor: typedEditor, options: { sticky: true, preserveFocus: true } });\n\n\t\t\t\tassert.strictEqual(pane?.group, rootGroup);\n\t\t\t\tassert.ok(pane.input instanceof TestFileEditorInput);\n\t\t\t\tassert.strictEqual(pane.input.resource.toString(), typedEditor.resource.toString());\n\t\t\t\tassert.strictEqual(pane.group.isSticky(pane.input), true);\n\n\t\t\t\tassert.strictEqual(editorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(untitledEditorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(diffEditorFactoryCalled, 0);\n\n\t\t\t\tassert.ok(!lastEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastUntitledEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastDiffEditorFactoryEditor);\n\n\t\t\t\tawait resetTestState();\n\t\t\t\tawait part.activeGroup.closeEditor(pane.input);\n\t\t\t}\n\n\t\t\t// typed editor, options (override default), no group\n\t\t\t{\n\t\t\t\tconst typedEditor = createTestFileEditorInput(URI.file('file.editor-service-override-tests'), TEST_EDITOR_INPUT_ID);\n\t\t\t\tconst pane = await openEditor({ editor: typedEditor, options: { override: DEFAULT_EDITOR_ASSOCIATION.id } });\n\n\t\t\t\tassert.strictEqual(pane?.group, rootGroup);\n\t\t\t\t// We shouldn't have resolved because it is a typed editor, even though we have an override specified\n\t\t\t\tassert.ok(pane.input instanceof TestFileEditorInput);\n\t\t\t\tassert.strictEqual(pane.input.resource.toString(), typedEditor.resource.toString());\n\n\t\t\t\tassert.strictEqual(editorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(untitledEditorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(diffEditorFactoryCalled, 0);\n\n\t\t\t\tassert.ok(!lastEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastUntitledEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastDiffEditorFactoryEditor);\n\n\t\t\t\tawait resetTestState();\n\t\t\t}\n\n\t\t\t// typed editor, options (override: TEST_EDITOR_INPUT_ID), no group\n\t\t\t{\n\t\t\t\tconst typedEditor = createTestFileEditorInput(URI.file('file.editor-service-override-tests'), TEST_EDITOR_INPUT_ID);\n\t\t\t\tconst pane = await openEditor({ editor: typedEditor, options: { override: TEST_EDITOR_INPUT_ID } });\n\n\t\t\t\tassert.strictEqual(pane?.group, rootGroup);\n\t\t\t\tassert.ok(pane.input instanceof TestFileEditorInput);\n\t\t\t\tassert.strictEqual(pane.input.resource.toString(), typedEditor.resource.toString());\n\n\t\t\t\tassert.strictEqual(editorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(untitledEditorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(diffEditorFactoryCalled, 0);\n\n\t\t\t\tassert.ok(!lastEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastUntitledEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastDiffEditorFactoryEditor);\n\n\t\t\t\tawait resetTestState();\n\t\t\t}\n\n\t\t\t// typed editor, options (sticky: true, preserveFocus: true), no group\n\t\t\t{\n\t\t\t\tconst typedEditor = createTestFileEditorInput(URI.file('file.editor-service-override-tests'), TEST_EDITOR_INPUT_ID);\n\t\t\t\tconst pane = await openEditor({ editor: typedEditor, options: { sticky: true, preserveFocus: true } });\n\n\t\t\t\tassert.strictEqual(pane?.group, rootGroup);\n\t\t\t\tassert.ok(pane.input instanceof TestFileEditorInput);\n\t\t\t\tassert.strictEqual(pane.input.resource.toString(), typedEditor.resource.toString());\n\t\t\t\tassert.strictEqual(pane.group.isSticky(pane.input), true);\n\n\t\t\t\tassert.strictEqual(editorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(untitledEditorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(diffEditorFactoryCalled, 0);\n\n\t\t\t\tassert.ok(!lastEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastUntitledEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastDiffEditorFactoryEditor);\n\n\t\t\t\tawait resetTestState();\n\t\t\t\tawait part.activeGroup.closeEditor(pane.input);\n\t\t\t}\n\n\t\t\t// typed editor, options (override: TEST_EDITOR_INPUT_ID, sticky: true, preserveFocus: true), no group\n\t\t\t{\n\t\t\t\tconst typedEditor = createTestFileEditorInput(URI.file('file.editor-service-override-tests'), TEST_EDITOR_INPUT_ID);\n\t\t\t\tconst pane = await openEditor({ editor: typedEditor, options: { sticky: true, preserveFocus: true, override: TEST_EDITOR_INPUT_ID } });\n\n\t\t\t\tassert.strictEqual(pane?.group, rootGroup);\n\t\t\t\tassert.ok(pane.input instanceof TestFileEditorInput);\n\t\t\t\tassert.strictEqual(pane.input.resource.toString(), typedEditor.resource.toString());\n\t\t\t\tassert.strictEqual(pane.group.isSticky(pane.input), true);\n\n\t\t\t\tassert.strictEqual(editorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(untitledEditorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(diffEditorFactoryCalled, 0);\n\n\t\t\t\tassert.ok(!lastEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastUntitledEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastDiffEditorFactoryEditor);\n\n\t\t\t\tawait resetTestState();\n\t\t\t\tawait part.activeGroup.closeEditor(pane.input);\n\t\t\t}\n\n\t\t\t// typed editor, no options, SIDE_GROUP\n\t\t\t{\n\t\t\t\tconst typedEditor = createTestFileEditorInput(URI.file('file.editor-service-override-tests'), TEST_EDITOR_INPUT_ID);\n\t\t\t\tconst pane = await openEditor({ editor: typedEditor }, SIDE_GROUP);\n\n\t\t\t\tassert.strictEqual(accessor.editorGroupService.groups.length, 2);\n\t\t\t\tassert.notStrictEqual(pane?.group, rootGroup);\n\t\t\t\tassert.ok(pane?.input instanceof TestFileEditorInput);\n\t\t\t\tassert.strictEqual(pane?.input.resource.toString(), typedEditor.resource.toString());\n\n\t\t\t\tassert.strictEqual(editorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(untitledEditorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(diffEditorFactoryCalled, 0);\n\n\t\t\t\tassert.ok(!lastEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastUntitledEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastDiffEditorFactoryEditor);\n\n\t\t\t\tawait resetTestState();\n\t\t\t}\n\n\t\t\t// typed editor, options (no override), SIDE_GROUP\n\t\t\t{\n\t\t\t\tconst typedEditor = createTestFileEditorInput(URI.file('file.editor-service-override-tests'), TEST_EDITOR_INPUT_ID);\n\t\t\t\tconst pane = await openEditor({ editor: typedEditor }, SIDE_GROUP);\n\n\t\t\t\tassert.strictEqual(accessor.editorGroupService.groups.length, 2);\n\t\t\t\tassert.notStrictEqual(pane?.group, rootGroup);\n\t\t\t\tassert.ok(pane?.input instanceof TestFileEditorInput);\n\t\t\t\tassert.strictEqual(pane.input.resource.toString(), typedEditor.resource.toString());\n\n\t\t\t\tassert.strictEqual(editorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(untitledEditorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(diffEditorFactoryCalled, 0);\n\n\t\t\t\tassert.ok(!lastEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastUntitledEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastDiffEditorFactoryEditor);\n\n\t\t\t\tawait resetTestState();\n\t\t\t}\n\t\t}\n\n\t\t// Untyped untitled\n\t\t{\n\t\t\t// untyped untitled editor, no options, no group\n\t\t\t{\n\t\t\t\tconst untypedEditor: IUntitledTextResourceEditorInput = { resource: undefined, options: { override: TEST_EDITOR_INPUT_ID } };\n\t\t\t\tconst pane = await openEditor(untypedEditor);\n\n\t\t\t\tassert.strictEqual(pane?.group, rootGroup);\n\t\t\t\tassert.ok(pane.input instanceof TestFileEditorInput);\n\t\t\t\tassert.strictEqual(pane.input.resource.scheme, 'untitled');\n\n\t\t\t\tassert.strictEqual(editorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(untitledEditorFactoryCalled, 1);\n\t\t\t\tassert.strictEqual(diffEditorFactoryCalled, 0);\n\n\t\t\t\tassert.ok(!lastEditorFactoryEditor);\n\t\t\t\tassert.strictEqual(lastUntitledEditorFactoryEditor, untypedEditor);\n\t\t\t\tassert.ok(!lastDiffEditorFactoryEditor);\n\n\t\t\t\tawait resetTestState();\n\t\t\t}\n\n\t\t\t// untyped untitled editor, no options, SIDE_GROUP\n\t\t\t{\n\t\t\t\tconst untypedEditor: IUntitledTextResourceEditorInput = { resource: undefined, options: { override: TEST_EDITOR_INPUT_ID } };\n\t\t\t\tconst pane = await openEditor(untypedEditor, SIDE_GROUP);\n\n\t\t\t\tassert.strictEqual(accessor.editorGroupService.groups.length, 2);\n\t\t\t\tassert.notStrictEqual(pane?.group, rootGroup);\n\t\t\t\tassert.ok(pane?.input instanceof TestFileEditorInput);\n\t\t\t\tassert.strictEqual(pane?.input.resource.scheme, 'untitled');\n\n\t\t\t\tassert.strictEqual(editorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(untitledEditorFactoryCalled, 1);\n\t\t\t\tassert.strictEqual(diffEditorFactoryCalled, 0);\n\n\t\t\t\tassert.ok(!lastEditorFactoryEditor);\n\t\t\t\tassert.strictEqual(lastUntitledEditorFactoryEditor, untypedEditor);\n\t\t\t\tassert.ok(!lastDiffEditorFactoryEditor);\n\n\t\t\t\tawait resetTestState();\n\t\t\t}\n\n\t\t\t// untyped untitled editor with associated resource, no options, no group\n\t\t\t{\n\t\t\t\tconst untypedEditor: IUntitledTextResourceEditorInput = { resource: URI.file('file-original.editor-service-override-tests').with({ scheme: 'untitled' }) };\n\t\t\t\tconst pane = await openEditor(untypedEditor);\n\t\t\t\tconst typedEditor = pane?.input;\n\n\t\t\t\tassert.strictEqual(pane?.group, rootGroup);\n\t\t\t\tassert.ok(typedEditor instanceof TestFileEditorInput);\n\t\t\t\tassert.strictEqual(typedEditor.resource.scheme, 'untitled');\n\n\t\t\t\tassert.strictEqual(editorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(untitledEditorFactoryCalled, 1);\n\t\t\t\tassert.strictEqual(diffEditorFactoryCalled, 0);\n\n\t\t\t\tassert.ok(!lastEditorFactoryEditor);\n\t\t\t\tassert.strictEqual(lastUntitledEditorFactoryEditor, untypedEditor);\n\t\t\t\tassert.ok(!lastDiffEditorFactoryEditor);\n\n\t\t\t\t// opening the same editor should not create\n\t\t\t\t// a new editor input\n\t\t\t\tawait openEditor(untypedEditor);\n\t\t\t\tassert.strictEqual(pane?.group.activeEditor, typedEditor);\n\n\t\t\t\tawait resetTestState();\n\t\t\t}\n\n\t\t\t// untyped untitled editor, options (sticky: true, preserveFocus: true), no group\n\t\t\t{\n\t\t\t\tconst untypedEditor: IUntitledTextResourceEditorInput = { resource: undefined, options: { sticky: true, preserveFocus: true, override: TEST_EDITOR_INPUT_ID } };\n\t\t\t\tconst pane = await openEditor(untypedEditor);\n\n\t\t\t\tassert.strictEqual(pane?.group, rootGroup);\n\t\t\t\tassert.ok(pane.input instanceof TestFileEditorInput);\n\t\t\t\tassert.strictEqual(pane.input.resource.scheme, 'untitled');\n\t\t\t\tassert.strictEqual(pane.group.isSticky(pane.input), true);\n\n\t\t\t\tassert.strictEqual(editorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(untitledEditorFactoryCalled, 1);\n\t\t\t\tassert.strictEqual(diffEditorFactoryCalled, 0);\n\n\t\t\t\tassert.ok(!lastEditorFactoryEditor);\n\t\t\t\tassert.strictEqual(lastUntitledEditorFactoryEditor, untypedEditor);\n\t\t\t\tassert.strictEqual((lastUntitledEditorFactoryEditor as IUntitledTextResourceEditorInput).options?.preserveFocus, true);\n\t\t\t\tassert.strictEqual((lastUntitledEditorFactoryEditor as IUntitledTextResourceEditorInput).options?.sticky, true);\n\t\t\t\tassert.ok(!lastDiffEditorFactoryEditor);\n\n\t\t\t\tawait resetTestState();\n\t\t\t}\n\t\t}\n\n\t\t// Untyped diff\n\t\t{\n\t\t\t// untyped diff editor, no options, no group\n\t\t\t{\n\t\t\t\tconst untypedEditor: IResourceDiffEditorInput = {\n\t\t\t\t\toriginal: { resource: URI.file('file-original.editor-service-override-tests') },\n\t\t\t\t\tmodified: { resource: URI.file('file-modified.editor-service-override-tests') },\n\t\t\t\t\toptions: { override: TEST_EDITOR_INPUT_ID }\n\t\t\t\t};\n\t\t\t\tconst pane = await openEditor(untypedEditor);\n\t\t\t\tconst typedEditor = pane?.input;\n\n\t\t\t\tassert.strictEqual(pane?.group, rootGroup);\n\t\t\t\tassert.ok(typedEditor instanceof TestFileEditorInput);\n\n\t\t\t\tassert.strictEqual(editorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(untitledEditorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(diffEditorFactoryCalled, 1);\n\n\t\t\t\tassert.ok(!lastEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastUntitledEditorFactoryEditor);\n\t\t\t\tassert.strictEqual(lastDiffEditorFactoryEditor, untypedEditor);\n\n\t\t\t\tawait resetTestState();\n\t\t\t}\n\n\t\t\t// untyped diff editor, no options, SIDE_GROUP\n\t\t\t{\n\t\t\t\tconst untypedEditor: IResourceDiffEditorInput = {\n\t\t\t\t\toriginal: { resource: URI.file('file-original.editor-service-override-tests') },\n\t\t\t\t\tmodified: { resource: URI.file('file-modified.editor-service-override-tests') },\n\t\t\t\t\toptions: { override: TEST_EDITOR_INPUT_ID }\n\t\t\t\t};\n\t\t\t\tconst pane = await openEditor(untypedEditor, SIDE_GROUP);\n\n\t\t\t\tassert.strictEqual(accessor.editorGroupService.groups.length, 2);\n\t\t\t\tassert.notStrictEqual(pane?.group, rootGroup);\n\t\t\t\tassert.ok(pane?.input instanceof TestFileEditorInput);\n\n\t\t\t\tassert.strictEqual(editorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(untitledEditorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(diffEditorFactoryCalled, 1);\n\n\t\t\t\tassert.ok(!lastEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastUntitledEditorFactoryEditor);\n\t\t\t\tassert.strictEqual(lastDiffEditorFactoryEditor, untypedEditor);\n\n\t\t\t\tawait resetTestState();\n\t\t\t}\n\n\t\t\t// untyped diff editor, options (sticky: true, preserveFocus: true), no group\n\t\t\t{\n\t\t\t\tconst untypedEditor: IResourceDiffEditorInput = {\n\t\t\t\t\toriginal: { resource: URI.file('file-original.editor-service-override-tests') },\n\t\t\t\t\tmodified: { resource: URI.file('file-modified.editor-service-override-tests') },\n\t\t\t\t\toptions: {\n\t\t\t\t\t\toverride: TEST_EDITOR_INPUT_ID, sticky: true, preserveFocus: true\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tconst pane = await openEditor(untypedEditor);\n\n\t\t\t\tassert.strictEqual(pane?.group, rootGroup);\n\t\t\t\tassert.ok(pane.input instanceof TestFileEditorInput);\n\t\t\t\tassert.strictEqual(pane.group.isSticky(pane.input), true);\n\t\t\t\tassert.strictEqual(editorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(untitledEditorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(diffEditorFactoryCalled, 1);\n\n\t\t\t\tassert.ok(!lastEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastUntitledEditorFactoryEditor);\n\t\t\t\tassert.strictEqual(lastDiffEditorFactoryEditor, untypedEditor);\n\t\t\t\tassert.strictEqual((lastDiffEditorFactoryEditor as IUntitledTextResourceEditorInput).options?.preserveFocus, true);\n\t\t\t\tassert.strictEqual((lastDiffEditorFactoryEditor as IUntitledTextResourceEditorInput).options?.sticky, true);\n\n\t\t\t\tawait resetTestState();\n\t\t\t}\n\t\t}\n\n\t\t// typed editor, not registered\n\t\t{\n\n\t\t\t// no options, no group\n\t\t\t{\n\t\t\t\tconst typedEditor = createTestFileEditorInput(URI.file('file.something'), TEST_EDITOR_INPUT_ID);\n\t\t\t\tconst pane = await openEditor({ editor: typedEditor });\n\n\t\t\t\tassert.strictEqual(pane?.group, rootGroup);\n\t\t\t\tassert.ok(pane.input instanceof TestFileEditorInput);\n\t\t\t\tassert.strictEqual(pane.input, typedEditor);\n\n\t\t\t\tassert.strictEqual(editorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(untitledEditorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(diffEditorFactoryCalled, 0);\n\n\t\t\t\tassert.ok(!lastEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastUntitledEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastDiffEditorFactoryEditor);\n\n\t\t\t\tawait resetTestState();\n\t\t\t}\n\n\t\t\t// no options, SIDE_GROUP\n\t\t\t{\n\t\t\t\tconst typedEditor = createTestFileEditorInput(URI.file('file.something'), TEST_EDITOR_INPUT_ID);\n\t\t\t\tconst pane = await openEditor({ editor: typedEditor }, SIDE_GROUP);\n\n\t\t\t\tassert.strictEqual(accessor.editorGroupService.groups.length, 2);\n\t\t\t\tassert.notStrictEqual(pane?.group, rootGroup);\n\t\t\t\tassert.ok(pane?.input instanceof TestFileEditorInput);\n\t\t\t\tassert.strictEqual(pane?.input, typedEditor);\n\n\t\t\t\tassert.strictEqual(editorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(untitledEditorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(diffEditorFactoryCalled, 0);\n\n\t\t\t\tassert.ok(!lastEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastUntitledEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastDiffEditorFactoryEditor);\n\n\t\t\t\tawait resetTestState();\n\t\t\t}\n\t\t}\n\n\t\t// typed editor, not supporting `toUntyped`\n\t\t{\n\n\t\t\t// no options, no group\n\t\t\t{\n\t\t\t\tconst typedEditor = createTestFileEditorInput(URI.file('file.something'), TEST_EDITOR_INPUT_ID);\n\t\t\t\ttypedEditor.disableToUntyped = true;\n\t\t\t\tconst pane = await openEditor({ editor: typedEditor });\n\n\t\t\t\tassert.strictEqual(pane?.group, rootGroup);\n\t\t\t\tassert.ok(pane.input instanceof TestFileEditorInput);\n\t\t\t\tassert.strictEqual(pane.input, typedEditor);\n\n\t\t\t\tassert.strictEqual(editorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(untitledEditorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(diffEditorFactoryCalled, 0);\n\n\t\t\t\tassert.ok(!lastEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastUntitledEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastDiffEditorFactoryEditor);\n\n\t\t\t\tawait resetTestState();\n\t\t\t}\n\n\t\t\t// no options, SIDE_GROUP\n\t\t\t{\n\t\t\t\tconst typedEditor = createTestFileEditorInput(URI.file('file.something'), TEST_EDITOR_INPUT_ID);\n\t\t\t\ttypedEditor.disableToUntyped = true;\n\t\t\t\tconst pane = await openEditor({ editor: typedEditor }, SIDE_GROUP);\n\n\t\t\t\tassert.strictEqual(accessor.editorGroupService.groups.length, 2);\n\t\t\t\tassert.notStrictEqual(pane?.group, rootGroup);\n\t\t\t\tassert.ok(pane?.input instanceof TestFileEditorInput);\n\t\t\t\tassert.strictEqual(pane?.input, typedEditor);\n\n\t\t\t\tassert.strictEqual(editorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(untitledEditorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(diffEditorFactoryCalled, 0);\n\n\t\t\t\tassert.ok(!lastEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastUntitledEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastDiffEditorFactoryEditor);\n\n\t\t\t\tawait resetTestState();\n\t\t\t}\n\t\t}\n\n\t\t// openEditors with >1 editor\n\t\tif (useOpenEditors) {\n\n\t\t\t// mix of untyped and typed editors\n\t\t\t{\n\t\t\t\tconst untypedEditor1: IResourceEditorInput = { resource: URI.file('file1.editor-service-override-tests') };\n\t\t\t\tconst untypedEditor2: IResourceEditorInput = { resource: URI.file('file2.editor-service-override-tests') };\n\t\t\t\tconst untypedEditor3: EditorInputWithOptions = { editor: createTestFileEditorInput(URI.file('file3.editor-service-override-tests'), TEST_EDITOR_INPUT_ID) };\n\t\t\t\tconst untypedEditor4: EditorInputWithOptions = { editor: createTestFileEditorInput(URI.file('file4.editor-service-override-tests'), TEST_EDITOR_INPUT_ID) };\n\t\t\t\tconst untypedEditor5: IResourceEditorInput = { resource: URI.file('file5.editor-service-override-tests') };\n\t\t\t\tconst pane = (await service.openEditors([untypedEditor1, untypedEditor2, untypedEditor3, untypedEditor4, untypedEditor5]))[0];\n\n\t\t\t\tassert.strictEqual(pane?.group, rootGroup);\n\t\t\t\tassert.strictEqual(pane?.group.count, 5);\n\n\t\t\t\t// Only the untyped editors should have had factories called (3 untyped editors)\n\t\t\t\tassert.strictEqual(editorFactoryCalled, 3);\n\t\t\t\tassert.strictEqual(untitledEditorFactoryCalled, 0);\n\t\t\t\tassert.strictEqual(diffEditorFactoryCalled, 0);\n\n\t\t\t\tassert.ok(lastEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastUntitledEditorFactoryEditor);\n\t\t\t\tassert.ok(!lastDiffEditorFactoryEditor);\n\n\t\t\t\tawait resetTestState();\n\t\t\t}\n\t\t}\n\n\t\t// untyped default editor\n\t\t{\n\t\t\t// untyped default editor, options: revealIfVisible\n\t\t\t{\n\t\t\t\tconst untypedEditor1: IResourceEditorInput = { resource: URI.file('file-1'), options: { revealIfVisible: true, pinned: true } };\n\t\t\t\tconst untypedEditor2: IResourceEditorInput = { resource: URI.file('file-2'), options: { pinned: true } };\n\n\t\t\t\tconst rootPane = await openEditor(untypedEditor1);\n\t\t\t\tconst sidePane = await openEditor(untypedEditor2, SIDE_GROUP);\n\n\t\t\t\tassert.strictEqual(rootPane?.group.count, 1);\n\t\t\t\tassert.strictEqual(sidePane?.group.count, 1);\n\n\t\t\t\taccessor.editorGroupService.activateGroup(sidePane.group);\n\n\t\t\t\tawait openEditor(untypedEditor1);\n\n\t\t\t\tassert.strictEqual(rootPane?.group.count, 1);\n\t\t\t\tassert.strictEqual(sidePane?.group.count, 1);\n\n\t\t\t\tawait resetTestState();\n\t\t\t}\n\n\t\t\t// untyped default editor, options: revealIfOpened\n\t\t\t{\n\t\t\t\tconst untypedEditor1: IResourceEditorInput = { resource: URI.file('file-1'), options: { revealIfOpened: true, pinned: true } };\n\t\t\t\tconst untypedEditor2: IResourceEditorInput = { resource: URI.file('file-2'), options: { pinned: true } };\n\n\t\t\t\tconst rootPane = await openEditor(untypedEditor1);\n\t\t\t\tawait openEditor(untypedEditor2);\n\t\t\t\tassert.strictEqual(rootPane?.group.activeEditor?.resource?.toString(), untypedEditor2.resource.toString());\n\t\t\t\tconst sidePane = await openEditor(untypedEditor2, SIDE_GROUP);\n\n\t\t\t\tassert.strictEqual(rootPane?.group.count, 2);\n\t\t\t\tassert.strictEqual(sidePane?.group.count, 1);\n\n\t\t\t\taccessor.editorGroupService.activateGroup(sidePane.group);\n\n\t\t\t\tawait openEditor(untypedEditor1);\n\n\t\t\t\tassert.strictEqual(rootPane?.group.count, 2);\n\t\t\t\tassert.strictEqual(sidePane?.group.count, 1);\n\n\t\t\t\tawait resetTestState();\n\t\t\t}\n\t\t}\n\t}\n\n\ttest('openEditor() applies options if editor already opened', async () => {\n\t\tdisposables.add(registerTestFileEditor());\n\n\t\tconst [, service, accessor] = await createEditorService();\n\n\t\tdisposables.add(accessor.editorResolverService.registerEditor(\n\t\t\t'*.editor-service-override-tests',\n\t\t\t{ id: TEST_EDITOR_INPUT_ID, label: 'Label', priority: RegisteredEditorPriority.exclusive },\n\t\t\t{},\n\t\t\t{\n\t\t\t\tcreateEditorInput: editor => ({ editor: createTestFileEditorInput(editor.resource, TEST_EDITOR_INPUT_ID) })\n\t\t\t}\n\t\t));\n\n\t\t// Typed editor\n\t\tlet pane = await service.openEditor(createTestFileEditorInput(URI.parse('my://resource-openEditors'), TEST_EDITOR_INPUT_ID));\n\t\tpane = await service.openEditor(createTestFileEditorInput(URI.parse('my://resource-openEditors'), TEST_EDITOR_INPUT_ID), { sticky: true, preserveFocus: true });\n\n\t\tassert.strictEqual(pane?.options?.sticky, true);\n\t\tassert.strictEqual(pane?.options?.preserveFocus, true);\n\n\t\tawait pane.group.closeAllEditors();\n\n\t\t// Untyped editor (without registered editor)\n\t\tpane = await service.openEditor({ resource: URI.file('resource-openEditors') });\n\t\tpane = await service.openEditor({ resource: URI.file('resource-openEditors'), options: { sticky: true, preserveFocus: true } });\n\n\t\tassert.ok(pane instanceof TestTextFileEditor);\n\t\tassert.strictEqual(pane?.options?.sticky, true);\n\t\tassert.strictEqual(pane?.options?.preserveFocus, true);\n\n\t\t// Untyped editor (with registered editor)\n\t\tpane = await service.openEditor({ resource: URI.file('file.editor-service-override-tests') });\n\t\tpane = await service.openEditor({ resource: URI.file('file.editor-service-override-tests'), options: { sticky: true, preserveFocus: true } });\n\n\t\tassert.strictEqual(pane?.options?.sticky, true);\n\t\tassert.strictEqual(pane?.options?.preserveFocus, true);\n\t});\n\n\ttest('isOpen() with side by side editor', async () => {\n\t\tconst [part, service] = await createEditorService();\n\n\t\tconst input = createTestFileEditorInput(URI.parse('my://resource-openEditors'), TEST_EDITOR_INPUT_ID);\n\t\tconst otherInput = createTestFileEditorInput(URI.parse('my://resource2-openEditors'), TEST_EDITOR_INPUT_ID);\n\t\tconst sideBySideInput = new SideBySideEditorInput('sideBySide', '', input, otherInput, service);\n\n\t\tconst editor1 = await service.openEditor(sideBySideInput, { pinned: true });\n\t\tassert.strictEqual(part.activeGroup.count, 1);\n\n\t\tassert.strictEqual(service.isOpened(input), false);\n\t\tassert.strictEqual(service.isOpened(otherInput), true);\n\t\tassert.strictEqual(service.isOpened({ resource: input.resource, typeId: input.typeId, editorId: input.editorId }), false);\n\t\tassert.strictEqual(service.isOpened({ resource: otherInput.resource, typeId: otherInput.typeId, editorId: otherInput.editorId }), true);\n\n\t\tconst editor2 = await service.openEditor(input, { pinned: true });\n\t\tassert.strictEqual(part.activeGroup.count, 2);\n\n\t\tassert.strictEqual(service.isOpened(input), true);\n\t\tassert.strictEqual(service.isOpened(otherInput), true);\n\t\tassert.strictEqual(service.isOpened({ resource: input.resource, typeId: input.typeId, editorId: input.editorId }), true);\n\t\tassert.strictEqual(service.isOpened({ resource: otherInput.resource, typeId: otherInput.typeId, editorId: otherInput.editorId }), true);\n\n\t\tawait editor2?.group.closeEditor(input);\n\t\tassert.strictEqual(part.activeGroup.count, 1);\n\n\t\tassert.strictEqual(service.isOpened(input), false);\n\t\tassert.strictEqual(service.isOpened(otherInput), true);\n\t\tassert.strictEqual(service.isOpened({ resource: input.resource, typeId: input.typeId, editorId: input.editorId }), false);\n\t\tassert.strictEqual(service.isOpened({ resource: otherInput.resource, typeId: otherInput.typeId, editorId: otherInput.editorId }), true);\n\n\t\tawait editor1?.group.closeEditor(sideBySideInput);\n\n\t\tassert.strictEqual(service.isOpened(input), false);\n\t\tassert.strictEqual(service.isOpened(otherInput), false);\n\t\tassert.strictEqual(service.isOpened({ resource: input.resource, typeId: input.typeId, editorId: input.editorId }), false);\n\t\tassert.strictEqual(service.isOpened({ resource: otherInput.resource, typeId: otherInput.typeId, editorId: otherInput.editorId }), false);\n\t});\n\n\ttest('openEditors() / replaceEditors()', async () => {\n\t\tconst [part, service] = await createEditorService();\n\n\t\tconst input = createTestFileEditorInput(URI.parse('my://resource-openEditors'), TEST_EDITOR_INPUT_ID);\n\t\tconst otherInput = createTestFileEditorInput(URI.parse('my://resource2-openEditors'), TEST_EDITOR_INPUT_ID);\n\t\tconst replaceInput = createTestFileEditorInput(URI.parse('my://resource3-openEditors'), TEST_EDITOR_INPUT_ID);\n\n\t\t// Open editors\n\t\tawait service.openEditors([{ editor: input }, { editor: otherInput }]);\n\t\tassert.strictEqual(part.activeGroup.count, 2);\n\n\t\t// Replace editors\n\t\tawait service.replaceEditors([{ editor: input, replacement: replaceInput }], part.activeGroup);\n\t\tassert.strictEqual(part.activeGroup.count, 2);\n\t\tassert.strictEqual(part.activeGroup.getIndexOfEditor(replaceInput), 0);\n\t});\n\n\ttest('openEditors() handles workspace trust (typed editors)', async () => {\n\t\tconst [part, service, accessor] = await createEditorService();\n\n\t\tconst input1 = createTestFileEditorInput(URI.parse('my://resource1-openEditors'), TEST_EDITOR_INPUT_ID);\n\t\tconst input2 = createTestFileEditorInput(URI.parse('my://resource2-openEditors'), TEST_EDITOR_INPUT_ID);\n\n\t\tconst input3 = createTestFileEditorInput(URI.parse('my://resource3-openEditors'), TEST_EDITOR_INPUT_ID);\n\t\tconst input4 = createTestFileEditorInput(URI.parse('my://resource4-openEditors'), TEST_EDITOR_INPUT_ID);\n\t\tconst sideBySideInput = new SideBySideEditorInput('side by side', undefined, input3, input4, service);\n\n\t\tconst oldHandler = accessor.workspaceTrustRequestService.requestOpenUrisHandler;\n\n\t\ttry {\n\n\t\t\t// Trust: cancel\n\t\t\tlet trustEditorUris: URI[] = [];\n\t\t\taccessor.workspaceTrustRequestService.requestOpenUrisHandler = async uris => {\n\t\t\t\ttrustEditorUris = uris;\n\t\t\t\treturn WorkspaceTrustUriResponse.Cancel;\n\t\t\t};\n\n\t\t\tawait service.openEditors([{ editor: input1 }, { editor: input2 }, { editor: sideBySideInput }], undefined, { validateTrust: true });\n\t\t\tassert.strictEqual(part.activeGroup.count, 0);\n\t\t\tassert.strictEqual(trustEditorUris.length, 4);\n\t\t\tassert.strictEqual(trustEditorUris.some(uri => uri.toString() === input1.resource.toString()), true);\n\t\t\tassert.strictEqual(trustEditorUris.some(uri => uri.toString() === input2.resource.toString()), true);\n\t\t\tassert.strictEqual(trustEditorUris.some(uri => uri.toString() === input3.resource.toString()), true);\n\t\t\tassert.strictEqual(trustEditorUris.some(uri => uri.toString() === input4.resource.toString()), true);\n\n\t\t\t// Trust: open in new window\n\t\t\taccessor.workspaceTrustRequestService.requestOpenUrisHandler = async uris => WorkspaceTrustUriResponse.OpenInNewWindow;\n\n\t\t\tawait service.openEditors([{ editor: input1 }, { editor: input2 }, { editor: sideBySideInput }], undefined, { validateTrust: true });\n\t\t\tassert.strictEqual(part.activeGroup.count, 0);\n\n\t\t\t// Trust: allow\n\t\t\taccessor.workspaceTrustRequestService.requestOpenUrisHandler = async uris => WorkspaceTrustUriResponse.Open;\n\n\t\t\tawait service.openEditors([{ editor: input1 }, { editor: input2 }, { editor: sideBySideInput }], undefined, { validateTrust: true });\n\t\t\tassert.strictEqual(part.activeGroup.count, 3);\n\t\t} finally {\n\t\t\taccessor.workspaceTrustRequestService.requestOpenUrisHandler = oldHandler;\n\t\t}\n\t});\n\n\ttest('openEditors() ignores trust when `validateTrust: false', async () => {\n\t\tconst [part, service, accessor] = await createEditorService();\n\n\t\tconst input1 = createTestFileEditorInput(URI.parse('my://resource1-openEditors'), TEST_EDITOR_INPUT_ID);\n\t\tconst input2 = createTestFileEditorInput(URI.parse('my://resource2-openEditors'), TEST_EDITOR_INPUT_ID);\n\n\t\tconst input3 = createTestFileEditorInput(URI.parse('my://resource3-openEditors'), TEST_EDITOR_INPUT_ID);\n\t\tconst input4 = createTestFileEditorInput(URI.parse('my://resource4-openEditors'), TEST_EDITOR_INPUT_ID);\n\t\tconst sideBySideInput = new SideBySideEditorInput('side by side', undefined, input3, input4, service);\n\n\t\tconst oldHandler = accessor.workspaceTrustRequestService.requestOpenUrisHandler;\n\n\t\ttry {\n\n\t\t\t// Trust: cancel\n\t\t\taccessor.workspaceTrustRequestService.requestOpenUrisHandler = async uris => WorkspaceTrustUriResponse.Cancel;\n\n\t\t\tawait service.openEditors([{ editor: input1 }, { editor: input2 }, { editor: sideBySideInput }]);\n\t\t\tassert.strictEqual(part.activeGroup.count, 3);\n\t\t} finally {\n\t\t\taccessor.workspaceTrustRequestService.requestOpenUrisHandler = oldHandler;\n\t\t}\n\t});\n\n\ttest('openEditors() extracts proper resources from untyped editors for workspace trust', async () => {\n\t\tconst [, service, accessor] = await createEditorService();\n\n\t\tconst input = { resource: URI.file('resource-openEditors') };\n\t\tconst otherInput: IResourceDiffEditorInput = {\n\t\t\toriginal: { resource: URI.parse('my://resource2-openEditors') },\n\t\t\tmodified: { resource: URI.parse('my://resource3-openEditors') }\n\t\t};\n\n\t\tconst oldHandler = accessor.workspaceTrustRequestService.requestOpenUrisHandler;\n\n\t\ttry {\n\t\t\tlet trustEditorUris: URI[] = [];\n\t\t\taccessor.workspaceTrustRequestService.requestOpenUrisHandler = async uris => {\n\t\t\t\ttrustEditorUris = uris;\n\t\t\t\treturn oldHandler(uris);\n\t\t\t};\n\n\t\t\tawait service.openEditors([input, otherInput], undefined, { validateTrust: true });\n\t\t\tassert.strictEqual(trustEditorUris.length, 3);\n\t\t\tassert.strictEqual(trustEditorUris.some(uri => uri.toString() === input.resource.toString()), true);\n\t\t\tassert.strictEqual(trustEditorUris.some(uri => uri.toString() === otherInput.original.resource?.toString()), true);\n\t\t\tassert.strictEqual(trustEditorUris.some(uri => uri.toString() === otherInput.modified.resource?.toString()), true);\n\t\t} finally {\n\t\t\taccessor.workspaceTrustRequestService.requestOpenUrisHandler = oldHandler;\n\t\t}\n\t});\n\n\ttest('close editor does not dispose when editor opened in other group', async () => {\n\t\tconst [part, service] = await createEditorService();\n\n\t\tconst input = createTestFileEditorInput(URI.parse('my://resource-close1'), TEST_EDITOR_INPUT_ID);\n\n\t\tconst rootGroup = part.activeGroup;\n\t\tconst rightGroup = part.addGroup(rootGroup, GroupDirection.RIGHT);\n\n\t\t// Open input\n\t\tawait service.openEditor(input, { pinned: true });\n\t\tawait service.openEditor(input, { pinned: true }, rightGroup);\n\n\t\tconst editors = service.editors;\n\t\tassert.strictEqual(editors.length, 2);\n\t\tassert.strictEqual(editors[0], input);\n\t\tassert.strictEqual(editors[1], input);\n\n\t\t// Close input\n\t\tawait rootGroup.closeEditor(input);\n\t\tassert.strictEqual(input.isDisposed(), false);\n\n\t\tawait rightGroup.closeEditor(input);\n\t\tassert.strictEqual(input.isDisposed(), true);\n\t});\n\n\ttest('open to the side', async () => {\n\t\tconst [part, service] = await createEditorService();\n\n\t\tconst input1 = createTestFileEditorInput(URI.parse('my://resource1-openside'), TEST_EDITOR_INPUT_ID);\n\t\tconst input2 = createTestFileEditorInput(URI.parse('my://resource2-openside'), TEST_EDITOR_INPUT_ID);\n\n\t\tconst rootGroup = part.activeGroup;\n\n\t\tawait service.openEditor(input1, { pinned: true }, rootGroup);\n\t\tlet editor = await service.openEditor(input1, { pinned: true, preserveFocus: true }, SIDE_GROUP);\n\n\t\tassert.strictEqual(part.activeGroup, rootGroup);\n\t\tassert.strictEqual(part.count, 2);\n\t\tassert.strictEqual(editor?.group, part.groups[1]);\n\n\t\tassert.strictEqual(service.isVisible(input1), true);\n\t\tassert.strictEqual(service.isOpened(input1), true);\n\n\t\t// Open to the side uses existing neighbour group if any\n\t\teditor = await service.openEditor(input2, { pinned: true, preserveFocus: true }, SIDE_GROUP);\n\t\tassert.strictEqual(part.activeGroup, rootGroup);\n\t\tassert.strictEqual(part.count, 2);\n\t\tassert.strictEqual(editor?.group, part.groups[1]);\n\n\t\tassert.strictEqual(service.isVisible(input2), true);\n\t\tassert.strictEqual(service.isOpened(input2), true);\n\t});\n\n\ttest('editor group activation', async () => {\n\t\tconst [part, service] = await createEditorService();\n\n\t\tconst input1 = createTestFileEditorInput(URI.parse('my://resource1-openside'), TEST_EDITOR_INPUT_ID);\n\t\tconst input2 = createTestFileEditorInput(URI.parse('my://resource2-openside'), TEST_EDITOR_INPUT_ID);\n\n\t\tconst rootGroup = part.activeGroup;\n\n\t\tawait service.openEditor(input1, { pinned: true }, rootGroup);\n\t\tlet editor = await service.openEditor(input2, { pinned: true, preserveFocus: true, activation: EditorActivation.ACTIVATE }, SIDE_GROUP);\n\t\tconst sideGroup = editor?.group;\n\n\t\tassert.strictEqual(part.activeGroup, sideGroup);\n\n\t\teditor = await service.openEditor(input1, { pinned: true, preserveFocus: true, activation: EditorActivation.PRESERVE }, rootGroup);\n\t\tassert.strictEqual(part.activeGroup, sideGroup);\n\n\t\teditor = await service.openEditor(input1, { pinned: true, preserveFocus: true, activation: EditorActivation.ACTIVATE }, rootGroup);\n\t\tassert.strictEqual(part.activeGroup, rootGroup);\n\n\t\teditor = await service.openEditor(input2, { pinned: true, activation: EditorActivation.PRESERVE }, sideGroup);\n\t\tassert.strictEqual(part.activeGroup, rootGroup);\n\n\t\teditor = await service.openEditor(input2, { pinned: true, activation: EditorActivation.ACTIVATE }, sideGroup);\n\t\tassert.strictEqual(part.activeGroup, sideGroup);\n\n\t\tpart.arrangeGroups(GroupsArrangement.EXPAND);\n\t\teditor = await service.openEditor(input1, { pinned: true, preserveFocus: true, activation: EditorActivation.RESTORE }, rootGroup);\n\t\tassert.strictEqual(part.activeGroup, sideGroup);\n\t});\n\n\ttest('inactive editor group does not activate when closing editor (#117686)', async () => {\n\t\tconst [part, service] = await createEditorService();\n\n\t\tconst input1 = createTestFileEditorInput(URI.parse('my://resource1-openside'), TEST_EDITOR_INPUT_ID);\n\t\tconst input2 = createTestFileEditorInput(URI.parse('my://resource2-openside'), TEST_EDITOR_INPUT_ID);\n\n\t\tconst rootGroup = part.activeGroup;\n\n\t\tawait service.openEditor(input1, { pinned: true }, rootGroup);\n\t\tawait service.openEditor(input2, { pinned: true }, rootGroup);\n\n\t\tconst sideGroup = (await service.openEditor(input2, { pinned: true }, SIDE_GROUP))?.group;\n\t\tassert.strictEqual(part.activeGroup, sideGroup);\n\t\tassert.notStrictEqual(rootGroup, sideGroup);\n\n\t\tpart.arrangeGroups(GroupsArrangement.EXPAND, part.activeGroup);\n\n\t\tawait rootGroup.closeEditor(input2);\n\t\tassert.strictEqual(part.activeGroup, sideGroup);\n\n\t\tassert(!part.isGroupExpanded(rootGroup));\n\t\tassert(part.isGroupExpanded(part.activeGroup));\n\t});\n\n\ttest('active editor change / visible editor change events', async function () {\n\t\tconst [part, service] = await createEditorService();\n\n\t\tlet input = createTestFileEditorInput(URI.parse('my://resource-active'), TEST_EDITOR_INPUT_ID);\n\t\tlet otherInput = createTestFileEditorInput(URI.parse('my://resource2-active'), TEST_EDITOR_INPUT_ID);\n\n\t\tlet activeEditorChangeEventFired = false;\n\t\tconst activeEditorChangeListener = service.onDidActiveEditorChange(() => {\n\t\t\tactiveEditorChangeEventFired = true;\n\t\t});\n\n\t\tlet visibleEditorChangeEventFired = false;\n\t\tconst visibleEditorChangeListener = service.onDidVisibleEditorsChange(() => {\n\t\t\tvisibleEditorChangeEventFired = true;\n\t\t});\n\n\t\tfunction assertActiveEditorChangedEvent(expected: boolean) {\n\t\t\tassert.strictEqual(activeEditorChangeEventFired, expected, `Unexpected active editor change state (got ${activeEditorChangeEventFired}, expected ${expected})`);\n\t\t\tactiveEditorChangeEventFired = false;\n\t\t}\n\n\t\tfunction assertVisibleEditorsChangedEvent(expected: boolean) {\n\t\t\tassert.strictEqual(visibleEditorChangeEventFired, expected, `Unexpected visible editors change state (got ${visibleEditorChangeEventFired}, expected ${expected})`);\n\t\t\tvisibleEditorChangeEventFired = false;\n\t\t}\n\n\t\tasync function closeEditorAndWaitForNextToOpen(group: IEditorGroup, input: EditorInput): Promise<void> {\n\t\t\tawait group.closeEditor(input);\n\t\t\tawait timeout(0); // closing an editor will not immediately open the next one, so we need to wait\n\t\t}\n\n\t\t// 1.) open, open same, open other, close\n\t\tlet editor = await service.openEditor(input, { pinned: true });\n\t\tconst group = editor?.group!;\n\t\tassertActiveEditorChangedEvent(true);\n\t\tassertVisibleEditorsChangedEvent(true);\n\n\t\teditor = await service.openEditor(input);\n\t\tassertActiveEditorChangedEvent(false);\n\t\tassertVisibleEditorsChangedEvent(false);\n\n\t\teditor = await service.openEditor(otherInput);\n\t\tassertActiveEditorChangedEvent(true);\n\t\tassertVisibleEditorsChangedEvent(true);\n\n\t\tawait closeEditorAndWaitForNextToOpen(group, otherInput);\n\t\tassertActiveEditorChangedEvent(true);\n\t\tassertVisibleEditorsChangedEvent(true);\n\n\t\tawait closeEditorAndWaitForNextToOpen(group, input);\n\t\tassertActiveEditorChangedEvent(true);\n\t\tassertVisibleEditorsChangedEvent(true);\n\n\t\t// 2.) open, open same (forced open) (recreate inputs that got disposed)\n\t\tinput = createTestFileEditorInput(URI.parse('my://resource-active'), TEST_EDITOR_INPUT_ID);\n\t\totherInput = createTestFileEditorInput(URI.parse('my://resource2-active'), TEST_EDITOR_INPUT_ID);\n\t\teditor = await service.openEditor(input);\n\t\tassertActiveEditorChangedEvent(true);\n\t\tassertVisibleEditorsChangedEvent(true);\n\n\t\teditor = await service.openEditor(input, { forceReload: true });\n\t\tassertActiveEditorChangedEvent(false);\n\t\tassertVisibleEditorsChangedEvent(false);\n\n\t\tawait closeEditorAndWaitForNextToOpen(group, input);\n\n\t\t// 3.) open, open inactive, close (recreate inputs that got disposed)\n\t\tinput = createTestFileEditorInput(URI.parse('my://resource-active'), TEST_EDITOR_INPUT_ID);\n\t\totherInput = createTestFileEditorInput(URI.parse('my://resource2-active'), TEST_EDITOR_INPUT_ID);\n\t\teditor = await service.openEditor(input, { pinned: true });\n\t\tassertActiveEditorChangedEvent(true);\n\t\tassertVisibleEditorsChangedEvent(true);\n\n\t\teditor = await service.openEditor(otherInput, { inactive: true });\n\t\tassertActiveEditorChangedEvent(false);\n\t\tassertVisibleEditorsChangedEvent(false);\n\n\t\tawait group.closeAllEditors();\n\t\tassertActiveEditorChangedEvent(true);\n\t\tassertVisibleEditorsChangedEvent(true);\n\n\t\t// 4.) open, open inactive, close inactive (recreate inputs that got disposed)\n\t\tinput = createTestFileEditorInput(URI.parse('my://resource-active'), TEST_EDITOR_INPUT_ID);\n\t\totherInput = createTestFileEditorInput(URI.parse('my://resource2-active'), TEST_EDITOR_INPUT_ID);\n\t\teditor = await service.openEditor(input, { pinned: true });\n\t\tassertActiveEditorChangedEvent(true);\n\t\tassertVisibleEditorsChangedEvent(true);\n\n\t\teditor = await service.openEditor(otherInput, { inactive: true });\n\t\tassertActiveEditorChangedEvent(false);\n\t\tassertVisibleEditorsChangedEvent(false);\n\n\t\tawait closeEditorAndWaitForNextToOpen(group, otherInput);\n\t\tassertActiveEditorChangedEvent(false);\n\t\tassertVisibleEditorsChangedEvent(false);\n\n\t\tawait group.closeAllEditors();\n\t\tassertActiveEditorChangedEvent(true);\n\t\tassertVisibleEditorsChangedEvent(true);\n\n\t\t// 5.) add group, remove group (recreate inputs that got disposed)\n\t\tinput = createTestFileEditorInput(URI.parse('my://resource-active'), TEST_EDITOR_INPUT_ID);\n\t\totherInput = createTestFileEditorInput(URI.parse('my://resource2-active'), TEST_EDITOR_INPUT_ID);\n\t\teditor = await service.openEditor(input, { pinned: true });\n\t\tassertActiveEditorChangedEvent(true);\n\t\tassertVisibleEditorsChangedEvent(true);\n\n\t\tlet rightGroup = part.addGroup(part.activeGroup, GroupDirection.RIGHT);\n\t\tassertActiveEditorChangedEvent(false);\n\t\tassertVisibleEditorsChangedEvent(false);\n\n\t\trightGroup.focus();\n\t\tassertActiveEditorChangedEvent(true);\n\t\tassertVisibleEditorsChangedEvent(false);\n\n\t\tpart.removeGroup(rightGroup);\n\t\tassertActiveEditorChangedEvent(true);\n\t\tassertVisibleEditorsChangedEvent(false);\n\n\t\tawait group.closeAllEditors();\n\t\tassertActiveEditorChangedEvent(true);\n\t\tassertVisibleEditorsChangedEvent(true);\n\n\t\t// 6.) open editor in inactive group (recreate inputs that got disposed)\n\t\tinput = createTestFileEditorInput(URI.parse('my://resource-active'), TEST_EDITOR_INPUT_ID);\n\t\totherInput = createTestFileEditorInput(URI.parse('my://resource2-active'), TEST_EDITOR_INPUT_ID);\n\t\teditor = await service.openEditor(input, { pinned: true });\n\t\tassertActiveEditorChangedEvent(true);\n\t\tassertVisibleEditorsChangedEvent(true);\n\n\t\trightGroup = part.addGroup(part.activeGroup, GroupDirection.RIGHT);\n\t\tassertActiveEditorChangedEvent(false);\n\t\tassertVisibleEditorsChangedEvent(false);\n\n\t\tawait rightGroup.openEditor(otherInput);\n\t\tassertActiveEditorChangedEvent(true);\n\t\tassertVisibleEditorsChangedEvent(true);\n\n\t\tawait closeEditorAndWaitForNextToOpen(rightGroup, otherInput);\n\t\tassertActiveEditorChangedEvent(true);\n\t\tassertVisibleEditorsChangedEvent(true);\n\n\t\tawait group.closeAllEditors();\n\t\tassertActiveEditorChangedEvent(true);\n\t\tassertVisibleEditorsChangedEvent(true);\n\n\t\t// 7.) activate group (recreate inputs that got disposed)\n\t\tinput = createTestFileEditorInput(URI.parse('my://resource-active'), TEST_EDITOR_INPUT_ID);\n\t\totherInput = createTestFileEditorInput(URI.parse('my://resource2-active'), TEST_EDITOR_INPUT_ID);\n\t\teditor = await service.openEditor(input, { pinned: true });\n\t\tassertActiveEditorChangedEvent(true);\n\t\tassertVisibleEditorsChangedEvent(true);\n\n\t\trightGroup = part.addGroup(part.activeGroup, GroupDirection.RIGHT);\n\t\tassertActiveEditorChangedEvent(false);\n\t\tassertVisibleEditorsChangedEvent(false);\n\n\t\tawait rightGroup.openEditor(otherInput);\n\t\tassertActiveEditorChangedEvent(true);\n\t\tassertVisibleEditorsChangedEvent(true);\n\n\t\tgroup.focus();\n\t\tassertActiveEditorChangedEvent(true);\n\t\tassertVisibleEditorsChangedEvent(false);\n\n\t\tawait closeEditorAndWaitForNextToOpen(rightGroup, otherInput);\n\t\tassertActiveEditorChangedEvent(false);\n\t\tassertVisibleEditorsChangedEvent(true);\n\n\t\tawait group.closeAllEditors();\n\t\tassertActiveEditorChangedEvent(true);\n\t\tassertVisibleEditorsChangedEvent(true);\n\n\t\t// 8.) move editor (recreate inputs that got disposed)\n\t\tinput = createTestFileEditorInput(URI.parse('my://resource-active'), TEST_EDITOR_INPUT_ID);\n\t\totherInput = createTestFileEditorInput(URI.parse('my://resource2-active'), TEST_EDITOR_INPUT_ID);\n\t\teditor = await service.openEditor(input, { pinned: true });\n\t\tassertActiveEditorChangedEvent(true);\n\t\tassertVisibleEditorsChangedEvent(true);\n\n\t\teditor = await service.openEditor(otherInput, { pinned: true });\n\t\tassertActiveEditorChangedEvent(true);\n\t\tassertVisibleEditorsChangedEvent(true);\n\n\t\tgroup.moveEditor(otherInput, group, { index: 0 });\n\t\tassertActiveEditorChangedEvent(false);\n\t\tassertVisibleEditorsChangedEvent(false);\n\n\t\tawait group.closeAllEditors();\n\t\tassertActiveEditorChangedEvent(true);\n\t\tassertVisibleEditorsChangedEvent(true);\n\n\t\t// 9.) close editor in inactive group (recreate inputs that got disposed)\n\t\tinput = createTestFileEditorInput(URI.parse('my://resource-active'), TEST_EDITOR_INPUT_ID);\n\t\totherInput = createTestFileEditorInput(URI.parse('my://resource2-active'), TEST_EDITOR_INPUT_ID);\n\t\teditor = await service.openEditor(input, { pinned: true });\n\t\tassertActiveEditorChangedEvent(true);\n\t\tassertVisibleEditorsChangedEvent(true);\n\n\t\trightGroup = part.addGroup(part.activeGroup, GroupDirection.RIGHT);\n\t\tassertActiveEditorChangedEvent(false);\n\t\tassertVisibleEditorsChangedEvent(false);\n\n\t\tawait rightGroup.openEditor(otherInput);\n\t\tassertActiveEditorChangedEvent(true);\n\t\tassertVisibleEditorsChangedEvent(true);\n\n\t\tawait closeEditorAndWaitForNextToOpen(group, input);\n\t\tassertActiveEditorChangedEvent(false);\n\t\tassertVisibleEditorsChangedEvent(true);\n\n\t\t// cleanup\n\t\tactiveEditorChangeListener.dispose();\n\t\tvisibleEditorChangeListener.dispose();\n\t});\n\n\ttest('editors change event', async function () {\n\t\tconst [part, service] = await createEditorService();\n\t\tconst rootGroup = part.activeGroup;\n\n\t\tlet input = createTestFileEditorInput(URI.parse('my://resource-active'), TEST_EDITOR_INPUT_ID);\n\t\tlet otherInput = createTestFileEditorInput(URI.parse('my://resource2-active'), TEST_EDITOR_INPUT_ID);\n\n\t\tlet editorsChangeEventCounter = 0;\n\t\tasync function assertEditorsChangeEvent(fn: () => Promise<unknown>, expected: number) {\n\t\t\tconst p = Event.toPromise(service.onDidEditorsChange);\n\t\t\tawait fn();\n\t\t\tawait p;\n\t\t\teditorsChangeEventCounter++;\n\n\t\t\tassert.strictEqual(editorsChangeEventCounter, expected);\n\t\t}\n\n\t\t// open\n\t\tawait assertEditorsChangeEvent(() => service.openEditor(input, { pinned: true }), 1);\n\n\t\t// open (other)\n\t\tawait assertEditorsChangeEvent(() => service.openEditor(otherInput, { pinned: true }), 2);\n\n\t\t// close (inactive)\n\t\tawait assertEditorsChangeEvent(() => rootGroup.closeEditor(input), 3);\n\n\t\t// close (active)\n\t\tawait assertEditorsChangeEvent(() => rootGroup.closeEditor(otherInput), 4);\n\n\t\tinput = createTestFileEditorInput(URI.parse('my://resource-active'), TEST_EDITOR_INPUT_ID);\n\t\totherInput = createTestFileEditorInput(URI.parse('my://resource2-active'), TEST_EDITOR_INPUT_ID);\n\n\t\t// open editors\n\t\tawait assertEditorsChangeEvent(() => service.openEditors([{ editor: input, options: { pinned: true } }, { editor: otherInput, options: { pinned: true } }]), 5);\n\n\t\t// active editor change\n\t\tawait assertEditorsChangeEvent(() => service.openEditor(otherInput), 6);\n\n\t\t// move editor (in group)\n\t\tawait assertEditorsChangeEvent(() => service.openEditor(input, { pinned: true, index: 1 }), 7);\n\n\t\tconst rightGroup = part.addGroup(part.activeGroup, GroupDirection.RIGHT);\n\t\tawait assertEditorsChangeEvent(async () => rootGroup.moveEditor(input, rightGroup), 8);\n\n\t\t// move group\n\t\tawait assertEditorsChangeEvent(async () => part.moveGroup(rightGroup, rootGroup, GroupDirection.LEFT), 9);\n\t});\n\n\ttest('two active editor change events when opening editor to the side', async function () {\n\t\tconst [, service] = await createEditorService();\n\n\t\tconst input = createTestFileEditorInput(URI.parse('my://resource-active'), TEST_EDITOR_INPUT_ID);\n\n\t\tlet activeEditorChangeEvents = 0;\n\t\tconst activeEditorChangeListener = service.onDidActiveEditorChange(() => {\n\t\t\tactiveEditorChangeEvents++;\n\t\t});\n\n\t\tfunction assertActiveEditorChangedEvent(expected: number) {\n\t\t\tassert.strictEqual(activeEditorChangeEvents, expected, `Unexpected active editor change state (got ${activeEditorChangeEvents}, expected ${expected})`);\n\t\t\tactiveEditorChangeEvents = 0;\n\t\t}\n\n\t\tawait service.openEditor(input, { pinned: true });\n\t\tassertActiveEditorChangedEvent(1);\n\n\t\tawait service.openEditor(input, { pinned: true }, SIDE_GROUP);\n\n\t\t// we expect 2 active editor change events: one for the fact that the\n\t\t// active editor is now in the side group but also one for when the\n\t\t// editor has finished loading. we used to ignore that second change\n\t\t// event, however many listeners are interested on the active editor\n\t\t// when it has fully loaded (e.g. a model is set). as such, we cannot\n\t\t// simply ignore that second event from the editor service, even though\n\t\t// the actual editor input is the same\n\t\tassertActiveEditorChangedEvent(2);\n\n\t\t// cleanup\n\t\tactiveEditorChangeListener.dispose();\n\t});\n\n\ttest('activeTextEditorControl / activeTextEditorMode', async () => {\n\t\tconst [, service] = await createEditorService();\n\n\t\t// Open untitled input\n\t\tconst editor = await service.openEditor({ resource: undefined });\n\n\t\tassert.strictEqual(service.activeEditorPane, editor);\n\t\tassert.strictEqual(service.activeTextEditorControl, editor?.getControl());\n\t\tassert.strictEqual(service.activeTextEditorLanguageId, PLAINTEXT_LANGUAGE_ID);\n\t});\n\n\ttest('openEditor returns undefined when inactive', async function () {\n\t\tconst [, service] = await createEditorService();\n\n\t\tconst input = createTestFileEditorInput(URI.parse('my://resource-active'), TEST_EDITOR_INPUT_ID);\n\t\tconst otherInput = createTestFileEditorInput(URI.parse('my://resource2-inactive'), TEST_EDITOR_INPUT_ID);\n\n\t\tconst editor = await service.openEditor(input, { pinned: true });\n\t\tassert.ok(editor);\n\n\t\tconst otherEditor = await service.openEditor(otherInput, { inactive: true });\n\t\tassert.ok(!otherEditor);\n\t});\n\n\ttest('openEditor shows placeholder when opening fails', async function () {\n\t\tconst [, service] = await createEditorService();\n\n\t\tconst failingInput = createTestFileEditorInput(URI.parse('my://resource-failing'), TEST_EDITOR_INPUT_ID);\n\t\tfailingInput.setFailToOpen();\n\n\t\tconst failingEditor = await service.openEditor(failingInput);\n\t\tassert.ok(failingEditor instanceof ErrorPlaceholderEditor);\n\t});\n\n\ttest('openEditor shows placeholder when restoring fails', async function () {\n\t\tconst [, service] = await createEditorService();\n\n\t\tconst input = createTestFileEditorInput(URI.parse('my://resource-active'), TEST_EDITOR_INPUT_ID);\n\t\tconst failingInput = createTestFileEditorInput(URI.parse('my://resource-failing'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait service.openEditor(input, { pinned: true });\n\t\tawait service.openEditor(failingInput, { inactive: true });\n\n\t\tfailingInput.setFailToOpen();\n\t\tconst failingEditor = await service.openEditor(failingInput);\n\t\tassert.ok(failingEditor instanceof ErrorPlaceholderEditor);\n\t});\n\n\ttest('save, saveAll, revertAll', async function () {\n\t\tconst [part, service] = await createEditorService();\n\n\t\tconst input1 = createTestFileEditorInput(URI.parse('my://resource1'), TEST_EDITOR_INPUT_ID);\n\t\tinput1.dirty = true;\n\t\tconst input2 = createTestFileEditorInput(URI.parse('my://resource2'), TEST_EDITOR_INPUT_ID);\n\t\tinput2.dirty = true;\n\t\tconst sameInput1 = createTestFileEditorInput(URI.parse('my://resource1'), TEST_EDITOR_INPUT_ID);\n\t\tsameInput1.dirty = true;\n\n\t\tconst rootGroup = part.activeGroup;\n\n\t\tawait service.openEditor(input1, { pinned: true });\n\t\tawait service.openEditor(input2, { pinned: true });\n\t\tawait service.openEditor(sameInput1, { pinned: true }, SIDE_GROUP);\n\n\t\tconst res1 = await service.save({ groupId: rootGroup.id, editor: input1 });\n\t\tassert.strictEqual(res1.success, true);\n\t\tassert.strictEqual(res1.editors[0], input1);\n\t\tassert.strictEqual(input1.gotSaved, true);\n\n\t\tinput1.gotSaved = false;\n\t\tinput1.gotSavedAs = false;\n\t\tinput1.gotReverted = false;\n\n\t\tinput1.dirty = true;\n\t\tinput2.dirty = true;\n\t\tsameInput1.dirty = true;\n\n\t\tconst res2 = await service.save({ groupId: rootGroup.id, editor: input1 }, { saveAs: true });\n\t\tassert.strictEqual(res2.success, true);\n\t\tassert.strictEqual(res2.editors[0], input1);\n\t\tassert.strictEqual(input1.gotSavedAs, true);\n\n\t\tinput1.gotSaved = false;\n\t\tinput1.gotSavedAs = false;\n\t\tinput1.gotReverted = false;\n\n\t\tinput1.dirty = true;\n\t\tinput2.dirty = true;\n\t\tsameInput1.dirty = true;\n\n\t\tconst revertRes = await service.revertAll();\n\t\tassert.strictEqual(revertRes, true);\n\t\tassert.strictEqual(input1.gotReverted, true);\n\n\t\tinput1.gotSaved = false;\n\t\tinput1.gotSavedAs = false;\n\t\tinput1.gotReverted = false;\n\n\t\tinput1.dirty = true;\n\t\tinput2.dirty = true;\n\t\tsameInput1.dirty = true;\n\n\t\tconst res3 = await service.saveAll();\n\t\tassert.strictEqual(res3.success, true);\n\t\tassert.strictEqual(res3.editors.length, 2);\n\t\tassert.strictEqual(input1.gotSaved, true);\n\t\tassert.strictEqual(input2.gotSaved, true);\n\n\t\tinput1.gotSaved = false;\n\t\tinput1.gotSavedAs = false;\n\t\tinput1.gotReverted = false;\n\t\tinput2.gotSaved = false;\n\t\tinput2.gotSavedAs = false;\n\t\tinput2.gotReverted = false;\n\n\t\tinput1.dirty = true;\n\t\tinput2.dirty = true;\n\t\tsameInput1.dirty = true;\n\n\t\tawait service.saveAll({ saveAs: true });\n\n\t\tassert.strictEqual(input1.gotSavedAs, true);\n\t\tassert.strictEqual(input2.gotSavedAs, true);\n\n\t\t// services dedupes inputs automatically\n\t\tassert.strictEqual(sameInput1.gotSaved, false);\n\t\tassert.strictEqual(sameInput1.gotSavedAs, false);\n\t\tassert.strictEqual(sameInput1.gotReverted, false);\n\t});\n\n\ttest('saveAll, revertAll (sticky editor)', async function () {\n\t\tconst [, service] = await createEditorService();\n\n\t\tconst input1 = createTestFileEditorInput(URI.parse('my://resource1'), TEST_EDITOR_INPUT_ID);\n\t\tinput1.dirty = true;\n\t\tconst input2 = createTestFileEditorInput(URI.parse('my://resource2'), TEST_EDITOR_INPUT_ID);\n\t\tinput2.dirty = true;\n\t\tconst sameInput1 = createTestFileEditorInput(URI.parse('my://resource1'), TEST_EDITOR_INPUT_ID);\n\t\tsameInput1.dirty = true;\n\n\t\tawait service.openEditor(input1, { pinned: true, sticky: true });\n\t\tawait service.openEditor(input2, { pinned: true });\n\t\tawait service.openEditor(sameInput1, { pinned: true }, SIDE_GROUP);\n\n\t\tconst revertRes = await service.revertAll({ excludeSticky: true });\n\t\tassert.strictEqual(revertRes, true);\n\t\tassert.strictEqual(input1.gotReverted, false);\n\t\tassert.strictEqual(sameInput1.gotReverted, true);\n\n\t\tinput1.gotSaved = false;\n\t\tinput1.gotSavedAs = false;\n\t\tinput1.gotReverted = false;\n\n\t\tsameInput1.gotSaved = false;\n\t\tsameInput1.gotSavedAs = false;\n\t\tsameInput1.gotReverted = false;\n\n\t\tinput1.dirty = true;\n\t\tinput2.dirty = true;\n\t\tsameInput1.dirty = true;\n\n\t\tconst saveRes = await service.saveAll({ excludeSticky: true });\n\t\tassert.strictEqual(saveRes.success, true);\n\t\tassert.strictEqual(saveRes.editors.length, 2);\n\t\tassert.strictEqual(input1.gotSaved, false);\n\t\tassert.strictEqual(input2.gotSaved, true);\n\t\tassert.strictEqual(sameInput1.gotSaved, true);\n\t});\n\n\ttest('saveAll, revertAll untitled (exclude untitled)', async function () {\n\t\tawait testSaveRevertUntitled({}, false, false);\n\t\tawait testSaveRevertUntitled({ includeUntitled: false }, false, false);\n\t});\n\n\ttest('saveAll, revertAll untitled (include untitled)', async function () {\n\t\tawait testSaveRevertUntitled({ includeUntitled: true }, true, false);\n\t\tawait testSaveRevertUntitled({ includeUntitled: { includeScratchpad: false } }, true, false);\n\t});\n\n\ttest('saveAll, revertAll untitled (include scratchpad)', async function () {\n\t\tawait testSaveRevertUntitled({ includeUntitled: { includeScratchpad: true } }, true, true);\n\t});\n\n\tasync function testSaveRevertUntitled(options: IBaseSaveRevertAllEditorOptions, expectUntitled: boolean, expectScratchpad: boolean) {\n\t\tconst [, service] = await createEditorService();\n\t\tconst input1 = createTestFileEditorInput(URI.parse('my://resource1'), TEST_EDITOR_INPUT_ID);\n\t\tinput1.dirty = true;\n\t\tconst untitledInput = createTestFileEditorInput(URI.parse('my://resource2'), TEST_EDITOR_INPUT_ID);\n\t\tuntitledInput.dirty = true;\n\t\tuntitledInput.capabilities = EditorInputCapabilities.Untitled;\n\t\tconst scratchpadInput = createTestFileEditorInput(URI.parse('my://resource3'), TEST_EDITOR_INPUT_ID);\n\t\tscratchpadInput.modified = true;\n\t\tscratchpadInput.capabilities = EditorInputCapabilities.Scratchpad | EditorInputCapabilities.Untitled;\n\n\t\tawait service.openEditor(input1, { pinned: true, sticky: true });\n\t\tawait service.openEditor(untitledInput, { pinned: true });\n\t\tawait service.openEditor(scratchpadInput, { pinned: true });\n\n\t\tconst revertRes = await service.revertAll(options);\n\t\tassert.strictEqual(revertRes, true);\n\t\tassert.strictEqual(input1.gotReverted, true);\n\t\tassert.strictEqual(untitledInput.gotReverted, expectUntitled);\n\t\tassert.strictEqual(scratchpadInput.gotReverted, expectScratchpad);\n\n\t\tinput1.gotSaved = false;\n\t\tuntitledInput.gotSavedAs = false;\n\t\tscratchpadInput.gotReverted = false;\n\n\t\tinput1.gotSaved = false;\n\t\tuntitledInput.gotSavedAs = false;\n\t\tscratchpadInput.gotReverted = false;\n\n\t\tinput1.dirty = true;\n\t\tuntitledInput.dirty = true;\n\t\tscratchpadInput.modified = true;\n\n\t\tconst saveRes = await service.saveAll(options);\n\t\tassert.strictEqual(saveRes.success, true);\n\t\tassert.strictEqual(saveRes.editors.length, expectScratchpad ? 3 : expectUntitled ? 2 : 1);\n\t\tassert.strictEqual(input1.gotSaved, true);\n\t\tassert.strictEqual(untitledInput.gotSaved, expectUntitled);\n\t\tassert.strictEqual(scratchpadInput.gotSaved, expectScratchpad);\n\t}\n\n\ttest('file delete closes editor', async function () {\n\t\treturn testFileDeleteEditorClose(false);\n\t});\n\n\ttest('file delete leaves dirty editors open', function () {\n\t\treturn testFileDeleteEditorClose(true);\n\t});\n\n\tasync function testFileDeleteEditorClose(dirty: boolean): Promise<void> {\n\t\tconst [part, service, accessor] = await createEditorService();\n\n\t\tconst input1 = createTestFileEditorInput(URI.parse('my://resource1'), TEST_EDITOR_INPUT_ID);\n\t\tinput1.dirty = dirty;\n\t\tconst input2 = createTestFileEditorInput(URI.parse('my://resource2'), TEST_EDITOR_INPUT_ID);\n\t\tinput2.dirty = dirty;\n\n\t\tconst rootGroup = part.activeGroup;\n\n\t\tawait service.openEditor(input1, { pinned: true });\n\t\tawait service.openEditor(input2, { pinned: true });\n\n\t\tassert.strictEqual(rootGroup.activeEditor, input2);\n\n\t\tconst activeEditorChangePromise = awaitActiveEditorChange(service);\n\t\taccessor.fileService.fireAfterOperation(new FileOperationEvent(input2.resource, FileOperation.DELETE));\n\t\tif (!dirty) {\n\t\t\tawait activeEditorChangePromise;\n\t\t}\n\n\t\tif (dirty) {\n\t\t\tassert.strictEqual(rootGroup.activeEditor, input2);\n\t\t} else {\n\t\t\tassert.strictEqual(rootGroup.activeEditor, input1);\n\t\t}\n\t}\n\n\ttest('file move asks input to move', async function () {\n\t\tconst [part, service, accessor] = await createEditorService();\n\n\t\tconst input1 = createTestFileEditorInput(URI.parse('my://resource1'), TEST_EDITOR_INPUT_ID);\n\t\tconst movedInput = createTestFileEditorInput(URI.parse('my://resource2'), TEST_EDITOR_INPUT_ID);\n\t\tinput1.movedEditor = { editor: movedInput };\n\n\t\tconst rootGroup = part.activeGroup;\n\n\t\tawait service.openEditor(input1, { pinned: true });\n\n\t\tconst activeEditorChangePromise = awaitActiveEditorChange(service);\n\t\taccessor.fileService.fireAfterOperation(new FileOperationEvent(input1.resource, FileOperation.MOVE, {\n\t\t\tresource: movedInput.resource,\n\t\t\tctime: 0,\n\t\t\tetag: '',\n\t\t\tisDirectory: false,\n\t\t\tisFile: true,\n\t\t\tmtime: 0,\n\t\t\tname: 'resource2',\n\t\t\tsize: 0,\n\t\t\tisSymbolicLink: false,\n\t\t\treadonly: false,\n\t\t\tlocked: false,\n\t\t\tchildren: undefined\n\t\t}));\n\t\tawait activeEditorChangePromise;\n\n\t\tassert.strictEqual(rootGroup.activeEditor, movedInput);\n\t});\n\n\tfunction awaitActiveEditorChange(editorService: IEditorService): Promise<void> {\n\t\treturn Event.toPromise(Event.once(editorService.onDidActiveEditorChange));\n\t}\n\n\ttest('file watcher gets installed for out of workspace files', async function () {\n\t\tconst [, service, accessor] = await createEditorService();\n\n\t\tconst input1 = createTestFileEditorInput(URI.parse('file://resource1'), TEST_EDITOR_INPUT_ID);\n\t\tconst input2 = createTestFileEditorInput(URI.parse('file://resource2'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait service.openEditor(input1, { pinned: true });\n\t\tassert.strictEqual(accessor.fileService.watches.length, 1);\n\t\tassert.strictEqual(accessor.fileService.watches[0].toString(), input1.resource.toString());\n\n\t\tconst editor = await service.openEditor(input2, { pinned: true });\n\t\tassert.strictEqual(accessor.fileService.watches.length, 1);\n\t\tassert.strictEqual(accessor.fileService.watches[0].toString(), input2.resource.toString());\n\n\t\tawait editor?.group.closeAllEditors();\n\t\tassert.strictEqual(accessor.fileService.watches.length, 0);\n\t});\n\n\ttest('activeEditorPane scopedContextKeyService', async function () {\n\t\tconst instantiationService = workbenchInstantiationService({ contextKeyService: instantiationService => instantiationService.createInstance(MockScopableContextKeyService) }, disposables);\n\t\tconst [part, service] = await createEditorService(instantiationService);\n\n\t\tconst input1 = createTestFileEditorInput(URI.parse('file://resource1'), TEST_EDITOR_INPUT_ID);\n\t\tcreateTestFileEditorInput(URI.parse('file://resource2'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait service.openEditor(input1, { pinned: true });\n\n\t\tconst editorContextKeyService = service.activeEditorPane?.scopedContextKeyService;\n\t\tassert.ok(!!editorContextKeyService);\n\t\tassert.strictEqual(editorContextKeyService, part.activeGroup.activeEditorPane?.scopedContextKeyService);\n\t});\n\n\ttest('editorResolverService - openEditor', async function () {\n\t\tconst [, service, accessor] = await createEditorService();\n\t\tconst editorResolverService = accessor.editorResolverService;\n\t\tconst textEditorService = accessor.textEditorService;\n\n\t\tlet editorCount = 0;\n\n\t\tconst registrationDisposable = editorResolverService.registerEditor(\n\t\t\t'*.md',\n\t\t\t{\n\t\t\t\tid: 'TestEditor',\n\t\t\t\tlabel: 'Test Editor',\n\t\t\t\tdetail: 'Test Editor Provider',\n\t\t\t\tpriority: RegisteredEditorPriority.builtin\n\t\t\t},\n\t\t\t{},\n\t\t\t{\n\t\t\t\tcreateEditorInput: (editorInput) => {\n\t\t\t\t\teditorCount++;\n\t\t\t\t\treturn ({ editor: textEditorService.createTextEditor(editorInput) });\n\t\t\t\t},\n\t\t\t\tcreateDiffEditorInput: diffEditor => ({ editor: textEditorService.createTextEditor(diffEditor) })\n\t\t\t}\n\t\t);\n\t\tassert.strictEqual(editorCount, 0);\n\n\t\tconst input1 = { resource: URI.parse('file://test/path/resource1.txt') };\n\t\tconst input2 = { resource: URI.parse('file://test/path/resource1.md') };\n\n\t\t// Open editor input 1 and it shouln't trigger override as the glob doesn't match\n\t\tawait service.openEditor(input1);\n\t\tassert.strictEqual(editorCount, 0);\n\n\t\t// Open editor input 2 and it should trigger override as the glob doesn match\n\t\tawait service.openEditor(input2);\n\t\tassert.strictEqual(editorCount, 1);\n\n\t\t// Because we specify an override we shouldn't see it triggered even if it matches\n\t\tawait service.openEditor({ ...input2, options: { override: 'default' } });\n\t\tassert.strictEqual(editorCount, 1);\n\n\t\tregistrationDisposable.dispose();\n\t});\n\n\ttest('editorResolverService - openEditors', async function () {\n\t\tconst [, service, accessor] = await createEditorService();\n\t\tconst editorResolverService = accessor.editorResolverService;\n\t\tconst textEditorService = accessor.textEditorService;\n\n\t\tlet editorCount = 0;\n\n\t\tconst registrationDisposable = editorResolverService.registerEditor(\n\t\t\t'*.md',\n\t\t\t{\n\t\t\t\tid: 'TestEditor',\n\t\t\t\tlabel: 'Test Editor',\n\t\t\t\tdetail: 'Test Editor Provider',\n\t\t\t\tpriority: RegisteredEditorPriority.builtin\n\t\t\t},\n\t\t\t{},\n\t\t\t{\n\t\t\t\tcreateEditorInput: (editorInput) => {\n\t\t\t\t\teditorCount++;\n\t\t\t\t\treturn ({ editor: textEditorService.createTextEditor(editorInput) });\n\t\t\t\t},\n\t\t\t\tcreateDiffEditorInput: diffEditor => ({ editor: textEditorService.createTextEditor(diffEditor) })\n\t\t\t}\n\t\t);\n\t\tassert.strictEqual(editorCount, 0);\n\n\t\tconst input1 = createTestFileEditorInput(URI.parse('file://test/path/resource1.txt'), TEST_EDITOR_INPUT_ID).toUntyped();\n\t\tconst input2 = createTestFileEditorInput(URI.parse('file://test/path/resource2.txt'), TEST_EDITOR_INPUT_ID).toUntyped();\n\t\tconst input3 = createTestFileEditorInput(URI.parse('file://test/path/resource3.md'), TEST_EDITOR_INPUT_ID).toUntyped();\n\t\tconst input4 = createTestFileEditorInput(URI.parse('file://test/path/resource4.md'), TEST_EDITOR_INPUT_ID).toUntyped();\n\n\t\tassert.ok(input1);\n\t\tassert.ok(input2);\n\t\tassert.ok(input3);\n\t\tassert.ok(input4);\n\n\t\t// Open editor inputs\n\t\tawait service.openEditors([input1, input2, input3, input4]);\n\t\t// Only two matched the factory glob\n\t\tassert.strictEqual(editorCount, 2);\n\n\t\tregistrationDisposable.dispose();\n\t});\n\n\ttest('editorResolverService - replaceEditors', async function () {\n\t\tconst [part, service, accessor] = await createEditorService();\n\t\tconst editorResolverService = accessor.editorResolverService;\n\t\tconst textEditorService = accessor.textEditorService;\n\n\t\tlet editorCount = 0;\n\n\t\tconst registrationDisposable = editorResolverService.registerEditor(\n\t\t\t'*.md',\n\t\t\t{\n\t\t\t\tid: 'TestEditor',\n\t\t\t\tlabel: 'Test Editor',\n\t\t\t\tdetail: 'Test Editor Provider',\n\t\t\t\tpriority: RegisteredEditorPriority.builtin\n\t\t\t},\n\t\t\t{},\n\t\t\t{\n\t\t\t\tcreateEditorInput: (editorInput) => {\n\t\t\t\t\teditorCount++;\n\t\t\t\t\treturn ({ editor: textEditorService.createTextEditor(editorInput) });\n\t\t\t\t},\n\t\t\t\tcreateDiffEditorInput: diffEditor => ({ editor: textEditorService.createTextEditor(diffEditor) })\n\t\t\t}\n\t\t);\n\n\t\tassert.strictEqual(editorCount, 0);\n\n\t\tconst input1 = createTestFileEditorInput(URI.parse('file://test/path/resource2.md'), TEST_EDITOR_INPUT_ID);\n\t\tconst untypedInput1 = input1.toUntyped();\n\t\tassert.ok(untypedInput1);\n\n\t\t// Open editor input 1 and it shouldn't trigger because typed inputs aren't overriden\n\t\tawait service.openEditor(input1);\n\t\tassert.strictEqual(editorCount, 0);\n\n\t\tawait service.replaceEditors([{\n\t\t\teditor: input1,\n\t\t\treplacement: untypedInput1,\n\t\t}], part.activeGroup);\n\t\tassert.strictEqual(editorCount, 1);\n\n\t\tregistrationDisposable.dispose();\n\t});\n\n\ttest('closeEditor', async () => {\n\t\tconst [part, service] = await createEditorService();\n\n\t\tconst input = createTestFileEditorInput(URI.parse('my://resource-openEditors'), TEST_EDITOR_INPUT_ID);\n\t\tconst otherInput = createTestFileEditorInput(URI.parse('my://resource2-openEditors'), TEST_EDITOR_INPUT_ID);\n\n\t\t// Open editors\n\t\tawait service.openEditors([{ editor: input }, { editor: otherInput }]);\n\t\tassert.strictEqual(part.activeGroup.count, 2);\n\n\t\t// Close editor\n\t\tawait service.closeEditor({ editor: input, groupId: part.activeGroup.id });\n\t\tassert.strictEqual(part.activeGroup.count, 1);\n\n\t\tawait service.closeEditor({ editor: input, groupId: part.activeGroup.id });\n\t\tassert.strictEqual(part.activeGroup.count, 1);\n\n\t\tawait service.closeEditor({ editor: otherInput, groupId: part.activeGroup.id });\n\t\tassert.strictEqual(part.activeGroup.count, 0);\n\n\t\tawait service.closeEditor({ editor: otherInput, groupId: 999 });\n\t\tassert.strictEqual(part.activeGroup.count, 0);\n\t});\n\n\ttest('closeEditors', async () => {\n\t\tconst [part, service] = await createEditorService();\n\n\t\tconst input = createTestFileEditorInput(URI.parse('my://resource-openEditors'), TEST_EDITOR_INPUT_ID);\n\t\tconst otherInput = createTestFileEditorInput(URI.parse('my://resource2-openEditors'), TEST_EDITOR_INPUT_ID);\n\n\t\t// Open editors\n\t\tawait service.openEditors([{ editor: input }, { editor: otherInput }]);\n\t\tassert.strictEqual(part.activeGroup.count, 2);\n\n\t\t// Close editors\n\t\tawait service.closeEditors([{ editor: input, groupId: part.activeGroup.id }, { editor: otherInput, groupId: part.activeGroup.id }]);\n\t\tassert.strictEqual(part.activeGroup.count, 0);\n\t});\n\n\ttest('findEditors (in group)', async () => {\n\t\tconst [part, service] = await createEditorService();\n\n\t\tconst input = createTestFileEditorInput(URI.parse('my://resource-openEditors'), TEST_EDITOR_INPUT_ID);\n\t\tconst otherInput = createTestFileEditorInput(URI.parse('my://resource2-openEditors'), TEST_EDITOR_INPUT_ID);\n\n\t\t// Open editors\n\t\tawait service.openEditors([{ editor: input }, { editor: otherInput }]);\n\t\tassert.strictEqual(part.activeGroup.count, 2);\n\n\t\t// Try using find editors for opened editors\n\t\t{\n\t\t\tconst found1 = service.findEditors(input.resource, undefined, part.activeGroup);\n\t\t\tassert.strictEqual(found1.length, 1);\n\t\t\tassert.strictEqual(found1[0], input);\n\n\t\t\tconst found2 = service.findEditors(input, undefined, part.activeGroup);\n\t\t\tassert.strictEqual(found2, input);\n\t\t}\n\t\t{\n\t\t\tconst found1 = service.findEditors(otherInput.resource, undefined, part.activeGroup);\n\t\t\tassert.strictEqual(found1.length, 1);\n\t\t\tassert.strictEqual(found1[0], otherInput);\n\n\t\t\tconst found2 = service.findEditors(otherInput, undefined, part.activeGroup);\n\t\t\tassert.strictEqual(found2, otherInput);\n\t\t}\n\n\t\t// Make sure we don't find non-opened editors\n\t\t{\n\t\t\tconst found1 = service.findEditors(URI.parse('my://no-such-resource'), undefined, part.activeGroup);\n\t\t\tassert.strictEqual(found1.length, 0);\n\n\t\t\tconst found2 = service.findEditors({ resource: URI.parse('my://no-such-resource'), typeId: '', editorId: TEST_EDITOR_INPUT_ID }, undefined, part.activeGroup);\n\t\t\tassert.strictEqual(found2, undefined);\n\t\t}\n\n\t\t// Make sure we don't find editors across groups\n\t\t{\n\t\t\tconst newEditor = await service.openEditor(createTestFileEditorInput(URI.parse('my://other-group-resource'), TEST_EDITOR_INPUT_ID), { pinned: true, preserveFocus: true }, SIDE_GROUP);\n\n\t\t\tconst found1 = service.findEditors(input.resource, undefined, newEditor!.group!.id);\n\t\t\tassert.strictEqual(found1.length, 0);\n\n\t\t\tconst found2 = service.findEditors(input, undefined, newEditor!.group!.id);\n\t\t\tassert.strictEqual(found2, undefined);\n\t\t}\n\n\t\t// Check we don't find editors after closing them\n\t\tawait part.activeGroup.closeAllEditors();\n\t\t{\n\t\t\tconst found1 = service.findEditors(input.resource, undefined, part.activeGroup);\n\t\t\tassert.strictEqual(found1.length, 0);\n\n\t\t\tconst found2 = service.findEditors(input, undefined, part.activeGroup);\n\t\t\tassert.strictEqual(found2, undefined);\n\t\t}\n\t});\n\n\ttest('findEditors (across groups)', async () => {\n\t\tconst [part, service] = await createEditorService();\n\n\t\tconst rootGroup = part.activeGroup;\n\n\t\tconst input = createTestFileEditorInput(URI.parse('my://resource-openEditors'), TEST_EDITOR_INPUT_ID);\n\t\tconst otherInput = createTestFileEditorInput(URI.parse('my://resource2-openEditors'), TEST_EDITOR_INPUT_ID);\n\n\t\t// Open editors\n\t\tawait service.openEditors([{ editor: input }, { editor: otherInput }]);\n\t\tconst sideEditor = await service.openEditor(input, { pinned: true }, SIDE_GROUP);\n\n\t\t// Try using find editors for opened editors\n\t\t{\n\t\t\tconst found1 = service.findEditors(input.resource);\n\t\t\tassert.strictEqual(found1.length, 2);\n\t\t\tassert.strictEqual(found1[0].editor, input);\n\t\t\tassert.strictEqual(found1[0].groupId, sideEditor?.group.id);\n\t\t\tassert.strictEqual(found1[1].editor, input);\n\t\t\tassert.strictEqual(found1[1].groupId, rootGroup.id);\n\n\t\t\tconst found2 = service.findEditors(input);\n\t\t\tassert.strictEqual(found2.length, 2);\n\t\t\tassert.strictEqual(found2[0].editor, input);\n\t\t\tassert.strictEqual(found2[0].groupId, sideEditor?.group.id);\n\t\t\tassert.strictEqual(found2[1].editor, input);\n\t\t\tassert.strictEqual(found2[1].groupId, rootGroup.id);\n\t\t}\n\t\t{\n\t\t\tconst found1 = service.findEditors(otherInput.resource);\n\t\t\tassert.strictEqual(found1.length, 1);\n\t\t\tassert.strictEqual(found1[0].editor, otherInput);\n\t\t\tassert.strictEqual(found1[0].groupId, rootGroup.id);\n\n\t\t\tconst found2 = service.findEditors(otherInput);\n\t\t\tassert.strictEqual(found2.length, 1);\n\t\t\tassert.strictEqual(found2[0].editor, otherInput);\n\t\t\tassert.strictEqual(found2[0].groupId, rootGroup.id);\n\t\t}\n\n\t\t// Make sure we don't find non-opened editors\n\t\t{\n\t\t\tconst found1 = service.findEditors(URI.parse('my://no-such-resource'));\n\t\t\tassert.strictEqual(found1.length, 0);\n\n\t\t\tconst found2 = service.findEditors({ resource: URI.parse('my://no-such-resource'), typeId: '', editorId: TEST_EDITOR_INPUT_ID });\n\t\t\tassert.strictEqual(found2.length, 0);\n\t\t}\n\n\t\t// Check we don't find editors after closing them\n\t\tawait rootGroup.closeAllEditors();\n\t\tawait sideEditor?.group.closeAllEditors();\n\t\t{\n\t\t\tconst found1 = service.findEditors(input.resource);\n\t\t\tassert.strictEqual(found1.length, 0);\n\n\t\t\tconst found2 = service.findEditors(input);\n\t\t\tassert.strictEqual(found2.length, 0);\n\t\t}\n\t});\n\n\ttest('findEditors (support side by side via options)', async () => {\n\t\tconst [, service] = await createEditorService();\n\n\t\tconst secondaryInput = createTestFileEditorInput(URI.parse('my://resource-findEditors-secondary'), TEST_EDITOR_INPUT_ID);\n\t\tconst primaryInput = createTestFileEditorInput(URI.parse('my://resource-findEditors-primary'), TEST_EDITOR_INPUT_ID);\n\n\t\tconst sideBySideInput = new SideBySideEditorInput(undefined, undefined, secondaryInput, primaryInput, service);\n\n\t\tawait service.openEditor(sideBySideInput, { pinned: true });\n\n\t\tlet foundEditors = service.findEditors(URI.parse('my://resource-findEditors-primary'));\n\t\tassert.strictEqual(foundEditors.length, 0);\n\n\t\tfoundEditors = service.findEditors(URI.parse('my://resource-findEditors-primary'), { supportSideBySide: SideBySideEditor.PRIMARY });\n\t\tassert.strictEqual(foundEditors.length, 1);\n\n\t\tfoundEditors = service.findEditors(URI.parse('my://resource-findEditors-secondary'), { supportSideBySide: SideBySideEditor.PRIMARY });\n\t\tassert.strictEqual(foundEditors.length, 0);\n\n\t\tfoundEditors = service.findEditors(URI.parse('my://resource-findEditors-primary'), { supportSideBySide: SideBySideEditor.SECONDARY });\n\t\tassert.strictEqual(foundEditors.length, 0);\n\n\t\tfoundEditors = service.findEditors(URI.parse('my://resource-findEditors-secondary'), { supportSideBySide: SideBySideEditor.SECONDARY });\n\t\tassert.strictEqual(foundEditors.length, 1);\n\n\t\tfoundEditors = service.findEditors(URI.parse('my://resource-findEditors-primary'), { supportSideBySide: SideBySideEditor.ANY });\n\t\tassert.strictEqual(foundEditors.length, 1);\n\n\t\tfoundEditors = service.findEditors(URI.parse('my://resource-findEditors-secondary'), { supportSideBySide: SideBySideEditor.ANY });\n\t\tassert.strictEqual(foundEditors.length, 1);\n\t});\n\n\ttest('side by side editor is not matching all other editors (https://github.com/microsoft/vscode/issues/132859)', async () => {\n\t\tconst [part, service] = await createEditorService();\n\n\t\tconst rootGroup = part.activeGroup;\n\n\t\tconst input = createTestFileEditorInput(URI.parse('my://resource-openEditors'), TEST_EDITOR_INPUT_ID);\n\t\tconst otherInput = createTestFileEditorInput(URI.parse('my://resource2-openEditors'), TEST_EDITOR_INPUT_ID);\n\t\tconst sideBySideInput = new SideBySideEditorInput(undefined, undefined, input, input, service);\n\t\tconst otherSideBySideInput = new SideBySideEditorInput(undefined, undefined, otherInput, otherInput, service);\n\n\t\tawait service.openEditor(sideBySideInput, undefined, SIDE_GROUP);\n\n\t\tpart.activateGroup(rootGroup);\n\n\t\tawait service.openEditor(otherSideBySideInput, { revealIfOpened: true, revealIfVisible: true });\n\n\t\tassert.strictEqual(rootGroup.count, 1);\n\t});\n\n\ttest('onDidCloseEditor indicates proper context when moving editor across groups', async () => {\n\t\tconst [part, service] = await createEditorService();\n\n\t\tconst rootGroup = part.activeGroup;\n\n\t\tconst input1 = createTestFileEditorInput(URI.parse('my://resource-onDidCloseEditor1'), TEST_EDITOR_INPUT_ID);\n\t\tconst input2 = createTestFileEditorInput(URI.parse('my://resource-onDidCloseEditor2'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait service.openEditor(input1, { pinned: true });\n\t\tawait service.openEditor(input2, { pinned: true });\n\n\t\tconst sidegroup = part.addGroup(rootGroup, GroupDirection.RIGHT);\n\n\t\tconst events: IEditorCloseEvent[] = [];\n\t\tdisposables.add(service.onDidCloseEditor(e => {\n\t\t\tevents.push(e);\n\t\t}));\n\n\t\trootGroup.moveEditor(input1, sidegroup);\n\n\t\tassert.strictEqual(events[0].context, EditorCloseContext.MOVE);\n\n\t\tawait sidegroup.closeEditor(input1);\n\n\t\tassert.strictEqual(events[1].context, EditorCloseContext.UNKNOWN);\n\t});\n\n\ttest('onDidCloseEditor indicates proper context when replacing an editor', async () => {\n\t\tconst [part, service] = await createEditorService();\n\n\t\tconst rootGroup = part.activeGroup;\n\n\t\tconst input1 = createTestFileEditorInput(URI.parse('my://resource-onDidCloseEditor1'), TEST_EDITOR_INPUT_ID);\n\t\tconst input2 = createTestFileEditorInput(URI.parse('my://resource-onDidCloseEditor2'), TEST_EDITOR_INPUT_ID);\n\n\t\tawait service.openEditor(input1, { pinned: true });\n\n\t\tconst events: IEditorCloseEvent[] = [];\n\t\tdisposables.add(service.onDidCloseEditor(e => {\n\t\t\tevents.push(e);\n\t\t}));\n\n\t\tawait rootGroup.replaceEditors([{ editor: input1, replacement: input2 }]);\n\n\t\tassert.strictEqual(events[0].context, EditorCloseContext.REPLACE);\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"],
  "mappings": "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",
  "names": ["group", "input", "instantiationService"]
}
