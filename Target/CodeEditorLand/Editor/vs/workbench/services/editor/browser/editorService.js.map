{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/editor/browser/editorService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { coalesce, distinct } from \"../../../../base/common/arrays.js\";\nimport { Promises, timeout } from \"../../../../base/common/async.js\";\nimport { Emitter, Event } from \"../../../../base/common/event.js\";\nimport { indexOfPath } from \"../../../../base/common/extpath.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n\tdispose,\n} from \"../../../../base/common/lifecycle.js\";\nimport { ResourceMap, ResourceSet } from \"../../../../base/common/map.js\";\nimport { joinPath } from \"../../../../base/common/resources.js\";\nimport { isUndefined } from \"../../../../base/common/types.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport {\n\ttype ICodeEditor,\n\ttype IDiffEditor,\n\tisCodeEditor,\n\tisCompositeEditor,\n\tisDiffEditor,\n} from \"../../../../editor/browser/editorBrowser.js\";\nimport {\n\ttype IConfigurationChangeEvent,\n\tIConfigurationService,\n} from \"../../../../platform/configuration/common/configuration.js\";\nimport type {\n\tEditorActivation,\n\tIEditorOptions,\n\tIResourceEditorInput,\n\tIResourceEditorInputIdentifier,\n\tITextResourceEditorInput,\n} from \"../../../../platform/editor/common/editor.js\";\nimport {\n\tFileChangeType,\n\tFileChangesEvent,\n\tFileOperation,\n\ttype FileOperationEvent,\n\tIFileService,\n} from \"../../../../platform/files/common/files.js\";\nimport { SyncDescriptor } from \"../../../../platform/instantiation/common/descriptors.js\";\nimport { registerSingleton } from \"../../../../platform/instantiation/common/extensions.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IUriIdentityService } from \"../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport { IWorkspaceContextService } from \"../../../../platform/workspace/common/workspace.js\";\nimport {\n\tIWorkspaceTrustRequestService,\n\tWorkspaceTrustUriResponse,\n} from \"../../../../platform/workspace/common/workspaceTrust.js\";\nimport type {\n\tEditorServiceImpl,\n\tIEditorGroupView,\n} from \"../../../browser/parts/editor/editor.js\";\nimport { EditorsObserver } from \"../../../browser/parts/editor/editorsObserver.js\";\nimport { SideBySideEditor as SideBySideEditorPane } from \"../../../browser/parts/editor/sideBySideEditor.js\";\nimport {\n\tEditorInputCapabilities,\n\ttype EditorInputWithOptions,\n\tEditorResourceAccessor,\n\tEditorsOrder,\n\ttype GroupIdentifier,\n\ttype IEditorCloseEvent,\n\ttype IEditorControl,\n\ttype IEditorIdentifier,\n\ttype IEditorPane,\n\ttype IEditorWillOpenEvent,\n\ttype IFindEditorOptions,\n\ttype IResourceDiffEditorInput,\n\ttype IRevertOptions,\n\ttype ITextDiffEditorPane,\n\ttype IUntitledTextResourceEditorInput,\n\ttype IUntypedEditorInput,\n\ttype IVisibleEditorPane,\n\ttype IWorkbenchEditorConfiguration,\n\tSaveReason,\n\tSideBySideEditor,\n\tisEditorInput,\n\tisEditorInputWithOptions,\n\tisEditorInputWithOptionsAndGroup,\n\tisResourceDiffEditorInput,\n\tisResourceEditorInput,\n\tisResourceMergeEditorInput,\n} from \"../../../common/editor.js\";\nimport { DiffEditorInput } from \"../../../common/editor/diffEditorInput.js\";\nimport { EditorInput } from \"../../../common/editor/editorInput.js\";\nimport { SideBySideEditorInput } from \"../../../common/editor/sideBySideEditorInput.js\";\nimport { IHostService } from \"../../host/browser/host.js\";\nimport { ITextEditorService } from \"../../textfile/common/textEditorService.js\";\nimport { findGroup } from \"../common/editorGroupFinder.js\";\nimport {\n\tGroupsOrder,\n\ttype ICloseEditorOptions,\n\ttype IEditorGroup,\n\ttype IEditorGroupsContainer,\n\tIEditorGroupsService,\n\ttype IEditorReplacement,\n\tisEditorReplacement,\n} from \"../common/editorGroupsService.js\";\nimport {\n\tIEditorResolverService,\n\tResolvedStatus,\n} from \"../common/editorResolverService.js\";\nimport {\n\ttype IBaseSaveRevertAllEditorOptions,\n\tIEditorService,\n\ttype IEditorsChangeEvent,\n\ttype IOpenEditorsOptions,\n\ttype IRevertAllEditorsOptions,\n\ttype ISaveAllEditorsOptions,\n\ttype ISaveEditorsOptions,\n\ttype ISaveEditorsResult,\n\ttype IUntypedEditorReplacement,\n\ttype PreferredGroup,\n\tisPreferredGroup,\n} from \"../common/editorService.js\";\n\nexport class EditorService extends Disposable implements EditorServiceImpl {\n\tdeclare readonly _serviceBrand: undefined;\n\n\t//#region events\n\n\tprivate readonly _onDidActiveEditorChange = this._register(\n\t\tnew Emitter<void>(),\n\t);\n\treadonly onDidActiveEditorChange = this._onDidActiveEditorChange.event;\n\n\tprivate readonly _onDidVisibleEditorsChange = this._register(\n\t\tnew Emitter<void>(),\n\t);\n\treadonly onDidVisibleEditorsChange = this._onDidVisibleEditorsChange.event;\n\n\tprivate readonly _onDidEditorsChange = this._register(\n\t\tnew Emitter<IEditorsChangeEvent>(),\n\t);\n\treadonly onDidEditorsChange = this._onDidEditorsChange.event;\n\n\tprivate readonly _onWillOpenEditor = this._register(\n\t\tnew Emitter<IEditorWillOpenEvent>(),\n\t);\n\treadonly onWillOpenEditor = this._onWillOpenEditor.event;\n\n\tprivate readonly _onDidCloseEditor = this._register(\n\t\tnew Emitter<IEditorCloseEvent>(),\n\t);\n\treadonly onDidCloseEditor = this._onDidCloseEditor.event;\n\n\tprivate readonly _onDidOpenEditorFail = this._register(\n\t\tnew Emitter<IEditorIdentifier>(),\n\t);\n\treadonly onDidOpenEditorFail = this._onDidOpenEditorFail.event;\n\n\tprivate readonly _onDidMostRecentlyActiveEditorsChange = this._register(\n\t\tnew Emitter<void>(),\n\t);\n\treadonly onDidMostRecentlyActiveEditorsChange =\n\t\tthis._onDidMostRecentlyActiveEditorsChange.event;\n\n\t//#endregion\n\n\tprivate readonly editorGroupsContainer: IEditorGroupsContainer;\n\n\tconstructor(\n\t\teditorGroupsContainer: IEditorGroupsContainer | undefined,\n\t\t@IEditorGroupsService\n\t\tprivate readonly editorGroupService: IEditorGroupsService,\n\t\t@IInstantiationService\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IConfigurationService\n\t\tprivate readonly configurationService: IConfigurationService,\n\t\t@IWorkspaceContextService\n\t\tprivate readonly contextService: IWorkspaceContextService,\n\t\t@IUriIdentityService\n\t\tprivate readonly uriIdentityService: IUriIdentityService,\n\t\t@IEditorResolverService\n\t\tprivate readonly editorResolverService: IEditorResolverService,\n\t\t@IWorkspaceTrustRequestService\n\t\tprivate readonly workspaceTrustRequestService: IWorkspaceTrustRequestService,\n\t\t@IHostService private readonly hostService: IHostService,\n\t\t@ITextEditorService\n\t\tprivate readonly textEditorService: ITextEditorService,\n\t) {\n\t\tsuper();\n\n\t\tthis.editorGroupsContainer =\n\t\t\teditorGroupsContainer ?? editorGroupService;\n\t\tthis.editorsObserver = this._register(\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tEditorsObserver,\n\t\t\t\tthis.editorGroupsContainer,\n\t\t\t),\n\t\t);\n\n\t\tthis.onConfigurationUpdated();\n\n\t\tthis.registerListeners();\n\t}\n\n\tcreateScoped(\n\t\teditorGroupsContainer: IEditorGroupsContainer | \"main\",\n\t\tdisposables: DisposableStore,\n\t): IEditorService {\n\t\treturn disposables.add(\n\t\t\tnew EditorService(\n\t\t\t\teditorGroupsContainer === \"main\"\n\t\t\t\t\t? this.editorGroupService.mainPart\n\t\t\t\t\t: editorGroupsContainer,\n\t\t\t\tthis.editorGroupService,\n\t\t\t\tthis.instantiationService,\n\t\t\t\tthis.fileService,\n\t\t\t\tthis.configurationService,\n\t\t\t\tthis.contextService,\n\t\t\t\tthis.uriIdentityService,\n\t\t\t\tthis.editorResolverService,\n\t\t\t\tthis.workspaceTrustRequestService,\n\t\t\t\tthis.hostService,\n\t\t\t\tthis.textEditorService,\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate registerListeners(): void {\n\t\t// Editor & group changes\n\t\tif (\n\t\t\tthis.editorGroupsContainer === this.editorGroupService.mainPart ||\n\t\t\tthis.editorGroupsContainer === this.editorGroupService\n\t\t) {\n\t\t\tthis.editorGroupService.whenReady.then(() =>\n\t\t\t\tthis.onEditorGroupsReady(),\n\t\t\t);\n\t\t} else {\n\t\t\tthis.onEditorGroupsReady();\n\t\t}\n\t\tthis._register(\n\t\t\tthis.editorGroupsContainer.onDidChangeActiveGroup((group) =>\n\t\t\t\tthis.handleActiveEditorChange(group),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.editorGroupsContainer.onDidAddGroup((group) =>\n\t\t\t\tthis.registerGroupListeners(group as IEditorGroupView),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.editorsObserver.onDidMostRecentlyActiveEditorsChange(() =>\n\t\t\t\tthis._onDidMostRecentlyActiveEditorsChange.fire(),\n\t\t\t),\n\t\t);\n\n\t\t// Out of workspace file watchers\n\t\tthis._register(\n\t\t\tthis.onDidVisibleEditorsChange(() =>\n\t\t\t\tthis.handleVisibleEditorsChange(),\n\t\t\t),\n\t\t);\n\n\t\t// File changes & operations\n\t\t// Note: there is some duplication with the two file event handlers- Since we cannot always rely on the disk events\n\t\t// carrying all necessary data in all environments, we also use the file operation events to make sure operations are handled.\n\t\t// In any case there is no guarantee if the local event is fired first or the disk one. Thus, code must handle the case\n\t\t// that the event ordering is random as well as might not carry all information needed.\n\t\tthis._register(\n\t\t\tthis.fileService.onDidRunOperation((e) =>\n\t\t\t\tthis.onDidRunFileOperation(e),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.fileService.onDidFilesChange((e) => this.onDidFilesChange(e)),\n\t\t);\n\n\t\t// Configuration\n\t\tthis._register(\n\t\t\tthis.configurationService.onDidChangeConfiguration((e) =>\n\t\t\t\tthis.onConfigurationUpdated(e),\n\t\t\t),\n\t\t);\n\t}\n\n\t//#region Editor & group event handlers\n\n\tprivate lastActiveEditor: EditorInput | undefined = undefined;\n\n\tprivate onEditorGroupsReady(): void {\n\t\t// Register listeners to each opened group\n\t\tfor (const group of this.editorGroupsContainer.groups) {\n\t\t\tthis.registerGroupListeners(group as IEditorGroupView);\n\t\t}\n\n\t\t// Fire initial set of editor events if there is an active editor\n\t\tif (this.activeEditor) {\n\t\t\tthis.doHandleActiveEditorChangeEvent();\n\t\t\tthis._onDidVisibleEditorsChange.fire();\n\t\t}\n\t}\n\n\tprivate handleActiveEditorChange(group: IEditorGroup): void {\n\t\tif (group !== this.editorGroupsContainer.activeGroup) {\n\t\t\treturn; // ignore if not the active group\n\t\t}\n\n\t\tif (!this.lastActiveEditor && !group.activeEditor) {\n\t\t\treturn; // ignore if we still have no active editor\n\t\t}\n\n\t\tthis.doHandleActiveEditorChangeEvent();\n\t}\n\n\tprivate doHandleActiveEditorChangeEvent(): void {\n\t\t// Remember as last active\n\t\tconst activeGroup = this.editorGroupsContainer.activeGroup;\n\t\tthis.lastActiveEditor = activeGroup.activeEditor ?? undefined;\n\n\t\t// Fire event to outside parties\n\t\tthis._onDidActiveEditorChange.fire();\n\t}\n\n\tprivate registerGroupListeners(group: IEditorGroupView): void {\n\t\tconst groupDisposables = new DisposableStore();\n\n\t\tgroupDisposables.add(\n\t\t\tgroup.onDidModelChange((e) => {\n\t\t\t\tthis._onDidEditorsChange.fire({ groupId: group.id, event: e });\n\t\t\t}),\n\t\t);\n\n\t\tgroupDisposables.add(\n\t\t\tgroup.onDidActiveEditorChange(() => {\n\t\t\t\tthis.handleActiveEditorChange(group);\n\t\t\t\tthis._onDidVisibleEditorsChange.fire();\n\t\t\t}),\n\t\t);\n\n\t\tgroupDisposables.add(\n\t\t\tgroup.onWillOpenEditor((e) => {\n\t\t\t\tthis._onWillOpenEditor.fire(e);\n\t\t\t}),\n\t\t);\n\n\t\tgroupDisposables.add(\n\t\t\tgroup.onDidCloseEditor((e) => {\n\t\t\t\tthis._onDidCloseEditor.fire(e);\n\t\t\t}),\n\t\t);\n\n\t\tgroupDisposables.add(\n\t\t\tgroup.onDidOpenEditorFail((editor) => {\n\t\t\t\tthis._onDidOpenEditorFail.fire({ editor, groupId: group.id });\n\t\t\t}),\n\t\t);\n\n\t\tEvent.once(group.onWillDispose)(() => {\n\t\t\tdispose(groupDisposables);\n\t\t});\n\t}\n\n\t//#endregion\n\n\t//#region Visible Editors Change: Install file watchers for out of workspace resources that became visible\n\n\tprivate readonly activeOutOfWorkspaceWatchers =\n\t\tnew ResourceMap<IDisposable>();\n\n\tprivate handleVisibleEditorsChange(): void {\n\t\tconst visibleOutOfWorkspaceResources = new ResourceSet();\n\n\t\tfor (const editor of this.visibleEditors) {\n\t\t\tconst resources = distinct(\n\t\t\t\tcoalesce([\n\t\t\t\t\tEditorResourceAccessor.getCanonicalUri(editor, {\n\t\t\t\t\t\tsupportSideBySide: SideBySideEditor.PRIMARY,\n\t\t\t\t\t}),\n\t\t\t\t\tEditorResourceAccessor.getCanonicalUri(editor, {\n\t\t\t\t\t\tsupportSideBySide: SideBySideEditor.SECONDARY,\n\t\t\t\t\t}),\n\t\t\t\t]),\n\t\t\t\t(resource) => resource.toString(),\n\t\t\t);\n\n\t\t\tfor (const resource of resources) {\n\t\t\t\tif (\n\t\t\t\t\tthis.fileService.hasProvider(resource) &&\n\t\t\t\t\t!this.contextService.isInsideWorkspace(resource)\n\t\t\t\t) {\n\t\t\t\t\tvisibleOutOfWorkspaceResources.add(resource);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Handle no longer visible out of workspace resources\n\t\tfor (const resource of this.activeOutOfWorkspaceWatchers.keys()) {\n\t\t\tif (!visibleOutOfWorkspaceResources.has(resource)) {\n\t\t\t\tdispose(this.activeOutOfWorkspaceWatchers.get(resource));\n\t\t\t\tthis.activeOutOfWorkspaceWatchers.delete(resource);\n\t\t\t}\n\t\t}\n\n\t\t// Handle newly visible out of workspace resources\n\t\tfor (const resource of visibleOutOfWorkspaceResources.keys()) {\n\t\t\tif (!this.activeOutOfWorkspaceWatchers.get(resource)) {\n\t\t\t\tconst disposable = this.fileService.watch(resource);\n\t\t\t\tthis.activeOutOfWorkspaceWatchers.set(resource, disposable);\n\t\t\t}\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region File Changes: Move & Deletes to move or close opend editors\n\n\tprivate async onDidRunFileOperation(e: FileOperationEvent): Promise<void> {\n\t\t// Handle moves specially when file is opened\n\t\tif (e.isOperation(FileOperation.MOVE)) {\n\t\t\tthis.handleMovedFile(e.resource, e.target.resource);\n\t\t}\n\n\t\t// Handle deletes\n\t\tif (\n\t\t\te.isOperation(FileOperation.DELETE) ||\n\t\t\te.isOperation(FileOperation.MOVE)\n\t\t) {\n\t\t\tthis.handleDeletedFile(\n\t\t\t\te.resource,\n\t\t\t\tfalse,\n\t\t\t\te.target ? e.target.resource : undefined,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate onDidFilesChange(e: FileChangesEvent): void {\n\t\tif (e.gotDeleted()) {\n\t\t\tthis.handleDeletedFile(e, true);\n\t\t}\n\t}\n\n\tprivate async handleMovedFile(source: URI, target: URI): Promise<void> {\n\t\tfor (const group of this.editorGroupsContainer.groups) {\n\t\t\tconst replacements: (\n\t\t\t\t| IUntypedEditorReplacement\n\t\t\t\t| IEditorReplacement\n\t\t\t)[] = [];\n\n\t\t\tfor (const editor of group.editors) {\n\t\t\t\tconst resource = editor.resource;\n\t\t\t\tif (\n\t\t\t\t\t!resource ||\n\t\t\t\t\t!this.uriIdentityService.extUri.isEqualOrParent(\n\t\t\t\t\t\tresource,\n\t\t\t\t\t\tsource,\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tcontinue; // not matching our resource\n\t\t\t\t}\n\n\t\t\t\t// Determine new resulting target resource\n\t\t\t\tlet targetResource: URI;\n\t\t\t\tif (this.uriIdentityService.extUri.isEqual(source, resource)) {\n\t\t\t\t\ttargetResource = target; // file got moved\n\t\t\t\t} else {\n\t\t\t\t\tconst index = indexOfPath(\n\t\t\t\t\t\tresource.path,\n\t\t\t\t\t\tsource.path,\n\t\t\t\t\t\tthis.uriIdentityService.extUri.ignorePathCasing(\n\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\ttargetResource = joinPath(\n\t\t\t\t\t\ttarget,\n\t\t\t\t\t\tresource.path.substr(index + source.path.length + 1),\n\t\t\t\t\t); // parent folder got moved\n\t\t\t\t}\n\n\t\t\t\t// Delegate rename() to editor instance\n\t\t\t\tconst moveResult = await editor.rename(\n\t\t\t\t\tgroup.id,\n\t\t\t\t\ttargetResource,\n\t\t\t\t);\n\t\t\t\tif (!moveResult) {\n\t\t\t\t\treturn; // not target - ignore\n\t\t\t\t}\n\n\t\t\t\tconst optionOverrides = {\n\t\t\t\t\tpreserveFocus: true,\n\t\t\t\t\tpinned: group.isPinned(editor),\n\t\t\t\t\tsticky: group.isSticky(editor),\n\t\t\t\t\tindex: group.getIndexOfEditor(editor),\n\t\t\t\t\tinactive: !group.isActive(editor),\n\t\t\t\t};\n\n\t\t\t\t// Construct a replacement with our extra options mixed in\n\t\t\t\tif (isEditorInput(moveResult.editor)) {\n\t\t\t\t\treplacements.push({\n\t\t\t\t\t\teditor,\n\t\t\t\t\t\treplacement: moveResult.editor,\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t...moveResult.options,\n\t\t\t\t\t\t\t...optionOverrides,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treplacements.push({\n\t\t\t\t\t\teditor,\n\t\t\t\t\t\treplacement: {\n\t\t\t\t\t\t\t...moveResult.editor,\n\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t...moveResult.editor.options,\n\t\t\t\t\t\t\t\t...optionOverrides,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Apply replacements\n\t\t\tif (replacements.length) {\n\t\t\t\tthis.replaceEditors(replacements, group);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate closeOnFileDelete = false;\n\n\tprivate onConfigurationUpdated(e?: IConfigurationChangeEvent): void {\n\t\tif (\n\t\t\te &&\n\t\t\t!e.affectsConfiguration(\"workbench.editor.closeOnFileDelete\")\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst configuration =\n\t\t\tthis.configurationService.getValue<IWorkbenchEditorConfiguration>();\n\t\tif (\n\t\t\ttypeof configuration.workbench?.editor?.closeOnFileDelete ===\n\t\t\t\"boolean\"\n\t\t) {\n\t\t\tthis.closeOnFileDelete =\n\t\t\t\tconfiguration.workbench.editor.closeOnFileDelete;\n\t\t} else {\n\t\t\tthis.closeOnFileDelete = false; // default\n\t\t}\n\t}\n\n\tprivate handleDeletedFile(\n\t\targ1: URI | FileChangesEvent,\n\t\tisExternal: boolean,\n\t\tmovedTo?: URI,\n\t): void {\n\t\tfor (const editor of this.getAllNonDirtyEditors({\n\t\t\tincludeUntitled: false,\n\t\t\tsupportSideBySide: true,\n\t\t})) {\n\t\t\t(async () => {\n\t\t\t\tconst resource = editor.resource;\n\t\t\t\tif (!resource) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Handle deletes in opened editors depending on:\n\t\t\t\t// - we close any editor when `closeOnFileDelete: true`\n\t\t\t\t// - we close any editor when the delete occurred from within VSCode\n\t\t\t\tif (this.closeOnFileDelete || !isExternal) {\n\t\t\t\t\t// Do NOT close any opened editor that matches the resource path (either equal or being parent) of the\n\t\t\t\t\t// resource we move to (movedTo). Otherwise we would close a resource that has been renamed to the same\n\t\t\t\t\t// path but different casing.\n\t\t\t\t\tif (\n\t\t\t\t\t\tmovedTo &&\n\t\t\t\t\t\tthis.uriIdentityService.extUri.isEqualOrParent(\n\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\tmovedTo,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet matches = false;\n\t\t\t\t\tif (arg1 instanceof FileChangesEvent) {\n\t\t\t\t\t\tmatches = arg1.contains(\n\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\tFileChangeType.DELETED,\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatches =\n\t\t\t\t\t\t\tthis.uriIdentityService.extUri.isEqualOrParent(\n\t\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\t\targ1,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!matches) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// We have received reports of users seeing delete events even though the file still\n\t\t\t\t\t// exists (network shares issue: https://github.com/microsoft/vscode/issues/13665).\n\t\t\t\t\t// Since we do not want to close an editor without reason, we have to check if the\n\t\t\t\t\t// file is really gone and not just a faulty file event.\n\t\t\t\t\t// This only applies to external file events, so we need to check for the isExternal\n\t\t\t\t\t// flag.\n\t\t\t\t\tlet exists = false;\n\t\t\t\t\tif (isExternal && this.fileService.hasProvider(resource)) {\n\t\t\t\t\t\tawait timeout(100);\n\t\t\t\t\t\texists = await this.fileService.exists(resource);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!exists && !editor.isDisposed()) {\n\t\t\t\t\t\teditor.dispose();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\t}\n\n\tprivate getAllNonDirtyEditors(options: {\n\t\tincludeUntitled: boolean;\n\t\tsupportSideBySide: boolean;\n\t}): EditorInput[] {\n\t\tconst editors: EditorInput[] = [];\n\n\t\tfunction conditionallyAddEditor(editor: EditorInput): void {\n\t\t\tif (\n\t\t\t\teditor.hasCapability(EditorInputCapabilities.Untitled) &&\n\t\t\t\t!options.includeUntitled\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (editor.isDirty()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\teditors.push(editor);\n\t\t}\n\n\t\tfor (const editor of this.editors) {\n\t\t\tif (\n\t\t\t\toptions.supportSideBySide &&\n\t\t\t\teditor instanceof SideBySideEditorInput\n\t\t\t) {\n\t\t\t\tconditionallyAddEditor(editor.primary);\n\t\t\t\tconditionallyAddEditor(editor.secondary);\n\t\t\t} else {\n\t\t\t\tconditionallyAddEditor(editor);\n\t\t\t}\n\t\t}\n\n\t\treturn editors;\n\t}\n\n\t//#endregion\n\n\t//#region Editor accessors\n\n\tprivate readonly editorsObserver: EditorsObserver;\n\n\tget activeEditorPane(): IVisibleEditorPane | undefined {\n\t\treturn this.editorGroupsContainer.activeGroup?.activeEditorPane;\n\t}\n\n\tget activeTextEditorControl(): ICodeEditor | IDiffEditor | undefined {\n\t\tconst activeEditorPane = this.activeEditorPane;\n\t\tif (activeEditorPane) {\n\t\t\tconst activeControl = activeEditorPane.getControl();\n\t\t\tif (isCodeEditor(activeControl) || isDiffEditor(activeControl)) {\n\t\t\t\treturn activeControl;\n\t\t\t}\n\t\t\tif (\n\t\t\t\tisCompositeEditor(activeControl) &&\n\t\t\t\tisCodeEditor(activeControl.activeCodeEditor)\n\t\t\t) {\n\t\t\t\treturn activeControl.activeCodeEditor;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tget activeTextEditorLanguageId(): string | undefined {\n\t\tlet activeCodeEditor: ICodeEditor | undefined;\n\n\t\tconst activeTextEditorControl = this.activeTextEditorControl;\n\t\tif (isDiffEditor(activeTextEditorControl)) {\n\t\t\tactiveCodeEditor = activeTextEditorControl.getModifiedEditor();\n\t\t} else {\n\t\t\tactiveCodeEditor = activeTextEditorControl;\n\t\t}\n\n\t\treturn activeCodeEditor?.getModel()?.getLanguageId();\n\t}\n\n\tget count(): number {\n\t\treturn this.editorsObserver.count;\n\t}\n\n\tget editors(): EditorInput[] {\n\t\treturn this.getEditors(EditorsOrder.SEQUENTIAL).map(\n\t\t\t({ editor }) => editor,\n\t\t);\n\t}\n\n\tgetEditors(\n\t\torder: EditorsOrder,\n\t\toptions?: { excludeSticky?: boolean },\n\t): IEditorIdentifier[] {\n\t\tswitch (order) {\n\t\t\t// MRU\n\t\t\tcase EditorsOrder.MOST_RECENTLY_ACTIVE:\n\t\t\t\tif (options?.excludeSticky) {\n\t\t\t\t\treturn this.editorsObserver.editors.filter(\n\t\t\t\t\t\t({ groupId, editor }) =>\n\t\t\t\t\t\t\t!this.editorGroupsContainer\n\t\t\t\t\t\t\t\t.getGroup(groupId)\n\t\t\t\t\t\t\t\t?.isSticky(editor),\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn this.editorsObserver.editors;\n\n\t\t\t// Sequential\n\t\t\tcase EditorsOrder.SEQUENTIAL: {\n\t\t\t\tconst editors: IEditorIdentifier[] = [];\n\n\t\t\t\tfor (const group of this.editorGroupsContainer.getGroups(\n\t\t\t\t\tGroupsOrder.GRID_APPEARANCE,\n\t\t\t\t)) {\n\t\t\t\t\teditors.push(\n\t\t\t\t\t\t...group\n\t\t\t\t\t\t\t.getEditors(EditorsOrder.SEQUENTIAL, options)\n\t\t\t\t\t\t\t.map((editor) => ({ editor, groupId: group.id })),\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn editors;\n\t\t\t}\n\t\t}\n\t}\n\n\tget activeEditor(): EditorInput | undefined {\n\t\tconst activeGroup = this.editorGroupsContainer.activeGroup;\n\n\t\treturn activeGroup\n\t\t\t? (activeGroup.activeEditor ?? undefined)\n\t\t\t: undefined;\n\t}\n\n\tget visibleEditorPanes(): IVisibleEditorPane[] {\n\t\treturn coalesce(\n\t\t\tthis.editorGroupsContainer.groups.map(\n\t\t\t\t(group) => group.activeEditorPane,\n\t\t\t),\n\t\t);\n\t}\n\n\tget visibleTextEditorControls(): Array<ICodeEditor | IDiffEditor> {\n\t\tconst visibleTextEditorControls: Array<ICodeEditor | IDiffEditor> = [];\n\t\tfor (const visibleEditorPane of this.visibleEditorPanes) {\n\t\t\tconst controls: Array<IEditorControl | undefined> = [];\n\t\t\tif (visibleEditorPane instanceof SideBySideEditorPane) {\n\t\t\t\tcontrols.push(\n\t\t\t\t\tvisibleEditorPane.getPrimaryEditorPane()?.getControl(),\n\t\t\t\t);\n\t\t\t\tcontrols.push(\n\t\t\t\t\tvisibleEditorPane.getSecondaryEditorPane()?.getControl(),\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tcontrols.push(visibleEditorPane.getControl());\n\t\t\t}\n\n\t\t\tfor (const control of controls) {\n\t\t\t\tif (isCodeEditor(control) || isDiffEditor(control)) {\n\t\t\t\t\tvisibleTextEditorControls.push(control);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn visibleTextEditorControls;\n\t}\n\n\tget visibleEditors(): EditorInput[] {\n\t\treturn coalesce(\n\t\t\tthis.editorGroupsContainer.groups.map(\n\t\t\t\t(group) => group.activeEditor,\n\t\t\t),\n\t\t);\n\t}\n\n\t//#endregion\n\n\t//#region openEditor()\n\n\topenEditor(\n\t\teditor: EditorInput,\n\t\toptions?: IEditorOptions,\n\t\tgroup?: PreferredGroup,\n\t): Promise<IEditorPane | undefined>;\n\topenEditor(\n\t\teditor: IUntypedEditorInput,\n\t\tgroup?: PreferredGroup,\n\t): Promise<IEditorPane | undefined>;\n\topenEditor(\n\t\teditor: IResourceEditorInput,\n\t\tgroup?: PreferredGroup,\n\t): Promise<IEditorPane | undefined>;\n\topenEditor(\n\t\teditor: ITextResourceEditorInput | IUntitledTextResourceEditorInput,\n\t\tgroup?: PreferredGroup,\n\t): Promise<IEditorPane | undefined>;\n\topenEditor(\n\t\teditor: IResourceDiffEditorInput,\n\t\tgroup?: PreferredGroup,\n\t): Promise<ITextDiffEditorPane | undefined>;\n\topenEditor(\n\t\teditor: EditorInput | IUntypedEditorInput,\n\t\toptionsOrPreferredGroup?: IEditorOptions | PreferredGroup,\n\t\tpreferredGroup?: PreferredGroup,\n\t): Promise<IEditorPane | undefined>;\n\tasync openEditor(\n\t\teditor: EditorInput | IUntypedEditorInput,\n\t\toptionsOrPreferredGroup?: IEditorOptions | PreferredGroup,\n\t\tpreferredGroup?: PreferredGroup,\n\t): Promise<IEditorPane | undefined> {\n\t\tlet typedEditor: EditorInput | undefined;\n\t\tlet options = isEditorInput(editor)\n\t\t\t? (optionsOrPreferredGroup as IEditorOptions)\n\t\t\t: editor.options;\n\t\tlet group: IEditorGroup | undefined;\n\n\t\tif (isPreferredGroup(optionsOrPreferredGroup)) {\n\t\t\tpreferredGroup = optionsOrPreferredGroup;\n\t\t}\n\n\t\t// Resolve override unless disabled\n\t\tif (!isEditorInput(editor)) {\n\t\t\tconst resolvedEditor =\n\t\t\t\tawait this.editorResolverService.resolveEditor(\n\t\t\t\t\teditor,\n\t\t\t\t\tpreferredGroup,\n\t\t\t\t);\n\n\t\t\tif (resolvedEditor === ResolvedStatus.ABORT) {\n\t\t\t\treturn; // skip editor if override is aborted\n\t\t\t}\n\n\t\t\t// We resolved an editor to use\n\t\t\tif (isEditorInputWithOptionsAndGroup(resolvedEditor)) {\n\t\t\t\ttypedEditor = resolvedEditor.editor;\n\t\t\t\toptions = resolvedEditor.options;\n\t\t\t\tgroup = resolvedEditor.group;\n\t\t\t}\n\t\t}\n\n\t\t// Override is disabled or did not apply: fallback to default\n\t\tif (!typedEditor) {\n\t\t\ttypedEditor = isEditorInput(editor)\n\t\t\t\t? editor\n\t\t\t\t: await this.textEditorService.resolveTextEditor(editor);\n\t\t}\n\n\t\t// If group still isn't defined because of a disabled override we resolve it\n\t\tif (!group) {\n\t\t\tlet activation: EditorActivation | undefined;\n\t\t\tconst findGroupResult = this.instantiationService.invokeFunction(\n\t\t\t\tfindGroup,\n\t\t\t\t{ editor: typedEditor, options },\n\t\t\t\tpreferredGroup,\n\t\t\t);\n\t\t\tif (findGroupResult instanceof Promise) {\n\t\t\t\t[group, activation] = await findGroupResult;\n\t\t\t} else {\n\t\t\t\t[group, activation] = findGroupResult;\n\t\t\t}\n\n\t\t\t// Mixin editor group activation if returned\n\t\t\tif (activation) {\n\t\t\t\toptions = { ...options, activation };\n\t\t\t}\n\t\t}\n\n\t\treturn group.openEditor(typedEditor, options);\n\t}\n\n\t//#endregion\n\n\t//#region openEditors()\n\n\topenEditors(\n\t\teditors: EditorInputWithOptions[],\n\t\tgroup?: PreferredGroup,\n\t\toptions?: IOpenEditorsOptions,\n\t): Promise<IEditorPane[]>;\n\topenEditors(\n\t\teditors: IUntypedEditorInput[],\n\t\tgroup?: PreferredGroup,\n\t\toptions?: IOpenEditorsOptions,\n\t): Promise<IEditorPane[]>;\n\topenEditors(\n\t\teditors: Array<EditorInputWithOptions | IUntypedEditorInput>,\n\t\tgroup?: PreferredGroup,\n\t\toptions?: IOpenEditorsOptions,\n\t): Promise<IEditorPane[]>;\n\tasync openEditors(\n\t\teditors: Array<EditorInputWithOptions | IUntypedEditorInput>,\n\t\tpreferredGroup?: PreferredGroup,\n\t\toptions?: IOpenEditorsOptions,\n\t): Promise<IEditorPane[]> {\n\t\t// Pass all editors to trust service to determine if\n\t\t// we should proceed with opening the editors if we\n\t\t// are asked to validate trust.\n\t\tif (options?.validateTrust) {\n\t\t\tconst editorsTrusted = await this.handleWorkspaceTrust(editors);\n\t\t\tif (!editorsTrusted) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t}\n\n\t\t// Find target groups for editors to open\n\t\tconst mapGroupToTypedEditors = new Map<\n\t\t\tIEditorGroup,\n\t\t\tArray<EditorInputWithOptions>\n\t\t>();\n\t\tfor (const editor of editors) {\n\t\t\tlet typedEditor: EditorInputWithOptions | undefined;\n\t\t\tlet group: IEditorGroup | undefined;\n\n\t\t\t// Resolve override unless disabled\n\t\t\tif (!isEditorInputWithOptions(editor)) {\n\t\t\t\tconst resolvedEditor =\n\t\t\t\t\tawait this.editorResolverService.resolveEditor(\n\t\t\t\t\t\teditor,\n\t\t\t\t\t\tpreferredGroup,\n\t\t\t\t\t);\n\n\t\t\t\tif (resolvedEditor === ResolvedStatus.ABORT) {\n\t\t\t\t\tcontinue; // skip editor if override is aborted\n\t\t\t\t}\n\n\t\t\t\t// We resolved an editor to use\n\t\t\t\tif (isEditorInputWithOptionsAndGroup(resolvedEditor)) {\n\t\t\t\t\ttypedEditor = resolvedEditor;\n\t\t\t\t\tgroup = resolvedEditor.group;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override is disabled or did not apply: fallback to default\n\t\t\tif (!typedEditor) {\n\t\t\t\ttypedEditor = isEditorInputWithOptions(editor)\n\t\t\t\t\t? editor\n\t\t\t\t\t: {\n\t\t\t\t\t\t\teditor:\n\t\t\t\t\t\t\t\tawait this.textEditorService.resolveTextEditor(\n\t\t\t\t\t\t\t\t\teditor,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\toptions: editor.options,\n\t\t\t\t\t\t};\n\t\t\t}\n\n\t\t\t// If group still isn't defined because of a disabled override we resolve it\n\t\t\tif (!group) {\n\t\t\t\tconst findGroupResult =\n\t\t\t\t\tthis.instantiationService.invokeFunction(\n\t\t\t\t\t\tfindGroup,\n\t\t\t\t\t\ttypedEditor,\n\t\t\t\t\t\tpreferredGroup,\n\t\t\t\t\t);\n\t\t\t\tif (findGroupResult instanceof Promise) {\n\t\t\t\t\t[group] = await findGroupResult;\n\t\t\t\t} else {\n\t\t\t\t\t[group] = findGroupResult;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Update map of groups to editors\n\t\t\tlet targetGroupEditors = mapGroupToTypedEditors.get(group);\n\t\t\tif (!targetGroupEditors) {\n\t\t\t\ttargetGroupEditors = [];\n\t\t\t\tmapGroupToTypedEditors.set(group, targetGroupEditors);\n\t\t\t}\n\n\t\t\ttargetGroupEditors.push(typedEditor);\n\t\t}\n\n\t\t// Open in target groups\n\t\tconst result: Promise<IEditorPane | undefined>[] = [];\n\t\tfor (const [group, editors] of mapGroupToTypedEditors) {\n\t\t\tresult.push(group.openEditors(editors));\n\t\t}\n\n\t\treturn coalesce(await Promises.settled(result));\n\t}\n\n\tprivate async handleWorkspaceTrust(\n\t\teditors: Array<EditorInputWithOptions | IUntypedEditorInput>,\n\t): Promise<boolean> {\n\t\tconst { resources, diffMode, mergeMode } =\n\t\t\tthis.extractEditorResources(editors);\n\n\t\tconst trustResult =\n\t\t\tawait this.workspaceTrustRequestService.requestOpenFilesTrust(\n\t\t\t\tresources,\n\t\t\t);\n\t\tswitch (trustResult) {\n\t\t\tcase WorkspaceTrustUriResponse.Open:\n\t\t\t\treturn true;\n\t\t\tcase WorkspaceTrustUriResponse.OpenInNewWindow:\n\t\t\t\tawait this.hostService.openWindow(\n\t\t\t\t\tresources.map((resource) => ({ fileUri: resource })),\n\t\t\t\t\t{ forceNewWindow: true, diffMode, mergeMode },\n\t\t\t\t);\n\t\t\t\treturn false;\n\t\t\tcase WorkspaceTrustUriResponse.Cancel:\n\t\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate extractEditorResources(\n\t\teditors: Array<EditorInputWithOptions | IUntypedEditorInput>,\n\t): { resources: URI[]; diffMode?: boolean; mergeMode?: boolean } {\n\t\tconst resources = new ResourceSet();\n\t\tlet diffMode = false;\n\t\tlet mergeMode = false;\n\n\t\tfor (const editor of editors) {\n\t\t\t// Typed Editor\n\t\t\tif (isEditorInputWithOptions(editor)) {\n\t\t\t\tconst resource = EditorResourceAccessor.getOriginalUri(\n\t\t\t\t\teditor.editor,\n\t\t\t\t\t{ supportSideBySide: SideBySideEditor.BOTH },\n\t\t\t\t);\n\t\t\t\tif (URI.isUri(resource)) {\n\t\t\t\t\tresources.add(resource);\n\t\t\t\t} else if (resource) {\n\t\t\t\t\tif (resource.primary) {\n\t\t\t\t\t\tresources.add(resource.primary);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (resource.secondary) {\n\t\t\t\t\t\tresources.add(resource.secondary);\n\t\t\t\t\t}\n\n\t\t\t\t\tdiffMode = editor.editor instanceof DiffEditorInput;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Untyped editor\n\t\t\telse {\n\t\t\t\tif (isResourceMergeEditorInput(editor)) {\n\t\t\t\t\tif (URI.isUri(editor.input1)) {\n\t\t\t\t\t\tresources.add(editor.input1.resource);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (URI.isUri(editor.input2)) {\n\t\t\t\t\t\tresources.add(editor.input2.resource);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (URI.isUri(editor.base)) {\n\t\t\t\t\t\tresources.add(editor.base.resource);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (URI.isUri(editor.result)) {\n\t\t\t\t\t\tresources.add(editor.result.resource);\n\t\t\t\t\t}\n\n\t\t\t\t\tmergeMode = true;\n\t\t\t\t}\n\t\t\t\tif (isResourceDiffEditorInput(editor)) {\n\t\t\t\t\tif (URI.isUri(editor.original.resource)) {\n\t\t\t\t\t\tresources.add(editor.original.resource);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (URI.isUri(editor.modified.resource)) {\n\t\t\t\t\t\tresources.add(editor.modified.resource);\n\t\t\t\t\t}\n\n\t\t\t\t\tdiffMode = true;\n\t\t\t\t} else if (isResourceEditorInput(editor)) {\n\t\t\t\t\tresources.add(editor.resource);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tresources: Array.from(resources.keys()),\n\t\t\tdiffMode,\n\t\t\tmergeMode,\n\t\t};\n\t}\n\n\t//#endregion\n\n\t//#region isOpened() / isVisible()\n\n\tisOpened(editor: IResourceEditorInputIdentifier): boolean {\n\t\treturn this.editorsObserver.hasEditor({\n\t\t\tresource: this.uriIdentityService.asCanonicalUri(editor.resource),\n\t\t\ttypeId: editor.typeId,\n\t\t\teditorId: editor.editorId,\n\t\t});\n\t}\n\n\tisVisible(editor: EditorInput): boolean {\n\t\tfor (const group of this.editorGroupsContainer.groups) {\n\t\t\tif (group.activeEditor?.matches(editor)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t//#endregion\n\n\t//#region closeEditor()\n\n\tasync closeEditor(\n\t\t{ editor, groupId }: IEditorIdentifier,\n\t\toptions?: ICloseEditorOptions,\n\t): Promise<void> {\n\t\tconst group = this.editorGroupsContainer.getGroup(groupId);\n\n\t\tawait group?.closeEditor(editor, options);\n\t}\n\n\t//#endregion\n\n\t//#region closeEditors()\n\n\tasync closeEditors(\n\t\teditors: IEditorIdentifier[],\n\t\toptions?: ICloseEditorOptions,\n\t): Promise<void> {\n\t\tconst mapGroupToEditors = new Map<IEditorGroup, EditorInput[]>();\n\n\t\tfor (const { editor, groupId } of editors) {\n\t\t\tconst group = this.editorGroupsContainer.getGroup(groupId);\n\t\t\tif (!group) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet editors = mapGroupToEditors.get(group);\n\t\t\tif (!editors) {\n\t\t\t\teditors = [];\n\t\t\t\tmapGroupToEditors.set(group, editors);\n\t\t\t}\n\n\t\t\teditors.push(editor);\n\t\t}\n\n\t\tfor (const [group, editors] of mapGroupToEditors) {\n\t\t\tawait group.closeEditors(editors, options);\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region findEditors()\n\n\tfindEditors(\n\t\tresource: URI,\n\t\toptions?: IFindEditorOptions,\n\t): readonly IEditorIdentifier[];\n\tfindEditors(\n\t\teditor: IResourceEditorInputIdentifier,\n\t\toptions?: IFindEditorOptions,\n\t): readonly IEditorIdentifier[];\n\tfindEditors(\n\t\tresource: URI,\n\t\toptions: IFindEditorOptions | undefined,\n\t\tgroup: IEditorGroup | GroupIdentifier,\n\t): readonly EditorInput[];\n\tfindEditors(\n\t\teditor: IResourceEditorInputIdentifier,\n\t\toptions: IFindEditorOptions | undefined,\n\t\tgroup: IEditorGroup | GroupIdentifier,\n\t): EditorInput | undefined;\n\tfindEditors(\n\t\targ1: URI | IResourceEditorInputIdentifier,\n\t\toptions: IFindEditorOptions | undefined,\n\t\targ2?: IEditorGroup | GroupIdentifier,\n\t):\n\t\t| readonly IEditorIdentifier[]\n\t\t| readonly EditorInput[]\n\t\t| EditorInput\n\t\t| undefined;\n\tfindEditors(\n\t\targ1: URI | IResourceEditorInputIdentifier,\n\t\toptions: IFindEditorOptions | undefined,\n\t\targ2?: IEditorGroup | GroupIdentifier,\n\t):\n\t\t| readonly IEditorIdentifier[]\n\t\t| readonly EditorInput[]\n\t\t| EditorInput\n\t\t| undefined {\n\t\tconst resource = URI.isUri(arg1) ? arg1 : arg1.resource;\n\t\tconst typeId = URI.isUri(arg1) ? undefined : arg1.typeId;\n\n\t\t// Do a quick check for the resource via the editor observer\n\t\t// which is a very efficient way to find an editor by resource.\n\t\t// However, we can only do that unless we are asked to find an\n\t\t// editor on the secondary side of a side by side editor, because\n\t\t// the editor observer provides fast lookups only for primary\n\t\t// editors.\n\t\tif (\n\t\t\toptions?.supportSideBySide !== SideBySideEditor.ANY &&\n\t\t\toptions?.supportSideBySide !== SideBySideEditor.SECONDARY\n\t\t) {\n\t\t\tif (!this.editorsObserver.hasEditors(resource)) {\n\t\t\t\tif (URI.isUri(arg1) || isUndefined(arg2)) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}\n\n\t\t// Search only in specific group\n\t\tif (isUndefined(arg2)) {\n\t\t\tconst result: IEditorIdentifier[] = [];\n\n\t\t\tfor (const group of this.editorGroupsContainer.getGroups(\n\t\t\t\tGroupsOrder.MOST_RECENTLY_ACTIVE,\n\t\t\t)) {\n\t\t\t\tconst editors: EditorInput[] = [];\n\n\t\t\t\t// Resource provided: result is an array\n\t\t\t\tif (URI.isUri(arg1)) {\n\t\t\t\t\teditors.push(...this.findEditors(arg1, options, group));\n\t\t\t\t}\n\n\t\t\t\t// Editor identifier provided, result is single\n\t\t\t\telse {\n\t\t\t\t\tconst editor = this.findEditors(arg1, options, group);\n\t\t\t\t\tif (editor) {\n\t\t\t\t\t\teditors.push(editor);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresult.push(\n\t\t\t\t\t...editors.map((editor) => ({ editor, groupId: group.id })),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t} else {\n\t\t\tconst targetGroup =\n\t\t\t\ttypeof arg2 === \"number\"\n\t\t\t\t\t? this.editorGroupsContainer.getGroup(arg2)\n\t\t\t\t\t: arg2;\n\n\t\t\t// Resource provided: result is an array\n\t\t\tif (URI.isUri(arg1)) {\n\t\t\t\tif (!targetGroup) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\n\t\t\t\treturn targetGroup.findEditors(resource, options);\n\t\t\t}\n\n\t\t\t// Editor identifier provided, result is single\n\t\t\telse {\n\t\t\t\tif (!targetGroup) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\tconst editors = targetGroup.findEditors(resource, options);\n\t\t\t\tfor (const editor of editors) {\n\t\t\t\t\tif (editor.typeId === typeId) {\n\t\t\t\t\t\treturn editor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region replaceEditors()\n\n\tasync replaceEditors(\n\t\treplacements: IUntypedEditorReplacement[],\n\t\tgroup: IEditorGroup | GroupIdentifier,\n\t): Promise<void>;\n\tasync replaceEditors(\n\t\treplacements: IEditorReplacement[],\n\t\tgroup: IEditorGroup | GroupIdentifier,\n\t): Promise<void>;\n\tasync replaceEditors(\n\t\treplacements: Array<IEditorReplacement | IUntypedEditorReplacement>,\n\t\tgroup: IEditorGroup | GroupIdentifier,\n\t): Promise<void> {\n\t\tconst targetGroup =\n\t\t\ttypeof group === \"number\"\n\t\t\t\t? this.editorGroupsContainer.getGroup(group)\n\t\t\t\t: group;\n\n\t\t// Convert all replacements to typed editors unless already\n\t\t// typed and handle overrides properly.\n\t\tconst typedReplacements: IEditorReplacement[] = [];\n\t\tfor (const replacement of replacements) {\n\t\t\tlet typedReplacement: IEditorReplacement | undefined;\n\n\t\t\t// Resolve override unless disabled\n\t\t\tif (!isEditorInput(replacement.replacement)) {\n\t\t\t\tconst resolvedEditor =\n\t\t\t\t\tawait this.editorResolverService.resolveEditor(\n\t\t\t\t\t\treplacement.replacement,\n\t\t\t\t\t\ttargetGroup,\n\t\t\t\t\t);\n\n\t\t\t\tif (resolvedEditor === ResolvedStatus.ABORT) {\n\t\t\t\t\tcontinue; // skip editor if override is aborted\n\t\t\t\t}\n\n\t\t\t\t// We resolved an editor to use\n\t\t\t\tif (isEditorInputWithOptionsAndGroup(resolvedEditor)) {\n\t\t\t\t\ttypedReplacement = {\n\t\t\t\t\t\teditor: replacement.editor,\n\t\t\t\t\t\treplacement: resolvedEditor.editor,\n\t\t\t\t\t\toptions: resolvedEditor.options,\n\t\t\t\t\t\tforceReplaceDirty: replacement.forceReplaceDirty,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override is disabled or did not apply: fallback to default\n\t\t\tif (!typedReplacement) {\n\t\t\t\ttypedReplacement = {\n\t\t\t\t\teditor: replacement.editor,\n\t\t\t\t\treplacement: isEditorReplacement(replacement)\n\t\t\t\t\t\t? replacement.replacement\n\t\t\t\t\t\t: await this.textEditorService.resolveTextEditor(\n\t\t\t\t\t\t\t\treplacement.replacement,\n\t\t\t\t\t\t\t),\n\t\t\t\t\toptions: isEditorReplacement(replacement)\n\t\t\t\t\t\t? replacement.options\n\t\t\t\t\t\t: replacement.replacement.options,\n\t\t\t\t\tforceReplaceDirty: replacement.forceReplaceDirty,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\ttypedReplacements.push(typedReplacement);\n\t\t}\n\n\t\treturn targetGroup?.replaceEditors(typedReplacements);\n\t}\n\n\t//#endregion\n\n\t//#region save/revert\n\n\tasync save(\n\t\teditors: IEditorIdentifier | IEditorIdentifier[],\n\t\toptions?: ISaveEditorsOptions,\n\t): Promise<ISaveEditorsResult> {\n\t\t// Convert to array\n\t\tif (!Array.isArray(editors)) {\n\t\t\teditors = [editors];\n\t\t}\n\n\t\t// Make sure to not save the same editor multiple times\n\t\t// by using the `matches()` method to find duplicates\n\t\tconst uniqueEditors = this.getUniqueEditors(editors);\n\n\t\t// Split editors up into a bucket that is saved in parallel\n\t\t// and sequentially. Unless \"Save As\", all non-untitled editors\n\t\t// can be saved in parallel to speed up the operation. Remaining\n\t\t// editors are potentially bringing up some UI and thus run\n\t\t// sequentially.\n\t\tconst editorsToSaveParallel: IEditorIdentifier[] = [];\n\t\tconst editorsToSaveSequentially: IEditorIdentifier[] = [];\n\t\tif (options?.saveAs) {\n\t\t\teditorsToSaveSequentially.push(...uniqueEditors);\n\t\t} else {\n\t\t\tfor (const { groupId, editor } of uniqueEditors) {\n\t\t\t\tif (editor.hasCapability(EditorInputCapabilities.Untitled)) {\n\t\t\t\t\teditorsToSaveSequentially.push({ groupId, editor });\n\t\t\t\t} else {\n\t\t\t\t\teditorsToSaveParallel.push({ groupId, editor });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Editors to save in parallel\n\t\tconst saveResults = await Promises.settled(\n\t\t\teditorsToSaveParallel.map(({ groupId, editor }) => {\n\t\t\t\t// Use save as a hint to pin the editor if used explicitly\n\t\t\t\tif (options?.reason === SaveReason.EXPLICIT) {\n\t\t\t\t\tthis.editorGroupsContainer\n\t\t\t\t\t\t.getGroup(groupId)\n\t\t\t\t\t\t?.pinEditor(editor);\n\t\t\t\t}\n\n\t\t\t\t// Save\n\t\t\t\treturn editor.save(groupId, options);\n\t\t\t}),\n\t\t);\n\n\t\t// Editors to save sequentially\n\t\tfor (const { groupId, editor } of editorsToSaveSequentially) {\n\t\t\tif (editor.isDisposed()) {\n\t\t\t\tcontinue; // might have been disposed from the save already\n\t\t\t}\n\n\t\t\t// Preserve view state by opening the editor first if the editor\n\t\t\t// is untitled or we \"Save As\". This also allows the user to review\n\t\t\t// the contents of the editor before making a decision.\n\t\t\tconst editorPane = await this.openEditor(editor, groupId);\n\t\t\tconst editorOptions: IEditorOptions = {\n\t\t\t\tpinned: true,\n\t\t\t\tviewState: editorPane?.getViewState(),\n\t\t\t};\n\n\t\t\tconst result = options?.saveAs\n\t\t\t\t? await editor.saveAs(groupId, options)\n\t\t\t\t: await editor.save(groupId, options);\n\t\t\tsaveResults.push(result);\n\n\t\t\tif (!result) {\n\t\t\t\tbreak; // failed or cancelled, abort\n\t\t\t}\n\n\t\t\t// Replace editor preserving viewstate (either across all groups or\n\t\t\t// only selected group) if the resulting editor is different from the\n\t\t\t// current one.\n\t\t\tif (!editor.matches(result)) {\n\t\t\t\tconst targetGroups = editor.hasCapability(\n\t\t\t\t\tEditorInputCapabilities.Untitled,\n\t\t\t\t)\n\t\t\t\t\t? this.editorGroupsContainer.groups.map(\n\t\t\t\t\t\t\t(group) => group.id,\n\t\t\t\t\t\t) /* untitled replaces across all groups */\n\t\t\t\t\t: [groupId];\n\t\t\t\tfor (const targetGroup of targetGroups) {\n\t\t\t\t\tif (result instanceof EditorInput) {\n\t\t\t\t\t\tawait this.replaceEditors(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\teditor,\n\t\t\t\t\t\t\t\t\treplacement: result,\n\t\t\t\t\t\t\t\t\toptions: editorOptions,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\ttargetGroup,\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tawait this.replaceEditors(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\teditor,\n\t\t\t\t\t\t\t\t\treplacement: {\n\t\t\t\t\t\t\t\t\t\t...result,\n\t\t\t\t\t\t\t\t\t\toptions: editorOptions,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\ttargetGroup,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tsuccess: saveResults.every((result) => !!result),\n\t\t\teditors: coalesce(saveResults),\n\t\t};\n\t}\n\n\tsaveAll(options?: ISaveAllEditorsOptions): Promise<ISaveEditorsResult> {\n\t\treturn this.save(this.getAllModifiedEditors(options), options);\n\t}\n\n\tasync revert(\n\t\teditors: IEditorIdentifier | IEditorIdentifier[],\n\t\toptions?: IRevertOptions,\n\t): Promise<boolean> {\n\t\t// Convert to array\n\t\tif (!Array.isArray(editors)) {\n\t\t\teditors = [editors];\n\t\t}\n\n\t\t// Make sure to not revert the same editor multiple times\n\t\t// by using the `matches()` method to find duplicates\n\t\tconst uniqueEditors = this.getUniqueEditors(editors);\n\n\t\tawait Promises.settled(\n\t\t\tuniqueEditors.map(async ({ groupId, editor }) => {\n\t\t\t\t// Use revert as a hint to pin the editor\n\t\t\t\tthis.editorGroupsContainer.getGroup(groupId)?.pinEditor(editor);\n\n\t\t\t\treturn editor.revert(groupId, options);\n\t\t\t}),\n\t\t);\n\n\t\treturn !uniqueEditors.some(({ editor }) => editor.isDirty());\n\t}\n\n\tasync revertAll(options?: IRevertAllEditorsOptions): Promise<boolean> {\n\t\treturn this.revert(this.getAllModifiedEditors(options), options);\n\t}\n\n\tprivate getAllModifiedEditors(\n\t\toptions?: IBaseSaveRevertAllEditorOptions,\n\t): IEditorIdentifier[] {\n\t\tconst editors: IEditorIdentifier[] = [];\n\n\t\tfor (const group of this.editorGroupsContainer.getGroups(\n\t\t\tGroupsOrder.MOST_RECENTLY_ACTIVE,\n\t\t)) {\n\t\t\tfor (const editor of group.getEditors(\n\t\t\t\tEditorsOrder.MOST_RECENTLY_ACTIVE,\n\t\t\t)) {\n\t\t\t\tif (!editor.isModified()) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(typeof options?.includeUntitled === \"boolean\" ||\n\t\t\t\t\t\t!options?.includeUntitled?.includeScratchpad) &&\n\t\t\t\t\teditor.hasCapability(EditorInputCapabilities.Scratchpad)\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t!options?.includeUntitled &&\n\t\t\t\t\teditor.hasCapability(EditorInputCapabilities.Untitled)\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (options?.excludeSticky && group.isSticky(editor)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\teditors.push({ groupId: group.id, editor });\n\t\t\t}\n\t\t}\n\n\t\treturn editors;\n\t}\n\n\tprivate getUniqueEditors(\n\t\teditors: IEditorIdentifier[],\n\t): IEditorIdentifier[] {\n\t\tconst uniqueEditors: IEditorIdentifier[] = [];\n\t\tfor (const { editor, groupId } of editors) {\n\t\t\tif (\n\t\t\t\tuniqueEditors.some((uniqueEditor) =>\n\t\t\t\t\tuniqueEditor.editor.matches(editor),\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tuniqueEditors.push({ editor, groupId });\n\t\t}\n\n\t\treturn uniqueEditors;\n\t}\n\n\t//#endregion\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\t// Dispose remaining watchers if any\n\t\tthis.activeOutOfWorkspaceWatchers.forEach((disposable) =>\n\t\t\tdispose(disposable),\n\t\t);\n\t\tthis.activeOutOfWorkspaceWatchers.clear();\n\t}\n}\n\nregisterSingleton(\n\tIEditorService,\n\tnew SyncDescriptor(EditorService, [undefined], false),\n);\n"],
  "mappings": "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",
  "names": ["editors"]
}
