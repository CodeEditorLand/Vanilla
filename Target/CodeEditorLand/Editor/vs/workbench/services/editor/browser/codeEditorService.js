var p=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var E=(s,n,o,e)=>{for(var r=e>1?void 0:e?C(n,o):n,i=s.length-1,t;i>=0;i--)(t=s[i])&&(r=(e?t(n,o,r):t(r))||r);return e&&r&&p(n,o,r),r},c=(s,n)=>(o,e)=>n(o,e,s);import{isEqual as f}from"../../../../base/common/resources.js";import{getCodeEditor as u,isCodeEditor as l,isCompositeEditor as m,isDiffEditor as v}from"../../../../editor/browser/editorBrowser.js";import{AbstractCodeEditorService as g}from"../../../../editor/browser/services/abstractCodeEditorService.js";import{ICodeEditorService as I}from"../../../../editor/browser/services/codeEditorService.js";import{ScrollType as h}from"../../../../editor/common/editorCommon.js";import{IConfigurationService as S}from"../../../../platform/configuration/common/configuration.js";import"../../../../platform/editor/common/editor.js";import{InstantiationType as b,registerSingleton as P}from"../../../../platform/instantiation/common/extensions.js";import{IThemeService as T}from"../../../../platform/theme/common/themeService.js";import"../../../common/editor.js";import{applyTextEditorOptions as O}from"../../../common/editor/editorOptions.js";import{ACTIVE_GROUP as x,IEditorService as y,SIDE_GROUP as w}from"../common/editorService.js";let a=class extends g{constructor(o,e,r){super(e);this.editorService=o;this.configurationService=r;this._register(this.registerCodeEditorOpenHandler(this.doOpenCodeEditor.bind(this))),this._register(this.registerCodeEditorOpenHandler(this.doOpenCodeEditorFromDiff.bind(this)))}getActiveCodeEditor(){const o=this.editorService.activeTextEditorControl;if(l(o))return o;if(v(o))return o.getModifiedEditor();const e=this.editorService.activeEditorPane?.getControl();return m(e)&&l(e.activeCodeEditor)?e.activeCodeEditor:null}async doOpenCodeEditorFromDiff(o,e,r){const i=this.editorService.activeTextEditorControl;if(!r&&v(i)&&o.options&&o.resource&&e===i.getModifiedEditor()&&i.getModel()&&f(o.resource,i.getModel()?.modified.uri)){const t=i.getModifiedEditor();return O(o.options,t,h.Smooth),t}return null}async doOpenCodeEditor(o,e,r){if(!this.configurationService.getValue().workbench?.editor?.enablePreviewFromCodeNavigation&&e&&!o.options?.pinned&&!r&&!f(e.getModel()?.uri,o.resource)){for(const d of this.editorService.visibleEditorPanes)if(u(d.getControl())===e){d.group.pinEditor();break}}const t=await this.editorService.openEditor(o,r?w:x);if(t){const d=t.getControl();if(l(d))return d;if(m(d)&&l(d.activeCodeEditor))return d.activeCodeEditor}return null}};a=E([c(0,y),c(1,T),c(2,S)],a),P(I,a,b.Delayed);export{a as CodeEditorService};
