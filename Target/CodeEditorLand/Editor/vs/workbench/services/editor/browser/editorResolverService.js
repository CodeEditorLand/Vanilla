var B=Object.defineProperty;var x=Object.getOwnPropertyDescriptor;var N=(O,y,e,n)=>{for(var t=n>1?void 0:n?x(y,e):y,o=O.length-1,i;o>=0;o--)(i=O[o])&&(t=(n?i(y,e,t):i(t))||t);return n&&t&&B(y,e,t),t},E=(O,y)=>(e,n)=>y(e,n,O);import*as L from"../../../../base/common/glob.js";import{distinct as U,insert as W}from"../../../../base/common/arrays.js";import{Disposable as Q,DisposableStore as V,toDisposable as H}from"../../../../base/common/lifecycle.js";import{basename as Y,extname as S,isEqual as $}from"../../../../base/common/resources.js";import{URI as A}from"../../../../base/common/uri.js";import{IConfigurationService as q}from"../../../../platform/configuration/common/configuration.js";import{EditorActivation as J,EditorResolution as F}from"../../../../platform/editor/common/editor.js";import{DEFAULT_EDITOR_ASSOCIATION as v,EditorResourceAccessor as D,isEditorInputWithOptions as K,isEditorInputWithOptionsAndGroup as T,isResourceDiffEditorInput as M,isResourceSideBySideEditorInput as _,isUntitledResourceEditorInput as X,isResourceMergeEditorInput as z,SideBySideEditor as b,isResourceMultiDiffEditorInput as Z}from"../../../common/editor.js";import{IEditorGroupsService as tt}from"../common/editorGroupsService.js";import{Schemas as k}from"../../../../base/common/network.js";import{RegisteredEditorPriority as I,editorsAssociationsSettingId as G,globMatchesResource as C,IEditorResolverService as et,priorityToRank as m,ResolvedStatus as l}from"../common/editorResolverService.js";import{IQuickInputService as it}from"../../../../platform/quickinput/common/quickInput.js";import{localize as h}from"../../../../nls.js";import{INotificationService as ot,Severity as rt}from"../../../../platform/notification/common/notification.js";import{ITelemetryService as nt}from"../../../../platform/telemetry/common/telemetry.js";import{InstantiationType as st,registerSingleton as dt}from"../../../../platform/instantiation/common/extensions.js";import{IStorageService as at,StorageScope as R,StorageTarget as j}from"../../../../platform/storage/common/storage.js";import{IExtensionService as ct}from"../../extensions/common/extensions.js";import{ILogService as ut}from"../../../../platform/log/common/log.js";import{findGroup as ft}from"../common/editorGroupFinder.js";import{IInstantiationService as pt}from"../../../../platform/instantiation/common/instantiation.js";import{SideBySideEditorInput as lt}from"../../../common/editor/sideBySideEditorInput.js";import{PauseableEmitter as gt}from"../../../../base/common/event.js";let p=class extends Q{constructor(e,n,t,o,i,r,d,u,s){super();this.editorGroupService=e;this.instantiationService=n;this.configurationService=t;this.quickInputService=o;this.notificationService=i;this.telemetryService=r;this.storageService=d;this.extensionService=u;this.logService=s;this.cache=new Set(JSON.parse(this.storageService.get(p.cacheStorageID,R.PROFILE,JSON.stringify([])))),this.storageService.remove(p.cacheStorageID,R.PROFILE),this._register(this.storageService.onWillSaveState(()=>{this.cacheEditors()})),this._register(this.extensionService.onDidRegisterExtensions(()=>{this.cache=void 0}))}_serviceBrand;_onDidChangeEditorRegistrations=this._register(new gt);onDidChangeEditorRegistrations=this._onDidChangeEditorRegistrations.event;static configureDefaultID="promptOpenWith.configureDefault";static cacheStorageID="editorOverrideService.cache";static conflictingDefaultsStorageID="editorOverrideService.conflictingDefaults";_editors=new Map;_flattenedEditors=new Map;_shouldReFlattenEditors=!0;cache;resolveUntypedInputAndGroup(e,n){const t=e,o=this.instantiationService.invokeFunction(ft,t,n);if(o instanceof Promise)return o.then(([i,r])=>[t,i,r]);{const[i,r]=o;return[t,i,r]}}async resolveEditor(e,n){if(this._flattenedEditors=this._flattenEditorsMap(),_(e))return this.doResolveSideBySideEditor(e,n);let t;const o=this.resolveUntypedInputAndGroup(e,n);if(o instanceof Promise?t=await o:t=o,!t)return l.NONE;const[i,r,d]=t;d&&(i.options={...i.options,activation:d});let u=D.getCanonicalUri(i,{supportSideBySide:b.PRIMARY});if(this.cache&&u&&this.resourceMatchesCache(u)&&await this.extensionService.whenInstalledExtensionsRegistered(),u===void 0)u=A.from({scheme:k.untitled});else if(u.scheme===void 0||u===null)return l.NONE;if(i.options?.override===F.PICK){const c=await this.doPickEditor(i);if(!c)return l.ABORT;i.options=c}let{editor:s,conflictingDefault:f}=this.getEditor(u,i.options?.override);if(!s&&(i.options?.override||K(e)))return l.NONE;if(!s){const c=this.getEditor(u,v.id);if(s=c?.editor,f=c?.conflictingDefault,!s)return l.NONE}if(M(i)&&i.options?.override===void 0){let c=D.getCanonicalUri(i,{supportSideBySide:b.SECONDARY});c||(c=A.from({scheme:k.untitled}));const{editor:g}=this.getEditor(c,void 0);if(!g||s.editorInfo.id!==g.editorInfo.id){const{editor:P,conflictingDefault:w}=this.getEditor(u,v.id);s=P,f=w}if(!s)return l.NONE}if(i.options={override:s.editorInfo.id,...i.options},s.editorFactoryObject.createDiffEditorInput===void 0&&M(i))return l.NONE;const a=await this.doResolveEditor(i,r,s);return f&&a&&await this.doHandleConflictingDefaults(u,s.editorInfo.label,i,a.editor,r),a?(this.sendEditorResolutionTelemetry(a.editor),a.editor.editorId!==s.editorInfo.id&&this.logService.warn(`Editor ID Mismatch: ${a.editor.editorId} !== ${s.editorInfo.id}. This will cause bugs. Please ensure editorInput.editorId matches the registered id`),{...a,group:r}):l.ABORT}async doResolveSideBySideEditor(e,n){const t=await this.resolveEditor(e.primary,n);if(!T(t))return l.NONE;const o=await this.resolveEditor(e.secondary,t.group??n);return T(o)?{group:t.group??o.group,editor:this.instantiationService.createInstance(lt,e.label,e.description,o.editor,t.editor),options:e.options}:l.NONE}bufferChangeEvents(e){this._onDidChangeEditorRegistrations.pause();try{e()}finally{this._onDidChangeEditorRegistrations.resume()}}registerEditor(e,n,t,o){let i=this._editors.get(e);i===void 0&&(i=new Map,this._editors.set(e,i));let r=i.get(n.id);r===void 0&&(r=[]);const d=W(r,{globPattern:e,editorInfo:n,options:t,editorFactoryObject:o});return i.set(n.id,r),this._shouldReFlattenEditors=!0,this._onDidChangeEditorRegistrations.fire(),H(()=>{d(),r&&r.length===0&&i?.delete(n.id),this._shouldReFlattenEditors=!0,this._onDidChangeEditorRegistrations.fire()})}getAssociationsForResource(e){let t=this.getAllUserAssociations().filter(i=>i.filenamePattern&&C(i.filenamePattern,e));t=t.sort((i,r)=>(r.filenamePattern?.length??0)-(i.filenamePattern?.length??0));const o=this._registeredEditors;return t.filter(i=>o.find(r=>r.editorInfo.id===i.viewType))}getAllUserAssociations(){const e=this.configurationService.inspect(G)||{},n=e.defaultValue??{},t=e.workspaceValue??{},o=e.userValue??{},i={...t};for(const[d,u]of Object.entries({...n,...o}))i[d]===void 0&&(i[d]=u);const r=[];for(const[d,u]of Object.entries(i)){const s={filenamePattern:d,viewType:u};r.push(s)}return r}_flattenEditorsMap(){if(!this._shouldReFlattenEditors)return this._flattenedEditors;this._shouldReFlattenEditors=!1;const e=new Map;for(const[n,t]of this._editors){const o=[];for(const i of t.values()){let r;for(const d of i)r||(r={editorInfo:d.editorInfo,globPattern:d.globPattern,options:{},editorFactoryObject:{}}),r.options={...r.options,...d.options},r.editorFactoryObject={...r.editorFactoryObject,...d.editorFactoryObject};r&&o.push(r)}e.set(n,o)}return e}get _registeredEditors(){return Array.from(this._flattenedEditors.values()).flat()}updateUserAssociations(e,n){const t={viewType:n,filenamePattern:e},o=this.getAllUserAssociations(),i=Object.create(null);for(const r of[...o,t])r.filenamePattern&&(i[r.filenamePattern]=r.viewType);this.configurationService.updateValue(G,i)}findMatchingEditors(e){const n=this.getAssociationsForResource(e),t=[];for(const[o,i]of this._flattenedEditors)for(const r of i)(n.find(u=>u.viewType===r.editorInfo.id)&&r.editorInfo.priority!==I.exclusive||C(o,e))&&t.push(r);return t.sort((o,i)=>m(i.editorInfo.priority)===m(o.editorInfo.priority)&&typeof i.globPattern=="string"&&typeof o.globPattern=="string"?i.globPattern.length-o.globPattern.length:m(i.editorInfo.priority)-m(o.editorInfo.priority))}getEditors(e){if(this._flattenedEditors=this._flattenEditorsMap(),A.isUri(e)){const n=this.findMatchingEditors(e);return n.find(t=>t.editorInfo.priority===I.exclusive)?[]:n.map(t=>t.editorInfo)}return U(this._registeredEditors.map(n=>n.editorInfo),n=>n.id)}getEditor(e,n){const t=(f,a)=>f.find(c=>c.options&&c.options.canSupportResource!==void 0?c.editorInfo.id===a&&c.options.canSupportResource(e):c.editorInfo.id===a);if(n&&n!==F.EXCLUSIVE_ONLY){const f=this._registeredEditors;return{editor:t(f,n),conflictingDefault:!1}}const o=this.findMatchingEditors(e),i=this.getAssociationsForResource(e),r=n===F.EXCLUSIVE_ONLY?I.exclusive:I.builtin;let d=o.filter(f=>m(f.editorInfo.priority)>=m(r)&&f.editorInfo.id!==v.id);if(d.length===0)return{editor:i[0]&&r!==I.exclusive?t(o,i[0].viewType):void 0,conflictingDefault:!1};const u=d[0].editorInfo.priority===I.exclusive?d[0].editorInfo.id:i[0]?.viewType||d[0].editorInfo.id;let s=!1;return d=d.filter(f=>f.editorInfo.priority!==I.exclusive),i.length===0&&d.length>1&&(s=!0),{editor:t(o,u),conflictingDefault:s}}async doResolveEditor(e,n,t){let o=e.options;const i=D.getCanonicalUri(e,{supportSideBySide:b.PRIMARY});if(o&&typeof o.activation>"u"&&(o={...o,activation:o.preserveFocus?J.RESTORE:void 0}),z(e)){if(!t.editorFactoryObject.createMergeEditorInput)return;const s=await t.editorFactoryObject.createMergeEditorInput(e,n);return{editor:s.editor,options:s.options??o}}if(M(e)){if(!t.editorFactoryObject.createDiffEditorInput)return;const s=await t.editorFactoryObject.createDiffEditorInput(e,n);return{editor:s.editor,options:s.options??o}}if(Z(e)){if(!t.editorFactoryObject.createMultiDiffEditorInput)return;const s=await t.editorFactoryObject.createMultiDiffEditorInput(e,n);return{editor:s.editor,options:s.options??o}}if(_(e))throw new Error("Untyped side by side editor input not supported here.");if(X(e)){if(!t.editorFactoryObject.createUntitledEditorInput)return;const s=await t.editorFactoryObject.createUntitledEditorInput(e,n);return{editor:s.editor,options:s.options??o}}if(i===void 0)throw new Error("Undefined resource on non untitled editor input.");if(typeof t.options?.singlePerResource=="function"?t.options.singlePerResource():t.options?.singlePerResource){const s=this.findExistingEditorsForResource(i,t.editorInfo.id);if(s.length){const f=await this.moveExistingEditorForResource(s,n);return f?{editor:f,options:o}:void 0}}if(!t.editorFactoryObject.createEditorInput)return;const d=await t.editorFactoryObject.createEditorInput(e,n);return o=d.options??o,{editor:d.editor,options:o}}async moveExistingEditorForResource(e,n){const t=e[0];for(const{editor:o,group:i}of e)if(o!==t.editor&&!await i.closeEditor(o))return;if(!(n.id!==t.group.id&&!t.group.moveEditor(t.editor,n)))return t.editor}findExistingEditorsForResource(e,n){const t=[],o=U([...this.editorGroupService.groups]);for(const i of o)for(const r of i.editors)$(r.resource,e)&&r.editorId===n&&t.push({editor:r,group:i});return t}async doHandleConflictingDefaults(e,n,t,o,i){const r=this.findMatchingEditors(e),d=JSON.parse(this.storageService.get(p.conflictingDefaultsStorageID,R.PROFILE,"{}")),u=`*${S(e)}`,s=()=>{d[u]=[],r.forEach(c=>d[u].push(c.editorInfo.id)),this.storageService.store(p.conflictingDefaultsStorageID,JSON.stringify(d),R.PROFILE,j.MACHINE)};if(d[u]&&d[u].find(c=>c===o.editorId))return;const a=this.notificationService.prompt(rt.Warning,h("editorResolver.conflictingDefaults","There are multiple default editors available for the resource."),[{label:h("editorResolver.configureDefault","Configure Default"),run:async()=>{const c=await this.doPickEditor(t,!0);if(!c)return;t.options=c;const g=await this.resolveEditor(t,i);g===l.ABORT||g===l.NONE||i.replaceEditors([{editor:o,replacement:g.editor,options:g.options??c}])}},{label:h("editorResolver.keepDefault","Keep {0}",n),run:s}]).onDidClose(()=>{s(),a.dispose()})}mapEditorsToQuickPickEntry(e,n){const t=this.editorGroupService.activeGroup.findEditors(e).at(0);let o=e.scheme===k.untitled?this._registeredEditors.filter(a=>a.editorInfo.priority!==I.exclusive):this.findMatchingEditors(e);o=U(o,a=>a.editorInfo.id);const i=this.getAssociationsForResource(e)[0]?.viewType;o=o.sort((a,c)=>a.editorInfo.id===v.id?-1:c.editorInfo.id===v.id?1:m(c.editorInfo.priority)-m(a.editorInfo.priority));const r=[],d=h("promptOpenWith.currentlyActive","Active"),u=h("promptOpenWith.currentDefault","Default"),s=h("promptOpenWith.currentDefaultAndActive","Active and Default");let f=i;if(!f&&o.length>2&&o[1]?.editorInfo.priority!==I.option&&(f=o[1]?.editorInfo.id),f||(f=v.id),o.forEach(a=>{const c=t?.editorId??v.id,g=t?a.editorInfo.id===c:!1,P=a.editorInfo.id===f,w={id:a.editorInfo.id,label:a.editorInfo.label,description:g&&P?s:g?d:P?u:void 0,detail:a.editorInfo.detail??a.editorInfo.priority};r.push(w)}),!n&&S(e)!==""){const a={type:"separator"};r.push(a);const c={id:p.configureDefaultID,label:h("promptOpenWith.configureDefault","Configure default editor for '{0}'...",`*${S(e)}`)};r.push(c)}return r}async doPickEditor(e,n){let t=D.getOriginalUri(e,{supportSideBySide:b.PRIMARY});t===void 0&&(t=A.from({scheme:k.untitled}));const o=this.mapEditorsToQuickPickEntry(t,n),i=new V,r=i.add(this.quickInputService.createQuickPick({useSeparators:!0})),d=n?h("promptOpenWith.updateDefaultPlaceHolder","Select new default editor for '{0}'",`*${S(t)}`):h("promptOpenWith.placeHolder","Select editor for '{0}'",Y(t));r.placeholder=d,r.canAcceptInBackground=!0,r.items=o;const u=r.items.find(f=>f.type==="item");u&&(r.selectedItems=[u]);const s=await new Promise(f=>{i.add(r.onDidAccept(a=>{let c;r.selectedItems.length===1&&(c={item:r.selectedItems[0],keyMods:r.keyMods,openInBackground:a.inBackground}),t&&n&&c?.item.id&&this.updateUserAssociations(`*${S(t)}`,c.item.id),f(c)})),i.add(r.onDidHide(()=>{i.dispose(),f(void 0)})),i.add(r.onDidTriggerItemButton(a=>{f({item:a.item,openInBackground:!1}),t&&a.item&&a.item.id&&this.updateUserAssociations(`*${S(t)}`,a.item.id)})),r.show()});if(r.dispose(),s)return s.item.id===p.configureDefaultID?this.doPickEditor(e,!0):{...e.options,override:s.item.id,preserveFocus:s.openInBackground||e.options?.preserveFocus}}sendEditorResolutionTelemetry(e){e.editorId&&this.telemetryService.publicLog2("override.viewType",{viewType:e.editorId})}cacheEditors(){const e=new Set;for(const[t,o]of this._flattenedEditors)o.find(r=>r.editorInfo.priority!==I.option&&r.editorInfo.id!==v.id)&&(L.isRelativePattern(t)?e.add(`${t.pattern}`):e.add(t));const n=this.getAllUserAssociations();for(const t of n)t.filenamePattern&&e.add(t.filenamePattern);this.storageService.store(p.cacheStorageID,JSON.stringify(Array.from(e)),R.PROFILE,j.MACHINE)}resourceMatchesCache(e){if(!this.cache)return!1;for(const n of this.cache)if(C(n,e))return!0;return!1}};p=N([E(0,tt),E(1,pt),E(2,q),E(3,it),E(4,ot),E(5,nt),E(6,at),E(7,ct),E(8,ut)],p),dt(et,p,st.Eager);export{p as EditorResolverService};
