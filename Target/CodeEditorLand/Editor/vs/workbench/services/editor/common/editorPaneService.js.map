{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/editor/common/editorPaneService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IWillInstantiateEditorPaneEvent } from '../../../common/editor.js';\nimport { Event } from '../../../../base/common/event.js';\n\nexport const IEditorPaneService = createDecorator<IEditorPaneService>('editorPaneService');\n\nexport interface IEditorPaneService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Emitted when an editor pane is about to be instantiated.\n\t */\n\treadonly onWillInstantiateEditorPane: Event<IWillInstantiateEditorPaneEvent>;\n\n\t/**\n\t * Returns whether a editor pane with the given type id has been instantiated.\n\t */\n\tdidInstantiateEditorPane(typeId: string): boolean;\n}\n"],
  "mappings": "AAKA,SAAS,uBAAuB;AAChC,SAAS,uCAAuC;AAChD,SAAS,aAAa;AAEf,MAAM,qBAAqB,gBAAoC,mBAAmB;",
  "names": []
}
