var m=Object.defineProperty;var z=Object.getOwnPropertyDescriptor;var c=(a,i,e,t)=>{for(var n=t>1?void 0:t?z(i,e):i,o=a.length-1,l;o>=0;o--)(l=a[o])&&(n=(t?l(i,e,n):l(n))||n);return t&&n&&m(i,e,n),n},s=(a,i)=>(e,t)=>i(e,t,a);import{createDecorator as h,IInstantiationService as v}from"../../../../platform/instantiation/common/instantiation.js";import{Extensions as d}from"../../../common/contributions.js";import{Registry as u}from"../../../../platform/registry/common/platform.js";import{LifecyclePhase as p}from"../../lifecycle/common/lifecycle.js";import{isWeb as w}from"../../../../base/common/platform.js";import{IExtensionService as S}from"../../extensions/common/extensions.js";import{mark as I}from"../../../../base/common/performance.js";const P=h("IUserDataInitializationService");class E{constructor(i=[]){this.initializers=i}_serviceBrand;async whenInitializationFinished(){await this.requiresInitialization()&&await Promise.all(this.initializers.map(i=>i.whenInitializationFinished()))}async requiresInitialization(){return(await Promise.all(this.initializers.map(i=>i.requiresInitialization()))).some(i=>i)}async initializeRequiredResources(){await this.requiresInitialization()&&await Promise.all(this.initializers.map(i=>i.initializeRequiredResources()))}async initializeOtherResources(i){await this.requiresInitialization()&&await Promise.all(this.initializers.map(e=>e.initializeOtherResources(i)))}async initializeInstalledExtensions(i){await this.requiresInitialization()&&await Promise.all(this.initializers.map(e=>e.initializeInstalledExtensions(i)))}}let r=class{constructor(i,e,t){t.whenInstalledExtensionsRegistered().then(()=>this.initializeOtherResource(i,e))}async initializeOtherResource(i,e){await i.requiresInitialization()&&(I("code/willInitOtherUserData"),await i.initializeOtherResources(e),I("code/didInitOtherUserData"))}};r=c([s(0,P),s(1,v),s(2,S)],r),w&&u.as(d.Workbench).registerWorkbenchContribution(r,p.Restored);export{P as IUserDataInitializationService,E as UserDataInitializationService};
