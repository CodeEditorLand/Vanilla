{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/suggest/browser/simpleSuggestWidget.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './media/suggest.css';\nimport * as dom from '../../../../base/browser/dom.js';\nimport { IListEvent, IListGestureEvent, IListMouseEvent } from '../../../../base/browser/ui/list/list.js';\nimport { List } from '../../../../base/browser/ui/list/listWidget.js';\nimport { ResizableHTMLElement } from '../../../../base/browser/ui/resizable/resizable.js';\nimport { SimpleCompletionItem } from './simpleCompletionItem.js';\nimport { LineContext, SimpleCompletionModel } from './simpleCompletionModel.js';\nimport { SimpleSuggestWidgetItemRenderer, type ISimpleSuggestWidgetFontInfo } from './simpleSuggestWidgetRenderer.js';\nimport { TimeoutTimer } from '../../../../base/common/async.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { MutableDisposable, Disposable } from '../../../../base/common/lifecycle.js';\nimport { clamp } from '../../../../base/common/numbers.js';\nimport { localize } from '../../../../nls.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { SuggestWidgetStatus } from '../../../../editor/contrib/suggest/browser/suggestWidgetStatus.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\n\nconst $ = dom.$;\n\nconst enum State {\n\tHidden,\n\tLoading,\n\tEmpty,\n\tOpen,\n\tFrozen,\n\tDetails\n}\n\nexport interface ISimpleSelectedSuggestion {\n\titem: SimpleCompletionItem;\n\tindex: number;\n\tmodel: SimpleCompletionModel;\n}\n\ninterface IPersistedWidgetSizeDelegate {\n\trestore(): dom.Dimension | undefined;\n\tstore(size: dom.Dimension): void;\n\treset(): void;\n}\n\nconst enum WidgetPositionPreference {\n\tAbove,\n\tBelow\n}\n\nexport interface IWorkbenchSuggestWidgetOptions {\n\t/**\n\t * The {@link MenuId} to use for the status bar. Items on the menu must use the groups `'left'`\n\t * and `'right'`.\n\t */\n\tstatusBarMenuId?: MenuId;\n}\n\nexport class SimpleSuggestWidget extends Disposable {\n\n\tprivate _state: State = State.Hidden;\n\tprivate _completionModel?: SimpleCompletionModel;\n\tprivate _cappedHeight?: { wanted: number; capped: number };\n\tprivate _forceRenderingAbove: boolean = false;\n\tprivate _preference?: WidgetPositionPreference;\n\tprivate readonly _pendingLayout = this._register(new MutableDisposable());\n\n\treadonly element: ResizableHTMLElement;\n\tprivate readonly _listElement: HTMLElement;\n\tprivate readonly _list: List<SimpleCompletionItem>;\n\tprivate readonly _status?: SuggestWidgetStatus;\n\n\tprivate readonly _showTimeout = this._register(new TimeoutTimer());\n\n\tprivate readonly _onDidSelect = this._register(new Emitter<ISimpleSelectedSuggestion>());\n\treadonly onDidSelect: Event<ISimpleSelectedSuggestion> = this._onDidSelect.event;\n\tprivate readonly _onDidHide = this._register(new Emitter<this>());\n\treadonly onDidHide: Event<this> = this._onDidHide.event;\n\tprivate readonly _onDidShow = this._register(new Emitter<this>());\n\treadonly onDidShow: Event<this> = this._onDidShow.event;\n\n\tget list(): List<SimpleCompletionItem> { return this._list; }\n\n\tconstructor(\n\t\tprivate readonly _container: HTMLElement,\n\t\tprivate readonly _persistedSize: IPersistedWidgetSizeDelegate,\n\t\tprivate readonly _getFontInfo: () => ISimpleSuggestWidgetFontInfo,\n\t\toptions: IWorkbenchSuggestWidgetOptions,\n\t\t@IInstantiationService instantiationService: IInstantiationService\n\t) {\n\t\tsuper();\n\n\t\tthis.element = this._register(new ResizableHTMLElement());\n\t\tthis.element.domNode.classList.add('workbench-suggest-widget');\n\t\tthis._container.appendChild(this.element.domNode);\n\n\t\tclass ResizeState {\n\t\t\tconstructor(\n\t\t\t\treadonly persistedSize: dom.Dimension | undefined,\n\t\t\t\treadonly currentSize: dom.Dimension,\n\t\t\t\tpublic persistHeight = false,\n\t\t\t\tpublic persistWidth = false,\n\t\t\t) { }\n\t\t}\n\n\t\tlet state: ResizeState | undefined;\n\t\tthis._register(this.element.onDidWillResize(() => {\n\t\t\t// this._preferenceLocked = true;\n\t\t\tstate = new ResizeState(this._persistedSize.restore(), this.element.size);\n\t\t}));\n\t\tthis._register(this.element.onDidResize(e => {\n\n\t\t\tthis._resize(e.dimension.width, e.dimension.height);\n\n\t\t\tif (state) {\n\t\t\t\tstate.persistHeight = state.persistHeight || !!e.north || !!e.south;\n\t\t\t\tstate.persistWidth = state.persistWidth || !!e.east || !!e.west;\n\t\t\t}\n\n\t\t\tif (!e.done) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (state) {\n\t\t\t\t// only store width or height value that have changed and also\n\t\t\t\t// only store changes that are above a certain threshold\n\t\t\t\tconst { itemHeight, defaultSize } = this._getLayoutInfo();\n\t\t\t\tconst threshold = Math.round(itemHeight / 2);\n\t\t\t\tlet { width, height } = this.element.size;\n\t\t\t\tif (!state.persistHeight || Math.abs(state.currentSize.height - height) <= threshold) {\n\t\t\t\t\theight = state.persistedSize?.height ?? defaultSize.height;\n\t\t\t\t}\n\t\t\t\tif (!state.persistWidth || Math.abs(state.currentSize.width - width) <= threshold) {\n\t\t\t\t\twidth = state.persistedSize?.width ?? defaultSize.width;\n\t\t\t\t}\n\t\t\t\tthis._persistedSize.store(new dom.Dimension(width, height));\n\t\t\t}\n\n\t\t\t// reset working state\n\t\t\t// this._preferenceLocked = false;\n\t\t\tstate = undefined;\n\t\t}));\n\n\t\tconst renderer = new SimpleSuggestWidgetItemRenderer(_getFontInfo);\n\t\tthis._register(renderer);\n\t\tthis._listElement = dom.append(this.element.domNode, $('.tree'));\n\t\tthis._list = this._register(new List('SuggestWidget', this._listElement, {\n\t\t\tgetHeight: (_element: SimpleCompletionItem): number => this._getLayoutInfo().itemHeight,\n\t\t\tgetTemplateId: (_element: SimpleCompletionItem): string => 'suggestion'\n\t\t}, [renderer], {\n\t\t\talwaysConsumeMouseWheel: true,\n\t\t\tuseShadows: false,\n\t\t\tmouseSupport: false,\n\t\t\tmultipleSelectionSupport: false,\n\t\t\taccessibilityProvider: {\n\t\t\t\tgetRole: () => 'option',\n\t\t\t\tgetWidgetAriaLabel: () => localize('suggest', \"Suggest\"),\n\t\t\t\tgetWidgetRole: () => 'listbox',\n\t\t\t\tgetAriaLabel: (item: SimpleCompletionItem) => {\n\t\t\t\t\tlet label = item.completion.label;\n\t\t\t\t\tif (typeof item.completion.label !== 'string') {\n\t\t\t\t\t\tconst { detail, description } = item.completion.label;\n\t\t\t\t\t\tif (detail && description) {\n\t\t\t\t\t\t\tlabel = localize('label.full', '{0}{1}, {2}', label, detail, description);\n\t\t\t\t\t\t} else if (detail) {\n\t\t\t\t\t\t\tlabel = localize('label.detail', '{0}{1}', label, detail);\n\t\t\t\t\t\t} else if (description) {\n\t\t\t\t\t\t\tlabel = localize('label.desc', '{0}, {1}', label, description);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst { detail } = item.completion;\n\n\t\t\t\t\treturn localize('ariaCurrenttSuggestionReadDetails', '{0}, docs: {1}', label, detail);\n\n\t\t\t\t\t// if (!item.isResolved || !this._isDetailsVisible()) {\n\t\t\t\t\t// \treturn label;\n\t\t\t\t\t// }\n\n\t\t\t\t\t// const { documentation, detail } = item.completion;\n\t\t\t\t\t// const docs = strings.format(\n\t\t\t\t\t// \t'{0}{1}',\n\t\t\t\t\t// \tdetail || '',\n\t\t\t\t\t// \tdocumentation ? (typeof documentation === 'string' ? documentation : documentation.value) : '');\n\n\t\t\t\t\t// return nls.localize('ariaCurrenttSuggestionReadDetails', \"{0}, docs: {1}\", label, docs);\n\t\t\t\t},\n\t\t\t}\n\t\t}));\n\n\t\tif (options.statusBarMenuId) {\n\t\t\tthis._status = this._register(instantiationService.createInstance(SuggestWidgetStatus, this.element.domNode, options.statusBarMenuId));\n\t\t\tthis.element.domNode.classList.toggle('with-status-bar', true);\n\t\t}\n\n\t\tthis._register(this._list.onMouseDown(e => this._onListMouseDownOrTap(e)));\n\t\tthis._register(this._list.onTap(e => this._onListMouseDownOrTap(e)));\n\t\tthis._register(this._list.onDidChangeSelection(e => this._onListSelection(e)));\n\t}\n\n\tprivate _cursorPosition?: { top: number; left: number; height: number };\n\n\tsetCompletionModel(completionModel: SimpleCompletionModel) {\n\t\tthis._completionModel = completionModel;\n\t}\n\n\thasCompletions(): boolean {\n\t\treturn this._completionModel?.items.length !== 0;\n\t}\n\n\tshowSuggestions(selectionIndex: number, isFrozen: boolean, isAuto: boolean, cursorPosition: { top: number; left: number; height: number }): void {\n\t\tthis._cursorPosition = cursorPosition;\n\n\t\t// this._contentWidget.setPosition(this.editor.getPosition());\n\t\t// this._loadingTimeout?.dispose();\n\n\t\t// this._currentSuggestionDetails?.cancel();\n\t\t// this._currentSuggestionDetails = undefined;\n\n\t\tif (isFrozen && this._state !== State.Empty && this._state !== State.Hidden) {\n\t\t\tthis._setState(State.Frozen);\n\t\t\treturn;\n\t\t}\n\n\t\tconst visibleCount = this._completionModel?.items.length ?? 0;\n\t\tconst isEmpty = visibleCount === 0;\n\t\t// this._ctxSuggestWidgetMultipleSuggestions.set(visibleCount > 1);\n\n\t\tif (isEmpty) {\n\t\t\tthis._setState(isAuto ? State.Hidden : State.Empty);\n\t\t\tthis._completionModel = undefined;\n\t\t\treturn;\n\t\t}\n\n\t\t// this._focusedItem = undefined;\n\n\t\t// calling list.splice triggers focus event which this widget forwards. That can lead to\n\t\t// suggestions being cancelled and the widget being cleared (and hidden). All this happens\n\t\t// before revealing and focusing is done which means revealing and focusing will fail when\n\t\t// they get run.\n\t\t// this._onDidFocus.pause();\n\t\t// this._onDidSelect.pause();\n\t\ttry {\n\t\t\tthis._list.splice(0, this._list.length, this._completionModel?.items ?? []);\n\t\t\tthis._setState(isFrozen ? State.Frozen : State.Open);\n\t\t\tthis._list.reveal(selectionIndex, 0);\n\t\t\tthis._list.setFocus([selectionIndex]);\n\t\t\t// this._list.setFocus(noFocus ? [] : [selectionIndex]);\n\t\t} finally {\n\t\t\t// this._onDidFocus.resume();\n\t\t\t// this._onDidSelect.resume();\n\t\t}\n\n\t\tthis._pendingLayout.value = dom.runAtThisOrScheduleAtNextAnimationFrame(dom.getWindow(this.element.domNode), () => {\n\t\t\tthis._pendingLayout.clear();\n\t\t\tthis._layout(this.element.size);\n\t\t\t// Reset focus border\n\t\t\t// this._details.widget.domNode.classList.remove('focused');\n\t\t});\n\t}\n\n\tsetLineContext(lineContext: LineContext): void {\n\t\tif (this._completionModel) {\n\t\t\tthis._completionModel.lineContext = lineContext;\n\t\t}\n\t}\n\n\tprivate _setState(state: State): void {\n\n\t\tif (this._state === state) {\n\t\t\treturn;\n\t\t}\n\t\tthis._state = state;\n\n\t\tthis.element.domNode.classList.toggle('frozen', state === State.Frozen);\n\t\tthis.element.domNode.classList.remove('message');\n\n\t\tswitch (state) {\n\t\t\tcase State.Hidden:\n\t\t\t\t// dom.hide(this._messageElement, this._listElement, this._status.element);\n\t\t\t\tdom.hide(this._listElement);\n\t\t\t\tif (this._status) {\n\t\t\t\t\tdom.hide(this._status?.element);\n\t\t\t\t}\n\t\t\t\t// this._details.hide(true);\n\t\t\t\tthis._status?.hide();\n\t\t\t\t// this._contentWidget.hide();\n\t\t\t\t// this._ctxSuggestWidgetVisible.reset();\n\t\t\t\t// this._ctxSuggestWidgetMultipleSuggestions.reset();\n\t\t\t\t// this._ctxSuggestWidgetHasFocusedSuggestion.reset();\n\t\t\t\tthis._showTimeout.cancel();\n\t\t\t\tthis.element.domNode.classList.remove('visible');\n\t\t\t\tthis._list.splice(0, this._list.length);\n\t\t\t\t// this._focusedItem = undefined;\n\t\t\t\tthis._cappedHeight = undefined;\n\t\t\t\t// this._explainMode = false;\n\t\t\t\tbreak;\n\t\t\tcase State.Loading:\n\t\t\t\tthis.element.domNode.classList.add('message');\n\t\t\t\t// this._messageElement.textContent = SuggestWidget.LOADING_MESSAGE;\n\t\t\t\tdom.hide(this._listElement);\n\t\t\t\tif (this._status) {\n\t\t\t\t\tdom.hide(this._status?.element);\n\t\t\t\t}\n\t\t\t\t// dom.show(this._messageElement);\n\t\t\t\t// this._details.hide();\n\t\t\t\tthis._show();\n\t\t\t\t// this._focusedItem = undefined;\n\t\t\t\tbreak;\n\t\t\tcase State.Empty:\n\t\t\t\tthis.element.domNode.classList.add('message');\n\t\t\t\t// this._messageElement.textContent = SuggestWidget.NO_SUGGESTIONS_MESSAGE;\n\t\t\t\tdom.hide(this._listElement);\n\t\t\t\tif (this._status) {\n\t\t\t\t\tdom.hide(this._status?.element);\n\t\t\t\t}\n\t\t\t\t// dom.show(this._messageElement);\n\t\t\t\t// this._details.hide();\n\t\t\t\tthis._show();\n\t\t\t\t// this._focusedItem = undefined;\n\t\t\t\tbreak;\n\t\t\tcase State.Open:\n\t\t\t\t// dom.hide(this._messageElement);\n\t\t\t\tdom.show(this._listElement);\n\t\t\t\tif (this._status) {\n\t\t\t\t\tdom.show(this._status?.element);\n\t\t\t\t}\n\t\t\t\tthis._show();\n\t\t\t\tbreak;\n\t\t\tcase State.Frozen:\n\t\t\t\t// dom.hide(this._messageElement);\n\t\t\t\tdom.show(this._listElement);\n\t\t\t\tif (this._status) {\n\t\t\t\t\tdom.show(this._status?.element);\n\t\t\t\t}\n\t\t\t\tthis._show();\n\t\t\t\tbreak;\n\t\t\tcase State.Details:\n\t\t\t\t// dom.hide(this._messageElement);\n\t\t\t\tdom.show(this._listElement);\n\t\t\t\tif (this._status) {\n\t\t\t\t\tdom.show(this._status?.element);\n\t\t\t\t}\n\t\t\t\t// this._details.show();\n\t\t\t\tthis._show();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate _show(): void {\n\t\t// this._layout(this._persistedSize.restore());\n\t\t// dom.show(this.element.domNode);\n\t\t// this._onDidShow.fire();\n\n\n\t\tthis._status?.show();\n\t\t// this._contentWidget.show();\n\t\tdom.show(this.element.domNode);\n\t\tthis._layout(this._persistedSize.restore());\n\t\t// this._ctxSuggestWidgetVisible.set(true);\n\n\t\tthis._showTimeout.cancelAndSet(() => {\n\t\t\tthis.element.domNode.classList.add('visible');\n\t\t\tthis._onDidShow.fire(this);\n\t\t}, 100);\n\t}\n\n\thide(): void {\n\t\tthis._pendingLayout.clear();\n\t\t// this._pendingShowDetails.clear();\n\t\t// this._loadingTimeout?.dispose();\n\n\t\tthis._setState(State.Hidden);\n\t\tthis._onDidHide.fire(this);\n\t\tdom.hide(this.element.domNode);\n\t\tthis.element.clearSashHoverState();\n\t\t// ensure that a reasonable widget height is persisted so that\n\t\t// accidential \"resize-to-single-items\" cases aren't happening\n\t\tconst dim = this._persistedSize.restore();\n\t\tconst minPersistedHeight = Math.ceil(this._getLayoutInfo().itemHeight * 4.3);\n\t\tif (dim && dim.height < minPersistedHeight) {\n\t\t\tthis._persistedSize.store(dim.with(undefined, minPersistedHeight));\n\t\t}\n\t}\n\n\tprivate _layout(size: dom.Dimension | undefined): void {\n\t\tif (!this._cursorPosition) {\n\t\t\treturn;\n\t\t}\n\t\t// if (!this.editor.hasModel()) {\n\t\t// \treturn;\n\t\t// }\n\t\t// if (!this.editor.getDomNode()) {\n\t\t// \t// happens when running tests\n\t\t// \treturn;\n\t\t// }\n\n\t\tconst bodyBox = dom.getClientArea(this._container.ownerDocument.body);\n\t\tconst info = this._getLayoutInfo();\n\n\t\tif (!size) {\n\t\t\tsize = info.defaultSize;\n\t\t}\n\n\t\tlet height = size.height;\n\t\tlet width = size.width;\n\n\t\t// status bar\n\t\tif (this._status) {\n\t\t\tthis._status.element.style.lineHeight = `${info.itemHeight}px`;\n\t\t}\n\n\t\t// if (this._state === State.Empty || this._state === State.Loading) {\n\t\t// \t// showing a message only\n\t\t// \theight = info.itemHeight + info.borderHeight;\n\t\t// \twidth = info.defaultSize.width / 2;\n\t\t// \tthis.element.enableSashes(false, false, false, false);\n\t\t// \tthis.element.minSize = this.element.maxSize = new dom.Dimension(width, height);\n\t\t// \tthis._contentWidget.setPreference(ContentWidgetPositionPreference.BELOW);\n\n\t\t// } else {\n\t\t// showing items\n\n\t\t// width math\n\t\tconst maxWidth = bodyBox.width - info.borderHeight - 2 * info.horizontalPadding;\n\t\tif (width > maxWidth) {\n\t\t\twidth = maxWidth;\n\t\t}\n\t\tconst preferredWidth = this._completionModel ? this._completionModel.stats.pLabelLen * info.typicalHalfwidthCharacterWidth : width;\n\n\t\t// height math\n\t\tconst fullHeight = info.statusBarHeight + this._list.contentHeight + info.borderHeight;\n\t\tconst minHeight = info.itemHeight + info.statusBarHeight;\n\t\t// const editorBox = dom.getDomNodePagePosition(this.editor.getDomNode());\n\t\t// const cursorBox = this.editor.getScrolledVisiblePosition(this.editor.getPosition());\n\t\tconst editorBox = dom.getDomNodePagePosition(this._container);\n\t\tconst cursorBox = this._cursorPosition; //this.editor.getScrolledVisiblePosition(this.editor.getPosition());\n\t\tconst cursorBottom = editorBox.top + cursorBox.top + cursorBox.height;\n\t\tconst maxHeightBelow = Math.min(bodyBox.height - cursorBottom - info.verticalPadding, fullHeight);\n\t\tconst availableSpaceAbove = editorBox.top + cursorBox.top - info.verticalPadding;\n\t\tconst maxHeightAbove = Math.min(availableSpaceAbove, fullHeight);\n\t\tlet maxHeight = Math.min(Math.max(maxHeightAbove, maxHeightBelow) + info.borderHeight, fullHeight);\n\n\t\tif (height === this._cappedHeight?.capped) {\n\t\t\t// Restore the old (wanted) height when the current\n\t\t\t// height is capped to fit\n\t\t\theight = this._cappedHeight.wanted;\n\t\t}\n\n\t\tif (height < minHeight) {\n\t\t\theight = minHeight;\n\t\t}\n\t\tif (height > maxHeight) {\n\t\t\theight = maxHeight;\n\t\t}\n\n\t\tconst forceRenderingAboveRequiredSpace = 150;\n\t\tif (height > maxHeightBelow || (this._forceRenderingAbove && availableSpaceAbove > forceRenderingAboveRequiredSpace)) {\n\t\t\tthis._preference = WidgetPositionPreference.Above;\n\t\t\tthis.element.enableSashes(true, true, false, false);\n\t\t\tmaxHeight = maxHeightAbove;\n\t\t} else {\n\t\t\tthis._preference = WidgetPositionPreference.Below;\n\t\t\tthis.element.enableSashes(false, true, true, false);\n\t\t\tmaxHeight = maxHeightBelow;\n\t\t}\n\t\tthis.element.preferredSize = new dom.Dimension(preferredWidth, info.defaultSize.height);\n\t\tthis.element.maxSize = new dom.Dimension(maxWidth, maxHeight);\n\t\tthis.element.minSize = new dom.Dimension(220, minHeight);\n\n\t\t// Know when the height was capped to fit and remember\n\t\t// the wanted height for later. This is required when going\n\t\t// left to widen suggestions.\n\t\tthis._cappedHeight = height === fullHeight\n\t\t\t? { wanted: this._cappedHeight?.wanted ?? size.height, capped: height }\n\t\t\t: undefined;\n\t\t// }\n\t\tthis.element.domNode.style.left = `${this._cursorPosition.left}px`;\n\t\tif (this._preference === WidgetPositionPreference.Above) {\n\t\t\tthis.element.domNode.style.top = `${this._cursorPosition.top - height - info.borderHeight}px`;\n\t\t} else {\n\t\t\tthis.element.domNode.style.top = `${this._cursorPosition.top + this._cursorPosition.height}px`;\n\t\t}\n\t\tthis._resize(width, height);\n\t}\n\n\tprivate _resize(width: number, height: number): void {\n\t\tconst { width: maxWidth, height: maxHeight } = this.element.maxSize;\n\t\twidth = Math.min(maxWidth, width);\n\t\tif (maxHeight) {\n\t\t\theight = Math.min(maxHeight, height);\n\t\t}\n\n\t\tconst { statusBarHeight } = this._getLayoutInfo();\n\t\tthis._list.layout(height - statusBarHeight, width);\n\t\tthis._listElement.style.height = `${height - statusBarHeight}px`;\n\n\t\tthis._listElement.style.width = `${width}px`;\n\t\tthis._listElement.style.height = `${height}px`;\n\t\tthis.element.layout(height, width);\n\n\t\t// this._positionDetails();\n\t\t// TODO: Position based on preference\n\t}\n\n\tprivate _getLayoutInfo() {\n\t\tconst fontInfo = this._getFontInfo();\n\t\tconst itemHeight = clamp(Math.ceil(fontInfo.lineHeight), 8, 1000);\n\t\tconst statusBarHeight = 0; //!this.editor.getOption(EditorOption.suggest).showStatusBar || this._state === State.Empty || this._state === State.Loading ? 0 : itemHeight;\n\t\tconst borderWidth = 1; //this._details.widget.borderWidth;\n\t\tconst borderHeight = 2 * borderWidth;\n\n\t\treturn {\n\t\t\titemHeight,\n\t\t\tstatusBarHeight,\n\t\t\tborderWidth,\n\t\t\tborderHeight,\n\t\t\ttypicalHalfwidthCharacterWidth: 10,\n\t\t\tverticalPadding: 22,\n\t\t\thorizontalPadding: 14,\n\t\t\tdefaultSize: new dom.Dimension(430, statusBarHeight + 12 * itemHeight + borderHeight)\n\t\t};\n\t}\n\n\tprivate _onListMouseDownOrTap(e: IListMouseEvent<SimpleCompletionItem> | IListGestureEvent<SimpleCompletionItem>): void {\n\t\tif (typeof e.element === 'undefined' || typeof e.index === 'undefined') {\n\t\t\treturn;\n\t\t}\n\n\t\t// prevent stealing browser focus from the terminal\n\t\te.browserEvent.preventDefault();\n\t\te.browserEvent.stopPropagation();\n\n\t\tthis._select(e.element, e.index);\n\t}\n\n\tprivate _onListSelection(e: IListEvent<SimpleCompletionItem>): void {\n\t\tif (e.elements.length) {\n\t\t\tthis._select(e.elements[0], e.indexes[0]);\n\t\t}\n\t}\n\n\tprivate _select(item: SimpleCompletionItem, index: number): void {\n\t\tconst completionModel = this._completionModel;\n\t\tif (completionModel) {\n\t\t\tthis._onDidSelect.fire({ item, index, model: completionModel });\n\t\t}\n\t}\n\n\tselectNext(): boolean {\n\t\tthis._list.focusNext(1, true);\n\t\tconst focus = this._list.getFocus();\n\t\tif (focus.length > 0) {\n\t\t\tthis._list.reveal(focus[0]);\n\t\t}\n\t\treturn true;\n\t}\n\n\tselectNextPage(): boolean {\n\t\tthis._list.focusNextPage();\n\t\tconst focus = this._list.getFocus();\n\t\tif (focus.length > 0) {\n\t\t\tthis._list.reveal(focus[0]);\n\t\t}\n\t\treturn true;\n\t}\n\n\tselectPrevious(): boolean {\n\t\tthis._list.focusPrevious(1, true);\n\t\tconst focus = this._list.getFocus();\n\t\tif (focus.length > 0) {\n\t\t\tthis._list.reveal(focus[0]);\n\t\t}\n\t\treturn true;\n\t}\n\n\tselectPreviousPage(): boolean {\n\t\tthis._list.focusPreviousPage();\n\t\tconst focus = this._list.getFocus();\n\t\tif (focus.length > 0) {\n\t\t\tthis._list.reveal(focus[0]);\n\t\t}\n\t\treturn true;\n\t}\n\n\tgetFocusedItem(): ISimpleSelectedSuggestion | undefined {\n\t\tif (this._completionModel) {\n\t\t\treturn {\n\t\t\t\titem: this._list.getFocusedElements()[0],\n\t\t\t\tindex: this._list.getFocus()[0],\n\t\t\t\tmodel: this._completionModel\n\t\t\t};\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tforceRenderingAbove() {\n\t\tif (!this._forceRenderingAbove) {\n\t\t\tthis._forceRenderingAbove = true;\n\t\t\tthis._layout(this._persistedSize.restore());\n\t\t}\n\t}\n\n\tstopForceRenderingAbove() {\n\t\tthis._forceRenderingAbove = false;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["State", "WidgetPositionPreference", "detail"]
}
