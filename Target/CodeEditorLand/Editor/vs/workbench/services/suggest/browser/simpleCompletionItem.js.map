{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/suggest/browser/simpleCompletionItem.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { FuzzyScore } from \"../../../../base/common/filters.js\";\nimport { isWindows } from \"../../../../base/common/platform.js\";\nimport type { ThemeIcon } from \"../../../../base/common/themables.js\";\n\nexport interface ISimpleCompletion {\n\t/**\n\t * The completion's label which appears on the left beside the icon.\n\t */\n\tlabel: string;\n\t/**\n\t * The completion's icon to show on the left of the suggest widget.\n\t */\n\ticon?: ThemeIcon;\n\t/**\n\t * The completion's detail which appears on the right of the list.\n\t */\n\tdetail?: string;\n\t/**\n\t * Whether the completion is a file. Files with the same score will be sorted against each other\n\t * first by extension length and then certain extensions will get a boost based on the OS.\n\t */\n\tisFile?: boolean;\n\t/**\n\t * Whether the completion is a directory.\n\t */\n\tisDirectory?: boolean;\n\t/**\n\t * Whether the completion is a keyword.\n\t */\n\tisKeyword?: boolean;\n}\n\nexport class SimpleCompletionItem {\n\t// perf\n\treadonly labelLow: string;\n\treadonly labelLowExcludeFileExt: string;\n\treadonly fileExtLow: string = \"\";\n\n\t// sorting, filtering\n\tscore: FuzzyScore = FuzzyScore.Default;\n\tidx?: number;\n\tword?: string;\n\n\tconstructor(readonly completion: ISimpleCompletion) {\n\t\t// ensure lower-variants (perf)\n\t\tthis.labelLow = this.completion.label.toLowerCase();\n\t\tthis.labelLowExcludeFileExt = this.labelLow;\n\t\tif (completion.isFile) {\n\t\t\tif (isWindows) {\n\t\t\t\tthis.labelLow = this.labelLow.replaceAll(\"/\", \"\\\\\");\n\t\t\t}\n\t\t\tconst extIndex = this.labelLow.lastIndexOf(\".\");\n\t\t\tif (extIndex !== -1) {\n\t\t\t\tthis.labelLowExcludeFileExt = this.labelLow.substring(\n\t\t\t\t\t0,\n\t\t\t\t\textIndex,\n\t\t\t\t);\n\t\t\t\tthis.fileExtLow = this.labelLow.substring(extIndex + 1);\n\t\t\t}\n\t\t}\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,kBAAkB;AAC3B,SAAS,iBAAiB;AA+BnB,MAAM,qBAAqB;AAAA,EAWjC,YAAqB,YAA+B;AAA/B;AAEpB,SAAK,WAAW,KAAK,WAAW,MAAM,YAAY;AAClD,SAAK,yBAAyB,KAAK;AACnC,QAAI,WAAW,QAAQ;AACtB,UAAI,WAAW;AACd,aAAK,WAAW,KAAK,SAAS,WAAW,KAAK,IAAI;AAAA,MACnD;AACA,YAAM,WAAW,KAAK,SAAS,YAAY,GAAG;AAC9C,UAAI,aAAa,IAAI;AACpB,aAAK,yBAAyB,KAAK,SAAS;AAAA,UAC3C;AAAA,UACA;AAAA,QACD;AACA,aAAK,aAAa,KAAK,SAAS,UAAU,WAAW,CAAC;AAAA,MACvD;AAAA,IACD;AAAA,EACD;AAAA,EAjED,OAqCkC;AAAA;AAAA;AAAA;AAAA,EAExB;AAAA,EACA;AAAA,EACA,aAAqB;AAAA;AAAA,EAG9B,QAAoB,WAAW;AAAA,EAC/B;AAAA,EACA;AAoBD;",
  "names": []
}
