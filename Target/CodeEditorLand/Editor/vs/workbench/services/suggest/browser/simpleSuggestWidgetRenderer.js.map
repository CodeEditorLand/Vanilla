{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/suggest/browser/simpleSuggestWidgetRenderer.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { $, append, show } from \"../../../../base/browser/dom.js\";\nimport {\n\ttype IIconLabelValueOptions,\n\tIconLabel,\n} from \"../../../../base/browser/ui/iconLabel/iconLabel.js\";\nimport type { IListRenderer } from \"../../../../base/browser/ui/list/list.js\";\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport { Emitter, type Event } from \"../../../../base/common/event.js\";\nimport { createMatches } from \"../../../../base/common/filters.js\";\nimport { DisposableStore } from \"../../../../base/common/lifecycle.js\";\nimport { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport type { SimpleCompletionItem } from \"./simpleCompletionItem.js\";\n\nexport function getAriaId(index: number): string {\n\treturn `simple-suggest-aria-id:${index}`;\n}\n\nexport interface ISimpleSuggestionTemplateData {\n\treadonly root: HTMLElement;\n\n\t/**\n\t * Flexbox\n\t * < ------------- left ------------ >     < --- right -- >\n\t * <icon><label><signature><qualifier>     <type><readmore>\n\t */\n\treadonly left: HTMLElement;\n\treadonly right: HTMLElement;\n\n\treadonly icon: HTMLElement;\n\treadonly colorspan: HTMLElement;\n\treadonly iconLabel: IconLabel;\n\treadonly iconContainer: HTMLElement;\n\treadonly parametersLabel: HTMLElement;\n\treadonly qualifierLabel: HTMLElement;\n\t/**\n\t * Showing either `CompletionItem#details` or `CompletionItemLabel#type`\n\t */\n\treadonly detailsLabel: HTMLElement;\n\t// readonly readMore: HTMLElement;\n\treadonly disposables: DisposableStore;\n}\n\nexport interface ISimpleSuggestWidgetFontInfo {\n\tfontFamily: string;\n\tfontSize: number;\n\tlineHeight: number;\n\tfontWeight: string;\n\tletterSpacing: number;\n}\n\nexport class SimpleSuggestWidgetItemRenderer\n\timplements\n\t\tIListRenderer<SimpleCompletionItem, ISimpleSuggestionTemplateData>\n{\n\tprivate readonly _onDidToggleDetails = new Emitter<void>();\n\treadonly onDidToggleDetails: Event<void> = this._onDidToggleDetails.event;\n\n\treadonly templateId = \"suggestion\";\n\n\tconstructor(\n\t\tprivate readonly _getFontInfo: () => ISimpleSuggestWidgetFontInfo,\n\t) {}\n\n\tdispose(): void {\n\t\tthis._onDidToggleDetails.dispose();\n\t}\n\n\trenderTemplate(container: HTMLElement): ISimpleSuggestionTemplateData {\n\t\tconst disposables = new DisposableStore();\n\n\t\tconst root = container;\n\t\troot.classList.add(\"show-file-icons\");\n\n\t\tconst icon = append(container, $(\".icon\"));\n\t\tconst colorspan = append(icon, $(\"span.colorspan\"));\n\n\t\tconst text = append(container, $(\".contents\"));\n\t\tconst main = append(text, $(\".main\"));\n\n\t\tconst iconContainer = append(main, $(\".icon-label.codicon\"));\n\t\tconst left = append(main, $(\"span.left\"));\n\t\tconst right = append(main, $(\"span.right\"));\n\n\t\tconst iconLabel = new IconLabel(left, {\n\t\t\tsupportHighlights: true,\n\t\t\tsupportIcons: true,\n\t\t});\n\t\tdisposables.add(iconLabel);\n\n\t\tconst parametersLabel = append(left, $(\"span.signature-label\"));\n\t\tconst qualifierLabel = append(left, $(\"span.qualifier-label\"));\n\t\tconst detailsLabel = append(right, $(\"span.details-label\"));\n\n\t\t// const readMore = append(right, $('span.readMore' + ThemeIcon.asCSSSelector(suggestMoreInfoIcon)));\n\t\t// readMore.title = nls.localize('readMore', \"Read More\");\n\n\t\tconst configureFont = () => {\n\t\t\tconst fontFeatureSettings = \"\";\n\t\t\tconst {\n\t\t\t\tfontFamily,\n\t\t\t\tfontSize,\n\t\t\t\tlineHeight,\n\t\t\t\tfontWeight,\n\t\t\t\tletterSpacing,\n\t\t\t} = this._getFontInfo();\n\t\t\tconst fontSizePx = `${fontSize}px`;\n\t\t\tconst lineHeightPx = `${lineHeight}px`;\n\t\t\tconst letterSpacingPx = `${letterSpacing}px`;\n\n\t\t\troot.style.fontSize = fontSizePx;\n\t\t\troot.style.fontWeight = fontWeight;\n\t\t\troot.style.letterSpacing = letterSpacingPx;\n\t\t\tmain.style.fontFamily = fontFamily;\n\t\t\tmain.style.fontFeatureSettings = fontFeatureSettings;\n\t\t\tmain.style.lineHeight = lineHeightPx;\n\t\t\ticon.style.height = lineHeightPx;\n\t\t\ticon.style.width = lineHeightPx;\n\t\t\t// readMore.style.height = lineHeightPx;\n\t\t\t// readMore.style.width = lineHeightPx;\n\t\t};\n\n\t\tconfigureFont();\n\n\t\t// data.disposables.add(this._editor.onDidChangeConfiguration(e => {\n\t\t// \tif (e.hasChanged(EditorOption.fontInfo) || e.hasChanged(EditorOption.suggestFontSize) || e.hasChanged(EditorOption.suggestLineHeight)) {\n\t\t// \t\tconfigureFont();\n\t\t// \t}\n\t\t// }));\n\n\t\treturn {\n\t\t\troot,\n\t\t\tleft,\n\t\t\tright,\n\t\t\ticon,\n\t\t\tcolorspan,\n\t\t\ticonLabel,\n\t\t\ticonContainer,\n\t\t\tparametersLabel,\n\t\t\tqualifierLabel,\n\t\t\tdetailsLabel,\n\t\t\tdisposables,\n\t\t};\n\t}\n\n\trenderElement(\n\t\telement: SimpleCompletionItem,\n\t\tindex: number,\n\t\tdata: ISimpleSuggestionTemplateData,\n\t): void {\n\t\tconst { completion } = element;\n\t\tdata.root.id = getAriaId(index);\n\t\tdata.colorspan.style.backgroundColor = \"\";\n\n\t\tconst labelOptions: IIconLabelValueOptions = {\n\t\t\tlabelEscapeNewLines: true,\n\t\t\tmatches: createMatches(element.score),\n\t\t};\n\n\t\t// const color: string[] = [];\n\t\t// if (completion.kind === CompletionItemKind.Color && _completionItemColor.extract(element, color)) {\n\t\t// \t// special logic for 'color' completion items\n\t\t// \tdata.icon.className = 'icon customcolor';\n\t\t// \tdata.iconContainer.className = 'icon hide';\n\t\t// \tdata.colorspan.style.backgroundColor = color[0];\n\n\t\t// } else if (completion.kind === CompletionItemKind.File && this._themeService.getFileIconTheme().hasFileIcons) {\n\t\t// \t// special logic for 'file' completion items\n\t\t// \tdata.icon.className = 'icon hide';\n\t\t// \tdata.iconContainer.className = 'icon hide';\n\t\t// \tconst labelClasses = getIconClasses(this._modelService, this._languageService, URI.from({ scheme: 'fake', path: element.textLabel }), FileKind.FILE);\n\t\t// \tconst detailClasses = getIconClasses(this._modelService, this._languageService, URI.from({ scheme: 'fake', path: completion.detail }), FileKind.FILE);\n\t\t// \tlabelOptions.extraClasses = labelClasses.length > detailClasses.length ? labelClasses : detailClasses;\n\n\t\t// } else if (completion.kind === CompletionItemKind.Folder && this._themeService.getFileIconTheme().hasFolderIcons) {\n\t\t// \t// special logic for 'folder' completion items\n\t\t// \tdata.icon.className = 'icon hide';\n\t\t// \tdata.iconContainer.className = 'icon hide';\n\t\t// \tlabelOptions.extraClasses = [\n\t\t// \t\tgetIconClasses(this._modelService, this._languageService, URI.from({ scheme: 'fake', path: element.textLabel }), FileKind.FOLDER),\n\t\t// \t\tgetIconClasses(this._modelService, this._languageService, URI.from({ scheme: 'fake', path: completion.detail }), FileKind.FOLDER)\n\t\t// \t].flat();\n\t\t// } else {\n\t\t// normal icon\n\t\tdata.icon.className = \"icon hide\";\n\t\tdata.iconContainer.className = \"\";\n\t\tdata.iconContainer.classList.add(\n\t\t\t\"suggest-icon\",\n\t\t\t...ThemeIcon.asClassNameArray(\n\t\t\t\tcompletion.icon || Codicon.symbolText,\n\t\t\t),\n\t\t);\n\t\t// }\n\n\t\t// if (completion.tags && completion.tags.indexOf(CompletionItemTag.Deprecated) >= 0) {\n\t\t// \tlabelOptions.extraClasses = (labelOptions.extraClasses || []).concat(['deprecated']);\n\t\t// \tlabelOptions.matches = [];\n\t\t// }\n\n\t\tdata.iconLabel.setLabel(completion.label, undefined, labelOptions);\n\t\t// if (typeof completion.label === 'string') {\n\t\tdata.parametersLabel.textContent = \"\";\n\t\tdata.detailsLabel.textContent = stripNewLines(completion.detail || \"\");\n\t\tdata.root.classList.add(\"string-label\");\n\t\t// } else {\n\t\t// \tdata.parametersLabel.textContent = stripNewLines(completion.label.detail || '');\n\t\t// \tdata.detailsLabel.textContent = stripNewLines(completion.label.description || '');\n\t\t// \tdata.root.classList.remove('string-label');\n\t\t// }\n\n\t\t// if (this._editor.getOption(EditorOption.suggest).showInlineDetails) {\n\t\tshow(data.detailsLabel);\n\t\t// } else {\n\t\t// \thide(data.detailsLabel);\n\t\t// }\n\n\t\t// if (canExpandCompletionItem(element)) {\n\t\t// \tdata.right.classList.add('can-expand-details');\n\t\t// \tshow(data.readMore);\n\t\t// \tdata.readMore.onmousedown = e => {\n\t\t// \t\te.stopPropagation();\n\t\t// \t\te.preventDefault();\n\t\t// \t};\n\t\t// \tdata.readMore.onclick = e => {\n\t\t// \t\te.stopPropagation();\n\t\t// \t\te.preventDefault();\n\t\t// \t\tthis._onDidToggleDetails.fire();\n\t\t// \t};\n\t\t// } else {\n\t\tdata.right.classList.remove(\"can-expand-details\");\n\t\t// hide(data.readMore);\n\t\t// data.readMore.onmousedown = null;\n\t\t// data.readMore.onclick = null;\n\t\t// }\n\t}\n\n\tdisposeTemplate(templateData: ISimpleSuggestionTemplateData): void {\n\t\ttemplateData.disposables.dispose();\n\t}\n}\n\nfunction stripNewLines(str: string): string {\n\treturn str.replace(/\\r\\n|\\r|\\n/g, \"\");\n}\n"],
  "mappings": "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",
  "names": []
}
