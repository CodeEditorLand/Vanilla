var C=Object.defineProperty;var T=Object.getOwnPropertyDescriptor;var v=(f,u,e,i)=>{for(var r=i>1?void 0:i?T(u,e):u,o=f.length-1,n;o>=0;o--)(n=f[o])&&(r=(i?n(u,e,r):n(r))||r);return i&&r&&C(u,e,r),r},d=(f,u)=>(e,i)=>u(e,i,f);import{addDisposableListener as _,addDisposableThrottledListener as M,detectFullscreen as O,disposableWindowInterval as N,EventType as g,getActiveDocument as B,getWindowId as P,ModifierKeyEmitter as R,onDidRegisterWindow as y,trackFocus as L}from"../../../../../vs/base/browser/dom.js";import{DomEmitter as H}from"../../../../../vs/base/browser/event.js";import{isAuxiliaryWindow as K,mainWindow as w}from"../../../../../vs/base/browser/window.js";import{coalesce as I}from"../../../../../vs/base/common/arrays.js";import{memoize as b}from"../../../../../vs/base/common/decorators.js";import{Emitter as W,Event as c}from"../../../../../vs/base/common/event.js";import{parseLineAndColumnAware as V}from"../../../../../vs/base/common/extpath.js";import{Disposable as q}from"../../../../../vs/base/common/lifecycle.js";import{Schemas as G}from"../../../../../vs/base/common/network.js";import{isIOS as j,isMacintosh as z}from"../../../../../vs/base/common/platform.js";import Z from"../../../../../vs/base/common/severity.js";import{isUndefined as J}from"../../../../../vs/base/common/types.js";import"../../../../../vs/editor/browser/editorExtensions.js";import{localize as D}from"../../../../../vs/nls.js";import{IConfigurationService as Q}from"../../../../../vs/platform/configuration/common/configuration.js";import{IDialogService as X}from"../../../../../vs/platform/dialogs/common/dialogs.js";import"../../../../../vs/platform/editor/common/editor.js";import{IFileService as Y}from"../../../../../vs/platform/files/common/files.js";import{InstantiationType as $,registerSingleton as ee}from"../../../../../vs/platform/instantiation/common/extensions.js";import{IInstantiationService as ie}from"../../../../../vs/platform/instantiation/common/instantiation.js";import{ILabelService as re,Verbosity as U}from"../../../../../vs/platform/label/common/label.js";import{ILayoutService as oe}from"../../../../../vs/platform/layout/browser/layoutService.js";import{ILogService as te}from"../../../../../vs/platform/log/common/log.js";import{IUserDataProfilesService as ne}from"../../../../../vs/platform/userDataProfile/common/userDataProfile.js";import{isFileToOpen as se,isFolderToOpen as F,isWorkspaceToOpen as A}from"../../../../../vs/platform/window/common/window.js";import{isTemporaryWorkspace as ae,IWorkspaceContextService as de}from"../../../../../vs/platform/workspace/common/workspace.js";import"../../../../../vs/platform/workspaces/common/workspaces.js";import{whenEditorClosed as ce}from"../../../../../vs/workbench/browser/editor.js";import"../../../../../vs/workbench/browser/web.api.js";import{isResourceEditorInput as p,pathsToEditors as E}from"../../../../../vs/workbench/common/editor.js";import{IEditorService as le}from"../../../../../vs/workbench/services/editor/common/editorService.js";import{IBrowserWorkbenchEnvironmentService as ue}from"../../../../../vs/workbench/services/environment/browser/environmentService.js";import{IHostService as pe}from"../../../../../vs/workbench/services/host/browser/host.js";import"../../../../../vs/workbench/services/lifecycle/browser/lifecycleService.js";import{ILifecycleService as fe,ShutdownReason as k}from"../../../../../vs/workbench/services/lifecycle/common/lifecycle.js";import{IUserDataProfileService as he}from"../../../../../vs/workbench/services/userDataProfile/common/userDataProfile.js";import{getWorkspaceIdentifier as me}from"../../../../../vs/workbench/services/workspaces/browser/workspaces.js";import{IWorkspaceEditingService as x}from"../../../../../vs/workbench/services/workspaces/common/workspaceEditing.js";var ve=(i=>(i[i.Unknown=1]="Unknown",i[i.Keyboard=2]="Keyboard",i[i.Api=3]="Api",i))(ve||{});let l=class extends q{constructor(e,i,r,o,n,s,h,S,t,a,m,we){super();this.layoutService=e;this.configurationService=i;this.fileService=r;this.labelService=o;this.environmentService=n;this.instantiationService=s;this.lifecycleService=h;this.logService=S;this.dialogService=t;this.contextService=a;this.userDataProfileService=m;this.userDataProfilesService=we;n.options?.workspaceProvider?this.workspaceProvider=n.options.workspaceProvider:this.workspaceProvider=new class{workspace=void 0;trusted=void 0;async open(){return!0}},this.registerListeners()}workspaceProvider;shutdownReason=1;registerListeners(){this._register(this.lifecycleService.onBeforeShutdown(e=>this.onBeforeShutdown(e))),this._register(R.getInstance().event(()=>this.updateShutdownReasonFromEvent()))}onBeforeShutdown(e){switch(this.shutdownReason){case 1:case 2:{const i=this.configurationService.getValue("window.confirmBeforeClose");(i==="always"||i==="keyboardOnly"&&this.shutdownReason===2)&&e.veto(!0,"veto.confirmBeforeClose");break}case 3:break}this.shutdownReason=1}updateShutdownReasonFromEvent(){this.shutdownReason!==3&&(R.getInstance().isModifierPressed?this.shutdownReason=2:this.shutdownReason=1)}get onDidChangeFocus(){const e=this._register(new W);return this._register(c.runAndSubscribe(y,({window:i,disposables:r})=>{const o=r.add(L(i)),n=r.add(new H(i.document,"visibilitychange"));c.any(c.map(o.onDidFocus,()=>this.hasFocus,r),c.map(o.onDidBlur,()=>this.hasFocus,r),c.map(n.event,()=>this.hasFocus,r),c.map(this.onDidChangeActiveWindow,()=>this.hasFocus,r))(s=>e.fire(s))},{window:w,disposables:this._store})),c.latch(e.event,void 0,this._store)}get hasFocus(){return B().hasFocus()}async hadLastFocus(){return!0}async focus(e){e.focus()}get onDidChangeActiveWindow(){const e=this._register(new W);return this._register(c.runAndSubscribe(y,({window:i,disposables:r})=>{const o=P(i),n=r.add(L(i));r.add(n.onDidFocus(()=>e.fire(o))),K(i)&&r.add(N(i,()=>{const s=i.document.hasFocus();return s&&e.fire(o),s},100,20))},{window:w,disposables:this._store})),c.latch(e.event,void 0,this._store)}get onDidChangeFullScreen(){const e=this._register(new W);return this._register(c.runAndSubscribe(y,({window:i,disposables:r})=>{const o=P(i),n=j&&i.visualViewport?i.visualViewport:i;for(const s of[g.FULLSCREEN_CHANGE,g.WK_FULLSCREEN_CHANGE])r.add(_(i.document,s,()=>e.fire({windowId:o,fullscreen:!!O(i)})));r.add(M(n,g.RESIZE,()=>e.fire({windowId:o,fullscreen:!!O(i)}),void 0,z?2e3:800))},{window:w,disposables:this._store})),e.event}openWindow(e,i){return Array.isArray(e)?this.doOpenWindow(e,i):this.doOpenEmptyWindow(e)}async doOpenWindow(e,i){const r=this.preservePayload(!1,i),o=[],n=[];for(const s of e)s.label=s.label||this.getRecentLabel(s),F(s)?i?.addMode?n.push({uri:s.folderUri}):this.doOpen({folderUri:s.folderUri},{reuse:this.shouldReuse(i,!1),payload:r}):A(s)?this.doOpen({workspaceUri:s.workspaceUri},{reuse:this.shouldReuse(i,!1),payload:r}):se(s)&&o.push(s);n.length>0&&this.withServices(s=>{s.get(x).addFolders(n)}),o.length>0&&this.withServices(async s=>{const h=s.get(le);if(i?.mergeMode&&o.length===4){const t=I(await E(o,this.fileService,this.logService));if(t.length!==4||!p(t[0])||!p(t[1])||!p(t[2])||!p(t[3]))return;if(this.shouldReuse(i,!0))h.openEditor({input1:{resource:t[0].resource},input2:{resource:t[1].resource},base:{resource:t[2].resource},result:{resource:t[3].resource},options:{pinned:!0}});else{const a=new Map;a.set("mergeFile1",t[0].resource.toString()),a.set("mergeFile2",t[1].resource.toString()),a.set("mergeFileBase",t[2].resource.toString()),a.set("mergeFileResult",t[3].resource.toString()),this.doOpen(void 0,{payload:Array.from(a.entries())})}}else if(i?.diffMode&&o.length===2){const t=I(await E(o,this.fileService,this.logService));if(t.length!==2||!p(t[0])||!p(t[1]))return;if(this.shouldReuse(i,!0))h.openEditor({original:{resource:t[0].resource},modified:{resource:t[1].resource},options:{pinned:!0}});else{const a=new Map;a.set("diffFileSecondary",t[0].resource.toString()),a.set("diffFilePrimary",t[1].resource.toString()),this.doOpen(void 0,{payload:Array.from(a.entries())})}}else for(const t of o)if(this.shouldReuse(i,!0)){let a=[];if(i?.gotoLineMode){const m=V(t.fileUri.path);a=[{fileUri:t.fileUri.with({path:m.path}),options:{selection:J(m.line)?void 0:{startLineNumber:m.line,startColumn:m.column||1}}}]}else a=[t];h.openEditors(I(await E(a,this.fileService,this.logService)),void 0,{validateTrust:!0})}else{const a=new Map;a.set("openFile",t.fileUri.toString()),i?.gotoLineMode&&a.set("gotoLineMode","true"),this.doOpen(void 0,{payload:Array.from(a.entries())})}const S=i?.waitMarkerFileURI;S&&(async()=>(await this.instantiationService.invokeFunction(t=>ce(t,o.map(a=>a.fileUri))),await this.fileService.del(S)))()})}withServices(e){this.instantiationService.invokeFunction(i=>e(i))}preservePayload(e,i){const r=new Array;!e&&this.environmentService.extensionDevelopmentLocationURI&&(r.push(["extensionDevelopmentPath",this.environmentService.extensionDevelopmentLocationURI.toString()]),this.environmentService.debugExtensionHost.debugId&&r.push(["debugId",this.environmentService.debugExtensionHost.debugId]),this.environmentService.debugExtensionHost.port&&r.push(["inspect-brk-extensions",String(this.environmentService.debugExtensionHost.port)]));const o=(i?.forceProfile?this.userDataProfilesService.profiles.find(n=>n.name===i?.forceProfile):void 0)??this.userDataProfileService.currentProfile;return o.isDefault||r.push(["profile",o.name]),r.length?r:void 0}getRecentLabel(e){return F(e)?this.labelService.getWorkspaceLabel(e.folderUri,{verbose:U.LONG}):A(e)?this.labelService.getWorkspaceLabel(me(e.workspaceUri),{verbose:U.LONG}):this.labelService.getUriLabel(e.fileUri)}shouldReuse(e=Object.create(null),i){if(e.waitMarkerFileURI)return!0;const r=this.configurationService.getValue("window"),o=i?r?.openFilesInNewWindow||"off":r?.openFoldersInNewWindow||"default";let n=(e.preferNewWindow||!!e.forceNewWindow)&&!e.forceReuseWindow;return!e.forceNewWindow&&!e.forceReuseWindow&&(o==="on"||o==="off")&&(n=o==="on"),!n}async doOpenEmptyWindow(e){return this.doOpen(void 0,{reuse:e?.forceReuseWindow,payload:this.preservePayload(!0,e)})}async doOpen(e,i){if(e&&F(e)&&e.folderUri.scheme===G.file&&ae(this.contextService.getWorkspace())){this.withServices(async o=>{await o.get(x).updateFolders(0,this.contextService.getWorkspace().folders.length,[{uri:e.folderUri}])});return}if(i?.reuse&&await this.handleExpectedShutdown(k.LOAD),!await this.workspaceProvider.open(e,i)){const{confirmed:o}=await this.dialogService.confirm({type:Z.Warning,message:D("unableToOpenExternal","The browser interrupted the opening of a new tab or window. Press 'Open' to open it anyway."),primaryButton:D({key:"open",comment:["&& denotes a mnemonic"]},"&&Open")});o&&await this.workspaceProvider.open(e,i)}}async toggleFullScreen(e){const i=this.layoutService.getContainer(e);if(e.document.fullscreen!==void 0)if(e.document.fullscreen)try{return await e.document.exitFullscreen()}catch{this.logService.warn("toggleFullScreen(): exitFullscreen failed")}else try{return await i.requestFullscreen()}catch{this.logService.warn("toggleFullScreen(): requestFullscreen failed")}if(e.document.webkitIsFullScreen!==void 0)try{e.document.webkitIsFullScreen?e.document.webkitExitFullscreen():i.webkitRequestFullscreen()}catch{this.logService.warn("toggleFullScreen(): requestFullscreen/exitFullscreen failed")}}async moveTop(e){}async getCursorScreenPoint(){}async restart(){this.reload()}async reload(){await this.handleExpectedShutdown(k.RELOAD),w.location.reload()}async close(){await this.handleExpectedShutdown(k.CLOSE),w.close()}async withExpectedShutdown(e){const i=this.shutdownReason;try{return this.shutdownReason=3,await e()}finally{this.shutdownReason=i}}async handleExpectedShutdown(e){return this.shutdownReason=3,this.lifecycleService.withExpectedShutdown(e)}getPathForFile(){}};v([b],l.prototype,"onDidChangeFocus",1),v([b],l.prototype,"onDidChangeActiveWindow",1),v([b],l.prototype,"onDidChangeFullScreen",1),l=v([d(0,oe),d(1,Q),d(2,Y),d(3,re),d(4,ue),d(5,ie),d(6,fe),d(7,te),d(8,X),d(9,de),d(10,he),d(11,ne)],l),ee(pe,l,$.Delayed);export{l as BrowserHostService};
