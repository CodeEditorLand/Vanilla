{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/host/browser/browserHostService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tEventType,\n\tModifierKeyEmitter,\n\taddDisposableListener,\n\taddDisposableThrottledListener,\n\tdetectFullscreen,\n\tdisposableWindowInterval,\n\tgetActiveDocument,\n\tgetWindowId,\n\tonDidRegisterWindow,\n\ttrackFocus,\n} from \"../../../../base/browser/dom.js\";\nimport { DomEmitter } from \"../../../../base/browser/event.js\";\nimport {\n\tisAuxiliaryWindow,\n\tmainWindow,\n} from \"../../../../base/browser/window.js\";\nimport { coalesce } from \"../../../../base/common/arrays.js\";\nimport { memoize } from \"../../../../base/common/decorators.js\";\nimport { Emitter, Event } from \"../../../../base/common/event.js\";\nimport { parseLineAndColumnAware } from \"../../../../base/common/extpath.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport { isIOS, isMacintosh } from \"../../../../base/common/platform.js\";\nimport Severity from \"../../../../base/common/severity.js\";\nimport { isUndefined } from \"../../../../base/common/types.js\";\nimport type { ServicesAccessor } from \"../../../../editor/browser/editorExtensions.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { IDialogService } from \"../../../../platform/dialogs/common/dialogs.js\";\nimport type { ITextEditorOptions } from \"../../../../platform/editor/common/editor.js\";\nimport { IFileService } from \"../../../../platform/files/common/files.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport {\n\tILabelService,\n\tVerbosity,\n} from \"../../../../platform/label/common/label.js\";\nimport { ILayoutService } from \"../../../../platform/layout/browser/layoutService.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { IUserDataProfilesService } from \"../../../../platform/userDataProfile/common/userDataProfile.js\";\nimport {\n\ttype IFileToOpen,\n\ttype IOpenEmptyWindowOptions,\n\ttype IOpenWindowOptions,\n\ttype IPathData,\n\ttype IWindowOpenable,\n\ttype IWindowSettings,\n\tisFileToOpen,\n\tisFolderToOpen,\n\tisWorkspaceToOpen,\n} from \"../../../../platform/window/common/window.js\";\nimport {\n\tIWorkspaceContextService,\n\tisTemporaryWorkspace,\n} from \"../../../../platform/workspace/common/workspace.js\";\nimport type { IWorkspaceFolderCreationData } from \"../../../../platform/workspaces/common/workspaces.js\";\nimport { whenEditorClosed } from \"../../../browser/editor.js\";\nimport type {\n\tIWorkspace,\n\tIWorkspaceProvider,\n} from \"../../../browser/web.api.js\";\nimport {\n\tisResourceEditorInput,\n\tpathsToEditors,\n} from \"../../../common/editor.js\";\nimport { IEditorService } from \"../../editor/common/editorService.js\";\nimport { IBrowserWorkbenchEnvironmentService } from \"../../environment/browser/environmentService.js\";\nimport type { BrowserLifecycleService } from \"../../lifecycle/browser/lifecycleService.js\";\nimport {\n\ttype BeforeShutdownEvent,\n\tILifecycleService,\n\tShutdownReason,\n} from \"../../lifecycle/common/lifecycle.js\";\nimport { IUserDataProfileService } from \"../../userDataProfile/common/userDataProfile.js\";\nimport { getWorkspaceIdentifier } from \"../../workspaces/browser/workspaces.js\";\nimport { IWorkspaceEditingService } from \"../../workspaces/common/workspaceEditing.js\";\nimport { IHostService } from \"./host.js\";\n\nenum HostShutdownReason {\n\t/**\n\t * An unknown shutdown reason.\n\t */\n\tUnknown = 1,\n\n\t/**\n\t * A shutdown that was potentially triggered by keyboard use.\n\t */\n\tKeyboard = 2,\n\n\t/**\n\t * An explicit shutdown via code.\n\t */\n\tApi = 3,\n}\n\nexport class BrowserHostService extends Disposable implements IHostService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate workspaceProvider: IWorkspaceProvider;\n\n\tprivate shutdownReason = HostShutdownReason.Unknown;\n\n\tconstructor(\n\t\t@ILayoutService private readonly layoutService: ILayoutService,\n\t\t@IConfigurationService\n\t\tprivate readonly configurationService: IConfigurationService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@IBrowserWorkbenchEnvironmentService\n\t\tprivate readonly environmentService: IBrowserWorkbenchEnvironmentService,\n\t\t@IInstantiationService\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t\t@ILifecycleService\n\t\tprivate readonly lifecycleService: BrowserLifecycleService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t\t@IWorkspaceContextService\n\t\tprivate readonly contextService: IWorkspaceContextService,\n\t\t@IUserDataProfileService\n\t\tprivate readonly userDataProfileService: IUserDataProfileService,\n\t\t@IUserDataProfilesService\n\t\tprivate readonly userDataProfilesService: IUserDataProfilesService,\n\t) {\n\t\tsuper();\n\n\t\tif (environmentService.options?.workspaceProvider) {\n\t\t\tthis.workspaceProvider =\n\t\t\t\tenvironmentService.options.workspaceProvider;\n\t\t} else {\n\t\t\tthis.workspaceProvider = new (class implements IWorkspaceProvider {\n\t\t\t\treadonly workspace = undefined;\n\t\t\t\treadonly trusted = undefined;\n\t\t\t\tasync open() {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\t// Veto shutdown depending on `window.confirmBeforeClose` setting\n\t\tthis._register(\n\t\t\tthis.lifecycleService.onBeforeShutdown((e) =>\n\t\t\t\tthis.onBeforeShutdown(e),\n\t\t\t),\n\t\t);\n\n\t\t// Track modifier keys to detect keybinding usage\n\t\tthis._register(\n\t\t\tModifierKeyEmitter.getInstance().event(() =>\n\t\t\t\tthis.updateShutdownReasonFromEvent(),\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate onBeforeShutdown(e: BeforeShutdownEvent): void {\n\t\tswitch (this.shutdownReason) {\n\t\t\t// Unknown / Keyboard shows veto depending on setting\n\t\t\tcase HostShutdownReason.Unknown:\n\t\t\tcase HostShutdownReason.Keyboard: {\n\t\t\t\tconst confirmBeforeClose = this.configurationService.getValue(\n\t\t\t\t\t\"window.confirmBeforeClose\",\n\t\t\t\t);\n\t\t\t\tif (\n\t\t\t\t\tconfirmBeforeClose === \"always\" ||\n\t\t\t\t\t(confirmBeforeClose === \"keyboardOnly\" &&\n\t\t\t\t\t\tthis.shutdownReason === HostShutdownReason.Keyboard)\n\t\t\t\t) {\n\t\t\t\t\te.veto(true, \"veto.confirmBeforeClose\");\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// Api never shows veto\n\t\t\tcase HostShutdownReason.Api:\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Unset for next shutdown\n\t\tthis.shutdownReason = HostShutdownReason.Unknown;\n\t}\n\n\tprivate updateShutdownReasonFromEvent(): void {\n\t\tif (this.shutdownReason === HostShutdownReason.Api) {\n\t\t\treturn; // do not overwrite any explicitly set shutdown reason\n\t\t}\n\n\t\tif (ModifierKeyEmitter.getInstance().isModifierPressed) {\n\t\t\tthis.shutdownReason = HostShutdownReason.Keyboard;\n\t\t} else {\n\t\t\tthis.shutdownReason = HostShutdownReason.Unknown;\n\t\t}\n\t}\n\n\t//#region Focus\n\n\t@memoize\n\tget onDidChangeFocus(): Event<boolean> {\n\t\tconst emitter = this._register(new Emitter<boolean>());\n\n\t\tthis._register(\n\t\t\tEvent.runAndSubscribe(\n\t\t\t\tonDidRegisterWindow,\n\t\t\t\t({ window, disposables }) => {\n\t\t\t\t\tconst focusTracker = disposables.add(trackFocus(window));\n\t\t\t\t\tconst visibilityTracker = disposables.add(\n\t\t\t\t\t\tnew DomEmitter(window.document, \"visibilitychange\"),\n\t\t\t\t\t);\n\n\t\t\t\t\tEvent.any(\n\t\t\t\t\t\tEvent.map(\n\t\t\t\t\t\t\tfocusTracker.onDidFocus,\n\t\t\t\t\t\t\t() => this.hasFocus,\n\t\t\t\t\t\t\tdisposables,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tEvent.map(\n\t\t\t\t\t\t\tfocusTracker.onDidBlur,\n\t\t\t\t\t\t\t() => this.hasFocus,\n\t\t\t\t\t\t\tdisposables,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tEvent.map(\n\t\t\t\t\t\t\tvisibilityTracker.event,\n\t\t\t\t\t\t\t() => this.hasFocus,\n\t\t\t\t\t\t\tdisposables,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tEvent.map(\n\t\t\t\t\t\t\tthis.onDidChangeActiveWindow,\n\t\t\t\t\t\t\t() => this.hasFocus,\n\t\t\t\t\t\t\tdisposables,\n\t\t\t\t\t\t),\n\t\t\t\t\t)((focus) => emitter.fire(focus));\n\t\t\t\t},\n\t\t\t\t{ window: mainWindow, disposables: this._store },\n\t\t\t),\n\t\t);\n\n\t\treturn Event.latch(emitter.event, undefined, this._store);\n\t}\n\n\tget hasFocus(): boolean {\n\t\treturn getActiveDocument().hasFocus();\n\t}\n\n\tasync hadLastFocus(): Promise<boolean> {\n\t\treturn true;\n\t}\n\n\tasync focus(targetWindow: Window): Promise<void> {\n\t\ttargetWindow.focus();\n\t}\n\n\t//#endregion\n\n\t//#region Window\n\n\t@memoize\n\tget onDidChangeActiveWindow(): Event<number> {\n\t\tconst emitter = this._register(new Emitter<number>());\n\n\t\tthis._register(\n\t\t\tEvent.runAndSubscribe(\n\t\t\t\tonDidRegisterWindow,\n\t\t\t\t({ window, disposables }) => {\n\t\t\t\t\tconst windowId = getWindowId(window);\n\n\t\t\t\t\t// Emit via focus tracking\n\t\t\t\t\tconst focusTracker = disposables.add(trackFocus(window));\n\t\t\t\t\tdisposables.add(\n\t\t\t\t\t\tfocusTracker.onDidFocus(() => emitter.fire(windowId)),\n\t\t\t\t\t);\n\n\t\t\t\t\t// Emit via interval: immediately when opening an auxiliary window,\n\t\t\t\t\t// it is possible that document focus has not yet changed, so we\n\t\t\t\t\t// poll for a while to ensure we catch the event.\n\t\t\t\t\tif (isAuxiliaryWindow(window)) {\n\t\t\t\t\t\tdisposables.add(\n\t\t\t\t\t\t\tdisposableWindowInterval(\n\t\t\t\t\t\t\t\twindow,\n\t\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\t\tconst hasFocus = window.document.hasFocus();\n\t\t\t\t\t\t\t\t\tif (hasFocus) {\n\t\t\t\t\t\t\t\t\t\temitter.fire(windowId);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturn hasFocus;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t100,\n\t\t\t\t\t\t\t\t20,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{ window: mainWindow, disposables: this._store },\n\t\t\t),\n\t\t);\n\n\t\treturn Event.latch(emitter.event, undefined, this._store);\n\t}\n\n\t@memoize\n\tget onDidChangeFullScreen(): Event<{\n\t\twindowId: number;\n\t\tfullscreen: boolean;\n\t}> {\n\t\tconst emitter = this._register(\n\t\t\tnew Emitter<{ windowId: number; fullscreen: boolean }>(),\n\t\t);\n\n\t\tthis._register(\n\t\t\tEvent.runAndSubscribe(\n\t\t\t\tonDidRegisterWindow,\n\t\t\t\t({ window, disposables }) => {\n\t\t\t\t\tconst windowId = getWindowId(window);\n\t\t\t\t\tconst viewport =\n\t\t\t\t\t\tisIOS && window.visualViewport\n\t\t\t\t\t\t\t? window.visualViewport /** Visual viewport */\n\t\t\t\t\t\t\t: window /** Layout viewport */;\n\n\t\t\t\t\t// Fullscreen (Browser)\n\t\t\t\t\tfor (const event of [\n\t\t\t\t\t\tEventType.FULLSCREEN_CHANGE,\n\t\t\t\t\t\tEventType.WK_FULLSCREEN_CHANGE,\n\t\t\t\t\t]) {\n\t\t\t\t\t\tdisposables.add(\n\t\t\t\t\t\t\taddDisposableListener(window.document, event, () =>\n\t\t\t\t\t\t\t\temitter.fire({\n\t\t\t\t\t\t\t\t\twindowId,\n\t\t\t\t\t\t\t\t\tfullscreen: !!detectFullscreen(window),\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Fullscreen (Native)\n\t\t\t\t\tdisposables.add(\n\t\t\t\t\t\taddDisposableThrottledListener(\n\t\t\t\t\t\t\tviewport,\n\t\t\t\t\t\t\tEventType.RESIZE,\n\t\t\t\t\t\t\t() =>\n\t\t\t\t\t\t\t\temitter.fire({\n\t\t\t\t\t\t\t\t\twindowId,\n\t\t\t\t\t\t\t\t\tfullscreen: !!detectFullscreen(window),\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\tisMacintosh\n\t\t\t\t\t\t\t\t? 2000 /* adjust for macOS animation */\n\t\t\t\t\t\t\t\t: 800 /* can be throttled */,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\t{ window: mainWindow, disposables: this._store },\n\t\t\t),\n\t\t);\n\n\t\treturn emitter.event;\n\t}\n\n\topenWindow(options?: IOpenEmptyWindowOptions): Promise<void>;\n\topenWindow(\n\t\ttoOpen: IWindowOpenable[],\n\t\toptions?: IOpenWindowOptions,\n\t): Promise<void>;\n\topenWindow(\n\t\targ1?: IOpenEmptyWindowOptions | IWindowOpenable[],\n\t\targ2?: IOpenWindowOptions,\n\t): Promise<void> {\n\t\tif (Array.isArray(arg1)) {\n\t\t\treturn this.doOpenWindow(arg1, arg2);\n\t\t}\n\n\t\treturn this.doOpenEmptyWindow(arg1);\n\t}\n\n\tprivate async doOpenWindow(\n\t\ttoOpen: IWindowOpenable[],\n\t\toptions?: IOpenWindowOptions,\n\t): Promise<void> {\n\t\tconst payload = this.preservePayload(\n\t\t\tfalse /* not an empty window */,\n\t\t\toptions,\n\t\t);\n\t\tconst fileOpenables: IFileToOpen[] = [];\n\t\tconst foldersToAdd: IWorkspaceFolderCreationData[] = [];\n\n\t\tfor (const openable of toOpen) {\n\t\t\topenable.label = openable.label || this.getRecentLabel(openable);\n\n\t\t\t// Folder\n\t\t\tif (isFolderToOpen(openable)) {\n\t\t\t\tif (options?.addMode) {\n\t\t\t\t\tfoldersToAdd.push({ uri: openable.folderUri });\n\t\t\t\t} else {\n\t\t\t\t\tthis.doOpen(\n\t\t\t\t\t\t{ folderUri: openable.folderUri },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treuse: this.shouldReuse(\n\t\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\t\tfalse /* no file */,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tpayload,\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Workspace\n\t\t\telse if (isWorkspaceToOpen(openable)) {\n\t\t\t\tthis.doOpen(\n\t\t\t\t\t{ workspaceUri: openable.workspaceUri },\n\t\t\t\t\t{\n\t\t\t\t\t\treuse: this.shouldReuse(options, false /* no file */),\n\t\t\t\t\t\tpayload,\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// File (handled later in bulk)\n\t\t\telse if (isFileToOpen(openable)) {\n\t\t\t\tfileOpenables.push(openable);\n\t\t\t}\n\t\t}\n\n\t\t// Handle Folders to Add\n\t\tif (foldersToAdd.length > 0) {\n\t\t\tthis.withServices((accessor) => {\n\t\t\t\tconst workspaceEditingService: IWorkspaceEditingService =\n\t\t\t\t\taccessor.get(IWorkspaceEditingService);\n\t\t\t\tworkspaceEditingService.addFolders(foldersToAdd);\n\t\t\t});\n\t\t}\n\n\t\t// Handle Files\n\t\tif (fileOpenables.length > 0) {\n\t\t\tthis.withServices(async (accessor) => {\n\t\t\t\tconst editorService = accessor.get(IEditorService);\n\n\t\t\t\t// Support mergeMode\n\t\t\t\tif (options?.mergeMode && fileOpenables.length === 4) {\n\t\t\t\t\tconst editors = coalesce(\n\t\t\t\t\t\tawait pathsToEditors(\n\t\t\t\t\t\t\tfileOpenables,\n\t\t\t\t\t\t\tthis.fileService,\n\t\t\t\t\t\t\tthis.logService,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tif (\n\t\t\t\t\t\teditors.length !== 4 ||\n\t\t\t\t\t\t!isResourceEditorInput(editors[0]) ||\n\t\t\t\t\t\t!isResourceEditorInput(editors[1]) ||\n\t\t\t\t\t\t!isResourceEditorInput(editors[2]) ||\n\t\t\t\t\t\t!isResourceEditorInput(editors[3])\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn; // invalid resources\n\t\t\t\t\t}\n\n\t\t\t\t\t// Same Window: open via editor service in current window\n\t\t\t\t\tif (this.shouldReuse(options, true /* file */)) {\n\t\t\t\t\t\teditorService.openEditor({\n\t\t\t\t\t\t\tinput1: { resource: editors[0].resource },\n\t\t\t\t\t\t\tinput2: { resource: editors[1].resource },\n\t\t\t\t\t\t\tbase: { resource: editors[2].resource },\n\t\t\t\t\t\t\tresult: { resource: editors[3].resource },\n\t\t\t\t\t\t\toptions: { pinned: true },\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t// New Window: open into empty window\n\t\t\t\t\telse {\n\t\t\t\t\t\tconst environment = new Map<string, string>();\n\t\t\t\t\t\tenvironment.set(\n\t\t\t\t\t\t\t\"mergeFile1\",\n\t\t\t\t\t\t\teditors[0].resource.toString(),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tenvironment.set(\n\t\t\t\t\t\t\t\"mergeFile2\",\n\t\t\t\t\t\t\teditors[1].resource.toString(),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tenvironment.set(\n\t\t\t\t\t\t\t\"mergeFileBase\",\n\t\t\t\t\t\t\teditors[2].resource.toString(),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tenvironment.set(\n\t\t\t\t\t\t\t\"mergeFileResult\",\n\t\t\t\t\t\t\teditors[3].resource.toString(),\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tthis.doOpen(undefined, {\n\t\t\t\t\t\t\tpayload: Array.from(environment.entries()),\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Support diffMode\n\t\t\t\telse if (options?.diffMode && fileOpenables.length === 2) {\n\t\t\t\t\tconst editors = coalesce(\n\t\t\t\t\t\tawait pathsToEditors(\n\t\t\t\t\t\t\tfileOpenables,\n\t\t\t\t\t\t\tthis.fileService,\n\t\t\t\t\t\t\tthis.logService,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tif (\n\t\t\t\t\t\teditors.length !== 2 ||\n\t\t\t\t\t\t!isResourceEditorInput(editors[0]) ||\n\t\t\t\t\t\t!isResourceEditorInput(editors[1])\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn; // invalid resources\n\t\t\t\t\t}\n\n\t\t\t\t\t// Same Window: open via editor service in current window\n\t\t\t\t\tif (this.shouldReuse(options, true /* file */)) {\n\t\t\t\t\t\teditorService.openEditor({\n\t\t\t\t\t\t\toriginal: { resource: editors[0].resource },\n\t\t\t\t\t\t\tmodified: { resource: editors[1].resource },\n\t\t\t\t\t\t\toptions: { pinned: true },\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t// New Window: open into empty window\n\t\t\t\t\telse {\n\t\t\t\t\t\tconst environment = new Map<string, string>();\n\t\t\t\t\t\tenvironment.set(\n\t\t\t\t\t\t\t\"diffFileSecondary\",\n\t\t\t\t\t\t\teditors[0].resource.toString(),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tenvironment.set(\n\t\t\t\t\t\t\t\"diffFilePrimary\",\n\t\t\t\t\t\t\teditors[1].resource.toString(),\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tthis.doOpen(undefined, {\n\t\t\t\t\t\t\tpayload: Array.from(environment.entries()),\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Just open normally\n\t\t\t\telse {\n\t\t\t\t\tfor (const openable of fileOpenables) {\n\t\t\t\t\t\t// Same Window: open via editor service in current window\n\t\t\t\t\t\tif (this.shouldReuse(options, true /* file */)) {\n\t\t\t\t\t\t\tlet openables: IPathData<ITextEditorOptions>[] = [];\n\n\t\t\t\t\t\t\t// Support: --goto parameter to open on line/col\n\t\t\t\t\t\t\tif (options?.gotoLineMode) {\n\t\t\t\t\t\t\t\tconst pathColumnAware = parseLineAndColumnAware(\n\t\t\t\t\t\t\t\t\topenable.fileUri.path,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\topenables = [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tfileUri: openable.fileUri.with({\n\t\t\t\t\t\t\t\t\t\t\tpath: pathColumnAware.path,\n\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\tselection: isUndefined(\n\t\t\t\t\t\t\t\t\t\t\t\tpathColumnAware.line,\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstartLineNumber:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpathColumnAware.line,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstartColumn:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpathColumnAware.column ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\topenables = [openable];\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\teditorService.openEditors(\n\t\t\t\t\t\t\t\tcoalesce(\n\t\t\t\t\t\t\t\t\tawait pathsToEditors(\n\t\t\t\t\t\t\t\t\t\topenables,\n\t\t\t\t\t\t\t\t\t\tthis.fileService,\n\t\t\t\t\t\t\t\t\t\tthis.logService,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\t{ validateTrust: true },\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// New Window: open into empty window\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst environment = new Map<string, string>();\n\t\t\t\t\t\t\tenvironment.set(\n\t\t\t\t\t\t\t\t\"openFile\",\n\t\t\t\t\t\t\t\topenable.fileUri.toString(),\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif (options?.gotoLineMode) {\n\t\t\t\t\t\t\t\tenvironment.set(\"gotoLineMode\", \"true\");\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.doOpen(undefined, {\n\t\t\t\t\t\t\t\tpayload: Array.from(environment.entries()),\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Support wait mode\n\t\t\t\tconst waitMarkerFileURI = options?.waitMarkerFileURI;\n\t\t\t\tif (waitMarkerFileURI) {\n\t\t\t\t\t(async () => {\n\t\t\t\t\t\t// Wait for the resources to be closed in the text editor...\n\t\t\t\t\t\tawait this.instantiationService.invokeFunction(\n\t\t\t\t\t\t\t(accessor) =>\n\t\t\t\t\t\t\t\twhenEditorClosed(\n\t\t\t\t\t\t\t\t\taccessor,\n\t\t\t\t\t\t\t\t\tfileOpenables.map(\n\t\t\t\t\t\t\t\t\t\t(fileOpenable) => fileOpenable.fileUri,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// ...before deleting the wait marker file\n\t\t\t\t\t\tawait this.fileService.del(waitMarkerFileURI);\n\t\t\t\t\t})();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate withServices(fn: (accessor: ServicesAccessor) => unknown): void {\n\t\t// Host service is used in a lot of contexts and some services\n\t\t// need to be resolved dynamically to avoid cyclic dependencies\n\t\t// (https://github.com/microsoft/vscode/issues/108522)\n\t\tthis.instantiationService.invokeFunction((accessor) => fn(accessor));\n\t}\n\n\tprivate preservePayload(\n\t\tisEmptyWindow: boolean,\n\t\toptions?: IOpenWindowOptions,\n\t): Array<unknown> | undefined {\n\t\t// Selectively copy payload: for now only extension debugging properties are considered\n\t\tconst newPayload: Array<unknown> = new Array();\n\t\tif (\n\t\t\t!isEmptyWindow &&\n\t\t\tthis.environmentService.extensionDevelopmentLocationURI\n\t\t) {\n\t\t\tnewPayload.push([\n\t\t\t\t\"extensionDevelopmentPath\",\n\t\t\t\tthis.environmentService.extensionDevelopmentLocationURI.toString(),\n\t\t\t]);\n\n\t\t\tif (this.environmentService.debugExtensionHost.debugId) {\n\t\t\t\tnewPayload.push([\n\t\t\t\t\t\"debugId\",\n\t\t\t\t\tthis.environmentService.debugExtensionHost.debugId,\n\t\t\t\t]);\n\t\t\t}\n\n\t\t\tif (this.environmentService.debugExtensionHost.port) {\n\t\t\t\tnewPayload.push([\n\t\t\t\t\t\"inspect-brk-extensions\",\n\t\t\t\t\tString(this.environmentService.debugExtensionHost.port),\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\n\t\tconst newWindowProfile =\n\t\t\t(options?.forceProfile\n\t\t\t\t? this.userDataProfilesService.profiles.find(\n\t\t\t\t\t\t(profile) => profile.name === options?.forceProfile,\n\t\t\t\t\t)\n\t\t\t\t: undefined) ?? this.userDataProfileService.currentProfile;\n\t\tif (!newWindowProfile.isDefault) {\n\t\t\tnewPayload.push([\"profile\", newWindowProfile.name]);\n\t\t}\n\n\t\treturn newPayload.length ? newPayload : undefined;\n\t}\n\n\tprivate getRecentLabel(openable: IWindowOpenable): string {\n\t\tif (isFolderToOpen(openable)) {\n\t\t\treturn this.labelService.getWorkspaceLabel(openable.folderUri, {\n\t\t\t\tverbose: Verbosity.LONG,\n\t\t\t});\n\t\t}\n\n\t\tif (isWorkspaceToOpen(openable)) {\n\t\t\treturn this.labelService.getWorkspaceLabel(\n\t\t\t\tgetWorkspaceIdentifier(openable.workspaceUri),\n\t\t\t\t{ verbose: Verbosity.LONG },\n\t\t\t);\n\t\t}\n\n\t\treturn this.labelService.getUriLabel(openable.fileUri);\n\t}\n\n\tprivate shouldReuse(\n\t\toptions: IOpenWindowOptions = Object.create(null),\n\t\tisFile: boolean,\n\t): boolean {\n\t\tif (options.waitMarkerFileURI) {\n\t\t\treturn true; // always handle --wait in same window\n\t\t}\n\n\t\tconst windowConfig = this.configurationService.getValue<\n\t\t\tIWindowSettings | undefined\n\t\t>(\"window\");\n\t\tconst openInNewWindowConfig = isFile\n\t\t\t? windowConfig?.openFilesInNewWindow || \"off\" /* default */\n\t\t\t: windowConfig?.openFoldersInNewWindow || \"default\" /* default */;\n\n\t\tlet openInNewWindow =\n\t\t\t(options.preferNewWindow || !!options.forceNewWindow) &&\n\t\t\t!options.forceReuseWindow;\n\t\tif (\n\t\t\t!options.forceNewWindow &&\n\t\t\t!options.forceReuseWindow &&\n\t\t\t(openInNewWindowConfig === \"on\" || openInNewWindowConfig === \"off\")\n\t\t) {\n\t\t\topenInNewWindow = openInNewWindowConfig === \"on\";\n\t\t}\n\n\t\treturn !openInNewWindow;\n\t}\n\n\tprivate async doOpenEmptyWindow(\n\t\toptions?: IOpenEmptyWindowOptions,\n\t): Promise<void> {\n\t\treturn this.doOpen(undefined, {\n\t\t\treuse: options?.forceReuseWindow,\n\t\t\tpayload: this.preservePayload(true /* empty window */, options),\n\t\t});\n\t}\n\n\tprivate async doOpen(\n\t\tworkspace: IWorkspace,\n\t\toptions?: { reuse?: boolean; payload?: object },\n\t): Promise<void> {\n\t\t// When we are in a temporary workspace and are asked to open a local folder\n\t\t// we swap that folder into the workspace to avoid a window reload. Access\n\t\t// to local resources is only possible without a window reload because it\n\t\t// needs user activation.\n\t\tif (\n\t\t\tworkspace &&\n\t\t\tisFolderToOpen(workspace) &&\n\t\t\tworkspace.folderUri.scheme === Schemas.file &&\n\t\t\tisTemporaryWorkspace(this.contextService.getWorkspace())\n\t\t) {\n\t\t\tthis.withServices(async (accessor) => {\n\t\t\t\tconst workspaceEditingService: IWorkspaceEditingService =\n\t\t\t\t\taccessor.get(IWorkspaceEditingService);\n\n\t\t\t\tawait workspaceEditingService.updateFolders(\n\t\t\t\t\t0,\n\t\t\t\t\tthis.contextService.getWorkspace().folders.length,\n\t\t\t\t\t[{ uri: workspace.folderUri }],\n\t\t\t\t);\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We know that `workspaceProvider.open` will trigger a shutdown\n\t\t// with `options.reuse` so we handle this expected shutdown\n\t\tif (options?.reuse) {\n\t\t\tawait this.handleExpectedShutdown(ShutdownReason.LOAD);\n\t\t}\n\n\t\tconst opened = await this.workspaceProvider.open(workspace, options);\n\t\tif (!opened) {\n\t\t\tconst { confirmed } = await this.dialogService.confirm({\n\t\t\t\ttype: Severity.Warning,\n\t\t\t\tmessage: localize(\n\t\t\t\t\t\"unableToOpenExternal\",\n\t\t\t\t\t\"The browser interrupted the opening of a new tab or window. Press 'Open' to open it anyway.\",\n\t\t\t\t),\n\t\t\t\tprimaryButton: localize(\n\t\t\t\t\t{ key: \"open\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\t\"&&Open\",\n\t\t\t\t),\n\t\t\t});\n\t\t\tif (confirmed) {\n\t\t\t\tawait this.workspaceProvider.open(workspace, options);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync toggleFullScreen(targetWindow: Window): Promise<void> {\n\t\tconst target = this.layoutService.getContainer(targetWindow);\n\n\t\t// Chromium\n\t\tif (targetWindow.document.fullscreen !== undefined) {\n\t\t\tif (targetWindow.document.fullscreen) {\n\t\t\t\ttry {\n\t\t\t\t\treturn await targetWindow.document.exitFullscreen();\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.warn(\n\t\t\t\t\t\t\"toggleFullScreen(): exitFullscreen failed\",\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\treturn await target.requestFullscreen();\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.warn(\n\t\t\t\t\t\t\"toggleFullScreen(): requestFullscreen failed\",\n\t\t\t\t\t); // https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Safari and Edge 14 are all using webkit prefix\n\t\tif ((<any>targetWindow.document).webkitIsFullScreen !== undefined) {\n\t\t\ttry {\n\t\t\t\tif ((<any>targetWindow.document).webkitIsFullScreen) {\n\t\t\t\t\t(<any>targetWindow.document).webkitExitFullscreen(); // it's async, but doesn't return a real promise.\n\t\t\t\t} else {\n\t\t\t\t\t(<any>target).webkitRequestFullscreen(); // it's async, but doesn't return a real promise.\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\tthis.logService.warn(\n\t\t\t\t\t\"toggleFullScreen(): requestFullscreen/exitFullscreen failed\",\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync moveTop(targetWindow: Window): Promise<void> {\n\t\t// There seems to be no API to bring a window to front in browsers\n\t}\n\n\tasync getCursorScreenPoint(): Promise<undefined> {\n\t\treturn undefined;\n\t}\n\n\t//#endregion\n\n\t//#region Lifecycle\n\n\tasync restart(): Promise<void> {\n\t\tthis.reload();\n\t}\n\n\tasync reload(): Promise<void> {\n\t\tawait this.handleExpectedShutdown(ShutdownReason.RELOAD);\n\n\t\tmainWindow.location.reload();\n\t}\n\n\tasync close(): Promise<void> {\n\t\tawait this.handleExpectedShutdown(ShutdownReason.CLOSE);\n\n\t\tmainWindow.close();\n\t}\n\n\tasync withExpectedShutdown<T>(\n\t\texpectedShutdownTask: () => Promise<T>,\n\t): Promise<T> {\n\t\tconst previousShutdownReason = this.shutdownReason;\n\t\ttry {\n\t\t\tthis.shutdownReason = HostShutdownReason.Api;\n\t\t\treturn await expectedShutdownTask();\n\t\t} finally {\n\t\t\tthis.shutdownReason = previousShutdownReason;\n\t\t}\n\t}\n\n\tprivate async handleExpectedShutdown(\n\t\treason: ShutdownReason,\n\t): Promise<void> {\n\t\t// Update shutdown reason in a way that we do\n\t\t// not show a dialog because this is a expected\n\t\t// shutdown.\n\t\tthis.shutdownReason = HostShutdownReason.Api;\n\n\t\t// Signal shutdown reason to lifecycle\n\t\treturn this.lifecycleService.withExpectedShutdown(reason);\n\t}\n\n\t//#endregion\n\n\t//#region File\n\n\tgetPathForFile(): undefined {\n\t\treturn undefined; // unsupported in browser environments\n\t}\n\n\t//#endregion\n}\n\nregisterSingleton(IHostService, BrowserHostService, InstantiationType.Delayed);\n"],
  "mappings": "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",
  "names": ["HostShutdownReason", "accessor"]
}
