{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/host/browser/browserHostService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { IHostService } from './host.js';\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { ILayoutService } from '../../../../platform/layout/browser/layoutService.js';\nimport { IEditorService } from '../../editor/common/editorService.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IWindowSettings, IWindowOpenable, IOpenWindowOptions, isFolderToOpen, isWorkspaceToOpen, isFileToOpen, IOpenEmptyWindowOptions, IPathData, IFileToOpen } from '../../../../platform/window/common/window.js';\nimport { isResourceEditorInput, pathsToEditors } from '../../../common/editor.js';\nimport { whenEditorClosed } from '../../../browser/editor.js';\nimport { IWorkspace, IWorkspaceProvider } from '../../../browser/web.api.js';\nimport { IFileService } from '../../../../platform/files/common/files.js';\nimport { ILabelService, Verbosity } from '../../../../platform/label/common/label.js';\nimport { EventType, ModifierKeyEmitter, addDisposableListener, addDisposableThrottledListener, detectFullscreen, disposableWindowInterval, getActiveDocument, getWindowId, onDidRegisterWindow, trackFocus } from '../../../../base/browser/dom.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { IBrowserWorkbenchEnvironmentService } from '../../environment/browser/environmentService.js';\nimport { memoize } from '../../../../base/common/decorators.js';\nimport { parseLineAndColumnAware } from '../../../../base/common/extpath.js';\nimport { IWorkspaceFolderCreationData } from '../../../../platform/workspaces/common/workspaces.js';\nimport { IWorkspaceEditingService } from '../../workspaces/common/workspaceEditing.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ILifecycleService, BeforeShutdownEvent, ShutdownReason } from '../../lifecycle/common/lifecycle.js';\nimport { BrowserLifecycleService } from '../../lifecycle/browser/lifecycleService.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { getWorkspaceIdentifier } from '../../workspaces/browser/workspaces.js';\nimport { localize } from '../../../../nls.js';\nimport Severity from '../../../../base/common/severity.js';\nimport { IDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nimport { DomEmitter } from '../../../../base/browser/event.js';\nimport { isUndefined } from '../../../../base/common/types.js';\nimport { isTemporaryWorkspace, IWorkspaceContextService } from '../../../../platform/workspace/common/workspace.js';\nimport { ServicesAccessor } from '../../../../editor/browser/editorExtensions.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { ITextEditorOptions } from '../../../../platform/editor/common/editor.js';\nimport { IUserDataProfileService } from '../../userDataProfile/common/userDataProfile.js';\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { mainWindow, isAuxiliaryWindow } from '../../../../base/browser/window.js';\nimport { isIOS, isMacintosh } from '../../../../base/common/platform.js';\nimport { IUserDataProfilesService } from '../../../../platform/userDataProfile/common/userDataProfile.js';\n\nenum HostShutdownReason {\n\n\t/**\n\t * An unknown shutdown reason.\n\t */\n\tUnknown = 1,\n\n\t/**\n\t * A shutdown that was potentially triggered by keyboard use.\n\t */\n\tKeyboard = 2,\n\n\t/**\n\t * An explicit shutdown via code.\n\t */\n\tApi = 3\n}\n\nexport class BrowserHostService extends Disposable implements IHostService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate workspaceProvider: IWorkspaceProvider;\n\n\tprivate shutdownReason = HostShutdownReason.Unknown;\n\n\tconstructor(\n\t\t@ILayoutService private readonly layoutService: ILayoutService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@IBrowserWorkbenchEnvironmentService private readonly environmentService: IBrowserWorkbenchEnvironmentService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ILifecycleService private readonly lifecycleService: BrowserLifecycleService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IUserDataProfileService private readonly userDataProfileService: IUserDataProfileService,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t) {\n\t\tsuper();\n\n\t\tif (environmentService.options?.workspaceProvider) {\n\t\t\tthis.workspaceProvider = environmentService.options.workspaceProvider;\n\t\t} else {\n\t\t\tthis.workspaceProvider = new class implements IWorkspaceProvider {\n\t\t\t\treadonly workspace = undefined;\n\t\t\t\treadonly trusted = undefined;\n\t\t\t\tasync open() { return true; }\n\t\t\t};\n\t\t}\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// Veto shutdown depending on `window.confirmBeforeClose` setting\n\t\tthis._register(this.lifecycleService.onBeforeShutdown(e => this.onBeforeShutdown(e)));\n\n\t\t// Track modifier keys to detect keybinding usage\n\t\tthis._register(ModifierKeyEmitter.getInstance().event(() => this.updateShutdownReasonFromEvent()));\n\t}\n\n\tprivate onBeforeShutdown(e: BeforeShutdownEvent): void {\n\n\t\tswitch (this.shutdownReason) {\n\n\t\t\t// Unknown / Keyboard shows veto depending on setting\n\t\t\tcase HostShutdownReason.Unknown:\n\t\t\tcase HostShutdownReason.Keyboard: {\n\t\t\t\tconst confirmBeforeClose = this.configurationService.getValue('window.confirmBeforeClose');\n\t\t\t\tif (confirmBeforeClose === 'always' || (confirmBeforeClose === 'keyboardOnly' && this.shutdownReason === HostShutdownReason.Keyboard)) {\n\t\t\t\t\te.veto(true, 'veto.confirmBeforeClose');\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// Api never shows veto\n\t\t\tcase HostShutdownReason.Api:\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Unset for next shutdown\n\t\tthis.shutdownReason = HostShutdownReason.Unknown;\n\t}\n\n\tprivate updateShutdownReasonFromEvent(): void {\n\t\tif (this.shutdownReason === HostShutdownReason.Api) {\n\t\t\treturn; // do not overwrite any explicitly set shutdown reason\n\t\t}\n\n\t\tif (ModifierKeyEmitter.getInstance().isModifierPressed) {\n\t\t\tthis.shutdownReason = HostShutdownReason.Keyboard;\n\t\t} else {\n\t\t\tthis.shutdownReason = HostShutdownReason.Unknown;\n\t\t}\n\t}\n\n\t//#region Focus\n\n\t@memoize\n\tget onDidChangeFocus(): Event<boolean> {\n\t\tconst emitter = this._register(new Emitter<boolean>());\n\n\t\tthis._register(Event.runAndSubscribe(onDidRegisterWindow, ({ window, disposables }) => {\n\t\t\tconst focusTracker = disposables.add(trackFocus(window));\n\t\t\tconst visibilityTracker = disposables.add(new DomEmitter(window.document, 'visibilitychange'));\n\n\t\t\tEvent.any(\n\t\t\t\tEvent.map(focusTracker.onDidFocus, () => this.hasFocus, disposables),\n\t\t\t\tEvent.map(focusTracker.onDidBlur, () => this.hasFocus, disposables),\n\t\t\t\tEvent.map(visibilityTracker.event, () => this.hasFocus, disposables),\n\t\t\t\tEvent.map(this.onDidChangeActiveWindow, () => this.hasFocus, disposables),\n\t\t\t)(focus => emitter.fire(focus));\n\t\t}, { window: mainWindow, disposables: this._store }));\n\n\t\treturn Event.latch(emitter.event, undefined, this._store);\n\t}\n\n\tget hasFocus(): boolean {\n\t\treturn getActiveDocument().hasFocus();\n\t}\n\n\tasync hadLastFocus(): Promise<boolean> {\n\t\treturn true;\n\t}\n\n\tasync focus(targetWindow: Window): Promise<void> {\n\t\ttargetWindow.focus();\n\t}\n\n\t//#endregion\n\n\n\t//#region Window\n\n\t@memoize\n\tget onDidChangeActiveWindow(): Event<number> {\n\t\tconst emitter = this._register(new Emitter<number>());\n\n\t\tthis._register(Event.runAndSubscribe(onDidRegisterWindow, ({ window, disposables }) => {\n\t\t\tconst windowId = getWindowId(window);\n\n\t\t\t// Emit via focus tracking\n\t\t\tconst focusTracker = disposables.add(trackFocus(window));\n\t\t\tdisposables.add(focusTracker.onDidFocus(() => emitter.fire(windowId)));\n\n\t\t\t// Emit via interval: immediately when opening an auxiliary window,\n\t\t\t// it is possible that document focus has not yet changed, so we\n\t\t\t// poll for a while to ensure we catch the event.\n\t\t\tif (isAuxiliaryWindow(window)) {\n\t\t\t\tdisposables.add(disposableWindowInterval(window, () => {\n\t\t\t\t\tconst hasFocus = window.document.hasFocus();\n\t\t\t\t\tif (hasFocus) {\n\t\t\t\t\t\temitter.fire(windowId);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn hasFocus;\n\t\t\t\t}, 100, 20));\n\t\t\t}\n\t\t}, { window: mainWindow, disposables: this._store }));\n\n\t\treturn Event.latch(emitter.event, undefined, this._store);\n\t}\n\n\t@memoize\n\tget onDidChangeFullScreen(): Event<{ windowId: number; fullscreen: boolean }> {\n\t\tconst emitter = this._register(new Emitter<{ windowId: number; fullscreen: boolean }>());\n\n\t\tthis._register(Event.runAndSubscribe(onDidRegisterWindow, ({ window, disposables }) => {\n\t\t\tconst windowId = getWindowId(window);\n\t\t\tconst viewport = isIOS && window.visualViewport ? window.visualViewport /** Visual viewport */ : window /** Layout viewport */;\n\n\t\t\t// Fullscreen (Browser)\n\t\t\tfor (const event of [EventType.FULLSCREEN_CHANGE, EventType.WK_FULLSCREEN_CHANGE]) {\n\t\t\t\tdisposables.add(addDisposableListener(window.document, event, () => emitter.fire({ windowId, fullscreen: !!detectFullscreen(window) })));\n\t\t\t}\n\n\t\t\t// Fullscreen (Native)\n\t\t\tdisposables.add(addDisposableThrottledListener(viewport, EventType.RESIZE, () => emitter.fire({ windowId, fullscreen: !!detectFullscreen(window) }), undefined, isMacintosh ? 2000 /* adjust for macOS animation */ : 800 /* can be throttled */));\n\t\t}, { window: mainWindow, disposables: this._store }));\n\n\t\treturn emitter.event;\n\t}\n\n\topenWindow(options?: IOpenEmptyWindowOptions): Promise<void>;\n\topenWindow(toOpen: IWindowOpenable[], options?: IOpenWindowOptions): Promise<void>;\n\topenWindow(arg1?: IOpenEmptyWindowOptions | IWindowOpenable[], arg2?: IOpenWindowOptions): Promise<void> {\n\t\tif (Array.isArray(arg1)) {\n\t\t\treturn this.doOpenWindow(arg1, arg2);\n\t\t}\n\n\t\treturn this.doOpenEmptyWindow(arg1);\n\t}\n\n\tprivate async doOpenWindow(toOpen: IWindowOpenable[], options?: IOpenWindowOptions): Promise<void> {\n\t\tconst payload = this.preservePayload(false /* not an empty window */, options);\n\t\tconst fileOpenables: IFileToOpen[] = [];\n\t\tconst foldersToAdd: IWorkspaceFolderCreationData[] = [];\n\n\t\tfor (const openable of toOpen) {\n\t\t\topenable.label = openable.label || this.getRecentLabel(openable);\n\n\t\t\t// Folder\n\t\t\tif (isFolderToOpen(openable)) {\n\t\t\t\tif (options?.addMode) {\n\t\t\t\t\tfoldersToAdd.push(({ uri: openable.folderUri }));\n\t\t\t\t} else {\n\t\t\t\t\tthis.doOpen({ folderUri: openable.folderUri }, { reuse: this.shouldReuse(options, false /* no file */), payload });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Workspace\n\t\t\telse if (isWorkspaceToOpen(openable)) {\n\t\t\t\tthis.doOpen({ workspaceUri: openable.workspaceUri }, { reuse: this.shouldReuse(options, false /* no file */), payload });\n\t\t\t}\n\n\t\t\t// File (handled later in bulk)\n\t\t\telse if (isFileToOpen(openable)) {\n\t\t\t\tfileOpenables.push(openable);\n\t\t\t}\n\t\t}\n\n\t\t// Handle Folders to Add\n\t\tif (foldersToAdd.length > 0) {\n\t\t\tthis.withServices(accessor => {\n\t\t\t\tconst workspaceEditingService: IWorkspaceEditingService = accessor.get(IWorkspaceEditingService);\n\t\t\t\tworkspaceEditingService.addFolders(foldersToAdd);\n\t\t\t});\n\t\t}\n\n\t\t// Handle Files\n\t\tif (fileOpenables.length > 0) {\n\t\t\tthis.withServices(async accessor => {\n\t\t\t\tconst editorService = accessor.get(IEditorService);\n\n\t\t\t\t// Support mergeMode\n\t\t\t\tif (options?.mergeMode && fileOpenables.length === 4) {\n\t\t\t\t\tconst editors = coalesce(await pathsToEditors(fileOpenables, this.fileService, this.logService));\n\t\t\t\t\tif (editors.length !== 4 || !isResourceEditorInput(editors[0]) || !isResourceEditorInput(editors[1]) || !isResourceEditorInput(editors[2]) || !isResourceEditorInput(editors[3])) {\n\t\t\t\t\t\treturn; // invalid resources\n\t\t\t\t\t}\n\n\t\t\t\t\t// Same Window: open via editor service in current window\n\t\t\t\t\tif (this.shouldReuse(options, true /* file */)) {\n\t\t\t\t\t\teditorService.openEditor({\n\t\t\t\t\t\t\tinput1: { resource: editors[0].resource },\n\t\t\t\t\t\t\tinput2: { resource: editors[1].resource },\n\t\t\t\t\t\t\tbase: { resource: editors[2].resource },\n\t\t\t\t\t\t\tresult: { resource: editors[3].resource },\n\t\t\t\t\t\t\toptions: { pinned: true }\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t// New Window: open into empty window\n\t\t\t\t\telse {\n\t\t\t\t\t\tconst environment = new Map<string, string>();\n\t\t\t\t\t\tenvironment.set('mergeFile1', editors[0].resource.toString());\n\t\t\t\t\t\tenvironment.set('mergeFile2', editors[1].resource.toString());\n\t\t\t\t\t\tenvironment.set('mergeFileBase', editors[2].resource.toString());\n\t\t\t\t\t\tenvironment.set('mergeFileResult', editors[3].resource.toString());\n\n\t\t\t\t\t\tthis.doOpen(undefined, { payload: Array.from(environment.entries()) });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Support diffMode\n\t\t\t\telse if (options?.diffMode && fileOpenables.length === 2) {\n\t\t\t\t\tconst editors = coalesce(await pathsToEditors(fileOpenables, this.fileService, this.logService));\n\t\t\t\t\tif (editors.length !== 2 || !isResourceEditorInput(editors[0]) || !isResourceEditorInput(editors[1])) {\n\t\t\t\t\t\treturn; // invalid resources\n\t\t\t\t\t}\n\n\t\t\t\t\t// Same Window: open via editor service in current window\n\t\t\t\t\tif (this.shouldReuse(options, true /* file */)) {\n\t\t\t\t\t\teditorService.openEditor({\n\t\t\t\t\t\t\toriginal: { resource: editors[0].resource },\n\t\t\t\t\t\t\tmodified: { resource: editors[1].resource },\n\t\t\t\t\t\t\toptions: { pinned: true }\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t// New Window: open into empty window\n\t\t\t\t\telse {\n\t\t\t\t\t\tconst environment = new Map<string, string>();\n\t\t\t\t\t\tenvironment.set('diffFileSecondary', editors[0].resource.toString());\n\t\t\t\t\t\tenvironment.set('diffFilePrimary', editors[1].resource.toString());\n\n\t\t\t\t\t\tthis.doOpen(undefined, { payload: Array.from(environment.entries()) });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Just open normally\n\t\t\t\telse {\n\t\t\t\t\tfor (const openable of fileOpenables) {\n\n\t\t\t\t\t\t// Same Window: open via editor service in current window\n\t\t\t\t\t\tif (this.shouldReuse(options, true /* file */)) {\n\t\t\t\t\t\t\tlet openables: IPathData<ITextEditorOptions>[] = [];\n\n\t\t\t\t\t\t\t// Support: --goto parameter to open on line/col\n\t\t\t\t\t\t\tif (options?.gotoLineMode) {\n\t\t\t\t\t\t\t\tconst pathColumnAware = parseLineAndColumnAware(openable.fileUri.path);\n\t\t\t\t\t\t\t\topenables = [{\n\t\t\t\t\t\t\t\t\tfileUri: openable.fileUri.with({ path: pathColumnAware.path }),\n\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\tselection: !isUndefined(pathColumnAware.line) ? { startLineNumber: pathColumnAware.line, startColumn: pathColumnAware.column || 1 } : undefined\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\topenables = [openable];\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\teditorService.openEditors(coalesce(await pathsToEditors(openables, this.fileService, this.logService)), undefined, { validateTrust: true });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// New Window: open into empty window\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst environment = new Map<string, string>();\n\t\t\t\t\t\t\tenvironment.set('openFile', openable.fileUri.toString());\n\n\t\t\t\t\t\t\tif (options?.gotoLineMode) {\n\t\t\t\t\t\t\t\tenvironment.set('gotoLineMode', 'true');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.doOpen(undefined, { payload: Array.from(environment.entries()) });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Support wait mode\n\t\t\t\tconst waitMarkerFileURI = options?.waitMarkerFileURI;\n\t\t\t\tif (waitMarkerFileURI) {\n\t\t\t\t\t(async () => {\n\n\t\t\t\t\t\t// Wait for the resources to be closed in the text editor...\n\t\t\t\t\t\tawait this.instantiationService.invokeFunction(accessor => whenEditorClosed(accessor, fileOpenables.map(fileOpenable => fileOpenable.fileUri)));\n\n\t\t\t\t\t\t// ...before deleting the wait marker file\n\t\t\t\t\t\tawait this.fileService.del(waitMarkerFileURI);\n\t\t\t\t\t})();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate withServices(fn: (accessor: ServicesAccessor) => unknown): void {\n\t\t// Host service is used in a lot of contexts and some services\n\t\t// need to be resolved dynamically to avoid cyclic dependencies\n\t\t// (https://github.com/microsoft/vscode/issues/108522)\n\t\tthis.instantiationService.invokeFunction(accessor => fn(accessor));\n\t}\n\n\tprivate preservePayload(isEmptyWindow: boolean, options?: IOpenWindowOptions): Array<unknown> | undefined {\n\n\t\t// Selectively copy payload: for now only extension debugging properties are considered\n\t\tconst newPayload: Array<unknown> = new Array();\n\t\tif (!isEmptyWindow && this.environmentService.extensionDevelopmentLocationURI) {\n\t\t\tnewPayload.push(['extensionDevelopmentPath', this.environmentService.extensionDevelopmentLocationURI.toString()]);\n\n\t\t\tif (this.environmentService.debugExtensionHost.debugId) {\n\t\t\t\tnewPayload.push(['debugId', this.environmentService.debugExtensionHost.debugId]);\n\t\t\t}\n\n\t\t\tif (this.environmentService.debugExtensionHost.port) {\n\t\t\t\tnewPayload.push(['inspect-brk-extensions', String(this.environmentService.debugExtensionHost.port)]);\n\t\t\t}\n\t\t}\n\n\t\tconst newWindowProfile = (options?.forceProfile\n\t\t\t? this.userDataProfilesService.profiles.find(profile => profile.name === options?.forceProfile)\n\t\t\t: undefined) ?? this.userDataProfileService.currentProfile;\n\t\tif (!newWindowProfile.isDefault) {\n\t\t\tnewPayload.push(['profile', newWindowProfile.name]);\n\t\t}\n\n\t\treturn newPayload.length ? newPayload : undefined;\n\t}\n\n\tprivate getRecentLabel(openable: IWindowOpenable): string {\n\t\tif (isFolderToOpen(openable)) {\n\t\t\treturn this.labelService.getWorkspaceLabel(openable.folderUri, { verbose: Verbosity.LONG });\n\t\t}\n\n\t\tif (isWorkspaceToOpen(openable)) {\n\t\t\treturn this.labelService.getWorkspaceLabel(getWorkspaceIdentifier(openable.workspaceUri), { verbose: Verbosity.LONG });\n\t\t}\n\n\t\treturn this.labelService.getUriLabel(openable.fileUri);\n\t}\n\n\tprivate shouldReuse(options: IOpenWindowOptions = Object.create(null), isFile: boolean): boolean {\n\t\tif (options.waitMarkerFileURI) {\n\t\t\treturn true; // always handle --wait in same window\n\t\t}\n\n\t\tconst windowConfig = this.configurationService.getValue<IWindowSettings | undefined>('window');\n\t\tconst openInNewWindowConfig = isFile ? (windowConfig?.openFilesInNewWindow || 'off' /* default */) : (windowConfig?.openFoldersInNewWindow || 'default' /* default */);\n\n\t\tlet openInNewWindow = (options.preferNewWindow || !!options.forceNewWindow) && !options.forceReuseWindow;\n\t\tif (!options.forceNewWindow && !options.forceReuseWindow && (openInNewWindowConfig === 'on' || openInNewWindowConfig === 'off')) {\n\t\t\topenInNewWindow = (openInNewWindowConfig === 'on');\n\t\t}\n\n\t\treturn !openInNewWindow;\n\t}\n\n\tprivate async doOpenEmptyWindow(options?: IOpenEmptyWindowOptions): Promise<void> {\n\t\treturn this.doOpen(undefined, {\n\t\t\treuse: options?.forceReuseWindow,\n\t\t\tpayload: this.preservePayload(true /* empty window */, options)\n\t\t});\n\t}\n\n\tprivate async doOpen(workspace: IWorkspace, options?: { reuse?: boolean; payload?: object }): Promise<void> {\n\n\t\t// When we are in a temporary workspace and are asked to open a local folder\n\t\t// we swap that folder into the workspace to avoid a window reload. Access\n\t\t// to local resources is only possible without a window reload because it\n\t\t// needs user activation.\n\t\tif (workspace && isFolderToOpen(workspace) && workspace.folderUri.scheme === Schemas.file && isTemporaryWorkspace(this.contextService.getWorkspace())) {\n\t\t\tthis.withServices(async accessor => {\n\t\t\t\tconst workspaceEditingService: IWorkspaceEditingService = accessor.get(IWorkspaceEditingService);\n\n\t\t\t\tawait workspaceEditingService.updateFolders(0, this.contextService.getWorkspace().folders.length, [{ uri: workspace.folderUri }]);\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We know that `workspaceProvider.open` will trigger a shutdown\n\t\t// with `options.reuse` so we handle this expected shutdown\n\t\tif (options?.reuse) {\n\t\t\tawait this.handleExpectedShutdown(ShutdownReason.LOAD);\n\t\t}\n\n\t\tconst opened = await this.workspaceProvider.open(workspace, options);\n\t\tif (!opened) {\n\t\t\tconst { confirmed } = await this.dialogService.confirm({\n\t\t\t\ttype: Severity.Warning,\n\t\t\t\tmessage: localize('unableToOpenExternal', \"The browser interrupted the opening of a new tab or window. Press 'Open' to open it anyway.\"),\n\t\t\t\tprimaryButton: localize({ key: 'open', comment: ['&& denotes a mnemonic'] }, \"&&Open\")\n\t\t\t});\n\t\t\tif (confirmed) {\n\t\t\t\tawait this.workspaceProvider.open(workspace, options);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync toggleFullScreen(targetWindow: Window): Promise<void> {\n\t\tconst target = this.layoutService.getContainer(targetWindow);\n\n\t\t// Chromium\n\t\tif (targetWindow.document.fullscreen !== undefined) {\n\t\t\tif (!targetWindow.document.fullscreen) {\n\t\t\t\ttry {\n\t\t\t\t\treturn await target.requestFullscreen();\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.warn('toggleFullScreen(): requestFullscreen failed'); // https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\treturn await targetWindow.document.exitFullscreen();\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.warn('toggleFullScreen(): exitFullscreen failed');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Safari and Edge 14 are all using webkit prefix\n\t\tif ((<any>targetWindow.document).webkitIsFullScreen !== undefined) {\n\t\t\ttry {\n\t\t\t\tif (!(<any>targetWindow.document).webkitIsFullScreen) {\n\t\t\t\t\t(<any>target).webkitRequestFullscreen(); // it's async, but doesn't return a real promise.\n\t\t\t\t} else {\n\t\t\t\t\t(<any>targetWindow.document).webkitExitFullscreen(); // it's async, but doesn't return a real promise.\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\tthis.logService.warn('toggleFullScreen(): requestFullscreen/exitFullscreen failed');\n\t\t\t}\n\t\t}\n\t}\n\n\tasync moveTop(targetWindow: Window): Promise<void> {\n\t\t// There seems to be no API to bring a window to front in browsers\n\t}\n\n\tasync getCursorScreenPoint(): Promise<undefined> {\n\t\treturn undefined;\n\t}\n\n\t//#endregion\n\n\t//#region Lifecycle\n\n\tasync restart(): Promise<void> {\n\t\tthis.reload();\n\t}\n\n\tasync reload(): Promise<void> {\n\t\tawait this.handleExpectedShutdown(ShutdownReason.RELOAD);\n\n\t\tmainWindow.location.reload();\n\t}\n\n\tasync close(): Promise<void> {\n\t\tawait this.handleExpectedShutdown(ShutdownReason.CLOSE);\n\n\t\tmainWindow.close();\n\t}\n\n\tasync withExpectedShutdown<T>(expectedShutdownTask: () => Promise<T>): Promise<T> {\n\t\tconst previousShutdownReason = this.shutdownReason;\n\t\ttry {\n\t\t\tthis.shutdownReason = HostShutdownReason.Api;\n\t\t\treturn await expectedShutdownTask();\n\t\t} finally {\n\t\t\tthis.shutdownReason = previousShutdownReason;\n\t\t}\n\t}\n\n\tprivate async handleExpectedShutdown(reason: ShutdownReason): Promise<void> {\n\n\t\t// Update shutdown reason in a way that we do\n\t\t// not show a dialog because this is a expected\n\t\t// shutdown.\n\t\tthis.shutdownReason = HostShutdownReason.Api;\n\n\t\t// Signal shutdown reason to lifecycle\n\t\treturn this.lifecycleService.withExpectedShutdown(reason);\n\t}\n\n\t//#endregion\n\n\t//#region File\n\n\tgetPathForFile(): undefined {\n\t\treturn undefined; // unsupported in browser environments\n\t}\n\n\t//#endregion\n}\n\nregisterSingleton(IHostService, BrowserHostService, InstantiationType.Delayed);\n"],
  "mappings": "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",
  "names": ["HostShutdownReason", "accessor"]
}
