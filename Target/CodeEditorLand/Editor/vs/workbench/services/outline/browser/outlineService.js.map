{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/outline/browser/outlineService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { IDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../../base/common/linkedList.js';\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { IEditorPane } from '../../../common/editor.js';\nimport { IOutline, IOutlineCreator, IOutlineService, OutlineTarget } from './outline.js';\nimport { Event, Emitter } from '../../../../base/common/event.js';\n\nclass OutlineService implements IOutlineService {\n\n\tdeclare _serviceBrand: undefined;\n\n\tprivate readonly _factories = new LinkedList<IOutlineCreator<any, any>>();\n\n\tprivate readonly _onDidChange = new Emitter<void>();\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tcanCreateOutline(pane: IEditorPane): boolean {\n\t\tfor (const factory of this._factories) {\n\t\t\tif (factory.matches(pane)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tasync createOutline(pane: IEditorPane, target: OutlineTarget, token: CancellationToken): Promise<IOutline<any> | undefined> {\n\t\tfor (const factory of this._factories) {\n\t\t\tif (factory.matches(pane)) {\n\t\t\t\treturn await factory.createOutline(pane, target, token);\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tregisterOutlineCreator(creator: IOutlineCreator<any, any>): IDisposable {\n\t\tconst rm = this._factories.push(creator);\n\t\tthis._onDidChange.fire();\n\t\treturn toDisposable(() => {\n\t\t\trm();\n\t\t\tthis._onDidChange.fire();\n\t\t});\n\t}\n}\n\n\nregisterSingleton(IOutlineService, OutlineService, InstantiationType.Delayed);\n"],
  "mappings": ";;AAKA,SAAS,yBAAyB;AAClC,SAAS,aAAa,oBAAoB;AAC1C,SAAS,kBAAkB;AAC3B,SAAS,mBAAmB,yBAAyB;AACrD,SAAS,mBAAmB;AAC5B,SAAS,UAAU,iBAAiB,iBAAiB,qBAAqB;AAC1E,SAAS,OAAO,eAAe;AAE/B,MAAM,eAA0C;AAAA,EAbhD,OAagD;AAAA;AAAA;AAAA,EAI9B,aAAa,IAAI,WAAsC;AAAA,EAEvD,eAAe,IAAI,QAAc;AAAA,EACzC,cAA2B,KAAK,aAAa;AAAA,EAEtD,iBAAiB,MAA4B;AAC5C,eAAW,WAAW,KAAK,YAAY;AACtC,UAAI,QAAQ,QAAQ,IAAI,GAAG;AAC1B,eAAO;AAAA,MACR;AAAA,IACD;AACA,WAAO;AAAA,EACR;AAAA,EAEA,MAAM,cAAc,MAAmB,QAAuB,OAA8D;AAC3H,eAAW,WAAW,KAAK,YAAY;AACtC,UAAI,QAAQ,QAAQ,IAAI,GAAG;AAC1B,eAAO,MAAM,QAAQ,cAAc,MAAM,QAAQ,KAAK;AAAA,MACvD;AAAA,IACD;AACA,WAAO;AAAA,EACR;AAAA,EAEA,uBAAuB,SAAiD;AACvE,UAAM,KAAK,KAAK,WAAW,KAAK,OAAO;AACvC,SAAK,aAAa,KAAK;AACvB,WAAO,aAAa,MAAM;AACzB,SAAG;AACH,WAAK,aAAa,KAAK;AAAA,IACxB,CAAC;AAAA,EACF;AACD;AAGA,kBAAkB,iBAAiB,gBAAgB,kBAAkB,OAAO;",
  "names": []
}
