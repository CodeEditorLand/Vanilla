{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/outline/browser/outline.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IListVirtualDelegate } from '../../../../base/browser/ui/list/list.js';\nimport { IDataSource, ITreeRenderer } from '../../../../base/browser/ui/tree/tree.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { FuzzyScore } from '../../../../base/common/filters.js';\nimport { IDisposable } from '../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { IEditorOptions } from '../../../../platform/editor/common/editor.js';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IWorkbenchDataTreeOptions } from '../../../../platform/list/browser/listService.js';\nimport { IEditorPane } from '../../../common/editor.js';\n\nexport const IOutlineService = createDecorator<IOutlineService>('IOutlineService');\n\nexport const enum OutlineTarget {\n\tOutlinePane = 1,\n\tBreadcrumbs = 2,\n\tQuickPick = 4\n}\n\nexport interface IOutlineService {\n\t_serviceBrand: undefined;\n\tonDidChange: Event<void>;\n\tcanCreateOutline(editor: IEditorPane): boolean;\n\tcreateOutline(editor: IEditorPane, target: OutlineTarget, token: CancellationToken): Promise<IOutline<any> | undefined>;\n\tregisterOutlineCreator(creator: IOutlineCreator<any, any>): IDisposable;\n}\n\nexport interface IOutlineCreator<P extends IEditorPane, E> {\n\tmatches(candidate: IEditorPane): candidate is P;\n\tcreateOutline(editor: P, target: OutlineTarget, token: CancellationToken): Promise<IOutline<E> | undefined>;\n}\n\nexport interface IBreadcrumbsDataSource<E> {\n\tgetBreadcrumbElements(): readonly E[];\n}\n\nexport interface IOutlineComparator<E> {\n\tcompareByPosition(a: E, b: E): number;\n\tcompareByType(a: E, b: E): number;\n\tcompareByName(a: E, b: E): number;\n}\n\nexport interface IQuickPickOutlineElement<E> {\n\treadonly element: E;\n\treadonly label: string;\n\treadonly iconClasses?: string[];\n\treadonly ariaLabel?: string;\n\treadonly description?: string;\n}\n\nexport interface IQuickPickDataSource<E> {\n\tgetQuickPickElements(): IQuickPickOutlineElement<E>[];\n}\n\nexport interface IOutlineListConfig<E> {\n\treadonly breadcrumbsDataSource: IBreadcrumbsDataSource<E>;\n\treadonly treeDataSource: IDataSource<IOutline<E>, E>;\n\treadonly delegate: IListVirtualDelegate<E>;\n\treadonly renderers: ITreeRenderer<E, FuzzyScore, any>[];\n\treadonly comparator: IOutlineComparator<E>;\n\treadonly options: IWorkbenchDataTreeOptions<E, FuzzyScore>;\n\treadonly quickPickDataSource: IQuickPickDataSource<E>;\n}\n\nexport interface OutlineChangeEvent {\n\taffectOnlyActiveElement?: true;\n}\n\nexport interface IOutline<E> {\n\n\treadonly uri: URI | undefined;\n\n\treadonly config: IOutlineListConfig<E>;\n\treadonly outlineKind: string;\n\n\treadonly isEmpty: boolean;\n\treadonly activeElement: E | undefined;\n\treadonly onDidChange: Event<OutlineChangeEvent>;\n\n\treveal(entry: E, options: IEditorOptions, sideBySide: boolean, select: boolean): Promise<void> | void;\n\tpreview(entry: E): IDisposable;\n\tcaptureViewState(): IDisposable;\n\tdispose(): void;\n}\n\n\nexport const enum OutlineConfigKeys {\n\t'icons' = 'outline.icons',\n\t'collapseItems' = 'outline.collapseItems',\n\t'problemsEnabled' = 'outline.problems.enabled',\n\t'problemsColors' = 'outline.problems.colors',\n\t'problemsBadges' = 'outline.problems.badges'\n}\n\nexport const enum OutlineConfigCollapseItemsValues {\n\tCollapsed = 'alwaysCollapse',\n\tExpanded = 'alwaysExpand'\n}\n"],
  "mappings": "AAKA,SAAS,4BAA4B;AACrC,SAAS,aAAa,qBAAqB;AAC3C,SAAS,yBAAyB;AAClC,SAAS,aAAa;AACtB,SAAS,kBAAkB;AAC3B,SAAS,mBAAmB;AAC5B,SAAS,WAAW;AACpB,SAAS,sBAAsB;AAC/B,SAAS,uBAAuB;AAChC,SAAS,iCAAiC;AAC1C,SAAS,mBAAmB;AAErB,MAAM,kBAAkB,gBAAiC,iBAAiB;AAE1E,IAAW,gBAAX,kBAAWA,mBAAX;AACN,EAAAA,8BAAA,iBAAc,KAAd;AACA,EAAAA,8BAAA,iBAAc,KAAd;AACA,EAAAA,8BAAA,eAAY,KAAZ;AAHiB,SAAAA;AAAA,GAAA;AAyEX,IAAW,oBAAX,kBAAWC,uBAAX;AACN,EAAAA,mBAAA,WAAU;AACV,EAAAA,mBAAA,mBAAkB;AAClB,EAAAA,mBAAA,qBAAoB;AACpB,EAAAA,mBAAA,oBAAmB;AACnB,EAAAA,mBAAA,oBAAmB;AALF,SAAAA;AAAA,GAAA;AAQX,IAAW,mCAAX,kBAAWC,sCAAX;AACN,EAAAA,kCAAA,eAAY;AACZ,EAAAA,kCAAA,cAAW;AAFM,SAAAA;AAAA,GAAA;",
  "names": ["OutlineTarget", "OutlineConfigKeys", "OutlineConfigCollapseItemsValues"]
}
