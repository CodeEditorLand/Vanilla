{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/decorations/browser/decorationsService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tasCSSPropertyValue,\n\tcreateCSSRule,\n\tcreateStyleSheet,\n\tremoveCSSRulesContainingSelector,\n} from \"../../../../base/browser/dom.js\";\nimport { asArray, distinct } from \"../../../../base/common/arrays.js\";\nimport { isThenable } from \"../../../../base/common/async.js\";\nimport { CancellationTokenSource } from \"../../../../base/common/cancellation.js\";\nimport { isCancellationError } from \"../../../../base/common/errors.js\";\nimport {\n\tDebounceEmitter,\n\tEmitter,\n\ttype Event,\n} from \"../../../../base/common/event.js\";\nimport { hash } from \"../../../../base/common/hash.js\";\nimport {\n\tDisposableStore,\n\ttype IDisposable,\n\ttoDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { LinkedList } from \"../../../../base/common/linkedList.js\";\nimport { isFalsyOrWhitespace } from \"../../../../base/common/strings.js\";\nimport { TernarySearchTree } from \"../../../../base/common/ternarySearchTree.js\";\nimport { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport { localize } from \"../../../../nls.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport {\n\ttype ColorIdentifier,\n\tasCssVariable,\n} from \"../../../../platform/theme/common/colorRegistry.js\";\nimport { getIconRegistry } from \"../../../../platform/theme/common/iconRegistry.js\";\nimport { IThemeService } from \"../../../../platform/theme/common/themeService.js\";\nimport { IUriIdentityService } from \"../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport {\n\ttype IDecoration,\n\ttype IDecorationData,\n\ttype IDecorationsProvider,\n\tIDecorationsService,\n\ttype IResourceDecorationChangeEvent,\n} from \"../common/decorations.js\";\n\nclass DecorationRule {\n\tstatic keyOf(data: IDecorationData | IDecorationData[]): string {\n\t\tif (Array.isArray(data)) {\n\t\t\treturn data.map(DecorationRule.keyOf).join(\",\");\n\t\t} else {\n\t\t\tconst { color, letter } = data;\n\t\t\tif (ThemeIcon.isThemeIcon(letter)) {\n\t\t\t\treturn `${color}+${letter.id}`;\n\t\t\t} else {\n\t\t\t\treturn `${color}/${letter}`;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static readonly _classNamesPrefix = \"monaco-decoration\";\n\n\treadonly data: IDecorationData | IDecorationData[];\n\treadonly itemColorClassName: string;\n\treadonly itemBadgeClassName: string;\n\treadonly iconBadgeClassName: string;\n\treadonly bubbleBadgeClassName: string;\n\n\tprivate _refCounter = 0;\n\n\tconstructor(\n\t\treadonly themeService: IThemeService,\n\t\tdata: IDecorationData | IDecorationData[],\n\t\tkey: string,\n\t) {\n\t\tthis.data = data;\n\t\tconst suffix = hash(key).toString(36);\n\t\tthis.itemColorClassName = `${DecorationRule._classNamesPrefix}-itemColor-${suffix}`;\n\t\tthis.itemBadgeClassName = `${DecorationRule._classNamesPrefix}-itemBadge-${suffix}`;\n\t\tthis.bubbleBadgeClassName = `${DecorationRule._classNamesPrefix}-bubbleBadge-${suffix}`;\n\t\tthis.iconBadgeClassName = `${DecorationRule._classNamesPrefix}-iconBadge-${suffix}`;\n\t}\n\n\tacquire(): void {\n\t\tthis._refCounter += 1;\n\t}\n\n\trelease(): boolean {\n\t\treturn --this._refCounter === 0;\n\t}\n\n\tappendCSSRules(element: HTMLStyleElement): void {\n\t\tif (Array.isArray(this.data)) {\n\t\t\tthis._appendForMany(this.data, element);\n\t\t} else {\n\t\t\tthis._appendForOne(this.data, element);\n\t\t}\n\t}\n\n\tprivate _appendForOne(\n\t\tdata: IDecorationData,\n\t\telement: HTMLStyleElement,\n\t): void {\n\t\tconst { color, letter } = data;\n\t\t// label\n\t\tcreateCSSRule(\n\t\t\t`.${this.itemColorClassName}`,\n\t\t\t`color: ${getColor(color)};`,\n\t\t\telement,\n\t\t);\n\t\tif (ThemeIcon.isThemeIcon(letter)) {\n\t\t\tthis._createIconCSSRule(letter, color, element);\n\t\t} else if (letter) {\n\t\t\tcreateCSSRule(\n\t\t\t\t`.${this.itemBadgeClassName}::after`,\n\t\t\t\t`content: \"${letter}\"; color: ${getColor(color)};`,\n\t\t\t\telement,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _appendForMany(\n\t\tdata: IDecorationData[],\n\t\telement: HTMLStyleElement,\n\t): void {\n\t\t// label\n\t\tconst { color } = data.find((d) => !!d.color) ?? data[0];\n\t\tcreateCSSRule(\n\t\t\t`.${this.itemColorClassName}`,\n\t\t\t`color: ${getColor(color)};`,\n\t\t\telement,\n\t\t);\n\n\t\t// badge or icon\n\t\tconst letters: string[] = [];\n\t\tlet icon: ThemeIcon | undefined;\n\n\t\tfor (const d of data) {\n\t\t\tif (ThemeIcon.isThemeIcon(d.letter)) {\n\t\t\t\ticon = d.letter;\n\t\t\t\tbreak;\n\t\t\t} else if (d.letter) {\n\t\t\t\tletters.push(d.letter);\n\t\t\t}\n\t\t}\n\n\t\tif (icon) {\n\t\t\tthis._createIconCSSRule(icon, color, element);\n\t\t} else {\n\t\t\tif (letters.length) {\n\t\t\t\tcreateCSSRule(\n\t\t\t\t\t`.${this.itemBadgeClassName}::after`,\n\t\t\t\t\t`content: \"${letters.join(\", \")}\"; color: ${getColor(color)};`,\n\t\t\t\t\telement,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// bubble badge\n\t\t\t// TODO @misolori update bubble badge to adopt letter: ThemeIcon instead of unicode\n\t\t\tcreateCSSRule(\n\t\t\t\t`.${this.bubbleBadgeClassName}::after`,\n\t\t\t\t`content: \"\\uea71\"; color: ${getColor(color)}; font-family: codicon; font-size: 14px; margin-right: 14px; opacity: 0.4;`,\n\t\t\t\telement,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _createIconCSSRule(\n\t\ticon: ThemeIcon,\n\t\tcolor: string | undefined,\n\t\telement: HTMLStyleElement,\n\t) {\n\t\tconst modifier = ThemeIcon.getModifier(icon);\n\t\tif (modifier) {\n\t\t\ticon = ThemeIcon.modify(icon, undefined);\n\t\t}\n\t\tconst iconContribution = getIconRegistry().getIcon(icon.id);\n\t\tif (!iconContribution) {\n\t\t\treturn;\n\t\t}\n\t\tconst definition = this.themeService\n\t\t\t.getProductIconTheme()\n\t\t\t.getIcon(iconContribution);\n\t\tif (!definition) {\n\t\t\treturn;\n\t\t}\n\t\tcreateCSSRule(\n\t\t\t`.${this.iconBadgeClassName}::after`,\n\t\t\t`content: '${definition.fontCharacter}';\n\t\t\tcolor: ${icon.color ? getColor(icon.color.id) : getColor(color)};\n\t\t\tfont-family: ${asCSSPropertyValue(definition.font?.id ?? \"codicon\")};\n\t\t\tfont-size: 16px;\n\t\t\tmargin-right: 14px;\n\t\t\tfont-weight: normal;\n\t\t\t${modifier === \"spin\" ? \"animation: codicon-spin 1.5s steps(30) infinite\" : \"\"};\n\t\t\t`,\n\t\t\telement,\n\t\t);\n\t}\n\n\tremoveCSSRules(element: HTMLStyleElement): void {\n\t\tremoveCSSRulesContainingSelector(this.itemColorClassName, element);\n\t\tremoveCSSRulesContainingSelector(this.itemBadgeClassName, element);\n\t\tremoveCSSRulesContainingSelector(this.bubbleBadgeClassName, element);\n\t\tremoveCSSRulesContainingSelector(this.iconBadgeClassName, element);\n\t}\n}\n\nclass DecorationStyles {\n\tprivate readonly _dispoables = new DisposableStore();\n\tprivate readonly _styleElement = createStyleSheet(\n\t\tundefined,\n\t\tundefined,\n\t\tthis._dispoables,\n\t);\n\tprivate readonly _decorationRules = new Map<string, DecorationRule>();\n\n\tconstructor(private readonly _themeService: IThemeService) {}\n\n\tdispose(): void {\n\t\tthis._dispoables.dispose();\n\t}\n\n\tasDecoration(data: IDecorationData[], onlyChildren: boolean): IDecoration {\n\t\t// sort by weight\n\t\tdata.sort((a, b) => (b.weight || 0) - (a.weight || 0));\n\n\t\tconst key = DecorationRule.keyOf(data);\n\t\tlet rule = this._decorationRules.get(key);\n\n\t\tif (!rule) {\n\t\t\t// new css rule\n\t\t\trule = new DecorationRule(this._themeService, data, key);\n\t\t\tthis._decorationRules.set(key, rule);\n\t\t\trule.appendCSSRules(this._styleElement);\n\t\t}\n\n\t\trule.acquire();\n\n\t\tconst labelClassName = rule.itemColorClassName;\n\t\tlet badgeClassName = rule.itemBadgeClassName;\n\t\tconst iconClassName = rule.iconBadgeClassName;\n\t\tlet tooltip = distinct(\n\t\t\tdata\n\t\t\t\t.filter((d) => !isFalsyOrWhitespace(d.tooltip))\n\t\t\t\t.map((d) => d.tooltip),\n\t\t).join(\" \u2022 \");\n\t\tconst strikethrough = data.some((d) => d.strikethrough);\n\n\t\tif (onlyChildren) {\n\t\t\t// show items from its children only\n\t\t\tbadgeClassName = rule.bubbleBadgeClassName;\n\t\t\ttooltip = localize(\"bubbleTitle\", \"Contains emphasized items\");\n\t\t}\n\n\t\treturn {\n\t\t\tlabelClassName,\n\t\t\tbadgeClassName,\n\t\t\ticonClassName,\n\t\t\tstrikethrough,\n\t\t\ttooltip,\n\t\t\tdispose: () => {\n\t\t\t\tif (rule?.release()) {\n\t\t\t\t\tthis._decorationRules.delete(key);\n\t\t\t\t\trule.removeCSSRules(this._styleElement);\n\t\t\t\t\trule = undefined;\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t}\n}\n\nclass FileDecorationChangeEvent implements IResourceDecorationChangeEvent {\n\tprivate readonly _data = TernarySearchTree.forUris<true>((_uri) => true); // events ignore all path casings\n\n\tconstructor(all: URI | URI[]) {\n\t\tthis._data.fill(true, asArray(all));\n\t}\n\n\taffectsResource(uri: URI): boolean {\n\t\treturn this._data.hasElementOrSubtree(uri);\n\t}\n}\n\nclass DecorationDataRequest {\n\tconstructor(\n\t\treadonly source: CancellationTokenSource,\n\t\treadonly thenable: Promise<void>,\n\t) {}\n}\n\nfunction getColor(color: ColorIdentifier | undefined) {\n\treturn color ? asCssVariable(color) : \"inherit\";\n}\n\ntype DecorationEntry = Map<\n\tIDecorationsProvider,\n\tDecorationDataRequest | IDecorationData | null\n>;\n\nexport class DecorationsService implements IDecorationsService {\n\tdeclare _serviceBrand: undefined;\n\n\tprivate readonly _store = new DisposableStore();\n\tprivate readonly _onDidChangeDecorationsDelayed = this._store.add(\n\t\tnew DebounceEmitter<URI | URI[]>({ merge: (all) => all.flat() }),\n\t);\n\tprivate readonly _onDidChangeDecorations = this._store.add(\n\t\tnew Emitter<IResourceDecorationChangeEvent>(),\n\t);\n\n\tonDidChangeDecorations: Event<IResourceDecorationChangeEvent> =\n\t\tthis._onDidChangeDecorations.event;\n\n\tprivate readonly _provider = new LinkedList<IDecorationsProvider>();\n\tprivate readonly _decorationStyles: DecorationStyles;\n\tprivate readonly _data: TernarySearchTree<URI, DecorationEntry>;\n\n\tconstructor(\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t\t@IThemeService themeService: IThemeService,\n\t) {\n\t\tthis._decorationStyles = new DecorationStyles(themeService);\n\t\tthis._data = TernarySearchTree.forUris((key) =>\n\t\t\turiIdentityService.extUri.ignorePathCasing(key),\n\t\t);\n\n\t\tthis._store.add(\n\t\t\tthis._onDidChangeDecorationsDelayed.event((event) => {\n\t\t\t\tthis._onDidChangeDecorations.fire(\n\t\t\t\t\tnew FileDecorationChangeEvent(event),\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\t}\n\n\tdispose(): void {\n\t\tthis._store.dispose();\n\t\tthis._data.clear();\n\t}\n\n\tregisterDecorationsProvider(provider: IDecorationsProvider): IDisposable {\n\t\tconst rm = this._provider.unshift(provider);\n\n\t\tthis._onDidChangeDecorations.fire({\n\t\t\t// everything might have changed\n\t\t\taffectsResource() {\n\t\t\t\treturn true;\n\t\t\t},\n\t\t});\n\n\t\t// remove everything what came from this provider\n\t\tconst removeAll = () => {\n\t\t\tconst uris: URI[] = [];\n\t\t\tfor (const [uri, map] of this._data) {\n\t\t\t\tif (map.delete(provider)) {\n\t\t\t\t\turis.push(uri);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (uris.length > 0) {\n\t\t\t\tthis._onDidChangeDecorationsDelayed.fire(uris);\n\t\t\t}\n\t\t};\n\n\t\tconst listener = provider.onDidChange((uris) => {\n\t\t\tif (uris) {\n\t\t\t\t// selective changes -> drop for resource, fetch again, send event\n\t\t\t\tfor (const uri of uris) {\n\t\t\t\t\tconst map = this._ensureEntry(uri);\n\t\t\t\t\tthis._fetchData(map, uri, provider);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// flush event -> drop all data, can affect everything\n\t\t\t\tremoveAll();\n\t\t\t}\n\t\t});\n\n\t\treturn toDisposable(() => {\n\t\t\trm();\n\t\t\tlistener.dispose();\n\t\t\tremoveAll();\n\t\t});\n\t}\n\n\tprivate _ensureEntry(uri: URI): DecorationEntry {\n\t\tlet map = this._data.get(uri);\n\t\tif (!map) {\n\t\t\t// nothing known about this uri\n\t\t\tmap = new Map();\n\t\t\tthis._data.set(uri, map);\n\t\t}\n\t\treturn map;\n\t}\n\n\tgetDecoration(uri: URI, includeChildren: boolean): IDecoration | undefined {\n\t\tconst all: IDecorationData[] = [];\n\t\tlet containsChildren = false;\n\n\t\tconst map = this._ensureEntry(uri);\n\n\t\tfor (const provider of this._provider) {\n\t\t\tlet data = map.get(provider);\n\t\t\tif (data === undefined) {\n\t\t\t\t// sets data if fetch is sync\n\t\t\t\tdata = this._fetchData(map, uri, provider);\n\t\t\t}\n\n\t\t\tif (data && !(data instanceof DecorationDataRequest)) {\n\t\t\t\t// having data\n\t\t\t\tall.push(data);\n\t\t\t}\n\t\t}\n\n\t\tif (includeChildren) {\n\t\t\t// (resolved) children\n\t\t\tconst iter = this._data.findSuperstr(uri);\n\t\t\tif (iter) {\n\t\t\t\tfor (const tuple of iter) {\n\t\t\t\t\tfor (const data of tuple[1].values()) {\n\t\t\t\t\t\tif (data && !(data instanceof DecorationDataRequest)) {\n\t\t\t\t\t\t\tif (data.bubble) {\n\t\t\t\t\t\t\t\tall.push(data);\n\t\t\t\t\t\t\t\tcontainsChildren = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn all.length === 0\n\t\t\t? undefined\n\t\t\t: this._decorationStyles.asDecoration(all, containsChildren);\n\t}\n\n\tprivate _fetchData(\n\t\tmap: DecorationEntry,\n\t\turi: URI,\n\t\tprovider: IDecorationsProvider,\n\t): IDecorationData | null {\n\t\t// check for pending request and cancel it\n\t\tconst pendingRequest = map.get(provider);\n\t\tif (pendingRequest instanceof DecorationDataRequest) {\n\t\t\tpendingRequest.source.cancel();\n\t\t\tmap.delete(provider);\n\t\t}\n\n\t\tconst cts = new CancellationTokenSource();\n\t\tconst dataOrThenable = provider.provideDecorations(uri, cts.token);\n\t\tif (\n\t\t\tisThenable<\n\t\t\t\t| IDecorationData\n\t\t\t\t| Promise<IDecorationData | undefined>\n\t\t\t\t| undefined\n\t\t\t>(dataOrThenable)\n\t\t) {\n\t\t\t// async -> we have a result soon\n\t\t\tconst request = new DecorationDataRequest(\n\t\t\t\tcts,\n\t\t\t\tPromise.resolve(dataOrThenable)\n\t\t\t\t\t.then((data) => {\n\t\t\t\t\t\tif (map.get(provider) === request) {\n\t\t\t\t\t\t\tthis._keepItem(map, provider, uri, data);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!isCancellationError(err) &&\n\t\t\t\t\t\t\tmap.get(provider) === request\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tmap.delete(provider);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.finally(() => {\n\t\t\t\t\t\tcts.dispose();\n\t\t\t\t\t}),\n\t\t\t);\n\n\t\t\tmap.set(provider, request);\n\t\t\treturn null;\n\t\t} else {\n\t\t\t// sync -> we have a result now\n\t\t\tcts.dispose();\n\t\t\treturn this._keepItem(map, provider, uri, dataOrThenable);\n\t\t}\n\t}\n\n\tprivate _keepItem(\n\t\tmap: DecorationEntry,\n\t\tprovider: IDecorationsProvider,\n\t\turi: URI,\n\t\tdata: IDecorationData | undefined,\n\t): IDecorationData | null {\n\t\tconst deco = data ? data : null;\n\t\tconst old = map.get(provider);\n\t\tmap.set(provider, deco);\n\t\tif (deco || old) {\n\t\t\t// only fire event when something changed\n\t\t\tthis._onDidChangeDecorationsDelayed.fire(uri);\n\t\t}\n\t\treturn deco;\n\t}\n}\n\nregisterSingleton(\n\tIDecorationsService,\n\tDecorationsService,\n\tInstantiationType.Delayed,\n);\n"],
  "mappings": "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",
  "names": []
}
