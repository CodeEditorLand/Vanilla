{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/extensionManagement/test/browser/extensionEnablementService.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport assert from 'assert';\nimport * as sinon from 'sinon';\nimport { IExtensionManagementService, DidUninstallExtensionEvent, ILocalExtension, InstallExtensionEvent, InstallExtensionResult, UninstallExtensionEvent, DidUpdateExtensionMetadata, InstallOperation } from '../../../../../platform/extensionManagement/common/extensionManagement.js';\nimport { IWorkbenchExtensionEnablementService, EnablementState, IExtensionManagementServerService, IExtensionManagementServer, IWorkbenchExtensionManagementService, ExtensionInstallLocation, IProfileAwareExtensionManagementService, DidChangeProfileEvent } from '../../common/extensionManagement.js';\nimport { ExtensionEnablementService } from '../../browser/extensionEnablementService.js';\nimport { TestInstantiationService } from '../../../../../platform/instantiation/test/common/instantiationServiceMock.js';\nimport { Emitter } from '../../../../../base/common/event.js';\nimport { IWorkspace, IWorkspaceContextService, WorkbenchState } from '../../../../../platform/workspace/common/workspace.js';\nimport { IWorkbenchEnvironmentService } from '../../../environment/common/environmentService.js';\nimport { IStorageService, InMemoryStorageService } from '../../../../../platform/storage/common/storage.js';\nimport { IExtensionContributions, ExtensionType, IExtension, IExtensionManifest } from '../../../../../platform/extensions/common/extensions.js';\nimport { isUndefinedOrNull } from '../../../../../base/common/types.js';\nimport { areSameExtensions } from '../../../../../platform/extensionManagement/common/extensionManagementUtil.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { Schemas } from '../../../../../base/common/network.js';\nimport { TestConfigurationService } from '../../../../../platform/configuration/test/common/testConfigurationService.js';\nimport { TestLifecycleService } from '../../../../test/browser/workbenchTestServices.js';\nimport { GlobalExtensionEnablementService } from '../../../../../platform/extensionManagement/common/extensionEnablementService.js';\nimport { IUserDataSyncAccountService, UserDataSyncAccountService } from '../../../../../platform/userDataSync/common/userDataSyncAccount.js';\nimport { IUserDataSyncEnablementService } from '../../../../../platform/userDataSync/common/userDataSync.js';\nimport { ILifecycleService } from '../../../lifecycle/common/lifecycle.js';\nimport { INotificationService } from '../../../../../platform/notification/common/notification.js';\nimport { TestNotificationService } from '../../../../../platform/notification/test/common/testNotificationService.js';\nimport { IHostService } from '../../../host/browser/host.js';\nimport { mock } from '../../../../../base/test/common/mock.js';\nimport { IExtensionBisectService } from '../../browser/extensionBisect.js';\nimport { IWorkspaceTrustManagementService, IWorkspaceTrustRequestService, WorkspaceTrustRequestOptions } from '../../../../../platform/workspace/common/workspaceTrust.js';\nimport { ExtensionManifestPropertiesService, IExtensionManifestPropertiesService } from '../../../extensions/common/extensionManifestPropertiesService.js';\nimport { TestContextService, TestProductService, TestWorkspaceTrustEnablementService, TestWorkspaceTrustManagementService } from '../../../../test/common/workbenchTestServices.js';\nimport { TestWorkspace } from '../../../../../platform/workspace/test/common/testWorkspace.js';\nimport { ExtensionManagementService } from '../../common/extensionManagementService.js';\nimport { ILogService, NullLogService } from '../../../../../platform/log/common/log.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { IFileService } from '../../../../../platform/files/common/files.js';\nimport { FileService } from '../../../../../platform/files/common/fileService.js';\nimport { IProductService } from '../../../../../platform/product/common/productService.js';\n\nfunction createStorageService(instantiationService: TestInstantiationService, disposableStore: DisposableStore): IStorageService {\n\tlet service = instantiationService.get(IStorageService);\n\tif (!service) {\n\t\tlet workspaceContextService = instantiationService.get(IWorkspaceContextService);\n\t\tif (!workspaceContextService) {\n\t\t\tworkspaceContextService = instantiationService.stub(IWorkspaceContextService, <IWorkspaceContextService>{\n\t\t\t\tgetWorkbenchState: () => WorkbenchState.FOLDER,\n\t\t\t\tgetWorkspace: () => TestWorkspace as IWorkspace\n\t\t\t});\n\t\t}\n\t\tservice = instantiationService.stub(IStorageService, disposableStore.add(new InMemoryStorageService()));\n\t}\n\treturn service;\n}\n\nexport class TestExtensionEnablementService extends ExtensionEnablementService {\n\tconstructor(instantiationService: TestInstantiationService) {\n\t\tconst disposables = new DisposableStore();\n\t\tconst storageService = createStorageService(instantiationService, disposables);\n\t\tconst extensionManagementServerService = instantiationService.get(IExtensionManagementServerService) ||\n\t\t\tinstantiationService.stub(IExtensionManagementServerService, anExtensionManagementServerService({\n\t\t\t\tid: 'local',\n\t\t\t\tlabel: 'local',\n\t\t\t\textensionManagementService: <IProfileAwareExtensionManagementService>{\n\t\t\t\t\tonInstallExtension: disposables.add(new Emitter<InstallExtensionEvent>()).event,\n\t\t\t\t\tonDidInstallExtensions: disposables.add(new Emitter<readonly InstallExtensionResult[]>()).event,\n\t\t\t\t\tonUninstallExtension: disposables.add(new Emitter<UninstallExtensionEvent>()).event,\n\t\t\t\t\tonDidUninstallExtension: disposables.add(new Emitter<DidUninstallExtensionEvent>()).event,\n\t\t\t\t\tonDidChangeProfile: disposables.add(new Emitter<DidChangeProfileEvent>()).event,\n\t\t\t\t\tonDidUpdateExtensionMetadata: disposables.add(new Emitter<DidUpdateExtensionMetadata>()).event,\n\t\t\t\t},\n\t\t\t}, null, null));\n\t\tconst extensionManagementService = disposables.add(instantiationService.createInstance(ExtensionManagementService));\n\t\tconst workbenchExtensionManagementService = instantiationService.get(IWorkbenchExtensionManagementService) || instantiationService.stub(IWorkbenchExtensionManagementService, extensionManagementService);\n\t\tconst workspaceTrustManagementService = instantiationService.get(IWorkspaceTrustManagementService) || instantiationService.stub(IWorkspaceTrustManagementService, disposables.add(new TestWorkspaceTrustManagementService()));\n\t\tsuper(\n\t\t\tstorageService,\n\t\t\tdisposables.add(new GlobalExtensionEnablementService(storageService, extensionManagementService)),\n\t\t\tinstantiationService.get(IWorkspaceContextService) || new TestContextService(),\n\t\t\tinstantiationService.get(IWorkbenchEnvironmentService) || instantiationService.stub(IWorkbenchEnvironmentService, {}),\n\t\t\tworkbenchExtensionManagementService,\n\t\t\tinstantiationService.get(IConfigurationService),\n\t\t\textensionManagementServerService,\n\t\t\tinstantiationService.get(IUserDataSyncEnablementService) || instantiationService.stub(IUserDataSyncEnablementService, <Partial<IUserDataSyncEnablementService>>{ isEnabled() { return false; } }),\n\t\t\tinstantiationService.get(IUserDataSyncAccountService) || instantiationService.stub(IUserDataSyncAccountService, UserDataSyncAccountService),\n\t\t\tinstantiationService.get(ILifecycleService) || instantiationService.stub(ILifecycleService, disposables.add(new TestLifecycleService())),\n\t\t\tinstantiationService.get(INotificationService) || instantiationService.stub(INotificationService, new TestNotificationService()),\n\t\t\tinstantiationService.get(IHostService),\n\t\t\tnew class extends mock<IExtensionBisectService>() { override isDisabledByBisect() { return false; } },\n\t\t\tworkspaceTrustManagementService,\n\t\t\tnew class extends mock<IWorkspaceTrustRequestService>() { override requestWorkspaceTrust(options?: WorkspaceTrustRequestOptions): Promise<boolean> { return Promise.resolve(true); } },\n\t\t\tinstantiationService.get(IExtensionManifestPropertiesService) || instantiationService.stub(IExtensionManifestPropertiesService, disposables.add(new ExtensionManifestPropertiesService(TestProductService, new TestConfigurationService(), new TestWorkspaceTrustEnablementService(), new NullLogService()))),\n\t\t\tinstantiationService\n\t\t);\n\t\tthis._register(disposables);\n\t}\n\n\tpublic async waitUntilInitialized(): Promise<void> {\n\t\tawait this.extensionsManager.whenInitialized();\n\t}\n\n\tpublic reset(): void {\n\t\tlet extensions = this.globalExtensionEnablementService.getDisabledExtensions();\n\t\tfor (const e of this._getWorkspaceDisabledExtensions()) {\n\t\t\tif (!extensions.some(r => areSameExtensions(r, e))) {\n\t\t\t\textensions.push(e);\n\t\t\t}\n\t\t}\n\t\tconst workspaceEnabledExtensions = this._getWorkspaceEnabledExtensions();\n\t\tif (workspaceEnabledExtensions.length) {\n\t\t\textensions = extensions.filter(r => !workspaceEnabledExtensions.some(e => areSameExtensions(e, r)));\n\t\t}\n\t\textensions.forEach(d => this.setEnablement([aLocalExtension(d.id)], EnablementState.EnabledGlobally));\n\t}\n}\n\nsuite('ExtensionEnablementService Test', () => {\n\n\tconst disposableStore = ensureNoDisposablesAreLeakedInTestSuite();\n\n\tlet instantiationService: TestInstantiationService;\n\tlet testObject: IWorkbenchExtensionEnablementService;\n\n\tconst didInstallEvent = new Emitter<readonly InstallExtensionResult[]>();\n\tconst didUninstallEvent = new Emitter<DidUninstallExtensionEvent>();\n\tconst didChangeProfileExtensionsEvent = new Emitter<DidChangeProfileEvent>();\n\tconst installed: ILocalExtension[] = [];\n\n\tsetup(() => {\n\t\tinstalled.splice(0, installed.length);\n\t\tinstantiationService = disposableStore.add(new TestInstantiationService());\n\t\tinstantiationService.stub(IFileService, disposableStore.add(new FileService(new NullLogService())));\n\t\tinstantiationService.stub(IProductService, TestProductService);\n\t\tinstantiationService.stub(IConfigurationService, new TestConfigurationService());\n\t\tinstantiationService.stub(IWorkspaceContextService, new TestContextService());\n\t\tinstantiationService.stub(IExtensionManagementServerService, anExtensionManagementServerService({\n\t\t\tid: 'local',\n\t\t\tlabel: 'local',\n\t\t\textensionManagementService: <IProfileAwareExtensionManagementService>{\n\t\t\t\tonDidInstallExtensions: didInstallEvent.event,\n\t\t\t\tonDidUninstallExtension: didUninstallEvent.event,\n\t\t\t\tonDidChangeProfile: didChangeProfileExtensionsEvent.event,\n\t\t\t\tgetInstalled: () => Promise.resolve(installed)\n\t\t\t},\n\t\t}, null, null));\n\t\tinstantiationService.stub(ILogService, NullLogService);\n\t\tinstantiationService.stub(IWorkbenchExtensionManagementService, disposableStore.add(instantiationService.createInstance(ExtensionManagementService)));\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t});\n\n\ttest('test disable an extension globally', async () => {\n\t\tconst extension = aLocalExtension('pub.a');\n\t\tawait testObject.setEnablement([extension], EnablementState.DisabledGlobally);\n\t\tassert.ok(!testObject.isEnabled(extension));\n\t\tassert.strictEqual(testObject.getEnablementState(extension), EnablementState.DisabledGlobally);\n\t});\n\n\ttest('test disable an extension globally should return truthy promise', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledGlobally)\n\t\t\t.then(value => assert.ok(value));\n\t});\n\n\ttest('test disable an extension globally triggers the change event', async () => {\n\t\tconst target = sinon.spy();\n\t\tdisposableStore.add(testObject.onEnablementChanged(target));\n\t\tawait testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledGlobally);\n\t\tassert.ok(target.calledOnce);\n\t\tassert.deepStrictEqual((<IExtension>target.args[0][0][0]).identifier, { id: 'pub.a' });\n\t});\n\n\ttest('test disable an extension globally again should return a falsy promise', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledGlobally)\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledGlobally))\n\t\t\t.then(value => assert.ok(!value[0]));\n\t});\n\n\ttest('test state of globally disabled extension', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledGlobally)\n\t\t\t.then(() => assert.strictEqual(testObject.getEnablementState(aLocalExtension('pub.a')), EnablementState.DisabledGlobally));\n\t});\n\n\ttest('test state of globally enabled extension', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledGlobally)\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.EnabledGlobally))\n\t\t\t.then(() => assert.strictEqual(testObject.getEnablementState(aLocalExtension('pub.a')), EnablementState.EnabledGlobally));\n\t});\n\n\ttest('test disable an extension for workspace', async () => {\n\t\tconst extension = aLocalExtension('pub.a');\n\t\tawait testObject.setEnablement([extension], EnablementState.DisabledWorkspace);\n\t\tassert.ok(!testObject.isEnabled(extension));\n\t\tassert.strictEqual(testObject.getEnablementState(extension), EnablementState.DisabledWorkspace);\n\t});\n\n\ttest('test disable an extension for workspace returns a truthy promise', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace)\n\t\t\t.then(value => assert.ok(value));\n\t});\n\n\ttest('test disable an extension for workspace again should return a falsy promise', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace)\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace))\n\t\t\t.then(value => assert.ok(!value[0]));\n\t});\n\n\ttest('test state of workspace disabled extension', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace)\n\t\t\t.then(() => assert.strictEqual(testObject.getEnablementState(aLocalExtension('pub.a')), EnablementState.DisabledWorkspace));\n\t});\n\n\ttest('test state of workspace and globally disabled extension', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledGlobally)\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace))\n\t\t\t.then(() => assert.strictEqual(testObject.getEnablementState(aLocalExtension('pub.a')), EnablementState.DisabledWorkspace));\n\t});\n\n\ttest('test state of workspace enabled extension', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace)\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.EnabledWorkspace))\n\t\t\t.then(() => assert.strictEqual(testObject.getEnablementState(aLocalExtension('pub.a')), EnablementState.EnabledWorkspace));\n\t});\n\n\ttest('test state of globally disabled and workspace enabled extension', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledGlobally)\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace))\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.EnabledWorkspace))\n\t\t\t.then(() => assert.strictEqual(testObject.getEnablementState(aLocalExtension('pub.a')), EnablementState.EnabledWorkspace));\n\t});\n\n\ttest('test state of an extension when disabled for workspace from workspace enabled', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace)\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.EnabledWorkspace))\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace))\n\t\t\t.then(() => assert.strictEqual(testObject.getEnablementState(aLocalExtension('pub.a')), EnablementState.DisabledWorkspace));\n\t});\n\n\ttest('test state of an extension when disabled globally from workspace enabled', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace)\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.EnabledWorkspace))\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledGlobally))\n\t\t\t.then(() => assert.strictEqual(testObject.getEnablementState(aLocalExtension('pub.a')), EnablementState.DisabledGlobally));\n\t});\n\n\ttest('test state of an extension when disabled globally from workspace disabled', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace)\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledGlobally))\n\t\t\t.then(() => assert.strictEqual(testObject.getEnablementState(aLocalExtension('pub.a')), EnablementState.DisabledGlobally));\n\t});\n\n\ttest('test state of an extension when enabled globally from workspace enabled', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace)\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.EnabledWorkspace))\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.EnabledGlobally))\n\t\t\t.then(() => assert.strictEqual(testObject.getEnablementState(aLocalExtension('pub.a')), EnablementState.EnabledGlobally));\n\t});\n\n\ttest('test state of an extension when enabled globally from workspace disabled', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace)\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.EnabledGlobally))\n\t\t\t.then(() => assert.strictEqual(testObject.getEnablementState(aLocalExtension('pub.a')), EnablementState.EnabledGlobally));\n\t});\n\n\ttest('test disable an extension for workspace and then globally', async () => {\n\t\tconst extension = aLocalExtension('pub.a');\n\t\tawait testObject.setEnablement([extension], EnablementState.DisabledWorkspace);\n\t\tawait testObject.setEnablement([extension], EnablementState.DisabledGlobally);\n\t\tassert.ok(!testObject.isEnabled(extension));\n\t\tassert.strictEqual(testObject.getEnablementState(extension), EnablementState.DisabledGlobally);\n\t});\n\n\ttest('test disable an extension for workspace and then globally return a truthy promise', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace)\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledGlobally))\n\t\t\t.then(value => assert.ok(value));\n\t});\n\n\ttest('test disable an extension for workspace and then globally trigger the change event', () => {\n\t\tconst target = sinon.spy();\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace)\n\t\t\t.then(() => disposableStore.add(testObject.onEnablementChanged(target)))\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledGlobally))\n\t\t\t.then(() => {\n\t\t\t\tassert.ok(target.calledOnce);\n\t\t\t\tassert.deepStrictEqual((<IExtension>target.args[0][0][0]).identifier, { id: 'pub.a' });\n\t\t\t});\n\t});\n\n\ttest('test disable an extension globally and then for workspace', async () => {\n\t\tconst extension = aLocalExtension('pub.a');\n\t\tawait testObject.setEnablement([extension], EnablementState.DisabledGlobally);\n\t\tawait testObject.setEnablement([extension], EnablementState.DisabledWorkspace);\n\t\tassert.ok(!testObject.isEnabled(extension));\n\t\tassert.strictEqual(testObject.getEnablementState(extension), EnablementState.DisabledWorkspace);\n\t});\n\n\ttest('test disable an extension globally and then for workspace return a truthy promise', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledGlobally)\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace))\n\t\t\t.then(value => assert.ok(value));\n\t});\n\n\ttest('test disable an extension globally and then for workspace triggers the change event', () => {\n\t\tconst target = sinon.spy();\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledGlobally)\n\t\t\t.then(() => disposableStore.add(testObject.onEnablementChanged(target)))\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace))\n\t\t\t.then(() => {\n\t\t\t\tassert.ok(target.calledOnce);\n\t\t\t\tassert.deepStrictEqual((<IExtension>target.args[0][0][0]).identifier, { id: 'pub.a' });\n\t\t\t});\n\t});\n\n\ttest('test disable an extension for workspace when there is no workspace throws error', () => {\n\t\tinstantiationService.stub(IWorkspaceContextService, 'getWorkbenchState', WorkbenchState.EMPTY);\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace)\n\t\t\t.then(() => assert.fail('should throw an error'), error => assert.ok(error));\n\t});\n\n\ttest('test enable an extension globally', async () => {\n\t\tconst extension = aLocalExtension('pub.a');\n\t\tawait testObject.setEnablement([extension], EnablementState.DisabledGlobally);\n\t\tawait testObject.setEnablement([extension], EnablementState.EnabledGlobally);\n\t\tassert.ok(testObject.isEnabled(extension));\n\t\tassert.strictEqual(testObject.getEnablementState(extension), EnablementState.EnabledGlobally);\n\t});\n\n\ttest('test enable an extension globally return truthy promise', async () => {\n\t\tawait testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledGlobally);\n\t\tconst value = await testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.EnabledGlobally);\n\t\tassert.strictEqual(value[0], true);\n\t});\n\n\ttest('test enable an extension globally triggers change event', () => {\n\t\tconst target = sinon.spy();\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledGlobally)\n\t\t\t.then(() => disposableStore.add(testObject.onEnablementChanged(target)))\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.EnabledGlobally))\n\t\t\t.then(() => {\n\t\t\t\tassert.ok(target.calledOnce);\n\t\t\t\tassert.deepStrictEqual((<IExtension>target.args[0][0][0]).identifier, { id: 'pub.a' });\n\t\t\t});\n\t});\n\n\ttest('test enable an extension globally when already enabled return falsy promise', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.EnabledGlobally)\n\t\t\t.then(value => assert.ok(!value[0]));\n\t});\n\n\ttest('test enable an extension for workspace', async () => {\n\t\tconst extension = aLocalExtension('pub.a');\n\t\tawait testObject.setEnablement([extension], EnablementState.DisabledWorkspace);\n\t\tawait testObject.setEnablement([extension], EnablementState.EnabledWorkspace);\n\t\tassert.ok(testObject.isEnabled(extension));\n\t\tassert.strictEqual(testObject.getEnablementState(extension), EnablementState.EnabledWorkspace);\n\t});\n\n\ttest('test enable an extension for workspace return truthy promise', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace)\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.EnabledWorkspace))\n\t\t\t.then(value => assert.ok(value));\n\t});\n\n\ttest('test enable an extension for workspace triggers change event', () => {\n\t\tconst target = sinon.spy();\n\t\treturn testObject.setEnablement([aLocalExtension('pub.b')], EnablementState.DisabledWorkspace)\n\t\t\t.then(() => disposableStore.add(testObject.onEnablementChanged(target)))\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.b')], EnablementState.EnabledWorkspace))\n\t\t\t.then(() => {\n\t\t\t\tassert.ok(target.calledOnce);\n\t\t\t\tassert.deepStrictEqual((<IExtension>target.args[0][0][0]).identifier, { id: 'pub.b' });\n\t\t\t});\n\t});\n\n\ttest('test enable an extension for workspace when already enabled return truthy promise', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.EnabledWorkspace)\n\t\t\t.then(value => assert.ok(value));\n\t});\n\n\ttest('test enable an extension for workspace when disabled in workspace and gloablly', async () => {\n\t\tconst extension = aLocalExtension('pub.a');\n\t\tawait testObject.setEnablement([extension], EnablementState.DisabledWorkspace);\n\t\tawait testObject.setEnablement([extension], EnablementState.DisabledGlobally);\n\t\tawait testObject.setEnablement([extension], EnablementState.EnabledWorkspace);\n\t\tassert.ok(testObject.isEnabled(extension));\n\t\tassert.strictEqual(testObject.getEnablementState(extension), EnablementState.EnabledWorkspace);\n\t});\n\n\ttest('test enable an extension globally when disabled in workspace and gloablly', async () => {\n\t\tconst extension = aLocalExtension('pub.a');\n\t\tawait testObject.setEnablement([extension], EnablementState.EnabledWorkspace);\n\t\tawait testObject.setEnablement([extension], EnablementState.DisabledWorkspace);\n\t\tawait testObject.setEnablement([extension], EnablementState.DisabledGlobally);\n\t\tawait testObject.setEnablement([extension], EnablementState.EnabledGlobally);\n\t\tassert.ok(testObject.isEnabled(extension));\n\t\tassert.strictEqual(testObject.getEnablementState(extension), EnablementState.EnabledGlobally);\n\t});\n\n\ttest('test enable an extension also enables dependencies', async () => {\n\t\tinstalled.push(...[aLocalExtension2('pub.a', { extensionDependencies: ['pub.b'] }), aLocalExtension('pub.b')]);\n\t\tconst target = installed[0];\n\t\tconst dep = installed[1];\n\t\tawait (<TestExtensionEnablementService>testObject).waitUntilInitialized();\n\t\tawait testObject.setEnablement([dep, target], EnablementState.DisabledGlobally);\n\t\tawait testObject.setEnablement([target], EnablementState.EnabledGlobally);\n\t\tassert.ok(testObject.isEnabled(target));\n\t\tassert.ok(testObject.isEnabled(dep));\n\t\tassert.strictEqual(testObject.getEnablementState(target), EnablementState.EnabledGlobally);\n\t\tassert.strictEqual(testObject.getEnablementState(dep), EnablementState.EnabledGlobally);\n\t});\n\n\ttest('test enable an extension in workspace with a dependency extension that has auth providers', async () => {\n\t\tinstalled.push(...[aLocalExtension2('pub.a', { extensionDependencies: ['pub.b'] }), aLocalExtension('pub.b', { authentication: [{ id: 'a', label: 'a' }] })]);\n\t\tconst target = installed[0];\n\t\tawait (<TestExtensionEnablementService>testObject).waitUntilInitialized();\n\t\tawait testObject.setEnablement([target], EnablementState.DisabledWorkspace);\n\t\tawait testObject.setEnablement([target], EnablementState.EnabledWorkspace);\n\t\tassert.ok(testObject.isEnabled(target));\n\t\tassert.strictEqual(testObject.getEnablementState(target), EnablementState.EnabledWorkspace);\n\t});\n\n\ttest('test enable an extension with a dependency extension that cannot be enabled', async () => {\n\t\tinstantiationService.stub(IExtensionManagementServerService, anExtensionManagementServerService(anExtensionManagementServer('vscode-local', instantiationService), anExtensionManagementServer('vscode-remote', instantiationService), null));\n\t\tconst localWorkspaceDepExtension = aLocalExtension2('pub.b', { extensionKind: ['workspace'] }, { location: URI.file(`pub.b`) });\n\t\tconst remoteWorkspaceExtension = aLocalExtension2('pub.a', { extensionKind: ['workspace'], extensionDependencies: ['pub.b'] }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\t\tconst remoteWorkspaceDepExtension = aLocalExtension2('pub.b', { extensionKind: ['workspace'] }, { location: URI.file(`pub.b`).with({ scheme: Schemas.vscodeRemote }) });\n\t\tinstalled.push(localWorkspaceDepExtension, remoteWorkspaceExtension, remoteWorkspaceDepExtension);\n\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tawait (<TestExtensionEnablementService>testObject).waitUntilInitialized();\n\n\t\tawait testObject.setEnablement([remoteWorkspaceExtension], EnablementState.DisabledGlobally);\n\t\tawait testObject.setEnablement([remoteWorkspaceExtension], EnablementState.EnabledGlobally);\n\t\tassert.ok(testObject.isEnabled(remoteWorkspaceExtension));\n\t\tassert.strictEqual(testObject.getEnablementState(remoteWorkspaceExtension), EnablementState.EnabledGlobally);\n\t});\n\n\ttest('test enable an extension also enables packed extensions', async () => {\n\t\tinstalled.push(...[aLocalExtension2('pub.a', { extensionPack: ['pub.b'] }), aLocalExtension('pub.b')]);\n\t\tconst target = installed[0];\n\t\tconst dep = installed[1];\n\t\tawait testObject.setEnablement([dep, target], EnablementState.DisabledGlobally);\n\t\tawait testObject.setEnablement([target], EnablementState.EnabledGlobally);\n\t\tassert.ok(testObject.isEnabled(target));\n\t\tassert.ok(testObject.isEnabled(dep));\n\t\tassert.strictEqual(testObject.getEnablementState(target), EnablementState.EnabledGlobally);\n\t\tassert.strictEqual(testObject.getEnablementState(dep), EnablementState.EnabledGlobally);\n\t});\n\n\ttest('test remove an extension from disablement list when uninstalled', async () => {\n\t\tconst extension = aLocalExtension('pub.a');\n\t\tinstalled.push(extension);\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\n\t\tawait testObject.setEnablement([extension], EnablementState.DisabledWorkspace);\n\t\tawait testObject.setEnablement([extension], EnablementState.DisabledGlobally);\n\t\tdidUninstallEvent.fire({ identifier: { id: 'pub.a' }, profileLocation: null! });\n\n\t\tassert.ok(testObject.isEnabled(extension));\n\t\tassert.strictEqual(testObject.getEnablementState(extension), EnablementState.EnabledGlobally);\n\t});\n\n\ttest('test isEnabled return false extension is disabled globally', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledGlobally)\n\t\t\t.then(() => assert.ok(!testObject.isEnabled(aLocalExtension('pub.a'))));\n\t});\n\n\ttest('test isEnabled return false extension is disabled in workspace', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace)\n\t\t\t.then(() => assert.ok(!testObject.isEnabled(aLocalExtension('pub.a'))));\n\t});\n\n\ttest('test isEnabled return true extension is not disabled', () => {\n\t\treturn testObject.setEnablement([aLocalExtension('pub.a')], EnablementState.DisabledWorkspace)\n\t\t\t.then(() => testObject.setEnablement([aLocalExtension('pub.c')], EnablementState.DisabledGlobally))\n\t\t\t.then(() => assert.ok(testObject.isEnabled(aLocalExtension('pub.b'))));\n\t});\n\n\ttest('test canChangeEnablement return false for language packs', () => {\n\t\tassert.strictEqual(testObject.canChangeEnablement(aLocalExtension('pub.a', { localizations: [{ languageId: 'gr', translations: [{ id: 'vscode', path: 'path' }] }] })), false);\n\t});\n\n\ttest('test canChangeEnablement return true for auth extension', () => {\n\t\tassert.strictEqual(testObject.canChangeEnablement(aLocalExtension('pub.a', { authentication: [{ id: 'a', label: 'a' }] })), true);\n\t});\n\n\ttest('test canChangeEnablement return true for auth extension when user data sync account does not depends on it', () => {\n\t\tinstantiationService.stub(IUserDataSyncAccountService, <Partial<IUserDataSyncAccountService>>{\n\t\t\taccount: { authenticationProviderId: 'b' }\n\t\t});\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tassert.strictEqual(testObject.canChangeEnablement(aLocalExtension('pub.a', { authentication: [{ id: 'a', label: 'a' }] })), true);\n\t});\n\n\ttest('test canChangeEnablement return true for auth extension when user data sync account depends on it but auto sync is off', () => {\n\t\tinstantiationService.stub(IUserDataSyncAccountService, <Partial<IUserDataSyncAccountService>>{\n\t\t\taccount: { authenticationProviderId: 'a' }\n\t\t});\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tassert.strictEqual(testObject.canChangeEnablement(aLocalExtension('pub.a', { authentication: [{ id: 'a', label: 'a' }] })), true);\n\t});\n\n\ttest('test canChangeEnablement return false for auth extension and user data sync account depends on it and auto sync is on', () => {\n\t\tinstantiationService.stub(IUserDataSyncEnablementService, <Partial<IUserDataSyncEnablementService>>{ isEnabled() { return true; } });\n\t\tinstantiationService.stub(IUserDataSyncAccountService, <Partial<IUserDataSyncAccountService>>{\n\t\t\taccount: { authenticationProviderId: 'a' }\n\t\t});\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tassert.strictEqual(testObject.canChangeEnablement(aLocalExtension('pub.a', { authentication: [{ id: 'a', label: 'a' }] })), false);\n\t});\n\n\ttest('test canChangeWorkspaceEnablement return true', () => {\n\t\tassert.strictEqual(testObject.canChangeWorkspaceEnablement(aLocalExtension('pub.a')), true);\n\t});\n\n\ttest('test canChangeWorkspaceEnablement return false if there is no workspace', () => {\n\t\tinstantiationService.stub(IWorkspaceContextService, 'getWorkbenchState', WorkbenchState.EMPTY);\n\t\tassert.strictEqual(testObject.canChangeWorkspaceEnablement(aLocalExtension('pub.a')), false);\n\t});\n\n\ttest('test canChangeWorkspaceEnablement return false for auth extension', () => {\n\t\tassert.strictEqual(testObject.canChangeWorkspaceEnablement(aLocalExtension('pub.a', { authentication: [{ id: 'a', label: 'a' }] })), false);\n\t});\n\n\ttest('test canChangeEnablement return false when extensions are disabled in environment', () => {\n\t\tinstantiationService.stub(IWorkbenchEnvironmentService, { disableExtensions: true });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tassert.strictEqual(testObject.canChangeEnablement(aLocalExtension('pub.a')), false);\n\t});\n\n\ttest('test canChangeEnablement return false when the extension is disabled in environment', () => {\n\t\tinstantiationService.stub(IWorkbenchEnvironmentService, { disableExtensions: ['pub.a'] });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tassert.strictEqual(testObject.canChangeEnablement(aLocalExtension('pub.a')), false);\n\t});\n\n\ttest('test canChangeEnablement return true for system extensions when extensions are disabled in environment', () => {\n\t\tinstantiationService.stub(IWorkbenchEnvironmentService, { disableExtensions: true });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tconst extension = aLocalExtension('pub.a', undefined, ExtensionType.System);\n\t\tassert.strictEqual(testObject.canChangeEnablement(extension), true);\n\t});\n\n\ttest('test canChangeEnablement return false for system extension when extension is disabled in environment', () => {\n\t\tinstantiationService.stub(IWorkbenchEnvironmentService, { disableExtensions: ['pub.a'] });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tconst extension = aLocalExtension('pub.a', undefined, ExtensionType.System);\n\t\tassert.ok(!testObject.canChangeEnablement(extension));\n\t});\n\n\ttest('test extension is disabled when disabled in environment', async () => {\n\t\tconst extension = aLocalExtension('pub.a');\n\t\tinstalled.push(extension);\n\n\t\tinstantiationService.stub(IWorkbenchEnvironmentService, { disableExtensions: ['pub.a'] });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\n\t\tassert.ok(!testObject.isEnabled(extension));\n\t\tassert.deepStrictEqual(testObject.getEnablementState(extension), EnablementState.DisabledByEnvironment);\n\t});\n\n\ttest('test extension is enabled globally when enabled in environment', async () => {\n\t\tconst extension = aLocalExtension('pub.a');\n\t\tinstalled.push(extension);\n\n\t\tinstantiationService.stub(IWorkbenchEnvironmentService, { enableExtensions: <readonly string[]>['pub.a'] });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\n\t\tassert.ok(testObject.isEnabled(extension));\n\t\tassert.deepStrictEqual(testObject.getEnablementState(extension), EnablementState.EnabledGlobally);\n\t});\n\n\ttest('test extension is enabled workspace when enabled in environment', async () => {\n\t\tconst extension = aLocalExtension('pub.a');\n\t\tinstalled.push(extension);\n\n\t\tawait testObject.setEnablement([extension], EnablementState.EnabledWorkspace);\n\t\tinstantiationService.stub(IWorkbenchEnvironmentService, { enableExtensions: <readonly string[]>['pub.a'] });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\n\t\tassert.ok(testObject.isEnabled(extension));\n\t\tassert.deepStrictEqual(testObject.getEnablementState(extension), EnablementState.EnabledWorkspace);\n\t});\n\n\ttest('test extension is enabled by environment when disabled globally', async () => {\n\t\tconst extension = aLocalExtension('pub.a');\n\t\tinstalled.push(extension);\n\n\t\tawait testObject.setEnablement([extension], EnablementState.DisabledGlobally);\n\t\tinstantiationService.stub(IWorkbenchEnvironmentService, { enableExtensions: <readonly string[]>['pub.a'] });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\n\t\tassert.ok(testObject.isEnabled(extension));\n\t\tassert.deepStrictEqual(testObject.getEnablementState(extension), EnablementState.EnabledByEnvironment);\n\t});\n\n\ttest('test extension is enabled by environment when disabled workspace', async () => {\n\t\tconst extension = aLocalExtension('pub.a');\n\t\tinstalled.push(extension);\n\n\t\tawait testObject.setEnablement([extension], EnablementState.DisabledWorkspace);\n\t\tinstantiationService.stub(IWorkbenchEnvironmentService, { enableExtensions: <readonly string[]>['pub.a'] });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\n\t\tassert.ok(testObject.isEnabled(extension));\n\t\tassert.deepStrictEqual(testObject.getEnablementState(extension), EnablementState.EnabledByEnvironment);\n\t});\n\n\ttest('test extension is disabled by environment when also enabled in environment', async () => {\n\t\tconst extension = aLocalExtension('pub.a');\n\t\tinstalled.push(extension);\n\n\t\ttestObject.setEnablement([extension], EnablementState.DisabledWorkspace);\n\t\tinstantiationService.stub(IWorkbenchEnvironmentService, { disableExtensions: true, enableExtensions: <readonly string[]>['pub.a'] });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\n\t\tassert.ok(!testObject.isEnabled(extension));\n\t\tassert.deepStrictEqual(testObject.getEnablementState(extension), EnablementState.DisabledByEnvironment);\n\t});\n\n\ttest('test canChangeEnablement return false when the extension is enabled in environment', () => {\n\t\tinstantiationService.stub(IWorkbenchEnvironmentService, { enableExtensions: <readonly string[]>['pub.a'] });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tassert.strictEqual(testObject.canChangeEnablement(aLocalExtension('pub.a')), false);\n\t});\n\n\ttest('test extension does not support vitrual workspace is not enabled in virtual workspace', async () => {\n\t\tconst extension = aLocalExtension2('pub.a', { capabilities: { virtualWorkspaces: false } });\n\t\tinstantiationService.stub(IWorkspaceContextService, 'getWorkspace', <IWorkspace>{ folders: [{ uri: URI.file('worskapceA').with(({ scheme: 'virtual' })) }] });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tassert.ok(!testObject.isEnabled(extension));\n\t\tassert.deepStrictEqual(testObject.getEnablementState(extension), EnablementState.DisabledByVirtualWorkspace);\n\t});\n\n\ttest('test web extension from web extension management server and does not support vitrual workspace is enabled in virtual workspace', async () => {\n\t\tinstantiationService.stub(IExtensionManagementServerService, anExtensionManagementServerService(null, anExtensionManagementServer('vscode-remote', instantiationService), anExtensionManagementServer('web', instantiationService)));\n\t\tconst extension = aLocalExtension2('pub.a', { capabilities: { virtualWorkspaces: false }, browser: 'browser.js' }, { location: URI.file(`pub.a`).with({ scheme: 'web' }) });\n\t\tinstantiationService.stub(IWorkspaceContextService, 'getWorkspace', <IWorkspace>{ folders: [{ uri: URI.file('worskapceA').with(({ scheme: 'virtual' })) }] });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tassert.ok(testObject.isEnabled(extension));\n\t\tassert.deepStrictEqual(testObject.getEnablementState(extension), EnablementState.EnabledGlobally);\n\t});\n\n\ttest('test web extension from remote extension management server and does not support vitrual workspace is disabled in virtual workspace', async () => {\n\t\tinstantiationService.stub(IExtensionManagementServerService, anExtensionManagementServerService(null, anExtensionManagementServer('vscode-remote', instantiationService), anExtensionManagementServer('web', instantiationService)));\n\t\tconst extension = aLocalExtension2('pub.a', { capabilities: { virtualWorkspaces: false }, browser: 'browser.js' }, { location: URI.file(`pub.a`).with({ scheme: 'vscode-remote' }) });\n\t\tinstantiationService.stub(IWorkspaceContextService, 'getWorkspace', <IWorkspace>{ folders: [{ uri: URI.file('worskapceA').with(({ scheme: 'virtual' })) }] });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tassert.ok(!testObject.isEnabled(extension));\n\t\tassert.deepStrictEqual(testObject.getEnablementState(extension), EnablementState.DisabledByVirtualWorkspace);\n\t});\n\n\ttest('test enable a remote workspace extension and local ui extension that is a dependency of remote', async () => {\n\t\tinstantiationService.stub(IExtensionManagementServerService, anExtensionManagementServerService(anExtensionManagementServer('vscode-local', instantiationService), anExtensionManagementServer('vscode-remote', instantiationService), null));\n\t\tconst localUIExtension = aLocalExtension2('pub.a', { main: 'main.js', extensionKind: ['ui'] }, { location: URI.file(`pub.a`) });\n\t\tconst remoteUIExtension = aLocalExtension2('pub.a', { main: 'main.js', extensionKind: ['ui'] }, { location: URI.file(`pub.a`).with({ scheme: 'vscode-remote' }) });\n\t\tconst target = aLocalExtension2('pub.b', { main: 'main.js', extensionDependencies: ['pub.a'] }, { location: URI.file(`pub.b`).with({ scheme: 'vscode-remote' }) });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\n\t\tinstalled.push(localUIExtension, remoteUIExtension, target);\n\t\tawait testObject.setEnablement([target, localUIExtension], EnablementState.DisabledGlobally);\n\t\tawait testObject.setEnablement([target, localUIExtension], EnablementState.EnabledGlobally);\n\t\tassert.ok(testObject.isEnabled(target));\n\t\tassert.ok(testObject.isEnabled(localUIExtension));\n\t\tassert.strictEqual(testObject.getEnablementState(target), EnablementState.EnabledGlobally);\n\t\tassert.strictEqual(testObject.getEnablementState(localUIExtension), EnablementState.EnabledGlobally);\n\t});\n\n\ttest('test enable a remote workspace extension also enables its dependency in local', async () => {\n\t\tinstantiationService.stub(IExtensionManagementServerService, anExtensionManagementServerService(anExtensionManagementServer('vscode-local', instantiationService), anExtensionManagementServer('vscode-remote', instantiationService), null));\n\t\tconst localUIExtension = aLocalExtension2('pub.a', { main: 'main.js', extensionKind: ['ui'] }, { location: URI.file(`pub.a`) });\n\t\tconst remoteUIExtension = aLocalExtension2('pub.a', { main: 'main.js', extensionKind: ['ui'] }, { location: URI.file(`pub.a`).with({ scheme: 'vscode-remote' }) });\n\t\tconst target = aLocalExtension2('pub.b', { main: 'main.js', extensionDependencies: ['pub.a'] }, { location: URI.file(`pub.b`).with({ scheme: 'vscode-remote' }) });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\n\t\tinstalled.push(localUIExtension, remoteUIExtension, target);\n\t\tawait testObject.setEnablement([target, localUIExtension], EnablementState.DisabledGlobally);\n\t\tawait testObject.setEnablement([target], EnablementState.EnabledGlobally);\n\t\tassert.ok(testObject.isEnabled(target));\n\t\tassert.ok(testObject.isEnabled(localUIExtension));\n\t\tassert.strictEqual(testObject.getEnablementState(target), EnablementState.EnabledGlobally);\n\t\tassert.strictEqual(testObject.getEnablementState(localUIExtension), EnablementState.EnabledGlobally);\n\t});\n\n\ttest('test canChangeEnablement return false when extension is disabled in virtual workspace', () => {\n\t\tconst extension = aLocalExtension2('pub.a', { capabilities: { virtualWorkspaces: false } });\n\t\tinstantiationService.stub(IWorkspaceContextService, 'getWorkspace', <IWorkspace>{ folders: [{ uri: URI.file('worskapceA').with(({ scheme: 'virtual' })) }] });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tassert.ok(!testObject.canChangeEnablement(extension));\n\t});\n\n\ttest('test extension does not support vitrual workspace is enabled in normal workspace', async () => {\n\t\tconst extension = aLocalExtension2('pub.a', { capabilities: { virtualWorkspaces: false } });\n\t\tinstantiationService.stub(IWorkspaceContextService, 'getWorkspace', <IWorkspace>{ folders: [{ uri: URI.file('worskapceA') }] });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tassert.ok(testObject.isEnabled(extension));\n\t\tassert.deepStrictEqual(testObject.getEnablementState(extension), EnablementState.EnabledGlobally);\n\t});\n\n\ttest('test extension supports virtual workspace is enabled in virtual workspace', async () => {\n\t\tconst extension = aLocalExtension2('pub.a', { capabilities: { virtualWorkspaces: true } });\n\t\tinstantiationService.stub(IWorkspaceContextService, 'getWorkspace', <IWorkspace>{ folders: [{ uri: URI.file('worskapceA').with(({ scheme: 'virtual' })) }] });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tassert.ok(testObject.isEnabled(extension));\n\t\tassert.deepStrictEqual(testObject.getEnablementState(extension), EnablementState.EnabledGlobally);\n\t});\n\n\ttest('test extension does not support untrusted workspaces is disabled in untrusted workspace', () => {\n\t\tconst extension = aLocalExtension2('pub.a', { main: 'main.js', capabilities: { untrustedWorkspaces: { supported: false, description: 'hello' } } });\n\t\tinstantiationService.stub(IWorkspaceTrustManagementService, <Partial<IWorkspaceTrustManagementService>>{ isWorkspaceTrusted() { return false; } });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tassert.strictEqual(testObject.getEnablementState(extension), EnablementState.DisabledByTrustRequirement);\n\t});\n\n\ttest('test canChangeEnablement return true when extension is disabled by workspace trust', () => {\n\t\tconst extension = aLocalExtension2('pub.a', { main: 'main.js', capabilities: { untrustedWorkspaces: { supported: false, description: 'hello' } } });\n\t\tinstantiationService.stub(IWorkspaceTrustManagementService, <Partial<IWorkspaceTrustManagementService>>{ isWorkspaceTrusted() { return false; } });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tassert.ok(testObject.canChangeEnablement(extension));\n\t});\n\n\ttest('test extension supports untrusted workspaces is enabled in untrusted workspace', () => {\n\t\tconst extension = aLocalExtension2('pub.a', { main: 'main.js', capabilities: { untrustedWorkspaces: { supported: true } } });\n\t\tinstantiationService.stub(IWorkspaceTrustManagementService, <Partial<IWorkspaceTrustManagementService>>{ isWorkspaceTrusted() { return false; } });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tassert.strictEqual(testObject.getEnablementState(extension), EnablementState.EnabledGlobally);\n\t});\n\n\ttest('test extension does not support untrusted workspaces is enabled in trusted workspace', () => {\n\t\tconst extension = aLocalExtension2('pub.a', { main: 'main.js', capabilities: { untrustedWorkspaces: { supported: false, description: '' } } });\n\t\tinstantiationService.stub(IWorkspaceTrustManagementService, <Partial<IWorkspaceTrustManagementService>>{ isWorkspaceTrusted() { return true; } });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tassert.strictEqual(testObject.getEnablementState(extension), EnablementState.EnabledGlobally);\n\t});\n\n\ttest('test extension supports untrusted workspaces is enabled in trusted workspace', () => {\n\t\tconst extension = aLocalExtension2('pub.a', { main: 'main.js', capabilities: { untrustedWorkspaces: { supported: true } } });\n\t\tinstantiationService.stub(IWorkspaceTrustManagementService, <Partial<IWorkspaceTrustManagementService>>{ isWorkspaceTrusted() { return true; } });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tassert.strictEqual(testObject.getEnablementState(extension), EnablementState.EnabledGlobally);\n\t});\n\n\ttest('test extension without any value for virtual worksapce is enabled in virtual workspace', async () => {\n\t\tconst extension = aLocalExtension2('pub.a');\n\t\tinstantiationService.stub(IWorkspaceContextService, 'getWorkspace', <IWorkspace>{ folders: [{ uri: URI.file('worskapceA').with(({ scheme: 'virtual' })) }] });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tassert.ok(testObject.isEnabled(extension));\n\t\tassert.deepStrictEqual(testObject.getEnablementState(extension), EnablementState.EnabledGlobally);\n\t});\n\n\ttest('test local workspace extension is disabled by kind', async () => {\n\t\tinstantiationService.stub(IExtensionManagementServerService, aMultiExtensionManagementServerService(instantiationService));\n\t\tconst localWorkspaceExtension = aLocalExtension2('pub.a', { extensionKind: ['workspace'] }, { location: URI.file(`pub.a`) });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tassert.ok(!testObject.isEnabled(localWorkspaceExtension));\n\t\tassert.deepStrictEqual(testObject.getEnablementState(localWorkspaceExtension), EnablementState.DisabledByExtensionKind);\n\t});\n\n\ttest('test local workspace + ui extension is enabled by kind', async () => {\n\t\tinstantiationService.stub(IExtensionManagementServerService, aMultiExtensionManagementServerService(instantiationService));\n\t\tconst localWorkspaceExtension = aLocalExtension2('pub.a', { extensionKind: ['workspace', 'ui'] }, { location: URI.file(`pub.a`) });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tassert.ok(testObject.isEnabled(localWorkspaceExtension));\n\t\tassert.deepStrictEqual(testObject.getEnablementState(localWorkspaceExtension), EnablementState.EnabledGlobally);\n\t});\n\n\ttest('test local ui extension is not disabled by kind', async () => {\n\t\tinstantiationService.stub(IExtensionManagementServerService, aMultiExtensionManagementServerService(instantiationService));\n\t\tconst localWorkspaceExtension = aLocalExtension2('pub.a', { extensionKind: ['ui'] }, { location: URI.file(`pub.a`) });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tassert.ok(testObject.isEnabled(localWorkspaceExtension));\n\t\tassert.deepStrictEqual(testObject.getEnablementState(localWorkspaceExtension), EnablementState.EnabledGlobally);\n\t});\n\n\ttest('test canChangeEnablement return true when the local workspace extension is disabled by kind', () => {\n\t\tinstantiationService.stub(IExtensionManagementServerService, aMultiExtensionManagementServerService(instantiationService));\n\t\tconst localWorkspaceExtension = aLocalExtension2('pub.a', { extensionKind: ['workspace'] }, { location: URI.file(`pub.a`) });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tassert.strictEqual(testObject.canChangeEnablement(localWorkspaceExtension), false);\n\t});\n\n\ttest('test canChangeEnablement return true for local ui extension', () => {\n\t\tinstantiationService.stub(IExtensionManagementServerService, aMultiExtensionManagementServerService(instantiationService));\n\t\tconst localWorkspaceExtension = aLocalExtension2('pub.a', { extensionKind: ['ui'] }, { location: URI.file(`pub.a`) });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tassert.strictEqual(testObject.canChangeEnablement(localWorkspaceExtension), true);\n\t});\n\n\ttest('test remote ui extension is disabled by kind', async () => {\n\t\tinstantiationService.stub(IExtensionManagementServerService, aMultiExtensionManagementServerService(instantiationService));\n\t\tconst localWorkspaceExtension = aLocalExtension2('pub.a', { extensionKind: ['ui'] }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tassert.ok(!testObject.isEnabled(localWorkspaceExtension));\n\t\tassert.deepStrictEqual(testObject.getEnablementState(localWorkspaceExtension), EnablementState.DisabledByExtensionKind);\n\t});\n\n\ttest('test remote ui+workspace extension is disabled by kind', async () => {\n\t\tinstantiationService.stub(IExtensionManagementServerService, aMultiExtensionManagementServerService(instantiationService));\n\t\tconst localWorkspaceExtension = aLocalExtension2('pub.a', { extensionKind: ['ui', 'workspace'] }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tassert.ok(testObject.isEnabled(localWorkspaceExtension));\n\t\tassert.deepStrictEqual(testObject.getEnablementState(localWorkspaceExtension), EnablementState.EnabledGlobally);\n\t});\n\n\ttest('test remote ui extension is disabled by kind when there is no local server', async () => {\n\t\tinstantiationService.stub(IExtensionManagementServerService, anExtensionManagementServerService(null, anExtensionManagementServer('vscode-remote', instantiationService), null));\n\t\tconst localWorkspaceExtension = aLocalExtension2('pub.a', { extensionKind: ['ui'] }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tassert.ok(!testObject.isEnabled(localWorkspaceExtension));\n\t\tassert.deepStrictEqual(testObject.getEnablementState(localWorkspaceExtension), EnablementState.DisabledByExtensionKind);\n\t});\n\n\ttest('test remote workspace extension is not disabled by kind', async () => {\n\t\tinstantiationService.stub(IExtensionManagementServerService, aMultiExtensionManagementServerService(instantiationService));\n\t\tconst localWorkspaceExtension = aLocalExtension2('pub.a', { extensionKind: ['workspace'] }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tassert.ok(testObject.isEnabled(localWorkspaceExtension));\n\t\tassert.deepStrictEqual(testObject.getEnablementState(localWorkspaceExtension), EnablementState.EnabledGlobally);\n\t});\n\n\ttest('test canChangeEnablement return true when the remote ui extension is disabled by kind', () => {\n\t\tinstantiationService.stub(IExtensionManagementServerService, aMultiExtensionManagementServerService(instantiationService));\n\t\tconst localWorkspaceExtension = aLocalExtension2('pub.a', { extensionKind: ['ui'] }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tassert.strictEqual(testObject.canChangeEnablement(localWorkspaceExtension), false);\n\t});\n\n\ttest('test canChangeEnablement return true for remote workspace extension', () => {\n\t\tinstantiationService.stub(IExtensionManagementServerService, aMultiExtensionManagementServerService(instantiationService));\n\t\tconst localWorkspaceExtension = aLocalExtension2('pub.a', { extensionKind: ['workspace'] }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tassert.strictEqual(testObject.canChangeEnablement(localWorkspaceExtension), true);\n\t});\n\n\ttest('test web extension on local server is disabled by kind when web worker is not enabled', async () => {\n\t\tinstantiationService.stub(IExtensionManagementServerService, aMultiExtensionManagementServerService(instantiationService));\n\t\tconst localWorkspaceExtension = aLocalExtension2('pub.a', { browser: 'browser.js' }, { location: URI.file(`pub.a`) });\n\t\t(<TestConfigurationService>instantiationService.get(IConfigurationService)).setUserConfiguration('extensions', { webWorker: false });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tassert.strictEqual(testObject.isEnabled(localWorkspaceExtension), false);\n\t\tassert.deepStrictEqual(testObject.getEnablementState(localWorkspaceExtension), EnablementState.DisabledByExtensionKind);\n\t});\n\n\ttest('test web extension on local server is not disabled by kind when web worker is enabled', async () => {\n\t\tinstantiationService.stub(IExtensionManagementServerService, aMultiExtensionManagementServerService(instantiationService));\n\t\tconst localWorkspaceExtension = aLocalExtension2('pub.a', { browser: 'browser.js' }, { location: URI.file(`pub.a`) });\n\t\t(<TestConfigurationService>instantiationService.get(IConfigurationService)).setUserConfiguration('extensions', { webWorker: true });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tassert.strictEqual(testObject.isEnabled(localWorkspaceExtension), true);\n\t\tassert.deepStrictEqual(testObject.getEnablementState(localWorkspaceExtension), EnablementState.EnabledGlobally);\n\t});\n\n\ttest('test web extension on remote server is disabled by kind when web worker is not enabled', async () => {\n\t\tinstantiationService.stub(IExtensionManagementServerService, anExtensionManagementServerService(anExtensionManagementServer('vscode-local', instantiationService), anExtensionManagementServer('vscode-remote', instantiationService), null));\n\t\tconst localWorkspaceExtension = aLocalExtension2('pub.a', { browser: 'browser.js' }, { location: URI.file(`pub.a`).with({ scheme: 'vscode-remote' }) });\n\t\t(<TestConfigurationService>instantiationService.get(IConfigurationService)).setUserConfiguration('extensions', { webWorker: false });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tassert.strictEqual(testObject.isEnabled(localWorkspaceExtension), false);\n\t\tassert.deepStrictEqual(testObject.getEnablementState(localWorkspaceExtension), EnablementState.DisabledByExtensionKind);\n\t});\n\n\ttest('test web extension on remote server is disabled by kind when web worker is enabled', async () => {\n\t\tinstantiationService.stub(IExtensionManagementServerService, anExtensionManagementServerService(anExtensionManagementServer('vscode-local', instantiationService), anExtensionManagementServer('vscode-remote', instantiationService), null));\n\t\tconst localWorkspaceExtension = aLocalExtension2('pub.a', { browser: 'browser.js' }, { location: URI.file(`pub.a`).with({ scheme: 'vscode-remote' }) });\n\t\t(<TestConfigurationService>instantiationService.get(IConfigurationService)).setUserConfiguration('extensions', { webWorker: true });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tassert.strictEqual(testObject.isEnabled(localWorkspaceExtension), false);\n\t\tassert.deepStrictEqual(testObject.getEnablementState(localWorkspaceExtension), EnablementState.DisabledByExtensionKind);\n\t});\n\n\ttest('test web extension on remote server is enabled in web', async () => {\n\t\tinstantiationService.stub(IExtensionManagementServerService, anExtensionManagementServerService(anExtensionManagementServer('vscode-local', instantiationService), anExtensionManagementServer('vscode-remote', instantiationService), anExtensionManagementServer('web', instantiationService)));\n\t\tconst localWorkspaceExtension = aLocalExtension2('pub.a', { browser: 'browser.js' }, { location: URI.file(`pub.a`).with({ scheme: 'vscode-remote' }) });\n\t\t(<TestConfigurationService>instantiationService.get(IConfigurationService)).setUserConfiguration('extensions', { webWorker: false });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tassert.strictEqual(testObject.isEnabled(localWorkspaceExtension), true);\n\t\tassert.deepStrictEqual(testObject.getEnablementState(localWorkspaceExtension), EnablementState.EnabledGlobally);\n\t});\n\n\ttest('test web extension on web server is not disabled by kind', async () => {\n\t\tinstantiationService.stub(IExtensionManagementServerService, anExtensionManagementServerService(anExtensionManagementServer('vscode-local', instantiationService), anExtensionManagementServer('vscode-remote', instantiationService), anExtensionManagementServer('web', instantiationService)));\n\t\tconst webExtension = aLocalExtension2('pub.a', { browser: 'browser.js' }, { location: URI.file(`pub.a`).with({ scheme: 'web' }) });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tassert.strictEqual(testObject.isEnabled(webExtension), true);\n\t\tassert.deepStrictEqual(testObject.getEnablementState(webExtension), EnablementState.EnabledGlobally);\n\t});\n\n\ttest('test state of multipe extensions', async () => {\n\t\tinstalled.push(...[aLocalExtension('pub.a'), aLocalExtension('pub.b'), aLocalExtension('pub.c'), aLocalExtension('pub.d'), aLocalExtension('pub.e')]);\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tawait (<TestExtensionEnablementService>testObject).waitUntilInitialized();\n\n\t\tawait testObject.setEnablement([installed[0]], EnablementState.DisabledGlobally);\n\t\tawait testObject.setEnablement([installed[1]], EnablementState.DisabledWorkspace);\n\t\tawait testObject.setEnablement([installed[2]], EnablementState.EnabledWorkspace);\n\t\tawait testObject.setEnablement([installed[3]], EnablementState.EnabledGlobally);\n\n\t\tassert.deepStrictEqual(testObject.getEnablementStates(installed), [EnablementState.DisabledGlobally, EnablementState.DisabledWorkspace, EnablementState.EnabledWorkspace, EnablementState.EnabledGlobally, EnablementState.EnabledGlobally]);\n\t});\n\n\ttest('test extension is disabled by dependency if it has a dependency that is disabled', async () => {\n\t\tinstalled.push(...[aLocalExtension2('pub.a'), aLocalExtension2('pub.b', { extensionDependencies: ['pub.a'] })]);\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tawait (<TestExtensionEnablementService>testObject).waitUntilInitialized();\n\n\t\tawait testObject.setEnablement([installed[0]], EnablementState.DisabledGlobally);\n\n\t\tassert.strictEqual(testObject.getEnablementState(installed[1]), EnablementState.DisabledByExtensionDependency);\n\t});\n\n\ttest('test extension is disabled by dependency if it has a dependency that is disabled by virtual workspace', async () => {\n\t\tinstalled.push(...[aLocalExtension2('pub.a', { capabilities: { virtualWorkspaces: false } }), aLocalExtension2('pub.b', { extensionDependencies: ['pub.a'], capabilities: { virtualWorkspaces: true } })]);\n\t\tinstantiationService.stub(IWorkspaceContextService, 'getWorkspace', <IWorkspace>{ folders: [{ uri: URI.file('worskapceA').with(({ scheme: 'virtual' })) }] });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tawait (<TestExtensionEnablementService>testObject).waitUntilInitialized();\n\n\t\tassert.strictEqual(testObject.getEnablementState(installed[0]), EnablementState.DisabledByVirtualWorkspace);\n\t\tassert.strictEqual(testObject.getEnablementState(installed[1]), EnablementState.DisabledByExtensionDependency);\n\t});\n\n\ttest('test canChangeEnablement return false when extension is disabled by dependency if it has a dependency that is disabled by virtual workspace', async () => {\n\t\tinstalled.push(...[aLocalExtension2('pub.a', { capabilities: { virtualWorkspaces: false } }), aLocalExtension2('pub.b', { extensionDependencies: ['pub.a'], capabilities: { virtualWorkspaces: true } })]);\n\t\tinstantiationService.stub(IWorkspaceContextService, 'getWorkspace', <IWorkspace>{ folders: [{ uri: URI.file('worskapceA').with(({ scheme: 'virtual' })) }] });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tawait (<TestExtensionEnablementService>testObject).waitUntilInitialized();\n\n\t\tassert.ok(!testObject.canChangeEnablement(installed[1]));\n\t});\n\n\ttest('test extension is disabled by dependency if it has a dependency that is disabled by workspace trust', async () => {\n\t\tinstalled.push(...[aLocalExtension2('pub.a', { main: 'hello.js', capabilities: { untrustedWorkspaces: { supported: false, description: '' } } }), aLocalExtension2('pub.b', { extensionDependencies: ['pub.a'], capabilities: { untrustedWorkspaces: { supported: true } } })]);\n\t\tinstantiationService.stub(IWorkspaceTrustManagementService, <Partial<IWorkspaceTrustManagementService>>{ isWorkspaceTrusted() { return false; } });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tawait (<TestExtensionEnablementService>testObject).waitUntilInitialized();\n\n\t\tassert.strictEqual(testObject.getEnablementState(installed[0]), EnablementState.DisabledByTrustRequirement);\n\t\tassert.strictEqual(testObject.getEnablementState(installed[1]), EnablementState.DisabledByExtensionDependency);\n\t});\n\n\ttest('test extension is not disabled by dependency if it has a dependency that is disabled by extension kind', async () => {\n\t\tinstantiationService.stub(IExtensionManagementServerService, anExtensionManagementServerService(anExtensionManagementServer('vscode-local', instantiationService), anExtensionManagementServer('vscode-remote', instantiationService), null));\n\t\tconst localUIExtension = aLocalExtension2('pub.a', { extensionKind: ['ui'] }, { location: URI.file(`pub.a`) });\n\t\tconst remoteUIExtension = aLocalExtension2('pub.a', { extensionKind: ['ui'] }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\t\tconst remoteWorkspaceExtension = aLocalExtension2('pub.n', { extensionKind: ['workspace'], extensionDependencies: ['pub.a'] }, { location: URI.file(`pub.a`).with({ scheme: Schemas.vscodeRemote }) });\n\t\tinstalled.push(localUIExtension, remoteUIExtension, remoteWorkspaceExtension);\n\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tawait (<TestExtensionEnablementService>testObject).waitUntilInitialized();\n\n\t\tassert.strictEqual(testObject.getEnablementState(localUIExtension), EnablementState.EnabledGlobally);\n\t\tassert.strictEqual(testObject.getEnablementState(remoteUIExtension), EnablementState.DisabledByExtensionKind);\n\t\tassert.strictEqual(testObject.getEnablementState(remoteWorkspaceExtension), EnablementState.EnabledGlobally);\n\t});\n\n\ttest('test canChangeEnablement return true when extension is disabled by dependency if it has a dependency that is disabled by workspace trust', async () => {\n\t\tinstalled.push(...[aLocalExtension2('pub.a', { main: 'hello.js', capabilities: { untrustedWorkspaces: { supported: false, description: '' } } }), aLocalExtension2('pub.b', { extensionDependencies: ['pub.a'], capabilities: { untrustedWorkspaces: { supported: true } } })]);\n\t\tinstantiationService.stub(IWorkspaceTrustManagementService, <Partial<IWorkspaceTrustManagementService>>{ isWorkspaceTrusted() { return false; } });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tawait (<TestExtensionEnablementService>testObject).waitUntilInitialized();\n\n\t\tassert.ok(testObject.canChangeEnablement(installed[1]));\n\t});\n\n\ttest('test extension is not disabled by dependency even if it has a dependency that is disabled when installed extensions are not set', async () => {\n\t\tawait testObject.setEnablement([aLocalExtension2('pub.a')], EnablementState.DisabledGlobally);\n\n\t\tassert.strictEqual(testObject.getEnablementState(aLocalExtension2('pub.b', { extensionDependencies: ['pub.a'] })), EnablementState.EnabledGlobally);\n\t});\n\n\ttest('test extension is disabled by dependency if it has a dependency that is disabled when all extensions are passed', async () => {\n\t\tinstalled.push(...[aLocalExtension2('pub.a'), aLocalExtension2('pub.b', { extensionDependencies: ['pub.a'] })]);\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tawait (<TestExtensionEnablementService>testObject).waitUntilInitialized();\n\n\t\tawait testObject.setEnablement([installed[0]], EnablementState.DisabledGlobally);\n\n\t\tassert.deepStrictEqual(testObject.getEnablementStates(installed), [EnablementState.DisabledGlobally, EnablementState.DisabledByExtensionDependency]);\n\t});\n\n\ttest('test extension is not disabled when it has a missing dependency', async () => {\n\t\tconst target = aLocalExtension2('pub.b', { extensionDependencies: ['pub.a'] });\n\t\tinstalled.push(target);\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tawait (<TestExtensionEnablementService>testObject).waitUntilInitialized();\n\n\t\tassert.strictEqual(testObject.getEnablementState(target), EnablementState.EnabledGlobally);\n\t});\n\n\ttest('test extension is disabled by invalidity', async () => {\n\t\tconst target = aLocalExtension2('pub.b', {}, { isValid: false });\n\t\tassert.strictEqual(testObject.getEnablementState(target), EnablementState.DisabledByInvalidExtension);\n\t});\n\n\ttest('test extension is disabled by dependency when it has a dependency that is invalid', async () => {\n\t\tconst target = aLocalExtension2('pub.b', { extensionDependencies: ['pub.a'] });\n\t\tinstalled.push(...[target, aLocalExtension2('pub.a', {}, { isValid: false })]);\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tawait (<TestExtensionEnablementService>testObject).waitUntilInitialized();\n\n\t\tassert.strictEqual(testObject.getEnablementState(target), EnablementState.DisabledByExtensionDependency);\n\t});\n\n\ttest('test extension is enabled when its dependency becomes valid', async () => {\n\t\tconst extension = aLocalExtension2('pub.b', { extensionDependencies: ['pub.a'] });\n\t\tinstalled.push(...[extension, aLocalExtension2('pub.a', {}, { isValid: false })]);\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tawait (<TestExtensionEnablementService>testObject).waitUntilInitialized();\n\n\t\tassert.strictEqual(testObject.getEnablementState(extension), EnablementState.DisabledByExtensionDependency);\n\n\t\tconst target = sinon.spy();\n\t\tdisposableStore.add(testObject.onEnablementChanged(target));\n\n\t\tconst validExtension = aLocalExtension2('pub.a');\n\t\tdidInstallEvent.fire([{\n\t\t\tidentifier: validExtension.identifier,\n\t\t\toperation: InstallOperation.Install,\n\t\t\tsource: validExtension.location,\n\t\t\tprofileLocation: validExtension.location,\n\t\t\tlocal: validExtension,\n\t\t}]);\n\n\t\tassert.strictEqual(testObject.getEnablementState(extension), EnablementState.EnabledGlobally);\n\t\tassert.deepStrictEqual((<IExtension>target.args[0][0][0]).identifier, { id: 'pub.b' });\n\t});\n\n\ttest('test override workspace to trusted when getting extensions enablements', async () => {\n\t\tconst extension = aLocalExtension2('pub.a', { main: 'main.js', capabilities: { untrustedWorkspaces: { supported: false, description: 'hello' } } });\n\t\tinstantiationService.stub(IWorkspaceTrustManagementService, <Partial<IWorkspaceTrustManagementService>>{ isWorkspaceTrusted() { return false; } });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\n\t\tassert.strictEqual(testObject.getEnablementStates([extension], { trusted: true })[0], EnablementState.EnabledGlobally);\n\t});\n\n\ttest('test override workspace to not trusted when getting extensions enablements', async () => {\n\t\tconst extension = aLocalExtension2('pub.a', { main: 'main.js', capabilities: { untrustedWorkspaces: { supported: false, description: 'hello' } } });\n\t\tinstantiationService.stub(IWorkspaceTrustManagementService, <Partial<IWorkspaceTrustManagementService>>{ isWorkspaceTrusted() { return true; } });\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\n\t\tassert.strictEqual(testObject.getEnablementStates([extension], { trusted: false })[0], EnablementState.DisabledByTrustRequirement);\n\t});\n\n\ttest('test update extensions enablements on trust change triggers change events for extensions depending on workspace trust', async () => {\n\t\tinstalled.push(...[\n\t\t\taLocalExtension2('pub.a', { main: 'main.js', capabilities: { untrustedWorkspaces: { supported: false, description: 'hello' } } }),\n\t\t\taLocalExtension2('pub.b', { main: 'main.js', capabilities: { untrustedWorkspaces: { supported: true } } }),\n\t\t\taLocalExtension2('pub.c', { main: 'main.js', capabilities: { untrustedWorkspaces: { supported: false, description: 'hello' } } }),\n\t\t\taLocalExtension2('pub.d', { main: 'main.js', capabilities: { untrustedWorkspaces: { supported: true } } }),\n\t\t]);\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tconst target = sinon.spy();\n\t\tdisposableStore.add(testObject.onEnablementChanged(target));\n\n\t\tawait testObject.updateExtensionsEnablementsWhenWorkspaceTrustChanges();\n\t\tassert.strictEqual(target.args[0][0].length, 2);\n\t\tassert.deepStrictEqual((<IExtension>target.args[0][0][0]).identifier, { id: 'pub.a' });\n\t\tassert.deepStrictEqual((<IExtension>target.args[0][0][1]).identifier, { id: 'pub.c' });\n\t});\n\n\ttest('test adding an extension that was disabled', async () => {\n\t\tconst extension = aLocalExtension('pub.a');\n\t\tinstalled.push(extension);\n\t\ttestObject = disposableStore.add(new TestExtensionEnablementService(instantiationService));\n\t\tawait testObject.setEnablement([extension], EnablementState.DisabledGlobally);\n\n\t\tconst target = sinon.spy();\n\t\tdisposableStore.add(testObject.onEnablementChanged(target));\n\t\tdidChangeProfileExtensionsEvent.fire({ added: [extension], removed: [] });\n\n\t\tassert.ok(!testObject.isEnabled(extension));\n\t\tassert.strictEqual(testObject.getEnablementState(extension), EnablementState.DisabledGlobally);\n\t\tassert.strictEqual(target.args[0][0].length, 1);\n\t\tassert.deepStrictEqual((<IExtension>target.args[0][0][0]).identifier, { id: 'pub.a' });\n\t});\n\n});\n\nfunction anExtensionManagementServer(authority: string, instantiationService: TestInstantiationService): IExtensionManagementServer {\n\treturn {\n\t\tid: authority,\n\t\tlabel: authority,\n\t\textensionManagementService: instantiationService.get(IExtensionManagementService) as IProfileAwareExtensionManagementService,\n\t};\n}\n\nfunction aMultiExtensionManagementServerService(instantiationService: TestInstantiationService): IExtensionManagementServerService {\n\tconst localExtensionManagementServer = anExtensionManagementServer('vscode-local', instantiationService);\n\tconst remoteExtensionManagementServer = anExtensionManagementServer('vscode-remote', instantiationService);\n\treturn anExtensionManagementServerService(localExtensionManagementServer, remoteExtensionManagementServer, null);\n}\n\nexport function anExtensionManagementServerService(localExtensionManagementServer: IExtensionManagementServer | null, remoteExtensionManagementServer: IExtensionManagementServer | null, webExtensionManagementServer: IExtensionManagementServer | null): IExtensionManagementServerService {\n\treturn {\n\t\t_serviceBrand: undefined,\n\t\tlocalExtensionManagementServer,\n\t\tremoteExtensionManagementServer,\n\t\twebExtensionManagementServer,\n\t\tgetExtensionManagementServer: (extension: IExtension) => {\n\t\t\tif (extension.location.scheme === Schemas.file) {\n\t\t\t\treturn localExtensionManagementServer;\n\t\t\t}\n\t\t\tif (extension.location.scheme === Schemas.vscodeRemote) {\n\t\t\t\treturn remoteExtensionManagementServer;\n\t\t\t}\n\t\t\treturn webExtensionManagementServer;\n\t\t},\n\t\tgetExtensionInstallLocation(extension: IExtension): ExtensionInstallLocation | null {\n\t\t\tconst server = this.getExtensionManagementServer(extension);\n\t\t\treturn server === remoteExtensionManagementServer ? ExtensionInstallLocation.Remote\n\t\t\t\t: server === webExtensionManagementServer ? ExtensionInstallLocation.Web\n\t\t\t\t\t: ExtensionInstallLocation.Local;\n\t\t}\n\t};\n}\n\nfunction aLocalExtension(id: string, contributes?: IExtensionContributions, type?: ExtensionType): ILocalExtension {\n\treturn aLocalExtension2(id, contributes ? { contributes } : {}, isUndefinedOrNull(type) ? {} : { type });\n}\n\nfunction aLocalExtension2(id: string, manifest: Partial<IExtensionManifest> = {}, properties: any = {}): ILocalExtension {\n\tconst [publisher, name] = id.split('.');\n\tmanifest = { name, publisher, ...manifest };\n\tproperties = {\n\t\tidentifier: { id },\n\t\tlocation: URI.file(`pub.${name}`),\n\t\tgalleryIdentifier: { id, uuid: undefined },\n\t\ttype: ExtensionType.User,\n\t\t...properties,\n\t\tisValid: properties.isValid ?? true,\n\t};\n\tproperties.isBuiltin = properties.type === ExtensionType.System;\n\treturn <ILocalExtension>Object.create({ manifest, ...properties });\n}\n"],
  "mappings": ";;AAIA,OAAO,YAAY;AACnB,YAAY,WAAW;AACvB,SAAS,6BAA6B,4BAA4B,iBAAiB,uBAAuB,wBAAwB,yBAAyB,4BAA4B,wBAAwB;AAC/M,SAAS,sCAAsC,iBAAiB,mCAAmC,4BAA4B,sCAAsC,0BAA0B,yCAAyC,6BAA6B;AACrQ,SAAS,kCAAkC;AAC3C,SAAS,gCAAgC;AACzC,SAAS,eAAe;AACxB,SAAS,YAAY,0BAA0B,sBAAsB;AACrE,SAAS,oCAAoC;AAC7C,SAAS,iBAAiB,8BAA8B;AACxD,SAAS,yBAAyB,eAAe,YAAY,0BAA0B;AACvF,SAAS,yBAAyB;AAClC,SAAS,yBAAyB;AAClC,SAAS,6BAA6B;AACtC,SAAS,WAAW;AACpB,SAAS,eAAe;AACxB,SAAS,gCAAgC;AACzC,SAAS,4BAA4B;AACrC,SAAS,wCAAwC;AACjD,SAAS,6BAA6B,kCAAkC;AACxE,SAAS,sCAAsC;AAC/C,SAAS,yBAAyB;AAClC,SAAS,4BAA4B;AACrC,SAAS,+BAA+B;AACxC,SAAS,oBAAoB;AAC7B,SAAS,YAAY;AACrB,SAAS,+BAA+B;AACxC,SAAS,kCAAkC,+BAA+B,oCAAoC;AAC9G,SAAS,oCAAoC,2CAA2C;AACxF,SAAS,oBAAoB,oBAAoB,qCAAqC,2CAA2C;AACjI,SAAS,qBAAqB;AAC9B,SAAS,kCAAkC;AAC3C,SAAS,aAAa,sBAAsB;AAC5C,SAAS,uBAAuB;AAChC,SAAS,+CAA+C;AACxD,SAAS,oBAAoB;AAC7B,SAAS,mBAAmB;AAC5B,SAAS,uBAAuB;AAEhC,SAAS,qBAAqB,sBAAgD,iBAAmD;AAChI,MAAI,UAAU,qBAAqB,IAAI,eAAe;AACtD,MAAI,CAAC,SAAS;AACb,QAAI,0BAA0B,qBAAqB,IAAI,wBAAwB;AAC/E,QAAI,CAAC,yBAAyB;AAC7B,gCAA0B,qBAAqB,KAAK,0BAAoD;AAAA,QACvG,mBAAmB,6BAAM,eAAe,QAArB;AAAA,QACnB,cAAc,6BAAM,eAAN;AAAA,MACf,CAAC;AAAA,IACF;AACA,cAAU,qBAAqB,KAAK,iBAAiB,gBAAgB,IAAI,IAAI,uBAAuB,CAAC,CAAC;AAAA,EACvG;AACA,SAAO;AACR;AAbS;AAeF,MAAM,uCAAuC,2BAA2B;AAAA,EA1D/E,OA0D+E;AAAA;AAAA;AAAA,EAC9E,YAAY,sBAAgD;AAC3D,UAAM,cAAc,IAAI,gBAAgB;AACxC,UAAM,iBAAiB,qBAAqB,sBAAsB,WAAW;AAC7E,UAAM,mCAAmC,qBAAqB,IAAI,iCAAiC,KAClG,qBAAqB,KAAK,mCAAmC,mCAAmC;AAAA,MAC/F,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,4BAAqE;AAAA,QACpE,oBAAoB,YAAY,IAAI,IAAI,QAA+B,CAAC,EAAE;AAAA,QAC1E,wBAAwB,YAAY,IAAI,IAAI,QAA2C,CAAC,EAAE;AAAA,QAC1F,sBAAsB,YAAY,IAAI,IAAI,QAAiC,CAAC,EAAE;AAAA,QAC9E,yBAAyB,YAAY,IAAI,IAAI,QAAoC,CAAC,EAAE;AAAA,QACpF,oBAAoB,YAAY,IAAI,IAAI,QAA+B,CAAC,EAAE;AAAA,QAC1E,8BAA8B,YAAY,IAAI,IAAI,QAAoC,CAAC,EAAE;AAAA,MAC1F;AAAA,IACD,GAAG,MAAM,IAAI,CAAC;AACf,UAAM,6BAA6B,YAAY,IAAI,qBAAqB,eAAe,0BAA0B,CAAC;AAClH,UAAM,sCAAsC,qBAAqB,IAAI,oCAAoC,KAAK,qBAAqB,KAAK,sCAAsC,0BAA0B;AACxM,UAAM,kCAAkC,qBAAqB,IAAI,gCAAgC,KAAK,qBAAqB,KAAK,kCAAkC,YAAY,IAAI,IAAI,oCAAoC,CAAC,CAAC;AAC5N;AAAA,MACC;AAAA,MACA,YAAY,IAAI,IAAI,iCAAiC,gBAAgB,0BAA0B,CAAC;AAAA,MAChG,qBAAqB,IAAI,wBAAwB,KAAK,IAAI,mBAAmB;AAAA,MAC7E,qBAAqB,IAAI,4BAA4B,KAAK,qBAAqB,KAAK,8BAA8B,CAAC,CAAC;AAAA,MACpH;AAAA,MACA,qBAAqB,IAAI,qBAAqB;AAAA,MAC9C;AAAA,MACA,qBAAqB,IAAI,8BAA8B,KAAK,qBAAqB,KAAK,gCAAyE,EAAE,YAAY;AAAE,eAAO;AAAA,MAAO,EAAE,CAAC;AAAA,MAChM,qBAAqB,IAAI,2BAA2B,KAAK,qBAAqB,KAAK,6BAA6B,0BAA0B;AAAA,MAC1I,qBAAqB,IAAI,iBAAiB,KAAK,qBAAqB,KAAK,mBAAmB,YAAY,IAAI,IAAI,qBAAqB,CAAC,CAAC;AAAA,MACvI,qBAAqB,IAAI,oBAAoB,KAAK,qBAAqB,KAAK,sBAAsB,IAAI,wBAAwB,CAAC;AAAA,MAC/H,qBAAqB,IAAI,YAAY;AAAA,MACrC,IAAI,cAAc,KAA8B,EAAE;AAAA,QAAW,qBAAqB;AAAE,iBAAO;AAAA,QAAO;AAAA,MAAE;AAAA,MACpG;AAAA,MACA,IAAI,cAAc,KAAoC,EAAE;AAAA,QAAW,sBAAsB,SAA0D;AAAE,iBAAO,QAAQ,QAAQ,IAAI;AAAA,QAAG;AAAA,MAAE;AAAA,MACrL,qBAAqB,IAAI,mCAAmC,KAAK,qBAAqB,KAAK,qCAAqC,YAAY,IAAI,IAAI,mCAAmC,oBAAoB,IAAI,yBAAyB,GAAG,IAAI,oCAAoC,GAAG,IAAI,eAAe,CAAC,CAAC,CAAC;AAAA,MAC5S;AAAA,IACD;AACA,SAAK,UAAU,WAAW;AAAA,EAC3B;AAAA,EAEA,MAAa,uBAAsC;AAClD,UAAM,KAAK,kBAAkB,gBAAgB;AAAA,EAC9C;AAAA,EAEO,QAAc;AACpB,QAAI,aAAa,KAAK,iCAAiC,sBAAsB;AAC7E,eAAW,KAAK,KAAK,gCAAgC,GAAG;AACvD,UAAI,CAAC,WAAW,KAAK,OAAK,kBAAkB,GAAG,CAAC,CAAC,GAAG;AACnD,mBAAW,KAAK,CAAC;AAAA,MAClB;AAAA,IACD;AACA,UAAM,6BAA6B,KAAK,+BAA+B;AACvE,QAAI,2BAA2B,QAAQ;AACtC,mBAAa,WAAW,OAAO,OAAK,CAAC,2BAA2B,KAAK,OAAK,kBAAkB,GAAG,CAAC,CAAC,CAAC;AAAA,IACnG;AACA,eAAW,QAAQ,OAAK,KAAK,cAAc,CAAC,gBAAgB,EAAE,EAAE,CAAC,GAAG,gBAAgB,eAAe,CAAC;AAAA,EACrG;AACD;AAEA,MAAM,mCAAmC,MAAM;AAE9C,QAAM,kBAAkB,wCAAwC;AAEhE,MAAI;AACJ,MAAI;AAEJ,QAAM,kBAAkB,IAAI,QAA2C;AACvE,QAAM,oBAAoB,IAAI,QAAoC;AAClE,QAAM,kCAAkC,IAAI,QAA+B;AAC3E,QAAM,YAA+B,CAAC;AAEtC,QAAM,MAAM;AACX,cAAU,OAAO,GAAG,UAAU,MAAM;AACpC,2BAAuB,gBAAgB,IAAI,IAAI,yBAAyB,CAAC;AACzE,yBAAqB,KAAK,cAAc,gBAAgB,IAAI,IAAI,YAAY,IAAI,eAAe,CAAC,CAAC,CAAC;AAClG,yBAAqB,KAAK,iBAAiB,kBAAkB;AAC7D,yBAAqB,KAAK,uBAAuB,IAAI,yBAAyB,CAAC;AAC/E,yBAAqB,KAAK,0BAA0B,IAAI,mBAAmB,CAAC;AAC5E,yBAAqB,KAAK,mCAAmC,mCAAmC;AAAA,MAC/F,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,4BAAqE;AAAA,QACpE,wBAAwB,gBAAgB;AAAA,QACxC,yBAAyB,kBAAkB;AAAA,QAC3C,oBAAoB,gCAAgC;AAAA,QACpD,cAAc,6BAAM,QAAQ,QAAQ,SAAS,GAA/B;AAAA,MACf;AAAA,IACD,GAAG,MAAM,IAAI,CAAC;AACd,yBAAqB,KAAK,aAAa,cAAc;AACrD,yBAAqB,KAAK,sCAAsC,gBAAgB,IAAI,qBAAqB,eAAe,0BAA0B,CAAC,CAAC;AACpJ,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AAAA,EAC1F,CAAC;AAED,OAAK,sCAAsC,YAAY;AACtD,UAAM,YAAY,gBAAgB,OAAO;AACzC,UAAM,WAAW,cAAc,CAAC,SAAS,GAAG,gBAAgB,gBAAgB;AAC5E,WAAO,GAAG,CAAC,WAAW,UAAU,SAAS,CAAC;AAC1C,WAAO,YAAY,WAAW,mBAAmB,SAAS,GAAG,gBAAgB,gBAAgB;AAAA,EAC9F,CAAC;AAED,OAAK,mEAAmE,MAAM;AAC7E,WAAO,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,gBAAgB,EAC1F,KAAK,WAAS,OAAO,GAAG,KAAK,CAAC;AAAA,EACjC,CAAC;AAED,OAAK,gEAAgE,YAAY;AAChF,UAAM,SAAS,MAAM,IAAI;AACzB,oBAAgB,IAAI,WAAW,oBAAoB,MAAM,CAAC;AAC1D,UAAM,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,gBAAgB;AAC3F,WAAO,GAAG,OAAO,UAAU;AAC3B,WAAO,gBAA6B,OAAO,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,YAAY,EAAE,IAAI,QAAQ,CAAC;AAAA,EACtF,CAAC;AAED,OAAK,0EAA0E,MAAM;AACpF,WAAO,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,gBAAgB,EAC1F,KAAK,MAAM,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,gBAAgB,CAAC,EACjG,KAAK,WAAS,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;AAAA,EACrC,CAAC;AAED,OAAK,6CAA6C,MAAM;AACvD,WAAO,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,gBAAgB,EAC1F,KAAK,MAAM,OAAO,YAAY,WAAW,mBAAmB,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,gBAAgB,CAAC;AAAA,EAC3H,CAAC;AAED,OAAK,4CAA4C,MAAM;AACtD,WAAO,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,gBAAgB,EAC1F,KAAK,MAAM,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,eAAe,CAAC,EAChG,KAAK,MAAM,OAAO,YAAY,WAAW,mBAAmB,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,eAAe,CAAC;AAAA,EAC1H,CAAC;AAED,OAAK,2CAA2C,YAAY;AAC3D,UAAM,YAAY,gBAAgB,OAAO;AACzC,UAAM,WAAW,cAAc,CAAC,SAAS,GAAG,gBAAgB,iBAAiB;AAC7E,WAAO,GAAG,CAAC,WAAW,UAAU,SAAS,CAAC;AAC1C,WAAO,YAAY,WAAW,mBAAmB,SAAS,GAAG,gBAAgB,iBAAiB;AAAA,EAC/F,CAAC;AAED,OAAK,oEAAoE,MAAM;AAC9E,WAAO,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,iBAAiB,EAC3F,KAAK,WAAS,OAAO,GAAG,KAAK,CAAC;AAAA,EACjC,CAAC;AAED,OAAK,+EAA+E,MAAM;AACzF,WAAO,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,iBAAiB,EAC3F,KAAK,MAAM,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,iBAAiB,CAAC,EAClG,KAAK,WAAS,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;AAAA,EACrC,CAAC;AAED,OAAK,8CAA8C,MAAM;AACxD,WAAO,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,iBAAiB,EAC3F,KAAK,MAAM,OAAO,YAAY,WAAW,mBAAmB,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,iBAAiB,CAAC;AAAA,EAC5H,CAAC;AAED,OAAK,2DAA2D,MAAM;AACrE,WAAO,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,gBAAgB,EAC1F,KAAK,MAAM,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,iBAAiB,CAAC,EAClG,KAAK,MAAM,OAAO,YAAY,WAAW,mBAAmB,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,iBAAiB,CAAC;AAAA,EAC5H,CAAC;AAED,OAAK,6CAA6C,MAAM;AACvD,WAAO,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,iBAAiB,EAC3F,KAAK,MAAM,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,gBAAgB,CAAC,EACjG,KAAK,MAAM,OAAO,YAAY,WAAW,mBAAmB,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,gBAAgB,CAAC;AAAA,EAC3H,CAAC;AAED,OAAK,mEAAmE,MAAM;AAC7E,WAAO,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,gBAAgB,EAC1F,KAAK,MAAM,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,iBAAiB,CAAC,EAClG,KAAK,MAAM,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,gBAAgB,CAAC,EACjG,KAAK,MAAM,OAAO,YAAY,WAAW,mBAAmB,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,gBAAgB,CAAC;AAAA,EAC3H,CAAC;AAED,OAAK,iFAAiF,MAAM;AAC3F,WAAO,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,iBAAiB,EAC3F,KAAK,MAAM,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,gBAAgB,CAAC,EACjG,KAAK,MAAM,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,iBAAiB,CAAC,EAClG,KAAK,MAAM,OAAO,YAAY,WAAW,mBAAmB,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,iBAAiB,CAAC;AAAA,EAC5H,CAAC;AAED,OAAK,4EAA4E,MAAM;AACtF,WAAO,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,iBAAiB,EAC3F,KAAK,MAAM,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,gBAAgB,CAAC,EACjG,KAAK,MAAM,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,gBAAgB,CAAC,EACjG,KAAK,MAAM,OAAO,YAAY,WAAW,mBAAmB,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,gBAAgB,CAAC;AAAA,EAC3H,CAAC;AAED,OAAK,6EAA6E,MAAM;AACvF,WAAO,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,iBAAiB,EAC3F,KAAK,MAAM,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,gBAAgB,CAAC,EACjG,KAAK,MAAM,OAAO,YAAY,WAAW,mBAAmB,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,gBAAgB,CAAC;AAAA,EAC3H,CAAC;AAED,OAAK,2EAA2E,MAAM;AACrF,WAAO,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,iBAAiB,EAC3F,KAAK,MAAM,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,gBAAgB,CAAC,EACjG,KAAK,MAAM,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,eAAe,CAAC,EAChG,KAAK,MAAM,OAAO,YAAY,WAAW,mBAAmB,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,eAAe,CAAC;AAAA,EAC1H,CAAC;AAED,OAAK,4EAA4E,MAAM;AACtF,WAAO,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,iBAAiB,EAC3F,KAAK,MAAM,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,eAAe,CAAC,EAChG,KAAK,MAAM,OAAO,YAAY,WAAW,mBAAmB,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,eAAe,CAAC;AAAA,EAC1H,CAAC;AAED,OAAK,6DAA6D,YAAY;AAC7E,UAAM,YAAY,gBAAgB,OAAO;AACzC,UAAM,WAAW,cAAc,CAAC,SAAS,GAAG,gBAAgB,iBAAiB;AAC7E,UAAM,WAAW,cAAc,CAAC,SAAS,GAAG,gBAAgB,gBAAgB;AAC5E,WAAO,GAAG,CAAC,WAAW,UAAU,SAAS,CAAC;AAC1C,WAAO,YAAY,WAAW,mBAAmB,SAAS,GAAG,gBAAgB,gBAAgB;AAAA,EAC9F,CAAC;AAED,OAAK,qFAAqF,MAAM;AAC/F,WAAO,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,iBAAiB,EAC3F,KAAK,MAAM,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,gBAAgB,CAAC,EACjG,KAAK,WAAS,OAAO,GAAG,KAAK,CAAC;AAAA,EACjC,CAAC;AAED,OAAK,sFAAsF,MAAM;AAChG,UAAM,SAAS,MAAM,IAAI;AACzB,WAAO,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,iBAAiB,EAC3F,KAAK,MAAM,gBAAgB,IAAI,WAAW,oBAAoB,MAAM,CAAC,CAAC,EACtE,KAAK,MAAM,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,gBAAgB,CAAC,EACjG,KAAK,MAAM;AACX,aAAO,GAAG,OAAO,UAAU;AAC3B,aAAO,gBAA6B,OAAO,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,YAAY,EAAE,IAAI,QAAQ,CAAC;AAAA,IACtF,CAAC;AAAA,EACH,CAAC;AAED,OAAK,6DAA6D,YAAY;AAC7E,UAAM,YAAY,gBAAgB,OAAO;AACzC,UAAM,WAAW,cAAc,CAAC,SAAS,GAAG,gBAAgB,gBAAgB;AAC5E,UAAM,WAAW,cAAc,CAAC,SAAS,GAAG,gBAAgB,iBAAiB;AAC7E,WAAO,GAAG,CAAC,WAAW,UAAU,SAAS,CAAC;AAC1C,WAAO,YAAY,WAAW,mBAAmB,SAAS,GAAG,gBAAgB,iBAAiB;AAAA,EAC/F,CAAC;AAED,OAAK,qFAAqF,MAAM;AAC/F,WAAO,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,gBAAgB,EAC1F,KAAK,MAAM,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,iBAAiB,CAAC,EAClG,KAAK,WAAS,OAAO,GAAG,KAAK,CAAC;AAAA,EACjC,CAAC;AAED,OAAK,uFAAuF,MAAM;AACjG,UAAM,SAAS,MAAM,IAAI;AACzB,WAAO,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,gBAAgB,EAC1F,KAAK,MAAM,gBAAgB,IAAI,WAAW,oBAAoB,MAAM,CAAC,CAAC,EACtE,KAAK,MAAM,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,iBAAiB,CAAC,EAClG,KAAK,MAAM;AACX,aAAO,GAAG,OAAO,UAAU;AAC3B,aAAO,gBAA6B,OAAO,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,YAAY,EAAE,IAAI,QAAQ,CAAC;AAAA,IACtF,CAAC;AAAA,EACH,CAAC;AAED,OAAK,mFAAmF,MAAM;AAC7F,yBAAqB,KAAK,0BAA0B,qBAAqB,eAAe,KAAK;AAC7F,WAAO,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,iBAAiB,EAC3F,KAAK,MAAM,OAAO,KAAK,uBAAuB,GAAG,WAAS,OAAO,GAAG,KAAK,CAAC;AAAA,EAC7E,CAAC;AAED,OAAK,qCAAqC,YAAY;AACrD,UAAM,YAAY,gBAAgB,OAAO;AACzC,UAAM,WAAW,cAAc,CAAC,SAAS,GAAG,gBAAgB,gBAAgB;AAC5E,UAAM,WAAW,cAAc,CAAC,SAAS,GAAG,gBAAgB,eAAe;AAC3E,WAAO,GAAG,WAAW,UAAU,SAAS,CAAC;AACzC,WAAO,YAAY,WAAW,mBAAmB,SAAS,GAAG,gBAAgB,eAAe;AAAA,EAC7F,CAAC;AAED,OAAK,2DAA2D,YAAY;AAC3E,UAAM,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,gBAAgB;AAC3F,UAAM,QAAQ,MAAM,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,eAAe;AACxG,WAAO,YAAY,MAAM,CAAC,GAAG,IAAI;AAAA,EAClC,CAAC;AAED,OAAK,2DAA2D,MAAM;AACrE,UAAM,SAAS,MAAM,IAAI;AACzB,WAAO,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,gBAAgB,EAC1F,KAAK,MAAM,gBAAgB,IAAI,WAAW,oBAAoB,MAAM,CAAC,CAAC,EACtE,KAAK,MAAM,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,eAAe,CAAC,EAChG,KAAK,MAAM;AACX,aAAO,GAAG,OAAO,UAAU;AAC3B,aAAO,gBAA6B,OAAO,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,YAAY,EAAE,IAAI,QAAQ,CAAC;AAAA,IACtF,CAAC;AAAA,EACH,CAAC;AAED,OAAK,+EAA+E,MAAM;AACzF,WAAO,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,eAAe,EACzF,KAAK,WAAS,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;AAAA,EACrC,CAAC;AAED,OAAK,0CAA0C,YAAY;AAC1D,UAAM,YAAY,gBAAgB,OAAO;AACzC,UAAM,WAAW,cAAc,CAAC,SAAS,GAAG,gBAAgB,iBAAiB;AAC7E,UAAM,WAAW,cAAc,CAAC,SAAS,GAAG,gBAAgB,gBAAgB;AAC5E,WAAO,GAAG,WAAW,UAAU,SAAS,CAAC;AACzC,WAAO,YAAY,WAAW,mBAAmB,SAAS,GAAG,gBAAgB,gBAAgB;AAAA,EAC9F,CAAC;AAED,OAAK,gEAAgE,MAAM;AAC1E,WAAO,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,iBAAiB,EAC3F,KAAK,MAAM,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,gBAAgB,CAAC,EACjG,KAAK,WAAS,OAAO,GAAG,KAAK,CAAC;AAAA,EACjC,CAAC;AAED,OAAK,gEAAgE,MAAM;AAC1E,UAAM,SAAS,MAAM,IAAI;AACzB,WAAO,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,iBAAiB,EAC3F,KAAK,MAAM,gBAAgB,IAAI,WAAW,oBAAoB,MAAM,CAAC,CAAC,EACtE,KAAK,MAAM,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,gBAAgB,CAAC,EACjG,KAAK,MAAM;AACX,aAAO,GAAG,OAAO,UAAU;AAC3B,aAAO,gBAA6B,OAAO,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,YAAY,EAAE,IAAI,QAAQ,CAAC;AAAA,IACtF,CAAC;AAAA,EACH,CAAC;AAED,OAAK,qFAAqF,MAAM;AAC/F,WAAO,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,gBAAgB,EAC1F,KAAK,WAAS,OAAO,GAAG,KAAK,CAAC;AAAA,EACjC,CAAC;AAED,OAAK,kFAAkF,YAAY;AAClG,UAAM,YAAY,gBAAgB,OAAO;AACzC,UAAM,WAAW,cAAc,CAAC,SAAS,GAAG,gBAAgB,iBAAiB;AAC7E,UAAM,WAAW,cAAc,CAAC,SAAS,GAAG,gBAAgB,gBAAgB;AAC5E,UAAM,WAAW,cAAc,CAAC,SAAS,GAAG,gBAAgB,gBAAgB;AAC5E,WAAO,GAAG,WAAW,UAAU,SAAS,CAAC;AACzC,WAAO,YAAY,WAAW,mBAAmB,SAAS,GAAG,gBAAgB,gBAAgB;AAAA,EAC9F,CAAC;AAED,OAAK,6EAA6E,YAAY;AAC7F,UAAM,YAAY,gBAAgB,OAAO;AACzC,UAAM,WAAW,cAAc,CAAC,SAAS,GAAG,gBAAgB,gBAAgB;AAC5E,UAAM,WAAW,cAAc,CAAC,SAAS,GAAG,gBAAgB,iBAAiB;AAC7E,UAAM,WAAW,cAAc,CAAC,SAAS,GAAG,gBAAgB,gBAAgB;AAC5E,UAAM,WAAW,cAAc,CAAC,SAAS,GAAG,gBAAgB,eAAe;AAC3E,WAAO,GAAG,WAAW,UAAU,SAAS,CAAC;AACzC,WAAO,YAAY,WAAW,mBAAmB,SAAS,GAAG,gBAAgB,eAAe;AAAA,EAC7F,CAAC;AAED,OAAK,sDAAsD,YAAY;AACtE,cAAU,KAAK,GAAG,CAAC,iBAAiB,SAAS,EAAE,uBAAuB,CAAC,OAAO,EAAE,CAAC,GAAG,gBAAgB,OAAO,CAAC,CAAC;AAC7G,UAAM,SAAS,UAAU,CAAC;AAC1B,UAAM,MAAM,UAAU,CAAC;AACvB,UAAuC,WAAY,qBAAqB;AACxE,UAAM,WAAW,cAAc,CAAC,KAAK,MAAM,GAAG,gBAAgB,gBAAgB;AAC9E,UAAM,WAAW,cAAc,CAAC,MAAM,GAAG,gBAAgB,eAAe;AACxE,WAAO,GAAG,WAAW,UAAU,MAAM,CAAC;AACtC,WAAO,GAAG,WAAW,UAAU,GAAG,CAAC;AACnC,WAAO,YAAY,WAAW,mBAAmB,MAAM,GAAG,gBAAgB,eAAe;AACzF,WAAO,YAAY,WAAW,mBAAmB,GAAG,GAAG,gBAAgB,eAAe;AAAA,EACvF,CAAC;AAED,OAAK,6FAA6F,YAAY;AAC7G,cAAU,KAAK,GAAG,CAAC,iBAAiB,SAAS,EAAE,uBAAuB,CAAC,OAAO,EAAE,CAAC,GAAG,gBAAgB,SAAS,EAAE,gBAAgB,CAAC,EAAE,IAAI,KAAK,OAAO,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;AAC5J,UAAM,SAAS,UAAU,CAAC;AAC1B,UAAuC,WAAY,qBAAqB;AACxE,UAAM,WAAW,cAAc,CAAC,MAAM,GAAG,gBAAgB,iBAAiB;AAC1E,UAAM,WAAW,cAAc,CAAC,MAAM,GAAG,gBAAgB,gBAAgB;AACzE,WAAO,GAAG,WAAW,UAAU,MAAM,CAAC;AACtC,WAAO,YAAY,WAAW,mBAAmB,MAAM,GAAG,gBAAgB,gBAAgB;AAAA,EAC3F,CAAC;AAED,OAAK,+EAA+E,YAAY;AAC/F,yBAAqB,KAAK,mCAAmC,mCAAmC,4BAA4B,gBAAgB,oBAAoB,GAAG,4BAA4B,iBAAiB,oBAAoB,GAAG,IAAI,CAAC;AAC5O,UAAM,6BAA6B,iBAAiB,SAAS,EAAE,eAAe,CAAC,WAAW,EAAE,GAAG,EAAE,UAAU,IAAI,KAAK,OAAO,EAAE,CAAC;AAC9H,UAAM,2BAA2B,iBAAiB,SAAS,EAAE,eAAe,CAAC,WAAW,GAAG,uBAAuB,CAAC,OAAO,EAAE,GAAG,EAAE,UAAU,IAAI,KAAK,OAAO,EAAE,KAAK,EAAE,QAAQ,QAAQ,aAAa,CAAC,EAAE,CAAC;AACrM,UAAM,8BAA8B,iBAAiB,SAAS,EAAE,eAAe,CAAC,WAAW,EAAE,GAAG,EAAE,UAAU,IAAI,KAAK,OAAO,EAAE,KAAK,EAAE,QAAQ,QAAQ,aAAa,CAAC,EAAE,CAAC;AACtK,cAAU,KAAK,4BAA4B,0BAA0B,2BAA2B;AAEhG,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,UAAuC,WAAY,qBAAqB;AAExE,UAAM,WAAW,cAAc,CAAC,wBAAwB,GAAG,gBAAgB,gBAAgB;AAC3F,UAAM,WAAW,cAAc,CAAC,wBAAwB,GAAG,gBAAgB,eAAe;AAC1F,WAAO,GAAG,WAAW,UAAU,wBAAwB,CAAC;AACxD,WAAO,YAAY,WAAW,mBAAmB,wBAAwB,GAAG,gBAAgB,eAAe;AAAA,EAC5G,CAAC;AAED,OAAK,2DAA2D,YAAY;AAC3E,cAAU,KAAK,GAAG,CAAC,iBAAiB,SAAS,EAAE,eAAe,CAAC,OAAO,EAAE,CAAC,GAAG,gBAAgB,OAAO,CAAC,CAAC;AACrG,UAAM,SAAS,UAAU,CAAC;AAC1B,UAAM,MAAM,UAAU,CAAC;AACvB,UAAM,WAAW,cAAc,CAAC,KAAK,MAAM,GAAG,gBAAgB,gBAAgB;AAC9E,UAAM,WAAW,cAAc,CAAC,MAAM,GAAG,gBAAgB,eAAe;AACxE,WAAO,GAAG,WAAW,UAAU,MAAM,CAAC;AACtC,WAAO,GAAG,WAAW,UAAU,GAAG,CAAC;AACnC,WAAO,YAAY,WAAW,mBAAmB,MAAM,GAAG,gBAAgB,eAAe;AACzF,WAAO,YAAY,WAAW,mBAAmB,GAAG,GAAG,gBAAgB,eAAe;AAAA,EACvF,CAAC;AAED,OAAK,mEAAmE,YAAY;AACnF,UAAM,YAAY,gBAAgB,OAAO;AACzC,cAAU,KAAK,SAAS;AACxB,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AAEzF,UAAM,WAAW,cAAc,CAAC,SAAS,GAAG,gBAAgB,iBAAiB;AAC7E,UAAM,WAAW,cAAc,CAAC,SAAS,GAAG,gBAAgB,gBAAgB;AAC5E,sBAAkB,KAAK,EAAE,YAAY,EAAE,IAAI,QAAQ,GAAG,iBAAiB,KAAM,CAAC;AAE9E,WAAO,GAAG,WAAW,UAAU,SAAS,CAAC;AACzC,WAAO,YAAY,WAAW,mBAAmB,SAAS,GAAG,gBAAgB,eAAe;AAAA,EAC7F,CAAC;AAED,OAAK,8DAA8D,MAAM;AACxE,WAAO,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,gBAAgB,EAC1F,KAAK,MAAM,OAAO,GAAG,CAAC,WAAW,UAAU,gBAAgB,OAAO,CAAC,CAAC,CAAC;AAAA,EACxE,CAAC;AAED,OAAK,kEAAkE,MAAM;AAC5E,WAAO,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,iBAAiB,EAC3F,KAAK,MAAM,OAAO,GAAG,CAAC,WAAW,UAAU,gBAAgB,OAAO,CAAC,CAAC,CAAC;AAAA,EACxE,CAAC;AAED,OAAK,wDAAwD,MAAM;AAClE,WAAO,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,iBAAiB,EAC3F,KAAK,MAAM,WAAW,cAAc,CAAC,gBAAgB,OAAO,CAAC,GAAG,gBAAgB,gBAAgB,CAAC,EACjG,KAAK,MAAM,OAAO,GAAG,WAAW,UAAU,gBAAgB,OAAO,CAAC,CAAC,CAAC;AAAA,EACvE,CAAC;AAED,OAAK,4DAA4D,MAAM;AACtE,WAAO,YAAY,WAAW,oBAAoB,gBAAgB,SAAS,EAAE,eAAe,CAAC,EAAE,YAAY,MAAM,cAAc,CAAC,EAAE,IAAI,UAAU,MAAM,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK;AAAA,EAC9K,CAAC;AAED,OAAK,2DAA2D,MAAM;AACrE,WAAO,YAAY,WAAW,oBAAoB,gBAAgB,SAAS,EAAE,gBAAgB,CAAC,EAAE,IAAI,KAAK,OAAO,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI;AAAA,EACjI,CAAC;AAED,OAAK,8GAA8G,MAAM;AACxH,yBAAqB,KAAK,6BAAmE;AAAA,MAC5F,SAAS,EAAE,0BAA0B,IAAI;AAAA,IAC1C,CAAC;AACD,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,WAAO,YAAY,WAAW,oBAAoB,gBAAgB,SAAS,EAAE,gBAAgB,CAAC,EAAE,IAAI,KAAK,OAAO,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI;AAAA,EACjI,CAAC;AAED,OAAK,0HAA0H,MAAM;AACpI,yBAAqB,KAAK,6BAAmE;AAAA,MAC5F,SAAS,EAAE,0BAA0B,IAAI;AAAA,IAC1C,CAAC;AACD,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,WAAO,YAAY,WAAW,oBAAoB,gBAAgB,SAAS,EAAE,gBAAgB,CAAC,EAAE,IAAI,KAAK,OAAO,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI;AAAA,EACjI,CAAC;AAED,OAAK,yHAAyH,MAAM;AACnI,yBAAqB,KAAK,gCAAyE,EAAE,YAAY;AAAE,aAAO;AAAA,IAAM,EAAE,CAAC;AACnI,yBAAqB,KAAK,6BAAmE;AAAA,MAC5F,SAAS,EAAE,0BAA0B,IAAI;AAAA,IAC1C,CAAC;AACD,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,WAAO,YAAY,WAAW,oBAAoB,gBAAgB,SAAS,EAAE,gBAAgB,CAAC,EAAE,IAAI,KAAK,OAAO,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK;AAAA,EAClI,CAAC;AAED,OAAK,iDAAiD,MAAM;AAC3D,WAAO,YAAY,WAAW,6BAA6B,gBAAgB,OAAO,CAAC,GAAG,IAAI;AAAA,EAC3F,CAAC;AAED,OAAK,2EAA2E,MAAM;AACrF,yBAAqB,KAAK,0BAA0B,qBAAqB,eAAe,KAAK;AAC7F,WAAO,YAAY,WAAW,6BAA6B,gBAAgB,OAAO,CAAC,GAAG,KAAK;AAAA,EAC5F,CAAC;AAED,OAAK,qEAAqE,MAAM;AAC/E,WAAO,YAAY,WAAW,6BAA6B,gBAAgB,SAAS,EAAE,gBAAgB,CAAC,EAAE,IAAI,KAAK,OAAO,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK;AAAA,EAC3I,CAAC;AAED,OAAK,qFAAqF,MAAM;AAC/F,yBAAqB,KAAK,8BAA8B,EAAE,mBAAmB,KAAK,CAAC;AACnF,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,WAAO,YAAY,WAAW,oBAAoB,gBAAgB,OAAO,CAAC,GAAG,KAAK;AAAA,EACnF,CAAC;AAED,OAAK,uFAAuF,MAAM;AACjG,yBAAqB,KAAK,8BAA8B,EAAE,mBAAmB,CAAC,OAAO,EAAE,CAAC;AACxF,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,WAAO,YAAY,WAAW,oBAAoB,gBAAgB,OAAO,CAAC,GAAG,KAAK;AAAA,EACnF,CAAC;AAED,OAAK,0GAA0G,MAAM;AACpH,yBAAqB,KAAK,8BAA8B,EAAE,mBAAmB,KAAK,CAAC;AACnF,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,UAAM,YAAY,gBAAgB,SAAS,QAAW,cAAc,MAAM;AAC1E,WAAO,YAAY,WAAW,oBAAoB,SAAS,GAAG,IAAI;AAAA,EACnE,CAAC;AAED,OAAK,wGAAwG,MAAM;AAClH,yBAAqB,KAAK,8BAA8B,EAAE,mBAAmB,CAAC,OAAO,EAAE,CAAC;AACxF,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,UAAM,YAAY,gBAAgB,SAAS,QAAW,cAAc,MAAM;AAC1E,WAAO,GAAG,CAAC,WAAW,oBAAoB,SAAS,CAAC;AAAA,EACrD,CAAC;AAED,OAAK,2DAA2D,YAAY;AAC3E,UAAM,YAAY,gBAAgB,OAAO;AACzC,cAAU,KAAK,SAAS;AAExB,yBAAqB,KAAK,8BAA8B,EAAE,mBAAmB,CAAC,OAAO,EAAE,CAAC;AACxF,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AAEzF,WAAO,GAAG,CAAC,WAAW,UAAU,SAAS,CAAC;AAC1C,WAAO,gBAAgB,WAAW,mBAAmB,SAAS,GAAG,gBAAgB,qBAAqB;AAAA,EACvG,CAAC;AAED,OAAK,kEAAkE,YAAY;AAClF,UAAM,YAAY,gBAAgB,OAAO;AACzC,cAAU,KAAK,SAAS;AAExB,yBAAqB,KAAK,8BAA8B,EAAE,kBAAqC,CAAC,OAAO,EAAE,CAAC;AAC1G,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AAEzF,WAAO,GAAG,WAAW,UAAU,SAAS,CAAC;AACzC,WAAO,gBAAgB,WAAW,mBAAmB,SAAS,GAAG,gBAAgB,eAAe;AAAA,EACjG,CAAC;AAED,OAAK,mEAAmE,YAAY;AACnF,UAAM,YAAY,gBAAgB,OAAO;AACzC,cAAU,KAAK,SAAS;AAExB,UAAM,WAAW,cAAc,CAAC,SAAS,GAAG,gBAAgB,gBAAgB;AAC5E,yBAAqB,KAAK,8BAA8B,EAAE,kBAAqC,CAAC,OAAO,EAAE,CAAC;AAC1G,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AAEzF,WAAO,GAAG,WAAW,UAAU,SAAS,CAAC;AACzC,WAAO,gBAAgB,WAAW,mBAAmB,SAAS,GAAG,gBAAgB,gBAAgB;AAAA,EAClG,CAAC;AAED,OAAK,mEAAmE,YAAY;AACnF,UAAM,YAAY,gBAAgB,OAAO;AACzC,cAAU,KAAK,SAAS;AAExB,UAAM,WAAW,cAAc,CAAC,SAAS,GAAG,gBAAgB,gBAAgB;AAC5E,yBAAqB,KAAK,8BAA8B,EAAE,kBAAqC,CAAC,OAAO,EAAE,CAAC;AAC1G,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AAEzF,WAAO,GAAG,WAAW,UAAU,SAAS,CAAC;AACzC,WAAO,gBAAgB,WAAW,mBAAmB,SAAS,GAAG,gBAAgB,oBAAoB;AAAA,EACtG,CAAC;AAED,OAAK,oEAAoE,YAAY;AACpF,UAAM,YAAY,gBAAgB,OAAO;AACzC,cAAU,KAAK,SAAS;AAExB,UAAM,WAAW,cAAc,CAAC,SAAS,GAAG,gBAAgB,iBAAiB;AAC7E,yBAAqB,KAAK,8BAA8B,EAAE,kBAAqC,CAAC,OAAO,EAAE,CAAC;AAC1G,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AAEzF,WAAO,GAAG,WAAW,UAAU,SAAS,CAAC;AACzC,WAAO,gBAAgB,WAAW,mBAAmB,SAAS,GAAG,gBAAgB,oBAAoB;AAAA,EACtG,CAAC;AAED,OAAK,8EAA8E,YAAY;AAC9F,UAAM,YAAY,gBAAgB,OAAO;AACzC,cAAU,KAAK,SAAS;AAExB,eAAW,cAAc,CAAC,SAAS,GAAG,gBAAgB,iBAAiB;AACvE,yBAAqB,KAAK,8BAA8B,EAAE,mBAAmB,MAAM,kBAAqC,CAAC,OAAO,EAAE,CAAC;AACnI,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AAEzF,WAAO,GAAG,CAAC,WAAW,UAAU,SAAS,CAAC;AAC1C,WAAO,gBAAgB,WAAW,mBAAmB,SAAS,GAAG,gBAAgB,qBAAqB;AAAA,EACvG,CAAC;AAED,OAAK,sFAAsF,MAAM;AAChG,yBAAqB,KAAK,8BAA8B,EAAE,kBAAqC,CAAC,OAAO,EAAE,CAAC;AAC1G,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,WAAO,YAAY,WAAW,oBAAoB,gBAAgB,OAAO,CAAC,GAAG,KAAK;AAAA,EACnF,CAAC;AAED,OAAK,yFAAyF,YAAY;AACzG,UAAM,YAAY,iBAAiB,SAAS,EAAE,cAAc,EAAE,mBAAmB,MAAM,EAAE,CAAC;AAC1F,yBAAqB,KAAK,0BAA0B,gBAA4B,EAAE,SAAS,CAAC,EAAE,KAAK,IAAI,KAAK,YAAY,EAAE,KAAM,EAAE,QAAQ,UAAU,CAAE,EAAE,CAAC,EAAE,CAAC;AAC5J,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,WAAO,GAAG,CAAC,WAAW,UAAU,SAAS,CAAC;AAC1C,WAAO,gBAAgB,WAAW,mBAAmB,SAAS,GAAG,gBAAgB,0BAA0B;AAAA,EAC5G,CAAC;AAED,OAAK,kIAAkI,YAAY;AAClJ,yBAAqB,KAAK,mCAAmC,mCAAmC,MAAM,4BAA4B,iBAAiB,oBAAoB,GAAG,4BAA4B,OAAO,oBAAoB,CAAC,CAAC;AACnO,UAAM,YAAY,iBAAiB,SAAS,EAAE,cAAc,EAAE,mBAAmB,MAAM,GAAG,SAAS,aAAa,GAAG,EAAE,UAAU,IAAI,KAAK,OAAO,EAAE,KAAK,EAAE,QAAQ,MAAM,CAAC,EAAE,CAAC;AAC1K,yBAAqB,KAAK,0BAA0B,gBAA4B,EAAE,SAAS,CAAC,EAAE,KAAK,IAAI,KAAK,YAAY,EAAE,KAAM,EAAE,QAAQ,UAAU,CAAE,EAAE,CAAC,EAAE,CAAC;AAC5J,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,WAAO,GAAG,WAAW,UAAU,SAAS,CAAC;AACzC,WAAO,gBAAgB,WAAW,mBAAmB,SAAS,GAAG,gBAAgB,eAAe;AAAA,EACjG,CAAC;AAED,OAAK,sIAAsI,YAAY;AACtJ,yBAAqB,KAAK,mCAAmC,mCAAmC,MAAM,4BAA4B,iBAAiB,oBAAoB,GAAG,4BAA4B,OAAO,oBAAoB,CAAC,CAAC;AACnO,UAAM,YAAY,iBAAiB,SAAS,EAAE,cAAc,EAAE,mBAAmB,MAAM,GAAG,SAAS,aAAa,GAAG,EAAE,UAAU,IAAI,KAAK,OAAO,EAAE,KAAK,EAAE,QAAQ,gBAAgB,CAAC,EAAE,CAAC;AACpL,yBAAqB,KAAK,0BAA0B,gBAA4B,EAAE,SAAS,CAAC,EAAE,KAAK,IAAI,KAAK,YAAY,EAAE,KAAM,EAAE,QAAQ,UAAU,CAAE,EAAE,CAAC,EAAE,CAAC;AAC5J,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,WAAO,GAAG,CAAC,WAAW,UAAU,SAAS,CAAC;AAC1C,WAAO,gBAAgB,WAAW,mBAAmB,SAAS,GAAG,gBAAgB,0BAA0B;AAAA,EAC5G,CAAC;AAED,OAAK,kGAAkG,YAAY;AAClH,yBAAqB,KAAK,mCAAmC,mCAAmC,4BAA4B,gBAAgB,oBAAoB,GAAG,4BAA4B,iBAAiB,oBAAoB,GAAG,IAAI,CAAC;AAC5O,UAAM,mBAAmB,iBAAiB,SAAS,EAAE,MAAM,WAAW,eAAe,CAAC,IAAI,EAAE,GAAG,EAAE,UAAU,IAAI,KAAK,OAAO,EAAE,CAAC;AAC9H,UAAM,oBAAoB,iBAAiB,SAAS,EAAE,MAAM,WAAW,eAAe,CAAC,IAAI,EAAE,GAAG,EAAE,UAAU,IAAI,KAAK,OAAO,EAAE,KAAK,EAAE,QAAQ,gBAAgB,CAAC,EAAE,CAAC;AACjK,UAAM,SAAS,iBAAiB,SAAS,EAAE,MAAM,WAAW,uBAAuB,CAAC,OAAO,EAAE,GAAG,EAAE,UAAU,IAAI,KAAK,OAAO,EAAE,KAAK,EAAE,QAAQ,gBAAgB,CAAC,EAAE,CAAC;AACjK,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AAEzF,cAAU,KAAK,kBAAkB,mBAAmB,MAAM;AAC1D,UAAM,WAAW,cAAc,CAAC,QAAQ,gBAAgB,GAAG,gBAAgB,gBAAgB;AAC3F,UAAM,WAAW,cAAc,CAAC,QAAQ,gBAAgB,GAAG,gBAAgB,eAAe;AAC1F,WAAO,GAAG,WAAW,UAAU,MAAM,CAAC;AACtC,WAAO,GAAG,WAAW,UAAU,gBAAgB,CAAC;AAChD,WAAO,YAAY,WAAW,mBAAmB,MAAM,GAAG,gBAAgB,eAAe;AACzF,WAAO,YAAY,WAAW,mBAAmB,gBAAgB,GAAG,gBAAgB,eAAe;AAAA,EACpG,CAAC;AAED,OAAK,iFAAiF,YAAY;AACjG,yBAAqB,KAAK,mCAAmC,mCAAmC,4BAA4B,gBAAgB,oBAAoB,GAAG,4BAA4B,iBAAiB,oBAAoB,GAAG,IAAI,CAAC;AAC5O,UAAM,mBAAmB,iBAAiB,SAAS,EAAE,MAAM,WAAW,eAAe,CAAC,IAAI,EAAE,GAAG,EAAE,UAAU,IAAI,KAAK,OAAO,EAAE,CAAC;AAC9H,UAAM,oBAAoB,iBAAiB,SAAS,EAAE,MAAM,WAAW,eAAe,CAAC,IAAI,EAAE,GAAG,EAAE,UAAU,IAAI,KAAK,OAAO,EAAE,KAAK,EAAE,QAAQ,gBAAgB,CAAC,EAAE,CAAC;AACjK,UAAM,SAAS,iBAAiB,SAAS,EAAE,MAAM,WAAW,uBAAuB,CAAC,OAAO,EAAE,GAAG,EAAE,UAAU,IAAI,KAAK,OAAO,EAAE,KAAK,EAAE,QAAQ,gBAAgB,CAAC,EAAE,CAAC;AACjK,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AAEzF,cAAU,KAAK,kBAAkB,mBAAmB,MAAM;AAC1D,UAAM,WAAW,cAAc,CAAC,QAAQ,gBAAgB,GAAG,gBAAgB,gBAAgB;AAC3F,UAAM,WAAW,cAAc,CAAC,MAAM,GAAG,gBAAgB,eAAe;AACxE,WAAO,GAAG,WAAW,UAAU,MAAM,CAAC;AACtC,WAAO,GAAG,WAAW,UAAU,gBAAgB,CAAC;AAChD,WAAO,YAAY,WAAW,mBAAmB,MAAM,GAAG,gBAAgB,eAAe;AACzF,WAAO,YAAY,WAAW,mBAAmB,gBAAgB,GAAG,gBAAgB,eAAe;AAAA,EACpG,CAAC;AAED,OAAK,yFAAyF,MAAM;AACnG,UAAM,YAAY,iBAAiB,SAAS,EAAE,cAAc,EAAE,mBAAmB,MAAM,EAAE,CAAC;AAC1F,yBAAqB,KAAK,0BAA0B,gBAA4B,EAAE,SAAS,CAAC,EAAE,KAAK,IAAI,KAAK,YAAY,EAAE,KAAM,EAAE,QAAQ,UAAU,CAAE,EAAE,CAAC,EAAE,CAAC;AAC5J,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,WAAO,GAAG,CAAC,WAAW,oBAAoB,SAAS,CAAC;AAAA,EACrD,CAAC;AAED,OAAK,oFAAoF,YAAY;AACpG,UAAM,YAAY,iBAAiB,SAAS,EAAE,cAAc,EAAE,mBAAmB,MAAM,EAAE,CAAC;AAC1F,yBAAqB,KAAK,0BAA0B,gBAA4B,EAAE,SAAS,CAAC,EAAE,KAAK,IAAI,KAAK,YAAY,EAAE,CAAC,EAAE,CAAC;AAC9H,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,WAAO,GAAG,WAAW,UAAU,SAAS,CAAC;AACzC,WAAO,gBAAgB,WAAW,mBAAmB,SAAS,GAAG,gBAAgB,eAAe;AAAA,EACjG,CAAC;AAED,OAAK,6EAA6E,YAAY;AAC7F,UAAM,YAAY,iBAAiB,SAAS,EAAE,cAAc,EAAE,mBAAmB,KAAK,EAAE,CAAC;AACzF,yBAAqB,KAAK,0BAA0B,gBAA4B,EAAE,SAAS,CAAC,EAAE,KAAK,IAAI,KAAK,YAAY,EAAE,KAAM,EAAE,QAAQ,UAAU,CAAE,EAAE,CAAC,EAAE,CAAC;AAC5J,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,WAAO,GAAG,WAAW,UAAU,SAAS,CAAC;AACzC,WAAO,gBAAgB,WAAW,mBAAmB,SAAS,GAAG,gBAAgB,eAAe;AAAA,EACjG,CAAC;AAED,OAAK,2FAA2F,MAAM;AACrG,UAAM,YAAY,iBAAiB,SAAS,EAAE,MAAM,WAAW,cAAc,EAAE,qBAAqB,EAAE,WAAW,OAAO,aAAa,QAAQ,EAAE,EAAE,CAAC;AAClJ,yBAAqB,KAAK,kCAA6E,EAAE,qBAAqB;AAAE,aAAO;AAAA,IAAO,EAAE,CAAC;AACjJ,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,WAAO,YAAY,WAAW,mBAAmB,SAAS,GAAG,gBAAgB,0BAA0B;AAAA,EACxG,CAAC;AAED,OAAK,sFAAsF,MAAM;AAChG,UAAM,YAAY,iBAAiB,SAAS,EAAE,MAAM,WAAW,cAAc,EAAE,qBAAqB,EAAE,WAAW,OAAO,aAAa,QAAQ,EAAE,EAAE,CAAC;AAClJ,yBAAqB,KAAK,kCAA6E,EAAE,qBAAqB;AAAE,aAAO;AAAA,IAAO,EAAE,CAAC;AACjJ,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,WAAO,GAAG,WAAW,oBAAoB,SAAS,CAAC;AAAA,EACpD,CAAC;AAED,OAAK,kFAAkF,MAAM;AAC5F,UAAM,YAAY,iBAAiB,SAAS,EAAE,MAAM,WAAW,cAAc,EAAE,qBAAqB,EAAE,WAAW,KAAK,EAAE,EAAE,CAAC;AAC3H,yBAAqB,KAAK,kCAA6E,EAAE,qBAAqB;AAAE,aAAO;AAAA,IAAO,EAAE,CAAC;AACjJ,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,WAAO,YAAY,WAAW,mBAAmB,SAAS,GAAG,gBAAgB,eAAe;AAAA,EAC7F,CAAC;AAED,OAAK,wFAAwF,MAAM;AAClG,UAAM,YAAY,iBAAiB,SAAS,EAAE,MAAM,WAAW,cAAc,EAAE,qBAAqB,EAAE,WAAW,OAAO,aAAa,GAAG,EAAE,EAAE,CAAC;AAC7I,yBAAqB,KAAK,kCAA6E,EAAE,qBAAqB;AAAE,aAAO;AAAA,IAAM,EAAE,CAAC;AAChJ,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,WAAO,YAAY,WAAW,mBAAmB,SAAS,GAAG,gBAAgB,eAAe;AAAA,EAC7F,CAAC;AAED,OAAK,gFAAgF,MAAM;AAC1F,UAAM,YAAY,iBAAiB,SAAS,EAAE,MAAM,WAAW,cAAc,EAAE,qBAAqB,EAAE,WAAW,KAAK,EAAE,EAAE,CAAC;AAC3H,yBAAqB,KAAK,kCAA6E,EAAE,qBAAqB;AAAE,aAAO;AAAA,IAAM,EAAE,CAAC;AAChJ,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,WAAO,YAAY,WAAW,mBAAmB,SAAS,GAAG,gBAAgB,eAAe;AAAA,EAC7F,CAAC;AAED,OAAK,0FAA0F,YAAY;AAC1G,UAAM,YAAY,iBAAiB,OAAO;AAC1C,yBAAqB,KAAK,0BAA0B,gBAA4B,EAAE,SAAS,CAAC,EAAE,KAAK,IAAI,KAAK,YAAY,EAAE,KAAM,EAAE,QAAQ,UAAU,CAAE,EAAE,CAAC,EAAE,CAAC;AAC5J,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,WAAO,GAAG,WAAW,UAAU,SAAS,CAAC;AACzC,WAAO,gBAAgB,WAAW,mBAAmB,SAAS,GAAG,gBAAgB,eAAe;AAAA,EACjG,CAAC;AAED,OAAK,sDAAsD,YAAY;AACtE,yBAAqB,KAAK,mCAAmC,uCAAuC,oBAAoB,CAAC;AACzH,UAAM,0BAA0B,iBAAiB,SAAS,EAAE,eAAe,CAAC,WAAW,EAAE,GAAG,EAAE,UAAU,IAAI,KAAK,OAAO,EAAE,CAAC;AAC3H,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,WAAO,GAAG,CAAC,WAAW,UAAU,uBAAuB,CAAC;AACxD,WAAO,gBAAgB,WAAW,mBAAmB,uBAAuB,GAAG,gBAAgB,uBAAuB;AAAA,EACvH,CAAC;AAED,OAAK,0DAA0D,YAAY;AAC1E,yBAAqB,KAAK,mCAAmC,uCAAuC,oBAAoB,CAAC;AACzH,UAAM,0BAA0B,iBAAiB,SAAS,EAAE,eAAe,CAAC,aAAa,IAAI,EAAE,GAAG,EAAE,UAAU,IAAI,KAAK,OAAO,EAAE,CAAC;AACjI,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,WAAO,GAAG,WAAW,UAAU,uBAAuB,CAAC;AACvD,WAAO,gBAAgB,WAAW,mBAAmB,uBAAuB,GAAG,gBAAgB,eAAe;AAAA,EAC/G,CAAC;AAED,OAAK,mDAAmD,YAAY;AACnE,yBAAqB,KAAK,mCAAmC,uCAAuC,oBAAoB,CAAC;AACzH,UAAM,0BAA0B,iBAAiB,SAAS,EAAE,eAAe,CAAC,IAAI,EAAE,GAAG,EAAE,UAAU,IAAI,KAAK,OAAO,EAAE,CAAC;AACpH,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,WAAO,GAAG,WAAW,UAAU,uBAAuB,CAAC;AACvD,WAAO,gBAAgB,WAAW,mBAAmB,uBAAuB,GAAG,gBAAgB,eAAe;AAAA,EAC/G,CAAC;AAED,OAAK,+FAA+F,MAAM;AACzG,yBAAqB,KAAK,mCAAmC,uCAAuC,oBAAoB,CAAC;AACzH,UAAM,0BAA0B,iBAAiB,SAAS,EAAE,eAAe,CAAC,WAAW,EAAE,GAAG,EAAE,UAAU,IAAI,KAAK,OAAO,EAAE,CAAC;AAC3H,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,WAAO,YAAY,WAAW,oBAAoB,uBAAuB,GAAG,KAAK;AAAA,EAClF,CAAC;AAED,OAAK,+DAA+D,MAAM;AACzE,yBAAqB,KAAK,mCAAmC,uCAAuC,oBAAoB,CAAC;AACzH,UAAM,0BAA0B,iBAAiB,SAAS,EAAE,eAAe,CAAC,IAAI,EAAE,GAAG,EAAE,UAAU,IAAI,KAAK,OAAO,EAAE,CAAC;AACpH,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,WAAO,YAAY,WAAW,oBAAoB,uBAAuB,GAAG,IAAI;AAAA,EACjF,CAAC;AAED,OAAK,gDAAgD,YAAY;AAChE,yBAAqB,KAAK,mCAAmC,uCAAuC,oBAAoB,CAAC;AACzH,UAAM,0BAA0B,iBAAiB,SAAS,EAAE,eAAe,CAAC,IAAI,EAAE,GAAG,EAAE,UAAU,IAAI,KAAK,OAAO,EAAE,KAAK,EAAE,QAAQ,QAAQ,aAAa,CAAC,EAAE,CAAC;AAC3J,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,WAAO,GAAG,CAAC,WAAW,UAAU,uBAAuB,CAAC;AACxD,WAAO,gBAAgB,WAAW,mBAAmB,uBAAuB,GAAG,gBAAgB,uBAAuB;AAAA,EACvH,CAAC;AAED,OAAK,0DAA0D,YAAY;AAC1E,yBAAqB,KAAK,mCAAmC,uCAAuC,oBAAoB,CAAC;AACzH,UAAM,0BAA0B,iBAAiB,SAAS,EAAE,eAAe,CAAC,MAAM,WAAW,EAAE,GAAG,EAAE,UAAU,IAAI,KAAK,OAAO,EAAE,KAAK,EAAE,QAAQ,QAAQ,aAAa,CAAC,EAAE,CAAC;AACxK,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,WAAO,GAAG,WAAW,UAAU,uBAAuB,CAAC;AACvD,WAAO,gBAAgB,WAAW,mBAAmB,uBAAuB,GAAG,gBAAgB,eAAe;AAAA,EAC/G,CAAC;AAED,OAAK,8EAA8E,YAAY;AAC9F,yBAAqB,KAAK,mCAAmC,mCAAmC,MAAM,4BAA4B,iBAAiB,oBAAoB,GAAG,IAAI,CAAC;AAC/K,UAAM,0BAA0B,iBAAiB,SAAS,EAAE,eAAe,CAAC,IAAI,EAAE,GAAG,EAAE,UAAU,IAAI,KAAK,OAAO,EAAE,KAAK,EAAE,QAAQ,QAAQ,aAAa,CAAC,EAAE,CAAC;AAC3J,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,WAAO,GAAG,CAAC,WAAW,UAAU,uBAAuB,CAAC;AACxD,WAAO,gBAAgB,WAAW,mBAAmB,uBAAuB,GAAG,gBAAgB,uBAAuB;AAAA,EACvH,CAAC;AAED,OAAK,2DAA2D,YAAY;AAC3E,yBAAqB,KAAK,mCAAmC,uCAAuC,oBAAoB,CAAC;AACzH,UAAM,0BAA0B,iBAAiB,SAAS,EAAE,eAAe,CAAC,WAAW,EAAE,GAAG,EAAE,UAAU,IAAI,KAAK,OAAO,EAAE,KAAK,EAAE,QAAQ,QAAQ,aAAa,CAAC,EAAE,CAAC;AAClK,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,WAAO,GAAG,WAAW,UAAU,uBAAuB,CAAC;AACvD,WAAO,gBAAgB,WAAW,mBAAmB,uBAAuB,GAAG,gBAAgB,eAAe;AAAA,EAC/G,CAAC;AAED,OAAK,yFAAyF,MAAM;AACnG,yBAAqB,KAAK,mCAAmC,uCAAuC,oBAAoB,CAAC;AACzH,UAAM,0BAA0B,iBAAiB,SAAS,EAAE,eAAe,CAAC,IAAI,EAAE,GAAG,EAAE,UAAU,IAAI,KAAK,OAAO,EAAE,KAAK,EAAE,QAAQ,QAAQ,aAAa,CAAC,EAAE,CAAC;AAC3J,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,WAAO,YAAY,WAAW,oBAAoB,uBAAuB,GAAG,KAAK;AAAA,EAClF,CAAC;AAED,OAAK,uEAAuE,MAAM;AACjF,yBAAqB,KAAK,mCAAmC,uCAAuC,oBAAoB,CAAC;AACzH,UAAM,0BAA0B,iBAAiB,SAAS,EAAE,eAAe,CAAC,WAAW,EAAE,GAAG,EAAE,UAAU,IAAI,KAAK,OAAO,EAAE,KAAK,EAAE,QAAQ,QAAQ,aAAa,CAAC,EAAE,CAAC;AAClK,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,WAAO,YAAY,WAAW,oBAAoB,uBAAuB,GAAG,IAAI;AAAA,EACjF,CAAC;AAED,OAAK,yFAAyF,YAAY;AACzG,yBAAqB,KAAK,mCAAmC,uCAAuC,oBAAoB,CAAC;AACzH,UAAM,0BAA0B,iBAAiB,SAAS,EAAE,SAAS,aAAa,GAAG,EAAE,UAAU,IAAI,KAAK,OAAO,EAAE,CAAC;AACpH,IAA2B,qBAAqB,IAAI,qBAAqB,EAAG,qBAAqB,cAAc,EAAE,WAAW,MAAM,CAAC;AACnI,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,WAAO,YAAY,WAAW,UAAU,uBAAuB,GAAG,KAAK;AACvE,WAAO,gBAAgB,WAAW,mBAAmB,uBAAuB,GAAG,gBAAgB,uBAAuB;AAAA,EACvH,CAAC;AAED,OAAK,yFAAyF,YAAY;AACzG,yBAAqB,KAAK,mCAAmC,uCAAuC,oBAAoB,CAAC;AACzH,UAAM,0BAA0B,iBAAiB,SAAS,EAAE,SAAS,aAAa,GAAG,EAAE,UAAU,IAAI,KAAK,OAAO,EAAE,CAAC;AACpH,IAA2B,qBAAqB,IAAI,qBAAqB,EAAG,qBAAqB,cAAc,EAAE,WAAW,KAAK,CAAC;AAClI,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,WAAO,YAAY,WAAW,UAAU,uBAAuB,GAAG,IAAI;AACtE,WAAO,gBAAgB,WAAW,mBAAmB,uBAAuB,GAAG,gBAAgB,eAAe;AAAA,EAC/G,CAAC;AAED,OAAK,0FAA0F,YAAY;AAC1G,yBAAqB,KAAK,mCAAmC,mCAAmC,4BAA4B,gBAAgB,oBAAoB,GAAG,4BAA4B,iBAAiB,oBAAoB,GAAG,IAAI,CAAC;AAC5O,UAAM,0BAA0B,iBAAiB,SAAS,EAAE,SAAS,aAAa,GAAG,EAAE,UAAU,IAAI,KAAK,OAAO,EAAE,KAAK,EAAE,QAAQ,gBAAgB,CAAC,EAAE,CAAC;AACtJ,IAA2B,qBAAqB,IAAI,qBAAqB,EAAG,qBAAqB,cAAc,EAAE,WAAW,MAAM,CAAC;AACnI,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,WAAO,YAAY,WAAW,UAAU,uBAAuB,GAAG,KAAK;AACvE,WAAO,gBAAgB,WAAW,mBAAmB,uBAAuB,GAAG,gBAAgB,uBAAuB;AAAA,EACvH,CAAC;AAED,OAAK,sFAAsF,YAAY;AACtG,yBAAqB,KAAK,mCAAmC,mCAAmC,4BAA4B,gBAAgB,oBAAoB,GAAG,4BAA4B,iBAAiB,oBAAoB,GAAG,IAAI,CAAC;AAC5O,UAAM,0BAA0B,iBAAiB,SAAS,EAAE,SAAS,aAAa,GAAG,EAAE,UAAU,IAAI,KAAK,OAAO,EAAE,KAAK,EAAE,QAAQ,gBAAgB,CAAC,EAAE,CAAC;AACtJ,IAA2B,qBAAqB,IAAI,qBAAqB,EAAG,qBAAqB,cAAc,EAAE,WAAW,KAAK,CAAC;AAClI,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,WAAO,YAAY,WAAW,UAAU,uBAAuB,GAAG,KAAK;AACvE,WAAO,gBAAgB,WAAW,mBAAmB,uBAAuB,GAAG,gBAAgB,uBAAuB;AAAA,EACvH,CAAC;AAED,OAAK,yDAAyD,YAAY;AACzE,yBAAqB,KAAK,mCAAmC,mCAAmC,4BAA4B,gBAAgB,oBAAoB,GAAG,4BAA4B,iBAAiB,oBAAoB,GAAG,4BAA4B,OAAO,oBAAoB,CAAC,CAAC;AAChS,UAAM,0BAA0B,iBAAiB,SAAS,EAAE,SAAS,aAAa,GAAG,EAAE,UAAU,IAAI,KAAK,OAAO,EAAE,KAAK,EAAE,QAAQ,gBAAgB,CAAC,EAAE,CAAC;AACtJ,IAA2B,qBAAqB,IAAI,qBAAqB,EAAG,qBAAqB,cAAc,EAAE,WAAW,MAAM,CAAC;AACnI,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,WAAO,YAAY,WAAW,UAAU,uBAAuB,GAAG,IAAI;AACtE,WAAO,gBAAgB,WAAW,mBAAmB,uBAAuB,GAAG,gBAAgB,eAAe;AAAA,EAC/G,CAAC;AAED,OAAK,4DAA4D,YAAY;AAC5E,yBAAqB,KAAK,mCAAmC,mCAAmC,4BAA4B,gBAAgB,oBAAoB,GAAG,4BAA4B,iBAAiB,oBAAoB,GAAG,4BAA4B,OAAO,oBAAoB,CAAC,CAAC;AAChS,UAAM,eAAe,iBAAiB,SAAS,EAAE,SAAS,aAAa,GAAG,EAAE,UAAU,IAAI,KAAK,OAAO,EAAE,KAAK,EAAE,QAAQ,MAAM,CAAC,EAAE,CAAC;AACjI,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,WAAO,YAAY,WAAW,UAAU,YAAY,GAAG,IAAI;AAC3D,WAAO,gBAAgB,WAAW,mBAAmB,YAAY,GAAG,gBAAgB,eAAe;AAAA,EACpG,CAAC;AAED,OAAK,oCAAoC,YAAY;AACpD,cAAU,KAAK,GAAG,CAAC,gBAAgB,OAAO,GAAG,gBAAgB,OAAO,GAAG,gBAAgB,OAAO,GAAG,gBAAgB,OAAO,GAAG,gBAAgB,OAAO,CAAC,CAAC;AACpJ,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,UAAuC,WAAY,qBAAqB;AAExE,UAAM,WAAW,cAAc,CAAC,UAAU,CAAC,CAAC,GAAG,gBAAgB,gBAAgB;AAC/E,UAAM,WAAW,cAAc,CAAC,UAAU,CAAC,CAAC,GAAG,gBAAgB,iBAAiB;AAChF,UAAM,WAAW,cAAc,CAAC,UAAU,CAAC,CAAC,GAAG,gBAAgB,gBAAgB;AAC/E,UAAM,WAAW,cAAc,CAAC,UAAU,CAAC,CAAC,GAAG,gBAAgB,eAAe;AAE9E,WAAO,gBAAgB,WAAW,oBAAoB,SAAS,GAAG,CAAC,gBAAgB,kBAAkB,gBAAgB,mBAAmB,gBAAgB,kBAAkB,gBAAgB,iBAAiB,gBAAgB,eAAe,CAAC;AAAA,EAC5O,CAAC;AAED,OAAK,oFAAoF,YAAY;AACpG,cAAU,KAAK,GAAG,CAAC,iBAAiB,OAAO,GAAG,iBAAiB,SAAS,EAAE,uBAAuB,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;AAC9G,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,UAAuC,WAAY,qBAAqB;AAExE,UAAM,WAAW,cAAc,CAAC,UAAU,CAAC,CAAC,GAAG,gBAAgB,gBAAgB;AAE/E,WAAO,YAAY,WAAW,mBAAmB,UAAU,CAAC,CAAC,GAAG,gBAAgB,6BAA6B;AAAA,EAC9G,CAAC;AAED,OAAK,yGAAyG,YAAY;AACzH,cAAU,KAAK,GAAG,CAAC,iBAAiB,SAAS,EAAE,cAAc,EAAE,mBAAmB,MAAM,EAAE,CAAC,GAAG,iBAAiB,SAAS,EAAE,uBAAuB,CAAC,OAAO,GAAG,cAAc,EAAE,mBAAmB,KAAK,EAAE,CAAC,CAAC,CAAC;AACzM,yBAAqB,KAAK,0BAA0B,gBAA4B,EAAE,SAAS,CAAC,EAAE,KAAK,IAAI,KAAK,YAAY,EAAE,KAAM,EAAE,QAAQ,UAAU,CAAE,EAAE,CAAC,EAAE,CAAC;AAC5J,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,UAAuC,WAAY,qBAAqB;AAExE,WAAO,YAAY,WAAW,mBAAmB,UAAU,CAAC,CAAC,GAAG,gBAAgB,0BAA0B;AAC1G,WAAO,YAAY,WAAW,mBAAmB,UAAU,CAAC,CAAC,GAAG,gBAAgB,6BAA6B;AAAA,EAC9G,CAAC;AAED,OAAK,+IAA+I,YAAY;AAC/J,cAAU,KAAK,GAAG,CAAC,iBAAiB,SAAS,EAAE,cAAc,EAAE,mBAAmB,MAAM,EAAE,CAAC,GAAG,iBAAiB,SAAS,EAAE,uBAAuB,CAAC,OAAO,GAAG,cAAc,EAAE,mBAAmB,KAAK,EAAE,CAAC,CAAC,CAAC;AACzM,yBAAqB,KAAK,0BAA0B,gBAA4B,EAAE,SAAS,CAAC,EAAE,KAAK,IAAI,KAAK,YAAY,EAAE,KAAM,EAAE,QAAQ,UAAU,CAAE,EAAE,CAAC,EAAE,CAAC;AAC5J,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,UAAuC,WAAY,qBAAqB;AAExE,WAAO,GAAG,CAAC,WAAW,oBAAoB,UAAU,CAAC,CAAC,CAAC;AAAA,EACxD,CAAC;AAED,OAAK,uGAAuG,YAAY;AACvH,cAAU,KAAK,GAAG,CAAC,iBAAiB,SAAS,EAAE,MAAM,YAAY,cAAc,EAAE,qBAAqB,EAAE,WAAW,OAAO,aAAa,GAAG,EAAE,EAAE,CAAC,GAAG,iBAAiB,SAAS,EAAE,uBAAuB,CAAC,OAAO,GAAG,cAAc,EAAE,qBAAqB,EAAE,WAAW,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;AAC9Q,yBAAqB,KAAK,kCAA6E,EAAE,qBAAqB;AAAE,aAAO;AAAA,IAAO,EAAE,CAAC;AACjJ,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,UAAuC,WAAY,qBAAqB;AAExE,WAAO,YAAY,WAAW,mBAAmB,UAAU,CAAC,CAAC,GAAG,gBAAgB,0BAA0B;AAC1G,WAAO,YAAY,WAAW,mBAAmB,UAAU,CAAC,CAAC,GAAG,gBAAgB,6BAA6B;AAAA,EAC9G,CAAC;AAED,OAAK,0GAA0G,YAAY;AAC1H,yBAAqB,KAAK,mCAAmC,mCAAmC,4BAA4B,gBAAgB,oBAAoB,GAAG,4BAA4B,iBAAiB,oBAAoB,GAAG,IAAI,CAAC;AAC5O,UAAM,mBAAmB,iBAAiB,SAAS,EAAE,eAAe,CAAC,IAAI,EAAE,GAAG,EAAE,UAAU,IAAI,KAAK,OAAO,EAAE,CAAC;AAC7G,UAAM,oBAAoB,iBAAiB,SAAS,EAAE,eAAe,CAAC,IAAI,EAAE,GAAG,EAAE,UAAU,IAAI,KAAK,OAAO,EAAE,KAAK,EAAE,QAAQ,QAAQ,aAAa,CAAC,EAAE,CAAC;AACrJ,UAAM,2BAA2B,iBAAiB,SAAS,EAAE,eAAe,CAAC,WAAW,GAAG,uBAAuB,CAAC,OAAO,EAAE,GAAG,EAAE,UAAU,IAAI,KAAK,OAAO,EAAE,KAAK,EAAE,QAAQ,QAAQ,aAAa,CAAC,EAAE,CAAC;AACrM,cAAU,KAAK,kBAAkB,mBAAmB,wBAAwB;AAE5E,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,UAAuC,WAAY,qBAAqB;AAExE,WAAO,YAAY,WAAW,mBAAmB,gBAAgB,GAAG,gBAAgB,eAAe;AACnG,WAAO,YAAY,WAAW,mBAAmB,iBAAiB,GAAG,gBAAgB,uBAAuB;AAC5G,WAAO,YAAY,WAAW,mBAAmB,wBAAwB,GAAG,gBAAgB,eAAe;AAAA,EAC5G,CAAC;AAED,OAAK,4IAA4I,YAAY;AAC5J,cAAU,KAAK,GAAG,CAAC,iBAAiB,SAAS,EAAE,MAAM,YAAY,cAAc,EAAE,qBAAqB,EAAE,WAAW,OAAO,aAAa,GAAG,EAAE,EAAE,CAAC,GAAG,iBAAiB,SAAS,EAAE,uBAAuB,CAAC,OAAO,GAAG,cAAc,EAAE,qBAAqB,EAAE,WAAW,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;AAC9Q,yBAAqB,KAAK,kCAA6E,EAAE,qBAAqB;AAAE,aAAO;AAAA,IAAO,EAAE,CAAC;AACjJ,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,UAAuC,WAAY,qBAAqB;AAExE,WAAO,GAAG,WAAW,oBAAoB,UAAU,CAAC,CAAC,CAAC;AAAA,EACvD,CAAC;AAED,OAAK,mIAAmI,YAAY;AACnJ,UAAM,WAAW,cAAc,CAAC,iBAAiB,OAAO,CAAC,GAAG,gBAAgB,gBAAgB;AAE5F,WAAO,YAAY,WAAW,mBAAmB,iBAAiB,SAAS,EAAE,uBAAuB,CAAC,OAAO,EAAE,CAAC,CAAC,GAAG,gBAAgB,eAAe;AAAA,EACnJ,CAAC;AAED,OAAK,mHAAmH,YAAY;AACnI,cAAU,KAAK,GAAG,CAAC,iBAAiB,OAAO,GAAG,iBAAiB,SAAS,EAAE,uBAAuB,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;AAC9G,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,UAAuC,WAAY,qBAAqB;AAExE,UAAM,WAAW,cAAc,CAAC,UAAU,CAAC,CAAC,GAAG,gBAAgB,gBAAgB;AAE/E,WAAO,gBAAgB,WAAW,oBAAoB,SAAS,GAAG,CAAC,gBAAgB,kBAAkB,gBAAgB,6BAA6B,CAAC;AAAA,EACpJ,CAAC;AAED,OAAK,mEAAmE,YAAY;AACnF,UAAM,SAAS,iBAAiB,SAAS,EAAE,uBAAuB,CAAC,OAAO,EAAE,CAAC;AAC7E,cAAU,KAAK,MAAM;AACrB,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,UAAuC,WAAY,qBAAqB;AAExE,WAAO,YAAY,WAAW,mBAAmB,MAAM,GAAG,gBAAgB,eAAe;AAAA,EAC1F,CAAC;AAED,OAAK,4CAA4C,YAAY;AAC5D,UAAM,SAAS,iBAAiB,SAAS,CAAC,GAAG,EAAE,SAAS,MAAM,CAAC;AAC/D,WAAO,YAAY,WAAW,mBAAmB,MAAM,GAAG,gBAAgB,0BAA0B;AAAA,EACrG,CAAC;AAED,OAAK,qFAAqF,YAAY;AACrG,UAAM,SAAS,iBAAiB,SAAS,EAAE,uBAAuB,CAAC,OAAO,EAAE,CAAC;AAC7E,cAAU,KAAK,GAAG,CAAC,QAAQ,iBAAiB,SAAS,CAAC,GAAG,EAAE,SAAS,MAAM,CAAC,CAAC,CAAC;AAC7E,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,UAAuC,WAAY,qBAAqB;AAExE,WAAO,YAAY,WAAW,mBAAmB,MAAM,GAAG,gBAAgB,6BAA6B;AAAA,EACxG,CAAC;AAED,OAAK,+DAA+D,YAAY;AAC/E,UAAM,YAAY,iBAAiB,SAAS,EAAE,uBAAuB,CAAC,OAAO,EAAE,CAAC;AAChF,cAAU,KAAK,GAAG,CAAC,WAAW,iBAAiB,SAAS,CAAC,GAAG,EAAE,SAAS,MAAM,CAAC,CAAC,CAAC;AAChF,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,UAAuC,WAAY,qBAAqB;AAExE,WAAO,YAAY,WAAW,mBAAmB,SAAS,GAAG,gBAAgB,6BAA6B;AAE1G,UAAM,SAAS,MAAM,IAAI;AACzB,oBAAgB,IAAI,WAAW,oBAAoB,MAAM,CAAC;AAE1D,UAAM,iBAAiB,iBAAiB,OAAO;AAC/C,oBAAgB,KAAK,CAAC;AAAA,MACrB,YAAY,eAAe;AAAA,MAC3B,WAAW,iBAAiB;AAAA,MAC5B,QAAQ,eAAe;AAAA,MACvB,iBAAiB,eAAe;AAAA,MAChC,OAAO;AAAA,IACR,CAAC,CAAC;AAEF,WAAO,YAAY,WAAW,mBAAmB,SAAS,GAAG,gBAAgB,eAAe;AAC5F,WAAO,gBAA6B,OAAO,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,YAAY,EAAE,IAAI,QAAQ,CAAC;AAAA,EACtF,CAAC;AAED,OAAK,0EAA0E,YAAY;AAC1F,UAAM,YAAY,iBAAiB,SAAS,EAAE,MAAM,WAAW,cAAc,EAAE,qBAAqB,EAAE,WAAW,OAAO,aAAa,QAAQ,EAAE,EAAE,CAAC;AAClJ,yBAAqB,KAAK,kCAA6E,EAAE,qBAAqB;AAAE,aAAO;AAAA,IAAO,EAAE,CAAC;AACjJ,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AAEzF,WAAO,YAAY,WAAW,oBAAoB,CAAC,SAAS,GAAG,EAAE,SAAS,KAAK,CAAC,EAAE,CAAC,GAAG,gBAAgB,eAAe;AAAA,EACtH,CAAC;AAED,OAAK,8EAA8E,YAAY;AAC9F,UAAM,YAAY,iBAAiB,SAAS,EAAE,MAAM,WAAW,cAAc,EAAE,qBAAqB,EAAE,WAAW,OAAO,aAAa,QAAQ,EAAE,EAAE,CAAC;AAClJ,yBAAqB,KAAK,kCAA6E,EAAE,qBAAqB;AAAE,aAAO;AAAA,IAAM,EAAE,CAAC;AAChJ,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AAEzF,WAAO,YAAY,WAAW,oBAAoB,CAAC,SAAS,GAAG,EAAE,SAAS,MAAM,CAAC,EAAE,CAAC,GAAG,gBAAgB,0BAA0B;AAAA,EAClI,CAAC;AAED,OAAK,yHAAyH,YAAY;AACzI,cAAU,KAAK,GAAG;AAAA,MACjB,iBAAiB,SAAS,EAAE,MAAM,WAAW,cAAc,EAAE,qBAAqB,EAAE,WAAW,OAAO,aAAa,QAAQ,EAAE,EAAE,CAAC;AAAA,MAChI,iBAAiB,SAAS,EAAE,MAAM,WAAW,cAAc,EAAE,qBAAqB,EAAE,WAAW,KAAK,EAAE,EAAE,CAAC;AAAA,MACzG,iBAAiB,SAAS,EAAE,MAAM,WAAW,cAAc,EAAE,qBAAqB,EAAE,WAAW,OAAO,aAAa,QAAQ,EAAE,EAAE,CAAC;AAAA,MAChI,iBAAiB,SAAS,EAAE,MAAM,WAAW,cAAc,EAAE,qBAAqB,EAAE,WAAW,KAAK,EAAE,EAAE,CAAC;AAAA,IAC1G,CAAC;AACD,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,UAAM,SAAS,MAAM,IAAI;AACzB,oBAAgB,IAAI,WAAW,oBAAoB,MAAM,CAAC;AAE1D,UAAM,WAAW,qDAAqD;AACtE,WAAO,YAAY,OAAO,KAAK,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC;AAC9C,WAAO,gBAA6B,OAAO,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,YAAY,EAAE,IAAI,QAAQ,CAAC;AACrF,WAAO,gBAA6B,OAAO,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,YAAY,EAAE,IAAI,QAAQ,CAAC;AAAA,EACtF,CAAC;AAED,OAAK,8CAA8C,YAAY;AAC9D,UAAM,YAAY,gBAAgB,OAAO;AACzC,cAAU,KAAK,SAAS;AACxB,iBAAa,gBAAgB,IAAI,IAAI,+BAA+B,oBAAoB,CAAC;AACzF,UAAM,WAAW,cAAc,CAAC,SAAS,GAAG,gBAAgB,gBAAgB;AAE5E,UAAM,SAAS,MAAM,IAAI;AACzB,oBAAgB,IAAI,WAAW,oBAAoB,MAAM,CAAC;AAC1D,oCAAgC,KAAK,EAAE,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC,EAAE,CAAC;AAExE,WAAO,GAAG,CAAC,WAAW,UAAU,SAAS,CAAC;AAC1C,WAAO,YAAY,WAAW,mBAAmB,SAAS,GAAG,gBAAgB,gBAAgB;AAC7F,WAAO,YAAY,OAAO,KAAK,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC;AAC9C,WAAO,gBAA6B,OAAO,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,YAAY,EAAE,IAAI,QAAQ,CAAC;AAAA,EACtF,CAAC;AAEF,CAAC;AAED,SAAS,4BAA4B,WAAmB,sBAA4E;AACnI,SAAO;AAAA,IACN,IAAI;AAAA,IACJ,OAAO;AAAA,IACP,4BAA4B,qBAAqB,IAAI,2BAA2B;AAAA,EACjF;AACD;AANS;AAQT,SAAS,uCAAuC,sBAAmF;AAClI,QAAM,iCAAiC,4BAA4B,gBAAgB,oBAAoB;AACvG,QAAM,kCAAkC,4BAA4B,iBAAiB,oBAAoB;AACzG,SAAO,mCAAmC,gCAAgC,iCAAiC,IAAI;AAChH;AAJS;AAMF,SAAS,mCAAmC,gCAAmE,iCAAoE,8BAAoG;AAC7R,SAAO;AAAA,IACN,eAAe;AAAA,IACf;AAAA,IACA;AAAA,IACA;AAAA,IACA,8BAA8B,wBAAC,cAA0B;AACxD,UAAI,UAAU,SAAS,WAAW,QAAQ,MAAM;AAC/C,eAAO;AAAA,MACR;AACA,UAAI,UAAU,SAAS,WAAW,QAAQ,cAAc;AACvD,eAAO;AAAA,MACR;AACA,aAAO;AAAA,IACR,GAR8B;AAAA,IAS9B,4BAA4B,WAAwD;AACnF,YAAM,SAAS,KAAK,6BAA6B,SAAS;AAC1D,aAAO,WAAW,kCAAkC,yBAAyB,SAC1E,WAAW,+BAA+B,yBAAyB,MAClE,yBAAyB;AAAA,IAC9B;AAAA,EACD;AACD;AAtBgB;AAwBhB,SAAS,gBAAgB,IAAY,aAAuC,MAAuC;AAClH,SAAO,iBAAiB,IAAI,cAAc,EAAE,YAAY,IAAI,CAAC,GAAG,kBAAkB,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC;AACxG;AAFS;AAIT,SAAS,iBAAiB,IAAY,WAAwC,CAAC,GAAG,aAAkB,CAAC,GAAoB;AACxH,QAAM,CAAC,WAAW,IAAI,IAAI,GAAG,MAAM,GAAG;AACtC,aAAW,EAAE,MAAM,WAAW,GAAG,SAAS;AAC1C,eAAa;AAAA,IACZ,YAAY,EAAE,GAAG;AAAA,IACjB,UAAU,IAAI,KAAK,OAAO,IAAI,EAAE;AAAA,IAChC,mBAAmB,EAAE,IAAI,MAAM,OAAU;AAAA,IACzC,MAAM,cAAc;AAAA,IACpB,GAAG;AAAA,IACH,SAAS,WAAW,WAAW;AAAA,EAChC;AACA,aAAW,YAAY,WAAW,SAAS,cAAc;AACzD,SAAwB,uBAAO,OAAO,EAAE,UAAU,GAAG,WAAW,CAAC;AAClE;AAbS;",
  "names": []
}
