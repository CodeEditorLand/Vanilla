{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/extensionManagement/electron-sandbox/nativeExtensionManagementService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel } from '../../../../base/parts/ipc/common/ipc.js';\nimport { DidChangeProfileEvent, IProfileAwareExtensionManagementService } from '../common/extensionManagement.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ILocalExtension, InstallOptions } from '../../../../platform/extensionManagement/common/extensionManagement.js';\nimport { IUriIdentityService } from '../../../../platform/uriIdentity/common/uriIdentity.js';\nimport { IUserDataProfileService } from '../../userDataProfile/common/userDataProfile.js';\nimport { joinPath } from '../../../../base/common/resources.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { IDownloadService } from '../../../../platform/download/common/download.js';\nimport { IFileService } from '../../../../platform/files/common/files.js';\nimport { generateUuid } from '../../../../base/common/uuid.js';\nimport { ProfileAwareExtensionManagementChannelClient } from '../common/extensionManagementChannelClient.js';\nimport { ExtensionIdentifier, ExtensionType, isResolverExtension } from '../../../../platform/extensions/common/extensions.js';\nimport { INativeWorkbenchEnvironmentService } from '../../environment/electron-sandbox/environmentService.js';\n\nexport class NativeExtensionManagementService extends ProfileAwareExtensionManagementChannelClient implements IProfileAwareExtensionManagementService {\n\n\tconstructor(\n\t\tchannel: IChannel,\n\t\t@IUserDataProfileService userDataProfileService: IUserDataProfileService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IDownloadService private readonly downloadService: IDownloadService,\n\t\t@INativeWorkbenchEnvironmentService private readonly nativeEnvironmentService: INativeWorkbenchEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t\tsuper(channel, userDataProfileService, uriIdentityService);\n\t}\n\n\tprotected filterEvent(profileLocation: URI, isApplicationScoped: boolean): boolean {\n\t\treturn isApplicationScoped || this.uriIdentityService.extUri.isEqual(this.userDataProfileService.currentProfile.extensionsResource, profileLocation);\n\t}\n\n\toverride async install(vsix: URI, options?: InstallOptions): Promise<ILocalExtension> {\n\t\tconst { location, cleanup } = await this.downloadVsix(vsix);\n\t\ttry {\n\t\t\treturn await super.install(location, options);\n\t\t} finally {\n\t\t\tawait cleanup();\n\t\t}\n\t}\n\n\tprivate async downloadVsix(vsix: URI): Promise<{ location: URI; cleanup: () => Promise<void> }> {\n\t\tif (vsix.scheme === Schemas.file) {\n\t\t\treturn { location: vsix, async cleanup() { } };\n\t\t}\n\t\tthis.logService.trace('Downloading extension from', vsix.toString());\n\t\tconst location = joinPath(this.nativeEnvironmentService.extensionsDownloadLocation, generateUuid());\n\t\tawait this.downloadService.download(vsix, location);\n\t\tthis.logService.info('Downloaded extension to', location.toString());\n\t\tconst cleanup = async () => {\n\t\t\ttry {\n\t\t\t\tawait this.fileService.del(location);\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.error(error);\n\t\t\t}\n\t\t};\n\t\treturn { location, cleanup };\n\t}\n\n\tprotected override async switchExtensionsProfile(previousProfileLocation: URI, currentProfileLocation: URI, preserveExtensions?: ExtensionIdentifier[]): Promise<DidChangeProfileEvent> {\n\t\tif (this.nativeEnvironmentService.remoteAuthority) {\n\t\t\tconst previousInstalledExtensions = await this.getInstalled(ExtensionType.User, previousProfileLocation);\n\t\t\tconst resolverExtension = previousInstalledExtensions.find(e => isResolverExtension(e.manifest, this.nativeEnvironmentService.remoteAuthority));\n\t\t\tif (resolverExtension) {\n\t\t\t\tif (!preserveExtensions) {\n\t\t\t\t\tpreserveExtensions = [];\n\t\t\t\t}\n\t\t\t\tpreserveExtensions.push(new ExtensionIdentifier(resolverExtension.identifier.id));\n\t\t\t}\n\t\t}\n\t\treturn super.switchExtensionsProfile(previousProfileLocation, currentProfileLocation, preserveExtensions);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,gBAAgB;AACzB,SAAS,uBAAuB,+CAA+C;AAC/E,SAAS,WAAW;AACpB,SAAS,iBAAiB,sBAAsB;AAChD,SAAS,2BAA2B;AACpC,SAAS,+BAA+B;AACxC,SAAS,gBAAgB;AACzB,SAAS,eAAe;AACxB,SAAS,mBAAmB;AAC5B,SAAS,wBAAwB;AACjC,SAAS,oBAAoB;AAC7B,SAAS,oBAAoB;AAC7B,SAAS,oDAAoD;AAC7D,SAAS,qBAAqB,eAAe,2BAA2B;AACxE,SAAS,0CAA0C;AAE5C,IAAM,mCAAN,cAA+C,6CAAgG;AAAA,EAErJ,YACC,SACyB,wBACJ,oBACU,aACI,iBACkB,0BACvB,YAC7B;AACD,UAAM,SAAS,wBAAwB,kBAAkB;AAL1B;AACI;AACkB;AACvB;AAAA,EAG/B;AAAA,EAjCD,OAqBsJ;AAAA;AAAA;AAAA,EAc3I,YAAY,iBAAsB,qBAAuC;AAClF,WAAO,uBAAuB,KAAK,mBAAmB,OAAO,QAAQ,KAAK,uBAAuB,eAAe,oBAAoB,eAAe;AAAA,EACpJ;AAAA,EAEA,MAAe,QAAQ,MAAW,SAAoD;AACrF,UAAM,EAAE,UAAU,QAAQ,IAAI,MAAM,KAAK,aAAa,IAAI;AAC1D,QAAI;AACH,aAAO,MAAM,MAAM,QAAQ,UAAU,OAAO;AAAA,IAC7C,UAAE;AACD,YAAM,QAAQ;AAAA,IACf;AAAA,EACD;AAAA,EAEA,MAAc,aAAa,MAAqE;AAC/F,QAAI,KAAK,WAAW,QAAQ,MAAM;AACjC,aAAO,EAAE,UAAU,MAAM,MAAM,UAAU;AAAA,MAAE,EAAE;AAAA,IAC9C;AACA,SAAK,WAAW,MAAM,8BAA8B,KAAK,SAAS,CAAC;AACnE,UAAM,WAAW,SAAS,KAAK,yBAAyB,4BAA4B,aAAa,CAAC;AAClG,UAAM,KAAK,gBAAgB,SAAS,MAAM,QAAQ;AAClD,SAAK,WAAW,KAAK,2BAA2B,SAAS,SAAS,CAAC;AACnE,UAAM,UAAU,mCAAY;AAC3B,UAAI;AACH,cAAM,KAAK,YAAY,IAAI,QAAQ;AAAA,MACpC,SAAS,OAAO;AACf,aAAK,WAAW,MAAM,KAAK;AAAA,MAC5B;AAAA,IACD,GANgB;AAOhB,WAAO,EAAE,UAAU,QAAQ;AAAA,EAC5B;AAAA,EAEA,MAAyB,wBAAwB,yBAA8B,wBAA6B,oBAA4E;AACvL,QAAI,KAAK,yBAAyB,iBAAiB;AAClD,YAAM,8BAA8B,MAAM,KAAK,aAAa,cAAc,MAAM,uBAAuB;AACvG,YAAM,oBAAoB,4BAA4B,KAAK,OAAK,oBAAoB,EAAE,UAAU,KAAK,yBAAyB,eAAe,CAAC;AAC9I,UAAI,mBAAmB;AACtB,YAAI,CAAC,oBAAoB;AACxB,+BAAqB,CAAC;AAAA,QACvB;AACA,2BAAmB,KAAK,IAAI,oBAAoB,kBAAkB,WAAW,EAAE,CAAC;AAAA,MACjF;AAAA,IACD;AACA,WAAO,MAAM,wBAAwB,yBAAyB,wBAAwB,kBAAkB;AAAA,EACzG;AACD;AA1Da,mCAAN;AAAA,EAIJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GATU;",
  "names": []
}
