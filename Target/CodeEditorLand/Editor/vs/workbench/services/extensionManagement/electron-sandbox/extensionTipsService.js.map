{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/extensionManagement/electron-sandbox/extensionTipsService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport type { IChannel } from \"../../../../base/parts/ipc/common/ipc.js\";\nimport {\n\ttype IConfigBasedExtensionTip,\n\ttype IExecutableBasedExtensionTip,\n\tIExtensionTipsService,\n} from \"../../../../platform/extensionManagement/common/extensionManagement.js\";\nimport { ExtensionTipsService } from \"../../../../platform/extensionManagement/common/extensionTipsService.js\";\nimport { IFileService } from \"../../../../platform/files/common/files.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport { ISharedProcessService } from \"../../../../platform/ipc/electron-sandbox/services.js\";\nimport { IProductService } from \"../../../../platform/product/common/productService.js\";\n\nclass NativeExtensionTipsService\n\textends ExtensionTipsService\n\timplements IExtensionTipsService\n{\n\tprivate readonly channel: IChannel;\n\n\tconstructor(\n\t\t@IFileService fileService: IFileService,\n\t\t@IProductService productService: IProductService,\n\t\t@ISharedProcessService sharedProcessService: ISharedProcessService,\n\t) {\n\t\tsuper(fileService, productService);\n\t\tthis.channel = sharedProcessService.getChannel(\"extensionTipsService\");\n\t}\n\n\toverride getConfigBasedTips(\n\t\tfolder: URI,\n\t): Promise<IConfigBasedExtensionTip[]> {\n\t\tif (folder.scheme === Schemas.file) {\n\t\t\treturn this.channel.call<IConfigBasedExtensionTip[]>(\n\t\t\t\t\"getConfigBasedTips\",\n\t\t\t\t[folder],\n\t\t\t);\n\t\t}\n\t\treturn super.getConfigBasedTips(folder);\n\t}\n\n\toverride getImportantExecutableBasedTips(): Promise<\n\t\tIExecutableBasedExtensionTip[]\n\t> {\n\t\treturn this.channel.call<IExecutableBasedExtensionTip[]>(\n\t\t\t\"getImportantExecutableBasedTips\",\n\t\t);\n\t}\n\n\toverride getOtherExecutableBasedTips(): Promise<\n\t\tIExecutableBasedExtensionTip[]\n\t> {\n\t\treturn this.channel.call<IExecutableBasedExtensionTip[]>(\n\t\t\t\"getOtherExecutableBasedTips\",\n\t\t);\n\t}\n}\n\nregisterSingleton(\n\tIExtensionTipsService,\n\tNativeExtensionTipsService,\n\tInstantiationType.Delayed,\n);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,eAAe;AAGxB;AAAA,EAGC;AAAA,OACM;AACP,SAAS,4BAA4B;AACrC,SAAS,oBAAoB;AAC7B;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,6BAA6B;AACtC,SAAS,uBAAuB;AAEhC,IAAM,6BAAN,cACS,qBAET;AAAA,EAzBA,OAyBA;AAAA;AAAA;AAAA,EACkB;AAAA,EAEjB,YACe,aACG,gBACM,sBACtB;AACD,UAAM,aAAa,cAAc;AACjC,SAAK,UAAU,qBAAqB,WAAW,sBAAsB;AAAA,EACtE;AAAA,EAES,mBACR,QACsC;AACtC,QAAI,OAAO,WAAW,QAAQ,MAAM;AACnC,aAAO,KAAK,QAAQ;AAAA,QACnB;AAAA,QACA,CAAC,MAAM;AAAA,MACR;AAAA,IACD;AACA,WAAO,MAAM,mBAAmB,MAAM;AAAA,EACvC;AAAA,EAES,kCAEP;AACD,WAAO,KAAK,QAAQ;AAAA,MACnB;AAAA,IACD;AAAA,EACD;AAAA,EAES,8BAEP;AACD,WAAO,KAAK,QAAQ;AAAA,MACnB;AAAA,IACD;AAAA,EACD;AACD;AA1CM,6BAAN;AAAA,EAOG;AAAA,EACA;AAAA,EACA;AAAA,GATG;AA4CN;AAAA,EACC;AAAA,EACA;AAAA,EACA,kBAAkB;AACnB;",
  "names": []
}
