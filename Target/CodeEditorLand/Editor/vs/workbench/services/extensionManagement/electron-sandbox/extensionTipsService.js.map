{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/extensionManagement/electron-sandbox/extensionTipsService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { ISharedProcessService } from '../../../../platform/ipc/electron-sandbox/services.js';\nimport { IChannel } from '../../../../base/parts/ipc/common/ipc.js';\nimport { IExtensionTipsService, IExecutableBasedExtensionTip, IConfigBasedExtensionTip } from '../../../../platform/extensionManagement/common/extensionManagement.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ExtensionTipsService } from '../../../../platform/extensionManagement/common/extensionTipsService.js';\nimport { IFileService } from '../../../../platform/files/common/files.js';\nimport { IProductService } from '../../../../platform/product/common/productService.js';\nimport { Schemas } from '../../../../base/common/network.js';\n\nclass NativeExtensionTipsService extends ExtensionTipsService implements IExtensionTipsService {\n\n\tprivate readonly channel: IChannel;\n\n\tconstructor(\n\t\t@IFileService fileService: IFileService,\n\t\t@IProductService productService: IProductService,\n\t\t@ISharedProcessService sharedProcessService: ISharedProcessService\n\t) {\n\t\tsuper(fileService, productService);\n\t\tthis.channel = sharedProcessService.getChannel('extensionTipsService');\n\t}\n\n\toverride getConfigBasedTips(folder: URI): Promise<IConfigBasedExtensionTip[]> {\n\t\tif (folder.scheme === Schemas.file) {\n\t\t\treturn this.channel.call<IConfigBasedExtensionTip[]>('getConfigBasedTips', [folder]);\n\t\t}\n\t\treturn super.getConfigBasedTips(folder);\n\t}\n\n\toverride getImportantExecutableBasedTips(): Promise<IExecutableBasedExtensionTip[]> {\n\t\treturn this.channel.call<IExecutableBasedExtensionTip[]>('getImportantExecutableBasedTips');\n\t}\n\n\toverride getOtherExecutableBasedTips(): Promise<IExecutableBasedExtensionTip[]> {\n\t\treturn this.channel.call<IExecutableBasedExtensionTip[]>('getOtherExecutableBasedTips');\n\t}\n\n}\n\nregisterSingleton(IExtensionTipsService, NativeExtensionTipsService, InstantiationType.Delayed);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,mBAAmB,yBAAyB;AACrD,SAAS,6BAA6B;AACtC,SAAS,gBAAgB;AACzB,SAAS,uBAAuB,8BAA8B,gCAAgC;AAC9F,SAAS,WAAW;AACpB,SAAS,4BAA4B;AACrC,SAAS,oBAAoB;AAC7B,SAAS,uBAAuB;AAChC,SAAS,eAAe;AAExB,IAAM,6BAAN,cAAyC,qBAAsD;AAAA,EAf/F,OAe+F;AAAA;AAAA;AAAA,EAE7E;AAAA,EAEjB,YACe,aACG,gBACM,sBACtB;AACD,UAAM,aAAa,cAAc;AACjC,SAAK,UAAU,qBAAqB,WAAW,sBAAsB;AAAA,EACtE;AAAA,EAES,mBAAmB,QAAkD;AAC7E,QAAI,OAAO,WAAW,QAAQ,MAAM;AACnC,aAAO,KAAK,QAAQ,KAAiC,sBAAsB,CAAC,MAAM,CAAC;AAAA,IACpF;AACA,WAAO,MAAM,mBAAmB,MAAM;AAAA,EACvC;AAAA,EAES,kCAA2E;AACnF,WAAO,KAAK,QAAQ,KAAqC,iCAAiC;AAAA,EAC3F;AAAA,EAES,8BAAuE;AAC/E,WAAO,KAAK,QAAQ,KAAqC,6BAA6B;AAAA,EACvF;AAED;AA5BM,6BAAN;AAAA,EAKG;AAAA,EACA;AAAA,EACA;AAAA,GAPG;AA8BN,kBAAkB,uBAAuB,4BAA4B,kBAAkB,OAAO;",
  "names": []
}
