{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/extensionManagement/electron-sandbox/extensionManagementServerService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport type { IChannel } from \"../../../../base/parts/ipc/common/ipc.js\";\nimport { localize } from \"../../../../nls.js\";\nimport type { IExtension } from \"../../../../platform/extensions/common/extensions.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ISharedProcessService } from \"../../../../platform/ipc/electron-sandbox/services.js\";\nimport { ILabelService } from \"../../../../platform/label/common/label.js\";\nimport { IRemoteAgentService } from \"../../remote/common/remoteAgentService.js\";\nimport {\n\tExtensionInstallLocation,\n\ttype IExtensionManagementServer,\n\tIExtensionManagementServerService,\n} from \"../common/extensionManagement.js\";\nimport { NativeExtensionManagementService } from \"./nativeExtensionManagementService.js\";\nimport { NativeRemoteExtensionManagementService } from \"./remoteExtensionManagementService.js\";\n\nexport class ExtensionManagementServerService\n\textends Disposable\n\timplements IExtensionManagementServerService\n{\n\tdeclare readonly _serviceBrand: undefined;\n\n\treadonly localExtensionManagementServer: IExtensionManagementServer;\n\treadonly remoteExtensionManagementServer: IExtensionManagementServer | null =\n\t\tnull;\n\treadonly webExtensionManagementServer: IExtensionManagementServer | null =\n\t\tnull;\n\n\tconstructor(\n\t\t@ISharedProcessService sharedProcessService: ISharedProcessService,\n\t\t@IRemoteAgentService remoteAgentService: IRemoteAgentService,\n\t\t@ILabelService labelService: ILabelService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tconst localExtensionManagementService = this._register(\n\t\t\tinstantiationService.createInstance(\n\t\t\t\tNativeExtensionManagementService,\n\t\t\t\tsharedProcessService.getChannel(\"extensions\"),\n\t\t\t),\n\t\t);\n\t\tthis.localExtensionManagementServer = {\n\t\t\textensionManagementService: localExtensionManagementService,\n\t\t\tid: \"local\",\n\t\t\tlabel: localize(\"local\", \"Local\"),\n\t\t};\n\t\tconst remoteAgentConnection = remoteAgentService.getConnection();\n\t\tif (remoteAgentConnection) {\n\t\t\tconst extensionManagementService =\n\t\t\t\tinstantiationService.createInstance(\n\t\t\t\t\tNativeRemoteExtensionManagementService,\n\t\t\t\t\tremoteAgentConnection.getChannel<IChannel>(\"extensions\"),\n\t\t\t\t\tthis.localExtensionManagementServer,\n\t\t\t\t);\n\t\t\tthis.remoteExtensionManagementServer = {\n\t\t\t\tid: \"remote\",\n\t\t\t\textensionManagementService,\n\t\t\t\tget label() {\n\t\t\t\t\treturn (\n\t\t\t\t\t\tlabelService.getHostLabel(\n\t\t\t\t\t\t\tSchemas.vscodeRemote,\n\t\t\t\t\t\t\tremoteAgentConnection.remoteAuthority,\n\t\t\t\t\t\t) || localize(\"remote\", \"Remote\")\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\t}\n\n\tgetExtensionManagementServer(\n\t\textension: IExtension,\n\t): IExtensionManagementServer {\n\t\tif (extension.location.scheme === Schemas.file) {\n\t\t\treturn this.localExtensionManagementServer;\n\t\t}\n\t\tif (\n\t\t\tthis.remoteExtensionManagementServer &&\n\t\t\textension.location.scheme === Schemas.vscodeRemote\n\t\t) {\n\t\t\treturn this.remoteExtensionManagementServer;\n\t\t}\n\t\tthrow new Error(`Invalid Extension ${extension.location}`);\n\t}\n\n\tgetExtensionInstallLocation(\n\t\textension: IExtension,\n\t): ExtensionInstallLocation | null {\n\t\tconst server = this.getExtensionManagementServer(extension);\n\t\treturn server === this.remoteExtensionManagementServer\n\t\t\t? ExtensionInstallLocation.Remote\n\t\t\t: ExtensionInstallLocation.Local;\n\t}\n}\n\nregisterSingleton(\n\tIExtensionManagementServerService,\n\tExtensionManagementServerService,\n\tInstantiationType.Delayed,\n);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,kBAAkB;AAC3B,SAAS,eAAe;AAExB,SAAS,gBAAgB;AAEzB;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,6BAA6B;AACtC,SAAS,6BAA6B;AACtC,SAAS,qBAAqB;AAC9B,SAAS,2BAA2B;AACpC;AAAA,EACC;AAAA,EAEA;AAAA,OACM;AACP,SAAS,wCAAwC;AACjD,SAAS,8CAA8C;AAEhD,IAAM,mCAAN,cACE,WAET;AAAA,EA7BA,OA6BA;AAAA;AAAA;AAAA,EAGU;AAAA,EACA,kCACR;AAAA,EACQ,+BACR;AAAA,EAED,YACwB,sBACF,oBACN,cACQ,sBACtB;AACD,UAAM;AACN,UAAM,kCAAkC,KAAK;AAAA,MAC5C,qBAAqB;AAAA,QACpB;AAAA,QACA,qBAAqB,WAAW,YAAY;AAAA,MAC7C;AAAA,IACD;AACA,SAAK,iCAAiC;AAAA,MACrC,4BAA4B;AAAA,MAC5B,IAAI;AAAA,MACJ,OAAO,SAAS,SAAS,OAAO;AAAA,IACjC;AACA,UAAM,wBAAwB,mBAAmB,cAAc;AAC/D,QAAI,uBAAuB;AAC1B,YAAM,6BACL,qBAAqB;AAAA,QACpB;AAAA,QACA,sBAAsB,WAAqB,YAAY;AAAA,QACvD,KAAK;AAAA,MACN;AACD,WAAK,kCAAkC;AAAA,QACtC,IAAI;AAAA,QACJ;AAAA,QACA,IAAI,QAAQ;AACX,iBACC,aAAa;AAAA,YACZ,QAAQ;AAAA,YACR,sBAAsB;AAAA,UACvB,KAAK,SAAS,UAAU,QAAQ;AAAA,QAElC;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EAEA,6BACC,WAC6B;AAC7B,QAAI,UAAU,SAAS,WAAW,QAAQ,MAAM;AAC/C,aAAO,KAAK;AAAA,IACb;AACA,QACC,KAAK,mCACL,UAAU,SAAS,WAAW,QAAQ,cACrC;AACD,aAAO,KAAK;AAAA,IACb;AACA,UAAM,IAAI,MAAM,qBAAqB,UAAU,QAAQ,EAAE;AAAA,EAC1D;AAAA,EAEA,4BACC,WACkC;AAClC,UAAM,SAAS,KAAK,6BAA6B,SAAS;AAC1D,WAAO,WAAW,KAAK,kCACpB,yBAAyB,SACzB,yBAAyB;AAAA,EAC7B;AACD;AA5Ea,mCAAN;AAAA,EAaJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAhBU;AA8Eb;AAAA,EACC;AAAA,EACA;AAAA,EACA,kBAAkB;AACnB;",
  "names": []
}
