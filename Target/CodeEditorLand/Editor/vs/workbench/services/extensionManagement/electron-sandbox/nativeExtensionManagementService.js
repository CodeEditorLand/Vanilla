var v=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var m=(l,t,e,i)=>{for(var r=i>1?void 0:i?d(t,e):t,o=l.length-1,n;o>=0;o--)(n=l[o])&&(r=(i?n(t,e,r):n(r))||r);return i&&r&&v(t,e,r),r},a=(l,t)=>(e,i)=>t(e,i,l);import{Schemas as f}from"../../../../../vs/base/common/network.js";import{joinPath as I}from"../../../../../vs/base/common/resources.js";import"../../../../../vs/base/common/uri.js";import{generateUuid as p}from"../../../../../vs/base/common/uuid.js";import"../../../../../vs/base/parts/ipc/common/ipc.js";import{IDownloadService as h}from"../../../../../vs/platform/download/common/download.js";import"../../../../../vs/platform/extensionManagement/common/extensionManagement.js";import{ExtensionIdentifier as S,ExtensionType as u,isResolverExtension as w}from"../../../../../vs/platform/extensions/common/extensions.js";import{IFileService as y}from"../../../../../vs/platform/files/common/files.js";import{ILogService as E}from"../../../../../vs/platform/log/common/log.js";import{IUriIdentityService as P}from"../../../../../vs/platform/uriIdentity/common/uriIdentity.js";import{INativeWorkbenchEnvironmentService as x}from"../../../../../vs/workbench/services/environment/electron-sandbox/environmentService.js";import"../../../../../vs/workbench/services/extensionManagement/common/extensionManagement.js";import{ProfileAwareExtensionManagementChannelClient as U}from"../../../../../vs/workbench/services/extensionManagement/common/extensionManagementChannelClient.js";import{IUserDataProfileService as g}from"../../../../../vs/workbench/services/userDataProfile/common/userDataProfile.js";let s=class extends U{constructor(e,i,r,o,n,c,D){super(e,i,r);this.fileService=o;this.downloadService=n;this.nativeEnvironmentService=c;this.logService=D}filterEvent(e,i){return i||this.uriIdentityService.extUri.isEqual(this.userDataProfileService.currentProfile.extensionsResource,e)}async install(e,i){const{location:r,cleanup:o}=await this.downloadVsix(e);try{return await super.install(r,i)}finally{await o()}}async downloadVsix(e){if(e.scheme===f.file)return{location:e,async cleanup(){}};this.logService.trace("Downloading extension from",e.toString());const i=I(this.nativeEnvironmentService.extensionsDownloadLocation,p());return await this.downloadService.download(e,i),this.logService.info("Downloaded extension to",i.toString()),{location:i,cleanup:async()=>{try{await this.fileService.del(i)}catch(o){this.logService.error(o)}}}}async switchExtensionsProfile(e,i,r){if(this.nativeEnvironmentService.remoteAuthority){const n=(await this.getInstalled(u.User,e)).find(c=>w(c.manifest,this.nativeEnvironmentService.remoteAuthority));n&&(r||(r=[]),r.push(new S(n.identifier.id)))}return super.switchExtensionsProfile(e,i,r)}};s=m([a(1,g),a(2,P),a(3,y),a(4,h),a(5,x),a(6,E)],s);export{s as NativeExtensionManagementService};
