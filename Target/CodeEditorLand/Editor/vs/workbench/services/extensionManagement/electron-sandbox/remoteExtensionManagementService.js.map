{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/extensionManagement/electron-sandbox/remoteExtensionManagementService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isNonEmptyArray } from \"../../../../base/common/arrays.js\";\nimport { Promises } from \"../../../../base/common/async.js\";\nimport { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport { toErrorMessage } from \"../../../../base/common/errorMessage.js\";\nimport { isBoolean, isUndefined } from \"../../../../base/common/types.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport type { IChannel } from \"../../../../base/parts/ipc/common/ipc.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\tEXTENSION_INSTALL_CLIENT_TARGET_PLATFORM_CONTEXT,\n\tExtensionManagementError,\n\tExtensionManagementErrorCode,\n\tIExtensionGalleryService,\n\ttype IGalleryExtension,\n\ttype ILocalExtension,\n\tInstallOperation,\n\ttype InstallOptions,\n} from \"../../../../platform/extensionManagement/common/extensionManagement.js\";\nimport { areSameExtensions } from \"../../../../platform/extensionManagement/common/extensionManagementUtil.js\";\nimport { areApiProposalsCompatible } from \"../../../../platform/extensions/common/extensionValidator.js\";\nimport {\n\tExtensionType,\n\ttype IExtensionManifest,\n} from \"../../../../platform/extensions/common/extensions.js\";\nimport { IFileService } from \"../../../../platform/files/common/files.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { IProductService } from \"../../../../platform/product/common/productService.js\";\nimport { IUriIdentityService } from \"../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport { IUserDataProfilesService } from \"../../../../platform/userDataProfile/common/userDataProfile.js\";\nimport { IExtensionManifestPropertiesService } from \"../../extensions/common/extensionManifestPropertiesService.js\";\nimport { IRemoteUserDataProfilesService } from \"../../userDataProfile/common/remoteUserDataProfiles.js\";\nimport { IUserDataProfileService } from \"../../userDataProfile/common/userDataProfile.js\";\nimport type { IExtensionManagementServer } from \"../common/extensionManagement.js\";\nimport { RemoteExtensionManagementService } from \"../common/remoteExtensionManagementService.js\";\n\nexport class NativeRemoteExtensionManagementService extends RemoteExtensionManagementService {\n\tconstructor(\n\t\tchannel: IChannel,\n\t\tprivate readonly localExtensionManagementServer: IExtensionManagementServer,\n\t\t@IUserDataProfileService userDataProfileService: IUserDataProfileService,\n\t\t@IUserDataProfilesService userDataProfilesService: IUserDataProfilesService,\n\t\t@IRemoteUserDataProfilesService remoteUserDataProfilesService: IRemoteUserDataProfilesService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IExtensionGalleryService private readonly galleryService: IExtensionGalleryService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IExtensionManifestPropertiesService private readonly extensionManifestPropertiesService: IExtensionManifestPropertiesService,\n\t) {\n\t\tsuper(channel, userDataProfileService, userDataProfilesService, remoteUserDataProfilesService, uriIdentityService);\n\t}\n\n\toverride async install(\n\t\tvsix: URI,\n\t\toptions?: InstallOptions,\n\t): Promise<ILocalExtension> {\n\t\tconst local = await super.install(vsix, options);\n\t\tawait this.installUIDependenciesAndPackedExtensions(local);\n\t\treturn local;\n\t}\n\n\toverride async installFromGallery(\n\t\textension: IGalleryExtension,\n\t\tinstallOptions: InstallOptions = {},\n\t): Promise<ILocalExtension> {\n\t\tif (isUndefined(installOptions.donotVerifySignature)) {\n\t\t\tconst value = this.configurationService.getValue(\n\t\t\t\t\"extensions.verifySignature\",\n\t\t\t);\n\t\t\tinstallOptions.donotVerifySignature = isBoolean(value)\n\t\t\t\t? !value\n\t\t\t\t: undefined;\n\t\t}\n\t\tconst local = await this.doInstallFromGallery(\n\t\t\textension,\n\t\t\tinstallOptions,\n\t\t);\n\t\tawait this.installUIDependenciesAndPackedExtensions(local);\n\t\treturn local;\n\t}\n\n\tprivate async doInstallFromGallery(\n\t\textension: IGalleryExtension,\n\t\tinstallOptions: InstallOptions,\n\t): Promise<ILocalExtension> {\n\t\tif (\n\t\t\tthis.configurationService.getValue(\n\t\t\t\t\"remote.downloadExtensionsLocally\",\n\t\t\t)\n\t\t) {\n\t\t\treturn this.downloadAndInstall(extension, installOptions);\n\t\t}\n\t\ttry {\n\t\t\tconst clientTargetPlatform =\n\t\t\t\tawait this.localExtensionManagementServer.extensionManagementService.getTargetPlatform();\n\t\t\treturn await super.installFromGallery(extension, {\n\t\t\t\t...installOptions,\n\t\t\t\tcontext: {\n\t\t\t\t\t...installOptions?.context,\n\t\t\t\t\t[EXTENSION_INSTALL_CLIENT_TARGET_PLATFORM_CONTEXT]:\n\t\t\t\t\t\tclientTargetPlatform,\n\t\t\t\t},\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tswitch (error.name) {\n\t\t\t\tcase ExtensionManagementErrorCode.Download:\n\t\t\t\tcase ExtensionManagementErrorCode.DownloadSignature:\n\t\t\t\tcase ExtensionManagementErrorCode.Gallery:\n\t\t\t\tcase ExtensionManagementErrorCode.Internal:\n\t\t\t\tcase ExtensionManagementErrorCode.Unknown:\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.logService.error(\n\t\t\t\t\t\t\t`Error while installing '${extension.identifier.id}' extension in the remote server.`,\n\t\t\t\t\t\t\ttoErrorMessage(error),\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn await this.downloadAndInstall(\n\t\t\t\t\t\t\textension,\n\t\t\t\t\t\t\tinstallOptions,\n\t\t\t\t\t\t);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tthis.logService.error(e);\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthis.logService.debug(\n\t\t\t\t\t\t\"Remote Install Error Name\",\n\t\t\t\t\t\terror.name,\n\t\t\t\t\t);\n\t\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async downloadAndInstall(\n\t\textension: IGalleryExtension,\n\t\tinstallOptions: InstallOptions,\n\t): Promise<ILocalExtension> {\n\t\tthis.logService.info(\n\t\t\t`Downloading the '${extension.identifier.id}' extension locally and install`,\n\t\t);\n\t\tconst compatible = await this.checkAndGetCompatible(\n\t\t\textension,\n\t\t\t!!installOptions.installPreReleaseVersion,\n\t\t);\n\t\tinstallOptions = {\n\t\t\t...installOptions,\n\t\t\tdonotIncludePackAndDependencies: true,\n\t\t};\n\t\tconst installed = await this.getInstalled(\n\t\t\tExtensionType.User,\n\t\t\tundefined,\n\t\t\tinstallOptions.productVersion,\n\t\t);\n\t\tconst workspaceExtensions =\n\t\t\tawait this.getAllWorkspaceDependenciesAndPackedExtensions(\n\t\t\t\tcompatible,\n\t\t\t\tCancellationToken.None,\n\t\t\t);\n\t\tif (workspaceExtensions.length) {\n\t\t\tthis.logService.info(\n\t\t\t\t`Downloading the workspace dependencies and packed extensions of '${compatible.identifier.id}' locally and install`,\n\t\t\t);\n\t\t\tfor (const workspaceExtension of workspaceExtensions) {\n\t\t\t\tawait this.downloadCompatibleAndInstall(\n\t\t\t\t\tworkspaceExtension,\n\t\t\t\t\tinstalled,\n\t\t\t\t\tinstallOptions,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn await this.downloadCompatibleAndInstall(\n\t\t\tcompatible,\n\t\t\tinstalled,\n\t\t\tinstallOptions,\n\t\t);\n\t}\n\n\tprivate async downloadCompatibleAndInstall(\n\t\textension: IGalleryExtension,\n\t\tinstalled: ILocalExtension[],\n\t\tinstallOptions: InstallOptions,\n\t): Promise<ILocalExtension> {\n\t\tconst compatible = await this.checkAndGetCompatible(\n\t\t\textension,\n\t\t\t!!installOptions.installPreReleaseVersion,\n\t\t);\n\t\tthis.logService.trace(\n\t\t\t\"Downloading extension:\",\n\t\t\tcompatible.identifier.id,\n\t\t);\n\t\tconst location =\n\t\t\tawait this.localExtensionManagementServer.extensionManagementService.download(\n\t\t\t\tcompatible,\n\t\t\t\tinstalled.filter((i) =>\n\t\t\t\t\tareSameExtensions(i.identifier, compatible.identifier),\n\t\t\t\t)[0]\n\t\t\t\t\t? InstallOperation.Update\n\t\t\t\t\t: InstallOperation.Install,\n\t\t\t\t!!installOptions.donotVerifySignature,\n\t\t\t);\n\t\tthis.logService.info(\n\t\t\t\"Downloaded extension:\",\n\t\t\tcompatible.identifier.id,\n\t\t\tlocation.path,\n\t\t);\n\t\ttry {\n\t\t\tconst local = await super.install(location, {\n\t\t\t\t...installOptions,\n\t\t\t\tkeepExisting: true,\n\t\t\t});\n\t\t\tthis.logService.info(\n\t\t\t\t`Successfully installed '${compatible.identifier.id}' extension`,\n\t\t\t);\n\t\t\treturn local;\n\t\t} finally {\n\t\t\ttry {\n\t\t\t\tawait this.fileService.del(location);\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.error(error);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async checkAndGetCompatible(\n\t\textension: IGalleryExtension,\n\t\tincludePreRelease: boolean,\n\t): Promise<IGalleryExtension> {\n\t\tconst targetPlatform = await this.getTargetPlatform();\n\t\tlet compatibleExtension: IGalleryExtension | null = null;\n\n\t\tif (\n\t\t\textension.hasPreReleaseVersion &&\n\t\t\textension.properties.isPreReleaseVersion !== includePreRelease\n\t\t) {\n\t\t\tcompatibleExtension =\n\t\t\t\t(\n\t\t\t\t\tawait this.galleryService.getExtensions(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t...extension.identifier,\n\t\t\t\t\t\t\t\tpreRelease: includePreRelease,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\t{ targetPlatform, compatible: true },\n\t\t\t\t\t\tCancellationToken.None,\n\t\t\t\t\t)\n\t\t\t\t)[0] || null;\n\t\t}\n\n\t\tif (\n\t\t\t!compatibleExtension &&\n\t\t\t(await this.galleryService.isExtensionCompatible(\n\t\t\t\textension,\n\t\t\t\tincludePreRelease,\n\t\t\t\ttargetPlatform,\n\t\t\t))\n\t\t) {\n\t\t\tcompatibleExtension = extension;\n\t\t}\n\n\t\tif (!compatibleExtension) {\n\t\t\tcompatibleExtension =\n\t\t\t\tawait this.galleryService.getCompatibleExtension(\n\t\t\t\t\textension,\n\t\t\t\t\tincludePreRelease,\n\t\t\t\t\ttargetPlatform,\n\t\t\t\t);\n\t\t}\n\n\t\tif (!compatibleExtension) {\n\t\t\tconst incompatibleApiProposalsMessages: string[] = [];\n\t\t\tif (\n\t\t\t\t!areApiProposalsCompatible(\n\t\t\t\t\textension.properties.enabledApiProposals ?? [],\n\t\t\t\t\tincompatibleApiProposalsMessages,\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tthrow new ExtensionManagementError(\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"incompatibleAPI\",\n\t\t\t\t\t\t\"Can't install '{0}' extension. {1}\",\n\t\t\t\t\t\textension.displayName ?? extension.identifier.id,\n\t\t\t\t\t\tincompatibleApiProposalsMessages[0],\n\t\t\t\t\t),\n\t\t\t\t\tExtensionManagementErrorCode.IncompatibleApi,\n\t\t\t\t);\n\t\t\t}\n\t\t\t/** If no compatible release version is found, check if the extension has a release version or not and throw relevant error */\n\t\t\tif (\n\t\t\t\t!includePreRelease &&\n\t\t\t\textension.properties.isPreReleaseVersion &&\n\t\t\t\t(\n\t\t\t\t\tawait this.galleryService.getExtensions(\n\t\t\t\t\t\t[extension.identifier],\n\t\t\t\t\t\tCancellationToken.None,\n\t\t\t\t\t)\n\t\t\t\t)[0]\n\t\t\t) {\n\t\t\t\tthrow new ExtensionManagementError(\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"notFoundReleaseExtension\",\n\t\t\t\t\t\t\"Can't install release version of '{0}' extension because it has no release version.\",\n\t\t\t\t\t\textension.identifier.id,\n\t\t\t\t\t),\n\t\t\t\t\tExtensionManagementErrorCode.ReleaseVersionNotFound,\n\t\t\t\t);\n\t\t\t}\n\t\t\tthrow new ExtensionManagementError(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"notFoundCompatibleDependency\",\n\t\t\t\t\t\"Can't install '{0}' extension because it is not compatible with the current version of {1} (version {2}).\",\n\t\t\t\t\textension.identifier.id,\n\t\t\t\t\tthis.productService.nameLong,\n\t\t\t\t\tthis.productService.version,\n\t\t\t\t),\n\t\t\t\tExtensionManagementErrorCode.Incompatible,\n\t\t\t);\n\t\t}\n\n\t\treturn compatibleExtension;\n\t}\n\n\tprivate async installUIDependenciesAndPackedExtensions(\n\t\tlocal: ILocalExtension,\n\t): Promise<void> {\n\t\tconst uiExtensions = await this.getAllUIDependenciesAndPackedExtensions(\n\t\t\tlocal.manifest,\n\t\t\tCancellationToken.None,\n\t\t);\n\t\tconst installed =\n\t\t\tawait this.localExtensionManagementServer.extensionManagementService.getInstalled();\n\t\tconst toInstall = uiExtensions.filter((e) =>\n\t\t\tinstalled.every(\n\t\t\t\t(i) => !areSameExtensions(i.identifier, e.identifier),\n\t\t\t),\n\t\t);\n\t\tif (toInstall.length) {\n\t\t\tthis.logService.info(\n\t\t\t\t`Installing UI dependencies and packed extensions of '${local.identifier.id}' locally`,\n\t\t\t);\n\t\t\tawait Promises.settled(\n\t\t\t\ttoInstall.map((d) =>\n\t\t\t\t\tthis.localExtensionManagementServer.extensionManagementService.installFromGallery(\n\t\t\t\t\t\td,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate async getAllUIDependenciesAndPackedExtensions(\n\t\tmanifest: IExtensionManifest,\n\t\ttoken: CancellationToken,\n\t): Promise<IGalleryExtension[]> {\n\t\tconst result = new Map<string, IGalleryExtension>();\n\t\tconst extensions = [\n\t\t\t...(manifest.extensionPack || []),\n\t\t\t...(manifest.extensionDependencies || []),\n\t\t];\n\t\tawait this.getDependenciesAndPackedExtensionsRecursively(\n\t\t\textensions,\n\t\t\tresult,\n\t\t\ttrue,\n\t\t\ttoken,\n\t\t);\n\t\treturn [...result.values()];\n\t}\n\n\tprivate async getAllWorkspaceDependenciesAndPackedExtensions(\n\t\textension: IGalleryExtension,\n\t\ttoken: CancellationToken,\n\t): Promise<IGalleryExtension[]> {\n\t\tconst result = new Map<string, IGalleryExtension>();\n\t\tresult.set(extension.identifier.id.toLowerCase(), extension);\n\t\tconst manifest = await this.galleryService.getManifest(\n\t\t\textension,\n\t\t\ttoken,\n\t\t);\n\t\tif (manifest) {\n\t\t\tconst extensions = [\n\t\t\t\t...(manifest.extensionPack || []),\n\t\t\t\t...(manifest.extensionDependencies || []),\n\t\t\t];\n\t\t\tawait this.getDependenciesAndPackedExtensionsRecursively(\n\t\t\t\textensions,\n\t\t\t\tresult,\n\t\t\t\tfalse,\n\t\t\t\ttoken,\n\t\t\t);\n\t\t}\n\t\tresult.delete(extension.identifier.id);\n\t\treturn [...result.values()];\n\t}\n\n\tprivate async getDependenciesAndPackedExtensionsRecursively(\n\t\ttoGet: string[],\n\t\tresult: Map<string, IGalleryExtension>,\n\t\tuiExtension: boolean,\n\t\ttoken: CancellationToken,\n\t): Promise<void> {\n\t\tif (toGet.length === 0) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst extensions = await this.galleryService.getExtensions(\n\t\t\ttoGet.map((id) => ({ id })),\n\t\t\ttoken,\n\t\t);\n\t\tconst manifests = await Promise.all(\n\t\t\textensions.map((e) => this.galleryService.getManifest(e, token)),\n\t\t);\n\t\tconst extensionsManifests: IExtensionManifest[] = [];\n\t\tfor (let idx = 0; idx < extensions.length; idx++) {\n\t\t\tconst extension = extensions[idx];\n\t\t\tconst manifest = manifests[idx];\n\t\t\tif (\n\t\t\t\tmanifest &&\n\t\t\t\tthis.extensionManifestPropertiesService.prefersExecuteOnUI(\n\t\t\t\t\tmanifest,\n\t\t\t\t) === uiExtension\n\t\t\t) {\n\t\t\t\tresult.set(extension.identifier.id.toLowerCase(), extension);\n\t\t\t\textensionsManifests.push(manifest);\n\t\t\t}\n\t\t}\n\t\ttoGet = [];\n\t\tfor (const extensionManifest of extensionsManifests) {\n\t\t\tif (isNonEmptyArray(extensionManifest.extensionDependencies)) {\n\t\t\t\tfor (const id of extensionManifest.extensionDependencies) {\n\t\t\t\t\tif (!result.has(id.toLowerCase())) {\n\t\t\t\t\t\ttoGet.push(id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isNonEmptyArray(extensionManifest.extensionPack)) {\n\t\t\t\tfor (const id of extensionManifest.extensionPack) {\n\t\t\t\t\tif (!result.has(id.toLowerCase())) {\n\t\t\t\t\t\ttoGet.push(id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this.getDependenciesAndPackedExtensionsRecursively(\n\t\t\ttoGet,\n\t\t\tresult,\n\t\t\tuiExtension,\n\t\t\ttoken,\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
