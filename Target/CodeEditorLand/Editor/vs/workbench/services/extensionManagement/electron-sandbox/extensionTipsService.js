var m=Object.defineProperty;var l=Object.getOwnPropertyDescriptor;var c=(s,e,t,i)=>{for(var r=i>1?void 0:i?l(e,t):e,a=s.length-1,p;a>=0;a--)(p=s[a])&&(r=(i?p(e,t,r):p(r))||r);return i&&r&&m(e,t,r),r},o=(s,e)=>(t,i)=>e(t,i,s);import{Schemas as d}from"../../../../base/common/network.js";import{IExtensionTipsService as I}from"../../../../platform/extensionManagement/common/extensionManagement.js";import{ExtensionTipsService as u}from"../../../../platform/extensionManagement/common/extensionTipsService.js";import{IFileService as x}from"../../../../platform/files/common/files.js";import{InstantiationType as h,registerSingleton as E}from"../../../../platform/instantiation/common/extensions.js";import{ISharedProcessService as T}from"../../../../platform/ipc/electron-sandbox/services.js";import{IProductService as g}from"../../../../platform/product/common/productService.js";let n=class extends u{channel;constructor(e,t,i){super(e,t),this.channel=i.getChannel("extensionTipsService")}getConfigBasedTips(e){return e.scheme===d.file?this.channel.call("getConfigBasedTips",[e]):super.getConfigBasedTips(e)}getImportantExecutableBasedTips(){return this.channel.call("getImportantExecutableBasedTips")}getOtherExecutableBasedTips(){return this.channel.call("getOtherExecutableBasedTips")}};n=c([o(0,x),o(1,g),o(2,T)],n),E(I,n,h.Delayed);
