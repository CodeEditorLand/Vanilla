{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/extensionManagement/common/extensionManagementServerService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from '../../../../nls.js';\nimport { ExtensionInstallLocation, IExtensionManagementServer, IExtensionManagementServerService } from './extensionManagement.js';\nimport { IRemoteAgentService } from '../../remote/common/remoteAgentService.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { IChannel } from '../../../../base/parts/ipc/common/ipc.js';\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { ILabelService } from '../../../../platform/label/common/label.js';\nimport { isWeb } from '../../../../base/common/platform.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { WebExtensionManagementService } from './webExtensionManagementService.js';\nimport { IExtension } from '../../../../platform/extensions/common/extensions.js';\nimport { RemoteExtensionManagementService } from './remoteExtensionManagementService.js';\n\nexport class ExtensionManagementServerService implements IExtensionManagementServerService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\treadonly localExtensionManagementServer: IExtensionManagementServer | null = null;\n\treadonly remoteExtensionManagementServer: IExtensionManagementServer | null = null;\n\treadonly webExtensionManagementServer: IExtensionManagementServer | null = null;\n\n\tconstructor(\n\t\t@IRemoteAgentService remoteAgentService: IRemoteAgentService,\n\t\t@ILabelService labelService: ILabelService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\tconst remoteAgentConnection = remoteAgentService.getConnection();\n\t\tif (remoteAgentConnection) {\n\t\t\tconst extensionManagementService = instantiationService.createInstance(RemoteExtensionManagementService, remoteAgentConnection.getChannel<IChannel>('extensions'));\n\t\t\tthis.remoteExtensionManagementServer = {\n\t\t\t\tid: 'remote',\n\t\t\t\textensionManagementService,\n\t\t\t\tget label() { return labelService.getHostLabel(Schemas.vscodeRemote, remoteAgentConnection.remoteAuthority) || localize('remote', \"Remote\"); },\n\t\t\t};\n\t\t}\n\t\tif (isWeb) {\n\t\t\tconst extensionManagementService = instantiationService.createInstance(WebExtensionManagementService);\n\t\t\tthis.webExtensionManagementServer = {\n\t\t\t\tid: 'web',\n\t\t\t\textensionManagementService,\n\t\t\t\tlabel: localize('browser', \"Browser\"),\n\t\t\t};\n\t\t}\n\t}\n\n\tgetExtensionManagementServer(extension: IExtension): IExtensionManagementServer {\n\t\tif (extension.location.scheme === Schemas.vscodeRemote) {\n\t\t\treturn this.remoteExtensionManagementServer!;\n\t\t}\n\t\tif (this.webExtensionManagementServer) {\n\t\t\treturn this.webExtensionManagementServer;\n\t\t}\n\t\tthrow new Error(`Invalid Extension ${extension.location}`);\n\t}\n\n\tgetExtensionInstallLocation(extension: IExtension): ExtensionInstallLocation | null {\n\t\tconst server = this.getExtensionManagementServer(extension);\n\t\treturn server === this.remoteExtensionManagementServer ? ExtensionInstallLocation.Remote : ExtensionInstallLocation.Web;\n\t}\n}\n\nregisterSingleton(IExtensionManagementServerService, ExtensionManagementServerService, InstantiationType.Delayed);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,gBAAgB;AACzB,SAAS,0BAA0B,4BAA4B,yCAAyC;AACxG,SAAS,2BAA2B;AACpC,SAAS,eAAe;AACxB,SAAS,gBAAgB;AACzB,SAAS,mBAAmB,yBAAyB;AACrD,SAAS,qBAAqB;AAC9B,SAAS,aAAa;AACtB,SAAS,6BAA6B;AACtC,SAAS,qCAAqC;AAC9C,SAAS,kBAAkB;AAC3B,SAAS,wCAAwC;AAE1C,IAAM,mCAAN,MAAoF;AAAA,EAlB3F,OAkB2F;AAAA;AAAA;AAAA,EAIjF,iCAAoE;AAAA,EACpE,kCAAqE;AAAA,EACrE,+BAAkE;AAAA,EAE3E,YACsB,oBACN,cACQ,sBACtB;AACD,UAAM,wBAAwB,mBAAmB,cAAc;AAC/D,QAAI,uBAAuB;AAC1B,YAAM,6BAA6B,qBAAqB,eAAe,kCAAkC,sBAAsB,WAAqB,YAAY,CAAC;AACjK,WAAK,kCAAkC;AAAA,QACtC,IAAI;AAAA,QACJ;AAAA,QACA,IAAI,QAAQ;AAAE,iBAAO,aAAa,aAAa,QAAQ,cAAc,sBAAsB,eAAe,KAAK,SAAS,UAAU,QAAQ;AAAA,QAAG;AAAA,MAC9I;AAAA,IACD;AACA,QAAI,OAAO;AACV,YAAM,6BAA6B,qBAAqB,eAAe,6BAA6B;AACpG,WAAK,+BAA+B;AAAA,QACnC,IAAI;AAAA,QACJ;AAAA,QACA,OAAO,SAAS,WAAW,SAAS;AAAA,MACrC;AAAA,IACD;AAAA,EACD;AAAA,EAEA,6BAA6B,WAAmD;AAC/E,QAAI,UAAU,SAAS,WAAW,QAAQ,cAAc;AACvD,aAAO,KAAK;AAAA,IACb;AACA,QAAI,KAAK,8BAA8B;AACtC,aAAO,KAAK;AAAA,IACb;AACA,UAAM,IAAI,MAAM,qBAAqB,UAAU,QAAQ,EAAE;AAAA,EAC1D;AAAA,EAEA,4BAA4B,WAAwD;AACnF,UAAM,SAAS,KAAK,6BAA6B,SAAS;AAC1D,WAAO,WAAW,KAAK,kCAAkC,yBAAyB,SAAS,yBAAyB;AAAA,EACrH;AACD;AA9Ca,mCAAN;AAAA,EASJ;AAAA,EACA;AAAA,EACA;AAAA,GAXU;AAgDb,kBAAkB,mCAAmC,kCAAkC,kBAAkB,OAAO;",
  "names": []
}
