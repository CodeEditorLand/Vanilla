{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/extensionManagement/common/extensionManagementChannelClient.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { delta } from \"../../../../base/common/arrays.js\";\nimport { Emitter } from \"../../../../base/common/event.js\";\nimport { compare } from \"../../../../base/common/strings.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport type { IChannel } from \"../../../../base/parts/ipc/common/ipc.js\";\nimport type {\n\tIGalleryExtension,\n\tILocalExtension,\n\tIProductVersion,\n\tInstallExtensionInfo,\n\tInstallExtensionResult,\n\tInstallOptions,\n\tMetadata,\n\tUninstallExtensionInfo,\n\tUninstallOptions,\n} from \"../../../../platform/extensionManagement/common/extensionManagement.js\";\nimport {\n\tExtensionManagementChannelClient as BaseExtensionManagementChannelClient,\n\ttype ExtensionEventResult,\n} from \"../../../../platform/extensionManagement/common/extensionManagementIpc.js\";\nimport {\n\tExtensionIdentifier,\n\tExtensionType,\n\ttype IExtensionIdentifier,\n} from \"../../../../platform/extensions/common/extensions.js\";\nimport type { IUriIdentityService } from \"../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport type {\n\tDidChangeUserDataProfileEvent,\n\tIUserDataProfileService,\n} from \"../../userDataProfile/common/userDataProfile.js\";\nimport type {\n\tDidChangeProfileEvent,\n\tIProfileAwareExtensionManagementService,\n} from \"./extensionManagement.js\";\n\nexport abstract class ProfileAwareExtensionManagementChannelClient\n\textends BaseExtensionManagementChannelClient\n\timplements IProfileAwareExtensionManagementService\n{\n\tprivate readonly _onDidChangeProfile = this._register(\n\t\tnew Emitter<{\n\t\t\treadonly added: ILocalExtension[];\n\t\t\treadonly removed: ILocalExtension[];\n\t\t}>(),\n\t);\n\treadonly onDidChangeProfile = this._onDidChangeProfile.event;\n\n\tconstructor(\n\t\tchannel: IChannel,\n\t\tprotected readonly userDataProfileService: IUserDataProfileService,\n\t\tprotected readonly uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(channel);\n\t\tthis._register(\n\t\t\tuserDataProfileService.onDidChangeCurrentProfile((e) => {\n\t\t\t\tif (\n\t\t\t\t\t!this.uriIdentityService.extUri.isEqual(\n\t\t\t\t\t\te.previous.extensionsResource,\n\t\t\t\t\t\te.profile.extensionsResource,\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\te.join(this.whenProfileChanged(e));\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tprotected override async fireEvent<E extends ExtensionEventResult>(\n\t\tevent: Emitter<E>,\n\t\tdata: E,\n\t): Promise<void>;\n\tprotected override async fireEvent<E extends ExtensionEventResult>(\n\t\tevent: Emitter<readonly E[]>,\n\t\tdata: E[],\n\t): Promise<void>;\n\tprotected override async fireEvent(arg0: any, arg1: any): Promise<void> {\n\t\tif (Array.isArray(arg1)) {\n\t\t\tconst event = arg0 as Emitter<ExtensionEventResult[]>;\n\t\t\tconst data = arg1 as ExtensionEventResult[];\n\t\t\tconst filtered = [];\n\t\t\tfor (const e of data) {\n\t\t\t\tconst result = this.filterEvent(\n\t\t\t\t\te.profileLocation,\n\t\t\t\t\te.applicationScoped ??\n\t\t\t\t\t\te.local?.isApplicationScoped ??\n\t\t\t\t\t\tfalse,\n\t\t\t\t);\n\t\t\t\tif (result instanceof Promise ? await result : result) {\n\t\t\t\t\tfiltered.push(e);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (filtered.length) {\n\t\t\t\tevent.fire(filtered);\n\t\t\t}\n\t\t} else {\n\t\t\tconst event = arg0 as Emitter<ExtensionEventResult>;\n\t\t\tconst data = arg1 as ExtensionEventResult;\n\t\t\tconst result = this.filterEvent(\n\t\t\t\tdata.profileLocation,\n\t\t\t\tdata.applicationScoped ??\n\t\t\t\t\tdata.local?.isApplicationScoped ??\n\t\t\t\t\tfalse,\n\t\t\t);\n\t\t\tif (result instanceof Promise ? await result : result) {\n\t\t\t\tevent.fire(data);\n\t\t\t}\n\t\t}\n\t}\n\n\toverride async install(\n\t\tvsix: URI,\n\t\tinstallOptions?: InstallOptions,\n\t): Promise<ILocalExtension> {\n\t\tinstallOptions = {\n\t\t\t...installOptions,\n\t\t\tprofileLocation: await this.getProfileLocation(\n\t\t\t\tinstallOptions?.profileLocation,\n\t\t\t),\n\t\t};\n\t\treturn super.install(vsix, installOptions);\n\t}\n\n\toverride async installFromLocation(\n\t\tlocation: URI,\n\t\tprofileLocation: URI,\n\t): Promise<ILocalExtension> {\n\t\treturn super.installFromLocation(\n\t\t\tlocation,\n\t\t\tawait this.getProfileLocation(profileLocation),\n\t\t);\n\t}\n\n\toverride async installFromGallery(\n\t\textension: IGalleryExtension,\n\t\tinstallOptions?: InstallOptions,\n\t): Promise<ILocalExtension> {\n\t\tinstallOptions = {\n\t\t\t...installOptions,\n\t\t\tprofileLocation: await this.getProfileLocation(\n\t\t\t\tinstallOptions?.profileLocation,\n\t\t\t),\n\t\t};\n\t\treturn super.installFromGallery(extension, installOptions);\n\t}\n\n\toverride async installGalleryExtensions(\n\t\textensions: InstallExtensionInfo[],\n\t): Promise<InstallExtensionResult[]> {\n\t\tconst infos: InstallExtensionInfo[] = [];\n\t\tfor (const extension of extensions) {\n\t\t\tinfos.push({\n\t\t\t\t...extension,\n\t\t\t\toptions: {\n\t\t\t\t\t...extension.options,\n\t\t\t\t\tprofileLocation: await this.getProfileLocation(\n\t\t\t\t\t\textension.options?.profileLocation,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\treturn super.installGalleryExtensions(infos);\n\t}\n\n\toverride async uninstall(\n\t\textension: ILocalExtension,\n\t\toptions?: UninstallOptions,\n\t): Promise<void> {\n\t\toptions = {\n\t\t\t...options,\n\t\t\tprofileLocation: await this.getProfileLocation(\n\t\t\t\toptions?.profileLocation,\n\t\t\t),\n\t\t};\n\t\treturn super.uninstall(extension, options);\n\t}\n\n\toverride async uninstallExtensions(\n\t\textensions: UninstallExtensionInfo[],\n\t): Promise<void> {\n\t\tconst infos: UninstallExtensionInfo[] = [];\n\t\tfor (const { extension, options } of extensions) {\n\t\t\tinfos.push({\n\t\t\t\textension,\n\t\t\t\toptions: {\n\t\t\t\t\t...options,\n\t\t\t\t\tprofileLocation: await this.getProfileLocation(\n\t\t\t\t\t\toptions?.profileLocation,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\treturn super.uninstallExtensions(infos);\n\t}\n\n\toverride async getInstalled(\n\t\ttype: ExtensionType | null = null,\n\t\textensionsProfileResource?: URI,\n\t\tproductVersion?: IProductVersion,\n\t): Promise<ILocalExtension[]> {\n\t\treturn super.getInstalled(\n\t\t\ttype,\n\t\t\tawait this.getProfileLocation(extensionsProfileResource),\n\t\t\tproductVersion,\n\t\t);\n\t}\n\n\toverride async updateMetadata(\n\t\tlocal: ILocalExtension,\n\t\tmetadata: Partial<Metadata>,\n\t\textensionsProfileResource?: URI,\n\t): Promise<ILocalExtension> {\n\t\treturn super.updateMetadata(\n\t\t\tlocal,\n\t\t\tmetadata,\n\t\t\tawait this.getProfileLocation(extensionsProfileResource),\n\t\t);\n\t}\n\n\toverride async toggleAppliationScope(\n\t\tlocal: ILocalExtension,\n\t\tfromProfileLocation: URI,\n\t): Promise<ILocalExtension> {\n\t\treturn super.toggleAppliationScope(\n\t\t\tlocal,\n\t\t\tawait this.getProfileLocation(fromProfileLocation),\n\t\t);\n\t}\n\n\toverride async copyExtensions(\n\t\tfromProfileLocation: URI,\n\t\ttoProfileLocation: URI,\n\t): Promise<void> {\n\t\treturn super.copyExtensions(\n\t\t\tawait this.getProfileLocation(fromProfileLocation),\n\t\t\tawait this.getProfileLocation(toProfileLocation),\n\t\t);\n\t}\n\n\tprivate async whenProfileChanged(\n\t\te: DidChangeUserDataProfileEvent,\n\t): Promise<void> {\n\t\tconst previousProfileLocation = await this.getProfileLocation(\n\t\t\te.previous.extensionsResource,\n\t\t);\n\t\tconst currentProfileLocation = await this.getProfileLocation(\n\t\t\te.profile.extensionsResource,\n\t\t);\n\n\t\tif (\n\t\t\tthis.uriIdentityService.extUri.isEqual(\n\t\t\t\tpreviousProfileLocation,\n\t\t\t\tcurrentProfileLocation,\n\t\t\t)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst eventData = await this.switchExtensionsProfile(\n\t\t\tpreviousProfileLocation,\n\t\t\tcurrentProfileLocation,\n\t\t);\n\t\tthis._onDidChangeProfile.fire(eventData);\n\t}\n\n\tprotected async switchExtensionsProfile(\n\t\tpreviousProfileLocation: URI,\n\t\tcurrentProfileLocation: URI,\n\t\tpreserveExtensions?: ExtensionIdentifier[],\n\t): Promise<DidChangeProfileEvent> {\n\t\tconst oldExtensions = await this.getInstalled(\n\t\t\tExtensionType.User,\n\t\t\tpreviousProfileLocation,\n\t\t);\n\t\tconst newExtensions = await this.getInstalled(\n\t\t\tExtensionType.User,\n\t\t\tcurrentProfileLocation,\n\t\t);\n\t\tif (preserveExtensions?.length) {\n\t\t\tconst extensionsToInstall: IExtensionIdentifier[] = [];\n\t\t\tfor (const extension of oldExtensions) {\n\t\t\t\tif (\n\t\t\t\t\tpreserveExtensions.some((id) =>\n\t\t\t\t\t\tExtensionIdentifier.equals(extension.identifier.id, id),\n\t\t\t\t\t) &&\n\t\t\t\t\t!newExtensions.some((e) =>\n\t\t\t\t\t\tExtensionIdentifier.equals(\n\t\t\t\t\t\t\te.identifier.id,\n\t\t\t\t\t\t\textension.identifier.id,\n\t\t\t\t\t\t),\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\textensionsToInstall.push(extension.identifier);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (extensionsToInstall.length) {\n\t\t\t\tawait this.installExtensionsFromProfile(\n\t\t\t\t\textensionsToInstall,\n\t\t\t\t\tpreviousProfileLocation,\n\t\t\t\t\tcurrentProfileLocation,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn delta(oldExtensions, newExtensions, (a, b) =>\n\t\t\tcompare(\n\t\t\t\t`${ExtensionIdentifier.toKey(a.identifier.id)}@${a.manifest.version}`,\n\t\t\t\t`${ExtensionIdentifier.toKey(b.identifier.id)}@${b.manifest.version}`,\n\t\t\t),\n\t\t);\n\t}\n\n\tprotected getProfileLocation(profileLocation: URI): Promise<URI>;\n\tprotected getProfileLocation(\n\t\tprofileLocation?: URI,\n\t): Promise<URI | undefined>;\n\tprotected async getProfileLocation(\n\t\tprofileLocation?: URI,\n\t): Promise<URI | undefined> {\n\t\treturn (\n\t\t\tprofileLocation ??\n\t\t\tthis.userDataProfileService.currentProfile.extensionsResource\n\t\t);\n\t}\n\n\tprotected abstract filterEvent(\n\t\tprofileLocation: URI,\n\t\tisApplicationScoped: boolean,\n\t): boolean | Promise<boolean>;\n}\n"],
  "mappings": "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",
  "names": []
}
