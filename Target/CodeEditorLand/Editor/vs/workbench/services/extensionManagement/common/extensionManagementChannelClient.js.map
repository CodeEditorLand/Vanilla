{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/extensionManagement/common/extensionManagementChannelClient.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILocalExtension, IGalleryExtension, InstallOptions, UninstallOptions, Metadata, InstallExtensionResult, InstallExtensionInfo, IProductVersion, UninstallExtensionInfo } from '../../../../platform/extensionManagement/common/extensionManagement.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ExtensionIdentifier, ExtensionType, IExtensionIdentifier } from '../../../../platform/extensions/common/extensions.js';\nimport { ExtensionManagementChannelClient as BaseExtensionManagementChannelClient, ExtensionEventResult } from '../../../../platform/extensionManagement/common/extensionManagementIpc.js';\nimport { IChannel } from '../../../../base/parts/ipc/common/ipc.js';\nimport { DidChangeUserDataProfileEvent, IUserDataProfileService } from '../../userDataProfile/common/userDataProfile.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { delta } from '../../../../base/common/arrays.js';\nimport { compare } from '../../../../base/common/strings.js';\nimport { IUriIdentityService } from '../../../../platform/uriIdentity/common/uriIdentity.js';\nimport { DidChangeProfileEvent, IProfileAwareExtensionManagementService } from './extensionManagement.js';\n\nexport abstract class ProfileAwareExtensionManagementChannelClient extends BaseExtensionManagementChannelClient implements IProfileAwareExtensionManagementService {\n\n\tprivate readonly _onDidChangeProfile = this._register(new Emitter<{ readonly added: ILocalExtension[]; readonly removed: ILocalExtension[] }>());\n\treadonly onDidChangeProfile = this._onDidChangeProfile.event;\n\n\tconstructor(channel: IChannel,\n\t\tprotected readonly userDataProfileService: IUserDataProfileService,\n\t\tprotected readonly uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(channel);\n\t\tthis._register(userDataProfileService.onDidChangeCurrentProfile(e => {\n\t\t\tif (!this.uriIdentityService.extUri.isEqual(e.previous.extensionsResource, e.profile.extensionsResource)) {\n\t\t\t\te.join(this.whenProfileChanged(e));\n\t\t\t}\n\t\t}));\n\t}\n\n\tprotected override async fireEvent<E extends ExtensionEventResult>(event: Emitter<E>, data: E): Promise<void>;\n\tprotected override async fireEvent<E extends ExtensionEventResult>(event: Emitter<readonly E[]>, data: E[]): Promise<void>;\n\tprotected override async fireEvent(arg0: any, arg1: any): Promise<void> {\n\t\tif (Array.isArray(arg1)) {\n\t\t\tconst event = arg0 as Emitter<ExtensionEventResult[]>;\n\t\t\tconst data = arg1 as ExtensionEventResult[];\n\t\t\tconst filtered = [];\n\t\t\tfor (const e of data) {\n\t\t\t\tconst result = this.filterEvent(e.profileLocation, e.applicationScoped ?? e.local?.isApplicationScoped ?? false);\n\t\t\t\tif (result instanceof Promise ? await result : result) {\n\t\t\t\t\tfiltered.push(e);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (filtered.length) {\n\t\t\t\tevent.fire(filtered);\n\t\t\t}\n\t\t} else {\n\t\t\tconst event = arg0 as Emitter<ExtensionEventResult>;\n\t\t\tconst data = arg1 as ExtensionEventResult;\n\t\t\tconst result = this.filterEvent(data.profileLocation, data.applicationScoped ?? data.local?.isApplicationScoped ?? false);\n\t\t\tif (result instanceof Promise ? await result : result) {\n\t\t\t\tevent.fire(data);\n\t\t\t}\n\t\t}\n\t}\n\n\toverride async install(vsix: URI, installOptions?: InstallOptions): Promise<ILocalExtension> {\n\t\tinstallOptions = { ...installOptions, profileLocation: await this.getProfileLocation(installOptions?.profileLocation) };\n\t\treturn super.install(vsix, installOptions);\n\t}\n\n\toverride async installFromLocation(location: URI, profileLocation: URI): Promise<ILocalExtension> {\n\t\treturn super.installFromLocation(location, await this.getProfileLocation(profileLocation));\n\t}\n\n\toverride async installFromGallery(extension: IGalleryExtension, installOptions?: InstallOptions): Promise<ILocalExtension> {\n\t\tinstallOptions = { ...installOptions, profileLocation: await this.getProfileLocation(installOptions?.profileLocation) };\n\t\treturn super.installFromGallery(extension, installOptions);\n\t}\n\n\toverride async installGalleryExtensions(extensions: InstallExtensionInfo[]): Promise<InstallExtensionResult[]> {\n\t\tconst infos: InstallExtensionInfo[] = [];\n\t\tfor (const extension of extensions) {\n\t\t\tinfos.push({ ...extension, options: { ...extension.options, profileLocation: await this.getProfileLocation(extension.options?.profileLocation) } });\n\t\t}\n\t\treturn super.installGalleryExtensions(infos);\n\t}\n\n\toverride async uninstall(extension: ILocalExtension, options?: UninstallOptions): Promise<void> {\n\t\toptions = { ...options, profileLocation: await this.getProfileLocation(options?.profileLocation) };\n\t\treturn super.uninstall(extension, options);\n\t}\n\n\toverride async uninstallExtensions(extensions: UninstallExtensionInfo[]): Promise<void> {\n\t\tconst infos: UninstallExtensionInfo[] = [];\n\t\tfor (const { extension, options } of extensions) {\n\t\t\tinfos.push({ extension, options: { ...options, profileLocation: await this.getProfileLocation(options?.profileLocation) } });\n\t\t}\n\t\treturn super.uninstallExtensions(infos);\n\t}\n\n\toverride async getInstalled(type: ExtensionType | null = null, extensionsProfileResource?: URI, productVersion?: IProductVersion): Promise<ILocalExtension[]> {\n\t\treturn super.getInstalled(type, await this.getProfileLocation(extensionsProfileResource), productVersion);\n\t}\n\n\toverride async updateMetadata(local: ILocalExtension, metadata: Partial<Metadata>, extensionsProfileResource?: URI): Promise<ILocalExtension> {\n\t\treturn super.updateMetadata(local, metadata, await this.getProfileLocation(extensionsProfileResource));\n\t}\n\n\toverride async toggleAppliationScope(local: ILocalExtension, fromProfileLocation: URI): Promise<ILocalExtension> {\n\t\treturn super.toggleAppliationScope(local, await this.getProfileLocation(fromProfileLocation));\n\t}\n\n\toverride async copyExtensions(fromProfileLocation: URI, toProfileLocation: URI): Promise<void> {\n\t\treturn super.copyExtensions(await this.getProfileLocation(fromProfileLocation), await this.getProfileLocation(toProfileLocation));\n\t}\n\n\tprivate async whenProfileChanged(e: DidChangeUserDataProfileEvent): Promise<void> {\n\t\tconst previousProfileLocation = await this.getProfileLocation(e.previous.extensionsResource);\n\t\tconst currentProfileLocation = await this.getProfileLocation(e.profile.extensionsResource);\n\n\t\tif (this.uriIdentityService.extUri.isEqual(previousProfileLocation, currentProfileLocation)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst eventData = await this.switchExtensionsProfile(previousProfileLocation, currentProfileLocation);\n\t\tthis._onDidChangeProfile.fire(eventData);\n\t}\n\n\tprotected async switchExtensionsProfile(previousProfileLocation: URI, currentProfileLocation: URI, preserveExtensions?: ExtensionIdentifier[]): Promise<DidChangeProfileEvent> {\n\t\tconst oldExtensions = await this.getInstalled(ExtensionType.User, previousProfileLocation);\n\t\tconst newExtensions = await this.getInstalled(ExtensionType.User, currentProfileLocation);\n\t\tif (preserveExtensions?.length) {\n\t\t\tconst extensionsToInstall: IExtensionIdentifier[] = [];\n\t\t\tfor (const extension of oldExtensions) {\n\t\t\t\tif (preserveExtensions.some(id => ExtensionIdentifier.equals(extension.identifier.id, id)) &&\n\t\t\t\t\t!newExtensions.some(e => ExtensionIdentifier.equals(e.identifier.id, extension.identifier.id))) {\n\t\t\t\t\textensionsToInstall.push(extension.identifier);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (extensionsToInstall.length) {\n\t\t\t\tawait this.installExtensionsFromProfile(extensionsToInstall, previousProfileLocation, currentProfileLocation);\n\t\t\t}\n\t\t}\n\t\treturn delta(oldExtensions, newExtensions, (a, b) => compare(`${ExtensionIdentifier.toKey(a.identifier.id)}@${a.manifest.version}`, `${ExtensionIdentifier.toKey(b.identifier.id)}@${b.manifest.version}`));\n\t}\n\n\tprotected getProfileLocation(profileLocation: URI): Promise<URI>;\n\tprotected getProfileLocation(profileLocation?: URI): Promise<URI | undefined>;\n\tprotected async getProfileLocation(profileLocation?: URI): Promise<URI | undefined> {\n\t\treturn profileLocation ?? this.userDataProfileService.currentProfile.extensionsResource;\n\t}\n\n\tprotected abstract filterEvent(profileLocation: URI, isApplicationScoped: boolean): boolean | Promise<boolean>;\n}\n"],
  "mappings": "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",
  "names": []
}
