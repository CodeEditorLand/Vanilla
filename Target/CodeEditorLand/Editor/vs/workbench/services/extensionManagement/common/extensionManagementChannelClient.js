import{delta as f}from"../../../../base/common/arrays.js";import{Emitter as d}from"../../../../base/common/event.js";import{compare as p}from"../../../../base/common/strings.js";import"../../../../base/common/uri.js";import"../../../../base/parts/ipc/common/ipc.js";import"../../../../platform/extensionManagement/common/extensionManagement.js";import{ExtensionManagementChannelClient as E}from"../../../../platform/extensionManagement/common/extensionManagementIpc.js";import{ExtensionIdentifier as a,ExtensionType as c}from"../../../../platform/extensions/common/extensions.js";import"../../../../platform/uriIdentity/common/uriIdentity.js";import"../../userDataProfile/common/userDataProfile.js";import"./extensionManagement.js";class H extends E{constructor(i,e,t){super(i);this.userDataProfileService=e;this.uriIdentityService=t;this._register(e.onDidChangeCurrentProfile(o=>{this.uriIdentityService.extUri.isEqual(o.previous.extensionsResource,o.profile.extensionsResource)||o.join(this.whenProfileChanged(o))}))}_onDidChangeProfile=this._register(new d);onDidChangeProfile=this._onDidChangeProfile.event;async fireEvent(i,e){if(Array.isArray(e)){const t=i,o=e,r=[];for(const n of o){const s=this.filterEvent(n.profileLocation,n.applicationScoped??n.local?.isApplicationScoped??!1);(s instanceof Promise?await s:s)&&r.push(n)}r.length&&t.fire(r)}else{const t=i,o=e,r=this.filterEvent(o.profileLocation,o.applicationScoped??o.local?.isApplicationScoped??!1);(r instanceof Promise?await r:r)&&t.fire(o)}}async install(i,e){return e={...e,profileLocation:await this.getProfileLocation(e?.profileLocation)},super.install(i,e)}async installFromLocation(i,e){return super.installFromLocation(i,await this.getProfileLocation(e))}async installFromGallery(i,e){return e={...e,profileLocation:await this.getProfileLocation(e?.profileLocation)},super.installFromGallery(i,e)}async installGalleryExtensions(i){const e=[];for(const t of i)e.push({...t,options:{...t.options,profileLocation:await this.getProfileLocation(t.options?.profileLocation)}});return super.installGalleryExtensions(e)}async uninstall(i,e){return e={...e,profileLocation:await this.getProfileLocation(e?.profileLocation)},super.uninstall(i,e)}async uninstallExtensions(i){const e=[];for(const{extension:t,options:o}of i)e.push({extension:t,options:{...o,profileLocation:await this.getProfileLocation(o?.profileLocation)}});return super.uninstallExtensions(e)}async getInstalled(i=null,e,t){return super.getInstalled(i,await this.getProfileLocation(e),t)}async updateMetadata(i,e,t){return super.updateMetadata(i,e,await this.getProfileLocation(t))}async toggleAppliationScope(i,e){return super.toggleAppliationScope(i,await this.getProfileLocation(e))}async copyExtensions(i,e){return super.copyExtensions(await this.getProfileLocation(i),await this.getProfileLocation(e))}async whenProfileChanged(i){const e=await this.getProfileLocation(i.previous.extensionsResource),t=await this.getProfileLocation(i.profile.extensionsResource);if(this.uriIdentityService.extUri.isEqual(e,t))return;const o=await this.switchExtensionsProfile(e,t);this._onDidChangeProfile.fire(o)}async switchExtensionsProfile(i,e,t){const o=await this.getInstalled(c.User,i),r=await this.getInstalled(c.User,e);if(t?.length){const n=[];for(const s of o)t.some(l=>a.equals(s.identifier.id,l))&&!r.some(l=>a.equals(l.identifier.id,s.identifier.id))&&n.push(s.identifier);n.length&&await this.installExtensionsFromProfile(n,i,e)}return f(o,r,(n,s)=>p(`${a.toKey(n.identifier.id)}@${n.manifest.version}`,`${a.toKey(s.identifier.id)}@${s.manifest.version}`))}async getProfileLocation(i){return i??this.userDataProfileService.currentProfile.extensionsResource}}export{H as ProfileAwareExtensionManagementChannelClient};
