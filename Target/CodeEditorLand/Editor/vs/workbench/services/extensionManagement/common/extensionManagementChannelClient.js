import"../../../../platform/extensionManagement/common/extensionManagement.js";import"../../../../base/common/uri.js";import{ExtensionIdentifier as r,ExtensionType as f}from"../../../../platform/extensions/common/extensions.js";import{ExtensionManagementChannelClient as d}from"../../../../platform/extensionManagement/common/extensionManagementIpc.js";import"../../../../base/parts/ipc/common/ipc.js";import"../../userDataProfile/common/userDataProfile.js";import{Emitter as a}from"../../../../base/common/event.js";import{delta as p}from"../../../../base/common/arrays.js";import{compare as E}from"../../../../base/common/strings.js";import"../../../../platform/uriIdentity/common/uriIdentity.js";import"./extensionManagement.js";class Q extends d{constructor(i,e,n){super(i);this.userDataProfileService=e;this.uriIdentityService=n;this._register(e.onDidChangeCurrentProfile(t=>{this.uriIdentityService.extUri.isEqual(t.previous.extensionsResource,t.profile.extensionsResource)||t.join(this.whenProfileChanged(t))}))}_onDidChangeProfile=this._register(new a);onDidChangeProfile=this._onDidChangeProfile.event;_onDidProfileAwareInstallExtensions=this._register(new a);get onProfileAwareDidInstallExtensions(){return this._onDidProfileAwareInstallExtensions.event}_onDidProfileAwareUninstallExtension=this._register(new a);get onProfileAwareDidUninstallExtension(){return this._onDidProfileAwareUninstallExtension.event}_onDidProfileAwareUpdateExtensionMetadata=this._register(new a);get onProfileAwareDidUpdateExtensionMetadata(){return this._onDidProfileAwareUpdateExtensionMetadata.event}async onInstallExtensionEvent(i){const e=this.filterEvent(i.profileLocation,i.applicationScoped??!1);(e instanceof Promise?await e:e)&&this._onInstallExtension.fire(i)}async onDidInstallExtensionsEvent(i){const e=[];for(const n of i){const t=this.filterEvent(n.profileLocation,n.applicationScoped??n.local?.isApplicationScoped??!1);(t instanceof Promise?await t:t)&&e.push(n)}e.length&&this._onDidInstallExtensions.fire(e),this._onDidProfileAwareInstallExtensions.fire(i)}async onUninstallExtensionEvent(i){const e=this.filterEvent(i.profileLocation,i.applicationScoped??!1);(e instanceof Promise?await e:e)&&this._onUninstallExtension.fire(i)}async onDidUninstallExtensionEvent(i){const e=this.filterEvent(i.profileLocation,i.applicationScoped??!1);(e instanceof Promise?await e:e)&&this._onDidUninstallExtension.fire(i),this._onDidProfileAwareUninstallExtension.fire(i)}async onDidUpdateExtensionMetadataEvent(i){const e=this.filterEvent(i.profileLocation,i.local?.isApplicationScoped??!1);(e instanceof Promise?await e:e)&&this._onDidUpdateExtensionMetadata.fire(i),this._onDidProfileAwareUpdateExtensionMetadata.fire(i)}async install(i,e){return e={...e,profileLocation:await this.getProfileLocation(e?.profileLocation)},super.install(i,e)}async installFromLocation(i,e){return super.installFromLocation(i,await this.getProfileLocation(e))}async installFromGallery(i,e){return e={...e,profileLocation:await this.getProfileLocation(e?.profileLocation)},super.installFromGallery(i,e)}async installGalleryExtensions(i){const e=[];for(const n of i)e.push({...n,options:{...n.options,profileLocation:await this.getProfileLocation(n.options?.profileLocation)}});return super.installGalleryExtensions(e)}async uninstall(i,e){return e={...e,profileLocation:await this.getProfileLocation(e?.profileLocation)},super.uninstall(i,e)}async uninstallExtensions(i){const e=[];for(const{extension:n,options:t}of i)e.push({extension:n,options:{...t,profileLocation:await this.getProfileLocation(t?.profileLocation)}});return super.uninstallExtensions(e)}async getInstalled(i=null,e,n){return super.getInstalled(i,await this.getProfileLocation(e),n)}async updateMetadata(i,e,n){return super.updateMetadata(i,e,await this.getProfileLocation(n))}async toggleAppliationScope(i,e){return super.toggleAppliationScope(i,await this.getProfileLocation(e))}async copyExtensions(i,e){return super.copyExtensions(await this.getProfileLocation(i),await this.getProfileLocation(e))}async whenProfileChanged(i){const e=await this.getProfileLocation(i.previous.extensionsResource),n=await this.getProfileLocation(i.profile.extensionsResource);if(this.uriIdentityService.extUri.isEqual(e,n))return;const t=await this.switchExtensionsProfile(e,n);this._onDidChangeProfile.fire(t)}async switchExtensionsProfile(i,e,n){const t=await this.getInstalled(f.User,i),c=await this.getInstalled(f.User,e);if(n?.length){const o=[];for(const s of t)n.some(l=>r.equals(s.identifier.id,l))&&!c.some(l=>r.equals(l.identifier.id,s.identifier.id))&&o.push(s.identifier);o.length&&await this.installExtensionsFromProfile(o,i,e)}return p(t,c,(o,s)=>E(`${r.toKey(o.identifier.id)}@${o.manifest.version}`,`${r.toKey(s.identifier.id)}@${s.manifest.version}`))}async getProfileLocation(i){return i??this.userDataProfileService.currentProfile.extensionsResource}}export{Q as ProfileAwareExtensionManagementChannelClient};
