{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/extensionManagement/common/extensionManagementService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { coalesce } from \"../../../../base/common/arrays.js\";\nimport { Promises } from \"../../../../base/common/async.js\";\nimport { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport {\n\tCancellationError,\n\tgetErrorMessage,\n} from \"../../../../base/common/errors.js\";\nimport {\n\tEmitter,\n\tEvent,\n\tEventMultiplexer,\n} from \"../../../../base/common/event.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n} from \"../../../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport Severity from \"../../../../base/common/severity.js\";\nimport { isString, isUndefined } from \"../../../../base/common/types.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { ICommandService } from \"../../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\tIDialogService,\n\ttype IPromptButton,\n} from \"../../../../platform/dialogs/common/dialogs.js\";\nimport { IDownloadService } from \"../../../../platform/download/common/download.js\";\nimport {\n\ttype DidUpdateExtensionMetadata,\n\tEXTENSION_INSTALL_SOURCE_CONTEXT,\n\tExtensionInstallSource,\n\tExtensionManagementError,\n\tExtensionManagementErrorCode,\n\tIExtensionGalleryService,\n\ttype IExtensionIdentifier,\n\ttype IExtensionsControlManifest,\n\ttype IGalleryExtension,\n\ttype ILocalExtension,\n\ttype IProductVersion,\n\ttype InstallExtensionInfo,\n\ttype InstallExtensionResult,\n\tInstallOperation,\n\ttype InstallOptions,\n\ttype Metadata,\n\ttype UninstallExtensionInfo,\n\ttype UninstallOptions,\n} from \"../../../../platform/extensionManagement/common/extensionManagement.js\";\nimport {\n\tareSameExtensions,\n\tcomputeTargetPlatform,\n} from \"../../../../platform/extensionManagement/common/extensionManagementUtil.js\";\nimport {\n\tIExtensionsScannerService,\n\ttype IScannedExtension,\n} from \"../../../../platform/extensionManagement/common/extensionsScannerService.js\";\nimport {\n\tExtensionType,\n\ttype IExtensionManifest,\n\ttype TargetPlatform,\n\tgetWorkspaceSupportTypeMessage,\n\tisLanguagePackExtension,\n} from \"../../../../platform/extensions/common/extensions.js\";\nimport {\n\ttype FileChangesEvent,\n\tIFileService,\n} from \"../../../../platform/files/common/files.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { IProductService } from \"../../../../platform/product/common/productService.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { IUriIdentityService } from \"../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport {\n\tIUserDataSyncEnablementService,\n\tSyncResource,\n} from \"../../../../platform/userDataSync/common/userDataSync.js\";\nimport {\n\tIWorkspaceContextService,\n\tWorkbenchState,\n} from \"../../../../platform/workspace/common/workspace.js\";\nimport {\n\tIWorkspaceTrustRequestService,\n\ttype WorkspaceTrustRequestButton,\n} from \"../../../../platform/workspace/common/workspaceTrust.js\";\nimport { IExtensionManifestPropertiesService } from \"../../extensions/common/extensionManifestPropertiesService.js\";\nimport { IUserDataProfileService } from \"../../userDataProfile/common/userDataProfile.js\";\nimport {\n\ttype DidChangeProfileForServerEvent,\n\ttype DidUninstallExtensionOnServerEvent,\n\ttype IExtensionManagementServer,\n\tIExtensionManagementServerService,\n\ttype IResourceExtension,\n\ttype IWorkbenchExtensionManagementService,\n\ttype InstallExtensionOnServerEvent,\n\ttype UninstallExtensionOnServerEvent,\n} from \"./extensionManagement.js\";\n\nfunction isGalleryExtension(\n\textension: IResourceExtension | IGalleryExtension,\n): extension is IGalleryExtension {\n\treturn extension.type === \"gallery\";\n}\n\nexport class ExtensionManagementService\n\textends Disposable\n\timplements IWorkbenchExtensionManagementService\n{\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onInstallExtension = this._register(\n\t\tnew Emitter<InstallExtensionOnServerEvent>(),\n\t);\n\treadonly onInstallExtension: Event<InstallExtensionOnServerEvent>;\n\n\tprivate readonly _onDidInstallExtensions = this._register(\n\t\tnew Emitter<readonly InstallExtensionResult[]>(),\n\t);\n\treadonly onDidInstallExtensions: Event<readonly InstallExtensionResult[]>;\n\n\tprivate readonly _onUninstallExtension = this._register(\n\t\tnew Emitter<UninstallExtensionOnServerEvent>(),\n\t);\n\treadonly onUninstallExtension: Event<UninstallExtensionOnServerEvent>;\n\n\tprivate readonly _onDidUninstallExtension = this._register(\n\t\tnew Emitter<DidUninstallExtensionOnServerEvent>(),\n\t);\n\treadonly onDidUninstallExtension: Event<DidUninstallExtensionOnServerEvent>;\n\n\treadonly onDidUpdateExtensionMetadata: Event<DidUpdateExtensionMetadata>;\n\treadonly onDidChangeProfile: Event<DidChangeProfileForServerEvent>;\n\n\treadonly onDidEnableExtensions: Event<ILocalExtension[]>;\n\n\tprotected readonly servers: IExtensionManagementServer[] = [];\n\n\tprivate readonly workspaceExtensionManagementService: WorkspaceExtensionsManagementService;\n\n\tconstructor(\n\t\t@IExtensionManagementServerService protected readonly extensionManagementServerService: IExtensionManagementServerService,\n\t\t@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService,\n\t\t@IUserDataProfileService private readonly userDataProfileService: IUserDataProfileService,\n\t\t@IConfigurationService protected readonly configurationService: IConfigurationService,\n\t\t@IProductService protected readonly productService: IProductService,\n\t\t@IDownloadService protected readonly downloadService: IDownloadService,\n\t\t@IUserDataSyncEnablementService private readonly userDataSyncEnablementService: IUserDataSyncEnablementService,\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t\t@IWorkspaceTrustRequestService private readonly workspaceTrustRequestService: IWorkspaceTrustRequestService,\n\t\t@IExtensionManifestPropertiesService private readonly extensionManifestPropertiesService: IExtensionManifestPropertiesService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IExtensionsScannerService private readonly extensionsScannerService: IExtensionsScannerService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t) {\n\t\tsuper();\n\n\t\tthis.workspaceExtensionManagementService = this._register(this.instantiationService.createInstance(WorkspaceExtensionsManagementService));\n\t\tthis.onDidEnableExtensions = this.workspaceExtensionManagementService.onDidChangeInvalidExtensions;\n\n\t\tif (this.extensionManagementServerService.localExtensionManagementServer) {\n\t\t\tthis.servers.push(this.extensionManagementServerService.localExtensionManagementServer);\n\t\t}\n\t\tif (this.extensionManagementServerService.remoteExtensionManagementServer) {\n\t\t\tthis.servers.push(this.extensionManagementServerService.remoteExtensionManagementServer);\n\t\t}\n\t\tif (this.extensionManagementServerService.webExtensionManagementServer) {\n\t\t\tthis.servers.push(this.extensionManagementServerService.webExtensionManagementServer);\n\t\t}\n\n\t\tconst onInstallExtensionEventMultiplexer = this._register(new EventMultiplexer<InstallExtensionOnServerEvent>());\n\t\tthis._register(onInstallExtensionEventMultiplexer.add(this._onInstallExtension.event));\n\t\tthis.onInstallExtension = onInstallExtensionEventMultiplexer.event;\n\n\t\tconst onDidInstallExtensionsEventMultiplexer = this._register(new EventMultiplexer<readonly InstallExtensionResult[]>());\n\t\tthis._register(onDidInstallExtensionsEventMultiplexer.add(this._onDidInstallExtensions.event));\n\t\tthis.onDidInstallExtensions = onDidInstallExtensionsEventMultiplexer.event;\n\n\t\tconst onUninstallExtensionEventMultiplexer = this._register(new EventMultiplexer<UninstallExtensionOnServerEvent>());\n\t\tthis._register(onUninstallExtensionEventMultiplexer.add(this._onUninstallExtension.event));\n\t\tthis.onUninstallExtension = onUninstallExtensionEventMultiplexer.event;\n\n\t\tconst onDidUninstallExtensionEventMultiplexer = this._register(new EventMultiplexer<DidUninstallExtensionOnServerEvent>());\n\t\tthis._register(onDidUninstallExtensionEventMultiplexer.add(this._onDidUninstallExtension.event));\n\t\tthis.onDidUninstallExtension = onDidUninstallExtensionEventMultiplexer.event;\n\n\t\tconst onDidUpdateExtensionMetadaEventMultiplexer = this._register(new EventMultiplexer<DidUpdateExtensionMetadata>());\n\t\tthis.onDidUpdateExtensionMetadata = onDidUpdateExtensionMetadaEventMultiplexer.event;\n\n\t\tconst onDidChangeProfileEventMultiplexer = this._register(new EventMultiplexer<DidChangeProfileForServerEvent>());\n\t\tthis.onDidChangeProfile = onDidChangeProfileEventMultiplexer.event;\n\n\t\tfor (const server of this.servers) {\n\t\t\tthis._register(onInstallExtensionEventMultiplexer.add(Event.map(server.extensionManagementService.onInstallExtension, e => ({ ...e, server }))));\n\t\t\tthis._register(onDidInstallExtensionsEventMultiplexer.add(server.extensionManagementService.onDidInstallExtensions));\n\t\t\tthis._register(onUninstallExtensionEventMultiplexer.add(Event.map(server.extensionManagementService.onUninstallExtension, e => ({ ...e, server }))));\n\t\t\tthis._register(onDidUninstallExtensionEventMultiplexer.add(Event.map(server.extensionManagementService.onDidUninstallExtension, e => ({ ...e, server }))));\n\t\t\tthis._register(onDidUpdateExtensionMetadaEventMultiplexer.add(server.extensionManagementService.onDidUpdateExtensionMetadata));\n\t\t\tthis._register(onDidChangeProfileEventMultiplexer.add(Event.map(server.extensionManagementService.onDidChangeProfile, e => ({ ...e, server }))));\n\t\t}\n\t}\n\n\tasync getInstalled(\n\t\ttype?: ExtensionType,\n\t\tprofileLocation?: URI,\n\t\tproductVersion?: IProductVersion,\n\t): Promise<ILocalExtension[]> {\n\t\tconst result: ILocalExtension[] = [];\n\t\tawait Promise.all(\n\t\t\tthis.servers.map(async (server) => {\n\t\t\t\tconst installed =\n\t\t\t\t\tawait server.extensionManagementService.getInstalled(\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tprofileLocation,\n\t\t\t\t\t\tproductVersion,\n\t\t\t\t\t);\n\t\t\t\tif (server === this.getWorkspaceExtensionsServer()) {\n\t\t\t\t\tconst workspaceExtensions =\n\t\t\t\t\t\tawait this.getInstalledWorkspaceExtensions(true);\n\t\t\t\t\tinstalled.push(...workspaceExtensions);\n\t\t\t\t}\n\t\t\t\tresult.push(...installed);\n\t\t\t}),\n\t\t);\n\t\treturn result;\n\t}\n\n\tuninstall(\n\t\textension: ILocalExtension,\n\t\toptions: UninstallOptions,\n\t): Promise<void> {\n\t\treturn this.uninstallExtensions([{ extension, options }]);\n\t}\n\n\tasync uninstallExtensions(\n\t\textensions: UninstallExtensionInfo[],\n\t): Promise<void> {\n\t\tconst workspaceExtensions: ILocalExtension[] = [];\n\t\tconst groupedExtensions = new Map<\n\t\t\tIExtensionManagementServer,\n\t\t\tUninstallExtensionInfo[]\n\t\t>();\n\n\t\tconst addExtensionToServer = (\n\t\t\tserver: IExtensionManagementServer,\n\t\t\textension: ILocalExtension,\n\t\t\toptions?: UninstallOptions,\n\t\t) => {\n\t\t\tlet extensions = groupedExtensions.get(server);\n\t\t\tif (!extensions) {\n\t\t\t\tgroupedExtensions.set(server, (extensions = []));\n\t\t\t}\n\t\t\textensions.push({ extension, options });\n\t\t};\n\n\t\tfor (const { extension, options } of extensions) {\n\t\t\tif (extension.isWorkspaceScoped) {\n\t\t\t\tworkspaceExtensions.push(extension);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst server = this.getServer(extension);\n\t\t\tif (!server) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`Invalid location ${extension.location.toString()}`,\n\t\t\t\t);\n\t\t\t}\n\t\t\taddExtensionToServer(server, extension, options);\n\t\t\tif (\n\t\t\t\tthis.servers.length > 1 &&\n\t\t\t\tisLanguagePackExtension(extension.manifest)\n\t\t\t) {\n\t\t\t\tconst otherServers: IExtensionManagementServer[] =\n\t\t\t\t\tthis.servers.filter((s) => s !== server);\n\t\t\t\tfor (const otherServer of otherServers) {\n\t\t\t\t\tconst installed =\n\t\t\t\t\t\tawait otherServer.extensionManagementService.getInstalled();\n\t\t\t\t\tconst extensionInOtherServer = installed.find(\n\t\t\t\t\t\t(i) =>\n\t\t\t\t\t\t\t!i.isBuiltin &&\n\t\t\t\t\t\t\tareSameExtensions(\n\t\t\t\t\t\t\t\ti.identifier,\n\t\t\t\t\t\t\t\textension.identifier,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tif (extensionInOtherServer) {\n\t\t\t\t\t\taddExtensionToServer(\n\t\t\t\t\t\t\totherServer,\n\t\t\t\t\t\t\textensionInOtherServer,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst promises: Promise<void>[] = [];\n\t\tfor (const workspaceExtension of workspaceExtensions) {\n\t\t\tpromises.push(\n\t\t\t\tthis.uninstallExtensionFromWorkspace(workspaceExtension),\n\t\t\t);\n\t\t}\n\t\tfor (const [server, extensions] of groupedExtensions.entries()) {\n\t\t\tpromises.push(this.uninstallInServer(server, extensions));\n\t\t}\n\n\t\tconst result = await Promise.allSettled(promises);\n\t\tconst errors = result\n\t\t\t.filter((r) => r.status === \"rejected\")\n\t\t\t.map((r) => r.reason);\n\t\tif (errors.length) {\n\t\t\tthrow new Error(errors.map((e) => e.message).join(\"\\n\"));\n\t\t}\n\t}\n\n\tprivate async uninstallInServer(\n\t\tserver: IExtensionManagementServer,\n\t\textensions: UninstallExtensionInfo[],\n\t): Promise<void> {\n\t\tif (\n\t\t\tserver ===\n\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t.localExtensionManagementServer &&\n\t\t\tthis.extensionManagementServerService\n\t\t\t\t.remoteExtensionManagementServer\n\t\t) {\n\t\t\tfor (const { extension } of extensions) {\n\t\t\t\tconst installedExtensions =\n\t\t\t\t\tawait this.extensionManagementServerService.remoteExtensionManagementServer.extensionManagementService.getInstalled(\n\t\t\t\t\t\tExtensionType.User,\n\t\t\t\t\t);\n\t\t\t\tconst dependentNonUIExtensions = installedExtensions.filter(\n\t\t\t\t\t(i) =>\n\t\t\t\t\t\t!this.extensionManifestPropertiesService.prefersExecuteOnUI(\n\t\t\t\t\t\t\ti.manifest,\n\t\t\t\t\t\t) &&\n\t\t\t\t\t\ti.manifest.extensionDependencies &&\n\t\t\t\t\t\ti.manifest.extensionDependencies.some((id) =>\n\t\t\t\t\t\t\tareSameExtensions({ id }, extension.identifier),\n\t\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tif (dependentNonUIExtensions.length) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\tthis.getDependentsErrorMessage(\n\t\t\t\t\t\t\textension,\n\t\t\t\t\t\t\tdependentNonUIExtensions,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn server.extensionManagementService.uninstallExtensions(\n\t\t\textensions,\n\t\t);\n\t}\n\n\tprivate getDependentsErrorMessage(\n\t\textension: ILocalExtension,\n\t\tdependents: ILocalExtension[],\n\t): string {\n\t\tif (dependents.length === 1) {\n\t\t\treturn localize(\n\t\t\t\t\"singleDependentError\",\n\t\t\t\t\"Cannot uninstall extension '{0}'. Extension '{1}' depends on this.\",\n\t\t\t\textension.manifest.displayName || extension.manifest.name,\n\t\t\t\tdependents[0].manifest.displayName ||\n\t\t\t\t\tdependents[0].manifest.name,\n\t\t\t);\n\t\t}\n\t\tif (dependents.length === 2) {\n\t\t\treturn localize(\n\t\t\t\t\"twoDependentsError\",\n\t\t\t\t\"Cannot uninstall extension '{0}'. Extensions '{1}' and '{2}' depend on this.\",\n\t\t\t\textension.manifest.displayName || extension.manifest.name,\n\t\t\t\tdependents[0].manifest.displayName ||\n\t\t\t\t\tdependents[0].manifest.name,\n\t\t\t\tdependents[1].manifest.displayName ||\n\t\t\t\t\tdependents[1].manifest.name,\n\t\t\t);\n\t\t}\n\t\treturn localize(\n\t\t\t\"multipleDependentsError\",\n\t\t\t\"Cannot uninstall extension '{0}'. Extensions '{1}', '{2}' and others depend on this.\",\n\t\t\textension.manifest.displayName || extension.manifest.name,\n\t\t\tdependents[0].manifest.displayName || dependents[0].manifest.name,\n\t\t\tdependents[1].manifest.displayName || dependents[1].manifest.name,\n\t\t);\n\t}\n\n\tasync reinstallFromGallery(\n\t\textension: ILocalExtension,\n\t): Promise<ILocalExtension> {\n\t\tconst server = this.getServer(extension);\n\t\tif (server) {\n\t\t\tawait this.checkForWorkspaceTrust(extension.manifest, false);\n\t\t\treturn server.extensionManagementService.reinstallFromGallery(\n\t\t\t\textension,\n\t\t\t);\n\t\t}\n\t\treturn Promise.reject(\n\t\t\t`Invalid location ${extension.location.toString()}`,\n\t\t);\n\t}\n\n\tupdateMetadata(\n\t\textension: ILocalExtension,\n\t\tmetadata: Partial<Metadata>,\n\t): Promise<ILocalExtension> {\n\t\tconst server = this.getServer(extension);\n\t\tif (server) {\n\t\t\treturn server.extensionManagementService.updateMetadata(\n\t\t\t\textension,\n\t\t\t\tmetadata,\n\t\t\t\tthis.userDataProfileService.currentProfile.extensionsResource,\n\t\t\t);\n\t\t}\n\t\treturn Promise.reject(\n\t\t\t`Invalid location ${extension.location.toString()}`,\n\t\t);\n\t}\n\n\tasync resetPinnedStateForAllUserExtensions(pinned: boolean): Promise<void> {\n\t\tawait Promise.allSettled(\n\t\t\tthis.servers.map((server) =>\n\t\t\t\tserver.extensionManagementService.resetPinnedStateForAllUserExtensions(\n\t\t\t\t\tpinned,\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\t}\n\n\tzip(extension: ILocalExtension): Promise<URI> {\n\t\tconst server = this.getServer(extension);\n\t\tif (server) {\n\t\t\treturn server.extensionManagementService.zip(extension);\n\t\t}\n\t\treturn Promise.reject(\n\t\t\t`Invalid location ${extension.location.toString()}`,\n\t\t);\n\t}\n\n\tdownload(\n\t\textension: IGalleryExtension,\n\t\toperation: InstallOperation,\n\t\tdonotVerifySignature: boolean,\n\t): Promise<URI> {\n\t\tif (\n\t\t\tthis.extensionManagementServerService.localExtensionManagementServer\n\t\t) {\n\t\t\treturn this.extensionManagementServerService.localExtensionManagementServer.extensionManagementService.download(\n\t\t\t\textension,\n\t\t\t\toperation,\n\t\t\t\tdonotVerifySignature,\n\t\t\t);\n\t\t}\n\t\tthrow new Error(\"Cannot download extension\");\n\t}\n\n\tasync install(\n\t\tvsix: URI,\n\t\toptions?: InstallOptions,\n\t): Promise<ILocalExtension> {\n\t\tconst manifest = await this.getManifest(vsix);\n\t\treturn this.installVSIX(vsix, manifest, options);\n\t}\n\n\tasync installVSIX(\n\t\tvsix: URI,\n\t\tmanifest: IExtensionManifest,\n\t\toptions?: InstallOptions,\n\t): Promise<ILocalExtension> {\n\t\tconst serversToInstall = this.getServersToInstall(manifest);\n\t\tif (serversToInstall?.length) {\n\t\t\tawait this.checkForWorkspaceTrust(manifest, false);\n\t\t\tconst [local] = await Promises.settled(\n\t\t\t\tserversToInstall.map((server) =>\n\t\t\t\t\tthis.installVSIXInServer(vsix, server, options),\n\t\t\t\t),\n\t\t\t);\n\t\t\treturn local;\n\t\t}\n\t\treturn Promise.reject(\"No Servers to Install\");\n\t}\n\n\tprivate getServersToInstall(\n\t\tmanifest: IExtensionManifest,\n\t): IExtensionManagementServer[] | undefined {\n\t\tif (\n\t\t\tthis.extensionManagementServerService\n\t\t\t\t.localExtensionManagementServer &&\n\t\t\tthis.extensionManagementServerService\n\t\t\t\t.remoteExtensionManagementServer\n\t\t) {\n\t\t\tif (isLanguagePackExtension(manifest)) {\n\t\t\t\t// Install on both servers\n\t\t\t\treturn [\n\t\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t\t.localExtensionManagementServer,\n\t\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t\t.remoteExtensionManagementServer,\n\t\t\t\t];\n\t\t\t}\n\t\t\tif (\n\t\t\t\tthis.extensionManifestPropertiesService.prefersExecuteOnUI(\n\t\t\t\t\tmanifest,\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// Install only on local server\n\t\t\t\treturn [\n\t\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t\t.localExtensionManagementServer,\n\t\t\t\t];\n\t\t\t}\n\t\t\t// Install only on remote server\n\t\t\treturn [\n\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t.remoteExtensionManagementServer,\n\t\t\t];\n\t\t}\n\t\tif (\n\t\t\tthis.extensionManagementServerService.localExtensionManagementServer\n\t\t) {\n\t\t\treturn [\n\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t.localExtensionManagementServer,\n\t\t\t];\n\t\t}\n\t\tif (\n\t\t\tthis.extensionManagementServerService\n\t\t\t\t.remoteExtensionManagementServer\n\t\t) {\n\t\t\treturn [\n\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t.remoteExtensionManagementServer,\n\t\t\t];\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tasync installFromLocation(location: URI): Promise<ILocalExtension> {\n\t\tif (location.scheme === Schemas.file) {\n\t\t\tif (\n\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t.localExtensionManagementServer\n\t\t\t) {\n\t\t\t\treturn this.extensionManagementServerService.localExtensionManagementServer.extensionManagementService.installFromLocation(\n\t\t\t\t\tlocation,\n\t\t\t\t\tthis.userDataProfileService.currentProfile\n\t\t\t\t\t\t.extensionsResource,\n\t\t\t\t);\n\t\t\t}\n\t\t\tthrow new Error(\"Local extension management server is not found\");\n\t\t}\n\t\tif (location.scheme === Schemas.vscodeRemote) {\n\t\t\tif (\n\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t.remoteExtensionManagementServer\n\t\t\t) {\n\t\t\t\treturn this.extensionManagementServerService.remoteExtensionManagementServer.extensionManagementService.installFromLocation(\n\t\t\t\t\tlocation,\n\t\t\t\t\tthis.userDataProfileService.currentProfile\n\t\t\t\t\t\t.extensionsResource,\n\t\t\t\t);\n\t\t\t}\n\t\t\tthrow new Error(\"Remote extension management server is not found\");\n\t\t}\n\t\tif (\n\t\t\t!this.extensionManagementServerService.webExtensionManagementServer\n\t\t) {\n\t\t\tthrow new Error(\"Web extension management server is not found\");\n\t\t}\n\t\treturn this.extensionManagementServerService.webExtensionManagementServer.extensionManagementService.installFromLocation(\n\t\t\tlocation,\n\t\t\tthis.userDataProfileService.currentProfile.extensionsResource,\n\t\t);\n\t}\n\n\tprotected installVSIXInServer(\n\t\tvsix: URI,\n\t\tserver: IExtensionManagementServer,\n\t\toptions: InstallOptions | undefined,\n\t): Promise<ILocalExtension> {\n\t\treturn server.extensionManagementService.install(vsix, options);\n\t}\n\n\tgetManifest(vsix: URI): Promise<IExtensionManifest> {\n\t\tif (\n\t\t\tvsix.scheme === Schemas.file &&\n\t\t\tthis.extensionManagementServerService.localExtensionManagementServer\n\t\t) {\n\t\t\treturn this.extensionManagementServerService.localExtensionManagementServer.extensionManagementService.getManifest(\n\t\t\t\tvsix,\n\t\t\t);\n\t\t}\n\t\tif (\n\t\t\tvsix.scheme === Schemas.file &&\n\t\t\tthis.extensionManagementServerService\n\t\t\t\t.remoteExtensionManagementServer\n\t\t) {\n\t\t\treturn this.extensionManagementServerService.remoteExtensionManagementServer.extensionManagementService.getManifest(\n\t\t\t\tvsix,\n\t\t\t);\n\t\t}\n\t\tif (\n\t\t\tvsix.scheme === Schemas.vscodeRemote &&\n\t\t\tthis.extensionManagementServerService\n\t\t\t\t.remoteExtensionManagementServer\n\t\t) {\n\t\t\treturn this.extensionManagementServerService.remoteExtensionManagementServer.extensionManagementService.getManifest(\n\t\t\t\tvsix,\n\t\t\t);\n\t\t}\n\t\treturn Promise.reject(\"No Servers\");\n\t}\n\n\tasync canInstall(\n\t\textension: IGalleryExtension | IResourceExtension,\n\t): Promise<boolean> {\n\t\tif (isGalleryExtension(extension)) {\n\t\t\treturn this.canInstallGalleryExtension(extension);\n\t\t}\n\t\treturn this.canInstallResourceExtension(extension);\n\t}\n\n\tprivate async canInstallGalleryExtension(\n\t\tgallery: IGalleryExtension,\n\t): Promise<boolean> {\n\t\tif (\n\t\t\tthis.extensionManagementServerService\n\t\t\t\t.localExtensionManagementServer &&\n\t\t\t(await this.extensionManagementServerService.localExtensionManagementServer.extensionManagementService.canInstall(\n\t\t\t\tgallery,\n\t\t\t))\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t\tconst manifest = await this.extensionGalleryService.getManifest(\n\t\t\tgallery,\n\t\t\tCancellationToken.None,\n\t\t);\n\t\tif (!manifest) {\n\t\t\treturn false;\n\t\t}\n\t\tif (\n\t\t\tthis.extensionManagementServerService\n\t\t\t\t.remoteExtensionManagementServer &&\n\t\t\t(await this.extensionManagementServerService.remoteExtensionManagementServer.extensionManagementService.canInstall(\n\t\t\t\tgallery,\n\t\t\t)) &&\n\t\t\tthis.extensionManifestPropertiesService.canExecuteOnWorkspace(\n\t\t\t\tmanifest,\n\t\t\t)\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t\tif (\n\t\t\tthis.extensionManagementServerService\n\t\t\t\t.webExtensionManagementServer &&\n\t\t\t(await this.extensionManagementServerService.webExtensionManagementServer.extensionManagementService.canInstall(\n\t\t\t\tgallery,\n\t\t\t)) &&\n\t\t\tthis.extensionManifestPropertiesService.canExecuteOnWeb(manifest)\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate canInstallResourceExtension(\n\t\textension: IResourceExtension,\n\t): boolean {\n\t\tif (\n\t\t\tthis.extensionManagementServerService.localExtensionManagementServer\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t\tif (\n\t\t\tthis.extensionManagementServerService\n\t\t\t\t.remoteExtensionManagementServer &&\n\t\t\tthis.extensionManifestPropertiesService.canExecuteOnWorkspace(\n\t\t\t\textension.manifest,\n\t\t\t)\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t\tif (\n\t\t\tthis.extensionManagementServerService\n\t\t\t\t.webExtensionManagementServer &&\n\t\t\tthis.extensionManifestPropertiesService.canExecuteOnWeb(\n\t\t\t\textension.manifest,\n\t\t\t)\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tasync updateFromGallery(\n\t\tgallery: IGalleryExtension,\n\t\textension: ILocalExtension,\n\t\tinstallOptions?: InstallOptions,\n\t): Promise<ILocalExtension> {\n\t\tconst server = this.getServer(extension);\n\t\tif (!server) {\n\t\t\treturn Promise.reject(\n\t\t\t\t`Invalid location ${extension.location.toString()}`,\n\t\t\t);\n\t\t}\n\n\t\tconst servers: IExtensionManagementServer[] = [];\n\n\t\t// Update Language pack on local and remote servers\n\t\tif (isLanguagePackExtension(extension.manifest)) {\n\t\t\tservers.push(\n\t\t\t\t...this.servers.filter(\n\t\t\t\t\t(server) =>\n\t\t\t\t\t\tserver !==\n\t\t\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t\t\t.webExtensionManagementServer,\n\t\t\t\t),\n\t\t\t);\n\t\t} else {\n\t\t\tservers.push(server);\n\t\t}\n\n\t\tinstallOptions = {\n\t\t\t...(installOptions || {}),\n\t\t\tisApplicationScoped: extension.isApplicationScoped,\n\t\t};\n\t\treturn Promises.settled(\n\t\t\tservers.map((server) =>\n\t\t\t\tserver.extensionManagementService.installFromGallery(\n\t\t\t\t\tgallery,\n\t\t\t\t\tinstallOptions,\n\t\t\t\t),\n\t\t\t),\n\t\t).then(([local]) => local);\n\t}\n\n\tasync installGalleryExtensions(\n\t\textensions: InstallExtensionInfo[],\n\t): Promise<InstallExtensionResult[]> {\n\t\tconst results = new Map<string, InstallExtensionResult>();\n\n\t\tconst extensionsByServer = new Map<\n\t\t\tIExtensionManagementServer,\n\t\t\tInstallExtensionInfo[]\n\t\t>();\n\t\tawait Promise.all(\n\t\t\textensions.map(async ({ extension, options }) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst servers =\n\t\t\t\t\t\tawait this.validateAndGetExtensionManagementServersToInstall(\n\t\t\t\t\t\t\textension,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t);\n\t\t\t\t\tif (\n\t\t\t\t\t\t!options.isMachineScoped &&\n\t\t\t\t\t\tthis.isExtensionsSyncEnabled()\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t\t\t\t.localExtensionManagementServer &&\n\t\t\t\t\t\t\t!servers.includes(\n\t\t\t\t\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t\t\t\t\t.localExtensionManagementServer,\n\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t(await this.extensionManagementServerService.localExtensionManagementServer.extensionManagementService.canInstall(\n\t\t\t\t\t\t\t\textension,\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tservers.push(\n\t\t\t\t\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t\t\t\t\t.localExtensionManagementServer,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfor (const server of servers) {\n\t\t\t\t\t\tlet exensions = extensionsByServer.get(server);\n\t\t\t\t\t\tif (!exensions) {\n\t\t\t\t\t\t\textensionsByServer.set(server, (exensions = []));\n\t\t\t\t\t\t}\n\t\t\t\t\t\texensions.push({ extension, options });\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tresults.set(extension.identifier.id.toLowerCase(), {\n\t\t\t\t\t\tidentifier: extension.identifier,\n\t\t\t\t\t\tsource: extension,\n\t\t\t\t\t\terror,\n\t\t\t\t\t\toperation: InstallOperation.Install,\n\t\t\t\t\t\tprofileLocation:\n\t\t\t\t\t\t\toptions.profileLocation ??\n\t\t\t\t\t\t\tthis.userDataProfileService.currentProfile\n\t\t\t\t\t\t\t\t.extensionsResource,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tawait Promise.all(\n\t\t\t[...extensionsByServer.entries()].map(\n\t\t\t\tasync ([server, extensions]) => {\n\t\t\t\t\tconst serverResults =\n\t\t\t\t\t\tawait server.extensionManagementService.installGalleryExtensions(\n\t\t\t\t\t\t\textensions,\n\t\t\t\t\t\t);\n\t\t\t\t\tfor (const result of serverResults) {\n\t\t\t\t\t\tresults.set(result.identifier.id.toLowerCase(), result);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\treturn [...results.values()];\n\t}\n\n\tasync installFromGallery(\n\t\tgallery: IGalleryExtension,\n\t\tinstallOptions?: InstallOptions,\n\t): Promise<ILocalExtension> {\n\t\tconst servers =\n\t\t\tawait this.validateAndGetExtensionManagementServersToInstall(\n\t\t\t\tgallery,\n\t\t\t\tinstallOptions,\n\t\t\t);\n\t\tif (!installOptions || isUndefined(installOptions.isMachineScoped)) {\n\t\t\tconst isMachineScoped = await this.hasToFlagExtensionsMachineScoped(\n\t\t\t\t[gallery],\n\t\t\t);\n\t\t\tinstallOptions = { ...(installOptions || {}), isMachineScoped };\n\t\t}\n\n\t\tif (!installOptions.isMachineScoped && this.isExtensionsSyncEnabled()) {\n\t\t\tif (\n\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t.localExtensionManagementServer &&\n\t\t\t\t!servers.includes(\n\t\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t\t.localExtensionManagementServer,\n\t\t\t\t) &&\n\t\t\t\t(await this.extensionManagementServerService.localExtensionManagementServer.extensionManagementService.canInstall(\n\t\t\t\t\tgallery,\n\t\t\t\t))\n\t\t\t) {\n\t\t\t\tservers.push(\n\t\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t\t.localExtensionManagementServer,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn Promises.settled(\n\t\t\tservers.map((server) =>\n\t\t\t\tserver.extensionManagementService.installFromGallery(\n\t\t\t\t\tgallery,\n\t\t\t\t\tinstallOptions,\n\t\t\t\t),\n\t\t\t),\n\t\t).then(([local]) => local);\n\t}\n\n\tasync getExtensions(locations: URI[]): Promise<IResourceExtension[]> {\n\t\tconst scannedExtensions =\n\t\t\tawait this.extensionsScannerService.scanMultipleExtensions(\n\t\t\t\tlocations,\n\t\t\t\tExtensionType.User,\n\t\t\t\t{ includeInvalid: true },\n\t\t\t);\n\t\tconst result: IResourceExtension[] = [];\n\t\tawait Promise.all(\n\t\t\tscannedExtensions.map(async (scannedExtension) => {\n\t\t\t\tconst workspaceExtension =\n\t\t\t\t\tawait this.workspaceExtensionManagementService.toLocalWorkspaceExtension(\n\t\t\t\t\t\tscannedExtension,\n\t\t\t\t\t);\n\t\t\t\tif (workspaceExtension) {\n\t\t\t\t\tresult.push({\n\t\t\t\t\t\ttype: \"resource\",\n\t\t\t\t\t\tidentifier: workspaceExtension.identifier,\n\t\t\t\t\t\tlocation: workspaceExtension.location,\n\t\t\t\t\t\tmanifest: workspaceExtension.manifest,\n\t\t\t\t\t\tchangelogUri: workspaceExtension.changelogUrl,\n\t\t\t\t\t\treadmeUri: workspaceExtension.readmeUrl,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\treturn result;\n\t}\n\n\tgetInstalledWorkspaceExtensionLocations(): URI[] {\n\t\treturn this.workspaceExtensionManagementService.getInstalledWorkspaceExtensionsLocations();\n\t}\n\n\tasync getInstalledWorkspaceExtensions(\n\t\tincludeInvalid: boolean,\n\t): Promise<ILocalExtension[]> {\n\t\treturn this.workspaceExtensionManagementService.getInstalled(\n\t\t\tincludeInvalid,\n\t\t);\n\t}\n\n\tasync installResourceExtension(\n\t\textension: IResourceExtension,\n\t\tinstallOptions: InstallOptions,\n\t): Promise<ILocalExtension> {\n\t\tif (!this.canInstallResourceExtension(extension)) {\n\t\t\tthrow new Error(\n\t\t\t\t\"This extension cannot be installed in the current workspace.\",\n\t\t\t);\n\t\t}\n\t\tif (!installOptions.isWorkspaceScoped) {\n\t\t\treturn this.installFromLocation(extension.location);\n\t\t}\n\n\t\tthis.logService.info(\n\t\t\t`Installing the extension ${extension.identifier.id} from ${extension.location.toString()} in workspace`,\n\t\t);\n\t\tconst server = this.getWorkspaceExtensionsServer();\n\t\tthis._onInstallExtension.fire({\n\t\t\tidentifier: extension.identifier,\n\t\t\tsource: extension.location,\n\t\t\tserver,\n\t\t\tapplicationScoped: false,\n\t\t\tprofileLocation:\n\t\t\t\tthis.userDataProfileService.currentProfile.extensionsResource,\n\t\t\tworkspaceScoped: true,\n\t\t});\n\n\t\ttry {\n\t\t\tawait this.checkForWorkspaceTrust(extension.manifest, true);\n\n\t\t\tconst workspaceExtension =\n\t\t\t\tawait this.workspaceExtensionManagementService.install(\n\t\t\t\t\textension,\n\t\t\t\t);\n\n\t\t\tthis.logService.info(\n\t\t\t\t`Successfully installed the extension ${workspaceExtension.identifier.id} from ${extension.location.toString()} in the workspace`,\n\t\t\t);\n\t\t\tthis._onDidInstallExtensions.fire([\n\t\t\t\t{\n\t\t\t\t\tidentifier: workspaceExtension.identifier,\n\t\t\t\t\tsource: extension.location,\n\t\t\t\t\toperation: InstallOperation.Install,\n\t\t\t\t\tapplicationScoped: false,\n\t\t\t\t\tprofileLocation:\n\t\t\t\t\t\tthis.userDataProfileService.currentProfile\n\t\t\t\t\t\t\t.extensionsResource,\n\t\t\t\t\tlocal: workspaceExtension,\n\t\t\t\t\tworkspaceScoped: true,\n\t\t\t\t},\n\t\t\t]);\n\t\t\treturn workspaceExtension;\n\t\t} catch (error) {\n\t\t\tthis.logService.error(\n\t\t\t\t`Failed to install the extension ${extension.identifier.id} from ${extension.location.toString()} in the workspace`,\n\t\t\t\tgetErrorMessage(error),\n\t\t\t);\n\t\t\tthis._onDidInstallExtensions.fire([\n\t\t\t\t{\n\t\t\t\t\tidentifier: extension.identifier,\n\t\t\t\t\tsource: extension.location,\n\t\t\t\t\toperation: InstallOperation.Install,\n\t\t\t\t\tapplicationScoped: false,\n\t\t\t\t\tprofileLocation:\n\t\t\t\t\t\tthis.userDataProfileService.currentProfile\n\t\t\t\t\t\t\t.extensionsResource,\n\t\t\t\t\terror,\n\t\t\t\t\tworkspaceScoped: true,\n\t\t\t\t},\n\t\t\t]);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate async uninstallExtensionFromWorkspace(\n\t\textension: ILocalExtension,\n\t): Promise<void> {\n\t\tif (!extension.isWorkspaceScoped) {\n\t\t\tthrow new Error(\"The extension is not a workspace extension\");\n\t\t}\n\n\t\tthis.logService.info(\n\t\t\t`Uninstalling the workspace extension ${extension.identifier.id} from ${extension.location.toString()}`,\n\t\t);\n\t\tconst server = this.getWorkspaceExtensionsServer();\n\t\tthis._onUninstallExtension.fire({\n\t\t\tidentifier: extension.identifier,\n\t\t\tserver,\n\t\t\tapplicationScoped: false,\n\t\t\tworkspaceScoped: true,\n\t\t\tprofileLocation:\n\t\t\t\tthis.userDataProfileService.currentProfile.extensionsResource,\n\t\t});\n\n\t\ttry {\n\t\t\tawait this.workspaceExtensionManagementService.uninstall(extension);\n\t\t\tthis.logService.info(\n\t\t\t\t`Successfully uninstalled the workspace extension ${extension.identifier.id} from ${extension.location.toString()}`,\n\t\t\t);\n\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\t{},\n\t\t\t\t{\n\t\t\t\t\towner: \"sandy081\";\n\t\t\t\t\tcomment: \"Uninstall workspace extension\";\n\t\t\t\t}\n\t\t\t>(\"workspaceextension:uninstall\");\n\t\t\tthis._onDidUninstallExtension.fire({\n\t\t\t\tidentifier: extension.identifier,\n\t\t\t\tserver,\n\t\t\t\tapplicationScoped: false,\n\t\t\t\tworkspaceScoped: true,\n\t\t\t\tprofileLocation:\n\t\t\t\t\tthis.userDataProfileService.currentProfile\n\t\t\t\t\t\t.extensionsResource,\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tthis.logService.error(\n\t\t\t\t`Failed to uninstall the workspace extension ${extension.identifier.id} from ${extension.location.toString()}`,\n\t\t\t\tgetErrorMessage(error),\n\t\t\t);\n\t\t\tthis._onDidUninstallExtension.fire({\n\t\t\t\tidentifier: extension.identifier,\n\t\t\t\tserver,\n\t\t\t\terror,\n\t\t\t\tapplicationScoped: false,\n\t\t\t\tworkspaceScoped: true,\n\t\t\t\tprofileLocation:\n\t\t\t\t\tthis.userDataProfileService.currentProfile\n\t\t\t\t\t\t.extensionsResource,\n\t\t\t});\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate async validateAndGetExtensionManagementServersToInstall(\n\t\tgallery: IGalleryExtension,\n\t\tinstallOptions?: InstallOptions,\n\t): Promise<IExtensionManagementServer[]> {\n\t\tconst manifest = await this.extensionGalleryService.getManifest(\n\t\t\tgallery,\n\t\t\tCancellationToken.None,\n\t\t);\n\t\tif (!manifest) {\n\t\t\treturn Promise.reject(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"Manifest is not found\",\n\t\t\t\t\t\"Installing Extension {0} failed: Manifest is not found.\",\n\t\t\t\t\tgallery.displayName || gallery.name,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\tconst servers: IExtensionManagementServer[] = [];\n\n\t\t// Install Language pack on local and remote servers\n\t\tif (isLanguagePackExtension(manifest)) {\n\t\t\tservers.push(\n\t\t\t\t...this.servers.filter(\n\t\t\t\t\t(server) =>\n\t\t\t\t\t\tserver !==\n\t\t\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t\t\t.webExtensionManagementServer,\n\t\t\t\t),\n\t\t\t);\n\t\t} else {\n\t\t\tconst server = this.getExtensionManagementServerToInstall(manifest);\n\t\t\tif (server) {\n\t\t\t\tservers.push(server);\n\t\t\t}\n\t\t}\n\n\t\tif (!servers.length) {\n\t\t\tconst error = new Error(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"cannot be installed\",\n\t\t\t\t\t\"Cannot install the '{0}' extension because it is not available in this setup.\",\n\t\t\t\t\tgallery.displayName || gallery.name,\n\t\t\t\t),\n\t\t\t);\n\t\t\terror.name = ExtensionManagementErrorCode.Unsupported;\n\t\t\tthrow error;\n\t\t}\n\n\t\tif (\n\t\t\tinstallOptions?.context?.[EXTENSION_INSTALL_SOURCE_CONTEXT] !==\n\t\t\tExtensionInstallSource.SETTINGS_SYNC\n\t\t) {\n\t\t\tawait this.checkForWorkspaceTrust(manifest, false);\n\t\t}\n\n\t\tif (!installOptions?.donotIncludePackAndDependencies) {\n\t\t\tawait this.checkInstallingExtensionOnWeb(gallery, manifest);\n\t\t}\n\n\t\treturn servers;\n\t}\n\n\tprivate getExtensionManagementServerToInstall(\n\t\tmanifest: IExtensionManifest,\n\t): IExtensionManagementServer | null {\n\t\t// Only local server\n\t\tif (\n\t\t\tthis.servers.length === 1 &&\n\t\t\tthis.extensionManagementServerService.localExtensionManagementServer\n\t\t) {\n\t\t\treturn this.extensionManagementServerService\n\t\t\t\t.localExtensionManagementServer;\n\t\t}\n\n\t\tconst extensionKind =\n\t\t\tthis.extensionManifestPropertiesService.getExtensionKind(manifest);\n\t\tfor (const kind of extensionKind) {\n\t\t\tif (\n\t\t\t\tkind === \"ui\" &&\n\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t.localExtensionManagementServer\n\t\t\t) {\n\t\t\t\treturn this.extensionManagementServerService\n\t\t\t\t\t.localExtensionManagementServer;\n\t\t\t}\n\t\t\tif (\n\t\t\t\tkind === \"workspace\" &&\n\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t.remoteExtensionManagementServer\n\t\t\t) {\n\t\t\t\treturn this.extensionManagementServerService\n\t\t\t\t\t.remoteExtensionManagementServer;\n\t\t\t}\n\t\t\tif (\n\t\t\t\tkind === \"web\" &&\n\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t.webExtensionManagementServer\n\t\t\t) {\n\t\t\t\treturn this.extensionManagementServerService\n\t\t\t\t\t.webExtensionManagementServer;\n\t\t\t}\n\t\t}\n\n\t\t// Local server can accept any extension. So return local server if not compatible server found.\n\t\treturn this.extensionManagementServerService\n\t\t\t.localExtensionManagementServer;\n\t}\n\n\tprivate isExtensionsSyncEnabled(): boolean {\n\t\treturn (\n\t\t\tthis.userDataSyncEnablementService.isEnabled() &&\n\t\t\tthis.userDataSyncEnablementService.isResourceEnabled(\n\t\t\t\tSyncResource.Extensions,\n\t\t\t)\n\t\t);\n\t}\n\n\tprivate async hasToFlagExtensionsMachineScoped(\n\t\textensions: IGalleryExtension[],\n\t): Promise<boolean> {\n\t\tif (this.isExtensionsSyncEnabled()) {\n\t\t\tconst { result } = await this.dialogService.prompt<boolean>({\n\t\t\t\ttype: Severity.Info,\n\t\t\t\tmessage:\n\t\t\t\t\textensions.length === 1\n\t\t\t\t\t\t? localize(\"install extension\", \"Install Extension\")\n\t\t\t\t\t\t: localize(\"install extensions\", \"Install Extensions\"),\n\t\t\t\tdetail:\n\t\t\t\t\textensions.length === 1\n\t\t\t\t\t\t? localize(\n\t\t\t\t\t\t\t\t\"install single extension\",\n\t\t\t\t\t\t\t\t\"Would you like to install and synchronize '{0}' extension across your devices?\",\n\t\t\t\t\t\t\t\textensions[0].displayName,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t: localize(\n\t\t\t\t\t\t\t\t\"install multiple extensions\",\n\t\t\t\t\t\t\t\t\"Would you like to install and synchronize extensions across your devices?\",\n\t\t\t\t\t\t\t),\n\t\t\t\tbuttons: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: \"install\",\n\t\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"&&Install\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\trun: () => false,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: \"install and do no sync\",\n\t\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"Install (Do &&not sync)\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\trun: () => true,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tcancelButton: {\n\t\t\t\t\trun: () => {\n\t\t\t\t\t\tthrow new CancellationError();\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\n\t\t\treturn result;\n\t\t}\n\t\treturn false;\n\t}\n\n\tgetExtensionsControlManifest(): Promise<IExtensionsControlManifest> {\n\t\tif (\n\t\t\tthis.extensionManagementServerService.localExtensionManagementServer\n\t\t) {\n\t\t\treturn this.extensionManagementServerService.localExtensionManagementServer.extensionManagementService.getExtensionsControlManifest();\n\t\t}\n\t\tif (\n\t\t\tthis.extensionManagementServerService\n\t\t\t\t.remoteExtensionManagementServer\n\t\t) {\n\t\t\treturn this.extensionManagementServerService.remoteExtensionManagementServer.extensionManagementService.getExtensionsControlManifest();\n\t\t}\n\t\tif (\n\t\t\tthis.extensionManagementServerService.webExtensionManagementServer\n\t\t) {\n\t\t\treturn this.extensionManagementServerService.webExtensionManagementServer.extensionManagementService.getExtensionsControlManifest();\n\t\t}\n\t\treturn Promise.resolve({ malicious: [], deprecated: {}, search: [] });\n\t}\n\n\tprivate getServer(\n\t\textension: ILocalExtension,\n\t): IExtensionManagementServer | null {\n\t\tif (extension.isWorkspaceScoped) {\n\t\t\treturn this.getWorkspaceExtensionsServer();\n\t\t}\n\t\treturn this.extensionManagementServerService.getExtensionManagementServer(\n\t\t\textension,\n\t\t);\n\t}\n\n\tprivate getWorkspaceExtensionsServer(): IExtensionManagementServer {\n\t\tif (\n\t\t\tthis.extensionManagementServerService\n\t\t\t\t.remoteExtensionManagementServer\n\t\t) {\n\t\t\treturn this.extensionManagementServerService\n\t\t\t\t.remoteExtensionManagementServer;\n\t\t}\n\t\tif (\n\t\t\tthis.extensionManagementServerService.localExtensionManagementServer\n\t\t) {\n\t\t\treturn this.extensionManagementServerService\n\t\t\t\t.localExtensionManagementServer;\n\t\t}\n\t\tif (\n\t\t\tthis.extensionManagementServerService.webExtensionManagementServer\n\t\t) {\n\t\t\treturn this.extensionManagementServerService\n\t\t\t\t.webExtensionManagementServer;\n\t\t}\n\t\tthrow new Error(\"No extension server found\");\n\t}\n\n\tprotected async checkForWorkspaceTrust(\n\t\tmanifest: IExtensionManifest,\n\t\trequireTrust: boolean,\n\t): Promise<void> {\n\t\tif (\n\t\t\trequireTrust ||\n\t\t\tthis.extensionManifestPropertiesService.getExtensionUntrustedWorkspaceSupportType(\n\t\t\t\tmanifest,\n\t\t\t) === false\n\t\t) {\n\t\t\tconst buttons: WorkspaceTrustRequestButton[] = [];\n\t\t\tbuttons.push({\n\t\t\t\tlabel: localize(\n\t\t\t\t\t\"extensionInstallWorkspaceTrustButton\",\n\t\t\t\t\t\"Trust Workspace & Install\",\n\t\t\t\t),\n\t\t\t\ttype: \"ContinueWithTrust\",\n\t\t\t});\n\t\t\tif (!requireTrust) {\n\t\t\t\tbuttons.push({\n\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\"extensionInstallWorkspaceTrustContinueButton\",\n\t\t\t\t\t\t\"Install\",\n\t\t\t\t\t),\n\t\t\t\t\ttype: \"ContinueWithoutTrust\",\n\t\t\t\t});\n\t\t\t}\n\t\t\tbuttons.push({\n\t\t\t\tlabel: localize(\n\t\t\t\t\t\"extensionInstallWorkspaceTrustManageButton\",\n\t\t\t\t\t\"Learn More\",\n\t\t\t\t),\n\t\t\t\ttype: \"Manage\",\n\t\t\t});\n\t\t\tconst trustState =\n\t\t\t\tawait this.workspaceTrustRequestService.requestWorkspaceTrust({\n\t\t\t\t\tmessage: localize(\n\t\t\t\t\t\t\"extensionInstallWorkspaceTrustMessage\",\n\t\t\t\t\t\t\"Enabling this extension requires a trusted workspace.\",\n\t\t\t\t\t),\n\t\t\t\t\tbuttons,\n\t\t\t\t});\n\n\t\t\tif (trustState === undefined) {\n\t\t\t\tthrow new CancellationError();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async checkInstallingExtensionOnWeb(\n\t\textension: IGalleryExtension,\n\t\tmanifest: IExtensionManifest,\n\t): Promise<void> {\n\t\tif (\n\t\t\tthis.servers.length !== 1 ||\n\t\t\tthis.servers[0] !==\n\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t.webExtensionManagementServer\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst nonWebExtensions = [];\n\t\tif (manifest.extensionPack?.length) {\n\t\t\tconst extensions = await this.extensionGalleryService.getExtensions(\n\t\t\t\tmanifest.extensionPack.map((id) => ({ id })),\n\t\t\t\tCancellationToken.None,\n\t\t\t);\n\t\t\tfor (const extension of extensions) {\n\t\t\t\tif (\n\t\t\t\t\t!(await this.servers[0].extensionManagementService.canInstall(\n\t\t\t\t\t\textension,\n\t\t\t\t\t))\n\t\t\t\t) {\n\t\t\t\t\tnonWebExtensions.push(extension);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (\n\t\t\t\tnonWebExtensions.length &&\n\t\t\t\tnonWebExtensions.length === extensions.length\n\t\t\t) {\n\t\t\t\tthrow new ExtensionManagementError(\n\t\t\t\t\t\"Not supported in Web\",\n\t\t\t\t\tExtensionManagementErrorCode.Unsupported,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tconst productName = localize(\n\t\t\t\"VS Code for Web\",\n\t\t\t\"{0} for the Web\",\n\t\t\tthis.productService.nameLong,\n\t\t);\n\t\tconst virtualWorkspaceSupport =\n\t\t\tthis.extensionManifestPropertiesService.getExtensionVirtualWorkspaceSupportType(\n\t\t\t\tmanifest,\n\t\t\t);\n\t\tconst virtualWorkspaceSupportReason = getWorkspaceSupportTypeMessage(\n\t\t\tmanifest.capabilities?.virtualWorkspaces,\n\t\t);\n\t\tconst hasLimitedSupport =\n\t\t\tvirtualWorkspaceSupport === \"limited\" ||\n\t\t\t!!virtualWorkspaceSupportReason;\n\n\t\tif (!nonWebExtensions.length && !hasLimitedSupport) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst limitedSupportMessage = localize(\n\t\t\t\"limited support\",\n\t\t\t\"'{0}' has limited functionality in {1}.\",\n\t\t\textension.displayName || extension.identifier.id,\n\t\t\tproductName,\n\t\t);\n\t\tlet message: string;\n\t\tlet buttons: IPromptButton<void>[] = [];\n\t\tlet detail: string | undefined;\n\n\t\tconst installAnywayButton: IPromptButton<void> = {\n\t\t\tlabel: localize(\n\t\t\t\t{ key: \"install anyways\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\"&&Install Anyway\",\n\t\t\t),\n\t\t\trun: () => {},\n\t\t};\n\n\t\tconst showExtensionsButton: IPromptButton<void> = {\n\t\t\tlabel: localize(\n\t\t\t\t{ key: \"showExtensions\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\"&&Show Extensions\",\n\t\t\t),\n\t\t\trun: () =>\n\t\t\t\tthis.instantiationService.invokeFunction((accessor) =>\n\t\t\t\t\taccessor\n\t\t\t\t\t\t.get(ICommandService)\n\t\t\t\t\t\t.executeCommand(\n\t\t\t\t\t\t\t\"extension.open\",\n\t\t\t\t\t\t\textension.identifier.id,\n\t\t\t\t\t\t\t\"extensionPack\",\n\t\t\t\t\t\t),\n\t\t\t\t),\n\t\t};\n\n\t\tif (nonWebExtensions.length && hasLimitedSupport) {\n\t\t\tmessage = limitedSupportMessage;\n\t\t\tdetail = `${virtualWorkspaceSupportReason ? `${virtualWorkspaceSupportReason}\\n` : \"\"}${localize(\"non web extensions detail\", \"Contains extensions which are not supported.\")}`;\n\t\t\tbuttons = [installAnywayButton, showExtensionsButton];\n\t\t} else if (hasLimitedSupport) {\n\t\t\tmessage = limitedSupportMessage;\n\t\t\tdetail = virtualWorkspaceSupportReason || undefined;\n\t\t\tbuttons = [installAnywayButton];\n\t\t} else {\n\t\t\tmessage = localize(\n\t\t\t\t\"non web extensions\",\n\t\t\t\t\"'{0}' contains extensions which are not supported in {1}.\",\n\t\t\t\textension.displayName || extension.identifier.id,\n\t\t\t\tproductName,\n\t\t\t);\n\t\t\tbuttons = [installAnywayButton, showExtensionsButton];\n\t\t}\n\n\t\tawait this.dialogService.prompt({\n\t\t\ttype: Severity.Info,\n\t\t\tmessage,\n\t\t\tdetail,\n\t\t\tbuttons,\n\t\t\tcancelButton: {\n\t\t\t\trun: () => {\n\t\t\t\t\tthrow new CancellationError();\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\tprivate _targetPlatformPromise: Promise<TargetPlatform> | undefined;\n\tgetTargetPlatform(): Promise<TargetPlatform> {\n\t\tif (!this._targetPlatformPromise) {\n\t\t\tthis._targetPlatformPromise = computeTargetPlatform(\n\t\t\t\tthis.fileService,\n\t\t\t\tthis.logService,\n\t\t\t);\n\t\t}\n\t\treturn this._targetPlatformPromise;\n\t}\n\n\tasync cleanUp(): Promise<void> {\n\t\tawait Promise.allSettled(\n\t\t\tthis.servers.map((server) =>\n\t\t\t\tserver.extensionManagementService.cleanUp(),\n\t\t\t),\n\t\t);\n\t}\n\n\ttoggleAppliationScope(\n\t\textension: ILocalExtension,\n\t\tfromProfileLocation: URI,\n\t): Promise<ILocalExtension> {\n\t\tconst server = this.getServer(extension);\n\t\tif (server) {\n\t\t\treturn server.extensionManagementService.toggleAppliationScope(\n\t\t\t\textension,\n\t\t\t\tfromProfileLocation,\n\t\t\t);\n\t\t}\n\t\tthrow new Error(\"Not Supported\");\n\t}\n\n\tcopyExtensions(from: URI, to: URI): Promise<void> {\n\t\tif (\n\t\t\tthis.extensionManagementServerService\n\t\t\t\t.remoteExtensionManagementServer\n\t\t) {\n\t\t\tthrow new Error(\"Not Supported\");\n\t\t}\n\t\tif (\n\t\t\tthis.extensionManagementServerService.localExtensionManagementServer\n\t\t) {\n\t\t\treturn this.extensionManagementServerService.localExtensionManagementServer.extensionManagementService.copyExtensions(\n\t\t\t\tfrom,\n\t\t\t\tto,\n\t\t\t);\n\t\t}\n\t\tif (\n\t\t\tthis.extensionManagementServerService.webExtensionManagementServer\n\t\t) {\n\t\t\treturn this.extensionManagementServerService.webExtensionManagementServer.extensionManagementService.copyExtensions(\n\t\t\t\tfrom,\n\t\t\t\tto,\n\t\t\t);\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n\n\tregisterParticipant() {\n\t\tthrow new Error(\"Not Supported\");\n\t}\n\tinstallExtensionsFromProfile(\n\t\textensions: IExtensionIdentifier[],\n\t\tfromProfileLocation: URI,\n\t\ttoProfileLocation: URI,\n\t): Promise<ILocalExtension[]> {\n\t\tthrow new Error(\"Not Supported\");\n\t}\n}\n\nclass WorkspaceExtensionsManagementService extends Disposable {\n\tprivate static readonly WORKSPACE_EXTENSIONS_KEY =\n\t\t\"workspaceExtensions.locations\";\n\n\tprivate readonly _onDidChangeInvalidExtensions = this._register(\n\t\tnew Emitter<ILocalExtension[]>(),\n\t);\n\treadonly onDidChangeInvalidExtensions =\n\t\tthis._onDidChangeInvalidExtensions.event;\n\n\tprivate readonly extensions: ILocalExtension[] = [];\n\tprivate readonly initializePromise: Promise<void>;\n\n\tprivate readonly invalidExtensionWatchers = this._register(\n\t\tnew DisposableStore(),\n\t);\n\n\tconstructor(\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IWorkspaceContextService private readonly workspaceService: IWorkspaceContextService,\n\t\t@IExtensionsScannerService private readonly extensionsScannerService: IExtensionsScannerService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(Event.debounce<FileChangesEvent, FileChangesEvent[]>(this.fileService.onDidFilesChange, (last, e) => {\n\t\t\t(last = last ?? []).push(e);\n\t\t\treturn last;\n\t\t}, 1000)(events => {\n\t\t\tconst changedInvalidExtensions = this.extensions.filter(extension => !extension.isValid && events.some(e => e.affects(extension.location)));\n\t\t\tif (changedInvalidExtensions.length) {\n\t\t\t\tthis.checkExtensionsValidity(changedInvalidExtensions);\n\t\t\t}\n\t\t}));\n\n\t\tthis.initializePromise = this.initialize();\n\t}\n\n\tprivate async initialize(): Promise<void> {\n\t\tconst existingLocations =\n\t\t\tthis.getInstalledWorkspaceExtensionsLocations();\n\t\tif (!existingLocations.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait Promise.allSettled(\n\t\t\texistingLocations.map(async (location) => {\n\t\t\t\tif (!this.workspaceService.isInsideWorkspace(location)) {\n\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t`Removing the workspace extension ${location.toString()} as it is not inside the workspace`,\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (!(await this.fileService.exists(location))) {\n\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t`Removing the workspace extension ${location.toString()} as it does not exist`,\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tconst extension =\n\t\t\t\t\t\tawait this.scanWorkspaceExtension(location);\n\t\t\t\t\tif (extension) {\n\t\t\t\t\t\tthis.extensions.push(extension);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t\t`Skipping workspace extension ${location.toString()} as it does not exist`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.error(\n\t\t\t\t\t\t\"Skipping the workspace extension\",\n\t\t\t\t\t\tlocation.toString(),\n\t\t\t\t\t\terror,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis.saveWorkspaceExtensions();\n\t}\n\n\tprivate watchInvalidExtensions(): void {\n\t\tthis.invalidExtensionWatchers.clear();\n\t\tfor (const extension of this.extensions) {\n\t\t\tif (!extension.isValid) {\n\t\t\t\tthis.invalidExtensionWatchers.add(\n\t\t\t\t\tthis.fileService.watch(extension.location),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async checkExtensionsValidity(\n\t\textensions: ILocalExtension[],\n\t): Promise<void> {\n\t\tconst validExtensions: ILocalExtension[] = [];\n\t\tawait Promise.all(\n\t\t\textensions.map(async (extension) => {\n\t\t\t\tconst newExtension = await this.scanWorkspaceExtension(\n\t\t\t\t\textension.location,\n\t\t\t\t);\n\t\t\t\tif (newExtension?.isValid) {\n\t\t\t\t\tvalidExtensions.push(newExtension);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tlet changed = false;\n\t\tfor (const extension of validExtensions) {\n\t\t\tconst index = this.extensions.findIndex((e) =>\n\t\t\t\tthis.uriIdentityService.extUri.isEqual(\n\t\t\t\t\te.location,\n\t\t\t\t\textension.location,\n\t\t\t\t),\n\t\t\t);\n\t\t\tif (index !== -1) {\n\t\t\t\tchanged = true;\n\t\t\t\tthis.extensions.splice(index, 1, extension);\n\t\t\t}\n\t\t}\n\n\t\tif (changed) {\n\t\t\tthis.saveWorkspaceExtensions();\n\t\t\tthis._onDidChangeInvalidExtensions.fire(validExtensions);\n\t\t}\n\t}\n\n\tasync getInstalled(includeInvalid: boolean): Promise<ILocalExtension[]> {\n\t\tawait this.initializePromise;\n\t\treturn this.extensions.filter((e) => includeInvalid || e.isValid);\n\t}\n\n\tasync install(extension: IResourceExtension): Promise<ILocalExtension> {\n\t\tawait this.initializePromise;\n\n\t\tconst workspaceExtension = await this.scanWorkspaceExtension(\n\t\t\textension.location,\n\t\t);\n\t\tif (!workspaceExtension) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Cannot install the extension as it does not exist.\",\n\t\t\t);\n\t\t}\n\n\t\tconst existingExtensionIndex = this.extensions.findIndex((e) =>\n\t\t\tareSameExtensions(e.identifier, extension.identifier),\n\t\t);\n\t\tif (existingExtensionIndex === -1) {\n\t\t\tthis.extensions.push(workspaceExtension);\n\t\t} else {\n\t\t\tthis.extensions.splice(\n\t\t\t\texistingExtensionIndex,\n\t\t\t\t1,\n\t\t\t\tworkspaceExtension,\n\t\t\t);\n\t\t}\n\n\t\tthis.saveWorkspaceExtensions();\n\t\tthis.telemetryService.publicLog2<\n\t\t\t{},\n\t\t\t{\n\t\t\t\towner: \"sandy081\";\n\t\t\t\tcomment: \"Install workspace extension\";\n\t\t\t}\n\t\t>(\"workspaceextension:install\");\n\n\t\treturn workspaceExtension;\n\t}\n\n\tasync uninstall(extension: ILocalExtension): Promise<void> {\n\t\tawait this.initializePromise;\n\n\t\tconst existingExtensionIndex = this.extensions.findIndex((e) =>\n\t\t\tareSameExtensions(e.identifier, extension.identifier),\n\t\t);\n\t\tif (existingExtensionIndex !== -1) {\n\t\t\tthis.extensions.splice(existingExtensionIndex, 1);\n\t\t\tthis.saveWorkspaceExtensions();\n\t\t}\n\n\t\tthis.telemetryService.publicLog2<\n\t\t\t{},\n\t\t\t{\n\t\t\t\towner: \"sandy081\";\n\t\t\t\tcomment: \"Uninstall workspace extension\";\n\t\t\t}\n\t\t>(\"workspaceextension:uninstall\");\n\t}\n\n\tgetInstalledWorkspaceExtensionsLocations(): URI[] {\n\t\tconst locations: URI[] = [];\n\t\ttry {\n\t\t\tconst parsed = JSON.parse(\n\t\t\t\tthis.storageService.get(\n\t\t\t\t\tWorkspaceExtensionsManagementService.WORKSPACE_EXTENSIONS_KEY,\n\t\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\t\t\"[]\",\n\t\t\t\t),\n\t\t\t);\n\t\t\tif (Array.isArray(locations)) {\n\t\t\t\tfor (const location of parsed) {\n\t\t\t\t\tif (isString(location)) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tthis.workspaceService.getWorkbenchState() ===\n\t\t\t\t\t\t\tWorkbenchState.FOLDER\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tlocations.push(\n\t\t\t\t\t\t\t\tthis.workspaceService\n\t\t\t\t\t\t\t\t\t.getWorkspace()\n\t\t\t\t\t\t\t\t\t.folders[0].toResource(location),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.logService.warn(\n\t\t\t\t\t\t\t\t`Invalid value for 'extensions' in workspace storage: ${location}`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlocations.push(URI.revive(location));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.logService.warn(\n\t\t\t\t\t`Invalid value for 'extensions' in workspace storage: ${locations}`,\n\t\t\t\t);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.logService.warn(\n\t\t\t\t`Error parsing workspace extensions locations: ${getErrorMessage(error)}`,\n\t\t\t);\n\t\t}\n\t\treturn locations;\n\t}\n\n\tprivate saveWorkspaceExtensions(): void {\n\t\tconst locations = this.extensions.map(\n\t\t\t(extension) => extension.location,\n\t\t);\n\t\tif (\n\t\t\tthis.workspaceService.getWorkbenchState() === WorkbenchState.FOLDER\n\t\t) {\n\t\t\tthis.storageService.store(\n\t\t\t\tWorkspaceExtensionsManagementService.WORKSPACE_EXTENSIONS_KEY,\n\t\t\t\tJSON.stringify(\n\t\t\t\t\tcoalesce(\n\t\t\t\t\t\tlocations.map((location) =>\n\t\t\t\t\t\t\tthis.uriIdentityService.extUri.relativePath(\n\t\t\t\t\t\t\t\tthis.workspaceService.getWorkspace().folders[0]\n\t\t\t\t\t\t\t\t\t.uri,\n\t\t\t\t\t\t\t\tlocation,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\tStorageTarget.MACHINE,\n\t\t\t);\n\t\t} else {\n\t\t\tthis.storageService.store(\n\t\t\t\tWorkspaceExtensionsManagementService.WORKSPACE_EXTENSIONS_KEY,\n\t\t\t\tJSON.stringify(locations),\n\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\tStorageTarget.MACHINE,\n\t\t\t);\n\t\t}\n\t\tthis.watchInvalidExtensions();\n\t}\n\n\tasync scanWorkspaceExtension(\n\t\tlocation: URI,\n\t): Promise<ILocalExtension | null> {\n\t\tconst scannedExtension =\n\t\t\tawait this.extensionsScannerService.scanExistingExtension(\n\t\t\t\tlocation,\n\t\t\t\tExtensionType.User,\n\t\t\t\t{ includeInvalid: true },\n\t\t\t);\n\t\treturn scannedExtension\n\t\t\t? this.toLocalWorkspaceExtension(scannedExtension)\n\t\t\t: null;\n\t}\n\n\tasync toLocalWorkspaceExtension(\n\t\textension: IScannedExtension,\n\t): Promise<ILocalExtension> {\n\t\tconst stat = await this.fileService.resolve(extension.location);\n\t\tlet readmeUrl: URI | undefined;\n\t\tlet changelogUrl: URI | undefined;\n\t\tif (stat.children) {\n\t\t\treadmeUrl = stat.children.find(({ name }) =>\n\t\t\t\t/^readme(\\.txt|\\.md|)$/i.test(name),\n\t\t\t)?.resource;\n\t\t\tchangelogUrl = stat.children.find(({ name }) =>\n\t\t\t\t/^changelog(\\.txt|\\.md|)$/i.test(name),\n\t\t\t)?.resource;\n\t\t}\n\t\tconst validations: [Severity, string][] = [...extension.validations];\n\t\tlet isValid = extension.isValid;\n\t\tif (extension.manifest.main) {\n\t\t\tif (\n\t\t\t\t!(await this.fileService.exists(\n\t\t\t\t\tthis.uriIdentityService.extUri.joinPath(\n\t\t\t\t\t\textension.location,\n\t\t\t\t\t\textension.manifest.main,\n\t\t\t\t\t),\n\t\t\t\t))\n\t\t\t) {\n\t\t\t\tisValid = false;\n\t\t\t\tvalidations.push([\n\t\t\t\t\tSeverity.Error,\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"main.notFound\",\n\t\t\t\t\t\t\"Cannot activate because {0} not found\",\n\t\t\t\t\t\textension.manifest.main,\n\t\t\t\t\t),\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tidentifier: extension.identifier,\n\t\t\ttype: extension.type,\n\t\t\tisBuiltin: extension.isBuiltin || !!extension.metadata?.isBuiltin,\n\t\t\tlocation: extension.location,\n\t\t\tmanifest: extension.manifest,\n\t\t\ttargetPlatform: extension.targetPlatform,\n\t\t\tvalidations,\n\t\t\tisValid,\n\t\t\treadmeUrl,\n\t\t\tchangelogUrl,\n\t\t\tpublisherDisplayName: extension.metadata?.publisherDisplayName,\n\t\t\tpublisherId: extension.metadata?.publisherId || null,\n\t\t\tisApplicationScoped: !!extension.metadata?.isApplicationScoped,\n\t\t\tisMachineScoped: !!extension.metadata?.isMachineScoped,\n\t\t\tisPreReleaseVersion: !!extension.metadata?.isPreReleaseVersion,\n\t\t\thasPreReleaseVersion: !!extension.metadata?.hasPreReleaseVersion,\n\t\t\tpreRelease: !!extension.metadata?.preRelease,\n\t\t\tinstalledTimestamp: extension.metadata?.installedTimestamp,\n\t\t\tupdated: !!extension.metadata?.updated,\n\t\t\tpinned: !!extension.metadata?.pinned,\n\t\t\tisWorkspaceScoped: true,\n\t\t\tsource: \"resource\",\n\t\t};\n\t}\n}\n"],
  "mappings": "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",
  "names": ["extensions", "server", "extension"]
}
