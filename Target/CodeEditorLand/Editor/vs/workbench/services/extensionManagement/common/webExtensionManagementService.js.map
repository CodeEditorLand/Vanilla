{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/extensionManagement/common/webExtensionManagementService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { delta } from \"../../../../base/common/arrays.js\";\nimport type { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport { Emitter, Event } from \"../../../../base/common/event.js\";\nimport { DisposableStore } from \"../../../../base/common/lifecycle.js\";\nimport { compare } from \"../../../../base/common/strings.js\";\nimport { isBoolean, isUndefined } from \"../../../../base/common/types.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport {\n\tAbstractExtensionManagementService,\n\tAbstractExtensionTask,\n\ttype IInstallExtensionTask,\n\ttype IUninstallExtensionTask,\n\ttype InstallExtensionTaskOptions,\n\ttype UninstallExtensionTaskOptions,\n\ttoExtensionManagementError,\n} from \"../../../../platform/extensionManagement/common/abstractExtensionManagementService.js\";\nimport {\n\tIExtensionGalleryService,\n\ttype IGalleryExtension,\n\ttype ILocalExtension,\n\ttype IProductVersion,\n\tInstallOperation,\n\ttype InstallOptions,\n\ttype Metadata,\n} from \"../../../../platform/extensionManagement/common/extensionManagement.js\";\nimport {\n\tareSameExtensions,\n\tgetGalleryExtensionId,\n} from \"../../../../platform/extensionManagement/common/extensionManagementUtil.js\";\nimport {\n\tExtensionIdentifier,\n\tExtensionType,\n\ttype IExtension,\n\ttype IExtensionIdentifier,\n\ttype IExtensionManifest,\n\tTargetPlatform,\n} from \"../../../../platform/extensions/common/extensions.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { IProductService } from \"../../../../platform/product/common/productService.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { IUriIdentityService } from \"../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport { IUserDataProfilesService } from \"../../../../platform/userDataProfile/common/userDataProfile.js\";\nimport { IExtensionManifestPropertiesService } from \"../../extensions/common/extensionManifestPropertiesService.js\";\nimport {\n\ttype DidChangeUserDataProfileEvent,\n\tIUserDataProfileService,\n} from \"../../userDataProfile/common/userDataProfile.js\";\nimport {\n\ttype IProfileAwareExtensionManagementService,\n\ttype IScannedExtension,\n\tIWebExtensionsScannerService,\n} from \"./extensionManagement.js\";\n\nexport class WebExtensionManagementService\n\textends AbstractExtensionManagementService\n\timplements IProfileAwareExtensionManagementService\n{\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly disposables = this._register(new DisposableStore());\n\n\tget onProfileAwareInstallExtension() {\n\t\treturn super.onInstallExtension;\n\t}\n\toverride get onInstallExtension() {\n\t\treturn Event.filter(\n\t\t\tthis.onProfileAwareInstallExtension,\n\t\t\t(e) => this.filterEvent(e),\n\t\t\tthis.disposables,\n\t\t);\n\t}\n\n\tget onProfileAwareDidInstallExtensions() {\n\t\treturn super.onDidInstallExtensions;\n\t}\n\toverride get onDidInstallExtensions() {\n\t\treturn Event.filter(\n\t\t\tEvent.map(\n\t\t\t\tthis.onProfileAwareDidInstallExtensions,\n\t\t\t\t(results) => results.filter((e) => this.filterEvent(e)),\n\t\t\t\tthis.disposables,\n\t\t\t),\n\t\t\t(results) => results.length > 0,\n\t\t\tthis.disposables,\n\t\t);\n\t}\n\n\tget onProfileAwareUninstallExtension() {\n\t\treturn super.onUninstallExtension;\n\t}\n\toverride get onUninstallExtension() {\n\t\treturn Event.filter(\n\t\t\tthis.onProfileAwareUninstallExtension,\n\t\t\t(e) => this.filterEvent(e),\n\t\t\tthis.disposables,\n\t\t);\n\t}\n\n\tget onProfileAwareDidUninstallExtension() {\n\t\treturn super.onDidUninstallExtension;\n\t}\n\toverride get onDidUninstallExtension() {\n\t\treturn Event.filter(\n\t\t\tthis.onProfileAwareDidUninstallExtension,\n\t\t\t(e) => this.filterEvent(e),\n\t\t\tthis.disposables,\n\t\t);\n\t}\n\n\tprivate readonly _onDidChangeProfile = this._register(\n\t\tnew Emitter<{\n\t\t\treadonly added: ILocalExtension[];\n\t\t\treadonly removed: ILocalExtension[];\n\t\t}>(),\n\t);\n\treadonly onDidChangeProfile = this._onDidChangeProfile.event;\n\n\tconstructor(\n\t\t@IExtensionGalleryService extensionGalleryService: IExtensionGalleryService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@ILogService logService: ILogService,\n\t\t@IWebExtensionsScannerService private readonly webExtensionsScannerService: IWebExtensionsScannerService,\n\t\t@IExtensionManifestPropertiesService private readonly extensionManifestPropertiesService: IExtensionManifestPropertiesService,\n\t\t@IUserDataProfileService private readonly userDataProfileService: IUserDataProfileService,\n\t\t@IProductService productService: IProductService,\n\t\t@IUserDataProfilesService userDataProfilesService: IUserDataProfilesService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(extensionGalleryService, telemetryService, uriIdentityService, logService, productService, userDataProfilesService);\n\t\tthis._register(userDataProfileService.onDidChangeCurrentProfile(e => {\n\t\t\tif (!this.uriIdentityService.extUri.isEqual(e.previous.extensionsResource, e.profile.extensionsResource)) {\n\t\t\t\te.join(this.whenProfileChanged(e));\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate filterEvent({\n\t\tprofileLocation,\n\t\tapplicationScoped,\n\t}: { profileLocation?: URI; applicationScoped?: boolean }): boolean {\n\t\tprofileLocation =\n\t\t\tprofileLocation ??\n\t\t\tthis.userDataProfileService.currentProfile.extensionsResource;\n\t\treturn (\n\t\t\tapplicationScoped ||\n\t\t\tthis.uriIdentityService.extUri.isEqual(\n\t\t\t\tthis.userDataProfileService.currentProfile.extensionsResource,\n\t\t\t\tprofileLocation,\n\t\t\t)\n\t\t);\n\t}\n\n\tasync getTargetPlatform(): Promise<TargetPlatform> {\n\t\treturn TargetPlatform.WEB;\n\t}\n\n\toverride async canInstall(gallery: IGalleryExtension): Promise<boolean> {\n\t\tif (await super.canInstall(gallery)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (this.isConfiguredToExecuteOnWeb(gallery)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tasync getInstalled(\n\t\ttype?: ExtensionType,\n\t\tprofileLocation?: URI,\n\t): Promise<ILocalExtension[]> {\n\t\tconst extensions = [];\n\t\tif (type === undefined || type === ExtensionType.System) {\n\t\t\tconst systemExtensions =\n\t\t\t\tawait this.webExtensionsScannerService.scanSystemExtensions();\n\t\t\textensions.push(...systemExtensions);\n\t\t}\n\t\tif (type === undefined || type === ExtensionType.User) {\n\t\t\tconst userExtensions =\n\t\t\t\tawait this.webExtensionsScannerService.scanUserExtensions(\n\t\t\t\t\tprofileLocation ??\n\t\t\t\t\t\tthis.userDataProfileService.currentProfile\n\t\t\t\t\t\t\t.extensionsResource,\n\t\t\t\t);\n\t\t\textensions.push(...userExtensions);\n\t\t}\n\t\treturn extensions.map((e) => toLocalExtension(e));\n\t}\n\n\tasync install(\n\t\tlocation: URI,\n\t\toptions: InstallOptions = {},\n\t): Promise<ILocalExtension> {\n\t\tthis.logService.trace(\n\t\t\t\"ExtensionManagementService#install\",\n\t\t\tlocation.toString(),\n\t\t);\n\t\tconst manifest =\n\t\t\tawait this.webExtensionsScannerService.scanExtensionManifest(\n\t\t\t\tlocation,\n\t\t\t);\n\t\tif (!manifest || !manifest.name || !manifest.version) {\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot find a valid extension from the location ${location.toString()}`,\n\t\t\t);\n\t\t}\n\t\tconst result = await this.installExtensions([\n\t\t\t{ manifest, extension: location, options },\n\t\t]);\n\t\tif (result[0]?.local) {\n\t\t\treturn result[0]?.local;\n\t\t}\n\t\tif (result[0]?.error) {\n\t\t\tthrow result[0].error;\n\t\t}\n\t\tthrow toExtensionManagementError(\n\t\t\tnew Error(\n\t\t\t\t`Unknown error while installing extension ${getGalleryExtensionId(manifest.publisher, manifest.name)}`,\n\t\t\t),\n\t\t);\n\t}\n\n\tinstallFromLocation(\n\t\tlocation: URI,\n\t\tprofileLocation: URI,\n\t): Promise<ILocalExtension> {\n\t\treturn this.install(location, { profileLocation });\n\t}\n\n\tprotected async copyExtension(\n\t\textension: ILocalExtension,\n\t\tfromProfileLocation: URI,\n\t\ttoProfileLocation: URI,\n\t\tmetadata: Partial<Metadata>,\n\t): Promise<ILocalExtension> {\n\t\tconst target =\n\t\t\tawait this.webExtensionsScannerService.scanExistingExtension(\n\t\t\t\textension.location,\n\t\t\t\textension.type,\n\t\t\t\ttoProfileLocation,\n\t\t\t);\n\t\tconst source =\n\t\t\tawait this.webExtensionsScannerService.scanExistingExtension(\n\t\t\t\textension.location,\n\t\t\t\textension.type,\n\t\t\t\tfromProfileLocation,\n\t\t\t);\n\t\tmetadata = { ...source?.metadata, ...metadata };\n\n\t\tlet scanned;\n\t\tif (target) {\n\t\t\tscanned = await this.webExtensionsScannerService.updateMetadata(\n\t\t\t\textension,\n\t\t\t\t{ ...target.metadata, ...metadata },\n\t\t\t\ttoProfileLocation,\n\t\t\t);\n\t\t} else {\n\t\t\tscanned = await this.webExtensionsScannerService.addExtension(\n\t\t\t\textension.location,\n\t\t\t\tmetadata,\n\t\t\t\ttoProfileLocation,\n\t\t\t);\n\t\t}\n\t\treturn toLocalExtension(scanned);\n\t}\n\n\tasync installExtensionsFromProfile(\n\t\textensions: IExtensionIdentifier[],\n\t\tfromProfileLocation: URI,\n\t\ttoProfileLocation: URI,\n\t): Promise<ILocalExtension[]> {\n\t\tconst result: ILocalExtension[] = [];\n\t\tconst extensionsToInstall = (\n\t\t\tawait this.webExtensionsScannerService.scanUserExtensions(\n\t\t\t\tfromProfileLocation,\n\t\t\t)\n\t\t).filter((e) =>\n\t\t\textensions.some((id) => areSameExtensions(id, e.identifier)),\n\t\t);\n\t\tif (extensionsToInstall.length) {\n\t\t\tawait Promise.allSettled(\n\t\t\t\textensionsToInstall.map(async (e) => {\n\t\t\t\t\tlet local = await this.installFromLocation(\n\t\t\t\t\t\te.location,\n\t\t\t\t\t\ttoProfileLocation,\n\t\t\t\t\t);\n\t\t\t\t\tif (e.metadata) {\n\t\t\t\t\t\tlocal = await this.updateMetadata(\n\t\t\t\t\t\t\tlocal,\n\t\t\t\t\t\t\te.metadata,\n\t\t\t\t\t\t\tfromProfileLocation,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tresult.push(local);\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t\treturn result;\n\t}\n\n\tasync updateMetadata(\n\t\tlocal: ILocalExtension,\n\t\tmetadata: Partial<Metadata>,\n\t\tprofileLocation: URI,\n\t): Promise<ILocalExtension> {\n\t\t// unset if false\n\t\tif (metadata.isMachineScoped === false) {\n\t\t\tmetadata.isMachineScoped = undefined;\n\t\t}\n\t\tif (metadata.isBuiltin === false) {\n\t\t\tmetadata.isBuiltin = undefined;\n\t\t}\n\t\tif (metadata.pinned === false) {\n\t\t\tmetadata.pinned = undefined;\n\t\t}\n\t\tconst updatedExtension =\n\t\t\tawait this.webExtensionsScannerService.updateMetadata(\n\t\t\t\tlocal,\n\t\t\t\tmetadata,\n\t\t\t\tprofileLocation,\n\t\t\t);\n\t\tconst updatedLocalExtension = toLocalExtension(updatedExtension);\n\t\tthis._onDidUpdateExtensionMetadata.fire({\n\t\t\tlocal: updatedLocalExtension,\n\t\t\tprofileLocation,\n\t\t});\n\t\treturn updatedLocalExtension;\n\t}\n\n\toverride async copyExtensions(\n\t\tfromProfileLocation: URI,\n\t\ttoProfileLocation: URI,\n\t): Promise<void> {\n\t\tawait this.webExtensionsScannerService.copyExtensions(\n\t\t\tfromProfileLocation,\n\t\t\ttoProfileLocation,\n\t\t\t(e) => !e.metadata?.isApplicationScoped,\n\t\t);\n\t}\n\n\tprotected override async getCompatibleVersion(\n\t\textension: IGalleryExtension,\n\t\tsameVersion: boolean,\n\t\tincludePreRelease: boolean,\n\t\tproductVersion: IProductVersion,\n\t): Promise<IGalleryExtension | null> {\n\t\tconst compatibleExtension = await super.getCompatibleVersion(\n\t\t\textension,\n\t\t\tsameVersion,\n\t\t\tincludePreRelease,\n\t\t\tproductVersion,\n\t\t);\n\t\tif (compatibleExtension) {\n\t\t\treturn compatibleExtension;\n\t\t}\n\t\tif (this.isConfiguredToExecuteOnWeb(extension)) {\n\t\t\treturn extension;\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate isConfiguredToExecuteOnWeb(gallery: IGalleryExtension): boolean {\n\t\tconst configuredExtensionKind =\n\t\t\tthis.extensionManifestPropertiesService.getUserConfiguredExtensionKind(\n\t\t\t\tgallery.identifier,\n\t\t\t);\n\t\treturn (\n\t\t\t!!configuredExtensionKind && configuredExtensionKind.includes(\"web\")\n\t\t);\n\t}\n\n\tprotected getCurrentExtensionsManifestLocation(): URI {\n\t\treturn this.userDataProfileService.currentProfile.extensionsResource;\n\t}\n\n\tprotected createInstallExtensionTask(\n\t\tmanifest: IExtensionManifest,\n\t\textension: URI | IGalleryExtension,\n\t\toptions: InstallExtensionTaskOptions,\n\t): IInstallExtensionTask {\n\t\treturn new InstallExtensionTask(\n\t\t\tmanifest,\n\t\t\textension,\n\t\t\toptions,\n\t\t\tthis.webExtensionsScannerService,\n\t\t\tthis.userDataProfilesService,\n\t\t);\n\t}\n\n\tprotected createUninstallExtensionTask(\n\t\textension: ILocalExtension,\n\t\toptions: UninstallExtensionTaskOptions,\n\t): IUninstallExtensionTask {\n\t\treturn new UninstallExtensionTask(\n\t\t\textension,\n\t\t\toptions,\n\t\t\tthis.webExtensionsScannerService,\n\t\t);\n\t}\n\n\tzip(extension: ILocalExtension): Promise<URI> {\n\t\tthrow new Error(\"unsupported\");\n\t}\n\tgetManifest(vsix: URI): Promise<IExtensionManifest> {\n\t\tthrow new Error(\"unsupported\");\n\t}\n\tdownload(): Promise<URI> {\n\t\tthrow new Error(\"unsupported\");\n\t}\n\treinstallFromGallery(): Promise<ILocalExtension> {\n\t\tthrow new Error(\"unsupported\");\n\t}\n\n\tasync cleanUp(): Promise<void> {}\n\n\tprivate async whenProfileChanged(\n\t\te: DidChangeUserDataProfileEvent,\n\t): Promise<void> {\n\t\tconst previousProfileLocation = e.previous.extensionsResource;\n\t\tconst currentProfileLocation = e.profile.extensionsResource;\n\t\tif (!previousProfileLocation || !currentProfileLocation) {\n\t\t\tthrow new Error(\"This should not happen\");\n\t\t}\n\t\tconst oldExtensions =\n\t\t\tawait this.webExtensionsScannerService.scanUserExtensions(\n\t\t\t\tpreviousProfileLocation,\n\t\t\t);\n\t\tconst newExtensions =\n\t\t\tawait this.webExtensionsScannerService.scanUserExtensions(\n\t\t\t\tcurrentProfileLocation,\n\t\t\t);\n\t\tconst { added, removed } = delta(oldExtensions, newExtensions, (a, b) =>\n\t\t\tcompare(\n\t\t\t\t`${ExtensionIdentifier.toKey(a.identifier.id)}@${a.manifest.version}`,\n\t\t\t\t`${ExtensionIdentifier.toKey(b.identifier.id)}@${b.manifest.version}`,\n\t\t\t),\n\t\t);\n\t\tthis._onDidChangeProfile.fire({\n\t\t\tadded: added.map((e) => toLocalExtension(e)),\n\t\t\tremoved: removed.map((e) => toLocalExtension(e)),\n\t\t});\n\t}\n}\n\nfunction toLocalExtension(extension: IExtension): ILocalExtension {\n\tconst metadata = getMetadata(undefined, extension);\n\treturn {\n\t\t...extension,\n\t\tidentifier: {\n\t\t\tid: extension.identifier.id,\n\t\t\tuuid: metadata.id ?? extension.identifier.uuid,\n\t\t},\n\t\tisMachineScoped: !!metadata.isMachineScoped,\n\t\tisApplicationScoped: !!metadata.isApplicationScoped,\n\t\tpublisherId: metadata.publisherId || null,\n\t\tpublisherDisplayName: metadata.publisherDisplayName,\n\t\tinstalledTimestamp: metadata.installedTimestamp,\n\t\tisPreReleaseVersion: !!metadata.isPreReleaseVersion,\n\t\thasPreReleaseVersion: !!metadata.hasPreReleaseVersion,\n\t\tpreRelease: !!metadata.preRelease,\n\t\ttargetPlatform: TargetPlatform.WEB,\n\t\tupdated: !!metadata.updated,\n\t\tpinned: !!metadata?.pinned,\n\t\tisWorkspaceScoped: false,\n\t\tsource:\n\t\t\tmetadata?.source ??\n\t\t\t(extension.identifier.uuid ? \"gallery\" : \"resource\"),\n\t};\n}\n\nfunction getMetadata(\n\toptions?: InstallOptions,\n\texistingExtension?: IExtension,\n): Metadata {\n\tconst metadata: Metadata = {\n\t\t...((<IScannedExtension>existingExtension)?.metadata || {}),\n\t};\n\tmetadata.isMachineScoped =\n\t\toptions?.isMachineScoped || metadata.isMachineScoped;\n\treturn metadata;\n}\n\nclass InstallExtensionTask\n\textends AbstractExtensionTask<ILocalExtension>\n\timplements IInstallExtensionTask\n{\n\treadonly identifier: IExtensionIdentifier;\n\treadonly source: URI | IGalleryExtension;\n\n\tprivate _profileLocation = this.options.profileLocation;\n\tget profileLocation() {\n\t\treturn this._profileLocation;\n\t}\n\n\tprivate _operation = InstallOperation.Install;\n\tget operation() {\n\t\treturn isUndefined(this.options.operation)\n\t\t\t? this._operation\n\t\t\t: this.options.operation;\n\t}\n\n\tconstructor(\n\t\treadonly manifest: IExtensionManifest,\n\t\tprivate readonly extension: URI | IGalleryExtension,\n\t\treadonly options: InstallExtensionTaskOptions,\n\t\tprivate readonly webExtensionsScannerService: IWebExtensionsScannerService,\n\t\tprivate readonly userDataProfilesService: IUserDataProfilesService,\n\t) {\n\t\tsuper();\n\t\tthis.identifier = URI.isUri(extension)\n\t\t\t? { id: getGalleryExtensionId(manifest.publisher, manifest.name) }\n\t\t\t: extension.identifier;\n\t\tthis.source = extension;\n\t}\n\n\tprotected async doRun(token: CancellationToken): Promise<ILocalExtension> {\n\t\tconst userExtensions =\n\t\t\tawait this.webExtensionsScannerService.scanUserExtensions(\n\t\t\t\tthis.options.profileLocation,\n\t\t\t);\n\t\tconst existingExtension = userExtensions.find((e) =>\n\t\t\tareSameExtensions(e.identifier, this.identifier),\n\t\t);\n\t\tif (existingExtension) {\n\t\t\tthis._operation = InstallOperation.Update;\n\t\t}\n\n\t\tconst metadata = getMetadata(this.options, existingExtension);\n\t\tif (!URI.isUri(this.extension)) {\n\t\t\tmetadata.id = this.extension.identifier.uuid;\n\t\t\tmetadata.publisherDisplayName = this.extension.publisherDisplayName;\n\t\t\tmetadata.publisherId = this.extension.publisherId;\n\t\t\tmetadata.installedTimestamp = Date.now();\n\t\t\tmetadata.isPreReleaseVersion =\n\t\t\t\tthis.extension.properties.isPreReleaseVersion;\n\t\t\tmetadata.hasPreReleaseVersion =\n\t\t\t\tmetadata.hasPreReleaseVersion ||\n\t\t\t\tthis.extension.properties.isPreReleaseVersion;\n\t\t\tmetadata.isBuiltin =\n\t\t\t\tthis.options.isBuiltin || existingExtension?.isBuiltin;\n\t\t\tmetadata.isSystem =\n\t\t\t\texistingExtension?.type === ExtensionType.System\n\t\t\t\t\t? true\n\t\t\t\t\t: undefined;\n\t\t\tmetadata.updated = !!existingExtension;\n\t\t\tmetadata.isApplicationScoped =\n\t\t\t\tthis.options.isApplicationScoped ||\n\t\t\t\tmetadata.isApplicationScoped;\n\t\t\tmetadata.preRelease = isBoolean(this.options.preRelease)\n\t\t\t\t? this.options.preRelease\n\t\t\t\t: this.options.installPreReleaseVersion ||\n\t\t\t\t\tthis.extension.properties.isPreReleaseVersion ||\n\t\t\t\t\tmetadata.preRelease;\n\t\t\tmetadata.source = URI.isUri(this.extension)\n\t\t\t\t? \"resource\"\n\t\t\t\t: \"gallery\";\n\t\t}\n\t\tmetadata.pinned = this.options.installGivenVersion\n\t\t\t? true\n\t\t\t: (this.options.pinned ?? metadata.pinned);\n\n\t\tthis._profileLocation = metadata.isApplicationScoped\n\t\t\t? this.userDataProfilesService.defaultProfile.extensionsResource\n\t\t\t: this.options.profileLocation;\n\t\tconst scannedExtension = URI.isUri(this.extension)\n\t\t\t? await this.webExtensionsScannerService.addExtension(\n\t\t\t\t\tthis.extension,\n\t\t\t\t\tmetadata,\n\t\t\t\t\tthis.profileLocation,\n\t\t\t\t)\n\t\t\t: await this.webExtensionsScannerService.addExtensionFromGallery(\n\t\t\t\t\tthis.extension,\n\t\t\t\t\tmetadata,\n\t\t\t\t\tthis.profileLocation,\n\t\t\t\t);\n\t\treturn toLocalExtension(scannedExtension);\n\t}\n}\n\nclass UninstallExtensionTask\n\textends AbstractExtensionTask<void>\n\timplements IUninstallExtensionTask\n{\n\tconstructor(\n\t\treadonly extension: ILocalExtension,\n\t\treadonly options: UninstallExtensionTaskOptions,\n\t\tprivate readonly webExtensionsScannerService: IWebExtensionsScannerService,\n\t) {\n\t\tsuper();\n\t}\n\n\tprotected doRun(token: CancellationToken): Promise<void> {\n\t\treturn this.webExtensionsScannerService.removeExtension(\n\t\t\tthis.extension,\n\t\t\tthis.options.profileLocation,\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": ["e"]
}
