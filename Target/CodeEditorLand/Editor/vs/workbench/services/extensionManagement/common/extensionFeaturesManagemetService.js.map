{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/extensionManagement/common/extensionFeaturesManagemetService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { distinct } from \"../../../../base/common/arrays.js\";\nimport type { IStringDictionary } from \"../../../../base/common/collections.js\";\nimport { Emitter } from \"../../../../base/common/event.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport { equals } from \"../../../../base/common/objects.js\";\nimport type Severity from \"../../../../base/common/severity.js\";\nimport { type Mutable, isBoolean } from \"../../../../base/common/types.js\";\nimport type { IStorageChangeEvent } from \"../../../../base/parts/storage/common/storage.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { IDialogService } from \"../../../../platform/dialogs/common/dialogs.js\";\nimport { ExtensionIdentifier } from \"../../../../platform/extensions/common/extensions.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport { IExtensionService } from \"../../extensions/common/extensions.js\";\nimport {\n\tExtensions,\n\ttype IExtensionFeatureAccessData,\n\tIExtensionFeaturesManagementService,\n\ttype IExtensionFeaturesRegistry,\n} from \"./extensionFeatures.js\";\n\ninterface IExtensionFeatureState {\n\tdisabled?: boolean;\n\taccessData: Mutable<IExtensionFeatureAccessData>;\n}\n\nconst FEATURES_STATE_KEY = \"extension.features.state\";\n\nclass ExtensionFeaturesManagementService\n\textends Disposable\n\timplements IExtensionFeaturesManagementService\n{\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidChangeEnablement = this._register(\n\t\tnew Emitter<{\n\t\t\textension: ExtensionIdentifier;\n\t\t\tfeatureId: string;\n\t\t\tenabled: boolean;\n\t\t}>(),\n\t);\n\treadonly onDidChangeEnablement = this._onDidChangeEnablement.event;\n\n\tprivate readonly _onDidChangeAccessData = this._register(\n\t\tnew Emitter<{\n\t\t\textension: ExtensionIdentifier;\n\t\t\tfeatureId: string;\n\t\t\taccessData: IExtensionFeatureAccessData;\n\t\t}>(),\n\t);\n\treadonly onDidChangeAccessData = this._onDidChangeAccessData.event;\n\n\tprivate readonly registry: IExtensionFeaturesRegistry;\n\tprivate extensionFeaturesState = new Map<\n\t\tstring,\n\t\tMap<string, IExtensionFeatureState>\n\t>();\n\n\tconstructor(\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t) {\n\t\tsuper();\n\t\tthis.registry = Registry.as<IExtensionFeaturesRegistry>(\n\t\t\tExtensions.ExtensionFeaturesRegistry,\n\t\t);\n\t\tthis.extensionFeaturesState = this.loadState();\n\t\tthis._register(\n\t\t\tstorageService.onDidChangeValue(\n\t\t\t\tStorageScope.PROFILE,\n\t\t\t\tFEATURES_STATE_KEY,\n\t\t\t\tthis._store,\n\t\t\t)((e) => this.onDidStorageChange(e)),\n\t\t);\n\t}\n\n\tisEnabled(extension: ExtensionIdentifier, featureId: string): boolean {\n\t\tconst feature = this.registry.getExtensionFeature(featureId);\n\t\tif (!feature) {\n\t\t\treturn false;\n\t\t}\n\t\tconst isDisabled = this.getExtensionFeatureState(\n\t\t\textension,\n\t\t\tfeatureId,\n\t\t)?.disabled;\n\t\tif (isBoolean(isDisabled)) {\n\t\t\treturn !isDisabled;\n\t\t}\n\t\tconst defaultExtensionAccess =\n\t\t\tfeature.access.extensionsList?.[extension.value];\n\t\tif (isBoolean(defaultExtensionAccess)) {\n\t\t\treturn defaultExtensionAccess;\n\t\t}\n\t\treturn !feature.access.requireUserConsent;\n\t}\n\n\tsetEnablement(\n\t\textension: ExtensionIdentifier,\n\t\tfeatureId: string,\n\t\tenabled: boolean,\n\t): void {\n\t\tconst feature = this.registry.getExtensionFeature(featureId);\n\t\tif (!feature) {\n\t\t\tthrow new Error(`No feature with id '${featureId}'`);\n\t\t}\n\t\tconst featureState = this.getAndSetIfNotExistsExtensionFeatureState(\n\t\t\textension,\n\t\t\tfeatureId,\n\t\t);\n\t\tif (featureState.disabled !== !enabled) {\n\t\t\tfeatureState.disabled = !enabled;\n\t\t\tthis._onDidChangeEnablement.fire({ extension, featureId, enabled });\n\t\t\tthis.saveState();\n\t\t}\n\t}\n\n\tgetEnablementData(\n\t\tfeatureId: string,\n\t): {\n\t\treadonly extension: ExtensionIdentifier;\n\t\treadonly enabled: boolean;\n\t}[] {\n\t\tconst result: {\n\t\t\treadonly extension: ExtensionIdentifier;\n\t\t\treadonly enabled: boolean;\n\t\t}[] = [];\n\t\tconst feature = this.registry.getExtensionFeature(featureId);\n\t\tif (feature) {\n\t\t\tfor (const [extension, featuresStateMap] of this\n\t\t\t\t.extensionFeaturesState) {\n\t\t\t\tconst featureState = featuresStateMap.get(featureId);\n\t\t\t\tif (featureState?.disabled !== undefined) {\n\t\t\t\t\tresult.push({\n\t\t\t\t\t\textension: new ExtensionIdentifier(extension),\n\t\t\t\t\t\tenabled: !featureState.disabled,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tasync getAccess(\n\t\textension: ExtensionIdentifier,\n\t\tfeatureId: string,\n\t\tjustification?: string,\n\t): Promise<boolean> {\n\t\tconst feature = this.registry.getExtensionFeature(featureId);\n\t\tif (!feature) {\n\t\t\treturn false;\n\t\t}\n\t\tconst featureState = this.getAndSetIfNotExistsExtensionFeatureState(\n\t\t\textension,\n\t\t\tfeatureId,\n\t\t);\n\t\tif (featureState.disabled) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (featureState.disabled === undefined) {\n\t\t\tlet enabled = true;\n\t\t\tif (feature.access.requireUserConsent) {\n\t\t\t\tconst extensionDescription =\n\t\t\t\t\tthis.extensionService.extensions.find((e) =>\n\t\t\t\t\t\tExtensionIdentifier.equals(e.identifier, extension),\n\t\t\t\t\t);\n\t\t\t\tconst confirmationResult = await this.dialogService.confirm({\n\t\t\t\t\ttitle: localize(\n\t\t\t\t\t\t\"accessExtensionFeature\",\n\t\t\t\t\t\t\"Access '{0}' Feature\",\n\t\t\t\t\t\tfeature.label,\n\t\t\t\t\t),\n\t\t\t\t\tmessage: localize(\n\t\t\t\t\t\t\"accessExtensionFeatureMessage\",\n\t\t\t\t\t\t\"'{0}' extension would like to access the '{1}' feature.\",\n\t\t\t\t\t\textensionDescription?.displayName ?? extension.value,\n\t\t\t\t\t\tfeature.label,\n\t\t\t\t\t),\n\t\t\t\t\tdetail: justification ?? feature.description,\n\t\t\t\t\tcustom: true,\n\t\t\t\t\tprimaryButton: localize(\"allow\", \"Allow\"),\n\t\t\t\t\tcancelButton: localize(\"disallow\", \"Don't Allow\"),\n\t\t\t\t});\n\t\t\t\tenabled = confirmationResult.confirmed;\n\t\t\t}\n\t\t\tthis.setEnablement(extension, featureId, enabled);\n\t\t\tif (!enabled) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfeatureState.accessData.current = {\n\t\t\tcount: featureState.accessData.current?.count\n\t\t\t\t? featureState.accessData.current?.count + 1\n\t\t\t\t: 1,\n\t\t\tlastAccessed: Date.now(),\n\t\t\tstatus: featureState.accessData.current?.status,\n\t\t};\n\t\tfeatureState.accessData.totalCount =\n\t\t\tfeatureState.accessData.totalCount + 1;\n\t\tthis.saveState();\n\t\tthis._onDidChangeAccessData.fire({\n\t\t\textension,\n\t\t\tfeatureId,\n\t\t\taccessData: featureState.accessData,\n\t\t});\n\t\treturn true;\n\t}\n\n\tgetAccessData(\n\t\textension: ExtensionIdentifier,\n\t\tfeatureId: string,\n\t): IExtensionFeatureAccessData | undefined {\n\t\tconst feature = this.registry.getExtensionFeature(featureId);\n\t\tif (!feature) {\n\t\t\treturn;\n\t\t}\n\t\treturn this.getExtensionFeatureState(extension, featureId)?.accessData;\n\t}\n\n\tsetStatus(\n\t\textension: ExtensionIdentifier,\n\t\tfeatureId: string,\n\t\tstatus:\n\t\t\t| { readonly severity: Severity; readonly message: string }\n\t\t\t| undefined,\n\t): void {\n\t\tconst feature = this.registry.getExtensionFeature(featureId);\n\t\tif (!feature) {\n\t\t\tthrow new Error(`No feature with id '${featureId}'`);\n\t\t}\n\t\tconst featureState = this.getAndSetIfNotExistsExtensionFeatureState(\n\t\t\textension,\n\t\t\tfeatureId,\n\t\t);\n\t\tfeatureState.accessData.current = {\n\t\t\tcount: featureState.accessData.current?.count ?? 0,\n\t\t\tlastAccessed: featureState.accessData.current?.lastAccessed ?? 0,\n\t\t\tstatus,\n\t\t};\n\t\tthis._onDidChangeAccessData.fire({\n\t\t\textension,\n\t\t\tfeatureId,\n\t\t\taccessData: this.getAccessData(extension, featureId)!,\n\t\t});\n\t}\n\n\tprivate getExtensionFeatureState(\n\t\textension: ExtensionIdentifier,\n\t\tfeatureId: string,\n\t): IExtensionFeatureState | undefined {\n\t\treturn this.extensionFeaturesState.get(extension.value)?.get(featureId);\n\t}\n\n\tprivate getAndSetIfNotExistsExtensionFeatureState(\n\t\textension: ExtensionIdentifier,\n\t\tfeatureId: string,\n\t): Mutable<IExtensionFeatureState> {\n\t\tlet extensionState = this.extensionFeaturesState.get(extension.value);\n\t\tif (!extensionState) {\n\t\t\textensionState = new Map<string, IExtensionFeatureState>();\n\t\t\tthis.extensionFeaturesState.set(extension.value, extensionState);\n\t\t}\n\t\tlet featureState = extensionState.get(featureId);\n\t\tif (!featureState) {\n\t\t\tfeatureState = { accessData: { totalCount: 0 } };\n\t\t\textensionState.set(featureId, featureState);\n\t\t}\n\t\treturn featureState;\n\t}\n\n\tprivate onDidStorageChange(e: IStorageChangeEvent): void {\n\t\tif (e.external) {\n\t\t\tconst oldState = this.extensionFeaturesState;\n\t\t\tthis.extensionFeaturesState = this.loadState();\n\t\t\tfor (const extensionId of distinct([\n\t\t\t\t...oldState.keys(),\n\t\t\t\t...this.extensionFeaturesState.keys(),\n\t\t\t])) {\n\t\t\t\tconst extension = new ExtensionIdentifier(extensionId);\n\t\t\t\tconst oldExtensionFeaturesState = oldState.get(extensionId);\n\t\t\t\tconst newExtensionFeaturesState =\n\t\t\t\t\tthis.extensionFeaturesState.get(extensionId);\n\t\t\t\tfor (const featureId of distinct([\n\t\t\t\t\t...(oldExtensionFeaturesState?.keys() ?? []),\n\t\t\t\t\t...(newExtensionFeaturesState?.keys() ?? []),\n\t\t\t\t])) {\n\t\t\t\t\tconst isEnabled = this.isEnabled(extension, featureId);\n\t\t\t\t\tconst wasEnabled =\n\t\t\t\t\t\t!oldExtensionFeaturesState?.get(featureId)?.disabled;\n\t\t\t\t\tif (isEnabled !== wasEnabled) {\n\t\t\t\t\t\tthis._onDidChangeEnablement.fire({\n\t\t\t\t\t\t\textension,\n\t\t\t\t\t\t\tfeatureId,\n\t\t\t\t\t\t\tenabled: isEnabled,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tconst newAccessData = this.getAccessData(\n\t\t\t\t\t\textension,\n\t\t\t\t\t\tfeatureId,\n\t\t\t\t\t);\n\t\t\t\t\tconst oldAccessData =\n\t\t\t\t\t\toldExtensionFeaturesState?.get(featureId)?.accessData;\n\t\t\t\t\tif (!equals(newAccessData, oldAccessData)) {\n\t\t\t\t\t\tthis._onDidChangeAccessData.fire({\n\t\t\t\t\t\t\textension,\n\t\t\t\t\t\t\tfeatureId,\n\t\t\t\t\t\t\taccessData: newAccessData ?? { totalCount: 0 },\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate loadState(): Map<string, Map<string, IExtensionFeatureState>> {\n\t\tlet data: IStringDictionary<\n\t\t\tIStringDictionary<{ disabled?: boolean; accessCount: number }>\n\t\t> = {};\n\t\tconst raw = this.storageService.get(\n\t\t\tFEATURES_STATE_KEY,\n\t\t\tStorageScope.PROFILE,\n\t\t\t\"{}\",\n\t\t);\n\t\ttry {\n\t\t\tdata = JSON.parse(raw);\n\t\t} catch (e) {\n\t\t\t// ignore\n\t\t}\n\t\tconst result = new Map<string, Map<string, IExtensionFeatureState>>();\n\t\tfor (const extensionId in data) {\n\t\t\tconst extensionFeatureState = new Map<\n\t\t\t\tstring,\n\t\t\t\tIExtensionFeatureState\n\t\t\t>();\n\t\t\tconst extensionFeatures = data[extensionId];\n\t\t\tfor (const featureId in extensionFeatures) {\n\t\t\t\tconst extensionFeature = extensionFeatures[featureId];\n\t\t\t\textensionFeatureState.set(featureId, {\n\t\t\t\t\tdisabled: extensionFeature.disabled,\n\t\t\t\t\taccessData: {\n\t\t\t\t\t\ttotalCount: extensionFeature.accessCount,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t\tresult.set(extensionId, extensionFeatureState);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate saveState(): void {\n\t\tconst data: IStringDictionary<\n\t\t\tIStringDictionary<{ disabled?: boolean; accessCount: number }>\n\t\t> = {};\n\t\tthis.extensionFeaturesState.forEach((extensionState, extensionId) => {\n\t\t\tconst extensionFeatures: IStringDictionary<{\n\t\t\t\tdisabled?: boolean;\n\t\t\t\taccessCount: number;\n\t\t\t}> = {};\n\t\t\textensionState.forEach((featureState, featureId) => {\n\t\t\t\textensionFeatures[featureId] = {\n\t\t\t\t\tdisabled: featureState.disabled,\n\t\t\t\t\taccessCount: featureState.accessData.totalCount,\n\t\t\t\t};\n\t\t\t});\n\t\t\tdata[extensionId] = extensionFeatures;\n\t\t});\n\t\tthis.storageService.store(\n\t\t\tFEATURES_STATE_KEY,\n\t\t\tJSON.stringify(data),\n\t\t\tStorageScope.PROFILE,\n\t\t\tStorageTarget.USER,\n\t\t);\n\t}\n}\n\nregisterSingleton(\n\tIExtensionFeaturesManagementService,\n\tExtensionFeaturesManagementService,\n\tInstantiationType.Delayed,\n);\n"],
  "mappings": "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",
  "names": []
}
