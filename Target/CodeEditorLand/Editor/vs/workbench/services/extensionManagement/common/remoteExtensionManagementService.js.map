{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/extensionManagement/common/remoteExtensionManagementService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport type { IChannel } from \"../../../../base/parts/ipc/common/ipc.js\";\nimport type { ExtensionIdentifier } from \"../../../../platform/extensions/common/extensions.js\";\nimport { IUriIdentityService } from \"../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport { IUserDataProfilesService } from \"../../../../platform/userDataProfile/common/userDataProfile.js\";\nimport { IRemoteUserDataProfilesService } from \"../../userDataProfile/common/remoteUserDataProfiles.js\";\nimport { IUserDataProfileService } from \"../../userDataProfile/common/userDataProfile.js\";\nimport type {\n\tDidChangeProfileEvent,\n\tIProfileAwareExtensionManagementService,\n} from \"./extensionManagement.js\";\nimport { ProfileAwareExtensionManagementChannelClient } from \"./extensionManagementChannelClient.js\";\n\nexport class RemoteExtensionManagementService\n\textends ProfileAwareExtensionManagementChannelClient\n\timplements IProfileAwareExtensionManagementService\n{\n\tconstructor(\n\t\tchannel: IChannel,\n\t\t@IUserDataProfileService userDataProfileService: IUserDataProfileService,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IRemoteUserDataProfilesService private readonly remoteUserDataProfilesService: IRemoteUserDataProfilesService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService\n\t) {\n\t\tsuper(channel, userDataProfileService, uriIdentityService);\n\t}\n\n\tprotected async filterEvent(\n\t\tprofileLocation: URI,\n\t\tapplicationScoped: boolean,\n\t): Promise<boolean> {\n\t\tif (applicationScoped) {\n\t\t\treturn true;\n\t\t}\n\t\tif (\n\t\t\t!profileLocation &&\n\t\t\tthis.userDataProfileService.currentProfile.isDefault\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t\tconst currentRemoteProfile =\n\t\t\tawait this.remoteUserDataProfilesService.getRemoteProfile(\n\t\t\t\tthis.userDataProfileService.currentProfile,\n\t\t\t);\n\t\tif (\n\t\t\tthis.uriIdentityService.extUri.isEqual(\n\t\t\t\tcurrentRemoteProfile.extensionsResource,\n\t\t\t\tprofileLocation,\n\t\t\t)\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected override getProfileLocation(profileLocation: URI): Promise<URI>;\n\tprotected override getProfileLocation(\n\t\tprofileLocation?: URI,\n\t): Promise<URI | undefined>;\n\tprotected override async getProfileLocation(\n\t\tprofileLocation?: URI,\n\t): Promise<URI | undefined> {\n\t\tif (\n\t\t\t!profileLocation &&\n\t\t\tthis.userDataProfileService.currentProfile.isDefault\n\t\t) {\n\t\t\treturn undefined;\n\t\t}\n\t\tprofileLocation = await super.getProfileLocation(profileLocation);\n\t\tlet profile = this.userDataProfilesService.profiles.find((p) =>\n\t\t\tthis.uriIdentityService.extUri.isEqual(\n\t\t\t\tp.extensionsResource,\n\t\t\t\tprofileLocation,\n\t\t\t),\n\t\t);\n\t\tif (profile) {\n\t\t\tprofile =\n\t\t\t\tawait this.remoteUserDataProfilesService.getRemoteProfile(\n\t\t\t\t\tprofile,\n\t\t\t\t);\n\t\t} else {\n\t\t\tprofile = (\n\t\t\t\tawait this.remoteUserDataProfilesService.getRemoteProfiles()\n\t\t\t).find((p) =>\n\t\t\t\tthis.uriIdentityService.extUri.isEqual(\n\t\t\t\t\tp.extensionsResource,\n\t\t\t\t\tprofileLocation,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t\treturn profile?.extensionsResource;\n\t}\n\n\tprotected override async switchExtensionsProfile(\n\t\tpreviousProfileLocation: URI,\n\t\tcurrentProfileLocation: URI,\n\t\tpreserveExtensions?: ExtensionIdentifier[],\n\t): Promise<DidChangeProfileEvent> {\n\t\tconst remoteProfiles =\n\t\t\tawait this.remoteUserDataProfilesService.getRemoteProfiles();\n\t\tconst previousProfile = remoteProfiles.find((p) =>\n\t\t\tthis.uriIdentityService.extUri.isEqual(\n\t\t\t\tp.extensionsResource,\n\t\t\t\tpreviousProfileLocation,\n\t\t\t),\n\t\t);\n\t\tconst currentProfile = remoteProfiles.find((p) =>\n\t\t\tthis.uriIdentityService.extUri.isEqual(\n\t\t\t\tp.extensionsResource,\n\t\t\t\tcurrentProfileLocation,\n\t\t\t),\n\t\t);\n\t\tif (previousProfile?.id === currentProfile?.id) {\n\t\t\treturn { added: [], removed: [] };\n\t\t}\n\t\treturn super.switchExtensionsProfile(\n\t\t\tpreviousProfileLocation,\n\t\t\tcurrentProfileLocation,\n\t\t\tpreserveExtensions,\n\t\t);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAQA,SAAS,2BAA2B;AACpC,SAAS,gCAAgC;AACzC,SAAS,sCAAsC;AAC/C,SAAS,+BAA+B;AAKxC,SAAS,oDAAoD;AAEtD,IAAM,mCAAN,cACE,6CAET;AAAA,EACC,YACC,SACyB,wBACkB,yBACM,+BAC5B,oBACpB;AACD,UAAM,SAAS,wBAAwB,kBAAkB;AAJd;AACM;AAAA,EAIlD;AAAA,EA9BD,OAqBA;AAAA;AAAA;AAAA,EAWC,MAAgB,YACf,iBACA,mBACmB;AACnB,QAAI,mBAAmB;AACtB,aAAO;AAAA,IACR;AACA,QACC,CAAC,mBACD,KAAK,uBAAuB,eAAe,WAC1C;AACD,aAAO;AAAA,IACR;AACA,UAAM,uBACL,MAAM,KAAK,8BAA8B;AAAA,MACxC,KAAK,uBAAuB;AAAA,IAC7B;AACD,QACC,KAAK,mBAAmB,OAAO;AAAA,MAC9B,qBAAqB;AAAA,MACrB;AAAA,IACD,GACC;AACD,aAAO;AAAA,IACR;AACA,WAAO;AAAA,EACR;AAAA,EAMA,MAAyB,mBACxB,iBAC2B;AAC3B,QACC,CAAC,mBACD,KAAK,uBAAuB,eAAe,WAC1C;AACD,aAAO;AAAA,IACR;AACA,sBAAkB,MAAM,MAAM,mBAAmB,eAAe;AAChE,QAAI,UAAU,KAAK,wBAAwB,SAAS;AAAA,MAAK,CAAC,MACzD,KAAK,mBAAmB,OAAO;AAAA,QAC9B,EAAE;AAAA,QACF;AAAA,MACD;AAAA,IACD;AACA,QAAI,SAAS;AACZ,gBACC,MAAM,KAAK,8BAA8B;AAAA,QACxC;AAAA,MACD;AAAA,IACF,OAAO;AACN,iBACC,MAAM,KAAK,8BAA8B,kBAAkB,GAC1D;AAAA,QAAK,CAAC,MACP,KAAK,mBAAmB,OAAO;AAAA,UAC9B,EAAE;AAAA,UACF;AAAA,QACD;AAAA,MACD;AAAA,IACD;AACA,WAAO,SAAS;AAAA,EACjB;AAAA,EAEA,MAAyB,wBACxB,yBACA,wBACA,oBACiC;AACjC,UAAM,iBACL,MAAM,KAAK,8BAA8B,kBAAkB;AAC5D,UAAM,kBAAkB,eAAe;AAAA,MAAK,CAAC,MAC5C,KAAK,mBAAmB,OAAO;AAAA,QAC9B,EAAE;AAAA,QACF;AAAA,MACD;AAAA,IACD;AACA,UAAM,iBAAiB,eAAe;AAAA,MAAK,CAAC,MAC3C,KAAK,mBAAmB,OAAO;AAAA,QAC9B,EAAE;AAAA,QACF;AAAA,MACD;AAAA,IACD;AACA,QAAI,iBAAiB,OAAO,gBAAgB,IAAI;AAC/C,aAAO,EAAE,OAAO,CAAC,GAAG,SAAS,CAAC,EAAE;AAAA,IACjC;AACA,WAAO,MAAM;AAAA,MACZ;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,EACD;AACD;AA5Ga,mCAAN;AAAA,EAMJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GATU;",
  "names": []
}
