{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/extensionManagement/common/remoteExtensionManagementService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel } from '../../../../base/parts/ipc/common/ipc.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { DidChangeProfileEvent, IProfileAwareExtensionManagementService } from './extensionManagement.js';\nimport { IUriIdentityService } from '../../../../platform/uriIdentity/common/uriIdentity.js';\nimport { IRemoteUserDataProfilesService } from '../../userDataProfile/common/remoteUserDataProfiles.js';\nimport { ProfileAwareExtensionManagementChannelClient } from './extensionManagementChannelClient.js';\nimport { IUserDataProfileService } from '../../userDataProfile/common/userDataProfile.js';\nimport { IUserDataProfilesService } from '../../../../platform/userDataProfile/common/userDataProfile.js';\nimport { ExtensionIdentifier } from '../../../../platform/extensions/common/extensions.js';\n\nexport class RemoteExtensionManagementService extends ProfileAwareExtensionManagementChannelClient implements IProfileAwareExtensionManagementService {\n\n\tconstructor(\n\t\tchannel: IChannel,\n\t\t@IUserDataProfileService userDataProfileService: IUserDataProfileService,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IRemoteUserDataProfilesService private readonly remoteUserDataProfilesService: IRemoteUserDataProfilesService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService\n\t) {\n\t\tsuper(channel, userDataProfileService, uriIdentityService);\n\t}\n\n\tprotected async filterEvent(profileLocation: URI, applicationScoped: boolean): Promise<boolean> {\n\t\tif (applicationScoped) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!profileLocation && this.userDataProfileService.currentProfile.isDefault) {\n\t\t\treturn true;\n\t\t}\n\t\tconst currentRemoteProfile = await this.remoteUserDataProfilesService.getRemoteProfile(this.userDataProfileService.currentProfile);\n\t\tif (this.uriIdentityService.extUri.isEqual(currentRemoteProfile.extensionsResource, profileLocation)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected override getProfileLocation(profileLocation: URI): Promise<URI>;\n\tprotected override getProfileLocation(profileLocation?: URI): Promise<URI | undefined>;\n\tprotected override async getProfileLocation(profileLocation?: URI): Promise<URI | undefined> {\n\t\tif (!profileLocation && this.userDataProfileService.currentProfile.isDefault) {\n\t\t\treturn undefined;\n\t\t}\n\t\tprofileLocation = await super.getProfileLocation(profileLocation);\n\t\tlet profile = this.userDataProfilesService.profiles.find(p => this.uriIdentityService.extUri.isEqual(p.extensionsResource, profileLocation));\n\t\tif (profile) {\n\t\t\tprofile = await this.remoteUserDataProfilesService.getRemoteProfile(profile);\n\t\t} else {\n\t\t\tprofile = (await this.remoteUserDataProfilesService.getRemoteProfiles()).find(p => this.uriIdentityService.extUri.isEqual(p.extensionsResource, profileLocation));\n\t\t}\n\t\treturn profile?.extensionsResource;\n\t}\n\n\tprotected override async switchExtensionsProfile(previousProfileLocation: URI, currentProfileLocation: URI, preserveExtensions?: ExtensionIdentifier[]): Promise<DidChangeProfileEvent> {\n\t\tconst remoteProfiles = await this.remoteUserDataProfilesService.getRemoteProfiles();\n\t\tconst previousProfile = remoteProfiles.find(p => this.uriIdentityService.extUri.isEqual(p.extensionsResource, previousProfileLocation));\n\t\tconst currentProfile = remoteProfiles.find(p => this.uriIdentityService.extUri.isEqual(p.extensionsResource, currentProfileLocation));\n\t\tif (previousProfile?.id === currentProfile?.id) {\n\t\t\treturn { added: [], removed: [] };\n\t\t}\n\t\treturn super.switchExtensionsProfile(previousProfileLocation, currentProfileLocation, preserveExtensions);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,gBAAgB;AACzB,SAAS,WAAW;AACpB,SAAS,uBAAuB,+CAA+C;AAC/E,SAAS,2BAA2B;AACpC,SAAS,sCAAsC;AAC/C,SAAS,oDAAoD;AAC7D,SAAS,+BAA+B;AACxC,SAAS,gCAAgC;AACzC,SAAS,2BAA2B;AAE7B,IAAM,mCAAN,cAA+C,6CAAgG;AAAA,EAErJ,YACC,SACyB,wBACkB,yBACM,+BAC5B,oBACpB;AACD,UAAM,SAAS,wBAAwB,kBAAkB;AAJd;AACM;AAAA,EAIlD;AAAA,EAzBD,OAesJ;AAAA;AAAA;AAAA,EAYrJ,MAAgB,YAAY,iBAAsB,mBAA8C;AAC/F,QAAI,mBAAmB;AACtB,aAAO;AAAA,IACR;AACA,QAAI,CAAC,mBAAmB,KAAK,uBAAuB,eAAe,WAAW;AAC7E,aAAO;AAAA,IACR;AACA,UAAM,uBAAuB,MAAM,KAAK,8BAA8B,iBAAiB,KAAK,uBAAuB,cAAc;AACjI,QAAI,KAAK,mBAAmB,OAAO,QAAQ,qBAAqB,oBAAoB,eAAe,GAAG;AACrG,aAAO;AAAA,IACR;AACA,WAAO;AAAA,EACR;AAAA,EAIA,MAAyB,mBAAmB,iBAAiD;AAC5F,QAAI,CAAC,mBAAmB,KAAK,uBAAuB,eAAe,WAAW;AAC7E,aAAO;AAAA,IACR;AACA,sBAAkB,MAAM,MAAM,mBAAmB,eAAe;AAChE,QAAI,UAAU,KAAK,wBAAwB,SAAS,KAAK,OAAK,KAAK,mBAAmB,OAAO,QAAQ,EAAE,oBAAoB,eAAe,CAAC;AAC3I,QAAI,SAAS;AACZ,gBAAU,MAAM,KAAK,8BAA8B,iBAAiB,OAAO;AAAA,IAC5E,OAAO;AACN,iBAAW,MAAM,KAAK,8BAA8B,kBAAkB,GAAG,KAAK,OAAK,KAAK,mBAAmB,OAAO,QAAQ,EAAE,oBAAoB,eAAe,CAAC;AAAA,IACjK;AACA,WAAO,SAAS;AAAA,EACjB;AAAA,EAEA,MAAyB,wBAAwB,yBAA8B,wBAA6B,oBAA4E;AACvL,UAAM,iBAAiB,MAAM,KAAK,8BAA8B,kBAAkB;AAClF,UAAM,kBAAkB,eAAe,KAAK,OAAK,KAAK,mBAAmB,OAAO,QAAQ,EAAE,oBAAoB,uBAAuB,CAAC;AACtI,UAAM,iBAAiB,eAAe,KAAK,OAAK,KAAK,mBAAmB,OAAO,QAAQ,EAAE,oBAAoB,sBAAsB,CAAC;AACpI,QAAI,iBAAiB,OAAO,gBAAgB,IAAI;AAC/C,aAAO,EAAE,OAAO,CAAC,GAAG,SAAS,CAAC,EAAE;AAAA,IACjC;AACA,WAAO,MAAM,wBAAwB,yBAAyB,wBAAwB,kBAAkB;AAAA,EACzG;AACD;AAnDa,mCAAN;AAAA,EAIJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAPU;",
  "names": []
}
