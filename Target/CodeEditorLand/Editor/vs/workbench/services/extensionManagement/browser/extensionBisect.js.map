{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/extensionManagement/browser/extensionBisect.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize, localize2 } from '../../../../nls.js';\nimport { IExtensionManagementService, IGlobalExtensionEnablementService, ILocalExtension } from '../../../../platform/extensionManagement/common/extensionManagement.js';\nimport { IStorageService, StorageScope, StorageTarget } from '../../../../platform/storage/common/storage.js';\nimport { ExtensionType, IExtension, isResolverExtension } from '../../../../platform/extensions/common/extensions.js';\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { INotificationService, IPromptChoice, NotificationPriority, Severity } from '../../../../platform/notification/common/notification.js';\nimport { IHostService } from '../../host/browser/host.js';\nimport { createDecorator, ServicesAccessor } from '../../../../platform/instantiation/common/instantiation.js';\nimport { Action2, MenuId, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nimport { LifecyclePhase } from '../../lifecycle/common/lifecycle.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { Extensions, IWorkbenchContributionsRegistry } from '../../../common/contributions.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { IProductService } from '../../../../platform/product/common/productService.js';\nimport { IWorkbenchEnvironmentService } from '../../environment/common/environmentService.js';\nimport { areSameExtensions } from '../../../../platform/extensionManagement/common/extensionManagementUtil.js';\nimport { Categories } from '../../../../platform/action/common/actionCommonCategories.js';\nimport { IWorkbenchExtensionEnablementService } from '../common/extensionManagement.js';\n\n// --- bisect service\n\nexport const IExtensionBisectService = createDecorator<IExtensionBisectService>('IExtensionBisectService');\n\nexport interface IExtensionBisectService {\n\n\treadonly _serviceBrand: undefined;\n\n\tisDisabledByBisect(extension: IExtension): boolean;\n\tisActive: boolean;\n\tdisabledCount: number;\n\tstart(extensions: ILocalExtension[]): Promise<void>;\n\tnext(seeingBad: boolean): Promise<{ id: string; bad: boolean } | undefined>;\n\treset(): Promise<void>;\n}\n\nclass BisectState {\n\n\tstatic fromJSON(raw: string | undefined): BisectState | undefined {\n\t\tif (!raw) {\n\t\t\treturn undefined;\n\t\t}\n\t\ttry {\n\t\t\tinterface Raw extends BisectState { }\n\t\t\tconst data: Raw = JSON.parse(raw);\n\t\t\treturn new BisectState(data.extensions, data.low, data.high, data.mid);\n\t\t} catch {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tconstructor(\n\t\treadonly extensions: string[],\n\t\treadonly low: number,\n\t\treadonly high: number,\n\t\treadonly mid: number = ((low + high) / 2) | 0\n\t) { }\n}\n\nclass ExtensionBisectService implements IExtensionBisectService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate static readonly _storageKey = 'extensionBisectState';\n\n\tprivate readonly _state: BisectState | undefined;\n\tprivate readonly _disabled = new Map<string, boolean>();\n\n\tconstructor(\n\t\t@ILogService logService: ILogService,\n\t\t@IStorageService private readonly _storageService: IStorageService,\n\t\t@IWorkbenchEnvironmentService private readonly _envService: IWorkbenchEnvironmentService\n\t) {\n\t\tconst raw = _storageService.get(ExtensionBisectService._storageKey, StorageScope.APPLICATION);\n\t\tthis._state = BisectState.fromJSON(raw);\n\n\t\tif (this._state) {\n\t\t\tconst { mid, high } = this._state;\n\t\t\tfor (let i = 0; i < this._state.extensions.length; i++) {\n\t\t\t\tconst isDisabled = i >= mid && i < high;\n\t\t\t\tthis._disabled.set(this._state.extensions[i], isDisabled);\n\t\t\t}\n\t\t\tlogService.warn('extension BISECT active', [...this._disabled]);\n\t\t}\n\t}\n\n\tget isActive() {\n\t\treturn !!this._state;\n\t}\n\n\tget disabledCount() {\n\t\treturn this._state ? this._state.high - this._state.mid : -1;\n\t}\n\n\tisDisabledByBisect(extension: IExtension): boolean {\n\t\tif (!this._state) {\n\t\t\t// bisect isn't active\n\t\t\treturn false;\n\t\t}\n\t\tif (isResolverExtension(extension.manifest, this._envService.remoteAuthority)) {\n\t\t\t// the current remote resolver extension cannot be disabled\n\t\t\treturn false;\n\t\t}\n\t\tif (this._isEnabledInEnv(extension)) {\n\t\t\t// Extension enabled in env cannot be disabled\n\t\t\treturn false;\n\t\t}\n\t\tconst disabled = this._disabled.get(extension.identifier.id);\n\t\treturn disabled ?? false;\n\t}\n\n\tprivate _isEnabledInEnv(extension: IExtension): boolean {\n\t\treturn Array.isArray(this._envService.enableExtensions) && this._envService.enableExtensions.some(id => areSameExtensions({ id }, extension.identifier));\n\t}\n\n\tasync start(extensions: ILocalExtension[]): Promise<void> {\n\t\tif (this._state) {\n\t\t\tthrow new Error('invalid state');\n\t\t}\n\t\tconst extensionIds = extensions.map(ext => ext.identifier.id);\n\t\tconst newState = new BisectState(extensionIds, 0, extensionIds.length, 0);\n\t\tthis._storageService.store(ExtensionBisectService._storageKey, JSON.stringify(newState), StorageScope.APPLICATION, StorageTarget.MACHINE);\n\t\tawait this._storageService.flush();\n\t}\n\n\tasync next(seeingBad: boolean): Promise<{ id: string; bad: boolean } | undefined> {\n\t\tif (!this._state) {\n\t\t\tthrow new Error('invalid state');\n\t\t}\n\t\t// check if bad when all extensions are disabled\n\t\tif (seeingBad && this._state.mid === 0 && this._state.high === this._state.extensions.length) {\n\t\t\treturn { bad: true, id: '' };\n\t\t}\n\t\t// check if there is only one left\n\t\tif (this._state.low === this._state.high - 1) {\n\t\t\tawait this.reset();\n\t\t\treturn { id: this._state.extensions[this._state.low], bad: seeingBad };\n\t\t}\n\t\t// the second half is disabled so if there is still bad it must be\n\t\t// in the first half\n\t\tconst nextState = new BisectState(\n\t\t\tthis._state.extensions,\n\t\t\tseeingBad ? this._state.low : this._state.mid,\n\t\t\tseeingBad ? this._state.mid : this._state.high,\n\t\t);\n\t\tthis._storageService.store(ExtensionBisectService._storageKey, JSON.stringify(nextState), StorageScope.APPLICATION, StorageTarget.MACHINE);\n\t\tawait this._storageService.flush();\n\t\treturn undefined;\n\t}\n\n\tasync reset(): Promise<void> {\n\t\tthis._storageService.remove(ExtensionBisectService._storageKey, StorageScope.APPLICATION);\n\t\tawait this._storageService.flush();\n\t}\n}\n\nregisterSingleton(IExtensionBisectService, ExtensionBisectService, InstantiationType.Delayed);\n\n// --- bisect UI\n\nclass ExtensionBisectUi {\n\n\tstatic ctxIsBisectActive = new RawContextKey<boolean>('isExtensionBisectActive', false);\n\n\tconstructor(\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IExtensionBisectService private readonly _extensionBisectService: IExtensionBisectService,\n\t\t@INotificationService private readonly _notificationService: INotificationService,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t) {\n\t\tif (_extensionBisectService.isActive) {\n\t\t\tExtensionBisectUi.ctxIsBisectActive.bindTo(contextKeyService).set(true);\n\t\t\tthis._showBisectPrompt();\n\t\t}\n\t}\n\n\tprivate _showBisectPrompt(): void {\n\n\t\tconst goodPrompt: IPromptChoice = {\n\t\t\tlabel: localize('I cannot reproduce', \"I can't reproduce\"),\n\t\t\trun: () => this._commandService.executeCommand('extension.bisect.next', false)\n\t\t};\n\t\tconst badPrompt: IPromptChoice = {\n\t\t\tlabel: localize('This is Bad', \"I can reproduce\"),\n\t\t\trun: () => this._commandService.executeCommand('extension.bisect.next', true)\n\t\t};\n\t\tconst stop: IPromptChoice = {\n\t\t\tlabel: 'Stop Bisect',\n\t\t\trun: () => this._commandService.executeCommand('extension.bisect.stop')\n\t\t};\n\n\t\tconst message = this._extensionBisectService.disabledCount === 1\n\t\t\t? localize('bisect.singular', \"Extension Bisect is active and has disabled 1 extension. Check if you can still reproduce the problem and proceed by selecting from these options.\")\n\t\t\t: localize('bisect.plural', \"Extension Bisect is active and has disabled {0} extensions. Check if you can still reproduce the problem and proceed by selecting from these options.\", this._extensionBisectService.disabledCount);\n\n\t\tthis._notificationService.prompt(\n\t\t\tSeverity.Info,\n\t\t\tmessage,\n\t\t\t[goodPrompt, badPrompt, stop],\n\t\t\t{ sticky: true, priority: NotificationPriority.URGENT }\n\t\t);\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(Extensions.Workbench).registerWorkbenchContribution(\n\tExtensionBisectUi,\n\tLifecyclePhase.Restored\n);\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'extension.bisect.start',\n\t\t\ttitle: localize2('title.start', 'Start Extension Bisect'),\n\t\t\tcategory: Categories.Help,\n\t\t\tf1: true,\n\t\t\tprecondition: ExtensionBisectUi.ctxIsBisectActive.negate(),\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.ViewContainerTitle,\n\t\t\t\twhen: ContextKeyExpr.equals('viewContainer', 'workbench.view.extensions'),\n\t\t\t\tgroup: '2_enablement',\n\t\t\t\torder: 4\n\t\t\t}\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst dialogService = accessor.get(IDialogService);\n\t\tconst hostService = accessor.get(IHostService);\n\t\tconst extensionManagement = accessor.get(IExtensionManagementService);\n\t\tconst extensionEnablementService = accessor.get(IWorkbenchExtensionEnablementService);\n\t\tconst extensionsBisect = accessor.get(IExtensionBisectService);\n\n\t\tconst extensions = (await extensionManagement.getInstalled(ExtensionType.User)).filter(ext => extensionEnablementService.isEnabled(ext));\n\n\t\tconst res = await dialogService.confirm({\n\t\t\tmessage: localize('msg.start', \"Extension Bisect\"),\n\t\t\tdetail: localize('detail.start', \"Extension Bisect will use binary search to find an extension that causes a problem. During the process the window reloads repeatedly (~{0} times). Each time you must confirm if you are still seeing problems.\", 2 + Math.log2(extensions.length) | 0),\n\t\t\tprimaryButton: localize({ key: 'msg2', comment: ['&& denotes a mnemonic'] }, \"&&Start Extension Bisect\")\n\t\t});\n\n\t\tif (res.confirmed) {\n\t\t\tawait extensionsBisect.start(extensions);\n\t\t\thostService.reload();\n\t\t}\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'extension.bisect.next',\n\t\t\ttitle: localize2('title.isBad', 'Continue Extension Bisect'),\n\t\t\tcategory: Categories.Help,\n\t\t\tf1: true,\n\t\t\tprecondition: ExtensionBisectUi.ctxIsBisectActive\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor, seeingBad: boolean | undefined): Promise<void> {\n\t\tconst dialogService = accessor.get(IDialogService);\n\t\tconst hostService = accessor.get(IHostService);\n\t\tconst bisectService = accessor.get(IExtensionBisectService);\n\t\tconst productService = accessor.get(IProductService);\n\t\tconst extensionEnablementService = accessor.get(IGlobalExtensionEnablementService);\n\t\tconst commandService = accessor.get(ICommandService);\n\n\t\tif (!bisectService.isActive) {\n\t\t\treturn;\n\t\t}\n\t\tif (seeingBad === undefined) {\n\t\t\tconst goodBadStopCancel = await this._checkForBad(dialogService, bisectService);\n\t\t\tif (goodBadStopCancel === null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tseeingBad = goodBadStopCancel;\n\t\t}\n\t\tif (seeingBad === undefined) {\n\t\t\tawait bisectService.reset();\n\t\t\thostService.reload();\n\t\t\treturn;\n\t\t}\n\t\tconst done = await bisectService.next(seeingBad);\n\t\tif (!done) {\n\t\t\thostService.reload();\n\t\t\treturn;\n\t\t}\n\n\t\tif (done.bad) {\n\t\t\t// DONE but nothing found\n\t\t\tawait dialogService.info(\n\t\t\t\tlocalize('done.msg', \"Extension Bisect\"),\n\t\t\t\tlocalize('done.detail2', \"Extension Bisect is done but no extension has been identified. This might be a problem with {0}.\", productService.nameShort)\n\t\t\t);\n\n\t\t} else {\n\t\t\t// DONE and identified extension\n\t\t\tconst res = await dialogService.confirm({\n\t\t\t\ttype: Severity.Info,\n\t\t\t\tmessage: localize('done.msg', \"Extension Bisect\"),\n\t\t\t\tprimaryButton: localize({ key: 'report', comment: ['&& denotes a mnemonic'] }, \"&&Report Issue & Continue\"),\n\t\t\t\tcancelButton: localize('continue', \"Continue\"),\n\t\t\t\tdetail: localize('done.detail', \"Extension Bisect is done and has identified {0} as the extension causing the problem.\", done.id),\n\t\t\t\tcheckbox: { label: localize('done.disbale', \"Keep this extension disabled\"), checked: true }\n\t\t\t});\n\t\t\tif (res.checkboxChecked) {\n\t\t\t\tawait extensionEnablementService.disableExtension({ id: done.id }, undefined);\n\t\t\t}\n\t\t\tif (res.confirmed) {\n\t\t\t\tawait commandService.executeCommand('workbench.action.openIssueReporter', done.id);\n\t\t\t}\n\t\t}\n\t\tawait bisectService.reset();\n\t\thostService.reload();\n\t}\n\n\tprivate async _checkForBad(dialogService: IDialogService, bisectService: IExtensionBisectService): Promise<boolean | undefined | null> {\n\t\tconst { result } = await dialogService.prompt<boolean | undefined | null>({\n\t\t\ttype: Severity.Info,\n\t\t\tmessage: localize('msg.next', \"Extension Bisect\"),\n\t\t\tdetail: localize('bisect', \"Extension Bisect is active and has disabled {0} extensions. Check if you can still reproduce the problem and proceed by selecting from these options.\", bisectService.disabledCount),\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\tlabel: localize({ key: 'next.good', comment: ['&& denotes a mnemonic'] }, \"I ca&&n't reproduce\"),\n\t\t\t\t\trun: () => false // good now\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: localize({ key: 'next.bad', comment: ['&& denotes a mnemonic'] }, \"I can &&reproduce\"),\n\t\t\t\t\trun: () => true // bad\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: localize({ key: 'next.stop', comment: ['&& denotes a mnemonic'] }, \"&&Stop Bisect\"),\n\t\t\t\t\trun: () => undefined // stop\n\t\t\t\t}\n\t\t\t],\n\t\t\tcancelButton: {\n\t\t\t\tlabel: localize({ key: 'next.cancel', comment: ['&& denotes a mnemonic'] }, \"&&Cancel Bisect\"),\n\t\t\t\trun: () => null // cancel\n\t\t\t}\n\t\t});\n\t\treturn result;\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'extension.bisect.stop',\n\t\t\ttitle: localize2('title.stop', 'Stop Extension Bisect'),\n\t\t\tcategory: Categories.Help,\n\t\t\tf1: true,\n\t\t\tprecondition: ExtensionBisectUi.ctxIsBisectActive\n\t\t});\n\t}\n\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst extensionsBisect = accessor.get(IExtensionBisectService);\n\t\tconst hostService = accessor.get(IHostService);\n\t\tawait extensionsBisect.reset();\n\t\thostService.reload();\n\t}\n});\n"],
  "mappings": "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",
  "names": []
}
