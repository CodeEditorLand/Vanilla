{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/extensionManagement/browser/builtinExtensionsScannerService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { mainWindow } from \"../../../../base/browser/window.js\";\nimport {\n\tFileAccess,\n\tbuiltinExtensionsPath,\n} from \"../../../../base/common/network.js\";\nimport { Language, isWeb } from \"../../../../base/common/platform.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { getGalleryExtensionId } from \"../../../../platform/extensionManagement/common/extensionManagementUtil.js\";\nimport {\n\ttype ITranslations,\n\tlocalizeManifest,\n} from \"../../../../platform/extensionManagement/common/extensionNls.js\";\nimport { IExtensionResourceLoaderService } from \"../../../../platform/extensionResourceLoader/common/extensionResourceLoader.js\";\nimport {\n\tExtensionType,\n\tIBuiltinExtensionsScannerService,\n\ttype IExtension,\n\ttype IExtensionManifest,\n\tTargetPlatform,\n} from \"../../../../platform/extensions/common/extensions.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { IProductService } from \"../../../../platform/product/common/productService.js\";\nimport { IUriIdentityService } from \"../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport { IWorkbenchEnvironmentService } from \"../../environment/common/environmentService.js\";\n\ninterface IBundledExtension {\n\textensionPath: string;\n\tpackageJSON: IExtensionManifest;\n\tpackageNLS?: any;\n\treadmePath?: string;\n\tchangelogPath?: string;\n}\n\nexport class BuiltinExtensionsScannerService\n\timplements IBuiltinExtensionsScannerService\n{\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly builtinExtensionsPromises: Promise<IExtension>[] = [];\n\n\tprivate nlsUrl: URI | undefined;\n\n\tconstructor(\n\t\t@IWorkbenchEnvironmentService\n\t\tenvironmentService: IWorkbenchEnvironmentService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t\t@IExtensionResourceLoaderService\n\t\tprivate readonly extensionResourceLoaderService: IExtensionResourceLoaderService,\n\t\t@IProductService productService: IProductService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t\tif (isWeb) {\n\t\t\tconst nlsBaseUrl = productService.extensionsGallery?.nlsBaseUrl;\n\t\t\t// Only use the nlsBaseUrl if we are using a language other than the default, English.\n\t\t\tif (\n\t\t\t\tnlsBaseUrl &&\n\t\t\t\tproductService.commit &&\n\t\t\t\t!Language.isDefaultVariant()\n\t\t\t) {\n\t\t\t\tthis.nlsUrl = URI.joinPath(\n\t\t\t\t\tURI.parse(nlsBaseUrl),\n\t\t\t\t\tproductService.commit,\n\t\t\t\t\tproductService.version,\n\t\t\t\t\tLanguage.value(),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst builtinExtensionsServiceUrl = FileAccess.asBrowserUri(\n\t\t\t\tbuiltinExtensionsPath,\n\t\t\t);\n\t\t\tif (builtinExtensionsServiceUrl) {\n\t\t\t\tlet bundledExtensions: IBundledExtension[] = [];\n\n\t\t\t\tif (environmentService.isBuilt) {\n\t\t\t\t\t// Built time configuration (do NOT modify)\n\t\t\t\t\tbundledExtensions = [\n\t\t\t\t\t\t/*BUILD->INSERT_BUILTIN_EXTENSIONS*/\n\t\t\t\t\t];\n\t\t\t\t} else {\n\t\t\t\t\t// Find builtin extensions by checking for DOM\n\t\t\t\t\tconst builtinExtensionsElement =\n\t\t\t\t\t\tmainWindow.document.getElementById(\n\t\t\t\t\t\t\t\"vscode-workbench-builtin-extensions\",\n\t\t\t\t\t\t);\n\t\t\t\t\tconst builtinExtensionsElementAttribute =\n\t\t\t\t\t\tbuiltinExtensionsElement\n\t\t\t\t\t\t\t? builtinExtensionsElement.getAttribute(\n\t\t\t\t\t\t\t\t\t\"data-settings\",\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: undefined;\n\t\t\t\t\tif (builtinExtensionsElementAttribute) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tbundledExtensions = JSON.parse(\n\t\t\t\t\t\t\t\tbuiltinExtensionsElementAttribute,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t/* ignore error*/\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.builtinExtensionsPromises = bundledExtensions.map(\n\t\t\t\t\tasync (e) => {\n\t\t\t\t\t\tconst id = getGalleryExtensionId(\n\t\t\t\t\t\t\te.packageJSON.publisher,\n\t\t\t\t\t\t\te.packageJSON.name,\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tidentifier: { id },\n\t\t\t\t\t\t\tlocation: uriIdentityService.extUri.joinPath(\n\t\t\t\t\t\t\t\tbuiltinExtensionsServiceUrl,\n\t\t\t\t\t\t\t\te.extensionPath,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ttype: ExtensionType.System,\n\t\t\t\t\t\t\tisBuiltin: true,\n\t\t\t\t\t\t\tmanifest: e.packageNLS\n\t\t\t\t\t\t\t\t? await this.localizeManifest(\n\t\t\t\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\t\t\t\te.packageJSON,\n\t\t\t\t\t\t\t\t\t\te.packageNLS,\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t: e.packageJSON,\n\t\t\t\t\t\t\treadmeUrl: e.readmePath\n\t\t\t\t\t\t\t\t? uriIdentityService.extUri.joinPath(\n\t\t\t\t\t\t\t\t\t\tbuiltinExtensionsServiceUrl,\n\t\t\t\t\t\t\t\t\t\te.readmePath,\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\t\tchangelogUrl: e.changelogPath\n\t\t\t\t\t\t\t\t? uriIdentityService.extUri.joinPath(\n\t\t\t\t\t\t\t\t\t\tbuiltinExtensionsServiceUrl,\n\t\t\t\t\t\t\t\t\t\te.changelogPath,\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\t\ttargetPlatform: TargetPlatform.WEB,\n\t\t\t\t\t\t\tvalidations: [],\n\t\t\t\t\t\t\tisValid: true,\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync scanBuiltinExtensions(): Promise<IExtension[]> {\n\t\treturn [...(await Promise.all(this.builtinExtensionsPromises))];\n\t}\n\n\tprivate async localizeManifest(\n\t\textensionId: string,\n\t\tmanifest: IExtensionManifest,\n\t\tfallbackTranslations: ITranslations,\n\t): Promise<IExtensionManifest> {\n\t\tif (!this.nlsUrl) {\n\t\t\treturn localizeManifest(\n\t\t\t\tthis.logService,\n\t\t\t\tmanifest,\n\t\t\t\tfallbackTranslations,\n\t\t\t);\n\t\t}\n\t\t// the `package` endpoint returns the translations in a key-value format similar to the package.nls.json file.\n\t\tconst uri = URI.joinPath(this.nlsUrl, extensionId, \"package\");\n\t\ttry {\n\t\t\tconst res =\n\t\t\t\tawait this.extensionResourceLoaderService.readExtensionResource(\n\t\t\t\t\turi,\n\t\t\t\t);\n\t\t\tconst json = JSON.parse(res.toString());\n\t\t\treturn localizeManifest(\n\t\t\t\tthis.logService,\n\t\t\t\tmanifest,\n\t\t\t\tjson,\n\t\t\t\tfallbackTranslations,\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t\treturn localizeManifest(\n\t\t\t\tthis.logService,\n\t\t\t\tmanifest,\n\t\t\t\tfallbackTranslations,\n\t\t\t);\n\t\t}\n\t}\n}\n\nregisterSingleton(\n\tIBuiltinExtensionsScannerService,\n\tBuiltinExtensionsScannerService,\n\tInstantiationType.Delayed,\n);\n"],
  "mappings": "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",
  "names": []
}
