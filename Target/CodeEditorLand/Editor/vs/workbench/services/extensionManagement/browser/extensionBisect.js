var B=Object.defineProperty;var A=Object.getOwnPropertyDescriptor;var v=(n,e,t,o)=>{for(var i=o>1?void 0:o?A(e,t):e,d=n.length-1,r;d>=0;d--)(r=n[d])&&(i=(o?r(e,t,i):r(i))||i);return o&&i&&B(e,t,i),i},u=(n,e)=>(t,o)=>e(t,o,n);import{localize as s,localize2 as x}from"../../../../nls.js";import{Categories as g}from"../../../../platform/action/common/actionCommonCategories.js";import{Action2 as S,MenuId as P,registerAction2 as y}from"../../../../platform/actions/common/actions.js";import{ICommandService as w}from"../../../../platform/commands/common/commands.js";import{ContextKeyExpr as k,IContextKeyService as N,RawContextKey as T}from"../../../../platform/contextkey/common/contextkey.js";import{IDialogService as E}from"../../../../platform/dialogs/common/dialogs.js";import{IExtensionManagementService as R,IGlobalExtensionEnablementService as K}from"../../../../platform/extensionManagement/common/extensionManagement.js";import{areSameExtensions as L}from"../../../../platform/extensionManagement/common/extensionManagementUtil.js";import{ExtensionType as O,isResolverExtension as D}from"../../../../platform/extensions/common/extensions.js";import{InstantiationType as M,registerSingleton as W}from"../../../../platform/instantiation/common/extensions.js";import{createDecorator as H}from"../../../../platform/instantiation/common/instantiation.js";import{ILogService as J}from"../../../../platform/log/common/log.js";import{INotificationService as z,NotificationPriority as F,Severity as I}from"../../../../platform/notification/common/notification.js";import{IProductService as G}from"../../../../platform/product/common/productService.js";import{Registry as q}from"../../../../platform/registry/common/platform.js";import{IStorageService as V,StorageScope as b,StorageTarget as C}from"../../../../platform/storage/common/storage.js";import{Extensions as j}from"../../../common/contributions.js";import{IWorkbenchEnvironmentService as Q}from"../../environment/common/environmentService.js";import{IHostService as _}from"../../host/browser/host.js";import{LifecyclePhase as X}from"../../lifecycle/common/lifecycle.js";import{IWorkbenchExtensionEnablementService as Y}from"../common/extensionManagement.js";const p=H("IExtensionBisectService");class f{constructor(e,t,o,i=(t+o)/2|0){this.extensions=e;this.low=t;this.high=o;this.mid=i}static fromJSON(e){if(e)try{const t=JSON.parse(e);return new f(t.extensions,t.low,t.high,t.mid)}catch{return}}}let c=class{constructor(e,t,o){this._storageService=t;this._envService=o;const i=t.get(c._storageKey,b.APPLICATION);if(this._state=f.fromJSON(i),this._state){const{mid:d,high:r}=this._state;for(let m=0;m<this._state.extensions.length;m++){const l=m>=d&&m<r;this._disabled.set(this._state.extensions[m],l)}e.warn("extension BISECT active",[...this._disabled])}}static _storageKey="extensionBisectState";_state;_disabled=new Map;get isActive(){return!!this._state}get disabledCount(){return this._state?this._state.high-this._state.mid:-1}isDisabledByBisect(e){return!this._state||D(e.manifest,this._envService.remoteAuthority)||this._isEnabledInEnv(e)?!1:this._disabled.get(e.identifier.id)??!1}_isEnabledInEnv(e){return Array.isArray(this._envService.enableExtensions)&&this._envService.enableExtensions.some(t=>L({id:t},e.identifier))}async start(e){if(this._state)throw new Error("invalid state");const t=e.map(i=>i.identifier.id),o=new f(t,0,t.length,0);this._storageService.store(c._storageKey,JSON.stringify(o),b.APPLICATION,C.MACHINE),await this._storageService.flush()}async next(e){if(!this._state)throw new Error("invalid state");if(e&&this._state.mid===0&&this._state.high===this._state.extensions.length)return{bad:!0,id:""};if(this._state.low===this._state.high-1)return await this.reset(),{id:this._state.extensions[this._state.low],bad:e};const t=new f(this._state.extensions,e?this._state.low:this._state.mid,e?this._state.mid:this._state.high);this._storageService.store(c._storageKey,JSON.stringify(t),b.APPLICATION,C.MACHINE),await this._storageService.flush()}async reset(){this._storageService.remove(c._storageKey,b.APPLICATION),await this._storageService.flush()}};c=v([u(0,J),u(1,V),u(2,Q)],c),W(p,c,M.Delayed);let a=class{constructor(e,t,o,i){this._extensionBisectService=t;this._notificationService=o;this._commandService=i;t.isActive&&(a.ctxIsBisectActive.bindTo(e).set(!0),this._showBisectPrompt())}static ctxIsBisectActive=new T("isExtensionBisectActive",!1);_showBisectPrompt(){const e={label:s("I cannot reproduce","I can't reproduce"),run:()=>this._commandService.executeCommand("extension.bisect.next",!1)},t={label:s("This is Bad","I can reproduce"),run:()=>this._commandService.executeCommand("extension.bisect.next",!0)},o={label:"Stop Bisect",run:()=>this._commandService.executeCommand("extension.bisect.stop")},i=this._extensionBisectService.disabledCount===1?s("bisect.singular","Extension Bisect is active and has disabled 1 extension. Check if you can still reproduce the problem and proceed by selecting from these options."):s("bisect.plural","Extension Bisect is active and has disabled {0} extensions. Check if you can still reproduce the problem and proceed by selecting from these options.",this._extensionBisectService.disabledCount);this._notificationService.prompt(I.Info,i,[e,t,o],{sticky:!0,priority:F.URGENT})}};a=v([u(0,N),u(1,p),u(2,z),u(3,w)],a),q.as(j.Workbench).registerWorkbenchContribution(a,X.Restored),y(class extends S{constructor(){super({id:"extension.bisect.start",title:x("title.start","Start Extension Bisect"),category:g.Help,f1:!0,precondition:a.ctxIsBisectActive.negate(),menu:{id:P.ViewContainerTitle,when:k.equals("viewContainer","workbench.view.extensions"),group:"2_enablement",order:4}})}async run(n){const e=n.get(E),t=n.get(_),o=n.get(R),i=n.get(Y),d=n.get(p),r=(await o.getInstalled(O.User)).filter(l=>i.isEnabled(l));(await e.confirm({message:s("msg.start","Extension Bisect"),detail:s("detail.start","Extension Bisect will use binary search to find an extension that causes a problem. During the process the window reloads repeatedly (~{0} times). Each time you must confirm if you are still seeing problems.",2+Math.log2(r.length)|0),primaryButton:s({key:"msg2",comment:["&& denotes a mnemonic"]},"&&Start Extension Bisect")})).confirmed&&(await d.start(r),t.reload())}}),y(class extends S{constructor(){super({id:"extension.bisect.next",title:x("title.isBad","Continue Extension Bisect"),category:g.Help,f1:!0,precondition:a.ctxIsBisectActive})}async run(n,e){const t=n.get(E),o=n.get(_),i=n.get(p),d=n.get(G),r=n.get(K),m=n.get(w);if(!i.isActive)return;if(e===void 0){const h=await this._checkForBad(t,i);if(h===null)return;e=h}if(e===void 0){await i.reset(),o.reload();return}const l=await i.next(e);if(!l){o.reload();return}if(l.bad)await t.info(s("done.msg","Extension Bisect"),s("done.detail2","Extension Bisect is done but no extension has been identified. This might be a problem with {0}.",d.nameShort));else{const h=await t.confirm({type:I.Info,message:s("done.msg","Extension Bisect"),primaryButton:s({key:"report",comment:["&& denotes a mnemonic"]},"&&Report Issue & Continue"),cancelButton:s("continue","Continue"),detail:s("done.detail","Extension Bisect is done and has identified {0} as the extension causing the problem.",l.id),checkbox:{label:s("done.disbale","Keep this extension disabled"),checked:!0}});h.checkboxChecked&&await r.disableExtension({id:l.id},void 0),h.confirmed&&await m.executeCommand("workbench.action.openIssueReporter",l.id)}await i.reset(),o.reload()}async _checkForBad(n,e){const{result:t}=await n.prompt({type:I.Info,message:s("msg.next","Extension Bisect"),detail:s("bisect","Extension Bisect is active and has disabled {0} extensions. Check if you can still reproduce the problem and proceed by selecting from these options.",e.disabledCount),buttons:[{label:s({key:"next.good",comment:["&& denotes a mnemonic"]},"I ca&&n't reproduce"),run:()=>!1},{label:s({key:"next.bad",comment:["&& denotes a mnemonic"]},"I can &&reproduce"),run:()=>!0},{label:s({key:"next.stop",comment:["&& denotes a mnemonic"]},"&&Stop Bisect"),run:()=>{}}],cancelButton:{label:s({key:"next.cancel",comment:["&& denotes a mnemonic"]},"&&Cancel Bisect"),run:()=>null}});return t}}),y(class extends S{constructor(){super({id:"extension.bisect.stop",title:x("title.stop","Stop Extension Bisect"),category:g.Help,f1:!0,precondition:a.ctxIsBisectActive})}async run(n){const e=n.get(p),t=n.get(_);await e.reset(),t.reload()}});export{p as IExtensionBisectService};
