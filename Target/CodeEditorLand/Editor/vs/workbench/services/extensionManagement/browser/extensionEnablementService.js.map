{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/extensionManagement/browser/extensionEnablementService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from \"../../../../base/common/event.js\";\nimport { Disposable, toDisposable } from \"../../../../base/common/lifecycle.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { StorageManager } from \"../../../../platform/extensionManagement/common/extensionEnablementService.js\";\nimport {\n\tDISABLED_EXTENSIONS_STORAGE_PATH,\n\tENABLED_EXTENSIONS_STORAGE_PATH,\n\ttype IExtensionIdentifier,\n\tIExtensionManagementService,\n\tIGlobalExtensionEnablementService,\n\tInstallOperation,\n} from \"../../../../platform/extensionManagement/common/extensionManagement.js\";\nimport {\n\tBetterMergeId,\n\tareSameExtensions,\n\tgetExtensionDependencies,\n} from \"../../../../platform/extensionManagement/common/extensionManagementUtil.js\";\nimport {\n\ttype IExtension,\n\tisAuthenticationProviderExtension,\n\tisLanguagePackExtension,\n\tisResolverExtension,\n} from \"../../../../platform/extensions/common/extensions.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport {\n\tINotificationService,\n\tNotificationPriority,\n\tSeverity,\n} from \"../../../../platform/notification/common/notification.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n} from \"../../../../platform/storage/common/storage.js\";\nimport { IUserDataSyncEnablementService } from \"../../../../platform/userDataSync/common/userDataSync.js\";\nimport { IUserDataSyncAccountService } from \"../../../../platform/userDataSync/common/userDataSyncAccount.js\";\nimport { isVirtualWorkspace } from \"../../../../platform/workspace/common/virtualWorkspace.js\";\nimport {\n\tIWorkspaceContextService,\n\tWorkbenchState,\n} from \"../../../../platform/workspace/common/workspace.js\";\nimport {\n\tIWorkspaceTrustManagementService,\n\tIWorkspaceTrustRequestService,\n} from \"../../../../platform/workspace/common/workspaceTrust.js\";\nimport { IWorkbenchEnvironmentService } from \"../../environment/common/environmentService.js\";\nimport { IExtensionManifestPropertiesService } from \"../../extensions/common/extensionManifestPropertiesService.js\";\nimport {\n\ttype WebWorkerExtHostConfigValue,\n\twebWorkerExtHostConfig,\n} from \"../../extensions/common/extensions.js\";\nimport { IHostService } from \"../../host/browser/host.js\";\nimport {\n\tILifecycleService,\n\tLifecyclePhase,\n} from \"../../lifecycle/common/lifecycle.js\";\nimport {\n\tEnablementState,\n\tExtensionInstallLocation,\n\ttype IExtensionManagementServer,\n\tIExtensionManagementServerService,\n\tIWorkbenchExtensionEnablementService,\n\tIWorkbenchExtensionManagementService,\n} from \"../common/extensionManagement.js\";\nimport { IExtensionBisectService } from \"./extensionBisect.js\";\n\nconst SOURCE = \"IWorkbenchExtensionEnablementService\";\n\ntype WorkspaceType = { readonly virtual: boolean; readonly trusted: boolean };\n\nexport class ExtensionEnablementService\n\textends Disposable\n\timplements IWorkbenchExtensionEnablementService\n{\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onEnablementChanged = new Emitter<\n\t\treadonly IExtension[]\n\t>();\n\tpublic readonly onEnablementChanged: Event<readonly IExtension[]> =\n\t\tthis._onEnablementChanged.event;\n\n\tprotected readonly extensionsManager: ExtensionsManager;\n\tprivate readonly storageManager: StorageManager;\n\tprivate extensionsDisabledByExtensionDependency: IExtension[] = [];\n\n\tconstructor(\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IGlobalExtensionEnablementService protected readonly globalExtensionEnablementService: IGlobalExtensionEnablementService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IWorkbenchEnvironmentService private readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IExtensionManagementService extensionManagementService: IExtensionManagementService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IExtensionManagementServerService private readonly extensionManagementServerService: IExtensionManagementServerService,\n\t\t@IUserDataSyncEnablementService private readonly userDataSyncEnablementService: IUserDataSyncEnablementService,\n\t\t@IUserDataSyncAccountService private readonly userDataSyncAccountService: IUserDataSyncAccountService,\n\t\t@ILifecycleService private readonly lifecycleService: ILifecycleService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IHostService hostService: IHostService,\n\t\t@IExtensionBisectService private readonly extensionBisectService: IExtensionBisectService,\n\t\t@IWorkspaceTrustManagementService private readonly workspaceTrustManagementService: IWorkspaceTrustManagementService,\n\t\t@IWorkspaceTrustRequestService private readonly workspaceTrustRequestService: IWorkspaceTrustRequestService,\n\t\t@IExtensionManifestPropertiesService private readonly extensionManifestPropertiesService: IExtensionManifestPropertiesService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tthis.storageManager = this._register(new StorageManager(storageService));\n\n\t\tconst uninstallDisposable = this._register(Event.filter(extensionManagementService.onDidUninstallExtension, e => !e.error)(({ identifier }) => this._reset(identifier)));\n\t\tlet isDisposed = false;\n\t\tthis._register(toDisposable(() => isDisposed = true));\n\t\tthis.extensionsManager = this._register(instantiationService.createInstance(ExtensionsManager));\n\t\tthis.extensionsManager.whenInitialized().then(() => {\n\t\t\tif (!isDisposed) {\n\t\t\t\tthis._onDidChangeExtensions([], [], false);\n\t\t\t\tthis._register(this.extensionsManager.onDidChangeExtensions(({ added, removed, isProfileSwitch }) => this._onDidChangeExtensions(added, removed, isProfileSwitch)));\n\t\t\t\tuninstallDisposable.dispose();\n\t\t\t}\n\t\t});\n\n\t\tthis._register(this.globalExtensionEnablementService.onDidChangeEnablement(({ extensions, source }) => this._onDidChangeGloballyDisabledExtensions(extensions, source)));\n\n\t\t// delay notification for extensions disabled until workbench restored\n\t\tif (this.allUserExtensionsDisabled) {\n\t\t\tthis.lifecycleService.when(LifecyclePhase.Eventually).then(() => {\n\t\t\t\tthis.notificationService.prompt(Severity.Info, localize('extensionsDisabled', \"All installed extensions are temporarily disabled.\"), [{\n\t\t\t\t\tlabel: localize('Reload', \"Reload and Enable Extensions\"),\n\t\t\t\t\trun: () => hostService.reload({ disableExtensions: false })\n\t\t\t\t}], {\n\t\t\t\t\tsticky: true,\n\t\t\t\t\tpriority: NotificationPriority.URGENT\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate get hasWorkspace(): boolean {\n\t\treturn this.contextService.getWorkbenchState() !== WorkbenchState.EMPTY;\n\t}\n\n\tprivate get allUserExtensionsDisabled(): boolean {\n\t\treturn this.environmentService.disableExtensions === true;\n\t}\n\n\tgetEnablementState(extension: IExtension): EnablementState {\n\t\treturn this._computeEnablementState(\n\t\t\textension,\n\t\t\tthis.extensionsManager.extensions,\n\t\t\tthis.getWorkspaceType(),\n\t\t);\n\t}\n\n\tgetEnablementStates(\n\t\textensions: IExtension[],\n\t\tworkspaceTypeOverrides: Partial<WorkspaceType> = {},\n\t): EnablementState[] {\n\t\tconst extensionsEnablements = new Map<IExtension, EnablementState>();\n\t\tconst workspaceType = {\n\t\t\t...this.getWorkspaceType(),\n\t\t\t...workspaceTypeOverrides,\n\t\t};\n\t\treturn extensions.map((extension) =>\n\t\t\tthis._computeEnablementState(\n\t\t\t\textension,\n\t\t\t\textensions,\n\t\t\t\tworkspaceType,\n\t\t\t\textensionsEnablements,\n\t\t\t),\n\t\t);\n\t}\n\n\tgetDependenciesEnablementStates(\n\t\textension: IExtension,\n\t): [IExtension, EnablementState][] {\n\t\treturn getExtensionDependencies(\n\t\t\tthis.extensionsManager.extensions,\n\t\t\textension,\n\t\t).map((e) => [e, this.getEnablementState(e)]);\n\t}\n\n\tcanChangeEnablement(extension: IExtension): boolean {\n\t\ttry {\n\t\t\tthis.throwErrorIfCannotChangeEnablement(extension);\n\t\t\treturn true;\n\t\t} catch (error) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tcanChangeWorkspaceEnablement(extension: IExtension): boolean {\n\t\tif (!this.canChangeEnablement(extension)) {\n\t\t\treturn false;\n\t\t}\n\n\t\ttry {\n\t\t\tthis.throwErrorIfCannotChangeWorkspaceEnablement(extension);\n\t\t\treturn true;\n\t\t} catch (error) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate throwErrorIfCannotChangeEnablement(\n\t\textension: IExtension,\n\t\tdonotCheckDependencies?: boolean,\n\t): void {\n\t\tif (isLanguagePackExtension(extension.manifest)) {\n\t\t\tthrow new Error(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"cannot disable language pack extension\",\n\t\t\t\t\t\"Cannot change enablement of {0} extension because it contributes language packs.\",\n\t\t\t\t\textension.manifest.displayName || extension.identifier.id,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\tif (\n\t\t\tthis.userDataSyncEnablementService.isEnabled() &&\n\t\t\tthis.userDataSyncAccountService.account &&\n\t\t\tisAuthenticationProviderExtension(extension.manifest) &&\n\t\t\textension.manifest.contributes!.authentication!.some(\n\t\t\t\t(a) =>\n\t\t\t\t\ta.id ===\n\t\t\t\t\tthis.userDataSyncAccountService.account!\n\t\t\t\t\t\t.authenticationProviderId,\n\t\t\t)\n\t\t) {\n\t\t\tthrow new Error(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"cannot disable auth extension\",\n\t\t\t\t\t\"Cannot change enablement {0} extension because Settings Sync depends on it.\",\n\t\t\t\t\textension.manifest.displayName || extension.identifier.id,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\tif (this._isEnabledInEnv(extension)) {\n\t\t\tthrow new Error(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"cannot change enablement environment\",\n\t\t\t\t\t\"Cannot change enablement of {0} extension because it is enabled in environment\",\n\t\t\t\t\textension.manifest.displayName || extension.identifier.id,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\tthis.throwErrorIfEnablementStateCannotBeChanged(\n\t\t\textension,\n\t\t\tthis.getEnablementState(extension),\n\t\t\tdonotCheckDependencies,\n\t\t);\n\t}\n\n\tprivate throwErrorIfEnablementStateCannotBeChanged(\n\t\textension: IExtension,\n\t\tenablementStateOfExtension: EnablementState,\n\t\tdonotCheckDependencies?: boolean,\n\t): void {\n\t\tswitch (enablementStateOfExtension) {\n\t\t\tcase EnablementState.DisabledByEnvironment:\n\t\t\t\tthrow new Error(\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"cannot change disablement environment\",\n\t\t\t\t\t\t\"Cannot change enablement of {0} extension because it is disabled in environment\",\n\t\t\t\t\t\textension.manifest.displayName ||\n\t\t\t\t\t\t\textension.identifier.id,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\tcase EnablementState.DisabledByVirtualWorkspace:\n\t\t\t\tthrow new Error(\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"cannot change enablement virtual workspace\",\n\t\t\t\t\t\t\"Cannot change enablement of {0} extension because it does not support virtual workspaces\",\n\t\t\t\t\t\textension.manifest.displayName ||\n\t\t\t\t\t\t\textension.identifier.id,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\tcase EnablementState.DisabledByExtensionKind:\n\t\t\t\tthrow new Error(\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"cannot change enablement extension kind\",\n\t\t\t\t\t\t\"Cannot change enablement of {0} extension because of its extension kind\",\n\t\t\t\t\t\textension.manifest.displayName ||\n\t\t\t\t\t\t\textension.identifier.id,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\tcase EnablementState.DisabledByInvalidExtension:\n\t\t\t\tthrow new Error(\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"cannot change invalid extension enablement\",\n\t\t\t\t\t\t\"Cannot change enablement of {0} extension because of it is invalid\",\n\t\t\t\t\t\textension.manifest.displayName ||\n\t\t\t\t\t\t\textension.identifier.id,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\tcase EnablementState.DisabledByExtensionDependency:\n\t\t\t\tif (donotCheckDependencies) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t// Can be changed only when all its dependencies enablements can be changed\n\t\t\t\tfor (const dependency of getExtensionDependencies(\n\t\t\t\t\tthis.extensionsManager.extensions,\n\t\t\t\t\textension,\n\t\t\t\t)) {\n\t\t\t\t\tif (this.isEnabled(dependency)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.throwErrorIfCannotChangeEnablement(\n\t\t\t\t\t\t\tdependency,\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\t\"cannot change enablement dependency\",\n\t\t\t\t\t\t\t\t\"Cannot enable '{0}' extension because it depends on '{1}' extension that cannot be enabled\",\n\t\t\t\t\t\t\t\textension.manifest.displayName ||\n\t\t\t\t\t\t\t\t\textension.identifier.id,\n\t\t\t\t\t\t\t\tdependency.manifest.displayName ||\n\t\t\t\t\t\t\t\t\tdependency.identifier.id,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t}\n\t}\n\n\tprivate throwErrorIfCannotChangeWorkspaceEnablement(\n\t\textension: IExtension,\n\t): void {\n\t\tif (!this.hasWorkspace) {\n\t\t\tthrow new Error(localize(\"noWorkspace\", \"No workspace.\"));\n\t\t}\n\t\tif (isAuthenticationProviderExtension(extension.manifest)) {\n\t\t\tthrow new Error(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"cannot disable auth extension in workspace\",\n\t\t\t\t\t\"Cannot change enablement of {0} extension in workspace because it contributes authentication providers\",\n\t\t\t\t\textension.manifest.displayName || extension.identifier.id,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t}\n\n\tasync setEnablement(\n\t\textensions: IExtension[],\n\t\tnewState: EnablementState,\n\t): Promise<boolean[]> {\n\t\tawait this.extensionsManager.whenInitialized();\n\n\t\tif (\n\t\t\tnewState === EnablementState.EnabledGlobally ||\n\t\t\tnewState === EnablementState.EnabledWorkspace\n\t\t) {\n\t\t\textensions.push(\n\t\t\t\t...this.getExtensionsToEnableRecursively(\n\t\t\t\t\textensions,\n\t\t\t\t\tthis.extensionsManager.extensions,\n\t\t\t\t\tnewState,\n\t\t\t\t\t{ dependencies: true, pack: true },\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\tconst workspace =\n\t\t\tnewState === EnablementState.DisabledWorkspace ||\n\t\t\tnewState === EnablementState.EnabledWorkspace;\n\t\tfor (const extension of extensions) {\n\t\t\tif (workspace) {\n\t\t\t\tthis.throwErrorIfCannotChangeWorkspaceEnablement(extension);\n\t\t\t} else {\n\t\t\t\tthis.throwErrorIfCannotChangeEnablement(extension);\n\t\t\t}\n\t\t}\n\n\t\tconst result: boolean[] = [];\n\t\tfor (const extension of extensions) {\n\t\t\tconst enablementState = this.getEnablementState(extension);\n\t\t\tif (\n\t\t\t\tenablementState ===\n\t\t\t\t\tEnablementState.DisabledByTrustRequirement ||\n\t\t\t\t/* All its disabled dependencies are disabled by Trust Requirement */\n\t\t\t\t(enablementState ===\n\t\t\t\t\tEnablementState.DisabledByExtensionDependency &&\n\t\t\t\t\tthis.getDependenciesEnablementStates(extension).every(\n\t\t\t\t\t\t([, e]) =>\n\t\t\t\t\t\t\tthis.isEnabledEnablementState(e) ||\n\t\t\t\t\t\t\te === EnablementState.DisabledByTrustRequirement,\n\t\t\t\t\t))\n\t\t\t) {\n\t\t\t\tconst trustState =\n\t\t\t\t\tawait this.workspaceTrustRequestService.requestWorkspaceTrust();\n\t\t\t\tresult.push(trustState ?? false);\n\t\t\t} else {\n\t\t\t\tresult.push(\n\t\t\t\t\tawait this._setUserEnablementState(extension, newState),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tconst changedExtensions = extensions.filter(\n\t\t\t(e, index) => result[index],\n\t\t);\n\t\tif (changedExtensions.length) {\n\t\t\tthis._onEnablementChanged.fire(changedExtensions);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate getExtensionsToEnableRecursively(\n\t\textensions: IExtension[],\n\t\tallExtensions: ReadonlyArray<IExtension>,\n\t\tenablementState: EnablementState,\n\t\toptions: { dependencies: boolean; pack: boolean },\n\t\tchecked: IExtension[] = [],\n\t): IExtension[] {\n\t\tif (!options.dependencies && !options.pack) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst toCheck = extensions.filter((e) => checked.indexOf(e) === -1);\n\t\tif (!toCheck.length) {\n\t\t\treturn [];\n\t\t}\n\n\t\tfor (const extension of toCheck) {\n\t\t\tchecked.push(extension);\n\t\t}\n\n\t\tconst extensionsToEnable: IExtension[] = [];\n\t\tfor (const extension of allExtensions) {\n\t\t\t// Extension is already checked\n\t\t\tif (\n\t\t\t\tchecked.some((e) =>\n\t\t\t\t\tareSameExtensions(e.identifier, extension.identifier),\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst enablementStateOfExtension =\n\t\t\t\tthis.getEnablementState(extension);\n\t\t\t// Extension is enabled\n\t\t\tif (this.isEnabledEnablementState(enablementStateOfExtension)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Skip if dependency extension is disabled by extension kind\n\t\t\tif (\n\t\t\t\tenablementStateOfExtension ===\n\t\t\t\tEnablementState.DisabledByExtensionKind\n\t\t\t) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Check if the extension is a dependency or in extension pack\n\t\t\tif (\n\t\t\t\textensions.some(\n\t\t\t\t\t(e) =>\n\t\t\t\t\t\t(options.dependencies &&\n\t\t\t\t\t\t\te.manifest.extensionDependencies?.some((id) =>\n\t\t\t\t\t\t\t\tareSameExtensions({ id }, extension.identifier),\n\t\t\t\t\t\t\t)) ||\n\t\t\t\t\t\t(options.pack &&\n\t\t\t\t\t\t\te.manifest.extensionPack?.some((id) =>\n\t\t\t\t\t\t\t\tareSameExtensions({ id }, extension.identifier),\n\t\t\t\t\t\t\t)),\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tconst index = extensionsToEnable.findIndex((e) =>\n\t\t\t\t\tareSameExtensions(e.identifier, extension.identifier),\n\t\t\t\t);\n\n\t\t\t\t// Extension is not added to the disablement list so add it\n\t\t\t\tif (index === -1) {\n\t\t\t\t\textensionsToEnable.push(extension);\n\t\t\t\t}\n\n\t\t\t\t// Extension is there already in the disablement list.\n\t\t\t\telse {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// Replace only if the enablement state can be changed\n\t\t\t\t\t\tthis.throwErrorIfEnablementStateCannotBeChanged(\n\t\t\t\t\t\t\textension,\n\t\t\t\t\t\t\tenablementStateOfExtension,\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t);\n\t\t\t\t\t\textensionsToEnable.splice(index, 1, extension);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t/*Do not add*/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (extensionsToEnable.length) {\n\t\t\textensionsToEnable.push(\n\t\t\t\t...this.getExtensionsToEnableRecursively(\n\t\t\t\t\textensionsToEnable,\n\t\t\t\t\tallExtensions,\n\t\t\t\t\tenablementState,\n\t\t\t\t\toptions,\n\t\t\t\t\tchecked,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\treturn extensionsToEnable;\n\t}\n\n\tprivate _setUserEnablementState(\n\t\textension: IExtension,\n\t\tnewState: EnablementState,\n\t): Promise<boolean> {\n\t\tconst currentState = this._getUserEnablementState(extension.identifier);\n\n\t\tif (currentState === newState) {\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\tswitch (newState) {\n\t\t\tcase EnablementState.EnabledGlobally:\n\t\t\t\tthis._enableExtension(extension.identifier);\n\t\t\t\tbreak;\n\t\t\tcase EnablementState.DisabledGlobally:\n\t\t\t\tthis._disableExtension(extension.identifier);\n\t\t\t\tbreak;\n\t\t\tcase EnablementState.EnabledWorkspace:\n\t\t\t\tthis._enableExtensionInWorkspace(extension.identifier);\n\t\t\t\tbreak;\n\t\t\tcase EnablementState.DisabledWorkspace:\n\t\t\t\tthis._disableExtensionInWorkspace(extension.identifier);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn Promise.resolve(true);\n\t}\n\n\tisEnabled(extension: IExtension): boolean {\n\t\tconst enablementState = this.getEnablementState(extension);\n\t\treturn this.isEnabledEnablementState(enablementState);\n\t}\n\n\tisEnabledEnablementState(enablementState: EnablementState): boolean {\n\t\treturn (\n\t\t\tenablementState === EnablementState.EnabledByEnvironment ||\n\t\t\tenablementState === EnablementState.EnabledWorkspace ||\n\t\t\tenablementState === EnablementState.EnabledGlobally\n\t\t);\n\t}\n\n\tisDisabledGlobally(extension: IExtension): boolean {\n\t\treturn this._isDisabledGlobally(extension.identifier);\n\t}\n\n\tprivate _computeEnablementState(\n\t\textension: IExtension,\n\t\textensions: ReadonlyArray<IExtension>,\n\t\tworkspaceType: WorkspaceType,\n\t\tcomputedEnablementStates?: Map<IExtension, EnablementState>,\n\t): EnablementState {\n\t\tcomputedEnablementStates =\n\t\t\tcomputedEnablementStates ?? new Map<IExtension, EnablementState>();\n\t\tlet enablementState = computedEnablementStates.get(extension);\n\t\tif (enablementState !== undefined) {\n\t\t\treturn enablementState;\n\t\t}\n\n\t\tenablementState = this._getUserEnablementState(extension.identifier);\n\t\tconst isEnabled = this.isEnabledEnablementState(enablementState);\n\n\t\tif (isEnabled && !extension.isValid) {\n\t\t\tenablementState = EnablementState.DisabledByInvalidExtension;\n\t\t} else if (this.extensionBisectService.isDisabledByBisect(extension)) {\n\t\t\tenablementState = EnablementState.DisabledByEnvironment;\n\t\t} else if (this._isDisabledInEnv(extension)) {\n\t\t\tenablementState = EnablementState.DisabledByEnvironment;\n\t\t} else if (\n\t\t\tthis._isDisabledByVirtualWorkspace(extension, workspaceType)\n\t\t) {\n\t\t\tenablementState = EnablementState.DisabledByVirtualWorkspace;\n\t\t} else if (\n\t\t\tisEnabled &&\n\t\t\tthis._isDisabledByWorkspaceTrust(extension, workspaceType)\n\t\t) {\n\t\t\tenablementState = EnablementState.DisabledByTrustRequirement;\n\t\t} else if (this._isDisabledByExtensionKind(extension)) {\n\t\t\tenablementState = EnablementState.DisabledByExtensionKind;\n\t\t} else if (\n\t\t\tisEnabled &&\n\t\t\tthis._isDisabledByExtensionDependency(\n\t\t\t\textension,\n\t\t\t\textensions,\n\t\t\t\tworkspaceType,\n\t\t\t\tcomputedEnablementStates,\n\t\t\t)\n\t\t) {\n\t\t\tenablementState = EnablementState.DisabledByExtensionDependency;\n\t\t} else if (!isEnabled && this._isEnabledInEnv(extension)) {\n\t\t\tenablementState = EnablementState.EnabledByEnvironment;\n\t\t}\n\n\t\tcomputedEnablementStates.set(extension, enablementState);\n\t\treturn enablementState;\n\t}\n\n\tprivate _isDisabledInEnv(extension: IExtension): boolean {\n\t\tif (this.allUserExtensionsDisabled) {\n\t\t\treturn (\n\t\t\t\t!extension.isBuiltin &&\n\t\t\t\t!isResolverExtension(\n\t\t\t\t\textension.manifest,\n\t\t\t\t\tthis.environmentService.remoteAuthority,\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tconst disabledExtensions = this.environmentService.disableExtensions;\n\t\tif (Array.isArray(disabledExtensions)) {\n\t\t\treturn disabledExtensions.some((id) =>\n\t\t\t\tareSameExtensions({ id }, extension.identifier),\n\t\t\t);\n\t\t}\n\n\t\t// Check if this is the better merge extension which was migrated to a built-in extension\n\t\tif (\n\t\t\tareSameExtensions({ id: BetterMergeId.value }, extension.identifier)\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate _isEnabledInEnv(extension: IExtension): boolean {\n\t\tconst enabledExtensions = this.environmentService.enableExtensions;\n\t\tif (Array.isArray(enabledExtensions)) {\n\t\t\treturn enabledExtensions.some((id) =>\n\t\t\t\tareSameExtensions({ id }, extension.identifier),\n\t\t\t);\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _isDisabledByVirtualWorkspace(\n\t\textension: IExtension,\n\t\tworkspaceType: WorkspaceType,\n\t): boolean {\n\t\t// Not a virtual workspace\n\t\tif (!workspaceType.virtual) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Supports virtual workspace\n\t\tif (\n\t\t\tthis.extensionManifestPropertiesService.getExtensionVirtualWorkspaceSupportType(\n\t\t\t\textension.manifest,\n\t\t\t) !== false\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Web extension from web extension management server\n\t\tif (\n\t\t\tthis.extensionManagementServerService.getExtensionManagementServer(\n\t\t\t\textension,\n\t\t\t) ===\n\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t.webExtensionManagementServer &&\n\t\t\tthis.extensionManifestPropertiesService.canExecuteOnWeb(\n\t\t\t\textension.manifest,\n\t\t\t)\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate _isDisabledByExtensionKind(extension: IExtension): boolean {\n\t\tif (\n\t\t\tthis.extensionManagementServerService\n\t\t\t\t.remoteExtensionManagementServer ||\n\t\t\tthis.extensionManagementServerService.webExtensionManagementServer\n\t\t) {\n\t\t\tconst installLocation =\n\t\t\t\tthis.extensionManagementServerService.getExtensionInstallLocation(\n\t\t\t\t\textension,\n\t\t\t\t);\n\t\t\tfor (const extensionKind of this.extensionManifestPropertiesService.getExtensionKind(\n\t\t\t\textension.manifest,\n\t\t\t)) {\n\t\t\t\tif (extensionKind === \"ui\") {\n\t\t\t\t\tif (installLocation === ExtensionInstallLocation.Local) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (extensionKind === \"workspace\") {\n\t\t\t\t\tif (installLocation === ExtensionInstallLocation.Remote) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (extensionKind === \"web\") {\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.extensionManagementServerService\n\t\t\t\t\t\t\t.webExtensionManagementServer /* web */\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tinstallLocation === ExtensionInstallLocation.Web ||\n\t\t\t\t\t\t\tinstallLocation === ExtensionInstallLocation.Remote\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tinstallLocation === ExtensionInstallLocation.Local\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst enableLocalWebWorker =\n\t\t\t\t\t\t\tthis.configurationService.getValue<WebWorkerExtHostConfigValue>(\n\t\t\t\t\t\t\t\twebWorkerExtHostConfig,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tenableLocalWebWorker === true ||\n\t\t\t\t\t\t\tenableLocalWebWorker === \"auto\"\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// Web extensions are enabled on all configurations\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _isDisabledByWorkspaceTrust(\n\t\textension: IExtension,\n\t\tworkspaceType: WorkspaceType,\n\t): boolean {\n\t\tif (workspaceType.trusted) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.contextService.isInsideWorkspace(extension.location)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn (\n\t\t\tthis.extensionManifestPropertiesService.getExtensionUntrustedWorkspaceSupportType(\n\t\t\t\textension.manifest,\n\t\t\t) === false\n\t\t);\n\t}\n\n\tprivate _isDisabledByExtensionDependency(\n\t\textension: IExtension,\n\t\textensions: ReadonlyArray<IExtension>,\n\t\tworkspaceType: WorkspaceType,\n\t\tcomputedEnablementStates: Map<IExtension, EnablementState>,\n\t): boolean {\n\t\t// Find dependencies from the same server as of the extension\n\t\tconst dependencyExtensions = extension.manifest.extensionDependencies\n\t\t\t? extensions.filter((e) =>\n\t\t\t\t\textension.manifest.extensionDependencies!.some(\n\t\t\t\t\t\t(id) =>\n\t\t\t\t\t\t\tareSameExtensions(e.identifier, { id }) &&\n\t\t\t\t\t\t\tthis.extensionManagementServerService.getExtensionManagementServer(\n\t\t\t\t\t\t\t\te,\n\t\t\t\t\t\t\t) ===\n\t\t\t\t\t\t\t\tthis.extensionManagementServerService.getExtensionManagementServer(\n\t\t\t\t\t\t\t\t\textension,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t)\n\t\t\t: [];\n\n\t\tif (!dependencyExtensions.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst hasEnablementState = computedEnablementStates.has(extension);\n\t\tif (!hasEnablementState) {\n\t\t\t// Placeholder to handle cyclic deps\n\t\t\tcomputedEnablementStates.set(\n\t\t\t\textension,\n\t\t\t\tEnablementState.EnabledGlobally,\n\t\t\t);\n\t\t}\n\t\ttry {\n\t\t\tfor (const dependencyExtension of dependencyExtensions) {\n\t\t\t\tconst enablementState = this._computeEnablementState(\n\t\t\t\t\tdependencyExtension,\n\t\t\t\t\textensions,\n\t\t\t\t\tworkspaceType,\n\t\t\t\t\tcomputedEnablementStates,\n\t\t\t\t);\n\t\t\t\tif (\n\t\t\t\t\t!this.isEnabledEnablementState(enablementState) &&\n\t\t\t\t\tenablementState !== EnablementState.DisabledByExtensionKind\n\t\t\t\t) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} finally {\n\t\t\tif (!hasEnablementState) {\n\t\t\t\t// remove the placeholder\n\t\t\t\tcomputedEnablementStates.delete(extension);\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate _getUserEnablementState(\n\t\tidentifier: IExtensionIdentifier,\n\t): EnablementState {\n\t\tif (this.hasWorkspace) {\n\t\t\tif (\n\t\t\t\tthis._getWorkspaceEnabledExtensions().filter((e) =>\n\t\t\t\t\tareSameExtensions(e, identifier),\n\t\t\t\t)[0]\n\t\t\t) {\n\t\t\t\treturn EnablementState.EnabledWorkspace;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tthis._getWorkspaceDisabledExtensions().filter((e) =>\n\t\t\t\t\tareSameExtensions(e, identifier),\n\t\t\t\t)[0]\n\t\t\t) {\n\t\t\t\treturn EnablementState.DisabledWorkspace;\n\t\t\t}\n\t\t}\n\t\tif (this._isDisabledGlobally(identifier)) {\n\t\t\treturn EnablementState.DisabledGlobally;\n\t\t}\n\t\treturn EnablementState.EnabledGlobally;\n\t}\n\n\tprivate _isDisabledGlobally(identifier: IExtensionIdentifier): boolean {\n\t\treturn this.globalExtensionEnablementService\n\t\t\t.getDisabledExtensions()\n\t\t\t.some((e) => areSameExtensions(e, identifier));\n\t}\n\n\tprivate _enableExtension(\n\t\tidentifier: IExtensionIdentifier,\n\t): Promise<boolean> {\n\t\tthis._removeFromWorkspaceDisabledExtensions(identifier);\n\t\tthis._removeFromWorkspaceEnabledExtensions(identifier);\n\t\treturn this.globalExtensionEnablementService.enableExtension(\n\t\t\tidentifier,\n\t\t\tSOURCE,\n\t\t);\n\t}\n\n\tprivate _disableExtension(\n\t\tidentifier: IExtensionIdentifier,\n\t): Promise<boolean> {\n\t\tthis._removeFromWorkspaceDisabledExtensions(identifier);\n\t\tthis._removeFromWorkspaceEnabledExtensions(identifier);\n\t\treturn this.globalExtensionEnablementService.disableExtension(\n\t\t\tidentifier,\n\t\t\tSOURCE,\n\t\t);\n\t}\n\n\tprivate _enableExtensionInWorkspace(\n\t\tidentifier: IExtensionIdentifier,\n\t): void {\n\t\tthis._removeFromWorkspaceDisabledExtensions(identifier);\n\t\tthis._addToWorkspaceEnabledExtensions(identifier);\n\t}\n\n\tprivate _disableExtensionInWorkspace(\n\t\tidentifier: IExtensionIdentifier,\n\t): void {\n\t\tthis._addToWorkspaceDisabledExtensions(identifier);\n\t\tthis._removeFromWorkspaceEnabledExtensions(identifier);\n\t}\n\n\tprivate _addToWorkspaceDisabledExtensions(\n\t\tidentifier: IExtensionIdentifier,\n\t): Promise<boolean> {\n\t\tif (!this.hasWorkspace) {\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\t\tconst disabledExtensions = this._getWorkspaceDisabledExtensions();\n\t\tif (\n\t\t\tdisabledExtensions.every((e) => !areSameExtensions(e, identifier))\n\t\t) {\n\t\t\tdisabledExtensions.push(identifier);\n\t\t\tthis._setDisabledExtensions(disabledExtensions);\n\t\t\treturn Promise.resolve(true);\n\t\t}\n\t\treturn Promise.resolve(false);\n\t}\n\n\tprivate async _removeFromWorkspaceDisabledExtensions(\n\t\tidentifier: IExtensionIdentifier,\n\t): Promise<boolean> {\n\t\tif (!this.hasWorkspace) {\n\t\t\treturn false;\n\t\t}\n\t\tconst disabledExtensions = this._getWorkspaceDisabledExtensions();\n\t\tfor (let index = 0; index < disabledExtensions.length; index++) {\n\t\t\tconst disabledExtension = disabledExtensions[index];\n\t\t\tif (areSameExtensions(disabledExtension, identifier)) {\n\t\t\t\tdisabledExtensions.splice(index, 1);\n\t\t\t\tthis._setDisabledExtensions(disabledExtensions);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _addToWorkspaceEnabledExtensions(\n\t\tidentifier: IExtensionIdentifier,\n\t): boolean {\n\t\tif (!this.hasWorkspace) {\n\t\t\treturn false;\n\t\t}\n\t\tconst enabledExtensions = this._getWorkspaceEnabledExtensions();\n\t\tif (enabledExtensions.every((e) => !areSameExtensions(e, identifier))) {\n\t\t\tenabledExtensions.push(identifier);\n\t\t\tthis._setEnabledExtensions(enabledExtensions);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _removeFromWorkspaceEnabledExtensions(\n\t\tidentifier: IExtensionIdentifier,\n\t): boolean {\n\t\tif (!this.hasWorkspace) {\n\t\t\treturn false;\n\t\t}\n\t\tconst enabledExtensions = this._getWorkspaceEnabledExtensions();\n\t\tfor (let index = 0; index < enabledExtensions.length; index++) {\n\t\t\tconst disabledExtension = enabledExtensions[index];\n\t\t\tif (areSameExtensions(disabledExtension, identifier)) {\n\t\t\t\tenabledExtensions.splice(index, 1);\n\t\t\t\tthis._setEnabledExtensions(enabledExtensions);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _getWorkspaceEnabledExtensions(): IExtensionIdentifier[] {\n\t\treturn this._getExtensions(ENABLED_EXTENSIONS_STORAGE_PATH);\n\t}\n\n\tprivate _setEnabledExtensions(\n\t\tenabledExtensions: IExtensionIdentifier[],\n\t): void {\n\t\tthis._setExtensions(ENABLED_EXTENSIONS_STORAGE_PATH, enabledExtensions);\n\t}\n\n\tprotected _getWorkspaceDisabledExtensions(): IExtensionIdentifier[] {\n\t\treturn this._getExtensions(DISABLED_EXTENSIONS_STORAGE_PATH);\n\t}\n\n\tprivate _setDisabledExtensions(\n\t\tdisabledExtensions: IExtensionIdentifier[],\n\t): void {\n\t\tthis._setExtensions(\n\t\t\tDISABLED_EXTENSIONS_STORAGE_PATH,\n\t\t\tdisabledExtensions,\n\t\t);\n\t}\n\n\tprivate _getExtensions(storageId: string): IExtensionIdentifier[] {\n\t\tif (!this.hasWorkspace) {\n\t\t\treturn [];\n\t\t}\n\t\treturn this.storageManager.get(storageId, StorageScope.WORKSPACE);\n\t}\n\n\tprivate _setExtensions(\n\t\tstorageId: string,\n\t\textensions: IExtensionIdentifier[],\n\t): void {\n\t\tthis.storageManager.set(storageId, extensions, StorageScope.WORKSPACE);\n\t}\n\n\tprivate async _onDidChangeGloballyDisabledExtensions(\n\t\textensionIdentifiers: ReadonlyArray<IExtensionIdentifier>,\n\t\tsource?: string,\n\t): Promise<void> {\n\t\tif (source !== SOURCE) {\n\t\t\tawait this.extensionsManager.whenInitialized();\n\t\t\tconst extensions = this.extensionsManager.extensions.filter(\n\t\t\t\t(installedExtension) =>\n\t\t\t\t\textensionIdentifiers.some((identifier) =>\n\t\t\t\t\t\tareSameExtensions(\n\t\t\t\t\t\t\tidentifier,\n\t\t\t\t\t\t\tinstalledExtension.identifier,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t);\n\t\t\tthis._onEnablementChanged.fire(extensions);\n\t\t}\n\t}\n\n\tprivate _onDidChangeExtensions(\n\t\tadded: ReadonlyArray<IExtension>,\n\t\tremoved: ReadonlyArray<IExtension>,\n\t\tisProfileSwitch: boolean,\n\t): void {\n\t\tconst changedExtensions: IExtension[] = added.filter(\n\t\t\t(e) => !this.isEnabledEnablementState(this.getEnablementState(e)),\n\t\t);\n\t\tconst existingExtensionsDisabledByExtensionDependency =\n\t\t\tthis.extensionsDisabledByExtensionDependency;\n\t\tthis.extensionsDisabledByExtensionDependency =\n\t\t\tthis.extensionsManager.extensions.filter(\n\t\t\t\t(extension) =>\n\t\t\t\t\tthis.getEnablementState(extension) ===\n\t\t\t\t\tEnablementState.DisabledByExtensionDependency,\n\t\t\t);\n\t\tfor (const extension of existingExtensionsDisabledByExtensionDependency) {\n\t\t\tif (\n\t\t\t\tthis.extensionsDisabledByExtensionDependency.every(\n\t\t\t\t\t(e) =>\n\t\t\t\t\t\t!areSameExtensions(e.identifier, extension.identifier),\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tchangedExtensions.push(extension);\n\t\t\t}\n\t\t}\n\t\tfor (const extension of this.extensionsDisabledByExtensionDependency) {\n\t\t\tif (\n\t\t\t\texistingExtensionsDisabledByExtensionDependency.every(\n\t\t\t\t\t(e) =>\n\t\t\t\t\t\t!areSameExtensions(e.identifier, extension.identifier),\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tchangedExtensions.push(extension);\n\t\t\t}\n\t\t}\n\t\tif (changedExtensions.length) {\n\t\t\tthis._onEnablementChanged.fire(changedExtensions);\n\t\t}\n\t\tif (!isProfileSwitch) {\n\t\t\tremoved.forEach(({ identifier }) => this._reset(identifier));\n\t\t}\n\t}\n\n\tpublic async updateExtensionsEnablementsWhenWorkspaceTrustChanges(): Promise<void> {\n\t\tawait this.extensionsManager.whenInitialized();\n\n\t\tconst computeEnablementStates = (\n\t\t\tworkspaceType: WorkspaceType,\n\t\t): [IExtension, EnablementState][] => {\n\t\t\tconst extensionsEnablements = new Map<\n\t\t\t\tIExtension,\n\t\t\t\tEnablementState\n\t\t\t>();\n\t\t\treturn this.extensionsManager.extensions.map((extension) => [\n\t\t\t\textension,\n\t\t\t\tthis._computeEnablementState(\n\t\t\t\t\textension,\n\t\t\t\t\tthis.extensionsManager.extensions,\n\t\t\t\t\tworkspaceType,\n\t\t\t\t\textensionsEnablements,\n\t\t\t\t),\n\t\t\t]);\n\t\t};\n\n\t\tconst workspaceType = this.getWorkspaceType();\n\t\tconst enablementStatesWithTrustedWorkspace = computeEnablementStates({\n\t\t\t...workspaceType,\n\t\t\ttrusted: true,\n\t\t});\n\t\tconst enablementStatesWithUntrustedWorkspace = computeEnablementStates({\n\t\t\t...workspaceType,\n\t\t\ttrusted: false,\n\t\t});\n\t\tconst enablementChangedExtensionsBecauseOfTrust =\n\t\t\tenablementStatesWithTrustedWorkspace\n\t\t\t\t.filter(\n\t\t\t\t\t([, enablementState], index) =>\n\t\t\t\t\t\tenablementState !==\n\t\t\t\t\t\tenablementStatesWithUntrustedWorkspace[index][1],\n\t\t\t\t)\n\t\t\t\t.map(([extension]) => extension);\n\n\t\tif (enablementChangedExtensionsBecauseOfTrust.length) {\n\t\t\tthis._onEnablementChanged.fire(\n\t\t\t\tenablementChangedExtensionsBecauseOfTrust,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate getWorkspaceType(): WorkspaceType {\n\t\treturn {\n\t\t\ttrusted: this.workspaceTrustManagementService.isWorkspaceTrusted(),\n\t\t\tvirtual: isVirtualWorkspace(this.contextService.getWorkspace()),\n\t\t};\n\t}\n\n\tprivate _reset(extension: IExtensionIdentifier) {\n\t\tthis._removeFromWorkspaceDisabledExtensions(extension);\n\t\tthis._removeFromWorkspaceEnabledExtensions(extension);\n\t\tthis.globalExtensionEnablementService.enableExtension(extension);\n\t}\n}\n\nclass ExtensionsManager extends Disposable {\n\tprivate _extensions: IExtension[] = [];\n\tget extensions(): readonly IExtension[] {\n\t\treturn this._extensions;\n\t}\n\n\tprivate _onDidChangeExtensions = this._register(\n\t\tnew Emitter<{\n\t\t\tadded: readonly IExtension[];\n\t\t\tremoved: readonly IExtension[];\n\t\t\treadonly isProfileSwitch: boolean;\n\t\t}>(),\n\t);\n\treadonly onDidChangeExtensions = this._onDidChangeExtensions.event;\n\n\tprivate readonly initializePromise;\n\tprivate disposed = false;\n\n\tconstructor(\n\t\t@IWorkbenchExtensionManagementService private readonly extensionManagementService: IWorkbenchExtensionManagementService,\n\t\t@IExtensionManagementServerService private readonly extensionManagementServerService: IExtensionManagementServerService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis._register(toDisposable(() => this.disposed = true));\n\t\tthis.initializePromise = this.initialize();\n\t}\n\n\twhenInitialized(): Promise<void> {\n\t\treturn this.initializePromise;\n\t}\n\n\tprivate async initialize(): Promise<void> {\n\t\ttry {\n\t\t\tthis._extensions = [\n\t\t\t\t...(await this.extensionManagementService.getInstalled()),\n\t\t\t\t...(await this.extensionManagementService.getInstalledWorkspaceExtensions(\n\t\t\t\t\ttrue,\n\t\t\t\t)),\n\t\t\t];\n\t\t\tif (this.disposed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._onDidChangeExtensions.fire({\n\t\t\t\tadded: this.extensions,\n\t\t\t\tremoved: [],\n\t\t\t\tisProfileSwitch: false,\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t}\n\t\tthis._register(\n\t\t\tthis.extensionManagementService.onDidInstallExtensions((e) =>\n\t\t\t\tthis.updateExtensions(\n\t\t\t\t\te.reduce<IExtension[]>((result, { local, operation }) => {\n\t\t\t\t\t\tif (local && operation !== InstallOperation.Migrate) {\n\t\t\t\t\t\t\tresult.push(local);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}, []),\n\t\t\t\t\t[],\n\t\t\t\t\tundefined,\n\t\t\t\t\tfalse,\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tEvent.filter(\n\t\t\t\tthis.extensionManagementService.onDidUninstallExtension,\n\t\t\t\t(e) => !e.error,\n\t\t\t)((e) =>\n\t\t\t\tthis.updateExtensions([], [e.identifier], e.server, false),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.extensionManagementService.onDidChangeProfile(\n\t\t\t\t({ added, removed, server }) => {\n\t\t\t\t\tthis.updateExtensions(\n\t\t\t\t\t\tadded,\n\t\t\t\t\t\tremoved.map(({ identifier }) => identifier),\n\t\t\t\t\t\tserver,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate updateExtensions(\n\t\tadded: IExtension[],\n\t\tidentifiers: IExtensionIdentifier[],\n\t\tserver: IExtensionManagementServer | undefined,\n\t\tisProfileSwitch: boolean,\n\t): void {\n\t\tif (added.length) {\n\t\t\tfor (const extension of added) {\n\t\t\t\tconst extensionServer =\n\t\t\t\t\tthis.extensionManagementServerService.getExtensionManagementServer(\n\t\t\t\t\t\textension,\n\t\t\t\t\t);\n\t\t\t\tconst index = this._extensions.findIndex(\n\t\t\t\t\t(e) =>\n\t\t\t\t\t\tareSameExtensions(e.identifier, extension.identifier) &&\n\t\t\t\t\t\tthis.extensionManagementServerService.getExtensionManagementServer(\n\t\t\t\t\t\t\te,\n\t\t\t\t\t\t) === extensionServer,\n\t\t\t\t);\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tthis._extensions.splice(index, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._extensions.push(...added);\n\t\t}\n\t\tconst removed: IExtension[] = [];\n\t\tfor (const identifier of identifiers) {\n\t\t\tconst index = this._extensions.findIndex(\n\t\t\t\t(e) =>\n\t\t\t\t\tareSameExtensions(e.identifier, identifier) &&\n\t\t\t\t\tthis.extensionManagementServerService.getExtensionManagementServer(\n\t\t\t\t\t\te,\n\t\t\t\t\t) === server,\n\t\t\t);\n\t\t\tif (index !== -1) {\n\t\t\t\tremoved.push(...this._extensions.splice(index, 1));\n\t\t\t}\n\t\t}\n\t\tif (added.length || removed.length) {\n\t\t\tthis._onDidChangeExtensions.fire({\n\t\t\t\tadded,\n\t\t\t\tremoved,\n\t\t\t\tisProfileSwitch,\n\t\t\t});\n\t\t}\n\t}\n}\n\nregisterSingleton(\n\tIWorkbenchExtensionEnablementService,\n\tExtensionEnablementService,\n\tInstantiationType.Delayed,\n);\n"],
  "mappings": "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",
  "names": ["workspaceType"]
}
