var L=Object.defineProperty;var O=Object.getOwnPropertyDescriptor;var y=(x,b,e,n)=>{for(var t=n>1?void 0:n?O(b,e):b,i=x.length-1,s;i>=0;i--)(s=x[i])&&(t=(n?s(b,e,t):s(t))||t);return n&&t&&L(b,e,t),t},c=(x,b)=>(e,n)=>b(e,n,x);import{Emitter as D,Event as _}from"../../../../base/common/event.js";import{Disposable as W,toDisposable as M}from"../../../../base/common/lifecycle.js";import{localize as E}from"../../../../nls.js";import{IConfigurationService as z}from"../../../../platform/configuration/common/configuration.js";import{StorageManager as F}from"../../../../platform/extensionManagement/common/extensionEnablementService.js";import{DISABLED_EXTENSIONS_STORAGE_PATH as C,ENABLED_EXTENSIONS_STORAGE_PATH as w,IExtensionManagementService as K,IGlobalExtensionEnablementService as V,InstallOperation as q}from"../../../../platform/extensionManagement/common/extensionManagement.js";import{BetterMergeId as H,areSameExtensions as d,getExtensionDependencies as B}from"../../../../platform/extensionManagement/common/extensionManagementUtil.js";import{isAuthenticationProviderExtension as T,isLanguagePackExtension as X,isResolverExtension as Y}from"../../../../platform/extensions/common/extensions.js";import{InstantiationType as j,registerSingleton as J}from"../../../../platform/instantiation/common/extensions.js";import{IInstantiationService as Q}from"../../../../platform/instantiation/common/instantiation.js";import{ILogService as Z}from"../../../../platform/log/common/log.js";import{INotificationService as $,NotificationPriority as ee,Severity as ne}from"../../../../platform/notification/common/notification.js";import{IStorageService as te,StorageScope as P}from"../../../../platform/storage/common/storage.js";import{IUserDataSyncEnablementService as ie}from"../../../../platform/userDataSync/common/userDataSync.js";import{IUserDataSyncAccountService as se}from"../../../../platform/userDataSync/common/userDataSyncAccount.js";import{isVirtualWorkspace as ae}from"../../../../platform/workspace/common/virtualWorkspace.js";import{IWorkspaceContextService as re,WorkbenchState as oe}from"../../../../platform/workspace/common/workspace.js";import{IWorkspaceTrustManagementService as le,IWorkspaceTrustRequestService as ce}from"../../../../platform/workspace/common/workspaceTrust.js";import{IWorkbenchEnvironmentService as de}from"../../environment/common/environmentService.js";import{IExtensionManifestPropertiesService as Ee}from"../../extensions/common/extensionManifestPropertiesService.js";import{webWorkerExtHostConfig as be}from"../../extensions/common/extensions.js";import{IHostService as he}from"../../host/browser/host.js";import{ILifecycleService as fe,LifecyclePhase as me}from"../../lifecycle/common/lifecycle.js";import{EnablementState as r,ExtensionInstallLocation as v,IExtensionManagementServerService as R,IWorkbenchExtensionEnablementService as pe,IWorkbenchExtensionManagementService as xe}from"../common/extensionManagement.js";import{IExtensionBisectService as ve}from"./extensionBisect.js";const I="IWorkbenchExtensionEnablementService";let u=class extends W{constructor(e,n,t,i,s,a,l,o,f,h,m,A,ue,ge,Se,ye,N){super();this.globalExtensionEnablementService=n;this.contextService=t;this.environmentService=i;this.configurationService=a;this.extensionManagementServerService=l;this.userDataSyncEnablementService=o;this.userDataSyncAccountService=f;this.lifecycleService=h;this.notificationService=m;this.extensionBisectService=ue;this.workspaceTrustManagementService=ge;this.workspaceTrustRequestService=Se;this.extensionManifestPropertiesService=ye;this.storageManager=this._register(new F(e));const G=this._register(_.filter(s.onDidUninstallExtension,p=>!p.error)(({identifier:p})=>this._reset(p)));let k=!1;this._register(M(()=>k=!0)),this.extensionsManager=this._register(N.createInstance(g)),this.extensionsManager.whenInitialized().then(()=>{k||(this._onDidChangeExtensions([],[],!1),this._register(this.extensionsManager.onDidChangeExtensions(({added:p,removed:S,isProfileSwitch:U})=>this._onDidChangeExtensions(p,S,U))),G.dispose())}),this._register(this.globalExtensionEnablementService.onDidChangeEnablement(({extensions:p,source:S})=>this._onDidChangeGloballyDisabledExtensions(p,S))),this.allUserExtensionsDisabled&&this.lifecycleService.when(me.Eventually).then(()=>{this.notificationService.prompt(ne.Info,E("extensionsDisabled","All installed extensions are temporarily disabled."),[{label:E("Reload","Reload and Enable Extensions"),run:()=>A.reload({disableExtensions:!1})}],{sticky:!0,priority:ee.URGENT})})}_onEnablementChanged=new D;onEnablementChanged=this._onEnablementChanged.event;extensionsManager;storageManager;extensionsDisabledByExtensionDependency=[];get hasWorkspace(){return this.contextService.getWorkbenchState()!==oe.EMPTY}get allUserExtensionsDisabled(){return this.environmentService.disableExtensions===!0}getEnablementState(e){return this._computeEnablementState(e,this.extensionsManager.extensions,this.getWorkspaceType())}getEnablementStates(e,n={}){const t=new Map,i={...this.getWorkspaceType(),...n};return e.map(s=>this._computeEnablementState(s,e,i,t))}getDependenciesEnablementStates(e){return B(this.extensionsManager.extensions,e).map(n=>[n,this.getEnablementState(n)])}canChangeEnablement(e){try{return this.throwErrorIfCannotChangeEnablement(e),!0}catch{return!1}}canChangeWorkspaceEnablement(e){if(!this.canChangeEnablement(e))return!1;try{return this.throwErrorIfCannotChangeWorkspaceEnablement(e),!0}catch{return!1}}throwErrorIfCannotChangeEnablement(e,n){if(X(e.manifest))throw new Error(E("cannot disable language pack extension","Cannot change enablement of {0} extension because it contributes language packs.",e.manifest.displayName||e.identifier.id));if(this.userDataSyncEnablementService.isEnabled()&&this.userDataSyncAccountService.account&&T(e.manifest)&&e.manifest.contributes.authentication.some(t=>t.id===this.userDataSyncAccountService.account.authenticationProviderId))throw new Error(E("cannot disable auth extension","Cannot change enablement {0} extension because Settings Sync depends on it.",e.manifest.displayName||e.identifier.id));if(this._isEnabledInEnv(e))throw new Error(E("cannot change enablement environment","Cannot change enablement of {0} extension because it is enabled in environment",e.manifest.displayName||e.identifier.id));this.throwErrorIfEnablementStateCannotBeChanged(e,this.getEnablementState(e),n)}throwErrorIfEnablementStateCannotBeChanged(e,n,t){switch(n){case r.DisabledByEnvironment:throw new Error(E("cannot change disablement environment","Cannot change enablement of {0} extension because it is disabled in environment",e.manifest.displayName||e.identifier.id));case r.DisabledByVirtualWorkspace:throw new Error(E("cannot change enablement virtual workspace","Cannot change enablement of {0} extension because it does not support virtual workspaces",e.manifest.displayName||e.identifier.id));case r.DisabledByExtensionKind:throw new Error(E("cannot change enablement extension kind","Cannot change enablement of {0} extension because of its extension kind",e.manifest.displayName||e.identifier.id));case r.DisabledByInvalidExtension:throw new Error(E("cannot change invalid extension enablement","Cannot change enablement of {0} extension because of it is invalid",e.manifest.displayName||e.identifier.id));case r.DisabledByExtensionDependency:if(t)break;for(const i of B(this.extensionsManager.extensions,e))if(!this.isEnabled(i))try{this.throwErrorIfCannotChangeEnablement(i,!0)}catch{throw new Error(E("cannot change enablement dependency","Cannot enable '{0}' extension because it depends on '{1}' extension that cannot be enabled",e.manifest.displayName||e.identifier.id,i.manifest.displayName||i.identifier.id))}}}throwErrorIfCannotChangeWorkspaceEnablement(e){if(!this.hasWorkspace)throw new Error(E("noWorkspace","No workspace."));if(T(e.manifest))throw new Error(E("cannot disable auth extension in workspace","Cannot change enablement of {0} extension in workspace because it contributes authentication providers",e.manifest.displayName||e.identifier.id))}async setEnablement(e,n){await this.extensionsManager.whenInitialized(),(n===r.EnabledGlobally||n===r.EnabledWorkspace)&&e.push(...this.getExtensionsToEnableRecursively(e,this.extensionsManager.extensions,n,{dependencies:!0,pack:!0}));const t=n===r.DisabledWorkspace||n===r.EnabledWorkspace;for(const a of e)t?this.throwErrorIfCannotChangeWorkspaceEnablement(a):this.throwErrorIfCannotChangeEnablement(a);const i=[];for(const a of e){const l=this.getEnablementState(a);if(l===r.DisabledByTrustRequirement||l===r.DisabledByExtensionDependency&&this.getDependenciesEnablementStates(a).every(([,o])=>this.isEnabledEnablementState(o)||o===r.DisabledByTrustRequirement)){const o=await this.workspaceTrustRequestService.requestWorkspaceTrust();i.push(o??!1)}else i.push(await this._setUserEnablementState(a,n))}const s=e.filter((a,l)=>i[l]);return s.length&&this._onEnablementChanged.fire(s),i}getExtensionsToEnableRecursively(e,n,t,i,s=[]){if(!i.dependencies&&!i.pack)return[];const a=e.filter(o=>s.indexOf(o)===-1);if(!a.length)return[];for(const o of a)s.push(o);const l=[];for(const o of n){if(s.some(h=>d(h.identifier,o.identifier)))continue;const f=this.getEnablementState(o);if(!this.isEnabledEnablementState(f)&&f!==r.DisabledByExtensionKind&&e.some(h=>i.dependencies&&h.manifest.extensionDependencies?.some(m=>d({id:m},o.identifier))||i.pack&&h.manifest.extensionPack?.some(m=>d({id:m},o.identifier)))){const h=l.findIndex(m=>d(m.identifier,o.identifier));if(h===-1)l.push(o);else try{this.throwErrorIfEnablementStateCannotBeChanged(o,f,!0),l.splice(h,1,o)}catch{}}}return l.length&&l.push(...this.getExtensionsToEnableRecursively(l,n,t,i,s)),l}_setUserEnablementState(e,n){if(this._getUserEnablementState(e.identifier)===n)return Promise.resolve(!1);switch(n){case r.EnabledGlobally:this._enableExtension(e.identifier);break;case r.DisabledGlobally:this._disableExtension(e.identifier);break;case r.EnabledWorkspace:this._enableExtensionInWorkspace(e.identifier);break;case r.DisabledWorkspace:this._disableExtensionInWorkspace(e.identifier);break}return Promise.resolve(!0)}isEnabled(e){const n=this.getEnablementState(e);return this.isEnabledEnablementState(n)}isEnabledEnablementState(e){return e===r.EnabledByEnvironment||e===r.EnabledWorkspace||e===r.EnabledGlobally}isDisabledGlobally(e){return this._isDisabledGlobally(e.identifier)}_computeEnablementState(e,n,t,i){i=i??new Map;let s=i.get(e);if(s!==void 0)return s;s=this._getUserEnablementState(e.identifier);const a=this.isEnabledEnablementState(s);return a&&!e.isValid?s=r.DisabledByInvalidExtension:this.extensionBisectService.isDisabledByBisect(e)?s=r.DisabledByEnvironment:this._isDisabledInEnv(e)?s=r.DisabledByEnvironment:this._isDisabledByVirtualWorkspace(e,t)?s=r.DisabledByVirtualWorkspace:a&&this._isDisabledByWorkspaceTrust(e,t)?s=r.DisabledByTrustRequirement:this._isDisabledByExtensionKind(e)?s=r.DisabledByExtensionKind:a&&this._isDisabledByExtensionDependency(e,n,t,i)?s=r.DisabledByExtensionDependency:!a&&this._isEnabledInEnv(e)&&(s=r.EnabledByEnvironment),i.set(e,s),s}_isDisabledInEnv(e){if(this.allUserExtensionsDisabled)return!e.isBuiltin&&!Y(e.manifest,this.environmentService.remoteAuthority);const n=this.environmentService.disableExtensions;return Array.isArray(n)?n.some(t=>d({id:t},e.identifier)):!!d({id:H.value},e.identifier)}_isEnabledInEnv(e){const n=this.environmentService.enableExtensions;return Array.isArray(n)?n.some(t=>d({id:t},e.identifier)):!1}_isDisabledByVirtualWorkspace(e,n){return!(!n.virtual||this.extensionManifestPropertiesService.getExtensionVirtualWorkspaceSupportType(e.manifest)!==!1||this.extensionManagementServerService.getExtensionManagementServer(e)===this.extensionManagementServerService.webExtensionManagementServer&&this.extensionManifestPropertiesService.canExecuteOnWeb(e.manifest))}_isDisabledByExtensionKind(e){if(this.extensionManagementServerService.remoteExtensionManagementServer||this.extensionManagementServerService.webExtensionManagementServer){const n=this.extensionManagementServerService.getExtensionInstallLocation(e);for(const t of this.extensionManifestPropertiesService.getExtensionKind(e.manifest)){if(t==="ui"&&n===v.Local||t==="workspace"&&n===v.Remote)return!1;if(t==="web"){if(this.extensionManagementServerService.webExtensionManagementServer){if(n===v.Web||n===v.Remote)return!1}else if(n===v.Local){const i=this.configurationService.getValue(be);if(i===!0||i==="auto")return!1}}}return!0}return!1}_isDisabledByWorkspaceTrust(e,n){return n.trusted?!1:this.contextService.isInsideWorkspace(e.location)?!0:this.extensionManifestPropertiesService.getExtensionUntrustedWorkspaceSupportType(e.manifest)===!1}_isDisabledByExtensionDependency(e,n,t,i){const s=e.manifest.extensionDependencies?n.filter(l=>e.manifest.extensionDependencies.some(o=>d(l.identifier,{id:o})&&this.extensionManagementServerService.getExtensionManagementServer(l)===this.extensionManagementServerService.getExtensionManagementServer(e))):[];if(!s.length)return!1;const a=i.has(e);a||i.set(e,r.EnabledGlobally);try{for(const l of s){const o=this._computeEnablementState(l,n,t,i);if(!this.isEnabledEnablementState(o)&&o!==r.DisabledByExtensionKind)return!0}}finally{a||i.delete(e)}return!1}_getUserEnablementState(e){if(this.hasWorkspace){if(this._getWorkspaceEnabledExtensions().filter(n=>d(n,e))[0])return r.EnabledWorkspace;if(this._getWorkspaceDisabledExtensions().filter(n=>d(n,e))[0])return r.DisabledWorkspace}return this._isDisabledGlobally(e)?r.DisabledGlobally:r.EnabledGlobally}_isDisabledGlobally(e){return this.globalExtensionEnablementService.getDisabledExtensions().some(n=>d(n,e))}_enableExtension(e){return this._removeFromWorkspaceDisabledExtensions(e),this._removeFromWorkspaceEnabledExtensions(e),this.globalExtensionEnablementService.enableExtension(e,I)}_disableExtension(e){return this._removeFromWorkspaceDisabledExtensions(e),this._removeFromWorkspaceEnabledExtensions(e),this.globalExtensionEnablementService.disableExtension(e,I)}_enableExtensionInWorkspace(e){this._removeFromWorkspaceDisabledExtensions(e),this._addToWorkspaceEnabledExtensions(e)}_disableExtensionInWorkspace(e){this._addToWorkspaceDisabledExtensions(e),this._removeFromWorkspaceEnabledExtensions(e)}_addToWorkspaceDisabledExtensions(e){if(!this.hasWorkspace)return Promise.resolve(!1);const n=this._getWorkspaceDisabledExtensions();return n.every(t=>!d(t,e))?(n.push(e),this._setDisabledExtensions(n),Promise.resolve(!0)):Promise.resolve(!1)}async _removeFromWorkspaceDisabledExtensions(e){if(!this.hasWorkspace)return!1;const n=this._getWorkspaceDisabledExtensions();for(let t=0;t<n.length;t++){const i=n[t];if(d(i,e))return n.splice(t,1),this._setDisabledExtensions(n),!0}return!1}_addToWorkspaceEnabledExtensions(e){if(!this.hasWorkspace)return!1;const n=this._getWorkspaceEnabledExtensions();return n.every(t=>!d(t,e))?(n.push(e),this._setEnabledExtensions(n),!0):!1}_removeFromWorkspaceEnabledExtensions(e){if(!this.hasWorkspace)return!1;const n=this._getWorkspaceEnabledExtensions();for(let t=0;t<n.length;t++){const i=n[t];if(d(i,e))return n.splice(t,1),this._setEnabledExtensions(n),!0}return!1}_getWorkspaceEnabledExtensions(){return this._getExtensions(w)}_setEnabledExtensions(e){this._setExtensions(w,e)}_getWorkspaceDisabledExtensions(){return this._getExtensions(C)}_setDisabledExtensions(e){this._setExtensions(C,e)}_getExtensions(e){return this.hasWorkspace?this.storageManager.get(e,P.WORKSPACE):[]}_setExtensions(e,n){this.storageManager.set(e,n,P.WORKSPACE)}async _onDidChangeGloballyDisabledExtensions(e,n){if(n!==I){await this.extensionsManager.whenInitialized();const t=this.extensionsManager.extensions.filter(i=>e.some(s=>d(s,i.identifier)));this._onEnablementChanged.fire(t)}}_onDidChangeExtensions(e,n,t){const i=e.filter(a=>!this.isEnabledEnablementState(this.getEnablementState(a))),s=this.extensionsDisabledByExtensionDependency;this.extensionsDisabledByExtensionDependency=this.extensionsManager.extensions.filter(a=>this.getEnablementState(a)===r.DisabledByExtensionDependency);for(const a of s)this.extensionsDisabledByExtensionDependency.every(l=>!d(l.identifier,a.identifier))&&i.push(a);for(const a of this.extensionsDisabledByExtensionDependency)s.every(l=>!d(l.identifier,a.identifier))&&i.push(a);i.length&&this._onEnablementChanged.fire(i),t||n.forEach(({identifier:a})=>this._reset(a))}async updateExtensionsEnablementsWhenWorkspaceTrustChanges(){await this.extensionsManager.whenInitialized();const e=a=>{const l=new Map;return this.extensionsManager.extensions.map(o=>[o,this._computeEnablementState(o,this.extensionsManager.extensions,a,l)])},n=this.getWorkspaceType(),t=e({...n,trusted:!0}),i=e({...n,trusted:!1}),s=t.filter(([,a],l)=>a!==i[l][1]).map(([a])=>a);s.length&&this._onEnablementChanged.fire(s)}getWorkspaceType(){return{trusted:this.workspaceTrustManagementService.isWorkspaceTrusted(),virtual:ae(this.contextService.getWorkspace())}}_reset(e){this._removeFromWorkspaceDisabledExtensions(e),this._removeFromWorkspaceEnabledExtensions(e),this.globalExtensionEnablementService.enableExtension(e)}};u=y([c(0,te),c(1,V),c(2,re),c(3,de),c(4,K),c(5,z),c(6,R),c(7,ie),c(8,se),c(9,fe),c(10,$),c(11,he),c(12,ve),c(13,le),c(14,ce),c(15,Ee),c(16,Q)],u);let g=class extends W{constructor(e,n,t){super();this.extensionManagementService=e;this.extensionManagementServerService=n;this.logService=t;this._register(M(()=>this.disposed=!0)),this.initializePromise=this.initialize()}_extensions=[];get extensions(){return this._extensions}_onDidChangeExtensions=this._register(new D);onDidChangeExtensions=this._onDidChangeExtensions.event;initializePromise;disposed=!1;whenInitialized(){return this.initializePromise}async initialize(){try{if(this._extensions=[...await this.extensionManagementService.getInstalled(),...await this.extensionManagementService.getInstalledWorkspaceExtensions(!0)],this.disposed)return;this._onDidChangeExtensions.fire({added:this.extensions,removed:[],isProfileSwitch:!1})}catch(e){this.logService.error(e)}this._register(this.extensionManagementService.onDidInstallExtensions(e=>this.updateExtensions(e.reduce((n,{local:t,operation:i})=>(t&&i!==q.Migrate&&n.push(t),n),[]),[],void 0,!1))),this._register(_.filter(this.extensionManagementService.onDidUninstallExtension,e=>!e.error)(e=>this.updateExtensions([],[e.identifier],e.server,!1))),this._register(this.extensionManagementService.onDidChangeProfile(({added:e,removed:n,server:t})=>{this.updateExtensions(e,n.map(({identifier:i})=>i),t,!0)}))}updateExtensions(e,n,t,i){if(e.length){for(const a of e){const l=this.extensionManagementServerService.getExtensionManagementServer(a),o=this._extensions.findIndex(f=>d(f.identifier,a.identifier)&&this.extensionManagementServerService.getExtensionManagementServer(f)===l);o!==-1&&this._extensions.splice(o,1)}this._extensions.push(...e)}const s=[];for(const a of n){const l=this._extensions.findIndex(o=>d(o.identifier,a)&&this.extensionManagementServerService.getExtensionManagementServer(o)===t);l!==-1&&s.push(...this._extensions.splice(l,1))}(e.length||s.length)&&this._onDidChangeExtensions.fire({added:e,removed:s,isProfileSwitch:i})}};g=y([c(0,xe),c(1,R),c(2,Z)],g),J(pe,u,j.Delayed);export{u as ExtensionEnablementService};
