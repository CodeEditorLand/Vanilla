{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/clipboard/browser/clipboardService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from '../../../../nls.js';\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { BrowserClipboardService as BaseBrowserClipboardService } from '../../../../platform/clipboard/browser/clipboardService.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { IWorkbenchEnvironmentService } from '../../environment/common/environmentService.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { ILayoutService } from '../../../../platform/layout/browser/layoutService.js';\nimport { getActiveWindow } from '../../../../base/browser/dom.js';\n\nexport class BrowserClipboardService extends BaseBrowserClipboardService {\n\n\tconstructor(\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IOpenerService private readonly openerService: IOpenerService,\n\t\t@IWorkbenchEnvironmentService private readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@ILogService logService: ILogService,\n\t\t@ILayoutService layoutService: ILayoutService\n\t) {\n\t\tsuper(layoutService, logService);\n\t}\n\n\toverride async writeText(text: string, type?: string): Promise<void> {\n\t\tif (!!this.environmentService.extensionTestsLocationURI && typeof type !== 'string') {\n\t\t\ttype = 'vscode-tests'; // force in-memory clipboard for tests to avoid permission issues\n\t\t}\n\n\t\treturn super.writeText(text, type);\n\t}\n\n\toverride async readText(type?: string): Promise<string> {\n\t\tif (!!this.environmentService.extensionTestsLocationURI && typeof type !== 'string') {\n\t\t\ttype = 'vscode-tests'; // force in-memory clipboard for tests to avoid permission issues\n\t\t}\n\n\t\tif (type) {\n\t\t\treturn super.readText(type);\n\t\t}\n\n\t\ttry {\n\t\t\treturn await getActiveWindow().navigator.clipboard.readText();\n\t\t} catch (error) {\n\t\t\treturn new Promise<string>(resolve => {\n\n\t\t\t\t// Inform user about permissions problem (https://github.com/microsoft/vscode/issues/112089)\n\t\t\t\tconst listener = new DisposableStore();\n\t\t\t\tconst handle = this.notificationService.prompt(\n\t\t\t\t\tSeverity.Error,\n\t\t\t\t\tlocalize('clipboardError', \"Unable to read from the browser's clipboard. Please make sure you have granted access for this website to read from the clipboard.\"),\n\t\t\t\t\t[{\n\t\t\t\t\t\tlabel: localize('retry', \"Retry\"),\n\t\t\t\t\t\trun: async () => {\n\t\t\t\t\t\t\tlistener.dispose();\n\t\t\t\t\t\t\tresolve(await this.readText(type));\n\t\t\t\t\t\t}\n\t\t\t\t\t}, {\n\t\t\t\t\t\tlabel: localize('learnMore', \"Learn More\"),\n\t\t\t\t\t\trun: () => this.openerService.open('https://go.microsoft.com/fwlink/?linkid=2151362')\n\t\t\t\t\t}],\n\t\t\t\t\t{\n\t\t\t\t\t\tsticky: true\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\t// Always resolve the promise once the notification closes\n\t\t\t\tlistener.add(Event.once(handle.onDidClose)(() => resolve('')));\n\t\t\t});\n\t\t}\n\t}\n}\n\nregisterSingleton(IClipboardService, BrowserClipboardService, InstantiationType.Delayed);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,gBAAgB;AACzB,SAAS,mBAAmB,yBAAyB;AACrD,SAAS,yBAAyB;AAClC,SAAS,2BAA2B,mCAAmC;AACvE,SAAS,sBAAsB,gBAAgB;AAC/C,SAAS,sBAAsB;AAC/B,SAAS,aAAa;AACtB,SAAS,uBAAuB;AAChC,SAAS,oCAAoC;AAC7C,SAAS,mBAAmB;AAC5B,SAAS,sBAAsB;AAC/B,SAAS,uBAAuB;AAEzB,IAAM,0BAAN,cAAsC,4BAA4B;AAAA,EAExE,YACwC,qBACN,eACc,oBAClC,YACG,eACf;AACD,UAAM,eAAe,UAAU;AANQ;AACN;AACc;AAAA,EAKhD;AAAA,EA5BD,OAkByE;AAAA;AAAA;AAAA,EAYxE,MAAe,UAAU,MAAc,MAA8B;AACpE,QAAI,CAAC,CAAC,KAAK,mBAAmB,6BAA6B,OAAO,SAAS,UAAU;AACpF,aAAO;AAAA,IACR;AAEA,WAAO,MAAM,UAAU,MAAM,IAAI;AAAA,EAClC;AAAA,EAEA,MAAe,SAAS,MAAgC;AACvD,QAAI,CAAC,CAAC,KAAK,mBAAmB,6BAA6B,OAAO,SAAS,UAAU;AACpF,aAAO;AAAA,IACR;AAEA,QAAI,MAAM;AACT,aAAO,MAAM,SAAS,IAAI;AAAA,IAC3B;AAEA,QAAI;AACH,aAAO,MAAM,gBAAgB,EAAE,UAAU,UAAU,SAAS;AAAA,IAC7D,SAAS,OAAO;AACf,aAAO,IAAI,QAAgB,aAAW;AAGrC,cAAM,WAAW,IAAI,gBAAgB;AACrC,cAAM,SAAS,KAAK,oBAAoB;AAAA,UACvC,SAAS;AAAA,UACT,SAAS,kBAAkB,oIAAoI;AAAA,UAC/J,CAAC;AAAA,YACA,OAAO,SAAS,SAAS,OAAO;AAAA,YAChC,KAAK,mCAAY;AAChB,uBAAS,QAAQ;AACjB,sBAAQ,MAAM,KAAK,SAAS,IAAI,CAAC;AAAA,YAClC,GAHK;AAAA,UAIN,GAAG;AAAA,YACF,OAAO,SAAS,aAAa,YAAY;AAAA,YACzC,KAAK,6BAAM,KAAK,cAAc,KAAK,iDAAiD,GAA/E;AAAA,UACN,CAAC;AAAA,UACD;AAAA,YACC,QAAQ;AAAA,UACT;AAAA,QACD;AAGA,iBAAS,IAAI,MAAM,KAAK,OAAO,UAAU,EAAE,MAAM,QAAQ,EAAE,CAAC,CAAC;AAAA,MAC9D,CAAC;AAAA,IACF;AAAA,EACD;AACD;AA3Da,0BAAN;AAAA,EAGJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAPU;AA6Db,kBAAkB,mBAAmB,yBAAyB,kBAAkB,OAAO;",
  "names": []
}
