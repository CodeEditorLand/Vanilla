{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/userDataProfile/browser/extensionsResource.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport { Codicon } from \"../../../../base/common/codicons.js\";\nimport { DisposableStore } from \"../../../../base/common/lifecycle.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { GlobalExtensionEnablementService } from \"../../../../platform/extensionManagement/common/extensionEnablementService.js\";\nimport {\n\tEXTENSION_INSTALL_SKIP_WALKTHROUGH_CONTEXT,\n\tIExtensionGalleryService,\n\ttype IExtensionIdentifier,\n\tIExtensionManagementService,\n\tIGlobalExtensionEnablementService,\n\ttype ILocalExtension,\n\ttype InstallExtensionInfo,\n} from \"../../../../platform/extensionManagement/common/extensionManagement.js\";\nimport { areSameExtensions } from \"../../../../platform/extensionManagement/common/extensionManagementUtil.js\";\nimport { ExtensionType } from \"../../../../platform/extensions/common/extensions.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ServiceCollection } from \"../../../../platform/instantiation/common/serviceCollection.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { IStorageService } from \"../../../../platform/storage/common/storage.js\";\nimport {\n\ttype IUserDataProfile,\n\tProfileResourceType,\n} from \"../../../../platform/userDataProfile/common/userDataProfile.js\";\nimport { IUserDataProfileStorageService } from \"../../../../platform/userDataProfile/common/userDataProfileStorageService.js\";\nimport {\n\ttype ITreeItemCheckboxState,\n\tTreeItemCollapsibleState,\n} from \"../../../common/views.js\";\nimport {\n\ttype IProfileResource,\n\ttype IProfileResourceChildTreeItem,\n\ttype IProfileResourceInitializer,\n\ttype IProfileResourceTreeItem,\n\tIUserDataProfileService,\n} from \"../common/userDataProfile.js\";\n\ninterface IProfileExtension {\n\tidentifier: IExtensionIdentifier;\n\tdisplayName?: string;\n\tpreRelease?: boolean;\n\tdisabled?: boolean;\n\tversion?: string;\n}\n\nexport class ExtensionsResourceInitializer\n\timplements IProfileResourceInitializer\n{\n\tconstructor(\n\t\t@IUserDataProfileService private readonly userDataProfileService: IUserDataProfileService,\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService,\n\t\t@IGlobalExtensionEnablementService private readonly extensionEnablementService: IGlobalExtensionEnablementService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t}\n\n\tasync initialize(content: string): Promise<void> {\n\t\tconst profileExtensions: IProfileExtension[] = JSON.parse(content);\n\t\tconst installedExtensions =\n\t\t\tawait this.extensionManagementService.getInstalled(\n\t\t\t\tundefined,\n\t\t\t\tthis.userDataProfileService.currentProfile.extensionsResource,\n\t\t\t);\n\t\tconst extensionsToEnableOrDisable: {\n\t\t\textension: IExtensionIdentifier;\n\t\t\tenable: boolean;\n\t\t}[] = [];\n\t\tconst extensionsToInstall: IProfileExtension[] = [];\n\t\tfor (const e of profileExtensions) {\n\t\t\tconst isDisabled = this.extensionEnablementService\n\t\t\t\t.getDisabledExtensions()\n\t\t\t\t.some((disabledExtension) =>\n\t\t\t\t\tareSameExtensions(disabledExtension, e.identifier),\n\t\t\t\t);\n\t\t\tconst installedExtension = installedExtensions.find((installed) =>\n\t\t\t\tareSameExtensions(installed.identifier, e.identifier),\n\t\t\t);\n\t\t\tif (\n\t\t\t\t!installedExtension ||\n\t\t\t\t(!installedExtension.isBuiltin &&\n\t\t\t\t\tinstalledExtension.preRelease !== e.preRelease)\n\t\t\t) {\n\t\t\t\textensionsToInstall.push(e);\n\t\t\t}\n\t\t\tif (isDisabled !== !!e.disabled) {\n\t\t\t\textensionsToEnableOrDisable.push({\n\t\t\t\t\textension: e.identifier,\n\t\t\t\t\tenable: !e.disabled,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tconst extensionsToUninstall: ILocalExtension[] =\n\t\t\tinstalledExtensions.filter(\n\t\t\t\t(extension) =>\n\t\t\t\t\t!extension.isBuiltin &&\n\t\t\t\t\t!profileExtensions.some(({ identifier }) =>\n\t\t\t\t\t\tareSameExtensions(identifier, extension.identifier),\n\t\t\t\t\t),\n\t\t\t);\n\t\tfor (const { extension, enable } of extensionsToEnableOrDisable) {\n\t\t\tif (enable) {\n\t\t\t\tthis.logService.trace(\n\t\t\t\t\t`Initializing Profile: Enabling extension...`,\n\t\t\t\t\textension.id,\n\t\t\t\t);\n\t\t\t\tawait this.extensionEnablementService.enableExtension(\n\t\t\t\t\textension,\n\t\t\t\t);\n\t\t\t\tthis.logService.info(\n\t\t\t\t\t`Initializing Profile: Enabled extension...`,\n\t\t\t\t\textension.id,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.logService.trace(\n\t\t\t\t\t`Initializing Profile: Disabling extension...`,\n\t\t\t\t\textension.id,\n\t\t\t\t);\n\t\t\t\tawait this.extensionEnablementService.disableExtension(\n\t\t\t\t\textension,\n\t\t\t\t);\n\t\t\t\tthis.logService.info(\n\t\t\t\t\t`Initializing Profile: Disabled extension...`,\n\t\t\t\t\textension.id,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tif (extensionsToInstall.length) {\n\t\t\tconst galleryExtensions =\n\t\t\t\tawait this.extensionGalleryService.getExtensions(\n\t\t\t\t\textensionsToInstall.map((e) => ({\n\t\t\t\t\t\t...e.identifier,\n\t\t\t\t\t\tversion: e.version,\n\t\t\t\t\t\thasPreRelease: e.version ? undefined : e.preRelease,\n\t\t\t\t\t})),\n\t\t\t\t\tCancellationToken.None,\n\t\t\t\t);\n\t\t\tawait Promise.all(\n\t\t\t\textensionsToInstall.map(async (e) => {\n\t\t\t\t\tconst extension = galleryExtensions.find(\n\t\t\t\t\t\t(galleryExtension) =>\n\t\t\t\t\t\t\tareSameExtensions(\n\t\t\t\t\t\t\t\tgalleryExtension.identifier,\n\t\t\t\t\t\t\t\te.identifier,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tif (!extension) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\tawait this.extensionManagementService.canInstall(\n\t\t\t\t\t\t\textension,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.logService.trace(\n\t\t\t\t\t\t\t`Initializing Profile: Installing extension...`,\n\t\t\t\t\t\t\textension.identifier.id,\n\t\t\t\t\t\t\textension.version,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tawait this.extensionManagementService.installFromGallery(\n\t\t\t\t\t\t\textension,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tisMachineScoped: false /* set isMachineScoped value to prevent install and sync dialog in web */,\n\t\t\t\t\t\t\t\tdonotIncludePackAndDependencies: true,\n\t\t\t\t\t\t\t\tinstallGivenVersion: !!e.version,\n\t\t\t\t\t\t\t\tinstallPreReleaseVersion: e.preRelease,\n\t\t\t\t\t\t\t\tprofileLocation:\n\t\t\t\t\t\t\t\t\tthis.userDataProfileService.currentProfile\n\t\t\t\t\t\t\t\t\t\t.extensionsResource,\n\t\t\t\t\t\t\t\tcontext: {\n\t\t\t\t\t\t\t\t\t[EXTENSION_INSTALL_SKIP_WALKTHROUGH_CONTEXT]: true,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t\t`Initializing Profile: Installed extension...`,\n\t\t\t\t\t\t\textension.identifier.id,\n\t\t\t\t\t\t\textension.version,\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t\t`Initializing Profile: Skipped installing extension because it cannot be installed.`,\n\t\t\t\t\t\t\textension.identifier.id,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t\tif (extensionsToUninstall.length) {\n\t\t\tawait Promise.all(\n\t\t\t\textensionsToUninstall.map((e) =>\n\t\t\t\t\tthis.extensionManagementService.uninstall(e),\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport class ExtensionsResource implements IProfileResource {\n\tconstructor(\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService,\n\t\t@IUserDataProfileStorageService private readonly userDataProfileStorageService: IUserDataProfileStorageService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t}\n\n\tasync getContent(\n\t\tprofile: IUserDataProfile,\n\t\texclude?: string[],\n\t): Promise<string> {\n\t\tconst extensions = await this.getLocalExtensions(profile);\n\t\treturn this.toContent(extensions, exclude);\n\t}\n\n\ttoContent(extensions: IProfileExtension[], exclude?: string[]): string {\n\t\treturn JSON.stringify(\n\t\t\texclude?.length\n\t\t\t\t? extensions.filter(\n\t\t\t\t\t\t(e) => !exclude.includes(e.identifier.id.toLowerCase()),\n\t\t\t\t\t)\n\t\t\t\t: extensions,\n\t\t);\n\t}\n\n\tasync apply(\n\t\tcontent: string,\n\t\tprofile: IUserDataProfile,\n\t\tprogress?: (message: string) => void,\n\t\ttoken?: CancellationToken,\n\t): Promise<void> {\n\t\treturn this.withProfileScopedServices(\n\t\t\tprofile,\n\t\t\tasync (extensionEnablementService) => {\n\t\t\t\tconst profileExtensions: IProfileExtension[] =\n\t\t\t\t\tawait this.getProfileExtensions(content);\n\t\t\t\tconst installedExtensions =\n\t\t\t\t\tawait this.extensionManagementService.getInstalled(\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tprofile.extensionsResource,\n\t\t\t\t\t);\n\t\t\t\tconst extensionsToEnableOrDisable: {\n\t\t\t\t\textension: IExtensionIdentifier;\n\t\t\t\t\tenable: boolean;\n\t\t\t\t}[] = [];\n\t\t\t\tconst extensionsToInstall: IProfileExtension[] = [];\n\t\t\t\tfor (const e of profileExtensions) {\n\t\t\t\t\tconst isDisabled = extensionEnablementService\n\t\t\t\t\t\t.getDisabledExtensions()\n\t\t\t\t\t\t.some((disabledExtension) =>\n\t\t\t\t\t\t\tareSameExtensions(disabledExtension, e.identifier),\n\t\t\t\t\t\t);\n\t\t\t\t\tconst installedExtension = installedExtensions.find(\n\t\t\t\t\t\t(installed) =>\n\t\t\t\t\t\t\tareSameExtensions(\n\t\t\t\t\t\t\t\tinstalled.identifier,\n\t\t\t\t\t\t\t\te.identifier,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tif (\n\t\t\t\t\t\t!installedExtension ||\n\t\t\t\t\t\t(!installedExtension.isBuiltin &&\n\t\t\t\t\t\t\tinstalledExtension.preRelease !== e.preRelease)\n\t\t\t\t\t) {\n\t\t\t\t\t\textensionsToInstall.push(e);\n\t\t\t\t\t}\n\t\t\t\t\tif (isDisabled !== !!e.disabled) {\n\t\t\t\t\t\textensionsToEnableOrDisable.push({\n\t\t\t\t\t\t\textension: e.identifier,\n\t\t\t\t\t\t\tenable: !e.disabled,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst extensionsToUninstall: ILocalExtension[] =\n\t\t\t\t\tinstalledExtensions.filter(\n\t\t\t\t\t\t(extension) =>\n\t\t\t\t\t\t\t!extension.isBuiltin &&\n\t\t\t\t\t\t\t!profileExtensions.some(({ identifier }) =>\n\t\t\t\t\t\t\t\tareSameExtensions(\n\t\t\t\t\t\t\t\t\tidentifier,\n\t\t\t\t\t\t\t\t\textension.identifier,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t) &&\n\t\t\t\t\t\t\t!extension.isApplicationScoped,\n\t\t\t\t\t);\n\t\t\t\tfor (const {\n\t\t\t\t\textension,\n\t\t\t\t\tenable,\n\t\t\t\t} of extensionsToEnableOrDisable) {\n\t\t\t\t\tif (enable) {\n\t\t\t\t\t\tthis.logService.trace(\n\t\t\t\t\t\t\t`Importing Profile (${profile.name}): Enabling extension...`,\n\t\t\t\t\t\t\textension.id,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tawait extensionEnablementService.enableExtension(\n\t\t\t\t\t\t\textension,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t\t`Importing Profile (${profile.name}): Enabled extension...`,\n\t\t\t\t\t\t\textension.id,\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.logService.trace(\n\t\t\t\t\t\t\t`Importing Profile (${profile.name}): Disabling extension...`,\n\t\t\t\t\t\t\textension.id,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tawait extensionEnablementService.disableExtension(\n\t\t\t\t\t\t\textension,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t\t`Importing Profile (${profile.name}): Disabled extension...`,\n\t\t\t\t\t\t\textension.id,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (extensionsToInstall.length) {\n\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t`Importing Profile (${profile.name}): Started installing extensions.`,\n\t\t\t\t\t);\n\t\t\t\t\tconst galleryExtensions =\n\t\t\t\t\t\tawait this.extensionGalleryService.getExtensions(\n\t\t\t\t\t\t\textensionsToInstall.map((e) => ({\n\t\t\t\t\t\t\t\t...e.identifier,\n\t\t\t\t\t\t\t\tversion: e.version,\n\t\t\t\t\t\t\t\thasPreRelease: e.version\n\t\t\t\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t\t\t\t: e.preRelease,\n\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\tCancellationToken.None,\n\t\t\t\t\t\t);\n\t\t\t\t\tconst installExtensionInfos: InstallExtensionInfo[] = [];\n\t\t\t\t\tawait Promise.all(\n\t\t\t\t\t\textensionsToInstall.map(async (e) => {\n\t\t\t\t\t\t\tconst extension = galleryExtensions.find(\n\t\t\t\t\t\t\t\t(galleryExtension) =>\n\t\t\t\t\t\t\t\t\tareSameExtensions(\n\t\t\t\t\t\t\t\t\t\tgalleryExtension.identifier,\n\t\t\t\t\t\t\t\t\t\te.identifier,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (!extension) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tawait this.extensionManagementService.canInstall(\n\t\t\t\t\t\t\t\t\textension,\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tinstallExtensionInfos.push({\n\t\t\t\t\t\t\t\t\textension,\n\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\tisMachineScoped: false /* set isMachineScoped value to prevent install and sync dialog in web */,\n\t\t\t\t\t\t\t\t\t\tdonotIncludePackAndDependencies: true,\n\t\t\t\t\t\t\t\t\t\tinstallGivenVersion: !!e.version,\n\t\t\t\t\t\t\t\t\t\tinstallPreReleaseVersion: e.preRelease,\n\t\t\t\t\t\t\t\t\t\tprofileLocation:\n\t\t\t\t\t\t\t\t\t\t\tprofile.extensionsResource,\n\t\t\t\t\t\t\t\t\t\tcontext: {\n\t\t\t\t\t\t\t\t\t\t\t[EXTENSION_INSTALL_SKIP_WALKTHROUGH_CONTEXT]: true,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t\t\t\t`Importing Profile (${profile.name}): Skipped installing extension because it cannot be installed.`,\n\t\t\t\t\t\t\t\t\textension.identifier.id,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t\tif (installExtensionInfos.length) {\n\t\t\t\t\t\tif (token) {\n\t\t\t\t\t\t\tfor (const installExtensionInfo of installExtensionInfos) {\n\t\t\t\t\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tprogress?.(\n\t\t\t\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\t\t\t\"installingExtension\",\n\t\t\t\t\t\t\t\t\t\t\"Installing extension {0}...\",\n\t\t\t\t\t\t\t\t\t\tinstallExtensionInfo.extension\n\t\t\t\t\t\t\t\t\t\t\t.displayName ??\n\t\t\t\t\t\t\t\t\t\t\tinstallExtensionInfo.extension\n\t\t\t\t\t\t\t\t\t\t\t\t.identifier.id,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tawait this.extensionManagementService.installFromGallery(\n\t\t\t\t\t\t\t\t\tinstallExtensionInfo.extension,\n\t\t\t\t\t\t\t\t\tinstallExtensionInfo.options,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tawait this.extensionManagementService.installGalleryExtensions(\n\t\t\t\t\t\t\t\tinstallExtensionInfos,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t`Importing Profile (${profile.name}): Finished installing extensions.`,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (extensionsToUninstall.length) {\n\t\t\t\t\tawait Promise.all(\n\t\t\t\t\t\textensionsToUninstall.map((e) =>\n\t\t\t\t\t\t\tthis.extensionManagementService.uninstall(e),\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\t}\n\n\tasync copy(\n\t\tfrom: IUserDataProfile,\n\t\tto: IUserDataProfile,\n\t\tdisableExtensions: boolean,\n\t): Promise<void> {\n\t\tawait this.extensionManagementService.copyExtensions(\n\t\t\tfrom.extensionsResource,\n\t\t\tto.extensionsResource,\n\t\t);\n\t\tconst extensionsToDisable = await this.withProfileScopedServices(\n\t\t\tfrom,\n\t\t\tasync (extensionEnablementService) =>\n\t\t\t\textensionEnablementService.getDisabledExtensions(),\n\t\t);\n\t\tif (disableExtensions) {\n\t\t\tconst extensions =\n\t\t\t\tawait this.extensionManagementService.getInstalled(\n\t\t\t\t\tExtensionType.User,\n\t\t\t\t\tto.extensionsResource,\n\t\t\t\t);\n\t\t\tfor (const extension of extensions) {\n\t\t\t\textensionsToDisable.push(extension.identifier);\n\t\t\t}\n\t\t}\n\t\tawait this.withProfileScopedServices(\n\t\t\tto,\n\t\t\tasync (extensionEnablementService) =>\n\t\t\t\tPromise.all(\n\t\t\t\t\textensionsToDisable.map((extension) =>\n\t\t\t\t\t\textensionEnablementService.disableExtension(extension),\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t);\n\t}\n\n\tasync getLocalExtensions(\n\t\tprofile: IUserDataProfile,\n\t): Promise<IProfileExtension[]> {\n\t\treturn this.withProfileScopedServices(\n\t\t\tprofile,\n\t\t\tasync (extensionEnablementService) => {\n\t\t\t\tconst result = new Map<\n\t\t\t\t\tstring,\n\t\t\t\t\tIProfileExtension & { displayName?: string }\n\t\t\t\t>();\n\t\t\t\tconst installedExtensions =\n\t\t\t\t\tawait this.extensionManagementService.getInstalled(\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tprofile.extensionsResource,\n\t\t\t\t\t);\n\t\t\t\tconst disabledExtensions =\n\t\t\t\t\textensionEnablementService.getDisabledExtensions();\n\t\t\t\tfor (const extension of installedExtensions) {\n\t\t\t\t\tconst { identifier, preRelease } = extension;\n\t\t\t\t\tconst disabled = disabledExtensions.some(\n\t\t\t\t\t\t(disabledExtension) =>\n\t\t\t\t\t\t\tareSameExtensions(disabledExtension, identifier),\n\t\t\t\t\t);\n\t\t\t\t\tif (extension.isBuiltin && !disabled) {\n\t\t\t\t\t\t// skip enabled builtin extensions\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (!extension.isBuiltin) {\n\t\t\t\t\t\tif (!extension.identifier.uuid) {\n\t\t\t\t\t\t\t// skip user extensions without uuid\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst existing = result.get(identifier.id.toLowerCase());\n\t\t\t\t\tif (existing?.disabled) {\n\t\t\t\t\t\t// Remove the duplicate disabled extension\n\t\t\t\t\t\tresult.delete(identifier.id.toLowerCase());\n\t\t\t\t\t}\n\t\t\t\t\tconst profileExtension: IProfileExtension = {\n\t\t\t\t\t\tidentifier,\n\t\t\t\t\t\tdisplayName: extension.manifest.displayName,\n\t\t\t\t\t};\n\t\t\t\t\tif (disabled) {\n\t\t\t\t\t\tprofileExtension.disabled = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!extension.isBuiltin && extension.pinned) {\n\t\t\t\t\t\tprofileExtension.version = extension.manifest.version;\n\t\t\t\t\t}\n\t\t\t\t\tif (!profileExtension.version && preRelease) {\n\t\t\t\t\t\tprofileExtension.preRelease = true;\n\t\t\t\t\t}\n\t\t\t\t\tresult.set(\n\t\t\t\t\t\tprofileExtension.identifier.id.toLowerCase(),\n\t\t\t\t\t\tprofileExtension,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn [...result.values()];\n\t\t\t},\n\t\t);\n\t}\n\n\tasync getProfileExtensions(content: string): Promise<IProfileExtension[]> {\n\t\treturn JSON.parse(content);\n\t}\n\n\tprivate async withProfileScopedServices<T>(\n\t\tprofile: IUserDataProfile,\n\t\tfn: (\n\t\t\textensionEnablementService: IGlobalExtensionEnablementService,\n\t\t) => Promise<T>,\n\t): Promise<T> {\n\t\treturn this.userDataProfileStorageService.withProfileScopedStorageService(\n\t\t\tprofile,\n\t\t\tasync (storageService) => {\n\t\t\t\tconst disposables = new DisposableStore();\n\t\t\t\tconst instantiationService = disposables.add(\n\t\t\t\t\tthis.instantiationService.createChild(\n\t\t\t\t\t\tnew ServiceCollection([\n\t\t\t\t\t\t\tIStorageService,\n\t\t\t\t\t\t\tstorageService,\n\t\t\t\t\t\t]),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tconst extensionEnablementService = disposables.add(\n\t\t\t\t\tinstantiationService.createInstance(\n\t\t\t\t\t\tGlobalExtensionEnablementService,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\ttry {\n\t\t\t\t\treturn await fn(extensionEnablementService);\n\t\t\t\t} finally {\n\t\t\t\t\tdisposables.dispose();\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\t}\n}\n\nexport abstract class ExtensionsResourceTreeItem\n\timplements IProfileResourceTreeItem\n{\n\treadonly type = ProfileResourceType.Extensions;\n\treadonly handle = ProfileResourceType.Extensions;\n\treadonly label = { label: localize(\"extensions\", \"Extensions\") };\n\treadonly collapsibleState = TreeItemCollapsibleState.Expanded;\n\tcontextValue = ProfileResourceType.Extensions;\n\tcheckbox: ITreeItemCheckboxState | undefined;\n\n\tprotected readonly excludedExtensions = new Set<string>();\n\n\tasync getChildren(): Promise<IProfileResourceChildTreeItem[]> {\n\t\tconst extensions = (await this.getExtensions()).sort((a, b) =>\n\t\t\t(a.displayName ?? a.identifier.id).localeCompare(\n\t\t\t\tb.displayName ?? b.identifier.id,\n\t\t\t),\n\t\t);\n\t\tconst that = this;\n\t\treturn extensions.map<IProfileResourceChildTreeItem>((e) => ({\n\t\t\thandle: e.identifier.id.toLowerCase(),\n\t\t\tparent: this,\n\t\t\tlabel: { label: e.displayName || e.identifier.id },\n\t\t\tdescription: e.disabled\n\t\t\t\t? localize(\"disabled\", \"Disabled\")\n\t\t\t\t: undefined,\n\t\t\tcollapsibleState: TreeItemCollapsibleState.None,\n\t\t\tcheckbox: that.checkbox\n\t\t\t\t? {\n\t\t\t\t\t\tget isChecked() {\n\t\t\t\t\t\t\treturn !that.excludedExtensions.has(\n\t\t\t\t\t\t\t\te.identifier.id.toLowerCase(),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tset isChecked(value: boolean) {\n\t\t\t\t\t\t\tif (value) {\n\t\t\t\t\t\t\t\tthat.excludedExtensions.delete(\n\t\t\t\t\t\t\t\t\te.identifier.id.toLowerCase(),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthat.excludedExtensions.add(\n\t\t\t\t\t\t\t\t\te.identifier.id.toLowerCase(),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttooltip: localize(\n\t\t\t\t\t\t\t\"exclude\",\n\t\t\t\t\t\t\t\"Select {0} Extension\",\n\t\t\t\t\t\t\te.displayName || e.identifier.id,\n\t\t\t\t\t\t),\n\t\t\t\t\t\taccessibilityInformation: {\n\t\t\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\t\t\"exclude\",\n\t\t\t\t\t\t\t\t\"Select {0} Extension\",\n\t\t\t\t\t\t\t\te.displayName || e.identifier.id,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t: undefined,\n\t\t\tthemeIcon: Codicon.extensions,\n\t\t\tcommand: {\n\t\t\t\tid: \"extension.open\",\n\t\t\t\ttitle: \"\",\n\t\t\t\targuments: [e.identifier.id, undefined, true],\n\t\t\t},\n\t\t}));\n\t}\n\n\tasync hasContent(): Promise<boolean> {\n\t\tconst extensions = await this.getExtensions();\n\t\treturn extensions.length > 0;\n\t}\n\n\tabstract isFromDefaultProfile(): boolean;\n\tabstract getContent(): Promise<string>;\n\tprotected abstract getExtensions(): Promise<IProfileExtension[]>;\n}\n\nexport class ExtensionsResourceExportTreeItem extends ExtensionsResourceTreeItem {\n\tconstructor(\n\t\tprivate readonly profile: IUserDataProfile,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t}\n\n\tisFromDefaultProfile(): boolean {\n\t\treturn (\n\t\t\t!this.profile.isDefault &&\n\t\t\t!!this.profile.useDefaultFlags?.extensions\n\t\t);\n\t}\n\n\tprotected getExtensions(): Promise<IProfileExtension[]> {\n\t\treturn this.instantiationService\n\t\t\t.createInstance(ExtensionsResource)\n\t\t\t.getLocalExtensions(this.profile);\n\t}\n\n\tasync getContent(): Promise<string> {\n\t\treturn this.instantiationService\n\t\t\t.createInstance(ExtensionsResource)\n\t\t\t.getContent(this.profile, [...this.excludedExtensions.values()]);\n\t}\n}\n\nexport class ExtensionsResourceImportTreeItem extends ExtensionsResourceTreeItem {\n\tconstructor(\n\t\tprivate readonly content: string,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t}\n\n\tisFromDefaultProfile(): boolean {\n\t\treturn false;\n\t}\n\n\tprotected getExtensions(): Promise<IProfileExtension[]> {\n\t\treturn this.instantiationService\n\t\t\t.createInstance(ExtensionsResource)\n\t\t\t.getProfileExtensions(this.content);\n\t}\n\n\tasync getContent(): Promise<string> {\n\t\tconst extensionsResource =\n\t\t\tthis.instantiationService.createInstance(ExtensionsResource);\n\t\tconst extensions = await extensionsResource.getProfileExtensions(\n\t\t\tthis.content,\n\t\t);\n\t\treturn extensionsResource.toContent(extensions, [\n\t\t\t...this.excludedExtensions.values(),\n\t\t]);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
