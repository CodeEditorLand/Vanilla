{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/userDataProfile/browser/iconSelectBox.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from \"../../../../base/browser/dom.js\";\nimport {\n\ttype IIconSelectBoxOptions,\n\tIconSelectBox,\n} from \"../../../../base/browser/ui/icons/iconSelectBox.js\";\nimport { KeyCode } from \"../../../../base/common/keyCodes.js\";\nimport {\n\tContextKeyExpr,\n\ttype IContextKey,\n\tIContextKeyService,\n\tRawContextKey,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport {\n\tKeybindingWeight,\n\tKeybindingsRegistry,\n} from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\n\nexport const WorkbenchIconSelectBoxFocusContextKey = new RawContextKey<boolean>(\n\t\"iconSelectBoxFocus\",\n\ttrue,\n);\nexport const WorkbenchIconSelectBoxInputFocusContextKey =\n\tnew RawContextKey<boolean>(\"iconSelectBoxInputFocus\", true);\nexport const WorkbenchIconSelectBoxInputEmptyContextKey =\n\tnew RawContextKey<boolean>(\"iconSelectBoxInputEmpty\", true);\n\nexport class WorkbenchIconSelectBox extends IconSelectBox {\n\tprivate static focusedWidget: WorkbenchIconSelectBox | undefined;\n\tstatic getFocusedWidget(): WorkbenchIconSelectBox | undefined {\n\t\treturn WorkbenchIconSelectBox.focusedWidget;\n\t}\n\n\tprivate readonly contextKeyService: IContextKeyService;\n\tprivate readonly inputFocusContextKey: IContextKey<boolean>;\n\tprivate readonly inputEmptyContextKey: IContextKey<boolean>;\n\n\tconstructor(\n\t\toptions: IIconSelectBoxOptions,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t) {\n\t\tsuper(options);\n\t\tthis.contextKeyService = this._register(\n\t\t\tcontextKeyService.createScoped(this.domNode),\n\t\t);\n\t\tWorkbenchIconSelectBoxFocusContextKey.bindTo(this.contextKeyService);\n\t\tthis.inputFocusContextKey =\n\t\t\tWorkbenchIconSelectBoxInputFocusContextKey.bindTo(\n\t\t\t\tthis.contextKeyService,\n\t\t\t);\n\t\tthis.inputEmptyContextKey =\n\t\t\tWorkbenchIconSelectBoxInputEmptyContextKey.bindTo(\n\t\t\t\tthis.contextKeyService,\n\t\t\t);\n\t\tif (this.inputBox) {\n\t\t\tconst focusTracker = this._register(\n\t\t\t\tdom.trackFocus(this.inputBox.inputElement),\n\t\t\t);\n\t\t\tthis._register(\n\t\t\t\tfocusTracker.onDidFocus(() =>\n\t\t\t\t\tthis.inputFocusContextKey.set(true),\n\t\t\t\t),\n\t\t\t);\n\t\t\tthis._register(\n\t\t\t\tfocusTracker.onDidBlur(() =>\n\t\t\t\t\tthis.inputFocusContextKey.set(false),\n\t\t\t\t),\n\t\t\t);\n\t\t\tthis._register(\n\t\t\t\tthis.inputBox.onDidChange(() =>\n\t\t\t\t\tthis.inputEmptyContextKey.set(\n\t\t\t\t\t\tthis.inputBox?.value.length === 0,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t}\n\n\toverride focus(): void {\n\t\tsuper.focus();\n\t\tWorkbenchIconSelectBox.focusedWidget = this;\n\t}\n}\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: \"iconSelectBox.focusUp\",\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: WorkbenchIconSelectBoxFocusContextKey,\n\tprimary: KeyCode.UpArrow,\n\thandler: () => {\n\t\tconst selectBox = WorkbenchIconSelectBox.getFocusedWidget();\n\t\tif (selectBox) {\n\t\t\tselectBox.focusPreviousRow();\n\t\t}\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: \"iconSelectBox.focusDown\",\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: WorkbenchIconSelectBoxFocusContextKey,\n\tprimary: KeyCode.DownArrow,\n\thandler: () => {\n\t\tconst selectBox = WorkbenchIconSelectBox.getFocusedWidget();\n\t\tif (selectBox) {\n\t\t\tselectBox.focusNextRow();\n\t\t}\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: \"iconSelectBox.focusNext\",\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(\n\t\tWorkbenchIconSelectBoxFocusContextKey,\n\t\tContextKeyExpr.or(\n\t\t\tWorkbenchIconSelectBoxInputEmptyContextKey,\n\t\t\tWorkbenchIconSelectBoxInputFocusContextKey.toNegated(),\n\t\t),\n\t),\n\tprimary: KeyCode.RightArrow,\n\thandler: () => {\n\t\tconst selectBox = WorkbenchIconSelectBox.getFocusedWidget();\n\t\tif (selectBox) {\n\t\t\tselectBox.focusNext();\n\t\t}\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: \"iconSelectBox.focusPrevious\",\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(\n\t\tWorkbenchIconSelectBoxFocusContextKey,\n\t\tContextKeyExpr.or(\n\t\t\tWorkbenchIconSelectBoxInputEmptyContextKey,\n\t\t\tWorkbenchIconSelectBoxInputFocusContextKey.toNegated(),\n\t\t),\n\t),\n\tprimary: KeyCode.LeftArrow,\n\thandler: () => {\n\t\tconst selectBox = WorkbenchIconSelectBox.getFocusedWidget();\n\t\tif (selectBox) {\n\t\t\tselectBox.focusPrevious();\n\t\t}\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: \"iconSelectBox.selectFocused\",\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: WorkbenchIconSelectBoxFocusContextKey,\n\tprimary: KeyCode.Enter,\n\thandler: () => {\n\t\tconst selectBox = WorkbenchIconSelectBox.getFocusedWidget();\n\t\tif (selectBox) {\n\t\t\tselectBox.setSelection(selectBox.getFocus()[0]);\n\t\t}\n\t},\n});\n"],
  "mappings": "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",
  "names": []
}
