var I=Object.defineProperty;var S=Object.getOwnPropertyDescriptor;var a=(n,i,e,t)=>{for(var o=t>1?void 0:t?S(i,e):i,f=n.length-1,d;f>=0;f--)(d=n[f])&&(o=(t?d(i,e,o):d(o))||o);return t&&o&&I(i,e,o),o},r=(n,i)=>(e,t)=>i(e,t,n);import{VSBuffer as y}from"../../../../../vs/base/common/buffer.js";import{platform as v}from"../../../../../vs/base/common/platform.js";import{localize as b}from"../../../../../vs/nls.js";import{FileOperationError as P,FileOperationResult as h,IFileService as g}from"../../../../../vs/platform/files/common/files.js";import{IInstantiationService as k}from"../../../../../vs/platform/instantiation/common/instantiation.js";import{ILogService as p}from"../../../../../vs/platform/log/common/log.js";import{IUriIdentityService as C}from"../../../../../vs/platform/uriIdentity/common/uriIdentity.js";import{ProfileResourceType as m}from"../../../../../vs/platform/userDataProfile/common/userDataProfile.js";import{API_OPEN_EDITOR_COMMAND_ID as D}from"../../../../../vs/workbench/browser/parts/editor/editorCommands.js";import{TreeItemCollapsibleState as u}from"../../../../../vs/workbench/common/views.js";import{IUserDataProfileService as R}from"../../../../../vs/workbench/services/userDataProfile/common/userDataProfile.js";let l=class{constructor(i,e,t){this.userDataProfileService=i;this.fileService=e;this.logService=t}async initialize(i){const e=JSON.parse(i);if(e.keybindings===null){this.logService.info("Initializing Profile: No keybindings to apply...");return}await this.fileService.writeFile(this.userDataProfileService.currentProfile.keybindingsResource,y.fromString(e.keybindings))}};l=a([r(0,R),r(1,g),r(2,p)],l);let s=class{constructor(i,e){this.fileService=i;this.logService=e}async getContent(i){const e=await this.getKeybindingsResourceContent(i);return JSON.stringify(e)}async getKeybindingsResourceContent(i){return{keybindings:await this.getKeybindingsContent(i),platform:v}}async apply(i,e){const t=JSON.parse(i);if(t.keybindings===null){this.logService.info(`Importing Profile (${e.name}): No keybindings to apply...`);return}await this.fileService.writeFile(e.keybindingsResource,y.fromString(t.keybindings))}async getKeybindingsContent(i){try{return(await this.fileService.readFile(i.keybindingsResource)).value.toString()}catch(e){if(e instanceof P&&e.fileOperationResult===h.FILE_NOT_FOUND)return null;throw e}}};s=a([r(0,g),r(1,p)],s);let c=class{constructor(i,e,t){this.profile=i;this.uriIdentityService=e;this.instantiationService=t}type=m.Keybindings;handle=m.Keybindings;label={label:b("keybindings","Keyboard Shortcuts")};collapsibleState=u.Expanded;checkbox;isFromDefaultProfile(){return!this.profile.isDefault&&!!this.profile.useDefaultFlags?.keybindings}async getChildren(){return[{handle:this.profile.keybindingsResource.toString(),resourceUri:this.profile.keybindingsResource,collapsibleState:u.None,parent:this,accessibilityInformation:{label:this.uriIdentityService.extUri.basename(this.profile.settingsResource)},command:{id:D,title:"",arguments:[this.profile.keybindingsResource,void 0,void 0]}}]}async hasContent(){return(await this.instantiationService.createInstance(s).getKeybindingsResourceContent(this.profile)).keybindings!==null}async getContent(){return this.instantiationService.createInstance(s).getContent(this.profile)}};c=a([r(1,C),r(2,k)],c);export{s as KeybindingsResource,l as KeybindingsResourceInitializer,c as KeybindingsResourceTreeItem};
