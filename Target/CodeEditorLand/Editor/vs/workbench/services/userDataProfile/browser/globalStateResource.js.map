{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/userDataProfile/browser/globalStateResource.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IStringDictionary } from \"../../../../base/common/collections.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport {\n\ttype IStorageEntry,\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport { IUriIdentityService } from \"../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport {\n\ttype IUserDataProfile,\n\tProfileResourceType,\n} from \"../../../../platform/userDataProfile/common/userDataProfile.js\";\nimport { IUserDataProfileStorageService } from \"../../../../platform/userDataProfile/common/userDataProfileStorageService.js\";\nimport { API_OPEN_EDITOR_COMMAND_ID } from \"../../../browser/parts/editor/editorCommands.js\";\nimport {\n\ttype ITreeItemCheckboxState,\n\tTreeItemCollapsibleState,\n} from \"../../../common/views.js\";\nimport type {\n\tIProfileResource,\n\tIProfileResourceChildTreeItem,\n\tIProfileResourceInitializer,\n\tIProfileResourceTreeItem,\n} from \"../common/userDataProfile.js\";\n\ninterface IGlobalState {\n\tstorage: IStringDictionary<string>;\n}\n\nexport class GlobalStateResourceInitializer\n\timplements IProfileResourceInitializer\n{\n\tconstructor(@IStorageService private readonly storageService: IStorageService) {\n\t}\n\n\tasync initialize(content: string): Promise<void> {\n\t\tconst globalState: IGlobalState = JSON.parse(content);\n\t\tconst storageKeys = Object.keys(globalState.storage);\n\t\tif (storageKeys.length) {\n\t\t\tconst storageEntries: Array<IStorageEntry> = [];\n\t\t\tfor (const key of storageKeys) {\n\t\t\t\tstorageEntries.push({\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue: globalState.storage[key],\n\t\t\t\t\tscope: StorageScope.PROFILE,\n\t\t\t\t\ttarget: StorageTarget.USER,\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.storageService.storeAll(storageEntries, true);\n\t\t}\n\t}\n}\n\nexport class GlobalStateResource implements IProfileResource {\n\tconstructor(\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IUserDataProfileStorageService private readonly userDataProfileStorageService: IUserDataProfileStorageService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t}\n\n\tasync getContent(profile: IUserDataProfile): Promise<string> {\n\t\tconst globalState = await this.getGlobalState(profile);\n\t\treturn JSON.stringify(globalState);\n\t}\n\n\tasync apply(content: string, profile: IUserDataProfile): Promise<void> {\n\t\tconst globalState: IGlobalState = JSON.parse(content);\n\t\tawait this.writeGlobalState(globalState, profile);\n\t}\n\n\tasync getGlobalState(profile: IUserDataProfile): Promise<IGlobalState> {\n\t\tconst storage: IStringDictionary<string> = {};\n\t\tconst storageData =\n\t\t\tawait this.userDataProfileStorageService.readStorageData(profile);\n\t\tfor (const [key, value] of storageData) {\n\t\t\tif (\n\t\t\t\tvalue.value !== undefined &&\n\t\t\t\tvalue.target === StorageTarget.USER\n\t\t\t) {\n\t\t\t\tstorage[key] = value.value;\n\t\t\t}\n\t\t}\n\t\treturn { storage };\n\t}\n\n\tprivate async writeGlobalState(\n\t\tglobalState: IGlobalState,\n\t\tprofile: IUserDataProfile,\n\t): Promise<void> {\n\t\tconst storageKeys = Object.keys(globalState.storage);\n\t\tif (storageKeys.length) {\n\t\t\tconst updatedStorage = new Map<string, string | undefined>();\n\t\t\tconst nonProfileKeys = [\n\t\t\t\t// Do not include application scope user target keys because they also include default profile user target keys\n\t\t\t\t...this.storageService.keys(\n\t\t\t\t\tStorageScope.APPLICATION,\n\t\t\t\t\tStorageTarget.MACHINE,\n\t\t\t\t),\n\t\t\t\t...this.storageService.keys(\n\t\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\t\tStorageTarget.USER,\n\t\t\t\t),\n\t\t\t\t...this.storageService.keys(\n\t\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\t\tStorageTarget.MACHINE,\n\t\t\t\t),\n\t\t\t];\n\t\t\tfor (const key of storageKeys) {\n\t\t\t\tif (nonProfileKeys.includes(key)) {\n\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t`Importing Profile (${profile.name}): Ignoring global state key '${key}' because it is not a profile key.`,\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tupdatedStorage.set(key, globalState.storage[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tawait this.userDataProfileStorageService.updateStorageData(\n\t\t\t\tprofile,\n\t\t\t\tupdatedStorage,\n\t\t\t\tStorageTarget.USER,\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport abstract class GlobalStateResourceTreeItem\n\timplements IProfileResourceTreeItem\n{\n\treadonly type = ProfileResourceType.GlobalState;\n\treadonly handle = ProfileResourceType.GlobalState;\n\treadonly label = { label: localize(\"globalState\", \"UI State\") };\n\treadonly collapsibleState = TreeItemCollapsibleState.Collapsed;\n\tcheckbox: ITreeItemCheckboxState | undefined;\n\n\tconstructor(\n\t\tprivate readonly resource: URI,\n\t\tprivate readonly uriIdentityService: IUriIdentityService,\n\t) {}\n\n\tasync getChildren(): Promise<IProfileResourceChildTreeItem[]> {\n\t\treturn [\n\t\t\t{\n\t\t\t\thandle: this.resource.toString(),\n\t\t\t\tresourceUri: this.resource,\n\t\t\t\tcollapsibleState: TreeItemCollapsibleState.None,\n\t\t\t\taccessibilityInformation: {\n\t\t\t\t\tlabel: this.uriIdentityService.extUri.basename(\n\t\t\t\t\t\tthis.resource,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tparent: this,\n\t\t\t\tcommand: {\n\t\t\t\t\tid: API_OPEN_EDITOR_COMMAND_ID,\n\t\t\t\t\ttitle: \"\",\n\t\t\t\t\targuments: [this.resource, undefined, undefined],\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\t}\n\n\tabstract getContent(): Promise<string>;\n\tabstract isFromDefaultProfile(): boolean;\n}\n\nexport class GlobalStateResourceExportTreeItem extends GlobalStateResourceTreeItem {\n\tconstructor(\n\t\tprivate readonly profile: IUserDataProfile,\n\t\tresource: URI,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService\n\t) {\n\t\tsuper(resource, uriIdentityService);\n\t}\n\n\tasync hasContent(): Promise<boolean> {\n\t\tconst globalState = await this.instantiationService\n\t\t\t.createInstance(GlobalStateResource)\n\t\t\t.getGlobalState(this.profile);\n\t\treturn Object.keys(globalState.storage).length > 0;\n\t}\n\n\tasync getContent(): Promise<string> {\n\t\treturn this.instantiationService\n\t\t\t.createInstance(GlobalStateResource)\n\t\t\t.getContent(this.profile);\n\t}\n\n\tisFromDefaultProfile(): boolean {\n\t\treturn (\n\t\t\t!this.profile.isDefault &&\n\t\t\t!!this.profile.useDefaultFlags?.globalState\n\t\t);\n\t}\n}\n\nexport class GlobalStateResourceImportTreeItem extends GlobalStateResourceTreeItem {\n\tconstructor(\n\t\tprivate readonly content: string,\n\t\tresource: URI,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(resource, uriIdentityService);\n\t}\n\n\tasync getContent(): Promise<string> {\n\t\treturn this.content;\n\t}\n\n\tisFromDefaultProfile(): boolean {\n\t\treturn false;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
