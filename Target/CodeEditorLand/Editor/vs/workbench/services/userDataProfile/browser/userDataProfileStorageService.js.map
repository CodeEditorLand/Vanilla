{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/userDataProfile/browser/userDataProfileStorageService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { IStorageDatabase } from '../../../../base/parts/storage/common/storage.js';\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { AbstractUserDataProfileStorageService, IProfileStorageChanges, IUserDataProfileStorageService } from '../../../../platform/userDataProfile/common/userDataProfileStorageService.js';\nimport { IProfileStorageValueChangeEvent, isProfileUsingDefaultStorage, IStorageService, StorageScope } from '../../../../platform/storage/common/storage.js';\nimport { IUserDataProfile } from '../../../../platform/userDataProfile/common/userDataProfile.js';\nimport { IndexedDBStorageDatabase } from '../../storage/browser/storageService.js';\nimport { IUserDataProfileService } from '../common/userDataProfile.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\n\nexport class UserDataProfileStorageService extends AbstractUserDataProfileStorageService implements IUserDataProfileStorageService {\n\n\tprivate readonly _onDidChange = this._register(new Emitter<IProfileStorageChanges>());\n\treadonly onDidChange: Event<IProfileStorageChanges> = this._onDidChange.event;\n\n\tconstructor(\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IUserDataProfileService private readonly userDataProfileService: IUserDataProfileService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t\tsuper(true, storageService);\n\t\tconst disposables = this._register(new DisposableStore());\n\t\tthis._register(Event.filter(storageService.onDidChangeTarget, e => e.scope === StorageScope.PROFILE, disposables)(() => this.onDidChangeStorageTargetInCurrentProfile()));\n\t\tthis._register(storageService.onDidChangeValue(StorageScope.PROFILE, undefined, disposables)(e => this.onDidChangeStorageValueInCurrentProfile(e)));\n\t}\n\n\tprivate onDidChangeStorageTargetInCurrentProfile(): void {\n\t\t// Not broadcasting changes to other windows/tabs as it is not required in web.\n\t\t// Revisit if needed in future.\n\t\tthis._onDidChange.fire({ targetChanges: [this.userDataProfileService.currentProfile], valueChanges: [] });\n\t}\n\n\tprivate onDidChangeStorageValueInCurrentProfile(e: IProfileStorageValueChangeEvent): void {\n\t\t// Not broadcasting changes to other windows/tabs as it is not required in web\n\t\t// Revisit if needed in future.\n\t\tthis._onDidChange.fire({ targetChanges: [], valueChanges: [{ profile: this.userDataProfileService.currentProfile, changes: [e] }] });\n\t}\n\n\tprotected createStorageDatabase(profile: IUserDataProfile): Promise<IStorageDatabase> {\n\t\treturn isProfileUsingDefaultStorage(profile) ? IndexedDBStorageDatabase.createApplicationStorage(this.logService) : IndexedDBStorageDatabase.createProfileStorage(profile, this.logService);\n\t}\n}\n\nregisterSingleton(IUserDataProfileStorageService, UserDataProfileStorageService, InstantiationType.Delayed);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,SAAS,aAAa;AAC/B,SAAS,wBAAwB;AACjC,SAAS,mBAAmB,yBAAyB;AACrD,SAAS,mBAAmB;AAC5B,SAAS,uCAAuC,wBAAwB,sCAAsC;AAC9G,SAAS,iCAAiC,8BAA8B,iBAAiB,oBAAoB;AAC7G,SAAS,wBAAwB;AACjC,SAAS,gCAAgC;AACzC,SAAS,+BAA+B;AACxC,SAAS,uBAAuB;AAEzB,IAAM,gCAAN,cAA4C,sCAAgF;AAAA,EAKlI,YACkB,gBACyB,wBACZ,YAC7B;AACD,UAAM,MAAM,cAAc;AAHgB;AACZ;AAG9B,UAAM,cAAc,KAAK,UAAU,IAAI,gBAAgB,CAAC;AACxD,SAAK,UAAU,MAAM,OAAO,eAAe,mBAAmB,OAAK,EAAE,UAAU,aAAa,SAAS,WAAW,EAAE,MAAM,KAAK,yCAAyC,CAAC,CAAC;AACxK,SAAK,UAAU,eAAe,iBAAiB,aAAa,SAAS,QAAW,WAAW,EAAE,OAAK,KAAK,wCAAwC,CAAC,CAAC,CAAC;AAAA,EACnJ;AAAA,EA9BD,OAgBmI;AAAA;AAAA;AAAA,EAEjH,eAAe,KAAK,UAAU,IAAI,QAAgC,CAAC;AAAA,EAC3E,cAA6C,KAAK,aAAa;AAAA,EAahE,2CAAiD;AAGxD,SAAK,aAAa,KAAK,EAAE,eAAe,CAAC,KAAK,uBAAuB,cAAc,GAAG,cAAc,CAAC,EAAE,CAAC;AAAA,EACzG;AAAA,EAEQ,wCAAwC,GAA0C;AAGzF,SAAK,aAAa,KAAK,EAAE,eAAe,CAAC,GAAG,cAAc,CAAC,EAAE,SAAS,KAAK,uBAAuB,gBAAgB,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;AAAA,EACpI;AAAA,EAEU,sBAAsB,SAAsD;AACrF,WAAO,6BAA6B,OAAO,IAAI,yBAAyB,yBAAyB,KAAK,UAAU,IAAI,yBAAyB,qBAAqB,SAAS,KAAK,UAAU;AAAA,EAC3L;AACD;AA/Ba,gCAAN;AAAA,EAMJ;AAAA,EACA;AAAA,EACA;AAAA,GARU;AAiCb,kBAAkB,gCAAgC,+BAA+B,kBAAkB,OAAO;",
  "names": []
}
