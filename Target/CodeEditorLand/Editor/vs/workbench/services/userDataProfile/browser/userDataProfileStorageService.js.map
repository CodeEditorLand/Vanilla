{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/userDataProfile/browser/userDataProfileStorageService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from \"../../../../base/common/event.js\";\nimport { DisposableStore } from \"../../../../base/common/lifecycle.js\";\nimport type { IStorageDatabase } from \"../../../../base/parts/storage/common/storage.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport {\n\ttype IProfileStorageValueChangeEvent,\n\tIStorageService,\n\tStorageScope,\n\tisProfileUsingDefaultStorage,\n} from \"../../../../platform/storage/common/storage.js\";\nimport type { IUserDataProfile } from \"../../../../platform/userDataProfile/common/userDataProfile.js\";\nimport {\n\tAbstractUserDataProfileStorageService,\n\ttype IProfileStorageChanges,\n\tIUserDataProfileStorageService,\n} from \"../../../../platform/userDataProfile/common/userDataProfileStorageService.js\";\nimport { IndexedDBStorageDatabase } from \"../../storage/browser/storageService.js\";\nimport { IUserDataProfileService } from \"../common/userDataProfile.js\";\n\nexport class UserDataProfileStorageService\n\textends AbstractUserDataProfileStorageService\n\timplements IUserDataProfileStorageService\n{\n\tprivate readonly _onDidChange = this._register(\n\t\tnew Emitter<IProfileStorageChanges>(),\n\t);\n\treadonly onDidChange: Event<IProfileStorageChanges> =\n\t\tthis._onDidChange.event;\n\n\tconstructor(\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IUserDataProfileService private readonly userDataProfileService: IUserDataProfileService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t\tsuper(true, storageService);\n\t\tconst disposables = this._register(new DisposableStore());\n\t\tthis._register(Event.filter(storageService.onDidChangeTarget, e => e.scope === StorageScope.PROFILE, disposables)(() => this.onDidChangeStorageTargetInCurrentProfile()));\n\t\tthis._register(storageService.onDidChangeValue(StorageScope.PROFILE, undefined, disposables)(e => this.onDidChangeStorageValueInCurrentProfile(e)));\n\t}\n\n\tprivate onDidChangeStorageTargetInCurrentProfile(): void {\n\t\t// Not broadcasting changes to other windows/tabs as it is not required in web.\n\t\t// Revisit if needed in future.\n\t\tthis._onDidChange.fire({\n\t\t\ttargetChanges: [this.userDataProfileService.currentProfile],\n\t\t\tvalueChanges: [],\n\t\t});\n\t}\n\n\tprivate onDidChangeStorageValueInCurrentProfile(\n\t\te: IProfileStorageValueChangeEvent,\n\t): void {\n\t\t// Not broadcasting changes to other windows/tabs as it is not required in web\n\t\t// Revisit if needed in future.\n\t\tthis._onDidChange.fire({\n\t\t\ttargetChanges: [],\n\t\t\tvalueChanges: [\n\t\t\t\t{\n\t\t\t\t\tprofile: this.userDataProfileService.currentProfile,\n\t\t\t\t\tchanges: [e],\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\tprotected createStorageDatabase(\n\t\tprofile: IUserDataProfile,\n\t): Promise<IStorageDatabase> {\n\t\treturn isProfileUsingDefaultStorage(profile)\n\t\t\t? IndexedDBStorageDatabase.createApplicationStorage(this.logService)\n\t\t\t: IndexedDBStorageDatabase.createProfileStorage(\n\t\t\t\t\tprofile,\n\t\t\t\t\tthis.logService,\n\t\t\t\t);\n\t}\n}\n\nregisterSingleton(\n\tIUserDataProfileStorageService,\n\tUserDataProfileStorageService,\n\tInstantiationType.Delayed,\n);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,SAAS,aAAa;AAC/B,SAAS,uBAAuB;AAEhC;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,mBAAmB;AAC5B;AAAA,EAEC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AAEP;AAAA,EACC;AAAA,EAEA;AAAA,OACM;AACP,SAAS,gCAAgC;AACzC,SAAS,+BAA+B;AAEjC,IAAM,gCAAN,cACE,sCAET;AAAA,EAOC,YACkB,gBACyB,wBACZ,YAC7B;AACD,UAAM,MAAM,cAAc;AAHgB;AACZ;AAG9B,UAAM,cAAc,KAAK,UAAU,IAAI,gBAAgB,CAAC;AACxD,SAAK,UAAU,MAAM,OAAO,eAAe,mBAAmB,OAAK,EAAE,UAAU,aAAa,SAAS,WAAW,EAAE,MAAM,KAAK,yCAAyC,CAAC,CAAC;AACxK,SAAK,UAAU,eAAe,iBAAiB,aAAa,SAAS,QAAW,WAAW,EAAE,OAAK,KAAK,wCAAwC,CAAC,CAAC,CAAC;AAAA,EACnJ;AAAA,EA/CD,OA+BA;AAAA;AAAA;AAAA,EACkB,eAAe,KAAK;AAAA,IACpC,IAAI,QAAgC;AAAA,EACrC;AAAA,EACS,cACR,KAAK,aAAa;AAAA,EAaX,2CAAiD;AAGxD,SAAK,aAAa,KAAK;AAAA,MACtB,eAAe,CAAC,KAAK,uBAAuB,cAAc;AAAA,MAC1D,cAAc,CAAC;AAAA,IAChB,CAAC;AAAA,EACF;AAAA,EAEQ,wCACP,GACO;AAGP,SAAK,aAAa,KAAK;AAAA,MACtB,eAAe,CAAC;AAAA,MAChB,cAAc;AAAA,QACb;AAAA,UACC,SAAS,KAAK,uBAAuB;AAAA,UACrC,SAAS,CAAC,CAAC;AAAA,QACZ;AAAA,MACD;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEU,sBACT,SAC4B;AAC5B,WAAO,6BAA6B,OAAO,IACxC,yBAAyB,yBAAyB,KAAK,UAAU,IACjE,yBAAyB;AAAA,MACzB;AAAA,MACA,KAAK;AAAA,IACN;AAAA,EACH;AACD;AAxDa,gCAAN;AAAA,EAWJ;AAAA,EACA;AAAA,EACA;AAAA,GAbU;AA0Db;AAAA,EACC;AAAA,EACA;AAAA,EACA,kBAAkB;AACnB;",
  "names": []
}
