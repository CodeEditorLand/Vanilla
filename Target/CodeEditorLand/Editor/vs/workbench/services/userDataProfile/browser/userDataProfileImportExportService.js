var X=Object.defineProperty;var Y=Object.getOwnPropertyDescriptor;var h=(p,o,e,t)=>{for(var i=t>1?void 0:t?Y(o,e):o,r=p.length-1,n;r>=0;r--)(n=p[r])&&(i=(t?n(o,e,i):n(i))||i);return t&&i&&X(o,e,i),i},l=(p,o)=>(e,t)=>o(e,t,p);import"vs/css!./media/userDataProfileView";import{createCancelablePromise as E}from"../../../../../vs/base/common/async.js";import{VSBuffer as z}from"../../../../../vs/base/common/buffer.js";import{CancellationToken as v}from"../../../../../vs/base/common/cancellation.js";import{Emitter as W}from"../../../../../vs/base/common/event.js";import{Disposable as H,DisposableStore as I,toDisposable as Z}from"../../../../../vs/base/common/lifecycle.js";import{Schemas as R}from"../../../../../vs/base/common/network.js";import{joinPath as ee}from"../../../../../vs/base/common/resources.js";import O from"../../../../../vs/base/common/severity.js";import{escapeRegExpCharacters as te}from"../../../../../vs/base/common/strings.js";import{isUndefined as b}from"../../../../../vs/base/common/types.js";import{URI as ie}from"../../../../../vs/base/common/uri.js";import{localize as a}from"../../../../../vs/nls.js";import{IClipboardService as re}from"../../../../../vs/platform/clipboard/common/clipboardService.js";import{IContextKeyService as se}from"../../../../../vs/platform/contextkey/common/contextkey.js";import{IDialogService as ne,IFileDialogService as ae}from"../../../../../vs/platform/dialogs/common/dialogs.js";import{IFileService as _}from"../../../../../vs/platform/files/common/files.js";import{InMemoryFileSystemProvider as N}from"../../../../../vs/platform/files/common/inMemoryFilesystemProvider.js";import{InstantiationType as oe,registerSingleton as le}from"../../../../../vs/platform/instantiation/common/extensions.js";import{IInstantiationService as q}from"../../../../../vs/platform/instantiation/common/instantiation.js";import{IOpenerService as ce}from"../../../../../vs/platform/opener/common/opener.js";import{IProductService as L}from"../../../../../vs/platform/product/common/productService.js";import{IProgressService as fe,ProgressLocation as D}from"../../../../../vs/platform/progress/common/progress.js";import{IQuickInputService as x}from"../../../../../vs/platform/quickinput/common/quickInput.js";import{asText as $,IRequestService as ue}from"../../../../../vs/platform/request/common/request.js";import{IUriIdentityService as A}from"../../../../../vs/platform/uriIdentity/common/uriIdentity.js";import{IUserDataProfilesService as de}from"../../../../../vs/platform/userDataProfile/common/userDataProfile.js";import"../../../../../vs/workbench/common/views.js";import{IExtensionService as pe}from"../../../../../vs/workbench/services/extensions/common/extensions.js";import{ITextFileService as ge}from"../../../../../vs/workbench/services/textfile/common/textfiles.js";import{ExtensionsResource as C,ExtensionsResourceExportTreeItem as me,ExtensionsResourceTreeItem as he}from"../../../../../vs/workbench/services/userDataProfile/browser/extensionsResource.js";import{GlobalStateResource as M,GlobalStateResourceExportTreeItem as ve,GlobalStateResourceTreeItem as Ie}from"../../../../../vs/workbench/services/userDataProfile/browser/globalStateResource.js";import{KeybindingsResource as k,KeybindingsResourceTreeItem as B}from"../../../../../vs/workbench/services/userDataProfile/browser/keybindingsResource.js";import{SettingsResource as T,SettingsResourceTreeItem as K}from"../../../../../vs/workbench/services/userDataProfile/browser/settingsResource.js";import{SnippetsResource as U,SnippetsResourceTreeItem as Q}from"../../../../../vs/workbench/services/userDataProfile/browser/snippetsResource.js";import{TasksResource as F,TasksResourceTreeItem as G}from"../../../../../vs/workbench/services/userDataProfile/browser/tasksResource.js";import{isProfileURL as Pe,IUserDataProfileImportExportService as Se,IUserDataProfileManagementService as ye,IUserDataProfileService as we,PROFILE_EXTENSION as be,PROFILE_FILTER as j,PROFILE_URL_AUTHORITY as J,PROFILE_URL_AUTHORITY_PREFIX as De,PROFILES_CATEGORY as Ce,toUserDataProfileUri as Re}from"../../../../../vs/workbench/services/userDataProfile/common/userDataProfile.js";function xe(p){const o=p;return!!(o&&typeof o=="object"&&o.name&&typeof o.name=="string"&&(b(o.icon)||typeof o.icon=="string")&&(b(o.settings)||typeof o.settings=="string")&&(b(o.globalState)||typeof o.globalState=="string")&&(b(o.extensions)||typeof o.extensions=="string"))}let P=class extends H{constructor(e,t,i,r,n,s,d,u,f,c,g,ke,Te,Ue){super();this.instantiationService=e;this.userDataProfileService=t;this.userDataProfileManagementService=r;this.userDataProfilesService=n;this.extensionService=s;this.quickInputService=d;this.progressService=u;this.dialogService=f;this.clipboardService=c;this.openerService=g;this.requestService=ke;this.productService=Te;this.uriIdentityService=Ue;this.registerProfileContentHandler(R.file,this.fileUserDataProfileContentHandler=e.createInstance(S))}_serviceBrand;profileContentHandlers=new Map;fileUserDataProfileContentHandler;registerProfileContentHandler(e,t){if(this.profileContentHandlers.has(e))throw new Error(`Profile content handler with id '${e}' already registered.`);return this.profileContentHandlers.set(e,t),Z(()=>this.unregisterProfileContentHandler(e))}unregisterProfileContentHandler(e){this.profileContentHandlers.delete(e)}async createFromProfile(e,t,i){const r=new I;let n;r.add(i.onCancellationRequested(()=>n.cancel()));let s;return this.progressService.withProgress({location:D.Notification,delay:500,sticky:!0,cancellable:!0},async d=>{const u=f=>d.report({message:a("create from profile","Create Profile: {0}",f)});n=E(async f=>{const g=await r.add(this.instantiationService.createInstance(m,e,{...t?.resourceTypeFlags,extensions:!1})).getProfileTemplate(t.name??e.name,t?.icon);s=await this.getProfileToImport({...g,name:t.name??g.name},!!t.transient,t),s&&(f.isCancellationRequested||await this.applyProfileTemplate(g,s,t,u,f))});try{await n,s&&(t?.resourceTypeFlags?.extensions??!0)&&(u(a("installing extensions","Installing Extensions...")),await this.instantiationService.createInstance(C).copy(e,s,!1))}catch{s&&(await this.userDataProfilesService.removeProfile(s),s=void 0)}return s},()=>n.cancel()).finally(()=>r.dispose())}async createProfileFromTemplate(e,t,i){const r=new I;let n;r.add(i.onCancellationRequested(()=>n.cancel()));let s;return this.progressService.withProgress({location:D.Notification,delay:500,sticky:!0,cancellable:!0},async d=>{const u=f=>d.report({message:a("create from profile","Create Profile: {0}",f)});n=E(async f=>{s=await this.getProfileToImport({...e,name:t.name??e.name},!!t.transient,t),s&&(f.isCancellationRequested||await this.applyProfileTemplate(e,s,t,u,f))});try{await n}catch{s&&(await this.userDataProfilesService.removeProfile(s),s=void 0)}return s},()=>n.cancel()).finally(()=>r.dispose())}async applyProfileTemplate(e,t,i,r,n){e.settings&&(i.resourceTypeFlags?.settings??!0)&&!t.useDefaultFlags?.settings&&(r(a("creating settings","Creating Settings...")),await this.instantiationService.createInstance(T).apply(e.settings,t)),!n.isCancellationRequested&&(e.keybindings&&(i.resourceTypeFlags?.keybindings??!0)&&!t.useDefaultFlags?.keybindings&&(r(a("create keybindings","Creating Keyboard Shortcuts...")),await this.instantiationService.createInstance(k).apply(e.keybindings,t)),!n.isCancellationRequested&&(e.tasks&&(i.resourceTypeFlags?.tasks??!0)&&!t.useDefaultFlags?.tasks&&(r(a("create tasks","Creating Tasks...")),await this.instantiationService.createInstance(F).apply(e.tasks,t)),!n.isCancellationRequested&&(e.snippets&&(i.resourceTypeFlags?.snippets??!0)&&!t.useDefaultFlags?.snippets&&(r(a("create snippets","Creating Snippets...")),await this.instantiationService.createInstance(U).apply(e.snippets,t)),!n.isCancellationRequested&&(e.globalState&&!t.useDefaultFlags?.globalState&&(r(a("applying global state","Applying UI State...")),await this.instantiationService.createInstance(M).apply(e.globalState,t)),!n.isCancellationRequested&&e.extensions&&(i.resourceTypeFlags?.extensions??!0)&&!t.useDefaultFlags?.extensions&&(r(a("installing extensions","Installing Extensions...")),await this.instantiationService.createInstance(C).apply(e.extensions,t,r,n))))))}async exportProfile(e){const t=new I;try{const i=t.add(this.instantiationService.createInstance(m,e,void 0));await this.doExportProfile(i,D.Notification)}finally{t.dispose()}}async createTroubleshootProfile(){const e=this.instantiationService.createInstance(m,this.userDataProfileService.currentProfile,void 0);try{const t=await e.getProfileTemplate(a("troubleshoot issue","Troubleshoot Issue"),void 0);await this.progressService.withProgress({location:D.Notification,delay:1e3,sticky:!0},async i=>{const r=s=>i.report({message:a("troubleshoot profile progress","Setting up Troubleshoot Profile: {0}",s)}),n=await this.doCreateProfile(t,!0,!1,{useDefaultFlags:this.userDataProfileService.currentProfile.useDefaultFlags},r);n&&(r(a("progress extensions","Applying Extensions...")),await this.instantiationService.createInstance(C).copy(this.userDataProfileService.currentProfile,n,!0),r(a("switching profile","Switching Profile...")),await this.userDataProfileManagementService.switchProfile(n))})}finally{e.dispose()}}async doExportProfile(e,t){const i=await e.getProfileToExport();if(!i)return;const r=new I;try{await this.progressService.withProgress({location:t,title:a("profiles.exporting","{0}: Exporting...",Ce.value)},async n=>{const s=await this.pickProfileContentHandler(i.name);if(!s)return;const d=this.profileContentHandlers.get(s);if(!d)return;const u=await d.saveProfile(i.name.replace("/","-"),JSON.stringify(i),v.None);if(!u)return;const f=a("export success","Profile '{0}' was exported successfully.",i.name);if(d.extensionId){const c=[],g=this.productService.webUrl?`${this.productService.webUrl}/${J}/${s}/${u.id}`:Re(`/${s}/${u.id}`,this.productService).toString();c.push({label:a({key:"copy",comment:["&& denotes a mnemonic"]},"&&Copy Link"),run:()=>this.clipboardService.writeText(g)}),this.productService.webUrl?c.push({label:a({key:"open",comment:["&& denotes a mnemonic"]},"&&Open Link"),run:async()=>{await this.openerService.open(g)}}):c.push({label:a({key:"open in",comment:["&& denotes a mnemonic"]},"&&Open in {0}",d.name),run:async()=>{await this.openerService.open(u.link.toString())}}),await this.dialogService.prompt({type:O.Info,message:f,buttons:c,cancelButton:a("close","Close")})}else await this.dialogService.info(f)})}finally{r.dispose()}}async resolveProfileTemplate(e,t){const i=await this.resolveProfileContent(e);if(i===null)return null;let r;try{r=JSON.parse(i)}catch{throw new Error(a("invalid profile content","This profile is not valid."))}if(!xe(r))throw new Error(a("invalid profile content","This profile is not valid."));return t?.name&&(r.name=t.name),t?.icon&&(r.icon=t.icon),t?.resourceTypeFlags?.settings===!1&&(r.settings=void 0),t?.resourceTypeFlags?.keybindings===!1&&(r.keybindings=void 0),t?.resourceTypeFlags?.snippets===!1&&(r.snippets=void 0),t?.resourceTypeFlags?.tasks===!1&&(r.tasks=void 0),t?.resourceTypeFlags?.globalState===!1&&(r.globalState=void 0),t?.resourceTypeFlags?.extensions===!1&&(r.extensions=void 0),r}async doCreateProfile(e,t,i,r,n){const s=await this.getProfileToImport(e,t,r);if(s)return e.settings&&!s.useDefaultFlags?.settings&&(n(a("progress settings","Applying Settings...")),await this.instantiationService.createInstance(T).apply(e.settings,s)),e.keybindings&&!s.useDefaultFlags?.keybindings&&(n(a("progress keybindings","Applying Keyboard Shortcuts...")),await this.instantiationService.createInstance(k).apply(e.keybindings,s)),e.tasks&&!s.useDefaultFlags?.tasks&&(n(a("progress tasks","Applying Tasks...")),await this.instantiationService.createInstance(F).apply(e.tasks,s)),e.snippets&&!s.useDefaultFlags?.snippets&&(n(a("progress snippets","Applying Snippets...")),await this.instantiationService.createInstance(U).apply(e.snippets,s)),e.globalState&&!s.useDefaultFlags?.globalState&&(n(a("progress global state","Applying State...")),await this.instantiationService.createInstance(M).apply(e.globalState,s)),e.extensions&&i&&!s.useDefaultFlags?.extensions&&(n(a("progress extensions","Applying Extensions...")),await this.instantiationService.createInstance(C).apply(e.extensions,s)),s}async resolveProfileContent(e){if(await this.fileUserDataProfileContentHandler.canHandle(e))return this.fileUserDataProfileContentHandler.readProfile(e,v.None);if(Pe(e)){let i,r;e.authority===J?(r=this.uriIdentityService.extUri.basename(e),i=this.uriIdentityService.extUri.basename(this.uriIdentityService.extUri.dirname(e))):(i=e.authority.substring(De.length),r=ie.parse(e.path.substring(1))),await this.extensionService.activateByEvent(`onProfile:${i}`);const n=this.profileContentHandlers.get(i);if(n)return n.readProfile(r,v.None)}await this.extensionService.activateByEvent("onProfile");for(const i of this.profileContentHandlers.values()){const r=await i.readProfile(e,v.None);if(r!==null)return r}const t=await this.requestService.request({type:"GET",url:e.toString(!0)},v.None);if(t.res.statusCode===200)return await $(t);{const i=await $(t);throw new Error(`Failed to get profile from URL: ${e.toString()}. Status code: ${t.res.statusCode}. Message: ${i}`)}}async pickProfileContentHandler(e){if(await this.extensionService.activateByEvent("onProfile"),this.profileContentHandlers.size===1)return this.profileContentHandlers.keys().next().value;const t=[];for(const[r,n]of this.profileContentHandlers)t.push({id:r,label:n.name,description:n.description});return(await this.quickInputService.pick(t.reverse(),{title:a("select profile content handler","Export '{0}' profile as...",e),hideInput:!0}))?.id}async getProfileToImport(e,t,i){const r=e.name,n=this.userDataProfilesService.profiles.find(s=>s.name===r);if(n){if(t)return this.userDataProfilesService.createNamedProfile(`${r} ${this.getProfileNameIndex(r)}`,{...i,transient:t});const{confirmed:s}=await this.dialogService.confirm({type:O.Info,message:a("profile already exists","Profile with name '{0}' already exists. Do you want to replace its contents?",r),primaryButton:a({key:"overwrite",comment:["&& denotes a mnemonic"]},"&&Replace")});return s?n.isDefault?n:this.userDataProfilesService.updateProfile(n,i):void 0}else return this.userDataProfilesService.createNamedProfile(r,{...i,transient:t})}getProfileNameIndex(e){const t=new RegExp(`${te(e)}\\s(\\d+)`);let i=0;for(const r of this.userDataProfilesService.profiles){const n=t.exec(r.name),s=n?parseInt(n[1]):0;i=s>i?s:i}return i+1}};P=h([l(0,q),l(1,we),l(2,se),l(3,ye),l(4,de),l(5,pe),l(6,x),l(7,fe),l(8,ne),l(9,re),l(10,ce),l(11,ue),l(12,L),l(13,A)],P);let S=class{constructor(o,e,t,i,r){this.fileDialogService=o;this.uriIdentityService=e;this.fileService=t;this.productService=i;this.textFileService=r}name=a("local","Local");description=a("file","file");async saveProfile(o,e,t){const i=await this.fileDialogService.showSaveDialog({title:a("export profile dialog","Save Profile"),filters:j,defaultUri:this.uriIdentityService.extUri.joinPath(await this.fileDialogService.defaultFilePath(),`${o}.${be}`)});return i?(await this.textFileService.create([{resource:i,value:e,options:{overwrite:!0}}]),{link:i,id:i.toString()}):null}async canHandle(o){return o.scheme!==R.http&&o.scheme!==R.https&&o.scheme!==this.productService.urlProtocol&&await this.fileService.canHandleResource(o)}async readProfile(o,e){return await this.canHandle(o)?(await this.fileService.readFile(o,void 0,e)).value.toString():null}async selectProfile(){const o=await this.fileDialogService.showOpenDialog({canSelectFolders:!1,canSelectFiles:!0,canSelectMany:!1,filters:j,title:a("select profile","Select Profile")});return o?o[0]:null}};S=h([l(0,ae),l(1,A),l(2,_),l(3,L),l(4,ge)],S);const y="userdataprofileexport",V="userdataprofileexportpreview";let w=class extends H{constructor(e){super();this.quickInputService=e}_onDidChangeRoots=this._register(new W);onDidChangeRoots=this._onDidChangeRoots.event;async getChildren(e){if(e){const t=await e.getChildren();if(t)for(const i of t)i.parent.checkbox&&i.checkbox&&(i.checkbox.isChecked=i.parent.checkbox.isChecked&&i.checkbox.isChecked);return t}else return this.rootsPromise=void 0,this._onDidChangeRoots.fire(),this.getRoots()}roots=[];rootsPromise;getRoots(){return this.rootsPromise||(this.rootsPromise=(async()=>{this.roots=await this.fetchRoots();for(const e of this.roots)e.checkbox={isChecked:!e.isFromDefaultProfile(),tooltip:a("select","Select {0}",e.label.label),accessibilityInformation:{label:a("select","Select {0}",e.label.label)}},e.isFromDefaultProfile()&&(e.description=a("from default","From Default Profile"));return this.roots})()),this.rootsPromise}isEnabled(e){return e!==void 0?this.roots.some(t=>t.type===e&&this.isSelected(t)):this.roots.some(t=>this.isSelected(t))}async getProfileTemplate(e,t){const i=await this.getRoots();let r,n,s,d,u,f;for(const c of i)this.isSelected(c)&&(c instanceof K?r=await c.getContent():c instanceof B?n=await c.getContent():c instanceof G?s=await c.getContent():c instanceof Q?d=await c.getContent():c instanceof he?u=await c.getContent():c instanceof Ie&&(f=await c.getContent()));return{name:e,icon:t,settings:r,keybindings:n,tasks:s,snippets:d,extensions:u,globalState:f}}isSelected(e){return e.checkbox?e.checkbox.isChecked||!!e.children?.some(t=>t.checkbox?.isChecked):!0}};w=h([l(0,x)],w);let m=class extends w{constructor(e,t,i,r,n){super(i);this.profile=e;this.exportFlags=t;this.fileService=r;this.instantiationService=n}disposables=this._register(new I);async fetchRoots(){this.disposables.clear(),this.disposables.add(this.fileService.registerProvider(y,this._register(new N)));const e=this._register(new N);this.disposables.add(this.fileService.registerProvider(V,e));const t=[],i=this.createExportPreviewProfile(this.profile);if(this.exportFlags?.settings??!0){const r=this.instantiationService.createInstance(T),n=await r.getContent(this.profile);await r.apply(n,i);const s=this.instantiationService.createInstance(K,i);await s.hasContent()&&t.push(s)}if(this.exportFlags?.keybindings??!0){const r=this.instantiationService.createInstance(k),n=await r.getContent(this.profile);await r.apply(n,i);const s=this.instantiationService.createInstance(B,i);await s.hasContent()&&t.push(s)}if(this.exportFlags?.snippets??!0){const r=this.instantiationService.createInstance(U),n=await r.getContent(this.profile);await r.apply(n,i);const s=this.instantiationService.createInstance(Q,i);await s.hasContent()&&t.push(s)}if(this.exportFlags?.tasks??!0){const r=this.instantiationService.createInstance(F),n=await r.getContent(this.profile);await r.apply(n,i);const s=this.instantiationService.createInstance(G,i);await s.hasContent()&&t.push(s)}if(this.exportFlags?.globalState??!0){const r=ee(i.globalStorageHome,"globalState.json").with({scheme:V}),n=this.instantiationService.createInstance(ve,i,r),s=await n.getContent();s&&(await this.fileService.writeFile(r,z.fromString(JSON.stringify(JSON.parse(s),null,"	"))),t.push(n))}if(this.exportFlags?.extensions??!0){const r=this.instantiationService.createInstance(me,i);await r.hasContent()&&t.push(r)}return e.setReadOnly(!0),t}createExportPreviewProfile(e){return{id:e.id,name:e.name,location:e.location,isDefault:e.isDefault,shortName:e.shortName,icon:e.icon,globalStorageHome:e.globalStorageHome,settingsResource:e.settingsResource.with({scheme:y}),keybindingsResource:e.keybindingsResource.with({scheme:y}),tasksResource:e.tasksResource.with({scheme:y}),snippetsHome:e.snippetsHome.with({scheme:y}),extensionsResource:e.extensionsResource,cacheHome:e.cacheHome,useDefaultFlags:e.useDefaultFlags,isTransient:e.isTransient}}async getProfileToExport(){let e=this.profile.name;return this.profile.isDefault&&(e=await this.quickInputService.input({placeHolder:a("export profile name","Name the profile"),title:a("export profile title","Export Profile"),async validateInput(t){if(!t.trim())return a("profile name required","Profile name must be provided.")}}),!e)?null:super.getProfileTemplate(e,this.profile.icon)}};m=h([l(2,x),l(3,_),l(4,q)],m),le(Se,P,oe.Delayed);export{P as UserDataProfileImportExportService};
