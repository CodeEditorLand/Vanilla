var p=Object.defineProperty;var S=Object.getOwnPropertyDescriptor;var l=(n,t,e,a)=>{for(var r=a>1?void 0:a?S(t,e):t,i=n.length-1,o;i>=0;i--)(o=n[i])&&(r=(a?o(t,e,r):o(r))||r);return a&&r&&p(t,e,r),r},g=(n,t)=>(e,a)=>t(e,a,n);import{Emitter as m,Event as D}from"../../../../base/common/event.js";import{DisposableStore as c}from"../../../../base/common/lifecycle.js";import{InstantiationType as d,registerSingleton as I}from"../../../../platform/instantiation/common/extensions.js";import{ILogService as P}from"../../../../platform/log/common/log.js";import{IStorageService as u,StorageScope as f,isProfileUsingDefaultStorage as v}from"../../../../platform/storage/common/storage.js";import{AbstractUserDataProfileStorageService as C,IUserDataProfileStorageService as y}from"../../../../platform/userDataProfile/common/userDataProfileStorageService.js";import{IndexedDBStorageDatabase as h}from"../../storage/browser/storageService.js";import{IUserDataProfileService as b}from"../common/userDataProfile.js";let s=class extends C{constructor(e,a,r){super(!0,e);this.userDataProfileService=a;this.logService=r;const i=this._register(new c);this._register(D.filter(e.onDidChangeTarget,o=>o.scope===f.PROFILE,i)(()=>this.onDidChangeStorageTargetInCurrentProfile())),this._register(e.onDidChangeValue(f.PROFILE,void 0,i)(o=>this.onDidChangeStorageValueInCurrentProfile(o)))}_onDidChange=this._register(new m);onDidChange=this._onDidChange.event;onDidChangeStorageTargetInCurrentProfile(){this._onDidChange.fire({targetChanges:[this.userDataProfileService.currentProfile],valueChanges:[]})}onDidChangeStorageValueInCurrentProfile(e){this._onDidChange.fire({targetChanges:[],valueChanges:[{profile:this.userDataProfileService.currentProfile,changes:[e]}]})}createStorageDatabase(e){return v(e)?h.createApplicationStorage(this.logService):h.createProfileStorage(e,this.logService)}};s=l([g(0,u),g(1,b),g(2,P)],s),I(y,s,d.Delayed);export{s as UserDataProfileStorageService};
