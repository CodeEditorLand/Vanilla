{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/userDataProfile/browser/userDataProfileImportExportService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport \"./media/userDataProfileView.css\";\nimport {\n\ttype CancelablePromise,\n\tcreateCancelablePromise,\n} from \"../../../../base/common/async.js\";\nimport { VSBuffer } from \"../../../../base/common/buffer.js\";\nimport { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport { Emitter } from \"../../../../base/common/event.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n\ttoDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport { joinPath } from \"../../../../base/common/resources.js\";\nimport Severity from \"../../../../base/common/severity.js\";\nimport { escapeRegExpCharacters } from \"../../../../base/common/strings.js\";\nimport { type Mutable, isUndefined } from \"../../../../base/common/types.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { IClipboardService } from \"../../../../platform/clipboard/common/clipboardService.js\";\nimport {\n\tIDialogService,\n\tIFileDialogService,\n\ttype IPromptButton,\n} from \"../../../../platform/dialogs/common/dialogs.js\";\nimport { IFileService } from \"../../../../platform/files/common/files.js\";\nimport { InMemoryFileSystemProvider } from \"../../../../platform/files/common/inMemoryFilesystemProvider.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IOpenerService } from \"../../../../platform/opener/common/opener.js\";\nimport { IProductService } from \"../../../../platform/product/common/productService.js\";\nimport {\n\tIProgressService,\n\tProgressLocation,\n} from \"../../../../platform/progress/common/progress.js\";\nimport {\n\tIQuickInputService,\n\ttype QuickPickItem,\n} from \"../../../../platform/quickinput/common/quickInput.js\";\nimport {\n\tIRequestService,\n\tasText,\n} from \"../../../../platform/request/common/request.js\";\nimport { IUriIdentityService } from \"../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport {\n\ttype IUserDataProfile,\n\ttype IUserDataProfileOptions,\n\tIUserDataProfilesService,\n\ttype ProfileResourceType,\n\ttype ProfileResourceTypeFlags,\n} from \"../../../../platform/userDataProfile/common/userDataProfile.js\";\nimport type {\n\tITreeItem,\n\tITreeViewDataProvider,\n} from \"../../../common/views.js\";\nimport { IExtensionService } from \"../../extensions/common/extensions.js\";\nimport { ITextFileService } from \"../../textfile/common/textfiles.js\";\nimport {\n\ttype IProfileImportOptions,\n\ttype IProfileResourceTreeItem,\n\ttype ISaveProfileResult,\n\ttype IUserDataProfileContentHandler,\n\ttype IUserDataProfileCreateOptions,\n\tIUserDataProfileImportExportService,\n\tIUserDataProfileManagementService,\n\tIUserDataProfileService,\n\tPROFILES_CATEGORY,\n\tPROFILE_EXTENSION,\n\tPROFILE_FILTER,\n\tPROFILE_URL_AUTHORITY,\n\tPROFILE_URL_AUTHORITY_PREFIX,\n\tisProfileURL,\n\ttoUserDataProfileUri,\n} from \"../common/userDataProfile.js\";\nimport {\n\tExtensionsResource,\n\tExtensionsResourceExportTreeItem,\n\tExtensionsResourceTreeItem,\n} from \"./extensionsResource.js\";\nimport {\n\tGlobalStateResource,\n\tGlobalStateResourceExportTreeItem,\n\tGlobalStateResourceTreeItem,\n} from \"./globalStateResource.js\";\nimport {\n\tKeybindingsResource,\n\tKeybindingsResourceTreeItem,\n} from \"./keybindingsResource.js\";\nimport {\n\tSettingsResource,\n\tSettingsResourceTreeItem,\n} from \"./settingsResource.js\";\nimport {\n\tSnippetsResource,\n\tSnippetsResourceTreeItem,\n} from \"./snippetsResource.js\";\nimport { TasksResource, TasksResourceTreeItem } from \"./tasksResource.js\";\n\ninterface IUserDataProfileTemplate {\n\treadonly name: string;\n\treadonly icon?: string;\n\treadonly settings?: string;\n\treadonly keybindings?: string;\n\treadonly tasks?: string;\n\treadonly snippets?: string;\n\treadonly globalState?: string;\n\treadonly extensions?: string;\n}\n\nfunction isUserDataProfileTemplate(\n\tthing: unknown,\n): thing is IUserDataProfileTemplate {\n\tconst candidate = thing as IUserDataProfileTemplate | undefined;\n\n\treturn !!(\n\t\tcandidate &&\n\t\ttypeof candidate === \"object\" &&\n\t\tcandidate.name &&\n\t\ttypeof candidate.name === \"string\" &&\n\t\t(isUndefined(candidate.icon) || typeof candidate.icon === \"string\") &&\n\t\t(isUndefined(candidate.settings) ||\n\t\t\ttypeof candidate.settings === \"string\") &&\n\t\t(isUndefined(candidate.globalState) ||\n\t\t\ttypeof candidate.globalState === \"string\") &&\n\t\t(isUndefined(candidate.extensions) ||\n\t\t\ttypeof candidate.extensions === \"string\")\n\t);\n}\n\nexport class UserDataProfileImportExportService\n\textends Disposable\n\timplements IUserDataProfileImportExportService\n{\n\treadonly _serviceBrand: undefined;\n\n\tprivate profileContentHandlers = new Map<\n\t\tstring,\n\t\tIUserDataProfileContentHandler\n\t>();\n\n\tprivate readonly fileUserDataProfileContentHandler: FileUserDataProfileContentHandler;\n\n\tconstructor(\n\t\t@IInstantiationService\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t\t@IUserDataProfileService\n\t\tprivate readonly userDataProfileService: IUserDataProfileService,\n\t\t@IUserDataProfileManagementService\n\t\tprivate readonly userDataProfileManagementService: IUserDataProfileManagementService,\n\t\t@IUserDataProfilesService\n\t\tprivate readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@IQuickInputService\n\t\tprivate readonly quickInputService: IQuickInputService,\n\t\t@IProgressService private readonly progressService: IProgressService,\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t\t@IClipboardService private readonly clipboardService: IClipboardService,\n\t\t@IOpenerService private readonly openerService: IOpenerService,\n\t\t@IRequestService private readonly requestService: IRequestService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IUriIdentityService\n\t\tprivate readonly uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper();\n\t\tthis.registerProfileContentHandler(\n\t\t\tSchemas.file,\n\t\t\t(this.fileUserDataProfileContentHandler =\n\t\t\t\tinstantiationService.createInstance(\n\t\t\t\t\tFileUserDataProfileContentHandler,\n\t\t\t\t)),\n\t\t);\n\t}\n\n\tregisterProfileContentHandler(\n\t\tid: string,\n\t\tprofileContentHandler: IUserDataProfileContentHandler,\n\t): IDisposable {\n\t\tif (this.profileContentHandlers.has(id)) {\n\t\t\tthrow new Error(\n\t\t\t\t`Profile content handler with id '${id}' already registered.`,\n\t\t\t);\n\t\t}\n\t\tthis.profileContentHandlers.set(id, profileContentHandler);\n\t\treturn toDisposable(() => this.unregisterProfileContentHandler(id));\n\t}\n\n\tunregisterProfileContentHandler(id: string): void {\n\t\tthis.profileContentHandlers.delete(id);\n\t}\n\n\tasync createFromProfile(\n\t\tfrom: IUserDataProfile,\n\t\toptions: IUserDataProfileCreateOptions,\n\t\ttoken: CancellationToken,\n\t): Promise<IUserDataProfile | undefined> {\n\t\tconst disposables = new DisposableStore();\n\t\tlet creationPromise: CancelablePromise<void>;\n\t\tdisposables.add(\n\t\t\ttoken.onCancellationRequested(() => creationPromise.cancel()),\n\t\t);\n\t\tlet profile: IUserDataProfile | undefined;\n\t\treturn this.progressService\n\t\t\t.withProgress(\n\t\t\t\t{\n\t\t\t\t\tlocation: ProgressLocation.Notification,\n\t\t\t\t\tdelay: 500,\n\t\t\t\t\tsticky: true,\n\t\t\t\t\tcancellable: true,\n\t\t\t\t},\n\t\t\t\tasync (progress) => {\n\t\t\t\t\tconst reportProgress = (message: string) =>\n\t\t\t\t\t\tprogress.report({\n\t\t\t\t\t\t\tmessage: localize(\n\t\t\t\t\t\t\t\t\"create from profile\",\n\t\t\t\t\t\t\t\t\"Create Profile: {0}\",\n\t\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t});\n\t\t\t\t\tcreationPromise = createCancelablePromise(async (token) => {\n\t\t\t\t\t\tconst userDataProfilesExportState = disposables.add(\n\t\t\t\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\t\t\t\tUserDataProfileExportState,\n\t\t\t\t\t\t\t\tfrom,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t...options?.resourceTypeFlags,\n\t\t\t\t\t\t\t\t\textensions: false,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst profileTemplate =\n\t\t\t\t\t\t\tawait userDataProfilesExportState.getProfileTemplate(\n\t\t\t\t\t\t\t\toptions.name ?? from.name,\n\t\t\t\t\t\t\t\toptions?.icon,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tprofile = await this.getProfileToImport(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t...profileTemplate,\n\t\t\t\t\t\t\t\tname: options.name ?? profileTemplate.name,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t!!options.transient,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (!profile) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tawait this.applyProfileTemplate(\n\t\t\t\t\t\t\tprofileTemplate,\n\t\t\t\t\t\t\tprofile,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\treportProgress,\n\t\t\t\t\t\t\ttoken,\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait creationPromise;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tprofile &&\n\t\t\t\t\t\t\t(options?.resourceTypeFlags?.extensions ?? true)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treportProgress(\n\t\t\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\t\t\"installing extensions\",\n\t\t\t\t\t\t\t\t\t\"Installing Extensions...\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tawait this.instantiationService\n\t\t\t\t\t\t\t\t.createInstance(ExtensionsResource)\n\t\t\t\t\t\t\t\t.copy(from, profile, false);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (profile) {\n\t\t\t\t\t\t\tawait this.userDataProfilesService.removeProfile(\n\t\t\t\t\t\t\t\tprofile,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tprofile = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn profile;\n\t\t\t\t},\n\t\t\t\t() => creationPromise.cancel(),\n\t\t\t)\n\t\t\t.finally(() => disposables.dispose());\n\t}\n\n\tasync createProfileFromTemplate(\n\t\tprofileTemplate: IUserDataProfileTemplate,\n\t\toptions: IUserDataProfileCreateOptions,\n\t\ttoken: CancellationToken,\n\t): Promise<IUserDataProfile | undefined> {\n\t\tconst disposables = new DisposableStore();\n\t\tlet creationPromise: CancelablePromise<void>;\n\t\tdisposables.add(\n\t\t\ttoken.onCancellationRequested(() => creationPromise.cancel()),\n\t\t);\n\t\tlet profile: IUserDataProfile | undefined;\n\t\treturn this.progressService\n\t\t\t.withProgress(\n\t\t\t\t{\n\t\t\t\t\tlocation: ProgressLocation.Notification,\n\t\t\t\t\tdelay: 500,\n\t\t\t\t\tsticky: true,\n\t\t\t\t\tcancellable: true,\n\t\t\t\t},\n\t\t\t\tasync (progress) => {\n\t\t\t\t\tconst reportProgress = (message: string) =>\n\t\t\t\t\t\tprogress.report({\n\t\t\t\t\t\t\tmessage: localize(\n\t\t\t\t\t\t\t\t\"create from profile\",\n\t\t\t\t\t\t\t\t\"Create Profile: {0}\",\n\t\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t});\n\t\t\t\t\tcreationPromise = createCancelablePromise(async (token) => {\n\t\t\t\t\t\tprofile = await this.getProfileToImport(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t...profileTemplate,\n\t\t\t\t\t\t\t\tname: options.name ?? profileTemplate.name,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t!!options.transient,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (!profile) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tawait this.applyProfileTemplate(\n\t\t\t\t\t\t\tprofileTemplate,\n\t\t\t\t\t\t\tprofile,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\treportProgress,\n\t\t\t\t\t\t\ttoken,\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait creationPromise;\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (profile) {\n\t\t\t\t\t\t\tawait this.userDataProfilesService.removeProfile(\n\t\t\t\t\t\t\t\tprofile,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tprofile = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn profile;\n\t\t\t\t},\n\t\t\t\t() => creationPromise.cancel(),\n\t\t\t)\n\t\t\t.finally(() => disposables.dispose());\n\t}\n\n\tprivate async applyProfileTemplate(\n\t\tprofileTemplate: IUserDataProfileTemplate,\n\t\tprofile: IUserDataProfile,\n\t\toptions: IUserDataProfileCreateOptions,\n\t\treportProgress: (message: string) => void,\n\t\ttoken: CancellationToken,\n\t): Promise<void> {\n\t\tif (\n\t\t\tprofileTemplate.settings &&\n\t\t\t(options.resourceTypeFlags?.settings ?? true) &&\n\t\t\t!profile.useDefaultFlags?.settings\n\t\t) {\n\t\t\treportProgress(\n\t\t\t\tlocalize(\"creating settings\", \"Creating Settings...\"),\n\t\t\t);\n\t\t\tawait this.instantiationService\n\t\t\t\t.createInstance(SettingsResource)\n\t\t\t\t.apply(profileTemplate.settings, profile);\n\t\t}\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\t\tif (\n\t\t\tprofileTemplate.keybindings &&\n\t\t\t(options.resourceTypeFlags?.keybindings ?? true) &&\n\t\t\t!profile.useDefaultFlags?.keybindings\n\t\t) {\n\t\t\treportProgress(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"create keybindings\",\n\t\t\t\t\t\"Creating Keyboard Shortcuts...\",\n\t\t\t\t),\n\t\t\t);\n\t\t\tawait this.instantiationService\n\t\t\t\t.createInstance(KeybindingsResource)\n\t\t\t\t.apply(profileTemplate.keybindings, profile);\n\t\t}\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\t\tif (\n\t\t\tprofileTemplate.tasks &&\n\t\t\t(options.resourceTypeFlags?.tasks ?? true) &&\n\t\t\t!profile.useDefaultFlags?.tasks\n\t\t) {\n\t\t\treportProgress(localize(\"create tasks\", \"Creating Tasks...\"));\n\t\t\tawait this.instantiationService\n\t\t\t\t.createInstance(TasksResource)\n\t\t\t\t.apply(profileTemplate.tasks, profile);\n\t\t}\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\t\tif (\n\t\t\tprofileTemplate.snippets &&\n\t\t\t(options.resourceTypeFlags?.snippets ?? true) &&\n\t\t\t!profile.useDefaultFlags?.snippets\n\t\t) {\n\t\t\treportProgress(localize(\"create snippets\", \"Creating Snippets...\"));\n\t\t\tawait this.instantiationService\n\t\t\t\t.createInstance(SnippetsResource)\n\t\t\t\t.apply(profileTemplate.snippets, profile);\n\t\t}\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\t\tif (\n\t\t\tprofileTemplate.globalState &&\n\t\t\t!profile.useDefaultFlags?.globalState\n\t\t) {\n\t\t\treportProgress(\n\t\t\t\tlocalize(\"applying global state\", \"Applying UI State...\"),\n\t\t\t);\n\t\t\tawait this.instantiationService\n\t\t\t\t.createInstance(GlobalStateResource)\n\t\t\t\t.apply(profileTemplate.globalState, profile);\n\t\t}\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\t\tif (\n\t\t\tprofileTemplate.extensions &&\n\t\t\t(options.resourceTypeFlags?.extensions ?? true) &&\n\t\t\t!profile.useDefaultFlags?.extensions\n\t\t) {\n\t\t\treportProgress(\n\t\t\t\tlocalize(\"installing extensions\", \"Installing Extensions...\"),\n\t\t\t);\n\t\t\tawait this.instantiationService\n\t\t\t\t.createInstance(ExtensionsResource)\n\t\t\t\t.apply(\n\t\t\t\t\tprofileTemplate.extensions,\n\t\t\t\t\tprofile,\n\t\t\t\t\treportProgress,\n\t\t\t\t\ttoken,\n\t\t\t\t);\n\t\t}\n\t}\n\n\tasync exportProfile(\n\t\tprofile: IUserDataProfile,\n\t\texportFlags?: ProfileResourceTypeFlags,\n\t): Promise<void> {\n\t\tconst disposables = new DisposableStore();\n\t\ttry {\n\t\t\tconst userDataProfilesExportState = disposables.add(\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tUserDataProfileExportState,\n\t\t\t\t\tprofile,\n\t\t\t\t\texportFlags,\n\t\t\t\t),\n\t\t\t);\n\t\t\tawait this.doExportProfile(\n\t\t\t\tuserDataProfilesExportState,\n\t\t\t\tProgressLocation.Notification,\n\t\t\t);\n\t\t} finally {\n\t\t\tdisposables.dispose();\n\t\t}\n\t}\n\n\tasync createTroubleshootProfile(): Promise<void> {\n\t\tconst userDataProfilesExportState =\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tUserDataProfileExportState,\n\t\t\t\tthis.userDataProfileService.currentProfile,\n\t\t\t\tundefined,\n\t\t\t);\n\t\ttry {\n\t\t\tconst profileTemplate =\n\t\t\t\tawait userDataProfilesExportState.getProfileTemplate(\n\t\t\t\t\tlocalize(\"troubleshoot issue\", \"Troubleshoot Issue\"),\n\t\t\t\t\tundefined,\n\t\t\t\t);\n\t\t\tawait this.progressService.withProgress(\n\t\t\t\t{\n\t\t\t\t\tlocation: ProgressLocation.Notification,\n\t\t\t\t\tdelay: 1000,\n\t\t\t\t\tsticky: true,\n\t\t\t\t},\n\t\t\t\tasync (progress) => {\n\t\t\t\t\tconst reportProgress = (message: string) =>\n\t\t\t\t\t\tprogress.report({\n\t\t\t\t\t\t\tmessage: localize(\n\t\t\t\t\t\t\t\t\"troubleshoot profile progress\",\n\t\t\t\t\t\t\t\t\"Setting up Troubleshoot Profile: {0}\",\n\t\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t});\n\t\t\t\t\tconst profile = await this.doCreateProfile(\n\t\t\t\t\t\tprofileTemplate,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tuseDefaultFlags:\n\t\t\t\t\t\t\t\tthis.userDataProfileService.currentProfile\n\t\t\t\t\t\t\t\t\t.useDefaultFlags,\n\t\t\t\t\t\t},\n\t\t\t\t\t\treportProgress,\n\t\t\t\t\t);\n\t\t\t\t\tif (profile) {\n\t\t\t\t\t\treportProgress(\n\t\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\t\"progress extensions\",\n\t\t\t\t\t\t\t\t\"Applying Extensions...\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tawait this.instantiationService\n\t\t\t\t\t\t\t.createInstance(ExtensionsResource)\n\t\t\t\t\t\t\t.copy(\n\t\t\t\t\t\t\t\tthis.userDataProfileService.currentProfile,\n\t\t\t\t\t\t\t\tprofile,\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\treportProgress(\n\t\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\t\"switching profile\",\n\t\t\t\t\t\t\t\t\"Switching Profile...\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tawait this.userDataProfileManagementService.switchProfile(\n\t\t\t\t\t\t\tprofile,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\t\t} finally {\n\t\t\tuserDataProfilesExportState.dispose();\n\t\t}\n\t}\n\n\tprivate async doExportProfile(\n\t\tuserDataProfilesExportState: UserDataProfileExportState,\n\t\tlocation: ProgressLocation | string,\n\t): Promise<void> {\n\t\tconst profile = await userDataProfilesExportState.getProfileToExport();\n\t\tif (!profile) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst disposables = new DisposableStore();\n\n\t\ttry {\n\t\t\tawait this.progressService.withProgress(\n\t\t\t\t{\n\t\t\t\t\tlocation,\n\t\t\t\t\ttitle: localize(\n\t\t\t\t\t\t\"profiles.exporting\",\n\t\t\t\t\t\t\"{0}: Exporting...\",\n\t\t\t\t\t\tPROFILES_CATEGORY.value,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tasync (progress) => {\n\t\t\t\t\tconst id = await this.pickProfileContentHandler(\n\t\t\t\t\t\tprofile.name,\n\t\t\t\t\t);\n\t\t\t\t\tif (!id) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconst profileContentHandler =\n\t\t\t\t\t\tthis.profileContentHandlers.get(id);\n\t\t\t\t\tif (!profileContentHandler) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconst saveResult = await profileContentHandler.saveProfile(\n\t\t\t\t\t\tprofile.name.replace(\"/\", \"-\"),\n\t\t\t\t\t\tJSON.stringify(profile),\n\t\t\t\t\t\tCancellationToken.None,\n\t\t\t\t\t);\n\t\t\t\t\tif (!saveResult) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconst message = localize(\n\t\t\t\t\t\t\"export success\",\n\t\t\t\t\t\t\"Profile '{0}' was exported successfully.\",\n\t\t\t\t\t\tprofile.name,\n\t\t\t\t\t);\n\t\t\t\t\tif (profileContentHandler.extensionId) {\n\t\t\t\t\t\tconst buttons: IPromptButton<void>[] = [];\n\t\t\t\t\t\tconst link = this.productService.webUrl\n\t\t\t\t\t\t\t? `${this.productService.webUrl}/${PROFILE_URL_AUTHORITY}/${id}/${saveResult.id}`\n\t\t\t\t\t\t\t: toUserDataProfileUri(\n\t\t\t\t\t\t\t\t\t`/${id}/${saveResult.id}`,\n\t\t\t\t\t\t\t\t\tthis.productService,\n\t\t\t\t\t\t\t\t).toString();\n\t\t\t\t\t\tbuttons.push({\n\t\t\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tkey: \"copy\",\n\t\t\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"&&Copy Link\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\trun: () => this.clipboardService.writeText(link),\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (this.productService.webUrl) {\n\t\t\t\t\t\t\tbuttons.push({\n\t\t\t\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tkey: \"open\",\n\t\t\t\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"&&Open Link\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\trun: async () => {\n\t\t\t\t\t\t\t\t\tawait this.openerService.open(link);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbuttons.push({\n\t\t\t\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tkey: \"open in\",\n\t\t\t\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"&&Open in {0}\",\n\t\t\t\t\t\t\t\t\tprofileContentHandler.name,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\trun: async () => {\n\t\t\t\t\t\t\t\t\tawait this.openerService.open(\n\t\t\t\t\t\t\t\t\t\tsaveResult.link.toString(),\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tawait this.dialogService.prompt({\n\t\t\t\t\t\t\ttype: Severity.Info,\n\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\tbuttons,\n\t\t\t\t\t\t\tcancelButton: localize(\"close\", \"Close\"),\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tawait this.dialogService.info(message);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\t\t} finally {\n\t\t\tdisposables.dispose();\n\t\t}\n\t}\n\n\tasync resolveProfileTemplate(\n\t\turi: URI,\n\t\toptions?: IProfileImportOptions,\n\t): Promise<IUserDataProfileTemplate | null> {\n\t\tconst profileContent = await this.resolveProfileContent(uri);\n\t\tif (profileContent === null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet profileTemplate: Mutable<IUserDataProfileTemplate>;\n\n\t\ttry {\n\t\t\tprofileTemplate = JSON.parse(profileContent);\n\t\t} catch (error) {\n\t\t\tthrow new Error(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"invalid profile content\",\n\t\t\t\t\t\"This profile is not valid.\",\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\tif (!isUserDataProfileTemplate(profileTemplate)) {\n\t\t\tthrow new Error(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"invalid profile content\",\n\t\t\t\t\t\"This profile is not valid.\",\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\tif (options?.name) {\n\t\t\tprofileTemplate.name = options.name;\n\t\t}\n\n\t\tif (options?.icon) {\n\t\t\tprofileTemplate.icon = options.icon;\n\t\t}\n\n\t\tif (options?.resourceTypeFlags?.settings === false) {\n\t\t\tprofileTemplate.settings = undefined;\n\t\t}\n\n\t\tif (options?.resourceTypeFlags?.keybindings === false) {\n\t\t\tprofileTemplate.keybindings = undefined;\n\t\t}\n\n\t\tif (options?.resourceTypeFlags?.snippets === false) {\n\t\t\tprofileTemplate.snippets = undefined;\n\t\t}\n\n\t\tif (options?.resourceTypeFlags?.tasks === false) {\n\t\t\tprofileTemplate.tasks = undefined;\n\t\t}\n\n\t\tif (options?.resourceTypeFlags?.globalState === false) {\n\t\t\tprofileTemplate.globalState = undefined;\n\t\t}\n\n\t\tif (options?.resourceTypeFlags?.extensions === false) {\n\t\t\tprofileTemplate.extensions = undefined;\n\t\t}\n\n\t\treturn profileTemplate;\n\t}\n\n\tprivate async doCreateProfile(\n\t\tprofileTemplate: IUserDataProfileTemplate,\n\t\ttemporaryProfile: boolean,\n\t\textensions: boolean,\n\t\toptions: IUserDataProfileOptions | undefined,\n\t\tprogress: (message: string) => void,\n\t): Promise<IUserDataProfile | undefined> {\n\t\tconst profile = await this.getProfileToImport(\n\t\t\tprofileTemplate,\n\t\t\ttemporaryProfile,\n\t\t\toptions,\n\t\t);\n\t\tif (!profile) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (profileTemplate.settings && !profile.useDefaultFlags?.settings) {\n\t\t\tprogress(localize(\"progress settings\", \"Applying Settings...\"));\n\t\t\tawait this.instantiationService\n\t\t\t\t.createInstance(SettingsResource)\n\t\t\t\t.apply(profileTemplate.settings, profile);\n\t\t}\n\t\tif (\n\t\t\tprofileTemplate.keybindings &&\n\t\t\t!profile.useDefaultFlags?.keybindings\n\t\t) {\n\t\t\tprogress(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"progress keybindings\",\n\t\t\t\t\t\"Applying Keyboard Shortcuts...\",\n\t\t\t\t),\n\t\t\t);\n\t\t\tawait this.instantiationService\n\t\t\t\t.createInstance(KeybindingsResource)\n\t\t\t\t.apply(profileTemplate.keybindings, profile);\n\t\t}\n\t\tif (profileTemplate.tasks && !profile.useDefaultFlags?.tasks) {\n\t\t\tprogress(localize(\"progress tasks\", \"Applying Tasks...\"));\n\t\t\tawait this.instantiationService\n\t\t\t\t.createInstance(TasksResource)\n\t\t\t\t.apply(profileTemplate.tasks, profile);\n\t\t}\n\t\tif (profileTemplate.snippets && !profile.useDefaultFlags?.snippets) {\n\t\t\tprogress(localize(\"progress snippets\", \"Applying Snippets...\"));\n\t\t\tawait this.instantiationService\n\t\t\t\t.createInstance(SnippetsResource)\n\t\t\t\t.apply(profileTemplate.snippets, profile);\n\t\t}\n\t\tif (\n\t\t\tprofileTemplate.globalState &&\n\t\t\t!profile.useDefaultFlags?.globalState\n\t\t) {\n\t\t\tprogress(localize(\"progress global state\", \"Applying State...\"));\n\t\t\tawait this.instantiationService\n\t\t\t\t.createInstance(GlobalStateResource)\n\t\t\t\t.apply(profileTemplate.globalState, profile);\n\t\t}\n\t\tif (\n\t\t\tprofileTemplate.extensions &&\n\t\t\textensions &&\n\t\t\t!profile.useDefaultFlags?.extensions\n\t\t) {\n\t\t\tprogress(localize(\"progress extensions\", \"Applying Extensions...\"));\n\t\t\tawait this.instantiationService\n\t\t\t\t.createInstance(ExtensionsResource)\n\t\t\t\t.apply(profileTemplate.extensions, profile);\n\t\t}\n\n\t\treturn profile;\n\t}\n\n\tprivate async resolveProfileContent(resource: URI): Promise<string | null> {\n\t\tif (await this.fileUserDataProfileContentHandler.canHandle(resource)) {\n\t\t\treturn this.fileUserDataProfileContentHandler.readProfile(\n\t\t\t\tresource,\n\t\t\t\tCancellationToken.None,\n\t\t\t);\n\t\t}\n\n\t\tif (isProfileURL(resource)) {\n\t\t\tlet handlerId: string, idOrUri: string | URI;\n\t\t\tif (resource.authority === PROFILE_URL_AUTHORITY) {\n\t\t\t\tidOrUri = this.uriIdentityService.extUri.basename(resource);\n\t\t\t\thandlerId = this.uriIdentityService.extUri.basename(\n\t\t\t\t\tthis.uriIdentityService.extUri.dirname(resource),\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\thandlerId = resource.authority.substring(\n\t\t\t\t\tPROFILE_URL_AUTHORITY_PREFIX.length,\n\t\t\t\t);\n\t\t\t\tidOrUri = URI.parse(resource.path.substring(1));\n\t\t\t}\n\t\t\tawait this.extensionService.activateByEvent(\n\t\t\t\t`onProfile:${handlerId}`,\n\t\t\t);\n\t\t\tconst profileContentHandler =\n\t\t\t\tthis.profileContentHandlers.get(handlerId);\n\t\t\tif (profileContentHandler) {\n\t\t\t\treturn profileContentHandler.readProfile(\n\t\t\t\t\tidOrUri,\n\t\t\t\t\tCancellationToken.None,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tawait this.extensionService.activateByEvent(\"onProfile\");\n\t\tfor (const profileContentHandler of this.profileContentHandlers.values()) {\n\t\t\tconst content = await profileContentHandler.readProfile(\n\t\t\t\tresource,\n\t\t\t\tCancellationToken.None,\n\t\t\t);\n\t\t\tif (content !== null) {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}\n\n\t\tconst context = await this.requestService.request(\n\t\t\t{ type: \"GET\", url: resource.toString(true) },\n\t\t\tCancellationToken.None,\n\t\t);\n\t\tif (context.res.statusCode === 200) {\n\t\t\treturn await asText(context);\n\t\t} else {\n\t\t\tconst message = await asText(context);\n\t\t\tthrow new Error(\n\t\t\t\t`Failed to get profile from URL: ${resource.toString()}. Status code: ${context.res.statusCode}. Message: ${message}`,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate async pickProfileContentHandler(\n\t\tname: string,\n\t): Promise<string | undefined> {\n\t\tawait this.extensionService.activateByEvent(\"onProfile\");\n\t\tif (this.profileContentHandlers.size === 1) {\n\t\t\treturn this.profileContentHandlers.keys().next().value;\n\t\t}\n\t\tconst options: QuickPickItem[] = [];\n\t\tfor (const [id, profileContentHandler] of this.profileContentHandlers) {\n\t\t\toptions.push({\n\t\t\t\tid,\n\t\t\t\tlabel: profileContentHandler.name,\n\t\t\t\tdescription: profileContentHandler.description,\n\t\t\t});\n\t\t}\n\t\tconst result = await this.quickInputService.pick(options.reverse(), {\n\t\t\ttitle: localize(\n\t\t\t\t\"select profile content handler\",\n\t\t\t\t\"Export '{0}' profile as...\",\n\t\t\t\tname,\n\t\t\t),\n\t\t\thideInput: true,\n\t\t});\n\t\treturn result?.id;\n\t}\n\n\tprivate async getProfileToImport(\n\t\tprofileTemplate: IUserDataProfileTemplate,\n\t\ttemp: boolean,\n\t\toptions: IUserDataProfileOptions | undefined,\n\t): Promise<IUserDataProfile | undefined> {\n\t\tconst profileName = profileTemplate.name;\n\t\tconst profile = this.userDataProfilesService.profiles.find(\n\t\t\t(p) => p.name === profileName,\n\t\t);\n\t\tif (profile) {\n\t\t\tif (temp) {\n\t\t\t\treturn this.userDataProfilesService.createNamedProfile(\n\t\t\t\t\t`${profileName} ${this.getProfileNameIndex(profileName)}`,\n\t\t\t\t\t{ ...options, transient: temp },\n\t\t\t\t);\n\t\t\t}\n\t\t\tconst { confirmed } = await this.dialogService.confirm({\n\t\t\t\ttype: Severity.Info,\n\t\t\t\tmessage: localize(\n\t\t\t\t\t\"profile already exists\",\n\t\t\t\t\t\"Profile with name '{0}' already exists. Do you want to replace its contents?\",\n\t\t\t\t\tprofileName,\n\t\t\t\t),\n\t\t\t\tprimaryButton: localize(\n\t\t\t\t\t{ key: \"overwrite\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\t\"&&Replace\",\n\t\t\t\t),\n\t\t\t});\n\t\t\tif (!confirmed) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn profile.isDefault\n\t\t\t\t? profile\n\t\t\t\t: this.userDataProfilesService.updateProfile(profile, options);\n\t\t} else {\n\t\t\treturn this.userDataProfilesService.createNamedProfile(\n\t\t\t\tprofileName,\n\t\t\t\t{ ...options, transient: temp },\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate getProfileNameIndex(name: string): number {\n\t\tconst nameRegEx = new RegExp(\n\t\t\t`${escapeRegExpCharacters(name)}\\\\s(\\\\d+)`,\n\t\t);\n\t\tlet nameIndex = 0;\n\t\tfor (const profile of this.userDataProfilesService.profiles) {\n\t\t\tconst matches = nameRegEx.exec(profile.name);\n\t\t\tconst index = matches ? Number.parseInt(matches[1]) : 0;\n\t\t\tnameIndex = index > nameIndex ? index : nameIndex;\n\t\t}\n\t\treturn nameIndex + 1;\n\t}\n}\n\nclass FileUserDataProfileContentHandler\n\timplements IUserDataProfileContentHandler\n{\n\treadonly name = localize(\"local\", \"Local\");\n\treadonly description = localize(\"file\", \"file\");\n\n\tconstructor(\n\t\t@IFileDialogService\n\t\tprivate readonly fileDialogService: IFileDialogService,\n\t\t@IUriIdentityService\n\t\tprivate readonly uriIdentityService: IUriIdentityService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@ITextFileService private readonly textFileService: ITextFileService,\n\t) {}\n\n\tasync saveProfile(\n\t\tname: string,\n\t\tcontent: string,\n\t\ttoken: CancellationToken,\n\t): Promise<ISaveProfileResult | null> {\n\t\tconst link = await this.fileDialogService.showSaveDialog({\n\t\t\ttitle: localize(\"export profile dialog\", \"Save Profile\"),\n\t\t\tfilters: PROFILE_FILTER,\n\t\t\tdefaultUri: this.uriIdentityService.extUri.joinPath(\n\t\t\t\tawait this.fileDialogService.defaultFilePath(),\n\t\t\t\t`${name}.${PROFILE_EXTENSION}`,\n\t\t\t),\n\t\t});\n\t\tif (!link) {\n\t\t\treturn null;\n\t\t}\n\t\tawait this.textFileService.create([\n\t\t\t{ resource: link, value: content, options: { overwrite: true } },\n\t\t]);\n\t\treturn { link, id: link.toString() };\n\t}\n\n\tasync canHandle(uri: URI): Promise<boolean> {\n\t\treturn (\n\t\t\turi.scheme !== Schemas.http &&\n\t\t\turi.scheme !== Schemas.https &&\n\t\t\turi.scheme !== this.productService.urlProtocol &&\n\t\t\t(await this.fileService.canHandleResource(uri))\n\t\t);\n\t}\n\n\tasync readProfile(\n\t\turi: URI,\n\t\ttoken: CancellationToken,\n\t): Promise<string | null> {\n\t\tif (await this.canHandle(uri)) {\n\t\t\treturn (\n\t\t\t\tawait this.fileService.readFile(uri, undefined, token)\n\t\t\t).value.toString();\n\t\t}\n\t\treturn null;\n\t}\n\n\tasync selectProfile(): Promise<URI | null> {\n\t\tconst profileLocation = await this.fileDialogService.showOpenDialog({\n\t\t\tcanSelectFolders: false,\n\t\t\tcanSelectFiles: true,\n\t\t\tcanSelectMany: false,\n\t\t\tfilters: PROFILE_FILTER,\n\t\t\ttitle: localize(\"select profile\", \"Select Profile\"),\n\t\t});\n\t\treturn profileLocation ? profileLocation[0] : null;\n\t}\n}\n\nconst USER_DATA_PROFILE_EXPORT_SCHEME = \"userdataprofileexport\";\nconst USER_DATA_PROFILE_EXPORT_PREVIEW_SCHEME = \"userdataprofileexportpreview\";\n\nabstract class UserDataProfileImportExportState\n\textends Disposable\n\timplements ITreeViewDataProvider\n{\n\tprivate readonly _onDidChangeRoots = this._register(new Emitter<void>());\n\treadonly onDidChangeRoots = this._onDidChangeRoots.event;\n\n\tconstructor(\n\t\t@IQuickInputService\n\t\tprotected readonly quickInputService: IQuickInputService,\n\t) {\n\t\tsuper();\n\t}\n\n\tasync getChildren(element?: ITreeItem): Promise<ITreeItem[] | undefined> {\n\t\tif (element) {\n\t\t\tconst children = await (<IProfileResourceTreeItem>(\n\t\t\t\telement\n\t\t\t)).getChildren();\n\t\t\tif (children) {\n\t\t\t\tfor (const child of children) {\n\t\t\t\t\tif (child.parent.checkbox && child.checkbox) {\n\t\t\t\t\t\tchild.checkbox.isChecked =\n\t\t\t\t\t\t\tchild.parent.checkbox.isChecked &&\n\t\t\t\t\t\t\tchild.checkbox.isChecked;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn children;\n\t\t} else {\n\t\t\tthis.rootsPromise = undefined;\n\t\t\tthis._onDidChangeRoots.fire();\n\t\t\treturn this.getRoots();\n\t\t}\n\t}\n\n\tprivate roots: IProfileResourceTreeItem[] = [];\n\tprivate rootsPromise: Promise<IProfileResourceTreeItem[]> | undefined;\n\tgetRoots(): Promise<IProfileResourceTreeItem[]> {\n\t\tif (!this.rootsPromise) {\n\t\t\tthis.rootsPromise = (async () => {\n\t\t\t\tthis.roots = await this.fetchRoots();\n\t\t\t\tfor (const root of this.roots) {\n\t\t\t\t\troot.checkbox = {\n\t\t\t\t\t\tisChecked: !root.isFromDefaultProfile(),\n\t\t\t\t\t\ttooltip: localize(\n\t\t\t\t\t\t\t\"select\",\n\t\t\t\t\t\t\t\"Select {0}\",\n\t\t\t\t\t\t\troot.label.label,\n\t\t\t\t\t\t),\n\t\t\t\t\t\taccessibilityInformation: {\n\t\t\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\t\t\"select\",\n\t\t\t\t\t\t\t\t\"Select {0}\",\n\t\t\t\t\t\t\t\troot.label.label,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t\tif (root.isFromDefaultProfile()) {\n\t\t\t\t\t\troot.description = localize(\n\t\t\t\t\t\t\t\"from default\",\n\t\t\t\t\t\t\t\"From Default Profile\",\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this.roots;\n\t\t\t})();\n\t\t}\n\t\treturn this.rootsPromise;\n\t}\n\n\tisEnabled(resourceType?: ProfileResourceType): boolean {\n\t\tif (resourceType !== undefined) {\n\t\t\treturn this.roots.some(\n\t\t\t\t(root) => root.type === resourceType && this.isSelected(root),\n\t\t\t);\n\t\t}\n\t\treturn this.roots.some((root) => this.isSelected(root));\n\t}\n\n\tasync getProfileTemplate(\n\t\tname: string,\n\t\ticon: string | undefined,\n\t): Promise<IUserDataProfileTemplate> {\n\t\tconst roots = await this.getRoots();\n\t\tlet settings: string | undefined;\n\t\tlet keybindings: string | undefined;\n\t\tlet tasks: string | undefined;\n\t\tlet snippets: string | undefined;\n\t\tlet extensions: string | undefined;\n\t\tlet globalState: string | undefined;\n\t\tfor (const root of roots) {\n\t\t\tif (!this.isSelected(root)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (root instanceof SettingsResourceTreeItem) {\n\t\t\t\tsettings = await root.getContent();\n\t\t\t} else if (root instanceof KeybindingsResourceTreeItem) {\n\t\t\t\tkeybindings = await root.getContent();\n\t\t\t} else if (root instanceof TasksResourceTreeItem) {\n\t\t\t\ttasks = await root.getContent();\n\t\t\t} else if (root instanceof SnippetsResourceTreeItem) {\n\t\t\t\tsnippets = await root.getContent();\n\t\t\t} else if (root instanceof ExtensionsResourceTreeItem) {\n\t\t\t\textensions = await root.getContent();\n\t\t\t} else if (root instanceof GlobalStateResourceTreeItem) {\n\t\t\t\tglobalState = await root.getContent();\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tname,\n\t\t\ticon,\n\t\t\tsettings,\n\t\t\tkeybindings,\n\t\t\ttasks,\n\t\t\tsnippets,\n\t\t\textensions,\n\t\t\tglobalState,\n\t\t};\n\t}\n\n\tprivate isSelected(treeItem: IProfileResourceTreeItem): boolean {\n\t\tif (treeItem.checkbox) {\n\t\t\treturn (\n\t\t\t\ttreeItem.checkbox.isChecked ||\n\t\t\t\t!!treeItem.children?.some((child) => child.checkbox?.isChecked)\n\t\t\t);\n\t\t}\n\t\treturn true;\n\t}\n\n\tprotected abstract fetchRoots(): Promise<IProfileResourceTreeItem[]>;\n}\n\nclass UserDataProfileExportState extends UserDataProfileImportExportState {\n\tprivate readonly disposables = this._register(new DisposableStore());\n\n\tconstructor(\n\t\treadonly profile: IUserDataProfile,\n\t\tprivate readonly exportFlags: ProfileResourceTypeFlags | undefined,\n\t\t@IQuickInputService quickInputService: IQuickInputService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IInstantiationService\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper(quickInputService);\n\t}\n\n\tprotected async fetchRoots(): Promise<IProfileResourceTreeItem[]> {\n\t\tthis.disposables.clear();\n\t\tthis.disposables.add(\n\t\t\tthis.fileService.registerProvider(\n\t\t\t\tUSER_DATA_PROFILE_EXPORT_SCHEME,\n\t\t\t\tthis._register(new InMemoryFileSystemProvider()),\n\t\t\t),\n\t\t);\n\t\tconst previewFileSystemProvider = this._register(\n\t\t\tnew InMemoryFileSystemProvider(),\n\t\t);\n\t\tthis.disposables.add(\n\t\t\tthis.fileService.registerProvider(\n\t\t\t\tUSER_DATA_PROFILE_EXPORT_PREVIEW_SCHEME,\n\t\t\t\tpreviewFileSystemProvider,\n\t\t\t),\n\t\t);\n\t\tconst roots: IProfileResourceTreeItem[] = [];\n\t\tconst exportPreviewProfle = this.createExportPreviewProfile(\n\t\t\tthis.profile,\n\t\t);\n\n\t\tif (this.exportFlags?.settings ?? true) {\n\t\t\tconst settingsResource =\n\t\t\t\tthis.instantiationService.createInstance(SettingsResource);\n\t\t\tconst settingsContent = await settingsResource.getContent(\n\t\t\t\tthis.profile,\n\t\t\t);\n\t\t\tawait settingsResource.apply(settingsContent, exportPreviewProfle);\n\t\t\tconst settingsResourceTreeItem =\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tSettingsResourceTreeItem,\n\t\t\t\t\texportPreviewProfle,\n\t\t\t\t);\n\t\t\tif (await settingsResourceTreeItem.hasContent()) {\n\t\t\t\troots.push(settingsResourceTreeItem);\n\t\t\t}\n\t\t}\n\n\t\tif (this.exportFlags?.keybindings ?? true) {\n\t\t\tconst keybindingsResource =\n\t\t\t\tthis.instantiationService.createInstance(KeybindingsResource);\n\t\t\tconst keybindingsContent = await keybindingsResource.getContent(\n\t\t\t\tthis.profile,\n\t\t\t);\n\t\t\tawait keybindingsResource.apply(\n\t\t\t\tkeybindingsContent,\n\t\t\t\texportPreviewProfle,\n\t\t\t);\n\t\t\tconst keybindingsResourceTreeItem =\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tKeybindingsResourceTreeItem,\n\t\t\t\t\texportPreviewProfle,\n\t\t\t\t);\n\t\t\tif (await keybindingsResourceTreeItem.hasContent()) {\n\t\t\t\troots.push(keybindingsResourceTreeItem);\n\t\t\t}\n\t\t}\n\n\t\tif (this.exportFlags?.snippets ?? true) {\n\t\t\tconst snippetsResource =\n\t\t\t\tthis.instantiationService.createInstance(SnippetsResource);\n\t\t\tconst snippetsContent = await snippetsResource.getContent(\n\t\t\t\tthis.profile,\n\t\t\t);\n\t\t\tawait snippetsResource.apply(snippetsContent, exportPreviewProfle);\n\t\t\tconst snippetsResourceTreeItem =\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tSnippetsResourceTreeItem,\n\t\t\t\t\texportPreviewProfle,\n\t\t\t\t);\n\t\t\tif (await snippetsResourceTreeItem.hasContent()) {\n\t\t\t\troots.push(snippetsResourceTreeItem);\n\t\t\t}\n\t\t}\n\n\t\tif (this.exportFlags?.tasks ?? true) {\n\t\t\tconst tasksResource =\n\t\t\t\tthis.instantiationService.createInstance(TasksResource);\n\t\t\tconst tasksContent = await tasksResource.getContent(this.profile);\n\t\t\tawait tasksResource.apply(tasksContent, exportPreviewProfle);\n\t\t\tconst tasksResourceTreeItem =\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tTasksResourceTreeItem,\n\t\t\t\t\texportPreviewProfle,\n\t\t\t\t);\n\t\t\tif (await tasksResourceTreeItem.hasContent()) {\n\t\t\t\troots.push(tasksResourceTreeItem);\n\t\t\t}\n\t\t}\n\n\t\tif (this.exportFlags?.globalState ?? true) {\n\t\t\tconst globalStateResource = joinPath(\n\t\t\t\texportPreviewProfle.globalStorageHome,\n\t\t\t\t\"globalState.json\",\n\t\t\t).with({ scheme: USER_DATA_PROFILE_EXPORT_PREVIEW_SCHEME });\n\t\t\tconst globalStateResourceTreeItem =\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tGlobalStateResourceExportTreeItem,\n\t\t\t\t\texportPreviewProfle,\n\t\t\t\t\tglobalStateResource,\n\t\t\t\t);\n\t\t\tconst content = await globalStateResourceTreeItem.getContent();\n\t\t\tif (content) {\n\t\t\t\tawait this.fileService.writeFile(\n\t\t\t\t\tglobalStateResource,\n\t\t\t\t\tVSBuffer.fromString(\n\t\t\t\t\t\tJSON.stringify(JSON.parse(content), null, \"\\t\"),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\troots.push(globalStateResourceTreeItem);\n\t\t\t}\n\t\t}\n\n\t\tif (this.exportFlags?.extensions ?? true) {\n\t\t\tconst extensionsResourceTreeItem =\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tExtensionsResourceExportTreeItem,\n\t\t\t\t\texportPreviewProfle,\n\t\t\t\t);\n\t\t\tif (await extensionsResourceTreeItem.hasContent()) {\n\t\t\t\troots.push(extensionsResourceTreeItem);\n\t\t\t}\n\t\t}\n\n\t\tpreviewFileSystemProvider.setReadOnly(true);\n\n\t\treturn roots;\n\t}\n\n\tprivate createExportPreviewProfile(\n\t\tprofile: IUserDataProfile,\n\t): IUserDataProfile {\n\t\treturn {\n\t\t\tid: profile.id,\n\t\t\tname: profile.name,\n\t\t\tlocation: profile.location,\n\t\t\tisDefault: profile.isDefault,\n\t\t\tshortName: profile.shortName,\n\t\t\ticon: profile.icon,\n\t\t\tglobalStorageHome: profile.globalStorageHome,\n\t\t\tsettingsResource: profile.settingsResource.with({\n\t\t\t\tscheme: USER_DATA_PROFILE_EXPORT_SCHEME,\n\t\t\t}),\n\t\t\tkeybindingsResource: profile.keybindingsResource.with({\n\t\t\t\tscheme: USER_DATA_PROFILE_EXPORT_SCHEME,\n\t\t\t}),\n\t\t\ttasksResource: profile.tasksResource.with({\n\t\t\t\tscheme: USER_DATA_PROFILE_EXPORT_SCHEME,\n\t\t\t}),\n\t\t\tsnippetsHome: profile.snippetsHome.with({\n\t\t\t\tscheme: USER_DATA_PROFILE_EXPORT_SCHEME,\n\t\t\t}),\n\t\t\textensionsResource: profile.extensionsResource,\n\t\t\tcacheHome: profile.cacheHome,\n\t\t\tuseDefaultFlags: profile.useDefaultFlags,\n\t\t\tisTransient: profile.isTransient,\n\t\t};\n\t}\n\n\tasync getProfileToExport(): Promise<IUserDataProfileTemplate | null> {\n\t\tlet name: string | undefined = this.profile.name;\n\t\tif (this.profile.isDefault) {\n\t\t\tname = await this.quickInputService.input({\n\t\t\t\tplaceHolder: localize(\n\t\t\t\t\t\"export profile name\",\n\t\t\t\t\t\"Name the profile\",\n\t\t\t\t),\n\t\t\t\ttitle: localize(\"export profile title\", \"Export Profile\"),\n\t\t\t\tasync validateInput(input) {\n\t\t\t\t\tif (!input.trim()) {\n\t\t\t\t\t\treturn localize(\n\t\t\t\t\t\t\t\"profile name required\",\n\t\t\t\t\t\t\t\"Profile name must be provided.\",\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn undefined;\n\t\t\t\t},\n\t\t\t});\n\t\t\tif (!name) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\treturn super.getProfileTemplate(name, this.profile.icon);\n\t}\n}\n\nregisterSingleton(\n\tIUserDataProfileImportExportService,\n\tUserDataProfileImportExportService,\n\tInstantiationType.Delayed,\n);\n"],
  "mappings": "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",
  "names": ["token"]
}
