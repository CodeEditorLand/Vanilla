{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/userDataProfile/browser/keybindingsResource.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from '../../../../base/common/buffer.js';\nimport { FileOperationError, FileOperationResult, IFileService } from '../../../../platform/files/common/files.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { IProfileResource, IProfileResourceChildTreeItem, IProfileResourceInitializer, IProfileResourceTreeItem, IUserDataProfileService } from '../common/userDataProfile.js';\nimport { platform, Platform } from '../../../../base/common/platform.js';\nimport { ITreeItemCheckboxState, TreeItemCollapsibleState } from '../../../common/views.js';\nimport { IUserDataProfile, ProfileResourceType } from '../../../../platform/userDataProfile/common/userDataProfile.js';\nimport { API_OPEN_EDITOR_COMMAND_ID } from '../../../browser/parts/editor/editorCommands.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { localize } from '../../../../nls.js';\nimport { IUriIdentityService } from '../../../../platform/uriIdentity/common/uriIdentity.js';\n\ninterface IKeybindingsResourceContent {\n\tplatform: Platform;\n\tkeybindings: string | null;\n}\n\nexport class KeybindingsResourceInitializer implements IProfileResourceInitializer {\n\n\tconstructor(\n\t\t@IUserDataProfileService private readonly userDataProfileService: IUserDataProfileService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t}\n\n\tasync initialize(content: string): Promise<void> {\n\t\tconst keybindingsContent: IKeybindingsResourceContent = JSON.parse(content);\n\t\tif (keybindingsContent.keybindings === null) {\n\t\t\tthis.logService.info(`Initializing Profile: No keybindings to apply...`);\n\t\t\treturn;\n\t\t}\n\t\tawait this.fileService.writeFile(this.userDataProfileService.currentProfile.keybindingsResource, VSBuffer.fromString(keybindingsContent.keybindings));\n\t}\n}\n\nexport class KeybindingsResource implements IProfileResource {\n\n\tconstructor(\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t}\n\n\tasync getContent(profile: IUserDataProfile): Promise<string> {\n\t\tconst keybindingsContent = await this.getKeybindingsResourceContent(profile);\n\t\treturn JSON.stringify(keybindingsContent);\n\t}\n\n\tasync getKeybindingsResourceContent(profile: IUserDataProfile): Promise<IKeybindingsResourceContent> {\n\t\tconst keybindings = await this.getKeybindingsContent(profile);\n\t\treturn { keybindings, platform };\n\t}\n\n\tasync apply(content: string, profile: IUserDataProfile): Promise<void> {\n\t\tconst keybindingsContent: IKeybindingsResourceContent = JSON.parse(content);\n\t\tif (keybindingsContent.keybindings === null) {\n\t\t\tthis.logService.info(`Importing Profile (${profile.name}): No keybindings to apply...`);\n\t\t\treturn;\n\t\t}\n\t\tawait this.fileService.writeFile(profile.keybindingsResource, VSBuffer.fromString(keybindingsContent.keybindings));\n\t}\n\n\tprivate async getKeybindingsContent(profile: IUserDataProfile): Promise<string | null> {\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(profile.keybindingsResource);\n\t\t\treturn content.value.toString();\n\t\t} catch (error) {\n\t\t\t// File not found\n\t\t\tif (error instanceof FileOperationError && error.fileOperationResult === FileOperationResult.FILE_NOT_FOUND) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport class KeybindingsResourceTreeItem implements IProfileResourceTreeItem {\n\n\treadonly type = ProfileResourceType.Keybindings;\n\treadonly handle = ProfileResourceType.Keybindings;\n\treadonly label = { label: localize('keybindings', \"Keyboard Shortcuts\") };\n\treadonly collapsibleState = TreeItemCollapsibleState.Expanded;\n\tcheckbox: ITreeItemCheckboxState | undefined;\n\n\tconstructor(\n\t\tprivate readonly profile: IUserDataProfile,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService\n\t) { }\n\n\tisFromDefaultProfile(): boolean {\n\t\treturn !this.profile.isDefault && !!this.profile.useDefaultFlags?.keybindings;\n\t}\n\n\tasync getChildren(): Promise<IProfileResourceChildTreeItem[]> {\n\t\treturn [{\n\t\t\thandle: this.profile.keybindingsResource.toString(),\n\t\t\tresourceUri: this.profile.keybindingsResource,\n\t\t\tcollapsibleState: TreeItemCollapsibleState.None,\n\t\t\tparent: this,\n\t\t\taccessibilityInformation: {\n\t\t\t\tlabel: this.uriIdentityService.extUri.basename(this.profile.settingsResource)\n\t\t\t},\n\t\t\tcommand: {\n\t\t\t\tid: API_OPEN_EDITOR_COMMAND_ID,\n\t\t\t\ttitle: '',\n\t\t\t\targuments: [this.profile.keybindingsResource, undefined, undefined]\n\t\t\t}\n\t\t}];\n\t}\n\n\tasync hasContent(): Promise<boolean> {\n\t\tconst keybindingsContent = await this.instantiationService.createInstance(KeybindingsResource).getKeybindingsResourceContent(this.profile);\n\t\treturn keybindingsContent.keybindings !== null;\n\t}\n\n\tasync getContent(): Promise<string> {\n\t\treturn this.instantiationService.createInstance(KeybindingsResource).getContent(this.profile);\n\t}\n\n}\n"],
  "mappings": "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",
  "names": []
}
