{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/userDataProfile/browser/settingsResource.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from \"../../../../base/common/buffer.js\";\nimport { localize } from \"../../../../nls.js\";\nimport {\n\tConfigurationScope,\n\tExtensions,\n\ttype IConfigurationRegistry,\n} from \"../../../../platform/configuration/common/configurationRegistry.js\";\nimport {\n\tFileOperationError,\n\tFileOperationResult,\n\tIFileService,\n} from \"../../../../platform/files/common/files.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport { IUriIdentityService } from \"../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport {\n\ttype IUserDataProfile,\n\tProfileResourceType,\n} from \"../../../../platform/userDataProfile/common/userDataProfile.js\";\nimport { updateIgnoredSettings } from \"../../../../platform/userDataSync/common/settingsMerge.js\";\nimport { IUserDataSyncUtilService } from \"../../../../platform/userDataSync/common/userDataSync.js\";\nimport { API_OPEN_EDITOR_COMMAND_ID } from \"../../../browser/parts/editor/editorCommands.js\";\nimport {\n\ttype ITreeItemCheckboxState,\n\tTreeItemCollapsibleState,\n} from \"../../../common/views.js\";\nimport {\n\ttype IProfileResource,\n\ttype IProfileResourceChildTreeItem,\n\ttype IProfileResourceInitializer,\n\ttype IProfileResourceTreeItem,\n\tIUserDataProfileService,\n} from \"../common/userDataProfile.js\";\n\ninterface ISettingsContent {\n\tsettings: string | null;\n}\n\nexport class SettingsResourceInitializer\n\timplements IProfileResourceInitializer\n{\n\tconstructor(\n\t\t@IUserDataProfileService\n\t\tprivate readonly userDataProfileService: IUserDataProfileService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {}\n\n\tasync initialize(content: string): Promise<void> {\n\t\tconst settingsContent: ISettingsContent = JSON.parse(content);\n\t\tif (settingsContent.settings === null) {\n\t\t\tthis.logService.info(\n\t\t\t\t`Initializing Profile: No settings to apply...`,\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\tawait this.fileService.writeFile(\n\t\t\tthis.userDataProfileService.currentProfile.settingsResource,\n\t\t\tVSBuffer.fromString(settingsContent.settings),\n\t\t);\n\t}\n}\n\nexport class SettingsResource implements IProfileResource {\n\tconstructor(\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IUserDataSyncUtilService\n\t\tprivate readonly userDataSyncUtilService: IUserDataSyncUtilService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {}\n\n\tasync getContent(profile: IUserDataProfile): Promise<string> {\n\t\tconst settingsContent = await this.getSettingsContent(profile);\n\t\treturn JSON.stringify(settingsContent);\n\t}\n\n\tasync getSettingsContent(\n\t\tprofile: IUserDataProfile,\n\t): Promise<ISettingsContent> {\n\t\tconst localContent = await this.getLocalFileContent(profile);\n\t\tif (localContent === null) {\n\t\t\treturn { settings: null };\n\t\t} else {\n\t\t\tconst ignoredSettings = this.getIgnoredSettings();\n\t\t\tconst formattingOptions =\n\t\t\t\tawait this.userDataSyncUtilService.resolveFormattingOptions(\n\t\t\t\t\tprofile.settingsResource,\n\t\t\t\t);\n\t\t\tconst settings = updateIgnoredSettings(\n\t\t\t\tlocalContent || \"{}\",\n\t\t\t\t\"{}\",\n\t\t\t\tignoredSettings,\n\t\t\t\tformattingOptions,\n\t\t\t);\n\t\t\treturn { settings };\n\t\t}\n\t}\n\n\tasync apply(content: string, profile: IUserDataProfile): Promise<void> {\n\t\tconst settingsContent: ISettingsContent = JSON.parse(content);\n\t\tif (settingsContent.settings === null) {\n\t\t\tthis.logService.info(\n\t\t\t\t`Importing Profile (${profile.name}): No settings to apply...`,\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\tconst localSettingsContent = await this.getLocalFileContent(profile);\n\t\tconst formattingOptions =\n\t\t\tawait this.userDataSyncUtilService.resolveFormattingOptions(\n\t\t\t\tprofile.settingsResource,\n\t\t\t);\n\t\tconst contentToUpdate = updateIgnoredSettings(\n\t\t\tsettingsContent.settings,\n\t\t\tlocalSettingsContent || \"{}\",\n\t\t\tthis.getIgnoredSettings(),\n\t\t\tformattingOptions,\n\t\t);\n\t\tawait this.fileService.writeFile(\n\t\t\tprofile.settingsResource,\n\t\t\tVSBuffer.fromString(contentToUpdate),\n\t\t);\n\t}\n\n\tprivate getIgnoredSettings(): string[] {\n\t\tconst allSettings = Registry.as<IConfigurationRegistry>(\n\t\t\tExtensions.Configuration,\n\t\t).getConfigurationProperties();\n\t\tconst ignoredSettings = Object.keys(allSettings).filter(\n\t\t\t(key) =>\n\t\t\t\tallSettings[key]?.scope === ConfigurationScope.MACHINE ||\n\t\t\t\tallSettings[key]?.scope ===\n\t\t\t\t\tConfigurationScope.MACHINE_OVERRIDABLE,\n\t\t);\n\t\treturn ignoredSettings;\n\t}\n\n\tprivate async getLocalFileContent(\n\t\tprofile: IUserDataProfile,\n\t): Promise<string | null> {\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(\n\t\t\t\tprofile.settingsResource,\n\t\t\t);\n\t\t\treturn content.value.toString();\n\t\t} catch (error) {\n\t\t\t// File not found\n\t\t\tif (\n\t\t\t\terror instanceof FileOperationError &&\n\t\t\t\terror.fileOperationResult === FileOperationResult.FILE_NOT_FOUND\n\t\t\t) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class SettingsResourceTreeItem implements IProfileResourceTreeItem {\n\treadonly type = ProfileResourceType.Settings;\n\treadonly handle = ProfileResourceType.Settings;\n\treadonly label = { label: localize(\"settings\", \"Settings\") };\n\treadonly collapsibleState = TreeItemCollapsibleState.Expanded;\n\tcheckbox: ITreeItemCheckboxState | undefined;\n\n\tconstructor(\n\t\tprivate readonly profile: IUserDataProfile,\n\t\t@IUriIdentityService\n\t\tprivate readonly uriIdentityService: IUriIdentityService,\n\t\t@IInstantiationService\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t) {}\n\n\tasync getChildren(): Promise<IProfileResourceChildTreeItem[]> {\n\t\treturn [\n\t\t\t{\n\t\t\t\thandle: this.profile.settingsResource.toString(),\n\t\t\t\tresourceUri: this.profile.settingsResource,\n\t\t\t\tcollapsibleState: TreeItemCollapsibleState.None,\n\t\t\t\tparent: this,\n\t\t\t\taccessibilityInformation: {\n\t\t\t\t\tlabel: this.uriIdentityService.extUri.basename(\n\t\t\t\t\t\tthis.profile.settingsResource,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tcommand: {\n\t\t\t\t\tid: API_OPEN_EDITOR_COMMAND_ID,\n\t\t\t\t\ttitle: \"\",\n\t\t\t\t\targuments: [\n\t\t\t\t\t\tthis.profile.settingsResource,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\t}\n\n\tasync hasContent(): Promise<boolean> {\n\t\tconst settingsContent = await this.instantiationService\n\t\t\t.createInstance(SettingsResource)\n\t\t\t.getSettingsContent(this.profile);\n\t\treturn settingsContent.settings !== null;\n\t}\n\n\tasync getContent(): Promise<string> {\n\t\treturn this.instantiationService\n\t\t\t.createInstance(SettingsResource)\n\t\t\t.getContent(this.profile);\n\t}\n\n\tisFromDefaultProfile(): boolean {\n\t\treturn (\n\t\t\t!this.profile.isDefault && !!this.profile.useDefaultFlags?.settings\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
