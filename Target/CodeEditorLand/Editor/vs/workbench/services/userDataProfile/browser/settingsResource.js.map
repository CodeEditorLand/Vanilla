{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/userDataProfile/browser/settingsResource.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from '../../../../base/common/buffer.js';\nimport { ConfigurationScope, Extensions, IConfigurationRegistry } from '../../../../platform/configuration/common/configurationRegistry.js';\nimport { FileOperationError, FileOperationResult, IFileService } from '../../../../platform/files/common/files.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { IProfileResource, IProfileResourceChildTreeItem, IProfileResourceInitializer, IProfileResourceTreeItem, IUserDataProfileService } from '../common/userDataProfile.js';\nimport { updateIgnoredSettings } from '../../../../platform/userDataSync/common/settingsMerge.js';\nimport { IUserDataSyncUtilService } from '../../../../platform/userDataSync/common/userDataSync.js';\nimport { ITreeItemCheckboxState, TreeItemCollapsibleState } from '../../../common/views.js';\nimport { IUserDataProfile, ProfileResourceType } from '../../../../platform/userDataProfile/common/userDataProfile.js';\nimport { API_OPEN_EDITOR_COMMAND_ID } from '../../../browser/parts/editor/editorCommands.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { localize } from '../../../../nls.js';\nimport { IUriIdentityService } from '../../../../platform/uriIdentity/common/uriIdentity.js';\n\ninterface ISettingsContent {\n\tsettings: string | null;\n}\n\nexport class SettingsResourceInitializer implements IProfileResourceInitializer {\n\n\tconstructor(\n\t\t@IUserDataProfileService private readonly userDataProfileService: IUserDataProfileService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t}\n\n\tasync initialize(content: string): Promise<void> {\n\t\tconst settingsContent: ISettingsContent = JSON.parse(content);\n\t\tif (settingsContent.settings === null) {\n\t\t\tthis.logService.info(`Initializing Profile: No settings to apply...`);\n\t\t\treturn;\n\t\t}\n\t\tawait this.fileService.writeFile(this.userDataProfileService.currentProfile.settingsResource, VSBuffer.fromString(settingsContent.settings));\n\t}\n}\n\nexport class SettingsResource implements IProfileResource {\n\n\tconstructor(\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IUserDataSyncUtilService private readonly userDataSyncUtilService: IUserDataSyncUtilService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t}\n\n\tasync getContent(profile: IUserDataProfile): Promise<string> {\n\t\tconst settingsContent = await this.getSettingsContent(profile);\n\t\treturn JSON.stringify(settingsContent);\n\t}\n\n\tasync getSettingsContent(profile: IUserDataProfile): Promise<ISettingsContent> {\n\t\tconst localContent = await this.getLocalFileContent(profile);\n\t\tif (localContent === null) {\n\t\t\treturn { settings: null };\n\t\t} else {\n\t\t\tconst ignoredSettings = this.getIgnoredSettings();\n\t\t\tconst formattingOptions = await this.userDataSyncUtilService.resolveFormattingOptions(profile.settingsResource);\n\t\t\tconst settings = updateIgnoredSettings(localContent || '{}', '{}', ignoredSettings, formattingOptions);\n\t\t\treturn { settings };\n\t\t}\n\t}\n\n\tasync apply(content: string, profile: IUserDataProfile): Promise<void> {\n\t\tconst settingsContent: ISettingsContent = JSON.parse(content);\n\t\tif (settingsContent.settings === null) {\n\t\t\tthis.logService.info(`Importing Profile (${profile.name}): No settings to apply...`);\n\t\t\treturn;\n\t\t}\n\t\tconst localSettingsContent = await this.getLocalFileContent(profile);\n\t\tconst formattingOptions = await this.userDataSyncUtilService.resolveFormattingOptions(profile.settingsResource);\n\t\tconst contentToUpdate = updateIgnoredSettings(settingsContent.settings, localSettingsContent || '{}', this.getIgnoredSettings(), formattingOptions);\n\t\tawait this.fileService.writeFile(profile.settingsResource, VSBuffer.fromString(contentToUpdate));\n\t}\n\n\tprivate getIgnoredSettings(): string[] {\n\t\tconst allSettings = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\t\tconst ignoredSettings = Object.keys(allSettings).filter(key => allSettings[key]?.scope === ConfigurationScope.MACHINE || allSettings[key]?.scope === ConfigurationScope.MACHINE_OVERRIDABLE);\n\t\treturn ignoredSettings;\n\t}\n\n\tprivate async getLocalFileContent(profile: IUserDataProfile): Promise<string | null> {\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(profile.settingsResource);\n\t\t\treturn content.value.toString();\n\t\t} catch (error) {\n\t\t\t// File not found\n\t\t\tif (error instanceof FileOperationError && error.fileOperationResult === FileOperationResult.FILE_NOT_FOUND) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport class SettingsResourceTreeItem implements IProfileResourceTreeItem {\n\n\treadonly type = ProfileResourceType.Settings;\n\treadonly handle = ProfileResourceType.Settings;\n\treadonly label = { label: localize('settings', \"Settings\") };\n\treadonly collapsibleState = TreeItemCollapsibleState.Expanded;\n\tcheckbox: ITreeItemCheckboxState | undefined;\n\n\tconstructor(\n\t\tprivate readonly profile: IUserDataProfile,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService\n\t) { }\n\n\tasync getChildren(): Promise<IProfileResourceChildTreeItem[]> {\n\t\treturn [{\n\t\t\thandle: this.profile.settingsResource.toString(),\n\t\t\tresourceUri: this.profile.settingsResource,\n\t\t\tcollapsibleState: TreeItemCollapsibleState.None,\n\t\t\tparent: this,\n\t\t\taccessibilityInformation: {\n\t\t\t\tlabel: this.uriIdentityService.extUri.basename(this.profile.settingsResource)\n\t\t\t},\n\t\t\tcommand: {\n\t\t\t\tid: API_OPEN_EDITOR_COMMAND_ID,\n\t\t\t\ttitle: '',\n\t\t\t\targuments: [this.profile.settingsResource, undefined, undefined]\n\t\t\t}\n\t\t}];\n\t}\n\n\tasync hasContent(): Promise<boolean> {\n\t\tconst settingsContent = await this.instantiationService.createInstance(SettingsResource).getSettingsContent(this.profile);\n\t\treturn settingsContent.settings !== null;\n\t}\n\n\tasync getContent(): Promise<string> {\n\t\treturn this.instantiationService.createInstance(SettingsResource).getContent(this.profile);\n\t}\n\n\tisFromDefaultProfile(): boolean {\n\t\treturn !this.profile.isDefault && !!this.profile.useDefaultFlags?.settings;\n\t}\n\n}\n"],
  "mappings": "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",
  "names": []
}
