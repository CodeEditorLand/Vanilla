{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/userDataProfile/browser/snippetsResource.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from \"../../../../base/common/buffer.js\";\nimport type { IStringDictionary } from \"../../../../base/common/collections.js\";\nimport { ResourceSet } from \"../../../../base/common/map.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport { localize } from \"../../../../nls.js\";\nimport {\n\tFileOperationError,\n\tFileOperationResult,\n\tIFileService,\n\ttype IFileStat,\n} from \"../../../../platform/files/common/files.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IUriIdentityService } from \"../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport {\n\ttype IUserDataProfile,\n\tProfileResourceType,\n} from \"../../../../platform/userDataProfile/common/userDataProfile.js\";\nimport { API_OPEN_EDITOR_COMMAND_ID } from \"../../../browser/parts/editor/editorCommands.js\";\nimport {\n\ttype ITreeItemCheckboxState,\n\tTreeItemCollapsibleState,\n} from \"../../../common/views.js\";\nimport {\n\ttype IProfileResource,\n\ttype IProfileResourceChildTreeItem,\n\ttype IProfileResourceInitializer,\n\ttype IProfileResourceTreeItem,\n\tIUserDataProfileService,\n} from \"../common/userDataProfile.js\";\n\ninterface ISnippetsContent {\n\tsnippets: IStringDictionary<string>;\n}\n\nexport class SnippetsResourceInitializer\n\timplements IProfileResourceInitializer\n{\n\tconstructor(\n\t\t@IUserDataProfileService private readonly userDataProfileService: IUserDataProfileService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t) {\n\t}\n\n\tasync initialize(content: string): Promise<void> {\n\t\tconst snippetsContent: ISnippetsContent = JSON.parse(content);\n\t\tfor (const key in snippetsContent.snippets) {\n\t\t\tconst resource = this.uriIdentityService.extUri.joinPath(\n\t\t\t\tthis.userDataProfileService.currentProfile.snippetsHome,\n\t\t\t\tkey,\n\t\t\t);\n\t\t\tawait this.fileService.writeFile(\n\t\t\t\tresource,\n\t\t\t\tVSBuffer.fromString(snippetsContent.snippets[key]),\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport class SnippetsResource implements IProfileResource {\n\tconstructor(\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t) {\n\t}\n\n\tasync getContent(\n\t\tprofile: IUserDataProfile,\n\t\texcluded?: ResourceSet,\n\t): Promise<string> {\n\t\tconst snippets = await this.getSnippets(profile, excluded);\n\t\treturn JSON.stringify({ snippets });\n\t}\n\n\tasync apply(content: string, profile: IUserDataProfile): Promise<void> {\n\t\tconst snippetsContent: ISnippetsContent = JSON.parse(content);\n\t\tfor (const key in snippetsContent.snippets) {\n\t\t\tconst resource = this.uriIdentityService.extUri.joinPath(\n\t\t\t\tprofile.snippetsHome,\n\t\t\t\tkey,\n\t\t\t);\n\t\t\tawait this.fileService.writeFile(\n\t\t\t\tresource,\n\t\t\t\tVSBuffer.fromString(snippetsContent.snippets[key]),\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate async getSnippets(\n\t\tprofile: IUserDataProfile,\n\t\texcluded?: ResourceSet,\n\t): Promise<IStringDictionary<string>> {\n\t\tconst snippets: IStringDictionary<string> = {};\n\t\tconst snippetsResources = await this.getSnippetsResources(\n\t\t\tprofile,\n\t\t\texcluded,\n\t\t);\n\t\tfor (const resource of snippetsResources) {\n\t\t\tconst key = this.uriIdentityService.extUri.relativePath(\n\t\t\t\tprofile.snippetsHome,\n\t\t\t\tresource,\n\t\t\t)!;\n\t\t\tconst content = await this.fileService.readFile(resource);\n\t\t\tsnippets[key] = content.value.toString();\n\t\t}\n\t\treturn snippets;\n\t}\n\n\tasync getSnippetsResources(\n\t\tprofile: IUserDataProfile,\n\t\texcluded?: ResourceSet,\n\t): Promise<URI[]> {\n\t\tconst snippets: URI[] = [];\n\t\tlet stat: IFileStat;\n\t\ttry {\n\t\t\tstat = await this.fileService.resolve(profile.snippetsHome);\n\t\t} catch (e) {\n\t\t\t// No snippets\n\t\t\tif (\n\t\t\t\te instanceof FileOperationError &&\n\t\t\t\te.fileOperationResult === FileOperationResult.FILE_NOT_FOUND\n\t\t\t) {\n\t\t\t\treturn snippets;\n\t\t\t} else {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t\tfor (const { resource } of stat.children || []) {\n\t\t\tif (excluded?.has(resource)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst extension = this.uriIdentityService.extUri.extname(resource);\n\t\t\tif (extension === \".json\" || extension === \".code-snippets\") {\n\t\t\t\tsnippets.push(resource);\n\t\t\t}\n\t\t}\n\t\treturn snippets;\n\t}\n}\n\nexport class SnippetsResourceTreeItem implements IProfileResourceTreeItem {\n\treadonly type = ProfileResourceType.Snippets;\n\treadonly handle = this.profile.snippetsHome.toString();\n\treadonly label = { label: localize(\"snippets\", \"Snippets\") };\n\treadonly collapsibleState = TreeItemCollapsibleState.Collapsed;\n\tcheckbox: ITreeItemCheckboxState | undefined;\n\n\tprivate readonly excludedSnippets = new ResourceSet();\n\n\tconstructor(\n\t\tprivate readonly profile: IUserDataProfile,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t) { }\n\n\tasync getChildren(): Promise<IProfileResourceChildTreeItem[] | undefined> {\n\t\tconst snippetsResources = await this.instantiationService\n\t\t\t.createInstance(SnippetsResource)\n\t\t\t.getSnippetsResources(this.profile);\n\t\tconst that = this;\n\t\treturn snippetsResources.map<IProfileResourceChildTreeItem>(\n\t\t\t(resource) => ({\n\t\t\t\thandle: resource.toString(),\n\t\t\t\tparent: that,\n\t\t\t\tresourceUri: resource,\n\t\t\t\tcollapsibleState: TreeItemCollapsibleState.None,\n\t\t\t\taccessibilityInformation: {\n\t\t\t\t\tlabel: this.uriIdentityService.extUri.basename(resource),\n\t\t\t\t},\n\t\t\t\tcheckbox: that.checkbox\n\t\t\t\t\t? {\n\t\t\t\t\t\t\tget isChecked() {\n\t\t\t\t\t\t\t\treturn !that.excludedSnippets.has(resource);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tset isChecked(value: boolean) {\n\t\t\t\t\t\t\t\tif (value) {\n\t\t\t\t\t\t\t\t\tthat.excludedSnippets.delete(resource);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthat.excludedSnippets.add(resource);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\taccessibilityInformation: {\n\t\t\t\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\t\t\t\"exclude\",\n\t\t\t\t\t\t\t\t\t\"Select Snippet {0}\",\n\t\t\t\t\t\t\t\t\tthis.uriIdentityService.extUri.basename(\n\t\t\t\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}\n\t\t\t\t\t: undefined,\n\t\t\t\tcommand: {\n\t\t\t\t\tid: API_OPEN_EDITOR_COMMAND_ID,\n\t\t\t\t\ttitle: \"\",\n\t\t\t\t\targuments: [resource, undefined, undefined],\n\t\t\t\t},\n\t\t\t}),\n\t\t);\n\t}\n\n\tasync hasContent(): Promise<boolean> {\n\t\tconst snippetsResources = await this.instantiationService\n\t\t\t.createInstance(SnippetsResource)\n\t\t\t.getSnippetsResources(this.profile);\n\t\treturn snippetsResources.length > 0;\n\t}\n\n\tasync getContent(): Promise<string> {\n\t\treturn this.instantiationService\n\t\t\t.createInstance(SnippetsResource)\n\t\t\t.getContent(this.profile, this.excludedSnippets);\n\t}\n\n\tisFromDefaultProfile(): boolean {\n\t\treturn (\n\t\t\t!this.profile.isDefault && !!this.profile.useDefaultFlags?.snippets\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
