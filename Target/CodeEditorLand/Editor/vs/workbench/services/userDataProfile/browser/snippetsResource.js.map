{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/userDataProfile/browser/snippetsResource.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from '../../../../base/common/buffer.js';\nimport { IStringDictionary } from '../../../../base/common/collections.js';\nimport { ResourceSet } from '../../../../base/common/map.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { localize } from '../../../../nls.js';\nimport { FileOperationError, FileOperationResult, IFileService, IFileStat } from '../../../../platform/files/common/files.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IUriIdentityService } from '../../../../platform/uriIdentity/common/uriIdentity.js';\nimport { IUserDataProfile, ProfileResourceType } from '../../../../platform/userDataProfile/common/userDataProfile.js';\nimport { API_OPEN_EDITOR_COMMAND_ID } from '../../../browser/parts/editor/editorCommands.js';\nimport { ITreeItemCheckboxState, TreeItemCollapsibleState } from '../../../common/views.js';\nimport { IProfileResource, IProfileResourceChildTreeItem, IProfileResourceInitializer, IProfileResourceTreeItem, IUserDataProfileService } from '../common/userDataProfile.js';\n\ninterface ISnippetsContent {\n\tsnippets: IStringDictionary<string>;\n}\n\nexport class SnippetsResourceInitializer implements IProfileResourceInitializer {\n\n\tconstructor(\n\t\t@IUserDataProfileService private readonly userDataProfileService: IUserDataProfileService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t) {\n\t}\n\n\tasync initialize(content: string): Promise<void> {\n\t\tconst snippetsContent: ISnippetsContent = JSON.parse(content);\n\t\tfor (const key in snippetsContent.snippets) {\n\t\t\tconst resource = this.uriIdentityService.extUri.joinPath(this.userDataProfileService.currentProfile.snippetsHome, key);\n\t\t\tawait this.fileService.writeFile(resource, VSBuffer.fromString(snippetsContent.snippets[key]));\n\t\t}\n\t}\n}\n\nexport class SnippetsResource implements IProfileResource {\n\n\tconstructor(\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t) {\n\t}\n\n\tasync getContent(profile: IUserDataProfile, excluded?: ResourceSet): Promise<string> {\n\t\tconst snippets = await this.getSnippets(profile, excluded);\n\t\treturn JSON.stringify({ snippets });\n\t}\n\n\tasync apply(content: string, profile: IUserDataProfile): Promise<void> {\n\t\tconst snippetsContent: ISnippetsContent = JSON.parse(content);\n\t\tfor (const key in snippetsContent.snippets) {\n\t\t\tconst resource = this.uriIdentityService.extUri.joinPath(profile.snippetsHome, key);\n\t\t\tawait this.fileService.writeFile(resource, VSBuffer.fromString(snippetsContent.snippets[key]));\n\t\t}\n\t}\n\n\tprivate async getSnippets(profile: IUserDataProfile, excluded?: ResourceSet): Promise<IStringDictionary<string>> {\n\t\tconst snippets: IStringDictionary<string> = {};\n\t\tconst snippetsResources = await this.getSnippetsResources(profile, excluded);\n\t\tfor (const resource of snippetsResources) {\n\t\t\tconst key = this.uriIdentityService.extUri.relativePath(profile.snippetsHome, resource)!;\n\t\t\tconst content = await this.fileService.readFile(resource);\n\t\t\tsnippets[key] = content.value.toString();\n\t\t}\n\t\treturn snippets;\n\t}\n\n\tasync getSnippetsResources(profile: IUserDataProfile, excluded?: ResourceSet): Promise<URI[]> {\n\t\tconst snippets: URI[] = [];\n\t\tlet stat: IFileStat;\n\t\ttry {\n\t\t\tstat = await this.fileService.resolve(profile.snippetsHome);\n\t\t} catch (e) {\n\t\t\t// No snippets\n\t\t\tif (e instanceof FileOperationError && e.fileOperationResult === FileOperationResult.FILE_NOT_FOUND) {\n\t\t\t\treturn snippets;\n\t\t\t} else {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t\tfor (const { resource } of stat.children || []) {\n\t\t\tif (excluded?.has(resource)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst extension = this.uriIdentityService.extUri.extname(resource);\n\t\t\tif (extension === '.json' || extension === '.code-snippets') {\n\t\t\t\tsnippets.push(resource);\n\t\t\t}\n\t\t}\n\t\treturn snippets;\n\t}\n}\n\nexport class SnippetsResourceTreeItem implements IProfileResourceTreeItem {\n\n\treadonly type = ProfileResourceType.Snippets;\n\treadonly handle = this.profile.snippetsHome.toString();\n\treadonly label = { label: localize('snippets', \"Snippets\") };\n\treadonly collapsibleState = TreeItemCollapsibleState.Collapsed;\n\tcheckbox: ITreeItemCheckboxState | undefined;\n\n\tprivate readonly excludedSnippets = new ResourceSet();\n\n\tconstructor(\n\t\tprivate readonly profile: IUserDataProfile,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t) { }\n\n\tasync getChildren(): Promise<IProfileResourceChildTreeItem[] | undefined> {\n\t\tconst snippetsResources = await this.instantiationService.createInstance(SnippetsResource).getSnippetsResources(this.profile);\n\t\tconst that = this;\n\t\treturn snippetsResources.map<IProfileResourceChildTreeItem>(resource => ({\n\t\t\thandle: resource.toString(),\n\t\t\tparent: that,\n\t\t\tresourceUri: resource,\n\t\t\tcollapsibleState: TreeItemCollapsibleState.None,\n\t\t\taccessibilityInformation: {\n\t\t\t\tlabel: this.uriIdentityService.extUri.basename(resource),\n\t\t\t},\n\t\t\tcheckbox: that.checkbox ? {\n\t\t\t\tget isChecked() { return !that.excludedSnippets.has(resource); },\n\t\t\t\tset isChecked(value: boolean) {\n\t\t\t\t\tif (value) {\n\t\t\t\t\t\tthat.excludedSnippets.delete(resource);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthat.excludedSnippets.add(resource);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\taccessibilityInformation: {\n\t\t\t\t\tlabel: localize('exclude', \"Select Snippet {0}\", this.uriIdentityService.extUri.basename(resource)),\n\t\t\t\t}\n\t\t\t} : undefined,\n\t\t\tcommand: {\n\t\t\t\tid: API_OPEN_EDITOR_COMMAND_ID,\n\t\t\t\ttitle: '',\n\t\t\t\targuments: [resource, undefined, undefined]\n\t\t\t}\n\t\t}));\n\t}\n\n\tasync hasContent(): Promise<boolean> {\n\t\tconst snippetsResources = await this.instantiationService.createInstance(SnippetsResource).getSnippetsResources(this.profile);\n\t\treturn snippetsResources.length > 0;\n\t}\n\n\tasync getContent(): Promise<string> {\n\t\treturn this.instantiationService.createInstance(SnippetsResource).getContent(this.profile, this.excludedSnippets);\n\t}\n\n\tisFromDefaultProfile(): boolean {\n\t\treturn !this.profile.isDefault && !!this.profile.useDefaultFlags?.snippets;\n\t}\n\n\n}\n\n"],
  "mappings": "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",
  "names": []
}
