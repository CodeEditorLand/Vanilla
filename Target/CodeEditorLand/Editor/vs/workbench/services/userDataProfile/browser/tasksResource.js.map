{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/userDataProfile/browser/tasksResource.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from \"../../../../base/common/buffer.js\";\nimport { localize } from \"../../../../nls.js\";\nimport {\n\tFileOperationError,\n\tFileOperationResult,\n\tIFileService,\n} from \"../../../../platform/files/common/files.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { IUriIdentityService } from \"../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport {\n\ttype IUserDataProfile,\n\tProfileResourceType,\n} from \"../../../../platform/userDataProfile/common/userDataProfile.js\";\nimport { API_OPEN_EDITOR_COMMAND_ID } from \"../../../browser/parts/editor/editorCommands.js\";\nimport {\n\ttype ITreeItemCheckboxState,\n\tTreeItemCollapsibleState,\n} from \"../../../common/views.js\";\nimport {\n\ttype IProfileResource,\n\ttype IProfileResourceChildTreeItem,\n\ttype IProfileResourceInitializer,\n\ttype IProfileResourceTreeItem,\n\tIUserDataProfileService,\n} from \"../common/userDataProfile.js\";\n\ninterface ITasksResourceContent {\n\ttasks: string | null;\n}\n\nexport class TasksResourceInitializer implements IProfileResourceInitializer {\n\tconstructor(\n\t\t@IUserDataProfileService\n\t\tprivate readonly userDataProfileService: IUserDataProfileService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {}\n\n\tasync initialize(content: string): Promise<void> {\n\t\tconst tasksContent: ITasksResourceContent = JSON.parse(content);\n\t\tif (!tasksContent.tasks) {\n\t\t\tthis.logService.info(`Initializing Profile: No tasks to apply...`);\n\t\t\treturn;\n\t\t}\n\t\tawait this.fileService.writeFile(\n\t\t\tthis.userDataProfileService.currentProfile.tasksResource,\n\t\t\tVSBuffer.fromString(tasksContent.tasks),\n\t\t);\n\t}\n}\n\nexport class TasksResource implements IProfileResource {\n\tconstructor(\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {}\n\n\tasync getContent(profile: IUserDataProfile): Promise<string> {\n\t\tconst tasksContent = await this.getTasksResourceContent(profile);\n\t\treturn JSON.stringify(tasksContent);\n\t}\n\n\tasync getTasksResourceContent(\n\t\tprofile: IUserDataProfile,\n\t): Promise<ITasksResourceContent> {\n\t\tconst tasksContent = await this.getTasksContent(profile);\n\t\treturn { tasks: tasksContent };\n\t}\n\n\tasync apply(content: string, profile: IUserDataProfile): Promise<void> {\n\t\tconst tasksContent: ITasksResourceContent = JSON.parse(content);\n\t\tif (!tasksContent.tasks) {\n\t\t\tthis.logService.info(\n\t\t\t\t`Importing Profile (${profile.name}): No tasks to apply...`,\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\tawait this.fileService.writeFile(\n\t\t\tprofile.tasksResource,\n\t\t\tVSBuffer.fromString(tasksContent.tasks),\n\t\t);\n\t}\n\n\tprivate async getTasksContent(\n\t\tprofile: IUserDataProfile,\n\t): Promise<string | null> {\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(\n\t\t\t\tprofile.tasksResource,\n\t\t\t);\n\t\t\treturn content.value.toString();\n\t\t} catch (error) {\n\t\t\t// File not found\n\t\t\tif (\n\t\t\t\terror instanceof FileOperationError &&\n\t\t\t\terror.fileOperationResult === FileOperationResult.FILE_NOT_FOUND\n\t\t\t) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class TasksResourceTreeItem implements IProfileResourceTreeItem {\n\treadonly type = ProfileResourceType.Tasks;\n\treadonly handle = ProfileResourceType.Tasks;\n\treadonly label = { label: localize(\"tasks\", \"Tasks\") };\n\treadonly collapsibleState = TreeItemCollapsibleState.Expanded;\n\tcheckbox: ITreeItemCheckboxState | undefined;\n\n\tconstructor(\n\t\tprivate readonly profile: IUserDataProfile,\n\t\t@IUriIdentityService\n\t\tprivate readonly uriIdentityService: IUriIdentityService,\n\t\t@IInstantiationService\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t) {}\n\n\tasync getChildren(): Promise<IProfileResourceChildTreeItem[]> {\n\t\treturn [\n\t\t\t{\n\t\t\t\thandle: this.profile.tasksResource.toString(),\n\t\t\t\tresourceUri: this.profile.tasksResource,\n\t\t\t\tcollapsibleState: TreeItemCollapsibleState.None,\n\t\t\t\tparent: this,\n\t\t\t\taccessibilityInformation: {\n\t\t\t\t\tlabel: this.uriIdentityService.extUri.basename(\n\t\t\t\t\t\tthis.profile.settingsResource,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tcommand: {\n\t\t\t\t\tid: API_OPEN_EDITOR_COMMAND_ID,\n\t\t\t\t\ttitle: \"\",\n\t\t\t\t\targuments: [\n\t\t\t\t\t\tthis.profile.tasksResource,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\t}\n\n\tasync hasContent(): Promise<boolean> {\n\t\tconst tasksContent = await this.instantiationService\n\t\t\t.createInstance(TasksResource)\n\t\t\t.getTasksResourceContent(this.profile);\n\t\treturn tasksContent.tasks !== null;\n\t}\n\n\tasync getContent(): Promise<string> {\n\t\treturn this.instantiationService\n\t\t\t.createInstance(TasksResource)\n\t\t\t.getContent(this.profile);\n\t}\n\n\tisFromDefaultProfile(): boolean {\n\t\treturn !this.profile.isDefault && !!this.profile.useDefaultFlags?.tasks;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
