{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/notebook/common/notebookDocumentService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tVSBuffer,\n\tdecodeBase64,\n\tencodeBase64,\n} from \"../../../../base/common/buffer.js\";\nimport { ResourceMap } from \"../../../../base/common/map.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport { createDecorator } from \"../../../../platform/instantiation/common/instantiation.js\";\n\nexport const INotebookDocumentService =\n\tcreateDecorator<INotebookDocumentService>(\"notebookDocumentService\");\n\nexport interface INotebookDocument {\n\treadonly uri: URI;\n\tgetCellIndex(cellUri: URI): number | undefined;\n}\n\nconst _lengths = [\"W\", \"X\", \"Y\", \"Z\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\nconst _padRegexp = new RegExp(`^[${_lengths.join(\"\")}]+`);\nconst _radix = 7;\nexport function parse(\n\tcell: URI,\n): { notebook: URI; handle: number } | undefined {\n\tif (cell.scheme !== Schemas.vscodeNotebookCell) {\n\t\treturn undefined;\n\t}\n\n\tconst idx = cell.fragment.indexOf(\"s\");\n\tif (idx < 0) {\n\t\treturn undefined;\n\t}\n\n\tconst handle = Number.parseInt(\n\t\tcell.fragment.substring(0, idx).replace(_padRegexp, \"\"),\n\t\t_radix,\n\t);\n\tconst _scheme = decodeBase64(cell.fragment.substring(idx + 1)).toString();\n\n\tif (isNaN(handle)) {\n\t\treturn undefined;\n\t}\n\treturn {\n\t\thandle,\n\t\tnotebook: cell.with({ scheme: _scheme, fragment: null }),\n\t};\n}\n\nexport function generate(notebook: URI, handle: number): URI {\n\tconst s = handle.toString(_radix);\n\tconst p = s.length < _lengths.length ? _lengths[s.length - 1] : \"z\";\n\n\tconst fragment = `${p}${s}s${encodeBase64(VSBuffer.fromString(notebook.scheme), true, true)}`;\n\treturn notebook.with({ scheme: Schemas.vscodeNotebookCell, fragment });\n}\n\nexport function parseMetadataUri(metadata: URI): URI | undefined {\n\tif (metadata.scheme !== Schemas.vscodeNotebookMetadata) {\n\t\treturn undefined;\n\t}\n\n\tconst _scheme = decodeBase64(metadata.fragment).toString();\n\n\treturn metadata.with({ scheme: _scheme, fragment: null });\n}\n\nexport function generateMetadataUri(notebook: URI): URI {\n\tconst fragment = `${encodeBase64(VSBuffer.fromString(notebook.scheme), true, true)}`;\n\treturn notebook.with({ scheme: Schemas.vscodeNotebookMetadata, fragment });\n}\n\nexport interface INotebookDocumentService {\n\treadonly _serviceBrand: undefined;\n\n\tgetNotebook(uri: URI): INotebookDocument | undefined;\n\taddNotebookDocument(document: INotebookDocument): void;\n\tremoveNotebookDocument(document: INotebookDocument): void;\n}\n\nexport class NotebookDocumentWorkbenchService\n\timplements INotebookDocumentService\n{\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _documents = new ResourceMap<INotebookDocument>();\n\n\tgetNotebook(uri: URI): INotebookDocument | undefined {\n\t\tif (uri.scheme === Schemas.vscodeNotebookCell) {\n\t\t\tconst cellUri = parse(uri);\n\t\t\tif (cellUri) {\n\t\t\t\tconst document = this._documents.get(cellUri.notebook);\n\t\t\t\tif (document) {\n\t\t\t\t\treturn document;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this._documents.get(uri);\n\t}\n\n\taddNotebookDocument(document: INotebookDocument) {\n\t\tthis._documents.set(document.uri, document);\n\t}\n\n\tremoveNotebookDocument(document: INotebookDocument) {\n\t\tthis._documents.delete(document.uri);\n\t}\n}\n\nregisterSingleton(\n\tINotebookDocumentService,\n\tNotebookDocumentWorkbenchService,\n\tInstantiationType.Delayed,\n);\n"],
  "mappings": ";;AAKA;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,mBAAmB;AAC5B,SAAS,eAAe;AAExB;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,uBAAuB;AAEzB,MAAM,2BACZ,gBAA0C,yBAAyB;AAOpE,MAAM,WAAW,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG;AAClE,MAAM,aAAa,IAAI,OAAO,KAAK,SAAS,KAAK,EAAE,CAAC,IAAI;AACxD,MAAM,SAAS;AACR,SAAS,MACf,MACgD;AAChD,MAAI,KAAK,WAAW,QAAQ,oBAAoB;AAC/C,WAAO;AAAA,EACR;AAEA,QAAM,MAAM,KAAK,SAAS,QAAQ,GAAG;AACrC,MAAI,MAAM,GAAG;AACZ,WAAO;AAAA,EACR;AAEA,QAAM,SAAS,OAAO;AAAA,IACrB,KAAK,SAAS,UAAU,GAAG,GAAG,EAAE,QAAQ,YAAY,EAAE;AAAA,IACtD;AAAA,EACD;AACA,QAAM,UAAU,aAAa,KAAK,SAAS,UAAU,MAAM,CAAC,CAAC,EAAE,SAAS;AAExE,MAAI,MAAM,MAAM,GAAG;AAClB,WAAO;AAAA,EACR;AACA,SAAO;AAAA,IACN;AAAA,IACA,UAAU,KAAK,KAAK,EAAE,QAAQ,SAAS,UAAU,KAAK,CAAC;AAAA,EACxD;AACD;AAzBgB;AA2BT,SAAS,SAAS,UAAe,QAAqB;AAC5D,QAAM,IAAI,OAAO,SAAS,MAAM;AAChC,QAAM,IAAI,EAAE,SAAS,SAAS,SAAS,SAAS,EAAE,SAAS,CAAC,IAAI;AAEhE,QAAM,WAAW,GAAG,CAAC,GAAG,CAAC,IAAI,aAAa,SAAS,WAAW,SAAS,MAAM,GAAG,MAAM,IAAI,CAAC;AAC3F,SAAO,SAAS,KAAK,EAAE,QAAQ,QAAQ,oBAAoB,SAAS,CAAC;AACtE;AANgB;AAQT,SAAS,iBAAiB,UAAgC;AAChE,MAAI,SAAS,WAAW,QAAQ,wBAAwB;AACvD,WAAO;AAAA,EACR;AAEA,QAAM,UAAU,aAAa,SAAS,QAAQ,EAAE,SAAS;AAEzD,SAAO,SAAS,KAAK,EAAE,QAAQ,SAAS,UAAU,KAAK,CAAC;AACzD;AARgB;AAUT,SAAS,oBAAoB,UAAoB;AACvD,QAAM,WAAW,GAAG,aAAa,SAAS,WAAW,SAAS,MAAM,GAAG,MAAM,IAAI,CAAC;AAClF,SAAO,SAAS,KAAK,EAAE,QAAQ,QAAQ,wBAAwB,SAAS,CAAC;AAC1E;AAHgB;AAaT,MAAM,iCAEb;AAAA,EA1FA,OA0FA;AAAA;AAAA;AAAA,EAGkB,aAAa,IAAI,YAA+B;AAAA,EAEjE,YAAY,KAAyC;AACpD,QAAI,IAAI,WAAW,QAAQ,oBAAoB;AAC9C,YAAM,UAAU,MAAM,GAAG;AACzB,UAAI,SAAS;AACZ,cAAM,WAAW,KAAK,WAAW,IAAI,QAAQ,QAAQ;AACrD,YAAI,UAAU;AACb,iBAAO;AAAA,QACR;AAAA,MACD;AAAA,IACD;AAEA,WAAO,KAAK,WAAW,IAAI,GAAG;AAAA,EAC/B;AAAA,EAEA,oBAAoB,UAA6B;AAChD,SAAK,WAAW,IAAI,SAAS,KAAK,QAAQ;AAAA,EAC3C;AAAA,EAEA,uBAAuB,UAA6B;AACnD,SAAK,WAAW,OAAO,SAAS,GAAG;AAAA,EACpC;AACD;AAEA;AAAA,EACC;AAAA,EACA;AAAA,EACA,kBAAkB;AACnB;",
  "names": []
}
