{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/files/browser/elevatedFileService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type {\n\tVSBuffer,\n\tVSBufferReadable,\n\tVSBufferReadableStream,\n} from \"../../../../base/common/buffer.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport type {\n\tIFileStatWithMetadata,\n\tIWriteFileOptions,\n} from \"../../../../platform/files/common/files.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport { IElevatedFileService } from \"../common/elevatedFileService.js\";\n\nexport class BrowserElevatedFileService implements IElevatedFileService {\n\treadonly _serviceBrand: undefined;\n\n\tisSupported(resource: URI): boolean {\n\t\t// Saving elevated is currently not supported in web for as\n\t\t// long as we have no generic support from the file service\n\t\t// (https://github.com/microsoft/vscode/issues/48659)\n\t\treturn false;\n\t}\n\n\tasync writeFileElevated(\n\t\tresource: URI,\n\t\tvalue: VSBuffer | VSBufferReadable | VSBufferReadableStream,\n\t\toptions?: IWriteFileOptions,\n\t): Promise<IFileStatWithMetadata> {\n\t\tthrow new Error(\"Unsupported\");\n\t}\n}\n\nregisterSingleton(\n\tIElevatedFileService,\n\tBrowserElevatedFileService,\n\tInstantiationType.Delayed,\n);\n"],
  "mappings": ";;AAeA;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,4BAA4B;AAE9B,MAAM,2BAA2D;AAAA,EArBxE,OAqBwE;AAAA;AAAA;AAAA,EAC9D;AAAA,EAET,YAAY,UAAwB;AAInC,WAAO;AAAA,EACR;AAAA,EAEA,MAAM,kBACL,UACA,OACA,SACiC;AACjC,UAAM,IAAI,MAAM,aAAa;AAAA,EAC9B;AACD;AAEA;AAAA,EACC;AAAA,EACA;AAAA,EACA,kBAAkB;AACnB;",
  "names": []
}
