import{ProxyChannel as c,getDelayedChannel as s}from"../../../../base/parts/ipc/common/ipc.js";import{AbstractUniversalWatcherClient as a}from"../../../../platform/files/common/watcher.js";class m extends a{constructor(r,i,t,o){super(r,i,t);this.utilityProcessWorkerWorkbenchService=o;this.init()}createWatcher(r){return c.toService(s((async()=>{const{client:t,onDidTerminate:o}=r.add(await this.utilityProcessWorkerWorkbenchService.createWorker({moduleId:"vs/platform/files/node/watcher/watcherMain",type:"fileWatcher"}));return o.then(({reason:e})=>{e?.code===0?this.trace(`terminated by itself with code ${e.code}, signal: ${e.signal}`):this.onError(`terminated by itself unexpectedly with code ${e?.code}, signal: ${e?.signal} (ETERM)`)}),t.getChannel("watcher")})()))}}export{m as UniversalWatcherClient};
