{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/remote/browser/remoteAgentService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from \"../../../../nls.js\";\nimport { IDialogService } from \"../../../../platform/dialogs/common/dialogs.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { Severity } from \"../../../../platform/notification/common/notification.js\";\nimport { IProductService } from \"../../../../platform/product/common/productService.js\";\nimport {\n\tIRemoteAuthorityResolverService,\n\tRemoteAuthorityResolverError,\n} from \"../../../../platform/remote/common/remoteAuthorityResolver.js\";\nimport { IRemoteSocketFactoryService } from \"../../../../platform/remote/common/remoteSocketFactoryService.js\";\nimport { ISignService } from \"../../../../platform/sign/common/sign.js\";\nimport {\n\ttype IWorkbenchContribution,\n\tWorkbenchPhase,\n\tregisterWorkbenchContribution2,\n} from \"../../../common/contributions.js\";\nimport { IWorkbenchEnvironmentService } from \"../../environment/common/environmentService.js\";\nimport { IHostService } from \"../../host/browser/host.js\";\nimport { IUserDataProfileService } from \"../../userDataProfile/common/userDataProfile.js\";\nimport { AbstractRemoteAgentService } from \"../common/abstractRemoteAgentService.js\";\nimport { IRemoteAgentService } from \"../common/remoteAgentService.js\";\n\nexport class RemoteAgentService\n\textends AbstractRemoteAgentService\n\timplements IRemoteAgentService\n{\n\tconstructor(\n\t\t@IRemoteSocketFactoryService\n\t\tremoteSocketFactoryService: IRemoteSocketFactoryService,\n\t\t@IUserDataProfileService\n\t\tuserDataProfileService: IUserDataProfileService,\n\t\t@IWorkbenchEnvironmentService\n\t\tenvironmentService: IWorkbenchEnvironmentService,\n\t\t@IProductService productService: IProductService,\n\t\t@IRemoteAuthorityResolverService\n\t\tremoteAuthorityResolverService: IRemoteAuthorityResolverService,\n\t\t@ISignService signService: ISignService,\n\t\t@ILogService logService: ILogService,\n\t) {\n\t\tsuper(\n\t\t\tremoteSocketFactoryService,\n\t\t\tuserDataProfileService,\n\t\t\tenvironmentService,\n\t\t\tproductService,\n\t\t\tremoteAuthorityResolverService,\n\t\t\tsignService,\n\t\t\tlogService,\n\t\t);\n\t}\n}\n\nclass RemoteConnectionFailureNotificationContribution\n\timplements IWorkbenchContribution\n{\n\tstatic readonly ID =\n\t\t\"workbench.contrib.browserRemoteConnectionFailureNotification\";\n\n\tconstructor(\n\t\t@IRemoteAgentService remoteAgentService: IRemoteAgentService,\n\t\t@IDialogService private readonly _dialogService: IDialogService,\n\t\t@IHostService private readonly _hostService: IHostService,\n\t) {\n\t\t// Let's cover the case where connecting to fetch the remote extension info fails\n\t\tremoteAgentService.getRawEnvironment().then(undefined, (err) => {\n\t\t\tif (!RemoteAuthorityResolverError.isHandled(err)) {\n\t\t\t\tthis._presentConnectionError(err);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async _presentConnectionError(err: any): Promise<void> {\n\t\tawait this._dialogService.prompt({\n\t\t\ttype: Severity.Error,\n\t\t\tmessage: nls.localize(\n\t\t\t\t\"connectionError\",\n\t\t\t\t\"An unexpected error occurred that requires a reload of this page.\",\n\t\t\t),\n\t\t\tdetail: nls.localize(\n\t\t\t\t\"connectionErrorDetail\",\n\t\t\t\t\"The workbench failed to connect to the server (Error: {0})\",\n\t\t\t\terr ? err.message : \"\",\n\t\t\t),\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\tlabel: nls.localize(\n\t\t\t\t\t\t{ key: \"reload\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\t\t\"&&Reload\",\n\t\t\t\t\t),\n\t\t\t\t\trun: () => this._hostService.reload(),\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n}\n\nregisterWorkbenchContribution2(\n\tRemoteConnectionFailureNotificationContribution.ID,\n\tRemoteConnectionFailureNotificationContribution,\n\tWorkbenchPhase.BlockRestore,\n);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,YAAY,SAAS;AACrB,SAAS,sBAAsB;AAC/B,SAAS,mBAAmB;AAC5B,SAAS,gBAAgB;AACzB,SAAS,uBAAuB;AAChC;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,mCAAmC;AAC5C,SAAS,oBAAoB;AAC7B;AAAA,EAEC;AAAA,EACA;AAAA,OACM;AACP,SAAS,oCAAoC;AAC7C,SAAS,oBAAoB;AAC7B,SAAS,+BAA+B;AACxC,SAAS,kCAAkC;AAC3C,SAAS,2BAA2B;AAE7B,IAAM,qBAAN,cACE,2BAET;AAAA,EA9BA,OA8BA;AAAA;AAAA;AAAA,EACC,YAEC,4BAEA,wBAEA,oBACiB,gBAEjB,gCACc,aACD,YACZ;AACD;AAAA,MACC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,EACD;AACD;AA3Ba,qBAAN;AAAA,EAKJ;AAAA,EAEA;AAAA,EAEA;AAAA,EAEA;AAAA,EACA;AAAA,EAEA;AAAA,EACA;AAAA,GAfU;AA6Bb,IAAM,kDAAN,MAEA;AAAA,EAIC,YACsB,oBACY,gBACF,cAC9B;AAFgC;AACF;AAG/B,uBAAmB,kBAAkB,EAAE,KAAK,QAAW,CAAC,QAAQ;AAC/D,UAAI,CAAC,6BAA6B,UAAU,GAAG,GAAG;AACjD,aAAK,wBAAwB,GAAG;AAAA,MACjC;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAzED,OA0DA;AAAA;AAAA;AAAA,EACC,OAAgB,KACf;AAAA,EAeD,MAAc,wBAAwB,KAAyB;AAC9D,UAAM,KAAK,eAAe,OAAO;AAAA,MAChC,MAAM,SAAS;AAAA,MACf,SAAS,IAAI;AAAA,QACZ;AAAA,QACA;AAAA,MACD;AAAA,MACA,QAAQ,IAAI;AAAA,QACX;AAAA,QACA;AAAA,QACA,MAAM,IAAI,UAAU;AAAA,MACrB;AAAA,MACA,SAAS;AAAA,QACR;AAAA,UACC,OAAO,IAAI;AAAA,YACV,EAAE,KAAK,UAAU,SAAS,CAAC,uBAAuB,EAAE;AAAA,YACpD;AAAA,UACD;AAAA,UACA,KAAK,6BAAM,KAAK,aAAa,OAAO,GAA/B;AAAA,QACN;AAAA,MACD;AAAA,IACD,CAAC;AAAA,EACF;AACD;AA1CM,kDAAN;AAAA,EAOG;AAAA,EACA;AAAA,EACA;AAAA,GATG;AA4CN;AAAA,EACC,gDAAgD;AAAA,EAChD;AAAA,EACA,eAAe;AAChB;",
  "names": []
}
