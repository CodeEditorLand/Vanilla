var S=Object.defineProperty;var I=Object.getOwnPropertyDescriptor;var v=(c,e,i,t)=>{for(var r=t>1?void 0:t?I(e,i):e,m=c.length-1,s;m>=0;m--)(s=c[m])&&(r=(t?s(e,i,r):s(r))||r);return t&&r&&S(e,i,r),r},o=(c,e)=>(i,t)=>e(i,t,c);import*as l from"../../../../nls.js";import{IWorkbenchEnvironmentService as d}from"../../environment/common/environmentService.js";import{IRemoteAgentService as h}from"../common/remoteAgentService.js";import{IRemoteAuthorityResolverService as f,RemoteAuthorityResolverError as g}from"../../../../platform/remote/common/remoteAuthorityResolver.js";import{AbstractRemoteAgentService as b}from"../common/abstractRemoteAgentService.js";import{IProductService as y}from"../../../../platform/product/common/productService.js";import{ISignService as k}from"../../../../platform/sign/common/sign.js";import{ILogService as u}from"../../../../platform/log/common/log.js";import{Severity as E}from"../../../../platform/notification/common/notification.js";import{IDialogService as R}from"../../../../platform/dialogs/common/dialogs.js";import{WorkbenchPhase as D,registerWorkbenchContribution2 as A}from"../../../common/contributions.js";import{IHostService as P}from"../../host/browser/host.js";import{IUserDataProfileService as W}from"../../userDataProfile/common/userDataProfile.js";import{IRemoteSocketFactoryService as _}from"../../../../platform/remote/common/remoteSocketFactoryService.js";let a=class extends b{constructor(e,i,t,r,m,s,p){super(e,i,t,r,m,s,p)}};a=v([o(0,_),o(1,W),o(2,d),o(3,y),o(4,f),o(5,k),o(6,u)],a);let n=class{constructor(e,i,t){this._dialogService=i;this._hostService=t;e.getRawEnvironment().then(void 0,r=>{g.isHandled(r)||this._presentConnectionError(r)})}static ID="workbench.contrib.browserRemoteConnectionFailureNotification";async _presentConnectionError(e){await this._dialogService.prompt({type:E.Error,message:l.localize("connectionError","An unexpected error occurred that requires a reload of this page."),detail:l.localize("connectionErrorDetail","The workbench failed to connect to the server (Error: {0})",e?e.message:""),buttons:[{label:l.localize({key:"reload",comment:["&& denotes a mnemonic"]},"&&Reload"),run:()=>this._hostService.reload()}]})}};n=v([o(0,h),o(1,R),o(2,P)],n),A(n.ID,n,D.BlockRestore);export{a as RemoteAgentService};
