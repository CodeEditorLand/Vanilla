var S=Object.defineProperty;var I=Object.getOwnPropertyDescriptor;var v=(c,e,i,t)=>{for(var r=t>1?void 0:t?I(e,i):e,m=c.length-1,s;m>=0;m--)(s=c[m])&&(r=(t?s(e,i,r):s(r))||r);return t&&r&&S(e,i,r),r},o=(c,e)=>(i,t)=>e(i,t,c);import*as l from"../../../../nls.js";import{IDialogService as d}from"../../../../platform/dialogs/common/dialogs.js";import{ILogService as h}from"../../../../platform/log/common/log.js";import{Severity as f}from"../../../../platform/notification/common/notification.js";import{IProductService as g}from"../../../../platform/product/common/productService.js";import{IRemoteAuthorityResolverService as y,RemoteAuthorityResolverError as b}from"../../../../platform/remote/common/remoteAuthorityResolver.js";import{IRemoteSocketFactoryService as k}from"../../../../platform/remote/common/remoteSocketFactoryService.js";import{ISignService as u}from"../../../../platform/sign/common/sign.js";import{WorkbenchPhase as E,registerWorkbenchContribution2 as R}from"../../../common/contributions.js";import{IWorkbenchEnvironmentService as D}from"../../environment/common/environmentService.js";import{IHostService as A}from"../../host/browser/host.js";import{IUserDataProfileService as P}from"../../userDataProfile/common/userDataProfile.js";import{AbstractRemoteAgentService as W}from"../common/abstractRemoteAgentService.js";import{IRemoteAgentService as _}from"../common/remoteAgentService.js";let a=class extends W{constructor(e,i,t,r,m,s,p){super(e,i,t,r,m,s,p)}};a=v([o(0,k),o(1,P),o(2,D),o(3,g),o(4,y),o(5,u),o(6,h)],a);let n=class{constructor(e,i,t){this._dialogService=i;this._hostService=t;e.getRawEnvironment().then(void 0,r=>{b.isHandled(r)||this._presentConnectionError(r)})}static ID="workbench.contrib.browserRemoteConnectionFailureNotification";async _presentConnectionError(e){await this._dialogService.prompt({type:f.Error,message:l.localize("connectionError","An unexpected error occurred that requires a reload of this page."),detail:l.localize("connectionErrorDetail","The workbench failed to connect to the server (Error: {0})",e?e.message:""),buttons:[{label:l.localize({key:"reload",comment:["&& denotes a mnemonic"]},"&&Reload"),run:()=>this._hostService.reload()}]})}};n=v([o(0,_),o(1,d),o(2,A)],n),R(n.ID,n,E.BlockRestore);export{a as RemoteAgentService};
