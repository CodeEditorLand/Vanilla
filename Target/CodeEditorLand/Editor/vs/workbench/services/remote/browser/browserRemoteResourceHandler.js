var d=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var f=(p,o,t,r)=>{for(var e=r>1?void 0:r?h(o,t):o,i=p.length-1,n;i>=0;i--)(n=p[i])&&(e=(r?n(o,t,e):n(e))||e);return r&&e&&d(o,t,e),e},l=(p,o)=>(t,r)=>o(t,r,p);import{VSBuffer as v}from"../../../../../vs/base/common/buffer.js";import{Disposable as I}from"../../../../../vs/base/common/lifecycle.js";import{getMediaOrTextMime as U}from"../../../../../vs/base/common/mime.js";import{URI as u}from"../../../../../vs/base/common/uri.js";import{FileOperationError as y,FileOperationResult as F,IFileService as O}from"../../../../../vs/platform/files/common/files.js";import"../../../../../vs/workbench/browser/web.api.js";let s=class extends I{constructor(t,r){super();this.provider=r;this._register(r.onDidReceiveRequest(async e=>{let i;try{i=JSON.parse(decodeURIComponent(e.uri.query))}catch{return e.respondWith(404,new Uint8Array,{})}let n;try{n=await t.readFile(u.from(i,!0))}catch(a){const m=v.fromString(a.message).buffer;return a instanceof y&&a.fileOperationResult===F.FILE_NOT_FOUND?e.respondWith(404,m,{}):e.respondWith(500,m,{})}const c=i.path&&U(i.path);e.respondWith(200,n.value.buffer,c?{"content-type":c}:{})}))}getResourceUriProvider(){const t=u.parse(document.location.href);return r=>t.with({path:this.provider.path,query:JSON.stringify(r)})}};s=f([l(0,O)],s);export{s as BrowserRemoteResourceLoader};
