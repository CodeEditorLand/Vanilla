{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/remote/electron-sandbox/remoteAgentService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../../../nls.js';\nimport { IRemoteAgentService } from '../common/remoteAgentService.js';\nimport { IRemoteAuthorityResolverService, RemoteConnectionType, RemoteAuthorityResolverError } from '../../../../platform/remote/common/remoteAuthorityResolver.js';\nimport { IProductService } from '../../../../platform/product/common/productService.js';\nimport { AbstractRemoteAgentService } from '../common/abstractRemoteAgentService.js';\nimport { ISignService } from '../../../../platform/sign/common/sign.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { IWorkbenchEnvironmentService } from '../../environment/common/environmentService.js';\nimport { INotificationService, IPromptChoice, Severity } from '../../../../platform/notification/common/notification.js';\nimport { IWorkbenchContribution, WorkbenchPhase, registerWorkbenchContribution2 } from '../../../common/contributions.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { INativeHostService } from '../../../../platform/native/common/native.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { IUserDataProfileService } from '../../userDataProfile/common/userDataProfile.js';\nimport { IRemoteSocketFactoryService } from '../../../../platform/remote/common/remoteSocketFactoryService.js';\n\nexport class RemoteAgentService extends AbstractRemoteAgentService implements IRemoteAgentService {\n\tconstructor(\n\t\t@IRemoteSocketFactoryService remoteSocketFactoryService: IRemoteSocketFactoryService,\n\t\t@IUserDataProfileService userDataProfileService: IUserDataProfileService,\n\t\t@IWorkbenchEnvironmentService environmentService: IWorkbenchEnvironmentService,\n\t\t@IProductService productService: IProductService,\n\t\t@IRemoteAuthorityResolverService remoteAuthorityResolverService: IRemoteAuthorityResolverService,\n\t\t@ISignService signService: ISignService,\n\t\t@ILogService logService: ILogService,\n\t) {\n\t\tsuper(remoteSocketFactoryService, userDataProfileService, environmentService, productService, remoteAuthorityResolverService, signService, logService);\n\t}\n}\n\nclass RemoteConnectionFailureNotificationContribution implements IWorkbenchContribution {\n\n\tstatic readonly ID = 'workbench.contrib.nativeRemoteConnectionFailureNotification';\n\n\tconstructor(\n\t\t@IRemoteAgentService private readonly _remoteAgentService: IRemoteAgentService,\n\t\t@INotificationService notificationService: INotificationService,\n\t\t@IWorkbenchEnvironmentService environmentService: IWorkbenchEnvironmentService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@INativeHostService nativeHostService: INativeHostService,\n\t\t@IRemoteAuthorityResolverService private readonly _remoteAuthorityResolverService: IRemoteAuthorityResolverService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t) {\n\t\t// Let's cover the case where connecting to fetch the remote extension info fails\n\t\tthis._remoteAgentService.getRawEnvironment()\n\t\t\t.then(undefined, err => {\n\n\t\t\t\tif (!RemoteAuthorityResolverError.isHandled(err)) {\n\t\t\t\t\tconst choices: IPromptChoice[] = [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: nls.localize('devTools', \"Open Developer Tools\"),\n\t\t\t\t\t\t\trun: () => nativeHostService.openDevTools()\n\t\t\t\t\t\t}\n\t\t\t\t\t];\n\t\t\t\t\tconst troubleshootingURL = this._getTroubleshootingURL();\n\t\t\t\t\tif (troubleshootingURL) {\n\t\t\t\t\t\tchoices.push({\n\t\t\t\t\t\t\tlabel: nls.localize('directUrl', \"Open in browser\"),\n\t\t\t\t\t\t\trun: () => openerService.open(troubleshootingURL, { openExternal: true })\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tnotificationService.prompt(\n\t\t\t\t\t\tSeverity.Error,\n\t\t\t\t\t\tnls.localize('connectionError', \"Failed to connect to the remote extension host server (Error: {0})\", err ? err.message : ''),\n\t\t\t\t\t\tchoices\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate _getTroubleshootingURL(): URI | null {\n\t\tconst remoteAgentConnection = this._remoteAgentService.getConnection();\n\t\tif (!remoteAgentConnection) {\n\t\t\treturn null;\n\t\t}\n\t\tconst connectionData = this._remoteAuthorityResolverService.getConnectionData(remoteAgentConnection.remoteAuthority);\n\t\tif (!connectionData || connectionData.connectTo.type !== RemoteConnectionType.WebSocket) {\n\t\t\treturn null;\n\t\t}\n\t\treturn URI.from({\n\t\t\tscheme: 'http',\n\t\t\tauthority: `${connectionData.connectTo.host}:${connectionData.connectTo.port}`,\n\t\t\tpath: `/version`\n\t\t});\n\t}\n\n}\n\nregisterWorkbenchContribution2(RemoteConnectionFailureNotificationContribution.ID, RemoteConnectionFailureNotificationContribution, WorkbenchPhase.BlockRestore);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,YAAY,SAAS;AACrB,SAAS,2BAA2B;AACpC,SAAS,iCAAiC,sBAAsB,oCAAoC;AACpG,SAAS,uBAAuB;AAChC,SAAS,kCAAkC;AAC3C,SAAS,oBAAoB;AAC7B,SAAS,mBAAmB;AAC5B,SAAS,oCAAoC;AAC7C,SAAS,sBAAsB,eAAe,gBAAgB;AAC9D,SAAS,wBAAwB,gBAAgB,sCAAsC;AACvF,SAAS,yBAAyB;AAClC,SAAS,0BAA0B;AACnC,SAAS,WAAW;AACpB,SAAS,sBAAsB;AAC/B,SAAS,+BAA+B;AACxC,SAAS,mCAAmC;AAErC,IAAM,qBAAN,cAAiC,2BAA0D;AAAA,EAtBlG,OAsBkG;AAAA;AAAA;AAAA,EACjG,YAC8B,4BACJ,wBACK,oBACb,gBACgB,gCACnB,aACD,YACZ;AACD,UAAM,4BAA4B,wBAAwB,oBAAoB,gBAAgB,gCAAgC,aAAa,UAAU;AAAA,EACtJ;AACD;AAZa,qBAAN;AAAA,EAEJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GARU;AAcb,IAAM,kDAAN,MAAwF;AAAA,EAIvF,YACuC,qBAChB,qBACQ,oBACX,kBACC,mBAC8B,iCAClC,eACf;AAPqC;AAKY;AAIlD,SAAK,oBAAoB,kBAAkB,EACzC,KAAK,QAAW,SAAO;AAEvB,UAAI,CAAC,6BAA6B,UAAU,GAAG,GAAG;AACjD,cAAM,UAA2B;AAAA,UAChC;AAAA,YACC,OAAO,IAAI,SAAS,YAAY,sBAAsB;AAAA,YACtD,KAAK,6BAAM,kBAAkB,aAAa,GAArC;AAAA,UACN;AAAA,QACD;AACA,cAAM,qBAAqB,KAAK,uBAAuB;AACvD,YAAI,oBAAoB;AACvB,kBAAQ,KAAK;AAAA,YACZ,OAAO,IAAI,SAAS,aAAa,iBAAiB;AAAA,YAClD,KAAK,6BAAM,cAAc,KAAK,oBAAoB,EAAE,cAAc,KAAK,CAAC,GAAnE;AAAA,UACN,CAAC;AAAA,QACF;AACA,4BAAoB;AAAA,UACnB,SAAS;AAAA,UACT,IAAI,SAAS,mBAAmB,sEAAsE,MAAM,IAAI,UAAU,EAAE;AAAA,UAC5H;AAAA,QACD;AAAA,MACD;AAAA,IACD,CAAC;AAAA,EACH;AAAA,EA1ED,OAoCwF;AAAA;AAAA;AAAA,EAEvF,OAAgB,KAAK;AAAA,EAsCb,yBAAqC;AAC5C,UAAM,wBAAwB,KAAK,oBAAoB,cAAc;AACrE,QAAI,CAAC,uBAAuB;AAC3B,aAAO;AAAA,IACR;AACA,UAAM,iBAAiB,KAAK,gCAAgC,kBAAkB,sBAAsB,eAAe;AACnH,QAAI,CAAC,kBAAkB,eAAe,UAAU,SAAS,qBAAqB,WAAW;AACxF,aAAO;AAAA,IACR;AACA,WAAO,IAAI,KAAK;AAAA,MACf,QAAQ;AAAA,MACR,WAAW,GAAG,eAAe,UAAU,IAAI,IAAI,eAAe,UAAU,IAAI;AAAA,MAC5E,MAAM;AAAA,IACP,CAAC;AAAA,EACF;AAED;AAxDM,kDAAN;AAAA,EAKG;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAXG;AA0DN,+BAA+B,gDAAgD,IAAI,iDAAiD,eAAe,YAAY;",
  "names": []
}
