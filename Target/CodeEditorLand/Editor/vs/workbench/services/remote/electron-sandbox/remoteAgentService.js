var y=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var S=(c,o,r,i)=>{for(var t=i>1?void 0:i?g(o,r):o,n=c.length-1,m;n>=0;n--)(m=c[n])&&(t=(i?m(o,r,t):m(t))||t);return i&&t&&y(o,r,t),t},e=(c,o)=>(r,i)=>o(r,i,c);import{URI as R}from"../../../../base/common/uri.js";import*as a from"../../../../nls.js";import{ILogService as b}from"../../../../platform/log/common/log.js";import{INativeHostService as d}from"../../../../platform/native/common/native.js";import{INotificationService as A,Severity as k}from"../../../../platform/notification/common/notification.js";import{IOpenerService as T}from"../../../../platform/opener/common/opener.js";import{IProductService as E}from"../../../../platform/product/common/productService.js";import{IRemoteAuthorityResolverService as u,RemoteAuthorityResolverError as D,RemoteConnectionType as U}from"../../../../platform/remote/common/remoteAuthorityResolver.js";import{IRemoteSocketFactoryService as W}from"../../../../platform/remote/common/remoteSocketFactoryService.js";import{ISignService as P}from"../../../../platform/sign/common/sign.js";import{ITelemetryService as _}from"../../../../platform/telemetry/common/telemetry.js";import{WorkbenchPhase as L,registerWorkbenchContribution2 as x}from"../../../common/contributions.js";import{IWorkbenchEnvironmentService as f}from"../../environment/common/environmentService.js";import{IUserDataProfileService as C}from"../../userDataProfile/common/userDataProfile.js";import{AbstractRemoteAgentService as O}from"../common/abstractRemoteAgentService.js";import{IRemoteAgentService as w}from"../common/remoteAgentService.js";let s=class extends O{constructor(o,r,i,t,n,m,l){super(o,r,i,t,n,m,l)}};s=S([e(0,W),e(1,C),e(2,f),e(3,E),e(4,u),e(5,P),e(6,b)],s);let v=class{constructor(o,r,i,t,n,m,l){this._remoteAgentService=o;this._remoteAuthorityResolverService=m;this._remoteAgentService.getRawEnvironment().then(void 0,p=>{if(!D.isHandled(p)){const h=[{label:a.localize("devTools","Open Developer Tools"),run:()=>n.openDevTools()}],I=this._getTroubleshootingURL();I&&h.push({label:a.localize("directUrl","Open in browser"),run:()=>l.open(I,{openExternal:!0})}),r.prompt(k.Error,a.localize("connectionError","Failed to connect to the remote extension host server (Error: {0})",p?p.message:""),h)}})}static ID="workbench.contrib.nativeRemoteConnectionFailureNotification";_getTroubleshootingURL(){const o=this._remoteAgentService.getConnection();if(!o)return null;const r=this._remoteAuthorityResolverService.getConnectionData(o.remoteAuthority);return!r||r.connectTo.type!==U.WebSocket?null:R.from({scheme:"http",authority:`${r.connectTo.host}:${r.connectTo.port}`,path:"/version"})}};v=S([e(0,w),e(1,A),e(2,f),e(3,_),e(4,d),e(5,u),e(6,T)],v),x(v.ID,v,L.BlockRestore);export{s as RemoteAgentService};
