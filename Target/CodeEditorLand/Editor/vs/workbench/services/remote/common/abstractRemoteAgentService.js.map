{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/remote/common/abstractRemoteAgentService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { IChannel, IServerChannel, getDelayedChannel, IPCLogger } from '../../../../base/parts/ipc/common/ipc.js';\nimport { Client } from '../../../../base/parts/ipc/common/ipc.net.js';\nimport { IWorkbenchEnvironmentService } from '../../environment/common/environmentService.js';\nimport { connectRemoteAgentManagement, IConnectionOptions, ManagementPersistentConnection, PersistentConnectionEvent } from '../../../../platform/remote/common/remoteAgentConnection.js';\nimport { IExtensionHostExitInfo, IRemoteAgentConnection, IRemoteAgentService } from './remoteAgentService.js';\nimport { IRemoteAuthorityResolverService } from '../../../../platform/remote/common/remoteAuthorityResolver.js';\nimport { RemoteAgentConnectionContext, IRemoteAgentEnvironment } from '../../../../platform/remote/common/remoteAgentEnvironment.js';\nimport { RemoteExtensionEnvironmentChannelClient } from './remoteAgentEnvironmentChannel.js';\nimport { IDiagnosticInfoOptions, IDiagnosticInfo } from '../../../../platform/diagnostics/common/diagnostics.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { ISignService } from '../../../../platform/sign/common/sign.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { ITelemetryData, TelemetryLevel } from '../../../../platform/telemetry/common/telemetry.js';\nimport { IProductService } from '../../../../platform/product/common/productService.js';\nimport { IUserDataProfileService } from '../../userDataProfile/common/userDataProfile.js';\nimport { IRemoteSocketFactoryService } from '../../../../platform/remote/common/remoteSocketFactoryService.js';\n\nexport abstract class AbstractRemoteAgentService extends Disposable implements IRemoteAgentService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _connection: IRemoteAgentConnection | null;\n\tprivate _environment: Promise<IRemoteAgentEnvironment | null> | null;\n\n\tconstructor(\n\t\t@IRemoteSocketFactoryService private readonly remoteSocketFactoryService: IRemoteSocketFactoryService,\n\t\t@IUserDataProfileService private readonly userDataProfileService: IUserDataProfileService,\n\t\t@IWorkbenchEnvironmentService protected readonly _environmentService: IWorkbenchEnvironmentService,\n\t\t@IProductService productService: IProductService,\n\t\t@IRemoteAuthorityResolverService private readonly _remoteAuthorityResolverService: IRemoteAuthorityResolverService,\n\t\t@ISignService signService: ISignService,\n\t\t@ILogService logService: ILogService\n\t) {\n\t\tsuper();\n\t\tif (this._environmentService.remoteAuthority) {\n\t\t\tthis._connection = this._register(new RemoteAgentConnection(this._environmentService.remoteAuthority, productService.commit, productService.quality, this.remoteSocketFactoryService, this._remoteAuthorityResolverService, signService, logService));\n\t\t} else {\n\t\t\tthis._connection = null;\n\t\t}\n\t\tthis._environment = null;\n\t}\n\n\tgetConnection(): IRemoteAgentConnection | null {\n\t\treturn this._connection;\n\t}\n\n\tgetEnvironment(): Promise<IRemoteAgentEnvironment | null> {\n\t\treturn this.getRawEnvironment().then(undefined, () => null);\n\t}\n\n\tgetRawEnvironment(): Promise<IRemoteAgentEnvironment | null> {\n\t\tif (!this._environment) {\n\t\t\tthis._environment = this._withChannel(\n\t\t\t\tasync (channel, connection) => {\n\t\t\t\t\tconst env = await RemoteExtensionEnvironmentChannelClient.getEnvironmentData(channel, connection.remoteAuthority, this.userDataProfileService.currentProfile.isDefault ? undefined : this.userDataProfileService.currentProfile.id);\n\t\t\t\t\tthis._remoteAuthorityResolverService._setAuthorityConnectionToken(connection.remoteAuthority, env.connectionToken);\n\t\t\t\t\treturn env;\n\t\t\t\t},\n\t\t\t\tnull\n\t\t\t);\n\t\t}\n\t\treturn this._environment;\n\t}\n\n\tgetExtensionHostExitInfo(reconnectionToken: string): Promise<IExtensionHostExitInfo | null> {\n\t\treturn this._withChannel(\n\t\t\t(channel, connection) => RemoteExtensionEnvironmentChannelClient.getExtensionHostExitInfo(channel, connection.remoteAuthority, reconnectionToken),\n\t\t\tnull\n\t\t);\n\t}\n\n\tgetDiagnosticInfo(options: IDiagnosticInfoOptions): Promise<IDiagnosticInfo | undefined> {\n\t\treturn this._withChannel(\n\t\t\tchannel => RemoteExtensionEnvironmentChannelClient.getDiagnosticInfo(channel, options),\n\t\t\tundefined\n\t\t);\n\t}\n\n\tupdateTelemetryLevel(telemetryLevel: TelemetryLevel): Promise<void> {\n\t\treturn this._withTelemetryChannel(\n\t\t\tchannel => RemoteExtensionEnvironmentChannelClient.updateTelemetryLevel(channel, telemetryLevel),\n\t\t\tundefined\n\t\t);\n\t}\n\n\tlogTelemetry(eventName: string, data: ITelemetryData): Promise<void> {\n\t\treturn this._withTelemetryChannel(\n\t\t\tchannel => RemoteExtensionEnvironmentChannelClient.logTelemetry(channel, eventName, data),\n\t\t\tundefined\n\t\t);\n\t}\n\n\tflushTelemetry(): Promise<void> {\n\t\treturn this._withTelemetryChannel(\n\t\t\tchannel => RemoteExtensionEnvironmentChannelClient.flushTelemetry(channel),\n\t\t\tundefined\n\t\t);\n\t}\n\n\tgetRoundTripTime(): Promise<number | undefined> {\n\t\treturn this._withTelemetryChannel(\n\t\t\tasync channel => {\n\t\t\t\tconst start = Date.now();\n\t\t\t\tawait RemoteExtensionEnvironmentChannelClient.ping(channel);\n\t\t\t\treturn Date.now() - start;\n\t\t\t},\n\t\t\tundefined\n\t\t);\n\t}\n\n\tasync endConnection(): Promise<void> {\n\t\tif (this._connection) {\n\t\t\tawait this._connection.end();\n\t\t\tthis._connection.dispose();\n\t\t}\n\t}\n\n\tprivate _withChannel<R>(callback: (channel: IChannel, connection: IRemoteAgentConnection) => Promise<R>, fallback: R): Promise<R> {\n\t\tconst connection = this.getConnection();\n\t\tif (!connection) {\n\t\t\treturn Promise.resolve(fallback);\n\t\t}\n\t\treturn connection.withChannel('remoteextensionsenvironment', (channel) => callback(channel, connection));\n\t}\n\n\tprivate _withTelemetryChannel<R>(callback: (channel: IChannel, connection: IRemoteAgentConnection) => Promise<R>, fallback: R): Promise<R> {\n\t\tconst connection = this.getConnection();\n\t\tif (!connection) {\n\t\t\treturn Promise.resolve(fallback);\n\t\t}\n\t\treturn connection.withChannel('telemetry', (channel) => callback(channel, connection));\n\t}\n\n}\n\nclass RemoteAgentConnection extends Disposable implements IRemoteAgentConnection {\n\n\tprivate readonly _onReconnecting = this._register(new Emitter<void>());\n\tpublic readonly onReconnecting = this._onReconnecting.event;\n\n\tprivate readonly _onDidStateChange = this._register(new Emitter<PersistentConnectionEvent>());\n\tpublic readonly onDidStateChange = this._onDidStateChange.event;\n\n\treadonly remoteAuthority: string;\n\tprivate _connection: Promise<Client<RemoteAgentConnectionContext>> | null;\n\n\tprivate _initialConnectionMs: number | undefined;\n\n\tconstructor(\n\t\tremoteAuthority: string,\n\t\tprivate readonly _commit: string | undefined,\n\t\tprivate readonly _quality: string | undefined,\n\t\tprivate readonly _remoteSocketFactoryService: IRemoteSocketFactoryService,\n\t\tprivate readonly _remoteAuthorityResolverService: IRemoteAuthorityResolverService,\n\t\tprivate readonly _signService: ISignService,\n\t\tprivate readonly _logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.remoteAuthority = remoteAuthority;\n\t\tthis._connection = null;\n\t}\n\n\tend: () => Promise<void> = () => Promise.resolve();\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\treturn <T>getDelayedChannel(this._getOrCreateConnection().then(c => c.getChannel(channelName)));\n\t}\n\n\twithChannel<T extends IChannel, R>(channelName: string, callback: (channel: T) => Promise<R>): Promise<R> {\n\t\tconst channel = this.getChannel<T>(channelName);\n\t\tconst result = callback(channel);\n\t\treturn result;\n\t}\n\n\tregisterChannel<T extends IServerChannel<RemoteAgentConnectionContext>>(channelName: string, channel: T): void {\n\t\tthis._getOrCreateConnection().then(client => client.registerChannel(channelName, channel));\n\t}\n\n\tasync getInitialConnectionTimeMs() {\n\t\ttry {\n\t\t\tawait this._getOrCreateConnection();\n\t\t} catch {\n\t\t\t// ignored -- time is measured even if connection fails\n\t\t}\n\n\t\treturn this._initialConnectionMs!;\n\t}\n\n\tprivate _getOrCreateConnection(): Promise<Client<RemoteAgentConnectionContext>> {\n\t\tif (!this._connection) {\n\t\t\tthis._connection = this._createConnection();\n\t\t}\n\t\treturn this._connection;\n\t}\n\n\tprivate async _createConnection(): Promise<Client<RemoteAgentConnectionContext>> {\n\t\tlet firstCall = true;\n\t\tconst options: IConnectionOptions = {\n\t\t\tcommit: this._commit,\n\t\t\tquality: this._quality,\n\t\t\taddressProvider: {\n\t\t\t\tgetAddress: async () => {\n\t\t\t\t\tif (firstCall) {\n\t\t\t\t\t\tfirstCall = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._onReconnecting.fire(undefined);\n\t\t\t\t\t}\n\t\t\t\t\tconst { authority } = await this._remoteAuthorityResolverService.resolveAuthority(this.remoteAuthority);\n\t\t\t\t\treturn { connectTo: authority.connectTo, connectionToken: authority.connectionToken };\n\t\t\t\t}\n\t\t\t},\n\t\t\tremoteSocketFactoryService: this._remoteSocketFactoryService,\n\t\t\tsignService: this._signService,\n\t\t\tlogService: this._logService,\n\t\t\tipcLogger: false ? new IPCLogger(`Local \\u2192 Remote`, `Remote \\u2192 Local`) : null\n\t\t};\n\t\tlet connection: ManagementPersistentConnection;\n\t\tconst start = Date.now();\n\t\ttry {\n\t\t\tconnection = this._register(await connectRemoteAgentManagement(options, this.remoteAuthority, `renderer`));\n\t\t} finally {\n\t\t\tthis._initialConnectionMs = Date.now() - start;\n\t\t}\n\n\t\tconnection.protocol.onDidDispose(() => {\n\t\t\tconnection.dispose();\n\t\t});\n\t\tthis.end = () => {\n\t\t\tconnection.protocol.sendDisconnect();\n\t\t\treturn connection.protocol.drain();\n\t\t};\n\t\tthis._register(connection.onDidStateChange(e => this._onDidStateChange.fire(e)));\n\t\treturn connection.client;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
