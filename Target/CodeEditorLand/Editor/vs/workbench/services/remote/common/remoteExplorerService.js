var g=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var p=(i,e,r,n)=>{for(var t=n>1?void 0:n?h(e,r):e,l=i.length-1,u;l>=0;l--)(u=i[l])&&(t=(n?u(e,r,t):u(t))||t);return n&&t&&g(e,r,t),t},s=(i,e)=>(r,n)=>e(r,n,i);import*as o from"../../../../nls.js";import{Emitter as d}from"../../../../base/common/event.js";import{IInstantiationService as T,createDecorator as f}from"../../../../platform/instantiation/common/instantiation.js";import{InstantiationType as E,registerSingleton as b}from"../../../../platform/instantiation/common/extensions.js";import{IStorageService as P,StorageScope as m,StorageTarget as c}from"../../../../platform/storage/common/storage.js";import{ITunnelService as _}from"../../../../platform/tunnel/common/tunnel.js";import"../../../../base/common/lifecycle.js";import"../../../common/views.js";import"../../../../platform/remote/common/remoteAuthorityResolver.js";import"../../../../base/common/uri.js";import{TunnelModel as v}from"./tunnelModel.js";import{ExtensionsRegistry as y}from"../../extensions/common/extensionsRegistry.js";import"../../../../platform/extensions/common/extensions.js";import"../../../../base/common/jsonSchema.js";const S=f("remoteExplorerService"),I="remote.explorerType",se="~remote.forwardedPorts",de="~remote.forwardedPortsContainer",le="remote.autoForwardPorts",ue="remote.autoForwardPortsSource",pe="remote.autoForwardPortsFallback",me="process",ce="output",Ie="hybrid";var C=(t=>(t.Candidate="Candidate",t.Detected="Detected",t.Forwarded="Forwarded",t.Add="Add",t))(C||{}),D=(t=>(t[t.None=0]="None",t[t.New=1]="New",t[t.Label=2]="Label",t[t.LocalPort=3]="LocalPort",t))(D||{});const x={type:"object",required:["id"],properties:{id:{description:o.localize("getStartedWalkthrough.id","The ID of a Get Started walkthrough to open."),type:"string"}}},R=y.registerExtensionPoint({extensionPoint:"remoteHelp",jsonSchema:{description:o.localize("RemoteHelpInformationExtPoint","Contributes help information for Remote"),type:"object",properties:{getStarted:{description:o.localize("RemoteHelpInformationExtPoint.getStarted","The url, or a command that returns the url, to your project's Getting Started page, or a walkthrough ID contributed by your project's extension"),oneOf:[{type:"string"},x]},documentation:{description:o.localize("RemoteHelpInformationExtPoint.documentation","The url, or a command that returns the url, to your project's documentation page"),type:"string"},feedback:{description:o.localize("RemoteHelpInformationExtPoint.feedback","The url, or a command that returns the url, to your project's feedback reporter"),type:"string",markdownDeprecationMessage:o.localize("RemoteHelpInformationExtPoint.feedback.deprecated","Use {0} instead","`reportIssue`")},reportIssue:{description:o.localize("RemoteHelpInformationExtPoint.reportIssue","The url, or a command that returns the url, to your project's issue reporter"),type:"string"},issues:{description:o.localize("RemoteHelpInformationExtPoint.issues","The url, or a command that returns the url, to your project's issues list"),type:"string"}}}});var F=(n=>(n[n.Disabled=0]="Disabled",n[n.ViewOnly=1]="ViewOnly",n[n.AdditionalFeatures=2]="AdditionalFeatures",n))(F||{});let a=class{constructor(e,r,n){this.storageService=e;this.tunnelService=r;this._tunnelModel=n.createInstance(v),R.setHandler(t=>{this._helpInformation.push(...t),this._onDidChangeHelpInformation.fire(t)})}_serviceBrand;_targetType=[];_onDidChangeTargetType=new d;onDidChangeTargetType=this._onDidChangeTargetType.event;_onDidChangeHelpInformation=new d;onDidChangeHelpInformation=this._onDidChangeHelpInformation.event;_helpInformation=[];_tunnelModel;_editable;_onDidChangeEditable=new d;onDidChangeEditable=this._onDidChangeEditable.event;_onEnabledPortsFeatures=new d;onEnabledPortsFeatures=this._onEnabledPortsFeatures.event;_portsFeaturesEnabled=0;namedProcesses=new Map;get helpInformation(){return this._helpInformation}set targetType(e){const r=this._targetType.length>0?this._targetType[0]:"",n=e.length>0?e[0]:"";r!==n&&(this._targetType=e,this.storageService.store(I,this._targetType.toString(),m.WORKSPACE,c.MACHINE),this.storageService.store(I,this._targetType.toString(),m.PROFILE,c.USER),this._onDidChangeTargetType.fire(this._targetType))}get targetType(){return this._targetType}get tunnelModel(){return this._tunnelModel}forward(e,r){return this.tunnelModel.forward(e,r)}close(e,r){return this.tunnelModel.close(e.host,e.port,r)}setTunnelInformation(e){e?.features&&this.tunnelService.setTunnelFeatures(e.features),this.tunnelModel.addEnvironmentTunnels(e?.environmentTunnels)}setEditable(e,r,n){n?this._editable={tunnelItem:e,data:n,editId:r}:this._editable=void 0,this._onDidChangeEditable.fire(e?{tunnel:e,editId:r}:void 0)}getEditableData(e,r){return this._editable&&(!e&&e===this._editable.tunnelItem||e&&this._editable.tunnelItem?.remotePort===e.remotePort&&this._editable.tunnelItem.remoteHost===e.remoteHost&&this._editable.editId===r)?this._editable.data:void 0}setCandidateFilter(e){return e?(this.tunnelModel.setCandidateFilter(e),{dispose:()=>{this.tunnelModel.setCandidateFilter(void 0)}}):{dispose:()=>{}}}onFoundNewCandidates(e){this.tunnelModel.setCandidates(e)}restore(){return this.tunnelModel.restoreForwarded()}enablePortsFeatures(e){this._portsFeaturesEnabled=e?1:2,this._onEnabledPortsFeatures.fire()}get portsFeaturesEnabled(){return this._portsFeaturesEnabled}};a=p([s(0,P),s(1,_),s(2,T)],a),b(S,a,E.Delayed);export{S as IRemoteExplorerService,pe as PORT_AUTO_FALLBACK_SETTING,le as PORT_AUTO_FORWARD_SETTING,ue as PORT_AUTO_SOURCE_SETTING,Ie as PORT_AUTO_SOURCE_SETTING_HYBRID,ce as PORT_AUTO_SOURCE_SETTING_OUTPUT,me as PORT_AUTO_SOURCE_SETTING_PROCESS,F as PortsEnablement,I as REMOTE_EXPLORER_TYPE_KEY,de as TUNNEL_VIEW_CONTAINER_ID,se as TUNNEL_VIEW_ID,D as TunnelEditId,C as TunnelType};
