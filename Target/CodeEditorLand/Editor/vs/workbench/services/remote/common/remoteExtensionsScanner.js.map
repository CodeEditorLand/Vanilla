{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/remote/common/remoteExtensionsScanner.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as platform from \"../../../../base/common/platform.js\";\nimport type { Mutable } from \"../../../../base/common/types.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport type { IChannel } from \"../../../../base/parts/ipc/common/ipc.js\";\nimport type { IExtensionDescription } from \"../../../../platform/extensions/common/extensions.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport {\n\tIRemoteExtensionsScannerService,\n\tRemoteExtensionsScannerChannelName,\n} from \"../../../../platform/remote/common/remoteExtensionsScanner.js\";\nimport { IWorkbenchEnvironmentService } from \"../../environment/common/environmentService.js\";\nimport { IWorkbenchExtensionManagementService } from \"../../extensionManagement/common/extensionManagement.js\";\nimport { IActiveLanguagePackService } from \"../../localization/common/locale.js\";\nimport { IRemoteUserDataProfilesService } from \"../../userDataProfile/common/remoteUserDataProfiles.js\";\nimport { IUserDataProfileService } from \"../../userDataProfile/common/userDataProfile.js\";\nimport { IRemoteAgentService } from \"./remoteAgentService.js\";\n\nclass RemoteExtensionsScannerService\n\timplements IRemoteExtensionsScannerService\n{\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IRemoteAgentService private readonly remoteAgentService: IRemoteAgentService,\n\t\t@IWorkbenchEnvironmentService private readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IUserDataProfileService private readonly userDataProfileService: IUserDataProfileService,\n\t\t@IRemoteUserDataProfilesService private readonly remoteUserDataProfilesService: IRemoteUserDataProfilesService,\n\t\t@IActiveLanguagePackService private readonly activeLanguagePackService: IActiveLanguagePackService,\n\t\t@IWorkbenchExtensionManagementService private readonly extensionManagementService: IWorkbenchExtensionManagementService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) { }\n\n\twhenExtensionsReady(): Promise<void> {\n\t\treturn this.withChannel(\n\t\t\t(channel) => channel.call(\"whenExtensionsReady\"),\n\t\t\tundefined,\n\t\t);\n\t}\n\n\tasync scanExtensions(): Promise<IExtensionDescription[]> {\n\t\ttry {\n\t\t\tconst languagePack =\n\t\t\t\tawait this.activeLanguagePackService.getExtensionIdProvidingCurrentLocale();\n\t\t\treturn await this.withChannel(async (channel) => {\n\t\t\t\tconst profileLocation = this.userDataProfileService\n\t\t\t\t\t.currentProfile.isDefault\n\t\t\t\t\t? undefined\n\t\t\t\t\t: (\n\t\t\t\t\t\t\tawait this.remoteUserDataProfilesService.getRemoteProfile(\n\t\t\t\t\t\t\t\tthis.userDataProfileService.currentProfile,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t).extensionsResource;\n\t\t\t\tconst scannedExtensions = await channel.call<\n\t\t\t\t\tMutable<IExtensionDescription>[]\n\t\t\t\t>(\"scanExtensions\", [\n\t\t\t\t\tplatform.language,\n\t\t\t\t\tprofileLocation,\n\t\t\t\t\tthis.extensionManagementService.getInstalledWorkspaceExtensionLocations(),\n\t\t\t\t\tthis.environmentService.extensionDevelopmentLocationURI,\n\t\t\t\t\tlanguagePack,\n\t\t\t\t]);\n\t\t\t\tscannedExtensions.forEach((extension) => {\n\t\t\t\t\textension.extensionLocation = URI.revive(\n\t\t\t\t\t\textension.extensionLocation,\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t\treturn scannedExtensions;\n\t\t\t}, []);\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate withChannel<R>(\n\t\tcallback: (channel: IChannel) => Promise<R>,\n\t\tfallback: R,\n\t): Promise<R> {\n\t\tconst connection = this.remoteAgentService.getConnection();\n\t\tif (!connection) {\n\t\t\treturn Promise.resolve(fallback);\n\t\t}\n\t\treturn connection.withChannel(\n\t\t\tRemoteExtensionsScannerChannelName,\n\t\t\t(channel) => callback(channel),\n\t\t);\n\t}\n}\n\nregisterSingleton(\n\tIRemoteExtensionsScannerService,\n\tRemoteExtensionsScannerService,\n\tInstantiationType.Delayed,\n);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,YAAY,cAAc;AAE1B,SAAS,WAAW;AAGpB;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,mBAAmB;AAC5B;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,oCAAoC;AAC7C,SAAS,4CAA4C;AACrD,SAAS,kCAAkC;AAC3C,SAAS,sCAAsC;AAC/C,SAAS,+BAA+B;AACxC,SAAS,2BAA2B;AAEpC,IAAM,iCAAN,MAEA;AAAA,EAGC,YACuC,oBACS,oBACL,wBACO,+BACJ,2BACU,4BACzB,YAC7B;AAPqC;AACS;AACL;AACO;AACJ;AACU;AACzB;AAAA,EAC3B;AAAA,EAvCL,OA4BA;AAAA;AAAA;AAAA,EAaC,sBAAqC;AACpC,WAAO,KAAK;AAAA,MACX,CAAC,YAAY,QAAQ,KAAK,qBAAqB;AAAA,MAC/C;AAAA,IACD;AAAA,EACD;AAAA,EAEA,MAAM,iBAAmD;AACxD,QAAI;AACH,YAAM,eACL,MAAM,KAAK,0BAA0B,qCAAqC;AAC3E,aAAO,MAAM,KAAK,YAAY,OAAO,YAAY;AAChD,cAAM,kBAAkB,KAAK,uBAC3B,eAAe,YACd,UAEA,MAAM,KAAK,8BAA8B;AAAA,UACxC,KAAK,uBAAuB;AAAA,QAC7B,GACC;AACJ,cAAM,oBAAoB,MAAM,QAAQ,KAEtC,kBAAkB;AAAA,UACnB,SAAS;AAAA,UACT;AAAA,UACA,KAAK,2BAA2B,wCAAwC;AAAA,UACxE,KAAK,mBAAmB;AAAA,UACxB;AAAA,QACD,CAAC;AACD,0BAAkB,QAAQ,CAAC,cAAc;AACxC,oBAAU,oBAAoB,IAAI;AAAA,YACjC,UAAU;AAAA,UACX;AAAA,QACD,CAAC;AACD,eAAO;AAAA,MACR,GAAG,CAAC,CAAC;AAAA,IACN,SAAS,OAAO;AACf,WAAK,WAAW,MAAM,KAAK;AAC3B,aAAO,CAAC;AAAA,IACT;AAAA,EACD;AAAA,EAEQ,YACP,UACA,UACa;AACb,UAAM,aAAa,KAAK,mBAAmB,cAAc;AACzD,QAAI,CAAC,YAAY;AAChB,aAAO,QAAQ,QAAQ,QAAQ;AAAA,IAChC;AACA,WAAO,WAAW;AAAA,MACjB;AAAA,MACA,CAAC,YAAY,SAAS,OAAO;AAAA,IAC9B;AAAA,EACD;AACD;AAtEM,iCAAN;AAAA,EAMG;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAZG;AAwEN;AAAA,EACC;AAAA,EACA;AAAA,EACA,kBAAkB;AACnB;",
  "names": []
}
