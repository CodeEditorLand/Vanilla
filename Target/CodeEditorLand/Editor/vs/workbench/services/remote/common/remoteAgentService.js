import{timeout as r}from"../../../../base/common/async.js";import{createDecorator as a}from"../../../../platform/instantiation/common/instantiation.js";const l=a("remoteAgentService"),c=new class{maxSampleCount=5;sampleDelay=2e3;initial=[];maxInitialCount=3;average=[];maxAverageCount=100;highLatencyMultiple=2;highLatencyMinThreshold=500;highLatencyMaxThreshold=1500;lastMeasurement=void 0;get latency(){return this.lastMeasurement}async measure(o){let e=Number.POSITIVE_INFINITY;for(let n=0;n<this.maxSampleCount;n++){const t=await o.getRoundTripTime();if(t===void 0)return;e=Math.min(e,t/2),await r(this.sampleDelay)}this.average.push(e),this.average.length>this.maxAverageCount&&this.average.shift();let i;return this.initial.length<this.maxInitialCount?this.initial.push(e):i=this.initial.reduce((n,t)=>n+t,0)/this.initial.length,this.lastMeasurement={initial:i,current:e,average:this.average.reduce((n,t)=>n+t,0)/this.average.length,high:typeof i>"u"?!1:e>this.highLatencyMaxThreshold||e>this.highLatencyMinThreshold&&e>i*this.highLatencyMultiple},this.lastMeasurement}};export{l as IRemoteAgentService,c as remoteConnectionLatencyMeasurer};
