{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/remote/common/remoteFileSystemProviderClient.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getErrorMessage } from \"../../../../base/common/errors.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport { OperatingSystem } from \"../../../../base/common/platform.js\";\nimport { DiskFileSystemProviderClient } from \"../../../../platform/files/common/diskFileSystemProviderClient.js\";\nimport type { IFileService } from \"../../../../platform/files/common/files.js\";\nimport type { ILogService } from \"../../../../platform/log/common/log.js\";\nimport type { IRemoteAgentEnvironment } from \"../../../../platform/remote/common/remoteAgentEnvironment.js\";\nimport type {\n\tIRemoteAgentConnection,\n\tIRemoteAgentService,\n} from \"./remoteAgentService.js\";\n\nexport const REMOTE_FILE_SYSTEM_CHANNEL_NAME = \"remoteFilesystem\";\n\nexport class RemoteFileSystemProviderClient extends DiskFileSystemProviderClient {\n\tstatic register(\n\t\tremoteAgentService: IRemoteAgentService,\n\t\tfileService: IFileService,\n\t\tlogService: ILogService,\n\t): IDisposable {\n\t\tconst connection = remoteAgentService.getConnection();\n\t\tif (!connection) {\n\t\t\treturn Disposable.None;\n\t\t}\n\n\t\tconst disposables = new DisposableStore();\n\n\t\tconst environmentPromise = (async () => {\n\t\t\ttry {\n\t\t\t\tconst environment =\n\t\t\t\t\tawait remoteAgentService.getRawEnvironment();\n\t\t\t\tif (environment) {\n\t\t\t\t\t// Register remote fsp even before it is asked to activate\n\t\t\t\t\t// because, some features (configuration) wait for its\n\t\t\t\t\t// registration before making fs calls.\n\t\t\t\t\tfileService.registerProvider(\n\t\t\t\t\t\tSchemas.vscodeRemote,\n\t\t\t\t\t\tdisposables.add(\n\t\t\t\t\t\t\tnew RemoteFileSystemProviderClient(\n\t\t\t\t\t\t\t\tenvironment,\n\t\t\t\t\t\t\t\tconnection,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tlogService.error(\n\t\t\t\t\t\t\"Cannot register remote filesystem provider. Remote environment doesnot exist.\",\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tlogService.error(\n\t\t\t\t\t\"Cannot register remote filesystem provider. Error while fetching remote environment.\",\n\t\t\t\t\tgetErrorMessage(error),\n\t\t\t\t);\n\t\t\t}\n\t\t})();\n\n\t\tdisposables.add(\n\t\t\tfileService.onWillActivateFileSystemProvider((e) => {\n\t\t\t\tif (e.scheme === Schemas.vscodeRemote) {\n\t\t\t\t\te.join(environmentPromise);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\treturn disposables;\n\t}\n\n\tprivate constructor(\n\t\tremoteAgentEnvironment: IRemoteAgentEnvironment,\n\t\tconnection: IRemoteAgentConnection,\n\t) {\n\t\tsuper(connection.getChannel(REMOTE_FILE_SYSTEM_CHANNEL_NAME), {\n\t\t\tpathCaseSensitive:\n\t\t\t\tremoteAgentEnvironment.os === OperatingSystem.Linux,\n\t\t});\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,uBAAuB;AAChC;AAAA,EACC;AAAA,EACA;AAAA,OAEM;AACP,SAAS,eAAe;AACxB,SAAS,uBAAuB;AAChC,SAAS,oCAAoC;AAStC,MAAM,kCAAkC;AAExC,MAAM,uCAAuC,6BAA6B;AAAA,EAxBjF,OAwBiF;AAAA;AAAA;AAAA,EAChF,OAAO,SACN,oBACA,aACA,YACc;AACd,UAAM,aAAa,mBAAmB,cAAc;AACpD,QAAI,CAAC,YAAY;AAChB,aAAO,WAAW;AAAA,IACnB;AAEA,UAAM,cAAc,IAAI,gBAAgB;AAExC,UAAM,sBAAsB,YAAY;AACvC,UAAI;AACH,cAAM,cACL,MAAM,mBAAmB,kBAAkB;AAC5C,YAAI,aAAa;AAIhB,sBAAY;AAAA,YACX,QAAQ;AAAA,YACR,YAAY;AAAA,cACX,IAAI;AAAA,gBACH;AAAA,gBACA;AAAA,cACD;AAAA,YACD;AAAA,UACD;AAAA,QACD,OAAO;AACN,qBAAW;AAAA,YACV;AAAA,UACD;AAAA,QACD;AAAA,MACD,SAAS,OAAO;AACf,mBAAW;AAAA,UACV;AAAA,UACA,gBAAgB,KAAK;AAAA,QACtB;AAAA,MACD;AAAA,IACD,GAAG;AAEH,gBAAY;AAAA,MACX,YAAY,iCAAiC,CAAC,MAAM;AACnD,YAAI,EAAE,WAAW,QAAQ,cAAc;AACtC,YAAE,KAAK,kBAAkB;AAAA,QAC1B;AAAA,MACD,CAAC;AAAA,IACF;AAEA,WAAO;AAAA,EACR;AAAA,EAEQ,YACP,wBACA,YACC;AACD,UAAM,WAAW,WAAW,+BAA+B,GAAG;AAAA,MAC7D,mBACC,uBAAuB,OAAO,gBAAgB;AAAA,IAChD,CAAC;AAAA,EACF;AACD;",
  "names": []
}
