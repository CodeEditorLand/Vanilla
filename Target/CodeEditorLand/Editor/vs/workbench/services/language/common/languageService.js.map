{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/language/common/languageService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from '../../../../nls.js';\nimport { clearConfiguredLanguageAssociations, registerConfiguredLanguageAssociation } from '../../../../editor/common/services/languagesAssociations.js';\nimport { joinPath } from '../../../../base/common/resources.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ILanguageExtensionPoint, ILanguageService } from '../../../../editor/common/languages/language.js';\nimport { LanguageService } from '../../../../editor/common/services/languageService.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IEnvironmentService } from '../../../../platform/environment/common/environment.js';\nimport { FILES_ASSOCIATIONS_CONFIG, IFilesConfiguration } from '../../../../platform/files/common/files.js';\nimport { IExtensionService } from '../../extensions/common/extensions.js';\nimport { ExtensionMessageCollector, ExtensionsRegistry, IExtensionPoint, IExtensionPointUser } from '../../extensions/common/extensionsRegistry.js';\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { IExtensionManifest } from '../../../../platform/extensions/common/extensions.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Extensions, IExtensionFeatureTableRenderer, IExtensionFeaturesRegistry, IRenderedData, IRowData, ITableData } from '../../extensionManagement/common/extensionFeatures.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { SyncDescriptor } from '../../../../platform/instantiation/common/descriptors.js';\nimport { index } from '../../../../base/common/arrays.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { isString } from '../../../../base/common/types.js';\n\nexport interface IRawLanguageExtensionPoint {\n\tid: string;\n\textensions: string[];\n\tfilenames: string[];\n\tfilenamePatterns: string[];\n\tfirstLine: string;\n\taliases: string[];\n\tmimetypes: string[];\n\tconfiguration: string;\n\ticon: { light: string; dark: string };\n}\n\nexport const languagesExtPoint: IExtensionPoint<IRawLanguageExtensionPoint[]> = ExtensionsRegistry.registerExtensionPoint<IRawLanguageExtensionPoint[]>({\n\textensionPoint: 'languages',\n\tjsonSchema: {\n\t\tdescription: localize('vscode.extension.contributes.languages', 'Contributes language declarations.'),\n\t\ttype: 'array',\n\t\titems: {\n\t\t\ttype: 'object',\n\t\t\tdefaultSnippets: [{ body: { id: '${1:languageId}', aliases: ['${2:label}'], extensions: ['${3:extension}'], configuration: './language-configuration.json' } }],\n\t\t\tproperties: {\n\t\t\t\tid: {\n\t\t\t\t\tdescription: localize('vscode.extension.contributes.languages.id', 'ID of the language.'),\n\t\t\t\t\ttype: 'string'\n\t\t\t\t},\n\t\t\t\taliases: {\n\t\t\t\t\tdescription: localize('vscode.extension.contributes.languages.aliases', 'Name aliases for the language.'),\n\t\t\t\t\ttype: 'array',\n\t\t\t\t\titems: {\n\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\textensions: {\n\t\t\t\t\tdescription: localize('vscode.extension.contributes.languages.extensions', 'File extensions associated to the language.'),\n\t\t\t\t\tdefault: ['.foo'],\n\t\t\t\t\ttype: 'array',\n\t\t\t\t\titems: {\n\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfilenames: {\n\t\t\t\t\tdescription: localize('vscode.extension.contributes.languages.filenames', 'File names associated to the language.'),\n\t\t\t\t\ttype: 'array',\n\t\t\t\t\titems: {\n\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfilenamePatterns: {\n\t\t\t\t\tdescription: localize('vscode.extension.contributes.languages.filenamePatterns', 'File name glob patterns associated to the language.'),\n\t\t\t\t\ttype: 'array',\n\t\t\t\t\titems: {\n\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tmimetypes: {\n\t\t\t\t\tdescription: localize('vscode.extension.contributes.languages.mimetypes', 'Mime types associated to the language.'),\n\t\t\t\t\ttype: 'array',\n\t\t\t\t\titems: {\n\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfirstLine: {\n\t\t\t\t\tdescription: localize('vscode.extension.contributes.languages.firstLine', 'A regular expression matching the first line of a file of the language.'),\n\t\t\t\t\ttype: 'string'\n\t\t\t\t},\n\t\t\t\tconfiguration: {\n\t\t\t\t\tdescription: localize('vscode.extension.contributes.languages.configuration', 'A relative path to a file containing configuration options for the language.'),\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdefault: './language-configuration.json'\n\t\t\t\t},\n\t\t\t\ticon: {\n\t\t\t\t\ttype: 'object',\n\t\t\t\t\tdescription: localize('vscode.extension.contributes.languages.icon', 'A icon to use as file icon, if no icon theme provides one for the language.'),\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tlight: {\n\t\t\t\t\t\t\tdescription: localize('vscode.extension.contributes.languages.icon.light', 'Icon path when a light theme is used'),\n\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdark: {\n\t\t\t\t\t\t\tdescription: localize('vscode.extension.contributes.languages.icon.dark', 'Icon path when a dark theme is used'),\n\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tactivationEventsGenerator: (languageContributions, result) => {\n\t\tfor (const languageContribution of languageContributions) {\n\t\t\tif (languageContribution.id && languageContribution.configuration) {\n\t\t\t\tresult.push(`onLanguage:${languageContribution.id}`);\n\t\t\t}\n\t\t}\n\t}\n});\n\nclass LanguageTableRenderer extends Disposable implements IExtensionFeatureTableRenderer {\n\n\treadonly type = 'table';\n\n\tshouldRender(manifest: IExtensionManifest): boolean {\n\t\treturn !!manifest.contributes?.languages;\n\t}\n\n\trender(manifest: IExtensionManifest): IRenderedData<ITableData> {\n\t\tconst contributes = manifest.contributes;\n\t\tconst rawLanguages = contributes?.languages || [];\n\t\tconst languages: { id: string; name: string; extensions: string[]; hasGrammar: boolean; hasSnippets: boolean }[] = [];\n\t\tfor (const l of rawLanguages) {\n\t\t\tif (isValidLanguageExtensionPoint(l)) {\n\t\t\t\tlanguages.push({\n\t\t\t\t\tid: l.id,\n\t\t\t\t\tname: (l.aliases || [])[0] || l.id,\n\t\t\t\t\textensions: l.extensions || [],\n\t\t\t\t\thasGrammar: false,\n\t\t\t\t\thasSnippets: false\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tconst byId = index(languages, l => l.id);\n\n\t\tconst grammars = contributes?.grammars || [];\n\t\tgrammars.forEach(grammar => {\n\t\t\tif (!isString(grammar.language)) {\n\t\t\t\t// ignore the grammars that are only used as includes in other grammars\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet language = byId[grammar.language];\n\n\t\t\tif (language) {\n\t\t\t\tlanguage.hasGrammar = true;\n\t\t\t} else {\n\t\t\t\tlanguage = { id: grammar.language, name: grammar.language, extensions: [], hasGrammar: true, hasSnippets: false };\n\t\t\t\tbyId[language.id] = language;\n\t\t\t\tlanguages.push(language);\n\t\t\t}\n\t\t});\n\n\t\tconst snippets = contributes?.snippets || [];\n\t\tsnippets.forEach(snippet => {\n\t\t\tif (!isString(snippet.language)) {\n\t\t\t\t// ignore invalid snippets\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet language = byId[snippet.language];\n\n\t\t\tif (language) {\n\t\t\t\tlanguage.hasSnippets = true;\n\t\t\t} else {\n\t\t\t\tlanguage = { id: snippet.language, name: snippet.language, extensions: [], hasGrammar: false, hasSnippets: true };\n\t\t\t\tbyId[language.id] = language;\n\t\t\t\tlanguages.push(language);\n\t\t\t}\n\t\t});\n\n\t\tif (!languages.length) {\n\t\t\treturn { data: { headers: [], rows: [] }, dispose: () => { } };\n\t\t}\n\n\t\tconst headers = [\n\t\t\tlocalize('language id', \"ID\"),\n\t\t\tlocalize('language name', \"Name\"),\n\t\t\tlocalize('file extensions', \"File Extensions\"),\n\t\t\tlocalize('grammar', \"Grammar\"),\n\t\t\tlocalize('snippets', \"Snippets\")\n\t\t];\n\t\tconst rows: IRowData[][] = languages.sort((a, b) => a.id.localeCompare(b.id))\n\t\t\t.map(l => {\n\t\t\t\treturn [\n\t\t\t\t\tl.id, l.name,\n\t\t\t\t\tnew MarkdownString().appendMarkdown(`${l.extensions.map(e => `\\`${e}\\``).join('&nbsp;')}`),\n\t\t\t\t\tl.hasGrammar ? '\u2714\uFE0E' : '\\u2014',\n\t\t\t\t\tl.hasSnippets ? '\u2714\uFE0E' : '\\u2014'\n\t\t\t\t];\n\t\t\t});\n\n\t\treturn {\n\t\t\tdata: {\n\t\t\t\theaders,\n\t\t\t\trows\n\t\t\t},\n\t\t\tdispose: () => { }\n\t\t};\n\t}\n}\n\nRegistry.as<IExtensionFeaturesRegistry>(Extensions.ExtensionFeaturesRegistry).registerExtensionFeature({\n\tid: 'languages',\n\tlabel: localize('languages', \"Programming Languages\"),\n\taccess: {\n\t\tcanToggle: false\n\t},\n\trenderer: new SyncDescriptor(LanguageTableRenderer),\n});\n\nexport class WorkbenchLanguageService extends LanguageService {\n\tprivate _configurationService: IConfigurationService;\n\tprivate _extensionService: IExtensionService;\n\n\tconstructor(\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper(environmentService.verbose || environmentService.isExtensionDevelopment || !environmentService.isBuilt);\n\t\tthis._configurationService = configurationService;\n\t\tthis._extensionService = extensionService;\n\n\t\tlanguagesExtPoint.setHandler((extensions: readonly IExtensionPointUser<IRawLanguageExtensionPoint[]>[]) => {\n\t\t\tconst allValidLanguages: ILanguageExtensionPoint[] = [];\n\n\t\t\tfor (let i = 0, len = extensions.length; i < len; i++) {\n\t\t\t\tconst extension = extensions[i];\n\n\t\t\t\tif (!Array.isArray(extension.value)) {\n\t\t\t\t\textension.collector.error(localize('invalid', \"Invalid `contributes.{0}`. Expected an array.\", languagesExtPoint.name));\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (let j = 0, lenJ = extension.value.length; j < lenJ; j++) {\n\t\t\t\t\tconst ext = extension.value[j];\n\t\t\t\t\tif (isValidLanguageExtensionPoint(ext, extension.collector)) {\n\t\t\t\t\t\tlet configuration: URI | undefined = undefined;\n\t\t\t\t\t\tif (ext.configuration) {\n\t\t\t\t\t\t\tconfiguration = joinPath(extension.description.extensionLocation, ext.configuration);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tallValidLanguages.push({\n\t\t\t\t\t\t\tid: ext.id,\n\t\t\t\t\t\t\textensions: ext.extensions,\n\t\t\t\t\t\t\tfilenames: ext.filenames,\n\t\t\t\t\t\t\tfilenamePatterns: ext.filenamePatterns,\n\t\t\t\t\t\t\tfirstLine: ext.firstLine,\n\t\t\t\t\t\t\taliases: ext.aliases,\n\t\t\t\t\t\t\tmimetypes: ext.mimetypes,\n\t\t\t\t\t\t\tconfiguration: configuration,\n\t\t\t\t\t\t\ticon: ext.icon && {\n\t\t\t\t\t\t\t\tlight: joinPath(extension.description.extensionLocation, ext.icon.light),\n\t\t\t\t\t\t\t\tdark: joinPath(extension.description.extensionLocation, ext.icon.dark)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._registry.setDynamicLanguages(allValidLanguages);\n\n\t\t});\n\n\t\tthis.updateMime();\n\t\tthis._register(this._configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(FILES_ASSOCIATIONS_CONFIG)) {\n\t\t\t\tthis.updateMime();\n\t\t\t}\n\t\t}));\n\t\tthis._extensionService.whenInstalledExtensionsRegistered().then(() => {\n\t\t\tthis.updateMime();\n\t\t});\n\n\t\tthis._register(this.onDidRequestRichLanguageFeatures((languageId) => {\n\t\t\t// extension activation\n\t\t\tthis._extensionService.activateByEvent(`onLanguage:${languageId}`);\n\t\t\tthis._extensionService.activateByEvent(`onLanguage`);\n\t\t}));\n\t}\n\n\tprivate updateMime(): void {\n\t\tconst configuration = this._configurationService.getValue<IFilesConfiguration>();\n\n\t\t// Clear user configured mime associations\n\t\tclearConfiguredLanguageAssociations();\n\n\t\t// Register based on settings\n\t\tif (configuration.files?.associations) {\n\t\t\tObject.keys(configuration.files.associations).forEach(pattern => {\n\t\t\t\tconst langId = configuration.files!.associations[pattern];\n\t\t\t\tif (typeof langId !== 'string') {\n\t\t\t\t\tthis.logService.warn(`Ignoring configured 'files.associations' for '${pattern}' because its type is not a string but '${typeof langId}'`);\n\n\t\t\t\t\treturn; // https://github.com/microsoft/vscode/issues/147284\n\t\t\t\t}\n\n\t\t\t\tconst mimeType = this.getMimeType(langId) || `text/x-${langId}`;\n\n\t\t\t\tregisterConfiguredLanguageAssociation({ id: langId, mime: mimeType, filepattern: pattern });\n\t\t\t});\n\t\t}\n\n\t\tthis._onDidChange.fire();\n\t}\n}\n\nfunction isUndefinedOrStringArray(value: string[]): boolean {\n\tif (typeof value === 'undefined') {\n\t\treturn true;\n\t}\n\tif (!Array.isArray(value)) {\n\t\treturn false;\n\t}\n\treturn value.every(item => typeof item === 'string');\n}\n\nfunction isValidLanguageExtensionPoint(value: any, collector?: ExtensionMessageCollector): value is IRawLanguageExtensionPoint {\n\tif (!value) {\n\t\tcollector?.error(localize('invalid.empty', \"Empty value for `contributes.{0}`\", languagesExtPoint.name));\n\t\treturn false;\n\t}\n\tif (typeof value.id !== 'string') {\n\t\tcollector?.error(localize('require.id', \"property `{0}` is mandatory and must be of type `string`\", 'id'));\n\t\treturn false;\n\t}\n\tif (!isUndefinedOrStringArray(value.extensions)) {\n\t\tcollector?.error(localize('opt.extensions', \"property `{0}` can be omitted and must be of type `string[]`\", 'extensions'));\n\t\treturn false;\n\t}\n\tif (!isUndefinedOrStringArray(value.filenames)) {\n\t\tcollector?.error(localize('opt.filenames', \"property `{0}` can be omitted and must be of type `string[]`\", 'filenames'));\n\t\treturn false;\n\t}\n\tif (typeof value.firstLine !== 'undefined' && typeof value.firstLine !== 'string') {\n\t\tcollector?.error(localize('opt.firstLine', \"property `{0}` can be omitted and must be of type `string`\", 'firstLine'));\n\t\treturn false;\n\t}\n\tif (typeof value.configuration !== 'undefined' && typeof value.configuration !== 'string') {\n\t\tcollector?.error(localize('opt.configuration', \"property `{0}` can be omitted and must be of type `string`\", 'configuration'));\n\t\treturn false;\n\t}\n\tif (!isUndefinedOrStringArray(value.aliases)) {\n\t\tcollector?.error(localize('opt.aliases', \"property `{0}` can be omitted and must be of type `string[]`\", 'aliases'));\n\t\treturn false;\n\t}\n\tif (!isUndefinedOrStringArray(value.mimetypes)) {\n\t\tcollector?.error(localize('opt.mimetypes', \"property `{0}` can be omitted and must be of type `string[]`\", 'mimetypes'));\n\t\treturn false;\n\t}\n\tif (typeof value.icon !== 'undefined') {\n\t\tif (typeof value.icon !== 'object' || typeof value.icon.light !== 'string' || typeof value.icon.dark !== 'string') {\n\t\t\tcollector?.error(localize('opt.icon', \"property `{0}` can be omitted and must be of type `object` with properties `{1}` and `{2}` of type `string`\", 'icon', 'light', 'dark'));\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nregisterSingleton(ILanguageService, WorkbenchLanguageService, InstantiationType.Eager);\n"],
  "mappings": "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",
  "names": []
}
