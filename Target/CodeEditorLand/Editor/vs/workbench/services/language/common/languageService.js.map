{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/language/common/languageService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { index } from \"../../../../base/common/arrays.js\";\nimport { MarkdownString } from \"../../../../base/common/htmlContent.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport { joinPath } from \"../../../../base/common/resources.js\";\nimport { isString } from \"../../../../base/common/types.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport {\n\tILanguageService,\n\ttype ILanguageExtensionPoint,\n} from \"../../../../editor/common/languages/language.js\";\nimport {\n\tclearConfiguredLanguageAssociations,\n\tregisterConfiguredLanguageAssociation,\n} from \"../../../../editor/common/services/languagesAssociations.js\";\nimport { LanguageService } from \"../../../../editor/common/services/languageService.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { IEnvironmentService } from \"../../../../platform/environment/common/environment.js\";\nimport type { IExtensionManifest } from \"../../../../platform/extensions/common/extensions.js\";\nimport {\n\tFILES_ASSOCIATIONS_CONFIG,\n\ttype IFilesConfiguration,\n} from \"../../../../platform/files/common/files.js\";\nimport { SyncDescriptor } from \"../../../../platform/instantiation/common/descriptors.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport {\n\tExtensions,\n\ttype IExtensionFeaturesRegistry,\n\ttype IExtensionFeatureTableRenderer,\n\ttype IRenderedData,\n\ttype IRowData,\n\ttype ITableData,\n} from \"../../extensionManagement/common/extensionFeatures.js\";\nimport { IExtensionService } from \"../../extensions/common/extensions.js\";\nimport {\n\tExtensionsRegistry,\n\ttype ExtensionMessageCollector,\n\ttype IExtensionPoint,\n\ttype IExtensionPointUser,\n} from \"../../extensions/common/extensionsRegistry.js\";\n\nexport interface IRawLanguageExtensionPoint {\n\tid: string;\n\textensions: string[];\n\tfilenames: string[];\n\tfilenamePatterns: string[];\n\tfirstLine: string;\n\taliases: string[];\n\tmimetypes: string[];\n\tconfiguration: string;\n\ticon: { light: string; dark: string };\n}\n\nexport const languagesExtPoint: IExtensionPoint<IRawLanguageExtensionPoint[]> =\n\tExtensionsRegistry.registerExtensionPoint<IRawLanguageExtensionPoint[]>({\n\t\textensionPoint: \"languages\",\n\t\tjsonSchema: {\n\t\t\tdescription: localize(\n\t\t\t\t\"vscode.extension.contributes.languages\",\n\t\t\t\t\"Contributes language declarations.\",\n\t\t\t),\n\t\t\ttype: \"array\",\n\t\t\titems: {\n\t\t\t\ttype: \"object\",\n\t\t\t\tdefaultSnippets: [\n\t\t\t\t\t{\n\t\t\t\t\t\tbody: {\n\t\t\t\t\t\t\tid: \"${1:languageId}\",\n\t\t\t\t\t\t\taliases: [\"${2:label}\"],\n\t\t\t\t\t\t\textensions: [\"${3:extension}\"],\n\t\t\t\t\t\t\tconfiguration: \"./language-configuration.json\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tproperties: {\n\t\t\t\t\tid: {\n\t\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\t\"vscode.extension.contributes.languages.id\",\n\t\t\t\t\t\t\t\"ID of the language.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t},\n\t\t\t\t\taliases: {\n\t\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\t\"vscode.extension.contributes.languages.aliases\",\n\t\t\t\t\t\t\t\"Name aliases for the language.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttype: \"array\",\n\t\t\t\t\t\titems: {\n\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\textensions: {\n\t\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\t\"vscode.extension.contributes.languages.extensions\",\n\t\t\t\t\t\t\t\"File extensions associated to the language.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\tdefault: [\".foo\"],\n\t\t\t\t\t\ttype: \"array\",\n\t\t\t\t\t\titems: {\n\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tfilenames: {\n\t\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\t\"vscode.extension.contributes.languages.filenames\",\n\t\t\t\t\t\t\t\"File names associated to the language.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttype: \"array\",\n\t\t\t\t\t\titems: {\n\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tfilenamePatterns: {\n\t\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\t\"vscode.extension.contributes.languages.filenamePatterns\",\n\t\t\t\t\t\t\t\"File name glob patterns associated to the language.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttype: \"array\",\n\t\t\t\t\t\titems: {\n\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmimetypes: {\n\t\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\t\"vscode.extension.contributes.languages.mimetypes\",\n\t\t\t\t\t\t\t\"Mime types associated to the language.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttype: \"array\",\n\t\t\t\t\t\titems: {\n\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tfirstLine: {\n\t\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\t\"vscode.extension.contributes.languages.firstLine\",\n\t\t\t\t\t\t\t\"A regular expression matching the first line of a file of the language.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t},\n\t\t\t\t\tconfiguration: {\n\t\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\t\"vscode.extension.contributes.languages.configuration\",\n\t\t\t\t\t\t\t\"A relative path to a file containing configuration options for the language.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\tdefault: \"./language-configuration.json\",\n\t\t\t\t\t},\n\t\t\t\t\ticon: {\n\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\t\"vscode.extension.contributes.languages.icon\",\n\t\t\t\t\t\t\t\"A icon to use as file icon, if no icon theme provides one for the language.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tlight: {\n\t\t\t\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\t\t\t\"vscode.extension.contributes.languages.icon.light\",\n\t\t\t\t\t\t\t\t\t\"Icon path when a light theme is used\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdark: {\n\t\t\t\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\t\t\t\"vscode.extension.contributes.languages.icon.dark\",\n\t\t\t\t\t\t\t\t\t\"Icon path when a dark theme is used\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tactivationEventsGenerator: (languageContributions, result) => {\n\t\t\tfor (const languageContribution of languageContributions) {\n\t\t\t\tif (\n\t\t\t\t\tlanguageContribution.id &&\n\t\t\t\t\tlanguageContribution.configuration\n\t\t\t\t) {\n\t\t\t\t\tresult.push(`onLanguage:${languageContribution.id}`);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t});\n\nclass LanguageTableRenderer\n\textends Disposable\n\timplements IExtensionFeatureTableRenderer\n{\n\treadonly type = \"table\";\n\n\tshouldRender(manifest: IExtensionManifest): boolean {\n\t\treturn !!manifest.contributes?.languages;\n\t}\n\n\trender(manifest: IExtensionManifest): IRenderedData<ITableData> {\n\t\tconst contributes = manifest.contributes;\n\t\tconst rawLanguages = contributes?.languages || [];\n\t\tconst languages: {\n\t\t\tid: string;\n\t\t\tname: string;\n\t\t\textensions: string[];\n\t\t\thasGrammar: boolean;\n\t\t\thasSnippets: boolean;\n\t\t}[] = [];\n\t\tfor (const l of rawLanguages) {\n\t\t\tif (isValidLanguageExtensionPoint(l)) {\n\t\t\t\tlanguages.push({\n\t\t\t\t\tid: l.id,\n\t\t\t\t\tname: (l.aliases || [])[0] || l.id,\n\t\t\t\t\textensions: l.extensions || [],\n\t\t\t\t\thasGrammar: false,\n\t\t\t\t\thasSnippets: false,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tconst byId = index(languages, (l) => l.id);\n\n\t\tconst grammars = contributes?.grammars || [];\n\t\tgrammars.forEach((grammar) => {\n\t\t\tif (!isString(grammar.language)) {\n\t\t\t\t// ignore the grammars that are only used as includes in other grammars\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet language = byId[grammar.language];\n\n\t\t\tif (language) {\n\t\t\t\tlanguage.hasGrammar = true;\n\t\t\t} else {\n\t\t\t\tlanguage = {\n\t\t\t\t\tid: grammar.language,\n\t\t\t\t\tname: grammar.language,\n\t\t\t\t\textensions: [],\n\t\t\t\t\thasGrammar: true,\n\t\t\t\t\thasSnippets: false,\n\t\t\t\t};\n\t\t\t\tbyId[language.id] = language;\n\t\t\t\tlanguages.push(language);\n\t\t\t}\n\t\t});\n\n\t\tconst snippets = contributes?.snippets || [];\n\t\tsnippets.forEach((snippet) => {\n\t\t\tif (!isString(snippet.language)) {\n\t\t\t\t// ignore invalid snippets\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet language = byId[snippet.language];\n\n\t\t\tif (language) {\n\t\t\t\tlanguage.hasSnippets = true;\n\t\t\t} else {\n\t\t\t\tlanguage = {\n\t\t\t\t\tid: snippet.language,\n\t\t\t\t\tname: snippet.language,\n\t\t\t\t\textensions: [],\n\t\t\t\t\thasGrammar: false,\n\t\t\t\t\thasSnippets: true,\n\t\t\t\t};\n\t\t\t\tbyId[language.id] = language;\n\t\t\t\tlanguages.push(language);\n\t\t\t}\n\t\t});\n\n\t\tif (!languages.length) {\n\t\t\treturn { data: { headers: [], rows: [] }, dispose: () => {} };\n\t\t}\n\n\t\tconst headers = [\n\t\t\tlocalize(\"language id\", \"ID\"),\n\t\t\tlocalize(\"language name\", \"Name\"),\n\t\t\tlocalize(\"file extensions\", \"File Extensions\"),\n\t\t\tlocalize(\"grammar\", \"Grammar\"),\n\t\t\tlocalize(\"snippets\", \"Snippets\"),\n\t\t];\n\t\tconst rows: IRowData[][] = languages\n\t\t\t.sort((a, b) => a.id.localeCompare(b.id))\n\t\t\t.map((l) => {\n\t\t\t\treturn [\n\t\t\t\t\tl.id,\n\t\t\t\t\tl.name,\n\t\t\t\t\tnew MarkdownString().appendMarkdown(\n\t\t\t\t\t\t`${l.extensions.map((e) => `\\`${e}\\``).join(\"&nbsp;\")}`,\n\t\t\t\t\t),\n\t\t\t\t\tl.hasGrammar ? \"\u2714\uFE0E\" : \"\\u2014\",\n\t\t\t\t\tl.hasSnippets ? \"\u2714\uFE0E\" : \"\\u2014\",\n\t\t\t\t];\n\t\t\t});\n\n\t\treturn {\n\t\t\tdata: {\n\t\t\t\theaders,\n\t\t\t\trows,\n\t\t\t},\n\t\t\tdispose: () => {},\n\t\t};\n\t}\n}\n\nRegistry.as<IExtensionFeaturesRegistry>(\n\tExtensions.ExtensionFeaturesRegistry,\n).registerExtensionFeature({\n\tid: \"languages\",\n\tlabel: localize(\"languages\", \"Programming Languages\"),\n\taccess: {\n\t\tcanToggle: false,\n\t},\n\trenderer: new SyncDescriptor(LanguageTableRenderer),\n});\n\nexport class WorkbenchLanguageService extends LanguageService {\n\tprivate _configurationService: IConfigurationService;\n\tprivate _extensionService: IExtensionService;\n\n\tconstructor(\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t\tsuper(\n\t\t\tenvironmentService.verbose ||\n\t\t\t\tenvironmentService.isExtensionDevelopment ||\n\t\t\t\t!environmentService.isBuilt,\n\t\t);\n\t\tthis._configurationService = configurationService;\n\t\tthis._extensionService = extensionService;\n\n\t\tlanguagesExtPoint.setHandler(\n\t\t\t(\n\t\t\t\textensions: readonly IExtensionPointUser<\n\t\t\t\t\tIRawLanguageExtensionPoint[]\n\t\t\t\t>[],\n\t\t\t) => {\n\t\t\t\tconst allValidLanguages: ILanguageExtensionPoint[] = [];\n\n\t\t\t\tfor (let i = 0, len = extensions.length; i < len; i++) {\n\t\t\t\t\tconst extension = extensions[i];\n\n\t\t\t\t\tif (!Array.isArray(extension.value)) {\n\t\t\t\t\t\textension.collector.error(\n\t\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\t\"invalid\",\n\t\t\t\t\t\t\t\t\"Invalid `contributes.{0}`. Expected an array.\",\n\t\t\t\t\t\t\t\tlanguagesExtPoint.name,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (\n\t\t\t\t\t\tlet j = 0, lenJ = extension.value.length;\n\t\t\t\t\t\tj < lenJ;\n\t\t\t\t\t\tj++\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst ext = extension.value[j];\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tisValidLanguageExtensionPoint(\n\t\t\t\t\t\t\t\text,\n\t\t\t\t\t\t\t\textension.collector,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tlet configuration: URI | undefined;\n\t\t\t\t\t\t\tif (ext.configuration) {\n\t\t\t\t\t\t\t\tconfiguration = joinPath(\n\t\t\t\t\t\t\t\t\textension.description.extensionLocation,\n\t\t\t\t\t\t\t\t\text.configuration,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tallValidLanguages.push({\n\t\t\t\t\t\t\t\tid: ext.id,\n\t\t\t\t\t\t\t\textensions: ext.extensions,\n\t\t\t\t\t\t\t\tfilenames: ext.filenames,\n\t\t\t\t\t\t\t\tfilenamePatterns: ext.filenamePatterns,\n\t\t\t\t\t\t\t\tfirstLine: ext.firstLine,\n\t\t\t\t\t\t\t\taliases: ext.aliases,\n\t\t\t\t\t\t\t\tmimetypes: ext.mimetypes,\n\t\t\t\t\t\t\t\tconfiguration: configuration,\n\t\t\t\t\t\t\t\ticon: ext.icon && {\n\t\t\t\t\t\t\t\t\tlight: joinPath(\n\t\t\t\t\t\t\t\t\t\textension.description.extensionLocation,\n\t\t\t\t\t\t\t\t\t\text.icon.light,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tdark: joinPath(\n\t\t\t\t\t\t\t\t\t\textension.description.extensionLocation,\n\t\t\t\t\t\t\t\t\t\text.icon.dark,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._registry.setDynamicLanguages(allValidLanguages);\n\t\t\t},\n\t\t);\n\n\t\tthis.updateMime();\n\t\tthis._register(\n\t\t\tthis._configurationService.onDidChangeConfiguration((e) => {\n\t\t\t\tif (e.affectsConfiguration(FILES_ASSOCIATIONS_CONFIG)) {\n\t\t\t\t\tthis.updateMime();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis._extensionService.whenInstalledExtensionsRegistered().then(() => {\n\t\t\tthis.updateMime();\n\t\t});\n\n\t\tthis._register(\n\t\t\tthis.onDidRequestRichLanguageFeatures((languageId) => {\n\t\t\t\t// extension activation\n\t\t\t\tthis._extensionService.activateByEvent(\n\t\t\t\t\t`onLanguage:${languageId}`,\n\t\t\t\t);\n\t\t\t\tthis._extensionService.activateByEvent(`onLanguage`);\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate updateMime(): void {\n\t\tconst configuration =\n\t\t\tthis._configurationService.getValue<IFilesConfiguration>();\n\n\t\t// Clear user configured mime associations\n\t\tclearConfiguredLanguageAssociations();\n\n\t\t// Register based on settings\n\t\tif (configuration.files?.associations) {\n\t\t\tObject.keys(configuration.files.associations).forEach((pattern) => {\n\t\t\t\tconst langId = configuration.files!.associations[pattern];\n\t\t\t\tif (typeof langId !== \"string\") {\n\t\t\t\t\tthis.logService.warn(\n\t\t\t\t\t\t`Ignoring configured 'files.associations' for '${pattern}' because its type is not a string but '${typeof langId}'`,\n\t\t\t\t\t);\n\n\t\t\t\t\treturn; // https://github.com/microsoft/vscode/issues/147284\n\t\t\t\t}\n\n\t\t\t\tconst mimeType = this.getMimeType(langId) || `text/x-${langId}`;\n\n\t\t\t\tregisterConfiguredLanguageAssociation({\n\t\t\t\t\tid: langId,\n\t\t\t\t\tmime: mimeType,\n\t\t\t\t\tfilepattern: pattern,\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tthis._onDidChange.fire();\n\t}\n}\n\nfunction isUndefinedOrStringArray(value: string[]): boolean {\n\tif (typeof value === \"undefined\") {\n\t\treturn true;\n\t}\n\tif (!Array.isArray(value)) {\n\t\treturn false;\n\t}\n\treturn value.every((item) => typeof item === \"string\");\n}\n\nfunction isValidLanguageExtensionPoint(\n\tvalue: any,\n\tcollector?: ExtensionMessageCollector,\n): value is IRawLanguageExtensionPoint {\n\tif (!value) {\n\t\tcollector?.error(\n\t\t\tlocalize(\n\t\t\t\t\"invalid.empty\",\n\t\t\t\t\"Empty value for `contributes.{0}`\",\n\t\t\t\tlanguagesExtPoint.name,\n\t\t\t),\n\t\t);\n\t\treturn false;\n\t}\n\tif (typeof value.id !== \"string\") {\n\t\tcollector?.error(\n\t\t\tlocalize(\n\t\t\t\t\"require.id\",\n\t\t\t\t\"property `{0}` is mandatory and must be of type `string`\",\n\t\t\t\t\"id\",\n\t\t\t),\n\t\t);\n\t\treturn false;\n\t}\n\tif (!isUndefinedOrStringArray(value.extensions)) {\n\t\tcollector?.error(\n\t\t\tlocalize(\n\t\t\t\t\"opt.extensions\",\n\t\t\t\t\"property `{0}` can be omitted and must be of type `string[]`\",\n\t\t\t\t\"extensions\",\n\t\t\t),\n\t\t);\n\t\treturn false;\n\t}\n\tif (!isUndefinedOrStringArray(value.filenames)) {\n\t\tcollector?.error(\n\t\t\tlocalize(\n\t\t\t\t\"opt.filenames\",\n\t\t\t\t\"property `{0}` can be omitted and must be of type `string[]`\",\n\t\t\t\t\"filenames\",\n\t\t\t),\n\t\t);\n\t\treturn false;\n\t}\n\tif (\n\t\ttypeof value.firstLine !== \"undefined\" &&\n\t\ttypeof value.firstLine !== \"string\"\n\t) {\n\t\tcollector?.error(\n\t\t\tlocalize(\n\t\t\t\t\"opt.firstLine\",\n\t\t\t\t\"property `{0}` can be omitted and must be of type `string`\",\n\t\t\t\t\"firstLine\",\n\t\t\t),\n\t\t);\n\t\treturn false;\n\t}\n\tif (\n\t\ttypeof value.configuration !== \"undefined\" &&\n\t\ttypeof value.configuration !== \"string\"\n\t) {\n\t\tcollector?.error(\n\t\t\tlocalize(\n\t\t\t\t\"opt.configuration\",\n\t\t\t\t\"property `{0}` can be omitted and must be of type `string`\",\n\t\t\t\t\"configuration\",\n\t\t\t),\n\t\t);\n\t\treturn false;\n\t}\n\tif (!isUndefinedOrStringArray(value.aliases)) {\n\t\tcollector?.error(\n\t\t\tlocalize(\n\t\t\t\t\"opt.aliases\",\n\t\t\t\t\"property `{0}` can be omitted and must be of type `string[]`\",\n\t\t\t\t\"aliases\",\n\t\t\t),\n\t\t);\n\t\treturn false;\n\t}\n\tif (!isUndefinedOrStringArray(value.mimetypes)) {\n\t\tcollector?.error(\n\t\t\tlocalize(\n\t\t\t\t\"opt.mimetypes\",\n\t\t\t\t\"property `{0}` can be omitted and must be of type `string[]`\",\n\t\t\t\t\"mimetypes\",\n\t\t\t),\n\t\t);\n\t\treturn false;\n\t}\n\tif (typeof value.icon !== \"undefined\") {\n\t\tif (\n\t\t\ttypeof value.icon !== \"object\" ||\n\t\t\ttypeof value.icon.light !== \"string\" ||\n\t\t\ttypeof value.icon.dark !== \"string\"\n\t\t) {\n\t\t\tcollector?.error(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"opt.icon\",\n\t\t\t\t\t\"property `{0}` can be omitted and must be of type `object` with properties `{1}` and `{2}` of type `string`\",\n\t\t\t\t\t\"icon\",\n\t\t\t\t\t\"light\",\n\t\t\t\t\t\"dark\",\n\t\t\t\t),\n\t\t\t);\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nregisterSingleton(\n\tILanguageService,\n\tWorkbenchLanguageService,\n\tInstantiationType.Eager,\n);\n"],
  "mappings": "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",
  "names": []
}
