var c=Object.defineProperty;var I=Object.getOwnPropertyDescriptor;var a=(m,e,r,i)=>{for(var t=i>1?void 0:i?I(e,r):e,s=m.length-1,n;s>=0;s--)(n=m[s])&&(t=(i?n(e,r,t):n(t))||t);return i&&t&&c(e,r,t),t},o=(m,e)=>(r,i)=>e(r,i,m);import{ITelemetryService as g}from"../../../../platform/telemetry/common/telemetry.js";import{supportsTelemetry as y,NullTelemetryService as h,getPiiPathsFromEnvironment as f,isInternalTelemetry as T}from"../../../../platform/telemetry/common/telemetryUtils.js";import{IConfigurationService as u}from"../../../../platform/configuration/common/configuration.js";import{Disposable as v}from"../../../../base/common/lifecycle.js";import{INativeWorkbenchEnvironmentService as E}from"../../environment/electron-sandbox/environmentService.js";import{IProductService as P}from"../../../../platform/product/common/productService.js";import{ISharedProcessService as b}from"../../../../platform/ipc/electron-sandbox/services.js";import{TelemetryAppenderClient as D}from"../../../../platform/telemetry/common/telemetryIpc.js";import{IStorageService as C}from"../../../../platform/storage/common/storage.js";import{resolveWorkbenchCommonProperties as S}from"../common/workbenchCommonProperties.js";import{TelemetryService as L}from"../../../../platform/telemetry/common/telemetryService.js";import{InstantiationType as x,registerSingleton as k}from"../../../../platform/instantiation/common/extensions.js";import{process as q}from"../../../../base/parts/sandbox/electron-sandbox/globals.js";let l=class extends v{impl;sendErrorTelemetry;get sessionId(){return this.impl.sessionId}get machineId(){return this.impl.machineId}get sqmId(){return this.impl.sqmId}get devDeviceId(){return this.impl.devDeviceId}get firstSessionDate(){return this.impl.firstSessionDate}get msftInternal(){return this.impl.msftInternal}constructor(e,r,i,t,s){if(super(),y(r,e)){const n=T(r,s),p=i.getChannel("telemetryAppender"),d={appenders:[new D(p)],commonProperties:S(t,e.os.release,e.os.hostname,r.commit,r.version,e.machineId,e.sqmId,e.devDeviceId,n,q,e.remoteAuthority),piiPaths:f(e),sendErrorTelemetry:!0};this.impl=this._register(new L(d,s,r))}else this.impl=h;this.sendErrorTelemetry=this.impl.sendErrorTelemetry}setExperimentProperty(e,r){return this.impl.setExperimentProperty(e,r)}get telemetryLevel(){return this.impl.telemetryLevel}publicLog(e,r){this.impl.publicLog(e,r)}publicLog2(e,r){this.publicLog(e,r)}publicLogError(e,r){this.impl.publicLogError(e,r)}publicLogError2(e,r){this.publicLogError(e,r)}};l=a([o(0,E),o(1,P),o(2,b),o(3,C),o(4,u)],l),k(g,l,x.Delayed);export{l as TelemetryService};
