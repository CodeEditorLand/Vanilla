{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/telemetry/common/workbenchCommonProperties.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IStorageService, StorageScope } from '../../../../platform/storage/common/storage.js';\nimport { resolveCommonProperties } from '../../../../platform/telemetry/common/commonProperties.js';\nimport { ICommonProperties, firstSessionDateStorageKey, lastSessionDateStorageKey } from '../../../../platform/telemetry/common/telemetry.js';\nimport { cleanRemoteAuthority } from '../../../../platform/telemetry/common/telemetryUtils.js';\nimport { INodeProcess } from '../../../../base/common/platform.js';\n\nexport function resolveWorkbenchCommonProperties(\n\tstorageService: IStorageService,\n\trelease: string,\n\thostname: string,\n\tcommit: string | undefined,\n\tversion: string | undefined,\n\tmachineId: string,\n\tsqmId: string,\n\tdevDeviceId: string,\n\tisInternalTelemetry: boolean,\n\tprocess: INodeProcess,\n\tremoteAuthority?: string\n): ICommonProperties {\n\tconst result = resolveCommonProperties(release, hostname, process.arch, commit, version, machineId, sqmId, devDeviceId, isInternalTelemetry);\n\tconst firstSessionDate = storageService.get(firstSessionDateStorageKey, StorageScope.APPLICATION)!;\n\tconst lastSessionDate = storageService.get(lastSessionDateStorageKey, StorageScope.APPLICATION)!;\n\n\t// __GDPR__COMMON__ \"common.version.shell\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.version.shell'] = process.versions?.['electron'];\n\t// __GDPR__COMMON__ \"common.version.renderer\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.version.renderer'] = process.versions?.['chrome'];\n\t// __GDPR__COMMON__ \"common.firstSessionDate\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.firstSessionDate'] = firstSessionDate;\n\t// __GDPR__COMMON__ \"common.lastSessionDate\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.lastSessionDate'] = lastSessionDate || '';\n\t// __GDPR__COMMON__ \"common.isNewSession\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.isNewSession'] = !lastSessionDate ? '1' : '0';\n\t// __GDPR__COMMON__ \"common.remoteAuthority\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.remoteAuthority'] = cleanRemoteAuthority(remoteAuthority);\n\t// __GDPR__COMMON__ \"common.cli\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.cli'] = !!process.env['VSCODE_CLI'];\n\n\treturn result;\n}\n"],
  "mappings": ";;AAKA,SAAS,iBAAiB,oBAAoB;AAC9C,SAAS,+BAA+B;AACxC,SAAS,mBAAmB,4BAA4B,iCAAiC;AACzF,SAAS,4BAA4B;AACrC,SAAS,oBAAoB;AAEtB,SAAS,iCACf,gBACA,SACA,UACA,QACA,SACA,WACA,OACA,aACA,qBACA,SACA,iBACoB;AACpB,QAAM,SAAS,wBAAwB,SAAS,UAAU,QAAQ,MAAM,QAAQ,SAAS,WAAW,OAAO,aAAa,mBAAmB;AAC3I,QAAM,mBAAmB,eAAe,IAAI,4BAA4B,aAAa,WAAW;AAChG,QAAM,kBAAkB,eAAe,IAAI,2BAA2B,aAAa,WAAW;AAG9F,SAAO,sBAAsB,IAAI,QAAQ,WAAW,UAAU;AAE9D,SAAO,yBAAyB,IAAI,QAAQ,WAAW,QAAQ;AAE/D,SAAO,yBAAyB,IAAI;AAEpC,SAAO,wBAAwB,IAAI,mBAAmB;AAEtD,SAAO,qBAAqB,IAAI,CAAC,kBAAkB,MAAM;AAEzD,SAAO,wBAAwB,IAAI,qBAAqB,eAAe;AAEvE,SAAO,YAAY,IAAI,CAAC,CAAC,QAAQ,IAAI,YAAY;AAEjD,SAAO;AACR;AAjCgB;",
  "names": []
}
