import o from"assert";import{resolveWorkbenchCommonProperties as n}from"../../browser/workbenchCommonProperties.js";import{InMemoryStorageService as m}from"../../../../../platform/storage/common/storage.js";import{ensureNoDisposablesAreLeakedInTestSuite as c}from"../../../../../base/test/common/utils.js";suite("Browser Telemetry - common properties",function(){let s;teardown(()=>{s.dispose()}),c(),setup(()=>{s=new m}),test("mixes in additional properties",async function(){const e=n(s,void 0,void 0,!1,void 0,void 0,!1,()=>({userId:"1"}));o.ok("commitHash"in e),o.ok("sessionID"in e),o.ok("timestamp"in e),o.ok("common.platform"in e),o.ok("common.timesincesessionstart"in e),o.ok("common.sequence"in e),o.ok("version"in e),o.ok("common.firstSessionDate"in e,"firstSessionDate"),o.ok("common.lastSessionDate"in e,"lastSessionDate"),o.ok("common.isNewSession"in e,"isNewSession"),o.ok("common.machineId"in e,"machineId"),o.strictEqual(e.userId,"1")}),test("mixes in additional dyanmic properties",async function(){let i=1;const e=()=>Object.defineProperties({},{userId:{get:()=>i++,enumerable:!0}}),t=n(s,void 0,void 0,!1,void 0,void 0,!1,e);o.strictEqual(t.userId,1);const r=n(s,void 0,void 0,!1,void 0,void 0,!1,e);o.strictEqual(r.userId,2)})});
