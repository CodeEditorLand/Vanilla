{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/telemetry/test/browser/commonProperties.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport assert from 'assert';\nimport { resolveWorkbenchCommonProperties } from '../../browser/workbenchCommonProperties.js';\nimport { InMemoryStorageService } from '../../../../../platform/storage/common/storage.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\n\nsuite('Browser Telemetry - common properties', function () {\n\n\tconst commit: string = (undefined)!;\n\tconst version: string = (undefined)!;\n\tlet testStorageService: InMemoryStorageService;\n\n\tteardown(() => {\n\t\ttestStorageService.dispose();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tsetup(() => {\n\t\ttestStorageService = new InMemoryStorageService();\n\t});\n\n\ttest('mixes in additional properties', async function () {\n\t\tconst resolveCommonTelemetryProperties = () => {\n\t\t\treturn {\n\t\t\t\t'userId': '1'\n\t\t\t};\n\t\t};\n\n\t\tconst props = resolveWorkbenchCommonProperties(testStorageService, commit, version, false, undefined, undefined, false, resolveCommonTelemetryProperties);\n\n\t\tassert.ok('commitHash' in props);\n\t\tassert.ok('sessionID' in props);\n\t\tassert.ok('timestamp' in props);\n\t\tassert.ok('common.platform' in props);\n\t\tassert.ok('common.timesincesessionstart' in props);\n\t\tassert.ok('common.sequence' in props);\n\t\tassert.ok('version' in props);\n\t\tassert.ok('common.firstSessionDate' in props, 'firstSessionDate');\n\t\tassert.ok('common.lastSessionDate' in props, 'lastSessionDate');\n\t\tassert.ok('common.isNewSession' in props, 'isNewSession');\n\t\tassert.ok('common.machineId' in props, 'machineId');\n\n\t\tassert.strictEqual(props['userId'], '1');\n\t});\n\n\ttest('mixes in additional dyanmic properties', async function () {\n\t\tlet i = 1;\n\t\tconst resolveCommonTelemetryProperties = () => {\n\t\t\treturn Object.defineProperties({}, {\n\t\t\t\t'userId': {\n\t\t\t\t\tget: () => {\n\t\t\t\t\t\treturn i++;\n\t\t\t\t\t},\n\t\t\t\t\tenumerable: true\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tconst props = resolveWorkbenchCommonProperties(testStorageService, commit, version, false, undefined, undefined, false, resolveCommonTelemetryProperties);\n\t\tassert.strictEqual(props['userId'], 1);\n\n\t\tconst props2 = resolveWorkbenchCommonProperties(testStorageService, commit, version, false, undefined, undefined, false, resolveCommonTelemetryProperties);\n\t\tassert.strictEqual(props2['userId'], 2);\n\t});\n});\n"],
  "mappings": ";;AAIA,OAAO,YAAY;AACnB,SAAS,wCAAwC;AACjD,SAAS,8BAA8B;AACvC,SAAS,+CAA+C;AAExD,MAAM,yCAAyC,WAAY;AAE1D,QAAM,SAAkB;AACxB,QAAM,UAAmB;AACzB,MAAI;AAEJ,WAAS,MAAM;AACd,uBAAmB,QAAQ;AAAA,EAC5B,CAAC;AAED,0CAAwC;AAExC,QAAM,MAAM;AACX,yBAAqB,IAAI,uBAAuB;AAAA,EACjD,CAAC;AAED,OAAK,kCAAkC,iBAAkB;AACxD,UAAM,mCAAmC,6BAAM;AAC9C,aAAO;AAAA,QACN,UAAU;AAAA,MACX;AAAA,IACD,GAJyC;AAMzC,UAAM,QAAQ,iCAAiC,oBAAoB,QAAQ,SAAS,OAAO,QAAW,QAAW,OAAO,gCAAgC;AAExJ,WAAO,GAAG,gBAAgB,KAAK;AAC/B,WAAO,GAAG,eAAe,KAAK;AAC9B,WAAO,GAAG,eAAe,KAAK;AAC9B,WAAO,GAAG,qBAAqB,KAAK;AACpC,WAAO,GAAG,kCAAkC,KAAK;AACjD,WAAO,GAAG,qBAAqB,KAAK;AACpC,WAAO,GAAG,aAAa,KAAK;AAC5B,WAAO,GAAG,6BAA6B,OAAO,kBAAkB;AAChE,WAAO,GAAG,4BAA4B,OAAO,iBAAiB;AAC9D,WAAO,GAAG,yBAAyB,OAAO,cAAc;AACxD,WAAO,GAAG,sBAAsB,OAAO,WAAW;AAElD,WAAO,YAAY,MAAM,QAAQ,GAAG,GAAG;AAAA,EACxC,CAAC;AAED,OAAK,0CAA0C,iBAAkB;AAChE,QAAI,IAAI;AACR,UAAM,mCAAmC,6BAAM;AAC9C,aAAO,OAAO,iBAAiB,CAAC,GAAG;AAAA,QAClC,UAAU;AAAA,UACT,KAAK,6BAAM;AACV,mBAAO;AAAA,UACR,GAFK;AAAA,UAGL,YAAY;AAAA,QACb;AAAA,MACD,CAAC;AAAA,IACF,GATyC;AAWzC,UAAM,QAAQ,iCAAiC,oBAAoB,QAAQ,SAAS,OAAO,QAAW,QAAW,OAAO,gCAAgC;AACxJ,WAAO,YAAY,MAAM,QAAQ,GAAG,CAAC;AAErC,UAAM,SAAS,iCAAiC,oBAAoB,QAAQ,SAAS,OAAO,QAAW,QAAW,OAAO,gCAAgC;AACzJ,WAAO,YAAY,OAAO,QAAQ,GAAG,CAAC;AAAA,EACvC,CAAC;AACF,CAAC;",
  "names": []
}
