var v=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var a=(i,o,e,n)=>{for(var r=n>1?void 0:n?f(o,e):o,s=i.length-1,t;s>=0;s--)(t=i[s])&&(r=(n?t(o,e,r):t(r))||r);return n&&r&&v(o,e,r),r},u=(i,o)=>(e,n)=>o(e,n,i);import{IConfigurationService as g}from"../../../../platform/configuration/common/configuration.js";import{InstantiationType as I,registerSingleton as b}from"../../../../platform/instantiation/common/extensions.js";import{ILogService as T}from"../../../../platform/log/common/log.js";import{AbstractTunnelService as S,ITunnelService as h,isTunnelProvider as y}from"../../../../platform/tunnel/common/tunnel.js";import{IWorkbenchEnvironmentService as P}from"../../environment/common/environmentService.js";let m=class extends S{constructor(e,n,r){super(e,r);this.environmentService=n}isPortPrivileged(e){return!1}retainOrCreateTunnel(e,n,r,s,t,d,p,l){const c=this.getTunnelFromMap(n,r);if(c)return++c.refcount,c.value;if(y(e))return this.createWithProvider(e,n,r,t,d,p,l)}canTunnel(e){return super.canTunnel(e)&&!!this.environmentService.remoteAuthority}};m=a([u(0,T),u(1,P),u(2,g)],m),b(h,m,I.Delayed);export{m as TunnelService};
