var f=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var c=(o,i,e,n)=>{for(var r=n>1?void 0:n?p(i,e):i,s=o.length-1,t;s>=0;s--)(t=o[s])&&(r=(n?t(i,e,r):t(r))||r);return n&&r&&f(i,e,r),r},m=(o,i)=>(e,n)=>i(e,n,o);import"../../../../base/common/uri.js";import{IConfigurationService as g}from"../../../../platform/configuration/common/configuration.js";import{InstantiationType as I,registerSingleton as b}from"../../../../platform/instantiation/common/extensions.js";import{ILogService as T}from"../../../../platform/log/common/log.js";import"../../../../platform/remote/common/remoteAgentConnection.js";import{AbstractTunnelService as S,isTunnelProvider as h,ITunnelService as P}from"../../../../platform/tunnel/common/tunnel.js";import{IWorkbenchEnvironmentService as A}from"../../environment/common/environmentService.js";let u=class extends S{constructor(e,n,r){super(e,r);this.environmentService=n}isPortPrivileged(e){return!1}retainOrCreateTunnel(e,n,r,s,t,a,v,l){const d=this.getTunnelFromMap(n,r);if(d)return++d.refcount,d.value;if(h(e))return this.createWithProvider(e,n,r,t,a,v,l)}canTunnel(e){return super.canTunnel(e)&&!!this.environmentService.remoteAuthority}};u=c([m(0,T),m(1,A),m(2,g)],u),b(P,u,I.Delayed);export{u as TunnelService};
