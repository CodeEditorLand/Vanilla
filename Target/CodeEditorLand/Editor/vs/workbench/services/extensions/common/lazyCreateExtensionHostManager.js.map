{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/extensions/common/lazyCreateExtensionHostManager.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Barrier } from '../../../../base/common/async.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ExtensionIdentifier, IExtensionDescription } from '../../../../platform/extensions/common/extensions.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { RemoteAuthorityResolverErrorCode } from '../../../../platform/remote/common/remoteAuthorityResolver.js';\nimport { ExtensionHostKind } from './extensionHostKind.js';\nimport { ExtensionHostManager, friendlyExtHostName } from './extensionHostManager.js';\nimport { IExtensionHostManager } from './extensionHostManagers.js';\nimport { IExtensionDescriptionDelta } from './extensionHostProtocol.js';\nimport { IResolveAuthorityResult } from './extensionHostProxy.js';\nimport { ExtensionRunningLocation } from './extensionRunningLocation.js';\nimport { ActivationKind, ExtensionActivationReason, ExtensionHostExtensions, ExtensionHostStartup, IExtensionHost, IInternalExtensionService } from './extensions.js';\nimport { ResponsiveState } from './rpcProtocol.js';\n\n/**\n * Waits until `start()` and only if it has extensions proceeds to really start.\n */\nexport class LazyCreateExtensionHostManager extends Disposable implements IExtensionHostManager {\n\n\tpublic readonly onDidExit: Event<[number, string | null]>;\n\tprivate readonly _onDidChangeResponsiveState: Emitter<ResponsiveState> = this._register(new Emitter<ResponsiveState>());\n\tpublic readonly onDidChangeResponsiveState: Event<ResponsiveState> = this._onDidChangeResponsiveState.event;\n\n\tprivate readonly _extensionHost: IExtensionHost;\n\tprivate _startCalled: Barrier;\n\tprivate _actual: ExtensionHostManager | null;\n\tprivate _lazyStartExtensions: ExtensionHostExtensions | null;\n\n\tpublic get pid(): number | null {\n\t\tif (this._actual) {\n\t\t\treturn this._actual.pid;\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic get kind(): ExtensionHostKind {\n\t\treturn this._extensionHost.runningLocation.kind;\n\t}\n\n\tpublic get startup(): ExtensionHostStartup {\n\t\treturn this._extensionHost.startup;\n\t}\n\n\tpublic get friendyName(): string {\n\t\treturn friendlyExtHostName(this.kind, this.pid);\n\t}\n\n\tconstructor(\n\t\textensionHost: IExtensionHost,\n\t\tprivate readonly _internalExtensionService: IInternalExtensionService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@ILogService private readonly _logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis._extensionHost = extensionHost;\n\t\tthis.onDidExit = extensionHost.onExit;\n\t\tthis._startCalled = new Barrier();\n\t\tthis._actual = null;\n\t\tthis._lazyStartExtensions = null;\n\t}\n\n\tprivate _createActual(reason: string): ExtensionHostManager {\n\t\tthis._logService.info(`Creating lazy extension host (${this.friendyName}). Reason: ${reason}`);\n\t\tthis._actual = this._register(this._instantiationService.createInstance(ExtensionHostManager, this._extensionHost, [], this._internalExtensionService));\n\t\tthis._register(this._actual.onDidChangeResponsiveState((e) => this._onDidChangeResponsiveState.fire(e)));\n\t\treturn this._actual;\n\t}\n\n\tprivate async _getOrCreateActualAndStart(reason: string): Promise<ExtensionHostManager> {\n\t\tif (this._actual) {\n\t\t\t// already created/started\n\t\t\treturn this._actual;\n\t\t}\n\t\tconst actual = this._createActual(reason);\n\t\tawait actual.start(this._lazyStartExtensions!.versionId, this._lazyStartExtensions!.allExtensions, this._lazyStartExtensions!.myExtensions);\n\t\treturn actual;\n\t}\n\n\tpublic async ready(): Promise<void> {\n\t\tawait this._startCalled.wait();\n\t\tif (this._actual) {\n\t\t\tawait this._actual.ready();\n\t\t}\n\t}\n\tpublic async disconnect(): Promise<void> {\n\t\tawait this._actual?.disconnect();\n\t}\n\tpublic representsRunningLocation(runningLocation: ExtensionRunningLocation): boolean {\n\t\treturn this._extensionHost.runningLocation.equals(runningLocation);\n\t}\n\tpublic async deltaExtensions(extensionsDelta: IExtensionDescriptionDelta): Promise<void> {\n\t\tawait this._startCalled.wait();\n\t\tif (this._actual) {\n\t\t\treturn this._actual.deltaExtensions(extensionsDelta);\n\t\t}\n\t\tthis._lazyStartExtensions!.delta(extensionsDelta);\n\t\tif (extensionsDelta.myToAdd.length > 0) {\n\t\t\tconst actual = this._createActual(`contains ${extensionsDelta.myToAdd.length} new extension(s) (installed or enabled): ${extensionsDelta.myToAdd.map(extId => extId.value)}`);\n\t\t\tawait actual.start(this._lazyStartExtensions!.versionId, this._lazyStartExtensions!.allExtensions, this._lazyStartExtensions!.myExtensions);\n\t\t\treturn;\n\t\t}\n\t}\n\tpublic containsExtension(extensionId: ExtensionIdentifier): boolean {\n\t\treturn this._extensionHost.extensions?.containsExtension(extensionId) ?? false;\n\t}\n\tpublic async activate(extension: ExtensionIdentifier, reason: ExtensionActivationReason): Promise<boolean> {\n\t\tawait this._startCalled.wait();\n\t\tif (this._actual) {\n\t\t\treturn this._actual.activate(extension, reason);\n\t\t}\n\t\treturn false;\n\t}\n\tpublic async activateByEvent(activationEvent: string, activationKind: ActivationKind): Promise<void> {\n\t\tif (activationKind === ActivationKind.Immediate) {\n\t\t\t// this is an immediate request, so we cannot wait for start to be called\n\t\t\tif (this._actual) {\n\t\t\t\treturn this._actual.activateByEvent(activationEvent, activationKind);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tawait this._startCalled.wait();\n\t\tif (this._actual) {\n\t\t\treturn this._actual.activateByEvent(activationEvent, activationKind);\n\t\t}\n\t}\n\tpublic activationEventIsDone(activationEvent: string): boolean {\n\t\tif (!this._startCalled.isOpen()) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this._actual) {\n\t\t\treturn this._actual.activationEventIsDone(activationEvent);\n\t\t}\n\t\treturn true;\n\t}\n\tpublic async getInspectPort(tryEnableInspector: boolean): Promise<{ port: number; host: string } | undefined> {\n\t\tawait this._startCalled.wait();\n\t\treturn this._actual?.getInspectPort(tryEnableInspector);\n\t}\n\tpublic async resolveAuthority(remoteAuthority: string, resolveAttempt: number): Promise<IResolveAuthorityResult> {\n\t\tawait this._startCalled.wait();\n\t\tif (this._actual) {\n\t\t\treturn this._actual.resolveAuthority(remoteAuthority, resolveAttempt);\n\t\t}\n\t\treturn {\n\t\t\ttype: 'error',\n\t\t\terror: {\n\t\t\t\tmessage: `Cannot resolve authority`,\n\t\t\t\tcode: RemoteAuthorityResolverErrorCode.Unknown,\n\t\t\t\tdetail: undefined\n\t\t\t}\n\t\t};\n\t}\n\tpublic async getCanonicalURI(remoteAuthority: string, uri: URI): Promise<URI | null> {\n\t\tawait this._startCalled.wait();\n\t\tif (this._actual) {\n\t\t\treturn this._actual.getCanonicalURI(remoteAuthority, uri);\n\t\t}\n\t\tthrow new Error(`Cannot resolve canonical URI`);\n\t}\n\tpublic async start(extensionRegistryVersionId: number, allExtensions: IExtensionDescription[], myExtensions: ExtensionIdentifier[]): Promise<void> {\n\t\tif (myExtensions.length > 0) {\n\t\t\t// there are actual extensions, so let's launch the extension host\n\t\t\tconst actual = this._createActual(`contains ${myExtensions.length} extension(s): ${myExtensions.map(extId => extId.value)}.`);\n\t\t\tconst result = actual.start(extensionRegistryVersionId, allExtensions, myExtensions);\n\t\t\tthis._startCalled.open();\n\t\t\treturn result;\n\t\t}\n\t\t// there are no actual extensions running, store extensions in `this._lazyStartExtensions`\n\t\tthis._lazyStartExtensions = new ExtensionHostExtensions(extensionRegistryVersionId, allExtensions, myExtensions);\n\t\tthis._startCalled.open();\n\t}\n\tpublic async extensionTestsExecute(): Promise<number> {\n\t\tawait this._startCalled.wait();\n\t\tconst actual = await this._getOrCreateActualAndStart(`execute tests.`);\n\t\treturn actual.extensionTestsExecute();\n\t}\n\tpublic async setRemoteEnvironment(env: { [key: string]: string | null }): Promise<void> {\n\t\tawait this._startCalled.wait();\n\t\tif (this._actual) {\n\t\t\treturn this._actual.setRemoteEnvironment(env);\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
