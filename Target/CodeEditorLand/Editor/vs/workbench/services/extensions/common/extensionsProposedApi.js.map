{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/extensions/common/extensionsProposedApi.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isNonEmptyArray } from \"../../../../base/common/arrays.js\";\nimport {\n\ttype IMarkdownString,\n\tMarkdownString,\n} from \"../../../../base/common/htmlContent.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport type { Mutable } from \"../../../../base/common/types.js\";\nimport { localize } from \"../../../../nls.js\";\nimport {\n\tExtensionIdentifier,\n\ttype IExtensionDescription,\n\ttype IExtensionManifest,\n} from \"../../../../platform/extensions/common/extensions.js\";\nimport {\n\ttype ApiProposalName,\n\tallApiProposals,\n} from \"../../../../platform/extensions/common/extensionsApiProposals.js\";\nimport { SyncDescriptor } from \"../../../../platform/instantiation/common/descriptors.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { IProductService } from \"../../../../platform/product/common/productService.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport { IWorkbenchEnvironmentService } from \"../../environment/common/environmentService.js\";\nimport {\n\tExtensions,\n\ttype IExtensionFeatureMarkdownRenderer,\n\ttype IExtensionFeaturesRegistry,\n\ttype IRenderedData,\n} from \"../../extensionManagement/common/extensionFeatures.js\";\n\nexport class ExtensionsProposedApi {\n\tprivate readonly _envEnablesProposedApiForAll: boolean;\n\tprivate readonly _envEnabledExtensions: Set<string>;\n\tprivate readonly _productEnabledExtensions: Map<string, string[]>;\n\n\tconstructor(\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@IWorkbenchEnvironmentService\n\t\tprivate readonly _environmentService: IWorkbenchEnvironmentService,\n\t\t@IProductService productService: IProductService,\n\t) {\n\t\tthis._envEnabledExtensions = new Set(\n\t\t\t(_environmentService.extensionEnabledProposedApi ?? []).map((id) =>\n\t\t\t\tExtensionIdentifier.toKey(id),\n\t\t\t),\n\t\t);\n\n\t\tthis._envEnablesProposedApiForAll =\n\t\t\t!_environmentService.isBuilt || // always allow proposed API when running out of sources\n\t\t\t(_environmentService.isExtensionDevelopment &&\n\t\t\t\tproductService.quality !== \"stable\") || // do not allow proposed API against stable builds when developing an extension\n\t\t\t(this._envEnabledExtensions.size === 0 &&\n\t\t\t\tArray.isArray(_environmentService.extensionEnabledProposedApi)); // always allow proposed API if --enable-proposed-api is provided without extension ID\n\n\t\tthis._productEnabledExtensions = new Map<string, ApiProposalName[]>();\n\n\t\t// NEW world - product.json spells out what proposals each extension can use\n\t\tif (productService.extensionEnabledApiProposals) {\n\t\t\tfor (const [k, value] of Object.entries(\n\t\t\t\tproductService.extensionEnabledApiProposals,\n\t\t\t)) {\n\t\t\t\tconst key = ExtensionIdentifier.toKey(k);\n\t\t\t\tconst proposalNames = value.filter((name) => {\n\t\t\t\t\tif (!allApiProposals[<ApiProposalName>name]) {\n\t\t\t\t\t\t_logService.warn(\n\t\t\t\t\t\t\t`Via 'product.json#extensionEnabledApiProposals' extension '${key}' wants API proposal '${name}' but that proposal DOES NOT EXIST. Likely, the proposal has been finalized (check 'vscode.d.ts') or was abandoned.`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\t\tthis._productEnabledExtensions.set(key, proposalNames);\n\t\t\t}\n\t\t}\n\t}\n\n\tupdateEnabledApiProposals(extensions: IExtensionDescription[]): void {\n\t\tfor (const extension of extensions) {\n\t\t\tthis.doUpdateEnabledApiProposals(extension);\n\t\t}\n\t}\n\n\tprivate doUpdateEnabledApiProposals(\n\t\textension: Mutable<IExtensionDescription>,\n\t): void {\n\t\tconst key = ExtensionIdentifier.toKey(extension.identifier);\n\n\t\t// warn about invalid proposal and remove them from the list\n\t\tif (isNonEmptyArray(extension.enabledApiProposals)) {\n\t\t\textension.enabledApiProposals =\n\t\t\t\textension.enabledApiProposals.filter((name) => {\n\t\t\t\t\tconst result = Boolean(\n\t\t\t\t\t\tallApiProposals[<ApiProposalName>name],\n\t\t\t\t\t);\n\t\t\t\t\tif (!result) {\n\t\t\t\t\t\tthis._logService.error(\n\t\t\t\t\t\t\t`Extension '${key}' wants API proposal '${name}' but that proposal DOES NOT EXIST. Likely, the proposal has been finalized (check 'vscode.d.ts') or was abandoned.`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t});\n\t\t}\n\n\t\tif (this._productEnabledExtensions.has(key)) {\n\t\t\t// NOTE that proposals that are listed in product.json override whatever is declared in the extension\n\t\t\t// itself. This is needed for us to know what proposals are used \"in the wild\". Merging product.json-proposals\n\t\t\t// and extension-proposals would break that.\n\n\t\t\tconst productEnabledProposals =\n\t\t\t\tthis._productEnabledExtensions.get(key)!;\n\n\t\t\t// check for difference between product.json-declaration and package.json-declaration\n\t\t\tconst productSet = new Set(productEnabledProposals);\n\t\t\tconst extensionSet = new Set(extension.enabledApiProposals);\n\t\t\tconst diff = new Set(\n\t\t\t\t[...extensionSet].filter((a) => !productSet.has(a)),\n\t\t\t);\n\t\t\tif (diff.size > 0) {\n\t\t\t\tthis._logService.error(\n\t\t\t\t\t`Extension '${key}' appears in product.json but enables LESS API proposals than the extension wants.\\npackage.json (LOSES): ${[...extensionSet].join(\", \")}\\nproduct.json (WINS): ${[...productSet].join(\", \")}`,\n\t\t\t\t);\n\n\t\t\t\tif (this._environmentService.isExtensionDevelopment) {\n\t\t\t\t\tthis._logService.error(\n\t\t\t\t\t\t`Proceeding with EXTRA proposals (${[...diff].join(\", \")}) because extension is in development mode. Still, this EXTENSION WILL BE BROKEN unless product.json is updated.`,\n\t\t\t\t\t);\n\t\t\t\t\tproductEnabledProposals.push(...diff);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\textension.enabledApiProposals = productEnabledProposals;\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\tthis._envEnablesProposedApiForAll ||\n\t\t\tthis._envEnabledExtensions.has(key)\n\t\t) {\n\t\t\t// proposed API usage is not restricted and allowed just like the extension\n\t\t\t// has declared it\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\t!extension.isBuiltin &&\n\t\t\tisNonEmptyArray(extension.enabledApiProposals)\n\t\t) {\n\t\t\t// restrictive: extension cannot use proposed API in this context and its declaration is nulled\n\t\t\tthis._logService.error(\n\t\t\t\t`Extension '${extension.identifier.value} CANNOT USE these API proposals '${extension.enabledApiProposals?.join(\", \") || \"*\"}'. You MUST start in extension development mode or use the --enable-proposed-api command line flag`,\n\t\t\t);\n\t\t\textension.enabledApiProposals = [];\n\t\t}\n\t}\n}\n\nclass ApiProposalsMarkdowneRenderer\n\textends Disposable\n\timplements IExtensionFeatureMarkdownRenderer\n{\n\treadonly type = \"markdown\";\n\n\tshouldRender(manifest: IExtensionManifest): boolean {\n\t\treturn (\n\t\t\t!!manifest.originalEnabledApiProposals?.length ||\n\t\t\t!!manifest.enabledApiProposals?.length\n\t\t);\n\t}\n\n\trender(manifest: IExtensionManifest): IRenderedData<IMarkdownString> {\n\t\tconst enabledApiProposals =\n\t\t\tmanifest.originalEnabledApiProposals ??\n\t\t\tmanifest.enabledApiProposals ??\n\t\t\t[];\n\t\tconst data = new MarkdownString();\n\t\tif (enabledApiProposals.length) {\n\t\t\tfor (const proposal of enabledApiProposals) {\n\t\t\t\tdata.appendMarkdown(`- \\`${proposal}\\`\\n`);\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tdata,\n\t\t\tdispose: () => {},\n\t\t};\n\t}\n}\n\nRegistry.as<IExtensionFeaturesRegistry>(\n\tExtensions.ExtensionFeaturesRegistry,\n).registerExtensionFeature({\n\tid: \"enabledApiProposals\",\n\tlabel: localize(\"enabledProposedAPIs\", \"API Proposals\"),\n\taccess: {\n\t\tcanToggle: false,\n\t},\n\trenderer: new SyncDescriptor(ApiProposalsMarkdowneRenderer),\n});\n"],
  "mappings": "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",
  "names": []
}
