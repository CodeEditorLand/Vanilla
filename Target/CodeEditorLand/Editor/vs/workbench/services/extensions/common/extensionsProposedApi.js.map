{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/extensions/common/extensionsProposedApi.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { localize } from '../../../../nls.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { ExtensionIdentifier, IExtensionDescription, IExtensionManifest } from '../../../../platform/extensions/common/extensions.js';\nimport { allApiProposals, ApiProposalName } from '../../../../platform/extensions/common/extensionsApiProposals.js';\nimport { SyncDescriptor } from '../../../../platform/instantiation/common/descriptors.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { IProductService } from '../../../../platform/product/common/productService.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { IWorkbenchEnvironmentService } from '../../environment/common/environmentService.js';\nimport { Extensions, IExtensionFeatureMarkdownRenderer, IExtensionFeaturesRegistry, IRenderedData } from '../../extensionManagement/common/extensionFeatures.js';\nimport { IMarkdownString, MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Mutable } from '../../../../base/common/types.js';\n\nexport class ExtensionsProposedApi {\n\n\tprivate readonly _envEnablesProposedApiForAll: boolean;\n\tprivate readonly _envEnabledExtensions: Set<string>;\n\tprivate readonly _productEnabledExtensions: Map<string, string[]>;\n\n\tconstructor(\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@IWorkbenchEnvironmentService private readonly _environmentService: IWorkbenchEnvironmentService,\n\t\t@IProductService productService: IProductService\n\t) {\n\n\t\tthis._envEnabledExtensions = new Set((_environmentService.extensionEnabledProposedApi ?? []).map(id => ExtensionIdentifier.toKey(id)));\n\n\t\tthis._envEnablesProposedApiForAll =\n\t\t\t!_environmentService.isBuilt || // always allow proposed API when running out of sources\n\t\t\t(_environmentService.isExtensionDevelopment && productService.quality !== 'stable') || // do not allow proposed API against stable builds when developing an extension\n\t\t\t(this._envEnabledExtensions.size === 0 && Array.isArray(_environmentService.extensionEnabledProposedApi)); // always allow proposed API if --enable-proposed-api is provided without extension ID\n\n\t\tthis._productEnabledExtensions = new Map<string, ApiProposalName[]>();\n\n\n\t\t// NEW world - product.json spells out what proposals each extension can use\n\t\tif (productService.extensionEnabledApiProposals) {\n\t\t\tfor (const [k, value] of Object.entries(productService.extensionEnabledApiProposals)) {\n\t\t\t\tconst key = ExtensionIdentifier.toKey(k);\n\t\t\t\tconst proposalNames = value.filter(name => {\n\t\t\t\t\tif (!allApiProposals[<ApiProposalName>name]) {\n\t\t\t\t\t\t_logService.warn(`Via 'product.json#extensionEnabledApiProposals' extension '${key}' wants API proposal '${name}' but that proposal DOES NOT EXIST. Likely, the proposal has been finalized (check 'vscode.d.ts') or was abandoned.`);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\t\tthis._productEnabledExtensions.set(key, proposalNames);\n\t\t\t}\n\t\t}\n\t}\n\n\tupdateEnabledApiProposals(extensions: IExtensionDescription[]): void {\n\t\tfor (const extension of extensions) {\n\t\t\tthis.doUpdateEnabledApiProposals(extension);\n\t\t}\n\t}\n\n\tprivate doUpdateEnabledApiProposals(extension: Mutable<IExtensionDescription>): void {\n\n\t\tconst key = ExtensionIdentifier.toKey(extension.identifier);\n\n\t\t// warn about invalid proposal and remove them from the list\n\t\tif (isNonEmptyArray(extension.enabledApiProposals)) {\n\t\t\textension.enabledApiProposals = extension.enabledApiProposals.filter(name => {\n\t\t\t\tconst result = Boolean(allApiProposals[<ApiProposalName>name]);\n\t\t\t\tif (!result) {\n\t\t\t\t\tthis._logService.error(`Extension '${key}' wants API proposal '${name}' but that proposal DOES NOT EXIST. Likely, the proposal has been finalized (check 'vscode.d.ts') or was abandoned.`);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t});\n\t\t}\n\n\n\t\tif (this._productEnabledExtensions.has(key)) {\n\t\t\t// NOTE that proposals that are listed in product.json override whatever is declared in the extension\n\t\t\t// itself. This is needed for us to know what proposals are used \"in the wild\". Merging product.json-proposals\n\t\t\t// and extension-proposals would break that.\n\n\t\t\tconst productEnabledProposals = this._productEnabledExtensions.get(key)!;\n\n\t\t\t// check for difference between product.json-declaration and package.json-declaration\n\t\t\tconst productSet = new Set(productEnabledProposals);\n\t\t\tconst extensionSet = new Set(extension.enabledApiProposals);\n\t\t\tconst diff = new Set([...extensionSet].filter(a => !productSet.has(a)));\n\t\t\tif (diff.size > 0) {\n\t\t\t\tthis._logService.error(`Extension '${key}' appears in product.json but enables LESS API proposals than the extension wants.\\npackage.json (LOSES): ${[...extensionSet].join(', ')}\\nproduct.json (WINS): ${[...productSet].join(', ')}`);\n\n\t\t\t\tif (this._environmentService.isExtensionDevelopment) {\n\t\t\t\t\tthis._logService.error(`Proceeding with EXTRA proposals (${[...diff].join(', ')}) because extension is in development mode. Still, this EXTENSION WILL BE BROKEN unless product.json is updated.`);\n\t\t\t\t\tproductEnabledProposals.push(...diff);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\textension.enabledApiProposals = productEnabledProposals;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._envEnablesProposedApiForAll || this._envEnabledExtensions.has(key)) {\n\t\t\t// proposed API usage is not restricted and allowed just like the extension\n\t\t\t// has declared it\n\t\t\treturn;\n\t\t}\n\n\t\tif (!extension.isBuiltin && isNonEmptyArray(extension.enabledApiProposals)) {\n\t\t\t// restrictive: extension cannot use proposed API in this context and its declaration is nulled\n\t\t\tthis._logService.error(`Extension '${extension.identifier.value} CANNOT USE these API proposals '${extension.enabledApiProposals?.join(', ') || '*'}'. You MUST start in extension development mode or use the --enable-proposed-api command line flag`);\n\t\t\textension.enabledApiProposals = [];\n\t\t}\n\t}\n}\n\nclass ApiProposalsMarkdowneRenderer extends Disposable implements IExtensionFeatureMarkdownRenderer {\n\n\treadonly type = 'markdown';\n\n\tshouldRender(manifest: IExtensionManifest): boolean {\n\t\treturn !!manifest.originalEnabledApiProposals?.length || !!manifest.enabledApiProposals?.length;\n\t}\n\n\trender(manifest: IExtensionManifest): IRenderedData<IMarkdownString> {\n\t\tconst enabledApiProposals = manifest.originalEnabledApiProposals ?? manifest.enabledApiProposals ?? [];\n\t\tconst data = new MarkdownString();\n\t\tif (enabledApiProposals.length) {\n\t\t\tfor (const proposal of enabledApiProposals) {\n\t\t\t\tdata.appendMarkdown(`- \\`${proposal}\\`\\n`);\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tdata,\n\t\t\tdispose: () => { }\n\t\t};\n\t}\n}\n\nRegistry.as<IExtensionFeaturesRegistry>(Extensions.ExtensionFeaturesRegistry).registerExtensionFeature({\n\tid: 'enabledApiProposals',\n\tlabel: localize('enabledProposedAPIs', \"API Proposals\"),\n\taccess: {\n\t\tcanToggle: false\n\t},\n\trenderer: new SyncDescriptor(ApiProposalsMarkdowneRenderer),\n});\n"],
  "mappings": "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",
  "names": []
}
