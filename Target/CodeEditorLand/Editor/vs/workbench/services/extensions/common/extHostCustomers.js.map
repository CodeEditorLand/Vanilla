{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/extensions/common/extHostCustomers.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IDisposable } from \"../../../../base/common/lifecycle.js\";\nimport type {\n\tBrandedService,\n\tIConstructorSignature,\n} from \"../../../../platform/instantiation/common/instantiation.js\";\nimport type { ExtensionHostKind } from \"./extensionHostKind.js\";\nimport type { IExtensionHostProxy } from \"./extensionHostProxy.js\";\nimport type { IInternalExtensionService } from \"./extensions.js\";\nimport type { IRPCProtocol, ProxyIdentifier } from \"./proxyIdentifier.js\";\n\nexport interface IExtHostContext extends IRPCProtocol {\n\treadonly remoteAuthority: string | null;\n\treadonly extensionHostKind: ExtensionHostKind;\n}\n\nexport interface IInternalExtHostContext extends IExtHostContext {\n\treadonly internalExtensionService: IInternalExtensionService;\n\t_setExtensionHostProxy(extensionHostProxy: IExtensionHostProxy): void;\n\t_setAllMainProxyIdentifiers(\n\t\tmainProxyIdentifiers: ProxyIdentifier<any>[],\n\t): void;\n}\n\nexport type IExtHostNamedCustomer<T extends IDisposable> = [\n\tProxyIdentifier<T>,\n\tIExtHostCustomerCtor<T>,\n];\n\nexport type IExtHostCustomerCtor<T extends IDisposable> = IConstructorSignature<\n\tT,\n\t[IExtHostContext]\n>;\n\nexport function extHostNamedCustomer<T extends IDisposable>(\n\tid: ProxyIdentifier<T>,\n) {\n\treturn <Services extends BrandedService[]>(ctor: {\n\t\tnew (context: IExtHostContext, ...services: Services): T;\n\t}): void => {\n\t\tExtHostCustomersRegistryImpl.INSTANCE.registerNamedCustomer(\n\t\t\tid,\n\t\t\tctor as IExtHostCustomerCtor<T>,\n\t\t);\n\t};\n}\n\nexport function extHostCustomer<\n\tT extends IDisposable,\n\tServices extends BrandedService[],\n>(ctor: { new (context: IExtHostContext, ...services: Services): T }): void {\n\tExtHostCustomersRegistryImpl.INSTANCE.registerCustomer(\n\t\tctor as IExtHostCustomerCtor<T>,\n\t);\n}\n\nexport namespace ExtHostCustomersRegistry {\n\texport function getNamedCustomers(): IExtHostNamedCustomer<IDisposable>[] {\n\t\treturn ExtHostCustomersRegistryImpl.INSTANCE.getNamedCustomers();\n\t}\n\n\texport function getCustomers(): IExtHostCustomerCtor<IDisposable>[] {\n\t\treturn ExtHostCustomersRegistryImpl.INSTANCE.getCustomers();\n\t}\n}\n\nclass ExtHostCustomersRegistryImpl {\n\tpublic static readonly INSTANCE = new ExtHostCustomersRegistryImpl();\n\n\tprivate _namedCustomers: IExtHostNamedCustomer<any>[];\n\tprivate _customers: IExtHostCustomerCtor<any>[];\n\n\tconstructor() {\n\t\tthis._namedCustomers = [];\n\t\tthis._customers = [];\n\t}\n\n\tpublic registerNamedCustomer<T extends IDisposable>(\n\t\tid: ProxyIdentifier<T>,\n\t\tctor: IExtHostCustomerCtor<T>,\n\t): void {\n\t\tconst entry: IExtHostNamedCustomer<T> = [id, ctor];\n\t\tthis._namedCustomers.push(entry);\n\t}\n\tpublic getNamedCustomers(): IExtHostNamedCustomer<any>[] {\n\t\treturn this._namedCustomers;\n\t}\n\n\tpublic registerCustomer<T extends IDisposable>(\n\t\tctor: IExtHostCustomerCtor<T>,\n\t): void {\n\t\tthis._customers.push(ctor);\n\t}\n\tpublic getCustomers(): IExtHostCustomerCtor<any>[] {\n\t\treturn this._customers;\n\t}\n}\n"],
  "mappings": ";;AAsCO,SAAS,qBACf,IACC;AACD,SAAO,CAAoC,SAE/B;AACX,iCAA6B,SAAS;AAAA,MACrC;AAAA,MACA;AAAA,IACD;AAAA,EACD;AACD;AAXgB;AAaT,SAAS,gBAGd,MAA0E;AAC3E,+BAA6B,SAAS;AAAA,IACrC;AAAA,EACD;AACD;AAPgB;AAST,IAAU;AAAA,CAAV,CAAUA,8BAAV;AACC,WAAS,oBAA0D;AACzE,WAAO,6BAA6B,SAAS,kBAAkB;AAAA,EAChE;AAFO,EAAAA,0BAAS;AAAA;AAIT,WAAS,eAAoD;AACnE,WAAO,6BAA6B,SAAS,aAAa;AAAA,EAC3D;AAFO,EAAAA,0BAAS;AAAA;AAAA,GALA;AAUjB,MAAM,6BAA6B;AAAA,EAtEnC,OAsEmC;AAAA;AAAA;AAAA,EAClC,OAAuB,WAAW,IAAI,6BAA6B;AAAA,EAE3D;AAAA,EACA;AAAA,EAER,cAAc;AACb,SAAK,kBAAkB,CAAC;AACxB,SAAK,aAAa,CAAC;AAAA,EACpB;AAAA,EAEO,sBACN,IACA,MACO;AACP,UAAM,QAAkC,CAAC,IAAI,IAAI;AACjD,SAAK,gBAAgB,KAAK,KAAK;AAAA,EAChC;AAAA,EACO,oBAAkD;AACxD,WAAO,KAAK;AAAA,EACb;AAAA,EAEO,iBACN,MACO;AACP,SAAK,WAAW,KAAK,IAAI;AAAA,EAC1B;AAAA,EACO,eAA4C;AAClD,WAAO,KAAK;AAAA,EACb;AACD;",
  "names": ["ExtHostCustomersRegistry"]
}
