{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/extensions/common/extHostCustomers.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from '../../../../base/common/lifecycle.js';\nimport { BrandedService, IConstructorSignature } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ExtensionHostKind } from './extensionHostKind.js';\nimport { IExtensionHostProxy } from './extensionHostProxy.js';\nimport { IInternalExtensionService } from './extensions.js';\nimport { IRPCProtocol, ProxyIdentifier } from './proxyIdentifier.js';\n\nexport interface IExtHostContext extends IRPCProtocol {\n\treadonly remoteAuthority: string | null;\n\treadonly extensionHostKind: ExtensionHostKind;\n}\n\nexport interface IInternalExtHostContext extends IExtHostContext {\n\treadonly internalExtensionService: IInternalExtensionService;\n\t_setExtensionHostProxy(extensionHostProxy: IExtensionHostProxy): void;\n\t_setAllMainProxyIdentifiers(mainProxyIdentifiers: ProxyIdentifier<any>[]): void;\n}\n\nexport type IExtHostNamedCustomer<T extends IDisposable> = [ProxyIdentifier<T>, IExtHostCustomerCtor<T>];\n\nexport type IExtHostCustomerCtor<T extends IDisposable> = IConstructorSignature<T, [IExtHostContext]>;\n\nexport function extHostNamedCustomer<T extends IDisposable>(id: ProxyIdentifier<T>) {\n\treturn function <Services extends BrandedService[]>(ctor: { new(context: IExtHostContext, ...services: Services): T }): void {\n\t\tExtHostCustomersRegistryImpl.INSTANCE.registerNamedCustomer(id, ctor as IExtHostCustomerCtor<T>);\n\t};\n}\n\nexport function extHostCustomer<T extends IDisposable, Services extends BrandedService[]>(ctor: { new(context: IExtHostContext, ...services: Services): T }): void {\n\tExtHostCustomersRegistryImpl.INSTANCE.registerCustomer(ctor as IExtHostCustomerCtor<T>);\n}\n\nexport namespace ExtHostCustomersRegistry {\n\n\texport function getNamedCustomers(): IExtHostNamedCustomer<IDisposable>[] {\n\t\treturn ExtHostCustomersRegistryImpl.INSTANCE.getNamedCustomers();\n\t}\n\n\texport function getCustomers(): IExtHostCustomerCtor<IDisposable>[] {\n\t\treturn ExtHostCustomersRegistryImpl.INSTANCE.getCustomers();\n\t}\n}\n\nclass ExtHostCustomersRegistryImpl {\n\n\tpublic static readonly INSTANCE = new ExtHostCustomersRegistryImpl();\n\n\tprivate _namedCustomers: IExtHostNamedCustomer<any>[];\n\tprivate _customers: IExtHostCustomerCtor<any>[];\n\n\tconstructor() {\n\t\tthis._namedCustomers = [];\n\t\tthis._customers = [];\n\t}\n\n\tpublic registerNamedCustomer<T extends IDisposable>(id: ProxyIdentifier<T>, ctor: IExtHostCustomerCtor<T>): void {\n\t\tconst entry: IExtHostNamedCustomer<T> = [id, ctor];\n\t\tthis._namedCustomers.push(entry);\n\t}\n\tpublic getNamedCustomers(): IExtHostNamedCustomer<any>[] {\n\t\treturn this._namedCustomers;\n\t}\n\n\tpublic registerCustomer<T extends IDisposable>(ctor: IExtHostCustomerCtor<T>): void {\n\t\tthis._customers.push(ctor);\n\t}\n\tpublic getCustomers(): IExtHostCustomerCtor<any>[] {\n\t\treturn this._customers;\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,mBAAmB;AAC5B,SAAS,gBAAgB,6BAA6B;AACtD,SAAS,yBAAyB;AAClC,SAAS,2BAA2B;AACpC,SAAS,iCAAiC;AAC1C,SAAS,cAAc,uBAAuB;AAiBvC,SAAS,qBAA4C,IAAwB;AACnF,SAAO,SAA6C,MAAyE;AAC5H,iCAA6B,SAAS,sBAAsB,IAAI,IAA+B;AAAA,EAChG;AACD;AAJgB;AAMT,SAAS,gBAA0E,MAAyE;AAClK,+BAA6B,SAAS,iBAAiB,IAA+B;AACvF;AAFgB;AAIT,IAAU;AAAA,CAAV,CAAUA,8BAAV;AAEC,WAAS,oBAA0D;AACzE,WAAO,6BAA6B,SAAS,kBAAkB;AAAA,EAChE;AAFO,EAAAA,0BAAS;AAAA;AAIT,WAAS,eAAoD;AACnE,WAAO,6BAA6B,SAAS,aAAa;AAAA,EAC3D;AAFO,EAAAA,0BAAS;AAAA;AAAA,GANA;AAWjB,MAAM,6BAA6B;AAAA,EAhDnC,OAgDmC;AAAA;AAAA;AAAA,EAElC,OAAuB,WAAW,IAAI,6BAA6B;AAAA,EAE3D;AAAA,EACA;AAAA,EAER,cAAc;AACb,SAAK,kBAAkB,CAAC;AACxB,SAAK,aAAa,CAAC;AAAA,EACpB;AAAA,EAEO,sBAA6C,IAAwB,MAAqC;AAChH,UAAM,QAAkC,CAAC,IAAI,IAAI;AACjD,SAAK,gBAAgB,KAAK,KAAK;AAAA,EAChC;AAAA,EACO,oBAAkD;AACxD,WAAO,KAAK;AAAA,EACb;AAAA,EAEO,iBAAwC,MAAqC;AACnF,SAAK,WAAW,KAAK,IAAI;AAAA,EAC1B;AAAA,EACO,eAA4C;AAClD,WAAO,KAAK;AAAA,EACb;AACD;",
  "names": ["ExtHostCustomersRegistry"]
}
