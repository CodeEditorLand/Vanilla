{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/extensions/common/extensionStorageMigration.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getErrorMessage } from '../../../../base/common/errors.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { IEnvironmentService } from '../../../../platform/environment/common/environment.js';\nimport { IExtensionStorageService } from '../../../../platform/extensionManagement/common/extensionStorage.js';\nimport { FileSystemProviderError, FileSystemProviderErrorCode, IFileService } from '../../../../platform/files/common/files.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { IStorageService, StorageScope, StorageTarget } from '../../../../platform/storage/common/storage.js';\nimport { IUriIdentityService } from '../../../../platform/uriIdentity/common/uriIdentity.js';\nimport { IUserDataProfilesService } from '../../../../platform/userDataProfile/common/userDataProfile.js';\nimport { IWorkspaceContextService } from '../../../../platform/workspace/common/workspace.js';\n\n/**\n * An extension storage has following\n * \t- State: Stored using storage service with extension id as key and state as value.\n *  - Resources: Stored under a location scoped to the extension.\n */\nexport async function migrateExtensionStorage(fromExtensionId: string, toExtensionId: string, global: boolean, instantionService: IInstantiationService): Promise<void> {\n\treturn instantionService.invokeFunction(async serviceAccessor => {\n\t\tconst environmentService = serviceAccessor.get(IEnvironmentService);\n\t\tconst userDataProfilesService = serviceAccessor.get(IUserDataProfilesService);\n\t\tconst extensionStorageService = serviceAccessor.get(IExtensionStorageService);\n\t\tconst storageService = serviceAccessor.get(IStorageService);\n\t\tconst uriIdentityService = serviceAccessor.get(IUriIdentityService);\n\t\tconst fileService = serviceAccessor.get(IFileService);\n\t\tconst workspaceContextService = serviceAccessor.get(IWorkspaceContextService);\n\t\tconst logService = serviceAccessor.get(ILogService);\n\t\tconst storageMigratedKey = `extensionStorage.migrate.${fromExtensionId}-${toExtensionId}`;\n\t\tconst migrateLowerCaseStorageKey = fromExtensionId.toLowerCase() === toExtensionId.toLowerCase() ? `extension.storage.migrateFromLowerCaseKey.${fromExtensionId.toLowerCase()}` : undefined;\n\n\t\tif (fromExtensionId === toExtensionId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst getExtensionStorageLocation = (extensionId: string, global: boolean): URI => {\n\t\t\tif (global) {\n\t\t\t\treturn uriIdentityService.extUri.joinPath(userDataProfilesService.defaultProfile.globalStorageHome, extensionId.toLowerCase() /* Extension id is lower cased for global storage */);\n\t\t\t}\n\t\t\treturn uriIdentityService.extUri.joinPath(environmentService.workspaceStorageHome, workspaceContextService.getWorkspace().id, extensionId);\n\t\t};\n\n\t\tconst storageScope = global ? StorageScope.PROFILE : StorageScope.WORKSPACE;\n\t\tif (!storageService.getBoolean(storageMigratedKey, storageScope, false) && !(migrateLowerCaseStorageKey && storageService.getBoolean(migrateLowerCaseStorageKey, storageScope, false))) {\n\t\t\tlogService.info(`Migrating ${global ? 'global' : 'workspace'} extension storage from ${fromExtensionId} to ${toExtensionId}...`);\n\t\t\t// Migrate state\n\t\t\tconst value = extensionStorageService.getExtensionState(fromExtensionId, global);\n\t\t\tif (value) {\n\t\t\t\textensionStorageService.setExtensionState(toExtensionId, value, global);\n\t\t\t\textensionStorageService.setExtensionState(fromExtensionId, undefined, global);\n\t\t\t}\n\n\t\t\t// Migrate stored files\n\t\t\tconst fromPath = getExtensionStorageLocation(fromExtensionId, global);\n\t\t\tconst toPath = getExtensionStorageLocation(toExtensionId, global);\n\t\t\tif (!uriIdentityService.extUri.isEqual(fromPath, toPath)) {\n\t\t\t\ttry {\n\t\t\t\t\tawait fileService.move(fromPath, toPath, true);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif ((<FileSystemProviderError>error).code !== FileSystemProviderErrorCode.FileNotFound) {\n\t\t\t\t\t\tlogService.info(`Error while migrating ${global ? 'global' : 'workspace'} file storage from '${fromExtensionId}' to '${toExtensionId}'`, getErrorMessage(error));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlogService.info(`Migrated ${global ? 'global' : 'workspace'} extension storage from ${fromExtensionId} to ${toExtensionId}`);\n\t\t\tstorageService.store(storageMigratedKey, true, storageScope, StorageTarget.MACHINE);\n\t\t}\n\t});\n}\n"],
  "mappings": ";;AAKA,SAAS,uBAAuB;AAChC,SAAS,WAAW;AACpB,SAAS,2BAA2B;AACpC,SAAS,gCAAgC;AACzC,SAAS,yBAAyB,6BAA6B,oBAAoB;AACnF,SAAS,6BAA6B;AACtC,SAAS,mBAAmB;AAC5B,SAAS,iBAAiB,cAAc,qBAAqB;AAC7D,SAAS,2BAA2B;AACpC,SAAS,gCAAgC;AACzC,SAAS,gCAAgC;AAOzC,eAAsB,wBAAwB,iBAAyB,eAAuB,QAAiB,mBAAyD;AACvK,SAAO,kBAAkB,eAAe,OAAM,oBAAmB;AAChE,UAAM,qBAAqB,gBAAgB,IAAI,mBAAmB;AAClE,UAAM,0BAA0B,gBAAgB,IAAI,wBAAwB;AAC5E,UAAM,0BAA0B,gBAAgB,IAAI,wBAAwB;AAC5E,UAAM,iBAAiB,gBAAgB,IAAI,eAAe;AAC1D,UAAM,qBAAqB,gBAAgB,IAAI,mBAAmB;AAClE,UAAM,cAAc,gBAAgB,IAAI,YAAY;AACpD,UAAM,0BAA0B,gBAAgB,IAAI,wBAAwB;AAC5E,UAAM,aAAa,gBAAgB,IAAI,WAAW;AAClD,UAAM,qBAAqB,4BAA4B,eAAe,IAAI,aAAa;AACvF,UAAM,6BAA6B,gBAAgB,YAAY,MAAM,cAAc,YAAY,IAAI,6CAA6C,gBAAgB,YAAY,CAAC,KAAK;AAElL,QAAI,oBAAoB,eAAe;AACtC;AAAA,IACD;AAEA,UAAM,8BAA8B,wBAAC,aAAqBA,YAAyB;AAClF,UAAIA,SAAQ;AACX,eAAO,mBAAmB,OAAO;AAAA,UAAS,wBAAwB,eAAe;AAAA,UAAmB,YAAY,YAAY;AAAA;AAAA,QAAsD;AAAA,MACnL;AACA,aAAO,mBAAmB,OAAO,SAAS,mBAAmB,sBAAsB,wBAAwB,aAAa,EAAE,IAAI,WAAW;AAAA,IAC1I,GALoC;AAOpC,UAAM,eAAe,SAAS,aAAa,UAAU,aAAa;AAClE,QAAI,CAAC,eAAe,WAAW,oBAAoB,cAAc,KAAK,KAAK,EAAE,8BAA8B,eAAe,WAAW,4BAA4B,cAAc,KAAK,IAAI;AACvL,iBAAW,KAAK,aAAa,SAAS,WAAW,WAAW,2BAA2B,eAAe,OAAO,aAAa,KAAK;AAE/H,YAAM,QAAQ,wBAAwB,kBAAkB,iBAAiB,MAAM;AAC/E,UAAI,OAAO;AACV,gCAAwB,kBAAkB,eAAe,OAAO,MAAM;AACtE,gCAAwB,kBAAkB,iBAAiB,QAAW,MAAM;AAAA,MAC7E;AAGA,YAAM,WAAW,4BAA4B,iBAAiB,MAAM;AACpE,YAAM,SAAS,4BAA4B,eAAe,MAAM;AAChE,UAAI,CAAC,mBAAmB,OAAO,QAAQ,UAAU,MAAM,GAAG;AACzD,YAAI;AACH,gBAAM,YAAY,KAAK,UAAU,QAAQ,IAAI;AAAA,QAC9C,SAAS,OAAO;AACf,cAA8B,MAAO,SAAS,4BAA4B,cAAc;AACvF,uBAAW,KAAK,yBAAyB,SAAS,WAAW,WAAW,uBAAuB,eAAe,SAAS,aAAa,KAAK,gBAAgB,KAAK,CAAC;AAAA,UAChK;AAAA,QACD;AAAA,MACD;AACA,iBAAW,KAAK,YAAY,SAAS,WAAW,WAAW,2BAA2B,eAAe,OAAO,aAAa,EAAE;AAC3H,qBAAe,MAAM,oBAAoB,MAAM,cAAc,cAAc,OAAO;AAAA,IACnF;AAAA,EACD,CAAC;AACF;AAlDsB;",
  "names": ["global"]
}
