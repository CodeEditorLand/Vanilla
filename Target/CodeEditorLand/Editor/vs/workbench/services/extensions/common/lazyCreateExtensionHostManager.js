var p=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var c=(s,n,t,e)=>{for(var i=e>1?void 0:e?h(n,t):n,a=s.length-1,o;a>=0;a--)(o=s[a])&&(i=(e?o(n,t,i):o(i))||i);return e&&i&&p(n,t,i),i},l=(s,n)=>(t,e)=>n(t,e,s);import{Barrier as _}from"../../../../base/common/async.js";import{Emitter as d}from"../../../../base/common/event.js";import{Disposable as m}from"../../../../base/common/lifecycle.js";import{IInstantiationService as x}from"../../../../platform/instantiation/common/instantiation.js";import{ILogService as v}from"../../../../platform/log/common/log.js";import{RemoteAuthorityResolverErrorCode as E}from"../../../../platform/remote/common/remoteAuthorityResolver.js";import{ExtensionHostManager as y,friendlyExtHostName as g}from"./extensionHostManager.js";import{ActivationKind as f,ExtensionHostExtensions as I}from"./extensions.js";let r=class extends m{constructor(t,e,i,a){super();this._internalExtensionService=e;this._instantiationService=i;this._logService=a;this._extensionHost=t,this.onDidExit=t.onExit,this._startCalled=new _,this._actual=null,this._lazyStartExtensions=null}onDidExit;_onDidChangeResponsiveState=this._register(new d);onDidChangeResponsiveState=this._onDidChangeResponsiveState.event;_extensionHost;_startCalled;_actual;_lazyStartExtensions;get pid(){return this._actual?this._actual.pid:null}get kind(){return this._extensionHost.runningLocation.kind}get startup(){return this._extensionHost.startup}get friendyName(){return g(this.kind,this.pid)}_createActual(t){return this._logService.info(`Creating lazy extension host (${this.friendyName}). Reason: ${t}`),this._actual=this._register(this._instantiationService.createInstance(y,this._extensionHost,[],this._internalExtensionService)),this._register(this._actual.onDidChangeResponsiveState(e=>this._onDidChangeResponsiveState.fire(e))),this._actual}async _getOrCreateActualAndStart(t){if(this._actual)return this._actual;const e=this._createActual(t);return await e.start(this._lazyStartExtensions.versionId,this._lazyStartExtensions.allExtensions,this._lazyStartExtensions.myExtensions),e}async ready(){await this._startCalled.wait(),this._actual&&await this._actual.ready()}async disconnect(){await this._actual?.disconnect()}representsRunningLocation(t){return this._extensionHost.runningLocation.equals(t)}async deltaExtensions(t){if(await this._startCalled.wait(),this._actual)return this._actual.deltaExtensions(t);if(this._lazyStartExtensions.delta(t),t.myToAdd.length>0){await this._createActual(`contains ${t.myToAdd.length} new extension(s) (installed or enabled): ${t.myToAdd.map(i=>i.value)}`).start(this._lazyStartExtensions.versionId,this._lazyStartExtensions.allExtensions,this._lazyStartExtensions.myExtensions);return}}containsExtension(t){return this._extensionHost.extensions?.containsExtension(t)??!1}async activate(t,e){return await this._startCalled.wait(),this._actual?this._actual.activate(t,e):!1}async activateByEvent(t,e){if(e===f.Immediate)return this._actual?this._actual.activateByEvent(t,e):void 0;if(await this._startCalled.wait(),this._actual)return this._actual.activateByEvent(t,e)}activationEventIsDone(t){return this._startCalled.isOpen()?this._actual?this._actual.activationEventIsDone(t):!0:!1}async getInspectPort(t){return await this._startCalled.wait(),this._actual?.getInspectPort(t)}async resolveAuthority(t,e){return await this._startCalled.wait(),this._actual?this._actual.resolveAuthority(t,e):{type:"error",error:{message:"Cannot resolve authority",code:E.Unknown,detail:void 0}}}async getCanonicalURI(t,e){if(await this._startCalled.wait(),this._actual)return this._actual.getCanonicalURI(t,e);throw new Error("Cannot resolve canonical URI")}async start(t,e,i){if(i.length>0){const o=this._createActual(`contains ${i.length} extension(s): ${i.map(u=>u.value)}.`).start(t,e,i);return this._startCalled.open(),o}this._lazyStartExtensions=new I(t,e,i),this._startCalled.open()}async extensionTestsExecute(){return await this._startCalled.wait(),(await this._getOrCreateActualAndStart("execute tests.")).extensionTestsExecute()}async setRemoteEnvironment(t){if(await this._startCalled.wait(),this._actual)return this._actual.setRemoteEnvironment(t)}};r=c([l(2,x),l(3,v)],r);export{r as LazyCreateExtensionHostManager};
