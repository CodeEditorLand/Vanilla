var h=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var c=(a,n,t,i)=>{for(var e=i>1?void 0:i?p(n,t):n,s=a.length-1,r;s>=0;s--)(r=a[s])&&(e=(i?r(n,t,e):r(e))||e);return i&&e&&h(n,t,e),e},l=(a,n)=>(t,i)=>n(t,i,a);import{Barrier as _}from"../../../../base/common/async.js";import{Emitter as d}from"../../../../base/common/event.js";import{Disposable as m}from"../../../../base/common/lifecycle.js";import"../../../../base/common/uri.js";import"../../../../platform/extensions/common/extensions.js";import{IInstantiationService as v}from"../../../../platform/instantiation/common/instantiation.js";import{ILogService as E}from"../../../../platform/log/common/log.js";import{RemoteAuthorityResolverErrorCode as x}from"../../../../platform/remote/common/remoteAuthorityResolver.js";import"./extensionHostKind.js";import{ExtensionHostManager as g,friendlyExtHostName as f}from"./extensionHostManager.js";import"./extensionHostManagers.js";import"./extensionHostProtocol.js";import"./extensionHostProxy.js";import"./extensionRunningLocation.js";import{ActivationKind as y,ExtensionHostExtensions as I}from"./extensions.js";import"./rpcProtocol.js";let o=class extends m{constructor(t,i,e,s){super();this._internalExtensionService=i;this._instantiationService=e;this._logService=s;this._extensionHost=t,this.onDidExit=t.onExit,this._startCalled=new _,this._actual=null,this._lazyStartExtensions=null}onDidExit;_onDidChangeResponsiveState=this._register(new d);onDidChangeResponsiveState=this._onDidChangeResponsiveState.event;_extensionHost;_startCalled;_actual;_lazyStartExtensions;get pid(){return this._actual?this._actual.pid:null}get kind(){return this._extensionHost.runningLocation.kind}get startup(){return this._extensionHost.startup}get friendyName(){return f(this.kind,this.pid)}_createActual(t){return this._logService.info(`Creating lazy extension host (${this.friendyName}). Reason: ${t}`),this._actual=this._register(this._instantiationService.createInstance(g,this._extensionHost,[],this._internalExtensionService)),this._register(this._actual.onDidChangeResponsiveState(i=>this._onDidChangeResponsiveState.fire(i))),this._actual}async _getOrCreateActualAndStart(t){if(this._actual)return this._actual;const i=this._createActual(t);return await i.start(this._lazyStartExtensions.versionId,this._lazyStartExtensions.allExtensions,this._lazyStartExtensions.myExtensions),i}async ready(){await this._startCalled.wait(),this._actual&&await this._actual.ready()}async disconnect(){await this._actual?.disconnect()}representsRunningLocation(t){return this._extensionHost.runningLocation.equals(t)}async deltaExtensions(t){if(await this._startCalled.wait(),this._actual)return this._actual.deltaExtensions(t);if(this._lazyStartExtensions.delta(t),t.myToAdd.length>0){await this._createActual(`contains ${t.myToAdd.length} new extension(s) (installed or enabled): ${t.myToAdd.map(e=>e.value)}`).start(this._lazyStartExtensions.versionId,this._lazyStartExtensions.allExtensions,this._lazyStartExtensions.myExtensions);return}}containsExtension(t){return this._extensionHost.extensions?.containsExtension(t)??!1}async activate(t,i){return await this._startCalled.wait(),this._actual?this._actual.activate(t,i):!1}async activateByEvent(t,i){if(i===y.Immediate)return this._actual?this._actual.activateByEvent(t,i):void 0;if(await this._startCalled.wait(),this._actual)return this._actual.activateByEvent(t,i)}activationEventIsDone(t){return this._startCalled.isOpen()?this._actual?this._actual.activationEventIsDone(t):!0:!1}async getInspectPort(t){return await this._startCalled.wait(),this._actual?.getInspectPort(t)}async resolveAuthority(t,i){return await this._startCalled.wait(),this._actual?this._actual.resolveAuthority(t,i):{type:"error",error:{message:"Cannot resolve authority",code:x.Unknown,detail:void 0}}}async getCanonicalURI(t,i){if(await this._startCalled.wait(),this._actual)return this._actual.getCanonicalURI(t,i);throw new Error("Cannot resolve canonical URI")}async start(t,i,e){if(e.length>0){const r=this._createActual(`contains ${e.length} extension(s): ${e.map(u=>u.value)}.`).start(t,i,e);return this._startCalled.open(),r}this._lazyStartExtensions=new I(t,i,e),this._startCalled.open()}async extensionTestsExecute(){return await this._startCalled.wait(),(await this._getOrCreateActualAndStart("execute tests.")).extensionTestsExecute()}async setRemoteEnvironment(t){if(await this._startCalled.wait(),this._actual)return this._actual.setRemoteEnvironment(t)}};o=c([l(2,v),l(3,E)],o);export{o as LazyCreateExtensionHostManager};
