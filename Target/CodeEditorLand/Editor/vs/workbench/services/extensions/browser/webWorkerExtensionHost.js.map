{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/extensions/browser/webWorkerExtensionHost.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from \"../../../../base/browser/dom.js\";\nimport { parentOriginHash } from \"../../../../base/browser/iframe.js\";\nimport { mainWindow } from \"../../../../base/browser/window.js\";\nimport { isESM } from \"../../../../base/common/amd.js\";\nimport { Barrier } from \"../../../../base/common/async.js\";\nimport { VSBuffer } from \"../../../../base/common/buffer.js\";\nimport { canceled, onUnexpectedError } from \"../../../../base/common/errors.js\";\nimport { Emitter, Event } from \"../../../../base/common/event.js\";\nimport { Disposable, toDisposable } from \"../../../../base/common/lifecycle.js\";\nimport {\n\ttype AppResourcePath,\n\tCOI,\n\tFileAccess,\n} from \"../../../../base/common/network.js\";\nimport * as platform from \"../../../../base/common/platform.js\";\nimport { joinPath } from \"../../../../base/common/resources.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { generateUuid } from \"../../../../base/common/uuid.js\";\nimport type { IMessagePassingProtocol } from \"../../../../base/parts/ipc/common/ipc.js\";\nimport { getNLSLanguage, getNLSMessages } from \"../../../../nls.js\";\nimport { ILabelService } from \"../../../../platform/label/common/label.js\";\nimport { ILayoutService } from \"../../../../platform/layout/browser/layoutService.js\";\nimport {\n\tILogService,\n\tILoggerService,\n} from \"../../../../platform/log/common/log.js\";\nimport { IProductService } from \"../../../../platform/product/common/productService.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { isLoggingOnly } from \"../../../../platform/telemetry/common/telemetryUtils.js\";\nimport { IUserDataProfilesService } from \"../../../../platform/userDataProfile/common/userDataProfile.js\";\nimport {\n\tIWorkspaceContextService,\n\tWorkbenchState,\n} from \"../../../../platform/workspace/common/workspace.js\";\nimport { IBrowserWorkbenchEnvironmentService } from \"../../environment/browser/environmentService.js\";\nimport {\n\tExtensionHostExitCode,\n\ttype IExtensionHostInitData,\n\tMessageType,\n\tUIKind,\n\tcreateMessageOfType,\n\tisMessageOfType,\n} from \"../common/extensionHostProtocol.js\";\nimport type { LocalWebWorkerRunningLocation } from \"../common/extensionRunningLocation.js\";\nimport {\n\ttype ExtensionHostExtensions,\n\tExtensionHostStartup,\n\ttype IExtensionHost,\n} from \"../common/extensions.js\";\n\nexport interface IWebWorkerExtensionHostInitData {\n\treadonly extensions: ExtensionHostExtensions;\n}\n\nexport interface IWebWorkerExtensionHostDataProvider {\n\tgetInitData(): Promise<IWebWorkerExtensionHostInitData>;\n}\n\nexport class WebWorkerExtensionHost\n\textends Disposable\n\timplements IExtensionHost\n{\n\tpublic readonly pid = null;\n\tpublic readonly remoteAuthority = null;\n\tpublic extensions: ExtensionHostExtensions | null = null;\n\n\tprivate readonly _onDidExit = this._register(\n\t\tnew Emitter<[number, string | null]>(),\n\t);\n\tpublic readonly onExit: Event<[number, string | null]> =\n\t\tthis._onDidExit.event;\n\n\tprivate _isTerminating: boolean;\n\tprivate _protocolPromise: Promise<IMessagePassingProtocol> | null;\n\tprivate _protocol: IMessagePassingProtocol | null;\n\n\tprivate readonly _extensionHostLogsLocation: URI;\n\n\tconstructor(\n\t\tpublic readonly runningLocation: LocalWebWorkerRunningLocation,\n\t\tpublic readonly startup: ExtensionHostStartup,\n\t\tprivate readonly _initDataProvider: IWebWorkerExtensionHostDataProvider,\n\t\t@ITelemetryService\n\t\tprivate readonly _telemetryService: ITelemetryService,\n\t\t@IWorkspaceContextService\n\t\tprivate readonly _contextService: IWorkspaceContextService,\n\t\t@ILabelService private readonly _labelService: ILabelService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@ILoggerService private readonly _loggerService: ILoggerService,\n\t\t@IBrowserWorkbenchEnvironmentService\n\t\tprivate readonly _environmentService: IBrowserWorkbenchEnvironmentService,\n\t\t@IUserDataProfilesService\n\t\tprivate readonly _userDataProfilesService: IUserDataProfilesService,\n\t\t@IProductService private readonly _productService: IProductService,\n\t\t@ILayoutService private readonly _layoutService: ILayoutService,\n\t\t@IStorageService private readonly _storageService: IStorageService,\n\t) {\n\t\tsuper();\n\t\tthis._isTerminating = false;\n\t\tthis._protocolPromise = null;\n\t\tthis._protocol = null;\n\t\tthis._extensionHostLogsLocation = joinPath(\n\t\t\tthis._environmentService.extHostLogsPath,\n\t\t\t\"webWorker\",\n\t\t);\n\t}\n\n\tprivate async _getWebWorkerExtensionHostIframeSrc(): Promise<string> {\n\t\tconst suffixSearchParams = new URLSearchParams();\n\t\tif (\n\t\t\tthis._environmentService.debugExtensionHost &&\n\t\t\tthis._environmentService.debugRenderer\n\t\t) {\n\t\t\tsuffixSearchParams.set(\"debugged\", \"1\");\n\t\t}\n\t\tCOI.addSearchParam(suffixSearchParams, true, true);\n\n\t\tconst suffix = `?${suffixSearchParams.toString()}`;\n\n\t\tconst iframeModulePath: AppResourcePath = `vs/workbench/services/extensions/worker/webWorkerExtensionHostIframe.${isESM ? \"esm.\" : \"\"}html`;\n\t\tif (platform.isWeb) {\n\t\t\tconst webEndpointUrlTemplate =\n\t\t\t\tthis._productService.webEndpointUrlTemplate;\n\t\t\tconst commit = this._productService.commit;\n\t\t\tconst quality = this._productService.quality;\n\t\t\tif (webEndpointUrlTemplate && commit && quality) {\n\t\t\t\t// Try to keep the web worker extension host iframe origin stable by storing it in workspace storage\n\t\t\t\tconst key = \"webWorkerExtensionHostIframeStableOriginUUID\";\n\t\t\t\tlet stableOriginUUID = this._storageService.get(\n\t\t\t\t\tkey,\n\t\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\t);\n\t\t\t\tif (typeof stableOriginUUID === \"undefined\") {\n\t\t\t\t\tstableOriginUUID = generateUuid();\n\t\t\t\t\tthis._storageService.store(\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\tstableOriginUUID,\n\t\t\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\t\t\tStorageTarget.MACHINE,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tconst hash = await parentOriginHash(\n\t\t\t\t\tmainWindow.origin,\n\t\t\t\t\tstableOriginUUID,\n\t\t\t\t);\n\t\t\t\tconst baseUrl = webEndpointUrlTemplate\n\t\t\t\t\t.replace(\"{{uuid}}\", `v--${hash}`) // using `v--` as a marker to require `parentOrigin`/`salt` verification\n\t\t\t\t\t.replace(\"{{commit}}\", commit)\n\t\t\t\t\t.replace(\"{{quality}}\", quality);\n\n\t\t\t\tconst res = new URL(\n\t\t\t\t\t`${baseUrl}/out/${iframeModulePath}${suffix}`,\n\t\t\t\t);\n\t\t\t\tres.searchParams.set(\"parentOrigin\", mainWindow.origin);\n\t\t\t\tres.searchParams.set(\"salt\", stableOriginUUID);\n\t\t\t\treturn res.toString();\n\t\t\t}\n\n\t\t\tconsole.warn(\n\t\t\t\t`The web worker extension host is started in a same-origin iframe!`,\n\t\t\t);\n\t\t}\n\n\t\tconst relativeExtensionHostIframeSrc =\n\t\t\tFileAccess.asBrowserUri(iframeModulePath);\n\t\treturn `${relativeExtensionHostIframeSrc.toString(true)}${suffix}`;\n\t}\n\n\tpublic async start(): Promise<IMessagePassingProtocol> {\n\t\tif (!this._protocolPromise) {\n\t\t\tthis._protocolPromise = this._startInsideIframe();\n\t\t\tthis._protocolPromise.then(\n\t\t\t\t(protocol) => (this._protocol = protocol),\n\t\t\t);\n\t\t}\n\t\treturn this._protocolPromise;\n\t}\n\n\tprivate async _startInsideIframe(): Promise<IMessagePassingProtocol> {\n\t\tconst webWorkerExtensionHostIframeSrc =\n\t\t\tawait this._getWebWorkerExtensionHostIframeSrc();\n\t\tconst emitter = this._register(new Emitter<VSBuffer>());\n\n\t\tconst iframe = document.createElement(\"iframe\");\n\t\tiframe.setAttribute(\"class\", \"web-worker-ext-host-iframe\");\n\t\tiframe.setAttribute(\"sandbox\", \"allow-scripts allow-same-origin\");\n\t\tiframe.setAttribute(\n\t\t\t\"allow\",\n\t\t\t\"usb; serial; hid; cross-origin-isolated;\",\n\t\t);\n\t\tiframe.setAttribute(\"aria-hidden\", \"true\");\n\t\tiframe.style.display = \"none\";\n\n\t\tconst vscodeWebWorkerExtHostId = generateUuid();\n\t\tiframe.setAttribute(\n\t\t\t\"src\",\n\t\t\t`${webWorkerExtensionHostIframeSrc}&vscodeWebWorkerExtHostId=${vscodeWebWorkerExtHostId}`,\n\t\t);\n\n\t\tconst barrier = new Barrier();\n\t\tlet port!: MessagePort;\n\t\tlet barrierError: Error | null = null;\n\t\tlet barrierHasError = false;\n\t\tlet startTimeout: any = null;\n\n\t\tconst rejectBarrier = (exitCode: number, error: Error) => {\n\t\t\tbarrierError = error;\n\t\t\tbarrierHasError = true;\n\t\t\tonUnexpectedError(barrierError);\n\t\t\tclearTimeout(startTimeout);\n\t\t\tthis._onDidExit.fire([\n\t\t\t\tExtensionHostExitCode.UnexpectedError,\n\t\t\t\tbarrierError.message,\n\t\t\t]);\n\t\t\tbarrier.open();\n\t\t};\n\n\t\tconst resolveBarrier = (messagePort: MessagePort) => {\n\t\t\tport = messagePort;\n\t\t\tclearTimeout(startTimeout);\n\t\t\tbarrier.open();\n\t\t};\n\n\t\tstartTimeout = setTimeout(() => {\n\t\t\tconsole.warn(\n\t\t\t\t`The Web Worker Extension Host did not start in 60s, that might be a problem.`,\n\t\t\t);\n\t\t}, 60000);\n\n\t\tthis._register(\n\t\t\tdom.addDisposableListener(mainWindow, \"message\", (event) => {\n\t\t\t\tif (event.source !== iframe.contentWindow) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tevent.data.vscodeWebWorkerExtHostId !==\n\t\t\t\t\tvscodeWebWorkerExtHostId\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (event.data.error) {\n\t\t\t\t\tconst { name, message, stack } = event.data.error;\n\t\t\t\t\tconst err = new Error();\n\t\t\t\t\terr.message = message;\n\t\t\t\t\terr.name = name;\n\t\t\t\t\terr.stack = stack;\n\t\t\t\t\treturn rejectBarrier(\n\t\t\t\t\t\tExtensionHostExitCode.UnexpectedError,\n\t\t\t\t\t\terr,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (event.data.type === \"vscode.bootstrap.nls\") {\n\t\t\t\t\tconst factoryModuleId = \"vs/base/worker/workerMain.js\";\n\t\t\t\t\tconst baseUrl = isESM\n\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t: require\n\t\t\t\t\t\t\t\t.toUrl(factoryModuleId)\n\t\t\t\t\t\t\t\t.slice(0, -factoryModuleId.length);\n\t\t\t\t\tiframe.contentWindow!.postMessage(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: event.data.type,\n\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\tbaseUrl,\n\t\t\t\t\t\t\t\tworkerUrl: isESM\n\t\t\t\t\t\t\t\t\t? FileAccess.asBrowserUri(\n\t\t\t\t\t\t\t\t\t\t\t\"vs/workbench/api/worker/extensionHostWorker.esm.js\",\n\t\t\t\t\t\t\t\t\t\t).toString(true)\n\t\t\t\t\t\t\t\t\t: require.toUrl(factoryModuleId),\n\t\t\t\t\t\t\t\tfileRoot: globalThis._VSCODE_FILE_ROOT,\n\t\t\t\t\t\t\t\tnls: {\n\t\t\t\t\t\t\t\t\tmessages: getNLSMessages(),\n\t\t\t\t\t\t\t\t\tlanguage: getNLSLanguage(),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"*\",\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst { data } = event.data;\n\t\t\t\tif (barrier.isOpen() || !(data instanceof MessagePort)) {\n\t\t\t\t\tconsole.warn(\"UNEXPECTED message\", event);\n\t\t\t\t\tconst err = new Error(\"UNEXPECTED message\");\n\t\t\t\t\treturn rejectBarrier(\n\t\t\t\t\t\tExtensionHostExitCode.UnexpectedError,\n\t\t\t\t\t\terr,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tresolveBarrier(data);\n\t\t\t}),\n\t\t);\n\n\t\tthis._layoutService.mainContainer.appendChild(iframe);\n\t\tthis._register(toDisposable(() => iframe.remove()));\n\n\t\t// await MessagePort and use it to directly communicate\n\t\t// with the worker extension host\n\t\tawait barrier.wait();\n\n\t\tif (barrierHasError) {\n\t\t\tthrow barrierError;\n\t\t}\n\n\t\t// Send over message ports for extension API\n\t\tconst messagePorts =\n\t\t\tthis._environmentService.options?.messagePorts ?? new Map();\n\t\tiframe.contentWindow!.postMessage(\n\t\t\t{ type: \"vscode.init\", data: messagePorts },\n\t\t\t\"*\",\n\t\t\t[...messagePorts.values()],\n\t\t);\n\n\t\tport.onmessage = (event) => {\n\t\t\tconst { data } = event;\n\t\t\tif (!(data instanceof ArrayBuffer)) {\n\t\t\t\tconsole.warn(\"UNKNOWN data received\", data);\n\t\t\t\tthis._onDidExit.fire([77, \"UNKNOWN data received\"]);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\temitter.fire(\n\t\t\t\tVSBuffer.wrap(new Uint8Array(data, 0, data.byteLength)),\n\t\t\t);\n\t\t};\n\n\t\tconst protocol: IMessagePassingProtocol = {\n\t\t\tonMessage: emitter.event,\n\t\t\tsend: (vsbuf) => {\n\t\t\t\tconst data = vsbuf.buffer.buffer.slice(\n\t\t\t\t\tvsbuf.buffer.byteOffset,\n\t\t\t\t\tvsbuf.buffer.byteOffset + vsbuf.buffer.byteLength,\n\t\t\t\t);\n\t\t\t\tport.postMessage(data, [data]);\n\t\t\t},\n\t\t};\n\n\t\treturn this._performHandshake(protocol);\n\t}\n\n\tprivate async _performHandshake(\n\t\tprotocol: IMessagePassingProtocol,\n\t): Promise<IMessagePassingProtocol> {\n\t\t// extension host handshake happens below\n\t\t// (1) <== wait for: Ready\n\t\t// (2) ==> send: init data\n\t\t// (3) <== wait for: Initialized\n\n\t\tawait Event.toPromise(\n\t\t\tEvent.filter(protocol.onMessage, (msg) =>\n\t\t\t\tisMessageOfType(msg, MessageType.Ready),\n\t\t\t),\n\t\t);\n\t\tif (this._isTerminating) {\n\t\t\tthrow canceled();\n\t\t}\n\t\tprotocol.send(\n\t\t\tVSBuffer.fromString(\n\t\t\t\tJSON.stringify(await this._createExtHostInitData()),\n\t\t\t),\n\t\t);\n\t\tif (this._isTerminating) {\n\t\t\tthrow canceled();\n\t\t}\n\t\tawait Event.toPromise(\n\t\t\tEvent.filter(protocol.onMessage, (msg) =>\n\t\t\t\tisMessageOfType(msg, MessageType.Initialized),\n\t\t\t),\n\t\t);\n\t\tif (this._isTerminating) {\n\t\t\tthrow canceled();\n\t\t}\n\n\t\treturn protocol;\n\t}\n\n\tpublic override dispose(): void {\n\t\tif (this._isTerminating) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isTerminating = true;\n\t\tthis._protocol?.send(createMessageOfType(MessageType.Terminate));\n\t\tsuper.dispose();\n\t}\n\n\tgetInspectPort(): undefined {\n\t\treturn undefined;\n\t}\n\n\tenableInspectPort(): Promise<boolean> {\n\t\treturn Promise.resolve(false);\n\t}\n\n\tprivate async _createExtHostInitData(): Promise<IExtensionHostInitData> {\n\t\tconst initData = await this._initDataProvider.getInitData();\n\t\tthis.extensions = initData.extensions;\n\t\tconst workspace = this._contextService.getWorkspace();\n\t\tconst nlsBaseUrl = this._productService.extensionsGallery?.nlsBaseUrl;\n\t\tlet nlsUrlWithDetails: URI | undefined;\n\t\t// Only use the nlsBaseUrl if we are using a language other than the default, English.\n\t\tif (\n\t\t\tnlsBaseUrl &&\n\t\t\tthis._productService.commit &&\n\t\t\t!platform.Language.isDefaultVariant()\n\t\t) {\n\t\t\tnlsUrlWithDetails = URI.joinPath(\n\t\t\t\tURI.parse(nlsBaseUrl),\n\t\t\t\tthis._productService.commit,\n\t\t\t\tthis._productService.version,\n\t\t\t\tplatform.Language.value(),\n\t\t\t);\n\t\t}\n\t\treturn {\n\t\t\tcommit: this._productService.commit,\n\t\t\tversion: this._productService.version,\n\t\t\tquality: this._productService.quality,\n\t\t\tparentPid: 0,\n\t\t\tenvironment: {\n\t\t\t\tisExtensionDevelopmentDebug:\n\t\t\t\t\tthis._environmentService.debugRenderer,\n\t\t\t\tappName: this._productService.nameLong,\n\t\t\t\tappHost:\n\t\t\t\t\tthis._productService.embedderIdentifier ??\n\t\t\t\t\t(platform.isWeb ? \"web\" : \"desktop\"),\n\t\t\t\tappUriScheme: this._productService.urlProtocol,\n\t\t\t\tappLanguage: platform.language,\n\t\t\t\textensionTelemetryLogResource:\n\t\t\t\t\tthis._environmentService.extHostTelemetryLogFile,\n\t\t\t\tisExtensionTelemetryLoggingOnly: isLoggingOnly(\n\t\t\t\t\tthis._productService,\n\t\t\t\t\tthis._environmentService,\n\t\t\t\t),\n\t\t\t\textensionDevelopmentLocationURI:\n\t\t\t\t\tthis._environmentService.extensionDevelopmentLocationURI,\n\t\t\t\textensionTestsLocationURI:\n\t\t\t\t\tthis._environmentService.extensionTestsLocationURI,\n\t\t\t\tglobalStorageHome:\n\t\t\t\t\tthis._userDataProfilesService.defaultProfile\n\t\t\t\t\t\t.globalStorageHome,\n\t\t\t\tworkspaceStorageHome:\n\t\t\t\t\tthis._environmentService.workspaceStorageHome,\n\t\t\t\textensionLogLevel: this._environmentService.extensionLogLevel,\n\t\t\t},\n\t\t\tworkspace:\n\t\t\t\tthis._contextService.getWorkbenchState() ===\n\t\t\t\tWorkbenchState.EMPTY\n\t\t\t\t\t? undefined\n\t\t\t\t\t: {\n\t\t\t\t\t\t\tconfiguration: workspace.configuration || undefined,\n\t\t\t\t\t\t\tid: workspace.id,\n\t\t\t\t\t\t\tname: this._labelService.getWorkspaceLabel(\n\t\t\t\t\t\t\t\tworkspace,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ttransient: workspace.transient,\n\t\t\t\t\t\t},\n\t\t\tconsoleForward: {\n\t\t\t\tincludeStack: false,\n\t\t\t\tlogNative: this._environmentService.debugRenderer,\n\t\t\t},\n\t\t\textensions: this.extensions.toSnapshot(),\n\t\t\tnlsBaseUrl: nlsUrlWithDetails,\n\t\t\ttelemetryInfo: {\n\t\t\t\tsessionId: this._telemetryService.sessionId,\n\t\t\t\tmachineId: this._telemetryService.machineId,\n\t\t\t\tsqmId: this._telemetryService.sqmId,\n\t\t\t\tdevDeviceId: this._telemetryService.devDeviceId,\n\t\t\t\tfirstSessionDate: this._telemetryService.firstSessionDate,\n\t\t\t\tmsftInternal: this._telemetryService.msftInternal,\n\t\t\t},\n\t\t\tlogLevel: this._logService.getLevel(),\n\t\t\tloggers: [...this._loggerService.getRegisteredLoggers()],\n\t\t\tlogsLocation: this._extensionHostLogsLocation,\n\t\t\tautoStart: this.startup === ExtensionHostStartup.EagerAutoStart,\n\t\t\tremote: {\n\t\t\t\tauthority: this._environmentService.remoteAuthority,\n\t\t\t\tconnectionData: null,\n\t\t\t\tisRemote: false,\n\t\t\t},\n\t\t\tuiKind: platform.isWeb ? UIKind.Web : UIKind.Desktop,\n\t\t};\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
