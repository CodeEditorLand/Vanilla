{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/extensions/browser/webWorkerExtensionHost.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { parentOriginHash } from '../../../../base/browser/iframe.js';\nimport { mainWindow } from '../../../../base/browser/window.js';\nimport { isESM } from '../../../../base/common/amd.js';\nimport { Barrier } from '../../../../base/common/async.js';\nimport { VSBuffer } from '../../../../base/common/buffer.js';\nimport { canceled, onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { AppResourcePath, COI, FileAccess } from '../../../../base/common/network.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { joinPath } from '../../../../base/common/resources.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { generateUuid } from '../../../../base/common/uuid.js';\nimport { IMessagePassingProtocol } from '../../../../base/parts/ipc/common/ipc.js';\nimport { getNLSLanguage, getNLSMessages } from '../../../../nls.js';\nimport { ILabelService } from '../../../../platform/label/common/label.js';\nimport { ILayoutService } from '../../../../platform/layout/browser/layoutService.js';\nimport { ILogService, ILoggerService } from '../../../../platform/log/common/log.js';\nimport { IProductService } from '../../../../platform/product/common/productService.js';\nimport { IStorageService, StorageScope, StorageTarget } from '../../../../platform/storage/common/storage.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { isLoggingOnly } from '../../../../platform/telemetry/common/telemetryUtils.js';\nimport { IUserDataProfilesService } from '../../../../platform/userDataProfile/common/userDataProfile.js';\nimport { IWorkspaceContextService, WorkbenchState } from '../../../../platform/workspace/common/workspace.js';\nimport { IBrowserWorkbenchEnvironmentService } from '../../environment/browser/environmentService.js';\nimport { ExtensionHostExitCode, IExtensionHostInitData, MessageType, UIKind, createMessageOfType, isMessageOfType } from '../common/extensionHostProtocol.js';\nimport { LocalWebWorkerRunningLocation } from '../common/extensionRunningLocation.js';\nimport { ExtensionHostExtensions, ExtensionHostStartup, IExtensionHost } from '../common/extensions.js';\n\nexport interface IWebWorkerExtensionHostInitData {\n\treadonly extensions: ExtensionHostExtensions;\n}\n\nexport interface IWebWorkerExtensionHostDataProvider {\n\tgetInitData(): Promise<IWebWorkerExtensionHostInitData>;\n}\n\nexport class WebWorkerExtensionHost extends Disposable implements IExtensionHost {\n\n\tpublic readonly pid = null;\n\tpublic readonly remoteAuthority = null;\n\tpublic extensions: ExtensionHostExtensions | null = null;\n\n\tprivate readonly _onDidExit = this._register(new Emitter<[number, string | null]>());\n\tpublic readonly onExit: Event<[number, string | null]> = this._onDidExit.event;\n\n\tprivate _isTerminating: boolean;\n\tprivate _protocolPromise: Promise<IMessagePassingProtocol> | null;\n\tprivate _protocol: IMessagePassingProtocol | null;\n\n\tprivate readonly _extensionHostLogsLocation: URI;\n\n\tconstructor(\n\t\tpublic readonly runningLocation: LocalWebWorkerRunningLocation,\n\t\tpublic readonly startup: ExtensionHostStartup,\n\t\tprivate readonly _initDataProvider: IWebWorkerExtensionHostDataProvider,\n\t\t@ITelemetryService private readonly _telemetryService: ITelemetryService,\n\t\t@IWorkspaceContextService private readonly _contextService: IWorkspaceContextService,\n\t\t@ILabelService private readonly _labelService: ILabelService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@ILoggerService private readonly _loggerService: ILoggerService,\n\t\t@IBrowserWorkbenchEnvironmentService private readonly _environmentService: IBrowserWorkbenchEnvironmentService,\n\t\t@IUserDataProfilesService private readonly _userDataProfilesService: IUserDataProfilesService,\n\t\t@IProductService private readonly _productService: IProductService,\n\t\t@ILayoutService private readonly _layoutService: ILayoutService,\n\t\t@IStorageService private readonly _storageService: IStorageService,\n\t) {\n\t\tsuper();\n\t\tthis._isTerminating = false;\n\t\tthis._protocolPromise = null;\n\t\tthis._protocol = null;\n\t\tthis._extensionHostLogsLocation = joinPath(this._environmentService.extHostLogsPath, 'webWorker');\n\t}\n\n\tprivate async _getWebWorkerExtensionHostIframeSrc(): Promise<string> {\n\t\tconst suffixSearchParams = new URLSearchParams();\n\t\tif (this._environmentService.debugExtensionHost && this._environmentService.debugRenderer) {\n\t\t\tsuffixSearchParams.set('debugged', '1');\n\t\t}\n\t\tCOI.addSearchParam(suffixSearchParams, true, true);\n\n\t\tconst suffix = `?${suffixSearchParams.toString()}`;\n\n\t\tconst iframeModulePath: AppResourcePath = `vs/workbench/services/extensions/worker/webWorkerExtensionHostIframe.${isESM ? 'esm.' : ''}html`;\n\t\tif (platform.isWeb) {\n\t\t\tconst webEndpointUrlTemplate = this._productService.webEndpointUrlTemplate;\n\t\t\tconst commit = this._productService.commit;\n\t\t\tconst quality = this._productService.quality;\n\t\t\tif (webEndpointUrlTemplate && commit && quality) {\n\t\t\t\t// Try to keep the web worker extension host iframe origin stable by storing it in workspace storage\n\t\t\t\tconst key = 'webWorkerExtensionHostIframeStableOriginUUID';\n\t\t\t\tlet stableOriginUUID = this._storageService.get(key, StorageScope.WORKSPACE);\n\t\t\t\tif (typeof stableOriginUUID === 'undefined') {\n\t\t\t\t\tstableOriginUUID = generateUuid();\n\t\t\t\t\tthis._storageService.store(key, stableOriginUUID, StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\t\t\t}\n\t\t\t\tconst hash = await parentOriginHash(mainWindow.origin, stableOriginUUID);\n\t\t\t\tconst baseUrl = (\n\t\t\t\t\twebEndpointUrlTemplate\n\t\t\t\t\t\t.replace('{{uuid}}', `v--${hash}`) // using `v--` as a marker to require `parentOrigin`/`salt` verification\n\t\t\t\t\t\t.replace('{{commit}}', commit)\n\t\t\t\t\t\t.replace('{{quality}}', quality)\n\t\t\t\t);\n\n\t\t\t\tconst res = new URL(`${baseUrl}/out/${iframeModulePath}${suffix}`);\n\t\t\t\tres.searchParams.set('parentOrigin', mainWindow.origin);\n\t\t\t\tres.searchParams.set('salt', stableOriginUUID);\n\t\t\t\treturn res.toString();\n\t\t\t}\n\n\t\t\tconsole.warn(`The web worker extension host is started in a same-origin iframe!`);\n\t\t}\n\n\t\tconst relativeExtensionHostIframeSrc = FileAccess.asBrowserUri(iframeModulePath);\n\t\treturn `${relativeExtensionHostIframeSrc.toString(true)}${suffix}`;\n\t}\n\n\tpublic async start(): Promise<IMessagePassingProtocol> {\n\t\tif (!this._protocolPromise) {\n\t\t\tthis._protocolPromise = this._startInsideIframe();\n\t\t\tthis._protocolPromise.then(protocol => this._protocol = protocol);\n\t\t}\n\t\treturn this._protocolPromise;\n\t}\n\n\tprivate async _startInsideIframe(): Promise<IMessagePassingProtocol> {\n\t\tconst webWorkerExtensionHostIframeSrc = await this._getWebWorkerExtensionHostIframeSrc();\n\t\tconst emitter = this._register(new Emitter<VSBuffer>());\n\n\t\tconst iframe = document.createElement('iframe');\n\t\tiframe.setAttribute('class', 'web-worker-ext-host-iframe');\n\t\tiframe.setAttribute('sandbox', 'allow-scripts allow-same-origin');\n\t\tiframe.setAttribute('allow', 'usb; serial; hid; cross-origin-isolated;');\n\t\tiframe.setAttribute('aria-hidden', 'true');\n\t\tiframe.style.display = 'none';\n\n\t\tconst vscodeWebWorkerExtHostId = generateUuid();\n\t\tiframe.setAttribute('src', `${webWorkerExtensionHostIframeSrc}&vscodeWebWorkerExtHostId=${vscodeWebWorkerExtHostId}`);\n\n\t\tconst barrier = new Barrier();\n\t\tlet port!: MessagePort;\n\t\tlet barrierError: Error | null = null;\n\t\tlet barrierHasError = false;\n\t\tlet startTimeout: any = null;\n\n\t\tconst rejectBarrier = (exitCode: number, error: Error) => {\n\t\t\tbarrierError = error;\n\t\t\tbarrierHasError = true;\n\t\t\tonUnexpectedError(barrierError);\n\t\t\tclearTimeout(startTimeout);\n\t\t\tthis._onDidExit.fire([ExtensionHostExitCode.UnexpectedError, barrierError.message]);\n\t\t\tbarrier.open();\n\t\t};\n\n\t\tconst resolveBarrier = (messagePort: MessagePort) => {\n\t\t\tport = messagePort;\n\t\t\tclearTimeout(startTimeout);\n\t\t\tbarrier.open();\n\t\t};\n\n\t\tstartTimeout = setTimeout(() => {\n\t\t\tconsole.warn(`The Web Worker Extension Host did not start in 60s, that might be a problem.`);\n\t\t}, 60000);\n\n\t\tthis._register(dom.addDisposableListener(mainWindow, 'message', (event) => {\n\t\t\tif (event.source !== iframe.contentWindow) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (event.data.vscodeWebWorkerExtHostId !== vscodeWebWorkerExtHostId) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (event.data.error) {\n\t\t\t\tconst { name, message, stack } = event.data.error;\n\t\t\t\tconst err = new Error();\n\t\t\t\terr.message = message;\n\t\t\t\terr.name = name;\n\t\t\t\terr.stack = stack;\n\t\t\t\treturn rejectBarrier(ExtensionHostExitCode.UnexpectedError, err);\n\t\t\t}\n\t\t\tif (event.data.type === 'vscode.bootstrap.nls') {\n\t\t\t\tconst factoryModuleId = 'vs/base/worker/workerMain.js';\n\t\t\t\tconst baseUrl = isESM ? undefined : require.toUrl(factoryModuleId).slice(0, -factoryModuleId.length);\n\t\t\t\tiframe.contentWindow!.postMessage({\n\t\t\t\t\ttype: event.data.type,\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tbaseUrl,\n\t\t\t\t\t\tworkerUrl: isESM ? FileAccess.asBrowserUri('vs/workbench/api/worker/extensionHostWorker.esm.js').toString(true) : require.toUrl(factoryModuleId),\n\t\t\t\t\t\tfileRoot: globalThis._VSCODE_FILE_ROOT,\n\t\t\t\t\t\tnls: {\n\t\t\t\t\t\t\tmessages: getNLSMessages(),\n\t\t\t\t\t\t\tlanguage: getNLSLanguage()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, '*');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst { data } = event.data;\n\t\t\tif (barrier.isOpen() || !(data instanceof MessagePort)) {\n\t\t\t\tconsole.warn('UNEXPECTED message', event);\n\t\t\t\tconst err = new Error('UNEXPECTED message');\n\t\t\t\treturn rejectBarrier(ExtensionHostExitCode.UnexpectedError, err);\n\t\t\t}\n\t\t\tresolveBarrier(data);\n\t\t}));\n\n\t\tthis._layoutService.mainContainer.appendChild(iframe);\n\t\tthis._register(toDisposable(() => iframe.remove()));\n\n\t\t// await MessagePort and use it to directly communicate\n\t\t// with the worker extension host\n\t\tawait barrier.wait();\n\n\t\tif (barrierHasError) {\n\t\t\tthrow barrierError;\n\t\t}\n\n\t\t// Send over message ports for extension API\n\t\tconst messagePorts = this._environmentService.options?.messagePorts ?? new Map();\n\t\tiframe.contentWindow!.postMessage({ type: 'vscode.init', data: messagePorts }, '*', [...messagePorts.values()]);\n\n\t\tport.onmessage = (event) => {\n\t\t\tconst { data } = event;\n\t\t\tif (!(data instanceof ArrayBuffer)) {\n\t\t\t\tconsole.warn('UNKNOWN data received', data);\n\t\t\t\tthis._onDidExit.fire([77, 'UNKNOWN data received']);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\temitter.fire(VSBuffer.wrap(new Uint8Array(data, 0, data.byteLength)));\n\t\t};\n\n\t\tconst protocol: IMessagePassingProtocol = {\n\t\t\tonMessage: emitter.event,\n\t\t\tsend: vsbuf => {\n\t\t\t\tconst data = vsbuf.buffer.buffer.slice(vsbuf.buffer.byteOffset, vsbuf.buffer.byteOffset + vsbuf.buffer.byteLength);\n\t\t\t\tport.postMessage(data, [data]);\n\t\t\t}\n\t\t};\n\n\t\treturn this._performHandshake(protocol);\n\t}\n\n\tprivate async _performHandshake(protocol: IMessagePassingProtocol): Promise<IMessagePassingProtocol> {\n\t\t// extension host handshake happens below\n\t\t// (1) <== wait for: Ready\n\t\t// (2) ==> send: init data\n\t\t// (3) <== wait for: Initialized\n\n\t\tawait Event.toPromise(Event.filter(protocol.onMessage, msg => isMessageOfType(msg, MessageType.Ready)));\n\t\tif (this._isTerminating) {\n\t\t\tthrow canceled();\n\t\t}\n\t\tprotocol.send(VSBuffer.fromString(JSON.stringify(await this._createExtHostInitData())));\n\t\tif (this._isTerminating) {\n\t\t\tthrow canceled();\n\t\t}\n\t\tawait Event.toPromise(Event.filter(protocol.onMessage, msg => isMessageOfType(msg, MessageType.Initialized)));\n\t\tif (this._isTerminating) {\n\t\t\tthrow canceled();\n\t\t}\n\n\t\treturn protocol;\n\t}\n\n\tpublic override dispose(): void {\n\t\tif (this._isTerminating) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isTerminating = true;\n\t\tthis._protocol?.send(createMessageOfType(MessageType.Terminate));\n\t\tsuper.dispose();\n\t}\n\n\tgetInspectPort(): undefined {\n\t\treturn undefined;\n\t}\n\n\tenableInspectPort(): Promise<boolean> {\n\t\treturn Promise.resolve(false);\n\t}\n\n\tprivate async _createExtHostInitData(): Promise<IExtensionHostInitData> {\n\t\tconst initData = await this._initDataProvider.getInitData();\n\t\tthis.extensions = initData.extensions;\n\t\tconst workspace = this._contextService.getWorkspace();\n\t\tconst nlsBaseUrl = this._productService.extensionsGallery?.nlsBaseUrl;\n\t\tlet nlsUrlWithDetails: URI | undefined = undefined;\n\t\t// Only use the nlsBaseUrl if we are using a language other than the default, English.\n\t\tif (nlsBaseUrl && this._productService.commit && !platform.Language.isDefaultVariant()) {\n\t\t\tnlsUrlWithDetails = URI.joinPath(URI.parse(nlsBaseUrl), this._productService.commit, this._productService.version, platform.Language.value());\n\t\t}\n\t\treturn {\n\t\t\tcommit: this._productService.commit,\n\t\t\tversion: this._productService.version,\n\t\t\tquality: this._productService.quality,\n\t\t\tparentPid: 0,\n\t\t\tenvironment: {\n\t\t\t\tisExtensionDevelopmentDebug: this._environmentService.debugRenderer,\n\t\t\t\tappName: this._productService.nameLong,\n\t\t\t\tappHost: this._productService.embedderIdentifier ?? (platform.isWeb ? 'web' : 'desktop'),\n\t\t\t\tappUriScheme: this._productService.urlProtocol,\n\t\t\t\tappLanguage: platform.language,\n\t\t\t\textensionTelemetryLogResource: this._environmentService.extHostTelemetryLogFile,\n\t\t\t\tisExtensionTelemetryLoggingOnly: isLoggingOnly(this._productService, this._environmentService),\n\t\t\t\textensionDevelopmentLocationURI: this._environmentService.extensionDevelopmentLocationURI,\n\t\t\t\textensionTestsLocationURI: this._environmentService.extensionTestsLocationURI,\n\t\t\t\tglobalStorageHome: this._userDataProfilesService.defaultProfile.globalStorageHome,\n\t\t\t\tworkspaceStorageHome: this._environmentService.workspaceStorageHome,\n\t\t\t\textensionLogLevel: this._environmentService.extensionLogLevel\n\t\t\t},\n\t\t\tworkspace: this._contextService.getWorkbenchState() === WorkbenchState.EMPTY ? undefined : {\n\t\t\t\tconfiguration: workspace.configuration || undefined,\n\t\t\t\tid: workspace.id,\n\t\t\t\tname: this._labelService.getWorkspaceLabel(workspace),\n\t\t\t\ttransient: workspace.transient\n\t\t\t},\n\t\t\tconsoleForward: {\n\t\t\t\tincludeStack: false,\n\t\t\t\tlogNative: this._environmentService.debugRenderer\n\t\t\t},\n\t\t\textensions: this.extensions.toSnapshot(),\n\t\t\tnlsBaseUrl: nlsUrlWithDetails,\n\t\t\ttelemetryInfo: {\n\t\t\t\tsessionId: this._telemetryService.sessionId,\n\t\t\t\tmachineId: this._telemetryService.machineId,\n\t\t\t\tsqmId: this._telemetryService.sqmId,\n\t\t\t\tdevDeviceId: this._telemetryService.devDeviceId,\n\t\t\t\tfirstSessionDate: this._telemetryService.firstSessionDate,\n\t\t\t\tmsftInternal: this._telemetryService.msftInternal\n\t\t\t},\n\t\t\tlogLevel: this._logService.getLevel(),\n\t\t\tloggers: [...this._loggerService.getRegisteredLoggers()],\n\t\t\tlogsLocation: this._extensionHostLogsLocation,\n\t\t\tautoStart: (this.startup === ExtensionHostStartup.EagerAutoStart),\n\t\t\tremote: {\n\t\t\t\tauthority: this._environmentService.remoteAuthority,\n\t\t\t\tconnectionData: null,\n\t\t\t\tisRemote: false\n\t\t\t},\n\t\t\tuiKind: platform.isWeb ? UIKind.Web : UIKind.Desktop\n\t\t};\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
