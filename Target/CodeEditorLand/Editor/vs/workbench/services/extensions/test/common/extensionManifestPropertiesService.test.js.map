{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/extensions/test/common/extensionManifestPropertiesService.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { isWeb } from '../../../../../base/common/platform.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { TestConfigurationService } from '../../../../../platform/configuration/test/common/testConfigurationService.js';\nimport { ExtensionUntrustedWorkspaceSupportType, IExtensionManifest } from '../../../../../platform/extensions/common/extensions.js';\nimport { TestInstantiationService } from '../../../../../platform/instantiation/test/common/instantiationServiceMock.js';\nimport { NullLogService } from '../../../../../platform/log/common/log.js';\nimport { IProductService } from '../../../../../platform/product/common/productService.js';\nimport { IWorkspaceTrustEnablementService } from '../../../../../platform/workspace/common/workspaceTrust.js';\nimport { ExtensionManifestPropertiesService } from '../../common/extensionManifestPropertiesService.js';\nimport { TestProductService, TestWorkspaceTrustEnablementService } from '../../../../test/common/workbenchTestServices.js';\n\nsuite('ExtensionManifestPropertiesService - ExtensionKind', () => {\n\n\tlet disposables: DisposableStore;\n\tlet testObject: ExtensionManifestPropertiesService;\n\n\tsetup(() => {\n\t\tdisposables = new DisposableStore();\n\t\ttestObject = disposables.add(new ExtensionManifestPropertiesService(TestProductService, new TestConfigurationService(), new TestWorkspaceTrustEnablementService(), new NullLogService()));\n\t});\n\n\tteardown(() => {\n\t\tdisposables.dispose();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('declarative with extension dependencies', () => {\n\t\tassert.deepStrictEqual(testObject.getExtensionKind(<IExtensionManifest>{ extensionDependencies: ['ext1'] }), isWeb ? ['workspace', 'web'] : ['workspace']);\n\t});\n\n\ttest('declarative extension pack', () => {\n\t\tassert.deepStrictEqual(testObject.getExtensionKind(<IExtensionManifest>{ extensionPack: ['ext1', 'ext2'] }), isWeb ? ['workspace', 'web'] : ['workspace']);\n\t});\n\n\ttest('declarative extension pack and extension dependencies', () => {\n\t\tassert.deepStrictEqual(testObject.getExtensionKind(<IExtensionManifest>{ extensionPack: ['ext1', 'ext2'], extensionDependencies: ['ext1', 'ext2'] }), isWeb ? ['workspace', 'web'] : ['workspace']);\n\t});\n\n\ttest('declarative with unknown contribution point => workspace, web in web and => workspace in desktop', () => {\n\t\tassert.deepStrictEqual(testObject.getExtensionKind(<IExtensionManifest>{ contributes: <any>{ 'unknownPoint': { something: true } } }), isWeb ? ['workspace', 'web'] : ['workspace']);\n\t});\n\n\ttest('declarative extension pack with unknown contribution point', () => {\n\t\tassert.deepStrictEqual(testObject.getExtensionKind(<IExtensionManifest>{ extensionPack: ['ext1', 'ext2'], contributes: <any>{ 'unknownPoint': { something: true } } }), isWeb ? ['workspace', 'web'] : ['workspace']);\n\t});\n\n\ttest('simple declarative => ui, workspace, web', () => {\n\t\tassert.deepStrictEqual(testObject.getExtensionKind(<IExtensionManifest>{}), ['ui', 'workspace', 'web']);\n\t});\n\n\ttest('only browser => web', () => {\n\t\tassert.deepStrictEqual(testObject.getExtensionKind(<IExtensionManifest>{ browser: 'main.browser.js' }), ['web']);\n\t});\n\n\ttest('only main => workspace', () => {\n\t\tassert.deepStrictEqual(testObject.getExtensionKind(<IExtensionManifest>{ main: 'main.js' }), ['workspace']);\n\t});\n\n\ttest('main and browser => workspace, web in web and workspace in desktop', () => {\n\t\tassert.deepStrictEqual(testObject.getExtensionKind(<IExtensionManifest>{ main: 'main.js', browser: 'main.browser.js' }), isWeb ? ['workspace', 'web'] : ['workspace']);\n\t});\n\n\ttest('browser entry point with workspace extensionKind => workspace, web in web and workspace in desktop', () => {\n\t\tassert.deepStrictEqual(testObject.getExtensionKind(<IExtensionManifest>{ main: 'main.js', browser: 'main.browser.js', extensionKind: ['workspace'] }), isWeb ? ['workspace', 'web'] : ['workspace']);\n\t});\n\n\ttest('only browser entry point with out extensionKind => web', () => {\n\t\tassert.deepStrictEqual(testObject.getExtensionKind(<IExtensionManifest>{ browser: 'main.browser.js' }), ['web']);\n\t});\n\n\ttest('simple descriptive with workspace, ui extensionKind => workspace, ui, web in web and workspace, ui in desktop', () => {\n\t\tassert.deepStrictEqual(testObject.getExtensionKind(<IExtensionManifest>{ extensionKind: ['workspace', 'ui'] }), isWeb ? ['workspace', 'ui', 'web'] : ['workspace', 'ui']);\n\t});\n\n\ttest('opt out from web through settings even if it can run in web', () => {\n\t\ttestObject = disposables.add(new ExtensionManifestPropertiesService(TestProductService, new TestConfigurationService({ remote: { extensionKind: { 'pub.a': ['-web'] } } }), new TestWorkspaceTrustEnablementService(), new NullLogService()));\n\t\tassert.deepStrictEqual(testObject.getExtensionKind(<IExtensionManifest>{ browser: 'main.browser.js', publisher: 'pub', name: 'a' }), ['ui', 'workspace']);\n\t});\n\n\ttest('opt out from web and include only workspace through settings even if it can run in web', () => {\n\t\ttestObject = disposables.add(new ExtensionManifestPropertiesService(TestProductService, new TestConfigurationService({ remote: { extensionKind: { 'pub.a': ['-web', 'workspace'] } } }), new TestWorkspaceTrustEnablementService(), new NullLogService()));\n\t\tassert.deepStrictEqual(testObject.getExtensionKind(<IExtensionManifest>{ browser: 'main.browser.js', publisher: 'pub', name: 'a' }), ['workspace']);\n\t});\n\n\ttest('extension cannot opt out from web', () => {\n\t\tassert.deepStrictEqual(testObject.getExtensionKind(<any>{ browser: 'main.browser.js', extensionKind: ['-web'] }), ['web']);\n\t});\n\n\ttest('extension cannot opt into web', () => {\n\t\tassert.deepStrictEqual(testObject.getExtensionKind(<any>{ main: 'main.js', extensionKind: ['web', 'workspace', 'ui'] }), ['workspace', 'ui']);\n\t});\n\n\ttest('extension cannot opt into web only', () => {\n\t\tassert.deepStrictEqual(testObject.getExtensionKind(<any>{ main: 'main.js', extensionKind: ['web'] }), ['workspace']);\n\t});\n});\n\n\n// Workspace Trust is disabled in web at the moment\nif (!isWeb) {\n\tsuite('ExtensionManifestPropertiesService - ExtensionUntrustedWorkspaceSupportType', () => {\n\t\tlet testObject: ExtensionManifestPropertiesService;\n\t\tlet instantiationService: TestInstantiationService;\n\t\tlet testConfigurationService: TestConfigurationService;\n\n\t\tsetup(async () => {\n\t\t\tinstantiationService = new TestInstantiationService();\n\n\t\t\ttestConfigurationService = new TestConfigurationService();\n\t\t\tinstantiationService.stub(IConfigurationService, testConfigurationService);\n\t\t});\n\n\t\tteardown(() => {\n\t\t\ttestObject.dispose();\n\t\t\tinstantiationService.dispose();\n\t\t});\n\n\t\tfunction assertUntrustedWorkspaceSupport(extensionManifest: IExtensionManifest, expected: ExtensionUntrustedWorkspaceSupportType): void {\n\t\t\ttestObject = instantiationService.createInstance(ExtensionManifestPropertiesService);\n\t\t\tconst untrustedWorkspaceSupport = testObject.getExtensionUntrustedWorkspaceSupportType(extensionManifest);\n\n\t\t\tassert.strictEqual(untrustedWorkspaceSupport, expected);\n\t\t}\n\n\t\tfunction getExtensionManifest(properties: any = {}): IExtensionManifest {\n\t\t\treturn Object.create({ name: 'a', publisher: 'pub', version: '1.0.0', ...properties }) as IExtensionManifest;\n\t\t}\n\n\t\ttest('test extension workspace trust request when main entry point is missing', () => {\n\t\t\tinstantiationService.stub(IProductService, {});\n\t\t\tinstantiationService.stub(IWorkspaceTrustEnablementService, new TestWorkspaceTrustEnablementService());\n\n\t\t\tconst extensionManifest = getExtensionManifest();\n\t\t\tassertUntrustedWorkspaceSupport(extensionManifest, true);\n\t\t});\n\n\t\ttest('test extension workspace trust request when workspace trust is disabled', async () => {\n\t\t\tinstantiationService.stub(IProductService, {});\n\t\t\tinstantiationService.stub(IWorkspaceTrustEnablementService, new TestWorkspaceTrustEnablementService(false));\n\n\t\t\tconst extensionManifest = getExtensionManifest({ main: './out/extension.js' });\n\t\t\tassertUntrustedWorkspaceSupport(extensionManifest, true);\n\t\t});\n\n\t\ttest('test extension workspace trust request when \"true\" override exists in settings.json', async () => {\n\t\t\tinstantiationService.stub(IProductService, {});\n\t\t\tinstantiationService.stub(IWorkspaceTrustEnablementService, new TestWorkspaceTrustEnablementService());\n\n\t\t\tawait testConfigurationService.setUserConfiguration('extensions', { supportUntrustedWorkspaces: { 'pub.a': { supported: true } } });\n\t\t\tconst extensionManifest = getExtensionManifest({ main: './out/extension.js', capabilities: { untrustedWorkspaces: { supported: 'limited' } } });\n\t\t\tassertUntrustedWorkspaceSupport(extensionManifest, true);\n\t\t});\n\n\t\ttest('test extension workspace trust request when override (false) exists in settings.json', async () => {\n\t\t\tinstantiationService.stub(IProductService, {});\n\t\t\tinstantiationService.stub(IWorkspaceTrustEnablementService, new TestWorkspaceTrustEnablementService());\n\n\t\t\tawait testConfigurationService.setUserConfiguration('extensions', { supportUntrustedWorkspaces: { 'pub.a': { supported: false } } });\n\t\t\tconst extensionManifest = getExtensionManifest({ main: './out/extension.js', capabilities: { untrustedWorkspaces: { supported: 'limited' } } });\n\t\t\tassertUntrustedWorkspaceSupport(extensionManifest, false);\n\t\t});\n\n\t\ttest('test extension workspace trust request when override (true) for the version exists in settings.json', async () => {\n\t\t\tinstantiationService.stub(IProductService, {});\n\t\t\tinstantiationService.stub(IWorkspaceTrustEnablementService, new TestWorkspaceTrustEnablementService());\n\n\t\t\tawait testConfigurationService.setUserConfiguration('extensions', { supportUntrustedWorkspaces: { 'pub.a': { supported: true, version: '1.0.0' } } });\n\t\t\tconst extensionManifest = getExtensionManifest({ main: './out/extension.js', capabilities: { untrustedWorkspaces: { supported: 'limited' } } });\n\t\t\tassertUntrustedWorkspaceSupport(extensionManifest, true);\n\t\t});\n\n\t\ttest('test extension workspace trust request when override (false) for the version exists in settings.json', async () => {\n\t\t\tinstantiationService.stub(IProductService, {});\n\t\t\tinstantiationService.stub(IWorkspaceTrustEnablementService, new TestWorkspaceTrustEnablementService());\n\n\t\t\tawait testConfigurationService.setUserConfiguration('extensions', { supportUntrustedWorkspaces: { 'pub.a': { supported: false, version: '1.0.0' } } });\n\t\t\tconst extensionManifest = getExtensionManifest({ main: './out/extension.js', capabilities: { untrustedWorkspaces: { supported: 'limited' } } });\n\t\t\tassertUntrustedWorkspaceSupport(extensionManifest, false);\n\t\t});\n\n\t\ttest('test extension workspace trust request when override for a different version exists in settings.json', async () => {\n\t\t\tinstantiationService.stub(IProductService, {});\n\t\t\tinstantiationService.stub(IWorkspaceTrustEnablementService, new TestWorkspaceTrustEnablementService());\n\n\t\t\tawait testConfigurationService.setUserConfiguration('extensions', { supportUntrustedWorkspaces: { 'pub.a': { supported: true, version: '2.0.0' } } });\n\t\t\tconst extensionManifest = getExtensionManifest({ main: './out/extension.js', capabilities: { untrustedWorkspaces: { supported: 'limited' } } });\n\t\t\tassertUntrustedWorkspaceSupport(extensionManifest, 'limited');\n\t\t});\n\n\t\ttest('test extension workspace trust request when default (true) exists in product.json', () => {\n\t\t\tinstantiationService.stub(IProductService, { extensionUntrustedWorkspaceSupport: { 'pub.a': { default: true } } });\n\t\t\tinstantiationService.stub(IWorkspaceTrustEnablementService, new TestWorkspaceTrustEnablementService());\n\n\t\t\tconst extensionManifest = getExtensionManifest({ main: './out/extension.js' });\n\t\t\tassertUntrustedWorkspaceSupport(extensionManifest, true);\n\t\t});\n\n\t\ttest('test extension workspace trust request when default (false) exists in product.json', () => {\n\t\t\tinstantiationService.stub(IProductService, { extensionUntrustedWorkspaceSupport: { 'pub.a': { default: false } } });\n\t\t\tinstantiationService.stub(IWorkspaceTrustEnablementService, new TestWorkspaceTrustEnablementService());\n\n\t\t\tconst extensionManifest = getExtensionManifest({ main: './out/extension.js' });\n\t\t\tassertUntrustedWorkspaceSupport(extensionManifest, false);\n\t\t});\n\n\t\ttest('test extension workspace trust request when override (limited) exists in product.json', () => {\n\t\t\tinstantiationService.stub(IProductService, { extensionUntrustedWorkspaceSupport: { 'pub.a': { override: 'limited' } } });\n\t\t\tinstantiationService.stub(IWorkspaceTrustEnablementService, new TestWorkspaceTrustEnablementService());\n\n\t\t\tconst extensionManifest = getExtensionManifest({ main: './out/extension.js', capabilities: { untrustedWorkspaces: { supported: true } } });\n\t\t\tassertUntrustedWorkspaceSupport(extensionManifest, 'limited');\n\t\t});\n\n\t\ttest('test extension workspace trust request when override (false) exists in product.json', () => {\n\t\t\tinstantiationService.stub(IProductService, { extensionUntrustedWorkspaceSupport: { 'pub.a': { override: false } } });\n\t\t\tinstantiationService.stub(IWorkspaceTrustEnablementService, new TestWorkspaceTrustEnablementService());\n\n\t\t\tconst extensionManifest = getExtensionManifest({ main: './out/extension.js', capabilities: { untrustedWorkspaces: { supported: true } } });\n\t\t\tassertUntrustedWorkspaceSupport(extensionManifest, false);\n\t\t});\n\n\t\ttest('test extension workspace trust request when value exists in package.json', () => {\n\t\t\tinstantiationService.stub(IProductService, {});\n\t\t\tinstantiationService.stub(IWorkspaceTrustEnablementService, new TestWorkspaceTrustEnablementService());\n\n\t\t\tconst extensionManifest = getExtensionManifest({ main: './out/extension.js', capabilities: { untrustedWorkspaces: { supported: 'limited' } } });\n\t\t\tassertUntrustedWorkspaceSupport(extensionManifest, 'limited');\n\t\t});\n\n\t\ttest('test extension workspace trust request when no value exists in package.json', () => {\n\t\t\tinstantiationService.stub(IProductService, {});\n\t\t\tinstantiationService.stub(IWorkspaceTrustEnablementService, new TestWorkspaceTrustEnablementService());\n\n\t\t\tconst extensionManifest = getExtensionManifest({ main: './out/extension.js' });\n\t\t\tassertUntrustedWorkspaceSupport(extensionManifest, false);\n\t\t});\n\t});\n}\n"],
  "mappings": "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",
  "names": []
}
