{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/extensions/test/common/rpcProtocol.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { VSBuffer } from '../../../../../base/common/buffer.js';\nimport { CancellationToken, CancellationTokenSource } from '../../../../../base/common/cancellation.js';\nimport { Emitter, Event } from '../../../../../base/common/event.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { IMessagePassingProtocol } from '../../../../../base/parts/ipc/common/ipc.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { ProxyIdentifier, SerializableObjectWithBuffers } from '../../common/proxyIdentifier.js';\nimport { RPCProtocol } from '../../common/rpcProtocol.js';\n\nsuite('RPCProtocol', () => {\n\n\tlet disposables: DisposableStore;\n\n\tclass MessagePassingProtocol implements IMessagePassingProtocol {\n\t\tprivate _pair?: MessagePassingProtocol;\n\n\t\tprivate readonly _onMessage = new Emitter<VSBuffer>();\n\t\tpublic readonly onMessage: Event<VSBuffer> = this._onMessage.event;\n\n\t\tpublic setPair(other: MessagePassingProtocol) {\n\t\t\tthis._pair = other;\n\t\t}\n\n\t\tpublic send(buffer: VSBuffer): void {\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tthis._pair!._onMessage.fire(buffer);\n\t\t\t});\n\t\t}\n\t}\n\n\tlet delegate: (a1: any, a2: any) => any;\n\tlet bProxy: BClass;\n\tclass BClass {\n\t\t$m(a1: any, a2: any): Promise<any> {\n\t\t\treturn Promise.resolve(delegate.call(null, a1, a2));\n\t\t}\n\t}\n\n\tsetup(() => {\n\t\tdisposables = new DisposableStore();\n\n\t\tconst a_protocol = new MessagePassingProtocol();\n\t\tconst b_protocol = new MessagePassingProtocol();\n\t\ta_protocol.setPair(b_protocol);\n\t\tb_protocol.setPair(a_protocol);\n\n\t\tconst A = disposables.add(new RPCProtocol(a_protocol));\n\t\tconst B = disposables.add(new RPCProtocol(b_protocol));\n\n\t\tconst bIdentifier = new ProxyIdentifier<BClass>('bb');\n\t\tconst bInstance = new BClass();\n\t\tB.set(bIdentifier, bInstance);\n\t\tbProxy = A.getProxy(bIdentifier);\n\t});\n\n\tteardown(() => {\n\t\tdisposables.dispose();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('simple call', function (done) {\n\t\tdelegate = (a1: number, a2: number) => a1 + a2;\n\t\tbProxy.$m(4, 1).then((res: number) => {\n\t\t\tassert.strictEqual(res, 5);\n\t\t\tdone(null);\n\t\t}, done);\n\t});\n\n\ttest('simple call without result', function (done) {\n\t\tdelegate = (a1: number, a2: number) => { };\n\t\tbProxy.$m(4, 1).then((res: number) => {\n\t\t\tassert.strictEqual(res, undefined);\n\t\t\tdone(null);\n\t\t}, done);\n\t});\n\n\ttest('passing buffer as argument', function (done) {\n\t\tdelegate = (a1: VSBuffer, a2: number) => {\n\t\t\tassert.ok(a1 instanceof VSBuffer);\n\t\t\treturn a1.buffer[a2];\n\t\t};\n\t\tconst b = VSBuffer.alloc(4);\n\t\tb.buffer[0] = 1;\n\t\tb.buffer[1] = 2;\n\t\tb.buffer[2] = 3;\n\t\tb.buffer[3] = 4;\n\t\tbProxy.$m(b, 2).then((res: number) => {\n\t\t\tassert.strictEqual(res, 3);\n\t\t\tdone(null);\n\t\t}, done);\n\t});\n\n\ttest('returning a buffer', function (done) {\n\t\tdelegate = (a1: number, a2: number) => {\n\t\t\tconst b = VSBuffer.alloc(4);\n\t\t\tb.buffer[0] = 1;\n\t\t\tb.buffer[1] = 2;\n\t\t\tb.buffer[2] = 3;\n\t\t\tb.buffer[3] = 4;\n\t\t\treturn b;\n\t\t};\n\t\tbProxy.$m(4, 1).then((res: VSBuffer) => {\n\t\t\tassert.ok(res instanceof VSBuffer);\n\t\t\tassert.strictEqual(res.buffer[0], 1);\n\t\t\tassert.strictEqual(res.buffer[1], 2);\n\t\t\tassert.strictEqual(res.buffer[2], 3);\n\t\t\tassert.strictEqual(res.buffer[3], 4);\n\t\t\tdone(null);\n\t\t}, done);\n\t});\n\n\ttest('cancelling a call via CancellationToken before', function (done) {\n\t\tdelegate = (a1: number, a2: number) => a1 + a2;\n\t\tconst p = bProxy.$m(4, CancellationToken.Cancelled);\n\t\tp.then((res: number) => {\n\t\t\tassert.fail('should not receive result');\n\t\t}, (err) => {\n\t\t\tassert.ok(true);\n\t\t\tdone(null);\n\t\t});\n\t});\n\n\ttest('passing CancellationToken.None', function (done) {\n\t\tdelegate = (a1: number, token: CancellationToken) => {\n\t\t\tassert.ok(!!token);\n\t\t\treturn a1 + 1;\n\t\t};\n\t\tbProxy.$m(4, CancellationToken.None).then((res: number) => {\n\t\t\tassert.strictEqual(res, 5);\n\t\t\tdone(null);\n\t\t}, done);\n\t});\n\n\ttest('cancelling a call via CancellationToken quickly', function (done) {\n\t\t// this is an implementation which, when cancellation is triggered, will return 7\n\t\tdelegate = (a1: number, token: CancellationToken) => {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tconst disposable = token.onCancellationRequested((e) => {\n\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\tresolve(7);\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\t\tconst tokenSource = new CancellationTokenSource();\n\t\tconst p = bProxy.$m(4, tokenSource.token);\n\t\tp.then((res: number) => {\n\t\t\tassert.strictEqual(res, 7);\n\t\t}, (err) => {\n\t\t\tassert.fail('should not receive error');\n\t\t}).finally(done);\n\t\ttokenSource.cancel();\n\t});\n\n\ttest('throwing an error', function (done) {\n\t\tdelegate = (a1: number, a2: number) => {\n\t\t\tthrow new Error(`nope`);\n\t\t};\n\t\tbProxy.$m(4, 1).then((res) => {\n\t\t\tassert.fail('unexpected');\n\t\t}, (err) => {\n\t\t\tassert.strictEqual(err.message, 'nope');\n\t\t}).finally(done);\n\t});\n\n\ttest('error promise', function (done) {\n\t\tdelegate = (a1: number, a2: number) => {\n\t\t\treturn Promise.reject(undefined);\n\t\t};\n\t\tbProxy.$m(4, 1).then((res) => {\n\t\t\tassert.fail('unexpected');\n\t\t}, (err) => {\n\t\t\tassert.strictEqual(err, undefined);\n\t\t}).finally(done);\n\t});\n\n\ttest('issue #60450: Converting circular structure to JSON', function (done) {\n\t\tdelegate = (a1: number, a2: number) => {\n\t\t\tconst circular = <any>{};\n\t\t\tcircular.self = circular;\n\t\t\treturn circular;\n\t\t};\n\t\tbProxy.$m(4, 1).then((res) => {\n\t\t\tassert.strictEqual(res, null);\n\t\t}, (err) => {\n\t\t\tassert.fail('unexpected');\n\t\t}).finally(done);\n\t});\n\n\ttest('issue #72798: null errors are hard to digest', function (done) {\n\t\tdelegate = (a1: number, a2: number) => {\n\t\t\t// eslint-disable-next-line no-throw-literal\n\t\t\tthrow { 'what': 'what' };\n\t\t};\n\t\tbProxy.$m(4, 1).then((res) => {\n\t\t\tassert.fail('unexpected');\n\t\t}, (err) => {\n\t\t\tassert.strictEqual(err.what, 'what');\n\t\t}).finally(done);\n\t});\n\n\ttest('undefined arguments arrive as null', function () {\n\t\tdelegate = (a1: any, a2: any) => {\n\t\t\tassert.strictEqual(typeof a1, 'undefined');\n\t\t\tassert.strictEqual(a2, null);\n\t\t\treturn 7;\n\t\t};\n\t\treturn bProxy.$m(undefined, null).then((res) => {\n\t\t\tassert.strictEqual(res, 7);\n\t\t});\n\t});\n\n\ttest('issue #81424: SerializeRequest should throw if an argument can not be serialized', () => {\n\t\tconst badObject = {};\n\t\t(<any>badObject).loop = badObject;\n\n\t\tassert.throws(() => {\n\t\t\tbProxy.$m(badObject, '2');\n\t\t});\n\t});\n\n\ttest('SerializableObjectWithBuffers is correctly transfered', function (done) {\n\t\tdelegate = (a1: SerializableObjectWithBuffers<{ string: string; buff: VSBuffer }>, a2: number) => {\n\t\t\treturn new SerializableObjectWithBuffers({ string: a1.value.string + ' world', buff: a1.value.buff });\n\t\t};\n\n\t\tconst b = VSBuffer.alloc(4);\n\t\tb.buffer[0] = 1;\n\t\tb.buffer[1] = 2;\n\t\tb.buffer[2] = 3;\n\t\tb.buffer[3] = 4;\n\n\t\tbProxy.$m(new SerializableObjectWithBuffers({ string: 'hello', buff: b }), undefined).then((res: SerializableObjectWithBuffers<any>) => {\n\t\t\tassert.ok(res instanceof SerializableObjectWithBuffers);\n\t\t\tassert.strictEqual(res.value.string, 'hello world');\n\n\t\t\tassert.ok(res.value.buff instanceof VSBuffer);\n\n\t\t\tconst bufferValues = Array.from(res.value.buff.buffer);\n\n\t\t\tassert.strictEqual(bufferValues[0], 1);\n\t\t\tassert.strictEqual(bufferValues[1], 2);\n\t\t\tassert.strictEqual(bufferValues[2], 3);\n\t\t\tassert.strictEqual(bufferValues[3], 4);\n\t\t\tdone(null);\n\t\t}, done);\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
