import t from"assert";import{IEnvironmentService as q}from"../../../../../platform/environment/common/environment.js";import{IFileService as p}from"../../../../../platform/files/common/files.js";import{FileService as I}from"../../../../../platform/files/common/fileService.js";import{InMemoryFileSystemProvider as P}from"../../../../../platform/files/common/inMemoryFilesystemProvider.js";import"../../../../../platform/instantiation/test/common/instantiationServiceMock.js";import{NullLogService as w}from"../../../../../platform/log/common/log.js";import{workbenchInstantiationService as h}from"../../../../test/browser/workbenchTestServices.js";import{IExtensionStorageService as E,ExtensionStorageService as k}from"../../../../../platform/extensionManagement/common/extensionStorage.js";import{URI as y}from"../../../../../base/common/uri.js";import{joinPath as s}from"../../../../../base/common/resources.js";import{VSBuffer as x}from"../../../../../base/common/buffer.js";import{TestWorkspace as g}from"../../../../../platform/workspace/test/common/testWorkspace.js";import{migrateExtensionStorage as m}from"../../common/extensionStorageMigration.js";import{IStorageService as b,StorageScope as u}from"../../../../../platform/storage/common/storage.js";import{IUserDataProfilesService as v,UserDataProfilesService as D}from"../../../../../platform/userDataProfile/common/userDataProfile.js";import{UserDataProfileService as F}from"../../../userDataProfile/common/userDataProfileService.js";import{IUserDataProfileService as H}from"../../../userDataProfile/common/userDataProfile.js";import{UriIdentityService as K}from"../../../../../platform/uriIdentity/common/uriIdentityService.js";import{ensureNoDisposablesAreLeakedInTestSuite as R}from"../../../../../base/test/common/utils.js";suite("ExtensionStorageMigration",()=>{const n=R(),f=y.file("tests").with({scheme:"vscode-tests"}),S=s(f,"workspaceStorageHome");let r;setup(()=>{r=h(void 0,n);const e=n.add(new I(new w));n.add(e.registerProvider(f.scheme,n.add(new P))),r.stub(p,e);const i=r.stub(q,{userRoamingDataHome:f,workspaceStorageHome:S,cacheHome:f}),l=r.stub(v,n.add(new D(i,e,n.add(new K(e)),new w)));r.stub(H,n.add(new F(l.defaultProfile))),r.stub(E,n.add(r.createInstance(k)))}),test("migrate extension storage",async()=>{const e="pub.from",i="pub.to",l=`extensionStorage.migrate.${e}-${i}`,o=r.get(E),a=r.get(p),d=r.get(b),c=r.get(v);o.setExtensionState(e,{globalKey:"hello global state"},!0),o.setExtensionState(e,{workspaceKey:"hello workspace state"},!1),await a.writeFile(s(c.defaultProfile.globalStorageHome,e),x.fromString("hello global storage")),await a.writeFile(s(S,g.id,e),x.fromString("hello workspace storage")),await m(e,i,!0,r),await m(e,i,!1,r),t.deepStrictEqual(o.getExtensionState(e,!0),void 0),t.deepStrictEqual(o.getExtensionState(e,!1),void 0),t.deepStrictEqual(await a.exists(s(c.defaultProfile.globalStorageHome,e)),!1),t.deepStrictEqual(await a.exists(s(S,g.id,e)),!1),t.deepStrictEqual(o.getExtensionState(i,!0),{globalKey:"hello global state"}),t.deepStrictEqual(o.getExtensionState(i,!1),{workspaceKey:"hello workspace state"}),t.deepStrictEqual((await a.readFile(s(c.defaultProfile.globalStorageHome,i))).value.toString(),"hello global storage"),t.deepStrictEqual((await a.readFile(s(S,g.id,i))).value.toString(),"hello workspace storage"),t.deepStrictEqual(d.get(l,u.PROFILE),"true"),t.deepStrictEqual(d.get(l,u.WORKSPACE),"true")}),test("migrate extension storage when does not exist",async()=>{const e="pub.from",i="pub.to",l=`extensionStorage.migrate.${e}-${i}`,o=r.get(E),a=r.get(p),d=r.get(b),c=r.get(v);await m(e,i,!0,r),await m(e,i,!1,r),t.deepStrictEqual(o.getExtensionState(e,!0),void 0),t.deepStrictEqual(o.getExtensionState(e,!1),void 0),t.deepStrictEqual(await a.exists(s(c.defaultProfile.globalStorageHome,e)),!1),t.deepStrictEqual(await a.exists(s(S,g.id,e)),!1),t.deepStrictEqual(o.getExtensionState(i,!0),void 0),t.deepStrictEqual(o.getExtensionState(i,!1),void 0),t.deepStrictEqual(await a.exists(s(c.defaultProfile.globalStorageHome,i)),!1),t.deepStrictEqual(await a.exists(s(S,g.id,i)),!1),t.deepStrictEqual(d.get(l,u.PROFILE),"true"),t.deepStrictEqual(d.get(l,u.WORKSPACE),"true")})});
