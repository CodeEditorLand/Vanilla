{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/configuration/common/configurationCache.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Queue } from \"../../../../base/common/async.js\";\nimport { VSBuffer } from \"../../../../base/common/buffer.js\";\nimport { joinPath } from \"../../../../base/common/resources.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport type { IEnvironmentService } from \"../../../../platform/environment/common/environment.js\";\nimport {\n\ttype FileOperationError,\n\tFileOperationResult,\n\ttype IFileService,\n} from \"../../../../platform/files/common/files.js\";\nimport type { ConfigurationKey, IConfigurationCache } from \"./configuration.js\";\n\nexport class ConfigurationCache implements IConfigurationCache {\n\tprivate readonly cacheHome: URI;\n\tprivate readonly cachedConfigurations: Map<string, CachedConfiguration> =\n\t\tnew Map<string, CachedConfiguration>();\n\n\tconstructor(\n\t\tprivate readonly donotCacheResourcesWithSchemes: string[],\n\t\tenvironmentService: IEnvironmentService,\n\t\tprivate readonly fileService: IFileService,\n\t) {\n\t\tthis.cacheHome = environmentService.cacheHome;\n\t}\n\n\tneedsCaching(resource: URI): boolean {\n\t\t// Cache all non native resources\n\t\treturn !this.donotCacheResourcesWithSchemes.includes(resource.scheme);\n\t}\n\n\tread(key: ConfigurationKey): Promise<string> {\n\t\treturn this.getCachedConfiguration(key).read();\n\t}\n\n\twrite(key: ConfigurationKey, content: string): Promise<void> {\n\t\treturn this.getCachedConfiguration(key).save(content);\n\t}\n\n\tremove(key: ConfigurationKey): Promise<void> {\n\t\treturn this.getCachedConfiguration(key).remove();\n\t}\n\n\tprivate getCachedConfiguration({\n\t\ttype,\n\t\tkey,\n\t}: ConfigurationKey): CachedConfiguration {\n\t\tconst k = `${type}:${key}`;\n\t\tlet cachedConfiguration = this.cachedConfigurations.get(k);\n\t\tif (!cachedConfiguration) {\n\t\t\tcachedConfiguration = new CachedConfiguration(\n\t\t\t\t{ type, key },\n\t\t\t\tthis.cacheHome,\n\t\t\t\tthis.fileService,\n\t\t\t);\n\t\t\tthis.cachedConfigurations.set(k, cachedConfiguration);\n\t\t}\n\t\treturn cachedConfiguration;\n\t}\n}\n\nclass CachedConfiguration {\n\tprivate queue: Queue<void>;\n\tprivate cachedConfigurationFolderResource: URI;\n\tprivate cachedConfigurationFileResource: URI;\n\n\tconstructor(\n\t\t{ type, key }: ConfigurationKey,\n\t\tcacheHome: URI,\n\t\tprivate readonly fileService: IFileService,\n\t) {\n\t\tthis.cachedConfigurationFolderResource = joinPath(\n\t\t\tcacheHome,\n\t\t\t\"CachedConfigurations\",\n\t\t\ttype,\n\t\t\tkey,\n\t\t);\n\t\tthis.cachedConfigurationFileResource = joinPath(\n\t\t\tthis.cachedConfigurationFolderResource,\n\t\t\ttype === \"workspaces\" ? \"workspace.json\" : \"configuration.json\",\n\t\t);\n\t\tthis.queue = new Queue<void>();\n\t}\n\n\tasync read(): Promise<string> {\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(\n\t\t\t\tthis.cachedConfigurationFileResource,\n\t\t\t);\n\t\t\treturn content.value.toString();\n\t\t} catch (e) {\n\t\t\treturn \"\";\n\t\t}\n\t}\n\n\tasync save(content: string): Promise<void> {\n\t\tconst created = await this.createCachedFolder();\n\t\tif (created) {\n\t\t\tawait this.queue.queue(async () => {\n\t\t\t\tawait this.fileService.writeFile(\n\t\t\t\t\tthis.cachedConfigurationFileResource,\n\t\t\t\t\tVSBuffer.fromString(content),\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t}\n\n\tasync remove(): Promise<void> {\n\t\ttry {\n\t\t\tawait this.queue.queue(() =>\n\t\t\t\tthis.fileService.del(this.cachedConfigurationFolderResource, {\n\t\t\t\t\trecursive: true,\n\t\t\t\t\tuseTrash: false,\n\t\t\t\t}),\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tif (\n\t\t\t\t(<FileOperationError>error).fileOperationResult !==\n\t\t\t\tFileOperationResult.FILE_NOT_FOUND\n\t\t\t) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async createCachedFolder(): Promise<boolean> {\n\t\tif (\n\t\t\tawait this.fileService.exists(\n\t\t\t\tthis.cachedConfigurationFolderResource,\n\t\t\t)\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t\ttry {\n\t\t\tawait this.fileService.createFolder(\n\t\t\t\tthis.cachedConfigurationFolderResource,\n\t\t\t);\n\t\t\treturn true;\n\t\t} catch (error) {\n\t\t\treturn false;\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
