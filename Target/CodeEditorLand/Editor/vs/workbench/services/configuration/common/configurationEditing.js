var U=Object.defineProperty;var b=Object.getOwnPropertyDescriptor;var A=(g,i,e,r)=>{for(var t=r>1?void 0:r?b(i,e):i,a=g.length-1,s;a>=0;a--)(s=g[a])&&(t=(r?s(i,e,t):s(t))||t);return r&&t&&U(i,e,t),t},l=(g,i)=>(e,r)=>i(e,r,g);import*as n from"../../../../nls.js";import*as F from"../../../../base/common/json.js";import{setProperty as k}from"../../../../base/common/jsonEdit.js";import{Queue as P}from"../../../../base/common/async.js";import{Registry as T}from"../../../../platform/registry/common/platform.js";import{IWorkspaceContextService as L,WorkbenchState as C}from"../../../../platform/workspace/common/workspace.js";import{ITextFileService as m}from"../../textfile/common/textfiles.js";import{FOLDER_SETTINGS_PATH as D,WORKSPACE_STANDALONE_CONFIGURATIONS as K,TASKS_CONFIGURATION_KEY as f,LAUNCH_CONFIGURATION_KEY as R,USER_STANDALONE_CONFIGURATIONS as W,TASKS_DEFAULT as x,FOLDER_SCOPES as G,IWorkbenchConfigurationService as M}from"./configuration.js";import{FileOperationResult as z,IFileService as V}from"../../../../platform/files/common/files.js";import{ITextModelService as Y}from"../../../../editor/common/services/resolverService.js";import{Extensions as y,ConfigurationScope as p,keyFromOverrideIdentifiers as j,OVERRIDE_PROPERTY_REGEX as v}from"../../../../platform/configuration/common/configurationRegistry.js";import{IEditorService as H}from"../../editor/common/editorService.js";import{INotificationService as q,Severity as O}from"../../../../platform/notification/common/notification.js";import{IPreferencesService as B}from"../../preferences/common/preferences.js";import{IUriIdentityService as $}from"../../../../platform/uriIdentity/common/uriIdentity.js";import{Range as J}from"../../../../editor/common/core/range.js";import{EditOperation as N}from"../../../../editor/common/core/editOperation.js";import{Selection as Q}from"../../../../editor/common/core/selection.js";import{IUserDataProfileService as X}from"../../userDataProfile/common/userDataProfile.js";import{IUserDataProfilesService as Z}from"../../../../platform/userDataProfile/common/userDataProfile.js";import{ErrorNoTelemetry as ee}from"../../../../base/common/errors.js";var ie=(o=>(o[o.ERROR_UNKNOWN_KEY=0]="ERROR_UNKNOWN_KEY",o[o.ERROR_INVALID_WORKSPACE_CONFIGURATION_APPLICATION=1]="ERROR_INVALID_WORKSPACE_CONFIGURATION_APPLICATION",o[o.ERROR_INVALID_WORKSPACE_CONFIGURATION_MACHINE=2]="ERROR_INVALID_WORKSPACE_CONFIGURATION_MACHINE",o[o.ERROR_INVALID_FOLDER_CONFIGURATION=3]="ERROR_INVALID_FOLDER_CONFIGURATION",o[o.ERROR_INVALID_USER_TARGET=4]="ERROR_INVALID_USER_TARGET",o[o.ERROR_INVALID_WORKSPACE_TARGET=5]="ERROR_INVALID_WORKSPACE_TARGET",o[o.ERROR_INVALID_FOLDER_TARGET=6]="ERROR_INVALID_FOLDER_TARGET",o[o.ERROR_INVALID_RESOURCE_LANGUAGE_CONFIGURATION=7]="ERROR_INVALID_RESOURCE_LANGUAGE_CONFIGURATION",o[o.ERROR_NO_WORKSPACE_OPENED=8]="ERROR_NO_WORKSPACE_OPENED",o[o.ERROR_CONFIGURATION_FILE_DIRTY=9]="ERROR_CONFIGURATION_FILE_DIRTY",o[o.ERROR_CONFIGURATION_FILE_MODIFIED_SINCE=10]="ERROR_CONFIGURATION_FILE_MODIFIED_SINCE",o[o.ERROR_INVALID_CONFIGURATION=11]="ERROR_INVALID_CONFIGURATION",o[o.ERROR_POLICY_CONFIGURATION=12]="ERROR_POLICY_CONFIGURATION",o[o.ERROR_INTERNAL=13]="ERROR_INTERNAL",o))(ie||{});class w extends ee{constructor(e,r){super(e);this.code=r}}var re=(t=>(t[t.USER_LOCAL=1]="USER_LOCAL",t[t.USER_REMOTE=2]="USER_REMOTE",t[t.WORKSPACE=3]="WORKSPACE",t[t.WORKSPACE_FOLDER=4]="WORKSPACE_FOLDER",t))(re||{});let I=class{constructor(i,e,r,t,a,s,c,E,S,_,u,d){this.remoteSettingsResource=i;this.configurationService=e;this.contextService=r;this.userDataProfileService=t;this.userDataProfilesService=a;this.fileService=s;this.textModelResolverService=c;this.textFileService=E;this.notificationService=S;this.preferencesService=_;this.editorService=u;this.uriIdentityService=d;this.queue=new P}_serviceBrand;queue;async writeConfiguration(i,e,r={}){const t=this.getConfigurationEditOperation(i,e,r.scopes||{});return this.queue.queue(async()=>{try{await this.doWriteConfiguration(t,r)}catch(a){if(r.donotNotifyError)throw a;await this.onError(a,t,r.scopes)}})}async doWriteConfiguration(i,e){await this.validate(i.target,i,!e.handleDirtyFile,e.scopes||{});const r=i.resource,t=await this.resolveModelReference(r);try{const a=this.getFormattingOptions(t.object.textEditorModel);await this.updateConfiguration(i,t.object.textEditorModel,a,e)}finally{t.dispose()}}async updateConfiguration(i,e,r,t){if(this.hasParseErrors(e.getValue(),i))throw this.toConfigurationEditingError(11,i.target,i);if(this.textFileService.isDirty(e.uri)&&t.handleDirtyFile)switch(t.handleDirtyFile){case"save":await this.save(e,i);break;case"revert":await this.textFileService.revert(e.uri);break}const a=this.getEdits(i,e.getValue(),r)[0];a&&this.applyEditsToBuffer(a,e)&&await this.save(e,i)}async save(i,e){try{await this.textFileService.save(i.uri,{ignoreErrorHandler:!0})}catch(r){throw r.fileOperationResult===z.FILE_MODIFIED_SINCE?this.toConfigurationEditingError(10,e.target,e):new w(n.localize("fsError","Error while writing to {0}. {1}",this.stringifyTarget(e.target),r.message),13)}}applyEditsToBuffer(i,e){const r=e.getPositionAt(i.offset),t=e.getPositionAt(i.offset+i.length),a=new J(r.lineNumber,r.column,t.lineNumber,t.column),s=e.getValueInRange(a);if(i.content!==s){const c=s?N.replace(a,i.content):N.insert(r,i.content);return e.pushEditOperations([new Q(r.lineNumber,r.column,r.lineNumber,r.column)],[c],()=>[]),!0}return!1}getEdits({value:i,jsonPath:e},r,t){return e.length?k(r,e,i,t):[{content:JSON.stringify(i,null,t.insertSpaces&&t.tabSize?" ".repeat(t.tabSize):"	"),length:r.length,offset:0}]}getFormattingOptions(i){const{insertSpaces:e,tabSize:r}=i.getOptions(),t=i.getEOL();return{insertSpaces:e,tabSize:r,eol:t}}async onError(i,e,r){switch(i.code){case 11:this.onInvalidConfigurationError(i,e);break;case 9:this.onConfigurationFileDirtyError(i,e,r);break;case 10:return this.doWriteConfiguration(e,{scopes:r,handleDirtyFile:"revert"});default:this.notificationService.error(i.message)}}onInvalidConfigurationError(i,e){const r=e.workspaceStandAloneConfigurationKey===f?n.localize("openTasksConfiguration","Open Tasks Configuration"):e.workspaceStandAloneConfigurationKey===R?n.localize("openLaunchConfiguration","Open Launch Configuration"):null;r?this.notificationService.prompt(O.Error,i.message,[{label:r,run:()=>this.openFile(e.resource)}]):this.notificationService.prompt(O.Error,i.message,[{label:n.localize("open","Open Settings"),run:()=>this.openSettings(e)}])}onConfigurationFileDirtyError(i,e,r){const t=e.workspaceStandAloneConfigurationKey===f?n.localize("openTasksConfiguration","Open Tasks Configuration"):e.workspaceStandAloneConfigurationKey===R?n.localize("openLaunchConfiguration","Open Launch Configuration"):null;t?this.notificationService.prompt(O.Error,i.message,[{label:n.localize("saveAndRetry","Save and Retry"),run:()=>{const a=e.key?`${e.workspaceStandAloneConfigurationKey}.${e.key}`:e.workspaceStandAloneConfigurationKey;this.writeConfiguration(e.target,{key:a,value:e.value},{handleDirtyFile:"save",scopes:r})}},{label:t,run:()=>this.openFile(e.resource)}]):this.notificationService.prompt(O.Error,i.message,[{label:n.localize("saveAndRetry","Save and Retry"),run:()=>this.writeConfiguration(e.target,{key:e.key,value:e.value},{handleDirtyFile:"save",scopes:r})},{label:n.localize("open","Open Settings"),run:()=>this.openSettings(e)}])}openSettings(i){const e={jsonEditor:!0};switch(i.target){case 1:this.preferencesService.openUserSettings(e);break;case 2:this.preferencesService.openRemoteSettings(e);break;case 3:this.preferencesService.openWorkspaceSettings(e);break;case 4:if(i.resource){const r=this.contextService.getWorkspaceFolder(i.resource);r&&this.preferencesService.openFolderSettings({folderUri:r.uri,jsonEditor:!0})}break}}openFile(i){this.editorService.openEditor({resource:i,options:{pinned:!0}})}toConfigurationEditingError(i,e,r){const t=this.toErrorMessage(i,e,r);return new w(t,i)}toErrorMessage(i,e,r){switch(i){case 12:return n.localize("errorPolicyConfiguration","Unable to write {0} because it is configured in system policy.",r.key);case 0:return n.localize("errorUnknownKey","Unable to write to {0} because {1} is not a registered configuration.",this.stringifyTarget(e),r.key);case 1:return n.localize("errorInvalidWorkspaceConfigurationApplication","Unable to write {0} to Workspace Settings. This setting can be written only into User settings.",r.key);case 2:return n.localize("errorInvalidWorkspaceConfigurationMachine","Unable to write {0} to Workspace Settings. This setting can be written only into User settings.",r.key);case 3:return n.localize("errorInvalidFolderConfiguration","Unable to write to Folder Settings because {0} does not support the folder resource scope.",r.key);case 4:return n.localize("errorInvalidUserTarget","Unable to write to User Settings because {0} does not support for global scope.",r.key);case 5:return n.localize("errorInvalidWorkspaceTarget","Unable to write to Workspace Settings because {0} does not support for workspace scope in a multi folder workspace.",r.key);case 6:return n.localize("errorInvalidFolderTarget","Unable to write to Folder Settings because no resource is provided.");case 7:return n.localize("errorInvalidResourceLanguageConfiguration","Unable to write to Language Settings because {0} is not a resource language setting.",r.key);case 8:return n.localize("errorNoWorkspaceOpened","Unable to write to {0} because no workspace is opened. Please open a workspace first and try again.",this.stringifyTarget(e));case 11:{if(r.workspaceStandAloneConfigurationKey===f)return n.localize("errorInvalidTaskConfiguration","Unable to write into the tasks configuration file. Please open it to correct errors/warnings in it and try again.");if(r.workspaceStandAloneConfigurationKey===R)return n.localize("errorInvalidLaunchConfiguration","Unable to write into the launch configuration file. Please open it to correct errors/warnings in it and try again.");switch(e){case 1:return n.localize("errorInvalidConfiguration","Unable to write into user settings. Please open the user settings to correct errors/warnings in it and try again.");case 2:return n.localize("errorInvalidRemoteConfiguration","Unable to write into remote user settings. Please open the remote user settings to correct errors/warnings in it and try again.");case 3:return n.localize("errorInvalidConfigurationWorkspace","Unable to write into workspace settings. Please open the workspace settings to correct errors/warnings in the file and try again.");case 4:{let t="<<unknown>>";if(r.resource){const a=this.contextService.getWorkspaceFolder(r.resource);a&&(t=a.name)}return n.localize("errorInvalidConfigurationFolder","Unable to write into folder settings. Please open the '{0}' folder settings to correct errors/warnings in it and try again.",t)}default:return""}}case 9:{if(r.workspaceStandAloneConfigurationKey===f)return n.localize("errorTasksConfigurationFileDirty","Unable to write into tasks configuration file because the file has unsaved changes. Please save it first and then try again.");if(r.workspaceStandAloneConfigurationKey===R)return n.localize("errorLaunchConfigurationFileDirty","Unable to write into launch configuration file because the file has unsaved changes. Please save it first and then try again.");switch(e){case 1:return n.localize("errorConfigurationFileDirty","Unable to write into user settings because the file has unsaved changes. Please save the user settings file first and then try again.");case 2:return n.localize("errorRemoteConfigurationFileDirty","Unable to write into remote user settings because the file has unsaved changes. Please save the remote user settings file first and then try again.");case 3:return n.localize("errorConfigurationFileDirtyWorkspace","Unable to write into workspace settings because the file has unsaved changes. Please save the workspace settings file first and then try again.");case 4:{let t="<<unknown>>";if(r.resource){const a=this.contextService.getWorkspaceFolder(r.resource);a&&(t=a.name)}return n.localize("errorConfigurationFileDirtyFolder","Unable to write into folder settings because the file has unsaved changes. Please save the '{0}' folder settings file first and then try again.",t)}default:return""}}case 10:if(r.workspaceStandAloneConfigurationKey===f)return n.localize("errorTasksConfigurationFileModifiedSince","Unable to write into tasks configuration file because the content of the file is newer.");if(r.workspaceStandAloneConfigurationKey===R)return n.localize("errorLaunchConfigurationFileModifiedSince","Unable to write into launch configuration file because the content of the file is newer.");switch(e){case 1:return n.localize("errorConfigurationFileModifiedSince","Unable to write into user settings because the content of the file is newer.");case 2:return n.localize("errorRemoteConfigurationFileModifiedSince","Unable to write into remote user settings because the content of the file is newer.");case 3:return n.localize("errorConfigurationFileModifiedSinceWorkspace","Unable to write into workspace settings because the content of the file is newer.");case 4:return n.localize("errorConfigurationFileModifiedSinceFolder","Unable to write into folder settings because the content of the file is newer.")}case 13:return n.localize("errorUnknown","Unable to write to {0} because of an internal error.",this.stringifyTarget(e))}}stringifyTarget(i){switch(i){case 1:return n.localize("userTarget","User Settings");case 2:return n.localize("remoteUserTarget","Remote User Settings");case 3:return n.localize("workspaceTarget","Workspace Settings");case 4:return n.localize("folderTarget","Folder Settings");default:return""}}defaultResourceValue(i){const e=this.uriIdentityService.extUri.basename(i);switch(e.substr(0,e.length-this.uriIdentityService.extUri.extname(i).length)){case f:return x;default:return"{}"}}async resolveModelReference(i){return await this.fileService.exists(i)||await this.textFileService.write(i,this.defaultResourceValue(i),{encoding:"utf8"}),this.textModelResolverService.createModelReference(i)}hasParseErrors(i,e){if(e.workspaceStandAloneConfigurationKey&&!e.key)return!1;const r=[];return F.parse(i,r,{allowTrailingComma:!0,allowEmptyContent:!0}),r.length>0}async validate(i,e,r,t){if(this.configurationService.inspect(e.key).policyValue!==void 0)throw this.toConfigurationEditingError(12,i,e);const s=T.as(y.Configuration).getConfigurationProperties()[e.key]?.scope;if(!e.workspaceStandAloneConfigurationKey&&this.configurationService.keys().default.indexOf(e.key)<0&&!v.test(e.key)&&e.value!==void 0)throw this.toConfigurationEditingError(0,i,e);if(e.workspaceStandAloneConfigurationKey&&e.workspaceStandAloneConfigurationKey!==f&&(i===1||i===2))throw this.toConfigurationEditingError(4,i,e);if((i===3||i===4)&&this.contextService.getWorkbenchState()===C.EMPTY)throw this.toConfigurationEditingError(8,i,e);if(i===3&&!e.workspaceStandAloneConfigurationKey&&!v.test(e.key)){if(s===p.APPLICATION)throw this.toConfigurationEditingError(1,i,e);if(s===p.MACHINE)throw this.toConfigurationEditingError(2,i,e)}if(i===4){if(!e.resource)throw this.toConfigurationEditingError(6,i,e);if(!e.workspaceStandAloneConfigurationKey&&!v.test(e.key)&&s!==void 0&&!G.includes(s))throw this.toConfigurationEditingError(3,i,e)}if(t.overrideIdentifiers?.length&&s!==p.LANGUAGE_OVERRIDABLE)throw this.toConfigurationEditingError(7,i,e);if(!e.resource)throw this.toConfigurationEditingError(6,i,e);if(r&&this.textFileService.isDirty(e.resource))throw this.toConfigurationEditingError(9,i,e)}getConfigurationEditOperation(i,e,r){if(e.key){const S=i===1?W:K,_=Object.keys(S);for(const u of _){const d=this.getConfigurationFileResource(i,u,S[u],r.resource,void 0);if(e.key===u){const o=this.isWorkspaceConfigurationResource(d)?[u]:[];return{key:o[o.length-1],jsonPath:o,value:e.value,resource:d??void 0,workspaceStandAloneConfigurationKey:u,target:i}}const h=`${u}.`;if(e.key.indexOf(h)===0){const o=this.isWorkspaceConfigurationResource(d)?[u,e.key.substr(h.length)]:[e.key.substr(h.length)];return{key:o[o.length-1],jsonPath:o,value:e.value,resource:d??void 0,workspaceStandAloneConfigurationKey:u,target:i}}}}const t=e.key,s=T.as(y.Configuration).getConfigurationProperties()[t]?.scope;let c=r.overrideIdentifiers?.length?[j(r.overrideIdentifiers),t]:[t];if(i===1||i===2)return{key:t,jsonPath:c,value:e.value,resource:this.getConfigurationFileResource(i,t,"",null,s)??void 0,target:i};const E=this.getConfigurationFileResource(i,t,D,r.resource,s);return this.isWorkspaceConfigurationResource(E)&&(c=["settings",...c]),{key:t,jsonPath:c,value:e.value,resource:E??void 0,target:i}}isWorkspaceConfigurationResource(i){const e=this.contextService.getWorkspace();return!!(e.configuration&&i&&e.configuration.fsPath===i.fsPath)}getConfigurationFileResource(i,e,r,t,a){if(i===1)return e===f?this.userDataProfileService.currentProfile.tasksResource:!this.userDataProfileService.currentProfile.isDefault&&this.configurationService.isSettingAppliedForAllProfiles(e)?this.userDataProfilesService.defaultProfile.settingsResource:this.userDataProfileService.currentProfile.settingsResource;if(i===2)return this.remoteSettingsResource;const s=this.contextService.getWorkbenchState();if(s!==C.EMPTY){const c=this.contextService.getWorkspace();if(i===3){if(s===C.WORKSPACE)return c.configuration??null;if(s===C.FOLDER)return c.folders[0].toResource(r)}if(i===4&&t){const E=this.contextService.getWorkspaceFolder(t);if(E)return E.toResource(r)}}return null}};I=A([l(1,M),l(2,L),l(3,X),l(4,Z),l(5,V),l(6,Y),l(7,m),l(8,q),l(9,B),l(10,H),l(11,$)],I);export{I as ConfigurationEditing,w as ConfigurationEditingError,ie as ConfigurationEditingErrorCode,re as EditableConfigurationTarget};
