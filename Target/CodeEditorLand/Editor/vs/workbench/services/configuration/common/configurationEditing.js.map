{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/configuration/common/configurationEditing.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Queue } from \"../../../../base/common/async.js\";\nimport { ErrorNoTelemetry } from \"../../../../base/common/errors.js\";\nimport * as json from \"../../../../base/common/json.js\";\nimport { setProperty } from \"../../../../base/common/jsonEdit.js\";\nimport type {\n\tEdit,\n\tFormattingOptions,\n} from \"../../../../base/common/jsonFormatter.js\";\nimport type { IReference } from \"../../../../base/common/lifecycle.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport { EditOperation } from \"../../../../editor/common/core/editOperation.js\";\nimport { Range } from \"../../../../editor/common/core/range.js\";\nimport { Selection } from \"../../../../editor/common/core/selection.js\";\nimport type { ITextModel } from \"../../../../editor/common/model.js\";\nimport {\n\ttype IResolvedTextEditorModel,\n\tITextModelService,\n} from \"../../../../editor/common/services/resolverService.js\";\nimport * as nls from \"../../../../nls.js\";\nimport type {\n\tIConfigurationUpdateOptions,\n\tIConfigurationUpdateOverrides,\n} from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\tExtensions as ConfigurationExtensions,\n\tConfigurationScope,\n\ttype IConfigurationRegistry,\n\tOVERRIDE_PROPERTY_REGEX,\n\tkeyFromOverrideIdentifiers,\n} from \"../../../../platform/configuration/common/configurationRegistry.js\";\nimport {\n\ttype FileOperationError,\n\tFileOperationResult,\n\tIFileService,\n} from \"../../../../platform/files/common/files.js\";\nimport {\n\tINotificationService,\n\tSeverity,\n} from \"../../../../platform/notification/common/notification.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport { IUriIdentityService } from \"../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport { IUserDataProfilesService } from \"../../../../platform/userDataProfile/common/userDataProfile.js\";\nimport {\n\tIWorkspaceContextService,\n\tWorkbenchState,\n} from \"../../../../platform/workspace/common/workspace.js\";\nimport { IEditorService } from \"../../editor/common/editorService.js\";\nimport {\n\ttype IOpenSettingsOptions,\n\tIPreferencesService,\n} from \"../../preferences/common/preferences.js\";\nimport { ITextFileService } from \"../../textfile/common/textfiles.js\";\nimport { IUserDataProfileService } from \"../../userDataProfile/common/userDataProfile.js\";\nimport {\n\tFOLDER_SCOPES,\n\tFOLDER_SETTINGS_PATH,\n\tIWorkbenchConfigurationService,\n\tLAUNCH_CONFIGURATION_KEY,\n\tTASKS_CONFIGURATION_KEY,\n\tTASKS_DEFAULT,\n\tUSER_STANDALONE_CONFIGURATIONS,\n\tWORKSPACE_STANDALONE_CONFIGURATIONS,\n} from \"./configuration.js\";\n\nexport enum ConfigurationEditingErrorCode {\n\t/**\n\t * Error when trying to write a configuration key that is not registered.\n\t */\n\tERROR_UNKNOWN_KEY = 0,\n\n\t/**\n\t * Error when trying to write an application setting into workspace settings.\n\t */\n\tERROR_INVALID_WORKSPACE_CONFIGURATION_APPLICATION = 1,\n\n\t/**\n\t * Error when trying to write a machne setting into workspace settings.\n\t */\n\tERROR_INVALID_WORKSPACE_CONFIGURATION_MACHINE = 2,\n\n\t/**\n\t * Error when trying to write an invalid folder configuration key to folder settings.\n\t */\n\tERROR_INVALID_FOLDER_CONFIGURATION = 3,\n\n\t/**\n\t * Error when trying to write to user target but not supported for provided key.\n\t */\n\tERROR_INVALID_USER_TARGET = 4,\n\n\t/**\n\t * Error when trying to write to user target but not supported for provided key.\n\t */\n\tERROR_INVALID_WORKSPACE_TARGET = 5,\n\n\t/**\n\t * Error when trying to write a configuration key to folder target\n\t */\n\tERROR_INVALID_FOLDER_TARGET = 6,\n\n\t/**\n\t * Error when trying to write to language specific setting but not supported for preovided key\n\t */\n\tERROR_INVALID_RESOURCE_LANGUAGE_CONFIGURATION = 7,\n\n\t/**\n\t * Error when trying to write to the workspace configuration without having a workspace opened.\n\t */\n\tERROR_NO_WORKSPACE_OPENED = 8,\n\n\t/**\n\t * Error when trying to write and save to the configuration file while it is dirty in the editor.\n\t */\n\tERROR_CONFIGURATION_FILE_DIRTY = 9,\n\n\t/**\n\t * Error when trying to write and save to the configuration file while it is not the latest in the disk.\n\t */\n\tERROR_CONFIGURATION_FILE_MODIFIED_SINCE = 10,\n\n\t/**\n\t * Error when trying to write to a configuration file that contains JSON errors.\n\t */\n\tERROR_INVALID_CONFIGURATION = 11,\n\n\t/**\n\t * Error when trying to write a policy configuration\n\t */\n\tERROR_POLICY_CONFIGURATION = 12,\n\n\t/**\n\t * Internal Error.\n\t */\n\tERROR_INTERNAL = 13,\n}\n\nexport class ConfigurationEditingError extends ErrorNoTelemetry {\n\tconstructor(\n\t\tmessage: string,\n\t\tpublic code: ConfigurationEditingErrorCode,\n\t) {\n\t\tsuper(message);\n\t}\n}\n\nexport interface IConfigurationValue {\n\tkey: string;\n\tvalue: any;\n}\n\nexport interface IConfigurationEditingOptions\n\textends IConfigurationUpdateOptions {\n\t/**\n\t * Scope of configuration to be written into.\n\t */\n\tscopes?: IConfigurationUpdateOverrides;\n}\n\nexport enum EditableConfigurationTarget {\n\tUSER_LOCAL = 1,\n\tUSER_REMOTE = 2,\n\tWORKSPACE = 3,\n\tWORKSPACE_FOLDER = 4,\n}\n\ninterface IConfigurationEditOperation extends IConfigurationValue {\n\ttarget: EditableConfigurationTarget;\n\tjsonPath: json.JSONPath;\n\tresource?: URI;\n\tworkspaceStandAloneConfigurationKey?: string;\n}\n\nexport class ConfigurationEditing {\n\tpublic _serviceBrand: undefined;\n\n\tprivate queue: Queue<void>;\n\n\tconstructor(\n\t\tprivate readonly remoteSettingsResource: URI | null,\n\t\t@IWorkbenchConfigurationService private readonly configurationService: IWorkbenchConfigurationService,\n\t\t@IWorkspaceContextService private readonly contextService: IWorkspaceContextService,\n\t\t@IUserDataProfileService private readonly userDataProfileService: IUserDataProfileService,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@ITextModelService private readonly textModelResolverService: ITextModelService,\n\t\t@ITextFileService private readonly textFileService: ITextFileService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IPreferencesService private readonly preferencesService: IPreferencesService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t) {\n\t\tthis.queue = new Queue<void>();\n\t}\n\n\tasync writeConfiguration(\n\t\ttarget: EditableConfigurationTarget,\n\t\tvalue: IConfigurationValue,\n\t\toptions: IConfigurationEditingOptions = {},\n\t): Promise<void> {\n\t\tconst operation = this.getConfigurationEditOperation(\n\t\t\ttarget,\n\t\t\tvalue,\n\t\t\toptions.scopes || {},\n\t\t);\n\t\t// queue up writes to prevent race conditions\n\t\treturn this.queue.queue(async () => {\n\t\t\ttry {\n\t\t\t\tawait this.doWriteConfiguration(operation, options);\n\t\t\t} catch (error) {\n\t\t\t\tif (options.donotNotifyError) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t\tawait this.onError(error, operation, options.scopes);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async doWriteConfiguration(\n\t\toperation: IConfigurationEditOperation,\n\t\toptions: IConfigurationEditingOptions,\n\t): Promise<void> {\n\t\tawait this.validate(\n\t\t\toperation.target,\n\t\t\toperation,\n\t\t\t!options.handleDirtyFile,\n\t\t\toptions.scopes || {},\n\t\t);\n\t\tconst resource: URI = operation.resource!;\n\t\tconst reference = await this.resolveModelReference(resource);\n\t\ttry {\n\t\t\tconst formattingOptions = this.getFormattingOptions(\n\t\t\t\treference.object.textEditorModel,\n\t\t\t);\n\t\t\tawait this.updateConfiguration(\n\t\t\t\toperation,\n\t\t\t\treference.object.textEditorModel,\n\t\t\t\tformattingOptions,\n\t\t\t\toptions,\n\t\t\t);\n\t\t} finally {\n\t\t\treference.dispose();\n\t\t}\n\t}\n\n\tprivate async updateConfiguration(\n\t\toperation: IConfigurationEditOperation,\n\t\tmodel: ITextModel,\n\t\tformattingOptions: FormattingOptions,\n\t\toptions: IConfigurationEditingOptions,\n\t): Promise<void> {\n\t\tif (this.hasParseErrors(model.getValue(), operation)) {\n\t\t\tthrow this.toConfigurationEditingError(\n\t\t\t\tConfigurationEditingErrorCode.ERROR_INVALID_CONFIGURATION,\n\t\t\t\toperation.target,\n\t\t\t\toperation,\n\t\t\t);\n\t\t}\n\n\t\tif (\n\t\t\tthis.textFileService.isDirty(model.uri) &&\n\t\t\toptions.handleDirtyFile\n\t\t) {\n\t\t\tswitch (options.handleDirtyFile) {\n\t\t\t\tcase \"save\":\n\t\t\t\t\tawait this.save(model, operation);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"revert\":\n\t\t\t\t\tawait this.textFileService.revert(model.uri);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tconst edit = this.getEdits(\n\t\t\toperation,\n\t\t\tmodel.getValue(),\n\t\t\tformattingOptions,\n\t\t)[0];\n\t\tif (edit && this.applyEditsToBuffer(edit, model)) {\n\t\t\tawait this.save(model, operation);\n\t\t}\n\t}\n\n\tprivate async save(\n\t\tmodel: ITextModel,\n\t\toperation: IConfigurationEditOperation,\n\t): Promise<void> {\n\t\ttry {\n\t\t\tawait this.textFileService.save(model.uri, {\n\t\t\t\tignoreErrorHandler: true,\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tif (\n\t\t\t\t(<FileOperationError>error).fileOperationResult ===\n\t\t\t\tFileOperationResult.FILE_MODIFIED_SINCE\n\t\t\t) {\n\t\t\t\tthrow this.toConfigurationEditingError(\n\t\t\t\t\tConfigurationEditingErrorCode.ERROR_CONFIGURATION_FILE_MODIFIED_SINCE,\n\t\t\t\t\toperation.target,\n\t\t\t\t\toperation,\n\t\t\t\t);\n\t\t\t}\n\t\t\tthrow new ConfigurationEditingError(\n\t\t\t\tnls.localize(\n\t\t\t\t\t\"fsError\",\n\t\t\t\t\t\"Error while writing to {0}. {1}\",\n\t\t\t\t\tthis.stringifyTarget(operation.target),\n\t\t\t\t\terror.message,\n\t\t\t\t),\n\t\t\t\tConfigurationEditingErrorCode.ERROR_INTERNAL,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate applyEditsToBuffer(edit: Edit, model: ITextModel): boolean {\n\t\tconst startPosition = model.getPositionAt(edit.offset);\n\t\tconst endPosition = model.getPositionAt(edit.offset + edit.length);\n\t\tconst range = new Range(\n\t\t\tstartPosition.lineNumber,\n\t\t\tstartPosition.column,\n\t\t\tendPosition.lineNumber,\n\t\t\tendPosition.column,\n\t\t);\n\t\tconst currentText = model.getValueInRange(range);\n\t\tif (edit.content !== currentText) {\n\t\t\tconst editOperation = currentText\n\t\t\t\t? EditOperation.replace(range, edit.content)\n\t\t\t\t: EditOperation.insert(startPosition, edit.content);\n\t\t\tmodel.pushEditOperations(\n\t\t\t\t[\n\t\t\t\t\tnew Selection(\n\t\t\t\t\t\tstartPosition.lineNumber,\n\t\t\t\t\t\tstartPosition.column,\n\t\t\t\t\t\tstartPosition.lineNumber,\n\t\t\t\t\t\tstartPosition.column,\n\t\t\t\t\t),\n\t\t\t\t],\n\t\t\t\t[editOperation],\n\t\t\t\t() => [],\n\t\t\t);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate getEdits(\n\t\t{ value, jsonPath }: IConfigurationEditOperation,\n\t\tmodelContent: string,\n\t\tformattingOptions: FormattingOptions,\n\t): Edit[] {\n\t\tif (jsonPath.length) {\n\t\t\treturn setProperty(\n\t\t\t\tmodelContent,\n\t\t\t\tjsonPath,\n\t\t\t\tvalue,\n\t\t\t\tformattingOptions,\n\t\t\t);\n\t\t}\n\n\t\t// Without jsonPath, the entire configuration file is being replaced, so we just use JSON.stringify\n\t\tconst content = JSON.stringify(\n\t\t\tvalue,\n\t\t\tnull,\n\t\t\tformattingOptions.insertSpaces && formattingOptions.tabSize\n\t\t\t\t? \" \".repeat(formattingOptions.tabSize)\n\t\t\t\t: \"\\t\",\n\t\t);\n\t\treturn [\n\t\t\t{\n\t\t\t\tcontent,\n\t\t\t\tlength: modelContent.length,\n\t\t\t\toffset: 0,\n\t\t\t},\n\t\t];\n\t}\n\n\tprivate getFormattingOptions(model: ITextModel): FormattingOptions {\n\t\tconst { insertSpaces, tabSize } = model.getOptions();\n\t\tconst eol = model.getEOL();\n\t\treturn { insertSpaces, tabSize, eol };\n\t}\n\n\tprivate async onError(\n\t\terror: ConfigurationEditingError,\n\t\toperation: IConfigurationEditOperation,\n\t\tscopes: IConfigurationUpdateOverrides | undefined,\n\t): Promise<void> {\n\t\tswitch (error.code) {\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_INVALID_CONFIGURATION:\n\t\t\t\tthis.onInvalidConfigurationError(error, operation);\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_CONFIGURATION_FILE_DIRTY:\n\t\t\t\tthis.onConfigurationFileDirtyError(error, operation, scopes);\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_CONFIGURATION_FILE_MODIFIED_SINCE:\n\t\t\t\treturn this.doWriteConfiguration(operation, {\n\t\t\t\t\tscopes,\n\t\t\t\t\thandleDirtyFile: \"revert\",\n\t\t\t\t});\n\t\t\tdefault:\n\t\t\t\tthis.notificationService.error(error.message);\n\t\t}\n\t}\n\n\tprivate onInvalidConfigurationError(\n\t\terror: ConfigurationEditingError,\n\t\toperation: IConfigurationEditOperation,\n\t): void {\n\t\tconst openStandAloneConfigurationActionLabel =\n\t\t\toperation.workspaceStandAloneConfigurationKey ===\n\t\t\tTASKS_CONFIGURATION_KEY\n\t\t\t\t? nls.localize(\n\t\t\t\t\t\t\"openTasksConfiguration\",\n\t\t\t\t\t\t\"Open Tasks Configuration\",\n\t\t\t\t\t)\n\t\t\t\t: operation.workspaceStandAloneConfigurationKey ===\n\t\t\t\t\t\tLAUNCH_CONFIGURATION_KEY\n\t\t\t\t\t? nls.localize(\n\t\t\t\t\t\t\t\"openLaunchConfiguration\",\n\t\t\t\t\t\t\t\"Open Launch Configuration\",\n\t\t\t\t\t\t)\n\t\t\t\t\t: null;\n\t\tif (openStandAloneConfigurationActionLabel) {\n\t\t\tthis.notificationService.prompt(Severity.Error, error.message, [\n\t\t\t\t{\n\t\t\t\t\tlabel: openStandAloneConfigurationActionLabel,\n\t\t\t\t\trun: () => this.openFile(operation.resource!),\n\t\t\t\t},\n\t\t\t]);\n\t\t} else {\n\t\t\tthis.notificationService.prompt(Severity.Error, error.message, [\n\t\t\t\t{\n\t\t\t\t\tlabel: nls.localize(\"open\", \"Open Settings\"),\n\t\t\t\t\trun: () => this.openSettings(operation),\n\t\t\t\t},\n\t\t\t]);\n\t\t}\n\t}\n\n\tprivate onConfigurationFileDirtyError(\n\t\terror: ConfigurationEditingError,\n\t\toperation: IConfigurationEditOperation,\n\t\tscopes: IConfigurationUpdateOverrides | undefined,\n\t): void {\n\t\tconst openStandAloneConfigurationActionLabel =\n\t\t\toperation.workspaceStandAloneConfigurationKey ===\n\t\t\tTASKS_CONFIGURATION_KEY\n\t\t\t\t? nls.localize(\n\t\t\t\t\t\t\"openTasksConfiguration\",\n\t\t\t\t\t\t\"Open Tasks Configuration\",\n\t\t\t\t\t)\n\t\t\t\t: operation.workspaceStandAloneConfigurationKey ===\n\t\t\t\t\t\tLAUNCH_CONFIGURATION_KEY\n\t\t\t\t\t? nls.localize(\n\t\t\t\t\t\t\t\"openLaunchConfiguration\",\n\t\t\t\t\t\t\t\"Open Launch Configuration\",\n\t\t\t\t\t\t)\n\t\t\t\t\t: null;\n\t\tif (openStandAloneConfigurationActionLabel) {\n\t\t\tthis.notificationService.prompt(Severity.Error, error.message, [\n\t\t\t\t{\n\t\t\t\t\tlabel: nls.localize(\"saveAndRetry\", \"Save and Retry\"),\n\t\t\t\t\trun: () => {\n\t\t\t\t\t\tconst key = operation.key\n\t\t\t\t\t\t\t? `${operation.workspaceStandAloneConfigurationKey}.${operation.key}`\n\t\t\t\t\t\t\t: operation.workspaceStandAloneConfigurationKey!;\n\t\t\t\t\t\tthis.writeConfiguration(\n\t\t\t\t\t\t\toperation.target,\n\t\t\t\t\t\t\t{ key, value: operation.value },\n\t\t\t\t\t\t\t{ handleDirtyFile: \"save\", scopes },\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: openStandAloneConfigurationActionLabel,\n\t\t\t\t\trun: () => this.openFile(operation.resource!),\n\t\t\t\t},\n\t\t\t]);\n\t\t} else {\n\t\t\tthis.notificationService.prompt(Severity.Error, error.message, [\n\t\t\t\t{\n\t\t\t\t\tlabel: nls.localize(\"saveAndRetry\", \"Save and Retry\"),\n\t\t\t\t\trun: () =>\n\t\t\t\t\t\tthis.writeConfiguration(\n\t\t\t\t\t\t\toperation.target,\n\t\t\t\t\t\t\t{ key: operation.key, value: operation.value },\n\t\t\t\t\t\t\t{ handleDirtyFile: \"save\", scopes },\n\t\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: nls.localize(\"open\", \"Open Settings\"),\n\t\t\t\t\trun: () => this.openSettings(operation),\n\t\t\t\t},\n\t\t\t]);\n\t\t}\n\t}\n\n\tprivate openSettings(operation: IConfigurationEditOperation): void {\n\t\tconst options: IOpenSettingsOptions = { jsonEditor: true };\n\t\tswitch (operation.target) {\n\t\t\tcase EditableConfigurationTarget.USER_LOCAL:\n\t\t\t\tthis.preferencesService.openUserSettings(options);\n\t\t\t\tbreak;\n\t\t\tcase EditableConfigurationTarget.USER_REMOTE:\n\t\t\t\tthis.preferencesService.openRemoteSettings(options);\n\t\t\t\tbreak;\n\t\t\tcase EditableConfigurationTarget.WORKSPACE:\n\t\t\t\tthis.preferencesService.openWorkspaceSettings(options);\n\t\t\t\tbreak;\n\t\t\tcase EditableConfigurationTarget.WORKSPACE_FOLDER:\n\t\t\t\tif (operation.resource) {\n\t\t\t\t\tconst workspaceFolder =\n\t\t\t\t\t\tthis.contextService.getWorkspaceFolder(\n\t\t\t\t\t\t\toperation.resource,\n\t\t\t\t\t\t);\n\t\t\t\t\tif (workspaceFolder) {\n\t\t\t\t\t\tthis.preferencesService.openFolderSettings({\n\t\t\t\t\t\t\tfolderUri: workspaceFolder.uri,\n\t\t\t\t\t\t\tjsonEditor: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate openFile(resource: URI): void {\n\t\tthis.editorService.openEditor({ resource, options: { pinned: true } });\n\t}\n\n\tprivate toConfigurationEditingError(\n\t\tcode: ConfigurationEditingErrorCode,\n\t\ttarget: EditableConfigurationTarget,\n\t\toperation: IConfigurationEditOperation,\n\t): ConfigurationEditingError {\n\t\tconst message = this.toErrorMessage(code, target, operation);\n\t\treturn new ConfigurationEditingError(message, code);\n\t}\n\n\tprivate toErrorMessage(\n\t\terror: ConfigurationEditingErrorCode,\n\t\ttarget: EditableConfigurationTarget,\n\t\toperation: IConfigurationEditOperation,\n\t): string {\n\t\tswitch (error) {\n\t\t\t// API constraints\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_POLICY_CONFIGURATION:\n\t\t\t\treturn nls.localize(\n\t\t\t\t\t\"errorPolicyConfiguration\",\n\t\t\t\t\t\"Unable to write {0} because it is configured in system policy.\",\n\t\t\t\t\toperation.key,\n\t\t\t\t);\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_UNKNOWN_KEY:\n\t\t\t\treturn nls.localize(\n\t\t\t\t\t\"errorUnknownKey\",\n\t\t\t\t\t\"Unable to write to {0} because {1} is not a registered configuration.\",\n\t\t\t\t\tthis.stringifyTarget(target),\n\t\t\t\t\toperation.key,\n\t\t\t\t);\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_INVALID_WORKSPACE_CONFIGURATION_APPLICATION:\n\t\t\t\treturn nls.localize(\n\t\t\t\t\t\"errorInvalidWorkspaceConfigurationApplication\",\n\t\t\t\t\t\"Unable to write {0} to Workspace Settings. This setting can be written only into User settings.\",\n\t\t\t\t\toperation.key,\n\t\t\t\t);\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_INVALID_WORKSPACE_CONFIGURATION_MACHINE:\n\t\t\t\treturn nls.localize(\n\t\t\t\t\t\"errorInvalidWorkspaceConfigurationMachine\",\n\t\t\t\t\t\"Unable to write {0} to Workspace Settings. This setting can be written only into User settings.\",\n\t\t\t\t\toperation.key,\n\t\t\t\t);\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_INVALID_FOLDER_CONFIGURATION:\n\t\t\t\treturn nls.localize(\n\t\t\t\t\t\"errorInvalidFolderConfiguration\",\n\t\t\t\t\t\"Unable to write to Folder Settings because {0} does not support the folder resource scope.\",\n\t\t\t\t\toperation.key,\n\t\t\t\t);\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_INVALID_USER_TARGET:\n\t\t\t\treturn nls.localize(\n\t\t\t\t\t\"errorInvalidUserTarget\",\n\t\t\t\t\t\"Unable to write to User Settings because {0} does not support for global scope.\",\n\t\t\t\t\toperation.key,\n\t\t\t\t);\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_INVALID_WORKSPACE_TARGET:\n\t\t\t\treturn nls.localize(\n\t\t\t\t\t\"errorInvalidWorkspaceTarget\",\n\t\t\t\t\t\"Unable to write to Workspace Settings because {0} does not support for workspace scope in a multi folder workspace.\",\n\t\t\t\t\toperation.key,\n\t\t\t\t);\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_INVALID_FOLDER_TARGET:\n\t\t\t\treturn nls.localize(\n\t\t\t\t\t\"errorInvalidFolderTarget\",\n\t\t\t\t\t\"Unable to write to Folder Settings because no resource is provided.\",\n\t\t\t\t);\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_INVALID_RESOURCE_LANGUAGE_CONFIGURATION:\n\t\t\t\treturn nls.localize(\n\t\t\t\t\t\"errorInvalidResourceLanguageConfiguration\",\n\t\t\t\t\t\"Unable to write to Language Settings because {0} is not a resource language setting.\",\n\t\t\t\t\toperation.key,\n\t\t\t\t);\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_NO_WORKSPACE_OPENED:\n\t\t\t\treturn nls.localize(\n\t\t\t\t\t\"errorNoWorkspaceOpened\",\n\t\t\t\t\t\"Unable to write to {0} because no workspace is opened. Please open a workspace first and try again.\",\n\t\t\t\t\tthis.stringifyTarget(target),\n\t\t\t\t);\n\n\t\t\t// User issues\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_INVALID_CONFIGURATION: {\n\t\t\t\tif (\n\t\t\t\t\toperation.workspaceStandAloneConfigurationKey ===\n\t\t\t\t\tTASKS_CONFIGURATION_KEY\n\t\t\t\t) {\n\t\t\t\t\treturn nls.localize(\n\t\t\t\t\t\t\"errorInvalidTaskConfiguration\",\n\t\t\t\t\t\t\"Unable to write into the tasks configuration file. Please open it to correct errors/warnings in it and try again.\",\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\toperation.workspaceStandAloneConfigurationKey ===\n\t\t\t\t\tLAUNCH_CONFIGURATION_KEY\n\t\t\t\t) {\n\t\t\t\t\treturn nls.localize(\n\t\t\t\t\t\t\"errorInvalidLaunchConfiguration\",\n\t\t\t\t\t\t\"Unable to write into the launch configuration file. Please open it to correct errors/warnings in it and try again.\",\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tswitch (target) {\n\t\t\t\t\tcase EditableConfigurationTarget.USER_LOCAL:\n\t\t\t\t\t\treturn nls.localize(\n\t\t\t\t\t\t\t\"errorInvalidConfiguration\",\n\t\t\t\t\t\t\t\"Unable to write into user settings. Please open the user settings to correct errors/warnings in it and try again.\",\n\t\t\t\t\t\t);\n\t\t\t\t\tcase EditableConfigurationTarget.USER_REMOTE:\n\t\t\t\t\t\treturn nls.localize(\n\t\t\t\t\t\t\t\"errorInvalidRemoteConfiguration\",\n\t\t\t\t\t\t\t\"Unable to write into remote user settings. Please open the remote user settings to correct errors/warnings in it and try again.\",\n\t\t\t\t\t\t);\n\t\t\t\t\tcase EditableConfigurationTarget.WORKSPACE:\n\t\t\t\t\t\treturn nls.localize(\n\t\t\t\t\t\t\t\"errorInvalidConfigurationWorkspace\",\n\t\t\t\t\t\t\t\"Unable to write into workspace settings. Please open the workspace settings to correct errors/warnings in the file and try again.\",\n\t\t\t\t\t\t);\n\t\t\t\t\tcase EditableConfigurationTarget.WORKSPACE_FOLDER: {\n\t\t\t\t\t\tlet workspaceFolderName = \"<<unknown>>\";\n\t\t\t\t\t\tif (operation.resource) {\n\t\t\t\t\t\t\tconst folder =\n\t\t\t\t\t\t\t\tthis.contextService.getWorkspaceFolder(\n\t\t\t\t\t\t\t\t\toperation.resource,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (folder) {\n\t\t\t\t\t\t\t\tworkspaceFolderName = folder.name;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn nls.localize(\n\t\t\t\t\t\t\t\"errorInvalidConfigurationFolder\",\n\t\t\t\t\t\t\t\"Unable to write into folder settings. Please open the '{0}' folder settings to correct errors/warnings in it and try again.\",\n\t\t\t\t\t\t\tworkspaceFolderName,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_CONFIGURATION_FILE_DIRTY: {\n\t\t\t\tif (\n\t\t\t\t\toperation.workspaceStandAloneConfigurationKey ===\n\t\t\t\t\tTASKS_CONFIGURATION_KEY\n\t\t\t\t) {\n\t\t\t\t\treturn nls.localize(\n\t\t\t\t\t\t\"errorTasksConfigurationFileDirty\",\n\t\t\t\t\t\t\"Unable to write into tasks configuration file because the file has unsaved changes. Please save it first and then try again.\",\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\toperation.workspaceStandAloneConfigurationKey ===\n\t\t\t\t\tLAUNCH_CONFIGURATION_KEY\n\t\t\t\t) {\n\t\t\t\t\treturn nls.localize(\n\t\t\t\t\t\t\"errorLaunchConfigurationFileDirty\",\n\t\t\t\t\t\t\"Unable to write into launch configuration file because the file has unsaved changes. Please save it first and then try again.\",\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tswitch (target) {\n\t\t\t\t\tcase EditableConfigurationTarget.USER_LOCAL:\n\t\t\t\t\t\treturn nls.localize(\n\t\t\t\t\t\t\t\"errorConfigurationFileDirty\",\n\t\t\t\t\t\t\t\"Unable to write into user settings because the file has unsaved changes. Please save the user settings file first and then try again.\",\n\t\t\t\t\t\t);\n\t\t\t\t\tcase EditableConfigurationTarget.USER_REMOTE:\n\t\t\t\t\t\treturn nls.localize(\n\t\t\t\t\t\t\t\"errorRemoteConfigurationFileDirty\",\n\t\t\t\t\t\t\t\"Unable to write into remote user settings because the file has unsaved changes. Please save the remote user settings file first and then try again.\",\n\t\t\t\t\t\t);\n\t\t\t\t\tcase EditableConfigurationTarget.WORKSPACE:\n\t\t\t\t\t\treturn nls.localize(\n\t\t\t\t\t\t\t\"errorConfigurationFileDirtyWorkspace\",\n\t\t\t\t\t\t\t\"Unable to write into workspace settings because the file has unsaved changes. Please save the workspace settings file first and then try again.\",\n\t\t\t\t\t\t);\n\t\t\t\t\tcase EditableConfigurationTarget.WORKSPACE_FOLDER: {\n\t\t\t\t\t\tlet workspaceFolderName = \"<<unknown>>\";\n\t\t\t\t\t\tif (operation.resource) {\n\t\t\t\t\t\t\tconst folder =\n\t\t\t\t\t\t\t\tthis.contextService.getWorkspaceFolder(\n\t\t\t\t\t\t\t\t\toperation.resource,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (folder) {\n\t\t\t\t\t\t\t\tworkspaceFolderName = folder.name;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn nls.localize(\n\t\t\t\t\t\t\t\"errorConfigurationFileDirtyFolder\",\n\t\t\t\t\t\t\t\"Unable to write into folder settings because the file has unsaved changes. Please save the '{0}' folder settings file first and then try again.\",\n\t\t\t\t\t\t\tworkspaceFolderName,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_CONFIGURATION_FILE_MODIFIED_SINCE:\n\t\t\t\tif (\n\t\t\t\t\toperation.workspaceStandAloneConfigurationKey ===\n\t\t\t\t\tTASKS_CONFIGURATION_KEY\n\t\t\t\t) {\n\t\t\t\t\treturn nls.localize(\n\t\t\t\t\t\t\"errorTasksConfigurationFileModifiedSince\",\n\t\t\t\t\t\t\"Unable to write into tasks configuration file because the content of the file is newer.\",\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\toperation.workspaceStandAloneConfigurationKey ===\n\t\t\t\t\tLAUNCH_CONFIGURATION_KEY\n\t\t\t\t) {\n\t\t\t\t\treturn nls.localize(\n\t\t\t\t\t\t\"errorLaunchConfigurationFileModifiedSince\",\n\t\t\t\t\t\t\"Unable to write into launch configuration file because the content of the file is newer.\",\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tswitch (target) {\n\t\t\t\t\tcase EditableConfigurationTarget.USER_LOCAL:\n\t\t\t\t\t\treturn nls.localize(\n\t\t\t\t\t\t\t\"errorConfigurationFileModifiedSince\",\n\t\t\t\t\t\t\t\"Unable to write into user settings because the content of the file is newer.\",\n\t\t\t\t\t\t);\n\t\t\t\t\tcase EditableConfigurationTarget.USER_REMOTE:\n\t\t\t\t\t\treturn nls.localize(\n\t\t\t\t\t\t\t\"errorRemoteConfigurationFileModifiedSince\",\n\t\t\t\t\t\t\t\"Unable to write into remote user settings because the content of the file is newer.\",\n\t\t\t\t\t\t);\n\t\t\t\t\tcase EditableConfigurationTarget.WORKSPACE:\n\t\t\t\t\t\treturn nls.localize(\n\t\t\t\t\t\t\t\"errorConfigurationFileModifiedSinceWorkspace\",\n\t\t\t\t\t\t\t\"Unable to write into workspace settings because the content of the file is newer.\",\n\t\t\t\t\t\t);\n\t\t\t\t\tcase EditableConfigurationTarget.WORKSPACE_FOLDER:\n\t\t\t\t\t\treturn nls.localize(\n\t\t\t\t\t\t\t\"errorConfigurationFileModifiedSinceFolder\",\n\t\t\t\t\t\t\t\"Unable to write into folder settings because the content of the file is newer.\",\n\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\tcase ConfigurationEditingErrorCode.ERROR_INTERNAL:\n\t\t\t\treturn nls.localize(\n\t\t\t\t\t\"errorUnknown\",\n\t\t\t\t\t\"Unable to write to {0} because of an internal error.\",\n\t\t\t\t\tthis.stringifyTarget(target),\n\t\t\t\t);\n\t\t}\n\t}\n\n\tprivate stringifyTarget(target: EditableConfigurationTarget): string {\n\t\tswitch (target) {\n\t\t\tcase EditableConfigurationTarget.USER_LOCAL:\n\t\t\t\treturn nls.localize(\"userTarget\", \"User Settings\");\n\t\t\tcase EditableConfigurationTarget.USER_REMOTE:\n\t\t\t\treturn nls.localize(\"remoteUserTarget\", \"Remote User Settings\");\n\t\t\tcase EditableConfigurationTarget.WORKSPACE:\n\t\t\t\treturn nls.localize(\"workspaceTarget\", \"Workspace Settings\");\n\t\t\tcase EditableConfigurationTarget.WORKSPACE_FOLDER:\n\t\t\t\treturn nls.localize(\"folderTarget\", \"Folder Settings\");\n\t\t\tdefault:\n\t\t\t\treturn \"\";\n\t\t}\n\t}\n\n\tprivate defaultResourceValue(resource: URI): string {\n\t\tconst basename: string =\n\t\t\tthis.uriIdentityService.extUri.basename(resource);\n\t\tconst configurationValue: string = basename.substr(\n\t\t\t0,\n\t\t\tbasename.length -\n\t\t\t\tthis.uriIdentityService.extUri.extname(resource).length,\n\t\t);\n\t\tswitch (configurationValue) {\n\t\t\tcase TASKS_CONFIGURATION_KEY:\n\t\t\t\treturn TASKS_DEFAULT;\n\t\t\tdefault:\n\t\t\t\treturn \"{}\";\n\t\t}\n\t}\n\n\tprivate async resolveModelReference(\n\t\tresource: URI,\n\t): Promise<IReference<IResolvedTextEditorModel>> {\n\t\tconst exists = await this.fileService.exists(resource);\n\t\tif (!exists) {\n\t\t\tawait this.textFileService.write(\n\t\t\t\tresource,\n\t\t\t\tthis.defaultResourceValue(resource),\n\t\t\t\t{ encoding: \"utf8\" },\n\t\t\t);\n\t\t}\n\t\treturn this.textModelResolverService.createModelReference(resource);\n\t}\n\n\tprivate hasParseErrors(\n\t\tcontent: string,\n\t\toperation: IConfigurationEditOperation,\n\t): boolean {\n\t\t// If we write to a workspace standalone file and replace the entire contents (no key provided)\n\t\t// we can return here because any parse errors can safely be ignored since all contents are replaced\n\t\tif (operation.workspaceStandAloneConfigurationKey && !operation.key) {\n\t\t\treturn false;\n\t\t}\n\t\tconst parseErrors: json.ParseError[] = [];\n\t\tjson.parse(content, parseErrors, {\n\t\t\tallowTrailingComma: true,\n\t\t\tallowEmptyContent: true,\n\t\t});\n\t\treturn parseErrors.length > 0;\n\t}\n\n\tprivate async validate(\n\t\ttarget: EditableConfigurationTarget,\n\t\toperation: IConfigurationEditOperation,\n\t\tcheckDirty: boolean,\n\t\toverrides: IConfigurationUpdateOverrides,\n\t): Promise<void> {\n\t\tif (\n\t\t\tthis.configurationService.inspect(operation.key).policyValue !==\n\t\t\tundefined\n\t\t) {\n\t\t\tthrow this.toConfigurationEditingError(\n\t\t\t\tConfigurationEditingErrorCode.ERROR_POLICY_CONFIGURATION,\n\t\t\t\ttarget,\n\t\t\t\toperation,\n\t\t\t);\n\t\t}\n\n\t\tconst configurationProperties = Registry.as<IConfigurationRegistry>(\n\t\t\tConfigurationExtensions.Configuration,\n\t\t).getConfigurationProperties();\n\t\tconst configurationScope =\n\t\t\tconfigurationProperties[operation.key]?.scope;\n\n\t\t/**\n\t\t * Key to update must be a known setting from the registry unless\n\t\t * \t- the key is standalone configuration (eg: tasks, debug)\n\t\t * \t- the key is an override identifier\n\t\t * \t- the operation is to delete the key\n\t\t */\n\t\tif (!operation.workspaceStandAloneConfigurationKey) {\n\t\t\tconst validKeys = this.configurationService.keys().default;\n\t\t\tif (\n\t\t\t\tvalidKeys.indexOf(operation.key) < 0 &&\n\t\t\t\t!OVERRIDE_PROPERTY_REGEX.test(operation.key) &&\n\t\t\t\toperation.value !== undefined\n\t\t\t) {\n\t\t\t\tthrow this.toConfigurationEditingError(\n\t\t\t\t\tConfigurationEditingErrorCode.ERROR_UNKNOWN_KEY,\n\t\t\t\t\ttarget,\n\t\t\t\t\toperation,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (operation.workspaceStandAloneConfigurationKey) {\n\t\t\t// Global launches are not supported\n\t\t\tif (\n\t\t\t\toperation.workspaceStandAloneConfigurationKey !==\n\t\t\t\t\tTASKS_CONFIGURATION_KEY &&\n\t\t\t\t(target === EditableConfigurationTarget.USER_LOCAL ||\n\t\t\t\t\ttarget === EditableConfigurationTarget.USER_REMOTE)\n\t\t\t) {\n\t\t\t\tthrow this.toConfigurationEditingError(\n\t\t\t\t\tConfigurationEditingErrorCode.ERROR_INVALID_USER_TARGET,\n\t\t\t\t\ttarget,\n\t\t\t\t\toperation,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// Target cannot be workspace or folder if no workspace opened\n\t\tif (\n\t\t\t(target === EditableConfigurationTarget.WORKSPACE ||\n\t\t\t\ttarget === EditableConfigurationTarget.WORKSPACE_FOLDER) &&\n\t\t\tthis.contextService.getWorkbenchState() === WorkbenchState.EMPTY\n\t\t) {\n\t\t\tthrow this.toConfigurationEditingError(\n\t\t\t\tConfigurationEditingErrorCode.ERROR_NO_WORKSPACE_OPENED,\n\t\t\t\ttarget,\n\t\t\t\toperation,\n\t\t\t);\n\t\t}\n\n\t\tif (target === EditableConfigurationTarget.WORKSPACE) {\n\t\t\tif (\n\t\t\t\t!operation.workspaceStandAloneConfigurationKey &&\n\t\t\t\t!OVERRIDE_PROPERTY_REGEX.test(operation.key)\n\t\t\t) {\n\t\t\t\tif (configurationScope === ConfigurationScope.APPLICATION) {\n\t\t\t\t\tthrow this.toConfigurationEditingError(\n\t\t\t\t\t\tConfigurationEditingErrorCode.ERROR_INVALID_WORKSPACE_CONFIGURATION_APPLICATION,\n\t\t\t\t\t\ttarget,\n\t\t\t\t\t\toperation,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (configurationScope === ConfigurationScope.MACHINE) {\n\t\t\t\t\tthrow this.toConfigurationEditingError(\n\t\t\t\t\t\tConfigurationEditingErrorCode.ERROR_INVALID_WORKSPACE_CONFIGURATION_MACHINE,\n\t\t\t\t\t\ttarget,\n\t\t\t\t\t\toperation,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (target === EditableConfigurationTarget.WORKSPACE_FOLDER) {\n\t\t\tif (!operation.resource) {\n\t\t\t\tthrow this.toConfigurationEditingError(\n\t\t\t\t\tConfigurationEditingErrorCode.ERROR_INVALID_FOLDER_TARGET,\n\t\t\t\t\ttarget,\n\t\t\t\t\toperation,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t!operation.workspaceStandAloneConfigurationKey &&\n\t\t\t\t!OVERRIDE_PROPERTY_REGEX.test(operation.key)\n\t\t\t) {\n\t\t\t\tif (\n\t\t\t\t\tconfigurationScope !== undefined &&\n\t\t\t\t\t!FOLDER_SCOPES.includes(configurationScope)\n\t\t\t\t) {\n\t\t\t\t\tthrow this.toConfigurationEditingError(\n\t\t\t\t\t\tConfigurationEditingErrorCode.ERROR_INVALID_FOLDER_CONFIGURATION,\n\t\t\t\t\t\ttarget,\n\t\t\t\t\t\toperation,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (overrides.overrideIdentifiers?.length) {\n\t\t\tif (\n\t\t\t\tconfigurationScope !== ConfigurationScope.LANGUAGE_OVERRIDABLE\n\t\t\t) {\n\t\t\t\tthrow this.toConfigurationEditingError(\n\t\t\t\t\tConfigurationEditingErrorCode.ERROR_INVALID_RESOURCE_LANGUAGE_CONFIGURATION,\n\t\t\t\t\ttarget,\n\t\t\t\t\toperation,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (!operation.resource) {\n\t\t\tthrow this.toConfigurationEditingError(\n\t\t\t\tConfigurationEditingErrorCode.ERROR_INVALID_FOLDER_TARGET,\n\t\t\t\ttarget,\n\t\t\t\toperation,\n\t\t\t);\n\t\t}\n\n\t\tif (checkDirty && this.textFileService.isDirty(operation.resource)) {\n\t\t\tthrow this.toConfigurationEditingError(\n\t\t\t\tConfigurationEditingErrorCode.ERROR_CONFIGURATION_FILE_DIRTY,\n\t\t\t\ttarget,\n\t\t\t\toperation,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate getConfigurationEditOperation(\n\t\ttarget: EditableConfigurationTarget,\n\t\tconfig: IConfigurationValue,\n\t\toverrides: IConfigurationUpdateOverrides,\n\t): IConfigurationEditOperation {\n\t\t// Check for standalone workspace configurations\n\t\tif (config.key) {\n\t\t\tconst standaloneConfigurationMap =\n\t\t\t\ttarget === EditableConfigurationTarget.USER_LOCAL\n\t\t\t\t\t? USER_STANDALONE_CONFIGURATIONS\n\t\t\t\t\t: WORKSPACE_STANDALONE_CONFIGURATIONS;\n\t\t\tconst standaloneConfigurationKeys = Object.keys(\n\t\t\t\tstandaloneConfigurationMap,\n\t\t\t);\n\t\t\tfor (const key of standaloneConfigurationKeys) {\n\t\t\t\tconst resource = this.getConfigurationFileResource(\n\t\t\t\t\ttarget,\n\t\t\t\t\tkey,\n\t\t\t\t\tstandaloneConfigurationMap[key],\n\t\t\t\t\toverrides.resource,\n\t\t\t\t\tundefined,\n\t\t\t\t);\n\n\t\t\t\t// Check for prefix\n\t\t\t\tif (config.key === key) {\n\t\t\t\t\tconst jsonPath = this.isWorkspaceConfigurationResource(\n\t\t\t\t\t\tresource,\n\t\t\t\t\t)\n\t\t\t\t\t\t? [key]\n\t\t\t\t\t\t: [];\n\t\t\t\t\treturn {\n\t\t\t\t\t\tkey: jsonPath[jsonPath.length - 1],\n\t\t\t\t\t\tjsonPath,\n\t\t\t\t\t\tvalue: config.value,\n\t\t\t\t\t\tresource: resource ?? undefined,\n\t\t\t\t\t\tworkspaceStandAloneConfigurationKey: key,\n\t\t\t\t\t\ttarget,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Check for prefix.<setting>\n\t\t\t\tconst keyPrefix = `${key}.`;\n\t\t\t\tif (config.key.indexOf(keyPrefix) === 0) {\n\t\t\t\t\tconst jsonPath = this.isWorkspaceConfigurationResource(\n\t\t\t\t\t\tresource,\n\t\t\t\t\t)\n\t\t\t\t\t\t? [key, config.key.substr(keyPrefix.length)]\n\t\t\t\t\t\t: [config.key.substr(keyPrefix.length)];\n\t\t\t\t\treturn {\n\t\t\t\t\t\tkey: jsonPath[jsonPath.length - 1],\n\t\t\t\t\t\tjsonPath,\n\t\t\t\t\t\tvalue: config.value,\n\t\t\t\t\t\tresource: resource ?? undefined,\n\t\t\t\t\t\tworkspaceStandAloneConfigurationKey: key,\n\t\t\t\t\t\ttarget,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst key = config.key;\n\t\tconst configurationProperties = Registry.as<IConfigurationRegistry>(\n\t\t\tConfigurationExtensions.Configuration,\n\t\t).getConfigurationProperties();\n\t\tconst configurationScope = configurationProperties[key]?.scope;\n\t\tlet jsonPath = overrides.overrideIdentifiers?.length\n\t\t\t? [keyFromOverrideIdentifiers(overrides.overrideIdentifiers), key]\n\t\t\t: [key];\n\t\tif (\n\t\t\ttarget === EditableConfigurationTarget.USER_LOCAL ||\n\t\t\ttarget === EditableConfigurationTarget.USER_REMOTE\n\t\t) {\n\t\t\treturn {\n\t\t\t\tkey,\n\t\t\t\tjsonPath,\n\t\t\t\tvalue: config.value,\n\t\t\t\tresource:\n\t\t\t\t\tthis.getConfigurationFileResource(\n\t\t\t\t\t\ttarget,\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tconfigurationScope,\n\t\t\t\t\t) ?? undefined,\n\t\t\t\ttarget,\n\t\t\t};\n\t\t}\n\n\t\tconst resource = this.getConfigurationFileResource(\n\t\t\ttarget,\n\t\t\tkey,\n\t\t\tFOLDER_SETTINGS_PATH,\n\t\t\toverrides.resource,\n\t\t\tconfigurationScope,\n\t\t);\n\t\tif (this.isWorkspaceConfigurationResource(resource)) {\n\t\t\tjsonPath = [\"settings\", ...jsonPath];\n\t\t}\n\t\treturn {\n\t\t\tkey,\n\t\t\tjsonPath,\n\t\t\tvalue: config.value,\n\t\t\tresource: resource ?? undefined,\n\t\t\ttarget,\n\t\t};\n\t}\n\n\tprivate isWorkspaceConfigurationResource(resource: URI | null): boolean {\n\t\tconst workspace = this.contextService.getWorkspace();\n\t\treturn !!(\n\t\t\tworkspace.configuration &&\n\t\t\tresource &&\n\t\t\tworkspace.configuration.fsPath === resource.fsPath\n\t\t);\n\t}\n\n\tprivate getConfigurationFileResource(\n\t\ttarget: EditableConfigurationTarget,\n\t\tkey: string,\n\t\trelativePath: string,\n\t\tresource: URI | null | undefined,\n\t\tscope: ConfigurationScope | undefined,\n\t): URI | null {\n\t\tif (target === EditableConfigurationTarget.USER_LOCAL) {\n\t\t\tif (key === TASKS_CONFIGURATION_KEY) {\n\t\t\t\treturn this.userDataProfileService.currentProfile.tasksResource;\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\t!this.userDataProfileService.currentProfile.isDefault &&\n\t\t\t\t\tthis.configurationService.isSettingAppliedForAllProfiles(\n\t\t\t\t\t\tkey,\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\treturn this.userDataProfilesService.defaultProfile\n\t\t\t\t\t\t.settingsResource;\n\t\t\t\t}\n\t\t\t\treturn this.userDataProfileService.currentProfile\n\t\t\t\t\t.settingsResource;\n\t\t\t}\n\t\t}\n\t\tif (target === EditableConfigurationTarget.USER_REMOTE) {\n\t\t\treturn this.remoteSettingsResource;\n\t\t}\n\t\tconst workbenchState = this.contextService.getWorkbenchState();\n\t\tif (workbenchState !== WorkbenchState.EMPTY) {\n\t\t\tconst workspace = this.contextService.getWorkspace();\n\n\t\t\tif (target === EditableConfigurationTarget.WORKSPACE) {\n\t\t\t\tif (workbenchState === WorkbenchState.WORKSPACE) {\n\t\t\t\t\treturn workspace.configuration ?? null;\n\t\t\t\t}\n\t\t\t\tif (workbenchState === WorkbenchState.FOLDER) {\n\t\t\t\t\treturn workspace.folders[0].toResource(relativePath);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (target === EditableConfigurationTarget.WORKSPACE_FOLDER) {\n\t\t\t\tif (resource) {\n\t\t\t\t\tconst folder =\n\t\t\t\t\t\tthis.contextService.getWorkspaceFolder(resource);\n\t\t\t\t\tif (folder) {\n\t\t\t\t\t\treturn folder.toResource(relativePath);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["ConfigurationEditingErrorCode", "EditableConfigurationTarget", "key", "resource", "jsonPath"]
}
