{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/configuration/common/jsonEditing.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from '../../../../base/common/uri.js';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { JSONPath } from '../../../../base/common/json.js';\n\nexport const IJSONEditingService = createDecorator<IJSONEditingService>('jsonEditingService');\n\nexport const enum JSONEditingErrorCode {\n\n\t/**\n\t * Error when trying to write to a file that contains JSON errors.\n\t */\n\tERROR_INVALID_FILE\n}\n\nexport class JSONEditingError extends Error {\n\tconstructor(message: string, public code: JSONEditingErrorCode) {\n\t\tsuper(message);\n\t}\n}\n\nexport interface IJSONValue {\n\tpath: JSONPath;\n\tvalue: any;\n}\n\nexport interface IJSONEditingService {\n\n\treadonly _serviceBrand: undefined;\n\n\twrite(resource: URI, values: IJSONValue[], save: boolean): Promise<void>;\n}\n"],
  "mappings": ";;AAKA,SAAS,WAAW;AACpB,SAAS,uBAAuB;AAChC,SAAS,gBAAgB;AAElB,MAAM,sBAAsB,gBAAqC,oBAAoB;AAErF,IAAW,uBAAX,kBAAWA,0BAAX;AAKN,EAAAA,4CAAA;AALiB,SAAAA;AAAA,GAAA;AAQX,MAAM,yBAAyB,MAAM;AAAA,EAC3C,YAAY,SAAwB,MAA4B;AAC/D,UAAM,OAAO;AADsB;AAAA,EAEpC;AAAA,EAtBD,OAmB4C;AAAA;AAAA;AAI5C;",
  "names": ["JSONEditingErrorCode"]
}
