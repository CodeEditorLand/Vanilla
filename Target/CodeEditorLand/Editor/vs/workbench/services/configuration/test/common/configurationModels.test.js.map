{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/configuration/test/common/configurationModels.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport assert from 'assert';\nimport { Registry } from '../../../../../platform/registry/common/platform.js';\nimport { StandaloneConfigurationModelParser, Configuration } from '../../common/configurationModels.js';\nimport { ConfigurationModelParser, ConfigurationModel, ConfigurationParseOptions } from '../../../../../platform/configuration/common/configurationModels.js';\nimport { IConfigurationRegistry, Extensions as ConfigurationExtensions, ConfigurationScope } from '../../../../../platform/configuration/common/configurationRegistry.js';\nimport { ResourceMap } from '../../../../../base/common/map.js';\nimport { WorkspaceFolder } from '../../../../../platform/workspace/common/workspace.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { Workspace } from '../../../../../platform/workspace/test/common/testWorkspace.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { NullLogService } from '../../../../../platform/log/common/log.js';\n\nsuite('FolderSettingsModelParser', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tsuiteSetup(() => {\n\t\tconst configurationRegistry = Registry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration);\n\t\tconfigurationRegistry.registerConfiguration({\n\t\t\t'id': 'FolderSettingsModelParser_1',\n\t\t\t'type': 'object',\n\t\t\t'properties': {\n\t\t\t\t'FolderSettingsModelParser.window': {\n\t\t\t\t\t'type': 'string',\n\t\t\t\t\t'default': 'isSet'\n\t\t\t\t},\n\t\t\t\t'FolderSettingsModelParser.resource': {\n\t\t\t\t\t'type': 'string',\n\t\t\t\t\t'default': 'isSet',\n\t\t\t\t\tscope: ConfigurationScope.RESOURCE,\n\t\t\t\t},\n\t\t\t\t'FolderSettingsModelParser.resourceLanguage': {\n\t\t\t\t\t'type': 'string',\n\t\t\t\t\t'default': 'isSet',\n\t\t\t\t\tscope: ConfigurationScope.LANGUAGE_OVERRIDABLE,\n\t\t\t\t},\n\t\t\t\t'FolderSettingsModelParser.application': {\n\t\t\t\t\t'type': 'string',\n\t\t\t\t\t'default': 'isSet',\n\t\t\t\t\tscope: ConfigurationScope.APPLICATION\n\t\t\t\t},\n\t\t\t\t'FolderSettingsModelParser.machine': {\n\t\t\t\t\t'type': 'string',\n\t\t\t\t\t'default': 'isSet',\n\t\t\t\t\tscope: ConfigurationScope.MACHINE\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n\n\ttest('parse all folder settings', () => {\n\t\tconst testObject = new ConfigurationModelParser('settings', new NullLogService());\n\n\t\ttestObject.parse(JSON.stringify({ 'FolderSettingsModelParser.window': 'window', 'FolderSettingsModelParser.resource': 'resource', 'FolderSettingsModelParser.application': 'application', 'FolderSettingsModelParser.machine': 'executable' }), { scopes: [ConfigurationScope.RESOURCE, ConfigurationScope.WINDOW] });\n\n\t\tconst expected = Object.create(null);\n\t\texpected['FolderSettingsModelParser'] = Object.create(null);\n\t\texpected['FolderSettingsModelParser']['window'] = 'window';\n\t\texpected['FolderSettingsModelParser']['resource'] = 'resource';\n\t\tassert.deepStrictEqual(testObject.configurationModel.contents, expected);\n\t});\n\n\ttest('parse resource folder settings', () => {\n\t\tconst testObject = new ConfigurationModelParser('settings', new NullLogService());\n\n\t\ttestObject.parse(JSON.stringify({ 'FolderSettingsModelParser.window': 'window', 'FolderSettingsModelParser.resource': 'resource', 'FolderSettingsModelParser.application': 'application', 'FolderSettingsModelParser.machine': 'executable' }), { scopes: [ConfigurationScope.RESOURCE] });\n\n\t\tconst expected = Object.create(null);\n\t\texpected['FolderSettingsModelParser'] = Object.create(null);\n\t\texpected['FolderSettingsModelParser']['resource'] = 'resource';\n\t\tassert.deepStrictEqual(testObject.configurationModel.contents, expected);\n\t});\n\n\ttest('parse resource and resource language settings', () => {\n\t\tconst testObject = new ConfigurationModelParser('settings', new NullLogService());\n\n\t\ttestObject.parse(JSON.stringify({ '[json]': { 'FolderSettingsModelParser.window': 'window', 'FolderSettingsModelParser.resource': 'resource', 'FolderSettingsModelParser.resourceLanguage': 'resourceLanguage', 'FolderSettingsModelParser.application': 'application', 'FolderSettingsModelParser.machine': 'executable' } }), { scopes: [ConfigurationScope.RESOURCE, ConfigurationScope.LANGUAGE_OVERRIDABLE] });\n\n\t\tconst expected = Object.create(null);\n\t\texpected['FolderSettingsModelParser'] = Object.create(null);\n\t\texpected['FolderSettingsModelParser']['resource'] = 'resource';\n\t\texpected['FolderSettingsModelParser']['resourceLanguage'] = 'resourceLanguage';\n\t\tassert.deepStrictEqual(testObject.configurationModel.overrides, [{ 'contents': expected, 'identifiers': ['json'], 'keys': ['FolderSettingsModelParser.resource', 'FolderSettingsModelParser.resourceLanguage'] }]);\n\t});\n\n\ttest('reparse folder settings excludes application and machine setting', () => {\n\t\tconst parseOptions: ConfigurationParseOptions = { scopes: [ConfigurationScope.RESOURCE, ConfigurationScope.WINDOW] };\n\t\tconst testObject = new ConfigurationModelParser('settings', new NullLogService());\n\n\t\ttestObject.parse(JSON.stringify({ 'FolderSettingsModelParser.resource': 'resource', 'FolderSettingsModelParser.anotherApplicationSetting': 'executable' }), parseOptions);\n\n\t\tlet expected = Object.create(null);\n\t\texpected['FolderSettingsModelParser'] = Object.create(null);\n\t\texpected['FolderSettingsModelParser']['resource'] = 'resource';\n\t\texpected['FolderSettingsModelParser']['anotherApplicationSetting'] = 'executable';\n\t\tassert.deepStrictEqual(testObject.configurationModel.contents, expected);\n\n\t\tconst configurationRegistry = Registry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration);\n\t\tconfigurationRegistry.registerConfiguration({\n\t\t\t'id': 'FolderSettingsModelParser_2',\n\t\t\t'type': 'object',\n\t\t\t'properties': {\n\t\t\t\t'FolderSettingsModelParser.anotherApplicationSetting': {\n\t\t\t\t\t'type': 'string',\n\t\t\t\t\t'default': 'isSet',\n\t\t\t\t\tscope: ConfigurationScope.APPLICATION\n\t\t\t\t},\n\t\t\t\t'FolderSettingsModelParser.anotherMachineSetting': {\n\t\t\t\t\t'type': 'string',\n\t\t\t\t\t'default': 'isSet',\n\t\t\t\t\tscope: ConfigurationScope.MACHINE\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\ttestObject.reparse(parseOptions);\n\n\t\texpected = Object.create(null);\n\t\texpected['FolderSettingsModelParser'] = Object.create(null);\n\t\texpected['FolderSettingsModelParser']['resource'] = 'resource';\n\t\tassert.deepStrictEqual(testObject.configurationModel.contents, expected);\n\t});\n\n});\n\nsuite('StandaloneConfigurationModelParser', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('parse tasks stand alone configuration model', () => {\n\t\tconst testObject = new StandaloneConfigurationModelParser('tasks', 'tasks', new NullLogService());\n\n\t\ttestObject.parse(JSON.stringify({ 'version': '1.1.1', 'tasks': [] }));\n\n\t\tconst expected = Object.create(null);\n\t\texpected['tasks'] = Object.create(null);\n\t\texpected['tasks']['version'] = '1.1.1';\n\t\texpected['tasks']['tasks'] = [];\n\t\tassert.deepStrictEqual(testObject.configurationModel.contents, expected);\n\t});\n\n});\n\nsuite('Workspace Configuration', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tconst defaultConfigurationModel = toConfigurationModel({\n\t\t'editor.lineNumbers': 'on',\n\t\t'editor.fontSize': 12,\n\t\t'window.zoomLevel': 1,\n\t\t'[markdown]': {\n\t\t\t'editor.wordWrap': 'off'\n\t\t},\n\t\t'window.title': 'custom',\n\t\t'workbench.enableTabs': false,\n\t\t'editor.insertSpaces': true\n\t});\n\n\ttest('Test compare same configurations', () => {\n\t\tconst workspace = new Workspace('a', [new WorkspaceFolder({ index: 0, name: 'a', uri: URI.file('folder1') }), new WorkspaceFolder({ index: 1, name: 'b', uri: URI.file('folder2') }), new WorkspaceFolder({ index: 2, name: 'c', uri: URI.file('folder3') })]);\n\t\tconst configuration1 = new Configuration(ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), new ResourceMap<ConfigurationModel>(), ConfigurationModel.createEmptyModel(new NullLogService()), new ResourceMap<ConfigurationModel>(), workspace, new NullLogService());\n\t\tconfiguration1.updateDefaultConfiguration(defaultConfigurationModel);\n\t\tconfiguration1.updateLocalUserConfiguration(toConfigurationModel({ 'window.title': 'native', '[typescript]': { 'editor.insertSpaces': false } }));\n\t\tconfiguration1.updateWorkspaceConfiguration(toConfigurationModel({ 'editor.lineNumbers': 'on' }));\n\t\tconfiguration1.updateFolderConfiguration(URI.file('folder1'), toConfigurationModel({ 'editor.fontSize': 14 }));\n\t\tconfiguration1.updateFolderConfiguration(URI.file('folder2'), toConfigurationModel({ 'editor.wordWrap': 'on' }));\n\n\t\tconst configuration2 = new Configuration(ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), new ResourceMap<ConfigurationModel>(), ConfigurationModel.createEmptyModel(new NullLogService()), new ResourceMap<ConfigurationModel>(), workspace, new NullLogService());\n\t\tconfiguration2.updateDefaultConfiguration(defaultConfigurationModel);\n\t\tconfiguration2.updateLocalUserConfiguration(toConfigurationModel({ 'window.title': 'native', '[typescript]': { 'editor.insertSpaces': false } }));\n\t\tconfiguration2.updateWorkspaceConfiguration(toConfigurationModel({ 'editor.lineNumbers': 'on' }));\n\t\tconfiguration2.updateFolderConfiguration(URI.file('folder1'), toConfigurationModel({ 'editor.fontSize': 14 }));\n\t\tconfiguration2.updateFolderConfiguration(URI.file('folder2'), toConfigurationModel({ 'editor.wordWrap': 'on' }));\n\n\t\tconst actual = configuration2.compare(configuration1);\n\n\t\tassert.deepStrictEqual(actual, { keys: [], overrides: [] });\n\t});\n\n\ttest('Test compare different configurations', () => {\n\t\tconst workspace = new Workspace('a', [new WorkspaceFolder({ index: 0, name: 'a', uri: URI.file('folder1') }), new WorkspaceFolder({ index: 1, name: 'b', uri: URI.file('folder2') }), new WorkspaceFolder({ index: 2, name: 'c', uri: URI.file('folder3') })]);\n\t\tconst configuration1 = new Configuration(ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), new ResourceMap<ConfigurationModel>(), ConfigurationModel.createEmptyModel(new NullLogService()), new ResourceMap<ConfigurationModel>(), workspace, new NullLogService());\n\t\tconfiguration1.updateDefaultConfiguration(defaultConfigurationModel);\n\t\tconfiguration1.updateLocalUserConfiguration(toConfigurationModel({ 'window.title': 'native', '[typescript]': { 'editor.insertSpaces': false } }));\n\t\tconfiguration1.updateWorkspaceConfiguration(toConfigurationModel({ 'editor.lineNumbers': 'on' }));\n\t\tconfiguration1.updateFolderConfiguration(URI.file('folder1'), toConfigurationModel({ 'editor.fontSize': 14 }));\n\t\tconfiguration1.updateFolderConfiguration(URI.file('folder2'), toConfigurationModel({ 'editor.wordWrap': 'on' }));\n\n\t\tconst configuration2 = new Configuration(ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), new ResourceMap<ConfigurationModel>(), ConfigurationModel.createEmptyModel(new NullLogService()), new ResourceMap<ConfigurationModel>(), workspace, new NullLogService());\n\t\tconfiguration2.updateDefaultConfiguration(defaultConfigurationModel);\n\t\tconfiguration2.updateLocalUserConfiguration(toConfigurationModel({ 'workbench.enableTabs': true, '[typescript]': { 'editor.insertSpaces': true } }));\n\t\tconfiguration2.updateWorkspaceConfiguration(toConfigurationModel({ 'editor.fontSize': 11 }));\n\t\tconfiguration2.updateFolderConfiguration(URI.file('folder1'), toConfigurationModel({ 'editor.insertSpaces': true }));\n\t\tconfiguration2.updateFolderConfiguration(URI.file('folder2'), toConfigurationModel({\n\t\t\t'[markdown]': {\n\t\t\t\t'editor.wordWrap': 'on',\n\t\t\t\t'editor.lineNumbers': 'relative'\n\t\t\t},\n\t\t}));\n\n\t\tconst actual = configuration2.compare(configuration1);\n\n\t\tassert.deepStrictEqual(actual, { keys: ['editor.wordWrap', 'editor.fontSize', '[markdown]', 'window.title', 'workbench.enableTabs', '[typescript]'], overrides: [['markdown', ['editor.lineNumbers', 'editor.wordWrap']], ['typescript', ['editor.insertSpaces']]] });\n\t});\n\n\n});\n\nfunction toConfigurationModel(obj: any): ConfigurationModel {\n\tconst parser = new ConfigurationModelParser('test', new NullLogService());\n\tparser.parse(JSON.stringify(obj));\n\treturn parser.configurationModel;\n}\n"],
  "mappings": "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",
  "names": []
}
