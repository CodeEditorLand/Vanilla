var g=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var S=(a,o,e,t)=>{for(var i=t>1?void 0:t?y(o,e):o,n=a.length-1,s;n>=0;n--)(s=a[n])&&(i=(t?s(o,e,i):s(i))||i);return t&&i&&g(o,e,i),i},r=(a,o)=>(e,t)=>o(e,t,a);import{process as P}from"../../../../base/parts/sandbox/electron-sandbox/globals.js";import{IAccessibilityService as _}from"../../../../platform/accessibility/common/accessibility.js";import{InstantiationType as b,registerSingleton as C}from"../../../../platform/instantiation/common/extensions.js";import{INativeHostService as M}from"../../../../platform/native/common/native.js";import{IProductService as k}from"../../../../platform/product/common/productService.js";import{IStorageService as w,StorageScope as d,StorageTarget as A}from"../../../../platform/storage/common/storage.js";import{ITelemetryService as H}from"../../../../platform/telemetry/common/telemetry.js";import{IUpdateService as W}from"../../../../platform/update/common/update.js";import{IWorkspaceContextService as E}from"../../../../platform/workspace/common/workspace.js";import{IEditorService as x}from"../../editor/common/editorService.js";import{INativeWorkbenchEnvironmentService as N}from"../../environment/electron-sandbox/environmentService.js";import{IExtensionService as R}from"../../extensions/common/extensions.js";import{IWorkbenchLayoutService as L}from"../../layout/browser/layoutService.js";import{ILifecycleService as T}from"../../lifecycle/common/lifecycle.js";import{IPaneCompositePartService as U}from"../../panecomposite/browser/panecomposite.js";import{AbstractTimerService as O,ITimerService as B}from"../browser/timerService.js";let v=class extends O{constructor(e,t,i,n,s,m,c,I,u,f,h,V,z){super(i,n,s,m,c,I,u,f,h);this._nativeHostService=e;this._environmentService=t;this._productService=V;this._storageService=z;this.setPerformanceMarks("main",t.window.perfMarks)}_isInitialStartup(){return!!this._environmentService.window.isInitialStartup}_didUseCachedData(){return D(this._productService,this._storageService,this._environmentService)}_getWindowCount(){return this._nativeHostService.getWindowCount()}async _extendStartupInfo(e){try{const[t,i,n,s]=await Promise.all([this._nativeHostService.getOSProperties(),this._nativeHostService.getOSStatistics(),this._nativeHostService.getOSVirtualMachineHint(),this._nativeHostService.isRunningUnderARM64Translation()]);e.totalmem=i.totalmem,e.freemem=i.freemem,e.platform=t.platform,e.release=t.release,e.arch=t.arch,e.loadavg=i.loadavg,e.isARM64Emulated=s;const m=await P.getProcessMemoryInfo();e.meminfo={workingSetSize:m.residentSet,privateBytes:m.private,sharedBytes:m.shared},e.isVMLikelyhood=Math.round(n*100);const c=t.cpus;c&&c.length>0&&(e.cpus={count:c.length,speed:c[0].speed,model:c[0].model})}catch{}}_shouldReportPerfMarks(){return super._shouldReportPerfMarks()||!!this._environmentService.args["prof-append-timers"]}};v=S([r(0,M),r(1,N),r(2,T),r(3,E),r(4,R),r(5,W),r(6,U),r(7,x),r(8,_),r(9,H),r(10,L),r(11,k),r(12,w)],v),C(B,v,b.Delayed);const l="perf/lastRunningCommit";let p;function D(a,o,e){return typeof p!="boolean"&&(!e.window.isCodeCaching||!a.commit?p=!1:o.get(l,d.APPLICATION)===a.commit?p=!0:(o.store(l,a.commit,d.APPLICATION,A.MACHINE),p=!1)),p}export{v as TimerService,D as didUseCachedData};
