{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/timer/electron-sandbox/timerService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { process } from \"../../../../base/parts/sandbox/electron-sandbox/globals.js\";\nimport { IAccessibilityService } from \"../../../../platform/accessibility/common/accessibility.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport { INativeHostService } from \"../../../../platform/native/common/native.js\";\nimport { IProductService } from \"../../../../platform/product/common/productService.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { IUpdateService } from \"../../../../platform/update/common/update.js\";\nimport { IWorkspaceContextService } from \"../../../../platform/workspace/common/workspace.js\";\nimport { IEditorService } from \"../../editor/common/editorService.js\";\nimport { INativeWorkbenchEnvironmentService } from \"../../environment/electron-sandbox/environmentService.js\";\nimport { IExtensionService } from \"../../extensions/common/extensions.js\";\nimport { IWorkbenchLayoutService } from \"../../layout/browser/layoutService.js\";\nimport { ILifecycleService } from \"../../lifecycle/common/lifecycle.js\";\nimport { IPaneCompositePartService } from \"../../panecomposite/browser/panecomposite.js\";\nimport {\n\tAbstractTimerService,\n\ttype IStartupMetrics,\n\tITimerService,\n\ttype Writeable,\n} from \"../browser/timerService.js\";\n\nexport class TimerService extends AbstractTimerService {\n\tconstructor(\n\t\t@INativeHostService private readonly _nativeHostService: INativeHostService,\n\t\t@INativeWorkbenchEnvironmentService private readonly _environmentService: INativeWorkbenchEnvironmentService,\n\t\t@ILifecycleService lifecycleService: ILifecycleService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService,\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@IUpdateService updateService: IUpdateService,\n\t\t@IPaneCompositePartService paneCompositeService: IPaneCompositePartService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IAccessibilityService accessibilityService: IAccessibilityService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IWorkbenchLayoutService layoutService: IWorkbenchLayoutService,\n\t\t@IProductService private readonly _productService: IProductService,\n\t\t@IStorageService private readonly _storageService: IStorageService\n\t) {\n\t\tsuper(lifecycleService, contextService, extensionService, updateService, paneCompositeService, editorService, accessibilityService, telemetryService, layoutService);\n\t\tthis.setPerformanceMarks('main', _environmentService.window.perfMarks);\n\t}\n\n\tprotected _isInitialStartup(): boolean {\n\t\treturn Boolean(this._environmentService.window.isInitialStartup);\n\t}\n\tprotected _didUseCachedData(): boolean {\n\t\treturn didUseCachedData(\n\t\t\tthis._productService,\n\t\t\tthis._storageService,\n\t\t\tthis._environmentService,\n\t\t);\n\t}\n\tprotected _getWindowCount(): Promise<number> {\n\t\treturn this._nativeHostService.getWindowCount();\n\t}\n\n\tprotected async _extendStartupInfo(\n\t\tinfo: Writeable<IStartupMetrics>,\n\t): Promise<void> {\n\t\ttry {\n\t\t\tconst [\n\t\t\t\tosProperties,\n\t\t\t\tosStatistics,\n\t\t\t\tvirtualMachineHint,\n\t\t\t\tisARM64Emulated,\n\t\t\t] = await Promise.all([\n\t\t\t\tthis._nativeHostService.getOSProperties(),\n\t\t\t\tthis._nativeHostService.getOSStatistics(),\n\t\t\t\tthis._nativeHostService.getOSVirtualMachineHint(),\n\t\t\t\tthis._nativeHostService.isRunningUnderARM64Translation(),\n\t\t\t]);\n\n\t\t\tinfo.totalmem = osStatistics.totalmem;\n\t\t\tinfo.freemem = osStatistics.freemem;\n\t\t\tinfo.platform = osProperties.platform;\n\t\t\tinfo.release = osProperties.release;\n\t\t\tinfo.arch = osProperties.arch;\n\t\t\tinfo.loadavg = osStatistics.loadavg;\n\t\t\tinfo.isARM64Emulated = isARM64Emulated;\n\n\t\t\tconst processMemoryInfo = await process.getProcessMemoryInfo();\n\t\t\tinfo.meminfo = {\n\t\t\t\tworkingSetSize: processMemoryInfo.residentSet,\n\t\t\t\tprivateBytes: processMemoryInfo.private,\n\t\t\t\tsharedBytes: processMemoryInfo.shared,\n\t\t\t};\n\n\t\t\tinfo.isVMLikelyhood = Math.round(virtualMachineHint * 100);\n\n\t\t\tconst rawCpus = osProperties.cpus;\n\t\t\tif (rawCpus && rawCpus.length > 0) {\n\t\t\t\tinfo.cpus = {\n\t\t\t\t\tcount: rawCpus.length,\n\t\t\t\t\tspeed: rawCpus[0].speed,\n\t\t\t\t\tmodel: rawCpus[0].model,\n\t\t\t\t};\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t// ignore, be on the safe side with these hardware method calls\n\t\t}\n\t}\n\n\tprotected override _shouldReportPerfMarks(): boolean {\n\t\t// always send when running with the prof-append-timers flag\n\t\treturn (\n\t\t\tsuper._shouldReportPerfMarks() ||\n\t\t\tBoolean(this._environmentService.args[\"prof-append-timers\"])\n\t\t);\n\t}\n}\n\nregisterSingleton(ITimerService, TimerService, InstantiationType.Delayed);\n\n//#region cached data logic\n\nconst lastRunningCommitStorageKey = \"perf/lastRunningCommit\";\nlet _didUseCachedData: boolean | undefined;\n\nexport function didUseCachedData(\n\tproductService: IProductService,\n\tstorageService: IStorageService,\n\tenvironmentService: INativeWorkbenchEnvironmentService,\n): boolean {\n\t// browser code loading: only a guess based on\n\t// this being the first start with the commit\n\t// or subsequent\n\tif (typeof _didUseCachedData !== \"boolean\") {\n\t\tif (\n\t\t\t!environmentService.window.isCodeCaching ||\n\t\t\t!productService.commit\n\t\t) {\n\t\t\t_didUseCachedData = false; // we only produce cached data whith commit and code cache path\n\t\t} else if (\n\t\t\tstorageService.get(\n\t\t\t\tlastRunningCommitStorageKey,\n\t\t\t\tStorageScope.APPLICATION,\n\t\t\t) === productService.commit\n\t\t) {\n\t\t\t_didUseCachedData = true; // subsequent start on same commit, assume cached data is there\n\t\t} else {\n\t\t\tstorageService.store(\n\t\t\t\tlastRunningCommitStorageKey,\n\t\t\t\tproductService.commit,\n\t\t\t\tStorageScope.APPLICATION,\n\t\t\t\tStorageTarget.MACHINE,\n\t\t\t);\n\t\t\t_didUseCachedData = false; // first time start on commit, assume cached data is not yet there\n\t\t}\n\t}\n\treturn _didUseCachedData;\n}\n\n//#endregion\n"],
  "mappings": "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",
  "names": []
}
