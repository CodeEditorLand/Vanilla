var p=Object.defineProperty;var b=Object.getOwnPropertyDescriptor;var l=(a,e,i,r)=>{for(var o=r>1?void 0:r?b(e,i):e,t=a.length-1,d;t>=0;t--)(d=a[t])&&(o=(r?d(e,i,o):d(o))||o);return r&&o&&p(e,i,o),o},m=(a,e)=>(i,r)=>e(i,r,a);import{createCancelablePromise as g,raceCancellablePromises as v,timeout as E}from"../../../../base/common/async.js";import{StopWatch as u}from"../../../../base/common/stopwatch.js";import{InstantiationType as y,registerSingleton as f}from"../../../../platform/instantiation/common/extensions.js";import{createDecorator as h}from"../../../../platform/instantiation/common/instantiation.js";import{ILogService as I}from"../../../../platform/log/common/log.js";const P=h("IAiEmbeddingVectorService");let s=class{constructor(e){this.logService=e}_serviceBrand;static DEFAULT_TIMEOUT=1e3*10;_providers=[];isEnabled(){return this._providers.length>0}registerAiEmbeddingVectorProvider(e,i){return this._providers.push(i),{dispose:()=>{const r=this._providers.indexOf(i);r>=0&&this._providers.splice(r,1)}}}async getEmbeddingVector(e,i){if(this._providers.length===0)throw new Error("No embedding vector providers registered");const r=u.create(),o=[],t=E(s.DEFAULT_TIMEOUT),d=i.onCancellationRequested(()=>{d.dispose(),t.cancel()});for(const n of this._providers)o.push(g(async c=>{try{return await n.provideAiEmbeddingVector(Array.isArray(e)?e:[e],c)}catch{}throw await t,new Error("Embedding vector provider timed out")}));o.push(g(async n=>{const c=n.onCancellationRequested(()=>{t.cancel(),c.dispose()});throw await t,new Error("Embedding vector provider timed out")}));try{const n=await v(o);return n.length===1?n[0]:n}finally{r.stop(),this.logService.trace(`[AiEmbeddingVectorService]: getEmbeddingVector took ${r.elapsed()}ms`)}}};s=l([m(0,I)],s),f(P,s,y.Delayed);export{s as AiEmbeddingVectorService,P as IAiEmbeddingVectorService};
