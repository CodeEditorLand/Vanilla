{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/untitled/common/untitledTextEditorHandler.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport { isEqual, toLocalResource } from \"../../../../base/common/resources.js\";\nimport { URI, type UriComponents } from \"../../../../base/common/uri.js\";\nimport { PLAINTEXT_LANGUAGE_ID } from \"../../../../editor/common/languages/modesRegistry.js\";\nimport type { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport type { IWorkbenchContribution } from \"../../../common/contributions.js\";\nimport type { IEditorSerializer } from \"../../../common/editor.js\";\nimport type { EditorInput } from \"../../../common/editor/editorInput.js\";\nimport { IWorkbenchEnvironmentService } from \"../../environment/common/environmentService.js\";\nimport { IFilesConfigurationService } from \"../../filesConfiguration/common/filesConfigurationService.js\";\nimport { IPathService } from \"../../path/common/pathService.js\";\nimport { ITextEditorService } from \"../../textfile/common/textEditorService.js\";\nimport {\n\ttype IWorkingCopyIdentifier,\n\tNO_TYPE_ID,\n} from \"../../workingCopy/common/workingCopy.js\";\nimport {\n\ttype IWorkingCopyEditorHandler,\n\tIWorkingCopyEditorService,\n} from \"../../workingCopy/common/workingCopyEditorService.js\";\nimport { UntitledTextEditorInput } from \"./untitledTextEditorInput.js\";\nimport { IUntitledTextEditorService } from \"./untitledTextEditorService.js\";\n\ninterface ISerializedUntitledTextEditorInput {\n\treadonly resourceJSON: UriComponents;\n\treadonly modeId: string | undefined; // should be `languageId` but is kept for backwards compatibility\n\treadonly encoding: string | undefined;\n}\n\nexport class UntitledTextEditorInputSerializer implements IEditorSerializer {\n\tconstructor(\n\t\t@IFilesConfigurationService private readonly filesConfigurationService: IFilesConfigurationService,\n\t\t@IWorkbenchEnvironmentService private readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IPathService private readonly pathService: IPathService\n\t) { }\n\n\tcanSerialize(editorInput: EditorInput): boolean {\n\t\treturn (\n\t\t\tthis.filesConfigurationService.isHotExitEnabled &&\n\t\t\t!editorInput.isDisposed()\n\t\t);\n\t}\n\n\tserialize(editorInput: EditorInput): string | undefined {\n\t\tif (!this.canSerialize(editorInput)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst untitledTextEditorInput = editorInput as UntitledTextEditorInput;\n\n\t\tlet resource = untitledTextEditorInput.resource;\n\t\tif (untitledTextEditorInput.hasAssociatedFilePath) {\n\t\t\tresource = toLocalResource(\n\t\t\t\tresource,\n\t\t\t\tthis.environmentService.remoteAuthority,\n\t\t\t\tthis.pathService.defaultUriScheme,\n\t\t\t); // untitled with associated file path use the local schema\n\t\t}\n\n\t\t// Language: only remember language if it is either specific (not text)\n\t\t// or if the language was explicitly set by the user. We want to preserve\n\t\t// this information across restarts and not set the language unless\n\t\t// this is the case.\n\t\tlet languageId: string | undefined;\n\t\tconst languageIdCandidate = untitledTextEditorInput.getLanguageId();\n\t\tif (languageIdCandidate !== PLAINTEXT_LANGUAGE_ID) {\n\t\t\tlanguageId = languageIdCandidate;\n\t\t} else if (untitledTextEditorInput.hasLanguageSetExplicitly) {\n\t\t\tlanguageId = languageIdCandidate;\n\t\t}\n\n\t\tconst serialized: ISerializedUntitledTextEditorInput = {\n\t\t\tresourceJSON: resource.toJSON(),\n\t\t\tmodeId: languageId,\n\t\t\tencoding: untitledTextEditorInput.getEncoding(),\n\t\t};\n\n\t\treturn JSON.stringify(serialized);\n\t}\n\n\tdeserialize(\n\t\tinstantiationService: IInstantiationService,\n\t\tserializedEditorInput: string,\n\t): UntitledTextEditorInput {\n\t\treturn instantiationService.invokeFunction((accessor) => {\n\t\t\tconst deserialized: ISerializedUntitledTextEditorInput = JSON.parse(\n\t\t\t\tserializedEditorInput,\n\t\t\t);\n\t\t\tconst resource = URI.revive(deserialized.resourceJSON);\n\t\t\tconst languageId = deserialized.modeId;\n\t\t\tconst encoding = deserialized.encoding;\n\n\t\t\treturn accessor\n\t\t\t\t.get(ITextEditorService)\n\t\t\t\t.createTextEditor({\n\t\t\t\t\tresource,\n\t\t\t\t\tlanguageId,\n\t\t\t\t\tencoding,\n\t\t\t\t\tforceUntitled: true,\n\t\t\t\t}) as UntitledTextEditorInput;\n\t\t});\n\t}\n}\n\nexport class UntitledTextEditorWorkingCopyEditorHandler\n\textends Disposable\n\timplements IWorkbenchContribution, IWorkingCopyEditorHandler\n{\n\tstatic readonly ID =\n\t\t\"workbench.contrib.untitledTextEditorWorkingCopyEditorHandler\";\n\n\tconstructor(\n\t\t@IWorkingCopyEditorService workingCopyEditorService: IWorkingCopyEditorService,\n\t\t@IWorkbenchEnvironmentService private readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IPathService private readonly pathService: IPathService,\n\t\t@ITextEditorService private readonly textEditorService: ITextEditorService,\n\t\t@IUntitledTextEditorService private readonly untitledTextEditorService: IUntitledTextEditorService\n\t) {\n\t\tsuper();\n\n\t\tthis._register(workingCopyEditorService.registerHandler(this));\n\t}\n\n\thandles(workingCopy: IWorkingCopyIdentifier): boolean {\n\t\treturn (\n\t\t\tworkingCopy.resource.scheme === Schemas.untitled &&\n\t\t\tworkingCopy.typeId === NO_TYPE_ID\n\t\t);\n\t}\n\n\tisOpen(workingCopy: IWorkingCopyIdentifier, editor: EditorInput): boolean {\n\t\tif (!this.handles(workingCopy)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn (\n\t\t\teditor instanceof UntitledTextEditorInput &&\n\t\t\tisEqual(workingCopy.resource, editor.resource)\n\t\t);\n\t}\n\n\tcreateEditor(workingCopy: IWorkingCopyIdentifier): EditorInput {\n\t\tlet editorInputResource: URI;\n\n\t\t// If the untitled has an associated resource,\n\t\t// ensure to restore the local resource it had\n\t\tif (\n\t\t\tthis.untitledTextEditorService.isUntitledWithAssociatedResource(\n\t\t\t\tworkingCopy.resource,\n\t\t\t)\n\t\t) {\n\t\t\teditorInputResource = toLocalResource(\n\t\t\t\tworkingCopy.resource,\n\t\t\t\tthis.environmentService.remoteAuthority,\n\t\t\t\tthis.pathService.defaultUriScheme,\n\t\t\t);\n\t\t} else {\n\t\t\teditorInputResource = workingCopy.resource;\n\t\t}\n\n\t\treturn this.textEditorService.createTextEditor({\n\t\t\tresource: editorInputResource,\n\t\t\tforceUntitled: true,\n\t\t});\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
