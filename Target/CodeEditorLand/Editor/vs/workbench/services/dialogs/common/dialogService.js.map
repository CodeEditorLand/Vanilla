{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/dialogs/common/dialogService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport Severity from \"../../../../base/common/severity.js\";\nimport {\n\ttype IAsyncPromptResult,\n\ttype IAsyncPromptResultWithCancel,\n\ttype IConfirmation,\n\ttype IConfirmationResult,\n\tIDialogService,\n\ttype IInput,\n\ttype IInputResult,\n\ttype IPrompt,\n\ttype IPromptResult,\n\ttype IPromptResultWithCancel,\n\ttype IPromptWithCustomCancel,\n\ttype IPromptWithDefaultCancel,\n} from \"../../../../platform/dialogs/common/dialogs.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { DialogsModel } from \"../../../common/dialogs.js\";\nimport { IWorkbenchEnvironmentService } from \"../../environment/common/environmentService.js\";\n\nexport class DialogService extends Disposable implements IDialogService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\treadonly model = this._register(new DialogsModel());\n\n\treadonly onWillShowDialog = this.model.onWillShowDialog;\n\n\treadonly onDidShowDialog = this.model.onDidShowDialog;\n\n\tconstructor(\n\t\t@IWorkbenchEnvironmentService\n\t\tprivate readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t\tsuper();\n\t}\n\n\tprivate skipDialogs(): boolean {\n\t\tif (\n\t\t\tthis.environmentService.isExtensionDevelopment &&\n\t\t\tthis.environmentService.extensionTestsLocationURI\n\t\t) {\n\t\t\treturn true; // integration tests\n\t\t}\n\n\t\treturn !!this.environmentService.enableSmokeTestDriver; // smoke tests\n\t}\n\n\tasync confirm(confirmation: IConfirmation): Promise<IConfirmationResult> {\n\t\tif (this.skipDialogs()) {\n\t\t\tthis.logService.trace(\n\t\t\t\t\"DialogService: refused to show confirmation dialog in tests.\",\n\t\t\t);\n\n\t\t\treturn { confirmed: true };\n\t\t}\n\n\t\tconst handle = this.model.show({ confirmArgs: { confirmation } });\n\n\t\treturn (await handle.result) as IConfirmationResult;\n\t}\n\n\tprompt<T>(\n\t\tprompt: IPromptWithCustomCancel<T>,\n\t): Promise<IPromptResultWithCancel<T>>;\n\tprompt<T>(prompt: IPromptWithDefaultCancel<T>): Promise<IPromptResult<T>>;\n\tprompt<T>(prompt: IPrompt<T>): Promise<IPromptResult<T>>;\n\tasync prompt<T>(\n\t\tprompt:\n\t\t\t| IPrompt<T>\n\t\t\t| IPromptWithCustomCancel<T>\n\t\t\t| IPromptWithDefaultCancel<T>,\n\t): Promise<IPromptResult<T> | IPromptResultWithCancel<T>> {\n\t\tif (this.skipDialogs()) {\n\t\t\tthrow new Error(\n\t\t\t\t`DialogService: refused to show dialog in tests. Contents: ${prompt.message}`,\n\t\t\t);\n\t\t}\n\n\t\tconst handle = this.model.show({ promptArgs: { prompt } });\n\n\t\tconst dialogResult = (await handle.result) as\n\t\t\t| IAsyncPromptResult<T>\n\t\t\t| IAsyncPromptResultWithCancel<T>;\n\n\t\treturn {\n\t\t\tresult: await dialogResult.result,\n\t\t\tcheckboxChecked: dialogResult.checkboxChecked,\n\t\t};\n\t}\n\n\tasync input(input: IInput): Promise<IInputResult> {\n\t\tif (this.skipDialogs()) {\n\t\t\tthrow new Error(\n\t\t\t\t\"DialogService: refused to show input dialog in tests.\",\n\t\t\t);\n\t\t}\n\n\t\tconst handle = this.model.show({ inputArgs: { input } });\n\n\t\treturn (await handle.result) as IInputResult;\n\t}\n\n\tasync info(message: string, detail?: string): Promise<void> {\n\t\tawait this.prompt({ type: Severity.Info, message, detail });\n\t}\n\n\tasync warn(message: string, detail?: string): Promise<void> {\n\t\tawait this.prompt({ type: Severity.Warning, message, detail });\n\t}\n\n\tasync error(message: string, detail?: string): Promise<void> {\n\t\tawait this.prompt({ type: Severity.Error, message, detail });\n\t}\n\n\tasync about(): Promise<void> {\n\t\tif (this.skipDialogs()) {\n\t\t\tthrow new Error(\n\t\t\t\t\"DialogService: refused to show about dialog in tests.\",\n\t\t\t);\n\t\t}\n\n\t\tconst handle = this.model.show({});\n\t\tawait handle.result;\n\t}\n}\n\nregisterSingleton(IDialogService, DialogService, InstantiationType.Delayed);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,kBAAkB;AAC3B,OAAO,cAAc;AACrB;AAAA,EAKC;AAAA,OAQM;AACP;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,mBAAmB;AAC5B,SAAS,oBAAoB;AAC7B,SAAS,oCAAoC;AAEtC,IAAM,gBAAN,cAA4B,WAAqC;AAAA,EASvE,YAEkB,oBACa,YAC7B;AACD,UAAM;AAHW;AACa;AAAA,EAG/B;AAAA,EA5CD,OA6BwE;AAAA;AAAA;AAAA,EAG9D,QAAQ,KAAK,UAAU,IAAI,aAAa,CAAC;AAAA,EAEzC,mBAAmB,KAAK,MAAM;AAAA,EAE9B,kBAAkB,KAAK,MAAM;AAAA,EAU9B,cAAuB;AAC9B,QACC,KAAK,mBAAmB,0BACxB,KAAK,mBAAmB,2BACvB;AACD,aAAO;AAAA,IACR;AAEA,WAAO,CAAC,CAAC,KAAK,mBAAmB;AAAA,EAClC;AAAA,EAEA,MAAM,QAAQ,cAA2D;AACxE,QAAI,KAAK,YAAY,GAAG;AACvB,WAAK,WAAW;AAAA,QACf;AAAA,MACD;AAEA,aAAO,EAAE,WAAW,KAAK;AAAA,IAC1B;AAEA,UAAM,SAAS,KAAK,MAAM,KAAK,EAAE,aAAa,EAAE,aAAa,EAAE,CAAC;AAEhE,WAAQ,MAAM,OAAO;AAAA,EACtB;AAAA,EAOA,MAAM,OACL,QAIyD;AACzD,QAAI,KAAK,YAAY,GAAG;AACvB,YAAM,IAAI;AAAA,QACT,6DAA6D,OAAO,OAAO;AAAA,MAC5E;AAAA,IACD;AAEA,UAAM,SAAS,KAAK,MAAM,KAAK,EAAE,YAAY,EAAE,OAAO,EAAE,CAAC;AAEzD,UAAM,eAAgB,MAAM,OAAO;AAInC,WAAO;AAAA,MACN,QAAQ,MAAM,aAAa;AAAA,MAC3B,iBAAiB,aAAa;AAAA,IAC/B;AAAA,EACD;AAAA,EAEA,MAAM,MAAM,OAAsC;AACjD,QAAI,KAAK,YAAY,GAAG;AACvB,YAAM,IAAI;AAAA,QACT;AAAA,MACD;AAAA,IACD;AAEA,UAAM,SAAS,KAAK,MAAM,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,CAAC;AAEvD,WAAQ,MAAM,OAAO;AAAA,EACtB;AAAA,EAEA,MAAM,KAAK,SAAiB,QAAgC;AAC3D,UAAM,KAAK,OAAO,EAAE,MAAM,SAAS,MAAM,SAAS,OAAO,CAAC;AAAA,EAC3D;AAAA,EAEA,MAAM,KAAK,SAAiB,QAAgC;AAC3D,UAAM,KAAK,OAAO,EAAE,MAAM,SAAS,SAAS,SAAS,OAAO,CAAC;AAAA,EAC9D;AAAA,EAEA,MAAM,MAAM,SAAiB,QAAgC;AAC5D,UAAM,KAAK,OAAO,EAAE,MAAM,SAAS,OAAO,SAAS,OAAO,CAAC;AAAA,EAC5D;AAAA,EAEA,MAAM,QAAuB;AAC5B,QAAI,KAAK,YAAY,GAAG;AACvB,YAAM,IAAI;AAAA,QACT;AAAA,MACD;AAAA,IACD;AAEA,UAAM,SAAS,KAAK,MAAM,KAAK,CAAC,CAAC;AACjC,UAAM,OAAO;AAAA,EACd;AACD;AAzGa,gBAAN;AAAA,EAUJ;AAAA,EAEA;AAAA,GAZU;AA2Gb,kBAAkB,gBAAgB,eAAe,kBAAkB,OAAO;",
  "names": []
}
