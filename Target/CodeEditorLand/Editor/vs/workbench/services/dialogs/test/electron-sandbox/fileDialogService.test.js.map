{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/dialogs/test/electron-sandbox/fileDialogService.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport * as sinon from 'sinon';\nimport { Schemas } from '../../../../../base/common/network.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { mock } from '../../../../../base/test/common/mock.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { ICodeEditorService } from '../../../../../editor/browser/services/codeEditorService.js';\nimport { ILanguageService } from '../../../../../editor/common/languages/language.js';\nimport { ICommandService } from '../../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { TestConfigurationService } from '../../../../../platform/configuration/test/common/testConfigurationService.js';\nimport { IDialogService, IFileDialogService, IOpenDialogOptions, ISaveDialogOptions } from '../../../../../platform/dialogs/common/dialogs.js';\nimport { IFileService } from '../../../../../platform/files/common/files.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { TestInstantiationService } from '../../../../../platform/instantiation/test/common/instantiationServiceMock.js';\nimport { ILabelService } from '../../../../../platform/label/common/label.js';\nimport { ILogService } from '../../../../../platform/log/common/log.js';\nimport { INativeHostService } from '../../../../../platform/native/common/native.js';\nimport { IOpenerService } from '../../../../../platform/opener/common/opener.js';\nimport { IWorkspaceContextService } from '../../../../../platform/workspace/common/workspace.js';\nimport { IWorkspacesService } from '../../../../../platform/workspaces/common/workspaces.js';\nimport { ISimpleFileDialog } from '../../browser/simpleFileDialog.js';\nimport { FileDialogService } from '../../electron-sandbox/fileDialogService.js';\nimport { IEditorService } from '../../../editor/common/editorService.js';\nimport { BrowserWorkbenchEnvironmentService } from '../../../environment/browser/environmentService.js';\nimport { IWorkbenchEnvironmentService } from '../../../environment/common/environmentService.js';\nimport { IHistoryService } from '../../../history/common/history.js';\nimport { IHostService } from '../../../host/browser/host.js';\nimport { IPathService } from '../../../path/common/pathService.js';\nimport { BrowserWorkspaceEditingService } from '../../../workspaces/browser/workspaceEditingService.js';\nimport { IWorkspaceEditingService } from '../../../workspaces/common/workspaceEditing.js';\nimport { workbenchInstantiationService } from '../../../../test/browser/workbenchTestServices.js';\n\nclass TestFileDialogService extends FileDialogService {\n\tconstructor(\n\t\tprivate simple: ISimpleFileDialog,\n\t\t@IHostService hostService: IHostService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService,\n\t\t@IHistoryService historyService: IHistoryService,\n\t\t@IWorkbenchEnvironmentService environmentService: IWorkbenchEnvironmentService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IOpenerService openerService: IOpenerService,\n\t\t@INativeHostService nativeHostService: INativeHostService,\n\t\t@IDialogService dialogService: IDialogService,\n\t\t@ILanguageService languageService: ILanguageService,\n\t\t@IWorkspacesService workspacesService: IWorkspacesService,\n\t\t@ILabelService labelService: ILabelService,\n\t\t@IPathService pathService: IPathService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t\t@ILogService logService: ILogService\n\t) {\n\t\tsuper(hostService, contextService, historyService, environmentService, instantiationService, configurationService, fileService,\n\t\t\topenerService, nativeHostService, dialogService, languageService, workspacesService, labelService, pathService, commandService, editorService, codeEditorService, logService);\n\t}\n\n\tprotected override getSimpleFileDialog() {\n\t\tif (this.simple) {\n\t\t\treturn this.simple;\n\t\t} else {\n\t\t\treturn super.getSimpleFileDialog();\n\t\t}\n\t}\n}\n\nsuite('FileDialogService', function () {\n\n\tlet instantiationService: TestInstantiationService;\n\tconst disposables = ensureNoDisposablesAreLeakedInTestSuite();\n\tconst testFile: URI = URI.file('/test/file');\n\n\tsetup(async function () {\n\t\tdisposables.add(instantiationService = workbenchInstantiationService(undefined, disposables));\n\t\tconst configurationService = new TestConfigurationService();\n\t\tawait configurationService.setUserConfiguration('files', { simpleDialog: { enable: true } });\n\t\tinstantiationService.stub(IConfigurationService, configurationService);\n\n\t});\n\n\ttest('Local - open/save workspaces availableFilesystems', async function () {\n\t\tclass TestSimpleFileDialog implements ISimpleFileDialog {\n\t\t\tasync showOpenDialog(options: IOpenDialogOptions): Promise<URI | undefined> {\n\t\t\t\tassert.strictEqual(options.availableFileSystems?.length, 1);\n\t\t\t\tassert.strictEqual(options.availableFileSystems[0], Schemas.file);\n\t\t\t\treturn testFile;\n\t\t\t}\n\t\t\tasync showSaveDialog(options: ISaveDialogOptions): Promise<URI | undefined> {\n\t\t\t\tassert.strictEqual(options.availableFileSystems?.length, 1);\n\t\t\t\tassert.strictEqual(options.availableFileSystems[0], Schemas.file);\n\t\t\t\treturn testFile;\n\t\t\t}\n\t\t\tdispose(): void { }\n\t\t}\n\n\t\tconst dialogService = instantiationService.createInstance(TestFileDialogService, new TestSimpleFileDialog());\n\t\tinstantiationService.set(IFileDialogService, dialogService);\n\t\tconst workspaceService: IWorkspaceEditingService = disposables.add(instantiationService.createInstance(BrowserWorkspaceEditingService));\n\t\tassert.strictEqual((await workspaceService.pickNewWorkspacePath())?.path.startsWith(testFile.path), true);\n\t\tassert.strictEqual(await dialogService.pickWorkspaceAndOpen({}), undefined);\n\t});\n\n\ttest('Virtual - open/save workspaces availableFilesystems', async function () {\n\t\tclass TestSimpleFileDialog {\n\t\t\tasync showOpenDialog(options: IOpenDialogOptions): Promise<URI | undefined> {\n\t\t\t\tassert.strictEqual(options.availableFileSystems?.length, 1);\n\t\t\t\tassert.strictEqual(options.availableFileSystems[0], Schemas.file);\n\t\t\t\treturn testFile;\n\t\t\t}\n\t\t\tasync showSaveDialog(options: ISaveDialogOptions): Promise<URI | undefined> {\n\t\t\t\tassert.strictEqual(options.availableFileSystems?.length, 1);\n\t\t\t\tassert.strictEqual(options.availableFileSystems[0], Schemas.file);\n\t\t\t\treturn testFile;\n\t\t\t}\n\t\t\tdispose(): void { }\n\t\t}\n\n\t\tinstantiationService.stub(IPathService, new class {\n\t\t\tdefaultUriScheme: string = 'vscode-virtual-test';\n\t\t\tuserHome = async () => URI.file('/user/home');\n\t\t} as IPathService);\n\t\tconst dialogService = instantiationService.createInstance(TestFileDialogService, new TestSimpleFileDialog());\n\t\tinstantiationService.set(IFileDialogService, dialogService);\n\t\tconst workspaceService: IWorkspaceEditingService = disposables.add(instantiationService.createInstance(BrowserWorkspaceEditingService));\n\t\tassert.strictEqual((await workspaceService.pickNewWorkspacePath())?.path.startsWith(testFile.path), true);\n\t\tassert.strictEqual(await dialogService.pickWorkspaceAndOpen({}), undefined);\n\t});\n\n\ttest('Remote - open/save workspaces availableFilesystems', async function () {\n\t\tclass TestSimpleFileDialog implements ISimpleFileDialog {\n\t\t\tasync showOpenDialog(options: IOpenDialogOptions): Promise<URI | undefined> {\n\t\t\t\tassert.strictEqual(options.availableFileSystems?.length, 2);\n\t\t\t\tassert.strictEqual(options.availableFileSystems[0], Schemas.vscodeRemote);\n\t\t\t\tassert.strictEqual(options.availableFileSystems[1], Schemas.file);\n\t\t\t\treturn testFile;\n\t\t\t}\n\t\t\tasync showSaveDialog(options: ISaveDialogOptions): Promise<URI | undefined> {\n\t\t\t\tassert.strictEqual(options.availableFileSystems?.length, 2);\n\t\t\t\tassert.strictEqual(options.availableFileSystems[0], Schemas.vscodeRemote);\n\t\t\t\tassert.strictEqual(options.availableFileSystems[1], Schemas.file);\n\t\t\t\treturn testFile;\n\t\t\t}\n\t\t\tdispose(): void { }\n\t\t}\n\n\t\tinstantiationService.set(IWorkbenchEnvironmentService, new class extends mock<BrowserWorkbenchEnvironmentService>() {\n\t\t\toverride get remoteAuthority() {\n\t\t\t\treturn 'testRemote';\n\t\t\t}\n\t\t});\n\t\tinstantiationService.stub(IPathService, new class {\n\t\t\tdefaultUriScheme: string = Schemas.vscodeRemote;\n\t\t\tuserHome = async () => URI.file('/user/home');\n\t\t} as IPathService);\n\t\tconst dialogService = instantiationService.createInstance(TestFileDialogService, new TestSimpleFileDialog());\n\t\tinstantiationService.set(IFileDialogService, dialogService);\n\t\tconst workspaceService: IWorkspaceEditingService = disposables.add(instantiationService.createInstance(BrowserWorkspaceEditingService));\n\t\tassert.strictEqual((await workspaceService.pickNewWorkspacePath())?.path.startsWith(testFile.path), true);\n\t\tassert.strictEqual(await dialogService.pickWorkspaceAndOpen({}), undefined);\n\t});\n\n\ttest('Remote - filters default files/folders to RA (#195938)', async function () {\n\t\tclass TestSimpleFileDialog implements ISimpleFileDialog {\n\t\t\tasync showOpenDialog(): Promise<URI | undefined> {\n\t\t\t\treturn testFile;\n\t\t\t}\n\t\t\tasync showSaveDialog(): Promise<URI | undefined> {\n\t\t\t\treturn testFile;\n\t\t\t}\n\t\t\tdispose(): void { }\n\t\t}\n\t\tinstantiationService.set(IWorkbenchEnvironmentService, new class extends mock<BrowserWorkbenchEnvironmentService>() {\n\t\t\toverride get remoteAuthority() {\n\t\t\t\treturn 'testRemote';\n\t\t\t}\n\t\t});\n\t\tinstantiationService.stub(IPathService, new class {\n\t\t\tdefaultUriScheme: string = Schemas.vscodeRemote;\n\t\t\tuserHome = async () => URI.file('/user/home');\n\t\t} as IPathService);\n\n\n\t\tconst dialogService = instantiationService.createInstance(TestFileDialogService, new TestSimpleFileDialog());\n\t\tconst historyService = instantiationService.get(IHistoryService);\n\t\tconst getLastActiveWorkspaceRoot = sinon.spy(historyService, 'getLastActiveWorkspaceRoot');\n\t\tconst getLastActiveFile = sinon.spy(historyService, 'getLastActiveFile');\n\n\t\tawait dialogService.defaultFilePath();\n\t\tassert.deepStrictEqual(getLastActiveFile.args, [[Schemas.vscodeRemote, 'testRemote']]);\n\t\tassert.deepStrictEqual(getLastActiveWorkspaceRoot.args, [[Schemas.vscodeRemote, 'testRemote']]);\n\n\t\tawait dialogService.defaultFolderPath();\n\t\tassert.deepStrictEqual(getLastActiveWorkspaceRoot.args[1], [Schemas.vscodeRemote, 'testRemote']);\n\t});\n});\n"],
  "mappings": ";;;;;;;;;;;;AAKA,OAAO,YAAY;AACnB,YAAY,WAAW;AACvB,SAAS,eAAe;AACxB,SAAS,WAAW;AACpB,SAAS,YAAY;AACrB,SAAS,+CAA+C;AACxD,SAAS,0BAA0B;AACnC,SAAS,wBAAwB;AACjC,SAAS,uBAAuB;AAChC,SAAS,6BAA6B;AACtC,SAAS,gCAAgC;AACzC,SAAS,gBAAgB,oBAAoB,oBAAoB,0BAA0B;AAC3F,SAAS,oBAAoB;AAC7B,SAAS,6BAA6B;AACtC,SAAS,gCAAgC;AACzC,SAAS,qBAAqB;AAC9B,SAAS,mBAAmB;AAC5B,SAAS,0BAA0B;AACnC,SAAS,sBAAsB;AAC/B,SAAS,gCAAgC;AACzC,SAAS,0BAA0B;AACnC,SAAS,yBAAyB;AAClC,SAAS,yBAAyB;AAClC,SAAS,sBAAsB;AAC/B,SAAS,0CAA0C;AACnD,SAAS,oCAAoC;AAC7C,SAAS,uBAAuB;AAChC,SAAS,oBAAoB;AAC7B,SAAS,oBAAoB;AAC7B,SAAS,sCAAsC;AAC/C,SAAS,gCAAgC;AACzC,SAAS,qCAAqC;AAE9C,IAAM,wBAAN,cAAoC,kBAAkB;AAAA,EACrD,YACS,QACM,aACY,gBACT,gBACa,oBACP,sBACA,sBACT,aACE,eACI,mBACJ,eACE,iBACE,mBACL,cACD,aACG,gBACD,eACI,mBACP,YACZ;AACD;AAAA,MAAM;AAAA,MAAa;AAAA,MAAgB;AAAA,MAAgB;AAAA,MAAoB;AAAA,MAAsB;AAAA,MAAsB;AAAA,MAClH;AAAA,MAAe;AAAA,MAAmB;AAAA,MAAe;AAAA,MAAiB;AAAA,MAAmB;AAAA,MAAc;AAAA,MAAa;AAAA,MAAgB;AAAA,MAAe;AAAA,MAAmB;AAAA,IAAU;AArBrK;AAAA,EAsBT;AAAA,EA9DD,OAsCsD;AAAA;AAAA;AAAA,EA0BlC,sBAAsB;AACxC,QAAI,KAAK,QAAQ;AAChB,aAAO,KAAK;AAAA,IACb,OAAO;AACN,aAAO,MAAM,oBAAoB;AAAA,IAClC;AAAA,EACD;AACD;AAjCM,wBAAN;AAAA,EAGG;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GApBG;AAmCN,MAAM,qBAAqB,WAAY;AAEtC,MAAI;AACJ,QAAM,cAAc,wCAAwC;AAC5D,QAAM,WAAgB,IAAI,KAAK,YAAY;AAE3C,QAAM,iBAAkB;AACvB,gBAAY,IAAI,uBAAuB,8BAA8B,QAAW,WAAW,CAAC;AAC5F,UAAM,uBAAuB,IAAI,yBAAyB;AAC1D,UAAM,qBAAqB,qBAAqB,SAAS,EAAE,cAAc,EAAE,QAAQ,KAAK,EAAE,CAAC;AAC3F,yBAAqB,KAAK,uBAAuB,oBAAoB;AAAA,EAEtE,CAAC;AAED,OAAK,qDAAqD,iBAAkB;AAAA,IAC3E,MAAM,qBAAkD;AAAA,MAxF1D,OAwF0D;AAAA;AAAA;AAAA,MACvD,MAAM,eAAe,SAAuD;AAC3E,eAAO,YAAY,QAAQ,sBAAsB,QAAQ,CAAC;AAC1D,eAAO,YAAY,QAAQ,qBAAqB,CAAC,GAAG,QAAQ,IAAI;AAChE,eAAO;AAAA,MACR;AAAA,MACA,MAAM,eAAe,SAAuD;AAC3E,eAAO,YAAY,QAAQ,sBAAsB,QAAQ,CAAC;AAC1D,eAAO,YAAY,QAAQ,qBAAqB,CAAC,GAAG,QAAQ,IAAI;AAChE,eAAO;AAAA,MACR;AAAA,MACA,UAAgB;AAAA,MAAE;AAAA,IACnB;AAEA,UAAM,gBAAgB,qBAAqB,eAAe,uBAAuB,IAAI,qBAAqB,CAAC;AAC3G,yBAAqB,IAAI,oBAAoB,aAAa;AAC1D,UAAM,mBAA6C,YAAY,IAAI,qBAAqB,eAAe,8BAA8B,CAAC;AACtI,WAAO,aAAa,MAAM,iBAAiB,qBAAqB,IAAI,KAAK,WAAW,SAAS,IAAI,GAAG,IAAI;AACxG,WAAO,YAAY,MAAM,cAAc,qBAAqB,CAAC,CAAC,GAAG,MAAS;AAAA,EAC3E,CAAC;AAED,OAAK,uDAAuD,iBAAkB;AAAA,IAC7E,MAAM,qBAAqB;AAAA,MA9G7B,OA8G6B;AAAA;AAAA;AAAA,MAC1B,MAAM,eAAe,SAAuD;AAC3E,eAAO,YAAY,QAAQ,sBAAsB,QAAQ,CAAC;AAC1D,eAAO,YAAY,QAAQ,qBAAqB,CAAC,GAAG,QAAQ,IAAI;AAChE,eAAO;AAAA,MACR;AAAA,MACA,MAAM,eAAe,SAAuD;AAC3E,eAAO,YAAY,QAAQ,sBAAsB,QAAQ,CAAC;AAC1D,eAAO,YAAY,QAAQ,qBAAqB,CAAC,GAAG,QAAQ,IAAI;AAChE,eAAO;AAAA,MACR;AAAA,MACA,UAAgB;AAAA,MAAE;AAAA,IACnB;AAEA,yBAAqB,KAAK,cAAc,IAAI,MAAM;AAAA,MACjD,mBAA2B;AAAA,MAC3B,WAAW,mCAAY,IAAI,KAAK,YAAY,GAAjC;AAAA,IACZ,GAAiB;AACjB,UAAM,gBAAgB,qBAAqB,eAAe,uBAAuB,IAAI,qBAAqB,CAAC;AAC3G,yBAAqB,IAAI,oBAAoB,aAAa;AAC1D,UAAM,mBAA6C,YAAY,IAAI,qBAAqB,eAAe,8BAA8B,CAAC;AACtI,WAAO,aAAa,MAAM,iBAAiB,qBAAqB,IAAI,KAAK,WAAW,SAAS,IAAI,GAAG,IAAI;AACxG,WAAO,YAAY,MAAM,cAAc,qBAAqB,CAAC,CAAC,GAAG,MAAS;AAAA,EAC3E,CAAC;AAED,OAAK,sDAAsD,iBAAkB;AAAA,IAC5E,MAAM,qBAAkD;AAAA,MAxI1D,OAwI0D;AAAA;AAAA;AAAA,MACvD,MAAM,eAAe,SAAuD;AAC3E,eAAO,YAAY,QAAQ,sBAAsB,QAAQ,CAAC;AAC1D,eAAO,YAAY,QAAQ,qBAAqB,CAAC,GAAG,QAAQ,YAAY;AACxE,eAAO,YAAY,QAAQ,qBAAqB,CAAC,GAAG,QAAQ,IAAI;AAChE,eAAO;AAAA,MACR;AAAA,MACA,MAAM,eAAe,SAAuD;AAC3E,eAAO,YAAY,QAAQ,sBAAsB,QAAQ,CAAC;AAC1D,eAAO,YAAY,QAAQ,qBAAqB,CAAC,GAAG,QAAQ,YAAY;AACxE,eAAO,YAAY,QAAQ,qBAAqB,CAAC,GAAG,QAAQ,IAAI;AAChE,eAAO;AAAA,MACR;AAAA,MACA,UAAgB;AAAA,MAAE;AAAA,IACnB;AAEA,yBAAqB,IAAI,8BAA8B,IAAI,cAAc,KAAyC,EAAE;AAAA,MACnH,IAAa,kBAAkB;AAC9B,eAAO;AAAA,MACR;AAAA,IACD,GAAC;AACD,yBAAqB,KAAK,cAAc,IAAI,MAAM;AAAA,MACjD,mBAA2B,QAAQ;AAAA,MACnC,WAAW,mCAAY,IAAI,KAAK,YAAY,GAAjC;AAAA,IACZ,GAAiB;AACjB,UAAM,gBAAgB,qBAAqB,eAAe,uBAAuB,IAAI,qBAAqB,CAAC;AAC3G,yBAAqB,IAAI,oBAAoB,aAAa;AAC1D,UAAM,mBAA6C,YAAY,IAAI,qBAAqB,eAAe,8BAA8B,CAAC;AACtI,WAAO,aAAa,MAAM,iBAAiB,qBAAqB,IAAI,KAAK,WAAW,SAAS,IAAI,GAAG,IAAI;AACxG,WAAO,YAAY,MAAM,cAAc,qBAAqB,CAAC,CAAC,GAAG,MAAS;AAAA,EAC3E,CAAC;AAED,OAAK,0DAA0D,iBAAkB;AAAA,IAChF,MAAM,qBAAkD;AAAA,MAzK1D,OAyK0D;AAAA;AAAA;AAAA,MACvD,MAAM,iBAA2C;AAChD,eAAO;AAAA,MACR;AAAA,MACA,MAAM,iBAA2C;AAChD,eAAO;AAAA,MACR;AAAA,MACA,UAAgB;AAAA,MAAE;AAAA,IACnB;AACA,yBAAqB,IAAI,8BAA8B,IAAI,cAAc,KAAyC,EAAE;AAAA,MACnH,IAAa,kBAAkB;AAC9B,eAAO;AAAA,MACR;AAAA,IACD,GAAC;AACD,yBAAqB,KAAK,cAAc,IAAI,MAAM;AAAA,MACjD,mBAA2B,QAAQ;AAAA,MACnC,WAAW,mCAAY,IAAI,KAAK,YAAY,GAAjC;AAAA,IACZ,GAAiB;AAGjB,UAAM,gBAAgB,qBAAqB,eAAe,uBAAuB,IAAI,qBAAqB,CAAC;AAC3G,UAAM,iBAAiB,qBAAqB,IAAI,eAAe;AAC/D,UAAM,6BAA6B,MAAM,IAAI,gBAAgB,4BAA4B;AACzF,UAAM,oBAAoB,MAAM,IAAI,gBAAgB,mBAAmB;AAEvE,UAAM,cAAc,gBAAgB;AACpC,WAAO,gBAAgB,kBAAkB,MAAM,CAAC,CAAC,QAAQ,cAAc,YAAY,CAAC,CAAC;AACrF,WAAO,gBAAgB,2BAA2B,MAAM,CAAC,CAAC,QAAQ,cAAc,YAAY,CAAC,CAAC;AAE9F,UAAM,cAAc,kBAAkB;AACtC,WAAO,gBAAgB,2BAA2B,KAAK,CAAC,GAAG,CAAC,QAAQ,cAAc,YAAY,CAAC;AAAA,EAChG,CAAC;AACF,CAAC;",
  "names": []
}
