var C=Object.defineProperty;var H=Object.getOwnPropertyDescriptor;var g=(e,c,o,s)=>{for(var r=s>1?void 0:s?H(c,o):c,n=e.length-1,m;n>=0;n--)(m=e[n])&&(r=(s?m(c,o,r):m(r))||r);return s&&r&&C(c,o,r),r},a=(e,c)=>(o,s)=>c(o,s,e);import t from"assert";import*as h from"sinon";import{Schemas as l}from"../../../../../base/common/network.js";import{URI as v}from"../../../../../base/common/uri.js";import{mock as w}from"../../../../../base/test/common/mock.js";import{ensureNoDisposablesAreLeakedInTestSuite as N}from"../../../../../base/test/common/utils.js";import{ICodeEditorService as x}from"../../../../../editor/browser/services/codeEditorService.js";import{ILanguageService as T}from"../../../../../editor/common/languages/language.js";import{ICommandService as B}from"../../../../../platform/commands/common/commands.js";import{IConfigurationService as y}from"../../../../../platform/configuration/common/configuration.js";import{TestConfigurationService as V}from"../../../../../platform/configuration/test/common/testConfigurationService.js";import{IDialogService as j,IFileDialogService as u}from"../../../../../platform/dialogs/common/dialogs.js";import{IFileService as z}from"../../../../../platform/files/common/files.js";import{IInstantiationService as G}from"../../../../../platform/instantiation/common/instantiation.js";import"../../../../../platform/instantiation/test/common/instantiationServiceMock.js";import{ILabelService as J}from"../../../../../platform/label/common/label.js";import{ILogService as K}from"../../../../../platform/log/common/log.js";import{INativeHostService as M}from"../../../../../platform/native/common/native.js";import{IOpenerService as Q}from"../../../../../platform/opener/common/opener.js";import{IWorkspaceContextService as X}from"../../../../../platform/workspace/common/workspace.js";import{IWorkspacesService as Y}from"../../../../../platform/workspaces/common/workspaces.js";import"../../browser/simpleFileDialog.js";import{FileDialogService as Z}from"../../electron-sandbox/fileDialogService.js";import{IEditorService as _}from"../../../editor/common/editorService.js";import"../../../environment/browser/environmentService.js";import{IWorkbenchEnvironmentService as d}from"../../../environment/common/environmentService.js";import{IHistoryService as k}from"../../../history/common/history.js";import{IHostService as $}from"../../../host/browser/host.js";import{IPathService as S}from"../../../path/common/pathService.js";import{BrowserWorkspaceEditingService as I}from"../../../workspaces/browser/workspaceEditingService.js";import"../../../workspaces/common/workspaceEditing.js";import{workbenchInstantiationService as ee}from"../../../../test/browser/workbenchTestServices.js";let p=class extends Z{constructor(o,s,r,n,m,i,f,E,F,b,D,R,W,q,O,P,U,L,A){super(s,r,n,m,i,f,E,F,b,D,R,W,q,O,P,U,L,A);this.simple=o}getSimpleFileDialog(){return this.simple?this.simple:super.getSimpleFileDialog()}};p=g([a(1,$),a(2,X),a(3,k),a(4,d),a(5,G),a(6,y),a(7,z),a(8,Q),a(9,M),a(10,j),a(11,T),a(12,Y),a(13,J),a(14,S),a(15,B),a(16,_),a(17,x),a(18,K)],p),suite("FileDialogService",function(){let e;const c=N(),o=v.file("/test/file");setup(async function(){c.add(e=ee(void 0,c));const s=new V;await s.setUserConfiguration("files",{simpleDialog:{enable:!0}}),e.stub(y,s)}),test("Local - open/save workspaces availableFilesystems",async function(){class s{async showOpenDialog(i){return t.strictEqual(i.availableFileSystems?.length,1),t.strictEqual(i.availableFileSystems[0],l.file),o}async showSaveDialog(i){return t.strictEqual(i.availableFileSystems?.length,1),t.strictEqual(i.availableFileSystems[0],l.file),o}dispose(){}}const r=e.createInstance(p,new s);e.set(u,r);const n=c.add(e.createInstance(I));t.strictEqual((await n.pickNewWorkspacePath())?.path.startsWith(o.path),!0),t.strictEqual(await r.pickWorkspaceAndOpen({}),void 0)}),test("Virtual - open/save workspaces availableFilesystems",async function(){class s{async showOpenDialog(i){return t.strictEqual(i.availableFileSystems?.length,1),t.strictEqual(i.availableFileSystems[0],l.file),o}async showSaveDialog(i){return t.strictEqual(i.availableFileSystems?.length,1),t.strictEqual(i.availableFileSystems[0],l.file),o}dispose(){}}e.stub(S,new class{defaultUriScheme="vscode-virtual-test";userHome=async()=>v.file("/user/home")});const r=e.createInstance(p,new s);e.set(u,r);const n=c.add(e.createInstance(I));t.strictEqual((await n.pickNewWorkspacePath())?.path.startsWith(o.path),!0),t.strictEqual(await r.pickWorkspaceAndOpen({}),void 0)}),test("Remote - open/save workspaces availableFilesystems",async function(){class s{async showOpenDialog(i){return t.strictEqual(i.availableFileSystems?.length,2),t.strictEqual(i.availableFileSystems[0],l.vscodeRemote),t.strictEqual(i.availableFileSystems[1],l.file),o}async showSaveDialog(i){return t.strictEqual(i.availableFileSystems?.length,2),t.strictEqual(i.availableFileSystems[0],l.vscodeRemote),t.strictEqual(i.availableFileSystems[1],l.file),o}dispose(){}}e.set(d,new class extends w(){get remoteAuthority(){return"testRemote"}}),e.stub(S,new class{defaultUriScheme=l.vscodeRemote;userHome=async()=>v.file("/user/home")});const r=e.createInstance(p,new s);e.set(u,r);const n=c.add(e.createInstance(I));t.strictEqual((await n.pickNewWorkspacePath())?.path.startsWith(o.path),!0),t.strictEqual(await r.pickWorkspaceAndOpen({}),void 0)}),test("Remote - filters default files/folders to RA (#195938)",async function(){class s{async showOpenDialog(){return o}async showSaveDialog(){return o}dispose(){}}e.set(d,new class extends w(){get remoteAuthority(){return"testRemote"}}),e.stub(S,new class{defaultUriScheme=l.vscodeRemote;userHome=async()=>v.file("/user/home")});const r=e.createInstance(p,new s),n=e.get(k),m=h.spy(n,"getLastActiveWorkspaceRoot"),i=h.spy(n,"getLastActiveFile");await r.defaultFilePath(),t.deepStrictEqual(i.args,[[l.vscodeRemote,"testRemote"]]),t.deepStrictEqual(m.args,[[l.vscodeRemote,"testRemote"]]),await r.defaultFolderPath(),t.deepStrictEqual(m.args[1],[l.vscodeRemote,"testRemote"])})});
