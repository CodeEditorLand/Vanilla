{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/dialogs/browser/simpleFileDialog.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../../../nls.js';\nimport * as resources from '../../../../base/common/resources.js';\nimport * as objects from '../../../../base/common/objects.js';\nimport { IFileService, IFileStat, FileKind, IFileStatWithPartialMetadata } from '../../../../platform/files/common/files.js';\nimport { IQuickInputService, IQuickPickItem, IQuickPick, ItemActivation } from '../../../../platform/quickinput/common/quickInput.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { isWindows, OperatingSystem } from '../../../../base/common/platform.js';\nimport { ISaveDialogOptions, IOpenDialogOptions, IFileDialogService } from '../../../../platform/dialogs/common/dialogs.js';\nimport { ILabelService } from '../../../../platform/label/common/label.js';\nimport { IWorkspaceContextService } from '../../../../platform/workspace/common/workspace.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { IModelService } from '../../../../editor/common/services/model.js';\nimport { ILanguageService } from '../../../../editor/common/languages/language.js';\nimport { getIconClasses } from '../../../../editor/common/services/getIconClasses.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { IWorkbenchEnvironmentService } from '../../environment/common/environmentService.js';\nimport { IRemoteAgentService } from '../../remote/common/remoteAgentService.js';\nimport { IContextKeyService, IContextKey, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { equalsIgnoreCase, format, startsWithIgnoreCase } from '../../../../base/common/strings.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { IRemoteAgentEnvironment } from '../../../../platform/remote/common/remoteAgentEnvironment.js';\nimport { isValidBasename } from '../../../../base/common/extpath.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable, DisposableStore, IDisposable } from '../../../../base/common/lifecycle.js';\nimport { createCancelablePromise, CancelablePromise } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { ICommandHandler } from '../../../../platform/commands/common/commands.js';\nimport { IEditorService } from '../../editor/common/editorService.js';\nimport { normalizeDriveLetter } from '../../../../base/common/labels.js';\nimport { SaveReason } from '../../../common/editor.js';\nimport { IPathService } from '../../path/common/pathService.js';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\nimport { getActiveDocument } from '../../../../base/browser/dom.js';\n\nexport namespace OpenLocalFileCommand {\n\texport const ID = 'workbench.action.files.openLocalFile';\n\texport const LABEL = nls.localize('openLocalFile', \"Open Local File...\");\n\texport function handler(): ICommandHandler {\n\t\treturn accessor => {\n\t\t\tconst dialogService = accessor.get(IFileDialogService);\n\t\t\treturn dialogService.pickFileAndOpen({ forceNewWindow: false, availableFileSystems: [Schemas.file] });\n\t\t};\n\t}\n}\n\nexport namespace SaveLocalFileCommand {\n\texport const ID = 'workbench.action.files.saveLocalFile';\n\texport const LABEL = nls.localize('saveLocalFile', \"Save Local File...\");\n\texport function handler(): ICommandHandler {\n\t\treturn accessor => {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst activeEditorPane = editorService.activeEditorPane;\n\t\t\tif (activeEditorPane) {\n\t\t\t\treturn editorService.save({ groupId: activeEditorPane.group.id, editor: activeEditorPane.input }, { saveAs: true, availableFileSystems: [Schemas.file], reason: SaveReason.EXPLICIT });\n\t\t\t}\n\n\t\t\treturn Promise.resolve(undefined);\n\t\t};\n\t}\n}\n\nexport namespace OpenLocalFolderCommand {\n\texport const ID = 'workbench.action.files.openLocalFolder';\n\texport const LABEL = nls.localize('openLocalFolder', \"Open Local Folder...\");\n\texport function handler(): ICommandHandler {\n\t\treturn accessor => {\n\t\t\tconst dialogService = accessor.get(IFileDialogService);\n\t\t\treturn dialogService.pickFolderAndOpen({ forceNewWindow: false, availableFileSystems: [Schemas.file] });\n\t\t};\n\t}\n}\n\nexport namespace OpenLocalFileFolderCommand {\n\texport const ID = 'workbench.action.files.openLocalFileFolder';\n\texport const LABEL = nls.localize('openLocalFileFolder', \"Open Local...\");\n\texport function handler(): ICommandHandler {\n\t\treturn accessor => {\n\t\t\tconst dialogService = accessor.get(IFileDialogService);\n\t\t\treturn dialogService.pickFileFolderAndOpen({ forceNewWindow: false, availableFileSystems: [Schemas.file] });\n\t\t};\n\t}\n}\n\ninterface FileQuickPickItem extends IQuickPickItem {\n\turi: URI;\n\tisFolder: boolean;\n}\n\nenum UpdateResult {\n\tUpdated,\n\tUpdatedWithTrailing,\n\tUpdating,\n\tNotUpdated,\n\tInvalidPath\n}\n\nexport const RemoteFileDialogContext = new RawContextKey<boolean>('remoteFileDialogVisible', false);\n\nexport interface ISimpleFileDialog extends IDisposable {\n\tshowOpenDialog(options: IOpenDialogOptions): Promise<URI | undefined>;\n\tshowSaveDialog(options: ISaveDialogOptions): Promise<URI | undefined>;\n}\n\nexport class SimpleFileDialog extends Disposable implements ISimpleFileDialog {\n\tprivate options!: IOpenDialogOptions;\n\tprivate currentFolder!: URI;\n\tprivate filePickBox!: IQuickPick<FileQuickPickItem>;\n\tprivate hidden: boolean = false;\n\tprivate allowFileSelection: boolean = true;\n\tprivate allowFolderSelection: boolean = false;\n\tprivate remoteAuthority: string | undefined;\n\tprivate requiresTrailing: boolean = false;\n\tprivate trailing: string | undefined;\n\tprotected scheme: string;\n\tprivate contextKey: IContextKey<boolean>;\n\tprivate userEnteredPathSegment: string = '';\n\tprivate autoCompletePathSegment: string = '';\n\tprivate activeItem: FileQuickPickItem | undefined;\n\tprivate userHome!: URI;\n\tprivate trueHome!: URI;\n\tprivate isWindows: boolean = false;\n\tprivate badPath: string | undefined;\n\tprivate remoteAgentEnvironment: IRemoteAgentEnvironment | null | undefined;\n\tprivate separator: string = '/';\n\tprivate readonly onBusyChangeEmitter = this._register(new Emitter<boolean>());\n\tprivate updatingPromise: CancelablePromise<boolean> | undefined;\n\n\tconstructor(\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@IWorkspaceContextService private readonly workspaceContextService: IWorkspaceContextService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IFileDialogService private readonly fileDialogService: IFileDialogService,\n\t\t@IModelService private readonly modelService: IModelService,\n\t\t@ILanguageService private readonly languageService: ILanguageService,\n\t\t@IWorkbenchEnvironmentService protected readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IRemoteAgentService private readonly remoteAgentService: IRemoteAgentService,\n\t\t@IPathService protected readonly pathService: IPathService,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IAccessibilityService private readonly accessibilityService: IAccessibilityService\n\t) {\n\t\tsuper();\n\t\tthis.remoteAuthority = this.environmentService.remoteAuthority;\n\t\tthis.contextKey = RemoteFileDialogContext.bindTo(contextKeyService);\n\t\tthis.scheme = this.pathService.defaultUriScheme;\n\t}\n\n\tset busy(busy: boolean) {\n\t\tif (this.filePickBox.busy !== busy) {\n\t\t\tthis.filePickBox.busy = busy;\n\t\t\tthis.onBusyChangeEmitter.fire(busy);\n\t\t}\n\t}\n\n\tget busy(): boolean {\n\t\treturn this.filePickBox.busy;\n\t}\n\n\tpublic async showOpenDialog(options: IOpenDialogOptions = {}): Promise<URI | undefined> {\n\t\tthis.scheme = this.getScheme(options.availableFileSystems, options.defaultUri);\n\t\tthis.userHome = await this.getUserHome();\n\t\tthis.trueHome = await this.getUserHome(true);\n\t\tconst newOptions = this.getOptions(options);\n\t\tif (!newOptions) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\t\tthis.options = newOptions;\n\t\treturn this.pickResource();\n\t}\n\n\tpublic async showSaveDialog(options: ISaveDialogOptions): Promise<URI | undefined> {\n\t\tthis.scheme = this.getScheme(options.availableFileSystems, options.defaultUri);\n\t\tthis.userHome = await this.getUserHome();\n\t\tthis.trueHome = await this.getUserHome(true);\n\t\tthis.requiresTrailing = true;\n\t\tconst newOptions = this.getOptions(options, true);\n\t\tif (!newOptions) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\t\tthis.options = newOptions;\n\t\tthis.options.canSelectFolders = true;\n\t\tthis.options.canSelectFiles = true;\n\n\t\treturn new Promise<URI | undefined>((resolve) => {\n\t\t\tthis.pickResource(true).then(folderUri => {\n\t\t\t\tresolve(folderUri);\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate getOptions(options: ISaveDialogOptions | IOpenDialogOptions, isSave: boolean = false): IOpenDialogOptions | undefined {\n\t\tlet defaultUri: URI | undefined = undefined;\n\t\tlet filename: string | undefined = undefined;\n\t\tif (options.defaultUri) {\n\t\t\tdefaultUri = (this.scheme === options.defaultUri.scheme) ? options.defaultUri : undefined;\n\t\t\tfilename = isSave ? resources.basename(options.defaultUri) : undefined;\n\t\t}\n\t\tif (!defaultUri) {\n\t\t\tdefaultUri = this.userHome;\n\t\t\tif (filename) {\n\t\t\t\tdefaultUri = resources.joinPath(defaultUri, filename);\n\t\t\t}\n\t\t}\n\t\tif ((this.scheme !== Schemas.file) && !this.fileService.hasProvider(defaultUri)) {\n\t\t\tthis.notificationService.info(nls.localize('remoteFileDialog.notConnectedToRemote', 'File system provider for {0} is not available.', defaultUri.toString()));\n\t\t\treturn undefined;\n\t\t}\n\t\tconst newOptions: IOpenDialogOptions = objects.deepClone(options);\n\t\tnewOptions.defaultUri = defaultUri;\n\t\treturn newOptions;\n\t}\n\n\tprivate remoteUriFrom(path: string, hintUri?: URI): URI {\n\t\tif (!path.startsWith('\\\\\\\\')) {\n\t\t\tpath = path.replace(/\\\\/g, '/');\n\t\t}\n\t\tconst uri: URI = this.scheme === Schemas.file ? URI.file(path) : URI.from({ scheme: this.scheme, path, query: hintUri?.query, fragment: hintUri?.fragment });\n\t\t// If the default scheme is file, then we don't care about the remote authority or the hint authority\n\t\tconst authority = (uri.scheme === Schemas.file) ? undefined : (this.remoteAuthority ?? hintUri?.authority);\n\t\treturn resources.toLocalResource(uri, authority,\n\t\t\t// If there is a remote authority, then we should use the system's default URI as the local scheme.\n\t\t\t// If there is *no* remote authority, then we should use the default scheme for this dialog as that is already local.\n\t\t\tauthority ? this.pathService.defaultUriScheme : uri.scheme);\n\t}\n\n\tprivate getScheme(available: readonly string[] | undefined, defaultUri: URI | undefined): string {\n\t\tif (available && available.length > 0) {\n\t\t\tif (defaultUri && (available.indexOf(defaultUri.scheme) >= 0)) {\n\t\t\t\treturn defaultUri.scheme;\n\t\t\t}\n\t\t\treturn available[0];\n\t\t} else if (defaultUri) {\n\t\t\treturn defaultUri.scheme;\n\t\t}\n\t\treturn Schemas.file;\n\t}\n\n\tprivate async getRemoteAgentEnvironment(): Promise<IRemoteAgentEnvironment | null> {\n\t\tif (this.remoteAgentEnvironment === undefined) {\n\t\t\tthis.remoteAgentEnvironment = await this.remoteAgentService.getEnvironment();\n\t\t}\n\t\treturn this.remoteAgentEnvironment;\n\t}\n\n\tprotected getUserHome(trueHome = false): Promise<URI> {\n\t\treturn trueHome\n\t\t\t? this.pathService.userHome({ preferLocal: this.scheme === Schemas.file })\n\t\t\t: this.fileDialogService.preferredHome(this.scheme);\n\t}\n\n\tprivate async pickResource(isSave: boolean = false): Promise<URI | undefined> {\n\t\tthis.allowFolderSelection = !!this.options.canSelectFolders;\n\t\tthis.allowFileSelection = !!this.options.canSelectFiles;\n\t\tthis.separator = this.labelService.getSeparator(this.scheme, this.remoteAuthority);\n\t\tthis.hidden = false;\n\t\tthis.isWindows = await this.checkIsWindowsOS();\n\t\tlet homedir: URI = this.options.defaultUri ? this.options.defaultUri : this.workspaceContextService.getWorkspace().folders[0].uri;\n\t\tlet stat: IFileStatWithPartialMetadata | undefined;\n\t\tconst ext: string = resources.extname(homedir);\n\t\tif (this.options.defaultUri) {\n\t\t\ttry {\n\t\t\t\tstat = await this.fileService.stat(this.options.defaultUri);\n\t\t\t} catch (e) {\n\t\t\t\t// The file or folder doesn't exist\n\t\t\t}\n\t\t\tif (!stat || !stat.isDirectory) {\n\t\t\t\thomedir = resources.dirname(this.options.defaultUri);\n\t\t\t\tthis.trailing = resources.basename(this.options.defaultUri);\n\t\t\t}\n\t\t}\n\n\t\treturn new Promise<URI | undefined>((resolve) => {\n\t\t\tthis.filePickBox = this._register(this.quickInputService.createQuickPick<FileQuickPickItem>());\n\t\t\tthis.busy = true;\n\t\t\tthis.filePickBox.matchOnLabel = false;\n\t\t\tthis.filePickBox.sortByLabel = false;\n\t\t\tthis.filePickBox.ignoreFocusOut = true;\n\t\t\tthis.filePickBox.ok = true;\n\t\t\tif ((this.scheme !== Schemas.file) && this.options && this.options.availableFileSystems && (this.options.availableFileSystems.length > 1) && (this.options.availableFileSystems.indexOf(Schemas.file) > -1)) {\n\t\t\t\tthis.filePickBox.customButton = true;\n\t\t\t\tthis.filePickBox.customLabel = nls.localize('remoteFileDialog.local', 'Show Local');\n\t\t\t\tlet action;\n\t\t\t\tif (isSave) {\n\t\t\t\t\taction = SaveLocalFileCommand;\n\t\t\t\t} else {\n\t\t\t\t\taction = this.allowFileSelection ? (this.allowFolderSelection ? OpenLocalFileFolderCommand : OpenLocalFileCommand) : OpenLocalFolderCommand;\n\t\t\t\t}\n\t\t\t\tconst keybinding = this.keybindingService.lookupKeybinding(action.ID);\n\t\t\t\tif (keybinding) {\n\t\t\t\t\tconst label = keybinding.getLabel();\n\t\t\t\t\tif (label) {\n\t\t\t\t\t\tthis.filePickBox.customHover = format('{0} ({1})', action.LABEL, label);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet isResolving: number = 0;\n\t\t\tlet isAcceptHandled = false;\n\t\t\tthis.currentFolder = resources.dirname(homedir);\n\t\t\tthis.userEnteredPathSegment = '';\n\t\t\tthis.autoCompletePathSegment = '';\n\n\t\t\tthis.filePickBox.title = this.options.title;\n\t\t\tthis.filePickBox.value = this.pathFromUri(this.currentFolder, true);\n\t\t\tthis.filePickBox.valueSelection = [this.filePickBox.value.length, this.filePickBox.value.length];\n\n\t\t\tconst doResolve = (uri: URI | undefined) => {\n\t\t\t\tif (uri) {\n\t\t\t\t\turi = resources.addTrailingPathSeparator(uri, this.separator); // Ensures that c: is c:/ since this comes from user input and can be incorrect.\n\t\t\t\t\t// To be consistent, we should never have a trailing path separator on directories (or anything else). Will not remove from c:/.\n\t\t\t\t\turi = resources.removeTrailingPathSeparator(uri);\n\t\t\t\t}\n\t\t\t\tresolve(uri);\n\t\t\t\tthis.contextKey.set(false);\n\t\t\t\tthis.dispose();\n\t\t\t};\n\n\t\t\tthis._register(this.filePickBox.onDidCustom(() => {\n\t\t\t\tif (isAcceptHandled || this.busy) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tisAcceptHandled = true;\n\t\t\t\tisResolving++;\n\t\t\t\tif (this.options.availableFileSystems && (this.options.availableFileSystems.length > 1)) {\n\t\t\t\t\tthis.options.availableFileSystems = this.options.availableFileSystems.slice(1);\n\t\t\t\t}\n\t\t\t\tthis.filePickBox.hide();\n\t\t\t\tif (isSave) {\n\t\t\t\t\treturn this.fileDialogService.showSaveDialog(this.options).then(result => {\n\t\t\t\t\t\tdoResolve(result);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturn this.fileDialogService.showOpenDialog(this.options).then(result => {\n\t\t\t\t\t\tdoResolve(result ? result[0] : undefined);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tconst handleAccept = () => {\n\t\t\t\tif (this.busy) {\n\t\t\t\t\t// Save the accept until the file picker is not busy.\n\t\t\t\t\tthis.onBusyChangeEmitter.event((busy: boolean) => {\n\t\t\t\t\t\tif (!busy) {\n\t\t\t\t\t\t\thandleAccept();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t} else if (isAcceptHandled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tisAcceptHandled = true;\n\t\t\t\tisResolving++;\n\t\t\t\tthis.onDidAccept().then(resolveValue => {\n\t\t\t\t\tif (resolveValue) {\n\t\t\t\t\t\tthis.filePickBox.hide();\n\t\t\t\t\t\tdoResolve(resolveValue);\n\t\t\t\t\t} else if (this.hidden) {\n\t\t\t\t\t\tdoResolve(undefined);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisResolving--;\n\t\t\t\t\t\tisAcceptHandled = false;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tthis._register(this.filePickBox.onDidAccept(_ => {\n\t\t\t\thandleAccept();\n\t\t\t}));\n\n\t\t\tthis._register(this.filePickBox.onDidChangeActive(i => {\n\t\t\t\tisAcceptHandled = false;\n\t\t\t\t// update input box to match the first selected item\n\t\t\t\tif ((i.length === 1) && this.isSelectionChangeFromUser()) {\n\t\t\t\t\tthis.filePickBox.validationMessage = undefined;\n\t\t\t\t\tconst userPath = this.constructFullUserPath();\n\t\t\t\t\tif (!equalsIgnoreCase(this.filePickBox.value.substring(0, userPath.length), userPath)) {\n\t\t\t\t\t\tthis.filePickBox.valueSelection = [0, this.filePickBox.value.length];\n\t\t\t\t\t\tthis.insertText(userPath, userPath);\n\t\t\t\t\t}\n\t\t\t\t\tthis.setAutoComplete(userPath, this.userEnteredPathSegment, i[0], true);\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tthis._register(this.filePickBox.onDidChangeValue(async value => {\n\t\t\t\treturn this.handleValueChange(value);\n\t\t\t}));\n\t\t\tthis._register(this.filePickBox.onDidHide(() => {\n\t\t\t\tthis.hidden = true;\n\t\t\t\tif (isResolving === 0) {\n\t\t\t\t\tdoResolve(undefined);\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tthis.filePickBox.show();\n\t\t\tthis.contextKey.set(true);\n\t\t\tthis.updateItems(homedir, true, this.trailing).then(() => {\n\t\t\t\tif (this.trailing) {\n\t\t\t\t\tthis.filePickBox.valueSelection = [this.filePickBox.value.length - this.trailing.length, this.filePickBox.value.length - ext.length];\n\t\t\t\t} else {\n\t\t\t\t\tthis.filePickBox.valueSelection = [this.filePickBox.value.length, this.filePickBox.value.length];\n\t\t\t\t}\n\t\t\t\tthis.busy = false;\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\tprivate async handleValueChange(value: string) {\n\t\ttry {\n\t\t\t// onDidChangeValue can also be triggered by the auto complete, so if it looks like the auto complete, don't do anything\n\t\t\tif (this.isValueChangeFromUser()) {\n\t\t\t\t// If the user has just entered more bad path, don't change anything\n\t\t\t\tif (!equalsIgnoreCase(value, this.constructFullUserPath()) && !this.isBadSubpath(value)) {\n\t\t\t\t\tthis.filePickBox.validationMessage = undefined;\n\t\t\t\t\tconst filePickBoxUri = this.filePickBoxValue();\n\t\t\t\t\tlet updated: UpdateResult = UpdateResult.NotUpdated;\n\t\t\t\t\tif (!resources.extUriIgnorePathCase.isEqual(this.currentFolder, filePickBoxUri)) {\n\t\t\t\t\t\tupdated = await this.tryUpdateItems(value, filePickBoxUri);\n\t\t\t\t\t}\n\t\t\t\t\tif ((updated === UpdateResult.NotUpdated) || (updated === UpdateResult.UpdatedWithTrailing)) {\n\t\t\t\t\t\tthis.setActiveItems(value);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.filePickBox.activeItems = [];\n\t\t\t\t\tthis.userEnteredPathSegment = '';\n\t\t\t\t}\n\t\t\t}\n\t\t} catch {\n\t\t\t// Since any text can be entered in the input box, there is potential for error causing input. If this happens, do nothing.\n\t\t}\n\t}\n\n\tprivate isBadSubpath(value: string) {\n\t\treturn this.badPath && (value.length > this.badPath.length) && equalsIgnoreCase(value.substring(0, this.badPath.length), this.badPath);\n\t}\n\n\tprivate isValueChangeFromUser(): boolean {\n\t\tif (equalsIgnoreCase(this.filePickBox.value, this.pathAppend(this.currentFolder, this.userEnteredPathSegment + this.autoCompletePathSegment))) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate isSelectionChangeFromUser(): boolean {\n\t\tif (this.activeItem === (this.filePickBox.activeItems ? this.filePickBox.activeItems[0] : undefined)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate constructFullUserPath(): string {\n\t\tconst currentFolderPath = this.pathFromUri(this.currentFolder);\n\t\tif (equalsIgnoreCase(this.filePickBox.value.substr(0, this.userEnteredPathSegment.length), this.userEnteredPathSegment)) {\n\t\t\tif (equalsIgnoreCase(this.filePickBox.value.substr(0, currentFolderPath.length), currentFolderPath)) {\n\t\t\t\treturn currentFolderPath;\n\t\t\t} else {\n\t\t\t\treturn this.userEnteredPathSegment;\n\t\t\t}\n\t\t} else {\n\t\t\treturn this.pathAppend(this.currentFolder, this.userEnteredPathSegment);\n\t\t}\n\t}\n\n\tprivate filePickBoxValue(): URI {\n\t\t// The file pick box can't render everything, so we use the current folder to create the uri so that it is an existing path.\n\t\tconst directUri = this.remoteUriFrom(this.filePickBox.value.trimRight(), this.currentFolder);\n\t\tconst currentPath = this.pathFromUri(this.currentFolder);\n\t\tif (equalsIgnoreCase(this.filePickBox.value, currentPath)) {\n\t\t\treturn this.currentFolder;\n\t\t}\n\t\tconst currentDisplayUri = this.remoteUriFrom(currentPath, this.currentFolder);\n\t\tconst relativePath = resources.relativePath(currentDisplayUri, directUri);\n\t\tconst isSameRoot = (this.filePickBox.value.length > 1 && currentPath.length > 1) ? equalsIgnoreCase(this.filePickBox.value.substr(0, 2), currentPath.substr(0, 2)) : false;\n\t\tif (relativePath && isSameRoot) {\n\t\t\tlet path = resources.joinPath(this.currentFolder, relativePath);\n\t\t\tconst directBasename = resources.basename(directUri);\n\t\t\tif ((directBasename === '.') || (directBasename === '..')) {\n\t\t\t\tpath = this.remoteUriFrom(this.pathAppend(path, directBasename), this.currentFolder);\n\t\t\t}\n\t\t\treturn resources.hasTrailingPathSeparator(directUri) ? resources.addTrailingPathSeparator(path) : path;\n\t\t} else {\n\t\t\treturn directUri;\n\t\t}\n\t}\n\n\tprivate async onDidAccept(): Promise<URI | undefined> {\n\t\tthis.busy = true;\n\t\tif (this.filePickBox.activeItems.length === 1) {\n\t\t\tconst item = this.filePickBox.selectedItems[0];\n\t\t\tif (item.isFolder) {\n\t\t\t\tif (this.trailing) {\n\t\t\t\t\tawait this.updateItems(item.uri, true, this.trailing);\n\t\t\t\t} else {\n\t\t\t\t\t// When possible, cause the update to happen by modifying the input box.\n\t\t\t\t\t// This allows all input box updates to happen first, and uses the same code path as the user typing.\n\t\t\t\t\tconst newPath = this.pathFromUri(item.uri);\n\t\t\t\t\tif (startsWithIgnoreCase(newPath, this.filePickBox.value) && (equalsIgnoreCase(item.label, resources.basename(item.uri)))) {\n\t\t\t\t\t\tthis.filePickBox.valueSelection = [this.pathFromUri(this.currentFolder).length, this.filePickBox.value.length];\n\t\t\t\t\t\tthis.insertText(newPath, this.basenameWithTrailingSlash(item.uri));\n\t\t\t\t\t} else if ((item.label === '..') && startsWithIgnoreCase(this.filePickBox.value, newPath)) {\n\t\t\t\t\t\tthis.filePickBox.valueSelection = [newPath.length, this.filePickBox.value.length];\n\t\t\t\t\t\tthis.insertText(newPath, '');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tawait this.updateItems(item.uri, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.filePickBox.busy = false;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\t// If the items have updated, don't try to resolve\n\t\t\tif ((await this.tryUpdateItems(this.filePickBox.value, this.filePickBoxValue())) !== UpdateResult.NotUpdated) {\n\t\t\t\tthis.filePickBox.busy = false;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tlet resolveValue: URI | undefined;\n\t\t// Find resolve value\n\t\tif (this.filePickBox.activeItems.length === 0) {\n\t\t\tresolveValue = this.filePickBoxValue();\n\t\t} else if (this.filePickBox.activeItems.length === 1) {\n\t\t\tresolveValue = this.filePickBox.selectedItems[0].uri;\n\t\t}\n\t\tif (resolveValue) {\n\t\t\tresolveValue = this.addPostfix(resolveValue);\n\t\t}\n\t\tif (await this.validate(resolveValue)) {\n\t\t\tthis.busy = false;\n\t\t\treturn resolveValue;\n\t\t}\n\t\tthis.busy = false;\n\t\treturn undefined;\n\t}\n\n\tprivate root(value: URI) {\n\t\tlet lastDir = value;\n\t\tlet dir = resources.dirname(value);\n\t\twhile (!resources.isEqual(lastDir, dir)) {\n\t\t\tlastDir = dir;\n\t\t\tdir = resources.dirname(dir);\n\t\t}\n\t\treturn dir;\n\t}\n\n\tprivate tildaReplace(value: string): URI {\n\t\tconst home = this.trueHome;\n\t\tif ((value.length > 0) && (value[0] === '~')) {\n\t\t\treturn resources.joinPath(home, value.substring(1));\n\t\t}\n\t\treturn this.remoteUriFrom(value);\n\t}\n\n\tprivate tryAddTrailingSeparatorToDirectory(uri: URI, stat: IFileStatWithPartialMetadata): URI {\n\t\tif (stat.isDirectory) {\n\t\t\t// At this point we know it's a directory and can add the trailing path separator\n\t\t\tif (!this.endsWithSlash(uri.path)) {\n\t\t\t\treturn resources.addTrailingPathSeparator(uri);\n\t\t\t}\n\t\t}\n\t\treturn uri;\n\t}\n\n\tprivate async tryUpdateItems(value: string, valueUri: URI): Promise<UpdateResult> {\n\t\tif ((value.length > 0) && (value[0] === '~')) {\n\t\t\tconst newDir = this.tildaReplace(value);\n\t\t\treturn await this.updateItems(newDir, true) ? UpdateResult.UpdatedWithTrailing : UpdateResult.Updated;\n\t\t} else if (value === '\\\\') {\n\t\t\tvalueUri = this.root(this.currentFolder);\n\t\t\tvalue = this.pathFromUri(valueUri);\n\t\t\treturn await this.updateItems(valueUri, true) ? UpdateResult.UpdatedWithTrailing : UpdateResult.Updated;\n\t\t} else {\n\t\t\tconst newFolderIsOldFolder = resources.extUriIgnorePathCase.isEqual(this.currentFolder, valueUri);\n\t\t\tconst newFolderIsSubFolder = resources.extUriIgnorePathCase.isEqual(this.currentFolder, resources.dirname(valueUri));\n\t\t\tconst newFolderIsParent = resources.extUriIgnorePathCase.isEqualOrParent(this.currentFolder, resources.dirname(valueUri));\n\t\t\tconst newFolderIsUnrelated = !newFolderIsParent && !newFolderIsSubFolder;\n\t\t\tif (!newFolderIsOldFolder && (this.endsWithSlash(value) || newFolderIsParent || newFolderIsUnrelated)) {\n\t\t\t\tlet stat: IFileStatWithPartialMetadata | undefined;\n\t\t\t\ttry {\n\t\t\t\t\tstat = await this.fileService.stat(valueUri);\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// do nothing\n\t\t\t\t}\n\t\t\t\tif (stat && stat.isDirectory && (resources.basename(valueUri) !== '.') && this.endsWithSlash(value)) {\n\t\t\t\t\tvalueUri = this.tryAddTrailingSeparatorToDirectory(valueUri, stat);\n\t\t\t\t\treturn await this.updateItems(valueUri) ? UpdateResult.UpdatedWithTrailing : UpdateResult.Updated;\n\t\t\t\t} else if (this.endsWithSlash(value)) {\n\t\t\t\t\t// The input box contains a path that doesn't exist on the system.\n\t\t\t\t\tthis.filePickBox.validationMessage = nls.localize('remoteFileDialog.badPath', 'The path does not exist.');\n\t\t\t\t\t// Save this bad path. It can take too long to a stat on every user entered character, but once a user enters a bad path they are likely\n\t\t\t\t\t// to keep typing more bad path. We can compare against this bad path and see if the user entered path starts with it.\n\t\t\t\t\tthis.badPath = value;\n\t\t\t\t\treturn UpdateResult.InvalidPath;\n\t\t\t\t} else {\n\t\t\t\t\tlet inputUriDirname = resources.dirname(valueUri);\n\t\t\t\t\tconst currentFolderWithoutSep = resources.removeTrailingPathSeparator(resources.addTrailingPathSeparator(this.currentFolder));\n\t\t\t\t\tconst inputUriDirnameWithoutSep = resources.removeTrailingPathSeparator(resources.addTrailingPathSeparator(inputUriDirname));\n\t\t\t\t\tif (!resources.extUriIgnorePathCase.isEqual(currentFolderWithoutSep, inputUriDirnameWithoutSep)\n\t\t\t\t\t\t&& (!/^[a-zA-Z]:$/.test(this.filePickBox.value)\n\t\t\t\t\t\t\t|| !equalsIgnoreCase(this.pathFromUri(this.currentFolder).substring(0, this.filePickBox.value.length), this.filePickBox.value))) {\n\t\t\t\t\t\tlet statWithoutTrailing: IFileStatWithPartialMetadata | undefined;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tstatWithoutTrailing = await this.fileService.stat(inputUriDirname);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t// do nothing\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (statWithoutTrailing && statWithoutTrailing.isDirectory) {\n\t\t\t\t\t\t\tthis.badPath = undefined;\n\t\t\t\t\t\t\tinputUriDirname = this.tryAddTrailingSeparatorToDirectory(inputUriDirname, statWithoutTrailing);\n\t\t\t\t\t\t\treturn await this.updateItems(inputUriDirname, false, resources.basename(valueUri)) ? UpdateResult.UpdatedWithTrailing : UpdateResult.Updated;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.badPath = undefined;\n\t\treturn UpdateResult.NotUpdated;\n\t}\n\n\tprivate tryUpdateTrailing(value: URI) {\n\t\tconst ext = resources.extname(value);\n\t\tif (this.trailing && ext) {\n\t\t\tthis.trailing = resources.basename(value);\n\t\t}\n\t}\n\n\tprivate setActiveItems(value: string) {\n\t\tvalue = this.pathFromUri(this.tildaReplace(value));\n\t\tconst asUri = this.remoteUriFrom(value);\n\t\tconst inputBasename = resources.basename(asUri);\n\t\tconst userPath = this.constructFullUserPath();\n\t\t// Make sure that the folder whose children we are currently viewing matches the path in the input\n\t\tconst pathsEqual = equalsIgnoreCase(userPath, value.substring(0, userPath.length)) ||\n\t\t\tequalsIgnoreCase(value, userPath.substring(0, value.length));\n\t\tif (pathsEqual) {\n\t\t\tlet hasMatch = false;\n\t\t\tfor (let i = 0; i < this.filePickBox.items.length; i++) {\n\t\t\t\tconst item = <FileQuickPickItem>this.filePickBox.items[i];\n\t\t\t\tif (this.setAutoComplete(value, inputBasename, item)) {\n\t\t\t\t\thasMatch = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!hasMatch) {\n\t\t\t\tconst userBasename = inputBasename.length >= 2 ? userPath.substring(userPath.length - inputBasename.length + 2) : '';\n\t\t\t\tthis.userEnteredPathSegment = (userBasename === inputBasename) ? inputBasename : '';\n\t\t\t\tthis.autoCompletePathSegment = '';\n\t\t\t\tthis.filePickBox.activeItems = [];\n\t\t\t\tthis.tryUpdateTrailing(asUri);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.userEnteredPathSegment = inputBasename;\n\t\t\tthis.autoCompletePathSegment = '';\n\t\t\tthis.filePickBox.activeItems = [];\n\t\t\tthis.tryUpdateTrailing(asUri);\n\t\t}\n\t}\n\n\tprivate setAutoComplete(startingValue: string, startingBasename: string, quickPickItem: FileQuickPickItem, force: boolean = false): boolean {\n\t\tif (this.busy) {\n\t\t\t// We're in the middle of something else. Doing an auto complete now can result jumbled or incorrect autocompletes.\n\t\t\tthis.userEnteredPathSegment = startingBasename;\n\t\t\tthis.autoCompletePathSegment = '';\n\t\t\treturn false;\n\t\t}\n\t\tconst itemBasename = quickPickItem.label;\n\t\t// Either force the autocomplete, or the old value should be one smaller than the new value and match the new value.\n\t\tif (itemBasename === '..') {\n\t\t\t// Don't match on the up directory item ever.\n\t\t\tthis.userEnteredPathSegment = '';\n\t\t\tthis.autoCompletePathSegment = '';\n\t\t\tthis.activeItem = quickPickItem;\n\t\t\tif (force) {\n\t\t\t\t// clear any selected text\n\t\t\t\tgetActiveDocument().execCommand('insertText', false, '');\n\t\t\t}\n\t\t\treturn false;\n\t\t} else if (!force && (itemBasename.length >= startingBasename.length) && equalsIgnoreCase(itemBasename.substr(0, startingBasename.length), startingBasename)) {\n\t\t\tthis.userEnteredPathSegment = startingBasename;\n\t\t\tthis.activeItem = quickPickItem;\n\t\t\t// Changing the active items will trigger the onDidActiveItemsChanged. Clear the autocomplete first, then set it after.\n\t\t\tthis.autoCompletePathSegment = '';\n\t\t\tif (quickPickItem.isFolder || !this.trailing) {\n\t\t\t\tthis.filePickBox.activeItems = [quickPickItem];\n\t\t\t} else {\n\t\t\t\tthis.filePickBox.activeItems = [];\n\t\t\t}\n\t\t\treturn true;\n\t\t} else if (force && (!equalsIgnoreCase(this.basenameWithTrailingSlash(quickPickItem.uri), (this.userEnteredPathSegment + this.autoCompletePathSegment)))) {\n\t\t\tthis.userEnteredPathSegment = '';\n\t\t\tif (!this.accessibilityService.isScreenReaderOptimized()) {\n\t\t\t\tthis.autoCompletePathSegment = this.trimTrailingSlash(itemBasename);\n\t\t\t}\n\t\t\tthis.activeItem = quickPickItem;\n\t\t\tif (!this.accessibilityService.isScreenReaderOptimized()) {\n\t\t\t\tthis.filePickBox.valueSelection = [this.pathFromUri(this.currentFolder, true).length, this.filePickBox.value.length];\n\t\t\t\t// use insert text to preserve undo buffer\n\t\t\t\tthis.insertText(this.pathAppend(this.currentFolder, this.autoCompletePathSegment), this.autoCompletePathSegment);\n\t\t\t\tthis.filePickBox.valueSelection = [this.filePickBox.value.length - this.autoCompletePathSegment.length, this.filePickBox.value.length];\n\t\t\t}\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.userEnteredPathSegment = startingBasename;\n\t\t\tthis.autoCompletePathSegment = '';\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate insertText(wholeValue: string, insertText: string) {\n\t\tif (this.filePickBox.inputHasFocus()) {\n\t\t\tgetActiveDocument().execCommand('insertText', false, insertText);\n\t\t\tif (this.filePickBox.value !== wholeValue) {\n\t\t\t\tthis.filePickBox.value = wholeValue;\n\t\t\t\tthis.handleValueChange(wholeValue);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.filePickBox.value = wholeValue;\n\t\t\tthis.handleValueChange(wholeValue);\n\t\t}\n\t}\n\n\tprivate addPostfix(uri: URI): URI {\n\t\tlet result = uri;\n\t\tif (this.requiresTrailing && this.options.filters && this.options.filters.length > 0 && !resources.hasTrailingPathSeparator(uri)) {\n\t\t\t// Make sure that the suffix is added. If the user deleted it, we automatically add it here\n\t\t\tlet hasExt: boolean = false;\n\t\t\tconst currentExt = resources.extname(uri).substr(1);\n\t\t\tfor (let i = 0; i < this.options.filters.length; i++) {\n\t\t\t\tfor (let j = 0; j < this.options.filters[i].extensions.length; j++) {\n\t\t\t\t\tif ((this.options.filters[i].extensions[j] === '*') || (this.options.filters[i].extensions[j] === currentExt)) {\n\t\t\t\t\t\thasExt = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (hasExt) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!hasExt) {\n\t\t\t\tresult = resources.joinPath(resources.dirname(uri), resources.basename(uri) + '.' + this.options.filters[0].extensions[0]);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate trimTrailingSlash(path: string): string {\n\t\treturn ((path.length > 1) && this.endsWithSlash(path)) ? path.substr(0, path.length - 1) : path;\n\t}\n\n\tprivate yesNoPrompt(uri: URI, message: string): Promise<boolean> {\n\t\tinterface YesNoItem extends IQuickPickItem {\n\t\t\tvalue: boolean;\n\t\t}\n\t\tconst disposableStore = new DisposableStore();\n\t\tconst prompt = disposableStore.add(this.quickInputService.createQuickPick<YesNoItem>());\n\t\tprompt.title = message;\n\t\tprompt.ignoreFocusOut = true;\n\t\tprompt.ok = true;\n\t\tprompt.customButton = true;\n\t\tprompt.customLabel = nls.localize('remoteFileDialog.cancel', 'Cancel');\n\t\tprompt.value = this.pathFromUri(uri);\n\n\t\tlet isResolving = false;\n\t\treturn new Promise<boolean>(resolve => {\n\t\t\tdisposableStore.add(prompt.onDidAccept(() => {\n\t\t\t\tisResolving = true;\n\t\t\t\tprompt.hide();\n\t\t\t\tresolve(true);\n\t\t\t}));\n\t\t\tdisposableStore.add(prompt.onDidHide(() => {\n\t\t\t\tif (!isResolving) {\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t\tthis.filePickBox.show();\n\t\t\t\tthis.hidden = false;\n\t\t\t\tdisposableStore.dispose();\n\t\t\t}));\n\t\t\tdisposableStore.add(prompt.onDidChangeValue(() => {\n\t\t\t\tprompt.hide();\n\t\t\t}));\n\t\t\tdisposableStore.add(prompt.onDidCustom(() => {\n\t\t\t\tprompt.hide();\n\t\t\t}));\n\t\t\tprompt.show();\n\t\t});\n\t}\n\n\tprivate async validate(uri: URI | undefined): Promise<boolean> {\n\t\tif (uri === undefined) {\n\t\t\tthis.filePickBox.validationMessage = nls.localize('remoteFileDialog.invalidPath', 'Please enter a valid path.');\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\tlet stat: IFileStatWithPartialMetadata | undefined;\n\t\tlet statDirname: IFileStatWithPartialMetadata | undefined;\n\t\ttry {\n\t\t\tstatDirname = await this.fileService.stat(resources.dirname(uri));\n\t\t\tstat = await this.fileService.stat(uri);\n\t\t} catch (e) {\n\t\t\t// do nothing\n\t\t}\n\n\t\tif (this.requiresTrailing) { // save\n\t\t\tif (stat && stat.isDirectory) {\n\t\t\t\t// Can't do this\n\t\t\t\tthis.filePickBox.validationMessage = nls.localize('remoteFileDialog.validateFolder', 'The folder already exists. Please use a new file name.');\n\t\t\t\treturn Promise.resolve(false);\n\t\t\t} else if (stat) {\n\t\t\t\t// Replacing a file.\n\t\t\t\t// Show a yes/no prompt\n\t\t\t\tconst message = nls.localize('remoteFileDialog.validateExisting', '{0} already exists. Are you sure you want to overwrite it?', resources.basename(uri));\n\t\t\t\treturn this.yesNoPrompt(uri, message);\n\t\t\t} else if (!(isValidBasename(resources.basename(uri), this.isWindows))) {\n\t\t\t\t// Filename not allowed\n\t\t\t\tthis.filePickBox.validationMessage = nls.localize('remoteFileDialog.validateBadFilename', 'Please enter a valid file name.');\n\t\t\t\treturn Promise.resolve(false);\n\t\t\t} else if (!statDirname) {\n\t\t\t\t// Folder to save in doesn't exist\n\t\t\t\tconst message = nls.localize('remoteFileDialog.validateCreateDirectory', 'The folder {0} does not exist. Would you like to create it?', resources.basename(resources.dirname(uri)));\n\t\t\t\treturn this.yesNoPrompt(uri, message);\n\t\t\t} else if (!statDirname.isDirectory) {\n\t\t\t\tthis.filePickBox.validationMessage = nls.localize('remoteFileDialog.validateNonexistentDir', 'Please enter a path that exists.');\n\t\t\t\treturn Promise.resolve(false);\n\t\t\t} else if (statDirname.readonly) {\n\t\t\t\tthis.filePickBox.validationMessage = nls.localize('remoteFileDialog.validateReadonlyFolder', 'This folder cannot be used as a save destination. Please choose another folder');\n\t\t\t\treturn Promise.resolve(false);\n\t\t\t}\n\t\t} else { // open\n\t\t\tif (!stat) {\n\t\t\t\t// File or folder doesn't exist\n\t\t\t\tthis.filePickBox.validationMessage = nls.localize('remoteFileDialog.validateNonexistentDir', 'Please enter a path that exists.');\n\t\t\t\treturn Promise.resolve(false);\n\t\t\t} else if (uri.path === '/' && this.isWindows) {\n\t\t\t\tthis.filePickBox.validationMessage = nls.localize('remoteFileDialog.windowsDriveLetter', 'Please start the path with a drive letter.');\n\t\t\t\treturn Promise.resolve(false);\n\t\t\t} else if (stat.isDirectory && !this.allowFolderSelection) {\n\t\t\t\t// Folder selected when folder selection not permitted\n\t\t\t\tthis.filePickBox.validationMessage = nls.localize('remoteFileDialog.validateFileOnly', 'Please select a file.');\n\t\t\t\treturn Promise.resolve(false);\n\t\t\t} else if (!stat.isDirectory && !this.allowFileSelection) {\n\t\t\t\t// File selected when file selection not permitted\n\t\t\t\tthis.filePickBox.validationMessage = nls.localize('remoteFileDialog.validateFolderOnly', 'Please select a folder.');\n\t\t\t\treturn Promise.resolve(false);\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve(true);\n\t}\n\n\t// Returns true if there is a file at the end of the URI.\n\tprivate async updateItems(newFolder: URI, force: boolean = false, trailing?: string): Promise<boolean> {\n\t\tthis.busy = true;\n\t\tthis.autoCompletePathSegment = '';\n\t\tconst isSave = !!trailing;\n\t\tlet result = false;\n\n\t\tconst updatingPromise = createCancelablePromise(async token => {\n\t\t\tlet folderStat: IFileStat | undefined;\n\t\t\ttry {\n\t\t\t\tfolderStat = await this.fileService.resolve(newFolder);\n\t\t\t\tif (!folderStat.isDirectory) {\n\t\t\t\t\ttrailing = resources.basename(newFolder);\n\t\t\t\t\tnewFolder = resources.dirname(newFolder);\n\t\t\t\t\tfolderStat = undefined;\n\t\t\t\t\tresult = true;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t// The file/directory doesn't exist\n\t\t\t}\n\t\t\tconst newValue = trailing ? this.pathAppend(newFolder, trailing) : this.pathFromUri(newFolder, true);\n\t\t\tthis.currentFolder = this.endsWithSlash(newFolder.path) ? newFolder : resources.addTrailingPathSeparator(newFolder, this.separator);\n\t\t\tthis.userEnteredPathSegment = trailing ? trailing : '';\n\n\t\t\treturn this.createItems(folderStat, this.currentFolder, token).then(items => {\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\tthis.busy = false;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tthis.filePickBox.itemActivation = ItemActivation.NONE;\n\t\t\t\tthis.filePickBox.items = items;\n\n\t\t\t\t// the user might have continued typing while we were updating. Only update the input box if it doesn't match the directory.\n\t\t\t\tif (!equalsIgnoreCase(this.filePickBox.value, newValue) && force) {\n\t\t\t\t\tthis.filePickBox.valueSelection = [0, this.filePickBox.value.length];\n\t\t\t\t\tthis.insertText(newValue, newValue);\n\t\t\t\t}\n\t\t\t\tif (force && trailing && isSave) {\n\t\t\t\t\t// Keep the cursor position in front of the save as name.\n\t\t\t\t\tthis.filePickBox.valueSelection = [this.filePickBox.value.length - trailing.length, this.filePickBox.value.length - trailing.length];\n\t\t\t\t} else if (!trailing) {\n\t\t\t\t\t// If there is trailing, we don't move the cursor. If there is no trailing, cursor goes at the end.\n\t\t\t\t\tthis.filePickBox.valueSelection = [this.filePickBox.value.length, this.filePickBox.value.length];\n\t\t\t\t}\n\t\t\t\tthis.busy = false;\n\t\t\t\tthis.updatingPromise = undefined;\n\t\t\t\treturn result;\n\t\t\t});\n\t\t});\n\n\t\tif (this.updatingPromise !== undefined) {\n\t\t\tthis.updatingPromise.cancel();\n\t\t}\n\t\tthis.updatingPromise = updatingPromise;\n\n\t\treturn updatingPromise;\n\t}\n\n\tprivate pathFromUri(uri: URI, endWithSeparator: boolean = false): string {\n\t\tlet result: string = normalizeDriveLetter(uri.fsPath, this.isWindows).replace(/\\n/g, '');\n\t\tif (this.separator === '/') {\n\t\t\tresult = result.replace(/\\\\/g, this.separator);\n\t\t} else {\n\t\t\tresult = result.replace(/\\//g, this.separator);\n\t\t}\n\t\tif (endWithSeparator && !this.endsWithSlash(result)) {\n\t\t\tresult = result + this.separator;\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate pathAppend(uri: URI, additional: string): string {\n\t\tif ((additional === '..') || (additional === '.')) {\n\t\t\tconst basePath = this.pathFromUri(uri, true);\n\t\t\treturn basePath + additional;\n\t\t} else {\n\t\t\treturn this.pathFromUri(resources.joinPath(uri, additional));\n\t\t}\n\t}\n\n\tprivate async checkIsWindowsOS(): Promise<boolean> {\n\t\tlet isWindowsOS = isWindows;\n\t\tconst env = await this.getRemoteAgentEnvironment();\n\t\tif (env) {\n\t\t\tisWindowsOS = env.os === OperatingSystem.Windows;\n\t\t}\n\t\treturn isWindowsOS;\n\t}\n\n\tprivate endsWithSlash(s: string) {\n\t\treturn /[\\/\\\\]$/.test(s);\n\t}\n\n\tprivate basenameWithTrailingSlash(fullPath: URI): string {\n\t\tconst child = this.pathFromUri(fullPath, true);\n\t\tconst parent = this.pathFromUri(resources.dirname(fullPath), true);\n\t\treturn child.substring(parent.length);\n\t}\n\n\tprivate async createBackItem(currFolder: URI): Promise<FileQuickPickItem | undefined> {\n\t\tconst fileRepresentationCurr = this.currentFolder.with({ scheme: Schemas.file, authority: '' });\n\t\tconst fileRepresentationParent = resources.dirname(fileRepresentationCurr);\n\t\tif (!resources.isEqual(fileRepresentationCurr, fileRepresentationParent)) {\n\t\t\tconst parentFolder = resources.dirname(currFolder);\n\t\t\tif (await this.fileService.exists(parentFolder)) {\n\t\t\t\treturn { label: '..', uri: resources.addTrailingPathSeparator(parentFolder, this.separator), isFolder: true };\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate async createItems(folder: IFileStat | undefined, currentFolder: URI, token: CancellationToken): Promise<FileQuickPickItem[]> {\n\t\tconst result: FileQuickPickItem[] = [];\n\n\t\tconst backDir = await this.createBackItem(currentFolder);\n\t\ttry {\n\t\t\tif (!folder) {\n\t\t\t\tfolder = await this.fileService.resolve(currentFolder);\n\t\t\t}\n\t\t\tconst items = folder.children ? await Promise.all(folder.children.map(child => this.createItem(child, currentFolder, token))) : [];\n\t\t\tfor (const item of items) {\n\t\t\t\tif (item) {\n\t\t\t\t\tresult.push(item);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// ignore\n\t\t\tconsole.log(e);\n\t\t}\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn [];\n\t\t}\n\t\tconst sorted = result.sort((i1, i2) => {\n\t\t\tif (i1.isFolder !== i2.isFolder) {\n\t\t\t\treturn i1.isFolder ? -1 : 1;\n\t\t\t}\n\t\t\tconst trimmed1 = this.endsWithSlash(i1.label) ? i1.label.substr(0, i1.label.length - 1) : i1.label;\n\t\t\tconst trimmed2 = this.endsWithSlash(i2.label) ? i2.label.substr(0, i2.label.length - 1) : i2.label;\n\t\t\treturn trimmed1.localeCompare(trimmed2);\n\t\t});\n\n\t\tif (backDir) {\n\t\t\tsorted.unshift(backDir);\n\t\t}\n\t\treturn sorted;\n\t}\n\n\tprivate filterFile(file: URI): boolean {\n\t\tif (this.options.filters) {\n\t\t\tfor (let i = 0; i < this.options.filters.length; i++) {\n\t\t\t\tfor (let j = 0; j < this.options.filters[i].extensions.length; j++) {\n\t\t\t\t\tconst testExt = this.options.filters[i].extensions[j];\n\t\t\t\t\tif ((testExt === '*') || (file.path.endsWith('.' + testExt))) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate async createItem(stat: IFileStat, parent: URI, token: CancellationToken): Promise<FileQuickPickItem | undefined> {\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn undefined;\n\t\t}\n\t\tlet fullPath = resources.joinPath(parent, stat.name);\n\t\tif (stat.isDirectory) {\n\t\t\tconst filename = resources.basename(fullPath);\n\t\t\tfullPath = resources.addTrailingPathSeparator(fullPath, this.separator);\n\t\t\treturn { label: filename, uri: fullPath, isFolder: true, iconClasses: getIconClasses(this.modelService, this.languageService, fullPath || undefined, FileKind.FOLDER) };\n\t\t} else if (!stat.isDirectory && this.allowFileSelection && this.filterFile(fullPath)) {\n\t\t\treturn { label: stat.name, uri: fullPath, isFolder: false, iconClasses: getIconClasses(this.modelService, this.languageService, fullPath || undefined) };\n\t\t}\n\t\treturn undefined;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["OpenLocalFileCommand", "SaveLocalFileCommand", "OpenLocalFolderCommand", "OpenLocalFileFolderCommand", "UpdateResult"]
}
