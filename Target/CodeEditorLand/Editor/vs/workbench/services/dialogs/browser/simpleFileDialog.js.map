{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/dialogs/browser/simpleFileDialog.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getActiveDocument } from \"../../../../base/browser/dom.js\";\nimport {\n\ttype CancelablePromise,\n\tcreateCancelablePromise,\n} from \"../../../../base/common/async.js\";\nimport type { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport { Emitter } from \"../../../../base/common/event.js\";\nimport { isValidBasename } from \"../../../../base/common/extpath.js\";\nimport { normalizeDriveLetter } from \"../../../../base/common/labels.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport * as objects from \"../../../../base/common/objects.js\";\nimport {\n\tOperatingSystem,\n\tisWindows,\n} from \"../../../../base/common/platform.js\";\nimport * as resources from \"../../../../base/common/resources.js\";\nimport {\n\tequalsIgnoreCase,\n\tformat,\n\tstartsWithIgnoreCase,\n} from \"../../../../base/common/strings.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { ILanguageService } from \"../../../../editor/common/languages/language.js\";\nimport { getIconClasses } from \"../../../../editor/common/services/getIconClasses.js\";\nimport { IModelService } from \"../../../../editor/common/services/model.js\";\nimport * as nls from \"../../../../nls.js\";\nimport { IAccessibilityService } from \"../../../../platform/accessibility/common/accessibility.js\";\nimport type { ICommandHandler } from \"../../../../platform/commands/common/commands.js\";\nimport {\n\ttype IContextKey,\n\tIContextKeyService,\n\tRawContextKey,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport {\n\tIFileDialogService,\n\ttype IOpenDialogOptions,\n\ttype ISaveDialogOptions,\n} from \"../../../../platform/dialogs/common/dialogs.js\";\nimport {\n\tFileKind,\n\tIFileService,\n\ttype IFileStat,\n\ttype IFileStatWithPartialMetadata,\n} from \"../../../../platform/files/common/files.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport { ILabelService } from \"../../../../platform/label/common/label.js\";\nimport { INotificationService } from \"../../../../platform/notification/common/notification.js\";\nimport {\n\tIQuickInputService,\n\ttype IQuickPick,\n\ttype IQuickPickItem,\n\tItemActivation,\n} from \"../../../../platform/quickinput/common/quickInput.js\";\nimport type { IRemoteAgentEnvironment } from \"../../../../platform/remote/common/remoteAgentEnvironment.js\";\nimport { IWorkspaceContextService } from \"../../../../platform/workspace/common/workspace.js\";\nimport { SaveReason } from \"../../../common/editor.js\";\nimport { IEditorService } from \"../../editor/common/editorService.js\";\nimport { IWorkbenchEnvironmentService } from \"../../environment/common/environmentService.js\";\nimport { IPathService } from \"../../path/common/pathService.js\";\nimport { IRemoteAgentService } from \"../../remote/common/remoteAgentService.js\";\n\nexport namespace OpenLocalFileCommand {\n\texport const ID = \"workbench.action.files.openLocalFile\";\n\texport const LABEL = nls.localize(\"openLocalFile\", \"Open Local File...\");\n\texport function handler(): ICommandHandler {\n\t\treturn (accessor) => {\n\t\t\tconst dialogService = accessor.get(IFileDialogService);\n\t\t\treturn dialogService.pickFileAndOpen({\n\t\t\t\tforceNewWindow: false,\n\t\t\t\tavailableFileSystems: [Schemas.file],\n\t\t\t});\n\t\t};\n\t}\n}\n\nexport namespace SaveLocalFileCommand {\n\texport const ID = \"workbench.action.files.saveLocalFile\";\n\texport const LABEL = nls.localize(\"saveLocalFile\", \"Save Local File...\");\n\texport function handler(): ICommandHandler {\n\t\treturn (accessor) => {\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst activeEditorPane = editorService.activeEditorPane;\n\t\t\tif (activeEditorPane) {\n\t\t\t\treturn editorService.save(\n\t\t\t\t\t{\n\t\t\t\t\t\tgroupId: activeEditorPane.group.id,\n\t\t\t\t\t\teditor: activeEditorPane.input,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tsaveAs: true,\n\t\t\t\t\t\tavailableFileSystems: [Schemas.file],\n\t\t\t\t\t\treason: SaveReason.EXPLICIT,\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn Promise.resolve(undefined);\n\t\t};\n\t}\n}\n\nexport namespace OpenLocalFolderCommand {\n\texport const ID = \"workbench.action.files.openLocalFolder\";\n\texport const LABEL = nls.localize(\n\t\t\"openLocalFolder\",\n\t\t\"Open Local Folder...\",\n\t);\n\texport function handler(): ICommandHandler {\n\t\treturn (accessor) => {\n\t\t\tconst dialogService = accessor.get(IFileDialogService);\n\t\t\treturn dialogService.pickFolderAndOpen({\n\t\t\t\tforceNewWindow: false,\n\t\t\t\tavailableFileSystems: [Schemas.file],\n\t\t\t});\n\t\t};\n\t}\n}\n\nexport namespace OpenLocalFileFolderCommand {\n\texport const ID = \"workbench.action.files.openLocalFileFolder\";\n\texport const LABEL = nls.localize(\"openLocalFileFolder\", \"Open Local...\");\n\texport function handler(): ICommandHandler {\n\t\treturn (accessor) => {\n\t\t\tconst dialogService = accessor.get(IFileDialogService);\n\t\t\treturn dialogService.pickFileFolderAndOpen({\n\t\t\t\tforceNewWindow: false,\n\t\t\t\tavailableFileSystems: [Schemas.file],\n\t\t\t});\n\t\t};\n\t}\n}\n\ninterface FileQuickPickItem extends IQuickPickItem {\n\turi: URI;\n\tisFolder: boolean;\n}\n\nenum UpdateResult {\n\tUpdated = 0,\n\tUpdatedWithTrailing = 1,\n\tUpdating = 2,\n\tNotUpdated = 3,\n\tInvalidPath = 4,\n}\n\nexport const RemoteFileDialogContext = new RawContextKey<boolean>(\n\t\"remoteFileDialogVisible\",\n\tfalse,\n);\n\nexport interface ISimpleFileDialog extends IDisposable {\n\tshowOpenDialog(options: IOpenDialogOptions): Promise<URI | undefined>;\n\tshowSaveDialog(options: ISaveDialogOptions): Promise<URI | undefined>;\n}\n\nexport class SimpleFileDialog extends Disposable implements ISimpleFileDialog {\n\tprivate options!: IOpenDialogOptions;\n\tprivate currentFolder!: URI;\n\tprivate filePickBox!: IQuickPick<FileQuickPickItem>;\n\tprivate hidden = false;\n\tprivate allowFileSelection = true;\n\tprivate allowFolderSelection = false;\n\tprivate remoteAuthority: string | undefined;\n\tprivate requiresTrailing = false;\n\tprivate trailing: string | undefined;\n\tprotected scheme: string;\n\tprivate contextKey: IContextKey<boolean>;\n\tprivate userEnteredPathSegment = \"\";\n\tprivate autoCompletePathSegment = \"\";\n\tprivate activeItem: FileQuickPickItem | undefined;\n\tprivate userHome!: URI;\n\tprivate trueHome!: URI;\n\tprivate isWindows = false;\n\tprivate badPath: string | undefined;\n\tprivate remoteAgentEnvironment: IRemoteAgentEnvironment | null | undefined;\n\tprivate separator = \"/\";\n\tprivate readonly onBusyChangeEmitter = this._register(\n\t\tnew Emitter<boolean>(),\n\t);\n\tprivate updatingPromise: CancelablePromise<boolean> | undefined;\n\n\tconstructor(\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@IWorkspaceContextService private readonly workspaceContextService: IWorkspaceContextService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@IFileDialogService private readonly fileDialogService: IFileDialogService,\n\t\t@IModelService private readonly modelService: IModelService,\n\t\t@ILanguageService private readonly languageService: ILanguageService,\n\t\t@IWorkbenchEnvironmentService protected readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IRemoteAgentService private readonly remoteAgentService: IRemoteAgentService,\n\t\t@IPathService protected readonly pathService: IPathService,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IAccessibilityService private readonly accessibilityService: IAccessibilityService\n\t) {\n\t\tsuper();\n\t\tthis.remoteAuthority = this.environmentService.remoteAuthority;\n\t\tthis.contextKey = RemoteFileDialogContext.bindTo(contextKeyService);\n\t\tthis.scheme = this.pathService.defaultUriScheme;\n\t}\n\n\tset busy(busy: boolean) {\n\t\tif (this.filePickBox.busy !== busy) {\n\t\t\tthis.filePickBox.busy = busy;\n\t\t\tthis.onBusyChangeEmitter.fire(busy);\n\t\t}\n\t}\n\n\tget busy(): boolean {\n\t\treturn this.filePickBox.busy;\n\t}\n\n\tpublic async showOpenDialog(\n\t\toptions: IOpenDialogOptions = {},\n\t): Promise<URI | undefined> {\n\t\tthis.scheme = this.getScheme(\n\t\t\toptions.availableFileSystems,\n\t\t\toptions.defaultUri,\n\t\t);\n\t\tthis.userHome = await this.getUserHome();\n\t\tthis.trueHome = await this.getUserHome(true);\n\t\tconst newOptions = this.getOptions(options);\n\t\tif (!newOptions) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\t\tthis.options = newOptions;\n\t\treturn this.pickResource();\n\t}\n\n\tpublic async showSaveDialog(\n\t\toptions: ISaveDialogOptions,\n\t): Promise<URI | undefined> {\n\t\tthis.scheme = this.getScheme(\n\t\t\toptions.availableFileSystems,\n\t\t\toptions.defaultUri,\n\t\t);\n\t\tthis.userHome = await this.getUserHome();\n\t\tthis.trueHome = await this.getUserHome(true);\n\t\tthis.requiresTrailing = true;\n\t\tconst newOptions = this.getOptions(options, true);\n\t\tif (!newOptions) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\t\tthis.options = newOptions;\n\t\tthis.options.canSelectFolders = true;\n\t\tthis.options.canSelectFiles = true;\n\n\t\treturn new Promise<URI | undefined>((resolve) => {\n\t\t\tthis.pickResource(true).then((folderUri) => {\n\t\t\t\tresolve(folderUri);\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate getOptions(\n\t\toptions: ISaveDialogOptions | IOpenDialogOptions,\n\t\tisSave = false,\n\t): IOpenDialogOptions | undefined {\n\t\tlet defaultUri: URI | undefined;\n\t\tlet filename: string | undefined;\n\t\tif (options.defaultUri) {\n\t\t\tdefaultUri =\n\t\t\t\tthis.scheme === options.defaultUri.scheme\n\t\t\t\t\t? options.defaultUri\n\t\t\t\t\t: undefined;\n\t\t\tfilename = isSave\n\t\t\t\t? resources.basename(options.defaultUri)\n\t\t\t\t: undefined;\n\t\t}\n\t\tif (!defaultUri) {\n\t\t\tdefaultUri = this.userHome;\n\t\t\tif (filename) {\n\t\t\t\tdefaultUri = resources.joinPath(defaultUri, filename);\n\t\t\t}\n\t\t}\n\t\tif (\n\t\t\tthis.scheme !== Schemas.file &&\n\t\t\t!this.fileService.hasProvider(defaultUri)\n\t\t) {\n\t\t\tthis.notificationService.info(\n\t\t\t\tnls.localize(\n\t\t\t\t\t\"remoteFileDialog.notConnectedToRemote\",\n\t\t\t\t\t\"File system provider for {0} is not available.\",\n\t\t\t\t\tdefaultUri.toString(),\n\t\t\t\t),\n\t\t\t);\n\t\t\treturn undefined;\n\t\t}\n\t\tconst newOptions: IOpenDialogOptions = objects.deepClone(options);\n\t\tnewOptions.defaultUri = defaultUri;\n\t\treturn newOptions;\n\t}\n\n\tprivate remoteUriFrom(path: string, hintUri?: URI): URI {\n\t\tif (!path.startsWith(\"\\\\\\\\\")) {\n\t\t\tpath = path.replace(/\\\\/g, \"/\");\n\t\t}\n\t\tconst uri: URI =\n\t\t\tthis.scheme === Schemas.file\n\t\t\t\t? URI.file(path)\n\t\t\t\t: URI.from({\n\t\t\t\t\t\tscheme: this.scheme,\n\t\t\t\t\t\tpath,\n\t\t\t\t\t\tquery: hintUri?.query,\n\t\t\t\t\t\tfragment: hintUri?.fragment,\n\t\t\t\t\t});\n\t\t// If the default scheme is file, then we don't care about the remote authority or the hint authority\n\t\tconst authority =\n\t\t\turi.scheme === Schemas.file\n\t\t\t\t? undefined\n\t\t\t\t: (this.remoteAuthority ?? hintUri?.authority);\n\t\treturn resources.toLocalResource(\n\t\t\turi,\n\t\t\tauthority,\n\t\t\t// If there is a remote authority, then we should use the system's default URI as the local scheme.\n\t\t\t// If there is *no* remote authority, then we should use the default scheme for this dialog as that is already local.\n\t\t\tauthority ? this.pathService.defaultUriScheme : uri.scheme,\n\t\t);\n\t}\n\n\tprivate getScheme(\n\t\tavailable: readonly string[] | undefined,\n\t\tdefaultUri: URI | undefined,\n\t): string {\n\t\tif (available && available.length > 0) {\n\t\t\tif (defaultUri && available.indexOf(defaultUri.scheme) >= 0) {\n\t\t\t\treturn defaultUri.scheme;\n\t\t\t}\n\t\t\treturn available[0];\n\t\t} else if (defaultUri) {\n\t\t\treturn defaultUri.scheme;\n\t\t}\n\t\treturn Schemas.file;\n\t}\n\n\tprivate async getRemoteAgentEnvironment(): Promise<IRemoteAgentEnvironment | null> {\n\t\tif (this.remoteAgentEnvironment === undefined) {\n\t\t\tthis.remoteAgentEnvironment =\n\t\t\t\tawait this.remoteAgentService.getEnvironment();\n\t\t}\n\t\treturn this.remoteAgentEnvironment;\n\t}\n\n\tprotected getUserHome(trueHome = false): Promise<URI> {\n\t\treturn trueHome\n\t\t\t? this.pathService.userHome({\n\t\t\t\t\tpreferLocal: this.scheme === Schemas.file,\n\t\t\t\t})\n\t\t\t: this.fileDialogService.preferredHome(this.scheme);\n\t}\n\n\tprivate async pickResource(isSave = false): Promise<URI | undefined> {\n\t\tthis.allowFolderSelection = !!this.options.canSelectFolders;\n\t\tthis.allowFileSelection = !!this.options.canSelectFiles;\n\t\tthis.separator = this.labelService.getSeparator(\n\t\t\tthis.scheme,\n\t\t\tthis.remoteAuthority,\n\t\t);\n\t\tthis.hidden = false;\n\t\tthis.isWindows = await this.checkIsWindowsOS();\n\t\tlet homedir: URI = this.options.defaultUri\n\t\t\t? this.options.defaultUri\n\t\t\t: this.workspaceContextService.getWorkspace().folders[0].uri;\n\t\tlet stat: IFileStatWithPartialMetadata | undefined;\n\t\tconst ext: string = resources.extname(homedir);\n\t\tif (this.options.defaultUri) {\n\t\t\ttry {\n\t\t\t\tstat = await this.fileService.stat(this.options.defaultUri);\n\t\t\t} catch (e) {\n\t\t\t\t// The file or folder doesn't exist\n\t\t\t}\n\t\t\tif (!stat || !stat.isDirectory) {\n\t\t\t\thomedir = resources.dirname(this.options.defaultUri);\n\t\t\t\tthis.trailing = resources.basename(this.options.defaultUri);\n\t\t\t}\n\t\t}\n\n\t\treturn new Promise<URI | undefined>((resolve) => {\n\t\t\tthis.filePickBox = this._register(\n\t\t\t\tthis.quickInputService.createQuickPick<FileQuickPickItem>(),\n\t\t\t);\n\t\t\tthis.busy = true;\n\t\t\tthis.filePickBox.matchOnLabel = false;\n\t\t\tthis.filePickBox.sortByLabel = false;\n\t\t\tthis.filePickBox.ignoreFocusOut = true;\n\t\t\tthis.filePickBox.ok = true;\n\t\t\tif (\n\t\t\t\tthis.scheme !== Schemas.file &&\n\t\t\t\tthis.options &&\n\t\t\t\tthis.options.availableFileSystems &&\n\t\t\t\tthis.options.availableFileSystems.length > 1 &&\n\t\t\t\tthis.options.availableFileSystems.indexOf(Schemas.file) > -1\n\t\t\t) {\n\t\t\t\tthis.filePickBox.customButton = true;\n\t\t\t\tthis.filePickBox.customLabel = nls.localize(\n\t\t\t\t\t\"remoteFileDialog.local\",\n\t\t\t\t\t\"Show Local\",\n\t\t\t\t);\n\t\t\t\tlet action;\n\t\t\t\tif (isSave) {\n\t\t\t\t\taction = SaveLocalFileCommand;\n\t\t\t\t} else {\n\t\t\t\t\taction = this.allowFileSelection\n\t\t\t\t\t\t? this.allowFolderSelection\n\t\t\t\t\t\t\t? OpenLocalFileFolderCommand\n\t\t\t\t\t\t\t: OpenLocalFileCommand\n\t\t\t\t\t\t: OpenLocalFolderCommand;\n\t\t\t\t}\n\t\t\t\tconst keybinding = this.keybindingService.lookupKeybinding(\n\t\t\t\t\taction.ID,\n\t\t\t\t);\n\t\t\t\tif (keybinding) {\n\t\t\t\t\tconst label = keybinding.getLabel();\n\t\t\t\t\tif (label) {\n\t\t\t\t\t\tthis.filePickBox.customHover = format(\n\t\t\t\t\t\t\t\"{0} ({1})\",\n\t\t\t\t\t\t\taction.LABEL,\n\t\t\t\t\t\t\tlabel,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet isResolving = 0;\n\t\t\tlet isAcceptHandled = false;\n\t\t\tthis.currentFolder = resources.dirname(homedir);\n\t\t\tthis.userEnteredPathSegment = \"\";\n\t\t\tthis.autoCompletePathSegment = \"\";\n\n\t\t\tthis.filePickBox.title = this.options.title;\n\t\t\tthis.filePickBox.value = this.pathFromUri(this.currentFolder, true);\n\t\t\tthis.filePickBox.valueSelection = [\n\t\t\t\tthis.filePickBox.value.length,\n\t\t\t\tthis.filePickBox.value.length,\n\t\t\t];\n\n\t\t\tconst doResolve = (uri: URI | undefined) => {\n\t\t\t\tif (uri) {\n\t\t\t\t\turi = resources.addTrailingPathSeparator(\n\t\t\t\t\t\turi,\n\t\t\t\t\t\tthis.separator,\n\t\t\t\t\t); // Ensures that c: is c:/ since this comes from user input and can be incorrect.\n\t\t\t\t\t// To be consistent, we should never have a trailing path separator on directories (or anything else). Will not remove from c:/.\n\t\t\t\t\turi = resources.removeTrailingPathSeparator(uri);\n\t\t\t\t}\n\t\t\t\tresolve(uri);\n\t\t\t\tthis.contextKey.set(false);\n\t\t\t\tthis.dispose();\n\t\t\t};\n\n\t\t\tthis._register(\n\t\t\t\tthis.filePickBox.onDidCustom(() => {\n\t\t\t\t\tif (isAcceptHandled || this.busy) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tisAcceptHandled = true;\n\t\t\t\t\tisResolving++;\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.options.availableFileSystems &&\n\t\t\t\t\t\tthis.options.availableFileSystems.length > 1\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.options.availableFileSystems =\n\t\t\t\t\t\t\tthis.options.availableFileSystems.slice(1);\n\t\t\t\t\t}\n\t\t\t\t\tthis.filePickBox.hide();\n\t\t\t\t\tif (isSave) {\n\t\t\t\t\t\treturn this.fileDialogService\n\t\t\t\t\t\t\t.showSaveDialog(this.options)\n\t\t\t\t\t\t\t.then((result) => {\n\t\t\t\t\t\t\t\tdoResolve(result);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn this.fileDialogService\n\t\t\t\t\t\t\t.showOpenDialog(this.options)\n\t\t\t\t\t\t\t.then((result) => {\n\t\t\t\t\t\t\t\tdoResolve(result ? result[0] : undefined);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tconst handleAccept = () => {\n\t\t\t\tif (this.busy) {\n\t\t\t\t\t// Save the accept until the file picker is not busy.\n\t\t\t\t\tthis.onBusyChangeEmitter.event((busy: boolean) => {\n\t\t\t\t\t\tif (!busy) {\n\t\t\t\t\t\t\thandleAccept();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t} else if (isAcceptHandled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tisAcceptHandled = true;\n\t\t\t\tisResolving++;\n\t\t\t\tthis.onDidAccept().then((resolveValue) => {\n\t\t\t\t\tif (resolveValue) {\n\t\t\t\t\t\tthis.filePickBox.hide();\n\t\t\t\t\t\tdoResolve(resolveValue);\n\t\t\t\t\t} else if (this.hidden) {\n\t\t\t\t\t\tdoResolve(undefined);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisResolving--;\n\t\t\t\t\t\tisAcceptHandled = false;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tthis._register(\n\t\t\t\tthis.filePickBox.onDidAccept((_) => {\n\t\t\t\t\thandleAccept();\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tthis._register(\n\t\t\t\tthis.filePickBox.onDidChangeActive((i) => {\n\t\t\t\t\tisAcceptHandled = false;\n\t\t\t\t\t// update input box to match the first selected item\n\t\t\t\t\tif (i.length === 1 && this.isSelectionChangeFromUser()) {\n\t\t\t\t\t\tthis.filePickBox.validationMessage = undefined;\n\t\t\t\t\t\tconst userPath = this.constructFullUserPath();\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!equalsIgnoreCase(\n\t\t\t\t\t\t\t\tthis.filePickBox.value.substring(\n\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\tuserPath.length,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tuserPath,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis.filePickBox.valueSelection = [\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tthis.filePickBox.value.length,\n\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\tthis.insertText(userPath, userPath);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setAutoComplete(\n\t\t\t\t\t\t\tuserPath,\n\t\t\t\t\t\t\tthis.userEnteredPathSegment,\n\t\t\t\t\t\t\ti[0],\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tthis._register(\n\t\t\t\tthis.filePickBox.onDidChangeValue(async (value) => {\n\t\t\t\t\treturn this.handleValueChange(value);\n\t\t\t\t}),\n\t\t\t);\n\t\t\tthis._register(\n\t\t\t\tthis.filePickBox.onDidHide(() => {\n\t\t\t\t\tthis.hidden = true;\n\t\t\t\t\tif (isResolving === 0) {\n\t\t\t\t\t\tdoResolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tthis.filePickBox.show();\n\t\t\tthis.contextKey.set(true);\n\t\t\tthis.updateItems(homedir, true, this.trailing).then(() => {\n\t\t\t\tif (this.trailing) {\n\t\t\t\t\tthis.filePickBox.valueSelection = [\n\t\t\t\t\t\tthis.filePickBox.value.length - this.trailing.length,\n\t\t\t\t\t\tthis.filePickBox.value.length - ext.length,\n\t\t\t\t\t];\n\t\t\t\t} else {\n\t\t\t\t\tthis.filePickBox.valueSelection = [\n\t\t\t\t\t\tthis.filePickBox.value.length,\n\t\t\t\t\t\tthis.filePickBox.value.length,\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t\tthis.busy = false;\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\tprivate async handleValueChange(value: string) {\n\t\ttry {\n\t\t\t// onDidChangeValue can also be triggered by the auto complete, so if it looks like the auto complete, don't do anything\n\t\t\tif (this.isValueChangeFromUser()) {\n\t\t\t\t// If the user has just entered more bad path, don't change anything\n\t\t\t\tif (\n\t\t\t\t\t!equalsIgnoreCase(value, this.constructFullUserPath()) &&\n\t\t\t\t\t!this.isBadSubpath(value)\n\t\t\t\t) {\n\t\t\t\t\tthis.filePickBox.validationMessage = undefined;\n\t\t\t\t\tconst filePickBoxUri = this.filePickBoxValue();\n\t\t\t\t\tlet updated: UpdateResult = UpdateResult.NotUpdated;\n\t\t\t\t\tif (\n\t\t\t\t\t\t!resources.extUriIgnorePathCase.isEqual(\n\t\t\t\t\t\t\tthis.currentFolder,\n\t\t\t\t\t\t\tfilePickBoxUri,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tupdated = await this.tryUpdateItems(\n\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\tfilePickBoxUri,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\tupdated === UpdateResult.NotUpdated ||\n\t\t\t\t\t\tupdated === UpdateResult.UpdatedWithTrailing\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.setActiveItems(value);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.filePickBox.activeItems = [];\n\t\t\t\t\tthis.userEnteredPathSegment = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t} catch {\n\t\t\t// Since any text can be entered in the input box, there is potential for error causing input. If this happens, do nothing.\n\t\t}\n\t}\n\n\tprivate isBadSubpath(value: string) {\n\t\treturn (\n\t\t\tthis.badPath &&\n\t\t\tvalue.length > this.badPath.length &&\n\t\t\tequalsIgnoreCase(\n\t\t\t\tvalue.substring(0, this.badPath.length),\n\t\t\t\tthis.badPath,\n\t\t\t)\n\t\t);\n\t}\n\n\tprivate isValueChangeFromUser(): boolean {\n\t\tif (\n\t\t\tequalsIgnoreCase(\n\t\t\t\tthis.filePickBox.value,\n\t\t\t\tthis.pathAppend(\n\t\t\t\t\tthis.currentFolder,\n\t\t\t\t\tthis.userEnteredPathSegment + this.autoCompletePathSegment,\n\t\t\t\t),\n\t\t\t)\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate isSelectionChangeFromUser(): boolean {\n\t\tif (\n\t\t\tthis.activeItem ===\n\t\t\t(this.filePickBox.activeItems\n\t\t\t\t? this.filePickBox.activeItems[0]\n\t\t\t\t: undefined)\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate constructFullUserPath(): string {\n\t\tconst currentFolderPath = this.pathFromUri(this.currentFolder);\n\t\tif (\n\t\t\tequalsIgnoreCase(\n\t\t\t\tthis.filePickBox.value.substr(\n\t\t\t\t\t0,\n\t\t\t\t\tthis.userEnteredPathSegment.length,\n\t\t\t\t),\n\t\t\t\tthis.userEnteredPathSegment,\n\t\t\t)\n\t\t) {\n\t\t\tif (\n\t\t\t\tequalsIgnoreCase(\n\t\t\t\t\tthis.filePickBox.value.substr(0, currentFolderPath.length),\n\t\t\t\t\tcurrentFolderPath,\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\treturn currentFolderPath;\n\t\t\t} else {\n\t\t\t\treturn this.userEnteredPathSegment;\n\t\t\t}\n\t\t} else {\n\t\t\treturn this.pathAppend(\n\t\t\t\tthis.currentFolder,\n\t\t\t\tthis.userEnteredPathSegment,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate filePickBoxValue(): URI {\n\t\t// The file pick box can't render everything, so we use the current folder to create the uri so that it is an existing path.\n\t\tconst directUri = this.remoteUriFrom(\n\t\t\tthis.filePickBox.value.trimEnd(),\n\t\t\tthis.currentFolder,\n\t\t);\n\t\tconst currentPath = this.pathFromUri(this.currentFolder);\n\t\tif (equalsIgnoreCase(this.filePickBox.value, currentPath)) {\n\t\t\treturn this.currentFolder;\n\t\t}\n\t\tconst currentDisplayUri = this.remoteUriFrom(\n\t\t\tcurrentPath,\n\t\t\tthis.currentFolder,\n\t\t);\n\t\tconst relativePath = resources.relativePath(\n\t\t\tcurrentDisplayUri,\n\t\t\tdirectUri,\n\t\t);\n\t\tconst isSameRoot =\n\t\t\tthis.filePickBox.value.length > 1 && currentPath.length > 1\n\t\t\t\t? equalsIgnoreCase(\n\t\t\t\t\t\tthis.filePickBox.value.substr(0, 2),\n\t\t\t\t\t\tcurrentPath.substr(0, 2),\n\t\t\t\t\t)\n\t\t\t\t: false;\n\t\tif (relativePath && isSameRoot) {\n\t\t\tlet path = resources.joinPath(this.currentFolder, relativePath);\n\t\t\tconst directBasename = resources.basename(directUri);\n\t\t\tif (directBasename === \".\" || directBasename === \"..\") {\n\t\t\t\tpath = this.remoteUriFrom(\n\t\t\t\t\tthis.pathAppend(path, directBasename),\n\t\t\t\t\tthis.currentFolder,\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn resources.hasTrailingPathSeparator(directUri)\n\t\t\t\t? resources.addTrailingPathSeparator(path)\n\t\t\t\t: path;\n\t\t} else {\n\t\t\treturn directUri;\n\t\t}\n\t}\n\n\tprivate async onDidAccept(): Promise<URI | undefined> {\n\t\tthis.busy = true;\n\t\tif (this.filePickBox.activeItems.length === 1) {\n\t\t\tconst item = this.filePickBox.selectedItems[0];\n\t\t\tif (item.isFolder) {\n\t\t\t\tif (this.trailing) {\n\t\t\t\t\tawait this.updateItems(item.uri, true, this.trailing);\n\t\t\t\t} else {\n\t\t\t\t\t// When possible, cause the update to happen by modifying the input box.\n\t\t\t\t\t// This allows all input box updates to happen first, and uses the same code path as the user typing.\n\t\t\t\t\tconst newPath = this.pathFromUri(item.uri);\n\t\t\t\t\tif (\n\t\t\t\t\t\tstartsWithIgnoreCase(newPath, this.filePickBox.value) &&\n\t\t\t\t\t\tequalsIgnoreCase(\n\t\t\t\t\t\t\titem.label,\n\t\t\t\t\t\t\tresources.basename(item.uri),\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.filePickBox.valueSelection = [\n\t\t\t\t\t\t\tthis.pathFromUri(this.currentFolder).length,\n\t\t\t\t\t\t\tthis.filePickBox.value.length,\n\t\t\t\t\t\t];\n\t\t\t\t\t\tthis.insertText(\n\t\t\t\t\t\t\tnewPath,\n\t\t\t\t\t\t\tthis.basenameWithTrailingSlash(item.uri),\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (\n\t\t\t\t\t\titem.label === \"..\" &&\n\t\t\t\t\t\tstartsWithIgnoreCase(this.filePickBox.value, newPath)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.filePickBox.valueSelection = [\n\t\t\t\t\t\t\tnewPath.length,\n\t\t\t\t\t\t\tthis.filePickBox.value.length,\n\t\t\t\t\t\t];\n\t\t\t\t\t\tthis.insertText(newPath, \"\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tawait this.updateItems(item.uri, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.filePickBox.busy = false;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\t// If the items have updated, don't try to resolve\n\t\t\tif (\n\t\t\t\t(await this.tryUpdateItems(\n\t\t\t\t\tthis.filePickBox.value,\n\t\t\t\t\tthis.filePickBoxValue(),\n\t\t\t\t)) !== UpdateResult.NotUpdated\n\t\t\t) {\n\t\t\t\tthis.filePickBox.busy = false;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tlet resolveValue: URI | undefined;\n\t\t// Find resolve value\n\t\tif (this.filePickBox.activeItems.length === 0) {\n\t\t\tresolveValue = this.filePickBoxValue();\n\t\t} else if (this.filePickBox.activeItems.length === 1) {\n\t\t\tresolveValue = this.filePickBox.selectedItems[0].uri;\n\t\t}\n\t\tif (resolveValue) {\n\t\t\tresolveValue = this.addPostfix(resolveValue);\n\t\t}\n\t\tif (await this.validate(resolveValue)) {\n\t\t\tthis.busy = false;\n\t\t\treturn resolveValue;\n\t\t}\n\t\tthis.busy = false;\n\t\treturn undefined;\n\t}\n\n\tprivate root(value: URI) {\n\t\tlet lastDir = value;\n\t\tlet dir = resources.dirname(value);\n\t\twhile (!resources.isEqual(lastDir, dir)) {\n\t\t\tlastDir = dir;\n\t\t\tdir = resources.dirname(dir);\n\t\t}\n\t\treturn dir;\n\t}\n\n\tprivate tildaReplace(value: string): URI {\n\t\tconst home = this.trueHome;\n\t\tif (value.length > 0 && value[0] === \"~\") {\n\t\t\treturn resources.joinPath(home, value.substring(1));\n\t\t}\n\t\treturn this.remoteUriFrom(value);\n\t}\n\n\tprivate tryAddTrailingSeparatorToDirectory(\n\t\turi: URI,\n\t\tstat: IFileStatWithPartialMetadata,\n\t): URI {\n\t\tif (stat.isDirectory) {\n\t\t\t// At this point we know it's a directory and can add the trailing path separator\n\t\t\tif (!this.endsWithSlash(uri.path)) {\n\t\t\t\treturn resources.addTrailingPathSeparator(uri);\n\t\t\t}\n\t\t}\n\t\treturn uri;\n\t}\n\n\tprivate async tryUpdateItems(\n\t\tvalue: string,\n\t\tvalueUri: URI,\n\t): Promise<UpdateResult> {\n\t\tif (value.length > 0 && value[0] === \"~\") {\n\t\t\tconst newDir = this.tildaReplace(value);\n\t\t\treturn (await this.updateItems(newDir, true))\n\t\t\t\t? UpdateResult.UpdatedWithTrailing\n\t\t\t\t: UpdateResult.Updated;\n\t\t} else if (value === \"\\\\\") {\n\t\t\tvalueUri = this.root(this.currentFolder);\n\t\t\tvalue = this.pathFromUri(valueUri);\n\t\t\treturn (await this.updateItems(valueUri, true))\n\t\t\t\t? UpdateResult.UpdatedWithTrailing\n\t\t\t\t: UpdateResult.Updated;\n\t\t} else {\n\t\t\tconst newFolderIsOldFolder = resources.extUriIgnorePathCase.isEqual(\n\t\t\t\tthis.currentFolder,\n\t\t\t\tvalueUri,\n\t\t\t);\n\t\t\tconst newFolderIsSubFolder = resources.extUriIgnorePathCase.isEqual(\n\t\t\t\tthis.currentFolder,\n\t\t\t\tresources.dirname(valueUri),\n\t\t\t);\n\t\t\tconst newFolderIsParent =\n\t\t\t\tresources.extUriIgnorePathCase.isEqualOrParent(\n\t\t\t\t\tthis.currentFolder,\n\t\t\t\t\tresources.dirname(valueUri),\n\t\t\t\t);\n\t\t\tconst newFolderIsUnrelated =\n\t\t\t\t!newFolderIsParent && !newFolderIsSubFolder;\n\t\t\tif (\n\t\t\t\t!newFolderIsOldFolder &&\n\t\t\t\t(this.endsWithSlash(value) ||\n\t\t\t\t\tnewFolderIsParent ||\n\t\t\t\t\tnewFolderIsUnrelated)\n\t\t\t) {\n\t\t\t\tlet stat: IFileStatWithPartialMetadata | undefined;\n\t\t\t\ttry {\n\t\t\t\t\tstat = await this.fileService.stat(valueUri);\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// do nothing\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tstat &&\n\t\t\t\t\tstat.isDirectory &&\n\t\t\t\t\tresources.basename(valueUri) !== \".\" &&\n\t\t\t\t\tthis.endsWithSlash(value)\n\t\t\t\t) {\n\t\t\t\t\tvalueUri = this.tryAddTrailingSeparatorToDirectory(\n\t\t\t\t\t\tvalueUri,\n\t\t\t\t\t\tstat,\n\t\t\t\t\t);\n\t\t\t\t\treturn (await this.updateItems(valueUri))\n\t\t\t\t\t\t? UpdateResult.UpdatedWithTrailing\n\t\t\t\t\t\t: UpdateResult.Updated;\n\t\t\t\t} else if (this.endsWithSlash(value)) {\n\t\t\t\t\t// The input box contains a path that doesn't exist on the system.\n\t\t\t\t\tthis.filePickBox.validationMessage = nls.localize(\n\t\t\t\t\t\t\"remoteFileDialog.badPath\",\n\t\t\t\t\t\t\"The path does not exist.\",\n\t\t\t\t\t);\n\t\t\t\t\t// Save this bad path. It can take too long to a stat on every user entered character, but once a user enters a bad path they are likely\n\t\t\t\t\t// to keep typing more bad path. We can compare against this bad path and see if the user entered path starts with it.\n\t\t\t\t\tthis.badPath = value;\n\t\t\t\t\treturn UpdateResult.InvalidPath;\n\t\t\t\t} else {\n\t\t\t\t\tlet inputUriDirname = resources.dirname(valueUri);\n\t\t\t\t\tconst currentFolderWithoutSep =\n\t\t\t\t\t\tresources.removeTrailingPathSeparator(\n\t\t\t\t\t\t\tresources.addTrailingPathSeparator(\n\t\t\t\t\t\t\t\tthis.currentFolder,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\tconst inputUriDirnameWithoutSep =\n\t\t\t\t\t\tresources.removeTrailingPathSeparator(\n\t\t\t\t\t\t\tresources.addTrailingPathSeparator(inputUriDirname),\n\t\t\t\t\t\t);\n\t\t\t\t\tif (\n\t\t\t\t\t\t!resources.extUriIgnorePathCase.isEqual(\n\t\t\t\t\t\t\tcurrentFolderWithoutSep,\n\t\t\t\t\t\t\tinputUriDirnameWithoutSep,\n\t\t\t\t\t\t) &&\n\t\t\t\t\t\t(!/^[a-zA-Z]:$/.test(this.filePickBox.value) ||\n\t\t\t\t\t\t\t!equalsIgnoreCase(\n\t\t\t\t\t\t\t\tthis.pathFromUri(this.currentFolder).substring(\n\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\tthis.filePickBox.value.length,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tthis.filePickBox.value,\n\t\t\t\t\t\t\t))\n\t\t\t\t\t) {\n\t\t\t\t\t\tlet statWithoutTrailing:\n\t\t\t\t\t\t\t| IFileStatWithPartialMetadata\n\t\t\t\t\t\t\t| undefined;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tstatWithoutTrailing =\n\t\t\t\t\t\t\t\tawait this.fileService.stat(inputUriDirname);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t// do nothing\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tstatWithoutTrailing &&\n\t\t\t\t\t\t\tstatWithoutTrailing.isDirectory\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis.badPath = undefined;\n\t\t\t\t\t\t\tinputUriDirname =\n\t\t\t\t\t\t\t\tthis.tryAddTrailingSeparatorToDirectory(\n\t\t\t\t\t\t\t\t\tinputUriDirname,\n\t\t\t\t\t\t\t\t\tstatWithoutTrailing,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn (await this.updateItems(\n\t\t\t\t\t\t\t\tinputUriDirname,\n\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t\tresources.basename(valueUri),\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t? UpdateResult.UpdatedWithTrailing\n\t\t\t\t\t\t\t\t: UpdateResult.Updated;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.badPath = undefined;\n\t\treturn UpdateResult.NotUpdated;\n\t}\n\n\tprivate tryUpdateTrailing(value: URI) {\n\t\tconst ext = resources.extname(value);\n\t\tif (this.trailing && ext) {\n\t\t\tthis.trailing = resources.basename(value);\n\t\t}\n\t}\n\n\tprivate setActiveItems(value: string) {\n\t\tvalue = this.pathFromUri(this.tildaReplace(value));\n\t\tconst asUri = this.remoteUriFrom(value);\n\t\tconst inputBasename = resources.basename(asUri);\n\t\tconst userPath = this.constructFullUserPath();\n\t\t// Make sure that the folder whose children we are currently viewing matches the path in the input\n\t\tconst pathsEqual =\n\t\t\tequalsIgnoreCase(userPath, value.substring(0, userPath.length)) ||\n\t\t\tequalsIgnoreCase(value, userPath.substring(0, value.length));\n\t\tif (pathsEqual) {\n\t\t\tlet hasMatch = false;\n\t\t\tfor (let i = 0; i < this.filePickBox.items.length; i++) {\n\t\t\t\tconst item = <FileQuickPickItem>this.filePickBox.items[i];\n\t\t\t\tif (this.setAutoComplete(value, inputBasename, item)) {\n\t\t\t\t\thasMatch = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!hasMatch) {\n\t\t\t\tconst userBasename =\n\t\t\t\t\tinputBasename.length >= 2\n\t\t\t\t\t\t? userPath.substring(\n\t\t\t\t\t\t\t\tuserPath.length - inputBasename.length + 2,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t: \"\";\n\t\t\t\tthis.userEnteredPathSegment =\n\t\t\t\t\tuserBasename === inputBasename ? inputBasename : \"\";\n\t\t\t\tthis.autoCompletePathSegment = \"\";\n\t\t\t\tthis.filePickBox.activeItems = [];\n\t\t\t\tthis.tryUpdateTrailing(asUri);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.userEnteredPathSegment = inputBasename;\n\t\t\tthis.autoCompletePathSegment = \"\";\n\t\t\tthis.filePickBox.activeItems = [];\n\t\t\tthis.tryUpdateTrailing(asUri);\n\t\t}\n\t}\n\n\tprivate setAutoComplete(\n\t\tstartingValue: string,\n\t\tstartingBasename: string,\n\t\tquickPickItem: FileQuickPickItem,\n\t\tforce = false,\n\t): boolean {\n\t\tif (this.busy) {\n\t\t\t// We're in the middle of something else. Doing an auto complete now can result jumbled or incorrect autocompletes.\n\t\t\tthis.userEnteredPathSegment = startingBasename;\n\t\t\tthis.autoCompletePathSegment = \"\";\n\t\t\treturn false;\n\t\t}\n\t\tconst itemBasename = quickPickItem.label;\n\t\t// Either force the autocomplete, or the old value should be one smaller than the new value and match the new value.\n\t\tif (itemBasename === \"..\") {\n\t\t\t// Don't match on the up directory item ever.\n\t\t\tthis.userEnteredPathSegment = \"\";\n\t\t\tthis.autoCompletePathSegment = \"\";\n\t\t\tthis.activeItem = quickPickItem;\n\t\t\tif (force) {\n\t\t\t\t// clear any selected text\n\t\t\t\tgetActiveDocument().execCommand(\"insertText\", false, \"\");\n\t\t\t}\n\t\t\treturn false;\n\t\t} else if (\n\t\t\t!force &&\n\t\t\titemBasename.length >= startingBasename.length &&\n\t\t\tequalsIgnoreCase(\n\t\t\t\titemBasename.substr(0, startingBasename.length),\n\t\t\t\tstartingBasename,\n\t\t\t)\n\t\t) {\n\t\t\tthis.userEnteredPathSegment = startingBasename;\n\t\t\tthis.activeItem = quickPickItem;\n\t\t\t// Changing the active items will trigger the onDidActiveItemsChanged. Clear the autocomplete first, then set it after.\n\t\t\tthis.autoCompletePathSegment = \"\";\n\t\t\tif (quickPickItem.isFolder || !this.trailing) {\n\t\t\t\tthis.filePickBox.activeItems = [quickPickItem];\n\t\t\t} else {\n\t\t\t\tthis.filePickBox.activeItems = [];\n\t\t\t}\n\t\t\treturn true;\n\t\t} else if (\n\t\t\tforce &&\n\t\t\t!equalsIgnoreCase(\n\t\t\t\tthis.basenameWithTrailingSlash(quickPickItem.uri),\n\t\t\t\tthis.userEnteredPathSegment + this.autoCompletePathSegment,\n\t\t\t)\n\t\t) {\n\t\t\tthis.userEnteredPathSegment = \"\";\n\t\t\tif (!this.accessibilityService.isScreenReaderOptimized()) {\n\t\t\t\tthis.autoCompletePathSegment =\n\t\t\t\t\tthis.trimTrailingSlash(itemBasename);\n\t\t\t}\n\t\t\tthis.activeItem = quickPickItem;\n\t\t\tif (!this.accessibilityService.isScreenReaderOptimized()) {\n\t\t\t\tthis.filePickBox.valueSelection = [\n\t\t\t\t\tthis.pathFromUri(this.currentFolder, true).length,\n\t\t\t\t\tthis.filePickBox.value.length,\n\t\t\t\t];\n\t\t\t\t// use insert text to preserve undo buffer\n\t\t\t\tthis.insertText(\n\t\t\t\t\tthis.pathAppend(\n\t\t\t\t\t\tthis.currentFolder,\n\t\t\t\t\t\tthis.autoCompletePathSegment,\n\t\t\t\t\t),\n\t\t\t\t\tthis.autoCompletePathSegment,\n\t\t\t\t);\n\t\t\t\tthis.filePickBox.valueSelection = [\n\t\t\t\t\tthis.filePickBox.value.length -\n\t\t\t\t\t\tthis.autoCompletePathSegment.length,\n\t\t\t\t\tthis.filePickBox.value.length,\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.userEnteredPathSegment = startingBasename;\n\t\t\tthis.autoCompletePathSegment = \"\";\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate insertText(wholeValue: string, insertText: string) {\n\t\tif (this.filePickBox.inputHasFocus()) {\n\t\t\tgetActiveDocument().execCommand(\"insertText\", false, insertText);\n\t\t\tif (this.filePickBox.value !== wholeValue) {\n\t\t\t\tthis.filePickBox.value = wholeValue;\n\t\t\t\tthis.handleValueChange(wholeValue);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.filePickBox.value = wholeValue;\n\t\t\tthis.handleValueChange(wholeValue);\n\t\t}\n\t}\n\n\tprivate addPostfix(uri: URI): URI {\n\t\tlet result = uri;\n\t\tif (\n\t\t\tthis.requiresTrailing &&\n\t\t\tthis.options.filters &&\n\t\t\tthis.options.filters.length > 0 &&\n\t\t\t!resources.hasTrailingPathSeparator(uri)\n\t\t) {\n\t\t\t// Make sure that the suffix is added. If the user deleted it, we automatically add it here\n\t\t\tlet hasExt = false;\n\t\t\tconst currentExt = resources.extname(uri).substr(1);\n\t\t\tfor (let i = 0; i < this.options.filters.length; i++) {\n\t\t\t\tfor (\n\t\t\t\t\tlet j = 0;\n\t\t\t\t\tj < this.options.filters[i].extensions.length;\n\t\t\t\t\tj++\n\t\t\t\t) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.options.filters[i].extensions[j] === \"*\" ||\n\t\t\t\t\t\tthis.options.filters[i].extensions[j] === currentExt\n\t\t\t\t\t) {\n\t\t\t\t\t\thasExt = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (hasExt) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!hasExt) {\n\t\t\t\tresult = resources.joinPath(\n\t\t\t\t\tresources.dirname(uri),\n\t\t\t\t\tresources.basename(uri) +\n\t\t\t\t\t\t\".\" +\n\t\t\t\t\t\tthis.options.filters[0].extensions[0],\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate trimTrailingSlash(path: string): string {\n\t\treturn path.length > 1 && this.endsWithSlash(path)\n\t\t\t? path.substr(0, path.length - 1)\n\t\t\t: path;\n\t}\n\n\tprivate yesNoPrompt(uri: URI, message: string): Promise<boolean> {\n\t\tinterface YesNoItem extends IQuickPickItem {\n\t\t\tvalue: boolean;\n\t\t}\n\t\tconst disposableStore = new DisposableStore();\n\t\tconst prompt = disposableStore.add(\n\t\t\tthis.quickInputService.createQuickPick<YesNoItem>(),\n\t\t);\n\t\tprompt.title = message;\n\t\tprompt.ignoreFocusOut = true;\n\t\tprompt.ok = true;\n\t\tprompt.customButton = true;\n\t\tprompt.customLabel = nls.localize(\"remoteFileDialog.cancel\", \"Cancel\");\n\t\tprompt.value = this.pathFromUri(uri);\n\n\t\tlet isResolving = false;\n\t\treturn new Promise<boolean>((resolve) => {\n\t\t\tdisposableStore.add(\n\t\t\t\tprompt.onDidAccept(() => {\n\t\t\t\t\tisResolving = true;\n\t\t\t\t\tprompt.hide();\n\t\t\t\t\tresolve(true);\n\t\t\t\t}),\n\t\t\t);\n\t\t\tdisposableStore.add(\n\t\t\t\tprompt.onDidHide(() => {\n\t\t\t\t\tif (!isResolving) {\n\t\t\t\t\t\tresolve(false);\n\t\t\t\t\t}\n\t\t\t\t\tthis.filePickBox.show();\n\t\t\t\t\tthis.hidden = false;\n\t\t\t\t\tdisposableStore.dispose();\n\t\t\t\t}),\n\t\t\t);\n\t\t\tdisposableStore.add(\n\t\t\t\tprompt.onDidChangeValue(() => {\n\t\t\t\t\tprompt.hide();\n\t\t\t\t}),\n\t\t\t);\n\t\t\tdisposableStore.add(\n\t\t\t\tprompt.onDidCustom(() => {\n\t\t\t\t\tprompt.hide();\n\t\t\t\t}),\n\t\t\t);\n\t\t\tprompt.show();\n\t\t});\n\t}\n\n\tprivate async validate(uri: URI | undefined): Promise<boolean> {\n\t\tif (uri === undefined) {\n\t\t\tthis.filePickBox.validationMessage = nls.localize(\n\t\t\t\t\"remoteFileDialog.invalidPath\",\n\t\t\t\t\"Please enter a valid path.\",\n\t\t\t);\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\tlet stat: IFileStatWithPartialMetadata | undefined;\n\t\tlet statDirname: IFileStatWithPartialMetadata | undefined;\n\t\ttry {\n\t\t\tstatDirname = await this.fileService.stat(resources.dirname(uri));\n\t\t\tstat = await this.fileService.stat(uri);\n\t\t} catch (e) {\n\t\t\t// do nothing\n\t\t}\n\n\t\tif (this.requiresTrailing) {\n\t\t\t// save\n\t\t\tif (stat && stat.isDirectory) {\n\t\t\t\t// Can't do this\n\t\t\t\tthis.filePickBox.validationMessage = nls.localize(\n\t\t\t\t\t\"remoteFileDialog.validateFolder\",\n\t\t\t\t\t\"The folder already exists. Please use a new file name.\",\n\t\t\t\t);\n\t\t\t\treturn Promise.resolve(false);\n\t\t\t} else if (stat) {\n\t\t\t\t// Replacing a file.\n\t\t\t\t// Show a yes/no prompt\n\t\t\t\tconst message = nls.localize(\n\t\t\t\t\t\"remoteFileDialog.validateExisting\",\n\t\t\t\t\t\"{0} already exists. Are you sure you want to overwrite it?\",\n\t\t\t\t\tresources.basename(uri),\n\t\t\t\t);\n\t\t\t\treturn this.yesNoPrompt(uri, message);\n\t\t\t} else if (\n\t\t\t\t!isValidBasename(resources.basename(uri), this.isWindows)\n\t\t\t) {\n\t\t\t\t// Filename not allowed\n\t\t\t\tthis.filePickBox.validationMessage = nls.localize(\n\t\t\t\t\t\"remoteFileDialog.validateBadFilename\",\n\t\t\t\t\t\"Please enter a valid file name.\",\n\t\t\t\t);\n\t\t\t\treturn Promise.resolve(false);\n\t\t\t} else if (!statDirname) {\n\t\t\t\t// Folder to save in doesn't exist\n\t\t\t\tconst message = nls.localize(\n\t\t\t\t\t\"remoteFileDialog.validateCreateDirectory\",\n\t\t\t\t\t\"The folder {0} does not exist. Would you like to create it?\",\n\t\t\t\t\tresources.basename(resources.dirname(uri)),\n\t\t\t\t);\n\t\t\t\treturn this.yesNoPrompt(uri, message);\n\t\t\t} else if (!statDirname.isDirectory) {\n\t\t\t\tthis.filePickBox.validationMessage = nls.localize(\n\t\t\t\t\t\"remoteFileDialog.validateNonexistentDir\",\n\t\t\t\t\t\"Please enter a path that exists.\",\n\t\t\t\t);\n\t\t\t\treturn Promise.resolve(false);\n\t\t\t} else if (statDirname.readonly) {\n\t\t\t\tthis.filePickBox.validationMessage = nls.localize(\n\t\t\t\t\t\"remoteFileDialog.validateReadonlyFolder\",\n\t\t\t\t\t\"This folder cannot be used as a save destination. Please choose another folder\",\n\t\t\t\t);\n\t\t\t\treturn Promise.resolve(false);\n\t\t\t}\n\t\t} else {\n\t\t\t// open\n\t\t\tif (!stat) {\n\t\t\t\t// File or folder doesn't exist\n\t\t\t\tthis.filePickBox.validationMessage = nls.localize(\n\t\t\t\t\t\"remoteFileDialog.validateNonexistentDir\",\n\t\t\t\t\t\"Please enter a path that exists.\",\n\t\t\t\t);\n\t\t\t\treturn Promise.resolve(false);\n\t\t\t} else if (uri.path === \"/\" && this.isWindows) {\n\t\t\t\tthis.filePickBox.validationMessage = nls.localize(\n\t\t\t\t\t\"remoteFileDialog.windowsDriveLetter\",\n\t\t\t\t\t\"Please start the path with a drive letter.\",\n\t\t\t\t);\n\t\t\t\treturn Promise.resolve(false);\n\t\t\t} else if (stat.isDirectory && !this.allowFolderSelection) {\n\t\t\t\t// Folder selected when folder selection not permitted\n\t\t\t\tthis.filePickBox.validationMessage = nls.localize(\n\t\t\t\t\t\"remoteFileDialog.validateFileOnly\",\n\t\t\t\t\t\"Please select a file.\",\n\t\t\t\t);\n\t\t\t\treturn Promise.resolve(false);\n\t\t\t} else if (!stat.isDirectory && !this.allowFileSelection) {\n\t\t\t\t// File selected when file selection not permitted\n\t\t\t\tthis.filePickBox.validationMessage = nls.localize(\n\t\t\t\t\t\"remoteFileDialog.validateFolderOnly\",\n\t\t\t\t\t\"Please select a folder.\",\n\t\t\t\t);\n\t\t\t\treturn Promise.resolve(false);\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve(true);\n\t}\n\n\t// Returns true if there is a file at the end of the URI.\n\tprivate async updateItems(\n\t\tnewFolder: URI,\n\t\tforce = false,\n\t\ttrailing?: string,\n\t): Promise<boolean> {\n\t\tthis.busy = true;\n\t\tthis.autoCompletePathSegment = \"\";\n\t\tconst isSave = !!trailing;\n\t\tlet result = false;\n\n\t\tconst updatingPromise = createCancelablePromise(async (token) => {\n\t\t\tlet folderStat: IFileStat | undefined;\n\t\t\ttry {\n\t\t\t\tfolderStat = await this.fileService.resolve(newFolder);\n\t\t\t\tif (!folderStat.isDirectory) {\n\t\t\t\t\ttrailing = resources.basename(newFolder);\n\t\t\t\t\tnewFolder = resources.dirname(newFolder);\n\t\t\t\t\tfolderStat = undefined;\n\t\t\t\t\tresult = true;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t// The file/directory doesn't exist\n\t\t\t}\n\t\t\tconst newValue = trailing\n\t\t\t\t? this.pathAppend(newFolder, trailing)\n\t\t\t\t: this.pathFromUri(newFolder, true);\n\t\t\tthis.currentFolder = this.endsWithSlash(newFolder.path)\n\t\t\t\t? newFolder\n\t\t\t\t: resources.addTrailingPathSeparator(newFolder, this.separator);\n\t\t\tthis.userEnteredPathSegment = trailing ? trailing : \"\";\n\n\t\t\treturn this.createItems(folderStat, this.currentFolder, token).then(\n\t\t\t\t(items) => {\n\t\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\t\tthis.busy = false;\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.filePickBox.itemActivation = ItemActivation.NONE;\n\t\t\t\t\tthis.filePickBox.items = items;\n\n\t\t\t\t\t// the user might have continued typing while we were updating. Only update the input box if it doesn't match the directory.\n\t\t\t\t\tif (\n\t\t\t\t\t\t!equalsIgnoreCase(this.filePickBox.value, newValue) &&\n\t\t\t\t\t\tforce\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.filePickBox.valueSelection = [\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\tthis.filePickBox.value.length,\n\t\t\t\t\t\t];\n\t\t\t\t\t\tthis.insertText(newValue, newValue);\n\t\t\t\t\t}\n\t\t\t\t\tif (force && trailing && isSave) {\n\t\t\t\t\t\t// Keep the cursor position in front of the save as name.\n\t\t\t\t\t\tthis.filePickBox.valueSelection = [\n\t\t\t\t\t\t\tthis.filePickBox.value.length - trailing.length,\n\t\t\t\t\t\t\tthis.filePickBox.value.length - trailing.length,\n\t\t\t\t\t\t];\n\t\t\t\t\t} else if (!trailing) {\n\t\t\t\t\t\t// If there is trailing, we don't move the cursor. If there is no trailing, cursor goes at the end.\n\t\t\t\t\t\tthis.filePickBox.valueSelection = [\n\t\t\t\t\t\t\tthis.filePickBox.value.length,\n\t\t\t\t\t\t\tthis.filePickBox.value.length,\n\t\t\t\t\t\t];\n\t\t\t\t\t}\n\t\t\t\t\tthis.busy = false;\n\t\t\t\t\tthis.updatingPromise = undefined;\n\t\t\t\t\treturn result;\n\t\t\t\t},\n\t\t\t);\n\t\t});\n\n\t\tif (this.updatingPromise !== undefined) {\n\t\t\tthis.updatingPromise.cancel();\n\t\t}\n\t\tthis.updatingPromise = updatingPromise;\n\n\t\treturn updatingPromise;\n\t}\n\n\tprivate pathFromUri(uri: URI, endWithSeparator = false): string {\n\t\tlet result: string = normalizeDriveLetter(\n\t\t\turi.fsPath,\n\t\t\tthis.isWindows,\n\t\t).replace(/\\n/g, \"\");\n\t\tif (this.separator === \"/\") {\n\t\t\tresult = result.replace(/\\\\/g, this.separator);\n\t\t} else {\n\t\t\tresult = result.replace(/\\//g, this.separator);\n\t\t}\n\t\tif (endWithSeparator && !this.endsWithSlash(result)) {\n\t\t\tresult = result + this.separator;\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate pathAppend(uri: URI, additional: string): string {\n\t\tif (additional === \"..\" || additional === \".\") {\n\t\t\tconst basePath = this.pathFromUri(uri, true);\n\t\t\treturn basePath + additional;\n\t\t} else {\n\t\t\treturn this.pathFromUri(resources.joinPath(uri, additional));\n\t\t}\n\t}\n\n\tprivate async checkIsWindowsOS(): Promise<boolean> {\n\t\tlet isWindowsOS = isWindows;\n\t\tconst env = await this.getRemoteAgentEnvironment();\n\t\tif (env) {\n\t\t\tisWindowsOS = env.os === OperatingSystem.Windows;\n\t\t}\n\t\treturn isWindowsOS;\n\t}\n\n\tprivate endsWithSlash(s: string) {\n\t\treturn /[/\\\\]$/.test(s);\n\t}\n\n\tprivate basenameWithTrailingSlash(fullPath: URI): string {\n\t\tconst child = this.pathFromUri(fullPath, true);\n\t\tconst parent = this.pathFromUri(resources.dirname(fullPath), true);\n\t\treturn child.substring(parent.length);\n\t}\n\n\tprivate async createBackItem(\n\t\tcurrFolder: URI,\n\t): Promise<FileQuickPickItem | undefined> {\n\t\tconst fileRepresentationCurr = this.currentFolder.with({\n\t\t\tscheme: Schemas.file,\n\t\t\tauthority: \"\",\n\t\t});\n\t\tconst fileRepresentationParent = resources.dirname(\n\t\t\tfileRepresentationCurr,\n\t\t);\n\t\tif (\n\t\t\t!resources.isEqual(fileRepresentationCurr, fileRepresentationParent)\n\t\t) {\n\t\t\tconst parentFolder = resources.dirname(currFolder);\n\t\t\tif (await this.fileService.exists(parentFolder)) {\n\t\t\t\treturn {\n\t\t\t\t\tlabel: \"..\",\n\t\t\t\t\turi: resources.addTrailingPathSeparator(\n\t\t\t\t\t\tparentFolder,\n\t\t\t\t\t\tthis.separator,\n\t\t\t\t\t),\n\t\t\t\t\tisFolder: true,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate async createItems(\n\t\tfolder: IFileStat | undefined,\n\t\tcurrentFolder: URI,\n\t\ttoken: CancellationToken,\n\t): Promise<FileQuickPickItem[]> {\n\t\tconst result: FileQuickPickItem[] = [];\n\n\t\tconst backDir = await this.createBackItem(currentFolder);\n\t\ttry {\n\t\t\tif (!folder) {\n\t\t\t\tfolder = await this.fileService.resolve(currentFolder);\n\t\t\t}\n\t\t\tconst items = folder.children\n\t\t\t\t? await Promise.all(\n\t\t\t\t\t\tfolder.children.map((child) =>\n\t\t\t\t\t\t\tthis.createItem(child, currentFolder, token),\n\t\t\t\t\t\t),\n\t\t\t\t\t)\n\t\t\t\t: [];\n\t\t\tfor (const item of items) {\n\t\t\t\tif (item) {\n\t\t\t\t\tresult.push(item);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// ignore\n\t\t\tconsole.log(e);\n\t\t}\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn [];\n\t\t}\n\t\tconst sorted = result.sort((i1, i2) => {\n\t\t\tif (i1.isFolder !== i2.isFolder) {\n\t\t\t\treturn i1.isFolder ? -1 : 1;\n\t\t\t}\n\t\t\tconst trimmed1 = this.endsWithSlash(i1.label)\n\t\t\t\t? i1.label.substr(0, i1.label.length - 1)\n\t\t\t\t: i1.label;\n\t\t\tconst trimmed2 = this.endsWithSlash(i2.label)\n\t\t\t\t? i2.label.substr(0, i2.label.length - 1)\n\t\t\t\t: i2.label;\n\t\t\treturn trimmed1.localeCompare(trimmed2);\n\t\t});\n\n\t\tif (backDir) {\n\t\t\tsorted.unshift(backDir);\n\t\t}\n\t\treturn sorted;\n\t}\n\n\tprivate filterFile(file: URI): boolean {\n\t\tif (this.options.filters) {\n\t\t\tfor (let i = 0; i < this.options.filters.length; i++) {\n\t\t\t\tfor (\n\t\t\t\t\tlet j = 0;\n\t\t\t\t\tj < this.options.filters[i].extensions.length;\n\t\t\t\t\tj++\n\t\t\t\t) {\n\t\t\t\t\tconst testExt = this.options.filters[i].extensions[j];\n\t\t\t\t\tif (testExt === \"*\" || file.path.endsWith(\".\" + testExt)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate async createItem(\n\t\tstat: IFileStat,\n\t\tparent: URI,\n\t\ttoken: CancellationToken,\n\t): Promise<FileQuickPickItem | undefined> {\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn undefined;\n\t\t}\n\t\tlet fullPath = resources.joinPath(parent, stat.name);\n\t\tif (stat.isDirectory) {\n\t\t\tconst filename = resources.basename(fullPath);\n\t\t\tfullPath = resources.addTrailingPathSeparator(\n\t\t\t\tfullPath,\n\t\t\t\tthis.separator,\n\t\t\t);\n\t\t\treturn {\n\t\t\t\tlabel: filename,\n\t\t\t\turi: fullPath,\n\t\t\t\tisFolder: true,\n\t\t\t\ticonClasses: getIconClasses(\n\t\t\t\t\tthis.modelService,\n\t\t\t\t\tthis.languageService,\n\t\t\t\t\tfullPath || undefined,\n\t\t\t\t\tFileKind.FOLDER,\n\t\t\t\t),\n\t\t\t};\n\t\t} else if (\n\t\t\t!stat.isDirectory &&\n\t\t\tthis.allowFileSelection &&\n\t\t\tthis.filterFile(fullPath)\n\t\t) {\n\t\t\treturn {\n\t\t\t\tlabel: stat.name,\n\t\t\t\turi: fullPath,\n\t\t\t\tisFolder: false,\n\t\t\t\ticonClasses: getIconClasses(\n\t\t\t\t\tthis.modelService,\n\t\t\t\t\tthis.languageService,\n\t\t\t\t\tfullPath || undefined,\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\t\treturn undefined;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["OpenLocalFileCommand", "SaveLocalFileCommand", "OpenLocalFolderCommand", "OpenLocalFileFolderCommand", "UpdateResult"]
}
