{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/dialogs/browser/abstractFileDialogService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { coalesce, distinct } from \"../../../../base/common/arrays.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport {\n\tisAbsolute as localPathIsAbsolute,\n\tnormalize as localPathNormalize,\n} from \"../../../../base/common/path.js\";\nimport * as resources from \"../../../../base/common/resources.js\";\nimport Severity from \"../../../../base/common/severity.js\";\nimport { trim } from \"../../../../base/common/strings.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport { ICodeEditorService } from \"../../../../editor/browser/services/codeEditorService.js\";\nimport { ILanguageService } from \"../../../../editor/common/languages/language.js\";\nimport { PLAINTEXT_EXTENSION } from \"../../../../editor/common/languages/modesRegistry.js\";\nimport * as nls from \"../../../../nls.js\";\nimport { ICommandService } from \"../../../../platform/commands/common/commands.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport {\n\tConfirmResult,\n\ttype FileFilter,\n\tIDialogService,\n\ttype IFileDialogService,\n\ttype IOpenDialogOptions,\n\ttype IPickAndOpenOptions,\n\ttype ISaveDialogOptions,\n\tgetFileNamesMessage,\n} from \"../../../../platform/dialogs/common/dialogs.js\";\nimport { EditorOpenSource } from \"../../../../platform/editor/common/editor.js\";\nimport { IFileService } from \"../../../../platform/files/common/files.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ILabelService } from \"../../../../platform/label/common/label.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { IOpenerService } from \"../../../../platform/opener/common/opener.js\";\nimport {\n\ttype IWindowOpenable,\n\tisFileToOpen,\n\tisWorkspaceToOpen,\n} from \"../../../../platform/window/common/window.js\";\nimport {\n\tIWorkspaceContextService,\n\tWORKSPACE_EXTENSION,\n\tWorkbenchState,\n\tisSavedWorkspace,\n\tisTemporaryWorkspace,\n} from \"../../../../platform/workspace/common/workspace.js\";\nimport { IWorkspacesService } from \"../../../../platform/workspaces/common/workspaces.js\";\nimport { IEditorService } from \"../../editor/common/editorService.js\";\nimport { IWorkbenchEnvironmentService } from \"../../environment/common/environmentService.js\";\nimport { IHistoryService } from \"../../history/common/history.js\";\nimport { IHostService } from \"../../host/browser/host.js\";\nimport { IPathService } from \"../../path/common/pathService.js\";\nimport {\n\ttype ISimpleFileDialog,\n\tSimpleFileDialog,\n} from \"./simpleFileDialog.js\";\n\nexport abstract class AbstractFileDialogService implements IFileDialogService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IHostService protected readonly hostService: IHostService,\n\t\t@IWorkspaceContextService protected readonly contextService: IWorkspaceContextService,\n\t\t@IHistoryService protected readonly historyService: IHistoryService,\n\t\t@IWorkbenchEnvironmentService protected readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IInstantiationService protected readonly instantiationService: IInstantiationService,\n\t\t@IConfigurationService protected readonly configurationService: IConfigurationService,\n\t\t@IFileService protected readonly fileService: IFileService,\n\t\t@IOpenerService protected readonly openerService: IOpenerService,\n\t\t@IDialogService protected readonly dialogService: IDialogService,\n\t\t@ILanguageService private readonly languageService: ILanguageService,\n\t\t@IWorkspacesService private readonly workspacesService: IWorkspacesService,\n\t\t@ILabelService private readonly labelService: ILabelService,\n\t\t@IPathService private readonly pathService: IPathService,\n\t\t@ICommandService protected readonly commandService: ICommandService,\n\t\t@IEditorService protected readonly editorService: IEditorService,\n\t\t@ICodeEditorService protected readonly codeEditorService: ICodeEditorService,\n\t\t@ILogService private readonly logService: ILogService\n\t) { }\n\n\tasync defaultFilePath(\n\t\tschemeFilter = this.getSchemeFilterForWindow(),\n\t\tauthorityFilter = this.getAuthorityFilterForWindow(),\n\t): Promise<URI> {\n\t\t// Check for last active file first...\n\t\tlet candidate = this.historyService.getLastActiveFile(\n\t\t\tschemeFilter,\n\t\t\tauthorityFilter,\n\t\t);\n\n\t\t// ...then for last active file root\n\t\tif (candidate) {\n\t\t\tcandidate = resources.dirname(candidate);\n\t\t} else {\n\t\t\tcandidate = this.historyService.getLastActiveWorkspaceRoot(\n\t\t\t\tschemeFilter,\n\t\t\t\tauthorityFilter,\n\t\t\t);\n\t\t}\n\n\t\tif (!candidate) {\n\t\t\tcandidate = await this.preferredHome(schemeFilter);\n\t\t}\n\n\t\treturn candidate;\n\t}\n\n\tasync defaultFolderPath(\n\t\tschemeFilter = this.getSchemeFilterForWindow(),\n\t\tauthorityFilter = this.getAuthorityFilterForWindow(),\n\t): Promise<URI> {\n\t\t// Check for last active file root first...\n\t\tlet candidate = this.historyService.getLastActiveWorkspaceRoot(\n\t\t\tschemeFilter,\n\t\t\tauthorityFilter,\n\t\t);\n\n\t\t// ...then for last active file\n\t\tif (!candidate) {\n\t\t\tcandidate = this.historyService.getLastActiveFile(\n\t\t\t\tschemeFilter,\n\t\t\t\tauthorityFilter,\n\t\t\t);\n\t\t}\n\n\t\tif (!candidate) {\n\t\t\treturn this.preferredHome(schemeFilter);\n\t\t}\n\n\t\treturn resources.dirname(candidate);\n\t}\n\n\tasync preferredHome(\n\t\tschemeFilter = this.getSchemeFilterForWindow(),\n\t): Promise<URI> {\n\t\tconst preferLocal = schemeFilter === Schemas.file;\n\t\tconst preferredHomeConfig = this.configurationService.inspect<string>(\n\t\t\t\"files.dialog.defaultPath\",\n\t\t);\n\t\tconst preferredHomeCandidate = preferLocal\n\t\t\t? preferredHomeConfig.userLocalValue\n\t\t\t: preferredHomeConfig.userRemoteValue;\n\t\tif (preferredHomeCandidate) {\n\t\t\tconst isPreferredHomeCandidateAbsolute = preferLocal\n\t\t\t\t? localPathIsAbsolute(preferredHomeCandidate)\n\t\t\t\t: (await this.pathService.path).isAbsolute(\n\t\t\t\t\t\tpreferredHomeCandidate,\n\t\t\t\t\t);\n\t\t\tif (isPreferredHomeCandidateAbsolute) {\n\t\t\t\tconst preferredHomeNormalized = preferLocal\n\t\t\t\t\t? localPathNormalize(preferredHomeCandidate)\n\t\t\t\t\t: (await this.pathService.path).normalize(\n\t\t\t\t\t\t\tpreferredHomeCandidate,\n\t\t\t\t\t\t);\n\t\t\t\tconst preferredHome = resources.toLocalResource(\n\t\t\t\t\tawait this.pathService.fileURI(preferredHomeNormalized),\n\t\t\t\t\tthis.environmentService.remoteAuthority,\n\t\t\t\t\tthis.pathService.defaultUriScheme,\n\t\t\t\t);\n\t\t\t\tif (await this.fileService.exists(preferredHome)) {\n\t\t\t\t\treturn preferredHome;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pathService.userHome({ preferLocal });\n\t}\n\n\tasync defaultWorkspacePath(\n\t\tschemeFilter = this.getSchemeFilterForWindow(),\n\t): Promise<URI> {\n\t\tlet defaultWorkspacePath: URI | undefined;\n\n\t\t// Check for current workspace config file first...\n\t\tif (\n\t\t\tthis.contextService.getWorkbenchState() === WorkbenchState.WORKSPACE\n\t\t) {\n\t\t\tconst configuration =\n\t\t\t\tthis.contextService.getWorkspace().configuration;\n\t\t\tif (\n\t\t\t\tconfiguration?.scheme === schemeFilter &&\n\t\t\t\tisSavedWorkspace(configuration, this.environmentService) &&\n\t\t\t\t!isTemporaryWorkspace(configuration)\n\t\t\t) {\n\t\t\t\tdefaultWorkspacePath = resources.dirname(configuration);\n\t\t\t}\n\t\t}\n\n\t\t// ...then fallback to default file path\n\t\tif (!defaultWorkspacePath) {\n\t\t\tdefaultWorkspacePath = await this.defaultFilePath(schemeFilter);\n\t\t}\n\n\t\treturn defaultWorkspacePath;\n\t}\n\n\tasync showSaveConfirm(\n\t\tfileNamesOrResources: (string | URI)[],\n\t): Promise<ConfirmResult> {\n\t\tif (this.skipDialogs()) {\n\t\t\tthis.logService.trace(\n\t\t\t\t\"FileDialogService: refused to show save confirmation dialog in tests.\",\n\t\t\t);\n\n\t\t\t// no veto when we are in extension dev testing mode because we cannot assume we run interactive\n\t\t\treturn ConfirmResult.DONT_SAVE;\n\t\t}\n\n\t\treturn this.doShowSaveConfirm(fileNamesOrResources);\n\t}\n\n\tprivate skipDialogs(): boolean {\n\t\tif (\n\t\t\tthis.environmentService.isExtensionDevelopment &&\n\t\t\tthis.environmentService.extensionTestsLocationURI\n\t\t) {\n\t\t\treturn true; // integration tests\n\t\t}\n\n\t\treturn !!this.environmentService.enableSmokeTestDriver; // smoke tests\n\t}\n\n\tprivate async doShowSaveConfirm(\n\t\tfileNamesOrResources: (string | URI)[],\n\t): Promise<ConfirmResult> {\n\t\tif (fileNamesOrResources.length === 0) {\n\t\t\treturn ConfirmResult.DONT_SAVE;\n\t\t}\n\n\t\tlet message: string;\n\t\tlet detail = nls.localize(\n\t\t\t\"saveChangesDetail\",\n\t\t\t\"Your changes will be lost if you don't save them.\",\n\t\t);\n\t\tif (fileNamesOrResources.length === 1) {\n\t\t\tmessage = nls.localize(\n\t\t\t\t\"saveChangesMessage\",\n\t\t\t\t\"Do you want to save the changes you made to {0}?\",\n\t\t\t\ttypeof fileNamesOrResources[0] === \"string\"\n\t\t\t\t\t? fileNamesOrResources[0]\n\t\t\t\t\t: resources.basename(fileNamesOrResources[0]),\n\t\t\t);\n\t\t} else {\n\t\t\tmessage = nls.localize(\n\t\t\t\t\"saveChangesMessages\",\n\t\t\t\t\"Do you want to save the changes to the following {0} files?\",\n\t\t\t\tfileNamesOrResources.length,\n\t\t\t);\n\t\t\tdetail = getFileNamesMessage(fileNamesOrResources) + \"\\n\" + detail;\n\t\t}\n\n\t\tconst { result } = await this.dialogService.prompt<ConfirmResult>({\n\t\t\ttype: Severity.Warning,\n\t\t\tmessage,\n\t\t\tdetail,\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\tlabel:\n\t\t\t\t\t\tfileNamesOrResources.length > 1\n\t\t\t\t\t\t\t? nls.localize(\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tkey: \"saveAll\",\n\t\t\t\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"&&Save All\",\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: nls.localize(\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tkey: \"save\",\n\t\t\t\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"&&Save\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\trun: () => ConfirmResult.SAVE,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: nls.localize(\n\t\t\t\t\t\t{ key: \"dontSave\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\t\t\"Do&&n't Save\",\n\t\t\t\t\t),\n\t\t\t\t\trun: () => ConfirmResult.DONT_SAVE,\n\t\t\t\t},\n\t\t\t],\n\t\t\tcancelButton: {\n\t\t\t\trun: () => ConfirmResult.CANCEL,\n\t\t\t},\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tprotected addFileSchemaIfNeeded(\n\t\tschema: string,\n\t\t_isFolder?: boolean,\n\t): string[] {\n\t\treturn schema === Schemas.untitled\n\t\t\t? [Schemas.file]\n\t\t\t: schema !== Schemas.file\n\t\t\t\t? [schema, Schemas.file]\n\t\t\t\t: [schema];\n\t}\n\n\tprotected async pickFileFolderAndOpenSimplified(\n\t\tschema: string,\n\t\toptions: IPickAndOpenOptions,\n\t\tpreferNewWindow: boolean,\n\t): Promise<void> {\n\t\tconst title = nls.localize(\n\t\t\t\"openFileOrFolder.title\",\n\t\t\t\"Open File or Folder\",\n\t\t);\n\t\tconst availableFileSystems = this.addFileSchemaIfNeeded(schema);\n\n\t\tconst uri = await this.pickResource({\n\t\t\tcanSelectFiles: true,\n\t\t\tcanSelectFolders: true,\n\t\t\tcanSelectMany: false,\n\t\t\tdefaultUri: options.defaultUri,\n\t\t\ttitle,\n\t\t\tavailableFileSystems,\n\t\t});\n\n\t\tif (uri) {\n\t\t\tconst stat = await this.fileService.stat(uri);\n\n\t\t\tconst toOpen: IWindowOpenable = stat.isDirectory\n\t\t\t\t? { folderUri: uri }\n\t\t\t\t: { fileUri: uri };\n\t\t\tif (!isWorkspaceToOpen(toOpen) && isFileToOpen(toOpen)) {\n\t\t\t\tthis.addFileToRecentlyOpened(toOpen.fileUri);\n\t\t\t}\n\n\t\t\tif (stat.isDirectory || options.forceNewWindow || preferNewWindow) {\n\t\t\t\tawait this.hostService.openWindow([toOpen], {\n\t\t\t\t\tforceNewWindow: options.forceNewWindow,\n\t\t\t\t\tremoteAuthority: options.remoteAuthority,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tawait this.editorService.openEditors(\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tresource: uri,\n\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\tsource: EditorOpenSource.USER,\n\t\t\t\t\t\t\t\tpinned: true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\tundefined,\n\t\t\t\t\t{ validateTrust: true },\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected async pickFileAndOpenSimplified(\n\t\tschema: string,\n\t\toptions: IPickAndOpenOptions,\n\t\tpreferNewWindow: boolean,\n\t): Promise<void> {\n\t\tconst title = nls.localize(\"openFile.title\", \"Open File\");\n\t\tconst availableFileSystems = this.addFileSchemaIfNeeded(schema);\n\n\t\tconst uri = await this.pickResource({\n\t\t\tcanSelectFiles: true,\n\t\t\tcanSelectFolders: false,\n\t\t\tcanSelectMany: false,\n\t\t\tdefaultUri: options.defaultUri,\n\t\t\ttitle,\n\t\t\tavailableFileSystems,\n\t\t});\n\t\tif (uri) {\n\t\t\tthis.addFileToRecentlyOpened(uri);\n\n\t\t\tif (options.forceNewWindow || preferNewWindow) {\n\t\t\t\tawait this.hostService.openWindow([{ fileUri: uri }], {\n\t\t\t\t\tforceNewWindow: options.forceNewWindow,\n\t\t\t\t\tremoteAuthority: options.remoteAuthority,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tawait this.editorService.openEditors(\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tresource: uri,\n\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\tsource: EditorOpenSource.USER,\n\t\t\t\t\t\t\t\tpinned: true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\tundefined,\n\t\t\t\t\t{ validateTrust: true },\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected addFileToRecentlyOpened(uri: URI): void {\n\t\tthis.workspacesService.addRecentlyOpened([\n\t\t\t{ fileUri: uri, label: this.labelService.getUriLabel(uri) },\n\t\t]);\n\t}\n\n\tprotected async pickFolderAndOpenSimplified(\n\t\tschema: string,\n\t\toptions: IPickAndOpenOptions,\n\t): Promise<void> {\n\t\tconst title = nls.localize(\"openFolder.title\", \"Open Folder\");\n\t\tconst availableFileSystems = this.addFileSchemaIfNeeded(schema, true);\n\n\t\tconst uri = await this.pickResource({\n\t\t\tcanSelectFiles: false,\n\t\t\tcanSelectFolders: true,\n\t\t\tcanSelectMany: false,\n\t\t\tdefaultUri: options.defaultUri,\n\t\t\ttitle,\n\t\t\tavailableFileSystems,\n\t\t});\n\t\tif (uri) {\n\t\t\treturn this.hostService.openWindow([{ folderUri: uri }], {\n\t\t\t\tforceNewWindow: options.forceNewWindow,\n\t\t\t\tremoteAuthority: options.remoteAuthority,\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected async pickWorkspaceAndOpenSimplified(\n\t\tschema: string,\n\t\toptions: IPickAndOpenOptions,\n\t): Promise<void> {\n\t\tconst title = nls.localize(\n\t\t\t\"openWorkspace.title\",\n\t\t\t\"Open Workspace from File\",\n\t\t);\n\t\tconst filters: FileFilter[] = [\n\t\t\t{\n\t\t\t\tname: nls.localize(\"filterName.workspace\", \"Workspace\"),\n\t\t\t\textensions: [WORKSPACE_EXTENSION],\n\t\t\t},\n\t\t];\n\t\tconst availableFileSystems = this.addFileSchemaIfNeeded(schema, true);\n\n\t\tconst uri = await this.pickResource({\n\t\t\tcanSelectFiles: true,\n\t\t\tcanSelectFolders: false,\n\t\t\tcanSelectMany: false,\n\t\t\tdefaultUri: options.defaultUri,\n\t\t\ttitle,\n\t\t\tfilters,\n\t\t\tavailableFileSystems,\n\t\t});\n\t\tif (uri) {\n\t\t\treturn this.hostService.openWindow([{ workspaceUri: uri }], {\n\t\t\t\tforceNewWindow: options.forceNewWindow,\n\t\t\t\tremoteAuthority: options.remoteAuthority,\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected async pickFileToSaveSimplified(\n\t\tschema: string,\n\t\toptions: ISaveDialogOptions,\n\t): Promise<URI | undefined> {\n\t\tif (!options.availableFileSystems) {\n\t\t\toptions.availableFileSystems = this.addFileSchemaIfNeeded(schema);\n\t\t}\n\n\t\toptions.title = nls.localize(\"saveFileAs.title\", \"Save As\");\n\t\tconst uri = await this.saveRemoteResource(options);\n\n\t\tif (uri) {\n\t\t\tthis.addFileToRecentlyOpened(uri);\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\tprotected async showSaveDialogSimplified(\n\t\tschema: string,\n\t\toptions: ISaveDialogOptions,\n\t): Promise<URI | undefined> {\n\t\tif (!options.availableFileSystems) {\n\t\t\toptions.availableFileSystems = this.addFileSchemaIfNeeded(schema);\n\t\t}\n\n\t\treturn this.saveRemoteResource(options);\n\t}\n\n\tprotected async showOpenDialogSimplified(\n\t\tschema: string,\n\t\toptions: IOpenDialogOptions,\n\t): Promise<URI[] | undefined> {\n\t\tif (!options.availableFileSystems) {\n\t\t\toptions.availableFileSystems = this.addFileSchemaIfNeeded(\n\t\t\t\tschema,\n\t\t\t\toptions.canSelectFolders,\n\t\t\t);\n\t\t}\n\n\t\tconst uri = await this.pickResource(options);\n\n\t\treturn uri ? [uri] : undefined;\n\t}\n\n\tprotected getSimpleFileDialog(): ISimpleFileDialog {\n\t\treturn this.instantiationService.createInstance(SimpleFileDialog);\n\t}\n\n\tprivate pickResource(\n\t\toptions: IOpenDialogOptions,\n\t): Promise<URI | undefined> {\n\t\treturn this.getSimpleFileDialog().showOpenDialog(options);\n\t}\n\n\tprivate saveRemoteResource(\n\t\toptions: ISaveDialogOptions,\n\t): Promise<URI | undefined> {\n\t\treturn this.getSimpleFileDialog().showSaveDialog(options);\n\t}\n\n\tprivate getSchemeFilterForWindow(defaultUriScheme?: string): string {\n\t\treturn defaultUriScheme ?? this.pathService.defaultUriScheme;\n\t}\n\n\tprivate getAuthorityFilterForWindow(): string | undefined {\n\t\treturn this.environmentService.remoteAuthority;\n\t}\n\n\tprotected getFileSystemSchema(options: {\n\t\tavailableFileSystems?: readonly string[];\n\t\tdefaultUri?: URI;\n\t}): string {\n\t\treturn (\n\t\t\t(options.availableFileSystems && options.availableFileSystems[0]) ||\n\t\t\tthis.getSchemeFilterForWindow(options.defaultUri?.scheme)\n\t\t);\n\t}\n\n\tabstract pickFileFolderAndOpen(options: IPickAndOpenOptions): Promise<void>;\n\tabstract pickFileAndOpen(options: IPickAndOpenOptions): Promise<void>;\n\tabstract pickFolderAndOpen(options: IPickAndOpenOptions): Promise<void>;\n\tabstract pickWorkspaceAndOpen(options: IPickAndOpenOptions): Promise<void>;\n\tprotected getWorkspaceAvailableFileSystems(\n\t\toptions: IPickAndOpenOptions,\n\t): string[] {\n\t\tif (\n\t\t\toptions.availableFileSystems &&\n\t\t\toptions.availableFileSystems.length > 0\n\t\t) {\n\t\t\treturn options.availableFileSystems;\n\t\t}\n\t\tconst availableFileSystems = [Schemas.file];\n\t\tif (this.environmentService.remoteAuthority) {\n\t\t\tavailableFileSystems.unshift(Schemas.vscodeRemote);\n\t\t}\n\t\treturn availableFileSystems;\n\t}\n\tabstract showSaveDialog(\n\t\toptions: ISaveDialogOptions,\n\t): Promise<URI | undefined>;\n\tabstract showOpenDialog(\n\t\toptions: IOpenDialogOptions,\n\t): Promise<URI[] | undefined>;\n\n\tabstract pickFileToSave(\n\t\tdefaultUri: URI,\n\t\tavailableFileSystems?: string[],\n\t): Promise<URI | undefined>;\n\n\tprotected getPickFileToSaveDialogOptions(\n\t\tdefaultUri: URI,\n\t\tavailableFileSystems?: string[],\n\t): ISaveDialogOptions {\n\t\tconst options: ISaveDialogOptions = {\n\t\t\tdefaultUri,\n\t\t\ttitle: nls.localize(\"saveAsTitle\", \"Save As\"),\n\t\t\tavailableFileSystems,\n\t\t};\n\n\t\tinterface IFilter {\n\t\t\tname: string;\n\t\t\textensions: string[];\n\t\t}\n\n\t\t// Build the file filter by using our known languages\n\t\tconst ext: string | undefined = defaultUri\n\t\t\t? resources.extname(defaultUri)\n\t\t\t: undefined;\n\t\tlet matchingFilter: IFilter | undefined;\n\n\t\tconst registeredLanguageNames =\n\t\t\tthis.languageService.getSortedRegisteredLanguageNames();\n\t\tconst registeredLanguageFilters: IFilter[] = coalesce(\n\t\t\tregisteredLanguageNames.map(({ languageName, languageId }) => {\n\t\t\t\tconst extensions =\n\t\t\t\t\tthis.languageService.getExtensions(languageId);\n\t\t\t\tif (!extensions.length) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst filter: IFilter = {\n\t\t\t\t\tname: languageName,\n\t\t\t\t\textensions: distinct(extensions)\n\t\t\t\t\t\t.slice(0, 10)\n\t\t\t\t\t\t.map((e) => trim(e, \".\")),\n\t\t\t\t};\n\n\t\t\t\t// https://github.com/microsoft/vscode/issues/115860\n\t\t\t\tconst extOrPlaintext = ext || PLAINTEXT_EXTENSION;\n\t\t\t\tif (!matchingFilter && extensions.includes(extOrPlaintext)) {\n\t\t\t\t\tmatchingFilter = filter;\n\n\t\t\t\t\t// The selected extension must be in the set of extensions that are in the filter list that is sent to the save dialog.\n\t\t\t\t\t// If it isn't, add it manually. https://github.com/microsoft/vscode/issues/147657\n\t\t\t\t\tconst trimmedExt = trim(extOrPlaintext, \".\");\n\t\t\t\t\tif (!filter.extensions.includes(trimmedExt)) {\n\t\t\t\t\t\tfilter.extensions.unshift(trimmedExt);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn null; // first matching filter will be added to the top\n\t\t\t\t}\n\n\t\t\t\treturn filter;\n\t\t\t}),\n\t\t);\n\n\t\t// We have no matching filter, e.g. because the language\n\t\t// is unknown. We still add the extension to the list of\n\t\t// filters though so that it can be picked\n\t\t// (https://github.com/microsoft/vscode/issues/96283)\n\t\tif (!matchingFilter && ext) {\n\t\t\tmatchingFilter = {\n\t\t\t\tname: trim(ext, \".\").toUpperCase(),\n\t\t\t\textensions: [trim(ext, \".\")],\n\t\t\t};\n\t\t}\n\n\t\t// Order of filters is\n\t\t// - All Files (we MUST do this to fix macOS issue https://github.com/microsoft/vscode/issues/102713)\n\t\t// - File Extension Match (if any)\n\t\t// - All Languages\n\t\t// - No Extension\n\t\toptions.filters = coalesce([\n\t\t\t{ name: nls.localize(\"allFiles\", \"All Files\"), extensions: [\"*\"] },\n\t\t\tmatchingFilter,\n\t\t\t...registeredLanguageFilters,\n\t\t\t{ name: nls.localize(\"noExt\", \"No Extension\"), extensions: [\"\"] },\n\t\t]);\n\n\t\treturn options;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
