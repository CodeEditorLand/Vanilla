{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/dialogs/browser/fileDialogService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tgetActiveWindow,\n\ttriggerDownload,\n\ttriggerUpload,\n} from \"../../../../base/browser/dom.js\";\nimport { VSBuffer } from \"../../../../base/common/buffer.js\";\nimport { memoize } from \"../../../../base/common/decorators.js\";\nimport { Iterable } from \"../../../../base/common/iterator.js\";\nimport { getMediaOrTextMime } from \"../../../../base/common/mime.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport { basename } from \"../../../../base/common/resources.js\";\nimport Severity from \"../../../../base/common/severity.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport { EmbeddedCodeEditorWidget } from \"../../../../editor/browser/widget/codeEditor/embeddedCodeEditorWidget.js\";\nimport { localize } from \"../../../../nls.js\";\nimport {\n\ttype FileFilter,\n\tIFileDialogService,\n\ttype IOpenDialogOptions,\n\ttype IPickAndOpenOptions,\n\ttype IPromptButton,\n\ttype ISaveDialogOptions,\n} from \"../../../../platform/dialogs/common/dialogs.js\";\nimport { extractFileListData } from \"../../../../platform/dnd/browser/dnd.js\";\nimport type { HTMLFileSystemProvider } from \"../../../../platform/files/browser/htmlFileSystemProvider.js\";\nimport { WebFileSystemAccess } from \"../../../../platform/files/browser/webFileSystemAccess.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport { AbstractFileDialogService } from \"./abstractFileDialogService.js\";\n\nexport class FileDialogService\n\textends AbstractFileDialogService\n\timplements IFileDialogService\n{\n\t@memoize\n\tprivate get fileSystemProvider(): HTMLFileSystemProvider {\n\t\treturn this.fileService.getProvider(\n\t\t\tSchemas.file,\n\t\t) as HTMLFileSystemProvider;\n\t}\n\n\tasync pickFileFolderAndOpen(options: IPickAndOpenOptions): Promise<void> {\n\t\tconst schema = this.getFileSystemSchema(options);\n\n\t\tif (!options.defaultUri) {\n\t\t\toptions.defaultUri = await this.defaultFilePath(schema);\n\t\t}\n\n\t\tif (this.shouldUseSimplified(schema)) {\n\t\t\treturn super.pickFileFolderAndOpenSimplified(\n\t\t\t\tschema,\n\t\t\t\toptions,\n\t\t\t\tfalse,\n\t\t\t);\n\t\t}\n\n\t\tthrow new Error(\n\t\t\tlocalize(\n\t\t\t\t\"pickFolderAndOpen\",\n\t\t\t\t\"Can't open folders, try adding a folder to the workspace instead.\",\n\t\t\t),\n\t\t);\n\t}\n\n\tprotected override addFileSchemaIfNeeded(\n\t\tschema: string,\n\t\tisFolder: boolean,\n\t): string[] {\n\t\treturn schema === Schemas.untitled\n\t\t\t? [Schemas.file]\n\t\t\t: schema !== Schemas.file &&\n\t\t\t\t\t(!isFolder || schema !== Schemas.vscodeRemote)\n\t\t\t\t? [schema, Schemas.file]\n\t\t\t\t: [schema];\n\t}\n\n\tasync pickFileAndOpen(options: IPickAndOpenOptions): Promise<void> {\n\t\tconst schema = this.getFileSystemSchema(options);\n\n\t\tif (!options.defaultUri) {\n\t\t\toptions.defaultUri = await this.defaultFilePath(schema);\n\t\t}\n\n\t\tif (this.shouldUseSimplified(schema)) {\n\t\t\treturn super.pickFileAndOpenSimplified(schema, options, false);\n\t\t}\n\n\t\tconst activeWindow = getActiveWindow();\n\t\tif (!WebFileSystemAccess.supported(activeWindow)) {\n\t\t\treturn this.showUnsupportedBrowserWarning(\"open\");\n\t\t}\n\n\t\tlet fileHandle: FileSystemHandle | undefined;\n\t\ttry {\n\t\t\t[fileHandle] = await activeWindow.showOpenFilePicker({\n\t\t\t\tmultiple: false,\n\t\t\t});\n\t\t} catch (error) {\n\t\t\treturn; // `showOpenFilePicker` will throw an error when the user cancels\n\t\t}\n\n\t\tif (!WebFileSystemAccess.isFileSystemFileHandle(fileHandle)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst uri =\n\t\t\tawait this.fileSystemProvider.registerFileHandle(fileHandle);\n\n\t\tthis.addFileToRecentlyOpened(uri);\n\n\t\tawait this.openerService.open(uri, {\n\t\t\tfromUserGesture: true,\n\t\t\teditorOptions: { pinned: true },\n\t\t});\n\t}\n\n\tasync pickFolderAndOpen(options: IPickAndOpenOptions): Promise<void> {\n\t\tconst schema = this.getFileSystemSchema(options);\n\n\t\tif (!options.defaultUri) {\n\t\t\toptions.defaultUri = await this.defaultFolderPath(schema);\n\t\t}\n\n\t\tif (this.shouldUseSimplified(schema)) {\n\t\t\treturn super.pickFolderAndOpenSimplified(schema, options);\n\t\t}\n\n\t\tthrow new Error(\n\t\t\tlocalize(\n\t\t\t\t\"pickFolderAndOpen\",\n\t\t\t\t\"Can't open folders, try adding a folder to the workspace instead.\",\n\t\t\t),\n\t\t);\n\t}\n\n\tasync pickWorkspaceAndOpen(options: IPickAndOpenOptions): Promise<void> {\n\t\toptions.availableFileSystems =\n\t\t\tthis.getWorkspaceAvailableFileSystems(options);\n\t\tconst schema = this.getFileSystemSchema(options);\n\n\t\tif (!options.defaultUri) {\n\t\t\toptions.defaultUri = await this.defaultWorkspacePath(schema);\n\t\t}\n\n\t\tif (this.shouldUseSimplified(schema)) {\n\t\t\treturn super.pickWorkspaceAndOpenSimplified(schema, options);\n\t\t}\n\n\t\tthrow new Error(\n\t\t\tlocalize(\n\t\t\t\t\"pickWorkspaceAndOpen\",\n\t\t\t\t\"Can't open workspaces, try adding a folder to the workspace instead.\",\n\t\t\t),\n\t\t);\n\t}\n\n\tasync pickFileToSave(\n\t\tdefaultUri: URI,\n\t\tavailableFileSystems?: string[],\n\t): Promise<URI | undefined> {\n\t\tconst schema = this.getFileSystemSchema({\n\t\t\tdefaultUri,\n\t\t\tavailableFileSystems,\n\t\t});\n\n\t\tconst options = this.getPickFileToSaveDialogOptions(\n\t\t\tdefaultUri,\n\t\t\tavailableFileSystems,\n\t\t);\n\t\tif (this.shouldUseSimplified(schema)) {\n\t\t\treturn super.pickFileToSaveSimplified(schema, options);\n\t\t}\n\n\t\tconst activeWindow = getActiveWindow();\n\t\tif (!WebFileSystemAccess.supported(activeWindow)) {\n\t\t\treturn this.showUnsupportedBrowserWarning(\"save\");\n\t\t}\n\n\t\tlet fileHandle: FileSystemHandle | undefined;\n\t\tconst startIn = Iterable.first(this.fileSystemProvider.directories);\n\n\t\ttry {\n\t\t\tfileHandle = await activeWindow.showSaveFilePicker({\n\t\t\t\ttypes: this.getFilePickerTypes(options.filters),\n\t\t\t\t...{ suggestedName: basename(defaultUri), startIn },\n\t\t\t});\n\t\t} catch (error) {\n\t\t\treturn; // `showSaveFilePicker` will throw an error when the user cancels\n\t\t}\n\n\t\tif (!WebFileSystemAccess.isFileSystemFileHandle(fileHandle)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn this.fileSystemProvider.registerFileHandle(fileHandle);\n\t}\n\n\tprivate getFilePickerTypes(\n\t\tfilters?: FileFilter[],\n\t): FilePickerAcceptType[] | undefined {\n\t\treturn filters\n\t\t\t?.filter((filter) => {\n\t\t\t\treturn !(\n\t\t\t\t\tfilter.extensions.length === 1 &&\n\t\t\t\t\t(filter.extensions[0] === \"*\" ||\n\t\t\t\t\t\tfilter.extensions[0] === \"\")\n\t\t\t\t);\n\t\t\t})\n\t\t\t.map((filter) => {\n\t\t\t\tconst accept: Record<string, string[]> = {};\n\t\t\t\tconst extensions = filter.extensions.filter(\n\t\t\t\t\t(ext) =>\n\t\t\t\t\t\text.indexOf(\"-\") < 0 &&\n\t\t\t\t\t\text.indexOf(\"*\") < 0 &&\n\t\t\t\t\t\text.indexOf(\"_\") < 0,\n\t\t\t\t);\n\t\t\t\taccept[\n\t\t\t\t\tgetMediaOrTextMime(`fileName.${filter.extensions[0]}`) ??\n\t\t\t\t\t\t\"text/plain\"\n\t\t\t\t] = extensions.map((ext) =>\n\t\t\t\t\text.startsWith(\".\") ? ext : `.${ext}`,\n\t\t\t\t);\n\t\t\t\treturn {\n\t\t\t\t\tdescription: filter.name,\n\t\t\t\t\taccept,\n\t\t\t\t};\n\t\t\t});\n\t}\n\n\tasync showSaveDialog(\n\t\toptions: ISaveDialogOptions,\n\t): Promise<URI | undefined> {\n\t\tconst schema = this.getFileSystemSchema(options);\n\n\t\tif (this.shouldUseSimplified(schema)) {\n\t\t\treturn super.showSaveDialogSimplified(schema, options);\n\t\t}\n\n\t\tconst activeWindow = getActiveWindow();\n\t\tif (!WebFileSystemAccess.supported(activeWindow)) {\n\t\t\treturn this.showUnsupportedBrowserWarning(\"save\");\n\t\t}\n\n\t\tlet fileHandle: FileSystemHandle | undefined;\n\t\tconst startIn = Iterable.first(this.fileSystemProvider.directories);\n\n\t\ttry {\n\t\t\tfileHandle = await activeWindow.showSaveFilePicker({\n\t\t\t\ttypes: this.getFilePickerTypes(options.filters),\n\t\t\t\t...(options.defaultUri\n\t\t\t\t\t? { suggestedName: basename(options.defaultUri) }\n\t\t\t\t\t: undefined),\n\t\t\t\t...{ startIn },\n\t\t\t});\n\t\t} catch (error) {\n\t\t\treturn undefined; // `showSaveFilePicker` will throw an error when the user cancels\n\t\t}\n\n\t\tif (!WebFileSystemAccess.isFileSystemFileHandle(fileHandle)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn this.fileSystemProvider.registerFileHandle(fileHandle);\n\t}\n\n\tasync showOpenDialog(\n\t\toptions: IOpenDialogOptions,\n\t): Promise<URI[] | undefined> {\n\t\tconst schema = this.getFileSystemSchema(options);\n\n\t\tif (this.shouldUseSimplified(schema)) {\n\t\t\treturn super.showOpenDialogSimplified(schema, options);\n\t\t}\n\n\t\tconst activeWindow = getActiveWindow();\n\t\tif (!WebFileSystemAccess.supported(activeWindow)) {\n\t\t\treturn this.showUnsupportedBrowserWarning(\"open\");\n\t\t}\n\n\t\tlet uri: URI | undefined;\n\t\tconst startIn =\n\t\t\tIterable.first(this.fileSystemProvider.directories) ?? \"documents\";\n\n\t\ttry {\n\t\t\tif (options.canSelectFiles) {\n\t\t\t\tconst handle = await activeWindow.showOpenFilePicker({\n\t\t\t\t\tmultiple: false,\n\t\t\t\t\ttypes: this.getFilePickerTypes(options.filters),\n\t\t\t\t\t...{ startIn },\n\t\t\t\t});\n\t\t\t\tif (\n\t\t\t\t\thandle.length === 1 &&\n\t\t\t\t\tWebFileSystemAccess.isFileSystemFileHandle(handle[0])\n\t\t\t\t) {\n\t\t\t\t\turi = await this.fileSystemProvider.registerFileHandle(\n\t\t\t\t\t\thandle[0],\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst handle = await activeWindow.showDirectoryPicker({\n\t\t\t\t\t...{ startIn },\n\t\t\t\t});\n\t\t\t\turi =\n\t\t\t\t\tawait this.fileSystemProvider.registerDirectoryHandle(\n\t\t\t\t\t\thandle,\n\t\t\t\t\t);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t// ignore - `showOpenFilePicker` / `showDirectoryPicker` will throw an error when the user cancels\n\t\t}\n\n\t\treturn uri ? [uri] : undefined;\n\t}\n\n\tprivate async showUnsupportedBrowserWarning(\n\t\tcontext: \"save\" | \"open\",\n\t): Promise<undefined> {\n\t\t// When saving, try to just download the contents\n\t\t// of the active text editor if any as a workaround\n\t\tif (context === \"save\") {\n\t\t\tconst activeCodeEditor =\n\t\t\t\tthis.codeEditorService.getActiveCodeEditor();\n\t\t\tif (!(activeCodeEditor instanceof EmbeddedCodeEditorWidget)) {\n\t\t\t\tconst activeTextModel = activeCodeEditor?.getModel();\n\t\t\t\tif (activeTextModel) {\n\t\t\t\t\ttriggerDownload(\n\t\t\t\t\t\tVSBuffer.fromString(activeTextModel.getValue()).buffer,\n\t\t\t\t\t\tbasename(activeTextModel.uri),\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Otherwise inform the user about options\n\n\t\tconst buttons: IPromptButton<void>[] = [\n\t\t\t{\n\t\t\t\tlabel: localize(\n\t\t\t\t\t{ key: \"openRemote\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\t\"&&Open Remote...\",\n\t\t\t\t),\n\t\t\t\trun: async () => {\n\t\t\t\t\tawait this.commandService.executeCommand(\n\t\t\t\t\t\t\"workbench.action.remote.showMenu\",\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: localize(\n\t\t\t\t\t{ key: \"learnMore\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\t\"&&Learn More\",\n\t\t\t\t),\n\t\t\t\trun: async () => {\n\t\t\t\t\tawait this.openerService.open(\n\t\t\t\t\t\t\"https://aka.ms/VSCodeWebLocalFileSystemAccess\",\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\t\tif (context === \"open\") {\n\t\t\tbuttons.push({\n\t\t\t\tlabel: localize(\n\t\t\t\t\t{ key: \"openFiles\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\t\"Open &&Files...\",\n\t\t\t\t),\n\t\t\t\trun: async () => {\n\t\t\t\t\tconst files = await triggerUpload();\n\t\t\t\t\tif (files) {\n\t\t\t\t\t\tconst filesData = (\n\t\t\t\t\t\t\tawait this.instantiationService.invokeFunction(\n\t\t\t\t\t\t\t\t(accessor) =>\n\t\t\t\t\t\t\t\t\textractFileListData(accessor, files),\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t).filter((fileData) => !fileData.isDirectory);\n\t\t\t\t\t\tif (filesData.length > 0) {\n\t\t\t\t\t\t\tthis.editorService.openEditors(\n\t\t\t\t\t\t\t\tfilesData.map((fileData) => {\n\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\tresource: fileData.resource,\n\t\t\t\t\t\t\t\t\t\tcontents: fileData.contents?.toString(),\n\t\t\t\t\t\t\t\t\t\toptions: { pinned: true },\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tawait this.dialogService.prompt({\n\t\t\ttype: Severity.Warning,\n\t\t\tmessage: localize(\n\t\t\t\t\"unsupportedBrowserMessage\",\n\t\t\t\t\"Opening Local Folders is Unsupported\",\n\t\t\t),\n\t\t\tdetail: localize(\n\t\t\t\t\"unsupportedBrowserDetail\",\n\t\t\t\t\"Your browser doesn't support opening local folders.\\nYou can either open single files or open a remote repository.\",\n\t\t\t),\n\t\t\tbuttons,\n\t\t});\n\n\t\treturn undefined;\n\t}\n\n\tprivate shouldUseSimplified(scheme: string): boolean {\n\t\treturn ![Schemas.file, Schemas.vscodeUserData, Schemas.tmp].includes(\n\t\t\tscheme,\n\t\t);\n\t}\n}\n\nregisterSingleton(\n\tIFileDialogService,\n\tFileDialogService,\n\tInstantiationType.Delayed,\n);\n"],
  "mappings": "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",
  "names": []
}
