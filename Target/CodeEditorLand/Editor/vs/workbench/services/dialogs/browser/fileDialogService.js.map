{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/dialogs/browser/fileDialogService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IPickAndOpenOptions, ISaveDialogOptions, IOpenDialogOptions, IFileDialogService, FileFilter, IPromptButton } from '../../../../platform/dialogs/common/dialogs.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { AbstractFileDialogService } from './abstractFileDialogService.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { memoize } from '../../../../base/common/decorators.js';\nimport { HTMLFileSystemProvider } from '../../../../platform/files/browser/htmlFileSystemProvider.js';\nimport { localize } from '../../../../nls.js';\nimport { getMediaOrTextMime } from '../../../../base/common/mime.js';\nimport { basename } from '../../../../base/common/resources.js';\nimport { getActiveWindow, triggerDownload, triggerUpload } from '../../../../base/browser/dom.js';\nimport Severity from '../../../../base/common/severity.js';\nimport { VSBuffer } from '../../../../base/common/buffer.js';\nimport { extractFileListData } from '../../../../platform/dnd/browser/dnd.js';\nimport { Iterable } from '../../../../base/common/iterator.js';\nimport { WebFileSystemAccess } from '../../../../platform/files/browser/webFileSystemAccess.js';\nimport { EmbeddedCodeEditorWidget } from '../../../../editor/browser/widget/codeEditor/embeddedCodeEditorWidget.js';\n\nexport class FileDialogService extends AbstractFileDialogService implements IFileDialogService {\n\n\t@memoize\n\tprivate get fileSystemProvider(): HTMLFileSystemProvider {\n\t\treturn this.fileService.getProvider(Schemas.file) as HTMLFileSystemProvider;\n\t}\n\n\tasync pickFileFolderAndOpen(options: IPickAndOpenOptions): Promise<void> {\n\t\tconst schema = this.getFileSystemSchema(options);\n\n\t\tif (!options.defaultUri) {\n\t\t\toptions.defaultUri = await this.defaultFilePath(schema);\n\t\t}\n\n\t\tif (this.shouldUseSimplified(schema)) {\n\t\t\treturn super.pickFileFolderAndOpenSimplified(schema, options, false);\n\t\t}\n\n\t\tthrow new Error(localize('pickFolderAndOpen', \"Can't open folders, try adding a folder to the workspace instead.\"));\n\t}\n\n\tprotected override addFileSchemaIfNeeded(schema: string, isFolder: boolean): string[] {\n\t\treturn (schema === Schemas.untitled) ? [Schemas.file]\n\t\t\t: (((schema !== Schemas.file) && (!isFolder || (schema !== Schemas.vscodeRemote))) ? [schema, Schemas.file] : [schema]);\n\t}\n\n\tasync pickFileAndOpen(options: IPickAndOpenOptions): Promise<void> {\n\t\tconst schema = this.getFileSystemSchema(options);\n\n\t\tif (!options.defaultUri) {\n\t\t\toptions.defaultUri = await this.defaultFilePath(schema);\n\t\t}\n\n\t\tif (this.shouldUseSimplified(schema)) {\n\t\t\treturn super.pickFileAndOpenSimplified(schema, options, false);\n\t\t}\n\n\t\tconst activeWindow = getActiveWindow();\n\t\tif (!WebFileSystemAccess.supported(activeWindow)) {\n\t\t\treturn this.showUnsupportedBrowserWarning('open');\n\t\t}\n\n\t\tlet fileHandle: FileSystemHandle | undefined = undefined;\n\t\ttry {\n\t\t\t([fileHandle] = await activeWindow.showOpenFilePicker({ multiple: false }));\n\t\t} catch (error) {\n\t\t\treturn; // `showOpenFilePicker` will throw an error when the user cancels\n\t\t}\n\n\t\tif (!WebFileSystemAccess.isFileSystemFileHandle(fileHandle)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst uri = await this.fileSystemProvider.registerFileHandle(fileHandle);\n\n\t\tthis.addFileToRecentlyOpened(uri);\n\n\t\tawait this.openerService.open(uri, { fromUserGesture: true, editorOptions: { pinned: true } });\n\t}\n\n\tasync pickFolderAndOpen(options: IPickAndOpenOptions): Promise<void> {\n\t\tconst schema = this.getFileSystemSchema(options);\n\n\t\tif (!options.defaultUri) {\n\t\t\toptions.defaultUri = await this.defaultFolderPath(schema);\n\t\t}\n\n\t\tif (this.shouldUseSimplified(schema)) {\n\t\t\treturn super.pickFolderAndOpenSimplified(schema, options);\n\t\t}\n\n\t\tthrow new Error(localize('pickFolderAndOpen', \"Can't open folders, try adding a folder to the workspace instead.\"));\n\t}\n\n\tasync pickWorkspaceAndOpen(options: IPickAndOpenOptions): Promise<void> {\n\t\toptions.availableFileSystems = this.getWorkspaceAvailableFileSystems(options);\n\t\tconst schema = this.getFileSystemSchema(options);\n\n\t\tif (!options.defaultUri) {\n\t\t\toptions.defaultUri = await this.defaultWorkspacePath(schema);\n\t\t}\n\n\t\tif (this.shouldUseSimplified(schema)) {\n\t\t\treturn super.pickWorkspaceAndOpenSimplified(schema, options);\n\t\t}\n\n\t\tthrow new Error(localize('pickWorkspaceAndOpen', \"Can't open workspaces, try adding a folder to the workspace instead.\"));\n\t}\n\n\tasync pickFileToSave(defaultUri: URI, availableFileSystems?: string[]): Promise<URI | undefined> {\n\t\tconst schema = this.getFileSystemSchema({ defaultUri, availableFileSystems });\n\n\t\tconst options = this.getPickFileToSaveDialogOptions(defaultUri, availableFileSystems);\n\t\tif (this.shouldUseSimplified(schema)) {\n\t\t\treturn super.pickFileToSaveSimplified(schema, options);\n\t\t}\n\n\t\tconst activeWindow = getActiveWindow();\n\t\tif (!WebFileSystemAccess.supported(activeWindow)) {\n\t\t\treturn this.showUnsupportedBrowserWarning('save');\n\t\t}\n\n\t\tlet fileHandle: FileSystemHandle | undefined = undefined;\n\t\tconst startIn = Iterable.first(this.fileSystemProvider.directories);\n\n\t\ttry {\n\t\t\tfileHandle = await activeWindow.showSaveFilePicker({ types: this.getFilePickerTypes(options.filters), ...{ suggestedName: basename(defaultUri), startIn } });\n\t\t} catch (error) {\n\t\t\treturn; // `showSaveFilePicker` will throw an error when the user cancels\n\t\t}\n\n\t\tif (!WebFileSystemAccess.isFileSystemFileHandle(fileHandle)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn this.fileSystemProvider.registerFileHandle(fileHandle);\n\t}\n\n\tprivate getFilePickerTypes(filters?: FileFilter[]): FilePickerAcceptType[] | undefined {\n\t\treturn filters?.filter(filter => {\n\t\t\treturn !((filter.extensions.length === 1) && ((filter.extensions[0] === '*') || filter.extensions[0] === ''));\n\t\t}).map(filter => {\n\t\t\tconst accept: Record<string, string[]> = {};\n\t\t\tconst extensions = filter.extensions.filter(ext => (ext.indexOf('-') < 0) && (ext.indexOf('*') < 0) && (ext.indexOf('_') < 0));\n\t\t\taccept[getMediaOrTextMime(`fileName.${filter.extensions[0]}`) ?? 'text/plain'] = extensions.map(ext => ext.startsWith('.') ? ext : `.${ext}`);\n\t\t\treturn {\n\t\t\t\tdescription: filter.name,\n\t\t\t\taccept\n\t\t\t};\n\t\t});\n\t}\n\n\tasync showSaveDialog(options: ISaveDialogOptions): Promise<URI | undefined> {\n\t\tconst schema = this.getFileSystemSchema(options);\n\n\t\tif (this.shouldUseSimplified(schema)) {\n\t\t\treturn super.showSaveDialogSimplified(schema, options);\n\t\t}\n\n\t\tconst activeWindow = getActiveWindow();\n\t\tif (!WebFileSystemAccess.supported(activeWindow)) {\n\t\t\treturn this.showUnsupportedBrowserWarning('save');\n\t\t}\n\n\t\tlet fileHandle: FileSystemHandle | undefined = undefined;\n\t\tconst startIn = Iterable.first(this.fileSystemProvider.directories);\n\n\t\ttry {\n\t\t\tfileHandle = await activeWindow.showSaveFilePicker({ types: this.getFilePickerTypes(options.filters), ...options.defaultUri ? { suggestedName: basename(options.defaultUri) } : undefined, ...{ startIn } });\n\t\t} catch (error) {\n\t\t\treturn undefined; // `showSaveFilePicker` will throw an error when the user cancels\n\t\t}\n\n\t\tif (!WebFileSystemAccess.isFileSystemFileHandle(fileHandle)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn this.fileSystemProvider.registerFileHandle(fileHandle);\n\t}\n\n\tasync showOpenDialog(options: IOpenDialogOptions): Promise<URI[] | undefined> {\n\t\tconst schema = this.getFileSystemSchema(options);\n\n\t\tif (this.shouldUseSimplified(schema)) {\n\t\t\treturn super.showOpenDialogSimplified(schema, options);\n\t\t}\n\n\t\tconst activeWindow = getActiveWindow();\n\t\tif (!WebFileSystemAccess.supported(activeWindow)) {\n\t\t\treturn this.showUnsupportedBrowserWarning('open');\n\t\t}\n\n\t\tlet uri: URI | undefined;\n\t\tconst startIn = Iterable.first(this.fileSystemProvider.directories) ?? 'documents';\n\n\t\ttry {\n\t\t\tif (options.canSelectFiles) {\n\t\t\t\tconst handle = await activeWindow.showOpenFilePicker({ multiple: false, types: this.getFilePickerTypes(options.filters), ...{ startIn } });\n\t\t\t\tif (handle.length === 1 && WebFileSystemAccess.isFileSystemFileHandle(handle[0])) {\n\t\t\t\t\turi = await this.fileSystemProvider.registerFileHandle(handle[0]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst handle = await activeWindow.showDirectoryPicker({ ...{ startIn } });\n\t\t\t\turi = await this.fileSystemProvider.registerDirectoryHandle(handle);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t// ignore - `showOpenFilePicker` / `showDirectoryPicker` will throw an error when the user cancels\n\t\t}\n\n\t\treturn uri ? [uri] : undefined;\n\t}\n\n\tprivate async showUnsupportedBrowserWarning(context: 'save' | 'open'): Promise<undefined> {\n\n\t\t// When saving, try to just download the contents\n\t\t// of the active text editor if any as a workaround\n\t\tif (context === 'save') {\n\t\t\tconst activeCodeEditor = this.codeEditorService.getActiveCodeEditor();\n\t\t\tif (!(activeCodeEditor instanceof EmbeddedCodeEditorWidget)) {\n\t\t\t\tconst activeTextModel = activeCodeEditor?.getModel();\n\t\t\t\tif (activeTextModel) {\n\t\t\t\t\ttriggerDownload(VSBuffer.fromString(activeTextModel.getValue()).buffer, basename(activeTextModel.uri));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Otherwise inform the user about options\n\n\t\tconst buttons: IPromptButton<void>[] = [\n\t\t\t{\n\t\t\t\tlabel: localize({ key: 'openRemote', comment: ['&& denotes a mnemonic'] }, \"&&Open Remote...\"),\n\t\t\t\trun: async () => { await this.commandService.executeCommand('workbench.action.remote.showMenu'); }\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: localize({ key: 'learnMore', comment: ['&& denotes a mnemonic'] }, \"&&Learn More\"),\n\t\t\t\trun: async () => { await this.openerService.open('https://aka.ms/VSCodeWebLocalFileSystemAccess'); }\n\t\t\t}\n\t\t];\n\t\tif (context === 'open') {\n\t\t\tbuttons.push({\n\t\t\t\tlabel: localize({ key: 'openFiles', comment: ['&& denotes a mnemonic'] }, \"Open &&Files...\"),\n\t\t\t\trun: async () => {\n\t\t\t\t\tconst files = await triggerUpload();\n\t\t\t\t\tif (files) {\n\t\t\t\t\t\tconst filesData = (await this.instantiationService.invokeFunction(accessor => extractFileListData(accessor, files))).filter(fileData => !fileData.isDirectory);\n\t\t\t\t\t\tif (filesData.length > 0) {\n\t\t\t\t\t\t\tthis.editorService.openEditors(filesData.map(fileData => {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tresource: fileData.resource,\n\t\t\t\t\t\t\t\t\tcontents: fileData.contents?.toString(),\n\t\t\t\t\t\t\t\t\toptions: { pinned: true }\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tawait this.dialogService.prompt({\n\t\t\ttype: Severity.Warning,\n\t\t\tmessage: localize('unsupportedBrowserMessage', \"Opening Local Folders is Unsupported\"),\n\t\t\tdetail: localize('unsupportedBrowserDetail', \"Your browser doesn't support opening local folders.\\nYou can either open single files or open a remote repository.\"),\n\t\t\tbuttons\n\t\t});\n\n\t\treturn undefined;\n\t}\n\n\tprivate shouldUseSimplified(scheme: string): boolean {\n\t\treturn ![Schemas.file, Schemas.vscodeUserData, Schemas.tmp].includes(scheme);\n\t}\n}\n\nregisterSingleton(IFileDialogService, FileDialogService, InstantiationType.Delayed);\n"],
  "mappings": "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",
  "names": []
}
