var f=Object.defineProperty;var x=Object.getOwnPropertyDescriptor;var t=(d,e,i,s)=>{for(var a=s>1?void 0:s?x(e,i):e,u=d.length-1,p;u>=0;u--)(p=d[u])&&(a=(s?p(e,i,a):p(a))||a);return s&&a&&f(e,i,a),a};import{memoize as n}from"../../../../base/common/decorators.js";import{onUnexpectedError as h}from"../../../../base/common/errors.js";import{parseLineAndColumnAware as D}from"../../../../base/common/extpath.js";import{Schemas as I}from"../../../../base/common/network.js";import{joinPath as r}from"../../../../base/common/resources.js";import{isUndefined as c}from"../../../../base/common/types.js";import{URI as l}from"../../../../base/common/uri.js";import"../../../../platform/editor/common/editor.js";import{IEnvironmentService as b}from"../../../../platform/environment/common/environment.js";import{EXTENSION_IDENTIFIER_WITH_LOG_REGEX as g}from"../../../../platform/environment/common/environmentService.js";import{refineServiceDecorator as y}from"../../../../platform/instantiation/common/instantiation.js";import{LogLevelToString as m}from"../../../../platform/log/common/log.js";import"../../../../platform/product/common/productService.js";import"../../../../platform/window/common/window.js";import"../../../browser/web.api.js";import"../common/environmentService.js";const V=y(b);class o{constructor(e,i,s,a){this.workspaceId=e;this.logsHome=i;this.options=s;this.productService=a;if(s.workspaceProvider&&Array.isArray(s.workspaceProvider.payload))try{this.payload=new Map(s.workspaceProvider.payload)}catch(u){h(u)}}get remoteAuthority(){return this.options.remoteAuthority}get expectsResolverExtension(){return!!this.options.remoteAuthority?.includes("+")&&!this.options.webSocketFactory}get isBuilt(){return!!this.productService.commit}get logLevel(){const e=this.payload?.get("logLevel");return e?e.split(",").find(i=>!g.test(i)):this.options.developmentOptions?.logLevel!==void 0?m(this.options.developmentOptions?.logLevel):void 0}get extensionLogLevel(){const e=this.payload?.get("logLevel");if(e){const i=[];for(const s of e.split(",")){const a=g.exec(s);a&&a[1]&&a[2]&&i.push([a[1],a[2]])}return i.length?i:void 0}return this.options.developmentOptions?.extensionLogLevel!==void 0?this.options.developmentOptions?.extensionLogLevel.map(([i,s])=>[i,m(s)]):void 0}get profDurationMarkers(){const e=this.payload?.get("profDurationMarkers");if(e){const i=[];for(const s of e.split(","))i.push(s);return i.length===2?i:void 0}}get windowLogsPath(){return this.logsHome}get logFile(){return r(this.windowLogsPath,"window.log")}get userRoamingDataHome(){return l.file("/User").with({scheme:I.vscodeUserData})}get argvResource(){return r(this.userRoamingDataHome,"argv.json")}get cacheHome(){return r(this.userRoamingDataHome,"caches")}get workspaceStorageHome(){return r(this.userRoamingDataHome,"workspaceStorage")}get localHistoryHome(){return r(this.userRoamingDataHome,"History")}get stateResource(){return r(this.userRoamingDataHome,"State","storage.json")}get userDataSyncHome(){return r(this.userRoamingDataHome,"sync",this.workspaceId)}get sync(){}get keyboardLayoutResource(){return r(this.userRoamingDataHome,"keyboardLayout.json")}get untitledWorkspacesHome(){return r(this.userRoamingDataHome,"Workspaces")}get serviceMachineIdResource(){return r(this.userRoamingDataHome,"machineid")}get extHostLogsPath(){return r(this.logsHome,"exthost")}get extHostTelemetryLogFile(){return r(this.extHostLogsPath,"extensionTelemetry.log")}extensionHostDebugEnvironment=void 0;get debugExtensionHost(){return this.extensionHostDebugEnvironment||(this.extensionHostDebugEnvironment=this.resolveExtensionHostDebugEnvironment()),this.extensionHostDebugEnvironment.params}get isExtensionDevelopment(){return this.extensionHostDebugEnvironment||(this.extensionHostDebugEnvironment=this.resolveExtensionHostDebugEnvironment()),this.extensionHostDebugEnvironment.isExtensionDevelopment}get extensionDevelopmentLocationURI(){return this.extensionHostDebugEnvironment||(this.extensionHostDebugEnvironment=this.resolveExtensionHostDebugEnvironment()),this.extensionHostDebugEnvironment.extensionDevelopmentLocationURI}get extensionDevelopmentLocationKind(){return this.extensionHostDebugEnvironment||(this.extensionHostDebugEnvironment=this.resolveExtensionHostDebugEnvironment()),this.extensionHostDebugEnvironment.extensionDevelopmentKind}get extensionTestsLocationURI(){return this.extensionHostDebugEnvironment||(this.extensionHostDebugEnvironment=this.resolveExtensionHostDebugEnvironment()),this.extensionHostDebugEnvironment.extensionTestsLocationURI}get extensionEnabledProposedApi(){return this.extensionHostDebugEnvironment||(this.extensionHostDebugEnvironment=this.resolveExtensionHostDebugEnvironment()),this.extensionHostDebugEnvironment.extensionEnabledProposedApi}get debugRenderer(){return this.extensionHostDebugEnvironment||(this.extensionHostDebugEnvironment=this.resolveExtensionHostDebugEnvironment()),this.extensionHostDebugEnvironment.debugRenderer}get enableSmokeTestDriver(){return this.options.developmentOptions?.enableSmokeTestDriver}get disableExtensions(){return this.payload?.get("disableExtensions")==="true"}get enableExtensions(){return this.options.enabledExtensions}get webviewExternalEndpoint(){const e=this.options.webviewEndpoint||this.productService.webviewContentExternalBaseUrlTemplate||"https://{{uuid}}.vscode-cdn.net/{{quality}}/{{commit}}/out/vs/workbench/contrib/webview/browser/pre/",i=this.payload?.get("webviewExternalEndpointCommit");return e.replace("{{commit}}",i??this.productService.commit??"ef65ac1ba57f57f2a3961bfe94aa20481caca4c6").replace("{{quality}}",(i?"insider":this.productService.quality)??"insider")}get extensionTelemetryLogResource(){return r(this.logsHome,"extensionTelemetry.log")}get disableTelemetry(){return!1}get verbose(){return this.payload?.get("verbose")==="true"}get logExtensionHostCommunication(){return this.payload?.get("logExtensionHostCommunication")==="true"}get skipReleaseNotes(){return this.payload?.get("skipReleaseNotes")==="true"}get skipWelcome(){return this.payload?.get("skipWelcome")==="true"}get disableWorkspaceTrust(){return!this.options.enableWorkspaceTrust}get profile(){return this.payload?.get("profile")}editSessionId=this.options.editSessionId;payload;resolveExtensionHostDebugEnvironment(){const e={params:{port:null,break:!1},debugRenderer:!1,isExtensionDevelopment:!1,extensionDevelopmentLocationURI:void 0,extensionDevelopmentKind:void 0};if(this.payload)for(const[s,a]of this.payload)switch(s){case"extensionDevelopmentPath":e.extensionDevelopmentLocationURI||(e.extensionDevelopmentLocationURI=[]),e.extensionDevelopmentLocationURI.push(l.parse(a)),e.isExtensionDevelopment=!0;break;case"extensionDevelopmentKind":e.extensionDevelopmentKind=[a];break;case"extensionTestsPath":e.extensionTestsLocationURI=l.parse(a);break;case"debugRenderer":e.debugRenderer=a==="true";break;case"debugId":e.params.debugId=a;break;case"inspect-brk-extensions":e.params.port=parseInt(a),e.params.break=!0;break;case"inspect-extensions":e.params.port=parseInt(a);break;case"enableProposedApi":e.extensionEnabledProposedApi=[];break}const i=this.options.developmentOptions;return i&&!e.isExtensionDevelopment&&(i.extensions?.length&&(e.extensionDevelopmentLocationURI=i.extensions.map(s=>l.revive(s)),e.isExtensionDevelopment=!0),i.extensionTestsPath&&(e.extensionTestsLocationURI=l.revive(i.extensionTestsPath))),e}get filesToOpenOrCreate(){if(this.payload){const e=this.payload.get("openFile");if(e){const i=l.parse(e);if(this.payload.has("gotoLineMode")){const s=D(i.path);return[{fileUri:i.with({path:s.path}),options:{selection:c(s.line)?void 0:{startLineNumber:s.line,startColumn:s.column||1}}}]}return[{fileUri:i}]}}}get filesToDiff(){if(this.payload){const e=this.payload.get("diffFilePrimary"),i=this.payload.get("diffFileSecondary");if(e&&i)return[{fileUri:l.parse(i)},{fileUri:l.parse(e)}]}}get filesToMerge(){if(this.payload){const e=this.payload.get("mergeFile1"),i=this.payload.get("mergeFile2"),s=this.payload.get("mergeFileBase"),a=this.payload.get("mergeFileResult");if(e&&i&&s&&a)return[{fileUri:l.parse(e)},{fileUri:l.parse(i)},{fileUri:l.parse(s)},{fileUri:l.parse(a)}]}}}t([n],o.prototype,"remoteAuthority",1),t([n],o.prototype,"expectsResolverExtension",1),t([n],o.prototype,"isBuilt",1),t([n],o.prototype,"logLevel",1),t([n],o.prototype,"windowLogsPath",1),t([n],o.prototype,"logFile",1),t([n],o.prototype,"userRoamingDataHome",1),t([n],o.prototype,"argvResource",1),t([n],o.prototype,"cacheHome",1),t([n],o.prototype,"workspaceStorageHome",1),t([n],o.prototype,"localHistoryHome",1),t([n],o.prototype,"stateResource",1),t([n],o.prototype,"userDataSyncHome",1),t([n],o.prototype,"sync",1),t([n],o.prototype,"keyboardLayoutResource",1),t([n],o.prototype,"untitledWorkspacesHome",1),t([n],o.prototype,"serviceMachineIdResource",1),t([n],o.prototype,"extHostLogsPath",1),t([n],o.prototype,"extHostTelemetryLogFile",1),t([n],o.prototype,"debugExtensionHost",1),t([n],o.prototype,"isExtensionDevelopment",1),t([n],o.prototype,"extensionDevelopmentLocationURI",1),t([n],o.prototype,"extensionDevelopmentLocationKind",1),t([n],o.prototype,"extensionTestsLocationURI",1),t([n],o.prototype,"extensionEnabledProposedApi",1),t([n],o.prototype,"debugRenderer",1),t([n],o.prototype,"enableSmokeTestDriver",1),t([n],o.prototype,"disableExtensions",1),t([n],o.prototype,"enableExtensions",1),t([n],o.prototype,"webviewExternalEndpoint",1),t([n],o.prototype,"extensionTelemetryLogResource",1),t([n],o.prototype,"disableTelemetry",1),t([n],o.prototype,"verbose",1),t([n],o.prototype,"logExtensionHostCommunication",1),t([n],o.prototype,"skipReleaseNotes",1),t([n],o.prototype,"skipWelcome",1),t([n],o.prototype,"disableWorkspaceTrust",1),t([n],o.prototype,"profile",1),t([n],o.prototype,"filesToOpenOrCreate",1),t([n],o.prototype,"filesToDiff",1),t([n],o.prototype,"filesToMerge",1);export{o as BrowserWorkbenchEnvironmentService,V as IBrowserWorkbenchEnvironmentService};
