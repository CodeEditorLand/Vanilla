{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/environment/browser/environmentService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { memoize } from \"../../../../base/common/decorators.js\";\nimport { onUnexpectedError } from \"../../../../base/common/errors.js\";\nimport { parseLineAndColumnAware } from \"../../../../base/common/extpath.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport { joinPath } from \"../../../../base/common/resources.js\";\nimport { isUndefined } from \"../../../../base/common/types.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport type { ITextEditorOptions } from \"../../../../platform/editor/common/editor.js\";\nimport {\n\ttype ExtensionKind,\n\tIEnvironmentService,\n\ttype IExtensionHostDebugParams,\n} from \"../../../../platform/environment/common/environment.js\";\nimport { EXTENSION_IDENTIFIER_WITH_LOG_REGEX } from \"../../../../platform/environment/common/environmentService.js\";\nimport { refineServiceDecorator } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { LogLevelToString } from \"../../../../platform/log/common/log.js\";\nimport type { IProductService } from \"../../../../platform/product/common/productService.js\";\nimport type { IPath } from \"../../../../platform/window/common/window.js\";\nimport type { IWorkbenchConstructionOptions } from \"../../../browser/web.api.js\";\nimport type { IWorkbenchEnvironmentService } from \"../common/environmentService.js\";\n\nexport const IBrowserWorkbenchEnvironmentService = refineServiceDecorator<\n\tIEnvironmentService,\n\tIBrowserWorkbenchEnvironmentService\n>(IEnvironmentService);\n\n/**\n * A subclass of the `IWorkbenchEnvironmentService` to be used only environments\n * where the web API is available (browsers, Electron).\n */\nexport interface IBrowserWorkbenchEnvironmentService\n\textends IWorkbenchEnvironmentService {\n\t/**\n\t * Options used to configure the workbench.\n\t */\n\treadonly options?: IWorkbenchConstructionOptions;\n\n\t/**\n\t * Gets whether a resolver extension is expected for the environment.\n\t */\n\treadonly expectsResolverExtension: boolean;\n}\n\nexport class BrowserWorkbenchEnvironmentService\n\timplements IBrowserWorkbenchEnvironmentService\n{\n\tdeclare readonly _serviceBrand: undefined;\n\n\t@memoize\n\tget remoteAuthority(): string | undefined {\n\t\treturn this.options.remoteAuthority;\n\t}\n\n\t@memoize\n\tget expectsResolverExtension(): boolean {\n\t\treturn (\n\t\t\t!!this.options.remoteAuthority?.includes(\"+\") &&\n\t\t\t!this.options.webSocketFactory\n\t\t);\n\t}\n\n\t@memoize\n\tget isBuilt(): boolean {\n\t\treturn !!this.productService.commit;\n\t}\n\n\t@memoize\n\tget logLevel(): string | undefined {\n\t\tconst logLevelFromPayload = this.payload?.get(\"logLevel\");\n\t\tif (logLevelFromPayload) {\n\t\t\treturn logLevelFromPayload\n\t\t\t\t.split(\",\")\n\t\t\t\t.find(\n\t\t\t\t\t(entry) => !EXTENSION_IDENTIFIER_WITH_LOG_REGEX.test(entry),\n\t\t\t\t);\n\t\t}\n\n\t\treturn this.options.developmentOptions?.logLevel !== undefined\n\t\t\t? LogLevelToString(this.options.developmentOptions?.logLevel)\n\t\t\t: undefined;\n\t}\n\n\tget extensionLogLevel(): [string, string][] | undefined {\n\t\tconst logLevelFromPayload = this.payload?.get(\"logLevel\");\n\t\tif (logLevelFromPayload) {\n\t\t\tconst result: [string, string][] = [];\n\t\t\tfor (const entry of logLevelFromPayload.split(\",\")) {\n\t\t\t\tconst matches = EXTENSION_IDENTIFIER_WITH_LOG_REGEX.exec(entry);\n\t\t\t\tif (matches && matches[1] && matches[2]) {\n\t\t\t\t\tresult.push([matches[1], matches[2]]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result.length ? result : undefined;\n\t\t}\n\n\t\treturn this.options.developmentOptions?.extensionLogLevel !== undefined\n\t\t\t? this.options.developmentOptions?.extensionLogLevel.map(\n\t\t\t\t\t([extension, logLevel]) => [\n\t\t\t\t\t\textension,\n\t\t\t\t\t\tLogLevelToString(logLevel),\n\t\t\t\t\t],\n\t\t\t\t)\n\t\t\t: undefined;\n\t}\n\n\tget profDurationMarkers(): string[] | undefined {\n\t\tconst profDurationMarkersFromPayload = this.payload?.get(\n\t\t\t\"profDurationMarkers\",\n\t\t);\n\t\tif (profDurationMarkersFromPayload) {\n\t\t\tconst result: string[] = [];\n\t\t\tfor (const entry of profDurationMarkersFromPayload.split(\",\")) {\n\t\t\t\tresult.push(entry);\n\t\t\t}\n\n\t\t\treturn result.length === 2 ? result : undefined;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\t@memoize\n\tget windowLogsPath(): URI {\n\t\treturn this.logsHome;\n\t}\n\n\t@memoize\n\tget logFile(): URI {\n\t\treturn joinPath(this.windowLogsPath, \"window.log\");\n\t}\n\n\t@memoize\n\tget userRoamingDataHome(): URI {\n\t\treturn URI.file(\"/User\").with({ scheme: Schemas.vscodeUserData });\n\t}\n\n\t@memoize\n\tget argvResource(): URI {\n\t\treturn joinPath(this.userRoamingDataHome, \"argv.json\");\n\t}\n\n\t@memoize\n\tget cacheHome(): URI {\n\t\treturn joinPath(this.userRoamingDataHome, \"caches\");\n\t}\n\n\t@memoize\n\tget workspaceStorageHome(): URI {\n\t\treturn joinPath(this.userRoamingDataHome, \"workspaceStorage\");\n\t}\n\n\t@memoize\n\tget localHistoryHome(): URI {\n\t\treturn joinPath(this.userRoamingDataHome, \"History\");\n\t}\n\n\t@memoize\n\tget stateResource(): URI {\n\t\treturn joinPath(this.userRoamingDataHome, \"State\", \"storage.json\");\n\t}\n\n\t/**\n\t * In Web every workspace can potentially have scoped user-data\n\t * and/or extensions and if Sync state is shared then it can make\n\t * Sync error prone - say removing extensions from another workspace.\n\t * Hence scope Sync state per workspace. Sync scoped to a workspace\n\t * is capable of handling opening same workspace in multiple windows.\n\t */\n\t@memoize\n\tget userDataSyncHome(): URI {\n\t\treturn joinPath(this.userRoamingDataHome, \"sync\", this.workspaceId);\n\t}\n\n\t@memoize\n\tget sync(): \"on\" | \"off\" | undefined {\n\t\treturn undefined;\n\t}\n\n\t@memoize\n\tget keyboardLayoutResource(): URI {\n\t\treturn joinPath(this.userRoamingDataHome, \"keyboardLayout.json\");\n\t}\n\n\t@memoize\n\tget untitledWorkspacesHome(): URI {\n\t\treturn joinPath(this.userRoamingDataHome, \"Workspaces\");\n\t}\n\n\t@memoize\n\tget serviceMachineIdResource(): URI {\n\t\treturn joinPath(this.userRoamingDataHome, \"machineid\");\n\t}\n\n\t@memoize\n\tget extHostLogsPath(): URI {\n\t\treturn joinPath(this.logsHome, \"exthost\");\n\t}\n\n\t@memoize\n\tget extHostTelemetryLogFile(): URI {\n\t\treturn joinPath(this.extHostLogsPath, \"extensionTelemetry.log\");\n\t}\n\n\tprivate extensionHostDebugEnvironment:\n\t\t| IExtensionHostDebugEnvironment\n\t\t| undefined = undefined;\n\n\t@memoize\n\tget debugExtensionHost(): IExtensionHostDebugParams {\n\t\tif (!this.extensionHostDebugEnvironment) {\n\t\t\tthis.extensionHostDebugEnvironment =\n\t\t\t\tthis.resolveExtensionHostDebugEnvironment();\n\t\t}\n\n\t\treturn this.extensionHostDebugEnvironment.params;\n\t}\n\n\t@memoize\n\tget isExtensionDevelopment(): boolean {\n\t\tif (!this.extensionHostDebugEnvironment) {\n\t\t\tthis.extensionHostDebugEnvironment =\n\t\t\t\tthis.resolveExtensionHostDebugEnvironment();\n\t\t}\n\n\t\treturn this.extensionHostDebugEnvironment.isExtensionDevelopment;\n\t}\n\n\t@memoize\n\tget extensionDevelopmentLocationURI(): URI[] | undefined {\n\t\tif (!this.extensionHostDebugEnvironment) {\n\t\t\tthis.extensionHostDebugEnvironment =\n\t\t\t\tthis.resolveExtensionHostDebugEnvironment();\n\t\t}\n\n\t\treturn this.extensionHostDebugEnvironment\n\t\t\t.extensionDevelopmentLocationURI;\n\t}\n\n\t@memoize\n\tget extensionDevelopmentLocationKind(): ExtensionKind[] | undefined {\n\t\tif (!this.extensionHostDebugEnvironment) {\n\t\t\tthis.extensionHostDebugEnvironment =\n\t\t\t\tthis.resolveExtensionHostDebugEnvironment();\n\t\t}\n\n\t\treturn this.extensionHostDebugEnvironment.extensionDevelopmentKind;\n\t}\n\n\t@memoize\n\tget extensionTestsLocationURI(): URI | undefined {\n\t\tif (!this.extensionHostDebugEnvironment) {\n\t\t\tthis.extensionHostDebugEnvironment =\n\t\t\t\tthis.resolveExtensionHostDebugEnvironment();\n\t\t}\n\n\t\treturn this.extensionHostDebugEnvironment.extensionTestsLocationURI;\n\t}\n\n\t@memoize\n\tget extensionEnabledProposedApi(): string[] | undefined {\n\t\tif (!this.extensionHostDebugEnvironment) {\n\t\t\tthis.extensionHostDebugEnvironment =\n\t\t\t\tthis.resolveExtensionHostDebugEnvironment();\n\t\t}\n\n\t\treturn this.extensionHostDebugEnvironment.extensionEnabledProposedApi;\n\t}\n\n\t@memoize\n\tget debugRenderer(): boolean {\n\t\tif (!this.extensionHostDebugEnvironment) {\n\t\t\tthis.extensionHostDebugEnvironment =\n\t\t\t\tthis.resolveExtensionHostDebugEnvironment();\n\t\t}\n\n\t\treturn this.extensionHostDebugEnvironment.debugRenderer;\n\t}\n\n\t@memoize\n\tget enableSmokeTestDriver() {\n\t\treturn this.options.developmentOptions?.enableSmokeTestDriver;\n\t}\n\n\t@memoize\n\tget disableExtensions() {\n\t\treturn this.payload?.get(\"disableExtensions\") === \"true\";\n\t}\n\n\t@memoize\n\tget enableExtensions() {\n\t\treturn this.options.enabledExtensions;\n\t}\n\n\t@memoize\n\tget webviewExternalEndpoint(): string {\n\t\tconst endpoint =\n\t\t\tthis.options.webviewEndpoint ||\n\t\t\tthis.productService.webviewContentExternalBaseUrlTemplate ||\n\t\t\t\"https://{{uuid}}.vscode-cdn.net/{{quality}}/{{commit}}/out/vs/workbench/contrib/webview/browser/pre/\";\n\n\t\tconst webviewExternalEndpointCommit = this.payload?.get(\n\t\t\t\"webviewExternalEndpointCommit\",\n\t\t);\n\t\treturn endpoint\n\t\t\t.replace(\n\t\t\t\t\"{{commit}}\",\n\t\t\t\twebviewExternalEndpointCommit ??\n\t\t\t\t\tthis.productService.commit ??\n\t\t\t\t\t\"ef65ac1ba57f57f2a3961bfe94aa20481caca4c6\",\n\t\t\t)\n\t\t\t.replace(\n\t\t\t\t\"{{quality}}\",\n\t\t\t\t(webviewExternalEndpointCommit\n\t\t\t\t\t? \"insider\"\n\t\t\t\t\t: this.productService.quality) ?? \"insider\",\n\t\t\t);\n\t}\n\n\t@memoize\n\tget extensionTelemetryLogResource(): URI {\n\t\treturn joinPath(this.logsHome, \"extensionTelemetry.log\");\n\t}\n\n\t@memoize\n\tget disableTelemetry(): boolean {\n\t\treturn false;\n\t}\n\n\t@memoize\n\tget verbose(): boolean {\n\t\treturn this.payload?.get(\"verbose\") === \"true\";\n\t}\n\n\t@memoize\n\tget logExtensionHostCommunication(): boolean {\n\t\treturn this.payload?.get(\"logExtensionHostCommunication\") === \"true\";\n\t}\n\n\t@memoize\n\tget skipReleaseNotes(): boolean {\n\t\treturn this.payload?.get(\"skipReleaseNotes\") === \"true\";\n\t}\n\n\t@memoize\n\tget skipWelcome(): boolean {\n\t\treturn this.payload?.get(\"skipWelcome\") === \"true\";\n\t}\n\n\t@memoize\n\tget disableWorkspaceTrust(): boolean {\n\t\treturn !this.options.enableWorkspaceTrust;\n\t}\n\n\t@memoize\n\tget profile(): string | undefined {\n\t\treturn this.payload?.get(\"profile\");\n\t}\n\n\teditSessionId: string | undefined = this.options.editSessionId;\n\n\tprivate payload: Map<string, string> | undefined;\n\n\tconstructor(\n\t\tprivate readonly workspaceId: string,\n\t\treadonly logsHome: URI,\n\t\treadonly options: IWorkbenchConstructionOptions,\n\t\tprivate readonly productService: IProductService,\n\t) {\n\t\tif (\n\t\t\toptions.workspaceProvider &&\n\t\t\tArray.isArray(options.workspaceProvider.payload)\n\t\t) {\n\t\t\ttry {\n\t\t\t\tthis.payload = new Map(options.workspaceProvider.payload);\n\t\t\t} catch (error) {\n\t\t\t\tonUnexpectedError(error); // possible invalid payload for map\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate resolveExtensionHostDebugEnvironment(): IExtensionHostDebugEnvironment {\n\t\tconst extensionHostDebugEnvironment: IExtensionHostDebugEnvironment = {\n\t\t\tparams: {\n\t\t\t\tport: null,\n\t\t\t\tbreak: false,\n\t\t\t},\n\t\t\tdebugRenderer: false,\n\t\t\tisExtensionDevelopment: false,\n\t\t\textensionDevelopmentLocationURI: undefined,\n\t\t\textensionDevelopmentKind: undefined,\n\t\t};\n\n\t\t// Fill in selected extra environmental properties\n\t\tif (this.payload) {\n\t\t\tfor (const [key, value] of this.payload) {\n\t\t\t\tswitch (key) {\n\t\t\t\t\tcase \"extensionDevelopmentPath\":\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!extensionHostDebugEnvironment.extensionDevelopmentLocationURI\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\textensionHostDebugEnvironment.extensionDevelopmentLocationURI =\n\t\t\t\t\t\t\t\t[];\n\t\t\t\t\t\t}\n\t\t\t\t\t\textensionHostDebugEnvironment.extensionDevelopmentLocationURI.push(\n\t\t\t\t\t\t\tURI.parse(value),\n\t\t\t\t\t\t);\n\t\t\t\t\t\textensionHostDebugEnvironment.isExtensionDevelopment = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"extensionDevelopmentKind\":\n\t\t\t\t\t\textensionHostDebugEnvironment.extensionDevelopmentKind =\n\t\t\t\t\t\t\t[<ExtensionKind>value];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"extensionTestsPath\":\n\t\t\t\t\t\textensionHostDebugEnvironment.extensionTestsLocationURI =\n\t\t\t\t\t\t\tURI.parse(value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"debugRenderer\":\n\t\t\t\t\t\textensionHostDebugEnvironment.debugRenderer =\n\t\t\t\t\t\t\tvalue === \"true\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"debugId\":\n\t\t\t\t\t\textensionHostDebugEnvironment.params.debugId = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"inspect-brk-extensions\":\n\t\t\t\t\t\textensionHostDebugEnvironment.params.port =\n\t\t\t\t\t\t\tNumber.parseInt(value);\n\t\t\t\t\t\textensionHostDebugEnvironment.params.break = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"inspect-extensions\":\n\t\t\t\t\t\textensionHostDebugEnvironment.params.port =\n\t\t\t\t\t\t\tNumber.parseInt(value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"enableProposedApi\":\n\t\t\t\t\t\textensionHostDebugEnvironment.extensionEnabledProposedApi =\n\t\t\t\t\t\t\t[];\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst developmentOptions = this.options.developmentOptions;\n\t\tif (\n\t\t\tdevelopmentOptions &&\n\t\t\t!extensionHostDebugEnvironment.isExtensionDevelopment\n\t\t) {\n\t\t\tif (developmentOptions.extensions?.length) {\n\t\t\t\textensionHostDebugEnvironment.extensionDevelopmentLocationURI =\n\t\t\t\t\tdevelopmentOptions.extensions.map((e) => URI.revive(e));\n\t\t\t\textensionHostDebugEnvironment.isExtensionDevelopment = true;\n\t\t\t}\n\n\t\t\tif (developmentOptions.extensionTestsPath) {\n\t\t\t\textensionHostDebugEnvironment.extensionTestsLocationURI =\n\t\t\t\t\tURI.revive(developmentOptions.extensionTestsPath);\n\t\t\t}\n\t\t}\n\n\t\treturn extensionHostDebugEnvironment;\n\t}\n\n\t@memoize\n\tget filesToOpenOrCreate(): IPath<ITextEditorOptions>[] | undefined {\n\t\tif (this.payload) {\n\t\t\tconst fileToOpen = this.payload.get(\"openFile\");\n\t\t\tif (fileToOpen) {\n\t\t\t\tconst fileUri = URI.parse(fileToOpen);\n\n\t\t\t\t// Support: --goto parameter to open on line/col\n\t\t\t\tif (this.payload.has(\"gotoLineMode\")) {\n\t\t\t\t\tconst pathColumnAware = parseLineAndColumnAware(\n\t\t\t\t\t\tfileUri.path,\n\t\t\t\t\t);\n\n\t\t\t\t\treturn [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfileUri: fileUri.with({\n\t\t\t\t\t\t\t\tpath: pathColumnAware.path,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\tselection: isUndefined(pathColumnAware.line)\n\t\t\t\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\tstartLineNumber:\n\t\t\t\t\t\t\t\t\t\t\t\tpathColumnAware.line,\n\t\t\t\t\t\t\t\t\t\t\tstartColumn:\n\t\t\t\t\t\t\t\t\t\t\t\tpathColumnAware.column || 1,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [{ fileUri }];\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\t@memoize\n\tget filesToDiff(): IPath[] | undefined {\n\t\tif (this.payload) {\n\t\t\tconst fileToDiffPrimary = this.payload.get(\"diffFilePrimary\");\n\t\t\tconst fileToDiffSecondary = this.payload.get(\"diffFileSecondary\");\n\t\t\tif (fileToDiffPrimary && fileToDiffSecondary) {\n\t\t\t\treturn [\n\t\t\t\t\t{ fileUri: URI.parse(fileToDiffSecondary) },\n\t\t\t\t\t{ fileUri: URI.parse(fileToDiffPrimary) },\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\t@memoize\n\tget filesToMerge(): IPath[] | undefined {\n\t\tif (this.payload) {\n\t\t\tconst fileToMerge1 = this.payload.get(\"mergeFile1\");\n\t\t\tconst fileToMerge2 = this.payload.get(\"mergeFile2\");\n\t\t\tconst fileToMergeBase = this.payload.get(\"mergeFileBase\");\n\t\t\tconst fileToMergeResult = this.payload.get(\"mergeFileResult\");\n\t\t\tif (\n\t\t\t\tfileToMerge1 &&\n\t\t\t\tfileToMerge2 &&\n\t\t\t\tfileToMergeBase &&\n\t\t\t\tfileToMergeResult\n\t\t\t) {\n\t\t\t\treturn [\n\t\t\t\t\t{ fileUri: URI.parse(fileToMerge1) },\n\t\t\t\t\t{ fileUri: URI.parse(fileToMerge2) },\n\t\t\t\t\t{ fileUri: URI.parse(fileToMergeBase) },\n\t\t\t\t\t{ fileUri: URI.parse(fileToMergeResult) },\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n}\n\ninterface IExtensionHostDebugEnvironment {\n\tparams: IExtensionHostDebugParams;\n\tdebugRenderer: boolean;\n\tisExtensionDevelopment: boolean;\n\textensionDevelopmentLocationURI?: URI[];\n\textensionDevelopmentKind?: ExtensionKind[];\n\textensionTestsLocationURI?: URI;\n\textensionEnabledProposedApi?: string[];\n}\n"],
  "mappings": "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",
  "names": []
}
