{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/environment/browser/environmentService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Schemas } from '../../../../base/common/network.js';\nimport { joinPath } from '../../../../base/common/resources.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ExtensionKind, IEnvironmentService, IExtensionHostDebugParams } from '../../../../platform/environment/common/environment.js';\nimport { IPath } from '../../../../platform/window/common/window.js';\nimport { IWorkbenchEnvironmentService } from '../common/environmentService.js';\nimport { IWorkbenchConstructionOptions } from '../../../browser/web.api.js';\nimport { IProductService } from '../../../../platform/product/common/productService.js';\nimport { memoize } from '../../../../base/common/decorators.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { parseLineAndColumnAware } from '../../../../base/common/extpath.js';\nimport { LogLevelToString } from '../../../../platform/log/common/log.js';\nimport { isUndefined } from '../../../../base/common/types.js';\nimport { refineServiceDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ITextEditorOptions } from '../../../../platform/editor/common/editor.js';\nimport { EXTENSION_IDENTIFIER_WITH_LOG_REGEX } from '../../../../platform/environment/common/environmentService.js';\n\nexport const IBrowserWorkbenchEnvironmentService = refineServiceDecorator<IEnvironmentService, IBrowserWorkbenchEnvironmentService>(IEnvironmentService);\n\n/**\n * A subclass of the `IWorkbenchEnvironmentService` to be used only environments\n * where the web API is available (browsers, Electron).\n */\nexport interface IBrowserWorkbenchEnvironmentService extends IWorkbenchEnvironmentService {\n\n\t/**\n\t * Options used to configure the workbench.\n\t */\n\treadonly options?: IWorkbenchConstructionOptions;\n\n\t/**\n\t * Gets whether a resolver extension is expected for the environment.\n\t */\n\treadonly expectsResolverExtension: boolean;\n}\n\nexport class BrowserWorkbenchEnvironmentService implements IBrowserWorkbenchEnvironmentService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\t@memoize\n\tget remoteAuthority(): string | undefined { return this.options.remoteAuthority; }\n\n\t@memoize\n\tget expectsResolverExtension(): boolean {\n\t\treturn !!this.options.remoteAuthority?.includes('+') && !this.options.webSocketFactory;\n\t}\n\n\t@memoize\n\tget isBuilt(): boolean { return !!this.productService.commit; }\n\n\t@memoize\n\tget logLevel(): string | undefined {\n\t\tconst logLevelFromPayload = this.payload?.get('logLevel');\n\t\tif (logLevelFromPayload) {\n\t\t\treturn logLevelFromPayload.split(',').find(entry => !EXTENSION_IDENTIFIER_WITH_LOG_REGEX.test(entry));\n\t\t}\n\n\t\treturn this.options.developmentOptions?.logLevel !== undefined ? LogLevelToString(this.options.developmentOptions?.logLevel) : undefined;\n\t}\n\n\tget extensionLogLevel(): [string, string][] | undefined {\n\t\tconst logLevelFromPayload = this.payload?.get('logLevel');\n\t\tif (logLevelFromPayload) {\n\t\t\tconst result: [string, string][] = [];\n\t\t\tfor (const entry of logLevelFromPayload.split(',')) {\n\t\t\t\tconst matches = EXTENSION_IDENTIFIER_WITH_LOG_REGEX.exec(entry);\n\t\t\t\tif (matches && matches[1] && matches[2]) {\n\t\t\t\t\tresult.push([matches[1], matches[2]]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result.length ? result : undefined;\n\t\t}\n\n\t\treturn this.options.developmentOptions?.extensionLogLevel !== undefined ? this.options.developmentOptions?.extensionLogLevel.map(([extension, logLevel]) => ([extension, LogLevelToString(logLevel)])) : undefined;\n\t}\n\n\tget profDurationMarkers(): string[] | undefined {\n\t\tconst profDurationMarkersFromPayload = this.payload?.get('profDurationMarkers');\n\t\tif (profDurationMarkersFromPayload) {\n\t\t\tconst result: string[] = [];\n\t\t\tfor (const entry of profDurationMarkersFromPayload.split(',')) {\n\t\t\t\tresult.push(entry);\n\t\t\t}\n\n\t\t\treturn result.length === 2 ? result : undefined;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\t@memoize\n\tget windowLogsPath(): URI { return this.logsHome; }\n\n\t@memoize\n\tget logFile(): URI { return joinPath(this.windowLogsPath, 'window.log'); }\n\n\t@memoize\n\tget userRoamingDataHome(): URI { return URI.file('/User').with({ scheme: Schemas.vscodeUserData }); }\n\n\t@memoize\n\tget argvResource(): URI { return joinPath(this.userRoamingDataHome, 'argv.json'); }\n\n\t@memoize\n\tget cacheHome(): URI { return joinPath(this.userRoamingDataHome, 'caches'); }\n\n\t@memoize\n\tget workspaceStorageHome(): URI { return joinPath(this.userRoamingDataHome, 'workspaceStorage'); }\n\n\t@memoize\n\tget localHistoryHome(): URI { return joinPath(this.userRoamingDataHome, 'History'); }\n\n\t@memoize\n\tget stateResource(): URI { return joinPath(this.userRoamingDataHome, 'State', 'storage.json'); }\n\n\t/**\n\t * In Web every workspace can potentially have scoped user-data\n\t * and/or extensions and if Sync state is shared then it can make\n\t * Sync error prone - say removing extensions from another workspace.\n\t * Hence scope Sync state per workspace. Sync scoped to a workspace\n\t * is capable of handling opening same workspace in multiple windows.\n\t */\n\t@memoize\n\tget userDataSyncHome(): URI { return joinPath(this.userRoamingDataHome, 'sync', this.workspaceId); }\n\n\t@memoize\n\tget sync(): 'on' | 'off' | undefined { return undefined; }\n\n\t@memoize\n\tget keyboardLayoutResource(): URI { return joinPath(this.userRoamingDataHome, 'keyboardLayout.json'); }\n\n\t@memoize\n\tget untitledWorkspacesHome(): URI { return joinPath(this.userRoamingDataHome, 'Workspaces'); }\n\n\t@memoize\n\tget serviceMachineIdResource(): URI { return joinPath(this.userRoamingDataHome, 'machineid'); }\n\n\t@memoize\n\tget extHostLogsPath(): URI { return joinPath(this.logsHome, 'exthost'); }\n\n\t@memoize\n\tget extHostTelemetryLogFile(): URI {\n\t\treturn joinPath(this.extHostLogsPath, 'extensionTelemetry.log');\n\t}\n\n\tprivate extensionHostDebugEnvironment: IExtensionHostDebugEnvironment | undefined = undefined;\n\n\t@memoize\n\tget debugExtensionHost(): IExtensionHostDebugParams {\n\t\tif (!this.extensionHostDebugEnvironment) {\n\t\t\tthis.extensionHostDebugEnvironment = this.resolveExtensionHostDebugEnvironment();\n\t\t}\n\n\t\treturn this.extensionHostDebugEnvironment.params;\n\t}\n\n\t@memoize\n\tget isExtensionDevelopment(): boolean {\n\t\tif (!this.extensionHostDebugEnvironment) {\n\t\t\tthis.extensionHostDebugEnvironment = this.resolveExtensionHostDebugEnvironment();\n\t\t}\n\n\t\treturn this.extensionHostDebugEnvironment.isExtensionDevelopment;\n\t}\n\n\t@memoize\n\tget extensionDevelopmentLocationURI(): URI[] | undefined {\n\t\tif (!this.extensionHostDebugEnvironment) {\n\t\t\tthis.extensionHostDebugEnvironment = this.resolveExtensionHostDebugEnvironment();\n\t\t}\n\n\t\treturn this.extensionHostDebugEnvironment.extensionDevelopmentLocationURI;\n\t}\n\n\t@memoize\n\tget extensionDevelopmentLocationKind(): ExtensionKind[] | undefined {\n\t\tif (!this.extensionHostDebugEnvironment) {\n\t\t\tthis.extensionHostDebugEnvironment = this.resolveExtensionHostDebugEnvironment();\n\t\t}\n\n\t\treturn this.extensionHostDebugEnvironment.extensionDevelopmentKind;\n\t}\n\n\t@memoize\n\tget extensionTestsLocationURI(): URI | undefined {\n\t\tif (!this.extensionHostDebugEnvironment) {\n\t\t\tthis.extensionHostDebugEnvironment = this.resolveExtensionHostDebugEnvironment();\n\t\t}\n\n\t\treturn this.extensionHostDebugEnvironment.extensionTestsLocationURI;\n\t}\n\n\t@memoize\n\tget extensionEnabledProposedApi(): string[] | undefined {\n\t\tif (!this.extensionHostDebugEnvironment) {\n\t\t\tthis.extensionHostDebugEnvironment = this.resolveExtensionHostDebugEnvironment();\n\t\t}\n\n\t\treturn this.extensionHostDebugEnvironment.extensionEnabledProposedApi;\n\t}\n\n\t@memoize\n\tget debugRenderer(): boolean {\n\t\tif (!this.extensionHostDebugEnvironment) {\n\t\t\tthis.extensionHostDebugEnvironment = this.resolveExtensionHostDebugEnvironment();\n\t\t}\n\n\t\treturn this.extensionHostDebugEnvironment.debugRenderer;\n\t}\n\n\t@memoize\n\tget enableSmokeTestDriver() { return this.options.developmentOptions?.enableSmokeTestDriver; }\n\n\t@memoize\n\tget disableExtensions() { return this.payload?.get('disableExtensions') === 'true'; }\n\n\t@memoize\n\tget enableExtensions() { return this.options.enabledExtensions; }\n\n\t@memoize\n\tget webviewExternalEndpoint(): string {\n\t\tconst endpoint = this.options.webviewEndpoint\n\t\t\t|| this.productService.webviewContentExternalBaseUrlTemplate\n\t\t\t|| 'https://{{uuid}}.vscode-cdn.net/{{quality}}/{{commit}}/out/vs/workbench/contrib/webview/browser/pre/';\n\n\t\tconst webviewExternalEndpointCommit = this.payload?.get('webviewExternalEndpointCommit');\n\t\treturn endpoint\n\t\t\t.replace('{{commit}}', webviewExternalEndpointCommit ?? this.productService.commit ?? 'ef65ac1ba57f57f2a3961bfe94aa20481caca4c6')\n\t\t\t.replace('{{quality}}', (webviewExternalEndpointCommit ? 'insider' : this.productService.quality) ?? 'insider');\n\t}\n\n\t@memoize\n\tget extensionTelemetryLogResource(): URI { return joinPath(this.logsHome, 'extensionTelemetry.log'); }\n\n\t@memoize\n\tget disableTelemetry(): boolean { return false; }\n\n\t@memoize\n\tget verbose(): boolean { return this.payload?.get('verbose') === 'true'; }\n\n\t@memoize\n\tget logExtensionHostCommunication(): boolean { return this.payload?.get('logExtensionHostCommunication') === 'true'; }\n\n\t@memoize\n\tget skipReleaseNotes(): boolean { return this.payload?.get('skipReleaseNotes') === 'true'; }\n\n\t@memoize\n\tget skipWelcome(): boolean { return this.payload?.get('skipWelcome') === 'true'; }\n\n\t@memoize\n\tget disableWorkspaceTrust(): boolean { return !this.options.enableWorkspaceTrust; }\n\n\t@memoize\n\tget profile(): string | undefined { return this.payload?.get('profile'); }\n\n\teditSessionId: string | undefined = this.options.editSessionId;\n\n\tprivate payload: Map<string, string> | undefined;\n\n\tconstructor(\n\t\tprivate readonly workspaceId: string,\n\t\treadonly logsHome: URI,\n\t\treadonly options: IWorkbenchConstructionOptions,\n\t\tprivate readonly productService: IProductService\n\t) {\n\t\tif (options.workspaceProvider && Array.isArray(options.workspaceProvider.payload)) {\n\t\t\ttry {\n\t\t\t\tthis.payload = new Map(options.workspaceProvider.payload);\n\t\t\t} catch (error) {\n\t\t\t\tonUnexpectedError(error); // possible invalid payload for map\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate resolveExtensionHostDebugEnvironment(): IExtensionHostDebugEnvironment {\n\t\tconst extensionHostDebugEnvironment: IExtensionHostDebugEnvironment = {\n\t\t\tparams: {\n\t\t\t\tport: null,\n\t\t\t\tbreak: false\n\t\t\t},\n\t\t\tdebugRenderer: false,\n\t\t\tisExtensionDevelopment: false,\n\t\t\textensionDevelopmentLocationURI: undefined,\n\t\t\textensionDevelopmentKind: undefined\n\t\t};\n\n\t\t// Fill in selected extra environmental properties\n\t\tif (this.payload) {\n\t\t\tfor (const [key, value] of this.payload) {\n\t\t\t\tswitch (key) {\n\t\t\t\t\tcase 'extensionDevelopmentPath':\n\t\t\t\t\t\tif (!extensionHostDebugEnvironment.extensionDevelopmentLocationURI) {\n\t\t\t\t\t\t\textensionHostDebugEnvironment.extensionDevelopmentLocationURI = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\textensionHostDebugEnvironment.extensionDevelopmentLocationURI.push(URI.parse(value));\n\t\t\t\t\t\textensionHostDebugEnvironment.isExtensionDevelopment = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'extensionDevelopmentKind':\n\t\t\t\t\t\textensionHostDebugEnvironment.extensionDevelopmentKind = [<ExtensionKind>value];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'extensionTestsPath':\n\t\t\t\t\t\textensionHostDebugEnvironment.extensionTestsLocationURI = URI.parse(value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'debugRenderer':\n\t\t\t\t\t\textensionHostDebugEnvironment.debugRenderer = value === 'true';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'debugId':\n\t\t\t\t\t\textensionHostDebugEnvironment.params.debugId = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'inspect-brk-extensions':\n\t\t\t\t\t\textensionHostDebugEnvironment.params.port = parseInt(value);\n\t\t\t\t\t\textensionHostDebugEnvironment.params.break = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'inspect-extensions':\n\t\t\t\t\t\textensionHostDebugEnvironment.params.port = parseInt(value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'enableProposedApi':\n\t\t\t\t\t\textensionHostDebugEnvironment.extensionEnabledProposedApi = [];\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst developmentOptions = this.options.developmentOptions;\n\t\tif (developmentOptions && !extensionHostDebugEnvironment.isExtensionDevelopment) {\n\t\t\tif (developmentOptions.extensions?.length) {\n\t\t\t\textensionHostDebugEnvironment.extensionDevelopmentLocationURI = developmentOptions.extensions.map(e => URI.revive(e));\n\t\t\t\textensionHostDebugEnvironment.isExtensionDevelopment = true;\n\t\t\t}\n\n\t\t\tif (developmentOptions.extensionTestsPath) {\n\t\t\t\textensionHostDebugEnvironment.extensionTestsLocationURI = URI.revive(developmentOptions.extensionTestsPath);\n\t\t\t}\n\t\t}\n\n\t\treturn extensionHostDebugEnvironment;\n\t}\n\n\t@memoize\n\tget filesToOpenOrCreate(): IPath<ITextEditorOptions>[] | undefined {\n\t\tif (this.payload) {\n\t\t\tconst fileToOpen = this.payload.get('openFile');\n\t\t\tif (fileToOpen) {\n\t\t\t\tconst fileUri = URI.parse(fileToOpen);\n\n\t\t\t\t// Support: --goto parameter to open on line/col\n\t\t\t\tif (this.payload.has('gotoLineMode')) {\n\t\t\t\t\tconst pathColumnAware = parseLineAndColumnAware(fileUri.path);\n\n\t\t\t\t\treturn [{\n\t\t\t\t\t\tfileUri: fileUri.with({ path: pathColumnAware.path }),\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\tselection: !isUndefined(pathColumnAware.line) ? { startLineNumber: pathColumnAware.line, startColumn: pathColumnAware.column || 1 } : undefined\n\t\t\t\t\t\t}\n\t\t\t\t\t}];\n\t\t\t\t}\n\n\t\t\t\treturn [{ fileUri }];\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\t@memoize\n\tget filesToDiff(): IPath[] | undefined {\n\t\tif (this.payload) {\n\t\t\tconst fileToDiffPrimary = this.payload.get('diffFilePrimary');\n\t\t\tconst fileToDiffSecondary = this.payload.get('diffFileSecondary');\n\t\t\tif (fileToDiffPrimary && fileToDiffSecondary) {\n\t\t\t\treturn [\n\t\t\t\t\t{ fileUri: URI.parse(fileToDiffSecondary) },\n\t\t\t\t\t{ fileUri: URI.parse(fileToDiffPrimary) }\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\t@memoize\n\tget filesToMerge(): IPath[] | undefined {\n\t\tif (this.payload) {\n\t\t\tconst fileToMerge1 = this.payload.get('mergeFile1');\n\t\t\tconst fileToMerge2 = this.payload.get('mergeFile2');\n\t\t\tconst fileToMergeBase = this.payload.get('mergeFileBase');\n\t\t\tconst fileToMergeResult = this.payload.get('mergeFileResult');\n\t\t\tif (fileToMerge1 && fileToMerge2 && fileToMergeBase && fileToMergeResult) {\n\t\t\t\treturn [\n\t\t\t\t\t{ fileUri: URI.parse(fileToMerge1) },\n\t\t\t\t\t{ fileUri: URI.parse(fileToMerge2) },\n\t\t\t\t\t{ fileUri: URI.parse(fileToMergeBase) },\n\t\t\t\t\t{ fileUri: URI.parse(fileToMergeResult) }\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n}\n\ninterface IExtensionHostDebugEnvironment {\n\tparams: IExtensionHostDebugParams;\n\tdebugRenderer: boolean;\n\tisExtensionDevelopment: boolean;\n\textensionDevelopmentLocationURI?: URI[];\n\textensionDevelopmentKind?: ExtensionKind[];\n\textensionTestsLocationURI?: URI;\n\textensionEnabledProposedApi?: string[];\n}\n"],
  "mappings": "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",
  "names": []
}
