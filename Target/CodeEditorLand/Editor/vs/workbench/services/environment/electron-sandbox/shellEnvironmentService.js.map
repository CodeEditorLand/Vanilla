{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/environment/electron-sandbox/shellEnvironmentService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IProcessEnvironment } from '../../../../base/common/platform.js';\nimport { process } from '../../../../base/parts/sandbox/electron-sandbox/globals.js';\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\n\nexport const IShellEnvironmentService = createDecorator<IShellEnvironmentService>('shellEnvironmentService');\n\nexport interface IShellEnvironmentService {\n\n\treadonly _serviceBrand: undefined;\n\n\tgetShellEnv(): Promise<IProcessEnvironment>;\n}\n\nexport class ShellEnvironmentService implements IShellEnvironmentService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tgetShellEnv(): Promise<IProcessEnvironment> {\n\t\treturn process.shellEnv();\n\t}\n}\n\nregisterSingleton(IShellEnvironmentService, ShellEnvironmentService, InstantiationType.Delayed);\n"],
  "mappings": ";;AAKA,SAAS,uBAAuB;AAChC,SAAS,2BAA2B;AACpC,SAAS,eAAe;AACxB,SAAS,mBAAmB,yBAAyB;AAE9C,MAAM,2BAA2B,gBAA0C,yBAAyB;AASpG,MAAM,wBAA4D;AAAA,EAnBzE,OAmByE;AAAA;AAAA;AAAA,EAIxE,cAA4C;AAC3C,WAAO,QAAQ,SAAS;AAAA,EACzB;AACD;AAEA,kBAAkB,0BAA0B,yBAAyB,kBAAkB,OAAO;",
  "names": []
}
