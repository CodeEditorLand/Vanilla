{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/environment/electron-sandbox/shellEnvironmentService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IProcessEnvironment } from \"../../../../base/common/platform.js\";\nimport { process } from \"../../../../base/parts/sandbox/electron-sandbox/globals.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport { createDecorator } from \"../../../../platform/instantiation/common/instantiation.js\";\n\nexport const IShellEnvironmentService =\n\tcreateDecorator<IShellEnvironmentService>(\"shellEnvironmentService\");\n\nexport interface IShellEnvironmentService {\n\treadonly _serviceBrand: undefined;\n\n\tgetShellEnv(): Promise<IProcessEnvironment>;\n}\n\nexport class ShellEnvironmentService implements IShellEnvironmentService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tgetShellEnv(): Promise<IProcessEnvironment> {\n\t\treturn process.shellEnv();\n\t}\n}\n\nregisterSingleton(\n\tIShellEnvironmentService,\n\tShellEnvironmentService,\n\tInstantiationType.Delayed,\n);\n"],
  "mappings": ";;AAMA,SAAS,eAAe;AACxB;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,uBAAuB;AAEzB,MAAM,2BACZ,gBAA0C,yBAAyB;AAQ7D,MAAM,wBAA4D;AAAA,EAtBzE,OAsByE;AAAA;AAAA;AAAA,EAGxE,cAA4C;AAC3C,WAAO,QAAQ,SAAS;AAAA,EACzB;AACD;AAEA;AAAA,EACC;AAAA,EACA;AAAA,EACA,kBAAkB;AACnB;",
  "names": []
}
