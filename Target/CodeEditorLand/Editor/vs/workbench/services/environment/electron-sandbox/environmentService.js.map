{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/environment/electron-sandbox/environmentService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { memoize } from \"../../../../base/common/decorators.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport type { PerformanceMark } from \"../../../../base/common/performance.js\";\nimport { joinPath } from \"../../../../base/common/resources.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport {\n\tIEnvironmentService,\n\ttype INativeEnvironmentService,\n} from \"../../../../platform/environment/common/environment.js\";\nimport { AbstractNativeEnvironmentService } from \"../../../../platform/environment/common/environmentService.js\";\nimport { refineServiceDecorator } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport type { IProductService } from \"../../../../platform/product/common/productService.js\";\nimport type {\n\tIColorScheme,\n\tINativeWindowConfiguration,\n\tIOSConfiguration,\n\tIPath,\n\tIPathsToWaitFor,\n} from \"../../../../platform/window/common/window.js\";\nimport type { IBrowserWorkbenchEnvironmentService } from \"../browser/environmentService.js\";\n\nexport const INativeWorkbenchEnvironmentService = refineServiceDecorator<\n\tIEnvironmentService,\n\tINativeWorkbenchEnvironmentService\n>(IEnvironmentService);\n\n/**\n * A subclass of the `IWorkbenchEnvironmentService` to be used only in native\n * environments (Windows, Linux, macOS) but not e.g. web.\n */\nexport interface INativeWorkbenchEnvironmentService\n\textends IBrowserWorkbenchEnvironmentService,\n\t\tINativeEnvironmentService {\n\t// --- Window\n\treadonly window: {\n\t\tid: number;\n\t\tcolorScheme: IColorScheme;\n\t\tmaximized?: boolean;\n\t\taccessibilitySupport?: boolean;\n\t\tisInitialStartup?: boolean;\n\t\tisCodeCaching?: boolean;\n\t\tperfMarks: PerformanceMark[];\n\t};\n\n\t// --- Main\n\treadonly mainPid: number;\n\treadonly os: IOSConfiguration;\n\treadonly machineId: string;\n\treadonly sqmId: string;\n\treadonly devDeviceId: string;\n\n\t// --- Paths\n\treadonly execPath: string;\n\treadonly backupPath?: string;\n\n\t// --- Development\n\treadonly crashReporterDirectory?: string;\n\treadonly crashReporterId?: string;\n\n\t// --- Editors to --wait\n\treadonly filesToWait?: IPathsToWaitFor;\n}\n\nexport class NativeWorkbenchEnvironmentService\n\textends AbstractNativeEnvironmentService\n\timplements INativeWorkbenchEnvironmentService\n{\n\t@memoize\n\tget mainPid() {\n\t\treturn this.configuration.mainPid;\n\t}\n\n\t@memoize\n\tget machineId() {\n\t\treturn this.configuration.machineId;\n\t}\n\n\t@memoize\n\tget sqmId() {\n\t\treturn this.configuration.sqmId;\n\t}\n\n\t@memoize\n\tget devDeviceId() {\n\t\treturn this.configuration.devDeviceId;\n\t}\n\n\t@memoize\n\tget remoteAuthority() {\n\t\treturn this.configuration.remoteAuthority;\n\t}\n\n\t@memoize\n\tget expectsResolverExtension() {\n\t\treturn !!this.configuration.remoteAuthority?.includes(\"+\");\n\t}\n\n\t@memoize\n\tget execPath() {\n\t\treturn this.configuration.execPath;\n\t}\n\n\t@memoize\n\tget backupPath() {\n\t\treturn this.configuration.backupPath;\n\t}\n\n\t@memoize\n\tget window() {\n\t\treturn {\n\t\t\tid: this.configuration.windowId,\n\t\t\tcolorScheme: this.configuration.colorScheme,\n\t\t\tmaximized: this.configuration.maximized,\n\t\t\taccessibilitySupport: this.configuration.accessibilitySupport,\n\t\t\tperfMarks: this.configuration.perfMarks,\n\t\t\tisInitialStartup: this.configuration.isInitialStartup,\n\t\t\tisCodeCaching: typeof this.configuration.codeCachePath === \"string\",\n\t\t};\n\t}\n\n\t@memoize\n\tget windowLogsPath(): URI {\n\t\treturn joinPath(this.logsHome, `window${this.configuration.windowId}`);\n\t}\n\n\t@memoize\n\tget logFile(): URI {\n\t\treturn joinPath(this.windowLogsPath, `renderer.log`);\n\t}\n\n\t@memoize\n\tget extHostLogsPath(): URI {\n\t\treturn joinPath(this.windowLogsPath, \"exthost\");\n\t}\n\n\t@memoize\n\tget extHostTelemetryLogFile(): URI {\n\t\treturn joinPath(this.extHostLogsPath, \"extensionTelemetry.log\");\n\t}\n\n\t@memoize\n\tget webviewExternalEndpoint(): string {\n\t\treturn `${Schemas.vscodeWebview}://{{uuid}}`;\n\t}\n\n\t@memoize\n\tget skipReleaseNotes(): boolean {\n\t\treturn !!this.args[\"skip-release-notes\"];\n\t}\n\n\t@memoize\n\tget skipWelcome(): boolean {\n\t\treturn !!this.args[\"skip-welcome\"];\n\t}\n\n\t@memoize\n\tget logExtensionHostCommunication(): boolean {\n\t\treturn !!this.args.logExtensionHostCommunication;\n\t}\n\n\t@memoize\n\tget enableSmokeTestDriver(): boolean {\n\t\treturn !!this.args[\"enable-smoke-test-driver\"];\n\t}\n\n\t@memoize\n\tget extensionEnabledProposedApi(): string[] | undefined {\n\t\tif (Array.isArray(this.args[\"enable-proposed-api\"])) {\n\t\t\treturn this.args[\"enable-proposed-api\"];\n\t\t}\n\n\t\tif (\"enable-proposed-api\" in this.args) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\t@memoize\n\tget os(): IOSConfiguration {\n\t\treturn this.configuration.os;\n\t}\n\n\t@memoize\n\tget filesToOpenOrCreate(): IPath[] | undefined {\n\t\treturn this.configuration.filesToOpenOrCreate;\n\t}\n\n\t@memoize\n\tget filesToDiff(): IPath[] | undefined {\n\t\treturn this.configuration.filesToDiff;\n\t}\n\n\t@memoize\n\tget filesToMerge(): IPath[] | undefined {\n\t\treturn this.configuration.filesToMerge;\n\t}\n\n\t@memoize\n\tget filesToWait(): IPathsToWaitFor | undefined {\n\t\treturn this.configuration.filesToWait;\n\t}\n\n\tconstructor(\n\t\tprivate readonly configuration: INativeWindowConfiguration,\n\t\tproductService: IProductService,\n\t) {\n\t\tsuper(\n\t\t\tconfiguration,\n\t\t\t{\n\t\t\t\thomeDir: configuration.homeDir,\n\t\t\t\ttmpDir: configuration.tmpDir,\n\t\t\t\tuserDataDir: configuration.userDataDir,\n\t\t\t},\n\t\t\tproductService,\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
