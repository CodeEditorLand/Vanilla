{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/encryption/browser/encryptionService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IEncryptionService, KnownStorageProvider } from '../../../../platform/encryption/common/encryptionService.js';\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\n\nexport class EncryptionService implements IEncryptionService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tencrypt(value: string): Promise<string> {\n\t\treturn Promise.resolve(value);\n\t}\n\n\tdecrypt(value: string): Promise<string> {\n\t\treturn Promise.resolve(value);\n\t}\n\n\tisEncryptionAvailable(): Promise<boolean> {\n\t\treturn Promise.resolve(false);\n\t}\n\n\tgetKeyStorageProvider(): Promise<KnownStorageProvider> {\n\t\treturn Promise.resolve(KnownStorageProvider.basicText);\n\t}\n\n\tsetUsePlainTextEncryption(): Promise<void> {\n\t\treturn Promise.resolve(undefined);\n\t}\n}\n\nregisterSingleton(IEncryptionService, EncryptionService, InstantiationType.Delayed);\n"],
  "mappings": ";;AAKA,SAAS,oBAAoB,4BAA4B;AACzD,SAAS,mBAAmB,yBAAyB;AAE9C,MAAM,kBAAgD;AAAA,EAR7D,OAQ6D;AAAA;AAAA;AAAA,EAI5D,QAAQ,OAAgC;AACvC,WAAO,QAAQ,QAAQ,KAAK;AAAA,EAC7B;AAAA,EAEA,QAAQ,OAAgC;AACvC,WAAO,QAAQ,QAAQ,KAAK;AAAA,EAC7B;AAAA,EAEA,wBAA0C;AACzC,WAAO,QAAQ,QAAQ,KAAK;AAAA,EAC7B;AAAA,EAEA,wBAAuD;AACtD,WAAO,QAAQ,QAAQ,qBAAqB,SAAS;AAAA,EACtD;AAAA,EAEA,4BAA2C;AAC1C,WAAO,QAAQ,QAAQ,MAAS;AAAA,EACjC;AACD;AAEA,kBAAkB,oBAAoB,mBAAmB,kBAAkB,OAAO;",
  "names": []
}
