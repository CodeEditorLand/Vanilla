{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/languageDetection/browser/languageDetectionWorker.protocol.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IWorkerClient, IWorkerServer } from '../../../../base/common/worker/simpleWorker.js';\n\nexport abstract class LanguageDetectionWorkerHost {\n\tpublic static CHANNEL_NAME = 'languageDetectionWorkerHost';\n\tpublic static getChannel(workerServer: IWorkerServer): LanguageDetectionWorkerHost {\n\t\treturn workerServer.getChannel<LanguageDetectionWorkerHost>(LanguageDetectionWorkerHost.CHANNEL_NAME);\n\t}\n\tpublic static setChannel(workerClient: IWorkerClient<any>, obj: LanguageDetectionWorkerHost): void {\n\t\tworkerClient.setChannel<LanguageDetectionWorkerHost>(LanguageDetectionWorkerHost.CHANNEL_NAME, obj);\n\t}\n\n\tabstract $getIndexJsUri(): Promise<string>;\n\tabstract $getLanguageId(languageIdOrExt: string | undefined): Promise<string | undefined>;\n\tabstract $sendTelemetryEvent(languages: string[], confidences: number[], timeSpent: number): Promise<void>;\n\tabstract $getRegexpModelUri(): Promise<string>;\n\tabstract $getModelJsonUri(): Promise<string>;\n\tabstract $getWeightsUri(): Promise<string>;\n}\n\nexport interface ILanguageDetectionWorker {\n\t$detectLanguage(uri: string, langBiases: Record<string, number> | undefined, preferHistory: boolean, supportedLangs?: string[]): Promise<string | undefined>;\n}\n"],
  "mappings": ";;AAKA,SAAS,eAAe,qBAAqB;AAEtC,MAAe,4BAA4B;AAAA,EAPlD,OAOkD;AAAA;AAAA;AAAA,EACjD,OAAc,eAAe;AAAA,EAC7B,OAAc,WAAW,cAA0D;AAClF,WAAO,aAAa,WAAwC,4BAA4B,YAAY;AAAA,EACrG;AAAA,EACA,OAAc,WAAW,cAAkC,KAAwC;AAClG,iBAAa,WAAwC,4BAA4B,cAAc,GAAG;AAAA,EACnG;AAQD;",
  "names": []
}
