{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/views/browser/viewsService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from \"../../../../base/common/event.js\";\nimport {\n\tDisposable,\n\tDisposableMap,\n\tDisposableStore,\n\ttype IDisposable,\n\ttoDisposable,\n} from \"../../../../base/common/lifecycle.js\";\nimport { isString } from \"../../../../base/common/types.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { localize, localize2 } from \"../../../../nls.js\";\nimport type {\n\tICommandActionTitle,\n\tILocalizedString,\n} from \"../../../../platform/action/common/action.js\";\nimport { Categories } from \"../../../../platform/action/common/actionCommonCategories.js\";\nimport {\n\tAction2,\n\tMenuId,\n\tMenuRegistry,\n\tregisterAction2,\n} from \"../../../../platform/actions/common/actions.js\";\nimport {\n\tContextKeyExpr,\n\ttype IContextKey,\n\tIContextKeyService,\n\tRawContextKey,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport { IContextMenuService } from \"../../../../platform/contextview/browser/contextView.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { KeybindingWeight } from \"../../../../platform/keybinding/common/keybindingsRegistry.js\";\nimport type { IProgressIndicator } from \"../../../../platform/progress/common/progress.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport { IStorageService } from \"../../../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { IThemeService } from \"../../../../platform/theme/common/themeService.js\";\nimport { IWorkspaceContextService } from \"../../../../platform/workspace/common/workspace.js\";\nimport {\n\tPaneComposite,\n\tPaneCompositeDescriptor,\n\tExtensions as PaneCompositeExtensions,\n\ttype PaneCompositeRegistry,\n} from \"../../../browser/panecomposite.js\";\nimport type { ViewPaneContainer } from \"../../../browser/parts/views/viewPaneContainer.js\";\nimport { FilterViewPaneContainer } from \"../../../browser/parts/views/viewsViewlet.js\";\nimport {\n\tFocusedViewContext,\n\tgetVisbileViewContextKey,\n} from \"../../../common/contextkeys.js\";\nimport type { IPaneComposite } from \"../../../common/panecomposite.js\";\nimport {\n\ttype IView,\n\ttype IViewDescriptor,\n\tIViewDescriptorService,\n\ttype IViewPaneContainer,\n\ttype ViewContainer,\n\tViewContainerLocation,\n} from \"../../../common/views.js\";\nimport { IEditorGroupsService } from \"../../editor/common/editorGroupsService.js\";\nimport { IEditorService } from \"../../editor/common/editorService.js\";\nimport { IExtensionService } from \"../../extensions/common/extensions.js\";\nimport {\n\tIWorkbenchLayoutService,\n\tParts,\n} from \"../../layout/browser/layoutService.js\";\nimport { IPaneCompositePartService } from \"../../panecomposite/browser/panecomposite.js\";\nimport { IViewsService } from \"../common/viewsService.js\";\n\nexport class ViewsService extends Disposable implements IViewsService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly viewDisposable: Map<IViewDescriptor, IDisposable>;\n\tprivate readonly viewPaneContainers: Map<string, ViewPaneContainer>;\n\n\tprivate readonly _onDidChangeViewVisibility: Emitter<{\n\t\tid: string;\n\t\tvisible: boolean;\n\t}> = this._register(new Emitter<{ id: string; visible: boolean }>());\n\treadonly onDidChangeViewVisibility: Event<{\n\t\tid: string;\n\t\tvisible: boolean;\n\t}> = this._onDidChangeViewVisibility.event;\n\n\tprivate readonly _onDidChangeViewContainerVisibility = this._register(\n\t\tnew Emitter<{\n\t\t\tid: string;\n\t\t\tvisible: boolean;\n\t\t\tlocation: ViewContainerLocation;\n\t\t}>(),\n\t);\n\treadonly onDidChangeViewContainerVisibility =\n\t\tthis._onDidChangeViewContainerVisibility.event;\n\n\tprivate readonly _onDidChangeFocusedView = this._register(\n\t\tnew Emitter<void>(),\n\t);\n\treadonly onDidChangeFocusedView = this._onDidChangeFocusedView.event;\n\n\tprivate readonly viewContainerDisposables = this._register(\n\t\tnew DisposableMap(),\n\t);\n\tprivate readonly enabledViewContainersContextKeys: Map<\n\t\tstring,\n\t\tIContextKey<boolean>\n\t>;\n\tprivate readonly visibleViewContextKeys: Map<string, IContextKey<boolean>>;\n\tprivate readonly focusedViewContextKey: IContextKey<string>;\n\n\tconstructor(\n\t\t@IViewDescriptorService private readonly viewDescriptorService: IViewDescriptorService,\n\t\t@IPaneCompositePartService private readonly paneCompositeService: IPaneCompositePartService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IWorkbenchLayoutService private readonly layoutService: IWorkbenchLayoutService,\n\t\t@IEditorService private readonly editorService: IEditorService\n\t) {\n\t\tsuper();\n\n\t\tthis.viewDisposable = new Map<IViewDescriptor, IDisposable>();\n\t\tthis.enabledViewContainersContextKeys = new Map<string, IContextKey<boolean>>();\n\t\tthis.visibleViewContextKeys = new Map<string, IContextKey<boolean>>();\n\t\tthis.viewPaneContainers = new Map<string, ViewPaneContainer>();\n\n\t\tthis._register(toDisposable(() => {\n\t\t\tthis.viewDisposable.forEach(disposable => disposable.dispose());\n\t\t\tthis.viewDisposable.clear();\n\t\t}));\n\n\t\tthis.viewDescriptorService.viewContainers.forEach(viewContainer => this.onDidRegisterViewContainer(viewContainer, this.viewDescriptorService.getViewContainerLocation(viewContainer)!));\n\t\tthis._register(this.viewDescriptorService.onDidChangeViewContainers(({ added, removed }) => this.onDidChangeContainers(added, removed)));\n\t\tthis._register(this.viewDescriptorService.onDidChangeContainerLocation(({ viewContainer, from, to }) => this.onDidChangeContainerLocation(viewContainer, from, to)));\n\n\t\t// View Container Visibility\n\t\tthis._register(this.paneCompositeService.onDidPaneCompositeOpen(e => this._onDidChangeViewContainerVisibility.fire({ id: e.composite.getId(), visible: true, location: e.viewContainerLocation })));\n\t\tthis._register(this.paneCompositeService.onDidPaneCompositeClose(e => this._onDidChangeViewContainerVisibility.fire({ id: e.composite.getId(), visible: false, location: e.viewContainerLocation })));\n\n\t\tthis.focusedViewContextKey = FocusedViewContext.bindTo(contextKeyService);\n\t}\n\n\tprivate onViewsAdded(added: IView[]): void {\n\t\tfor (const view of added) {\n\t\t\tthis.onViewsVisibilityChanged(view, view.isBodyVisible());\n\t\t}\n\t}\n\n\tprivate onViewsVisibilityChanged(view: IView, visible: boolean): void {\n\t\tthis.getOrCreateActiveViewContextKey(view).set(visible);\n\t\tthis._onDidChangeViewVisibility.fire({ id: view.id, visible: visible });\n\t}\n\n\tprivate onViewsRemoved(removed: IView[]): void {\n\t\tfor (const view of removed) {\n\t\t\tthis.onViewsVisibilityChanged(view, false);\n\t\t}\n\t}\n\n\tprivate getOrCreateActiveViewContextKey(view: IView): IContextKey<boolean> {\n\t\tconst visibleContextKeyId = getVisbileViewContextKey(view.id);\n\t\tlet contextKey = this.visibleViewContextKeys.get(visibleContextKeyId);\n\t\tif (!contextKey) {\n\t\t\tcontextKey = new RawContextKey(visibleContextKeyId, false).bindTo(\n\t\t\t\tthis.contextKeyService,\n\t\t\t);\n\t\t\tthis.visibleViewContextKeys.set(visibleContextKeyId, contextKey);\n\t\t}\n\t\treturn contextKey;\n\t}\n\n\tprivate onDidChangeContainers(\n\t\tadded: ReadonlyArray<{\n\t\t\tcontainer: ViewContainer;\n\t\t\tlocation: ViewContainerLocation;\n\t\t}>,\n\t\tremoved: ReadonlyArray<{\n\t\t\tcontainer: ViewContainer;\n\t\t\tlocation: ViewContainerLocation;\n\t\t}>,\n\t): void {\n\t\tfor (const { container, location } of removed) {\n\t\t\tthis.onDidDeregisterViewContainer(container, location);\n\t\t}\n\t\tfor (const { container, location } of added) {\n\t\t\tthis.onDidRegisterViewContainer(container, location);\n\t\t}\n\t}\n\n\tprivate onDidRegisterViewContainer(\n\t\tviewContainer: ViewContainer,\n\t\tviewContainerLocation: ViewContainerLocation,\n\t): void {\n\t\tthis.registerPaneComposite(viewContainer, viewContainerLocation);\n\t\tconst disposables = new DisposableStore();\n\n\t\tconst viewContainerModel =\n\t\t\tthis.viewDescriptorService.getViewContainerModel(viewContainer);\n\t\tthis.onViewDescriptorsAdded(\n\t\t\tviewContainerModel.allViewDescriptors,\n\t\t\tviewContainer,\n\t\t);\n\t\tdisposables.add(\n\t\t\tviewContainerModel.onDidChangeAllViewDescriptors(\n\t\t\t\t({ added, removed }) => {\n\t\t\t\t\tthis.onViewDescriptorsAdded(added, viewContainer);\n\t\t\t\t\tthis.onViewDescriptorsRemoved(removed);\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t\tthis.updateViewContainerEnablementContextKey(viewContainer);\n\t\tdisposables.add(\n\t\t\tviewContainerModel.onDidChangeActiveViewDescriptors(() =>\n\t\t\t\tthis.updateViewContainerEnablementContextKey(viewContainer),\n\t\t\t),\n\t\t);\n\t\tdisposables.add(this.registerOpenViewContainerAction(viewContainer));\n\n\t\tthis.viewContainerDisposables.set(viewContainer.id, disposables);\n\t}\n\n\tprivate onDidDeregisterViewContainer(\n\t\tviewContainer: ViewContainer,\n\t\tviewContainerLocation: ViewContainerLocation,\n\t): void {\n\t\tthis.deregisterPaneComposite(viewContainer, viewContainerLocation);\n\t\tthis.viewContainerDisposables.deleteAndDispose(viewContainer.id);\n\t}\n\n\tprivate onDidChangeContainerLocation(\n\t\tviewContainer: ViewContainer,\n\t\tfrom: ViewContainerLocation,\n\t\tto: ViewContainerLocation,\n\t): void {\n\t\tthis.deregisterPaneComposite(viewContainer, from);\n\t\tthis.registerPaneComposite(viewContainer, to);\n\n\t\t// Open view container if part is visible and there is only one view container in location\n\t\tif (\n\t\t\tthis.layoutService.isVisible(getPartByLocation(to)) &&\n\t\t\tthis.viewDescriptorService\n\t\t\t\t.getViewContainersByLocation(to)\n\t\t\t\t.filter((vc) => this.isViewContainerActive(vc.id)).length === 1\n\t\t) {\n\t\t\tthis.openViewContainer(viewContainer.id);\n\t\t}\n\t}\n\n\tprivate onViewDescriptorsAdded(\n\t\tviews: ReadonlyArray<IViewDescriptor>,\n\t\tcontainer: ViewContainer,\n\t): void {\n\t\tconst location =\n\t\t\tthis.viewDescriptorService.getViewContainerLocation(container);\n\t\tif (location === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const viewDescriptor of views) {\n\t\t\tconst disposables = new DisposableStore();\n\t\t\tdisposables.add(this.registerOpenViewAction(viewDescriptor));\n\t\t\tdisposables.add(\n\t\t\t\tthis.registerFocusViewAction(viewDescriptor, container.title),\n\t\t\t);\n\t\t\tdisposables.add(\n\t\t\t\tthis.registerResetViewLocationAction(viewDescriptor),\n\t\t\t);\n\t\t\tthis.viewDisposable.set(viewDescriptor, disposables);\n\t\t}\n\t}\n\n\tprivate onViewDescriptorsRemoved(\n\t\tviews: ReadonlyArray<IViewDescriptor>,\n\t): void {\n\t\tfor (const view of views) {\n\t\t\tconst disposable = this.viewDisposable.get(view);\n\t\t\tif (disposable) {\n\t\t\t\tdisposable.dispose();\n\t\t\t\tthis.viewDisposable.delete(view);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateViewContainerEnablementContextKey(\n\t\tviewContainer: ViewContainer,\n\t): void {\n\t\tlet contextKey = this.enabledViewContainersContextKeys.get(\n\t\t\tviewContainer.id,\n\t\t);\n\t\tif (!contextKey) {\n\t\t\tcontextKey = this.contextKeyService.createKey(\n\t\t\t\tgetEnabledViewContainerContextKey(viewContainer.id),\n\t\t\t\tfalse,\n\t\t\t);\n\t\t\tthis.enabledViewContainersContextKeys.set(\n\t\t\t\tviewContainer.id,\n\t\t\t\tcontextKey,\n\t\t\t);\n\t\t}\n\t\tcontextKey.set(\n\t\t\t!(\n\t\t\t\tviewContainer.hideIfEmpty &&\n\t\t\t\tthis.viewDescriptorService.getViewContainerModel(viewContainer)\n\t\t\t\t\t.activeViewDescriptors.length === 0\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate async openComposite(\n\t\tcompositeId: string,\n\t\tlocation: ViewContainerLocation,\n\t\tfocus?: boolean,\n\t): Promise<IPaneComposite | undefined> {\n\t\treturn this.paneCompositeService.openPaneComposite(\n\t\t\tcompositeId,\n\t\t\tlocation,\n\t\t\tfocus,\n\t\t);\n\t}\n\n\tprivate getComposite(\n\t\tcompositeId: string,\n\t\tlocation: ViewContainerLocation,\n\t): { id: string; name: string } | undefined {\n\t\treturn this.paneCompositeService.getPaneComposite(\n\t\t\tcompositeId,\n\t\t\tlocation,\n\t\t);\n\t}\n\n\t// One view container can be visible at a time in a location\n\tisViewContainerVisible(id: string): boolean {\n\t\tconst viewContainer =\n\t\t\tthis.viewDescriptorService.getViewContainerById(id);\n\t\tif (!viewContainer) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst viewContainerLocation =\n\t\t\tthis.viewDescriptorService.getViewContainerLocation(viewContainer);\n\t\tif (viewContainerLocation === null) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn (\n\t\t\tthis.paneCompositeService\n\t\t\t\t.getActivePaneComposite(viewContainerLocation)\n\t\t\t\t?.getId() === id\n\t\t);\n\t}\n\n\t// Multiple view containers can be active/inactive at a time in a location\n\tisViewContainerActive(id: string): boolean {\n\t\tconst viewContainer =\n\t\t\tthis.viewDescriptorService.getViewContainerById(id);\n\t\tif (!viewContainer) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!viewContainer.hideIfEmpty) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn (\n\t\t\tthis.viewDescriptorService.getViewContainerModel(viewContainer)\n\t\t\t\t.activeViewDescriptors.length > 0\n\t\t);\n\t}\n\n\tgetVisibleViewContainer(\n\t\tlocation: ViewContainerLocation,\n\t): ViewContainer | null {\n\t\tconst viewContainerId = this.paneCompositeService\n\t\t\t.getActivePaneComposite(location)\n\t\t\t?.getId();\n\t\treturn viewContainerId\n\t\t\t? this.viewDescriptorService.getViewContainerById(viewContainerId)\n\t\t\t: null;\n\t}\n\n\tgetActiveViewPaneContainerWithId(\n\t\tviewContainerId: string,\n\t): IViewPaneContainer | null {\n\t\tconst viewContainer =\n\t\t\tthis.viewDescriptorService.getViewContainerById(viewContainerId);\n\t\treturn viewContainer\n\t\t\t? this.getActiveViewPaneContainer(viewContainer)\n\t\t\t: null;\n\t}\n\n\tasync openViewContainer(\n\t\tid: string,\n\t\tfocus?: boolean,\n\t): Promise<IPaneComposite | null> {\n\t\tconst viewContainer =\n\t\t\tthis.viewDescriptorService.getViewContainerById(id);\n\t\tif (viewContainer) {\n\t\t\tconst viewContainerLocation =\n\t\t\t\tthis.viewDescriptorService.getViewContainerLocation(\n\t\t\t\t\tviewContainer,\n\t\t\t\t);\n\t\t\tif (viewContainerLocation !== null) {\n\t\t\t\tconst paneComposite =\n\t\t\t\t\tawait this.paneCompositeService.openPaneComposite(\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tviewContainerLocation,\n\t\t\t\t\t\tfocus,\n\t\t\t\t\t);\n\t\t\t\treturn paneComposite || null;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tasync closeViewContainer(id: string): Promise<void> {\n\t\tconst viewContainer =\n\t\t\tthis.viewDescriptorService.getViewContainerById(id);\n\t\tif (viewContainer) {\n\t\t\tconst viewContainerLocation =\n\t\t\t\tthis.viewDescriptorService.getViewContainerLocation(\n\t\t\t\t\tviewContainer,\n\t\t\t\t);\n\t\t\tconst isActive =\n\t\t\t\tviewContainerLocation !== null &&\n\t\t\t\tthis.paneCompositeService.getActivePaneComposite(\n\t\t\t\t\tviewContainerLocation,\n\t\t\t\t);\n\t\t\tif (viewContainerLocation !== null) {\n\t\t\t\treturn isActive\n\t\t\t\t\t? this.layoutService.setPartHidden(\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\tgetPartByLocation(viewContainerLocation),\n\t\t\t\t\t\t)\n\t\t\t\t\t: undefined;\n\t\t\t}\n\t\t}\n\t}\n\n\tisViewVisible(id: string): boolean {\n\t\tconst activeView = this.getActiveViewWithId(id);\n\t\treturn activeView?.isBodyVisible() || false;\n\t}\n\n\tgetActiveViewWithId<T extends IView>(id: string): T | null {\n\t\tconst viewContainer =\n\t\t\tthis.viewDescriptorService.getViewContainerByViewId(id);\n\t\tif (viewContainer) {\n\t\t\tconst activeViewPaneContainer =\n\t\t\t\tthis.getActiveViewPaneContainer(viewContainer);\n\t\t\tif (activeViewPaneContainer) {\n\t\t\t\treturn activeViewPaneContainer.getView(id) as T;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tgetViewWithId<T extends IView>(id: string): T | null {\n\t\tconst viewContainer =\n\t\t\tthis.viewDescriptorService.getViewContainerByViewId(id);\n\t\tif (viewContainer) {\n\t\t\tconst viewPaneContainer: IViewPaneContainer | undefined =\n\t\t\t\tthis.viewPaneContainers.get(viewContainer.id);\n\t\t\tif (viewPaneContainer) {\n\t\t\t\treturn viewPaneContainer.getView(id) as T;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tgetFocusedViewName(): string {\n\t\tconst viewId: string =\n\t\t\tthis.contextKeyService.getContextKeyValue(FocusedViewContext.key) ??\n\t\t\t\"\";\n\t\tconst textEditorFocused =\n\t\t\tthis.editorService.activeTextEditorControl?.hasTextFocus()\n\t\t\t\t? localize(\"editor\", \"Text Editor\")\n\t\t\t\t: undefined;\n\t\treturn (\n\t\t\tthis.viewDescriptorService.getViewDescriptorById(viewId.toString())\n\t\t\t\t?.name?.value ??\n\t\t\ttextEditorFocused ??\n\t\t\t\"\"\n\t\t);\n\t}\n\n\tasync openView<T extends IView>(\n\t\tid: string,\n\t\tfocus?: boolean,\n\t): Promise<T | null> {\n\t\tconst viewContainer =\n\t\t\tthis.viewDescriptorService.getViewContainerByViewId(id);\n\t\tif (!viewContainer) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (\n\t\t\t!this.viewDescriptorService\n\t\t\t\t.getViewContainerModel(viewContainer)\n\t\t\t\t.activeViewDescriptors.some(\n\t\t\t\t\t(viewDescriptor) => viewDescriptor.id === id,\n\t\t\t\t)\n\t\t) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst location =\n\t\t\tthis.viewDescriptorService.getViewContainerLocation(viewContainer);\n\t\tconst compositeDescriptor = this.getComposite(\n\t\t\tviewContainer.id,\n\t\t\tlocation!,\n\t\t);\n\t\tif (compositeDescriptor) {\n\t\t\tconst paneComposite = (await this.openComposite(\n\t\t\t\tcompositeDescriptor.id,\n\t\t\t\tlocation!,\n\t\t\t)) as IPaneComposite | undefined;\n\t\t\tif (paneComposite && paneComposite.openView) {\n\t\t\t\treturn paneComposite.openView<T>(id, focus) || null;\n\t\t\t} else if (focus) {\n\t\t\t\tpaneComposite?.focus();\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tcloseView(id: string): void {\n\t\tconst viewContainer =\n\t\t\tthis.viewDescriptorService.getViewContainerByViewId(id);\n\t\tif (viewContainer) {\n\t\t\tconst activeViewPaneContainer =\n\t\t\t\tthis.getActiveViewPaneContainer(viewContainer);\n\t\t\tif (activeViewPaneContainer) {\n\t\t\t\tconst view = activeViewPaneContainer.getView(id);\n\t\t\t\tif (view) {\n\t\t\t\t\tif (activeViewPaneContainer.views.length === 1) {\n\t\t\t\t\t\tconst location =\n\t\t\t\t\t\t\tthis.viewDescriptorService.getViewContainerLocation(\n\t\t\t\t\t\t\t\tviewContainer,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tif (location === ViewContainerLocation.Sidebar) {\n\t\t\t\t\t\t\tthis.layoutService.setPartHidden(\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\tParts.SIDEBAR_PART,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\tlocation === ViewContainerLocation.Panel ||\n\t\t\t\t\t\t\tlocation === ViewContainerLocation.AuxiliaryBar\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis.paneCompositeService.hideActivePaneComposite(\n\t\t\t\t\t\t\t\tlocation,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// The blur event doesn't fire on WebKit when the focused element is hidden,\n\t\t\t\t\t\t// so the context key needs to be forced here too otherwise a view may still\n\t\t\t\t\t\t// think it's showing, breaking toggle commands.\n\t\t\t\t\t\tif (this.focusedViewContextKey.get() === id) {\n\t\t\t\t\t\t\tthis.focusedViewContextKey.reset();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tview.setExpanded(false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getActiveViewPaneContainer(\n\t\tviewContainer: ViewContainer,\n\t): IViewPaneContainer | null {\n\t\tconst location =\n\t\t\tthis.viewDescriptorService.getViewContainerLocation(viewContainer);\n\t\tif (location === null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst activePaneComposite =\n\t\t\tthis.paneCompositeService.getActivePaneComposite(location);\n\t\tif (activePaneComposite?.getId() === viewContainer.id) {\n\t\t\treturn activePaneComposite.getViewPaneContainer() || null;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tgetViewProgressIndicator(viewId: string): IProgressIndicator | undefined {\n\t\tconst viewContainer =\n\t\t\tthis.viewDescriptorService.getViewContainerByViewId(viewId);\n\t\tif (!viewContainer) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst viewPaneContainer = this.viewPaneContainers.get(viewContainer.id);\n\t\tif (!viewPaneContainer) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst view = viewPaneContainer.getView(viewId);\n\t\tif (!view) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (viewPaneContainer.isViewMergedWithContainer()) {\n\t\t\treturn this.getViewContainerProgressIndicator(viewContainer);\n\t\t}\n\n\t\treturn view.getProgressIndicator();\n\t}\n\n\tprivate getViewContainerProgressIndicator(\n\t\tviewContainer: ViewContainer,\n\t): IProgressIndicator | undefined {\n\t\tconst viewContainerLocation =\n\t\t\tthis.viewDescriptorService.getViewContainerLocation(viewContainer);\n\t\tif (viewContainerLocation === null) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn this.paneCompositeService.getProgressIndicator(\n\t\t\tviewContainer.id,\n\t\t\tviewContainerLocation,\n\t\t);\n\t}\n\n\tprivate registerOpenViewContainerAction(\n\t\tviewContainer: ViewContainer,\n\t): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\t\tif (viewContainer.openCommandActionDescriptor) {\n\t\t\tconst { id, mnemonicTitle, keybindings, order } =\n\t\t\t\tviewContainer.openCommandActionDescriptor ?? {\n\t\t\t\t\tid: viewContainer.id,\n\t\t\t\t};\n\t\t\tconst title =\n\t\t\t\tviewContainer.openCommandActionDescriptor.title ??\n\t\t\t\tviewContainer.title;\n\t\t\tconst that = this;\n\t\t\tdisposables.add(\n\t\t\t\tregisterAction2(\n\t\t\t\t\tclass OpenViewContainerAction extends Action2 {\n\t\t\t\t\t\tconstructor() {\n\t\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\t\tget title(): ICommandActionTitle {\n\t\t\t\t\t\t\t\t\tconst viewContainerLocation =\n\t\t\t\t\t\t\t\t\t\tthat.viewDescriptorService.getViewContainerLocation(\n\t\t\t\t\t\t\t\t\t\t\tviewContainer,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tconst localizedTitle =\n\t\t\t\t\t\t\t\t\t\ttypeof title === \"string\"\n\t\t\t\t\t\t\t\t\t\t\t? title\n\t\t\t\t\t\t\t\t\t\t\t: title.value;\n\t\t\t\t\t\t\t\t\tconst originalTitle =\n\t\t\t\t\t\t\t\t\t\ttypeof title === \"string\"\n\t\t\t\t\t\t\t\t\t\t\t? title\n\t\t\t\t\t\t\t\t\t\t\t: title.original;\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\tviewContainerLocation ===\n\t\t\t\t\t\t\t\t\t\tViewContainerLocation.Sidebar\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\tvalue: localize(\n\t\t\t\t\t\t\t\t\t\t\t\t\"show view\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"Show {0}\",\n\t\t\t\t\t\t\t\t\t\t\t\tlocalizedTitle,\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\toriginal: `Show ${originalTitle}`,\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\tvalue: localize(\n\t\t\t\t\t\t\t\t\t\t\t\t\"toggle view\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"Toggle {0}\",\n\t\t\t\t\t\t\t\t\t\t\t\tlocalizedTitle,\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\toriginal: `Toggle ${originalTitle}`,\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcategory: Categories.View,\n\t\t\t\t\t\t\t\tprecondition: ContextKeyExpr.has(\n\t\t\t\t\t\t\t\t\tgetEnabledViewContainerContextKey(\n\t\t\t\t\t\t\t\t\t\tviewContainer.id,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tkeybinding: keybindings\n\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t...keybindings,\n\t\t\t\t\t\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\t\t\tf1: true,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpublic async run(\n\t\t\t\t\t\t\tserviceAccessor: ServicesAccessor,\n\t\t\t\t\t\t): Promise<any> {\n\t\t\t\t\t\t\tconst editorGroupService =\n\t\t\t\t\t\t\t\tserviceAccessor.get(IEditorGroupsService);\n\t\t\t\t\t\t\tconst viewDescriptorService = serviceAccessor.get(\n\t\t\t\t\t\t\t\tIViewDescriptorService,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst layoutService = serviceAccessor.get(\n\t\t\t\t\t\t\t\tIWorkbenchLayoutService,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst viewsService =\n\t\t\t\t\t\t\t\tserviceAccessor.get(IViewsService);\n\t\t\t\t\t\t\tconst viewContainerLocation =\n\t\t\t\t\t\t\t\tviewDescriptorService.getViewContainerLocation(\n\t\t\t\t\t\t\t\t\tviewContainer,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tswitch (viewContainerLocation) {\n\t\t\t\t\t\t\t\tcase ViewContainerLocation.AuxiliaryBar:\n\t\t\t\t\t\t\t\tcase ViewContainerLocation.Sidebar: {\n\t\t\t\t\t\t\t\t\tconst part =\n\t\t\t\t\t\t\t\t\t\tviewContainerLocation ===\n\t\t\t\t\t\t\t\t\t\tViewContainerLocation.Sidebar\n\t\t\t\t\t\t\t\t\t\t\t? Parts.SIDEBAR_PART\n\t\t\t\t\t\t\t\t\t\t\t: Parts.AUXILIARYBAR_PART;\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t!viewsService.isViewContainerVisible(\n\t\t\t\t\t\t\t\t\t\t\tviewContainer.id,\n\t\t\t\t\t\t\t\t\t\t) ||\n\t\t\t\t\t\t\t\t\t\t!layoutService.hasFocus(part)\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\tawait viewsService.openViewContainer(\n\t\t\t\t\t\t\t\t\t\t\tviewContainer.id,\n\t\t\t\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\teditorGroupService.activeGroup.focus();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase ViewContainerLocation.Panel:\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t!viewsService.isViewContainerVisible(\n\t\t\t\t\t\t\t\t\t\t\tviewContainer.id,\n\t\t\t\t\t\t\t\t\t\t) ||\n\t\t\t\t\t\t\t\t\t\t!layoutService.hasFocus(\n\t\t\t\t\t\t\t\t\t\t\tParts.PANEL_PART,\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\tawait viewsService.openViewContainer(\n\t\t\t\t\t\t\t\t\t\t\tviewContainer.id,\n\t\t\t\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tviewsService.closeViewContainer(\n\t\t\t\t\t\t\t\t\t\t\tviewContainer.id,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tif (mnemonicTitle) {\n\t\t\t\tconst defaultLocation =\n\t\t\t\t\tthis.viewDescriptorService.getDefaultViewContainerLocation(\n\t\t\t\t\t\tviewContainer,\n\t\t\t\t\t);\n\t\t\t\tdisposables.add(\n\t\t\t\t\tMenuRegistry.appendMenuItem(MenuId.MenubarViewMenu, {\n\t\t\t\t\t\tcommand: {\n\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\ttitle: mnemonicTitle,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgroup:\n\t\t\t\t\t\t\tdefaultLocation === ViewContainerLocation.Sidebar\n\t\t\t\t\t\t\t\t? \"3_views\"\n\t\t\t\t\t\t\t\t: \"4_panels\",\n\t\t\t\t\t\twhen: ContextKeyExpr.has(\n\t\t\t\t\t\t\tgetEnabledViewContainerContextKey(viewContainer.id),\n\t\t\t\t\t\t),\n\t\t\t\t\t\torder: order ?? Number.MAX_VALUE,\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn disposables;\n\t}\n\n\tprivate registerOpenViewAction(\n\t\tviewDescriptor: IViewDescriptor,\n\t): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\t\tif (viewDescriptor.openCommandActionDescriptor) {\n\t\t\tconst title =\n\t\t\t\tviewDescriptor.openCommandActionDescriptor.title ??\n\t\t\t\tviewDescriptor.name;\n\t\t\tconst commandId = viewDescriptor.openCommandActionDescriptor.id;\n\t\t\tconst that = this;\n\t\t\tdisposables.add(\n\t\t\t\tregisterAction2(\n\t\t\t\t\tclass OpenViewAction extends Action2 {\n\t\t\t\t\t\tconstructor() {\n\t\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\t\tid: commandId,\n\t\t\t\t\t\t\t\tget title(): ICommandActionTitle {\n\t\t\t\t\t\t\t\t\tconst viewContainerLocation =\n\t\t\t\t\t\t\t\t\t\tthat.viewDescriptorService.getViewLocationById(\n\t\t\t\t\t\t\t\t\t\t\tviewDescriptor.id,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tconst localizedTitle =\n\t\t\t\t\t\t\t\t\t\ttypeof title === \"string\"\n\t\t\t\t\t\t\t\t\t\t\t? title\n\t\t\t\t\t\t\t\t\t\t\t: title.value;\n\t\t\t\t\t\t\t\t\tconst originalTitle =\n\t\t\t\t\t\t\t\t\t\ttypeof title === \"string\"\n\t\t\t\t\t\t\t\t\t\t\t? title\n\t\t\t\t\t\t\t\t\t\t\t: title.original;\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\tviewContainerLocation ===\n\t\t\t\t\t\t\t\t\t\tViewContainerLocation.Sidebar\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\tvalue: localize(\n\t\t\t\t\t\t\t\t\t\t\t\t\"show view\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"Show {0}\",\n\t\t\t\t\t\t\t\t\t\t\t\tlocalizedTitle,\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\toriginal: `Show ${originalTitle}`,\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\tvalue: localize(\n\t\t\t\t\t\t\t\t\t\t\t\t\"toggle view\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"Toggle {0}\",\n\t\t\t\t\t\t\t\t\t\t\t\tlocalizedTitle,\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\toriginal: `Toggle ${originalTitle}`,\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcategory: Categories.View,\n\t\t\t\t\t\t\t\tprecondition: ContextKeyExpr.has(\n\t\t\t\t\t\t\t\t\t`${viewDescriptor.id}.active`,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tkeybinding:\n\t\t\t\t\t\t\t\t\tviewDescriptor.openCommandActionDescriptor!\n\t\t\t\t\t\t\t\t\t\t.keybindings\n\t\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\t\t...viewDescriptor.openCommandActionDescriptor!\n\t\t\t\t\t\t\t\t\t\t\t\t\t.keybindings,\n\t\t\t\t\t\t\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\t\t\tf1: true,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpublic async run(\n\t\t\t\t\t\t\tserviceAccessor: ServicesAccessor,\n\t\t\t\t\t\t): Promise<any> {\n\t\t\t\t\t\t\tconst editorGroupService =\n\t\t\t\t\t\t\t\tserviceAccessor.get(IEditorGroupsService);\n\t\t\t\t\t\t\tconst viewDescriptorService = serviceAccessor.get(\n\t\t\t\t\t\t\t\tIViewDescriptorService,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst layoutService = serviceAccessor.get(\n\t\t\t\t\t\t\t\tIWorkbenchLayoutService,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst viewsService =\n\t\t\t\t\t\t\t\tserviceAccessor.get(IViewsService);\n\t\t\t\t\t\t\tconst contextKeyService =\n\t\t\t\t\t\t\t\tserviceAccessor.get(IContextKeyService);\n\n\t\t\t\t\t\t\tconst focusedViewId =\n\t\t\t\t\t\t\t\tFocusedViewContext.getValue(contextKeyService);\n\t\t\t\t\t\t\tif (focusedViewId === viewDescriptor.id) {\n\t\t\t\t\t\t\t\tconst viewLocation =\n\t\t\t\t\t\t\t\t\tviewDescriptorService.getViewLocationById(\n\t\t\t\t\t\t\t\t\t\tviewDescriptor.id,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tviewDescriptorService.getViewLocationById(\n\t\t\t\t\t\t\t\t\t\tviewDescriptor.id,\n\t\t\t\t\t\t\t\t\t) === ViewContainerLocation.Sidebar\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t// focus the editor if the view is focused and in the side bar\n\t\t\t\t\t\t\t\t\teditorGroupService.activeGroup.focus();\n\t\t\t\t\t\t\t\t} else if (viewLocation !== null) {\n\t\t\t\t\t\t\t\t\t// otherwise hide the part where the view lives if focused\n\t\t\t\t\t\t\t\t\tlayoutService.setPartHidden(\n\t\t\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\t\t\tgetPartByLocation(viewLocation),\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tviewsService.openView(viewDescriptor.id, true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tif (viewDescriptor.openCommandActionDescriptor.mnemonicTitle) {\n\t\t\t\tconst defaultViewContainer =\n\t\t\t\t\tthis.viewDescriptorService.getDefaultContainerById(\n\t\t\t\t\t\tviewDescriptor.id,\n\t\t\t\t\t);\n\t\t\t\tif (defaultViewContainer) {\n\t\t\t\t\tconst defaultLocation =\n\t\t\t\t\t\tthis.viewDescriptorService.getDefaultViewContainerLocation(\n\t\t\t\t\t\t\tdefaultViewContainer,\n\t\t\t\t\t\t);\n\t\t\t\t\tdisposables.add(\n\t\t\t\t\t\tMenuRegistry.appendMenuItem(MenuId.MenubarViewMenu, {\n\t\t\t\t\t\t\tcommand: {\n\t\t\t\t\t\t\t\tid: commandId,\n\t\t\t\t\t\t\t\ttitle: viewDescriptor\n\t\t\t\t\t\t\t\t\t.openCommandActionDescriptor.mnemonicTitle,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tgroup:\n\t\t\t\t\t\t\t\tdefaultLocation ===\n\t\t\t\t\t\t\t\tViewContainerLocation.Sidebar\n\t\t\t\t\t\t\t\t\t? \"3_views\"\n\t\t\t\t\t\t\t\t\t: \"4_panels\",\n\t\t\t\t\t\t\twhen: ContextKeyExpr.has(\n\t\t\t\t\t\t\t\t`${viewDescriptor.id}.active`,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\torder:\n\t\t\t\t\t\t\t\tviewDescriptor.openCommandActionDescriptor\n\t\t\t\t\t\t\t\t\t.order ?? Number.MAX_VALUE,\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn disposables;\n\t}\n\n\tprivate registerFocusViewAction(\n\t\tviewDescriptor: IViewDescriptor,\n\t\tcategory?: string | ILocalizedString,\n\t): IDisposable {\n\t\treturn registerAction2(\n\t\t\tclass FocusViewAction extends Action2 {\n\t\t\t\tconstructor() {\n\t\t\t\t\tconst title = localize2(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: \"focus view\",\n\t\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t\t\"{0} indicates the name of the view to be focused.\",\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"Focus on {0} View\",\n\t\t\t\t\t\tviewDescriptor.name.value,\n\t\t\t\t\t);\n\t\t\t\t\tsuper({\n\t\t\t\t\t\tid: viewDescriptor.focusCommand\n\t\t\t\t\t\t\t? viewDescriptor.focusCommand.id\n\t\t\t\t\t\t\t: `${viewDescriptor.id}.focus`,\n\t\t\t\t\t\ttitle,\n\t\t\t\t\t\tcategory,\n\t\t\t\t\t\tmenu: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\t\t\t\t\twhen: viewDescriptor.when,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tkeybinding: {\n\t\t\t\t\t\t\twhen: ContextKeyExpr.has(\n\t\t\t\t\t\t\t\t`${viewDescriptor.id}.active`,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\t\t\tprimary:\n\t\t\t\t\t\t\t\tviewDescriptor.focusCommand?.keybindings\n\t\t\t\t\t\t\t\t\t?.primary,\n\t\t\t\t\t\t\tsecondary:\n\t\t\t\t\t\t\t\tviewDescriptor.focusCommand?.keybindings\n\t\t\t\t\t\t\t\t\t?.secondary,\n\t\t\t\t\t\t\tlinux: viewDescriptor.focusCommand?.keybindings\n\t\t\t\t\t\t\t\t?.linux,\n\t\t\t\t\t\t\tmac: viewDescriptor.focusCommand?.keybindings?.mac,\n\t\t\t\t\t\t\twin: viewDescriptor.focusCommand?.keybindings?.win,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmetadata: {\n\t\t\t\t\t\t\tdescription: title.value,\n\t\t\t\t\t\t\targs: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: \"focusOptions\",\n\t\t\t\t\t\t\t\t\tdescription: \"Focus Options\",\n\t\t\t\t\t\t\t\t\tschema: {\n\t\t\t\t\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\t\t\tpreserveFocus: {\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\trun(\n\t\t\t\t\taccessor: ServicesAccessor,\n\t\t\t\t\toptions?: { preserveFocus?: boolean },\n\t\t\t\t): void {\n\t\t\t\t\taccessor\n\t\t\t\t\t\t.get(IViewsService)\n\t\t\t\t\t\t.openView(viewDescriptor.id, !options?.preserveFocus);\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\t}\n\n\tprivate registerResetViewLocationAction(\n\t\tviewDescriptor: IViewDescriptor,\n\t): IDisposable {\n\t\treturn registerAction2(\n\t\t\tclass ResetViewLocationAction extends Action2 {\n\t\t\t\tconstructor() {\n\t\t\t\t\tsuper({\n\t\t\t\t\t\tid: `${viewDescriptor.id}.resetViewLocation`,\n\t\t\t\t\t\ttitle: localize2(\"resetViewLocation\", \"Reset Location\"),\n\t\t\t\t\t\tmenu: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tid: MenuId.ViewTitleContext,\n\t\t\t\t\t\t\t\twhen: ContextKeyExpr.or(\n\t\t\t\t\t\t\t\t\tContextKeyExpr.and(\n\t\t\t\t\t\t\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\t\t\t\t\t\t\"view\",\n\t\t\t\t\t\t\t\t\t\t\tviewDescriptor.id,\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\tContextKeyExpr.equals(\n\t\t\t\t\t\t\t\t\t\t\t`${viewDescriptor.id}.defaultViewLocation`,\n\t\t\t\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tgroup: \"1_hide\",\n\t\t\t\t\t\t\t\torder: 2,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\trun(accessor: ServicesAccessor): void {\n\t\t\t\t\tconst viewDescriptorService = accessor.get(\n\t\t\t\t\t\tIViewDescriptorService,\n\t\t\t\t\t);\n\t\t\t\t\tconst defaultContainer =\n\t\t\t\t\t\tviewDescriptorService.getDefaultContainerById(\n\t\t\t\t\t\t\tviewDescriptor.id,\n\t\t\t\t\t\t)!;\n\t\t\t\t\tconst containerModel =\n\t\t\t\t\t\tviewDescriptorService.getViewContainerModel(\n\t\t\t\t\t\t\tdefaultContainer,\n\t\t\t\t\t\t)!;\n\n\t\t\t\t\t// The default container is hidden so we should try to reset its location first\n\t\t\t\t\tif (\n\t\t\t\t\t\tdefaultContainer.hideIfEmpty &&\n\t\t\t\t\t\tcontainerModel.visibleViewDescriptors.length === 0\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst defaultLocation =\n\t\t\t\t\t\t\tviewDescriptorService.getDefaultViewContainerLocation(\n\t\t\t\t\t\t\t\tdefaultContainer,\n\t\t\t\t\t\t\t)!;\n\t\t\t\t\t\tviewDescriptorService.moveViewContainerToLocation(\n\t\t\t\t\t\t\tdefaultContainer,\n\t\t\t\t\t\t\tdefaultLocation,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\tthis.desc.id,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tviewDescriptorService.moveViewsToContainer(\n\t\t\t\t\t\t[viewDescriptor],\n\t\t\t\t\t\tviewDescriptorService.getDefaultContainerById(\n\t\t\t\t\t\t\tviewDescriptor.id,\n\t\t\t\t\t\t)!,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tthis.desc.id,\n\t\t\t\t\t);\n\t\t\t\t\taccessor\n\t\t\t\t\t\t.get(IViewsService)\n\t\t\t\t\t\t.openView(viewDescriptor.id, true);\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\t}\n\n\tprivate registerPaneComposite(\n\t\tviewContainer: ViewContainer,\n\t\tviewContainerLocation: ViewContainerLocation,\n\t): void {\n\t\tconst that = this;\n\t\tclass PaneContainer extends PaneComposite {\n\t\t\tconstructor(\n\t\t\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t\t\t@IWorkspaceContextService contextService: IWorkspaceContextService,\n\t\t\t\t@IStorageService storageService: IStorageService,\n\t\t\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t\t\t@IThemeService themeService: IThemeService,\n\t\t\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t\t\t@IExtensionService extensionService: IExtensionService,\n\t\t\t) {\n\t\t\t\tsuper(\n\t\t\t\t\tviewContainer.id,\n\t\t\t\t\ttelemetryService,\n\t\t\t\t\tstorageService,\n\t\t\t\t\tinstantiationService,\n\t\t\t\t\tthemeService,\n\t\t\t\t\tcontextMenuService,\n\t\t\t\t\textensionService,\n\t\t\t\t\tcontextService,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tprotected createViewPaneContainer(\n\t\t\t\telement: HTMLElement,\n\t\t\t): ViewPaneContainer {\n\t\t\t\tconst viewPaneContainerDisposables = this._register(\n\t\t\t\t\tnew DisposableStore(),\n\t\t\t\t);\n\n\t\t\t\t// Use composite's instantiation service to get the editor progress service for any editors instantiated within the composite\n\t\t\t\tconst viewPaneContainer = that.createViewPaneContainer(\n\t\t\t\t\telement,\n\t\t\t\t\tviewContainer,\n\t\t\t\t\tviewContainerLocation,\n\t\t\t\t\tviewPaneContainerDisposables,\n\t\t\t\t\tthis.instantiationService,\n\t\t\t\t);\n\n\t\t\t\t// Only updateTitleArea for non-filter views: microsoft/vscode-remote-release#3676\n\t\t\t\tif (!(viewPaneContainer instanceof FilterViewPaneContainer)) {\n\t\t\t\t\tviewPaneContainerDisposables.add(\n\t\t\t\t\t\tEvent.any(\n\t\t\t\t\t\t\tviewPaneContainer.onDidAddViews,\n\t\t\t\t\t\t\tviewPaneContainer.onDidRemoveViews,\n\t\t\t\t\t\t\tviewPaneContainer.onTitleAreaUpdate,\n\t\t\t\t\t\t)(() => {\n\t\t\t\t\t\t\t// Update title area since there is no better way to update secondary actions\n\t\t\t\t\t\t\tthis.updateTitleArea();\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn viewPaneContainer;\n\t\t\t}\n\t\t}\n\n\t\tRegistry.as<PaneCompositeRegistry>(\n\t\t\tgetPaneCompositeExtension(viewContainerLocation),\n\t\t).registerPaneComposite(\n\t\t\tPaneCompositeDescriptor.create(\n\t\t\t\tPaneContainer,\n\t\t\t\tviewContainer.id,\n\t\t\t\ttypeof viewContainer.title === \"string\"\n\t\t\t\t\t? viewContainer.title\n\t\t\t\t\t: viewContainer.title.value,\n\t\t\t\tisString(viewContainer.icon) ? viewContainer.icon : undefined,\n\t\t\t\tviewContainer.order,\n\t\t\t\tviewContainer.requestedIndex,\n\t\t\t\tviewContainer.icon instanceof URI\n\t\t\t\t\t? viewContainer.icon\n\t\t\t\t\t: undefined,\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate deregisterPaneComposite(\n\t\tviewContainer: ViewContainer,\n\t\tviewContainerLocation: ViewContainerLocation,\n\t): void {\n\t\tRegistry.as<PaneCompositeRegistry>(\n\t\t\tgetPaneCompositeExtension(viewContainerLocation),\n\t\t).deregisterPaneComposite(viewContainer.id);\n\t}\n\n\tprivate createViewPaneContainer(\n\t\telement: HTMLElement,\n\t\tviewContainer: ViewContainer,\n\t\tviewContainerLocation: ViewContainerLocation,\n\t\tdisposables: DisposableStore,\n\t\tinstantiationService: IInstantiationService,\n\t): ViewPaneContainer {\n\t\tconst viewPaneContainer: ViewPaneContainer = (\n\t\t\tinstantiationService as any\n\t\t).createInstance(\n\t\t\tviewContainer.ctorDescriptor.ctor,\n\t\t\t...(viewContainer.ctorDescriptor.staticArguments || []),\n\t\t);\n\n\t\tthis.viewPaneContainers.set(\n\t\t\tviewPaneContainer.getId(),\n\t\t\tviewPaneContainer,\n\t\t);\n\t\tdisposables.add(\n\t\t\ttoDisposable(() =>\n\t\t\t\tthis.viewPaneContainers.delete(viewPaneContainer.getId()),\n\t\t\t),\n\t\t);\n\t\tdisposables.add(\n\t\t\tviewPaneContainer.onDidAddViews((views) =>\n\t\t\t\tthis.onViewsAdded(views),\n\t\t\t),\n\t\t);\n\t\tdisposables.add(\n\t\t\tviewPaneContainer.onDidChangeViewVisibility((view) =>\n\t\t\t\tthis.onViewsVisibilityChanged(view, view.isBodyVisible()),\n\t\t\t),\n\t\t);\n\t\tdisposables.add(\n\t\t\tviewPaneContainer.onDidRemoveViews((views) =>\n\t\t\t\tthis.onViewsRemoved(views),\n\t\t\t),\n\t\t);\n\t\tdisposables.add(\n\t\t\tviewPaneContainer.onDidFocusView((view) => {\n\t\t\t\tif (this.focusedViewContextKey.get() !== view.id) {\n\t\t\t\t\tthis.focusedViewContextKey.set(view.id);\n\t\t\t\t\tthis._onDidChangeFocusedView.fire();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tdisposables.add(\n\t\t\tviewPaneContainer.onDidBlurView((view) => {\n\t\t\t\tif (this.focusedViewContextKey.get() === view.id) {\n\t\t\t\t\tthis.focusedViewContextKey.reset();\n\t\t\t\t\tthis._onDidChangeFocusedView.fire();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\treturn viewPaneContainer;\n\t}\n}\n\nfunction getEnabledViewContainerContextKey(viewContainerId: string): string {\n\treturn `viewContainer.${viewContainerId}.enabled`;\n}\n\nfunction getPaneCompositeExtension(\n\tviewContainerLocation: ViewContainerLocation,\n): string {\n\tswitch (viewContainerLocation) {\n\t\tcase ViewContainerLocation.AuxiliaryBar:\n\t\t\treturn PaneCompositeExtensions.Auxiliary;\n\t\tcase ViewContainerLocation.Panel:\n\t\t\treturn PaneCompositeExtensions.Panels;\n\t\tcase ViewContainerLocation.Sidebar:\n\t\tdefault:\n\t\t\treturn PaneCompositeExtensions.Viewlets;\n\t}\n}\n\nexport function getPartByLocation(\n\tviewContainerLocation: ViewContainerLocation,\n): Parts.AUXILIARYBAR_PART | Parts.SIDEBAR_PART | Parts.PANEL_PART {\n\tswitch (viewContainerLocation) {\n\t\tcase ViewContainerLocation.AuxiliaryBar:\n\t\t\treturn Parts.AUXILIARYBAR_PART;\n\t\tcase ViewContainerLocation.Panel:\n\t\t\treturn Parts.PANEL_PART;\n\t\tcase ViewContainerLocation.Sidebar:\n\t\tdefault:\n\t\t\treturn Parts.SIDEBAR_PART;\n\t}\n}\n\nregisterSingleton(\n\tIViewsService,\n\tViewsService,\n\tInstantiationType.Eager /* Eager because it registers viewlets and panels in the constructor which are required during workbench layout */,\n);\n"],
  "mappings": "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",
  "names": []
}
