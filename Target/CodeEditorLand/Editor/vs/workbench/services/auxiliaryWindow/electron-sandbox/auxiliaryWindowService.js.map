{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/auxiliaryWindow/electron-sandbox/auxiliaryWindowService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tgetZoomLevel,\n\tisFullscreen,\n\tsetFullscreen,\n} from \"../../../../base/browser/browser.js\";\nimport { getActiveWindow } from \"../../../../base/browser/dom.js\";\nimport type { CodeWindow } from \"../../../../base/browser/window.js\";\nimport type { Barrier } from \"../../../../base/common/async.js\";\nimport type { DisposableStore } from \"../../../../base/common/lifecycle.js\";\nimport { mark } from \"../../../../base/common/performance.js\";\nimport { isMacintosh } from \"../../../../base/common/platform.js\";\nimport type { ISandboxGlobals } from \"../../../../base/parts/sandbox/electron-sandbox/globals.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { IDialogService } from \"../../../../platform/dialogs/common/dialogs.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { INativeHostService } from \"../../../../platform/native/common/native.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { applyZoom } from \"../../../../platform/window/electron-sandbox/window.js\";\nimport { IWorkbenchEnvironmentService } from \"../../environment/common/environmentService.js\";\nimport { IHostService } from \"../../host/browser/host.js\";\nimport { IWorkbenchLayoutService } from \"../../layout/browser/layoutService.js\";\nimport { ShutdownReason } from \"../../lifecycle/common/lifecycle.js\";\nimport {\n\tAuxiliaryWindow,\n\tAuxiliaryWindowMode,\n\tBrowserAuxiliaryWindowService,\n\ttype IAuxiliaryWindowOpenOptions,\n\tIAuxiliaryWindowService,\n} from \"../browser/auxiliaryWindowService.js\";\n\ntype NativeCodeWindow = CodeWindow & {\n\treadonly vscode: ISandboxGlobals;\n};\n\nexport class NativeAuxiliaryWindow extends AuxiliaryWindow {\n\tprivate skipUnloadConfirmation = false;\n\n\tprivate maximized = false;\n\n\tconstructor(\n\t\twindow: CodeWindow,\n\t\tcontainer: HTMLElement,\n\t\tstylesHaveLoaded: Barrier,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@INativeHostService private readonly nativeHostService: INativeHostService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IHostService hostService: IHostService,\n\t\t@IWorkbenchEnvironmentService environmentService: IWorkbenchEnvironmentService,\n\t\t@IDialogService private readonly dialogService: IDialogService\n\t) {\n\t\tsuper(window, container, stylesHaveLoaded, configurationService, hostService, environmentService);\n\n\t\tif (!isMacintosh) {\n\t\t\t// For now, limit this to platforms that have clear maximised\n\t\t\t// transitions (Windows, Linux) via window buttons.\n\t\t\tthis.handleMaximizedState();\n\t\t}\n\n\t\tthis.handleFullScreenState();\n\t}\n\n\tprivate handleMaximizedState(): void {\n\t\t(async () => {\n\t\t\tthis.maximized = await this.nativeHostService.isMaximized({\n\t\t\t\ttargetWindowId: this.window.vscodeWindowId,\n\t\t\t});\n\t\t})();\n\n\t\tthis._register(\n\t\t\tthis.nativeHostService.onDidMaximizeWindow((windowId) => {\n\t\t\t\tif (windowId === this.window.vscodeWindowId) {\n\t\t\t\t\tthis.maximized = true;\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tthis.nativeHostService.onDidUnmaximizeWindow((windowId) => {\n\t\t\t\tif (windowId === this.window.vscodeWindowId) {\n\t\t\t\t\tthis.maximized = false;\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate async handleFullScreenState(): Promise<void> {\n\t\tconst fullscreen = await this.nativeHostService.isFullScreen({\n\t\t\ttargetWindowId: this.window.vscodeWindowId,\n\t\t});\n\t\tif (fullscreen) {\n\t\t\tsetFullscreen(true, this.window);\n\t\t}\n\t}\n\n\tprotected override async handleVetoBeforeClose(\n\t\te: BeforeUnloadEvent,\n\t\tveto: string,\n\t): Promise<void> {\n\t\tthis.preventUnload(e);\n\n\t\tawait this.dialogService.error(\n\t\t\tveto,\n\t\t\tlocalize(\n\t\t\t\t\"backupErrorDetails\",\n\t\t\t\t\"Try saving or reverting the editors with unsaved changes first and then try again.\",\n\t\t\t),\n\t\t);\n\t}\n\n\tprotected override async confirmBeforeClose(\n\t\te: BeforeUnloadEvent,\n\t): Promise<void> {\n\t\tif (this.skipUnloadConfirmation) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.preventUnload(e);\n\n\t\tconst confirmed = await this.instantiationService.invokeFunction(\n\t\t\t(accessor) =>\n\t\t\t\tNativeAuxiliaryWindow.confirmOnShutdown(\n\t\t\t\t\taccessor,\n\t\t\t\t\tShutdownReason.CLOSE,\n\t\t\t\t),\n\t\t);\n\t\tif (confirmed) {\n\t\t\tthis.skipUnloadConfirmation = true;\n\t\t\tthis.nativeHostService.closeWindow({\n\t\t\t\ttargetWindowId: this.window.vscodeWindowId,\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected override preventUnload(e: BeforeUnloadEvent): void {\n\t\te.preventDefault();\n\t\te.returnValue = true;\n\t}\n\n\toverride createState(): IAuxiliaryWindowOpenOptions {\n\t\tconst state = super.createState();\n\t\tconst fullscreen = isFullscreen(this.window);\n\t\treturn {\n\t\t\t...state,\n\t\t\tbounds: state.bounds,\n\t\t\tmode: this.maximized\n\t\t\t\t? AuxiliaryWindowMode.Maximized\n\t\t\t\t: fullscreen\n\t\t\t\t\t? AuxiliaryWindowMode.Fullscreen\n\t\t\t\t\t: AuxiliaryWindowMode.Normal,\n\t\t};\n\t}\n}\n\nexport class NativeAuxiliaryWindowService extends BrowserAuxiliaryWindowService {\n\tconstructor(\n\t\t@IWorkbenchLayoutService layoutService: IWorkbenchLayoutService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@INativeHostService private readonly nativeHostService: INativeHostService,\n\t\t@IDialogService dialogService: IDialogService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IHostService hostService: IHostService,\n\t\t@IWorkbenchEnvironmentService environmentService: IWorkbenchEnvironmentService\n\t) {\n\t\tsuper(layoutService, dialogService, configurationService, telemetryService, hostService, environmentService);\n\t}\n\n\tprotected override async resolveWindowId(\n\t\tauxiliaryWindow: NativeCodeWindow,\n\t): Promise<number> {\n\t\tmark(\"code/auxiliaryWindow/willResolveWindowId\");\n\t\tconst windowId = await auxiliaryWindow.vscode.ipcRenderer.invoke(\n\t\t\t\"vscode:registerAuxiliaryWindow\",\n\t\t\tthis.nativeHostService.windowId,\n\t\t);\n\t\tmark(\"code/auxiliaryWindow/didResolveWindowId\");\n\n\t\treturn windowId;\n\t}\n\n\tprotected override createContainer(\n\t\tauxiliaryWindow: NativeCodeWindow,\n\t\tdisposables: DisposableStore,\n\t\toptions?: IAuxiliaryWindowOpenOptions,\n\t) {\n\t\t// Zoom level (either explicitly provided or inherited from main window)\n\t\tlet windowZoomLevel: number;\n\t\tif (typeof options?.zoomLevel === \"number\") {\n\t\t\twindowZoomLevel = options.zoomLevel;\n\t\t} else {\n\t\t\twindowZoomLevel = getZoomLevel(getActiveWindow());\n\t\t}\n\n\t\tapplyZoom(windowZoomLevel, auxiliaryWindow);\n\n\t\treturn super.createContainer(auxiliaryWindow, disposables);\n\t}\n\n\tprotected override createAuxiliaryWindow(\n\t\ttargetWindow: CodeWindow,\n\t\tcontainer: HTMLElement,\n\t\tstylesHaveLoaded: Barrier,\n\t): AuxiliaryWindow {\n\t\treturn new NativeAuxiliaryWindow(\n\t\t\ttargetWindow,\n\t\t\tcontainer,\n\t\t\tstylesHaveLoaded,\n\t\t\tthis.configurationService,\n\t\t\tthis.nativeHostService,\n\t\t\tthis.instantiationService,\n\t\t\tthis.hostService,\n\t\t\tthis.environmentService,\n\t\t\tthis.dialogService,\n\t\t);\n\t}\n}\n\nregisterSingleton(\n\tIAuxiliaryWindowService,\n\tNativeAuxiliaryWindowService,\n\tInstantiationType.Delayed,\n);\n"],
  "mappings": "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",
  "names": []
}
