function s(){return globalThis._VSCODE_NLS_MESSAGES}function a(){return globalThis._VSCODE_NLS_LANGUAGE}var S=a()==="pseudo"||typeof document<"u"&&document.location&&document.location.hash.indexOf("pseudo=true")>=0;function l(t,i){let n;return i.length===0?n=t:n=t.replace(/\{(\d+)\}/g,(m,g)=>{let f=g[0],r=i[f],o=m;return typeof r=="string"?o=r:(typeof r=="number"||typeof r=="boolean"||r===void 0||r===null)&&(o=String(r)),o}),S&&(n="\uFF3B"+n.replace(/[aouei]/g,"$&$&")+"\uFF3D"),n}function e(t,i,...n){return l(typeof t=="number"?h(t,i):i,n)}function h(t,i){let n=s()?.[t];if(typeof n!="string"){if(typeof i=="string")return i;throw new Error(`!!! NLS MISSING: ${t} !!!`)}return n}var c=e("JsonSchema.input.id","The input's id is used to associate an input with a variable of the form ${input:id}."),p=e("JsonSchema.input.type","The type of user input prompt to use."),u=e("JsonSchema.input.description","The description is shown when the user is prompted for input."),d=e("JsonSchema.input.default","The default value for the input."),L={definitions:{inputs:{type:"array",description:e("JsonSchema.inputs","User inputs. Used for defining user input prompts, such as free string input or a choice from several options."),items:{oneOf:[{type:"object",required:["id","type","description"],additionalProperties:!1,properties:{id:{type:"string",description:c},type:{type:"string",description:p,enum:["promptString"],enumDescriptions:[e("JsonSchema.input.type.promptString","The 'promptString' type opens an input box to ask the user for input.")]},description:{type:"string",description:u},default:{type:"string",description:d},password:{type:"boolean",description:e("JsonSchema.input.password","Controls if a password input is shown. Password input hides the typed text.")}}},{type:"object",required:["id","type","description","options"],additionalProperties:!1,properties:{id:{type:"string",description:c},type:{type:"string",description:p,enum:["pickString"],enumDescriptions:[e("JsonSchema.input.type.pickString","The 'pickString' type shows a selection list.")]},description:{type:"string",description:u},default:{type:"string",description:d},options:{type:"array",description:e("JsonSchema.input.options","An array of strings that defines the options for a quick pick."),items:{oneOf:[{type:"string"},{type:"object",required:["value"],additionalProperties:!1,properties:{label:{type:"string",description:e("JsonSchema.input.pickString.optionLabel","Label for the option.")},value:{type:"string",description:e("JsonSchema.input.pickString.optionValue","Value for the option.")}}}]}}}},{type:"object",required:["id","type","command"],additionalProperties:!1,properties:{id:{type:"string",description:c},type:{type:"string",description:p,enum:["command"],enumDescriptions:[e("JsonSchema.input.type.command","The 'command' type executes a command.")]},command:{type:"string",description:e("JsonSchema.input.command.command","The command to execute for this input variable.")},args:{oneOf:[{type:"object",description:e("JsonSchema.input.command.args","Optional arguments passed to the command.")},{type:"array",description:e("JsonSchema.input.command.args","Optional arguments passed to the command.")},{type:"string",description:e("JsonSchema.input.command.args","Optional arguments passed to the command.")}]}}}]}}}};export{L as inputsSchema};
