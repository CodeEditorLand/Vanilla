{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/configurationResolver/common/configurationResolverSchema.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IJSONSchema } from \"../../../../base/common/jsonSchema.js\";\nimport * as nls from \"../../../../nls.js\";\n\nconst idDescription = nls.localize(\n\t\"JsonSchema.input.id\",\n\t\"The input's id is used to associate an input with a variable of the form ${input:id}.\",\n);\nconst typeDescription = nls.localize(\n\t\"JsonSchema.input.type\",\n\t\"The type of user input prompt to use.\",\n);\nconst descriptionDescription = nls.localize(\n\t\"JsonSchema.input.description\",\n\t\"The description is shown when the user is prompted for input.\",\n);\nconst defaultDescription = nls.localize(\n\t\"JsonSchema.input.default\",\n\t\"The default value for the input.\",\n);\n\nexport const inputsSchema: IJSONSchema = {\n\tdefinitions: {\n\t\tinputs: {\n\t\t\ttype: \"array\",\n\t\t\tdescription: nls.localize(\n\t\t\t\t\"JsonSchema.inputs\",\n\t\t\t\t\"User inputs. Used for defining user input prompts, such as free string input or a choice from several options.\",\n\t\t\t),\n\t\t\titems: {\n\t\t\t\toneOf: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\trequired: [\"id\", \"type\", \"description\"],\n\t\t\t\t\t\tadditionalProperties: false,\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tid: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tdescription: idDescription,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttype: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tdescription: typeDescription,\n\t\t\t\t\t\t\t\tenum: [\"promptString\"],\n\t\t\t\t\t\t\t\tenumDescriptions: [\n\t\t\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\t\t\"JsonSchema.input.type.promptString\",\n\t\t\t\t\t\t\t\t\t\t\"The 'promptString' type opens an input box to ask the user for input.\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdescription: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tdescription: descriptionDescription,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tdescription: defaultDescription,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpassword: {\n\t\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\t\"JsonSchema.input.password\",\n\t\t\t\t\t\t\t\t\t\"Controls if a password input is shown. Password input hides the typed text.\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\trequired: [\"id\", \"type\", \"description\", \"options\"],\n\t\t\t\t\t\tadditionalProperties: false,\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tid: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tdescription: idDescription,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttype: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tdescription: typeDescription,\n\t\t\t\t\t\t\t\tenum: [\"pickString\"],\n\t\t\t\t\t\t\t\tenumDescriptions: [\n\t\t\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\t\t\"JsonSchema.input.type.pickString\",\n\t\t\t\t\t\t\t\t\t\t\"The 'pickString' type shows a selection list.\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdescription: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tdescription: descriptionDescription,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tdescription: defaultDescription,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\ttype: \"array\",\n\t\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\t\"JsonSchema.input.options\",\n\t\t\t\t\t\t\t\t\t\"An array of strings that defines the options for a quick pick.\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\titems: {\n\t\t\t\t\t\t\t\t\toneOf: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\t\t\t\t\t\trequired: [\"value\"],\n\t\t\t\t\t\t\t\t\t\t\tadditionalProperties: false,\n\t\t\t\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"JsonSchema.input.pickString.optionLabel\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Label for the option.\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"JsonSchema.input.pickString.optionValue\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Value for the option.\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\trequired: [\"id\", \"type\", \"command\"],\n\t\t\t\t\t\tadditionalProperties: false,\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tid: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tdescription: idDescription,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttype: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tdescription: typeDescription,\n\t\t\t\t\t\t\t\tenum: [\"command\"],\n\t\t\t\t\t\t\t\tenumDescriptions: [\n\t\t\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\t\t\"JsonSchema.input.type.command\",\n\t\t\t\t\t\t\t\t\t\t\"The 'command' type executes a command.\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcommand: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\t\"JsonSchema.input.command.command\",\n\t\t\t\t\t\t\t\t\t\"The command to execute for this input variable.\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\t\toneOf: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\t\t\t\"JsonSchema.input.command.args\",\n\t\t\t\t\t\t\t\t\t\t\t\"Optional arguments passed to the command.\",\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttype: \"array\",\n\t\t\t\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\t\t\t\"JsonSchema.input.command.args\",\n\t\t\t\t\t\t\t\t\t\t\t\"Optional arguments passed to the command.\",\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\t\t\t\"JsonSchema.input.command.args\",\n\t\t\t\t\t\t\t\t\t\t\t\"Optional arguments passed to the command.\",\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t},\n\t},\n};\n"],
  "mappings": "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",
  "names": []
}
