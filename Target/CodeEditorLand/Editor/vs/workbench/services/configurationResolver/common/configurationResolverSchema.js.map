{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/configurationResolver/common/configurationResolverSchema.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../../../nls.js';\nimport { IJSONSchema } from '../../../../base/common/jsonSchema.js';\n\nconst idDescription = nls.localize('JsonSchema.input.id', \"The input's id is used to associate an input with a variable of the form ${input:id}.\");\nconst typeDescription = nls.localize('JsonSchema.input.type', \"The type of user input prompt to use.\");\nconst descriptionDescription = nls.localize('JsonSchema.input.description', \"The description is shown when the user is prompted for input.\");\nconst defaultDescription = nls.localize('JsonSchema.input.default', \"The default value for the input.\");\n\n\nexport const inputsSchema: IJSONSchema = {\n\tdefinitions: {\n\t\tinputs: {\n\t\t\ttype: 'array',\n\t\t\tdescription: nls.localize('JsonSchema.inputs', 'User inputs. Used for defining user input prompts, such as free string input or a choice from several options.'),\n\t\t\titems: {\n\t\t\t\toneOf: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\trequired: ['id', 'type', 'description'],\n\t\t\t\t\t\tadditionalProperties: false,\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tid: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdescription: idDescription\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttype: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdescription: typeDescription,\n\t\t\t\t\t\t\t\tenum: ['promptString'],\n\t\t\t\t\t\t\t\tenumDescriptions: [\n\t\t\t\t\t\t\t\t\tnls.localize('JsonSchema.input.type.promptString', \"The 'promptString' type opens an input box to ask the user for input.\"),\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdescription: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdescription: descriptionDescription\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdescription: defaultDescription\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpassword: {\n\t\t\t\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\t\t\t\tdescription: nls.localize('JsonSchema.input.password', \"Controls if a password input is shown. Password input hides the typed text.\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\trequired: ['id', 'type', 'description', 'options'],\n\t\t\t\t\t\tadditionalProperties: false,\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tid: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdescription: idDescription\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttype: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdescription: typeDescription,\n\t\t\t\t\t\t\t\tenum: ['pickString'],\n\t\t\t\t\t\t\t\tenumDescriptions: [\n\t\t\t\t\t\t\t\t\tnls.localize('JsonSchema.input.type.pickString', \"The 'pickString' type shows a selection list.\"),\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdescription: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdescription: descriptionDescription\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdescription: defaultDescription\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\ttype: 'array',\n\t\t\t\t\t\t\t\tdescription: nls.localize('JsonSchema.input.options', \"An array of strings that defines the options for a quick pick.\"),\n\t\t\t\t\t\t\t\titems: {\n\t\t\t\t\t\t\t\t\toneOf: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\t\t\t\t\t\trequired: ['value'],\n\t\t\t\t\t\t\t\t\t\t\tadditionalProperties: false,\n\t\t\t\t\t\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\t\t\t\t\t\tdescription: nls.localize('JsonSchema.input.pickString.optionLabel', \"Label for the option.\")\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\t\t\t\t\t\tdescription: nls.localize('JsonSchema.input.pickString.optionValue', \"Value for the option.\")\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\trequired: ['id', 'type', 'command'],\n\t\t\t\t\t\tadditionalProperties: false,\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tid: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdescription: idDescription\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttype: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdescription: typeDescription,\n\t\t\t\t\t\t\t\tenum: ['command'],\n\t\t\t\t\t\t\t\tenumDescriptions: [\n\t\t\t\t\t\t\t\t\tnls.localize('JsonSchema.input.type.command', \"The 'command' type executes a command.\"),\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcommand: {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdescription: nls.localize('JsonSchema.input.command.command', \"The command to execute for this input variable.\")\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\t\toneOf: [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\t\t\t\t\tdescription: nls.localize('JsonSchema.input.command.args', \"Optional arguments passed to the command.\")\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttype: 'array',\n\t\t\t\t\t\t\t\t\t\tdescription: nls.localize('JsonSchema.input.command.args', \"Optional arguments passed to the command.\")\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\t\t\tdescription: nls.localize('JsonSchema.input.command.args', \"Optional arguments passed to the command.\")\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t}\n};\n"],
  "mappings": "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",
  "names": []
}
