{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/configurationResolver/browser/configurationResolverService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { ILabelService } from '../../../../platform/label/common/label.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\nimport { IWorkspaceContextService } from '../../../../platform/workspace/common/workspace.js';\nimport { BaseConfigurationResolverService } from './baseConfigurationResolverService.js';\nimport { IConfigurationResolverService } from '../common/configurationResolver.js';\nimport { IEditorService } from '../../editor/common/editorService.js';\nimport { IExtensionService } from '../../extensions/common/extensions.js';\nimport { IPathService } from '../../path/common/pathService.js';\n\nexport class ConfigurationResolverService extends BaseConfigurationResolverService {\n\n\tconstructor(\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@IWorkspaceContextService workspaceContextService: IWorkspaceContextService,\n\t\t@IQuickInputService quickInputService: IQuickInputService,\n\t\t@ILabelService labelService: ILabelService,\n\t\t@IPathService pathService: IPathService,\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@IStorageService storageService: IStorageService,\n\t) {\n\t\tsuper({ getAppRoot: () => undefined, getExecPath: () => undefined },\n\t\t\tPromise.resolve(Object.create(null)), editorService, configurationService,\n\t\t\tcommandService, workspaceContextService, quickInputService, labelService, pathService, extensionService, storageService);\n\t}\n}\n\nregisterSingleton(IConfigurationResolverService, ConfigurationResolverService, InstantiationType.Delayed);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,uBAAuB;AAChC,SAAS,6BAA6B;AACtC,SAAS,mBAAmB,yBAAyB;AACrD,SAAS,qBAAqB;AAC9B,SAAS,0BAA0B;AACnC,SAAS,uBAAuB;AAChC,SAAS,gCAAgC;AACzC,SAAS,wCAAwC;AACjD,SAAS,qCAAqC;AAC9C,SAAS,sBAAsB;AAC/B,SAAS,yBAAyB;AAClC,SAAS,oBAAoB;AAEtB,IAAM,+BAAN,cAA2C,iCAAiC;AAAA,EAlBnF,OAkBmF;AAAA;AAAA;AAAA,EAElF,YACiB,eACO,sBACN,gBACS,yBACN,mBACL,cACD,aACK,kBACF,gBAChB;AACD;AAAA,MAAM,EAAE,YAAY,6BAAM,QAAN,eAAiB,aAAa,6BAAM,QAAN,eAAgB;AAAA,MACjE,QAAQ,QAAQ,uBAAO,OAAO,IAAI,CAAC;AAAA,MAAG;AAAA,MAAe;AAAA,MACrD;AAAA,MAAgB;AAAA,MAAyB;AAAA,MAAmB;AAAA,MAAc;AAAA,MAAa;AAAA,MAAkB;AAAA,IAAc;AAAA,EACzH;AACD;AAjBa,+BAAN;AAAA,EAGJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAXU;AAmBb,kBAAkB,+BAA+B,8BAA8B,kBAAkB,OAAO;",
  "names": []
}
