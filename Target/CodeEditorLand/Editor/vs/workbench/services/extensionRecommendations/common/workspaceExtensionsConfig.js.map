{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/extensionRecommendations/common/workspaceExtensionsConfig.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { distinct } from \"../../../../base/common/arrays.js\";\nimport { Emitter, type Event } from \"../../../../base/common/event.js\";\nimport { type JSONPath, parse } from \"../../../../base/common/json.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport { ResourceMap } from \"../../../../base/common/map.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport { ILanguageService } from \"../../../../editor/common/languages/language.js\";\nimport { getIconClasses } from \"../../../../editor/common/services/getIconClasses.js\";\nimport { IModelService } from \"../../../../editor/common/services/model.js\";\nimport { localize } from \"../../../../nls.js\";\nimport {\n\tFileKind,\n\tIFileService,\n} from \"../../../../platform/files/common/files.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport { createDecorator } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport {\n\tIQuickInputService,\n\ttype IQuickPickItem,\n\ttype IQuickPickSeparator,\n} from \"../../../../platform/quickinput/common/quickInput.js\";\nimport {\n\ttype IWorkspace,\n\tIWorkspaceContextService,\n\ttype IWorkspaceFolder,\n\tisWorkspace,\n} from \"../../../../platform/workspace/common/workspace.js\";\nimport {\n\tIJSONEditingService,\n\ttype IJSONValue,\n} from \"../../configuration/common/jsonEditing.js\";\n\nexport const EXTENSIONS_CONFIG = \".vscode/extensions.json\";\n\nexport interface IExtensionsConfigContent {\n\trecommendations?: string[];\n\tunwantedRecommendations?: string[];\n}\n\nexport const IWorkspaceExtensionsConfigService =\n\tcreateDecorator<IWorkspaceExtensionsConfigService>(\n\t\t\"IWorkspaceExtensionsConfigService\",\n\t);\n\nexport interface IWorkspaceExtensionsConfigService {\n\treadonly _serviceBrand: undefined;\n\n\tonDidChangeExtensionsConfigs: Event<void>;\n\tgetExtensionsConfigs(): Promise<IExtensionsConfigContent[]>;\n\tgetRecommendations(): Promise<string[]>;\n\tgetUnwantedRecommendations(): Promise<string[]>;\n\n\ttoggleRecommendation(extensionId: string): Promise<void>;\n\ttoggleUnwantedRecommendation(extensionId: string): Promise<void>;\n}\n\nexport class WorkspaceExtensionsConfigService\n\textends Disposable\n\timplements IWorkspaceExtensionsConfigService\n{\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidChangeExtensionsConfigs = this._register(\n\t\tnew Emitter<void>(),\n\t);\n\treadonly onDidChangeExtensionsConfigs =\n\t\tthis._onDidChangeExtensionsConfigs.event;\n\n\tconstructor(\n\t\t@IWorkspaceContextService private readonly workspaceContextService: IWorkspaceContextService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@IModelService private readonly modelService: IModelService,\n\t\t@ILanguageService private readonly languageService: ILanguageService,\n\t\t@IJSONEditingService private readonly jsonEditingService: IJSONEditingService,\n\t) {\n\t\tsuper();\n\t\tthis._register(workspaceContextService.onDidChangeWorkspaceFolders(e => this._onDidChangeExtensionsConfigs.fire()));\n\t\tthis._register(fileService.onDidFilesChange(e => {\n\t\t\tconst workspace = workspaceContextService.getWorkspace();\n\t\t\tif ((workspace.configuration && e.affects(workspace.configuration))\n\t\t\t\t|| workspace.folders.some(folder => e.affects(folder.toResource(EXTENSIONS_CONFIG)))\n\t\t\t) {\n\t\t\t\tthis._onDidChangeExtensionsConfigs.fire();\n\t\t\t}\n\t\t}));\n\t}\n\n\tasync getExtensionsConfigs(): Promise<IExtensionsConfigContent[]> {\n\t\tconst workspace = this.workspaceContextService.getWorkspace();\n\t\tconst result: IExtensionsConfigContent[] = [];\n\t\tconst workspaceExtensionsConfigContent = workspace.configuration\n\t\t\t? await this.resolveWorkspaceExtensionConfig(\n\t\t\t\t\tworkspace.configuration,\n\t\t\t\t)\n\t\t\t: undefined;\n\t\tif (workspaceExtensionsConfigContent) {\n\t\t\tresult.push(workspaceExtensionsConfigContent);\n\t\t}\n\t\tresult.push(\n\t\t\t...(await Promise.all(\n\t\t\t\tworkspace.folders.map((workspaceFolder) =>\n\t\t\t\t\tthis.resolveWorkspaceFolderExtensionConfig(workspaceFolder),\n\t\t\t\t),\n\t\t\t)),\n\t\t);\n\t\treturn result;\n\t}\n\n\tasync getRecommendations(): Promise<string[]> {\n\t\tconst configs = await this.getExtensionsConfigs();\n\t\treturn distinct(\n\t\t\tconfigs.flatMap((c) =>\n\t\t\t\tc.recommendations\n\t\t\t\t\t? c.recommendations.map((c) => c.toLowerCase())\n\t\t\t\t\t: [],\n\t\t\t),\n\t\t);\n\t}\n\n\tasync getUnwantedRecommendations(): Promise<string[]> {\n\t\tconst configs = await this.getExtensionsConfigs();\n\t\treturn distinct(\n\t\t\tconfigs.flatMap((c) =>\n\t\t\t\tc.unwantedRecommendations\n\t\t\t\t\t? c.unwantedRecommendations.map((c) => c.toLowerCase())\n\t\t\t\t\t: [],\n\t\t\t),\n\t\t);\n\t}\n\n\tasync toggleRecommendation(extensionId: string): Promise<void> {\n\t\textensionId = extensionId.toLowerCase();\n\t\tconst workspace = this.workspaceContextService.getWorkspace();\n\t\tconst workspaceExtensionsConfigContent = workspace.configuration\n\t\t\t? await this.resolveWorkspaceExtensionConfig(\n\t\t\t\t\tworkspace.configuration,\n\t\t\t\t)\n\t\t\t: undefined;\n\t\tconst workspaceFolderExtensionsConfigContents =\n\t\t\tnew ResourceMap<IExtensionsConfigContent>();\n\t\tawait Promise.all(\n\t\t\tworkspace.folders.map(async (workspaceFolder) => {\n\t\t\t\tconst extensionsConfigContent =\n\t\t\t\t\tawait this.resolveWorkspaceFolderExtensionConfig(\n\t\t\t\t\t\tworkspaceFolder,\n\t\t\t\t\t);\n\t\t\t\tworkspaceFolderExtensionsConfigContents.set(\n\t\t\t\t\tworkspaceFolder.uri,\n\t\t\t\t\textensionsConfigContent,\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\n\t\tconst isWorkspaceRecommended =\n\t\t\tworkspaceExtensionsConfigContent &&\n\t\t\tworkspaceExtensionsConfigContent.recommendations?.some(\n\t\t\t\t(r) => r.toLowerCase() === extensionId,\n\t\t\t);\n\t\tconst recommendedWorksapceFolders = workspace.folders.filter(\n\t\t\t(workspaceFolder) =>\n\t\t\t\tworkspaceFolderExtensionsConfigContents\n\t\t\t\t\t.get(workspaceFolder.uri)\n\t\t\t\t\t?.recommendations?.some(\n\t\t\t\t\t\t(r) => r.toLowerCase() === extensionId,\n\t\t\t\t\t),\n\t\t);\n\t\tconst isRecommended =\n\t\t\tisWorkspaceRecommended || recommendedWorksapceFolders.length > 0;\n\n\t\tconst workspaceOrFolders = isRecommended\n\t\t\t? await this.pickWorkspaceOrFolders(\n\t\t\t\t\trecommendedWorksapceFolders,\n\t\t\t\t\tisWorkspaceRecommended ? workspace : undefined,\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"select for remove\",\n\t\t\t\t\t\t\"Remove extension recommendation from\",\n\t\t\t\t\t),\n\t\t\t\t)\n\t\t\t: await this.pickWorkspaceOrFolders(\n\t\t\t\t\tworkspace.folders,\n\t\t\t\t\tworkspace.configuration ? workspace : undefined,\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"select for add\",\n\t\t\t\t\t\t\"Add extension recommendation to\",\n\t\t\t\t\t),\n\t\t\t\t);\n\n\t\tfor (const workspaceOrWorkspaceFolder of workspaceOrFolders) {\n\t\t\tif (isWorkspace(workspaceOrWorkspaceFolder)) {\n\t\t\t\tawait this.addOrRemoveWorkspaceRecommendation(\n\t\t\t\t\textensionId,\n\t\t\t\t\tworkspaceOrWorkspaceFolder,\n\t\t\t\t\tworkspaceExtensionsConfigContent,\n\t\t\t\t\t!isRecommended,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tawait this.addOrRemoveWorkspaceFolderRecommendation(\n\t\t\t\t\textensionId,\n\t\t\t\t\tworkspaceOrWorkspaceFolder,\n\t\t\t\t\tworkspaceFolderExtensionsConfigContents.get(\n\t\t\t\t\t\tworkspaceOrWorkspaceFolder.uri,\n\t\t\t\t\t)!,\n\t\t\t\t\t!isRecommended,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync toggleUnwantedRecommendation(extensionId: string): Promise<void> {\n\t\tconst workspace = this.workspaceContextService.getWorkspace();\n\t\tconst workspaceExtensionsConfigContent = workspace.configuration\n\t\t\t? await this.resolveWorkspaceExtensionConfig(\n\t\t\t\t\tworkspace.configuration,\n\t\t\t\t)\n\t\t\t: undefined;\n\t\tconst workspaceFolderExtensionsConfigContents =\n\t\t\tnew ResourceMap<IExtensionsConfigContent>();\n\t\tawait Promise.all(\n\t\t\tworkspace.folders.map(async (workspaceFolder) => {\n\t\t\t\tconst extensionsConfigContent =\n\t\t\t\t\tawait this.resolveWorkspaceFolderExtensionConfig(\n\t\t\t\t\t\tworkspaceFolder,\n\t\t\t\t\t);\n\t\t\t\tworkspaceFolderExtensionsConfigContents.set(\n\t\t\t\t\tworkspaceFolder.uri,\n\t\t\t\t\textensionsConfigContent,\n\t\t\t\t);\n\t\t\t}),\n\t\t);\n\n\t\tconst isWorkspaceUnwanted =\n\t\t\tworkspaceExtensionsConfigContent &&\n\t\t\tworkspaceExtensionsConfigContent.unwantedRecommendations?.some(\n\t\t\t\t(r) => r === extensionId,\n\t\t\t);\n\t\tconst unWantedWorksapceFolders = workspace.folders.filter(\n\t\t\t(workspaceFolder) =>\n\t\t\t\tworkspaceFolderExtensionsConfigContents\n\t\t\t\t\t.get(workspaceFolder.uri)\n\t\t\t\t\t?.unwantedRecommendations?.some((r) => r === extensionId),\n\t\t);\n\t\tconst isUnwanted =\n\t\t\tisWorkspaceUnwanted || unWantedWorksapceFolders.length > 0;\n\n\t\tconst workspaceOrFolders = isUnwanted\n\t\t\t? await this.pickWorkspaceOrFolders(\n\t\t\t\t\tunWantedWorksapceFolders,\n\t\t\t\t\tisWorkspaceUnwanted ? workspace : undefined,\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"select for remove\",\n\t\t\t\t\t\t\"Remove extension recommendation from\",\n\t\t\t\t\t),\n\t\t\t\t)\n\t\t\t: await this.pickWorkspaceOrFolders(\n\t\t\t\t\tworkspace.folders,\n\t\t\t\t\tworkspace.configuration ? workspace : undefined,\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"select for add\",\n\t\t\t\t\t\t\"Add extension recommendation to\",\n\t\t\t\t\t),\n\t\t\t\t);\n\n\t\tfor (const workspaceOrWorkspaceFolder of workspaceOrFolders) {\n\t\t\tif (isWorkspace(workspaceOrWorkspaceFolder)) {\n\t\t\t\tawait this.addOrRemoveWorkspaceUnwantedRecommendation(\n\t\t\t\t\textensionId,\n\t\t\t\t\tworkspaceOrWorkspaceFolder,\n\t\t\t\t\tworkspaceExtensionsConfigContent,\n\t\t\t\t\t!isUnwanted,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tawait this.addOrRemoveWorkspaceFolderUnwantedRecommendation(\n\t\t\t\t\textensionId,\n\t\t\t\t\tworkspaceOrWorkspaceFolder,\n\t\t\t\t\tworkspaceFolderExtensionsConfigContents.get(\n\t\t\t\t\t\tworkspaceOrWorkspaceFolder.uri,\n\t\t\t\t\t)!,\n\t\t\t\t\t!isUnwanted,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async addOrRemoveWorkspaceFolderRecommendation(\n\t\textensionId: string,\n\t\tworkspaceFolder: IWorkspaceFolder,\n\t\textensionsConfigContent: IExtensionsConfigContent,\n\t\tadd: boolean,\n\t): Promise<void> {\n\t\tconst values: IJSONValue[] = [];\n\t\tif (add) {\n\t\t\tif (Array.isArray(extensionsConfigContent.recommendations)) {\n\t\t\t\tvalues.push({\n\t\t\t\t\tpath: [\"recommendations\", -1],\n\t\t\t\t\tvalue: extensionId,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tvalues.push({\n\t\t\t\t\tpath: [\"recommendations\"],\n\t\t\t\t\tvalue: [extensionId],\n\t\t\t\t});\n\t\t\t}\n\t\t\tconst unwantedRecommendationEdit =\n\t\t\t\tthis.getEditToRemoveValueFromArray(\n\t\t\t\t\t[\"unwantedRecommendations\"],\n\t\t\t\t\textensionsConfigContent.unwantedRecommendations,\n\t\t\t\t\textensionId,\n\t\t\t\t);\n\t\t\tif (unwantedRecommendationEdit) {\n\t\t\t\tvalues.push(unwantedRecommendationEdit);\n\t\t\t}\n\t\t} else if (extensionsConfigContent.recommendations) {\n\t\t\tconst recommendationEdit = this.getEditToRemoveValueFromArray(\n\t\t\t\t[\"recommendations\"],\n\t\t\t\textensionsConfigContent.recommendations,\n\t\t\t\textensionId,\n\t\t\t);\n\t\t\tif (recommendationEdit) {\n\t\t\t\tvalues.push(recommendationEdit);\n\t\t\t}\n\t\t}\n\n\t\tif (values.length) {\n\t\t\treturn this.jsonEditingService.write(\n\t\t\t\tworkspaceFolder.toResource(EXTENSIONS_CONFIG),\n\t\t\t\tvalues,\n\t\t\t\ttrue,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate async addOrRemoveWorkspaceRecommendation(\n\t\textensionId: string,\n\t\tworkspace: IWorkspace,\n\t\textensionsConfigContent: IExtensionsConfigContent | undefined,\n\t\tadd: boolean,\n\t): Promise<void> {\n\t\tconst values: IJSONValue[] = [];\n\t\tif (extensionsConfigContent) {\n\t\t\tif (add) {\n\t\t\t\tconst path: JSONPath = [\"extensions\", \"recommendations\"];\n\t\t\t\tif (Array.isArray(extensionsConfigContent.recommendations)) {\n\t\t\t\t\tvalues.push({ path: [...path, -1], value: extensionId });\n\t\t\t\t} else {\n\t\t\t\t\tvalues.push({ path, value: [extensionId] });\n\t\t\t\t}\n\t\t\t\tconst unwantedRecommendationEdit =\n\t\t\t\t\tthis.getEditToRemoveValueFromArray(\n\t\t\t\t\t\t[\"extensions\", \"unwantedRecommendations\"],\n\t\t\t\t\t\textensionsConfigContent.unwantedRecommendations,\n\t\t\t\t\t\textensionId,\n\t\t\t\t\t);\n\t\t\t\tif (unwantedRecommendationEdit) {\n\t\t\t\t\tvalues.push(unwantedRecommendationEdit);\n\t\t\t\t}\n\t\t\t} else if (extensionsConfigContent.recommendations) {\n\t\t\t\tconst recommendationEdit = this.getEditToRemoveValueFromArray(\n\t\t\t\t\t[\"extensions\", \"recommendations\"],\n\t\t\t\t\textensionsConfigContent.recommendations,\n\t\t\t\t\textensionId,\n\t\t\t\t);\n\t\t\t\tif (recommendationEdit) {\n\t\t\t\t\tvalues.push(recommendationEdit);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (add) {\n\t\t\tvalues.push({\n\t\t\t\tpath: [\"extensions\"],\n\t\t\t\tvalue: { recommendations: [extensionId] },\n\t\t\t});\n\t\t}\n\n\t\tif (values.length) {\n\t\t\treturn this.jsonEditingService.write(\n\t\t\t\tworkspace.configuration!,\n\t\t\t\tvalues,\n\t\t\t\ttrue,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate async addOrRemoveWorkspaceFolderUnwantedRecommendation(\n\t\textensionId: string,\n\t\tworkspaceFolder: IWorkspaceFolder,\n\t\textensionsConfigContent: IExtensionsConfigContent,\n\t\tadd: boolean,\n\t): Promise<void> {\n\t\tconst values: IJSONValue[] = [];\n\t\tif (add) {\n\t\t\tconst path: JSONPath = [\"unwantedRecommendations\"];\n\t\t\tif (\n\t\t\t\tArray.isArray(extensionsConfigContent.unwantedRecommendations)\n\t\t\t) {\n\t\t\t\tvalues.push({ path: [...path, -1], value: extensionId });\n\t\t\t} else {\n\t\t\t\tvalues.push({ path, value: [extensionId] });\n\t\t\t}\n\t\t\tconst recommendationEdit = this.getEditToRemoveValueFromArray(\n\t\t\t\t[\"recommendations\"],\n\t\t\t\textensionsConfigContent.recommendations,\n\t\t\t\textensionId,\n\t\t\t);\n\t\t\tif (recommendationEdit) {\n\t\t\t\tvalues.push(recommendationEdit);\n\t\t\t}\n\t\t} else if (extensionsConfigContent.unwantedRecommendations) {\n\t\t\tconst unwantedRecommendationEdit =\n\t\t\t\tthis.getEditToRemoveValueFromArray(\n\t\t\t\t\t[\"unwantedRecommendations\"],\n\t\t\t\t\textensionsConfigContent.unwantedRecommendations,\n\t\t\t\t\textensionId,\n\t\t\t\t);\n\t\t\tif (unwantedRecommendationEdit) {\n\t\t\t\tvalues.push(unwantedRecommendationEdit);\n\t\t\t}\n\t\t}\n\t\tif (values.length) {\n\t\t\treturn this.jsonEditingService.write(\n\t\t\t\tworkspaceFolder.toResource(EXTENSIONS_CONFIG),\n\t\t\t\tvalues,\n\t\t\t\ttrue,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate async addOrRemoveWorkspaceUnwantedRecommendation(\n\t\textensionId: string,\n\t\tworkspace: IWorkspace,\n\t\textensionsConfigContent: IExtensionsConfigContent | undefined,\n\t\tadd: boolean,\n\t): Promise<void> {\n\t\tconst values: IJSONValue[] = [];\n\t\tif (extensionsConfigContent) {\n\t\t\tif (add) {\n\t\t\t\tconst path: JSONPath = [\n\t\t\t\t\t\"extensions\",\n\t\t\t\t\t\"unwantedRecommendations\",\n\t\t\t\t];\n\t\t\t\tif (Array.isArray(extensionsConfigContent.recommendations)) {\n\t\t\t\t\tvalues.push({ path: [...path, -1], value: extensionId });\n\t\t\t\t} else {\n\t\t\t\t\tvalues.push({ path, value: [extensionId] });\n\t\t\t\t}\n\t\t\t\tconst recommendationEdit = this.getEditToRemoveValueFromArray(\n\t\t\t\t\t[\"extensions\", \"recommendations\"],\n\t\t\t\t\textensionsConfigContent.recommendations,\n\t\t\t\t\textensionId,\n\t\t\t\t);\n\t\t\t\tif (recommendationEdit) {\n\t\t\t\t\tvalues.push(recommendationEdit);\n\t\t\t\t}\n\t\t\t} else if (extensionsConfigContent.unwantedRecommendations) {\n\t\t\t\tconst unwantedRecommendationEdit =\n\t\t\t\t\tthis.getEditToRemoveValueFromArray(\n\t\t\t\t\t\t[\"extensions\", \"unwantedRecommendations\"],\n\t\t\t\t\t\textensionsConfigContent.unwantedRecommendations,\n\t\t\t\t\t\textensionId,\n\t\t\t\t\t);\n\t\t\t\tif (unwantedRecommendationEdit) {\n\t\t\t\t\tvalues.push(unwantedRecommendationEdit);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (add) {\n\t\t\tvalues.push({\n\t\t\t\tpath: [\"extensions\"],\n\t\t\t\tvalue: { unwantedRecommendations: [extensionId] },\n\t\t\t});\n\t\t}\n\n\t\tif (values.length) {\n\t\t\treturn this.jsonEditingService.write(\n\t\t\t\tworkspace.configuration!,\n\t\t\t\tvalues,\n\t\t\t\ttrue,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate async pickWorkspaceOrFolders(\n\t\tworkspaceFolders: IWorkspaceFolder[],\n\t\tworkspace: IWorkspace | undefined,\n\t\tplaceHolder: string,\n\t): Promise<(IWorkspace | IWorkspaceFolder)[]> {\n\t\tconst workspaceOrFolders = workspace\n\t\t\t? [...workspaceFolders, workspace]\n\t\t\t: [...workspaceFolders];\n\t\tif (workspaceOrFolders.length === 1) {\n\t\t\treturn workspaceOrFolders;\n\t\t}\n\n\t\tconst folderPicks: (\n\t\t\t| (IQuickPickItem & {\n\t\t\t\t\tworkspaceOrFolder: IWorkspace | IWorkspaceFolder;\n\t\t\t  })\n\t\t\t| IQuickPickSeparator\n\t\t)[] = workspaceFolders.map((workspaceFolder) => {\n\t\t\treturn {\n\t\t\t\tlabel: workspaceFolder.name,\n\t\t\t\tdescription: localize(\"workspace folder\", \"Workspace Folder\"),\n\t\t\t\tworkspaceOrFolder: workspaceFolder,\n\t\t\t\ticonClasses: getIconClasses(\n\t\t\t\t\tthis.modelService,\n\t\t\t\t\tthis.languageService,\n\t\t\t\t\tworkspaceFolder.uri,\n\t\t\t\t\tFileKind.ROOT_FOLDER,\n\t\t\t\t),\n\t\t\t};\n\t\t});\n\n\t\tif (workspace) {\n\t\t\tfolderPicks.push({ type: \"separator\" });\n\t\t\tfolderPicks.push({\n\t\t\t\tlabel: localize(\"workspace\", \"Workspace\"),\n\t\t\t\tworkspaceOrFolder: workspace,\n\t\t\t});\n\t\t}\n\n\t\tconst result =\n\t\t\t(await this.quickInputService.pick(folderPicks, {\n\t\t\t\tplaceHolder,\n\t\t\t\tcanPickMany: true,\n\t\t\t})) || [];\n\t\treturn result.map((r) => r.workspaceOrFolder);\n\t}\n\n\tprivate async resolveWorkspaceExtensionConfig(\n\t\tworkspaceConfigurationResource: URI,\n\t): Promise<IExtensionsConfigContent | undefined> {\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(\n\t\t\t\tworkspaceConfigurationResource,\n\t\t\t);\n\t\t\tconst extensionsConfigContent = <\n\t\t\t\tIExtensionsConfigContent | undefined\n\t\t\t>parse(content.value.toString())[\"extensions\"];\n\t\t\treturn extensionsConfigContent\n\t\t\t\t? this.parseExtensionConfig(extensionsConfigContent)\n\t\t\t\t: undefined;\n\t\t} catch (e) {\n\t\t\t/* Ignore */\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate async resolveWorkspaceFolderExtensionConfig(\n\t\tworkspaceFolder: IWorkspaceFolder,\n\t): Promise<IExtensionsConfigContent> {\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(\n\t\t\t\tworkspaceFolder.toResource(EXTENSIONS_CONFIG),\n\t\t\t);\n\t\t\tconst extensionsConfigContent = <IExtensionsConfigContent>(\n\t\t\t\tparse(content.value.toString())\n\t\t\t);\n\t\t\treturn this.parseExtensionConfig(extensionsConfigContent);\n\t\t} catch (e) {\n\t\t\t/* ignore */\n\t\t}\n\t\treturn {};\n\t}\n\n\tprivate parseExtensionConfig(\n\t\textensionsConfigContent: IExtensionsConfigContent,\n\t): IExtensionsConfigContent {\n\t\treturn {\n\t\t\trecommendations: distinct(\n\t\t\t\t(extensionsConfigContent.recommendations || []).map((e) =>\n\t\t\t\t\te.toLowerCase(),\n\t\t\t\t),\n\t\t\t),\n\t\t\tunwantedRecommendations: distinct(\n\t\t\t\t(extensionsConfigContent.unwantedRecommendations || []).map(\n\t\t\t\t\t(e) => e.toLowerCase(),\n\t\t\t\t),\n\t\t\t),\n\t\t};\n\t}\n\n\tprivate getEditToRemoveValueFromArray(\n\t\tpath: JSONPath,\n\t\tarray: string[] | undefined,\n\t\tvalue: string,\n\t): IJSONValue | undefined {\n\t\tconst index = array?.indexOf(value);\n\t\tif (index !== undefined && index !== -1) {\n\t\t\treturn { path: [...path, index], value: undefined };\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\nregisterSingleton(\n\tIWorkspaceExtensionsConfigService,\n\tWorkspaceExtensionsConfigService,\n\tInstantiationType.Delayed,\n);\n"],
  "mappings": "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",
  "names": ["c"]
}
