var M=Object.defineProperty;var O=Object.getOwnPropertyDescriptor;var T=(d,a,n,e)=>{for(var t=e>1?void 0:e?O(a,n):a,i=d.length-1,r;i>=0;i--)(r=d[i])&&(t=(e?r(a,n,t):r(t))||t);return e&&t&&M(a,n,t),t},c=(d,a)=>(n,e)=>a(n,e,d);import{Emitter as q,Event as E}from"../../../../base/common/event.js";import{Disposable as C,DisposableMap as w,DisposableStore as z}from"../../../../base/common/lifecycle.js";import{FileAccess as L}from"../../../../base/common/network.js";import{FontStyle as m,MetadataConsts as g}from"../../../../editor/common/encodedTokenAttributes.js";import{LazyTokenizationSupport as F,TreeSitterTokenizationRegistry as D}from"../../../../editor/common/languages.js";import"../../../../editor/common/model.js";import{EDITOR_EXPERIMENTAL_PREFER_TREESITTER as R,ITreeSitterParserService as U}from"../../../../editor/common/services/treeSitterParserService.js";import"../../../../editor/common/textModelEvents.js";import{ColumnRange as A}from"../../../../editor/contrib/inlineCompletions/browser/utils.js";import{IConfigurationService as B}from"../../../../platform/configuration/common/configuration.js";import{IFileService as Q}from"../../../../platform/files/common/files.js";import{InstantiationType as G,registerSingleton as K}from"../../../../platform/instantiation/common/extensions.js";import{createDecorator as N,IInstantiationService as H}from"../../../../platform/instantiation/common/instantiation.js";import{IThemeService as V}from"../../../../platform/theme/common/themeService.js";import"../../../../platform/theme/common/tokenClassificationRegistry.js";import"../../themes/common/colorThemeData.js";const W=["typescript"],X=N("treeSitterTokenizationFeature");let p=class extends C{constructor(n,e,t){super();this._configurationService=n;this._instantiationService=e;this._fileService=t;this._handleGrammarsExtPoint(),this._register(this._configurationService.onDidChangeConfiguration(i=>{i.affectsConfiguration(R)&&this._handleGrammarsExtPoint()}))}_serviceBrand;_tokenizersRegistrations=new w;_getSetting(){return this._configurationService.getValue(R)||[]}_handleGrammarsExtPoint(){const n=this._getSetting();for(const t of n)if(W.includes(t)&&!this._tokenizersRegistrations.has(t)){const i=new F(()=>this._createTokenizationSupport(t)),r=new z;r.add(i),r.add(D.registerFactory(t,i)),this._tokenizersRegistrations.set(t,r),D.getOrCreate(t)}const e=[...this._tokenizersRegistrations.keys()].filter(t=>!n.includes(t));for(const t of e)this._tokenizersRegistrations.deleteAndDispose(t)}async _fetchQueries(n){const e=`vs/editor/common/languages/highlights/${n}.scm`;return(await this._fileService.readFile(L.asFileUri(e))).value.toString()}async _createTokenizationSupport(n){const e=await this._fetchQueries(n);return this._instantiationService.createInstance(h,e,n)}};p=T([c(0,B),c(1,H),c(2,Q)],p);let h=class extends C{constructor(n,e,t,i){super();this._queries=n;this._languageId=e;this._treeSitterService=t;this._themeService=i;this._register(E.runAndSubscribe(this._themeService.onDidColorThemeChange,()=>this.reset()))}_query;_onDidChangeTokens=new q;onDidChangeTokens=this._onDidChangeTokens.event;_colorThemeData;_languageAddedListener;_getTree(n){return this._treeSitterService.getParseResult(n)}_ensureQuery(){if(!this._query){const n=this._treeSitterService.getOrInitLanguage(this._languageId);if(!n){this._languageAddedListener||(this._languageAddedListener=this._register(E.onceIf(this._treeSitterService.onDidAddLanguage,e=>e.id===this._languageId)(e=>{this._query=e.language.query(this._queries)})));return}this._query=n.query(this._queries)}return this._query}reset(){this._colorThemeData=this._themeService.getColorTheme()}captureAtPosition(n,e,t){return this._captureAtRange(n,new A(e,e),t)}_captureAtRange(n,e,t){const i=this._getTree(t),r=this._ensureQuery();return!i?.tree||!r?[]:r.captures(i.tree.rootNode,{startPosition:{row:n-1,column:e.startColumn-1},endPosition:{row:n-1,column:e.endColumnExclusive}})}tokenizeEncoded(n,e){const t=e.getLineMaxColumn(n),i=this._captureAtRange(n,new A(1,t),e);if(i.length===0)return;let r=new Uint32Array(i.length*2),o=0;const u=e.getOffsetAt({lineNumber:n,column:1}),v=()=>{const s=new Uint32Array(r.length+2);s.set(r),r=s};for(let s=0;s<i.length;s++){const l=i[s],P=this.findMetadata(l.name),I=l.node.endIndex<u+t?l.node.endIndex:u+t,y=l.node.startIndex<u?u:l.node.startIndex,_=I-u;let f;const b=I-y;s>0?f=r[(o-1)*2]:f=y-u-1;const S=_-b;f<S&&(r[o*2]=S,r[o*2+1]=0,o++,v());const k=()=>{r[o*2]=_,r[o*2+1]=P,o++};if(f>_){const x=r[(o-1)*2];r[(o-1)*2]=S,k(),v(),r[o*2]=x,r[o*2+1]=r[(o-2)*2+1],o++}else k()}if(i[i.length-1].node.endPosition.column+1<t){const s=new Uint32Array(r.length+2);s.set(r),r=s,r[o*2]=t,r[o*2+1]=0}return r}findMetadata(n){const e=this._colorThemeData.resolveScopes([[n]]);if(!e)return 0;let t=0;if(typeof e.italic<"u"){const i=e.italic?m.Italic:0;t|=i|g.ITALIC_MASK}if(typeof e.bold<"u"){const i=e.bold?m.Bold:0;t|=i|g.BOLD_MASK}if(typeof e.underline<"u"){const i=e.underline?m.Underline:0;t|=i|g.UNDERLINE_MASK}if(typeof e.strikethrough<"u"){const i=e.strikethrough?m.Strikethrough:0;t|=i|g.STRIKETHROUGH_MASK}if(e.foreground){const r=this._colorThemeData.getTokenColorIndex().get(e?.foreground)<<g.FOREGROUND_OFFSET;t|=r}return t}dispose(){super.dispose(),this._query?.delete(),this._query=void 0}};h=T([c(2,U),c(3,V)],h),K(X,p,G.Eager);export{X as ITreeSitterTokenizationFeature};
