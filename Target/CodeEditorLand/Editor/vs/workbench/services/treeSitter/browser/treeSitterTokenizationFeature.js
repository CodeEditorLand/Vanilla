var R=Object.defineProperty;var M=Object.getOwnPropertyDescriptor;var T=(g,u,t,r)=>{for(var e=r>1?void 0:r?M(u,t):u,o=g.length-1,i;o>=0;o--)(i=g[o])&&(e=(r?i(u,t,e):i(e))||e);return r&&e&&R(u,t,e),e},c=(g,u)=>(t,r)=>u(t,r,g);import{Emitter as q,Event as D}from"../../../../base/common/event.js";import{Disposable as E,DisposableMap as z,DisposableStore as w}from"../../../../base/common/lifecycle.js";import{FileAccess as Q}from"../../../../base/common/network.js";import{LazyTokenizationSupport as F,TreeSitterTokenizationRegistry as L}from"../../../../editor/common/languages.js";import"../../../../editor/common/model.js";import{EDITOR_EXPERIMENTAL_PREFER_TREESITTER as O,ITreeSitterParserService as U}from"../../../../editor/common/services/treeSitterParserService.js";import"../../../../editor/common/textModelEvents.js";import{ColumnRange as S}from"../../../../editor/contrib/inlineCompletions/browser/utils.js";import{IConfigurationService as N}from"../../../../platform/configuration/common/configuration.js";import{IFileService as B}from"../../../../platform/files/common/files.js";import{InstantiationType as G,registerSingleton as V}from"../../../../platform/instantiation/common/extensions.js";import{createDecorator as W,IInstantiationService as X}from"../../../../platform/instantiation/common/instantiation.js";import{IThemeService as $}from"../../../../platform/theme/common/themeService.js";import{findMetadata as j}from"../../themes/common/colorThemeData.js";import{ILanguageService as H}from"../../../../editor/common/languages/language.js";const J=["typescript"],K=W("treeSitterTokenizationFeature");let f=class extends E{constructor(t,r,e,o){super();this._languageService=t;this._configurationService=r;this._instantiationService=e;this._fileService=o;this._handleGrammarsExtPoint(),this._register(this._configurationService.onDidChangeConfiguration(i=>{i.affectsConfiguration(O)&&this._handleGrammarsExtPoint()}))}_serviceBrand;_tokenizersRegistrations=new z;_getSetting(){return this._configurationService.getValue(O)||[]}_handleGrammarsExtPoint(){const t=this._getSetting();for(const e of t)if(J.includes(e)&&!this._tokenizersRegistrations.has(e)){const o=new F(()=>this._createTokenizationSupport(e)),i=new w;i.add(o),i.add(L.registerFactory(e,o)),this._tokenizersRegistrations.set(e,i),L.getOrCreate(e)}const r=[...this._tokenizersRegistrations.keys()].filter(e=>!t.includes(e));for(const e of r)this._tokenizersRegistrations.deleteAndDispose(e)}async _fetchQueries(t){const r=`vs/editor/common/languages/highlights/${t}.scm`;return(await this._fileService.readFile(Q.asFileUri(r))).value.toString()}async _createTokenizationSupport(t){const r=await this._fetchQueries(t);return this._instantiationService.createInstance(h,r,t,this._languageService.languageIdCodec)}};f=T([c(0,H),c(1,N),c(2,X),c(3,B)],f);let h=class extends E{constructor(t,r,e,o,i){super();this._queries=t;this._languageId=r;this._languageIdCodec=e;this._treeSitterService=o;this._themeService=i;this._register(D.runAndSubscribe(this._themeService.onDidColorThemeChange,()=>this.reset())),this._register(this._treeSitterService.onDidUpdateTree(n=>{const s=n.textModel.getLineCount();this._onDidChangeTokens.fire({textModel:n.textModel,changes:{semanticTokensApplied:!1,ranges:n.ranges.map(d=>({fromLineNumber:d.startLineNumber,toLineNumber:d.endLineNumber<s?d.endLineNumber:s}))}})}))}_query;_onDidChangeTokens=new q;onDidChangeTokens=this._onDidChangeTokens.event;_colorThemeData;_languageAddedListener;_getTree(t){return this._treeSitterService.getParseResult(t)}_ensureQuery(){if(!this._query){const t=this._treeSitterService.getOrInitLanguage(this._languageId);if(!t){this._languageAddedListener||(this._languageAddedListener=this._register(D.onceIf(this._treeSitterService.onDidAddLanguage,r=>r.id===this._languageId)(r=>{this._query=r.language.query(this._queries)})));return}this._query=t.query(this._queries)}return this._query}reset(){this._colorThemeData=this._themeService.getColorTheme()}captureAtPosition(t,r,e){const o=this._getTree(e);return this._captureAtRange(t,new S(r,r),o?.tree)}captureAtPositionTree(t,r,e){return this._captureAtRange(t,new S(r,r),e)}_captureAtRange(t,r,e){const o=this._ensureQuery();return!e||!o?[]:o.captures(e.rootNode,{startPosition:{row:t-1,column:r.startColumn-1},endPosition:{row:t-1,column:r.endColumnExclusive}})}tokenizeEncoded(t,r){const e=r.getLineMaxColumn(t),o=this._getTree(r),i=this._captureAtRange(t,new S(1,e),o?.tree);if(i.length===0)return;const n=Array(i.length);n.fill({endOffset:0,scopes:[]});let s=0;const d=r.getOffsetAt({lineNumber:t,column:1}),m=()=>{n.push({endOffset:0,scopes:[]})},b=this._languageIdCodec.encodeLanguageId(this._languageId);for(let a=0;a<i.length;a++){const l=i[a],y=l.node.endIndex<d+e?l.node.endIndex:d+e,k=l.node.startIndex<d?d:l.node.startIndex,v=y-d;let p;const C=y-k;a>0?p=n[s-1].endOffset:p=k-d-1;const I=v-C;p>=0&&p<I&&(n[s]={endOffset:I,scopes:[]},s++,m());const P=()=>{n[s]={endOffset:v,scopes:[l.name]},s++};if(p>=v){const A=s>=2?n[s-2].endOffset:0,x=n[s-1].endOffset;A+C===x?n[s-1].scopes.push(l.name):(n[s-1].endOffset=I,P(),m(),n[s].endOffset=x,n[s].scopes=n[s-2].scopes,s++)}else P()}i[i.length-1].node.endPosition.column+1<e&&(m(),n[s].endOffset=e);const _=new Uint32Array(n.length*2);for(let a=0;a<n.length;a++)_[a*2]=n[a].endOffset,_[a*2+1]=j(this._colorThemeData,n[a].scopes,b);return _}dispose(){super.dispose(),this._query?.delete(),this._query=void 0}};h=T([c(3,U),c(4,$)],h),V(K,f,G.Eager);export{K as ITreeSitterTokenizationFeature};
