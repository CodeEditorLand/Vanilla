import s from"assert";import{ensureNoDisposablesAreLeakedInTestSuite as u}from"../../../../../base/test/common/utils.js";import{ArrayEdit as f,MonotonousIndexTransformer as w,SingleArrayEdit as d}from"../../browser/arrayOperation.js";suite("array operation",()=>{function o(i,n){const e=[];for(let r=i;r<n;r++)e.push(r);return e}test("simple",()=>{const i=new f([new d(4,3,2),new d(8,0,2),new d(9,2,0)]),n=o(0,15).map(t=>`item${t}`),e=n.slice();i.applyToArray(e),s.deepStrictEqual(e,["item0","item1","item2","item3",void 0,void 0,"item7",void 0,void 0,"item8","item11","item12","item13","item14"]);const r=new w(i);s.deepStrictEqual(o(0,15).map(t=>{const m=r.transform(t);let a=`arr[${t}]: ${n[t]} -> `;return m!==void 0?a+=`newArr[${m}]: ${e[m]}`:a+="undefined",a}),["arr[0]: item0 -> newArr[0]: item0","arr[1]: item1 -> newArr[1]: item1","arr[2]: item2 -> newArr[2]: item2","arr[3]: item3 -> newArr[3]: item3","arr[4]: item4 -> undefined","arr[5]: item5 -> undefined","arr[6]: item6 -> undefined","arr[7]: item7 -> newArr[6]: item7","arr[8]: item8 -> newArr[9]: item8","arr[9]: item9 -> undefined","arr[10]: item10 -> undefined","arr[11]: item11 -> newArr[10]: item11","arr[12]: item12 -> newArr[11]: item12","arr[13]: item13 -> newArr[12]: item13","arr[14]: item14 -> newArr[13]: item14"])}),u()});
