import{compareBy as o,numberComparator as i}from"../../../../base/common/arrays.js";class d{edits;constructor(e){this.edits=e.slice().sort(o(r=>r.offset,i))}applyToArray(e){for(let r=this.edits.length-1;r>=0;r--){const t=this.edits[r];e.splice(t.offset,t.length,...new Array(t.newLength))}}}class m{constructor(e,r,t){this.offset=e;this.length=r;this.newLength=t}toString(){return`[${this.offset}, +${this.length}) -> +${this.newLength}}`}}class s{constructor(e){this.transformation=e}static fromMany(e){const r=e.map(t=>new s(t));return new a(r)}idx=0;offset=0;transform(e){let r=this.transformation.edits[this.idx];for(;r&&r.offset+r.length<=e;)this.offset+=r.newLength-r.length,this.idx++,r=this.transformation.edits[this.idx];if(!(r&&r.offset<=e))return e+this.offset}}class a{constructor(e){this.transformers=e}transform(e){for(const r of this.transformers){const t=r.transform(e);if(t===void 0)return;e=t}return e}}export{d as ArrayEdit,a as CombinedIndexTransformer,s as MonotonousIndexTransformer,m as SingleArrayEdit};
