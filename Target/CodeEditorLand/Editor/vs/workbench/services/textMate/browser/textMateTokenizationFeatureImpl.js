var M=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var b=(a,i,e,t)=>{for(var n=t>1?void 0:t?C(i,e):i,r=a.length-1,o;r>=0;r--)(o=a[r])&&(n=(t?o(i,e,n):o(n))||n);return t&&n&&M(i,e,n),n},m=(a,i)=>(e,t)=>i(e,t,a);import{importAMDNodeModule as k,resolveAmdNodeModulePath as L}from"../../../../amdX.js";import*as z from"../../../../base/browser/dom.js";import{canASAR as P,isESM as E}from"../../../../base/common/amd.js";import{equals as w}from"../../../../base/common/arrays.js";import{Color as F}from"../../../../base/common/color.js";import{onUnexpectedError as D}from"../../../../base/common/errors.js";import{Disposable as O,DisposableStore as R}from"../../../../base/common/lifecycle.js";import{FileAccess as S,nodeModulesAsarUnpackedPath as G,nodeModulesPath as x}from"../../../../base/common/network.js";import{observableFromEvent as A}from"../../../../base/common/observable.js";import{isWeb as j}from"../../../../base/common/platform.js";import*as T from"../../../../base/common/resources.js";import*as I from"../../../../base/common/types.js";import"../../../../base/common/uri.js";import{StandardTokenType as _}from"../../../../editor/common/encodedTokenAttributes.js";import{LazyTokenizationSupport as V,TokenizationRegistry as y}from"../../../../editor/common/languages.js";import{ILanguageService as B}from"../../../../editor/common/languages/language.js";import{generateTokensCSSForColorMap as N}from"../../../../editor/common/languages/supports/tokenization.js";import*as g from"../../../../nls.js";import{IConfigurationService as U}from"../../../../platform/configuration/common/configuration.js";import{IExtensionResourceLoaderService as W}from"../../../../platform/extensionResourceLoader/common/extensionResourceLoader.js";import{IInstantiationService as q}from"../../../../platform/instantiation/common/instantiation.js";import{ILogService as H}from"../../../../platform/log/common/log.js";import{INotificationService as J}from"../../../../platform/notification/common/notification.js";import{IProgressService as $,ProgressLocation as K}from"../../../../platform/progress/common/progress.js";import{ITelemetryService as Q}from"../../../../platform/telemetry/common/telemetry.js";import{IWorkbenchEnvironmentService as X}from"../../environment/common/environmentService.js";import"../../extensions/common/extensionsRegistry.js";import{IWorkbenchThemeService as Y}from"../../themes/common/workbenchThemeService.js";import{missingTMGrammarErrorMessage as Z,TMGrammarFactory as ee}from"../common/TMGrammarFactory.js";import{grammarsExtPoint as p}from"../common/TMGrammars.js";import"../common/TMScopeRegistry.js";import{ThreadedBackgroundTokenizerFactory as te}from"./backgroundTokenization/threadedBackgroundTokenizerFactory.js";import"./textMateTokenizationFeature.js";import{TextMateTokenizationSupport as re}from"./tokenizationSupport/textMateTokenizationSupport.js";import{TokenizationSupportWithLineLimit as ie}from"./tokenizationSupport/tokenizationSupportWithLineLimit.js";let d=class extends O{constructor(e,t,n,r,o,u,l,c,s,h){super();this._languageService=e;this._themeService=t;this._extensionResourceLoaderService=n;this._notificationService=r;this._logService=o;this._configurationService=u;this._progressService=l;this._environmentService=c;this._instantiationService=s;this._telemetryService=h;this._styleElement=z.createStyleSheet(),this._styleElement.className="vscode-tokens-styles",p.setHandler(f=>this._handleGrammarsExtPoint(f)),this._updateTheme(this._themeService.getColorTheme(),!0),this._register(this._themeService.onDidColorThemeChange(()=>{this._updateTheme(this._themeService.getColorTheme(),!1)})),this._register(this._languageService.onDidRequestRichLanguageFeatures(f=>{this._createdModes.push(f)}))}static reportTokenizationTimeCounter={sync:0,async:0};_serviceBrand;_styleElement;_createdModes=[];_encounteredLanguages=[];_debugMode=!1;_debugModePrintFunc=()=>{};_grammarDefinitions=null;_grammarFactory=null;_tokenizersRegistrations=new R;_currentTheme=null;_currentTokenColorMap=null;_threadedBackgroundTokenizerFactory=this._instantiationService.createInstance(te,(e,t,n,r,o)=>this._reportTokenizationTime(e,t,n,r,!0,o),()=>this.getAsyncTokenizationEnabled());getAsyncTokenizationEnabled(){return!!this._configurationService.getValue("editor.experimental.asyncTokenization")}getAsyncTokenizationVerification(){return!!this._configurationService.getValue("editor.experimental.asyncTokenizationVerification")}_handleGrammarsExtPoint(e){this._grammarDefinitions=null,this._grammarFactory&&(this._grammarFactory.dispose(),this._grammarFactory=null),this._tokenizersRegistrations.clear(),this._grammarDefinitions=[];for(const t of e){const n=t.value;for(const r of n){const o=this._validateGrammarDefinition(t,r);if(o&&(this._grammarDefinitions.push(o),o.language)){const u=new V(()=>this._createTokenizationSupport(o.language));this._tokenizersRegistrations.add(u),this._tokenizersRegistrations.add(y.registerFactory(o.language,u))}}}this._threadedBackgroundTokenizerFactory.setGrammarDefinitions(this._grammarDefinitions);for(const t of this._createdModes)y.getOrCreate(t)}_validateGrammarDefinition(e,t){if(!ae(e.description.extensionLocation,t,e.collector,this._languageService))return null;const n=T.joinPath(e.description.extensionLocation,t.path),r=Object.create(null);if(t.embeddedLanguages){const c=Object.keys(t.embeddedLanguages);for(let s=0,h=c.length;s<h;s++){const f=c[s],v=t.embeddedLanguages[f];typeof v=="string"&&this._languageService.isRegisteredLanguageId(v)&&(r[f]=this._languageService.languageIdCodec.encodeLanguageId(v))}}const o=Object.create(null);if(t.tokenTypes){const c=Object.keys(t.tokenTypes);for(const s of c)switch(t.tokenTypes[s]){case"string":o[s]=_.String;break;case"other":o[s]=_.Other;break;case"comment":o[s]=_.Comment;break}}const u=t.language&&this._languageService.isRegisteredLanguageId(t.language)?t.language:void 0;function l(c,s){return!Array.isArray(c)||!c.every(h=>typeof h=="string")?s:c}return{location:n,language:u,scopeName:t.scopeName,embeddedLanguages:r,tokenTypes:o,injectTo:t.injectTo,balancedBracketSelectors:l(t.balancedBracketScopes,["*"]),unbalancedBracketSelectors:l(t.unbalancedBracketScopes,[]),sourceExtensionId:e.description.id}}startDebugMode(e,t){if(this._debugMode){this._notificationService.error(g.localize("alreadyDebugging","Already Logging."));return}this._debugModePrintFunc=e,this._debugMode=!0,this._debugMode&&this._progressService.withProgress({location:K.Notification,buttons:[g.localize("stop","Stop")]},n=>(n.report({message:g.localize("progress1","Preparing to log TM Grammar parsing. Press Stop when finished.")}),this._getVSCodeOniguruma().then(r=>(r.setDefaultDebugCall(!0),n.report({message:g.localize("progress2","Now logging TM Grammar parsing. Press Stop when finished.")}),new Promise((o,u)=>{})))),n=>{this._getVSCodeOniguruma().then(r=>{this._debugModePrintFunc=()=>{},this._debugMode=!1,r.setDefaultDebugCall(!1),t()})})}_canCreateGrammarFactory(){return!!this._grammarDefinitions}async _getOrCreateGrammarFactory(){if(this._grammarFactory)return this._grammarFactory;const[e,t]=await Promise.all([k("vscode-textmate","release/main.js"),this._getVSCodeOniguruma()]),n=Promise.resolve({createOnigScanner:r=>t.createOnigScanner(r),createOnigString:r=>t.createOnigString(r)});return this._grammarFactory?this._grammarFactory:(this._grammarFactory=new ee({logTrace:r=>this._logService.trace(r),logError:(r,o)=>this._logService.error(r,o),readFile:r=>this._extensionResourceLoaderService.readExtensionResource(r)},this._grammarDefinitions||[],e,n),this._updateTheme(this._themeService.getColorTheme(),!0),this._grammarFactory)}async _createTokenizationSupport(e){if(!this._languageService.isRegisteredLanguageId(e)||!this._canCreateGrammarFactory())return null;try{const t=await this._getOrCreateGrammarFactory();if(!t.has(e))return null;const n=this._languageService.languageIdCodec.encodeLanguageId(e),r=await t.createGrammar(e,n);if(!r.grammar)return null;const o=se("editor.maxTokenizationLineLength",e,-1,this._configurationService),u=new re(r.grammar,r.initialState,r.containsEmbeddedLanguages,(c,s)=>this._threadedBackgroundTokenizerFactory.createBackgroundTokenizer(c,s,o),()=>this.getAsyncTokenizationVerification(),(c,s,h)=>{this._reportTokenizationTime(c,e,r.sourceExtensionId,s,!1,h)},!0),l=u.onDidEncounterLanguage(c=>{if(!this._encounteredLanguages[c]){const s=this._languageService.languageIdCodec.decodeLanguageId(c);this._encounteredLanguages[c]=!0,this._languageService.requestBasicLanguageFeatures(s)}});return new ie(n,u,l,o)}catch(t){return t.message&&t.message===Z||D(t),null}}_updateTheme(e,t){if(!t&&this._currentTheme&&this._currentTokenColorMap&&oe(this._currentTheme.settings,e.tokenColors)&&w(this._currentTokenColorMap,e.tokenColorMap))return;this._currentTheme={name:e.label,settings:e.tokenColors},this._currentTokenColorMap=e.tokenColorMap,this._grammarFactory?.setTheme(this._currentTheme,this._currentTokenColorMap);const n=ne(this._currentTokenColorMap),r=N(n);this._styleElement.textContent=r,y.setColorMap(n),this._currentTheme&&this._currentTokenColorMap&&this._threadedBackgroundTokenizerFactory.acceptTheme(this._currentTheme,this._currentTokenColorMap)}async createTokenizer(e){if(!this._languageService.isRegisteredLanguageId(e))return null;const t=await this._getOrCreateGrammarFactory();if(!t.has(e))return null;const n=this._languageService.languageIdCodec.encodeLanguageId(e),{grammar:r}=await t.createGrammar(e,n);return r}_vscodeOniguruma=null;_getVSCodeOniguruma(){return this._vscodeOniguruma||(this._vscodeOniguruma=(async()=>{const[e,t]=await Promise.all([k("vscode-oniguruma","release/main.js"),this._loadVSCodeOnigurumaWASM()]);return await e.loadWASM({data:t,print:n=>{this._debugModePrintFunc(n)}}),e})()),this._vscodeOniguruma}async _loadVSCodeOnigurumaWASM(){return j?await(await fetch(E?L("vscode-oniguruma","release/onig.wasm"):S.asBrowserUri("vscode-oniguruma/../onig.wasm").toString(!0))).arrayBuffer():await fetch(P&&this._environmentService.isBuilt?S.asBrowserUri(`${G}/vscode-oniguruma/release/onig.wasm`).toString(!0):S.asBrowserUri(`${x}/vscode-oniguruma/release/onig.wasm`).toString(!0))}_reportTokenizationTime(e,t,n,r,o,u){const l=o?"async":"sync";d.reportTokenizationTimeCounter[l]>50||(d.reportTokenizationTimeCounter[l]===0&&setTimeout(()=>{d.reportTokenizationTimeCounter[l]=0},1e3*60*60),d.reportTokenizationTimeCounter[l]++,this._telemetryService.publicLog2("editor.tokenizedLine",{timeMs:e,languageId:t,lineLength:r,fromWorker:o,sourceExtensionId:n,isRandomSample:u,tokenizationSetting:this.getAsyncTokenizationEnabled()?this.getAsyncTokenizationVerification()?2:1:0}))}};d=b([m(0,B),m(1,Y),m(2,W),m(3,J),m(4,H),m(5,U),m(6,$),m(7,X),m(8,q),m(9,Q)],d);function ne(a){const i=[null];for(let e=1,t=a.length;e<t;e++)i[e]=F.fromHex(a[e]);return i}function oe(a,i){if(!i||!a||i.length!==a.length)return!1;for(let e=i.length-1;e>=0;e--){const t=i[e],n=a[e];if(t.scope!==n.scope)return!1;const r=t.settings,o=n.settings;if(r&&o){if(r.fontStyle!==o.fontStyle||r.foreground!==o.foreground||r.background!==o.background)return!1}else if(!r||!o)return!1}return!0}function ae(a,i,e,t){if(i.language&&(typeof i.language!="string"||!t.isRegisteredLanguageId(i.language)))return e.error(g.localize("invalid.language","Unknown language in `contributes.{0}.language`. Provided value: {1}",p.name,String(i.language))),!1;if(!i.scopeName||typeof i.scopeName!="string")return e.error(g.localize("invalid.scopeName","Expected string in `contributes.{0}.scopeName`. Provided value: {1}",p.name,String(i.scopeName))),!1;if(!i.path||typeof i.path!="string")return e.error(g.localize("invalid.path.0","Expected string in `contributes.{0}.path`. Provided value: {1}",p.name,String(i.path))),!1;if(i.injectTo&&(!Array.isArray(i.injectTo)||i.injectTo.some(r=>typeof r!="string")))return e.error(g.localize("invalid.injectTo","Invalid value in `contributes.{0}.injectTo`. Must be an array of language scope names. Provided value: {1}",p.name,JSON.stringify(i.injectTo))),!1;if(i.embeddedLanguages&&!I.isObject(i.embeddedLanguages))return e.error(g.localize("invalid.embeddedLanguages","Invalid value in `contributes.{0}.embeddedLanguages`. Must be an object map from scope name to language. Provided value: {1}",p.name,JSON.stringify(i.embeddedLanguages))),!1;if(i.tokenTypes&&!I.isObject(i.tokenTypes))return e.error(g.localize("invalid.tokenTypes","Invalid value in `contributes.{0}.tokenTypes`. Must be an object map from scope name to token type. Provided value: {1}",p.name,JSON.stringify(i.tokenTypes))),!1;const n=T.joinPath(a,i.path);return T.isEqualOrParent(n,a)||e.warn(g.localize("invalid.path.1","Expected `contributes.{0}.path` ({1}) to be included inside extension's folder ({2}). This might make the extension non-portable.",p.name,n.path,a.path)),!0}function se(a,i,e,t){return A(n=>t.onDidChangeConfiguration(r=>{r.affectsConfiguration(a,{overrideIdentifier:i})&&n(r)}),()=>t.getValue(a,{overrideIdentifier:i})??e)}export{d as TextMateTokenizationFeature};
