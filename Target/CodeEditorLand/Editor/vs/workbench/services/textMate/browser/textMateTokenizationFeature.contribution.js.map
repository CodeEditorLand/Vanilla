{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/textMate/browser/textMateTokenizationFeature.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport {\n\ttype IWorkbenchContribution,\n\tWorkbenchPhase,\n\tregisterWorkbenchContribution2,\n} from \"../../../common/contributions.js\";\nimport { ITextMateTokenizationService } from \"./textMateTokenizationFeature.js\";\nimport { TextMateTokenizationFeature } from \"./textMateTokenizationFeatureImpl.js\";\n\n/**\n * Makes sure the ITextMateTokenizationService is instantiated\n */\nclass TextMateTokenizationInstantiator implements IWorkbenchContribution {\n\tstatic readonly ID = \"workbench.contrib.textMateTokenizationInstantiator\";\n\n\tconstructor(\n\t\t@ITextMateTokenizationService _textMateTokenizationService: ITextMateTokenizationService\n\t) { }\n}\n\nregisterSingleton(\n\tITextMateTokenizationService,\n\tTextMateTokenizationFeature,\n\tInstantiationType.Eager,\n);\n\nregisterWorkbenchContribution2(\n\tTextMateTokenizationInstantiator.ID,\n\tTextMateTokenizationInstantiator,\n\tWorkbenchPhase.BlockRestore,\n);\n"],
  "mappings": ";;;;;;;;;;;;AAKA;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP;AAAA,EAEC;AAAA,EACA;AAAA,OACM;AACP,SAAS,oCAAoC;AAC7C,SAAS,mCAAmC;AAK5C,IAAM,mCAAN,MAAyE;AAAA,EApBzE,OAoByE;AAAA;AAAA;AAAA,EACxE,OAAgB,KAAK;AAAA,EAErB,YAC+B,8BAC7B;AAAA,EAAE;AACL;AANM,mCAAN;AAAA,EAIG;AAAA,GAJG;AAQN;AAAA,EACC;AAAA,EACA;AAAA,EACA,kBAAkB;AACnB;AAEA;AAAA,EACC,iCAAiC;AAAA,EACjC;AAAA,EACA,eAAe;AAChB;",
  "names": []
}
