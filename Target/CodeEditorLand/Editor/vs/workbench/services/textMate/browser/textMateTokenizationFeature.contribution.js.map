{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/textMate/browser/textMateTokenizationFeature.contribution.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { registerSingleton, InstantiationType } from '../../../../platform/instantiation/common/extensions.js';\nimport { ITextMateTokenizationService } from './textMateTokenizationFeature.js';\nimport { TextMateTokenizationFeature } from './textMateTokenizationFeatureImpl.js';\nimport { IWorkbenchContribution, WorkbenchPhase, registerWorkbenchContribution2 } from '../../../common/contributions.js';\n\n/**\n * Makes sure the ITextMateTokenizationService is instantiated\n */\nclass TextMateTokenizationInstantiator implements IWorkbenchContribution {\n\n\tstatic readonly ID = 'workbench.contrib.textMateTokenizationInstantiator';\n\n\tconstructor(\n\t\t@ITextMateTokenizationService _textMateTokenizationService: ITextMateTokenizationService\n\t) { }\n}\n\nregisterSingleton(ITextMateTokenizationService, TextMateTokenizationFeature, InstantiationType.Eager);\n\nregisterWorkbenchContribution2(TextMateTokenizationInstantiator.ID, TextMateTokenizationInstantiator, WorkbenchPhase.BlockRestore);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,mBAAmB,yBAAyB;AACrD,SAAS,oCAAoC;AAC7C,SAAS,mCAAmC;AAC5C,SAAS,wBAAwB,gBAAgB,sCAAsC;AAKvF,IAAM,mCAAN,MAAyE;AAAA,EAbzE,OAayE;AAAA;AAAA;AAAA,EAExE,OAAgB,KAAK;AAAA,EAErB,YAC+B,8BAC7B;AAAA,EAAE;AACL;AAPM,mCAAN;AAAA,EAKG;AAAA,GALG;AASN,kBAAkB,8BAA8B,6BAA6B,kBAAkB,KAAK;AAEpG,+BAA+B,iCAAiC,IAAI,kCAAkC,eAAe,YAAY;",
  "names": []
}
