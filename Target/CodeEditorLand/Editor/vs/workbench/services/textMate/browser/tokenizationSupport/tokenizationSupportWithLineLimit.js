import{nullTokenizeEncoded as o}from"../../../../../editor/common/languages/nullTokenize.js";import{Disposable as i}from"../../../../../base/common/lifecycle.js";import{keepObserved as r}from"../../../../../base/common/observable.js";class x extends i{constructor(e,t,n,u){super();this._encodedLanguageId=e;this._actual=t;this._maxTokenizationLineLength=u;this._register(r(this._maxTokenizationLineLength)),this._register(n)}get backgroundTokenizerShouldOnlyVerifyTokens(){return this._actual.backgroundTokenizerShouldOnlyVerifyTokens}getInitialState(){return this._actual.getInitialState()}tokenize(e,t,n){throw new Error("Not supported!")}tokenizeEncoded(e,t,n){return e.length>=this._maxTokenizationLineLength.get()?o(this._encodedLanguageId,n):this._actual.tokenizeEncoded(e,t,n)}createBackgroundTokenizer(e,t){if(this._actual.createBackgroundTokenizer)return this._actual.createBackgroundTokenizer(e,t)}}export{x as TokenizationSupportWithLineLimit};
