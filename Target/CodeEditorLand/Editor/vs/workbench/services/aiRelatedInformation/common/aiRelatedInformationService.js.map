{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/aiRelatedInformation/common/aiRelatedInformationService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\ttype CancelablePromise,\n\tcreateCancelablePromise,\n\traceTimeout,\n} from \"../../../../base/common/async.js\";\nimport type { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport type { IDisposable } from \"../../../../base/common/lifecycle.js\";\nimport { StopWatch } from \"../../../../base/common/stopwatch.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport {\n\ttype IAiRelatedInformationProvider,\n\tIAiRelatedInformationService,\n\ttype RelatedInformationResult,\n\ttype RelatedInformationType,\n} from \"./aiRelatedInformation.js\";\n\nexport class AiRelatedInformationService\n\timplements IAiRelatedInformationService\n{\n\treadonly _serviceBrand: undefined;\n\n\tstatic readonly DEFAULT_TIMEOUT = 1000 * 10; // 10 seconds\n\n\tprivate readonly _providers: Map<\n\t\tRelatedInformationType,\n\t\tIAiRelatedInformationProvider[]\n\t> = new Map();\n\n\tconstructor(@ILogService private readonly logService: ILogService) { }\n\n\tisEnabled(): boolean {\n\t\treturn this._providers.size > 0;\n\t}\n\n\tregisterAiRelatedInformationProvider(\n\t\ttype: RelatedInformationType,\n\t\tprovider: IAiRelatedInformationProvider,\n\t): IDisposable {\n\t\tconst providers = this._providers.get(type) ?? [];\n\t\tproviders.push(provider);\n\t\tthis._providers.set(type, providers);\n\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tconst providers = this._providers.get(type) ?? [];\n\t\t\t\tconst index = providers.indexOf(provider);\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tproviders.splice(index, 1);\n\t\t\t\t}\n\t\t\t\tif (providers.length === 0) {\n\t\t\t\t\tthis._providers.delete(type);\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t}\n\n\tasync getRelatedInformation(\n\t\tquery: string,\n\t\ttypes: RelatedInformationType[],\n\t\ttoken: CancellationToken,\n\t): Promise<RelatedInformationResult[]> {\n\t\tif (this._providers.size === 0) {\n\t\t\tthrow new Error(\"No related information providers registered\");\n\t\t}\n\n\t\t// get providers for each type\n\t\tconst providers: IAiRelatedInformationProvider[] = [];\n\t\tfor (const type of types) {\n\t\t\tconst typeProviders = this._providers.get(type);\n\t\t\tif (typeProviders) {\n\t\t\t\tproviders.push(...typeProviders);\n\t\t\t}\n\t\t}\n\n\t\tif (providers.length === 0) {\n\t\t\tthrow new Error(\n\t\t\t\t\"No related information providers registered for the given types\",\n\t\t\t);\n\t\t}\n\n\t\tconst stopwatch = StopWatch.create();\n\n\t\tconst cancellablePromises: Array<\n\t\t\tCancelablePromise<RelatedInformationResult[]>\n\t\t> = providers.map((provider) => {\n\t\t\treturn createCancelablePromise(async (t) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst result = await provider.provideAiRelatedInformation(\n\t\t\t\t\t\tquery,\n\t\t\t\t\t\tt,\n\t\t\t\t\t);\n\t\t\t\t\t// double filter just in case\n\t\t\t\t\treturn result.filter((r) => types.includes(r.type));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// logged in extension host\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t});\n\t\t});\n\n\t\ttry {\n\t\t\tconst results = await raceTimeout(\n\t\t\t\tPromise.allSettled(cancellablePromises),\n\t\t\t\tAiRelatedInformationService.DEFAULT_TIMEOUT,\n\t\t\t\t() => {\n\t\t\t\t\tcancellablePromises.forEach((p) => p.cancel());\n\t\t\t\t\tthis.logService.warn(\n\t\t\t\t\t\t\"[AiRelatedInformationService]: Related information provider timed out\",\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t);\n\t\t\tif (!results) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tconst result = results\n\t\t\t\t.filter((r) => r.status === \"fulfilled\")\n\t\t\t\t.flatMap(\n\t\t\t\t\t(r) =>\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tr as PromiseFulfilledResult<\n\t\t\t\t\t\t\t\tRelatedInformationResult[]\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t).value,\n\t\t\t\t);\n\t\t\treturn result;\n\t\t} finally {\n\t\t\tstopwatch.stop();\n\t\t\tthis.logService.trace(\n\t\t\t\t`[AiRelatedInformationService]: getRelatedInformation took ${stopwatch.elapsed()}ms`,\n\t\t\t);\n\t\t}\n\t}\n}\n\nregisterSingleton(\n\tIAiRelatedInformationService,\n\tAiRelatedInformationService,\n\tInstantiationType.Delayed,\n);\n"],
  "mappings": ";;;;;;;;;;;;AAKA;AAAA,EAEC;AAAA,EACA;AAAA,OACM;AAGP,SAAS,iBAAiB;AAC1B;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,mBAAmB;AAC5B;AAAA,EAEC;AAAA,OAGM;AAEA,IAAM,8BAAN,MAEP;AAAA,EAUC,YAA0C,YAAyB;AAAzB;AAAA,EAA2B;AAAA,EArCtE,OA2BA;AAAA;AAAA;AAAA,EACU;AAAA,EAET,OAAgB,kBAAkB,MAAO;AAAA;AAAA,EAExB,aAGb,oBAAI,IAAI;AAAA,EAIZ,YAAqB;AACpB,WAAO,KAAK,WAAW,OAAO;AAAA,EAC/B;AAAA,EAEA,qCACC,MACA,UACc;AACd,UAAM,YAAY,KAAK,WAAW,IAAI,IAAI,KAAK,CAAC;AAChD,cAAU,KAAK,QAAQ;AACvB,SAAK,WAAW,IAAI,MAAM,SAAS;AAEnC,WAAO;AAAA,MACN,SAAS,6BAAM;AACd,cAAMA,aAAY,KAAK,WAAW,IAAI,IAAI,KAAK,CAAC;AAChD,cAAM,QAAQA,WAAU,QAAQ,QAAQ;AACxC,YAAI,UAAU,IAAI;AACjB,UAAAA,WAAU,OAAO,OAAO,CAAC;AAAA,QAC1B;AACA,YAAIA,WAAU,WAAW,GAAG;AAC3B,eAAK,WAAW,OAAO,IAAI;AAAA,QAC5B;AAAA,MACD,GATS;AAAA,IAUV;AAAA,EACD;AAAA,EAEA,MAAM,sBACL,OACA,OACA,OACsC;AACtC,QAAI,KAAK,WAAW,SAAS,GAAG;AAC/B,YAAM,IAAI,MAAM,6CAA6C;AAAA,IAC9D;AAGA,UAAM,YAA6C,CAAC;AACpD,eAAW,QAAQ,OAAO;AACzB,YAAM,gBAAgB,KAAK,WAAW,IAAI,IAAI;AAC9C,UAAI,eAAe;AAClB,kBAAU,KAAK,GAAG,aAAa;AAAA,MAChC;AAAA,IACD;AAEA,QAAI,UAAU,WAAW,GAAG;AAC3B,YAAM,IAAI;AAAA,QACT;AAAA,MACD;AAAA,IACD;AAEA,UAAM,YAAY,UAAU,OAAO;AAEnC,UAAM,sBAEF,UAAU,IAAI,CAAC,aAAa;AAC/B,aAAO,wBAAwB,OAAO,MAAM;AAC3C,YAAI;AACH,gBAAM,SAAS,MAAM,SAAS;AAAA,YAC7B;AAAA,YACA;AAAA,UACD;AAEA,iBAAO,OAAO,OAAO,CAAC,MAAM,MAAM,SAAS,EAAE,IAAI,CAAC;AAAA,QACnD,SAAS,GAAG;AAAA,QAEZ;AACA,eAAO,CAAC;AAAA,MACT,CAAC;AAAA,IACF,CAAC;AAED,QAAI;AACH,YAAM,UAAU,MAAM;AAAA,QACrB,QAAQ,WAAW,mBAAmB;AAAA,QACtC,4BAA4B;AAAA,QAC5B,MAAM;AACL,8BAAoB,QAAQ,CAAC,MAAM,EAAE,OAAO,CAAC;AAC7C,eAAK,WAAW;AAAA,YACf;AAAA,UACD;AAAA,QACD;AAAA,MACD;AACA,UAAI,CAAC,SAAS;AACb,eAAO,CAAC;AAAA,MACT;AACA,YAAM,SAAS,QACb,OAAO,CAAC,MAAM,EAAE,WAAW,WAAW,EACtC;AAAA,QACA,CAAC,MAEC,EAGC;AAAA,MACJ;AACD,aAAO;AAAA,IACR,UAAE;AACD,gBAAU,KAAK;AACf,WAAK,WAAW;AAAA,QACf,6DAA6D,UAAU,QAAQ,CAAC;AAAA,MACjF;AAAA,IACD;AAAA,EACD;AACD;AApHa,8BAAN;AAAA,EAYO;AAAA,GAZD;AAsHb;AAAA,EACC;AAAA,EACA;AAAA,EACA,kBAAkB;AACnB;",
  "names": ["providers"]
}
