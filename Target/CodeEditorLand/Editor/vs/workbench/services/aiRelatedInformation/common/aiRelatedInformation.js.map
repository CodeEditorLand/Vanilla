{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/aiRelatedInformation/common/aiRelatedInformation.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport type { IDisposable } from \"../../../../base/common/lifecycle.js\";\nimport { createDecorator } from \"../../../../platform/instantiation/common/instantiation.js\";\n\nexport const IAiRelatedInformationService =\n\tcreateDecorator<IAiRelatedInformationService>(\n\t\t\"IAiRelatedInformationService\",\n\t);\n\nexport enum RelatedInformationType {\n\tSymbolInformation = 1,\n\tCommandInformation = 2,\n\tSearchInformation = 3,\n\tSettingInformation = 4,\n}\n\ninterface RelatedInformationBaseResult {\n\ttype: RelatedInformationType;\n\tweight: number;\n}\n\nexport interface CommandInformationResult extends RelatedInformationBaseResult {\n\ttype: RelatedInformationType.CommandInformation;\n\tcommand: string;\n}\n\nexport interface SettingInformationResult extends RelatedInformationBaseResult {\n\ttype: RelatedInformationType.SettingInformation;\n\tsetting: string;\n}\n\nexport type RelatedInformationResult =\n\t| CommandInformationResult\n\t| SettingInformationResult;\n\nexport interface IAiRelatedInformationService {\n\treadonly _serviceBrand: undefined;\n\n\tisEnabled(): boolean;\n\tgetRelatedInformation(\n\t\tquery: string,\n\t\ttypes: RelatedInformationType[],\n\t\ttoken: CancellationToken,\n\t): Promise<RelatedInformationResult[]>;\n\tregisterAiRelatedInformationProvider(\n\t\ttype: RelatedInformationType,\n\t\tprovider: IAiRelatedInformationProvider,\n\t): IDisposable;\n}\n\nexport interface IAiRelatedInformationProvider {\n\tprovideAiRelatedInformation(\n\t\tquery: string,\n\t\ttoken: CancellationToken,\n\t): Promise<RelatedInformationResult[]>;\n}\n"],
  "mappings": "AAOA,SAAS,uBAAuB;AAEzB,MAAM,+BACZ;AAAA,EACC;AACD;AAEM,IAAK,yBAAL,kBAAKA,4BAAL;AACN,EAAAA,gDAAA,uBAAoB,KAApB;AACA,EAAAA,gDAAA,wBAAqB,KAArB;AACA,EAAAA,gDAAA,uBAAoB,KAApB;AACA,EAAAA,gDAAA,wBAAqB,KAArB;AAJW,SAAAA;AAAA,GAAA;",
  "names": ["RelatedInformationType"]
}
