{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/secrets/browser/secretStorageService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { SequencerByKey } from '../../../../base/common/async.js';\nimport { IEncryptionService } from '../../../../platform/encryption/common/encryptionService.js';\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { ISecretStorageProvider, ISecretStorageService, BaseSecretStorageService } from '../../../../platform/secrets/common/secrets.js';\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\nimport { IBrowserWorkbenchEnvironmentService } from '../../environment/browser/environmentService.js';\n\nexport class BrowserSecretStorageService extends BaseSecretStorageService {\n\n\tprivate readonly _secretStorageProvider: ISecretStorageProvider | undefined;\n\tprivate readonly _embedderSequencer: SequencerByKey<string> | undefined;\n\n\tconstructor(\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IEncryptionService encryptionService: IEncryptionService,\n\t\t@IBrowserWorkbenchEnvironmentService environmentService: IBrowserWorkbenchEnvironmentService,\n\t\t@ILogService logService: ILogService\n\t) {\n\t\t// We don't have encryption in the browser so instead we use the\n\t\t// in-memory base class implementation instead.\n\t\tsuper(true, storageService, encryptionService, logService);\n\n\t\tif (environmentService.options?.secretStorageProvider) {\n\t\t\tthis._secretStorageProvider = environmentService.options.secretStorageProvider;\n\t\t\tthis._embedderSequencer = new SequencerByKey<string>();\n\t\t}\n\t}\n\n\toverride get(key: string): Promise<string | undefined> {\n\t\tif (this._secretStorageProvider) {\n\t\t\treturn this._embedderSequencer!.queue(key, () => this._secretStorageProvider!.get(key));\n\t\t}\n\n\t\treturn super.get(key);\n\t}\n\n\toverride set(key: string, value: string): Promise<void> {\n\t\tif (this._secretStorageProvider) {\n\t\t\treturn this._embedderSequencer!.queue(key, async () => {\n\t\t\t\tawait this._secretStorageProvider!.set(key, value);\n\t\t\t\tthis.onDidChangeSecretEmitter.fire(key);\n\t\t\t});\n\t\t}\n\n\t\treturn super.set(key, value);\n\t}\n\n\toverride delete(key: string): Promise<void> {\n\t\tif (this._secretStorageProvider) {\n\t\t\treturn this._embedderSequencer!.queue(key, async () => {\n\t\t\t\tawait this._secretStorageProvider!.delete(key);\n\t\t\t\tthis.onDidChangeSecretEmitter.fire(key);\n\t\t\t});\n\t\t}\n\n\t\treturn super.delete(key);\n\t}\n\n\toverride get type() {\n\t\tif (this._secretStorageProvider) {\n\t\t\treturn this._secretStorageProvider.type;\n\t\t}\n\n\t\treturn super.type;\n\t}\n}\n\nregisterSingleton(ISecretStorageService, BrowserSecretStorageService, InstantiationType.Delayed);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,sBAAsB;AAC/B,SAAS,0BAA0B;AACnC,SAAS,mBAAmB,yBAAyB;AACrD,SAAS,mBAAmB;AAC5B,SAAS,wBAAwB,uBAAuB,gCAAgC;AACxF,SAAS,uBAAuB;AAChC,SAAS,2CAA2C;AAE7C,IAAM,8BAAN,cAA0C,yBAAyB;AAAA,EAb1E,OAa0E;AAAA;AAAA;AAAA,EAExD;AAAA,EACA;AAAA,EAEjB,YACkB,gBACG,mBACiB,oBACxB,YACZ;AAGD,UAAM,MAAM,gBAAgB,mBAAmB,UAAU;AAEzD,QAAI,mBAAmB,SAAS,uBAAuB;AACtD,WAAK,yBAAyB,mBAAmB,QAAQ;AACzD,WAAK,qBAAqB,IAAI,eAAuB;AAAA,IACtD;AAAA,EACD;AAAA,EAES,IAAI,KAA0C;AACtD,QAAI,KAAK,wBAAwB;AAChC,aAAO,KAAK,mBAAoB,MAAM,KAAK,MAAM,KAAK,uBAAwB,IAAI,GAAG,CAAC;AAAA,IACvF;AAEA,WAAO,MAAM,IAAI,GAAG;AAAA,EACrB;AAAA,EAES,IAAI,KAAa,OAA8B;AACvD,QAAI,KAAK,wBAAwB;AAChC,aAAO,KAAK,mBAAoB,MAAM,KAAK,YAAY;AACtD,cAAM,KAAK,uBAAwB,IAAI,KAAK,KAAK;AACjD,aAAK,yBAAyB,KAAK,GAAG;AAAA,MACvC,CAAC;AAAA,IACF;AAEA,WAAO,MAAM,IAAI,KAAK,KAAK;AAAA,EAC5B;AAAA,EAES,OAAO,KAA4B;AAC3C,QAAI,KAAK,wBAAwB;AAChC,aAAO,KAAK,mBAAoB,MAAM,KAAK,YAAY;AACtD,cAAM,KAAK,uBAAwB,OAAO,GAAG;AAC7C,aAAK,yBAAyB,KAAK,GAAG;AAAA,MACvC,CAAC;AAAA,IACF;AAEA,WAAO,MAAM,OAAO,GAAG;AAAA,EACxB;AAAA,EAEA,IAAa,OAAO;AACnB,QAAI,KAAK,wBAAwB;AAChC,aAAO,KAAK,uBAAuB;AAAA,IACpC;AAEA,WAAO,MAAM;AAAA,EACd;AACD;AA1Da,8BAAN;AAAA,EAMJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GATU;AA4Db,kBAAkB,uBAAuB,6BAA6B,kBAAkB,OAAO;",
  "names": []
}
