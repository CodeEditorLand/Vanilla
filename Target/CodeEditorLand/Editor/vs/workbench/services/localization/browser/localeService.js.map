{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/localization/browser/localeService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport {\n\tLANGUAGE_DEFAULT,\n\tLanguage,\n} from \"../../../../base/common/platform.js\";\nimport { localize } from \"../../../../nls.js\";\nimport { IDialogService } from \"../../../../platform/dialogs/common/dialogs.js\";\nimport { IExtensionGalleryService } from \"../../../../platform/extensionManagement/common/extensionManagement.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport type { ILanguagePackItem } from \"../../../../platform/languagePacks/common/languagePacks.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { IProductService } from \"../../../../platform/product/common/productService.js\";\nimport { IHostService } from \"../../host/browser/host.js\";\nimport {\n\tIActiveLanguagePackService,\n\tILocaleService,\n} from \"../common/locale.js\";\n\nconst localeStorage = new (class LocaleStorage {\n\tprivate static readonly LOCAL_STORAGE_LOCALE_KEY = \"vscode.nls.locale\";\n\tprivate static readonly LOCAL_STORAGE_EXTENSION_ID_KEY =\n\t\t\"vscode.nls.languagePackExtensionId\";\n\n\tsetLocale(locale: string): void {\n\t\tlocalStorage.setItem(LocaleStorage.LOCAL_STORAGE_LOCALE_KEY, locale);\n\t\tthis.doSetLocaleToCookie(locale);\n\t}\n\n\tprivate doSetLocaleToCookie(locale: string): void {\n\t\tdocument.cookie = `${LocaleStorage.LOCAL_STORAGE_LOCALE_KEY}=${locale};path=/;max-age=3153600000`;\n\t}\n\n\tclearLocale(): void {\n\t\tlocalStorage.removeItem(LocaleStorage.LOCAL_STORAGE_LOCALE_KEY);\n\t\tthis.doClearLocaleToCookie();\n\t}\n\n\tprivate doClearLocaleToCookie(): void {\n\t\tdocument.cookie = `${LocaleStorage.LOCAL_STORAGE_LOCALE_KEY}=;path=/;max-age=0`;\n\t}\n\n\tsetExtensionId(extensionId: string): void {\n\t\tlocalStorage.setItem(\n\t\t\tLocaleStorage.LOCAL_STORAGE_EXTENSION_ID_KEY,\n\t\t\textensionId,\n\t\t);\n\t}\n\n\tgetExtensionId(): string | null {\n\t\treturn localStorage.getItem(\n\t\t\tLocaleStorage.LOCAL_STORAGE_EXTENSION_ID_KEY,\n\t\t);\n\t}\n\n\tclearExtensionId(): void {\n\t\tlocalStorage.removeItem(LocaleStorage.LOCAL_STORAGE_EXTENSION_ID_KEY);\n\t}\n})();\n\nexport class WebLocaleService implements ILocaleService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t\t@IHostService private readonly hostService: IHostService,\n\t\t@IProductService private readonly productService: IProductService,\n\t) {}\n\n\tasync setLocale(\n\t\tlanguagePackItem: ILanguagePackItem,\n\t\t_skipDialog = false,\n\t): Promise<void> {\n\t\tconst locale = languagePackItem.id;\n\t\tif (\n\t\t\tlocale === Language.value() ||\n\t\t\t(!locale && Language.value() === navigator.language.toLowerCase())\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tif (locale) {\n\t\t\tlocaleStorage.setLocale(locale);\n\t\t\tif (languagePackItem.extensionId) {\n\t\t\t\tlocaleStorage.setExtensionId(languagePackItem.extensionId);\n\t\t\t}\n\t\t} else {\n\t\t\tlocaleStorage.clearLocale();\n\t\t\tlocaleStorage.clearExtensionId();\n\t\t}\n\n\t\tconst restartDialog = await this.dialogService.confirm({\n\t\t\ttype: \"info\",\n\t\t\tmessage: localize(\n\t\t\t\t\"relaunchDisplayLanguageMessage\",\n\t\t\t\t\"To change the display language, {0} needs to reload\",\n\t\t\t\tthis.productService.nameLong,\n\t\t\t),\n\t\t\tdetail: localize(\n\t\t\t\t\"relaunchDisplayLanguageDetail\",\n\t\t\t\t\"Press the reload button to refresh the page and set the display language to {0}.\",\n\t\t\t\tlanguagePackItem.label,\n\t\t\t),\n\t\t\tprimaryButton: localize(\n\t\t\t\t{ key: \"reload\", comment: [\"&& denotes a mnemonic character\"] },\n\t\t\t\t\"&&Reload\",\n\t\t\t),\n\t\t});\n\n\t\tif (restartDialog.confirmed) {\n\t\t\tthis.hostService.restart();\n\t\t}\n\t}\n\n\tasync clearLocalePreference(): Promise<void> {\n\t\tlocaleStorage.clearLocale();\n\t\tlocaleStorage.clearExtensionId();\n\n\t\tif (Language.value() === navigator.language.toLowerCase()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst restartDialog = await this.dialogService.confirm({\n\t\t\ttype: \"info\",\n\t\t\tmessage: localize(\n\t\t\t\t\"clearDisplayLanguageMessage\",\n\t\t\t\t\"To change the display language, {0} needs to reload\",\n\t\t\t\tthis.productService.nameLong,\n\t\t\t),\n\t\t\tdetail: localize(\n\t\t\t\t\"clearDisplayLanguageDetail\",\n\t\t\t\t\"Press the reload button to refresh the page and use your browser's language.\",\n\t\t\t),\n\t\t\tprimaryButton: localize(\n\t\t\t\t{ key: \"reload\", comment: [\"&& denotes a mnemonic character\"] },\n\t\t\t\t\"&&Reload\",\n\t\t\t),\n\t\t});\n\n\t\tif (restartDialog.confirmed) {\n\t\t\tthis.hostService.restart();\n\t\t}\n\t}\n}\n\nclass WebActiveLanguagePackService implements IActiveLanguagePackService {\n\t_serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IExtensionGalleryService\n\t\tprivate readonly galleryService: IExtensionGalleryService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {}\n\n\tasync getExtensionIdProvidingCurrentLocale(): Promise<string | undefined> {\n\t\tconst language = Language.value();\n\t\tif (language === LANGUAGE_DEFAULT) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst extensionId = localeStorage.getExtensionId();\n\t\tif (extensionId) {\n\t\t\treturn extensionId;\n\t\t}\n\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\ttry {\n\t\t\tconst tagResult = await this.galleryService.query(\n\t\t\t\t{ text: `tag:lp-${language}` },\n\t\t\t\tCancellationToken.None,\n\t\t\t);\n\n\t\t\t// Only install extensions that are published by Microsoft and start with vscode-language-pack for extra certainty\n\t\t\tconst extensionToInstall = tagResult.firstPage.find(\n\t\t\t\t(e) =>\n\t\t\t\t\te.publisher === \"MS-CEINTL\" &&\n\t\t\t\t\te.name.startsWith(\"vscode-language-pack\"),\n\t\t\t);\n\t\t\tif (extensionToInstall) {\n\t\t\t\tlocaleStorage.setExtensionId(extensionToInstall.identifier.id);\n\t\t\t\treturn extensionToInstall.identifier.id;\n\t\t\t}\n\n\t\t\t// TODO: If a non-Microsoft language pack is installed, we should prompt the user asking if they want to install that.\n\t\t\t// Since no such language packs exist yet, we can wait until that happens to implement this.\n\t\t} catch (e) {\n\t\t\t// Best effort\n\t\t\tthis.logService.error(e);\n\t\t}\n\n\t\treturn undefined;\n\t}\n}\n\nregisterSingleton(ILocaleService, WebLocaleService, InstantiationType.Delayed);\nregisterSingleton(\n\tIActiveLanguagePackService,\n\tWebActiveLanguagePackService,\n\tInstantiationType.Delayed,\n);\n"],
  "mappings": "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",
  "names": []
}
