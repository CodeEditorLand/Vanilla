{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/textfile/common/textFileSaveParticipant.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { raceCancellation } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { IProgress, IProgressStep } from '../../../../platform/progress/common/progress.js';\nimport { ITextFileSaveParticipant, ITextFileEditorModel, ITextFileSaveParticipantContext } from './textfiles.js';\nimport { IDisposable, Disposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { insert } from '../../../../base/common/arrays.js';\n\nexport class TextFileSaveParticipant extends Disposable {\n\n\tprivate readonly saveParticipants: ITextFileSaveParticipant[] = [];\n\n\tconstructor(\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t}\n\n\taddSaveParticipant(participant: ITextFileSaveParticipant): IDisposable {\n\t\tconst remove = insert(this.saveParticipants, participant);\n\n\t\treturn toDisposable(() => remove());\n\t}\n\n\tasync participate(model: ITextFileEditorModel, context: ITextFileSaveParticipantContext, progress: IProgress<IProgressStep>, token: CancellationToken): Promise<void> {\n\n\t\t// undoStop before participation\n\t\tmodel.textEditorModel?.pushStackElement();\n\n\t\tfor (const saveParticipant of this.saveParticipants) {\n\t\t\tif (token.isCancellationRequested || !model.textEditorModel /* disposed */) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst promise = saveParticipant.participate(model, context, progress, token);\n\t\t\t\tawait raceCancellation(promise, token);\n\t\t\t} catch (err) {\n\t\t\t\tthis.logService.error(err);\n\t\t\t}\n\t\t}\n\n\t\t// undoStop after participation\n\t\tmodel.textEditorModel?.pushStackElement();\n\t}\n\n\toverride dispose(): void {\n\t\tthis.saveParticipants.splice(0, this.saveParticipants.length);\n\n\t\tsuper.dispose();\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,wBAAwB;AACjC,SAAS,yBAAyB;AAClC,SAAS,mBAAmB;AAC5B,SAAS,WAAW,qBAAqB;AACzC,SAAS,0BAA0B,sBAAsB,uCAAuC;AAChG,SAAS,aAAa,YAAY,oBAAoB;AACtD,SAAS,cAAc;AAEhB,IAAM,0BAAN,cAAsC,WAAW;AAAA,EAIvD,YAC+B,YAC7B;AACD,UAAM;AAFwB;AAAA,EAG/B;AAAA,EArBD,OAawD;AAAA;AAAA;AAAA,EAEtC,mBAA+C,CAAC;AAAA,EAQjE,mBAAmB,aAAoD;AACtE,UAAM,SAAS,OAAO,KAAK,kBAAkB,WAAW;AAExD,WAAO,aAAa,MAAM,OAAO,CAAC;AAAA,EACnC;AAAA,EAEA,MAAM,YAAY,OAA6B,SAA0C,UAAoC,OAAyC;AAGrK,UAAM,iBAAiB,iBAAiB;AAExC,eAAW,mBAAmB,KAAK,kBAAkB;AACpD,UAAI,MAAM,2BAA2B,CAAC,MAAM,iBAAgC;AAC3E;AAAA,MACD;AAEA,UAAI;AACH,cAAM,UAAU,gBAAgB,YAAY,OAAO,SAAS,UAAU,KAAK;AAC3E,cAAM,iBAAiB,SAAS,KAAK;AAAA,MACtC,SAAS,KAAK;AACb,aAAK,WAAW,MAAM,GAAG;AAAA,MAC1B;AAAA,IACD;AAGA,UAAM,iBAAiB,iBAAiB;AAAA,EACzC;AAAA,EAES,UAAgB;AACxB,SAAK,iBAAiB,OAAO,GAAG,KAAK,iBAAiB,MAAM;AAE5D,UAAM,QAAQ;AAAA,EACf;AACD;AA3Ca,0BAAN;AAAA,EAKJ;AAAA,GALU;",
  "names": []
}
