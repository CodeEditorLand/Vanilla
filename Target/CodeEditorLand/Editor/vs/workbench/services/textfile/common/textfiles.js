import{VSBuffer as i}from"../../../../base/common/buffer.js";import{areFunctions as d,isUndefinedOrNull as s}from"../../../../base/common/types.js";import{FileOperationError as l,FileOperationResult as p}from"../../../../platform/files/common/files.js";import{createDecorator as I}from"../../../../platform/instantiation/common/instantiation.js";const T=I("textFileService");var c=(e=>(e[e.FILE_IS_BINARY=0]="FILE_IS_BINARY",e))(c||{});class y extends l{constructor(o,n,a){super(o,p.FILE_OTHER_ERROR);this.textFileOperationResult=n;this.options=a}static isTextFileOperationError(o){return o instanceof Error&&!s(o.textFileOperationResult)}options}var x=(t=>(t[t.SAVED=0]="SAVED",t[t.DIRTY=1]="DIRTY",t[t.PENDING_SAVE=2]="PENDING_SAVE",t[t.CONFLICT=3]="CONFLICT",t[t.ORPHAN=4]="ORPHAN",t[t.ERROR=5]="ERROR",t))(x||{}),f=(n=>(n[n.EDITOR=1]="EDITOR",n[n.REFERENCE=2]="REFERENCE",n[n.OTHER=3]="OTHER",n))(f||{}),u=(o=>(o[o.Encode=0]="Encode",o[o.Decode=1]="Decode",o))(u||{});function R(r){const e=r;return d(e.setEncoding,e.getEncoding,e.save,e.revert,e.isDirty,e.getLanguageId)}function F(r){const e=[];let o;for(;typeof(o=r.read())=="string";)e.push(o);return e.join("")}function S(r){let e=!1;return{read(){return e?null:(e=!0,r)}}}function O(r){if(!(typeof r>"u"))return typeof r=="string"?i.fromString(r):{read:()=>{const e=r.read();return typeof e=="string"?i.fromString(e):null}}}export{u as EncodingMode,T as ITextFileService,x as TextFileEditorModelState,y as TextFileOperationError,c as TextFileOperationResult,f as TextFileResolveReason,R as isTextFileEditorModel,F as snapshotToString,S as stringToSnapshot,O as toBufferOrReadable};
