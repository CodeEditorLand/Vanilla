var v=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var n=(a,r,e,t)=>{for(var i=t>1?void 0:t?d(r,e):r,o=a.length-1,s;o>=0;o--)(s=a[o])&&(i=(t?s(r,e,i):s(i))||i);return t&&i&&v(r,e,i),i},l=(a,r)=>(e,t)=>r(e,t,a);import{raceCancellation as m}from"../../../../base/common/async.js";import{ILogService as I}from"../../../../platform/log/common/log.js";import{Disposable as P,toDisposable as x}from"../../../../base/common/lifecycle.js";import{insert as S}from"../../../../base/common/arrays.js";let p=class extends P{constructor(e){super();this.logService=e}saveParticipants=[];addSaveParticipant(e){const t=S(this.saveParticipants,e);return x(()=>t())}async participate(e,t,i,o){e.textEditorModel?.pushStackElement();for(const s of this.saveParticipants){if(o.isCancellationRequested||!e.textEditorModel)break;try{const c=s.participate(e,t,i,o);await m(c,o)}catch(c){this.logService.error(c)}}e.textEditorModel?.pushStackElement()}dispose(){this.saveParticipants.splice(0,this.saveParticipants.length),super.dispose()}};p=n([l(0,I)],p);export{p as TextFileSaveParticipant};
