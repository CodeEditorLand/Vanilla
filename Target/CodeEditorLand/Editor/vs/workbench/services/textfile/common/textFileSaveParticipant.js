var m=Object.defineProperty;var v=Object.getOwnPropertyDescriptor;var n=(s,i,e,t)=>{for(var r=t>1?void 0:t?v(i,e):i,o=s.length-1,a;o>=0;o--)(a=s[o])&&(r=(t?a(i,e,r):a(r))||r);return t&&r&&m(i,e,r),r},l=(s,i)=>(e,t)=>i(e,t,s);import{insert as d}from"../../../../base/common/arrays.js";import{raceCancellation as I}from"../../../../base/common/async.js";import{Disposable as P,toDisposable as f}from"../../../../base/common/lifecycle.js";import{ILogService as x}from"../../../../platform/log/common/log.js";let p=class extends P{constructor(e){super();this.logService=e}saveParticipants=[];addSaveParticipant(e){const t=d(this.saveParticipants,e);return f(()=>t())}async participate(e,t,r,o){e.textEditorModel?.pushStackElement();for(const a of this.saveParticipants){if(o.isCancellationRequested||!e.textEditorModel)break;try{const c=a.participate(e,t,r,o);await I(c,o)}catch(c){this.logService.error(c)}}e.textEditorModel?.pushStackElement()}dispose(){this.saveParticipants.splice(0,this.saveParticipants.length),super.dispose()}};p=n([l(0,x)],p);export{p as TextFileSaveParticipant};
