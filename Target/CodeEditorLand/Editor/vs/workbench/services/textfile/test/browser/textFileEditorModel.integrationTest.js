import c from"assert";import"../../../../../platform/instantiation/common/instantiation.js";import{TextFileEditorModel as p}from"../../common/textFileEditorModel.js";import{workbenchInstantiationService as x,TestServiceAccessor as S}from"../../../../test/browser/workbenchTestServices.js";import{ensureNoDisposablesAreLeakedInTestSuite as v,toResource as a}from"../../../../../base/test/common/utils.js";import"../../common/textFileEditorModelManager.js";import{createTextBufferFactoryFromStream as I}from"../../../../../editor/common/model/textModel.js";import{CancellationToken as g}from"../../../../../base/common/cancellation.js";import"../../../../../base/common/uri.js";import{bufferToStream as y,VSBuffer as T}from"../../../../../base/common/buffer.js";import{DisposableStore as b,toDisposable as k}from"../../../../../base/common/lifecycle.js";suite("Files - TextFileEditorModel (integration)",()=>{const e=new b;let r,t,l;setup(()=>{r=x(void 0,e),t=r.createInstance(S),l=t.fileService.getContent(),e.add(k(()=>t.fileService.setContent(l))),e.add(t.textFileService.files)}),teardown(()=>{e.clear()}),test("backup and restore (simple)",async function(){return d(a.call(this,"/path/index_async.txt"),a.call(this,"/path/index_async2.txt"),"Some very small file text content.")}),test("backup and restore (large, #121347)",async function(){const i=`\uAD6D\uC5B4\uD55C
`.repeat(1e5);return d(a.call(this,"/path/index_async.txt"),a.call(this,"/path/index_async2.txt"),i)});async function d(i,u,n){const o=e.add(r.createInstance(p,i,"utf8",void 0));await o.resolve({contents:await I(await t.textFileService.getDecodedStream(i,y(T.fromString(n))))}),c.strictEqual(o.textEditorModel?.getValue(),n);const f=await o.backup(g.None),m={typeId:o.typeId,resource:u};await t.workingCopyBackupService.backup(m,f.content);const s=e.add(r.createInstance(p,m.resource,"utf8",void 0));await s.resolve(),c.strictEqual(s.textEditorModel?.getValue(),n),c.strictEqual(s.isDirty(),!0)}v()});
