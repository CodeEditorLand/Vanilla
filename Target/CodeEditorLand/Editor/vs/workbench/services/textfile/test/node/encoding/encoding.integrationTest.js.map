{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/textfile/test/node/encoding/encoding.integrationTest.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport * as terminalEncoding from '../../../../../../base/node/terminalEncoding.js';\nimport * as encoding from '../../../common/encoding.js';\n\nsuite('Encoding', function () {\n\n\tthis.timeout(10000);\n\n\ttest('resolve terminal encoding (detect)', async function () {\n\t\tconst enc = await terminalEncoding.resolveTerminalEncoding();\n\t\tassert.ok(enc.length > 0);\n\t});\n\n\ttest('resolve terminal encoding (environment)', async function () {\n\t\tprocess.env['VSCODE_CLI_ENCODING'] = 'utf16le';\n\n\t\tconst enc = await terminalEncoding.resolveTerminalEncoding();\n\t\tassert.ok(await encoding.encodingExists(enc));\n\t\tassert.strictEqual(enc, 'utf16le');\n\t});\n});\n"],
  "mappings": "AAKA,OAAO,YAAY;AACnB,YAAY,sBAAsB;AAClC,YAAY,cAAc;AAE1B,MAAM,YAAY,WAAY;AAE7B,OAAK,QAAQ,GAAK;AAElB,OAAK,sCAAsC,iBAAkB;AAC5D,UAAM,MAAM,MAAM,iBAAiB,wBAAwB;AAC3D,WAAO,GAAG,IAAI,SAAS,CAAC;AAAA,EACzB,CAAC;AAED,OAAK,2CAA2C,iBAAkB;AACjE,YAAQ,IAAI,qBAAqB,IAAI;AAErC,UAAM,MAAM,MAAM,iBAAiB,wBAAwB;AAC3D,WAAO,GAAG,MAAM,SAAS,eAAe,GAAG,CAAC;AAC5C,WAAO,YAAY,KAAK,SAAS;AAAA,EAClC,CAAC;AACF,CAAC;",
  "names": []
}
