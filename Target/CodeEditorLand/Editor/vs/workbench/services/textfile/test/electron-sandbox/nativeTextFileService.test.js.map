{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/textfile/test/electron-sandbox/nativeTextFileService.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { ITextFileService } from '../../common/textfiles.js';\nimport { IFileService } from '../../../../../platform/files/common/files.js';\nimport { TextFileEditorModelManager } from '../../common/textFileEditorModelManager.js';\nimport { Schemas } from '../../../../../base/common/network.js';\nimport { ServiceCollection } from '../../../../../platform/instantiation/common/serviceCollection.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { FileService } from '../../../../../platform/files/common/fileService.js';\nimport { NullLogService } from '../../../../../platform/log/common/log.js';\nimport { TestNativeTextFileServiceWithEncodingOverrides, TestServiceAccessor, workbenchInstantiationService } from '../../../../test/electron-sandbox/workbenchTestServices.js';\nimport { IWorkingCopyFileService, WorkingCopyFileService } from '../../../workingCopy/common/workingCopyFileService.js';\nimport { WorkingCopyService } from '../../../workingCopy/common/workingCopyService.js';\nimport { UriIdentityService } from '../../../../../platform/uriIdentity/common/uriIdentityService.js';\nimport { InMemoryFileSystemProvider } from '../../../../../platform/files/common/inMemoryFilesystemProvider.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { TextFileEditorModel } from '../../common/textFileEditorModel.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite, toResource } from '../../../../../base/test/common/utils.js';\n\nsuite('Files - NativeTextFileService', function () {\n\tconst disposables = new DisposableStore();\n\n\tlet service: ITextFileService;\n\tlet instantiationService: IInstantiationService;\n\n\tsetup(() => {\n\t\tinstantiationService = workbenchInstantiationService(undefined, disposables);\n\n\t\tconst logService = new NullLogService();\n\t\tconst fileService = disposables.add(new FileService(logService));\n\n\t\tconst fileProvider = disposables.add(new InMemoryFileSystemProvider());\n\t\tdisposables.add(fileService.registerProvider(Schemas.file, fileProvider));\n\n\t\tconst collection = new ServiceCollection();\n\t\tcollection.set(IFileService, fileService);\n\t\tcollection.set(IWorkingCopyFileService, disposables.add(new WorkingCopyFileService(fileService, disposables.add(new WorkingCopyService()), instantiationService, disposables.add(new UriIdentityService(fileService)))));\n\n\t\tservice = disposables.add(instantiationService.createChild(collection).createInstance(TestNativeTextFileServiceWithEncodingOverrides));\n\t\tdisposables.add(<TextFileEditorModelManager>service.files);\n\t});\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t});\n\n\ttest('shutdown joins on pending saves', async function () {\n\t\tconst model: TextFileEditorModel = disposables.add(instantiationService.createInstance(TextFileEditorModel, toResource.call(this, '/path/index_async.txt'), 'utf8', undefined));\n\n\t\tawait model.resolve();\n\n\t\tlet pendingSaveAwaited = false;\n\t\tmodel.save().then(() => pendingSaveAwaited = true);\n\n\t\tconst accessor = instantiationService.createInstance(TestServiceAccessor);\n\t\taccessor.lifecycleService.fireShutdown();\n\n\t\tassert.ok(accessor.lifecycleService.shutdownJoiners.length > 0);\n\t\tawait Promise.all(accessor.lifecycleService.shutdownJoiners);\n\n\t\tassert.strictEqual(pendingSaveAwaited, true);\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"],
  "mappings": "AAKA,OAAO,YAAY;AACnB,SAAS,wBAAwB;AACjC,SAAS,oBAAoB;AAC7B,SAAS,kCAAkC;AAC3C,SAAS,eAAe;AACxB,SAAS,yBAAyB;AAClC,SAAS,uBAAuB;AAChC,SAAS,mBAAmB;AAC5B,SAAS,sBAAsB;AAC/B,SAAS,gDAAgD,qBAAqB,qCAAqC;AACnH,SAAS,yBAAyB,8BAA8B;AAChE,SAAS,0BAA0B;AACnC,SAAS,0BAA0B;AACnC,SAAS,kCAAkC;AAC3C,SAAS,6BAA6B;AACtC,SAAS,2BAA2B;AACpC,SAAS,yCAAyC,kBAAkB;AAEpE,MAAM,iCAAiC,WAAY;AAClD,QAAM,cAAc,IAAI,gBAAgB;AAExC,MAAI;AACJ,MAAI;AAEJ,QAAM,MAAM;AACX,2BAAuB,8BAA8B,QAAW,WAAW;AAE3E,UAAM,aAAa,IAAI,eAAe;AACtC,UAAM,cAAc,YAAY,IAAI,IAAI,YAAY,UAAU,CAAC;AAE/D,UAAM,eAAe,YAAY,IAAI,IAAI,2BAA2B,CAAC;AACrE,gBAAY,IAAI,YAAY,iBAAiB,QAAQ,MAAM,YAAY,CAAC;AAExE,UAAM,aAAa,IAAI,kBAAkB;AACzC,eAAW,IAAI,cAAc,WAAW;AACxC,eAAW,IAAI,yBAAyB,YAAY,IAAI,IAAI,uBAAuB,aAAa,YAAY,IAAI,IAAI,mBAAmB,CAAC,GAAG,sBAAsB,YAAY,IAAI,IAAI,mBAAmB,WAAW,CAAC,CAAC,CAAC,CAAC;AAEvN,cAAU,YAAY,IAAI,qBAAqB,YAAY,UAAU,EAAE,eAAe,8CAA8C,CAAC;AACrI,gBAAY,IAAgC,QAAQ,KAAK;AAAA,EAC1D,CAAC;AAED,WAAS,MAAM;AACd,gBAAY,MAAM;AAAA,EACnB,CAAC;AAED,OAAK,mCAAmC,iBAAkB;AACzD,UAAM,QAA6B,YAAY,IAAI,qBAAqB,eAAe,qBAAqB,WAAW,KAAK,MAAM,uBAAuB,GAAG,QAAQ,MAAS,CAAC;AAE9K,UAAM,MAAM,QAAQ;AAEpB,QAAI,qBAAqB;AACzB,UAAM,KAAK,EAAE,KAAK,MAAM,qBAAqB,IAAI;AAEjD,UAAM,WAAW,qBAAqB,eAAe,mBAAmB;AACxE,aAAS,iBAAiB,aAAa;AAEvC,WAAO,GAAG,SAAS,iBAAiB,gBAAgB,SAAS,CAAC;AAC9D,UAAM,QAAQ,IAAI,SAAS,iBAAiB,eAAe;AAE3D,WAAO,YAAY,oBAAoB,IAAI;AAAA,EAC5C,CAAC;AAED,0CAAwC;AACzC,CAAC;",
  "names": []
}
