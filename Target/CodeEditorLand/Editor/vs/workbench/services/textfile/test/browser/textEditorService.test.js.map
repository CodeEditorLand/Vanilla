{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/textfile/test/browser/textEditorService.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { IResourceDiffEditorInput, IResourceSideBySideEditorInput, isResourceDiffEditorInput, isResourceSideBySideEditorInput, isUntitledResourceEditorInput } from '../../../../common/editor.js';\nimport { workbenchInstantiationService, registerTestEditor, TestFileEditorInput, registerTestResourceEditor, registerTestSideBySideEditor } from '../../../../test/browser/workbenchTestServices.js';\nimport { TextResourceEditorInput } from '../../../../common/editor/textResourceEditorInput.js';\nimport { SyncDescriptor } from '../../../../../platform/instantiation/common/descriptors.js';\nimport { FileEditorInput } from '../../../../contrib/files/browser/editors/fileEditorInput.js';\nimport { UntitledTextEditorInput } from '../../../untitled/common/untitledTextEditorInput.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite, toResource } from '../../../../../base/test/common/utils.js';\nimport { IFileService } from '../../../../../platform/files/common/files.js';\nimport { Disposable, DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { UntitledTextEditorModel } from '../../../untitled/common/untitledTextEditorModel.js';\nimport { NullFileSystemProvider } from '../../../../../platform/files/test/common/nullFileSystemProvider.js';\nimport { DiffEditorInput } from '../../../../common/editor/diffEditorInput.js';\nimport { isLinux } from '../../../../../base/common/platform.js';\nimport { SideBySideEditorInput } from '../../../../common/editor/sideBySideEditorInput.js';\nimport { ITextFileEditorModel } from '../../common/textfiles.js';\nimport { TextEditorService } from '../../common/textEditorService.js';\nimport { ILanguageService } from '../../../../../editor/common/languages/language.js';\nimport { EditorInput } from '../../../../common/editor/editorInput.js';\n\nsuite('TextEditorService', () => {\n\n\tconst TEST_EDITOR_ID = 'MyTestEditorForEditorService';\n\tconst TEST_EDITOR_INPUT_ID = 'testEditorInputForEditorService';\n\n\tclass FileServiceProvider extends Disposable {\n\t\tconstructor(scheme: string, @IFileService fileService: IFileService) {\n\t\t\tsuper();\n\n\t\t\tthis._register(fileService.registerProvider(scheme, new NullFileSystemProvider()));\n\t\t}\n\t}\n\n\tconst disposables = new DisposableStore();\n\n\tsetup(() => {\n\t\tdisposables.add(registerTestEditor(TEST_EDITOR_ID, [new SyncDescriptor(TestFileEditorInput)], TEST_EDITOR_INPUT_ID));\n\t\tdisposables.add(registerTestResourceEditor());\n\t\tdisposables.add(registerTestSideBySideEditor());\n\t});\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t});\n\n\ttest('createTextEditor - basics', async function () {\n\t\tconst instantiationService = workbenchInstantiationService(undefined, disposables);\n\t\tconst languageService = instantiationService.get(ILanguageService);\n\t\tconst service = disposables.add(instantiationService.createInstance(TextEditorService));\n\n\t\tconst languageId = 'create-input-test';\n\t\tdisposables.add(languageService.registerLanguage({\n\t\t\tid: languageId,\n\t\t}));\n\n\t\t// Untyped Input (file)\n\t\tlet input: EditorInput = disposables.add(service.createTextEditor({ resource: toResource.call(this, '/index.html'), options: { selection: { startLineNumber: 1, startColumn: 1 } } }));\n\t\tassert(input instanceof FileEditorInput);\n\t\tlet contentInput = <FileEditorInput>input;\n\t\tassert.strictEqual(contentInput.resource.fsPath, toResource.call(this, '/index.html').fsPath);\n\n\t\t// Untyped Input (file casing)\n\t\tinput = disposables.add(service.createTextEditor({ resource: toResource.call(this, '/index.html') }));\n\t\tconst inputDifferentCase = disposables.add(service.createTextEditor({ resource: toResource.call(this, '/INDEX.html') }));\n\n\t\tif (!isLinux) {\n\t\t\tassert.strictEqual(input, inputDifferentCase);\n\t\t\tassert.strictEqual(input.resource?.toString(), inputDifferentCase.resource?.toString());\n\t\t} else {\n\t\t\tassert.notStrictEqual(input, inputDifferentCase);\n\t\t\tassert.notStrictEqual(input.resource?.toString(), inputDifferentCase.resource?.toString());\n\t\t}\n\n\t\t// Typed Input\n\t\tassert.strictEqual(disposables.add(service.createTextEditor(input)), input);\n\n\t\t// Untyped Input (file, encoding)\n\t\tinput = disposables.add(service.createTextEditor({ resource: toResource.call(this, '/index.html'), encoding: 'utf16le', options: { selection: { startLineNumber: 1, startColumn: 1 } } }));\n\t\tassert(input instanceof FileEditorInput);\n\t\tcontentInput = <FileEditorInput>input;\n\t\tassert.strictEqual(contentInput.getPreferredEncoding(), 'utf16le');\n\n\t\t// Untyped Input (file, language)\n\t\tinput = disposables.add(service.createTextEditor({ resource: toResource.call(this, '/index.html'), languageId: languageId }));\n\t\tassert(input instanceof FileEditorInput);\n\t\tcontentInput = <FileEditorInput>input;\n\t\tassert.strictEqual(contentInput.getPreferredLanguageId(), languageId);\n\t\tlet fileModel = disposables.add((await contentInput.resolve() as ITextFileEditorModel));\n\t\tassert.strictEqual(fileModel.textEditorModel?.getLanguageId(), languageId);\n\n\t\t// Untyped Input (file, contents)\n\t\tinput = disposables.add(service.createTextEditor({ resource: toResource.call(this, '/index.html'), contents: 'My contents' }));\n\t\tassert(input instanceof FileEditorInput);\n\t\tcontentInput = <FileEditorInput>input;\n\t\tfileModel = disposables.add((await contentInput.resolve() as ITextFileEditorModel));\n\t\tassert.strictEqual(fileModel.textEditorModel?.getValue(), 'My contents');\n\t\tassert.strictEqual(fileModel.isDirty(), true);\n\n\t\t// Untyped Input (file, different language)\n\t\tinput = disposables.add(service.createTextEditor({ resource: toResource.call(this, '/index.html'), languageId: 'text' }));\n\t\tassert(input instanceof FileEditorInput);\n\t\tcontentInput = <FileEditorInput>input;\n\t\tassert.strictEqual(contentInput.getPreferredLanguageId(), 'text');\n\n\t\t// Untyped Input (untitled)\n\t\tinput = disposables.add(service.createTextEditor({ resource: undefined, options: { selection: { startLineNumber: 1, startColumn: 1 } } }));\n\t\tassert(input instanceof UntitledTextEditorInput);\n\n\t\t// Untyped Input (untitled with contents)\n\t\tlet untypedInput: any = { contents: 'Hello Untitled', options: { selection: { startLineNumber: 1, startColumn: 1 } } };\n\t\tinput = disposables.add(service.createTextEditor(untypedInput));\n\t\tassert.ok(isUntitledResourceEditorInput(untypedInput));\n\t\tassert(input instanceof UntitledTextEditorInput);\n\t\tlet model = disposables.add(await input.resolve() as UntitledTextEditorModel);\n\t\tassert.strictEqual(model.textEditorModel?.getValue(), 'Hello Untitled');\n\n\t\t// Untyped Input (untitled with language id)\n\t\tinput = disposables.add(service.createTextEditor({ resource: undefined, languageId: languageId, options: { selection: { startLineNumber: 1, startColumn: 1 } } }));\n\t\tassert(input instanceof UntitledTextEditorInput);\n\t\tmodel = disposables.add(await input.resolve() as UntitledTextEditorModel);\n\t\tassert.strictEqual(model.getLanguageId(), languageId);\n\n\t\t// Untyped Input (untitled with file path)\n\t\tinput = disposables.add(service.createTextEditor({ resource: URI.file('/some/path.txt'), forceUntitled: true, options: { selection: { startLineNumber: 1, startColumn: 1 } } }));\n\t\tassert(input instanceof UntitledTextEditorInput);\n\t\tassert.ok((input as UntitledTextEditorInput).hasAssociatedFilePath);\n\n\t\t// Untyped Input (untitled with untitled resource)\n\t\tuntypedInput = { resource: URI.parse('untitled://Untitled-1'), forceUntitled: true, options: { selection: { startLineNumber: 1, startColumn: 1 } } };\n\t\tassert.ok(isUntitledResourceEditorInput(untypedInput));\n\t\tinput = disposables.add(service.createTextEditor(untypedInput));\n\t\tassert(input instanceof UntitledTextEditorInput);\n\t\tassert.ok(!(input as UntitledTextEditorInput).hasAssociatedFilePath);\n\n\t\t// Untyped input (untitled with custom resource, but forceUntitled)\n\t\tuntypedInput = { resource: URI.file('/fake'), forceUntitled: true };\n\t\tassert.ok(isUntitledResourceEditorInput(untypedInput));\n\t\tinput = disposables.add(service.createTextEditor(untypedInput));\n\t\tassert(input instanceof UntitledTextEditorInput);\n\n\t\t// Untyped Input (untitled with custom resource)\n\t\tconst provider = disposables.add(instantiationService.createInstance(FileServiceProvider, 'untitled-custom'));\n\n\t\tinput = disposables.add(service.createTextEditor({ resource: URI.parse('untitled-custom://some/path'), forceUntitled: true, options: { selection: { startLineNumber: 1, startColumn: 1 } } }));\n\t\tassert(input instanceof UntitledTextEditorInput);\n\t\tassert.ok((input as UntitledTextEditorInput).hasAssociatedFilePath);\n\n\t\tprovider.dispose();\n\n\t\t// Untyped Input (resource)\n\t\tinput = disposables.add(service.createTextEditor({ resource: URI.parse('custom:resource') }));\n\t\tassert(input instanceof TextResourceEditorInput);\n\n\t\t// Untyped Input (diff)\n\t\tconst resourceDiffInput = {\n\t\t\tmodified: { resource: toResource.call(this, '/modified.html') },\n\t\t\toriginal: { resource: toResource.call(this, '/original.html') }\n\t\t};\n\t\tassert.strictEqual(isResourceDiffEditorInput(resourceDiffInput), true);\n\t\tinput = disposables.add(service.createTextEditor(resourceDiffInput));\n\t\tassert(input instanceof DiffEditorInput);\n\t\tdisposables.add(input.modified);\n\t\tdisposables.add(input.original);\n\t\tassert.strictEqual(input.original.resource?.toString(), resourceDiffInput.original.resource.toString());\n\t\tassert.strictEqual(input.modified.resource?.toString(), resourceDiffInput.modified.resource.toString());\n\t\tconst untypedDiffInput = input.toUntyped() as IResourceDiffEditorInput;\n\t\tassert.strictEqual(untypedDiffInput.original.resource?.toString(), resourceDiffInput.original.resource.toString());\n\t\tassert.strictEqual(untypedDiffInput.modified.resource?.toString(), resourceDiffInput.modified.resource.toString());\n\n\t\t// Untyped Input (side by side)\n\t\tconst sideBySideResourceInput = {\n\t\t\tprimary: { resource: toResource.call(this, '/primary.html') },\n\t\t\tsecondary: { resource: toResource.call(this, '/secondary.html') }\n\t\t};\n\t\tassert.strictEqual(isResourceSideBySideEditorInput(sideBySideResourceInput), true);\n\t\tinput = disposables.add(service.createTextEditor(sideBySideResourceInput));\n\t\tassert(input instanceof SideBySideEditorInput);\n\t\tdisposables.add(input.primary);\n\t\tdisposables.add(input.secondary);\n\t\tassert.strictEqual(input.primary.resource?.toString(), sideBySideResourceInput.primary.resource.toString());\n\t\tassert.strictEqual(input.secondary.resource?.toString(), sideBySideResourceInput.secondary.resource.toString());\n\t\tconst untypedSideBySideInput = input.toUntyped() as IResourceSideBySideEditorInput;\n\t\tassert.strictEqual(untypedSideBySideInput.primary.resource?.toString(), sideBySideResourceInput.primary.resource.toString());\n\t\tassert.strictEqual(untypedSideBySideInput.secondary.resource?.toString(), sideBySideResourceInput.secondary.resource.toString());\n\t});\n\n\ttest('createTextEditor- caching', function () {\n\t\tconst instantiationService = workbenchInstantiationService(undefined, disposables);\n\t\tconst service = disposables.add(instantiationService.createInstance(TextEditorService));\n\n\t\t// Cached Input (Files)\n\t\tconst fileResource1: URI = toResource.call(this, '/foo/bar/cache1.js');\n\t\tconst fileEditorInput1 = disposables.add(service.createTextEditor({ resource: fileResource1 }));\n\t\tassert.ok(fileEditorInput1);\n\n\t\tconst fileResource2 = toResource.call(this, '/foo/bar/cache2.js');\n\t\tconst fileEditorInput2 = disposables.add(service.createTextEditor({ resource: fileResource2 }));\n\t\tassert.ok(fileEditorInput2);\n\n\t\tassert.notStrictEqual(fileEditorInput1, fileEditorInput2);\n\n\t\tconst fileEditorInput1Again = disposables.add(service.createTextEditor({ resource: fileResource1 }));\n\t\tassert.strictEqual(fileEditorInput1Again, fileEditorInput1);\n\n\t\tfileEditorInput1Again.dispose();\n\n\t\tassert.ok(fileEditorInput1.isDisposed());\n\n\t\tconst fileEditorInput1AgainAndAgain = disposables.add(service.createTextEditor({ resource: fileResource1 }));\n\t\tassert.notStrictEqual(fileEditorInput1AgainAndAgain, fileEditorInput1);\n\t\tassert.ok(!fileEditorInput1AgainAndAgain.isDisposed());\n\n\t\t// Cached Input (Resource)\n\t\tconst resource1 = URI.from({ scheme: 'custom', path: '/foo/bar/cache1.js' });\n\t\tconst input1 = disposables.add(service.createTextEditor({ resource: resource1 }));\n\t\tassert.ok(input1);\n\n\t\tconst resource2 = URI.from({ scheme: 'custom', path: '/foo/bar/cache2.js' });\n\t\tconst input2 = disposables.add(service.createTextEditor({ resource: resource2 }));\n\t\tassert.ok(input2);\n\n\t\tassert.notStrictEqual(input1, input2);\n\n\t\tconst input1Again = disposables.add(service.createTextEditor({ resource: resource1 }));\n\t\tassert.strictEqual(input1Again, input1);\n\n\t\tinput1Again.dispose();\n\n\t\tassert.ok(input1.isDisposed());\n\n\t\tconst input1AgainAndAgain = disposables.add(service.createTextEditor({ resource: resource1 }));\n\t\tassert.notStrictEqual(input1AgainAndAgain, input1);\n\t\tassert.ok(!input1AgainAndAgain.isDisposed());\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"],
  "mappings": ";;;;;;;;;;;;AAKA,OAAO,YAAY;AACnB,SAAS,WAAW;AACpB,SAAS,0BAA0B,gCAAgC,2BAA2B,iCAAiC,qCAAqC;AACpK,SAAS,+BAA+B,oBAAoB,qBAAqB,4BAA4B,oCAAoC;AACjJ,SAAS,+BAA+B;AACxC,SAAS,sBAAsB;AAC/B,SAAS,uBAAuB;AAChC,SAAS,+BAA+B;AACxC,SAAS,yCAAyC,kBAAkB;AACpE,SAAS,oBAAoB;AAC7B,SAAS,YAAY,uBAAuB;AAC5C,SAAS,+BAA+B;AACxC,SAAS,8BAA8B;AACvC,SAAS,uBAAuB;AAChC,SAAS,eAAe;AACxB,SAAS,6BAA6B;AACtC,SAAS,4BAA4B;AACrC,SAAS,yBAAyB;AAClC,SAAS,wBAAwB;AACjC,SAAS,mBAAmB;AAE5B,MAAM,qBAAqB,MAAM;AAEhC,QAAM,iBAAiB;AACvB,QAAM,uBAAuB;AAE7B,MAAM,sBAAN,cAAkC,WAAW;AAAA,IA/B9C,OA+B8C;AAAA;AAAA;AAAA,IAC5C,YAAY,QAA8B,aAA2B;AACpE,YAAM;AAEN,WAAK,UAAU,YAAY,iBAAiB,QAAQ,IAAI,uBAAuB,CAAC,CAAC;AAAA,IAClF;AAAA,EACD;AANM,wBAAN;AAAA,IAC8B;AAAA,KADxB;AAQN,QAAM,cAAc,IAAI,gBAAgB;AAExC,QAAM,MAAM;AACX,gBAAY,IAAI,mBAAmB,gBAAgB,CAAC,IAAI,eAAe,mBAAmB,CAAC,GAAG,oBAAoB,CAAC;AACnH,gBAAY,IAAI,2BAA2B,CAAC;AAC5C,gBAAY,IAAI,6BAA6B,CAAC;AAAA,EAC/C,CAAC;AAED,WAAS,MAAM;AACd,gBAAY,MAAM;AAAA,EACnB,CAAC;AAED,OAAK,6BAA6B,iBAAkB;AACnD,UAAM,uBAAuB,8BAA8B,QAAW,WAAW;AACjF,UAAM,kBAAkB,qBAAqB,IAAI,gBAAgB;AACjE,UAAM,UAAU,YAAY,IAAI,qBAAqB,eAAe,iBAAiB,CAAC;AAEtF,UAAM,aAAa;AACnB,gBAAY,IAAI,gBAAgB,iBAAiB;AAAA,MAChD,IAAI;AAAA,IACL,CAAC,CAAC;AAGF,QAAI,QAAqB,YAAY,IAAI,QAAQ,iBAAiB,EAAE,UAAU,WAAW,KAAK,MAAM,aAAa,GAAG,SAAS,EAAE,WAAW,EAAE,iBAAiB,GAAG,aAAa,EAAE,EAAE,EAAE,CAAC,CAAC;AACrL,WAAO,iBAAiB,eAAe;AACvC,QAAI,eAAgC;AACpC,WAAO,YAAY,aAAa,SAAS,QAAQ,WAAW,KAAK,MAAM,aAAa,EAAE,MAAM;AAG5F,YAAQ,YAAY,IAAI,QAAQ,iBAAiB,EAAE,UAAU,WAAW,KAAK,MAAM,aAAa,EAAE,CAAC,CAAC;AACpG,UAAM,qBAAqB,YAAY,IAAI,QAAQ,iBAAiB,EAAE,UAAU,WAAW,KAAK,MAAM,aAAa,EAAE,CAAC,CAAC;AAEvH,QAAI,CAAC,SAAS;AACb,aAAO,YAAY,OAAO,kBAAkB;AAC5C,aAAO,YAAY,MAAM,UAAU,SAAS,GAAG,mBAAmB,UAAU,SAAS,CAAC;AAAA,IACvF,OAAO;AACN,aAAO,eAAe,OAAO,kBAAkB;AAC/C,aAAO,eAAe,MAAM,UAAU,SAAS,GAAG,mBAAmB,UAAU,SAAS,CAAC;AAAA,IAC1F;AAGA,WAAO,YAAY,YAAY,IAAI,QAAQ,iBAAiB,KAAK,CAAC,GAAG,KAAK;AAG1E,YAAQ,YAAY,IAAI,QAAQ,iBAAiB,EAAE,UAAU,WAAW,KAAK,MAAM,aAAa,GAAG,UAAU,WAAW,SAAS,EAAE,WAAW,EAAE,iBAAiB,GAAG,aAAa,EAAE,EAAE,EAAE,CAAC,CAAC;AACzL,WAAO,iBAAiB,eAAe;AACvC,mBAAgC;AAChC,WAAO,YAAY,aAAa,qBAAqB,GAAG,SAAS;AAGjE,YAAQ,YAAY,IAAI,QAAQ,iBAAiB,EAAE,UAAU,WAAW,KAAK,MAAM,aAAa,GAAG,WAAuB,CAAC,CAAC;AAC5H,WAAO,iBAAiB,eAAe;AACvC,mBAAgC;AAChC,WAAO,YAAY,aAAa,uBAAuB,GAAG,UAAU;AACpE,QAAI,YAAY,YAAY,IAAK,MAAM,aAAa,QAAQ,CAA0B;AACtF,WAAO,YAAY,UAAU,iBAAiB,cAAc,GAAG,UAAU;AAGzE,YAAQ,YAAY,IAAI,QAAQ,iBAAiB,EAAE,UAAU,WAAW,KAAK,MAAM,aAAa,GAAG,UAAU,cAAc,CAAC,CAAC;AAC7H,WAAO,iBAAiB,eAAe;AACvC,mBAAgC;AAChC,gBAAY,YAAY,IAAK,MAAM,aAAa,QAAQ,CAA0B;AAClF,WAAO,YAAY,UAAU,iBAAiB,SAAS,GAAG,aAAa;AACvE,WAAO,YAAY,UAAU,QAAQ,GAAG,IAAI;AAG5C,YAAQ,YAAY,IAAI,QAAQ,iBAAiB,EAAE,UAAU,WAAW,KAAK,MAAM,aAAa,GAAG,YAAY,OAAO,CAAC,CAAC;AACxH,WAAO,iBAAiB,eAAe;AACvC,mBAAgC;AAChC,WAAO,YAAY,aAAa,uBAAuB,GAAG,MAAM;AAGhE,YAAQ,YAAY,IAAI,QAAQ,iBAAiB,EAAE,UAAU,QAAW,SAAS,EAAE,WAAW,EAAE,iBAAiB,GAAG,aAAa,EAAE,EAAE,EAAE,CAAC,CAAC;AACzI,WAAO,iBAAiB,uBAAuB;AAG/C,QAAI,eAAoB,EAAE,UAAU,kBAAkB,SAAS,EAAE,WAAW,EAAE,iBAAiB,GAAG,aAAa,EAAE,EAAE,EAAE;AACrH,YAAQ,YAAY,IAAI,QAAQ,iBAAiB,YAAY,CAAC;AAC9D,WAAO,GAAG,8BAA8B,YAAY,CAAC;AACrD,WAAO,iBAAiB,uBAAuB;AAC/C,QAAI,QAAQ,YAAY,IAAI,MAAM,MAAM,QAAQ,CAA4B;AAC5E,WAAO,YAAY,MAAM,iBAAiB,SAAS,GAAG,gBAAgB;AAGtE,YAAQ,YAAY,IAAI,QAAQ,iBAAiB,EAAE,UAAU,QAAW,YAAwB,SAAS,EAAE,WAAW,EAAE,iBAAiB,GAAG,aAAa,EAAE,EAAE,EAAE,CAAC,CAAC;AACjK,WAAO,iBAAiB,uBAAuB;AAC/C,YAAQ,YAAY,IAAI,MAAM,MAAM,QAAQ,CAA4B;AACxE,WAAO,YAAY,MAAM,cAAc,GAAG,UAAU;AAGpD,YAAQ,YAAY,IAAI,QAAQ,iBAAiB,EAAE,UAAU,IAAI,KAAK,gBAAgB,GAAG,eAAe,MAAM,SAAS,EAAE,WAAW,EAAE,iBAAiB,GAAG,aAAa,EAAE,EAAE,EAAE,CAAC,CAAC;AAC/K,WAAO,iBAAiB,uBAAuB;AAC/C,WAAO,GAAI,MAAkC,qBAAqB;AAGlE,mBAAe,EAAE,UAAU,IAAI,MAAM,uBAAuB,GAAG,eAAe,MAAM,SAAS,EAAE,WAAW,EAAE,iBAAiB,GAAG,aAAa,EAAE,EAAE,EAAE;AACnJ,WAAO,GAAG,8BAA8B,YAAY,CAAC;AACrD,YAAQ,YAAY,IAAI,QAAQ,iBAAiB,YAAY,CAAC;AAC9D,WAAO,iBAAiB,uBAAuB;AAC/C,WAAO,GAAG,CAAE,MAAkC,qBAAqB;AAGnE,mBAAe,EAAE,UAAU,IAAI,KAAK,OAAO,GAAG,eAAe,KAAK;AAClE,WAAO,GAAG,8BAA8B,YAAY,CAAC;AACrD,YAAQ,YAAY,IAAI,QAAQ,iBAAiB,YAAY,CAAC;AAC9D,WAAO,iBAAiB,uBAAuB;AAG/C,UAAM,WAAW,YAAY,IAAI,qBAAqB,eAAe,qBAAqB,iBAAiB,CAAC;AAE5G,YAAQ,YAAY,IAAI,QAAQ,iBAAiB,EAAE,UAAU,IAAI,MAAM,6BAA6B,GAAG,eAAe,MAAM,SAAS,EAAE,WAAW,EAAE,iBAAiB,GAAG,aAAa,EAAE,EAAE,EAAE,CAAC,CAAC;AAC7L,WAAO,iBAAiB,uBAAuB;AAC/C,WAAO,GAAI,MAAkC,qBAAqB;AAElE,aAAS,QAAQ;AAGjB,YAAQ,YAAY,IAAI,QAAQ,iBAAiB,EAAE,UAAU,IAAI,MAAM,iBAAiB,EAAE,CAAC,CAAC;AAC5F,WAAO,iBAAiB,uBAAuB;AAG/C,UAAM,oBAAoB;AAAA,MACzB,UAAU,EAAE,UAAU,WAAW,KAAK,MAAM,gBAAgB,EAAE;AAAA,MAC9D,UAAU,EAAE,UAAU,WAAW,KAAK,MAAM,gBAAgB,EAAE;AAAA,IAC/D;AACA,WAAO,YAAY,0BAA0B,iBAAiB,GAAG,IAAI;AACrE,YAAQ,YAAY,IAAI,QAAQ,iBAAiB,iBAAiB,CAAC;AACnE,WAAO,iBAAiB,eAAe;AACvC,gBAAY,IAAI,MAAM,QAAQ;AAC9B,gBAAY,IAAI,MAAM,QAAQ;AAC9B,WAAO,YAAY,MAAM,SAAS,UAAU,SAAS,GAAG,kBAAkB,SAAS,SAAS,SAAS,CAAC;AACtG,WAAO,YAAY,MAAM,SAAS,UAAU,SAAS,GAAG,kBAAkB,SAAS,SAAS,SAAS,CAAC;AACtG,UAAM,mBAAmB,MAAM,UAAU;AACzC,WAAO,YAAY,iBAAiB,SAAS,UAAU,SAAS,GAAG,kBAAkB,SAAS,SAAS,SAAS,CAAC;AACjH,WAAO,YAAY,iBAAiB,SAAS,UAAU,SAAS,GAAG,kBAAkB,SAAS,SAAS,SAAS,CAAC;AAGjH,UAAM,0BAA0B;AAAA,MAC/B,SAAS,EAAE,UAAU,WAAW,KAAK,MAAM,eAAe,EAAE;AAAA,MAC5D,WAAW,EAAE,UAAU,WAAW,KAAK,MAAM,iBAAiB,EAAE;AAAA,IACjE;AACA,WAAO,YAAY,gCAAgC,uBAAuB,GAAG,IAAI;AACjF,YAAQ,YAAY,IAAI,QAAQ,iBAAiB,uBAAuB,CAAC;AACzE,WAAO,iBAAiB,qBAAqB;AAC7C,gBAAY,IAAI,MAAM,OAAO;AAC7B,gBAAY,IAAI,MAAM,SAAS;AAC/B,WAAO,YAAY,MAAM,QAAQ,UAAU,SAAS,GAAG,wBAAwB,QAAQ,SAAS,SAAS,CAAC;AAC1G,WAAO,YAAY,MAAM,UAAU,UAAU,SAAS,GAAG,wBAAwB,UAAU,SAAS,SAAS,CAAC;AAC9G,UAAM,yBAAyB,MAAM,UAAU;AAC/C,WAAO,YAAY,uBAAuB,QAAQ,UAAU,SAAS,GAAG,wBAAwB,QAAQ,SAAS,SAAS,CAAC;AAC3H,WAAO,YAAY,uBAAuB,UAAU,UAAU,SAAS,GAAG,wBAAwB,UAAU,SAAS,SAAS,CAAC;AAAA,EAChI,CAAC;AAED,OAAK,6BAA6B,WAAY;AAC7C,UAAM,uBAAuB,8BAA8B,QAAW,WAAW;AACjF,UAAM,UAAU,YAAY,IAAI,qBAAqB,eAAe,iBAAiB,CAAC;AAGtF,UAAM,gBAAqB,WAAW,KAAK,MAAM,oBAAoB;AACrE,UAAM,mBAAmB,YAAY,IAAI,QAAQ,iBAAiB,EAAE,UAAU,cAAc,CAAC,CAAC;AAC9F,WAAO,GAAG,gBAAgB;AAE1B,UAAM,gBAAgB,WAAW,KAAK,MAAM,oBAAoB;AAChE,UAAM,mBAAmB,YAAY,IAAI,QAAQ,iBAAiB,EAAE,UAAU,cAAc,CAAC,CAAC;AAC9F,WAAO,GAAG,gBAAgB;AAE1B,WAAO,eAAe,kBAAkB,gBAAgB;AAExD,UAAM,wBAAwB,YAAY,IAAI,QAAQ,iBAAiB,EAAE,UAAU,cAAc,CAAC,CAAC;AACnG,WAAO,YAAY,uBAAuB,gBAAgB;AAE1D,0BAAsB,QAAQ;AAE9B,WAAO,GAAG,iBAAiB,WAAW,CAAC;AAEvC,UAAM,gCAAgC,YAAY,IAAI,QAAQ,iBAAiB,EAAE,UAAU,cAAc,CAAC,CAAC;AAC3G,WAAO,eAAe,+BAA+B,gBAAgB;AACrE,WAAO,GAAG,CAAC,8BAA8B,WAAW,CAAC;AAGrD,UAAM,YAAY,IAAI,KAAK,EAAE,QAAQ,UAAU,MAAM,qBAAqB,CAAC;AAC3E,UAAM,SAAS,YAAY,IAAI,QAAQ,iBAAiB,EAAE,UAAU,UAAU,CAAC,CAAC;AAChF,WAAO,GAAG,MAAM;AAEhB,UAAM,YAAY,IAAI,KAAK,EAAE,QAAQ,UAAU,MAAM,qBAAqB,CAAC;AAC3E,UAAM,SAAS,YAAY,IAAI,QAAQ,iBAAiB,EAAE,UAAU,UAAU,CAAC,CAAC;AAChF,WAAO,GAAG,MAAM;AAEhB,WAAO,eAAe,QAAQ,MAAM;AAEpC,UAAM,cAAc,YAAY,IAAI,QAAQ,iBAAiB,EAAE,UAAU,UAAU,CAAC,CAAC;AACrF,WAAO,YAAY,aAAa,MAAM;AAEtC,gBAAY,QAAQ;AAEpB,WAAO,GAAG,OAAO,WAAW,CAAC;AAE7B,UAAM,sBAAsB,YAAY,IAAI,QAAQ,iBAAiB,EAAE,UAAU,UAAU,CAAC,CAAC;AAC7F,WAAO,eAAe,qBAAqB,MAAM;AACjD,WAAO,GAAG,CAAC,oBAAoB,WAAW,CAAC;AAAA,EAC5C,CAAC;AAED,0CAAwC;AACzC,CAAC;",
  "names": []
}
