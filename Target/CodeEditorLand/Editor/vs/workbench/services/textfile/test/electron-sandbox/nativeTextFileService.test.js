import s from"assert";import"../../common/textfiles.js";import{IFileService as a}from"../../../../../platform/files/common/files.js";import"../../common/textFileEditorModelManager.js";import{Schemas as l}from"../../../../../base/common/network.js";import{ServiceCollection as d}from"../../../../../platform/instantiation/common/serviceCollection.js";import{DisposableStore as m}from"../../../../../base/common/lifecycle.js";import{FileService as v}from"../../../../../platform/files/common/fileService.js";import{NullLogService as f}from"../../../../../platform/log/common/log.js";import{TestNativeTextFileServiceWithEncodingOverrides as S,TestServiceAccessor as p,workbenchInstantiationService as u}from"../../../../test/electron-sandbox/workbenchTestServices.js";import{IWorkingCopyFileService as w,WorkingCopyFileService as I}from"../../../workingCopy/common/workingCopyFileService.js";import{WorkingCopyService as F}from"../../../workingCopy/common/workingCopyService.js";import{UriIdentityService as g}from"../../../../../platform/uriIdentity/common/uriIdentityService.js";import{InMemoryFileSystemProvider as h}from"../../../../../platform/files/common/inMemoryFilesystemProvider.js";import"../../../../../platform/instantiation/common/instantiation.js";import{TextFileEditorModel as y}from"../../common/textFileEditorModel.js";import{ensureNoDisposablesAreLeakedInTestSuite as T,toResource as x}from"../../../../../base/test/common/utils.js";suite("Files - NativeTextFileService",function(){const e=new m;let c,t;setup(()=>{t=u(void 0,e);const o=new f,i=e.add(new v(o)),r=e.add(new h);e.add(i.registerProvider(l.file,r));const n=new d;n.set(a,i),n.set(w,e.add(new I(i,e.add(new F),t,e.add(new g(i))))),c=e.add(t.createChild(n).createInstance(S)),e.add(c.files)}),teardown(()=>{e.clear()}),test("shutdown joins on pending saves",async function(){const o=e.add(t.createInstance(y,x.call(this,"/path/index_async.txt"),"utf8",void 0));await o.resolve();let i=!1;o.save().then(()=>i=!0);const r=t.createInstance(p);r.lifecycleService.fireShutdown(),s.ok(r.lifecycleService.shutdownJoiners.length>0),await Promise.all(r.lifecycleService.shutdownJoiners),s.strictEqual(i,!0)}),T()});
