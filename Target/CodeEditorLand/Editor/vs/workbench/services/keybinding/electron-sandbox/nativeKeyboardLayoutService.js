var u=Object.defineProperty;var s=Object.getOwnPropertyDescriptor;var d=(i,e,o,a)=>{for(var r=a>1?void 0:a?s(e,o):e,n=i.length-1,y;n>=0;n--)(y=i[n])&&(r=(a?y(e,o,r):y(r))||r);return a&&r&&u(e,o,r),r},p=(i,e)=>(o,a)=>e(o,a,i);import{Emitter as b}from"../../../../base/common/event.js";import{Disposable as l}from"../../../../base/common/lifecycle.js";import{OS as c,OperatingSystem as g}from"../../../../base/common/platform.js";import{ProxyChannel as I}from"../../../../base/parts/ipc/common/ipc.js";import{createDecorator as L}from"../../../../platform/instantiation/common/instantiation.js";import{IMainProcessService as v}from"../../../../platform/ipc/common/mainProcessService.js";import{macLinuxKeyboardMappingEquals as K,windowsKeyboardMappingEquals as m}from"../../../../platform/keyboardLayout/common/keyboardLayout.js";const D=L("nativeKeyboardLayoutService");let t=class extends l{_onDidChangeKeyboardLayout=this._register(new b);onDidChangeKeyboardLayout=this._onDidChangeKeyboardLayout.event;_keyboardLayoutService;_initPromise;_keyboardMapping;_keyboardLayoutInfo;constructor(e){super(),this._keyboardLayoutService=I.toService(e.getChannel("keyboardLayout")),this._initPromise=null,this._keyboardMapping=null,this._keyboardLayoutInfo=null,this._register(this._keyboardLayoutService.onDidChangeKeyboardLayout(async({keyboardLayoutInfo:o,keyboardMapping:a})=>{await this.initialize(),!h(this._keyboardMapping,a)&&(this._keyboardMapping=a,this._keyboardLayoutInfo=o,this._onDidChangeKeyboardLayout.fire())}))}initialize(){return this._initPromise||(this._initPromise=this._doInitialize()),this._initPromise}async _doInitialize(){const e=await this._keyboardLayoutService.getKeyboardLayoutData(),{keyboardLayoutInfo:o,keyboardMapping:a}=e;this._keyboardMapping=a,this._keyboardLayoutInfo=o}getRawKeyboardMapping(){return this._keyboardMapping}getCurrentKeyboardLayout(){return this._keyboardLayoutInfo}};t=d([p(0,v)],t);function h(i,e){return c===g.Windows?m(i,e):K(i,e)}export{D as INativeKeyboardLayoutService,t as NativeKeyboardLayoutService};
