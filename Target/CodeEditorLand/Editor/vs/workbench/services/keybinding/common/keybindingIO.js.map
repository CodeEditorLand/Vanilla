{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/keybinding/common/keybindingIO.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeybindingParser } from '../../../../base/common/keybindingParser.js';\nimport { Keybinding } from '../../../../base/common/keybindings.js';\nimport { ContextKeyExpr, ContextKeyExpression } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ResolvedKeybindingItem } from '../../../../platform/keybinding/common/resolvedKeybindingItem.js';\n\nexport interface IUserKeybindingItem {\n\tkeybinding: Keybinding | null;\n\tcommand: string | null;\n\tcommandArgs?: any;\n\twhen: ContextKeyExpression | undefined;\n\t_sourceKey: string | undefined; /** captures `key` field from `keybindings.json`; `this.keybinding !== null` implies `_sourceKey !== null` */\n}\n\nexport class KeybindingIO {\n\n\tpublic static writeKeybindingItem(out: OutputBuilder, item: ResolvedKeybindingItem): void {\n\t\tif (!item.resolvedKeybinding) {\n\t\t\treturn;\n\t\t}\n\t\tconst quotedSerializedKeybinding = JSON.stringify(item.resolvedKeybinding.getUserSettingsLabel());\n\t\tout.write(`{ \"key\": ${rightPaddedString(quotedSerializedKeybinding + ',', 25)} \"command\": `);\n\n\t\tconst quotedSerializedWhen = item.when ? JSON.stringify(item.when.serialize()) : '';\n\t\tconst quotedSerializeCommand = JSON.stringify(item.command);\n\t\tif (quotedSerializedWhen.length > 0) {\n\t\t\tout.write(`${quotedSerializeCommand},`);\n\t\t\tout.writeLine();\n\t\t\tout.write(`                                     \"when\": ${quotedSerializedWhen}`);\n\t\t} else {\n\t\t\tout.write(`${quotedSerializeCommand}`);\n\t\t}\n\t\tif (item.commandArgs) {\n\t\t\tout.write(',');\n\t\t\tout.writeLine();\n\t\t\tout.write(`                                     \"args\": ${JSON.stringify(item.commandArgs)}`);\n\t\t}\n\t\tout.write(' }');\n\t}\n\n\tpublic static readUserKeybindingItem(input: Object): IUserKeybindingItem {\n\t\tconst keybinding = 'key' in input && typeof input.key === 'string'\n\t\t\t? KeybindingParser.parseKeybinding(input.key)\n\t\t\t: null;\n\t\tconst when = 'when' in input && typeof input.when === 'string'\n\t\t\t? ContextKeyExpr.deserialize(input.when)\n\t\t\t: undefined;\n\t\tconst command = 'command' in input && typeof input.command === 'string'\n\t\t\t? input.command\n\t\t\t: null;\n\t\tconst commandArgs = 'args' in input && typeof input.args !== 'undefined'\n\t\t\t? input.args\n\t\t\t: undefined;\n\t\treturn {\n\t\t\tkeybinding,\n\t\t\tcommand,\n\t\t\tcommandArgs,\n\t\t\twhen,\n\t\t\t_sourceKey: 'key' in input && typeof input.key === 'string' ? input.key : undefined,\n\t\t};\n\t}\n}\n\nfunction rightPaddedString(str: string, minChars: number): string {\n\tif (str.length < minChars) {\n\t\treturn str + (new Array(minChars - str.length).join(' '));\n\t}\n\treturn str;\n}\n\nexport class OutputBuilder {\n\n\tprivate _lines: string[] = [];\n\tprivate _currentLine: string = '';\n\n\twrite(str: string): void {\n\t\tthis._currentLine += str;\n\t}\n\n\twriteLine(str: string = ''): void {\n\t\tthis._lines.push(this._currentLine + str);\n\t\tthis._currentLine = '';\n\t}\n\n\ttoString(): string {\n\t\tthis.writeLine();\n\t\treturn this._lines.join('\\n');\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,wBAAwB;AACjC,SAAS,kBAAkB;AAC3B,SAAS,gBAAgB,4BAA4B;AACrD,SAAS,8BAA8B;AAUhC,MAAM,aAAa;AAAA,EAlB1B,OAkB0B;AAAA;AAAA;AAAA,EAEzB,OAAc,oBAAoB,KAAoB,MAAoC;AACzF,QAAI,CAAC,KAAK,oBAAoB;AAC7B;AAAA,IACD;AACA,UAAM,6BAA6B,KAAK,UAAU,KAAK,mBAAmB,qBAAqB,CAAC;AAChG,QAAI,MAAM,YAAY,kBAAkB,6BAA6B,KAAK,EAAE,CAAC,cAAc;AAE3F,UAAM,uBAAuB,KAAK,OAAO,KAAK,UAAU,KAAK,KAAK,UAAU,CAAC,IAAI;AACjF,UAAM,yBAAyB,KAAK,UAAU,KAAK,OAAO;AAC1D,QAAI,qBAAqB,SAAS,GAAG;AACpC,UAAI,MAAM,GAAG,sBAAsB,GAAG;AACtC,UAAI,UAAU;AACd,UAAI,MAAM,gDAAgD,oBAAoB,EAAE;AAAA,IACjF,OAAO;AACN,UAAI,MAAM,GAAG,sBAAsB,EAAE;AAAA,IACtC;AACA,QAAI,KAAK,aAAa;AACrB,UAAI,MAAM,GAAG;AACb,UAAI,UAAU;AACd,UAAI,MAAM,gDAAgD,KAAK,UAAU,KAAK,WAAW,CAAC,EAAE;AAAA,IAC7F;AACA,QAAI,MAAM,IAAI;AAAA,EACf;AAAA,EAEA,OAAc,uBAAuB,OAAoC;AACxE,UAAM,aAAa,SAAS,SAAS,OAAO,MAAM,QAAQ,WACvD,iBAAiB,gBAAgB,MAAM,GAAG,IAC1C;AACH,UAAM,OAAO,UAAU,SAAS,OAAO,MAAM,SAAS,WACnD,eAAe,YAAY,MAAM,IAAI,IACrC;AACH,UAAM,UAAU,aAAa,SAAS,OAAO,MAAM,YAAY,WAC5D,MAAM,UACN;AACH,UAAM,cAAc,UAAU,SAAS,OAAO,MAAM,SAAS,cAC1D,MAAM,OACN;AACH,WAAO;AAAA,MACN;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,YAAY,SAAS,SAAS,OAAO,MAAM,QAAQ,WAAW,MAAM,MAAM;AAAA,IAC3E;AAAA,EACD;AACD;AAEA,SAAS,kBAAkB,KAAa,UAA0B;AACjE,MAAI,IAAI,SAAS,UAAU;AAC1B,WAAO,MAAO,IAAI,MAAM,WAAW,IAAI,MAAM,EAAE,KAAK,GAAG;AAAA,EACxD;AACA,SAAO;AACR;AALS;AAOF,MAAM,cAAc;AAAA,EA1E3B,OA0E2B;AAAA;AAAA;AAAA,EAElB,SAAmB,CAAC;AAAA,EACpB,eAAuB;AAAA,EAE/B,MAAM,KAAmB;AACxB,SAAK,gBAAgB;AAAA,EACtB;AAAA,EAEA,UAAU,MAAc,IAAU;AACjC,SAAK,OAAO,KAAK,KAAK,eAAe,GAAG;AACxC,SAAK,eAAe;AAAA,EACrB;AAAA,EAEA,WAAmB;AAClB,SAAK,UAAU;AACf,WAAO,KAAK,OAAO,KAAK,IAAI;AAAA,EAC7B;AACD;",
  "names": []
}
