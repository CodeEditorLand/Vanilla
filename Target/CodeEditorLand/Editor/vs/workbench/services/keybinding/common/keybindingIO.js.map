{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/keybinding/common/keybindingIO.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeybindingParser } from \"../../../../base/common/keybindingParser.js\";\nimport type { Keybinding } from \"../../../../base/common/keybindings.js\";\nimport {\n\tContextKeyExpr,\n\ttype ContextKeyExpression,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport type { ResolvedKeybindingItem } from \"../../../../platform/keybinding/common/resolvedKeybindingItem.js\";\n\nexport interface IUserKeybindingItem {\n\tkeybinding: Keybinding | null;\n\tcommand: string | null;\n\tcommandArgs?: any;\n\twhen: ContextKeyExpression | undefined;\n\t_sourceKey:\n\t\t| string\n\t\t| undefined /** captures `key` field from `keybindings.json`; `this.keybinding !== null` implies `_sourceKey !== null` */;\n}\n\nexport class KeybindingIO {\n\tpublic static writeKeybindingItem(\n\t\tout: OutputBuilder,\n\t\titem: ResolvedKeybindingItem,\n\t): void {\n\t\tif (!item.resolvedKeybinding) {\n\t\t\treturn;\n\t\t}\n\t\tconst quotedSerializedKeybinding = JSON.stringify(\n\t\t\titem.resolvedKeybinding.getUserSettingsLabel(),\n\t\t);\n\t\tout.write(\n\t\t\t`{ \"key\": ${rightPaddedString(quotedSerializedKeybinding + \",\", 25)} \"command\": `,\n\t\t);\n\n\t\tconst quotedSerializedWhen = item.when\n\t\t\t? JSON.stringify(item.when.serialize())\n\t\t\t: \"\";\n\t\tconst quotedSerializeCommand = JSON.stringify(item.command);\n\t\tif (quotedSerializedWhen.length > 0) {\n\t\t\tout.write(`${quotedSerializeCommand},`);\n\t\t\tout.writeLine();\n\t\t\tout.write(\n\t\t\t\t`                                     \"when\": ${quotedSerializedWhen}`,\n\t\t\t);\n\t\t} else {\n\t\t\tout.write(`${quotedSerializeCommand}`);\n\t\t}\n\t\tif (item.commandArgs) {\n\t\t\tout.write(\",\");\n\t\t\tout.writeLine();\n\t\t\tout.write(\n\t\t\t\t`                                     \"args\": ${JSON.stringify(item.commandArgs)}`,\n\t\t\t);\n\t\t}\n\t\tout.write(\" }\");\n\t}\n\n\tpublic static readUserKeybindingItem(input: Object): IUserKeybindingItem {\n\t\tconst keybinding =\n\t\t\t\"key\" in input && typeof input.key === \"string\"\n\t\t\t\t? KeybindingParser.parseKeybinding(input.key)\n\t\t\t\t: null;\n\t\tconst when =\n\t\t\t\"when\" in input && typeof input.when === \"string\"\n\t\t\t\t? ContextKeyExpr.deserialize(input.when)\n\t\t\t\t: undefined;\n\t\tconst command =\n\t\t\t\"command\" in input && typeof input.command === \"string\"\n\t\t\t\t? input.command\n\t\t\t\t: null;\n\t\tconst commandArgs =\n\t\t\t\"args\" in input && typeof input.args !== \"undefined\"\n\t\t\t\t? input.args\n\t\t\t\t: undefined;\n\t\treturn {\n\t\t\tkeybinding,\n\t\t\tcommand,\n\t\t\tcommandArgs,\n\t\t\twhen,\n\t\t\t_sourceKey:\n\t\t\t\t\"key\" in input && typeof input.key === \"string\"\n\t\t\t\t\t? input.key\n\t\t\t\t\t: undefined,\n\t\t};\n\t}\n}\n\nfunction rightPaddedString(str: string, minChars: number): string {\n\tif (str.length < minChars) {\n\t\treturn str + new Array(minChars - str.length).join(\" \");\n\t}\n\treturn str;\n}\n\nexport class OutputBuilder {\n\tprivate _lines: string[] = [];\n\tprivate _currentLine = \"\";\n\n\twrite(str: string): void {\n\t\tthis._currentLine += str;\n\t}\n\n\twriteLine(str = \"\"): void {\n\t\tthis._lines.push(this._currentLine + str);\n\t\tthis._currentLine = \"\";\n\t}\n\n\ttoString(): string {\n\t\tthis.writeLine();\n\t\treturn this._lines.join(\"\\n\");\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,wBAAwB;AAEjC;AAAA,EACC;AAAA,OAEM;AAaA,MAAM,aAAa;AAAA,EAvB1B,OAuB0B;AAAA;AAAA;AAAA,EACzB,OAAc,oBACb,KACA,MACO;AACP,QAAI,CAAC,KAAK,oBAAoB;AAC7B;AAAA,IACD;AACA,UAAM,6BAA6B,KAAK;AAAA,MACvC,KAAK,mBAAmB,qBAAqB;AAAA,IAC9C;AACA,QAAI;AAAA,MACH,YAAY,kBAAkB,6BAA6B,KAAK,EAAE,CAAC;AAAA,IACpE;AAEA,UAAM,uBAAuB,KAAK,OAC/B,KAAK,UAAU,KAAK,KAAK,UAAU,CAAC,IACpC;AACH,UAAM,yBAAyB,KAAK,UAAU,KAAK,OAAO;AAC1D,QAAI,qBAAqB,SAAS,GAAG;AACpC,UAAI,MAAM,GAAG,sBAAsB,GAAG;AACtC,UAAI,UAAU;AACd,UAAI;AAAA,QACH,gDAAgD,oBAAoB;AAAA,MACrE;AAAA,IACD,OAAO;AACN,UAAI,MAAM,GAAG,sBAAsB,EAAE;AAAA,IACtC;AACA,QAAI,KAAK,aAAa;AACrB,UAAI,MAAM,GAAG;AACb,UAAI,UAAU;AACd,UAAI;AAAA,QACH,gDAAgD,KAAK,UAAU,KAAK,WAAW,CAAC;AAAA,MACjF;AAAA,IACD;AACA,QAAI,MAAM,IAAI;AAAA,EACf;AAAA,EAEA,OAAc,uBAAuB,OAAoC;AACxE,UAAM,aACL,SAAS,SAAS,OAAO,MAAM,QAAQ,WACpC,iBAAiB,gBAAgB,MAAM,GAAG,IAC1C;AACJ,UAAM,OACL,UAAU,SAAS,OAAO,MAAM,SAAS,WACtC,eAAe,YAAY,MAAM,IAAI,IACrC;AACJ,UAAM,UACL,aAAa,SAAS,OAAO,MAAM,YAAY,WAC5C,MAAM,UACN;AACJ,UAAM,cACL,UAAU,SAAS,OAAO,MAAM,SAAS,cACtC,MAAM,OACN;AACJ,WAAO;AAAA,MACN;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,YACC,SAAS,SAAS,OAAO,MAAM,QAAQ,WACpC,MAAM,MACN;AAAA,IACL;AAAA,EACD;AACD;AAEA,SAAS,kBAAkB,KAAa,UAA0B;AACjE,MAAI,IAAI,SAAS,UAAU;AAC1B,WAAO,MAAM,IAAI,MAAM,WAAW,IAAI,MAAM,EAAE,KAAK,GAAG;AAAA,EACvD;AACA,SAAO;AACR;AALS;AAOF,MAAM,cAAc;AAAA,EAlG3B,OAkG2B;AAAA;AAAA;AAAA,EAClB,SAAmB,CAAC;AAAA,EACpB,eAAe;AAAA,EAEvB,MAAM,KAAmB;AACxB,SAAK,gBAAgB;AAAA,EACtB;AAAA,EAEA,UAAU,MAAM,IAAU;AACzB,SAAK,OAAO,KAAK,KAAK,eAAe,GAAG;AACxC,SAAK,eAAe;AAAA,EACrB;AAAA,EAEA,WAAmB;AAClB,SAAK,UAAU;AACf,WAAO,KAAK,OAAO,KAAK,IAAI;AAAA,EAC7B;AACD;",
  "names": []
}
