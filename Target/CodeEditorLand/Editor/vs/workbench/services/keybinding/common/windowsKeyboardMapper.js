import{CharCode as o}from"../../../../base/common/charCode.js";import{IMMUTABLE_CODE_TO_KEY_CODE as L,KeyCode as t,KeyCodeUtils as K,NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE as A,ScanCode as c,ScanCodeUtils as U}from"../../../../base/common/keyCodes.js";import{UILabelProvider as G}from"../../../../base/common/keybindingLabels.js";import{KeyCodeChord as k,ScanCodeChord as T}from"../../../../base/common/keybindings.js";import{OperatingSystem as E}from"../../../../base/common/platform.js";import{BaseResolvedKeybinding as Y}from"../../../../platform/keybinding/common/baseResolvedKeybinding.js";import{toEmptyArrayIfContainsNull as D}from"../../../../platform/keybinding/common/resolvedKeybindingItem.js";const O=!1;function q(w){}class _ extends Y{_mapper;constructor(e,r){super(E.Windows,r),this._mapper=e}_getLabel(e){return e.isDuplicateModifierCase()?"":this._mapper.getUILabelForKeyCode(e.keyCode)}_getUSLabelForKeybinding(e){return e.isDuplicateModifierCase()?"":K.toString(e.keyCode)}getUSLabel(){return G.toLabel(this._os,this._chords,e=>this._getUSLabelForKeybinding(e))}_getAriaLabel(e){return e.isDuplicateModifierCase()?"":this._mapper.getAriaLabelForKeyCode(e.keyCode)}_getElectronAccelerator(e){return this._mapper.getElectronAcceleratorForKeyBinding(e)}_getUserSettingsLabel(e){if(e.isDuplicateModifierCase())return"";const r=this._mapper.getUserSettingsLabelForKeyCode(e.keyCode);return r&&r.toLowerCase()}_isWYSIWYG(e){return this.__isWYSIWYG(e.keyCode)}__isWYSIWYG(e){if(e===t.LeftArrow||e===t.UpArrow||e===t.RightArrow||e===t.DownArrow)return!0;const r=this._mapper.getAriaLabelForKeyCode(e),a=this._mapper.getUserSettingsLabelForKeyCode(e);return r===a}_getChordDispatch(e){if(e.isModifierKey())return null;let r="";return e.ctrlKey&&(r+="ctrl+"),e.shiftKey&&(r+="shift+"),e.altKey&&(r+="alt+"),e.metaKey&&(r+="meta+"),r+=K.toString(e.keyCode),r}_getSingleModifierChordDispatch(e){return e.keyCode===t.Ctrl&&!e.shiftKey&&!e.altKey&&!e.metaKey?"ctrl":e.keyCode===t.Shift&&!e.ctrlKey&&!e.altKey&&!e.metaKey?"shift":e.keyCode===t.Alt&&!e.ctrlKey&&!e.shiftKey&&!e.metaKey?"alt":e.keyCode===t.Meta&&!e.ctrlKey&&!e.shiftKey&&!e.altKey?"meta":null}static getProducedCharCode(e,r){return r?e.ctrlKey&&e.shiftKey&&e.altKey?r.withShiftAltGr:e.ctrlKey&&e.altKey?r.withAltGr:e.shiftKey?r.withShift:r.value:null}static getProducedChar(e,r){const a=this.getProducedCharCode(e,r);return a===null||a.length===0?" --- ":"  "+a+"  "}}class j{constructor(e,r,a){this._isUSStandard=e;this._mapAltGrToCtrlAlt=a;this._scanCodeToKeyCode=[],this._keyCodeToLabel=[],this._keyCodeExists=[],this._keyCodeToLabel[t.Unknown]=K.toString(t.Unknown);for(let i=c.None;i<c.MAX_VALUE;i++){const s=L[i];s!==t.DependsOnKbLayout&&(this._scanCodeToKeyCode[i]=s,this._keyCodeToLabel[s]=K.toString(s),this._keyCodeExists[s]=!0)}const d=[];let h=!1;this._codeInfo=[];for(const i in r)if(r.hasOwnProperty(i)){const s=U.toEnum(i);if(s===c.None){`${i}`;continue}const C=r[i],p=L[s];if(p!==t.DependsOnKbLayout){const y=A[C.vkey]||t.Unknown;if(y===t.Unknown||p===y||s!==c.NumpadComma)continue}const u=C.value,g=C.withShift,f=C.withAltGr,b=C.withShiftAltGr,l=A[C.vkey]||t.Unknown,m={scanCode:s,keyCode:l,value:u,withShift:g,withAltGr:f,withShiftAltGr:b};if(this._codeInfo[s]=m,this._scanCodeToKeyCode[s]=l,l===t.Unknown)continue;if(this._keyCodeExists[l]=!0,u.length===0)this._keyCodeToLabel[l]=null;else if(u.length>1)this._keyCodeToLabel[l]=u;else{const y=u.charCodeAt(0);if(y>=o.a&&y<=o.z){const S=o.A+(y-o.a);d[S]=!0,h=!0,this._keyCodeToLabel[l]=String.fromCharCode(o.A+(y-o.a))}else y>=o.A&&y<=o.Z?(d[y]=!0,h=!0,this._keyCodeToLabel[l]=u):this._keyCodeToLabel[l]=u}}const n=(i,s)=>{d[i]||(this._keyCodeToLabel[s]=String.fromCharCode(i))};if(n(o.A,t.KeyA),n(o.B,t.KeyB),n(o.C,t.KeyC),n(o.D,t.KeyD),n(o.E,t.KeyE),n(o.F,t.KeyF),n(o.G,t.KeyG),n(o.H,t.KeyH),n(o.I,t.KeyI),n(o.J,t.KeyJ),n(o.K,t.KeyK),n(o.L,t.KeyL),n(o.M,t.KeyM),n(o.N,t.KeyN),n(o.O,t.KeyO),n(o.P,t.KeyP),n(o.Q,t.KeyQ),n(o.R,t.KeyR),n(o.S,t.KeyS),n(o.T,t.KeyT),n(o.U,t.KeyU),n(o.V,t.KeyV),n(o.W,t.KeyW),n(o.X,t.KeyX),n(o.Y,t.KeyY),n(o.Z,t.KeyZ),!h){const i=(s,C)=>{this._keyCodeToLabel[s]=String.fromCharCode(C)};i(t.Semicolon,o.Semicolon),i(t.Equal,o.Equals),i(t.Comma,o.Comma),i(t.Minus,o.Dash),i(t.Period,o.Period),i(t.Slash,o.Slash),i(t.Backquote,o.BackTick),i(t.BracketLeft,o.OpenSquareBracket),i(t.Backslash,o.Backslash),i(t.BracketRight,o.CloseSquareBracket),i(t.Quote,o.SingleQuote)}}_codeInfo;_scanCodeToKeyCode;_keyCodeToLabel=[];_keyCodeExists;dumpDebugInfo(){const e=[],r=[c.ArrowUp,c.Numpad0];let a=0;e.push("-----------------------------------------------------------------------------------------------------------------------------------------");for(let d=c.None;d<c.MAX_VALUE;d++){if(L[d]!==t.DependsOnKbLayout&&r.indexOf(d)===-1)continue;a%6===0&&(e.push("|       HW Code combination      |  Key  |    KeyCode combination    |          UI label         |        User settings       | WYSIWYG |"),e.push("-----------------------------------------------------------------------------------------------------------------------------------------")),a++;const h=this._codeInfo[d],n=U.toString(d),i=[0,2,5,7];for(const s of i){const C=!!(s&1),p=!!(s&2),u=!!(s&4),g=new T(C,p,u,!1,d),f=this._resolveChord(g),b=f?K.toString(f.keyCode):null,l=f?new _(this,[f]):null,m=`${C?"Ctrl+":""}${p?"Shift+":""}${u?"Alt+":""}${n}`,y=l?l.getAriaLabel():null,S=y?y.replace(/Control\+/,"Ctrl+"):null,I=l?l.getUserSettingsLabel():null,v=_.getProducedChar(g,h),M=b?`${C?"Ctrl+":""}${p?"Shift+":""}${u?"Alt+":""}${b}`:null,W=(l?l.isWYSIWYG():!1)?"       ":"   NO  ";e.push(`| ${this._leftPad(m,30)} | ${v} | ${this._leftPad(M,25)} | ${this._leftPad(S,25)} |  ${this._leftPad(I,25)} | ${W} |`)}e.push("-----------------------------------------------------------------------------------------------------------------------------------------")}return e.join(`
`)}_leftPad(e,r){for(e===null&&(e="null");e.length<r;)e=" "+e;return e}getUILabelForKeyCode(e){return this._getLabelForKeyCode(e)}getAriaLabelForKeyCode(e){return this._getLabelForKeyCode(e)}getUserSettingsLabelForKeyCode(e){return this._isUSStandard?K.toUserSettingsUS(e):K.toUserSettingsGeneral(e)}getElectronAcceleratorForKeyBinding(e){return K.toElectronAccelerator(e.keyCode)}_getLabelForKeyCode(e){return this._keyCodeToLabel[e]||K.toString(t.Unknown)}resolveKeyboardEvent(e){const r=e.ctrlKey||this._mapAltGrToCtrlAlt&&e.altGraphKey,a=e.altKey||this._mapAltGrToCtrlAlt&&e.altGraphKey,d=new k(r,e.shiftKey,a,e.metaKey,e.keyCode);return new _(this,[d])}_resolveChord(e){if(!e)return null;if(e instanceof k)return this._keyCodeExists[e.keyCode]?e:null;const r=this._scanCodeToKeyCode[e.scanCode]||t.Unknown;return r===t.Unknown||!this._keyCodeExists[r]?null:new k(e.ctrlKey,e.shiftKey,e.altKey,e.metaKey,r)}resolveKeybinding(e){const r=D(e.chords.map(a=>this._resolveChord(a)));return r.length>0?[new _(this,r)]:[]}}export{j as WindowsKeyboardMapper,_ as WindowsNativeResolvedKeybinding};
