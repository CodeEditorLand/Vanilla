{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/keybinding/common/fallbackKeyboardMapper.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ResolvedKeybinding, KeyCodeChord, Keybinding } from '../../../../base/common/keybindings.js';\nimport { OperatingSystem } from '../../../../base/common/platform.js';\nimport { IKeyboardEvent } from '../../../../platform/keybinding/common/keybinding.js';\nimport { USLayoutResolvedKeybinding } from '../../../../platform/keybinding/common/usLayoutResolvedKeybinding.js';\nimport { IKeyboardMapper } from '../../../../platform/keyboardLayout/common/keyboardMapper.js';\n\n/**\n * A keyboard mapper to be used when reading the keymap from the OS fails.\n */\nexport class FallbackKeyboardMapper implements IKeyboardMapper {\n\n\tconstructor(\n\t\tprivate readonly _mapAltGrToCtrlAlt: boolean,\n\t\tprivate readonly _OS: OperatingSystem,\n\t) { }\n\n\tpublic dumpDebugInfo(): string {\n\t\treturn 'FallbackKeyboardMapper dispatching on keyCode';\n\t}\n\n\tpublic resolveKeyboardEvent(keyboardEvent: IKeyboardEvent): ResolvedKeybinding {\n\t\tconst ctrlKey = keyboardEvent.ctrlKey || (this._mapAltGrToCtrlAlt && keyboardEvent.altGraphKey);\n\t\tconst altKey = keyboardEvent.altKey || (this._mapAltGrToCtrlAlt && keyboardEvent.altGraphKey);\n\t\tconst chord = new KeyCodeChord(\n\t\t\tctrlKey,\n\t\t\tkeyboardEvent.shiftKey,\n\t\t\taltKey,\n\t\t\tkeyboardEvent.metaKey,\n\t\t\tkeyboardEvent.keyCode\n\t\t);\n\t\tconst result = this.resolveKeybinding(new Keybinding([chord]));\n\t\treturn result[0];\n\t}\n\n\tpublic resolveKeybinding(keybinding: Keybinding): ResolvedKeybinding[] {\n\t\treturn USLayoutResolvedKeybinding.resolveKeybinding(keybinding, this._OS);\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,oBAAoB,cAAc,kBAAkB;AAC7D,SAAS,uBAAuB;AAChC,SAAS,sBAAsB;AAC/B,SAAS,kCAAkC;AAC3C,SAAS,uBAAuB;AAKzB,MAAM,uBAAkD;AAAA,EAE9D,YACkB,oBACA,KAChB;AAFgB;AACA;AAAA,EACd;AAAA,EAnBL,OAc+D;AAAA;AAAA;AAAA,EAOvD,gBAAwB;AAC9B,WAAO;AAAA,EACR;AAAA,EAEO,qBAAqB,eAAmD;AAC9E,UAAM,UAAU,cAAc,WAAY,KAAK,sBAAsB,cAAc;AACnF,UAAM,SAAS,cAAc,UAAW,KAAK,sBAAsB,cAAc;AACjF,UAAM,QAAQ,IAAI;AAAA,MACjB;AAAA,MACA,cAAc;AAAA,MACd;AAAA,MACA,cAAc;AAAA,MACd,cAAc;AAAA,IACf;AACA,UAAM,SAAS,KAAK,kBAAkB,IAAI,WAAW,CAAC,KAAK,CAAC,CAAC;AAC7D,WAAO,OAAO,CAAC;AAAA,EAChB;AAAA,EAEO,kBAAkB,YAA8C;AACtE,WAAO,2BAA2B,kBAAkB,YAAY,KAAK,GAAG;AAAA,EACzE;AACD;",
  "names": []
}
