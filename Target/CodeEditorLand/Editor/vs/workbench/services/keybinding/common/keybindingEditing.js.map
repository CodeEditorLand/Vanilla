{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/keybinding/common/keybindingEditing.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from '../../../../nls.js';\nimport { Queue } from '../../../../base/common/async.js';\nimport * as json from '../../../../base/common/json.js';\nimport * as objects from '../../../../base/common/objects.js';\nimport { setProperty } from '../../../../base/common/jsonEdit.js';\nimport { Edit } from '../../../../base/common/jsonFormatter.js';\nimport { Disposable, IReference } from '../../../../base/common/lifecycle.js';\nimport { EditOperation } from '../../../../editor/common/core/editOperation.js';\nimport { Range } from '../../../../editor/common/core/range.js';\nimport { Selection } from '../../../../editor/common/core/selection.js';\nimport { ITextModel } from '../../../../editor/common/model.js';\nimport { ITextModelService, IResolvedTextEditorModel } from '../../../../editor/common/services/resolverService.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IFileService } from '../../../../platform/files/common/files.js';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IUserFriendlyKeybinding } from '../../../../platform/keybinding/common/keybinding.js';\nimport { ResolvedKeybindingItem } from '../../../../platform/keybinding/common/resolvedKeybindingItem.js';\nimport { ITextFileService } from '../../textfile/common/textfiles.js';\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { IUserDataProfileService } from '../../userDataProfile/common/userDataProfile.js';\n\nexport const IKeybindingEditingService = createDecorator<IKeybindingEditingService>('keybindingEditingService');\n\nexport interface IKeybindingEditingService {\n\n\treadonly _serviceBrand: undefined;\n\n\taddKeybinding(keybindingItem: ResolvedKeybindingItem, key: string, when: string | undefined): Promise<void>;\n\n\teditKeybinding(keybindingItem: ResolvedKeybindingItem, key: string, when: string | undefined): Promise<void>;\n\n\tremoveKeybinding(keybindingItem: ResolvedKeybindingItem): Promise<void>;\n\n\tresetKeybinding(keybindingItem: ResolvedKeybindingItem): Promise<void>;\n}\n\nexport class KeybindingsEditingService extends Disposable implements IKeybindingEditingService {\n\n\tpublic _serviceBrand: undefined;\n\tprivate queue: Queue<void>;\n\n\tconstructor(\n\t\t@ITextModelService private readonly textModelResolverService: ITextModelService,\n\t\t@ITextFileService private readonly textFileService: ITextFileService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IUserDataProfileService private readonly userDataProfileService: IUserDataProfileService,\n\t) {\n\t\tsuper();\n\t\tthis.queue = new Queue<void>();\n\t}\n\n\taddKeybinding(keybindingItem: ResolvedKeybindingItem, key: string, when: string | undefined): Promise<void> {\n\t\treturn this.queue.queue(() => this.doEditKeybinding(keybindingItem, key, when, true)); // queue up writes to prevent race conditions\n\t}\n\n\teditKeybinding(keybindingItem: ResolvedKeybindingItem, key: string, when: string | undefined): Promise<void> {\n\t\treturn this.queue.queue(() => this.doEditKeybinding(keybindingItem, key, when, false)); // queue up writes to prevent race conditions\n\t}\n\n\tresetKeybinding(keybindingItem: ResolvedKeybindingItem): Promise<void> {\n\t\treturn this.queue.queue(() => this.doResetKeybinding(keybindingItem)); // queue up writes to prevent race conditions\n\t}\n\n\tremoveKeybinding(keybindingItem: ResolvedKeybindingItem): Promise<void> {\n\t\treturn this.queue.queue(() => this.doRemoveKeybinding(keybindingItem)); // queue up writes to prevent race conditions\n\t}\n\n\tprivate async doEditKeybinding(keybindingItem: ResolvedKeybindingItem, key: string, when: string | undefined, add: boolean): Promise<void> {\n\t\tconst reference = await this.resolveAndValidate();\n\t\tconst model = reference.object.textEditorModel;\n\t\tif (add) {\n\t\t\tthis.updateKeybinding(keybindingItem, key, when, model, -1);\n\t\t} else {\n\t\t\tconst userKeybindingEntries = <IUserFriendlyKeybinding[]>json.parse(model.getValue());\n\t\t\tconst userKeybindingEntryIndex = this.findUserKeybindingEntryIndex(keybindingItem, userKeybindingEntries);\n\t\t\tthis.updateKeybinding(keybindingItem, key, when, model, userKeybindingEntryIndex);\n\t\t\tif (keybindingItem.isDefault && keybindingItem.resolvedKeybinding) {\n\t\t\t\tthis.removeDefaultKeybinding(keybindingItem, model);\n\t\t\t}\n\t\t}\n\t\ttry {\n\t\t\tawait this.save();\n\t\t} finally {\n\t\t\treference.dispose();\n\t\t}\n\t}\n\n\tprivate async doRemoveKeybinding(keybindingItem: ResolvedKeybindingItem): Promise<void> {\n\t\tconst reference = await this.resolveAndValidate();\n\t\tconst model = reference.object.textEditorModel;\n\t\tif (keybindingItem.isDefault) {\n\t\t\tthis.removeDefaultKeybinding(keybindingItem, model);\n\t\t} else {\n\t\t\tthis.removeUserKeybinding(keybindingItem, model);\n\t\t}\n\t\ttry {\n\t\t\treturn await this.save();\n\t\t} finally {\n\t\t\treference.dispose();\n\t\t}\n\t}\n\n\tprivate async doResetKeybinding(keybindingItem: ResolvedKeybindingItem): Promise<void> {\n\t\tconst reference = await this.resolveAndValidate();\n\t\tconst model = reference.object.textEditorModel;\n\t\tif (!keybindingItem.isDefault) {\n\t\t\tthis.removeUserKeybinding(keybindingItem, model);\n\t\t\tthis.removeUnassignedDefaultKeybinding(keybindingItem, model);\n\t\t}\n\t\ttry {\n\t\t\treturn await this.save();\n\t\t} finally {\n\t\t\treference.dispose();\n\t\t}\n\t}\n\n\tprivate save(): Promise<any> {\n\t\treturn this.textFileService.save(this.userDataProfileService.currentProfile.keybindingsResource);\n\t}\n\n\tprivate updateKeybinding(keybindingItem: ResolvedKeybindingItem, newKey: string, when: string | undefined, model: ITextModel, userKeybindingEntryIndex: number): void {\n\t\tconst { tabSize, insertSpaces } = model.getOptions();\n\t\tconst eol = model.getEOL();\n\t\tif (userKeybindingEntryIndex !== -1) {\n\t\t\t// Update the keybinding with new key\n\t\t\tthis.applyEditsToBuffer(setProperty(model.getValue(), [userKeybindingEntryIndex, 'key'], newKey, { tabSize, insertSpaces, eol })[0], model);\n\t\t\tconst edits = setProperty(model.getValue(), [userKeybindingEntryIndex, 'when'], when, { tabSize, insertSpaces, eol });\n\t\t\tif (edits.length > 0) {\n\t\t\t\tthis.applyEditsToBuffer(edits[0], model);\n\t\t\t}\n\t\t} else {\n\t\t\t// Add the new keybinding with new key\n\t\t\tthis.applyEditsToBuffer(setProperty(model.getValue(), [-1], this.asObject(newKey, keybindingItem.command, when, false), { tabSize, insertSpaces, eol })[0], model);\n\t\t}\n\t}\n\n\tprivate removeUserKeybinding(keybindingItem: ResolvedKeybindingItem, model: ITextModel): void {\n\t\tconst { tabSize, insertSpaces } = model.getOptions();\n\t\tconst eol = model.getEOL();\n\t\tconst userKeybindingEntries = <IUserFriendlyKeybinding[]>json.parse(model.getValue());\n\t\tconst userKeybindingEntryIndex = this.findUserKeybindingEntryIndex(keybindingItem, userKeybindingEntries);\n\t\tif (userKeybindingEntryIndex !== -1) {\n\t\t\tthis.applyEditsToBuffer(setProperty(model.getValue(), [userKeybindingEntryIndex], undefined, { tabSize, insertSpaces, eol })[0], model);\n\t\t}\n\t}\n\n\tprivate removeDefaultKeybinding(keybindingItem: ResolvedKeybindingItem, model: ITextModel): void {\n\t\tconst { tabSize, insertSpaces } = model.getOptions();\n\t\tconst eol = model.getEOL();\n\t\tconst key = keybindingItem.resolvedKeybinding ? keybindingItem.resolvedKeybinding.getUserSettingsLabel() : null;\n\t\tif (key) {\n\t\t\tconst entry: IUserFriendlyKeybinding = this.asObject(key, keybindingItem.command, keybindingItem.when ? keybindingItem.when.serialize() : undefined, true);\n\t\t\tconst userKeybindingEntries = <IUserFriendlyKeybinding[]>json.parse(model.getValue());\n\t\t\tif (userKeybindingEntries.every(e => !this.areSame(e, entry))) {\n\t\t\t\tthis.applyEditsToBuffer(setProperty(model.getValue(), [-1], entry, { tabSize, insertSpaces, eol })[0], model);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate removeUnassignedDefaultKeybinding(keybindingItem: ResolvedKeybindingItem, model: ITextModel): void {\n\t\tconst { tabSize, insertSpaces } = model.getOptions();\n\t\tconst eol = model.getEOL();\n\t\tconst userKeybindingEntries = <IUserFriendlyKeybinding[]>json.parse(model.getValue());\n\t\tconst indices = this.findUnassignedDefaultKeybindingEntryIndex(keybindingItem, userKeybindingEntries).reverse();\n\t\tfor (const index of indices) {\n\t\t\tthis.applyEditsToBuffer(setProperty(model.getValue(), [index], undefined, { tabSize, insertSpaces, eol })[0], model);\n\t\t}\n\t}\n\n\tprivate findUserKeybindingEntryIndex(keybindingItem: ResolvedKeybindingItem, userKeybindingEntries: IUserFriendlyKeybinding[]): number {\n\t\tfor (let index = 0; index < userKeybindingEntries.length; index++) {\n\t\t\tconst keybinding = userKeybindingEntries[index];\n\t\t\tif (keybinding.command === keybindingItem.command) {\n\t\t\t\tif (!keybinding.when && !keybindingItem.when) {\n\t\t\t\t\treturn index;\n\t\t\t\t}\n\t\t\t\tif (keybinding.when && keybindingItem.when) {\n\t\t\t\t\tconst contextKeyExpr = ContextKeyExpr.deserialize(keybinding.when);\n\t\t\t\t\tif (contextKeyExpr && contextKeyExpr.serialize() === keybindingItem.when.serialize()) {\n\t\t\t\t\t\treturn index;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\tprivate findUnassignedDefaultKeybindingEntryIndex(keybindingItem: ResolvedKeybindingItem, userKeybindingEntries: IUserFriendlyKeybinding[]): number[] {\n\t\tconst indices: number[] = [];\n\t\tfor (let index = 0; index < userKeybindingEntries.length; index++) {\n\t\t\tif (userKeybindingEntries[index].command === `-${keybindingItem.command}`) {\n\t\t\t\tindices.push(index);\n\t\t\t}\n\t\t}\n\t\treturn indices;\n\t}\n\n\tprivate asObject(key: string, command: string | null, when: string | undefined, negate: boolean): any {\n\t\tconst object: any = { key };\n\t\tif (command) {\n\t\t\tobject['command'] = negate ? `-${command}` : command;\n\t\t}\n\t\tif (when) {\n\t\t\tobject['when'] = when;\n\t\t}\n\t\treturn object;\n\t}\n\n\tprivate areSame(a: IUserFriendlyKeybinding, b: IUserFriendlyKeybinding): boolean {\n\t\tif (a.command !== b.command) {\n\t\t\treturn false;\n\t\t}\n\t\tif (a.key !== b.key) {\n\t\t\treturn false;\n\t\t}\n\t\tconst whenA = ContextKeyExpr.deserialize(a.when);\n\t\tconst whenB = ContextKeyExpr.deserialize(b.when);\n\t\tif ((whenA && !whenB) || (!whenA && whenB)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (whenA && whenB && !whenA.equals(whenB)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!objects.equals(a.args, b.args)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate applyEditsToBuffer(edit: Edit, model: ITextModel): void {\n\t\tconst startPosition = model.getPositionAt(edit.offset);\n\t\tconst endPosition = model.getPositionAt(edit.offset + edit.length);\n\t\tconst range = new Range(startPosition.lineNumber, startPosition.column, endPosition.lineNumber, endPosition.column);\n\t\tconst currentText = model.getValueInRange(range);\n\t\tconst editOperation = currentText ? EditOperation.replace(range, edit.content) : EditOperation.insert(startPosition, edit.content);\n\t\tmodel.pushEditOperations([new Selection(startPosition.lineNumber, startPosition.column, startPosition.lineNumber, startPosition.column)], [editOperation], () => []);\n\t}\n\n\tprivate async resolveModelReference(): Promise<IReference<IResolvedTextEditorModel>> {\n\t\tconst exists = await this.fileService.exists(this.userDataProfileService.currentProfile.keybindingsResource);\n\t\tif (!exists) {\n\t\t\tawait this.textFileService.write(this.userDataProfileService.currentProfile.keybindingsResource, this.getEmptyContent(), { encoding: 'utf8' });\n\t\t}\n\t\treturn this.textModelResolverService.createModelReference(this.userDataProfileService.currentProfile.keybindingsResource);\n\t}\n\n\tprivate async resolveAndValidate(): Promise<IReference<IResolvedTextEditorModel>> {\n\n\t\t// Target cannot be dirty if not writing into buffer\n\t\tif (this.textFileService.isDirty(this.userDataProfileService.currentProfile.keybindingsResource)) {\n\t\t\tthrow new Error(localize('errorKeybindingsFileDirty', \"Unable to write because the keybindings configuration file has unsaved changes. Please save it first and then try again.\"));\n\t\t}\n\n\t\tconst reference = await this.resolveModelReference();\n\t\tconst model = reference.object.textEditorModel;\n\t\tconst EOL = model.getEOL();\n\t\tif (model.getValue()) {\n\t\t\tconst parsed = this.parse(model);\n\t\t\tif (parsed.parseErrors.length) {\n\t\t\t\treference.dispose();\n\t\t\t\tthrow new Error(localize('parseErrors', \"Unable to write to the keybindings configuration file. Please open it to correct errors/warnings in the file and try again.\"));\n\t\t\t}\n\t\t\tif (parsed.result) {\n\t\t\t\tif (!Array.isArray(parsed.result)) {\n\t\t\t\t\treference.dispose();\n\t\t\t\t\tthrow new Error(localize('errorInvalidConfiguration', \"Unable to write to the keybindings configuration file. It has an object which is not of type Array. Please open the file to clean up and try again.\"));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst content = EOL + '[]';\n\t\t\t\tthis.applyEditsToBuffer({ content, length: content.length, offset: model.getValue().length }, model);\n\t\t\t}\n\t\t} else {\n\t\t\tconst content = this.getEmptyContent();\n\t\t\tthis.applyEditsToBuffer({ content, length: content.length, offset: 0 }, model);\n\t\t}\n\t\treturn reference;\n\t}\n\n\tprivate parse(model: ITextModel): { result: IUserFriendlyKeybinding[]; parseErrors: json.ParseError[] } {\n\t\tconst parseErrors: json.ParseError[] = [];\n\t\tconst result = json.parse(model.getValue(), parseErrors, { allowTrailingComma: true, allowEmptyContent: true });\n\t\treturn { result, parseErrors };\n\t}\n\n\tprivate getEmptyContent(): string {\n\t\treturn '// ' + localize('emptyKeybindingsHeader', \"Place your key bindings in this file to override the defaults\") + '\\n[\\n]';\n\t}\n}\n\nregisterSingleton(IKeybindingEditingService, KeybindingsEditingService, InstantiationType.Delayed);\n"],
  "mappings": "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",
  "names": []
}
