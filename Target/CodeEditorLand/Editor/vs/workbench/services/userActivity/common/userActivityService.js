var l=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var c=(n,e,t,r)=>{for(var i=r>1?void 0:r?d(e,t):e,a=n.length-1,o;a>=0;a--)(o=n[a])&&(i=(r?o(e,t,i):o(i))||i);return r&&i&&l(e,t,i),i},v=(n,e)=>(t,r)=>e(t,r,n);import{disposableTimeout as m,RunOnceScheduler as p,runWhenGlobalIdle as h}from"../../../../../vs/base/common/async.js";import{Emitter as I}from"../../../../../vs/base/common/event.js";import{Disposable as f,DisposableStore as u,toDisposable as A}from"../../../../../vs/base/common/lifecycle.js";import{InstantiationType as b,registerSingleton as g}from"../../../../../vs/platform/instantiation/common/extensions.js";import{createDecorator as y,IInstantiationService as D}from"../../../../../vs/platform/instantiation/common/instantiation.js";import{userActivityRegistry as E}from"../../../../../vs/workbench/services/userActivity/common/userActivityRegistry.js";const k=1e4,_=y("IUserActivityService");let s=class extends f{markInactive=this._register(new p(()=>{this.isActive=!1,this.changeEmitter.fire(!1)},k));changeEmitter=this._register(new I);active=0;isActive=!0;onDidChangeIsActive=this.changeEmitter.event;constructor(e){super(),this._register(h(()=>E.take(this,e)))}markActive(e){if(e?.whenHeldFor){const t=new u;return t.add(m(()=>t.add(this.markActive()),e.whenHeldFor)),t}return++this.active===1&&(this.isActive=!0,this.changeEmitter.fire(!0),this.markInactive.cancel()),A(()=>{--this.active===0&&this.markInactive.schedule()})}};s=c([v(0,D)],s),g(_,s,b.Delayed);export{_ as IUserActivityService,s as UserActivityService};
