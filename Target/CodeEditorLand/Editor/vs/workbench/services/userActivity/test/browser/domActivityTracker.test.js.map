{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/userActivity/test/browser/domActivityTracker.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { TestInstantiationService } from '../../../../../platform/instantiation/test/common/instantiationServiceMock.js';\nimport { DomActivityTracker } from '../../browser/domActivityTracker.js';\nimport { UserActivityService } from '../../common/userActivityService.js';\nimport * as sinon from 'sinon';\nimport assert from 'assert';\n\nsuite('DomActivityTracker', () => {\n\tlet uas: UserActivityService;\n\tlet dom: DomActivityTracker;\n\tlet insta: TestInstantiationService;\n\tlet clock: sinon.SinonFakeTimers;\n\tconst maxTimeToBecomeIdle = 3 * 30_000; // (MIN_INTERVALS_WITHOUT_ACTIVITY + 1) * CHECK_INTERVAL;\n\n\tsetup(() => {\n\t\tclock = sinon.useFakeTimers();\n\t\tinsta = new TestInstantiationService();\n\t\tuas = new UserActivityService(insta);\n\t\tdom = new DomActivityTracker(uas);\n\t});\n\n\tteardown(() => {\n\t\tdom.dispose();\n\t\tuas.dispose();\n\t\tclock.restore();\n\t\tinsta.dispose();\n\t});\n\n\n\ttest('marks inactive on no input', () => {\n\t\tassert.equal(uas.isActive, true);\n\t\tclock.tick(maxTimeToBecomeIdle);\n\t\tassert.equal(uas.isActive, false);\n\t});\n\n\ttest('preserves activity state when active', () => {\n\t\tassert.equal(uas.isActive, true);\n\n\t\tconst div = 10;\n\t\tfor (let i = 0; i < div; i++) {\n\t\t\tdocument.dispatchEvent(new MouseEvent('keydown'));\n\t\t\tclock.tick(maxTimeToBecomeIdle / div);\n\t\t}\n\n\t\tassert.equal(uas.isActive, true);\n\t});\n\n\ttest('restores active state', () => {\n\t\tassert.equal(uas.isActive, true);\n\t\tclock.tick(maxTimeToBecomeIdle);\n\t\tassert.equal(uas.isActive, false);\n\n\t\tdocument.dispatchEvent(new MouseEvent('keydown'));\n\t\tassert.equal(uas.isActive, true);\n\n\t\tclock.tick(maxTimeToBecomeIdle);\n\t\tassert.equal(uas.isActive, false);\n\t});\n});\n"],
  "mappings": "AAKA,SAAS,gCAAgC;AACzC,SAAS,0BAA0B;AACnC,SAAS,2BAA2B;AACpC,YAAY,WAAW;AACvB,OAAO,YAAY;AAEnB,MAAM,sBAAsB,MAAM;AACjC,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,QAAM,sBAAsB,IAAI;AAEhC,QAAM,MAAM;AACX,YAAQ,MAAM,cAAc;AAC5B,YAAQ,IAAI,yBAAyB;AACrC,UAAM,IAAI,oBAAoB,KAAK;AACnC,UAAM,IAAI,mBAAmB,GAAG;AAAA,EACjC,CAAC;AAED,WAAS,MAAM;AACd,QAAI,QAAQ;AACZ,QAAI,QAAQ;AACZ,UAAM,QAAQ;AACd,UAAM,QAAQ;AAAA,EACf,CAAC;AAGD,OAAK,8BAA8B,MAAM;AACxC,WAAO,MAAM,IAAI,UAAU,IAAI;AAC/B,UAAM,KAAK,mBAAmB;AAC9B,WAAO,MAAM,IAAI,UAAU,KAAK;AAAA,EACjC,CAAC;AAED,OAAK,wCAAwC,MAAM;AAClD,WAAO,MAAM,IAAI,UAAU,IAAI;AAE/B,UAAM,MAAM;AACZ,aAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC7B,eAAS,cAAc,IAAI,WAAW,SAAS,CAAC;AAChD,YAAM,KAAK,sBAAsB,GAAG;AAAA,IACrC;AAEA,WAAO,MAAM,IAAI,UAAU,IAAI;AAAA,EAChC,CAAC;AAED,OAAK,yBAAyB,MAAM;AACnC,WAAO,MAAM,IAAI,UAAU,IAAI;AAC/B,UAAM,KAAK,mBAAmB;AAC9B,WAAO,MAAM,IAAI,UAAU,KAAK;AAEhC,aAAS,cAAc,IAAI,WAAW,SAAS,CAAC;AAChD,WAAO,MAAM,IAAI,UAAU,IAAI;AAE/B,UAAM,KAAK,mBAAmB;AAC9B,WAAO,MAAM,IAAI,UAAU,KAAK;AAAA,EACjC,CAAC;AACF,CAAC;",
  "names": []
}
