{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/userActivity/test/common/userActivityService.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nimport * as assert from 'assert';\nimport * as sinon from 'sinon';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { TestInstantiationService } from '../../../../../platform/instantiation/test/common/instantiationServiceMock.js';\nimport { IMarkActiveOptions, IUserActivityService, UserActivityService } from '../../common/userActivityService.js';\n\nconst MARK_INACTIVE_DEBOUNCE = 10_000;\n\nsuite('UserActivityService', () => {\n\tlet userActivityService: IUserActivityService;\n\tlet clock: sinon.SinonFakeTimers;\n\n\tconst ds = ensureNoDisposablesAreLeakedInTestSuite();\n\n\tsetup(() => {\n\t\tclock = sinon.useFakeTimers();\n\t\tuserActivityService = ds.add(new UserActivityService(ds.add(new TestInstantiationService())));\n\t});\n\n\tteardown(() => {\n\t\tclock.restore();\n\t});\n\n\ttest('isActive should be true initially', () => {\n\t\tassert.ok(userActivityService.isActive);\n\t});\n\n\ttest('markActive should be inactive when all handles gone', () => {\n\t\tconst h1 = userActivityService.markActive();\n\t\tconst h2 = userActivityService.markActive();\n\t\tassert.strictEqual(userActivityService.isActive, true);\n\t\th1.dispose();\n\t\tassert.strictEqual(userActivityService.isActive, true);\n\t\th2.dispose();\n\t\tclock.tick(MARK_INACTIVE_DEBOUNCE);\n\t\tassert.strictEqual(userActivityService.isActive, false);\n\t});\n\n\ttest('markActive sets active whenHeldFor', async () => {\n\t\tuserActivityService.markActive().dispose();\n\t\tclock.tick(MARK_INACTIVE_DEBOUNCE);\n\n\t\tconst duration = 100; // milliseconds\n\t\tconst opts: IMarkActiveOptions = { whenHeldFor: duration };\n\t\tconst handle = userActivityService.markActive(opts);\n\t\tassert.strictEqual(userActivityService.isActive, false);\n\t\tclock.tick(duration - 1);\n\t\tassert.strictEqual(userActivityService.isActive, false);\n\t\tclock.tick(1);\n\t\tassert.strictEqual(userActivityService.isActive, true);\n\t\thandle.dispose();\n\n\t\tclock.tick(MARK_INACTIVE_DEBOUNCE);\n\t\tassert.strictEqual(userActivityService.isActive, false);\n\t});\n\n\ttest('markActive whenHeldFor before triggers', async () => {\n\t\tuserActivityService.markActive().dispose();\n\t\tclock.tick(MARK_INACTIVE_DEBOUNCE);\n\n\t\tconst duration = 100; // milliseconds\n\t\tconst opts: IMarkActiveOptions = { whenHeldFor: duration };\n\t\tuserActivityService.markActive(opts).dispose();\n\t\tassert.strictEqual(userActivityService.isActive, false);\n\t\tclock.tick(duration + MARK_INACTIVE_DEBOUNCE);\n\t\tassert.strictEqual(userActivityService.isActive, false);\n\t});\n});\n"],
  "mappings": "AAMA,YAAY,YAAY;AACxB,YAAY,WAAW;AACvB,SAAS,+CAA+C;AACxD,SAAS,gCAAgC;AACzC,SAAS,oBAAoB,sBAAsB,2BAA2B;AAE9E,MAAM,yBAAyB;AAE/B,MAAM,uBAAuB,MAAM;AAClC,MAAI;AACJ,MAAI;AAEJ,QAAM,KAAK,wCAAwC;AAEnD,QAAM,MAAM;AACX,YAAQ,MAAM,cAAc;AAC5B,0BAAsB,GAAG,IAAI,IAAI,oBAAoB,GAAG,IAAI,IAAI,yBAAyB,CAAC,CAAC,CAAC;AAAA,EAC7F,CAAC;AAED,WAAS,MAAM;AACd,UAAM,QAAQ;AAAA,EACf,CAAC;AAED,OAAK,qCAAqC,MAAM;AAC/C,WAAO,GAAG,oBAAoB,QAAQ;AAAA,EACvC,CAAC;AAED,OAAK,uDAAuD,MAAM;AACjE,UAAM,KAAK,oBAAoB,WAAW;AAC1C,UAAM,KAAK,oBAAoB,WAAW;AAC1C,WAAO,YAAY,oBAAoB,UAAU,IAAI;AACrD,OAAG,QAAQ;AACX,WAAO,YAAY,oBAAoB,UAAU,IAAI;AACrD,OAAG,QAAQ;AACX,UAAM,KAAK,sBAAsB;AACjC,WAAO,YAAY,oBAAoB,UAAU,KAAK;AAAA,EACvD,CAAC;AAED,OAAK,sCAAsC,YAAY;AACtD,wBAAoB,WAAW,EAAE,QAAQ;AACzC,UAAM,KAAK,sBAAsB;AAEjC,UAAM,WAAW;AACjB,UAAM,OAA2B,EAAE,aAAa,SAAS;AACzD,UAAM,SAAS,oBAAoB,WAAW,IAAI;AAClD,WAAO,YAAY,oBAAoB,UAAU,KAAK;AACtD,UAAM,KAAK,WAAW,CAAC;AACvB,WAAO,YAAY,oBAAoB,UAAU,KAAK;AACtD,UAAM,KAAK,CAAC;AACZ,WAAO,YAAY,oBAAoB,UAAU,IAAI;AACrD,WAAO,QAAQ;AAEf,UAAM,KAAK,sBAAsB;AACjC,WAAO,YAAY,oBAAoB,UAAU,KAAK;AAAA,EACvD,CAAC;AAED,OAAK,0CAA0C,YAAY;AAC1D,wBAAoB,WAAW,EAAE,QAAQ;AACzC,UAAM,KAAK,sBAAsB;AAEjC,UAAM,WAAW;AACjB,UAAM,OAA2B,EAAE,aAAa,SAAS;AACzD,wBAAoB,WAAW,IAAI,EAAE,QAAQ;AAC7C,WAAO,YAAY,oBAAoB,UAAU,KAAK;AACtD,UAAM,KAAK,WAAW,sBAAsB;AAC5C,WAAO,YAAY,oBAAoB,UAAU,KAAK;AAAA,EACvD,CAAC;AACF,CAAC;",
  "names": []
}
