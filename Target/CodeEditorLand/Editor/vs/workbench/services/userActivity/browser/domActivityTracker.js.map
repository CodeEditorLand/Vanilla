{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/userActivity/browser/domActivityTracker.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { mainWindow } from '../../../../base/browser/window.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { IUserActivityService } from '../common/userActivityService.js';\n\n/**\n * This uses a time interval and checks whether there's any activity in that\n * interval. A naive approach might be to use a debounce whenever an event\n * happens, but this has some scheduling overhead. Instead, the tracker counts\n * how many intervals have elapsed since any activity happened.\n *\n * If there's more than `MIN_INTERVALS_WITHOUT_ACTIVITY`, then say the user is\n * inactive. Therefore the maximum time before an inactive user is detected\n * is `CHECK_INTERVAL * (MIN_INTERVALS_WITHOUT_ACTIVITY + 1)`.\n */\nconst CHECK_INTERVAL = 30_000;\n\n/** See {@link CHECK_INTERVAL} */\nconst MIN_INTERVALS_WITHOUT_ACTIVITY = 2;\n\nconst eventListenerOptions: AddEventListenerOptions = {\n\tpassive: true, /** does not preventDefault() */\n\tcapture: true, /** should dispatch first (before anyone stopPropagation()) */\n};\n\nexport class DomActivityTracker extends Disposable {\n\tconstructor(userActivityService: IUserActivityService) {\n\t\tsuper();\n\n\t\tlet intervalsWithoutActivity = MIN_INTERVALS_WITHOUT_ACTIVITY;\n\t\tconst intervalTimer = this._register(new dom.WindowIntervalTimer());\n\t\tconst activeMutex = this._register(new MutableDisposable());\n\t\tactiveMutex.value = userActivityService.markActive();\n\n\t\tconst onInterval = () => {\n\t\t\tif (++intervalsWithoutActivity === MIN_INTERVALS_WITHOUT_ACTIVITY) {\n\t\t\t\tactiveMutex.clear();\n\t\t\t\tintervalTimer.cancel();\n\t\t\t}\n\t\t};\n\n\t\tconst onActivity = (targetWindow: Window & typeof globalThis) => {\n\t\t\t// if was inactive, they've now returned\n\t\t\tif (intervalsWithoutActivity === MIN_INTERVALS_WITHOUT_ACTIVITY) {\n\t\t\t\tactiveMutex.value = userActivityService.markActive();\n\t\t\t\tintervalTimer.cancelAndSet(onInterval, CHECK_INTERVAL, targetWindow);\n\t\t\t}\n\n\t\t\tintervalsWithoutActivity = 0;\n\t\t};\n\n\t\tthis._register(Event.runAndSubscribe(dom.onDidRegisterWindow, ({ window, disposables }) => {\n\t\t\tdisposables.add(dom.addDisposableListener(window.document, 'touchstart', () => onActivity(window), eventListenerOptions));\n\t\t\tdisposables.add(dom.addDisposableListener(window.document, 'mousedown', () => onActivity(window), eventListenerOptions));\n\t\t\tdisposables.add(dom.addDisposableListener(window.document, 'keydown', () => onActivity(window), eventListenerOptions));\n\t\t}, { window: mainWindow, disposables: this._store }));\n\n\t\tonActivity(mainWindow);\n\t}\n}\n"],
  "mappings": ";;AAKA,YAAY,SAAS;AACrB,SAAS,kBAAkB;AAC3B,SAAS,aAAa;AACtB,SAAS,YAAY,yBAAyB;AAC9C,SAAS,4BAA4B;AAYrC,MAAM,iBAAiB;AAGvB,MAAM,iCAAiC;AAEvC,MAAM,uBAAgD;AAAA,EACrD,SAAS;AAAA;AAAA,EACT,SAAS;AAAA;AACV;AAEO,MAAM,2BAA2B,WAAW;AAAA,EA/BnD,OA+BmD;AAAA;AAAA;AAAA,EAClD,YAAY,qBAA2C;AACtD,UAAM;AAEN,QAAI,2BAA2B;AAC/B,UAAM,gBAAgB,KAAK,UAAU,IAAI,IAAI,oBAAoB,CAAC;AAClE,UAAM,cAAc,KAAK,UAAU,IAAI,kBAAkB,CAAC;AAC1D,gBAAY,QAAQ,oBAAoB,WAAW;AAEnD,UAAM,aAAa,6BAAM;AACxB,UAAI,EAAE,6BAA6B,gCAAgC;AAClE,oBAAY,MAAM;AAClB,sBAAc,OAAO;AAAA,MACtB;AAAA,IACD,GALmB;AAOnB,UAAM,aAAa,wBAAC,iBAA6C;AAEhE,UAAI,6BAA6B,gCAAgC;AAChE,oBAAY,QAAQ,oBAAoB,WAAW;AACnD,sBAAc,aAAa,YAAY,gBAAgB,YAAY;AAAA,MACpE;AAEA,iCAA2B;AAAA,IAC5B,GARmB;AAUnB,SAAK,UAAU,MAAM,gBAAgB,IAAI,qBAAqB,CAAC,EAAE,QAAQ,YAAY,MAAM;AAC1F,kBAAY,IAAI,IAAI,sBAAsB,OAAO,UAAU,cAAc,MAAM,WAAW,MAAM,GAAG,oBAAoB,CAAC;AACxH,kBAAY,IAAI,IAAI,sBAAsB,OAAO,UAAU,aAAa,MAAM,WAAW,MAAM,GAAG,oBAAoB,CAAC;AACvH,kBAAY,IAAI,IAAI,sBAAsB,OAAO,UAAU,WAAW,MAAM,WAAW,MAAM,GAAG,oBAAoB,CAAC;AAAA,IACtH,GAAG,EAAE,QAAQ,YAAY,aAAa,KAAK,OAAO,CAAC,CAAC;AAEpD,eAAW,UAAU;AAAA,EACtB;AACD;",
  "names": []
}
