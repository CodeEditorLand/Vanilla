import*as t from"../../../../base/browser/dom.js";import{mainWindow as m}from"../../../../base/browser/window.js";import{Event as l}from"../../../../base/common/event.js";import{Disposable as p,MutableDisposable as u}from"../../../../base/common/lifecycle.js";const A=3e4,n=2,c={passive:!0,capture:!0};class f extends p{constructor(a){super();let r=n;const d=this._register(new t.WindowIntervalTimer),s=this._register(new u);s.value=a.markActive();const v=()=>{++r===n&&(s.clear(),d.cancel())},i=e=>{r===n&&(s.value=a.markActive(),d.cancelAndSet(v,A,e)),r=0};this._register(l.runAndSubscribe(t.onDidRegisterWindow,({window:e,disposables:o})=>{o.add(t.addDisposableListener(e.document,"touchstart",()=>i(e),c)),o.add(t.addDisposableListener(e.document,"mousedown",()=>i(e),c)),o.add(t.addDisposableListener(e.document,"keydown",()=>i(e),c))},{window:m,disposables:this._store})),i(m)}}export{f as DomActivityTracker};
