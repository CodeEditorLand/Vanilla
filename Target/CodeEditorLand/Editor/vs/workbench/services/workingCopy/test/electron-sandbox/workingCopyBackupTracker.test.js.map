{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/workingCopy/test/electron-sandbox/workingCopyBackupTracker.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { isMacintosh, isWindows } from '../../../../../base/common/platform.js';\nimport { join } from '../../../../../base/common/path.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { hash } from '../../../../../base/common/hash.js';\nimport { NativeWorkingCopyBackupTracker } from '../../electron-sandbox/workingCopyBackupTracker.js';\nimport { TextFileEditorModelManager } from '../../../textfile/common/textFileEditorModelManager.js';\nimport { IEditorService } from '../../../editor/common/editorService.js';\nimport { EditorPart } from '../../../../browser/parts/editor/editorPart.js';\nimport { IEditorGroupsService } from '../../../editor/common/editorGroupsService.js';\nimport { EditorService } from '../../../editor/browser/editorService.js';\nimport { IWorkingCopyBackupService } from '../../common/workingCopyBackup.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite, toResource } from '../../../../../base/test/common/utils.js';\nimport { IFilesConfigurationService } from '../../../filesConfiguration/common/filesConfigurationService.js';\nimport { IWorkingCopyService } from '../../common/workingCopyService.js';\nimport { ILogService } from '../../../../../platform/log/common/log.js';\nimport { HotExitConfiguration } from '../../../../../platform/files/common/files.js';\nimport { ShutdownReason, ILifecycleService } from '../../../lifecycle/common/lifecycle.js';\nimport { IFileDialogService, ConfirmResult, IDialogService } from '../../../../../platform/dialogs/common/dialogs.js';\nimport { IWorkspaceContextService } from '../../../../../platform/workspace/common/workspace.js';\nimport { INativeHostService } from '../../../../../platform/native/common/native.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { TestConfigurationService } from '../../../../../platform/configuration/test/common/testConfigurationService.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { createEditorPart, registerTestFileEditor, TestBeforeShutdownEvent, TestEnvironmentService, TestFilesConfigurationService, TestFileService, TestTextResourceConfigurationService, workbenchTeardown } from '../../../../test/browser/workbenchTestServices.js';\nimport { MockContextKeyService } from '../../../../../platform/keybinding/test/common/mockKeybindingService.js';\nimport { IContextKeyService } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { IEnvironmentService } from '../../../../../platform/environment/common/environment.js';\nimport { TestWorkspace, Workspace } from '../../../../../platform/workspace/test/common/testWorkspace.js';\nimport { IProgressService } from '../../../../../platform/progress/common/progress.js';\nimport { IWorkingCopyEditorService } from '../../common/workingCopyEditorService.js';\nimport { TestContextService, TestMarkerService, TestWorkingCopy } from '../../../../test/common/workbenchTestServices.js';\nimport { CancellationToken } from '../../../../../base/common/cancellation.js';\nimport { IWorkingCopyBackup, WorkingCopyCapabilities } from '../../common/workingCopy.js';\nimport { Event, Emitter } from '../../../../../base/common/event.js';\nimport { generateUuid } from '../../../../../base/common/uuid.js';\nimport { Schemas } from '../../../../../base/common/network.js';\nimport { joinPath } from '../../../../../base/common/resources.js';\nimport { VSBuffer } from '../../../../../base/common/buffer.js';\nimport { TestServiceAccessor, workbenchInstantiationService } from '../../../../test/electron-sandbox/workbenchTestServices.js';\nimport { UriIdentityService } from '../../../../../platform/uriIdentity/common/uriIdentityService.js';\n\nsuite('WorkingCopyBackupTracker (native)', function () {\n\n\tclass TestWorkingCopyBackupTracker extends NativeWorkingCopyBackupTracker {\n\n\t\tconstructor(\n\t\t\t@IWorkingCopyBackupService workingCopyBackupService: IWorkingCopyBackupService,\n\t\t\t@IFilesConfigurationService filesConfigurationService: IFilesConfigurationService,\n\t\t\t@IWorkingCopyService workingCopyService: IWorkingCopyService,\n\t\t\t@ILifecycleService lifecycleService: ILifecycleService,\n\t\t\t@IFileDialogService fileDialogService: IFileDialogService,\n\t\t\t@IDialogService dialogService: IDialogService,\n\t\t\t@IWorkspaceContextService contextService: IWorkspaceContextService,\n\t\t\t@INativeHostService nativeHostService: INativeHostService,\n\t\t\t@ILogService logService: ILogService,\n\t\t\t@IEditorService editorService: IEditorService,\n\t\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t\t@IProgressService progressService: IProgressService,\n\t\t\t@IWorkingCopyEditorService workingCopyEditorService: IWorkingCopyEditorService,\n\t\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService\n\t\t) {\n\t\t\tsuper(workingCopyBackupService, filesConfigurationService, workingCopyService, lifecycleService, fileDialogService, dialogService, contextService, nativeHostService, logService, environmentService, progressService, workingCopyEditorService, editorService, editorGroupService);\n\t\t}\n\n\t\tprotected override getBackupScheduleDelay(): number {\n\t\t\treturn 10; // Reduce timeout for tests\n\t\t}\n\n\t\twaitForReady(): Promise<void> {\n\t\t\treturn this.whenReady;\n\t\t}\n\n\t\tget pendingBackupOperationCount(): number { return this.pendingBackupOperations.size; }\n\n\t\toverride dispose() {\n\t\t\tsuper.dispose();\n\n\t\t\tfor (const [_, pending] of this.pendingBackupOperations) {\n\t\t\t\tpending.cancel();\n\t\t\t\tpending.disposable.dispose();\n\t\t\t}\n\t\t}\n\n\t\tprivate readonly _onDidResume = this._register(new Emitter<void>());\n\t\treadonly onDidResume = this._onDidResume.event;\n\n\t\tprivate readonly _onDidSuspend = this._register(new Emitter<void>());\n\t\treadonly onDidSuspend = this._onDidSuspend.event;\n\n\t\tprotected override suspendBackupOperations(): { resume: () => void } {\n\t\t\tconst { resume } = super.suspendBackupOperations();\n\n\t\t\tthis._onDidSuspend.fire();\n\n\t\t\treturn {\n\t\t\t\tresume: () => {\n\t\t\t\t\tresume();\n\n\t\t\t\t\tthis._onDidResume.fire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\tlet testDir: URI;\n\tlet backupHome: URI;\n\tlet workspaceBackupPath: URI;\n\n\tlet accessor: TestServiceAccessor;\n\n\tconst disposables = new DisposableStore();\n\n\tsetup(async () => {\n\t\ttestDir = URI.file(join(generateUuid(), 'vsctests', 'workingcopybackuptracker')).with({ scheme: Schemas.inMemory });\n\t\tbackupHome = joinPath(testDir, 'Backups');\n\t\tconst workspacesJsonPath = joinPath(backupHome, 'workspaces.json');\n\n\t\tconst workspaceResource = URI.file(isWindows ? 'c:\\\\workspace' : '/workspace').with({ scheme: Schemas.inMemory });\n\t\tworkspaceBackupPath = joinPath(backupHome, hash(workspaceResource.toString()).toString(16));\n\n\t\tconst instantiationService = workbenchInstantiationService(undefined, disposables);\n\t\taccessor = instantiationService.createInstance(TestServiceAccessor);\n\t\tdisposables.add((<TextFileEditorModelManager>accessor.textFileService.files));\n\n\t\tdisposables.add(registerTestFileEditor());\n\n\t\tawait accessor.fileService.createFolder(backupHome);\n\t\tawait accessor.fileService.createFolder(workspaceBackupPath);\n\n\t\treturn accessor.fileService.writeFile(workspacesJsonPath, VSBuffer.fromString(''));\n\t});\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t});\n\n\tasync function createTracker(autoSaveEnabled = false): Promise<{ accessor: TestServiceAccessor; part: EditorPart; tracker: TestWorkingCopyBackupTracker; instantiationService: IInstantiationService; cleanup: () => Promise<void> }> {\n\t\tconst instantiationService = workbenchInstantiationService(undefined, disposables);\n\n\t\tconst configurationService = new TestConfigurationService();\n\t\tif (autoSaveEnabled) {\n\t\t\tconfigurationService.setUserConfiguration('files', { autoSave: 'afterDelay', autoSaveDelay: 1 });\n\t\t} else {\n\t\t\tconfigurationService.setUserConfiguration('files', { autoSave: 'off', autoSaveDelay: 1 });\n\t\t}\n\t\tinstantiationService.stub(IConfigurationService, configurationService);\n\n\t\tinstantiationService.stub(IFilesConfigurationService, disposables.add(new TestFilesConfigurationService(\n\t\t\t<IContextKeyService>instantiationService.createInstance(MockContextKeyService),\n\t\t\tconfigurationService,\n\t\t\tnew TestContextService(TestWorkspace),\n\t\t\tTestEnvironmentService,\n\t\t\tdisposables.add(new UriIdentityService(disposables.add(new TestFileService()))),\n\t\t\tdisposables.add(new TestFileService()),\n\t\t\tnew TestMarkerService(),\n\t\t\tnew TestTextResourceConfigurationService(configurationService)\n\t\t)));\n\n\t\tconst part = await createEditorPart(instantiationService, disposables);\n\t\tinstantiationService.stub(IEditorGroupsService, part);\n\n\t\tconst editorService: EditorService = disposables.add(instantiationService.createInstance(EditorService, undefined));\n\t\tinstantiationService.stub(IEditorService, editorService);\n\n\t\taccessor = instantiationService.createInstance(TestServiceAccessor);\n\n\t\tconst tracker = instantiationService.createInstance(TestWorkingCopyBackupTracker);\n\n\t\tconst cleanup = async () => {\n\t\t\tawait accessor.workingCopyBackupService.waitForAllBackups(); // File changes could also schedule some backup operations so we need to wait for them before finishing the test\n\n\t\t\tawait workbenchTeardown(instantiationService);\n\n\t\t\tpart.dispose();\n\t\t\ttracker.dispose();\n\t\t};\n\n\t\treturn { accessor, part, tracker, instantiationService, cleanup };\n\t}\n\n\ttest('Track backups (file, auto save off)', function () {\n\t\treturn trackBackupsTest(toResource.call(this, '/path/index.txt'), false);\n\t});\n\n\ttest('Track backups (file, auto save on)', function () {\n\t\treturn trackBackupsTest(toResource.call(this, '/path/index.txt'), true);\n\t});\n\n\tasync function trackBackupsTest(resource: URI, autoSave: boolean) {\n\t\tconst { accessor, cleanup } = await createTracker(autoSave);\n\n\t\tawait accessor.editorService.openEditor({ resource, options: { pinned: true } });\n\n\t\tconst fileModel = accessor.textFileService.files.get(resource);\n\t\tassert.ok(fileModel);\n\t\tfileModel.textEditorModel?.setValue('Super Good');\n\n\t\tawait accessor.workingCopyBackupService.joinBackupResource();\n\n\t\tassert.strictEqual(accessor.workingCopyBackupService.hasBackupSync(fileModel), true);\n\n\t\tfileModel.dispose();\n\n\t\tawait accessor.workingCopyBackupService.joinDiscardBackup();\n\n\t\tassert.strictEqual(accessor.workingCopyBackupService.hasBackupSync(fileModel), false);\n\n\t\tawait cleanup();\n\t}\n\n\ttest('onWillShutdown - no veto if no dirty files', async function () {\n\t\tconst { accessor, cleanup } = await createTracker();\n\n\t\tconst resource = toResource.call(this, '/path/index.txt');\n\t\tawait accessor.editorService.openEditor({ resource, options: { pinned: true } });\n\n\t\tconst event = new TestBeforeShutdownEvent();\n\t\taccessor.lifecycleService.fireBeforeShutdown(event);\n\n\t\tconst veto = await event.value;\n\t\tassert.ok(!veto);\n\n\t\tawait cleanup();\n\t});\n\n\ttest('onWillShutdown - veto if user cancels (hot.exit: off)', async function () {\n\t\tconst { accessor, cleanup } = await createTracker();\n\n\t\tconst resource = toResource.call(this, '/path/index.txt');\n\t\tawait accessor.editorService.openEditor({ resource, options: { pinned: true } });\n\n\t\tconst model = accessor.textFileService.files.get(resource);\n\n\t\taccessor.fileDialogService.setConfirmResult(ConfirmResult.CANCEL);\n\t\taccessor.filesConfigurationService.testOnFilesConfigurationChange({ files: { hotExit: 'off' } });\n\n\t\tawait model?.resolve();\n\t\tmodel?.textEditorModel?.setValue('foo');\n\t\tassert.strictEqual(accessor.workingCopyService.dirtyCount, 1);\n\n\t\tconst event = new TestBeforeShutdownEvent();\n\t\taccessor.lifecycleService.fireBeforeShutdown(event);\n\n\t\tconst veto = await event.value;\n\t\tassert.ok(veto);\n\n\t\tawait cleanup();\n\t});\n\n\ttest('onWillShutdown - no veto if auto save is on', async function () {\n\t\tconst { accessor, cleanup } = await createTracker(true /* auto save enabled */);\n\n\t\tconst resource = toResource.call(this, '/path/index.txt');\n\t\tawait accessor.editorService.openEditor({ resource, options: { pinned: true } });\n\n\t\tconst model = accessor.textFileService.files.get(resource);\n\n\t\tawait model?.resolve();\n\t\tmodel?.textEditorModel?.setValue('foo');\n\t\tassert.strictEqual(accessor.workingCopyService.dirtyCount, 1);\n\n\t\tconst event = new TestBeforeShutdownEvent();\n\t\taccessor.lifecycleService.fireBeforeShutdown(event);\n\n\t\tconst veto = await event.value;\n\t\tassert.ok(!veto);\n\n\t\tassert.strictEqual(accessor.workingCopyService.dirtyCount, 0);\n\n\t\tawait cleanup();\n\t});\n\n\ttest('onWillShutdown - no veto and backups cleaned up if user does not want to save (hot.exit: off)', async function () {\n\t\tconst { accessor, cleanup } = await createTracker();\n\n\t\tconst resource = toResource.call(this, '/path/index.txt');\n\t\tawait accessor.editorService.openEditor({ resource, options: { pinned: true } });\n\n\t\tconst model = accessor.textFileService.files.get(resource);\n\n\t\taccessor.fileDialogService.setConfirmResult(ConfirmResult.DONT_SAVE);\n\t\taccessor.filesConfigurationService.testOnFilesConfigurationChange({ files: { hotExit: 'off' } });\n\n\t\tawait model?.resolve();\n\t\tmodel?.textEditorModel?.setValue('foo');\n\t\tassert.strictEqual(accessor.workingCopyService.dirtyCount, 1);\n\t\tconst event = new TestBeforeShutdownEvent();\n\t\taccessor.lifecycleService.fireBeforeShutdown(event);\n\n\t\tconst veto = await event.value;\n\t\tassert.ok(!veto);\n\t\tassert.ok(accessor.workingCopyBackupService.discardedBackups.length > 0);\n\n\t\tawait cleanup();\n\t});\n\n\ttest('onWillShutdown - no backups discarded when shutdown without dirty but tracker not ready', async function () {\n\t\tconst { accessor, cleanup } = await createTracker();\n\n\t\tconst event = new TestBeforeShutdownEvent();\n\t\taccessor.lifecycleService.fireBeforeShutdown(event);\n\n\t\tconst veto = await event.value;\n\t\tassert.ok(!veto);\n\t\tassert.ok(!accessor.workingCopyBackupService.discardedAllBackups);\n\n\t\tawait cleanup();\n\t});\n\n\ttest('onWillShutdown - backups discarded when shutdown without dirty', async function () {\n\t\tconst { accessor, tracker, cleanup } = await createTracker();\n\n\t\tawait tracker.waitForReady();\n\n\t\tconst event = new TestBeforeShutdownEvent();\n\t\taccessor.lifecycleService.fireBeforeShutdown(event);\n\n\t\tconst veto = await event.value;\n\t\tassert.ok(!veto);\n\t\tassert.ok(accessor.workingCopyBackupService.discardedAllBackups);\n\n\t\tawait cleanup();\n\t});\n\n\ttest('onWillShutdown - save (hot.exit: off)', async function () {\n\t\tconst { accessor, cleanup } = await createTracker();\n\n\t\tconst resource = toResource.call(this, '/path/index.txt');\n\t\tawait accessor.editorService.openEditor({ resource, options: { pinned: true } });\n\n\t\tconst model = accessor.textFileService.files.get(resource);\n\n\t\taccessor.fileDialogService.setConfirmResult(ConfirmResult.SAVE);\n\t\taccessor.filesConfigurationService.testOnFilesConfigurationChange({ files: { hotExit: 'off' } });\n\n\t\tawait model?.resolve();\n\t\tmodel?.textEditorModel?.setValue('foo');\n\t\tassert.strictEqual(accessor.workingCopyService.dirtyCount, 1);\n\t\tconst event = new TestBeforeShutdownEvent();\n\t\taccessor.lifecycleService.fireBeforeShutdown(event);\n\n\t\tconst veto = await event.value;\n\t\tassert.ok(!veto);\n\t\tassert.ok(!model?.isDirty());\n\n\t\tawait cleanup();\n\t});\n\n\ttest('onWillShutdown - veto if backup fails', async function () {\n\t\tconst { accessor, cleanup } = await createTracker();\n\n\t\tclass TestBackupWorkingCopy extends TestWorkingCopy {\n\n\t\t\tconstructor(resource: URI) {\n\t\t\t\tsuper(resource);\n\n\t\t\t\tthis._register(accessor.workingCopyService.registerWorkingCopy(this));\n\t\t\t}\n\n\t\t\toverride async backup(token: CancellationToken): Promise<IWorkingCopyBackup> {\n\t\t\t\tthrow new Error('unable to backup');\n\t\t\t}\n\t\t}\n\n\t\tconst resource = toResource.call(this, '/path/custom.txt');\n\t\tconst customWorkingCopy = disposables.add(new TestBackupWorkingCopy(resource));\n\t\tcustomWorkingCopy.setDirty(true);\n\n\t\tconst event = new TestBeforeShutdownEvent();\n\t\tevent.reason = ShutdownReason.QUIT;\n\t\taccessor.lifecycleService.fireBeforeShutdown(event);\n\n\t\tconst veto = await event.value;\n\t\tassert.ok(veto);\n\n\t\tconst finalVeto = await event.finalValue?.();\n\t\tassert.ok(finalVeto); // assert the tracker uses the internal finalVeto API\n\n\t\tawait cleanup();\n\t});\n\n\ttest('onWillShutdown - scratchpads - veto if backup fails', async function () {\n\t\tconst { accessor, cleanup } = await createTracker();\n\n\t\tclass TestBackupWorkingCopy extends TestWorkingCopy {\n\n\t\t\tconstructor(resource: URI) {\n\t\t\t\tsuper(resource);\n\n\t\t\t\tthis._register(accessor.workingCopyService.registerWorkingCopy(this));\n\t\t\t}\n\n\t\t\toverride capabilities = WorkingCopyCapabilities.Untitled | WorkingCopyCapabilities.Scratchpad;\n\n\t\t\toverride async backup(token: CancellationToken): Promise<IWorkingCopyBackup> {\n\t\t\t\tthrow new Error('unable to backup');\n\t\t\t}\n\n\t\t\toverride isDirty(): boolean {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\toverride isModified(): boolean {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tconst resource = toResource.call(this, '/path/custom.txt');\n\t\tdisposables.add(new TestBackupWorkingCopy(resource));\n\n\t\tconst event = new TestBeforeShutdownEvent();\n\t\tevent.reason = ShutdownReason.QUIT;\n\t\taccessor.lifecycleService.fireBeforeShutdown(event);\n\n\t\tconst veto = await event.value;\n\t\tassert.ok(veto);\n\n\t\tconst finalVeto = await event.finalValue?.();\n\t\tassert.ok(finalVeto); // assert the tracker uses the internal finalVeto API\n\n\t\tawait cleanup();\n\t});\n\n\ttest('onWillShutdown - pending backup operations canceled and tracker suspended/resumsed', async function () {\n\t\tconst { accessor, tracker, cleanup } = await createTracker();\n\n\t\tconst resource = toResource.call(this, '/path/index.txt');\n\t\tawait accessor.editorService.openEditor({ resource, options: { pinned: true } });\n\n\t\tconst model = accessor.textFileService.files.get(resource);\n\n\t\tawait model?.resolve();\n\t\tmodel?.textEditorModel?.setValue('foo');\n\t\tassert.strictEqual(accessor.workingCopyService.dirtyCount, 1);\n\t\tassert.strictEqual(tracker.pendingBackupOperationCount, 1);\n\n\t\tconst onSuspend = Event.toPromise(tracker.onDidSuspend);\n\n\t\tconst event = new TestBeforeShutdownEvent();\n\t\tevent.reason = ShutdownReason.QUIT;\n\t\taccessor.lifecycleService.fireBeforeShutdown(event);\n\n\t\tawait onSuspend;\n\n\t\tassert.strictEqual(tracker.pendingBackupOperationCount, 0);\n\n\t\t// Ops are suspended during shutdown!\n\t\tmodel?.textEditorModel?.setValue('bar');\n\t\tassert.strictEqual(accessor.workingCopyService.dirtyCount, 1);\n\t\tassert.strictEqual(tracker.pendingBackupOperationCount, 0);\n\n\t\tconst onResume = Event.toPromise(tracker.onDidResume);\n\t\tawait event.value;\n\n\t\t// Ops are resumed after shutdown!\n\t\tmodel?.textEditorModel?.setValue('foo');\n\t\tawait onResume;\n\t\tassert.strictEqual(tracker.pendingBackupOperationCount, 1);\n\n\t\tawait cleanup();\n\t});\n\n\tsuite('Hot Exit', () => {\n\t\tsuite('\"onExit\" setting', () => {\n\t\t\ttest('should hot exit on non-Mac (reason: CLOSE, windows: single, workspace)', function () {\n\t\t\t\treturn hotExitTest.call(this, HotExitConfiguration.ON_EXIT, ShutdownReason.CLOSE, false, true, !!isMacintosh);\n\t\t\t});\n\t\t\ttest('should hot exit on non-Mac (reason: CLOSE, windows: single, empty workspace)', function () {\n\t\t\t\treturn hotExitTest.call(this, HotExitConfiguration.ON_EXIT, ShutdownReason.CLOSE, false, false, !!isMacintosh);\n\t\t\t});\n\t\t\ttest('should NOT hot exit (reason: CLOSE, windows: multiple, workspace)', function () {\n\t\t\t\treturn hotExitTest.call(this, HotExitConfiguration.ON_EXIT, ShutdownReason.CLOSE, true, true, true);\n\t\t\t});\n\t\t\ttest('should NOT hot exit (reason: CLOSE, windows: multiple, empty workspace)', function () {\n\t\t\t\treturn hotExitTest.call(this, HotExitConfiguration.ON_EXIT, ShutdownReason.CLOSE, true, false, true);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: QUIT, windows: single, workspace)', function () {\n\t\t\t\treturn hotExitTest.call(this, HotExitConfiguration.ON_EXIT, ShutdownReason.QUIT, false, true, false);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: QUIT, windows: single, empty workspace)', function () {\n\t\t\t\treturn hotExitTest.call(this, HotExitConfiguration.ON_EXIT, ShutdownReason.QUIT, false, false, false);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: QUIT, windows: multiple, workspace)', function () {\n\t\t\t\treturn hotExitTest.call(this, HotExitConfiguration.ON_EXIT, ShutdownReason.QUIT, true, true, false);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: QUIT, windows: multiple, empty workspace)', function () {\n\t\t\t\treturn hotExitTest.call(this, HotExitConfiguration.ON_EXIT, ShutdownReason.QUIT, true, false, false);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: RELOAD, windows: single, workspace)', function () {\n\t\t\t\treturn hotExitTest.call(this, HotExitConfiguration.ON_EXIT, ShutdownReason.RELOAD, false, true, false);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: RELOAD, windows: single, empty workspace)', function () {\n\t\t\t\treturn hotExitTest.call(this, HotExitConfiguration.ON_EXIT, ShutdownReason.RELOAD, false, false, false);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: RELOAD, windows: multiple, workspace)', function () {\n\t\t\t\treturn hotExitTest.call(this, HotExitConfiguration.ON_EXIT, ShutdownReason.RELOAD, true, true, false);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: RELOAD, windows: multiple, empty workspace)', function () {\n\t\t\t\treturn hotExitTest.call(this, HotExitConfiguration.ON_EXIT, ShutdownReason.RELOAD, true, false, false);\n\t\t\t});\n\t\t\ttest('should NOT hot exit (reason: LOAD, windows: single, workspace)', function () {\n\t\t\t\treturn hotExitTest.call(this, HotExitConfiguration.ON_EXIT, ShutdownReason.LOAD, false, true, true);\n\t\t\t});\n\t\t\ttest('should NOT hot exit (reason: LOAD, windows: single, empty workspace)', function () {\n\t\t\t\treturn hotExitTest.call(this, HotExitConfiguration.ON_EXIT, ShutdownReason.LOAD, false, false, true);\n\t\t\t});\n\t\t\ttest('should NOT hot exit (reason: LOAD, windows: multiple, workspace)', function () {\n\t\t\t\treturn hotExitTest.call(this, HotExitConfiguration.ON_EXIT, ShutdownReason.LOAD, true, true, true);\n\t\t\t});\n\t\t\ttest('should NOT hot exit (reason: LOAD, windows: multiple, empty workspace)', function () {\n\t\t\t\treturn hotExitTest.call(this, HotExitConfiguration.ON_EXIT, ShutdownReason.LOAD, true, false, true);\n\t\t\t});\n\t\t});\n\n\t\tsuite('\"onExitAndWindowClose\" setting', () => {\n\t\t\ttest('should hot exit (reason: CLOSE, windows: single, workspace)', function () {\n\t\t\t\treturn hotExitTest.call(this, HotExitConfiguration.ON_EXIT_AND_WINDOW_CLOSE, ShutdownReason.CLOSE, false, true, false);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: CLOSE, windows: single, empty workspace)', function () {\n\t\t\t\treturn hotExitTest.call(this, HotExitConfiguration.ON_EXIT_AND_WINDOW_CLOSE, ShutdownReason.CLOSE, false, false, !!isMacintosh);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: CLOSE, windows: multiple, workspace)', function () {\n\t\t\t\treturn hotExitTest.call(this, HotExitConfiguration.ON_EXIT_AND_WINDOW_CLOSE, ShutdownReason.CLOSE, true, true, false);\n\t\t\t});\n\t\t\ttest('should NOT hot exit (reason: CLOSE, windows: multiple, empty workspace)', function () {\n\t\t\t\treturn hotExitTest.call(this, HotExitConfiguration.ON_EXIT_AND_WINDOW_CLOSE, ShutdownReason.CLOSE, true, false, true);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: QUIT, windows: single, workspace)', function () {\n\t\t\t\treturn hotExitTest.call(this, HotExitConfiguration.ON_EXIT_AND_WINDOW_CLOSE, ShutdownReason.QUIT, false, true, false);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: QUIT, windows: single, empty workspace)', function () {\n\t\t\t\treturn hotExitTest.call(this, HotExitConfiguration.ON_EXIT_AND_WINDOW_CLOSE, ShutdownReason.QUIT, false, false, false);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: QUIT, windows: multiple, workspace)', function () {\n\t\t\t\treturn hotExitTest.call(this, HotExitConfiguration.ON_EXIT_AND_WINDOW_CLOSE, ShutdownReason.QUIT, true, true, false);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: QUIT, windows: multiple, empty workspace)', function () {\n\t\t\t\treturn hotExitTest.call(this, HotExitConfiguration.ON_EXIT_AND_WINDOW_CLOSE, ShutdownReason.QUIT, true, false, false);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: RELOAD, windows: single, workspace)', function () {\n\t\t\t\treturn hotExitTest.call(this, HotExitConfiguration.ON_EXIT_AND_WINDOW_CLOSE, ShutdownReason.RELOAD, false, true, false);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: RELOAD, windows: single, empty workspace)', function () {\n\t\t\t\treturn hotExitTest.call(this, HotExitConfiguration.ON_EXIT_AND_WINDOW_CLOSE, ShutdownReason.RELOAD, false, false, false);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: RELOAD, windows: multiple, workspace)', function () {\n\t\t\t\treturn hotExitTest.call(this, HotExitConfiguration.ON_EXIT_AND_WINDOW_CLOSE, ShutdownReason.RELOAD, true, true, false);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: RELOAD, windows: multiple, empty workspace)', function () {\n\t\t\t\treturn hotExitTest.call(this, HotExitConfiguration.ON_EXIT_AND_WINDOW_CLOSE, ShutdownReason.RELOAD, true, false, false);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: LOAD, windows: single, workspace)', function () {\n\t\t\t\treturn hotExitTest.call(this, HotExitConfiguration.ON_EXIT_AND_WINDOW_CLOSE, ShutdownReason.LOAD, false, true, false);\n\t\t\t});\n\t\t\ttest('should NOT hot exit (reason: LOAD, windows: single, empty workspace)', function () {\n\t\t\t\treturn hotExitTest.call(this, HotExitConfiguration.ON_EXIT_AND_WINDOW_CLOSE, ShutdownReason.LOAD, false, false, true);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: LOAD, windows: multiple, workspace)', function () {\n\t\t\t\treturn hotExitTest.call(this, HotExitConfiguration.ON_EXIT_AND_WINDOW_CLOSE, ShutdownReason.LOAD, true, true, false);\n\t\t\t});\n\t\t\ttest('should NOT hot exit (reason: LOAD, windows: multiple, empty workspace)', function () {\n\t\t\t\treturn hotExitTest.call(this, HotExitConfiguration.ON_EXIT_AND_WINDOW_CLOSE, ShutdownReason.LOAD, true, false, true);\n\t\t\t});\n\t\t});\n\n\t\tsuite('\"onExit\" setting - scratchpad', () => {\n\t\t\ttest('should hot exit (reason: CLOSE, windows: single, workspace)', function () {\n\t\t\t\treturn scratchpadHotExitTest.call(this, HotExitConfiguration.ON_EXIT, ShutdownReason.CLOSE, false, true, false);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: CLOSE, windows: single, empty workspace)', function () {\n\t\t\t\treturn scratchpadHotExitTest.call(this, HotExitConfiguration.ON_EXIT, ShutdownReason.CLOSE, false, false, !!isMacintosh);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: CLOSE, windows: multiple, workspace)', function () {\n\t\t\t\treturn scratchpadHotExitTest.call(this, HotExitConfiguration.ON_EXIT, ShutdownReason.CLOSE, true, true, false);\n\t\t\t});\n\t\t\ttest('should NOT hot exit (reason: CLOSE, windows: multiple, empty workspace)', function () {\n\t\t\t\treturn scratchpadHotExitTest.call(this, HotExitConfiguration.ON_EXIT, ShutdownReason.CLOSE, true, false, true);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: QUIT, windows: single, workspace)', function () {\n\t\t\t\treturn scratchpadHotExitTest.call(this, HotExitConfiguration.ON_EXIT, ShutdownReason.QUIT, false, true, false);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: QUIT, windows: single, empty workspace)', function () {\n\t\t\t\treturn scratchpadHotExitTest.call(this, HotExitConfiguration.ON_EXIT, ShutdownReason.QUIT, false, false, false);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: QUIT, windows: multiple, workspace)', function () {\n\t\t\t\treturn scratchpadHotExitTest.call(this, HotExitConfiguration.ON_EXIT, ShutdownReason.QUIT, true, true, false);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: QUIT, windows: multiple, empty workspace)', function () {\n\t\t\t\treturn scratchpadHotExitTest.call(this, HotExitConfiguration.ON_EXIT, ShutdownReason.QUIT, true, false, false);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: RELOAD, windows: single, workspace)', function () {\n\t\t\t\treturn scratchpadHotExitTest.call(this, HotExitConfiguration.ON_EXIT, ShutdownReason.RELOAD, false, true, false);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: RELOAD, windows: single, empty workspace)', function () {\n\t\t\t\treturn scratchpadHotExitTest.call(this, HotExitConfiguration.ON_EXIT, ShutdownReason.RELOAD, false, false, false);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: RELOAD, windows: multiple, workspace)', function () {\n\t\t\t\treturn scratchpadHotExitTest.call(this, HotExitConfiguration.ON_EXIT, ShutdownReason.RELOAD, true, true, false);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: RELOAD, windows: multiple, empty workspace)', function () {\n\t\t\t\treturn scratchpadHotExitTest.call(this, HotExitConfiguration.ON_EXIT, ShutdownReason.RELOAD, true, false, false);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: LOAD, windows: single, workspace)', function () {\n\t\t\t\treturn scratchpadHotExitTest.call(this, HotExitConfiguration.ON_EXIT, ShutdownReason.LOAD, false, true, false);\n\t\t\t});\n\t\t\ttest('should NOT hot exit (reason: LOAD, windows: single, empty workspace)', function () {\n\t\t\t\treturn scratchpadHotExitTest.call(this, HotExitConfiguration.ON_EXIT, ShutdownReason.LOAD, false, false, true);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: LOAD, windows: multiple, workspace)', function () {\n\t\t\t\treturn scratchpadHotExitTest.call(this, HotExitConfiguration.ON_EXIT, ShutdownReason.LOAD, true, true, false);\n\t\t\t});\n\t\t\ttest('should NOT hot exit (reason: LOAD, windows: multiple, empty workspace)', function () {\n\t\t\t\treturn scratchpadHotExitTest.call(this, HotExitConfiguration.ON_EXIT, ShutdownReason.LOAD, true, false, true);\n\t\t\t});\n\t\t});\n\n\t\tsuite('\"onExitAndWindowClose\" setting - scratchpad', () => {\n\t\t\ttest('should hot exit (reason: CLOSE, windows: single, workspace)', function () {\n\t\t\t\treturn scratchpadHotExitTest.call(this, HotExitConfiguration.ON_EXIT_AND_WINDOW_CLOSE, ShutdownReason.CLOSE, false, true, false);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: CLOSE, windows: single, empty workspace)', function () {\n\t\t\t\treturn scratchpadHotExitTest.call(this, HotExitConfiguration.ON_EXIT_AND_WINDOW_CLOSE, ShutdownReason.CLOSE, false, false, !!isMacintosh);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: CLOSE, windows: multiple, workspace)', function () {\n\t\t\t\treturn scratchpadHotExitTest.call(this, HotExitConfiguration.ON_EXIT_AND_WINDOW_CLOSE, ShutdownReason.CLOSE, true, true, false);\n\t\t\t});\n\t\t\ttest('should NOT hot exit (reason: CLOSE, windows: multiple, empty workspace)', function () {\n\t\t\t\treturn scratchpadHotExitTest.call(this, HotExitConfiguration.ON_EXIT_AND_WINDOW_CLOSE, ShutdownReason.CLOSE, true, false, true);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: QUIT, windows: single, workspace)', function () {\n\t\t\t\treturn scratchpadHotExitTest.call(this, HotExitConfiguration.ON_EXIT_AND_WINDOW_CLOSE, ShutdownReason.QUIT, false, true, false);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: QUIT, windows: single, empty workspace)', function () {\n\t\t\t\treturn scratchpadHotExitTest.call(this, HotExitConfiguration.ON_EXIT_AND_WINDOW_CLOSE, ShutdownReason.QUIT, false, false, false);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: QUIT, windows: multiple, workspace)', function () {\n\t\t\t\treturn scratchpadHotExitTest.call(this, HotExitConfiguration.ON_EXIT_AND_WINDOW_CLOSE, ShutdownReason.QUIT, true, true, false);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: QUIT, windows: multiple, empty workspace)', function () {\n\t\t\t\treturn scratchpadHotExitTest.call(this, HotExitConfiguration.ON_EXIT_AND_WINDOW_CLOSE, ShutdownReason.QUIT, true, false, false);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: RELOAD, windows: single, workspace)', function () {\n\t\t\t\treturn scratchpadHotExitTest.call(this, HotExitConfiguration.ON_EXIT_AND_WINDOW_CLOSE, ShutdownReason.RELOAD, false, true, false);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: RELOAD, windows: single, empty workspace)', function () {\n\t\t\t\treturn scratchpadHotExitTest.call(this, HotExitConfiguration.ON_EXIT_AND_WINDOW_CLOSE, ShutdownReason.RELOAD, false, false, false);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: RELOAD, windows: multiple, workspace)', function () {\n\t\t\t\treturn scratchpadHotExitTest.call(this, HotExitConfiguration.ON_EXIT_AND_WINDOW_CLOSE, ShutdownReason.RELOAD, true, true, false);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: RELOAD, windows: multiple, empty workspace)', function () {\n\t\t\t\treturn scratchpadHotExitTest.call(this, HotExitConfiguration.ON_EXIT_AND_WINDOW_CLOSE, ShutdownReason.RELOAD, true, false, false);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: LOAD, windows: single, workspace)', function () {\n\t\t\t\treturn scratchpadHotExitTest.call(this, HotExitConfiguration.ON_EXIT_AND_WINDOW_CLOSE, ShutdownReason.LOAD, false, true, false);\n\t\t\t});\n\t\t\ttest('should NOT hot exit (reason: LOAD, windows: single, empty workspace)', function () {\n\t\t\t\treturn scratchpadHotExitTest.call(this, HotExitConfiguration.ON_EXIT_AND_WINDOW_CLOSE, ShutdownReason.LOAD, false, false, true);\n\t\t\t});\n\t\t\ttest('should hot exit (reason: LOAD, windows: multiple, workspace)', function () {\n\t\t\t\treturn scratchpadHotExitTest.call(this, HotExitConfiguration.ON_EXIT_AND_WINDOW_CLOSE, ShutdownReason.LOAD, true, true, false);\n\t\t\t});\n\t\t\ttest('should NOT hot exit (reason: LOAD, windows: multiple, empty workspace)', function () {\n\t\t\t\treturn scratchpadHotExitTest.call(this, HotExitConfiguration.ON_EXIT_AND_WINDOW_CLOSE, ShutdownReason.LOAD, true, false, true);\n\t\t\t});\n\t\t});\n\n\n\t\tasync function hotExitTest(this: any, setting: string, shutdownReason: ShutdownReason, multipleWindows: boolean, workspace: boolean, shouldVeto: boolean): Promise<void> {\n\t\t\tconst { accessor, cleanup } = await createTracker();\n\n\t\t\tconst resource = toResource.call(this, '/path/index.txt');\n\t\t\tawait accessor.editorService.openEditor({ resource, options: { pinned: true } });\n\n\t\t\tconst model = accessor.textFileService.files.get(resource);\n\n\t\t\t// Set hot exit config\n\t\t\taccessor.filesConfigurationService.testOnFilesConfigurationChange({ files: { hotExit: setting } });\n\n\t\t\t// Set empty workspace if required\n\t\t\tif (!workspace) {\n\t\t\t\taccessor.contextService.setWorkspace(new Workspace('empty:1508317022751'));\n\t\t\t}\n\n\t\t\t// Set multiple windows if required\n\t\t\tif (multipleWindows) {\n\t\t\t\taccessor.nativeHostService.windowCount = Promise.resolve(2);\n\t\t\t}\n\n\t\t\t// Set cancel to force a veto if hot exit does not trigger\n\t\t\taccessor.fileDialogService.setConfirmResult(ConfirmResult.CANCEL);\n\n\t\t\tawait model?.resolve();\n\t\t\tmodel?.textEditorModel?.setValue('foo');\n\t\t\tassert.strictEqual(accessor.workingCopyService.dirtyCount, 1);\n\n\t\t\tconst event = new TestBeforeShutdownEvent();\n\t\t\tevent.reason = shutdownReason;\n\t\t\taccessor.lifecycleService.fireBeforeShutdown(event);\n\n\t\t\tconst veto = await event.value;\n\t\t\tassert.ok(typeof event.finalValue === 'function'); // assert the tracker uses the internal finalVeto API\n\t\t\tassert.strictEqual(accessor.workingCopyBackupService.discardedBackups.length, 0); // When hot exit is set, backups should never be cleaned since the confirm result is cancel\n\t\t\tassert.strictEqual(veto, shouldVeto);\n\n\t\t\tawait cleanup();\n\t\t}\n\n\t\tasync function scratchpadHotExitTest(this: any, setting: string, shutdownReason: ShutdownReason, multipleWindows: boolean, workspace: boolean, shouldVeto: boolean): Promise<void> {\n\t\t\tconst { accessor, cleanup } = await createTracker();\n\n\t\t\tclass TestBackupWorkingCopy extends TestWorkingCopy {\n\n\t\t\t\tconstructor(resource: URI) {\n\t\t\t\t\tsuper(resource);\n\n\t\t\t\t\tthis._register(accessor.workingCopyService.registerWorkingCopy(this));\n\t\t\t\t}\n\n\t\t\t\toverride capabilities = WorkingCopyCapabilities.Untitled | WorkingCopyCapabilities.Scratchpad;\n\n\t\t\t\toverride isDirty(): boolean {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\toverride isModified(): boolean {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set hot exit config\n\t\t\taccessor.filesConfigurationService.testOnFilesConfigurationChange({ files: { hotExit: setting } });\n\n\t\t\t// Set empty workspace if required\n\t\t\tif (!workspace) {\n\t\t\t\taccessor.contextService.setWorkspace(new Workspace('empty:1508317022751'));\n\t\t\t}\n\n\t\t\t// Set multiple windows if required\n\t\t\tif (multipleWindows) {\n\t\t\t\taccessor.nativeHostService.windowCount = Promise.resolve(2);\n\t\t\t}\n\n\t\t\t// Set cancel to force a veto if hot exit does not trigger\n\t\t\taccessor.fileDialogService.setConfirmResult(ConfirmResult.CANCEL);\n\n\t\t\tconst resource = toResource.call(this, '/path/custom.txt');\n\t\t\tdisposables.add(new TestBackupWorkingCopy(resource));\n\n\t\t\tconst event = new TestBeforeShutdownEvent();\n\t\t\tevent.reason = shutdownReason;\n\t\t\taccessor.lifecycleService.fireBeforeShutdown(event);\n\n\t\t\tconst veto = await event.value;\n\t\t\tassert.ok(typeof event.finalValue === 'function'); // assert the tracker uses the internal finalVeto API\n\t\t\tassert.strictEqual(accessor.workingCopyBackupService.discardedBackups.length, 0); // When hot exit is set, backups should never be cleaned since the confirm result is cancel\n\t\t\tassert.strictEqual(veto, shouldVeto);\n\n\t\t\tawait cleanup();\n\t\t}\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"],
  "mappings": "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",
  "names": ["accessor", "resource"]
}
