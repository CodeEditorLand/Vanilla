{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/workingCopy/test/browser/fileWorkingCopyManager.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { workbenchInstantiationService, TestServiceAccessor, TestInMemoryFileSystemProvider } from '../../../../test/browser/workbenchTestServices.js';\nimport { StoredFileWorkingCopy, IStoredFileWorkingCopy } from '../../common/storedFileWorkingCopy.js';\nimport { bufferToStream, VSBuffer } from '../../../../../base/common/buffer.js';\nimport { TestStoredFileWorkingCopyModel, TestStoredFileWorkingCopyModelFactory } from './storedFileWorkingCopy.test.js';\nimport { Schemas } from '../../../../../base/common/network.js';\nimport { IFileWorkingCopyManager, FileWorkingCopyManager } from '../../common/fileWorkingCopyManager.js';\nimport { TestUntitledFileWorkingCopyModel, TestUntitledFileWorkingCopyModelFactory } from './untitledFileWorkingCopy.test.js';\nimport { UntitledFileWorkingCopy } from '../../common/untitledFileWorkingCopy.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\n\nsuite('FileWorkingCopyManager', () => {\n\n\tconst disposables = new DisposableStore();\n\tlet instantiationService: IInstantiationService;\n\tlet accessor: TestServiceAccessor;\n\n\tlet manager: IFileWorkingCopyManager<TestStoredFileWorkingCopyModel, TestUntitledFileWorkingCopyModel>;\n\n\tsetup(() => {\n\t\tinstantiationService = workbenchInstantiationService(undefined, disposables);\n\t\taccessor = instantiationService.createInstance(TestServiceAccessor);\n\n\t\taccessor.fileService.registerProvider(Schemas.file, new TestInMemoryFileSystemProvider());\n\t\taccessor.fileService.registerProvider(Schemas.vscodeRemote, new TestInMemoryFileSystemProvider());\n\n\t\tmanager = disposables.add(new FileWorkingCopyManager(\n\t\t\t'testFileWorkingCopyType',\n\t\t\tnew TestStoredFileWorkingCopyModelFactory(),\n\t\t\tnew TestUntitledFileWorkingCopyModelFactory(),\n\t\t\taccessor.fileService, accessor.lifecycleService, accessor.labelService, accessor.logService,\n\t\t\taccessor.workingCopyFileService, accessor.workingCopyBackupService, accessor.uriIdentityService, accessor.fileDialogService,\n\t\t\taccessor.filesConfigurationService, accessor.workingCopyService, accessor.notificationService,\n\t\t\taccessor.workingCopyEditorService, accessor.editorService, accessor.elevatedFileService, accessor.pathService,\n\t\t\taccessor.environmentService, accessor.dialogService, accessor.decorationsService, accessor.progressService,\n\t\t));\n\t});\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t});\n\n\ttest('onDidCreate, get, workingCopies', async () => {\n\t\tlet createCounter = 0;\n\t\tdisposables.add(manager.onDidCreate(e => {\n\t\t\tcreateCounter++;\n\t\t}));\n\n\t\tconst fileUri = URI.file('/test.html');\n\n\t\tassert.strictEqual(manager.workingCopies.length, 0);\n\t\tassert.strictEqual(manager.get(fileUri), undefined);\n\n\t\tconst fileWorkingCopy = await manager.resolve(fileUri);\n\t\tconst untitledFileWorkingCopy = await manager.resolve();\n\n\t\tassert.strictEqual(manager.workingCopies.length, 2);\n\t\tassert.strictEqual(createCounter, 2);\n\t\tassert.strictEqual(manager.get(fileWorkingCopy.resource), fileWorkingCopy);\n\t\tassert.strictEqual(manager.get(untitledFileWorkingCopy.resource), untitledFileWorkingCopy);\n\n\t\tconst sameFileWorkingCopy = disposables.add(await manager.resolve(fileUri));\n\t\tconst sameUntitledFileWorkingCopy = disposables.add(await manager.resolve({ untitledResource: untitledFileWorkingCopy.resource }));\n\t\tassert.strictEqual(sameFileWorkingCopy, fileWorkingCopy);\n\t\tassert.strictEqual(sameUntitledFileWorkingCopy, untitledFileWorkingCopy);\n\t\tassert.strictEqual(manager.workingCopies.length, 2);\n\t\tassert.strictEqual(createCounter, 2);\n\t});\n\n\ttest('resolve', async () => {\n\t\tconst fileWorkingCopy = disposables.add(await manager.resolve(URI.file('/test.html')));\n\t\tassert.ok(fileWorkingCopy instanceof StoredFileWorkingCopy);\n\t\tassert.strictEqual(await manager.stored.resolve(fileWorkingCopy.resource), fileWorkingCopy);\n\n\t\tconst untitledFileWorkingCopy = disposables.add(await manager.resolve());\n\t\tassert.ok(untitledFileWorkingCopy instanceof UntitledFileWorkingCopy);\n\t\tassert.strictEqual(await manager.untitled.resolve({ untitledResource: untitledFileWorkingCopy.resource }), untitledFileWorkingCopy);\n\t\tassert.strictEqual(await manager.resolve(untitledFileWorkingCopy.resource), untitledFileWorkingCopy);\n\t});\n\n\ttest('destroy', async () => {\n\t\tassert.strictEqual(accessor.workingCopyService.workingCopies.length, 0);\n\n\t\tawait manager.resolve(URI.file('/test.html'));\n\t\tawait manager.resolve({ contents: { value: bufferToStream(VSBuffer.fromString('Hello Untitled')) } });\n\n\t\tassert.strictEqual(accessor.workingCopyService.workingCopies.length, 2);\n\t\tassert.strictEqual(manager.stored.workingCopies.length, 1);\n\t\tassert.strictEqual(manager.untitled.workingCopies.length, 1);\n\n\t\tawait manager.destroy();\n\n\t\tassert.strictEqual(accessor.workingCopyService.workingCopies.length, 0);\n\t\tassert.strictEqual(manager.stored.workingCopies.length, 0);\n\t\tassert.strictEqual(manager.untitled.workingCopies.length, 0);\n\t});\n\n\ttest('saveAs - file (same target, unresolved source, unresolved target)', () => {\n\t\tconst source = URI.file('/path/source.txt');\n\n\t\treturn testSaveAsFile(source, source, false, false);\n\t});\n\n\ttest('saveAs - file (same target, different case, unresolved source, unresolved target)', async () => {\n\t\tconst source = URI.file('/path/source.txt');\n\t\tconst target = URI.file('/path/SOURCE.txt');\n\n\t\treturn testSaveAsFile(source, target, false, false);\n\t});\n\n\ttest('saveAs - file (different target, unresolved source, unresolved target)', async () => {\n\t\tconst source = URI.file('/path/source.txt');\n\t\tconst target = URI.file('/path/target.txt');\n\n\t\treturn testSaveAsFile(source, target, false, false);\n\t});\n\n\ttest('saveAs - file (same target, resolved source, unresolved target)', () => {\n\t\tconst source = URI.file('/path/source.txt');\n\n\t\treturn testSaveAsFile(source, source, true, false);\n\t});\n\n\ttest('saveAs - file (same target, different case, resolved source, unresolved target)', async () => {\n\t\tconst source = URI.file('/path/source.txt');\n\t\tconst target = URI.file('/path/SOURCE.txt');\n\n\t\treturn testSaveAsFile(source, target, true, false);\n\t});\n\n\ttest('saveAs - file (different target, resolved source, unresolved target)', async () => {\n\t\tconst source = URI.file('/path/source.txt');\n\t\tconst target = URI.file('/path/target.txt');\n\n\t\treturn testSaveAsFile(source, target, true, false);\n\t});\n\n\ttest('saveAs - file (same target, unresolved source, resolved target)', () => {\n\t\tconst source = URI.file('/path/source.txt');\n\n\t\treturn testSaveAsFile(source, source, false, true);\n\t});\n\n\ttest('saveAs - file (same target, different case, unresolved source, resolved target)', async () => {\n\t\tconst source = URI.file('/path/source.txt');\n\t\tconst target = URI.file('/path/SOURCE.txt');\n\n\t\treturn testSaveAsFile(source, target, false, true);\n\t});\n\n\ttest('saveAs - file (different target, unresolved source, resolved target)', async () => {\n\t\tconst source = URI.file('/path/source.txt');\n\t\tconst target = URI.file('/path/target.txt');\n\n\t\treturn testSaveAsFile(source, target, false, true);\n\t});\n\n\ttest('saveAs - file (same target, resolved source, resolved target)', () => {\n\t\tconst source = URI.file('/path/source.txt');\n\n\t\treturn testSaveAsFile(source, source, true, true);\n\t});\n\n\ttest('saveAs - file (different target, resolved source, resolved target)', async () => {\n\t\tconst source = URI.file('/path/source.txt');\n\t\tconst target = URI.file('/path/target.txt');\n\n\t\treturn testSaveAsFile(source, target, true, true);\n\t});\n\n\tasync function testSaveAsFile(source: URI, target: URI, resolveSource: boolean, resolveTarget: boolean) {\n\t\tlet sourceWorkingCopy: IStoredFileWorkingCopy<TestStoredFileWorkingCopyModel> | undefined = undefined;\n\t\tif (resolveSource) {\n\t\t\tsourceWorkingCopy = disposables.add(await manager.resolve(source));\n\t\t\tsourceWorkingCopy.model?.updateContents('hello world');\n\t\t\tassert.ok(sourceWorkingCopy.isDirty());\n\t\t}\n\n\t\tlet targetWorkingCopy: IStoredFileWorkingCopy<TestStoredFileWorkingCopyModel> | undefined = undefined;\n\t\tif (resolveTarget) {\n\t\t\ttargetWorkingCopy = disposables.add(await manager.resolve(target));\n\t\t\ttargetWorkingCopy.model?.updateContents('hello world');\n\t\t\tassert.ok(targetWorkingCopy.isDirty());\n\t\t}\n\n\t\tconst result = await manager.saveAs(source, target);\n\t\tif (accessor.uriIdentityService.extUri.isEqual(source, target) && resolveSource) {\n\t\t\t// if the uris are considered equal (different case on macOS/Windows)\n\t\t\t// and the source is to be resolved, the resulting working copy resource\n\t\t\t// will be the source resource because we consider file working copies\n\t\t\t// the same in that case\n\t\t\tassert.strictEqual(source.toString(), result?.resource.toString());\n\t\t} else {\n\t\t\tif (resolveSource || resolveTarget) {\n\t\t\t\tassert.strictEqual(target.toString(), result?.resource.toString());\n\t\t\t} else {\n\t\t\t\tif (accessor.uriIdentityService.extUri.isEqual(source, target)) {\n\t\t\t\t\tassert.strictEqual(undefined, result);\n\t\t\t\t} else {\n\t\t\t\t\tassert.strictEqual(target.toString(), result?.resource.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (resolveSource) {\n\t\t\tassert.strictEqual(sourceWorkingCopy?.isDirty(), false);\n\t\t}\n\n\t\tif (resolveTarget) {\n\t\t\tassert.strictEqual(targetWorkingCopy?.isDirty(), false);\n\t\t}\n\n\t\tresult?.dispose();\n\t}\n\n\ttest('saveAs - untitled (without associated resource)', async () => {\n\t\tconst workingCopy = disposables.add(await manager.resolve());\n\t\tworkingCopy.model?.updateContents('Simple Save As');\n\n\t\tconst target = URI.file('simple/file.txt');\n\t\taccessor.fileDialogService.setPickFileToSave(target);\n\n\t\tconst result = await manager.saveAs(workingCopy.resource, undefined);\n\t\tassert.strictEqual(result?.resource.toString(), target.toString());\n\n\t\tassert.strictEqual((result?.model as TestStoredFileWorkingCopyModel).contents, 'Simple Save As');\n\n\t\tassert.strictEqual(manager.untitled.get(workingCopy.resource), undefined);\n\n\t\tresult?.dispose();\n\t});\n\n\ttest('saveAs - untitled (with associated resource)', async () => {\n\t\tconst workingCopy = disposables.add(await manager.resolve({ associatedResource: { path: '/some/associated.txt' } }));\n\t\tworkingCopy.model?.updateContents('Simple Save As with associated resource');\n\n\t\tconst target = URI.from({ scheme: Schemas.file, path: '/some/associated.txt' });\n\n\t\taccessor.fileService.notExistsSet.set(target, true);\n\n\t\tconst result = await manager.saveAs(workingCopy.resource, undefined);\n\t\tassert.strictEqual(result?.resource.toString(), target.toString());\n\n\t\tassert.strictEqual((result?.model as TestStoredFileWorkingCopyModel).contents, 'Simple Save As with associated resource');\n\n\t\tassert.strictEqual(manager.untitled.get(workingCopy.resource), undefined);\n\n\t\tresult?.dispose();\n\t});\n\n\ttest('saveAs - untitled (target exists and is resolved)', async () => {\n\t\tconst workingCopy = disposables.add(await manager.resolve());\n\t\tworkingCopy.model?.updateContents('Simple Save As');\n\n\t\tconst target = URI.file('simple/file.txt');\n\t\tconst targetFileWorkingCopy = await manager.resolve(target);\n\t\taccessor.fileDialogService.setPickFileToSave(target);\n\n\t\tconst result = await manager.saveAs(workingCopy.resource, undefined);\n\t\tassert.strictEqual(result, targetFileWorkingCopy);\n\n\t\tassert.strictEqual((result?.model as TestStoredFileWorkingCopyModel).contents, 'Simple Save As');\n\n\t\tassert.strictEqual(manager.untitled.get(workingCopy.resource), undefined);\n\n\t\tresult?.dispose();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"],
  "mappings": "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",
  "names": []
}
