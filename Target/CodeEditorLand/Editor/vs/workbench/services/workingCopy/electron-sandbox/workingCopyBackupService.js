var l=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var p=(t,o,e,i)=>{for(var r=i>1?void 0:i?f(o,e):o,s=t.length-1,m;s>=0;s--)(m=t[s])&&(r=(i?m(o,e,r):m(r))||r);return i&&r&&l(o,e,r),r},c=(t,o)=>(e,i)=>o(e,i,t);import{URI as h}from"../../../../../vs/base/common/uri.js";import{localize as k}from"../../../../../vs/nls.js";import{IFileService as g}from"../../../../../vs/platform/files/common/files.js";import{InstantiationType as u,registerSingleton as I}from"../../../../../vs/platform/instantiation/common/extensions.js";import{ILogService as v}from"../../../../../vs/platform/log/common/log.js";import{registerWorkbenchContribution2 as S,WorkbenchPhase as b}from"../../../../../vs/workbench/common/contributions.js";import{INativeWorkbenchEnvironmentService as y}from"../../../../../vs/workbench/services/environment/electron-sandbox/environmentService.js";import{ILifecycleService as d}from"../../../../../vs/workbench/services/lifecycle/common/lifecycle.js";import{IWorkingCopyBackupService as L}from"../../../../../vs/workbench/services/workingCopy/common/workingCopyBackup.js";import{WorkingCopyBackupService as w}from"../../../../../vs/workbench/services/workingCopy/common/workingCopyBackupService.js";import{NativeWorkingCopyBackupTracker as a}from"../../../../../vs/workbench/services/workingCopy/electron-sandbox/workingCopyBackupTracker.js";let n=class extends w{constructor(e,i,r,s){super(e.backupPath?h.file(e.backupPath).with({scheme:e.userRoamingDataHome.scheme}):void 0,i,r);this.lifecycleService=s;this.registerListeners()}registerListeners(){this._register(this.lifecycleService.onWillShutdown(e=>e.join(this.joinBackups(),{id:"join.workingCopyBackups",label:k("join.workingCopyBackups","Backup working copies")})))}};n=p([c(0,y),c(1,g),c(2,v),c(3,d)],n),I(L,n,u.Eager),S(a.ID,a,b.BlockStartup);export{n as NativeWorkingCopyBackupService};
