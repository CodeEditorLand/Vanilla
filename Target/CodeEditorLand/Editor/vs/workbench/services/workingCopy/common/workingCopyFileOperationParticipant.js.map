{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/workingCopy/common/workingCopyFileOperationParticipant.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { IDisposable, Disposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { IWorkingCopyFileOperationParticipant, SourceTargetPair, IFileOperationUndoRedoInfo } from './workingCopyFileService.js';\nimport { FileOperation } from '../../../../platform/files/common/files.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { LinkedList } from '../../../../base/common/linkedList.js';\n\nexport class WorkingCopyFileOperationParticipant extends Disposable {\n\n\tprivate readonly participants = new LinkedList<IWorkingCopyFileOperationParticipant>();\n\n\tconstructor(\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tsuper();\n\t}\n\n\taddFileOperationParticipant(participant: IWorkingCopyFileOperationParticipant): IDisposable {\n\t\tconst remove = this.participants.push(participant);\n\n\t\treturn toDisposable(() => remove());\n\t}\n\n\tasync participate(files: SourceTargetPair[], operation: FileOperation, undoInfo: IFileOperationUndoRedoInfo | undefined, token: CancellationToken): Promise<void> {\n\t\tconst timeout = this.configurationService.getValue<number>('files.participants.timeout');\n\t\tif (typeof timeout !== 'number' || timeout <= 0) {\n\t\t\treturn; // disabled\n\t\t}\n\n\t\t// For each participant\n\t\tfor (const participant of this.participants) {\n\t\t\ttry {\n\t\t\t\tawait participant.participate(files, operation, undoInfo, timeout, token);\n\t\t\t} catch (err) {\n\t\t\t\tthis.logService.warn(err);\n\t\t\t}\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tthis.participants.clear();\n\n\t\tsuper.dispose();\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,yBAAyB;AAClC,SAAS,mBAAmB;AAC5B,SAAS,aAAa,YAAY,oBAAoB;AACtD,SAAS,sCAAsC,kBAAkB,kCAAkC;AACnG,SAAS,qBAAqB;AAC9B,SAAS,6BAA6B;AACtC,SAAS,kBAAkB;AAEpB,IAAM,sCAAN,cAAkD,WAAW;AAAA,EAInE,YAC+B,YACU,sBACvC;AACD,UAAM;AAHwB;AACU;AAAA,EAGzC;AAAA,EAtBD,OAaoE;AAAA;AAAA;AAAA,EAElD,eAAe,IAAI,WAAiD;AAAA,EASrF,4BAA4B,aAAgE;AAC3F,UAAM,SAAS,KAAK,aAAa,KAAK,WAAW;AAEjD,WAAO,aAAa,MAAM,OAAO,CAAC;AAAA,EACnC;AAAA,EAEA,MAAM,YAAY,OAA2B,WAA0B,UAAkD,OAAyC;AACjK,UAAM,UAAU,KAAK,qBAAqB,SAAiB,4BAA4B;AACvF,QAAI,OAAO,YAAY,YAAY,WAAW,GAAG;AAChD;AAAA,IACD;AAGA,eAAW,eAAe,KAAK,cAAc;AAC5C,UAAI;AACH,cAAM,YAAY,YAAY,OAAO,WAAW,UAAU,SAAS,KAAK;AAAA,MACzE,SAAS,KAAK;AACb,aAAK,WAAW,KAAK,GAAG;AAAA,MACzB;AAAA,IACD;AAAA,EACD;AAAA,EAES,UAAgB;AACxB,SAAK,aAAa,MAAM;AAExB,UAAM,QAAQ;AAAA,EACf;AACD;AAtCa,sCAAN;AAAA,EAKJ;AAAA,EACA;AAAA,GANU;",
  "names": []
}
