var f=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var c=(a,r,i,e)=>{for(var o=e>1?void 0:e?d(r,i):r,n=a.length-1,t;n>=0;n--)(t=a[n])&&(o=(e?t(r,i,o):t(o))||o);return e&&o&&f(r,i,o),o},s=(a,r)=>(i,e)=>r(i,e,a);import{Disposable as u,toDisposable as v}from"../../../../base/common/lifecycle.js";import{LinkedList as I}from"../../../../base/common/linkedList.js";import{IConfigurationService as g}from"../../../../platform/configuration/common/configuration.js";import{ILogService as y}from"../../../../platform/log/common/log.js";let p=class extends u{constructor(i,e){super();this.logService=i;this.configurationService=e}participants=new I;addFileOperationParticipant(i){const e=this.participants.push(i);return v(()=>e())}async participate(i,e,o,n){const t=this.configurationService.getValue("files.participants.timeout");if(!(typeof t!="number"||t<=0))for(const l of this.participants)try{await l.participate(i,e,o,t,n)}catch(m){this.logService.warn(m)}}dispose(){this.participants.clear(),super.dispose()}};p=c([s(0,y),s(1,g)],p);export{p as WorkingCopyFileOperationParticipant};
