var l=Object.defineProperty;var I=Object.getOwnPropertyDescriptor;var s=(n,o,r,e)=>{for(var i=e>1?void 0:e?I(o,r):o,d=n.length-1,p;d>=0;d--)(p=n[d])&&(i=(e?p(o,r,i):p(i))||i);return e&&i&&l(o,r,i),i},a=(n,o)=>(r,e)=>o(r,e,n);import{Emitter as f}from"../../../../base/common/event.js";import{Disposable as g,toDisposable as y}from"../../../../base/common/lifecycle.js";import{InstantiationType as E,registerSingleton as C}from"../../../../platform/instantiation/common/extensions.js";import{createDecorator as m}from"../../../../platform/instantiation/common/instantiation.js";import{EditorsOrder as c}from"../../../common/editor.js";import"../../../common/editor/editorInput.js";import{IEditorService as k}from"../../editor/common/editorService.js";import"./workingCopy.js";const u=m("workingCopyEditorService");let t=class extends g{constructor(r){super();this.editorService=r}_onDidRegisterHandler=this._register(new f);onDidRegisterHandler=this._onDidRegisterHandler.event;handlers=new Set;registerHandler(r){return this.handlers.add(r),this._onDidRegisterHandler.fire(r),y(()=>this.handlers.delete(r))}findEditor(r){for(const e of this.editorService.getEditors(c.MOST_RECENTLY_ACTIVE))if(this.isOpen(r,e.editor))return e}isOpen(r,e){for(const i of this.handlers)if(i.isOpen(r,e))return!0;return!1}};t=s([a(0,k)],t),C(u,t,E.Delayed);export{u as IWorkingCopyEditorService,t as WorkingCopyEditorService};
