var u=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var f=(n,e,i,o)=>{for(var r=o>1?void 0:o?d(e,i):e,c=n.length-1,p;c>=0;c--)(p=n[c])&&(r=(o?p(e,i,r):p(r))||r);return o&&r&&u(e,i,r),r},t=(n,e)=>(i,o)=>e(i,o,n);import{IWorkingCopyBackupService as v}from"../common/workingCopyBackup.js";import{IFilesConfigurationService as a}from"../../filesConfiguration/common/filesConfigurationService.js";import{IWorkingCopyService as g}from"../common/workingCopyService.js";import{ILifecycleService as I}from"../../lifecycle/common/lifecycle.js";import{ILogService as k}from"../../../../platform/log/common/log.js";import{WorkingCopyBackupTracker as l}from"../common/workingCopyBackupTracker.js";import{IWorkingCopyEditorService as C}from"../common/workingCopyEditorService.js";import{IEditorService as h}from"../../editor/common/editorService.js";import{IEditorGroupsService as y}from"../../editor/common/editorGroupsService.js";let s=class extends l{static ID="workbench.contrib.browserWorkingCopyBackupTracker";constructor(e,i,o,r,c,p,m,S){super(e,o,c,r,i,p,m,S)}onFinalBeforeShutdown(e){const i=this.workingCopyService.modifiedWorkingCopies;if(!i.length)return!1;if(!this.filesConfigurationService.isHotExitEnabled)return!0;for(const o of i)if(!this.workingCopyBackupService.hasBackupSync(o,this.getContentVersion(o)))return this.logService.warn("Unload veto: pending backups"),!0;return!1}};s=f([t(0,v),t(1,a),t(2,g),t(3,I),t(4,k),t(5,C),t(6,h),t(7,y)],s);export{s as BrowserWorkingCopyBackupTracker};
