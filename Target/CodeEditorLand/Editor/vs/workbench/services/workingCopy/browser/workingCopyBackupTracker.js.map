{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/workingCopy/browser/workingCopyBackupTracker.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IWorkingCopyBackupService } from '../common/workingCopyBackup.js';\nimport { IWorkbenchContribution } from '../../../common/contributions.js';\nimport { IFilesConfigurationService } from '../../filesConfiguration/common/filesConfigurationService.js';\nimport { IWorkingCopyService } from '../common/workingCopyService.js';\nimport { ILifecycleService, ShutdownReason } from '../../lifecycle/common/lifecycle.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { WorkingCopyBackupTracker } from '../common/workingCopyBackupTracker.js';\nimport { IWorkingCopyEditorService } from '../common/workingCopyEditorService.js';\nimport { IEditorService } from '../../editor/common/editorService.js';\nimport { IEditorGroupsService } from '../../editor/common/editorGroupsService.js';\n\nexport class BrowserWorkingCopyBackupTracker extends WorkingCopyBackupTracker implements IWorkbenchContribution {\n\n\tstatic readonly ID = 'workbench.contrib.browserWorkingCopyBackupTracker';\n\n\tconstructor(\n\t\t@IWorkingCopyBackupService workingCopyBackupService: IWorkingCopyBackupService,\n\t\t@IFilesConfigurationService filesConfigurationService: IFilesConfigurationService,\n\t\t@IWorkingCopyService workingCopyService: IWorkingCopyService,\n\t\t@ILifecycleService lifecycleService: ILifecycleService,\n\t\t@ILogService logService: ILogService,\n\t\t@IWorkingCopyEditorService workingCopyEditorService: IWorkingCopyEditorService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService\n\t) {\n\t\tsuper(workingCopyBackupService, workingCopyService, logService, lifecycleService, filesConfigurationService, workingCopyEditorService, editorService, editorGroupService);\n\t}\n\n\tprotected onFinalBeforeShutdown(reason: ShutdownReason): boolean {\n\n\t\t// Web: we cannot perform long running in the shutdown phase\n\t\t// As such we need to check sync if there are any modified working\n\t\t// copies that have not been backed up yet and then prevent the\n\t\t// shutdown if that is the case.\n\n\t\tconst modifiedWorkingCopies = this.workingCopyService.modifiedWorkingCopies;\n\t\tif (!modifiedWorkingCopies.length) {\n\t\t\treturn false; // nothing modified: no veto\n\t\t}\n\n\t\tif (!this.filesConfigurationService.isHotExitEnabled) {\n\t\t\treturn true; // modified without backup: veto\n\t\t}\n\n\t\tfor (const modifiedWorkingCopy of modifiedWorkingCopies) {\n\t\t\tif (!this.workingCopyBackupService.hasBackupSync(modifiedWorkingCopy, this.getContentVersion(modifiedWorkingCopy))) {\n\t\t\t\tthis.logService.warn('Unload veto: pending backups');\n\n\t\t\t\treturn true; // modified without backup: veto\n\t\t\t}\n\t\t}\n\n\t\treturn false; // modified and backed up: no veto\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,iCAAiC;AAC1C,SAAS,8BAA8B;AACvC,SAAS,kCAAkC;AAC3C,SAAS,2BAA2B;AACpC,SAAS,mBAAmB,sBAAsB;AAClD,SAAS,mBAAmB;AAC5B,SAAS,gCAAgC;AACzC,SAAS,iCAAiC;AAC1C,SAAS,sBAAsB;AAC/B,SAAS,4BAA4B;AAE9B,IAAM,kCAAN,cAA8C,yBAA2D;AAAA,EAhBhH,OAgBgH;AAAA;AAAA;AAAA,EAE/G,OAAgB,KAAK;AAAA,EAErB,YAC4B,0BACC,2BACP,oBACF,kBACN,YACc,0BACX,eACM,oBACrB;AACD,UAAM,0BAA0B,oBAAoB,YAAY,kBAAkB,2BAA2B,0BAA0B,eAAe,kBAAkB;AAAA,EACzK;AAAA,EAEU,sBAAsB,QAAiC;AAOhE,UAAM,wBAAwB,KAAK,mBAAmB;AACtD,QAAI,CAAC,sBAAsB,QAAQ;AAClC,aAAO;AAAA,IACR;AAEA,QAAI,CAAC,KAAK,0BAA0B,kBAAkB;AACrD,aAAO;AAAA,IACR;AAEA,eAAW,uBAAuB,uBAAuB;AACxD,UAAI,CAAC,KAAK,yBAAyB,cAAc,qBAAqB,KAAK,kBAAkB,mBAAmB,CAAC,GAAG;AACnH,aAAK,WAAW,KAAK,8BAA8B;AAEnD,eAAO;AAAA,MACR;AAAA,IACD;AAEA,WAAO;AAAA,EACR;AACD;AA3Ca,kCAAN;AAAA,EAKJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAZU;",
  "names": []
}
