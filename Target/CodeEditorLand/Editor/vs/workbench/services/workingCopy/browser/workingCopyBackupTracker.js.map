{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/workingCopy/browser/workingCopyBackupTracker.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport type { IWorkbenchContribution } from \"../../../common/contributions.js\";\nimport { IEditorGroupsService } from \"../../editor/common/editorGroupsService.js\";\nimport { IEditorService } from \"../../editor/common/editorService.js\";\nimport { IFilesConfigurationService } from \"../../filesConfiguration/common/filesConfigurationService.js\";\nimport {\n\tILifecycleService,\n\ttype ShutdownReason,\n} from \"../../lifecycle/common/lifecycle.js\";\nimport { IWorkingCopyBackupService } from \"../common/workingCopyBackup.js\";\nimport { WorkingCopyBackupTracker } from \"../common/workingCopyBackupTracker.js\";\nimport { IWorkingCopyEditorService } from \"../common/workingCopyEditorService.js\";\nimport { IWorkingCopyService } from \"../common/workingCopyService.js\";\n\nexport class BrowserWorkingCopyBackupTracker\n\textends WorkingCopyBackupTracker\n\timplements IWorkbenchContribution\n{\n\tstatic readonly ID = \"workbench.contrib.browserWorkingCopyBackupTracker\";\n\n\tconstructor(\n\t\t@IWorkingCopyBackupService workingCopyBackupService: IWorkingCopyBackupService,\n\t\t@IFilesConfigurationService filesConfigurationService: IFilesConfigurationService,\n\t\t@IWorkingCopyService workingCopyService: IWorkingCopyService,\n\t\t@ILifecycleService lifecycleService: ILifecycleService,\n\t\t@ILogService logService: ILogService,\n\t\t@IWorkingCopyEditorService workingCopyEditorService: IWorkingCopyEditorService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService,\n\t) {\n\t\tsuper(\n\t\t\tworkingCopyBackupService,\n\t\t\tworkingCopyService,\n\t\t\tlogService,\n\t\t\tlifecycleService,\n\t\t\tfilesConfigurationService,\n\t\t\tworkingCopyEditorService,\n\t\t\teditorService,\n\t\t\teditorGroupService,\n\t\t);\n\t}\n\n\tprotected onFinalBeforeShutdown(reason: ShutdownReason): boolean {\n\t\t// Web: we cannot perform long running in the shutdown phase\n\t\t// As such we need to check sync if there are any modified working\n\t\t// copies that have not been backed up yet and then prevent the\n\t\t// shutdown if that is the case.\n\n\t\tconst modifiedWorkingCopies =\n\t\t\tthis.workingCopyService.modifiedWorkingCopies;\n\t\tif (!modifiedWorkingCopies.length) {\n\t\t\treturn false; // nothing modified: no veto\n\t\t}\n\n\t\tif (!this.filesConfigurationService.isHotExitEnabled) {\n\t\t\treturn true; // modified without backup: veto\n\t\t}\n\n\t\tfor (const modifiedWorkingCopy of modifiedWorkingCopies) {\n\t\t\tif (\n\t\t\t\t!this.workingCopyBackupService.hasBackupSync(\n\t\t\t\t\tmodifiedWorkingCopy,\n\t\t\t\t\tthis.getContentVersion(modifiedWorkingCopy),\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tthis.logService.warn(\"Unload veto: pending backups\");\n\n\t\t\t\treturn true; // modified without backup: veto\n\t\t\t}\n\t\t}\n\n\t\treturn false; // modified and backed up: no veto\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,mBAAmB;AAE5B,SAAS,4BAA4B;AACrC,SAAS,sBAAsB;AAC/B,SAAS,kCAAkC;AAC3C;AAAA,EACC;AAAA,OAEM;AACP,SAAS,iCAAiC;AAC1C,SAAS,gCAAgC;AACzC,SAAS,iCAAiC;AAC1C,SAAS,2BAA2B;AAE7B,IAAM,kCAAN,cACE,yBAET;AAAA,EAtBA,OAsBA;AAAA;AAAA;AAAA,EACC,OAAgB,KAAK;AAAA,EAErB,YAC4B,0BACC,2BACP,oBACF,kBACN,YACc,0BACX,eACM,oBACrB;AACD;AAAA,MACC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,EACD;AAAA,EAEU,sBAAsB,QAAiC;AAMhE,UAAM,wBACL,KAAK,mBAAmB;AACzB,QAAI,CAAC,sBAAsB,QAAQ;AAClC,aAAO;AAAA,IACR;AAEA,QAAI,CAAC,KAAK,0BAA0B,kBAAkB;AACrD,aAAO;AAAA,IACR;AAEA,eAAW,uBAAuB,uBAAuB;AACxD,UACC,CAAC,KAAK,yBAAyB;AAAA,QAC9B;AAAA,QACA,KAAK,kBAAkB,mBAAmB;AAAA,MAC3C,GACC;AACD,aAAK,WAAW,KAAK,8BAA8B;AAEnD,eAAO;AAAA,MACR;AAAA,IACD;AAEA,WAAO;AAAA,EACR;AACD;AA3Da,kCAAN;AAAA,EAOJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAdU;",
  "names": []
}
