{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/themes/electron-sandbox/nativeHostColorSchemeService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from \"../../../../base/common/event.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport { isBoolean, isObject } from \"../../../../base/common/types.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport { INativeHostService } from \"../../../../platform/native/common/native.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport type { IColorScheme } from \"../../../../platform/window/common/window.js\";\nimport { INativeWorkbenchEnvironmentService } from \"../../environment/electron-sandbox/environmentService.js\";\nimport { IHostColorSchemeService } from \"../common/hostColorSchemeService.js\";\n\nexport class NativeHostColorSchemeService\n\textends Disposable\n\timplements IHostColorSchemeService\n{\n\tstatic readonly STORAGE_KEY = \"HostColorSchemeData\";\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidChangeColorScheme = this._register(\n\t\tnew Emitter<void>(),\n\t);\n\treadonly onDidChangeColorScheme = this._onDidChangeColorScheme.event;\n\n\tpublic dark: boolean;\n\tpublic highContrast: boolean;\n\n\tconstructor(\n\t\t@INativeHostService private readonly nativeHostService: INativeHostService,\n\t\t@INativeWorkbenchEnvironmentService environmentService: INativeWorkbenchEnvironmentService,\n\t\t@IStorageService private storageService: IStorageService\n\t) {\n\t\tsuper();\n\n\t\t// register listener with the OS\n\t\tthis._register(this.nativeHostService.onDidChangeColorScheme(scheme => this.update(scheme)));\n\n\t\tconst initial = this.getStoredValue() ?? environmentService.window.colorScheme;\n\t\tthis.dark = initial.dark;\n\t\tthis.highContrast = initial.highContrast;\n\n\t\t// fetch the actual value from the OS\n\t\tthis.nativeHostService.getOSColorScheme().then(scheme => this.update(scheme));\n\t}\n\n\tprivate getStoredValue(): IColorScheme | undefined {\n\t\tconst stored = this.storageService.get(\n\t\t\tNativeHostColorSchemeService.STORAGE_KEY,\n\t\t\tStorageScope.APPLICATION,\n\t\t);\n\t\tif (stored) {\n\t\t\ttry {\n\t\t\t\tconst scheme = JSON.parse(stored);\n\t\t\t\tif (\n\t\t\t\t\tisObject(scheme) &&\n\t\t\t\t\tisBoolean(scheme.highContrast) &&\n\t\t\t\t\tisBoolean(scheme.dark)\n\t\t\t\t) {\n\t\t\t\t\treturn scheme as IColorScheme;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t// ignore\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate update({ highContrast, dark }: IColorScheme) {\n\t\tif (dark !== this.dark || highContrast !== this.highContrast) {\n\t\t\tthis.dark = dark;\n\t\t\tthis.highContrast = highContrast;\n\t\t\tthis.storageService.store(\n\t\t\t\tNativeHostColorSchemeService.STORAGE_KEY,\n\t\t\t\tJSON.stringify({ highContrast, dark }),\n\t\t\t\tStorageScope.APPLICATION,\n\t\t\t\tStorageTarget.MACHINE,\n\t\t\t);\n\t\t\tthis._onDidChangeColorScheme.fire();\n\t\t}\n\t}\n}\n\nregisterSingleton(\n\tIHostColorSchemeService,\n\tNativeHostColorSchemeService,\n\tInstantiationType.Delayed,\n);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,eAAe;AACxB,SAAS,kBAAkB;AAC3B,SAAS,WAAW,gBAAgB;AACpC;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,0BAA0B;AACnC;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AAEP,SAAS,0CAA0C;AACnD,SAAS,+BAA+B;AAEjC,IAAM,+BAAN,cACE,WAET;AAAA,EAaC,YACsC,mBACD,oBACX,gBACxB;AACD,UAAM;AAJ+B;AAEZ;AAKzB,SAAK,UAAU,KAAK,kBAAkB,uBAAuB,YAAU,KAAK,OAAO,MAAM,CAAC,CAAC;AAE3F,UAAM,UAAU,KAAK,eAAe,KAAK,mBAAmB,OAAO;AACnE,SAAK,OAAO,QAAQ;AACpB,SAAK,eAAe,QAAQ;AAG5B,SAAK,kBAAkB,iBAAiB,EAAE,KAAK,YAAU,KAAK,OAAO,MAAM,CAAC;AAAA,EAC7E;AAAA,EAtDD,OAyBA;AAAA;AAAA;AAAA,EACC,OAAgB,cAAc;AAAA,EAIb,0BAA0B,KAAK;AAAA,IAC/C,IAAI,QAAc;AAAA,EACnB;AAAA,EACS,yBAAyB,KAAK,wBAAwB;AAAA,EAExD;AAAA,EACA;AAAA,EAoBC,iBAA2C;AAClD,UAAM,SAAS,KAAK,eAAe;AAAA,MAClC,6BAA6B;AAAA,MAC7B,aAAa;AAAA,IACd;AACA,QAAI,QAAQ;AACX,UAAI;AACH,cAAM,SAAS,KAAK,MAAM,MAAM;AAChC,YACC,SAAS,MAAM,KACf,UAAU,OAAO,YAAY,KAC7B,UAAU,OAAO,IAAI,GACpB;AACD,iBAAO;AAAA,QACR;AAAA,MACD,SAAS,GAAG;AAAA,MAEZ;AAAA,IACD;AACA,WAAO;AAAA,EACR;AAAA,EAEQ,OAAO,EAAE,cAAc,KAAK,GAAiB;AACpD,QAAI,SAAS,KAAK,QAAQ,iBAAiB,KAAK,cAAc;AAC7D,WAAK,OAAO;AACZ,WAAK,eAAe;AACpB,WAAK,eAAe;AAAA,QACnB,6BAA6B;AAAA,QAC7B,KAAK,UAAU,EAAE,cAAc,KAAK,CAAC;AAAA,QACrC,aAAa;AAAA,QACb,cAAc;AAAA,MACf;AACA,WAAK,wBAAwB,KAAK;AAAA,IACnC;AAAA,EACD;AACD;AArEa,+BAAN;AAAA,EAiBJ;AAAA,EACA;AAAA,EACA;AAAA,GAnBU;AAuEb;AAAA,EACC;AAAA,EACA;AAAA,EACA,kBAAkB;AACnB;",
  "names": []
}
