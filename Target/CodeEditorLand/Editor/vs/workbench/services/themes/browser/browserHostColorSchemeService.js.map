{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/themes/browser/browserHostColorSchemeService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addMatchMediaChangeListener } from \"../../../../base/browser/browser.js\";\nimport { mainWindow } from \"../../../../base/browser/window.js\";\nimport { Emitter, type Event } from \"../../../../base/common/event.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport { IHostColorSchemeService } from \"../common/hostColorSchemeService.js\";\n\nexport class BrowserHostColorSchemeService\n\textends Disposable\n\timplements IHostColorSchemeService\n{\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidSchemeChangeEvent = this._register(\n\t\tnew Emitter<void>(),\n\t);\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\taddMatchMediaChangeListener(\n\t\t\tmainWindow,\n\t\t\t\"(prefers-color-scheme: dark)\",\n\t\t\t() => {\n\t\t\t\tthis._onDidSchemeChangeEvent.fire();\n\t\t\t},\n\t\t);\n\t\taddMatchMediaChangeListener(\n\t\t\tmainWindow,\n\t\t\t\"(forced-colors: active)\",\n\t\t\t() => {\n\t\t\t\tthis._onDidSchemeChangeEvent.fire();\n\t\t\t},\n\t\t);\n\t}\n\n\tget onDidChangeColorScheme(): Event<void> {\n\t\treturn this._onDidSchemeChangeEvent.event;\n\t}\n\n\tget dark(): boolean {\n\t\tif (mainWindow.matchMedia(`(prefers-color-scheme: light)`).matches) {\n\t\t\treturn false;\n\t\t} else if (\n\t\t\tmainWindow.matchMedia(`(prefers-color-scheme: dark)`).matches\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tget highContrast(): boolean {\n\t\tif (mainWindow.matchMedia(`(forced-colors: active)`).matches) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n\nregisterSingleton(\n\tIHostColorSchemeService,\n\tBrowserHostColorSchemeService,\n\tInstantiationType.Delayed,\n);\n"],
  "mappings": ";;AAKA,SAAS,mCAAmC;AAC5C,SAAS,kBAAkB;AAC3B,SAAS,eAA2B;AACpC,SAAS,kBAAkB;AAC3B;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,+BAA+B;AAEjC,MAAM,sCACJ,WAET;AAAA,EAlBA,OAkBA;AAAA;AAAA;AAAA,EAGkB,0BAA0B,KAAK;AAAA,IAC/C,IAAI,QAAc;AAAA,EACnB;AAAA,EAEA,cAAc;AACb,UAAM;AAEN,SAAK,kBAAkB;AAAA,EACxB;AAAA,EAEQ,oBAA0B;AACjC;AAAA,MACC;AAAA,MACA;AAAA,MACA,MAAM;AACL,aAAK,wBAAwB,KAAK;AAAA,MACnC;AAAA,IACD;AACA;AAAA,MACC;AAAA,MACA;AAAA,MACA,MAAM;AACL,aAAK,wBAAwB,KAAK;AAAA,MACnC;AAAA,IACD;AAAA,EACD;AAAA,EAEA,IAAI,yBAAsC;AACzC,WAAO,KAAK,wBAAwB;AAAA,EACrC;AAAA,EAEA,IAAI,OAAgB;AACnB,QAAI,WAAW,WAAW,+BAA+B,EAAE,SAAS;AACnE,aAAO;AAAA,IACR,WACC,WAAW,WAAW,8BAA8B,EAAE,SACrD;AACD,aAAO;AAAA,IACR;AACA,WAAO;AAAA,EACR;AAAA,EAEA,IAAI,eAAwB;AAC3B,QAAI,WAAW,WAAW,yBAAyB,EAAE,SAAS;AAC7D,aAAO;AAAA,IACR;AACA,WAAO;AAAA,EACR;AACD;AAEA;AAAA,EACC;AAAA,EACA;AAAA,EACA,kBAAkB;AACnB;",
  "names": []
}
