{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/themes/browser/browserHostColorSchemeService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { addMatchMediaChangeListener } from '../../../../base/browser/browser.js';\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { IHostColorSchemeService } from '../common/hostColorSchemeService.js';\nimport { mainWindow } from '../../../../base/browser/window.js';\n\nexport class BrowserHostColorSchemeService extends Disposable implements IHostColorSchemeService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidSchemeChangeEvent = this._register(new Emitter<void>());\n\n\tconstructor(\n\t) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\taddMatchMediaChangeListener(mainWindow, '(prefers-color-scheme: dark)', () => {\n\t\t\tthis._onDidSchemeChangeEvent.fire();\n\t\t});\n\t\taddMatchMediaChangeListener(mainWindow, '(forced-colors: active)', () => {\n\t\t\tthis._onDidSchemeChangeEvent.fire();\n\t\t});\n\t}\n\n\tget onDidChangeColorScheme(): Event<void> {\n\t\treturn this._onDidSchemeChangeEvent.event;\n\t}\n\n\tget dark(): boolean {\n\t\tif (mainWindow.matchMedia(`(prefers-color-scheme: light)`).matches) {\n\t\t\treturn false;\n\t\t} else if (mainWindow.matchMedia(`(prefers-color-scheme: dark)`).matches) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tget highContrast(): boolean {\n\t\tif (mainWindow.matchMedia(`(forced-colors: active)`).matches) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n}\n\nregisterSingleton(IHostColorSchemeService, BrowserHostColorSchemeService, InstantiationType.Delayed);\n"],
  "mappings": ";;AAKA,SAAS,SAAS,aAAa;AAC/B,SAAS,mCAAmC;AAC5C,SAAS,mBAAmB,yBAAyB;AACrD,SAAS,kBAAkB;AAC3B,SAAS,+BAA+B;AACxC,SAAS,kBAAkB;AAEpB,MAAM,sCAAsC,WAA8C;AAAA,EAZjG,OAYiG;AAAA;AAAA;AAAA,EAI/E,0BAA0B,KAAK,UAAU,IAAI,QAAc,CAAC;AAAA,EAE7E,cACE;AACD,UAAM;AAEN,SAAK,kBAAkB;AAAA,EACxB;AAAA,EAEQ,oBAA0B;AAEjC,gCAA4B,YAAY,gCAAgC,MAAM;AAC7E,WAAK,wBAAwB,KAAK;AAAA,IACnC,CAAC;AACD,gCAA4B,YAAY,2BAA2B,MAAM;AACxE,WAAK,wBAAwB,KAAK;AAAA,IACnC,CAAC;AAAA,EACF;AAAA,EAEA,IAAI,yBAAsC;AACzC,WAAO,KAAK,wBAAwB;AAAA,EACrC;AAAA,EAEA,IAAI,OAAgB;AACnB,QAAI,WAAW,WAAW,+BAA+B,EAAE,SAAS;AACnE,aAAO;AAAA,IACR,WAAW,WAAW,WAAW,8BAA8B,EAAE,SAAS;AACzE,aAAO;AAAA,IACR;AACA,WAAO;AAAA,EACR;AAAA,EAEA,IAAI,eAAwB;AAC3B,QAAI,WAAW,WAAW,yBAAyB,EAAE,SAAS;AAC7D,aAAO;AAAA,IACR;AACA,WAAO;AAAA,EACR;AAED;AAEA,kBAAkB,yBAAyB,+BAA+B,kBAAkB,OAAO;",
  "names": []
}
