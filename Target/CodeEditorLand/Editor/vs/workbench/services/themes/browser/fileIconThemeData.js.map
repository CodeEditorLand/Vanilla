{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/themes/browser/fileIconThemeData.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { asCSSUrl } from \"../../../../base/browser/dom.js\";\nimport { mainWindow } from \"../../../../base/browser/window.js\";\nimport * as Json from \"../../../../base/common/json.js\";\nimport { getParseErrorMessage } from \"../../../../base/common/jsonErrorMessages.js\";\nimport * as paths from \"../../../../base/common/path.js\";\nimport * as resources from \"../../../../base/common/resources.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport type { ILanguageService } from \"../../../../editor/common/languages/language.js\";\nimport * as nls from \"../../../../nls.js\";\nimport type { IExtensionResourceLoaderService } from \"../../../../platform/extensionResourceLoader/common/extensionResourceLoader.js\";\nimport {\n\ttype IStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport {\n\tExtensionData,\n\ttype IThemeExtensionPoint,\n\ttype IWorkbenchFileIconTheme,\n} from \"../common/workbenchThemeService.js\";\n\nexport class FileIconThemeData implements IWorkbenchFileIconTheme {\n\tstatic readonly STORAGE_KEY = \"iconThemeData\";\n\n\tid: string;\n\tlabel: string;\n\tsettingsId: string | null;\n\tdescription?: string;\n\thasFileIcons: boolean;\n\thasFolderIcons: boolean;\n\thidesExplorerArrows: boolean;\n\tisLoaded: boolean;\n\tlocation?: URI;\n\textensionData?: ExtensionData;\n\twatch?: boolean;\n\n\tstyleSheetContent?: string;\n\n\tprivate constructor(id: string, label: string, settingsId: string | null) {\n\t\tthis.id = id;\n\t\tthis.label = label;\n\t\tthis.settingsId = settingsId;\n\t\tthis.isLoaded = false;\n\t\tthis.hasFileIcons = false;\n\t\tthis.hasFolderIcons = false;\n\t\tthis.hidesExplorerArrows = false;\n\t}\n\n\tpublic ensureLoaded(\n\t\tthemeLoader: FileIconThemeLoader,\n\t): Promise<string | undefined> {\n\t\treturn this.isLoaded\n\t\t\t? Promise.resolve(this.styleSheetContent)\n\t\t\t: this.load(themeLoader);\n\t}\n\n\tpublic reload(\n\t\tthemeLoader: FileIconThemeLoader,\n\t): Promise<string | undefined> {\n\t\treturn this.load(themeLoader);\n\t}\n\n\tprivate load(\n\t\tthemeLoader: FileIconThemeLoader,\n\t): Promise<string | undefined> {\n\t\treturn themeLoader.load(this);\n\t}\n\n\tstatic fromExtensionTheme(\n\t\ticonTheme: IThemeExtensionPoint,\n\t\ticonThemeLocation: URI,\n\t\textensionData: ExtensionData,\n\t): FileIconThemeData {\n\t\tconst id = extensionData.extensionId + \"-\" + iconTheme.id;\n\t\tconst label = iconTheme.label || paths.basename(iconTheme.path);\n\t\tconst settingsId = iconTheme.id;\n\n\t\tconst themeData = new FileIconThemeData(id, label, settingsId);\n\n\t\tthemeData.description = iconTheme.description;\n\t\tthemeData.location = iconThemeLocation;\n\t\tthemeData.extensionData = extensionData;\n\t\tthemeData.watch = iconTheme._watch;\n\t\tthemeData.isLoaded = false;\n\t\treturn themeData;\n\t}\n\n\tprivate static _noIconTheme: FileIconThemeData | null = null;\n\n\tstatic get noIconTheme(): FileIconThemeData {\n\t\tlet themeData = FileIconThemeData._noIconTheme;\n\t\tif (!themeData) {\n\t\t\tthemeData = FileIconThemeData._noIconTheme = new FileIconThemeData(\n\t\t\t\t\"\",\n\t\t\t\t\"\",\n\t\t\t\tnull,\n\t\t\t);\n\t\t\tthemeData.hasFileIcons = false;\n\t\t\tthemeData.hasFolderIcons = false;\n\t\t\tthemeData.hidesExplorerArrows = false;\n\t\t\tthemeData.isLoaded = true;\n\t\t\tthemeData.extensionData = undefined;\n\t\t\tthemeData.watch = false;\n\t\t}\n\t\treturn themeData;\n\t}\n\n\tstatic createUnloadedTheme(id: string): FileIconThemeData {\n\t\tconst themeData = new FileIconThemeData(id, \"\", \"__\" + id);\n\t\tthemeData.isLoaded = false;\n\t\tthemeData.hasFileIcons = false;\n\t\tthemeData.hasFolderIcons = false;\n\t\tthemeData.hidesExplorerArrows = false;\n\t\tthemeData.extensionData = undefined;\n\t\tthemeData.watch = false;\n\t\treturn themeData;\n\t}\n\n\tstatic fromStorageData(\n\t\tstorageService: IStorageService,\n\t): FileIconThemeData | undefined {\n\t\tconst input = storageService.get(\n\t\t\tFileIconThemeData.STORAGE_KEY,\n\t\t\tStorageScope.PROFILE,\n\t\t);\n\t\tif (!input) {\n\t\t\treturn undefined;\n\t\t}\n\t\ttry {\n\t\t\tconst data = JSON.parse(input);\n\t\t\tconst theme = new FileIconThemeData(\"\", \"\", null);\n\t\t\tfor (const key in data) {\n\t\t\t\tswitch (key) {\n\t\t\t\t\tcase \"id\":\n\t\t\t\t\tcase \"label\":\n\t\t\t\t\tcase \"description\":\n\t\t\t\t\tcase \"settingsId\":\n\t\t\t\t\tcase \"styleSheetContent\":\n\t\t\t\t\tcase \"hasFileIcons\":\n\t\t\t\t\tcase \"hidesExplorerArrows\":\n\t\t\t\t\tcase \"hasFolderIcons\":\n\t\t\t\t\tcase \"watch\":\n\t\t\t\t\t\t(theme as any)[key] = data[key];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"location\":\n\t\t\t\t\t\t// ignore, no longer restore\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"extensionData\":\n\t\t\t\t\t\ttheme.extensionData = ExtensionData.fromJSONObject(\n\t\t\t\t\t\t\tdata.extensionData,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn theme;\n\t\t} catch (e) {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\ttoStorage(storageService: IStorageService) {\n\t\tconst data = JSON.stringify({\n\t\t\tid: this.id,\n\t\t\tlabel: this.label,\n\t\t\tdescription: this.description,\n\t\t\tsettingsId: this.settingsId,\n\t\t\tstyleSheetContent: this.styleSheetContent,\n\t\t\thasFileIcons: this.hasFileIcons,\n\t\t\thasFolderIcons: this.hasFolderIcons,\n\t\t\thidesExplorerArrows: this.hidesExplorerArrows,\n\t\t\textensionData: ExtensionData.toJSONObject(this.extensionData),\n\t\t\twatch: this.watch,\n\t\t});\n\t\tstorageService.store(\n\t\t\tFileIconThemeData.STORAGE_KEY,\n\t\t\tdata,\n\t\t\tStorageScope.PROFILE,\n\t\t\tStorageTarget.MACHINE,\n\t\t);\n\t}\n}\n\ninterface IconDefinition {\n\ticonPath: string;\n\tfontColor: string;\n\tfontCharacter: string;\n\tfontSize: string;\n\tfontId: string;\n}\n\ninterface FontDefinition {\n\tid: string;\n\tweight: string;\n\tstyle: string;\n\tsize: string;\n\tsrc: { path: string; format: string }[];\n}\n\ninterface IconsAssociation {\n\tfolder?: string;\n\tfile?: string;\n\tfolderExpanded?: string;\n\trootFolder?: string;\n\trootFolderExpanded?: string;\n\trootFolderNames?: { [folderName: string]: string };\n\trootFolderNamesExpanded?: { [folderName: string]: string };\n\tfolderNames?: { [folderName: string]: string };\n\tfolderNamesExpanded?: { [folderName: string]: string };\n\tfileExtensions?: { [extension: string]: string };\n\tfileNames?: { [fileName: string]: string };\n\tlanguageIds?: { [languageId: string]: string };\n}\n\ninterface IconThemeDocument extends IconsAssociation {\n\ticonDefinitions: { [key: string]: IconDefinition };\n\tfonts: FontDefinition[];\n\tlight?: IconsAssociation;\n\thighContrast?: IconsAssociation;\n\thidesExplorerArrows?: boolean;\n\tshowLanguageModeIcons?: boolean;\n}\n\nexport class FileIconThemeLoader {\n\tconstructor(\n\t\tprivate readonly fileService: IExtensionResourceLoaderService,\n\t\tprivate readonly languageService: ILanguageService,\n\t) {}\n\n\tpublic load(data: FileIconThemeData): Promise<string | undefined> {\n\t\tif (!data.location) {\n\t\t\treturn Promise.resolve(data.styleSheetContent);\n\t\t}\n\t\treturn this.loadIconThemeDocument(data.location).then(\n\t\t\t(iconThemeDocument) => {\n\t\t\t\tconst result = this.processIconThemeDocument(\n\t\t\t\t\tdata.id,\n\t\t\t\t\tdata.location!,\n\t\t\t\t\ticonThemeDocument,\n\t\t\t\t);\n\t\t\t\tdata.styleSheetContent = result.content;\n\t\t\t\tdata.hasFileIcons = result.hasFileIcons;\n\t\t\t\tdata.hasFolderIcons = result.hasFolderIcons;\n\t\t\t\tdata.hidesExplorerArrows = result.hidesExplorerArrows;\n\t\t\t\tdata.isLoaded = true;\n\t\t\t\treturn data.styleSheetContent;\n\t\t\t},\n\t\t);\n\t}\n\n\tprivate loadIconThemeDocument(location: URI): Promise<IconThemeDocument> {\n\t\treturn this.fileService\n\t\t\t.readExtensionResource(location)\n\t\t\t.then((content) => {\n\t\t\t\tconst errors: Json.ParseError[] = [];\n\t\t\t\tconst contentValue = Json.parse(content, errors);\n\t\t\t\tif (errors.length > 0) {\n\t\t\t\t\treturn Promise.reject(\n\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\"error.cannotparseicontheme\",\n\t\t\t\t\t\t\t\t\"Problems parsing file icons file: {0}\",\n\t\t\t\t\t\t\t\terrors\n\t\t\t\t\t\t\t\t\t.map((e) => getParseErrorMessage(e.error))\n\t\t\t\t\t\t\t\t\t.join(\", \"),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t} else if (Json.getNodeType(contentValue) !== \"object\") {\n\t\t\t\t\treturn Promise.reject(\n\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\"error.invalidformat\",\n\t\t\t\t\t\t\t\t\"Invalid format for file icons theme file: Object expected.\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn Promise.resolve(contentValue);\n\t\t\t});\n\t}\n\n\tprivate processIconThemeDocument(\n\t\tid: string,\n\t\ticonThemeDocumentLocation: URI,\n\t\ticonThemeDocument: IconThemeDocument,\n\t): {\n\t\tcontent: string;\n\t\thasFileIcons: boolean;\n\t\thasFolderIcons: boolean;\n\t\thidesExplorerArrows: boolean;\n\t} {\n\t\tconst result = {\n\t\t\tcontent: \"\",\n\t\t\thasFileIcons: false,\n\t\t\thasFolderIcons: false,\n\t\t\thidesExplorerArrows: !!iconThemeDocument.hidesExplorerArrows,\n\t\t};\n\n\t\tlet hasSpecificFileIcons = false;\n\n\t\tif (!iconThemeDocument.iconDefinitions) {\n\t\t\treturn result;\n\t\t}\n\t\tconst selectorByDefinitionId: { [def: string]: string[] } = {};\n\t\tconst coveredLanguages: { [languageId: string]: boolean } = {};\n\n\t\tconst iconThemeDocumentLocationDirname = resources.dirname(\n\t\t\ticonThemeDocumentLocation,\n\t\t);\n\t\tfunction resolvePath(path: string) {\n\t\t\treturn resources.joinPath(iconThemeDocumentLocationDirname, path);\n\t\t}\n\n\t\tfunction collectSelectors(\n\t\t\tassociations: IconsAssociation | undefined,\n\t\t\tbaseThemeClassName?: string,\n\t\t) {\n\t\t\tfunction addSelector(selector: string, defId: string) {\n\t\t\t\tif (defId) {\n\t\t\t\t\tlet list = selectorByDefinitionId[defId];\n\t\t\t\t\tif (!list) {\n\t\t\t\t\t\tlist = selectorByDefinitionId[defId] = [];\n\t\t\t\t\t}\n\t\t\t\t\tlist.push(selector);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (associations) {\n\t\t\t\tlet qualifier = \".show-file-icons\";\n\t\t\t\tif (baseThemeClassName) {\n\t\t\t\t\tqualifier = baseThemeClassName + \" \" + qualifier;\n\t\t\t\t}\n\n\t\t\t\tconst expanded =\n\t\t\t\t\t\".monaco-tl-twistie.collapsible:not(.collapsed) + .monaco-tl-contents\";\n\n\t\t\t\tif (associations.folder) {\n\t\t\t\t\taddSelector(\n\t\t\t\t\t\t`${qualifier} .folder-icon::before`,\n\t\t\t\t\t\tassociations.folder,\n\t\t\t\t\t);\n\t\t\t\t\tresult.hasFolderIcons = true;\n\t\t\t\t}\n\n\t\t\t\tif (associations.folderExpanded) {\n\t\t\t\t\taddSelector(\n\t\t\t\t\t\t`${qualifier} ${expanded} .folder-icon::before`,\n\t\t\t\t\t\tassociations.folderExpanded,\n\t\t\t\t\t);\n\t\t\t\t\tresult.hasFolderIcons = true;\n\t\t\t\t}\n\n\t\t\t\tconst rootFolder =\n\t\t\t\t\tassociations.rootFolder || associations.folder;\n\t\t\t\tconst rootFolderExpanded =\n\t\t\t\t\tassociations.rootFolderExpanded ||\n\t\t\t\t\tassociations.folderExpanded;\n\n\t\t\t\tif (rootFolder) {\n\t\t\t\t\taddSelector(\n\t\t\t\t\t\t`${qualifier} .rootfolder-icon::before`,\n\t\t\t\t\t\trootFolder,\n\t\t\t\t\t);\n\t\t\t\t\tresult.hasFolderIcons = true;\n\t\t\t\t}\n\n\t\t\t\tif (rootFolderExpanded) {\n\t\t\t\t\taddSelector(\n\t\t\t\t\t\t`${qualifier} ${expanded} .rootfolder-icon::before`,\n\t\t\t\t\t\trootFolderExpanded,\n\t\t\t\t\t);\n\t\t\t\t\tresult.hasFolderIcons = true;\n\t\t\t\t}\n\n\t\t\t\tif (associations.file) {\n\t\t\t\t\taddSelector(\n\t\t\t\t\t\t`${qualifier} .file-icon::before`,\n\t\t\t\t\t\tassociations.file,\n\t\t\t\t\t);\n\t\t\t\t\tresult.hasFileIcons = true;\n\t\t\t\t}\n\n\t\t\t\tconst folderNames = associations.folderNames;\n\t\t\t\tif (folderNames) {\n\t\t\t\t\tfor (const key in folderNames) {\n\t\t\t\t\t\tconst selectors: string[] = [];\n\t\t\t\t\t\tconst name = handleParentFolder(\n\t\t\t\t\t\t\tkey.toLowerCase(),\n\t\t\t\t\t\t\tselectors,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tselectors.push(`.${escapeCSS(name)}-name-folder-icon`);\n\t\t\t\t\t\taddSelector(\n\t\t\t\t\t\t\t`${qualifier} ${selectors.join(\"\")}.folder-icon::before`,\n\t\t\t\t\t\t\tfolderNames[key],\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresult.hasFolderIcons = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst folderNamesExpanded = associations.folderNamesExpanded;\n\t\t\t\tif (folderNamesExpanded) {\n\t\t\t\t\tfor (const key in folderNamesExpanded) {\n\t\t\t\t\t\tconst selectors: string[] = [];\n\t\t\t\t\t\tconst name = handleParentFolder(\n\t\t\t\t\t\t\tkey.toLowerCase(),\n\t\t\t\t\t\t\tselectors,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tselectors.push(`.${escapeCSS(name)}-name-folder-icon`);\n\t\t\t\t\t\taddSelector(\n\t\t\t\t\t\t\t`${qualifier} ${expanded} ${selectors.join(\"\")}.folder-icon::before`,\n\t\t\t\t\t\t\tfolderNamesExpanded[key],\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresult.hasFolderIcons = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst rootFolderNames = associations.rootFolderNames;\n\t\t\t\tif (rootFolderNames) {\n\t\t\t\t\tfor (const key in rootFolderNames) {\n\t\t\t\t\t\tconst name = key.toLowerCase();\n\t\t\t\t\t\taddSelector(\n\t\t\t\t\t\t\t`${qualifier} .${escapeCSS(name)}-root-name-folder-icon.rootfolder-icon::before`,\n\t\t\t\t\t\t\trootFolderNames[key],\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresult.hasFolderIcons = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst rootFolderNamesExpanded =\n\t\t\t\t\tassociations.rootFolderNamesExpanded;\n\t\t\t\tif (rootFolderNamesExpanded) {\n\t\t\t\t\tfor (const key in rootFolderNamesExpanded) {\n\t\t\t\t\t\tconst name = key.toLowerCase();\n\t\t\t\t\t\taddSelector(\n\t\t\t\t\t\t\t`${qualifier} ${expanded} .${escapeCSS(name)}-root-name-folder-icon.rootfolder-icon::before`,\n\t\t\t\t\t\t\trootFolderNamesExpanded[key],\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresult.hasFolderIcons = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst languageIds = associations.languageIds;\n\t\t\t\tif (languageIds) {\n\t\t\t\t\tif (!languageIds.jsonc && languageIds.json) {\n\t\t\t\t\t\tlanguageIds.jsonc = languageIds.json;\n\t\t\t\t\t}\n\t\t\t\t\tfor (const languageId in languageIds) {\n\t\t\t\t\t\taddSelector(\n\t\t\t\t\t\t\t`${qualifier} .${escapeCSS(languageId)}-lang-file-icon.file-icon::before`,\n\t\t\t\t\t\t\tlanguageIds[languageId],\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresult.hasFileIcons = true;\n\t\t\t\t\t\thasSpecificFileIcons = true;\n\t\t\t\t\t\tcoveredLanguages[languageId] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst fileExtensions = associations.fileExtensions;\n\t\t\t\tif (fileExtensions) {\n\t\t\t\t\tfor (const key in fileExtensions) {\n\t\t\t\t\t\tconst selectors: string[] = [];\n\t\t\t\t\t\tconst name = handleParentFolder(\n\t\t\t\t\t\t\tkey.toLowerCase(),\n\t\t\t\t\t\t\tselectors,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst segments = name.split(\".\");\n\t\t\t\t\t\tif (segments.length) {\n\t\t\t\t\t\t\tfor (let i = 0; i < segments.length; i++) {\n\t\t\t\t\t\t\t\tselectors.push(\n\t\t\t\t\t\t\t\t\t`.${escapeCSS(segments.slice(i).join(\".\"))}-ext-file-icon`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tselectors.push(\".ext-file-icon\"); // extra segment to increase file-ext score\n\t\t\t\t\t\t}\n\t\t\t\t\t\taddSelector(\n\t\t\t\t\t\t\t`${qualifier} ${selectors.join(\"\")}.file-icon::before`,\n\t\t\t\t\t\t\tfileExtensions[key],\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresult.hasFileIcons = true;\n\t\t\t\t\t\thasSpecificFileIcons = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst fileNames = associations.fileNames;\n\t\t\t\tif (fileNames) {\n\t\t\t\t\tfor (const key in fileNames) {\n\t\t\t\t\t\tconst selectors: string[] = [];\n\t\t\t\t\t\tconst fileName = handleParentFolder(\n\t\t\t\t\t\t\tkey.toLowerCase(),\n\t\t\t\t\t\t\tselectors,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tselectors.push(\n\t\t\t\t\t\t\t`.${escapeCSS(fileName)}-name-file-icon`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tselectors.push(\".name-file-icon\"); // extra segment to increase file-name score\n\t\t\t\t\t\tconst segments = fileName.split(\".\");\n\t\t\t\t\t\tif (segments.length) {\n\t\t\t\t\t\t\tfor (let i = 1; i < segments.length; i++) {\n\t\t\t\t\t\t\t\tselectors.push(\n\t\t\t\t\t\t\t\t\t`.${escapeCSS(segments.slice(i).join(\".\"))}-ext-file-icon`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tselectors.push(\".ext-file-icon\"); // extra segment to increase file-ext score\n\t\t\t\t\t\t}\n\t\t\t\t\t\taddSelector(\n\t\t\t\t\t\t\t`${qualifier} ${selectors.join(\"\")}.file-icon::before`,\n\t\t\t\t\t\t\tfileNames[key],\n\t\t\t\t\t\t);\n\t\t\t\t\t\tresult.hasFileIcons = true;\n\t\t\t\t\t\thasSpecificFileIcons = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcollectSelectors(iconThemeDocument);\n\t\tcollectSelectors(iconThemeDocument.light, \".vs\");\n\t\tcollectSelectors(iconThemeDocument.highContrast, \".hc-black\");\n\t\tcollectSelectors(iconThemeDocument.highContrast, \".hc-light\");\n\n\t\tif (!result.hasFileIcons && !result.hasFolderIcons) {\n\t\t\treturn result;\n\t\t}\n\n\t\tconst showLanguageModeIcons =\n\t\t\ticonThemeDocument.showLanguageModeIcons === true ||\n\t\t\t(hasSpecificFileIcons &&\n\t\t\t\ticonThemeDocument.showLanguageModeIcons !== false);\n\n\t\tconst cssRules: string[] = [];\n\n\t\tconst fonts = iconThemeDocument.fonts;\n\t\tconst fontSizes = new Map<string, string>();\n\t\tif (Array.isArray(fonts)) {\n\t\t\tconst defaultFontSize = fonts[0].size || \"150%\";\n\t\t\tfonts.forEach((font) => {\n\t\t\t\tconst src = font.src\n\t\t\t\t\t.map(\n\t\t\t\t\t\t(l) =>\n\t\t\t\t\t\t\t`${asCSSUrl(resolvePath(l.path))} format('${l.format}')`,\n\t\t\t\t\t)\n\t\t\t\t\t.join(\", \");\n\t\t\t\tcssRules.push(\n\t\t\t\t\t`@font-face { src: ${src}; font-family: '${font.id}'; font-weight: ${font.weight}; font-style: ${font.style}; font-display: block; }`,\n\t\t\t\t);\n\t\t\t\tif (font.size !== undefined && font.size !== defaultFontSize) {\n\t\t\t\t\tfontSizes.set(font.id, font.size);\n\t\t\t\t}\n\t\t\t});\n\t\t\tcssRules.push(\n\t\t\t\t`.show-file-icons .file-icon::before, .show-file-icons .folder-icon::before, .show-file-icons .rootfolder-icon::before { font-family: '${fonts[0].id}'; font-size: ${defaultFontSize}; }`,\n\t\t\t);\n\t\t}\n\n\t\tfor (const defId in selectorByDefinitionId) {\n\t\t\tconst selectors = selectorByDefinitionId[defId];\n\t\t\tconst definition = iconThemeDocument.iconDefinitions[defId];\n\t\t\tif (definition) {\n\t\t\t\tif (definition.iconPath) {\n\t\t\t\t\tcssRules.push(\n\t\t\t\t\t\t`${selectors.join(\", \")} { content: ' '; background-image: ${asCSSUrl(resolvePath(definition.iconPath))}; }`,\n\t\t\t\t\t);\n\t\t\t\t} else if (definition.fontCharacter || definition.fontColor) {\n\t\t\t\t\tconst body = [];\n\t\t\t\t\tif (definition.fontColor) {\n\t\t\t\t\t\tbody.push(`color: ${definition.fontColor};`);\n\t\t\t\t\t}\n\t\t\t\t\tif (definition.fontCharacter) {\n\t\t\t\t\t\tbody.push(`content: '${definition.fontCharacter}';`);\n\t\t\t\t\t}\n\t\t\t\t\tconst fontSize =\n\t\t\t\t\t\tdefinition.fontSize ??\n\t\t\t\t\t\t(definition.fontId\n\t\t\t\t\t\t\t? fontSizes.get(definition.fontId)\n\t\t\t\t\t\t\t: undefined);\n\t\t\t\t\tif (fontSize) {\n\t\t\t\t\t\tbody.push(`font-size: ${fontSize};`);\n\t\t\t\t\t}\n\t\t\t\t\tif (definition.fontId) {\n\t\t\t\t\t\tbody.push(`font-family: ${definition.fontId};`);\n\t\t\t\t\t}\n\t\t\t\t\tif (showLanguageModeIcons) {\n\t\t\t\t\t\tbody.push(`background-image: unset;`); // potentially set by the language default\n\t\t\t\t\t}\n\t\t\t\t\tcssRules.push(\n\t\t\t\t\t\t`${selectors.join(\", \")} { ${body.join(\" \")} }`,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (showLanguageModeIcons) {\n\t\t\tfor (const languageId of this.languageService.getRegisteredLanguageIds()) {\n\t\t\t\tif (!coveredLanguages[languageId]) {\n\t\t\t\t\tconst icon = this.languageService.getIcon(languageId);\n\t\t\t\t\tif (icon) {\n\t\t\t\t\t\tconst selector = `.show-file-icons .${escapeCSS(languageId)}-lang-file-icon.file-icon::before`;\n\t\t\t\t\t\tcssRules.push(\n\t\t\t\t\t\t\t`${selector} { content: ' '; background-image: ${asCSSUrl(icon.dark)}; }`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tcssRules.push(\n\t\t\t\t\t\t\t`.vs ${selector} { content: ' '; background-image: ${asCSSUrl(icon.light)}; }`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tresult.content = cssRules.join(\"\\n\");\n\t\treturn result;\n\t}\n}\n\nfunction handleParentFolder(key: string, selectors: string[]): string {\n\tconst lastIndexOfSlash = key.lastIndexOf(\"/\");\n\tif (lastIndexOfSlash >= 0) {\n\t\tconst parentFolder = key.substring(0, lastIndexOfSlash);\n\t\tselectors.push(`.${escapeCSS(parentFolder)}-name-dir-icon`);\n\t\treturn key.substring(lastIndexOfSlash + 1);\n\t}\n\treturn key;\n}\n\nfunction escapeCSS(str: string) {\n\tstr = str.replace(/[\\s]/g, \"/\"); // HTML class names can not contain certain whitespace characters (https://dom.spec.whatwg.org/#interface-domtokenlist), use / instead, which doesn't exist in file names.\n\treturn mainWindow.CSS.escape(str);\n}\n"],
  "mappings": "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",
  "names": []
}
