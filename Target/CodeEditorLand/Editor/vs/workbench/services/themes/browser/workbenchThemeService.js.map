{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/themes/browser/workbenchThemeService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../../../nls.js';\nimport * as types from '../../../../base/common/types.js';\nimport { IExtensionService } from '../../extensions/common/extensions.js';\nimport { IWorkbenchThemeService, IWorkbenchColorTheme, IWorkbenchFileIconTheme, ExtensionData, VS_LIGHT_THEME, VS_DARK_THEME, VS_HC_THEME, VS_HC_LIGHT_THEME, ThemeSettings, IWorkbenchProductIconTheme, ThemeSettingTarget, ThemeSettingDefaults, COLOR_THEME_DARK_INITIAL_COLORS, COLOR_THEME_LIGHT_INITIAL_COLORS } from '../common/workbenchThemeService.js';\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport * as errors from '../../../../base/common/errors.js';\nimport { IConfigurationService, ConfigurationTarget } from '../../../../platform/configuration/common/configuration.js';\nimport { ColorThemeData } from '../common/colorThemeData.js';\nimport { IColorTheme, Extensions as ThemingExtensions, IThemingRegistry } from '../../../../platform/theme/common/themeService.js';\nimport { Event, Emitter } from '../../../../base/common/event.js';\nimport { registerFileIconThemeSchemas } from '../common/fileIconThemeSchema.js';\nimport { IDisposable, dispose, Disposable } from '../../../../base/common/lifecycle.js';\nimport { FileIconThemeData, FileIconThemeLoader } from './fileIconThemeData.js';\nimport { createStyleSheet } from '../../../../base/browser/dom.js';\nimport { IBrowserWorkbenchEnvironmentService } from '../../environment/browser/environmentService.js';\nimport { IFileService, FileChangeType } from '../../../../platform/files/common/files.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport * as resources from '../../../../base/common/resources.js';\nimport { registerColorThemeSchemas } from '../common/colorThemeSchema.js';\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { getRemoteAuthority } from '../../../../platform/remote/common/remoteHosts.js';\nimport { IWorkbenchLayoutService } from '../../layout/browser/layoutService.js';\nimport { IExtensionResourceLoaderService } from '../../../../platform/extensionResourceLoader/common/extensionResourceLoader.js';\nimport { ThemeRegistry, registerColorThemeExtensionPoint, registerFileIconThemeExtensionPoint, registerProductIconThemeExtensionPoint } from '../common/themeExtensionPoints.js';\nimport { updateColorThemeConfigurationSchemas, updateFileIconThemeConfigurationSchemas, ThemeConfiguration, updateProductIconThemeConfigurationSchemas } from '../common/themeConfiguration.js';\nimport { ProductIconThemeData, DEFAULT_PRODUCT_ICON_THEME_ID } from './productIconThemeData.js';\nimport { registerProductIconThemeSchemas } from '../common/productIconThemeSchema.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { isWeb } from '../../../../base/common/platform.js';\nimport { ColorScheme } from '../../../../platform/theme/common/theme.js';\nimport { IHostColorSchemeService } from '../common/hostColorSchemeService.js';\nimport { RunOnceScheduler, Sequencer } from '../../../../base/common/async.js';\nimport { IUserDataInitializationService } from '../../userData/browser/userDataInit.js';\nimport { getIconsStyleSheet } from '../../../../platform/theme/browser/iconsStyleSheet.js';\nimport { asCssVariableName, getColorRegistry } from '../../../../platform/theme/common/colorRegistry.js';\nimport { ILanguageService } from '../../../../editor/common/languages/language.js';\nimport { mainWindow } from '../../../../base/browser/window.js';\n\n// implementation\n\nconst defaultThemeExtensionId = 'vscode-theme-defaults';\n\nconst DEFAULT_FILE_ICON_THEME_ID = 'vscode.vscode-theme-seti-vs-seti';\nconst fileIconsEnabledClass = 'file-icons-enabled';\n\nconst colorThemeRulesClassName = 'contributedColorTheme';\nconst fileIconThemeRulesClassName = 'contributedFileIconTheme';\nconst productIconThemeRulesClassName = 'contributedProductIconTheme';\n\nconst themingRegistry = Registry.as<IThemingRegistry>(ThemingExtensions.ThemingContribution);\n\nfunction validateThemeId(theme: string): string {\n\t// migrations\n\tswitch (theme) {\n\t\tcase VS_LIGHT_THEME: return `vs ${defaultThemeExtensionId}-themes-light_vs-json`;\n\t\tcase VS_DARK_THEME: return `vs-dark ${defaultThemeExtensionId}-themes-dark_vs-json`;\n\t\tcase VS_HC_THEME: return `hc-black ${defaultThemeExtensionId}-themes-hc_black-json`;\n\t\tcase VS_HC_LIGHT_THEME: return `hc-light ${defaultThemeExtensionId}-themes-hc_light-json`;\n\t}\n\treturn theme;\n}\n\nconst colorThemesExtPoint = registerColorThemeExtensionPoint();\nconst fileIconThemesExtPoint = registerFileIconThemeExtensionPoint();\nconst productIconThemesExtPoint = registerProductIconThemeExtensionPoint();\n\nexport class WorkbenchThemeService extends Disposable implements IWorkbenchThemeService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly container: HTMLElement;\n\tprivate settings: ThemeConfiguration;\n\n\tprivate readonly colorThemeRegistry: ThemeRegistry<ColorThemeData>;\n\tprivate currentColorTheme: ColorThemeData;\n\tprivate readonly onColorThemeChange: Emitter<IWorkbenchColorTheme>;\n\tprivate readonly colorThemeWatcher: ThemeFileWatcher;\n\tprivate colorThemingParticipantChangeListener: IDisposable | undefined;\n\tprivate readonly colorThemeSequencer: Sequencer;\n\n\tprivate readonly fileIconThemeRegistry: ThemeRegistry<FileIconThemeData>;\n\tprivate currentFileIconTheme: FileIconThemeData;\n\tprivate readonly onFileIconThemeChange: Emitter<IWorkbenchFileIconTheme>;\n\tprivate readonly fileIconThemeLoader: FileIconThemeLoader;\n\tprivate readonly fileIconThemeWatcher: ThemeFileWatcher;\n\tprivate readonly fileIconThemeSequencer: Sequencer;\n\n\tprivate readonly productIconThemeRegistry: ThemeRegistry<ProductIconThemeData>;\n\tprivate currentProductIconTheme: ProductIconThemeData;\n\tprivate readonly onProductIconThemeChange: Emitter<IWorkbenchProductIconTheme>;\n\tprivate readonly productIconThemeWatcher: ThemeFileWatcher;\n\tprivate readonly productIconThemeSequencer: Sequencer;\n\n\tprivate hasDefaultUpdated: boolean = false;\n\n\tconstructor(\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IBrowserWorkbenchEnvironmentService private readonly environmentService: IBrowserWorkbenchEnvironmentService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IExtensionResourceLoaderService private readonly extensionResourceLoaderService: IExtensionResourceLoaderService,\n\t\t@IWorkbenchLayoutService layoutService: IWorkbenchLayoutService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IHostColorSchemeService private readonly hostColorService: IHostColorSchemeService,\n\t\t@IUserDataInitializationService private readonly userDataInitializationService: IUserDataInitializationService,\n\t\t@ILanguageService private readonly languageService: ILanguageService\n\t) {\n\t\tsuper();\n\t\tthis.container = layoutService.mainContainer;\n\t\tthis.settings = new ThemeConfiguration(configurationService, hostColorService);\n\n\t\tthis.colorThemeRegistry = this._register(new ThemeRegistry(colorThemesExtPoint, ColorThemeData.fromExtensionTheme));\n\t\tthis.colorThemeWatcher = this._register(new ThemeFileWatcher(fileService, environmentService, this.reloadCurrentColorTheme.bind(this)));\n\t\tthis.onColorThemeChange = new Emitter<IWorkbenchColorTheme>({ leakWarningThreshold: 400 });\n\t\tthis.currentColorTheme = ColorThemeData.createUnloadedTheme('');\n\t\tthis.colorThemeSequencer = new Sequencer();\n\n\t\tthis.fileIconThemeWatcher = this._register(new ThemeFileWatcher(fileService, environmentService, this.reloadCurrentFileIconTheme.bind(this)));\n\t\tthis.fileIconThemeRegistry = this._register(new ThemeRegistry(fileIconThemesExtPoint, FileIconThemeData.fromExtensionTheme, true, FileIconThemeData.noIconTheme));\n\t\tthis.fileIconThemeLoader = new FileIconThemeLoader(extensionResourceLoaderService, languageService);\n\t\tthis.onFileIconThemeChange = new Emitter<IWorkbenchFileIconTheme>({ leakWarningThreshold: 400 });\n\t\tthis.currentFileIconTheme = FileIconThemeData.createUnloadedTheme('');\n\t\tthis.fileIconThemeSequencer = new Sequencer();\n\n\t\tthis.productIconThemeWatcher = this._register(new ThemeFileWatcher(fileService, environmentService, this.reloadCurrentProductIconTheme.bind(this)));\n\t\tthis.productIconThemeRegistry = this._register(new ThemeRegistry(productIconThemesExtPoint, ProductIconThemeData.fromExtensionTheme, true, ProductIconThemeData.defaultTheme));\n\t\tthis.onProductIconThemeChange = new Emitter<IWorkbenchProductIconTheme>();\n\t\tthis.currentProductIconTheme = ProductIconThemeData.createUnloadedTheme('');\n\t\tthis.productIconThemeSequencer = new Sequencer();\n\n\t\tthis._register(this.onDidColorThemeChange(theme => getColorRegistry().notifyThemeUpdate(theme)));\n\n\t\t// In order to avoid paint flashing for tokens, because\n\t\t// themes are loaded asynchronously, we need to initialize\n\t\t// a color theme document with good defaults until the theme is loaded\n\t\tlet themeData: ColorThemeData | undefined = ColorThemeData.fromStorageData(this.storageService);\n\t\tconst colorThemeSetting = this.settings.colorTheme;\n\t\tif (themeData && colorThemeSetting !== themeData.settingsId && this.settings.isDefaultColorTheme()) {\n\t\t\tthis.hasDefaultUpdated = themeData.settingsId === ThemeSettingDefaults.COLOR_THEME_DARK_OLD || themeData.settingsId === ThemeSettingDefaults.COLOR_THEME_LIGHT_OLD;\n\n\t\t\t// the web has different defaults than the desktop, therefore do not restore when the setting is the default theme and the storage doesn't match that.\n\t\t\tthemeData = undefined;\n\t\t}\n\n\t\tconst defaultColorMap = colorThemeSetting === ThemeSettingDefaults.COLOR_THEME_LIGHT ? COLOR_THEME_LIGHT_INITIAL_COLORS : colorThemeSetting === ThemeSettingDefaults.COLOR_THEME_DARK ? COLOR_THEME_DARK_INITIAL_COLORS : undefined;\n\n\t\tif (!themeData) {\n\t\t\tconst initialColorTheme = environmentService.options?.initialColorTheme;\n\t\t\tif (initialColorTheme) {\n\t\t\t\tthemeData = ColorThemeData.createUnloadedThemeForThemeType(initialColorTheme.themeType, initialColorTheme.colors ?? defaultColorMap);\n\t\t\t}\n\t\t}\n\t\tif (!themeData) {\n\t\t\tthemeData = ColorThemeData.createUnloadedThemeForThemeType(isWeb ? ColorScheme.LIGHT : ColorScheme.DARK, defaultColorMap);\n\t\t}\n\t\tthemeData.setCustomizations(this.settings);\n\t\tthis.applyTheme(themeData, undefined, true);\n\n\t\tconst fileIconData = FileIconThemeData.fromStorageData(this.storageService);\n\t\tif (fileIconData) {\n\t\t\tthis.applyAndSetFileIconTheme(fileIconData, true);\n\t\t}\n\n\t\tconst productIconData = ProductIconThemeData.fromStorageData(this.storageService);\n\t\tif (productIconData) {\n\t\t\tthis.applyAndSetProductIconTheme(productIconData, true);\n\t\t}\n\n\t\textensionService.whenInstalledExtensionsRegistered().then(_ => {\n\t\t\tthis.installConfigurationListener();\n\t\t\tthis.installPreferredSchemeListener();\n\t\t\tthis.installRegistryListeners();\n\t\t\tthis.initialize().catch(errors.onUnexpectedError);\n\t\t});\n\n\t\tconst codiconStyleSheet = createStyleSheet();\n\t\tcodiconStyleSheet.id = 'codiconStyles';\n\n\t\tconst iconsStyleSheet = this._register(getIconsStyleSheet(this));\n\t\tfunction updateAll() {\n\t\t\tcodiconStyleSheet.textContent = iconsStyleSheet.getCSS();\n\t\t}\n\n\t\tconst delayer = this._register(new RunOnceScheduler(updateAll, 0));\n\t\tthis._register(iconsStyleSheet.onDidChange(() => delayer.schedule()));\n\t\tdelayer.schedule();\n\t}\n\n\tprivate initialize(): Promise<[IWorkbenchColorTheme | null, IWorkbenchFileIconTheme | null, IWorkbenchProductIconTheme | null]> {\n\t\tconst extDevLocs = this.environmentService.extensionDevelopmentLocationURI;\n\t\tconst extDevLoc = extDevLocs && extDevLocs.length === 1 ? extDevLocs[0] : undefined; // in dev mode, switch to a theme provided by the extension under dev.\n\n\t\tconst initializeColorTheme = async () => {\n\t\t\tconst devThemes = this.colorThemeRegistry.findThemeByExtensionLocation(extDevLoc);\n\t\t\tif (devThemes.length) {\n\t\t\t\tconst matchedColorTheme = devThemes.find(theme => theme.type === this.currentColorTheme.type);\n\t\t\t\treturn this.setColorTheme(matchedColorTheme ? matchedColorTheme.id : devThemes[0].id, undefined);\n\t\t\t}\n\t\t\tlet theme = this.colorThemeRegistry.findThemeBySettingsId(this.settings.colorTheme, undefined);\n\t\t\tif (!theme) {\n\t\t\t\t// If the current theme is not available, first make sure setting sync is complete\n\t\t\t\tawait this.userDataInitializationService.whenInitializationFinished();\n\t\t\t\t// try to get the theme again, now with a fallback to the default themes\n\t\t\t\tconst fallbackTheme = this.currentColorTheme.type === ColorScheme.LIGHT ? ThemeSettingDefaults.COLOR_THEME_LIGHT : ThemeSettingDefaults.COLOR_THEME_DARK;\n\t\t\t\ttheme = this.colorThemeRegistry.findThemeBySettingsId(this.settings.colorTheme, fallbackTheme);\n\t\t\t}\n\t\t\treturn this.setColorTheme(theme && theme.id, undefined);\n\t\t};\n\n\t\tconst initializeFileIconTheme = async () => {\n\t\t\tconst devThemes = this.fileIconThemeRegistry.findThemeByExtensionLocation(extDevLoc);\n\t\t\tif (devThemes.length) {\n\t\t\t\treturn this.setFileIconTheme(devThemes[0].id, ConfigurationTarget.MEMORY);\n\t\t\t}\n\t\t\tlet theme = this.fileIconThemeRegistry.findThemeBySettingsId(this.settings.fileIconTheme);\n\t\t\tif (!theme) {\n\t\t\t\t// If the current theme is not available, first make sure setting sync is complete\n\t\t\t\tawait this.userDataInitializationService.whenInitializationFinished();\n\t\t\t\ttheme = this.fileIconThemeRegistry.findThemeBySettingsId(this.settings.fileIconTheme);\n\t\t\t}\n\t\t\treturn this.setFileIconTheme(theme ? theme.id : DEFAULT_FILE_ICON_THEME_ID, undefined);\n\t\t};\n\n\t\tconst initializeProductIconTheme = async () => {\n\t\t\tconst devThemes = this.productIconThemeRegistry.findThemeByExtensionLocation(extDevLoc);\n\t\t\tif (devThemes.length) {\n\t\t\t\treturn this.setProductIconTheme(devThemes[0].id, ConfigurationTarget.MEMORY);\n\t\t\t}\n\t\t\tlet theme = this.productIconThemeRegistry.findThemeBySettingsId(this.settings.productIconTheme);\n\t\t\tif (!theme) {\n\t\t\t\t// If the current theme is not available, first make sure setting sync is complete\n\t\t\t\tawait this.userDataInitializationService.whenInitializationFinished();\n\t\t\t\ttheme = this.productIconThemeRegistry.findThemeBySettingsId(this.settings.productIconTheme);\n\t\t\t}\n\t\t\treturn this.setProductIconTheme(theme ? theme.id : DEFAULT_PRODUCT_ICON_THEME_ID, undefined);\n\t\t};\n\n\n\t\treturn Promise.all([initializeColorTheme(), initializeFileIconTheme(), initializeProductIconTheme()]);\n\t}\n\n\tprivate installConfigurationListener() {\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(ThemeSettings.COLOR_THEME)\n\t\t\t\t|| e.affectsConfiguration(ThemeSettings.PREFERRED_DARK_THEME)\n\t\t\t\t|| e.affectsConfiguration(ThemeSettings.PREFERRED_LIGHT_THEME)\n\t\t\t\t|| e.affectsConfiguration(ThemeSettings.PREFERRED_HC_DARK_THEME)\n\t\t\t\t|| e.affectsConfiguration(ThemeSettings.PREFERRED_HC_LIGHT_THEME)\n\t\t\t\t|| e.affectsConfiguration(ThemeSettings.DETECT_COLOR_SCHEME)\n\t\t\t\t|| e.affectsConfiguration(ThemeSettings.DETECT_HC)\n\t\t\t\t|| e.affectsConfiguration(ThemeSettings.SYSTEM_COLOR_THEME)\n\t\t\t) {\n\t\t\t\tthis.restoreColorTheme();\n\t\t\t}\n\t\t\tif (e.affectsConfiguration(ThemeSettings.FILE_ICON_THEME)) {\n\t\t\t\tthis.restoreFileIconTheme();\n\t\t\t}\n\t\t\tif (e.affectsConfiguration(ThemeSettings.PRODUCT_ICON_THEME)) {\n\t\t\t\tthis.restoreProductIconTheme();\n\t\t\t}\n\t\t\tif (this.currentColorTheme) {\n\t\t\t\tlet hasColorChanges = false;\n\t\t\t\tif (e.affectsConfiguration(ThemeSettings.COLOR_CUSTOMIZATIONS)) {\n\t\t\t\t\tthis.currentColorTheme.setCustomColors(this.settings.colorCustomizations);\n\t\t\t\t\thasColorChanges = true;\n\t\t\t\t}\n\t\t\t\tif (e.affectsConfiguration(ThemeSettings.TOKEN_COLOR_CUSTOMIZATIONS)) {\n\t\t\t\t\tthis.currentColorTheme.setCustomTokenColors(this.settings.tokenColorCustomizations);\n\t\t\t\t\thasColorChanges = true;\n\t\t\t\t}\n\t\t\t\tif (e.affectsConfiguration(ThemeSettings.SEMANTIC_TOKEN_COLOR_CUSTOMIZATIONS)) {\n\t\t\t\t\tthis.currentColorTheme.setCustomSemanticTokenColors(this.settings.semanticTokenColorCustomizations);\n\t\t\t\t\thasColorChanges = true;\n\t\t\t\t}\n\t\t\t\tif (hasColorChanges) {\n\t\t\t\t\tthis.updateDynamicCSSRules(this.currentColorTheme);\n\t\t\t\t\tthis.onColorThemeChange.fire(this.currentColorTheme);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate installRegistryListeners(): Promise<any> {\n\n\t\tlet prevColorId: string | undefined = undefined;\n\n\t\t// update settings schema setting for theme specific settings\n\t\tthis._register(this.colorThemeRegistry.onDidChange(async event => {\n\t\t\tupdateColorThemeConfigurationSchemas(event.themes);\n\t\t\tif (await this.restoreColorTheme()) { // checks if theme from settings exists and is set\n\t\t\t\t// restore theme\n\t\t\t\tif (this.currentColorTheme.settingsId === ThemeSettingDefaults.COLOR_THEME_DARK && !types.isUndefined(prevColorId) && await this.colorThemeRegistry.findThemeById(prevColorId)) {\n\t\t\t\t\tawait this.setColorTheme(prevColorId, 'auto');\n\t\t\t\t\tprevColorId = undefined;\n\t\t\t\t} else if (event.added.some(t => t.settingsId === this.currentColorTheme.settingsId)) {\n\t\t\t\t\tawait this.reloadCurrentColorTheme();\n\t\t\t\t}\n\t\t\t} else if (event.removed.some(t => t.settingsId === this.currentColorTheme.settingsId)) {\n\t\t\t\t// current theme is no longer available\n\t\t\t\tprevColorId = this.currentColorTheme.id;\n\t\t\t\tconst defaultTheme = this.colorThemeRegistry.findThemeBySettingsId(ThemeSettingDefaults.COLOR_THEME_DARK);\n\t\t\t\tawait this.setColorTheme(defaultTheme, 'auto');\n\t\t\t}\n\t\t}));\n\n\t\tlet prevFileIconId: string | undefined = undefined;\n\t\tthis._register(this._register(this.fileIconThemeRegistry.onDidChange(async event => {\n\t\t\tupdateFileIconThemeConfigurationSchemas(event.themes);\n\t\t\tif (await this.restoreFileIconTheme()) { // checks if theme from settings exists and is set\n\t\t\t\t// restore theme\n\t\t\t\tif (this.currentFileIconTheme.id === DEFAULT_FILE_ICON_THEME_ID && !types.isUndefined(prevFileIconId) && this.fileIconThemeRegistry.findThemeById(prevFileIconId)) {\n\t\t\t\t\tawait this.setFileIconTheme(prevFileIconId, 'auto');\n\t\t\t\t\tprevFileIconId = undefined;\n\t\t\t\t} else if (event.added.some(t => t.settingsId === this.currentFileIconTheme.settingsId)) {\n\t\t\t\t\tawait this.reloadCurrentFileIconTheme();\n\t\t\t\t}\n\t\t\t} else if (event.removed.some(t => t.settingsId === this.currentFileIconTheme.settingsId)) {\n\t\t\t\t// current theme is no longer available\n\t\t\t\tprevFileIconId = this.currentFileIconTheme.id;\n\t\t\t\tawait this.setFileIconTheme(DEFAULT_FILE_ICON_THEME_ID, 'auto');\n\t\t\t}\n\n\t\t})));\n\n\t\tlet prevProductIconId: string | undefined = undefined;\n\t\tthis._register(this.productIconThemeRegistry.onDidChange(async event => {\n\t\t\tupdateProductIconThemeConfigurationSchemas(event.themes);\n\t\t\tif (await this.restoreProductIconTheme()) { // checks if theme from settings exists and is set\n\t\t\t\t// restore theme\n\t\t\t\tif (this.currentProductIconTheme.id === DEFAULT_PRODUCT_ICON_THEME_ID && !types.isUndefined(prevProductIconId) && this.productIconThemeRegistry.findThemeById(prevProductIconId)) {\n\t\t\t\t\tawait this.setProductIconTheme(prevProductIconId, 'auto');\n\t\t\t\t\tprevProductIconId = undefined;\n\t\t\t\t} else if (event.added.some(t => t.settingsId === this.currentProductIconTheme.settingsId)) {\n\t\t\t\t\tawait this.reloadCurrentProductIconTheme();\n\t\t\t\t}\n\t\t\t} else if (event.removed.some(t => t.settingsId === this.currentProductIconTheme.settingsId)) {\n\t\t\t\t// current theme is no longer available\n\t\t\t\tprevProductIconId = this.currentProductIconTheme.id;\n\t\t\t\tawait this.setProductIconTheme(DEFAULT_PRODUCT_ICON_THEME_ID, 'auto');\n\t\t\t}\n\t\t}));\n\t\tthis._register(this.languageService.onDidChange(() => this.reloadCurrentFileIconTheme()));\n\n\t\treturn Promise.all([this.getColorThemes(), this.getFileIconThemes(), this.getProductIconThemes()]).then(([ct, fit, pit]) => {\n\t\t\tupdateColorThemeConfigurationSchemas(ct);\n\t\t\tupdateFileIconThemeConfigurationSchemas(fit);\n\t\t\tupdateProductIconThemeConfigurationSchemas(pit);\n\t\t});\n\t}\n\n\n\t// preferred scheme handling\n\n\tprivate installPreferredSchemeListener() {\n\t\tthis._register(this.hostColorService.onDidChangeColorScheme(() => {\n\t\t\tif (this.settings.isDetectingColorScheme()) {\n\t\t\t\tthis.restoreColorTheme();\n\t\t\t}\n\t\t}));\n\t}\n\n\tpublic hasUpdatedDefaultThemes(): boolean {\n\t\treturn this.hasDefaultUpdated;\n\t}\n\n\tpublic getColorTheme(): IWorkbenchColorTheme {\n\t\treturn this.currentColorTheme;\n\t}\n\n\tpublic async getColorThemes(): Promise<IWorkbenchColorTheme[]> {\n\t\treturn this.colorThemeRegistry.getThemes();\n\t}\n\n\tpublic getPreferredColorScheme(): ColorScheme | undefined {\n\t\treturn this.settings.getPreferredColorScheme();\n\t}\n\n\tpublic async getMarketplaceColorThemes(publisher: string, name: string, version: string): Promise<IWorkbenchColorTheme[]> {\n\t\tconst extensionLocation = this.extensionResourceLoaderService.getExtensionGalleryResourceURL({ publisher, name, version }, 'extension');\n\t\tif (extensionLocation) {\n\t\t\ttry {\n\t\t\t\tconst manifestContent = await this.extensionResourceLoaderService.readExtensionResource(resources.joinPath(extensionLocation, 'package.json'));\n\t\t\t\treturn this.colorThemeRegistry.getMarketplaceThemes(JSON.parse(manifestContent), extensionLocation, ExtensionData.fromName(publisher, name));\n\t\t\t} catch (e) {\n\t\t\t\tthis.logService.error('Problem loading themes from marketplace', e);\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n\n\tpublic get onDidColorThemeChange(): Event<IWorkbenchColorTheme> {\n\t\treturn this.onColorThemeChange.event;\n\t}\n\n\tpublic setColorTheme(themeIdOrTheme: string | undefined | IWorkbenchColorTheme, settingsTarget: ThemeSettingTarget): Promise<IWorkbenchColorTheme | null> {\n\t\treturn this.colorThemeSequencer.queue(async () => {\n\t\t\treturn this.internalSetColorTheme(themeIdOrTheme, settingsTarget);\n\t\t});\n\t}\n\n\tprivate async internalSetColorTheme(themeIdOrTheme: string | undefined | IWorkbenchColorTheme, settingsTarget: ThemeSettingTarget): Promise<IWorkbenchColorTheme | null> {\n\t\tif (!themeIdOrTheme) {\n\t\t\treturn null;\n\t\t}\n\t\tconst themeId = types.isString(themeIdOrTheme) ? validateThemeId(themeIdOrTheme) : themeIdOrTheme.id;\n\t\tif (this.currentColorTheme.isLoaded && themeId === this.currentColorTheme.id) {\n\t\t\tif (settingsTarget !== 'preview') {\n\t\t\t\tthis.currentColorTheme.toStorage(this.storageService);\n\t\t\t}\n\t\t\treturn this.settings.setColorTheme(this.currentColorTheme, settingsTarget);\n\t\t}\n\n\t\tlet themeData = this.colorThemeRegistry.findThemeById(themeId);\n\t\tif (!themeData) {\n\t\t\tif (themeIdOrTheme instanceof ColorThemeData) {\n\t\t\t\tthemeData = themeIdOrTheme;\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\ttry {\n\t\t\tawait themeData.ensureLoaded(this.extensionResourceLoaderService);\n\t\t\tthemeData.setCustomizations(this.settings);\n\t\t\treturn this.applyTheme(themeData, settingsTarget);\n\t\t} catch (error) {\n\t\t\tthrow new Error(nls.localize('error.cannotloadtheme', \"Unable to load {0}: {1}\", themeData.location?.toString(), error.message));\n\t\t}\n\n\t}\n\n\tprivate reloadCurrentColorTheme() {\n\t\treturn this.colorThemeSequencer.queue(async () => {\n\t\t\ttry {\n\t\t\t\tconst theme = this.colorThemeRegistry.findThemeBySettingsId(this.currentColorTheme.settingsId) || this.currentColorTheme;\n\t\t\t\tawait theme.reload(this.extensionResourceLoaderService);\n\t\t\t\ttheme.setCustomizations(this.settings);\n\t\t\t\tawait this.applyTheme(theme, undefined, false);\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.info('Unable to reload {0}: {1}', this.currentColorTheme.location?.toString());\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic async restoreColorTheme(): Promise<boolean> {\n\t\treturn this.colorThemeSequencer.queue(async () => {\n\t\t\tconst settingId = this.settings.colorTheme;\n\t\t\tconst theme = this.colorThemeRegistry.findThemeBySettingsId(settingId);\n\t\t\tif (theme) {\n\t\t\t\tif (settingId !== this.currentColorTheme.settingsId) {\n\t\t\t\t\tawait this.internalSetColorTheme(theme.id, undefined);\n\t\t\t\t} else if (theme !== this.currentColorTheme) {\n\t\t\t\t\tawait theme.ensureLoaded(this.extensionResourceLoaderService);\n\t\t\t\t\ttheme.setCustomizations(this.settings);\n\t\t\t\t\tawait this.applyTheme(theme, undefined, true);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tprivate updateDynamicCSSRules(themeData: IColorTheme) {\n\t\tconst cssRules = new Set<string>();\n\t\tconst ruleCollector = {\n\t\t\taddRule: (rule: string) => {\n\t\t\t\tif (!cssRules.has(rule)) {\n\t\t\t\t\tcssRules.add(rule);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\truleCollector.addRule(`.monaco-workbench { forced-color-adjust: none; }`);\n\t\tthemingRegistry.getThemingParticipants().forEach(p => p(themeData, ruleCollector, this.environmentService));\n\n\t\tconst colorVariables: string[] = [];\n\t\tfor (const item of getColorRegistry().getColors()) {\n\t\t\tconst color = themeData.getColor(item.id, true);\n\t\t\tif (color) {\n\t\t\t\tcolorVariables.push(`${asCssVariableName(item.id)}: ${color.toString()};`);\n\t\t\t}\n\t\t}\n\t\truleCollector.addRule(`.monaco-workbench { ${colorVariables.join('\\n')} }`);\n\n\t\t_applyRules([...cssRules].join('\\n'), colorThemeRulesClassName);\n\t}\n\n\tprivate applyTheme(newTheme: ColorThemeData, settingsTarget: ThemeSettingTarget, silent = false): Promise<IWorkbenchColorTheme | null> {\n\t\tthis.updateDynamicCSSRules(newTheme);\n\n\t\tif (this.currentColorTheme.id) {\n\t\t\tthis.container.classList.remove(...this.currentColorTheme.classNames);\n\t\t} else {\n\t\t\tthis.container.classList.remove(VS_DARK_THEME, VS_LIGHT_THEME, VS_HC_THEME, VS_HC_LIGHT_THEME);\n\t\t}\n\t\tthis.container.classList.add(...newTheme.classNames);\n\n\t\tthis.currentColorTheme.clearCaches();\n\t\tthis.currentColorTheme = newTheme;\n\t\tif (!this.colorThemingParticipantChangeListener) {\n\t\t\tthis.colorThemingParticipantChangeListener = themingRegistry.onThemingParticipantAdded(_ => this.updateDynamicCSSRules(this.currentColorTheme));\n\t\t}\n\n\t\tthis.colorThemeWatcher.update(newTheme);\n\n\t\tthis.sendTelemetry(newTheme.id, newTheme.extensionData, 'color');\n\n\t\tif (silent) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tthis.onColorThemeChange.fire(this.currentColorTheme);\n\n\t\t// remember theme data for a quick restore\n\t\tif (newTheme.isLoaded && settingsTarget !== 'preview') {\n\t\t\tnewTheme.toStorage(this.storageService);\n\t\t}\n\n\t\treturn this.settings.setColorTheme(this.currentColorTheme, settingsTarget);\n\t}\n\n\n\tprivate themeExtensionsActivated = new Map<string, boolean>();\n\tprivate sendTelemetry(themeId: string, themeData: ExtensionData | undefined, themeType: string) {\n\t\tif (themeData) {\n\t\t\tconst key = themeType + themeData.extensionId;\n\t\t\tif (!this.themeExtensionsActivated.get(key)) {\n\t\t\t\ttype ActivatePluginClassification = {\n\t\t\t\t\towner: 'aeschli';\n\t\t\t\t\tcomment: 'An event is fired when an color theme extension is first used as it provides the currently shown color theme.';\n\t\t\t\t\tid: { classification: 'PublicNonPersonalData'; purpose: 'FeatureInsight'; comment: 'The extension id.' };\n\t\t\t\t\tname: { classification: 'PublicNonPersonalData'; purpose: 'FeatureInsight'; comment: 'The extension name.' };\n\t\t\t\t\tisBuiltin: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Whether the extension is a built-in extension.' };\n\t\t\t\t\tpublisherDisplayName: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'The extension publisher id.' };\n\t\t\t\t\tthemeId: { classification: 'PublicNonPersonalData'; purpose: 'FeatureInsight'; comment: 'The id of the theme that triggered the first extension use.' };\n\t\t\t\t};\n\t\t\t\ttype ActivatePluginEvent = {\n\t\t\t\t\tid: string;\n\t\t\t\t\tname: string;\n\t\t\t\t\tisBuiltin: boolean;\n\t\t\t\t\tpublisherDisplayName: string;\n\t\t\t\t\tthemeId: string;\n\t\t\t\t};\n\t\t\t\tthis.telemetryService.publicLog2<ActivatePluginEvent, ActivatePluginClassification>('activatePlugin', {\n\t\t\t\t\tid: themeData.extensionId,\n\t\t\t\t\tname: themeData.extensionName,\n\t\t\t\t\tisBuiltin: themeData.extensionIsBuiltin,\n\t\t\t\t\tpublisherDisplayName: themeData.extensionPublisher,\n\t\t\t\t\tthemeId: themeId\n\t\t\t\t});\n\t\t\t\tthis.themeExtensionsActivated.set(key, true);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async getFileIconThemes(): Promise<IWorkbenchFileIconTheme[]> {\n\t\treturn this.fileIconThemeRegistry.getThemes();\n\t}\n\n\tpublic getFileIconTheme() {\n\t\treturn this.currentFileIconTheme;\n\t}\n\n\tpublic get onDidFileIconThemeChange(): Event<IWorkbenchFileIconTheme> {\n\t\treturn this.onFileIconThemeChange.event;\n\t}\n\n\tpublic async setFileIconTheme(iconThemeOrId: string | undefined | IWorkbenchFileIconTheme, settingsTarget: ThemeSettingTarget): Promise<IWorkbenchFileIconTheme> {\n\t\treturn this.fileIconThemeSequencer.queue(async () => {\n\t\t\treturn this.internalSetFileIconTheme(iconThemeOrId, settingsTarget);\n\t\t});\n\t}\n\n\tprivate async internalSetFileIconTheme(iconThemeOrId: string | undefined | IWorkbenchFileIconTheme, settingsTarget: ThemeSettingTarget): Promise<IWorkbenchFileIconTheme> {\n\t\tif (iconThemeOrId === undefined) {\n\t\t\ticonThemeOrId = '';\n\t\t}\n\t\tconst themeId = types.isString(iconThemeOrId) ? iconThemeOrId : iconThemeOrId.id;\n\t\tif (themeId !== this.currentFileIconTheme.id || !this.currentFileIconTheme.isLoaded) {\n\n\t\t\tlet newThemeData = this.fileIconThemeRegistry.findThemeById(themeId);\n\t\t\tif (!newThemeData && iconThemeOrId instanceof FileIconThemeData) {\n\t\t\t\tnewThemeData = iconThemeOrId;\n\t\t\t}\n\t\t\tif (!newThemeData) {\n\t\t\t\tnewThemeData = FileIconThemeData.noIconTheme;\n\t\t\t}\n\t\t\tawait newThemeData.ensureLoaded(this.fileIconThemeLoader);\n\n\t\t\tthis.applyAndSetFileIconTheme(newThemeData); // updates this.currentFileIconTheme\n\t\t}\n\n\t\tconst themeData = this.currentFileIconTheme;\n\n\t\t// remember theme data for a quick restore\n\t\tif (themeData.isLoaded && settingsTarget !== 'preview' && (!themeData.location || !getRemoteAuthority(themeData.location))) {\n\t\t\tthemeData.toStorage(this.storageService);\n\t\t}\n\t\tawait this.settings.setFileIconTheme(this.currentFileIconTheme, settingsTarget);\n\n\t\treturn themeData;\n\t}\n\n\tpublic async getMarketplaceFileIconThemes(publisher: string, name: string, version: string): Promise<IWorkbenchFileIconTheme[]> {\n\t\tconst extensionLocation = this.extensionResourceLoaderService.getExtensionGalleryResourceURL({ publisher, name, version }, 'extension');\n\t\tif (extensionLocation) {\n\t\t\ttry {\n\t\t\t\tconst manifestContent = await this.extensionResourceLoaderService.readExtensionResource(resources.joinPath(extensionLocation, 'package.json'));\n\t\t\t\treturn this.fileIconThemeRegistry.getMarketplaceThemes(JSON.parse(manifestContent), extensionLocation, ExtensionData.fromName(publisher, name));\n\t\t\t} catch (e) {\n\t\t\t\tthis.logService.error('Problem loading themes from marketplace', e);\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate async reloadCurrentFileIconTheme() {\n\t\treturn this.fileIconThemeSequencer.queue(async () => {\n\t\t\tawait this.currentFileIconTheme.reload(this.fileIconThemeLoader);\n\t\t\tthis.applyAndSetFileIconTheme(this.currentFileIconTheme);\n\t\t});\n\t}\n\n\tpublic async restoreFileIconTheme(): Promise<boolean> {\n\t\treturn this.fileIconThemeSequencer.queue(async () => {\n\t\t\tconst settingId = this.settings.fileIconTheme;\n\t\t\tconst theme = this.fileIconThemeRegistry.findThemeBySettingsId(settingId);\n\t\t\tif (theme) {\n\t\t\t\tif (settingId !== this.currentFileIconTheme.settingsId) {\n\t\t\t\t\tawait this.internalSetFileIconTheme(theme.id, undefined);\n\t\t\t\t} else if (theme !== this.currentFileIconTheme) {\n\t\t\t\t\tawait theme.ensureLoaded(this.fileIconThemeLoader);\n\t\t\t\t\tthis.applyAndSetFileIconTheme(theme, true);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tprivate applyAndSetFileIconTheme(iconThemeData: FileIconThemeData, silent = false): void {\n\t\tthis.currentFileIconTheme = iconThemeData;\n\n\t\t_applyRules(iconThemeData.styleSheetContent!, fileIconThemeRulesClassName);\n\n\t\tif (iconThemeData.id) {\n\t\t\tthis.container.classList.add(fileIconsEnabledClass);\n\t\t} else {\n\t\t\tthis.container.classList.remove(fileIconsEnabledClass);\n\t\t}\n\n\t\tthis.fileIconThemeWatcher.update(iconThemeData);\n\n\t\tif (iconThemeData.id) {\n\t\t\tthis.sendTelemetry(iconThemeData.id, iconThemeData.extensionData, 'fileIcon');\n\t\t}\n\n\t\tif (!silent) {\n\t\t\tthis.onFileIconThemeChange.fire(this.currentFileIconTheme);\n\t\t}\n\t}\n\n\tpublic async getProductIconThemes(): Promise<IWorkbenchProductIconTheme[]> {\n\t\treturn this.productIconThemeRegistry.getThemes();\n\t}\n\n\tpublic getProductIconTheme() {\n\t\treturn this.currentProductIconTheme;\n\t}\n\n\tpublic get onDidProductIconThemeChange(): Event<IWorkbenchProductIconTheme> {\n\t\treturn this.onProductIconThemeChange.event;\n\t}\n\n\tpublic async setProductIconTheme(iconThemeOrId: string | undefined | IWorkbenchProductIconTheme, settingsTarget: ThemeSettingTarget): Promise<IWorkbenchProductIconTheme> {\n\t\treturn this.productIconThemeSequencer.queue(async () => {\n\t\t\treturn this.internalSetProductIconTheme(iconThemeOrId, settingsTarget);\n\t\t});\n\t}\n\n\tprivate async internalSetProductIconTheme(iconThemeOrId: string | undefined | IWorkbenchProductIconTheme, settingsTarget: ThemeSettingTarget): Promise<IWorkbenchProductIconTheme> {\n\t\tif (iconThemeOrId === undefined) {\n\t\t\ticonThemeOrId = '';\n\t\t}\n\t\tconst themeId = types.isString(iconThemeOrId) ? iconThemeOrId : iconThemeOrId.id;\n\t\tif (themeId !== this.currentProductIconTheme.id || !this.currentProductIconTheme.isLoaded) {\n\t\t\tlet newThemeData = this.productIconThemeRegistry.findThemeById(themeId);\n\t\t\tif (!newThemeData && iconThemeOrId instanceof ProductIconThemeData) {\n\t\t\t\tnewThemeData = iconThemeOrId;\n\t\t\t}\n\t\t\tif (!newThemeData) {\n\t\t\t\tnewThemeData = ProductIconThemeData.defaultTheme;\n\t\t\t}\n\t\t\tawait newThemeData.ensureLoaded(this.extensionResourceLoaderService, this.logService);\n\n\t\t\tthis.applyAndSetProductIconTheme(newThemeData); // updates this.currentProductIconTheme\n\t\t}\n\t\tconst themeData = this.currentProductIconTheme;\n\n\t\t// remember theme data for a quick restore\n\t\tif (themeData.isLoaded && settingsTarget !== 'preview' && (!themeData.location || !getRemoteAuthority(themeData.location))) {\n\t\t\tthemeData.toStorage(this.storageService);\n\t\t}\n\t\tawait this.settings.setProductIconTheme(this.currentProductIconTheme, settingsTarget);\n\n\t\treturn themeData;\n\n\t}\n\n\tpublic async getMarketplaceProductIconThemes(publisher: string, name: string, version: string): Promise<IWorkbenchProductIconTheme[]> {\n\t\tconst extensionLocation = this.extensionResourceLoaderService.getExtensionGalleryResourceURL({ publisher, name, version }, 'extension');\n\t\tif (extensionLocation) {\n\t\t\ttry {\n\t\t\t\tconst manifestContent = await this.extensionResourceLoaderService.readExtensionResource(resources.joinPath(extensionLocation, 'package.json'));\n\t\t\t\treturn this.productIconThemeRegistry.getMarketplaceThemes(JSON.parse(manifestContent), extensionLocation, ExtensionData.fromName(publisher, name));\n\t\t\t} catch (e) {\n\t\t\t\tthis.logService.error('Problem loading themes from marketplace', e);\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate async reloadCurrentProductIconTheme() {\n\t\treturn this.productIconThemeSequencer.queue(async () => {\n\t\t\tawait this.currentProductIconTheme.reload(this.extensionResourceLoaderService, this.logService);\n\t\t\tthis.applyAndSetProductIconTheme(this.currentProductIconTheme);\n\t\t});\n\t}\n\n\tpublic async restoreProductIconTheme(): Promise<boolean> {\n\t\treturn this.productIconThemeSequencer.queue(async () => {\n\t\t\tconst settingId = this.settings.productIconTheme;\n\t\t\tconst theme = this.productIconThemeRegistry.findThemeBySettingsId(settingId);\n\t\t\tif (theme) {\n\t\t\t\tif (settingId !== this.currentProductIconTheme.settingsId) {\n\t\t\t\t\tawait this.internalSetProductIconTheme(theme.id, undefined);\n\t\t\t\t} else if (theme !== this.currentProductIconTheme) {\n\t\t\t\t\tawait theme.ensureLoaded(this.extensionResourceLoaderService, this.logService);\n\t\t\t\t\tthis.applyAndSetProductIconTheme(theme, true);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tprivate applyAndSetProductIconTheme(iconThemeData: ProductIconThemeData, silent = false): void {\n\n\t\tthis.currentProductIconTheme = iconThemeData;\n\n\t\t_applyRules(iconThemeData.styleSheetContent!, productIconThemeRulesClassName);\n\n\t\tthis.productIconThemeWatcher.update(iconThemeData);\n\n\t\tif (iconThemeData.id) {\n\t\t\tthis.sendTelemetry(iconThemeData.id, iconThemeData.extensionData, 'productIcon');\n\t\t}\n\t\tif (!silent) {\n\t\t\tthis.onProductIconThemeChange.fire(this.currentProductIconTheme);\n\t\t}\n\t}\n}\n\nclass ThemeFileWatcher {\n\n\tprivate watchedLocation: URI | undefined;\n\tprivate watcherDisposable: IDisposable | undefined;\n\tprivate fileChangeListener: IDisposable | undefined;\n\n\tconstructor(private fileService: IFileService, private environmentService: IBrowserWorkbenchEnvironmentService, private onUpdate: () => void) {\n\t}\n\n\tupdate(theme: { location?: URI; watch?: boolean }) {\n\t\tif (!resources.isEqual(theme.location, this.watchedLocation)) {\n\t\t\tthis.dispose();\n\t\t\tif (theme.location && (theme.watch || this.environmentService.isExtensionDevelopment)) {\n\t\t\t\tthis.watchedLocation = theme.location;\n\t\t\t\tthis.watcherDisposable = this.fileService.watch(theme.location);\n\t\t\t\tthis.fileService.onDidFilesChange(e => {\n\t\t\t\t\tif (this.watchedLocation && e.contains(this.watchedLocation, FileChangeType.UPDATED)) {\n\t\t\t\t\t\tthis.onUpdate();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.watcherDisposable = dispose(this.watcherDisposable);\n\t\tthis.fileChangeListener = dispose(this.fileChangeListener);\n\t\tthis.watchedLocation = undefined;\n\t}\n}\n\nfunction _applyRules(styleSheetContent: string, rulesClassName: string) {\n\tconst themeStyles = mainWindow.document.head.getElementsByClassName(rulesClassName);\n\tif (themeStyles.length === 0) {\n\t\tconst elStyle = createStyleSheet();\n\t\telStyle.className = rulesClassName;\n\t\telStyle.textContent = styleSheetContent;\n\t} else {\n\t\t(<HTMLStyleElement>themeStyles[0]).textContent = styleSheetContent;\n\t}\n}\n\nregisterColorThemeSchemas();\nregisterFileIconThemeSchemas();\nregisterProductIconThemeSchemas();\n\n// The WorkbenchThemeService should stay eager as the constructor restores the\n// last used colors / icons from storage. This needs to happen as quickly as possible\n// for a flicker-free startup experience.\nregisterSingleton(IWorkbenchThemeService, WorkbenchThemeService, InstantiationType.Eager);\n"],
  "mappings": "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",
  "names": ["theme"]
}
