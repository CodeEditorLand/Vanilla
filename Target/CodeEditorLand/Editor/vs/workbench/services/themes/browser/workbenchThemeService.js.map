{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/themes/browser/workbenchThemeService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createStyleSheet } from \"../../../../base/browser/dom.js\";\nimport { mainWindow } from \"../../../../base/browser/window.js\";\nimport { RunOnceScheduler, Sequencer } from \"../../../../base/common/async.js\";\nimport * as errors from \"../../../../base/common/errors.js\";\nimport { Emitter, type Event } from \"../../../../base/common/event.js\";\nimport {\n\tDisposable,\n\ttype IDisposable,\n\tdispose,\n} from \"../../../../base/common/lifecycle.js\";\nimport { isWeb } from \"../../../../base/common/platform.js\";\nimport * as resources from \"../../../../base/common/resources.js\";\nimport * as types from \"../../../../base/common/types.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport { ILanguageService } from \"../../../../editor/common/languages/language.js\";\nimport * as nls from \"../../../../nls.js\";\nimport {\n\tConfigurationTarget,\n\tIConfigurationService,\n} from \"../../../../platform/configuration/common/configuration.js\";\nimport { IExtensionResourceLoaderService } from \"../../../../platform/extensionResourceLoader/common/extensionResourceLoader.js\";\nimport {\n\tFileChangeType,\n\tIFileService,\n} from \"../../../../platform/files/common/files.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport { getRemoteAuthority } from \"../../../../platform/remote/common/remoteHosts.js\";\nimport { IStorageService } from \"../../../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { getIconsStyleSheet } from \"../../../../platform/theme/browser/iconsStyleSheet.js\";\nimport {\n\tasCssVariableName,\n\tgetColorRegistry,\n} from \"../../../../platform/theme/common/colorRegistry.js\";\nimport { ColorScheme } from \"../../../../platform/theme/common/theme.js\";\nimport {\n\ttype IColorTheme,\n\ttype IThemingRegistry,\n\tExtensions as ThemingExtensions,\n} from \"../../../../platform/theme/common/themeService.js\";\nimport { IBrowserWorkbenchEnvironmentService } from \"../../environment/browser/environmentService.js\";\nimport { IExtensionService } from \"../../extensions/common/extensions.js\";\nimport { IWorkbenchLayoutService } from \"../../layout/browser/layoutService.js\";\nimport { IUserDataInitializationService } from \"../../userData/browser/userDataInit.js\";\nimport { ColorThemeData } from \"../common/colorThemeData.js\";\nimport { registerColorThemeSchemas } from \"../common/colorThemeSchema.js\";\nimport { registerFileIconThemeSchemas } from \"../common/fileIconThemeSchema.js\";\nimport { IHostColorSchemeService } from \"../common/hostColorSchemeService.js\";\nimport { registerProductIconThemeSchemas } from \"../common/productIconThemeSchema.js\";\nimport {\n\tThemeConfiguration,\n\tupdateColorThemeConfigurationSchemas,\n\tupdateFileIconThemeConfigurationSchemas,\n\tupdateProductIconThemeConfigurationSchemas,\n} from \"../common/themeConfiguration.js\";\nimport {\n\tThemeRegistry,\n\tregisterColorThemeExtensionPoint,\n\tregisterFileIconThemeExtensionPoint,\n\tregisterProductIconThemeExtensionPoint,\n} from \"../common/themeExtensionPoints.js\";\nimport {\n\tCOLOR_THEME_DARK_INITIAL_COLORS,\n\tCOLOR_THEME_LIGHT_INITIAL_COLORS,\n\tExtensionData,\n\ttype IWorkbenchColorTheme,\n\ttype IWorkbenchFileIconTheme,\n\ttype IWorkbenchProductIconTheme,\n\tIWorkbenchThemeService,\n\tThemeSettingDefaults,\n\ttype ThemeSettingTarget,\n\tThemeSettings,\n\tVS_DARK_THEME,\n\tVS_HC_LIGHT_THEME,\n\tVS_HC_THEME,\n\tVS_LIGHT_THEME,\n} from \"../common/workbenchThemeService.js\";\nimport { FileIconThemeData, FileIconThemeLoader } from \"./fileIconThemeData.js\";\nimport {\n\tDEFAULT_PRODUCT_ICON_THEME_ID,\n\tProductIconThemeData,\n} from \"./productIconThemeData.js\";\n\n// implementation\n\nconst defaultThemeExtensionId = \"vscode-theme-defaults\";\n\nconst DEFAULT_FILE_ICON_THEME_ID = \"vscode.vscode-theme-seti-vs-seti\";\nconst fileIconsEnabledClass = \"file-icons-enabled\";\n\nconst colorThemeRulesClassName = \"contributedColorTheme\";\nconst fileIconThemeRulesClassName = \"contributedFileIconTheme\";\nconst productIconThemeRulesClassName = \"contributedProductIconTheme\";\n\nconst themingRegistry = Registry.as<IThemingRegistry>(\n\tThemingExtensions.ThemingContribution,\n);\n\nfunction validateThemeId(theme: string): string {\n\t// migrations\n\tswitch (theme) {\n\t\tcase VS_LIGHT_THEME:\n\t\t\treturn `vs ${defaultThemeExtensionId}-themes-light_vs-json`;\n\t\tcase VS_DARK_THEME:\n\t\t\treturn `vs-dark ${defaultThemeExtensionId}-themes-dark_vs-json`;\n\t\tcase VS_HC_THEME:\n\t\t\treturn `hc-black ${defaultThemeExtensionId}-themes-hc_black-json`;\n\t\tcase VS_HC_LIGHT_THEME:\n\t\t\treturn `hc-light ${defaultThemeExtensionId}-themes-hc_light-json`;\n\t}\n\treturn theme;\n}\n\nconst colorThemesExtPoint = registerColorThemeExtensionPoint();\nconst fileIconThemesExtPoint = registerFileIconThemeExtensionPoint();\nconst productIconThemesExtPoint = registerProductIconThemeExtensionPoint();\n\nexport class WorkbenchThemeService\n\textends Disposable\n\timplements IWorkbenchThemeService\n{\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly container: HTMLElement;\n\tprivate settings: ThemeConfiguration;\n\n\tprivate readonly colorThemeRegistry: ThemeRegistry<ColorThemeData>;\n\tprivate currentColorTheme: ColorThemeData;\n\tprivate readonly onColorThemeChange: Emitter<IWorkbenchColorTheme>;\n\tprivate readonly colorThemeWatcher: ThemeFileWatcher;\n\tprivate colorThemingParticipantChangeListener: IDisposable | undefined;\n\tprivate readonly colorThemeSequencer: Sequencer;\n\n\tprivate readonly fileIconThemeRegistry: ThemeRegistry<FileIconThemeData>;\n\tprivate currentFileIconTheme: FileIconThemeData;\n\tprivate readonly onFileIconThemeChange: Emitter<IWorkbenchFileIconTheme>;\n\tprivate readonly fileIconThemeLoader: FileIconThemeLoader;\n\tprivate readonly fileIconThemeWatcher: ThemeFileWatcher;\n\tprivate readonly fileIconThemeSequencer: Sequencer;\n\n\tprivate readonly productIconThemeRegistry: ThemeRegistry<ProductIconThemeData>;\n\tprivate currentProductIconTheme: ProductIconThemeData;\n\tprivate readonly onProductIconThemeChange: Emitter<IWorkbenchProductIconTheme>;\n\tprivate readonly productIconThemeWatcher: ThemeFileWatcher;\n\tprivate readonly productIconThemeSequencer: Sequencer;\n\n\tprivate hasDefaultUpdated = false;\n\n\tconstructor(\n\t\t@IExtensionService extensionService: IExtensionService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IBrowserWorkbenchEnvironmentService private readonly environmentService: IBrowserWorkbenchEnvironmentService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IExtensionResourceLoaderService private readonly extensionResourceLoaderService: IExtensionResourceLoaderService,\n\t\t@IWorkbenchLayoutService layoutService: IWorkbenchLayoutService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IHostColorSchemeService private readonly hostColorService: IHostColorSchemeService,\n\t\t@IUserDataInitializationService private readonly userDataInitializationService: IUserDataInitializationService,\n\t\t@ILanguageService private readonly languageService: ILanguageService\n\t) {\n\t\tsuper();\n\t\tthis.container = layoutService.mainContainer;\n\t\tthis.settings = new ThemeConfiguration(configurationService, hostColorService);\n\n\t\tthis.colorThemeRegistry = this._register(new ThemeRegistry(colorThemesExtPoint, ColorThemeData.fromExtensionTheme));\n\t\tthis.colorThemeWatcher = this._register(new ThemeFileWatcher(fileService, environmentService, this.reloadCurrentColorTheme.bind(this)));\n\t\tthis.onColorThemeChange = new Emitter<IWorkbenchColorTheme>({ leakWarningThreshold: 400 });\n\t\tthis.currentColorTheme = ColorThemeData.createUnloadedTheme('');\n\t\tthis.colorThemeSequencer = new Sequencer();\n\n\t\tthis.fileIconThemeWatcher = this._register(new ThemeFileWatcher(fileService, environmentService, this.reloadCurrentFileIconTheme.bind(this)));\n\t\tthis.fileIconThemeRegistry = this._register(new ThemeRegistry(fileIconThemesExtPoint, FileIconThemeData.fromExtensionTheme, true, FileIconThemeData.noIconTheme));\n\t\tthis.fileIconThemeLoader = new FileIconThemeLoader(extensionResourceLoaderService, languageService);\n\t\tthis.onFileIconThemeChange = new Emitter<IWorkbenchFileIconTheme>({ leakWarningThreshold: 400 });\n\t\tthis.currentFileIconTheme = FileIconThemeData.createUnloadedTheme('');\n\t\tthis.fileIconThemeSequencer = new Sequencer();\n\n\t\tthis.productIconThemeWatcher = this._register(new ThemeFileWatcher(fileService, environmentService, this.reloadCurrentProductIconTheme.bind(this)));\n\t\tthis.productIconThemeRegistry = this._register(new ThemeRegistry(productIconThemesExtPoint, ProductIconThemeData.fromExtensionTheme, true, ProductIconThemeData.defaultTheme));\n\t\tthis.onProductIconThemeChange = new Emitter<IWorkbenchProductIconTheme>();\n\t\tthis.currentProductIconTheme = ProductIconThemeData.createUnloadedTheme('');\n\t\tthis.productIconThemeSequencer = new Sequencer();\n\n\t\tthis._register(this.onDidColorThemeChange(theme => getColorRegistry().notifyThemeUpdate(theme)));\n\n\t\t// In order to avoid paint flashing for tokens, because\n\t\t// themes are loaded asynchronously, we need to initialize\n\t\t// a color theme document with good defaults until the theme is loaded\n\t\tlet themeData: ColorThemeData | undefined = ColorThemeData.fromStorageData(this.storageService);\n\t\tconst colorThemeSetting = this.settings.colorTheme;\n\t\tif (themeData && colorThemeSetting !== themeData.settingsId && this.settings.isDefaultColorTheme()) {\n\t\t\tthis.hasDefaultUpdated = themeData.settingsId === ThemeSettingDefaults.COLOR_THEME_DARK_OLD || themeData.settingsId === ThemeSettingDefaults.COLOR_THEME_LIGHT_OLD;\n\n\t\t\t// the web has different defaults than the desktop, therefore do not restore when the setting is the default theme and the storage doesn't match that.\n\t\t\tthemeData = undefined;\n\t\t}\n\n\t\tconst defaultColorMap = colorThemeSetting === ThemeSettingDefaults.COLOR_THEME_LIGHT ? COLOR_THEME_LIGHT_INITIAL_COLORS : colorThemeSetting === ThemeSettingDefaults.COLOR_THEME_DARK ? COLOR_THEME_DARK_INITIAL_COLORS : undefined;\n\n\t\tif (!themeData) {\n\t\t\tconst initialColorTheme = environmentService.options?.initialColorTheme;\n\t\t\tif (initialColorTheme) {\n\t\t\t\tthemeData = ColorThemeData.createUnloadedThemeForThemeType(initialColorTheme.themeType, initialColorTheme.colors ?? defaultColorMap);\n\t\t\t}\n\t\t}\n\t\tif (!themeData) {\n\t\t\tthemeData = ColorThemeData.createUnloadedThemeForThemeType(isWeb ? ColorScheme.LIGHT : ColorScheme.DARK, defaultColorMap);\n\t\t}\n\t\tthemeData.setCustomizations(this.settings);\n\t\tthis.applyTheme(themeData, undefined, true);\n\n\t\tconst fileIconData = FileIconThemeData.fromStorageData(this.storageService);\n\t\tif (fileIconData) {\n\t\t\tthis.applyAndSetFileIconTheme(fileIconData, true);\n\t\t}\n\n\t\tconst productIconData = ProductIconThemeData.fromStorageData(this.storageService);\n\t\tif (productIconData) {\n\t\t\tthis.applyAndSetProductIconTheme(productIconData, true);\n\t\t}\n\n\t\textensionService.whenInstalledExtensionsRegistered().then(_ => {\n\t\t\tthis.installConfigurationListener();\n\t\t\tthis.installPreferredSchemeListener();\n\t\t\tthis.installRegistryListeners();\n\t\t\tthis.initialize().catch(errors.onUnexpectedError);\n\t\t});\n\n\t\tconst codiconStyleSheet = createStyleSheet();\n\t\tcodiconStyleSheet.id = 'codiconStyles';\n\n\t\tconst iconsStyleSheet = this._register(getIconsStyleSheet(this));\n\t\tfunction updateAll() {\n\t\t\tcodiconStyleSheet.textContent = iconsStyleSheet.getCSS();\n\t\t}\n\n\t\tconst delayer = this._register(new RunOnceScheduler(updateAll, 0));\n\t\tthis._register(iconsStyleSheet.onDidChange(() => delayer.schedule()));\n\t\tdelayer.schedule();\n\t}\n\n\tprivate initialize(): Promise<\n\t\t[\n\t\t\tIWorkbenchColorTheme | null,\n\t\t\tIWorkbenchFileIconTheme | null,\n\t\t\tIWorkbenchProductIconTheme | null,\n\t\t]\n\t> {\n\t\tconst extDevLocs =\n\t\t\tthis.environmentService.extensionDevelopmentLocationURI;\n\t\tconst extDevLoc =\n\t\t\textDevLocs && extDevLocs.length === 1 ? extDevLocs[0] : undefined; // in dev mode, switch to a theme provided by the extension under dev.\n\n\t\tconst initializeColorTheme = async () => {\n\t\t\tconst devThemes =\n\t\t\t\tthis.colorThemeRegistry.findThemeByExtensionLocation(extDevLoc);\n\t\t\tif (devThemes.length) {\n\t\t\t\tconst matchedColorTheme = devThemes.find(\n\t\t\t\t\t(theme) => theme.type === this.currentColorTheme.type,\n\t\t\t\t);\n\t\t\t\treturn this.setColorTheme(\n\t\t\t\t\tmatchedColorTheme ? matchedColorTheme.id : devThemes[0].id,\n\t\t\t\t\tundefined,\n\t\t\t\t);\n\t\t\t}\n\t\t\tlet theme = this.colorThemeRegistry.findThemeBySettingsId(\n\t\t\t\tthis.settings.colorTheme,\n\t\t\t\tundefined,\n\t\t\t);\n\t\t\tif (!theme) {\n\t\t\t\t// If the current theme is not available, first make sure setting sync is complete\n\t\t\t\tawait this.userDataInitializationService.whenInitializationFinished();\n\t\t\t\t// try to get the theme again, now with a fallback to the default themes\n\t\t\t\tconst fallbackTheme =\n\t\t\t\t\tthis.currentColorTheme.type === ColorScheme.LIGHT\n\t\t\t\t\t\t? ThemeSettingDefaults.COLOR_THEME_LIGHT\n\t\t\t\t\t\t: ThemeSettingDefaults.COLOR_THEME_DARK;\n\t\t\t\ttheme = this.colorThemeRegistry.findThemeBySettingsId(\n\t\t\t\t\tthis.settings.colorTheme,\n\t\t\t\t\tfallbackTheme,\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn this.setColorTheme(theme && theme.id, undefined);\n\t\t};\n\n\t\tconst initializeFileIconTheme = async () => {\n\t\t\tconst devThemes =\n\t\t\t\tthis.fileIconThemeRegistry.findThemeByExtensionLocation(\n\t\t\t\t\textDevLoc,\n\t\t\t\t);\n\t\t\tif (devThemes.length) {\n\t\t\t\treturn this.setFileIconTheme(\n\t\t\t\t\tdevThemes[0].id,\n\t\t\t\t\tConfigurationTarget.MEMORY,\n\t\t\t\t);\n\t\t\t}\n\t\t\tlet theme = this.fileIconThemeRegistry.findThemeBySettingsId(\n\t\t\t\tthis.settings.fileIconTheme,\n\t\t\t);\n\t\t\tif (!theme) {\n\t\t\t\t// If the current theme is not available, first make sure setting sync is complete\n\t\t\t\tawait this.userDataInitializationService.whenInitializationFinished();\n\t\t\t\ttheme = this.fileIconThemeRegistry.findThemeBySettingsId(\n\t\t\t\t\tthis.settings.fileIconTheme,\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn this.setFileIconTheme(\n\t\t\t\ttheme ? theme.id : DEFAULT_FILE_ICON_THEME_ID,\n\t\t\t\tundefined,\n\t\t\t);\n\t\t};\n\n\t\tconst initializeProductIconTheme = async () => {\n\t\t\tconst devThemes =\n\t\t\t\tthis.productIconThemeRegistry.findThemeByExtensionLocation(\n\t\t\t\t\textDevLoc,\n\t\t\t\t);\n\t\t\tif (devThemes.length) {\n\t\t\t\treturn this.setProductIconTheme(\n\t\t\t\t\tdevThemes[0].id,\n\t\t\t\t\tConfigurationTarget.MEMORY,\n\t\t\t\t);\n\t\t\t}\n\t\t\tlet theme = this.productIconThemeRegistry.findThemeBySettingsId(\n\t\t\t\tthis.settings.productIconTheme,\n\t\t\t);\n\t\t\tif (!theme) {\n\t\t\t\t// If the current theme is not available, first make sure setting sync is complete\n\t\t\t\tawait this.userDataInitializationService.whenInitializationFinished();\n\t\t\t\ttheme = this.productIconThemeRegistry.findThemeBySettingsId(\n\t\t\t\t\tthis.settings.productIconTheme,\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn this.setProductIconTheme(\n\t\t\t\ttheme ? theme.id : DEFAULT_PRODUCT_ICON_THEME_ID,\n\t\t\t\tundefined,\n\t\t\t);\n\t\t};\n\n\t\treturn Promise.all([\n\t\t\tinitializeColorTheme(),\n\t\t\tinitializeFileIconTheme(),\n\t\t\tinitializeProductIconTheme(),\n\t\t]);\n\t}\n\n\tprivate installConfigurationListener() {\n\t\tthis._register(\n\t\t\tthis.configurationService.onDidChangeConfiguration((e) => {\n\t\t\t\tif (\n\t\t\t\t\te.affectsConfiguration(ThemeSettings.COLOR_THEME) ||\n\t\t\t\t\te.affectsConfiguration(\n\t\t\t\t\t\tThemeSettings.PREFERRED_DARK_THEME,\n\t\t\t\t\t) ||\n\t\t\t\t\te.affectsConfiguration(\n\t\t\t\t\t\tThemeSettings.PREFERRED_LIGHT_THEME,\n\t\t\t\t\t) ||\n\t\t\t\t\te.affectsConfiguration(\n\t\t\t\t\t\tThemeSettings.PREFERRED_HC_DARK_THEME,\n\t\t\t\t\t) ||\n\t\t\t\t\te.affectsConfiguration(\n\t\t\t\t\t\tThemeSettings.PREFERRED_HC_LIGHT_THEME,\n\t\t\t\t\t) ||\n\t\t\t\t\te.affectsConfiguration(ThemeSettings.DETECT_COLOR_SCHEME) ||\n\t\t\t\t\te.affectsConfiguration(ThemeSettings.DETECT_HC) ||\n\t\t\t\t\te.affectsConfiguration(ThemeSettings.SYSTEM_COLOR_THEME)\n\t\t\t\t) {\n\t\t\t\t\tthis.restoreColorTheme();\n\t\t\t\t}\n\t\t\t\tif (e.affectsConfiguration(ThemeSettings.FILE_ICON_THEME)) {\n\t\t\t\t\tthis.restoreFileIconTheme();\n\t\t\t\t}\n\t\t\t\tif (e.affectsConfiguration(ThemeSettings.PRODUCT_ICON_THEME)) {\n\t\t\t\t\tthis.restoreProductIconTheme();\n\t\t\t\t}\n\t\t\t\tif (this.currentColorTheme) {\n\t\t\t\t\tlet hasColorChanges = false;\n\t\t\t\t\tif (\n\t\t\t\t\t\te.affectsConfiguration(\n\t\t\t\t\t\t\tThemeSettings.COLOR_CUSTOMIZATIONS,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.currentColorTheme.setCustomColors(\n\t\t\t\t\t\t\tthis.settings.colorCustomizations,\n\t\t\t\t\t\t);\n\t\t\t\t\t\thasColorChanges = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\te.affectsConfiguration(\n\t\t\t\t\t\t\tThemeSettings.TOKEN_COLOR_CUSTOMIZATIONS,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.currentColorTheme.setCustomTokenColors(\n\t\t\t\t\t\t\tthis.settings.tokenColorCustomizations,\n\t\t\t\t\t\t);\n\t\t\t\t\t\thasColorChanges = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\te.affectsConfiguration(\n\t\t\t\t\t\t\tThemeSettings.SEMANTIC_TOKEN_COLOR_CUSTOMIZATIONS,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.currentColorTheme.setCustomSemanticTokenColors(\n\t\t\t\t\t\t\tthis.settings.semanticTokenColorCustomizations,\n\t\t\t\t\t\t);\n\t\t\t\t\t\thasColorChanges = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (hasColorChanges) {\n\t\t\t\t\t\tthis.updateDynamicCSSRules(this.currentColorTheme);\n\t\t\t\t\t\tthis.onColorThemeChange.fire(this.currentColorTheme);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate installRegistryListeners(): Promise<any> {\n\t\tlet prevColorId: string | undefined;\n\n\t\t// update settings schema setting for theme specific settings\n\t\tthis._register(\n\t\t\tthis.colorThemeRegistry.onDidChange(async (event) => {\n\t\t\t\tupdateColorThemeConfigurationSchemas(event.themes);\n\t\t\t\tif (await this.restoreColorTheme()) {\n\t\t\t\t\t// checks if theme from settings exists and is set\n\t\t\t\t\t// restore theme\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.currentColorTheme.settingsId ===\n\t\t\t\t\t\t\tThemeSettingDefaults.COLOR_THEME_DARK &&\n\t\t\t\t\t\t!types.isUndefined(prevColorId) &&\n\t\t\t\t\t\t(await this.colorThemeRegistry.findThemeById(\n\t\t\t\t\t\t\tprevColorId,\n\t\t\t\t\t\t))\n\t\t\t\t\t) {\n\t\t\t\t\t\tawait this.setColorTheme(prevColorId, \"auto\");\n\t\t\t\t\t\tprevColorId = undefined;\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tevent.added.some(\n\t\t\t\t\t\t\t(t) =>\n\t\t\t\t\t\t\t\tt.settingsId ===\n\t\t\t\t\t\t\t\tthis.currentColorTheme.settingsId,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tawait this.reloadCurrentColorTheme();\n\t\t\t\t\t}\n\t\t\t\t} else if (\n\t\t\t\t\tevent.removed.some(\n\t\t\t\t\t\t(t) =>\n\t\t\t\t\t\t\tt.settingsId === this.currentColorTheme.settingsId,\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\t// current theme is no longer available\n\t\t\t\t\tprevColorId = this.currentColorTheme.id;\n\t\t\t\t\tconst defaultTheme =\n\t\t\t\t\t\tthis.colorThemeRegistry.findThemeBySettingsId(\n\t\t\t\t\t\t\tThemeSettingDefaults.COLOR_THEME_DARK,\n\t\t\t\t\t\t);\n\t\t\t\t\tawait this.setColorTheme(defaultTheme, \"auto\");\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tlet prevFileIconId: string | undefined;\n\t\tthis._register(\n\t\t\tthis._register(\n\t\t\t\tthis.fileIconThemeRegistry.onDidChange(async (event) => {\n\t\t\t\t\tupdateFileIconThemeConfigurationSchemas(event.themes);\n\t\t\t\t\tif (await this.restoreFileIconTheme()) {\n\t\t\t\t\t\t// checks if theme from settings exists and is set\n\t\t\t\t\t\t// restore theme\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tthis.currentFileIconTheme.id ===\n\t\t\t\t\t\t\t\tDEFAULT_FILE_ICON_THEME_ID &&\n\t\t\t\t\t\t\t!types.isUndefined(prevFileIconId) &&\n\t\t\t\t\t\t\tthis.fileIconThemeRegistry.findThemeById(\n\t\t\t\t\t\t\t\tprevFileIconId,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tawait this.setFileIconTheme(prevFileIconId, \"auto\");\n\t\t\t\t\t\t\tprevFileIconId = undefined;\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\tevent.added.some(\n\t\t\t\t\t\t\t\t(t) =>\n\t\t\t\t\t\t\t\t\tt.settingsId ===\n\t\t\t\t\t\t\t\t\tthis.currentFileIconTheme.settingsId,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tawait this.reloadCurrentFileIconTheme();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tevent.removed.some(\n\t\t\t\t\t\t\t(t) =>\n\t\t\t\t\t\t\t\tt.settingsId ===\n\t\t\t\t\t\t\t\tthis.currentFileIconTheme.settingsId,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\t// current theme is no longer available\n\t\t\t\t\t\tprevFileIconId = this.currentFileIconTheme.id;\n\t\t\t\t\t\tawait this.setFileIconTheme(\n\t\t\t\t\t\t\tDEFAULT_FILE_ICON_THEME_ID,\n\t\t\t\t\t\t\t\"auto\",\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t),\n\t\t);\n\n\t\tlet prevProductIconId: string | undefined;\n\t\tthis._register(\n\t\t\tthis.productIconThemeRegistry.onDidChange(async (event) => {\n\t\t\t\tupdateProductIconThemeConfigurationSchemas(event.themes);\n\t\t\t\tif (await this.restoreProductIconTheme()) {\n\t\t\t\t\t// checks if theme from settings exists and is set\n\t\t\t\t\t// restore theme\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.currentProductIconTheme.id ===\n\t\t\t\t\t\t\tDEFAULT_PRODUCT_ICON_THEME_ID &&\n\t\t\t\t\t\t!types.isUndefined(prevProductIconId) &&\n\t\t\t\t\t\tthis.productIconThemeRegistry.findThemeById(\n\t\t\t\t\t\t\tprevProductIconId,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tawait this.setProductIconTheme(\n\t\t\t\t\t\t\tprevProductIconId,\n\t\t\t\t\t\t\t\"auto\",\n\t\t\t\t\t\t);\n\t\t\t\t\t\tprevProductIconId = undefined;\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tevent.added.some(\n\t\t\t\t\t\t\t(t) =>\n\t\t\t\t\t\t\t\tt.settingsId ===\n\t\t\t\t\t\t\t\tthis.currentProductIconTheme.settingsId,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tawait this.reloadCurrentProductIconTheme();\n\t\t\t\t\t}\n\t\t\t\t} else if (\n\t\t\t\t\tevent.removed.some(\n\t\t\t\t\t\t(t) =>\n\t\t\t\t\t\t\tt.settingsId ===\n\t\t\t\t\t\t\tthis.currentProductIconTheme.settingsId,\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\t// current theme is no longer available\n\t\t\t\t\tprevProductIconId = this.currentProductIconTheme.id;\n\t\t\t\t\tawait this.setProductIconTheme(\n\t\t\t\t\t\tDEFAULT_PRODUCT_ICON_THEME_ID,\n\t\t\t\t\t\t\"auto\",\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.languageService.onDidChange(() =>\n\t\t\t\tthis.reloadCurrentFileIconTheme(),\n\t\t\t),\n\t\t);\n\n\t\treturn Promise.all([\n\t\t\tthis.getColorThemes(),\n\t\t\tthis.getFileIconThemes(),\n\t\t\tthis.getProductIconThemes(),\n\t\t]).then(([ct, fit, pit]) => {\n\t\t\tupdateColorThemeConfigurationSchemas(ct);\n\t\t\tupdateFileIconThemeConfigurationSchemas(fit);\n\t\t\tupdateProductIconThemeConfigurationSchemas(pit);\n\t\t});\n\t}\n\n\t// preferred scheme handling\n\n\tprivate installPreferredSchemeListener() {\n\t\tthis._register(\n\t\t\tthis.hostColorService.onDidChangeColorScheme(() => {\n\t\t\t\tif (this.settings.isDetectingColorScheme()) {\n\t\t\t\t\tthis.restoreColorTheme();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tpublic hasUpdatedDefaultThemes(): boolean {\n\t\treturn this.hasDefaultUpdated;\n\t}\n\n\tpublic getColorTheme(): IWorkbenchColorTheme {\n\t\treturn this.currentColorTheme;\n\t}\n\n\tpublic async getColorThemes(): Promise<IWorkbenchColorTheme[]> {\n\t\treturn this.colorThemeRegistry.getThemes();\n\t}\n\n\tpublic getPreferredColorScheme(): ColorScheme | undefined {\n\t\treturn this.settings.getPreferredColorScheme();\n\t}\n\n\tpublic async getMarketplaceColorThemes(\n\t\tpublisher: string,\n\t\tname: string,\n\t\tversion: string,\n\t): Promise<IWorkbenchColorTheme[]> {\n\t\tconst extensionLocation =\n\t\t\tthis.extensionResourceLoaderService.getExtensionGalleryResourceURL(\n\t\t\t\t{ publisher, name, version },\n\t\t\t\t\"extension\",\n\t\t\t);\n\t\tif (extensionLocation) {\n\t\t\ttry {\n\t\t\t\tconst manifestContent =\n\t\t\t\t\tawait this.extensionResourceLoaderService.readExtensionResource(\n\t\t\t\t\t\tresources.joinPath(extensionLocation, \"package.json\"),\n\t\t\t\t\t);\n\t\t\t\treturn this.colorThemeRegistry.getMarketplaceThemes(\n\t\t\t\t\tJSON.parse(manifestContent),\n\t\t\t\t\textensionLocation,\n\t\t\t\t\tExtensionData.fromName(publisher, name),\n\t\t\t\t);\n\t\t\t} catch (e) {\n\t\t\t\tthis.logService.error(\n\t\t\t\t\t\"Problem loading themes from marketplace\",\n\t\t\t\t\te,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n\n\tpublic get onDidColorThemeChange(): Event<IWorkbenchColorTheme> {\n\t\treturn this.onColorThemeChange.event;\n\t}\n\n\tpublic setColorTheme(\n\t\tthemeIdOrTheme: string | undefined | IWorkbenchColorTheme,\n\t\tsettingsTarget: ThemeSettingTarget,\n\t): Promise<IWorkbenchColorTheme | null> {\n\t\treturn this.colorThemeSequencer.queue(async () => {\n\t\t\treturn this.internalSetColorTheme(themeIdOrTheme, settingsTarget);\n\t\t});\n\t}\n\n\tprivate async internalSetColorTheme(\n\t\tthemeIdOrTheme: string | undefined | IWorkbenchColorTheme,\n\t\tsettingsTarget: ThemeSettingTarget,\n\t): Promise<IWorkbenchColorTheme | null> {\n\t\tif (!themeIdOrTheme) {\n\t\t\treturn null;\n\t\t}\n\t\tconst themeId = types.isString(themeIdOrTheme)\n\t\t\t? validateThemeId(themeIdOrTheme)\n\t\t\t: themeIdOrTheme.id;\n\t\tif (\n\t\t\tthis.currentColorTheme.isLoaded &&\n\t\t\tthemeId === this.currentColorTheme.id\n\t\t) {\n\t\t\tif (settingsTarget !== \"preview\") {\n\t\t\t\tthis.currentColorTheme.toStorage(this.storageService);\n\t\t\t}\n\t\t\treturn this.settings.setColorTheme(\n\t\t\t\tthis.currentColorTheme,\n\t\t\t\tsettingsTarget,\n\t\t\t);\n\t\t}\n\n\t\tlet themeData = this.colorThemeRegistry.findThemeById(themeId);\n\t\tif (!themeData) {\n\t\t\tif (themeIdOrTheme instanceof ColorThemeData) {\n\t\t\t\tthemeData = themeIdOrTheme;\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\ttry {\n\t\t\tawait themeData.ensureLoaded(this.extensionResourceLoaderService);\n\t\t\tthemeData.setCustomizations(this.settings);\n\t\t\treturn this.applyTheme(themeData, settingsTarget);\n\t\t} catch (error) {\n\t\t\tthrow new Error(\n\t\t\t\tnls.localize(\n\t\t\t\t\t\"error.cannotloadtheme\",\n\t\t\t\t\t\"Unable to load {0}: {1}\",\n\t\t\t\t\tthemeData.location?.toString(),\n\t\t\t\t\terror.message,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate reloadCurrentColorTheme() {\n\t\treturn this.colorThemeSequencer.queue(async () => {\n\t\t\ttry {\n\t\t\t\tconst theme =\n\t\t\t\t\tthis.colorThemeRegistry.findThemeBySettingsId(\n\t\t\t\t\t\tthis.currentColorTheme.settingsId,\n\t\t\t\t\t) || this.currentColorTheme;\n\t\t\t\tawait theme.reload(this.extensionResourceLoaderService);\n\t\t\t\ttheme.setCustomizations(this.settings);\n\t\t\t\tawait this.applyTheme(theme, undefined, false);\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.info(\n\t\t\t\t\t\"Unable to reload {0}: {1}\",\n\t\t\t\t\tthis.currentColorTheme.location?.toString(),\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic async restoreColorTheme(): Promise<boolean> {\n\t\treturn this.colorThemeSequencer.queue(async () => {\n\t\t\tconst settingId = this.settings.colorTheme;\n\t\t\tconst theme =\n\t\t\t\tthis.colorThemeRegistry.findThemeBySettingsId(settingId);\n\t\t\tif (theme) {\n\t\t\t\tif (settingId !== this.currentColorTheme.settingsId) {\n\t\t\t\t\tawait this.internalSetColorTheme(theme.id, undefined);\n\t\t\t\t} else if (theme !== this.currentColorTheme) {\n\t\t\t\t\tawait theme.ensureLoaded(\n\t\t\t\t\t\tthis.extensionResourceLoaderService,\n\t\t\t\t\t);\n\t\t\t\t\ttheme.setCustomizations(this.settings);\n\t\t\t\t\tawait this.applyTheme(theme, undefined, true);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tprivate updateDynamicCSSRules(themeData: IColorTheme) {\n\t\tconst cssRules = new Set<string>();\n\t\tconst ruleCollector = {\n\t\t\taddRule: (rule: string) => {\n\t\t\t\tif (!cssRules.has(rule)) {\n\t\t\t\t\tcssRules.add(rule);\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t\truleCollector.addRule(\n\t\t\t`.monaco-workbench { forced-color-adjust: none; }`,\n\t\t);\n\t\tthemingRegistry\n\t\t\t.getThemingParticipants()\n\t\t\t.forEach((p) =>\n\t\t\t\tp(themeData, ruleCollector, this.environmentService),\n\t\t\t);\n\n\t\tconst colorVariables: string[] = [];\n\t\tfor (const item of getColorRegistry().getColors()) {\n\t\t\tconst color = themeData.getColor(item.id, true);\n\t\t\tif (color) {\n\t\t\t\tcolorVariables.push(\n\t\t\t\t\t`${asCssVariableName(item.id)}: ${color.toString()};`,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\truleCollector.addRule(\n\t\t\t`.monaco-workbench { ${colorVariables.join(\"\\n\")} }`,\n\t\t);\n\n\t\t_applyRules([...cssRules].join(\"\\n\"), colorThemeRulesClassName);\n\t}\n\n\tprivate applyTheme(\n\t\tnewTheme: ColorThemeData,\n\t\tsettingsTarget: ThemeSettingTarget,\n\t\tsilent = false,\n\t): Promise<IWorkbenchColorTheme | null> {\n\t\tthis.updateDynamicCSSRules(newTheme);\n\n\t\tif (this.currentColorTheme.id) {\n\t\t\tthis.container.classList.remove(\n\t\t\t\t...this.currentColorTheme.classNames,\n\t\t\t);\n\t\t} else {\n\t\t\tthis.container.classList.remove(\n\t\t\t\tVS_DARK_THEME,\n\t\t\t\tVS_LIGHT_THEME,\n\t\t\t\tVS_HC_THEME,\n\t\t\t\tVS_HC_LIGHT_THEME,\n\t\t\t);\n\t\t}\n\t\tthis.container.classList.add(...newTheme.classNames);\n\n\t\tthis.currentColorTheme.clearCaches();\n\t\tthis.currentColorTheme = newTheme;\n\t\tif (!this.colorThemingParticipantChangeListener) {\n\t\t\tthis.colorThemingParticipantChangeListener =\n\t\t\t\tthemingRegistry.onThemingParticipantAdded((_) =>\n\t\t\t\t\tthis.updateDynamicCSSRules(this.currentColorTheme),\n\t\t\t\t);\n\t\t}\n\n\t\tthis.colorThemeWatcher.update(newTheme);\n\n\t\tthis.sendTelemetry(newTheme.id, newTheme.extensionData, \"color\");\n\n\t\tif (silent) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tthis.onColorThemeChange.fire(this.currentColorTheme);\n\n\t\t// remember theme data for a quick restore\n\t\tif (newTheme.isLoaded && settingsTarget !== \"preview\") {\n\t\t\tnewTheme.toStorage(this.storageService);\n\t\t}\n\n\t\treturn this.settings.setColorTheme(\n\t\t\tthis.currentColorTheme,\n\t\t\tsettingsTarget,\n\t\t);\n\t}\n\n\tprivate themeExtensionsActivated = new Map<string, boolean>();\n\tprivate sendTelemetry(\n\t\tthemeId: string,\n\t\tthemeData: ExtensionData | undefined,\n\t\tthemeType: string,\n\t) {\n\t\tif (themeData) {\n\t\t\tconst key = themeType + themeData.extensionId;\n\t\t\tif (!this.themeExtensionsActivated.get(key)) {\n\t\t\t\ttype ActivatePluginClassification = {\n\t\t\t\t\towner: \"aeschli\";\n\t\t\t\t\tcomment: \"An event is fired when an color theme extension is first used as it provides the currently shown color theme.\";\n\t\t\t\t\tid: {\n\t\t\t\t\t\tclassification: \"PublicNonPersonalData\";\n\t\t\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\t\t\tcomment: \"The extension id.\";\n\t\t\t\t\t};\n\t\t\t\t\tname: {\n\t\t\t\t\t\tclassification: \"PublicNonPersonalData\";\n\t\t\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\t\t\tcomment: \"The extension name.\";\n\t\t\t\t\t};\n\t\t\t\t\tisBuiltin: {\n\t\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\t\t\tcomment: \"Whether the extension is a built-in extension.\";\n\t\t\t\t\t};\n\t\t\t\t\tpublisherDisplayName: {\n\t\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\t\t\tcomment: \"The extension publisher id.\";\n\t\t\t\t\t};\n\t\t\t\t\tthemeId: {\n\t\t\t\t\t\tclassification: \"PublicNonPersonalData\";\n\t\t\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\t\t\tcomment: \"The id of the theme that triggered the first extension use.\";\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t\ttype ActivatePluginEvent = {\n\t\t\t\t\tid: string;\n\t\t\t\t\tname: string;\n\t\t\t\t\tisBuiltin: boolean;\n\t\t\t\t\tpublisherDisplayName: string;\n\t\t\t\t\tthemeId: string;\n\t\t\t\t};\n\t\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\t\tActivatePluginEvent,\n\t\t\t\t\tActivatePluginClassification\n\t\t\t\t>(\"activatePlugin\", {\n\t\t\t\t\tid: themeData.extensionId,\n\t\t\t\t\tname: themeData.extensionName,\n\t\t\t\t\tisBuiltin: themeData.extensionIsBuiltin,\n\t\t\t\t\tpublisherDisplayName: themeData.extensionPublisher,\n\t\t\t\t\tthemeId: themeId,\n\t\t\t\t});\n\t\t\t\tthis.themeExtensionsActivated.set(key, true);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async getFileIconThemes(): Promise<IWorkbenchFileIconTheme[]> {\n\t\treturn this.fileIconThemeRegistry.getThemes();\n\t}\n\n\tpublic getFileIconTheme() {\n\t\treturn this.currentFileIconTheme;\n\t}\n\n\tpublic get onDidFileIconThemeChange(): Event<IWorkbenchFileIconTheme> {\n\t\treturn this.onFileIconThemeChange.event;\n\t}\n\n\tpublic async setFileIconTheme(\n\t\ticonThemeOrId: string | undefined | IWorkbenchFileIconTheme,\n\t\tsettingsTarget: ThemeSettingTarget,\n\t): Promise<IWorkbenchFileIconTheme> {\n\t\treturn this.fileIconThemeSequencer.queue(async () => {\n\t\t\treturn this.internalSetFileIconTheme(iconThemeOrId, settingsTarget);\n\t\t});\n\t}\n\n\tprivate async internalSetFileIconTheme(\n\t\ticonThemeOrId: string | undefined | IWorkbenchFileIconTheme,\n\t\tsettingsTarget: ThemeSettingTarget,\n\t): Promise<IWorkbenchFileIconTheme> {\n\t\tif (iconThemeOrId === undefined) {\n\t\t\ticonThemeOrId = \"\";\n\t\t}\n\t\tconst themeId = types.isString(iconThemeOrId)\n\t\t\t? iconThemeOrId\n\t\t\t: iconThemeOrId.id;\n\t\tif (\n\t\t\tthemeId !== this.currentFileIconTheme.id ||\n\t\t\t!this.currentFileIconTheme.isLoaded\n\t\t) {\n\t\t\tlet newThemeData =\n\t\t\t\tthis.fileIconThemeRegistry.findThemeById(themeId);\n\t\t\tif (!newThemeData && iconThemeOrId instanceof FileIconThemeData) {\n\t\t\t\tnewThemeData = iconThemeOrId;\n\t\t\t}\n\t\t\tif (!newThemeData) {\n\t\t\t\tnewThemeData = FileIconThemeData.noIconTheme;\n\t\t\t}\n\t\t\tawait newThemeData.ensureLoaded(this.fileIconThemeLoader);\n\n\t\t\tthis.applyAndSetFileIconTheme(newThemeData); // updates this.currentFileIconTheme\n\t\t}\n\n\t\tconst themeData = this.currentFileIconTheme;\n\n\t\t// remember theme data for a quick restore\n\t\tif (\n\t\t\tthemeData.isLoaded &&\n\t\t\tsettingsTarget !== \"preview\" &&\n\t\t\t(!themeData.location || !getRemoteAuthority(themeData.location))\n\t\t) {\n\t\t\tthemeData.toStorage(this.storageService);\n\t\t}\n\t\tawait this.settings.setFileIconTheme(\n\t\t\tthis.currentFileIconTheme,\n\t\t\tsettingsTarget,\n\t\t);\n\n\t\treturn themeData;\n\t}\n\n\tpublic async getMarketplaceFileIconThemes(\n\t\tpublisher: string,\n\t\tname: string,\n\t\tversion: string,\n\t): Promise<IWorkbenchFileIconTheme[]> {\n\t\tconst extensionLocation =\n\t\t\tthis.extensionResourceLoaderService.getExtensionGalleryResourceURL(\n\t\t\t\t{ publisher, name, version },\n\t\t\t\t\"extension\",\n\t\t\t);\n\t\tif (extensionLocation) {\n\t\t\ttry {\n\t\t\t\tconst manifestContent =\n\t\t\t\t\tawait this.extensionResourceLoaderService.readExtensionResource(\n\t\t\t\t\t\tresources.joinPath(extensionLocation, \"package.json\"),\n\t\t\t\t\t);\n\t\t\t\treturn this.fileIconThemeRegistry.getMarketplaceThemes(\n\t\t\t\t\tJSON.parse(manifestContent),\n\t\t\t\t\textensionLocation,\n\t\t\t\t\tExtensionData.fromName(publisher, name),\n\t\t\t\t);\n\t\t\t} catch (e) {\n\t\t\t\tthis.logService.error(\n\t\t\t\t\t\"Problem loading themes from marketplace\",\n\t\t\t\t\te,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate async reloadCurrentFileIconTheme() {\n\t\treturn this.fileIconThemeSequencer.queue(async () => {\n\t\t\tawait this.currentFileIconTheme.reload(this.fileIconThemeLoader);\n\t\t\tthis.applyAndSetFileIconTheme(this.currentFileIconTheme);\n\t\t});\n\t}\n\n\tpublic async restoreFileIconTheme(): Promise<boolean> {\n\t\treturn this.fileIconThemeSequencer.queue(async () => {\n\t\t\tconst settingId = this.settings.fileIconTheme;\n\t\t\tconst theme =\n\t\t\t\tthis.fileIconThemeRegistry.findThemeBySettingsId(settingId);\n\t\t\tif (theme) {\n\t\t\t\tif (settingId !== this.currentFileIconTheme.settingsId) {\n\t\t\t\t\tawait this.internalSetFileIconTheme(theme.id, undefined);\n\t\t\t\t} else if (theme !== this.currentFileIconTheme) {\n\t\t\t\t\tawait theme.ensureLoaded(this.fileIconThemeLoader);\n\t\t\t\t\tthis.applyAndSetFileIconTheme(theme, true);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tprivate applyAndSetFileIconTheme(\n\t\ticonThemeData: FileIconThemeData,\n\t\tsilent = false,\n\t): void {\n\t\tthis.currentFileIconTheme = iconThemeData;\n\n\t\t_applyRules(\n\t\t\ticonThemeData.styleSheetContent!,\n\t\t\tfileIconThemeRulesClassName,\n\t\t);\n\n\t\tif (iconThemeData.id) {\n\t\t\tthis.container.classList.add(fileIconsEnabledClass);\n\t\t} else {\n\t\t\tthis.container.classList.remove(fileIconsEnabledClass);\n\t\t}\n\n\t\tthis.fileIconThemeWatcher.update(iconThemeData);\n\n\t\tif (iconThemeData.id) {\n\t\t\tthis.sendTelemetry(\n\t\t\t\ticonThemeData.id,\n\t\t\t\ticonThemeData.extensionData,\n\t\t\t\t\"fileIcon\",\n\t\t\t);\n\t\t}\n\n\t\tif (!silent) {\n\t\t\tthis.onFileIconThemeChange.fire(this.currentFileIconTheme);\n\t\t}\n\t}\n\n\tpublic async getProductIconThemes(): Promise<IWorkbenchProductIconTheme[]> {\n\t\treturn this.productIconThemeRegistry.getThemes();\n\t}\n\n\tpublic getProductIconTheme() {\n\t\treturn this.currentProductIconTheme;\n\t}\n\n\tpublic get onDidProductIconThemeChange(): Event<IWorkbenchProductIconTheme> {\n\t\treturn this.onProductIconThemeChange.event;\n\t}\n\n\tpublic async setProductIconTheme(\n\t\ticonThemeOrId: string | undefined | IWorkbenchProductIconTheme,\n\t\tsettingsTarget: ThemeSettingTarget,\n\t): Promise<IWorkbenchProductIconTheme> {\n\t\treturn this.productIconThemeSequencer.queue(async () => {\n\t\t\treturn this.internalSetProductIconTheme(\n\t\t\t\ticonThemeOrId,\n\t\t\t\tsettingsTarget,\n\t\t\t);\n\t\t});\n\t}\n\n\tprivate async internalSetProductIconTheme(\n\t\ticonThemeOrId: string | undefined | IWorkbenchProductIconTheme,\n\t\tsettingsTarget: ThemeSettingTarget,\n\t): Promise<IWorkbenchProductIconTheme> {\n\t\tif (iconThemeOrId === undefined) {\n\t\t\ticonThemeOrId = \"\";\n\t\t}\n\t\tconst themeId = types.isString(iconThemeOrId)\n\t\t\t? iconThemeOrId\n\t\t\t: iconThemeOrId.id;\n\t\tif (\n\t\t\tthemeId !== this.currentProductIconTheme.id ||\n\t\t\t!this.currentProductIconTheme.isLoaded\n\t\t) {\n\t\t\tlet newThemeData =\n\t\t\t\tthis.productIconThemeRegistry.findThemeById(themeId);\n\t\t\tif (\n\t\t\t\t!newThemeData &&\n\t\t\t\ticonThemeOrId instanceof ProductIconThemeData\n\t\t\t) {\n\t\t\t\tnewThemeData = iconThemeOrId;\n\t\t\t}\n\t\t\tif (!newThemeData) {\n\t\t\t\tnewThemeData = ProductIconThemeData.defaultTheme;\n\t\t\t}\n\t\t\tawait newThemeData.ensureLoaded(\n\t\t\t\tthis.extensionResourceLoaderService,\n\t\t\t\tthis.logService,\n\t\t\t);\n\n\t\t\tthis.applyAndSetProductIconTheme(newThemeData); // updates this.currentProductIconTheme\n\t\t}\n\t\tconst themeData = this.currentProductIconTheme;\n\n\t\t// remember theme data for a quick restore\n\t\tif (\n\t\t\tthemeData.isLoaded &&\n\t\t\tsettingsTarget !== \"preview\" &&\n\t\t\t(!themeData.location || !getRemoteAuthority(themeData.location))\n\t\t) {\n\t\t\tthemeData.toStorage(this.storageService);\n\t\t}\n\t\tawait this.settings.setProductIconTheme(\n\t\t\tthis.currentProductIconTheme,\n\t\t\tsettingsTarget,\n\t\t);\n\n\t\treturn themeData;\n\t}\n\n\tpublic async getMarketplaceProductIconThemes(\n\t\tpublisher: string,\n\t\tname: string,\n\t\tversion: string,\n\t): Promise<IWorkbenchProductIconTheme[]> {\n\t\tconst extensionLocation =\n\t\t\tthis.extensionResourceLoaderService.getExtensionGalleryResourceURL(\n\t\t\t\t{ publisher, name, version },\n\t\t\t\t\"extension\",\n\t\t\t);\n\t\tif (extensionLocation) {\n\t\t\ttry {\n\t\t\t\tconst manifestContent =\n\t\t\t\t\tawait this.extensionResourceLoaderService.readExtensionResource(\n\t\t\t\t\t\tresources.joinPath(extensionLocation, \"package.json\"),\n\t\t\t\t\t);\n\t\t\t\treturn this.productIconThemeRegistry.getMarketplaceThemes(\n\t\t\t\t\tJSON.parse(manifestContent),\n\t\t\t\t\textensionLocation,\n\t\t\t\t\tExtensionData.fromName(publisher, name),\n\t\t\t\t);\n\t\t\t} catch (e) {\n\t\t\t\tthis.logService.error(\n\t\t\t\t\t\"Problem loading themes from marketplace\",\n\t\t\t\t\te,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate async reloadCurrentProductIconTheme() {\n\t\treturn this.productIconThemeSequencer.queue(async () => {\n\t\t\tawait this.currentProductIconTheme.reload(\n\t\t\t\tthis.extensionResourceLoaderService,\n\t\t\t\tthis.logService,\n\t\t\t);\n\t\t\tthis.applyAndSetProductIconTheme(this.currentProductIconTheme);\n\t\t});\n\t}\n\n\tpublic async restoreProductIconTheme(): Promise<boolean> {\n\t\treturn this.productIconThemeSequencer.queue(async () => {\n\t\t\tconst settingId = this.settings.productIconTheme;\n\t\t\tconst theme =\n\t\t\t\tthis.productIconThemeRegistry.findThemeBySettingsId(settingId);\n\t\t\tif (theme) {\n\t\t\t\tif (settingId !== this.currentProductIconTheme.settingsId) {\n\t\t\t\t\tawait this.internalSetProductIconTheme(theme.id, undefined);\n\t\t\t\t} else if (theme !== this.currentProductIconTheme) {\n\t\t\t\t\tawait theme.ensureLoaded(\n\t\t\t\t\t\tthis.extensionResourceLoaderService,\n\t\t\t\t\t\tthis.logService,\n\t\t\t\t\t);\n\t\t\t\t\tthis.applyAndSetProductIconTheme(theme, true);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tprivate applyAndSetProductIconTheme(\n\t\ticonThemeData: ProductIconThemeData,\n\t\tsilent = false,\n\t): void {\n\t\tthis.currentProductIconTheme = iconThemeData;\n\n\t\t_applyRules(\n\t\t\ticonThemeData.styleSheetContent!,\n\t\t\tproductIconThemeRulesClassName,\n\t\t);\n\n\t\tthis.productIconThemeWatcher.update(iconThemeData);\n\n\t\tif (iconThemeData.id) {\n\t\t\tthis.sendTelemetry(\n\t\t\t\ticonThemeData.id,\n\t\t\t\ticonThemeData.extensionData,\n\t\t\t\t\"productIcon\",\n\t\t\t);\n\t\t}\n\t\tif (!silent) {\n\t\t\tthis.onProductIconThemeChange.fire(this.currentProductIconTheme);\n\t\t}\n\t}\n}\n\nclass ThemeFileWatcher {\n\tprivate watchedLocation: URI | undefined;\n\tprivate watcherDisposable: IDisposable | undefined;\n\tprivate fileChangeListener: IDisposable | undefined;\n\n\tconstructor(\n\t\tprivate fileService: IFileService,\n\t\tprivate environmentService: IBrowserWorkbenchEnvironmentService,\n\t\tprivate onUpdate: () => void,\n\t) {}\n\n\tupdate(theme: { location?: URI; watch?: boolean }) {\n\t\tif (!resources.isEqual(theme.location, this.watchedLocation)) {\n\t\t\tthis.dispose();\n\t\t\tif (\n\t\t\t\ttheme.location &&\n\t\t\t\t(theme.watch || this.environmentService.isExtensionDevelopment)\n\t\t\t) {\n\t\t\t\tthis.watchedLocation = theme.location;\n\t\t\t\tthis.watcherDisposable = this.fileService.watch(theme.location);\n\t\t\t\tthis.fileService.onDidFilesChange((e) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.watchedLocation &&\n\t\t\t\t\t\te.contains(this.watchedLocation, FileChangeType.UPDATED)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.onUpdate();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.watcherDisposable = dispose(this.watcherDisposable);\n\t\tthis.fileChangeListener = dispose(this.fileChangeListener);\n\t\tthis.watchedLocation = undefined;\n\t}\n}\n\nfunction _applyRules(styleSheetContent: string, rulesClassName: string) {\n\tconst themeStyles =\n\t\tmainWindow.document.head.getElementsByClassName(rulesClassName);\n\tif (themeStyles.length === 0) {\n\t\tconst elStyle = createStyleSheet();\n\t\telStyle.className = rulesClassName;\n\t\telStyle.textContent = styleSheetContent;\n\t} else {\n\t\t(<HTMLStyleElement>themeStyles[0]).textContent = styleSheetContent;\n\t}\n}\n\nregisterColorThemeSchemas();\nregisterFileIconThemeSchemas();\nregisterProductIconThemeSchemas();\n\n// The WorkbenchThemeService should stay eager as the constructor restores the\n// last used colors / icons from storage. This needs to happen as quickly as possible\n// for a flicker-free startup experience.\nregisterSingleton(\n\tIWorkbenchThemeService,\n\tWorkbenchThemeService,\n\tInstantiationType.Eager,\n);\n"],
  "mappings": "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",
  "names": ["theme"]
}
