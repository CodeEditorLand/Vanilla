import{addMatchMediaChangeListener as r}from"../../../../../vs/base/browser/browser.js";import{mainWindow as e}from"../../../../../vs/base/browser/window.js";import{Emitter as t}from"../../../../../vs/base/common/event.js";import{Disposable as o}from"../../../../../vs/base/common/lifecycle.js";import{InstantiationType as i,registerSingleton as n}from"../../../../../vs/platform/instantiation/common/extensions.js";import{IHostColorSchemeService as s}from"../../../../../vs/workbench/services/themes/common/hostColorSchemeService.js";class a extends o{_onDidSchemeChangeEvent=this._register(new t);constructor(){super(),this.registerListeners()}registerListeners(){r(e,"(prefers-color-scheme: dark)",()=>{this._onDidSchemeChangeEvent.fire()}),r(e,"(forced-colors: active)",()=>{this._onDidSchemeChangeEvent.fire()})}get onDidChangeColorScheme(){return this._onDidSchemeChangeEvent.event}get dark(){return e.matchMedia("(prefers-color-scheme: light)").matches?!1:!!e.matchMedia("(prefers-color-scheme: dark)").matches}get highContrast(){return!!e.matchMedia("(forced-colors: active)").matches}}n(s,a,i.Delayed);export{a as BrowserHostColorSchemeService};
