{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/themes/browser/productIconThemeData.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as Json from \"../../../../base/common/json.js\";\nimport { getParseErrorMessage } from \"../../../../base/common/jsonErrorMessages.js\";\nimport * as Paths from \"../../../../base/common/path.js\";\nimport * as resources from \"../../../../base/common/resources.js\";\nimport { ThemeIcon } from \"../../../../base/common/themables.js\";\nimport { isObject, isString } from \"../../../../base/common/types.js\";\nimport type { URI } from \"../../../../base/common/uri.js\";\nimport * as nls from \"../../../../nls.js\";\nimport type { IExtensionResourceLoaderService } from \"../../../../platform/extensionResourceLoader/common/extensionResourceLoader.js\";\nimport type { ILogService } from \"../../../../platform/log/common/log.js\";\nimport {\n\ttype IStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport {\n\ttype IconContribution,\n\ttype IconDefinition,\n\tIconFontDefinition,\n\ttype IconFontSource,\n\tgetIconRegistry,\n} from \"../../../../platform/theme/common/iconRegistry.js\";\nimport {\n\tfontFormatRegex,\n\tfontIdRegex,\n\tfontStyleRegex,\n\tfontWeightRegex,\n} from \"../common/productIconThemeSchema.js\";\nimport {\n\tExtensionData,\n\ttype IThemeExtensionPoint,\n\ttype IWorkbenchProductIconTheme,\n\tThemeSettingDefaults,\n} from \"../common/workbenchThemeService.js\";\n\nexport const DEFAULT_PRODUCT_ICON_THEME_ID = \"\"; // TODO\n\nexport class ProductIconThemeData implements IWorkbenchProductIconTheme {\n\tstatic readonly STORAGE_KEY = \"productIconThemeData\";\n\n\tid: string;\n\tlabel: string;\n\tsettingsId: string;\n\tdescription?: string;\n\tisLoaded: boolean;\n\tlocation?: URI;\n\textensionData?: ExtensionData;\n\twatch?: boolean;\n\n\ticonThemeDocument: ProductIconThemeDocument = {\n\t\ticonDefinitions: new Map(),\n\t};\n\tstyleSheetContent?: string;\n\n\tprivate constructor(id: string, label: string, settingsId: string) {\n\t\tthis.id = id;\n\t\tthis.label = label;\n\t\tthis.settingsId = settingsId;\n\t\tthis.isLoaded = false;\n\t}\n\n\tpublic getIcon(\n\t\ticonContribution: IconContribution,\n\t): IconDefinition | undefined {\n\t\treturn _resolveIconDefinition(iconContribution, this.iconThemeDocument);\n\t}\n\n\tpublic ensureLoaded(\n\t\tfileService: IExtensionResourceLoaderService,\n\t\tlogService: ILogService,\n\t): Promise<string | undefined> {\n\t\treturn this.isLoaded\n\t\t\t? Promise.resolve(this.styleSheetContent)\n\t\t\t: this.load(fileService, logService);\n\t}\n\n\tpublic reload(\n\t\tfileService: IExtensionResourceLoaderService,\n\t\tlogService: ILogService,\n\t): Promise<string | undefined> {\n\t\treturn this.load(fileService, logService);\n\t}\n\n\tprivate async load(\n\t\tfileService: IExtensionResourceLoaderService,\n\t\tlogService: ILogService,\n\t): Promise<string | undefined> {\n\t\tconst location = this.location;\n\t\tif (!location) {\n\t\t\treturn Promise.resolve(this.styleSheetContent);\n\t\t}\n\t\tconst warnings: string[] = [];\n\t\tthis.iconThemeDocument = await _loadProductIconThemeDocument(\n\t\t\tfileService,\n\t\t\tlocation,\n\t\t\twarnings,\n\t\t);\n\t\tthis.isLoaded = true;\n\t\tif (warnings.length) {\n\t\t\tlogService.error(\n\t\t\t\tnls.localize(\n\t\t\t\t\t\"error.parseicondefs\",\n\t\t\t\t\t\"Problems processing product icons definitions in {0}:\\n{1}\",\n\t\t\t\t\tlocation.toString(),\n\t\t\t\t\twarnings.join(\"\\n\"),\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t\treturn this.styleSheetContent;\n\t}\n\n\tstatic fromExtensionTheme(\n\t\ticonTheme: IThemeExtensionPoint,\n\t\ticonThemeLocation: URI,\n\t\textensionData: ExtensionData,\n\t): ProductIconThemeData {\n\t\tconst id = extensionData.extensionId + \"-\" + iconTheme.id;\n\t\tconst label = iconTheme.label || Paths.basename(iconTheme.path);\n\t\tconst settingsId = iconTheme.id;\n\n\t\tconst themeData = new ProductIconThemeData(id, label, settingsId);\n\n\t\tthemeData.description = iconTheme.description;\n\t\tthemeData.location = iconThemeLocation;\n\t\tthemeData.extensionData = extensionData;\n\t\tthemeData.watch = iconTheme._watch;\n\t\tthemeData.isLoaded = false;\n\t\treturn themeData;\n\t}\n\n\tstatic createUnloadedTheme(id: string): ProductIconThemeData {\n\t\tconst themeData = new ProductIconThemeData(id, \"\", \"__\" + id);\n\t\tthemeData.isLoaded = false;\n\t\tthemeData.extensionData = undefined;\n\t\tthemeData.watch = false;\n\t\treturn themeData;\n\t}\n\n\tprivate static _defaultProductIconTheme: ProductIconThemeData | null = null;\n\n\tstatic get defaultTheme(): ProductIconThemeData {\n\t\tlet themeData = ProductIconThemeData._defaultProductIconTheme;\n\t\tif (!themeData) {\n\t\t\tthemeData = ProductIconThemeData._defaultProductIconTheme =\n\t\t\t\tnew ProductIconThemeData(\n\t\t\t\t\tDEFAULT_PRODUCT_ICON_THEME_ID,\n\t\t\t\t\tnls.localize(\"defaultTheme\", \"Default\"),\n\t\t\t\t\tThemeSettingDefaults.PRODUCT_ICON_THEME,\n\t\t\t\t);\n\t\t\tthemeData.isLoaded = true;\n\t\t\tthemeData.extensionData = undefined;\n\t\t\tthemeData.watch = false;\n\t\t}\n\t\treturn themeData;\n\t}\n\n\tstatic fromStorageData(\n\t\tstorageService: IStorageService,\n\t): ProductIconThemeData | undefined {\n\t\tconst input = storageService.get(\n\t\t\tProductIconThemeData.STORAGE_KEY,\n\t\t\tStorageScope.PROFILE,\n\t\t);\n\t\tif (!input) {\n\t\t\treturn undefined;\n\t\t}\n\t\ttry {\n\t\t\tconst data = JSON.parse(input);\n\t\t\tconst theme = new ProductIconThemeData(\"\", \"\", \"\");\n\t\t\tfor (const key in data) {\n\t\t\t\tswitch (key) {\n\t\t\t\t\tcase \"id\":\n\t\t\t\t\tcase \"label\":\n\t\t\t\t\tcase \"description\":\n\t\t\t\t\tcase \"settingsId\":\n\t\t\t\t\tcase \"styleSheetContent\":\n\t\t\t\t\tcase \"watch\":\n\t\t\t\t\t\t(theme as any)[key] = data[key];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"location\":\n\t\t\t\t\t\t// ignore, no longer restore\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"extensionData\":\n\t\t\t\t\t\ttheme.extensionData = ExtensionData.fromJSONObject(\n\t\t\t\t\t\t\tdata.extensionData,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst { iconDefinitions, iconFontDefinitions } = data;\n\t\t\tif (\n\t\t\t\tArray.isArray(iconDefinitions) &&\n\t\t\t\tisObject(iconFontDefinitions)\n\t\t\t) {\n\t\t\t\tconst restoredIconDefinitions = new Map<\n\t\t\t\t\tstring,\n\t\t\t\t\tIconDefinition\n\t\t\t\t>();\n\t\t\t\tfor (const entry of iconDefinitions) {\n\t\t\t\t\tconst { id, fontCharacter, fontId } = entry;\n\t\t\t\t\tif (isString(id) && isString(fontCharacter)) {\n\t\t\t\t\t\tif (isString(fontId)) {\n\t\t\t\t\t\t\tconst iconFontDefinition =\n\t\t\t\t\t\t\t\tIconFontDefinition.fromJSONObject(\n\t\t\t\t\t\t\t\t\ticonFontDefinitions[fontId],\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (iconFontDefinition) {\n\t\t\t\t\t\t\t\trestoredIconDefinitions.set(id, {\n\t\t\t\t\t\t\t\t\tfontCharacter,\n\t\t\t\t\t\t\t\t\tfont: {\n\t\t\t\t\t\t\t\t\t\tid: fontId,\n\t\t\t\t\t\t\t\t\t\tdefinition: iconFontDefinition,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\trestoredIconDefinitions.set(id, { fontCharacter });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttheme.iconThemeDocument = {\n\t\t\t\t\ticonDefinitions: restoredIconDefinitions,\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn theme;\n\t\t} catch (e) {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\ttoStorage(storageService: IStorageService) {\n\t\tconst iconDefinitions = [];\n\t\tconst iconFontDefinitions: { [id: string]: IconFontDefinition } = {};\n\t\tfor (const entry of this.iconThemeDocument.iconDefinitions.entries()) {\n\t\t\tconst font = entry[1].font;\n\t\t\ticonDefinitions.push({\n\t\t\t\tid: entry[0],\n\t\t\t\tfontCharacter: entry[1].fontCharacter,\n\t\t\t\tfontId: font?.id,\n\t\t\t});\n\t\t\tif (font && iconFontDefinitions[font.id] === undefined) {\n\t\t\t\ticonFontDefinitions[font.id] = IconFontDefinition.toJSONObject(\n\t\t\t\t\tfont.definition,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tconst data = JSON.stringify({\n\t\t\tid: this.id,\n\t\t\tlabel: this.label,\n\t\t\tdescription: this.description,\n\t\t\tsettingsId: this.settingsId,\n\t\t\tstyleSheetContent: this.styleSheetContent,\n\t\t\twatch: this.watch,\n\t\t\textensionData: ExtensionData.toJSONObject(this.extensionData),\n\t\t\ticonDefinitions,\n\t\t\ticonFontDefinitions,\n\t\t});\n\t\tstorageService.store(\n\t\t\tProductIconThemeData.STORAGE_KEY,\n\t\t\tdata,\n\t\t\tStorageScope.PROFILE,\n\t\t\tStorageTarget.MACHINE,\n\t\t);\n\t}\n}\n\ninterface ProductIconThemeDocument {\n\ticonDefinitions: Map<string, IconDefinition>;\n}\n\nfunction _loadProductIconThemeDocument(\n\tfileService: IExtensionResourceLoaderService,\n\tlocation: URI,\n\twarnings: string[],\n): Promise<ProductIconThemeDocument> {\n\treturn fileService.readExtensionResource(location).then((content) => {\n\t\tconst parseErrors: Json.ParseError[] = [];\n\t\tconst contentValue = Json.parse(content, parseErrors);\n\t\tif (parseErrors.length > 0) {\n\t\t\treturn Promise.reject(\n\t\t\t\tnew Error(\n\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\"error.cannotparseicontheme\",\n\t\t\t\t\t\t\"Problems parsing product icons file: {0}\",\n\t\t\t\t\t\tparseErrors\n\t\t\t\t\t\t\t.map((e) => getParseErrorMessage(e.error))\n\t\t\t\t\t\t\t.join(\", \"),\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t);\n\t\t} else if (Json.getNodeType(contentValue) !== \"object\") {\n\t\t\treturn Promise.reject(\n\t\t\t\tnew Error(\n\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\"error.invalidformat\",\n\t\t\t\t\t\t\"Invalid format for product icons theme file: Object expected.\",\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t);\n\t\t} else if (\n\t\t\t!contentValue.iconDefinitions ||\n\t\t\t!Array.isArray(contentValue.fonts) ||\n\t\t\t!contentValue.fonts.length\n\t\t) {\n\t\t\treturn Promise.reject(\n\t\t\t\tnew Error(\n\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\"error.missingProperties\",\n\t\t\t\t\t\t\"Invalid format for product icons theme file: Must contain iconDefinitions and fonts.\",\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\tconst iconThemeDocumentLocationDirname = resources.dirname(location);\n\n\t\tconst sanitizedFonts: Map<string, IconFontDefinition> = new Map();\n\t\tfor (const font of contentValue.fonts) {\n\t\t\tif (isString(font.id) && font.id.match(fontIdRegex)) {\n\t\t\t\tconst fontId = font.id;\n\n\t\t\t\tlet fontWeight;\n\t\t\t\tif (\n\t\t\t\t\tisString(font.weight) &&\n\t\t\t\t\tfont.weight.match(fontWeightRegex)\n\t\t\t\t) {\n\t\t\t\t\tfontWeight = font.weight;\n\t\t\t\t} else {\n\t\t\t\t\twarnings.push(\n\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\"error.fontWeight\",\n\t\t\t\t\t\t\t\"Invalid font weight in font '{0}'. Ignoring setting.\",\n\t\t\t\t\t\t\tfont.id,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tlet fontStyle;\n\t\t\t\tif (isString(font.style) && font.style.match(fontStyleRegex)) {\n\t\t\t\t\tfontStyle = font.style;\n\t\t\t\t} else {\n\t\t\t\t\twarnings.push(\n\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\"error.fontStyle\",\n\t\t\t\t\t\t\t\"Invalid font style in font '{0}'. Ignoring setting.\",\n\t\t\t\t\t\t\tfont.id,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst sanitizedSrc: IconFontSource[] = [];\n\t\t\t\tif (Array.isArray(font.src)) {\n\t\t\t\t\tfor (const s of font.src) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tisString(s.path) &&\n\t\t\t\t\t\t\tisString(s.format) &&\n\t\t\t\t\t\t\ts.format.match(fontFormatRegex)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst iconFontLocation = resources.joinPath(\n\t\t\t\t\t\t\t\ticonThemeDocumentLocationDirname,\n\t\t\t\t\t\t\t\ts.path,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tsanitizedSrc.push({\n\t\t\t\t\t\t\t\tlocation: iconFontLocation,\n\t\t\t\t\t\t\t\tformat: s.format,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twarnings.push(\n\t\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\t\"error.fontSrc\",\n\t\t\t\t\t\t\t\t\t\"Invalid font source in font '{0}'. Ignoring source.\",\n\t\t\t\t\t\t\t\t\tfont.id,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (sanitizedSrc.length) {\n\t\t\t\t\tsanitizedFonts.set(fontId, {\n\t\t\t\t\t\tweight: fontWeight,\n\t\t\t\t\t\tstyle: fontStyle,\n\t\t\t\t\t\tsrc: sanitizedSrc,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\twarnings.push(\n\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\"error.noFontSrc\",\n\t\t\t\t\t\t\t\"No valid font source in font '{0}'. Ignoring font definition.\",\n\t\t\t\t\t\t\tfont.id,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twarnings.push(\n\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\"error.fontId\",\n\t\t\t\t\t\t\"Missing or invalid font id '{0}'. Skipping font definition.\",\n\t\t\t\t\t\tfont.id,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tconst iconDefinitions = new Map<string, IconDefinition>();\n\n\t\tconst primaryFontId = contentValue.fonts[0].id as string;\n\n\t\tfor (const iconId in contentValue.iconDefinitions) {\n\t\t\tconst definition = contentValue.iconDefinitions[iconId];\n\t\t\tif (isString(definition.fontCharacter)) {\n\t\t\t\tconst fontId = definition.fontId ?? primaryFontId;\n\t\t\t\tconst fontDefinition = sanitizedFonts.get(fontId);\n\t\t\t\tif (fontDefinition) {\n\t\t\t\t\tconst font = {\n\t\t\t\t\t\tid: `pi-${fontId}`,\n\t\t\t\t\t\tdefinition: fontDefinition,\n\t\t\t\t\t};\n\t\t\t\t\ticonDefinitions.set(iconId, {\n\t\t\t\t\t\tfontCharacter: definition.fontCharacter,\n\t\t\t\t\t\tfont,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\twarnings.push(\n\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\"error.icon.font\",\n\t\t\t\t\t\t\t\"Skipping icon definition '{0}'. Unknown font.\",\n\t\t\t\t\t\t\ticonId,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twarnings.push(\n\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\"error.icon.fontCharacter\",\n\t\t\t\t\t\t\"Skipping icon definition '{0}'. Unknown fontCharacter.\",\n\t\t\t\t\t\ticonId,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn { iconDefinitions };\n\t});\n}\n\nconst iconRegistry = getIconRegistry();\n\nfunction _resolveIconDefinition(\n\ticonContribution: IconContribution,\n\ticonThemeDocument: ProductIconThemeDocument,\n): IconDefinition | undefined {\n\tconst iconDefinitions = iconThemeDocument.iconDefinitions;\n\tlet definition: IconDefinition | undefined = iconDefinitions.get(\n\t\ticonContribution.id,\n\t);\n\tlet defaults = iconContribution.defaults;\n\twhile (!definition && ThemeIcon.isThemeIcon(defaults)) {\n\t\t// look if an inherited icon has a definition\n\t\tconst ic = iconRegistry.getIcon(defaults.id);\n\t\tif (ic) {\n\t\t\tdefinition = iconDefinitions.get(ic.id);\n\t\t\tdefaults = ic.defaults;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\tif (definition) {\n\t\treturn definition;\n\t}\n\tif (!ThemeIcon.isThemeIcon(defaults)) {\n\t\treturn defaults;\n\t}\n\treturn undefined;\n}\n"],
  "mappings": "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",
  "names": []
}
