{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/themes/browser/productIconThemeData.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from '../../../../base/common/uri.js';\nimport * as nls from '../../../../nls.js';\nimport * as Paths from '../../../../base/common/path.js';\nimport * as resources from '../../../../base/common/resources.js';\nimport * as Json from '../../../../base/common/json.js';\nimport { ExtensionData, IThemeExtensionPoint, IWorkbenchProductIconTheme, ThemeSettingDefaults } from '../common/workbenchThemeService.js';\nimport { getParseErrorMessage } from '../../../../base/common/jsonErrorMessages.js';\nimport { IStorageService, StorageScope, StorageTarget } from '../../../../platform/storage/common/storage.js';\nimport { fontIdRegex, fontWeightRegex, fontStyleRegex, fontFormatRegex } from '../common/productIconThemeSchema.js';\nimport { isObject, isString } from '../../../../base/common/types.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { IconDefinition, getIconRegistry, IconContribution, IconFontDefinition, IconFontSource } from '../../../../platform/theme/common/iconRegistry.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { IExtensionResourceLoaderService } from '../../../../platform/extensionResourceLoader/common/extensionResourceLoader.js';\n\nexport const DEFAULT_PRODUCT_ICON_THEME_ID = ''; // TODO\n\nexport class ProductIconThemeData implements IWorkbenchProductIconTheme {\n\n\tstatic readonly STORAGE_KEY = 'productIconThemeData';\n\n\tid: string;\n\tlabel: string;\n\tsettingsId: string;\n\tdescription?: string;\n\tisLoaded: boolean;\n\tlocation?: URI;\n\textensionData?: ExtensionData;\n\twatch?: boolean;\n\n\ticonThemeDocument: ProductIconThemeDocument = { iconDefinitions: new Map() };\n\tstyleSheetContent?: string;\n\n\tprivate constructor(id: string, label: string, settingsId: string) {\n\t\tthis.id = id;\n\t\tthis.label = label;\n\t\tthis.settingsId = settingsId;\n\t\tthis.isLoaded = false;\n\t}\n\n\tpublic getIcon(iconContribution: IconContribution): IconDefinition | undefined {\n\t\treturn _resolveIconDefinition(iconContribution, this.iconThemeDocument);\n\t}\n\n\tpublic ensureLoaded(fileService: IExtensionResourceLoaderService, logService: ILogService): Promise<string | undefined> {\n\t\treturn !this.isLoaded ? this.load(fileService, logService) : Promise.resolve(this.styleSheetContent);\n\t}\n\n\tpublic reload(fileService: IExtensionResourceLoaderService, logService: ILogService): Promise<string | undefined> {\n\t\treturn this.load(fileService, logService);\n\t}\n\n\tprivate async load(fileService: IExtensionResourceLoaderService, logService: ILogService): Promise<string | undefined> {\n\t\tconst location = this.location;\n\t\tif (!location) {\n\t\t\treturn Promise.resolve(this.styleSheetContent);\n\t\t}\n\t\tconst warnings: string[] = [];\n\t\tthis.iconThemeDocument = await _loadProductIconThemeDocument(fileService, location, warnings);\n\t\tthis.isLoaded = true;\n\t\tif (warnings.length) {\n\t\t\tlogService.error(nls.localize('error.parseicondefs', \"Problems processing product icons definitions in {0}:\\n{1}\", location.toString(), warnings.join('\\n')));\n\t\t}\n\t\treturn this.styleSheetContent;\n\t}\n\n\tstatic fromExtensionTheme(iconTheme: IThemeExtensionPoint, iconThemeLocation: URI, extensionData: ExtensionData): ProductIconThemeData {\n\t\tconst id = extensionData.extensionId + '-' + iconTheme.id;\n\t\tconst label = iconTheme.label || Paths.basename(iconTheme.path);\n\t\tconst settingsId = iconTheme.id;\n\n\t\tconst themeData = new ProductIconThemeData(id, label, settingsId);\n\n\t\tthemeData.description = iconTheme.description;\n\t\tthemeData.location = iconThemeLocation;\n\t\tthemeData.extensionData = extensionData;\n\t\tthemeData.watch = iconTheme._watch;\n\t\tthemeData.isLoaded = false;\n\t\treturn themeData;\n\t}\n\n\tstatic createUnloadedTheme(id: string): ProductIconThemeData {\n\t\tconst themeData = new ProductIconThemeData(id, '', '__' + id);\n\t\tthemeData.isLoaded = false;\n\t\tthemeData.extensionData = undefined;\n\t\tthemeData.watch = false;\n\t\treturn themeData;\n\t}\n\n\tprivate static _defaultProductIconTheme: ProductIconThemeData | null = null;\n\n\tstatic get defaultTheme(): ProductIconThemeData {\n\t\tlet themeData = ProductIconThemeData._defaultProductIconTheme;\n\t\tif (!themeData) {\n\t\t\tthemeData = ProductIconThemeData._defaultProductIconTheme = new ProductIconThemeData(DEFAULT_PRODUCT_ICON_THEME_ID, nls.localize('defaultTheme', 'Default'), ThemeSettingDefaults.PRODUCT_ICON_THEME);\n\t\t\tthemeData.isLoaded = true;\n\t\t\tthemeData.extensionData = undefined;\n\t\t\tthemeData.watch = false;\n\t\t}\n\t\treturn themeData;\n\t}\n\n\tstatic fromStorageData(storageService: IStorageService): ProductIconThemeData | undefined {\n\t\tconst input = storageService.get(ProductIconThemeData.STORAGE_KEY, StorageScope.PROFILE);\n\t\tif (!input) {\n\t\t\treturn undefined;\n\t\t}\n\t\ttry {\n\t\t\tconst data = JSON.parse(input);\n\t\t\tconst theme = new ProductIconThemeData('', '', '');\n\t\t\tfor (const key in data) {\n\t\t\t\tswitch (key) {\n\t\t\t\t\tcase 'id':\n\t\t\t\t\tcase 'label':\n\t\t\t\t\tcase 'description':\n\t\t\t\t\tcase 'settingsId':\n\t\t\t\t\tcase 'styleSheetContent':\n\t\t\t\t\tcase 'watch':\n\t\t\t\t\t\t(theme as any)[key] = data[key];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'location':\n\t\t\t\t\t\t// ignore, no longer restore\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'extensionData':\n\t\t\t\t\t\ttheme.extensionData = ExtensionData.fromJSONObject(data.extensionData);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst { iconDefinitions, iconFontDefinitions } = data;\n\t\t\tif (Array.isArray(iconDefinitions) && isObject(iconFontDefinitions)) {\n\t\t\t\tconst restoredIconDefinitions = new Map<string, IconDefinition>();\n\t\t\t\tfor (const entry of iconDefinitions) {\n\t\t\t\t\tconst { id, fontCharacter, fontId } = entry;\n\t\t\t\t\tif (isString(id) && isString(fontCharacter)) {\n\t\t\t\t\t\tif (isString(fontId)) {\n\t\t\t\t\t\t\tconst iconFontDefinition = IconFontDefinition.fromJSONObject(iconFontDefinitions[fontId]);\n\t\t\t\t\t\t\tif (iconFontDefinition) {\n\t\t\t\t\t\t\t\trestoredIconDefinitions.set(id, { fontCharacter, font: { id: fontId, definition: iconFontDefinition } });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\trestoredIconDefinitions.set(id, { fontCharacter });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttheme.iconThemeDocument = { iconDefinitions: restoredIconDefinitions };\n\t\t\t}\n\t\t\treturn theme;\n\t\t} catch (e) {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\ttoStorage(storageService: IStorageService) {\n\t\tconst iconDefinitions = [];\n\t\tconst iconFontDefinitions: { [id: string]: IconFontDefinition } = {};\n\t\tfor (const entry of this.iconThemeDocument.iconDefinitions.entries()) {\n\t\t\tconst font = entry[1].font;\n\t\t\ticonDefinitions.push({ id: entry[0], fontCharacter: entry[1].fontCharacter, fontId: font?.id });\n\t\t\tif (font && iconFontDefinitions[font.id] === undefined) {\n\t\t\t\ticonFontDefinitions[font.id] = IconFontDefinition.toJSONObject(font.definition);\n\t\t\t}\n\t\t}\n\t\tconst data = JSON.stringify({\n\t\t\tid: this.id,\n\t\t\tlabel: this.label,\n\t\t\tdescription: this.description,\n\t\t\tsettingsId: this.settingsId,\n\t\t\tstyleSheetContent: this.styleSheetContent,\n\t\t\twatch: this.watch,\n\t\t\textensionData: ExtensionData.toJSONObject(this.extensionData),\n\t\t\ticonDefinitions,\n\t\t\ticonFontDefinitions\n\t\t});\n\t\tstorageService.store(ProductIconThemeData.STORAGE_KEY, data, StorageScope.PROFILE, StorageTarget.MACHINE);\n\t}\n}\n\ninterface ProductIconThemeDocument {\n\ticonDefinitions: Map<string, IconDefinition>;\n}\n\nfunction _loadProductIconThemeDocument(fileService: IExtensionResourceLoaderService, location: URI, warnings: string[]): Promise<ProductIconThemeDocument> {\n\treturn fileService.readExtensionResource(location).then((content) => {\n\t\tconst parseErrors: Json.ParseError[] = [];\n\t\tconst contentValue = Json.parse(content, parseErrors);\n\t\tif (parseErrors.length > 0) {\n\t\t\treturn Promise.reject(new Error(nls.localize('error.cannotparseicontheme', \"Problems parsing product icons file: {0}\", parseErrors.map(e => getParseErrorMessage(e.error)).join(', '))));\n\t\t} else if (Json.getNodeType(contentValue) !== 'object') {\n\t\t\treturn Promise.reject(new Error(nls.localize('error.invalidformat', \"Invalid format for product icons theme file: Object expected.\")));\n\t\t} else if (!contentValue.iconDefinitions || !Array.isArray(contentValue.fonts) || !contentValue.fonts.length) {\n\t\t\treturn Promise.reject(new Error(nls.localize('error.missingProperties', \"Invalid format for product icons theme file: Must contain iconDefinitions and fonts.\")));\n\t\t}\n\n\t\tconst iconThemeDocumentLocationDirname = resources.dirname(location);\n\n\t\tconst sanitizedFonts: Map<string, IconFontDefinition> = new Map();\n\t\tfor (const font of contentValue.fonts) {\n\t\t\tif (isString(font.id) && font.id.match(fontIdRegex)) {\n\t\t\t\tconst fontId = font.id;\n\n\t\t\t\tlet fontWeight = undefined;\n\t\t\t\tif (isString(font.weight) && font.weight.match(fontWeightRegex)) {\n\t\t\t\t\tfontWeight = font.weight;\n\t\t\t\t} else {\n\t\t\t\t\twarnings.push(nls.localize('error.fontWeight', 'Invalid font weight in font \\'{0}\\'. Ignoring setting.', font.id));\n\t\t\t\t}\n\n\t\t\t\tlet fontStyle = undefined;\n\t\t\t\tif (isString(font.style) && font.style.match(fontStyleRegex)) {\n\t\t\t\t\tfontStyle = font.style;\n\t\t\t\t} else {\n\t\t\t\t\twarnings.push(nls.localize('error.fontStyle', 'Invalid font style in font \\'{0}\\'. Ignoring setting.', font.id));\n\t\t\t\t}\n\n\t\t\t\tconst sanitizedSrc: IconFontSource[] = [];\n\t\t\t\tif (Array.isArray(font.src)) {\n\t\t\t\t\tfor (const s of font.src) {\n\t\t\t\t\t\tif (isString(s.path) && isString(s.format) && s.format.match(fontFormatRegex)) {\n\t\t\t\t\t\t\tconst iconFontLocation = resources.joinPath(iconThemeDocumentLocationDirname, s.path);\n\t\t\t\t\t\t\tsanitizedSrc.push({ location: iconFontLocation, format: s.format });\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twarnings.push(nls.localize('error.fontSrc', 'Invalid font source in font \\'{0}\\'. Ignoring source.', font.id));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (sanitizedSrc.length) {\n\t\t\t\t\tsanitizedFonts.set(fontId, { weight: fontWeight, style: fontStyle, src: sanitizedSrc });\n\t\t\t\t} else {\n\t\t\t\t\twarnings.push(nls.localize('error.noFontSrc', 'No valid font source in font \\'{0}\\'. Ignoring font definition.', font.id));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twarnings.push(nls.localize('error.fontId', 'Missing or invalid font id \\'{0}\\'. Skipping font definition.', font.id));\n\t\t\t}\n\t\t}\n\n\n\t\tconst iconDefinitions = new Map<string, IconDefinition>();\n\n\t\tconst primaryFontId = contentValue.fonts[0].id as string;\n\n\t\tfor (const iconId in contentValue.iconDefinitions) {\n\t\t\tconst definition = contentValue.iconDefinitions[iconId];\n\t\t\tif (isString(definition.fontCharacter)) {\n\t\t\t\tconst fontId = definition.fontId ?? primaryFontId;\n\t\t\t\tconst fontDefinition = sanitizedFonts.get(fontId);\n\t\t\t\tif (fontDefinition) {\n\n\t\t\t\t\tconst font = { id: `pi-${fontId}`, definition: fontDefinition };\n\t\t\t\t\ticonDefinitions.set(iconId, { fontCharacter: definition.fontCharacter, font });\n\t\t\t\t} else {\n\t\t\t\t\twarnings.push(nls.localize('error.icon.font', 'Skipping icon definition \\'{0}\\'. Unknown font.', iconId));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twarnings.push(nls.localize('error.icon.fontCharacter', 'Skipping icon definition \\'{0}\\'. Unknown fontCharacter.', iconId));\n\t\t\t}\n\t\t}\n\t\treturn { iconDefinitions };\n\t});\n}\n\nconst iconRegistry = getIconRegistry();\n\nfunction _resolveIconDefinition(iconContribution: IconContribution, iconThemeDocument: ProductIconThemeDocument): IconDefinition | undefined {\n\tconst iconDefinitions = iconThemeDocument.iconDefinitions;\n\tlet definition: IconDefinition | undefined = iconDefinitions.get(iconContribution.id);\n\tlet defaults = iconContribution.defaults;\n\twhile (!definition && ThemeIcon.isThemeIcon(defaults)) {\n\t\t// look if an inherited icon has a definition\n\t\tconst ic = iconRegistry.getIcon(defaults.id);\n\t\tif (ic) {\n\t\t\tdefinition = iconDefinitions.get(ic.id);\n\t\t\tdefaults = ic.defaults;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\tif (definition) {\n\t\treturn definition;\n\t}\n\tif (!ThemeIcon.isThemeIcon(defaults)) {\n\t\treturn defaults;\n\t}\n\treturn undefined;\n}\n"],
  "mappings": "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",
  "names": []
}
