{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/themes/common/textMateScopeMatcher.ts"],
  "sourcesContent": ["export interface MatcherWithPriority<T> {\n\tmatcher: Matcher<T>;\n\tpriority: -1 | 0 | 1;\n}\n\nexport interface Matcher<T> {\n\t(matcherInput: T): number;\n}\n\nexport function createMatchers<T>(\n\tselector: string,\n\tmatchesName: (names: string[], matcherInput: T) => number,\n\tresults: MatcherWithPriority<T>[],\n): void {\n\tconst tokenizer = newTokenizer(selector);\n\tlet token = tokenizer.next();\n\twhile (token !== null) {\n\t\tlet priority: -1 | 0 | 1 = 0;\n\t\tif (token.length === 2 && token.charAt(1) === \":\") {\n\t\t\tswitch (token.charAt(0)) {\n\t\t\t\tcase \"R\":\n\t\t\t\t\tpriority = 1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"L\":\n\t\t\t\t\tpriority = -1;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(`Unknown priority ${token} in scope selector`);\n\t\t\t}\n\t\t\ttoken = tokenizer.next();\n\t\t}\n\t\tconst matcher = parseConjunction();\n\t\tif (matcher) {\n\t\t\tresults.push({ matcher, priority });\n\t\t}\n\t\tif (token !== \",\") {\n\t\t\tbreak;\n\t\t}\n\t\ttoken = tokenizer.next();\n\t}\n\n\tfunction parseOperand(): Matcher<T> | null {\n\t\tif (token === \"-\") {\n\t\t\ttoken = tokenizer.next();\n\t\t\tconst expressionToNegate = parseOperand();\n\t\t\tif (!expressionToNegate) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn (matcherInput) => {\n\t\t\t\tconst score = expressionToNegate(matcherInput);\n\t\t\t\treturn score < 0 ? 0 : -1;\n\t\t\t};\n\t\t}\n\t\tif (token === \"(\") {\n\t\t\ttoken = tokenizer.next();\n\t\t\tconst expressionInParents = parseInnerExpression();\n\t\t\tif (token === \")\") {\n\t\t\t\ttoken = tokenizer.next();\n\t\t\t}\n\t\t\treturn expressionInParents;\n\t\t}\n\t\tif (isIdentifier(token)) {\n\t\t\tconst identifiers: string[] = [];\n\t\t\tdo {\n\t\t\t\tidentifiers.push(token);\n\t\t\t\ttoken = tokenizer.next();\n\t\t\t} while (isIdentifier(token));\n\t\t\treturn (matcherInput) => matchesName(identifiers, matcherInput);\n\t\t}\n\t\treturn null;\n\t}\n\tfunction parseConjunction(): Matcher<T> | null {\n\t\tlet matcher = parseOperand();\n\t\tif (!matcher) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst matchers: Matcher<T>[] = [];\n\t\twhile (matcher) {\n\t\t\tmatchers.push(matcher);\n\t\t\tmatcher = parseOperand();\n\t\t}\n\t\treturn (matcherInput) => {\n\t\t\t// and\n\t\t\tlet min = matchers[0](matcherInput);\n\t\t\tfor (let i = 1; min >= 0 && i < matchers.length; i++) {\n\t\t\t\tmin = Math.min(min, matchers[i](matcherInput));\n\t\t\t}\n\t\t\treturn min;\n\t\t};\n\t}\n\tfunction parseInnerExpression(): Matcher<T> | null {\n\t\tlet matcher = parseConjunction();\n\t\tif (!matcher) {\n\t\t\treturn null;\n\t\t}\n\t\tconst matchers: Matcher<T>[] = [];\n\t\twhile (matcher) {\n\t\t\tmatchers.push(matcher);\n\t\t\tif (token === \"|\" || token === \",\") {\n\t\t\t\tdo {\n\t\t\t\t\ttoken = tokenizer.next();\n\t\t\t\t} while (token === \"|\" || token === \",\"); // ignore subsequent commas\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmatcher = parseConjunction();\n\t\t}\n\t\treturn (matcherInput) => {\n\t\t\t// or\n\t\t\tlet max = matchers[0](matcherInput);\n\t\t\tfor (let i = 1; i < matchers.length; i++) {\n\t\t\t\tmax = Math.max(max, matchers[i](matcherInput));\n\t\t\t}\n\t\t\treturn max;\n\t\t};\n\t}\n}\n\nfunction isIdentifier(token: string | null): token is string {\n\treturn !!token && !!token.match(/[\\w.:]+/);\n}\n\nfunction newTokenizer(input: string): { next: () => string | null } {\n\tconst regex = /([LR]:|[\\w.:][\\w.:-]*|[,|\\-()])/g;\n\tlet match = regex.exec(input);\n\treturn {\n\t\tnext: () => {\n\t\t\tif (!match) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tconst res = match[0];\n\t\t\tmatch = regex.exec(input);\n\t\t\treturn res;\n\t\t},\n\t};\n}\n"],
  "mappings": ";;AASO,SAAS,eACf,UACA,aACA,SACO;AACP,QAAM,YAAY,aAAa,QAAQ;AACvC,MAAI,QAAQ,UAAU,KAAK;AAC3B,SAAO,UAAU,MAAM;AACtB,QAAI,WAAuB;AAC3B,QAAI,MAAM,WAAW,KAAK,MAAM,OAAO,CAAC,MAAM,KAAK;AAClD,cAAQ,MAAM,OAAO,CAAC,GAAG;AAAA,QACxB,KAAK;AACJ,qBAAW;AACX;AAAA,QACD,KAAK;AACJ,qBAAW;AACX;AAAA,QACD;AACC,kBAAQ,IAAI,oBAAoB,KAAK,oBAAoB;AAAA,MAC3D;AACA,cAAQ,UAAU,KAAK;AAAA,IACxB;AACA,UAAM,UAAU,iBAAiB;AACjC,QAAI,SAAS;AACZ,cAAQ,KAAK,EAAE,SAAS,SAAS,CAAC;AAAA,IACnC;AACA,QAAI,UAAU,KAAK;AAClB;AAAA,IACD;AACA,YAAQ,UAAU,KAAK;AAAA,EACxB;AAEA,WAAS,eAAkC;AAC1C,QAAI,UAAU,KAAK;AAClB,cAAQ,UAAU,KAAK;AACvB,YAAM,qBAAqB,aAAa;AACxC,UAAI,CAAC,oBAAoB;AACxB,eAAO;AAAA,MACR;AACA,aAAO,CAAC,iBAAiB;AACxB,cAAM,QAAQ,mBAAmB,YAAY;AAC7C,eAAO,QAAQ,IAAI,IAAI;AAAA,MACxB;AAAA,IACD;AACA,QAAI,UAAU,KAAK;AAClB,cAAQ,UAAU,KAAK;AACvB,YAAM,sBAAsB,qBAAqB;AACjD,UAAI,UAAU,KAAK;AAClB,gBAAQ,UAAU,KAAK;AAAA,MACxB;AACA,aAAO;AAAA,IACR;AACA,QAAI,aAAa,KAAK,GAAG;AACxB,YAAM,cAAwB,CAAC;AAC/B,SAAG;AACF,oBAAY,KAAK,KAAK;AACtB,gBAAQ,UAAU,KAAK;AAAA,MACxB,SAAS,aAAa,KAAK;AAC3B,aAAO,CAAC,iBAAiB,YAAY,aAAa,YAAY;AAAA,IAC/D;AACA,WAAO;AAAA,EACR;AA7BS;AA8BT,WAAS,mBAAsC;AAC9C,QAAI,UAAU,aAAa;AAC3B,QAAI,CAAC,SAAS;AACb,aAAO;AAAA,IACR;AAEA,UAAM,WAAyB,CAAC;AAChC,WAAO,SAAS;AACf,eAAS,KAAK,OAAO;AACrB,gBAAU,aAAa;AAAA,IACxB;AACA,WAAO,CAAC,iBAAiB;AAExB,UAAI,MAAM,SAAS,CAAC,EAAE,YAAY;AAClC,eAAS,IAAI,GAAG,OAAO,KAAK,IAAI,SAAS,QAAQ,KAAK;AACrD,cAAM,KAAK,IAAI,KAAK,SAAS,CAAC,EAAE,YAAY,CAAC;AAAA,MAC9C;AACA,aAAO;AAAA,IACR;AAAA,EACD;AAnBS;AAoBT,WAAS,uBAA0C;AAClD,QAAI,UAAU,iBAAiB;AAC/B,QAAI,CAAC,SAAS;AACb,aAAO;AAAA,IACR;AACA,UAAM,WAAyB,CAAC;AAChC,WAAO,SAAS;AACf,eAAS,KAAK,OAAO;AACrB,UAAI,UAAU,OAAO,UAAU,KAAK;AACnC,WAAG;AACF,kBAAQ,UAAU,KAAK;AAAA,QACxB,SAAS,UAAU,OAAO,UAAU;AAAA,MACrC,OAAO;AACN;AAAA,MACD;AACA,gBAAU,iBAAiB;AAAA,IAC5B;AACA,WAAO,CAAC,iBAAiB;AAExB,UAAI,MAAM,SAAS,CAAC,EAAE,YAAY;AAClC,eAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACzC,cAAM,KAAK,IAAI,KAAK,SAAS,CAAC,EAAE,YAAY,CAAC;AAAA,MAC9C;AACA,aAAO;AAAA,IACR;AAAA,EACD;AAzBS;AA0BV;AA5GgB;AA8GhB,SAAS,aAAa,OAAuC;AAC5D,SAAO,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,MAAM,SAAS;AAC1C;AAFS;AAIT,SAAS,aAAa,OAA8C;AACnE,QAAM,QAAQ;AACd,MAAI,QAAQ,MAAM,KAAK,KAAK;AAC5B,SAAO;AAAA,IACN,MAAM,6BAAM;AACX,UAAI,CAAC,OAAO;AACX,eAAO;AAAA,MACR;AACA,YAAM,MAAM,MAAM,CAAC;AACnB,cAAQ,MAAM,KAAK,KAAK;AACxB,aAAO;AAAA,IACR,GAPM;AAAA,EAQP;AACD;AAbS;",
  "names": []
}
