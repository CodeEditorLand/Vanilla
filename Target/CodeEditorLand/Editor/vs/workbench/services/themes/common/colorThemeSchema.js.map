{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/themes/common/colorThemeSchema.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { Extensions as JSONExtensions, IJSONContributionRegistry } from '../../../../platform/jsonschemas/common/jsonContributionRegistry.js';\nimport { IJSONSchema } from '../../../../base/common/jsonSchema.js';\n\nimport { workbenchColorsSchemaId } from '../../../../platform/theme/common/colorRegistry.js';\nimport { tokenStylingSchemaId } from '../../../../platform/theme/common/tokenClassificationRegistry.js';\n\nconst textMateScopes = [\n\t'comment',\n\t'comment.block',\n\t'comment.block.documentation',\n\t'comment.line',\n\t'constant',\n\t'constant.character',\n\t'constant.character.escape',\n\t'constant.numeric',\n\t'constant.numeric.integer',\n\t'constant.numeric.float',\n\t'constant.numeric.hex',\n\t'constant.numeric.octal',\n\t'constant.other',\n\t'constant.regexp',\n\t'constant.rgb-value',\n\t'emphasis',\n\t'entity',\n\t'entity.name',\n\t'entity.name.class',\n\t'entity.name.function',\n\t'entity.name.method',\n\t'entity.name.section',\n\t'entity.name.selector',\n\t'entity.name.tag',\n\t'entity.name.type',\n\t'entity.other',\n\t'entity.other.attribute-name',\n\t'entity.other.inherited-class',\n\t'invalid',\n\t'invalid.deprecated',\n\t'invalid.illegal',\n\t'keyword',\n\t'keyword.control',\n\t'keyword.operator',\n\t'keyword.operator.new',\n\t'keyword.operator.assignment',\n\t'keyword.operator.arithmetic',\n\t'keyword.operator.logical',\n\t'keyword.other',\n\t'markup',\n\t'markup.bold',\n\t'markup.changed',\n\t'markup.deleted',\n\t'markup.heading',\n\t'markup.inline.raw',\n\t'markup.inserted',\n\t'markup.italic',\n\t'markup.list',\n\t'markup.list.numbered',\n\t'markup.list.unnumbered',\n\t'markup.other',\n\t'markup.quote',\n\t'markup.raw',\n\t'markup.underline',\n\t'markup.underline.link',\n\t'meta',\n\t'meta.block',\n\t'meta.cast',\n\t'meta.class',\n\t'meta.function',\n\t'meta.function-call',\n\t'meta.preprocessor',\n\t'meta.return-type',\n\t'meta.selector',\n\t'meta.tag',\n\t'meta.type.annotation',\n\t'meta.type',\n\t'punctuation.definition.string.begin',\n\t'punctuation.definition.string.end',\n\t'punctuation.separator',\n\t'punctuation.separator.continuation',\n\t'punctuation.terminator',\n\t'storage',\n\t'storage.modifier',\n\t'storage.type',\n\t'string',\n\t'string.interpolated',\n\t'string.other',\n\t'string.quoted',\n\t'string.quoted.double',\n\t'string.quoted.other',\n\t'string.quoted.single',\n\t'string.quoted.triple',\n\t'string.regexp',\n\t'string.unquoted',\n\t'strong',\n\t'support',\n\t'support.class',\n\t'support.constant',\n\t'support.function',\n\t'support.other',\n\t'support.type',\n\t'support.type.property-name',\n\t'support.variable',\n\t'variable',\n\t'variable.language',\n\t'variable.name',\n\t'variable.other',\n\t'variable.other.readwrite',\n\t'variable.parameter'\n];\n\nexport const textmateColorsSchemaId = 'vscode://schemas/textmate-colors';\nexport const textmateColorGroupSchemaId = `${textmateColorsSchemaId}#/definitions/colorGroup`;\n\nconst textmateColorSchema: IJSONSchema = {\n\ttype: 'array',\n\tdefinitions: {\n\t\tcolorGroup: {\n\t\t\tdefault: '#FF0000',\n\t\t\tanyOf: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tformat: 'color-hex'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t$ref: '#/definitions/settings'\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\tsettings: {\n\t\t\ttype: 'object',\n\t\t\tdescription: nls.localize('schema.token.settings', 'Colors and styles for the token.'),\n\t\t\tproperties: {\n\t\t\t\tforeground: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdescription: nls.localize('schema.token.foreground', 'Foreground color for the token.'),\n\t\t\t\t\tformat: 'color-hex',\n\t\t\t\t\tdefault: '#ff0000'\n\t\t\t\t},\n\t\t\t\tbackground: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdeprecationMessage: nls.localize('schema.token.background.warning', 'Token background colors are currently not supported.')\n\t\t\t\t},\n\t\t\t\tfontStyle: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdescription: nls.localize('schema.token.fontStyle', 'Font style of the rule: \\'italic\\', \\'bold\\', \\'underline\\', \\'strikethrough\\' or a combination. The empty string unsets inherited settings.'),\n\t\t\t\t\tpattern: '^(\\\\s*\\\\b(italic|bold|underline|strikethrough))*\\\\s*$',\n\t\t\t\t\tpatternErrorMessage: nls.localize('schema.fontStyle.error', 'Font style must be \\'italic\\', \\'bold\\', \\'underline\\', \\'strikethrough\\' or a combination or the empty string.'),\n\t\t\t\t\tdefaultSnippets: [\n\t\t\t\t\t\t{ label: nls.localize('schema.token.fontStyle.none', 'None (clear inherited style)'), bodyText: '\"\"' },\n\t\t\t\t\t\t{ body: 'italic' },\n\t\t\t\t\t\t{ body: 'bold' },\n\t\t\t\t\t\t{ body: 'underline' },\n\t\t\t\t\t\t{ body: 'strikethrough' },\n\t\t\t\t\t\t{ body: 'italic bold' },\n\t\t\t\t\t\t{ body: 'italic underline' },\n\t\t\t\t\t\t{ body: 'italic strikethrough' },\n\t\t\t\t\t\t{ body: 'bold underline' },\n\t\t\t\t\t\t{ body: 'bold strikethrough' },\n\t\t\t\t\t\t{ body: 'underline strikethrough' },\n\t\t\t\t\t\t{ body: 'italic bold underline' },\n\t\t\t\t\t\t{ body: 'italic bold strikethrough' },\n\t\t\t\t\t\t{ body: 'italic underline strikethrough' },\n\t\t\t\t\t\t{ body: 'bold underline strikethrough' },\n\t\t\t\t\t\t{ body: 'italic bold underline strikethrough' }\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\tadditionalProperties: false,\n\t\t\tdefaultSnippets: [{ body: { foreground: '${1:#FF0000}', fontStyle: '${2:bold}' } }]\n\t\t}\n\t},\n\titems: {\n\t\ttype: 'object',\n\t\tdefaultSnippets: [{ body: { scope: '${1:keyword.operator}', settings: { foreground: '${2:#FF0000}' } } }],\n\t\tproperties: {\n\t\t\tname: {\n\t\t\t\ttype: 'string',\n\t\t\t\tdescription: nls.localize('schema.properties.name', 'Description of the rule.')\n\t\t\t},\n\t\t\tscope: {\n\t\t\t\tdescription: nls.localize('schema.properties.scope', 'Scope selector against which this rule matches.'),\n\t\t\t\tanyOf: [\n\t\t\t\t\t{\n\t\t\t\t\t\tenum: textMateScopes\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'array',\n\t\t\t\t\t\titems: {\n\t\t\t\t\t\t\tenum: textMateScopes\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'array',\n\t\t\t\t\t\titems: {\n\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\tsettings: {\n\t\t\t\t$ref: '#/definitions/settings'\n\t\t\t}\n\t\t},\n\t\trequired: [\n\t\t\t'settings'\n\t\t],\n\t\tadditionalProperties: false\n\t}\n};\n\nexport const colorThemeSchemaId = 'vscode://schemas/color-theme';\n\nconst colorThemeSchema: IJSONSchema = {\n\ttype: 'object',\n\tallowComments: true,\n\tallowTrailingCommas: true,\n\tproperties: {\n\t\tcolors: {\n\t\t\tdescription: nls.localize('schema.workbenchColors', 'Colors in the workbench'),\n\t\t\t$ref: workbenchColorsSchemaId,\n\t\t\tadditionalProperties: false\n\t\t},\n\t\ttokenColors: {\n\t\t\tanyOf: [{\n\t\t\t\ttype: 'string',\n\t\t\t\tdescription: nls.localize('schema.tokenColors.path', 'Path to a tmTheme file (relative to the current file).')\n\t\t\t},\n\t\t\t{\n\t\t\t\tdescription: nls.localize('schema.colors', 'Colors for syntax highlighting'),\n\t\t\t\t$ref: textmateColorsSchemaId\n\t\t\t}\n\t\t\t]\n\t\t},\n\t\tsemanticHighlighting: {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: nls.localize('schema.supportsSemanticHighlighting', 'Whether semantic highlighting should be enabled for this theme.')\n\t\t},\n\t\tsemanticTokenColors: {\n\t\t\ttype: 'object',\n\t\t\tdescription: nls.localize('schema.semanticTokenColors', 'Colors for semantic tokens'),\n\t\t\t$ref: tokenStylingSchemaId\n\t\t}\n\t}\n};\n\n\n\nexport function registerColorThemeSchemas() {\n\tconst schemaRegistry = Registry.as<IJSONContributionRegistry>(JSONExtensions.JSONContribution);\n\tschemaRegistry.registerSchema(colorThemeSchemaId, colorThemeSchema);\n\tschemaRegistry.registerSchema(textmateColorsSchemaId, textmateColorSchema);\n}\n"],
  "mappings": "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",
  "names": []
}
