{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/themes/common/themeConfiguration.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as types from \"../../../../base/common/types.js\";\nimport * as nls from \"../../../../nls.js\";\nimport {\n\tExtensions as ConfigurationExtensions,\n\tConfigurationScope,\n\ttype IConfigurationNode,\n\ttype IConfigurationPropertySchema,\n\ttype IConfigurationRegistry,\n} from \"../../../../platform/configuration/common/configurationRegistry.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\n\nimport type { IJSONSchema } from \"../../../../base/common/jsonSchema.js\";\nimport { isWeb } from \"../../../../base/common/platform.js\";\nimport {\n\tConfigurationTarget,\n\ttype IConfigurationService,\n} from \"../../../../platform/configuration/common/configuration.js\";\nimport { workbenchColorsSchemaId } from \"../../../../platform/theme/common/colorRegistry.js\";\nimport { ColorScheme } from \"../../../../platform/theme/common/theme.js\";\nimport { tokenStylingSchemaId } from \"../../../../platform/theme/common/tokenClassificationRegistry.js\";\nimport {\n\ttextmateColorGroupSchemaId,\n\ttextmateColorsSchemaId,\n} from \"./colorThemeSchema.js\";\nimport type { IHostColorSchemeService } from \"./hostColorSchemeService.js\";\nimport {\n\ttype IColorCustomizations,\n\ttype ISemanticTokenColorCustomizations,\n\ttype ITokenColorCustomizations,\n\ttype IWorkbenchColorTheme,\n\ttype IWorkbenchFileIconTheme,\n\ttype IWorkbenchProductIconTheme,\n\tThemeSettingDefaults,\n\ttype ThemeSettingTarget,\n\tThemeSettings,\n} from \"./workbenchThemeService.js\";\n\n// Configuration: Themes\nconst configurationRegistry = Registry.as<IConfigurationRegistry>(\n\tConfigurationExtensions.Configuration,\n);\n\nconst colorThemeSettingEnum: string[] = [];\nconst colorThemeSettingEnumItemLabels: string[] = [];\nconst colorThemeSettingEnumDescriptions: string[] = [];\n\nexport function formatSettingAsLink(str: string) {\n\treturn `\\`#${str}#\\``;\n}\n\nexport const COLOR_THEME_CONFIGURATION_SETTINGS_TAG = \"colorThemeConfiguration\";\n\nconst colorThemeSettingSchema: IConfigurationPropertySchema = {\n\ttype: \"string\",\n\tmarkdownDescription: nls.localize(\n\t\t{\n\t\t\tkey: \"colorTheme\",\n\t\t\tcomment: [\"{0} will become a link to another setting.\"],\n\t\t},\n\t\t\"Specifies the color theme used in the workbench when {0} is not enabled.\",\n\t\tformatSettingAsLink(ThemeSettings.DETECT_COLOR_SCHEME),\n\t),\n\tdefault: isWeb\n\t\t? ThemeSettingDefaults.COLOR_THEME_LIGHT\n\t\t: ThemeSettingDefaults.COLOR_THEME_DARK,\n\ttags: [COLOR_THEME_CONFIGURATION_SETTINGS_TAG],\n\tenum: colorThemeSettingEnum,\n\tenumDescriptions: colorThemeSettingEnumDescriptions,\n\tenumItemLabels: colorThemeSettingEnumItemLabels,\n\terrorMessage: nls.localize(\n\t\t\"colorThemeError\",\n\t\t\"Theme is unknown or not installed.\",\n\t),\n};\nconst preferredDarkThemeSettingSchema: IConfigurationPropertySchema = {\n\ttype: \"string\", //\n\tmarkdownDescription: nls.localize(\n\t\t{\n\t\t\tkey: \"preferredDarkColorTheme\",\n\t\t\tcomment: [\"{0} will become a link to another setting.\"],\n\t\t},\n\t\t\"Specifies the color theme when system color mode is dark and {0} is enabled.\",\n\t\tformatSettingAsLink(ThemeSettings.DETECT_COLOR_SCHEME),\n\t),\n\tdefault: ThemeSettingDefaults.COLOR_THEME_DARK,\n\ttags: [COLOR_THEME_CONFIGURATION_SETTINGS_TAG],\n\tenum: colorThemeSettingEnum,\n\tenumDescriptions: colorThemeSettingEnumDescriptions,\n\tenumItemLabels: colorThemeSettingEnumItemLabels,\n\terrorMessage: nls.localize(\n\t\t\"colorThemeError\",\n\t\t\"Theme is unknown or not installed.\",\n\t),\n};\nconst preferredLightThemeSettingSchema: IConfigurationPropertySchema = {\n\ttype: \"string\",\n\tmarkdownDescription: nls.localize(\n\t\t{\n\t\t\tkey: \"preferredLightColorTheme\",\n\t\t\tcomment: [\"{0} will become a link to another setting.\"],\n\t\t},\n\t\t\"Specifies the color theme when system color mode is light and {0} is enabled.\",\n\t\tformatSettingAsLink(ThemeSettings.DETECT_COLOR_SCHEME),\n\t),\n\tdefault: ThemeSettingDefaults.COLOR_THEME_LIGHT,\n\ttags: [COLOR_THEME_CONFIGURATION_SETTINGS_TAG],\n\tenum: colorThemeSettingEnum,\n\tenumDescriptions: colorThemeSettingEnumDescriptions,\n\tenumItemLabels: colorThemeSettingEnumItemLabels,\n\terrorMessage: nls.localize(\n\t\t\"colorThemeError\",\n\t\t\"Theme is unknown or not installed.\",\n\t),\n};\nconst preferredHCDarkThemeSettingSchema: IConfigurationPropertySchema = {\n\ttype: \"string\",\n\tmarkdownDescription: nls.localize(\n\t\t{\n\t\t\tkey: \"preferredHCDarkColorTheme\",\n\t\t\tcomment: [\"{0} will become a link to another setting.\"],\n\t\t},\n\t\t\"Specifies the color theme when in high contrast dark mode and {0} is enabled.\",\n\t\tformatSettingAsLink(ThemeSettings.DETECT_HC),\n\t),\n\tdefault: ThemeSettingDefaults.COLOR_THEME_HC_DARK,\n\ttags: [COLOR_THEME_CONFIGURATION_SETTINGS_TAG],\n\tenum: colorThemeSettingEnum,\n\tenumDescriptions: colorThemeSettingEnumDescriptions,\n\tenumItemLabels: colorThemeSettingEnumItemLabels,\n\terrorMessage: nls.localize(\n\t\t\"colorThemeError\",\n\t\t\"Theme is unknown or not installed.\",\n\t),\n};\nconst preferredHCLightThemeSettingSchema: IConfigurationPropertySchema = {\n\ttype: \"string\",\n\tmarkdownDescription: nls.localize(\n\t\t{\n\t\t\tkey: \"preferredHCLightColorTheme\",\n\t\t\tcomment: [\"{0} will become a link to another setting.\"],\n\t\t},\n\t\t\"Specifies the color theme when in high contrast light mode and {0} is enabled.\",\n\t\tformatSettingAsLink(ThemeSettings.DETECT_HC),\n\t),\n\tdefault: ThemeSettingDefaults.COLOR_THEME_HC_LIGHT,\n\ttags: [COLOR_THEME_CONFIGURATION_SETTINGS_TAG],\n\tenum: colorThemeSettingEnum,\n\tenumDescriptions: colorThemeSettingEnumDescriptions,\n\tenumItemLabels: colorThemeSettingEnumItemLabels,\n\terrorMessage: nls.localize(\n\t\t\"colorThemeError\",\n\t\t\"Theme is unknown or not installed.\",\n\t),\n};\nconst detectColorSchemeSettingSchema: IConfigurationPropertySchema = {\n\ttype: \"boolean\",\n\tmarkdownDescription: nls.localize(\n\t\t{\n\t\t\tkey: \"detectColorScheme\",\n\t\t\tcomment: [\"{0} and {1} will become links to other settings.\"],\n\t\t},\n\t\t\"If enabled, will automatically select a color theme based on the system color mode. If the system color mode is dark, {0} is used, else {1}.\",\n\t\tformatSettingAsLink(ThemeSettings.PREFERRED_DARK_THEME),\n\t\tformatSettingAsLink(ThemeSettings.PREFERRED_LIGHT_THEME),\n\t),\n\tdefault: false,\n\ttags: [COLOR_THEME_CONFIGURATION_SETTINGS_TAG],\n};\n\nconst colorCustomizationsSchema: IConfigurationPropertySchema = {\n\ttype: \"object\",\n\tdescription: nls.localize(\n\t\t\"workbenchColors\",\n\t\t\"Overrides colors from the currently selected color theme.\",\n\t),\n\tallOf: [{ $ref: workbenchColorsSchemaId }],\n\tdefault: {},\n\tdefaultSnippets: [\n\t\t{\n\t\t\tbody: {},\n\t\t},\n\t],\n};\nconst fileIconThemeSettingSchema: IConfigurationPropertySchema = {\n\ttype: [\"string\", \"null\"],\n\tdefault: ThemeSettingDefaults.FILE_ICON_THEME,\n\tdescription: nls.localize(\n\t\t\"iconTheme\",\n\t\t\"Specifies the file icon theme used in the workbench or 'null' to not show any file icons.\",\n\t),\n\tenum: [null],\n\tenumItemLabels: [nls.localize(\"noIconThemeLabel\", \"None\")],\n\tenumDescriptions: [nls.localize(\"noIconThemeDesc\", \"No file icons\")],\n\terrorMessage: nls.localize(\n\t\t\"iconThemeError\",\n\t\t\"File icon theme is unknown or not installed.\",\n\t),\n};\nconst productIconThemeSettingSchema: IConfigurationPropertySchema = {\n\ttype: [\"string\", \"null\"],\n\tdefault: ThemeSettingDefaults.PRODUCT_ICON_THEME,\n\tdescription: nls.localize(\n\t\t\"productIconTheme\",\n\t\t\"Specifies the product icon theme used.\",\n\t),\n\tenum: [ThemeSettingDefaults.PRODUCT_ICON_THEME],\n\tenumItemLabels: [nls.localize(\"defaultProductIconThemeLabel\", \"Default\")],\n\tenumDescriptions: [nls.localize(\"defaultProductIconThemeDesc\", \"Default\")],\n\terrorMessage: nls.localize(\n\t\t\"productIconThemeError\",\n\t\t\"Product icon theme is unknown or not installed.\",\n\t),\n};\n\nconst detectHCSchemeSettingSchema: IConfigurationPropertySchema = {\n\ttype: \"boolean\",\n\tdefault: true,\n\tmarkdownDescription: nls.localize(\n\t\t{\n\t\t\tkey: \"autoDetectHighContrast\",\n\t\t\tcomment: [\"{0} and {1} will become links to other settings.\"],\n\t\t},\n\t\t\"If enabled, will automatically change to high contrast theme if the OS is using a high contrast theme. The high contrast theme to use is specified by {0} and {1}.\",\n\t\tformatSettingAsLink(ThemeSettings.PREFERRED_HC_DARK_THEME),\n\t\tformatSettingAsLink(ThemeSettings.PREFERRED_HC_LIGHT_THEME),\n\t),\n\tscope: ConfigurationScope.APPLICATION,\n\ttags: [COLOR_THEME_CONFIGURATION_SETTINGS_TAG],\n};\n\nconst themeSettingsConfiguration: IConfigurationNode = {\n\tid: \"workbench\",\n\torder: 7.1,\n\ttype: \"object\",\n\tproperties: {\n\t\t[ThemeSettings.COLOR_THEME]: colorThemeSettingSchema,\n\t\t[ThemeSettings.PREFERRED_DARK_THEME]: preferredDarkThemeSettingSchema,\n\t\t[ThemeSettings.PREFERRED_LIGHT_THEME]: preferredLightThemeSettingSchema,\n\t\t[ThemeSettings.PREFERRED_HC_DARK_THEME]:\n\t\t\tpreferredHCDarkThemeSettingSchema,\n\t\t[ThemeSettings.PREFERRED_HC_LIGHT_THEME]:\n\t\t\tpreferredHCLightThemeSettingSchema,\n\t\t[ThemeSettings.FILE_ICON_THEME]: fileIconThemeSettingSchema,\n\t\t[ThemeSettings.COLOR_CUSTOMIZATIONS]: colorCustomizationsSchema,\n\t\t[ThemeSettings.PRODUCT_ICON_THEME]: productIconThemeSettingSchema,\n\t},\n};\nconfigurationRegistry.registerConfiguration(themeSettingsConfiguration);\n\nconst themeSettingsWindowConfiguration: IConfigurationNode = {\n\tid: \"window\",\n\torder: 8.1,\n\ttype: \"object\",\n\tproperties: {\n\t\t[ThemeSettings.DETECT_HC]: detectHCSchemeSettingSchema,\n\t\t[ThemeSettings.DETECT_COLOR_SCHEME]: detectColorSchemeSettingSchema,\n\t},\n};\nconfigurationRegistry.registerConfiguration(themeSettingsWindowConfiguration);\n\nfunction tokenGroupSettings(description: string): IJSONSchema {\n\treturn {\n\t\tdescription,\n\t\t$ref: textmateColorGroupSchemaId,\n\t};\n}\n\nconst themeSpecificSettingKey = \"^\\\\[[^\\\\]]*(\\\\]\\\\s*\\\\[[^\\\\]]*)*\\\\]$\";\n\nconst tokenColorSchema: IJSONSchema = {\n\ttype: \"object\",\n\tproperties: {\n\t\tcomments: tokenGroupSettings(\n\t\t\tnls.localize(\n\t\t\t\t\"editorColors.comments\",\n\t\t\t\t\"Sets the colors and styles for comments\",\n\t\t\t),\n\t\t),\n\t\tstrings: tokenGroupSettings(\n\t\t\tnls.localize(\n\t\t\t\t\"editorColors.strings\",\n\t\t\t\t\"Sets the colors and styles for strings literals.\",\n\t\t\t),\n\t\t),\n\t\tkeywords: tokenGroupSettings(\n\t\t\tnls.localize(\n\t\t\t\t\"editorColors.keywords\",\n\t\t\t\t\"Sets the colors and styles for keywords.\",\n\t\t\t),\n\t\t),\n\t\tnumbers: tokenGroupSettings(\n\t\t\tnls.localize(\n\t\t\t\t\"editorColors.numbers\",\n\t\t\t\t\"Sets the colors and styles for number literals.\",\n\t\t\t),\n\t\t),\n\t\ttypes: tokenGroupSettings(\n\t\t\tnls.localize(\n\t\t\t\t\"editorColors.types\",\n\t\t\t\t\"Sets the colors and styles for type declarations and references.\",\n\t\t\t),\n\t\t),\n\t\tfunctions: tokenGroupSettings(\n\t\t\tnls.localize(\n\t\t\t\t\"editorColors.functions\",\n\t\t\t\t\"Sets the colors and styles for functions declarations and references.\",\n\t\t\t),\n\t\t),\n\t\tvariables: tokenGroupSettings(\n\t\t\tnls.localize(\n\t\t\t\t\"editorColors.variables\",\n\t\t\t\t\"Sets the colors and styles for variables declarations and references.\",\n\t\t\t),\n\t\t),\n\t\ttextMateRules: {\n\t\t\tdescription: nls.localize(\n\t\t\t\t\"editorColors.textMateRules\",\n\t\t\t\t\"Sets colors and styles using textmate theming rules (advanced).\",\n\t\t\t),\n\t\t\t$ref: textmateColorsSchemaId,\n\t\t},\n\t\tsemanticHighlighting: {\n\t\t\tdescription: nls.localize(\n\t\t\t\t\"editorColors.semanticHighlighting\",\n\t\t\t\t\"Whether semantic highlighting should be enabled for this theme.\",\n\t\t\t),\n\t\t\tdeprecationMessage: nls.localize(\n\t\t\t\t\"editorColors.semanticHighlighting.deprecationMessage\",\n\t\t\t\t\"Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.\",\n\t\t\t),\n\t\t\tmarkdownDeprecationMessage: nls.localize(\n\t\t\t\t{\n\t\t\t\t\tkey: \"editorColors.semanticHighlighting.deprecationMessageMarkdown\",\n\t\t\t\t\tcomment: [\"{0} will become a link to another setting.\"],\n\t\t\t\t},\n\t\t\t\t\"Use `enabled` in {0} setting instead.\",\n\t\t\t\tformatSettingAsLink(\"editor.semanticTokenColorCustomizations\"),\n\t\t\t),\n\t\t\ttype: \"boolean\",\n\t\t},\n\t},\n\tadditionalProperties: false,\n};\n\nconst tokenColorCustomizationSchema: IConfigurationPropertySchema = {\n\tdescription: nls.localize(\n\t\t\"editorColors\",\n\t\t\"Overrides editor syntax colors and font style from the currently selected color theme.\",\n\t),\n\tdefault: {},\n\tallOf: [{ ...tokenColorSchema, patternProperties: { \"^\\\\[\": {} } }],\n};\n\nconst semanticTokenColorSchema: IJSONSchema = {\n\ttype: \"object\",\n\tproperties: {\n\t\tenabled: {\n\t\t\ttype: \"boolean\",\n\t\t\tdescription: nls.localize(\n\t\t\t\t\"editorColors.semanticHighlighting.enabled\",\n\t\t\t\t\"Whether semantic highlighting is enabled or disabled for this theme\",\n\t\t\t),\n\t\t\tsuggestSortText: \"0_enabled\",\n\t\t},\n\t\trules: {\n\t\t\t$ref: tokenStylingSchemaId,\n\t\t\tdescription: nls.localize(\n\t\t\t\t\"editorColors.semanticHighlighting.rules\",\n\t\t\t\t\"Semantic token styling rules for this theme.\",\n\t\t\t),\n\t\t\tsuggestSortText: \"0_rules\",\n\t\t},\n\t},\n\tadditionalProperties: false,\n};\n\nconst semanticTokenColorCustomizationSchema: IConfigurationPropertySchema = {\n\tdescription: nls.localize(\n\t\t\"semanticTokenColors\",\n\t\t\"Overrides editor semantic token color and styles from the currently selected color theme.\",\n\t),\n\tdefault: {},\n\tallOf: [{ ...semanticTokenColorSchema, patternProperties: { \"^\\\\[\": {} } }],\n};\n\nconst tokenColorCustomizationConfiguration: IConfigurationNode = {\n\tid: \"editor\",\n\torder: 7.2,\n\ttype: \"object\",\n\tproperties: {\n\t\t[ThemeSettings.TOKEN_COLOR_CUSTOMIZATIONS]:\n\t\t\ttokenColorCustomizationSchema,\n\t\t[ThemeSettings.SEMANTIC_TOKEN_COLOR_CUSTOMIZATIONS]:\n\t\t\tsemanticTokenColorCustomizationSchema,\n\t},\n};\n\nconfigurationRegistry.registerConfiguration(\n\ttokenColorCustomizationConfiguration,\n);\n\nexport function updateColorThemeConfigurationSchemas(\n\tthemes: IWorkbenchColorTheme[],\n) {\n\t// updates enum for the 'workbench.colorTheme` setting\n\tthemes.sort((a, b) => a.label.localeCompare(b.label));\n\tcolorThemeSettingEnum.splice(\n\t\t0,\n\t\tcolorThemeSettingEnum.length,\n\t\t...themes.map((t) => t.settingsId),\n\t);\n\tcolorThemeSettingEnumDescriptions.splice(\n\t\t0,\n\t\tcolorThemeSettingEnumDescriptions.length,\n\t\t...themes.map((t) => t.description || \"\"),\n\t);\n\tcolorThemeSettingEnumItemLabels.splice(\n\t\t0,\n\t\tcolorThemeSettingEnumItemLabels.length,\n\t\t...themes.map((t) => t.label || \"\"),\n\t);\n\n\tconst themeSpecificWorkbenchColors: IJSONSchema = { properties: {} };\n\tconst themeSpecificTokenColors: IJSONSchema = { properties: {} };\n\tconst themeSpecificSemanticTokenColors: IJSONSchema = { properties: {} };\n\n\tconst workbenchColors = {\n\t\t$ref: workbenchColorsSchemaId,\n\t\tadditionalProperties: false,\n\t};\n\tconst tokenColors = {\n\t\tproperties: tokenColorSchema.properties,\n\t\tadditionalProperties: false,\n\t};\n\tfor (const t of themes) {\n\t\t// add theme specific color customization (\"[Abyss]\":{ ... })\n\t\tconst themeId = `[${t.settingsId}]`;\n\t\tthemeSpecificWorkbenchColors.properties![themeId] = workbenchColors;\n\t\tthemeSpecificTokenColors.properties![themeId] = tokenColors;\n\t\tthemeSpecificSemanticTokenColors.properties![themeId] =\n\t\t\tsemanticTokenColorSchema;\n\t}\n\tthemeSpecificWorkbenchColors.patternProperties = {\n\t\t[themeSpecificSettingKey]: workbenchColors,\n\t};\n\tthemeSpecificTokenColors.patternProperties = {\n\t\t[themeSpecificSettingKey]: tokenColors,\n\t};\n\tthemeSpecificSemanticTokenColors.patternProperties = {\n\t\t[themeSpecificSettingKey]: semanticTokenColorSchema,\n\t};\n\n\tcolorCustomizationsSchema.allOf![1] = themeSpecificWorkbenchColors;\n\ttokenColorCustomizationSchema.allOf![1] = themeSpecificTokenColors;\n\tsemanticTokenColorCustomizationSchema.allOf![1] =\n\t\tthemeSpecificSemanticTokenColors;\n\n\tconfigurationRegistry.notifyConfigurationSchemaUpdated(\n\t\tthemeSettingsConfiguration,\n\t\ttokenColorCustomizationConfiguration,\n\t);\n}\n\nexport function updateFileIconThemeConfigurationSchemas(\n\tthemes: IWorkbenchFileIconTheme[],\n) {\n\tfileIconThemeSettingSchema.enum!.splice(\n\t\t1,\n\t\tNumber.MAX_VALUE,\n\t\t...themes.map((t) => t.settingsId),\n\t);\n\tfileIconThemeSettingSchema.enumItemLabels!.splice(\n\t\t1,\n\t\tNumber.MAX_VALUE,\n\t\t...themes.map((t) => t.label),\n\t);\n\tfileIconThemeSettingSchema.enumDescriptions!.splice(\n\t\t1,\n\t\tNumber.MAX_VALUE,\n\t\t...themes.map((t) => t.description || \"\"),\n\t);\n\n\tconfigurationRegistry.notifyConfigurationSchemaUpdated(\n\t\tthemeSettingsConfiguration,\n\t);\n}\n\nexport function updateProductIconThemeConfigurationSchemas(\n\tthemes: IWorkbenchProductIconTheme[],\n) {\n\tproductIconThemeSettingSchema.enum!.splice(\n\t\t1,\n\t\tNumber.MAX_VALUE,\n\t\t...themes.map((t) => t.settingsId),\n\t);\n\tproductIconThemeSettingSchema.enumItemLabels!.splice(\n\t\t1,\n\t\tNumber.MAX_VALUE,\n\t\t...themes.map((t) => t.label),\n\t);\n\tproductIconThemeSettingSchema.enumDescriptions!.splice(\n\t\t1,\n\t\tNumber.MAX_VALUE,\n\t\t...themes.map((t) => t.description || \"\"),\n\t);\n\n\tconfigurationRegistry.notifyConfigurationSchemaUpdated(\n\t\tthemeSettingsConfiguration,\n\t);\n}\n\nconst colorSchemeToPreferred = {\n\t[ColorScheme.DARK]: ThemeSettings.PREFERRED_DARK_THEME,\n\t[ColorScheme.LIGHT]: ThemeSettings.PREFERRED_LIGHT_THEME,\n\t[ColorScheme.HIGH_CONTRAST_DARK]: ThemeSettings.PREFERRED_HC_DARK_THEME,\n\t[ColorScheme.HIGH_CONTRAST_LIGHT]: ThemeSettings.PREFERRED_HC_LIGHT_THEME,\n};\n\nexport class ThemeConfiguration {\n\tconstructor(\n\t\tprivate configurationService: IConfigurationService,\n\t\tprivate hostColorService: IHostColorSchemeService,\n\t) {}\n\n\tpublic get colorTheme(): string {\n\t\treturn this.configurationService.getValue<string>(\n\t\t\tthis.getColorThemeSettingId(),\n\t\t);\n\t}\n\n\tpublic get fileIconTheme(): string | null {\n\t\treturn this.configurationService.getValue<string | null>(\n\t\t\tThemeSettings.FILE_ICON_THEME,\n\t\t);\n\t}\n\n\tpublic get productIconTheme(): string {\n\t\treturn this.configurationService.getValue<string>(\n\t\t\tThemeSettings.PRODUCT_ICON_THEME,\n\t\t);\n\t}\n\n\tpublic get colorCustomizations(): IColorCustomizations {\n\t\treturn (\n\t\t\tthis.configurationService.getValue<IColorCustomizations>(\n\t\t\t\tThemeSettings.COLOR_CUSTOMIZATIONS,\n\t\t\t) || {}\n\t\t);\n\t}\n\n\tpublic get tokenColorCustomizations(): ITokenColorCustomizations {\n\t\treturn (\n\t\t\tthis.configurationService.getValue<ITokenColorCustomizations>(\n\t\t\t\tThemeSettings.TOKEN_COLOR_CUSTOMIZATIONS,\n\t\t\t) || {}\n\t\t);\n\t}\n\n\tpublic get semanticTokenColorCustomizations():\n\t\t| ISemanticTokenColorCustomizations\n\t\t| undefined {\n\t\treturn this.configurationService.getValue<ISemanticTokenColorCustomizations>(\n\t\t\tThemeSettings.SEMANTIC_TOKEN_COLOR_CUSTOMIZATIONS,\n\t\t);\n\t}\n\n\tpublic getPreferredColorScheme(): ColorScheme | undefined {\n\t\tif (\n\t\t\tthis.configurationService.getValue(ThemeSettings.DETECT_HC) &&\n\t\t\tthis.hostColorService.highContrast\n\t\t) {\n\t\t\treturn this.hostColorService.dark\n\t\t\t\t? ColorScheme.HIGH_CONTRAST_DARK\n\t\t\t\t: ColorScheme.HIGH_CONTRAST_LIGHT;\n\t\t}\n\t\tif (\n\t\t\tthis.configurationService.getValue(\n\t\t\t\tThemeSettings.DETECT_COLOR_SCHEME,\n\t\t\t)\n\t\t) {\n\t\t\treturn this.hostColorService.dark\n\t\t\t\t? ColorScheme.DARK\n\t\t\t\t: ColorScheme.LIGHT;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tpublic isDetectingColorScheme(): boolean {\n\t\treturn this.configurationService.getValue(\n\t\t\tThemeSettings.DETECT_COLOR_SCHEME,\n\t\t);\n\t}\n\n\tpublic getColorThemeSettingId(): ThemeSettings {\n\t\tconst preferredScheme = this.getPreferredColorScheme();\n\t\treturn preferredScheme\n\t\t\t? colorSchemeToPreferred[preferredScheme]\n\t\t\t: ThemeSettings.COLOR_THEME;\n\t}\n\n\tpublic async setColorTheme(\n\t\ttheme: IWorkbenchColorTheme,\n\t\tsettingsTarget: ThemeSettingTarget,\n\t): Promise<IWorkbenchColorTheme> {\n\t\tawait this.writeConfiguration(\n\t\t\tthis.getColorThemeSettingId(),\n\t\t\ttheme.settingsId,\n\t\t\tsettingsTarget,\n\t\t);\n\t\treturn theme;\n\t}\n\n\tpublic async setFileIconTheme(\n\t\ttheme: IWorkbenchFileIconTheme,\n\t\tsettingsTarget: ThemeSettingTarget,\n\t): Promise<IWorkbenchFileIconTheme> {\n\t\tawait this.writeConfiguration(\n\t\t\tThemeSettings.FILE_ICON_THEME,\n\t\t\ttheme.settingsId,\n\t\t\tsettingsTarget,\n\t\t);\n\t\treturn theme;\n\t}\n\n\tpublic async setProductIconTheme(\n\t\ttheme: IWorkbenchProductIconTheme,\n\t\tsettingsTarget: ThemeSettingTarget,\n\t): Promise<IWorkbenchProductIconTheme> {\n\t\tawait this.writeConfiguration(\n\t\t\tThemeSettings.PRODUCT_ICON_THEME,\n\t\t\ttheme.settingsId,\n\t\t\tsettingsTarget,\n\t\t);\n\t\treturn theme;\n\t}\n\n\tpublic isDefaultColorTheme(): boolean {\n\t\tconst settings = this.configurationService.inspect(\n\t\t\tthis.getColorThemeSettingId(),\n\t\t);\n\t\treturn settings && settings.default?.value === settings.value;\n\t}\n\n\tpublic findAutoConfigurationTarget(key: string) {\n\t\tconst settings = this.configurationService.inspect(key);\n\t\tif (!types.isUndefined(settings.workspaceFolderValue)) {\n\t\t\treturn ConfigurationTarget.WORKSPACE_FOLDER;\n\t\t} else if (!types.isUndefined(settings.workspaceValue)) {\n\t\t\treturn ConfigurationTarget.WORKSPACE;\n\t\t} else if (!types.isUndefined(settings.userRemote)) {\n\t\t\treturn ConfigurationTarget.USER_REMOTE;\n\t\t}\n\t\treturn ConfigurationTarget.USER;\n\t}\n\n\tprivate async writeConfiguration(\n\t\tkey: string,\n\t\tvalue: any,\n\t\tsettingsTarget: ThemeSettingTarget,\n\t): Promise<void> {\n\t\tif (settingsTarget === undefined || settingsTarget === \"preview\") {\n\t\t\treturn;\n\t\t}\n\n\t\tconst settings = this.configurationService.inspect(key);\n\t\tif (settingsTarget === \"auto\") {\n\t\t\treturn this.configurationService.updateValue(key, value);\n\t\t}\n\n\t\tif (settingsTarget === ConfigurationTarget.USER) {\n\t\t\tif (value === settings.userValue) {\n\t\t\t\treturn Promise.resolve(undefined); // nothing to do\n\t\t\t} else if (value === settings.defaultValue) {\n\t\t\t\tif (types.isUndefined(settings.userValue)) {\n\t\t\t\t\treturn Promise.resolve(undefined); // nothing to do\n\t\t\t\t}\n\t\t\t\tvalue = undefined; // remove configuration from user settings\n\t\t\t}\n\t\t} else if (\n\t\t\tsettingsTarget === ConfigurationTarget.WORKSPACE ||\n\t\t\tsettingsTarget === ConfigurationTarget.WORKSPACE_FOLDER ||\n\t\t\tsettingsTarget === ConfigurationTarget.USER_REMOTE\n\t\t) {\n\t\t\tif (value === settings.value) {\n\t\t\t\treturn Promise.resolve(undefined); // nothing to do\n\t\t\t}\n\t\t}\n\t\treturn this.configurationService.updateValue(\n\t\t\tkey,\n\t\t\tvalue,\n\t\t\tsettingsTarget,\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
