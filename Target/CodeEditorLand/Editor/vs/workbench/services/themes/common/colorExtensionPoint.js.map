{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/themes/common/colorExtensionPoint.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../../../nls.js';\nimport { ExtensionsRegistry } from '../../extensions/common/extensionsRegistry.js';\nimport { IColorRegistry, Extensions as ColorRegistryExtensions } from '../../../../platform/theme/common/colorRegistry.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Extensions, IExtensionFeatureTableRenderer, IExtensionFeaturesRegistry, IRenderedData, IRowData, ITableData } from '../../extensionManagement/common/extensionFeatures.js';\nimport { SyncDescriptor } from '../../../../platform/instantiation/common/descriptors.js';\nimport { IExtensionManifest } from '../../../../platform/extensions/common/extensions.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\n\ninterface IColorExtensionPoint {\n\tid: string;\n\tdescription: string;\n\tdefaults: { light: string; dark: string; highContrast: string; highContrastLight?: string };\n}\n\nconst colorRegistry: IColorRegistry = Registry.as<IColorRegistry>(ColorRegistryExtensions.ColorContribution);\n\nconst colorReferenceSchema = colorRegistry.getColorReferenceSchema();\nconst colorIdPattern = '^\\\\w+[.\\\\w+]*$';\n\nconst configurationExtPoint = ExtensionsRegistry.registerExtensionPoint<IColorExtensionPoint[]>({\n\textensionPoint: 'colors',\n\tjsonSchema: {\n\t\tdescription: nls.localize('contributes.color', 'Contributes extension defined themable colors'),\n\t\ttype: 'array',\n\t\titems: {\n\t\t\ttype: 'object',\n\t\t\tproperties: {\n\t\t\t\tid: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdescription: nls.localize('contributes.color.id', 'The identifier of the themable color'),\n\t\t\t\t\tpattern: colorIdPattern,\n\t\t\t\t\tpatternErrorMessage: nls.localize('contributes.color.id.format', 'Identifiers must only contain letters, digits and dots and can not start with a dot'),\n\t\t\t\t},\n\t\t\t\tdescription: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdescription: nls.localize('contributes.color.description', 'The description of the themable color'),\n\t\t\t\t},\n\t\t\t\tdefaults: {\n\t\t\t\t\ttype: 'object',\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tlight: {\n\t\t\t\t\t\t\tdescription: nls.localize('contributes.defaults.light', 'The default color for light themes. Either a color value in hex (#RRGGBB[AA]) or the identifier of a themable color which provides the default.'),\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\tanyOf: [\n\t\t\t\t\t\t\t\tcolorReferenceSchema,\n\t\t\t\t\t\t\t\t{ type: 'string', format: 'color-hex' }\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdark: {\n\t\t\t\t\t\t\tdescription: nls.localize('contributes.defaults.dark', 'The default color for dark themes. Either a color value in hex (#RRGGBB[AA]) or the identifier of a themable color which provides the default.'),\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\tanyOf: [\n\t\t\t\t\t\t\t\tcolorReferenceSchema,\n\t\t\t\t\t\t\t\t{ type: 'string', format: 'color-hex' }\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\thighContrast: {\n\t\t\t\t\t\t\tdescription: nls.localize('contributes.defaults.highContrast', 'The default color for high contrast dark themes. Either a color value in hex (#RRGGBB[AA]) or the identifier of a themable color which provides the default. If not provided, the `dark` color is used as default for high contrast dark themes.'),\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\tanyOf: [\n\t\t\t\t\t\t\t\tcolorReferenceSchema,\n\t\t\t\t\t\t\t\t{ type: 'string', format: 'color-hex' }\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\thighContrastLight: {\n\t\t\t\t\t\t\tdescription: nls.localize('contributes.defaults.highContrastLight', 'The default color for high contrast light themes. Either a color value in hex (#RRGGBB[AA]) or the identifier of a themable color which provides the default. If not provided, the `light` color is used as default for high contrast light themes.'),\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\tanyOf: [\n\t\t\t\t\t\t\t\tcolorReferenceSchema,\n\t\t\t\t\t\t\t\t{ type: 'string', format: 'color-hex' }\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\trequired: ['light', 'dark']\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n\nexport class ColorExtensionPoint {\n\n\tconstructor() {\n\t\tconfigurationExtPoint.setHandler((extensions, delta) => {\n\t\t\tfor (const extension of delta.added) {\n\t\t\t\tconst extensionValue = <IColorExtensionPoint[]>extension.value;\n\t\t\t\tconst collector = extension.collector;\n\n\t\t\t\tif (!extensionValue || !Array.isArray(extensionValue)) {\n\t\t\t\t\tcollector.error(nls.localize('invalid.colorConfiguration', \"'configuration.colors' must be a array\"));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst parseColorValue = (s: string, name: string) => {\n\t\t\t\t\tif (s.length > 0) {\n\t\t\t\t\t\tif (s[0] === '#') {\n\t\t\t\t\t\t\treturn Color.Format.CSS.parseHex(s);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn s;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcollector.error(nls.localize('invalid.default.colorType', \"{0} must be either a color value in hex (#RRGGBB[AA] or #RGB[A]) or the identifier of a themable color which provides the default.\", name));\n\t\t\t\t\treturn Color.red;\n\t\t\t\t};\n\n\t\t\t\tfor (const colorContribution of extensionValue) {\n\t\t\t\t\tif (typeof colorContribution.id !== 'string' || colorContribution.id.length === 0) {\n\t\t\t\t\t\tcollector.error(nls.localize('invalid.id', \"'configuration.colors.id' must be defined and can not be empty\"));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (!colorContribution.id.match(colorIdPattern)) {\n\t\t\t\t\t\tcollector.error(nls.localize('invalid.id.format', \"'configuration.colors.id' must only contain letters, digits and dots and can not start with a dot\"));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof colorContribution.description !== 'string' || colorContribution.id.length === 0) {\n\t\t\t\t\t\tcollector.error(nls.localize('invalid.description', \"'configuration.colors.description' must be defined and can not be empty\"));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconst defaults = colorContribution.defaults;\n\t\t\t\t\tif (!defaults || typeof defaults !== 'object' || typeof defaults.light !== 'string' || typeof defaults.dark !== 'string') {\n\t\t\t\t\t\tcollector.error(nls.localize('invalid.defaults', \"'configuration.colors.defaults' must be defined and must contain 'light' and 'dark'\"));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (defaults.highContrast && typeof defaults.highContrast !== 'string') {\n\t\t\t\t\t\tcollector.error(nls.localize('invalid.defaults.highContrast', \"If defined, 'configuration.colors.defaults.highContrast' must be a string.\"));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (defaults.highContrastLight && typeof defaults.highContrastLight !== 'string') {\n\t\t\t\t\t\tcollector.error(nls.localize('invalid.defaults.highContrastLight', \"If defined, 'configuration.colors.defaults.highContrastLight' must be a string.\"));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tcolorRegistry.registerColor(colorContribution.id, {\n\t\t\t\t\t\tlight: parseColorValue(defaults.light, 'configuration.colors.defaults.light'),\n\t\t\t\t\t\tdark: parseColorValue(defaults.dark, 'configuration.colors.defaults.dark'),\n\t\t\t\t\t\thcDark: parseColorValue(defaults.highContrast ?? defaults.dark, 'configuration.colors.defaults.highContrast'),\n\t\t\t\t\t\thcLight: parseColorValue(defaults.highContrastLight ?? defaults.light, 'configuration.colors.defaults.highContrastLight'),\n\t\t\t\t\t}, colorContribution.description);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const extension of delta.removed) {\n\t\t\t\tconst extensionValue = <IColorExtensionPoint[]>extension.value;\n\t\t\t\tfor (const colorContribution of extensionValue) {\n\t\t\t\t\tcolorRegistry.deregisterColor(colorContribution.id);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass ColorDataRenderer extends Disposable implements IExtensionFeatureTableRenderer {\n\n\treadonly type = 'table';\n\n\tshouldRender(manifest: IExtensionManifest): boolean {\n\t\treturn !!manifest.contributes?.colors;\n\t}\n\n\trender(manifest: IExtensionManifest): IRenderedData<ITableData> {\n\t\tconst colors = manifest.contributes?.colors || [];\n\t\tif (!colors.length) {\n\t\t\treturn { data: { headers: [], rows: [] }, dispose: () => { } };\n\t\t}\n\n\t\tconst headers = [\n\t\t\tnls.localize('id', \"ID\"),\n\t\t\tnls.localize('description', \"Description\"),\n\t\t\tnls.localize('defaultDark', \"Dark Default\"),\n\t\t\tnls.localize('defaultLight', \"Light Default\"),\n\t\t\tnls.localize('defaultHC', \"High Contrast Default\"),\n\t\t];\n\n\t\tconst toColor = (colorReference: string): Color | undefined => colorReference[0] === '#' ? Color.fromHex(colorReference) : undefined;\n\n\t\tconst rows: IRowData[][] = colors.sort((a, b) => a.id.localeCompare(b.id))\n\t\t\t.map(color => {\n\t\t\t\treturn [\n\t\t\t\t\tnew MarkdownString().appendMarkdown(`\\`${color.id}\\``),\n\t\t\t\t\tcolor.description,\n\t\t\t\t\ttoColor(color.defaults.dark) ?? new MarkdownString().appendMarkdown(`\\`${color.defaults.dark}\\``),\n\t\t\t\t\ttoColor(color.defaults.light) ?? new MarkdownString().appendMarkdown(`\\`${color.defaults.light}\\``),\n\t\t\t\t\ttoColor(color.defaults.highContrast) ?? new MarkdownString().appendMarkdown(`\\`${color.defaults.highContrast}\\``),\n\t\t\t\t];\n\t\t\t});\n\n\t\treturn {\n\t\t\tdata: {\n\t\t\t\theaders,\n\t\t\t\trows\n\t\t\t},\n\t\t\tdispose: () => { }\n\t\t};\n\t}\n}\n\nRegistry.as<IExtensionFeaturesRegistry>(Extensions.ExtensionFeaturesRegistry).registerExtensionFeature({\n\tid: 'colors',\n\tlabel: nls.localize('colors', \"Colors\"),\n\taccess: {\n\t\tcanToggle: false\n\t},\n\trenderer: new SyncDescriptor(ColorDataRenderer),\n});\n"],
  "mappings": "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",
  "names": []
}
