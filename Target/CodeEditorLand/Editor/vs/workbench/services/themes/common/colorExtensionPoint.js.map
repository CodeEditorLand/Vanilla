{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/themes/common/colorExtensionPoint.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Color } from \"../../../../base/common/color.js\";\nimport { MarkdownString } from \"../../../../base/common/htmlContent.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport * as nls from \"../../../../nls.js\";\nimport type { IExtensionManifest } from \"../../../../platform/extensions/common/extensions.js\";\nimport { SyncDescriptor } from \"../../../../platform/instantiation/common/descriptors.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport {\n\tExtensions as ColorRegistryExtensions,\n\ttype IColorRegistry,\n} from \"../../../../platform/theme/common/colorRegistry.js\";\nimport {\n\tExtensions,\n\ttype IExtensionFeatureTableRenderer,\n\ttype IExtensionFeaturesRegistry,\n\ttype IRenderedData,\n\ttype IRowData,\n\ttype ITableData,\n} from \"../../extensionManagement/common/extensionFeatures.js\";\nimport { ExtensionsRegistry } from \"../../extensions/common/extensionsRegistry.js\";\n\ninterface IColorExtensionPoint {\n\tid: string;\n\tdescription: string;\n\tdefaults: {\n\t\tlight: string;\n\t\tdark: string;\n\t\thighContrast: string;\n\t\thighContrastLight?: string;\n\t};\n}\n\nconst colorRegistry: IColorRegistry = Registry.as<IColorRegistry>(\n\tColorRegistryExtensions.ColorContribution,\n);\n\nconst colorReferenceSchema = colorRegistry.getColorReferenceSchema();\nconst colorIdPattern = \"^\\\\w+[.\\\\w+]*$\";\n\nconst configurationExtPoint = ExtensionsRegistry.registerExtensionPoint<\n\tIColorExtensionPoint[]\n>({\n\textensionPoint: \"colors\",\n\tjsonSchema: {\n\t\tdescription: nls.localize(\n\t\t\t\"contributes.color\",\n\t\t\t\"Contributes extension defined themable colors\",\n\t\t),\n\t\ttype: \"array\",\n\t\titems: {\n\t\t\ttype: \"object\",\n\t\t\tproperties: {\n\t\t\t\tid: {\n\t\t\t\t\ttype: \"string\",\n\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\"contributes.color.id\",\n\t\t\t\t\t\t\"The identifier of the themable color\",\n\t\t\t\t\t),\n\t\t\t\t\tpattern: colorIdPattern,\n\t\t\t\t\tpatternErrorMessage: nls.localize(\n\t\t\t\t\t\t\"contributes.color.id.format\",\n\t\t\t\t\t\t\"Identifiers must only contain letters, digits and dots and can not start with a dot\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tdescription: {\n\t\t\t\t\ttype: \"string\",\n\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\"contributes.color.description\",\n\t\t\t\t\t\t\"The description of the themable color\",\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\tdefaults: {\n\t\t\t\t\ttype: \"object\",\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tlight: {\n\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\"contributes.defaults.light\",\n\t\t\t\t\t\t\t\t\"The default color for light themes. Either a color value in hex (#RRGGBB[AA]) or the identifier of a themable color which provides the default.\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\tanyOf: [\n\t\t\t\t\t\t\t\tcolorReferenceSchema,\n\t\t\t\t\t\t\t\t{ type: \"string\", format: \"color-hex\" },\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdark: {\n\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\"contributes.defaults.dark\",\n\t\t\t\t\t\t\t\t\"The default color for dark themes. Either a color value in hex (#RRGGBB[AA]) or the identifier of a themable color which provides the default.\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\tanyOf: [\n\t\t\t\t\t\t\t\tcolorReferenceSchema,\n\t\t\t\t\t\t\t\t{ type: \"string\", format: \"color-hex\" },\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t\thighContrast: {\n\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\"contributes.defaults.highContrast\",\n\t\t\t\t\t\t\t\t\"The default color for high contrast dark themes. Either a color value in hex (#RRGGBB[AA]) or the identifier of a themable color which provides the default. If not provided, the `dark` color is used as default for high contrast dark themes.\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\tanyOf: [\n\t\t\t\t\t\t\t\tcolorReferenceSchema,\n\t\t\t\t\t\t\t\t{ type: \"string\", format: \"color-hex\" },\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t\thighContrastLight: {\n\t\t\t\t\t\t\tdescription: nls.localize(\n\t\t\t\t\t\t\t\t\"contributes.defaults.highContrastLight\",\n\t\t\t\t\t\t\t\t\"The default color for high contrast light themes. Either a color value in hex (#RRGGBB[AA]) or the identifier of a themable color which provides the default. If not provided, the `light` color is used as default for high contrast light themes.\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\tanyOf: [\n\t\t\t\t\t\t\t\tcolorReferenceSchema,\n\t\t\t\t\t\t\t\t{ type: \"string\", format: \"color-hex\" },\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\trequired: [\"light\", \"dark\"],\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n});\n\nexport class ColorExtensionPoint {\n\tconstructor() {\n\t\tconfigurationExtPoint.setHandler((extensions, delta) => {\n\t\t\tfor (const extension of delta.added) {\n\t\t\t\tconst extensionValue = <IColorExtensionPoint[]>extension.value;\n\t\t\t\tconst collector = extension.collector;\n\n\t\t\t\tif (!extensionValue || !Array.isArray(extensionValue)) {\n\t\t\t\t\tcollector.error(\n\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\"invalid.colorConfiguration\",\n\t\t\t\t\t\t\t\"'configuration.colors' must be a array\",\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst parseColorValue = (s: string, name: string) => {\n\t\t\t\t\tif (s.length > 0) {\n\t\t\t\t\t\tif (s[0] === \"#\") {\n\t\t\t\t\t\t\treturn Color.Format.CSS.parseHex(s);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn s;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcollector.error(\n\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\"invalid.default.colorType\",\n\t\t\t\t\t\t\t\"{0} must be either a color value in hex (#RRGGBB[AA] or #RGB[A]) or the identifier of a themable color which provides the default.\",\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\treturn Color.red;\n\t\t\t\t};\n\n\t\t\t\tfor (const colorContribution of extensionValue) {\n\t\t\t\t\tif (\n\t\t\t\t\t\ttypeof colorContribution.id !== \"string\" ||\n\t\t\t\t\t\tcolorContribution.id.length === 0\n\t\t\t\t\t) {\n\t\t\t\t\t\tcollector.error(\n\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\"invalid.id\",\n\t\t\t\t\t\t\t\t\"'configuration.colors.id' must be defined and can not be empty\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (!colorContribution.id.match(colorIdPattern)) {\n\t\t\t\t\t\tcollector.error(\n\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\"invalid.id.format\",\n\t\t\t\t\t\t\t\t\"'configuration.colors.id' must only contain letters, digits and dots and can not start with a dot\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\ttypeof colorContribution.description !== \"string\" ||\n\t\t\t\t\t\tcolorContribution.id.length === 0\n\t\t\t\t\t) {\n\t\t\t\t\t\tcollector.error(\n\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\"invalid.description\",\n\t\t\t\t\t\t\t\t\"'configuration.colors.description' must be defined and can not be empty\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconst defaults = colorContribution.defaults;\n\t\t\t\t\tif (\n\t\t\t\t\t\t!defaults ||\n\t\t\t\t\t\ttypeof defaults !== \"object\" ||\n\t\t\t\t\t\ttypeof defaults.light !== \"string\" ||\n\t\t\t\t\t\ttypeof defaults.dark !== \"string\"\n\t\t\t\t\t) {\n\t\t\t\t\t\tcollector.error(\n\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\"invalid.defaults\",\n\t\t\t\t\t\t\t\t\"'configuration.colors.defaults' must be defined and must contain 'light' and 'dark'\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\tdefaults.highContrast &&\n\t\t\t\t\t\ttypeof defaults.highContrast !== \"string\"\n\t\t\t\t\t) {\n\t\t\t\t\t\tcollector.error(\n\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\"invalid.defaults.highContrast\",\n\t\t\t\t\t\t\t\t\"If defined, 'configuration.colors.defaults.highContrast' must be a string.\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\tdefaults.highContrastLight &&\n\t\t\t\t\t\ttypeof defaults.highContrastLight !== \"string\"\n\t\t\t\t\t) {\n\t\t\t\t\t\tcollector.error(\n\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\"invalid.defaults.highContrastLight\",\n\t\t\t\t\t\t\t\t\"If defined, 'configuration.colors.defaults.highContrastLight' must be a string.\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tcolorRegistry.registerColor(\n\t\t\t\t\t\tcolorContribution.id,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlight: parseColorValue(\n\t\t\t\t\t\t\t\tdefaults.light,\n\t\t\t\t\t\t\t\t\"configuration.colors.defaults.light\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tdark: parseColorValue(\n\t\t\t\t\t\t\t\tdefaults.dark,\n\t\t\t\t\t\t\t\t\"configuration.colors.defaults.dark\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\thcDark: parseColorValue(\n\t\t\t\t\t\t\t\tdefaults.highContrast ?? defaults.dark,\n\t\t\t\t\t\t\t\t\"configuration.colors.defaults.highContrast\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\thcLight: parseColorValue(\n\t\t\t\t\t\t\t\tdefaults.highContrastLight ?? defaults.light,\n\t\t\t\t\t\t\t\t\"configuration.colors.defaults.highContrastLight\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcolorContribution.description,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const extension of delta.removed) {\n\t\t\t\tconst extensionValue = <IColorExtensionPoint[]>extension.value;\n\t\t\t\tfor (const colorContribution of extensionValue) {\n\t\t\t\t\tcolorRegistry.deregisterColor(colorContribution.id);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass ColorDataRenderer\n\textends Disposable\n\timplements IExtensionFeatureTableRenderer\n{\n\treadonly type = \"table\";\n\n\tshouldRender(manifest: IExtensionManifest): boolean {\n\t\treturn !!manifest.contributes?.colors;\n\t}\n\n\trender(manifest: IExtensionManifest): IRenderedData<ITableData> {\n\t\tconst colors = manifest.contributes?.colors || [];\n\t\tif (!colors.length) {\n\t\t\treturn { data: { headers: [], rows: [] }, dispose: () => {} };\n\t\t}\n\n\t\tconst headers = [\n\t\t\tnls.localize(\"id\", \"ID\"),\n\t\t\tnls.localize(\"description\", \"Description\"),\n\t\t\tnls.localize(\"defaultDark\", \"Dark Default\"),\n\t\t\tnls.localize(\"defaultLight\", \"Light Default\"),\n\t\t\tnls.localize(\"defaultHC\", \"High Contrast Default\"),\n\t\t];\n\n\t\tconst toColor = (colorReference: string): Color | undefined =>\n\t\t\tcolorReference[0] === \"#\"\n\t\t\t\t? Color.fromHex(colorReference)\n\t\t\t\t: undefined;\n\n\t\tconst rows: IRowData[][] = colors\n\t\t\t.sort((a, b) => a.id.localeCompare(b.id))\n\t\t\t.map((color) => {\n\t\t\t\treturn [\n\t\t\t\t\tnew MarkdownString().appendMarkdown(`\\`${color.id}\\``),\n\t\t\t\t\tcolor.description,\n\t\t\t\t\ttoColor(color.defaults.dark) ??\n\t\t\t\t\t\tnew MarkdownString().appendMarkdown(\n\t\t\t\t\t\t\t`\\`${color.defaults.dark}\\``,\n\t\t\t\t\t\t),\n\t\t\t\t\ttoColor(color.defaults.light) ??\n\t\t\t\t\t\tnew MarkdownString().appendMarkdown(\n\t\t\t\t\t\t\t`\\`${color.defaults.light}\\``,\n\t\t\t\t\t\t),\n\t\t\t\t\ttoColor(color.defaults.highContrast) ??\n\t\t\t\t\t\tnew MarkdownString().appendMarkdown(\n\t\t\t\t\t\t\t`\\`${color.defaults.highContrast}\\``,\n\t\t\t\t\t\t),\n\t\t\t\t];\n\t\t\t});\n\n\t\treturn {\n\t\t\tdata: {\n\t\t\t\theaders,\n\t\t\t\trows,\n\t\t\t},\n\t\t\tdispose: () => {},\n\t\t};\n\t}\n}\n\nRegistry.as<IExtensionFeaturesRegistry>(\n\tExtensions.ExtensionFeaturesRegistry,\n).registerExtensionFeature({\n\tid: \"colors\",\n\tlabel: nls.localize(\"colors\", \"Colors\"),\n\taccess: {\n\t\tcanToggle: false,\n\t},\n\trenderer: new SyncDescriptor(ColorDataRenderer),\n});\n"],
  "mappings": "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",
  "names": []
}
