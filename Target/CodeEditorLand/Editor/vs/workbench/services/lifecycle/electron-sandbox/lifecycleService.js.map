{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/lifecycle/electron-sandbox/lifecycleService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { handleVetos } from '../../../../platform/lifecycle/common/lifecycle.js';\nimport { ShutdownReason, ILifecycleService, IWillShutdownEventJoiner, WillShutdownJoinerOrder } from '../common/lifecycle.js';\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\nimport { ipcRenderer } from '../../../../base/parts/sandbox/electron-sandbox/globals.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { AbstractLifecycleService } from '../common/lifecycleService.js';\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { INativeHostService } from '../../../../platform/native/common/native.js';\nimport { Promises, disposableTimeout, raceCancellation } from '../../../../base/common/async.js';\nimport { toErrorMessage } from '../../../../base/common/errorMessage.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\n\nexport class NativeLifecycleService extends AbstractLifecycleService {\n\n\tprivate static readonly BEFORE_SHUTDOWN_WARNING_DELAY = 5000;\n\tprivate static readonly WILL_SHUTDOWN_WARNING_DELAY = 800;\n\n\tconstructor(\n\t\t@INativeHostService private readonly nativeHostService: INativeHostService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@ILogService logService: ILogService\n\t) {\n\t\tsuper(logService, storageService);\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tconst windowId = this.nativeHostService.windowId;\n\n\t\t// Main side indicates that window is about to unload, check for vetos\n\t\tipcRenderer.on('vscode:onBeforeUnload', async (event: unknown, reply: { okChannel: string; cancelChannel: string; reason: ShutdownReason }) => {\n\t\t\tthis.logService.trace(`[lifecycle] onBeforeUnload (reason: ${reply.reason})`);\n\n\t\t\t// trigger onBeforeShutdown events and veto collecting\n\t\t\tconst veto = await this.handleBeforeShutdown(reply.reason);\n\n\t\t\t// veto: cancel unload\n\t\t\tif (veto) {\n\t\t\t\tthis.logService.trace('[lifecycle] onBeforeUnload prevented via veto');\n\n\t\t\t\t// Indicate as event\n\t\t\t\tthis._onShutdownVeto.fire();\n\n\t\t\t\tipcRenderer.send(reply.cancelChannel, windowId);\n\t\t\t}\n\n\t\t\t// no veto: allow unload\n\t\t\telse {\n\t\t\t\tthis.logService.trace('[lifecycle] onBeforeUnload continues without veto');\n\n\t\t\t\tthis.shutdownReason = reply.reason;\n\t\t\t\tipcRenderer.send(reply.okChannel, windowId);\n\t\t\t}\n\t\t});\n\n\t\t// Main side indicates that we will indeed shutdown\n\t\tipcRenderer.on('vscode:onWillUnload', async (event: unknown, reply: { replyChannel: string; reason: ShutdownReason }) => {\n\t\t\tthis.logService.trace(`[lifecycle] onWillUnload (reason: ${reply.reason})`);\n\n\t\t\t// trigger onWillShutdown events and joining\n\t\t\tawait this.handleWillShutdown(reply.reason);\n\n\t\t\t// trigger onDidShutdown event now that we know we will quit\n\t\t\tthis._onDidShutdown.fire();\n\n\t\t\t// acknowledge to main side\n\t\t\tipcRenderer.send(reply.replyChannel, windowId);\n\t\t});\n\t}\n\n\tprotected async handleBeforeShutdown(reason: ShutdownReason): Promise<boolean> {\n\t\tconst logService = this.logService;\n\n\t\tconst vetos: (boolean | Promise<boolean>)[] = [];\n\t\tconst pendingVetos = new Set<string>();\n\n\t\tlet finalVeto: (() => boolean | Promise<boolean>) | undefined = undefined;\n\t\tlet finalVetoId: string | undefined = undefined;\n\n\t\t// before-shutdown event with veto support\n\t\tthis._onBeforeShutdown.fire({\n\t\t\treason,\n\t\t\tveto(value, id) {\n\t\t\t\tvetos.push(value);\n\n\t\t\t\t// Log any veto instantly\n\t\t\t\tif (value === true) {\n\t\t\t\t\tlogService.info(`[lifecycle]: Shutdown was prevented (id: ${id})`);\n\t\t\t\t}\n\n\t\t\t\t// Track promise completion\n\t\t\t\telse if (value instanceof Promise) {\n\t\t\t\t\tpendingVetos.add(id);\n\t\t\t\t\tvalue.then(veto => {\n\t\t\t\t\t\tif (veto === true) {\n\t\t\t\t\t\t\tlogService.info(`[lifecycle]: Shutdown was prevented (id: ${id})`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}).finally(() => pendingVetos.delete(id));\n\t\t\t\t}\n\t\t\t},\n\t\t\tfinalVeto(value, id) {\n\t\t\t\tif (!finalVeto) {\n\t\t\t\t\tfinalVeto = value;\n\t\t\t\t\tfinalVetoId = id;\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(`[lifecycle]: Final veto is already defined (id: ${id})`);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst longRunningBeforeShutdownWarning = disposableTimeout(() => {\n\t\t\tlogService.warn(`[lifecycle] onBeforeShutdown is taking a long time, pending operations: ${Array.from(pendingVetos).join(', ')}`);\n\t\t}, NativeLifecycleService.BEFORE_SHUTDOWN_WARNING_DELAY);\n\n\t\ttry {\n\n\t\t\t// First: run list of vetos in parallel\n\t\t\tlet veto = await handleVetos(vetos, error => this.handleBeforeShutdownError(error, reason));\n\t\t\tif (veto) {\n\t\t\t\treturn veto;\n\t\t\t}\n\n\t\t\t// Second: run the final veto if defined\n\t\t\tif (finalVeto) {\n\t\t\t\ttry {\n\t\t\t\t\tpendingVetos.add(finalVetoId as unknown as string);\n\t\t\t\t\tveto = await (finalVeto as () => Promise<boolean>)();\n\t\t\t\t\tif (veto) {\n\t\t\t\t\t\tlogService.info(`[lifecycle]: Shutdown was prevented by final veto (id: ${finalVetoId})`);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tveto = true; // treat error as veto\n\n\t\t\t\t\tthis.handleBeforeShutdownError(error, reason);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn veto;\n\t\t} finally {\n\t\t\tlongRunningBeforeShutdownWarning.dispose();\n\t\t}\n\t}\n\n\tprivate handleBeforeShutdownError(error: Error, reason: ShutdownReason): void {\n\t\tthis.logService.error(`[lifecycle]: Error during before-shutdown phase (error: ${toErrorMessage(error)})`);\n\n\t\tthis._onBeforeShutdownError.fire({ reason, error });\n\t}\n\n\tprotected async handleWillShutdown(reason: ShutdownReason): Promise<void> {\n\t\tconst joiners: Promise<void>[] = [];\n\t\tconst lastJoiners: (() => Promise<void>)[] = [];\n\t\tconst pendingJoiners = new Set<IWillShutdownEventJoiner>();\n\t\tconst cts = new CancellationTokenSource();\n\t\tthis._onWillShutdown.fire({\n\t\t\treason,\n\t\t\ttoken: cts.token,\n\t\t\tjoiners: () => Array.from(pendingJoiners.values()),\n\t\t\tjoin(promiseOrPromiseFn, joiner) {\n\t\t\t\tpendingJoiners.add(joiner);\n\n\t\t\t\tif (joiner.order === WillShutdownJoinerOrder.Last) {\n\t\t\t\t\tconst promiseFn = typeof promiseOrPromiseFn === 'function' ? promiseOrPromiseFn : () => promiseOrPromiseFn;\n\t\t\t\t\tlastJoiners.push(() => promiseFn().finally(() => pendingJoiners.delete(joiner)));\n\t\t\t\t} else {\n\t\t\t\t\tconst promise = typeof promiseOrPromiseFn === 'function' ? promiseOrPromiseFn() : promiseOrPromiseFn;\n\t\t\t\t\tpromise.finally(() => pendingJoiners.delete(joiner));\n\t\t\t\t\tjoiners.push(promise);\n\t\t\t\t}\n\t\t\t},\n\t\t\tforce: () => {\n\t\t\t\tcts.dispose(true);\n\t\t\t}\n\t\t});\n\n\t\tconst longRunningWillShutdownWarning = disposableTimeout(() => {\n\t\t\tthis.logService.warn(`[lifecycle] onWillShutdown is taking a long time, pending operations: ${Array.from(pendingJoiners).map(joiner => joiner.id).join(', ')}`);\n\t\t}, NativeLifecycleService.WILL_SHUTDOWN_WARNING_DELAY);\n\n\t\ttry {\n\t\t\tawait raceCancellation(Promises.settled(joiners), cts.token);\n\t\t} catch (error) {\n\t\t\tthis.logService.error(`[lifecycle]: Error during will-shutdown phase in default joiners (error: ${toErrorMessage(error)})`);\n\t\t}\n\n\t\ttry {\n\t\t\tawait raceCancellation(Promises.settled(lastJoiners.map(lastJoiner => lastJoiner())), cts.token);\n\t\t} catch (error) {\n\t\t\tthis.logService.error(`[lifecycle]: Error during will-shutdown phase in last joiners (error: ${toErrorMessage(error)})`);\n\t\t}\n\n\t\tlongRunningWillShutdownWarning.dispose();\n\t}\n\n\tshutdown(): Promise<void> {\n\t\treturn this.nativeHostService.closeWindow();\n\t}\n}\n\nregisterSingleton(ILifecycleService, NativeLifecycleService, InstantiationType.Eager);\n"],
  "mappings": "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",
  "names": []
}
