{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/lifecycle/test/electron-sandbox/lifecycleService.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { timeout } from '../../../../../base/common/async.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { runWithFakedTimers } from '../../../../../base/test/common/timeTravelScheduler.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { ShutdownReason, WillShutdownJoinerOrder } from '../../common/lifecycle.js';\nimport { NativeLifecycleService } from '../../electron-sandbox/lifecycleService.js';\nimport { workbenchInstantiationService } from '../../../../test/electron-sandbox/workbenchTestServices.js';\n\nsuite('Lifecycleservice', function () {\n\n\tlet lifecycleService: TestLifecycleService;\n\tconst disposables = new DisposableStore();\n\n\tclass TestLifecycleService extends NativeLifecycleService {\n\n\t\ttestHandleBeforeShutdown(reason: ShutdownReason): Promise<boolean> {\n\t\t\treturn super.handleBeforeShutdown(reason);\n\t\t}\n\n\t\ttestHandleWillShutdown(reason: ShutdownReason): Promise<void> {\n\t\t\treturn super.handleWillShutdown(reason);\n\t\t}\n\t}\n\n\tsetup(async () => {\n\t\tconst instantiationService = workbenchInstantiationService(undefined, disposables);\n\t\tlifecycleService = disposables.add(instantiationService.createInstance(TestLifecycleService));\n\t});\n\n\tteardown(async () => {\n\t\tdisposables.clear();\n\t});\n\n\ttest('onBeforeShutdown - final veto called after other vetos', async function () {\n\t\tlet vetoCalled = false;\n\t\tlet finalVetoCalled = false;\n\n\t\tconst order: number[] = [];\n\n\t\tdisposables.add(lifecycleService.onBeforeShutdown(e => {\n\t\t\te.veto(new Promise<boolean>(resolve => {\n\t\t\t\tvetoCalled = true;\n\t\t\t\torder.push(1);\n\n\t\t\t\tresolve(false);\n\t\t\t}), 'test');\n\t\t}));\n\n\t\tdisposables.add(lifecycleService.onBeforeShutdown(e => {\n\t\t\te.finalVeto(() => {\n\t\t\t\treturn new Promise<boolean>(resolve => {\n\t\t\t\t\tfinalVetoCalled = true;\n\t\t\t\t\torder.push(2);\n\n\t\t\t\t\tresolve(true);\n\t\t\t\t});\n\t\t\t}, 'test');\n\t\t}));\n\n\t\tconst veto = await lifecycleService.testHandleBeforeShutdown(ShutdownReason.QUIT);\n\n\t\tassert.strictEqual(veto, true);\n\t\tassert.strictEqual(vetoCalled, true);\n\t\tassert.strictEqual(finalVetoCalled, true);\n\t\tassert.strictEqual(order[0], 1);\n\t\tassert.strictEqual(order[1], 2);\n\t});\n\n\ttest('onBeforeShutdown - final veto not called when veto happened before', async function () {\n\t\tlet vetoCalled = false;\n\t\tlet finalVetoCalled = false;\n\n\t\tdisposables.add(lifecycleService.onBeforeShutdown(e => {\n\t\t\te.veto(new Promise<boolean>(resolve => {\n\t\t\t\tvetoCalled = true;\n\n\t\t\t\tresolve(true);\n\t\t\t}), 'test');\n\t\t}));\n\n\t\tdisposables.add(lifecycleService.onBeforeShutdown(e => {\n\t\t\te.finalVeto(() => {\n\t\t\t\treturn new Promise<boolean>(resolve => {\n\t\t\t\t\tfinalVetoCalled = true;\n\n\t\t\t\t\tresolve(true);\n\t\t\t\t});\n\t\t\t}, 'test');\n\t\t}));\n\n\t\tconst veto = await lifecycleService.testHandleBeforeShutdown(ShutdownReason.QUIT);\n\n\t\tassert.strictEqual(veto, true);\n\t\tassert.strictEqual(vetoCalled, true);\n\t\tassert.strictEqual(finalVetoCalled, false);\n\t});\n\n\ttest('onBeforeShutdown - veto with error is treated as veto', async function () {\n\t\tdisposables.add(lifecycleService.onBeforeShutdown(e => {\n\t\t\te.veto(new Promise<boolean>((resolve, reject) => {\n\t\t\t\treject(new Error('Fail'));\n\t\t\t}), 'test');\n\t\t}));\n\n\t\tconst veto = await lifecycleService.testHandleBeforeShutdown(ShutdownReason.QUIT);\n\n\t\tassert.strictEqual(veto, true);\n\t});\n\n\ttest('onBeforeShutdown - final veto with error is treated as veto', async function () {\n\t\tdisposables.add(lifecycleService.onBeforeShutdown(e => {\n\t\t\te.finalVeto(() => new Promise<boolean>((resolve, reject) => {\n\t\t\t\treject(new Error('Fail'));\n\t\t\t}), 'test');\n\t\t}));\n\n\t\tconst veto = await lifecycleService.testHandleBeforeShutdown(ShutdownReason.QUIT);\n\n\t\tassert.strictEqual(veto, true);\n\t});\n\n\ttest('onWillShutdown - join', async function () {\n\t\tlet joinCalled = false;\n\n\t\tdisposables.add(lifecycleService.onWillShutdown(e => {\n\t\t\te.join(new Promise(resolve => {\n\t\t\t\tjoinCalled = true;\n\n\t\t\t\tresolve();\n\t\t\t}), { id: 'test', label: 'test' });\n\t\t}));\n\n\t\tawait lifecycleService.testHandleWillShutdown(ShutdownReason.QUIT);\n\n\t\tassert.strictEqual(joinCalled, true);\n\t});\n\n\ttest('onWillShutdown - join with error is handled', async function () {\n\t\tlet joinCalled = false;\n\n\t\tdisposables.add(lifecycleService.onWillShutdown(e => {\n\t\t\te.join(new Promise((resolve, reject) => {\n\t\t\t\tjoinCalled = true;\n\n\t\t\t\treject(new Error('Fail'));\n\t\t\t}), { id: 'test', label: 'test' });\n\t\t}));\n\n\t\tawait lifecycleService.testHandleWillShutdown(ShutdownReason.QUIT);\n\n\t\tassert.strictEqual(joinCalled, true);\n\t});\n\n\ttest('onWillShutdown - join order', async function () {\n\t\treturn runWithFakedTimers({ useFakeTimers: true }, async () => {\n\t\t\tconst order: string[] = [];\n\n\t\t\tdisposables.add(lifecycleService.onWillShutdown(e => {\n\t\t\t\te.join(async () => {\n\t\t\t\t\torder.push('disconnect start');\n\t\t\t\t\tawait timeout(1);\n\t\t\t\t\torder.push('disconnect end');\n\t\t\t\t}, { id: 'test', label: 'test', order: WillShutdownJoinerOrder.Last });\n\n\t\t\t\te.join((async () => {\n\t\t\t\t\torder.push('default start');\n\t\t\t\t\tawait timeout(1);\n\t\t\t\t\torder.push('default end');\n\t\t\t\t})(), { id: 'test', label: 'test', order: WillShutdownJoinerOrder.Default });\n\t\t\t}));\n\n\t\t\tawait lifecycleService.testHandleWillShutdown(ShutdownReason.QUIT);\n\n\t\t\tassert.deepStrictEqual(order, [\n\t\t\t\t'default start',\n\t\t\t\t'default end',\n\t\t\t\t'disconnect start',\n\t\t\t\t'disconnect end'\n\t\t\t]);\n\t\t});\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"],
  "mappings": "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",
  "names": []
}
