{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/lifecycle/browser/lifecycleService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ShutdownReason, ILifecycleService, StartupKind } from '../common/lifecycle.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { AbstractLifecycleService } from '../common/lifecycleService.js';\nimport { localize } from '../../../../nls.js';\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { IDisposable } from '../../../../base/common/lifecycle.js';\nimport { addDisposableListener, EventType } from '../../../../base/browser/dom.js';\nimport { IStorageService, WillSaveStateReason } from '../../../../platform/storage/common/storage.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { mainWindow } from '../../../../base/browser/window.js';\n\nexport class BrowserLifecycleService extends AbstractLifecycleService {\n\n\tprivate beforeUnloadListener: IDisposable | undefined = undefined;\n\tprivate unloadListener: IDisposable | undefined = undefined;\n\n\tprivate ignoreBeforeUnload = false;\n\n\tprivate didUnload = false;\n\n\tconstructor(\n\t\t@ILogService logService: ILogService,\n\t\t@IStorageService storageService: IStorageService\n\t) {\n\t\tsuper(logService, storageService);\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// Listen to `beforeUnload` to support to veto\n\t\tthis.beforeUnloadListener = addDisposableListener(mainWindow, EventType.BEFORE_UNLOAD, (e: BeforeUnloadEvent) => this.onBeforeUnload(e));\n\n\t\t// Listen to `pagehide` to support orderly shutdown\n\t\t// We explicitly do not listen to `unload` event\n\t\t// which would disable certain browser caching.\n\t\t// We currently do not handle the `persisted` property\n\t\t// (https://github.com/microsoft/vscode/issues/136216)\n\t\tthis.unloadListener = addDisposableListener(mainWindow, EventType.PAGE_HIDE, () => this.onUnload());\n\t}\n\n\tprivate onBeforeUnload(event: BeforeUnloadEvent): void {\n\n\t\t// Before unload ignored (once)\n\t\tif (this.ignoreBeforeUnload) {\n\t\t\tthis.logService.info('[lifecycle] onBeforeUnload triggered but ignored once');\n\n\t\t\tthis.ignoreBeforeUnload = false;\n\t\t}\n\n\t\t// Before unload with veto support\n\t\telse {\n\t\t\tthis.logService.info('[lifecycle] onBeforeUnload triggered and handled with veto support');\n\n\t\t\tthis.doShutdown(() => this.vetoBeforeUnload(event));\n\t\t}\n\t}\n\n\tprivate vetoBeforeUnload(event: BeforeUnloadEvent): void {\n\t\tevent.preventDefault();\n\t\tevent.returnValue = localize('lifecycleVeto', \"Changes that you made may not be saved. Please check press 'Cancel' and try again.\");\n\t}\n\n\twithExpectedShutdown(reason: ShutdownReason): Promise<void>;\n\twithExpectedShutdown(reason: { disableShutdownHandling: true }, callback: Function): void;\n\twithExpectedShutdown(reason: ShutdownReason | { disableShutdownHandling: true }, callback?: Function): Promise<void> | void {\n\n\t\t// Standard shutdown\n\t\tif (typeof reason === 'number') {\n\t\t\tthis.shutdownReason = reason;\n\n\t\t\t// Ensure UI state is persisted\n\t\t\treturn this.storageService.flush(WillSaveStateReason.SHUTDOWN);\n\t\t}\n\n\t\t// Before unload handling ignored for duration of callback\n\t\telse {\n\t\t\tthis.ignoreBeforeUnload = true;\n\t\t\ttry {\n\t\t\t\tcallback?.();\n\t\t\t} finally {\n\t\t\t\tthis.ignoreBeforeUnload = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tasync shutdown(): Promise<void> {\n\t\tthis.logService.info('[lifecycle] shutdown triggered');\n\n\t\t// An explicit shutdown renders our unload\n\t\t// event handlers disabled, so dispose them.\n\t\tthis.beforeUnloadListener?.dispose();\n\t\tthis.unloadListener?.dispose();\n\n\t\t// Ensure UI state is persisted\n\t\tawait this.storageService.flush(WillSaveStateReason.SHUTDOWN);\n\n\t\t// Handle shutdown without veto support\n\t\tthis.doShutdown();\n\t}\n\n\tprivate doShutdown(vetoShutdown?: () => void): void {\n\t\tconst logService = this.logService;\n\n\t\t// Optimistically trigger a UI state flush\n\t\t// without waiting for it. The browser does\n\t\t// not guarantee that this is being executed\n\t\t// but if a dialog opens, we have a chance\n\t\t// to succeed.\n\t\tthis.storageService.flush(WillSaveStateReason.SHUTDOWN);\n\n\t\tlet veto = false;\n\n\t\tfunction handleVeto(vetoResult: boolean | Promise<boolean>, id: string) {\n\t\t\tif (typeof vetoShutdown !== 'function') {\n\t\t\t\treturn; // veto handling disabled\n\t\t\t}\n\n\t\t\tif (vetoResult instanceof Promise) {\n\t\t\t\tlogService.error(`[lifecycle] Long running operations before shutdown are unsupported in the web (id: ${id})`);\n\n\t\t\t\tveto = true; // implicitly vetos since we cannot handle promises in web\n\t\t\t}\n\n\t\t\tif (vetoResult === true) {\n\t\t\t\tlogService.info(`[lifecycle]: Unload was prevented (id: ${id})`);\n\n\t\t\t\tveto = true;\n\t\t\t}\n\t\t}\n\n\t\t// Before Shutdown\n\t\tthis._onBeforeShutdown.fire({\n\t\t\treason: ShutdownReason.QUIT,\n\t\t\tveto(value, id) {\n\t\t\t\thandleVeto(value, id);\n\t\t\t},\n\t\t\tfinalVeto(valueFn, id) {\n\t\t\t\thandleVeto(valueFn(), id); // in browser, trigger instantly because we do not support async anyway\n\t\t\t}\n\t\t});\n\n\t\t// Veto: handle if provided\n\t\tif (veto && typeof vetoShutdown === 'function') {\n\t\t\treturn vetoShutdown();\n\t\t}\n\n\t\t// No veto, continue to shutdown\n\t\treturn this.onUnload();\n\t}\n\n\tprivate onUnload(): void {\n\t\tif (this.didUnload) {\n\t\t\treturn; // only once\n\t\t}\n\n\t\tthis.didUnload = true;\n\n\t\t// Register a late `pageshow` listener specifically on unload\n\t\tthis._register(addDisposableListener(mainWindow, EventType.PAGE_SHOW, (e: PageTransitionEvent) => this.onLoadAfterUnload(e)));\n\n\t\t// First indicate will-shutdown\n\t\tconst logService = this.logService;\n\t\tthis._onWillShutdown.fire({\n\t\t\treason: ShutdownReason.QUIT,\n\t\t\tjoiners: () => [], \t\t\t\t// Unsupported in web\n\t\t\ttoken: CancellationToken.None, \t// Unsupported in web\n\t\t\tjoin(promise, joiner) {\n\t\t\t\tlogService.error(`[lifecycle] Long running operations during shutdown are unsupported in the web (id: ${joiner.id})`);\n\t\t\t},\n\t\t\tforce: () => { /* No-Op in web */ },\n\t\t});\n\n\t\t// Finally end with did-shutdown\n\t\tthis._onDidShutdown.fire();\n\t}\n\n\tprivate onLoadAfterUnload(event: PageTransitionEvent): void {\n\n\t\t// We only really care about page-show events\n\t\t// where the browser indicates to us that the\n\t\t// page was restored from cache and not freshly\n\t\t// loaded.\n\t\tconst wasRestoredFromCache = event.persisted;\n\t\tif (!wasRestoredFromCache) {\n\t\t\treturn;\n\t\t}\n\n\t\t// At this point, we know that the page was restored from\n\t\t// cache even though it was unloaded before,\n\t\t// so in order to get back to a functional workbench, we\n\t\t// currently can only reload the window\n\t\t// Docs: https://web.dev/bfcache/#optimize-your-pages-for-bfcache\n\t\t// Refs: https://github.com/microsoft/vscode/issues/136035\n\t\tthis.withExpectedShutdown({ disableShutdownHandling: true }, () => mainWindow.location.reload());\n\t}\n\n\tprotected override doResolveStartupKind(): StartupKind | undefined {\n\t\tlet startupKind = super.doResolveStartupKind();\n\t\tif (typeof startupKind !== 'number') {\n\t\t\tconst timing = performance.getEntriesByType('navigation').at(0) as PerformanceNavigationTiming | undefined;\n\t\t\tif (timing?.type === 'reload') {\n\t\t\t\t// MDN: https://developer.mozilla.org/en-US/docs/Web/API/PerformanceNavigationTiming/type#value\n\t\t\t\tstartupKind = StartupKind.ReloadedWindow;\n\t\t\t}\n\t\t}\n\n\t\treturn startupKind;\n\t}\n}\n\nregisterSingleton(ILifecycleService, BrowserLifecycleService, InstantiationType.Eager);\n"],
  "mappings": "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",
  "names": []
}
