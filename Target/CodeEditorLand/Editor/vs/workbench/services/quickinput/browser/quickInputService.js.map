{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/quickinput/browser/quickInputService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILayoutService } from '../../../../platform/layout/browser/layoutService.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { QuickInputController } from '../../../../platform/quickinput/browser/quickInputController.js';\nimport { QuickInputService as BaseQuickInputService } from '../../../../platform/quickinput/browser/quickInputService.js';\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { InQuickPickContextKey } from '../../../browser/quickaccess.js';\n\nexport class QuickInputService extends BaseQuickInputService {\n\n\tprivate readonly inQuickInputContext = InQuickPickContextKey.bindTo(this.contextKeyService);\n\n\tconstructor(\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ILayoutService layoutService: ILayoutService,\n\t) {\n\t\tsuper(instantiationService, contextKeyService, themeService, layoutService, configurationService);\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.onShow(() => this.inQuickInputContext.set(true)));\n\t\tthis._register(this.onHide(() => this.inQuickInputContext.set(false)));\n\t}\n\n\tprotected override createController(): QuickInputController {\n\t\treturn super.createController(this.layoutService, {\n\t\t\tignoreFocusOut: () => !this.configurationService.getValue('workbench.quickOpen.closeOnFocusLost'),\n\t\t\tbackKeybindingLabel: () => this.keybindingService.lookupKeybinding('workbench.action.quickInputBack')?.getLabel() || undefined,\n\t\t});\n\t}\n}\n\nregisterSingleton(IQuickInputService, QuickInputService, InstantiationType.Delayed);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,sBAAsB;AAC/B,SAAS,6BAA6B;AACtC,SAAS,qBAAqB;AAC9B,SAAS,6BAA6B;AACtC,SAAS,0BAA0B;AACnC,SAAS,0BAA0B;AACnC,SAAS,4BAA4B;AACrC,SAAS,qBAAqB,6BAA6B;AAC3D,SAAS,mBAAmB,yBAAyB;AACrD,SAAS,0BAA0B;AACnC,SAAS,6BAA6B;AAE/B,IAAM,oBAAN,cAAgC,sBAAsB;AAAA,EAI5D,YACwB,sBACA,sBACc,mBACjB,mBACL,cACC,eACf;AACD,UAAM,sBAAsB,mBAAmB,cAAc,eAAe,oBAAoB;AAL3D;AAOrC,SAAK,kBAAkB;AAAA,EACxB;AAAA,EAhCD,OAiB6D;AAAA;AAAA;AAAA,EAE3C,sBAAsB,sBAAsB,OAAO,KAAK,iBAAiB;AAAA,EAelF,oBAA0B;AACjC,SAAK,UAAU,KAAK,OAAO,MAAM,KAAK,oBAAoB,IAAI,IAAI,CAAC,CAAC;AACpE,SAAK,UAAU,KAAK,OAAO,MAAM,KAAK,oBAAoB,IAAI,KAAK,CAAC,CAAC;AAAA,EACtE;AAAA,EAEmB,mBAAyC;AAC3D,WAAO,MAAM,iBAAiB,KAAK,eAAe;AAAA,MACjD,gBAAgB,6BAAM,CAAC,KAAK,qBAAqB,SAAS,sCAAsC,GAAhF;AAAA,MAChB,qBAAqB,6BAAM,KAAK,kBAAkB,iBAAiB,iCAAiC,GAAG,SAAS,KAAK,QAAhG;AAAA,IACtB,CAAC;AAAA,EACF;AACD;AA5Ba,oBAAN;AAAA,EAKJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAVU;AA8Bb,kBAAkB,oBAAoB,mBAAmB,kBAAkB,OAAO;",
  "names": []
}
