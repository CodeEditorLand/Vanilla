{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/quickinput/browser/quickInputService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IConfigurationService } from \"../../../../platform/configuration/common/configuration.js\";\nimport { IContextKeyService } from \"../../../../platform/contextkey/common/contextkey.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../../../platform/keybinding/common/keybinding.js\";\nimport { ILayoutService } from \"../../../../platform/layout/browser/layoutService.js\";\nimport type { QuickInputController } from \"../../../../platform/quickinput/browser/quickInputController.js\";\nimport { QuickInputService as BaseQuickInputService } from \"../../../../platform/quickinput/browser/quickInputService.js\";\nimport { IQuickInputService } from \"../../../../platform/quickinput/common/quickInput.js\";\nimport { IThemeService } from \"../../../../platform/theme/common/themeService.js\";\nimport { InQuickPickContextKey } from \"../../../browser/quickaccess.js\";\n\nexport class QuickInputService extends BaseQuickInputService {\n\tprivate readonly inQuickInputContext = InQuickPickContextKey.bindTo(\n\t\tthis.contextKeyService,\n\t);\n\n\tconstructor(\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ILayoutService layoutService: ILayoutService,\n\t) {\n\t\tsuper(instantiationService, contextKeyService, themeService, layoutService, configurationService);\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.onShow(() => this.inQuickInputContext.set(true)));\n\t\tthis._register(this.onHide(() => this.inQuickInputContext.set(false)));\n\t}\n\n\tprotected override createController(): QuickInputController {\n\t\treturn super.createController(this.layoutService, {\n\t\t\tignoreFocusOut: () =>\n\t\t\t\t!this.configurationService.getValue(\n\t\t\t\t\t\"workbench.quickOpen.closeOnFocusLost\",\n\t\t\t\t),\n\t\t\tbackKeybindingLabel: () =>\n\t\t\t\tthis.keybindingService\n\t\t\t\t\t.lookupKeybinding(\"workbench.action.quickInputBack\")\n\t\t\t\t\t?.getLabel() || undefined,\n\t\t});\n\t}\n}\n\nregisterSingleton(\n\tIQuickInputService,\n\tQuickInputService,\n\tInstantiationType.Delayed,\n);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,6BAA6B;AACtC,SAAS,0BAA0B;AACnC;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,6BAA6B;AACtC,SAAS,0BAA0B;AACnC,SAAS,sBAAsB;AAE/B,SAAS,qBAAqB,6BAA6B;AAC3D,SAAS,0BAA0B;AACnC,SAAS,qBAAqB;AAC9B,SAAS,6BAA6B;AAE/B,IAAM,oBAAN,cAAgC,sBAAsB;AAAA,EAK5D,YACwB,sBACA,sBACc,mBACjB,mBACL,cACC,eACf;AACD,UAAM,sBAAsB,mBAAmB,cAAc,eAAe,oBAAoB;AAL3D;AAOrC,SAAK,kBAAkB;AAAA,EACxB;AAAA,EApCD,OAoB6D;AAAA;AAAA;AAAA,EAC3C,sBAAsB,sBAAsB;AAAA,IAC5D,KAAK;AAAA,EACN;AAAA,EAeQ,oBAA0B;AACjC,SAAK,UAAU,KAAK,OAAO,MAAM,KAAK,oBAAoB,IAAI,IAAI,CAAC,CAAC;AACpE,SAAK,UAAU,KAAK,OAAO,MAAM,KAAK,oBAAoB,IAAI,KAAK,CAAC,CAAC;AAAA,EACtE;AAAA,EAEmB,mBAAyC;AAC3D,WAAO,MAAM,iBAAiB,KAAK,eAAe;AAAA,MACjD,gBAAgB,6BACf,CAAC,KAAK,qBAAqB;AAAA,QAC1B;AAAA,MACD,GAHe;AAAA,MAIhB,qBAAqB,6BACpB,KAAK,kBACH,iBAAiB,iCAAiC,GACjD,SAAS,KAAK,QAHG;AAAA,IAItB,CAAC;AAAA,EACF;AACD;AAnCa,oBAAN;AAAA,EAMJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAXU;AAqCb;AAAA,EACC;AAAA,EACA;AAAA,EACA,kBAAkB;AACnB;",
  "names": []
}
