{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/label/common/labelService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from \"../../../../base/common/event.js\";\nimport { match } from \"../../../../base/common/glob.js\";\nimport { getPathLabel, tildify } from \"../../../../base/common/labels.js\";\nimport {\n\tDisposable,\n\ttype IDisposable,\n\tdispose,\n} from \"../../../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../../../base/common/network.js\";\nimport { posix, sep, win32 } from \"../../../../base/common/path.js\";\nimport { OS, OperatingSystem } from \"../../../../base/common/platform.js\";\nimport {\n\tbasename,\n\tbasenameOrAuthority,\n\tdirname,\n\tjoinPath,\n} from \"../../../../base/common/resources.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { localize } from \"../../../../nls.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport {\n\ttype IFormatterChangeEvent,\n\tILabelService,\n\ttype ResourceLabelFormatter,\n\ttype ResourceLabelFormatting,\n\tVerbosity,\n} from \"../../../../platform/label/common/label.js\";\nimport { Registry } from \"../../../../platform/registry/common/platform.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport {\n\ttype ISingleFolderWorkspaceIdentifier,\n\ttype IWorkspace,\n\tIWorkspaceContextService,\n\ttype IWorkspaceIdentifier,\n\tWORKSPACE_EXTENSION,\n\tisSingleFolderWorkspaceIdentifier,\n\tisTemporaryWorkspace,\n\tisUntitledWorkspace,\n\tisWorkspace,\n\tisWorkspaceIdentifier,\n\ttoWorkspaceIdentifier,\n} from \"../../../../platform/workspace/common/workspace.js\";\nimport {\n\ttype IWorkbenchContribution,\n\ttype IWorkbenchContributionsRegistry,\n\tExtensions as WorkbenchExtensions,\n} from \"../../../common/contributions.js\";\nimport { Memento } from \"../../../common/memento.js\";\nimport { IWorkbenchEnvironmentService } from \"../../environment/common/environmentService.js\";\nimport { isProposedApiEnabled } from \"../../extensions/common/extensions.js\";\nimport { ExtensionsRegistry } from \"../../extensions/common/extensionsRegistry.js\";\nimport {\n\tILifecycleService,\n\tLifecyclePhase,\n} from \"../../lifecycle/common/lifecycle.js\";\nimport { IPathService } from \"../../path/common/pathService.js\";\nimport { IRemoteAgentService } from \"../../remote/common/remoteAgentService.js\";\n\nconst resourceLabelFormattersExtPoint =\n\tExtensionsRegistry.registerExtensionPoint<ResourceLabelFormatter[]>({\n\t\textensionPoint: \"resourceLabelFormatters\",\n\t\tjsonSchema: {\n\t\t\tdescription: localize(\n\t\t\t\t\"vscode.extension.contributes.resourceLabelFormatters\",\n\t\t\t\t\"Contributes resource label formatting rules.\",\n\t\t\t),\n\t\t\ttype: \"array\",\n\t\t\titems: {\n\t\t\t\ttype: \"object\",\n\t\t\t\trequired: [\"scheme\", \"formatting\"],\n\t\t\t\tproperties: {\n\t\t\t\t\tscheme: {\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\t\"vscode.extension.contributes.resourceLabelFormatters.scheme\",\n\t\t\t\t\t\t\t'URI scheme on which to match the formatter on. For example \"file\". Simple glob patterns are supported.',\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t\tauthority: {\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\t\"vscode.extension.contributes.resourceLabelFormatters.authority\",\n\t\t\t\t\t\t\t\"URI authority on which to match the formatter on. Simple glob patterns are supported.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t\tformatting: {\n\t\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\t\"vscode.extension.contributes.resourceLabelFormatters.formatting\",\n\t\t\t\t\t\t\t\"Rules for formatting uri resource labels.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\t\t\t\"vscode.extension.contributes.resourceLabelFormatters.label\",\n\t\t\t\t\t\t\t\t\t\"Label rules to display. For example: myLabel:/${path}. ${path}, ${scheme}, ${authority} and ${authoritySuffix} are supported as variables.\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tseparator: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\t\t\t\"vscode.extension.contributes.resourceLabelFormatters.separator\",\n\t\t\t\t\t\t\t\t\t\"Separator to be used in the uri label display. '/' or '' as an example.\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tstripPathStartingSeparator: {\n\t\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\t\t\t\"vscode.extension.contributes.resourceLabelFormatters.stripPathStartingSeparator\",\n\t\t\t\t\t\t\t\t\t\"Controls whether `${path}` substitutions should have starting separator characters stripped.\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttildify: {\n\t\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\t\t\t\"vscode.extension.contributes.resourceLabelFormatters.tildify\",\n\t\t\t\t\t\t\t\t\t\"Controls if the start of the uri label should be tildified when possible.\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tworkspaceSuffix: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t\tdescription: localize(\n\t\t\t\t\t\t\t\t\t\"vscode.extension.contributes.resourceLabelFormatters.formatting.workspaceSuffix\",\n\t\t\t\t\t\t\t\t\t\"Suffix appended to the workspace label.\",\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t});\n\nconst sepRegexp = /\\//g;\nconst labelMatchingRegexp =\n\t/\\$\\{(scheme|authoritySuffix|authority|path|(query)\\.(.+?))\\}/g;\n\nfunction hasDriveLetterIgnorePlatform(path: string): boolean {\n\treturn !!(path && path[2] === \":\");\n}\n\nclass ResourceLabelFormattersHandler implements IWorkbenchContribution {\n\tprivate readonly formattersDisposables = new Map<\n\t\tResourceLabelFormatter,\n\t\tIDisposable\n\t>();\n\n\tconstructor(@ILabelService labelService: ILabelService) {\n\t\tresourceLabelFormattersExtPoint.setHandler((extensions, delta) => {\n\t\t\tfor (const added of delta.added) {\n\t\t\t\tfor (const untrustedFormatter of added.value) {\n\t\t\t\t\t// We cannot trust that the formatter as it comes from an extension\n\t\t\t\t\t// adheres to our interface, so for the required properties we fill\n\t\t\t\t\t// in some defaults if missing.\n\n\t\t\t\t\tconst formatter = { ...untrustedFormatter };\n\t\t\t\t\tif (typeof formatter.formatting.label !== \"string\") {\n\t\t\t\t\t\tformatter.formatting.label = \"${authority}${path}\";\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof formatter.formatting.separator !== `string`) {\n\t\t\t\t\t\tformatter.formatting.separator = sep;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t!isProposedApiEnabled(\n\t\t\t\t\t\t\tadded.description,\n\t\t\t\t\t\t\t\"contribLabelFormatterWorkspaceTooltip\",\n\t\t\t\t\t\t) &&\n\t\t\t\t\t\tformatter.formatting.workspaceTooltip\n\t\t\t\t\t) {\n\t\t\t\t\t\tformatter.formatting.workspaceTooltip = undefined; // workspaceTooltip is only proposed\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.formattersDisposables.set(\n\t\t\t\t\t\tformatter,\n\t\t\t\t\t\tlabelService.registerFormatter(formatter),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const removed of delta.removed) {\n\t\t\t\tfor (const formatter of removed.value) {\n\t\t\t\t\tdispose(this.formattersDisposables.get(formatter));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\nRegistry.as<IWorkbenchContributionsRegistry>(\n\tWorkbenchExtensions.Workbench,\n).registerWorkbenchContribution(\n\tResourceLabelFormattersHandler,\n\tLifecyclePhase.Restored,\n);\n\nconst FORMATTER_CACHE_SIZE = 50;\n\ninterface IStoredFormatters {\n\tformatters?: ResourceLabelFormatter[];\n\ti?: number;\n}\n\nexport class LabelService extends Disposable implements ILabelService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate formatters: ResourceLabelFormatter[];\n\n\tprivate readonly _onDidChangeFormatters = this._register(\n\t\tnew Emitter<IFormatterChangeEvent>({ leakWarningThreshold: 400 }),\n\t);\n\treadonly onDidChangeFormatters = this._onDidChangeFormatters.event;\n\n\tprivate readonly storedFormattersMemento: Memento;\n\tprivate readonly storedFormatters: IStoredFormatters;\n\tprivate os: OperatingSystem;\n\tprivate userHome: URI | undefined;\n\n\tconstructor(\n\t\t@IWorkbenchEnvironmentService\n\t\tprivate readonly environmentService: IWorkbenchEnvironmentService,\n\t\t@IWorkspaceContextService\n\t\tprivate readonly contextService: IWorkspaceContextService,\n\t\t@IPathService private readonly pathService: IPathService,\n\t\t@IRemoteAgentService\n\t\tprivate readonly remoteAgentService: IRemoteAgentService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@ILifecycleService lifecycleService: ILifecycleService,\n\t) {\n\t\tsuper();\n\n\t\t// Find some meaningful defaults until the remote environment\n\t\t// is resolved, by taking the current OS we are running in\n\t\t// and by taking the local `userHome` if we run on a local\n\t\t// file scheme.\n\t\tthis.os = OS;\n\t\tthis.userHome =\n\t\t\tpathService.defaultUriScheme === Schemas.file\n\t\t\t\t? this.pathService.userHome({ preferLocal: true })\n\t\t\t\t: undefined;\n\n\t\tconst memento = (this.storedFormattersMemento = new Memento(\n\t\t\t\"cachedResourceLabelFormatters2\",\n\t\t\tstorageService,\n\t\t));\n\t\tthis.storedFormatters = memento.getMemento(\n\t\t\tStorageScope.PROFILE,\n\t\t\tStorageTarget.MACHINE,\n\t\t);\n\t\tthis.formatters = this.storedFormatters?.formatters?.slice() || [];\n\n\t\t// Remote environment is potentially long running\n\t\tthis.resolveRemoteEnvironment();\n\t}\n\n\tprivate async resolveRemoteEnvironment(): Promise<void> {\n\t\t// OS\n\t\tconst env = await this.remoteAgentService.getEnvironment();\n\t\tthis.os = env?.os ?? OS;\n\n\t\t// User home\n\t\tthis.userHome = await this.pathService.userHome();\n\t}\n\n\tfindFormatting(resource: URI): ResourceLabelFormatting | undefined {\n\t\tlet bestResult: ResourceLabelFormatter | undefined;\n\n\t\tfor (const formatter of this.formatters) {\n\t\t\tif (formatter.scheme === resource.scheme) {\n\t\t\t\tif (\n\t\t\t\t\t!formatter.authority &&\n\t\t\t\t\t(!bestResult || formatter.priority)\n\t\t\t\t) {\n\t\t\t\t\tbestResult = formatter;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (!formatter.authority) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\tmatch(\n\t\t\t\t\t\tformatter.authority.toLowerCase(),\n\t\t\t\t\t\tresource.authority.toLowerCase(),\n\t\t\t\t\t) &&\n\t\t\t\t\t(!bestResult ||\n\t\t\t\t\t\t!bestResult.authority ||\n\t\t\t\t\t\tformatter.authority.length >\n\t\t\t\t\t\t\tbestResult.authority.length ||\n\t\t\t\t\t\t(formatter.authority.length ===\n\t\t\t\t\t\t\tbestResult.authority.length &&\n\t\t\t\t\t\t\tformatter.priority))\n\t\t\t\t) {\n\t\t\t\t\tbestResult = formatter;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn bestResult ? bestResult.formatting : undefined;\n\t}\n\n\tgetUriLabel(\n\t\tresource: URI,\n\t\toptions: {\n\t\t\trelative?: boolean;\n\t\t\tnoPrefix?: boolean;\n\t\t\tseparator?: \"/\" | \"\\\\\";\n\t\t} = {},\n\t): string {\n\t\tlet formatting = this.findFormatting(resource);\n\t\tif (formatting && options.separator) {\n\t\t\t// mixin separator if defined from the outside\n\t\t\tformatting = { ...formatting, separator: options.separator };\n\t\t}\n\n\t\tconst label = this.doGetUriLabel(resource, formatting, options);\n\n\t\t// Without formatting we still need to support the separator\n\t\t// as provided in options (https://github.com/microsoft/vscode/issues/130019)\n\t\tif (!formatting && options.separator) {\n\t\t\treturn label.replace(sepRegexp, options.separator);\n\t\t}\n\n\t\treturn label;\n\t}\n\n\tprivate doGetUriLabel(\n\t\tresource: URI,\n\t\tformatting?: ResourceLabelFormatting,\n\t\toptions: { relative?: boolean; noPrefix?: boolean } = {},\n\t): string {\n\t\tif (!formatting) {\n\t\t\treturn getPathLabel(resource, {\n\t\t\t\tos: this.os,\n\t\t\t\ttildify: this.userHome\n\t\t\t\t\t? { userHome: this.userHome }\n\t\t\t\t\t: undefined,\n\t\t\t\trelative: options.relative\n\t\t\t\t\t? {\n\t\t\t\t\t\t\tnoPrefix: options.noPrefix,\n\t\t\t\t\t\t\tgetWorkspace: () =>\n\t\t\t\t\t\t\t\tthis.contextService.getWorkspace(),\n\t\t\t\t\t\t\tgetWorkspaceFolder: (resource) =>\n\t\t\t\t\t\t\t\tthis.contextService.getWorkspaceFolder(\n\t\t\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t}\n\t\t\t\t\t: undefined,\n\t\t\t});\n\t\t}\n\n\t\t// Relative label\n\t\tif (options.relative && this.contextService) {\n\t\t\tlet folder = this.contextService.getWorkspaceFolder(resource);\n\t\t\tif (!folder) {\n\t\t\t\t// It is possible that the resource we want to resolve the\n\t\t\t\t// workspace folder for is not using the same scheme as\n\t\t\t\t// the folders in the workspace, so we help by trying again\n\t\t\t\t// to resolve a workspace folder by trying again with a\n\t\t\t\t// scheme that is workspace contained.\n\n\t\t\t\tconst workspace = this.contextService.getWorkspace();\n\t\t\t\tconst firstFolder = workspace.folders.at(0);\n\t\t\t\tif (\n\t\t\t\t\tfirstFolder &&\n\t\t\t\t\tresource.scheme !== firstFolder.uri.scheme &&\n\t\t\t\t\tresource.path.startsWith(posix.sep)\n\t\t\t\t) {\n\t\t\t\t\tfolder = this.contextService.getWorkspaceFolder(\n\t\t\t\t\t\tfirstFolder.uri.with({ path: resource.path }),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (folder) {\n\t\t\t\tconst folderLabel = this.formatUri(\n\t\t\t\t\tfolder.uri,\n\t\t\t\t\tformatting,\n\t\t\t\t\toptions.noPrefix,\n\t\t\t\t);\n\n\t\t\t\tlet relativeLabel = this.formatUri(\n\t\t\t\t\tresource,\n\t\t\t\t\tformatting,\n\t\t\t\t\toptions.noPrefix,\n\t\t\t\t);\n\t\t\t\tlet overlap = 0;\n\t\t\t\twhile (\n\t\t\t\t\trelativeLabel[overlap] &&\n\t\t\t\t\trelativeLabel[overlap] === folderLabel[overlap]\n\t\t\t\t) {\n\t\t\t\t\toverlap++;\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t!relativeLabel[overlap] ||\n\t\t\t\t\trelativeLabel[overlap] === formatting.separator\n\t\t\t\t) {\n\t\t\t\t\trelativeLabel = relativeLabel.substring(1 + overlap);\n\t\t\t\t} else if (\n\t\t\t\t\toverlap === folderLabel.length &&\n\t\t\t\t\tfolder.uri.path === posix.sep\n\t\t\t\t) {\n\t\t\t\t\trelativeLabel = relativeLabel.substring(overlap);\n\t\t\t\t}\n\n\t\t\t\t// always show root basename if there are multiple folders\n\t\t\t\tconst hasMultipleRoots =\n\t\t\t\t\tthis.contextService.getWorkspace().folders.length > 1;\n\t\t\t\tif (hasMultipleRoots && !options.noPrefix) {\n\t\t\t\t\tconst rootName =\n\t\t\t\t\t\tfolder?.name ?? basenameOrAuthority(folder.uri);\n\t\t\t\t\trelativeLabel = relativeLabel\n\t\t\t\t\t\t? `${rootName} \u2022 ${relativeLabel}`\n\t\t\t\t\t\t: rootName;\n\t\t\t\t}\n\n\t\t\t\treturn relativeLabel;\n\t\t\t}\n\t\t}\n\n\t\t// Absolute label\n\t\treturn this.formatUri(resource, formatting, options.noPrefix);\n\t}\n\n\tgetUriBasenameLabel(resource: URI): string {\n\t\tconst formatting = this.findFormatting(resource);\n\t\tconst label = this.doGetUriLabel(resource, formatting);\n\n\t\tlet pathLib: typeof win32 | typeof posix;\n\t\tif (formatting?.separator === win32.sep) {\n\t\t\tpathLib = win32;\n\t\t} else if (formatting?.separator === posix.sep) {\n\t\t\tpathLib = posix;\n\t\t} else {\n\t\t\tpathLib = this.os === OperatingSystem.Windows ? win32 : posix;\n\t\t}\n\n\t\treturn pathLib.basename(label);\n\t}\n\n\tgetWorkspaceLabel(\n\t\tworkspace:\n\t\t\t| IWorkspace\n\t\t\t| IWorkspaceIdentifier\n\t\t\t| ISingleFolderWorkspaceIdentifier\n\t\t\t| URI,\n\t\toptions?: { verbose: Verbosity },\n\t): string {\n\t\tif (isWorkspace(workspace)) {\n\t\t\tconst identifier = toWorkspaceIdentifier(workspace);\n\t\t\tif (\n\t\t\t\tisSingleFolderWorkspaceIdentifier(identifier) ||\n\t\t\t\tisWorkspaceIdentifier(identifier)\n\t\t\t) {\n\t\t\t\treturn this.getWorkspaceLabel(identifier, options);\n\t\t\t}\n\n\t\t\treturn \"\";\n\t\t}\n\n\t\t// Workspace: Single Folder (as URI)\n\t\tif (URI.isUri(workspace)) {\n\t\t\treturn this.doGetSingleFolderWorkspaceLabel(workspace, options);\n\t\t}\n\n\t\t// Workspace: Single Folder (as workspace identifier)\n\t\tif (isSingleFolderWorkspaceIdentifier(workspace)) {\n\t\t\treturn this.doGetSingleFolderWorkspaceLabel(workspace.uri, options);\n\t\t}\n\n\t\t// Workspace: Multi Root\n\t\tif (isWorkspaceIdentifier(workspace)) {\n\t\t\treturn this.doGetWorkspaceLabel(workspace.configPath, options);\n\t\t}\n\n\t\treturn \"\";\n\t}\n\n\tprivate doGetWorkspaceLabel(\n\t\tworkspaceUri: URI,\n\t\toptions?: { verbose: Verbosity },\n\t): string {\n\t\t// Workspace: Untitled\n\t\tif (isUntitledWorkspace(workspaceUri, this.environmentService)) {\n\t\t\treturn localize(\"untitledWorkspace\", \"Untitled (Workspace)\");\n\t\t}\n\n\t\t// Workspace: Temporary\n\t\tif (isTemporaryWorkspace(workspaceUri)) {\n\t\t\treturn localize(\"temporaryWorkspace\", \"Workspace\");\n\t\t}\n\n\t\t// Workspace: Saved\n\t\tlet filename = basename(workspaceUri);\n\t\tif (filename.endsWith(WORKSPACE_EXTENSION)) {\n\t\t\tfilename = filename.substr(\n\t\t\t\t0,\n\t\t\t\tfilename.length - WORKSPACE_EXTENSION.length - 1,\n\t\t\t);\n\t\t}\n\n\t\tlet label: string;\n\t\tswitch (options?.verbose) {\n\t\t\tcase Verbosity.SHORT:\n\t\t\t\tlabel = filename; // skip suffix for short label\n\t\t\t\tbreak;\n\t\t\tcase Verbosity.LONG:\n\t\t\t\tlabel = localize(\n\t\t\t\t\t\"workspaceNameVerbose\",\n\t\t\t\t\t\"{0} (Workspace)\",\n\t\t\t\t\tthis.getUriLabel(joinPath(dirname(workspaceUri), filename)),\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase Verbosity.MEDIUM:\n\t\t\tdefault:\n\t\t\t\tlabel = localize(\"workspaceName\", \"{0} (Workspace)\", filename);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (options?.verbose === Verbosity.SHORT) {\n\t\t\treturn label; // skip suffix for short label\n\t\t}\n\n\t\treturn this.appendWorkspaceSuffix(label, workspaceUri);\n\t}\n\n\tprivate doGetSingleFolderWorkspaceLabel(\n\t\tfolderUri: URI,\n\t\toptions?: { verbose: Verbosity },\n\t): string {\n\t\tlet label: string;\n\t\tswitch (options?.verbose) {\n\t\t\tcase Verbosity.LONG:\n\t\t\t\tlabel = this.getUriLabel(folderUri);\n\t\t\t\tbreak;\n\t\t\tcase Verbosity.SHORT:\n\t\t\tcase Verbosity.MEDIUM:\n\t\t\tdefault:\n\t\t\t\tlabel = basename(folderUri) || posix.sep;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (options?.verbose === Verbosity.SHORT) {\n\t\t\treturn label; // skip suffix for short label\n\t\t}\n\n\t\treturn this.appendWorkspaceSuffix(label, folderUri);\n\t}\n\n\tgetSeparator(scheme: string, authority?: string): \"/\" | \"\\\\\" {\n\t\tconst formatter = this.findFormatting(URI.from({ scheme, authority }));\n\n\t\treturn formatter?.separator || posix.sep;\n\t}\n\n\tgetHostLabel(scheme: string, authority?: string): string {\n\t\tconst formatter = this.findFormatting(URI.from({ scheme, authority }));\n\n\t\treturn formatter?.workspaceSuffix || authority || \"\";\n\t}\n\n\tgetHostTooltip(scheme: string, authority?: string): string | undefined {\n\t\tconst formatter = this.findFormatting(URI.from({ scheme, authority }));\n\n\t\treturn formatter?.workspaceTooltip;\n\t}\n\n\tregisterCachedFormatter(formatter: ResourceLabelFormatter): IDisposable {\n\t\tconst list = (this.storedFormatters.formatters ??= []);\n\n\t\tlet replace = list.findIndex(\n\t\t\t(f) =>\n\t\t\t\tf.scheme === formatter.scheme &&\n\t\t\t\tf.authority === formatter.authority,\n\t\t);\n\t\tif (replace === -1 && list.length >= FORMATTER_CACHE_SIZE) {\n\t\t\treplace = FORMATTER_CACHE_SIZE - 1; // at max capacity, replace the last element\n\t\t}\n\n\t\tif (replace === -1) {\n\t\t\tlist.unshift(formatter);\n\t\t} else {\n\t\t\tfor (let i = replace; i > 0; i--) {\n\t\t\t\tlist[i] = list[i - 1];\n\t\t\t}\n\t\t\tlist[0] = formatter;\n\t\t}\n\n\t\tthis.storedFormattersMemento.saveMemento();\n\n\t\treturn this.registerFormatter(formatter);\n\t}\n\n\tregisterFormatter(formatter: ResourceLabelFormatter): IDisposable {\n\t\tthis.formatters.push(formatter);\n\t\tthis._onDidChangeFormatters.fire({ scheme: formatter.scheme });\n\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tthis.formatters = this.formatters.filter(\n\t\t\t\t\t(f) => f !== formatter,\n\t\t\t\t);\n\t\t\t\tthis._onDidChangeFormatters.fire({ scheme: formatter.scheme });\n\t\t\t},\n\t\t};\n\t}\n\n\tprivate formatUri(\n\t\tresource: URI,\n\t\tformatting: ResourceLabelFormatting,\n\t\tforceNoTildify?: boolean,\n\t): string {\n\t\tlet label = formatting.label.replace(\n\t\t\tlabelMatchingRegexp,\n\t\t\t(match, token, qsToken, qsValue) => {\n\t\t\t\tswitch (token) {\n\t\t\t\t\tcase \"scheme\":\n\t\t\t\t\t\treturn resource.scheme;\n\t\t\t\t\tcase \"authority\":\n\t\t\t\t\t\treturn resource.authority;\n\t\t\t\t\tcase \"authoritySuffix\": {\n\t\t\t\t\t\tconst i = resource.authority.indexOf(\"+\");\n\t\t\t\t\t\treturn i === -1\n\t\t\t\t\t\t\t? resource.authority\n\t\t\t\t\t\t\t: resource.authority.slice(i + 1);\n\t\t\t\t\t}\n\t\t\t\t\tcase \"path\":\n\t\t\t\t\t\treturn formatting.stripPathStartingSeparator\n\t\t\t\t\t\t\t? resource.path.slice(\n\t\t\t\t\t\t\t\t\tresource.path[0] === formatting.separator\n\t\t\t\t\t\t\t\t\t\t? 1\n\t\t\t\t\t\t\t\t\t\t: 0,\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: resource.path;\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\tif (qsToken === \"query\") {\n\t\t\t\t\t\t\tconst { query } = resource;\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tquery &&\n\t\t\t\t\t\t\t\tquery[0] === \"{\" &&\n\t\t\t\t\t\t\t\tquery[query.length - 1] === \"}\"\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\treturn JSON.parse(query)[qsValue] || \"\";\n\t\t\t\t\t\t\t\t} catch {}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\n\t\t// convert \\c:\\something => C:\\something\n\t\tif (\n\t\t\tformatting.normalizeDriveLetter &&\n\t\t\thasDriveLetterIgnorePlatform(label)\n\t\t) {\n\t\t\tlabel = label.charAt(1).toUpperCase() + label.substr(2);\n\t\t}\n\n\t\tif (formatting.tildify && !forceNoTildify) {\n\t\t\tif (this.userHome) {\n\t\t\t\tlabel = tildify(label, this.userHome.fsPath, this.os);\n\t\t\t}\n\t\t}\n\n\t\tif (formatting.authorityPrefix && resource.authority) {\n\t\t\tlabel = formatting.authorityPrefix + label;\n\t\t}\n\n\t\treturn label.replace(sepRegexp, formatting.separator);\n\t}\n\n\tprivate appendWorkspaceSuffix(label: string, uri: URI): string {\n\t\tconst formatting = this.findFormatting(uri);\n\t\tconst suffix =\n\t\t\tformatting && typeof formatting.workspaceSuffix === \"string\"\n\t\t\t\t? formatting.workspaceSuffix\n\t\t\t\t: undefined;\n\n\t\treturn suffix ? `${label} [${suffix}]` : label;\n\t}\n}\n\nregisterSingleton(ILabelService, LabelService, InstantiationType.Delayed);\n"],
  "mappings": "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",
  "names": ["resource", "match"]
}
