{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/userDataSync/electron-sandbox/userDataAutoSyncService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IUserDataAutoSyncService, UserDataSyncError } from '../../../../platform/userDataSync/common/userDataSync.js';\nimport { ISharedProcessService } from '../../../../platform/ipc/electron-sandbox/services.js';\nimport { IChannel } from '../../../../base/parts/ipc/common/ipc.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\n\nclass UserDataAutoSyncService implements IUserDataAutoSyncService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly channel: IChannel;\n\tget onError(): Event<UserDataSyncError> { return Event.map(this.channel.listen<Error>('onError'), e => UserDataSyncError.toUserDataSyncError(e)); }\n\n\tconstructor(\n\t\t@ISharedProcessService sharedProcessService: ISharedProcessService,\n\t) {\n\t\tthis.channel = sharedProcessService.getChannel('userDataAutoSync');\n\t}\n\n\ttriggerSync(sources: string[], hasToLimitSync: boolean, disableCache: boolean): Promise<void> {\n\t\treturn this.channel.call('triggerSync', [sources, hasToLimitSync, disableCache]);\n\t}\n\n\tturnOn(): Promise<void> {\n\t\treturn this.channel.call('turnOn');\n\t}\n\n\tturnOff(everywhere: boolean): Promise<void> {\n\t\treturn this.channel.call('turnOff', [everywhere]);\n\t}\n\n}\n\nregisterSingleton(IUserDataAutoSyncService, UserDataAutoSyncService, InstantiationType.Delayed);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,0BAA0B,yBAAyB;AAC5D,SAAS,6BAA6B;AACtC,SAAS,gBAAgB;AACzB,SAAS,aAAa;AACtB,SAAS,mBAAmB,yBAAyB;AAErD,IAAM,0BAAN,MAAkE;AAAA,EAXlE,OAWkE;AAAA;AAAA;AAAA,EAIhD;AAAA,EACjB,IAAI,UAAoC;AAAE,WAAO,MAAM,IAAI,KAAK,QAAQ,OAAc,SAAS,GAAG,OAAK,kBAAkB,oBAAoB,CAAC,CAAC;AAAA,EAAG;AAAA,EAElJ,YACwB,sBACtB;AACD,SAAK,UAAU,qBAAqB,WAAW,kBAAkB;AAAA,EAClE;AAAA,EAEA,YAAY,SAAmB,gBAAyB,cAAsC;AAC7F,WAAO,KAAK,QAAQ,KAAK,eAAe,CAAC,SAAS,gBAAgB,YAAY,CAAC;AAAA,EAChF;AAAA,EAEA,SAAwB;AACvB,WAAO,KAAK,QAAQ,KAAK,QAAQ;AAAA,EAClC;AAAA,EAEA,QAAQ,YAAoC;AAC3C,WAAO,KAAK,QAAQ,KAAK,WAAW,CAAC,UAAU,CAAC;AAAA,EACjD;AAED;AAzBM,0BAAN;AAAA,EAQG;AAAA,GARG;AA2BN,kBAAkB,0BAA0B,yBAAyB,kBAAkB,OAAO;",
  "names": []
}
