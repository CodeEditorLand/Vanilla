{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/userDataSync/common/userDataSyncUtil.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { IUserDataSyncUtilService, getDefaultIgnoredSettings } from '../../../../platform/userDataSync/common/userDataSync.js';\nimport { IStringDictionary } from '../../../../base/common/collections.js';\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { FormattingOptions } from '../../../../base/common/jsonFormatter.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ITextModelService } from '../../../../editor/common/services/resolverService.js';\nimport { ITextResourcePropertiesService, ITextResourceConfigurationService } from '../../../../editor/common/services/textResourceConfiguration.js';\n\nclass UserDataSyncUtilService implements IUserDataSyncUtilService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IKeybindingService private readonly keybindingsService: IKeybindingService,\n\t\t@ITextModelService private readonly textModelService: ITextModelService,\n\t\t@ITextResourcePropertiesService private readonly textResourcePropertiesService: ITextResourcePropertiesService,\n\t\t@ITextResourceConfigurationService private readonly textResourceConfigurationService: ITextResourceConfigurationService,\n\t) { }\n\n\tasync resolveDefaultCoreIgnoredSettings(): Promise<string[]> {\n\t\treturn getDefaultIgnoredSettings(true);\n\t}\n\n\tasync resolveUserBindings(userBindings: string[]): Promise<IStringDictionary<string>> {\n\t\tconst keys: IStringDictionary<string> = {};\n\t\tfor (const userbinding of userBindings) {\n\t\t\tkeys[userbinding] = this.keybindingsService.resolveUserBinding(userbinding).map(part => part.getUserSettingsLabel()).join(' ');\n\t\t}\n\t\treturn keys;\n\t}\n\n\tasync resolveFormattingOptions(resource: URI): Promise<FormattingOptions> {\n\t\ttry {\n\t\t\tconst modelReference = await this.textModelService.createModelReference(resource);\n\t\t\tconst { insertSpaces, tabSize } = modelReference.object.textEditorModel.getOptions();\n\t\t\tconst eol = modelReference.object.textEditorModel.getEOL();\n\t\t\tmodelReference.dispose();\n\t\t\treturn { eol, insertSpaces, tabSize };\n\t\t} catch (e) {\n\t\t}\n\t\treturn {\n\t\t\teol: this.textResourcePropertiesService.getEOL(resource),\n\t\t\tinsertSpaces: !!this.textResourceConfigurationService.getValue(resource, 'editor.insertSpaces'),\n\t\t\ttabSize: this.textResourceConfigurationService.getValue(resource, 'editor.tabSize')\n\t\t};\n\t}\n\n}\n\nregisterSingleton(IUserDataSyncUtilService, UserDataSyncUtilService, InstantiationType.Delayed);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,0BAA0B;AACnC,SAAS,0BAA0B,iCAAiC;AACpE,SAAS,yBAAyB;AAClC,SAAS,mBAAmB,yBAAyB;AACrD,SAAS,yBAAyB;AAClC,SAAS,WAAW;AACpB,SAAS,yBAAyB;AAClC,SAAS,gCAAgC,yCAAyC;AAElF,IAAM,0BAAN,MAAkE;AAAA,EAIjE,YACsC,oBACD,kBACa,+BACG,kCACnD;AAJoC;AACD;AACa;AACG;AAAA,EACjD;AAAA,EAvBL,OAckE;AAAA;AAAA;AAAA,EAWjE,MAAM,oCAAuD;AAC5D,WAAO,0BAA0B,IAAI;AAAA,EACtC;AAAA,EAEA,MAAM,oBAAoB,cAA4D;AACrF,UAAM,OAAkC,CAAC;AACzC,eAAW,eAAe,cAAc;AACvC,WAAK,WAAW,IAAI,KAAK,mBAAmB,mBAAmB,WAAW,EAAE,IAAI,UAAQ,KAAK,qBAAqB,CAAC,EAAE,KAAK,GAAG;AAAA,IAC9H;AACA,WAAO;AAAA,EACR;AAAA,EAEA,MAAM,yBAAyB,UAA2C;AACzE,QAAI;AACH,YAAM,iBAAiB,MAAM,KAAK,iBAAiB,qBAAqB,QAAQ;AAChF,YAAM,EAAE,cAAc,QAAQ,IAAI,eAAe,OAAO,gBAAgB,WAAW;AACnF,YAAM,MAAM,eAAe,OAAO,gBAAgB,OAAO;AACzD,qBAAe,QAAQ;AACvB,aAAO,EAAE,KAAK,cAAc,QAAQ;AAAA,IACrC,SAAS,GAAG;AAAA,IACZ;AACA,WAAO;AAAA,MACN,KAAK,KAAK,8BAA8B,OAAO,QAAQ;AAAA,MACvD,cAAc,CAAC,CAAC,KAAK,iCAAiC,SAAS,UAAU,qBAAqB;AAAA,MAC9F,SAAS,KAAK,iCAAiC,SAAS,UAAU,gBAAgB;AAAA,IACnF;AAAA,EACD;AAED;AAvCM,0BAAN;AAAA,EAKG;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GARG;AAyCN,kBAAkB,0BAA0B,yBAAyB,kBAAkB,OAAO;",
  "names": []
}
