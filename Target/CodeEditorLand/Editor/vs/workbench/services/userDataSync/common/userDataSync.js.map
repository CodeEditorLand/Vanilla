{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/userDataSync/common/userDataSync.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IAuthenticationProvider, SyncStatus, SyncResource, IUserDataSyncResource, IResourcePreview } from '../../../../platform/userDataSync/common/userDataSync.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { ContextKeyExpr, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { localize, localize2 } from '../../../../nls.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';\nimport { IView } from '../../../common/views.js';\nimport { Categories } from '../../../../platform/action/common/actionCommonCategories.js';\nimport { IAction2Options } from '../../../../platform/actions/common/actions.js';\nimport { ILocalizedString } from '../../../../platform/action/common/action.js';\n\nexport interface IUserDataSyncAccount {\n\treadonly authenticationProviderId: string;\n\treadonly accountName: string;\n\treadonly accountId: string;\n}\n\nexport const IUserDataSyncWorkbenchService = createDecorator<IUserDataSyncWorkbenchService>('IUserDataSyncWorkbenchService');\nexport interface IUserDataSyncWorkbenchService {\n\t_serviceBrand: any;\n\n\treadonly enabled: boolean;\n\treadonly authenticationProviders: IAuthenticationProvider[];\n\n\treadonly current: IUserDataSyncAccount | undefined;\n\n\treadonly accountStatus: AccountStatus;\n\treadonly onDidChangeAccountStatus: Event<AccountStatus>;\n\n\tturnOn(): Promise<void>;\n\tturnoff(everyWhere: boolean): Promise<void>;\n\tsignIn(): Promise<void>;\n\n\tresetSyncedData(): Promise<void>;\n\tshowSyncActivity(): Promise<void>;\n\tsyncNow(): Promise<void>;\n\n\tsynchroniseUserDataSyncStoreType(): Promise<void>;\n\n\tshowConflicts(conflictToOpen?: IResourcePreview): Promise<void>;\n\taccept(resource: IUserDataSyncResource, conflictResource: URI, content: string | null | undefined, apply: boolean): Promise<void>;\n\n\tgetAllLogResources(): Promise<URI[]>;\n\tdownloadSyncActivity(): Promise<URI | undefined>;\n}\n\nexport function getSyncAreaLabel(source: SyncResource): string {\n\tswitch (source) {\n\t\tcase SyncResource.Settings: return localize('settings', \"Settings\");\n\t\tcase SyncResource.Keybindings: return localize('keybindings', \"Keyboard Shortcuts\");\n\t\tcase SyncResource.Snippets: return localize('snippets', \"Snippets\");\n\t\tcase SyncResource.Tasks: return localize('tasks', \"Tasks\");\n\t\tcase SyncResource.Extensions: return localize('extensions', \"Extensions\");\n\t\tcase SyncResource.GlobalState: return localize('ui state label', \"UI State\");\n\t\tcase SyncResource.Profiles: return localize('profiles', \"Profiles\");\n\t\tcase SyncResource.WorkspaceState: return localize('workspace state label', \"Workspace State\");\n\t}\n}\n\nexport const enum AccountStatus {\n\tUnavailable = 'unavailable',\n\tAvailable = 'available',\n}\n\nexport interface IUserDataSyncConflictsView extends IView {\n\topen(conflict: IResourcePreview): Promise<void>;\n}\n\nexport const SYNC_TITLE: ILocalizedString = localize2('sync category', \"Settings Sync\");\n\nexport const SYNC_VIEW_ICON = registerIcon('settings-sync-view-icon', Codicon.sync, localize('syncViewIcon', 'View icon of the Settings Sync view.'));\n\n// Contexts\nexport const CONTEXT_SYNC_STATE = new RawContextKey<string>('syncStatus', SyncStatus.Uninitialized);\nexport const CONTEXT_SYNC_ENABLEMENT = new RawContextKey<boolean>('syncEnabled', false);\nexport const CONTEXT_ACCOUNT_STATE = new RawContextKey<string>('userDataSyncAccountStatus', AccountStatus.Unavailable);\nexport const CONTEXT_ENABLE_ACTIVITY_VIEWS = new RawContextKey<boolean>(`enableSyncActivityViews`, false);\nexport const CONTEXT_ENABLE_SYNC_CONFLICTS_VIEW = new RawContextKey<boolean>(`enableSyncConflictsView`, false);\nexport const CONTEXT_HAS_CONFLICTS = new RawContextKey<boolean>('hasConflicts', false);\n\n// Commands\nexport const CONFIGURE_SYNC_COMMAND_ID = 'workbench.userDataSync.actions.configure';\nexport const SHOW_SYNC_LOG_COMMAND_ID = 'workbench.userDataSync.actions.showLog';\n\n// VIEWS\nexport const SYNC_VIEW_CONTAINER_ID = 'workbench.view.sync';\nexport const SYNC_CONFLICTS_VIEW_ID = 'workbench.views.sync.conflicts';\n\nexport const DOWNLOAD_ACTIVITY_ACTION_DESCRIPTOR: Readonly<IAction2Options> = {\n\tid: 'workbench.userDataSync.actions.downloadSyncActivity',\n\ttitle: localize2('download sync activity title', \"Download Settings Sync Activity\"),\n\tcategory: Categories.Developer,\n\tf1: true,\n\tprecondition: ContextKeyExpr.and(CONTEXT_ACCOUNT_STATE.isEqualTo(AccountStatus.Available), CONTEXT_SYNC_STATE.notEqualsTo(SyncStatus.Uninitialized))\n};\n"],
  "mappings": ";;AAKA,SAAS,uBAAuB;AAChC,SAAS,yBAAyB,YAAY,cAAc,uBAAuB,wBAAwB;AAC3G,SAAS,aAAa;AACtB,SAAS,gBAAgB,qBAAqB;AAC9C,SAAS,UAAU,iBAAiB;AACpC,SAAS,WAAW;AACpB,SAAS,eAAe;AACxB,SAAS,oBAAoB;AAC7B,SAAS,aAAa;AACtB,SAAS,kBAAkB;AAC3B,SAAS,uBAAuB;AAChC,SAAS,wBAAwB;AAQ1B,MAAM,gCAAgC,gBAA+C,+BAA+B;AA6BpH,SAAS,iBAAiB,QAA8B;AAC9D,UAAQ,QAAQ;AAAA,IACf,KAAK,aAAa;AAAU,aAAO,SAAS,YAAY,UAAU;AAAA,IAClE,KAAK,aAAa;AAAa,aAAO,SAAS,eAAe,oBAAoB;AAAA,IAClF,KAAK,aAAa;AAAU,aAAO,SAAS,YAAY,UAAU;AAAA,IAClE,KAAK,aAAa;AAAO,aAAO,SAAS,SAAS,OAAO;AAAA,IACzD,KAAK,aAAa;AAAY,aAAO,SAAS,cAAc,YAAY;AAAA,IACxE,KAAK,aAAa;AAAa,aAAO,SAAS,kBAAkB,UAAU;AAAA,IAC3E,KAAK,aAAa;AAAU,aAAO,SAAS,YAAY,UAAU;AAAA,IAClE,KAAK,aAAa;AAAgB,aAAO,SAAS,yBAAyB,iBAAiB;AAAA,EAC7F;AACD;AAXgB;AAaT,IAAW,gBAAX,kBAAWA,mBAAX;AACN,EAAAA,eAAA,iBAAc;AACd,EAAAA,eAAA,eAAY;AAFK,SAAAA;AAAA,GAAA;AASX,MAAM,aAA+B,UAAU,iBAAiB,eAAe;AAE/E,MAAM,iBAAiB,aAAa,2BAA2B,QAAQ,MAAM,SAAS,gBAAgB,sCAAsC,CAAC;AAG7I,MAAM,qBAAqB,IAAI,cAAsB,cAAc,WAAW,aAAa;AAC3F,MAAM,0BAA0B,IAAI,cAAuB,eAAe,KAAK;AAC/E,MAAM,wBAAwB,IAAI,cAAsB,6BAA6B,+BAAyB;AAC9G,MAAM,gCAAgC,IAAI,cAAuB,2BAA2B,KAAK;AACjG,MAAM,qCAAqC,IAAI,cAAuB,2BAA2B,KAAK;AACtG,MAAM,wBAAwB,IAAI,cAAuB,gBAAgB,KAAK;AAG9E,MAAM,4BAA4B;AAClC,MAAM,2BAA2B;AAGjC,MAAM,yBAAyB;AAC/B,MAAM,yBAAyB;AAE/B,MAAM,sCAAiE;AAAA,EAC7E,IAAI;AAAA,EACJ,OAAO,UAAU,gCAAgC,iCAAiC;AAAA,EAClF,UAAU,WAAW;AAAA,EACrB,IAAI;AAAA,EACJ,cAAc,eAAe,IAAI,sBAAsB,UAAU,2BAAuB,GAAG,mBAAmB,YAAY,WAAW,aAAa,CAAC;AACpJ;",
  "names": ["AccountStatus"]
}
