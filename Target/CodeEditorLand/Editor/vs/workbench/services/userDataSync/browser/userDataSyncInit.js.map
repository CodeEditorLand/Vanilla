{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/userDataSync/browser/userDataSyncInit.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Barrier, Promises } from \"../../../../base/common/async.js\";\nimport { CancellationToken } from \"../../../../base/common/cancellation.js\";\nimport { DisposableStore } from \"../../../../base/common/lifecycle.js\";\nimport { isWeb } from \"../../../../base/common/platform.js\";\nimport { isEqual } from \"../../../../base/common/resources.js\";\nimport { IEnvironmentService } from \"../../../../platform/environment/common/environment.js\";\nimport {\n\tIExtensionGalleryService,\n\tIExtensionManagementService,\n\tIGlobalExtensionEnablementService,\n\ttype ILocalExtension,\n} from \"../../../../platform/extensionManagement/common/extensionManagement.js\";\nimport { areSameExtensions } from \"../../../../platform/extensionManagement/common/extensionManagementUtil.js\";\nimport { IExtensionStorageService } from \"../../../../platform/extensionManagement/common/extensionStorage.js\";\nimport { IFileService } from \"../../../../platform/files/common/files.js\";\nimport type { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport { IProductService } from \"../../../../platform/product/common/productService.js\";\nimport { IRequestService } from \"../../../../platform/request/common/request.js\";\nimport { ISecretStorageService } from \"../../../../platform/secrets/common/secrets.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n} from \"../../../../platform/storage/common/storage.js\";\nimport { IUriIdentityService } from \"../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport { IUserDataProfilesService } from \"../../../../platform/userDataProfile/common/userDataProfile.js\";\nimport {\n\tAbstractExtensionsInitializer,\n\ttype IExtensionsInitializerPreviewResult,\n} from \"../../../../platform/userDataSync/common/extensionsSync.js\";\nimport {\n\tGlobalStateInitializer,\n\tUserDataSyncStoreTypeSynchronizer,\n} from \"../../../../platform/userDataSync/common/globalStateSync.js\";\nimport { IIgnoredExtensionsManagementService } from \"../../../../platform/userDataSync/common/ignoredExtensions.js\";\nimport { KeybindingsInitializer } from \"../../../../platform/userDataSync/common/keybindingsSync.js\";\nimport { SettingsInitializer } from \"../../../../platform/userDataSync/common/settingsSync.js\";\nimport { SnippetsInitializer } from \"../../../../platform/userDataSync/common/snippetsSync.js\";\nimport { TasksInitializer } from \"../../../../platform/userDataSync/common/tasksSync.js\";\nimport {\n\ttype IRemoteUserData,\n\ttype IUserData,\n\tIUserDataSyncLogService,\n\ttype IUserDataSyncResourceInitializer,\n\tIUserDataSyncStoreManagementService,\n\tSyncResource,\n} from \"../../../../platform/userDataSync/common/userDataSync.js\";\nimport { UserDataSyncStoreClient } from \"../../../../platform/userDataSync/common/userDataSyncStoreService.js\";\nimport {\n\ttype AuthenticationSessionInfo,\n\tgetCurrentAuthenticationSessionInfo,\n} from \"../../authentication/browser/authenticationService.js\";\nimport { IBrowserWorkbenchEnvironmentService } from \"../../environment/browser/environmentService.js\";\nimport {\n\tIExtensionService,\n\ttoExtensionDescription,\n} from \"../../extensions/common/extensions.js\";\nimport type { IUserDataInitializer } from \"../../userData/browser/userDataInit.js\";\nimport { getSyncAreaLabel } from \"../common/userDataSync.js\";\n\nexport class UserDataSyncInitializer implements IUserDataInitializer {\n\t_serviceBrand: any;\n\n\tprivate readonly initialized: SyncResource[] = [];\n\tprivate readonly initializationFinished = new Barrier();\n\tprivate globalStateUserData: IUserData | null = null;\n\n\tconstructor(\n\t\t@IBrowserWorkbenchEnvironmentService private readonly environmentService: IBrowserWorkbenchEnvironmentService,\n\t\t@ISecretStorageService private readonly secretStorageService: ISecretStorageService,\n\t\t@IUserDataSyncStoreManagementService private readonly userDataSyncStoreManagementService: IUserDataSyncStoreManagementService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IRequestService private readonly requestService: IRequestService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t) {\n\t\tthis.createUserDataSyncStoreClient().then(userDataSyncStoreClient => {\n\t\t\tif (!userDataSyncStoreClient) {\n\t\t\t\tthis.initializationFinished.open();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _userDataSyncStoreClientPromise:\n\t\t| Promise<UserDataSyncStoreClient | undefined>\n\t\t| undefined;\n\tprivate createUserDataSyncStoreClient(): Promise<\n\t\tUserDataSyncStoreClient | undefined\n\t> {\n\t\tif (!this._userDataSyncStoreClientPromise) {\n\t\t\tthis._userDataSyncStoreClientPromise = (async (): Promise<\n\t\t\t\tUserDataSyncStoreClient | undefined\n\t\t\t> => {\n\t\t\t\ttry {\n\t\t\t\t\tif (!isWeb) {\n\t\t\t\t\t\tthis.logService.trace(\n\t\t\t\t\t\t\t`Skipping initializing user data in desktop`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.storageService.isNew(StorageScope.APPLICATION)) {\n\t\t\t\t\t\tthis.logService.trace(\n\t\t\t\t\t\t\t`Skipping initializing user data as application was opened before`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.storageService.isNew(StorageScope.WORKSPACE)) {\n\t\t\t\t\t\tthis.logService.trace(\n\t\t\t\t\t\t\t`Skipping initializing user data as workspace was opened before`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.environmentService.options?.settingsSyncOptions\n\t\t\t\t\t\t\t?.authenticationProvider &&\n\t\t\t\t\t\t!this.environmentService.options.settingsSyncOptions\n\t\t\t\t\t\t\t.enabled\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.logService.trace(\n\t\t\t\t\t\t\t`Skipping initializing user data as settings sync is disabled`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet authenticationSession;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tauthenticationSession =\n\t\t\t\t\t\t\tawait getCurrentAuthenticationSessionInfo(\n\t\t\t\t\t\t\t\tthis.secretStorageService,\n\t\t\t\t\t\t\t\tthis.productService,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t\t}\n\t\t\t\t\tif (!authenticationSession) {\n\t\t\t\t\t\tthis.logService.trace(\n\t\t\t\t\t\t\t`Skipping initializing user data as authentication session is not set`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tawait this.initializeUserDataSyncStore(\n\t\t\t\t\t\tauthenticationSession,\n\t\t\t\t\t);\n\n\t\t\t\t\tconst userDataSyncStore =\n\t\t\t\t\t\tthis.userDataSyncStoreManagementService\n\t\t\t\t\t\t\t.userDataSyncStore;\n\t\t\t\t\tif (!userDataSyncStore) {\n\t\t\t\t\t\tthis.logService.trace(\n\t\t\t\t\t\t\t`Skipping initializing user data as sync service is not provided`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst userDataSyncStoreClient = new UserDataSyncStoreClient(\n\t\t\t\t\t\tuserDataSyncStore.url,\n\t\t\t\t\t\tthis.productService,\n\t\t\t\t\t\tthis.requestService,\n\t\t\t\t\t\tthis.logService,\n\t\t\t\t\t\tthis.environmentService,\n\t\t\t\t\t\tthis.fileService,\n\t\t\t\t\t\tthis.storageService,\n\t\t\t\t\t);\n\t\t\t\t\tuserDataSyncStoreClient.setAuthToken(\n\t\t\t\t\t\tauthenticationSession.accessToken,\n\t\t\t\t\t\tauthenticationSession.providerId,\n\t\t\t\t\t);\n\n\t\t\t\t\tconst manifest =\n\t\t\t\t\t\tawait userDataSyncStoreClient.manifest(null);\n\t\t\t\t\tif (manifest === null) {\n\t\t\t\t\t\tuserDataSyncStoreClient.dispose();\n\t\t\t\t\t\tthis.logService.trace(\n\t\t\t\t\t\t\t`Skipping initializing user data as there is no data`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t`Using settings sync service ${userDataSyncStore.url.toString()} for initialization`,\n\t\t\t\t\t);\n\t\t\t\t\treturn userDataSyncStoreClient;\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\n\t\treturn this._userDataSyncStoreClientPromise;\n\t}\n\n\tprivate async initializeUserDataSyncStore(\n\t\tauthenticationSession: AuthenticationSessionInfo,\n\t): Promise<void> {\n\t\tconst userDataSyncStore =\n\t\t\tthis.userDataSyncStoreManagementService.userDataSyncStore;\n\t\tif (!userDataSyncStore?.canSwitch) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst disposables = new DisposableStore();\n\t\ttry {\n\t\t\tconst userDataSyncStoreClient = disposables.add(\n\t\t\t\tnew UserDataSyncStoreClient(\n\t\t\t\t\tuserDataSyncStore.url,\n\t\t\t\t\tthis.productService,\n\t\t\t\t\tthis.requestService,\n\t\t\t\t\tthis.logService,\n\t\t\t\t\tthis.environmentService,\n\t\t\t\t\tthis.fileService,\n\t\t\t\t\tthis.storageService,\n\t\t\t\t),\n\t\t\t);\n\t\t\tuserDataSyncStoreClient.setAuthToken(\n\t\t\t\tauthenticationSession.accessToken,\n\t\t\t\tauthenticationSession.providerId,\n\t\t\t);\n\n\t\t\t// Cache global state data for global state initialization\n\t\t\tthis.globalStateUserData =\n\t\t\t\tawait userDataSyncStoreClient.readResource(\n\t\t\t\t\tSyncResource.GlobalState,\n\t\t\t\t\tnull,\n\t\t\t\t);\n\n\t\t\tif (this.globalStateUserData) {\n\t\t\t\tconst userDataSyncStoreType =\n\t\t\t\t\tnew UserDataSyncStoreTypeSynchronizer(\n\t\t\t\t\t\tuserDataSyncStoreClient,\n\t\t\t\t\t\tthis.storageService,\n\t\t\t\t\t\tthis.environmentService,\n\t\t\t\t\t\tthis.fileService,\n\t\t\t\t\t\tthis.logService,\n\t\t\t\t\t).getSyncStoreType(this.globalStateUserData);\n\t\t\t\tif (userDataSyncStoreType) {\n\t\t\t\t\tawait this.userDataSyncStoreManagementService.switch(\n\t\t\t\t\t\tuserDataSyncStoreType,\n\t\t\t\t\t);\n\n\t\t\t\t\t// Unset cached global state data if urls are changed\n\t\t\t\t\tif (\n\t\t\t\t\t\t!isEqual(\n\t\t\t\t\t\t\tuserDataSyncStore.url,\n\t\t\t\t\t\t\tthis.userDataSyncStoreManagementService\n\t\t\t\t\t\t\t\t.userDataSyncStore?.url,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.logService.info(\"Switched settings sync store\");\n\t\t\t\t\t\tthis.globalStateUserData = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} finally {\n\t\t\tdisposables.dispose();\n\t\t}\n\t}\n\n\tasync whenInitializationFinished(): Promise<void> {\n\t\tawait this.initializationFinished.wait();\n\t}\n\n\tasync requiresInitialization(): Promise<boolean> {\n\t\tthis.logService.trace(\n\t\t\t`UserDataInitializationService#requiresInitialization`,\n\t\t);\n\t\tconst userDataSyncStoreClient =\n\t\t\tawait this.createUserDataSyncStoreClient();\n\t\treturn !!userDataSyncStoreClient;\n\t}\n\n\tasync initializeRequiredResources(): Promise<void> {\n\t\tthis.logService.trace(\n\t\t\t`UserDataInitializationService#initializeRequiredResources`,\n\t\t);\n\t\treturn this.initialize([\n\t\t\tSyncResource.Settings,\n\t\t\tSyncResource.GlobalState,\n\t\t]);\n\t}\n\n\tasync initializeOtherResources(\n\t\tinstantiationService: IInstantiationService,\n\t): Promise<void> {\n\t\ttry {\n\t\t\tthis.logService.trace(\n\t\t\t\t`UserDataInitializationService#initializeOtherResources`,\n\t\t\t);\n\t\t\tawait Promise.allSettled([\n\t\t\t\tthis.initialize([\n\t\t\t\t\tSyncResource.Keybindings,\n\t\t\t\t\tSyncResource.Snippets,\n\t\t\t\t\tSyncResource.Tasks,\n\t\t\t\t]),\n\t\t\t\tthis.initializeExtensions(instantiationService),\n\t\t\t]);\n\t\t} finally {\n\t\t\tthis.initializationFinished.open();\n\t\t}\n\t}\n\n\tprivate async initializeExtensions(\n\t\tinstantiationService: IInstantiationService,\n\t): Promise<void> {\n\t\ttry {\n\t\t\tawait Promise.all([\n\t\t\t\tthis.initializeInstalledExtensions(instantiationService),\n\t\t\t\tthis.initializeNewExtensions(instantiationService),\n\t\t\t]);\n\t\t} finally {\n\t\t\tthis.initialized.push(SyncResource.Extensions);\n\t\t}\n\t}\n\n\tprivate initializeInstalledExtensionsPromise: Promise<void> | undefined;\n\tasync initializeInstalledExtensions(\n\t\tinstantiationService: IInstantiationService,\n\t): Promise<void> {\n\t\tif (!this.initializeInstalledExtensionsPromise) {\n\t\t\tthis.initializeInstalledExtensionsPromise = (async () => {\n\t\t\t\tthis.logService.trace(\n\t\t\t\t\t`UserDataInitializationService#initializeInstalledExtensions`,\n\t\t\t\t);\n\t\t\t\tconst extensionsPreviewInitializer =\n\t\t\t\t\tawait this.getExtensionsPreviewInitializer(\n\t\t\t\t\t\tinstantiationService,\n\t\t\t\t\t);\n\t\t\t\tif (extensionsPreviewInitializer) {\n\t\t\t\t\tawait instantiationService\n\t\t\t\t\t\t.createInstance(\n\t\t\t\t\t\t\tInstalledExtensionsInitializer,\n\t\t\t\t\t\t\textensionsPreviewInitializer,\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.initialize();\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\t\treturn this.initializeInstalledExtensionsPromise;\n\t}\n\n\tprivate initializeNewExtensionsPromise: Promise<void> | undefined;\n\tprivate async initializeNewExtensions(\n\t\tinstantiationService: IInstantiationService,\n\t): Promise<void> {\n\t\tif (!this.initializeNewExtensionsPromise) {\n\t\t\tthis.initializeNewExtensionsPromise = (async () => {\n\t\t\t\tthis.logService.trace(\n\t\t\t\t\t`UserDataInitializationService#initializeNewExtensions`,\n\t\t\t\t);\n\t\t\t\tconst extensionsPreviewInitializer =\n\t\t\t\t\tawait this.getExtensionsPreviewInitializer(\n\t\t\t\t\t\tinstantiationService,\n\t\t\t\t\t);\n\t\t\t\tif (extensionsPreviewInitializer) {\n\t\t\t\t\tawait instantiationService\n\t\t\t\t\t\t.createInstance(\n\t\t\t\t\t\t\tNewExtensionsInitializer,\n\t\t\t\t\t\t\textensionsPreviewInitializer,\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.initialize();\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\t\treturn this.initializeNewExtensionsPromise;\n\t}\n\n\tprivate extensionsPreviewInitializerPromise:\n\t\t| Promise<ExtensionsPreviewInitializer | null>\n\t\t| undefined;\n\tprivate getExtensionsPreviewInitializer(\n\t\tinstantiationService: IInstantiationService,\n\t): Promise<ExtensionsPreviewInitializer | null> {\n\t\tif (!this.extensionsPreviewInitializerPromise) {\n\t\t\tthis.extensionsPreviewInitializerPromise = (async () => {\n\t\t\t\tconst userDataSyncStoreClient =\n\t\t\t\t\tawait this.createUserDataSyncStoreClient();\n\t\t\t\tif (!userDataSyncStoreClient) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tconst userData = await userDataSyncStoreClient.readResource(\n\t\t\t\t\tSyncResource.Extensions,\n\t\t\t\t\tnull,\n\t\t\t\t);\n\t\t\t\treturn instantiationService.createInstance(\n\t\t\t\t\tExtensionsPreviewInitializer,\n\t\t\t\t\tuserData,\n\t\t\t\t);\n\t\t\t})();\n\t\t}\n\t\treturn this.extensionsPreviewInitializerPromise;\n\t}\n\n\tprivate async initialize(syncResources: SyncResource[]): Promise<void> {\n\t\tconst userDataSyncStoreClient =\n\t\t\tawait this.createUserDataSyncStoreClient();\n\t\tif (!userDataSyncStoreClient) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait Promises.settled(\n\t\t\tsyncResources.map(async (syncResource) => {\n\t\t\t\ttry {\n\t\t\t\t\tif (this.initialized.includes(syncResource)) {\n\t\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t\t`${getSyncAreaLabel(syncResource)} initialized already.`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.initialized.push(syncResource);\n\t\t\t\t\tthis.logService.trace(\n\t\t\t\t\t\t`Initializing ${getSyncAreaLabel(syncResource)}`,\n\t\t\t\t\t);\n\t\t\t\t\tconst initializer =\n\t\t\t\t\t\tthis.createSyncResourceInitializer(syncResource);\n\t\t\t\t\tconst userData = await userDataSyncStoreClient.readResource(\n\t\t\t\t\t\tsyncResource,\n\t\t\t\t\t\tsyncResource === SyncResource.GlobalState\n\t\t\t\t\t\t\t? this.globalStateUserData\n\t\t\t\t\t\t\t: null,\n\t\t\t\t\t);\n\t\t\t\t\tawait initializer.initialize(userData);\n\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t`Initialized ${getSyncAreaLabel(syncResource)}`,\n\t\t\t\t\t);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t`Error while initializing ${getSyncAreaLabel(syncResource)}`,\n\t\t\t\t\t);\n\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate createSyncResourceInitializer(\n\t\tsyncResource: SyncResource,\n\t): IUserDataSyncResourceInitializer {\n\t\tswitch (syncResource) {\n\t\t\tcase SyncResource.Settings:\n\t\t\t\treturn new SettingsInitializer(\n\t\t\t\t\tthis.fileService,\n\t\t\t\t\tthis.userDataProfilesService,\n\t\t\t\t\tthis.environmentService,\n\t\t\t\t\tthis.logService,\n\t\t\t\t\tthis.storageService,\n\t\t\t\t\tthis.uriIdentityService,\n\t\t\t\t);\n\t\t\tcase SyncResource.Keybindings:\n\t\t\t\treturn new KeybindingsInitializer(\n\t\t\t\t\tthis.fileService,\n\t\t\t\t\tthis.userDataProfilesService,\n\t\t\t\t\tthis.environmentService,\n\t\t\t\t\tthis.logService,\n\t\t\t\t\tthis.storageService,\n\t\t\t\t\tthis.uriIdentityService,\n\t\t\t\t);\n\t\t\tcase SyncResource.Tasks:\n\t\t\t\treturn new TasksInitializer(\n\t\t\t\t\tthis.fileService,\n\t\t\t\t\tthis.userDataProfilesService,\n\t\t\t\t\tthis.environmentService,\n\t\t\t\t\tthis.logService,\n\t\t\t\t\tthis.storageService,\n\t\t\t\t\tthis.uriIdentityService,\n\t\t\t\t);\n\t\t\tcase SyncResource.Snippets:\n\t\t\t\treturn new SnippetsInitializer(\n\t\t\t\t\tthis.fileService,\n\t\t\t\t\tthis.userDataProfilesService,\n\t\t\t\t\tthis.environmentService,\n\t\t\t\t\tthis.logService,\n\t\t\t\t\tthis.storageService,\n\t\t\t\t\tthis.uriIdentityService,\n\t\t\t\t);\n\t\t\tcase SyncResource.GlobalState:\n\t\t\t\treturn new GlobalStateInitializer(\n\t\t\t\t\tthis.storageService,\n\t\t\t\t\tthis.fileService,\n\t\t\t\t\tthis.userDataProfilesService,\n\t\t\t\t\tthis.environmentService,\n\t\t\t\t\tthis.logService,\n\t\t\t\t\tthis.uriIdentityService,\n\t\t\t\t);\n\t\t}\n\t\tthrow new Error(`Cannot create initializer for ${syncResource}`);\n\t}\n}\n\nclass ExtensionsPreviewInitializer extends AbstractExtensionsInitializer {\n\tprivate previewPromise:\n\t\t| Promise<IExtensionsInitializerPreviewResult | null>\n\t\t| undefined;\n\tprivate preview: IExtensionsInitializerPreviewResult | null = null;\n\n\tconstructor(\n\t\tprivate readonly extensionsData: IUserData,\n\t\t@IExtensionManagementService extensionManagementService: IExtensionManagementService,\n\t\t@IIgnoredExtensionsManagementService ignoredExtensionsManagementService: IIgnoredExtensionsManagementService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IUserDataProfilesService userDataProfilesService: IUserDataProfilesService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(\n\t\t\textensionManagementService,\n\t\t\tignoredExtensionsManagementService,\n\t\t\tfileService,\n\t\t\tuserDataProfilesService,\n\t\t\tenvironmentService,\n\t\t\tlogService,\n\t\t\tstorageService,\n\t\t\turiIdentityService,\n\t\t);\n\t}\n\n\tgetPreview(): Promise<IExtensionsInitializerPreviewResult | null> {\n\t\tif (!this.previewPromise) {\n\t\t\tthis.previewPromise = super\n\t\t\t\t.initialize(this.extensionsData)\n\t\t\t\t.then(() => this.preview);\n\t\t}\n\t\treturn this.previewPromise;\n\t}\n\n\toverride initialize(): Promise<void> {\n\t\tthrow new Error(\"should not be called directly\");\n\t}\n\n\tprotected override async doInitialize(\n\t\tremoteUserData: IRemoteUserData,\n\t): Promise<void> {\n\t\tconst remoteExtensions = await this.parseExtensions(remoteUserData);\n\t\tif (!remoteExtensions) {\n\t\t\tthis.logService.info(\n\t\t\t\t\"Skipping initializing extensions because remote extensions does not exist.\",\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\tconst installedExtensions =\n\t\t\tawait this.extensionManagementService.getInstalled();\n\t\tthis.preview = this.generatePreview(\n\t\t\tremoteExtensions,\n\t\t\tinstalledExtensions,\n\t\t);\n\t}\n}\n\nclass InstalledExtensionsInitializer\n\timplements IUserDataSyncResourceInitializer\n{\n\tconstructor(\n\t\tprivate readonly extensionsPreviewInitializer: ExtensionsPreviewInitializer,\n\t\t@IGlobalExtensionEnablementService private readonly extensionEnablementService: IGlobalExtensionEnablementService,\n\t\t@IExtensionStorageService private readonly extensionStorageService: IExtensionStorageService,\n\t\t@IUserDataSyncLogService private readonly logService: IUserDataSyncLogService,\n\t) {\n\t}\n\n\tasync initialize(): Promise<void> {\n\t\tconst preview = await this.extensionsPreviewInitializer.getPreview();\n\t\tif (!preview) {\n\t\t\treturn;\n\t\t}\n\n\t\t// 1. Initialise already installed extensions state\n\t\tfor (const installedExtension of preview.installedExtensions) {\n\t\t\tconst syncExtension = preview.remoteExtensions.find(\n\t\t\t\t({ identifier }) =>\n\t\t\t\t\tareSameExtensions(\n\t\t\t\t\t\tidentifier,\n\t\t\t\t\t\tinstalledExtension.identifier,\n\t\t\t\t\t),\n\t\t\t);\n\t\t\tif (syncExtension?.state) {\n\t\t\t\tconst extensionState =\n\t\t\t\t\tthis.extensionStorageService.getExtensionState(\n\t\t\t\t\t\tinstalledExtension,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t) || {};\n\t\t\t\tObject.keys(syncExtension.state).forEach(\n\t\t\t\t\t(key) => (extensionState[key] = syncExtension.state![key]),\n\t\t\t\t);\n\t\t\t\tthis.extensionStorageService.setExtensionState(\n\t\t\t\t\tinstalledExtension,\n\t\t\t\t\textensionState,\n\t\t\t\t\ttrue,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// 2. Initialise extensions enablement\n\t\tif (preview.disabledExtensions.length) {\n\t\t\tfor (const identifier of preview.disabledExtensions) {\n\t\t\t\tthis.logService.trace(`Disabling extension...`, identifier.id);\n\t\t\t\tawait this.extensionEnablementService.disableExtension(\n\t\t\t\t\tidentifier,\n\t\t\t\t);\n\t\t\t\tthis.logService.info(`Disabling extension`, identifier.id);\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass NewExtensionsInitializer implements IUserDataSyncResourceInitializer {\n\tconstructor(\n\t\tprivate readonly extensionsPreviewInitializer: ExtensionsPreviewInitializer,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@IExtensionStorageService private readonly extensionStorageService: IExtensionStorageService,\n\t\t@IExtensionGalleryService private readonly galleryService: IExtensionGalleryService,\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IUserDataSyncLogService private readonly logService: IUserDataSyncLogService,\n\t) {\n\t}\n\n\tasync initialize(): Promise<void> {\n\t\tconst preview = await this.extensionsPreviewInitializer.getPreview();\n\t\tif (!preview) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst newlyEnabledExtensions: ILocalExtension[] = [];\n\t\tconst targetPlatform =\n\t\t\tawait this.extensionManagementService.getTargetPlatform();\n\t\tconst galleryExtensions = await this.galleryService.getExtensions(\n\t\t\tpreview.newExtensions,\n\t\t\t{ targetPlatform, compatible: true },\n\t\t\tCancellationToken.None,\n\t\t);\n\t\tfor (const galleryExtension of galleryExtensions) {\n\t\t\ttry {\n\t\t\t\tconst extensionToSync = preview.remoteExtensions.find(\n\t\t\t\t\t({ identifier }) =>\n\t\t\t\t\t\tareSameExtensions(\n\t\t\t\t\t\t\tidentifier,\n\t\t\t\t\t\t\tgalleryExtension.identifier,\n\t\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tif (!extensionToSync) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (extensionToSync.state) {\n\t\t\t\t\tthis.extensionStorageService.setExtensionState(\n\t\t\t\t\t\tgalleryExtension,\n\t\t\t\t\t\textensionToSync.state,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tthis.logService.trace(\n\t\t\t\t\t`Installing extension...`,\n\t\t\t\t\tgalleryExtension.identifier.id,\n\t\t\t\t);\n\t\t\t\tconst local =\n\t\t\t\t\tawait this.extensionManagementService.installFromGallery(\n\t\t\t\t\t\tgalleryExtension,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tisMachineScoped: false /* set isMachineScoped to prevent install and sync dialog in web */,\n\t\t\t\t\t\t\tdonotIncludePackAndDependencies: true,\n\t\t\t\t\t\t\tinstallGivenVersion: !!extensionToSync.version,\n\t\t\t\t\t\t\tinstallPreReleaseVersion:\n\t\t\t\t\t\t\t\textensionToSync.preRelease,\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\tif (\n\t\t\t\t\t!preview.disabledExtensions.some((identifier) =>\n\t\t\t\t\t\tareSameExtensions(\n\t\t\t\t\t\t\tidentifier,\n\t\t\t\t\t\t\tgalleryExtension.identifier,\n\t\t\t\t\t\t),\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tnewlyEnabledExtensions.push(local);\n\t\t\t\t}\n\t\t\t\tthis.logService.info(\n\t\t\t\t\t`Installed extension.`,\n\t\t\t\t\tgalleryExtension.identifier.id,\n\t\t\t\t);\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.error(error);\n\t\t\t}\n\t\t}\n\n\t\tconst canEnabledExtensions = newlyEnabledExtensions.filter((e) =>\n\t\t\tthis.extensionService.canAddExtension(toExtensionDescription(e)),\n\t\t);\n\t\tif (!(await this.areExtensionsRunning(canEnabledExtensions))) {\n\t\t\tawait new Promise<void>((c, e) => {\n\t\t\t\tconst disposable = this.extensionService.onDidChangeExtensions(\n\t\t\t\t\tasync () => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tawait this.areExtensionsRunning(\n\t\t\t\t\t\t\t\t\tcanEnabledExtensions,\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\t\t\t\tc();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\te(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate async areExtensionsRunning(\n\t\textensions: ILocalExtension[],\n\t): Promise<boolean> {\n\t\tawait this.extensionService.whenInstalledExtensionsRegistered();\n\t\tconst runningExtensions = this.extensionService.extensions;\n\t\treturn extensions.every((e) =>\n\t\t\trunningExtensions.some((r) =>\n\t\t\t\tareSameExtensions({ id: r.identifier.value }, e.identifier),\n\t\t\t),\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
