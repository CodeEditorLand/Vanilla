{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/userDataSync/browser/userDataSyncWorkbenchService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { raceCancellationError } from \"../../../../base/common/async.js\";\nimport {\n\ttype CancellationToken,\n\tCancellationTokenSource,\n} from \"../../../../base/common/cancellation.js\";\nimport { CancellationError } from \"../../../../base/common/errors.js\";\nimport { Emitter, Event } from \"../../../../base/common/event.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n} from \"../../../../base/common/lifecycle.js\";\nimport { isWeb } from \"../../../../base/common/platform.js\";\nimport { escapeRegExpCharacters } from \"../../../../base/common/strings.js\";\nimport { URI } from \"../../../../base/common/uri.js\";\nimport { localize } from \"../../../../nls.js\";\nimport {\n\ttype IContextKey,\n\tIContextKeyService,\n} from \"../../../../platform/contextkey/common/contextkey.js\";\nimport {\n\tIDialogService,\n\tIFileDialogService,\n} from \"../../../../platform/dialogs/common/dialogs.js\";\nimport { IFileService } from \"../../../../platform/files/common/files.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../../../platform/instantiation/common/extensions.js\";\nimport { IInstantiationService } from \"../../../../platform/instantiation/common/instantiation.js\";\nimport { ILogService } from \"../../../../platform/log/common/log.js\";\nimport {\n\tINotificationService,\n\tSeverity,\n} from \"../../../../platform/notification/common/notification.js\";\nimport { IProductService } from \"../../../../platform/product/common/productService.js\";\nimport {\n\tIProgressService,\n\tProgressLocation,\n} from \"../../../../platform/progress/common/progress.js\";\nimport {\n\tIQuickInputService,\n\ttype IQuickPickSeparator,\n} from \"../../../../platform/quickinput/common/quickInput.js\";\nimport { ISecretStorageService } from \"../../../../platform/secrets/common/secrets.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../../../platform/storage/common/storage.js\";\nimport { ITelemetryService } from \"../../../../platform/telemetry/common/telemetry.js\";\nimport { IUriIdentityService } from \"../../../../platform/uriIdentity/common/uriIdentity.js\";\nimport { UserDataSyncStoreTypeSynchronizer } from \"../../../../platform/userDataSync/common/globalStateSync.js\";\nimport {\n\ttype IAuthenticationProvider,\n\ttype IResourcePreview,\n\tIUserDataAutoSyncService,\n\tIUserDataSyncEnablementService,\n\ttype IUserDataSyncResource,\n\tIUserDataSyncService,\n\tIUserDataSyncStoreManagementService,\n\tSyncStatus,\n\tUSER_DATA_SYNC_LOG_ID,\n\tUSER_DATA_SYNC_SCHEME,\n\tisAuthenticationProvider,\n} from \"../../../../platform/userDataSync/common/userDataSync.js\";\nimport { IUserDataSyncAccountService } from \"../../../../platform/userDataSync/common/userDataSyncAccount.js\";\nimport { IUserDataSyncMachinesService } from \"../../../../platform/userDataSync/common/userDataSyncMachines.js\";\nimport { UserDataSyncStoreClient } from \"../../../../platform/userDataSync/common/userDataSyncStoreService.js\";\nimport { isDiffEditorInput } from \"../../../common/editor.js\";\nimport { IViewDescriptorService } from \"../../../common/views.js\";\nimport { getCurrentAuthenticationSessionInfo } from \"../../authentication/browser/authenticationService.js\";\nimport {\n\ttype AuthenticationSession,\n\ttype AuthenticationSessionsChangeEvent,\n\tIAuthenticationService,\n} from \"../../authentication/common/authentication.js\";\nimport { IEditorService } from \"../../editor/common/editorService.js\";\nimport { IBrowserWorkbenchEnvironmentService } from \"../../environment/browser/environmentService.js\";\nimport { IExtensionService } from \"../../extensions/common/extensions.js\";\nimport { ILifecycleService } from \"../../lifecycle/common/lifecycle.js\";\nimport { IUserDataInitializationService } from \"../../userData/browser/userDataInit.js\";\nimport { IViewsService } from \"../../views/common/viewsService.js\";\nimport {\n\tAccountStatus,\n\tCONTEXT_ACCOUNT_STATE,\n\tCONTEXT_ENABLE_ACTIVITY_VIEWS,\n\tCONTEXT_ENABLE_SYNC_CONFLICTS_VIEW,\n\tCONTEXT_HAS_CONFLICTS,\n\tCONTEXT_SYNC_ENABLEMENT,\n\tCONTEXT_SYNC_STATE,\n\ttype IUserDataSyncAccount,\n\ttype IUserDataSyncConflictsView,\n\tIUserDataSyncWorkbenchService,\n\tSHOW_SYNC_LOG_COMMAND_ID,\n\tSYNC_CONFLICTS_VIEW_ID,\n\tSYNC_TITLE,\n\tSYNC_VIEW_CONTAINER_ID,\n} from \"../common/userDataSync.js\";\n\ntype AccountQuickPickItem = {\n\tlabel: string;\n\tauthenticationProvider: IAuthenticationProvider;\n\taccount?: UserDataSyncAccount;\n\tdescription?: string;\n};\n\nclass UserDataSyncAccount implements IUserDataSyncAccount {\n\tconstructor(\n\t\treadonly authenticationProviderId: string,\n\t\tprivate readonly session: AuthenticationSession,\n\t) {}\n\n\tget sessionId(): string {\n\t\treturn this.session.id;\n\t}\n\tget accountName(): string {\n\t\treturn this.session.account.label;\n\t}\n\tget accountId(): string {\n\t\treturn this.session.account.id;\n\t}\n\tget token(): string {\n\t\treturn this.session.idToken || this.session.accessToken;\n\t}\n}\n\ntype MergeEditorInput = {\n\tbase: URI;\n\tinput1: { uri: URI };\n\tinput2: { uri: URI };\n\tresult: URI;\n};\nexport function isMergeEditorInput(\n\teditor: unknown,\n): editor is MergeEditorInput {\n\tconst candidate = editor as MergeEditorInput;\n\treturn (\n\t\tURI.isUri(candidate?.base) &&\n\t\tURI.isUri(candidate?.input1?.uri) &&\n\t\tURI.isUri(candidate?.input2?.uri) &&\n\t\tURI.isUri(candidate?.result)\n\t);\n}\n\nexport class UserDataSyncWorkbenchService\n\textends Disposable\n\timplements IUserDataSyncWorkbenchService\n{\n\t_serviceBrand: any;\n\n\tprivate static DONOT_USE_WORKBENCH_SESSION_STORAGE_KEY =\n\t\t\"userDataSyncAccount.donotUseWorkbenchSession\";\n\tprivate static CACHED_AUTHENTICATION_PROVIDER_KEY =\n\t\t\"userDataSyncAccountProvider\";\n\tprivate static CACHED_SESSION_STORAGE_KEY = \"userDataSyncAccountPreference\";\n\n\tget enabled() {\n\t\treturn !!this.userDataSyncStoreManagementService.userDataSyncStore;\n\t}\n\n\tprivate _authenticationProviders: IAuthenticationProvider[] = [];\n\tget authenticationProviders() {\n\t\treturn this._authenticationProviders;\n\t}\n\n\tprivate _accountStatus: AccountStatus = AccountStatus.Unavailable;\n\tget accountStatus(): AccountStatus {\n\t\treturn this._accountStatus;\n\t}\n\tprivate readonly _onDidChangeAccountStatus = this._register(\n\t\tnew Emitter<AccountStatus>(),\n\t);\n\treadonly onDidChangeAccountStatus = this._onDidChangeAccountStatus.event;\n\n\tprivate _current: UserDataSyncAccount | undefined;\n\tget current(): UserDataSyncAccount | undefined {\n\t\treturn this._current;\n\t}\n\n\tprivate readonly syncEnablementContext: IContextKey<boolean>;\n\tprivate readonly syncStatusContext: IContextKey<string>;\n\tprivate readonly accountStatusContext: IContextKey<string>;\n\tprivate readonly enableConflictsViewContext: IContextKey<boolean>;\n\tprivate readonly hasConflicts: IContextKey<boolean>;\n\tprivate readonly activityViewsEnablementContext: IContextKey<boolean>;\n\n\tprivate turnOnSyncCancellationToken: CancellationTokenSource | undefined =\n\t\tundefined;\n\n\tconstructor(\n\t\t@IUserDataSyncService\n\t\tprivate readonly userDataSyncService: IUserDataSyncService,\n\t\t@IUriIdentityService\n\t\tprivate readonly uriIdentityService: IUriIdentityService,\n\t\t@IAuthenticationService\n\t\tprivate readonly authenticationService: IAuthenticationService,\n\t\t@IUserDataSyncAccountService\n\t\tprivate readonly userDataSyncAccountService: IUserDataSyncAccountService,\n\t\t@IQuickInputService\n\t\tprivate readonly quickInputService: IQuickInputService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IUserDataSyncEnablementService\n\t\tprivate readonly userDataSyncEnablementService: IUserDataSyncEnablementService,\n\t\t@IUserDataAutoSyncService\n\t\tprivate readonly userDataAutoSyncService: IUserDataAutoSyncService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IExtensionService private readonly extensionService: IExtensionService,\n\t\t@IBrowserWorkbenchEnvironmentService\n\t\tprivate readonly environmentService: IBrowserWorkbenchEnvironmentService,\n\t\t@ISecretStorageService\n\t\tprivate readonly secretStorageService: ISecretStorageService,\n\t\t@INotificationService\n\t\tprivate readonly notificationService: INotificationService,\n\t\t@IProgressService private readonly progressService: IProgressService,\n\t\t@IDialogService private readonly dialogService: IDialogService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IViewsService private readonly viewsService: IViewsService,\n\t\t@IViewDescriptorService\n\t\tprivate readonly viewDescriptorService: IViewDescriptorService,\n\t\t@IUserDataSyncStoreManagementService\n\t\tprivate readonly userDataSyncStoreManagementService: IUserDataSyncStoreManagementService,\n\t\t@ILifecycleService private readonly lifecycleService: ILifecycleService,\n\t\t@IInstantiationService\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t\t@IEditorService private readonly editorService: IEditorService,\n\t\t@IUserDataInitializationService\n\t\tprivate readonly userDataInitializationService: IUserDataInitializationService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IFileDialogService\n\t\tprivate readonly fileDialogService: IFileDialogService,\n\t\t@IUserDataSyncMachinesService\n\t\tprivate readonly userDataSyncMachinesService: IUserDataSyncMachinesService,\n\t) {\n\t\tsuper();\n\t\tthis.syncEnablementContext =\n\t\t\tCONTEXT_SYNC_ENABLEMENT.bindTo(contextKeyService);\n\t\tthis.syncStatusContext = CONTEXT_SYNC_STATE.bindTo(contextKeyService);\n\t\tthis.accountStatusContext =\n\t\t\tCONTEXT_ACCOUNT_STATE.bindTo(contextKeyService);\n\t\tthis.activityViewsEnablementContext =\n\t\t\tCONTEXT_ENABLE_ACTIVITY_VIEWS.bindTo(contextKeyService);\n\t\tthis.hasConflicts = CONTEXT_HAS_CONFLICTS.bindTo(contextKeyService);\n\t\tthis.enableConflictsViewContext =\n\t\t\tCONTEXT_ENABLE_SYNC_CONFLICTS_VIEW.bindTo(contextKeyService);\n\n\t\tif (this.userDataSyncStoreManagementService.userDataSyncStore) {\n\t\t\tthis.syncStatusContext.set(this.userDataSyncService.status);\n\t\t\tthis._register(\n\t\t\t\tuserDataSyncService.onDidChangeStatus((status) =>\n\t\t\t\t\tthis.syncStatusContext.set(status),\n\t\t\t\t),\n\t\t\t);\n\t\t\tthis.syncEnablementContext.set(\n\t\t\t\tuserDataSyncEnablementService.isEnabled(),\n\t\t\t);\n\t\t\tthis._register(\n\t\t\t\tuserDataSyncEnablementService.onDidChangeEnablement((enabled) =>\n\t\t\t\t\tthis.syncEnablementContext.set(enabled),\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tthis.waitAndInitialize();\n\t\t}\n\t}\n\n\tprivate updateAuthenticationProviders(): void {\n\t\tthis._authenticationProviders = (\n\t\t\tthis.userDataSyncStoreManagementService.userDataSyncStore\n\t\t\t\t?.authenticationProviders || []\n\t\t).filter(({ id }) =>\n\t\t\tthis.authenticationService.declaredProviders.some(\n\t\t\t\t(provider) => provider.id === id,\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate isSupportedAuthenticationProviderId(\n\t\tauthenticationProviderId: string,\n\t): boolean {\n\t\treturn this.authenticationProviders.some(\n\t\t\t({ id }) => id === authenticationProviderId,\n\t\t);\n\t}\n\n\tprivate async waitAndInitialize(): Promise<void> {\n\t\t/* wait */\n\t\tawait Promise.all([\n\t\t\tthis.extensionService.whenInstalledExtensionsRegistered(),\n\t\t\tthis.userDataInitializationService.whenInitializationFinished(),\n\t\t]);\n\n\t\t/* initialize */\n\t\ttry {\n\t\t\tawait this.initialize();\n\t\t} catch (error) {\n\t\t\t// Do not log if the current window is running extension tests\n\t\t\tif (!this.environmentService.extensionTestsLocationURI) {\n\t\t\t\tthis.logService.error(error);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async initialize(): Promise<void> {\n\t\tif (isWeb) {\n\t\t\tconst authenticationSession =\n\t\t\t\tawait getCurrentAuthenticationSessionInfo(\n\t\t\t\t\tthis.secretStorageService,\n\t\t\t\t\tthis.productService,\n\t\t\t\t);\n\t\t\tif (\n\t\t\t\tthis.currentSessionId === undefined &&\n\t\t\t\tauthenticationSession?.id\n\t\t\t) {\n\t\t\t\tif (\n\t\t\t\t\tthis.environmentService.options?.settingsSyncOptions\n\t\t\t\t\t\t?.authenticationProvider &&\n\t\t\t\t\tthis.environmentService.options.settingsSyncOptions.enabled\n\t\t\t\t) {\n\t\t\t\t\tthis.currentSessionId = authenticationSession.id;\n\t\t\t\t}\n\n\t\t\t\t// Backward compatibility\n\t\t\t\telse if (this.useWorkbenchSessionId) {\n\t\t\t\t\tthis.currentSessionId = authenticationSession.id;\n\t\t\t\t}\n\t\t\t\tthis.useWorkbenchSessionId = false;\n\t\t\t}\n\t\t}\n\n\t\tawait this.update();\n\n\t\tthis._register(\n\t\t\tthis.authenticationService.onDidChangeDeclaredProviders(() =>\n\t\t\t\tthis.updateAuthenticationProviders(),\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\tEvent.filter(\n\t\t\t\tEvent.any(\n\t\t\t\t\tthis.authenticationService\n\t\t\t\t\t\t.onDidRegisterAuthenticationProvider,\n\t\t\t\t\tthis.authenticationService\n\t\t\t\t\t\t.onDidUnregisterAuthenticationProvider,\n\t\t\t\t),\n\t\t\t\t(info) => this.isSupportedAuthenticationProviderId(info.id),\n\t\t\t)(() => this.update()),\n\t\t);\n\n\t\tthis._register(\n\t\t\tEvent.filter(\n\t\t\t\tthis.userDataSyncAccountService.onTokenFailed,\n\t\t\t\t(isSuccessive) => !isSuccessive,\n\t\t\t)(() => this.update(\"token failure\")),\n\t\t);\n\n\t\tthis._register(\n\t\t\tEvent.filter(this.authenticationService.onDidChangeSessions, (e) =>\n\t\t\t\tthis.isSupportedAuthenticationProviderId(e.providerId),\n\t\t\t)(({ event }) => this.onDidChangeSessions(event)),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.storageService.onDidChangeValue(\n\t\t\t\tStorageScope.APPLICATION,\n\t\t\t\tUserDataSyncWorkbenchService.CACHED_SESSION_STORAGE_KEY,\n\t\t\t\tthis._register(new DisposableStore()),\n\t\t\t)(() => this.onDidChangeStorage()),\n\t\t);\n\t\tthis._register(\n\t\t\tEvent.filter(\n\t\t\t\tthis.userDataSyncAccountService.onTokenFailed,\n\t\t\t\t(bailout) => bailout,\n\t\t\t)(() => this.onDidAuthFailure()),\n\t\t);\n\t\tthis.hasConflicts.set(this.userDataSyncService.conflicts.length > 0);\n\t\tthis._register(\n\t\t\tthis.userDataSyncService.onDidChangeConflicts((conflicts) => {\n\t\t\t\tthis.hasConflicts.set(conflicts.length > 0);\n\t\t\t\tif (!conflicts.length) {\n\t\t\t\t\tthis.enableConflictsViewContext.reset();\n\t\t\t\t}\n\t\t\t\t// Close merge editors with no conflicts\n\t\t\t\tthis.editorService.editors\n\t\t\t\t\t.filter((input) => {\n\t\t\t\t\t\tconst remoteResource = isDiffEditorInput(input)\n\t\t\t\t\t\t\t? input.original.resource\n\t\t\t\t\t\t\t: isMergeEditorInput(input)\n\t\t\t\t\t\t\t\t? input.input1.uri\n\t\t\t\t\t\t\t\t: undefined;\n\t\t\t\t\t\tif (remoteResource?.scheme !== USER_DATA_SYNC_SCHEME) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn !this.userDataSyncService.conflicts.some(\n\t\t\t\t\t\t\t({ conflicts }) =>\n\t\t\t\t\t\t\t\tconflicts.some(({ previewResource }) =>\n\t\t\t\t\t\t\t\t\tthis.uriIdentityService.extUri.isEqual(\n\t\t\t\t\t\t\t\t\t\tpreviewResource,\n\t\t\t\t\t\t\t\t\t\tinput.resource,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t\t.forEach((input) => input.dispose());\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate async update(reason?: string): Promise<void> {\n\t\tif (reason) {\n\t\t\tthis.logService.info(`Settings Sync: Updating due to ${reason}`);\n\t\t}\n\n\t\tthis.updateAuthenticationProviders();\n\t\tawait this.updateCurrentAccount();\n\n\t\tif (this._current) {\n\t\t\tthis.currentAuthenticationProviderId =\n\t\t\t\tthis._current.authenticationProviderId;\n\t\t}\n\n\t\tawait this.updateToken(this._current);\n\t\tthis.updateAccountStatus(\n\t\t\tthis._current ? AccountStatus.Available : AccountStatus.Unavailable,\n\t\t);\n\t}\n\n\tprivate async updateCurrentAccount(): Promise<void> {\n\t\tconst currentSessionId = this.currentSessionId;\n\t\tconst currentAuthenticationProviderId =\n\t\t\tthis.currentAuthenticationProviderId;\n\t\tif (currentSessionId) {\n\t\t\tconst authenticationProviders = currentAuthenticationProviderId\n\t\t\t\t? this.authenticationProviders.filter(\n\t\t\t\t\t\t({ id }) => id === currentAuthenticationProviderId,\n\t\t\t\t\t)\n\t\t\t\t: this.authenticationProviders;\n\t\t\tfor (const { id, scopes } of authenticationProviders) {\n\t\t\t\tconst sessions =\n\t\t\t\t\t(await this.authenticationService.getSessions(\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tscopes,\n\t\t\t\t\t)) || [];\n\t\t\t\tfor (const session of sessions) {\n\t\t\t\t\tif (session.id === currentSessionId) {\n\t\t\t\t\t\tthis._current = new UserDataSyncAccount(id, session);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._current = undefined;\n\t}\n\n\tprivate async updateToken(\n\t\tcurrent: UserDataSyncAccount | undefined,\n\t): Promise<void> {\n\t\tlet value:\n\t\t\t| { token: string; authenticationProviderId: string }\n\t\t\t| undefined;\n\t\tif (current) {\n\t\t\ttry {\n\t\t\t\tthis.logService.trace(\n\t\t\t\t\t\"Settings Sync: Updating the token for the account\",\n\t\t\t\t\tcurrent.accountName,\n\t\t\t\t);\n\t\t\t\tconst token = current.token;\n\t\t\t\tthis.logService.trace(\n\t\t\t\t\t\"Settings Sync: Token updated for the account\",\n\t\t\t\t\tcurrent.accountName,\n\t\t\t\t);\n\t\t\t\tvalue = {\n\t\t\t\t\ttoken,\n\t\t\t\t\tauthenticationProviderId: current.authenticationProviderId,\n\t\t\t\t};\n\t\t\t} catch (e) {\n\t\t\t\tthis.logService.error(e);\n\t\t\t}\n\t\t}\n\t\tawait this.userDataSyncAccountService.updateAccount(value);\n\t}\n\n\tprivate updateAccountStatus(accountStatus: AccountStatus): void {\n\t\tif (this._accountStatus !== accountStatus) {\n\t\t\tconst previous = this._accountStatus;\n\t\t\tthis.logService.trace(\n\t\t\t\t`Settings Sync: Account status changed from ${previous} to ${accountStatus}`,\n\t\t\t);\n\n\t\t\tthis._accountStatus = accountStatus;\n\t\t\tthis.accountStatusContext.set(accountStatus);\n\t\t\tthis._onDidChangeAccountStatus.fire(accountStatus);\n\t\t}\n\t}\n\n\tasync turnOn(): Promise<void> {\n\t\tif (!this.authenticationProviders.length) {\n\t\t\tthrow new Error(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"no authentication providers\",\n\t\t\t\t\t\"Settings sync cannot be turned on because there are no authentication providers available.\",\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t\tif (this.userDataSyncEnablementService.isEnabled()) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.userDataSyncService.status !== SyncStatus.Idle) {\n\t\t\tthrow new Error(\"Cannot turn on sync while syncing\");\n\t\t}\n\n\t\tconst picked = await this.pick();\n\t\tif (!picked) {\n\t\t\tthrow new CancellationError();\n\t\t}\n\n\t\t// User did not pick an account or login failed\n\t\tif (this.accountStatus !== AccountStatus.Available) {\n\t\t\tthrow new Error(localize(\"no account\", \"No account available\"));\n\t\t}\n\n\t\tconst turnOnSyncCancellationToken = (this.turnOnSyncCancellationToken =\n\t\t\tnew CancellationTokenSource());\n\t\tconst disposable = isWeb\n\t\t\t? Disposable.None\n\t\t\t: this.lifecycleService.onBeforeShutdown((e) =>\n\t\t\t\t\te.veto(\n\t\t\t\t\t\t(async () => {\n\t\t\t\t\t\t\tconst { confirmed } =\n\t\t\t\t\t\t\t\tawait this.dialogService.confirm({\n\t\t\t\t\t\t\t\t\ttype: \"warning\",\n\t\t\t\t\t\t\t\t\tmessage: localize(\n\t\t\t\t\t\t\t\t\t\t\"sync in progress\",\n\t\t\t\t\t\t\t\t\t\t\"Settings Sync is being turned on. Would you like to cancel it?\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\ttitle: localize(\n\t\t\t\t\t\t\t\t\t\t\"settings sync\",\n\t\t\t\t\t\t\t\t\t\t\"Settings Sync\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tprimaryButton: localize(\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tkey: \"yes\",\n\t\t\t\t\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\"&&Yes\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tcancelButton: localize(\"no\", \"No\"),\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (confirmed) {\n\t\t\t\t\t\t\t\tturnOnSyncCancellationToken.cancel();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn !confirmed;\n\t\t\t\t\t\t})(),\n\t\t\t\t\t\t\"veto.settingsSync\",\n\t\t\t\t\t),\n\t\t\t\t);\n\t\ttry {\n\t\t\tawait this.doTurnOnSync(turnOnSyncCancellationToken.token);\n\t\t} finally {\n\t\t\tdisposable.dispose();\n\t\t\tthis.turnOnSyncCancellationToken = undefined;\n\t\t}\n\t\tawait this.userDataAutoSyncService.turnOn();\n\n\t\tif (\n\t\t\tthis.userDataSyncStoreManagementService.userDataSyncStore?.canSwitch\n\t\t) {\n\t\t\tawait this.synchroniseUserDataSyncStoreType();\n\t\t}\n\n\t\tthis.currentAuthenticationProviderId =\n\t\t\tthis.current?.authenticationProviderId;\n\t\tif (\n\t\t\tthis.environmentService.options?.settingsSyncOptions\n\t\t\t\t?.enablementHandler &&\n\t\t\tthis.currentAuthenticationProviderId\n\t\t) {\n\t\t\tthis.environmentService.options.settingsSyncOptions.enablementHandler(\n\t\t\t\ttrue,\n\t\t\t\tthis.currentAuthenticationProviderId,\n\t\t\t);\n\t\t}\n\n\t\tthis.notificationService.info(\n\t\t\tlocalize(\"sync turned on\", \"{0} is turned on\", SYNC_TITLE.value),\n\t\t);\n\t}\n\n\tasync turnoff(everywhere: boolean): Promise<void> {\n\t\tif (this.userDataSyncEnablementService.isEnabled()) {\n\t\t\tawait this.userDataAutoSyncService.turnOff(everywhere);\n\t\t\tif (\n\t\t\t\tthis.environmentService.options?.settingsSyncOptions\n\t\t\t\t\t?.enablementHandler &&\n\t\t\t\tthis.currentAuthenticationProviderId\n\t\t\t) {\n\t\t\t\tthis.environmentService.options.settingsSyncOptions.enablementHandler(\n\t\t\t\t\tfalse,\n\t\t\t\t\tthis.currentAuthenticationProviderId,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tif (this.turnOnSyncCancellationToken) {\n\t\t\tthis.turnOnSyncCancellationToken.cancel();\n\t\t}\n\t}\n\n\tasync synchroniseUserDataSyncStoreType(): Promise<void> {\n\t\tif (!this.userDataSyncAccountService.account) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Cannot update because you are signed out from settings sync. Please sign in and try again.\",\n\t\t\t);\n\t\t}\n\t\tif (\n\t\t\t!isWeb ||\n\t\t\t!this.userDataSyncStoreManagementService.userDataSyncStore\n\t\t) {\n\t\t\t// Not supported\n\t\t\treturn;\n\t\t}\n\n\t\tconst userDataSyncStoreUrl =\n\t\t\tthis.userDataSyncStoreManagementService.userDataSyncStore.type ===\n\t\t\t\"insiders\"\n\t\t\t\t? this.userDataSyncStoreManagementService.userDataSyncStore\n\t\t\t\t\t\t.stableUrl\n\t\t\t\t: this.userDataSyncStoreManagementService.userDataSyncStore\n\t\t\t\t\t\t.insidersUrl;\n\t\tconst userDataSyncStoreClient =\n\t\t\tthis.instantiationService.createInstance(\n\t\t\t\tUserDataSyncStoreClient,\n\t\t\t\tuserDataSyncStoreUrl,\n\t\t\t);\n\t\tuserDataSyncStoreClient.setAuthToken(\n\t\t\tthis.userDataSyncAccountService.account.token,\n\t\t\tthis.userDataSyncAccountService.account.authenticationProviderId,\n\t\t);\n\t\tawait this.instantiationService\n\t\t\t.createInstance(\n\t\t\t\tUserDataSyncStoreTypeSynchronizer,\n\t\t\t\tuserDataSyncStoreClient,\n\t\t\t)\n\t\t\t.sync(\n\t\t\t\tthis.userDataSyncStoreManagementService.userDataSyncStore.type,\n\t\t\t);\n\t}\n\n\tsyncNow(): Promise<void> {\n\t\treturn this.userDataAutoSyncService.triggerSync(\n\t\t\t[\"Sync Now\"],\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t);\n\t}\n\n\tprivate async doTurnOnSync(token: CancellationToken): Promise<void> {\n\t\tconst disposables = new DisposableStore();\n\t\tconst manualSyncTask =\n\t\t\tawait this.userDataSyncService.createManualSyncTask();\n\t\ttry {\n\t\t\tawait this.progressService.withProgress(\n\t\t\t\t{\n\t\t\t\t\tlocation: ProgressLocation.Window,\n\t\t\t\t\ttitle: SYNC_TITLE.value,\n\t\t\t\t\tcommand: SHOW_SYNC_LOG_COMMAND_ID,\n\t\t\t\t\tdelay: 500,\n\t\t\t\t},\n\t\t\t\tasync (progress) => {\n\t\t\t\t\tprogress.report({\n\t\t\t\t\t\tmessage: localize(\"turning on\", \"Turning on...\"),\n\t\t\t\t\t});\n\t\t\t\t\tdisposables.add(\n\t\t\t\t\t\tthis.userDataSyncService.onDidChangeStatus((status) => {\n\t\t\t\t\t\t\tif (status === SyncStatus.HasConflicts) {\n\t\t\t\t\t\t\t\tprogress.report({\n\t\t\t\t\t\t\t\t\tmessage: localize(\n\t\t\t\t\t\t\t\t\t\t\"resolving conflicts\",\n\t\t\t\t\t\t\t\t\t\t\"Resolving conflicts...\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tprogress.report({\n\t\t\t\t\t\t\t\t\tmessage: localize(\n\t\t\t\t\t\t\t\t\t\t\"syncing...\",\n\t\t\t\t\t\t\t\t\t\t\"Turning on...\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t\tawait manualSyncTask.merge();\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.userDataSyncService.status ===\n\t\t\t\t\t\tSyncStatus.HasConflicts\n\t\t\t\t\t) {\n\t\t\t\t\t\tawait this.handleConflictsWhileTurningOn(token);\n\t\t\t\t\t}\n\t\t\t\t\tawait manualSyncTask.apply();\n\t\t\t\t},\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tawait manualSyncTask.stop();\n\t\t\tthrow error;\n\t\t} finally {\n\t\t\tdisposables.dispose();\n\t\t}\n\t}\n\n\tprivate async handleConflictsWhileTurningOn(\n\t\ttoken: CancellationToken,\n\t): Promise<void> {\n\t\tawait this.dialogService.prompt({\n\t\t\ttype: Severity.Warning,\n\t\t\tmessage: localize(\"conflicts detected\", \"Conflicts Detected\"),\n\t\t\tdetail: localize(\n\t\t\t\t\"resolve\",\n\t\t\t\t\"Please resolve conflicts to turn on...\",\n\t\t\t),\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: \"show conflicts\",\n\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"&&Show Conflicts\",\n\t\t\t\t\t),\n\t\t\t\t\trun: async () => {\n\t\t\t\t\t\tconst waitUntilConflictsAreResolvedPromise =\n\t\t\t\t\t\t\traceCancellationError(\n\t\t\t\t\t\t\t\tEvent.toPromise(\n\t\t\t\t\t\t\t\t\tEvent.filter(\n\t\t\t\t\t\t\t\t\t\tthis.userDataSyncService\n\t\t\t\t\t\t\t\t\t\t\t.onDidChangeConflicts,\n\t\t\t\t\t\t\t\t\t\t(conficts) => conficts.length === 0,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\ttoken,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tawait this.showConflicts(\n\t\t\t\t\t\t\tthis.userDataSyncService.conflicts[0]?.conflicts[0],\n\t\t\t\t\t\t);\n\t\t\t\t\t\tawait waitUntilConflictsAreResolvedPromise;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: \"replace local\",\n\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"Replace &&Local\",\n\t\t\t\t\t),\n\t\t\t\t\trun: async () => this.replace(true),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: \"replace remote\",\n\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"Replace &&Remote\",\n\t\t\t\t\t),\n\t\t\t\t\trun: () => this.replace(false),\n\t\t\t\t},\n\t\t\t],\n\t\t\tcancelButton: {\n\t\t\t\trun: () => {\n\t\t\t\t\tthrow new CancellationError();\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\tprivate async replace(local: boolean): Promise<void> {\n\t\tfor (const conflict of this.userDataSyncService.conflicts) {\n\t\t\tfor (const preview of conflict.conflicts) {\n\t\t\t\tawait this.accept(\n\t\t\t\t\t{\n\t\t\t\t\t\tsyncResource: conflict.syncResource,\n\t\t\t\t\t\tprofile: conflict.profile,\n\t\t\t\t\t},\n\t\t\t\t\tlocal ? preview.remoteResource : preview.localResource,\n\t\t\t\t\tundefined,\n\t\t\t\t\t{ force: true },\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync accept(\n\t\tresource: IUserDataSyncResource,\n\t\tconflictResource: URI,\n\t\tcontent: string | null | undefined,\n\t\tapply: boolean | { force: boolean },\n\t): Promise<void> {\n\t\treturn this.userDataSyncService.accept(\n\t\t\tresource,\n\t\t\tconflictResource,\n\t\t\tcontent,\n\t\t\tapply,\n\t\t);\n\t}\n\n\tasync showConflicts(conflictToOpen?: IResourcePreview): Promise<void> {\n\t\tif (!this.userDataSyncService.conflicts.length) {\n\t\t\treturn;\n\t\t}\n\t\tthis.enableConflictsViewContext.set(true);\n\t\tconst view =\n\t\t\tawait this.viewsService.openView<IUserDataSyncConflictsView>(\n\t\t\t\tSYNC_CONFLICTS_VIEW_ID,\n\t\t\t);\n\t\tif (view && conflictToOpen) {\n\t\t\tawait view.open(conflictToOpen);\n\t\t}\n\t}\n\n\tasync resetSyncedData(): Promise<void> {\n\t\tconst { confirmed } = await this.dialogService.confirm({\n\t\t\ttype: \"info\",\n\t\t\tmessage: localize(\n\t\t\t\t\"reset\",\n\t\t\t\t\"This will clear your data in the cloud and stop sync on all your devices.\",\n\t\t\t),\n\t\t\ttitle: localize(\"reset title\", \"Clear\"),\n\t\t\tprimaryButton: localize(\n\t\t\t\t{ key: \"resetButton\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\"&&Reset\",\n\t\t\t),\n\t\t});\n\t\tif (confirmed) {\n\t\t\tawait this.userDataSyncService.resetRemote();\n\t\t}\n\t}\n\n\tasync getAllLogResources(): Promise<URI[]> {\n\t\tconst logsFolders: URI[] = [];\n\t\tconst stat = await this.fileService.resolve(\n\t\t\tthis.uriIdentityService.extUri.dirname(\n\t\t\t\tthis.environmentService.logsHome,\n\t\t\t),\n\t\t);\n\t\tif (stat.children) {\n\t\t\tlogsFolders.push(\n\t\t\t\t...stat.children\n\t\t\t\t\t.filter(\n\t\t\t\t\t\t(stat) =>\n\t\t\t\t\t\t\tstat.isDirectory && /^\\d{8}T\\d{6}$/.test(stat.name),\n\t\t\t\t\t)\n\t\t\t\t\t.sort()\n\t\t\t\t\t.reverse()\n\t\t\t\t\t.map((d) => d.resource),\n\t\t\t);\n\t\t}\n\t\tconst result: URI[] = [];\n\t\tfor (const logFolder of logsFolders) {\n\t\t\tconst folderStat = await this.fileService.resolve(logFolder);\n\t\t\tconst childStat = folderStat.children?.find((stat) =>\n\t\t\t\tthis.uriIdentityService.extUri\n\t\t\t\t\t.basename(stat.resource)\n\t\t\t\t\t.startsWith(`${USER_DATA_SYNC_LOG_ID}.`),\n\t\t\t);\n\t\t\tif (childStat) {\n\t\t\t\tresult.push(childStat.resource);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tasync showSyncActivity(): Promise<void> {\n\t\tthis.activityViewsEnablementContext.set(true);\n\t\tawait this.waitForActiveSyncViews();\n\t\tawait this.viewsService.openViewContainer(SYNC_VIEW_CONTAINER_ID);\n\t}\n\n\tasync downloadSyncActivity(): Promise<URI | undefined> {\n\t\tconst result = await this.fileDialogService.showOpenDialog({\n\t\t\ttitle: localize(\n\t\t\t\t\"download sync activity dialog title\",\n\t\t\t\t\"Select folder to download Settings Sync activity\",\n\t\t\t),\n\t\t\tcanSelectFiles: false,\n\t\t\tcanSelectFolders: true,\n\t\t\tcanSelectMany: false,\n\t\t\topenLabel: localize(\n\t\t\t\t\"download sync activity dialog open label\",\n\t\t\t\t\"Save\",\n\t\t\t),\n\t\t});\n\n\t\tif (!result?.[0]) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn this.progressService.withProgress(\n\t\t\t{ location: ProgressLocation.Window },\n\t\t\tasync () => {\n\t\t\t\tconst machines =\n\t\t\t\t\tawait this.userDataSyncMachinesService.getMachines();\n\t\t\t\tconst currentMachine = machines.find((m) => m.isCurrent);\n\t\t\t\tconst name =\n\t\t\t\t\t(currentMachine ? currentMachine.name + \" - \" : \"\") +\n\t\t\t\t\t\"Settings Sync Activity\";\n\t\t\t\tconst stat = await this.fileService.resolve(result[0]);\n\n\t\t\t\tconst nameRegEx = new RegExp(\n\t\t\t\t\t`${escapeRegExpCharacters(name)}\\\\s(\\\\d+)`,\n\t\t\t\t);\n\t\t\t\tconst indexes: number[] = [];\n\t\t\t\tfor (const child of stat.children ?? []) {\n\t\t\t\t\tif (child.name === name) {\n\t\t\t\t\t\tindexes.push(0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst matches = nameRegEx.exec(child.name);\n\t\t\t\t\t\tif (matches) {\n\t\t\t\t\t\t\tindexes.push(Number.parseInt(matches[1]));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tindexes.sort((a, b) => a - b);\n\n\t\t\t\tconst folder = this.uriIdentityService.extUri.joinPath(\n\t\t\t\t\tresult[0],\n\t\t\t\t\tindexes[0] !== 0\n\t\t\t\t\t\t? name\n\t\t\t\t\t\t: `${name} ${indexes[indexes.length - 1] + 1}`,\n\t\t\t\t);\n\t\t\t\tawait Promise.all([\n\t\t\t\t\tthis.userDataSyncService.saveRemoteActivityData(\n\t\t\t\t\t\tthis.uriIdentityService.extUri.joinPath(\n\t\t\t\t\t\t\tfolder,\n\t\t\t\t\t\t\t\"remoteActivity.json\",\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t\t(async () => {\n\t\t\t\t\t\tconst logResources = await this.getAllLogResources();\n\t\t\t\t\t\tawait Promise.all(\n\t\t\t\t\t\t\tlogResources.map(async (logResource) =>\n\t\t\t\t\t\t\t\tthis.fileService.copy(\n\t\t\t\t\t\t\t\t\tlogResource,\n\t\t\t\t\t\t\t\t\tthis.uriIdentityService.extUri.joinPath(\n\t\t\t\t\t\t\t\t\t\tfolder,\n\t\t\t\t\t\t\t\t\t\t\"logs\",\n\t\t\t\t\t\t\t\t\t\t`${this.uriIdentityService.extUri.basename(this.uriIdentityService.extUri.dirname(logResource))}.log`,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t})(),\n\t\t\t\t\tthis.fileService.copy(\n\t\t\t\t\t\tthis.environmentService.userDataSyncHome,\n\t\t\t\t\t\tthis.uriIdentityService.extUri.joinPath(\n\t\t\t\t\t\t\tfolder,\n\t\t\t\t\t\t\t\"localActivity\",\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t]);\n\t\t\t\treturn folder;\n\t\t\t},\n\t\t);\n\t}\n\n\tprivate async waitForActiveSyncViews(): Promise<void> {\n\t\tconst viewContainer = this.viewDescriptorService.getViewContainerById(\n\t\t\tSYNC_VIEW_CONTAINER_ID,\n\t\t);\n\t\tif (viewContainer) {\n\t\t\tconst model =\n\t\t\t\tthis.viewDescriptorService.getViewContainerModel(viewContainer);\n\t\t\tif (!model.activeViewDescriptors.length) {\n\t\t\t\tawait Event.toPromise(\n\t\t\t\t\tEvent.filter(\n\t\t\t\t\t\tmodel.onDidChangeActiveViewDescriptors,\n\t\t\t\t\t\t(e) => model.activeViewDescriptors.length > 0,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync signIn(): Promise<void> {\n\t\tconst currentAuthenticationProviderId =\n\t\t\tthis.currentAuthenticationProviderId;\n\t\tconst authenticationProvider = currentAuthenticationProviderId\n\t\t\t? this.authenticationProviders.find(\n\t\t\t\t\t(p) => p.id === currentAuthenticationProviderId,\n\t\t\t\t)\n\t\t\t: undefined;\n\t\tif (authenticationProvider) {\n\t\t\tawait this.doSignIn(authenticationProvider);\n\t\t} else {\n\t\t\tawait this.pick();\n\t\t}\n\t}\n\n\tprivate async pick(): Promise<boolean> {\n\t\tconst result = await this.doPick();\n\t\tif (!result) {\n\t\t\treturn false;\n\t\t}\n\t\tawait this.doSignIn(result);\n\t\treturn true;\n\t}\n\n\tprivate async doPick(): Promise<\n\t\tUserDataSyncAccount | IAuthenticationProvider | undefined\n\t> {\n\t\tif (this.authenticationProviders.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst authenticationProviders = [...this.authenticationProviders].sort(\n\t\t\t({ id }) => (id === this.currentAuthenticationProviderId ? -1 : 1),\n\t\t);\n\t\tconst allAccounts = new Map<string, UserDataSyncAccount[]>();\n\n\t\tif (authenticationProviders.length === 1) {\n\t\t\tconst accounts = await this.getAccounts(\n\t\t\t\tauthenticationProviders[0].id,\n\t\t\t\tauthenticationProviders[0].scopes,\n\t\t\t);\n\t\t\tif (accounts.length) {\n\t\t\t\tallAccounts.set(authenticationProviders[0].id, accounts);\n\t\t\t} else {\n\t\t\t\t// Single auth provider and no accounts\n\t\t\t\treturn authenticationProviders[0];\n\t\t\t}\n\t\t}\n\n\t\tlet result: UserDataSyncAccount | IAuthenticationProvider | undefined;\n\t\tconst disposables: DisposableStore = new DisposableStore();\n\t\tconst quickPick = disposables.add(\n\t\t\tthis.quickInputService.createQuickPick<AccountQuickPickItem>({\n\t\t\t\tuseSeparators: true,\n\t\t\t}),\n\t\t);\n\n\t\tconst promise = new Promise<\n\t\t\tUserDataSyncAccount | IAuthenticationProvider | undefined\n\t\t>((c) => {\n\t\t\tdisposables.add(\n\t\t\t\tquickPick.onDidHide(() => {\n\t\t\t\t\tdisposables.dispose();\n\t\t\t\t\tc(result);\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\n\t\tquickPick.title = SYNC_TITLE.value;\n\t\tquickPick.ok = false;\n\t\tquickPick.ignoreFocusOut = true;\n\t\tquickPick.placeholder = localize(\n\t\t\t\"choose account placeholder\",\n\t\t\t\"Select an account to sign in\",\n\t\t);\n\t\tquickPick.show();\n\n\t\tif (authenticationProviders.length > 1) {\n\t\t\tquickPick.busy = true;\n\t\t\tfor (const { id, scopes } of authenticationProviders) {\n\t\t\t\tconst accounts = await this.getAccounts(id, scopes);\n\t\t\t\tif (accounts.length) {\n\t\t\t\t\tallAccounts.set(id, accounts);\n\t\t\t\t}\n\t\t\t}\n\t\t\tquickPick.busy = false;\n\t\t}\n\n\t\tquickPick.items = this.createQuickpickItems(\n\t\t\tauthenticationProviders,\n\t\t\tallAccounts,\n\t\t);\n\t\tdisposables.add(\n\t\t\tquickPick.onDidAccept(() => {\n\t\t\t\tresult = quickPick.selectedItems[0]?.account\n\t\t\t\t\t? quickPick.selectedItems[0]?.account\n\t\t\t\t\t: quickPick.selectedItems[0]?.authenticationProvider;\n\t\t\t\tquickPick.hide();\n\t\t\t}),\n\t\t);\n\n\t\treturn promise;\n\t}\n\n\tprivate async getAccounts(\n\t\tauthenticationProviderId: string,\n\t\tscopes: string[],\n\t): Promise<UserDataSyncAccount[]> {\n\t\tconst accounts: Map<string, UserDataSyncAccount> = new Map<\n\t\t\tstring,\n\t\t\tUserDataSyncAccount\n\t\t>();\n\t\tlet currentAccount: UserDataSyncAccount | null = null;\n\n\t\tconst sessions =\n\t\t\t(await this.authenticationService.getSessions(\n\t\t\t\tauthenticationProviderId,\n\t\t\t\tscopes,\n\t\t\t)) || [];\n\t\tfor (const session of sessions) {\n\t\t\tconst account: UserDataSyncAccount = new UserDataSyncAccount(\n\t\t\t\tauthenticationProviderId,\n\t\t\t\tsession,\n\t\t\t);\n\t\t\taccounts.set(account.accountId, account);\n\t\t\tif (account.sessionId === this.currentSessionId) {\n\t\t\t\tcurrentAccount = account;\n\t\t\t}\n\t\t}\n\n\t\tif (currentAccount) {\n\t\t\t// Always use current account if available\n\t\t\taccounts.set(currentAccount.accountId, currentAccount);\n\t\t}\n\n\t\treturn currentAccount\n\t\t\t? [...accounts.values()]\n\t\t\t: [...accounts.values()].sort(({ sessionId }) =>\n\t\t\t\t\tsessionId === this.currentSessionId ? -1 : 1,\n\t\t\t\t);\n\t}\n\n\tprivate createQuickpickItems(\n\t\tauthenticationProviders: IAuthenticationProvider[],\n\t\tallAccounts: Map<string, UserDataSyncAccount[]>,\n\t): (AccountQuickPickItem | IQuickPickSeparator)[] {\n\t\tconst quickPickItems: (AccountQuickPickItem | IQuickPickSeparator)[] =\n\t\t\t[];\n\n\t\t// Signed in Accounts\n\t\tif (allAccounts.size) {\n\t\t\tquickPickItems.push({\n\t\t\t\ttype: \"separator\",\n\t\t\t\tlabel: localize(\"signed in\", \"Signed in\"),\n\t\t\t});\n\t\t\tfor (const authenticationProvider of authenticationProviders) {\n\t\t\t\tconst accounts = (\n\t\t\t\t\tallAccounts.get(authenticationProvider.id) || []\n\t\t\t\t).sort(({ sessionId }) =>\n\t\t\t\t\tsessionId === this.currentSessionId ? -1 : 1,\n\t\t\t\t);\n\t\t\t\tconst providerName = this.authenticationService.getProvider(\n\t\t\t\t\tauthenticationProvider.id,\n\t\t\t\t).label;\n\t\t\t\tfor (const account of accounts) {\n\t\t\t\t\tquickPickItems.push({\n\t\t\t\t\t\tlabel: `${account.accountName} (${providerName})`,\n\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\taccount.sessionId === this.current?.sessionId\n\t\t\t\t\t\t\t\t? localize(\"last used\", \"Last Used with Sync\")\n\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\taccount,\n\t\t\t\t\t\tauthenticationProvider,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tquickPickItems.push({\n\t\t\t\ttype: \"separator\",\n\t\t\t\tlabel: localize(\"others\", \"Others\"),\n\t\t\t});\n\t\t}\n\n\t\t// Account Providers\n\t\tfor (const authenticationProvider of authenticationProviders) {\n\t\t\tconst provider = this.authenticationService.getProvider(\n\t\t\t\tauthenticationProvider.id,\n\t\t\t);\n\t\t\tif (\n\t\t\t\t!allAccounts.has(authenticationProvider.id) ||\n\t\t\t\tprovider.supportsMultipleAccounts\n\t\t\t) {\n\t\t\t\tconst providerName = provider.label;\n\t\t\t\tquickPickItems.push({\n\t\t\t\t\tlabel: localize(\n\t\t\t\t\t\t\"sign in using account\",\n\t\t\t\t\t\t\"Sign in with {0}\",\n\t\t\t\t\t\tproviderName,\n\t\t\t\t\t),\n\t\t\t\t\tauthenticationProvider,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn quickPickItems;\n\t}\n\n\tprivate async doSignIn(\n\t\taccountOrAuthProvider: UserDataSyncAccount | IAuthenticationProvider,\n\t): Promise<void> {\n\t\tlet sessionId: string;\n\t\tif (isAuthenticationProvider(accountOrAuthProvider)) {\n\t\t\tif (\n\t\t\t\tthis.environmentService.options?.settingsSyncOptions\n\t\t\t\t\t?.authenticationProvider?.id === accountOrAuthProvider.id\n\t\t\t) {\n\t\t\t\tsessionId =\n\t\t\t\t\tawait this.environmentService.options?.settingsSyncOptions?.authenticationProvider?.signIn();\n\t\t\t} else {\n\t\t\t\tsessionId = (\n\t\t\t\t\tawait this.authenticationService.createSession(\n\t\t\t\t\t\taccountOrAuthProvider.id,\n\t\t\t\t\t\taccountOrAuthProvider.scopes,\n\t\t\t\t\t)\n\t\t\t\t).id;\n\t\t\t}\n\t\t\tthis.currentAuthenticationProviderId = accountOrAuthProvider.id;\n\t\t} else {\n\t\t\tif (\n\t\t\t\tthis.environmentService.options?.settingsSyncOptions\n\t\t\t\t\t?.authenticationProvider?.id ===\n\t\t\t\taccountOrAuthProvider.authenticationProviderId\n\t\t\t) {\n\t\t\t\tsessionId =\n\t\t\t\t\tawait this.environmentService.options?.settingsSyncOptions?.authenticationProvider?.signIn();\n\t\t\t} else {\n\t\t\t\tsessionId = accountOrAuthProvider.sessionId;\n\t\t\t}\n\t\t\tthis.currentAuthenticationProviderId =\n\t\t\t\taccountOrAuthProvider.authenticationProviderId;\n\t\t}\n\t\tthis.currentSessionId = sessionId;\n\t\tawait this.update();\n\t}\n\n\tprivate async onDidAuthFailure(): Promise<void> {\n\t\tthis.telemetryService.publicLog2<\n\t\t\t{},\n\t\t\t{\n\t\t\t\towner: \"sandy081\";\n\t\t\t\tcomment: \"Report when there are successive auth failures during settings sync\";\n\t\t\t}\n\t\t>(\"sync/successiveAuthFailures\");\n\t\tthis.currentSessionId = undefined;\n\t\tawait this.update(\"auth failure\");\n\t}\n\n\tprivate onDidChangeSessions(e: AuthenticationSessionsChangeEvent): void {\n\t\tif (\n\t\t\tthis.currentSessionId &&\n\t\t\te.removed?.find((session) => session.id === this.currentSessionId)\n\t\t) {\n\t\t\tthis.currentSessionId = undefined;\n\t\t}\n\t\tthis.update(\"change in sessions\");\n\t}\n\n\tprivate onDidChangeStorage(): void {\n\t\tif (\n\t\t\tthis.currentSessionId !==\n\t\t\tthis.getStoredCachedSessionId() /* This checks if current window changed the value or not */\n\t\t) {\n\t\t\tthis._cachedCurrentSessionId = null;\n\t\t\tthis.update(\"change in storage\");\n\t\t}\n\t}\n\n\tprivate _cachedCurrentAuthenticationProviderId: string | undefined | null =\n\t\tnull;\n\tprivate get currentAuthenticationProviderId(): string | undefined {\n\t\tif (this._cachedCurrentAuthenticationProviderId === null) {\n\t\t\tthis._cachedCurrentAuthenticationProviderId =\n\t\t\t\tthis.storageService.get(\n\t\t\t\t\tUserDataSyncWorkbenchService.CACHED_AUTHENTICATION_PROVIDER_KEY,\n\t\t\t\t\tStorageScope.APPLICATION,\n\t\t\t\t);\n\t\t}\n\t\treturn this._cachedCurrentAuthenticationProviderId;\n\t}\n\n\tprivate set currentAuthenticationProviderId(currentAuthenticationProviderId:\n\t\t| string\n\t\t| undefined) {\n\t\tif (\n\t\t\tthis._cachedCurrentAuthenticationProviderId !==\n\t\t\tcurrentAuthenticationProviderId\n\t\t) {\n\t\t\tthis._cachedCurrentAuthenticationProviderId =\n\t\t\t\tcurrentAuthenticationProviderId;\n\t\t\tif (currentAuthenticationProviderId === undefined) {\n\t\t\t\tthis.storageService.remove(\n\t\t\t\t\tUserDataSyncWorkbenchService.CACHED_AUTHENTICATION_PROVIDER_KEY,\n\t\t\t\t\tStorageScope.APPLICATION,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.storageService.store(\n\t\t\t\t\tUserDataSyncWorkbenchService.CACHED_AUTHENTICATION_PROVIDER_KEY,\n\t\t\t\t\tcurrentAuthenticationProviderId,\n\t\t\t\t\tStorageScope.APPLICATION,\n\t\t\t\t\tStorageTarget.MACHINE,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _cachedCurrentSessionId: string | undefined | null = null;\n\tprivate get currentSessionId(): string | undefined {\n\t\tif (this._cachedCurrentSessionId === null) {\n\t\t\tthis._cachedCurrentSessionId = this.getStoredCachedSessionId();\n\t\t}\n\t\treturn this._cachedCurrentSessionId;\n\t}\n\n\tprivate set currentSessionId(cachedSessionId: string | undefined) {\n\t\tif (this._cachedCurrentSessionId !== cachedSessionId) {\n\t\t\tthis._cachedCurrentSessionId = cachedSessionId;\n\t\t\tif (cachedSessionId === undefined) {\n\t\t\t\tthis.logService.info(\"Settings Sync: Reset current session\");\n\t\t\t\tthis.storageService.remove(\n\t\t\t\t\tUserDataSyncWorkbenchService.CACHED_SESSION_STORAGE_KEY,\n\t\t\t\t\tStorageScope.APPLICATION,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.logService.info(\n\t\t\t\t\t\"Settings Sync: Updated current session\",\n\t\t\t\t\tcachedSessionId,\n\t\t\t\t);\n\t\t\t\tthis.storageService.store(\n\t\t\t\t\tUserDataSyncWorkbenchService.CACHED_SESSION_STORAGE_KEY,\n\t\t\t\t\tcachedSessionId,\n\t\t\t\t\tStorageScope.APPLICATION,\n\t\t\t\t\tStorageTarget.MACHINE,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getStoredCachedSessionId(): string | undefined {\n\t\treturn this.storageService.get(\n\t\t\tUserDataSyncWorkbenchService.CACHED_SESSION_STORAGE_KEY,\n\t\t\tStorageScope.APPLICATION,\n\t\t);\n\t}\n\n\tprivate get useWorkbenchSessionId(): boolean {\n\t\treturn !this.storageService.getBoolean(\n\t\t\tUserDataSyncWorkbenchService.DONOT_USE_WORKBENCH_SESSION_STORAGE_KEY,\n\t\t\tStorageScope.APPLICATION,\n\t\t\tfalse,\n\t\t);\n\t}\n\n\tprivate set useWorkbenchSessionId(useWorkbenchSession: boolean) {\n\t\tthis.storageService.store(\n\t\t\tUserDataSyncWorkbenchService.DONOT_USE_WORKBENCH_SESSION_STORAGE_KEY,\n\t\t\t!useWorkbenchSession,\n\t\t\tStorageScope.APPLICATION,\n\t\t\tStorageTarget.MACHINE,\n\t\t);\n\t}\n}\n\nregisterSingleton(\n\tIUserDataSyncWorkbenchService,\n\tUserDataSyncWorkbenchService,\n\tInstantiationType.Eager /* Eager because it initializes settings sync accounts */,\n);\n"],
  "mappings": "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",
  "names": ["conflicts", "stat"]
}
