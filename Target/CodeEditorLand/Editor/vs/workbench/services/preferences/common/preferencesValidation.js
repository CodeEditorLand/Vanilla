import{Color as b}from"../../../../../vs/base/common/color.js";import"../../../../../vs/base/common/jsonSchema.js";import{isObject as x,isString as V,isStringArray as f,isUndefinedOrNull as I}from"../../../../../vs/base/common/types.js";import*as t from"../../../../../vs/nls.js";import"../../../../../vs/platform/configuration/common/configurationRegistry.js";function d(e,...n){return n.some(r=>e.includes(r))}function y(e){return e===""||I(e)}function A(e){const n=Array.isArray(e.type)?e.type:[e.type],r=d(n,"null"),i=(d(n,"number")||d(n,"integer"))&&(n.length===1||n.length===2&&r),a=E(e),s=v(e),o=M(e),l=S(e);return u=>{if(r&&y(u))return"";const m=[];if(o){const c=o(u);c&&m.push(c)}if(l){const c=l(u);c&&m.push(c)}return e.type==="boolean"&&u!==!0&&u!==!1&&m.push(t.localize("validations.booleanIncorrectType",'Incorrect type. Expected "boolean".')),i&&(y(u)||typeof u=="boolean"||Array.isArray(u)||isNaN(+u)?m.push(t.localize("validations.expectedNumeric","Value must be a number.")):m.push(...a.filter(c=>!c.isValid(+u)).map(c=>c.message))),e.type==="string"&&(e.enum&&!f(e.enum)?m.push(t.localize("validations.stringIncorrectEnumOptions","The enum options should be strings, but there is a non-string option. Please file an issue with the extension author.")):V(u)?m.push(...s.filter(c=>!c.isValid(u)).map(c=>c.message)):m.push(t.localize("validations.stringIncorrectType",'Incorrect type. Expected "string".'))),m.length?e.errorMessage?[e.errorMessage,...m].join(" "):m.join(" "):""}}function w(e,n){if(typeof n>"u")return;if(!(Array.isArray(n)?n:[n]).some(i=>z(e,i)))return t.localize("invalidTypeError","Setting has an invalid type, expected {0}. Fix in JSON.",JSON.stringify(n))}function z(e,n){const r=typeof e;return n==="boolean"?r==="boolean":n==="object"?e&&!Array.isArray(e)&&r==="object":n==="null"?e===null:n==="array"?Array.isArray(e):n==="string"?r==="string":n==="number"||n==="integer"?r==="number":!0}function h(e){try{return new RegExp(e,"u")}catch{try{return new RegExp(e)}catch{return console.error(t.localize("regexParsingError","Error parsing the following regex both with and without the u flag:"),e),/.*/}}}function v(e){const n=/^(([^:/?#]+?):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?/;let r;return typeof e.pattern=="string"&&(r=h(e.pattern)),[{enabled:e.maxLength!==void 0,isValid:i=>i.length<=e.maxLength,message:t.localize("validations.maxLength","Value must be {0} or fewer characters long.",e.maxLength)},{enabled:e.minLength!==void 0,isValid:i=>i.length>=e.minLength,message:t.localize("validations.minLength","Value must be {0} or more characters long.",e.minLength)},{enabled:r!==void 0,isValid:i=>r.test(i),message:e.patternErrorMessage||t.localize("validations.regex","Value must match regex `{0}`.",e.pattern)},{enabled:e.format==="color-hex",isValid:i=>b.Format.CSS.parseHex(i),message:t.localize("validations.colorFormat","Invalid color format. Use #RGB, #RGBA, #RRGGBB or #RRGGBBAA.")},{enabled:e.format==="uri"||e.format==="uri-reference",isValid:i=>!!i.length,message:t.localize("validations.uriEmpty","URI expected.")},{enabled:e.format==="uri"||e.format==="uri-reference",isValid:i=>n.test(i),message:t.localize("validations.uriMissing","URI is expected.")},{enabled:e.format==="uri",isValid:i=>{const a=i.match(n);return!!(a&&a[2])},message:t.localize("validations.uriSchemeMissing","URI with a scheme is expected.")},{enabled:e.enum!==void 0,isValid:i=>e.enum.includes(i),message:t.localize("validations.invalidStringEnumValue","Value is not accepted. Valid values: {0}.",e.enum?e.enum.map(i=>`"${i}"`).join(", "):"[]")}].filter(i=>i.enabled)}function E(e){const n=Array.isArray(e.type)?e.type:[e.type],r=d(n,"null"),i=d(n,"integer")&&(n.length===1||n.length===2&&r);if(!(d(n,"number","integer")&&(n.length===1||n.length===2&&r)))return[];let s,o;return typeof e.exclusiveMaximum=="boolean"?s=e.exclusiveMaximum?e.maximum:void 0:s=e.exclusiveMaximum,typeof e.exclusiveMinimum=="boolean"?o=e.exclusiveMinimum?e.minimum:void 0:o=e.exclusiveMinimum,[{enabled:s!==void 0&&(e.maximum===void 0||s<=e.maximum),isValid:l=>l<s,message:t.localize("validations.exclusiveMax","Value must be strictly less than {0}.",s)},{enabled:o!==void 0&&(e.minimum===void 0||o>=e.minimum),isValid:l=>l>o,message:t.localize("validations.exclusiveMin","Value must be strictly greater than {0}.",o)},{enabled:e.maximum!==void 0&&(s===void 0||s>e.maximum),isValid:l=>l<=e.maximum,message:t.localize("validations.max","Value must be less than or equal to {0}.",e.maximum)},{enabled:e.minimum!==void 0&&(o===void 0||o<e.minimum),isValid:l=>l>=e.minimum,message:t.localize("validations.min","Value must be greater than or equal to {0}.",e.minimum)},{enabled:e.multipleOf!==void 0,isValid:l=>l%e.multipleOf===0,message:t.localize("validations.multipleOf","Value must be a multiple of {0}.",e.multipleOf)},{enabled:i,isValid:l=>l%1===0,message:t.localize("validations.expectedInteger","Value must be an integer.")}].filter(l=>l.enabled)}function M(e){if(e.type==="array"&&e.items&&!Array.isArray(e.items)){const n=e.items;if(n&&!Array.isArray(n.type)){const r=i=>"'"+i+"'";return i=>{if(!i)return null;let a="";if(!Array.isArray(i))return a+=t.localize("validations.arrayIncorrectType","Incorrect type. Expected an array."),a+=`
`,a;const s=i;if(e.uniqueItems&&new Set(s).size<s.length&&(a+=t.localize("validations.stringArrayUniqueItems","Array has duplicate items"),a+=`
`),e.minItems&&s.length<e.minItems&&(a+=t.localize("validations.stringArrayMinItem","Array must have at least {0} items",e.minItems),a+=`
`),e.maxItems&&s.length>e.maxItems&&(a+=t.localize("validations.stringArrayMaxItem","Array must have at most {0} items",e.maxItems),a+=`
`),n.type==="string"){if(!f(s))return a+=t.localize("validations.stringArrayIncorrectType","Incorrect type. Expected a string array."),a+=`
`,a;if(typeof n.pattern=="string"){const l=h(n.pattern);s.forEach(u=>{l.test(u)||(a+=n.patternErrorMessage||t.localize("validations.stringArrayItemPattern","Value {0} must match regex {1}.",r(u),r(n.pattern)))})}const o=n.enum;o&&s.forEach(l=>{o.indexOf(l)===-1&&(a+=t.localize("validations.stringArrayItemEnum","Value {0} is not one of {1}",r(l),"["+o.map(r).join(", ")+"]"),a+=`
`)})}else(n.type==="integer"||n.type==="number")&&s.forEach(o=>{const l=g(n,o);l&&(a+=`${o}: ${l}
`)});return a}}}return null}function S(e){if(e.type==="object"){const{properties:n,patternProperties:r,additionalProperties:i}=e;return a=>{if(!a)return null;const s=[];return x(a)?Object.keys(a).forEach(o=>{const l=a[o];if(n&&o in n){const u=g(n[o],l);u&&s.push(`${o}: ${u}
`);return}if(r){for(const u in r)if(RegExp(u).test(o)){const m=g(r[u],l);m&&s.push(`${o}: ${m}
`);return}}if(i===!1)s.push(t.localize("validations.objectPattern",`Property {0} is not allowed.
`,o));else if(typeof i=="object"){const u=g(i,l);u&&s.push(`${o}: ${u}
`)}}):s.push(t.localize("validations.objectIncorrectType","Incorrect type. Expected an object.")),s.length?e.errorMessage?[e.errorMessage,...s].join(" "):s.join(" "):""}}return null}function g(e,n){return A(e)(n)}export{A as createValidator,w as getInvalidTypeError};
