{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/preferences/common/preferencesValidation.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Color } from \"../../../../base/common/color.js\";\nimport type { JSONSchemaType } from \"../../../../base/common/jsonSchema.js\";\nimport {\n\tisObject,\n\tisString,\n\tisStringArray,\n\tisUndefinedOrNull,\n} from \"../../../../base/common/types.js\";\nimport * as nls from \"../../../../nls.js\";\nimport type { IConfigurationPropertySchema } from \"../../../../platform/configuration/common/configurationRegistry.js\";\n\ntype Validator<T> = {\n\tenabled: boolean;\n\tisValid: (value: T) => boolean;\n\tmessage: string;\n};\n\nfunction canBeType(\n\tpropTypes: (string | undefined)[],\n\t...types: JSONSchemaType[]\n): boolean {\n\treturn types.some((t) => propTypes.includes(t));\n}\n\nfunction isNullOrEmpty(value: unknown): boolean {\n\treturn value === \"\" || isUndefinedOrNull(value);\n}\n\nexport function createValidator(\n\tprop: IConfigurationPropertySchema,\n): (value: any) => string | null {\n\tconst type: (string | undefined)[] = Array.isArray(prop.type)\n\t\t? prop.type\n\t\t: [prop.type];\n\tconst isNullable = canBeType(type, \"null\");\n\tconst isNumeric =\n\t\t(canBeType(type, \"number\") || canBeType(type, \"integer\")) &&\n\t\t(type.length === 1 || (type.length === 2 && isNullable));\n\n\tconst numericValidations = getNumericValidators(prop);\n\tconst stringValidations = getStringValidators(prop);\n\tconst arrayValidator = getArrayValidator(prop);\n\tconst objectValidator = getObjectValidator(prop);\n\n\treturn (value) => {\n\t\tif (isNullable && isNullOrEmpty(value)) {\n\t\t\treturn \"\";\n\t\t}\n\n\t\tconst errors: string[] = [];\n\t\tif (arrayValidator) {\n\t\t\tconst err = arrayValidator(value);\n\t\t\tif (err) {\n\t\t\t\terrors.push(err);\n\t\t\t}\n\t\t}\n\n\t\tif (objectValidator) {\n\t\t\tconst err = objectValidator(value);\n\t\t\tif (err) {\n\t\t\t\terrors.push(err);\n\t\t\t}\n\t\t}\n\n\t\tif (prop.type === \"boolean\" && value !== true && value !== false) {\n\t\t\terrors.push(\n\t\t\t\tnls.localize(\n\t\t\t\t\t\"validations.booleanIncorrectType\",\n\t\t\t\t\t'Incorrect type. Expected \"boolean\".',\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\tif (isNumeric) {\n\t\t\tif (\n\t\t\t\tisNullOrEmpty(value) ||\n\t\t\t\ttypeof value === \"boolean\" ||\n\t\t\t\tArray.isArray(value) ||\n\t\t\t\tisNaN(+value)\n\t\t\t) {\n\t\t\t\terrors.push(\n\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\"validations.expectedNumeric\",\n\t\t\t\t\t\t\"Value must be a number.\",\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\terrors.push(\n\t\t\t\t\t...numericValidations\n\t\t\t\t\t\t.filter((validator) => !validator.isValid(+value))\n\t\t\t\t\t\t.map((validator) => validator.message),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (prop.type === \"string\") {\n\t\t\tif (prop.enum && !isStringArray(prop.enum)) {\n\t\t\t\terrors.push(\n\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\"validations.stringIncorrectEnumOptions\",\n\t\t\t\t\t\t\"The enum options should be strings, but there is a non-string option. Please file an issue with the extension author.\",\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t} else if (isString(value)) {\n\t\t\t\terrors.push(\n\t\t\t\t\t...stringValidations\n\t\t\t\t\t\t.filter((validator) => !validator.isValid(value))\n\t\t\t\t\t\t.map((validator) => validator.message),\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\terrors.push(\n\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\"validations.stringIncorrectType\",\n\t\t\t\t\t\t'Incorrect type. Expected \"string\".',\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (errors.length) {\n\t\t\treturn prop.errorMessage\n\t\t\t\t? [prop.errorMessage, ...errors].join(\" \")\n\t\t\t\t: errors.join(\" \");\n\t\t}\n\n\t\treturn \"\";\n\t};\n}\n\n/**\n * Returns an error string if the value is invalid and can't be displayed in the settings UI for the given type.\n */\nexport function getInvalidTypeError(\n\tvalue: any,\n\ttype: undefined | string | string[],\n): string | undefined {\n\tif (typeof type === \"undefined\") {\n\t\treturn;\n\t}\n\n\tconst typeArr = Array.isArray(type) ? type : [type];\n\tif (!typeArr.some((_type) => valueValidatesAsType(value, _type))) {\n\t\treturn nls.localize(\n\t\t\t\"invalidTypeError\",\n\t\t\t\"Setting has an invalid type, expected {0}. Fix in JSON.\",\n\t\t\tJSON.stringify(type),\n\t\t);\n\t}\n\n\treturn;\n}\n\nfunction valueValidatesAsType(value: any, type: string): boolean {\n\tconst valueType = typeof value;\n\tif (type === \"boolean\") {\n\t\treturn valueType === \"boolean\";\n\t} else if (type === \"object\") {\n\t\treturn value && !Array.isArray(value) && valueType === \"object\";\n\t} else if (type === \"null\") {\n\t\treturn value === null;\n\t} else if (type === \"array\") {\n\t\treturn Array.isArray(value);\n\t} else if (type === \"string\") {\n\t\treturn valueType === \"string\";\n\t} else if (type === \"number\" || type === \"integer\") {\n\t\treturn valueType === \"number\";\n\t}\n\n\treturn true;\n}\n\nfunction toRegExp(pattern: string): RegExp {\n\ttry {\n\t\t// The u flag allows support for better Unicode matching,\n\t\t// but deprecates some patterns such as [\\s-9]\n\t\t// Ref https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Regular_expressions/Character_class#description\n\t\treturn new RegExp(pattern, \"u\");\n\t} catch (e) {\n\t\ttry {\n\t\t\treturn new RegExp(pattern);\n\t\t} catch (e) {\n\t\t\t// If the pattern can't be parsed even without the 'u' flag,\n\t\t\t// just log the error to avoid rendering the entire Settings editor blank.\n\t\t\t// Ref https://github.com/microsoft/vscode/issues/195054\n\t\t\tconsole.error(\n\t\t\t\tnls.localize(\n\t\t\t\t\t\"regexParsingError\",\n\t\t\t\t\t\"Error parsing the following regex both with and without the u flag:\",\n\t\t\t\t),\n\t\t\t\tpattern,\n\t\t\t);\n\t\t\treturn /.*/;\n\t\t}\n\t}\n}\n\nfunction getStringValidators(prop: IConfigurationPropertySchema) {\n\tconst uriRegex =\n\t\t/^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\tlet patternRegex: RegExp | undefined;\n\tif (typeof prop.pattern === \"string\") {\n\t\tpatternRegex = toRegExp(prop.pattern);\n\t}\n\n\treturn [\n\t\t{\n\t\t\tenabled: prop.maxLength !== undefined,\n\t\t\tisValid: (value: { length: number }) =>\n\t\t\t\tvalue.length <= prop.maxLength!,\n\t\t\tmessage: nls.localize(\n\t\t\t\t\"validations.maxLength\",\n\t\t\t\t\"Value must be {0} or fewer characters long.\",\n\t\t\t\tprop.maxLength,\n\t\t\t),\n\t\t},\n\t\t{\n\t\t\tenabled: prop.minLength !== undefined,\n\t\t\tisValid: (value: { length: number }) =>\n\t\t\t\tvalue.length >= prop.minLength!,\n\t\t\tmessage: nls.localize(\n\t\t\t\t\"validations.minLength\",\n\t\t\t\t\"Value must be {0} or more characters long.\",\n\t\t\t\tprop.minLength,\n\t\t\t),\n\t\t},\n\t\t{\n\t\t\tenabled: patternRegex !== undefined,\n\t\t\tisValid: (value: string) => patternRegex!.test(value),\n\t\t\tmessage:\n\t\t\t\tprop.patternErrorMessage ||\n\t\t\t\tnls.localize(\n\t\t\t\t\t\"validations.regex\",\n\t\t\t\t\t\"Value must match regex `{0}`.\",\n\t\t\t\t\tprop.pattern,\n\t\t\t\t),\n\t\t},\n\t\t{\n\t\t\tenabled: prop.format === \"color-hex\",\n\t\t\tisValid: (value: string) => Color.Format.CSS.parseHex(value),\n\t\t\tmessage: nls.localize(\n\t\t\t\t\"validations.colorFormat\",\n\t\t\t\t\"Invalid color format. Use #RGB, #RGBA, #RRGGBB or #RRGGBBAA.\",\n\t\t\t),\n\t\t},\n\t\t{\n\t\t\tenabled: prop.format === \"uri\" || prop.format === \"uri-reference\",\n\t\t\tisValid: (value: string) => !!value.length,\n\t\t\tmessage: nls.localize(\"validations.uriEmpty\", \"URI expected.\"),\n\t\t},\n\t\t{\n\t\t\tenabled: prop.format === \"uri\" || prop.format === \"uri-reference\",\n\t\t\tisValid: (value: string) => uriRegex.test(value),\n\t\t\tmessage: nls.localize(\"validations.uriMissing\", \"URI is expected.\"),\n\t\t},\n\t\t{\n\t\t\tenabled: prop.format === \"uri\",\n\t\t\tisValid: (value: string) => {\n\t\t\t\tconst matches = value.match(uriRegex);\n\t\t\t\treturn !!(matches && matches[2]);\n\t\t\t},\n\t\t\tmessage: nls.localize(\n\t\t\t\t\"validations.uriSchemeMissing\",\n\t\t\t\t\"URI with a scheme is expected.\",\n\t\t\t),\n\t\t},\n\t\t{\n\t\t\tenabled: prop.enum !== undefined,\n\t\t\tisValid: (value: string) => {\n\t\t\t\treturn prop.enum!.includes(value);\n\t\t\t},\n\t\t\tmessage: nls.localize(\n\t\t\t\t\"validations.invalidStringEnumValue\",\n\t\t\t\t\"Value is not accepted. Valid values: {0}.\",\n\t\t\t\tprop.enum\n\t\t\t\t\t? prop.enum.map((key) => `\"${key}\"`).join(\", \")\n\t\t\t\t\t: \"[]\",\n\t\t\t),\n\t\t},\n\t].filter((validation) => validation.enabled);\n}\n\nfunction getNumericValidators(\n\tprop: IConfigurationPropertySchema,\n): Validator<number>[] {\n\tconst type: (string | undefined)[] = Array.isArray(prop.type)\n\t\t? prop.type\n\t\t: [prop.type];\n\n\tconst isNullable = canBeType(type, \"null\");\n\tconst isIntegral =\n\t\tcanBeType(type, \"integer\") &&\n\t\t(type.length === 1 || (type.length === 2 && isNullable));\n\tconst isNumeric =\n\t\tcanBeType(type, \"number\", \"integer\") &&\n\t\t(type.length === 1 || (type.length === 2 && isNullable));\n\tif (!isNumeric) {\n\t\treturn [];\n\t}\n\n\tlet exclusiveMax: number | undefined;\n\tlet exclusiveMin: number | undefined;\n\n\tif (typeof prop.exclusiveMaximum === \"boolean\") {\n\t\texclusiveMax = prop.exclusiveMaximum ? prop.maximum : undefined;\n\t} else {\n\t\texclusiveMax = prop.exclusiveMaximum;\n\t}\n\n\tif (typeof prop.exclusiveMinimum === \"boolean\") {\n\t\texclusiveMin = prop.exclusiveMinimum ? prop.minimum : undefined;\n\t} else {\n\t\texclusiveMin = prop.exclusiveMinimum;\n\t}\n\n\treturn [\n\t\t{\n\t\t\tenabled:\n\t\t\t\texclusiveMax !== undefined &&\n\t\t\t\t(prop.maximum === undefined || exclusiveMax <= prop.maximum),\n\t\t\tisValid: (value: number) => value < exclusiveMax!,\n\t\t\tmessage: nls.localize(\n\t\t\t\t\"validations.exclusiveMax\",\n\t\t\t\t\"Value must be strictly less than {0}.\",\n\t\t\t\texclusiveMax,\n\t\t\t),\n\t\t},\n\t\t{\n\t\t\tenabled:\n\t\t\t\texclusiveMin !== undefined &&\n\t\t\t\t(prop.minimum === undefined || exclusiveMin >= prop.minimum),\n\t\t\tisValid: (value: number) => value > exclusiveMin!,\n\t\t\tmessage: nls.localize(\n\t\t\t\t\"validations.exclusiveMin\",\n\t\t\t\t\"Value must be strictly greater than {0}.\",\n\t\t\t\texclusiveMin,\n\t\t\t),\n\t\t},\n\t\t{\n\t\t\tenabled:\n\t\t\t\tprop.maximum !== undefined &&\n\t\t\t\t(exclusiveMax === undefined || exclusiveMax > prop.maximum),\n\t\t\tisValid: (value: number) => value <= prop.maximum!,\n\t\t\tmessage: nls.localize(\n\t\t\t\t\"validations.max\",\n\t\t\t\t\"Value must be less than or equal to {0}.\",\n\t\t\t\tprop.maximum,\n\t\t\t),\n\t\t},\n\t\t{\n\t\t\tenabled:\n\t\t\t\tprop.minimum !== undefined &&\n\t\t\t\t(exclusiveMin === undefined || exclusiveMin < prop.minimum),\n\t\t\tisValid: (value: number) => value >= prop.minimum!,\n\t\t\tmessage: nls.localize(\n\t\t\t\t\"validations.min\",\n\t\t\t\t\"Value must be greater than or equal to {0}.\",\n\t\t\t\tprop.minimum,\n\t\t\t),\n\t\t},\n\t\t{\n\t\t\tenabled: prop.multipleOf !== undefined,\n\t\t\tisValid: (value: number) => value % prop.multipleOf! === 0,\n\t\t\tmessage: nls.localize(\n\t\t\t\t\"validations.multipleOf\",\n\t\t\t\t\"Value must be a multiple of {0}.\",\n\t\t\t\tprop.multipleOf,\n\t\t\t),\n\t\t},\n\t\t{\n\t\t\tenabled: isIntegral,\n\t\t\tisValid: (value: number) => value % 1 === 0,\n\t\t\tmessage: nls.localize(\n\t\t\t\t\"validations.expectedInteger\",\n\t\t\t\t\"Value must be an integer.\",\n\t\t\t),\n\t\t},\n\t].filter((validation) => validation.enabled);\n}\n\nfunction getArrayValidator(\n\tprop: IConfigurationPropertySchema,\n): ((value: any) => string | null) | null {\n\tif (prop.type === \"array\" && prop.items && !Array.isArray(prop.items)) {\n\t\tconst propItems = prop.items;\n\t\tif (propItems && !Array.isArray(propItems.type)) {\n\t\t\tconst withQuotes = (s: string) => `'` + s + `'`;\n\t\t\treturn (value) => {\n\t\t\t\tif (!value) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tlet message = \"\";\n\n\t\t\t\tif (!Array.isArray(value)) {\n\t\t\t\t\tmessage += nls.localize(\n\t\t\t\t\t\t\"validations.arrayIncorrectType\",\n\t\t\t\t\t\t\"Incorrect type. Expected an array.\",\n\t\t\t\t\t);\n\t\t\t\t\tmessage += \"\\n\";\n\t\t\t\t\treturn message;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value as unknown[];\n\t\t\t\tif (prop.uniqueItems) {\n\t\t\t\t\tif (new Set(arrayValue).size < arrayValue.length) {\n\t\t\t\t\t\tmessage += nls.localize(\n\t\t\t\t\t\t\t\"validations.stringArrayUniqueItems\",\n\t\t\t\t\t\t\t\"Array has duplicate items\",\n\t\t\t\t\t\t);\n\t\t\t\t\t\tmessage += \"\\n\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (prop.minItems && arrayValue.length < prop.minItems) {\n\t\t\t\t\tmessage += nls.localize(\n\t\t\t\t\t\t\"validations.stringArrayMinItem\",\n\t\t\t\t\t\t\"Array must have at least {0} items\",\n\t\t\t\t\t\tprop.minItems,\n\t\t\t\t\t);\n\t\t\t\t\tmessage += \"\\n\";\n\t\t\t\t}\n\n\t\t\t\tif (prop.maxItems && arrayValue.length > prop.maxItems) {\n\t\t\t\t\tmessage += nls.localize(\n\t\t\t\t\t\t\"validations.stringArrayMaxItem\",\n\t\t\t\t\t\t\"Array must have at most {0} items\",\n\t\t\t\t\t\tprop.maxItems,\n\t\t\t\t\t);\n\t\t\t\t\tmessage += \"\\n\";\n\t\t\t\t}\n\n\t\t\t\tif (propItems.type === \"string\") {\n\t\t\t\t\tif (!isStringArray(arrayValue)) {\n\t\t\t\t\t\tmessage += nls.localize(\n\t\t\t\t\t\t\t\"validations.stringArrayIncorrectType\",\n\t\t\t\t\t\t\t\"Incorrect type. Expected a string array.\",\n\t\t\t\t\t\t);\n\t\t\t\t\t\tmessage += \"\\n\";\n\t\t\t\t\t\treturn message;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (typeof propItems.pattern === \"string\") {\n\t\t\t\t\t\tconst patternRegex = toRegExp(propItems.pattern);\n\t\t\t\t\t\tarrayValue.forEach((v) => {\n\t\t\t\t\t\t\tif (!patternRegex.test(v)) {\n\t\t\t\t\t\t\t\tmessage +=\n\t\t\t\t\t\t\t\t\tpropItems.patternErrorMessage ||\n\t\t\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\t\t\"validations.stringArrayItemPattern\",\n\t\t\t\t\t\t\t\t\t\t\"Value {0} must match regex {1}.\",\n\t\t\t\t\t\t\t\t\t\twithQuotes(v),\n\t\t\t\t\t\t\t\t\t\twithQuotes(propItems.pattern!),\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tconst propItemsEnum = propItems.enum;\n\t\t\t\t\tif (propItemsEnum) {\n\t\t\t\t\t\tarrayValue.forEach((v) => {\n\t\t\t\t\t\t\tif (propItemsEnum.indexOf(v) === -1) {\n\t\t\t\t\t\t\t\tmessage += nls.localize(\n\t\t\t\t\t\t\t\t\t\"validations.stringArrayItemEnum\",\n\t\t\t\t\t\t\t\t\t\"Value {0} is not one of {1}\",\n\t\t\t\t\t\t\t\t\twithQuotes(v),\n\t\t\t\t\t\t\t\t\t\"[\" +\n\t\t\t\t\t\t\t\t\t\tpropItemsEnum\n\t\t\t\t\t\t\t\t\t\t\t.map(withQuotes)\n\t\t\t\t\t\t\t\t\t\t\t.join(\", \") +\n\t\t\t\t\t\t\t\t\t\t\"]\",\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tmessage += \"\\n\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else if (\n\t\t\t\t\tpropItems.type === \"integer\" ||\n\t\t\t\t\tpropItems.type === \"number\"\n\t\t\t\t) {\n\t\t\t\t\tarrayValue.forEach((v) => {\n\t\t\t\t\t\tconst errorMessage = getErrorsForSchema(propItems, v);\n\t\t\t\t\t\tif (errorMessage) {\n\t\t\t\t\t\t\tmessage += `${v}: ${errorMessage}\\n`;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn message;\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction getObjectValidator(\n\tprop: IConfigurationPropertySchema,\n): ((value: any) => string | null) | null {\n\tif (prop.type === \"object\") {\n\t\tconst { properties, patternProperties, additionalProperties } = prop;\n\t\treturn (value) => {\n\t\t\tif (!value) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst errors: string[] = [];\n\n\t\t\tif (isObject(value)) {\n\t\t\t\tObject.keys(value).forEach((key: string) => {\n\t\t\t\t\tconst data = value[key];\n\t\t\t\t\tif (properties && key in properties) {\n\t\t\t\t\t\tconst errorMessage = getErrorsForSchema(\n\t\t\t\t\t\t\tproperties[key],\n\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (errorMessage) {\n\t\t\t\t\t\t\terrors.push(`${key}: ${errorMessage}\\n`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (patternProperties) {\n\t\t\t\t\t\tfor (const pattern in patternProperties) {\n\t\t\t\t\t\t\tif (RegExp(pattern).test(key)) {\n\t\t\t\t\t\t\t\tconst errorMessage = getErrorsForSchema(\n\t\t\t\t\t\t\t\t\tpatternProperties[pattern],\n\t\t\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (errorMessage) {\n\t\t\t\t\t\t\t\t\terrors.push(`${key}: ${errorMessage}\\n`);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (additionalProperties === false) {\n\t\t\t\t\t\terrors.push(\n\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\"validations.objectPattern\",\n\t\t\t\t\t\t\t\t\"Property {0} is not allowed.\\n\",\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (typeof additionalProperties === \"object\") {\n\t\t\t\t\t\tconst errorMessage = getErrorsForSchema(\n\t\t\t\t\t\t\tadditionalProperties,\n\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (errorMessage) {\n\t\t\t\t\t\t\terrors.push(`${key}: ${errorMessage}\\n`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\terrors.push(\n\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\"validations.objectIncorrectType\",\n\t\t\t\t\t\t\"Incorrect type. Expected an object.\",\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (errors.length) {\n\t\t\t\treturn prop.errorMessage\n\t\t\t\t\t? [prop.errorMessage, ...errors].join(\" \")\n\t\t\t\t\t: errors.join(\" \");\n\t\t\t}\n\n\t\t\treturn \"\";\n\t\t};\n\t}\n\n\treturn null;\n}\n\nfunction getErrorsForSchema(\n\tpropertySchema: IConfigurationPropertySchema,\n\tdata: any,\n): string | null {\n\tconst validator = createValidator(propertySchema);\n\tconst errorMessage = validator(data);\n\treturn errorMessage;\n}\n"],
  "mappings": ";;AAKA,SAAS,aAAa;AAEtB;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,YAAY,SAAS;AASrB,SAAS,UACR,cACG,OACO;AACV,SAAO,MAAM,KAAK,CAAC,MAAM,UAAU,SAAS,CAAC,CAAC;AAC/C;AALS;AAOT,SAAS,cAAc,OAAyB;AAC/C,SAAO,UAAU,MAAM,kBAAkB,KAAK;AAC/C;AAFS;AAIF,SAAS,gBACf,MACgC;AAChC,QAAM,OAA+B,MAAM,QAAQ,KAAK,IAAI,IACzD,KAAK,OACL,CAAC,KAAK,IAAI;AACb,QAAM,aAAa,UAAU,MAAM,MAAM;AACzC,QAAM,aACJ,UAAU,MAAM,QAAQ,KAAK,UAAU,MAAM,SAAS,OACtD,KAAK,WAAW,KAAM,KAAK,WAAW,KAAK;AAE7C,QAAM,qBAAqB,qBAAqB,IAAI;AACpD,QAAM,oBAAoB,oBAAoB,IAAI;AAClD,QAAM,iBAAiB,kBAAkB,IAAI;AAC7C,QAAM,kBAAkB,mBAAmB,IAAI;AAE/C,SAAO,CAAC,UAAU;AACjB,QAAI,cAAc,cAAc,KAAK,GAAG;AACvC,aAAO;AAAA,IACR;AAEA,UAAM,SAAmB,CAAC;AAC1B,QAAI,gBAAgB;AACnB,YAAM,MAAM,eAAe,KAAK;AAChC,UAAI,KAAK;AACR,eAAO,KAAK,GAAG;AAAA,MAChB;AAAA,IACD;AAEA,QAAI,iBAAiB;AACpB,YAAM,MAAM,gBAAgB,KAAK;AACjC,UAAI,KAAK;AACR,eAAO,KAAK,GAAG;AAAA,MAChB;AAAA,IACD;AAEA,QAAI,KAAK,SAAS,aAAa,UAAU,QAAQ,UAAU,OAAO;AACjE,aAAO;AAAA,QACN,IAAI;AAAA,UACH;AAAA,UACA;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAEA,QAAI,WAAW;AACd,UACC,cAAc,KAAK,KACnB,OAAO,UAAU,aACjB,MAAM,QAAQ,KAAK,KACnB,MAAM,CAAC,KAAK,GACX;AACD,eAAO;AAAA,UACN,IAAI;AAAA,YACH;AAAA,YACA;AAAA,UACD;AAAA,QACD;AAAA,MACD,OAAO;AACN,eAAO;AAAA,UACN,GAAG,mBACD,OAAO,CAAC,cAAc,CAAC,UAAU,QAAQ,CAAC,KAAK,CAAC,EAChD,IAAI,CAAC,cAAc,UAAU,OAAO;AAAA,QACvC;AAAA,MACD;AAAA,IACD;AAEA,QAAI,KAAK,SAAS,UAAU;AAC3B,UAAI,KAAK,QAAQ,CAAC,cAAc,KAAK,IAAI,GAAG;AAC3C,eAAO;AAAA,UACN,IAAI;AAAA,YACH;AAAA,YACA;AAAA,UACD;AAAA,QACD;AAAA,MACD,WAAW,SAAS,KAAK,GAAG;AAC3B,eAAO;AAAA,UACN,GAAG,kBACD,OAAO,CAAC,cAAc,CAAC,UAAU,QAAQ,KAAK,CAAC,EAC/C,IAAI,CAAC,cAAc,UAAU,OAAO;AAAA,QACvC;AAAA,MACD,OAAO;AACN,eAAO;AAAA,UACN,IAAI;AAAA,YACH;AAAA,YACA;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAEA,QAAI,OAAO,QAAQ;AAClB,aAAO,KAAK,eACT,CAAC,KAAK,cAAc,GAAG,MAAM,EAAE,KAAK,GAAG,IACvC,OAAO,KAAK,GAAG;AAAA,IACnB;AAEA,WAAO;AAAA,EACR;AACD;AAnGgB;AAwGT,SAAS,oBACf,OACA,MACqB;AACrB,MAAI,OAAO,SAAS,aAAa;AAChC;AAAA,EACD;AAEA,QAAM,UAAU,MAAM,QAAQ,IAAI,IAAI,OAAO,CAAC,IAAI;AAClD,MAAI,CAAC,QAAQ,KAAK,CAAC,UAAU,qBAAqB,OAAO,KAAK,CAAC,GAAG;AACjE,WAAO,IAAI;AAAA,MACV;AAAA,MACA;AAAA,MACA,KAAK,UAAU,IAAI;AAAA,IACpB;AAAA,EACD;AAEA;AACD;AAlBgB;AAoBhB,SAAS,qBAAqB,OAAY,MAAuB;AAChE,QAAM,YAAY,OAAO;AACzB,MAAI,SAAS,WAAW;AACvB,WAAO,cAAc;AAAA,EACtB,WAAW,SAAS,UAAU;AAC7B,WAAO,SAAS,CAAC,MAAM,QAAQ,KAAK,KAAK,cAAc;AAAA,EACxD,WAAW,SAAS,QAAQ;AAC3B,WAAO,UAAU;AAAA,EAClB,WAAW,SAAS,SAAS;AAC5B,WAAO,MAAM,QAAQ,KAAK;AAAA,EAC3B,WAAW,SAAS,UAAU;AAC7B,WAAO,cAAc;AAAA,EACtB,WAAW,SAAS,YAAY,SAAS,WAAW;AACnD,WAAO,cAAc;AAAA,EACtB;AAEA,SAAO;AACR;AAjBS;AAmBT,SAAS,SAAS,SAAyB;AAC1C,MAAI;AAIH,WAAO,IAAI,OAAO,SAAS,GAAG;AAAA,EAC/B,SAAS,GAAG;AACX,QAAI;AACH,aAAO,IAAI,OAAO,OAAO;AAAA,IAC1B,SAASA,IAAG;AAIX,cAAQ;AAAA,QACP,IAAI;AAAA,UACH;AAAA,UACA;AAAA,QACD;AAAA,QACA;AAAA,MACD;AACA,aAAO;AAAA,IACR;AAAA,EACD;AACD;AAvBS;AAyBT,SAAS,oBAAoB,MAAoC;AAChE,QAAM,WACL;AACD,MAAI;AACJ,MAAI,OAAO,KAAK,YAAY,UAAU;AACrC,mBAAe,SAAS,KAAK,OAAO;AAAA,EACrC;AAEA,SAAO;AAAA,IACN;AAAA,MACC,SAAS,KAAK,cAAc;AAAA,MAC5B,SAAS,wBAAC,UACT,MAAM,UAAU,KAAK,WADb;AAAA,MAET,SAAS,IAAI;AAAA,QACZ;AAAA,QACA;AAAA,QACA,KAAK;AAAA,MACN;AAAA,IACD;AAAA,IACA;AAAA,MACC,SAAS,KAAK,cAAc;AAAA,MAC5B,SAAS,wBAAC,UACT,MAAM,UAAU,KAAK,WADb;AAAA,MAET,SAAS,IAAI;AAAA,QACZ;AAAA,QACA;AAAA,QACA,KAAK;AAAA,MACN;AAAA,IACD;AAAA,IACA;AAAA,MACC,SAAS,iBAAiB;AAAA,MAC1B,SAAS,wBAAC,UAAkB,aAAc,KAAK,KAAK,GAA3C;AAAA,MACT,SACC,KAAK,uBACL,IAAI;AAAA,QACH;AAAA,QACA;AAAA,QACA,KAAK;AAAA,MACN;AAAA,IACF;AAAA,IACA;AAAA,MACC,SAAS,KAAK,WAAW;AAAA,MACzB,SAAS,wBAAC,UAAkB,MAAM,OAAO,IAAI,SAAS,KAAK,GAAlD;AAAA,MACT,SAAS,IAAI;AAAA,QACZ;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,IACA;AAAA,MACC,SAAS,KAAK,WAAW,SAAS,KAAK,WAAW;AAAA,MAClD,SAAS,wBAAC,UAAkB,CAAC,CAAC,MAAM,QAA3B;AAAA,MACT,SAAS,IAAI,SAAS,wBAAwB,eAAe;AAAA,IAC9D;AAAA,IACA;AAAA,MACC,SAAS,KAAK,WAAW,SAAS,KAAK,WAAW;AAAA,MAClD,SAAS,wBAAC,UAAkB,SAAS,KAAK,KAAK,GAAtC;AAAA,MACT,SAAS,IAAI,SAAS,0BAA0B,kBAAkB;AAAA,IACnE;AAAA,IACA;AAAA,MACC,SAAS,KAAK,WAAW;AAAA,MACzB,SAAS,wBAAC,UAAkB;AAC3B,cAAM,UAAU,MAAM,MAAM,QAAQ;AACpC,eAAO,CAAC,EAAE,WAAW,QAAQ,CAAC;AAAA,MAC/B,GAHS;AAAA,MAIT,SAAS,IAAI;AAAA,QACZ;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,IACA;AAAA,MACC,SAAS,KAAK,SAAS;AAAA,MACvB,SAAS,wBAAC,UAAkB;AAC3B,eAAO,KAAK,KAAM,SAAS,KAAK;AAAA,MACjC,GAFS;AAAA,MAGT,SAAS,IAAI;AAAA,QACZ;AAAA,QACA;AAAA,QACA,KAAK,OACF,KAAK,KAAK,IAAI,CAAC,QAAQ,IAAI,GAAG,GAAG,EAAE,KAAK,IAAI,IAC5C;AAAA,MACJ;AAAA,IACD;AAAA,EACD,EAAE,OAAO,CAAC,eAAe,WAAW,OAAO;AAC5C;AAnFS;AAqFT,SAAS,qBACR,MACsB;AACtB,QAAM,OAA+B,MAAM,QAAQ,KAAK,IAAI,IACzD,KAAK,OACL,CAAC,KAAK,IAAI;AAEb,QAAM,aAAa,UAAU,MAAM,MAAM;AACzC,QAAM,aACL,UAAU,MAAM,SAAS,MACxB,KAAK,WAAW,KAAM,KAAK,WAAW,KAAK;AAC7C,QAAM,YACL,UAAU,MAAM,UAAU,SAAS,MAClC,KAAK,WAAW,KAAM,KAAK,WAAW,KAAK;AAC7C,MAAI,CAAC,WAAW;AACf,WAAO,CAAC;AAAA,EACT;AAEA,MAAI;AACJ,MAAI;AAEJ,MAAI,OAAO,KAAK,qBAAqB,WAAW;AAC/C,mBAAe,KAAK,mBAAmB,KAAK,UAAU;AAAA,EACvD,OAAO;AACN,mBAAe,KAAK;AAAA,EACrB;AAEA,MAAI,OAAO,KAAK,qBAAqB,WAAW;AAC/C,mBAAe,KAAK,mBAAmB,KAAK,UAAU;AAAA,EACvD,OAAO;AACN,mBAAe,KAAK;AAAA,EACrB;AAEA,SAAO;AAAA,IACN;AAAA,MACC,SACC,iBAAiB,WAChB,KAAK,YAAY,UAAa,gBAAgB,KAAK;AAAA,MACrD,SAAS,wBAAC,UAAkB,QAAQ,cAA3B;AAAA,MACT,SAAS,IAAI;AAAA,QACZ;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,IACA;AAAA,MACC,SACC,iBAAiB,WAChB,KAAK,YAAY,UAAa,gBAAgB,KAAK;AAAA,MACrD,SAAS,wBAAC,UAAkB,QAAQ,cAA3B;AAAA,MACT,SAAS,IAAI;AAAA,QACZ;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,IACA;AAAA,MACC,SACC,KAAK,YAAY,WAChB,iBAAiB,UAAa,eAAe,KAAK;AAAA,MACpD,SAAS,wBAAC,UAAkB,SAAS,KAAK,SAAjC;AAAA,MACT,SAAS,IAAI;AAAA,QACZ;AAAA,QACA;AAAA,QACA,KAAK;AAAA,MACN;AAAA,IACD;AAAA,IACA;AAAA,MACC,SACC,KAAK,YAAY,WAChB,iBAAiB,UAAa,eAAe,KAAK;AAAA,MACpD,SAAS,wBAAC,UAAkB,SAAS,KAAK,SAAjC;AAAA,MACT,SAAS,IAAI;AAAA,QACZ;AAAA,QACA;AAAA,QACA,KAAK;AAAA,MACN;AAAA,IACD;AAAA,IACA;AAAA,MACC,SAAS,KAAK,eAAe;AAAA,MAC7B,SAAS,wBAAC,UAAkB,QAAQ,KAAK,eAAgB,GAAhD;AAAA,MACT,SAAS,IAAI;AAAA,QACZ;AAAA,QACA;AAAA,QACA,KAAK;AAAA,MACN;AAAA,IACD;AAAA,IACA;AAAA,MACC,SAAS;AAAA,MACT,SAAS,wBAAC,UAAkB,QAAQ,MAAM,GAAjC;AAAA,MACT,SAAS,IAAI;AAAA,QACZ;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,EACD,EAAE,OAAO,CAAC,eAAe,WAAW,OAAO;AAC5C;AAhGS;AAkGT,SAAS,kBACR,MACyC;AACzC,MAAI,KAAK,SAAS,WAAW,KAAK,SAAS,CAAC,MAAM,QAAQ,KAAK,KAAK,GAAG;AACtE,UAAM,YAAY,KAAK;AACvB,QAAI,aAAa,CAAC,MAAM,QAAQ,UAAU,IAAI,GAAG;AAChD,YAAM,aAAa,wBAAC,MAAc,MAAM,IAAI,KAAzB;AACnB,aAAO,CAAC,UAAU;AACjB,YAAI,CAAC,OAAO;AACX,iBAAO;AAAA,QACR;AAEA,YAAI,UAAU;AAEd,YAAI,CAAC,MAAM,QAAQ,KAAK,GAAG;AAC1B,qBAAW,IAAI;AAAA,YACd;AAAA,YACA;AAAA,UACD;AACA,qBAAW;AACX,iBAAO;AAAA,QACR;AAEA,cAAM,aAAa;AACnB,YAAI,KAAK,aAAa;AACrB,cAAI,IAAI,IAAI,UAAU,EAAE,OAAO,WAAW,QAAQ;AACjD,uBAAW,IAAI;AAAA,cACd;AAAA,cACA;AAAA,YACD;AACA,uBAAW;AAAA,UACZ;AAAA,QACD;AAEA,YAAI,KAAK,YAAY,WAAW,SAAS,KAAK,UAAU;AACvD,qBAAW,IAAI;AAAA,YACd;AAAA,YACA;AAAA,YACA,KAAK;AAAA,UACN;AACA,qBAAW;AAAA,QACZ;AAEA,YAAI,KAAK,YAAY,WAAW,SAAS,KAAK,UAAU;AACvD,qBAAW,IAAI;AAAA,YACd;AAAA,YACA;AAAA,YACA,KAAK;AAAA,UACN;AACA,qBAAW;AAAA,QACZ;AAEA,YAAI,UAAU,SAAS,UAAU;AAChC,cAAI,CAAC,cAAc,UAAU,GAAG;AAC/B,uBAAW,IAAI;AAAA,cACd;AAAA,cACA;AAAA,YACD;AACA,uBAAW;AACX,mBAAO;AAAA,UACR;AAEA,cAAI,OAAO,UAAU,YAAY,UAAU;AAC1C,kBAAM,eAAe,SAAS,UAAU,OAAO;AAC/C,uBAAW,QAAQ,CAAC,MAAM;AACzB,kBAAI,CAAC,aAAa,KAAK,CAAC,GAAG;AAC1B,2BACC,UAAU,uBACV,IAAI;AAAA,kBACH;AAAA,kBACA;AAAA,kBACA,WAAW,CAAC;AAAA,kBACZ,WAAW,UAAU,OAAQ;AAAA,gBAC9B;AAAA,cACF;AAAA,YACD,CAAC;AAAA,UACF;AAEA,gBAAM,gBAAgB,UAAU;AAChC,cAAI,eAAe;AAClB,uBAAW,QAAQ,CAAC,MAAM;AACzB,kBAAI,cAAc,QAAQ,CAAC,MAAM,IAAI;AACpC,2BAAW,IAAI;AAAA,kBACd;AAAA,kBACA;AAAA,kBACA,WAAW,CAAC;AAAA,kBACZ,MACC,cACE,IAAI,UAAU,EACd,KAAK,IAAI,IACX;AAAA,gBACF;AACA,2BAAW;AAAA,cACZ;AAAA,YACD,CAAC;AAAA,UACF;AAAA,QACD,WACC,UAAU,SAAS,aACnB,UAAU,SAAS,UAClB;AACD,qBAAW,QAAQ,CAAC,MAAM;AACzB,kBAAM,eAAe,mBAAmB,WAAW,CAAC;AACpD,gBAAI,cAAc;AACjB,yBAAW,GAAG,CAAC,KAAK,YAAY;AAAA;AAAA,YACjC;AAAA,UACD,CAAC;AAAA,QACF;AAEA,eAAO;AAAA,MACR;AAAA,IACD;AAAA,EACD;AAEA,SAAO;AACR;AAlHS;AAoHT,SAAS,mBACR,MACyC;AACzC,MAAI,KAAK,SAAS,UAAU;AAC3B,UAAM,EAAE,YAAY,mBAAmB,qBAAqB,IAAI;AAChE,WAAO,CAAC,UAAU;AACjB,UAAI,CAAC,OAAO;AACX,eAAO;AAAA,MACR;AAEA,YAAM,SAAmB,CAAC;AAE1B,UAAI,SAAS,KAAK,GAAG;AACpB,eAAO,KAAK,KAAK,EAAE,QAAQ,CAAC,QAAgB;AAC3C,gBAAM,OAAO,MAAM,GAAG;AACtB,cAAI,cAAc,OAAO,YAAY;AACpC,kBAAM,eAAe;AAAA,cACpB,WAAW,GAAG;AAAA,cACd;AAAA,YACD;AACA,gBAAI,cAAc;AACjB,qBAAO,KAAK,GAAG,GAAG,KAAK,YAAY;AAAA,CAAI;AAAA,YACxC;AACA;AAAA,UACD;AAEA,cAAI,mBAAmB;AACtB,uBAAW,WAAW,mBAAmB;AACxC,kBAAI,OAAO,OAAO,EAAE,KAAK,GAAG,GAAG;AAC9B,sBAAM,eAAe;AAAA,kBACpB,kBAAkB,OAAO;AAAA,kBACzB;AAAA,gBACD;AACA,oBAAI,cAAc;AACjB,yBAAO,KAAK,GAAG,GAAG,KAAK,YAAY;AAAA,CAAI;AAAA,gBACxC;AACA;AAAA,cACD;AAAA,YACD;AAAA,UACD;AAEA,cAAI,yBAAyB,OAAO;AACnC,mBAAO;AAAA,cACN,IAAI;AAAA,gBACH;AAAA,gBACA;AAAA,gBACA;AAAA,cACD;AAAA,YACD;AAAA,UACD,WAAW,OAAO,yBAAyB,UAAU;AACpD,kBAAM,eAAe;AAAA,cACpB;AAAA,cACA;AAAA,YACD;AACA,gBAAI,cAAc;AACjB,qBAAO,KAAK,GAAG,GAAG,KAAK,YAAY;AAAA,CAAI;AAAA,YACxC;AAAA,UACD;AAAA,QACD,CAAC;AAAA,MACF,OAAO;AACN,eAAO;AAAA,UACN,IAAI;AAAA,YACH;AAAA,YACA;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAEA,UAAI,OAAO,QAAQ;AAClB,eAAO,KAAK,eACT,CAAC,KAAK,cAAc,GAAG,MAAM,EAAE,KAAK,GAAG,IACvC,OAAO,KAAK,GAAG;AAAA,MACnB;AAEA,aAAO;AAAA,IACR;AAAA,EACD;AAEA,SAAO;AACR;AA/ES;AAiFT,SAAS,mBACR,gBACA,MACgB;AAChB,QAAM,YAAY,gBAAgB,cAAc;AAChD,QAAM,eAAe,UAAU,IAAI;AACnC,SAAO;AACR;AAPS;",
  "names": ["e"]
}
