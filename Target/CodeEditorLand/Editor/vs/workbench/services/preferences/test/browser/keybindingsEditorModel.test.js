import i from"assert";import*as d from"../../../../../base/common/uuid.js";import{OS as x,OperatingSystem as h}from"../../../../../base/common/platform.js";import{KeyCode as s}from"../../../../../base/common/keyCodes.js";import{KeyCodeChord as R}from"../../../../../base/common/keybindings.js";import{CommandsRegistry as K}from"../../../../../platform/commands/common/commands.js";import{IKeybindingService as w}from"../../../../../platform/keybinding/common/keybinding.js";import{IExtensionService as A}from"../../../extensions/common/extensions.js";import{ContextKeyExpr as L}from"../../../../../platform/contextkey/common/contextkey.js";import{KeybindingsEditorModel as f}from"../../browser/keybindingsEditorModel.js";import{ResolvedKeybindingItem as _}from"../../../../../platform/keybinding/common/resolvedKeybindingItem.js";import{USLayoutResolvedKeybinding as z}from"../../../../../platform/keybinding/common/usLayoutResolvedKeybinding.js";import{TestInstantiationService as T}from"../../../../../platform/instantiation/test/common/instantiationServiceMock.js";import"../../common/preferences.js";import{Action2 as $,MenuRegistry as B,registerAction2 as N}from"../../../../../platform/actions/common/actions.js";import{ExtensionIdentifier as M}from"../../../../../platform/extensions/common/extensions.js";import{ensureNoDisposablesAreLeakedInTestSuite as O}from"../../../../../base/test/common/utils.js";suite("KeybindingsEditorModel",()=>{const m=O();let l,a,C=[];setup(()=>{C=[],l=m.add(new T),l.stub(w,{}),l.stub(A,{whenInstalledExtensionsRegistered:()=>Promise.resolve(!0),get extensions(){return C}}),a=m.add(l.createInstance(f,x)),m.add(K.registerCommand("command_without_keybinding",()=>{}))}),test("fetch returns default keybindings",async()=>{const e=c(r({command:"a"+d.generateUuid(),firstChord:{keyCode:s.Escape}}),r({command:"b"+d.generateUuid(),firstChord:{keyCode:s.Escape},secondChord:{keyCode:s.Escape}}));await a.resolve(new Map);const n=u(a.fetch(""));y(n,e)}),test("fetch returns distinct keybindings",async()=>{const e="a"+d.generateUuid(),n=c(r({command:e,firstChord:{keyCode:s.Escape}}),r({command:e,firstChord:{keyCode:s.Escape}}));await a.resolve(new Map);const t=u(a.fetch(""));y(t,[n[0]])}),test("fetch returns default keybindings at the top",async()=>{const e=c(r({command:"a"+d.generateUuid(),firstChord:{keyCode:s.Escape}}),r({command:"b"+d.generateUuid(),firstChord:{keyCode:s.Escape},secondChord:{keyCode:s.Escape}}));await a.resolve(new Map);const n=u(a.fetch("").slice(0,2),!0);y(n,e)}),test("fetch returns default keybindings sorted by command id",async()=>{const e=c(r({command:"b"+d.generateUuid(),firstChord:{keyCode:s.Escape}}),r({command:"c"+d.generateUuid(),firstChord:{keyCode:s.Escape},secondChord:{keyCode:s.Escape}}),r({command:"a"+d.generateUuid(),firstChord:{keyCode:s.Backspace}})),n=[e[2],e[0],e[1]];await a.resolve(new Map);const t=u(a.fetch(""));y(t,n)}),test("fetch returns user keybinding first if default and user has same id",async()=>{const e="b"+d.generateUuid(),n=c(r({command:e,firstChord:{keyCode:s.Escape}}),r({command:e,firstChord:{keyCode:s.Escape},secondChord:{keyCode:s.Escape},isDefault:!1})),t=[n[1],n[0]];await a.resolve(new Map);const o=u(a.fetch(""));y(o,t)}),test("fetch returns keybinding with titles first",async()=>{const e=c(r({command:"a"+d.generateUuid(),firstChord:{keyCode:s.Escape}}),r({command:"b"+d.generateUuid(),firstChord:{keyCode:s.Escape},secondChord:{keyCode:s.Escape}}),r({command:"c"+d.generateUuid(),firstChord:{keyCode:s.Escape},secondChord:{keyCode:s.Escape}}),r({command:"d"+d.generateUuid(),firstChord:{keyCode:s.Escape},secondChord:{keyCode:s.Escape}}));g(e[1].command,"B Title"),g(e[3].command,"A Title");const n=[e[3],e[1],e[0],e[2]];l.stub(w,"getKeybindings",()=>e),l.stub(w,"getDefaultKeybindings",()=>e),await a.resolve(new Map);const t=u(a.fetch(""));y(t,n)}),test("fetch returns keybinding with user first if title and id matches",async()=>{const e="b"+d.generateUuid(),n=c(r({command:"a"+d.generateUuid(),firstChord:{keyCode:s.Escape}}),r({command:e,firstChord:{keyCode:s.Escape},secondChord:{keyCode:s.Escape}}),r({command:"c"+d.generateUuid(),firstChord:{keyCode:s.Escape},secondChord:{keyCode:s.Escape}}),r({command:e,firstChord:{keyCode:s.Escape},isDefault:!1}));g(n[1].command,"Same Title");const t=[n[3],n[1],n[0],n[2]];await a.resolve(new Map);const o=u(a.fetch(""));y(o,t)}),test("fetch returns default keybindings sorted by precedence",async()=>{const e=c(r({command:"b"+d.generateUuid(),firstChord:{keyCode:s.Escape}}),r({command:"c"+d.generateUuid(),firstChord:{keyCode:s.Escape},secondChord:{keyCode:s.Escape}}),r({command:"a"+d.generateUuid(),firstChord:{keyCode:s.Backspace}}));await a.resolve(new Map);const n=u(a.fetch("",!0));y(n,e)}),test("convert keybinding without title to entry",async()=>{const e=r({command:"a"+d.generateUuid(),firstChord:{keyCode:s.Escape},when:"context1 && context2"});c(e),await a.resolve(new Map);const n=a.fetch("")[0];i.strictEqual(n.keybindingItem.command,e.command),i.strictEqual(n.keybindingItem.commandLabel,""),i.strictEqual(n.keybindingItem.commandDefaultLabel,null),i.strictEqual(n.keybindingItem.keybinding.getAriaLabel(),e.resolvedKeybinding.getAriaLabel()),i.strictEqual(n.keybindingItem.when,e.when.serialize())}),test("convert keybinding with title to entry",async()=>{const e=r({command:"a"+d.generateUuid(),firstChord:{keyCode:s.Escape},when:"context1 && context2"});c(e),g(e.command,"Some Title"),await a.resolve(new Map);const n=a.fetch("")[0];i.strictEqual(n.keybindingItem.command,e.command),i.strictEqual(n.keybindingItem.commandLabel,"Some Title"),i.strictEqual(n.keybindingItem.commandDefaultLabel,null),i.strictEqual(n.keybindingItem.keybinding.getAriaLabel(),e.resolvedKeybinding.getAriaLabel()),i.strictEqual(n.keybindingItem.when,e.when.serialize())}),test("convert without title and binding to entry",async()=>{m.add(K.registerCommand("command_without_keybinding",()=>{})),c(),await a.resolve(new Map);const e=a.fetch("").filter(n=>n.keybindingItem.command==="command_without_keybinding")[0];i.strictEqual(e.keybindingItem.command,"command_without_keybinding"),i.strictEqual(e.keybindingItem.commandLabel,""),i.strictEqual(e.keybindingItem.commandDefaultLabel,null),i.strictEqual(e.keybindingItem.keybinding,void 0),i.strictEqual(e.keybindingItem.when,"")}),test("convert with title and without binding to entry",async()=>{const e="a"+d.generateUuid();g(e,"some title"),c(),await a.resolve(new Map);const n=a.fetch("").filter(t=>t.keybindingItem.command===e)[0];i.strictEqual(n.keybindingItem.command,e),i.strictEqual(n.keybindingItem.commandLabel,"some title"),i.strictEqual(n.keybindingItem.commandDefaultLabel,null),i.strictEqual(n.keybindingItem.keybinding,void 0),i.strictEqual(n.keybindingItem.when,"")}),test("filter by command id",async()=>{const e="workbench.action.increaseViewSize";g(e,"some title"),c(),await a.resolve(new Map);const n=a.fetch("workbench action view size").filter(t=>t.keybindingItem.command===e)[0];i.ok(n)}),test("filter by command title",async()=>{const e="a"+d.generateUuid();g(e,"Increase view size"),c(),await a.resolve(new Map);const n=a.fetch("increase size").filter(t=>t.keybindingItem.command===e)[0];i.ok(n)}),test("filter by system source",async()=>{const e="a"+d.generateUuid(),n=r({command:e,firstChord:{keyCode:s.Escape},when:"context1 && context2"});c(n),await a.resolve(new Map);const t=a.fetch("system").filter(o=>o.keybindingItem.command===e)[0];i.ok(t)}),test("filter by user source",async()=>{const e="a"+d.generateUuid(),n=r({command:e,firstChord:{keyCode:s.Escape},when:"context1 && context2",isDefault:!1});c(n),await a.resolve(new Map);const t=a.fetch("user").filter(o=>o.keybindingItem.command===e)[0];i.ok(t)}),test('filter by default source with "@source: " prefix',async()=>{const e="a"+d.generateUuid(),n=r({command:e,firstChord:{keyCode:s.Escape},when:"context1 && context2",isDefault:!0});c(n),await a.resolve(new Map);const t=a.fetch("@source: default").filter(o=>o.keybindingItem.command===e)[0];i.ok(t)}),test('filter by user source with "@source: " prefix',async()=>{const e="a"+d.generateUuid(),n=r({command:e,firstChord:{keyCode:s.Escape},when:"context1 && context2",isDefault:!1});c(n),await a.resolve(new Map);const t=a.fetch("@source: user").filter(o=>o.keybindingItem.command===e)[0];i.ok(t)}),test("filter by command prefix with different commands",async()=>{const e="a"+d.generateUuid(),n=r({command:e,firstChord:{keyCode:s.Escape},when:"context1 && context2",isDefault:!0});c(n,r({command:d.generateUuid(),firstChord:{keyCode:s.Escape,modifiers:{altKey:!0}},when:"whenContext1 && whenContext2",isDefault:!0})),await a.resolve(new Map);const t=a.fetch(`@command:${e}`);i.strictEqual(t.length,1),i.deepStrictEqual(t[0].keybindingItem.command,e)}),test("filter by command prefix with same commands",async()=>{const e="a"+d.generateUuid(),n=r({command:e,firstChord:{keyCode:s.Escape},when:"context1 && context2",isDefault:!0});c(n,r({command:e,firstChord:{keyCode:s.Escape,modifiers:{altKey:!0}},when:"whenContext1 && whenContext2",isDefault:!0})),await a.resolve(new Map);const t=a.fetch(`@command:${e}`);i.strictEqual(t.length,2),i.deepStrictEqual(t[0].keybindingItem.command,e),i.deepStrictEqual(t[1].keybindingItem.command,e)}),test("filter by when context",async()=>{const e="a"+d.generateUuid(),n=r({command:e,firstChord:{keyCode:s.Escape},when:"whenContext1 && whenContext2",isDefault:!1});c(n),await a.resolve(new Map);const t=a.fetch("when context").filter(o=>o.keybindingItem.command===e)[0];i.ok(t)}),test("filter by cmd key",async()=>{a=m.add(l.createInstance(f,h.Macintosh));const e="a"+d.generateUuid(),n=r({command:e,firstChord:{keyCode:s.Escape,modifiers:{metaKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1});c(n),await a.resolve(new Map);const t=a.fetch("cmd").filter(o=>o.keybindingItem.command===e);i.strictEqual(1,t.length),i.deepStrictEqual(t[0].keybindingMatches.firstPart,{metaKey:!0}),i.deepStrictEqual(t[0].keybindingMatches.chordPart,{})}),test("filter by meta key",async()=>{a=m.add(l.createInstance(f,h.Macintosh));const e="a"+d.generateUuid(),n=r({command:e,firstChord:{keyCode:s.Escape,modifiers:{metaKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1});c(n,r({command:e,firstChord:{keyCode:s.Escape,modifiers:{shiftKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1})),await a.resolve(new Map);const t=a.fetch("meta").filter(o=>o.keybindingItem.command===e);i.strictEqual(1,t.length),i.deepStrictEqual(t[0].keybindingMatches.firstPart,{metaKey:!0}),i.deepStrictEqual(t[0].keybindingMatches.chordPart,{})}),test("filter by command key",async()=>{a=m.add(l.createInstance(f,h.Macintosh));const e="a"+d.generateUuid(),n=r({command:e,firstChord:{keyCode:s.Escape,modifiers:{metaKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1});c(n,r({command:e,firstChord:{keyCode:s.Escape,modifiers:{altKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1})),await a.resolve(new Map);const t=a.fetch("command").filter(o=>o.keybindingItem.command===e);i.strictEqual(1,t.length),i.deepStrictEqual(t[0].keybindingMatches.firstPart,{metaKey:!0}),i.deepStrictEqual(t[0].keybindingMatches.chordPart,{})}),test("filter by windows key",async()=>{a=m.add(l.createInstance(f,h.Windows));const e="a"+d.generateUuid(),n=r({command:e,firstChord:{keyCode:s.Escape,modifiers:{metaKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1});c(n,r({command:e,firstChord:{keyCode:s.Escape,modifiers:{ctrlKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1})),await a.resolve(new Map);const t=a.fetch("windows").filter(o=>o.keybindingItem.command===e);i.strictEqual(1,t.length),i.deepStrictEqual(t[0].keybindingMatches.firstPart,{metaKey:!0}),i.deepStrictEqual(t[0].keybindingMatches.chordPart,{})}),test("filter by alt key",async()=>{const e="a"+d.generateUuid(),n=r({command:e,firstChord:{keyCode:s.Escape,modifiers:{altKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1});c(n,r({command:e,firstChord:{keyCode:s.Escape,modifiers:{metaKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1})),await a.resolve(new Map);const t=a.fetch("alt").filter(o=>o.keybindingItem.command===e);i.strictEqual(1,t.length),i.deepStrictEqual(t[0].keybindingMatches.firstPart,{altKey:!0}),i.deepStrictEqual(t[0].keybindingMatches.chordPart,{})}),test("filter by option key",async()=>{const e="a"+d.generateUuid(),n=r({command:e,firstChord:{keyCode:s.Escape,modifiers:{altKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1});c(n,r({command:e,firstChord:{keyCode:s.Escape,modifiers:{metaKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1})),await a.resolve(new Map);const t=a.fetch("option").filter(o=>o.keybindingItem.command===e);i.strictEqual(1,t.length),i.deepStrictEqual(t[0].keybindingMatches.firstPart,{altKey:!0}),i.deepStrictEqual(t[0].keybindingMatches.chordPart,{})}),test("filter by ctrl key",async()=>{const e="a"+d.generateUuid(),n=r({command:e,firstChord:{keyCode:s.Escape,modifiers:{ctrlKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1});c(n,r({command:e,firstChord:{keyCode:s.Escape,modifiers:{shiftKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1})),await a.resolve(new Map);const t=a.fetch("ctrl").filter(o=>o.keybindingItem.command===e);i.strictEqual(1,t.length),i.deepStrictEqual(t[0].keybindingMatches.firstPart,{ctrlKey:!0}),i.deepStrictEqual(t[0].keybindingMatches.chordPart,{})}),test("filter by control key",async()=>{const e="a"+d.generateUuid(),n=r({command:e,firstChord:{keyCode:s.Escape,modifiers:{ctrlKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1});c(n,r({command:e,firstChord:{keyCode:s.Escape,modifiers:{metaKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1})),await a.resolve(new Map);const t=a.fetch("control").filter(o=>o.keybindingItem.command===e);i.strictEqual(1,t.length),i.deepStrictEqual(t[0].keybindingMatches.firstPart,{ctrlKey:!0}),i.deepStrictEqual(t[0].keybindingMatches.chordPart,{})}),test("filter by shift key",async()=>{const e="a"+d.generateUuid(),n=r({command:e,firstChord:{keyCode:s.Escape,modifiers:{shiftKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1});c(n,r({command:e,firstChord:{keyCode:s.Escape,modifiers:{metaKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1})),await a.resolve(new Map);const t=a.fetch("shift").filter(o=>o.keybindingItem.command===e);i.strictEqual(1,t.length),i.deepStrictEqual(t[0].keybindingMatches.firstPart,{shiftKey:!0}),i.deepStrictEqual(t[0].keybindingMatches.chordPart,{})}),test("filter by arrow",async()=>{const e="a"+d.generateUuid(),n=r({command:e,firstChord:{keyCode:s.RightArrow,modifiers:{shiftKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1});c(n,r({command:e,firstChord:{keyCode:s.Escape,modifiers:{metaKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1})),await a.resolve(new Map);const t=a.fetch("arrow").filter(o=>o.keybindingItem.command===e);i.strictEqual(1,t.length),i.deepStrictEqual(t[0].keybindingMatches.firstPart,{keyCode:!0}),i.deepStrictEqual(t[0].keybindingMatches.chordPart,{})}),test("filter by modifier and key",async()=>{const e="a"+d.generateUuid(),n=r({command:e,firstChord:{keyCode:s.RightArrow,modifiers:{altKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1});c(n,r({command:e,firstChord:{keyCode:s.RightArrow,modifiers:{metaKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1})),await a.resolve(new Map);const t=a.fetch("alt right").filter(o=>o.keybindingItem.command===e);i.strictEqual(1,t.length),i.deepStrictEqual(t[0].keybindingMatches.firstPart,{altKey:!0,keyCode:!0}),i.deepStrictEqual(t[0].keybindingMatches.chordPart,{})}),test("filter by key and modifier",async()=>{const e="a"+d.generateUuid(),n=r({command:e,firstChord:{keyCode:s.RightArrow,modifiers:{altKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1});c(n,r({command:e,firstChord:{keyCode:s.RightArrow,modifiers:{metaKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1})),await a.resolve(new Map);const t=a.fetch("right alt").filter(o=>o.keybindingItem.command===e);i.strictEqual(0,t.length)}),test("filter by modifiers and key",async()=>{a=m.add(l.createInstance(f,h.Macintosh));const e="a"+d.generateUuid(),n=r({command:e,firstChord:{keyCode:s.Escape,modifiers:{altKey:!0,metaKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1});c(n,r({command:e,firstChord:{keyCode:s.Escape,modifiers:{metaKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1})),await a.resolve(new Map);const t=a.fetch("alt cmd esc").filter(o=>o.keybindingItem.command===e);i.strictEqual(1,t.length),i.deepStrictEqual(t[0].keybindingMatches.firstPart,{altKey:!0,metaKey:!0,keyCode:!0}),i.deepStrictEqual(t[0].keybindingMatches.chordPart,{})}),test("filter by modifiers in random order and key",async()=>{a=m.add(l.createInstance(f,h.Macintosh));const e="a"+d.generateUuid(),n=r({command:e,firstChord:{keyCode:s.Escape,modifiers:{shiftKey:!0,metaKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1});c(n,r({command:e,firstChord:{keyCode:s.Escape,modifiers:{metaKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1})),await a.resolve(new Map);const t=a.fetch("cmd shift esc").filter(o=>o.keybindingItem.command===e);i.strictEqual(1,t.length),i.deepStrictEqual(t[0].keybindingMatches.firstPart,{metaKey:!0,shiftKey:!0,keyCode:!0}),i.deepStrictEqual(t[0].keybindingMatches.chordPart,{})}),test("filter by first part",async()=>{a=m.add(l.createInstance(f,h.Macintosh));const e="a"+d.generateUuid(),n=r({command:e,firstChord:{keyCode:s.Escape,modifiers:{shiftKey:!0,metaKey:!0}},secondChord:{keyCode:s.Delete},when:"whenContext1 && whenContext2",isDefault:!1});c(n,r({command:e,firstChord:{keyCode:s.Escape,modifiers:{metaKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1})),await a.resolve(new Map);const t=a.fetch("cmd shift esc").filter(o=>o.keybindingItem.command===e);i.strictEqual(1,t.length),i.deepStrictEqual(t[0].keybindingMatches.firstPart,{metaKey:!0,shiftKey:!0,keyCode:!0}),i.deepStrictEqual(t[0].keybindingMatches.chordPart,{})}),test("filter matches in chord part",async()=>{a=m.add(l.createInstance(f,h.Macintosh));const e="a"+d.generateUuid(),n=r({command:e,firstChord:{keyCode:s.Escape,modifiers:{shiftKey:!0,metaKey:!0}},secondChord:{keyCode:s.Delete},when:"whenContext1 && whenContext2",isDefault:!1});c(n,r({command:e,firstChord:{keyCode:s.Escape,modifiers:{metaKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1})),await a.resolve(new Map);const t=a.fetch("cmd del").filter(o=>o.keybindingItem.command===e);i.strictEqual(1,t.length),i.deepStrictEqual(t[0].keybindingMatches.firstPart,{metaKey:!0}),i.deepStrictEqual(t[0].keybindingMatches.chordPart,{keyCode:!0})}),test("filter matches first part and in chord part",async()=>{a=m.add(l.createInstance(f,h.Macintosh));const e="a"+d.generateUuid(),n=r({command:e,firstChord:{keyCode:s.Escape,modifiers:{shiftKey:!0,metaKey:!0}},secondChord:{keyCode:s.Delete},when:"whenContext1 && whenContext2",isDefault:!1});c(n,r({command:e,firstChord:{keyCode:s.Escape,modifiers:{shiftKey:!0,metaKey:!0}},secondChord:{keyCode:s.UpArrow},when:"whenContext1 && whenContext2",isDefault:!1})),await a.resolve(new Map);const t=a.fetch("cmd shift esc del").filter(o=>o.keybindingItem.command===e);i.strictEqual(1,t.length),i.deepStrictEqual(t[0].keybindingMatches.firstPart,{shiftKey:!0,metaKey:!0,keyCode:!0}),i.deepStrictEqual(t[0].keybindingMatches.chordPart,{keyCode:!0})}),test("filter exact matches",async()=>{const e="a"+d.generateUuid(),n=r({command:e,firstChord:{keyCode:s.KeyC,modifiers:{ctrlKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1});c(n,r({command:e,firstChord:{keyCode:s.Escape,modifiers:{shiftKey:!0,metaKey:!0}},secondChord:{keyCode:s.KeyC,modifiers:{ctrlKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1})),await a.resolve(new Map);const t=a.fetch('"ctrl c"').filter(o=>o.keybindingItem.command===e);i.strictEqual(1,t.length),i.deepStrictEqual(t[0].keybindingMatches.firstPart,{ctrlKey:!0,keyCode:!0}),i.deepStrictEqual(t[0].keybindingMatches.chordPart,{})}),test("filter exact matches with first and chord part",async()=>{const e="a"+d.generateUuid(),n=r({command:e,firstChord:{keyCode:s.Escape,modifiers:{shiftKey:!0,metaKey:!0}},secondChord:{keyCode:s.KeyC,modifiers:{ctrlKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1});c(n,r({command:e,firstChord:{keyCode:s.KeyC,modifiers:{ctrlKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1})),await a.resolve(new Map);const t=a.fetch('"shift meta escape ctrl c"').filter(o=>o.keybindingItem.command===e);i.strictEqual(1,t.length),i.deepStrictEqual(t[0].keybindingMatches.firstPart,{shiftKey:!0,metaKey:!0,keyCode:!0}),i.deepStrictEqual(t[0].keybindingMatches.chordPart,{ctrlKey:!0,keyCode:!0})}),test("filter exact matches with first and chord part no results",async()=>{a=m.add(l.createInstance(f,h.Macintosh));const e="a"+d.generateUuid(),n=r({command:e,firstChord:{keyCode:s.Escape,modifiers:{shiftKey:!0,metaKey:!0}},secondChord:{keyCode:s.Delete,modifiers:{metaKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1});c(n,r({command:e,firstChord:{keyCode:s.Escape,modifiers:{shiftKey:!0,metaKey:!0}},secondChord:{keyCode:s.UpArrow},when:"whenContext1 && whenContext2",isDefault:!1})),await a.resolve(new Map);const t=a.fetch('"cmd shift esc del"').filter(o=>o.keybindingItem.command===e);i.strictEqual(0,t.length)}),test("filter matches with + separator",async()=>{const e="a"+d.generateUuid(),n=r({command:e,firstChord:{keyCode:s.KeyC,modifiers:{ctrlKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1});c(n,r({command:e,firstChord:{keyCode:s.Escape,modifiers:{shiftKey:!0,metaKey:!0}},secondChord:{keyCode:s.KeyC,modifiers:{ctrlKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1})),await a.resolve(new Map);const t=a.fetch('"control+c"').filter(o=>o.keybindingItem.command===e);i.strictEqual(1,t.length),i.deepStrictEqual(t[0].keybindingMatches.firstPart,{ctrlKey:!0,keyCode:!0}),i.deepStrictEqual(t[0].keybindingMatches.chordPart,{})}),test("filter by keybinding prefix",async()=>{const e="a"+d.generateUuid(),n=r({command:e,firstChord:{keyCode:s.KeyC,modifiers:{ctrlKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1});c(n,r({command:e,firstChord:{keyCode:s.Escape,modifiers:{shiftKey:!0,metaKey:!0}},secondChord:{keyCode:s.KeyC,modifiers:{ctrlKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1})),await a.resolve(new Map);const t=a.fetch("@keybinding:control+c").filter(o=>o.keybindingItem.command===e);i.strictEqual(1,t.length),i.deepStrictEqual(t[0].keybindingMatches.firstPart,{ctrlKey:!0,keyCode:!0}),i.deepStrictEqual(t[0].keybindingMatches.chordPart,{})}),test("filter matches with + separator in first and chord parts",async()=>{const e="a"+d.generateUuid(),n=r({command:e,firstChord:{keyCode:s.Escape,modifiers:{shiftKey:!0,metaKey:!0}},secondChord:{keyCode:s.KeyC,modifiers:{ctrlKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1});c(n,r({command:e,firstChord:{keyCode:s.KeyC,modifiers:{ctrlKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1})),await a.resolve(new Map);const t=a.fetch('"shift+meta+escape ctrl+c"').filter(o=>o.keybindingItem.command===e);i.strictEqual(1,t.length),i.deepStrictEqual(t[0].keybindingMatches.firstPart,{shiftKey:!0,metaKey:!0,keyCode:!0}),i.deepStrictEqual(t[0].keybindingMatches.chordPart,{keyCode:!0,ctrlKey:!0})}),test("filter by keybinding prefix with chord",async()=>{const e="a"+d.generateUuid(),n=r({command:e,firstChord:{keyCode:s.Escape,modifiers:{shiftKey:!0,metaKey:!0}},secondChord:{keyCode:s.KeyC,modifiers:{ctrlKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1});c(n,r({command:e,firstChord:{keyCode:s.KeyC,modifiers:{ctrlKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1})),await a.resolve(new Map);const t=a.fetch('@keybinding:"shift+meta+escape ctrl+c"').filter(o=>o.keybindingItem.command===e);i.strictEqual(1,t.length),i.deepStrictEqual(t[0].keybindingMatches.firstPart,{shiftKey:!0,metaKey:!0,keyCode:!0}),i.deepStrictEqual(t[0].keybindingMatches.chordPart,{keyCode:!0,ctrlKey:!0})}),test("filter exact matches with space #32993",async()=>{const e="a"+d.generateUuid(),n=r({command:e,firstChord:{keyCode:s.Space,modifiers:{ctrlKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1});c(n,r({command:e,firstChord:{keyCode:s.Backspace,modifiers:{ctrlKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1})),await a.resolve(new Map);const t=a.fetch('"ctrl+space"').filter(o=>o.keybindingItem.command===e);i.strictEqual(1,t.length)}),test("filter exact matches with user settings label",async()=>{a=m.add(l.createInstance(f,h.Macintosh));const e="a"+d.generateUuid(),n=r({command:e,firstChord:{keyCode:s.DownArrow}});c(n,r({command:"down",firstChord:{keyCode:s.Escape}})),await a.resolve(new Map);const t=a.fetch('"down"').filter(o=>o.keybindingItem.command===e);i.strictEqual(1,t.length),i.deepStrictEqual(t[0].keybindingMatches.firstPart,{keyCode:!0})}),test("filter exact matches also return chords",async()=>{const e="a"+d.generateUuid(),n=r({command:e,firstChord:{keyCode:s.KeyK,modifiers:{ctrlKey:!0}},secondChord:{keyCode:s.KeyC,modifiers:{ctrlKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1});c(n,r({command:e,firstChord:{keyCode:s.Escape,modifiers:{shiftKey:!0,metaKey:!0}},secondChord:{keyCode:s.KeyC,modifiers:{ctrlKey:!0}},when:"whenContext1 && whenContext2",isDefault:!1})),await a.resolve(new Map);const t=a.fetch('"control+k"').filter(o=>o.keybindingItem.command===e);i.strictEqual(1,t.length),i.deepStrictEqual(t[0].keybindingMatches.firstPart,{ctrlKey:!0,keyCode:!0}),i.deepStrictEqual(t[0].keybindingMatches.chordPart,{})}),test("filter modifiers are not matched when not completely matched (prefix)",async()=>{a=m.add(l.createInstance(f,h.Macintosh));const e=`alt.${d.generateUuid()}`,n=`command.${e}`,t=r({command:n,firstChord:{keyCode:s.Escape},isDefault:!1});c(t,r({command:"some_command",firstChord:{keyCode:s.Escape,modifiers:{altKey:!0}},isDefault:!1})),await a.resolve(new Map);const o=a.fetch(e);i.strictEqual(1,o.length),i.strictEqual(n,o[0].keybindingItem.command),i.strictEqual(1,o[0].commandIdMatches?.length)}),test("filter modifiers are not matched when not completely matched (includes)",async()=>{a=m.add(l.createInstance(f,h.Macintosh));const e=`abcaltdef.${d.generateUuid()}`,n=`command.${e}`,t=r({command:n,firstChord:{keyCode:s.Escape},isDefault:!1});c(t,r({command:"some_command",firstChord:{keyCode:s.Escape,modifiers:{altKey:!0}},isDefault:!1})),await a.resolve(new Map);const o=a.fetch(e);i.strictEqual(1,o.length),i.strictEqual(n,o[0].keybindingItem.command),i.strictEqual(1,o[0].commandIdMatches?.length)}),test("filter modifiers are matched with complete term",async()=>{a=m.add(l.createInstance(f,h.Macintosh));const e=`command.${d.generateUuid()}`,n=r({command:e,firstChord:{keyCode:s.Escape,modifiers:{altKey:!0}},isDefault:!1});c(n,r({command:"some_command",firstChord:{keyCode:s.Escape},isDefault:!1})),await a.resolve(new Map);const t=a.fetch("alt").filter(o=>o.keybindingItem.command===e);i.strictEqual(1,t.length),i.deepStrictEqual(t[0].keybindingMatches.firstPart,{altKey:!0})}),test("filter by extension",async()=>{a=m.add(l.createInstance(f,h.Macintosh));const e=`command.${d.generateUuid()}`,n=`command.${d.generateUuid()}`;C.push({identifier:new M("foo"),displayName:"foo bar"},{identifier:new M("bar"),displayName:"bar foo"}),m.add(B.addCommand({id:n,title:"title",category:"category",source:{id:C[1].identifier.value,title:C[1].displayName}}));const t=r({command:e,firstChord:{keyCode:s.Escape,modifiers:{altKey:!0}},isDefault:!0,extensionId:C[0].identifier.value});c(t,r({command:n,isDefault:!0})),await a.resolve(new Map);let o=a.fetch("@ext:foo");i.strictEqual(1,o.length),i.deepStrictEqual(o[0].keybindingItem.command,e),o=a.fetch('@ext:"bar foo"'),i.strictEqual(1,o.length),i.deepStrictEqual(o[0].keybindingItem.command,n)});function c(...e){return l.stub(w,"getKeybindings",()=>e),l.stub(w,"getDefaultKeybindings",()=>e),e}function g(e,n){m.add(N(class extends ${constructor(){super({id:e,title:{value:n,original:n},f1:!0})}async run(){}}))}function y(e,n){i.strictEqual(e.length,n.length);for(let t=0;t<e.length;t++)q(e[t],n[t])}function q(e,n){i.strictEqual(e.command,n.command),e.when?(i.ok(!!n.when),i.strictEqual(e.when.serialize(),n.when.serialize())):i.ok(!n.when),i.strictEqual(e.isDefault,n.isDefault),e.resolvedKeybinding?(i.ok(!!n.resolvedKeybinding),i.strictEqual(e.resolvedKeybinding.getLabel(),n.resolvedKeybinding.getLabel())):i.ok(!n.resolvedKeybinding)}function r({command:e,when:n,isDefault:t,firstChord:o,secondChord:p,extensionId:I}){const b=function(E){const{ctrlKey:D,shiftKey:S,altKey:U,metaKey:P}=E.modifiers||{ctrlKey:!1,shiftKey:!1,altKey:!1,metaKey:!1};return new R(D,S,U,P,E.keyCode)},k=[];o&&(k.push(b(o)),p&&k.push(b(p)));const v=k.length>0?new z(k,x):void 0;return new _(v,e||"some command",null,n?L.deserialize(n):void 0,t===void 0?!0:t,I??null,!1)}function u(e,n=!1){return n||(e=e.filter(t=>!!t.keybindingItem.keybinding)),e.map(t=>t.keybindingItem.keybindingItem)}});
