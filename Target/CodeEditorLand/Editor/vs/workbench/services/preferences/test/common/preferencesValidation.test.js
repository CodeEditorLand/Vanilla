import c from"assert";import{ensureNoDisposablesAreLeakedInTestSuite as p}from"../../../../../base/test/common/utils.js";import"../../../../../platform/configuration/common/configurationRegistry.js";import{createValidator as l,getInvalidTypeError as o}from"../../common/preferencesValidation.js";suite("Preferences Validation",()=>{p();class t{constructor(s){this.settings=s;this.validator=l(s)}validator;accepts(s){c.strictEqual(this.validator(s),"",`Expected ${JSON.stringify(this.settings)} to accept \`${JSON.stringify(s)}\`. Got ${this.validator(s)}.`)}rejects(s){return c.notStrictEqual(this.validator(s),"",`Expected ${JSON.stringify(this.settings)} to reject \`${JSON.stringify(s)}\`.`),{withMessage:a=>{const n=this.validator(s);c.ok(n),c(n.indexOf(a)>-1,`Expected error of ${JSON.stringify(this.settings)} on \`${s}\` to contain ${a}. Got ${this.validator(s)}.`)}}}validatesNumeric(){this.accepts("3"),this.accepts("3."),this.accepts(".0"),this.accepts("3.0"),this.accepts(" 3.0"),this.accepts(" 3.0  "),this.rejects("3f"),this.accepts(3),this.rejects("test")}validatesNullableNumeric(){this.validatesNumeric(),this.accepts(0),this.accepts(""),this.accepts(null),this.accepts(void 0)}validatesNonNullableNumeric(){this.validatesNumeric(),this.accepts(0),this.rejects(""),this.rejects(null),this.rejects(void 0)}validatesString(){this.accepts("3"),this.accepts("3."),this.accepts(".0"),this.accepts("3.0"),this.accepts(" 3.0"),this.accepts(" 3.0  "),this.accepts(""),this.accepts("3f"),this.accepts("hello"),this.rejects(6)}}test("exclusive max and max work together properly",()=>{{const e=new t({maximum:5,type:"number"});e.validatesNonNullableNumeric(),e.rejects("5.1"),e.accepts("5.0")}{const e=new t({exclusiveMaximum:5,type:"number"});e.validatesNonNullableNumeric(),e.rejects("5.1"),e.rejects("5.0"),e.accepts("4.999")}{const e=new t({exclusiveMaximum:5,maximum:4,type:"number"});e.validatesNonNullableNumeric(),e.rejects("5.1"),e.rejects("5.0"),e.rejects("4.999"),e.accepts("4")}{const e=new t({exclusiveMaximum:5,maximum:6,type:"number"});e.validatesNonNullableNumeric(),e.rejects("5.1"),e.rejects("5.0"),e.accepts("4.999")}}),test("exclusive min and min work together properly",()=>{{const e=new t({minimum:-5,type:"number"});e.validatesNonNullableNumeric(),e.rejects("-5.1"),e.accepts("-5.0")}{const e=new t({exclusiveMinimum:-5,type:"number"});e.validatesNonNullableNumeric(),e.rejects("-5.1"),e.rejects("-5.0"),e.accepts("-4.999")}{const e=new t({exclusiveMinimum:-5,minimum:-4,type:"number"});e.validatesNonNullableNumeric(),e.rejects("-5.1"),e.rejects("-5.0"),e.rejects("-4.999"),e.accepts("-4")}{const e=new t({exclusiveMinimum:-5,minimum:-6,type:"number"});e.validatesNonNullableNumeric(),e.rejects("-5.1"),e.rejects("-5.0"),e.accepts("-4.999")}}),test("multiple of works for both integers and fractions",()=>{{const e=new t({multipleOf:2,type:"number"});e.accepts("2.0"),e.accepts("2"),e.accepts("-4"),e.accepts("0"),e.accepts("100"),e.rejects("100.1"),e.rejects(""),e.rejects("we")}{const e=new t({multipleOf:1,type:"number"});e.accepts("2.0"),e.rejects(".5")}{const e=new t({multipleOf:.5,type:"number"});e.accepts("0.5"),e.accepts("1.5"),e.rejects("1.51")}}),test("integer type correctly adds a validation",()=>{{const e=new t({multipleOf:1,type:"integer"});e.accepts("02"),e.accepts("2"),e.accepts("20"),e.rejects(".5"),e.rejects("2j"),e.rejects("")}}),test("null is allowed only when expected",()=>{{const e=new t({type:["integer","null"]});e.accepts("2"),e.rejects(".5"),e.accepts("2.0"),e.rejects("2j"),e.accepts("")}{const e=new t({type:["integer"]});e.accepts("2"),e.rejects(".5"),e.accepts("2.0"),e.rejects("2j"),e.rejects("")}{const e=new t({type:["number","null"]});e.accepts("2"),e.accepts(".5"),e.accepts("2.0"),e.rejects("2j"),e.accepts("")}{const e=new t({type:["number"]});e.accepts("2"),e.accepts(".5"),e.accepts("2.0"),e.rejects("2j"),e.rejects("")}}),test("string max min length work",()=>{{const e=new t({minLength:4,type:"string"});e.rejects("123"),e.accepts("1234"),e.accepts("12345")}{const e=new t({maxLength:6,type:"string"});e.accepts("12345"),e.accepts("123456"),e.rejects("1234567")}{const e=new t({minLength:4,maxLength:6,type:"string"});e.rejects("123"),e.accepts("1234"),e.accepts("12345"),e.accepts("123456"),e.rejects("1234567")}}),test("objects work",()=>{{const e=new t({type:"object",properties:{a:{type:"string",maxLength:2}},additionalProperties:!1});e.rejects({a:"string"}),e.accepts({a:"st"}),e.rejects({a:null}),e.rejects({a:7}),e.accepts({}),e.rejects("test"),e.rejects(7),e.rejects([1,2,3])}{const e=new t({type:"object",patternProperties:{"^a[a-z]$":{type:"string",minLength:2}},additionalProperties:!1});e.accepts({ab:"string"}),e.accepts({ab:"string",ac:"hmm"}),e.rejects({ab:"string",ac:"h"}),e.rejects({ab:"string",ac:99999}),e.rejects({abc:"string"}),e.rejects({a0:"string"}),e.rejects({ab:"string",bc:"hmm"}),e.rejects({be:"string"}),e.rejects({be:"a"}),e.accepts({})}{const e=new t({type:"object",patternProperties:{"^#":{type:"string",minLength:3}},additionalProperties:{type:"string",maxLength:3}});e.accepts({"#ab":"string"}),e.accepts({ab:"str"}),e.rejects({"#ab":"s"}),e.rejects({ab:99999}),e.rejects({"#ab":99999}),e.accepts({})}{const e=new t({type:"object",properties:{hello:{type:"string"}},additionalProperties:{type:"boolean"}});e.accepts({hello:"world"}),e.accepts({hello:"world",bye:!1}),e.rejects({hello:"world",bye:"false"}),e.rejects({hello:"world",bye:1}),e.rejects({hello:"world",bye:"world"}),e.accepts({hello:"test"}),e.accepts({})}}),test("numerical objects work",()=>{{const e=new t({type:"object",properties:{b:{type:"number"}}});e.accepts({b:2.5}),e.accepts({b:-2.5}),e.accepts({b:0}),e.accepts({b:"0.12"}),e.rejects({b:"abc"}),e.rejects({b:[]}),e.rejects({b:!1}),e.rejects({b:null}),e.rejects({b:void 0})}{const e=new t({type:"object",properties:{b:{type:"integer",minimum:2,maximum:5.5}}});e.accepts({b:2}),e.accepts({b:3}),e.accepts({b:"3.0"}),e.accepts({b:5}),e.rejects({b:1}),e.rejects({b:6}),e.rejects({b:5.5})}}),test("patterns work",()=>{{const e=new t({pattern:"^(hello)*$",type:"string"});e.accepts(""),e.rejects("hel"),e.accepts("hello"),e.rejects("hellohel"),e.accepts("hellohello")}{const e=new t({pattern:"^(hello)*$",type:"string",patternErrorMessage:"err: must be friendly"});e.accepts(""),e.rejects("hel").withMessage("err: must be friendly"),e.accepts("hello"),e.rejects("hellohel").withMessage("err: must be friendly"),e.accepts("hellohello")}{const e=new t({type:"string",pattern:"^[\\p{L}\\d_. -]*$",minLength:3});e.accepts("_autoload"),e.rejects("#hash"),e.rejects("")}}),test("custom error messages are shown",()=>{const e=new t({minLength:1,maxLength:0,type:"string",errorMessage:"always error!"});e.rejects("").withMessage("always error!"),e.rejects(" ").withMessage("always error!"),e.rejects("1").withMessage("always error!")});class r{constructor(s){this.settings=s;this.validator=l(s)}validator;accepts(s){c.strictEqual(this.validator(s),"",`Expected ${JSON.stringify(this.settings)} to accept \`${JSON.stringify(s)}\`. Got ${this.validator(s)}.`)}rejects(s){return c.notStrictEqual(this.validator(s),"",`Expected ${JSON.stringify(this.settings)} to reject \`${JSON.stringify(s)}\`.`),{withMessage:a=>{const n=this.validator(s);c.ok(n),c(n.indexOf(a)>-1,`Expected error of ${JSON.stringify(this.settings)} on \`${s}\` to contain ${a}. Got ${this.validator(s)}.`)}}}}test("simple array",()=>{{const e=new r({type:"array",items:{type:"string"}});e.accepts([]),e.accepts(["foo"]),e.accepts(["foo","bar"]),e.rejects(76),e.rejects([6,"3",7])}}),test("min-max items array",()=>{{const e=new r({type:"array",items:{type:"string"},minItems:1,maxItems:2});e.rejects([]).withMessage("Array must have at least 1 items"),e.accepts(["a"]),e.accepts(["a","a"]),e.rejects(["a","a","a"]).withMessage("Array must have at most 2 items")}}),test("array of enums",()=>{{const e=new r({type:"array",items:{type:"string",enum:["a","b"]}});e.accepts(["a"]),e.accepts(["a","b"]),e.rejects(["c"]).withMessage("Value 'c' is not one of"),e.rejects(["a","c"]).withMessage("Value 'c' is not one of"),e.rejects(["c","d"]).withMessage("Value 'c' is not one of"),e.rejects(["c","d"]).withMessage("Value 'd' is not one of")}}),test("array of numbers",()=>{{const e=new r({type:"array",items:{type:"number"}});e.accepts([]),e.accepts([2]),e.accepts([2,3]),e.accepts(["2","3"]),e.accepts([6.6,"3",7]),e.rejects(76),e.rejects(7.6),e.rejects([6,"a",7])}{const e=new r({type:"array",items:{type:"integer",minimum:-2,maximum:3},maxItems:4});e.accepts([]),e.accepts([-2,3]),e.accepts([2,3]),e.accepts(["2","3"]),e.accepts(["-2","0","3"]),e.accepts(["-2",0,"3"]),e.rejects(2),e.rejects(76),e.rejects([6,"3",7]),e.rejects([2,"a",3]),e.rejects([-2,4]),e.rejects([-1.2,2.1]),e.rejects([-3,3]),e.rejects([-3,4]),e.rejects([2,2,2,2,2])}}),test("min-max and enum",()=>{const e=new r({type:"array",items:{type:"string",enum:["a","b"]},minItems:1,maxItems:2});e.rejects(["a","b","c"]).withMessage("Array must have at most 2 items"),e.rejects(["a","b","c"]).withMessage("Value 'c' is not one of")}),test("pattern",()=>{const e=new r({type:"array",items:{type:"string",pattern:"^(hello)*$"}});e.accepts(["hello"]),e.rejects(["a"]).withMessage("Value 'a' must match regex")}),test("Unicode pattern",()=>{const e=new r({type:"array",items:{type:"string",pattern:"^[\\p{L}\\d_. -]*$"}});e.accepts(["hello","world"]),e.rejects(["hello","#world"]).withMessage("Value '#world' must match regex")}),test("pattern with error message",()=>{new r({type:"array",items:{type:"string",pattern:"^(hello)*$",patternErrorMessage:"err: must be friendly"}}).rejects(["a"]).withMessage("err: must be friendly")}),test("uniqueItems",()=>{new r({type:"array",items:{type:"string"},uniqueItems:!0}).rejects(["a","a"]).withMessage("Array has duplicate items")}),test("getInvalidTypeError",()=>{function e(s,a,n){const i=`value: ${s}, type: ${JSON.stringify(a)}, expected: ${n?"valid":"invalid"}`;n?c.ok(!o(s,a),i):c.ok(o(s,a),i)}e(1,"number",!0),e(1.5,"number",!0),e([1],"number",!1),e("1","number",!1),e({a:1},"number",!1),e(null,"number",!1),e("a","string",!0),e("1","string",!0),e([],"string",!1),e({},"string",!1),e([1],"array",!0),e([],"array",!0),e([{},[[]]],"array",!0),e({a:["a"]},"array",!1),e("hello","array",!1),e(!0,"boolean",!0),e("hello","boolean",!1),e(null,"boolean",!1),e([!0],"boolean",!1),e(null,"null",!0),e(!1,"null",!1),e([null],"null",!1),e("null","null",!1)}),test("uri checks work",()=>{const e=new t({type:"string",format:"uri"});e.rejects("example.com"),e.rejects("example.com/example"),e.rejects("example/example.html"),e.rejects("www.example.com"),e.rejects(""),e.rejects(" "),e.rejects("example"),e.accepts("https:"),e.accepts("https://"),e.accepts("https://example.com"),e.accepts("https://www.example.com")})});
