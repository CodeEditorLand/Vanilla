{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/preferences/test/common/preferencesValidation.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../base/test/common/utils.js';\nimport { IConfigurationPropertySchema } from '../../../../../platform/configuration/common/configurationRegistry.js';\nimport { createValidator, getInvalidTypeError } from '../../common/preferencesValidation.js';\n\n\nsuite('Preferences Validation', () => {\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tclass Tester {\n\t\tprivate validator: (value: any) => string | null;\n\n\t\tconstructor(private settings: IConfigurationPropertySchema) {\n\t\t\tthis.validator = createValidator(settings)!;\n\t\t}\n\n\t\tpublic accepts(input: any) {\n\t\t\tassert.strictEqual(this.validator(input), '', `Expected ${JSON.stringify(this.settings)} to accept \\`${JSON.stringify(input)}\\`. Got ${this.validator(input)}.`);\n\t\t}\n\n\t\tpublic rejects(input: any) {\n\t\t\tassert.notStrictEqual(this.validator(input), '', `Expected ${JSON.stringify(this.settings)} to reject \\`${JSON.stringify(input)}\\`.`);\n\t\t\treturn {\n\t\t\t\twithMessage:\n\t\t\t\t\t(message: string) => {\n\t\t\t\t\t\tconst actual = this.validator(input);\n\t\t\t\t\t\tassert.ok(actual);\n\t\t\t\t\t\tassert(actual.indexOf(message) > -1,\n\t\t\t\t\t\t\t`Expected error of ${JSON.stringify(this.settings)} on \\`${input}\\` to contain ${message}. Got ${this.validator(input)}.`);\n\t\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tpublic validatesNumeric() {\n\t\t\tthis.accepts('3');\n\t\t\tthis.accepts('3.');\n\t\t\tthis.accepts('.0');\n\t\t\tthis.accepts('3.0');\n\t\t\tthis.accepts(' 3.0');\n\t\t\tthis.accepts(' 3.0  ');\n\t\t\tthis.rejects('3f');\n\t\t\tthis.accepts(3);\n\t\t\tthis.rejects('test');\n\t\t}\n\n\t\tpublic validatesNullableNumeric() {\n\t\t\tthis.validatesNumeric();\n\t\t\tthis.accepts(0);\n\t\t\tthis.accepts('');\n\t\t\tthis.accepts(null);\n\t\t\tthis.accepts(undefined);\n\t\t}\n\n\t\tpublic validatesNonNullableNumeric() {\n\t\t\tthis.validatesNumeric();\n\t\t\tthis.accepts(0);\n\t\t\tthis.rejects('');\n\t\t\tthis.rejects(null);\n\t\t\tthis.rejects(undefined);\n\t\t}\n\n\t\tpublic validatesString() {\n\t\t\tthis.accepts('3');\n\t\t\tthis.accepts('3.');\n\t\t\tthis.accepts('.0');\n\t\t\tthis.accepts('3.0');\n\t\t\tthis.accepts(' 3.0');\n\t\t\tthis.accepts(' 3.0  ');\n\t\t\tthis.accepts('');\n\t\t\tthis.accepts('3f');\n\t\t\tthis.accepts('hello');\n\t\t\tthis.rejects(6);\n\t\t}\n\t}\n\n\n\ttest('exclusive max and max work together properly', () => {\n\t\t{\n\t\t\tconst justMax = new Tester({ maximum: 5, type: 'number' });\n\t\t\tjustMax.validatesNonNullableNumeric();\n\t\t\tjustMax.rejects('5.1');\n\t\t\tjustMax.accepts('5.0');\n\t\t}\n\t\t{\n\t\t\tconst justEMax = new Tester({ exclusiveMaximum: 5, type: 'number' });\n\t\t\tjustEMax.validatesNonNullableNumeric();\n\t\t\tjustEMax.rejects('5.1');\n\t\t\tjustEMax.rejects('5.0');\n\t\t\tjustEMax.accepts('4.999');\n\t\t}\n\t\t{\n\t\t\tconst bothNumeric = new Tester({ exclusiveMaximum: 5, maximum: 4, type: 'number' });\n\t\t\tbothNumeric.validatesNonNullableNumeric();\n\t\t\tbothNumeric.rejects('5.1');\n\t\t\tbothNumeric.rejects('5.0');\n\t\t\tbothNumeric.rejects('4.999');\n\t\t\tbothNumeric.accepts('4');\n\t\t}\n\t\t{\n\t\t\tconst bothNumeric = new Tester({ exclusiveMaximum: 5, maximum: 6, type: 'number' });\n\t\t\tbothNumeric.validatesNonNullableNumeric();\n\t\t\tbothNumeric.rejects('5.1');\n\t\t\tbothNumeric.rejects('5.0');\n\t\t\tbothNumeric.accepts('4.999');\n\t\t}\n\t});\n\n\ttest('exclusive min and min work together properly', () => {\n\t\t{\n\t\t\tconst justMin = new Tester({ minimum: -5, type: 'number' });\n\t\t\tjustMin.validatesNonNullableNumeric();\n\t\t\tjustMin.rejects('-5.1');\n\t\t\tjustMin.accepts('-5.0');\n\t\t}\n\t\t{\n\t\t\tconst justEMin = new Tester({ exclusiveMinimum: -5, type: 'number' });\n\t\t\tjustEMin.validatesNonNullableNumeric();\n\t\t\tjustEMin.rejects('-5.1');\n\t\t\tjustEMin.rejects('-5.0');\n\t\t\tjustEMin.accepts('-4.999');\n\t\t}\n\t\t{\n\t\t\tconst bothNumeric = new Tester({ exclusiveMinimum: -5, minimum: -4, type: 'number' });\n\t\t\tbothNumeric.validatesNonNullableNumeric();\n\t\t\tbothNumeric.rejects('-5.1');\n\t\t\tbothNumeric.rejects('-5.0');\n\t\t\tbothNumeric.rejects('-4.999');\n\t\t\tbothNumeric.accepts('-4');\n\t\t}\n\t\t{\n\t\t\tconst bothNumeric = new Tester({ exclusiveMinimum: -5, minimum: -6, type: 'number' });\n\t\t\tbothNumeric.validatesNonNullableNumeric();\n\t\t\tbothNumeric.rejects('-5.1');\n\t\t\tbothNumeric.rejects('-5.0');\n\t\t\tbothNumeric.accepts('-4.999');\n\t\t}\n\t});\n\n\ttest('multiple of works for both integers and fractions', () => {\n\t\t{\n\t\t\tconst onlyEvens = new Tester({ multipleOf: 2, type: 'number' });\n\t\t\tonlyEvens.accepts('2.0');\n\t\t\tonlyEvens.accepts('2');\n\t\t\tonlyEvens.accepts('-4');\n\t\t\tonlyEvens.accepts('0');\n\t\t\tonlyEvens.accepts('100');\n\t\t\tonlyEvens.rejects('100.1');\n\t\t\tonlyEvens.rejects('');\n\t\t\tonlyEvens.rejects('we');\n\t\t}\n\t\t{\n\t\t\tconst hackyIntegers = new Tester({ multipleOf: 1, type: 'number' });\n\t\t\thackyIntegers.accepts('2.0');\n\t\t\thackyIntegers.rejects('.5');\n\t\t}\n\t\t{\n\t\t\tconst halfIntegers = new Tester({ multipleOf: 0.5, type: 'number' });\n\t\t\thalfIntegers.accepts('0.5');\n\t\t\thalfIntegers.accepts('1.5');\n\t\t\thalfIntegers.rejects('1.51');\n\t\t}\n\t});\n\n\ttest('integer type correctly adds a validation', () => {\n\t\t{\n\t\t\tconst integers = new Tester({ multipleOf: 1, type: 'integer' });\n\t\t\tintegers.accepts('02');\n\t\t\tintegers.accepts('2');\n\t\t\tintegers.accepts('20');\n\t\t\tintegers.rejects('.5');\n\t\t\tintegers.rejects('2j');\n\t\t\tintegers.rejects('');\n\t\t}\n\t});\n\n\ttest('null is allowed only when expected', () => {\n\t\t{\n\t\t\tconst nullableIntegers = new Tester({ type: ['integer', 'null'] });\n\t\t\tnullableIntegers.accepts('2');\n\t\t\tnullableIntegers.rejects('.5');\n\t\t\tnullableIntegers.accepts('2.0');\n\t\t\tnullableIntegers.rejects('2j');\n\t\t\tnullableIntegers.accepts('');\n\t\t}\n\t\t{\n\t\t\tconst nonnullableIntegers = new Tester({ type: ['integer'] });\n\t\t\tnonnullableIntegers.accepts('2');\n\t\t\tnonnullableIntegers.rejects('.5');\n\t\t\tnonnullableIntegers.accepts('2.0');\n\t\t\tnonnullableIntegers.rejects('2j');\n\t\t\tnonnullableIntegers.rejects('');\n\t\t}\n\t\t{\n\t\t\tconst nullableNumbers = new Tester({ type: ['number', 'null'] });\n\t\t\tnullableNumbers.accepts('2');\n\t\t\tnullableNumbers.accepts('.5');\n\t\t\tnullableNumbers.accepts('2.0');\n\t\t\tnullableNumbers.rejects('2j');\n\t\t\tnullableNumbers.accepts('');\n\t\t}\n\t\t{\n\t\t\tconst nonnullableNumbers = new Tester({ type: ['number'] });\n\t\t\tnonnullableNumbers.accepts('2');\n\t\t\tnonnullableNumbers.accepts('.5');\n\t\t\tnonnullableNumbers.accepts('2.0');\n\t\t\tnonnullableNumbers.rejects('2j');\n\t\t\tnonnullableNumbers.rejects('');\n\t\t}\n\t});\n\n\ttest('string max min length work', () => {\n\t\t{\n\t\t\tconst min = new Tester({ minLength: 4, type: 'string' });\n\t\t\tmin.rejects('123');\n\t\t\tmin.accepts('1234');\n\t\t\tmin.accepts('12345');\n\t\t}\n\t\t{\n\t\t\tconst max = new Tester({ maxLength: 6, type: 'string' });\n\t\t\tmax.accepts('12345');\n\t\t\tmax.accepts('123456');\n\t\t\tmax.rejects('1234567');\n\t\t}\n\t\t{\n\t\t\tconst minMax = new Tester({ minLength: 4, maxLength: 6, type: 'string' });\n\t\t\tminMax.rejects('123');\n\t\t\tminMax.accepts('1234');\n\t\t\tminMax.accepts('12345');\n\t\t\tminMax.accepts('123456');\n\t\t\tminMax.rejects('1234567');\n\t\t}\n\t});\n\n\ttest('objects work', () => {\n\t\t{\n\t\t\tconst obj = new Tester({ type: 'object', properties: { 'a': { type: 'string', maxLength: 2 } }, additionalProperties: false });\n\t\t\tobj.rejects({ 'a': 'string' });\n\t\t\tobj.accepts({ 'a': 'st' });\n\t\t\tobj.rejects({ 'a': null });\n\t\t\tobj.rejects({ 'a': 7 });\n\t\t\tobj.accepts({});\n\t\t\tobj.rejects('test');\n\t\t\tobj.rejects(7);\n\t\t\tobj.rejects([1, 2, 3]);\n\t\t}\n\t\t{\n\t\t\tconst pattern = new Tester({ type: 'object', patternProperties: { '^a[a-z]$': { type: 'string', minLength: 2 } }, additionalProperties: false });\n\t\t\tpattern.accepts({ 'ab': 'string' });\n\t\t\tpattern.accepts({ 'ab': 'string', 'ac': 'hmm' });\n\t\t\tpattern.rejects({ 'ab': 'string', 'ac': 'h' });\n\t\t\tpattern.rejects({ 'ab': 'string', 'ac': 99999 });\n\t\t\tpattern.rejects({ 'abc': 'string' });\n\t\t\tpattern.rejects({ 'a0': 'string' });\n\t\t\tpattern.rejects({ 'ab': 'string', 'bc': 'hmm' });\n\t\t\tpattern.rejects({ 'be': 'string' });\n\t\t\tpattern.rejects({ 'be': 'a' });\n\t\t\tpattern.accepts({});\n\t\t}\n\t\t{\n\t\t\tconst pattern = new Tester({ type: 'object', patternProperties: { '^#': { type: 'string', minLength: 3 } }, additionalProperties: { type: 'string', maxLength: 3 } });\n\t\t\tpattern.accepts({ '#ab': 'string' });\n\t\t\tpattern.accepts({ 'ab': 'str' });\n\t\t\tpattern.rejects({ '#ab': 's' });\n\t\t\tpattern.rejects({ 'ab': 99999 });\n\t\t\tpattern.rejects({ '#ab': 99999 });\n\t\t\tpattern.accepts({});\n\t\t}\n\t\t{\n\t\t\tconst pattern = new Tester({ type: 'object', properties: { 'hello': { type: 'string' } }, additionalProperties: { type: 'boolean' } });\n\t\t\tpattern.accepts({ 'hello': 'world' });\n\t\t\tpattern.accepts({ 'hello': 'world', 'bye': false });\n\t\t\tpattern.rejects({ 'hello': 'world', 'bye': 'false' });\n\t\t\tpattern.rejects({ 'hello': 'world', 'bye': 1 });\n\t\t\tpattern.rejects({ 'hello': 'world', 'bye': 'world' });\n\t\t\tpattern.accepts({ 'hello': 'test' });\n\t\t\tpattern.accepts({});\n\t\t}\n\t});\n\n\ttest('numerical objects work', () => {\n\t\t{\n\t\t\tconst obj = new Tester({ type: 'object', properties: { 'b': { type: 'number' } } });\n\t\t\tobj.accepts({ 'b': 2.5 });\n\t\t\tobj.accepts({ 'b': -2.5 });\n\t\t\tobj.accepts({ 'b': 0 });\n\t\t\tobj.accepts({ 'b': '0.12' });\n\t\t\tobj.rejects({ 'b': 'abc' });\n\t\t\tobj.rejects({ 'b': [] });\n\t\t\tobj.rejects({ 'b': false });\n\t\t\tobj.rejects({ 'b': null });\n\t\t\tobj.rejects({ 'b': undefined });\n\t\t}\n\t\t{\n\t\t\tconst obj = new Tester({ type: 'object', properties: { 'b': { type: 'integer', minimum: 2, maximum: 5.5 } } });\n\t\t\tobj.accepts({ 'b': 2 });\n\t\t\tobj.accepts({ 'b': 3 });\n\t\t\tobj.accepts({ 'b': '3.0' });\n\t\t\tobj.accepts({ 'b': 5 });\n\t\t\tobj.rejects({ 'b': 1 });\n\t\t\tobj.rejects({ 'b': 6 });\n\t\t\tobj.rejects({ 'b': 5.5 });\n\t\t}\n\t});\n\n\ttest('patterns work', () => {\n\t\t{\n\t\t\tconst urls = new Tester({ pattern: '^(hello)*$', type: 'string' });\n\t\t\turls.accepts('');\n\t\t\turls.rejects('hel');\n\t\t\turls.accepts('hello');\n\t\t\turls.rejects('hellohel');\n\t\t\turls.accepts('hellohello');\n\t\t}\n\t\t{\n\t\t\tconst urls = new Tester({ pattern: '^(hello)*$', type: 'string', patternErrorMessage: 'err: must be friendly' });\n\t\t\turls.accepts('');\n\t\t\turls.rejects('hel').withMessage('err: must be friendly');\n\t\t\turls.accepts('hello');\n\t\t\turls.rejects('hellohel').withMessage('err: must be friendly');\n\t\t\turls.accepts('hellohello');\n\t\t}\n\t\t{\n\t\t\tconst unicodePattern = new Tester({ type: 'string', pattern: '^[\\\\p{L}\\\\d_. -]*$', minLength: 3 });\n\t\t\tunicodePattern.accepts('_autoload');\n\t\t\tunicodePattern.rejects('#hash');\n\t\t\tunicodePattern.rejects('');\n\t\t}\n\t});\n\n\ttest('custom error messages are shown', () => {\n\t\tconst withMessage = new Tester({ minLength: 1, maxLength: 0, type: 'string', errorMessage: 'always error!' });\n\t\twithMessage.rejects('').withMessage('always error!');\n\t\twithMessage.rejects(' ').withMessage('always error!');\n\t\twithMessage.rejects('1').withMessage('always error!');\n\t});\n\n\tclass ArrayTester {\n\t\tprivate validator: (value: any) => string | null;\n\n\t\tconstructor(private settings: IConfigurationPropertySchema) {\n\t\t\tthis.validator = createValidator(settings)!;\n\t\t}\n\n\t\tpublic accepts(input: unknown[]) {\n\t\t\tassert.strictEqual(this.validator(input), '', `Expected ${JSON.stringify(this.settings)} to accept \\`${JSON.stringify(input)}\\`. Got ${this.validator(input)}.`);\n\t\t}\n\n\t\tpublic rejects(input: any) {\n\t\t\tassert.notStrictEqual(this.validator(input), '', `Expected ${JSON.stringify(this.settings)} to reject \\`${JSON.stringify(input)}\\`.`);\n\t\t\treturn {\n\t\t\t\twithMessage:\n\t\t\t\t\t(message: string) => {\n\t\t\t\t\t\tconst actual = this.validator(input);\n\t\t\t\t\t\tassert.ok(actual);\n\t\t\t\t\t\tassert(actual.indexOf(message) > -1,\n\t\t\t\t\t\t\t`Expected error of ${JSON.stringify(this.settings)} on \\`${input}\\` to contain ${message}. Got ${this.validator(input)}.`);\n\t\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\ttest('simple array', () => {\n\t\t{\n\t\t\tconst arr = new ArrayTester({ type: 'array', items: { type: 'string' } });\n\t\t\tarr.accepts([]);\n\t\t\tarr.accepts(['foo']);\n\t\t\tarr.accepts(['foo', 'bar']);\n\t\t\tarr.rejects(76);\n\t\t\tarr.rejects([6, '3', 7]);\n\t\t}\n\t});\n\n\ttest('min-max items array', () => {\n\t\t{\n\t\t\tconst arr = new ArrayTester({ type: 'array', items: { type: 'string' }, minItems: 1, maxItems: 2 });\n\t\t\tarr.rejects([]).withMessage('Array must have at least 1 items');\n\t\t\tarr.accepts(['a']);\n\t\t\tarr.accepts(['a', 'a']);\n\t\t\tarr.rejects(['a', 'a', 'a']).withMessage('Array must have at most 2 items');\n\t\t}\n\t});\n\n\ttest('array of enums', () => {\n\t\t{\n\t\t\tconst arr = new ArrayTester({ type: 'array', items: { type: 'string', enum: ['a', 'b'] } });\n\t\t\tarr.accepts(['a']);\n\t\t\tarr.accepts(['a', 'b']);\n\n\t\t\tarr.rejects(['c']).withMessage(`Value 'c' is not one of`);\n\t\t\tarr.rejects(['a', 'c']).withMessage(`Value 'c' is not one of`);\n\n\t\t\tarr.rejects(['c', 'd']).withMessage(`Value 'c' is not one of`);\n\t\t\tarr.rejects(['c', 'd']).withMessage(`Value 'd' is not one of`);\n\t\t}\n\t});\n\n\ttest('array of numbers', () => {\n\t\t// We accept parseable strings since the view handles strings\n\t\t{\n\t\t\tconst arr = new ArrayTester({ type: 'array', items: { type: 'number' } });\n\t\t\tarr.accepts([]);\n\t\t\tarr.accepts([2]);\n\t\t\tarr.accepts([2, 3]);\n\t\t\tarr.accepts(['2', '3']);\n\t\t\tarr.accepts([6.6, '3', 7]);\n\t\t\tarr.rejects(76);\n\t\t\tarr.rejects(7.6);\n\t\t\tarr.rejects([6, 'a', 7]);\n\t\t}\n\t\t{\n\t\t\tconst arr = new ArrayTester({ type: 'array', items: { type: 'integer', minimum: -2, maximum: 3 }, maxItems: 4 });\n\t\t\tarr.accepts([]);\n\t\t\tarr.accepts([-2, 3]);\n\t\t\tarr.accepts([2, 3]);\n\t\t\tarr.accepts(['2', '3']);\n\t\t\tarr.accepts(['-2', '0', '3']);\n\t\t\tarr.accepts(['-2', 0.0, '3']);\n\t\t\tarr.rejects(2);\n\t\t\tarr.rejects(76);\n\t\t\tarr.rejects([6, '3', 7]);\n\t\t\tarr.rejects([2, 'a', 3]);\n\t\t\tarr.rejects([-2, 4]);\n\t\t\tarr.rejects([-1.2, 2.1]);\n\t\t\tarr.rejects([-3, 3]);\n\t\t\tarr.rejects([-3, 4]);\n\t\t\tarr.rejects([2, 2, 2, 2, 2]);\n\t\t}\n\t});\n\n\ttest('min-max and enum', () => {\n\t\tconst arr = new ArrayTester({ type: 'array', items: { type: 'string', enum: ['a', 'b'] }, minItems: 1, maxItems: 2 });\n\n\t\tarr.rejects(['a', 'b', 'c']).withMessage('Array must have at most 2 items');\n\t\tarr.rejects(['a', 'b', 'c']).withMessage(`Value 'c' is not one of`);\n\t});\n\n\ttest('pattern', () => {\n\t\tconst arr = new ArrayTester({ type: 'array', items: { type: 'string', pattern: '^(hello)*$' } });\n\n\t\tarr.accepts(['hello']);\n\t\tarr.rejects(['a']).withMessage(`Value 'a' must match regex`);\n\t});\n\n\ttest('Unicode pattern', () => {\n\t\tconst arr = new ArrayTester({ type: 'array', items: { type: 'string', pattern: '^[\\\\p{L}\\\\d_. -]*$' } });\n\n\t\tarr.accepts(['hello', 'world']);\n\t\tarr.rejects(['hello', '#world']).withMessage(`Value '#world' must match regex`);\n\t});\n\n\ttest('pattern with error message', () => {\n\t\tconst arr = new ArrayTester({ type: 'array', items: { type: 'string', pattern: '^(hello)*$', patternErrorMessage: 'err: must be friendly' } });\n\n\t\tarr.rejects(['a']).withMessage(`err: must be friendly`);\n\t});\n\n\ttest('uniqueItems', () => {\n\t\tconst arr = new ArrayTester({ type: 'array', items: { type: 'string' }, uniqueItems: true });\n\n\t\tarr.rejects(['a', 'a']).withMessage(`Array has duplicate items`);\n\t});\n\n\ttest('getInvalidTypeError', () => {\n\t\tfunction testInvalidTypeError(value: any, type: string | string[], shouldValidate: boolean) {\n\t\t\tconst message = `value: ${value}, type: ${JSON.stringify(type)}, expected: ${shouldValidate ? 'valid' : 'invalid'}`;\n\t\t\tif (shouldValidate) {\n\t\t\t\tassert.ok(!getInvalidTypeError(value, type), message);\n\t\t\t} else {\n\t\t\t\tassert.ok(getInvalidTypeError(value, type), message);\n\t\t\t}\n\t\t}\n\n\t\ttestInvalidTypeError(1, 'number', true);\n\t\ttestInvalidTypeError(1.5, 'number', true);\n\t\ttestInvalidTypeError([1], 'number', false);\n\t\ttestInvalidTypeError('1', 'number', false);\n\t\ttestInvalidTypeError({ a: 1 }, 'number', false);\n\t\ttestInvalidTypeError(null, 'number', false);\n\n\t\ttestInvalidTypeError('a', 'string', true);\n\t\ttestInvalidTypeError('1', 'string', true);\n\t\ttestInvalidTypeError([], 'string', false);\n\t\ttestInvalidTypeError({}, 'string', false);\n\n\t\ttestInvalidTypeError([1], 'array', true);\n\t\ttestInvalidTypeError([], 'array', true);\n\t\ttestInvalidTypeError([{}, [[]]], 'array', true);\n\t\ttestInvalidTypeError({ a: ['a'] }, 'array', false);\n\t\ttestInvalidTypeError('hello', 'array', false);\n\n\t\ttestInvalidTypeError(true, 'boolean', true);\n\t\ttestInvalidTypeError('hello', 'boolean', false);\n\t\ttestInvalidTypeError(null, 'boolean', false);\n\t\ttestInvalidTypeError([true], 'boolean', false);\n\n\t\ttestInvalidTypeError(null, 'null', true);\n\t\ttestInvalidTypeError(false, 'null', false);\n\t\ttestInvalidTypeError([null], 'null', false);\n\t\ttestInvalidTypeError('null', 'null', false);\n\t});\n\n\ttest('uri checks work', () => {\n\t\tconst tester = new Tester({ type: 'string', format: 'uri' });\n\t\ttester.rejects('example.com');\n\t\ttester.rejects('example.com/example');\n\t\ttester.rejects('example/example.html');\n\t\ttester.rejects('www.example.com');\n\t\ttester.rejects('');\n\t\ttester.rejects(' ');\n\t\ttester.rejects('example');\n\n\t\ttester.accepts('https:');\n\t\ttester.accepts('https://');\n\t\ttester.accepts('https://example.com');\n\t\ttester.accepts('https://www.example.com');\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
