var x=Object.defineProperty;var L=Object.getOwnPropertyDescriptor;var D=(f,S,e,t)=>{for(var i=t>1?void 0:t?L(S,e):S,r=f.length-1,o;r>=0;r--)(o=f[r])&&(i=(t?o(S,e,i):o(i))||i);return t&&i&&x(S,e,i),i},s=(f,S)=>(e,t)=>S(e,t,f);import{getErrorMessage as k}from"../../../../base/common/errors.js";import{Emitter as b,Event as A}from"../../../../base/common/event.js";import{parse as N}from"../../../../base/common/json.js";import{Disposable as W,MutableDisposable as F}from"../../../../base/common/lifecycle.js";import*as g from"../../../../base/common/network.js";import{URI as p}from"../../../../base/common/uri.js";import{CoreEditingCommands as C}from"../../../../editor/browser/coreCommands.js";import{getCodeEditor as K}from"../../../../editor/browser/editorBrowser.js";import{IModelService as G}from"../../../../editor/common/services/model.js";import{ITextModelService as j}from"../../../../editor/common/services/resolverService.js";import*as h from"../../../../nls.js";import{ConfigurationTarget as n,IConfigurationService as J}from"../../../../platform/configuration/common/configuration.js";import{Extensions as q,getDefaultValue as V,OVERRIDE_PROPERTY_REGEX as $}from"../../../../platform/configuration/common/configurationRegistry.js";import{FileOperationResult as z}from"../../../../platform/files/common/files.js";import{InstantiationType as B,registerSingleton as Y}from"../../../../platform/instantiation/common/extensions.js";import{IInstantiationService as H}from"../../../../platform/instantiation/common/instantiation.js";import{IKeybindingService as X}from"../../../../platform/keybinding/common/keybinding.js";import{ILabelService as Q}from"../../../../platform/label/common/label.js";import{INotificationService as Z}from"../../../../platform/notification/common/notification.js";import{Registry as ee}from"../../../../platform/registry/common/platform.js";import{IWorkspaceContextService as te,WorkbenchState as R}from"../../../../platform/workspace/common/workspace.js";import{DEFAULT_EDITOR_ASSOCIATION as ie}from"../../../common/editor.js";import{SideBySideEditorInput as re}from"../../../common/editor/sideBySideEditorInput.js";import{IJSONEditingService as ne}from"../../configuration/common/jsonEditing.js";import{GroupDirection as oe,IEditorGroupsService as se}from"../../editor/common/editorGroupsService.js";import{IEditorService as ae,SIDE_GROUP as U}from"../../editor/common/editorService.js";import{KeybindingsEditorInput as de}from"./keybindingsEditorInput.js";import{DEFAULT_SETTINGS_EDITOR_SETTING as ce,FOLDER_SETTINGS_PATH as w,IPreferencesService as le,SETTINGS_AUTHORITY as ue,USE_SPLIT_JSON_SETTING as ge,validateSettingsEditorOptions as P}from"../common/preferences.js";import{SettingsEditor2Input as Se}from"../common/preferencesEditorInput.js";import{defaultKeybindingsContents as fe,DefaultKeybindingsEditorModel as pe,DefaultRawSettingsEditorModel as he,DefaultSettings as y,DefaultSettingsEditorModel as ve,Settings2EditorModel as Ee,SettingsEditorModel as me,WorkspaceConfigurationEditorModel as _}from"../common/preferencesModels.js";import{IRemoteAgentService as Ie}from"../../remote/common/remoteAgentService.js";import{ITextEditorService as Re}from"../../textfile/common/textEditorService.js";import{ITextFileService as Pe}from"../../textfile/common/textfiles.js";import{isObject as ye}from"../../../../base/common/types.js";import{SuggestController as Oe}from"../../../../editor/contrib/suggest/browser/suggestController.js";import{IUserDataProfileService as De}from"../../userDataProfile/common/userDataProfile.js";import{IUserDataProfilesService as be}from"../../../../platform/userDataProfile/common/userDataProfile.js";import{ResourceSet as Ce}from"../../../../base/common/map.js";import{isEqual as I}from"../../../../base/common/resources.js";import{IURLService as Ue}from"../../../../platform/url/common/url.js";import{compareIgnoreCase as M}from"../../../../base/common/strings.js";import{IExtensionService as we}from"../../extensions/common/extensions.js";import{IProgressService as _e,ProgressLocation as Me}from"../../../../platform/progress/common/progress.js";const Te=`{
}`;let v=class extends W{constructor(e,t,i,r,o,d,l,a,E,c,u,m,xe,Le,ke,Ae,T,Ne,We){super();this.editorService=e;this.editorGroupService=t;this.textFileService=i;this.configurationService=r;this.notificationService=o;this.contextService=d;this.instantiationService=l;this.userDataProfileService=a;this.userDataProfilesService=E;this.textModelResolverService=c;this.jsonEditingService=xe;this.labelService=Le;this.remoteAgentService=ke;this.textEditorService=Ae;this.extensionService=Ne;this.progressService=We;this._register(u.onDidUpdateKeybindings(()=>{const O=m.getModel(this.defaultKeybindingsResource);O&&m.updateModel(O,fe(u))})),this._register(T.registerHandler(this))}_onDispose=this._register(new b);_onDidDefaultSettingsContentChanged=this._register(new b);onDidDefaultSettingsContentChanged=this._onDidDefaultSettingsContentChanged.event;_defaultUserSettingsContentModel;_defaultWorkspaceSettingsContentModel;_defaultFolderSettingsContentModel;_defaultRawSettingsEditorModel;_requestedDefaultSettings=new Ce;_settingsGroups=void 0;defaultKeybindingsResource=p.from({scheme:g.Schemas.vscode,authority:"defaultsettings",path:"/keybindings.json"});defaultSettingsRawResource=p.from({scheme:g.Schemas.vscode,authority:"defaultsettings",path:"/defaultSettings.json"});get userSettingsResource(){return this.userDataProfileService.currentProfile.settingsResource}get workspaceSettingsResource(){if(this.contextService.getWorkbenchState()===R.EMPTY)return null;const e=this.contextService.getWorkspace();return e.configuration||e.folders[0].toResource(w)}createSettingsEditor2Input(){return new Se(this)}getFolderSettingsResource(e){const t=this.contextService.getWorkspaceFolder(e);return t?t.toResource(w):null}hasDefaultSettingsContent(e){return this.isDefaultSettingsResource(e)||I(e,this.defaultSettingsRawResource)||I(e,this.defaultKeybindingsResource)}getDefaultSettingsContent(e){if(this.isDefaultSettingsResource(e)){const t=this.getConfigurationTargetFromDefaultSettingsResource(e),i=this.getDefaultSettings(t);return this._requestedDefaultSettings.has(e)||(this._register(i.onDidChange(()=>this._onDidDefaultSettingsContentChanged.fire(e))),this._requestedDefaultSettings.add(e)),i.getContentWithoutMostCommonlyUsed(!0)}if(I(e,this.defaultSettingsRawResource))return this._defaultRawSettingsEditorModel||(this._defaultRawSettingsEditorModel=this._register(this.instantiationService.createInstance(he,this.getDefaultSettings(n.USER_LOCAL))),this._register(this._defaultRawSettingsEditorModel.onDidContentChanged(()=>this._onDidDefaultSettingsContentChanged.fire(e)))),this._defaultRawSettingsEditorModel.content;if(I(e,this.defaultKeybindingsResource))return this.instantiationService.createInstance(pe,e).content}async createPreferencesEditorModel(e){if(this.isDefaultSettingsResource(e))return this.createDefaultSettingsEditorModel(e);if(this.userSettingsResource.toString()===e.toString()||this.userDataProfilesService.defaultProfile.settingsResource.toString()===e.toString())return this.createEditableSettingsEditorModel(n.USER_LOCAL,e);const t=await this.getEditableSettingsURI(n.WORKSPACE);if(t&&t.toString()===e.toString())return this.createEditableSettingsEditorModel(n.WORKSPACE,t);if(this.contextService.getWorkbenchState()===R.WORKSPACE){const o=await this.getEditableSettingsURI(n.WORKSPACE_FOLDER,e);if(o&&o.toString()===e.toString())return this.createEditableSettingsEditorModel(n.WORKSPACE_FOLDER,e)}const i=await this.remoteAgentService.getEnvironment(),r=i?i.settingsPath:null;return r&&r.toString()===e.toString()?this.createEditableSettingsEditorModel(n.USER_REMOTE,e):null}openRawDefaultSettings(){return this.editorService.openEditor({resource:this.defaultSettingsRawResource})}openRawUserSettings(){return this.editorService.openEditor({resource:this.userSettingsResource})}shouldOpenJsonByDefault(){return this.configurationService.getValue("workbench.settings.editor")==="json"}openSettings(e={}){return e={...e,target:n.USER_LOCAL},e.query&&(e.jsonEditor=!1),this.open(this.userSettingsResource,e)}openLanguageSpecificSettings(e,t={}){return this.shouldOpenJsonByDefault()?(t.query=void 0,t.revealSetting={key:`[${e}]`,edit:!0}):t.query=`@lang:${e}${t.query?` ${t.query}`:""}`,t.target=t.target??n.USER_LOCAL,this.open(this.userSettingsResource,t)}open(e,t){return t={...t,jsonEditor:t.jsonEditor??this.shouldOpenJsonByDefault()},t.jsonEditor?this.openSettingsJson(e,t):this.openSettings2(t)}async openSettings2(e){const t=this.createSettingsEditor2Input();return e={...e,focusSearch:!0},await this.editorService.openEditor(t,P(e),e.openToSide?U:void 0),this.editorGroupService.activeGroup.activeEditorPane}openApplicationSettings(e={}){return e={...e,target:n.USER_LOCAL},this.open(this.userDataProfilesService.defaultProfile.settingsResource,e)}openUserSettings(e={}){return e={...e,target:n.USER_LOCAL},this.open(this.userSettingsResource,e)}async openRemoteSettings(e={}){const t=await this.remoteAgentService.getEnvironment();t&&(e={...e,target:n.USER_REMOTE},this.open(t.settingsPath,e))}openWorkspaceSettings(e={}){return this.workspaceSettingsResource?(e={...e,target:n.WORKSPACE},this.open(this.workspaceSettingsResource,e)):(this.notificationService.info(h.localize("openFolderFirst","Open a folder or workspace first to create workspace or folder settings.")),Promise.reject(null))}async openFolderSettings(e={}){if(e={...e,target:n.WORKSPACE_FOLDER},!e.folderUri)throw new Error("Missing folder URI");const t=await this.getEditableSettingsURI(n.WORKSPACE_FOLDER,e.folderUri);if(!t)throw new Error(`Invalid folder URI - ${e.folderUri.toString()}`);return this.open(t,e)}async openGlobalKeybindingSettings(e,t){if(t={pinned:!0,revealIfOpened:!0,...t},e){const i="// "+h.localize("emptyKeybindingsHeader","Place your key bindings in this file to override the defaults")+`
[
]`,r=this.userDataProfileService.currentProfile.keybindingsResource,o=!!this.configurationService.getValue("workbench.settings.openDefaultKeybindings");if(await this.createIfNotExists(r,i),o){const d=this.editorGroupService.activeGroup,l=this.editorGroupService.addGroup(d.id,oe.RIGHT);await Promise.all([this.editorService.openEditor({resource:this.defaultKeybindingsResource,options:{pinned:!0,preserveFocus:!0,revealIfOpened:!0,override:ie.id},label:h.localize("defaultKeybindings","Default Keybindings"),description:""}),this.editorService.openEditor({resource:r,options:t},l.id)])}else await this.editorService.openEditor({resource:r,options:t})}else{const i=await this.editorService.openEditor(this.instantiationService.createInstance(de),{...t});t.query&&i.search(t.query)}}openDefaultKeybindingsFile(){return this.editorService.openEditor({resource:this.defaultKeybindingsResource,label:h.localize("defaultKeybindings","Default Keybindings")})}async openSettingsJson(e,t){const i=t?.openToSide?U:void 0,r=await this.doOpenSettingsJson(e,t,i);return r&&t?.revealSetting&&await this.revealSetting(t.revealSetting.key,!!t.revealSetting.edit,r,e),r}async doOpenSettingsJson(e,t,i){const r=!!this.configurationService.getValue(ge),o=!!this.configurationService.getValue(ce);if(r||o)return this.doOpenSplitJSON(e,t,i);const d=t?.target??n.USER,l=await this.getOrCreateEditableSettingsEditorInput(d,e);return t={...t,pinned:!0},await this.editorService.openEditor(l,P(t),i)}async doOpenSplitJSON(e,t={},i){const r=t.target??n.USER;await this.createSettingsIfNotExists(r,e);const o=this.createSplitJsonEditorInput(r,e);return t={...t,pinned:!0},this.editorService.openEditor(o,P(t),i)}createSplitJsonEditorInput(e,t){const i=this.textEditorService.createTextEditor({resource:t}),r=this.textEditorService.createTextEditor({resource:this.getDefaultSettingsResource(e)});return this.instantiationService.createInstance(re,i.getName(),void 0,r,i)}createSettings2EditorModel(){return this.instantiationService.createInstance(Ee,this.getDefaultSettings(n.USER_LOCAL))}getConfigurationTargetFromDefaultSettingsResource(e){return this.isDefaultWorkspaceSettingsResource(e)?n.WORKSPACE:this.isDefaultFolderSettingsResource(e)?n.WORKSPACE_FOLDER:n.USER_LOCAL}isDefaultSettingsResource(e){return this.isDefaultUserSettingsResource(e)||this.isDefaultWorkspaceSettingsResource(e)||this.isDefaultFolderSettingsResource(e)}isDefaultUserSettingsResource(e){return e.authority==="defaultsettings"&&e.scheme===g.Schemas.vscode&&!!e.path.match(/\/(\d+\/)?settings\.json$/)}isDefaultWorkspaceSettingsResource(e){return e.authority==="defaultsettings"&&e.scheme===g.Schemas.vscode&&!!e.path.match(/\/(\d+\/)?workspaceSettings\.json$/)}isDefaultFolderSettingsResource(e){return e.authority==="defaultsettings"&&e.scheme===g.Schemas.vscode&&!!e.path.match(/\/(\d+\/)?resourceSettings\.json$/)}getDefaultSettingsResource(e){switch(e){case n.WORKSPACE:return p.from({scheme:g.Schemas.vscode,authority:"defaultsettings",path:"/workspaceSettings.json"});case n.WORKSPACE_FOLDER:return p.from({scheme:g.Schemas.vscode,authority:"defaultsettings",path:"/resourceSettings.json"})}return p.from({scheme:g.Schemas.vscode,authority:"defaultsettings",path:"/settings.json"})}async getOrCreateEditableSettingsEditorInput(e,t){return await this.createSettingsIfNotExists(e,t),this.textEditorService.createTextEditor({resource:t})}async createEditableSettingsEditorModel(e,t){const i=this.contextService.getWorkspace();if(i.configuration&&i.configuration.toString()===t.toString()){const o=await this.textModelResolverService.createModelReference(t);return this.instantiationService.createInstance(_,o,e)}const r=await this.textModelResolverService.createModelReference(t);return this.instantiationService.createInstance(me,r,e)}async createDefaultSettingsEditorModel(e){const t=await this.textModelResolverService.createModelReference(e),i=this.getConfigurationTargetFromDefaultSettingsResource(e);return this.instantiationService.createInstance(ve,e,t,this.getDefaultSettings(i))}getDefaultSettings(e){return e===n.WORKSPACE?(this._defaultWorkspaceSettingsContentModel??=this._register(new y(this.getMostCommonlyUsedSettings(),e,this.configurationService)),this._defaultWorkspaceSettingsContentModel):e===n.WORKSPACE_FOLDER?(this._defaultFolderSettingsContentModel??=this._register(new y(this.getMostCommonlyUsedSettings(),e,this.configurationService)),this._defaultFolderSettingsContentModel):(this._defaultUserSettingsContentModel??=this._register(new y(this.getMostCommonlyUsedSettings(),e,this.configurationService)),this._defaultUserSettingsContentModel)}async getEditableSettingsURI(e,t){switch(e){case n.APPLICATION:return this.userDataProfilesService.defaultProfile.settingsResource;case n.USER:case n.USER_LOCAL:return this.userSettingsResource;case n.USER_REMOTE:{const i=await this.remoteAgentService.getEnvironment();return i?i.settingsPath:null}case n.WORKSPACE:return this.workspaceSettingsResource;case n.WORKSPACE_FOLDER:if(t)return this.getFolderSettingsResource(t)}return null}async createSettingsIfNotExists(e,t){if(this.contextService.getWorkbenchState()===R.WORKSPACE&&e===n.WORKSPACE){const i=this.contextService.getWorkspace().configuration;if(!i)return;const r=await this.textFileService.read(i);Object.keys(N(r.value)).indexOf("settings")===-1&&await this.jsonEditingService.write(t,[{path:["settings"],value:{}}],!0);return}await this.createIfNotExists(t,Te)}async createIfNotExists(e,t){try{await this.textFileService.read(e,{acceptTextOnly:!0})}catch(i){if(i.fileOperationResult===z.FILE_NOT_FOUND)try{await this.textFileService.write(e,t);return}catch(r){throw new Error(h.localize("fail.createSettings","Unable to create '{0}' ({1}).",this.labelService.getUriLabel(e,{relative:!0}),k(r)))}else throw i}}getMostCommonlyUsedSettings(){return["files.autoSave","editor.fontSize","editor.fontFamily","editor.tabSize","editor.renderWhitespace","editor.cursorStyle","editor.multiCursorModifier","editor.insertSpaces","editor.wordWrap","files.exclude","files.associations","workbench.editor.enablePreview"]}async revealSetting(e,t,i,r){const o=i?K(i.getControl()):null;if(!o)return;const d=await this.createPreferencesEditorModel(r);if(!d)return;const l=await this.getPositionToReveal(e,t,d,o);l&&(o.setPosition(l),o.revealPositionNearTop(l),o.focus(),t&&Oe.get(o)?.triggerSuggest())}async getPositionToReveal(e,t,i,r){const o=r.getModel();if(!o)return null;const d=ee.as(q.Configuration).getConfigurationProperties()[e],l=$.test(e);if(!d&&!l)return null;let a=null;const E=d?.type??"object";let c=i.getPreference(e);if(!c&&t){let u=E==="object"||E==="array"?this.configurationService.inspect(e).defaultValue:V(E);if(u=u===void 0&&l?{}:u,u!==void 0){const m=i instanceof _?["settings",e]:[e];await this.jsonEditingService.write(i.uri,[{path:m,value:u}],!1),c=i.getPreference(e)}}if(c)if(t)if(ye(c.value)||Array.isArray(c.value)){a={lineNumber:c.valueRange.startLineNumber,column:c.valueRange.startColumn+1},r.setPosition(a),await C.LineBreakInsert.runEditorCommand(null,r,null),a={lineNumber:a.lineNumber+1,column:o.getLineMaxColumn(a.lineNumber+1)};const u=o.getLineFirstNonWhitespaceColumn(a.lineNumber);u&&(r.setPosition({lineNumber:a.lineNumber,column:u}),await C.LineBreakInsert.runEditorCommand(null,r,null),a={lineNumber:a.lineNumber,column:o.getLineMaxColumn(a.lineNumber)})}else a={lineNumber:c.valueRange.startLineNumber,column:c.valueRange.endColumn};else a={lineNumber:c.keyRange.startLineNumber,column:c.keyRange.startColumn};return a}getSetting(e){if(!this._settingsGroups){const t=this.getDefaultSettings(n.USER),i=this._register(new F);i.value=t.onDidChange(()=>{this._settingsGroups=void 0,i.clear()}),this._settingsGroups=t.getSettingsGroups()}for(const t of this._settingsGroups)for(const i of t.sections)for(const r of i.settings)if(M(r.key,e)===0)return r}async handleURL(e){if(M(e.authority,ue)!==0)return!1;const t=e.path.split("/").filter(d=>!!d),i=t.length>0?t[0]:void 0;if(!i)return this.openSettings(),!0;let r=this.getSetting(i);!r&&this.extensionService.extensions.length===0&&(await this.progressService.withProgress({location:Me.Window},()=>A.toPromise(this.extensionService.onDidRegisterExtensions)),r=this.getSetting(i));const o={};return r&&(o.query=i),this.openSettings(o),!0}dispose(){this._onDispose.fire(),super.dispose()}};v=D([s(0,ae),s(1,se),s(2,Pe),s(3,J),s(4,Z),s(5,te),s(6,H),s(7,De),s(8,be),s(9,j),s(10,X),s(11,G),s(12,ne),s(13,Q),s(14,Ie),s(15,Re),s(16,Ue),s(17,we),s(18,_e)],v),Y(le,v,B.Delayed);export{v as PreferencesService};
