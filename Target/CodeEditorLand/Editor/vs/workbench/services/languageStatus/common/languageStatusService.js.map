{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/workbench/services/languageStatus/common/languageStatusService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { IDisposable } from '../../../../base/common/lifecycle.js';\nimport Severity from '../../../../base/common/severity.js';\nimport { compare } from '../../../../base/common/strings.js';\nimport { ITextModel } from '../../../../editor/common/model.js';\nimport { Command } from '../../../../editor/common/languages.js';\nimport { LanguageFeatureRegistry } from '../../../../editor/common/languageFeatureRegistry.js';\nimport { LanguageSelector } from '../../../../editor/common/languageSelector.js';\nimport { IAccessibilityInformation } from '../../../../platform/accessibility/common/accessibility.js';\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\n\nexport interface ILanguageStatus {\n\treadonly id: string;\n\treadonly name: string;\n\treadonly selector: LanguageSelector;\n\treadonly severity: Severity;\n\treadonly label: string | { value: string; shortValue: string };\n\treadonly detail: string;\n\treadonly busy: boolean;\n\treadonly source: string;\n\treadonly command: Command | undefined;\n\treadonly accessibilityInfo: IAccessibilityInformation | undefined;\n}\n\nexport interface ILanguageStatusProvider {\n\tprovideLanguageStatus(langId: string, token: CancellationToken): Promise<ILanguageStatus | undefined>;\n}\n\nexport const ILanguageStatusService = createDecorator<ILanguageStatusService>('ILanguageStatusService');\n\nexport interface ILanguageStatusService {\n\n\t_serviceBrand: undefined;\n\n\tonDidChange: Event<void>;\n\n\taddStatus(status: ILanguageStatus): IDisposable;\n\n\tgetLanguageStatus(model: ITextModel): ILanguageStatus[];\n}\n\n\nclass LanguageStatusServiceImpl implements ILanguageStatusService {\n\n\tdeclare _serviceBrand: undefined;\n\n\tprivate readonly _provider = new LanguageFeatureRegistry<ILanguageStatus>();\n\n\treadonly onDidChange: Event<any> = this._provider.onDidChange;\n\n\taddStatus(status: ILanguageStatus): IDisposable {\n\t\treturn this._provider.register(status.selector, status);\n\t}\n\n\tgetLanguageStatus(model: ITextModel): ILanguageStatus[] {\n\t\treturn this._provider.ordered(model).sort((a, b) => {\n\t\t\tlet res = b.severity - a.severity;\n\t\t\tif (res === 0) {\n\t\t\t\tres = compare(a.source, b.source);\n\t\t\t}\n\t\t\tif (res === 0) {\n\t\t\t\tres = compare(a.id, b.id);\n\t\t\t}\n\t\t\treturn res;\n\t\t});\n\t}\n}\n\nregisterSingleton(ILanguageStatusService, LanguageStatusServiceImpl, InstantiationType.Delayed);\n"],
  "mappings": ";;AAKA,SAAS,yBAAyB;AAClC,SAAS,aAAa;AACtB,SAAS,mBAAmB;AAC5B,OAAO,cAAc;AACrB,SAAS,eAAe;AACxB,SAAS,kBAAkB;AAC3B,SAAS,eAAe;AACxB,SAAS,+BAA+B;AACxC,SAAS,wBAAwB;AACjC,SAAS,iCAAiC;AAC1C,SAAS,mBAAmB,yBAAyB;AACrD,SAAS,uBAAuB;AAmBzB,MAAM,yBAAyB,gBAAwC,wBAAwB;AActG,MAAM,0BAA4D;AAAA,EAjDlE,OAiDkE;AAAA;AAAA;AAAA,EAIhD,YAAY,IAAI,wBAAyC;AAAA,EAEjE,cAA0B,KAAK,UAAU;AAAA,EAElD,UAAU,QAAsC;AAC/C,WAAO,KAAK,UAAU,SAAS,OAAO,UAAU,MAAM;AAAA,EACvD;AAAA,EAEA,kBAAkB,OAAsC;AACvD,WAAO,KAAK,UAAU,QAAQ,KAAK,EAAE,KAAK,CAAC,GAAG,MAAM;AACnD,UAAI,MAAM,EAAE,WAAW,EAAE;AACzB,UAAI,QAAQ,GAAG;AACd,cAAM,QAAQ,EAAE,QAAQ,EAAE,MAAM;AAAA,MACjC;AACA,UAAI,QAAQ,GAAG;AACd,cAAM,QAAQ,EAAE,IAAI,EAAE,EAAE;AAAA,MACzB;AACA,aAAO;AAAA,IACR,CAAC;AAAA,EACF;AACD;AAEA,kBAAkB,wBAAwB,2BAA2B,kBAAkB,OAAO;",
  "names": []
}
