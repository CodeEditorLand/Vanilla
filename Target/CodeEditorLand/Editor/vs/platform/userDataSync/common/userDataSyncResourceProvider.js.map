{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/userDataSync/common/userDataSyncResourceProvider.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IExtUri } from '../../../base/common/resources.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { localize } from '../../../nls.js';\nimport { IEnvironmentService } from '../../environment/common/environment.js';\nimport { IFileService } from '../../files/common/files.js';\nimport { getServiceMachineId } from '../../externalServices/common/serviceMachineId.js';\nimport { IStorageService } from '../../storage/common/storage.js';\nimport { IUriIdentityService } from '../../uriIdentity/common/uriIdentity.js';\nimport { ISyncData, ISyncResourceHandle, IUserData, IUserDataSyncLocalStoreService, IUserDataSyncLogService, IUserDataSyncStoreService, SyncResource, UserDataSyncError, UserDataSyncErrorCode, USER_DATA_SYNC_SCHEME, IUserDataSyncResourceProviderService, ISyncUserDataProfile, CONFIG_SYNC_KEYBINDINGS_PER_PLATFORM, IUserDataSyncResource } from './userDataSync.js';\nimport { IUserDataProfile, IUserDataProfilesService } from '../../userDataProfile/common/userDataProfile.js';\nimport { isSyncData } from './abstractSynchronizer.js';\nimport { parseSnippets } from './snippetsSync.js';\nimport { parseSettingsSyncContent } from './settingsSync.js';\nimport { getKeybindingsContentFromSyncContent } from './keybindingsSync.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { getTasksContentFromSyncContent } from './tasksSync.js';\nimport { LocalExtensionsProvider, parseExtensions, stringify as stringifyExtensions } from './extensionsSync.js';\nimport { LocalGlobalStateProvider, stringify as stringifyGlobalState } from './globalStateSync.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { parseUserDataProfilesManifest, stringifyLocalProfiles } from './userDataProfilesManifestSync.js';\nimport { toFormattedString } from '../../../base/common/jsonFormatter.js';\nimport { trim } from '../../../base/common/strings.js';\nimport { IMachinesData, IUserDataSyncMachine } from './userDataSyncMachines.js';\n\ninterface ISyncResourceUriInfo {\n\treadonly remote: boolean;\n\treadonly syncResource: SyncResource;\n\treadonly profile: string;\n\treadonly collection: string | undefined;\n\treadonly ref: string | undefined;\n\treadonly node: string | undefined;\n\treadonly location: URI | undefined;\n}\n\nexport class UserDataSyncResourceProviderService implements IUserDataSyncResourceProviderService {\n\n\t_serviceBrand: any;\n\n\tprivate static readonly NOT_EXISTING_RESOURCE = 'not-existing-resource';\n\tprivate static readonly REMOTE_BACKUP_AUTHORITY = 'remote-backup';\n\tprivate static readonly LOCAL_BACKUP_AUTHORITY = 'local-backup';\n\n\tprivate readonly extUri: IExtUri;\n\n\tconstructor(\n\t\t@IUserDataSyncStoreService private readonly userDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncLocalStoreService private readonly userDataSyncLocalStoreService: IUserDataSyncLocalStoreService,\n\t\t@IUserDataSyncLogService protected readonly logService: IUserDataSyncLogService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tthis.extUri = uriIdentityService.extUri;\n\t}\n\n\tasync getRemoteSyncedProfiles(): Promise<ISyncUserDataProfile[]> {\n\t\tconst userData = await this.userDataSyncStoreService.readResource(SyncResource.Profiles, null, undefined);\n\t\tif (userData.content) {\n\t\t\tconst syncData = this.parseSyncData(userData.content, SyncResource.Profiles);\n\t\t\treturn parseUserDataProfilesManifest(syncData);\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync getLocalSyncedProfiles(location?: URI): Promise<ISyncUserDataProfile[]> {\n\t\tconst refs = await this.userDataSyncLocalStoreService.getAllResourceRefs(SyncResource.Profiles, undefined, location);\n\t\tif (refs.length) {\n\t\t\tconst content = await this.userDataSyncLocalStoreService.resolveResourceContent(SyncResource.Profiles, refs[0].ref, undefined, location);\n\t\t\tif (content) {\n\t\t\t\tconst syncData = this.parseSyncData(content, SyncResource.Profiles);\n\t\t\t\treturn parseUserDataProfilesManifest(syncData);\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync getLocalSyncedMachines(location?: URI): Promise<IUserDataSyncMachine[]> {\n\t\tconst refs = await this.userDataSyncLocalStoreService.getAllResourceRefs('machines', undefined, location);\n\t\tif (refs.length) {\n\t\t\tconst content = await this.userDataSyncLocalStoreService.resolveResourceContent('machines', refs[0].ref, undefined, location);\n\t\t\tif (content) {\n\t\t\t\tconst machinesData: IMachinesData = JSON.parse(content);\n\t\t\t\treturn machinesData.machines.map(m => ({ ...m, isCurrent: false }));\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync getRemoteSyncResourceHandles(syncResource: SyncResource, profile?: ISyncUserDataProfile): Promise<ISyncResourceHandle[]> {\n\t\tconst handles = await this.userDataSyncStoreService.getAllResourceRefs(syncResource, profile?.collection);\n\t\treturn handles.map(({ created, ref }) => ({\n\t\t\tcreated,\n\t\t\turi: this.toUri({\n\t\t\t\tremote: true,\n\t\t\t\tsyncResource,\n\t\t\t\tprofile: profile?.id ?? this.userDataProfilesService.defaultProfile.id,\n\t\t\t\tlocation: undefined,\n\t\t\t\tcollection: profile?.collection,\n\t\t\t\tref,\n\t\t\t\tnode: undefined,\n\t\t\t})\n\t\t}));\n\t}\n\n\tasync getLocalSyncResourceHandles(syncResource: SyncResource, profile?: ISyncUserDataProfile, location?: URI): Promise<ISyncResourceHandle[]> {\n\t\tconst handles = await this.userDataSyncLocalStoreService.getAllResourceRefs(syncResource, profile?.collection, location);\n\t\treturn handles.map(({ created, ref }) => ({\n\t\t\tcreated,\n\t\t\turi: this.toUri({\n\t\t\t\tremote: false,\n\t\t\t\tsyncResource,\n\t\t\t\tprofile: profile?.id ?? this.userDataProfilesService.defaultProfile.id,\n\t\t\t\tcollection: profile?.collection,\n\t\t\t\tref,\n\t\t\t\tnode: undefined,\n\t\t\t\tlocation,\n\t\t\t})\n\t\t}));\n\t}\n\n\tresolveUserDataSyncResource({ uri }: ISyncResourceHandle): IUserDataSyncResource | undefined {\n\t\tconst resolved = this.resolveUri(uri);\n\t\tconst profile = resolved ? this.userDataProfilesService.profiles.find(p => p.id === resolved.profile) : undefined;\n\t\treturn resolved && profile ? { profile, syncResource: resolved?.syncResource } : undefined;\n\t}\n\n\tasync getAssociatedResources({ uri }: ISyncResourceHandle): Promise<{ resource: URI; comparableResource: URI }[]> {\n\t\tconst resolved = this.resolveUri(uri);\n\t\tif (!resolved) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst profile = this.userDataProfilesService.profiles.find(p => p.id === resolved.profile);\n\t\tswitch (resolved.syncResource) {\n\t\t\tcase SyncResource.Settings: return this.getSettingsAssociatedResources(uri, profile);\n\t\t\tcase SyncResource.Keybindings: return this.getKeybindingsAssociatedResources(uri, profile);\n\t\t\tcase SyncResource.Tasks: return this.getTasksAssociatedResources(uri, profile);\n\t\t\tcase SyncResource.Snippets: return this.getSnippetsAssociatedResources(uri, profile);\n\t\t\tcase SyncResource.GlobalState: return this.getGlobalStateAssociatedResources(uri, profile);\n\t\t\tcase SyncResource.Extensions: return this.getExtensionsAssociatedResources(uri, profile);\n\t\t\tcase SyncResource.Profiles: return this.getProfilesAssociatedResources(uri, profile);\n\t\t\tcase SyncResource.WorkspaceState: return [];\n\t\t}\n\t}\n\n\tasync getMachineId({ uri }: ISyncResourceHandle): Promise<string | undefined> {\n\t\tconst resolved = this.resolveUri(uri);\n\t\tif (!resolved) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (resolved.remote) {\n\t\t\tif (resolved.ref) {\n\t\t\t\tconst { content } = await this.getUserData(resolved.syncResource, resolved.ref, resolved.collection);\n\t\t\t\tif (content) {\n\t\t\t\t\tconst syncData = this.parseSyncData(content, resolved.syncResource);\n\t\t\t\t\treturn syncData?.machineId;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (resolved.location) {\n\t\t\tif (resolved.ref) {\n\t\t\t\tconst content = await this.userDataSyncLocalStoreService.resolveResourceContent(resolved.syncResource, resolved.ref, resolved.collection, resolved.location);\n\t\t\t\tif (content) {\n\t\t\t\t\tconst syncData = this.parseSyncData(content, resolved.syncResource);\n\t\t\t\t\treturn syncData?.machineId;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn getServiceMachineId(this.environmentService, this.fileService, this.storageService);\n\t}\n\n\tasync resolveContent(uri: URI): Promise<string | null> {\n\t\tconst resolved = this.resolveUri(uri);\n\t\tif (!resolved) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (resolved.node === UserDataSyncResourceProviderService.NOT_EXISTING_RESOURCE) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (resolved.ref) {\n\t\t\tconst content = await this.getContentFromStore(resolved.remote, resolved.syncResource, resolved.collection, resolved.ref, resolved.location);\n\t\t\tif (resolved.node && content) {\n\t\t\t\treturn this.resolveNodeContent(resolved.syncResource, content, resolved.node);\n\t\t\t}\n\t\t\treturn content;\n\t\t}\n\n\t\tif (!resolved.remote && !resolved.node) {\n\t\t\treturn this.resolveLatestContent(resolved.syncResource, resolved.profile);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate async getContentFromStore(remote: boolean, syncResource: SyncResource, collection: string | undefined, ref: string, location?: URI): Promise<string | null> {\n\t\tif (remote) {\n\t\t\tconst { content } = await this.getUserData(syncResource, ref, collection);\n\t\t\treturn content;\n\t\t}\n\t\treturn this.userDataSyncLocalStoreService.resolveResourceContent(syncResource, ref, collection, location);\n\t}\n\n\tprivate resolveNodeContent(syncResource: SyncResource, content: string, node: string): string | null {\n\t\tconst syncData = this.parseSyncData(content, syncResource);\n\t\tswitch (syncResource) {\n\t\t\tcase SyncResource.Settings: return this.resolveSettingsNodeContent(syncData, node);\n\t\t\tcase SyncResource.Keybindings: return this.resolveKeybindingsNodeContent(syncData, node);\n\t\t\tcase SyncResource.Tasks: return this.resolveTasksNodeContent(syncData, node);\n\t\t\tcase SyncResource.Snippets: return this.resolveSnippetsNodeContent(syncData, node);\n\t\t\tcase SyncResource.GlobalState: return this.resolveGlobalStateNodeContent(syncData, node);\n\t\t\tcase SyncResource.Extensions: return this.resolveExtensionsNodeContent(syncData, node);\n\t\t\tcase SyncResource.Profiles: return this.resolveProfileNodeContent(syncData, node);\n\t\t\tcase SyncResource.WorkspaceState: return null;\n\t\t}\n\t}\n\n\tprivate async resolveLatestContent(syncResource: SyncResource, profileId: string): Promise<string | null> {\n\t\tconst profile = this.userDataProfilesService.profiles.find(p => p.id === profileId);\n\t\tif (!profile) {\n\t\t\treturn null;\n\t\t}\n\t\tswitch (syncResource) {\n\t\t\tcase SyncResource.GlobalState: return this.resolveLatestGlobalStateContent(profile);\n\t\t\tcase SyncResource.Extensions: return this.resolveLatestExtensionsContent(profile);\n\t\t\tcase SyncResource.Profiles: return this.resolveLatestProfilesContent(profile);\n\t\t\tcase SyncResource.Settings: return null;\n\t\t\tcase SyncResource.Keybindings: return null;\n\t\t\tcase SyncResource.Tasks: return null;\n\t\t\tcase SyncResource.Snippets: return null;\n\t\t\tcase SyncResource.WorkspaceState: return null;\n\t\t}\n\t}\n\n\tprivate getSettingsAssociatedResources(uri: URI, profile: IUserDataProfile | undefined): { resource: URI; comparableResource: URI }[] {\n\t\tconst resource = this.extUri.joinPath(uri, 'settings.json');\n\t\tconst comparableResource = profile ? profile.settingsResource : this.extUri.joinPath(uri, UserDataSyncResourceProviderService.NOT_EXISTING_RESOURCE);\n\t\treturn [{ resource, comparableResource }];\n\t}\n\n\tprivate resolveSettingsNodeContent(syncData: ISyncData, node: string): string | null {\n\t\tswitch (node) {\n\t\t\tcase 'settings.json':\n\t\t\t\treturn parseSettingsSyncContent(syncData.content).settings;\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate getKeybindingsAssociatedResources(uri: URI, profile: IUserDataProfile | undefined): { resource: URI; comparableResource: URI }[] {\n\t\tconst resource = this.extUri.joinPath(uri, 'keybindings.json');\n\t\tconst comparableResource = profile ? profile.keybindingsResource : this.extUri.joinPath(uri, UserDataSyncResourceProviderService.NOT_EXISTING_RESOURCE);\n\t\treturn [{ resource, comparableResource }];\n\t}\n\n\tprivate resolveKeybindingsNodeContent(syncData: ISyncData, node: string): string | null {\n\t\tswitch (node) {\n\t\t\tcase 'keybindings.json':\n\t\t\t\treturn getKeybindingsContentFromSyncContent(syncData.content, !!this.configurationService.getValue(CONFIG_SYNC_KEYBINDINGS_PER_PLATFORM), this.logService);\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate getTasksAssociatedResources(uri: URI, profile: IUserDataProfile | undefined): { resource: URI; comparableResource: URI }[] {\n\t\tconst resource = this.extUri.joinPath(uri, 'tasks.json');\n\t\tconst comparableResource = profile ? profile.tasksResource : this.extUri.joinPath(uri, UserDataSyncResourceProviderService.NOT_EXISTING_RESOURCE);\n\t\treturn [{ resource, comparableResource }];\n\t}\n\n\tprivate resolveTasksNodeContent(syncData: ISyncData, node: string): string | null {\n\t\tswitch (node) {\n\t\t\tcase 'tasks.json':\n\t\t\t\treturn getTasksContentFromSyncContent(syncData.content, this.logService);\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate async getSnippetsAssociatedResources(uri: URI, profile: IUserDataProfile | undefined): Promise<{ resource: URI; comparableResource: URI }[]> {\n\t\tconst content = await this.resolveContent(uri);\n\t\tif (content) {\n\t\t\tconst syncData = this.parseSyncData(content, SyncResource.Snippets);\n\t\t\tif (syncData) {\n\t\t\t\tconst snippets = parseSnippets(syncData);\n\t\t\t\tconst result = [];\n\t\t\t\tfor (const snippet of Object.keys(snippets)) {\n\t\t\t\t\tconst resource = this.extUri.joinPath(uri, snippet);\n\t\t\t\t\tconst comparableResource = profile ? this.extUri.joinPath(profile.snippetsHome, snippet) : this.extUri.joinPath(uri, UserDataSyncResourceProviderService.NOT_EXISTING_RESOURCE);\n\t\t\t\t\tresult.push({ resource, comparableResource });\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate resolveSnippetsNodeContent(syncData: ISyncData, node: string): string | null {\n\t\treturn parseSnippets(syncData)[node] || null;\n\t}\n\n\tprivate getExtensionsAssociatedResources(uri: URI, profile: IUserDataProfile | undefined): { resource: URI; comparableResource: URI }[] {\n\t\tconst resource = this.extUri.joinPath(uri, 'extensions.json');\n\t\tconst comparableResource = profile\n\t\t\t? this.toUri({\n\t\t\t\tremote: false,\n\t\t\t\tsyncResource: SyncResource.Extensions,\n\t\t\t\tprofile: profile.id,\n\t\t\t\tlocation: undefined,\n\t\t\t\tcollection: undefined,\n\t\t\t\tref: undefined,\n\t\t\t\tnode: undefined,\n\t\t\t})\n\t\t\t: this.extUri.joinPath(uri, UserDataSyncResourceProviderService.NOT_EXISTING_RESOURCE);\n\t\treturn [{ resource, comparableResource }];\n\t}\n\n\tprivate resolveExtensionsNodeContent(syncData: ISyncData, node: string): string | null {\n\t\tswitch (node) {\n\t\t\tcase 'extensions.json':\n\t\t\t\treturn stringifyExtensions(parseExtensions(syncData), true);\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate async resolveLatestExtensionsContent(profile: IUserDataProfile): Promise<string | null> {\n\t\tconst { localExtensions } = await this.instantiationService.createInstance(LocalExtensionsProvider).getLocalExtensions(profile);\n\t\treturn stringifyExtensions(localExtensions, true);\n\t}\n\n\tprivate getGlobalStateAssociatedResources(uri: URI, profile: IUserDataProfile | undefined): { resource: URI; comparableResource: URI }[] {\n\t\tconst resource = this.extUri.joinPath(uri, 'globalState.json');\n\t\tconst comparableResource = profile\n\t\t\t? this.toUri({\n\t\t\t\tremote: false,\n\t\t\t\tsyncResource: SyncResource.GlobalState,\n\t\t\t\tprofile: profile.id,\n\t\t\t\tlocation: undefined,\n\t\t\t\tcollection: undefined,\n\t\t\t\tref: undefined,\n\t\t\t\tnode: undefined,\n\t\t\t})\n\t\t\t: this.extUri.joinPath(uri, UserDataSyncResourceProviderService.NOT_EXISTING_RESOURCE);\n\t\treturn [{ resource, comparableResource }];\n\t}\n\n\tprivate resolveGlobalStateNodeContent(syncData: ISyncData, node: string): string | null {\n\t\tswitch (node) {\n\t\t\tcase 'globalState.json':\n\t\t\t\treturn stringifyGlobalState(JSON.parse(syncData.content), true);\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate async resolveLatestGlobalStateContent(profile: IUserDataProfile): Promise<string | null> {\n\t\tconst localGlobalState = await this.instantiationService.createInstance(LocalGlobalStateProvider).getLocalGlobalState(profile);\n\t\treturn stringifyGlobalState(localGlobalState, true);\n\t}\n\n\tprivate getProfilesAssociatedResources(uri: URI, profile: IUserDataProfile | undefined): { resource: URI; comparableResource: URI }[] {\n\t\tconst resource = this.extUri.joinPath(uri, 'profiles.json');\n\t\tconst comparableResource = this.toUri({\n\t\t\tremote: false,\n\t\t\tsyncResource: SyncResource.Profiles,\n\t\t\tprofile: this.userDataProfilesService.defaultProfile.id,\n\t\t\tlocation: undefined,\n\t\t\tcollection: undefined,\n\t\t\tref: undefined,\n\t\t\tnode: undefined,\n\t\t});\n\t\treturn [{ resource, comparableResource }];\n\t}\n\n\tprivate resolveProfileNodeContent(syncData: ISyncData, node: string): string | null {\n\t\tswitch (node) {\n\t\t\tcase 'profiles.json':\n\t\t\t\treturn toFormattedString(JSON.parse(syncData.content), {});\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate async resolveLatestProfilesContent(profile: IUserDataProfile): Promise<string | null> {\n\t\treturn stringifyLocalProfiles(this.userDataProfilesService.profiles.filter(p => !p.isDefault && !p.isTransient), true);\n\t}\n\n\tprivate toUri(syncResourceUriInfo: ISyncResourceUriInfo): URI {\n\t\tconst authority = syncResourceUriInfo.remote ? UserDataSyncResourceProviderService.REMOTE_BACKUP_AUTHORITY : UserDataSyncResourceProviderService.LOCAL_BACKUP_AUTHORITY;\n\t\tconst paths = [];\n\t\tif (syncResourceUriInfo.location) {\n\t\t\tpaths.push(`scheme:${syncResourceUriInfo.location.scheme}`);\n\t\t\tpaths.push(`authority:${syncResourceUriInfo.location.authority}`);\n\t\t\tpaths.push(trim(syncResourceUriInfo.location.path, '/'));\n\t\t}\n\t\tpaths.push(`syncResource:${syncResourceUriInfo.syncResource}`);\n\t\tpaths.push(`profile:${syncResourceUriInfo.profile}`);\n\t\tif (syncResourceUriInfo.collection) {\n\t\t\tpaths.push(`collection:${syncResourceUriInfo.collection}`);\n\t\t}\n\t\tif (syncResourceUriInfo.ref) {\n\t\t\tpaths.push(`ref:${syncResourceUriInfo.ref}`);\n\t\t}\n\t\tif (syncResourceUriInfo.node) {\n\t\t\tpaths.push(syncResourceUriInfo.node);\n\t\t}\n\t\treturn this.extUri.joinPath(URI.from({ scheme: USER_DATA_SYNC_SCHEME, authority, path: `/`, query: syncResourceUriInfo.location?.query, fragment: syncResourceUriInfo.location?.fragment }), ...paths);\n\t}\n\n\tprivate resolveUri(uri: URI): ISyncResourceUriInfo | undefined {\n\t\tif (uri.scheme !== USER_DATA_SYNC_SCHEME) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst paths: string[] = [];\n\t\twhile (uri.path !== '/') {\n\t\t\tpaths.unshift(this.extUri.basename(uri));\n\t\t\turi = this.extUri.dirname(uri);\n\t\t}\n\t\tif (paths.length < 2) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst remote = uri.authority === UserDataSyncResourceProviderService.REMOTE_BACKUP_AUTHORITY;\n\t\tlet scheme: string | undefined;\n\t\tlet authority: string | undefined;\n\t\tconst locationPaths: string[] = [];\n\t\tlet syncResource: SyncResource | undefined;\n\t\tlet profile: string | undefined;\n\t\tlet collection: string | undefined;\n\t\tlet ref: string | undefined;\n\t\tlet node: string | undefined;\n\t\twhile (paths.length) {\n\t\t\tconst path = paths.shift()!;\n\t\t\tif (path.startsWith('scheme:')) {\n\t\t\t\tscheme = path.substring('scheme:'.length);\n\t\t\t} else if (path.startsWith('authority:')) {\n\t\t\t\tauthority = path.substring('authority:'.length);\n\t\t\t} else if (path.startsWith('syncResource:')) {\n\t\t\t\tsyncResource = path.substring('syncResource:'.length) as SyncResource;\n\t\t\t} else if (path.startsWith('profile:')) {\n\t\t\t\tprofile = path.substring('profile:'.length);\n\t\t\t} else if (path.startsWith('collection:')) {\n\t\t\t\tcollection = path.substring('collection:'.length);\n\t\t\t} else if (path.startsWith('ref:')) {\n\t\t\t\tref = path.substring('ref:'.length);\n\t\t\t} else if (!syncResource) {\n\t\t\t\tlocationPaths.push(path);\n\t\t\t} else {\n\t\t\t\tnode = path;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tremote,\n\t\t\tsyncResource: syncResource!,\n\t\t\tprofile: profile!,\n\t\t\tcollection,\n\t\t\tref,\n\t\t\tnode,\n\t\t\tlocation: scheme && authority !== undefined ? this.extUri.joinPath(URI.from({ scheme, authority, query: uri.query, fragment: uri.fragment, path: '/' }), ...locationPaths) : undefined\n\t\t};\n\t}\n\n\tprivate parseSyncData(content: string, syncResource: SyncResource): ISyncData {\n\t\ttry {\n\t\t\tconst syncData: ISyncData = JSON.parse(content);\n\t\t\tif (isSyncData(syncData)) {\n\t\t\t\treturn syncData;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t}\n\t\tthrow new UserDataSyncError(localize('incompatible sync data', \"Cannot parse sync data as it is not compatible with the current version.\"), UserDataSyncErrorCode.IncompatibleRemoteContent, syncResource);\n\t}\n\n\tprivate async getUserData(syncResource: SyncResource, ref: string, collection?: string): Promise<IUserData> {\n\t\tconst content = await this.userDataSyncStoreService.resolveResourceContent(syncResource, ref, collection);\n\t\treturn { ref, content };\n\t}\n\n}\n"],
  "mappings": "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",
  "names": []
}
