{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/userDataSync/common/tasksSync.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from \"../../../base/common/buffer.js\";\nimport type { CancellationToken } from \"../../../base/common/cancellation.js\";\nimport type { URI } from \"../../../base/common/uri.js\";\nimport { IConfigurationService } from \"../../configuration/common/configuration.js\";\nimport { IEnvironmentService } from \"../../environment/common/environment.js\";\nimport { IFileService } from \"../../files/common/files.js\";\nimport type { ILogService } from \"../../log/common/log.js\";\nimport { IStorageService } from \"../../storage/common/storage.js\";\nimport { ITelemetryService } from \"../../telemetry/common/telemetry.js\";\nimport { IUriIdentityService } from \"../../uriIdentity/common/uriIdentity.js\";\nimport {\n\ttype IUserDataProfile,\n\tIUserDataProfilesService,\n} from \"../../userDataProfile/common/userDataProfile.js\";\nimport {\n\tAbstractFileSynchroniser,\n\tAbstractInitializer,\n\ttype IAcceptResult,\n\ttype IFileResourcePreview,\n\ttype IMergeResult,\n} from \"./abstractSynchronizer.js\";\nimport {\n\tChange,\n\ttype IRemoteUserData,\n\ttype IUserDataSyncConfiguration,\n\tIUserDataSyncEnablementService,\n\tIUserDataSyncLocalStoreService,\n\tIUserDataSyncLogService,\n\tIUserDataSyncStoreService,\n\ttype IUserDataSynchroniser,\n\tSyncResource,\n\tUSER_DATA_SYNC_SCHEME,\n} from \"./userDataSync.js\";\n\ninterface ITasksSyncContent {\n\ttasks?: string;\n}\n\ninterface ITasksResourcePreview extends IFileResourcePreview {\n\tpreviewResult: IMergeResult;\n}\n\nexport function getTasksContentFromSyncContent(\n\tsyncContent: string,\n\tlogService: ILogService,\n): string | null {\n\ttry {\n\t\tconst parsed = <ITasksSyncContent>JSON.parse(syncContent);\n\t\treturn parsed.tasks ?? null;\n\t} catch (e) {\n\t\tlogService.error(e);\n\t\treturn null;\n\t}\n}\n\nexport class TasksSynchroniser\n\textends AbstractFileSynchroniser\n\timplements IUserDataSynchroniser\n{\n\tprotected readonly version: number = 1;\n\tprivate readonly previewResource: URI = this.extUri.joinPath(\n\t\tthis.syncPreviewFolder,\n\t\t\"tasks.json\",\n\t);\n\tprivate readonly baseResource: URI = this.previewResource.with({\n\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\tauthority: \"base\",\n\t});\n\tprivate readonly localResource: URI = this.previewResource.with({\n\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\tauthority: \"local\",\n\t});\n\tprivate readonly remoteResource: URI = this.previewResource.with({\n\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\tauthority: \"remote\",\n\t});\n\tprivate readonly acceptedResource: URI = this.previewResource.with({\n\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\tauthority: \"accepted\",\n\t});\n\n\tconstructor(\n\t\tprofile: IUserDataProfile,\n\t\tcollection: string | undefined,\n\t\t@IUserDataSyncStoreService\n\t\tuserDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncLocalStoreService\n\t\tuserDataSyncLocalStoreService: IUserDataSyncLocalStoreService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IUserDataSyncEnablementService\n\t\tuserDataSyncEnablementService: IUserDataSyncEnablementService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(\n\t\t\tprofile.tasksResource,\n\t\t\t{ syncResource: SyncResource.Tasks, profile },\n\t\t\tcollection,\n\t\t\tfileService,\n\t\t\tenvironmentService,\n\t\t\tstorageService,\n\t\t\tuserDataSyncStoreService,\n\t\t\tuserDataSyncLocalStoreService,\n\t\t\tuserDataSyncEnablementService,\n\t\t\ttelemetryService,\n\t\t\tlogService,\n\t\t\tconfigurationService,\n\t\t\turiIdentityService,\n\t\t);\n\t}\n\n\tprotected async generateSyncPreview(\n\t\tremoteUserData: IRemoteUserData,\n\t\tlastSyncUserData: IRemoteUserData | null,\n\t\tisRemoteDataFromCurrentMachine: boolean,\n\t\tuserDataSyncConfiguration: IUserDataSyncConfiguration,\n\t): Promise<ITasksResourcePreview[]> {\n\t\tconst remoteContent = remoteUserData.syncData\n\t\t\t? getTasksContentFromSyncContent(\n\t\t\t\t\tremoteUserData.syncData.content,\n\t\t\t\t\tthis.logService,\n\t\t\t\t)\n\t\t\t: null;\n\n\t\t// Use remote data as last sync data if last sync data does not exist and remote data is from same machine\n\t\tlastSyncUserData =\n\t\t\tlastSyncUserData === null && isRemoteDataFromCurrentMachine\n\t\t\t\t? remoteUserData\n\t\t\t\t: lastSyncUserData;\n\t\tconst lastSyncContent: string | null = lastSyncUserData?.syncData\n\t\t\t? getTasksContentFromSyncContent(\n\t\t\t\t\tlastSyncUserData.syncData.content,\n\t\t\t\t\tthis.logService,\n\t\t\t\t)\n\t\t\t: null;\n\n\t\t// Get file content last to get the latest\n\t\tconst fileContent = await this.getLocalFileContent();\n\n\t\tlet content: string | null = null;\n\t\tlet hasLocalChanged = false;\n\t\tlet hasRemoteChanged = false;\n\t\tlet hasConflicts = false;\n\n\t\tif (remoteUserData.syncData) {\n\t\t\tconst localContent = fileContent\n\t\t\t\t? fileContent.value.toString()\n\t\t\t\t: null;\n\t\t\tif (\n\t\t\t\t!lastSyncContent || // First time sync\n\t\t\t\tlastSyncContent !== localContent || // Local has forwarded\n\t\t\t\tlastSyncContent !== remoteContent // Remote has forwarded\n\t\t\t) {\n\t\t\t\tthis.logService.trace(\n\t\t\t\t\t`${this.syncResourceLogLabel}: Merging remote tasks with local tasks...`,\n\t\t\t\t);\n\t\t\t\tconst result = merge(\n\t\t\t\t\tlocalContent,\n\t\t\t\t\tremoteContent,\n\t\t\t\t\tlastSyncContent,\n\t\t\t\t);\n\t\t\t\tcontent = result.content;\n\t\t\t\thasConflicts = result.hasConflicts;\n\t\t\t\thasLocalChanged = result.hasLocalChanged;\n\t\t\t\thasRemoteChanged = result.hasRemoteChanged;\n\t\t\t}\n\t\t}\n\n\t\t// First time syncing to remote\n\t\telse if (fileContent) {\n\t\t\tthis.logService.trace(\n\t\t\t\t`${this.syncResourceLogLabel}: Remote tasks does not exist. Synchronizing tasks for the first time.`,\n\t\t\t);\n\t\t\tcontent = fileContent.value.toString();\n\t\t\thasRemoteChanged = true;\n\t\t}\n\n\t\tconst previewResult: IMergeResult = {\n\t\t\tcontent: hasConflicts ? lastSyncContent : content,\n\t\t\tlocalChange: hasLocalChanged\n\t\t\t\t? fileContent\n\t\t\t\t\t? Change.Modified\n\t\t\t\t\t: Change.Added\n\t\t\t\t: Change.None,\n\t\t\tremoteChange: hasRemoteChanged ? Change.Modified : Change.None,\n\t\t\thasConflicts,\n\t\t};\n\n\t\tconst localContent = fileContent ? fileContent.value.toString() : null;\n\t\treturn [\n\t\t\t{\n\t\t\t\tfileContent,\n\n\t\t\t\tbaseResource: this.baseResource,\n\t\t\t\tbaseContent: lastSyncContent,\n\n\t\t\t\tlocalResource: this.localResource,\n\t\t\t\tlocalContent,\n\t\t\t\tlocalChange: previewResult.localChange,\n\n\t\t\t\tremoteResource: this.remoteResource,\n\t\t\t\tremoteContent,\n\t\t\t\tremoteChange: previewResult.remoteChange,\n\n\t\t\t\tpreviewResource: this.previewResource,\n\t\t\t\tpreviewResult,\n\t\t\t\tacceptedResource: this.acceptedResource,\n\t\t\t},\n\t\t];\n\t}\n\n\tprotected async hasRemoteChanged(\n\t\tlastSyncUserData: IRemoteUserData,\n\t): Promise<boolean> {\n\t\tconst lastSyncContent: string | null = lastSyncUserData?.syncData\n\t\t\t? getTasksContentFromSyncContent(\n\t\t\t\t\tlastSyncUserData.syncData.content,\n\t\t\t\t\tthis.logService,\n\t\t\t\t)\n\t\t\t: null;\n\t\tif (lastSyncContent === null) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst fileContent = await this.getLocalFileContent();\n\t\tconst localContent = fileContent ? fileContent.value.toString() : null;\n\t\tconst result = merge(localContent, lastSyncContent, lastSyncContent);\n\t\treturn result.hasLocalChanged || result.hasRemoteChanged;\n\t}\n\n\tprotected async getMergeResult(\n\t\tresourcePreview: ITasksResourcePreview,\n\t\ttoken: CancellationToken,\n\t): Promise<IMergeResult> {\n\t\treturn resourcePreview.previewResult;\n\t}\n\n\tprotected async getAcceptResult(\n\t\tresourcePreview: ITasksResourcePreview,\n\t\tresource: URI,\n\t\tcontent: string | null | undefined,\n\t\ttoken: CancellationToken,\n\t): Promise<IAcceptResult> {\n\t\t/* Accept local resource */\n\t\tif (this.extUri.isEqual(resource, this.localResource)) {\n\t\t\treturn {\n\t\t\t\tcontent: resourcePreview.fileContent\n\t\t\t\t\t? resourcePreview.fileContent.value.toString()\n\t\t\t\t\t: null,\n\t\t\t\tlocalChange: Change.None,\n\t\t\t\tremoteChange: Change.Modified,\n\t\t\t};\n\t\t}\n\n\t\t/* Accept remote resource */\n\t\tif (this.extUri.isEqual(resource, this.remoteResource)) {\n\t\t\treturn {\n\t\t\t\tcontent: resourcePreview.remoteContent,\n\t\t\t\tlocalChange: Change.Modified,\n\t\t\t\tremoteChange: Change.None,\n\t\t\t};\n\t\t}\n\n\t\t/* Accept preview resource */\n\t\tif (this.extUri.isEqual(resource, this.previewResource)) {\n\t\t\tif (content === undefined) {\n\t\t\t\treturn {\n\t\t\t\t\tcontent: resourcePreview.previewResult.content,\n\t\t\t\t\tlocalChange: resourcePreview.previewResult.localChange,\n\t\t\t\t\tremoteChange: resourcePreview.previewResult.remoteChange,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\tcontent,\n\t\t\t\t\tlocalChange: Change.Modified,\n\t\t\t\t\tremoteChange: Change.Modified,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(`Invalid Resource: ${resource.toString()}`);\n\t}\n\n\tprotected async applyResult(\n\t\tremoteUserData: IRemoteUserData,\n\t\tlastSyncUserData: IRemoteUserData | null,\n\t\tresourcePreviews: [ITasksResourcePreview, IAcceptResult][],\n\t\tforce: boolean,\n\t): Promise<void> {\n\t\tconst { fileContent } = resourcePreviews[0][0];\n\t\tconst { content, localChange, remoteChange } = resourcePreviews[0][1];\n\n\t\tif (localChange === Change.None && remoteChange === Change.None) {\n\t\t\tthis.logService.info(\n\t\t\t\t`${this.syncResourceLogLabel}: No changes found during synchronizing tasks.`,\n\t\t\t);\n\t\t}\n\n\t\tif (localChange !== Change.None) {\n\t\t\tthis.logService.trace(\n\t\t\t\t`${this.syncResourceLogLabel}: Updating local tasks...`,\n\t\t\t);\n\t\t\tif (fileContent) {\n\t\t\t\tawait this.backupLocal(\n\t\t\t\t\tJSON.stringify(\n\t\t\t\t\t\tthis.toTasksSyncContent(fileContent.value.toString()),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (content) {\n\t\t\t\tawait this.updateLocalFileContent(content, fileContent, force);\n\t\t\t} else {\n\t\t\t\tawait this.deleteLocalFile();\n\t\t\t}\n\t\t\tthis.logService.info(\n\t\t\t\t`${this.syncResourceLogLabel}: Updated local tasks`,\n\t\t\t);\n\t\t}\n\n\t\tif (remoteChange !== Change.None) {\n\t\t\tthis.logService.trace(\n\t\t\t\t`${this.syncResourceLogLabel}: Updating remote tasks...`,\n\t\t\t);\n\t\t\tconst remoteContents = JSON.stringify(\n\t\t\t\tthis.toTasksSyncContent(content),\n\t\t\t);\n\t\t\tremoteUserData = await this.updateRemoteUserData(\n\t\t\t\tremoteContents,\n\t\t\t\tforce ? null : remoteUserData.ref,\n\t\t\t);\n\t\t\tthis.logService.info(\n\t\t\t\t`${this.syncResourceLogLabel}: Updated remote tasks`,\n\t\t\t);\n\t\t}\n\n\t\t// Delete the preview\n\t\ttry {\n\t\t\tawait this.fileService.del(this.previewResource);\n\t\t} catch (e) {\n\t\t\t/* ignore */\n\t\t}\n\n\t\tif (lastSyncUserData?.ref !== remoteUserData.ref) {\n\t\t\tthis.logService.trace(\n\t\t\t\t`${this.syncResourceLogLabel}: Updating last synchronized tasks...`,\n\t\t\t);\n\t\t\tawait this.updateLastSyncUserData(remoteUserData);\n\t\t\tthis.logService.info(\n\t\t\t\t`${this.syncResourceLogLabel}: Updated last synchronized tasks`,\n\t\t\t);\n\t\t}\n\t}\n\n\tasync hasLocalData(): Promise<boolean> {\n\t\treturn this.fileService.exists(this.file);\n\t}\n\n\toverride async resolveContent(uri: URI): Promise<string | null> {\n\t\tif (\n\t\t\tthis.extUri.isEqual(this.remoteResource, uri) ||\n\t\t\tthis.extUri.isEqual(this.baseResource, uri) ||\n\t\t\tthis.extUri.isEqual(this.localResource, uri) ||\n\t\t\tthis.extUri.isEqual(this.acceptedResource, uri)\n\t\t) {\n\t\t\treturn this.resolvePreviewContent(uri);\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate toTasksSyncContent(tasks: string | null): ITasksSyncContent {\n\t\treturn tasks ? { tasks } : {};\n\t}\n}\n\nexport class TasksInitializer extends AbstractInitializer {\n\tprivate tasksResource =\n\t\tthis.userDataProfilesService.defaultProfile.tasksResource;\n\n\tconstructor(\n\t\t@IFileService fileService: IFileService,\n\t\t@IUserDataProfilesService\n\t\tuserDataProfilesService: IUserDataProfilesService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(\n\t\t\tSyncResource.Tasks,\n\t\t\tuserDataProfilesService,\n\t\t\tenvironmentService,\n\t\t\tlogService,\n\t\t\tfileService,\n\t\t\tstorageService,\n\t\t\turiIdentityService,\n\t\t);\n\t}\n\n\tprotected async doInitialize(\n\t\tremoteUserData: IRemoteUserData,\n\t): Promise<void> {\n\t\tconst tasksContent = remoteUserData.syncData\n\t\t\t? getTasksContentFromSyncContent(\n\t\t\t\t\tremoteUserData.syncData.content,\n\t\t\t\t\tthis.logService,\n\t\t\t\t)\n\t\t\t: null;\n\t\tif (!tasksContent) {\n\t\t\tthis.logService.info(\n\t\t\t\t\"Skipping initializing tasks because remote tasks does not exist.\",\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tconst isEmpty = await this.isEmpty();\n\t\tif (!isEmpty) {\n\t\t\tthis.logService.info(\n\t\t\t\t\"Skipping initializing tasks because local tasks exist.\",\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.fileService.writeFile(\n\t\t\tthis.tasksResource,\n\t\t\tVSBuffer.fromString(tasksContent),\n\t\t);\n\n\t\tawait this.updateLastSyncUserData(remoteUserData);\n\t}\n\n\tprivate async isEmpty(): Promise<boolean> {\n\t\treturn this.fileService.exists(this.tasksResource);\n\t}\n}\n\nfunction merge(\n\toriginalLocalContent: string | null,\n\toriginalRemoteContent: string | null,\n\tbaseContent: string | null,\n): {\n\tcontent: string | null;\n\thasLocalChanged: boolean;\n\thasRemoteChanged: boolean;\n\thasConflicts: boolean;\n} {\n\t/* no changes */\n\tif (\n\t\toriginalLocalContent === null &&\n\t\toriginalRemoteContent === null &&\n\t\tbaseContent === null\n\t) {\n\t\treturn {\n\t\t\tcontent: null,\n\t\t\thasLocalChanged: false,\n\t\t\thasRemoteChanged: false,\n\t\t\thasConflicts: false,\n\t\t};\n\t}\n\n\t/* no changes */\n\tif (originalLocalContent === originalRemoteContent) {\n\t\treturn {\n\t\t\tcontent: null,\n\t\t\thasLocalChanged: false,\n\t\t\thasRemoteChanged: false,\n\t\t\thasConflicts: false,\n\t\t};\n\t}\n\n\tconst localForwarded = baseContent !== originalLocalContent;\n\tconst remoteForwarded = baseContent !== originalRemoteContent;\n\n\t/* no changes */\n\tif (!localForwarded && !remoteForwarded) {\n\t\treturn {\n\t\t\tcontent: null,\n\t\t\thasLocalChanged: false,\n\t\t\thasRemoteChanged: false,\n\t\t\thasConflicts: false,\n\t\t};\n\t}\n\n\t/* local has changed and remote has not */\n\tif (localForwarded && !remoteForwarded) {\n\t\treturn {\n\t\t\tcontent: originalLocalContent,\n\t\t\thasRemoteChanged: true,\n\t\t\thasLocalChanged: false,\n\t\t\thasConflicts: false,\n\t\t};\n\t}\n\n\t/* remote has changed and local has not */\n\tif (remoteForwarded && !localForwarded) {\n\t\treturn {\n\t\t\tcontent: originalRemoteContent,\n\t\t\thasLocalChanged: true,\n\t\t\thasRemoteChanged: false,\n\t\t\thasConflicts: false,\n\t\t};\n\t}\n\n\treturn {\n\t\tcontent: originalLocalContent,\n\t\thasLocalChanged: true,\n\t\thasRemoteChanged: true,\n\t\thasConflicts: true,\n\t};\n}\n"],
  "mappings": "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",
  "names": ["localContent"]
}
