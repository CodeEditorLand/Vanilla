{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/userDataSync/common/userDataSync.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { distinct } from '../../../base/common/arrays.js';\nimport { VSBufferReadableStream } from '../../../base/common/buffer.js';\nimport { IStringDictionary } from '../../../base/common/collections.js';\nimport { Event } from '../../../base/common/event.js';\nimport { FormattingOptions } from '../../../base/common/jsonFormatter.js';\nimport { IJSONSchema } from '../../../base/common/jsonSchema.js';\nimport { IDisposable } from '../../../base/common/lifecycle.js';\nimport { IExtUri } from '../../../base/common/resources.js';\nimport { isObject, isString } from '../../../base/common/types.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { IHeaders } from '../../../base/parts/request/common/request.js';\nimport { localize } from '../../../nls.js';\nimport { allSettings, ConfigurationScope, Extensions as ConfigurationExtensions, IConfigurationRegistry, IRegisteredConfigurationPropertySchema, getAllConfigurationProperties, parseScope } from '../../configuration/common/configurationRegistry.js';\nimport { IEnvironmentService } from '../../environment/common/environment.js';\nimport { EXTENSION_IDENTIFIER_PATTERN, IExtensionIdentifier } from '../../extensionManagement/common/extensionManagement.js';\nimport { IExtensionManifest } from '../../extensions/common/extensions.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { Extensions as JSONExtensions, IJSONContributionRegistry } from '../../jsonschemas/common/jsonContributionRegistry.js';\nimport { ILogService } from '../../log/common/log.js';\nimport { Registry } from '../../registry/common/platform.js';\nimport { IUserDataProfile, UseDefaultProfileFlags } from '../../userDataProfile/common/userDataProfile.js';\nimport { IUserDataSyncMachine } from './userDataSyncMachines.js';\n\nexport function getDisallowedIgnoredSettings(): string[] {\n\tconst allSettings = Registry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration).getConfigurationProperties();\n\treturn Object.keys(allSettings).filter(setting => !!allSettings[setting].disallowSyncIgnore);\n}\n\nexport function getDefaultIgnoredSettings(excludeExtensions: boolean = false): string[] {\n\tconst allSettings = Registry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration).getConfigurationProperties();\n\tconst ignoredSettings = getIgnoredSettings(allSettings, excludeExtensions);\n\tconst disallowedSettings = getDisallowedIgnoredSettings();\n\treturn distinct([...ignoredSettings, ...disallowedSettings]);\n}\n\nexport function getIgnoredSettingsForExtension(manifest: IExtensionManifest): string[] {\n\tif (!manifest.contributes?.configuration) {\n\t\treturn [];\n\t}\n\tconst configurations = Array.isArray(manifest.contributes.configuration) ? manifest.contributes.configuration : [manifest.contributes.configuration];\n\tif (!configurations.length) {\n\t\treturn [];\n\t}\n\tconst properties = getAllConfigurationProperties(configurations);\n\treturn getIgnoredSettings(properties, false);\n}\n\nfunction getIgnoredSettings(properties: IStringDictionary<IRegisteredConfigurationPropertySchema>, excludeExtensions: boolean): string[] {\n\tconst ignoredSettings = new Set<string>();\n\tfor (const key in properties) {\n\t\tif (excludeExtensions && !!properties[key].source) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst scope = isString(properties[key].scope) ? parseScope(properties[key].scope) : properties[key].scope;\n\t\tif (properties[key].ignoreSync\n\t\t\t|| scope === ConfigurationScope.MACHINE\n\t\t\t|| scope === ConfigurationScope.MACHINE_OVERRIDABLE\n\t\t) {\n\t\t\tignoredSettings.add(key);\n\t\t}\n\t}\n\treturn [...ignoredSettings.values()];\n}\n\nexport const USER_DATA_SYNC_CONFIGURATION_SCOPE = 'settingsSync';\n\nexport interface IUserDataSyncConfiguration {\n\tkeybindingsPerPlatform?: boolean;\n\tignoredExtensions?: string[];\n\tignoredSettings?: string[];\n}\n\nexport const CONFIG_SYNC_KEYBINDINGS_PER_PLATFORM = 'settingsSync.keybindingsPerPlatform';\n\nexport function registerConfiguration(): IDisposable {\n\tconst ignoredSettingsSchemaId = 'vscode://schemas/ignoredSettings';\n\tconst configurationRegistry = Registry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration);\n\tconfigurationRegistry.registerConfiguration({\n\t\tid: 'settingsSync',\n\t\torder: 30,\n\t\ttitle: localize('settings sync', \"Settings Sync\"),\n\t\ttype: 'object',\n\t\tproperties: {\n\t\t\t[CONFIG_SYNC_KEYBINDINGS_PER_PLATFORM]: {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdescription: localize('settingsSync.keybindingsPerPlatform', \"Synchronize keybindings for each platform.\"),\n\t\t\t\tdefault: true,\n\t\t\t\tscope: ConfigurationScope.APPLICATION,\n\t\t\t\ttags: ['sync', 'usesOnlineServices']\n\t\t\t},\n\t\t\t'settingsSync.ignoredExtensions': {\n\t\t\t\t'type': 'array',\n\t\t\t\tmarkdownDescription: localize('settingsSync.ignoredExtensions', \"List of extensions to be ignored while synchronizing. The identifier of an extension is always `${publisher}.${name}`. For example: `vscode.csharp`.\"),\n\t\t\t\titems: [{\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tpattern: EXTENSION_IDENTIFIER_PATTERN,\n\t\t\t\t\terrorMessage: localize('app.extension.identifier.errorMessage', \"Expected format '${publisher}.${name}'. Example: 'vscode.csharp'.\")\n\t\t\t\t}],\n\t\t\t\t'default': [],\n\t\t\t\t'scope': ConfigurationScope.APPLICATION,\n\t\t\t\tuniqueItems: true,\n\t\t\t\tdisallowSyncIgnore: true,\n\t\t\t\ttags: ['sync', 'usesOnlineServices']\n\t\t\t},\n\t\t\t'settingsSync.ignoredSettings': {\n\t\t\t\t'type': 'array',\n\t\t\t\tdescription: localize('settingsSync.ignoredSettings', \"Configure settings to be ignored while synchronizing.\"),\n\t\t\t\t'default': [],\n\t\t\t\t'scope': ConfigurationScope.APPLICATION,\n\t\t\t\t$ref: ignoredSettingsSchemaId,\n\t\t\t\tadditionalProperties: true,\n\t\t\t\tuniqueItems: true,\n\t\t\t\tdisallowSyncIgnore: true,\n\t\t\t\ttags: ['sync', 'usesOnlineServices']\n\t\t\t}\n\t\t}\n\t});\n\tconst jsonRegistry = Registry.as<IJSONContributionRegistry>(JSONExtensions.JSONContribution);\n\tconst registerIgnoredSettingsSchema = () => {\n\t\tconst disallowedIgnoredSettings = getDisallowedIgnoredSettings();\n\t\tconst defaultIgnoredSettings = getDefaultIgnoredSettings();\n\t\tconst settings = Object.keys(allSettings.properties).filter(setting => !defaultIgnoredSettings.includes(setting));\n\t\tconst ignoredSettings = defaultIgnoredSettings.filter(setting => !disallowedIgnoredSettings.includes(setting));\n\t\tconst ignoredSettingsSchema: IJSONSchema = {\n\t\t\titems: {\n\t\t\t\ttype: 'string',\n\t\t\t\tenum: [...settings, ...ignoredSettings.map(setting => `-${setting}`)]\n\t\t\t},\n\t\t};\n\t\tjsonRegistry.registerSchema(ignoredSettingsSchemaId, ignoredSettingsSchema);\n\t};\n\treturn configurationRegistry.onDidUpdateConfiguration(() => registerIgnoredSettingsSchema());\n}\n\n// #region User Data Sync Store\n\nexport interface IUserData {\n\tref: string;\n\tcontent: string | null;\n}\n\nexport type IAuthenticationProvider = { id: string; scopes: string[] };\n\nexport interface IUserDataSyncStore {\n\treadonly url: URI;\n\treadonly type: UserDataSyncStoreType;\n\treadonly defaultUrl: URI;\n\treadonly stableUrl: URI;\n\treadonly insidersUrl: URI;\n\treadonly canSwitch: boolean;\n\treadonly authenticationProviders: IAuthenticationProvider[];\n}\n\nexport function isAuthenticationProvider(thing: any): thing is IAuthenticationProvider {\n\treturn thing\n\t\t&& isObject(thing)\n\t\t&& isString(thing.id)\n\t\t&& Array.isArray(thing.scopes);\n}\n\nexport const enum SyncResource {\n\tSettings = 'settings',\n\tKeybindings = 'keybindings',\n\tSnippets = 'snippets',\n\tTasks = 'tasks',\n\tExtensions = 'extensions',\n\tGlobalState = 'globalState',\n\tProfiles = 'profiles',\n\tWorkspaceState = 'workspaceState',\n}\nexport const ALL_SYNC_RESOURCES: SyncResource[] = [SyncResource.Settings, SyncResource.Keybindings, SyncResource.Snippets, SyncResource.Tasks, SyncResource.Extensions, SyncResource.GlobalState, SyncResource.Profiles];\n\nexport function getPathSegments(collection: string | undefined, ...paths: string[]): string[] {\n\treturn collection ? [collection, ...paths] : paths;\n}\n\nexport function getLastSyncResourceUri(collection: string | undefined, syncResource: SyncResource, environmentService: IEnvironmentService, extUri: IExtUri): URI {\n\treturn extUri.joinPath(environmentService.userDataSyncHome, ...getPathSegments(collection, syncResource, `lastSync${syncResource}.json`));\n}\n\nexport type IUserDataResourceManifest = Record<ServerResource, string>;\n\nexport interface IUserDataCollectionManifest {\n\t[collectionId: string]: {\n\t\treadonly latest?: IUserDataResourceManifest;\n\t};\n}\n\nexport interface IUserDataManifest {\n\treadonly latest?: IUserDataResourceManifest;\n\treadonly session: string;\n\treadonly ref: string;\n\treadonly collections?: IUserDataCollectionManifest;\n}\n\nexport interface IUserDataActivityData {\n\tresources?: {\n\t\t[resourceId: string]: { created: number; content: string }[];\n\t};\n\tcollections?: {\n\t\t[collectionId: string]: {\n\t\t\tresources?: {\n\t\t\t\t[resourceId: string]: { created: number; content: string }[];\n\t\t\t} | undefined;\n\t\t};\n\t};\n}\n\nexport interface IResourceRefHandle {\n\tref: string;\n\tcreated: number;\n}\n\nexport type ServerResource = SyncResource | 'machines' | 'editSessions' | 'workspaceState';\nexport type UserDataSyncStoreType = 'insiders' | 'stable';\n\nexport const IUserDataSyncStoreManagementService = createDecorator<IUserDataSyncStoreManagementService>('IUserDataSyncStoreManagementService');\nexport interface IUserDataSyncStoreManagementService {\n\treadonly _serviceBrand: undefined;\n\treadonly onDidChangeUserDataSyncStore: Event<void>;\n\treadonly userDataSyncStore: IUserDataSyncStore | undefined;\n\tswitch(type: UserDataSyncStoreType): Promise<void>;\n\tgetPreviousUserDataSyncStore(): Promise<IUserDataSyncStore | undefined>;\n}\n\nexport const IUserDataSyncStoreService = createDecorator<IUserDataSyncStoreService>('IUserDataSyncStoreService');\nexport interface IUserDataSyncStoreService {\n\treadonly _serviceBrand: undefined;\n\treadonly onDidChangeDonotMakeRequestsUntil: Event<void>;\n\treadonly donotMakeRequestsUntil: Date | undefined;\n\n\treadonly onTokenFailed: Event<UserDataSyncErrorCode>;\n\treadonly onTokenSucceed: Event<void>;\n\tsetAuthToken(token: string, type: string): void;\n\n\tmanifest(oldValue: IUserDataManifest | null, headers?: IHeaders): Promise<IUserDataManifest | null>;\n\treadResource(resource: ServerResource, oldValue: IUserData | null, collection?: string, headers?: IHeaders): Promise<IUserData>;\n\twriteResource(resource: ServerResource, content: string, ref: string | null, collection?: string, headers?: IHeaders): Promise<string>;\n\tdeleteResource(resource: ServerResource, ref: string | null, collection?: string): Promise<void>;\n\tgetAllResourceRefs(resource: ServerResource, collection?: string): Promise<IResourceRefHandle[]>;\n\tresolveResourceContent(resource: ServerResource, ref: string, collection?: string, headers?: IHeaders): Promise<string | null>;\n\n\tgetAllCollections(headers?: IHeaders): Promise<string[]>;\n\tcreateCollection(headers?: IHeaders): Promise<string>;\n\tdeleteCollection(collection?: string, headers?: IHeaders): Promise<void>;\n\n\tgetActivityData(): Promise<VSBufferReadableStream>;\n\n\tclear(): Promise<void>;\n}\n\nexport const IUserDataSyncLocalStoreService = createDecorator<IUserDataSyncLocalStoreService>('IUserDataSyncLocalStoreService');\nexport interface IUserDataSyncLocalStoreService {\n\treadonly _serviceBrand: undefined;\n\twriteResource(resource: ServerResource, content: string, cTime: Date, collection?: string, root?: URI): Promise<void>;\n\tgetAllResourceRefs(resource: ServerResource, collection?: string, root?: URI): Promise<IResourceRefHandle[]>;\n\tresolveResourceContent(resource: ServerResource, ref: string, collection?: string, root?: URI): Promise<string | null>;\n}\n\n//#endregion\n\n// #region User Data Sync Headers\n\nexport const HEADER_OPERATION_ID = 'x-operation-id';\nexport const HEADER_EXECUTION_ID = 'X-Execution-Id';\n\nexport function createSyncHeaders(executionId: string): IHeaders {\n\tconst headers: IHeaders = {};\n\theaders[HEADER_EXECUTION_ID] = executionId;\n\treturn headers;\n}\n\n//#endregion\n\n// #region User Data Sync Error\n\nexport const enum UserDataSyncErrorCode {\n\t// Client Errors (>= 400 )\n\tUnauthorized = 'Unauthorized', /* 401 */\n\tForbidden = 'Forbidden', /* 403 */\n\tNotFound = 'NotFound', /* 404 */\n\tMethodNotFound = 'MethodNotFound', /* 405 */\n\tConflict = 'Conflict', /* 409 */\n\tGone = 'Gone', /* 410 */\n\tPreconditionFailed = 'PreconditionFailed', /* 412 */\n\tTooLarge = 'TooLarge', /* 413 */\n\tUpgradeRequired = 'UpgradeRequired', /* 426 */\n\tPreconditionRequired = 'PreconditionRequired', /* 428 */\n\tTooManyRequests = 'RemoteTooManyRequests', /* 429 */\n\tTooManyRequestsAndRetryAfter = 'TooManyRequestsAndRetryAfter', /* 429 + Retry-After */\n\n\t// Local Errors\n\tRequestFailed = 'RequestFailed',\n\tRequestCanceled = 'RequestCanceled',\n\tRequestTimeout = 'RequestTimeout',\n\tRequestProtocolNotSupported = 'RequestProtocolNotSupported',\n\tRequestPathNotEscaped = 'RequestPathNotEscaped',\n\tRequestHeadersNotObject = 'RequestHeadersNotObject',\n\tNoCollection = 'NoCollection',\n\tNoRef = 'NoRef',\n\tEmptyResponse = 'EmptyResponse',\n\tTurnedOff = 'TurnedOff',\n\tSessionExpired = 'SessionExpired',\n\tServiceChanged = 'ServiceChanged',\n\tDefaultServiceChanged = 'DefaultServiceChanged',\n\tLocalTooManyProfiles = 'LocalTooManyProfiles',\n\tLocalTooManyRequests = 'LocalTooManyRequests',\n\tLocalPreconditionFailed = 'LocalPreconditionFailed',\n\tLocalInvalidContent = 'LocalInvalidContent',\n\tLocalError = 'LocalError',\n\tIncompatibleLocalContent = 'IncompatibleLocalContent',\n\tIncompatibleRemoteContent = 'IncompatibleRemoteContent',\n\n\tUnknown = 'Unknown',\n}\n\nexport class UserDataSyncError extends Error {\n\n\tconstructor(\n\t\tmessage: string,\n\t\treadonly code: UserDataSyncErrorCode,\n\t\treadonly resource?: SyncResource,\n\t\treadonly operationId?: string\n\t) {\n\t\tsuper(message);\n\t\tthis.name = `${this.code} (UserDataSyncError) syncResource:${this.resource || 'unknown'} operationId:${this.operationId || 'unknown'}`;\n\t}\n\n}\n\nexport class UserDataSyncStoreError extends UserDataSyncError {\n\tconstructor(message: string, readonly url: string, code: UserDataSyncErrorCode, readonly serverCode: number | undefined, operationId: string | undefined) {\n\t\tsuper(message, code, undefined, operationId);\n\t}\n}\n\nexport class UserDataAutoSyncError extends UserDataSyncError {\n\tconstructor(message: string, code: UserDataSyncErrorCode) {\n\t\tsuper(message, code);\n\t}\n}\n\nexport namespace UserDataSyncError {\n\n\texport function toUserDataSyncError(error: Error): UserDataSyncError {\n\t\tif (error instanceof UserDataSyncError) {\n\t\t\treturn error;\n\t\t}\n\t\tconst match = /^(.+) \\(UserDataSyncError\\) syncResource:(.+) operationId:(.+)$/.exec(error.name);\n\t\tif (match && match[1]) {\n\t\t\tconst syncResource = match[2] === 'unknown' ? undefined : match[2] as SyncResource;\n\t\t\tconst operationId = match[3] === 'unknown' ? undefined : match[3];\n\t\t\treturn new UserDataSyncError(error.message, <UserDataSyncErrorCode>match[1], syncResource, operationId);\n\t\t}\n\t\treturn new UserDataSyncError(error.message, UserDataSyncErrorCode.Unknown);\n\t}\n\n}\n\n//#endregion\n\n// #region User Data Synchroniser\n\nexport interface ISyncUserDataProfile {\n\treadonly id: string;\n\treadonly collection: string;\n\treadonly name: string;\n\treadonly shortName?: string;\n\treadonly icon?: string;\n\treadonly useDefaultFlags?: UseDefaultProfileFlags;\n}\n\nexport type ISyncExtension = ILocalSyncExtension | IRemoteSyncExtension;\n\nexport interface ILocalSyncExtension {\n\tidentifier: IExtensionIdentifier;\n\tpinned: boolean;\n\tversion: string;\n\tpreRelease: boolean;\n\tdisabled?: boolean;\n\tinstalled?: boolean;\n\tisApplicationScoped?: boolean;\n\tstate?: IStringDictionary<any>;\n}\n\nexport interface IRemoteSyncExtension {\n\tidentifier: IExtensionIdentifier;\n\tversion: string;\n\tpinned?: boolean;\n\tpreRelease?: boolean;\n\tdisabled?: boolean;\n\tinstalled?: boolean;\n\tisApplicationScoped?: boolean;\n\tstate?: IStringDictionary<any>;\n}\n\nexport interface IStorageValue {\n\tversion: number;\n\tvalue: string;\n}\n\nexport interface IGlobalState {\n\tstorage: IStringDictionary<IStorageValue>;\n}\n\nexport interface IWorkspaceState {\n\tfolders: IWorkspaceStateFolder[];\n\tstorage: IStringDictionary<string>;\n\tversion: number;\n}\n\nexport interface IWorkspaceStateFolder {\n\tresourceUri: string;\n\tworkspaceFolderIdentity: string;\n}\n\nexport const enum SyncStatus {\n\tUninitialized = 'uninitialized',\n\tIdle = 'idle',\n\tSyncing = 'syncing',\n\tHasConflicts = 'hasConflicts',\n}\n\nexport interface ISyncResourceHandle {\n\tcreated: number;\n\turi: URI;\n}\n\nexport interface IRemoteUserData {\n\tref: string;\n\tsyncData: ISyncData | null;\n}\n\nexport interface ISyncData {\n\tversion: number;\n\tmachineId?: string;\n\tcontent: string;\n}\n\nexport const enum Change {\n\tNone,\n\tAdded,\n\tModified,\n\tDeleted,\n}\n\nexport const enum MergeState {\n\tPreview = 'preview',\n\tConflict = 'conflict',\n\tAccepted = 'accepted',\n}\n\nexport interface IResourcePreview {\n\treadonly baseResource: URI;\n\treadonly remoteResource: URI;\n\treadonly localResource: URI;\n\treadonly previewResource: URI;\n\treadonly acceptedResource: URI;\n\treadonly localChange: Change;\n\treadonly remoteChange: Change;\n\treadonly mergeState: MergeState;\n}\n\nexport interface IUserDataSyncResource {\n\treadonly syncResource: SyncResource;\n\treadonly profile: IUserDataProfile;\n}\n\nexport interface IUserDataSyncResourceConflicts extends IUserDataSyncResource {\n\treadonly conflicts: IResourcePreview[];\n}\n\nexport interface IUserDataSyncResourcePreview extends IUserDataSyncResource {\n\treadonly isLastSyncFromCurrentMachine: boolean;\n\treadonly resourcePreviews: IResourcePreview[];\n}\n\nexport interface IUserDataSyncResourceError extends IUserDataSyncResource {\n\treadonly error: UserDataSyncError;\n}\n\nexport interface IUserDataSyncResourceInitializer {\n\tinitialize(userData: IUserData): Promise<void>;\n}\n\nexport interface IUserDataSynchroniser {\n\n\treadonly resource: SyncResource;\n\treadonly status: SyncStatus;\n\treadonly onDidChangeStatus: Event<SyncStatus>;\n\n\treadonly conflicts: IUserDataSyncResourceConflicts;\n\treadonly onDidChangeConflicts: Event<IUserDataSyncResourceConflicts>;\n\n\treadonly onDidChangeLocal: Event<void>;\n\n\tsync(manifest: IUserDataResourceManifest | null, headers: IHeaders): Promise<void>;\n\tstop(): Promise<void>;\n\n\tpreview(manifest: IUserDataResourceManifest | null, userDataSyncConfiguration: IUserDataSyncConfiguration, headers: IHeaders): Promise<IUserDataSyncResourcePreview | null>;\n\taccept(resource: URI, content?: string | null): Promise<IUserDataSyncResourcePreview | null>;\n\tmerge(resource: URI): Promise<IUserDataSyncResourcePreview | null>;\n\tdiscard(resource: URI): Promise<IUserDataSyncResourcePreview | null>;\n\tapply(force: boolean, headers: IHeaders): Promise<IUserDataSyncResourcePreview | null>;\n\n\thasPreviouslySynced(): Promise<boolean>;\n\thasLocalData(): Promise<boolean>;\n\tresetLocal(): Promise<void>;\n\n\tresolveContent(resource: URI): Promise<string | null>;\n\treplace(content: string): Promise<boolean>;\n}\n\n//#endregion\n\n// #region keys synced only in web\n\nexport const SYNC_SERVICE_URL_TYPE = 'sync.store.url.type';\nexport function getEnablementKey(resource: SyncResource) { return `sync.enable.${resource}`; }\n\n// #endregion\n\n// #region User Data Sync Services\nexport const IUserDataSyncEnablementService = createDecorator<IUserDataSyncEnablementService>('IUserDataSyncEnablementService');\nexport interface IUserDataSyncEnablementService {\n\t_serviceBrand: any;\n\n\treadonly onDidChangeEnablement: Event<boolean>;\n\tisEnabled(): boolean;\n\tcanToggleEnablement(): boolean;\n\tsetEnablement(enabled: boolean): void;\n\n\treadonly onDidChangeResourceEnablement: Event<[SyncResource, boolean]>;\n\tisResourceEnabled(resource: SyncResource): boolean;\n\tsetResourceEnablement(resource: SyncResource, enabled: boolean): void;\n\n\tgetResourceSyncStateVersion(resource: SyncResource): string | undefined;\n}\n\nexport interface IUserDataSyncTask {\n\treadonly manifest: IUserDataManifest | null;\n\trun(): Promise<void>;\n\tstop(): Promise<void>;\n}\n\nexport interface IUserDataManualSyncTask {\n\treadonly id: string;\n\tmerge(): Promise<void>;\n\tapply(): Promise<void>;\n\tstop(): Promise<void>;\n}\n\nexport const IUserDataSyncService = createDecorator<IUserDataSyncService>('IUserDataSyncService');\nexport interface IUserDataSyncService {\n\t_serviceBrand: any;\n\n\treadonly status: SyncStatus;\n\treadonly onDidChangeStatus: Event<SyncStatus>;\n\n\treadonly conflicts: IUserDataSyncResourceConflicts[];\n\treadonly onDidChangeConflicts: Event<IUserDataSyncResourceConflicts[]>;\n\n\treadonly onDidChangeLocal: Event<SyncResource>;\n\treadonly onSyncErrors: Event<IUserDataSyncResourceError[]>;\n\n\treadonly lastSyncTime: number | undefined;\n\treadonly onDidChangeLastSyncTime: Event<number>;\n\n\treadonly onDidResetRemote: Event<void>;\n\treadonly onDidResetLocal: Event<void>;\n\n\tcreateSyncTask(manifest: IUserDataManifest | null, disableCache?: boolean): Promise<IUserDataSyncTask>;\n\tcreateManualSyncTask(): Promise<IUserDataManualSyncTask>;\n\tresolveContent(resource: URI): Promise<string | null>;\n\taccept(syncResource: IUserDataSyncResource, resource: URI, content: string | null | undefined, apply: boolean | { force: boolean }): Promise<void>;\n\n\treset(): Promise<void>;\n\tresetRemote(): Promise<void>;\n\tcleanUpRemoteData(): Promise<void>;\n\tresetLocal(): Promise<void>;\n\thasLocalData(): Promise<boolean>;\n\thasPreviouslySynced(): Promise<boolean>;\n\n\treplace(syncResourceHandle: ISyncResourceHandle): Promise<void>;\n\n\tsaveRemoteActivityData(location: URI): Promise<void>;\n\textractActivityData(activityDataResource: URI, location: URI): Promise<void>;\n}\n\nexport const IUserDataSyncResourceProviderService = createDecorator<IUserDataSyncResourceProviderService>('IUserDataSyncResourceProviderService');\nexport interface IUserDataSyncResourceProviderService {\n\t_serviceBrand: any;\n\tgetRemoteSyncedProfiles(): Promise<ISyncUserDataProfile[]>;\n\tgetLocalSyncedProfiles(location?: URI): Promise<ISyncUserDataProfile[]>;\n\tgetRemoteSyncResourceHandles(syncResource: SyncResource, profile?: ISyncUserDataProfile): Promise<ISyncResourceHandle[]>;\n\tgetLocalSyncResourceHandles(syncResource: SyncResource, profile?: ISyncUserDataProfile, location?: URI): Promise<ISyncResourceHandle[]>;\n\tgetAssociatedResources(syncResourceHandle: ISyncResourceHandle): Promise<{ resource: URI; comparableResource: URI }[]>;\n\tgetMachineId(syncResourceHandle: ISyncResourceHandle): Promise<string | undefined>;\n\tgetLocalSyncedMachines(location?: URI): Promise<IUserDataSyncMachine[]>;\n\tresolveContent(resource: URI): Promise<string | null>;\n\tresolveUserDataSyncResource(syncResourceHandle: ISyncResourceHandle): IUserDataSyncResource | undefined;\n}\n\nexport const IUserDataAutoSyncService = createDecorator<IUserDataAutoSyncService>('IUserDataAutoSyncService');\nexport interface IUserDataAutoSyncService {\n\t_serviceBrand: any;\n\treadonly onError: Event<UserDataSyncError>;\n\tturnOn(): Promise<void>;\n\tturnOff(everywhere: boolean): Promise<void>;\n\ttriggerSync(sources: string[], hasToLimitSync: boolean, disableCache: boolean): Promise<void>;\n}\n\nexport const IUserDataSyncUtilService = createDecorator<IUserDataSyncUtilService>('IUserDataSyncUtilService');\nexport interface IUserDataSyncUtilService {\n\treadonly _serviceBrand: undefined;\n\tresolveUserBindings(userbindings: string[]): Promise<IStringDictionary<string>>;\n\tresolveFormattingOptions(resource: URI): Promise<FormattingOptions>;\n\tresolveDefaultCoreIgnoredSettings(): Promise<string[]>;\n}\n\nexport const IUserDataSyncLogService = createDecorator<IUserDataSyncLogService>('IUserDataSyncLogService');\nexport interface IUserDataSyncLogService extends ILogService { }\n\nexport interface IConflictSetting {\n\tkey: string;\n\tlocalValue: any | undefined;\n\tremoteValue: any | undefined;\n}\n\n//#endregion\n\nexport const USER_DATA_SYNC_LOG_ID = 'userDataSync';\nexport const USER_DATA_SYNC_SCHEME = 'vscode-userdata-sync';\nexport const PREVIEW_DIR_NAME = 'preview';\n"],
  "mappings": "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",
  "names": ["allSettings", "SyncResource", "UserDataSyncErrorCode", "UserDataSyncError", "SyncStatus", "Change", "MergeState"]
}
