{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/userDataSync/common/userDataSync.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { distinct } from \"../../../base/common/arrays.js\";\nimport type { VSBufferReadableStream } from \"../../../base/common/buffer.js\";\nimport type { IStringDictionary } from \"../../../base/common/collections.js\";\nimport type { Event } from \"../../../base/common/event.js\";\nimport type { FormattingOptions } from \"../../../base/common/jsonFormatter.js\";\nimport type { IJSONSchema } from \"../../../base/common/jsonSchema.js\";\nimport type { IDisposable } from \"../../../base/common/lifecycle.js\";\nimport type { IExtUri } from \"../../../base/common/resources.js\";\nimport { isObject, isString } from \"../../../base/common/types.js\";\nimport type { URI } from \"../../../base/common/uri.js\";\nimport type { IHeaders } from \"../../../base/parts/request/common/request.js\";\nimport { localize } from \"../../../nls.js\";\nimport {\n\tExtensions as ConfigurationExtensions,\n\tConfigurationScope,\n\ttype IConfigurationRegistry,\n\ttype IRegisteredConfigurationPropertySchema,\n\tallSettings,\n\tgetAllConfigurationProperties,\n\tparseScope,\n} from \"../../configuration/common/configurationRegistry.js\";\nimport type { IEnvironmentService } from \"../../environment/common/environment.js\";\nimport {\n\tEXTENSION_IDENTIFIER_PATTERN,\n\ttype IExtensionIdentifier,\n} from \"../../extensionManagement/common/extensionManagement.js\";\nimport type { IExtensionManifest } from \"../../extensions/common/extensions.js\";\nimport { createDecorator } from \"../../instantiation/common/instantiation.js\";\nimport {\n\ttype IJSONContributionRegistry,\n\tExtensions as JSONExtensions,\n} from \"../../jsonschemas/common/jsonContributionRegistry.js\";\nimport type { ILogService } from \"../../log/common/log.js\";\nimport { Registry } from \"../../registry/common/platform.js\";\nimport type {\n\tIUserDataProfile,\n\tUseDefaultProfileFlags,\n} from \"../../userDataProfile/common/userDataProfile.js\";\nimport type { IUserDataSyncMachine } from \"./userDataSyncMachines.js\";\n\nexport function getDisallowedIgnoredSettings(): string[] {\n\tconst allSettings = Registry.as<IConfigurationRegistry>(\n\t\tConfigurationExtensions.Configuration,\n\t).getConfigurationProperties();\n\treturn Object.keys(allSettings).filter(\n\t\t(setting) => !!allSettings[setting].disallowSyncIgnore,\n\t);\n}\n\nexport function getDefaultIgnoredSettings(excludeExtensions = false): string[] {\n\tconst allSettings = Registry.as<IConfigurationRegistry>(\n\t\tConfigurationExtensions.Configuration,\n\t).getConfigurationProperties();\n\tconst ignoredSettings = getIgnoredSettings(allSettings, excludeExtensions);\n\tconst disallowedSettings = getDisallowedIgnoredSettings();\n\treturn distinct([...ignoredSettings, ...disallowedSettings]);\n}\n\nexport function getIgnoredSettingsForExtension(\n\tmanifest: IExtensionManifest,\n): string[] {\n\tif (!manifest.contributes?.configuration) {\n\t\treturn [];\n\t}\n\tconst configurations = Array.isArray(manifest.contributes.configuration)\n\t\t? manifest.contributes.configuration\n\t\t: [manifest.contributes.configuration];\n\tif (!configurations.length) {\n\t\treturn [];\n\t}\n\tconst properties = getAllConfigurationProperties(configurations);\n\treturn getIgnoredSettings(properties, false);\n}\n\nfunction getIgnoredSettings(\n\tproperties: IStringDictionary<IRegisteredConfigurationPropertySchema>,\n\texcludeExtensions: boolean,\n): string[] {\n\tconst ignoredSettings = new Set<string>();\n\tfor (const key in properties) {\n\t\tif (excludeExtensions && !!properties[key].source) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst scope = isString(properties[key].scope)\n\t\t\t? parseScope(properties[key].scope)\n\t\t\t: properties[key].scope;\n\t\tif (\n\t\t\tproperties[key].ignoreSync ||\n\t\t\tscope === ConfigurationScope.MACHINE ||\n\t\t\tscope === ConfigurationScope.MACHINE_OVERRIDABLE\n\t\t) {\n\t\t\tignoredSettings.add(key);\n\t\t}\n\t}\n\treturn [...ignoredSettings.values()];\n}\n\nexport const USER_DATA_SYNC_CONFIGURATION_SCOPE = \"settingsSync\";\n\nexport interface IUserDataSyncConfiguration {\n\tkeybindingsPerPlatform?: boolean;\n\tignoredExtensions?: string[];\n\tignoredSettings?: string[];\n}\n\nexport const CONFIG_SYNC_KEYBINDINGS_PER_PLATFORM =\n\t\"settingsSync.keybindingsPerPlatform\";\n\nexport function registerConfiguration(): IDisposable {\n\tconst ignoredSettingsSchemaId = \"vscode://schemas/ignoredSettings\";\n\tconst configurationRegistry = Registry.as<IConfigurationRegistry>(\n\t\tConfigurationExtensions.Configuration,\n\t);\n\tconfigurationRegistry.registerConfiguration({\n\t\tid: \"settingsSync\",\n\t\torder: 30,\n\t\ttitle: localize(\"settings sync\", \"Settings Sync\"),\n\t\ttype: \"object\",\n\t\tproperties: {\n\t\t\t[CONFIG_SYNC_KEYBINDINGS_PER_PLATFORM]: {\n\t\t\t\ttype: \"boolean\",\n\t\t\t\tdescription: localize(\n\t\t\t\t\t\"settingsSync.keybindingsPerPlatform\",\n\t\t\t\t\t\"Synchronize keybindings for each platform.\",\n\t\t\t\t),\n\t\t\t\tdefault: true,\n\t\t\t\tscope: ConfigurationScope.APPLICATION,\n\t\t\t\ttags: [\"sync\", \"usesOnlineServices\"],\n\t\t\t},\n\t\t\t\"settingsSync.ignoredExtensions\": {\n\t\t\t\ttype: \"array\",\n\t\t\t\tmarkdownDescription: localize(\n\t\t\t\t\t\"settingsSync.ignoredExtensions\",\n\t\t\t\t\t\"List of extensions to be ignored while synchronizing. The identifier of an extension is always `${publisher}.${name}`. For example: `vscode.csharp`.\",\n\t\t\t\t),\n\t\t\t\titems: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\tpattern: EXTENSION_IDENTIFIER_PATTERN,\n\t\t\t\t\t\terrorMessage: localize(\n\t\t\t\t\t\t\t\"app.extension.identifier.errorMessage\",\n\t\t\t\t\t\t\t\"Expected format '${publisher}.${name}'. Example: 'vscode.csharp'.\",\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tdefault: [],\n\t\t\t\tscope: ConfigurationScope.APPLICATION,\n\t\t\t\tuniqueItems: true,\n\t\t\t\tdisallowSyncIgnore: true,\n\t\t\t\ttags: [\"sync\", \"usesOnlineServices\"],\n\t\t\t},\n\t\t\t\"settingsSync.ignoredSettings\": {\n\t\t\t\ttype: \"array\",\n\t\t\t\tdescription: localize(\n\t\t\t\t\t\"settingsSync.ignoredSettings\",\n\t\t\t\t\t\"Configure settings to be ignored while synchronizing.\",\n\t\t\t\t),\n\t\t\t\tdefault: [],\n\t\t\t\tscope: ConfigurationScope.APPLICATION,\n\t\t\t\t$ref: ignoredSettingsSchemaId,\n\t\t\t\tadditionalProperties: true,\n\t\t\t\tuniqueItems: true,\n\t\t\t\tdisallowSyncIgnore: true,\n\t\t\t\ttags: [\"sync\", \"usesOnlineServices\"],\n\t\t\t},\n\t\t},\n\t});\n\tconst jsonRegistry = Registry.as<IJSONContributionRegistry>(\n\t\tJSONExtensions.JSONContribution,\n\t);\n\tconst registerIgnoredSettingsSchema = () => {\n\t\tconst disallowedIgnoredSettings = getDisallowedIgnoredSettings();\n\t\tconst defaultIgnoredSettings = getDefaultIgnoredSettings();\n\t\tconst settings = Object.keys(allSettings.properties).filter(\n\t\t\t(setting) => !defaultIgnoredSettings.includes(setting),\n\t\t);\n\t\tconst ignoredSettings = defaultIgnoredSettings.filter(\n\t\t\t(setting) => !disallowedIgnoredSettings.includes(setting),\n\t\t);\n\t\tconst ignoredSettingsSchema: IJSONSchema = {\n\t\t\titems: {\n\t\t\t\ttype: \"string\",\n\t\t\t\tenum: [\n\t\t\t\t\t...settings,\n\t\t\t\t\t...ignoredSettings.map((setting) => `-${setting}`),\n\t\t\t\t],\n\t\t\t},\n\t\t};\n\t\tjsonRegistry.registerSchema(\n\t\t\tignoredSettingsSchemaId,\n\t\t\tignoredSettingsSchema,\n\t\t);\n\t};\n\treturn configurationRegistry.onDidUpdateConfiguration(() =>\n\t\tregisterIgnoredSettingsSchema(),\n\t);\n}\n\n// #region User Data Sync Store\n\nexport interface IUserData {\n\tref: string;\n\tcontent: string | null;\n}\n\nexport type IAuthenticationProvider = { id: string; scopes: string[] };\n\nexport interface IUserDataSyncStore {\n\treadonly url: URI;\n\treadonly type: UserDataSyncStoreType;\n\treadonly defaultUrl: URI;\n\treadonly stableUrl: URI;\n\treadonly insidersUrl: URI;\n\treadonly canSwitch: boolean;\n\treadonly authenticationProviders: IAuthenticationProvider[];\n}\n\nexport function isAuthenticationProvider(\n\tthing: any,\n): thing is IAuthenticationProvider {\n\treturn (\n\t\tthing &&\n\t\tisObject(thing) &&\n\t\tisString(thing.id) &&\n\t\tArray.isArray(thing.scopes)\n\t);\n}\n\nexport enum SyncResource {\n\tSettings = \"settings\",\n\tKeybindings = \"keybindings\",\n\tSnippets = \"snippets\",\n\tTasks = \"tasks\",\n\tExtensions = \"extensions\",\n\tGlobalState = \"globalState\",\n\tProfiles = \"profiles\",\n\tWorkspaceState = \"workspaceState\",\n}\nexport const ALL_SYNC_RESOURCES: SyncResource[] = [\n\tSyncResource.Settings,\n\tSyncResource.Keybindings,\n\tSyncResource.Snippets,\n\tSyncResource.Tasks,\n\tSyncResource.Extensions,\n\tSyncResource.GlobalState,\n\tSyncResource.Profiles,\n];\n\nexport function getPathSegments(\n\tcollection: string | undefined,\n\t...paths: string[]\n): string[] {\n\treturn collection ? [collection, ...paths] : paths;\n}\n\nexport function getLastSyncResourceUri(\n\tcollection: string | undefined,\n\tsyncResource: SyncResource,\n\tenvironmentService: IEnvironmentService,\n\textUri: IExtUri,\n): URI {\n\treturn extUri.joinPath(\n\t\tenvironmentService.userDataSyncHome,\n\t\t...getPathSegments(\n\t\t\tcollection,\n\t\t\tsyncResource,\n\t\t\t`lastSync${syncResource}.json`,\n\t\t),\n\t);\n}\n\nexport type IUserDataResourceManifest = Record<ServerResource, string>;\n\nexport interface IUserDataCollectionManifest {\n\t[collectionId: string]: {\n\t\treadonly latest?: IUserDataResourceManifest;\n\t};\n}\n\nexport interface IUserDataManifest {\n\treadonly latest?: IUserDataResourceManifest;\n\treadonly session: string;\n\treadonly ref: string;\n\treadonly collections?: IUserDataCollectionManifest;\n}\n\nexport interface IUserDataActivityData {\n\tresources?: {\n\t\t[resourceId: string]: { created: number; content: string }[];\n\t};\n\tcollections?: {\n\t\t[collectionId: string]: {\n\t\t\tresources?:\n\t\t\t\t| {\n\t\t\t\t\t\t[resourceId: string]: {\n\t\t\t\t\t\t\tcreated: number;\n\t\t\t\t\t\t\tcontent: string;\n\t\t\t\t\t\t}[];\n\t\t\t\t  }\n\t\t\t\t| undefined;\n\t\t};\n\t};\n}\n\nexport interface IResourceRefHandle {\n\tref: string;\n\tcreated: number;\n}\n\nexport type ServerResource =\n\t| SyncResource\n\t| \"machines\"\n\t| \"editSessions\"\n\t| \"workspaceState\";\nexport type UserDataSyncStoreType = \"insiders\" | \"stable\";\n\nexport const IUserDataSyncStoreManagementService =\n\tcreateDecorator<IUserDataSyncStoreManagementService>(\n\t\t\"IUserDataSyncStoreManagementService\",\n\t);\nexport interface IUserDataSyncStoreManagementService {\n\treadonly _serviceBrand: undefined;\n\treadonly onDidChangeUserDataSyncStore: Event<void>;\n\treadonly userDataSyncStore: IUserDataSyncStore | undefined;\n\tswitch(type: UserDataSyncStoreType): Promise<void>;\n\tgetPreviousUserDataSyncStore(): Promise<IUserDataSyncStore | undefined>;\n}\n\nexport const IUserDataSyncStoreService =\n\tcreateDecorator<IUserDataSyncStoreService>(\"IUserDataSyncStoreService\");\nexport interface IUserDataSyncStoreService {\n\treadonly _serviceBrand: undefined;\n\treadonly onDidChangeDonotMakeRequestsUntil: Event<void>;\n\treadonly donotMakeRequestsUntil: Date | undefined;\n\n\treadonly onTokenFailed: Event<UserDataSyncErrorCode>;\n\treadonly onTokenSucceed: Event<void>;\n\tsetAuthToken(token: string, type: string): void;\n\n\tmanifest(\n\t\toldValue: IUserDataManifest | null,\n\t\theaders?: IHeaders,\n\t): Promise<IUserDataManifest | null>;\n\treadResource(\n\t\tresource: ServerResource,\n\t\toldValue: IUserData | null,\n\t\tcollection?: string,\n\t\theaders?: IHeaders,\n\t): Promise<IUserData>;\n\twriteResource(\n\t\tresource: ServerResource,\n\t\tcontent: string,\n\t\tref: string | null,\n\t\tcollection?: string,\n\t\theaders?: IHeaders,\n\t): Promise<string>;\n\tdeleteResource(\n\t\tresource: ServerResource,\n\t\tref: string | null,\n\t\tcollection?: string,\n\t): Promise<void>;\n\tgetAllResourceRefs(\n\t\tresource: ServerResource,\n\t\tcollection?: string,\n\t): Promise<IResourceRefHandle[]>;\n\tresolveResourceContent(\n\t\tresource: ServerResource,\n\t\tref: string,\n\t\tcollection?: string,\n\t\theaders?: IHeaders,\n\t): Promise<string | null>;\n\n\tgetAllCollections(headers?: IHeaders): Promise<string[]>;\n\tcreateCollection(headers?: IHeaders): Promise<string>;\n\tdeleteCollection(collection?: string, headers?: IHeaders): Promise<void>;\n\n\tgetActivityData(): Promise<VSBufferReadableStream>;\n\n\tclear(): Promise<void>;\n}\n\nexport const IUserDataSyncLocalStoreService =\n\tcreateDecorator<IUserDataSyncLocalStoreService>(\n\t\t\"IUserDataSyncLocalStoreService\",\n\t);\nexport interface IUserDataSyncLocalStoreService {\n\treadonly _serviceBrand: undefined;\n\twriteResource(\n\t\tresource: ServerResource,\n\t\tcontent: string,\n\t\tcTime: Date,\n\t\tcollection?: string,\n\t\troot?: URI,\n\t): Promise<void>;\n\tgetAllResourceRefs(\n\t\tresource: ServerResource,\n\t\tcollection?: string,\n\t\troot?: URI,\n\t): Promise<IResourceRefHandle[]>;\n\tresolveResourceContent(\n\t\tresource: ServerResource,\n\t\tref: string,\n\t\tcollection?: string,\n\t\troot?: URI,\n\t): Promise<string | null>;\n}\n\n//#endregion\n\n// #region User Data Sync Headers\n\nexport const HEADER_OPERATION_ID = \"x-operation-id\";\nexport const HEADER_EXECUTION_ID = \"X-Execution-Id\";\n\nexport function createSyncHeaders(executionId: string): IHeaders {\n\tconst headers: IHeaders = {};\n\theaders[HEADER_EXECUTION_ID] = executionId;\n\treturn headers;\n}\n\n//#endregion\n\n// #region User Data Sync Error\n\nexport enum UserDataSyncErrorCode {\n\t// Client Errors (>= 400 )\n\tUnauthorized = \"Unauthorized\" /* 401 */,\n\tForbidden = \"Forbidden\" /* 403 */,\n\tNotFound = \"NotFound\" /* 404 */,\n\tMethodNotFound = \"MethodNotFound\" /* 405 */,\n\tConflict = \"Conflict\" /* 409 */,\n\tGone = \"Gone\" /* 410 */,\n\tPreconditionFailed = \"PreconditionFailed\" /* 412 */,\n\tTooLarge = \"TooLarge\" /* 413 */,\n\tUpgradeRequired = \"UpgradeRequired\" /* 426 */,\n\tPreconditionRequired = \"PreconditionRequired\" /* 428 */,\n\tTooManyRequests = \"RemoteTooManyRequests\" /* 429 */,\n\tTooManyRequestsAndRetryAfter = \"TooManyRequestsAndRetryAfter\" /* 429 + Retry-After */,\n\n\t// Local Errors\n\tRequestFailed = \"RequestFailed\",\n\tRequestCanceled = \"RequestCanceled\",\n\tRequestTimeout = \"RequestTimeout\",\n\tRequestProtocolNotSupported = \"RequestProtocolNotSupported\",\n\tRequestPathNotEscaped = \"RequestPathNotEscaped\",\n\tRequestHeadersNotObject = \"RequestHeadersNotObject\",\n\tNoCollection = \"NoCollection\",\n\tNoRef = \"NoRef\",\n\tEmptyResponse = \"EmptyResponse\",\n\tTurnedOff = \"TurnedOff\",\n\tSessionExpired = \"SessionExpired\",\n\tServiceChanged = \"ServiceChanged\",\n\tDefaultServiceChanged = \"DefaultServiceChanged\",\n\tLocalTooManyProfiles = \"LocalTooManyProfiles\",\n\tLocalTooManyRequests = \"LocalTooManyRequests\",\n\tLocalPreconditionFailed = \"LocalPreconditionFailed\",\n\tLocalInvalidContent = \"LocalInvalidContent\",\n\tLocalError = \"LocalError\",\n\tIncompatibleLocalContent = \"IncompatibleLocalContent\",\n\tIncompatibleRemoteContent = \"IncompatibleRemoteContent\",\n\n\tUnknown = \"Unknown\",\n}\n\nexport class UserDataSyncError extends Error {\n\tconstructor(\n\t\tmessage: string,\n\t\treadonly code: UserDataSyncErrorCode,\n\t\treadonly resource?: SyncResource,\n\t\treadonly operationId?: string,\n\t) {\n\t\tsuper(message);\n\t\tthis.name = `${this.code} (UserDataSyncError) syncResource:${this.resource || \"unknown\"} operationId:${this.operationId || \"unknown\"}`;\n\t}\n}\n\nexport class UserDataSyncStoreError extends UserDataSyncError {\n\tconstructor(\n\t\tmessage: string,\n\t\treadonly url: string,\n\t\tcode: UserDataSyncErrorCode,\n\t\treadonly serverCode: number | undefined,\n\t\toperationId: string | undefined,\n\t) {\n\t\tsuper(message, code, undefined, operationId);\n\t}\n}\n\nexport class UserDataAutoSyncError extends UserDataSyncError {\n\tconstructor(message: string, code: UserDataSyncErrorCode) {\n\t\tsuper(message, code);\n\t}\n}\n\nexport namespace UserDataSyncError {\n\texport function toUserDataSyncError(error: Error): UserDataSyncError {\n\t\tif (error instanceof UserDataSyncError) {\n\t\t\treturn error;\n\t\t}\n\t\tconst match =\n\t\t\t/^(.+) \\(UserDataSyncError\\) syncResource:(.+) operationId:(.+)$/.exec(\n\t\t\t\terror.name,\n\t\t\t);\n\t\tif (match && match[1]) {\n\t\t\tconst syncResource =\n\t\t\t\tmatch[2] === \"unknown\" ? undefined : (match[2] as SyncResource);\n\t\t\tconst operationId = match[3] === \"unknown\" ? undefined : match[3];\n\t\t\treturn new UserDataSyncError(\n\t\t\t\terror.message,\n\t\t\t\t<UserDataSyncErrorCode>match[1],\n\t\t\t\tsyncResource,\n\t\t\t\toperationId,\n\t\t\t);\n\t\t}\n\t\treturn new UserDataSyncError(\n\t\t\terror.message,\n\t\t\tUserDataSyncErrorCode.Unknown,\n\t\t);\n\t}\n}\n\n//#endregion\n\n// #region User Data Synchroniser\n\nexport interface ISyncUserDataProfile {\n\treadonly id: string;\n\treadonly collection: string;\n\treadonly name: string;\n\treadonly shortName?: string;\n\treadonly icon?: string;\n\treadonly useDefaultFlags?: UseDefaultProfileFlags;\n}\n\nexport type ISyncExtension = ILocalSyncExtension | IRemoteSyncExtension;\n\nexport interface ILocalSyncExtension {\n\tidentifier: IExtensionIdentifier;\n\tpinned: boolean;\n\tversion: string;\n\tpreRelease: boolean;\n\tdisabled?: boolean;\n\tinstalled?: boolean;\n\tisApplicationScoped?: boolean;\n\tstate?: IStringDictionary<any>;\n}\n\nexport interface IRemoteSyncExtension {\n\tidentifier: IExtensionIdentifier;\n\tversion: string;\n\tpinned?: boolean;\n\tpreRelease?: boolean;\n\tdisabled?: boolean;\n\tinstalled?: boolean;\n\tisApplicationScoped?: boolean;\n\tstate?: IStringDictionary<any>;\n}\n\nexport interface IStorageValue {\n\tversion: number;\n\tvalue: string;\n}\n\nexport interface IGlobalState {\n\tstorage: IStringDictionary<IStorageValue>;\n}\n\nexport interface IWorkspaceState {\n\tfolders: IWorkspaceStateFolder[];\n\tstorage: IStringDictionary<string>;\n\tversion: number;\n}\n\nexport interface IWorkspaceStateFolder {\n\tresourceUri: string;\n\tworkspaceFolderIdentity: string;\n}\n\nexport enum SyncStatus {\n\tUninitialized = \"uninitialized\",\n\tIdle = \"idle\",\n\tSyncing = \"syncing\",\n\tHasConflicts = \"hasConflicts\",\n}\n\nexport interface ISyncResourceHandle {\n\tcreated: number;\n\turi: URI;\n}\n\nexport interface IRemoteUserData {\n\tref: string;\n\tsyncData: ISyncData | null;\n}\n\nexport interface ISyncData {\n\tversion: number;\n\tmachineId?: string;\n\tcontent: string;\n}\n\nexport enum Change {\n\tNone = 0,\n\tAdded = 1,\n\tModified = 2,\n\tDeleted = 3,\n}\n\nexport enum MergeState {\n\tPreview = \"preview\",\n\tConflict = \"conflict\",\n\tAccepted = \"accepted\",\n}\n\nexport interface IResourcePreview {\n\treadonly baseResource: URI;\n\treadonly remoteResource: URI;\n\treadonly localResource: URI;\n\treadonly previewResource: URI;\n\treadonly acceptedResource: URI;\n\treadonly localChange: Change;\n\treadonly remoteChange: Change;\n\treadonly mergeState: MergeState;\n}\n\nexport interface IUserDataSyncResource {\n\treadonly syncResource: SyncResource;\n\treadonly profile: IUserDataProfile;\n}\n\nexport interface IUserDataSyncResourceConflicts extends IUserDataSyncResource {\n\treadonly conflicts: IResourcePreview[];\n}\n\nexport interface IUserDataSyncResourcePreview extends IUserDataSyncResource {\n\treadonly isLastSyncFromCurrentMachine: boolean;\n\treadonly resourcePreviews: IResourcePreview[];\n}\n\nexport interface IUserDataSyncResourceError extends IUserDataSyncResource {\n\treadonly error: UserDataSyncError;\n}\n\nexport interface IUserDataSyncResourceInitializer {\n\tinitialize(userData: IUserData): Promise<void>;\n}\n\nexport interface IUserDataSynchroniser {\n\treadonly resource: SyncResource;\n\treadonly status: SyncStatus;\n\treadonly onDidChangeStatus: Event<SyncStatus>;\n\n\treadonly conflicts: IUserDataSyncResourceConflicts;\n\treadonly onDidChangeConflicts: Event<IUserDataSyncResourceConflicts>;\n\n\treadonly onDidChangeLocal: Event<void>;\n\n\tsync(\n\t\tmanifest: IUserDataResourceManifest | null,\n\t\theaders: IHeaders,\n\t): Promise<void>;\n\tstop(): Promise<void>;\n\n\tpreview(\n\t\tmanifest: IUserDataResourceManifest | null,\n\t\tuserDataSyncConfiguration: IUserDataSyncConfiguration,\n\t\theaders: IHeaders,\n\t): Promise<IUserDataSyncResourcePreview | null>;\n\taccept(\n\t\tresource: URI,\n\t\tcontent?: string | null,\n\t): Promise<IUserDataSyncResourcePreview | null>;\n\tmerge(resource: URI): Promise<IUserDataSyncResourcePreview | null>;\n\tdiscard(resource: URI): Promise<IUserDataSyncResourcePreview | null>;\n\tapply(\n\t\tforce: boolean,\n\t\theaders: IHeaders,\n\t): Promise<IUserDataSyncResourcePreview | null>;\n\n\thasPreviouslySynced(): Promise<boolean>;\n\thasLocalData(): Promise<boolean>;\n\tresetLocal(): Promise<void>;\n\n\tresolveContent(resource: URI): Promise<string | null>;\n\treplace(content: string): Promise<boolean>;\n}\n\n//#endregion\n\n// #region keys synced only in web\n\nexport const SYNC_SERVICE_URL_TYPE = \"sync.store.url.type\";\nexport function getEnablementKey(resource: SyncResource) {\n\treturn `sync.enable.${resource}`;\n}\n\n// #endregion\n\n// #region User Data Sync Services\nexport const IUserDataSyncEnablementService =\n\tcreateDecorator<IUserDataSyncEnablementService>(\n\t\t\"IUserDataSyncEnablementService\",\n\t);\nexport interface IUserDataSyncEnablementService {\n\t_serviceBrand: any;\n\n\treadonly onDidChangeEnablement: Event<boolean>;\n\tisEnabled(): boolean;\n\tcanToggleEnablement(): boolean;\n\tsetEnablement(enabled: boolean): void;\n\n\treadonly onDidChangeResourceEnablement: Event<[SyncResource, boolean]>;\n\tisResourceEnabled(resource: SyncResource): boolean;\n\tsetResourceEnablement(resource: SyncResource, enabled: boolean): void;\n\n\tgetResourceSyncStateVersion(resource: SyncResource): string | undefined;\n}\n\nexport interface IUserDataSyncTask {\n\treadonly manifest: IUserDataManifest | null;\n\trun(): Promise<void>;\n\tstop(): Promise<void>;\n}\n\nexport interface IUserDataManualSyncTask {\n\treadonly id: string;\n\tmerge(): Promise<void>;\n\tapply(): Promise<void>;\n\tstop(): Promise<void>;\n}\n\nexport const IUserDataSyncService = createDecorator<IUserDataSyncService>(\n\t\"IUserDataSyncService\",\n);\nexport interface IUserDataSyncService {\n\t_serviceBrand: any;\n\n\treadonly status: SyncStatus;\n\treadonly onDidChangeStatus: Event<SyncStatus>;\n\n\treadonly conflicts: IUserDataSyncResourceConflicts[];\n\treadonly onDidChangeConflicts: Event<IUserDataSyncResourceConflicts[]>;\n\n\treadonly onDidChangeLocal: Event<SyncResource>;\n\treadonly onSyncErrors: Event<IUserDataSyncResourceError[]>;\n\n\treadonly lastSyncTime: number | undefined;\n\treadonly onDidChangeLastSyncTime: Event<number>;\n\n\treadonly onDidResetRemote: Event<void>;\n\treadonly onDidResetLocal: Event<void>;\n\n\tcreateSyncTask(\n\t\tmanifest: IUserDataManifest | null,\n\t\tdisableCache?: boolean,\n\t): Promise<IUserDataSyncTask>;\n\tcreateManualSyncTask(): Promise<IUserDataManualSyncTask>;\n\tresolveContent(resource: URI): Promise<string | null>;\n\taccept(\n\t\tsyncResource: IUserDataSyncResource,\n\t\tresource: URI,\n\t\tcontent: string | null | undefined,\n\t\tapply: boolean | { force: boolean },\n\t): Promise<void>;\n\n\treset(): Promise<void>;\n\tresetRemote(): Promise<void>;\n\tcleanUpRemoteData(): Promise<void>;\n\tresetLocal(): Promise<void>;\n\thasLocalData(): Promise<boolean>;\n\thasPreviouslySynced(): Promise<boolean>;\n\n\treplace(syncResourceHandle: ISyncResourceHandle): Promise<void>;\n\n\tsaveRemoteActivityData(location: URI): Promise<void>;\n\textractActivityData(\n\t\tactivityDataResource: URI,\n\t\tlocation: URI,\n\t): Promise<void>;\n}\n\nexport const IUserDataSyncResourceProviderService =\n\tcreateDecorator<IUserDataSyncResourceProviderService>(\n\t\t\"IUserDataSyncResourceProviderService\",\n\t);\nexport interface IUserDataSyncResourceProviderService {\n\t_serviceBrand: any;\n\tgetRemoteSyncedProfiles(): Promise<ISyncUserDataProfile[]>;\n\tgetLocalSyncedProfiles(location?: URI): Promise<ISyncUserDataProfile[]>;\n\tgetRemoteSyncResourceHandles(\n\t\tsyncResource: SyncResource,\n\t\tprofile?: ISyncUserDataProfile,\n\t): Promise<ISyncResourceHandle[]>;\n\tgetLocalSyncResourceHandles(\n\t\tsyncResource: SyncResource,\n\t\tprofile?: ISyncUserDataProfile,\n\t\tlocation?: URI,\n\t): Promise<ISyncResourceHandle[]>;\n\tgetAssociatedResources(\n\t\tsyncResourceHandle: ISyncResourceHandle,\n\t): Promise<{ resource: URI; comparableResource: URI }[]>;\n\tgetMachineId(\n\t\tsyncResourceHandle: ISyncResourceHandle,\n\t): Promise<string | undefined>;\n\tgetLocalSyncedMachines(location?: URI): Promise<IUserDataSyncMachine[]>;\n\tresolveContent(resource: URI): Promise<string | null>;\n\tresolveUserDataSyncResource(\n\t\tsyncResourceHandle: ISyncResourceHandle,\n\t): IUserDataSyncResource | undefined;\n}\n\nexport const IUserDataAutoSyncService =\n\tcreateDecorator<IUserDataAutoSyncService>(\"IUserDataAutoSyncService\");\nexport interface IUserDataAutoSyncService {\n\t_serviceBrand: any;\n\treadonly onError: Event<UserDataSyncError>;\n\tturnOn(): Promise<void>;\n\tturnOff(everywhere: boolean): Promise<void>;\n\ttriggerSync(\n\t\tsources: string[],\n\t\thasToLimitSync: boolean,\n\t\tdisableCache: boolean,\n\t): Promise<void>;\n}\n\nexport const IUserDataSyncUtilService =\n\tcreateDecorator<IUserDataSyncUtilService>(\"IUserDataSyncUtilService\");\nexport interface IUserDataSyncUtilService {\n\treadonly _serviceBrand: undefined;\n\tresolveUserBindings(\n\t\tuserbindings: string[],\n\t): Promise<IStringDictionary<string>>;\n\tresolveFormattingOptions(resource: URI): Promise<FormattingOptions>;\n\tresolveDefaultCoreIgnoredSettings(): Promise<string[]>;\n}\n\nexport const IUserDataSyncLogService = createDecorator<IUserDataSyncLogService>(\n\t\"IUserDataSyncLogService\",\n);\nexport interface IUserDataSyncLogService extends ILogService {}\n\nexport interface IConflictSetting {\n\tkey: string;\n\tlocalValue: any | undefined;\n\tremoteValue: any | undefined;\n}\n\n//#endregion\n\nexport const USER_DATA_SYNC_LOG_ID = \"userDataSync\";\nexport const USER_DATA_SYNC_SCHEME = \"vscode-userdata-sync\";\nexport const PREVIEW_DIR_NAME = \"preview\";\n"],
  "mappings": "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",
  "names": ["allSettings", "SyncResource", "UserDataSyncErrorCode", "UserDataSyncError", "SyncStatus", "Change", "MergeState"]
}
