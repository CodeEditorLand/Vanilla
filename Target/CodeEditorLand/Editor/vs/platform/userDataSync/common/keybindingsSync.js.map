{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/userDataSync/common/keybindingsSync.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isNonEmptyArray } from \"../../../base/common/arrays.js\";\nimport { VSBuffer } from \"../../../base/common/buffer.js\";\nimport type { CancellationToken } from \"../../../base/common/cancellation.js\";\nimport { Event } from \"../../../base/common/event.js\";\nimport { parse } from \"../../../base/common/json.js\";\nimport { OS, OperatingSystem } from \"../../../base/common/platform.js\";\nimport { isUndefined } from \"../../../base/common/types.js\";\nimport type { URI } from \"../../../base/common/uri.js\";\nimport { localize } from \"../../../nls.js\";\nimport { IConfigurationService } from \"../../configuration/common/configuration.js\";\nimport { IEnvironmentService } from \"../../environment/common/environment.js\";\nimport {\n\ttype FileOperationError,\n\tFileOperationResult,\n\tIFileService,\n} from \"../../files/common/files.js\";\nimport type { ILogService } from \"../../log/common/log.js\";\nimport { IStorageService } from \"../../storage/common/storage.js\";\nimport { ITelemetryService } from \"../../telemetry/common/telemetry.js\";\nimport { IUriIdentityService } from \"../../uriIdentity/common/uriIdentity.js\";\nimport {\n\ttype IUserDataProfile,\n\tIUserDataProfilesService,\n} from \"../../userDataProfile/common/userDataProfile.js\";\nimport {\n\tAbstractInitializer,\n\tAbstractJsonFileSynchroniser,\n\ttype IAcceptResult,\n\ttype IFileResourcePreview,\n\ttype IMergeResult,\n} from \"./abstractSynchronizer.js\";\nimport { merge } from \"./keybindingsMerge.js\";\nimport {\n\tCONFIG_SYNC_KEYBINDINGS_PER_PLATFORM,\n\tChange,\n\ttype IRemoteUserData,\n\ttype IUserDataSyncConfiguration,\n\tIUserDataSyncEnablementService,\n\tIUserDataSyncLocalStoreService,\n\tIUserDataSyncLogService,\n\tIUserDataSyncStoreService,\n\tIUserDataSyncUtilService,\n\ttype IUserDataSynchroniser,\n\tSyncResource,\n\tUSER_DATA_SYNC_SCHEME,\n\tUserDataSyncError,\n\tUserDataSyncErrorCode,\n} from \"./userDataSync.js\";\n\ninterface ISyncContent {\n\tmac?: string;\n\tlinux?: string;\n\twindows?: string;\n\tall?: string;\n}\n\ninterface IKeybindingsResourcePreview extends IFileResourcePreview {\n\tpreviewResult: IMergeResult;\n}\n\ninterface ILastSyncUserData extends IRemoteUserData {\n\tplatformSpecific?: boolean;\n}\n\nexport function getKeybindingsContentFromSyncContent(\n\tsyncContent: string,\n\tplatformSpecific: boolean,\n\tlogService: ILogService,\n): string | null {\n\ttry {\n\t\tconst parsed = <ISyncContent>JSON.parse(syncContent);\n\t\tif (!platformSpecific) {\n\t\t\treturn isUndefined(parsed.all) ? null : parsed.all;\n\t\t}\n\t\tswitch (OS) {\n\t\t\tcase OperatingSystem.Macintosh:\n\t\t\t\treturn isUndefined(parsed.mac) ? null : parsed.mac;\n\t\t\tcase OperatingSystem.Linux:\n\t\t\t\treturn isUndefined(parsed.linux) ? null : parsed.linux;\n\t\t\tcase OperatingSystem.Windows:\n\t\t\t\treturn isUndefined(parsed.windows) ? null : parsed.windows;\n\t\t}\n\t} catch (e) {\n\t\tlogService.error(e);\n\t\treturn null;\n\t}\n}\n\nexport class KeybindingsSynchroniser\n\textends AbstractJsonFileSynchroniser\n\timplements IUserDataSynchroniser\n{\n\t/* Version 2: Change settings from `sync.${setting}` to `settingsSync.{setting}` */\n\tprotected readonly version: number = 2;\n\tprivate readonly previewResource: URI = this.extUri.joinPath(\n\t\tthis.syncPreviewFolder,\n\t\t\"keybindings.json\",\n\t);\n\tprivate readonly baseResource: URI = this.previewResource.with({\n\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\tauthority: \"base\",\n\t});\n\tprivate readonly localResource: URI = this.previewResource.with({\n\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\tauthority: \"local\",\n\t});\n\tprivate readonly remoteResource: URI = this.previewResource.with({\n\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\tauthority: \"remote\",\n\t});\n\tprivate readonly acceptedResource: URI = this.previewResource.with({\n\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\tauthority: \"accepted\",\n\t});\n\n\tconstructor(\n\t\tprofile: IUserDataProfile,\n\t\tcollection: string | undefined,\n\t\t@IUserDataSyncStoreService userDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncLocalStoreService userDataSyncLocalStoreService: IUserDataSyncLocalStoreService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IUserDataSyncEnablementService userDataSyncEnablementService: IUserDataSyncEnablementService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IUserDataSyncUtilService userDataSyncUtilService: IUserDataSyncUtilService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(\n\t\t\tprofile.keybindingsResource,\n\t\t\t{ syncResource: SyncResource.Keybindings, profile },\n\t\t\tcollection,\n\t\t\tfileService,\n\t\t\tenvironmentService,\n\t\t\tstorageService,\n\t\t\tuserDataSyncStoreService,\n\t\t\tuserDataSyncLocalStoreService,\n\t\t\tuserDataSyncEnablementService,\n\t\t\ttelemetryService,\n\t\t\tlogService,\n\t\t\tuserDataSyncUtilService,\n\t\t\tconfigurationService,\n\t\t\turiIdentityService,\n\t\t);\n\t\tthis._register(\n\t\t\tEvent.filter(configurationService.onDidChangeConfiguration, (e) =>\n\t\t\t\te.affectsConfiguration(\"settingsSync.keybindingsPerPlatform\"),\n\t\t\t)(() => this.triggerLocalChange()),\n\t\t);\n\t}\n\n\tprotected async generateSyncPreview(\n\t\tremoteUserData: IRemoteUserData,\n\t\tlastSyncUserData: ILastSyncUserData | null,\n\t\tisRemoteDataFromCurrentMachine: boolean,\n\t\tuserDataSyncConfiguration: IUserDataSyncConfiguration,\n\t): Promise<IKeybindingsResourcePreview[]> {\n\t\tconst remoteContent = remoteUserData.syncData\n\t\t\t? getKeybindingsContentFromSyncContent(\n\t\t\t\t\tremoteUserData.syncData.content,\n\t\t\t\t\tuserDataSyncConfiguration.keybindingsPerPlatform ??\n\t\t\t\t\t\tthis.syncKeybindingsPerPlatform(),\n\t\t\t\t\tthis.logService,\n\t\t\t\t)\n\t\t\t: null;\n\n\t\t// Use remote data as last sync data if last sync data does not exist and remote data is from same machine\n\t\tlastSyncUserData =\n\t\t\tlastSyncUserData === null && isRemoteDataFromCurrentMachine\n\t\t\t\t? remoteUserData\n\t\t\t\t: lastSyncUserData;\n\t\tconst lastSyncContent: string | null = lastSyncUserData\n\t\t\t? this.getKeybindingsContentFromLastSyncUserData(lastSyncUserData)\n\t\t\t: null;\n\n\t\t// Get file content last to get the latest\n\t\tconst fileContent = await this.getLocalFileContent();\n\t\tconst formattingOptions = await this.getFormattingOptions();\n\n\t\tlet mergedContent: string | null = null;\n\t\tlet hasLocalChanged = false;\n\t\tlet hasRemoteChanged = false;\n\t\tlet hasConflicts = false;\n\n\t\tif (remoteContent) {\n\t\t\tlet localContent: string = fileContent\n\t\t\t\t? fileContent.value.toString()\n\t\t\t\t: \"[]\";\n\t\t\tlocalContent = localContent || \"[]\";\n\t\t\tif (this.hasErrors(localContent, true)) {\n\t\t\t\tthrow new UserDataSyncError(\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"errorInvalidSettings\",\n\t\t\t\t\t\t\"Unable to sync keybindings because the content in the file is not valid. Please open the file and correct it.\",\n\t\t\t\t\t),\n\t\t\t\t\tUserDataSyncErrorCode.LocalInvalidContent,\n\t\t\t\t\tthis.resource,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t!lastSyncContent || // First time sync\n\t\t\t\tlastSyncContent !== localContent || // Local has forwarded\n\t\t\t\tlastSyncContent !== remoteContent // Remote has forwarded\n\t\t\t) {\n\t\t\t\tthis.logService.trace(\n\t\t\t\t\t`${this.syncResourceLogLabel}: Merging remote keybindings with local keybindings...`,\n\t\t\t\t);\n\t\t\t\tconst result = await merge(\n\t\t\t\t\tlocalContent,\n\t\t\t\t\tremoteContent,\n\t\t\t\t\tlastSyncContent,\n\t\t\t\t\tformattingOptions,\n\t\t\t\t\tthis.userDataSyncUtilService,\n\t\t\t\t);\n\t\t\t\t// Sync only if there are changes\n\t\t\t\tif (result.hasChanges) {\n\t\t\t\t\tmergedContent = result.mergeContent;\n\t\t\t\t\thasConflicts = result.hasConflicts;\n\t\t\t\t\thasLocalChanged =\n\t\t\t\t\t\thasConflicts || result.mergeContent !== localContent;\n\t\t\t\t\thasRemoteChanged =\n\t\t\t\t\t\thasConflicts || result.mergeContent !== remoteContent;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// First time syncing to remote\n\t\telse if (fileContent) {\n\t\t\tthis.logService.trace(\n\t\t\t\t`${this.syncResourceLogLabel}: Remote keybindings does not exist. Synchronizing keybindings for the first time.`,\n\t\t\t);\n\t\t\tmergedContent = fileContent.value.toString();\n\t\t\thasRemoteChanged = true;\n\t\t}\n\n\t\tconst previewResult: IMergeResult = {\n\t\t\tcontent: hasConflicts ? lastSyncContent : mergedContent,\n\t\t\tlocalChange: hasLocalChanged\n\t\t\t\t? fileContent\n\t\t\t\t\t? Change.Modified\n\t\t\t\t\t: Change.Added\n\t\t\t\t: Change.None,\n\t\t\tremoteChange: hasRemoteChanged ? Change.Modified : Change.None,\n\t\t\thasConflicts,\n\t\t};\n\n\t\tconst localContent = fileContent ? fileContent.value.toString() : null;\n\t\treturn [\n\t\t\t{\n\t\t\t\tfileContent,\n\n\t\t\t\tbaseResource: this.baseResource,\n\t\t\t\tbaseContent: lastSyncContent,\n\n\t\t\t\tlocalResource: this.localResource,\n\t\t\t\tlocalContent,\n\t\t\t\tlocalChange: previewResult.localChange,\n\n\t\t\t\tremoteResource: this.remoteResource,\n\t\t\t\tremoteContent,\n\t\t\t\tremoteChange: previewResult.remoteChange,\n\n\t\t\t\tpreviewResource: this.previewResource,\n\t\t\t\tpreviewResult,\n\t\t\t\tacceptedResource: this.acceptedResource,\n\t\t\t},\n\t\t];\n\t}\n\n\tprotected async hasRemoteChanged(\n\t\tlastSyncUserData: IRemoteUserData,\n\t): Promise<boolean> {\n\t\tconst lastSyncContent =\n\t\t\tthis.getKeybindingsContentFromLastSyncUserData(lastSyncUserData);\n\t\tif (lastSyncContent === null) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst fileContent = await this.getLocalFileContent();\n\t\tconst localContent: string = fileContent\n\t\t\t? fileContent.value.toString()\n\t\t\t: \"\";\n\t\tconst formattingOptions = await this.getFormattingOptions();\n\t\tconst result = await merge(\n\t\t\tlocalContent || \"[]\",\n\t\t\tlastSyncContent,\n\t\t\tlastSyncContent,\n\t\t\tformattingOptions,\n\t\t\tthis.userDataSyncUtilService,\n\t\t);\n\t\treturn result.hasConflicts || result.mergeContent !== lastSyncContent;\n\t}\n\n\tprotected async getMergeResult(\n\t\tresourcePreview: IKeybindingsResourcePreview,\n\t\ttoken: CancellationToken,\n\t): Promise<IMergeResult> {\n\t\treturn resourcePreview.previewResult;\n\t}\n\n\tprotected async getAcceptResult(\n\t\tresourcePreview: IKeybindingsResourcePreview,\n\t\tresource: URI,\n\t\tcontent: string | null | undefined,\n\t\ttoken: CancellationToken,\n\t): Promise<IAcceptResult> {\n\t\t/* Accept local resource */\n\t\tif (this.extUri.isEqual(resource, this.localResource)) {\n\t\t\treturn {\n\t\t\t\tcontent: resourcePreview.fileContent\n\t\t\t\t\t? resourcePreview.fileContent.value.toString()\n\t\t\t\t\t: null,\n\t\t\t\tlocalChange: Change.None,\n\t\t\t\tremoteChange: Change.Modified,\n\t\t\t};\n\t\t}\n\n\t\t/* Accept remote resource */\n\t\tif (this.extUri.isEqual(resource, this.remoteResource)) {\n\t\t\treturn {\n\t\t\t\tcontent: resourcePreview.remoteContent,\n\t\t\t\tlocalChange: Change.Modified,\n\t\t\t\tremoteChange: Change.None,\n\t\t\t};\n\t\t}\n\n\t\t/* Accept preview resource */\n\t\tif (this.extUri.isEqual(resource, this.previewResource)) {\n\t\t\tif (content === undefined) {\n\t\t\t\treturn {\n\t\t\t\t\tcontent: resourcePreview.previewResult.content,\n\t\t\t\t\tlocalChange: resourcePreview.previewResult.localChange,\n\t\t\t\t\tremoteChange: resourcePreview.previewResult.remoteChange,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\tcontent,\n\t\t\t\t\tlocalChange: Change.Modified,\n\t\t\t\t\tremoteChange: Change.Modified,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(`Invalid Resource: ${resource.toString()}`);\n\t}\n\n\tprotected async applyResult(\n\t\tremoteUserData: IRemoteUserData,\n\t\tlastSyncUserData: IRemoteUserData | null,\n\t\tresourcePreviews: [IKeybindingsResourcePreview, IAcceptResult][],\n\t\tforce: boolean,\n\t): Promise<void> {\n\t\tconst { fileContent } = resourcePreviews[0][0];\n\t\tlet { content, localChange, remoteChange } = resourcePreviews[0][1];\n\n\t\tif (localChange === Change.None && remoteChange === Change.None) {\n\t\t\tthis.logService.info(\n\t\t\t\t`${this.syncResourceLogLabel}: No changes found during synchronizing keybindings.`,\n\t\t\t);\n\t\t}\n\n\t\tif (content !== null) {\n\t\t\tcontent = content.trim();\n\t\t\tcontent = content || \"[]\";\n\t\t\tif (this.hasErrors(content, true)) {\n\t\t\t\tthrow new UserDataSyncError(\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"errorInvalidSettings\",\n\t\t\t\t\t\t\"Unable to sync keybindings because the content in the file is not valid. Please open the file and correct it.\",\n\t\t\t\t\t),\n\t\t\t\t\tUserDataSyncErrorCode.LocalInvalidContent,\n\t\t\t\t\tthis.resource,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (localChange !== Change.None) {\n\t\t\tthis.logService.trace(\n\t\t\t\t`${this.syncResourceLogLabel}: Updating local keybindings...`,\n\t\t\t);\n\t\t\tif (fileContent) {\n\t\t\t\tawait this.backupLocal(\n\t\t\t\t\tthis.toSyncContent(fileContent.value.toString()),\n\t\t\t\t);\n\t\t\t}\n\t\t\tawait this.updateLocalFileContent(\n\t\t\t\tcontent || \"[]\",\n\t\t\t\tfileContent,\n\t\t\t\tforce,\n\t\t\t);\n\t\t\tthis.logService.info(\n\t\t\t\t`${this.syncResourceLogLabel}: Updated local keybindings`,\n\t\t\t);\n\t\t}\n\n\t\tif (remoteChange !== Change.None) {\n\t\t\tthis.logService.trace(\n\t\t\t\t`${this.syncResourceLogLabel}: Updating remote keybindings...`,\n\t\t\t);\n\t\t\tconst remoteContents = this.toSyncContent(\n\t\t\t\tcontent || \"[]\",\n\t\t\t\tremoteUserData.syncData?.content,\n\t\t\t);\n\t\t\tremoteUserData = await this.updateRemoteUserData(\n\t\t\t\tremoteContents,\n\t\t\t\tforce ? null : remoteUserData.ref,\n\t\t\t);\n\t\t\tthis.logService.info(\n\t\t\t\t`${this.syncResourceLogLabel}: Updated remote keybindings`,\n\t\t\t);\n\t\t}\n\n\t\t// Delete the preview\n\t\ttry {\n\t\t\tawait this.fileService.del(this.previewResource);\n\t\t} catch (e) {\n\t\t\t/* ignore */\n\t\t}\n\n\t\tif (lastSyncUserData?.ref !== remoteUserData.ref) {\n\t\t\tthis.logService.trace(\n\t\t\t\t`${this.syncResourceLogLabel}: Updating last synchronized keybindings...`,\n\t\t\t);\n\t\t\tawait this.updateLastSyncUserData(remoteUserData, {\n\t\t\t\tplatformSpecific: this.syncKeybindingsPerPlatform(),\n\t\t\t});\n\t\t\tthis.logService.info(\n\t\t\t\t`${this.syncResourceLogLabel}: Updated last synchronized keybindings`,\n\t\t\t);\n\t\t}\n\t}\n\n\tasync hasLocalData(): Promise<boolean> {\n\t\ttry {\n\t\t\tconst localFileContent = await this.getLocalFileContent();\n\t\t\tif (localFileContent) {\n\t\t\t\tconst keybindings = parse(localFileContent.value.toString());\n\t\t\t\tif (isNonEmptyArray(keybindings)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (\n\t\t\t\t(<FileOperationError>error).fileOperationResult !==\n\t\t\t\tFileOperationResult.FILE_NOT_FOUND\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tasync resolveContent(uri: URI): Promise<string | null> {\n\t\tif (\n\t\t\tthis.extUri.isEqual(this.remoteResource, uri) ||\n\t\t\tthis.extUri.isEqual(this.baseResource, uri) ||\n\t\t\tthis.extUri.isEqual(this.localResource, uri) ||\n\t\t\tthis.extUri.isEqual(this.acceptedResource, uri)\n\t\t) {\n\t\t\treturn this.resolvePreviewContent(uri);\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate getKeybindingsContentFromLastSyncUserData(\n\t\tlastSyncUserData: ILastSyncUserData,\n\t): string | null {\n\t\tif (!lastSyncUserData.syncData) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Return null if there is a change in platform specific property from last time sync.\n\t\tif (\n\t\t\tlastSyncUserData.platformSpecific !== undefined &&\n\t\t\tlastSyncUserData.platformSpecific !==\n\t\t\t\tthis.syncKeybindingsPerPlatform()\n\t\t) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn getKeybindingsContentFromSyncContent(\n\t\t\tlastSyncUserData.syncData.content,\n\t\t\tthis.syncKeybindingsPerPlatform(),\n\t\t\tthis.logService,\n\t\t);\n\t}\n\n\tprivate toSyncContent(\n\t\tkeybindingsContent: string,\n\t\tsyncContent?: string,\n\t): string {\n\t\tlet parsed: ISyncContent = {};\n\t\ttry {\n\t\t\tparsed = JSON.parse(syncContent || \"{}\");\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t}\n\t\tif (this.syncKeybindingsPerPlatform()) {\n\t\t\tdelete parsed.all;\n\t\t} else {\n\t\t\tparsed.all = keybindingsContent;\n\t\t}\n\t\tswitch (OS) {\n\t\t\tcase OperatingSystem.Macintosh:\n\t\t\t\tparsed.mac = keybindingsContent;\n\t\t\t\tbreak;\n\t\t\tcase OperatingSystem.Linux:\n\t\t\t\tparsed.linux = keybindingsContent;\n\t\t\t\tbreak;\n\t\t\tcase OperatingSystem.Windows:\n\t\t\t\tparsed.windows = keybindingsContent;\n\t\t\t\tbreak;\n\t\t}\n\t\treturn JSON.stringify(parsed);\n\t}\n\n\tprivate syncKeybindingsPerPlatform(): boolean {\n\t\treturn !!this.configurationService.getValue(\n\t\t\tCONFIG_SYNC_KEYBINDINGS_PER_PLATFORM,\n\t\t);\n\t}\n}\n\nexport class KeybindingsInitializer extends AbstractInitializer {\n\tconstructor(\n\t\t@IFileService fileService: IFileService,\n\t\t@IUserDataProfilesService userDataProfilesService: IUserDataProfilesService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(\n\t\t\tSyncResource.Keybindings,\n\t\t\tuserDataProfilesService,\n\t\t\tenvironmentService,\n\t\t\tlogService,\n\t\t\tfileService,\n\t\t\tstorageService,\n\t\t\turiIdentityService,\n\t\t);\n\t}\n\n\tprotected async doInitialize(\n\t\tremoteUserData: IRemoteUserData,\n\t): Promise<void> {\n\t\tconst keybindingsContent = remoteUserData.syncData\n\t\t\t? this.getKeybindingsContentFromSyncContent(\n\t\t\t\t\tremoteUserData.syncData.content,\n\t\t\t\t)\n\t\t\t: null;\n\t\tif (!keybindingsContent) {\n\t\t\tthis.logService.info(\n\t\t\t\t\"Skipping initializing keybindings because remote keybindings does not exist.\",\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tconst isEmpty = await this.isEmpty();\n\t\tif (!isEmpty) {\n\t\t\tthis.logService.info(\n\t\t\t\t\"Skipping initializing keybindings because local keybindings exist.\",\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.fileService.writeFile(\n\t\t\tthis.userDataProfilesService.defaultProfile.keybindingsResource,\n\t\t\tVSBuffer.fromString(keybindingsContent),\n\t\t);\n\n\t\tawait this.updateLastSyncUserData(remoteUserData);\n\t}\n\n\tprivate async isEmpty(): Promise<boolean> {\n\t\ttry {\n\t\t\tconst fileContent = await this.fileService.readFile(\n\t\t\t\tthis.userDataProfilesService.defaultProfile.settingsResource,\n\t\t\t);\n\t\t\tconst keybindings = parse(fileContent.value.toString());\n\t\t\treturn !isNonEmptyArray(keybindings);\n\t\t} catch (error) {\n\t\t\treturn (\n\t\t\t\t(<FileOperationError>error).fileOperationResult ===\n\t\t\t\tFileOperationResult.FILE_NOT_FOUND\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate getKeybindingsContentFromSyncContent(\n\t\tsyncContent: string,\n\t): string | null {\n\t\ttry {\n\t\t\treturn getKeybindingsContentFromSyncContent(\n\t\t\t\tsyncContent,\n\t\t\t\ttrue,\n\t\t\t\tthis.logService,\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t\treturn null;\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": ["localContent"]
}
