{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/userDataSync/common/snippetsSync.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from \"../../../base/common/buffer.js\";\nimport type { CancellationToken } from \"../../../base/common/cancellation.js\";\nimport type { IStringDictionary } from \"../../../base/common/collections.js\";\nimport { Event } from \"../../../base/common/event.js\";\nimport { deepClone } from \"../../../base/common/objects.js\";\nimport type { URI } from \"../../../base/common/uri.js\";\nimport { IConfigurationService } from \"../../configuration/common/configuration.js\";\nimport { IEnvironmentService } from \"../../environment/common/environment.js\";\nimport {\n\tFileOperationError,\n\tFileOperationResult,\n\ttype IFileContent,\n\tIFileService,\n\ttype IFileStat,\n} from \"../../files/common/files.js\";\nimport { IStorageService } from \"../../storage/common/storage.js\";\nimport { ITelemetryService } from \"../../telemetry/common/telemetry.js\";\nimport { IUriIdentityService } from \"../../uriIdentity/common/uriIdentity.js\";\nimport {\n\ttype IUserDataProfile,\n\tIUserDataProfilesService,\n} from \"../../userDataProfile/common/userDataProfile.js\";\nimport {\n\tAbstractInitializer,\n\tAbstractSynchroniser,\n\ttype IAcceptResult,\n\ttype IFileResourcePreview,\n\ttype IMergeResult,\n} from \"./abstractSynchronizer.js\";\nimport {\n\ttype IMergeResult as ISnippetsMergeResult,\n\tareSame,\n\tmerge,\n} from \"./snippetsMerge.js\";\nimport {\n\tChange,\n\ttype IRemoteUserData,\n\ttype ISyncData,\n\tIUserDataSyncEnablementService,\n\tIUserDataSyncLocalStoreService,\n\tIUserDataSyncLogService,\n\tIUserDataSyncStoreService,\n\ttype IUserDataSynchroniser,\n\tSyncResource,\n\tUSER_DATA_SYNC_SCHEME,\n} from \"./userDataSync.js\";\n\ninterface ISnippetsResourcePreview extends IFileResourcePreview {\n\tpreviewResult: IMergeResult;\n}\n\ninterface ISnippetsAcceptedResourcePreview extends IFileResourcePreview {\n\tacceptResult: IAcceptResult;\n}\n\nexport function parseSnippets(syncData: ISyncData): IStringDictionary<string> {\n\treturn JSON.parse(syncData.content);\n}\n\nexport class SnippetsSynchroniser\n\textends AbstractSynchroniser\n\timplements IUserDataSynchroniser\n{\n\tprotected readonly version: number = 1;\n\tprivate readonly snippetsFolder: URI;\n\n\tconstructor(\n\t\tprofile: IUserDataProfile,\n\t\tcollection: string | undefined,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IUserDataSyncStoreService userDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncLocalStoreService userDataSyncLocalStoreService: IUserDataSyncLocalStoreService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IUserDataSyncEnablementService userDataSyncEnablementService: IUserDataSyncEnablementService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(\n\t\t\t{ syncResource: SyncResource.Snippets, profile },\n\t\t\tcollection,\n\t\t\tfileService,\n\t\t\tenvironmentService,\n\t\t\tstorageService,\n\t\t\tuserDataSyncStoreService,\n\t\t\tuserDataSyncLocalStoreService,\n\t\t\tuserDataSyncEnablementService,\n\t\t\ttelemetryService,\n\t\t\tlogService,\n\t\t\tconfigurationService,\n\t\t\turiIdentityService,\n\t\t);\n\t\tthis.snippetsFolder = profile.snippetsHome;\n\t\tthis._register(\n\t\t\tthis.fileService.watch(environmentService.userRoamingDataHome),\n\t\t);\n\t\tthis._register(this.fileService.watch(this.snippetsFolder));\n\t\tthis._register(\n\t\t\tEvent.filter(this.fileService.onDidFilesChange, (e) =>\n\t\t\t\te.affects(this.snippetsFolder),\n\t\t\t)(() => this.triggerLocalChange()),\n\t\t);\n\t}\n\n\tprotected async generateSyncPreview(\n\t\tremoteUserData: IRemoteUserData,\n\t\tlastSyncUserData: IRemoteUserData | null,\n\t\tisRemoteDataFromCurrentMachine: boolean,\n\t): Promise<ISnippetsResourcePreview[]> {\n\t\tconst local = await this.getSnippetsFileContents();\n\t\tconst localSnippets = this.toSnippetsContents(local);\n\t\tconst remoteSnippets: IStringDictionary<string> | null =\n\t\t\tremoteUserData.syncData\n\t\t\t\t? this.parseSnippets(remoteUserData.syncData)\n\t\t\t\t: null;\n\n\t\t// Use remote data as last sync data if last sync data does not exist and remote data is from same machine\n\t\tlastSyncUserData =\n\t\t\tlastSyncUserData === null && isRemoteDataFromCurrentMachine\n\t\t\t\t? remoteUserData\n\t\t\t\t: lastSyncUserData;\n\t\tconst lastSyncSnippets: IStringDictionary<string> | null =\n\t\t\tlastSyncUserData && lastSyncUserData.syncData\n\t\t\t\t? this.parseSnippets(lastSyncUserData.syncData)\n\t\t\t\t: null;\n\n\t\tif (remoteSnippets) {\n\t\t\tthis.logService.trace(\n\t\t\t\t`${this.syncResourceLogLabel}: Merging remote snippets with local snippets...`,\n\t\t\t);\n\t\t} else {\n\t\t\tthis.logService.trace(\n\t\t\t\t`${this.syncResourceLogLabel}: Remote snippets does not exist. Synchronizing snippets for the first time.`,\n\t\t\t);\n\t\t}\n\n\t\tconst mergeResult = merge(\n\t\t\tlocalSnippets,\n\t\t\tremoteSnippets,\n\t\t\tlastSyncSnippets,\n\t\t);\n\t\treturn this.getResourcePreviews(\n\t\t\tmergeResult,\n\t\t\tlocal,\n\t\t\tremoteSnippets || {},\n\t\t\tlastSyncSnippets || {},\n\t\t);\n\t}\n\n\tprotected async hasRemoteChanged(\n\t\tlastSyncUserData: IRemoteUserData,\n\t): Promise<boolean> {\n\t\tconst lastSyncSnippets: IStringDictionary<string> | null =\n\t\t\tlastSyncUserData.syncData\n\t\t\t\t? this.parseSnippets(lastSyncUserData.syncData)\n\t\t\t\t: null;\n\t\tif (lastSyncSnippets === null) {\n\t\t\treturn true;\n\t\t}\n\t\tconst local = await this.getSnippetsFileContents();\n\t\tconst localSnippets = this.toSnippetsContents(local);\n\t\tconst mergeResult = merge(\n\t\t\tlocalSnippets,\n\t\t\tlastSyncSnippets,\n\t\t\tlastSyncSnippets,\n\t\t);\n\t\treturn (\n\t\t\tObject.keys(mergeResult.remote.added).length > 0 ||\n\t\t\tObject.keys(mergeResult.remote.updated).length > 0 ||\n\t\t\tmergeResult.remote.removed.length > 0 ||\n\t\t\tmergeResult.conflicts.length > 0\n\t\t);\n\t}\n\n\tprotected async getMergeResult(\n\t\tresourcePreview: ISnippetsResourcePreview,\n\t\ttoken: CancellationToken,\n\t): Promise<IMergeResult> {\n\t\treturn resourcePreview.previewResult;\n\t}\n\n\tprotected async getAcceptResult(\n\t\tresourcePreview: ISnippetsResourcePreview,\n\t\tresource: URI,\n\t\tcontent: string | null | undefined,\n\t\ttoken: CancellationToken,\n\t): Promise<IAcceptResult> {\n\t\t/* Accept local resource */\n\t\tif (\n\t\t\tthis.extUri.isEqualOrParent(\n\t\t\t\tresource,\n\t\t\t\tthis.syncPreviewFolder.with({\n\t\t\t\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\t\t\t\tauthority: \"local\",\n\t\t\t\t}),\n\t\t\t)\n\t\t) {\n\t\t\treturn {\n\t\t\t\tcontent: resourcePreview.fileContent\n\t\t\t\t\t? resourcePreview.fileContent.value.toString()\n\t\t\t\t\t: null,\n\t\t\t\tlocalChange: Change.None,\n\t\t\t\tremoteChange: resourcePreview.fileContent\n\t\t\t\t\t? resourcePreview.remoteContent !== null\n\t\t\t\t\t\t? Change.Modified\n\t\t\t\t\t\t: Change.Added\n\t\t\t\t\t: Change.Deleted,\n\t\t\t};\n\t\t}\n\n\t\t/* Accept remote resource */\n\t\tif (\n\t\t\tthis.extUri.isEqualOrParent(\n\t\t\t\tresource,\n\t\t\t\tthis.syncPreviewFolder.with({\n\t\t\t\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\t\t\t\tauthority: \"remote\",\n\t\t\t\t}),\n\t\t\t)\n\t\t) {\n\t\t\treturn {\n\t\t\t\tcontent: resourcePreview.remoteContent,\n\t\t\t\tlocalChange:\n\t\t\t\t\tresourcePreview.remoteContent !== null\n\t\t\t\t\t\t? resourcePreview.fileContent\n\t\t\t\t\t\t\t? Change.Modified\n\t\t\t\t\t\t\t: Change.Added\n\t\t\t\t\t\t: Change.Deleted,\n\t\t\t\tremoteChange: Change.None,\n\t\t\t};\n\t\t}\n\n\t\t/* Accept preview resource */\n\t\tif (this.extUri.isEqualOrParent(resource, this.syncPreviewFolder)) {\n\t\t\tif (content === undefined) {\n\t\t\t\treturn {\n\t\t\t\t\tcontent: resourcePreview.previewResult.content,\n\t\t\t\t\tlocalChange: resourcePreview.previewResult.localChange,\n\t\t\t\t\tremoteChange: resourcePreview.previewResult.remoteChange,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\tcontent,\n\t\t\t\t\tlocalChange:\n\t\t\t\t\t\tcontent === null\n\t\t\t\t\t\t\t? resourcePreview.fileContent !== null\n\t\t\t\t\t\t\t\t? Change.Deleted\n\t\t\t\t\t\t\t\t: Change.None\n\t\t\t\t\t\t\t: Change.Modified,\n\t\t\t\t\tremoteChange:\n\t\t\t\t\t\tcontent === null\n\t\t\t\t\t\t\t? resourcePreview.remoteContent !== null\n\t\t\t\t\t\t\t\t? Change.Deleted\n\t\t\t\t\t\t\t\t: Change.None\n\t\t\t\t\t\t\t: Change.Modified,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(`Invalid Resource: ${resource.toString()}`);\n\t}\n\n\tprotected async applyResult(\n\t\tremoteUserData: IRemoteUserData,\n\t\tlastSyncUserData: IRemoteUserData | null,\n\t\tresourcePreviews: [ISnippetsResourcePreview, IAcceptResult][],\n\t\tforce: boolean,\n\t): Promise<void> {\n\t\tconst accptedResourcePreviews: ISnippetsAcceptedResourcePreview[] =\n\t\t\tresourcePreviews.map(([resourcePreview, acceptResult]) => ({\n\t\t\t\t...resourcePreview,\n\t\t\t\tacceptResult,\n\t\t\t}));\n\t\tif (\n\t\t\taccptedResourcePreviews.every(\n\t\t\t\t({ localChange, remoteChange }) =>\n\t\t\t\t\tlocalChange === Change.None && remoteChange === Change.None,\n\t\t\t)\n\t\t) {\n\t\t\tthis.logService.info(\n\t\t\t\t`${this.syncResourceLogLabel}: No changes found during synchronizing snippets.`,\n\t\t\t);\n\t\t}\n\n\t\tif (\n\t\t\taccptedResourcePreviews.some(\n\t\t\t\t({ localChange }) => localChange !== Change.None,\n\t\t\t)\n\t\t) {\n\t\t\t// back up all snippets\n\t\t\tawait this.updateLocalBackup(accptedResourcePreviews);\n\t\t\tawait this.updateLocalSnippets(accptedResourcePreviews, force);\n\t\t}\n\n\t\tif (\n\t\t\taccptedResourcePreviews.some(\n\t\t\t\t({ remoteChange }) => remoteChange !== Change.None,\n\t\t\t)\n\t\t) {\n\t\t\tremoteUserData = await this.updateRemoteSnippets(\n\t\t\t\taccptedResourcePreviews,\n\t\t\t\tremoteUserData,\n\t\t\t\tforce,\n\t\t\t);\n\t\t}\n\n\t\tif (lastSyncUserData?.ref !== remoteUserData.ref) {\n\t\t\t// update last sync\n\t\t\tthis.logService.trace(\n\t\t\t\t`${this.syncResourceLogLabel}: Updating last synchronized snippets...`,\n\t\t\t);\n\t\t\tawait this.updateLastSyncUserData(remoteUserData);\n\t\t\tthis.logService.info(\n\t\t\t\t`${this.syncResourceLogLabel}: Updated last synchronized snippets`,\n\t\t\t);\n\t\t}\n\n\t\tfor (const { previewResource } of accptedResourcePreviews) {\n\t\t\t// Delete the preview\n\t\t\ttry {\n\t\t\t\tawait this.fileService.del(previewResource);\n\t\t\t} catch (e) {\n\t\t\t\t/* ignore */\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getResourcePreviews(\n\t\tsnippetsMergeResult: ISnippetsMergeResult,\n\t\tlocalFileContent: IStringDictionary<IFileContent>,\n\t\tremoteSnippets: IStringDictionary<string>,\n\t\tbaseSnippets: IStringDictionary<string>,\n\t): ISnippetsResourcePreview[] {\n\t\tconst resourcePreviews: Map<string, ISnippetsResourcePreview> = new Map<\n\t\t\tstring,\n\t\t\tISnippetsResourcePreview\n\t\t>();\n\n\t\t/* Snippets added remotely -> add locally */\n\t\tfor (const key of Object.keys(snippetsMergeResult.local.added)) {\n\t\t\tconst previewResult: IMergeResult = {\n\t\t\t\tcontent: snippetsMergeResult.local.added[key],\n\t\t\t\thasConflicts: false,\n\t\t\t\tlocalChange: Change.Added,\n\t\t\t\tremoteChange: Change.None,\n\t\t\t};\n\t\t\tresourcePreviews.set(key, {\n\t\t\t\tbaseResource: this.extUri\n\t\t\t\t\t.joinPath(this.syncPreviewFolder, key)\n\t\t\t\t\t.with({ scheme: USER_DATA_SYNC_SCHEME, authority: \"base\" }),\n\t\t\t\tbaseContent: null,\n\t\t\t\tfileContent: null,\n\t\t\t\tlocalResource: this.extUri\n\t\t\t\t\t.joinPath(this.syncPreviewFolder, key)\n\t\t\t\t\t.with({\n\t\t\t\t\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\t\t\t\t\tauthority: \"local\",\n\t\t\t\t\t}),\n\t\t\t\tlocalContent: null,\n\t\t\t\tremoteResource: this.extUri\n\t\t\t\t\t.joinPath(this.syncPreviewFolder, key)\n\t\t\t\t\t.with({\n\t\t\t\t\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\t\t\t\t\tauthority: \"remote\",\n\t\t\t\t\t}),\n\t\t\t\tremoteContent: remoteSnippets[key],\n\t\t\t\tpreviewResource: this.extUri.joinPath(\n\t\t\t\t\tthis.syncPreviewFolder,\n\t\t\t\t\tkey,\n\t\t\t\t),\n\t\t\t\tpreviewResult,\n\t\t\t\tlocalChange: previewResult.localChange,\n\t\t\t\tremoteChange: previewResult.remoteChange,\n\t\t\t\tacceptedResource: this.extUri\n\t\t\t\t\t.joinPath(this.syncPreviewFolder, key)\n\t\t\t\t\t.with({\n\t\t\t\t\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\t\t\t\t\tauthority: \"accepted\",\n\t\t\t\t\t}),\n\t\t\t});\n\t\t}\n\n\t\t/* Snippets updated remotely -> update locally */\n\t\tfor (const key of Object.keys(snippetsMergeResult.local.updated)) {\n\t\t\tconst previewResult: IMergeResult = {\n\t\t\t\tcontent: snippetsMergeResult.local.updated[key],\n\t\t\t\thasConflicts: false,\n\t\t\t\tlocalChange: Change.Modified,\n\t\t\t\tremoteChange: Change.None,\n\t\t\t};\n\t\t\tconst localContent = localFileContent[key]\n\t\t\t\t? localFileContent[key].value.toString()\n\t\t\t\t: null;\n\t\t\tresourcePreviews.set(key, {\n\t\t\t\tbaseResource: this.extUri\n\t\t\t\t\t.joinPath(this.syncPreviewFolder, key)\n\t\t\t\t\t.with({ scheme: USER_DATA_SYNC_SCHEME, authority: \"base\" }),\n\t\t\t\tbaseContent: baseSnippets[key] ?? null,\n\t\t\t\tlocalResource: this.extUri\n\t\t\t\t\t.joinPath(this.syncPreviewFolder, key)\n\t\t\t\t\t.with({\n\t\t\t\t\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\t\t\t\t\tauthority: \"local\",\n\t\t\t\t\t}),\n\t\t\t\tfileContent: localFileContent[key],\n\t\t\t\tlocalContent,\n\t\t\t\tremoteResource: this.extUri\n\t\t\t\t\t.joinPath(this.syncPreviewFolder, key)\n\t\t\t\t\t.with({\n\t\t\t\t\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\t\t\t\t\tauthority: \"remote\",\n\t\t\t\t\t}),\n\t\t\t\tremoteContent: remoteSnippets[key],\n\t\t\t\tpreviewResource: this.extUri.joinPath(\n\t\t\t\t\tthis.syncPreviewFolder,\n\t\t\t\t\tkey,\n\t\t\t\t),\n\t\t\t\tpreviewResult,\n\t\t\t\tlocalChange: previewResult.localChange,\n\t\t\t\tremoteChange: previewResult.remoteChange,\n\t\t\t\tacceptedResource: this.extUri\n\t\t\t\t\t.joinPath(this.syncPreviewFolder, key)\n\t\t\t\t\t.with({\n\t\t\t\t\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\t\t\t\t\tauthority: \"accepted\",\n\t\t\t\t\t}),\n\t\t\t});\n\t\t}\n\n\t\t/* Snippets removed remotely -> remove locally */\n\t\tfor (const key of snippetsMergeResult.local.removed) {\n\t\t\tconst previewResult: IMergeResult = {\n\t\t\t\tcontent: null,\n\t\t\t\thasConflicts: false,\n\t\t\t\tlocalChange: Change.Deleted,\n\t\t\t\tremoteChange: Change.None,\n\t\t\t};\n\t\t\tconst localContent = localFileContent[key]\n\t\t\t\t? localFileContent[key].value.toString()\n\t\t\t\t: null;\n\t\t\tresourcePreviews.set(key, {\n\t\t\t\tbaseResource: this.extUri\n\t\t\t\t\t.joinPath(this.syncPreviewFolder, key)\n\t\t\t\t\t.with({ scheme: USER_DATA_SYNC_SCHEME, authority: \"base\" }),\n\t\t\t\tbaseContent: baseSnippets[key] ?? null,\n\t\t\t\tlocalResource: this.extUri\n\t\t\t\t\t.joinPath(this.syncPreviewFolder, key)\n\t\t\t\t\t.with({\n\t\t\t\t\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\t\t\t\t\tauthority: \"local\",\n\t\t\t\t\t}),\n\t\t\t\tfileContent: localFileContent[key],\n\t\t\t\tlocalContent,\n\t\t\t\tremoteResource: this.extUri\n\t\t\t\t\t.joinPath(this.syncPreviewFolder, key)\n\t\t\t\t\t.with({\n\t\t\t\t\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\t\t\t\t\tauthority: \"remote\",\n\t\t\t\t\t}),\n\t\t\t\tremoteContent: null,\n\t\t\t\tpreviewResource: this.extUri.joinPath(\n\t\t\t\t\tthis.syncPreviewFolder,\n\t\t\t\t\tkey,\n\t\t\t\t),\n\t\t\t\tpreviewResult,\n\t\t\t\tlocalChange: previewResult.localChange,\n\t\t\t\tremoteChange: previewResult.remoteChange,\n\t\t\t\tacceptedResource: this.extUri\n\t\t\t\t\t.joinPath(this.syncPreviewFolder, key)\n\t\t\t\t\t.with({\n\t\t\t\t\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\t\t\t\t\tauthority: \"accepted\",\n\t\t\t\t\t}),\n\t\t\t});\n\t\t}\n\n\t\t/* Snippets added locally -> add remotely */\n\t\tfor (const key of Object.keys(snippetsMergeResult.remote.added)) {\n\t\t\tconst previewResult: IMergeResult = {\n\t\t\t\tcontent: snippetsMergeResult.remote.added[key],\n\t\t\t\thasConflicts: false,\n\t\t\t\tlocalChange: Change.None,\n\t\t\t\tremoteChange: Change.Added,\n\t\t\t};\n\t\t\tconst localContent = localFileContent[key]\n\t\t\t\t? localFileContent[key].value.toString()\n\t\t\t\t: null;\n\t\t\tresourcePreviews.set(key, {\n\t\t\t\tbaseResource: this.extUri\n\t\t\t\t\t.joinPath(this.syncPreviewFolder, key)\n\t\t\t\t\t.with({ scheme: USER_DATA_SYNC_SCHEME, authority: \"base\" }),\n\t\t\t\tbaseContent: baseSnippets[key] ?? null,\n\t\t\t\tlocalResource: this.extUri\n\t\t\t\t\t.joinPath(this.syncPreviewFolder, key)\n\t\t\t\t\t.with({\n\t\t\t\t\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\t\t\t\t\tauthority: \"local\",\n\t\t\t\t\t}),\n\t\t\t\tfileContent: localFileContent[key],\n\t\t\t\tlocalContent,\n\t\t\t\tremoteResource: this.extUri\n\t\t\t\t\t.joinPath(this.syncPreviewFolder, key)\n\t\t\t\t\t.with({\n\t\t\t\t\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\t\t\t\t\tauthority: \"remote\",\n\t\t\t\t\t}),\n\t\t\t\tremoteContent: null,\n\t\t\t\tpreviewResource: this.extUri.joinPath(\n\t\t\t\t\tthis.syncPreviewFolder,\n\t\t\t\t\tkey,\n\t\t\t\t),\n\t\t\t\tpreviewResult,\n\t\t\t\tlocalChange: previewResult.localChange,\n\t\t\t\tremoteChange: previewResult.remoteChange,\n\t\t\t\tacceptedResource: this.extUri\n\t\t\t\t\t.joinPath(this.syncPreviewFolder, key)\n\t\t\t\t\t.with({\n\t\t\t\t\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\t\t\t\t\tauthority: \"accepted\",\n\t\t\t\t\t}),\n\t\t\t});\n\t\t}\n\n\t\t/* Snippets updated locally -> update remotely */\n\t\tfor (const key of Object.keys(snippetsMergeResult.remote.updated)) {\n\t\t\tconst previewResult: IMergeResult = {\n\t\t\t\tcontent: snippetsMergeResult.remote.updated[key],\n\t\t\t\thasConflicts: false,\n\t\t\t\tlocalChange: Change.None,\n\t\t\t\tremoteChange: Change.Modified,\n\t\t\t};\n\t\t\tconst localContent = localFileContent[key]\n\t\t\t\t? localFileContent[key].value.toString()\n\t\t\t\t: null;\n\t\t\tresourcePreviews.set(key, {\n\t\t\t\tbaseResource: this.extUri\n\t\t\t\t\t.joinPath(this.syncPreviewFolder, key)\n\t\t\t\t\t.with({ scheme: USER_DATA_SYNC_SCHEME, authority: \"base\" }),\n\t\t\t\tbaseContent: baseSnippets[key] ?? null,\n\t\t\t\tlocalResource: this.extUri\n\t\t\t\t\t.joinPath(this.syncPreviewFolder, key)\n\t\t\t\t\t.with({\n\t\t\t\t\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\t\t\t\t\tauthority: \"local\",\n\t\t\t\t\t}),\n\t\t\t\tfileContent: localFileContent[key],\n\t\t\t\tlocalContent,\n\t\t\t\tremoteResource: this.extUri\n\t\t\t\t\t.joinPath(this.syncPreviewFolder, key)\n\t\t\t\t\t.with({\n\t\t\t\t\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\t\t\t\t\tauthority: \"remote\",\n\t\t\t\t\t}),\n\t\t\t\tremoteContent: remoteSnippets[key],\n\t\t\t\tpreviewResource: this.extUri.joinPath(\n\t\t\t\t\tthis.syncPreviewFolder,\n\t\t\t\t\tkey,\n\t\t\t\t),\n\t\t\t\tpreviewResult,\n\t\t\t\tlocalChange: previewResult.localChange,\n\t\t\t\tremoteChange: previewResult.remoteChange,\n\t\t\t\tacceptedResource: this.extUri\n\t\t\t\t\t.joinPath(this.syncPreviewFolder, key)\n\t\t\t\t\t.with({\n\t\t\t\t\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\t\t\t\t\tauthority: \"accepted\",\n\t\t\t\t\t}),\n\t\t\t});\n\t\t}\n\n\t\t/* Snippets removed locally -> remove remotely */\n\t\tfor (const key of snippetsMergeResult.remote.removed) {\n\t\t\tconst previewResult: IMergeResult = {\n\t\t\t\tcontent: null,\n\t\t\t\thasConflicts: false,\n\t\t\t\tlocalChange: Change.None,\n\t\t\t\tremoteChange: Change.Deleted,\n\t\t\t};\n\t\t\tresourcePreviews.set(key, {\n\t\t\t\tbaseResource: this.extUri\n\t\t\t\t\t.joinPath(this.syncPreviewFolder, key)\n\t\t\t\t\t.with({ scheme: USER_DATA_SYNC_SCHEME, authority: \"base\" }),\n\t\t\t\tbaseContent: baseSnippets[key] ?? null,\n\t\t\t\tlocalResource: this.extUri\n\t\t\t\t\t.joinPath(this.syncPreviewFolder, key)\n\t\t\t\t\t.with({\n\t\t\t\t\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\t\t\t\t\tauthority: \"local\",\n\t\t\t\t\t}),\n\t\t\t\tfileContent: null,\n\t\t\t\tlocalContent: null,\n\t\t\t\tremoteResource: this.extUri\n\t\t\t\t\t.joinPath(this.syncPreviewFolder, key)\n\t\t\t\t\t.with({\n\t\t\t\t\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\t\t\t\t\tauthority: \"remote\",\n\t\t\t\t\t}),\n\t\t\t\tremoteContent: remoteSnippets[key],\n\t\t\t\tpreviewResource: this.extUri.joinPath(\n\t\t\t\t\tthis.syncPreviewFolder,\n\t\t\t\t\tkey,\n\t\t\t\t),\n\t\t\t\tpreviewResult,\n\t\t\t\tlocalChange: previewResult.localChange,\n\t\t\t\tremoteChange: previewResult.remoteChange,\n\t\t\t\tacceptedResource: this.extUri\n\t\t\t\t\t.joinPath(this.syncPreviewFolder, key)\n\t\t\t\t\t.with({\n\t\t\t\t\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\t\t\t\t\tauthority: \"accepted\",\n\t\t\t\t\t}),\n\t\t\t});\n\t\t}\n\n\t\t/* Snippets with conflicts */\n\t\tfor (const key of snippetsMergeResult.conflicts) {\n\t\t\tconst previewResult: IMergeResult = {\n\t\t\t\tcontent: baseSnippets[key] ?? null,\n\t\t\t\thasConflicts: true,\n\t\t\t\tlocalChange: localFileContent[key]\n\t\t\t\t\t? Change.Modified\n\t\t\t\t\t: Change.Added,\n\t\t\t\tremoteChange: remoteSnippets[key]\n\t\t\t\t\t? Change.Modified\n\t\t\t\t\t: Change.Added,\n\t\t\t};\n\t\t\tconst localContent = localFileContent[key]\n\t\t\t\t? localFileContent[key].value.toString()\n\t\t\t\t: null;\n\t\t\tresourcePreviews.set(key, {\n\t\t\t\tbaseResource: this.extUri\n\t\t\t\t\t.joinPath(this.syncPreviewFolder, key)\n\t\t\t\t\t.with({ scheme: USER_DATA_SYNC_SCHEME, authority: \"base\" }),\n\t\t\t\tbaseContent: baseSnippets[key] ?? null,\n\t\t\t\tlocalResource: this.extUri\n\t\t\t\t\t.joinPath(this.syncPreviewFolder, key)\n\t\t\t\t\t.with({\n\t\t\t\t\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\t\t\t\t\tauthority: \"local\",\n\t\t\t\t\t}),\n\t\t\t\tfileContent: localFileContent[key] || null,\n\t\t\t\tlocalContent,\n\t\t\t\tremoteResource: this.extUri\n\t\t\t\t\t.joinPath(this.syncPreviewFolder, key)\n\t\t\t\t\t.with({\n\t\t\t\t\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\t\t\t\t\tauthority: \"remote\",\n\t\t\t\t\t}),\n\t\t\t\tremoteContent: remoteSnippets[key] || null,\n\t\t\t\tpreviewResource: this.extUri.joinPath(\n\t\t\t\t\tthis.syncPreviewFolder,\n\t\t\t\t\tkey,\n\t\t\t\t),\n\t\t\t\tpreviewResult,\n\t\t\t\tlocalChange: previewResult.localChange,\n\t\t\t\tremoteChange: previewResult.remoteChange,\n\t\t\t\tacceptedResource: this.extUri\n\t\t\t\t\t.joinPath(this.syncPreviewFolder, key)\n\t\t\t\t\t.with({\n\t\t\t\t\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\t\t\t\t\tauthority: \"accepted\",\n\t\t\t\t\t}),\n\t\t\t});\n\t\t}\n\n\t\t/* Unmodified Snippets */\n\t\tfor (const key of Object.keys(localFileContent)) {\n\t\t\tif (!resourcePreviews.has(key)) {\n\t\t\t\tconst previewResult: IMergeResult = {\n\t\t\t\t\tcontent: localFileContent[key]\n\t\t\t\t\t\t? localFileContent[key].value.toString()\n\t\t\t\t\t\t: null,\n\t\t\t\t\thasConflicts: false,\n\t\t\t\t\tlocalChange: Change.None,\n\t\t\t\t\tremoteChange: Change.None,\n\t\t\t\t};\n\t\t\t\tconst localContent = localFileContent[key]\n\t\t\t\t\t? localFileContent[key].value.toString()\n\t\t\t\t\t: null;\n\t\t\t\tresourcePreviews.set(key, {\n\t\t\t\t\tbaseResource: this.extUri\n\t\t\t\t\t\t.joinPath(this.syncPreviewFolder, key)\n\t\t\t\t\t\t.with({\n\t\t\t\t\t\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\t\t\t\t\t\tauthority: \"base\",\n\t\t\t\t\t\t}),\n\t\t\t\t\tbaseContent: baseSnippets[key] ?? null,\n\t\t\t\t\tlocalResource: this.extUri\n\t\t\t\t\t\t.joinPath(this.syncPreviewFolder, key)\n\t\t\t\t\t\t.with({\n\t\t\t\t\t\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\t\t\t\t\t\tauthority: \"local\",\n\t\t\t\t\t\t}),\n\t\t\t\t\tfileContent: localFileContent[key] || null,\n\t\t\t\t\tlocalContent,\n\t\t\t\t\tremoteResource: this.extUri\n\t\t\t\t\t\t.joinPath(this.syncPreviewFolder, key)\n\t\t\t\t\t\t.with({\n\t\t\t\t\t\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\t\t\t\t\t\tauthority: \"remote\",\n\t\t\t\t\t\t}),\n\t\t\t\t\tremoteContent: remoteSnippets[key] || null,\n\t\t\t\t\tpreviewResource: this.extUri.joinPath(\n\t\t\t\t\t\tthis.syncPreviewFolder,\n\t\t\t\t\t\tkey,\n\t\t\t\t\t),\n\t\t\t\t\tpreviewResult,\n\t\t\t\t\tlocalChange: previewResult.localChange,\n\t\t\t\t\tremoteChange: previewResult.remoteChange,\n\t\t\t\t\tacceptedResource: this.extUri\n\t\t\t\t\t\t.joinPath(this.syncPreviewFolder, key)\n\t\t\t\t\t\t.with({\n\t\t\t\t\t\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\t\t\t\t\t\tauthority: \"accepted\",\n\t\t\t\t\t\t}),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn [...resourcePreviews.values()];\n\t}\n\n\toverride async resolveContent(uri: URI): Promise<string | null> {\n\t\tif (\n\t\t\tthis.extUri.isEqualOrParent(\n\t\t\t\turi,\n\t\t\t\tthis.syncPreviewFolder.with({\n\t\t\t\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\t\t\t\tauthority: \"remote\",\n\t\t\t\t}),\n\t\t\t) ||\n\t\t\tthis.extUri.isEqualOrParent(\n\t\t\t\turi,\n\t\t\t\tthis.syncPreviewFolder.with({\n\t\t\t\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\t\t\t\tauthority: \"local\",\n\t\t\t\t}),\n\t\t\t) ||\n\t\t\tthis.extUri.isEqualOrParent(\n\t\t\t\turi,\n\t\t\t\tthis.syncPreviewFolder.with({\n\t\t\t\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\t\t\t\tauthority: \"base\",\n\t\t\t\t}),\n\t\t\t) ||\n\t\t\tthis.extUri.isEqualOrParent(\n\t\t\t\turi,\n\t\t\t\tthis.syncPreviewFolder.with({\n\t\t\t\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\t\t\t\tauthority: \"accepted\",\n\t\t\t\t}),\n\t\t\t)\n\t\t) {\n\t\t\treturn this.resolvePreviewContent(uri);\n\t\t}\n\t\treturn null;\n\t}\n\n\tasync hasLocalData(): Promise<boolean> {\n\t\ttry {\n\t\t\tconst localSnippets = await this.getSnippetsFileContents();\n\t\t\tif (Object.keys(localSnippets).length) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t/* ignore error */\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate async updateLocalBackup(\n\t\tresourcePreviews: IFileResourcePreview[],\n\t): Promise<void> {\n\t\tconst local: IStringDictionary<IFileContent> = {};\n\t\tfor (const resourcePreview of resourcePreviews) {\n\t\t\tif (resourcePreview.fileContent) {\n\t\t\t\tlocal[this.extUri.basename(resourcePreview.localResource)] =\n\t\t\t\t\tresourcePreview.fileContent;\n\t\t\t}\n\t\t}\n\t\tawait this.backupLocal(JSON.stringify(this.toSnippetsContents(local)));\n\t}\n\n\tprivate async updateLocalSnippets(\n\t\tresourcePreviews: ISnippetsAcceptedResourcePreview[],\n\t\tforce: boolean,\n\t): Promise<void> {\n\t\tfor (const {\n\t\t\tfileContent,\n\t\t\tacceptResult,\n\t\t\tlocalResource,\n\t\t\tremoteResource,\n\t\t\tlocalChange,\n\t\t} of resourcePreviews) {\n\t\t\tif (localChange !== Change.None) {\n\t\t\t\tconst key = remoteResource\n\t\t\t\t\t? this.extUri.basename(remoteResource)\n\t\t\t\t\t: this.extUri.basename(localResource);\n\t\t\t\tconst resource = this.extUri.joinPath(this.snippetsFolder, key);\n\n\t\t\t\t// Removed\n\t\t\t\tif (localChange === Change.Deleted) {\n\t\t\t\t\tthis.logService.trace(\n\t\t\t\t\t\t`${this.syncResourceLogLabel}: Deleting snippet...`,\n\t\t\t\t\t\tthis.extUri.basename(resource),\n\t\t\t\t\t);\n\t\t\t\t\tawait this.fileService.del(resource);\n\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t`${this.syncResourceLogLabel}: Deleted snippet`,\n\t\t\t\t\t\tthis.extUri.basename(resource),\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// Added\n\t\t\t\telse if (localChange === Change.Added) {\n\t\t\t\t\tthis.logService.trace(\n\t\t\t\t\t\t`${this.syncResourceLogLabel}: Creating snippet...`,\n\t\t\t\t\t\tthis.extUri.basename(resource),\n\t\t\t\t\t);\n\t\t\t\t\tawait this.fileService.createFile(\n\t\t\t\t\t\tresource,\n\t\t\t\t\t\tVSBuffer.fromString(acceptResult.content!),\n\t\t\t\t\t\t{ overwrite: force },\n\t\t\t\t\t);\n\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t`${this.syncResourceLogLabel}: Created snippet`,\n\t\t\t\t\t\tthis.extUri.basename(resource),\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// Updated\n\t\t\t\telse {\n\t\t\t\t\tthis.logService.trace(\n\t\t\t\t\t\t`${this.syncResourceLogLabel}: Updating snippet...`,\n\t\t\t\t\t\tthis.extUri.basename(resource),\n\t\t\t\t\t);\n\t\t\t\t\tawait this.fileService.writeFile(\n\t\t\t\t\t\tresource,\n\t\t\t\t\t\tVSBuffer.fromString(acceptResult.content!),\n\t\t\t\t\t\tforce ? undefined : fileContent!,\n\t\t\t\t\t);\n\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t`${this.syncResourceLogLabel}: Updated snippet`,\n\t\t\t\t\t\tthis.extUri.basename(resource),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async updateRemoteSnippets(\n\t\tresourcePreviews: ISnippetsAcceptedResourcePreview[],\n\t\tremoteUserData: IRemoteUserData,\n\t\tforcePush: boolean,\n\t): Promise<IRemoteUserData> {\n\t\tconst currentSnippets: IStringDictionary<string> =\n\t\t\tremoteUserData.syncData\n\t\t\t\t? this.parseSnippets(remoteUserData.syncData)\n\t\t\t\t: {};\n\t\tconst newSnippets: IStringDictionary<string> =\n\t\t\tdeepClone(currentSnippets);\n\n\t\tfor (const {\n\t\t\tacceptResult,\n\t\t\tlocalResource,\n\t\t\tremoteResource,\n\t\t\tremoteChange,\n\t\t} of resourcePreviews) {\n\t\t\tif (remoteChange !== Change.None) {\n\t\t\t\tconst key = localResource\n\t\t\t\t\t? this.extUri.basename(localResource)\n\t\t\t\t\t: this.extUri.basename(remoteResource);\n\t\t\t\tif (remoteChange === Change.Deleted) {\n\t\t\t\t\tdelete newSnippets[key];\n\t\t\t\t} else {\n\t\t\t\t\tnewSnippets[key] = acceptResult.content!;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!areSame(currentSnippets, newSnippets)) {\n\t\t\t// update remote\n\t\t\tthis.logService.trace(\n\t\t\t\t`${this.syncResourceLogLabel}: Updating remote snippets...`,\n\t\t\t);\n\t\t\tremoteUserData = await this.updateRemoteUserData(\n\t\t\t\tJSON.stringify(newSnippets),\n\t\t\t\tforcePush ? null : remoteUserData.ref,\n\t\t\t);\n\t\t\tthis.logService.info(\n\t\t\t\t`${this.syncResourceLogLabel}: Updated remote snippets`,\n\t\t\t);\n\t\t}\n\t\treturn remoteUserData;\n\t}\n\n\tprivate parseSnippets(syncData: ISyncData): IStringDictionary<string> {\n\t\treturn parseSnippets(syncData);\n\t}\n\n\tprivate toSnippetsContents(\n\t\tsnippetsFileContents: IStringDictionary<IFileContent>,\n\t): IStringDictionary<string> {\n\t\tconst snippets: IStringDictionary<string> = {};\n\t\tfor (const key of Object.keys(snippetsFileContents)) {\n\t\t\tsnippets[key] = snippetsFileContents[key].value.toString();\n\t\t}\n\t\treturn snippets;\n\t}\n\n\tprivate async getSnippetsFileContents(): Promise<\n\t\tIStringDictionary<IFileContent>\n\t> {\n\t\tconst snippets: IStringDictionary<IFileContent> = {};\n\t\tlet stat: IFileStat;\n\t\ttry {\n\t\t\tstat = await this.fileService.resolve(this.snippetsFolder);\n\t\t} catch (e) {\n\t\t\t// No snippets\n\t\t\tif (\n\t\t\t\te instanceof FileOperationError &&\n\t\t\t\te.fileOperationResult === FileOperationResult.FILE_NOT_FOUND\n\t\t\t) {\n\t\t\t\treturn snippets;\n\t\t\t} else {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t\tfor (const entry of stat.children || []) {\n\t\t\tconst resource = entry.resource;\n\t\t\tconst extension = this.extUri.extname(resource);\n\t\t\tif (extension === \".json\" || extension === \".code-snippets\") {\n\t\t\t\tconst key = this.extUri.relativePath(\n\t\t\t\t\tthis.snippetsFolder,\n\t\t\t\t\tresource,\n\t\t\t\t)!;\n\t\t\t\tconst content = await this.fileService.readFile(resource);\n\t\t\t\tsnippets[key] = content;\n\t\t\t}\n\t\t}\n\t\treturn snippets;\n\t}\n}\n\nexport class SnippetsInitializer extends AbstractInitializer {\n\tconstructor(\n\t\t@IFileService fileService: IFileService,\n\t\t@IUserDataProfilesService userDataProfilesService: IUserDataProfilesService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(\n\t\t\tSyncResource.Snippets,\n\t\t\tuserDataProfilesService,\n\t\t\tenvironmentService,\n\t\t\tlogService,\n\t\t\tfileService,\n\t\t\tstorageService,\n\t\t\turiIdentityService,\n\t\t);\n\t}\n\n\tprotected async doInitialize(\n\t\tremoteUserData: IRemoteUserData,\n\t): Promise<void> {\n\t\tconst remoteSnippets: IStringDictionary<string> | null =\n\t\t\tremoteUserData.syncData\n\t\t\t\t? JSON.parse(remoteUserData.syncData.content)\n\t\t\t\t: null;\n\t\tif (!remoteSnippets) {\n\t\t\tthis.logService.info(\n\t\t\t\t\"Skipping initializing snippets because remote snippets does not exist.\",\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tconst isEmpty = await this.isEmpty();\n\t\tif (!isEmpty) {\n\t\t\tthis.logService.info(\n\t\t\t\t\"Skipping initializing snippets because local snippets exist.\",\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const key of Object.keys(remoteSnippets)) {\n\t\t\tconst content = remoteSnippets[key];\n\t\t\tif (content) {\n\t\t\t\tconst resource = this.extUri.joinPath(\n\t\t\t\t\tthis.userDataProfilesService.defaultProfile.snippetsHome,\n\t\t\t\t\tkey,\n\t\t\t\t);\n\t\t\t\tawait this.fileService.createFile(\n\t\t\t\t\tresource,\n\t\t\t\t\tVSBuffer.fromString(content),\n\t\t\t\t);\n\t\t\t\tthis.logService.info(\n\t\t\t\t\t\"Created snippet\",\n\t\t\t\t\tthis.extUri.basename(resource),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tawait this.updateLastSyncUserData(remoteUserData);\n\t}\n\n\tprivate async isEmpty(): Promise<boolean> {\n\t\ttry {\n\t\t\tconst stat = await this.fileService.resolve(\n\t\t\t\tthis.userDataProfilesService.defaultProfile.snippetsHome,\n\t\t\t);\n\t\t\treturn !stat.children?.length;\n\t\t} catch (error) {\n\t\t\treturn (\n\t\t\t\t(<FileOperationError>error).fileOperationResult ===\n\t\t\t\tFileOperationResult.FILE_NOT_FOUND\n\t\t\t);\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
