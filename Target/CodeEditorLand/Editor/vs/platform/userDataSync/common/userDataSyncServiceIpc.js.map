{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/userDataSync/common/userDataSyncServiceIpc.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { IChannel, IServerChannel } from '../../../base/parts/ipc/common/ipc.js';\nimport { ILogService } from '../../log/common/log.js';\nimport { IUserDataProfilesService, reviveProfile } from '../../userDataProfile/common/userDataProfile.js';\nimport {\n\tIUserDataManualSyncTask, IUserDataSyncResourceConflicts, IUserDataSyncResourceError, IUserDataSyncResource, ISyncResourceHandle, IUserDataSyncTask, IUserDataSyncService,\n\tSyncResource, SyncStatus, UserDataSyncError\n} from './userDataSync.js';\n\ntype ManualSyncTaskEvent<T> = { manualSyncTaskId: string; data: T };\n\nfunction reviewSyncResource(syncResource: IUserDataSyncResource, userDataProfilesService: IUserDataProfilesService): IUserDataSyncResource {\n\treturn { ...syncResource, profile: reviveProfile(syncResource.profile, userDataProfilesService.profilesHome.scheme) };\n}\n\nfunction reviewSyncResourceHandle(syncResourceHandle: ISyncResourceHandle): ISyncResourceHandle {\n\treturn { created: syncResourceHandle.created, uri: URI.revive(syncResourceHandle.uri) };\n}\n\nexport class UserDataSyncServiceChannel implements IServerChannel {\n\n\tprivate readonly manualSyncTasks = new Map<string, IUserDataManualSyncTask>();\n\tprivate readonly onManualSynchronizeResources = new Emitter<ManualSyncTaskEvent<[SyncResource, URI[]][]>>();\n\n\tconstructor(\n\t\tprivate readonly service: IUserDataSyncService,\n\t\tprivate readonly userDataProfilesService: IUserDataProfilesService,\n\t\tprivate readonly logService: ILogService\n\t) { }\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\t// sync\n\t\t\tcase 'onDidChangeStatus': return this.service.onDidChangeStatus;\n\t\t\tcase 'onDidChangeConflicts': return this.service.onDidChangeConflicts;\n\t\t\tcase 'onDidChangeLocal': return this.service.onDidChangeLocal;\n\t\t\tcase 'onDidChangeLastSyncTime': return this.service.onDidChangeLastSyncTime;\n\t\t\tcase 'onSyncErrors': return this.service.onSyncErrors;\n\t\t\tcase 'onDidResetLocal': return this.service.onDidResetLocal;\n\t\t\tcase 'onDidResetRemote': return this.service.onDidResetRemote;\n\n\t\t\t// manual sync\n\t\t\tcase 'manualSync/onSynchronizeResources': return this.onManualSynchronizeResources.event;\n\t\t}\n\n\t\tthrow new Error(`[UserDataSyncServiceChannel] Event not found: ${event}`);\n\t}\n\n\tasync call(context: any, command: string, args?: any): Promise<any> {\n\t\ttry {\n\t\t\tconst result = await this._call(context, command, args);\n\t\t\treturn result;\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\tprivate async _call(context: any, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\n\t\t\t// sync\n\t\t\tcase '_getInitialData': return Promise.resolve([this.service.status, this.service.conflicts, this.service.lastSyncTime]);\n\t\t\tcase 'reset': return this.service.reset();\n\t\t\tcase 'resetRemote': return this.service.resetRemote();\n\t\t\tcase 'resetLocal': return this.service.resetLocal();\n\t\t\tcase 'hasPreviouslySynced': return this.service.hasPreviouslySynced();\n\t\t\tcase 'hasLocalData': return this.service.hasLocalData();\n\t\t\tcase 'resolveContent': return this.service.resolveContent(URI.revive(args[0]));\n\t\t\tcase 'accept': return this.service.accept(reviewSyncResource(args[0], this.userDataProfilesService), URI.revive(args[1]), args[2], args[3]);\n\t\t\tcase 'replace': return this.service.replace(reviewSyncResourceHandle(args[0]));\n\t\t\tcase 'cleanUpRemoteData': return this.service.cleanUpRemoteData();\n\t\t\tcase 'getRemoteActivityData': return this.service.saveRemoteActivityData(URI.revive(args[0]));\n\t\t\tcase 'extractActivityData': return this.service.extractActivityData(URI.revive(args[0]), URI.revive(args[1]));\n\n\t\t\tcase 'createManualSyncTask': return this.createManualSyncTask();\n\t\t}\n\n\t\t// manual sync\n\t\tif (command.startsWith('manualSync/')) {\n\t\t\tconst manualSyncTaskCommand = command.substring('manualSync/'.length);\n\t\t\tconst manualSyncTaskId = args[0];\n\t\t\tconst manualSyncTask = this.getManualSyncTask(manualSyncTaskId);\n\t\t\targs = (<Array<any>>args).slice(1);\n\n\t\t\tswitch (manualSyncTaskCommand) {\n\t\t\t\tcase 'merge': return manualSyncTask.merge();\n\t\t\t\tcase 'apply': return manualSyncTask.apply().then(() => this.manualSyncTasks.delete(this.createKey(manualSyncTask.id)));\n\t\t\t\tcase 'stop': return manualSyncTask.stop().finally(() => this.manualSyncTasks.delete(this.createKey(manualSyncTask.id)));\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error('Invalid call');\n\t}\n\n\tprivate getManualSyncTask(manualSyncTaskId: string): IUserDataManualSyncTask {\n\t\tconst manualSyncTask = this.manualSyncTasks.get(this.createKey(manualSyncTaskId));\n\t\tif (!manualSyncTask) {\n\t\t\tthrow new Error(`Manual sync taks not found: ${manualSyncTaskId}`);\n\t\t}\n\t\treturn manualSyncTask;\n\t}\n\n\tprivate async createManualSyncTask(): Promise<string> {\n\t\tconst manualSyncTask = await this.service.createManualSyncTask();\n\t\tthis.manualSyncTasks.set(this.createKey(manualSyncTask.id), manualSyncTask);\n\t\treturn manualSyncTask.id;\n\t}\n\n\tprivate createKey(manualSyncTaskId: string): string { return `manualSyncTask-${manualSyncTaskId}`; }\n\n}\n\nexport class UserDataSyncServiceChannelClient extends Disposable implements IUserDataSyncService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly channel: IChannel;\n\n\tprivate _status: SyncStatus = SyncStatus.Uninitialized;\n\tget status(): SyncStatus { return this._status; }\n\tprivate _onDidChangeStatus: Emitter<SyncStatus> = this._register(new Emitter<SyncStatus>());\n\treadonly onDidChangeStatus: Event<SyncStatus> = this._onDidChangeStatus.event;\n\n\tget onDidChangeLocal(): Event<SyncResource> { return this.channel.listen<SyncResource>('onDidChangeLocal'); }\n\n\tprivate _conflicts: IUserDataSyncResourceConflicts[] = [];\n\tget conflicts(): IUserDataSyncResourceConflicts[] { return this._conflicts; }\n\tprivate _onDidChangeConflicts = this._register(new Emitter<IUserDataSyncResourceConflicts[]>());\n\treadonly onDidChangeConflicts = this._onDidChangeConflicts.event;\n\n\tprivate _lastSyncTime: number | undefined = undefined;\n\tget lastSyncTime(): number | undefined { return this._lastSyncTime; }\n\tprivate _onDidChangeLastSyncTime: Emitter<number> = this._register(new Emitter<number>());\n\treadonly onDidChangeLastSyncTime: Event<number> = this._onDidChangeLastSyncTime.event;\n\n\tprivate _onSyncErrors = this._register(new Emitter<IUserDataSyncResourceError[]>());\n\treadonly onSyncErrors = this._onSyncErrors.event;\n\n\tget onDidResetLocal(): Event<void> { return this.channel.listen<void>('onDidResetLocal'); }\n\tget onDidResetRemote(): Event<void> { return this.channel.listen<void>('onDidResetRemote'); }\n\n\tconstructor(\n\t\tuserDataSyncChannel: IChannel,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t) {\n\t\tsuper();\n\t\tthis.channel = {\n\t\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\treturn userDataSyncChannel.call(command, arg, cancellationToken)\n\t\t\t\t\t.then(null, error => { throw UserDataSyncError.toUserDataSyncError(error); });\n\t\t\t},\n\t\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\t\treturn userDataSyncChannel.listen(event, arg);\n\t\t\t}\n\t\t};\n\t\tthis.channel.call<[SyncStatus, IUserDataSyncResourceConflicts[], number | undefined]>('_getInitialData').then(([status, conflicts, lastSyncTime]) => {\n\t\t\tthis.updateStatus(status);\n\t\t\tthis.updateConflicts(conflicts);\n\t\t\tif (lastSyncTime) {\n\t\t\t\tthis.updateLastSyncTime(lastSyncTime);\n\t\t\t}\n\t\t\tthis._register(this.channel.listen<SyncStatus>('onDidChangeStatus')(status => this.updateStatus(status)));\n\t\t\tthis._register(this.channel.listen<number>('onDidChangeLastSyncTime')(lastSyncTime => this.updateLastSyncTime(lastSyncTime)));\n\t\t});\n\t\tthis._register(this.channel.listen<IUserDataSyncResourceConflicts[]>('onDidChangeConflicts')(conflicts => this.updateConflicts(conflicts)));\n\t\tthis._register(this.channel.listen<IUserDataSyncResourceError[]>('onSyncErrors')(errors => this._onSyncErrors.fire(errors.map(syncError => ({ ...syncError, error: UserDataSyncError.toUserDataSyncError(syncError.error) })))));\n\t}\n\n\tcreateSyncTask(): Promise<IUserDataSyncTask> {\n\t\tthrow new Error('not supported');\n\t}\n\n\tasync createManualSyncTask(): Promise<IUserDataManualSyncTask> {\n\t\tconst id = await this.channel.call<string>('createManualSyncTask');\n\t\tconst that = this;\n\t\tconst manualSyncTaskChannelClient = new ManualSyncTaskChannelClient(id, {\n\t\t\tasync call<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\treturn that.channel.call<T>(`manualSync/${command}`, [id, ...(Array.isArray(arg) ? arg : [arg])], cancellationToken);\n\t\t\t},\n\t\t\tlisten<T>(): Event<T> {\n\t\t\t\tthrow new Error('not supported');\n\t\t\t}\n\t\t});\n\t\treturn manualSyncTaskChannelClient;\n\t}\n\n\treset(): Promise<void> {\n\t\treturn this.channel.call('reset');\n\t}\n\n\tresetRemote(): Promise<void> {\n\t\treturn this.channel.call('resetRemote');\n\t}\n\n\tresetLocal(): Promise<void> {\n\t\treturn this.channel.call('resetLocal');\n\t}\n\n\thasPreviouslySynced(): Promise<boolean> {\n\t\treturn this.channel.call('hasPreviouslySynced');\n\t}\n\n\thasLocalData(): Promise<boolean> {\n\t\treturn this.channel.call('hasLocalData');\n\t}\n\n\taccept(syncResource: IUserDataSyncResource, resource: URI, content: string | null, apply: boolean | { force: boolean }): Promise<void> {\n\t\treturn this.channel.call('accept', [syncResource, resource, content, apply]);\n\t}\n\n\tresolveContent(resource: URI): Promise<string | null> {\n\t\treturn this.channel.call('resolveContent', [resource]);\n\t}\n\n\tcleanUpRemoteData(): Promise<void> {\n\t\treturn this.channel.call('cleanUpRemoteData');\n\t}\n\n\treplace(syncResourceHandle: ISyncResourceHandle): Promise<void> {\n\t\treturn this.channel.call('replace', [syncResourceHandle]);\n\t}\n\n\tsaveRemoteActivityData(location: URI): Promise<void> {\n\t\treturn this.channel.call('getRemoteActivityData', [location]);\n\t}\n\n\textractActivityData(activityDataResource: URI, location: URI): Promise<void> {\n\t\treturn this.channel.call('extractActivityData', [activityDataResource, location]);\n\t}\n\n\tprivate async updateStatus(status: SyncStatus): Promise<void> {\n\t\tthis._status = status;\n\t\tthis._onDidChangeStatus.fire(status);\n\t}\n\n\tprivate async updateConflicts(conflicts: IUserDataSyncResourceConflicts[]): Promise<void> {\n\t\t// Revive URIs\n\t\tthis._conflicts = conflicts.map(syncConflict =>\n\t\t({\n\t\t\tsyncResource: syncConflict.syncResource,\n\t\t\tprofile: reviveProfile(syncConflict.profile, this.userDataProfilesService.profilesHome.scheme),\n\t\t\tconflicts: syncConflict.conflicts.map(r =>\n\t\t\t({\n\t\t\t\t...r,\n\t\t\t\tbaseResource: URI.revive(r.baseResource),\n\t\t\t\tlocalResource: URI.revive(r.localResource),\n\t\t\t\tremoteResource: URI.revive(r.remoteResource),\n\t\t\t\tpreviewResource: URI.revive(r.previewResource),\n\t\t\t}))\n\t\t}));\n\t\tthis._onDidChangeConflicts.fire(this._conflicts);\n\t}\n\n\tprivate updateLastSyncTime(lastSyncTime: number): void {\n\t\tif (this._lastSyncTime !== lastSyncTime) {\n\t\t\tthis._lastSyncTime = lastSyncTime;\n\t\t\tthis._onDidChangeLastSyncTime.fire(lastSyncTime);\n\t\t}\n\t}\n}\n\nclass ManualSyncTaskChannelClient extends Disposable implements IUserDataManualSyncTask {\n\n\tconstructor(\n\t\treadonly id: string,\n\t\tprivate readonly channel: IChannel,\n\t) {\n\t\tsuper();\n\t}\n\n\tasync merge(): Promise<void> {\n\t\treturn this.channel.call('merge');\n\t}\n\n\tasync apply(): Promise<void> {\n\t\treturn this.channel.call('apply');\n\t}\n\n\tstop(): Promise<void> {\n\t\treturn this.channel.call('stop');\n\t}\n\n\toverride dispose(): void {\n\t\tthis.channel.call('dispose');\n\t\tsuper.dispose();\n\t}\n\n}\n"],
  "mappings": "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",
  "names": ["status", "lastSyncTime"]
}
