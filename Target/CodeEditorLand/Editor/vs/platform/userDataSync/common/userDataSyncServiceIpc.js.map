{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/userDataSync/common/userDataSyncServiceIpc.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { CancellationToken } from \"../../../base/common/cancellation.js\";\nimport { Emitter, type Event } from \"../../../base/common/event.js\";\nimport { Disposable } from \"../../../base/common/lifecycle.js\";\nimport { URI } from \"../../../base/common/uri.js\";\nimport type {\n\tIChannel,\n\tIServerChannel,\n} from \"../../../base/parts/ipc/common/ipc.js\";\nimport type { ILogService } from \"../../log/common/log.js\";\nimport {\n\tIUserDataProfilesService,\n\treviveProfile,\n} from \"../../userDataProfile/common/userDataProfile.js\";\nimport {\n\ttype ISyncResourceHandle,\n\ttype IUserDataManualSyncTask,\n\ttype IUserDataSyncResource,\n\ttype IUserDataSyncResourceConflicts,\n\ttype IUserDataSyncResourceError,\n\ttype IUserDataSyncService,\n\ttype IUserDataSyncTask,\n\ttype SyncResource,\n\tSyncStatus,\n\tUserDataSyncError,\n} from \"./userDataSync.js\";\n\ntype ManualSyncTaskEvent<T> = { manualSyncTaskId: string; data: T };\n\nfunction reviewSyncResource(\n\tsyncResource: IUserDataSyncResource,\n\tuserDataProfilesService: IUserDataProfilesService,\n): IUserDataSyncResource {\n\treturn {\n\t\t...syncResource,\n\t\tprofile: reviveProfile(\n\t\t\tsyncResource.profile,\n\t\t\tuserDataProfilesService.profilesHome.scheme,\n\t\t),\n\t};\n}\n\nfunction reviewSyncResourceHandle(\n\tsyncResourceHandle: ISyncResourceHandle,\n): ISyncResourceHandle {\n\treturn {\n\t\tcreated: syncResourceHandle.created,\n\t\turi: URI.revive(syncResourceHandle.uri),\n\t};\n}\n\nexport class UserDataSyncServiceChannel implements IServerChannel {\n\tprivate readonly manualSyncTasks = new Map<\n\t\tstring,\n\t\tIUserDataManualSyncTask\n\t>();\n\tprivate readonly onManualSynchronizeResources = new Emitter<\n\t\tManualSyncTaskEvent<[SyncResource, URI[]][]>\n\t>();\n\n\tconstructor(\n\t\tprivate readonly service: IUserDataSyncService,\n\t\tprivate readonly userDataProfilesService: IUserDataProfilesService,\n\t\tprivate readonly logService: ILogService,\n\t) {}\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\t// sync\n\t\t\tcase \"onDidChangeStatus\":\n\t\t\t\treturn this.service.onDidChangeStatus;\n\t\t\tcase \"onDidChangeConflicts\":\n\t\t\t\treturn this.service.onDidChangeConflicts;\n\t\t\tcase \"onDidChangeLocal\":\n\t\t\t\treturn this.service.onDidChangeLocal;\n\t\t\tcase \"onDidChangeLastSyncTime\":\n\t\t\t\treturn this.service.onDidChangeLastSyncTime;\n\t\t\tcase \"onSyncErrors\":\n\t\t\t\treturn this.service.onSyncErrors;\n\t\t\tcase \"onDidResetLocal\":\n\t\t\t\treturn this.service.onDidResetLocal;\n\t\t\tcase \"onDidResetRemote\":\n\t\t\t\treturn this.service.onDidResetRemote;\n\n\t\t\t// manual sync\n\t\t\tcase \"manualSync/onSynchronizeResources\":\n\t\t\t\treturn this.onManualSynchronizeResources.event;\n\t\t}\n\n\t\tthrow new Error(\n\t\t\t`[UserDataSyncServiceChannel] Event not found: ${event}`,\n\t\t);\n\t}\n\n\tasync call(context: any, command: string, args?: any): Promise<any> {\n\t\ttry {\n\t\t\tconst result = await this._call(context, command, args);\n\t\t\treturn result;\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\tprivate async _call(\n\t\tcontext: any,\n\t\tcommand: string,\n\t\targs?: any,\n\t): Promise<any> {\n\t\tswitch (command) {\n\t\t\t// sync\n\t\t\tcase \"_getInitialData\":\n\t\t\t\treturn Promise.resolve([\n\t\t\t\t\tthis.service.status,\n\t\t\t\t\tthis.service.conflicts,\n\t\t\t\t\tthis.service.lastSyncTime,\n\t\t\t\t]);\n\t\t\tcase \"reset\":\n\t\t\t\treturn this.service.reset();\n\t\t\tcase \"resetRemote\":\n\t\t\t\treturn this.service.resetRemote();\n\t\t\tcase \"resetLocal\":\n\t\t\t\treturn this.service.resetLocal();\n\t\t\tcase \"hasPreviouslySynced\":\n\t\t\t\treturn this.service.hasPreviouslySynced();\n\t\t\tcase \"hasLocalData\":\n\t\t\t\treturn this.service.hasLocalData();\n\t\t\tcase \"resolveContent\":\n\t\t\t\treturn this.service.resolveContent(URI.revive(args[0]));\n\t\t\tcase \"accept\":\n\t\t\t\treturn this.service.accept(\n\t\t\t\t\treviewSyncResource(args[0], this.userDataProfilesService),\n\t\t\t\t\tURI.revive(args[1]),\n\t\t\t\t\targs[2],\n\t\t\t\t\targs[3],\n\t\t\t\t);\n\t\t\tcase \"replace\":\n\t\t\t\treturn this.service.replace(reviewSyncResourceHandle(args[0]));\n\t\t\tcase \"cleanUpRemoteData\":\n\t\t\t\treturn this.service.cleanUpRemoteData();\n\t\t\tcase \"getRemoteActivityData\":\n\t\t\t\treturn this.service.saveRemoteActivityData(URI.revive(args[0]));\n\t\t\tcase \"extractActivityData\":\n\t\t\t\treturn this.service.extractActivityData(\n\t\t\t\t\tURI.revive(args[0]),\n\t\t\t\t\tURI.revive(args[1]),\n\t\t\t\t);\n\n\t\t\tcase \"createManualSyncTask\":\n\t\t\t\treturn this.createManualSyncTask();\n\t\t}\n\n\t\t// manual sync\n\t\tif (command.startsWith(\"manualSync/\")) {\n\t\t\tconst manualSyncTaskCommand = command.substring(\n\t\t\t\t\"manualSync/\".length,\n\t\t\t);\n\t\t\tconst manualSyncTaskId = args[0];\n\t\t\tconst manualSyncTask = this.getManualSyncTask(manualSyncTaskId);\n\t\t\targs = (<Array<any>>args).slice(1);\n\n\t\t\tswitch (manualSyncTaskCommand) {\n\t\t\t\tcase \"merge\":\n\t\t\t\t\treturn manualSyncTask.merge();\n\t\t\t\tcase \"apply\":\n\t\t\t\t\treturn manualSyncTask\n\t\t\t\t\t\t.apply()\n\t\t\t\t\t\t.then(() =>\n\t\t\t\t\t\t\tthis.manualSyncTasks.delete(\n\t\t\t\t\t\t\t\tthis.createKey(manualSyncTask.id),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\tcase \"stop\":\n\t\t\t\t\treturn manualSyncTask\n\t\t\t\t\t\t.stop()\n\t\t\t\t\t\t.finally(() =>\n\t\t\t\t\t\t\tthis.manualSyncTasks.delete(\n\t\t\t\t\t\t\t\tthis.createKey(manualSyncTask.id),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(\"Invalid call\");\n\t}\n\n\tprivate getManualSyncTask(\n\t\tmanualSyncTaskId: string,\n\t): IUserDataManualSyncTask {\n\t\tconst manualSyncTask = this.manualSyncTasks.get(\n\t\t\tthis.createKey(manualSyncTaskId),\n\t\t);\n\t\tif (!manualSyncTask) {\n\t\t\tthrow new Error(`Manual sync taks not found: ${manualSyncTaskId}`);\n\t\t}\n\t\treturn manualSyncTask;\n\t}\n\n\tprivate async createManualSyncTask(): Promise<string> {\n\t\tconst manualSyncTask = await this.service.createManualSyncTask();\n\t\tthis.manualSyncTasks.set(\n\t\t\tthis.createKey(manualSyncTask.id),\n\t\t\tmanualSyncTask,\n\t\t);\n\t\treturn manualSyncTask.id;\n\t}\n\n\tprivate createKey(manualSyncTaskId: string): string {\n\t\treturn `manualSyncTask-${manualSyncTaskId}`;\n\t}\n}\n\nexport class UserDataSyncServiceChannelClient\n\textends Disposable\n\timplements IUserDataSyncService\n{\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly channel: IChannel;\n\n\tprivate _status: SyncStatus = SyncStatus.Uninitialized;\n\tget status(): SyncStatus {\n\t\treturn this._status;\n\t}\n\tprivate _onDidChangeStatus: Emitter<SyncStatus> = this._register(\n\t\tnew Emitter<SyncStatus>(),\n\t);\n\treadonly onDidChangeStatus: Event<SyncStatus> =\n\t\tthis._onDidChangeStatus.event;\n\n\tget onDidChangeLocal(): Event<SyncResource> {\n\t\treturn this.channel.listen<SyncResource>(\"onDidChangeLocal\");\n\t}\n\n\tprivate _conflicts: IUserDataSyncResourceConflicts[] = [];\n\tget conflicts(): IUserDataSyncResourceConflicts[] {\n\t\treturn this._conflicts;\n\t}\n\tprivate _onDidChangeConflicts = this._register(\n\t\tnew Emitter<IUserDataSyncResourceConflicts[]>(),\n\t);\n\treadonly onDidChangeConflicts = this._onDidChangeConflicts.event;\n\n\tprivate _lastSyncTime: number | undefined = undefined;\n\tget lastSyncTime(): number | undefined {\n\t\treturn this._lastSyncTime;\n\t}\n\tprivate _onDidChangeLastSyncTime: Emitter<number> = this._register(\n\t\tnew Emitter<number>(),\n\t);\n\treadonly onDidChangeLastSyncTime: Event<number> =\n\t\tthis._onDidChangeLastSyncTime.event;\n\n\tprivate _onSyncErrors = this._register(\n\t\tnew Emitter<IUserDataSyncResourceError[]>(),\n\t);\n\treadonly onSyncErrors = this._onSyncErrors.event;\n\n\tget onDidResetLocal(): Event<void> {\n\t\treturn this.channel.listen<void>(\"onDidResetLocal\");\n\t}\n\tget onDidResetRemote(): Event<void> {\n\t\treturn this.channel.listen<void>(\"onDidResetRemote\");\n\t}\n\n\tconstructor(\n\t\tuserDataSyncChannel: IChannel,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t) {\n\t\tsuper();\n\t\tthis.channel = {\n\t\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\treturn userDataSyncChannel.call(command, arg, cancellationToken)\n\t\t\t\t\t.then(null, error => { throw UserDataSyncError.toUserDataSyncError(error); });\n\t\t\t},\n\t\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\t\treturn userDataSyncChannel.listen(event, arg);\n\t\t\t}\n\t\t};\n\t\tthis.channel.call<[SyncStatus, IUserDataSyncResourceConflicts[], number | undefined]>('_getInitialData').then(([status, conflicts, lastSyncTime]) => {\n\t\t\tthis.updateStatus(status);\n\t\t\tthis.updateConflicts(conflicts);\n\t\t\tif (lastSyncTime) {\n\t\t\t\tthis.updateLastSyncTime(lastSyncTime);\n\t\t\t}\n\t\t\tthis._register(this.channel.listen<SyncStatus>('onDidChangeStatus')(status => this.updateStatus(status)));\n\t\t\tthis._register(this.channel.listen<number>('onDidChangeLastSyncTime')(lastSyncTime => this.updateLastSyncTime(lastSyncTime)));\n\t\t});\n\t\tthis._register(this.channel.listen<IUserDataSyncResourceConflicts[]>('onDidChangeConflicts')(conflicts => this.updateConflicts(conflicts)));\n\t\tthis._register(this.channel.listen<IUserDataSyncResourceError[]>('onSyncErrors')(errors => this._onSyncErrors.fire(errors.map(syncError => ({ ...syncError, error: UserDataSyncError.toUserDataSyncError(syncError.error) })))));\n\t}\n\n\tcreateSyncTask(): Promise<IUserDataSyncTask> {\n\t\tthrow new Error(\"not supported\");\n\t}\n\n\tasync createManualSyncTask(): Promise<IUserDataManualSyncTask> {\n\t\tconst id = await this.channel.call<string>(\"createManualSyncTask\");\n\t\tconst that = this;\n\t\tconst manualSyncTaskChannelClient = new ManualSyncTaskChannelClient(\n\t\t\tid,\n\t\t\t{\n\t\t\t\tasync call<T>(\n\t\t\t\t\tcommand: string,\n\t\t\t\t\targ?: any,\n\t\t\t\t\tcancellationToken?: CancellationToken,\n\t\t\t\t): Promise<T> {\n\t\t\t\t\treturn that.channel.call<T>(\n\t\t\t\t\t\t`manualSync/${command}`,\n\t\t\t\t\t\t[id, ...(Array.isArray(arg) ? arg : [arg])],\n\t\t\t\t\t\tcancellationToken,\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\tlisten<T>(): Event<T> {\n\t\t\t\t\tthrow new Error(\"not supported\");\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t\treturn manualSyncTaskChannelClient;\n\t}\n\n\treset(): Promise<void> {\n\t\treturn this.channel.call(\"reset\");\n\t}\n\n\tresetRemote(): Promise<void> {\n\t\treturn this.channel.call(\"resetRemote\");\n\t}\n\n\tresetLocal(): Promise<void> {\n\t\treturn this.channel.call(\"resetLocal\");\n\t}\n\n\thasPreviouslySynced(): Promise<boolean> {\n\t\treturn this.channel.call(\"hasPreviouslySynced\");\n\t}\n\n\thasLocalData(): Promise<boolean> {\n\t\treturn this.channel.call(\"hasLocalData\");\n\t}\n\n\taccept(\n\t\tsyncResource: IUserDataSyncResource,\n\t\tresource: URI,\n\t\tcontent: string | null,\n\t\tapply: boolean | { force: boolean },\n\t): Promise<void> {\n\t\treturn this.channel.call(\"accept\", [\n\t\t\tsyncResource,\n\t\t\tresource,\n\t\t\tcontent,\n\t\t\tapply,\n\t\t]);\n\t}\n\n\tresolveContent(resource: URI): Promise<string | null> {\n\t\treturn this.channel.call(\"resolveContent\", [resource]);\n\t}\n\n\tcleanUpRemoteData(): Promise<void> {\n\t\treturn this.channel.call(\"cleanUpRemoteData\");\n\t}\n\n\treplace(syncResourceHandle: ISyncResourceHandle): Promise<void> {\n\t\treturn this.channel.call(\"replace\", [syncResourceHandle]);\n\t}\n\n\tsaveRemoteActivityData(location: URI): Promise<void> {\n\t\treturn this.channel.call(\"getRemoteActivityData\", [location]);\n\t}\n\n\textractActivityData(\n\t\tactivityDataResource: URI,\n\t\tlocation: URI,\n\t): Promise<void> {\n\t\treturn this.channel.call(\"extractActivityData\", [\n\t\t\tactivityDataResource,\n\t\t\tlocation,\n\t\t]);\n\t}\n\n\tprivate async updateStatus(status: SyncStatus): Promise<void> {\n\t\tthis._status = status;\n\t\tthis._onDidChangeStatus.fire(status);\n\t}\n\n\tprivate async updateConflicts(\n\t\tconflicts: IUserDataSyncResourceConflicts[],\n\t): Promise<void> {\n\t\t// Revive URIs\n\t\tthis._conflicts = conflicts.map((syncConflict) => ({\n\t\t\tsyncResource: syncConflict.syncResource,\n\t\t\tprofile: reviveProfile(\n\t\t\t\tsyncConflict.profile,\n\t\t\t\tthis.userDataProfilesService.profilesHome.scheme,\n\t\t\t),\n\t\t\tconflicts: syncConflict.conflicts.map((r) => ({\n\t\t\t\t...r,\n\t\t\t\tbaseResource: URI.revive(r.baseResource),\n\t\t\t\tlocalResource: URI.revive(r.localResource),\n\t\t\t\tremoteResource: URI.revive(r.remoteResource),\n\t\t\t\tpreviewResource: URI.revive(r.previewResource),\n\t\t\t})),\n\t\t}));\n\t\tthis._onDidChangeConflicts.fire(this._conflicts);\n\t}\n\n\tprivate updateLastSyncTime(lastSyncTime: number): void {\n\t\tif (this._lastSyncTime !== lastSyncTime) {\n\t\t\tthis._lastSyncTime = lastSyncTime;\n\t\t\tthis._onDidChangeLastSyncTime.fire(lastSyncTime);\n\t\t}\n\t}\n}\n\nclass ManualSyncTaskChannelClient\n\textends Disposable\n\timplements IUserDataManualSyncTask\n{\n\tconstructor(\n\t\treadonly id: string,\n\t\tprivate readonly channel: IChannel,\n\t) {\n\t\tsuper();\n\t}\n\n\tasync merge(): Promise<void> {\n\t\treturn this.channel.call(\"merge\");\n\t}\n\n\tasync apply(): Promise<void> {\n\t\treturn this.channel.call(\"apply\");\n\t}\n\n\tstop(): Promise<void> {\n\t\treturn this.channel.call(\"stop\");\n\t}\n\n\toverride dispose(): void {\n\t\tthis.channel.call(\"dispose\");\n\t\tsuper.dispose();\n\t}\n}\n"],
  "mappings": "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",
  "names": ["status", "lastSyncTime"]
}
