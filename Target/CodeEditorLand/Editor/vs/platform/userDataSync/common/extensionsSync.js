var H=Object.defineProperty;var K=Object.getOwnPropertyDescriptor;var L=(S,f,e,i)=>{for(var t=i>1?void 0:i?K(f,e):f,o=S.length-1,n;o>=0;o--)(n=S[o])&&(t=(i?n(f,e,t):n(t))||t);return i&&t&&H(f,e,t),t},c=(S,f)=>(e,i)=>f(e,i,S);import{Promises as G}from"../../../base/common/async.js";import{CancellationToken as V}from"../../../base/common/cancellation.js";import{getErrorMessage as Y}from"../../../base/common/errors.js";import{Event as M}from"../../../base/common/event.js";import{toFormattedString as W}from"../../../base/common/jsonFormatter.js";import{DisposableStore as Q}from"../../../base/common/lifecycle.js";import{compare as Z}from"../../../base/common/strings.js";import{IConfigurationService as ee}from"../../configuration/common/configuration.js";import{IEnvironmentService as _}from"../../environment/common/environment.js";import{GlobalExtensionEnablementService as ne}from"../../extensionManagement/common/extensionEnablementService.js";import{IExtensionGalleryService as ie,IExtensionManagementService as k,ExtensionManagementError as te,ExtensionManagementErrorCode as T,DISABLED_EXTENSIONS_STORAGE_PATH as se,EXTENSION_INSTALL_SKIP_WALKTHROUGH_CONTEXT as oe,EXTENSION_INSTALL_SOURCE_CONTEXT as re,ExtensionInstallSource as ae}from"../../extensionManagement/common/extensionManagement.js";import{areSameExtensions as R}from"../../extensionManagement/common/extensionManagementUtil.js";import{ExtensionStorageService as ce,IExtensionStorageService as le}from"../../extensionManagement/common/extensionStorage.js";import{ExtensionType as de,isApplicationScopedExtension as fe}from"../../extensions/common/extensions.js";import{IFileService as J}from"../../files/common/files.js";import{IInstantiationService as z}from"../../instantiation/common/instantiation.js";import{ServiceCollection as xe}from"../../instantiation/common/serviceCollection.js";import{ILogService as ue}from"../../log/common/log.js";import{IStorageService as O}from"../../storage/common/storage.js";import{ITelemetryService as ge}from"../../telemetry/common/telemetry.js";import{IUriIdentityService as F}from"../../uriIdentity/common/uriIdentity.js";import{IUserDataProfilesService as pe}from"../../userDataProfile/common/userDataProfile.js";import{AbstractInitializer as Se,AbstractSynchroniser as Ee,getSyncResourceLogLabel as q}from"./abstractSynchronizer.js";import{merge as D}from"./extensionsMerge.js";import{IIgnoredExtensionsManagementService as A}from"./ignoredExtensions.js";import{Change as E,IUserDataSyncLocalStoreService as Ie,IUserDataSyncLogService as B,IUserDataSyncEnablementService as he,IUserDataSyncStoreService as me,SyncResource as C,USER_DATA_SYNC_SCHEME as U}from"./userDataSync.js";import{IUserDataProfileStorageService as X}from"../../userDataProfile/common/userDataProfileStorageService.js";async function P(S,f){const e=JSON.parse(S.content);if(S.version===1||S.version===2){const i=(await f.getInstalled(de.System)).filter(t=>t.isBuiltin);for(const t of e)S.version===1&&(t.enabled===!1&&(t.disabled=!0),delete t.enabled),S.version===2&&i.every(o=>!R(o.identifier,t.identifier))&&(t.installed=!0)}return e}function Sn(S){return JSON.parse(S.content)}function ve(S,f){return S.sort((e,i)=>!e.identifier.uuid&&i.identifier.uuid?-1:e.identifier.uuid&&!i.identifier.uuid?1:Z(e.identifier.id,i.identifier.id)),f?W(S,{}):JSON.stringify(S)}let N=class extends Ee{constructor(e,i,t,o,n,r,x,a,u,h,v,I,l,g,s,p,m){super({syncResource:C.Extensions,profile:e},i,o,t,n,r,x,I,l,h,v,s);this.extensionManagementService=a;this.ignoredExtensionsManagementService=u;this.instantiationService=m;this.localExtensionsProvider=this.instantiationService.createInstance(w),this._register(M.any(M.filter(this.extensionManagementService.onDidInstallExtensions,d=>d.some(({local:y})=>!!y)),M.filter(this.extensionManagementService.onDidUninstallExtension,d=>!d.error),M.filter(p.onDidChange,d=>d.valueChanges.some(({profile:y,changes:b})=>this.syncResource.profile.id===y.id&&b.some(j=>j.key===se))),g.onDidChangeExtensionStorageToSync)(()=>this.triggerLocalChange()))}version=6;previewResource=this.extUri.joinPath(this.syncPreviewFolder,"extensions.json");baseResource=this.previewResource.with({scheme:U,authority:"base"});localResource=this.previewResource.with({scheme:U,authority:"local"});remoteResource=this.previewResource.with({scheme:U,authority:"remote"});acceptedResource=this.previewResource.with({scheme:U,authority:"accepted"});localExtensionsProvider;async generateSyncPreview(e,i){const t=e.syncData?await P(e.syncData,this.extensionManagementService):null,o=i?.skippedExtensions??[],n=i?.builtinExtensions??null,r=i?.syncData?await P(i.syncData,this.extensionManagementService):null,{localExtensions:x,ignoredExtensions:a}=await this.localExtensionsProvider.getLocalExtensions(this.syncResource.profile);t?this.logService.trace(`${this.syncResourceLogLabel}: Merging remote extensions with local extensions...`):this.logService.trace(`${this.syncResourceLogLabel}: Remote extensions does not exist. Synchronizing extensions for the first time.`);const{local:u,remote:h}=D(x,t,r,o,a,n),v={local:u,remote:h,content:this.getPreviewContent(x,u.added,u.updated,u.removed),localChange:u.added.length>0||u.removed.length>0||u.updated.length>0?E.Modified:E.None,remoteChange:h!==null?E.Modified:E.None},I=this.stringify(x,!1);return[{skippedExtensions:o,builtinExtensions:n,baseResource:this.baseResource,baseContent:r?this.stringify(r,!1):I,localResource:this.localResource,localContent:I,localExtensions:x,remoteResource:this.remoteResource,remoteExtensions:t,remoteContent:t?this.stringify(t,!1):null,previewResource:this.previewResource,previewResult:v,localChange:v.localChange,remoteChange:v.remoteChange,acceptedResource:this.acceptedResource}]}async hasRemoteChanged(e){const i=e.syncData?await P(e.syncData,this.extensionManagementService):null,{localExtensions:t,ignoredExtensions:o}=await this.localExtensionsProvider.getLocalExtensions(this.syncResource.profile),{remote:n}=D(t,i,i,e.skippedExtensions||[],o,e.builtinExtensions||[]);return n!==null}getPreviewContent(e,i,t,o){const n=[...i,...t],r=new Set,x=a=>{r.add(a.id.toLowerCase()),a.uuid&&r.add(a.uuid)};n.forEach(({identifier:a})=>x(a)),o.forEach(x);for(const a of e)r.has(a.identifier.id.toLowerCase())||a.identifier.uuid&&r.has(a.identifier.uuid)||n.push(a);return this.stringify(n,!1)}async getMergeResult(e,i){return{...e.previewResult,hasConflicts:!1}}async getAcceptResult(e,i,t,o){if(this.extUri.isEqual(i,this.localResource))return this.acceptLocal(e);if(this.extUri.isEqual(i,this.remoteResource))return this.acceptRemote(e);if(this.extUri.isEqual(i,this.previewResource))return e.previewResult;throw new Error(`Invalid Resource: ${i.toString()}`)}async acceptLocal(e){const i=await this.extensionManagementService.getInstalled(void 0,this.syncResource.profile.extensionsResource),t=this.ignoredExtensionsManagementService.getIgnoredExtensions(i),o=D(e.localExtensions,null,null,e.skippedExtensions,t,e.builtinExtensions),{local:n,remote:r}=o;return{content:e.localContent,local:n,remote:r,localChange:n.added.length>0||n.removed.length>0||n.updated.length>0?E.Modified:E.None,remoteChange:r!==null?E.Modified:E.None}}async acceptRemote(e){const i=await this.extensionManagementService.getInstalled(void 0,this.syncResource.profile.extensionsResource),t=this.ignoredExtensionsManagementService.getIgnoredExtensions(i),o=e.remoteContent?JSON.parse(e.remoteContent):null;if(o!==null){const n=D(e.localExtensions,o,e.localExtensions,[],t,e.builtinExtensions),{local:r,remote:x}=n;return{content:e.remoteContent,local:r,remote:x,localChange:r.added.length>0||r.removed.length>0||r.updated.length>0?E.Modified:E.None,remoteChange:x!==null?E.Modified:E.None}}else return{content:e.remoteContent,local:{added:[],removed:[],updated:[]},remote:null,localChange:E.None,remoteChange:E.None}}async applyResult(e,i,t,o){let{skippedExtensions:n,builtinExtensions:r,localExtensions:x}=t[0][0];const{local:a,remote:u,localChange:h,remoteChange:v}=t[0][1];if(h===E.None&&v===E.None&&this.logService.info(`${this.syncResourceLogLabel}: No changes found during synchronizing extensions.`),h!==E.None&&(await this.backupLocal(JSON.stringify(x)),n=await this.localExtensionsProvider.updateLocalExtensions(a.added,a.removed,a.updated,n,this.syncResource.profile)),u){this.logService.trace(`${this.syncResourceLogLabel}: Updating remote extensions...`);const I=JSON.stringify(u.all);e=await this.updateRemoteUserData(I,o?null:e.ref),this.logService.info(`${this.syncResourceLogLabel}: Updated remote extensions.${u.added.length?` Added: ${JSON.stringify(u.added.map(l=>l.identifier.id))}.`:""}${u.updated.length?` Updated: ${JSON.stringify(u.updated.map(l=>l.identifier.id))}.`:""}${u.removed.length?` Removed: ${JSON.stringify(u.removed.map(l=>l.identifier.id))}.`:""}`)}i?.ref!==e.ref&&(this.logService.trace(`${this.syncResourceLogLabel}: Updating last synchronized extensions...`),r=this.computeBuiltinExtensions(x,r),await this.updateLastSyncUserData(e,{skippedExtensions:n,builtinExtensions:r}),this.logService.info(`${this.syncResourceLogLabel}: Updated last synchronized extensions.${n.length?` Skipped: ${JSON.stringify(n.map(I=>I.identifier.id))}.`:""}`))}computeBuiltinExtensions(e,i){const t=new Set,o=[];for(const n of e)t.add(n.identifier.id.toLowerCase()),n.installed||o.push(n.identifier);if(i)for(const n of i)t.has(n.id.toLowerCase())||o.push(n);return o}async resolveContent(e){if(this.extUri.isEqual(this.remoteResource,e)||this.extUri.isEqual(this.baseResource,e)||this.extUri.isEqual(this.localResource,e)||this.extUri.isEqual(this.acceptedResource,e)){const i=await this.resolvePreviewContent(e);return i&&this.stringify(JSON.parse(i),!0)}return null}stringify(e,i){return ve(e,i)}async hasLocalData(){try{const{localExtensions:e}=await this.localExtensionsProvider.getLocalExtensions(this.syncResource.profile);if(e.some(i=>i.installed||i.disabled))return!0}catch{}return!1}};N=L([c(2,_),c(3,J),c(4,O),c(5,me),c(6,Ie),c(7,k),c(8,A),c(9,B),c(10,ee),c(11,he),c(12,ge),c(13,le),c(14,F),c(15,X),c(16,z)],N);let w=class{constructor(f,e,i,t,o,n){this.extensionManagementService=f;this.userDataProfileStorageService=e;this.extensionGalleryService=i;this.ignoredExtensionsManagementService=t;this.instantiationService=o;this.logService=n}async getLocalExtensions(f){const e=await this.extensionManagementService.getInstalled(void 0,f.extensionsResource),i=this.ignoredExtensionsManagementService.getIgnoredExtensions(e);return{localExtensions:await this.withProfileScopedServices(f,async(o,n)=>{const r=o.getDisabledExtensions();return e.map(x=>{const{identifier:a,isBuiltin:u,manifest:h,preRelease:v,pinned:I,isApplicationScoped:l}=x,g={identifier:a,preRelease:v,version:h.version,pinned:!!I};l&&!fe(h)&&(g.isApplicationScoped=l),r.some(s=>R(s,a))&&(g.disabled=!0),u||(g.installed=!0);try{const s=n.getKeysForSync({id:a.id,version:h.version});if(s){const p=n.getExtensionState(x,!0)||{};g.state=Object.keys(p).reduce((m,d)=>(s.includes(d)&&(m[d]=p[d]),m),{})}}catch(s){this.logService.info(`${q(C.Extensions,f)}: Error while parsing extension state`,Y(s))}return g})}),ignoredExtensions:i}}async updateLocalExtensions(f,e,i,t,o){const n=q(C.Extensions,o),r=[],x=new Map,a=[],u=[],h=await this.extensionManagementService.getInstalled(void 0,o.extensionsResource);if((f.length||i.length)&&await this.withProfileScopedServices(o,async(l,g)=>{await G.settled([...f,...i].map(async s=>{const p=h.find(y=>R(y.identifier,s.identifier));if(p&&p.isBuiltin){s.state&&p.manifest.version===s.version&&this.updateExtensionState(s.state,p,p.manifest.version,g),l.getDisabledExtensions().some(b=>R(b,s.identifier))!==!!s.disabled&&(s.disabled?(this.logService.trace(`${n}: Disabling extension...`,s.identifier.id),await l.disableExtension(s.identifier),this.logService.info(`${n}: Disabled extension`,s.identifier.id)):(this.logService.trace(`${n}: Enabling extension...`,s.identifier.id),await l.enableExtension(s.identifier),this.logService.info(`${n}: Enabled extension`,s.identifier.id))),a.push(s.identifier);return}const m=s.pinned?s.version:void 0,d=(await this.extensionGalleryService.getExtensions([{...s.identifier,version:m,preRelease:m?void 0:s.preRelease}],V.None))[0];if(s.state&&(p?p.manifest.version===s.version:d)&&this.updateExtensionState(s.state,p||d,p?.manifest.version,g),d)try{l.getDisabledExtensions().some(b=>R(b,s.identifier))!==!!s.disabled&&(s.disabled?(this.logService.trace(`${n}: Disabling extension...`,s.identifier.id,d.version),await l.disableExtension(d.identifier),this.logService.info(`${n}: Disabled extension`,s.identifier.id,d.version)):(this.logService.trace(`${n}: Enabling extension...`,s.identifier.id,d.version),await l.enableExtension(d.identifier),this.logService.info(`${n}: Enabled extension`,s.identifier.id,d.version))),(!p||p.preRelease!==s.preRelease||p.pinned!==s.pinned||m&&p.manifest.version!==m)&&(await this.extensionManagementService.canInstall(d)?(r.push({extension:d,options:{isMachineScoped:!1,donotIncludePackAndDependencies:!0,installGivenVersion:s.pinned&&!!s.version,pinned:s.pinned,installPreReleaseVersion:s.preRelease,profileLocation:o.extensionsResource,isApplicationScoped:s.isApplicationScoped,context:{[oe]:!0,[re]:ae.SETTINGS_SYNC}}}),x.set(d.identifier.id.toLowerCase(),s)):(this.logService.info(`${n}: Skipped synchronizing extension because it cannot be installed.`,d.displayName||d.identifier.id),u.push(s)))}catch(y){u.push(s),this.logService.error(y),this.logService.info(`${n}: Skipped synchronizing extension`,d.displayName||d.identifier.id)}else u.push(s),this.logService.info(`${n}: Skipped synchronizing extension because the extension is not found.`,s.identifier.id)}))}),e.length){const l=h.filter(({identifier:g,isBuiltin:s})=>!s&&e.some(p=>R(g,p)));await G.settled(l.map(async g=>{this.logService.trace(`${n}: Uninstalling local extension...`,g.identifier.id),await this.extensionManagementService.uninstall(g,{donotIncludePack:!0,donotCheckDependents:!0,profileLocation:o.extensionsResource}),this.logService.info(`${n}: Uninstalled local extension.`,g.identifier.id),a.push(g.identifier)}))}const v=await this.extensionManagementService.installGalleryExtensions(r);for(const{identifier:l,local:g,error:s,source:p}of v){const m=p;if(g)this.logService.info(`${n}: Installed extension.`,l.id,m.version),a.push(l);else{const d=x.get(l.id.toLowerCase());d&&(u.push(d),this.logService.info(`${n}: Skipped synchronizing extension`,m.displayName||m.identifier.id)),s instanceof te&&[T.Incompatible,T.IncompatibleApi,T.IncompatibleTargetPlatform].includes(s.code)?this.logService.info(`${n}: Skipped synchronizing extension because the compatible extension is not found.`,m.displayName||m.identifier.id):s&&this.logService.error(s)}}const I=[];for(const l of t)a.some(g=>R(g,l.identifier))||I.push(l);for(const l of u)I.some(g=>R(g.identifier,l.identifier))||I.push(l);return I}updateExtensionState(f,e,i,t){const o=t.getExtensionState(e,!0)||{},n=i?t.getKeysForSync({id:e.identifier.id,version:i}):void 0;n?n.forEach(r=>{o[r]=f[r]}):Object.keys(f).forEach(r=>o[r]=f[r]),t.setExtensionState(e,o,!0)}async withProfileScopedServices(f,e){return this.userDataProfileStorageService.withProfileScopedStorageService(f,async i=>{const t=new Q,o=t.add(this.instantiationService.createChild(new xe([O,i]))),n=t.add(o.createInstance(ne)),r=t.add(o.createInstance(ce));try{return await e(n,r)}finally{t.dispose()}})}};w=L([c(0,k),c(1,X),c(2,ie),c(3,A),c(4,z),c(5,B)],w);let $=class extends Se{constructor(e,i,t,o,n,r,x,a){super(C.Extensions,o,n,r,t,x,a);this.extensionManagementService=e;this.ignoredExtensionsManagementService=i}async parseExtensions(e){return e.syncData?await P(e.syncData,this.extensionManagementService):null}generatePreview(e,i){const t=[],o=[],n=[];for(const r of e){if(this.ignoredExtensionsManagementService.hasToNeverSyncExtension(r.identifier.id))continue;const x=i.find(a=>R(a.identifier,r.identifier));x?(t.push(x),r.disabled&&n.push(r.identifier)):r.installed&&(o.push({...r.identifier,preRelease:!!r.preRelease}),r.disabled&&n.push(r.identifier))}return{installedExtensions:t,newExtensions:o,disabledExtensions:n,remoteExtensions:e}}};$=L([c(0,k),c(1,A),c(2,J),c(3,pe),c(4,_),c(5,ue),c(6,O),c(7,F)],$);export{$ as AbstractExtensionsInitializer,N as ExtensionsSynchroniser,w as LocalExtensionsProvider,Sn as parseExtensions,ve as stringify};
