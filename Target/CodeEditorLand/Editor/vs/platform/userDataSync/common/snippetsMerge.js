function v(n,r,a){let i={},c={},u=new Set;if(!r)return{local:{added:i,updated:c,removed:[...u.values()]},remote:{added:n,updated:{},removed:[]},conflicts:[]};let s=f(n,r);if(s.added.size===0&&s.removed.size===0&&s.updated.size===0)return{local:{added:i,updated:c,removed:[...u.values()]},remote:{added:{},updated:{},removed:[]},conflicts:[]};let t=f(a,n),o=f(a,r),l={},p={},g=new Set,d=new Set;for(let e of t.removed.values())o.updated.has(e)?i[e]=r[e]:g.add(e);for(let e of o.removed.values())d.has(e)||(t.updated.has(e)?d.add(e):u.add(e));for(let e of t.updated.values())d.has(e)||(o.updated.has(e)?s.updated.has(e)&&d.add(e):p[e]=n[e]);for(let e of o.updated.values())d.has(e)||(t.updated.has(e)?s.updated.has(e)&&d.add(e):n[e]!==void 0&&(c[e]=r[e]));for(let e of t.added.values())d.has(e)||(o.added.has(e)?s.updated.has(e)&&d.add(e):l[e]=n[e]);for(let e of o.added.values())d.has(e)||(t.added.has(e)?s.updated.has(e)&&d.add(e):i[e]=r[e]);return{local:{added:i,removed:[...u.values()],updated:c},remote:{added:l,removed:[...g.values()],updated:p},conflicts:[...d.values()]}}function f(n,r){let a=n?Object.keys(n):[],i=r?Object.keys(r):[],c=i.filter(t=>!a.includes(t)).reduce((t,o)=>(t.add(o),t),new Set),u=a.filter(t=>!i.includes(t)).reduce((t,o)=>(t.add(o),t),new Set),s=new Set;for(let t of a){if(u.has(t))continue;let o=n[t],l=r[t];o!==l&&s.add(t)}return{added:c,removed:u,updated:s}}function S(n,r){let{added:a,removed:i,updated:c}=f(n,r);return a.size===0&&i.size===0&&c.size===0}export{S as areSame,v as merge};
