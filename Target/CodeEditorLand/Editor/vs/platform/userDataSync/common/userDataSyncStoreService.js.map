{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/userDataSync/common/userDataSyncStoreService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\ttype CancelablePromise,\n\tcreateCancelablePromise,\n\ttimeout,\n} from \"../../../base/common/async.js\";\nimport type { VSBufferReadableStream } from \"../../../base/common/buffer.js\";\nimport { CancellationToken } from \"../../../base/common/cancellation.js\";\nimport {\n\tgetErrorMessage,\n\tisCancellationError,\n} from \"../../../base/common/errors.js\";\nimport { Emitter, Event } from \"../../../base/common/event.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttoDisposable,\n} from \"../../../base/common/lifecycle.js\";\nimport { Mimes } from \"../../../base/common/mime.js\";\nimport { isWeb } from \"../../../base/common/platform.js\";\nimport type { ConfigurationSyncStore } from \"../../../base/common/product.js\";\nimport { joinPath, relativePath } from \"../../../base/common/resources.js\";\nimport { isObject, isString } from \"../../../base/common/types.js\";\nimport { URI } from \"../../../base/common/uri.js\";\nimport { generateUuid } from \"../../../base/common/uuid.js\";\nimport type {\n\tIHeaders,\n\tIRequestContext,\n\tIRequestOptions,\n} from \"../../../base/parts/request/common/request.js\";\nimport { IConfigurationService } from \"../../configuration/common/configuration.js\";\nimport { IEnvironmentService } from \"../../environment/common/environment.js\";\nimport { getServiceMachineId } from \"../../externalServices/common/serviceMachineId.js\";\nimport { IFileService } from \"../../files/common/files.js\";\nimport { IProductService } from \"../../product/common/productService.js\";\nimport {\n\tIRequestService,\n\tasJson,\n\tasText,\n\tasTextOrError,\n\thasNoContent,\n\tisSuccess,\n\tisSuccess as isSuccessContext,\n} from \"../../request/common/request.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../storage/common/storage.js\";\nimport {\n\tHEADER_EXECUTION_ID,\n\tHEADER_OPERATION_ID,\n\ttype IAuthenticationProvider,\n\ttype IResourceRefHandle,\n\ttype IUserData,\n\ttype IUserDataManifest,\n\tIUserDataSyncLogService,\n\ttype IUserDataSyncStore,\n\tIUserDataSyncStoreManagementService,\n\ttype IUserDataSyncStoreService,\n\tSYNC_SERVICE_URL_TYPE,\n\ttype ServerResource,\n\tUserDataSyncErrorCode,\n\tUserDataSyncStoreError,\n\ttype UserDataSyncStoreType,\n} from \"./userDataSync.js\";\n\nconst CONFIGURATION_SYNC_STORE_KEY = \"configurationSync.store\";\nconst SYNC_PREVIOUS_STORE = \"sync.previous.store\";\nconst DONOT_MAKE_REQUESTS_UNTIL_KEY = \"sync.donot-make-requests-until\";\nconst USER_SESSION_ID_KEY = \"sync.user-session-id\";\nconst MACHINE_SESSION_ID_KEY = \"sync.machine-session-id\";\nconst REQUEST_SESSION_LIMIT = 100;\nconst REQUEST_SESSION_INTERVAL = 1000 * 60 * 5; /* 5 minutes */\n\ntype UserDataSyncStore = IUserDataSyncStore & {\n\tdefaultType: UserDataSyncStoreType;\n};\n\nexport abstract class AbstractUserDataSyncStoreManagementService\n\textends Disposable\n\timplements IUserDataSyncStoreManagementService\n{\n\t_serviceBrand: any;\n\n\tprivate readonly _onDidChangeUserDataSyncStore = this._register(\n\t\tnew Emitter<void>(),\n\t);\n\treadonly onDidChangeUserDataSyncStore =\n\t\tthis._onDidChangeUserDataSyncStore.event;\n\tprivate _userDataSyncStore: UserDataSyncStore | undefined;\n\tget userDataSyncStore(): UserDataSyncStore | undefined {\n\t\treturn this._userDataSyncStore;\n\t}\n\n\tprotected get userDataSyncStoreType(): UserDataSyncStoreType | undefined {\n\t\treturn this.storageService.get(\n\t\t\tSYNC_SERVICE_URL_TYPE,\n\t\t\tStorageScope.APPLICATION,\n\t\t) as UserDataSyncStoreType;\n\t}\n\tprotected set userDataSyncStoreType(type:\n\t\t| UserDataSyncStoreType\n\t\t| undefined) {\n\t\tthis.storageService.store(\n\t\t\tSYNC_SERVICE_URL_TYPE,\n\t\t\ttype,\n\t\t\tStorageScope.APPLICATION,\n\t\t\tisWeb\n\t\t\t\t? StorageTarget.USER /* sync in web */\n\t\t\t\t: StorageTarget.MACHINE,\n\t\t);\n\t}\n\n\tconstructor(\n\t\t@IProductService protected readonly productService: IProductService,\n\t\t@IConfigurationService\n\t\tprotected readonly configurationService: IConfigurationService,\n\t\t@IStorageService protected readonly storageService: IStorageService,\n\t) {\n\t\tsuper();\n\t\tthis.updateUserDataSyncStore();\n\t\tconst disposable = this._register(new DisposableStore());\n\t\tthis._register(\n\t\t\tEvent.filter(\n\t\t\t\tstorageService.onDidChangeValue(\n\t\t\t\t\tStorageScope.APPLICATION,\n\t\t\t\t\tSYNC_SERVICE_URL_TYPE,\n\t\t\t\t\tdisposable,\n\t\t\t\t),\n\t\t\t\t() =>\n\t\t\t\t\tthis.userDataSyncStoreType !== this.userDataSyncStore?.type,\n\t\t\t\tdisposable,\n\t\t\t)(() => this.updateUserDataSyncStore()),\n\t\t);\n\t}\n\n\tprotected updateUserDataSyncStore(): void {\n\t\tthis._userDataSyncStore = this.toUserDataSyncStore(\n\t\t\tthis.productService[CONFIGURATION_SYNC_STORE_KEY],\n\t\t);\n\t\tthis._onDidChangeUserDataSyncStore.fire();\n\t}\n\n\tprotected toUserDataSyncStore(\n\t\tconfigurationSyncStore:\n\t\t\t| (ConfigurationSyncStore & { web?: ConfigurationSyncStore })\n\t\t\t| undefined,\n\t): UserDataSyncStore | undefined {\n\t\tif (!configurationSyncStore) {\n\t\t\treturn undefined;\n\t\t}\n\t\t// Check for web overrides for backward compatibility while reading previous store\n\t\tconfigurationSyncStore =\n\t\t\tisWeb && configurationSyncStore.web\n\t\t\t\t? { ...configurationSyncStore, ...configurationSyncStore.web }\n\t\t\t\t: configurationSyncStore;\n\t\tif (\n\t\t\tisString(configurationSyncStore.url) &&\n\t\t\tisObject(configurationSyncStore.authenticationProviders) &&\n\t\t\tObject.keys(configurationSyncStore.authenticationProviders).every(\n\t\t\t\t(authenticationProviderId) =>\n\t\t\t\t\tArray.isArray(\n\t\t\t\t\t\tconfigurationSyncStore.authenticationProviders[\n\t\t\t\t\t\t\tauthenticationProviderId\n\t\t\t\t\t\t].scopes,\n\t\t\t\t\t),\n\t\t\t)\n\t\t) {\n\t\t\tconst syncStore = configurationSyncStore as ConfigurationSyncStore;\n\t\t\tconst canSwitch = !!syncStore.canSwitch;\n\t\t\tconst defaultType: UserDataSyncStoreType =\n\t\t\t\tsyncStore.url === syncStore.insidersUrl ? \"insiders\" : \"stable\";\n\t\t\tconst type: UserDataSyncStoreType =\n\t\t\t\t(canSwitch ? this.userDataSyncStoreType : undefined) ||\n\t\t\t\tdefaultType;\n\t\t\tconst url =\n\t\t\t\ttype === \"insiders\"\n\t\t\t\t\t? syncStore.insidersUrl\n\t\t\t\t\t: type === \"stable\"\n\t\t\t\t\t\t? syncStore.stableUrl\n\t\t\t\t\t\t: syncStore.url;\n\t\t\treturn {\n\t\t\t\turl: URI.parse(url),\n\t\t\t\ttype,\n\t\t\t\tdefaultType,\n\t\t\t\tdefaultUrl: URI.parse(syncStore.url),\n\t\t\t\tstableUrl: URI.parse(syncStore.stableUrl),\n\t\t\t\tinsidersUrl: URI.parse(syncStore.insidersUrl),\n\t\t\t\tcanSwitch,\n\t\t\t\tauthenticationProviders: Object.keys(\n\t\t\t\t\tsyncStore.authenticationProviders,\n\t\t\t\t).reduce<IAuthenticationProvider[]>((result, id) => {\n\t\t\t\t\tresult.push({\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tscopes: syncStore.authenticationProviders[id].scopes,\n\t\t\t\t\t});\n\t\t\t\t\treturn result;\n\t\t\t\t}, []),\n\t\t\t};\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tabstract switch(type: UserDataSyncStoreType): Promise<void>;\n\tabstract getPreviousUserDataSyncStore(): Promise<\n\t\tIUserDataSyncStore | undefined\n\t>;\n}\n\nexport class UserDataSyncStoreManagementService\n\textends AbstractUserDataSyncStoreManagementService\n\timplements IUserDataSyncStoreManagementService\n{\n\tprivate readonly previousConfigurationSyncStore:\n\t\t| ConfigurationSyncStore\n\t\t| undefined;\n\n\tconstructor(\n\t\t@IProductService productService: IProductService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IStorageService storageService: IStorageService,\n\t) {\n\t\tsuper(productService, configurationService, storageService);\n\n\t\tconst previousConfigurationSyncStore = this.storageService.get(\n\t\t\tSYNC_PREVIOUS_STORE,\n\t\t\tStorageScope.APPLICATION,\n\t\t);\n\t\tif (previousConfigurationSyncStore) {\n\t\t\tthis.previousConfigurationSyncStore = JSON.parse(\n\t\t\t\tpreviousConfigurationSyncStore,\n\t\t\t);\n\t\t}\n\n\t\tconst syncStore = this.productService[CONFIGURATION_SYNC_STORE_KEY];\n\t\tif (syncStore) {\n\t\t\tthis.storageService.store(\n\t\t\t\tSYNC_PREVIOUS_STORE,\n\t\t\t\tJSON.stringify(syncStore),\n\t\t\t\tStorageScope.APPLICATION,\n\t\t\t\tStorageTarget.MACHINE,\n\t\t\t);\n\t\t} else {\n\t\t\tthis.storageService.remove(\n\t\t\t\tSYNC_PREVIOUS_STORE,\n\t\t\t\tStorageScope.APPLICATION,\n\t\t\t);\n\t\t}\n\t}\n\n\tasync switch(type: UserDataSyncStoreType): Promise<void> {\n\t\tif (type !== this.userDataSyncStoreType) {\n\t\t\tthis.userDataSyncStoreType = type;\n\t\t\tthis.updateUserDataSyncStore();\n\t\t}\n\t}\n\n\tasync getPreviousUserDataSyncStore(): Promise<\n\t\tIUserDataSyncStore | undefined\n\t> {\n\t\treturn this.toUserDataSyncStore(this.previousConfigurationSyncStore);\n\t}\n}\n\nexport class UserDataSyncStoreClient extends Disposable {\n\tprivate userDataSyncStoreUrl: URI | undefined;\n\n\tprivate authToken: { token: string; type: string } | undefined;\n\tprivate readonly commonHeadersPromise: Promise<IHeaders>;\n\tprivate readonly session: RequestsSession;\n\n\tprivate _onTokenFailed = this._register(\n\t\tnew Emitter<UserDataSyncErrorCode>(),\n\t);\n\treadonly onTokenFailed = this._onTokenFailed.event;\n\n\tprivate _onTokenSucceed: Emitter<void> = this._register(\n\t\tnew Emitter<void>(),\n\t);\n\treadonly onTokenSucceed: Event<void> = this._onTokenSucceed.event;\n\n\tprivate _donotMakeRequestsUntil: Date | undefined = undefined;\n\tget donotMakeRequestsUntil() {\n\t\treturn this._donotMakeRequestsUntil;\n\t}\n\tprivate _onDidChangeDonotMakeRequestsUntil = this._register(\n\t\tnew Emitter<void>(),\n\t);\n\treadonly onDidChangeDonotMakeRequestsUntil =\n\t\tthis._onDidChangeDonotMakeRequestsUntil.event;\n\n\tconstructor(\n\t\tuserDataSyncStoreUrl: URI | undefined,\n\t\t@IProductService productService: IProductService,\n\t\t@IRequestService private readonly requestService: IRequestService,\n\t\t@IUserDataSyncLogService\n\t\tprivate readonly logService: IUserDataSyncLogService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t) {\n\t\tsuper();\n\t\tthis.updateUserDataSyncStoreUrl(userDataSyncStoreUrl);\n\t\tthis.commonHeadersPromise = getServiceMachineId(\n\t\t\tenvironmentService,\n\t\t\tfileService,\n\t\t\tstorageService,\n\t\t).then((uuid) => {\n\t\t\tconst headers: IHeaders = {\n\t\t\t\t\"X-Client-Name\": `${productService.applicationName}${isWeb ? \"-web\" : \"\"}`,\n\t\t\t\t\"X-Client-Version\": productService.version,\n\t\t\t};\n\t\t\tif (productService.commit) {\n\t\t\t\theaders[\"X-Client-Commit\"] = productService.commit;\n\t\t\t}\n\t\t\treturn headers;\n\t\t});\n\n\t\t/* A requests session that limits requests per sessions */\n\t\tthis.session = new RequestsSession(\n\t\t\tREQUEST_SESSION_LIMIT,\n\t\t\tREQUEST_SESSION_INTERVAL,\n\t\t\tthis.requestService,\n\t\t\tthis.logService,\n\t\t);\n\t\tthis.initDonotMakeRequestsUntil();\n\t\tthis._register(\n\t\t\ttoDisposable(() => {\n\t\t\t\tif (this.resetDonotMakeRequestsUntilPromise) {\n\t\t\t\t\tthis.resetDonotMakeRequestsUntilPromise.cancel();\n\t\t\t\t\tthis.resetDonotMakeRequestsUntilPromise = undefined;\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tsetAuthToken(token: string, type: string): void {\n\t\tthis.authToken = { token, type };\n\t}\n\n\tprotected updateUserDataSyncStoreUrl(\n\t\tuserDataSyncStoreUrl: URI | undefined,\n\t): void {\n\t\tthis.userDataSyncStoreUrl = userDataSyncStoreUrl\n\t\t\t? joinPath(userDataSyncStoreUrl, \"v1\")\n\t\t\t: undefined;\n\t}\n\n\tprivate initDonotMakeRequestsUntil(): void {\n\t\tconst donotMakeRequestsUntil = this.storageService.getNumber(\n\t\t\tDONOT_MAKE_REQUESTS_UNTIL_KEY,\n\t\t\tStorageScope.APPLICATION,\n\t\t);\n\t\tif (donotMakeRequestsUntil && Date.now() < donotMakeRequestsUntil) {\n\t\t\tthis.setDonotMakeRequestsUntil(new Date(donotMakeRequestsUntil));\n\t\t}\n\t}\n\n\tprivate resetDonotMakeRequestsUntilPromise:\n\t\t| CancelablePromise<void>\n\t\t| undefined = undefined;\n\tprivate setDonotMakeRequestsUntil(\n\t\tdonotMakeRequestsUntil: Date | undefined,\n\t): void {\n\t\tif (\n\t\t\tthis._donotMakeRequestsUntil?.getTime() !==\n\t\t\tdonotMakeRequestsUntil?.getTime()\n\t\t) {\n\t\t\tthis._donotMakeRequestsUntil = donotMakeRequestsUntil;\n\n\t\t\tif (this.resetDonotMakeRequestsUntilPromise) {\n\t\t\t\tthis.resetDonotMakeRequestsUntilPromise.cancel();\n\t\t\t\tthis.resetDonotMakeRequestsUntilPromise = undefined;\n\t\t\t}\n\n\t\t\tif (this._donotMakeRequestsUntil) {\n\t\t\t\tthis.storageService.store(\n\t\t\t\t\tDONOT_MAKE_REQUESTS_UNTIL_KEY,\n\t\t\t\t\tthis._donotMakeRequestsUntil.getTime(),\n\t\t\t\t\tStorageScope.APPLICATION,\n\t\t\t\t\tStorageTarget.MACHINE,\n\t\t\t\t);\n\t\t\t\tthis.resetDonotMakeRequestsUntilPromise =\n\t\t\t\t\tcreateCancelablePromise((token) =>\n\t\t\t\t\t\ttimeout(\n\t\t\t\t\t\t\tthis._donotMakeRequestsUntil!.getTime() -\n\t\t\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\t\ttoken,\n\t\t\t\t\t\t).then(() => this.setDonotMakeRequestsUntil(undefined)),\n\t\t\t\t\t);\n\t\t\t\tthis.resetDonotMakeRequestsUntilPromise.then(\n\t\t\t\t\tnull,\n\t\t\t\t\t(e) => null /* ignore error */,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.storageService.remove(\n\t\t\t\t\tDONOT_MAKE_REQUESTS_UNTIL_KEY,\n\t\t\t\t\tStorageScope.APPLICATION,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis._onDidChangeDonotMakeRequestsUntil.fire();\n\t\t}\n\t}\n\n\t// #region Collection\n\n\tasync getAllCollections(headers: IHeaders = {}): Promise<string[]> {\n\t\tif (!this.userDataSyncStoreUrl) {\n\t\t\tthrow new Error(\"No settings sync store url configured.\");\n\t\t}\n\n\t\tconst url = joinPath(\n\t\t\tthis.userDataSyncStoreUrl,\n\t\t\t\"collection\",\n\t\t).toString();\n\t\theaders = { ...headers };\n\t\theaders[\"Content-Type\"] = \"application/json\";\n\n\t\tconst context = await this.request(\n\t\t\turl,\n\t\t\t{ type: \"GET\", headers },\n\t\t\t[],\n\t\t\tCancellationToken.None,\n\t\t);\n\n\t\treturn (\n\t\t\t(await asJson<{ id: string }[]>(context))?.map(({ id }) => id) || []\n\t\t);\n\t}\n\n\tasync createCollection(headers: IHeaders = {}): Promise<string> {\n\t\tif (!this.userDataSyncStoreUrl) {\n\t\t\tthrow new Error(\"No settings sync store url configured.\");\n\t\t}\n\n\t\tconst url = joinPath(\n\t\t\tthis.userDataSyncStoreUrl,\n\t\t\t\"collection\",\n\t\t).toString();\n\t\theaders = { ...headers };\n\t\theaders[\"Content-Type\"] = Mimes.text;\n\n\t\tconst context = await this.request(\n\t\t\turl,\n\t\t\t{ type: \"POST\", headers },\n\t\t\t[],\n\t\t\tCancellationToken.None,\n\t\t);\n\t\tconst collectionId = await asTextOrError(context);\n\t\tif (!collectionId) {\n\t\t\tthrow new UserDataSyncStoreError(\n\t\t\t\t\"Server did not return the collection id\",\n\t\t\t\turl,\n\t\t\t\tUserDataSyncErrorCode.NoCollection,\n\t\t\t\tcontext.res.statusCode,\n\t\t\t\tcontext.res.headers[HEADER_OPERATION_ID],\n\t\t\t);\n\t\t}\n\t\treturn collectionId;\n\t}\n\n\tasync deleteCollection(\n\t\tcollection?: string,\n\t\theaders: IHeaders = {},\n\t): Promise<void> {\n\t\tif (!this.userDataSyncStoreUrl) {\n\t\t\tthrow new Error(\"No settings sync store url configured.\");\n\t\t}\n\n\t\tconst url = collection\n\t\t\t? joinPath(\n\t\t\t\t\tthis.userDataSyncStoreUrl,\n\t\t\t\t\t\"collection\",\n\t\t\t\t\tcollection,\n\t\t\t\t).toString()\n\t\t\t: joinPath(this.userDataSyncStoreUrl, \"collection\").toString();\n\t\theaders = { ...headers };\n\n\t\tawait this.request(\n\t\t\turl,\n\t\t\t{ type: \"DELETE\", headers },\n\t\t\t[],\n\t\t\tCancellationToken.None,\n\t\t);\n\t}\n\n\t// #endregion\n\n\t// #region Resource\n\n\tasync getAllResourceRefs(\n\t\tresource: ServerResource,\n\t\tcollection?: string,\n\t): Promise<IResourceRefHandle[]> {\n\t\tif (!this.userDataSyncStoreUrl) {\n\t\t\tthrow new Error(\"No settings sync store url configured.\");\n\t\t}\n\n\t\tconst uri = this.getResourceUrl(\n\t\t\tthis.userDataSyncStoreUrl,\n\t\t\tcollection,\n\t\t\tresource,\n\t\t);\n\t\tconst headers: IHeaders = {};\n\n\t\tconst context = await this.request(\n\t\t\turi.toString(),\n\t\t\t{ type: \"GET\", headers },\n\t\t\t[],\n\t\t\tCancellationToken.None,\n\t\t);\n\n\t\tconst result =\n\t\t\t(await asJson<{ url: string; created: number }[]>(context)) || [];\n\t\treturn result.map(({ url, created }) => ({\n\t\t\tref: relativePath(uri, uri.with({ path: url }))!,\n\t\t\tcreated: created * 1000 /* Server returns in seconds */,\n\t\t}));\n\t}\n\n\tasync resolveResourceContent(\n\t\tresource: ServerResource,\n\t\tref: string,\n\t\tcollection?: string,\n\t\theaders: IHeaders = {},\n\t): Promise<string | null> {\n\t\tif (!this.userDataSyncStoreUrl) {\n\t\t\tthrow new Error(\"No settings sync store url configured.\");\n\t\t}\n\n\t\tconst url = joinPath(\n\t\t\tthis.getResourceUrl(\n\t\t\t\tthis.userDataSyncStoreUrl,\n\t\t\t\tcollection,\n\t\t\t\tresource,\n\t\t\t),\n\t\t\tref,\n\t\t).toString();\n\t\theaders = { ...headers };\n\t\theaders[\"Cache-Control\"] = \"no-cache\";\n\n\t\tconst context = await this.request(\n\t\t\turl,\n\t\t\t{ type: \"GET\", headers },\n\t\t\t[],\n\t\t\tCancellationToken.None,\n\t\t);\n\t\tconst content = await asTextOrError(context);\n\t\treturn content;\n\t}\n\n\tasync deleteResource(\n\t\tresource: ServerResource,\n\t\tref: string | null,\n\t\tcollection?: string,\n\t): Promise<void> {\n\t\tif (!this.userDataSyncStoreUrl) {\n\t\t\tthrow new Error(\"No settings sync store url configured.\");\n\t\t}\n\n\t\tconst url =\n\t\t\tref !== null\n\t\t\t\t? joinPath(\n\t\t\t\t\t\tthis.getResourceUrl(\n\t\t\t\t\t\t\tthis.userDataSyncStoreUrl,\n\t\t\t\t\t\t\tcollection,\n\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tref,\n\t\t\t\t\t).toString()\n\t\t\t\t: this.getResourceUrl(\n\t\t\t\t\t\tthis.userDataSyncStoreUrl,\n\t\t\t\t\t\tcollection,\n\t\t\t\t\t\tresource,\n\t\t\t\t\t).toString();\n\t\tconst headers: IHeaders = {};\n\n\t\tawait this.request(\n\t\t\turl,\n\t\t\t{ type: \"DELETE\", headers },\n\t\t\t[],\n\t\t\tCancellationToken.None,\n\t\t);\n\t}\n\n\tasync deleteResources(): Promise<void> {\n\t\tif (!this.userDataSyncStoreUrl) {\n\t\t\tthrow new Error(\"No settings sync store url configured.\");\n\t\t}\n\n\t\tconst url = joinPath(this.userDataSyncStoreUrl, \"resource\").toString();\n\t\tconst headers: IHeaders = { \"Content-Type\": Mimes.text };\n\n\t\tawait this.request(\n\t\t\turl,\n\t\t\t{ type: \"DELETE\", headers },\n\t\t\t[],\n\t\t\tCancellationToken.None,\n\t\t);\n\t}\n\n\tasync readResource(\n\t\tresource: ServerResource,\n\t\toldValue: IUserData | null,\n\t\tcollection?: string,\n\t\theaders: IHeaders = {},\n\t): Promise<IUserData> {\n\t\tif (!this.userDataSyncStoreUrl) {\n\t\t\tthrow new Error(\"No settings sync store url configured.\");\n\t\t}\n\n\t\tconst url = joinPath(\n\t\t\tthis.getResourceUrl(\n\t\t\t\tthis.userDataSyncStoreUrl,\n\t\t\t\tcollection,\n\t\t\t\tresource,\n\t\t\t),\n\t\t\t\"latest\",\n\t\t).toString();\n\t\theaders = { ...headers };\n\t\t// Disable caching as they are cached by synchronisers\n\t\theaders[\"Cache-Control\"] = \"no-cache\";\n\t\tif (oldValue) {\n\t\t\theaders[\"If-None-Match\"] = oldValue.ref;\n\t\t}\n\n\t\tconst context = await this.request(\n\t\t\turl,\n\t\t\t{ type: \"GET\", headers },\n\t\t\t[304],\n\t\t\tCancellationToken.None,\n\t\t);\n\n\t\tlet userData: IUserData | null = null;\n\t\tif (context.res.statusCode === 304) {\n\t\t\tuserData = oldValue;\n\t\t}\n\n\t\tif (userData === null) {\n\t\t\tconst ref = context.res.headers[\"etag\"];\n\t\t\tif (!ref) {\n\t\t\t\tthrow new UserDataSyncStoreError(\n\t\t\t\t\t\"Server did not return the ref\",\n\t\t\t\t\turl,\n\t\t\t\t\tUserDataSyncErrorCode.NoRef,\n\t\t\t\t\tcontext.res.statusCode,\n\t\t\t\t\tcontext.res.headers[HEADER_OPERATION_ID],\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst content = await asTextOrError(context);\n\t\t\tif (!content && context.res.statusCode === 304) {\n\t\t\t\tthrow new UserDataSyncStoreError(\n\t\t\t\t\t\"Empty response\",\n\t\t\t\t\turl,\n\t\t\t\t\tUserDataSyncErrorCode.EmptyResponse,\n\t\t\t\t\tcontext.res.statusCode,\n\t\t\t\t\tcontext.res.headers[HEADER_OPERATION_ID],\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tuserData = { ref, content };\n\t\t}\n\n\t\treturn userData;\n\t}\n\n\tasync writeResource(\n\t\tresource: ServerResource,\n\t\tdata: string,\n\t\tref: string | null,\n\t\tcollection?: string,\n\t\theaders: IHeaders = {},\n\t): Promise<string> {\n\t\tif (!this.userDataSyncStoreUrl) {\n\t\t\tthrow new Error(\"No settings sync store url configured.\");\n\t\t}\n\n\t\tconst url = this.getResourceUrl(\n\t\t\tthis.userDataSyncStoreUrl,\n\t\t\tcollection,\n\t\t\tresource,\n\t\t).toString();\n\t\theaders = { ...headers };\n\t\theaders[\"Content-Type\"] = Mimes.text;\n\t\tif (ref) {\n\t\t\theaders[\"If-Match\"] = ref;\n\t\t}\n\n\t\tconst context = await this.request(\n\t\t\turl,\n\t\t\t{ type: \"POST\", data, headers },\n\t\t\t[],\n\t\t\tCancellationToken.None,\n\t\t);\n\n\t\tconst newRef = context.res.headers[\"etag\"];\n\t\tif (!newRef) {\n\t\t\tthrow new UserDataSyncStoreError(\n\t\t\t\t\"Server did not return the ref\",\n\t\t\t\turl,\n\t\t\t\tUserDataSyncErrorCode.NoRef,\n\t\t\t\tcontext.res.statusCode,\n\t\t\t\tcontext.res.headers[HEADER_OPERATION_ID],\n\t\t\t);\n\t\t}\n\t\treturn newRef;\n\t}\n\n\t// #endregion\n\n\tasync manifest(\n\t\toldValue: IUserDataManifest | null,\n\t\theaders: IHeaders = {},\n\t): Promise<IUserDataManifest | null> {\n\t\tif (!this.userDataSyncStoreUrl) {\n\t\t\tthrow new Error(\"No settings sync store url configured.\");\n\t\t}\n\n\t\tconst url = joinPath(this.userDataSyncStoreUrl, \"manifest\").toString();\n\t\theaders = { ...headers };\n\t\theaders[\"Content-Type\"] = \"application/json\";\n\t\tif (oldValue) {\n\t\t\theaders[\"If-None-Match\"] = oldValue.ref;\n\t\t}\n\n\t\tconst context = await this.request(\n\t\t\turl,\n\t\t\t{ type: \"GET\", headers },\n\t\t\t[304],\n\t\t\tCancellationToken.None,\n\t\t);\n\n\t\tlet manifest: IUserDataManifest | null = null;\n\t\tif (context.res.statusCode === 304) {\n\t\t\tmanifest = oldValue;\n\t\t}\n\n\t\tif (!manifest) {\n\t\t\tconst ref = context.res.headers[\"etag\"];\n\t\t\tif (!ref) {\n\t\t\t\tthrow new UserDataSyncStoreError(\n\t\t\t\t\t\"Server did not return the ref\",\n\t\t\t\t\turl,\n\t\t\t\t\tUserDataSyncErrorCode.NoRef,\n\t\t\t\t\tcontext.res.statusCode,\n\t\t\t\t\tcontext.res.headers[HEADER_OPERATION_ID],\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst content = await asTextOrError(context);\n\t\t\tif (!content && context.res.statusCode === 304) {\n\t\t\t\tthrow new UserDataSyncStoreError(\n\t\t\t\t\t\"Empty response\",\n\t\t\t\t\turl,\n\t\t\t\t\tUserDataSyncErrorCode.EmptyResponse,\n\t\t\t\t\tcontext.res.statusCode,\n\t\t\t\t\tcontext.res.headers[HEADER_OPERATION_ID],\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (content) {\n\t\t\t\tmanifest = { ...JSON.parse(content), ref };\n\t\t\t}\n\t\t}\n\n\t\tconst currentSessionId = this.storageService.get(\n\t\t\tUSER_SESSION_ID_KEY,\n\t\t\tStorageScope.APPLICATION,\n\t\t);\n\n\t\tif (\n\t\t\tcurrentSessionId &&\n\t\t\tmanifest &&\n\t\t\tcurrentSessionId !== manifest.session\n\t\t) {\n\t\t\t// Server session is different from client session so clear cached session.\n\t\t\tthis.clearSession();\n\t\t}\n\n\t\tif (manifest === null && currentSessionId) {\n\t\t\t// server session is cleared so clear cached session.\n\t\t\tthis.clearSession();\n\t\t}\n\n\t\tif (manifest) {\n\t\t\t// update session\n\t\t\tthis.storageService.store(\n\t\t\t\tUSER_SESSION_ID_KEY,\n\t\t\t\tmanifest.session,\n\t\t\t\tStorageScope.APPLICATION,\n\t\t\t\tStorageTarget.MACHINE,\n\t\t\t);\n\t\t}\n\n\t\treturn manifest;\n\t}\n\n\tasync clear(): Promise<void> {\n\t\tif (!this.userDataSyncStoreUrl) {\n\t\t\tthrow new Error(\"No settings sync store url configured.\");\n\t\t}\n\n\t\tawait this.deleteCollection();\n\t\tawait this.deleteResources();\n\n\t\t// clear cached session.\n\t\tthis.clearSession();\n\t}\n\n\tasync getActivityData(): Promise<VSBufferReadableStream> {\n\t\tif (!this.userDataSyncStoreUrl) {\n\t\t\tthrow new Error(\"No settings sync store url configured.\");\n\t\t}\n\n\t\tconst url = joinPath(this.userDataSyncStoreUrl, \"download\").toString();\n\t\tconst headers: IHeaders = {};\n\n\t\tconst context = await this.request(\n\t\t\turl,\n\t\t\t{ type: \"GET\", headers },\n\t\t\t[],\n\t\t\tCancellationToken.None,\n\t\t);\n\n\t\tif (!isSuccess(context)) {\n\t\t\tthrow new UserDataSyncStoreError(\n\t\t\t\t\"Server returned \" + context.res.statusCode,\n\t\t\t\turl,\n\t\t\t\tUserDataSyncErrorCode.EmptyResponse,\n\t\t\t\tcontext.res.statusCode,\n\t\t\t\tcontext.res.headers[HEADER_OPERATION_ID],\n\t\t\t);\n\t\t}\n\n\t\tif (hasNoContent(context)) {\n\t\t\tthrow new UserDataSyncStoreError(\n\t\t\t\t\"Empty response\",\n\t\t\t\turl,\n\t\t\t\tUserDataSyncErrorCode.EmptyResponse,\n\t\t\t\tcontext.res.statusCode,\n\t\t\t\tcontext.res.headers[HEADER_OPERATION_ID],\n\t\t\t);\n\t\t}\n\n\t\treturn context.stream;\n\t}\n\n\tprivate getResourceUrl(\n\t\tuserDataSyncStoreUrl: URI,\n\t\tcollection: string | undefined,\n\t\tresource: ServerResource,\n\t): URI {\n\t\treturn collection\n\t\t\t? joinPath(\n\t\t\t\t\tuserDataSyncStoreUrl,\n\t\t\t\t\t\"collection\",\n\t\t\t\t\tcollection,\n\t\t\t\t\t\"resource\",\n\t\t\t\t\tresource,\n\t\t\t\t)\n\t\t\t: joinPath(userDataSyncStoreUrl, \"resource\", resource);\n\t}\n\n\tprivate clearSession(): void {\n\t\tthis.storageService.remove(\n\t\t\tUSER_SESSION_ID_KEY,\n\t\t\tStorageScope.APPLICATION,\n\t\t);\n\t\tthis.storageService.remove(\n\t\t\tMACHINE_SESSION_ID_KEY,\n\t\t\tStorageScope.APPLICATION,\n\t\t);\n\t}\n\n\tprivate async request(\n\t\turl: string,\n\t\toptions: IRequestOptions,\n\t\tsuccessCodes: number[],\n\t\ttoken: CancellationToken,\n\t): Promise<IRequestContext> {\n\t\tif (!this.authToken) {\n\t\t\tthrow new UserDataSyncStoreError(\n\t\t\t\t\"No Auth Token Available\",\n\t\t\t\turl,\n\t\t\t\tUserDataSyncErrorCode.Unauthorized,\n\t\t\t\tundefined,\n\t\t\t\tundefined,\n\t\t\t);\n\t\t}\n\n\t\tif (\n\t\t\tthis._donotMakeRequestsUntil &&\n\t\t\tDate.now() < this._donotMakeRequestsUntil.getTime()\n\t\t) {\n\t\t\tthrow new UserDataSyncStoreError(\n\t\t\t\t`${options.type} request '${url}' failed because of too many requests (429).`,\n\t\t\t\turl,\n\t\t\t\tUserDataSyncErrorCode.TooManyRequestsAndRetryAfter,\n\t\t\t\tundefined,\n\t\t\t\tundefined,\n\t\t\t);\n\t\t}\n\t\tthis.setDonotMakeRequestsUntil(undefined);\n\n\t\tconst commonHeaders = await this.commonHeadersPromise;\n\t\toptions.headers = {\n\t\t\t...(options.headers || {}),\n\t\t\t...commonHeaders,\n\t\t\t\"X-Account-Type\": this.authToken.type,\n\t\t\tauthorization: `Bearer ${this.authToken.token}`,\n\t\t};\n\n\t\t// Add session headers\n\t\tthis.addSessionHeaders(options.headers);\n\n\t\tthis.logService.trace(\"Sending request to server\", {\n\t\t\turl,\n\t\t\ttype: options.type,\n\t\t\theaders: { ...options.headers, ...{ authorization: undefined } },\n\t\t});\n\n\t\tlet context;\n\t\ttry {\n\t\t\tcontext = await this.session.request(url, options, token);\n\t\t} catch (e) {\n\t\t\tif (!(e instanceof UserDataSyncStoreError)) {\n\t\t\t\tlet code = UserDataSyncErrorCode.RequestFailed;\n\t\t\t\tconst errorMessage = getErrorMessage(e).toLowerCase();\n\n\t\t\t\t// Request timed out\n\t\t\t\tif (errorMessage.includes(\"xhr timeout\")) {\n\t\t\t\t\tcode = UserDataSyncErrorCode.RequestTimeout;\n\t\t\t\t}\n\n\t\t\t\t// Request protocol not supported\n\t\t\t\telse if (\n\t\t\t\t\terrorMessage.includes(\"protocol\") &&\n\t\t\t\t\terrorMessage.includes(\"not supported\")\n\t\t\t\t) {\n\t\t\t\t\tcode = UserDataSyncErrorCode.RequestProtocolNotSupported;\n\t\t\t\t}\n\n\t\t\t\t// Request path not escaped\n\t\t\t\telse if (\n\t\t\t\t\terrorMessage.includes(\n\t\t\t\t\t\t\"request path contains unescaped characters\",\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tcode = UserDataSyncErrorCode.RequestPathNotEscaped;\n\t\t\t\t}\n\n\t\t\t\t// Request header not an object\n\t\t\t\telse if (errorMessage.includes(\"headers must be an object\")) {\n\t\t\t\t\tcode = UserDataSyncErrorCode.RequestHeadersNotObject;\n\t\t\t\t}\n\n\t\t\t\t// Request canceled\n\t\t\t\telse if (isCancellationError(e)) {\n\t\t\t\t\tcode = UserDataSyncErrorCode.RequestCanceled;\n\t\t\t\t}\n\n\t\t\t\te = new UserDataSyncStoreError(\n\t\t\t\t\t`Connection refused for the request '${url}'.`,\n\t\t\t\t\turl,\n\t\t\t\t\tcode,\n\t\t\t\t\tundefined,\n\t\t\t\t\tundefined,\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis.logService.info(\"Request failed\", url);\n\t\t\tthrow e;\n\t\t}\n\n\t\tconst operationId = context.res.headers[HEADER_OPERATION_ID];\n\t\tconst requestInfo = {\n\t\t\turl,\n\t\t\tstatus: context.res.statusCode,\n\t\t\t\"execution-id\": options.headers[HEADER_EXECUTION_ID],\n\t\t\t\"operation-id\": operationId,\n\t\t};\n\t\tconst isSuccess =\n\t\t\tisSuccessContext(context) ||\n\t\t\t(context.res.statusCode &&\n\t\t\t\tsuccessCodes.includes(context.res.statusCode));\n\t\tlet failureMessage = \"\";\n\t\tif (isSuccess) {\n\t\t\tthis.logService.trace(\"Request succeeded\", requestInfo);\n\t\t} else {\n\t\t\tfailureMessage = (await asText(context)) || \"\";\n\t\t\tthis.logService.info(\"Request failed\", requestInfo, failureMessage);\n\t\t}\n\n\t\tif (context.res.statusCode === 401 || context.res.statusCode === 403) {\n\t\t\tthis.authToken = undefined;\n\t\t\tif (context.res.statusCode === 401) {\n\t\t\t\tthis._onTokenFailed.fire(UserDataSyncErrorCode.Unauthorized);\n\t\t\t\tthrow new UserDataSyncStoreError(\n\t\t\t\t\t`${options.type} request '${url}' failed because of Unauthorized (401).`,\n\t\t\t\t\turl,\n\t\t\t\t\tUserDataSyncErrorCode.Unauthorized,\n\t\t\t\t\tcontext.res.statusCode,\n\t\t\t\t\toperationId,\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (context.res.statusCode === 403) {\n\t\t\t\tthis._onTokenFailed.fire(UserDataSyncErrorCode.Forbidden);\n\t\t\t\tthrow new UserDataSyncStoreError(\n\t\t\t\t\t`${options.type} request '${url}' failed because the access is forbidden (403).`,\n\t\t\t\t\turl,\n\t\t\t\t\tUserDataSyncErrorCode.Forbidden,\n\t\t\t\t\tcontext.res.statusCode,\n\t\t\t\t\toperationId,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tthis._onTokenSucceed.fire();\n\n\t\tif (context.res.statusCode === 404) {\n\t\t\tthrow new UserDataSyncStoreError(\n\t\t\t\t`${options.type} request '${url}' failed because the requested resource is not found (404).`,\n\t\t\t\turl,\n\t\t\t\tUserDataSyncErrorCode.NotFound,\n\t\t\t\tcontext.res.statusCode,\n\t\t\t\toperationId,\n\t\t\t);\n\t\t}\n\n\t\tif (context.res.statusCode === 405) {\n\t\t\tthrow new UserDataSyncStoreError(\n\t\t\t\t`${options.type} request '${url}' failed because the requested endpoint is not found (405). ${failureMessage}`,\n\t\t\t\turl,\n\t\t\t\tUserDataSyncErrorCode.MethodNotFound,\n\t\t\t\tcontext.res.statusCode,\n\t\t\t\toperationId,\n\t\t\t);\n\t\t}\n\n\t\tif (context.res.statusCode === 409) {\n\t\t\tthrow new UserDataSyncStoreError(\n\t\t\t\t`${options.type} request '${url}' failed because of Conflict (409). There is new data for this resource. Make the request again with latest data.`,\n\t\t\t\turl,\n\t\t\t\tUserDataSyncErrorCode.Conflict,\n\t\t\t\tcontext.res.statusCode,\n\t\t\t\toperationId,\n\t\t\t);\n\t\t}\n\n\t\tif (context.res.statusCode === 410) {\n\t\t\tthrow new UserDataSyncStoreError(\n\t\t\t\t`${options.type} request '${url}' failed because the requested resource is not longer available (410).`,\n\t\t\t\turl,\n\t\t\t\tUserDataSyncErrorCode.Gone,\n\t\t\t\tcontext.res.statusCode,\n\t\t\t\toperationId,\n\t\t\t);\n\t\t}\n\n\t\tif (context.res.statusCode === 412) {\n\t\t\tthrow new UserDataSyncStoreError(\n\t\t\t\t`${options.type} request '${url}' failed because of Precondition Failed (412). There is new data for this resource. Make the request again with latest data.`,\n\t\t\t\turl,\n\t\t\t\tUserDataSyncErrorCode.PreconditionFailed,\n\t\t\t\tcontext.res.statusCode,\n\t\t\t\toperationId,\n\t\t\t);\n\t\t}\n\n\t\tif (context.res.statusCode === 413) {\n\t\t\tthrow new UserDataSyncStoreError(\n\t\t\t\t`${options.type} request '${url}' failed because of too large payload (413).`,\n\t\t\t\turl,\n\t\t\t\tUserDataSyncErrorCode.TooLarge,\n\t\t\t\tcontext.res.statusCode,\n\t\t\t\toperationId,\n\t\t\t);\n\t\t}\n\n\t\tif (context.res.statusCode === 426) {\n\t\t\tthrow new UserDataSyncStoreError(\n\t\t\t\t`${options.type} request '${url}' failed with status Upgrade Required (426). Please upgrade the client and try again.`,\n\t\t\t\turl,\n\t\t\t\tUserDataSyncErrorCode.UpgradeRequired,\n\t\t\t\tcontext.res.statusCode,\n\t\t\t\toperationId,\n\t\t\t);\n\t\t}\n\n\t\tif (context.res.statusCode === 429) {\n\t\t\tconst retryAfter = context.res.headers[\"retry-after\"];\n\t\t\tif (retryAfter) {\n\t\t\t\tthis.setDonotMakeRequestsUntil(\n\t\t\t\t\tnew Date(Date.now() + Number.parseInt(retryAfter) * 1000),\n\t\t\t\t);\n\t\t\t\tthrow new UserDataSyncStoreError(\n\t\t\t\t\t`${options.type} request '${url}' failed because of too many requests (429).`,\n\t\t\t\t\turl,\n\t\t\t\t\tUserDataSyncErrorCode.TooManyRequestsAndRetryAfter,\n\t\t\t\t\tcontext.res.statusCode,\n\t\t\t\t\toperationId,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthrow new UserDataSyncStoreError(\n\t\t\t\t\t`${options.type} request '${url}' failed because of too many requests (429).`,\n\t\t\t\t\turl,\n\t\t\t\t\tUserDataSyncErrorCode.TooManyRequests,\n\t\t\t\t\tcontext.res.statusCode,\n\t\t\t\t\toperationId,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (!isSuccess) {\n\t\t\tthrow new UserDataSyncStoreError(\n\t\t\t\t\"Server returned \" + context.res.statusCode,\n\t\t\t\turl,\n\t\t\t\tUserDataSyncErrorCode.Unknown,\n\t\t\t\tcontext.res.statusCode,\n\t\t\t\toperationId,\n\t\t\t);\n\t\t}\n\n\t\treturn context;\n\t}\n\n\tprivate addSessionHeaders(headers: IHeaders): void {\n\t\tlet machineSessionId = this.storageService.get(\n\t\t\tMACHINE_SESSION_ID_KEY,\n\t\t\tStorageScope.APPLICATION,\n\t\t);\n\t\tif (machineSessionId === undefined) {\n\t\t\tmachineSessionId = generateUuid();\n\t\t\tthis.storageService.store(\n\t\t\t\tMACHINE_SESSION_ID_KEY,\n\t\t\t\tmachineSessionId,\n\t\t\t\tStorageScope.APPLICATION,\n\t\t\t\tStorageTarget.MACHINE,\n\t\t\t);\n\t\t}\n\t\theaders[\"X-Machine-Session-Id\"] = machineSessionId;\n\n\t\tconst userSessionId = this.storageService.get(\n\t\t\tUSER_SESSION_ID_KEY,\n\t\t\tStorageScope.APPLICATION,\n\t\t);\n\t\tif (userSessionId !== undefined) {\n\t\t\theaders[\"X-User-Session-Id\"] = userSessionId;\n\t\t}\n\t}\n}\n\nexport class UserDataSyncStoreService\n\textends UserDataSyncStoreClient\n\timplements IUserDataSyncStoreService\n{\n\t_serviceBrand: any;\n\n\tconstructor(\n\t\t@IUserDataSyncStoreManagementService\n\t\tuserDataSyncStoreManagementService: IUserDataSyncStoreManagementService,\n\t\t@IProductService productService: IProductService,\n\t\t@IRequestService requestService: IRequestService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IStorageService storageService: IStorageService,\n\t) {\n\t\tsuper(\n\t\t\tuserDataSyncStoreManagementService.userDataSyncStore?.url,\n\t\t\tproductService,\n\t\t\trequestService,\n\t\t\tlogService,\n\t\t\tenvironmentService,\n\t\t\tfileService,\n\t\t\tstorageService,\n\t\t);\n\t\tthis._register(\n\t\t\tuserDataSyncStoreManagementService.onDidChangeUserDataSyncStore(\n\t\t\t\t() =>\n\t\t\t\t\tthis.updateUserDataSyncStoreUrl(\n\t\t\t\t\t\tuserDataSyncStoreManagementService.userDataSyncStore\n\t\t\t\t\t\t\t?.url,\n\t\t\t\t\t),\n\t\t\t),\n\t\t);\n\t}\n}\n\nexport class RequestsSession {\n\tprivate requests: string[] = [];\n\tprivate startTime: Date | undefined = undefined;\n\n\tconstructor(\n\t\tprivate readonly limit: number,\n\t\tprivate readonly interval: number /* in ms */,\n\t\tprivate readonly requestService: IRequestService,\n\t\tprivate readonly logService: IUserDataSyncLogService,\n\t) {}\n\n\trequest(\n\t\turl: string,\n\t\toptions: IRequestOptions,\n\t\ttoken: CancellationToken,\n\t): Promise<IRequestContext> {\n\t\tif (this.isExpired()) {\n\t\t\tthis.reset();\n\t\t}\n\n\t\toptions.url = url;\n\n\t\tif (this.requests.length >= this.limit) {\n\t\t\tthis.logService.info(\"Too many requests\", ...this.requests);\n\t\t\tthrow new UserDataSyncStoreError(\n\t\t\t\t`Too many requests. Only ${this.limit} requests allowed in ${this.interval / (1000 * 60)} minutes.`,\n\t\t\t\turl,\n\t\t\t\tUserDataSyncErrorCode.LocalTooManyRequests,\n\t\t\t\tundefined,\n\t\t\t\tundefined,\n\t\t\t);\n\t\t}\n\n\t\tthis.startTime = this.startTime || new Date();\n\t\tthis.requests.push(url);\n\n\t\treturn this.requestService.request(options, token);\n\t}\n\n\tprivate isExpired(): boolean {\n\t\treturn (\n\t\t\tthis.startTime !== undefined &&\n\t\t\tnew Date().getTime() - this.startTime.getTime() > this.interval\n\t\t);\n\t}\n\n\tprivate reset(): void {\n\t\tthis.requests = [];\n\t\tthis.startTime = undefined;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["isSuccess"]
}
