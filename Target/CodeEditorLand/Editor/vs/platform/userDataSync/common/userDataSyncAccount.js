var h=Object.defineProperty;var l=Object.getOwnPropertyDescriptor;var d=(i,t,e,o)=>{for(var n=o>1?void 0:o?l(t,e):t,r=i.length-1,c;r>=0;r--)(c=i[r])&&(n=(o?c(t,e,n):c(n))||n);return o&&n&&h(t,e,n),n},s=(i,t)=>(e,o)=>t(e,o,i);import{Emitter as u}from"../../../base/common/event.js";import{Disposable as v}from"../../../base/common/lifecycle.js";import{createDecorator as y}from"../../instantiation/common/instantiation.js";import{IUserDataSyncLogService as S,IUserDataSyncStoreService as f,UserDataSyncErrorCode as _}from"./userDataSync.js";const g=y("IUserDataSyncAccountService");let a=class extends v{constructor(e,o){super();this.userDataSyncStoreService=e;this.logService=o;this._register(e.onTokenFailed(n=>{this.logService.info("Settings Sync auth token failed",this.account?.authenticationProviderId,this.wasTokenFailed,n),this.updateAccount(void 0),n===_.Forbidden?this._onTokenFailed.fire(!0):this._onTokenFailed.fire(this.wasTokenFailed),this.wasTokenFailed=!0})),this._register(e.onTokenSucceed(()=>this.wasTokenFailed=!1))}_serviceBrand;_account;get account(){return this._account}_onDidChangeAccount=this._register(new u);onDidChangeAccount=this._onDidChangeAccount.event;_onTokenFailed=this._register(new u);onTokenFailed=this._onTokenFailed.event;wasTokenFailed=!1;async updateAccount(e){(e&&this._account?e.token!==this._account.token||e.authenticationProviderId!==this._account.authenticationProviderId:e!==this._account)&&(this._account=e,this._account&&this.userDataSyncStoreService.setAuthToken(this._account.token,this._account.authenticationProviderId),this._onDidChangeAccount.fire(e))}};a=d([s(0,f),s(1,S)],a);export{g as IUserDataSyncAccountService,a as UserDataSyncAccountService};
