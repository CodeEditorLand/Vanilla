var m=Object.defineProperty;var c=Object.getOwnPropertyDescriptor;var l=(g,r,e,i)=>{for(var o=i>1?void 0:i?c(r,e):r,n=g.length-1,s;n>=0;n--)(s=g[n])&&(o=(i?s(r,e,o):s(o))||o);return i&&o&&m(r,e,o),o},a=(g,r)=>(e,i)=>r(e,i,g);import{joinPath as v}from"../../../../vs/base/common/resources.js";import{localize as h}from"../../../../vs/nls.js";import{IEnvironmentService as f}from"../../../../vs/platform/environment/common/environment.js";import{AbstractLogger as p,ILoggerService as I}from"../../../../vs/platform/log/common/log.js";import{USER_DATA_SYNC_LOG_ID as d}from"../../../../vs/platform/userDataSync/common/userDataSync.js";let t=class extends p{logger;constructor(r,e){super(),this.logger=this._register(r.createLogger(v(e.logsHome,`${d}.log`),{id:d,name:h("userDataSyncLog","Settings Sync")}))}trace(r,...e){this.logger.trace(r,...e)}debug(r,...e){this.logger.debug(r,...e)}info(r,...e){this.logger.info(r,...e)}warn(r,...e){this.logger.warn(r,...e)}error(r,...e){this.logger.error(r,...e)}flush(){this.logger.flush()}};t=l([a(0,I),a(1,f)],t);export{t as UserDataSyncLogService};
