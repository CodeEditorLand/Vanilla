{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/userDataSync/common/userDataProfilesManifestSync.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { CancellationToken } from \"../../../base/common/cancellation.js\";\nimport { toFormattedString } from \"../../../base/common/jsonFormatter.js\";\nimport type { URI } from \"../../../base/common/uri.js\";\nimport { IConfigurationService } from \"../../configuration/common/configuration.js\";\nimport { IEnvironmentService } from \"../../environment/common/environment.js\";\nimport { IFileService } from \"../../files/common/files.js\";\nimport { IStorageService } from \"../../storage/common/storage.js\";\nimport { ITelemetryService } from \"../../telemetry/common/telemetry.js\";\nimport { IUriIdentityService } from \"../../uriIdentity/common/uriIdentity.js\";\nimport {\n\ttype IUserDataProfile,\n\tIUserDataProfilesService,\n} from \"../../userDataProfile/common/userDataProfile.js\";\nimport {\n\tAbstractSynchroniser,\n\ttype IAcceptResult,\n\ttype IMergeResult,\n\ttype IResourcePreview,\n} from \"./abstractSynchronizer.js\";\nimport { merge } from \"./userDataProfilesManifestMerge.js\";\nimport {\n\tChange,\n\ttype IRemoteUserData,\n\ttype ISyncData,\n\ttype ISyncUserDataProfile,\n\ttype IUserDataResourceManifest,\n\tIUserDataSyncEnablementService,\n\tIUserDataSyncLocalStoreService,\n\tIUserDataSyncLogService,\n\tIUserDataSyncStoreService,\n\ttype IUserDataSynchroniser,\n\tSyncResource,\n\tUSER_DATA_SYNC_SCHEME,\n\tUserDataSyncError,\n\tUserDataSyncErrorCode,\n} from \"./userDataSync.js\";\n\ninterface IUserDataProfileManifestResourceMergeResult extends IAcceptResult {\n\treadonly local: {\n\t\tadded: ISyncUserDataProfile[];\n\t\tremoved: IUserDataProfile[];\n\t\tupdated: ISyncUserDataProfile[];\n\t};\n\treadonly remote: {\n\t\tadded: IUserDataProfile[];\n\t\tremoved: ISyncUserDataProfile[];\n\t\tupdated: IUserDataProfile[];\n\t} | null;\n}\n\ninterface IUserDataProfilesManifestResourcePreview extends IResourcePreview {\n\treadonly previewResult: IUserDataProfileManifestResourceMergeResult;\n\treadonly remoteProfiles: ISyncUserDataProfile[] | null;\n}\n\nexport class UserDataProfilesManifestSynchroniser\n\textends AbstractSynchroniser\n\timplements IUserDataSynchroniser\n{\n\tprotected readonly version: number = 2;\n\treadonly previewResource: URI = this.extUri.joinPath(\n\t\tthis.syncPreviewFolder,\n\t\t\"profiles.json\",\n\t);\n\treadonly baseResource: URI = this.previewResource.with({\n\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\tauthority: \"base\",\n\t});\n\treadonly localResource: URI = this.previewResource.with({\n\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\tauthority: \"local\",\n\t});\n\treadonly remoteResource: URI = this.previewResource.with({\n\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\tauthority: \"remote\",\n\t});\n\treadonly acceptedResource: URI = this.previewResource.with({\n\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\tauthority: \"accepted\",\n\t});\n\n\tconstructor(\n\t\tprofile: IUserDataProfile,\n\t\tcollection: string | undefined,\n\t\t@IUserDataProfilesService\n\t\tprivate readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IUserDataSyncStoreService\n\t\tuserDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncLocalStoreService\n\t\tuserDataSyncLocalStoreService: IUserDataSyncLocalStoreService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IUserDataSyncEnablementService\n\t\tuserDataSyncEnablementService: IUserDataSyncEnablementService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(\n\t\t\t{ syncResource: SyncResource.Profiles, profile },\n\t\t\tcollection,\n\t\t\tfileService,\n\t\t\tenvironmentService,\n\t\t\tstorageService,\n\t\t\tuserDataSyncStoreService,\n\t\t\tuserDataSyncLocalStoreService,\n\t\t\tuserDataSyncEnablementService,\n\t\t\ttelemetryService,\n\t\t\tlogService,\n\t\t\tconfigurationService,\n\t\t\turiIdentityService,\n\t\t);\n\t\tthis._register(\n\t\t\tuserDataProfilesService.onDidChangeProfiles(() =>\n\t\t\t\tthis.triggerLocalChange(),\n\t\t\t),\n\t\t);\n\t}\n\n\tasync getLastSyncedProfiles(): Promise<ISyncUserDataProfile[] | null> {\n\t\tconst lastSyncUserData = await this.getLastSyncUserData();\n\t\treturn lastSyncUserData?.syncData\n\t\t\t? parseUserDataProfilesManifest(lastSyncUserData.syncData)\n\t\t\t: null;\n\t}\n\n\tasync getRemoteSyncedProfiles(\n\t\tmanifest: IUserDataResourceManifest | null,\n\t): Promise<ISyncUserDataProfile[] | null> {\n\t\tconst lastSyncUserData = await this.getLastSyncUserData();\n\t\tconst remoteUserData = await this.getLatestRemoteUserData(\n\t\t\tmanifest,\n\t\t\tlastSyncUserData,\n\t\t);\n\t\treturn remoteUserData?.syncData\n\t\t\t? parseUserDataProfilesManifest(remoteUserData.syncData)\n\t\t\t: null;\n\t}\n\n\tprotected async generateSyncPreview(\n\t\tremoteUserData: IRemoteUserData,\n\t\tlastSyncUserData: IRemoteUserData | null,\n\t\tisRemoteDataFromCurrentMachine: boolean,\n\t): Promise<IUserDataProfilesManifestResourcePreview[]> {\n\t\tif (!this.userDataProfilesService.isEnabled()) {\n\t\t\tthrow new UserDataSyncError(\n\t\t\t\t\"Cannot sync profiles because they are disabled\",\n\t\t\t\tUserDataSyncErrorCode.LocalError,\n\t\t\t);\n\t\t}\n\t\tconst remoteProfiles: ISyncUserDataProfile[] | null =\n\t\t\tremoteUserData.syncData\n\t\t\t\t? parseUserDataProfilesManifest(remoteUserData.syncData)\n\t\t\t\t: null;\n\t\tconst lastSyncProfiles: ISyncUserDataProfile[] | null =\n\t\t\tlastSyncUserData?.syncData\n\t\t\t\t? parseUserDataProfilesManifest(lastSyncUserData.syncData)\n\t\t\t\t: null;\n\t\tconst localProfiles = this.getLocalUserDataProfiles();\n\n\t\tconst { local, remote } = merge(\n\t\t\tlocalProfiles,\n\t\t\tremoteProfiles,\n\t\t\tlastSyncProfiles,\n\t\t\t[],\n\t\t);\n\t\tconst previewResult: IUserDataProfileManifestResourceMergeResult = {\n\t\t\tlocal,\n\t\t\tremote,\n\t\t\tcontent: lastSyncProfiles\n\t\t\t\t? this.stringifyRemoteProfiles(lastSyncProfiles)\n\t\t\t\t: null,\n\t\t\tlocalChange:\n\t\t\t\tlocal.added.length > 0 ||\n\t\t\t\tlocal.removed.length > 0 ||\n\t\t\t\tlocal.updated.length > 0\n\t\t\t\t\t? Change.Modified\n\t\t\t\t\t: Change.None,\n\t\t\tremoteChange: remote !== null ? Change.Modified : Change.None,\n\t\t};\n\n\t\tconst localContent = stringifyLocalProfiles(localProfiles, false);\n\t\treturn [\n\t\t\t{\n\t\t\t\tbaseResource: this.baseResource,\n\t\t\t\tbaseContent: lastSyncProfiles\n\t\t\t\t\t? this.stringifyRemoteProfiles(lastSyncProfiles)\n\t\t\t\t\t: null,\n\t\t\t\tlocalResource: this.localResource,\n\t\t\t\tlocalContent,\n\t\t\t\tremoteResource: this.remoteResource,\n\t\t\t\tremoteContent: remoteProfiles\n\t\t\t\t\t? this.stringifyRemoteProfiles(remoteProfiles)\n\t\t\t\t\t: null,\n\t\t\t\tremoteProfiles,\n\t\t\t\tpreviewResource: this.previewResource,\n\t\t\t\tpreviewResult,\n\t\t\t\tlocalChange: previewResult.localChange,\n\t\t\t\tremoteChange: previewResult.remoteChange,\n\t\t\t\tacceptedResource: this.acceptedResource,\n\t\t\t},\n\t\t];\n\t}\n\n\tprotected async hasRemoteChanged(\n\t\tlastSyncUserData: IRemoteUserData,\n\t): Promise<boolean> {\n\t\tconst lastSyncProfiles: ISyncUserDataProfile[] | null =\n\t\t\tlastSyncUserData?.syncData\n\t\t\t\t? parseUserDataProfilesManifest(lastSyncUserData.syncData)\n\t\t\t\t: null;\n\t\tconst localProfiles = this.getLocalUserDataProfiles();\n\t\tconst { remote } = merge(\n\t\t\tlocalProfiles,\n\t\t\tlastSyncProfiles,\n\t\t\tlastSyncProfiles,\n\t\t\t[],\n\t\t);\n\t\treturn (\n\t\t\t!!remote?.added.length ||\n\t\t\t!!remote?.removed.length ||\n\t\t\t!!remote?.updated.length\n\t\t);\n\t}\n\n\tprotected async getMergeResult(\n\t\tresourcePreview: IUserDataProfilesManifestResourcePreview,\n\t\ttoken: CancellationToken,\n\t): Promise<IMergeResult> {\n\t\treturn { ...resourcePreview.previewResult, hasConflicts: false };\n\t}\n\n\tprotected async getAcceptResult(\n\t\tresourcePreview: IUserDataProfilesManifestResourcePreview,\n\t\tresource: URI,\n\t\tcontent: string | null | undefined,\n\t\ttoken: CancellationToken,\n\t): Promise<IAcceptResult> {\n\t\t/* Accept local resource */\n\t\tif (this.extUri.isEqual(resource, this.localResource)) {\n\t\t\treturn this.acceptLocal(resourcePreview);\n\t\t}\n\n\t\t/* Accept remote resource */\n\t\tif (this.extUri.isEqual(resource, this.remoteResource)) {\n\t\t\treturn this.acceptRemote(resourcePreview);\n\t\t}\n\n\t\t/* Accept preview resource */\n\t\tif (this.extUri.isEqual(resource, this.previewResource)) {\n\t\t\treturn resourcePreview.previewResult;\n\t\t}\n\n\t\tthrow new Error(`Invalid Resource: ${resource.toString()}`);\n\t}\n\n\tprivate async acceptLocal(\n\t\tresourcePreview: IUserDataProfilesManifestResourcePreview,\n\t): Promise<IUserDataProfileManifestResourceMergeResult> {\n\t\tconst localProfiles = this.getLocalUserDataProfiles();\n\t\tconst mergeResult = merge(localProfiles, null, null, []);\n\t\tconst { local, remote } = mergeResult;\n\t\treturn {\n\t\t\tcontent: resourcePreview.localContent,\n\t\t\tlocal,\n\t\t\tremote,\n\t\t\tlocalChange:\n\t\t\t\tlocal.added.length > 0 ||\n\t\t\t\tlocal.removed.length > 0 ||\n\t\t\t\tlocal.updated.length > 0\n\t\t\t\t\t? Change.Modified\n\t\t\t\t\t: Change.None,\n\t\t\tremoteChange: remote !== null ? Change.Modified : Change.None,\n\t\t};\n\t}\n\n\tprivate async acceptRemote(\n\t\tresourcePreview: IUserDataProfilesManifestResourcePreview,\n\t): Promise<IUserDataProfileManifestResourceMergeResult> {\n\t\tconst remoteProfiles: ISyncUserDataProfile[] =\n\t\t\tresourcePreview.remoteContent\n\t\t\t\t? JSON.parse(resourcePreview.remoteContent)\n\t\t\t\t: null;\n\t\tconst lastSyncProfiles: ISyncUserDataProfile[] = [];\n\t\tconst localProfiles: IUserDataProfile[] = [];\n\t\tfor (const profile of this.getLocalUserDataProfiles()) {\n\t\t\tconst remoteProfile = remoteProfiles?.find(\n\t\t\t\t(remoteProfile) => remoteProfile.id === profile.id,\n\t\t\t);\n\t\t\tif (remoteProfile) {\n\t\t\t\tlastSyncProfiles.push({\n\t\t\t\t\tid: profile.id,\n\t\t\t\t\tname: profile.name,\n\t\t\t\t\tcollection: remoteProfile.collection,\n\t\t\t\t});\n\t\t\t\tlocalProfiles.push(profile);\n\t\t\t}\n\t\t}\n\t\tif (remoteProfiles !== null) {\n\t\t\tconst mergeResult = merge(\n\t\t\t\tlocalProfiles,\n\t\t\t\tremoteProfiles,\n\t\t\t\tlastSyncProfiles,\n\t\t\t\t[],\n\t\t\t);\n\t\t\tconst { local, remote } = mergeResult;\n\t\t\treturn {\n\t\t\t\tcontent: resourcePreview.remoteContent,\n\t\t\t\tlocal,\n\t\t\t\tremote,\n\t\t\t\tlocalChange:\n\t\t\t\t\tlocal.added.length > 0 ||\n\t\t\t\t\tlocal.removed.length > 0 ||\n\t\t\t\t\tlocal.updated.length > 0\n\t\t\t\t\t\t? Change.Modified\n\t\t\t\t\t\t: Change.None,\n\t\t\t\tremoteChange: remote !== null ? Change.Modified : Change.None,\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tcontent: resourcePreview.remoteContent,\n\t\t\t\tlocal: { added: [], removed: [], updated: [] },\n\t\t\t\tremote: null,\n\t\t\t\tlocalChange: Change.None,\n\t\t\t\tremoteChange: Change.None,\n\t\t\t};\n\t\t}\n\t}\n\n\tprotected async applyResult(\n\t\tremoteUserData: IRemoteUserData,\n\t\tlastSyncUserData: IRemoteUserData | null,\n\t\tresourcePreviews: [\n\t\t\tIUserDataProfilesManifestResourcePreview,\n\t\t\tIUserDataProfileManifestResourceMergeResult,\n\t\t][],\n\t\tforce: boolean,\n\t): Promise<void> {\n\t\tconst { local, remote, localChange, remoteChange } =\n\t\t\tresourcePreviews[0][1];\n\t\tif (localChange === Change.None && remoteChange === Change.None) {\n\t\t\tthis.logService.info(\n\t\t\t\t`${this.syncResourceLogLabel}: No changes found during synchronizing profiles.`,\n\t\t\t);\n\t\t}\n\n\t\tconst remoteProfiles = resourcePreviews[0][0].remoteProfiles || [];\n\t\tif (\n\t\t\tremoteProfiles.length +\n\t\t\t\t(remote?.added.length ?? 0) -\n\t\t\t\t(remote?.removed.length ?? 0) >\n\t\t\t20\n\t\t) {\n\t\t\tthrow new UserDataSyncError(\n\t\t\t\t\"Too many profiles to sync. Please remove some profiles and try again.\",\n\t\t\t\tUserDataSyncErrorCode.LocalTooManyProfiles,\n\t\t\t);\n\t\t}\n\n\t\tif (localChange !== Change.None) {\n\t\t\tawait this.backupLocal(\n\t\t\t\tstringifyLocalProfiles(this.getLocalUserDataProfiles(), false),\n\t\t\t);\n\t\t\tawait Promise.all(\n\t\t\t\tlocal.removed.map(async (profile) => {\n\t\t\t\t\tthis.logService.trace(\n\t\t\t\t\t\t`${this.syncResourceLogLabel}: Removing '${profile.name}' profile...`,\n\t\t\t\t\t);\n\t\t\t\t\tawait this.userDataProfilesService.removeProfile(profile);\n\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t`${this.syncResourceLogLabel}: Removed profile '${profile.name}'.`,\n\t\t\t\t\t);\n\t\t\t\t}),\n\t\t\t);\n\t\t\tawait Promise.all(\n\t\t\t\tlocal.added.map(async (profile) => {\n\t\t\t\t\tthis.logService.trace(\n\t\t\t\t\t\t`${this.syncResourceLogLabel}: Creating '${profile.name}' profile...`,\n\t\t\t\t\t);\n\t\t\t\t\tawait this.userDataProfilesService.createProfile(\n\t\t\t\t\t\tprofile.id,\n\t\t\t\t\t\tprofile.name,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tshortName: profile.shortName,\n\t\t\t\t\t\t\ticon: profile.icon,\n\t\t\t\t\t\t\tuseDefaultFlags: profile.useDefaultFlags,\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t`${this.syncResourceLogLabel}: Created profile '${profile.name}'.`,\n\t\t\t\t\t);\n\t\t\t\t}),\n\t\t\t);\n\t\t\tawait Promise.all(\n\t\t\t\tlocal.updated.map(async (profile) => {\n\t\t\t\t\tconst localProfile =\n\t\t\t\t\t\tthis.userDataProfilesService.profiles.find(\n\t\t\t\t\t\t\t(p) => p.id === profile.id,\n\t\t\t\t\t\t);\n\t\t\t\t\tif (localProfile) {\n\t\t\t\t\t\tthis.logService.trace(\n\t\t\t\t\t\t\t`${this.syncResourceLogLabel}: Updating '${profile.name}' profile...`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tawait this.userDataProfilesService.updateProfile(\n\t\t\t\t\t\t\tlocalProfile,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: profile.name,\n\t\t\t\t\t\t\t\tshortName: profile.shortName,\n\t\t\t\t\t\t\t\ticon: profile.icon,\n\t\t\t\t\t\t\t\tuseDefaultFlags: profile.useDefaultFlags,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t\t`${this.syncResourceLogLabel}: Updated profile '${profile.name}'.`,\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t\t`${this.syncResourceLogLabel}: Could not find profile with id '${profile.id}' to update.`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\n\t\tif (remoteChange !== Change.None) {\n\t\t\tthis.logService.trace(\n\t\t\t\t`${this.syncResourceLogLabel}: Updating remote profiles...`,\n\t\t\t);\n\t\t\tconst addedCollections: string[] = [];\n\t\t\tconst canAddRemoteProfiles =\n\t\t\t\tremoteProfiles.length + (remote?.added.length ?? 0) <= 20;\n\t\t\tif (canAddRemoteProfiles) {\n\t\t\t\tfor (const profile of remote?.added || []) {\n\t\t\t\t\tconst collection =\n\t\t\t\t\t\tawait this.userDataSyncStoreService.createCollection(\n\t\t\t\t\t\t\tthis.syncHeaders,\n\t\t\t\t\t\t);\n\t\t\t\t\taddedCollections.push(collection);\n\t\t\t\t\tremoteProfiles.push({\n\t\t\t\t\t\tid: profile.id,\n\t\t\t\t\t\tname: profile.name,\n\t\t\t\t\t\tcollection,\n\t\t\t\t\t\tshortName: profile.shortName,\n\t\t\t\t\t\ticon: profile.icon,\n\t\t\t\t\t\tuseDefaultFlags: profile.useDefaultFlags,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.logService.info(\n\t\t\t\t\t`${this.syncResourceLogLabel}: Could not create remote profiles as there are too many profiles.`,\n\t\t\t\t);\n\t\t\t}\n\t\t\tfor (const profile of remote?.removed || []) {\n\t\t\t\tremoteProfiles.splice(\n\t\t\t\t\tremoteProfiles.findIndex(({ id }) => profile.id === id),\n\t\t\t\t\t1,\n\t\t\t\t);\n\t\t\t}\n\t\t\tfor (const profile of remote?.updated || []) {\n\t\t\t\tconst profileToBeUpdated = remoteProfiles.find(\n\t\t\t\t\t({ id }) => profile.id === id,\n\t\t\t\t);\n\t\t\t\tif (profileToBeUpdated) {\n\t\t\t\t\tremoteProfiles.splice(\n\t\t\t\t\t\tremoteProfiles.indexOf(profileToBeUpdated),\n\t\t\t\t\t\t1,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t...profileToBeUpdated,\n\t\t\t\t\t\t\tid: profile.id,\n\t\t\t\t\t\t\tname: profile.name,\n\t\t\t\t\t\t\tshortName: profile.shortName,\n\t\t\t\t\t\t\ticon: profile.icon,\n\t\t\t\t\t\t\tuseDefaultFlags: profile.useDefaultFlags,\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tremoteUserData = await this.updateRemoteProfiles(\n\t\t\t\t\tremoteProfiles,\n\t\t\t\t\tforce ? null : remoteUserData.ref,\n\t\t\t\t);\n\t\t\t\tthis.logService.info(\n\t\t\t\t\t`${this.syncResourceLogLabel}: Updated remote profiles.${canAddRemoteProfiles && remote?.added.length ? ` Added: ${JSON.stringify(remote.added.map((e) => e.name))}.` : \"\"}${remote?.updated.length ? ` Updated: ${JSON.stringify(remote.updated.map((e) => e.name))}.` : \"\"}${remote?.removed.length ? ` Removed: ${JSON.stringify(remote.removed.map((e) => e.name))}.` : \"\"}`,\n\t\t\t\t);\n\t\t\t} catch (error) {\n\t\t\t\tif (addedCollections.length) {\n\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t`${this.syncResourceLogLabel}: Failed to update remote profiles. Cleaning up added collections...`,\n\t\t\t\t\t);\n\t\t\t\t\tfor (const collection of addedCollections) {\n\t\t\t\t\t\tawait this.userDataSyncStoreService.deleteCollection(\n\t\t\t\t\t\t\tcollection,\n\t\t\t\t\t\t\tthis.syncHeaders,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tfor (const profile of remote?.removed || []) {\n\t\t\t\tawait this.userDataSyncStoreService.deleteCollection(\n\t\t\t\t\tprofile.collection,\n\t\t\t\t\tthis.syncHeaders,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (lastSyncUserData?.ref !== remoteUserData.ref) {\n\t\t\t// update last sync\n\t\t\tthis.logService.trace(\n\t\t\t\t`${this.syncResourceLogLabel}: Updating last synchronized profiles...`,\n\t\t\t);\n\t\t\tawait this.updateLastSyncUserData(remoteUserData);\n\t\t\tthis.logService.info(\n\t\t\t\t`${this.syncResourceLogLabel}: Updated last synchronized profiles.`,\n\t\t\t);\n\t\t}\n\t}\n\n\tasync updateRemoteProfiles(\n\t\tprofiles: ISyncUserDataProfile[],\n\t\tref: string | null,\n\t): Promise<IRemoteUserData> {\n\t\treturn this.updateRemoteUserData(\n\t\t\tthis.stringifyRemoteProfiles(profiles),\n\t\t\tref,\n\t\t);\n\t}\n\n\tasync hasLocalData(): Promise<boolean> {\n\t\treturn this.getLocalUserDataProfiles().length > 0;\n\t}\n\n\tasync resolveContent(uri: URI): Promise<string | null> {\n\t\tif (\n\t\t\tthis.extUri.isEqual(this.remoteResource, uri) ||\n\t\t\tthis.extUri.isEqual(this.baseResource, uri) ||\n\t\t\tthis.extUri.isEqual(this.localResource, uri) ||\n\t\t\tthis.extUri.isEqual(this.acceptedResource, uri)\n\t\t) {\n\t\t\tconst content = await this.resolvePreviewContent(uri);\n\t\t\treturn content\n\t\t\t\t? toFormattedString(JSON.parse(content), {})\n\t\t\t\t: content;\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate getLocalUserDataProfiles(): IUserDataProfile[] {\n\t\treturn this.userDataProfilesService.profiles.filter(\n\t\t\t(p) => !p.isDefault && !p.isTransient,\n\t\t);\n\t}\n\n\tprivate stringifyRemoteProfiles(profiles: ISyncUserDataProfile[]): string {\n\t\treturn JSON.stringify(\n\t\t\t[...profiles].sort((a, b) => a.name.localeCompare(b.name)),\n\t\t);\n\t}\n}\n\nexport function stringifyLocalProfiles(\n\tprofiles: IUserDataProfile[],\n\tformat: boolean,\n): string {\n\tconst result = [...profiles]\n\t\t.sort((a, b) => a.name.localeCompare(b.name))\n\t\t.map((p) => ({ id: p.id, name: p.name }));\n\treturn format ? toFormattedString(result, {}) : JSON.stringify(result);\n}\n\nexport function parseUserDataProfilesManifest(\n\tsyncData: ISyncData,\n): ISyncUserDataProfile[] {\n\treturn JSON.parse(syncData.content);\n}\n"],
  "mappings": "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",
  "names": ["remoteProfile"]
}
