{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/userDataSync/common/userDataProfilesManifestSync.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { toFormattedString } from '../../../base/common/jsonFormatter.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { IEnvironmentService } from '../../environment/common/environment.js';\nimport { IFileService } from '../../files/common/files.js';\nimport { IStorageService } from '../../storage/common/storage.js';\nimport { ITelemetryService } from '../../telemetry/common/telemetry.js';\nimport { IUriIdentityService } from '../../uriIdentity/common/uriIdentity.js';\nimport { IUserDataProfile, IUserDataProfilesService } from '../../userDataProfile/common/userDataProfile.js';\nimport { AbstractSynchroniser, IAcceptResult, IMergeResult, IResourcePreview } from './abstractSynchronizer.js';\nimport { merge } from './userDataProfilesManifestMerge.js';\nimport { Change, IRemoteUserData, IUserDataSyncLocalStoreService, IUserDataSynchroniser, IUserDataSyncLogService, IUserDataSyncEnablementService, IUserDataSyncStoreService, SyncResource, USER_DATA_SYNC_SCHEME, ISyncUserDataProfile, ISyncData, IUserDataResourceManifest, UserDataSyncError, UserDataSyncErrorCode } from './userDataSync.js';\n\ninterface IUserDataProfileManifestResourceMergeResult extends IAcceptResult {\n\treadonly local: { added: ISyncUserDataProfile[]; removed: IUserDataProfile[]; updated: ISyncUserDataProfile[] };\n\treadonly remote: { added: IUserDataProfile[]; removed: ISyncUserDataProfile[]; updated: IUserDataProfile[] } | null;\n}\n\ninterface IUserDataProfilesManifestResourcePreview extends IResourcePreview {\n\treadonly previewResult: IUserDataProfileManifestResourceMergeResult;\n\treadonly remoteProfiles: ISyncUserDataProfile[] | null;\n}\n\nexport class UserDataProfilesManifestSynchroniser extends AbstractSynchroniser implements IUserDataSynchroniser {\n\n\tprotected readonly version: number = 2;\n\treadonly previewResource: URI = this.extUri.joinPath(this.syncPreviewFolder, 'profiles.json');\n\treadonly baseResource: URI = this.previewResource.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'base' });\n\treadonly localResource: URI = this.previewResource.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'local' });\n\treadonly remoteResource: URI = this.previewResource.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'remote' });\n\treadonly acceptedResource: URI = this.previewResource.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'accepted' });\n\n\tconstructor(\n\t\tprofile: IUserDataProfile,\n\t\tcollection: string | undefined,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IUserDataSyncStoreService userDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncLocalStoreService userDataSyncLocalStoreService: IUserDataSyncLocalStoreService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IUserDataSyncEnablementService userDataSyncEnablementService: IUserDataSyncEnablementService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper({ syncResource: SyncResource.Profiles, profile }, collection, fileService, environmentService, storageService, userDataSyncStoreService, userDataSyncLocalStoreService, userDataSyncEnablementService, telemetryService, logService, configurationService, uriIdentityService);\n\t\tthis._register(userDataProfilesService.onDidChangeProfiles(() => this.triggerLocalChange()));\n\t}\n\n\tasync getLastSyncedProfiles(): Promise<ISyncUserDataProfile[] | null> {\n\t\tconst lastSyncUserData = await this.getLastSyncUserData();\n\t\treturn lastSyncUserData?.syncData ? parseUserDataProfilesManifest(lastSyncUserData.syncData) : null;\n\t}\n\n\tasync getRemoteSyncedProfiles(manifest: IUserDataResourceManifest | null): Promise<ISyncUserDataProfile[] | null> {\n\t\tconst lastSyncUserData = await this.getLastSyncUserData();\n\t\tconst remoteUserData = await this.getLatestRemoteUserData(manifest, lastSyncUserData);\n\t\treturn remoteUserData?.syncData ? parseUserDataProfilesManifest(remoteUserData.syncData) : null;\n\t}\n\n\tprotected async generateSyncPreview(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, isRemoteDataFromCurrentMachine: boolean): Promise<IUserDataProfilesManifestResourcePreview[]> {\n\t\tif (!this.userDataProfilesService.isEnabled()) {\n\t\t\tthrow new UserDataSyncError('Cannot sync profiles because they are disabled', UserDataSyncErrorCode.LocalError);\n\t\t}\n\t\tconst remoteProfiles: ISyncUserDataProfile[] | null = remoteUserData.syncData ? parseUserDataProfilesManifest(remoteUserData.syncData) : null;\n\t\tconst lastSyncProfiles: ISyncUserDataProfile[] | null = lastSyncUserData?.syncData ? parseUserDataProfilesManifest(lastSyncUserData.syncData) : null;\n\t\tconst localProfiles = this.getLocalUserDataProfiles();\n\n\t\tconst { local, remote } = merge(localProfiles, remoteProfiles, lastSyncProfiles, []);\n\t\tconst previewResult: IUserDataProfileManifestResourceMergeResult = {\n\t\t\tlocal, remote,\n\t\t\tcontent: lastSyncProfiles ? this.stringifyRemoteProfiles(lastSyncProfiles) : null,\n\t\t\tlocalChange: local.added.length > 0 || local.removed.length > 0 || local.updated.length > 0 ? Change.Modified : Change.None,\n\t\t\tremoteChange: remote !== null ? Change.Modified : Change.None,\n\t\t};\n\n\t\tconst localContent = stringifyLocalProfiles(localProfiles, false);\n\t\treturn [{\n\t\t\tbaseResource: this.baseResource,\n\t\t\tbaseContent: lastSyncProfiles ? this.stringifyRemoteProfiles(lastSyncProfiles) : null,\n\t\t\tlocalResource: this.localResource,\n\t\t\tlocalContent,\n\t\t\tremoteResource: this.remoteResource,\n\t\t\tremoteContent: remoteProfiles ? this.stringifyRemoteProfiles(remoteProfiles) : null,\n\t\t\tremoteProfiles,\n\t\t\tpreviewResource: this.previewResource,\n\t\t\tpreviewResult,\n\t\t\tlocalChange: previewResult.localChange,\n\t\t\tremoteChange: previewResult.remoteChange,\n\t\t\tacceptedResource: this.acceptedResource\n\t\t}];\n\t}\n\n\tprotected async hasRemoteChanged(lastSyncUserData: IRemoteUserData): Promise<boolean> {\n\t\tconst lastSyncProfiles: ISyncUserDataProfile[] | null = lastSyncUserData?.syncData ? parseUserDataProfilesManifest(lastSyncUserData.syncData) : null;\n\t\tconst localProfiles = this.getLocalUserDataProfiles();\n\t\tconst { remote } = merge(localProfiles, lastSyncProfiles, lastSyncProfiles, []);\n\t\treturn !!remote?.added.length || !!remote?.removed.length || !!remote?.updated.length;\n\t}\n\n\tprotected async getMergeResult(resourcePreview: IUserDataProfilesManifestResourcePreview, token: CancellationToken): Promise<IMergeResult> {\n\t\treturn { ...resourcePreview.previewResult, hasConflicts: false };\n\t}\n\n\tprotected async getAcceptResult(resourcePreview: IUserDataProfilesManifestResourcePreview, resource: URI, content: string | null | undefined, token: CancellationToken): Promise<IAcceptResult> {\n\t\t/* Accept local resource */\n\t\tif (this.extUri.isEqual(resource, this.localResource)) {\n\t\t\treturn this.acceptLocal(resourcePreview);\n\t\t}\n\n\t\t/* Accept remote resource */\n\t\tif (this.extUri.isEqual(resource, this.remoteResource)) {\n\t\t\treturn this.acceptRemote(resourcePreview);\n\t\t}\n\n\t\t/* Accept preview resource */\n\t\tif (this.extUri.isEqual(resource, this.previewResource)) {\n\t\t\treturn resourcePreview.previewResult;\n\t\t}\n\n\t\tthrow new Error(`Invalid Resource: ${resource.toString()}`);\n\t}\n\n\tprivate async acceptLocal(resourcePreview: IUserDataProfilesManifestResourcePreview): Promise<IUserDataProfileManifestResourceMergeResult> {\n\t\tconst localProfiles = this.getLocalUserDataProfiles();\n\t\tconst mergeResult = merge(localProfiles, null, null, []);\n\t\tconst { local, remote } = mergeResult;\n\t\treturn {\n\t\t\tcontent: resourcePreview.localContent,\n\t\t\tlocal,\n\t\t\tremote,\n\t\t\tlocalChange: local.added.length > 0 || local.removed.length > 0 || local.updated.length > 0 ? Change.Modified : Change.None,\n\t\t\tremoteChange: remote !== null ? Change.Modified : Change.None,\n\t\t};\n\t}\n\n\tprivate async acceptRemote(resourcePreview: IUserDataProfilesManifestResourcePreview): Promise<IUserDataProfileManifestResourceMergeResult> {\n\t\tconst remoteProfiles: ISyncUserDataProfile[] = resourcePreview.remoteContent ? JSON.parse(resourcePreview.remoteContent) : null;\n\t\tconst lastSyncProfiles: ISyncUserDataProfile[] = [];\n\t\tconst localProfiles: IUserDataProfile[] = [];\n\t\tfor (const profile of this.getLocalUserDataProfiles()) {\n\t\t\tconst remoteProfile = remoteProfiles?.find(remoteProfile => remoteProfile.id === profile.id);\n\t\t\tif (remoteProfile) {\n\t\t\t\tlastSyncProfiles.push({ id: profile.id, name: profile.name, collection: remoteProfile.collection });\n\t\t\t\tlocalProfiles.push(profile);\n\t\t\t}\n\t\t}\n\t\tif (remoteProfiles !== null) {\n\t\t\tconst mergeResult = merge(localProfiles, remoteProfiles, lastSyncProfiles, []);\n\t\t\tconst { local, remote } = mergeResult;\n\t\t\treturn {\n\t\t\t\tcontent: resourcePreview.remoteContent,\n\t\t\t\tlocal,\n\t\t\t\tremote,\n\t\t\t\tlocalChange: local.added.length > 0 || local.removed.length > 0 || local.updated.length > 0 ? Change.Modified : Change.None,\n\t\t\t\tremoteChange: remote !== null ? Change.Modified : Change.None,\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tcontent: resourcePreview.remoteContent,\n\t\t\t\tlocal: { added: [], removed: [], updated: [] },\n\t\t\t\tremote: null,\n\t\t\t\tlocalChange: Change.None,\n\t\t\t\tremoteChange: Change.None,\n\t\t\t};\n\t\t}\n\t}\n\n\tprotected async applyResult(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, resourcePreviews: [IUserDataProfilesManifestResourcePreview, IUserDataProfileManifestResourceMergeResult][], force: boolean): Promise<void> {\n\t\tconst { local, remote, localChange, remoteChange } = resourcePreviews[0][1];\n\t\tif (localChange === Change.None && remoteChange === Change.None) {\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: No changes found during synchronizing profiles.`);\n\t\t}\n\n\t\tconst remoteProfiles = resourcePreviews[0][0].remoteProfiles || [];\n\t\tif (remoteProfiles.length + (remote?.added.length ?? 0) - (remote?.removed.length ?? 0) > 20) {\n\t\t\tthrow new UserDataSyncError('Too many profiles to sync. Please remove some profiles and try again.', UserDataSyncErrorCode.LocalTooManyProfiles);\n\t\t}\n\n\t\tif (localChange !== Change.None) {\n\t\t\tawait this.backupLocal(stringifyLocalProfiles(this.getLocalUserDataProfiles(), false));\n\t\t\tawait Promise.all(local.removed.map(async profile => {\n\t\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Removing '${profile.name}' profile...`);\n\t\t\t\tawait this.userDataProfilesService.removeProfile(profile);\n\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Removed profile '${profile.name}'.`);\n\t\t\t}));\n\t\t\tawait Promise.all(local.added.map(async profile => {\n\t\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Creating '${profile.name}' profile...`);\n\t\t\t\tawait this.userDataProfilesService.createProfile(profile.id, profile.name, { shortName: profile.shortName, icon: profile.icon, useDefaultFlags: profile.useDefaultFlags });\n\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Created profile '${profile.name}'.`);\n\t\t\t}));\n\t\t\tawait Promise.all(local.updated.map(async profile => {\n\t\t\t\tconst localProfile = this.userDataProfilesService.profiles.find(p => p.id === profile.id);\n\t\t\t\tif (localProfile) {\n\t\t\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Updating '${profile.name}' profile...`);\n\t\t\t\t\tawait this.userDataProfilesService.updateProfile(localProfile, { name: profile.name, shortName: profile.shortName, icon: profile.icon, useDefaultFlags: profile.useDefaultFlags });\n\t\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Updated profile '${profile.name}'.`);\n\t\t\t\t} else {\n\t\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Could not find profile with id '${profile.id}' to update.`);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\tif (remoteChange !== Change.None) {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Updating remote profiles...`);\n\t\t\tconst addedCollections: string[] = [];\n\t\t\tconst canAddRemoteProfiles = remoteProfiles.length + (remote?.added.length ?? 0) <= 20;\n\t\t\tif (canAddRemoteProfiles) {\n\t\t\t\tfor (const profile of remote?.added || []) {\n\t\t\t\t\tconst collection = await this.userDataSyncStoreService.createCollection(this.syncHeaders);\n\t\t\t\t\taddedCollections.push(collection);\n\t\t\t\t\tremoteProfiles.push({ id: profile.id, name: profile.name, collection, shortName: profile.shortName, icon: profile.icon, useDefaultFlags: profile.useDefaultFlags });\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Could not create remote profiles as there are too many profiles.`);\n\t\t\t}\n\t\t\tfor (const profile of remote?.removed || []) {\n\t\t\t\tremoteProfiles.splice(remoteProfiles.findIndex(({ id }) => profile.id === id), 1);\n\t\t\t}\n\t\t\tfor (const profile of remote?.updated || []) {\n\t\t\t\tconst profileToBeUpdated = remoteProfiles.find(({ id }) => profile.id === id);\n\t\t\t\tif (profileToBeUpdated) {\n\t\t\t\t\tremoteProfiles.splice(remoteProfiles.indexOf(profileToBeUpdated), 1, { ...profileToBeUpdated, id: profile.id, name: profile.name, shortName: profile.shortName, icon: profile.icon, useDefaultFlags: profile.useDefaultFlags });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tremoteUserData = await this.updateRemoteProfiles(remoteProfiles, force ? null : remoteUserData.ref);\n\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Updated remote profiles.${canAddRemoteProfiles && remote?.added.length ? ` Added: ${JSON.stringify(remote.added.map(e => e.name))}.` : ''}${remote?.updated.length ? ` Updated: ${JSON.stringify(remote.updated.map(e => e.name))}.` : ''}${remote?.removed.length ? ` Removed: ${JSON.stringify(remote.removed.map(e => e.name))}.` : ''}`);\n\t\t\t} catch (error) {\n\t\t\t\tif (addedCollections.length) {\n\t\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Failed to update remote profiles. Cleaning up added collections...`);\n\t\t\t\t\tfor (const collection of addedCollections) {\n\t\t\t\t\t\tawait this.userDataSyncStoreService.deleteCollection(collection, this.syncHeaders);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tfor (const profile of remote?.removed || []) {\n\t\t\t\tawait this.userDataSyncStoreService.deleteCollection(profile.collection, this.syncHeaders);\n\t\t\t}\n\t\t}\n\n\t\tif (lastSyncUserData?.ref !== remoteUserData.ref) {\n\t\t\t// update last sync\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Updating last synchronized profiles...`);\n\t\t\tawait this.updateLastSyncUserData(remoteUserData);\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Updated last synchronized profiles.`);\n\t\t}\n\t}\n\n\tasync updateRemoteProfiles(profiles: ISyncUserDataProfile[], ref: string | null): Promise<IRemoteUserData> {\n\t\treturn this.updateRemoteUserData(this.stringifyRemoteProfiles(profiles), ref);\n\t}\n\n\tasync hasLocalData(): Promise<boolean> {\n\t\treturn this.getLocalUserDataProfiles().length > 0;\n\t}\n\n\tasync resolveContent(uri: URI): Promise<string | null> {\n\t\tif (this.extUri.isEqual(this.remoteResource, uri)\n\t\t\t|| this.extUri.isEqual(this.baseResource, uri)\n\t\t\t|| this.extUri.isEqual(this.localResource, uri)\n\t\t\t|| this.extUri.isEqual(this.acceptedResource, uri)\n\t\t) {\n\t\t\tconst content = await this.resolvePreviewContent(uri);\n\t\t\treturn content ? toFormattedString(JSON.parse(content), {}) : content;\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate getLocalUserDataProfiles(): IUserDataProfile[] {\n\t\treturn this.userDataProfilesService.profiles.filter(p => !p.isDefault && !p.isTransient);\n\t}\n\n\tprivate stringifyRemoteProfiles(profiles: ISyncUserDataProfile[]): string {\n\t\treturn JSON.stringify([...profiles].sort((a, b) => a.name.localeCompare(b.name)));\n\t}\n\n}\n\nexport function stringifyLocalProfiles(profiles: IUserDataProfile[], format: boolean): string {\n\tconst result = [...profiles].sort((a, b) => a.name.localeCompare(b.name)).map(p => ({ id: p.id, name: p.name }));\n\treturn format ? toFormattedString(result, {}) : JSON.stringify(result);\n}\n\nexport function parseUserDataProfilesManifest(syncData: ISyncData): ISyncUserDataProfile[] {\n\treturn JSON.parse(syncData.content);\n}\n\n\n"],
  "mappings": "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",
  "names": ["remoteProfile"]
}
