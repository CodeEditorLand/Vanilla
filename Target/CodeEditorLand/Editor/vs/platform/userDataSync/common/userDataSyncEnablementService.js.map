{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/userDataSync/common/userDataSyncEnablementService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, type Event } from \"../../../base/common/event.js\";\nimport { Disposable, DisposableStore } from \"../../../base/common/lifecycle.js\";\nimport { isWeb } from \"../../../base/common/platform.js\";\nimport { IEnvironmentService } from \"../../environment/common/environment.js\";\nimport {\n\ttype IApplicationStorageValueChangeEvent,\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../storage/common/storage.js\";\nimport { ITelemetryService } from \"../../telemetry/common/telemetry.js\";\nimport {\n\tALL_SYNC_RESOURCES,\n\ttype IUserDataSyncEnablementService,\n\tIUserDataSyncStoreManagementService,\n\ttype SyncResource,\n\tgetEnablementKey,\n} from \"./userDataSync.js\";\n\ntype SyncEnablementClassification = {\n\towner: \"sandy081\";\n\tcomment: \"Reporting when Settings Sync is turned on or off\";\n\tenabled?: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"Flag indicating if settings sync is enabled or not\";\n\t};\n};\n\nconst enablementKey = \"sync.enable\";\n\nexport class UserDataSyncEnablementService\n\textends Disposable\n\timplements IUserDataSyncEnablementService\n{\n\t_serviceBrand: any;\n\n\tprivate _onDidChangeEnablement = new Emitter<boolean>();\n\treadonly onDidChangeEnablement: Event<boolean> =\n\t\tthis._onDidChangeEnablement.event;\n\n\tprivate _onDidChangeResourceEnablement = new Emitter<\n\t\t[SyncResource, boolean]\n\t>();\n\treadonly onDidChangeResourceEnablement: Event<[SyncResource, boolean]> =\n\t\tthis._onDidChangeResourceEnablement.event;\n\n\tconstructor(\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IEnvironmentService\n\t\tprotected readonly environmentService: IEnvironmentService,\n\t\t@IUserDataSyncStoreManagementService\n\t\tprivate readonly userDataSyncStoreManagementService: IUserDataSyncStoreManagementService,\n\t) {\n\t\tsuper();\n\t\tthis._register(\n\t\t\tstorageService.onDidChangeValue(\n\t\t\t\tStorageScope.APPLICATION,\n\t\t\t\tundefined,\n\t\t\t\tthis._register(new DisposableStore()),\n\t\t\t)((e) => this.onDidStorageChange(e)),\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\tswitch (this.environmentService.sync) {\n\t\t\tcase \"on\":\n\t\t\t\treturn true;\n\t\t\tcase \"off\":\n\t\t\t\treturn false;\n\t\t}\n\t\treturn this.storageService.getBoolean(\n\t\t\tenablementKey,\n\t\t\tStorageScope.APPLICATION,\n\t\t\tfalse,\n\t\t);\n\t}\n\n\tcanToggleEnablement(): boolean {\n\t\treturn (\n\t\t\tthis.userDataSyncStoreManagementService.userDataSyncStore !==\n\t\t\t\tundefined && this.environmentService.sync === undefined\n\t\t);\n\t}\n\n\tsetEnablement(enabled: boolean): void {\n\t\tif (enabled && !this.canToggleEnablement()) {\n\t\t\treturn;\n\t\t}\n\t\tthis.telemetryService.publicLog2<\n\t\t\t{ enabled: boolean },\n\t\t\tSyncEnablementClassification\n\t\t>(enablementKey, { enabled });\n\t\tthis.storageService.store(\n\t\t\tenablementKey,\n\t\t\tenabled,\n\t\t\tStorageScope.APPLICATION,\n\t\t\tStorageTarget.MACHINE,\n\t\t);\n\t}\n\n\tisResourceEnabled(resource: SyncResource): boolean {\n\t\treturn this.storageService.getBoolean(\n\t\t\tgetEnablementKey(resource),\n\t\t\tStorageScope.APPLICATION,\n\t\t\ttrue,\n\t\t);\n\t}\n\n\tsetResourceEnablement(resource: SyncResource, enabled: boolean): void {\n\t\tif (this.isResourceEnabled(resource) !== enabled) {\n\t\t\tconst resourceEnablementKey = getEnablementKey(resource);\n\t\t\tthis.storeResourceEnablement(resourceEnablementKey, enabled);\n\t\t}\n\t}\n\n\tgetResourceSyncStateVersion(resource: SyncResource): string | undefined {\n\t\treturn undefined;\n\t}\n\n\tprivate storeResourceEnablement(\n\t\tresourceEnablementKey: string,\n\t\tenabled: boolean,\n\t): void {\n\t\tthis.storageService.store(\n\t\t\tresourceEnablementKey,\n\t\t\tenabled,\n\t\t\tStorageScope.APPLICATION,\n\t\t\tisWeb\n\t\t\t\t? StorageTarget.USER /* sync in web */\n\t\t\t\t: StorageTarget.MACHINE,\n\t\t);\n\t}\n\n\tprivate onDidStorageChange(\n\t\tstorageChangeEvent: IApplicationStorageValueChangeEvent,\n\t): void {\n\t\tif (enablementKey === storageChangeEvent.key) {\n\t\t\tthis._onDidChangeEnablement.fire(this.isEnabled());\n\t\t\treturn;\n\t\t}\n\n\t\tconst resourceKey = ALL_SYNC_RESOURCES.filter(\n\t\t\t(resourceKey) =>\n\t\t\t\tgetEnablementKey(resourceKey) === storageChangeEvent.key,\n\t\t)[0];\n\t\tif (resourceKey) {\n\t\t\tthis._onDidChangeResourceEnablement.fire([\n\t\t\t\tresourceKey,\n\t\t\t\tthis.isResourceEnabled(resourceKey),\n\t\t\t]);\n\t\t\treturn;\n\t\t}\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,eAA2B;AACpC,SAAS,YAAY,uBAAuB;AAC5C,SAAS,aAAa;AACtB,SAAS,2BAA2B;AACpC;AAAA,EAEC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,yBAAyB;AAClC;AAAA,EACC;AAAA,EAEA;AAAA,EAEA;AAAA,OACM;AAYP,MAAM,gBAAgB;AAEf,IAAM,gCAAN,cACE,WAET;AAAA,EAaC,YACmC,gBACE,kBAEjB,oBAEF,oCAChB;AACD,UAAM;AAP4B;AACE;AAEjB;AAEF;AAGjB,SAAK;AAAA,MACJ,eAAe;AAAA,QACd,aAAa;AAAA,QACb;AAAA,QACA,KAAK,UAAU,IAAI,gBAAgB,CAAC;AAAA,MACrC,EAAE,CAAC,MAAM,KAAK,mBAAmB,CAAC,CAAC;AAAA,IACpC;AAAA,EACD;AAAA,EApED,OAuCA;AAAA;AAAA;AAAA,EACC;AAAA,EAEQ,yBAAyB,IAAI,QAAiB;AAAA,EAC7C,wBACR,KAAK,uBAAuB;AAAA,EAErB,iCAAiC,IAAI,QAE3C;AAAA,EACO,gCACR,KAAK,+BAA+B;AAAA,EAoBrC,YAAqB;AACpB,YAAQ,KAAK,mBAAmB,MAAM;AAAA,MACrC,KAAK;AACJ,eAAO;AAAA,MACR,KAAK;AACJ,eAAO;AAAA,IACT;AACA,WAAO,KAAK,eAAe;AAAA,MAC1B;AAAA,MACA,aAAa;AAAA,MACb;AAAA,IACD;AAAA,EACD;AAAA,EAEA,sBAA+B;AAC9B,WACC,KAAK,mCAAmC,sBACvC,UAAa,KAAK,mBAAmB,SAAS;AAAA,EAEjD;AAAA,EAEA,cAAc,SAAwB;AACrC,QAAI,WAAW,CAAC,KAAK,oBAAoB,GAAG;AAC3C;AAAA,IACD;AACA,SAAK,iBAAiB,WAGpB,eAAe,EAAE,QAAQ,CAAC;AAC5B,SAAK,eAAe;AAAA,MACnB;AAAA,MACA;AAAA,MACA,aAAa;AAAA,MACb,cAAc;AAAA,IACf;AAAA,EACD;AAAA,EAEA,kBAAkB,UAAiC;AAClD,WAAO,KAAK,eAAe;AAAA,MAC1B,iBAAiB,QAAQ;AAAA,MACzB,aAAa;AAAA,MACb;AAAA,IACD;AAAA,EACD;AAAA,EAEA,sBAAsB,UAAwB,SAAwB;AACrE,QAAI,KAAK,kBAAkB,QAAQ,MAAM,SAAS;AACjD,YAAM,wBAAwB,iBAAiB,QAAQ;AACvD,WAAK,wBAAwB,uBAAuB,OAAO;AAAA,IAC5D;AAAA,EACD;AAAA,EAEA,4BAA4B,UAA4C;AACvE,WAAO;AAAA,EACR;AAAA,EAEQ,wBACP,uBACA,SACO;AACP,SAAK,eAAe;AAAA,MACnB;AAAA,MACA;AAAA,MACA,aAAa;AAAA,MACb,QACG,cAAc,OACd,cAAc;AAAA,IAClB;AAAA,EACD;AAAA,EAEQ,mBACP,oBACO;AACP,QAAI,kBAAkB,mBAAmB,KAAK;AAC7C,WAAK,uBAAuB,KAAK,KAAK,UAAU,CAAC;AACjD;AAAA,IACD;AAEA,UAAM,cAAc,mBAAmB;AAAA,MACtC,CAACA,iBACA,iBAAiBA,YAAW,MAAM,mBAAmB;AAAA,IACvD,EAAE,CAAC;AACH,QAAI,aAAa;AAChB,WAAK,+BAA+B,KAAK;AAAA,QACxC;AAAA,QACA,KAAK,kBAAkB,WAAW;AAAA,MACnC,CAAC;AACD;AAAA,IACD;AAAA,EACD;AACD;AA5Ha,gCAAN;AAAA,EAiBJ;AAAA,EACA;AAAA,EACA;AAAA,EAEA;AAAA,GArBU;",
  "names": ["resourceKey"]
}
