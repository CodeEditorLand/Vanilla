{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/userDataSync/common/userDataSyncEnablementService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { isWeb } from '../../../base/common/platform.js';\nimport { IEnvironmentService } from '../../environment/common/environment.js';\nimport { IApplicationStorageValueChangeEvent, IStorageService, StorageScope, StorageTarget } from '../../storage/common/storage.js';\nimport { ITelemetryService } from '../../telemetry/common/telemetry.js';\nimport { ALL_SYNC_RESOURCES, getEnablementKey, IUserDataSyncEnablementService, IUserDataSyncStoreManagementService, SyncResource } from './userDataSync.js';\n\ntype SyncEnablementClassification = {\n\towner: 'sandy081';\n\tcomment: 'Reporting when Settings Sync is turned on or off';\n\tenabled?: { classification: 'SystemMetaData'; purpose: 'FeatureInsight'; comment: 'Flag indicating if settings sync is enabled or not' };\n};\n\nconst enablementKey = 'sync.enable';\n\nexport class UserDataSyncEnablementService extends Disposable implements IUserDataSyncEnablementService {\n\n\t_serviceBrand: any;\n\n\tprivate _onDidChangeEnablement = new Emitter<boolean>();\n\treadonly onDidChangeEnablement: Event<boolean> = this._onDidChangeEnablement.event;\n\n\tprivate _onDidChangeResourceEnablement = new Emitter<[SyncResource, boolean]>();\n\treadonly onDidChangeResourceEnablement: Event<[SyncResource, boolean]> = this._onDidChangeResourceEnablement.event;\n\n\tconstructor(\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IEnvironmentService protected readonly environmentService: IEnvironmentService,\n\t\t@IUserDataSyncStoreManagementService private readonly userDataSyncStoreManagementService: IUserDataSyncStoreManagementService,\n\t) {\n\t\tsuper();\n\t\tthis._register(storageService.onDidChangeValue(StorageScope.APPLICATION, undefined, this._register(new DisposableStore()))(e => this.onDidStorageChange(e)));\n\t}\n\n\tisEnabled(): boolean {\n\t\tswitch (this.environmentService.sync) {\n\t\t\tcase 'on':\n\t\t\t\treturn true;\n\t\t\tcase 'off':\n\t\t\t\treturn false;\n\t\t}\n\t\treturn this.storageService.getBoolean(enablementKey, StorageScope.APPLICATION, false);\n\t}\n\n\tcanToggleEnablement(): boolean {\n\t\treturn this.userDataSyncStoreManagementService.userDataSyncStore !== undefined && this.environmentService.sync === undefined;\n\t}\n\n\tsetEnablement(enabled: boolean): void {\n\t\tif (enabled && !this.canToggleEnablement()) {\n\t\t\treturn;\n\t\t}\n\t\tthis.telemetryService.publicLog2<{ enabled: boolean }, SyncEnablementClassification>(enablementKey, { enabled });\n\t\tthis.storageService.store(enablementKey, enabled, StorageScope.APPLICATION, StorageTarget.MACHINE);\n\t}\n\n\tisResourceEnabled(resource: SyncResource): boolean {\n\t\treturn this.storageService.getBoolean(getEnablementKey(resource), StorageScope.APPLICATION, true);\n\t}\n\n\tsetResourceEnablement(resource: SyncResource, enabled: boolean): void {\n\t\tif (this.isResourceEnabled(resource) !== enabled) {\n\t\t\tconst resourceEnablementKey = getEnablementKey(resource);\n\t\t\tthis.storeResourceEnablement(resourceEnablementKey, enabled);\n\t\t}\n\t}\n\n\tgetResourceSyncStateVersion(resource: SyncResource): string | undefined {\n\t\treturn undefined;\n\t}\n\n\tprivate storeResourceEnablement(resourceEnablementKey: string, enabled: boolean): void {\n\t\tthis.storageService.store(resourceEnablementKey, enabled, StorageScope.APPLICATION, isWeb ? StorageTarget.USER /* sync in web */ : StorageTarget.MACHINE);\n\t}\n\n\tprivate onDidStorageChange(storageChangeEvent: IApplicationStorageValueChangeEvent): void {\n\t\tif (enablementKey === storageChangeEvent.key) {\n\t\t\tthis._onDidChangeEnablement.fire(this.isEnabled());\n\t\t\treturn;\n\t\t}\n\n\t\tconst resourceKey = ALL_SYNC_RESOURCES.filter(resourceKey => getEnablementKey(resourceKey) === storageChangeEvent.key)[0];\n\t\tif (resourceKey) {\n\t\t\tthis._onDidChangeResourceEnablement.fire([resourceKey, this.isResourceEnabled(resourceKey)]);\n\t\t\treturn;\n\t\t}\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,SAAS,aAAa;AAC/B,SAAS,YAAY,uBAAuB;AAC5C,SAAS,aAAa;AACtB,SAAS,2BAA2B;AACpC,SAAS,qCAAqC,iBAAiB,cAAc,qBAAqB;AAClG,SAAS,yBAAyB;AAClC,SAAS,oBAAoB,kBAAkB,gCAAgC,qCAAqC,oBAAoB;AAQxI,MAAM,gBAAgB;AAEf,IAAM,gCAAN,cAA4C,WAAqD;AAAA,EAUvG,YACmC,gBACE,kBACI,oBACc,oCACrD;AACD,UAAM;AAL4B;AACE;AACI;AACc;AAGtD,SAAK,UAAU,eAAe,iBAAiB,aAAa,aAAa,QAAW,KAAK,UAAU,IAAI,gBAAgB,CAAC,CAAC,EAAE,OAAK,KAAK,mBAAmB,CAAC,CAAC,CAAC;AAAA,EAC5J;AAAA,EAvCD,OAqBwG;AAAA;AAAA;AAAA,EAEvG;AAAA,EAEQ,yBAAyB,IAAI,QAAiB;AAAA,EAC7C,wBAAwC,KAAK,uBAAuB;AAAA,EAErE,iCAAiC,IAAI,QAAiC;AAAA,EACrE,gCAAgE,KAAK,+BAA+B;AAAA,EAY7G,YAAqB;AACpB,YAAQ,KAAK,mBAAmB,MAAM;AAAA,MACrC,KAAK;AACJ,eAAO;AAAA,MACR,KAAK;AACJ,eAAO;AAAA,IACT;AACA,WAAO,KAAK,eAAe,WAAW,eAAe,aAAa,aAAa,KAAK;AAAA,EACrF;AAAA,EAEA,sBAA+B;AAC9B,WAAO,KAAK,mCAAmC,sBAAsB,UAAa,KAAK,mBAAmB,SAAS;AAAA,EACpH;AAAA,EAEA,cAAc,SAAwB;AACrC,QAAI,WAAW,CAAC,KAAK,oBAAoB,GAAG;AAC3C;AAAA,IACD;AACA,SAAK,iBAAiB,WAA+D,eAAe,EAAE,QAAQ,CAAC;AAC/G,SAAK,eAAe,MAAM,eAAe,SAAS,aAAa,aAAa,cAAc,OAAO;AAAA,EAClG;AAAA,EAEA,kBAAkB,UAAiC;AAClD,WAAO,KAAK,eAAe,WAAW,iBAAiB,QAAQ,GAAG,aAAa,aAAa,IAAI;AAAA,EACjG;AAAA,EAEA,sBAAsB,UAAwB,SAAwB;AACrE,QAAI,KAAK,kBAAkB,QAAQ,MAAM,SAAS;AACjD,YAAM,wBAAwB,iBAAiB,QAAQ;AACvD,WAAK,wBAAwB,uBAAuB,OAAO;AAAA,IAC5D;AAAA,EACD;AAAA,EAEA,4BAA4B,UAA4C;AACvE,WAAO;AAAA,EACR;AAAA,EAEQ,wBAAwB,uBAA+B,SAAwB;AACtF,SAAK,eAAe,MAAM,uBAAuB,SAAS,aAAa,aAAa,QAAQ,cAAc,OAAyB,cAAc,OAAO;AAAA,EACzJ;AAAA,EAEQ,mBAAmB,oBAA+D;AACzF,QAAI,kBAAkB,mBAAmB,KAAK;AAC7C,WAAK,uBAAuB,KAAK,KAAK,UAAU,CAAC;AACjD;AAAA,IACD;AAEA,UAAM,cAAc,mBAAmB,OAAO,CAAAA,iBAAe,iBAAiBA,YAAW,MAAM,mBAAmB,GAAG,EAAE,CAAC;AACxH,QAAI,aAAa;AAChB,WAAK,+BAA+B,KAAK,CAAC,aAAa,KAAK,kBAAkB,WAAW,CAAC,CAAC;AAC3F;AAAA,IACD;AAAA,EACD;AACD;AAzEa,gCAAN;AAAA,EAWJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAdU;",
  "names": ["resourceKey"]
}
