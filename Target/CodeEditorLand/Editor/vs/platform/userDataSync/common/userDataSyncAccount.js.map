{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/userDataSync/common/userDataSyncAccount.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, type Event } from \"../../../base/common/event.js\";\nimport { Disposable } from \"../../../base/common/lifecycle.js\";\nimport { createDecorator } from \"../../instantiation/common/instantiation.js\";\nimport {\n\tIUserDataSyncLogService,\n\tIUserDataSyncStoreService,\n\tUserDataSyncErrorCode,\n} from \"./userDataSync.js\";\n\nexport interface IUserDataSyncAccount {\n\treadonly authenticationProviderId: string;\n\treadonly token: string;\n}\n\nexport const IUserDataSyncAccountService =\n\tcreateDecorator<IUserDataSyncAccountService>(\"IUserDataSyncAccountService\");\nexport interface IUserDataSyncAccountService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly onTokenFailed: Event<boolean /*bail out*/>;\n\treadonly account: IUserDataSyncAccount | undefined;\n\treadonly onDidChangeAccount: Event<IUserDataSyncAccount | undefined>;\n\tupdateAccount(account: IUserDataSyncAccount | undefined): Promise<void>;\n}\n\nexport class UserDataSyncAccountService\n\textends Disposable\n\timplements IUserDataSyncAccountService\n{\n\t_serviceBrand: any;\n\n\tprivate _account: IUserDataSyncAccount | undefined;\n\tget account(): IUserDataSyncAccount | undefined {\n\t\treturn this._account;\n\t}\n\tprivate _onDidChangeAccount = this._register(\n\t\tnew Emitter<IUserDataSyncAccount | undefined>(),\n\t);\n\treadonly onDidChangeAccount = this._onDidChangeAccount.event;\n\n\tprivate _onTokenFailed: Emitter<boolean> = this._register(\n\t\tnew Emitter<boolean>(),\n\t);\n\treadonly onTokenFailed: Event<boolean> = this._onTokenFailed.event;\n\n\tprivate wasTokenFailed = false;\n\n\tconstructor(\n\t\t@IUserDataSyncStoreService private readonly userDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncLogService private readonly logService: IUserDataSyncLogService,\n\t) {\n\t\tsuper();\n\t\tthis._register(userDataSyncStoreService.onTokenFailed(code => {\n\t\t\tthis.logService.info('Settings Sync auth token failed', this.account?.authenticationProviderId, this.wasTokenFailed, code);\n\t\t\tthis.updateAccount(undefined);\n\t\t\tif (code === UserDataSyncErrorCode.Forbidden) {\n\t\t\t\tthis._onTokenFailed.fire(true /*bail out immediately*/);\n\t\t\t} else {\n\t\t\t\tthis._onTokenFailed.fire(this.wasTokenFailed /* bail out if token failed before */);\n\t\t\t}\n\t\t\tthis.wasTokenFailed = true;\n\t\t}));\n\t\tthis._register(userDataSyncStoreService.onTokenSucceed(() => this.wasTokenFailed = false));\n\t}\n\n\tasync updateAccount(\n\t\taccount: IUserDataSyncAccount | undefined,\n\t): Promise<void> {\n\t\tif (\n\t\t\taccount && this._account\n\t\t\t\t? account.token !== this._account.token ||\n\t\t\t\t\taccount.authenticationProviderId !==\n\t\t\t\t\t\tthis._account.authenticationProviderId\n\t\t\t\t: account !== this._account\n\t\t) {\n\t\t\tthis._account = account;\n\t\t\tif (this._account) {\n\t\t\t\tthis.userDataSyncStoreService.setAuthToken(\n\t\t\t\t\tthis._account.token,\n\t\t\t\t\tthis._account.authenticationProviderId,\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis._onDidChangeAccount.fire(account);\n\t\t}\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,eAA2B;AACpC,SAAS,kBAAkB;AAC3B,SAAS,uBAAuB;AAChC;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AAOA,MAAM,8BACZ,gBAA6C,6BAA6B;AAUpE,IAAM,6BAAN,cACE,WAET;AAAA,EAmBC,YAC6C,0BACF,YACzC;AACD,UAAM;AAHsC;AACF;AAG1C,SAAK,UAAU,yBAAyB,cAAc,UAAQ;AAC7D,WAAK,WAAW,KAAK,mCAAmC,KAAK,SAAS,0BAA0B,KAAK,gBAAgB,IAAI;AACzH,WAAK,cAAc,MAAS;AAC5B,UAAI,SAAS,sBAAsB,WAAW;AAC7C,aAAK,eAAe;AAAA,UAAK;AAAA;AAAA,QAA6B;AAAA,MACvD,OAAO;AACN,aAAK,eAAe;AAAA,UAAK,KAAK;AAAA;AAAA,QAAoD;AAAA,MACnF;AACA,WAAK,iBAAiB;AAAA,IACvB,CAAC,CAAC;AACF,SAAK,UAAU,yBAAyB,eAAe,MAAM,KAAK,iBAAiB,KAAK,CAAC;AAAA,EAC1F;AAAA,EApED,OAiCA;AAAA;AAAA;AAAA,EACC;AAAA,EAEQ;AAAA,EACR,IAAI,UAA4C;AAC/C,WAAO,KAAK;AAAA,EACb;AAAA,EACQ,sBAAsB,KAAK;AAAA,IAClC,IAAI,QAA0C;AAAA,EAC/C;AAAA,EACS,qBAAqB,KAAK,oBAAoB;AAAA,EAE/C,iBAAmC,KAAK;AAAA,IAC/C,IAAI,QAAiB;AAAA,EACtB;AAAA,EACS,gBAAgC,KAAK,eAAe;AAAA,EAErD,iBAAiB;AAAA,EAoBzB,MAAM,cACL,SACgB;AAChB,QACC,WAAW,KAAK,WACb,QAAQ,UAAU,KAAK,SAAS,SACjC,QAAQ,6BACP,KAAK,SAAS,2BACd,YAAY,KAAK,UACnB;AACD,WAAK,WAAW;AAChB,UAAI,KAAK,UAAU;AAClB,aAAK,yBAAyB;AAAA,UAC7B,KAAK,SAAS;AAAA,UACd,KAAK,SAAS;AAAA,QACf;AAAA,MACD;AACA,WAAK,oBAAoB,KAAK,OAAO;AAAA,IACtC;AAAA,EACD;AACD;AA5Da,6BAAN;AAAA,EAuBJ;AAAA,EACA;AAAA,GAxBU;",
  "names": []
}
