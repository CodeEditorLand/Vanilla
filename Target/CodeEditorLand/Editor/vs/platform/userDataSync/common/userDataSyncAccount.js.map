{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/userDataSync/common/userDataSyncAccount.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { IUserDataSyncLogService, IUserDataSyncStoreService, UserDataSyncErrorCode } from './userDataSync.js';\n\nexport interface IUserDataSyncAccount {\n\treadonly authenticationProviderId: string;\n\treadonly token: string;\n}\n\nexport const IUserDataSyncAccountService = createDecorator<IUserDataSyncAccountService>('IUserDataSyncAccountService');\nexport interface IUserDataSyncAccountService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly onTokenFailed: Event<boolean/*bail out*/>;\n\treadonly account: IUserDataSyncAccount | undefined;\n\treadonly onDidChangeAccount: Event<IUserDataSyncAccount | undefined>;\n\tupdateAccount(account: IUserDataSyncAccount | undefined): Promise<void>;\n\n}\n\nexport class UserDataSyncAccountService extends Disposable implements IUserDataSyncAccountService {\n\n\t_serviceBrand: any;\n\n\tprivate _account: IUserDataSyncAccount | undefined;\n\tget account(): IUserDataSyncAccount | undefined { return this._account; }\n\tprivate _onDidChangeAccount = this._register(new Emitter<IUserDataSyncAccount | undefined>());\n\treadonly onDidChangeAccount = this._onDidChangeAccount.event;\n\n\tprivate _onTokenFailed: Emitter<boolean> = this._register(new Emitter<boolean>());\n\treadonly onTokenFailed: Event<boolean> = this._onTokenFailed.event;\n\n\tprivate wasTokenFailed: boolean = false;\n\n\tconstructor(\n\t\t@IUserDataSyncStoreService private readonly userDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncLogService private readonly logService: IUserDataSyncLogService,\n\t) {\n\t\tsuper();\n\t\tthis._register(userDataSyncStoreService.onTokenFailed(code => {\n\t\t\tthis.logService.info('Settings Sync auth token failed', this.account?.authenticationProviderId, this.wasTokenFailed, code);\n\t\t\tthis.updateAccount(undefined);\n\t\t\tif (code === UserDataSyncErrorCode.Forbidden) {\n\t\t\t\tthis._onTokenFailed.fire(true /*bail out immediately*/);\n\t\t\t} else {\n\t\t\t\tthis._onTokenFailed.fire(this.wasTokenFailed /* bail out if token failed before */);\n\t\t\t}\n\t\t\tthis.wasTokenFailed = true;\n\t\t}));\n\t\tthis._register(userDataSyncStoreService.onTokenSucceed(() => this.wasTokenFailed = false));\n\t}\n\n\tasync updateAccount(account: IUserDataSyncAccount | undefined): Promise<void> {\n\t\tif (account && this._account ? account.token !== this._account.token || account.authenticationProviderId !== this._account.authenticationProviderId : account !== this._account) {\n\t\t\tthis._account = account;\n\t\t\tif (this._account) {\n\t\t\t\tthis.userDataSyncStoreService.setAuthToken(this._account.token, this._account.authenticationProviderId);\n\t\t\t}\n\t\t\tthis._onDidChangeAccount.fire(account);\n\t\t}\n\t}\n\n}\n\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,SAAS,aAAa;AAC/B,SAAS,kBAAkB;AAC3B,SAAS,uBAAuB;AAChC,SAAS,yBAAyB,2BAA2B,6BAA6B;AAOnF,MAAM,8BAA8B,gBAA6C,6BAA6B;AAW9G,IAAM,6BAAN,cAAyC,WAAkD;AAAA,EAcjG,YAC6C,0BACF,YACzC;AACD,UAAM;AAHsC;AACF;AAG1C,SAAK,UAAU,yBAAyB,cAAc,UAAQ;AAC7D,WAAK,WAAW,KAAK,mCAAmC,KAAK,SAAS,0BAA0B,KAAK,gBAAgB,IAAI;AACzH,WAAK,cAAc,MAAS;AAC5B,UAAI,SAAS,sBAAsB,WAAW;AAC7C,aAAK,eAAe;AAAA,UAAK;AAAA;AAAA,QAA6B;AAAA,MACvD,OAAO;AACN,aAAK,eAAe;AAAA,UAAK,KAAK;AAAA;AAAA,QAAoD;AAAA,MACnF;AACA,WAAK,iBAAiB;AAAA,IACvB,CAAC,CAAC;AACF,SAAK,UAAU,yBAAyB,eAAe,MAAM,KAAK,iBAAiB,KAAK,CAAC;AAAA,EAC1F;AAAA,EAxDD,OA0BkG;AAAA;AAAA;AAAA,EAEjG;AAAA,EAEQ;AAAA,EACR,IAAI,UAA4C;AAAE,WAAO,KAAK;AAAA,EAAU;AAAA,EAChE,sBAAsB,KAAK,UAAU,IAAI,QAA0C,CAAC;AAAA,EACnF,qBAAqB,KAAK,oBAAoB;AAAA,EAE/C,iBAAmC,KAAK,UAAU,IAAI,QAAiB,CAAC;AAAA,EACvE,gBAAgC,KAAK,eAAe;AAAA,EAErD,iBAA0B;AAAA,EAoBlC,MAAM,cAAc,SAA0D;AAC7E,QAAI,WAAW,KAAK,WAAW,QAAQ,UAAU,KAAK,SAAS,SAAS,QAAQ,6BAA6B,KAAK,SAAS,2BAA2B,YAAY,KAAK,UAAU;AAChL,WAAK,WAAW;AAChB,UAAI,KAAK,UAAU;AAClB,aAAK,yBAAyB,aAAa,KAAK,SAAS,OAAO,KAAK,SAAS,wBAAwB;AAAA,MACvG;AACA,WAAK,oBAAoB,KAAK,OAAO;AAAA,IACtC;AAAA,EACD;AAED;AA1Ca,6BAAN;AAAA,EAeJ;AAAA,EACA;AAAA,GAhBU;",
  "names": []
}
