{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/userDataSync/common/userDataSyncLocalStoreService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Promises } from \"../../../base/common/async.js\";\nimport { VSBuffer } from \"../../../base/common/buffer.js\";\nimport { toLocalISOString } from \"../../../base/common/date.js\";\nimport { Disposable } from \"../../../base/common/lifecycle.js\";\nimport { joinPath } from \"../../../base/common/resources.js\";\nimport type { URI } from \"../../../base/common/uri.js\";\nimport { IConfigurationService } from \"../../configuration/common/configuration.js\";\nimport { IEnvironmentService } from \"../../environment/common/environment.js\";\nimport {\n\tFileOperationResult,\n\tIFileService,\n\ttype IFileStat,\n\ttoFileOperationResult,\n} from \"../../files/common/files.js\";\nimport { IUserDataProfilesService } from \"../../userDataProfile/common/userDataProfile.js\";\nimport {\n\tALL_SYNC_RESOURCES,\n\ttype IResourceRefHandle,\n\ttype IUserDataSyncLocalStoreService,\n\tIUserDataSyncLogService,\n\ttype SyncResource,\n} from \"./userDataSync.js\";\n\nexport class UserDataSyncLocalStoreService\n\textends Disposable\n\timplements IUserDataSyncLocalStoreService\n{\n\t_serviceBrand: any;\n\n\tconstructor(\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IUserDataSyncLogService private readonly logService: IUserDataSyncLogService,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t) {\n\t\tsuper();\n\t\tthis.cleanUp();\n\t}\n\n\tprivate async cleanUp(): Promise<void> {\n\t\tfor (const profile of this.userDataProfilesService.profiles) {\n\t\t\tfor (const resource of ALL_SYNC_RESOURCES) {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.cleanUpBackup(\n\t\t\t\t\t\tthis.getResourceBackupHome(\n\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\tprofile.isDefault ? undefined : profile.id,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet stat: IFileStat;\n\t\ttry {\n\t\t\tstat = await this.fileService.resolve(\n\t\t\t\tthis.environmentService.userDataSyncHome,\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tif (\n\t\t\t\ttoFileOperationResult(error) !==\n\t\t\t\tFileOperationResult.FILE_NOT_FOUND\n\t\t\t) {\n\t\t\t\tthis.logService.error(error);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (stat.children) {\n\t\t\tfor (const child of stat.children) {\n\t\t\t\tif (\n\t\t\t\t\tchild.isDirectory &&\n\t\t\t\t\t!ALL_SYNC_RESOURCES.includes(<SyncResource>child.name) &&\n\t\t\t\t\t!this.userDataProfilesService.profiles.some(\n\t\t\t\t\t\t(profile) => profile.id === child.name,\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t\t\"Deleting non existing profile from backup\",\n\t\t\t\t\t\t\tchild.resource.path,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tawait this.fileService.del(child.resource, {\n\t\t\t\t\t\t\trecursive: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tasync getAllResourceRefs(\n\t\tresource: SyncResource,\n\t\tcollection?: string,\n\t\troot?: URI,\n\t): Promise<IResourceRefHandle[]> {\n\t\tconst folder = this.getResourceBackupHome(resource, collection, root);\n\t\ttry {\n\t\t\tconst stat = await this.fileService.resolve(folder);\n\t\t\tif (stat.children) {\n\t\t\t\tconst all = stat.children\n\t\t\t\t\t.filter(\n\t\t\t\t\t\t(stat) =>\n\t\t\t\t\t\t\tstat.isFile && !stat.name.startsWith(\"lastSync\"),\n\t\t\t\t\t)\n\t\t\t\t\t.sort()\n\t\t\t\t\t.reverse();\n\t\t\t\treturn all.map((stat) => ({\n\t\t\t\t\tref: stat.name,\n\t\t\t\t\tcreated: this.getCreationTime(stat),\n\t\t\t\t}));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (\n\t\t\t\ttoFileOperationResult(error) !==\n\t\t\t\tFileOperationResult.FILE_NOT_FOUND\n\t\t\t) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync resolveResourceContent(\n\t\tresourceKey: SyncResource,\n\t\tref: string,\n\t\tcollection?: string,\n\t\troot?: URI,\n\t): Promise<string | null> {\n\t\tconst folder = this.getResourceBackupHome(\n\t\t\tresourceKey,\n\t\t\tcollection,\n\t\t\troot,\n\t\t);\n\t\tconst file = joinPath(folder, ref);\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(file);\n\t\t\treturn content.value.toString();\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tasync writeResource(\n\t\tresourceKey: SyncResource,\n\t\tcontent: string,\n\t\tcTime: Date,\n\t\tcollection?: string,\n\t\troot?: URI,\n\t): Promise<void> {\n\t\tconst folder = this.getResourceBackupHome(\n\t\t\tresourceKey,\n\t\t\tcollection,\n\t\t\troot,\n\t\t);\n\t\tconst resource = joinPath(\n\t\t\tfolder,\n\t\t\t`${toLocalISOString(cTime).replace(/-|:|\\.\\d+Z$/g, \"\")}.json`,\n\t\t);\n\t\ttry {\n\t\t\tawait this.fileService.writeFile(\n\t\t\t\tresource,\n\t\t\t\tVSBuffer.fromString(content),\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t}\n\t}\n\n\tprivate getResourceBackupHome(\n\t\tresource: SyncResource,\n\t\tcollection?: string,\n\t\troot: URI = this.environmentService.userDataSyncHome,\n\t): URI {\n\t\treturn joinPath(\n\t\t\troot,\n\t\t\t...(collection ? [collection, resource] : [resource]),\n\t\t);\n\t}\n\n\tprivate async cleanUpBackup(folder: URI): Promise<void> {\n\t\ttry {\n\t\t\ttry {\n\t\t\t\tif (!(await this.fileService.exists(folder))) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst stat = await this.fileService.resolve(folder);\n\t\t\tif (stat.children) {\n\t\t\t\tconst all = stat.children\n\t\t\t\t\t.filter(\n\t\t\t\t\t\t(stat) =>\n\t\t\t\t\t\t\tstat.isFile &&\n\t\t\t\t\t\t\t/^\\d{8}T\\d{6}(\\.json)?$/.test(stat.name),\n\t\t\t\t\t)\n\t\t\t\t\t.sort();\n\t\t\t\tconst backUpMaxAge =\n\t\t\t\t\t1000 *\n\t\t\t\t\t60 *\n\t\t\t\t\t60 *\n\t\t\t\t\t24 *\n\t\t\t\t\t(this.configurationService.getValue<number>(\n\t\t\t\t\t\t\"sync.localBackupDuration\",\n\t\t\t\t\t) || 30) /* Default 30 days */;\n\t\t\t\tlet toDelete = all.filter(\n\t\t\t\t\t(stat) =>\n\t\t\t\t\t\tDate.now() - this.getCreationTime(stat) > backUpMaxAge,\n\t\t\t\t);\n\t\t\t\tconst remaining = all.length - toDelete.length;\n\t\t\t\tif (remaining < 10) {\n\t\t\t\t\ttoDelete = toDelete.slice(10 - remaining);\n\t\t\t\t}\n\t\t\t\tawait Promises.settled(\n\t\t\t\t\ttoDelete.map(async (stat) => {\n\t\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t\t\"Deleting from backup\",\n\t\t\t\t\t\t\tstat.resource.path,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tawait this.fileService.del(stat.resource);\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t}\n\t}\n\n\tprivate getCreationTime(stat: IFileStat) {\n\t\treturn new Date(\n\t\t\tNumber.parseInt(stat.name.substring(0, 4)),\n\t\t\tNumber.parseInt(stat.name.substring(4, 6)) - 1,\n\t\t\tNumber.parseInt(stat.name.substring(6, 8)),\n\t\t\tNumber.parseInt(stat.name.substring(9, 11)),\n\t\t\tNumber.parseInt(stat.name.substring(11, 13)),\n\t\t\tNumber.parseInt(stat.name.substring(13, 15)),\n\t\t).getTime();\n\t}\n}\n"],
  "mappings": "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",
  "names": ["stat"]
}
