{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/userDataSync/common/userDataSyncLocalStoreService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Promises } from '../../../base/common/async.js';\nimport { VSBuffer } from '../../../base/common/buffer.js';\nimport { toLocalISOString } from '../../../base/common/date.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { joinPath } from '../../../base/common/resources.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { IEnvironmentService } from '../../environment/common/environment.js';\nimport { FileOperationResult, IFileService, IFileStat, toFileOperationResult } from '../../files/common/files.js';\nimport { IUserDataProfilesService } from '../../userDataProfile/common/userDataProfile.js';\nimport { ALL_SYNC_RESOURCES, IResourceRefHandle, IUserDataSyncLocalStoreService, IUserDataSyncLogService, SyncResource } from './userDataSync.js';\n\nexport class UserDataSyncLocalStoreService extends Disposable implements IUserDataSyncLocalStoreService {\n\n\t_serviceBrand: any;\n\n\tconstructor(\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IUserDataSyncLogService private readonly logService: IUserDataSyncLogService,\n\t\t@IUserDataProfilesService private readonly userDataProfilesService: IUserDataProfilesService,\n\t) {\n\t\tsuper();\n\t\tthis.cleanUp();\n\t}\n\n\tprivate async cleanUp(): Promise<void> {\n\t\tfor (const profile of this.userDataProfilesService.profiles) {\n\t\t\tfor (const resource of ALL_SYNC_RESOURCES) {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.cleanUpBackup(this.getResourceBackupHome(resource, profile.isDefault ? undefined : profile.id));\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet stat: IFileStat;\n\t\ttry {\n\t\t\tstat = await this.fileService.resolve(this.environmentService.userDataSyncHome);\n\t\t} catch (error) {\n\t\t\tif (toFileOperationResult(error) !== FileOperationResult.FILE_NOT_FOUND) {\n\t\t\t\tthis.logService.error(error);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (stat.children) {\n\t\t\tfor (const child of stat.children) {\n\t\t\t\tif (child.isDirectory && !ALL_SYNC_RESOURCES.includes(<SyncResource>child.name) && !this.userDataProfilesService.profiles.some(profile => profile.id === child.name)) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.logService.info('Deleting non existing profile from backup', child.resource.path);\n\t\t\t\t\t\tawait this.fileService.del(child.resource, { recursive: true });\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tasync getAllResourceRefs(resource: SyncResource, collection?: string, root?: URI): Promise<IResourceRefHandle[]> {\n\t\tconst folder = this.getResourceBackupHome(resource, collection, root);\n\t\ttry {\n\t\t\tconst stat = await this.fileService.resolve(folder);\n\t\t\tif (stat.children) {\n\t\t\t\tconst all = stat.children.filter(stat => stat.isFile && !stat.name.startsWith('lastSync')).sort().reverse();\n\t\t\t\treturn all.map(stat => ({\n\t\t\t\t\tref: stat.name,\n\t\t\t\t\tcreated: this.getCreationTime(stat)\n\t\t\t\t}));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (toFileOperationResult(error) !== FileOperationResult.FILE_NOT_FOUND) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync resolveResourceContent(resourceKey: SyncResource, ref: string, collection?: string, root?: URI): Promise<string | null> {\n\t\tconst folder = this.getResourceBackupHome(resourceKey, collection, root);\n\t\tconst file = joinPath(folder, ref);\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(file);\n\t\t\treturn content.value.toString();\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tasync writeResource(resourceKey: SyncResource, content: string, cTime: Date, collection?: string, root?: URI): Promise<void> {\n\t\tconst folder = this.getResourceBackupHome(resourceKey, collection, root);\n\t\tconst resource = joinPath(folder, `${toLocalISOString(cTime).replace(/-|:|\\.\\d+Z$/g, '')}.json`);\n\t\ttry {\n\t\t\tawait this.fileService.writeFile(resource, VSBuffer.fromString(content));\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t}\n\t}\n\n\tprivate getResourceBackupHome(resource: SyncResource, collection?: string, root: URI = this.environmentService.userDataSyncHome): URI {\n\t\treturn joinPath(root, ...(collection ? [collection, resource] : [resource]));\n\t}\n\n\tprivate async cleanUpBackup(folder: URI): Promise<void> {\n\t\ttry {\n\t\t\ttry {\n\t\t\t\tif (!(await this.fileService.exists(folder))) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst stat = await this.fileService.resolve(folder);\n\t\t\tif (stat.children) {\n\t\t\t\tconst all = stat.children.filter(stat => stat.isFile && /^\\d{8}T\\d{6}(\\.json)?$/.test(stat.name)).sort();\n\t\t\t\tconst backUpMaxAge = 1000 * 60 * 60 * 24 * (this.configurationService.getValue<number>('sync.localBackupDuration') || 30 /* Default 30 days */);\n\t\t\t\tlet toDelete = all.filter(stat => Date.now() - this.getCreationTime(stat) > backUpMaxAge);\n\t\t\t\tconst remaining = all.length - toDelete.length;\n\t\t\t\tif (remaining < 10) {\n\t\t\t\t\ttoDelete = toDelete.slice(10 - remaining);\n\t\t\t\t}\n\t\t\t\tawait Promises.settled(toDelete.map(async stat => {\n\t\t\t\t\tthis.logService.info('Deleting from backup', stat.resource.path);\n\t\t\t\t\tawait this.fileService.del(stat.resource);\n\t\t\t\t}));\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t}\n\t}\n\n\tprivate getCreationTime(stat: IFileStat) {\n\t\treturn new Date(\n\t\t\tparseInt(stat.name.substring(0, 4)),\n\t\t\tparseInt(stat.name.substring(4, 6)) - 1,\n\t\t\tparseInt(stat.name.substring(6, 8)),\n\t\t\tparseInt(stat.name.substring(9, 11)),\n\t\t\tparseInt(stat.name.substring(11, 13)),\n\t\t\tparseInt(stat.name.substring(13, 15))\n\t\t).getTime();\n\t}\n}\n"],
  "mappings": "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",
  "names": ["stat"]
}
