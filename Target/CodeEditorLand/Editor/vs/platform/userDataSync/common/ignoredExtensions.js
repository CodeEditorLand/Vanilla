var u=Object.defineProperty;var l=Object.getOwnPropertyDescriptor;var g=(s,e,o,n)=>{for(var i=n>1?void 0:n?l(e,o):e,r=s.length-1,t;r>=0;r--)(t=s[r])&&(i=(n?t(e,o,i):t(i))||i);return n&&i&&u(e,o,i),i},d=(s,e)=>(o,n)=>e(o,n,s);import{distinct as f}from"../../../../vs/base/common/arrays.js";import{ConfigurationTarget as c,IConfigurationService as x}from"../../../../vs/platform/configuration/common/configuration.js";import"../../../../vs/platform/extensionManagement/common/extensionManagement.js";import{createDecorator as E}from"../../../../vs/platform/instantiation/common/instantiation.js";const v=E("IIgnoredExtensionsManagementService");let a=class{constructor(e){this.configurationService=e}hasToNeverSyncExtension(e){return this.getConfiguredIgnoredExtensions().includes(e.toLowerCase())}hasToAlwaysSyncExtension(e){return this.getConfiguredIgnoredExtensions().includes(`-${e.toLowerCase()}`)}updateIgnoredExtensions(e,o){let n=[...this.configurationService.getValue("settingsSync.ignoredExtensions")].map(i=>i.toLowerCase());return n=n.filter(i=>i!==e&&i!==`-${e}`),o&&n.push(e.toLowerCase()),this.configurationService.updateValue("settingsSync.ignoredExtensions",n.length?n:void 0,c.USER)}updateSynchronizedExtensions(e,o){let n=[...this.configurationService.getValue("settingsSync.ignoredExtensions")].map(i=>i.toLowerCase());return n=n.filter(i=>i!==e&&i!==`-${e}`),o&&n.push(`-${e.toLowerCase()}`),this.configurationService.updateValue("settingsSync.ignoredExtensions",n.length?n:void 0,c.USER)}getIgnoredExtensions(e){const o=e.filter(t=>t.isMachineScoped).map(t=>t.identifier.id.toLowerCase()),n=this.getConfiguredIgnoredExtensions().map(t=>t.toLowerCase()),i=[],r=[];if(Array.isArray(n))for(const t of n)t.startsWith("-")?r.push(t.substring(1)):i.push(t);return f([...o,...i].filter(t=>!r.includes(t)))}getConfiguredIgnoredExtensions(){let e=this.configurationService.inspect("settingsSync.ignoredExtensions").userValue;return e!==void 0||(e=this.configurationService.inspect("sync.ignoredExtensions").userValue,e!==void 0)?e:(this.configurationService.getValue("settingsSync.ignoredExtensions")||[]).map(o=>o.toLowerCase())}};a=g([d(0,x)],a);export{v as IIgnoredExtensionsManagementService,a as IgnoredExtensionsManagementService};
