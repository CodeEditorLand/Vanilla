{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/userDataSync/common/userDataSyncService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { equals } from \"../../../base/common/arrays.js\";\nimport {\n\ttype CancelablePromise,\n\tRunOnceScheduler,\n\tcreateCancelablePromise,\n} from \"../../../base/common/async.js\";\nimport {\n\ttype CancellationToken,\n\tCancellationTokenSource,\n} from \"../../../base/common/cancellation.js\";\nimport { toErrorMessage } from \"../../../base/common/errorMessage.js\";\nimport { Emitter, type Event } from \"../../../base/common/event.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n\ttoDisposable,\n} from \"../../../base/common/lifecycle.js\";\nimport { isEqual } from \"../../../base/common/resources.js\";\nimport { isBoolean, isUndefined } from \"../../../base/common/types.js\";\nimport type { URI } from \"../../../base/common/uri.js\";\nimport { generateUuid } from \"../../../base/common/uuid.js\";\nimport { IConfigurationService } from \"../../configuration/common/configuration.js\";\nimport { IExtensionGalleryService } from \"../../extensionManagement/common/extensionManagement.js\";\nimport { IFileService } from \"../../files/common/files.js\";\nimport { IInstantiationService } from \"../../instantiation/common/instantiation.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../storage/common/storage.js\";\nimport { ITelemetryService } from \"../../telemetry/common/telemetry.js\";\nimport {\n\ttype IUserDataProfile,\n\tIUserDataProfilesService,\n} from \"../../userDataProfile/common/userDataProfile.js\";\nimport { ExtensionsSynchroniser } from \"./extensionsSync.js\";\nimport { GlobalStateSynchroniser } from \"./globalStateSync.js\";\nimport { KeybindingsSynchroniser } from \"./keybindingsSync.js\";\nimport { SettingsSynchroniser } from \"./settingsSync.js\";\nimport { SnippetsSynchroniser } from \"./snippetsSync.js\";\nimport { TasksSynchroniser } from \"./tasksSync.js\";\nimport { UserDataProfilesManifestSynchroniser } from \"./userDataProfilesManifestSync.js\";\nimport {\n\tALL_SYNC_RESOURCES,\n\tChange,\n\ttype ISyncResourceHandle,\n\ttype ISyncUserDataProfile,\n\ttype IUserDataActivityData,\n\ttype IUserDataManifest,\n\ttype IUserDataManualSyncTask,\n\ttype IUserDataResourceManifest,\n\ttype IUserDataSyncConfiguration,\n\tIUserDataSyncEnablementService,\n\tIUserDataSyncLocalStoreService,\n\tIUserDataSyncLogService,\n\ttype IUserDataSyncResource,\n\ttype IUserDataSyncResourceConflicts,\n\ttype IUserDataSyncResourceError,\n\tIUserDataSyncResourceProviderService,\n\ttype IUserDataSyncService,\n\tIUserDataSyncStoreManagementService,\n\tIUserDataSyncStoreService,\n\ttype IUserDataSyncTask,\n\ttype IUserDataSynchroniser,\n\tMergeState,\n\tSyncResource,\n\tSyncStatus,\n\tUSER_DATA_SYNC_CONFIGURATION_SCOPE,\n\tUserDataSyncError,\n\tUserDataSyncErrorCode,\n\tUserDataSyncStoreError,\n\tcreateSyncHeaders,\n} from \"./userDataSync.js\";\n\ntype SyncErrorClassification = {\n\towner: \"sandy081\";\n\tcomment: \"Information about the error that occurred while syncing\";\n\tcode: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"error code\";\n\t};\n\tservice: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"Settings Sync service for which this error has occurred\";\n\t};\n\tserverCode?: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"Settings Sync service error code\";\n\t};\n\turl?: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"Settings Sync resource URL for which this error has occurred\";\n\t};\n\tresource?: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"Settings Sync resource for which this error has occurred\";\n\t};\n\texecutionId?: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"Settings Sync execution id for which this error has occurred\";\n\t};\n};\n\nconst LAST_SYNC_TIME_KEY = \"sync.lastSyncTime\";\n\nexport class UserDataSyncService\n\textends Disposable\n\timplements IUserDataSyncService\n{\n\t_serviceBrand: any;\n\n\tprivate _status: SyncStatus = SyncStatus.Uninitialized;\n\tget status(): SyncStatus {\n\t\treturn this._status;\n\t}\n\tprivate _onDidChangeStatus: Emitter<SyncStatus> = this._register(\n\t\tnew Emitter<SyncStatus>(),\n\t);\n\treadonly onDidChangeStatus: Event<SyncStatus> =\n\t\tthis._onDidChangeStatus.event;\n\n\tprivate _onDidChangeLocal = this._register(new Emitter<SyncResource>());\n\treadonly onDidChangeLocal = this._onDidChangeLocal.event;\n\n\tprivate _conflicts: IUserDataSyncResourceConflicts[] = [];\n\tget conflicts(): IUserDataSyncResourceConflicts[] {\n\t\treturn this._conflicts;\n\t}\n\tprivate _onDidChangeConflicts = this._register(\n\t\tnew Emitter<IUserDataSyncResourceConflicts[]>(),\n\t);\n\treadonly onDidChangeConflicts = this._onDidChangeConflicts.event;\n\n\tprivate _syncErrors: IUserDataSyncResourceError[] = [];\n\tprivate _onSyncErrors = this._register(\n\t\tnew Emitter<IUserDataSyncResourceError[]>(),\n\t);\n\treadonly onSyncErrors = this._onSyncErrors.event;\n\n\tprivate _lastSyncTime: number | undefined = undefined;\n\tget lastSyncTime(): number | undefined {\n\t\treturn this._lastSyncTime;\n\t}\n\tprivate _onDidChangeLastSyncTime: Emitter<number> = this._register(\n\t\tnew Emitter<number>(),\n\t);\n\treadonly onDidChangeLastSyncTime: Event<number> =\n\t\tthis._onDidChangeLastSyncTime.event;\n\n\tprivate _onDidResetLocal = this._register(new Emitter<void>());\n\treadonly onDidResetLocal = this._onDidResetLocal.event;\n\n\tprivate _onDidResetRemote = this._register(new Emitter<void>());\n\treadonly onDidResetRemote = this._onDidResetRemote.event;\n\n\tprivate activeProfileSynchronizers = new Map<\n\t\tstring,\n\t\t[ProfileSynchronizer, IDisposable]\n\t>();\n\n\tconstructor(\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IUserDataSyncStoreService\n\t\tprivate readonly userDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncStoreManagementService\n\t\tprivate readonly userDataSyncStoreManagementService: IUserDataSyncStoreManagementService,\n\t\t@IInstantiationService\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t\t@IUserDataSyncLogService\n\t\tprivate readonly logService: IUserDataSyncLogService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IUserDataSyncEnablementService\n\t\tprivate readonly userDataSyncEnablementService: IUserDataSyncEnablementService,\n\t\t@IUserDataProfilesService\n\t\tprivate readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IUserDataSyncResourceProviderService\n\t\tprivate readonly userDataSyncResourceProviderService: IUserDataSyncResourceProviderService,\n\t\t@IUserDataSyncLocalStoreService\n\t\tprivate readonly userDataSyncLocalStoreService: IUserDataSyncLocalStoreService,\n\t) {\n\t\tsuper();\n\t\tthis._status = userDataSyncStoreManagementService.userDataSyncStore\n\t\t\t? SyncStatus.Idle\n\t\t\t: SyncStatus.Uninitialized;\n\t\tthis._lastSyncTime = this.storageService.getNumber(\n\t\t\tLAST_SYNC_TIME_KEY,\n\t\t\tStorageScope.APPLICATION,\n\t\t\tundefined,\n\t\t);\n\t\tthis._register(\n\t\t\ttoDisposable(() => this.clearActiveProfileSynchronizers()),\n\t\t);\n\n\t\tthis._register(\n\t\t\tnew RunOnceScheduler(\n\t\t\t\t() => this.cleanUpStaleStorageData(),\n\t\t\t\t5 * 1000 /* after 5s */,\n\t\t\t),\n\t\t).schedule();\n\t}\n\n\tasync createSyncTask(\n\t\tmanifest: IUserDataManifest | null,\n\t\tdisableCache?: boolean,\n\t): Promise<IUserDataSyncTask> {\n\t\tthis.checkEnablement();\n\n\t\tthis.logService.info(\"Sync started.\");\n\t\tconst startTime = new Date().getTime();\n\t\tconst executionId = generateUuid();\n\t\ttry {\n\t\t\tconst syncHeaders = createSyncHeaders(executionId);\n\t\t\tif (disableCache) {\n\t\t\t\tsyncHeaders[\"Cache-Control\"] = \"no-cache\";\n\t\t\t}\n\t\t\tmanifest = await this.userDataSyncStoreService.manifest(\n\t\t\t\tmanifest,\n\t\t\t\tsyncHeaders,\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tconst userDataSyncError =\n\t\t\t\tUserDataSyncError.toUserDataSyncError(error);\n\t\t\treportUserDataSyncError(\n\t\t\t\tuserDataSyncError,\n\t\t\t\texecutionId,\n\t\t\t\tthis.userDataSyncStoreManagementService,\n\t\t\t\tthis.telemetryService,\n\t\t\t);\n\t\t\tthrow userDataSyncError;\n\t\t}\n\n\t\tconst executed = false;\n\t\tconst that = this;\n\t\tlet cancellablePromise: CancelablePromise<void> | undefined;\n\t\treturn {\n\t\t\tmanifest,\n\t\t\tasync run(): Promise<void> {\n\t\t\t\tif (executed) {\n\t\t\t\t\tthrow new Error(\"Can run a task only once\");\n\t\t\t\t}\n\t\t\t\tcancellablePromise = createCancelablePromise((token) =>\n\t\t\t\t\tthat.sync(manifest, false, executionId, token),\n\t\t\t\t);\n\t\t\t\tawait cancellablePromise.finally(\n\t\t\t\t\t() => (cancellablePromise = undefined),\n\t\t\t\t);\n\t\t\t\tthat.logService.info(\n\t\t\t\t\t`Sync done. Took ${new Date().getTime() - startTime}ms`,\n\t\t\t\t);\n\t\t\t\tthat.updateLastSyncTime();\n\t\t\t},\n\t\t\tstop(): Promise<void> {\n\t\t\t\tcancellablePromise?.cancel();\n\t\t\t\treturn that.stop();\n\t\t\t},\n\t\t};\n\t}\n\n\tasync createManualSyncTask(): Promise<IUserDataManualSyncTask> {\n\t\tthis.checkEnablement();\n\n\t\tif (this.userDataSyncEnablementService.isEnabled()) {\n\t\t\tthrow new UserDataSyncError(\n\t\t\t\t\"Cannot start manual sync when sync is enabled\",\n\t\t\t\tUserDataSyncErrorCode.LocalError,\n\t\t\t);\n\t\t}\n\n\t\tthis.logService.info(\"Sync started.\");\n\t\tconst startTime = new Date().getTime();\n\t\tconst executionId = generateUuid();\n\t\tconst syncHeaders = createSyncHeaders(executionId);\n\t\tlet manifest: IUserDataManifest | null;\n\t\ttry {\n\t\t\tmanifest = await this.userDataSyncStoreService.manifest(\n\t\t\t\tnull,\n\t\t\t\tsyncHeaders,\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tconst userDataSyncError =\n\t\t\t\tUserDataSyncError.toUserDataSyncError(error);\n\t\t\treportUserDataSyncError(\n\t\t\t\tuserDataSyncError,\n\t\t\t\texecutionId,\n\t\t\t\tthis.userDataSyncStoreManagementService,\n\t\t\t\tthis.telemetryService,\n\t\t\t);\n\t\t\tthrow userDataSyncError;\n\t\t}\n\n\t\t/* Manual sync shall start on clean local state */\n\t\tawait this.resetLocal();\n\n\t\tconst that = this;\n\t\tconst cancellableToken = new CancellationTokenSource();\n\t\treturn {\n\t\t\tid: executionId,\n\t\t\tasync merge(): Promise<void> {\n\t\t\t\treturn that.sync(\n\t\t\t\t\tmanifest,\n\t\t\t\t\ttrue,\n\t\t\t\t\texecutionId,\n\t\t\t\t\tcancellableToken.token,\n\t\t\t\t);\n\t\t\t},\n\t\t\tasync apply(): Promise<void> {\n\t\t\t\ttry {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait that.applyManualSync(\n\t\t\t\t\t\t\tmanifest,\n\t\t\t\t\t\t\texecutionId,\n\t\t\t\t\t\t\tcancellableToken.token,\n\t\t\t\t\t\t);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tUserDataSyncError.toUserDataSyncError(error)\n\t\t\t\t\t\t\t\t.code === UserDataSyncErrorCode.MethodNotFound\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthat.logService.info(\n\t\t\t\t\t\t\t\t\"Client is making invalid requests. Cleaning up data...\",\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tawait that.cleanUpRemoteData();\n\t\t\t\t\t\t\tthat.logService.info(\n\t\t\t\t\t\t\t\t\"Applying manual sync again...\",\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tawait that.applyManualSync(\n\t\t\t\t\t\t\t\tmanifest,\n\t\t\t\t\t\t\t\texecutionId,\n\t\t\t\t\t\t\t\tcancellableToken.token,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthat.logService.error(error);\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t\tthat.logService.info(\n\t\t\t\t\t`Sync done. Took ${new Date().getTime() - startTime}ms`,\n\t\t\t\t);\n\t\t\t\tthat.updateLastSyncTime();\n\t\t\t},\n\t\t\tasync stop(): Promise<void> {\n\t\t\t\tcancellableToken.cancel();\n\t\t\t\tawait that.stop();\n\t\t\t\tawait that.resetLocal();\n\t\t\t},\n\t\t};\n\t}\n\n\tprivate async sync(\n\t\tmanifest: IUserDataManifest | null,\n\t\tmerge: boolean,\n\t\texecutionId: string,\n\t\ttoken: CancellationToken,\n\t): Promise<void> {\n\t\tthis._syncErrors = [];\n\t\ttry {\n\t\t\tif (this.status !== SyncStatus.HasConflicts) {\n\t\t\t\tthis.setStatus(SyncStatus.Syncing);\n\t\t\t}\n\n\t\t\t// Sync Default Profile First\n\t\t\tconst defaultProfileSynchronizer =\n\t\t\t\tthis.getOrCreateActiveProfileSynchronizer(\n\t\t\t\t\tthis.userDataProfilesService.defaultProfile,\n\t\t\t\t\tundefined,\n\t\t\t\t);\n\t\t\tthis._syncErrors.push(\n\t\t\t\t...(await this.syncProfile(\n\t\t\t\t\tdefaultProfileSynchronizer,\n\t\t\t\t\tmanifest,\n\t\t\t\t\tmerge,\n\t\t\t\t\texecutionId,\n\t\t\t\t\ttoken,\n\t\t\t\t)),\n\t\t\t);\n\n\t\t\t// Sync other profiles\n\t\t\tconst userDataProfileManifestSynchronizer =\n\t\t\t\tdefaultProfileSynchronizer.enabled.find(\n\t\t\t\t\t(s) => s.resource === SyncResource.Profiles,\n\t\t\t\t);\n\t\t\tif (userDataProfileManifestSynchronizer) {\n\t\t\t\tconst syncProfiles =\n\t\t\t\t\t(await (\n\t\t\t\t\t\tuserDataProfileManifestSynchronizer as UserDataProfilesManifestSynchroniser\n\t\t\t\t\t).getLastSyncedProfiles()) || [];\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tawait this.syncRemoteProfiles(\n\t\t\t\t\tsyncProfiles,\n\t\t\t\t\tmanifest,\n\t\t\t\t\tmerge,\n\t\t\t\t\texecutionId,\n\t\t\t\t\ttoken,\n\t\t\t\t);\n\t\t\t}\n\t\t} finally {\n\t\t\tif (this.status !== SyncStatus.HasConflicts) {\n\t\t\t\tthis.setStatus(SyncStatus.Idle);\n\t\t\t}\n\t\t\tthis._onSyncErrors.fire(this._syncErrors);\n\t\t}\n\t}\n\n\tprivate async syncRemoteProfiles(\n\t\tremoteProfiles: ISyncUserDataProfile[],\n\t\tmanifest: IUserDataManifest | null,\n\t\tmerge: boolean,\n\t\texecutionId: string,\n\t\ttoken: CancellationToken,\n\t): Promise<void> {\n\t\tfor (const syncProfile of remoteProfiles) {\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst profile = this.userDataProfilesService.profiles.find(\n\t\t\t\t(p) => p.id === syncProfile.id,\n\t\t\t);\n\t\t\tif (!profile) {\n\t\t\t\tthis.logService.error(\n\t\t\t\t\t`Profile with id:${syncProfile.id} and name: ${syncProfile.name} does not exist locally to sync.`,\n\t\t\t\t);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.logService.info(\"Syncing profile.\", syncProfile.name);\n\t\t\tconst profileSynchronizer =\n\t\t\t\tthis.getOrCreateActiveProfileSynchronizer(profile, syncProfile);\n\t\t\tthis._syncErrors.push(\n\t\t\t\t...(await this.syncProfile(\n\t\t\t\t\tprofileSynchronizer,\n\t\t\t\t\tmanifest,\n\t\t\t\t\tmerge,\n\t\t\t\t\texecutionId,\n\t\t\t\t\ttoken,\n\t\t\t\t)),\n\t\t\t);\n\t\t}\n\t\t// Dispose & Delete profile synchronizers which do not exist anymore\n\t\tfor (const [\n\t\t\tkey,\n\t\t\tprofileSynchronizerItem,\n\t\t] of this.activeProfileSynchronizers.entries()) {\n\t\t\tif (\n\t\t\t\tthis.userDataProfilesService.profiles.some(\n\t\t\t\t\t(p) => p.id === profileSynchronizerItem[0].profile.id,\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tawait profileSynchronizerItem[0].resetLocal();\n\t\t\tprofileSynchronizerItem[1].dispose();\n\t\t\tthis.activeProfileSynchronizers.delete(key);\n\t\t}\n\t}\n\n\tprivate async applyManualSync(\n\t\tmanifest: IUserDataManifest | null,\n\t\texecutionId: string,\n\t\ttoken: CancellationToken,\n\t): Promise<void> {\n\t\tconst profileSynchronizers = this.getActiveProfileSynchronizers();\n\t\tfor (const profileSynchronizer of profileSynchronizers) {\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tawait profileSynchronizer.apply(executionId, token);\n\t\t}\n\n\t\tconst defaultProfileSynchronizer = profileSynchronizers.find(\n\t\t\t(s) => s.profile.isDefault,\n\t\t);\n\t\tif (!defaultProfileSynchronizer) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst userDataProfileManifestSynchronizer =\n\t\t\tdefaultProfileSynchronizer.enabled.find(\n\t\t\t\t(s) => s.resource === SyncResource.Profiles,\n\t\t\t);\n\t\tif (!userDataProfileManifestSynchronizer) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Sync remote profiles which are not synced locally\n\t\tconst remoteProfiles =\n\t\t\t(await (\n\t\t\t\tuserDataProfileManifestSynchronizer as UserDataProfilesManifestSynchroniser\n\t\t\t).getRemoteSyncedProfiles(manifest?.latest ?? null)) || [];\n\t\tconst remoteProfilesToSync = remoteProfiles.filter((remoteProfile) =>\n\t\t\tprofileSynchronizers.every(\n\t\t\t\t(s) => s.profile.id !== remoteProfile.id,\n\t\t\t),\n\t\t);\n\t\tif (remoteProfilesToSync.length) {\n\t\t\tawait this.syncRemoteProfiles(\n\t\t\t\tremoteProfilesToSync,\n\t\t\t\tmanifest,\n\t\t\t\tfalse,\n\t\t\t\texecutionId,\n\t\t\t\ttoken,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate async syncProfile(\n\t\tprofileSynchronizer: ProfileSynchronizer,\n\t\tmanifest: IUserDataManifest | null,\n\t\tmerge: boolean,\n\t\texecutionId: string,\n\t\ttoken: CancellationToken,\n\t): Promise<IUserDataSyncResourceError[]> {\n\t\tconst errors = await profileSynchronizer.sync(\n\t\t\tmanifest,\n\t\t\tmerge,\n\t\t\texecutionId,\n\t\t\ttoken,\n\t\t);\n\t\treturn errors.map(([syncResource, error]) => ({\n\t\t\tprofile: profileSynchronizer.profile,\n\t\t\tsyncResource,\n\t\t\terror,\n\t\t}));\n\t}\n\n\tprivate async stop(): Promise<void> {\n\t\tif (this.status !== SyncStatus.Idle) {\n\t\t\tawait Promise.allSettled(\n\t\t\t\tthis.getActiveProfileSynchronizers().map(\n\t\t\t\t\t(profileSynchronizer) => profileSynchronizer.stop(),\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t}\n\n\tasync resolveContent(resource: URI): Promise<string | null> {\n\t\tconst content =\n\t\t\tawait this.userDataSyncResourceProviderService.resolveContent(\n\t\t\t\tresource,\n\t\t\t);\n\t\tif (content) {\n\t\t\treturn content;\n\t\t}\n\t\tfor (const profileSynchronizer of this.getActiveProfileSynchronizers()) {\n\t\t\tfor (const synchronizer of profileSynchronizer.enabled) {\n\t\t\t\tconst content = await synchronizer.resolveContent(resource);\n\t\t\t\tif (content) {\n\t\t\t\t\treturn content;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tasync replace(syncResourceHandle: ISyncResourceHandle): Promise<void> {\n\t\tthis.checkEnablement();\n\n\t\tconst profileSyncResource =\n\t\t\tthis.userDataSyncResourceProviderService.resolveUserDataSyncResource(\n\t\t\t\tsyncResourceHandle,\n\t\t\t);\n\t\tif (!profileSyncResource) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst content = await this.resolveContent(syncResourceHandle.uri);\n\t\tif (!content) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.performAction(\n\t\t\tprofileSyncResource.profile,\n\t\t\tasync (synchronizer) => {\n\t\t\t\tif (\n\t\t\t\t\tprofileSyncResource.syncResource === synchronizer.resource\n\t\t\t\t) {\n\t\t\t\t\tawait synchronizer.replace(content);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t);\n\n\t\treturn;\n\t}\n\n\tasync accept(\n\t\tsyncResource: IUserDataSyncResource,\n\t\tresource: URI,\n\t\tcontent: string | null | undefined,\n\t\tapply: boolean | { force: boolean },\n\t): Promise<void> {\n\t\tthis.checkEnablement();\n\n\t\tawait this.performAction(syncResource.profile, async (synchronizer) => {\n\t\t\tif (syncResource.syncResource === synchronizer.resource) {\n\t\t\t\tawait synchronizer.accept(resource, content);\n\t\t\t\tif (apply) {\n\t\t\t\t\tawait synchronizer.apply(\n\t\t\t\t\t\tisBoolean(apply) ? false : apply.force,\n\t\t\t\t\t\tcreateSyncHeaders(generateUuid()),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t}\n\n\tasync hasLocalData(): Promise<boolean> {\n\t\tconst result = await this.performAction(\n\t\t\tthis.userDataProfilesService.defaultProfile,\n\t\t\tasync (synchronizer) => {\n\t\t\t\t// skip global state synchronizer\n\t\t\t\tif (\n\t\t\t\t\tsynchronizer.resource !== SyncResource.GlobalState &&\n\t\t\t\t\t(await synchronizer.hasLocalData())\n\t\t\t\t) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t);\n\t\treturn !!result;\n\t}\n\n\tasync hasPreviouslySynced(): Promise<boolean> {\n\t\tconst result = await this.performAction(\n\t\t\tthis.userDataProfilesService.defaultProfile,\n\t\t\tasync (synchronizer) => {\n\t\t\t\tif (await synchronizer.hasPreviouslySynced()) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t);\n\t\treturn !!result;\n\t}\n\n\tasync reset(): Promise<void> {\n\t\tthis.checkEnablement();\n\t\tawait this.resetRemote();\n\t\tawait this.resetLocal();\n\t}\n\n\tasync resetRemote(): Promise<void> {\n\t\tthis.checkEnablement();\n\t\ttry {\n\t\t\tawait this.userDataSyncStoreService.clear();\n\t\t\tthis.logService.info(\"Cleared data on server\");\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t}\n\t\tthis._onDidResetRemote.fire();\n\t}\n\n\tasync resetLocal(): Promise<void> {\n\t\tthis.checkEnablement();\n\t\tthis._lastSyncTime = undefined;\n\t\tthis.storageService.remove(\n\t\t\tLAST_SYNC_TIME_KEY,\n\t\t\tStorageScope.APPLICATION,\n\t\t);\n\t\tfor (const [synchronizer] of this.activeProfileSynchronizers.values()) {\n\t\t\ttry {\n\t\t\t\tawait synchronizer.resetLocal();\n\t\t\t} catch (e) {\n\t\t\t\tthis.logService.error(e);\n\t\t\t}\n\t\t}\n\t\tthis.clearActiveProfileSynchronizers();\n\t\tthis._onDidResetLocal.fire();\n\t\tthis.logService.info(\"Did reset the local sync state.\");\n\t}\n\n\tprivate async cleanUpStaleStorageData(): Promise<void> {\n\t\tconst allKeys = this.storageService.keys(\n\t\t\tStorageScope.APPLICATION,\n\t\t\tStorageTarget.MACHINE,\n\t\t);\n\t\tconst lastSyncProfileKeys: [string, string][] = [];\n\t\tfor (const key of allKeys) {\n\t\t\tif (!key.endsWith(\".lastSyncUserData\")) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst segments = key.split(\".\");\n\t\t\tif (segments.length === 3) {\n\t\t\t\tlastSyncProfileKeys.push([key, segments[0]]);\n\t\t\t}\n\t\t}\n\t\tif (!lastSyncProfileKeys.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst disposables = new DisposableStore();\n\n\t\ttry {\n\t\t\tlet defaultProfileSynchronizer =\n\t\t\t\tthis.activeProfileSynchronizers.get(\n\t\t\t\t\tthis.userDataProfilesService.defaultProfile.id,\n\t\t\t\t)?.[0];\n\t\t\tif (!defaultProfileSynchronizer) {\n\t\t\t\tdefaultProfileSynchronizer = disposables.add(\n\t\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\t\tProfileSynchronizer,\n\t\t\t\t\t\tthis.userDataProfilesService.defaultProfile,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t\tconst userDataProfileManifestSynchronizer =\n\t\t\t\tdefaultProfileSynchronizer.enabled.find(\n\t\t\t\t\t(s) => s.resource === SyncResource.Profiles,\n\t\t\t\t) as UserDataProfilesManifestSynchroniser;\n\t\t\tif (!userDataProfileManifestSynchronizer) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst lastSyncedProfiles =\n\t\t\t\tawait userDataProfileManifestSynchronizer.getLastSyncedProfiles();\n\t\t\tconst lastSyncedCollections =\n\t\t\t\tlastSyncedProfiles?.map((p) => p.collection) ?? [];\n\t\t\tfor (const [key, collection] of lastSyncProfileKeys) {\n\t\t\t\tif (!lastSyncedCollections.includes(collection)) {\n\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t`Removing last sync state for stale profile: ${collection}`,\n\t\t\t\t\t);\n\t\t\t\t\tthis.storageService.remove(key, StorageScope.APPLICATION);\n\t\t\t\t}\n\t\t\t}\n\t\t} finally {\n\t\t\tdisposables.dispose();\n\t\t}\n\t}\n\n\tasync cleanUpRemoteData(): Promise<void> {\n\t\tconst remoteProfiles =\n\t\t\tawait this.userDataSyncResourceProviderService.getRemoteSyncedProfiles();\n\t\tconst remoteProfileCollections = remoteProfiles.map(\n\t\t\t(profile) => profile.collection,\n\t\t);\n\t\tconst allCollections =\n\t\t\tawait this.userDataSyncStoreService.getAllCollections();\n\t\tconst redundantCollections = allCollections.filter(\n\t\t\t(c) => !remoteProfileCollections.includes(c),\n\t\t);\n\t\tif (redundantCollections.length) {\n\t\t\tthis.logService.info(\n\t\t\t\t`Deleting ${redundantCollections.length} redundant collections on server`,\n\t\t\t);\n\t\t\tawait Promise.allSettled(\n\t\t\t\tredundantCollections.map((collectionId) =>\n\t\t\t\t\tthis.userDataSyncStoreService.deleteCollection(\n\t\t\t\t\t\tcollectionId,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t);\n\t\t\tthis.logService.info(`Deleted redundant collections on server`);\n\t\t}\n\t\tconst updatedRemoteProfiles = remoteProfiles.filter((profile) =>\n\t\t\tallCollections.includes(profile.collection),\n\t\t);\n\t\tif (updatedRemoteProfiles.length !== remoteProfiles.length) {\n\t\t\tconst profileManifestSynchronizer =\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tUserDataProfilesManifestSynchroniser,\n\t\t\t\t\tthis.userDataProfilesService.defaultProfile,\n\t\t\t\t\tundefined,\n\t\t\t\t);\n\t\t\ttry {\n\t\t\t\tthis.logService.info(\n\t\t\t\t\t\"Resetting the last synced state of profiles\",\n\t\t\t\t);\n\t\t\t\tawait profileManifestSynchronizer.resetLocal();\n\t\t\t\tthis.logService.info(\n\t\t\t\t\t\"Did reset the last synced state of profiles\",\n\t\t\t\t);\n\t\t\t\tthis.logService.info(\n\t\t\t\t\t`Updating remote profiles with invalid collections on server`,\n\t\t\t\t);\n\t\t\t\tawait profileManifestSynchronizer.updateRemoteProfiles(\n\t\t\t\t\tupdatedRemoteProfiles,\n\t\t\t\t\tnull,\n\t\t\t\t);\n\t\t\t\tthis.logService.info(`Updated remote profiles on server`);\n\t\t\t} finally {\n\t\t\t\tprofileManifestSynchronizer.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tasync saveRemoteActivityData(location: URI): Promise<void> {\n\t\tthis.checkEnablement();\n\t\tconst data = await this.userDataSyncStoreService.getActivityData();\n\t\tawait this.fileService.writeFile(location, data);\n\t}\n\n\tasync extractActivityData(\n\t\tactivityDataResource: URI,\n\t\tlocation: URI,\n\t): Promise<void> {\n\t\tconst content = (\n\t\t\tawait this.fileService.readFile(activityDataResource)\n\t\t).value.toString();\n\t\tconst activityData: IUserDataActivityData = JSON.parse(content);\n\n\t\tif (activityData.resources) {\n\t\t\tfor (const resource in activityData.resources) {\n\t\t\t\tfor (const version of activityData.resources[resource]) {\n\t\t\t\t\tawait this.userDataSyncLocalStoreService.writeResource(\n\t\t\t\t\t\tresource as SyncResource,\n\t\t\t\t\t\tversion.content,\n\t\t\t\t\t\tnew Date(version.created * 1000),\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tlocation,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (activityData.collections) {\n\t\t\tfor (const collection in activityData.collections) {\n\t\t\t\tfor (const resource in activityData.collections[collection]\n\t\t\t\t\t.resources) {\n\t\t\t\t\tfor (const version of activityData.collections[collection]\n\t\t\t\t\t\t.resources?.[resource] ?? []) {\n\t\t\t\t\t\tawait this.userDataSyncLocalStoreService.writeResource(\n\t\t\t\t\t\t\tresource as SyncResource,\n\t\t\t\t\t\t\tversion.content,\n\t\t\t\t\t\t\tnew Date(version.created * 1000),\n\t\t\t\t\t\t\tcollection,\n\t\t\t\t\t\t\tlocation,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async performAction<T>(\n\t\tprofile: IUserDataProfile,\n\t\taction: (synchroniser: IUserDataSynchroniser) => Promise<T | undefined>,\n\t): Promise<T | null> {\n\t\tconst disposables = new DisposableStore();\n\t\ttry {\n\t\t\tconst activeProfileSyncronizer =\n\t\t\t\tthis.activeProfileSynchronizers.get(profile.id);\n\t\t\tif (activeProfileSyncronizer) {\n\t\t\t\tconst result = await this.performActionWithProfileSynchronizer(\n\t\t\t\t\tactiveProfileSyncronizer[0],\n\t\t\t\t\taction,\n\t\t\t\t\tdisposables,\n\t\t\t\t);\n\t\t\t\treturn isUndefined(result) ? null : result;\n\t\t\t}\n\n\t\t\tif (profile.isDefault) {\n\t\t\t\tconst defaultProfileSynchronizer = disposables.add(\n\t\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\t\tProfileSynchronizer,\n\t\t\t\t\t\tprofile,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tconst result = await this.performActionWithProfileSynchronizer(\n\t\t\t\t\tdefaultProfileSynchronizer,\n\t\t\t\t\taction,\n\t\t\t\t\tdisposables,\n\t\t\t\t);\n\t\t\t\treturn isUndefined(result) ? null : result;\n\t\t\t}\n\n\t\t\tif (this.userDataProfilesService.isEnabled()) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst userDataProfileManifestSynchronizer = disposables.add(\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tUserDataProfilesManifestSynchroniser,\n\t\t\t\t\tprofile,\n\t\t\t\t\tundefined,\n\t\t\t\t),\n\t\t\t);\n\t\t\tconst manifest = await this.userDataSyncStoreService.manifest(null);\n\t\t\tconst syncProfiles =\n\t\t\t\t(await userDataProfileManifestSynchronizer.getRemoteSyncedProfiles(\n\t\t\t\t\tmanifest?.latest ?? null,\n\t\t\t\t)) || [];\n\t\t\tconst syncProfile = syncProfiles.find(\n\t\t\t\t(syncProfile) => syncProfile.id === profile.id,\n\t\t\t);\n\t\t\tif (syncProfile) {\n\t\t\t\tconst profileSynchronizer = disposables.add(\n\t\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\t\tProfileSynchronizer,\n\t\t\t\t\t\tprofile,\n\t\t\t\t\t\tsyncProfile.collection,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tconst result = await this.performActionWithProfileSynchronizer(\n\t\t\t\t\tprofileSynchronizer,\n\t\t\t\t\taction,\n\t\t\t\t\tdisposables,\n\t\t\t\t);\n\t\t\t\treturn isUndefined(result) ? null : result;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t} finally {\n\t\t\tdisposables.dispose();\n\t\t}\n\t}\n\n\tprivate async performActionWithProfileSynchronizer<T>(\n\t\tprofileSynchronizer: ProfileSynchronizer,\n\t\taction: (synchroniser: IUserDataSynchroniser) => Promise<T | undefined>,\n\t\tdisposables: DisposableStore,\n\t): Promise<T | undefined> {\n\t\tconst allSynchronizers = [\n\t\t\t...profileSynchronizer.enabled,\n\t\t\t...profileSynchronizer.disabled.reduce<\n\t\t\t\t(IUserDataSynchroniser & IDisposable)[]\n\t\t\t>((synchronizers, syncResource) => {\n\t\t\t\tif (syncResource !== SyncResource.WorkspaceState) {\n\t\t\t\t\tsynchronizers.push(\n\t\t\t\t\t\tdisposables.add(\n\t\t\t\t\t\t\tprofileSynchronizer.createSynchronizer(\n\t\t\t\t\t\t\t\tsyncResource,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn synchronizers;\n\t\t\t}, []),\n\t\t];\n\t\tfor (const synchronizer of allSynchronizers) {\n\t\t\tconst result = await action(synchronizer);\n\t\t\tif (!isUndefined(result)) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate setStatus(status: SyncStatus): void {\n\t\tconst oldStatus = this._status;\n\t\tif (this._status !== status) {\n\t\t\tthis._status = status;\n\t\t\tthis._onDidChangeStatus.fire(status);\n\t\t\tif (oldStatus === SyncStatus.HasConflicts) {\n\t\t\t\tthis.updateLastSyncTime();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateConflicts(): void {\n\t\tconst conflicts = this.getActiveProfileSynchronizers().flatMap(\n\t\t\t(synchronizer) => synchronizer.conflicts,\n\t\t);\n\t\tif (\n\t\t\t!equals(\n\t\t\t\tthis._conflicts,\n\t\t\t\tconflicts,\n\t\t\t\t(a, b) =>\n\t\t\t\t\ta.profile.id === b.profile.id &&\n\t\t\t\t\ta.syncResource === b.syncResource &&\n\t\t\t\t\tequals(a.conflicts, b.conflicts, (a, b) =>\n\t\t\t\t\t\tisEqual(a.previewResource, b.previewResource),\n\t\t\t\t\t),\n\t\t\t)\n\t\t) {\n\t\t\tthis._conflicts = conflicts;\n\t\t\tthis._onDidChangeConflicts.fire(conflicts);\n\t\t}\n\t}\n\n\tprivate updateLastSyncTime(): void {\n\t\tif (this.status === SyncStatus.Idle) {\n\t\t\tthis._lastSyncTime = new Date().getTime();\n\t\t\tthis.storageService.store(\n\t\t\t\tLAST_SYNC_TIME_KEY,\n\t\t\t\tthis._lastSyncTime,\n\t\t\t\tStorageScope.APPLICATION,\n\t\t\t\tStorageTarget.MACHINE,\n\t\t\t);\n\t\t\tthis._onDidChangeLastSyncTime.fire(this._lastSyncTime);\n\t\t}\n\t}\n\n\tgetOrCreateActiveProfileSynchronizer(\n\t\tprofile: IUserDataProfile,\n\t\tsyncProfile: ISyncUserDataProfile | undefined,\n\t): ProfileSynchronizer {\n\t\tlet activeProfileSynchronizer = this.activeProfileSynchronizers.get(\n\t\t\tprofile.id,\n\t\t);\n\t\tif (\n\t\t\tactiveProfileSynchronizer &&\n\t\t\tactiveProfileSynchronizer[0].collection !== syncProfile?.collection\n\t\t) {\n\t\t\tthis.logService.error(\n\t\t\t\t\"Profile synchronizer collection does not match with the remote sync profile collection\",\n\t\t\t);\n\t\t\tactiveProfileSynchronizer[1].dispose();\n\t\t\tactiveProfileSynchronizer = undefined;\n\t\t\tthis.activeProfileSynchronizers.delete(profile.id);\n\t\t}\n\t\tif (!activeProfileSynchronizer) {\n\t\t\tconst disposables = new DisposableStore();\n\t\t\tconst profileSynchronizer = disposables.add(\n\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\tProfileSynchronizer,\n\t\t\t\t\tprofile,\n\t\t\t\t\tsyncProfile?.collection,\n\t\t\t\t),\n\t\t\t);\n\t\t\tdisposables.add(\n\t\t\t\tprofileSynchronizer.onDidChangeStatus((e) => this.setStatus(e)),\n\t\t\t);\n\t\t\tdisposables.add(\n\t\t\t\tprofileSynchronizer.onDidChangeConflicts((conflicts) =>\n\t\t\t\t\tthis.updateConflicts(),\n\t\t\t\t),\n\t\t\t);\n\t\t\tdisposables.add(\n\t\t\t\tprofileSynchronizer.onDidChangeLocal((e) =>\n\t\t\t\t\tthis._onDidChangeLocal.fire(e),\n\t\t\t\t),\n\t\t\t);\n\t\t\tthis.activeProfileSynchronizers.set(\n\t\t\t\tprofile.id,\n\t\t\t\t(activeProfileSynchronizer = [\n\t\t\t\t\tprofileSynchronizer,\n\t\t\t\t\tdisposables,\n\t\t\t\t]),\n\t\t\t);\n\t\t}\n\t\treturn activeProfileSynchronizer[0];\n\t}\n\n\tprivate getActiveProfileSynchronizers(): ProfileSynchronizer[] {\n\t\tconst profileSynchronizers: ProfileSynchronizer[] = [];\n\t\tfor (const [\n\t\t\tprofileSynchronizer,\n\t\t] of this.activeProfileSynchronizers.values()) {\n\t\t\tprofileSynchronizers.push(profileSynchronizer);\n\t\t}\n\t\treturn profileSynchronizers;\n\t}\n\n\tprivate clearActiveProfileSynchronizers(): void {\n\t\tthis.activeProfileSynchronizers.forEach(([, disposable]) =>\n\t\t\tdisposable.dispose(),\n\t\t);\n\t\tthis.activeProfileSynchronizers.clear();\n\t}\n\n\tprivate checkEnablement(): void {\n\t\tif (!this.userDataSyncStoreManagementService.userDataSyncStore) {\n\t\t\tthrow new Error(\"Not enabled\");\n\t\t}\n\t}\n}\n\nclass ProfileSynchronizer extends Disposable {\n\tprivate _enabled: [IUserDataSynchroniser, number, IDisposable][] = [];\n\tget enabled(): IUserDataSynchroniser[] {\n\t\treturn this._enabled\n\t\t\t.sort((a, b) => a[1] - b[1])\n\t\t\t.map(([synchronizer]) => synchronizer);\n\t}\n\n\tget disabled(): SyncResource[] {\n\t\treturn ALL_SYNC_RESOURCES.filter(\n\t\t\t(syncResource) =>\n\t\t\t\t!this.userDataSyncEnablementService.isResourceEnabled(\n\t\t\t\t\tsyncResource,\n\t\t\t\t),\n\t\t);\n\t}\n\n\tprivate _status: SyncStatus = SyncStatus.Idle;\n\tget status(): SyncStatus {\n\t\treturn this._status;\n\t}\n\tprivate _onDidChangeStatus: Emitter<SyncStatus> = this._register(\n\t\tnew Emitter<SyncStatus>(),\n\t);\n\treadonly onDidChangeStatus: Event<SyncStatus> =\n\t\tthis._onDidChangeStatus.event;\n\n\tprivate _onDidChangeLocal = this._register(new Emitter<SyncResource>());\n\treadonly onDidChangeLocal = this._onDidChangeLocal.event;\n\n\tprivate _conflicts: IUserDataSyncResourceConflicts[] = [];\n\tget conflicts(): IUserDataSyncResourceConflicts[] {\n\t\treturn this._conflicts;\n\t}\n\tprivate _onDidChangeConflicts = this._register(\n\t\tnew Emitter<IUserDataSyncResourceConflicts[]>(),\n\t);\n\treadonly onDidChangeConflicts = this._onDidChangeConflicts.event;\n\n\tconstructor(\n\t\treadonly profile: IUserDataProfile,\n\t\treadonly collection: string | undefined,\n\t\t@IUserDataSyncEnablementService\n\t\tprivate readonly userDataSyncEnablementService: IUserDataSyncEnablementService,\n\t\t@IInstantiationService\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t\t@IExtensionGalleryService\n\t\tprivate readonly extensionGalleryService: IExtensionGalleryService,\n\t\t@IUserDataSyncStoreManagementService\n\t\tprivate readonly userDataSyncStoreManagementService: IUserDataSyncStoreManagementService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IUserDataSyncLogService\n\t\tprivate readonly logService: IUserDataSyncLogService,\n\t\t@IUserDataProfilesService\n\t\tprivate readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IConfigurationService\n\t\tprivate readonly configurationService: IConfigurationService,\n\t) {\n\t\tsuper();\n\t\tthis._register(\n\t\t\tuserDataSyncEnablementService.onDidChangeResourceEnablement(\n\t\t\t\t([syncResource, enablement]) =>\n\t\t\t\t\tthis.onDidChangeResourceEnablement(\n\t\t\t\t\t\tsyncResource,\n\t\t\t\t\t\tenablement,\n\t\t\t\t\t),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\ttoDisposable(() =>\n\t\t\t\tthis._enabled\n\t\t\t\t\t.splice(0, this._enabled.length)\n\t\t\t\t\t.forEach(([, , disposable]) => disposable.dispose()),\n\t\t\t),\n\t\t);\n\t\tfor (const syncResource of ALL_SYNC_RESOURCES) {\n\t\t\tif (userDataSyncEnablementService.isResourceEnabled(syncResource)) {\n\t\t\t\tthis.registerSynchronizer(syncResource);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onDidChangeResourceEnablement(\n\t\tsyncResource: SyncResource,\n\t\tenabled: boolean,\n\t): void {\n\t\tif (enabled) {\n\t\t\tthis.registerSynchronizer(syncResource);\n\t\t} else {\n\t\t\tthis.deRegisterSynchronizer(syncResource);\n\t\t}\n\t}\n\n\tprotected registerSynchronizer(syncResource: SyncResource): void {\n\t\tif (\n\t\t\tthis._enabled.some(\n\t\t\t\t([synchronizer]) => synchronizer.resource === syncResource,\n\t\t\t)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tif (\n\t\t\tsyncResource === SyncResource.Extensions &&\n\t\t\t!this.extensionGalleryService.isEnabled()\n\t\t) {\n\t\t\tthis.logService.info(\n\t\t\t\t\"Skipping extensions sync because gallery is not configured\",\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\tif (syncResource === SyncResource.Profiles) {\n\t\t\tif (!this.profile.isDefault) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!this.userDataProfilesService.isEnabled()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (syncResource === SyncResource.WorkspaceState) {\n\t\t\treturn;\n\t\t}\n\t\tif (\n\t\t\tsyncResource !== SyncResource.Profiles &&\n\t\t\tthis.profile.useDefaultFlags?.[syncResource]\n\t\t) {\n\t\t\tthis.logService.debug(\n\t\t\t\t`Skipping syncing ${syncResource} in ${this.profile.name} because it is already synced by default profile`,\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\tconst disposables = new DisposableStore();\n\t\tconst synchronizer = disposables.add(\n\t\t\tthis.createSynchronizer(syncResource),\n\t\t);\n\t\tdisposables.add(\n\t\t\tsynchronizer.onDidChangeStatus(() => this.updateStatus()),\n\t\t);\n\t\tdisposables.add(\n\t\t\tsynchronizer.onDidChangeConflicts(() => this.updateConflicts()),\n\t\t);\n\t\tdisposables.add(\n\t\t\tsynchronizer.onDidChangeLocal(() =>\n\t\t\t\tthis._onDidChangeLocal.fire(syncResource),\n\t\t\t),\n\t\t);\n\t\tconst order = this.getOrder(syncResource);\n\t\tthis._enabled.push([synchronizer, order, disposables]);\n\t}\n\n\tprivate deRegisterSynchronizer(syncResource: SyncResource): void {\n\t\tconst index = this._enabled.findIndex(\n\t\t\t([synchronizer]) => synchronizer.resource === syncResource,\n\t\t);\n\t\tif (index !== -1) {\n\t\t\tconst [[synchronizer, , disposable]] = this._enabled.splice(\n\t\t\t\tindex,\n\t\t\t\t1,\n\t\t\t);\n\t\t\tdisposable.dispose();\n\t\t\tthis.updateStatus();\n\t\t\tsynchronizer\n\t\t\t\t.stop()\n\t\t\t\t.then(null, (error) => this.logService.error(error));\n\t\t}\n\t}\n\n\tcreateSynchronizer(\n\t\tsyncResource: Exclude<SyncResource, SyncResource.WorkspaceState>,\n\t): IUserDataSynchroniser & IDisposable {\n\t\tswitch (syncResource) {\n\t\t\tcase SyncResource.Settings:\n\t\t\t\treturn this.instantiationService.createInstance(\n\t\t\t\t\tSettingsSynchroniser,\n\t\t\t\t\tthis.profile,\n\t\t\t\t\tthis.collection,\n\t\t\t\t);\n\t\t\tcase SyncResource.Keybindings:\n\t\t\t\treturn this.instantiationService.createInstance(\n\t\t\t\t\tKeybindingsSynchroniser,\n\t\t\t\t\tthis.profile,\n\t\t\t\t\tthis.collection,\n\t\t\t\t);\n\t\t\tcase SyncResource.Snippets:\n\t\t\t\treturn this.instantiationService.createInstance(\n\t\t\t\t\tSnippetsSynchroniser,\n\t\t\t\t\tthis.profile,\n\t\t\t\t\tthis.collection,\n\t\t\t\t);\n\t\t\tcase SyncResource.Tasks:\n\t\t\t\treturn this.instantiationService.createInstance(\n\t\t\t\t\tTasksSynchroniser,\n\t\t\t\t\tthis.profile,\n\t\t\t\t\tthis.collection,\n\t\t\t\t);\n\t\t\tcase SyncResource.GlobalState:\n\t\t\t\treturn this.instantiationService.createInstance(\n\t\t\t\t\tGlobalStateSynchroniser,\n\t\t\t\t\tthis.profile,\n\t\t\t\t\tthis.collection,\n\t\t\t\t);\n\t\t\tcase SyncResource.Extensions:\n\t\t\t\treturn this.instantiationService.createInstance(\n\t\t\t\t\tExtensionsSynchroniser,\n\t\t\t\t\tthis.profile,\n\t\t\t\t\tthis.collection,\n\t\t\t\t);\n\t\t\tcase SyncResource.Profiles:\n\t\t\t\treturn this.instantiationService.createInstance(\n\t\t\t\t\tUserDataProfilesManifestSynchroniser,\n\t\t\t\t\tthis.profile,\n\t\t\t\t\tthis.collection,\n\t\t\t\t);\n\t\t}\n\t}\n\n\tasync sync(\n\t\tmanifest: IUserDataManifest | null,\n\t\tmerge: boolean,\n\t\texecutionId: string,\n\t\ttoken: CancellationToken,\n\t): Promise<[SyncResource, UserDataSyncError][]> {\n\t\t// Return if cancellation is requested\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst synchronizers = this.enabled;\n\t\tif (!synchronizers.length) {\n\t\t\treturn [];\n\t\t}\n\n\t\ttry {\n\t\t\tconst syncErrors: [SyncResource, UserDataSyncError][] = [];\n\t\t\tconst syncHeaders = createSyncHeaders(executionId);\n\t\t\tconst resourceManifest: IUserDataResourceManifest | null =\n\t\t\t\t(this.collection\n\t\t\t\t\t? manifest?.collections?.[this.collection]?.latest\n\t\t\t\t\t: manifest?.latest) ?? null;\n\t\t\tconst userDataSyncConfiguration = merge\n\t\t\t\t? await this.getUserDataSyncConfiguration(resourceManifest)\n\t\t\t\t: {};\n\t\t\tfor (const synchroniser of synchronizers) {\n\t\t\t\t// Return if cancellation is requested\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\n\t\t\t\t// Return if resource is not enabled\n\t\t\t\tif (\n\t\t\t\t\t!this.userDataSyncEnablementService.isResourceEnabled(\n\t\t\t\t\t\tsynchroniser.resource,\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tif (merge) {\n\t\t\t\t\t\tconst preview = await synchroniser.preview(\n\t\t\t\t\t\t\tresourceManifest,\n\t\t\t\t\t\t\tuserDataSyncConfiguration,\n\t\t\t\t\t\t\tsyncHeaders,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (preview) {\n\t\t\t\t\t\t\tfor (const resourcePreview of preview.resourcePreviews) {\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t(resourcePreview.localChange !==\n\t\t\t\t\t\t\t\t\t\tChange.None ||\n\t\t\t\t\t\t\t\t\t\tresourcePreview.remoteChange !==\n\t\t\t\t\t\t\t\t\t\t\tChange.None) &&\n\t\t\t\t\t\t\t\t\tresourcePreview.mergeState ===\n\t\t\t\t\t\t\t\t\t\tMergeState.Preview\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tawait synchroniser.merge(\n\t\t\t\t\t\t\t\t\t\tresourcePreview.previewResource,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tawait synchroniser.sync(resourceManifest, syncHeaders);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconst userDataSyncError =\n\t\t\t\t\t\tUserDataSyncError.toUserDataSyncError(e);\n\t\t\t\t\treportUserDataSyncError(\n\t\t\t\t\t\tuserDataSyncError,\n\t\t\t\t\t\texecutionId,\n\t\t\t\t\t\tthis.userDataSyncStoreManagementService,\n\t\t\t\t\t\tthis.telemetryService,\n\t\t\t\t\t);\n\t\t\t\t\tif (canBailout(e)) {\n\t\t\t\t\t\tthrow userDataSyncError;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Log and and continue\n\t\t\t\t\tthis.logService.error(e);\n\t\t\t\t\tthis.logService.error(\n\t\t\t\t\t\t`${synchroniser.resource}: ${toErrorMessage(e)}`,\n\t\t\t\t\t);\n\t\t\t\t\tsyncErrors.push([synchroniser.resource, userDataSyncError]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn syncErrors;\n\t\t} finally {\n\t\t\tthis.updateStatus();\n\t\t}\n\t}\n\n\tasync apply(executionId: string, token: CancellationToken): Promise<void> {\n\t\tconst syncHeaders = createSyncHeaders(executionId);\n\t\tfor (const synchroniser of this.enabled) {\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tawait synchroniser.apply(false, syncHeaders);\n\t\t\t} catch (e) {\n\t\t\t\tconst userDataSyncError =\n\t\t\t\t\tUserDataSyncError.toUserDataSyncError(e);\n\t\t\t\treportUserDataSyncError(\n\t\t\t\t\tuserDataSyncError,\n\t\t\t\t\texecutionId,\n\t\t\t\t\tthis.userDataSyncStoreManagementService,\n\t\t\t\t\tthis.telemetryService,\n\t\t\t\t);\n\t\t\t\tif (canBailout(e)) {\n\t\t\t\t\tthrow userDataSyncError;\n\t\t\t\t}\n\n\t\t\t\t// Log and and continue\n\t\t\t\tthis.logService.error(e);\n\t\t\t\tthis.logService.error(\n\t\t\t\t\t`${synchroniser.resource}: ${toErrorMessage(e)}`,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync stop(): Promise<void> {\n\t\tfor (const synchroniser of this.enabled) {\n\t\t\ttry {\n\t\t\t\tif (synchroniser.status !== SyncStatus.Idle) {\n\t\t\t\t\tawait synchroniser.stop();\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tthis.logService.error(e);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync resetLocal(): Promise<void> {\n\t\tfor (const synchroniser of this.enabled) {\n\t\t\ttry {\n\t\t\t\tawait synchroniser.resetLocal();\n\t\t\t} catch (e) {\n\t\t\t\tthis.logService.error(\n\t\t\t\t\t`${synchroniser.resource}: ${toErrorMessage(e)}`,\n\t\t\t\t);\n\t\t\t\tthis.logService.error(e);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async getUserDataSyncConfiguration(\n\t\tmanifest: IUserDataResourceManifest | null,\n\t): Promise<IUserDataSyncConfiguration> {\n\t\tif (!this.profile.isDefault) {\n\t\t\treturn {};\n\t\t}\n\t\tconst local =\n\t\t\tthis.configurationService.getValue<IUserDataSyncConfiguration>(\n\t\t\t\tUSER_DATA_SYNC_CONFIGURATION_SCOPE,\n\t\t\t);\n\t\tconst settingsSynchronizer = this.enabled.find(\n\t\t\t(synchronizer) => synchronizer instanceof SettingsSynchroniser,\n\t\t);\n\t\tif (settingsSynchronizer) {\n\t\t\tconst remote = await (<SettingsSynchroniser>(\n\t\t\t\tsettingsSynchronizer\n\t\t\t)).getRemoteUserDataSyncConfiguration(manifest);\n\t\t\treturn { ...local, ...remote };\n\t\t}\n\t\treturn local;\n\t}\n\n\tprivate setStatus(status: SyncStatus): void {\n\t\tif (this._status !== status) {\n\t\t\tthis._status = status;\n\t\t\tthis._onDidChangeStatus.fire(status);\n\t\t}\n\t}\n\n\tprivate updateStatus(): void {\n\t\tthis.updateConflicts();\n\t\tif (this.enabled.some((s) => s.status === SyncStatus.HasConflicts)) {\n\t\t\treturn this.setStatus(SyncStatus.HasConflicts);\n\t\t}\n\t\tif (this.enabled.some((s) => s.status === SyncStatus.Syncing)) {\n\t\t\treturn this.setStatus(SyncStatus.Syncing);\n\t\t}\n\t\treturn this.setStatus(SyncStatus.Idle);\n\t}\n\n\tprivate updateConflicts(): void {\n\t\tconst conflicts = this.enabled\n\t\t\t.filter((s) => s.status === SyncStatus.HasConflicts)\n\t\t\t.filter((s) => s.conflicts.conflicts.length > 0)\n\t\t\t.map((s) => s.conflicts);\n\t\tif (\n\t\t\t!equals(\n\t\t\t\tthis._conflicts,\n\t\t\t\tconflicts,\n\t\t\t\t(a, b) =>\n\t\t\t\t\ta.syncResource === b.syncResource &&\n\t\t\t\t\tequals(a.conflicts, b.conflicts, (a, b) =>\n\t\t\t\t\t\tisEqual(a.previewResource, b.previewResource),\n\t\t\t\t\t),\n\t\t\t)\n\t\t) {\n\t\t\tthis._conflicts = conflicts;\n\t\t\tthis._onDidChangeConflicts.fire(conflicts);\n\t\t}\n\t}\n\n\tprivate getOrder(syncResource: SyncResource): number {\n\t\tswitch (syncResource) {\n\t\t\tcase SyncResource.Settings:\n\t\t\t\treturn 0;\n\t\t\tcase SyncResource.Keybindings:\n\t\t\t\treturn 1;\n\t\t\tcase SyncResource.Snippets:\n\t\t\t\treturn 2;\n\t\t\tcase SyncResource.Tasks:\n\t\t\t\treturn 3;\n\t\t\tcase SyncResource.GlobalState:\n\t\t\t\treturn 4;\n\t\t\tcase SyncResource.Extensions:\n\t\t\t\treturn 5;\n\t\t\tcase SyncResource.Profiles:\n\t\t\t\treturn 6;\n\t\t\tcase SyncResource.WorkspaceState:\n\t\t\t\treturn 7;\n\t\t}\n\t}\n}\n\nfunction canBailout(e: any): boolean {\n\tif (e instanceof UserDataSyncError) {\n\t\tswitch (e.code) {\n\t\t\tcase UserDataSyncErrorCode.MethodNotFound:\n\t\t\tcase UserDataSyncErrorCode.TooLarge:\n\t\t\tcase UserDataSyncErrorCode.TooManyRequests:\n\t\t\tcase UserDataSyncErrorCode.TooManyRequestsAndRetryAfter:\n\t\t\tcase UserDataSyncErrorCode.LocalTooManyRequests:\n\t\t\tcase UserDataSyncErrorCode.LocalTooManyProfiles:\n\t\t\tcase UserDataSyncErrorCode.Gone:\n\t\t\tcase UserDataSyncErrorCode.UpgradeRequired:\n\t\t\tcase UserDataSyncErrorCode.IncompatibleRemoteContent:\n\t\t\tcase UserDataSyncErrorCode.IncompatibleLocalContent:\n\t\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction reportUserDataSyncError(\n\tuserDataSyncError: UserDataSyncError,\n\texecutionId: string,\n\tuserDataSyncStoreManagementService: IUserDataSyncStoreManagementService,\n\ttelemetryService: ITelemetryService,\n): void {\n\ttelemetryService.publicLog2<\n\t\t{\n\t\t\tcode: string;\n\t\t\tservice: string;\n\t\t\tserverCode?: string;\n\t\t\turl?: string;\n\t\t\tresource?: string;\n\t\t\texecutionId?: string;\n\t\t},\n\t\tSyncErrorClassification\n\t>(\"sync/error\", {\n\t\tcode: userDataSyncError.code,\n\t\tserverCode:\n\t\t\tuserDataSyncError instanceof UserDataSyncStoreError\n\t\t\t\t? String(userDataSyncError.serverCode)\n\t\t\t\t: undefined,\n\t\turl:\n\t\t\tuserDataSyncError instanceof UserDataSyncStoreError\n\t\t\t\t? userDataSyncError.url\n\t\t\t\t: undefined,\n\t\tresource: userDataSyncError.resource,\n\t\texecutionId,\n\t\tservice:\n\t\t\tuserDataSyncStoreManagementService.userDataSyncStore!.url.toString(),\n\t});\n}\n"],
  "mappings": "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",
  "names": ["content", "syncProfile", "a", "b", "synchronizer"]
}
