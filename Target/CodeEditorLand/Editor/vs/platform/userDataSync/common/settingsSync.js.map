{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/userDataSync/common/settingsSync.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { distinct } from \"../../../base/common/arrays.js\";\nimport { VSBuffer } from \"../../../base/common/buffer.js\";\nimport type { CancellationToken } from \"../../../base/common/cancellation.js\";\nimport { Event } from \"../../../base/common/event.js\";\nimport type { URI } from \"../../../base/common/uri.js\";\nimport { localize } from \"../../../nls.js\";\nimport {\n\tConfigurationTarget,\n\tIConfigurationService,\n} from \"../../configuration/common/configuration.js\";\nimport { ConfigurationModelParser } from \"../../configuration/common/configurationModels.js\";\nimport { IEnvironmentService } from \"../../environment/common/environment.js\";\nimport { IExtensionManagementService } from \"../../extensionManagement/common/extensionManagement.js\";\nimport { ExtensionType } from \"../../extensions/common/extensions.js\";\nimport {\n\ttype FileOperationError,\n\tFileOperationResult,\n\tIFileService,\n} from \"../../files/common/files.js\";\nimport { IStorageService } from \"../../storage/common/storage.js\";\nimport { ITelemetryService } from \"../../telemetry/common/telemetry.js\";\nimport { IUriIdentityService } from \"../../uriIdentity/common/uriIdentity.js\";\nimport {\n\ttype IUserDataProfile,\n\tIUserDataProfilesService,\n} from \"../../userDataProfile/common/userDataProfile.js\";\nimport {\n\tAbstractInitializer,\n\tAbstractJsonFileSynchroniser,\n\ttype IAcceptResult,\n\ttype IFileResourcePreview,\n\ttype IMergeResult,\n} from \"./abstractSynchronizer.js\";\nimport {\n\tgetIgnoredSettings,\n\tisEmpty,\n\tmerge,\n\tupdateIgnoredSettings,\n} from \"./settingsMerge.js\";\nimport {\n\tChange,\n\ttype IRemoteUserData,\n\ttype IUserDataResourceManifest,\n\ttype IUserDataSyncConfiguration,\n\tIUserDataSyncEnablementService,\n\tIUserDataSyncLocalStoreService,\n\tIUserDataSyncLogService,\n\tIUserDataSyncStoreService,\n\tIUserDataSyncUtilService,\n\ttype IUserDataSynchroniser,\n\tSyncResource,\n\tUSER_DATA_SYNC_CONFIGURATION_SCOPE,\n\tUSER_DATA_SYNC_SCHEME,\n\tUserDataSyncError,\n\tUserDataSyncErrorCode,\n\tgetIgnoredSettingsForExtension,\n} from \"./userDataSync.js\";\n\ninterface ISettingsResourcePreview extends IFileResourcePreview {\n\tpreviewResult: IMergeResult;\n}\n\nexport interface ISettingsSyncContent {\n\tsettings: string;\n}\n\nfunction isSettingsSyncContent(thing: any): thing is ISettingsSyncContent {\n\treturn (\n\t\tthing &&\n\t\tthing.settings &&\n\t\ttypeof thing.settings === \"string\" &&\n\t\tObject.keys(thing).length === 1\n\t);\n}\n\nexport function parseSettingsSyncContent(\n\tsyncContent: string,\n): ISettingsSyncContent {\n\tconst parsed = <ISettingsSyncContent>JSON.parse(syncContent);\n\treturn isSettingsSyncContent(parsed)\n\t\t? parsed\n\t\t: /* migrate */ { settings: syncContent };\n}\n\nexport class SettingsSynchroniser\n\textends AbstractJsonFileSynchroniser\n\timplements IUserDataSynchroniser\n{\n\t/* Version 2: Change settings from `sync.${setting}` to `settingsSync.{setting}` */\n\tprotected readonly version: number = 2;\n\treadonly previewResource: URI = this.extUri.joinPath(\n\t\tthis.syncPreviewFolder,\n\t\t\"settings.json\",\n\t);\n\treadonly baseResource: URI = this.previewResource.with({\n\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\tauthority: \"base\",\n\t});\n\treadonly localResource: URI = this.previewResource.with({\n\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\tauthority: \"local\",\n\t});\n\treadonly remoteResource: URI = this.previewResource.with({\n\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\tauthority: \"remote\",\n\t});\n\treadonly acceptedResource: URI = this.previewResource.with({\n\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\tauthority: \"accepted\",\n\t});\n\n\tconstructor(\n\t\tprivate readonly profile: IUserDataProfile,\n\t\tcollection: string | undefined,\n\t\t@IFileService fileService: IFileService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IUserDataSyncStoreService userDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncLocalStoreService userDataSyncLocalStoreService: IUserDataSyncLocalStoreService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IUserDataSyncUtilService userDataSyncUtilService: IUserDataSyncUtilService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IUserDataSyncEnablementService userDataSyncEnablementService: IUserDataSyncEnablementService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(profile.settingsResource, { syncResource: SyncResource.Settings, profile }, collection, fileService, environmentService, storageService, userDataSyncStoreService, userDataSyncLocalStoreService, userDataSyncEnablementService, telemetryService, logService, userDataSyncUtilService, configurationService, uriIdentityService);\n\t}\n\n\tasync getRemoteUserDataSyncConfiguration(\n\t\tmanifest: IUserDataResourceManifest | null,\n\t): Promise<IUserDataSyncConfiguration> {\n\t\tconst lastSyncUserData = await this.getLastSyncUserData();\n\t\tconst remoteUserData = await this.getLatestRemoteUserData(\n\t\t\tmanifest,\n\t\t\tlastSyncUserData,\n\t\t);\n\t\tconst remoteSettingsSyncContent =\n\t\t\tthis.getSettingsSyncContent(remoteUserData);\n\t\tconst parser = new ConfigurationModelParser(\n\t\t\tUSER_DATA_SYNC_CONFIGURATION_SCOPE,\n\t\t\tthis.logService,\n\t\t);\n\t\tif (remoteSettingsSyncContent?.settings) {\n\t\t\tparser.parse(remoteSettingsSyncContent.settings);\n\t\t}\n\t\treturn (\n\t\t\tparser.configurationModel.getValue(\n\t\t\t\tUSER_DATA_SYNC_CONFIGURATION_SCOPE,\n\t\t\t) || {}\n\t\t);\n\t}\n\n\tprotected async generateSyncPreview(\n\t\tremoteUserData: IRemoteUserData,\n\t\tlastSyncUserData: IRemoteUserData | null,\n\t\tisRemoteDataFromCurrentMachine: boolean,\n\t): Promise<ISettingsResourcePreview[]> {\n\t\tconst fileContent = await this.getLocalFileContent();\n\t\tconst formattingOptions = await this.getFormattingOptions();\n\t\tconst remoteSettingsSyncContent =\n\t\t\tthis.getSettingsSyncContent(remoteUserData);\n\n\t\t// Use remote data as last sync data if last sync data does not exist and remote data is from same machine\n\t\tlastSyncUserData =\n\t\t\tlastSyncUserData === null && isRemoteDataFromCurrentMachine\n\t\t\t\t? remoteUserData\n\t\t\t\t: lastSyncUserData;\n\t\tconst lastSettingsSyncContent: ISettingsSyncContent | null =\n\t\t\tlastSyncUserData\n\t\t\t\t? this.getSettingsSyncContent(lastSyncUserData)\n\t\t\t\t: null;\n\t\tconst ignoredSettings = await this.getIgnoredSettings();\n\n\t\tlet mergedContent: string | null = null;\n\t\tlet hasLocalChanged = false;\n\t\tlet hasRemoteChanged = false;\n\t\tlet hasConflicts = false;\n\n\t\tif (remoteSettingsSyncContent) {\n\t\t\tlet localContent: string = fileContent\n\t\t\t\t? fileContent.value.toString().trim()\n\t\t\t\t: \"{}\";\n\t\t\tlocalContent = localContent || \"{}\";\n\t\t\tthis.validateContent(localContent);\n\t\t\tthis.logService.trace(\n\t\t\t\t`${this.syncResourceLogLabel}: Merging remote settings with local settings...`,\n\t\t\t);\n\t\t\tconst result = merge(\n\t\t\t\tlocalContent,\n\t\t\t\tremoteSettingsSyncContent.settings,\n\t\t\t\tlastSettingsSyncContent\n\t\t\t\t\t? lastSettingsSyncContent.settings\n\t\t\t\t\t: null,\n\t\t\t\tignoredSettings,\n\t\t\t\t[],\n\t\t\t\tformattingOptions,\n\t\t\t);\n\t\t\tmergedContent = result.localContent || result.remoteContent;\n\t\t\thasLocalChanged = result.localContent !== null;\n\t\t\thasRemoteChanged = result.remoteContent !== null;\n\t\t\thasConflicts = result.hasConflicts;\n\t\t}\n\n\t\t// First time syncing to remote\n\t\telse if (fileContent) {\n\t\t\tthis.logService.trace(\n\t\t\t\t`${this.syncResourceLogLabel}: Remote settings does not exist. Synchronizing settings for the first time.`,\n\t\t\t);\n\t\t\tmergedContent = fileContent.value.toString().trim() || \"{}\";\n\t\t\tthis.validateContent(mergedContent);\n\t\t\thasRemoteChanged = true;\n\t\t}\n\n\t\tconst localContent = fileContent ? fileContent.value.toString() : null;\n\t\tconst baseContent = lastSettingsSyncContent?.settings ?? null;\n\n\t\tconst previewResult = {\n\t\t\tcontent: hasConflicts ? baseContent : mergedContent,\n\t\t\tlocalChange: hasLocalChanged ? Change.Modified : Change.None,\n\t\t\tremoteChange: hasRemoteChanged ? Change.Modified : Change.None,\n\t\t\thasConflicts,\n\t\t};\n\n\t\treturn [\n\t\t\t{\n\t\t\t\tfileContent,\n\n\t\t\t\tbaseResource: this.baseResource,\n\t\t\t\tbaseContent,\n\n\t\t\t\tlocalResource: this.localResource,\n\t\t\t\tlocalContent,\n\t\t\t\tlocalChange: previewResult.localChange,\n\n\t\t\t\tremoteResource: this.remoteResource,\n\t\t\t\tremoteContent: remoteSettingsSyncContent\n\t\t\t\t\t? remoteSettingsSyncContent.settings\n\t\t\t\t\t: null,\n\t\t\t\tremoteChange: previewResult.remoteChange,\n\n\t\t\t\tpreviewResource: this.previewResource,\n\t\t\t\tpreviewResult,\n\t\t\t\tacceptedResource: this.acceptedResource,\n\t\t\t},\n\t\t];\n\t}\n\n\tprotected async hasRemoteChanged(\n\t\tlastSyncUserData: IRemoteUserData,\n\t): Promise<boolean> {\n\t\tconst lastSettingsSyncContent: ISettingsSyncContent | null =\n\t\t\tthis.getSettingsSyncContent(lastSyncUserData);\n\t\tif (lastSettingsSyncContent === null) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst fileContent = await this.getLocalFileContent();\n\t\tconst localContent: string = fileContent\n\t\t\t? fileContent.value.toString().trim()\n\t\t\t: \"\";\n\t\tconst ignoredSettings = await this.getIgnoredSettings();\n\t\tconst formattingOptions = await this.getFormattingOptions();\n\t\tconst result = merge(\n\t\t\tlocalContent || \"{}\",\n\t\t\tlastSettingsSyncContent.settings,\n\t\t\tlastSettingsSyncContent.settings,\n\t\t\tignoredSettings,\n\t\t\t[],\n\t\t\tformattingOptions,\n\t\t);\n\t\treturn result.remoteContent !== null;\n\t}\n\n\tprotected async getMergeResult(\n\t\tresourcePreview: ISettingsResourcePreview,\n\t\ttoken: CancellationToken,\n\t): Promise<IMergeResult> {\n\t\tconst formatUtils = await this.getFormattingOptions();\n\t\tconst ignoredSettings = await this.getIgnoredSettings();\n\t\treturn {\n\t\t\t...resourcePreview.previewResult,\n\n\t\t\t// remove ignored settings from the preview content\n\t\t\tcontent: resourcePreview.previewResult.content\n\t\t\t\t? updateIgnoredSettings(\n\t\t\t\t\t\tresourcePreview.previewResult.content,\n\t\t\t\t\t\t\"{}\",\n\t\t\t\t\t\tignoredSettings,\n\t\t\t\t\t\tformatUtils,\n\t\t\t\t\t)\n\t\t\t\t: null,\n\t\t};\n\t}\n\n\tprotected async getAcceptResult(\n\t\tresourcePreview: ISettingsResourcePreview,\n\t\tresource: URI,\n\t\tcontent: string | null | undefined,\n\t\ttoken: CancellationToken,\n\t): Promise<IAcceptResult> {\n\t\tconst formattingOptions = await this.getFormattingOptions();\n\t\tconst ignoredSettings = await this.getIgnoredSettings();\n\n\t\t/* Accept local resource */\n\t\tif (this.extUri.isEqual(resource, this.localResource)) {\n\t\t\treturn {\n\t\t\t\t/* Remove ignored settings */\n\t\t\t\tcontent: resourcePreview.fileContent\n\t\t\t\t\t? updateIgnoredSettings(\n\t\t\t\t\t\t\tresourcePreview.fileContent.value.toString(),\n\t\t\t\t\t\t\t\"{}\",\n\t\t\t\t\t\t\tignoredSettings,\n\t\t\t\t\t\t\tformattingOptions,\n\t\t\t\t\t\t)\n\t\t\t\t\t: null,\n\t\t\t\tlocalChange: Change.None,\n\t\t\t\tremoteChange: Change.Modified,\n\t\t\t};\n\t\t}\n\n\t\t/* Accept remote resource */\n\t\tif (this.extUri.isEqual(resource, this.remoteResource)) {\n\t\t\treturn {\n\t\t\t\t/* Update ignored settings from local file content */\n\t\t\t\tcontent:\n\t\t\t\t\tresourcePreview.remoteContent !== null\n\t\t\t\t\t\t? updateIgnoredSettings(\n\t\t\t\t\t\t\t\tresourcePreview.remoteContent,\n\t\t\t\t\t\t\t\tresourcePreview.fileContent\n\t\t\t\t\t\t\t\t\t? resourcePreview.fileContent.value.toString()\n\t\t\t\t\t\t\t\t\t: \"{}\",\n\t\t\t\t\t\t\t\tignoredSettings,\n\t\t\t\t\t\t\t\tformattingOptions,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t: null,\n\t\t\t\tlocalChange: Change.Modified,\n\t\t\t\tremoteChange: Change.None,\n\t\t\t};\n\t\t}\n\n\t\t/* Accept preview resource */\n\t\tif (this.extUri.isEqual(resource, this.previewResource)) {\n\t\t\tif (content === undefined) {\n\t\t\t\treturn {\n\t\t\t\t\tcontent: resourcePreview.previewResult.content,\n\t\t\t\t\tlocalChange: resourcePreview.previewResult.localChange,\n\t\t\t\t\tremoteChange: resourcePreview.previewResult.remoteChange,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\t/* Add ignored settings from local file content */\n\t\t\t\t\tcontent:\n\t\t\t\t\t\tcontent !== null\n\t\t\t\t\t\t\t? updateIgnoredSettings(\n\t\t\t\t\t\t\t\t\tcontent,\n\t\t\t\t\t\t\t\t\tresourcePreview.fileContent\n\t\t\t\t\t\t\t\t\t\t? resourcePreview.fileContent.value.toString()\n\t\t\t\t\t\t\t\t\t\t: \"{}\",\n\t\t\t\t\t\t\t\t\tignoredSettings,\n\t\t\t\t\t\t\t\t\tformattingOptions,\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: null,\n\t\t\t\t\tlocalChange: Change.Modified,\n\t\t\t\t\tremoteChange: Change.Modified,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(`Invalid Resource: ${resource.toString()}`);\n\t}\n\n\tprotected async applyResult(\n\t\tremoteUserData: IRemoteUserData,\n\t\tlastSyncUserData: IRemoteUserData | null,\n\t\tresourcePreviews: [ISettingsResourcePreview, IAcceptResult][],\n\t\tforce: boolean,\n\t): Promise<void> {\n\t\tconst { fileContent } = resourcePreviews[0][0];\n\t\tlet { content, localChange, remoteChange } = resourcePreviews[0][1];\n\n\t\tif (localChange === Change.None && remoteChange === Change.None) {\n\t\t\tthis.logService.info(\n\t\t\t\t`${this.syncResourceLogLabel}: No changes found during synchronizing settings.`,\n\t\t\t);\n\t\t}\n\n\t\tcontent = content ? content.trim() : \"{}\";\n\t\tcontent = content || \"{}\";\n\t\tthis.validateContent(content);\n\n\t\tif (localChange !== Change.None) {\n\t\t\tthis.logService.trace(\n\t\t\t\t`${this.syncResourceLogLabel}: Updating local settings...`,\n\t\t\t);\n\t\t\tif (fileContent) {\n\t\t\t\tawait this.backupLocal(\n\t\t\t\t\tJSON.stringify(\n\t\t\t\t\t\tthis.toSettingsSyncContent(\n\t\t\t\t\t\t\tfileContent.value.toString(),\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t\tawait this.updateLocalFileContent(content, fileContent, force);\n\t\t\tawait this.configurationService.reloadConfiguration(\n\t\t\t\tConfigurationTarget.USER_LOCAL,\n\t\t\t);\n\t\t\tthis.logService.info(\n\t\t\t\t`${this.syncResourceLogLabel}: Updated local settings`,\n\t\t\t);\n\t\t}\n\n\t\tif (remoteChange !== Change.None) {\n\t\t\tconst formatUtils = await this.getFormattingOptions();\n\t\t\t// Update ignored settings from remote\n\t\t\tconst remoteSettingsSyncContent =\n\t\t\t\tthis.getSettingsSyncContent(remoteUserData);\n\t\t\tconst ignoredSettings = await this.getIgnoredSettings(content);\n\t\t\tcontent = updateIgnoredSettings(\n\t\t\t\tcontent,\n\t\t\t\tremoteSettingsSyncContent\n\t\t\t\t\t? remoteSettingsSyncContent.settings\n\t\t\t\t\t: \"{}\",\n\t\t\t\tignoredSettings,\n\t\t\t\tformatUtils,\n\t\t\t);\n\t\t\tthis.logService.trace(\n\t\t\t\t`${this.syncResourceLogLabel}: Updating remote settings...`,\n\t\t\t);\n\t\t\tremoteUserData = await this.updateRemoteUserData(\n\t\t\t\tJSON.stringify(this.toSettingsSyncContent(content)),\n\t\t\t\tforce ? null : remoteUserData.ref,\n\t\t\t);\n\t\t\tthis.logService.info(\n\t\t\t\t`${this.syncResourceLogLabel}: Updated remote settings`,\n\t\t\t);\n\t\t}\n\n\t\t// Delete the preview\n\t\ttry {\n\t\t\tawait this.fileService.del(this.previewResource);\n\t\t} catch (e) {\n\t\t\t/* ignore */\n\t\t}\n\n\t\tif (lastSyncUserData?.ref !== remoteUserData.ref) {\n\t\t\tthis.logService.trace(\n\t\t\t\t`${this.syncResourceLogLabel}: Updating last synchronized settings...`,\n\t\t\t);\n\t\t\tawait this.updateLastSyncUserData(remoteUserData);\n\t\t\tthis.logService.info(\n\t\t\t\t`${this.syncResourceLogLabel}: Updated last synchronized settings`,\n\t\t\t);\n\t\t}\n\t}\n\n\tasync hasLocalData(): Promise<boolean> {\n\t\ttry {\n\t\t\tconst localFileContent = await this.getLocalFileContent();\n\t\t\tif (localFileContent) {\n\t\t\t\treturn !isEmpty(localFileContent.value.toString());\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (\n\t\t\t\t(<FileOperationError>error).fileOperationResult !==\n\t\t\t\tFileOperationResult.FILE_NOT_FOUND\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tasync resolveContent(uri: URI): Promise<string | null> {\n\t\tif (\n\t\t\tthis.extUri.isEqual(this.remoteResource, uri) ||\n\t\t\tthis.extUri.isEqual(this.localResource, uri) ||\n\t\t\tthis.extUri.isEqual(this.acceptedResource, uri) ||\n\t\t\tthis.extUri.isEqual(this.baseResource, uri)\n\t\t) {\n\t\t\treturn this.resolvePreviewContent(uri);\n\t\t}\n\t\treturn null;\n\t}\n\n\tprotected override async resolvePreviewContent(\n\t\tresource: URI,\n\t): Promise<string | null> {\n\t\tlet content = await super.resolvePreviewContent(resource);\n\t\tif (content) {\n\t\t\tconst formatUtils = await this.getFormattingOptions();\n\t\t\t// remove ignored settings from the preview content\n\t\t\tconst ignoredSettings = await this.getIgnoredSettings();\n\t\t\tcontent = updateIgnoredSettings(\n\t\t\t\tcontent,\n\t\t\t\t\"{}\",\n\t\t\t\tignoredSettings,\n\t\t\t\tformatUtils,\n\t\t\t);\n\t\t}\n\t\treturn content;\n\t}\n\n\tprivate getSettingsSyncContent(\n\t\tremoteUserData: IRemoteUserData,\n\t): ISettingsSyncContent | null {\n\t\treturn remoteUserData.syncData\n\t\t\t? this.parseSettingsSyncContent(remoteUserData.syncData.content)\n\t\t\t: null;\n\t}\n\n\tprivate parseSettingsSyncContent(\n\t\tsyncContent: string,\n\t): ISettingsSyncContent | null {\n\t\ttry {\n\t\t\treturn parseSettingsSyncContent(syncContent);\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate toSettingsSyncContent(settings: string): ISettingsSyncContent {\n\t\treturn { settings };\n\t}\n\n\tprivate coreIgnoredSettings: Promise<string[]> | undefined = undefined;\n\tprivate systemExtensionsIgnoredSettings: Promise<string[]> | undefined =\n\t\tundefined;\n\tprivate userExtensionsIgnoredSettings: Promise<string[]> | undefined =\n\t\tundefined;\n\tprivate async getIgnoredSettings(content?: string): Promise<string[]> {\n\t\tif (!this.coreIgnoredSettings) {\n\t\t\tthis.coreIgnoredSettings =\n\t\t\t\tthis.userDataSyncUtilService.resolveDefaultCoreIgnoredSettings();\n\t\t}\n\t\tif (!this.systemExtensionsIgnoredSettings) {\n\t\t\tthis.systemExtensionsIgnoredSettings =\n\t\t\t\tthis.getIgnoredSettingForSystemExtensions();\n\t\t}\n\t\tif (!this.userExtensionsIgnoredSettings) {\n\t\t\tthis.userExtensionsIgnoredSettings =\n\t\t\t\tthis.getIgnoredSettingForUserExtensions();\n\t\t\tconst disposable = this._register(\n\t\t\t\tEvent.any<any>(\n\t\t\t\t\tEvent.filter(\n\t\t\t\t\t\tthis.extensionManagementService.onDidInstallExtensions,\n\t\t\t\t\t\t(e) => e.some(({ local }) => !!local),\n\t\t\t\t\t),\n\t\t\t\t\tEvent.filter(\n\t\t\t\t\t\tthis.extensionManagementService.onDidUninstallExtension,\n\t\t\t\t\t\t(e) => !e.error,\n\t\t\t\t\t),\n\t\t\t\t)(() => {\n\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\tthis.userExtensionsIgnoredSettings = undefined;\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t\tconst defaultIgnoredSettings = (\n\t\t\tawait Promise.all([\n\t\t\t\tthis.coreIgnoredSettings,\n\t\t\t\tthis.systemExtensionsIgnoredSettings,\n\t\t\t\tthis.userExtensionsIgnoredSettings,\n\t\t\t])\n\t\t).flat();\n\t\treturn getIgnoredSettings(\n\t\t\tdefaultIgnoredSettings,\n\t\t\tthis.configurationService,\n\t\t\tcontent,\n\t\t);\n\t}\n\n\tprivate async getIgnoredSettingForSystemExtensions(): Promise<string[]> {\n\t\tconst systemExtensions =\n\t\t\tawait this.extensionManagementService.getInstalled(\n\t\t\t\tExtensionType.System,\n\t\t\t);\n\t\treturn distinct(\n\t\t\tsystemExtensions.flatMap((e) =>\n\t\t\t\tgetIgnoredSettingsForExtension(e.manifest),\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate async getIgnoredSettingForUserExtensions(): Promise<string[]> {\n\t\tconst userExtensions =\n\t\t\tawait this.extensionManagementService.getInstalled(\n\t\t\t\tExtensionType.User,\n\t\t\t\tthis.profile.extensionsResource,\n\t\t\t);\n\t\treturn distinct(\n\t\t\tuserExtensions.flatMap((e) =>\n\t\t\t\tgetIgnoredSettingsForExtension(e.manifest),\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate validateContent(content: string): void {\n\t\tif (this.hasErrors(content, false)) {\n\t\t\tthrow new UserDataSyncError(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"errorInvalidSettings\",\n\t\t\t\t\t\"Unable to sync settings as there are errors/warning in settings file.\",\n\t\t\t\t),\n\t\t\t\tUserDataSyncErrorCode.LocalInvalidContent,\n\t\t\t\tthis.resource,\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport class SettingsInitializer extends AbstractInitializer {\n\tconstructor(\n\t\t@IFileService fileService: IFileService,\n\t\t@IUserDataProfilesService userDataProfilesService: IUserDataProfilesService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(\n\t\t\tSyncResource.Settings,\n\t\t\tuserDataProfilesService,\n\t\t\tenvironmentService,\n\t\t\tlogService,\n\t\t\tfileService,\n\t\t\tstorageService,\n\t\t\turiIdentityService,\n\t\t);\n\t}\n\n\tprotected async doInitialize(\n\t\tremoteUserData: IRemoteUserData,\n\t): Promise<void> {\n\t\tconst settingsSyncContent = remoteUserData.syncData\n\t\t\t? this.parseSettingsSyncContent(remoteUserData.syncData.content)\n\t\t\t: null;\n\t\tif (!settingsSyncContent) {\n\t\t\tthis.logService.info(\n\t\t\t\t\"Skipping initializing settings because remote settings does not exist.\",\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tconst isEmpty = await this.isEmpty();\n\t\tif (!isEmpty) {\n\t\t\tthis.logService.info(\n\t\t\t\t\"Skipping initializing settings because local settings exist.\",\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.fileService.writeFile(\n\t\t\tthis.userDataProfilesService.defaultProfile.settingsResource,\n\t\t\tVSBuffer.fromString(settingsSyncContent.settings),\n\t\t);\n\n\t\tawait this.updateLastSyncUserData(remoteUserData);\n\t}\n\n\tprivate async isEmpty(): Promise<boolean> {\n\t\ttry {\n\t\t\tconst fileContent = await this.fileService.readFile(\n\t\t\t\tthis.userDataProfilesService.defaultProfile.settingsResource,\n\t\t\t);\n\t\t\treturn isEmpty(fileContent.value.toString().trim());\n\t\t} catch (error) {\n\t\t\treturn (\n\t\t\t\t(<FileOperationError>error).fileOperationResult ===\n\t\t\t\tFileOperationResult.FILE_NOT_FOUND\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate parseSettingsSyncContent(\n\t\tsyncContent: string,\n\t): ISettingsSyncContent | null {\n\t\ttry {\n\t\t\treturn parseSettingsSyncContent(syncContent);\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t}\n\t\treturn null;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["localContent", "isEmpty"]
}
