var P=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var u=(h,o,a,e)=>{for(var t=e>1?void 0:e?w(o,a):o,r=h.length-1,i;r>=0;r--)(i=h[r])&&(t=(e?i(o,a,t):i(t))||t);return e&&t&&P(o,a,t),t},c=(h,o)=>(a,e)=>o(a,e,h);import{Emitter as E}from"../../../../vs/base/common/event.js";import{Disposable as C}from"../../../../vs/base/common/lifecycle.js";import{isAndroid as U,isChrome as b,isEdge as x,isFirefox as R,isSafari as N,isWeb as O,Platform as f,platform as A,PlatformToString as D}from"../../../../vs/base/common/platform.js";import{escapeRegExpCharacters as $}from"../../../../vs/base/common/strings.js";import{localize as F}from"../../../../vs/nls.js";import{IEnvironmentService as L}from"../../../../vs/platform/environment/common/environment.js";import{getServiceMachineId as T}from"../../../../vs/platform/externalServices/common/serviceMachineId.js";import{IFileService as W}from"../../../../vs/platform/files/common/files.js";import{createDecorator as V}from"../../../../vs/platform/instantiation/common/instantiation.js";import{IProductService as B}from"../../../../vs/platform/product/common/productService.js";import{IStorageService as J,StorageScope as I,StorageTarget as z}from"../../../../vs/platform/storage/common/storage.js";import{IUserDataSyncLogService as H,IUserDataSyncStoreService as K}from"../../../../vs/platform/userDataSync/common/userDataSync.js";const oe=V("IUserDataSyncMachinesService"),p="sync.currentMachineName",v="Safari",l="Chrome",M="Edge",S="Firefox",g="Android";function ce(h){switch(h){case v:case l:case M:case S:case g:case D(f.Web):return!0}return!1}function y(){return N?v:b?l:x?M:R?S:U?g:D(O?f.Web:A)}let n=class extends C{constructor(a,e,t,r,i,s){super();this.storageService=t;this.userDataSyncStoreService=r;this.logService=i;this.productService=s;this.currentMachineIdPromise=T(a,e,t)}static VERSION=1;static RESOURCE="machines";_serviceBrand;_onDidChange=this._register(new E);onDidChange=this._onDidChange.event;currentMachineIdPromise;userData=null;async getMachines(a){const e=await this.currentMachineIdPromise;return(await this.readMachinesData(a)).machines.map(r=>({...r,isCurrent:r.id===e}))}async addCurrentMachine(a){const e=await this.currentMachineIdPromise,t=await this.readMachinesData(a);t.machines.some(({id:r})=>r===e)||(t.machines.push({id:e,name:this.computeCurrentMachineName(t.machines),platform:y()}),await this.writeMachinesData(t))}async removeCurrentMachine(a){const e=await this.currentMachineIdPromise,t=await this.readMachinesData(a),r=t.machines.filter(({id:i})=>i!==e);r.length!==t.machines.length&&(t.machines=r,await this.writeMachinesData(t))}async renameMachine(a,e,t){const r=await this.readMachinesData(t),i=r.machines.find(({id:s})=>s===a);if(i){i.name=e,await this.writeMachinesData(r);const s=await this.currentMachineIdPromise;a===s&&this.storageService.store(p,e,I.APPLICATION,z.MACHINE)}}async setEnablements(a){const e=await this.readMachinesData();for(const[t,r]of a){const i=e.machines.find(s=>s.id===t);i&&(i.disabled=r?void 0:!0)}await this.writeMachinesData(e)}computeCurrentMachineName(a){const e=this.storageService.get(p,I.APPLICATION);if(e)return e;const t=`${this.productService.embedderIdentifier?`${this.productService.embedderIdentifier} - `:""}${y()} (${this.productService.nameShort})`,r=new RegExp(`${$(t)}\\s#(\\d+)`);let i=0;for(const s of a){const m=r.exec(s.name),d=m?parseInt(m[1]):0;i=d>i?d:i}return`${t} #${i+1}`}async readMachinesData(a){this.userData=await this.readUserData(a);const e=this.parse(this.userData);if(e.version!==n.VERSION)throw new Error(F("error incompatible","Cannot read machines data as the current version is incompatible. Please update {0} and try again.",this.productService.nameLong));return e}async writeMachinesData(a){const e=JSON.stringify(a),t=await this.userDataSyncStoreService.writeResource(n.RESOURCE,e,this.userData?.ref||null);this.userData={ref:t,content:e},this._onDidChange.fire()}async readUserData(a){if(this.userData){const e=a&&a.latest?a.latest[n.RESOURCE]:void 0;if(this.userData.ref===e)return this.userData;if(e===void 0&&this.userData.content===null)return this.userData}return this.userDataSyncStoreService.readResource(n.RESOURCE,this.userData)}parse(a){if(a.content!==null)try{return JSON.parse(a.content)}catch(e){this.logService.error(e)}return{version:n.VERSION,machines:[]}}};n=u([c(0,L),c(1,W),c(2,J),c(3,K),c(4,H),c(5,B)],n);export{oe as IUserDataSyncMachinesService,n as UserDataSyncMachinesService,ce as isWebPlatform};
