{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/userDataSync/common/extensionsSync.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Promises } from \"../../../base/common/async.js\";\nimport { CancellationToken } from \"../../../base/common/cancellation.js\";\nimport type { IStringDictionary } from \"../../../base/common/collections.js\";\nimport { getErrorMessage } from \"../../../base/common/errors.js\";\nimport { Event } from \"../../../base/common/event.js\";\nimport { toFormattedString } from \"../../../base/common/jsonFormatter.js\";\nimport { DisposableStore } from \"../../../base/common/lifecycle.js\";\nimport { compare } from \"../../../base/common/strings.js\";\nimport type { URI } from \"../../../base/common/uri.js\";\nimport { IConfigurationService } from \"../../configuration/common/configuration.js\";\nimport { IEnvironmentService } from \"../../environment/common/environment.js\";\nimport { GlobalExtensionEnablementService } from \"../../extensionManagement/common/extensionEnablementService.js\";\nimport {\n\tDISABLED_EXTENSIONS_STORAGE_PATH,\n\tEXTENSION_INSTALL_SKIP_WALKTHROUGH_CONTEXT,\n\tEXTENSION_INSTALL_SOURCE_CONTEXT,\n\tExtensionInstallSource,\n\tExtensionManagementError,\n\tExtensionManagementErrorCode,\n\tIExtensionGalleryService,\n\tIExtensionManagementService,\n\ttype IGalleryExtension,\n\ttype IGlobalExtensionEnablementService,\n\ttype ILocalExtension,\n\ttype InstallExtensionInfo,\n} from \"../../extensionManagement/common/extensionManagement.js\";\nimport { areSameExtensions } from \"../../extensionManagement/common/extensionManagementUtil.js\";\nimport {\n\tExtensionStorageService,\n\tIExtensionStorageService,\n} from \"../../extensionManagement/common/extensionStorage.js\";\nimport {\n\tExtensionType,\n\ttype IExtensionIdentifier,\n\tisApplicationScopedExtension,\n} from \"../../extensions/common/extensions.js\";\nimport { IFileService } from \"../../files/common/files.js\";\nimport { IInstantiationService } from \"../../instantiation/common/instantiation.js\";\nimport { ServiceCollection } from \"../../instantiation/common/serviceCollection.js\";\nimport { ILogService } from \"../../log/common/log.js\";\nimport { IStorageService } from \"../../storage/common/storage.js\";\nimport { ITelemetryService } from \"../../telemetry/common/telemetry.js\";\nimport { IUriIdentityService } from \"../../uriIdentity/common/uriIdentity.js\";\nimport {\n\ttype IUserDataProfile,\n\tIUserDataProfilesService,\n} from \"../../userDataProfile/common/userDataProfile.js\";\nimport { IUserDataProfileStorageService } from \"../../userDataProfile/common/userDataProfileStorageService.js\";\nimport {\n\tAbstractInitializer,\n\tAbstractSynchroniser,\n\ttype IAcceptResult,\n\ttype IMergeResult,\n\ttype IResourcePreview,\n\tgetSyncResourceLogLabel,\n} from \"./abstractSynchronizer.js\";\nimport {\n\ttype IMergeResult as IExtensionMergeResult,\n\tmerge,\n} from \"./extensionsMerge.js\";\nimport { IIgnoredExtensionsManagementService } from \"./ignoredExtensions.js\";\nimport {\n\tChange,\n\ttype ILocalSyncExtension,\n\ttype IRemoteUserData,\n\ttype ISyncData,\n\ttype ISyncExtension,\n\tIUserDataSyncEnablementService,\n\tIUserDataSyncLocalStoreService,\n\tIUserDataSyncLogService,\n\tIUserDataSyncStoreService,\n\ttype IUserDataSynchroniser,\n\tSyncResource,\n\tUSER_DATA_SYNC_SCHEME,\n} from \"./userDataSync.js\";\n\ntype IExtensionResourceMergeResult = IAcceptResult & IExtensionMergeResult;\n\ninterface IExtensionResourcePreview extends IResourcePreview {\n\treadonly localExtensions: ILocalSyncExtension[];\n\treadonly remoteExtensions: ISyncExtension[] | null;\n\treadonly skippedExtensions: ISyncExtension[];\n\treadonly builtinExtensions: IExtensionIdentifier[] | null;\n\treadonly previewResult: IExtensionResourceMergeResult;\n}\n\ninterface ILastSyncUserData extends IRemoteUserData {\n\tskippedExtensions: ISyncExtension[] | undefined;\n\tbuiltinExtensions: IExtensionIdentifier[] | undefined;\n}\n\nasync function parseAndMigrateExtensions(\n\tsyncData: ISyncData,\n\textensionManagementService: IExtensionManagementService,\n): Promise<ISyncExtension[]> {\n\tconst extensions = JSON.parse(syncData.content);\n\tif (syncData.version === 1 || syncData.version === 2) {\n\t\tconst builtinExtensions = (\n\t\t\tawait extensionManagementService.getInstalled(ExtensionType.System)\n\t\t).filter((e) => e.isBuiltin);\n\t\tfor (const extension of extensions) {\n\t\t\t// #region Migration from v1 (enabled -> disabled)\n\t\t\tif (syncData.version === 1) {\n\t\t\t\tif ((<any>extension).enabled === false) {\n\t\t\t\t\textension.disabled = true;\n\t\t\t\t}\n\t\t\t\tdelete (<any>extension).enabled;\n\t\t\t}\n\t\t\t// #endregion\n\n\t\t\t// #region Migration from v2 (set installed property on extension)\n\t\t\tif (syncData.version === 2) {\n\t\t\t\tif (\n\t\t\t\t\tbuiltinExtensions.every(\n\t\t\t\t\t\t(installed) =>\n\t\t\t\t\t\t\t!areSameExtensions(\n\t\t\t\t\t\t\t\tinstalled.identifier,\n\t\t\t\t\t\t\t\textension.identifier,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\textension.installed = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// #endregion\n\t\t}\n\t}\n\treturn extensions;\n}\n\nexport function parseExtensions(syncData: ISyncData): ISyncExtension[] {\n\treturn JSON.parse(syncData.content);\n}\n\nexport function stringify(\n\textensions: ISyncExtension[],\n\tformat: boolean,\n): string {\n\textensions.sort((e1, e2) => {\n\t\tif (!e1.identifier.uuid && e2.identifier.uuid) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (e1.identifier.uuid && !e2.identifier.uuid) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn compare(e1.identifier.id, e2.identifier.id);\n\t});\n\treturn format\n\t\t? toFormattedString(extensions, {})\n\t\t: JSON.stringify(extensions);\n}\n\nexport class ExtensionsSynchroniser\n\textends AbstractSynchroniser\n\timplements IUserDataSynchroniser\n{\n\t/*\n\t\tVersion 3 - Introduce installed property to skip installing built in extensions\n\t\tprotected readonly version: number = 3;\n\t*/\n\t/* Version 4: Change settings from `sync.${setting}` to `settingsSync.{setting}` */\n\t/* Version 5: Introduce extension state */\n\t/* Version 6: Added isApplicationScoped property */\n\tprotected readonly version: number = 6;\n\n\tprivate readonly previewResource: URI = this.extUri.joinPath(\n\t\tthis.syncPreviewFolder,\n\t\t\"extensions.json\",\n\t);\n\tprivate readonly baseResource: URI = this.previewResource.with({\n\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\tauthority: \"base\",\n\t});\n\tprivate readonly localResource: URI = this.previewResource.with({\n\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\tauthority: \"local\",\n\t});\n\tprivate readonly remoteResource: URI = this.previewResource.with({\n\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\tauthority: \"remote\",\n\t});\n\tprivate readonly acceptedResource: URI = this.previewResource.with({\n\t\tscheme: USER_DATA_SYNC_SCHEME,\n\t\tauthority: \"accepted\",\n\t});\n\n\tprivate readonly localExtensionsProvider: LocalExtensionsProvider;\n\n\tconstructor(\n\t\t// profileLocation changes for default profile\n\t\tprofile: IUserDataProfile,\n\t\tcollection: string | undefined,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IUserDataSyncStoreService userDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncLocalStoreService userDataSyncLocalStoreService: IUserDataSyncLocalStoreService,\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IIgnoredExtensionsManagementService private readonly ignoredExtensionsManagementService: IIgnoredExtensionsManagementService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IUserDataSyncEnablementService userDataSyncEnablementService: IUserDataSyncEnablementService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IExtensionStorageService extensionStorageService: IExtensionStorageService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t\t@IUserDataProfileStorageService userDataProfileStorageService: IUserDataProfileStorageService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper({ syncResource: SyncResource.Extensions, profile }, collection, fileService, environmentService, storageService, userDataSyncStoreService, userDataSyncLocalStoreService, userDataSyncEnablementService, telemetryService, logService, configurationService, uriIdentityService);\n\t\tthis.localExtensionsProvider = this.instantiationService.createInstance(LocalExtensionsProvider);\n\t\tthis._register(\n\t\t\tEvent.any<any>(\n\t\t\t\tEvent.filter(this.extensionManagementService.onDidInstallExtensions, (e => e.some(({ local }) => !!local))),\n\t\t\t\tEvent.filter(this.extensionManagementService.onDidUninstallExtension, (e => !e.error)),\n\t\t\t\tEvent.filter(userDataProfileStorageService.onDidChange, e => e.valueChanges.some(({ profile, changes }) => this.syncResource.profile.id === profile.id && changes.some(change => change.key === DISABLED_EXTENSIONS_STORAGE_PATH))),\n\t\t\t\textensionStorageService.onDidChangeExtensionStorageToSync)(() => this.triggerLocalChange()));\n\t}\n\n\tprotected async generateSyncPreview(\n\t\tremoteUserData: IRemoteUserData,\n\t\tlastSyncUserData: ILastSyncUserData | null,\n\t): Promise<IExtensionResourcePreview[]> {\n\t\tconst remoteExtensions = remoteUserData.syncData\n\t\t\t? await parseAndMigrateExtensions(\n\t\t\t\t\tremoteUserData.syncData,\n\t\t\t\t\tthis.extensionManagementService,\n\t\t\t\t)\n\t\t\t: null;\n\t\tconst skippedExtensions = lastSyncUserData?.skippedExtensions ?? [];\n\t\tconst builtinExtensions = lastSyncUserData?.builtinExtensions ?? null;\n\t\tconst lastSyncExtensions = lastSyncUserData?.syncData\n\t\t\t? await parseAndMigrateExtensions(\n\t\t\t\t\tlastSyncUserData.syncData,\n\t\t\t\t\tthis.extensionManagementService,\n\t\t\t\t)\n\t\t\t: null;\n\n\t\tconst { localExtensions, ignoredExtensions } =\n\t\t\tawait this.localExtensionsProvider.getLocalExtensions(\n\t\t\t\tthis.syncResource.profile,\n\t\t\t);\n\n\t\tif (remoteExtensions) {\n\t\t\tthis.logService.trace(\n\t\t\t\t`${this.syncResourceLogLabel}: Merging remote extensions with local extensions...`,\n\t\t\t);\n\t\t} else {\n\t\t\tthis.logService.trace(\n\t\t\t\t`${this.syncResourceLogLabel}: Remote extensions does not exist. Synchronizing extensions for the first time.`,\n\t\t\t);\n\t\t}\n\n\t\tconst { local, remote } = merge(\n\t\t\tlocalExtensions,\n\t\t\tremoteExtensions,\n\t\t\tlastSyncExtensions,\n\t\t\tskippedExtensions,\n\t\t\tignoredExtensions,\n\t\t\tbuiltinExtensions,\n\t\t);\n\t\tconst previewResult: IExtensionResourceMergeResult = {\n\t\t\tlocal,\n\t\t\tremote,\n\t\t\tcontent: this.getPreviewContent(\n\t\t\t\tlocalExtensions,\n\t\t\t\tlocal.added,\n\t\t\t\tlocal.updated,\n\t\t\t\tlocal.removed,\n\t\t\t),\n\t\t\tlocalChange:\n\t\t\t\tlocal.added.length > 0 ||\n\t\t\t\tlocal.removed.length > 0 ||\n\t\t\t\tlocal.updated.length > 0\n\t\t\t\t\t? Change.Modified\n\t\t\t\t\t: Change.None,\n\t\t\tremoteChange: remote !== null ? Change.Modified : Change.None,\n\t\t};\n\n\t\tconst localContent = this.stringify(localExtensions, false);\n\t\treturn [\n\t\t\t{\n\t\t\t\tskippedExtensions,\n\t\t\t\tbuiltinExtensions,\n\t\t\t\tbaseResource: this.baseResource,\n\t\t\t\tbaseContent: lastSyncExtensions\n\t\t\t\t\t? this.stringify(lastSyncExtensions, false)\n\t\t\t\t\t: localContent,\n\t\t\t\tlocalResource: this.localResource,\n\t\t\t\tlocalContent,\n\t\t\t\tlocalExtensions,\n\t\t\t\tremoteResource: this.remoteResource,\n\t\t\t\tremoteExtensions,\n\t\t\t\tremoteContent: remoteExtensions\n\t\t\t\t\t? this.stringify(remoteExtensions, false)\n\t\t\t\t\t: null,\n\t\t\t\tpreviewResource: this.previewResource,\n\t\t\t\tpreviewResult,\n\t\t\t\tlocalChange: previewResult.localChange,\n\t\t\t\tremoteChange: previewResult.remoteChange,\n\t\t\t\tacceptedResource: this.acceptedResource,\n\t\t\t},\n\t\t];\n\t}\n\n\tprotected async hasRemoteChanged(\n\t\tlastSyncUserData: ILastSyncUserData,\n\t): Promise<boolean> {\n\t\tconst lastSyncExtensions: ISyncExtension[] | null =\n\t\t\tlastSyncUserData.syncData\n\t\t\t\t? await parseAndMigrateExtensions(\n\t\t\t\t\t\tlastSyncUserData.syncData,\n\t\t\t\t\t\tthis.extensionManagementService,\n\t\t\t\t\t)\n\t\t\t\t: null;\n\t\tconst { localExtensions, ignoredExtensions } =\n\t\t\tawait this.localExtensionsProvider.getLocalExtensions(\n\t\t\t\tthis.syncResource.profile,\n\t\t\t);\n\t\tconst { remote } = merge(\n\t\t\tlocalExtensions,\n\t\t\tlastSyncExtensions,\n\t\t\tlastSyncExtensions,\n\t\t\tlastSyncUserData.skippedExtensions || [],\n\t\t\tignoredExtensions,\n\t\t\tlastSyncUserData.builtinExtensions || [],\n\t\t);\n\t\treturn remote !== null;\n\t}\n\n\tprivate getPreviewContent(\n\t\tlocalExtensions: ISyncExtension[],\n\t\tadded: ISyncExtension[],\n\t\tupdated: ISyncExtension[],\n\t\tremoved: IExtensionIdentifier[],\n\t): string {\n\t\tconst preview: ISyncExtension[] = [...added, ...updated];\n\n\t\tconst idsOrUUIDs: Set<string> = new Set<string>();\n\t\tconst addIdentifier = (identifier: IExtensionIdentifier) => {\n\t\t\tidsOrUUIDs.add(identifier.id.toLowerCase());\n\t\t\tif (identifier.uuid) {\n\t\t\t\tidsOrUUIDs.add(identifier.uuid);\n\t\t\t}\n\t\t};\n\t\tpreview.forEach(({ identifier }) => addIdentifier(identifier));\n\t\tremoved.forEach(addIdentifier);\n\n\t\tfor (const localExtension of localExtensions) {\n\t\t\tif (\n\t\t\t\tidsOrUUIDs.has(localExtension.identifier.id.toLowerCase()) ||\n\t\t\t\t(localExtension.identifier.uuid &&\n\t\t\t\t\tidsOrUUIDs.has(localExtension.identifier.uuid))\n\t\t\t) {\n\t\t\t\t// skip\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tpreview.push(localExtension);\n\t\t}\n\n\t\treturn this.stringify(preview, false);\n\t}\n\n\tprotected async getMergeResult(\n\t\tresourcePreview: IExtensionResourcePreview,\n\t\ttoken: CancellationToken,\n\t): Promise<IMergeResult> {\n\t\treturn { ...resourcePreview.previewResult, hasConflicts: false };\n\t}\n\n\tprotected async getAcceptResult(\n\t\tresourcePreview: IExtensionResourcePreview,\n\t\tresource: URI,\n\t\tcontent: string | null | undefined,\n\t\ttoken: CancellationToken,\n\t): Promise<IExtensionResourceMergeResult> {\n\t\t/* Accept local resource */\n\t\tif (this.extUri.isEqual(resource, this.localResource)) {\n\t\t\treturn this.acceptLocal(resourcePreview);\n\t\t}\n\n\t\t/* Accept remote resource */\n\t\tif (this.extUri.isEqual(resource, this.remoteResource)) {\n\t\t\treturn this.acceptRemote(resourcePreview);\n\t\t}\n\n\t\t/* Accept preview resource */\n\t\tif (this.extUri.isEqual(resource, this.previewResource)) {\n\t\t\treturn resourcePreview.previewResult;\n\t\t}\n\n\t\tthrow new Error(`Invalid Resource: ${resource.toString()}`);\n\t}\n\n\tprivate async acceptLocal(\n\t\tresourcePreview: IExtensionResourcePreview,\n\t): Promise<IExtensionResourceMergeResult> {\n\t\tconst installedExtensions =\n\t\t\tawait this.extensionManagementService.getInstalled(\n\t\t\t\tundefined,\n\t\t\t\tthis.syncResource.profile.extensionsResource,\n\t\t\t);\n\t\tconst ignoredExtensions =\n\t\t\tthis.ignoredExtensionsManagementService.getIgnoredExtensions(\n\t\t\t\tinstalledExtensions,\n\t\t\t);\n\t\tconst mergeResult = merge(\n\t\t\tresourcePreview.localExtensions,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tresourcePreview.skippedExtensions,\n\t\t\tignoredExtensions,\n\t\t\tresourcePreview.builtinExtensions,\n\t\t);\n\t\tconst { local, remote } = mergeResult;\n\t\treturn {\n\t\t\tcontent: resourcePreview.localContent,\n\t\t\tlocal,\n\t\t\tremote,\n\t\t\tlocalChange:\n\t\t\t\tlocal.added.length > 0 ||\n\t\t\t\tlocal.removed.length > 0 ||\n\t\t\t\tlocal.updated.length > 0\n\t\t\t\t\t? Change.Modified\n\t\t\t\t\t: Change.None,\n\t\t\tremoteChange: remote !== null ? Change.Modified : Change.None,\n\t\t};\n\t}\n\n\tprivate async acceptRemote(\n\t\tresourcePreview: IExtensionResourcePreview,\n\t): Promise<IExtensionResourceMergeResult> {\n\t\tconst installedExtensions =\n\t\t\tawait this.extensionManagementService.getInstalled(\n\t\t\t\tundefined,\n\t\t\t\tthis.syncResource.profile.extensionsResource,\n\t\t\t);\n\t\tconst ignoredExtensions =\n\t\t\tthis.ignoredExtensionsManagementService.getIgnoredExtensions(\n\t\t\t\tinstalledExtensions,\n\t\t\t);\n\t\tconst remoteExtensions = resourcePreview.remoteContent\n\t\t\t? JSON.parse(resourcePreview.remoteContent)\n\t\t\t: null;\n\t\tif (remoteExtensions !== null) {\n\t\t\tconst mergeResult = merge(\n\t\t\t\tresourcePreview.localExtensions,\n\t\t\t\tremoteExtensions,\n\t\t\t\tresourcePreview.localExtensions,\n\t\t\t\t[],\n\t\t\t\tignoredExtensions,\n\t\t\t\tresourcePreview.builtinExtensions,\n\t\t\t);\n\t\t\tconst { local, remote } = mergeResult;\n\t\t\treturn {\n\t\t\t\tcontent: resourcePreview.remoteContent,\n\t\t\t\tlocal,\n\t\t\t\tremote,\n\t\t\t\tlocalChange:\n\t\t\t\t\tlocal.added.length > 0 ||\n\t\t\t\t\tlocal.removed.length > 0 ||\n\t\t\t\t\tlocal.updated.length > 0\n\t\t\t\t\t\t? Change.Modified\n\t\t\t\t\t\t: Change.None,\n\t\t\t\tremoteChange: remote !== null ? Change.Modified : Change.None,\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tcontent: resourcePreview.remoteContent,\n\t\t\t\tlocal: { added: [], removed: [], updated: [] },\n\t\t\t\tremote: null,\n\t\t\t\tlocalChange: Change.None,\n\t\t\t\tremoteChange: Change.None,\n\t\t\t};\n\t\t}\n\t}\n\n\tprotected async applyResult(\n\t\tremoteUserData: IRemoteUserData,\n\t\tlastSyncUserData: IRemoteUserData | null,\n\t\tresourcePreviews: [\n\t\t\tIExtensionResourcePreview,\n\t\t\tIExtensionResourceMergeResult,\n\t\t][],\n\t\tforce: boolean,\n\t): Promise<void> {\n\t\tlet { skippedExtensions, builtinExtensions, localExtensions } =\n\t\t\tresourcePreviews[0][0];\n\t\tconst { local, remote, localChange, remoteChange } =\n\t\t\tresourcePreviews[0][1];\n\n\t\tif (localChange === Change.None && remoteChange === Change.None) {\n\t\t\tthis.logService.info(\n\t\t\t\t`${this.syncResourceLogLabel}: No changes found during synchronizing extensions.`,\n\t\t\t);\n\t\t}\n\n\t\tif (localChange !== Change.None) {\n\t\t\tawait this.backupLocal(JSON.stringify(localExtensions));\n\t\t\tskippedExtensions =\n\t\t\t\tawait this.localExtensionsProvider.updateLocalExtensions(\n\t\t\t\t\tlocal.added,\n\t\t\t\t\tlocal.removed,\n\t\t\t\t\tlocal.updated,\n\t\t\t\t\tskippedExtensions,\n\t\t\t\t\tthis.syncResource.profile,\n\t\t\t\t);\n\t\t}\n\n\t\tif (remote) {\n\t\t\t// update remote\n\t\t\tthis.logService.trace(\n\t\t\t\t`${this.syncResourceLogLabel}: Updating remote extensions...`,\n\t\t\t);\n\t\t\tconst content = JSON.stringify(remote.all);\n\t\t\tremoteUserData = await this.updateRemoteUserData(\n\t\t\t\tcontent,\n\t\t\t\tforce ? null : remoteUserData.ref,\n\t\t\t);\n\t\t\tthis.logService.info(\n\t\t\t\t`${this.syncResourceLogLabel}: Updated remote extensions.${remote.added.length ? ` Added: ${JSON.stringify(remote.added.map((e) => e.identifier.id))}.` : \"\"}${remote.updated.length ? ` Updated: ${JSON.stringify(remote.updated.map((e) => e.identifier.id))}.` : \"\"}${remote.removed.length ? ` Removed: ${JSON.stringify(remote.removed.map((e) => e.identifier.id))}.` : \"\"}`,\n\t\t\t);\n\t\t}\n\n\t\tif (lastSyncUserData?.ref !== remoteUserData.ref) {\n\t\t\t// update last sync\n\t\t\tthis.logService.trace(\n\t\t\t\t`${this.syncResourceLogLabel}: Updating last synchronized extensions...`,\n\t\t\t);\n\t\t\tbuiltinExtensions = this.computeBuiltinExtensions(\n\t\t\t\tlocalExtensions,\n\t\t\t\tbuiltinExtensions,\n\t\t\t);\n\t\t\tawait this.updateLastSyncUserData(remoteUserData, {\n\t\t\t\tskippedExtensions,\n\t\t\t\tbuiltinExtensions,\n\t\t\t});\n\t\t\tthis.logService.info(\n\t\t\t\t`${this.syncResourceLogLabel}: Updated last synchronized extensions.${skippedExtensions.length ? ` Skipped: ${JSON.stringify(skippedExtensions.map((e) => e.identifier.id))}.` : \"\"}`,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate computeBuiltinExtensions(\n\t\tlocalExtensions: ILocalSyncExtension[],\n\t\tpreviousBuiltinExtensions: IExtensionIdentifier[] | null,\n\t): IExtensionIdentifier[] {\n\t\tconst localExtensionsSet = new Set<string>();\n\t\tconst builtinExtensions: IExtensionIdentifier[] = [];\n\t\tfor (const localExtension of localExtensions) {\n\t\t\tlocalExtensionsSet.add(localExtension.identifier.id.toLowerCase());\n\t\t\tif (!localExtension.installed) {\n\t\t\t\tbuiltinExtensions.push(localExtension.identifier);\n\t\t\t}\n\t\t}\n\t\tif (previousBuiltinExtensions) {\n\t\t\tfor (const builtinExtension of previousBuiltinExtensions) {\n\t\t\t\t// Add previous builtin extension if it does not exist in local extensions\n\t\t\t\tif (\n\t\t\t\t\t!localExtensionsSet.has(builtinExtension.id.toLowerCase())\n\t\t\t\t) {\n\t\t\t\t\tbuiltinExtensions.push(builtinExtension);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn builtinExtensions;\n\t}\n\n\tasync resolveContent(uri: URI): Promise<string | null> {\n\t\tif (\n\t\t\tthis.extUri.isEqual(this.remoteResource, uri) ||\n\t\t\tthis.extUri.isEqual(this.baseResource, uri) ||\n\t\t\tthis.extUri.isEqual(this.localResource, uri) ||\n\t\t\tthis.extUri.isEqual(this.acceptedResource, uri)\n\t\t) {\n\t\t\tconst content = await this.resolvePreviewContent(uri);\n\t\t\treturn content\n\t\t\t\t? this.stringify(JSON.parse(content), true)\n\t\t\t\t: content;\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate stringify(extensions: ISyncExtension[], format: boolean): string {\n\t\treturn stringify(extensions, format);\n\t}\n\n\tasync hasLocalData(): Promise<boolean> {\n\t\ttry {\n\t\t\tconst { localExtensions } =\n\t\t\t\tawait this.localExtensionsProvider.getLocalExtensions(\n\t\t\t\t\tthis.syncResource.profile,\n\t\t\t\t);\n\t\t\tif (localExtensions.some((e) => e.installed || e.disabled)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t/* ignore error */\n\t\t}\n\t\treturn false;\n\t}\n}\n\nexport class LocalExtensionsProvider {\n\tconstructor(\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IUserDataProfileStorageService private readonly userDataProfileStorageService: IUserDataProfileStorageService,\n\t\t@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService,\n\t\t@IIgnoredExtensionsManagementService private readonly ignoredExtensionsManagementService: IIgnoredExtensionsManagementService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IUserDataSyncLogService private readonly logService: IUserDataSyncLogService,\n\t) { }\n\n\tasync getLocalExtensions(\n\t\tprofile: IUserDataProfile,\n\t): Promise<{\n\t\tlocalExtensions: ILocalSyncExtension[];\n\t\tignoredExtensions: string[];\n\t}> {\n\t\tconst installedExtensions =\n\t\t\tawait this.extensionManagementService.getInstalled(\n\t\t\t\tundefined,\n\t\t\t\tprofile.extensionsResource,\n\t\t\t);\n\t\tconst ignoredExtensions =\n\t\t\tthis.ignoredExtensionsManagementService.getIgnoredExtensions(\n\t\t\t\tinstalledExtensions,\n\t\t\t);\n\t\tconst localExtensions = await this.withProfileScopedServices(\n\t\t\tprofile,\n\t\t\tasync (extensionEnablementService, extensionStorageService) => {\n\t\t\t\tconst disabledExtensions =\n\t\t\t\t\textensionEnablementService.getDisabledExtensions();\n\t\t\t\treturn installedExtensions.map((extension) => {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tidentifier,\n\t\t\t\t\t\tisBuiltin,\n\t\t\t\t\t\tmanifest,\n\t\t\t\t\t\tpreRelease,\n\t\t\t\t\t\tpinned,\n\t\t\t\t\t\tisApplicationScoped,\n\t\t\t\t\t} = extension;\n\t\t\t\t\tconst syncExntesion: ILocalSyncExtension = {\n\t\t\t\t\t\tidentifier,\n\t\t\t\t\t\tpreRelease,\n\t\t\t\t\t\tversion: manifest.version,\n\t\t\t\t\t\tpinned: !!pinned,\n\t\t\t\t\t};\n\t\t\t\t\tif (\n\t\t\t\t\t\tisApplicationScoped &&\n\t\t\t\t\t\t!isApplicationScopedExtension(manifest)\n\t\t\t\t\t) {\n\t\t\t\t\t\tsyncExntesion.isApplicationScoped = isApplicationScoped;\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\tdisabledExtensions.some((disabledExtension) =>\n\t\t\t\t\t\t\tareSameExtensions(disabledExtension, identifier),\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tsyncExntesion.disabled = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!isBuiltin) {\n\t\t\t\t\t\tsyncExntesion.installed = true;\n\t\t\t\t\t}\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst keys = extensionStorageService.getKeysForSync({\n\t\t\t\t\t\t\tid: identifier.id,\n\t\t\t\t\t\t\tversion: manifest.version,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (keys) {\n\t\t\t\t\t\t\tconst extensionStorageState =\n\t\t\t\t\t\t\t\textensionStorageService.getExtensionState(\n\t\t\t\t\t\t\t\t\textension,\n\t\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\t) || {};\n\t\t\t\t\t\t\tsyncExntesion.state = Object.keys(\n\t\t\t\t\t\t\t\textensionStorageState,\n\t\t\t\t\t\t\t).reduce((state: IStringDictionary<any>, key) => {\n\t\t\t\t\t\t\t\tif (keys.includes(key)) {\n\t\t\t\t\t\t\t\t\tstate[key] = extensionStorageState[key];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn state;\n\t\t\t\t\t\t\t}, {});\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t\t`${getSyncResourceLogLabel(SyncResource.Extensions, profile)}: Error while parsing extension state`,\n\t\t\t\t\t\t\tgetErrorMessage(error),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn syncExntesion;\n\t\t\t\t});\n\t\t\t},\n\t\t);\n\t\treturn { localExtensions, ignoredExtensions };\n\t}\n\n\tasync updateLocalExtensions(\n\t\tadded: ISyncExtension[],\n\t\tremoved: IExtensionIdentifier[],\n\t\tupdated: ISyncExtension[],\n\t\tskippedExtensions: ISyncExtension[],\n\t\tprofile: IUserDataProfile,\n\t): Promise<ISyncExtension[]> {\n\t\tconst syncResourceLogLabel = getSyncResourceLogLabel(\n\t\t\tSyncResource.Extensions,\n\t\t\tprofile,\n\t\t);\n\t\tconst extensionsToInstall: InstallExtensionInfo[] = [];\n\t\tconst syncExtensionsToInstall = new Map<string, ISyncExtension>();\n\t\tconst removeFromSkipped: IExtensionIdentifier[] = [];\n\t\tconst addToSkipped: ISyncExtension[] = [];\n\t\tconst installedExtensions =\n\t\t\tawait this.extensionManagementService.getInstalled(\n\t\t\t\tundefined,\n\t\t\t\tprofile.extensionsResource,\n\t\t\t);\n\n\t\t// 1. Sync extensions state first so that the storage is flushed and updated in all opened windows\n\t\tif (added.length || updated.length) {\n\t\t\tawait this.withProfileScopedServices(\n\t\t\t\tprofile,\n\t\t\t\tasync (extensionEnablementService, extensionStorageService) => {\n\t\t\t\t\tawait Promises.settled(\n\t\t\t\t\t\t[...added, ...updated].map(async (e) => {\n\t\t\t\t\t\t\tconst installedExtension = installedExtensions.find(\n\t\t\t\t\t\t\t\t(installed) =>\n\t\t\t\t\t\t\t\t\tareSameExtensions(\n\t\t\t\t\t\t\t\t\t\tinstalled.identifier,\n\t\t\t\t\t\t\t\t\t\te.identifier,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Builtin Extension Sync: Enablement & State\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tinstalledExtension &&\n\t\t\t\t\t\t\t\tinstalledExtension.isBuiltin\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\te.state &&\n\t\t\t\t\t\t\t\t\tinstalledExtension.manifest.version ===\n\t\t\t\t\t\t\t\t\t\te.version\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tthis.updateExtensionState(\n\t\t\t\t\t\t\t\t\t\te.state,\n\t\t\t\t\t\t\t\t\t\tinstalledExtension,\n\t\t\t\t\t\t\t\t\t\tinstalledExtension.manifest.version,\n\t\t\t\t\t\t\t\t\t\textensionStorageService,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tconst isDisabled = extensionEnablementService\n\t\t\t\t\t\t\t\t\t.getDisabledExtensions()\n\t\t\t\t\t\t\t\t\t.some((disabledExtension) =>\n\t\t\t\t\t\t\t\t\t\tareSameExtensions(\n\t\t\t\t\t\t\t\t\t\t\tdisabledExtension,\n\t\t\t\t\t\t\t\t\t\t\te.identifier,\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (isDisabled !== !!e.disabled) {\n\t\t\t\t\t\t\t\t\tif (e.disabled) {\n\t\t\t\t\t\t\t\t\t\tthis.logService.trace(\n\t\t\t\t\t\t\t\t\t\t\t`${syncResourceLogLabel}: Disabling extension...`,\n\t\t\t\t\t\t\t\t\t\t\te.identifier.id,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tawait extensionEnablementService.disableExtension(\n\t\t\t\t\t\t\t\t\t\t\te.identifier,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t\t\t\t\t\t`${syncResourceLogLabel}: Disabled extension`,\n\t\t\t\t\t\t\t\t\t\t\te.identifier.id,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tthis.logService.trace(\n\t\t\t\t\t\t\t\t\t\t\t`${syncResourceLogLabel}: Enabling extension...`,\n\t\t\t\t\t\t\t\t\t\t\te.identifier.id,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tawait extensionEnablementService.enableExtension(\n\t\t\t\t\t\t\t\t\t\t\te.identifier,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t\t\t\t\t\t`${syncResourceLogLabel}: Enabled extension`,\n\t\t\t\t\t\t\t\t\t\t\te.identifier.id,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tremoveFromSkipped.push(e.identifier);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// User Extension Sync: Install/Update, Enablement & State\n\t\t\t\t\t\t\tconst version = e.pinned ? e.version : undefined;\n\t\t\t\t\t\t\tconst extension = (\n\t\t\t\t\t\t\t\tawait this.extensionGalleryService.getExtensions(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t...e.identifier,\n\t\t\t\t\t\t\t\t\t\t\tversion,\n\t\t\t\t\t\t\t\t\t\t\tpreRelease: version\n\t\t\t\t\t\t\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t\t\t\t\t\t\t: e.preRelease,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tCancellationToken.None,\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)[0];\n\n\t\t\t\t\t\t\t/* Update extension state only if\n\t\t\t\t\t\t\t *\textension is installed and version is same as synced version or\n\t\t\t\t\t\t\t *\textension is not installed and installable\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\te.state &&\n\t\t\t\t\t\t\t\t(installedExtension\n\t\t\t\t\t\t\t\t\t? installedExtension.manifest.version ===\n\t\t\t\t\t\t\t\t\t\te.version /* Installed and remote has same version */\n\t\t\t\t\t\t\t\t\t: !!extension) /* Installable */\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tthis.updateExtensionState(\n\t\t\t\t\t\t\t\t\te.state,\n\t\t\t\t\t\t\t\t\tinstalledExtension || extension,\n\t\t\t\t\t\t\t\t\tinstalledExtension?.manifest.version,\n\t\t\t\t\t\t\t\t\textensionStorageService,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (extension) {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tconst isDisabled =\n\t\t\t\t\t\t\t\t\t\textensionEnablementService\n\t\t\t\t\t\t\t\t\t\t\t.getDisabledExtensions()\n\t\t\t\t\t\t\t\t\t\t\t.some((disabledExtension) =>\n\t\t\t\t\t\t\t\t\t\t\t\tareSameExtensions(\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabledExtension,\n\t\t\t\t\t\t\t\t\t\t\t\t\te.identifier,\n\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tif (isDisabled !== !!e.disabled) {\n\t\t\t\t\t\t\t\t\t\tif (e.disabled) {\n\t\t\t\t\t\t\t\t\t\t\tthis.logService.trace(\n\t\t\t\t\t\t\t\t\t\t\t\t`${syncResourceLogLabel}: Disabling extension...`,\n\t\t\t\t\t\t\t\t\t\t\t\te.identifier.id,\n\t\t\t\t\t\t\t\t\t\t\t\textension.version,\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tawait extensionEnablementService.disableExtension(\n\t\t\t\t\t\t\t\t\t\t\t\textension.identifier,\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t\t\t\t\t\t\t`${syncResourceLogLabel}: Disabled extension`,\n\t\t\t\t\t\t\t\t\t\t\t\te.identifier.id,\n\t\t\t\t\t\t\t\t\t\t\t\textension.version,\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tthis.logService.trace(\n\t\t\t\t\t\t\t\t\t\t\t\t`${syncResourceLogLabel}: Enabling extension...`,\n\t\t\t\t\t\t\t\t\t\t\t\te.identifier.id,\n\t\t\t\t\t\t\t\t\t\t\t\textension.version,\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tawait extensionEnablementService.enableExtension(\n\t\t\t\t\t\t\t\t\t\t\t\textension.identifier,\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t\t\t\t\t\t\t`${syncResourceLogLabel}: Enabled extension`,\n\t\t\t\t\t\t\t\t\t\t\t\te.identifier.id,\n\t\t\t\t\t\t\t\t\t\t\t\textension.version,\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t!installedExtension || // Install if the extension does not exist\n\t\t\t\t\t\t\t\t\t\tinstalledExtension.preRelease !==\n\t\t\t\t\t\t\t\t\t\t\te.preRelease || // Install if the extension pre-release preference has changed\n\t\t\t\t\t\t\t\t\t\tinstalledExtension.pinned !==\n\t\t\t\t\t\t\t\t\t\t\te.pinned || // Install if the extension pinned preference has changed\n\t\t\t\t\t\t\t\t\t\t(version &&\n\t\t\t\t\t\t\t\t\t\t\tinstalledExtension.manifest\n\t\t\t\t\t\t\t\t\t\t\t\t.version !== version) // Install if the extension version has changed\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\tawait this.extensionManagementService.canInstall(\n\t\t\t\t\t\t\t\t\t\t\t\textension,\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\textensionsToInstall.push({\n\t\t\t\t\t\t\t\t\t\t\t\textension,\n\t\t\t\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tisMachineScoped: false /* set isMachineScoped value to prevent install and sync dialog in web */,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdonotIncludePackAndDependencies: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\tinstallGivenVersion:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\te.pinned && !!e.version,\n\t\t\t\t\t\t\t\t\t\t\t\t\tpinned: e.pinned,\n\t\t\t\t\t\t\t\t\t\t\t\t\tinstallPreReleaseVersion:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\te.preRelease,\n\t\t\t\t\t\t\t\t\t\t\t\t\tprofileLocation:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tprofile.extensionsResource,\n\t\t\t\t\t\t\t\t\t\t\t\t\tisApplicationScoped:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\te.isApplicationScoped,\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontext: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[EXTENSION_INSTALL_SKIP_WALKTHROUGH_CONTEXT]: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[EXTENSION_INSTALL_SOURCE_CONTEXT]:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tExtensionInstallSource.SETTINGS_SYNC,\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\tsyncExtensionsToInstall.set(\n\t\t\t\t\t\t\t\t\t\t\t\textension.identifier.id.toLowerCase(),\n\t\t\t\t\t\t\t\t\t\t\t\te,\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t\t\t\t\t\t\t`${syncResourceLogLabel}: Skipped synchronizing extension because it cannot be installed.`,\n\t\t\t\t\t\t\t\t\t\t\t\textension.displayName ||\n\t\t\t\t\t\t\t\t\t\t\t\t\textension.identifier.id,\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\taddToSkipped.push(e);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\t\taddToSkipped.push(e);\n\t\t\t\t\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t\t\t\t\t`${syncResourceLogLabel}: Skipped synchronizing extension`,\n\t\t\t\t\t\t\t\t\t\textension.displayName ||\n\t\t\t\t\t\t\t\t\t\t\textension.identifier.id,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\taddToSkipped.push(e);\n\t\t\t\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t\t\t\t`${syncResourceLogLabel}: Skipped synchronizing extension because the extension is not found.`,\n\t\t\t\t\t\t\t\t\te.identifier.id,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\n\t\t// 2. Next uninstall the removed extensions\n\t\tif (removed.length) {\n\t\t\tconst extensionsToRemove = installedExtensions.filter(\n\t\t\t\t({ identifier, isBuiltin }) =>\n\t\t\t\t\t!isBuiltin &&\n\t\t\t\t\tremoved.some((r) => areSameExtensions(identifier, r)),\n\t\t\t);\n\t\t\tawait Promises.settled(\n\t\t\t\textensionsToRemove.map(async (extensionToRemove) => {\n\t\t\t\t\tthis.logService.trace(\n\t\t\t\t\t\t`${syncResourceLogLabel}: Uninstalling local extension...`,\n\t\t\t\t\t\textensionToRemove.identifier.id,\n\t\t\t\t\t);\n\t\t\t\t\tawait this.extensionManagementService.uninstall(\n\t\t\t\t\t\textensionToRemove,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdonotIncludePack: true,\n\t\t\t\t\t\t\tdonotCheckDependents: true,\n\t\t\t\t\t\t\tprofileLocation: profile.extensionsResource,\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t`${syncResourceLogLabel}: Uninstalled local extension.`,\n\t\t\t\t\t\textensionToRemove.identifier.id,\n\t\t\t\t\t);\n\t\t\t\t\tremoveFromSkipped.push(extensionToRemove.identifier);\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\n\t\t// 3. Install extensions at the end\n\t\tconst results =\n\t\t\tawait this.extensionManagementService.installGalleryExtensions(\n\t\t\t\textensionsToInstall,\n\t\t\t);\n\t\tfor (const { identifier, local, error, source } of results) {\n\t\t\tconst gallery = source as IGalleryExtension;\n\t\t\tif (local) {\n\t\t\t\tthis.logService.info(\n\t\t\t\t\t`${syncResourceLogLabel}: Installed extension.`,\n\t\t\t\t\tidentifier.id,\n\t\t\t\t\tgallery.version,\n\t\t\t\t);\n\t\t\t\tremoveFromSkipped.push(identifier);\n\t\t\t} else {\n\t\t\t\tconst e = syncExtensionsToInstall.get(\n\t\t\t\t\tidentifier.id.toLowerCase(),\n\t\t\t\t);\n\t\t\t\tif (e) {\n\t\t\t\t\taddToSkipped.push(e);\n\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t`${syncResourceLogLabel}: Skipped synchronizing extension`,\n\t\t\t\t\t\tgallery.displayName || gallery.identifier.id,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\terror instanceof ExtensionManagementError &&\n\t\t\t\t\t[\n\t\t\t\t\t\tExtensionManagementErrorCode.Incompatible,\n\t\t\t\t\t\tExtensionManagementErrorCode.IncompatibleApi,\n\t\t\t\t\t\tExtensionManagementErrorCode.IncompatibleTargetPlatform,\n\t\t\t\t\t].includes(error.code)\n\t\t\t\t) {\n\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t`${syncResourceLogLabel}: Skipped synchronizing extension because the compatible extension is not found.`,\n\t\t\t\t\t\tgallery.displayName || gallery.identifier.id,\n\t\t\t\t\t);\n\t\t\t\t} else if (error) {\n\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst newSkippedExtensions: ISyncExtension[] = [];\n\t\tfor (const skippedExtension of skippedExtensions) {\n\t\t\tif (\n\t\t\t\t!removeFromSkipped.some((e) =>\n\t\t\t\t\tareSameExtensions(e, skippedExtension.identifier),\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tnewSkippedExtensions.push(skippedExtension);\n\t\t\t}\n\t\t}\n\t\tfor (const skippedExtension of addToSkipped) {\n\t\t\tif (\n\t\t\t\t!newSkippedExtensions.some((e) =>\n\t\t\t\t\tareSameExtensions(\n\t\t\t\t\t\te.identifier,\n\t\t\t\t\t\tskippedExtension.identifier,\n\t\t\t\t\t),\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tnewSkippedExtensions.push(skippedExtension);\n\t\t\t}\n\t\t}\n\t\treturn newSkippedExtensions;\n\t}\n\n\tprivate updateExtensionState(\n\t\tstate: IStringDictionary<any>,\n\t\textension: ILocalExtension | IGalleryExtension,\n\t\tversion: string | undefined,\n\t\textensionStorageService: IExtensionStorageService,\n\t): void {\n\t\tconst extensionState =\n\t\t\textensionStorageService.getExtensionState(extension, true) || {};\n\t\tconst keys = version\n\t\t\t? extensionStorageService.getKeysForSync({\n\t\t\t\t\tid: extension.identifier.id,\n\t\t\t\t\tversion,\n\t\t\t\t})\n\t\t\t: undefined;\n\t\tif (keys) {\n\t\t\tkeys.forEach((key) => {\n\t\t\t\textensionState[key] = state[key];\n\t\t\t});\n\t\t} else {\n\t\t\tObject.keys(state).forEach(\n\t\t\t\t(key) => (extensionState[key] = state[key]),\n\t\t\t);\n\t\t}\n\t\textensionStorageService.setExtensionState(\n\t\t\textension,\n\t\t\textensionState,\n\t\t\ttrue,\n\t\t);\n\t}\n\n\tprivate async withProfileScopedServices<T>(\n\t\tprofile: IUserDataProfile,\n\t\tfn: (\n\t\t\textensionEnablementService: IGlobalExtensionEnablementService,\n\t\t\textensionStorageService: IExtensionStorageService,\n\t\t) => Promise<T>,\n\t): Promise<T> {\n\t\treturn this.userDataProfileStorageService.withProfileScopedStorageService(\n\t\t\tprofile,\n\t\t\tasync (storageService) => {\n\t\t\t\tconst disposables = new DisposableStore();\n\t\t\t\tconst instantiationService = disposables.add(\n\t\t\t\t\tthis.instantiationService.createChild(\n\t\t\t\t\t\tnew ServiceCollection([\n\t\t\t\t\t\t\tIStorageService,\n\t\t\t\t\t\t\tstorageService,\n\t\t\t\t\t\t]),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tconst extensionEnablementService = disposables.add(\n\t\t\t\t\tinstantiationService.createInstance(\n\t\t\t\t\t\tGlobalExtensionEnablementService,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tconst extensionStorageService = disposables.add(\n\t\t\t\t\tinstantiationService.createInstance(\n\t\t\t\t\t\tExtensionStorageService,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\ttry {\n\t\t\t\t\treturn await fn(\n\t\t\t\t\t\textensionEnablementService,\n\t\t\t\t\t\textensionStorageService,\n\t\t\t\t\t);\n\t\t\t\t} finally {\n\t\t\t\t\tdisposables.dispose();\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\t}\n}\n\nexport interface IExtensionsInitializerPreviewResult {\n\treadonly installedExtensions: ILocalExtension[];\n\treadonly disabledExtensions: IExtensionIdentifier[];\n\treadonly newExtensions: (IExtensionIdentifier & { preRelease: boolean })[];\n\treadonly remoteExtensions: ISyncExtension[];\n}\n\nexport abstract class AbstractExtensionsInitializer extends AbstractInitializer {\n\tconstructor(\n\t\t@IExtensionManagementService protected readonly extensionManagementService: IExtensionManagementService,\n\t\t@IIgnoredExtensionsManagementService private readonly ignoredExtensionsManagementService: IIgnoredExtensionsManagementService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IUserDataProfilesService userDataProfilesService: IUserDataProfilesService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@ILogService logService: ILogService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(SyncResource.Extensions, userDataProfilesService, environmentService, logService, fileService, storageService, uriIdentityService);\n\t}\n\n\tprotected async parseExtensions(\n\t\tremoteUserData: IRemoteUserData,\n\t): Promise<ISyncExtension[] | null> {\n\t\treturn remoteUserData.syncData\n\t\t\t? await parseAndMigrateExtensions(\n\t\t\t\t\tremoteUserData.syncData,\n\t\t\t\t\tthis.extensionManagementService,\n\t\t\t\t)\n\t\t\t: null;\n\t}\n\n\tprotected generatePreview(\n\t\tremoteExtensions: ISyncExtension[],\n\t\tlocalExtensions: ILocalExtension[],\n\t): IExtensionsInitializerPreviewResult {\n\t\tconst installedExtensions: ILocalExtension[] = [];\n\t\tconst newExtensions: (IExtensionIdentifier & {\n\t\t\tpreRelease: boolean;\n\t\t})[] = [];\n\t\tconst disabledExtensions: IExtensionIdentifier[] = [];\n\t\tfor (const extension of remoteExtensions) {\n\t\t\tif (\n\t\t\t\tthis.ignoredExtensionsManagementService.hasToNeverSyncExtension(\n\t\t\t\t\textension.identifier.id,\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// Skip extension ignored to sync\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst installedExtension = localExtensions.find((i) =>\n\t\t\t\tareSameExtensions(i.identifier, extension.identifier),\n\t\t\t);\n\t\t\tif (installedExtension) {\n\t\t\t\tinstalledExtensions.push(installedExtension);\n\t\t\t\tif (extension.disabled) {\n\t\t\t\t\tdisabledExtensions.push(extension.identifier);\n\t\t\t\t}\n\t\t\t} else if (extension.installed) {\n\t\t\t\tnewExtensions.push({\n\t\t\t\t\t...extension.identifier,\n\t\t\t\t\tpreRelease: !!extension.preRelease,\n\t\t\t\t});\n\t\t\t\tif (extension.disabled) {\n\t\t\t\t\tdisabledExtensions.push(extension.identifier);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tinstalledExtensions,\n\t\t\tnewExtensions,\n\t\t\tdisabledExtensions,\n\t\t\tremoteExtensions,\n\t\t};\n\t}\n}\n"],
  "mappings": "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",
  "names": ["profile"]
}
