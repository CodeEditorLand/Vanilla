{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/userDataSync/common/abstractSynchronizer.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { equals } from \"../../../base/common/arrays.js\";\nimport {\n\ttype CancelablePromise,\n\tThrottledDelayer,\n\tcreateCancelablePromise,\n} from \"../../../base/common/async.js\";\nimport { VSBuffer } from \"../../../base/common/buffer.js\";\nimport { CancellationToken } from \"../../../base/common/cancellation.js\";\nimport type { IStringDictionary } from \"../../../base/common/collections.js\";\nimport { Emitter, type Event } from \"../../../base/common/event.js\";\nimport { type ParseError, parse } from \"../../../base/common/json.js\";\nimport type { FormattingOptions } from \"../../../base/common/jsonFormatter.js\";\nimport { Disposable } from \"../../../base/common/lifecycle.js\";\nimport type { IExtUri } from \"../../../base/common/resources.js\";\nimport { uppercaseFirstLetter } from \"../../../base/common/strings.js\";\nimport { isUndefined } from \"../../../base/common/types.js\";\nimport type { URI } from \"../../../base/common/uri.js\";\nimport type { IHeaders } from \"../../../base/parts/request/common/request.js\";\nimport { localize } from \"../../../nls.js\";\nimport { IConfigurationService } from \"../../configuration/common/configuration.js\";\nimport { IEnvironmentService } from \"../../environment/common/environment.js\";\nimport { getServiceMachineId } from \"../../externalServices/common/serviceMachineId.js\";\nimport {\n\ttype FileChangesEvent,\n\tFileOperationError,\n\tFileOperationResult,\n\ttype IFileContent,\n\tIFileService,\n\ttoFileOperationResult,\n} from \"../../files/common/files.js\";\nimport { ILogService } from \"../../log/common/log.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../storage/common/storage.js\";\nimport { ITelemetryService } from \"../../telemetry/common/telemetry.js\";\nimport { IUriIdentityService } from \"../../uriIdentity/common/uriIdentity.js\";\nimport {\n\ttype IUserDataProfile,\n\tIUserDataProfilesService,\n} from \"../../userDataProfile/common/userDataProfile.js\";\nimport {\n\tChange,\n\ttype IResourcePreview as IBaseResourcePreview,\n\ttype IUserDataSyncResourcePreview as IBaseSyncResourcePreview,\n\ttype IRemoteUserData,\n\ttype ISyncData,\n\ttype IUserData,\n\ttype IUserDataResourceManifest,\n\ttype IUserDataSyncConfiguration,\n\tIUserDataSyncEnablementService,\n\tIUserDataSyncLocalStoreService,\n\tIUserDataSyncLogService,\n\ttype IUserDataSyncResource,\n\ttype IUserDataSyncResourceConflicts,\n\ttype IUserDataSyncResourceInitializer,\n\tIUserDataSyncStoreService,\n\tIUserDataSyncUtilService,\n\ttype IUserDataSynchroniser,\n\tMergeState,\n\tPREVIEW_DIR_NAME,\n\ttype SyncResource,\n\tSyncStatus,\n\tUSER_DATA_SYNC_CONFIGURATION_SCOPE,\n\tUSER_DATA_SYNC_SCHEME,\n\tUserDataSyncError,\n\tUserDataSyncErrorCode,\n\tgetLastSyncResourceUri,\n\tgetPathSegments,\n} from \"./userDataSync.js\";\n\ntype IncompatibleSyncSourceClassification = {\n\towner: \"sandy081\";\n\tcomment: \"Information about the sync resource that is incompatible\";\n\tsource: {\n\t\tclassification: \"SystemMetaData\";\n\t\tpurpose: \"FeatureInsight\";\n\t\tcomment: \"settings sync resource. eg., settings, keybindings...\";\n\t};\n};\n\nexport function isRemoteUserData(thing: any): thing is IRemoteUserData {\n\tif (\n\t\tthing &&\n\t\tthing.ref !== undefined && typeof thing.ref === \"string\" &&\n\t\tthing.ref !== \"\" &&\n\t\tthing.syncData !== undefined &&\n\t\t(thing.syncData === null || isSyncData(thing.syncData))\n\t) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\nexport function isSyncData(thing: any): thing is ISyncData {\n\tif (\n\t\tthing &&\n\t\tthing.version !== undefined &&\n\t\ttypeof thing.version === \"number\" &&\n\t\tthing.content !== undefined &&\n\t\ttypeof thing.content === \"string\"\n\t) {\n\t\t// backward compatibility\n\t\tif (Object.keys(thing).length === 2) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (\n\t\t\tObject.keys(thing).length === 3 &&\n\t\t\tthing.machineId !== undefined &&\n\t\t\ttypeof thing.machineId === \"string\"\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\nexport function getSyncResourceLogLabel(\n\tsyncResource: SyncResource,\n\tprofile: IUserDataProfile,\n): string {\n\treturn `${uppercaseFirstLetter(syncResource)}${profile.isDefault ? \"\" : ` (${profile.name})`}`;\n}\n\nexport interface IResourcePreview {\n\treadonly baseResource: URI;\n\treadonly baseContent: string | null;\n\n\treadonly remoteResource: URI;\n\treadonly remoteContent: string | null;\n\treadonly remoteChange: Change;\n\n\treadonly localResource: URI;\n\treadonly localContent: string | null;\n\treadonly localChange: Change;\n\n\treadonly previewResource: URI;\n\treadonly acceptedResource: URI;\n}\n\nexport interface IAcceptResult {\n\treadonly content: string | null;\n\treadonly localChange: Change;\n\treadonly remoteChange: Change;\n}\n\nexport interface IMergeResult extends IAcceptResult {\n\treadonly hasConflicts: boolean;\n}\n\ninterface IEditableResourcePreview\n\textends IBaseResourcePreview,\n\t\tIResourcePreview {\n\tlocalChange: Change;\n\tremoteChange: Change;\n\tmergeState: MergeState;\n\tacceptResult?: IAcceptResult;\n}\n\nexport interface ISyncResourcePreview extends IBaseSyncResourcePreview {\n\treadonly remoteUserData: IRemoteUserData;\n\treadonly lastSyncUserData: IRemoteUserData | null;\n\treadonly resourcePreviews: IEditableResourcePreview[];\n}\n\ninterface ILastSyncUserDataState {\n\treadonly ref: string;\n\treadonly version: string | undefined;\n\t[key: string]: any;\n}\n\nexport abstract class AbstractSynchroniser\n\textends Disposable\n\timplements IUserDataSynchroniser\n{\n\tprivate syncPreviewPromise: CancelablePromise<ISyncResourcePreview> | null =\n\t\tnull;\n\n\tprotected readonly syncFolder: URI;\n\tprotected readonly syncPreviewFolder: URI;\n\tprotected readonly extUri: IExtUri;\n\tprotected readonly currentMachineIdPromise: Promise<string>;\n\n\tprivate _status: SyncStatus = SyncStatus.Idle;\n\tget status(): SyncStatus {\n\t\treturn this._status;\n\t}\n\tprivate _onDidChangStatus: Emitter<SyncStatus> = this._register(\n\t\tnew Emitter<SyncStatus>(),\n\t);\n\treadonly onDidChangeStatus: Event<SyncStatus> =\n\t\tthis._onDidChangStatus.event;\n\n\tprivate _conflicts: IBaseResourcePreview[] = [];\n\tget conflicts(): IUserDataSyncResourceConflicts {\n\t\treturn { ...this.syncResource, conflicts: this._conflicts };\n\t}\n\tprivate _onDidChangeConflicts = this._register(\n\t\tnew Emitter<IUserDataSyncResourceConflicts>(),\n\t);\n\treadonly onDidChangeConflicts = this._onDidChangeConflicts.event;\n\n\tprivate readonly localChangeTriggerThrottler = this._register(\n\t\tnew ThrottledDelayer<void>(50),\n\t);\n\tprivate readonly _onDidChangeLocal: Emitter<void> = this._register(\n\t\tnew Emitter<void>(),\n\t);\n\treadonly onDidChangeLocal: Event<void> = this._onDidChangeLocal.event;\n\n\tprotected readonly lastSyncResource: URI;\n\tprivate readonly lastSyncUserDataStateKey =\n\t\t`${this.collection ? `${this.collection}.` : \"\"}${this.syncResource.syncResource}.lastSyncUserData`;\n\tprivate hasSyncResourceStateVersionChanged = false;\n\tprotected readonly syncResourceLogLabel: string;\n\n\tprotected syncHeaders: IHeaders = {};\n\n\treadonly resource = this.syncResource.syncResource;\n\n\tconstructor(\n\t\treadonly syncResource: IUserDataSyncResource,\n\t\treadonly collection: string | undefined,\n\t\t@IFileService protected readonly fileService: IFileService,\n\t\t@IEnvironmentService\n\t\tprotected readonly environmentService: IEnvironmentService,\n\t\t@IStorageService protected readonly storageService: IStorageService,\n\t\t@IUserDataSyncStoreService\n\t\tprotected readonly userDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncLocalStoreService\n\t\tprotected readonly userDataSyncLocalStoreService: IUserDataSyncLocalStoreService,\n\t\t@IUserDataSyncEnablementService\n\t\tprotected readonly userDataSyncEnablementService: IUserDataSyncEnablementService,\n\t\t@ITelemetryService\n\t\tprotected readonly telemetryService: ITelemetryService,\n\t\t@IUserDataSyncLogService\n\t\tprotected readonly logService: IUserDataSyncLogService,\n\t\t@IConfigurationService\n\t\tprotected readonly configurationService: IConfigurationService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper();\n\t\tthis.syncResourceLogLabel = getSyncResourceLogLabel(\n\t\t\tsyncResource.syncResource,\n\t\t\tsyncResource.profile,\n\t\t);\n\t\tthis.extUri = uriIdentityService.extUri;\n\t\tthis.syncFolder = this.extUri.joinPath(\n\t\t\tenvironmentService.userDataSyncHome,\n\t\t\t...getPathSegments(\n\t\t\t\tsyncResource.profile.isDefault\n\t\t\t\t\t? undefined\n\t\t\t\t\t: syncResource.profile.id,\n\t\t\t\tsyncResource.syncResource,\n\t\t\t),\n\t\t);\n\t\tthis.syncPreviewFolder = this.extUri.joinPath(\n\t\t\tthis.syncFolder,\n\t\t\tPREVIEW_DIR_NAME,\n\t\t);\n\t\tthis.lastSyncResource = getLastSyncResourceUri(\n\t\t\tsyncResource.profile.isDefault\n\t\t\t\t? undefined\n\t\t\t\t: syncResource.profile.id,\n\t\t\tsyncResource.syncResource,\n\t\t\tenvironmentService,\n\t\t\tthis.extUri,\n\t\t);\n\t\tthis.currentMachineIdPromise = getServiceMachineId(\n\t\t\tenvironmentService,\n\t\t\tfileService,\n\t\t\tstorageService,\n\t\t);\n\t}\n\n\tprotected triggerLocalChange(): void {\n\t\tthis.localChangeTriggerThrottler.trigger(() =>\n\t\t\tthis.doTriggerLocalChange(),\n\t\t);\n\t}\n\n\tprotected async doTriggerLocalChange(): Promise<void> {\n\t\t// Sync again if current status is in conflicts\n\t\tif (this.status === SyncStatus.HasConflicts) {\n\t\t\tthis.logService.info(\n\t\t\t\t`${this.syncResourceLogLabel}: In conflicts state and local change detected. Syncing again...`,\n\t\t\t);\n\t\t\tconst preview = await this.syncPreviewPromise!;\n\t\t\tthis.syncPreviewPromise = null;\n\t\t\tconst status = await this.performSync(\n\t\t\t\tpreview.remoteUserData,\n\t\t\t\tpreview.lastSyncUserData,\n\t\t\t\ttrue,\n\t\t\t\tthis.getUserDataSyncConfiguration(),\n\t\t\t);\n\t\t\tthis.setStatus(status);\n\t\t}\n\n\t\t// Check if local change causes remote change\n\t\telse {\n\t\t\tthis.logService.trace(\n\t\t\t\t`${this.syncResourceLogLabel}: Checking for local changes...`,\n\t\t\t);\n\t\t\tconst lastSyncUserData = await this.getLastSyncUserData();\n\t\t\tconst hasRemoteChanged = lastSyncUserData\n\t\t\t\t? await this.hasRemoteChanged(lastSyncUserData)\n\t\t\t\t: true;\n\t\t\tif (hasRemoteChanged) {\n\t\t\t\tthis._onDidChangeLocal.fire();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected setStatus(status: SyncStatus): void {\n\t\tif (this._status !== status) {\n\t\t\tthis._status = status;\n\t\t\tthis._onDidChangStatus.fire(status);\n\t\t}\n\t}\n\n\tasync sync(\n\t\tmanifest: IUserDataResourceManifest | null,\n\t\theaders: IHeaders = {},\n\t): Promise<void> {\n\t\tawait this._sync(\n\t\t\tmanifest,\n\t\t\ttrue,\n\t\t\tthis.getUserDataSyncConfiguration(),\n\t\t\theaders,\n\t\t);\n\t}\n\n\tasync preview(\n\t\tmanifest: IUserDataResourceManifest | null,\n\t\tuserDataSyncConfiguration: IUserDataSyncConfiguration,\n\t\theaders: IHeaders = {},\n\t): Promise<ISyncResourcePreview | null> {\n\t\treturn this._sync(manifest, false, userDataSyncConfiguration, headers);\n\t}\n\n\tasync apply(\n\t\tforce: boolean,\n\t\theaders: IHeaders = {},\n\t): Promise<ISyncResourcePreview | null> {\n\t\ttry {\n\t\t\tthis.syncHeaders = { ...headers };\n\n\t\t\tconst status = await this.doApply(force);\n\t\t\tthis.setStatus(status);\n\n\t\t\treturn this.syncPreviewPromise;\n\t\t} finally {\n\t\t\tthis.syncHeaders = {};\n\t\t}\n\t}\n\n\tprivate async _sync(\n\t\tmanifest: IUserDataResourceManifest | null,\n\t\tapply: boolean,\n\t\tuserDataSyncConfiguration: IUserDataSyncConfiguration,\n\t\theaders: IHeaders,\n\t): Promise<ISyncResourcePreview | null> {\n\t\ttry {\n\t\t\tthis.syncHeaders = { ...headers };\n\n\t\t\tif (this.status === SyncStatus.HasConflicts) {\n\t\t\t\tthis.logService.info(\n\t\t\t\t\t`${this.syncResourceLogLabel}: Skipped synchronizing ${this.resource.toLowerCase()} as there are conflicts.`,\n\t\t\t\t);\n\t\t\t\treturn this.syncPreviewPromise;\n\t\t\t}\n\n\t\t\tif (this.status === SyncStatus.Syncing) {\n\t\t\t\tthis.logService.info(\n\t\t\t\t\t`${this.syncResourceLogLabel}: Skipped synchronizing ${this.resource.toLowerCase()} as it is running already.`,\n\t\t\t\t);\n\t\t\t\treturn this.syncPreviewPromise;\n\t\t\t}\n\n\t\t\tthis.logService.trace(\n\t\t\t\t`${this.syncResourceLogLabel}: Started synchronizing ${this.resource.toLowerCase()}...`,\n\t\t\t);\n\t\t\tthis.setStatus(SyncStatus.Syncing);\n\n\t\t\tlet status: SyncStatus = SyncStatus.Idle;\n\t\t\ttry {\n\t\t\t\tconst lastSyncUserData = await this.getLastSyncUserData();\n\t\t\t\tconst remoteUserData = await this.getLatestRemoteUserData(\n\t\t\t\t\tmanifest,\n\t\t\t\t\tlastSyncUserData,\n\t\t\t\t);\n\t\t\t\tstatus = await this.performSync(\n\t\t\t\t\tremoteUserData,\n\t\t\t\t\tlastSyncUserData,\n\t\t\t\t\tapply,\n\t\t\t\t\tuserDataSyncConfiguration,\n\t\t\t\t);\n\t\t\t\tif (status === SyncStatus.HasConflicts) {\n\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t`${this.syncResourceLogLabel}: Detected conflicts while synchronizing ${this.resource.toLowerCase()}.`,\n\t\t\t\t\t);\n\t\t\t\t} else if (status === SyncStatus.Idle) {\n\t\t\t\t\tthis.logService.trace(\n\t\t\t\t\t\t`${this.syncResourceLogLabel}: Finished synchronizing ${this.resource.toLowerCase()}.`,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn this.syncPreviewPromise || null;\n\t\t\t} finally {\n\t\t\t\tthis.setStatus(status);\n\t\t\t}\n\t\t} finally {\n\t\t\tthis.syncHeaders = {};\n\t\t}\n\t}\n\n\tasync replace(content: string): Promise<boolean> {\n\t\tconst syncData = this.parseSyncData(content);\n\t\tif (!syncData) {\n\t\t\treturn false;\n\t\t}\n\n\t\tawait this.stop();\n\n\t\ttry {\n\t\t\tthis.logService.trace(\n\t\t\t\t`${this.syncResourceLogLabel}: Started resetting ${this.resource.toLowerCase()}...`,\n\t\t\t);\n\t\t\tthis.setStatus(SyncStatus.Syncing);\n\t\t\tconst lastSyncUserData = await this.getLastSyncUserData();\n\t\t\tconst remoteUserData = await this.getLatestRemoteUserData(\n\t\t\t\tnull,\n\t\t\t\tlastSyncUserData,\n\t\t\t);\n\t\t\tconst isRemoteDataFromCurrentMachine =\n\t\t\t\tawait this.isRemoteDataFromCurrentMachine(remoteUserData);\n\n\t\t\t/* use replace sync data */\n\t\t\tconst resourcePreviewResults = await this.generateSyncPreview(\n\t\t\t\t{ ref: remoteUserData.ref, syncData },\n\t\t\t\tlastSyncUserData,\n\t\t\t\tisRemoteDataFromCurrentMachine,\n\t\t\t\tthis.getUserDataSyncConfiguration(),\n\t\t\t\tCancellationToken.None,\n\t\t\t);\n\n\t\t\tconst resourcePreviews: [IResourcePreview, IAcceptResult][] = [];\n\t\t\tfor (const resourcePreviewResult of resourcePreviewResults) {\n\t\t\t\t/* Accept remote resource */\n\t\t\t\tconst acceptResult: IAcceptResult = await this.getAcceptResult(\n\t\t\t\t\tresourcePreviewResult,\n\t\t\t\t\tresourcePreviewResult.remoteResource,\n\t\t\t\t\tundefined,\n\t\t\t\t\tCancellationToken.None,\n\t\t\t\t);\n\t\t\t\t/* compute remote change */\n\t\t\t\tconst { remoteChange } = await this.getAcceptResult(\n\t\t\t\t\tresourcePreviewResult,\n\t\t\t\t\tresourcePreviewResult.previewResource,\n\t\t\t\t\tresourcePreviewResult.remoteContent,\n\t\t\t\t\tCancellationToken.None,\n\t\t\t\t);\n\t\t\t\tresourcePreviews.push([\n\t\t\t\t\tresourcePreviewResult,\n\t\t\t\t\t{\n\t\t\t\t\t\t...acceptResult,\n\t\t\t\t\t\tremoteChange:\n\t\t\t\t\t\t\tremoteChange !== Change.None\n\t\t\t\t\t\t\t\t? remoteChange\n\t\t\t\t\t\t\t\t: Change.Modified,\n\t\t\t\t\t},\n\t\t\t\t]);\n\t\t\t}\n\n\t\t\tawait this.applyResult(\n\t\t\t\tremoteUserData,\n\t\t\t\tlastSyncUserData,\n\t\t\t\tresourcePreviews,\n\t\t\t\tfalse,\n\t\t\t);\n\t\t\tthis.logService.info(\n\t\t\t\t`${this.syncResourceLogLabel}: Finished resetting ${this.resource.toLowerCase()}.`,\n\t\t\t);\n\t\t} finally {\n\t\t\tthis.setStatus(SyncStatus.Idle);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate async isRemoteDataFromCurrentMachine(\n\t\tremoteUserData: IRemoteUserData,\n\t): Promise<boolean> {\n\t\tconst machineId = await this.currentMachineIdPromise;\n\t\treturn (\n\t\t\t!!remoteUserData.syncData?.machineId &&\n\t\t\tremoteUserData.syncData.machineId === machineId\n\t\t);\n\t}\n\n\tprotected async getLatestRemoteUserData(\n\t\tmanifest: IUserDataResourceManifest | null,\n\t\tlastSyncUserData: IRemoteUserData | null,\n\t): Promise<IRemoteUserData> {\n\t\tif (lastSyncUserData) {\n\t\t\tconst latestRef = manifest ? manifest[this.resource] : undefined;\n\n\t\t\t// Last time synced resource and latest resource on server are same\n\t\t\tif (lastSyncUserData.ref === latestRef) {\n\t\t\t\treturn lastSyncUserData;\n\t\t\t}\n\n\t\t\t// There is no resource on server and last time it was synced with no resource\n\t\t\tif (latestRef === undefined && lastSyncUserData.syncData === null) {\n\t\t\t\treturn lastSyncUserData;\n\t\t\t}\n\t\t}\n\t\treturn this.getRemoteUserData(lastSyncUserData);\n\t}\n\n\tprivate async performSync(\n\t\tremoteUserData: IRemoteUserData,\n\t\tlastSyncUserData: IRemoteUserData | null,\n\t\tapply: boolean,\n\t\tuserDataSyncConfiguration: IUserDataSyncConfiguration,\n\t): Promise<SyncStatus> {\n\t\tif (\n\t\t\tremoteUserData.syncData &&\n\t\t\tremoteUserData.syncData.version > this.version\n\t\t) {\n\t\t\t// current version is not compatible with cloud version\n\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\t{ source: string },\n\t\t\t\tIncompatibleSyncSourceClassification\n\t\t\t>(\"sync/incompatible\", { source: this.resource });\n\t\t\tthrow new UserDataSyncError(\n\t\t\t\tlocalize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"incompatible\",\n\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t\"This is an error while syncing a resource that its local version is not compatible with its remote version.\",\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\t\"Cannot sync {0} as its local version {1} is not compatible with its remote version {2}\",\n\t\t\t\t\tthis.resource,\n\t\t\t\t\tthis.version,\n\t\t\t\t\tremoteUserData.syncData.version,\n\t\t\t\t),\n\t\t\t\tUserDataSyncErrorCode.IncompatibleLocalContent,\n\t\t\t\tthis.resource,\n\t\t\t);\n\t\t}\n\n\t\ttry {\n\t\t\treturn await this.doSync(\n\t\t\t\tremoteUserData,\n\t\t\t\tlastSyncUserData,\n\t\t\t\tapply,\n\t\t\t\tuserDataSyncConfiguration,\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tif (e instanceof UserDataSyncError) {\n\t\t\t\tswitch (e.code) {\n\t\t\t\t\tcase UserDataSyncErrorCode.LocalPreconditionFailed:\n\t\t\t\t\t\t// Rejected as there is a new local version. Syncing again...\n\t\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t\t`${this.syncResourceLogLabel}: Failed to synchronize ${this.syncResourceLogLabel} as there is a new local version available. Synchronizing again...`,\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn this.performSync(\n\t\t\t\t\t\t\tremoteUserData,\n\t\t\t\t\t\t\tlastSyncUserData,\n\t\t\t\t\t\t\tapply,\n\t\t\t\t\t\t\tuserDataSyncConfiguration,\n\t\t\t\t\t\t);\n\n\t\t\t\t\tcase UserDataSyncErrorCode.Conflict:\n\t\t\t\t\tcase UserDataSyncErrorCode.PreconditionFailed:\n\t\t\t\t\t\t// Rejected as there is a new remote version. Syncing again...\n\t\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t\t`${this.syncResourceLogLabel}: Failed to synchronize as there is a new remote version available. Synchronizing again...`,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// Avoid cache and get latest remote user data - https://github.com/microsoft/vscode/issues/90624\n\t\t\t\t\t\tremoteUserData = await this.getRemoteUserData(null);\n\n\t\t\t\t\t\t// Get the latest last sync user data. Because multiple parallel syncs (in Web) could share same last sync data\n\t\t\t\t\t\t// and one of them successfully updated remote and last sync state.\n\t\t\t\t\t\tlastSyncUserData = await this.getLastSyncUserData();\n\n\t\t\t\t\t\treturn this.performSync(\n\t\t\t\t\t\t\tremoteUserData,\n\t\t\t\t\t\t\tlastSyncUserData,\n\t\t\t\t\t\t\tapply,\n\t\t\t\t\t\t\tuserDataSyncConfiguration,\n\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\tprotected async doSync(\n\t\tremoteUserData: IRemoteUserData,\n\t\tlastSyncUserData: IRemoteUserData | null,\n\t\tapply: boolean,\n\t\tuserDataSyncConfiguration: IUserDataSyncConfiguration,\n\t): Promise<SyncStatus> {\n\t\ttry {\n\t\t\tconst isRemoteDataFromCurrentMachine =\n\t\t\t\tawait this.isRemoteDataFromCurrentMachine(remoteUserData);\n\t\t\tconst acceptRemote =\n\t\t\t\t!isRemoteDataFromCurrentMachine &&\n\t\t\t\tlastSyncUserData === null &&\n\t\t\t\tthis.getStoredLastSyncUserDataStateContent() !== undefined;\n\t\t\tconst merge = apply && !acceptRemote;\n\n\t\t\t// generate or use existing preview\n\t\t\tif (!this.syncPreviewPromise) {\n\t\t\t\tthis.syncPreviewPromise = createCancelablePromise((token) =>\n\t\t\t\t\tthis.doGenerateSyncResourcePreview(\n\t\t\t\t\t\tremoteUserData,\n\t\t\t\t\t\tlastSyncUserData,\n\t\t\t\t\t\tisRemoteDataFromCurrentMachine,\n\t\t\t\t\t\tmerge,\n\t\t\t\t\t\tuserDataSyncConfiguration,\n\t\t\t\t\t\ttoken,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tlet preview = await this.syncPreviewPromise;\n\n\t\t\tif (apply && acceptRemote) {\n\t\t\t\tthis.logService.info(\n\t\t\t\t\t`${this.syncResourceLogLabel}: Accepting remote because it was synced before and the last sync data is not available.`,\n\t\t\t\t);\n\t\t\t\tfor (const resourcePreview of preview.resourcePreviews) {\n\t\t\t\t\tpreview =\n\t\t\t\t\t\t(await this.accept(resourcePreview.remoteResource)) ||\n\t\t\t\t\t\tpreview;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.updateConflicts(preview.resourcePreviews);\n\t\t\tif (\n\t\t\t\tpreview.resourcePreviews.some(\n\t\t\t\t\t({ mergeState }) => mergeState === MergeState.Conflict,\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\treturn SyncStatus.HasConflicts;\n\t\t\t}\n\n\t\t\tif (apply) {\n\t\t\t\treturn await this.doApply(false);\n\t\t\t}\n\n\t\t\treturn SyncStatus.Syncing;\n\t\t} catch (error) {\n\t\t\t// reset preview on error\n\t\t\tthis.syncPreviewPromise = null;\n\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync merge(resource: URI): Promise<ISyncResourcePreview | null> {\n\t\tawait this.updateSyncResourcePreview(\n\t\t\tresource,\n\t\t\tasync (resourcePreview) => {\n\t\t\t\tconst mergeResult = await this.getMergeResult(\n\t\t\t\t\tresourcePreview,\n\t\t\t\t\tCancellationToken.None,\n\t\t\t\t);\n\t\t\t\tawait this.fileService.writeFile(\n\t\t\t\t\tresourcePreview.previewResource,\n\t\t\t\t\tVSBuffer.fromString(mergeResult?.content || \"\"),\n\t\t\t\t);\n\t\t\t\tconst acceptResult: IAcceptResult | undefined =\n\t\t\t\t\tmergeResult && !mergeResult.hasConflicts\n\t\t\t\t\t\t? await this.getAcceptResult(\n\t\t\t\t\t\t\t\tresourcePreview,\n\t\t\t\t\t\t\t\tresourcePreview.previewResource,\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\tCancellationToken.None,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t: undefined;\n\t\t\t\tresourcePreview.acceptResult = acceptResult;\n\t\t\t\tresourcePreview.mergeState = mergeResult.hasConflicts\n\t\t\t\t\t? MergeState.Conflict\n\t\t\t\t\t: acceptResult\n\t\t\t\t\t\t? MergeState.Accepted\n\t\t\t\t\t\t: MergeState.Preview;\n\t\t\t\tresourcePreview.localChange = acceptResult\n\t\t\t\t\t? acceptResult.localChange\n\t\t\t\t\t: mergeResult.localChange;\n\t\t\t\tresourcePreview.remoteChange = acceptResult\n\t\t\t\t\t? acceptResult.remoteChange\n\t\t\t\t\t: mergeResult.remoteChange;\n\t\t\t\treturn resourcePreview;\n\t\t\t},\n\t\t);\n\t\treturn this.syncPreviewPromise;\n\t}\n\n\tasync accept(\n\t\tresource: URI,\n\t\tcontent?: string | null,\n\t): Promise<ISyncResourcePreview | null> {\n\t\tawait this.updateSyncResourcePreview(\n\t\t\tresource,\n\t\t\tasync (resourcePreview) => {\n\t\t\t\tconst acceptResult = await this.getAcceptResult(\n\t\t\t\t\tresourcePreview,\n\t\t\t\t\tresource,\n\t\t\t\t\tcontent,\n\t\t\t\t\tCancellationToken.None,\n\t\t\t\t);\n\t\t\t\tresourcePreview.acceptResult = acceptResult;\n\t\t\t\tresourcePreview.mergeState = MergeState.Accepted;\n\t\t\t\tresourcePreview.localChange = acceptResult.localChange;\n\t\t\t\tresourcePreview.remoteChange = acceptResult.remoteChange;\n\t\t\t\treturn resourcePreview;\n\t\t\t},\n\t\t);\n\t\treturn this.syncPreviewPromise;\n\t}\n\n\tasync discard(resource: URI): Promise<ISyncResourcePreview | null> {\n\t\tawait this.updateSyncResourcePreview(\n\t\t\tresource,\n\t\t\tasync (resourcePreview) => {\n\t\t\t\tconst mergeResult = await this.getMergeResult(\n\t\t\t\t\tresourcePreview,\n\t\t\t\t\tCancellationToken.None,\n\t\t\t\t);\n\t\t\t\tawait this.fileService.writeFile(\n\t\t\t\t\tresourcePreview.previewResource,\n\t\t\t\t\tVSBuffer.fromString(mergeResult.content || \"\"),\n\t\t\t\t);\n\t\t\t\tresourcePreview.acceptResult = undefined;\n\t\t\t\tresourcePreview.mergeState = MergeState.Preview;\n\t\t\t\tresourcePreview.localChange = mergeResult.localChange;\n\t\t\t\tresourcePreview.remoteChange = mergeResult.remoteChange;\n\t\t\t\treturn resourcePreview;\n\t\t\t},\n\t\t);\n\t\treturn this.syncPreviewPromise;\n\t}\n\n\tprivate async updateSyncResourcePreview(\n\t\tresource: URI,\n\t\tupdateResourcePreview: (\n\t\t\tresourcePreview: IEditableResourcePreview,\n\t\t) => Promise<IEditableResourcePreview>,\n\t): Promise<void> {\n\t\tif (!this.syncPreviewPromise) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet preview = await this.syncPreviewPromise;\n\t\tconst index = preview.resourcePreviews.findIndex(\n\t\t\t({ localResource, remoteResource, previewResource }) =>\n\t\t\t\tthis.extUri.isEqual(localResource, resource) ||\n\t\t\t\tthis.extUri.isEqual(remoteResource, resource) ||\n\t\t\t\tthis.extUri.isEqual(previewResource, resource),\n\t\t);\n\t\tif (index === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.syncPreviewPromise = createCancelablePromise(async (token) => {\n\t\t\tconst resourcePreviews = [...preview.resourcePreviews];\n\t\t\tresourcePreviews[index] = await updateResourcePreview(\n\t\t\t\tresourcePreviews[index],\n\t\t\t);\n\t\t\treturn {\n\t\t\t\t...preview,\n\t\t\t\tresourcePreviews,\n\t\t\t};\n\t\t});\n\n\t\tpreview = await this.syncPreviewPromise;\n\t\tthis.updateConflicts(preview.resourcePreviews);\n\t\tif (\n\t\t\tpreview.resourcePreviews.some(\n\t\t\t\t({ mergeState }) => mergeState === MergeState.Conflict,\n\t\t\t)\n\t\t) {\n\t\t\tthis.setStatus(SyncStatus.HasConflicts);\n\t\t} else {\n\t\t\tthis.setStatus(SyncStatus.Syncing);\n\t\t}\n\t}\n\n\tprivate async doApply(force: boolean): Promise<SyncStatus> {\n\t\tif (!this.syncPreviewPromise) {\n\t\t\treturn SyncStatus.Idle;\n\t\t}\n\n\t\tconst preview = await this.syncPreviewPromise;\n\n\t\t// check for conflicts\n\t\tif (\n\t\t\tpreview.resourcePreviews.some(\n\t\t\t\t({ mergeState }) => mergeState === MergeState.Conflict,\n\t\t\t)\n\t\t) {\n\t\t\treturn SyncStatus.HasConflicts;\n\t\t}\n\n\t\t// check if all are accepted\n\t\tif (\n\t\t\tpreview.resourcePreviews.some(\n\t\t\t\t({ mergeState }) => mergeState !== MergeState.Accepted,\n\t\t\t)\n\t\t) {\n\t\t\treturn SyncStatus.Syncing;\n\t\t}\n\n\t\t// apply preview\n\t\tawait this.applyResult(\n\t\t\tpreview.remoteUserData,\n\t\t\tpreview.lastSyncUserData,\n\t\t\tpreview.resourcePreviews.map((resourcePreview) => [\n\t\t\t\tresourcePreview,\n\t\t\t\tresourcePreview.acceptResult!,\n\t\t\t]),\n\t\t\tforce,\n\t\t);\n\n\t\t// reset preview\n\t\tthis.syncPreviewPromise = null;\n\n\t\t// reset preview folder\n\t\tawait this.clearPreviewFolder();\n\n\t\treturn SyncStatus.Idle;\n\t}\n\n\tprivate async clearPreviewFolder(): Promise<void> {\n\t\ttry {\n\t\t\tawait this.fileService.del(this.syncPreviewFolder, {\n\t\t\t\trecursive: true,\n\t\t\t});\n\t\t} catch (error) {\n\t\t\t/* Ignore */\n\t\t}\n\t}\n\n\tprivate updateConflicts(\n\t\tresourcePreviews: IEditableResourcePreview[],\n\t): void {\n\t\tconst conflicts = resourcePreviews.filter(\n\t\t\t({ mergeState }) => mergeState === MergeState.Conflict,\n\t\t);\n\t\tif (\n\t\t\t!equals(this._conflicts, conflicts, (a, b) =>\n\t\t\t\tthis.extUri.isEqual(a.previewResource, b.previewResource),\n\t\t\t)\n\t\t) {\n\t\t\tthis._conflicts = conflicts;\n\t\t\tthis._onDidChangeConflicts.fire(this.conflicts);\n\t\t}\n\t}\n\n\tasync hasPreviouslySynced(): Promise<boolean> {\n\t\tconst lastSyncData = await this.getLastSyncUserData();\n\t\treturn (\n\t\t\t!!lastSyncData &&\n\t\t\tlastSyncData.syncData !==\n\t\t\t\tnull /* `null` sync data implies resource is not synced */\n\t\t);\n\t}\n\n\tprotected async resolvePreviewContent(uri: URI): Promise<string | null> {\n\t\tconst syncPreview = this.syncPreviewPromise\n\t\t\t? await this.syncPreviewPromise\n\t\t\t: null;\n\t\tif (syncPreview) {\n\t\t\tfor (const resourcePreview of syncPreview.resourcePreviews) {\n\t\t\t\tif (\n\t\t\t\t\tthis.extUri.isEqual(resourcePreview.acceptedResource, uri)\n\t\t\t\t) {\n\t\t\t\t\treturn resourcePreview.acceptResult\n\t\t\t\t\t\t? resourcePreview.acceptResult.content\n\t\t\t\t\t\t: null;\n\t\t\t\t}\n\t\t\t\tif (this.extUri.isEqual(resourcePreview.remoteResource, uri)) {\n\t\t\t\t\treturn resourcePreview.remoteContent;\n\t\t\t\t}\n\t\t\t\tif (this.extUri.isEqual(resourcePreview.localResource, uri)) {\n\t\t\t\t\treturn resourcePreview.localContent;\n\t\t\t\t}\n\t\t\t\tif (this.extUri.isEqual(resourcePreview.baseResource, uri)) {\n\t\t\t\t\treturn resourcePreview.baseContent;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tasync resetLocal(): Promise<void> {\n\t\tthis.storageService.remove(\n\t\t\tthis.lastSyncUserDataStateKey,\n\t\t\tStorageScope.APPLICATION,\n\t\t);\n\t\ttry {\n\t\t\tawait this.fileService.del(this.lastSyncResource);\n\t\t} catch (error) {\n\t\t\tif (\n\t\t\t\ttoFileOperationResult(error) !==\n\t\t\t\tFileOperationResult.FILE_NOT_FOUND\n\t\t\t) {\n\t\t\t\tthis.logService.error(error);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async doGenerateSyncResourcePreview(\n\t\tremoteUserData: IRemoteUserData,\n\t\tlastSyncUserData: IRemoteUserData | null,\n\t\tisRemoteDataFromCurrentMachine: boolean,\n\t\tmerge: boolean,\n\t\tuserDataSyncConfiguration: IUserDataSyncConfiguration,\n\t\ttoken: CancellationToken,\n\t): Promise<ISyncResourcePreview> {\n\t\tconst resourcePreviewResults = await this.generateSyncPreview(\n\t\t\tremoteUserData,\n\t\t\tlastSyncUserData,\n\t\t\tisRemoteDataFromCurrentMachine,\n\t\t\tuserDataSyncConfiguration,\n\t\t\ttoken,\n\t\t);\n\n\t\tconst resourcePreviews: IEditableResourcePreview[] = [];\n\t\tfor (const resourcePreviewResult of resourcePreviewResults) {\n\t\t\tconst acceptedResource = resourcePreviewResult.previewResource.with(\n\t\t\t\t{ scheme: USER_DATA_SYNC_SCHEME, authority: \"accepted\" },\n\t\t\t);\n\n\t\t\t/* No change -> Accept */\n\t\t\tif (\n\t\t\t\tresourcePreviewResult.localChange === Change.None &&\n\t\t\t\tresourcePreviewResult.remoteChange === Change.None\n\t\t\t) {\n\t\t\t\tresourcePreviews.push({\n\t\t\t\t\t...resourcePreviewResult,\n\t\t\t\t\tacceptedResource,\n\t\t\t\t\tacceptResult: {\n\t\t\t\t\t\tcontent: null,\n\t\t\t\t\t\tlocalChange: Change.None,\n\t\t\t\t\t\tremoteChange: Change.None,\n\t\t\t\t\t},\n\t\t\t\t\tmergeState: MergeState.Accepted,\n\t\t\t\t});\n\t\t\t} else {\n\n\t\t\t/* Changed -> Apply ? (Merge ? Conflict | Accept) : Preview */\n\t\t\t\t/* Merge */\n\t\t\t\tconst mergeResult = merge\n\t\t\t\t\t? await this.getMergeResult(resourcePreviewResult, token)\n\t\t\t\t\t: undefined;\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tawait this.fileService.writeFile(\n\t\t\t\t\tresourcePreviewResult.previewResource,\n\t\t\t\t\tVSBuffer.fromString(mergeResult?.content || \"\"),\n\t\t\t\t);\n\n\t\t\t\t/* Conflict | Accept */\n\t\t\t\tconst acceptResult =\n\t\t\t\t\tmergeResult && !mergeResult.hasConflicts\n\t\t\t\t\t\t? /* Accept if merged and there are no conflicts */\n\t\t\t\t\t\t\tawait this.getAcceptResult(\n\t\t\t\t\t\t\t\tresourcePreviewResult,\n\t\t\t\t\t\t\t\tresourcePreviewResult.previewResource,\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\ttoken,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t: undefined;\n\n\t\t\t\tresourcePreviews.push({\n\t\t\t\t\t...resourcePreviewResult,\n\t\t\t\t\tacceptResult,\n\t\t\t\t\tmergeState: mergeResult?.hasConflicts\n\t\t\t\t\t\t? MergeState.Conflict\n\t\t\t\t\t\t: acceptResult\n\t\t\t\t\t\t\t? MergeState.Accepted\n\t\t\t\t\t\t\t: MergeState.Preview,\n\t\t\t\t\tlocalChange: acceptResult\n\t\t\t\t\t\t? acceptResult.localChange\n\t\t\t\t\t\t: mergeResult\n\t\t\t\t\t\t\t? mergeResult.localChange\n\t\t\t\t\t\t\t: resourcePreviewResult.localChange,\n\t\t\t\t\tremoteChange: acceptResult\n\t\t\t\t\t\t? acceptResult.remoteChange\n\t\t\t\t\t\t: mergeResult\n\t\t\t\t\t\t\t? mergeResult.remoteChange\n\t\t\t\t\t\t\t: resourcePreviewResult.remoteChange,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tsyncResource: this.resource,\n\t\t\tprofile: this.syncResource.profile,\n\t\t\tremoteUserData,\n\t\t\tlastSyncUserData,\n\t\t\tresourcePreviews,\n\t\t\tisLastSyncFromCurrentMachine: isRemoteDataFromCurrentMachine,\n\t\t};\n\t}\n\n\tasync getLastSyncUserData(): Promise<IRemoteUserData | null> {\n\t\tlet storedLastSyncUserDataStateContent =\n\t\t\tthis.getStoredLastSyncUserDataStateContent();\n\t\tif (!storedLastSyncUserDataStateContent) {\n\t\t\tstoredLastSyncUserDataStateContent =\n\t\t\t\tawait this.migrateLastSyncUserData();\n\t\t}\n\n\t\t// Last Sync Data state does not exist\n\t\tif (!storedLastSyncUserDataStateContent) {\n\t\t\tthis.logService.info(\n\t\t\t\t`${this.syncResourceLogLabel}: Last sync data state does not exist.`,\n\t\t\t);\n\t\t\treturn null;\n\t\t}\n\n\t\tconst lastSyncUserDataState: ILastSyncUserDataState = JSON.parse(\n\t\t\tstoredLastSyncUserDataStateContent,\n\t\t);\n\t\tconst resourceSyncStateVersion =\n\t\t\tthis.userDataSyncEnablementService.getResourceSyncStateVersion(\n\t\t\t\tthis.resource,\n\t\t\t);\n\t\tthis.hasSyncResourceStateVersionChanged =\n\t\t\t!!lastSyncUserDataState.version &&\n\t\t\t!!resourceSyncStateVersion &&\n\t\t\tlastSyncUserDataState.version !== resourceSyncStateVersion;\n\t\tif (this.hasSyncResourceStateVersionChanged) {\n\t\t\tthis.logService.info(\n\t\t\t\t`${this.syncResourceLogLabel}: Reset last sync state because last sync state version ${lastSyncUserDataState.version} is not compatible with current sync state version ${resourceSyncStateVersion}.`,\n\t\t\t);\n\t\t\tawait this.resetLocal();\n\t\t\treturn null;\n\t\t}\n\n\t\tlet syncData: ISyncData | null | undefined;\n\n\t\t// Get Last Sync Data from Local\n\t\tlet retrial = 1;\n\t\twhile (syncData === undefined && retrial++ < 6 /* Retry 5 times */) {\n\t\t\ttry {\n\t\t\t\tconst lastSyncStoredRemoteUserData =\n\t\t\t\t\tawait this.readLastSyncStoredRemoteUserData();\n\t\t\t\tif (lastSyncStoredRemoteUserData) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tlastSyncStoredRemoteUserData.ref ===\n\t\t\t\t\t\tlastSyncUserDataState.ref\n\t\t\t\t\t) {\n\t\t\t\t\t\tsyncData = lastSyncStoredRemoteUserData.syncData;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t\t`${this.syncResourceLogLabel}: Last sync data stored locally is not same as the last sync state.`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t} catch (error) {\n\t\t\t\tif (\n\t\t\t\t\terror instanceof FileOperationError &&\n\t\t\t\t\terror.fileOperationResult ===\n\t\t\t\t\t\tFileOperationResult.FILE_NOT_FOUND\n\t\t\t\t) {\n\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t`${this.syncResourceLogLabel}: Last sync resource does not exist locally.`,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (error instanceof UserDataSyncError) {\n\t\t\t\t\tthrow error;\n\t\t\t\t} else {\n\t\t\t\t\t// log and retry\n\t\t\t\t\tthis.logService.error(error, retrial);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Get Last Sync Data from Remote\n\t\tif (syncData === undefined) {\n\t\t\ttry {\n\t\t\t\tconst content =\n\t\t\t\t\tawait this.userDataSyncStoreService.resolveResourceContent(\n\t\t\t\t\t\tthis.resource,\n\t\t\t\t\t\tlastSyncUserDataState.ref,\n\t\t\t\t\t\tthis.collection,\n\t\t\t\t\t\tthis.syncHeaders,\n\t\t\t\t\t);\n\t\t\t\tsyncData =\n\t\t\t\t\tcontent === null ? null : this.parseSyncData(content);\n\t\t\t\tawait this.writeLastSyncStoredRemoteUserData({\n\t\t\t\t\tref: lastSyncUserDataState.ref,\n\t\t\t\t\tsyncData,\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\tif (\n\t\t\t\t\terror instanceof UserDataSyncError &&\n\t\t\t\t\terror.code === UserDataSyncErrorCode.NotFound\n\t\t\t\t) {\n\t\t\t\t\tthis.logService.info(\n\t\t\t\t\t\t`${this.syncResourceLogLabel}: Last sync resource does not exist remotely.`,\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Last Sync Data Not Found\n\t\tif (syncData === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\t...lastSyncUserDataState,\n\t\t\tsyncData,\n\t\t};\n\t}\n\n\tprotected async updateLastSyncUserData(\n\t\tlastSyncRemoteUserData: IRemoteUserData,\n\t\tadditionalProps: IStringDictionary<any> = {},\n\t): Promise<void> {\n\t\tif (additionalProps[\"ref\"] || additionalProps[\"version\"]) {\n\t\t\tthrow new Error(\"Cannot have core properties as additional\");\n\t\t}\n\n\t\tconst version =\n\t\t\tthis.userDataSyncEnablementService.getResourceSyncStateVersion(\n\t\t\t\tthis.resource,\n\t\t\t);\n\t\tconst lastSyncUserDataState: ILastSyncUserDataState = {\n\t\t\tref: lastSyncRemoteUserData.ref,\n\t\t\tversion,\n\t\t\t...additionalProps,\n\t\t};\n\n\t\tthis.storageService.store(\n\t\t\tthis.lastSyncUserDataStateKey,\n\t\t\tJSON.stringify(lastSyncUserDataState),\n\t\t\tStorageScope.APPLICATION,\n\t\t\tStorageTarget.MACHINE,\n\t\t);\n\t\tawait this.writeLastSyncStoredRemoteUserData(lastSyncRemoteUserData);\n\t}\n\n\tprivate getStoredLastSyncUserDataStateContent(): string | undefined {\n\t\treturn this.storageService.get(\n\t\t\tthis.lastSyncUserDataStateKey,\n\t\t\tStorageScope.APPLICATION,\n\t\t);\n\t}\n\n\tprivate async readLastSyncStoredRemoteUserData(): Promise<\n\t\tIRemoteUserData | undefined\n\t> {\n\t\tconst content = (\n\t\t\tawait this.fileService.readFile(this.lastSyncResource)\n\t\t).value.toString();\n\t\ttry {\n\t\t\tconst lastSyncStoredRemoteUserData = content\n\t\t\t\t? JSON.parse(content)\n\t\t\t\t: undefined;\n\t\t\tif (isRemoteUserData(lastSyncStoredRemoteUserData)) {\n\t\t\t\treturn lastSyncStoredRemoteUserData;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate async writeLastSyncStoredRemoteUserData(\n\t\tlastSyncRemoteUserData: IRemoteUserData,\n\t): Promise<void> {\n\t\tawait this.fileService.writeFile(\n\t\t\tthis.lastSyncResource,\n\t\t\tVSBuffer.fromString(JSON.stringify(lastSyncRemoteUserData)),\n\t\t);\n\t}\n\n\tprivate async migrateLastSyncUserData(): Promise<string | undefined> {\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(\n\t\t\t\tthis.lastSyncResource,\n\t\t\t);\n\t\t\tconst userData = JSON.parse(content.value.toString());\n\t\t\tawait this.fileService.del(this.lastSyncResource);\n\t\t\tif (userData.ref && userData.content !== undefined) {\n\t\t\t\tthis.storageService.store(\n\t\t\t\t\tthis.lastSyncUserDataStateKey,\n\t\t\t\t\tJSON.stringify({\n\t\t\t\t\t\t...userData,\n\t\t\t\t\t\tcontent: undefined,\n\t\t\t\t\t}),\n\t\t\t\t\tStorageScope.APPLICATION,\n\t\t\t\t\tStorageTarget.MACHINE,\n\t\t\t\t);\n\t\t\t\tawait this.writeLastSyncStoredRemoteUserData({\n\t\t\t\t\tref: userData.ref,\n\t\t\t\t\tsyncData:\n\t\t\t\t\t\tuserData.content === null\n\t\t\t\t\t\t\t? null\n\t\t\t\t\t\t\t: JSON.parse(userData.content),\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.logService.info(\n\t\t\t\t\t`${this.syncResourceLogLabel}: Migrating last sync user data. Invalid data.`,\n\t\t\t\t\tuserData,\n\t\t\t\t);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (\n\t\t\t\terror instanceof FileOperationError &&\n\t\t\t\terror.fileOperationResult === FileOperationResult.FILE_NOT_FOUND\n\t\t\t) {\n\t\t\t\tthis.logService.info(\n\t\t\t\t\t`${this.syncResourceLogLabel}: Migrating last sync user data. Resource does not exist.`,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.logService.error(error);\n\t\t\t}\n\t\t}\n\t\treturn this.storageService.get(\n\t\t\tthis.lastSyncUserDataStateKey,\n\t\t\tStorageScope.APPLICATION,\n\t\t);\n\t}\n\n\tasync getRemoteUserData(\n\t\tlastSyncData: IRemoteUserData | null,\n\t): Promise<IRemoteUserData> {\n\t\tconst { ref, content } = await this.getUserData(lastSyncData);\n\t\tlet syncData: ISyncData | null = null;\n\t\tif (content !== null) {\n\t\t\tsyncData = this.parseSyncData(content);\n\t\t}\n\t\treturn { ref, syncData };\n\t}\n\n\tprotected parseSyncData(content: string): ISyncData {\n\t\ttry {\n\t\t\tconst syncData: ISyncData = JSON.parse(content);\n\t\t\tif (isSyncData(syncData)) {\n\t\t\t\treturn syncData;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t}\n\t\tthrow new UserDataSyncError(\n\t\t\tlocalize(\n\t\t\t\t\"incompatible sync data\",\n\t\t\t\t\"Cannot parse sync data as it is not compatible with the current version.\",\n\t\t\t),\n\t\t\tUserDataSyncErrorCode.IncompatibleRemoteContent,\n\t\t\tthis.resource,\n\t\t);\n\t}\n\n\tprivate async getUserData(\n\t\tlastSyncData: IRemoteUserData | null,\n\t): Promise<IUserData> {\n\t\tconst lastSyncUserData: IUserData | null = lastSyncData\n\t\t\t? {\n\t\t\t\t\tref: lastSyncData.ref,\n\t\t\t\t\tcontent: lastSyncData.syncData\n\t\t\t\t\t\t? JSON.stringify(lastSyncData.syncData)\n\t\t\t\t\t\t: null,\n\t\t\t\t}\n\t\t\t: null;\n\t\treturn this.userDataSyncStoreService.readResource(\n\t\t\tthis.resource,\n\t\t\tlastSyncUserData,\n\t\t\tthis.collection,\n\t\t\tthis.syncHeaders,\n\t\t);\n\t}\n\n\tprotected async updateRemoteUserData(\n\t\tcontent: string,\n\t\tref: string | null,\n\t): Promise<IRemoteUserData> {\n\t\tconst machineId = await this.currentMachineIdPromise;\n\t\tconst syncData: ISyncData = {\n\t\t\tversion: this.version,\n\t\t\tmachineId,\n\t\t\tcontent,\n\t\t};\n\t\ttry {\n\t\t\tref = await this.userDataSyncStoreService.writeResource(\n\t\t\t\tthis.resource,\n\t\t\t\tJSON.stringify(syncData),\n\t\t\t\tref,\n\t\t\t\tthis.collection,\n\t\t\t\tthis.syncHeaders,\n\t\t\t);\n\t\t\treturn { ref, syncData };\n\t\t} catch (error) {\n\t\t\tif (\n\t\t\t\terror instanceof UserDataSyncError &&\n\t\t\t\terror.code === UserDataSyncErrorCode.TooLarge\n\t\t\t) {\n\t\t\t\terror = new UserDataSyncError(\n\t\t\t\t\terror.message,\n\t\t\t\t\terror.code,\n\t\t\t\t\tthis.resource,\n\t\t\t\t);\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprotected async backupLocal(content: string): Promise<void> {\n\t\tconst syncData: ISyncData = { version: this.version, content };\n\t\treturn this.userDataSyncLocalStoreService.writeResource(\n\t\t\tthis.resource,\n\t\t\tJSON.stringify(syncData),\n\t\t\tnew Date(),\n\t\t\tthis.syncResource.profile.isDefault\n\t\t\t\t? undefined\n\t\t\t\t: this.syncResource.profile.id,\n\t\t);\n\t}\n\n\tasync stop(): Promise<void> {\n\t\tif (this.status === SyncStatus.Idle) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.logService.trace(\n\t\t\t`${this.syncResourceLogLabel}: Stopping synchronizing ${this.resource.toLowerCase()}.`,\n\t\t);\n\t\tif (this.syncPreviewPromise) {\n\t\t\tthis.syncPreviewPromise.cancel();\n\t\t\tthis.syncPreviewPromise = null;\n\t\t}\n\n\t\tthis.updateConflicts([]);\n\t\tawait this.clearPreviewFolder();\n\n\t\tthis.setStatus(SyncStatus.Idle);\n\t\tthis.logService.info(\n\t\t\t`${this.syncResourceLogLabel}: Stopped synchronizing ${this.resource.toLowerCase()}.`,\n\t\t);\n\t}\n\n\tprivate getUserDataSyncConfiguration(): IUserDataSyncConfiguration {\n\t\treturn this.configurationService.getValue(\n\t\t\tUSER_DATA_SYNC_CONFIGURATION_SCOPE,\n\t\t);\n\t}\n\n\tprotected abstract readonly version: number;\n\tprotected abstract generateSyncPreview(\n\t\tremoteUserData: IRemoteUserData,\n\t\tlastSyncUserData: IRemoteUserData | null,\n\t\tisRemoteDataFromCurrentMachine: boolean,\n\t\tuserDataSyncConfiguration: IUserDataSyncConfiguration,\n\t\ttoken: CancellationToken,\n\t): Promise<IResourcePreview[]>;\n\tprotected abstract getMergeResult(\n\t\tresourcePreview: IResourcePreview,\n\t\ttoken: CancellationToken,\n\t): Promise<IMergeResult>;\n\tprotected abstract getAcceptResult(\n\t\tresourcePreview: IResourcePreview,\n\t\tresource: URI,\n\t\tcontent: string | null | undefined,\n\t\ttoken: CancellationToken,\n\t): Promise<IAcceptResult>;\n\tprotected abstract applyResult(\n\t\tremoteUserData: IRemoteUserData,\n\t\tlastSyncUserData: IRemoteUserData | null,\n\t\tresult: [IResourcePreview, IAcceptResult][],\n\t\tforce: boolean,\n\t): Promise<void>;\n\tprotected abstract hasRemoteChanged(\n\t\tlastSyncUserData: IRemoteUserData,\n\t): Promise<boolean>;\n\n\tabstract hasLocalData(): Promise<boolean>;\n\tabstract resolveContent(uri: URI): Promise<string | null>;\n}\n\nexport interface IFileResourcePreview extends IResourcePreview {\n\treadonly fileContent: IFileContent | null;\n}\n\nexport abstract class AbstractFileSynchroniser extends AbstractSynchroniser {\n\tconstructor(\n\t\tprotected readonly file: URI,\n\t\tsyncResource: IUserDataSyncResource,\n\t\tcollection: string | undefined,\n\t\t@IFileService fileService: IFileService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IUserDataSyncStoreService\n\t\tuserDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncLocalStoreService\n\t\tuserDataSyncLocalStoreService: IUserDataSyncLocalStoreService,\n\t\t@IUserDataSyncEnablementService\n\t\tuserDataSyncEnablementService: IUserDataSyncEnablementService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(\n\t\t\tsyncResource,\n\t\t\tcollection,\n\t\t\tfileService,\n\t\t\tenvironmentService,\n\t\t\tstorageService,\n\t\t\tuserDataSyncStoreService,\n\t\t\tuserDataSyncLocalStoreService,\n\t\t\tuserDataSyncEnablementService,\n\t\t\ttelemetryService,\n\t\t\tlogService,\n\t\t\tconfigurationService,\n\t\t\turiIdentityService,\n\t\t);\n\t\tthis._register(this.fileService.watch(this.extUri.dirname(file)));\n\t\tthis._register(\n\t\t\tthis.fileService.onDidFilesChange((e) => this.onFileChanges(e)),\n\t\t);\n\t}\n\n\tprotected async getLocalFileContent(): Promise<IFileContent | null> {\n\t\ttry {\n\t\t\treturn await this.fileService.readFile(this.file);\n\t\t} catch (error) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tprotected async updateLocalFileContent(\n\t\tnewContent: string,\n\t\toldContent: IFileContent | null,\n\t\tforce: boolean,\n\t): Promise<void> {\n\t\ttry {\n\t\t\tif (oldContent) {\n\t\t\t\t// file exists already\n\t\t\t\tawait this.fileService.writeFile(\n\t\t\t\t\tthis.file,\n\t\t\t\t\tVSBuffer.fromString(newContent),\n\t\t\t\t\tforce ? undefined : oldContent,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t// file does not exist\n\t\t\t\tawait this.fileService.createFile(\n\t\t\t\t\tthis.file,\n\t\t\t\t\tVSBuffer.fromString(newContent),\n\t\t\t\t\t{ overwrite: force },\n\t\t\t\t);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tif (\n\t\t\t\t(e instanceof FileOperationError &&\n\t\t\t\t\te.fileOperationResult ===\n\t\t\t\t\t\tFileOperationResult.FILE_NOT_FOUND) ||\n\t\t\t\t(e instanceof FileOperationError &&\n\t\t\t\t\te.fileOperationResult ===\n\t\t\t\t\t\tFileOperationResult.FILE_MODIFIED_SINCE)\n\t\t\t) {\n\t\t\t\tthrow new UserDataSyncError(\n\t\t\t\t\te.message,\n\t\t\t\t\tUserDataSyncErrorCode.LocalPreconditionFailed,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected async deleteLocalFile(): Promise<void> {\n\t\ttry {\n\t\t\tawait this.fileService.del(this.file);\n\t\t} catch (e) {\n\t\t\tif (\n\t\t\t\t!(\n\t\t\t\t\te instanceof FileOperationError &&\n\t\t\t\t\te.fileOperationResult === FileOperationResult.FILE_NOT_FOUND\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onFileChanges(e: FileChangesEvent): void {\n\t\tif (!e.contains(this.file)) {\n\t\t\treturn;\n\t\t}\n\t\tthis.triggerLocalChange();\n\t}\n}\n\nexport abstract class AbstractJsonFileSynchroniser extends AbstractFileSynchroniser {\n\tconstructor(\n\t\tfile: URI,\n\t\tsyncResource: IUserDataSyncResource,\n\t\tcollection: string | undefined,\n\t\t@IFileService fileService: IFileService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IUserDataSyncStoreService\n\t\tuserDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncLocalStoreService\n\t\tuserDataSyncLocalStoreService: IUserDataSyncLocalStoreService,\n\t\t@IUserDataSyncEnablementService\n\t\tuserDataSyncEnablementService: IUserDataSyncEnablementService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IUserDataSyncUtilService\n\t\tprotected readonly userDataSyncUtilService: IUserDataSyncUtilService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(\n\t\t\tfile,\n\t\t\tsyncResource,\n\t\t\tcollection,\n\t\t\tfileService,\n\t\t\tenvironmentService,\n\t\t\tstorageService,\n\t\t\tuserDataSyncStoreService,\n\t\t\tuserDataSyncLocalStoreService,\n\t\t\tuserDataSyncEnablementService,\n\t\t\ttelemetryService,\n\t\t\tlogService,\n\t\t\tconfigurationService,\n\t\t\turiIdentityService,\n\t\t);\n\t}\n\n\tprotected hasErrors(content: string, isArray: boolean): boolean {\n\t\tconst parseErrors: ParseError[] = [];\n\t\tconst result = parse(content, parseErrors, {\n\t\t\tallowEmptyContent: true,\n\t\t\tallowTrailingComma: true,\n\t\t});\n\t\treturn (\n\t\t\tparseErrors.length > 0 ||\n\t\t\t(!isUndefined(result) && isArray !== Array.isArray(result))\n\t\t);\n\t}\n\n\tprivate _formattingOptions: Promise<FormattingOptions> | undefined =\n\t\tundefined;\n\tprotected getFormattingOptions(): Promise<FormattingOptions> {\n\t\tif (!this._formattingOptions) {\n\t\t\tthis._formattingOptions =\n\t\t\t\tthis.userDataSyncUtilService.resolveFormattingOptions(\n\t\t\t\t\tthis.file,\n\t\t\t\t);\n\t\t}\n\t\treturn this._formattingOptions;\n\t}\n}\n\nexport abstract class AbstractInitializer\n\timplements IUserDataSyncResourceInitializer\n{\n\tprotected readonly extUri: IExtUri;\n\tprivate readonly lastSyncResource: URI;\n\n\tconstructor(\n\t\treadonly resource: SyncResource,\n\t\t@IUserDataProfilesService\n\t\tprotected readonly userDataProfilesService: IUserDataProfilesService,\n\t\t@IEnvironmentService\n\t\tprotected readonly environmentService: IEnvironmentService,\n\t\t@ILogService protected readonly logService: ILogService,\n\t\t@IFileService protected readonly fileService: IFileService,\n\t\t@IStorageService protected readonly storageService: IStorageService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tthis.extUri = uriIdentityService.extUri;\n\t\tthis.lastSyncResource = getLastSyncResourceUri(\n\t\t\tundefined,\n\t\t\tthis.resource,\n\t\t\tenvironmentService,\n\t\t\tthis.extUri,\n\t\t);\n\t}\n\n\tasync initialize({ ref, content }: IUserData): Promise<void> {\n\t\tif (!content) {\n\t\t\tthis.logService.info(\n\t\t\t\t\"Remote content does not exist.\",\n\t\t\t\tthis.resource,\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tconst syncData = this.parseSyncData(content);\n\t\tif (!syncData) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tawait this.doInitialize({ ref, syncData });\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t}\n\t}\n\n\tprivate parseSyncData(content: string): ISyncData | undefined {\n\t\ttry {\n\t\t\tconst syncData: ISyncData = JSON.parse(content);\n\t\t\tif (isSyncData(syncData)) {\n\t\t\t\treturn syncData;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t}\n\t\tthis.logService.info(\n\t\t\t\"Cannot parse sync data as it is not compatible with the current version.\",\n\t\t\tthis.resource,\n\t\t);\n\t\treturn undefined;\n\t}\n\n\tprotected async updateLastSyncUserData(\n\t\tlastSyncRemoteUserData: IRemoteUserData,\n\t\tadditionalProps: IStringDictionary<any> = {},\n\t): Promise<void> {\n\t\tif (additionalProps[\"ref\"] || additionalProps[\"version\"]) {\n\t\t\tthrow new Error(\"Cannot have core properties as additional\");\n\t\t}\n\n\t\tconst lastSyncUserDataState: ILastSyncUserDataState = {\n\t\t\tref: lastSyncRemoteUserData.ref,\n\t\t\tversion: undefined,\n\t\t\t...additionalProps,\n\t\t};\n\n\t\tthis.storageService.store(\n\t\t\t`${this.resource}.lastSyncUserData`,\n\t\t\tJSON.stringify(lastSyncUserDataState),\n\t\t\tStorageScope.APPLICATION,\n\t\t\tStorageTarget.MACHINE,\n\t\t);\n\t\tawait this.fileService.writeFile(\n\t\t\tthis.lastSyncResource,\n\t\t\tVSBuffer.fromString(JSON.stringify(lastSyncRemoteUserData)),\n\t\t);\n\t}\n\n\tprotected abstract doInitialize(\n\t\tremoteUserData: IRemoteUserData,\n\t): Promise<void>;\n}\n"],
  "mappings": "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",
  "names": []
}
