import e from"assert";import{runWithFakedTimers as u}from"../../../../base/test/common/timeTravelScheduler.js";import{ensureNoDisposablesAreLeakedInTestSuite as S}from"../../../../base/test/common/utils.js";import{IUserDataProfilesService as c}from"../../../userDataProfile/common/userDataProfile.js";import"../../common/userDataProfilesManifestSync.js";import{IUserDataSyncStoreService as g,SyncResource as p,SyncStatus as d}from"../../common/userDataSync.js";import{UserDataSyncClient as y,UserDataSyncTestServer as q}from"./userDataSyncClient.js";suite("UserDataProfilesManifestSync",()=>{const o=new q;let a,s,t;teardown(async()=>{await a.instantiationService.get(g).clear()});const m=S();setup(async()=>{a=m.add(new y(o)),await a.setUp(!0),t=a.getSynchronizer(p.Profiles),s=m.add(new y(o)),await s.setUp(!0)}),test("when profiles does not exist",async()=>{await u({},async()=>{e.deepStrictEqual(await t.getLastSyncUserData(),null);let i=await a.getResourceManifest();o.reset(),await t.sync(i),e.deepStrictEqual(o.requests,[{type:"GET",url:`${o.url}/v1/resource/${t.resource}/latest`,headers:{}}]);const n=await t.getLastSyncUserData(),r=await t.getRemoteUserData(null);e.deepStrictEqual(n.ref,r.ref),e.deepStrictEqual(n.syncData,r.syncData),e.strictEqual(n.syncData,null),i=await a.getResourceManifest(),o.reset(),await t.sync(i),e.deepStrictEqual(o.requests,[]),i=await a.getResourceManifest(),o.reset(),await t.sync(i),e.deepStrictEqual(o.requests,[])})}),test("when profile is created after first sync",async()=>{await u({},async()=>{await t.sync(await a.getResourceManifest()),await a.instantiationService.get(c).createProfile("1","1");let i=await t.getLastSyncUserData();const n=await a.getResourceManifest();o.reset(),await t.sync(n),e.deepStrictEqual(o.requests,[{type:"POST",url:`${o.url}/v1/collection`,headers:{}},{type:"POST",url:`${o.url}/v1/resource/${t.resource}`,headers:{"If-Match":i?.ref}}]),i=await t.getLastSyncUserData();const r=await t.getRemoteUserData(null);e.deepStrictEqual(i.ref,r.ref),e.deepStrictEqual(i.syncData,r.syncData),e.deepStrictEqual(JSON.parse(i.syncData.content),[{name:"1",id:"1",collection:"1"}])})}),test("first time sync - outgoing to server (no state)",async()=>{await u({},async()=>{await a.instantiationService.get(c).createProfile("1","1"),await t.sync(await a.getResourceManifest()),e.strictEqual(t.status,d.Idle),e.deepStrictEqual(t.conflicts.conflicts,[]);const{content:i}=await a.read(t.resource);e.ok(i!==null),e.deepStrictEqual(JSON.parse(JSON.parse(i).content),[{name:"1",id:"1",collection:"1"}])})}),test("first time sync - incoming from server (no state)",async()=>{await u({},async()=>{await s.instantiationService.get(c).createProfile("1","name 1"),await s.sync(),await t.sync(await a.getResourceManifest()),e.strictEqual(t.status,d.Idle),e.deepStrictEqual(t.conflicts.conflicts,[]);const i=l(a);e.deepStrictEqual(i,[{id:"1",name:"name 1",shortName:void 0,useDefaultFlags:void 0}])})}),test("first time sync when profiles exists",async()=>{await u({},async()=>{await s.instantiationService.get(c).createProfile("1","name 1"),await s.sync(),await a.instantiationService.get(c).createProfile("2","name 2"),await t.sync(await a.getResourceManifest()),e.strictEqual(t.status,d.Idle),e.deepStrictEqual(t.conflicts.conflicts,[]);const i=l(a);e.deepStrictEqual(i,[{id:"1",name:"name 1",shortName:void 0,useDefaultFlags:void 0},{id:"2",name:"name 2",shortName:void 0,useDefaultFlags:void 0}]);const{content:n}=await a.read(t.resource);e.ok(n!==null);const r=f(n);e.deepStrictEqual(r,[{id:"1",name:"name 1",collection:"1"},{id:"2",name:"name 2",collection:"2"}])})}),test("first time sync when storage exists - has conflicts",async()=>{await u({},async()=>{await s.instantiationService.get(c).createProfile("1","name 1"),await s.sync(),await a.instantiationService.get(c).createProfile("1","name 2"),await t.sync(await a.getResourceManifest()),e.strictEqual(t.status,d.Idle),e.deepStrictEqual(t.conflicts.conflicts,[]);const i=l(a);e.deepStrictEqual(i,[{id:"1",name:"name 1",shortName:void 0,useDefaultFlags:void 0}]);const{content:n}=await a.read(t.resource);e.ok(n!==null);const r=f(n);e.deepStrictEqual(r,[{id:"1",name:"name 1",collection:"1"}])})}),test("sync adding a profile",async()=>{await u({},async()=>{await a.instantiationService.get(c).createProfile("1","name 1",{shortName:"short 1"}),await t.sync(await a.getResourceManifest()),await s.sync(),await a.instantiationService.get(c).createProfile("2","name 2"),await t.sync(await a.getResourceManifest()),e.strictEqual(t.status,d.Idle),e.deepStrictEqual(t.conflicts.conflicts,[]),e.deepStrictEqual(l(a),[{id:"1",name:"name 1",shortName:"short 1",useDefaultFlags:void 0},{id:"2",name:"name 2",shortName:void 0,useDefaultFlags:void 0}]),await s.sync(),e.deepStrictEqual(l(s),[{id:"1",name:"name 1",shortName:"short 1",useDefaultFlags:void 0},{id:"2",name:"name 2",shortName:void 0,useDefaultFlags:void 0}]);const{content:i}=await a.read(t.resource);e.ok(i!==null);const n=f(i);e.deepStrictEqual(n,[{id:"1",name:"name 1",collection:"1",shortName:"short 1"},{id:"2",name:"name 2",collection:"2"}])})}),test("sync updating a profile",async()=>{await u({},async()=>{const i=await a.instantiationService.get(c).createProfile("1","name 1");await t.sync(await a.getResourceManifest()),await s.sync(),await a.instantiationService.get(c).updateProfile(i,{name:"name 2",shortName:"2"}),await t.sync(await a.getResourceManifest()),e.strictEqual(t.status,d.Idle),e.deepStrictEqual(t.conflicts.conflicts,[]),e.deepStrictEqual(l(a),[{id:"1",name:"name 2",shortName:"2",useDefaultFlags:void 0}]),await s.sync(),e.deepStrictEqual(l(s),[{id:"1",name:"name 2",shortName:"2",useDefaultFlags:void 0}]);const{content:n}=await a.read(t.resource);e.ok(n!==null);const r=f(n);e.deepStrictEqual(r,[{id:"1",name:"name 2",collection:"1",shortName:"2"}])})}),test("sync removing a profile",async()=>{await u({},async()=>{const i=await a.instantiationService.get(c).createProfile("1","name 1");await a.instantiationService.get(c).createProfile("2","name 2"),await t.sync(await a.getResourceManifest()),await s.sync(),a.instantiationService.get(c).removeProfile(i),await t.sync(await a.getResourceManifest()),e.strictEqual(t.status,d.Idle),e.deepStrictEqual(t.conflicts.conflicts,[]),e.deepStrictEqual(l(a),[{id:"2",name:"name 2",shortName:void 0,useDefaultFlags:void 0}]),await s.sync(),e.deepStrictEqual(l(s),[{id:"2",name:"name 2",shortName:void 0,useDefaultFlags:void 0}]);const{content:n}=await a.read(t.resource);e.ok(n!==null);const r=f(n);e.deepStrictEqual(r,[{id:"2",name:"name 2",collection:"2"}])})}),test("sync profile that uses default profile",async()=>{await u({},async()=>{await s.instantiationService.get(c).createProfile("1","name 1",{useDefaultFlags:{keybindings:!0}}),await s.sync(),await t.sync(await a.getResourceManifest()),e.strictEqual(t.status,d.Idle),e.deepStrictEqual(t.conflicts.conflicts,[]);const{content:i}=await a.read(t.resource);e.ok(i!==null);const n=f(i);e.deepStrictEqual(n,[{id:"1",name:"name 1",collection:"1",useDefaultFlags:{keybindings:!0}}]),e.deepStrictEqual(l(a),[{id:"1",name:"name 1",shortName:void 0,useDefaultFlags:{keybindings:!0}}])})}),test("sync profile when the profile is updated to use default profile locally",async()=>{await u({},async()=>{await s.instantiationService.get(c).createProfile("1","name 1"),await s.sync(),await t.sync(await a.getResourceManifest());const i=a.instantiationService.get(c).profiles.find(w=>w.id==="1");a.instantiationService.get(c).updateProfile(i,{useDefaultFlags:{keybindings:!0}}),await t.sync(await a.getResourceManifest()),e.strictEqual(t.status,d.Idle),e.deepStrictEqual(t.conflicts.conflicts,[]);const{content:n}=await a.read(t.resource);e.ok(n!==null);const r=f(n);e.deepStrictEqual(r,[{id:"1",name:"name 1",collection:"1",useDefaultFlags:{keybindings:!0}}]),e.deepStrictEqual(l(a),[{id:"1",name:"name 1",shortName:void 0,useDefaultFlags:{keybindings:!0}}])})}),test("sync profile when the profile is updated to use default profile remotely",async()=>{await u({},async()=>{const i=await s.instantiationService.get(c).createProfile("1","name 1");await s.sync(),await t.sync(await a.getResourceManifest()),s.instantiationService.get(c).updateProfile(i,{useDefaultFlags:{keybindings:!0}}),await s.sync(),await t.sync(await a.getResourceManifest()),e.strictEqual(t.status,d.Idle),e.deepStrictEqual(t.conflicts.conflicts,[]);const{content:n}=await a.read(t.resource);e.ok(n!==null);const r=f(n);e.deepStrictEqual(r,[{id:"1",name:"name 1",collection:"1",useDefaultFlags:{keybindings:!0}}]),e.deepStrictEqual(l(a),[{id:"1",name:"name 1",shortName:void 0,useDefaultFlags:{keybindings:!0}}])})});function f(i){const n=JSON.parse(i);return JSON.parse(n.content)}function l(i){return i.instantiationService.get(c).profiles.slice(1).sort((n,r)=>n.name.localeCompare(r.name)).map(n=>({id:n.id,name:n.name,shortName:n.shortName,useDefaultFlags:n.useDefaultFlags}))}});
