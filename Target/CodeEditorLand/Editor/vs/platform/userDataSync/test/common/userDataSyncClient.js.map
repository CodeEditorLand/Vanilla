{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/userDataSync/test/common/userDataSyncClient.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { bufferToStream, VSBuffer } from '../../../../base/common/buffer.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { IStringDictionary } from '../../../../base/common/collections.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { FormattingOptions } from '../../../../base/common/jsonFormatter.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { joinPath } from '../../../../base/common/resources.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { generateUuid } from '../../../../base/common/uuid.js';\nimport { IHeaders, IRequestContext, IRequestOptions } from '../../../../base/parts/request/common/request.js';\nimport { IConfigurationService } from '../../../configuration/common/configuration.js';\nimport { ConfigurationService } from '../../../configuration/common/configurationService.js';\nimport { IEnvironmentService } from '../../../environment/common/environment.js';\nimport { GlobalExtensionEnablementService } from '../../../extensionManagement/common/extensionEnablementService.js';\nimport { DidUninstallExtensionEvent, IExtensionGalleryService, IExtensionManagementService, IGlobalExtensionEnablementService, InstallExtensionResult } from '../../../extensionManagement/common/extensionManagement.js';\nimport { IFileService } from '../../../files/common/files.js';\nimport { FileService } from '../../../files/common/fileService.js';\nimport { InMemoryFileSystemProvider } from '../../../files/common/inMemoryFilesystemProvider.js';\nimport { TestInstantiationService } from '../../../instantiation/test/common/instantiationServiceMock.js';\nimport { ILogService, NullLogService } from '../../../log/common/log.js';\nimport product from '../../../product/common/product.js';\nimport { IProductService } from '../../../product/common/productService.js';\nimport { AuthInfo, Credentials, IRequestService } from '../../../request/common/request.js';\nimport { InMemoryStorageService, IStorageService } from '../../../storage/common/storage.js';\nimport { ITelemetryService } from '../../../telemetry/common/telemetry.js';\nimport { NullTelemetryService } from '../../../telemetry/common/telemetryUtils.js';\nimport { IUriIdentityService } from '../../../uriIdentity/common/uriIdentity.js';\nimport { UriIdentityService } from '../../../uriIdentity/common/uriIdentityService.js';\nimport { ExtensionStorageService, IExtensionStorageService } from '../../../extensionManagement/common/extensionStorage.js';\nimport { IgnoredExtensionsManagementService, IIgnoredExtensionsManagementService } from '../../common/ignoredExtensions.js';\nimport { ALL_SYNC_RESOURCES, getDefaultIgnoredSettings, IUserData, IUserDataSyncLocalStoreService, IUserDataSyncLogService, IUserDataSyncEnablementService, IUserDataSyncService, IUserDataSyncStoreManagementService, IUserDataSyncStoreService, IUserDataSyncUtilService, registerConfiguration, ServerResource, SyncResource, IUserDataSynchroniser, IUserDataResourceManifest, IUserDataCollectionManifest, USER_DATA_SYNC_SCHEME } from '../../common/userDataSync.js';\nimport { IUserDataSyncAccountService, UserDataSyncAccountService } from '../../common/userDataSyncAccount.js';\nimport { UserDataSyncLocalStoreService } from '../../common/userDataSyncLocalStoreService.js';\nimport { IUserDataSyncMachinesService, UserDataSyncMachinesService } from '../../common/userDataSyncMachines.js';\nimport { UserDataSyncEnablementService } from '../../common/userDataSyncEnablementService.js';\nimport { UserDataSyncService } from '../../common/userDataSyncService.js';\nimport { UserDataSyncStoreManagementService, UserDataSyncStoreService } from '../../common/userDataSyncStoreService.js';\nimport { InMemoryUserDataProfilesService, IUserDataProfile, IUserDataProfilesService } from '../../../userDataProfile/common/userDataProfile.js';\nimport { NullPolicyService } from '../../../policy/common/policy.js';\nimport { IUserDataProfileStorageService } from '../../../userDataProfile/common/userDataProfileStorageService.js';\nimport { TestUserDataProfileStorageService } from '../../../userDataProfile/test/common/userDataProfileStorageService.test.js';\n\nexport class UserDataSyncClient extends Disposable {\n\n\treadonly instantiationService: TestInstantiationService;\n\n\tconstructor(readonly testServer: UserDataSyncTestServer = new UserDataSyncTestServer()) {\n\t\tsuper();\n\t\tthis.instantiationService = this._register(new TestInstantiationService());\n\t}\n\n\tasync setUp(empty: boolean = false): Promise<void> {\n\t\tthis._register(registerConfiguration());\n\n\t\tconst logService = this.instantiationService.stub(ILogService, new NullLogService());\n\n\t\tconst userRoamingDataHome = URI.file('userdata').with({ scheme: Schemas.inMemory });\n\t\tconst userDataSyncHome = joinPath(userRoamingDataHome, '.sync');\n\t\tconst environmentService = this.instantiationService.stub(IEnvironmentService, {\n\t\t\tuserDataSyncHome,\n\t\t\tuserRoamingDataHome,\n\t\t\tcacheHome: joinPath(userRoamingDataHome, 'cache'),\n\t\t\targvResource: joinPath(userRoamingDataHome, 'argv.json'),\n\t\t\tsync: 'on',\n\t\t});\n\n\t\tthis.instantiationService.stub(IProductService, {\n\t\t\t_serviceBrand: undefined, ...product, ...{\n\t\t\t\t'configurationSync.store': {\n\t\t\t\t\turl: this.testServer.url,\n\t\t\t\t\tstableUrl: this.testServer.url,\n\t\t\t\t\tinsidersUrl: this.testServer.url,\n\t\t\t\t\tcanSwitch: false,\n\t\t\t\t\tauthenticationProviders: { 'test': { scopes: [] } }\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst fileService = this._register(new FileService(logService));\n\t\tthis._register(fileService.registerProvider(Schemas.inMemory, this._register(new InMemoryFileSystemProvider())));\n\t\tthis._register(fileService.registerProvider(USER_DATA_SYNC_SCHEME, this._register(new InMemoryFileSystemProvider())));\n\t\tthis.instantiationService.stub(IFileService, fileService);\n\n\t\tconst uriIdentityService = this._register(this.instantiationService.createInstance(UriIdentityService));\n\t\tthis.instantiationService.stub(IUriIdentityService, uriIdentityService);\n\n\t\tconst userDataProfilesService = this._register(new InMemoryUserDataProfilesService(environmentService, fileService, uriIdentityService, logService));\n\t\tthis.instantiationService.stub(IUserDataProfilesService, userDataProfilesService);\n\n\t\tconst storageService = this._register(new TestStorageService(userDataProfilesService.defaultProfile));\n\t\tthis.instantiationService.stub(IStorageService, this._register(storageService));\n\t\tthis.instantiationService.stub(IUserDataProfileStorageService, this._register(new TestUserDataProfileStorageService(false, storageService)));\n\n\t\tconst configurationService = this._register(new ConfigurationService(userDataProfilesService.defaultProfile.settingsResource, fileService, new NullPolicyService(), logService));\n\t\tawait configurationService.initialize();\n\t\tthis.instantiationService.stub(IConfigurationService, configurationService);\n\n\t\tthis.instantiationService.stub(IRequestService, this.testServer);\n\n\t\tthis.instantiationService.stub(IUserDataSyncLogService, logService);\n\t\tthis.instantiationService.stub(ITelemetryService, NullTelemetryService);\n\t\tthis.instantiationService.stub(IUserDataSyncStoreManagementService, this._register(this.instantiationService.createInstance(UserDataSyncStoreManagementService)));\n\t\tthis.instantiationService.stub(IUserDataSyncStoreService, this._register(this.instantiationService.createInstance(UserDataSyncStoreService)));\n\n\t\tconst userDataSyncAccountService: IUserDataSyncAccountService = this._register(this.instantiationService.createInstance(UserDataSyncAccountService));\n\t\tawait userDataSyncAccountService.updateAccount({ authenticationProviderId: 'authenticationProviderId', token: 'token' });\n\t\tthis.instantiationService.stub(IUserDataSyncAccountService, userDataSyncAccountService);\n\n\t\tthis.instantiationService.stub(IUserDataSyncMachinesService, this._register(this.instantiationService.createInstance(UserDataSyncMachinesService)));\n\t\tthis.instantiationService.stub(IUserDataSyncLocalStoreService, this._register(this.instantiationService.createInstance(UserDataSyncLocalStoreService)));\n\t\tthis.instantiationService.stub(IUserDataSyncUtilService, new TestUserDataSyncUtilService());\n\t\tthis.instantiationService.stub(IUserDataSyncEnablementService, this._register(this.instantiationService.createInstance(UserDataSyncEnablementService)));\n\n\t\tthis.instantiationService.stub(IExtensionManagementService, {\n\t\t\tasync getInstalled() { return []; },\n\t\t\tonDidInstallExtensions: new Emitter<readonly InstallExtensionResult[]>().event,\n\t\t\tonDidUninstallExtension: new Emitter<DidUninstallExtensionEvent>().event,\n\t\t});\n\t\tthis.instantiationService.stub(IGlobalExtensionEnablementService, this._register(this.instantiationService.createInstance(GlobalExtensionEnablementService)));\n\t\tthis.instantiationService.stub(IExtensionStorageService, this._register(this.instantiationService.createInstance(ExtensionStorageService)));\n\t\tthis.instantiationService.stub(IIgnoredExtensionsManagementService, this.instantiationService.createInstance(IgnoredExtensionsManagementService));\n\t\tthis.instantiationService.stub(IExtensionGalleryService, {\n\t\t\tisEnabled() { return true; },\n\t\t\tasync getCompatibleExtension() { return null; }\n\t\t});\n\n\t\tthis.instantiationService.stub(IUserDataSyncService, this._register(this.instantiationService.createInstance(UserDataSyncService)));\n\n\t\tif (!empty) {\n\t\t\tawait fileService.writeFile(userDataProfilesService.defaultProfile.settingsResource, VSBuffer.fromString(JSON.stringify({})));\n\t\t\tawait fileService.writeFile(userDataProfilesService.defaultProfile.keybindingsResource, VSBuffer.fromString(JSON.stringify([])));\n\t\t\tawait fileService.writeFile(joinPath(userDataProfilesService.defaultProfile.snippetsHome, 'c.json'), VSBuffer.fromString(`{}`));\n\t\t\tawait fileService.writeFile(userDataProfilesService.defaultProfile.tasksResource, VSBuffer.fromString(`{}`));\n\t\t\tawait fileService.writeFile(environmentService.argvResource, VSBuffer.fromString(JSON.stringify({ 'locale': 'en' })));\n\t\t}\n\t\tawait configurationService.reloadConfiguration();\n\t}\n\n\tasync sync(): Promise<void> {\n\t\tawait (await this.instantiationService.get(IUserDataSyncService).createSyncTask(null)).run();\n\t}\n\n\tread(resource: SyncResource, collection?: string): Promise<IUserData> {\n\t\treturn this.instantiationService.get(IUserDataSyncStoreService).readResource(resource, null, collection);\n\t}\n\n\tasync getResourceManifest(): Promise<IUserDataResourceManifest | null> {\n\t\tconst manifest = await this.instantiationService.get(IUserDataSyncStoreService).manifest(null);\n\t\treturn manifest?.latest ?? null;\n\t}\n\n\tgetSynchronizer(source: SyncResource): IUserDataSynchroniser {\n\t\treturn (this.instantiationService.get(IUserDataSyncService) as UserDataSyncService).getOrCreateActiveProfileSynchronizer(this.instantiationService.get(IUserDataProfilesService).defaultProfile, undefined).enabled.find(s => s.resource === source)!;\n\t}\n\n}\n\nconst ALL_SERVER_RESOURCES: ServerResource[] = [...ALL_SYNC_RESOURCES, 'machines'];\n\nexport class UserDataSyncTestServer implements IRequestService {\n\n\t_serviceBrand: any;\n\n\treadonly url: string = 'http://host:3000';\n\tprivate session: string | null = null;\n\tprivate readonly collections = new Map<string, Map<ServerResource, IUserData>>();\n\tprivate readonly data = new Map<ServerResource, IUserData>();\n\n\tprivate _requests: { url: string; type: string; headers?: IHeaders }[] = [];\n\tget requests(): { url: string; type: string; headers?: IHeaders }[] { return this._requests; }\n\n\tprivate _requestsWithAllHeaders: { url: string; type: string; headers?: IHeaders }[] = [];\n\tget requestsWithAllHeaders(): { url: string; type: string; headers?: IHeaders }[] { return this._requestsWithAllHeaders; }\n\n\tprivate _responses: { status: number }[] = [];\n\tget responses(): { status: number }[] { return this._responses; }\n\treset(): void { this._requests = []; this._responses = []; this._requestsWithAllHeaders = []; }\n\n\tprivate manifestRef = 0;\n\tprivate collectionCounter = 0;\n\n\tconstructor(private readonly rateLimit = Number.MAX_SAFE_INTEGER, private readonly retryAfter?: number) { }\n\n\tasync resolveProxy(url: string): Promise<string | undefined> { return url; }\n\tasync lookupAuthorization(authInfo: AuthInfo): Promise<Credentials | undefined> { return undefined; }\n\tasync lookupKerberosAuthorization(url: string): Promise<string | undefined> { return undefined; }\n\tasync loadCertificates(): Promise<string[]> { return []; }\n\n\tasync request(options: IRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\t\tif (this._requests.length === this.rateLimit) {\n\t\t\treturn this.toResponse(429, this.retryAfter ? { 'retry-after': `${this.retryAfter}` } : undefined);\n\t\t}\n\t\tconst headers: IHeaders = {};\n\t\tif (options.headers) {\n\t\t\tif (options.headers['If-None-Match']) {\n\t\t\t\theaders['If-None-Match'] = options.headers['If-None-Match'];\n\t\t\t}\n\t\t\tif (options.headers['If-Match']) {\n\t\t\t\theaders['If-Match'] = options.headers['If-Match'];\n\t\t\t}\n\t\t}\n\t\tthis._requests.push({ url: options.url!, type: options.type!, headers });\n\t\tthis._requestsWithAllHeaders.push({ url: options.url!, type: options.type!, headers: options.headers });\n\t\tconst requestContext = await this.doRequest(options);\n\t\tthis._responses.push({ status: requestContext.res.statusCode! });\n\t\treturn requestContext;\n\t}\n\n\tprivate async doRequest(options: IRequestOptions): Promise<IRequestContext> {\n\t\tconst versionUrl = `${this.url}/v1/`;\n\t\tconst relativePath = options.url!.indexOf(versionUrl) === 0 ? options.url!.substring(versionUrl.length) : undefined;\n\t\tconst segments = relativePath ? relativePath.split('/') : [];\n\t\tif (options.type === 'GET' && segments.length === 1 && segments[0] === 'manifest') {\n\t\t\treturn this.getManifest(options.headers);\n\t\t}\n\t\tif (options.type === 'GET' && segments.length === 3 && segments[0] === 'resource') {\n\t\t\treturn this.getResourceData(undefined, segments[1], segments[2] === 'latest' ? undefined : segments[2], options.headers);\n\t\t}\n\t\tif (options.type === 'POST' && segments.length === 2 && segments[0] === 'resource') {\n\t\t\treturn this.writeData(undefined, segments[1], options.data, options.headers);\n\t\t}\n\t\t// resources in collection\n\t\tif (options.type === 'GET' && segments.length === 5 && segments[0] === 'collection' && segments[2] === 'resource') {\n\t\t\treturn this.getResourceData(segments[1], segments[3], segments[4] === 'latest' ? undefined : segments[4], options.headers);\n\t\t}\n\t\tif (options.type === 'POST' && segments.length === 4 && segments[0] === 'collection' && segments[2] === 'resource') {\n\t\t\treturn this.writeData(segments[1], segments[3], options.data, options.headers);\n\t\t}\n\t\tif (options.type === 'DELETE' && segments.length === 2 && segments[0] === 'resource') {\n\t\t\treturn this.deleteResourceData(undefined, segments[1]);\n\t\t}\n\t\tif (options.type === 'DELETE' && segments.length === 1 && segments[0] === 'resource') {\n\t\t\treturn this.clear(options.headers);\n\t\t}\n\t\tif (options.type === 'DELETE' && segments[0] === 'collection') {\n\t\t\treturn this.toResponse(204);\n\t\t}\n\t\tif (options.type === 'POST' && segments.length === 1 && segments[0] === 'collection') {\n\t\t\treturn this.createCollection();\n\t\t}\n\t\treturn this.toResponse(501);\n\t}\n\n\tprivate async getManifest(headers?: IHeaders): Promise<IRequestContext> {\n\t\tif (this.session) {\n\t\t\tconst latest: Record<ServerResource, string> = Object.create({});\n\t\t\tthis.data.forEach((value, key) => latest[key] = value.ref);\n\t\t\tlet collection: IUserDataCollectionManifest | undefined = undefined;\n\t\t\tif (this.collectionCounter) {\n\t\t\t\tcollection = {};\n\t\t\t\tfor (let collectionId = 1; collectionId <= this.collectionCounter; collectionId++) {\n\t\t\t\t\tconst collectionData = this.collections.get(`${collectionId}`);\n\t\t\t\t\tif (collectionData) {\n\t\t\t\t\t\tconst latest: Record<ServerResource, string> = Object.create({});\n\t\t\t\t\t\tcollectionData.forEach((value, key) => latest[key] = value.ref);\n\t\t\t\t\t\tcollection[`${collectionId}`] = { latest };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst manifest = { session: this.session, latest, collection };\n\t\t\treturn this.toResponse(200, { 'Content-Type': 'application/json', etag: `${this.manifestRef++}` }, JSON.stringify(manifest));\n\t\t}\n\t\treturn this.toResponse(204, { etag: `${this.manifestRef++}` });\n\t}\n\n\tprivate async getResourceData(collection: string | undefined, resource: string, ref?: string, headers: IHeaders = {}): Promise<IRequestContext> {\n\t\tconst collectionData = collection ? this.collections.get(collection) : this.data;\n\t\tif (!collectionData) {\n\t\t\treturn this.toResponse(501);\n\t\t}\n\n\t\tconst resourceKey = ALL_SERVER_RESOURCES.find(key => key === resource);\n\t\tif (resourceKey) {\n\t\t\tconst data = collectionData.get(resourceKey);\n\t\t\tif (ref && data?.ref !== ref) {\n\t\t\t\treturn this.toResponse(404);\n\t\t\t}\n\t\t\tif (!data) {\n\t\t\t\treturn this.toResponse(204, { etag: '0' });\n\t\t\t}\n\t\t\tif (headers['If-None-Match'] === data.ref) {\n\t\t\t\treturn this.toResponse(304);\n\t\t\t}\n\t\t\treturn this.toResponse(200, { etag: data.ref }, data.content || '');\n\t\t}\n\t\treturn this.toResponse(204);\n\t}\n\n\tprivate async writeData(collection: string | undefined, resource: string, content: string = '', headers: IHeaders = {}): Promise<IRequestContext> {\n\t\tif (!this.session) {\n\t\t\tthis.session = generateUuid();\n\t\t}\n\t\tconst collectionData = collection ? this.collections.get(collection) : this.data;\n\t\tif (!collectionData) {\n\t\t\treturn this.toResponse(501);\n\t\t}\n\t\tconst resourceKey = ALL_SERVER_RESOURCES.find(key => key === resource);\n\t\tif (resourceKey) {\n\t\t\tconst data = collectionData.get(resourceKey);\n\t\t\tif (headers['If-Match'] !== undefined && headers['If-Match'] !== (data ? data.ref : '0')) {\n\t\t\t\treturn this.toResponse(412);\n\t\t\t}\n\t\t\tconst ref = `${parseInt(data?.ref || '0') + 1}`;\n\t\t\tcollectionData.set(resourceKey, { ref, content });\n\t\t\treturn this.toResponse(200, { etag: ref });\n\t\t}\n\t\treturn this.toResponse(204);\n\t}\n\n\tprivate async deleteResourceData(collection: string | undefined, resource: string, headers: IHeaders = {}): Promise<IRequestContext> {\n\t\tconst collectionData = collection ? this.collections.get(collection) : this.data;\n\t\tif (!collectionData) {\n\t\t\treturn this.toResponse(501);\n\t\t}\n\n\t\tconst resourceKey = ALL_SERVER_RESOURCES.find(key => key === resource);\n\t\tif (resourceKey) {\n\t\t\tcollectionData.delete(resourceKey);\n\t\t\treturn this.toResponse(200);\n\t\t}\n\n\t\treturn this.toResponse(404);\n\t}\n\n\tprivate async createCollection(): Promise<IRequestContext> {\n\t\tconst collectionId = `${++this.collectionCounter}`;\n\t\tthis.collections.set(collectionId, new Map());\n\t\treturn this.toResponse(200, {}, collectionId);\n\t}\n\n\tasync clear(headers?: IHeaders): Promise<IRequestContext> {\n\t\tthis.collections.clear();\n\t\tthis.data.clear();\n\t\tthis.session = null;\n\t\tthis.collectionCounter = 0;\n\t\treturn this.toResponse(204);\n\t}\n\n\tprivate toResponse(statusCode: number, headers?: IHeaders, data?: string): IRequestContext {\n\t\treturn {\n\t\t\tres: {\n\t\t\t\theaders: headers || {},\n\t\t\t\tstatusCode\n\t\t\t},\n\t\t\tstream: bufferToStream(VSBuffer.fromString(data || ''))\n\t\t};\n\t}\n}\n\nexport class TestUserDataSyncUtilService implements IUserDataSyncUtilService {\n\n\t_serviceBrand: any;\n\n\tasync resolveDefaultCoreIgnoredSettings(): Promise<string[]> {\n\t\treturn getDefaultIgnoredSettings();\n\t}\n\n\tasync resolveUserBindings(userbindings: string[]): Promise<IStringDictionary<string>> {\n\t\tconst keys: IStringDictionary<string> = {};\n\t\tfor (const keybinding of userbindings) {\n\t\t\tkeys[keybinding] = keybinding;\n\t\t}\n\t\treturn keys;\n\t}\n\n\tasync resolveFormattingOptions(file?: URI): Promise<FormattingOptions> {\n\t\treturn { eol: '\\n', insertSpaces: false, tabSize: 4 };\n\t}\n\n}\n\nclass TestStorageService extends InMemoryStorageService {\n\tconstructor(private readonly profileStorageProfile: IUserDataProfile) {\n\t\tsuper();\n\t}\n\toverride hasScope(profile: IUserDataProfile): boolean {\n\t\treturn this.profileStorageProfile.id === profile.id;\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,gBAAgB,gBAAgB;AACzC,SAAS,yBAAyB;AAClC,SAAS,yBAAyB;AAClC,SAAS,eAAe;AACxB,SAAS,yBAAyB;AAClC,SAAS,kBAAkB;AAC3B,SAAS,eAAe;AACxB,SAAS,gBAAgB;AACzB,SAAS,WAAW;AACpB,SAAS,oBAAoB;AAC7B,SAAS,UAAU,iBAAiB,uBAAuB;AAC3D,SAAS,6BAA6B;AACtC,SAAS,4BAA4B;AACrC,SAAS,2BAA2B;AACpC,SAAS,wCAAwC;AACjD,SAAS,4BAA4B,0BAA0B,6BAA6B,mCAAmC,8BAA8B;AAC7J,SAAS,oBAAoB;AAC7B,SAAS,mBAAmB;AAC5B,SAAS,kCAAkC;AAC3C,SAAS,gCAAgC;AACzC,SAAS,aAAa,sBAAsB;AAC5C,OAAO,aAAa;AACpB,SAAS,uBAAuB;AAChC,SAAS,UAAU,aAAa,uBAAuB;AACvD,SAAS,wBAAwB,uBAAuB;AACxD,SAAS,yBAAyB;AAClC,SAAS,4BAA4B;AACrC,SAAS,2BAA2B;AACpC,SAAS,0BAA0B;AACnC,SAAS,yBAAyB,gCAAgC;AAClE,SAAS,oCAAoC,2CAA2C;AACxF,SAAS,oBAAoB,2BAA2B,WAAW,gCAAgC,yBAAyB,gCAAgC,sBAAsB,qCAAqC,2BAA2B,0BAA0B,uBAAuB,gBAAgB,cAAc,uBAAuB,2BAA2B,6BAA6B,6BAA6B;AAC7a,SAAS,6BAA6B,kCAAkC;AACxE,SAAS,qCAAqC;AAC9C,SAAS,8BAA8B,mCAAmC;AAC1E,SAAS,qCAAqC;AAC9C,SAAS,2BAA2B;AACpC,SAAS,oCAAoC,gCAAgC;AAC7E,SAAS,iCAAiC,kBAAkB,gCAAgC;AAC5F,SAAS,yBAAyB;AAClC,SAAS,sCAAsC;AAC/C,SAAS,yCAAyC;AAE3C,MAAM,2BAA2B,WAAW;AAAA,EAIlD,YAAqB,aAAqC,IAAI,uBAAuB,GAAG;AACvF,UAAM;AADc;AAEpB,SAAK,uBAAuB,KAAK,UAAU,IAAI,yBAAyB,CAAC;AAAA,EAC1E;AAAA,EAvDD,OAgDmD;AAAA;AAAA;AAAA,EAEzC;AAAA,EAOT,MAAM,MAAM,QAAiB,OAAsB;AAClD,SAAK,UAAU,sBAAsB,CAAC;AAEtC,UAAM,aAAa,KAAK,qBAAqB,KAAK,aAAa,IAAI,eAAe,CAAC;AAEnF,UAAM,sBAAsB,IAAI,KAAK,UAAU,EAAE,KAAK,EAAE,QAAQ,QAAQ,SAAS,CAAC;AAClF,UAAM,mBAAmB,SAAS,qBAAqB,OAAO;AAC9D,UAAM,qBAAqB,KAAK,qBAAqB,KAAK,qBAAqB;AAAA,MAC9E;AAAA,MACA;AAAA,MACA,WAAW,SAAS,qBAAqB,OAAO;AAAA,MAChD,cAAc,SAAS,qBAAqB,WAAW;AAAA,MACvD,MAAM;AAAA,IACP,CAAC;AAED,SAAK,qBAAqB,KAAK,iBAAiB;AAAA,MAC/C,eAAe;AAAA,MAAW,GAAG;AAAA,MAAS,GAAG;AAAA,QACxC,2BAA2B;AAAA,UAC1B,KAAK,KAAK,WAAW;AAAA,UACrB,WAAW,KAAK,WAAW;AAAA,UAC3B,aAAa,KAAK,WAAW;AAAA,UAC7B,WAAW;AAAA,UACX,yBAAyB,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAAE,EAAE;AAAA,QACnD;AAAA,MACD;AAAA,IACD,CAAC;AAED,UAAM,cAAc,KAAK,UAAU,IAAI,YAAY,UAAU,CAAC;AAC9D,SAAK,UAAU,YAAY,iBAAiB,QAAQ,UAAU,KAAK,UAAU,IAAI,2BAA2B,CAAC,CAAC,CAAC;AAC/G,SAAK,UAAU,YAAY,iBAAiB,uBAAuB,KAAK,UAAU,IAAI,2BAA2B,CAAC,CAAC,CAAC;AACpH,SAAK,qBAAqB,KAAK,cAAc,WAAW;AAExD,UAAM,qBAAqB,KAAK,UAAU,KAAK,qBAAqB,eAAe,kBAAkB,CAAC;AACtG,SAAK,qBAAqB,KAAK,qBAAqB,kBAAkB;AAEtE,UAAM,0BAA0B,KAAK,UAAU,IAAI,gCAAgC,oBAAoB,aAAa,oBAAoB,UAAU,CAAC;AACnJ,SAAK,qBAAqB,KAAK,0BAA0B,uBAAuB;AAEhF,UAAM,iBAAiB,KAAK,UAAU,IAAI,mBAAmB,wBAAwB,cAAc,CAAC;AACpG,SAAK,qBAAqB,KAAK,iBAAiB,KAAK,UAAU,cAAc,CAAC;AAC9E,SAAK,qBAAqB,KAAK,gCAAgC,KAAK,UAAU,IAAI,kCAAkC,OAAO,cAAc,CAAC,CAAC;AAE3I,UAAM,uBAAuB,KAAK,UAAU,IAAI,qBAAqB,wBAAwB,eAAe,kBAAkB,aAAa,IAAI,kBAAkB,GAAG,UAAU,CAAC;AAC/K,UAAM,qBAAqB,WAAW;AACtC,SAAK,qBAAqB,KAAK,uBAAuB,oBAAoB;AAE1E,SAAK,qBAAqB,KAAK,iBAAiB,KAAK,UAAU;AAE/D,SAAK,qBAAqB,KAAK,yBAAyB,UAAU;AAClE,SAAK,qBAAqB,KAAK,mBAAmB,oBAAoB;AACtE,SAAK,qBAAqB,KAAK,qCAAqC,KAAK,UAAU,KAAK,qBAAqB,eAAe,kCAAkC,CAAC,CAAC;AAChK,SAAK,qBAAqB,KAAK,2BAA2B,KAAK,UAAU,KAAK,qBAAqB,eAAe,wBAAwB,CAAC,CAAC;AAE5I,UAAM,6BAA0D,KAAK,UAAU,KAAK,qBAAqB,eAAe,0BAA0B,CAAC;AACnJ,UAAM,2BAA2B,cAAc,EAAE,0BAA0B,4BAA4B,OAAO,QAAQ,CAAC;AACvH,SAAK,qBAAqB,KAAK,6BAA6B,0BAA0B;AAEtF,SAAK,qBAAqB,KAAK,8BAA8B,KAAK,UAAU,KAAK,qBAAqB,eAAe,2BAA2B,CAAC,CAAC;AAClJ,SAAK,qBAAqB,KAAK,gCAAgC,KAAK,UAAU,KAAK,qBAAqB,eAAe,6BAA6B,CAAC,CAAC;AACtJ,SAAK,qBAAqB,KAAK,0BAA0B,IAAI,4BAA4B,CAAC;AAC1F,SAAK,qBAAqB,KAAK,gCAAgC,KAAK,UAAU,KAAK,qBAAqB,eAAe,6BAA6B,CAAC,CAAC;AAEtJ,SAAK,qBAAqB,KAAK,6BAA6B;AAAA,MAC3D,MAAM,eAAe;AAAE,eAAO,CAAC;AAAA,MAAG;AAAA,MAClC,wBAAwB,IAAI,QAA2C,EAAE;AAAA,MACzE,yBAAyB,IAAI,QAAoC,EAAE;AAAA,IACpE,CAAC;AACD,SAAK,qBAAqB,KAAK,mCAAmC,KAAK,UAAU,KAAK,qBAAqB,eAAe,gCAAgC,CAAC,CAAC;AAC5J,SAAK,qBAAqB,KAAK,0BAA0B,KAAK,UAAU,KAAK,qBAAqB,eAAe,uBAAuB,CAAC,CAAC;AAC1I,SAAK,qBAAqB,KAAK,qCAAqC,KAAK,qBAAqB,eAAe,kCAAkC,CAAC;AAChJ,SAAK,qBAAqB,KAAK,0BAA0B;AAAA,MACxD,YAAY;AAAE,eAAO;AAAA,MAAM;AAAA,MAC3B,MAAM,yBAAyB;AAAE,eAAO;AAAA,MAAM;AAAA,IAC/C,CAAC;AAED,SAAK,qBAAqB,KAAK,sBAAsB,KAAK,UAAU,KAAK,qBAAqB,eAAe,mBAAmB,CAAC,CAAC;AAElI,QAAI,CAAC,OAAO;AACX,YAAM,YAAY,UAAU,wBAAwB,eAAe,kBAAkB,SAAS,WAAW,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC;AAC5H,YAAM,YAAY,UAAU,wBAAwB,eAAe,qBAAqB,SAAS,WAAW,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC;AAC/H,YAAM,YAAY,UAAU,SAAS,wBAAwB,eAAe,cAAc,QAAQ,GAAG,SAAS,WAAW,IAAI,CAAC;AAC9H,YAAM,YAAY,UAAU,wBAAwB,eAAe,eAAe,SAAS,WAAW,IAAI,CAAC;AAC3G,YAAM,YAAY,UAAU,mBAAmB,cAAc,SAAS,WAAW,KAAK,UAAU,EAAE,UAAU,KAAK,CAAC,CAAC,CAAC;AAAA,IACrH;AACA,UAAM,qBAAqB,oBAAoB;AAAA,EAChD;AAAA,EAEA,MAAM,OAAsB;AAC3B,WAAO,MAAM,KAAK,qBAAqB,IAAI,oBAAoB,EAAE,eAAe,IAAI,GAAG,IAAI;AAAA,EAC5F;AAAA,EAEA,KAAK,UAAwB,YAAyC;AACrE,WAAO,KAAK,qBAAqB,IAAI,yBAAyB,EAAE,aAAa,UAAU,MAAM,UAAU;AAAA,EACxG;AAAA,EAEA,MAAM,sBAAiE;AACtE,UAAM,WAAW,MAAM,KAAK,qBAAqB,IAAI,yBAAyB,EAAE,SAAS,IAAI;AAC7F,WAAO,UAAU,UAAU;AAAA,EAC5B;AAAA,EAEA,gBAAgB,QAA6C;AAC5D,WAAQ,KAAK,qBAAqB,IAAI,oBAAoB,EAA0B,qCAAqC,KAAK,qBAAqB,IAAI,wBAAwB,EAAE,gBAAgB,MAAS,EAAE,QAAQ,KAAK,OAAK,EAAE,aAAa,MAAM;AAAA,EACpP;AAED;AAEA,MAAM,uBAAyC,CAAC,GAAG,oBAAoB,UAAU;AAE1E,MAAM,uBAAkD;AAAA,EAsB9D,YAA6B,YAAY,OAAO,kBAAmC,YAAqB;AAA3E;AAAsD;AAAA,EAAuB;AAAA,EA3L3G,OAqK+D;AAAA;AAAA;AAAA,EAE9D;AAAA,EAES,MAAc;AAAA,EACf,UAAyB;AAAA,EAChB,cAAc,oBAAI,IAA4C;AAAA,EAC9D,OAAO,oBAAI,IAA+B;AAAA,EAEnD,YAAiE,CAAC;AAAA,EAC1E,IAAI,WAAgE;AAAE,WAAO,KAAK;AAAA,EAAW;AAAA,EAErF,0BAA+E,CAAC;AAAA,EACxF,IAAI,yBAA8E;AAAE,WAAO,KAAK;AAAA,EAAyB;AAAA,EAEjH,aAAmC,CAAC;AAAA,EAC5C,IAAI,YAAkC;AAAE,WAAO,KAAK;AAAA,EAAY;AAAA,EAChE,QAAc;AAAE,SAAK,YAAY,CAAC;AAAG,SAAK,aAAa,CAAC;AAAG,SAAK,0BAA0B,CAAC;AAAA,EAAG;AAAA,EAEtF,cAAc;AAAA,EACd,oBAAoB;AAAA,EAI5B,MAAM,aAAa,KAA0C;AAAE,WAAO;AAAA,EAAK;AAAA,EAC3E,MAAM,oBAAoB,UAAsD;AAAE,WAAO;AAAA,EAAW;AAAA,EACpG,MAAM,4BAA4B,KAA0C;AAAE,WAAO;AAAA,EAAW;AAAA,EAChG,MAAM,mBAAsC;AAAE,WAAO,CAAC;AAAA,EAAG;AAAA,EAEzD,MAAM,QAAQ,SAA0B,OAAoD;AAC3F,QAAI,KAAK,UAAU,WAAW,KAAK,WAAW;AAC7C,aAAO,KAAK,WAAW,KAAK,KAAK,aAAa,EAAE,eAAe,GAAG,KAAK,UAAU,GAAG,IAAI,MAAS;AAAA,IAClG;AACA,UAAM,UAAoB,CAAC;AAC3B,QAAI,QAAQ,SAAS;AACpB,UAAI,QAAQ,QAAQ,eAAe,GAAG;AACrC,gBAAQ,eAAe,IAAI,QAAQ,QAAQ,eAAe;AAAA,MAC3D;AACA,UAAI,QAAQ,QAAQ,UAAU,GAAG;AAChC,gBAAQ,UAAU,IAAI,QAAQ,QAAQ,UAAU;AAAA,MACjD;AAAA,IACD;AACA,SAAK,UAAU,KAAK,EAAE,KAAK,QAAQ,KAAM,MAAM,QAAQ,MAAO,QAAQ,CAAC;AACvE,SAAK,wBAAwB,KAAK,EAAE,KAAK,QAAQ,KAAM,MAAM,QAAQ,MAAO,SAAS,QAAQ,QAAQ,CAAC;AACtG,UAAM,iBAAiB,MAAM,KAAK,UAAU,OAAO;AACnD,SAAK,WAAW,KAAK,EAAE,QAAQ,eAAe,IAAI,WAAY,CAAC;AAC/D,WAAO;AAAA,EACR;AAAA,EAEA,MAAc,UAAU,SAAoD;AAC3E,UAAM,aAAa,GAAG,KAAK,GAAG;AAC9B,UAAM,eAAe,QAAQ,IAAK,QAAQ,UAAU,MAAM,IAAI,QAAQ,IAAK,UAAU,WAAW,MAAM,IAAI;AAC1G,UAAM,WAAW,eAAe,aAAa,MAAM,GAAG,IAAI,CAAC;AAC3D,QAAI,QAAQ,SAAS,SAAS,SAAS,WAAW,KAAK,SAAS,CAAC,MAAM,YAAY;AAClF,aAAO,KAAK,YAAY,QAAQ,OAAO;AAAA,IACxC;AACA,QAAI,QAAQ,SAAS,SAAS,SAAS,WAAW,KAAK,SAAS,CAAC,MAAM,YAAY;AAClF,aAAO,KAAK,gBAAgB,QAAW,SAAS,CAAC,GAAG,SAAS,CAAC,MAAM,WAAW,SAAY,SAAS,CAAC,GAAG,QAAQ,OAAO;AAAA,IACxH;AACA,QAAI,QAAQ,SAAS,UAAU,SAAS,WAAW,KAAK,SAAS,CAAC,MAAM,YAAY;AACnF,aAAO,KAAK,UAAU,QAAW,SAAS,CAAC,GAAG,QAAQ,MAAM,QAAQ,OAAO;AAAA,IAC5E;AAEA,QAAI,QAAQ,SAAS,SAAS,SAAS,WAAW,KAAK,SAAS,CAAC,MAAM,gBAAgB,SAAS,CAAC,MAAM,YAAY;AAClH,aAAO,KAAK,gBAAgB,SAAS,CAAC,GAAG,SAAS,CAAC,GAAG,SAAS,CAAC,MAAM,WAAW,SAAY,SAAS,CAAC,GAAG,QAAQ,OAAO;AAAA,IAC1H;AACA,QAAI,QAAQ,SAAS,UAAU,SAAS,WAAW,KAAK,SAAS,CAAC,MAAM,gBAAgB,SAAS,CAAC,MAAM,YAAY;AACnH,aAAO,KAAK,UAAU,SAAS,CAAC,GAAG,SAAS,CAAC,GAAG,QAAQ,MAAM,QAAQ,OAAO;AAAA,IAC9E;AACA,QAAI,QAAQ,SAAS,YAAY,SAAS,WAAW,KAAK,SAAS,CAAC,MAAM,YAAY;AACrF,aAAO,KAAK,mBAAmB,QAAW,SAAS,CAAC,CAAC;AAAA,IACtD;AACA,QAAI,QAAQ,SAAS,YAAY,SAAS,WAAW,KAAK,SAAS,CAAC,MAAM,YAAY;AACrF,aAAO,KAAK,MAAM,QAAQ,OAAO;AAAA,IAClC;AACA,QAAI,QAAQ,SAAS,YAAY,SAAS,CAAC,MAAM,cAAc;AAC9D,aAAO,KAAK,WAAW,GAAG;AAAA,IAC3B;AACA,QAAI,QAAQ,SAAS,UAAU,SAAS,WAAW,KAAK,SAAS,CAAC,MAAM,cAAc;AACrF,aAAO,KAAK,iBAAiB;AAAA,IAC9B;AACA,WAAO,KAAK,WAAW,GAAG;AAAA,EAC3B;AAAA,EAEA,MAAc,YAAY,SAA8C;AACvE,QAAI,KAAK,SAAS;AACjB,YAAM,SAAyC,uBAAO,OAAO,CAAC,CAAC;AAC/D,WAAK,KAAK,QAAQ,CAAC,OAAO,QAAQ,OAAO,GAAG,IAAI,MAAM,GAAG;AACzD,UAAI,aAAsD;AAC1D,UAAI,KAAK,mBAAmB;AAC3B,qBAAa,CAAC;AACd,iBAAS,eAAe,GAAG,gBAAgB,KAAK,mBAAmB,gBAAgB;AAClF,gBAAM,iBAAiB,KAAK,YAAY,IAAI,GAAG,YAAY,EAAE;AAC7D,cAAI,gBAAgB;AACnB,kBAAMA,UAAyC,uBAAO,OAAO,CAAC,CAAC;AAC/D,2BAAe,QAAQ,CAAC,OAAO,QAAQA,QAAO,GAAG,IAAI,MAAM,GAAG;AAC9D,uBAAW,GAAG,YAAY,EAAE,IAAI,EAAE,QAAAA,QAAO;AAAA,UAC1C;AAAA,QACD;AAAA,MACD;AACA,YAAM,WAAW,EAAE,SAAS,KAAK,SAAS,QAAQ,WAAW;AAC7D,aAAO,KAAK,WAAW,KAAK,EAAE,gBAAgB,oBAAoB,MAAM,GAAG,KAAK,aAAa,GAAG,GAAG,KAAK,UAAU,QAAQ,CAAC;AAAA,IAC5H;AACA,WAAO,KAAK,WAAW,KAAK,EAAE,MAAM,GAAG,KAAK,aAAa,GAAG,CAAC;AAAA,EAC9D;AAAA,EAEA,MAAc,gBAAgB,YAAgC,UAAkB,KAAc,UAAoB,CAAC,GAA6B;AAC/I,UAAM,iBAAiB,aAAa,KAAK,YAAY,IAAI,UAAU,IAAI,KAAK;AAC5E,QAAI,CAAC,gBAAgB;AACpB,aAAO,KAAK,WAAW,GAAG;AAAA,IAC3B;AAEA,UAAM,cAAc,qBAAqB,KAAK,SAAO,QAAQ,QAAQ;AACrE,QAAI,aAAa;AAChB,YAAM,OAAO,eAAe,IAAI,WAAW;AAC3C,UAAI,OAAO,MAAM,QAAQ,KAAK;AAC7B,eAAO,KAAK,WAAW,GAAG;AAAA,MAC3B;AACA,UAAI,CAAC,MAAM;AACV,eAAO,KAAK,WAAW,KAAK,EAAE,MAAM,IAAI,CAAC;AAAA,MAC1C;AACA,UAAI,QAAQ,eAAe,MAAM,KAAK,KAAK;AAC1C,eAAO,KAAK,WAAW,GAAG;AAAA,MAC3B;AACA,aAAO,KAAK,WAAW,KAAK,EAAE,MAAM,KAAK,IAAI,GAAG,KAAK,WAAW,EAAE;AAAA,IACnE;AACA,WAAO,KAAK,WAAW,GAAG;AAAA,EAC3B;AAAA,EAEA,MAAc,UAAU,YAAgC,UAAkB,UAAkB,IAAI,UAAoB,CAAC,GAA6B;AACjJ,QAAI,CAAC,KAAK,SAAS;AAClB,WAAK,UAAU,aAAa;AAAA,IAC7B;AACA,UAAM,iBAAiB,aAAa,KAAK,YAAY,IAAI,UAAU,IAAI,KAAK;AAC5E,QAAI,CAAC,gBAAgB;AACpB,aAAO,KAAK,WAAW,GAAG;AAAA,IAC3B;AACA,UAAM,cAAc,qBAAqB,KAAK,SAAO,QAAQ,QAAQ;AACrE,QAAI,aAAa;AAChB,YAAM,OAAO,eAAe,IAAI,WAAW;AAC3C,UAAI,QAAQ,UAAU,MAAM,UAAa,QAAQ,UAAU,OAAO,OAAO,KAAK,MAAM,MAAM;AACzF,eAAO,KAAK,WAAW,GAAG;AAAA,MAC3B;AACA,YAAM,MAAM,GAAG,SAAS,MAAM,OAAO,GAAG,IAAI,CAAC;AAC7C,qBAAe,IAAI,aAAa,EAAE,KAAK,QAAQ,CAAC;AAChD,aAAO,KAAK,WAAW,KAAK,EAAE,MAAM,IAAI,CAAC;AAAA,IAC1C;AACA,WAAO,KAAK,WAAW,GAAG;AAAA,EAC3B;AAAA,EAEA,MAAc,mBAAmB,YAAgC,UAAkB,UAAoB,CAAC,GAA6B;AACpI,UAAM,iBAAiB,aAAa,KAAK,YAAY,IAAI,UAAU,IAAI,KAAK;AAC5E,QAAI,CAAC,gBAAgB;AACpB,aAAO,KAAK,WAAW,GAAG;AAAA,IAC3B;AAEA,UAAM,cAAc,qBAAqB,KAAK,SAAO,QAAQ,QAAQ;AACrE,QAAI,aAAa;AAChB,qBAAe,OAAO,WAAW;AACjC,aAAO,KAAK,WAAW,GAAG;AAAA,IAC3B;AAEA,WAAO,KAAK,WAAW,GAAG;AAAA,EAC3B;AAAA,EAEA,MAAc,mBAA6C;AAC1D,UAAM,eAAe,GAAG,EAAE,KAAK,iBAAiB;AAChD,SAAK,YAAY,IAAI,cAAc,oBAAI,IAAI,CAAC;AAC5C,WAAO,KAAK,WAAW,KAAK,CAAC,GAAG,YAAY;AAAA,EAC7C;AAAA,EAEA,MAAM,MAAM,SAA8C;AACzD,SAAK,YAAY,MAAM;AACvB,SAAK,KAAK,MAAM;AAChB,SAAK,UAAU;AACf,SAAK,oBAAoB;AACzB,WAAO,KAAK,WAAW,GAAG;AAAA,EAC3B;AAAA,EAEQ,WAAW,YAAoB,SAAoB,MAAgC;AAC1F,WAAO;AAAA,MACN,KAAK;AAAA,QACJ,SAAS,WAAW,CAAC;AAAA,QACrB;AAAA,MACD;AAAA,MACA,QAAQ,eAAe,SAAS,WAAW,QAAQ,EAAE,CAAC;AAAA,IACvD;AAAA,EACD;AACD;AAEO,MAAM,4BAAgE;AAAA,EAnW7E,OAmW6E;AAAA;AAAA;AAAA,EAE5E;AAAA,EAEA,MAAM,oCAAuD;AAC5D,WAAO,0BAA0B;AAAA,EAClC;AAAA,EAEA,MAAM,oBAAoB,cAA4D;AACrF,UAAM,OAAkC,CAAC;AACzC,eAAW,cAAc,cAAc;AACtC,WAAK,UAAU,IAAI;AAAA,IACpB;AACA,WAAO;AAAA,EACR;AAAA,EAEA,MAAM,yBAAyB,MAAwC;AACtE,WAAO,EAAE,KAAK,MAAM,cAAc,OAAO,SAAS,EAAE;AAAA,EACrD;AAED;AAEA,MAAM,2BAA2B,uBAAuB;AAAA,EACvD,YAA6B,uBAAyC;AACrE,UAAM;AADsB;AAAA,EAE7B;AAAA,EA5XD,OAyXwD;AAAA;AAAA;AAAA,EAI9C,SAAS,SAAoC;AACrD,WAAO,KAAK,sBAAsB,OAAO,QAAQ;AAAA,EAClD;AACD;",
  "names": ["latest"]
}
