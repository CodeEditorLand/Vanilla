{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/userDataSync/test/common/userDataProfilesManifestSync.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { runWithFakedTimers } from '../../../../base/test/common/timeTravelScheduler.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\nimport { IUserDataProfilesService } from '../../../userDataProfile/common/userDataProfile.js';\nimport { UserDataProfilesManifestSynchroniser } from '../../common/userDataProfilesManifestSync.js';\nimport { ISyncData, ISyncUserDataProfile, IUserDataSyncStoreService, SyncResource, SyncStatus } from '../../common/userDataSync.js';\nimport { UserDataSyncClient, UserDataSyncTestServer } from './userDataSyncClient.js';\n\nsuite('UserDataProfilesManifestSync', () => {\n\n\tconst server = new UserDataSyncTestServer();\n\tlet testClient: UserDataSyncClient;\n\tlet client2: UserDataSyncClient;\n\n\tlet testObject: UserDataProfilesManifestSynchroniser;\n\n\tteardown(async () => {\n\t\tawait testClient.instantiationService.get(IUserDataSyncStoreService).clear();\n\t});\n\n\tconst disposableStore = ensureNoDisposablesAreLeakedInTestSuite();\n\n\tsetup(async () => {\n\t\ttestClient = disposableStore.add(new UserDataSyncClient(server));\n\t\tawait testClient.setUp(true);\n\t\ttestObject = testClient.getSynchronizer(SyncResource.Profiles) as UserDataProfilesManifestSynchroniser;\n\n\t\tclient2 = disposableStore.add(new UserDataSyncClient(server));\n\t\tawait client2.setUp(true);\n\t});\n\n\ttest('when profiles does not exist', async () => {\n\t\tawait runWithFakedTimers<void>({}, async () => {\n\t\t\tassert.deepStrictEqual(await testObject.getLastSyncUserData(), null);\n\t\t\tlet manifest = await testClient.getResourceManifest();\n\t\t\tserver.reset();\n\t\t\tawait testObject.sync(manifest);\n\n\t\t\tassert.deepStrictEqual(server.requests, [\n\t\t\t\t{ type: 'GET', url: `${server.url}/v1/resource/${testObject.resource}/latest`, headers: {} },\n\t\t\t]);\n\n\t\t\tconst lastSyncUserData = await testObject.getLastSyncUserData();\n\t\t\tconst remoteUserData = await testObject.getRemoteUserData(null);\n\t\t\tassert.deepStrictEqual(lastSyncUserData!.ref, remoteUserData.ref);\n\t\t\tassert.deepStrictEqual(lastSyncUserData!.syncData, remoteUserData.syncData);\n\t\t\tassert.strictEqual(lastSyncUserData!.syncData, null);\n\n\t\t\tmanifest = await testClient.getResourceManifest();\n\t\t\tserver.reset();\n\t\t\tawait testObject.sync(manifest);\n\t\t\tassert.deepStrictEqual(server.requests, []);\n\n\t\t\tmanifest = await testClient.getResourceManifest();\n\t\t\tserver.reset();\n\t\t\tawait testObject.sync(manifest);\n\t\t\tassert.deepStrictEqual(server.requests, []);\n\t\t});\n\t});\n\n\ttest('when profile is created after first sync', async () => {\n\t\tawait runWithFakedTimers<void>({}, async () => {\n\t\t\tawait testObject.sync(await testClient.getResourceManifest());\n\t\t\tawait testClient.instantiationService.get(IUserDataProfilesService).createProfile('1', '1');\n\n\t\t\tlet lastSyncUserData = await testObject.getLastSyncUserData();\n\t\t\tconst manifest = await testClient.getResourceManifest();\n\t\t\tserver.reset();\n\t\t\tawait testObject.sync(manifest);\n\n\t\t\tassert.deepStrictEqual(server.requests, [\n\t\t\t\t{ type: 'POST', url: `${server.url}/v1/collection`, headers: {} },\n\t\t\t\t{ type: 'POST', url: `${server.url}/v1/resource/${testObject.resource}`, headers: { 'If-Match': lastSyncUserData?.ref } },\n\t\t\t]);\n\n\t\t\tlastSyncUserData = await testObject.getLastSyncUserData();\n\t\t\tconst remoteUserData = await testObject.getRemoteUserData(null);\n\t\t\tassert.deepStrictEqual(lastSyncUserData!.ref, remoteUserData.ref);\n\t\t\tassert.deepStrictEqual(lastSyncUserData!.syncData, remoteUserData.syncData);\n\t\t\tassert.deepStrictEqual(JSON.parse(lastSyncUserData!.syncData!.content), [{ 'name': '1', 'id': '1', 'collection': '1' }]);\n\t\t});\n\t});\n\n\ttest('first time sync - outgoing to server (no state)', async () => {\n\t\tawait runWithFakedTimers<void>({}, async () => {\n\t\t\tawait testClient.instantiationService.get(IUserDataProfilesService).createProfile('1', '1');\n\n\t\t\tawait testObject.sync(await testClient.getResourceManifest());\n\t\t\tassert.strictEqual(testObject.status, SyncStatus.Idle);\n\t\t\tassert.deepStrictEqual(testObject.conflicts.conflicts, []);\n\n\t\t\tconst { content } = await testClient.read(testObject.resource);\n\t\t\tassert.ok(content !== null);\n\t\t\tassert.deepStrictEqual(JSON.parse(JSON.parse(content).content), [{ 'name': '1', 'id': '1', 'collection': '1' }]);\n\t\t});\n\t});\n\n\ttest('first time sync - incoming from server (no state)', async () => {\n\t\tawait runWithFakedTimers<void>({}, async () => {\n\t\t\tawait client2.instantiationService.get(IUserDataProfilesService).createProfile('1', 'name 1');\n\t\t\tawait client2.sync();\n\n\t\t\tawait testObject.sync(await testClient.getResourceManifest());\n\t\t\tassert.strictEqual(testObject.status, SyncStatus.Idle);\n\t\t\tassert.deepStrictEqual(testObject.conflicts.conflicts, []);\n\n\t\t\tconst profiles = getLocalProfiles(testClient);\n\t\t\tassert.deepStrictEqual(profiles, [{ id: '1', name: 'name 1', shortName: undefined, useDefaultFlags: undefined }]);\n\t\t});\n\t});\n\n\ttest('first time sync when profiles exists', async () => {\n\t\tawait runWithFakedTimers<void>({}, async () => {\n\t\t\tawait client2.instantiationService.get(IUserDataProfilesService).createProfile('1', 'name 1');\n\t\t\tawait client2.sync();\n\n\t\t\tawait testClient.instantiationService.get(IUserDataProfilesService).createProfile('2', 'name 2');\n\t\t\tawait testObject.sync(await testClient.getResourceManifest());\n\t\t\tassert.strictEqual(testObject.status, SyncStatus.Idle);\n\t\t\tassert.deepStrictEqual(testObject.conflicts.conflicts, []);\n\n\t\t\tconst profiles = getLocalProfiles(testClient);\n\t\t\tassert.deepStrictEqual(profiles, [{ id: '1', name: 'name 1', shortName: undefined, useDefaultFlags: undefined }, { id: '2', name: 'name 2', shortName: undefined, useDefaultFlags: undefined }]);\n\n\t\t\tconst { content } = await testClient.read(testObject.resource);\n\t\t\tassert.ok(content !== null);\n\t\t\tconst actual = parseRemoteProfiles(content);\n\t\t\tassert.deepStrictEqual(actual, [{ id: '1', name: 'name 1', collection: '1' }, { id: '2', name: 'name 2', collection: '2' }]);\n\t\t});\n\t});\n\n\ttest('first time sync when storage exists - has conflicts', async () => {\n\t\tawait runWithFakedTimers<void>({}, async () => {\n\t\t\tawait client2.instantiationService.get(IUserDataProfilesService).createProfile('1', 'name 1');\n\t\t\tawait client2.sync();\n\n\t\t\tawait testClient.instantiationService.get(IUserDataProfilesService).createProfile('1', 'name 2');\n\t\t\tawait testObject.sync(await testClient.getResourceManifest());\n\n\t\t\tassert.strictEqual(testObject.status, SyncStatus.Idle);\n\t\t\tassert.deepStrictEqual(testObject.conflicts.conflicts, []);\n\n\t\t\tconst profiles = getLocalProfiles(testClient);\n\t\t\tassert.deepStrictEqual(profiles, [{ id: '1', name: 'name 1', shortName: undefined, useDefaultFlags: undefined }]);\n\n\t\t\tconst { content } = await testClient.read(testObject.resource);\n\t\t\tassert.ok(content !== null);\n\t\t\tconst actual = parseRemoteProfiles(content);\n\t\t\tassert.deepStrictEqual(actual, [{ id: '1', name: 'name 1', collection: '1' }]);\n\t\t});\n\t});\n\n\ttest('sync adding a profile', async () => {\n\t\tawait runWithFakedTimers<void>({}, async () => {\n\t\t\tawait testClient.instantiationService.get(IUserDataProfilesService).createProfile('1', 'name 1', { shortName: 'short 1' });\n\t\t\tawait testObject.sync(await testClient.getResourceManifest());\n\t\t\tawait client2.sync();\n\n\t\t\tawait testClient.instantiationService.get(IUserDataProfilesService).createProfile('2', 'name 2');\n\t\t\tawait testObject.sync(await testClient.getResourceManifest());\n\t\t\tassert.strictEqual(testObject.status, SyncStatus.Idle);\n\t\t\tassert.deepStrictEqual(testObject.conflicts.conflicts, []);\n\t\t\tassert.deepStrictEqual(getLocalProfiles(testClient), [{ id: '1', name: 'name 1', shortName: 'short 1', useDefaultFlags: undefined }, { id: '2', name: 'name 2', shortName: undefined, useDefaultFlags: undefined }]);\n\n\t\t\tawait client2.sync();\n\t\t\tassert.deepStrictEqual(getLocalProfiles(client2), [{ id: '1', name: 'name 1', shortName: 'short 1', useDefaultFlags: undefined }, { id: '2', name: 'name 2', shortName: undefined, useDefaultFlags: undefined }]);\n\n\t\t\tconst { content } = await testClient.read(testObject.resource);\n\t\t\tassert.ok(content !== null);\n\t\t\tconst actual = parseRemoteProfiles(content);\n\t\t\tassert.deepStrictEqual(actual, [{ id: '1', name: 'name 1', collection: '1', shortName: 'short 1' }, { id: '2', name: 'name 2', collection: '2' }]);\n\t\t});\n\t});\n\n\ttest('sync updating a profile', async () => {\n\t\tawait runWithFakedTimers<void>({}, async () => {\n\t\t\tconst profile = await testClient.instantiationService.get(IUserDataProfilesService).createProfile('1', 'name 1');\n\t\t\tawait testObject.sync(await testClient.getResourceManifest());\n\t\t\tawait client2.sync();\n\n\t\t\tawait testClient.instantiationService.get(IUserDataProfilesService).updateProfile(profile, { name: 'name 2', shortName: '2' });\n\t\t\tawait testObject.sync(await testClient.getResourceManifest());\n\t\t\tassert.strictEqual(testObject.status, SyncStatus.Idle);\n\t\t\tassert.deepStrictEqual(testObject.conflicts.conflicts, []);\n\t\t\tassert.deepStrictEqual(getLocalProfiles(testClient), [{ id: '1', name: 'name 2', shortName: '2', useDefaultFlags: undefined }]);\n\n\t\t\tawait client2.sync();\n\t\t\tassert.deepStrictEqual(getLocalProfiles(client2), [{ id: '1', name: 'name 2', shortName: '2', useDefaultFlags: undefined }]);\n\n\t\t\tconst { content } = await testClient.read(testObject.resource);\n\t\t\tassert.ok(content !== null);\n\t\t\tconst actual = parseRemoteProfiles(content);\n\t\t\tassert.deepStrictEqual(actual, [{ id: '1', name: 'name 2', collection: '1', shortName: '2' }]);\n\t\t});\n\t});\n\n\ttest('sync removing a profile', async () => {\n\t\tawait runWithFakedTimers<void>({}, async () => {\n\t\t\tconst profile = await testClient.instantiationService.get(IUserDataProfilesService).createProfile('1', 'name 1');\n\t\t\tawait testClient.instantiationService.get(IUserDataProfilesService).createProfile('2', 'name 2');\n\t\t\tawait testObject.sync(await testClient.getResourceManifest());\n\t\t\tawait client2.sync();\n\n\t\t\ttestClient.instantiationService.get(IUserDataProfilesService).removeProfile(profile);\n\t\t\tawait testObject.sync(await testClient.getResourceManifest());\n\t\t\tassert.strictEqual(testObject.status, SyncStatus.Idle);\n\t\t\tassert.deepStrictEqual(testObject.conflicts.conflicts, []);\n\t\t\tassert.deepStrictEqual(getLocalProfiles(testClient), [{ id: '2', name: 'name 2', shortName: undefined, useDefaultFlags: undefined }]);\n\n\t\t\tawait client2.sync();\n\t\t\tassert.deepStrictEqual(getLocalProfiles(client2), [{ id: '2', name: 'name 2', shortName: undefined, useDefaultFlags: undefined }]);\n\n\t\t\tconst { content } = await testClient.read(testObject.resource);\n\t\t\tassert.ok(content !== null);\n\t\t\tconst actual = parseRemoteProfiles(content);\n\t\t\tassert.deepStrictEqual(actual, [{ id: '2', name: 'name 2', collection: '2' }]);\n\t\t});\n\t});\n\n\ttest('sync profile that uses default profile', async () => {\n\t\tawait runWithFakedTimers<void>({}, async () => {\n\t\t\tawait client2.instantiationService.get(IUserDataProfilesService).createProfile('1', 'name 1', { useDefaultFlags: { keybindings: true } });\n\t\t\tawait client2.sync();\n\n\t\t\tawait testObject.sync(await testClient.getResourceManifest());\n\t\t\tassert.strictEqual(testObject.status, SyncStatus.Idle);\n\t\t\tassert.deepStrictEqual(testObject.conflicts.conflicts, []);\n\n\t\t\tconst { content } = await testClient.read(testObject.resource);\n\t\t\tassert.ok(content !== null);\n\t\t\tconst actual = parseRemoteProfiles(content);\n\t\t\tassert.deepStrictEqual(actual, [{ id: '1', name: 'name 1', collection: '1', useDefaultFlags: { keybindings: true } }]);\n\n\t\t\tassert.deepStrictEqual(getLocalProfiles(testClient), [{ id: '1', name: 'name 1', shortName: undefined, useDefaultFlags: { keybindings: true } }]);\n\t\t});\n\t});\n\n\ttest('sync profile when the profile is updated to use default profile locally', async () => {\n\t\tawait runWithFakedTimers<void>({}, async () => {\n\t\t\tawait client2.instantiationService.get(IUserDataProfilesService).createProfile('1', 'name 1');\n\t\t\tawait client2.sync();\n\n\t\t\tawait testObject.sync(await testClient.getResourceManifest());\n\n\t\t\tconst profile = testClient.instantiationService.get(IUserDataProfilesService).profiles.find(p => p.id === '1')!;\n\t\t\ttestClient.instantiationService.get(IUserDataProfilesService).updateProfile(profile, { useDefaultFlags: { keybindings: true } });\n\n\t\t\tawait testObject.sync(await testClient.getResourceManifest());\n\t\t\tassert.strictEqual(testObject.status, SyncStatus.Idle);\n\t\t\tassert.deepStrictEqual(testObject.conflicts.conflicts, []);\n\n\t\t\tconst { content } = await testClient.read(testObject.resource);\n\t\t\tassert.ok(content !== null);\n\t\t\tconst actual = parseRemoteProfiles(content);\n\t\t\tassert.deepStrictEqual(actual, [{ id: '1', name: 'name 1', collection: '1', useDefaultFlags: { keybindings: true } }]);\n\t\t\tassert.deepStrictEqual(getLocalProfiles(testClient), [{ id: '1', name: 'name 1', shortName: undefined, useDefaultFlags: { keybindings: true } }]);\n\t\t});\n\t});\n\n\ttest('sync profile when the profile is updated to use default profile remotely', async () => {\n\t\tawait runWithFakedTimers<void>({}, async () => {\n\t\t\tconst profile = await client2.instantiationService.get(IUserDataProfilesService).createProfile('1', 'name 1');\n\t\t\tawait client2.sync();\n\n\t\t\tawait testObject.sync(await testClient.getResourceManifest());\n\n\t\t\tclient2.instantiationService.get(IUserDataProfilesService).updateProfile(profile, { useDefaultFlags: { keybindings: true } });\n\t\t\tawait client2.sync();\n\n\t\t\tawait testObject.sync(await testClient.getResourceManifest());\n\t\t\tassert.strictEqual(testObject.status, SyncStatus.Idle);\n\t\t\tassert.deepStrictEqual(testObject.conflicts.conflicts, []);\n\n\t\t\tconst { content } = await testClient.read(testObject.resource);\n\t\t\tassert.ok(content !== null);\n\t\t\tconst actual = parseRemoteProfiles(content);\n\t\t\tassert.deepStrictEqual(actual, [{ id: '1', name: 'name 1', collection: '1', useDefaultFlags: { keybindings: true } }]);\n\n\t\t\tassert.deepStrictEqual(getLocalProfiles(testClient), [{ id: '1', name: 'name 1', shortName: undefined, useDefaultFlags: { keybindings: true } }]);\n\t\t});\n\t});\n\n\tfunction parseRemoteProfiles(content: string): ISyncUserDataProfile[] {\n\t\tconst syncData: ISyncData = JSON.parse(content);\n\t\treturn JSON.parse(syncData.content);\n\t}\n\n\tfunction getLocalProfiles(client: UserDataSyncClient): { id: string; name: string; shortName?: string }[] {\n\t\treturn client.instantiationService.get(IUserDataProfilesService).profiles\n\t\t\t.slice(1).sort((a, b) => a.name.localeCompare(b.name))\n\t\t\t.map(profile => ({ id: profile.id, name: profile.name, shortName: profile.shortName, useDefaultFlags: profile.useDefaultFlags }));\n\t}\n\n\n});\n"],
  "mappings": "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",
  "names": []
}
