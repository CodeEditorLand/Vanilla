{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/userDataSync/test/common/userDataProfilesManifestMerge.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\nimport { IUserDataProfile, toUserDataProfile } from '../../../userDataProfile/common/userDataProfile.js';\nimport { merge } from '../../common/userDataProfilesManifestMerge.js';\nimport { ISyncUserDataProfile } from '../../common/userDataSync.js';\n\nsuite('UserDataProfilesManifestMerge', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('merge returns local profiles if remote does not exist', () => {\n\t\tconst localProfiles: IUserDataProfile[] = [\n\t\t\ttoUserDataProfile('1', '1', URI.file('1'), URI.file('cache')),\n\t\t\ttoUserDataProfile('2', '2', URI.file('2'), URI.file('cache')),\n\t\t];\n\n\t\tconst actual = merge(localProfiles, null, null, []);\n\n\t\tassert.deepStrictEqual(actual.local.added, []);\n\t\tassert.deepStrictEqual(actual.local.removed, []);\n\t\tassert.deepStrictEqual(actual.local.updated, []);\n\t\tassert.deepStrictEqual(actual.remote?.added, localProfiles);\n\t\tassert.deepStrictEqual(actual.remote?.updated, []);\n\t\tassert.deepStrictEqual(actual.remote?.removed, []);\n\t});\n\n\ttest('merge returns local profiles if remote does not exist with ignored profiles', () => {\n\t\tconst localProfiles: IUserDataProfile[] = [\n\t\t\ttoUserDataProfile('1', '1', URI.file('1'), URI.file('cache')),\n\t\t\ttoUserDataProfile('2', '2', URI.file('2'), URI.file('cache')),\n\t\t];\n\n\t\tconst actual = merge(localProfiles, null, null, ['2']);\n\n\t\tassert.deepStrictEqual(actual.local.added, []);\n\t\tassert.deepStrictEqual(actual.local.removed, []);\n\t\tassert.deepStrictEqual(actual.local.updated, []);\n\t\tassert.deepStrictEqual(actual.remote?.added, [localProfiles[0]]);\n\t\tassert.deepStrictEqual(actual.remote?.updated, []);\n\t\tassert.deepStrictEqual(actual.remote?.removed, []);\n\t});\n\n\ttest('merge local and remote profiles when there is no base', () => {\n\t\tconst localProfiles: IUserDataProfile[] = [\n\t\t\ttoUserDataProfile('1', '1', URI.file('1'), URI.file('cache')),\n\t\t\ttoUserDataProfile('2', '2', URI.file('2'), URI.file('cache')),\n\t\t];\n\t\tconst remoteProfiles: ISyncUserDataProfile[] = [\n\t\t\t{ id: '1', name: 'changed', collection: '1' },\n\t\t\t{ id: '3', name: '3', collection: '3' },\n\t\t];\n\n\t\tconst actual = merge(localProfiles, remoteProfiles, null, []);\n\n\t\tassert.deepStrictEqual(actual.local.added, [remoteProfiles[1]]);\n\t\tassert.deepStrictEqual(actual.local.removed, []);\n\t\tassert.deepStrictEqual(actual.local.updated, [remoteProfiles[0]]);\n\t\tassert.deepStrictEqual(actual.remote?.added, [localProfiles[1]]);\n\t\tassert.deepStrictEqual(actual.remote?.updated, []);\n\t\tassert.deepStrictEqual(actual.remote?.removed, []);\n\t});\n\n\ttest('merge local and remote profiles when there is base', () => {\n\t\tconst localProfiles: IUserDataProfile[] = [\n\t\t\ttoUserDataProfile('1', 'changed 1', URI.file('1'), URI.file('cache')),\n\t\t\ttoUserDataProfile('3', '3', URI.file('3'), URI.file('cache')),\n\t\t\ttoUserDataProfile('4', 'changed local', URI.file('4'), URI.file('cache')),\n\t\t\ttoUserDataProfile('5', '5', URI.file('5'), URI.file('cache')),\n\t\t\ttoUserDataProfile('6', '6', URI.file('6'), URI.file('cache')),\n\t\t\ttoUserDataProfile('8', '8', URI.file('8'), URI.file('cache')),\n\t\t\ttoUserDataProfile('10', '10', URI.file('8'), URI.file('cache'), { useDefaultFlags: { tasks: true } }),\n\t\t\ttoUserDataProfile('11', '11', URI.file('1'), URI.file('cache'), { useDefaultFlags: { keybindings: true } }),\n\t\t];\n\t\tconst base: ISyncUserDataProfile[] = [\n\t\t\t{ id: '1', name: '1', collection: '1' },\n\t\t\t{ id: '2', name: '2', collection: '2' },\n\t\t\t{ id: '3', name: '3', collection: '3' },\n\t\t\t{ id: '4', name: '4', collection: '4' },\n\t\t\t{ id: '5', name: '5', collection: '5' },\n\t\t\t{ id: '6', name: '6', collection: '6' },\n\t\t\t{ id: '10', name: '10', collection: '10', useDefaultFlags: { tasks: true } },\n\t\t\t{ id: '11', name: '11', collection: '11' },\n\t\t];\n\t\tconst remoteProfiles: ISyncUserDataProfile[] = [\n\t\t\t{ id: '1', name: '1', collection: '1' },\n\t\t\t{ id: '2', name: '2', collection: '2' },\n\t\t\t{ id: '3', name: '3', collection: '3', shortName: 'short 3' },\n\t\t\t{ id: '4', name: 'changed remote', collection: '4' },\n\t\t\t{ id: '5', name: '5', collection: '5' },\n\t\t\t{ id: '7', name: '7', collection: '7' },\n\t\t\t{ id: '9', name: '9', collection: '9', useDefaultFlags: { snippets: true } },\n\t\t\t{ id: '10', name: '10', collection: '10' },\n\t\t\t{ id: '11', name: '11', collection: '11' },\n\t\t];\n\n\t\tconst actual = merge(localProfiles, remoteProfiles, base, []);\n\n\t\tassert.deepStrictEqual(actual.local.added, [remoteProfiles[5], remoteProfiles[6]]);\n\t\tassert.deepStrictEqual(actual.local.removed, [localProfiles[4]]);\n\t\tassert.deepStrictEqual(actual.local.updated, [remoteProfiles[2], remoteProfiles[3], remoteProfiles[7]]);\n\t\tassert.deepStrictEqual(actual.remote?.added, [localProfiles[5]]);\n\t\tassert.deepStrictEqual(actual.remote?.updated, [localProfiles[0], localProfiles[7]]);\n\t\tassert.deepStrictEqual(actual.remote?.removed, [remoteProfiles[1]]);\n\t});\n\n\ttest('merge local and remote profiles when there is base with ignored profiles', () => {\n\t\tconst localProfiles: IUserDataProfile[] = [\n\t\t\ttoUserDataProfile('1', 'changed 1', URI.file('1'), URI.file('cache')),\n\t\t\ttoUserDataProfile('3', '3', URI.file('3'), URI.file('cache')),\n\t\t\ttoUserDataProfile('4', 'changed local', URI.file('4'), URI.file('cache')),\n\t\t\ttoUserDataProfile('5', '5', URI.file('5'), URI.file('cache')),\n\t\t\ttoUserDataProfile('6', '6', URI.file('6'), URI.file('cache')),\n\t\t\ttoUserDataProfile('8', '8', URI.file('8'), URI.file('cache')),\n\t\t];\n\t\tconst base: ISyncUserDataProfile[] = [\n\t\t\t{ id: '1', name: '1', collection: '1' },\n\t\t\t{ id: '2', name: '2', collection: '2' },\n\t\t\t{ id: '3', name: '3', collection: '3' },\n\t\t\t{ id: '4', name: '4', collection: '4' },\n\t\t\t{ id: '5', name: '5', collection: '5' },\n\t\t\t{ id: '6', name: '6', collection: '6' },\n\t\t];\n\t\tconst remoteProfiles: ISyncUserDataProfile[] = [\n\t\t\t{ id: '1', name: '1', collection: '1' },\n\t\t\t{ id: '2', name: '2', collection: '2' },\n\t\t\t{ id: '3', name: 'changed 3', collection: '3' },\n\t\t\t{ id: '4', name: 'changed remote', collection: '4' },\n\t\t\t{ id: '5', name: '5', collection: '5' },\n\t\t\t{ id: '7', name: '7', collection: '7' },\n\t\t];\n\n\t\tconst actual = merge(localProfiles, remoteProfiles, base, ['4', '8']);\n\n\t\tassert.deepStrictEqual(actual.local.added, [remoteProfiles[5]]);\n\t\tassert.deepStrictEqual(actual.local.removed, [localProfiles[4]]);\n\t\tassert.deepStrictEqual(actual.local.updated, [remoteProfiles[2]]);\n\t\tassert.deepStrictEqual(actual.remote?.added, []);\n\t\tassert.deepStrictEqual(actual.remote?.updated, [localProfiles[0]]);\n\t\tassert.deepStrictEqual(actual.remote?.removed, [remoteProfiles[1]]);\n\t});\n\n\ttest('merge when there are no remote changes', () => {\n\t\tconst localProfiles: IUserDataProfile[] = [\n\t\t\ttoUserDataProfile('1', '1', URI.file('1'), URI.file('cache')),\n\t\t];\n\t\tconst base: ISyncUserDataProfile[] = [\n\t\t\t{ id: '1', name: '1', collection: '1' },\n\t\t];\n\t\tconst remoteProfiles: ISyncUserDataProfile[] = [\n\t\t\t{ id: '1', name: 'name changed', collection: '1' },\n\t\t];\n\n\t\tconst actual = merge(localProfiles, remoteProfiles, base, []);\n\n\t\tassert.deepStrictEqual(actual.local.added, []);\n\t\tassert.deepStrictEqual(actual.local.removed, []);\n\t\tassert.deepStrictEqual(actual.local.updated, [remoteProfiles[0]]);\n\t\tassert.strictEqual(actual.remote, null);\n\t});\n\n\ttest('merge when there are no local and remote changes', () => {\n\t\tconst localProfiles: IUserDataProfile[] = [\n\t\t\ttoUserDataProfile('1', '1', URI.file('1'), URI.file('cache')),\n\t\t];\n\t\tconst base: ISyncUserDataProfile[] = [\n\t\t\t{ id: '1', name: '1', collection: '1' },\n\t\t];\n\t\tconst remoteProfiles: ISyncUserDataProfile[] = [\n\t\t\t{ id: '1', name: '1', collection: '1' },\n\t\t];\n\n\t\tconst actual = merge(localProfiles, remoteProfiles, base, []);\n\n\t\tassert.deepStrictEqual(actual.local.added, []);\n\t\tassert.deepStrictEqual(actual.local.removed, []);\n\t\tassert.deepStrictEqual(actual.local.updated, []);\n\t\tassert.strictEqual(actual.remote, null);\n\t});\n\n\ttest('merge when profile is removed locally, but not exists in remote', () => {\n\t\tconst localProfiles: IUserDataProfile[] = [\n\t\t\ttoUserDataProfile('1', '1', URI.file('1'), URI.file('cache')),\n\t\t];\n\t\tconst base: ISyncUserDataProfile[] = [\n\t\t\t{ id: '1', name: '1', collection: '1' },\n\t\t\t{ id: '2', name: '2', collection: '2' },\n\t\t];\n\t\tconst remoteProfiles: ISyncUserDataProfile[] = [\n\t\t\t{ id: '1', name: '3', collection: '1' },\n\t\t];\n\n\t\tconst actual = merge(localProfiles, remoteProfiles, base, []);\n\n\t\tassert.deepStrictEqual(actual.local.added, []);\n\t\tassert.deepStrictEqual(actual.local.removed, []);\n\t\tassert.deepStrictEqual(actual.local.updated, remoteProfiles);\n\t\tassert.strictEqual(actual.remote, null);\n\t});\n\n});\n"],
  "mappings": "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",
  "names": []
}
