{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/sign/node/signService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { importAMDNodeModule } from \"../../../amdX.js\";\nimport {\n\tAbstractSignService,\n\ttype IVsdaValidator,\n} from \"../common/abstractSignService.js\";\nimport type { ISignService } from \"../common/sign.js\";\n\ndeclare namespace vsda {\n\t// the signer is a native module that for historical reasons uses a lower case class name\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\texport class signer {\n\t\tsign(arg: string): string;\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\texport class validator {\n\t\tcreateNewMessage(arg: string): string;\n\t\tvalidate(arg: string): \"ok\" | \"error\";\n\t}\n}\n\nexport class SignService extends AbstractSignService implements ISignService {\n\tprotected override getValidator(): Promise<IVsdaValidator> {\n\t\treturn this.vsda().then((vsda) => new vsda.validator());\n\t}\n\tprotected override signValue(arg: string): Promise<string> {\n\t\treturn this.vsda().then((vsda) => new vsda.signer().sign(arg));\n\t}\n\n\tprivate async vsda(): Promise<typeof vsda> {\n\t\t// ESM-uncomment-begin\n\t\tif (typeof importAMDNodeModule === \"function\") {\n\t\t\t/* fixes unused import, remove me */\n\t\t}\n\t\tconst mod = \"vsda\";\n\t\tconst { default: vsda } = await import(mod);\n\t\treturn vsda;\n\t\t// ESM-uncomment-end\n\n\t\t// ESM-comment-begin\n\t\t// return importAMDNodeModule('vsda', 'index.js');\n\t\t// ESM-comment-end\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,2BAA2B;AACpC;AAAA,EACC;AAAA,OAEM;AAiBA,MAAM,oBAAoB,oBAA4C;AAAA,EA1B7E,OA0B6E;AAAA;AAAA;AAAA,EACzD,eAAwC;AAC1D,WAAO,KAAK,KAAK,EAAE,KAAK,CAAC,SAAS,IAAI,KAAK,UAAU,CAAC;AAAA,EACvD;AAAA,EACmB,UAAU,KAA8B;AAC1D,WAAO,KAAK,KAAK,EAAE,KAAK,CAAC,SAAS,IAAI,KAAK,OAAO,EAAE,KAAK,GAAG,CAAC;AAAA,EAC9D;AAAA,EAEA,MAAc,OAA6B;AAE1C,QAAI,OAAO,wBAAwB,YAAY;AAAA,IAE/C;AACA,UAAM,MAAM;AACZ,UAAM,EAAE,SAAS,KAAK,IAAI,MAAM,OAAO;AACvC,WAAO;AAAA,EAMR;AACD;",
  "names": []
}
