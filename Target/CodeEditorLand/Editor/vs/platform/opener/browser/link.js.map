{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/opener/browser/link.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\t$,\n\tEventHelper,\n\ttype EventLike,\n\tappend,\n\tclearNode,\n} from \"../../../base/browser/dom.js\";\nimport { DomEmitter } from \"../../../base/browser/event.js\";\nimport { StandardKeyboardEvent } from \"../../../base/browser/keyboardEvent.js\";\nimport {\n\tGesture,\n\tEventType as TouchEventType,\n} from \"../../../base/browser/touch.js\";\nimport { Event } from \"../../../base/common/event.js\";\nimport { KeyCode } from \"../../../base/common/keyCodes.js\";\nimport { Disposable } from \"../../../base/common/lifecycle.js\";\nimport { IOpenerService } from \"../common/opener.js\";\nimport \"./link.css\";\nimport type { IManagedHover } from \"../../../base/browser/ui/hover/hover.js\";\nimport type { IHoverDelegate } from \"../../../base/browser/ui/hover/hoverDelegate.js\";\nimport { getDefaultHoverDelegate } from \"../../../base/browser/ui/hover/hoverDelegateFactory.js\";\nimport { IHoverService } from \"../../hover/browser/hover.js\";\n\nexport interface ILinkDescriptor {\n\treadonly label: string | HTMLElement;\n\treadonly href: string;\n\treadonly title?: string;\n\treadonly tabIndex?: number;\n}\n\nexport interface ILinkOptions {\n\treadonly opener?: (href: string) => void;\n\treadonly hoverDelegate?: IHoverDelegate;\n\treadonly textLinkForeground?: string;\n}\n\nexport class Link extends Disposable {\n\tprivate el: HTMLAnchorElement;\n\tprivate hover?: IManagedHover;\n\tprivate hoverDelegate: IHoverDelegate;\n\n\tprivate _enabled = true;\n\n\tget enabled(): boolean {\n\t\treturn this._enabled;\n\t}\n\n\tset enabled(enabled: boolean) {\n\t\tif (enabled) {\n\t\t\tthis.el.setAttribute(\"aria-disabled\", \"false\");\n\t\t\tthis.el.tabIndex = 0;\n\t\t\tthis.el.style.pointerEvents = \"auto\";\n\t\t\tthis.el.style.opacity = \"1\";\n\t\t\tthis.el.style.cursor = \"pointer\";\n\t\t\tthis._enabled = false;\n\t\t} else {\n\t\t\tthis.el.setAttribute(\"aria-disabled\", \"true\");\n\t\t\tthis.el.tabIndex = -1;\n\t\t\tthis.el.style.pointerEvents = \"none\";\n\t\t\tthis.el.style.opacity = \"0.4\";\n\t\t\tthis.el.style.cursor = \"default\";\n\t\t\tthis._enabled = true;\n\t\t}\n\n\t\tthis._enabled = enabled;\n\t}\n\n\tset link(link: ILinkDescriptor) {\n\t\tif (typeof link.label === \"string\") {\n\t\t\tthis.el.textContent = link.label;\n\t\t} else {\n\t\t\tclearNode(this.el);\n\t\t\tthis.el.appendChild(link.label);\n\t\t}\n\n\t\tthis.el.href = link.href;\n\n\t\tif (typeof link.tabIndex !== \"undefined\") {\n\t\t\tthis.el.tabIndex = link.tabIndex;\n\t\t}\n\n\t\tthis.setTooltip(link.title);\n\n\t\tthis._link = link;\n\t}\n\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\tprivate _link: ILinkDescriptor,\n\t\toptions: ILinkOptions = {},\n\t\t@IHoverService private readonly _hoverService: IHoverService,\n\t\t@IOpenerService openerService: IOpenerService\n\t) {\n\t\tsuper();\n\n\t\tthis.el = append(container, $('a.monaco-link', {\n\t\t\ttabIndex: _link.tabIndex ?? 0,\n\t\t\thref: _link.href,\n\t\t}, _link.label));\n\n\t\tthis.hoverDelegate = options.hoverDelegate ?? getDefaultHoverDelegate('mouse');\n\t\tthis.setTooltip(_link.title);\n\n\t\tthis.el.setAttribute('role', 'button');\n\n\t\tconst onClickEmitter = this._register(new DomEmitter(this.el, 'click'));\n\t\tconst onKeyPress = this._register(new DomEmitter(this.el, 'keypress'));\n\t\tconst onEnterPress = Event.chain(onKeyPress.event, $ =>\n\t\t\t$.map(e => new StandardKeyboardEvent(e))\n\t\t\t\t.filter(e => e.keyCode === KeyCode.Enter)\n\t\t);\n\t\tconst onTap = this._register(new DomEmitter(this.el, TouchEventType.Tap)).event;\n\t\tthis._register(Gesture.addTarget(this.el));\n\t\tconst onOpen = Event.any<EventLike>(onClickEmitter.event, onEnterPress, onTap);\n\n\t\tthis._register(onOpen(e => {\n\t\t\tif (!this.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tEventHelper.stop(e, true);\n\n\t\t\tif (options?.opener) {\n\t\t\t\toptions.opener(this._link.href);\n\t\t\t} else {\n\t\t\t\topenerService.open(this._link.href, { allowCommands: true });\n\t\t\t}\n\t\t}));\n\n\t\tthis.enabled = true;\n\t}\n\n\tprivate setTooltip(title: string | undefined): void {\n\t\tif (this.hoverDelegate.showNativeHover) {\n\t\t\tthis.el.title = title ?? \"\";\n\t\t} else if (!this.hover && title) {\n\t\t\tthis.hover = this._register(\n\t\t\t\tthis._hoverService.setupManagedHover(\n\t\t\t\t\tthis.hoverDelegate,\n\t\t\t\t\tthis.el,\n\t\t\t\t\ttitle,\n\t\t\t\t),\n\t\t\t);\n\t\t} else if (this.hover) {\n\t\t\tthis.hover.update(title);\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": ["$"]
}
