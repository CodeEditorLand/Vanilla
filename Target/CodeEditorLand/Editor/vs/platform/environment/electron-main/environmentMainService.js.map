{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/environment/electron-main/environmentMainService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { memoize } from \"../../../base/common/decorators.js\";\nimport { join } from \"../../../base/common/path.js\";\nimport { isLinux } from \"../../../base/common/platform.js\";\nimport { createStaticIPCHandle } from \"../../../base/parts/ipc/node/ipc.net.js\";\nimport { refineServiceDecorator } from \"../../instantiation/common/instantiation.js\";\nimport {\n\tIEnvironmentService,\n\ttype INativeEnvironmentService,\n} from \"../common/environment.js\";\nimport { NativeEnvironmentService } from \"../node/environmentService.js\";\n\nexport const IEnvironmentMainService = refineServiceDecorator<\n\tIEnvironmentService,\n\tIEnvironmentMainService\n>(IEnvironmentService);\n\n/**\n * A subclass of the `INativeEnvironmentService` to be used only in electron-main\n * environments.\n */\nexport interface IEnvironmentMainService extends INativeEnvironmentService {\n\t// --- backup paths\n\treadonly backupHome: string;\n\n\t// --- V8 code caching\n\treadonly codeCachePath: string | undefined;\n\treadonly useCodeCache: boolean;\n\n\t// --- IPC\n\treadonly mainIPCHandle: string;\n\treadonly mainLockfile: string;\n\n\t// --- config\n\treadonly disableUpdates: boolean;\n\n\tunsetSnapExportedVariables(): void;\n\trestoreSnapExportedVariables(): void;\n}\n\nexport class EnvironmentMainService\n\textends NativeEnvironmentService\n\timplements IEnvironmentMainService\n{\n\tprivate _snapEnv: Record<string, string> = {};\n\n\t@memoize\n\tget backupHome(): string {\n\t\treturn join(this.userDataPath, \"Backups\");\n\t}\n\n\t@memoize\n\tget mainIPCHandle(): string {\n\t\treturn createStaticIPCHandle(\n\t\t\tthis.userDataPath,\n\t\t\t\"main\",\n\t\t\tthis.productService.version,\n\t\t);\n\t}\n\n\t@memoize\n\tget mainLockfile(): string {\n\t\treturn join(this.userDataPath, \"code.lock\");\n\t}\n\n\t@memoize\n\tget disableUpdates(): boolean {\n\t\treturn !!this.args[\"disable-updates\"];\n\t}\n\n\t@memoize\n\tget crossOriginIsolated(): boolean {\n\t\treturn !!this.args[\"enable-coi\"];\n\t}\n\n\t@memoize\n\tget codeCachePath(): string | undefined {\n\t\treturn process.env[\"VSCODE_CODE_CACHE_PATH\"] || undefined;\n\t}\n\n\t@memoize\n\tget useCodeCache(): boolean {\n\t\treturn !!this.codeCachePath;\n\t}\n\n\tunsetSnapExportedVariables() {\n\t\tif (!isLinux) {\n\t\t\treturn;\n\t\t}\n\t\tfor (const key in process.env) {\n\t\t\tif (key.endsWith(\"_VSCODE_SNAP_ORIG\")) {\n\t\t\t\tconst originalKey = key.slice(0, -17); // Remove the _VSCODE_SNAP_ORIG suffix\n\t\t\t\tif (this._snapEnv[originalKey]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// Preserve the original value in case the snap env is re-entered\n\t\t\t\tif (process.env[originalKey]) {\n\t\t\t\t\tthis._snapEnv[originalKey] = process.env[originalKey]!;\n\t\t\t\t}\n\t\t\t\t// Copy the original value from before entering the snap env if available,\n\t\t\t\t// if not delete the env variable.\n\t\t\t\tif (process.env[key]) {\n\t\t\t\t\tprocess.env[originalKey] = process.env[key];\n\t\t\t\t} else {\n\t\t\t\t\tdelete process.env[originalKey];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\trestoreSnapExportedVariables() {\n\t\tif (!isLinux) {\n\t\t\treturn;\n\t\t}\n\t\tfor (const key in this._snapEnv) {\n\t\t\tprocess.env[key] = this._snapEnv[key];\n\t\t\tdelete this._snapEnv[key];\n\t\t}\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;AAKA,SAAS,eAAe;AACxB,SAAS,YAAY;AACrB,SAAS,eAAe;AACxB,SAAS,6BAA6B;AACtC,SAAS,8BAA8B;AACvC;AAAA,EACC;AAAA,OAEM;AACP,SAAS,gCAAgC;AAElC,MAAM,0BAA0B,uBAGrC,mBAAmB;AAyBd,MAAM,+BACJ,yBAET;AAAA,EA/CA,OA+CA;AAAA;AAAA;AAAA,EACS,WAAmC,CAAC;AAAA,EAG5C,IAAI,aAAqB;AACxB,WAAO,KAAK,KAAK,cAAc,SAAS;AAAA,EACzC;AAAA,EAGA,IAAI,gBAAwB;AAC3B,WAAO;AAAA,MACN,KAAK;AAAA,MACL;AAAA,MACA,KAAK,eAAe;AAAA,IACrB;AAAA,EACD;AAAA,EAGA,IAAI,eAAuB;AAC1B,WAAO,KAAK,KAAK,cAAc,WAAW;AAAA,EAC3C;AAAA,EAGA,IAAI,iBAA0B;AAC7B,WAAO,CAAC,CAAC,KAAK,KAAK,iBAAiB;AAAA,EACrC;AAAA,EAGA,IAAI,sBAA+B;AAClC,WAAO,CAAC,CAAC,KAAK,KAAK,YAAY;AAAA,EAChC;AAAA,EAGA,IAAI,gBAAoC;AACvC,WAAO,QAAQ,IAAI,wBAAwB,KAAK;AAAA,EACjD;AAAA,EAGA,IAAI,eAAwB;AAC3B,WAAO,CAAC,CAAC,KAAK;AAAA,EACf;AAAA,EAEA,6BAA6B;AAC5B,QAAI,CAAC,SAAS;AACb;AAAA,IACD;AACA,eAAW,OAAO,QAAQ,KAAK;AAC9B,UAAI,IAAI,SAAS,mBAAmB,GAAG;AACtC,cAAM,cAAc,IAAI,MAAM,GAAG,GAAG;AACpC,YAAI,KAAK,SAAS,WAAW,GAAG;AAC/B;AAAA,QACD;AAEA,YAAI,QAAQ,IAAI,WAAW,GAAG;AAC7B,eAAK,SAAS,WAAW,IAAI,QAAQ,IAAI,WAAW;AAAA,QACrD;AAGA,YAAI,QAAQ,IAAI,GAAG,GAAG;AACrB,kBAAQ,IAAI,WAAW,IAAI,QAAQ,IAAI,GAAG;AAAA,QAC3C,OAAO;AACN,iBAAO,QAAQ,IAAI,WAAW;AAAA,QAC/B;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EAEA,+BAA+B;AAC9B,QAAI,CAAC,SAAS;AACb;AAAA,IACD;AACA,eAAW,OAAO,KAAK,UAAU;AAChC,cAAQ,IAAI,GAAG,IAAI,KAAK,SAAS,GAAG;AACpC,aAAO,KAAK,SAAS,GAAG;AAAA,IACzB;AAAA,EACD;AACD;AAxEK;AAAA,EADH;AAAA,GANW,uBAOR;AAKA;AAAA,EADH;AAAA,GAXW,uBAYR;AASA;AAAA,EADH;AAAA,GApBW,uBAqBR;AAKA;AAAA,EADH;AAAA,GAzBW,uBA0BR;AAKA;AAAA,EADH;AAAA,GA9BW,uBA+BR;AAKA;AAAA,EADH;AAAA,GAnCW,uBAoCR;AAKA;AAAA,EADH;AAAA,GAxCW,uBAyCR;",
  "names": []
}
