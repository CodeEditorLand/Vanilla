{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/environment/common/environmentService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toLocalISOString } from \"../../../base/common/date.js\";\nimport { memoize } from \"../../../base/common/decorators.js\";\nimport { FileAccess, Schemas } from \"../../../base/common/network.js\";\nimport {\n\tdirname,\n\tjoin,\n\tnormalize,\n\tresolve,\n} from \"../../../base/common/path.js\";\nimport { env } from \"../../../base/common/process.js\";\nimport { joinPath } from \"../../../base/common/resources.js\";\nimport { URI } from \"../../../base/common/uri.js\";\nimport type { IProductService } from \"../../product/common/productService.js\";\nimport type { NativeParsedArgs } from \"./argv.js\";\nimport type {\n\tExtensionKind,\n\tIExtensionHostDebugParams,\n\tINativeEnvironmentService,\n} from \"./environment.js\";\n\nexport const EXTENSION_IDENTIFIER_WITH_LOG_REGEX = /^([^.]+\\..+)[:=](.+)$/;\n\nexport interface INativeEnvironmentPaths {\n\t/**\n\t * The user data directory to use for anything that should be\n\t * persisted except for the content that is meant for the `homeDir`.\n\t *\n\t * Only one instance of VSCode can use the same `userDataDir`.\n\t */\n\tuserDataDir: string;\n\n\t/**\n\t * The user home directory mainly used for persisting extensions\n\t * and global configuration that should be shared across all\n\t * versions.\n\t */\n\thomeDir: string;\n\n\t/**\n\t * OS tmp dir.\n\t */\n\ttmpDir: string;\n}\n\nexport abstract class AbstractNativeEnvironmentService\n\timplements INativeEnvironmentService\n{\n\tdeclare readonly _serviceBrand: undefined;\n\n\t@memoize\n\tget appRoot(): string {\n\t\treturn dirname(FileAccess.asFileUri(\"\").fsPath);\n\t}\n\n\t@memoize\n\tget userHome(): URI {\n\t\treturn URI.file(this.paths.homeDir);\n\t}\n\n\t@memoize\n\tget userDataPath(): string {\n\t\treturn this.paths.userDataDir;\n\t}\n\n\t@memoize\n\tget appSettingsHome(): URI {\n\t\treturn URI.file(join(this.userDataPath, \"User\"));\n\t}\n\n\t@memoize\n\tget tmpDir(): URI {\n\t\treturn URI.file(this.paths.tmpDir);\n\t}\n\n\t@memoize\n\tget cacheHome(): URI {\n\t\treturn URI.file(this.userDataPath);\n\t}\n\n\t@memoize\n\tget stateResource(): URI {\n\t\treturn joinPath(this.appSettingsHome, \"globalStorage\", \"storage.json\");\n\t}\n\n\t@memoize\n\tget userRoamingDataHome(): URI {\n\t\treturn this.appSettingsHome.with({ scheme: Schemas.vscodeUserData });\n\t}\n\n\t@memoize\n\tget userDataSyncHome(): URI {\n\t\treturn joinPath(this.appSettingsHome, \"sync\");\n\t}\n\n\tget logsHome(): URI {\n\t\tif (!this.args.logsPath) {\n\t\t\tconst key = toLocalISOString(new Date()).replace(\n\t\t\t\t/-|:|\\.\\d+Z$/g,\n\t\t\t\t\"\",\n\t\t\t);\n\t\t\tthis.args.logsPath = join(this.userDataPath, \"logs\", key);\n\t\t}\n\n\t\treturn URI.file(this.args.logsPath);\n\t}\n\n\t@memoize\n\tget sync(): \"on\" | \"off\" | undefined {\n\t\treturn this.args.sync;\n\t}\n\n\t@memoize\n\tget machineSettingsResource(): URI {\n\t\treturn joinPath(\n\t\t\tURI.file(join(this.userDataPath, \"Machine\")),\n\t\t\t\"settings.json\",\n\t\t);\n\t}\n\n\t@memoize\n\tget workspaceStorageHome(): URI {\n\t\treturn joinPath(this.appSettingsHome, \"workspaceStorage\");\n\t}\n\n\t@memoize\n\tget localHistoryHome(): URI {\n\t\treturn joinPath(this.appSettingsHome, \"History\");\n\t}\n\n\t@memoize\n\tget keyboardLayoutResource(): URI {\n\t\treturn joinPath(this.userRoamingDataHome, \"keyboardLayout.json\");\n\t}\n\n\t@memoize\n\tget argvResource(): URI {\n\t\tconst vscodePortable = env[\"VSCODE_PORTABLE\"];\n\t\tif (vscodePortable) {\n\t\t\treturn URI.file(join(vscodePortable, \"argv.json\"));\n\t\t}\n\n\t\treturn joinPath(\n\t\t\tthis.userHome,\n\t\t\tthis.productService.dataFolderName,\n\t\t\t\"argv.json\",\n\t\t);\n\t}\n\n\t@memoize\n\tget isExtensionDevelopment(): boolean {\n\t\treturn !!this.args.extensionDevelopmentPath;\n\t}\n\n\t@memoize\n\tget untitledWorkspacesHome(): URI {\n\t\treturn URI.file(join(this.userDataPath, \"Workspaces\"));\n\t}\n\n\t@memoize\n\tget builtinExtensionsPath(): string {\n\t\tconst cliBuiltinExtensionsDir = this.args[\"builtin-extensions-dir\"];\n\t\tif (cliBuiltinExtensionsDir) {\n\t\t\treturn resolve(cliBuiltinExtensionsDir);\n\t\t}\n\n\t\treturn normalize(\n\t\t\tjoin(FileAccess.asFileUri(\"\").fsPath, \"..\", \"extensions\"),\n\t\t);\n\t}\n\n\tget extensionsDownloadLocation(): URI {\n\t\tconst cliExtensionsDownloadDir = this.args[\"extensions-download-dir\"];\n\t\tif (cliExtensionsDownloadDir) {\n\t\t\treturn URI.file(resolve(cliExtensionsDownloadDir));\n\t\t}\n\n\t\treturn URI.file(join(this.userDataPath, \"CachedExtensionVSIXs\"));\n\t}\n\n\t@memoize\n\tget extensionsPath(): string {\n\t\tconst cliExtensionsDir = this.args[\"extensions-dir\"];\n\t\tif (cliExtensionsDir) {\n\t\t\treturn resolve(cliExtensionsDir);\n\t\t}\n\n\t\tconst vscodeExtensions = env[\"VSCODE_EXTENSIONS\"];\n\t\tif (vscodeExtensions) {\n\t\t\treturn vscodeExtensions;\n\t\t}\n\n\t\tconst vscodePortable = env[\"VSCODE_PORTABLE\"];\n\t\tif (vscodePortable) {\n\t\t\treturn join(vscodePortable, \"extensions\");\n\t\t}\n\n\t\treturn joinPath(\n\t\t\tthis.userHome,\n\t\t\tthis.productService.dataFolderName,\n\t\t\t\"extensions\",\n\t\t).fsPath;\n\t}\n\n\t@memoize\n\tget extensionDevelopmentLocationURI(): URI[] | undefined {\n\t\tconst extensionDevelopmentPaths = this.args.extensionDevelopmentPath;\n\t\tif (Array.isArray(extensionDevelopmentPaths)) {\n\t\t\treturn extensionDevelopmentPaths.map((extensionDevelopmentPath) => {\n\t\t\t\tif (/^[^:/?#]+?:\\/\\//.test(extensionDevelopmentPath)) {\n\t\t\t\t\treturn URI.parse(extensionDevelopmentPath);\n\t\t\t\t}\n\n\t\t\t\treturn URI.file(normalize(extensionDevelopmentPath));\n\t\t\t});\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\t@memoize\n\tget extensionDevelopmentKind(): ExtensionKind[] | undefined {\n\t\treturn this.args.extensionDevelopmentKind?.map((kind) =>\n\t\t\tkind === \"ui\" || kind === \"workspace\" || kind === \"web\"\n\t\t\t\t? kind\n\t\t\t\t: \"workspace\",\n\t\t);\n\t}\n\n\t@memoize\n\tget extensionTestsLocationURI(): URI | undefined {\n\t\tconst extensionTestsPath = this.args.extensionTestsPath;\n\t\tif (extensionTestsPath) {\n\t\t\tif (/^[^:/?#]+?:\\/\\//.test(extensionTestsPath)) {\n\t\t\t\treturn URI.parse(extensionTestsPath);\n\t\t\t}\n\n\t\t\treturn URI.file(normalize(extensionTestsPath));\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tget disableExtensions(): boolean | string[] {\n\t\tif (this.args[\"disable-extensions\"]) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst disableExtensions = this.args[\"disable-extension\"];\n\t\tif (disableExtensions) {\n\t\t\tif (typeof disableExtensions === \"string\") {\n\t\t\t\treturn [disableExtensions];\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tArray.isArray(disableExtensions) &&\n\t\t\t\tdisableExtensions.length > 0\n\t\t\t) {\n\t\t\t\treturn disableExtensions;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t@memoize\n\tget debugExtensionHost(): IExtensionHostDebugParams {\n\t\treturn parseExtensionHostDebugPort(this.args, this.isBuilt);\n\t}\n\tget debugRenderer(): boolean {\n\t\treturn !!this.args.debugRenderer;\n\t}\n\n\tget isBuilt(): boolean {\n\t\treturn !env[\"VSCODE_DEV\"];\n\t}\n\tget verbose(): boolean {\n\t\treturn !!this.args.verbose;\n\t}\n\n\t@memoize\n\tget logLevel(): string | undefined {\n\t\treturn this.args.log?.find(\n\t\t\t(entry) => !EXTENSION_IDENTIFIER_WITH_LOG_REGEX.test(entry),\n\t\t);\n\t}\n\t@memoize\n\tget extensionLogLevel(): [string, string][] | undefined {\n\t\tconst result: [string, string][] = [];\n\t\tfor (const entry of this.args.log || []) {\n\t\t\tconst matches = EXTENSION_IDENTIFIER_WITH_LOG_REGEX.exec(entry);\n\t\t\tif (matches && matches[1] && matches[2]) {\n\t\t\t\tresult.push([matches[1], matches[2]]);\n\t\t\t}\n\t\t}\n\t\treturn result.length ? result : undefined;\n\t}\n\n\t@memoize\n\tget serviceMachineIdResource(): URI {\n\t\treturn joinPath(URI.file(this.userDataPath), \"machineid\");\n\t}\n\n\tget crashReporterId(): string | undefined {\n\t\treturn this.args[\"crash-reporter-id\"];\n\t}\n\tget crashReporterDirectory(): string | undefined {\n\t\treturn this.args[\"crash-reporter-directory\"];\n\t}\n\n\t@memoize\n\tget disableTelemetry(): boolean {\n\t\treturn !!this.args[\"disable-telemetry\"];\n\t}\n\n\t@memoize\n\tget disableWorkspaceTrust(): boolean {\n\t\treturn !!this.args[\"disable-workspace-trust\"];\n\t}\n\n\t@memoize\n\tget useInMemorySecretStorage(): boolean {\n\t\treturn !!this.args[\"use-inmemory-secretstorage\"];\n\t}\n\n\t@memoize\n\tget policyFile(): URI | undefined {\n\t\tif (this.args[\"__enable-file-policy\"]) {\n\t\t\tconst vscodePortable = env[\"VSCODE_PORTABLE\"];\n\t\t\tif (vscodePortable) {\n\t\t\t\treturn URI.file(join(vscodePortable, \"policy.json\"));\n\t\t\t}\n\n\t\t\treturn joinPath(\n\t\t\t\tthis.userHome,\n\t\t\t\tthis.productService.dataFolderName,\n\t\t\t\t\"policy.json\",\n\t\t\t);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\teditSessionId: string | undefined = this.args[\"editSessionId\"];\n\n\tget continueOn(): string | undefined {\n\t\treturn this.args[\"continueOn\"];\n\t}\n\n\tset continueOn(value: string | undefined) {\n\t\tthis.args[\"continueOn\"] = value;\n\t}\n\n\tget args(): NativeParsedArgs {\n\t\treturn this._args;\n\t}\n\n\tconstructor(\n\t\tprivate readonly _args: NativeParsedArgs,\n\t\tprivate readonly paths: INativeEnvironmentPaths,\n\t\tprotected readonly productService: IProductService,\n\t) {}\n}\n\nexport function parseExtensionHostDebugPort(\n\targs: NativeParsedArgs,\n\tisBuilt: boolean,\n): IExtensionHostDebugParams {\n\treturn parseDebugParams(\n\t\targs[\"inspect-extensions\"],\n\t\targs[\"inspect-brk-extensions\"],\n\t\t5870,\n\t\tisBuilt,\n\t\targs.debugId,\n\t\targs.extensionEnvironment,\n\t);\n}\n\nexport function parseDebugParams(\n\tdebugArg: string | undefined,\n\tdebugBrkArg: string | undefined,\n\tdefaultBuildPort: number,\n\tisBuilt: boolean,\n\tdebugId?: string,\n\tenvironmentString?: string,\n): IExtensionHostDebugParams {\n\tconst portStr = debugBrkArg || debugArg;\n\tconst port = Number(portStr) || (isBuilt ? null : defaultBuildPort);\n\tconst brk = port ? Boolean(!!debugBrkArg) : false;\n\tlet env: Record<string, string> | undefined;\n\tif (environmentString) {\n\t\ttry {\n\t\t\tenv = JSON.parse(environmentString);\n\t\t} catch {\n\t\t\t// ignore\n\t\t}\n\t}\n\n\treturn { port, break: brk, debugId, env };\n}\n"],
  "mappings": "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",
  "names": ["env"]
}
