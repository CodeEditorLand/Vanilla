{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/environment/common/environmentService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toLocalISOString } from '../../../base/common/date.js';\nimport { memoize } from '../../../base/common/decorators.js';\nimport { FileAccess, Schemas } from '../../../base/common/network.js';\nimport { dirname, join, normalize, resolve } from '../../../base/common/path.js';\nimport { env } from '../../../base/common/process.js';\nimport { joinPath } from '../../../base/common/resources.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { NativeParsedArgs } from './argv.js';\nimport { ExtensionKind, IExtensionHostDebugParams, INativeEnvironmentService } from './environment.js';\nimport { IProductService } from '../../product/common/productService.js';\n\nexport const EXTENSION_IDENTIFIER_WITH_LOG_REGEX = /^([^.]+\\..+)[:=](.+)$/;\n\nexport interface INativeEnvironmentPaths {\n\n\t/**\n\t * The user data directory to use for anything that should be\n\t * persisted except for the content that is meant for the `homeDir`.\n\t *\n\t * Only one instance of VSCode can use the same `userDataDir`.\n\t */\n\tuserDataDir: string;\n\n\t/**\n\t * The user home directory mainly used for persisting extensions\n\t * and global configuration that should be shared across all\n\t * versions.\n\t */\n\thomeDir: string;\n\n\t/**\n\t * OS tmp dir.\n\t */\n\ttmpDir: string;\n}\n\nexport abstract class AbstractNativeEnvironmentService implements INativeEnvironmentService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\t@memoize\n\tget appRoot(): string { return dirname(FileAccess.asFileUri('').fsPath); }\n\n\t@memoize\n\tget userHome(): URI { return URI.file(this.paths.homeDir); }\n\n\t@memoize\n\tget userDataPath(): string { return this.paths.userDataDir; }\n\n\t@memoize\n\tget appSettingsHome(): URI { return URI.file(join(this.userDataPath, 'User')); }\n\n\t@memoize\n\tget tmpDir(): URI { return URI.file(this.paths.tmpDir); }\n\n\t@memoize\n\tget cacheHome(): URI { return URI.file(this.userDataPath); }\n\n\t@memoize\n\tget stateResource(): URI { return joinPath(this.appSettingsHome, 'globalStorage', 'storage.json'); }\n\n\t@memoize\n\tget userRoamingDataHome(): URI { return this.appSettingsHome.with({ scheme: Schemas.vscodeUserData }); }\n\n\t@memoize\n\tget userDataSyncHome(): URI { return joinPath(this.appSettingsHome, 'sync'); }\n\n\tget logsHome(): URI {\n\t\tif (!this.args.logsPath) {\n\t\t\tconst key = toLocalISOString(new Date()).replace(/-|:|\\.\\d+Z$/g, '');\n\t\t\tthis.args.logsPath = join(this.userDataPath, 'logs', key);\n\t\t}\n\n\t\treturn URI.file(this.args.logsPath);\n\t}\n\n\t@memoize\n\tget sync(): 'on' | 'off' | undefined { return this.args.sync; }\n\n\t@memoize\n\tget machineSettingsResource(): URI { return joinPath(URI.file(join(this.userDataPath, 'Machine')), 'settings.json'); }\n\n\t@memoize\n\tget workspaceStorageHome(): URI { return joinPath(this.appSettingsHome, 'workspaceStorage'); }\n\n\t@memoize\n\tget localHistoryHome(): URI { return joinPath(this.appSettingsHome, 'History'); }\n\n\t@memoize\n\tget keyboardLayoutResource(): URI { return joinPath(this.userRoamingDataHome, 'keyboardLayout.json'); }\n\n\t@memoize\n\tget argvResource(): URI {\n\t\tconst vscodePortable = env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn URI.file(join(vscodePortable, 'argv.json'));\n\t\t}\n\n\t\treturn joinPath(this.userHome, this.productService.dataFolderName, 'argv.json');\n\t}\n\n\t@memoize\n\tget isExtensionDevelopment(): boolean { return !!this.args.extensionDevelopmentPath; }\n\n\t@memoize\n\tget untitledWorkspacesHome(): URI { return URI.file(join(this.userDataPath, 'Workspaces')); }\n\n\t@memoize\n\tget builtinExtensionsPath(): string {\n\t\tconst cliBuiltinExtensionsDir = this.args['builtin-extensions-dir'];\n\t\tif (cliBuiltinExtensionsDir) {\n\t\t\treturn resolve(cliBuiltinExtensionsDir);\n\t\t}\n\n\t\treturn normalize(join(FileAccess.asFileUri('').fsPath, '..', 'extensions'));\n\t}\n\n\tget extensionsDownloadLocation(): URI {\n\t\tconst cliExtensionsDownloadDir = this.args['extensions-download-dir'];\n\t\tif (cliExtensionsDownloadDir) {\n\t\t\treturn URI.file(resolve(cliExtensionsDownloadDir));\n\t\t}\n\n\t\treturn URI.file(join(this.userDataPath, 'CachedExtensionVSIXs'));\n\t}\n\n\t@memoize\n\tget extensionsPath(): string {\n\t\tconst cliExtensionsDir = this.args['extensions-dir'];\n\t\tif (cliExtensionsDir) {\n\t\t\treturn resolve(cliExtensionsDir);\n\t\t}\n\n\t\tconst vscodeExtensions = env['VSCODE_EXTENSIONS'];\n\t\tif (vscodeExtensions) {\n\t\t\treturn vscodeExtensions;\n\t\t}\n\n\t\tconst vscodePortable = env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn join(vscodePortable, 'extensions');\n\t\t}\n\n\t\treturn joinPath(this.userHome, this.productService.dataFolderName, 'extensions').fsPath;\n\t}\n\n\t@memoize\n\tget extensionDevelopmentLocationURI(): URI[] | undefined {\n\t\tconst extensionDevelopmentPaths = this.args.extensionDevelopmentPath;\n\t\tif (Array.isArray(extensionDevelopmentPaths)) {\n\t\t\treturn extensionDevelopmentPaths.map(extensionDevelopmentPath => {\n\t\t\t\tif (/^[^:/?#]+?:\\/\\//.test(extensionDevelopmentPath)) {\n\t\t\t\t\treturn URI.parse(extensionDevelopmentPath);\n\t\t\t\t}\n\n\t\t\t\treturn URI.file(normalize(extensionDevelopmentPath));\n\t\t\t});\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\t@memoize\n\tget extensionDevelopmentKind(): ExtensionKind[] | undefined {\n\t\treturn this.args.extensionDevelopmentKind?.map(kind => kind === 'ui' || kind === 'workspace' || kind === 'web' ? kind : 'workspace');\n\t}\n\n\t@memoize\n\tget extensionTestsLocationURI(): URI | undefined {\n\t\tconst extensionTestsPath = this.args.extensionTestsPath;\n\t\tif (extensionTestsPath) {\n\t\t\tif (/^[^:/?#]+?:\\/\\//.test(extensionTestsPath)) {\n\t\t\t\treturn URI.parse(extensionTestsPath);\n\t\t\t}\n\n\t\t\treturn URI.file(normalize(extensionTestsPath));\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tget disableExtensions(): boolean | string[] {\n\t\tif (this.args['disable-extensions']) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst disableExtensions = this.args['disable-extension'];\n\t\tif (disableExtensions) {\n\t\t\tif (typeof disableExtensions === 'string') {\n\t\t\t\treturn [disableExtensions];\n\t\t\t}\n\n\t\t\tif (Array.isArray(disableExtensions) && disableExtensions.length > 0) {\n\t\t\t\treturn disableExtensions;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t@memoize\n\tget debugExtensionHost(): IExtensionHostDebugParams { return parseExtensionHostDebugPort(this.args, this.isBuilt); }\n\tget debugRenderer(): boolean { return !!this.args.debugRenderer; }\n\n\tget isBuilt(): boolean { return !env['VSCODE_DEV']; }\n\tget verbose(): boolean { return !!this.args.verbose; }\n\n\t@memoize\n\tget logLevel(): string | undefined { return this.args.log?.find(entry => !EXTENSION_IDENTIFIER_WITH_LOG_REGEX.test(entry)); }\n\t@memoize\n\tget extensionLogLevel(): [string, string][] | undefined {\n\t\tconst result: [string, string][] = [];\n\t\tfor (const entry of this.args.log || []) {\n\t\t\tconst matches = EXTENSION_IDENTIFIER_WITH_LOG_REGEX.exec(entry);\n\t\t\tif (matches && matches[1] && matches[2]) {\n\t\t\t\tresult.push([matches[1], matches[2]]);\n\t\t\t}\n\t\t}\n\t\treturn result.length ? result : undefined;\n\t}\n\n\t@memoize\n\tget serviceMachineIdResource(): URI { return joinPath(URI.file(this.userDataPath), 'machineid'); }\n\n\tget crashReporterId(): string | undefined { return this.args['crash-reporter-id']; }\n\tget crashReporterDirectory(): string | undefined { return this.args['crash-reporter-directory']; }\n\n\t@memoize\n\tget disableTelemetry(): boolean { return !!this.args['disable-telemetry']; }\n\n\t@memoize\n\tget disableWorkspaceTrust(): boolean { return !!this.args['disable-workspace-trust']; }\n\n\t@memoize\n\tget useInMemorySecretStorage(): boolean { return !!this.args['use-inmemory-secretstorage']; }\n\n\t@memoize\n\tget policyFile(): URI | undefined {\n\t\tif (this.args['__enable-file-policy']) {\n\t\t\tconst vscodePortable = env['VSCODE_PORTABLE'];\n\t\t\tif (vscodePortable) {\n\t\t\t\treturn URI.file(join(vscodePortable, 'policy.json'));\n\t\t\t}\n\n\t\t\treturn joinPath(this.userHome, this.productService.dataFolderName, 'policy.json');\n\t\t}\n\t\treturn undefined;\n\t}\n\n\teditSessionId: string | undefined = this.args['editSessionId'];\n\n\tget continueOn(): string | undefined {\n\t\treturn this.args['continueOn'];\n\t}\n\n\tset continueOn(value: string | undefined) {\n\t\tthis.args['continueOn'] = value;\n\t}\n\n\tget args(): NativeParsedArgs { return this._args; }\n\n\tconstructor(\n\t\tprivate readonly _args: NativeParsedArgs,\n\t\tprivate readonly paths: INativeEnvironmentPaths,\n\t\tprotected readonly productService: IProductService\n\t) { }\n}\n\nexport function parseExtensionHostDebugPort(args: NativeParsedArgs, isBuilt: boolean): IExtensionHostDebugParams {\n\treturn parseDebugParams(args['inspect-extensions'], args['inspect-brk-extensions'], 5870, isBuilt, args.debugId, args.extensionEnvironment);\n}\n\nexport function parseDebugParams(debugArg: string | undefined, debugBrkArg: string | undefined, defaultBuildPort: number, isBuilt: boolean, debugId?: string, environmentString?: string): IExtensionHostDebugParams {\n\tconst portStr = debugBrkArg || debugArg;\n\tconst port = Number(portStr) || (!isBuilt ? defaultBuildPort : null);\n\tconst brk = port ? Boolean(!!debugBrkArg) : false;\n\tlet env: Record<string, string> | undefined;\n\tif (environmentString) {\n\t\ttry {\n\t\t\tenv = JSON.parse(environmentString);\n\t\t} catch {\n\t\t\t// ignore\n\t\t}\n\t}\n\n\treturn { port, break: brk, debugId, env };\n}\n"],
  "mappings": ";;;;;;;;;;;AAKA,SAAS,wBAAwB;AACjC,SAAS,eAAe;AACxB,SAAS,YAAY,eAAe;AACpC,SAAS,SAAS,MAAM,WAAW,eAAe;AAClD,SAAS,WAAW;AACpB,SAAS,gBAAgB;AACzB,SAAS,WAAW;AACpB,SAAS,wBAAwB;AACjC,SAAS,eAAe,2BAA2B,iCAAiC;AACpF,SAAS,uBAAuB;AAEzB,MAAM,sCAAsC;AAyB5C,MAAe,iCAAsE;AAAA,EAiO3F,YACkB,OACA,OACE,gBAClB;AAHgB;AACA;AACE;AAAA,EAChB;AAAA,EA9QL,OAyC4F;AAAA;AAAA;AAAA,EAK3F,IAAI,UAAkB;AAAE,WAAO,QAAQ,WAAW,UAAU,EAAE,EAAE,MAAM;AAAA,EAAG;AAAA,EAGzE,IAAI,WAAgB;AAAE,WAAO,IAAI,KAAK,KAAK,MAAM,OAAO;AAAA,EAAG;AAAA,EAG3D,IAAI,eAAuB;AAAE,WAAO,KAAK,MAAM;AAAA,EAAa;AAAA,EAG5D,IAAI,kBAAuB;AAAE,WAAO,IAAI,KAAK,KAAK,KAAK,cAAc,MAAM,CAAC;AAAA,EAAG;AAAA,EAG/E,IAAI,SAAc;AAAE,WAAO,IAAI,KAAK,KAAK,MAAM,MAAM;AAAA,EAAG;AAAA,EAGxD,IAAI,YAAiB;AAAE,WAAO,IAAI,KAAK,KAAK,YAAY;AAAA,EAAG;AAAA,EAG3D,IAAI,gBAAqB;AAAE,WAAO,SAAS,KAAK,iBAAiB,iBAAiB,cAAc;AAAA,EAAG;AAAA,EAGnG,IAAI,sBAA2B;AAAE,WAAO,KAAK,gBAAgB,KAAK,EAAE,QAAQ,QAAQ,eAAe,CAAC;AAAA,EAAG;AAAA,EAGvG,IAAI,mBAAwB;AAAE,WAAO,SAAS,KAAK,iBAAiB,MAAM;AAAA,EAAG;AAAA,EAE7E,IAAI,WAAgB;AACnB,QAAI,CAAC,KAAK,KAAK,UAAU;AACxB,YAAM,MAAM,iBAAiB,oBAAI,KAAK,CAAC,EAAE,QAAQ,gBAAgB,EAAE;AACnE,WAAK,KAAK,WAAW,KAAK,KAAK,cAAc,QAAQ,GAAG;AAAA,IACzD;AAEA,WAAO,IAAI,KAAK,KAAK,KAAK,QAAQ;AAAA,EACnC;AAAA,EAGA,IAAI,OAAiC;AAAE,WAAO,KAAK,KAAK;AAAA,EAAM;AAAA,EAG9D,IAAI,0BAA+B;AAAE,WAAO,SAAS,IAAI,KAAK,KAAK,KAAK,cAAc,SAAS,CAAC,GAAG,eAAe;AAAA,EAAG;AAAA,EAGrH,IAAI,uBAA4B;AAAE,WAAO,SAAS,KAAK,iBAAiB,kBAAkB;AAAA,EAAG;AAAA,EAG7F,IAAI,mBAAwB;AAAE,WAAO,SAAS,KAAK,iBAAiB,SAAS;AAAA,EAAG;AAAA,EAGhF,IAAI,yBAA8B;AAAE,WAAO,SAAS,KAAK,qBAAqB,qBAAqB;AAAA,EAAG;AAAA,EAGtG,IAAI,eAAoB;AACvB,UAAM,iBAAiB,IAAI,iBAAiB;AAC5C,QAAI,gBAAgB;AACnB,aAAO,IAAI,KAAK,KAAK,gBAAgB,WAAW,CAAC;AAAA,IAClD;AAEA,WAAO,SAAS,KAAK,UAAU,KAAK,eAAe,gBAAgB,WAAW;AAAA,EAC/E;AAAA,EAGA,IAAI,yBAAkC;AAAE,WAAO,CAAC,CAAC,KAAK,KAAK;AAAA,EAA0B;AAAA,EAGrF,IAAI,yBAA8B;AAAE,WAAO,IAAI,KAAK,KAAK,KAAK,cAAc,YAAY,CAAC;AAAA,EAAG;AAAA,EAG5F,IAAI,wBAAgC;AACnC,UAAM,0BAA0B,KAAK,KAAK,wBAAwB;AAClE,QAAI,yBAAyB;AAC5B,aAAO,QAAQ,uBAAuB;AAAA,IACvC;AAEA,WAAO,UAAU,KAAK,WAAW,UAAU,EAAE,EAAE,QAAQ,MAAM,YAAY,CAAC;AAAA,EAC3E;AAAA,EAEA,IAAI,6BAAkC;AACrC,UAAM,2BAA2B,KAAK,KAAK,yBAAyB;AACpE,QAAI,0BAA0B;AAC7B,aAAO,IAAI,KAAK,QAAQ,wBAAwB,CAAC;AAAA,IAClD;AAEA,WAAO,IAAI,KAAK,KAAK,KAAK,cAAc,sBAAsB,CAAC;AAAA,EAChE;AAAA,EAGA,IAAI,iBAAyB;AAC5B,UAAM,mBAAmB,KAAK,KAAK,gBAAgB;AACnD,QAAI,kBAAkB;AACrB,aAAO,QAAQ,gBAAgB;AAAA,IAChC;AAEA,UAAM,mBAAmB,IAAI,mBAAmB;AAChD,QAAI,kBAAkB;AACrB,aAAO;AAAA,IACR;AAEA,UAAM,iBAAiB,IAAI,iBAAiB;AAC5C,QAAI,gBAAgB;AACnB,aAAO,KAAK,gBAAgB,YAAY;AAAA,IACzC;AAEA,WAAO,SAAS,KAAK,UAAU,KAAK,eAAe,gBAAgB,YAAY,EAAE;AAAA,EAClF;AAAA,EAGA,IAAI,kCAAqD;AACxD,UAAM,4BAA4B,KAAK,KAAK;AAC5C,QAAI,MAAM,QAAQ,yBAAyB,GAAG;AAC7C,aAAO,0BAA0B,IAAI,8BAA4B;AAChE,YAAI,kBAAkB,KAAK,wBAAwB,GAAG;AACrD,iBAAO,IAAI,MAAM,wBAAwB;AAAA,QAC1C;AAEA,eAAO,IAAI,KAAK,UAAU,wBAAwB,CAAC;AAAA,MACpD,CAAC;AAAA,IACF;AAEA,WAAO;AAAA,EACR;AAAA,EAGA,IAAI,2BAAwD;AAC3D,WAAO,KAAK,KAAK,0BAA0B,IAAI,UAAQ,SAAS,QAAQ,SAAS,eAAe,SAAS,QAAQ,OAAO,WAAW;AAAA,EACpI;AAAA,EAGA,IAAI,4BAA6C;AAChD,UAAM,qBAAqB,KAAK,KAAK;AACrC,QAAI,oBAAoB;AACvB,UAAI,kBAAkB,KAAK,kBAAkB,GAAG;AAC/C,eAAO,IAAI,MAAM,kBAAkB;AAAA,MACpC;AAEA,aAAO,IAAI,KAAK,UAAU,kBAAkB,CAAC;AAAA,IAC9C;AAEA,WAAO;AAAA,EACR;AAAA,EAEA,IAAI,oBAAwC;AAC3C,QAAI,KAAK,KAAK,oBAAoB,GAAG;AACpC,aAAO;AAAA,IACR;AAEA,UAAM,oBAAoB,KAAK,KAAK,mBAAmB;AACvD,QAAI,mBAAmB;AACtB,UAAI,OAAO,sBAAsB,UAAU;AAC1C,eAAO,CAAC,iBAAiB;AAAA,MAC1B;AAEA,UAAI,MAAM,QAAQ,iBAAiB,KAAK,kBAAkB,SAAS,GAAG;AACrE,eAAO;AAAA,MACR;AAAA,IACD;AAEA,WAAO;AAAA,EACR;AAAA,EAGA,IAAI,qBAAgD;AAAE,WAAO,4BAA4B,KAAK,MAAM,KAAK,OAAO;AAAA,EAAG;AAAA,EACnH,IAAI,gBAAyB;AAAE,WAAO,CAAC,CAAC,KAAK,KAAK;AAAA,EAAe;AAAA,EAEjE,IAAI,UAAmB;AAAE,WAAO,CAAC,IAAI,YAAY;AAAA,EAAG;AAAA,EACpD,IAAI,UAAmB;AAAE,WAAO,CAAC,CAAC,KAAK,KAAK;AAAA,EAAS;AAAA,EAGrD,IAAI,WAA+B;AAAE,WAAO,KAAK,KAAK,KAAK,KAAK,WAAS,CAAC,oCAAoC,KAAK,KAAK,CAAC;AAAA,EAAG;AAAA,EAE5H,IAAI,oBAAoD;AACvD,UAAM,SAA6B,CAAC;AACpC,eAAW,SAAS,KAAK,KAAK,OAAO,CAAC,GAAG;AACxC,YAAM,UAAU,oCAAoC,KAAK,KAAK;AAC9D,UAAI,WAAW,QAAQ,CAAC,KAAK,QAAQ,CAAC,GAAG;AACxC,eAAO,KAAK,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;AAAA,MACrC;AAAA,IACD;AACA,WAAO,OAAO,SAAS,SAAS;AAAA,EACjC;AAAA,EAGA,IAAI,2BAAgC;AAAE,WAAO,SAAS,IAAI,KAAK,KAAK,YAAY,GAAG,WAAW;AAAA,EAAG;AAAA,EAEjG,IAAI,kBAAsC;AAAE,WAAO,KAAK,KAAK,mBAAmB;AAAA,EAAG;AAAA,EACnF,IAAI,yBAA6C;AAAE,WAAO,KAAK,KAAK,0BAA0B;AAAA,EAAG;AAAA,EAGjG,IAAI,mBAA4B;AAAE,WAAO,CAAC,CAAC,KAAK,KAAK,mBAAmB;AAAA,EAAG;AAAA,EAG3E,IAAI,wBAAiC;AAAE,WAAO,CAAC,CAAC,KAAK,KAAK,yBAAyB;AAAA,EAAG;AAAA,EAGtF,IAAI,2BAAoC;AAAE,WAAO,CAAC,CAAC,KAAK,KAAK,4BAA4B;AAAA,EAAG;AAAA,EAG5F,IAAI,aAA8B;AACjC,QAAI,KAAK,KAAK,sBAAsB,GAAG;AACtC,YAAM,iBAAiB,IAAI,iBAAiB;AAC5C,UAAI,gBAAgB;AACnB,eAAO,IAAI,KAAK,KAAK,gBAAgB,aAAa,CAAC;AAAA,MACpD;AAEA,aAAO,SAAS,KAAK,UAAU,KAAK,eAAe,gBAAgB,aAAa;AAAA,IACjF;AACA,WAAO;AAAA,EACR;AAAA,EAEA,gBAAoC,KAAK,KAAK,eAAe;AAAA,EAE7D,IAAI,aAAiC;AACpC,WAAO,KAAK,KAAK,YAAY;AAAA,EAC9B;AAAA,EAEA,IAAI,WAAW,OAA2B;AACzC,SAAK,KAAK,YAAY,IAAI;AAAA,EAC3B;AAAA,EAEA,IAAI,OAAyB;AAAE,WAAO,KAAK;AAAA,EAAO;AAOnD;AAjOK;AAAA,EADH;AAAA,GAJoB,iCAKjB;AAGA;AAAA,EADH;AAAA,GAPoB,iCAQjB;AAGA;AAAA,EADH;AAAA,GAVoB,iCAWjB;AAGA;AAAA,EADH;AAAA,GAboB,iCAcjB;AAGA;AAAA,EADH;AAAA,GAhBoB,iCAiBjB;AAGA;AAAA,EADH;AAAA,GAnBoB,iCAoBjB;AAGA;AAAA,EADH;AAAA,GAtBoB,iCAuBjB;AAGA;AAAA,EADH;AAAA,GAzBoB,iCA0BjB;AAGA;AAAA,EADH;AAAA,GA5BoB,iCA6BjB;AAYA;AAAA,EADH;AAAA,GAxCoB,iCAyCjB;AAGA;AAAA,EADH;AAAA,GA3CoB,iCA4CjB;AAGA;AAAA,EADH;AAAA,GA9CoB,iCA+CjB;AAGA;AAAA,EADH;AAAA,GAjDoB,iCAkDjB;AAGA;AAAA,EADH;AAAA,GApDoB,iCAqDjB;AAGA;AAAA,EADH;AAAA,GAvDoB,iCAwDjB;AAUA;AAAA,EADH;AAAA,GAjEoB,iCAkEjB;AAGA;AAAA,EADH;AAAA,GApEoB,iCAqEjB;AAGA;AAAA,EADH;AAAA,GAvEoB,iCAwEjB;AAmBA;AAAA,EADH;AAAA,GA1FoB,iCA2FjB;AAoBA;AAAA,EADH;AAAA,GA9GoB,iCA+GjB;AAgBA;AAAA,EADH;AAAA,GA9HoB,iCA+HjB;AAKA;AAAA,EADH;AAAA,GAnIoB,iCAoIjB;AAiCA;AAAA,EADH;AAAA,GApKoB,iCAqKjB;AAOA;AAAA,EADH;AAAA,GA3KoB,iCA4KjB;AAEA;AAAA,EADH;AAAA,GA7KoB,iCA8KjB;AAYA;AAAA,EADH;AAAA,GAzLoB,iCA0LjB;AAMA;AAAA,EADH;AAAA,GA/LoB,iCAgMjB;AAGA;AAAA,EADH;AAAA,GAlMoB,iCAmMjB;AAGA;AAAA,EADH;AAAA,GArMoB,iCAsMjB;AAGA;AAAA,EADH;AAAA,GAxMoB,iCAyMjB;AA+BE,SAAS,4BAA4B,MAAwB,SAA6C;AAChH,SAAO,iBAAiB,KAAK,oBAAoB,GAAG,KAAK,wBAAwB,GAAG,MAAM,SAAS,KAAK,SAAS,KAAK,oBAAoB;AAC3I;AAFgB;AAIT,SAAS,iBAAiB,UAA8B,aAAiC,kBAA0B,SAAkB,SAAkB,mBAAuD;AACpN,QAAM,UAAU,eAAe;AAC/B,QAAM,OAAO,OAAO,OAAO,MAAM,CAAC,UAAU,mBAAmB;AAC/D,QAAM,MAAM,OAAO,QAAQ,CAAC,CAAC,WAAW,IAAI;AAC5C,MAAIA;AACJ,MAAI,mBAAmB;AACtB,QAAI;AACH,MAAAA,OAAM,KAAK,MAAM,iBAAiB;AAAA,IACnC,QAAQ;AAAA,IAER;AAAA,EACD;AAEA,SAAO,EAAE,MAAM,OAAO,KAAK,SAAS,KAAAA,KAAI;AACzC;AAdgB;",
  "names": ["env"]
}
