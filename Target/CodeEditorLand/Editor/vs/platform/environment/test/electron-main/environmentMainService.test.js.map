{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/environment/test/electron-main/environmentMainService.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { EnvironmentMainService } from '../../electron-main/environmentMainService.js';\nimport product from '../../../product/common/product.js';\nimport { isLinux } from '../../../../base/common/platform.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\n\nsuite('EnvironmentMainService', () => {\n\n\ttest('can unset and restore snap env variables', () => {\n\t\tconst service = new EnvironmentMainService({ '_': [] }, { '_serviceBrand': undefined, ...product });\n\n\t\tprocess.env['TEST_ARG1_VSCODE_SNAP_ORIG'] = 'original';\n\t\tprocess.env['TEST_ARG1'] = 'modified';\n\t\tprocess.env['TEST_ARG2_SNAP'] = 'test_arg2';\n\t\tprocess.env['TEST_ARG3_VSCODE_SNAP_ORIG'] = '';\n\t\tprocess.env['TEST_ARG3'] = 'test_arg3_non_empty';\n\n\t\t// Unset snap env variables\n\t\tservice.unsetSnapExportedVariables();\n\t\tif (isLinux) {\n\t\t\tassert.strictEqual(process.env['TEST_ARG1'], 'original');\n\t\t\tassert.strictEqual(process.env['TEST_ARG2'], undefined);\n\t\t\tassert.strictEqual(process.env['TEST_ARG1_VSCODE_SNAP_ORIG'], 'original');\n\t\t\tassert.strictEqual(process.env['TEST_ARG2_SNAP'], 'test_arg2');\n\t\t\tassert.strictEqual(process.env['TEST_ARG3_VSCODE_SNAP_ORIG'], '');\n\t\t\tassert.strictEqual(process.env['TEST_ARG3'], undefined);\n\t\t} else {\n\t\t\tassert.strictEqual(process.env['TEST_ARG1'], 'modified');\n\t\t\tassert.strictEqual(process.env['TEST_ARG2'], undefined);\n\t\t\tassert.strictEqual(process.env['TEST_ARG1_VSCODE_SNAP_ORIG'], 'original');\n\t\t\tassert.strictEqual(process.env['TEST_ARG2_SNAP'], 'test_arg2');\n\t\t\tassert.strictEqual(process.env['TEST_ARG3_VSCODE_SNAP_ORIG'], '');\n\t\t\tassert.strictEqual(process.env['TEST_ARG3'], 'test_arg3_non_empty');\n\t\t}\n\n\t\t// Restore snap env variables\n\t\tservice.restoreSnapExportedVariables();\n\t\tif (isLinux) {\n\t\t\tassert.strictEqual(process.env['TEST_ARG1'], 'modified');\n\t\t\tassert.strictEqual(process.env['TEST_ARG1_VSCODE_SNAP_ORIG'], 'original');\n\t\t\tassert.strictEqual(process.env['TEST_ARG2_SNAP'], 'test_arg2');\n\t\t\tassert.strictEqual(process.env['TEST_ARG2'], undefined);\n\t\t\tassert.strictEqual(process.env['TEST_ARG3_VSCODE_SNAP_ORIG'], '');\n\t\t\tassert.strictEqual(process.env['TEST_ARG3'], 'test_arg3_non_empty');\n\t\t} else {\n\t\t\tassert.strictEqual(process.env['TEST_ARG1'], 'modified');\n\t\t\tassert.strictEqual(process.env['TEST_ARG1_VSCODE_SNAP_ORIG'], 'original');\n\t\t\tassert.strictEqual(process.env['TEST_ARG2_SNAP'], 'test_arg2');\n\t\t\tassert.strictEqual(process.env['TEST_ARG2'], undefined);\n\t\t\tassert.strictEqual(process.env['TEST_ARG3_VSCODE_SNAP_ORIG'], '');\n\t\t\tassert.strictEqual(process.env['TEST_ARG3'], 'test_arg3_non_empty');\n\t\t}\n\t});\n\n\ttest('can invoke unsetSnapExportedVariables and restoreSnapExportedVariables multiple times', () => {\n\t\tconst service = new EnvironmentMainService({ '_': [] }, { '_serviceBrand': undefined, ...product });\n\t\t// Mock snap environment\n\t\tprocess.env['SNAP'] = '1';\n\t\tprocess.env['SNAP_REVISION'] = 'test_revision';\n\n\t\tprocess.env['TEST_ARG1_VSCODE_SNAP_ORIG'] = 'original';\n\t\tprocess.env['TEST_ARG1'] = 'modified';\n\t\tprocess.env['TEST_ARG2_SNAP'] = 'test_arg2';\n\t\tprocess.env['TEST_ARG3_VSCODE_SNAP_ORIG'] = '';\n\t\tprocess.env['TEST_ARG3'] = 'test_arg3_non_empty';\n\n\t\t// Unset snap env variables\n\t\tservice.unsetSnapExportedVariables();\n\t\tservice.unsetSnapExportedVariables();\n\t\tservice.unsetSnapExportedVariables();\n\t\tif (isLinux) {\n\t\t\tassert.strictEqual(process.env['TEST_ARG1'], 'original');\n\t\t\tassert.strictEqual(process.env['TEST_ARG2'], undefined);\n\t\t\tassert.strictEqual(process.env['TEST_ARG1_VSCODE_SNAP_ORIG'], 'original');\n\t\t\tassert.strictEqual(process.env['TEST_ARG2_SNAP'], 'test_arg2');\n\t\t\tassert.strictEqual(process.env['TEST_ARG3_VSCODE_SNAP_ORIG'], '');\n\t\t\tassert.strictEqual(process.env['TEST_ARG3'], undefined);\n\t\t} else {\n\t\t\tassert.strictEqual(process.env['TEST_ARG1'], 'modified');\n\t\t\tassert.strictEqual(process.env['TEST_ARG2'], undefined);\n\t\t\tassert.strictEqual(process.env['TEST_ARG1_VSCODE_SNAP_ORIG'], 'original');\n\t\t\tassert.strictEqual(process.env['TEST_ARG2_SNAP'], 'test_arg2');\n\t\t\tassert.strictEqual(process.env['TEST_ARG3_VSCODE_SNAP_ORIG'], '');\n\t\t\tassert.strictEqual(process.env['TEST_ARG3'], 'test_arg3_non_empty');\n\t\t}\n\n\t\t// Restore snap env variables\n\t\tservice.restoreSnapExportedVariables();\n\t\tservice.restoreSnapExportedVariables();\n\t\tif (isLinux) {\n\t\t\tassert.strictEqual(process.env['TEST_ARG1'], 'modified');\n\t\t\tassert.strictEqual(process.env['TEST_ARG1_VSCODE_SNAP_ORIG'], 'original');\n\t\t\tassert.strictEqual(process.env['TEST_ARG2_SNAP'], 'test_arg2');\n\t\t\tassert.strictEqual(process.env['TEST_ARG2'], undefined);\n\t\t\tassert.strictEqual(process.env['TEST_ARG3_VSCODE_SNAP_ORIG'], '');\n\t\t\tassert.strictEqual(process.env['TEST_ARG3'], 'test_arg3_non_empty');\n\t\t} else {\n\t\t\tassert.strictEqual(process.env['TEST_ARG1'], 'modified');\n\t\t\tassert.strictEqual(process.env['TEST_ARG1_VSCODE_SNAP_ORIG'], 'original');\n\t\t\tassert.strictEqual(process.env['TEST_ARG2_SNAP'], 'test_arg2');\n\t\t\tassert.strictEqual(process.env['TEST_ARG2'], undefined);\n\t\t\tassert.strictEqual(process.env['TEST_ARG3_VSCODE_SNAP_ORIG'], '');\n\t\t\tassert.strictEqual(process.env['TEST_ARG3'], 'test_arg3_non_empty');\n\t\t}\n\n\t\t// Unset snap env variables\n\t\tservice.unsetSnapExportedVariables();\n\t\tif (isLinux) {\n\t\t\tassert.strictEqual(process.env['TEST_ARG1'], 'original');\n\t\t\tassert.strictEqual(process.env['TEST_ARG2'], undefined);\n\t\t\tassert.strictEqual(process.env['TEST_ARG1_VSCODE_SNAP_ORIG'], 'original');\n\t\t\tassert.strictEqual(process.env['TEST_ARG2_SNAP'], 'test_arg2');\n\t\t\tassert.strictEqual(process.env['TEST_ARG3_VSCODE_SNAP_ORIG'], '');\n\t\t\tassert.strictEqual(process.env['TEST_ARG3'], undefined);\n\t\t} else {\n\t\t\tassert.strictEqual(process.env['TEST_ARG1'], 'modified');\n\t\t\tassert.strictEqual(process.env['TEST_ARG2'], undefined);\n\t\t\tassert.strictEqual(process.env['TEST_ARG1_VSCODE_SNAP_ORIG'], 'original');\n\t\t\tassert.strictEqual(process.env['TEST_ARG2_SNAP'], 'test_arg2');\n\t\t\tassert.strictEqual(process.env['TEST_ARG3_VSCODE_SNAP_ORIG'], '');\n\t\t\tassert.strictEqual(process.env['TEST_ARG3'], 'test_arg3_non_empty');\n\t\t}\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"],
  "mappings": "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",
  "names": []
}
