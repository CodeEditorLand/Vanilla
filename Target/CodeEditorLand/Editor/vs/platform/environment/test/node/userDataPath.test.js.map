{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/environment/test/node/userDataPath.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\nimport { OPTIONS, parseArgs } from '../../node/argv.js';\nimport { getUserDataPath } from '../../node/userDataPath.js';\nimport product from '../../../product/common/product.js';\n\nsuite('User data path', () => {\n\n\ttest('getUserDataPath - default', () => {\n\t\tconst path = getUserDataPath(parseArgs(process.argv, OPTIONS), product.nameShort);\n\t\tassert.ok(path.length > 0);\n\t});\n\n\ttest('getUserDataPath - portable mode', () => {\n\t\tconst origPortable = process.env['VSCODE_PORTABLE'];\n\t\ttry {\n\t\t\tconst portableDir = 'portable-dir';\n\t\t\tprocess.env['VSCODE_PORTABLE'] = portableDir;\n\n\t\t\tconst path = getUserDataPath(parseArgs(process.argv, OPTIONS), product.nameShort);\n\t\t\tassert.ok(path.includes(portableDir));\n\t\t} finally {\n\t\t\tif (typeof origPortable === 'string') {\n\t\t\t\tprocess.env['VSCODE_PORTABLE'] = origPortable;\n\t\t\t} else {\n\t\t\t\tdelete process.env['VSCODE_PORTABLE'];\n\t\t\t}\n\t\t}\n\t});\n\n\ttest('getUserDataPath - --user-data-dir', () => {\n\t\tconst cliUserDataDir = 'cli-data-dir';\n\t\tconst args = parseArgs(process.argv, OPTIONS);\n\t\targs['user-data-dir'] = cliUserDataDir;\n\n\t\tconst path = getUserDataPath(args, product.nameShort);\n\t\tassert.ok(path.includes(cliUserDataDir));\n\t});\n\n\ttest('getUserDataPath - VSCODE_APPDATA', () => {\n\t\tconst origAppData = process.env['VSCODE_APPDATA'];\n\t\ttry {\n\t\t\tconst appDataDir = 'appdata-dir';\n\t\t\tprocess.env['VSCODE_APPDATA'] = appDataDir;\n\n\t\t\tconst path = getUserDataPath(parseArgs(process.argv, OPTIONS), product.nameShort);\n\t\t\tassert.ok(path.includes(appDataDir));\n\t\t} finally {\n\t\t\tif (typeof origAppData === 'string') {\n\t\t\t\tprocess.env['VSCODE_APPDATA'] = origAppData;\n\t\t\t} else {\n\t\t\t\tdelete process.env['VSCODE_APPDATA'];\n\t\t\t}\n\t\t}\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"],
  "mappings": "AAKA,OAAO,YAAY;AACnB,SAAS,+CAA+C;AACxD,SAAS,SAAS,iBAAiB;AACnC,SAAS,uBAAuB;AAChC,OAAO,aAAa;AAEpB,MAAM,kBAAkB,MAAM;AAE7B,OAAK,6BAA6B,MAAM;AACvC,UAAM,OAAO,gBAAgB,UAAU,QAAQ,MAAM,OAAO,GAAG,QAAQ,SAAS;AAChF,WAAO,GAAG,KAAK,SAAS,CAAC;AAAA,EAC1B,CAAC;AAED,OAAK,mCAAmC,MAAM;AAC7C,UAAM,eAAe,QAAQ,IAAI,iBAAiB;AAClD,QAAI;AACH,YAAM,cAAc;AACpB,cAAQ,IAAI,iBAAiB,IAAI;AAEjC,YAAM,OAAO,gBAAgB,UAAU,QAAQ,MAAM,OAAO,GAAG,QAAQ,SAAS;AAChF,aAAO,GAAG,KAAK,SAAS,WAAW,CAAC;AAAA,IACrC,UAAE;AACD,UAAI,OAAO,iBAAiB,UAAU;AACrC,gBAAQ,IAAI,iBAAiB,IAAI;AAAA,MAClC,OAAO;AACN,eAAO,QAAQ,IAAI,iBAAiB;AAAA,MACrC;AAAA,IACD;AAAA,EACD,CAAC;AAED,OAAK,qCAAqC,MAAM;AAC/C,UAAM,iBAAiB;AACvB,UAAM,OAAO,UAAU,QAAQ,MAAM,OAAO;AAC5C,SAAK,eAAe,IAAI;AAExB,UAAM,OAAO,gBAAgB,MAAM,QAAQ,SAAS;AACpD,WAAO,GAAG,KAAK,SAAS,cAAc,CAAC;AAAA,EACxC,CAAC;AAED,OAAK,oCAAoC,MAAM;AAC9C,UAAM,cAAc,QAAQ,IAAI,gBAAgB;AAChD,QAAI;AACH,YAAM,aAAa;AACnB,cAAQ,IAAI,gBAAgB,IAAI;AAEhC,YAAM,OAAO,gBAAgB,UAAU,QAAQ,MAAM,OAAO,GAAG,QAAQ,SAAS;AAChF,aAAO,GAAG,KAAK,SAAS,UAAU,CAAC;AAAA,IACpC,UAAE;AACD,UAAI,OAAO,gBAAgB,UAAU;AACpC,gBAAQ,IAAI,gBAAgB,IAAI;AAAA,MACjC,OAAO;AACN,eAAO,QAAQ,IAAI,gBAAgB;AAAA,MACpC;AAAA,IACD;AAAA,EACD,CAAC;AAED,0CAAwC;AACzC,CAAC;",
  "names": []
}
