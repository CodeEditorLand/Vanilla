{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/environment/test/node/nativeModules.integrationTest.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { isMacintosh, isWindows } from '../../../../base/common/platform.js';\nimport { flakySuite } from '../../../../base/test/common/testUtils.js';\n\nfunction testErrorMessage(module: string): string {\n\treturn `Unable to load \"${module}\" dependency. It was probably not compiled for the right operating system architecture or had missing build tools.`;\n}\n\nflakySuite('Native Modules (all platforms)', () => {\n\n\t(isMacintosh ? test.skip : test)('kerberos', async () => { // Somehow fails on macOS ARM?\n\t\tconst { default: kerberos } = await import('kerberos');\n\t\tassert.ok(typeof kerberos.initializeClient === 'function', testErrorMessage('kerberos'));\n\t});\n\n\ttest('minimist', async () => {\n\t\tconst { default: minimist } = await import('minimist');\n\t\tassert.ok(typeof minimist === 'function', testErrorMessage('minimist'));\n\t});\n\n\ttest('yauzl', async () => {\n\t\tconst { default: yauzl } = await import('yauzl');\n\t\tassert.ok(typeof yauzl.ZipFile === 'function', testErrorMessage('yauzl'));\n\t});\n\n\ttest('yazl', async () => {\n\t\tconst { default: yazl } = await import('yazl');\n\t\tassert.ok(typeof yazl.ZipFile === 'function', testErrorMessage('yazl'));\n\t});\n\n\ttest('v8-inspect-profiler', async () => {\n\t\tconst { default: profiler } = await import('v8-inspect-profiler');\n\t\tassert.ok(typeof profiler.startProfiling === 'function', testErrorMessage('v8-inspect-profiler'));\n\t});\n\n\ttest('native-is-elevated', async () => {\n\t\tconst { default: isElevated } = await import('native-is-elevated');\n\t\tassert.ok(typeof isElevated === 'function', testErrorMessage('native-is-elevated '));\n\n\t\tconst result = isElevated();\n\t\tassert.ok(typeof result === 'boolean', testErrorMessage('native-is-elevated'));\n\t});\n\n\ttest('native-keymap', async () => {\n\t\tconst keyMap = await import('native-keymap');\n\t\tassert.ok(typeof keyMap.onDidChangeKeyboardLayout === 'function', testErrorMessage('native-keymap'));\n\t\tassert.ok(typeof keyMap.getCurrentKeyboardLayout === 'function', testErrorMessage('native-keymap'));\n\n\t\tconst result = keyMap.getCurrentKeyboardLayout();\n\t\tassert.ok(result, testErrorMessage('native-keymap'));\n\t});\n\n\ttest('native-watchdog', async () => {\n\t\tconst watchDog = await import('native-watchdog');\n\t\tassert.ok(typeof watchDog.start === 'function', testErrorMessage('native-watchdog'));\n\t});\n\n\ttest('@vscode/sudo-prompt', async () => {\n\t\tconst prompt = await import('@vscode/sudo-prompt');\n\t\tassert.ok(typeof prompt.exec === 'function', testErrorMessage('@vscode/sudo-prompt'));\n\t});\n\n\ttest('@vscode/policy-watcher', async () => {\n\t\tconst watcher = await import('@vscode/policy-watcher');\n\t\tassert.ok(typeof watcher.createWatcher === 'function', testErrorMessage('@vscode/policy-watcher'));\n\t});\n\n\ttest('node-pty', async () => {\n\t\tconst nodePty = await import('node-pty');\n\t\tassert.ok(typeof nodePty.spawn === 'function', testErrorMessage('node-pty'));\n\t});\n\n\ttest('open', async () => {\n\t\tconst { default: open } = await import('open');\n\t\tassert.ok(typeof open === 'function', testErrorMessage('open'));\n\t});\n\n\ttest('@vscode/spdlog', async () => {\n\t\tconst spdlog = await import('@vscode/spdlog');\n\t\tassert.ok(typeof spdlog.createRotatingLogger === 'function', testErrorMessage('@vscode/spdlog'));\n\t\tassert.ok(typeof spdlog.version === 'number', testErrorMessage('@vscode/spdlog'));\n\t});\n\n\ttest('@parcel/watcher', async () => {\n\t\tconst parcelWatcher = await import('@parcel/watcher');\n\t\tassert.ok(typeof parcelWatcher.subscribe === 'function', testErrorMessage('@parcel/watcher'));\n\t});\n\n\ttest('@bpasero/watcher', async () => {\n\t\tconst parcelWatcher2 = await import('@bpasero/watcher');\n\t\tassert.ok(typeof parcelWatcher2.subscribe === 'function', testErrorMessage('@bpasero/watcher'));\n\t});\n\n\ttest('@vscode/deviceid', async () => {\n\t\tconst deviceIdPackage = await import('@vscode/deviceid');\n\t\tassert.ok(typeof deviceIdPackage.getDeviceId === 'function', testErrorMessage('@vscode/deviceid'));\n\t});\n\n\ttest('@vscode/ripgrep', async () => {\n\t\tconst ripgrep = await import('@vscode/ripgrep');\n\t\tassert.ok(typeof ripgrep.rgPath === 'string', testErrorMessage('@vscode/ripgrep'));\n\t});\n\n\ttest('vscode-regexpp', async () => {\n\t\tconst regexpp = await import('vscode-regexpp');\n\t\tassert.ok(typeof regexpp.RegExpParser === 'function', testErrorMessage('vscode-regexpp'));\n\t});\n\n\ttest('@vscode/sqlite3', async () => {\n\t\t// ESM-comment-begin\n\t\t// const sqlite3 = await import('@vscode/sqlite3');\n\t\t// ESM-comment-end\n\t\t// ESM-uncomment-begin\n\t\tconst { default: sqlite3 } = await import('@vscode/sqlite3');\n\t\t// ESM-uncomment-end\n\t\tassert.ok(typeof sqlite3.Database === 'function', testErrorMessage('@vscode/sqlite3'));\n\t});\n\n\ttest('http-proxy-agent', async () => {\n\t\t// ESM-comment-begin\n\t\t// const mod = await import('http-proxy-agent');\n\t\t// ESM-comment-end\n\t\t// ESM-uncomment-begin\n\t\tconst { default: mod } = await import('http-proxy-agent');\n\t\t// ESM-uncomment-end\n\t\tassert.ok(typeof mod.HttpProxyAgent === 'function', testErrorMessage('http-proxy-agent'));\n\t});\n\n\ttest('https-proxy-agent', async () => {\n\t\t// ESM-comment-begin\n\t\t// const mod = await import('https-proxy-agent');\n\t\t// ESM-comment-end\n\t\t// ESM-uncomment-begin\n\t\tconst { default: mod } = await import('https-proxy-agent');\n\t\t// ESM-uncomment-end\n\t\tassert.ok(typeof mod.HttpsProxyAgent === 'function', testErrorMessage('https-proxy-agent'));\n\t});\n\n\ttest('@vscode/proxy-agent', async () => {\n\t\tconst proxyAgent = await import('@vscode/proxy-agent');\n\t\t// This call will load `@vscode/proxy-agent` which is a native module that we want to test on Windows\n\t\tconst windowsCerts = await proxyAgent.loadSystemCertificates({\n\t\t\tlog: {\n\t\t\t\ttrace: () => { },\n\t\t\t\tdebug: () => { },\n\t\t\t\tinfo: () => { },\n\t\t\t\twarn: () => { },\n\t\t\t\terror: () => { }\n\t\t\t}\n\t\t});\n\t\tassert.ok(windowsCerts.length > 0, testErrorMessage('@vscode/proxy-agent'));\n\t});\n});\n\n(!isWindows ? suite.skip : suite)('Native Modules (Windows)', () => {\n\n\ttest('@vscode/windows-mutex', async () => {\n\t\tconst mutex = await import('@vscode/windows-mutex');\n\t\tassert.ok(mutex && typeof mutex.isActive === 'function', testErrorMessage('@vscode/windows-mutex'));\n\t\tassert.ok(typeof mutex.isActive === 'function', testErrorMessage('@vscode/windows-mutex'));\n\t\tassert.ok(typeof mutex.Mutex === 'function', testErrorMessage('@vscode/windows-mutex'));\n\t});\n\n\ttest('windows-foreground-love', async () => {\n\t\tconst foregroundLove = await import('windows-foreground-love');\n\t\tassert.ok(typeof foregroundLove.allowSetForegroundWindow === 'function', testErrorMessage('windows-foreground-love'));\n\n\t\tconst result = foregroundLove.allowSetForegroundWindow(process.pid);\n\t\tassert.ok(typeof result === 'boolean', testErrorMessage('windows-foreground-love'));\n\t});\n\n\ttest('@vscode/windows-process-tree', async () => {\n\t\tconst processTree = await import('@vscode/windows-process-tree');\n\t\tassert.ok(typeof processTree.getProcessTree === 'function', testErrorMessage('@vscode/windows-process-tree'));\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tprocessTree.getProcessTree(process.pid, tree => {\n\t\t\t\tif (tree) {\n\t\t\t\t\tresolve();\n\t\t\t\t} else {\n\t\t\t\t\treject(new Error(testErrorMessage('@vscode/windows-process-tree')));\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t});\n\n\ttest('@vscode/windows-registry', async () => {\n\t\tconst windowsRegistry = await import('@vscode/windows-registry');\n\t\tassert.ok(typeof windowsRegistry.GetStringRegKey === 'function', testErrorMessage('@vscode/windows-registry'));\n\n\t\tconst result = windowsRegistry.GetStringRegKey('HKEY_LOCAL_MACHINE', 'SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion', 'EditionID');\n\t\tassert.ok(typeof result === 'string' || typeof result === 'undefined', testErrorMessage('@vscode/windows-registry'));\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
