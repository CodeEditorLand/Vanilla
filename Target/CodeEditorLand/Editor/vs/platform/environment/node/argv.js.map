{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/environment/node/argv.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport minimist from \"minimist\";\nimport { isWindows } from \"../../../base/common/platform.js\";\nimport { localize } from \"../../../nls.js\";\nimport type { NativeParsedArgs } from \"../common/argv.js\";\n\n/**\n * This code is also used by standalone cli's. Avoid adding any other dependencies.\n */\nconst helpCategories = {\n\to: localize(\"optionsUpperCase\", \"Options\"),\n\te: localize(\"extensionsManagement\", \"Extensions Management\"),\n\tt: localize(\"troubleshooting\", \"Troubleshooting\"),\n};\n\nexport interface Option<OptionType> {\n\ttype: OptionType;\n\talias?: string;\n\tdeprecates?: string[]; // old deprecated ids\n\targs?: string | string[];\n\tdescription?: string;\n\tdeprecationMessage?: string;\n\tallowEmptyValue?: boolean;\n\tcat?: keyof typeof helpCategories;\n\tglobal?: boolean;\n}\n\nexport interface Subcommand<T> {\n\ttype: \"subcommand\";\n\tdescription?: string;\n\tdeprecationMessage?: string;\n\toptions: OptionDescriptions<Required<T>>;\n}\n\nexport type OptionDescriptions<T> = {\n\t[P in keyof T]: T[P] extends boolean | undefined\n\t\t? Option<\"boolean\">\n\t\t: T[P] extends string | undefined\n\t\t\t? Option<\"string\">\n\t\t\t: T[P] extends string[] | undefined\n\t\t\t\t? Option<\"string[]\">\n\t\t\t\t: Subcommand<T[P]>;\n};\n\nexport const NATIVE_CLI_COMMANDS = [\"tunnel\", \"serve-web\"] as const;\n\nexport const OPTIONS: OptionDescriptions<Required<NativeParsedArgs>> = {\n\ttunnel: {\n\t\ttype: \"subcommand\",\n\t\tdescription:\n\t\t\t\"Make the current machine accessible from vscode.dev or other machines through a secure tunnel\",\n\t\toptions: {\n\t\t\t\"cli-data-dir\": {\n\t\t\t\ttype: \"string\",\n\t\t\t\targs: \"dir\",\n\t\t\t\tdescription: localize(\n\t\t\t\t\t\"cliDataDir\",\n\t\t\t\t\t\"Directory where CLI metadata should be stored.\",\n\t\t\t\t),\n\t\t\t},\n\t\t\t\"disable-telemetry\": { type: \"boolean\" },\n\t\t\t\"telemetry-level\": { type: \"string\" },\n\t\t\tuser: {\n\t\t\t\ttype: \"subcommand\",\n\t\t\t\toptions: {\n\t\t\t\t\tlogin: {\n\t\t\t\t\t\ttype: \"subcommand\",\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\tprovider: { type: \"string\" },\n\t\t\t\t\t\t\t\"access-token\": { type: \"string\" },\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\t\"serve-web\": {\n\t\ttype: \"subcommand\",\n\t\tdescription: \"Run a server that displays the editor UI in browsers.\",\n\t\toptions: {\n\t\t\t\"cli-data-dir\": {\n\t\t\t\ttype: \"string\",\n\t\t\t\targs: \"dir\",\n\t\t\t\tdescription: localize(\n\t\t\t\t\t\"cliDataDir\",\n\t\t\t\t\t\"Directory where CLI metadata should be stored.\",\n\t\t\t\t),\n\t\t\t},\n\t\t\t\"disable-telemetry\": { type: \"boolean\" },\n\t\t\t\"telemetry-level\": { type: \"string\" },\n\t\t},\n\t},\n\n\tdiff: {\n\t\ttype: \"boolean\",\n\t\tcat: \"o\",\n\t\talias: \"d\",\n\t\targs: [\"file\", \"file\"],\n\t\tdescription: localize(\"diff\", \"Compare two files with each other.\"),\n\t},\n\tmerge: {\n\t\ttype: \"boolean\",\n\t\tcat: \"o\",\n\t\talias: \"m\",\n\t\targs: [\"path1\", \"path2\", \"base\", \"result\"],\n\t\tdescription: localize(\n\t\t\t\"merge\",\n\t\t\t\"Perform a three-way merge by providing paths for two modified versions of a file, the common origin of both modified versions and the output file to save merge results.\",\n\t\t),\n\t},\n\tadd: {\n\t\ttype: \"boolean\",\n\t\tcat: \"o\",\n\t\talias: \"a\",\n\t\targs: \"folder\",\n\t\tdescription: localize(\n\t\t\t\"add\",\n\t\t\t\"Add folder(s) to the last active window.\",\n\t\t),\n\t},\n\tgoto: {\n\t\ttype: \"boolean\",\n\t\tcat: \"o\",\n\t\talias: \"g\",\n\t\targs: \"file:line[:character]\",\n\t\tdescription: localize(\n\t\t\t\"goto\",\n\t\t\t\"Open a file at the path on the specified line and character position.\",\n\t\t),\n\t},\n\t\"new-window\": {\n\t\ttype: \"boolean\",\n\t\tcat: \"o\",\n\t\talias: \"n\",\n\t\tdescription: localize(\"newWindow\", \"Force to open a new window.\"),\n\t},\n\t\"reuse-window\": {\n\t\ttype: \"boolean\",\n\t\tcat: \"o\",\n\t\talias: \"r\",\n\t\tdescription: localize(\n\t\t\t\"reuseWindow\",\n\t\t\t\"Force to open a file or folder in an already opened window.\",\n\t\t),\n\t},\n\twait: {\n\t\ttype: \"boolean\",\n\t\tcat: \"o\",\n\t\talias: \"w\",\n\t\tdescription: localize(\n\t\t\t\"wait\",\n\t\t\t\"Wait for the files to be closed before returning.\",\n\t\t),\n\t},\n\twaitMarkerFilePath: { type: \"string\" },\n\tlocale: {\n\t\ttype: \"string\",\n\t\tcat: \"o\",\n\t\targs: \"locale\",\n\t\tdescription: localize(\n\t\t\t\"locale\",\n\t\t\t\"The locale to use (e.g. en-US or zh-TW).\",\n\t\t),\n\t},\n\t\"user-data-dir\": {\n\t\ttype: \"string\",\n\t\tcat: \"o\",\n\t\targs: \"dir\",\n\t\tdescription: localize(\n\t\t\t\"userDataDir\",\n\t\t\t\"Specifies the directory that user data is kept in. Can be used to open multiple distinct instances of Code.\",\n\t\t),\n\t},\n\tprofile: {\n\t\ttype: \"string\",\n\t\tcat: \"o\",\n\t\targs: \"profileName\",\n\t\tdescription: localize(\n\t\t\t\"profileName\",\n\t\t\t\"Opens the provided folder or workspace with the given profile and associates the profile with the workspace. If the profile does not exist, a new empty one is created.\",\n\t\t),\n\t},\n\thelp: {\n\t\ttype: \"boolean\",\n\t\tcat: \"o\",\n\t\talias: \"h\",\n\t\tdescription: localize(\"help\", \"Print usage.\"),\n\t},\n\n\t\"extensions-dir\": {\n\t\ttype: \"string\",\n\t\tdeprecates: [\"extensionHomePath\"],\n\t\tcat: \"e\",\n\t\targs: \"dir\",\n\t\tdescription: localize(\n\t\t\t\"extensionHomePath\",\n\t\t\t\"Set the root path for extensions.\",\n\t\t),\n\t},\n\t\"extensions-download-dir\": { type: \"string\" },\n\t\"builtin-extensions-dir\": { type: \"string\" },\n\t\"list-extensions\": {\n\t\ttype: \"boolean\",\n\t\tcat: \"e\",\n\t\tdescription: localize(\n\t\t\t\"listExtensions\",\n\t\t\t\"List the installed extensions.\",\n\t\t),\n\t},\n\t\"show-versions\": {\n\t\ttype: \"boolean\",\n\t\tcat: \"e\",\n\t\tdescription: localize(\n\t\t\t\"showVersions\",\n\t\t\t\"Show versions of installed extensions, when using --list-extensions.\",\n\t\t),\n\t},\n\tcategory: {\n\t\ttype: \"string\",\n\t\tallowEmptyValue: true,\n\t\tcat: \"e\",\n\t\tdescription: localize(\n\t\t\t\"category\",\n\t\t\t\"Filters installed extensions by provided category, when using --list-extensions.\",\n\t\t),\n\t\targs: \"category\",\n\t},\n\t\"install-extension\": {\n\t\ttype: \"string[]\",\n\t\tcat: \"e\",\n\t\targs: \"ext-id | path\",\n\t\tdescription: localize(\n\t\t\t\"installExtension\",\n\t\t\t\"Installs or updates an extension. The argument is either an extension id or a path to a VSIX. The identifier of an extension is '${publisher}.${name}'. Use '--force' argument to update to latest version. To install a specific version provide '@${version}'. For example: 'vscode.csharp@1.2.3'.\",\n\t\t),\n\t},\n\t\"pre-release\": {\n\t\ttype: \"boolean\",\n\t\tcat: \"e\",\n\t\tdescription: localize(\n\t\t\t\"install prerelease\",\n\t\t\t\"Installs the pre-release version of the extension, when using --install-extension\",\n\t\t),\n\t},\n\t\"uninstall-extension\": {\n\t\ttype: \"string[]\",\n\t\tcat: \"e\",\n\t\targs: \"ext-id\",\n\t\tdescription: localize(\"uninstallExtension\", \"Uninstalls an extension.\"),\n\t},\n\t\"update-extensions\": {\n\t\ttype: \"boolean\",\n\t\tcat: \"e\",\n\t\tdescription: localize(\n\t\t\t\"updateExtensions\",\n\t\t\t\"Update the installed extensions.\",\n\t\t),\n\t},\n\t\"enable-proposed-api\": {\n\t\ttype: \"string[]\",\n\t\tallowEmptyValue: true,\n\t\tcat: \"e\",\n\t\targs: \"ext-id\",\n\t\tdescription: localize(\n\t\t\t\"experimentalApis\",\n\t\t\t\"Enables proposed API features for extensions. Can receive one or more extension IDs to enable individually.\",\n\t\t),\n\t},\n\n\tversion: {\n\t\ttype: \"boolean\",\n\t\tcat: \"t\",\n\t\talias: \"v\",\n\t\tdescription: localize(\"version\", \"Print version.\"),\n\t},\n\tverbose: {\n\t\ttype: \"boolean\",\n\t\tcat: \"t\",\n\t\tglobal: true,\n\t\tdescription: localize(\n\t\t\t\"verbose\",\n\t\t\t\"Print verbose output (implies --wait).\",\n\t\t),\n\t},\n\tlog: {\n\t\ttype: \"string[]\",\n\t\tcat: \"t\",\n\t\targs: \"level\",\n\t\tglobal: true,\n\t\tdescription: localize(\n\t\t\t\"log\",\n\t\t\t\"Log level to use. Default is 'info'. Allowed values are 'critical', 'error', 'warn', 'info', 'debug', 'trace', 'off'. You can also configure the log level of an extension by passing extension id and log level in the following format: '${publisher}.${name}:${logLevel}'. For example: 'vscode.csharp:trace'. Can receive one or more such entries.\",\n\t\t),\n\t},\n\tstatus: {\n\t\ttype: \"boolean\",\n\t\talias: \"s\",\n\t\tcat: \"t\",\n\t\tdescription: localize(\n\t\t\t\"status\",\n\t\t\t\"Print process usage and diagnostics information.\",\n\t\t),\n\t},\n\t\"prof-startup\": {\n\t\ttype: \"boolean\",\n\t\tcat: \"t\",\n\t\tdescription: localize(\n\t\t\t\"prof-startup\",\n\t\t\t\"Run CPU profiler during startup.\",\n\t\t),\n\t},\n\t\"prof-append-timers\": { type: \"string\" },\n\t\"prof-duration-markers\": { type: \"string[]\" },\n\t\"prof-duration-markers-file\": { type: \"string\" },\n\t\"no-cached-data\": { type: \"boolean\" },\n\t\"prof-startup-prefix\": { type: \"string\" },\n\t\"prof-v8-extensions\": { type: \"boolean\" },\n\t\"disable-extensions\": {\n\t\ttype: \"boolean\",\n\t\tdeprecates: [\"disableExtensions\"],\n\t\tcat: \"t\",\n\t\tdescription: localize(\n\t\t\t\"disableExtensions\",\n\t\t\t\"Disable all installed extensions. This option is not persisted and is effective only when the command opens a new window.\",\n\t\t),\n\t},\n\t\"disable-extension\": {\n\t\ttype: \"string[]\",\n\t\tcat: \"t\",\n\t\targs: \"ext-id\",\n\t\tdescription: localize(\n\t\t\t\"disableExtension\",\n\t\t\t\"Disable the provided extension. This option is not persisted and is effective only when the command opens a new window.\",\n\t\t),\n\t},\n\tsync: {\n\t\ttype: \"string\",\n\t\tcat: \"t\",\n\t\tdescription: localize(\"turn sync\", \"Turn sync on or off.\"),\n\t\targs: [\"on | off\"],\n\t},\n\n\t\"inspect-extensions\": {\n\t\ttype: \"string\",\n\t\tallowEmptyValue: true,\n\t\tdeprecates: [\"debugPluginHost\"],\n\t\targs: \"port\",\n\t\tcat: \"t\",\n\t\tdescription: localize(\n\t\t\t\"inspect-extensions\",\n\t\t\t\"Allow debugging and profiling of extensions. Check the developer tools for the connection URI.\",\n\t\t),\n\t},\n\t\"inspect-brk-extensions\": {\n\t\ttype: \"string\",\n\t\tallowEmptyValue: true,\n\t\tdeprecates: [\"debugBrkPluginHost\"],\n\t\targs: \"port\",\n\t\tcat: \"t\",\n\t\tdescription: localize(\n\t\t\t\"inspect-brk-extensions\",\n\t\t\t\"Allow debugging and profiling of extensions with the extension host being paused after start. Check the developer tools for the connection URI.\",\n\t\t),\n\t},\n\t\"disable-lcd-text\": {\n\t\ttype: \"boolean\",\n\t\tcat: \"t\",\n\t\tdescription: localize(\"disableLCDText\", \"Disable LCD font rendering.\"),\n\t},\n\t\"disable-gpu\": {\n\t\ttype: \"boolean\",\n\t\tcat: \"t\",\n\t\tdescription: localize(\n\t\t\t\"disableGPU\",\n\t\t\t\"Disable GPU hardware acceleration.\",\n\t\t),\n\t},\n\t\"disable-chromium-sandbox\": {\n\t\ttype: \"boolean\",\n\t\tcat: \"t\",\n\t\tdescription: localize(\n\t\t\t\"disableChromiumSandbox\",\n\t\t\t\"Use this option only when there is requirement to launch the application as sudo user on Linux or when running as an elevated user in an applocker environment on Windows.\",\n\t\t),\n\t},\n\tsandbox: { type: \"boolean\" },\n\ttelemetry: {\n\t\ttype: \"boolean\",\n\t\tcat: \"t\",\n\t\tdescription: localize(\n\t\t\t\"telemetry\",\n\t\t\t\"Shows all telemetry events which VS code collects.\",\n\t\t),\n\t},\n\n\tremote: { type: \"string\", allowEmptyValue: true },\n\t\"folder-uri\": { type: \"string[]\", cat: \"o\", args: \"uri\" },\n\t\"file-uri\": { type: \"string[]\", cat: \"o\", args: \"uri\" },\n\n\t\"locate-extension\": { type: \"string[]\" },\n\textensionDevelopmentPath: { type: \"string[]\" },\n\textensionDevelopmentKind: { type: \"string[]\" },\n\textensionTestsPath: { type: \"string\" },\n\textensionEnvironment: { type: \"string\" },\n\tdebugId: { type: \"string\" },\n\tdebugRenderer: { type: \"boolean\" },\n\t\"inspect-ptyhost\": { type: \"string\", allowEmptyValue: true },\n\t\"inspect-brk-ptyhost\": { type: \"string\", allowEmptyValue: true },\n\t\"inspect-search\": {\n\t\ttype: \"string\",\n\t\tdeprecates: [\"debugSearch\"],\n\t\tallowEmptyValue: true,\n\t},\n\t\"inspect-brk-search\": {\n\t\ttype: \"string\",\n\t\tdeprecates: [\"debugBrkSearch\"],\n\t\tallowEmptyValue: true,\n\t},\n\t\"inspect-sharedprocess\": { type: \"string\", allowEmptyValue: true },\n\t\"inspect-brk-sharedprocess\": { type: \"string\", allowEmptyValue: true },\n\t\"export-default-configuration\": { type: \"string\" },\n\t\"install-source\": { type: \"string\" },\n\t\"enable-smoke-test-driver\": { type: \"boolean\" },\n\tlogExtensionHostCommunication: { type: \"boolean\" },\n\t\"skip-release-notes\": { type: \"boolean\" },\n\t\"skip-welcome\": { type: \"boolean\" },\n\t\"disable-telemetry\": { type: \"boolean\" },\n\t\"disable-updates\": { type: \"boolean\" },\n\t\"use-inmemory-secretstorage\": {\n\t\ttype: \"boolean\",\n\t\tdeprecates: [\"disable-keytar\"],\n\t},\n\t\"password-store\": { type: \"string\" },\n\t\"disable-workspace-trust\": { type: \"boolean\" },\n\t\"disable-crash-reporter\": { type: \"boolean\" },\n\t\"crash-reporter-directory\": { type: \"string\" },\n\t\"crash-reporter-id\": { type: \"string\" },\n\t\"skip-add-to-recently-opened\": { type: \"boolean\" },\n\t\"open-url\": { type: \"boolean\" },\n\t\"file-write\": { type: \"boolean\" },\n\t\"file-chmod\": { type: \"boolean\" },\n\t\"install-builtin-extension\": { type: \"string[]\" },\n\tforce: { type: \"boolean\" },\n\t\"do-not-sync\": { type: \"boolean\" },\n\ttrace: { type: \"boolean\" },\n\t\"trace-category-filter\": { type: \"string\" },\n\t\"trace-options\": { type: \"string\" },\n\t\"preserve-env\": { type: \"boolean\" },\n\t\"force-user-env\": { type: \"boolean\" },\n\t\"force-disable-user-env\": { type: \"boolean\" },\n\t\"open-devtools\": { type: \"boolean\" },\n\t\"disable-gpu-sandbox\": { type: \"boolean\" },\n\tlogsPath: { type: \"string\" },\n\t\"__enable-file-policy\": { type: \"boolean\" },\n\teditSessionId: { type: \"string\" },\n\tcontinueOn: { type: \"string\" },\n\t\"locate-shell-integration-path\": {\n\t\ttype: \"string\",\n\t\targs: [\"bash\", \"pwsh\", \"zsh\", \"fish\"],\n\t},\n\n\t\"enable-coi\": { type: \"boolean\" },\n\n\t// chromium flags\n\t\"no-proxy-server\": { type: \"boolean\" },\n\t// Minimist incorrectly parses keys that start with `--no`\n\t// https://github.com/substack/minimist/blob/aeb3e27dae0412de5c0494e9563a5f10c82cc7a9/index.js#L118-L121\n\t// If --no-sandbox is passed via cli wrapper it will be treated as --sandbox which is incorrect, we use\n\t// the alias here to make sure --no-sandbox is always respected.\n\t// For https://github.com/microsoft/vscode/issues/128279\n\t\"no-sandbox\": { type: \"boolean\", alias: \"sandbox\" },\n\t\"proxy-server\": { type: \"string\" },\n\t\"proxy-bypass-list\": { type: \"string\" },\n\t\"proxy-pac-url\": { type: \"string\" },\n\t\"js-flags\": { type: \"string\" }, // chrome js flags\n\tinspect: { type: \"string\", allowEmptyValue: true },\n\t\"inspect-brk\": { type: \"string\", allowEmptyValue: true },\n\tnolazy: { type: \"boolean\" }, // node inspect\n\t\"force-device-scale-factor\": { type: \"string\" },\n\t\"force-renderer-accessibility\": { type: \"boolean\" },\n\t\"ignore-certificate-errors\": { type: \"boolean\" },\n\t\"allow-insecure-localhost\": { type: \"boolean\" },\n\t\"log-net-log\": { type: \"string\" },\n\tvmodule: { type: \"string\" },\n\t_urls: { type: \"string[]\" },\n\t\"disable-dev-shm-usage\": { type: \"boolean\" },\n\t\"profile-temp\": { type: \"boolean\" },\n\t\"ozone-platform\": { type: \"string\" },\n\t\"enable-tracing\": { type: \"string\" },\n\t\"trace-startup-format\": { type: \"string\" },\n\t\"trace-startup-file\": { type: \"string\" },\n\t\"trace-startup-duration\": { type: \"string\" },\n\n\t_: { type: \"string[]\" }, // main arguments\n};\n\nexport interface ErrorReporter {\n\tonUnknownOption(id: string): void;\n\tonMultipleValues(id: string, usedValue: string): void;\n\tonEmptyValue(id: string): void;\n\tonDeprecatedOption(deprecatedId: string, message: string): void;\n\n\tgetSubcommandReporter?(command: string): ErrorReporter;\n}\n\nconst ignoringReporter = {\n\tonUnknownOption: () => {},\n\tonMultipleValues: () => {},\n\tonEmptyValue: () => {},\n\tonDeprecatedOption: () => {},\n};\n\nexport function parseArgs<T>(\n\targs: string[],\n\toptions: OptionDescriptions<T>,\n\terrorReporter: ErrorReporter = ignoringReporter,\n): T {\n\tconst firstArg = args.find((a) => a.length > 0 && a[0] !== \"-\");\n\n\tconst alias: { [key: string]: string } = {};\n\tconst stringOptions: string[] = [\"_\"];\n\tconst booleanOptions: string[] = [];\n\tconst globalOptions: OptionDescriptions<any> = {};\n\tlet command: Subcommand<any> | undefined;\n\tfor (const optionId in options) {\n\t\tconst o = options[optionId];\n\t\tif (o.type === \"subcommand\") {\n\t\t\tif (optionId === firstArg) {\n\t\t\t\tcommand = o;\n\t\t\t}\n\t\t} else {\n\t\t\tif (o.alias) {\n\t\t\t\talias[optionId] = o.alias;\n\t\t\t}\n\n\t\t\tif (o.type === \"string\" || o.type === \"string[]\") {\n\t\t\t\tstringOptions.push(optionId);\n\t\t\t\tif (o.deprecates) {\n\t\t\t\t\tstringOptions.push(...o.deprecates);\n\t\t\t\t}\n\t\t\t} else if (o.type === \"boolean\") {\n\t\t\t\tbooleanOptions.push(optionId);\n\t\t\t\tif (o.deprecates) {\n\t\t\t\t\tbooleanOptions.push(...o.deprecates);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (o.global) {\n\t\t\t\tglobalOptions[optionId] = o;\n\t\t\t}\n\t\t}\n\t}\n\tif (command && firstArg) {\n\t\tconst options = globalOptions;\n\t\tfor (const optionId in command.options) {\n\t\t\toptions[optionId] = command.options[optionId];\n\t\t}\n\t\tconst newArgs = args.filter((a) => a !== firstArg);\n\t\tconst reporter = errorReporter.getSubcommandReporter\n\t\t\t? errorReporter.getSubcommandReporter(firstArg)\n\t\t\t: undefined;\n\t\tconst subcommandOptions = parseArgs(newArgs, options, reporter);\n\t\treturn <T>{\n\t\t\t[firstArg]: subcommandOptions,\n\t\t\t_: [],\n\t\t};\n\t}\n\n\t// remove aliases to avoid confusion\n\tconst parsedArgs = minimist(args, {\n\t\tstring: stringOptions,\n\t\tboolean: booleanOptions,\n\t\talias,\n\t});\n\n\tconst cleanedArgs: any = {};\n\tconst remainingArgs: any = parsedArgs;\n\n\t// https://github.com/microsoft/vscode/issues/58177, https://github.com/microsoft/vscode/issues/106617\n\tcleanedArgs._ = parsedArgs._.map((arg) => String(arg)).filter(\n\t\t(arg) => arg.length > 0,\n\t);\n\n\tdelete remainingArgs._;\n\n\tfor (const optionId in options) {\n\t\tconst o = options[optionId];\n\t\tif (o.type === \"subcommand\") {\n\t\t\tcontinue;\n\t\t}\n\t\tif (o.alias) {\n\t\t\tdelete remainingArgs[o.alias];\n\t\t}\n\n\t\tlet val = remainingArgs[optionId];\n\t\tif (o.deprecates) {\n\t\t\tfor (const deprecatedId of o.deprecates) {\n\t\t\t\tif (remainingArgs.hasOwnProperty(deprecatedId)) {\n\t\t\t\t\tif (!val) {\n\t\t\t\t\t\tval = remainingArgs[deprecatedId];\n\t\t\t\t\t\tif (val) {\n\t\t\t\t\t\t\terrorReporter.onDeprecatedOption(\n\t\t\t\t\t\t\t\tdeprecatedId,\n\t\t\t\t\t\t\t\to.deprecationMessage ||\n\t\t\t\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\t\t\t\"deprecated.useInstead\",\n\t\t\t\t\t\t\t\t\t\t\"Use {0} instead.\",\n\t\t\t\t\t\t\t\t\t\toptionId,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdelete remainingArgs[deprecatedId];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (typeof val !== \"undefined\") {\n\t\t\tif (o.type === \"string[]\") {\n\t\t\t\tif (!Array.isArray(val)) {\n\t\t\t\t\tval = [val];\n\t\t\t\t}\n\t\t\t\tif (!o.allowEmptyValue) {\n\t\t\t\t\tconst sanitized = val.filter((v: string) => v.length > 0);\n\t\t\t\t\tif (sanitized.length !== val.length) {\n\t\t\t\t\t\terrorReporter.onEmptyValue(optionId);\n\t\t\t\t\t\tval = sanitized.length > 0 ? sanitized : undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (o.type === \"string\") {\n\t\t\t\tif (Array.isArray(val)) {\n\t\t\t\t\tval = val.pop(); // take the last\n\t\t\t\t\terrorReporter.onMultipleValues(optionId, val);\n\t\t\t\t} else if (!val && !o.allowEmptyValue) {\n\t\t\t\t\terrorReporter.onEmptyValue(optionId);\n\t\t\t\t\tval = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcleanedArgs[optionId] = val;\n\n\t\t\tif (o.deprecationMessage) {\n\t\t\t\terrorReporter.onDeprecatedOption(\n\t\t\t\t\toptionId,\n\t\t\t\t\to.deprecationMessage,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tdelete remainingArgs[optionId];\n\t}\n\n\tfor (const key in remainingArgs) {\n\t\terrorReporter.onUnknownOption(key);\n\t}\n\n\treturn cleanedArgs;\n}\n\nfunction formatUsage(optionId: string, option: Option<any>) {\n\tlet args = \"\";\n\tif (option.args) {\n\t\tif (Array.isArray(option.args)) {\n\t\t\targs = ` <${option.args.join(\"> <\")}>`;\n\t\t} else {\n\t\t\targs = ` <${option.args}>`;\n\t\t}\n\t}\n\tif (option.alias) {\n\t\treturn `-${option.alias} --${optionId}${args}`;\n\t}\n\treturn `--${optionId}${args}`;\n}\n\n// exported only for testing\nexport function formatOptions(\n\toptions: OptionDescriptions<any>,\n\tcolumns: number,\n): string[] {\n\tconst usageTexts: [string, string][] = [];\n\tfor (const optionId in options) {\n\t\tconst o = options[optionId];\n\t\tconst usageText = formatUsage(optionId, o);\n\t\tusageTexts.push([usageText, o.description!]);\n\t}\n\treturn formatUsageTexts(usageTexts, columns);\n}\n\nfunction formatUsageTexts(usageTexts: [string, string][], columns: number) {\n\tconst maxLength = usageTexts.reduce(\n\t\t(previous, e) => Math.max(previous, e[0].length),\n\t\t12,\n\t);\n\tconst argLength = maxLength + 2 /*left padding*/ + 1 /*right padding*/;\n\tif (columns - argLength < 25) {\n\t\t// Use a condensed version on narrow terminals\n\t\treturn usageTexts.reduce<string[]>(\n\t\t\t(r, ut) => r.concat([`  ${ut[0]}`, `      ${ut[1]}`]),\n\t\t\t[],\n\t\t);\n\t}\n\tconst descriptionColumns = columns - argLength - 1;\n\tconst result: string[] = [];\n\tfor (const ut of usageTexts) {\n\t\tconst usage = ut[0];\n\t\tconst wrappedDescription = wrapText(ut[1], descriptionColumns);\n\t\tconst keyPadding = indent(\n\t\t\targLength - usage.length - 2 /*left padding*/,\n\t\t);\n\t\tresult.push(\"  \" + usage + keyPadding + wrappedDescription[0]);\n\t\tfor (let i = 1; i < wrappedDescription.length; i++) {\n\t\t\tresult.push(indent(argLength) + wrappedDescription[i]);\n\t\t}\n\t}\n\treturn result;\n}\n\nfunction indent(count: number): string {\n\treturn \" \".repeat(count);\n}\n\nfunction wrapText(text: string, columns: number): string[] {\n\tconst lines: string[] = [];\n\twhile (text.length) {\n\t\tconst index =\n\t\t\ttext.length < columns\n\t\t\t\t? text.length\n\t\t\t\t: text.lastIndexOf(\" \", columns);\n\t\tconst line = text.slice(0, index).trim();\n\t\ttext = text.slice(index);\n\t\tlines.push(line);\n\t}\n\treturn lines;\n}\n\nexport function buildHelpMessage(\n\tproductName: string,\n\texecutableName: string,\n\tversion: string,\n\toptions: OptionDescriptions<any>,\n\tcapabilities?: { noPipe?: boolean; noInputFiles: boolean },\n): string {\n\tconst columns = (process.stdout.isTTY && process.stdout.columns) || 80;\n\tconst inputFiles =\n\t\tcapabilities?.noInputFiles !== true\n\t\t\t? `[${localize(\"paths\", \"paths\")}...]`\n\t\t\t: \"\";\n\n\tconst help = [`${productName} ${version}`];\n\thelp.push(\"\");\n\thelp.push(\n\t\t`${localize(\"usage\", \"Usage\")}: ${executableName} [${localize(\"options\", \"options\")}]${inputFiles}`,\n\t);\n\thelp.push(\"\");\n\tif (capabilities?.noPipe !== true) {\n\t\tif (isWindows) {\n\t\t\thelp.push(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"stdinWindows\",\n\t\t\t\t\t\"To read output from another program, append '-' (e.g. 'echo Hello World | {0} -')\",\n\t\t\t\t\texecutableName,\n\t\t\t\t),\n\t\t\t);\n\t\t} else {\n\t\t\thelp.push(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"stdinUnix\",\n\t\t\t\t\t\"To read from stdin, append '-' (e.g. 'ps aux | grep code | {0} -')\",\n\t\t\t\t\texecutableName,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t\thelp.push(\"\");\n\t}\n\tconst optionsByCategory: {\n\t\t[P in keyof typeof helpCategories]?: OptionDescriptions<any>;\n\t} = {};\n\tconst subcommands: { command: string; description: string }[] = [];\n\tfor (const optionId in options) {\n\t\tconst o = options[optionId];\n\t\tif (o.type === \"subcommand\") {\n\t\t\tif (o.description) {\n\t\t\t\tsubcommands.push({\n\t\t\t\t\tcommand: optionId,\n\t\t\t\t\tdescription: o.description,\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (o.description && o.cat) {\n\t\t\tlet optionsByCat = optionsByCategory[o.cat];\n\t\t\tif (!optionsByCat) {\n\t\t\t\toptionsByCategory[o.cat] = optionsByCat = {};\n\t\t\t}\n\t\t\toptionsByCat[optionId] = o;\n\t\t}\n\t}\n\n\tfor (const helpCategoryKey in optionsByCategory) {\n\t\tconst key = <keyof typeof helpCategories>helpCategoryKey;\n\n\t\tconst categoryOptions = optionsByCategory[key];\n\t\tif (categoryOptions) {\n\t\t\thelp.push(helpCategories[key]);\n\t\t\thelp.push(...formatOptions(categoryOptions, columns));\n\t\t\thelp.push(\"\");\n\t\t}\n\t}\n\n\tif (subcommands.length) {\n\t\thelp.push(localize(\"subcommands\", \"Subcommands\"));\n\t\thelp.push(\n\t\t\t...formatUsageTexts(\n\t\t\t\tsubcommands.map((s) => [s.command, s.description]),\n\t\t\t\tcolumns,\n\t\t\t),\n\t\t);\n\t\thelp.push(\"\");\n\t}\n\n\treturn help.join(\"\\n\");\n}\n\nexport function buildVersionMessage(\n\tversion: string | undefined,\n\tcommit: string | undefined,\n): string {\n\treturn `${version || localize(\"unknownVersion\", \"Unknown version\")}\\n${commit || localize(\"unknownCommit\", \"Unknown commit\")}\\n${process.arch}`;\n}\n"],
  "mappings": "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",
  "names": ["options"]
}
