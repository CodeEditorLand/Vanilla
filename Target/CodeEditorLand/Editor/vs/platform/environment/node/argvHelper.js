import g from"assert";import"../../../base/common/platform.js";import{localize as t}from"../../../nls.js";import"../common/argv.js";import{NATIVE_CLI_COMMANDS as c,OPTIONS as f,parseArgs as m}from"./argv.js";function d(n,e){const o=(r,s)=>{console.warn(t("multipleValues","Option '{0}' is defined more than once. Using value '{1}'.",r,s))},a=r=>{console.warn(t("emptyValue","Option '{0}' requires a non empty value. Ignoring the option.",r))},p=(r,s)=>{console.warn(t("deprecatedArgument","Option '{0}' is deprecated: {1}",r,s))},u=r=>({onUnknownOption:s=>{c.includes(r)||console.warn(t("unknownSubCommandOption","Warning: '{0}' is not in the list of known options for subcommand '{1}'",s,r))},onMultipleValues:o,onEmptyValue:a,onDeprecatedOption:p,getSubcommandReporter:c.includes(r)?u:void 0}),i=m(n,f,e?{onUnknownOption:r=>{console.warn(t("unknownOption","Warning: '{0}' is not in the list of known options, but still passed to Electron/Chromium.",r))},onMultipleValues:o,onEmptyValue:a,onDeprecatedOption:p,getSubcommandReporter:u}:void 0);return i.goto&&i._.forEach(r=>g(/^(\w:)?[^:]+(:\d*){0,2}:?$/.test(r),t("gotoValidation","Arguments in `--goto` mode should be in the format of `FILE(:LINE(:CHARACTER))`."))),i}function l(n){const e=n.findIndex(o=>!/^-/.test(o));if(e>-1)return[...n.slice(0,e),...n.slice(e+1)]}function v(n){let[,...e]=n;process.env.VSCODE_DEV&&(e=l(e)||[]);const o=!A(process.env);return d(e,o)}function x(n){let[,,...e]=n;return process.env.VSCODE_DEV&&(e=l(e)||[]),d(e,!0)}function N(n,...e){const o=n.indexOf("--");return o===-1?n.push(...e):n.splice(o,0,...e),n}function A(n){return n.VSCODE_CLI==="1"}export{N as addArg,A as isLaunchedFromCli,x as parseCLIProcessArgv,v as parseMainProcessArgv};
