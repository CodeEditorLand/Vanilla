{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/theme/browser/iconsStyleSheet.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { asCSSPropertyValue, asCSSUrl } from \"../../../base/browser/dom.js\";\nimport { Emitter, type Event } from \"../../../base/common/event.js\";\nimport {\n\tDisposableStore,\n\ttype IDisposable,\n} from \"../../../base/common/lifecycle.js\";\nimport { ThemeIcon } from \"../../../base/common/themables.js\";\nimport {\n\ttype IconContribution,\n\ttype IconFontDefinition,\n\tgetIconRegistry,\n} from \"../common/iconRegistry.js\";\nimport type {\n\tIProductIconTheme,\n\tIThemeService,\n} from \"../common/themeService.js\";\n\nexport interface IIconsStyleSheet extends IDisposable {\n\tgetCSS(): string;\n\treadonly onDidChange: Event<void>;\n}\n\nexport function getIconsStyleSheet(\n\tthemeService: IThemeService | undefined,\n): IIconsStyleSheet {\n\tconst disposable = new DisposableStore();\n\n\tconst onDidChangeEmmiter = disposable.add(new Emitter<void>());\n\tconst iconRegistry = getIconRegistry();\n\tdisposable.add(iconRegistry.onDidChange(() => onDidChangeEmmiter.fire()));\n\tif (themeService) {\n\t\tdisposable.add(\n\t\t\tthemeService.onDidProductIconThemeChange(() =>\n\t\t\t\tonDidChangeEmmiter.fire(),\n\t\t\t),\n\t\t);\n\t}\n\n\treturn {\n\t\tdispose: () => disposable.dispose(),\n\t\tonDidChange: onDidChangeEmmiter.event,\n\t\tgetCSS() {\n\t\t\tconst productIconTheme = themeService\n\t\t\t\t? themeService.getProductIconTheme()\n\t\t\t\t: new UnthemedProductIconTheme();\n\t\t\tconst usedFontIds: { [id: string]: IconFontDefinition } = {};\n\n\t\t\tconst rules: string[] = [];\n\t\t\tconst rootAttribs: string[] = [];\n\t\t\tfor (const contribution of iconRegistry.getIcons()) {\n\t\t\t\tconst definition = productIconTheme.getIcon(contribution);\n\t\t\t\tif (!definition) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst fontContribution = definition.font;\n\t\t\t\tconst fontFamilyVar = `--vscode-icon-${contribution.id}-font-family`;\n\t\t\t\tconst contentVar = `--vscode-icon-${contribution.id}-content`;\n\t\t\t\tif (fontContribution) {\n\t\t\t\t\tusedFontIds[fontContribution.id] =\n\t\t\t\t\t\tfontContribution.definition;\n\t\t\t\t\trootAttribs.push(\n\t\t\t\t\t\t`${fontFamilyVar}: ${asCSSPropertyValue(fontContribution.id)};`,\n\t\t\t\t\t\t`${contentVar}: '${definition.fontCharacter}';`,\n\t\t\t\t\t);\n\t\t\t\t\trules.push(\n\t\t\t\t\t\t`.codicon-${contribution.id}:before { content: '${definition.fontCharacter}'; font-family: ${asCSSPropertyValue(fontContribution.id)}; }`,\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\trootAttribs.push(\n\t\t\t\t\t\t`${contentVar}: '${definition.fontCharacter}'; ${fontFamilyVar}: 'codicon';`,\n\t\t\t\t\t);\n\t\t\t\t\trules.push(\n\t\t\t\t\t\t`.codicon-${contribution.id}:before { content: '${definition.fontCharacter}'; }`,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const id in usedFontIds) {\n\t\t\t\tconst definition = usedFontIds[id];\n\t\t\t\tconst fontWeight = definition.weight\n\t\t\t\t\t? `font-weight: ${definition.weight};`\n\t\t\t\t\t: \"\";\n\t\t\t\tconst fontStyle = definition.style\n\t\t\t\t\t? `font-style: ${definition.style};`\n\t\t\t\t\t: \"\";\n\t\t\t\tconst src = definition.src\n\t\t\t\t\t.map((l) => `${asCSSUrl(l.location)} format('${l.format}')`)\n\t\t\t\t\t.join(\", \");\n\t\t\t\trules.push(\n\t\t\t\t\t`@font-face { src: ${src}; font-family: ${asCSSPropertyValue(id)};${fontWeight}${fontStyle} font-display: block; }`,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\trules.push(`:root { ${rootAttribs.join(\" \")} }`);\n\n\t\t\treturn rules.join(\"\\n\");\n\t\t},\n\t};\n}\n\nexport class UnthemedProductIconTheme implements IProductIconTheme {\n\tgetIcon(contribution: IconContribution) {\n\t\tconst iconRegistry = getIconRegistry();\n\t\tlet definition = contribution.defaults;\n\t\twhile (ThemeIcon.isThemeIcon(definition)) {\n\t\t\tconst c = iconRegistry.getIcon(definition.id);\n\t\t\tif (!c) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tdefinition = c.defaults;\n\t\t}\n\t\treturn definition;\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,oBAAoB,gBAAgB;AAC7C,SAAS,eAA2B;AACpC;AAAA,EACC;AAAA,OAEM;AACP,SAAS,iBAAiB;AAC1B;AAAA,EAGC;AAAA,OACM;AAWA,SAAS,mBACf,cACmB;AACnB,QAAM,aAAa,IAAI,gBAAgB;AAEvC,QAAM,qBAAqB,WAAW,IAAI,IAAI,QAAc,CAAC;AAC7D,QAAM,eAAe,gBAAgB;AACrC,aAAW,IAAI,aAAa,YAAY,MAAM,mBAAmB,KAAK,CAAC,CAAC;AACxE,MAAI,cAAc;AACjB,eAAW;AAAA,MACV,aAAa;AAAA,QAA4B,MACxC,mBAAmB,KAAK;AAAA,MACzB;AAAA,IACD;AAAA,EACD;AAEA,SAAO;AAAA,IACN,SAAS,6BAAM,WAAW,QAAQ,GAAzB;AAAA,IACT,aAAa,mBAAmB;AAAA,IAChC,SAAS;AACR,YAAM,mBAAmB,eACtB,aAAa,oBAAoB,IACjC,IAAI,yBAAyB;AAChC,YAAM,cAAoD,CAAC;AAE3D,YAAM,QAAkB,CAAC;AACzB,YAAM,cAAwB,CAAC;AAC/B,iBAAW,gBAAgB,aAAa,SAAS,GAAG;AACnD,cAAM,aAAa,iBAAiB,QAAQ,YAAY;AACxD,YAAI,CAAC,YAAY;AAChB;AAAA,QACD;AAEA,cAAM,mBAAmB,WAAW;AACpC,cAAM,gBAAgB,iBAAiB,aAAa,EAAE;AACtD,cAAM,aAAa,iBAAiB,aAAa,EAAE;AACnD,YAAI,kBAAkB;AACrB,sBAAY,iBAAiB,EAAE,IAC9B,iBAAiB;AAClB,sBAAY;AAAA,YACX,GAAG,aAAa,KAAK,mBAAmB,iBAAiB,EAAE,CAAC;AAAA,YAC5D,GAAG,UAAU,MAAM,WAAW,aAAa;AAAA,UAC5C;AACA,gBAAM;AAAA,YACL,YAAY,aAAa,EAAE,uBAAuB,WAAW,aAAa,mBAAmB,mBAAmB,iBAAiB,EAAE,CAAC;AAAA,UACrI;AAAA,QACD,OAAO;AACN,sBAAY;AAAA,YACX,GAAG,UAAU,MAAM,WAAW,aAAa,MAAM,aAAa;AAAA,UAC/D;AACA,gBAAM;AAAA,YACL,YAAY,aAAa,EAAE,uBAAuB,WAAW,aAAa;AAAA,UAC3E;AAAA,QACD;AAAA,MACD;AAEA,iBAAW,MAAM,aAAa;AAC7B,cAAM,aAAa,YAAY,EAAE;AACjC,cAAM,aAAa,WAAW,SAC3B,gBAAgB,WAAW,MAAM,MACjC;AACH,cAAM,YAAY,WAAW,QAC1B,eAAe,WAAW,KAAK,MAC/B;AACH,cAAM,MAAM,WAAW,IACrB,IAAI,CAAC,MAAM,GAAG,SAAS,EAAE,QAAQ,CAAC,YAAY,EAAE,MAAM,IAAI,EAC1D,KAAK,IAAI;AACX,cAAM;AAAA,UACL,qBAAqB,GAAG,kBAAkB,mBAAmB,EAAE,CAAC,IAAI,UAAU,GAAG,SAAS;AAAA,QAC3F;AAAA,MACD;AAEA,YAAM,KAAK,WAAW,YAAY,KAAK,GAAG,CAAC,IAAI;AAE/C,aAAO,MAAM,KAAK,IAAI;AAAA,IACvB;AAAA,EACD;AACD;AA7EgB;AA+ET,MAAM,yBAAsD;AAAA,EA1GnE,OA0GmE;AAAA;AAAA;AAAA,EAClE,QAAQ,cAAgC;AACvC,UAAM,eAAe,gBAAgB;AACrC,QAAI,aAAa,aAAa;AAC9B,WAAO,UAAU,YAAY,UAAU,GAAG;AACzC,YAAM,IAAI,aAAa,QAAQ,WAAW,EAAE;AAC5C,UAAI,CAAC,GAAG;AACP,eAAO;AAAA,MACR;AACA,mBAAa,EAAE;AAAA,IAChB;AACA,WAAO;AAAA,EACR;AACD;",
  "names": []
}
