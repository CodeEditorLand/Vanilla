import{RunOnceScheduler as D}from"../../../../vs/base/common/async.js";import{Color as y}from"../../../../vs/base/common/color.js";import{Emitter as N}from"../../../../vs/base/common/event.js";import"../../../../vs/base/common/jsonSchema.js";import*as o from"../../../../vs/nls.js";import{Extensions as _}from"../../../../vs/platform/jsonschemas/common/jsonContributionRegistry.js";import*as v from"../../../../vs/platform/registry/common/platform.js";import"../../../../vs/platform/theme/common/themeService.js";const w="*",C=":",O=".",p="\\w+[-_\\w+]*",S=`^${p}$`,E=`^(${p}|\\*)(\\${O}${p})*(${C}${p})?$`,B="^(\\s*(italic|bold|underline|strikethrough))*\\s*$";class f{constructor(e,n,r,c,i){this.foreground=e;this.bold=n;this.underline=r;this.strikethrough=c;this.italic=i}}(l=>{function s(t){return{_foreground:t.foreground===void 0?null:y.Format.CSS.formatHexA(t.foreground,!0),_bold:t.bold===void 0?null:t.bold,_underline:t.underline===void 0?null:t.underline,_italic:t.italic===void 0?null:t.italic,_strikethrough:t.strikethrough===void 0?null:t.strikethrough}}l.toJSONObject=s;function e(t){if(t){const a=d=>typeof d=="boolean"?d:void 0,u=d=>typeof d=="string"?y.fromHex(d):void 0;return new l(u(t._foreground),a(t._bold),a(t._underline),a(t._strikethrough),a(t._italic))}}l.fromJSONObject=e;function n(t,a){return t===a?!0:t!==void 0&&a!==void 0&&(t.foreground instanceof y?t.foreground.equals(a.foreground):a.foreground===void 0)&&t.bold===a.bold&&t.underline===a.underline&&t.strikethrough===a.strikethrough&&t.italic===a.italic}l.equals=n;function r(t){return t instanceof l}l.is=r;function c(t){return new l(t.foreground,t.bold,t.underline,t.strikethrough,t.italic)}l.fromData=c;function i(t,a,u,d,h,m){let b;if(t!==void 0&&(b=y.fromHex(t)),a!==void 0){u=m=d=h=!1;const z=/italic|bold|underline|strikethrough/g;let T;for(;T=z.exec(a);)switch(T[0]){case"bold":u=!0;break;case"italic":m=!0;break;case"underline":d=!0;break;case"strikethrough":h=!0;break}}return new l(b,u,d,h,m)}l.fromSettings=i})(f||={});var $;(c=>{function s(i,l){if(l&&typeof l._selector=="string"&&l._style){const t=f.fromJSONObject(l._style);if(t)try{return{selector:i.parseTokenSelector(l._selector),style:t}}catch{}}}c.fromJSONObject=s;function e(i){return{_selector:i.selector.id,_style:f.toJSONObject(i.style)}}c.toJSONObject=e;function n(i,l){return i===l?!0:i!==void 0&&l!==void 0&&i.selector&&l.selector&&i.selector.id===l.selector.id&&f.equals(i.style,l.style)}c.equals=n;function r(i){return i&&i.selector&&typeof i.selector.id=="string"&&f.is(i.style)}c.is=r})($||={});const A={TokenClassificationContribution:"base.contributions.tokenClassification"};class J{_onDidChangeSchema=new N;onDidChangeSchema=this._onDidChangeSchema.event;currentTypeNumber=0;currentModifierBit=1;tokenTypeById;tokenModifierById;tokenStylingDefaultRules=[];typeHierarchy;tokenStylingSchema={type:"object",properties:{},patternProperties:{[E]:k()},additionalProperties:!1,definitions:{style:{type:"object",description:o.localize("schema.token.settings","Colors and styles for the token."),properties:{foreground:{type:"string",description:o.localize("schema.token.foreground","Foreground color for the token."),format:"color-hex",default:"#ff0000"},background:{type:"string",deprecationMessage:o.localize("schema.token.background.warning","Token background colors are currently not supported.")},fontStyle:{type:"string",description:o.localize("schema.token.fontStyle","Sets the all font styles of the rule: 'italic', 'bold', 'underline' or 'strikethrough' or a combination. All styles that are not listed are unset. The empty string unsets all styles."),pattern:B,patternErrorMessage:o.localize("schema.fontStyle.error","Font style must be 'italic', 'bold', 'underline' or 'strikethrough' or a combination. The empty string unsets all styles."),defaultSnippets:[{label:o.localize("schema.token.fontStyle.none","None (clear inherited style)"),bodyText:'""'},{body:"italic"},{body:"bold"},{body:"underline"},{body:"strikethrough"},{body:"italic bold"},{body:"italic underline"},{body:"italic strikethrough"},{body:"bold underline"},{body:"bold strikethrough"},{body:"underline strikethrough"},{body:"italic bold underline"},{body:"italic bold strikethrough"},{body:"italic underline strikethrough"},{body:"bold underline strikethrough"},{body:"italic bold underline strikethrough"}]},bold:{type:"boolean",description:o.localize("schema.token.bold","Sets or unsets the font style to bold. Note, the presence of 'fontStyle' overrides this setting.")},italic:{type:"boolean",description:o.localize("schema.token.italic","Sets or unsets the font style to italic. Note, the presence of 'fontStyle' overrides this setting.")},underline:{type:"boolean",description:o.localize("schema.token.underline","Sets or unsets the font style to underline. Note, the presence of 'fontStyle' overrides this setting.")},strikethrough:{type:"boolean",description:o.localize("schema.token.strikethrough","Sets or unsets the font style to strikethrough. Note, the presence of 'fontStyle' overrides this setting.")}},defaultSnippets:[{body:{foreground:"${1:#FF0000}",fontStyle:"${2:bold}"}}]}}};constructor(){this.tokenTypeById=Object.create(null),this.tokenModifierById=Object.create(null),this.typeHierarchy=Object.create(null)}registerTokenType(e,n,r,c){if(!e.match(S))throw new Error("Invalid token type id.");if(r&&!r.match(S))throw new Error("Invalid token super type id.");const l={num:this.currentTypeNumber++,id:e,superType:r,description:n,deprecationMessage:c};this.tokenTypeById[e]=l;const t=k(n,c);this.tokenStylingSchema.properties[e]=t,this.typeHierarchy=Object.create(null)}registerTokenModifier(e,n,r){if(!e.match(S))throw new Error("Invalid token modifier id.");const c=this.currentModifierBit;this.currentModifierBit=this.currentModifierBit*2;const i={num:c,id:e,description:n,deprecationMessage:r};this.tokenModifierById[e]=i,this.tokenStylingSchema.properties[`*.${e}`]=k(n,r)}parseTokenSelector(e,n){const r=P(e,n);return r.type?{match:(c,i,l)=>{let t=0;if(r.language!==void 0){if(r.language!==l)return-1;t+=10}if(r.type!==w){const u=this.getTypeHierarchy(c).indexOf(r.type);if(u===-1)return-1;t+=100-u}for(const a of r.modifiers)if(i.indexOf(a)===-1)return-1;return t+r.modifiers.length*100},id:`${[r.type,...r.modifiers.sort()].join(".")}${r.language!==void 0?":"+r.language:""}`}:{match:()=>-1,id:"$invalid"}}registerTokenStyleDefault(e,n){this.tokenStylingDefaultRules.push({selector:e,defaults:n})}deregisterTokenStyleDefault(e){const n=e.id;this.tokenStylingDefaultRules=this.tokenStylingDefaultRules.filter(r=>r.selector.id!==n)}deregisterTokenType(e){delete this.tokenTypeById[e],delete this.tokenStylingSchema.properties[e],this.typeHierarchy=Object.create(null)}deregisterTokenModifier(e){delete this.tokenModifierById[e],delete this.tokenStylingSchema.properties[`*.${e}`]}getTokenTypes(){return Object.keys(this.tokenTypeById).map(e=>this.tokenTypeById[e])}getTokenModifiers(){return Object.keys(this.tokenModifierById).map(e=>this.tokenModifierById[e])}getTokenStylingSchema(){return this.tokenStylingSchema}getTokenStylingDefaultRules(){return this.tokenStylingDefaultRules}getTypeHierarchy(e){let n=this.typeHierarchy[e];if(!n){this.typeHierarchy[e]=n=[e];let r=this.tokenTypeById[e];for(;r&&r.superType;)n.push(r.superType),r=this.tokenTypeById[r.superType]}return n}toString(){const e=(n,r)=>{const c=n.indexOf(".")===-1?0:1,i=r.indexOf(".")===-1?0:1;return c!==i?c-i:n.localeCompare(r)};return Object.keys(this.tokenTypeById).sort(e).map(n=>`- \`${n}\`: ${this.tokenTypeById[n].description}`).join(`
`)}}const x=C.charCodeAt(0),L=O.charCodeAt(0);function P(s,e){let n=s.length,r=e;const c=[];for(let l=n-1;l>=0;l--){const t=s.charCodeAt(l);if(t===x||t===L){const a=s.substring(l+1,n);n=l,t===x?r=a:c.push(a)}}return{type:s.substring(0,n),modifiers:c,language:r}}const g=j();v.Registry.add(A.TokenClassificationContribution,g);function j(){const s=new J;function e(r,c,i=[],l,t){return s.registerTokenType(r,c,l,t),i&&n(r,i),r}function n(r,c){try{const i=s.parseTokenSelector(r);s.registerTokenStyleDefault(i,{scopesToProbe:c})}catch(i){console.log(i)}}return e("comment",o.localize("comment","Style for comments."),[["comment"]]),e("string",o.localize("string","Style for strings."),[["string"]]),e("keyword",o.localize("keyword","Style for keywords."),[["keyword.control"]]),e("number",o.localize("number","Style for numbers."),[["constant.numeric"]]),e("regexp",o.localize("regexp","Style for expressions."),[["constant.regexp"]]),e("operator",o.localize("operator","Style for operators."),[["keyword.operator"]]),e("namespace",o.localize("namespace","Style for namespaces."),[["entity.name.namespace"]]),e("type",o.localize("type","Style for types."),[["entity.name.type"],["support.type"]]),e("struct",o.localize("struct","Style for structs."),[["entity.name.type.struct"]]),e("class",o.localize("class","Style for classes."),[["entity.name.type.class"],["support.class"]]),e("interface",o.localize("interface","Style for interfaces."),[["entity.name.type.interface"]]),e("enum",o.localize("enum","Style for enums."),[["entity.name.type.enum"]]),e("typeParameter",o.localize("typeParameter","Style for type parameters."),[["entity.name.type.parameter"]]),e("function",o.localize("function","Style for functions"),[["entity.name.function"],["support.function"]]),e("member",o.localize("member","Style for member functions"),[],"method","Deprecated use `method` instead"),e("method",o.localize("method","Style for method (member functions)"),[["entity.name.function.member"],["support.function"]]),e("macro",o.localize("macro","Style for macros."),[["entity.name.function.preprocessor"]]),e("variable",o.localize("variable","Style for variables."),[["variable.other.readwrite"],["entity.name.variable"]]),e("parameter",o.localize("parameter","Style for parameters."),[["variable.parameter"]]),e("property",o.localize("property","Style for properties."),[["variable.other.property"]]),e("enumMember",o.localize("enumMember","Style for enum members."),[["variable.other.enummember"]]),e("event",o.localize("event","Style for events."),[["variable.other.event"]]),e("decorator",o.localize("decorator","Style for decorators & annotations."),[["entity.name.decorator"],["entity.name.function"]]),e("label",o.localize("labels","Style for labels. "),void 0),s.registerTokenModifier("declaration",o.localize("declaration","Style for all symbol declarations."),void 0),s.registerTokenModifier("documentation",o.localize("documentation","Style to use for references in documentation."),void 0),s.registerTokenModifier("static",o.localize("static","Style to use for symbols that are static."),void 0),s.registerTokenModifier("abstract",o.localize("abstract","Style to use for symbols that are abstract."),void 0),s.registerTokenModifier("deprecated",o.localize("deprecated","Style to use for symbols that are deprecated."),void 0),s.registerTokenModifier("modification",o.localize("modification","Style to use for write accesses."),void 0),s.registerTokenModifier("async",o.localize("async","Style to use for symbols that are async."),void 0),s.registerTokenModifier("readonly",o.localize("readonly","Style to use for symbols that are read-only."),void 0),n("variable.readonly",[["variable.other.constant"]]),n("property.readonly",[["variable.other.constant.property"]]),n("type.defaultLibrary",[["support.type"]]),n("class.defaultLibrary",[["support.class"]]),n("interface.defaultLibrary",[["support.class"]]),n("variable.defaultLibrary",[["support.variable"],["support.other.variable"]]),n("variable.defaultLibrary.readonly",[["support.constant"]]),n("property.defaultLibrary",[["support.variable.property"]]),n("property.defaultLibrary.readonly",[["support.constant.property"]]),n("function.defaultLibrary",[["support.function"]]),n("member.defaultLibrary",[["support.function"]]),s}function Z(){return g}function k(s,e){return{description:s,deprecationMessage:e,defaultSnippets:[{body:"${1:#ff0000}"}],anyOf:[{type:"string",format:"color-hex"},{$ref:"#/definitions/style"}]}}const M="vscode://schemas/token-styling",R=v.Registry.as(_.JSONContribution);R.registerSchema(M,g.getTokenStylingSchema());const I=new D(()=>R.notifySchemaChanged(M),200);g.onDidChangeSchema(()=>{I.isScheduled()||I.schedule()});export{$ as SemanticTokenRule,f as TokenStyle,Z as getTokenClassificationRegistry,P as parseClassifierString,M as tokenStylingSchemaId,S as typeAndModifierIdPattern};
