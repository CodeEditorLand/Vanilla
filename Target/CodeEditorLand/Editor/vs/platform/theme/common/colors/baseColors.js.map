{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/theme/common/colors/baseColors.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from \"../../../../nls.js\";\n\n// Import the effects we need\nimport { Color } from \"../../../../base/common/color.js\";\nimport { registerColor, transparent } from \"../colorUtils.js\";\n\nexport const foreground = registerColor(\n\t\"foreground\",\n\t{\n\t\tdark: \"#CCCCCC\",\n\t\tlight: \"#616161\",\n\t\thcDark: \"#FFFFFF\",\n\t\thcLight: \"#292929\",\n\t},\n\tnls.localize(\n\t\t\"foreground\",\n\t\t\"Overall foreground color. This color is only used if not overridden by a component.\",\n\t),\n);\n\nexport const disabledForeground = registerColor(\n\t\"disabledForeground\",\n\t{\n\t\tdark: \"#CCCCCC80\",\n\t\tlight: \"#61616180\",\n\t\thcDark: \"#A5A5A5\",\n\t\thcLight: \"#7F7F7F\",\n\t},\n\tnls.localize(\n\t\t\"disabledForeground\",\n\t\t\"Overall foreground for disabled elements. This color is only used if not overridden by a component.\",\n\t),\n);\n\nexport const errorForeground = registerColor(\n\t\"errorForeground\",\n\t{\n\t\tdark: \"#F48771\",\n\t\tlight: \"#A1260D\",\n\t\thcDark: \"#F48771\",\n\t\thcLight: \"#B5200D\",\n\t},\n\tnls.localize(\n\t\t\"errorForeground\",\n\t\t\"Overall foreground color for error messages. This color is only used if not overridden by a component.\",\n\t),\n);\n\nexport const descriptionForeground = registerColor(\n\t\"descriptionForeground\",\n\t{\n\t\tlight: \"#717171\",\n\t\tdark: transparent(foreground, 0.7),\n\t\thcDark: transparent(foreground, 0.7),\n\t\thcLight: transparent(foreground, 0.7),\n\t},\n\tnls.localize(\n\t\t\"descriptionForeground\",\n\t\t\"Foreground color for description text providing additional information, for example for a label.\",\n\t),\n);\n\nexport const iconForeground = registerColor(\n\t\"icon.foreground\",\n\t{\n\t\tdark: \"#C5C5C5\",\n\t\tlight: \"#424242\",\n\t\thcDark: \"#FFFFFF\",\n\t\thcLight: \"#292929\",\n\t},\n\tnls.localize(\n\t\t\"iconForeground\",\n\t\t\"The default color for icons in the workbench.\",\n\t),\n);\n\nexport const focusBorder = registerColor(\n\t\"focusBorder\",\n\t{\n\t\tdark: \"#007FD4\",\n\t\tlight: \"#0090F1\",\n\t\thcDark: \"#F38518\",\n\t\thcLight: \"#006BBD\",\n\t},\n\tnls.localize(\n\t\t\"focusBorder\",\n\t\t\"Overall border color for focused elements. This color is only used if not overridden by a component.\",\n\t),\n);\n\nexport const contrastBorder = registerColor(\n\t\"contrastBorder\",\n\t{ light: null, dark: null, hcDark: \"#6FC3DF\", hcLight: \"#0F4A85\" },\n\tnls.localize(\n\t\t\"contrastBorder\",\n\t\t\"An extra border around elements to separate them from others for greater contrast.\",\n\t),\n);\n\nexport const activeContrastBorder = registerColor(\n\t\"contrastActiveBorder\",\n\t{ light: null, dark: null, hcDark: focusBorder, hcLight: focusBorder },\n\tnls.localize(\n\t\t\"activeContrastBorder\",\n\t\t\"An extra border around active elements to separate them from others for greater contrast.\",\n\t),\n);\n\nexport const selectionBackground = registerColor(\n\t\"selection.background\",\n\tnull,\n\tnls.localize(\n\t\t\"selectionBackground\",\n\t\t\"The background color of text selections in the workbench (e.g. for input fields or text areas). Note that this does not apply to selections within the editor.\",\n\t),\n);\n\n// ------ text link\n\nexport const textLinkForeground = registerColor(\n\t\"textLink.foreground\",\n\t{\n\t\tlight: \"#006AB1\",\n\t\tdark: \"#3794FF\",\n\t\thcDark: \"#21A6FF\",\n\t\thcLight: \"#0F4A85\",\n\t},\n\tnls.localize(\"textLinkForeground\", \"Foreground color for links in text.\"),\n);\n\nexport const textLinkActiveForeground = registerColor(\n\t\"textLink.activeForeground\",\n\t{\n\t\tlight: \"#006AB1\",\n\t\tdark: \"#3794FF\",\n\t\thcDark: \"#21A6FF\",\n\t\thcLight: \"#0F4A85\",\n\t},\n\tnls.localize(\n\t\t\"textLinkActiveForeground\",\n\t\t\"Foreground color for links in text when clicked on and on mouse hover.\",\n\t),\n);\n\nexport const textSeparatorForeground = registerColor(\n\t\"textSeparator.foreground\",\n\t{\n\t\tlight: \"#0000002e\",\n\t\tdark: \"#ffffff2e\",\n\t\thcDark: Color.black,\n\t\thcLight: \"#292929\",\n\t},\n\tnls.localize(\"textSeparatorForeground\", \"Color for text separators.\"),\n);\n\n// ------ text preformat\n\nexport const textPreformatForeground = registerColor(\n\t\"textPreformat.foreground\",\n\t{\n\t\tlight: \"#A31515\",\n\t\tdark: \"#D7BA7D\",\n\t\thcDark: \"#000000\",\n\t\thcLight: \"#FFFFFF\",\n\t},\n\tnls.localize(\n\t\t\"textPreformatForeground\",\n\t\t\"Foreground color for preformatted text segments.\",\n\t),\n);\n\nexport const textPreformatBackground = registerColor(\n\t\"textPreformat.background\",\n\t{\n\t\tlight: \"#0000001A\",\n\t\tdark: \"#FFFFFF1A\",\n\t\thcDark: \"#FFFFFF\",\n\t\thcLight: \"#09345f\",\n\t},\n\tnls.localize(\n\t\t\"textPreformatBackground\",\n\t\t\"Background color for preformatted text segments.\",\n\t),\n);\n\n// ------ text block quote\n\nexport const textBlockQuoteBackground = registerColor(\n\t\"textBlockQuote.background\",\n\t{ light: \"#f2f2f2\", dark: \"#222222\", hcDark: null, hcLight: \"#F2F2F2\" },\n\tnls.localize(\n\t\t\"textBlockQuoteBackground\",\n\t\t\"Background color for block quotes in text.\",\n\t),\n);\n\nexport const textBlockQuoteBorder = registerColor(\n\t\"textBlockQuote.border\",\n\t{\n\t\tlight: \"#007acc80\",\n\t\tdark: \"#007acc80\",\n\t\thcDark: Color.white,\n\t\thcLight: \"#292929\",\n\t},\n\tnls.localize(\n\t\t\"textBlockQuoteBorder\",\n\t\t\"Border color for block quotes in text.\",\n\t),\n);\n\n// ------ text code block\n\nexport const textCodeBlockBackground = registerColor(\n\t\"textCodeBlock.background\",\n\t{\n\t\tlight: \"#dcdcdc66\",\n\t\tdark: \"#0a0a0a66\",\n\t\thcDark: Color.black,\n\t\thcLight: \"#F2F2F2\",\n\t},\n\tnls.localize(\n\t\t\"textCodeBlockBackground\",\n\t\t\"Background color for code blocks in text.\",\n\t),\n);\n"],
  "mappings": "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",
  "names": []
}
