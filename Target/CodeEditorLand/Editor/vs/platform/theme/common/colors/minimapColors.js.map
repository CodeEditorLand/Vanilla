{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/theme/common/colors/minimapColors.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../../../nls.js';\n\n// Import the effects we need\nimport { Color, RGBA } from '../../../../base/common/color.js';\nimport { registerColor, transparent } from '../colorUtils.js';\n\n// Import the colors we need\nimport { editorInfoForeground, editorWarningForeground, editorWarningBorder, editorInfoBorder } from './editorColors.js';\nimport { scrollbarSliderBackground, scrollbarSliderHoverBackground, scrollbarSliderActiveBackground } from './miscColors.js';\n\n\nexport const minimapFindMatch = registerColor('minimap.findMatchHighlight',\n\t{ light: '#d18616', dark: '#d18616', hcDark: '#AB5A00', hcLight: '#0F4A85' },\n\tnls.localize('minimapFindMatchHighlight', 'Minimap marker color for find matches.'), true);\n\nexport const minimapSelectionOccurrenceHighlight = registerColor('minimap.selectionOccurrenceHighlight',\n\t{ light: '#c9c9c9', dark: '#676767', hcDark: '#ffffff', hcLight: '#0F4A85' },\n\tnls.localize('minimapSelectionOccurrenceHighlight', 'Minimap marker color for repeating editor selections.'), true);\n\nexport const minimapSelection = registerColor('minimap.selectionHighlight',\n\t{ light: '#ADD6FF', dark: '#264F78', hcDark: '#ffffff', hcLight: '#0F4A85' },\n\tnls.localize('minimapSelectionHighlight', 'Minimap marker color for the editor selection.'), true);\n\nexport const minimapInfo = registerColor('minimap.infoHighlight',\n\t{ dark: editorInfoForeground, light: editorInfoForeground, hcDark: editorInfoBorder, hcLight: editorInfoBorder },\n\tnls.localize('minimapInfo', 'Minimap marker color for infos.'));\n\nexport const minimapWarning = registerColor('minimap.warningHighlight',\n\t{ dark: editorWarningForeground, light: editorWarningForeground, hcDark: editorWarningBorder, hcLight: editorWarningBorder },\n\tnls.localize('overviewRuleWarning', 'Minimap marker color for warnings.'));\n\nexport const minimapError = registerColor('minimap.errorHighlight',\n\t{ dark: new Color(new RGBA(255, 18, 18, 0.7)), light: new Color(new RGBA(255, 18, 18, 0.7)), hcDark: new Color(new RGBA(255, 50, 50, 1)), hcLight: '#B5200D' },\n\tnls.localize('minimapError', 'Minimap marker color for errors.'));\n\nexport const minimapBackground = registerColor('minimap.background',\n\tnull,\n\tnls.localize('minimapBackground', \"Minimap background color.\"));\n\nexport const minimapForegroundOpacity = registerColor('minimap.foregroundOpacity',\n\tColor.fromHex('#000f'),\n\tnls.localize('minimapForegroundOpacity', 'Opacity of foreground elements rendered in the minimap. For example, \"#000000c0\" will render the elements with 75% opacity.'));\n\nexport const minimapSliderBackground = registerColor('minimapSlider.background',\n\ttransparent(scrollbarSliderBackground, 0.5),\n\tnls.localize('minimapSliderBackground', \"Minimap slider background color.\"));\n\nexport const minimapSliderHoverBackground = registerColor('minimapSlider.hoverBackground',\n\ttransparent(scrollbarSliderHoverBackground, 0.5),\n\tnls.localize('minimapSliderHoverBackground', \"Minimap slider background color when hovering.\"));\n\nexport const minimapSliderActiveBackground = registerColor('minimapSlider.activeBackground',\n\ttransparent(scrollbarSliderActiveBackground, 0.5),\n\tnls.localize('minimapSliderActiveBackground', \"Minimap slider background color when clicked on.\"));\n"],
  "mappings": "AAKA,YAAY,SAAS;AAGrB,SAAS,OAAO,YAAY;AAC5B,SAAS,eAAe,mBAAmB;AAG3C,SAAS,sBAAsB,yBAAyB,qBAAqB,wBAAwB;AACrG,SAAS,2BAA2B,gCAAgC,uCAAuC;AAGpG,MAAM,mBAAmB;AAAA,EAAc;AAAA,EAC7C,EAAE,OAAO,WAAW,MAAM,WAAW,QAAQ,WAAW,SAAS,UAAU;AAAA,EAC3E,IAAI,SAAS,6BAA6B,wCAAwC;AAAA,EAAG;AAAI;AAEnF,MAAM,sCAAsC;AAAA,EAAc;AAAA,EAChE,EAAE,OAAO,WAAW,MAAM,WAAW,QAAQ,WAAW,SAAS,UAAU;AAAA,EAC3E,IAAI,SAAS,uCAAuC,uDAAuD;AAAA,EAAG;AAAI;AAE5G,MAAM,mBAAmB;AAAA,EAAc;AAAA,EAC7C,EAAE,OAAO,WAAW,MAAM,WAAW,QAAQ,WAAW,SAAS,UAAU;AAAA,EAC3E,IAAI,SAAS,6BAA6B,gDAAgD;AAAA,EAAG;AAAI;AAE3F,MAAM,cAAc;AAAA,EAAc;AAAA,EACxC,EAAE,MAAM,sBAAsB,OAAO,sBAAsB,QAAQ,kBAAkB,SAAS,iBAAiB;AAAA,EAC/G,IAAI,SAAS,eAAe,iCAAiC;AAAC;AAExD,MAAM,iBAAiB;AAAA,EAAc;AAAA,EAC3C,EAAE,MAAM,yBAAyB,OAAO,yBAAyB,QAAQ,qBAAqB,SAAS,oBAAoB;AAAA,EAC3H,IAAI,SAAS,uBAAuB,oCAAoC;AAAC;AAEnE,MAAM,eAAe;AAAA,EAAc;AAAA,EACzC,EAAE,MAAM,IAAI,MAAM,IAAI,KAAK,KAAK,IAAI,IAAI,GAAG,CAAC,GAAG,OAAO,IAAI,MAAM,IAAI,KAAK,KAAK,IAAI,IAAI,GAAG,CAAC,GAAG,QAAQ,IAAI,MAAM,IAAI,KAAK,KAAK,IAAI,IAAI,CAAC,CAAC,GAAG,SAAS,UAAU;AAAA,EAC7J,IAAI,SAAS,gBAAgB,kCAAkC;AAAC;AAE1D,MAAM,oBAAoB;AAAA,EAAc;AAAA,EAC9C;AAAA,EACA,IAAI,SAAS,qBAAqB,2BAA2B;AAAC;AAExD,MAAM,2BAA2B;AAAA,EAAc;AAAA,EACrD,MAAM,QAAQ,OAAO;AAAA,EACrB,IAAI,SAAS,4BAA4B,6HAA6H;AAAC;AAEjK,MAAM,0BAA0B;AAAA,EAAc;AAAA,EACpD,YAAY,2BAA2B,GAAG;AAAA,EAC1C,IAAI,SAAS,2BAA2B,kCAAkC;AAAC;AAErE,MAAM,+BAA+B;AAAA,EAAc;AAAA,EACzD,YAAY,gCAAgC,GAAG;AAAA,EAC/C,IAAI,SAAS,gCAAgC,gDAAgD;AAAC;AAExF,MAAM,gCAAgC;AAAA,EAAc;AAAA,EAC1D,YAAY,iCAAiC,GAAG;AAAA,EAChD,IAAI,SAAS,iCAAiC,kDAAkD;AAAC;",
  "names": []
}
