{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/theme/common/colors/editorColors.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from \"../../../../nls.js\";\n\n// Import the effects we need\nimport { Color, RGBA } from \"../../../../base/common/color.js\";\nimport {\n\tdarken,\n\tlessProminent,\n\tlighten,\n\tregisterColor,\n\ttransparent,\n} from \"../colorUtils.js\";\n\n// Import the colors we need\nimport {\n\tactiveContrastBorder,\n\tcontrastBorder,\n\tforeground,\n} from \"./baseColors.js\";\nimport { badgeBackground, scrollbarShadow } from \"./miscColors.js\";\n\n// ----- editor\n\nexport const editorBackground = registerColor(\n\t\"editor.background\",\n\t{\n\t\tlight: \"#ffffff\",\n\t\tdark: \"#1E1E1E\",\n\t\thcDark: Color.black,\n\t\thcLight: Color.white,\n\t},\n\tnls.localize(\"editorBackground\", \"Editor background color.\"),\n);\n\nexport const editorForeground = registerColor(\n\t\"editor.foreground\",\n\t{\n\t\tlight: \"#333333\",\n\t\tdark: \"#BBBBBB\",\n\t\thcDark: Color.white,\n\t\thcLight: foreground,\n\t},\n\tnls.localize(\"editorForeground\", \"Editor default foreground color.\"),\n);\n\nexport const editorStickyScrollBackground = registerColor(\n\t\"editorStickyScroll.background\",\n\teditorBackground,\n\tnls.localize(\n\t\t\"editorStickyScrollBackground\",\n\t\t\"Background color of sticky scroll in the editor\",\n\t),\n);\n\nexport const editorStickyScrollHoverBackground = registerColor(\n\t\"editorStickyScrollHover.background\",\n\t{\n\t\tdark: \"#2A2D2E\",\n\t\tlight: \"#F0F0F0\",\n\t\thcDark: null,\n\t\thcLight: Color.fromHex(\"#0F4A85\").transparent(0.1),\n\t},\n\tnls.localize(\n\t\t\"editorStickyScrollHoverBackground\",\n\t\t\"Background color of sticky scroll on hover in the editor\",\n\t),\n);\n\nexport const editorStickyScrollBorder = registerColor(\n\t\"editorStickyScroll.border\",\n\t{\n\t\tdark: null,\n\t\tlight: null,\n\t\thcDark: contrastBorder,\n\t\thcLight: contrastBorder,\n\t},\n\tnls.localize(\n\t\t\"editorStickyScrollBorder\",\n\t\t\"Border color of sticky scroll in the editor\",\n\t),\n);\n\nexport const editorStickyScrollShadow = registerColor(\n\t\"editorStickyScroll.shadow\",\n\tscrollbarShadow,\n\tnls.localize(\n\t\t\"editorStickyScrollShadow\",\n\t\t\" Shadow color of sticky scroll in the editor\",\n\t),\n);\n\nexport const editorWidgetBackground = registerColor(\n\t\"editorWidget.background\",\n\t{\n\t\tdark: \"#252526\",\n\t\tlight: \"#F3F3F3\",\n\t\thcDark: \"#0C141F\",\n\t\thcLight: Color.white,\n\t},\n\tnls.localize(\n\t\t\"editorWidgetBackground\",\n\t\t\"Background color of editor widgets, such as find/replace.\",\n\t),\n);\n\nexport const editorWidgetForeground = registerColor(\n\t\"editorWidget.foreground\",\n\tforeground,\n\tnls.localize(\n\t\t\"editorWidgetForeground\",\n\t\t\"Foreground color of editor widgets, such as find/replace.\",\n\t),\n);\n\nexport const editorWidgetBorder = registerColor(\n\t\"editorWidget.border\",\n\t{\n\t\tdark: \"#454545\",\n\t\tlight: \"#C8C8C8\",\n\t\thcDark: contrastBorder,\n\t\thcLight: contrastBorder,\n\t},\n\tnls.localize(\n\t\t\"editorWidgetBorder\",\n\t\t\"Border color of editor widgets. The color is only used if the widget chooses to have a border and if the color is not overridden by a widget.\",\n\t),\n);\n\nexport const editorWidgetResizeBorder = registerColor(\n\t\"editorWidget.resizeBorder\",\n\tnull,\n\tnls.localize(\n\t\t\"editorWidgetResizeBorder\",\n\t\t\"Border color of the resize bar of editor widgets. The color is only used if the widget chooses to have a resize border and if the color is not overridden by a widget.\",\n\t),\n);\n\nexport const editorErrorBackground = registerColor(\n\t\"editorError.background\",\n\tnull,\n\tnls.localize(\n\t\t\"editorError.background\",\n\t\t\"Background color of error text in the editor. The color must not be opaque so as not to hide underlying decorations.\",\n\t),\n\ttrue,\n);\n\nexport const editorErrorForeground = registerColor(\n\t\"editorError.foreground\",\n\t{\n\t\tdark: \"#F14C4C\",\n\t\tlight: \"#E51400\",\n\t\thcDark: \"#F48771\",\n\t\thcLight: \"#B5200D\",\n\t},\n\tnls.localize(\n\t\t\"editorError.foreground\",\n\t\t\"Foreground color of error squigglies in the editor.\",\n\t),\n);\n\nexport const editorErrorBorder = registerColor(\n\t\"editorError.border\",\n\t{\n\t\tdark: null,\n\t\tlight: null,\n\t\thcDark: Color.fromHex(\"#E47777\").transparent(0.8),\n\t\thcLight: \"#B5200D\",\n\t},\n\tnls.localize(\n\t\t\"errorBorder\",\n\t\t\"If set, color of double underlines for errors in the editor.\",\n\t),\n);\n\nexport const editorWarningBackground = registerColor(\n\t\"editorWarning.background\",\n\tnull,\n\tnls.localize(\n\t\t\"editorWarning.background\",\n\t\t\"Background color of warning text in the editor. The color must not be opaque so as not to hide underlying decorations.\",\n\t),\n\ttrue,\n);\n\nexport const editorWarningForeground = registerColor(\n\t\"editorWarning.foreground\",\n\t{\n\t\tdark: \"#CCA700\",\n\t\tlight: \"#BF8803\",\n\t\thcDark: \"#FFD370\",\n\t\thcLight: \"#895503\",\n\t},\n\tnls.localize(\n\t\t\"editorWarning.foreground\",\n\t\t\"Foreground color of warning squigglies in the editor.\",\n\t),\n);\n\nexport const editorWarningBorder = registerColor(\n\t\"editorWarning.border\",\n\t{\n\t\tdark: null,\n\t\tlight: null,\n\t\thcDark: Color.fromHex(\"#FFCC00\").transparent(0.8),\n\t\thcLight: Color.fromHex(\"#FFCC00\").transparent(0.8),\n\t},\n\tnls.localize(\n\t\t\"warningBorder\",\n\t\t\"If set, color of double underlines for warnings in the editor.\",\n\t),\n);\n\nexport const editorInfoBackground = registerColor(\n\t\"editorInfo.background\",\n\tnull,\n\tnls.localize(\n\t\t\"editorInfo.background\",\n\t\t\"Background color of info text in the editor. The color must not be opaque so as not to hide underlying decorations.\",\n\t),\n\ttrue,\n);\n\nexport const editorInfoForeground = registerColor(\n\t\"editorInfo.foreground\",\n\t{\n\t\tdark: \"#3794FF\",\n\t\tlight: \"#1a85ff\",\n\t\thcDark: \"#3794FF\",\n\t\thcLight: \"#1a85ff\",\n\t},\n\tnls.localize(\n\t\t\"editorInfo.foreground\",\n\t\t\"Foreground color of info squigglies in the editor.\",\n\t),\n);\n\nexport const editorInfoBorder = registerColor(\n\t\"editorInfo.border\",\n\t{\n\t\tdark: null,\n\t\tlight: null,\n\t\thcDark: Color.fromHex(\"#3794FF\").transparent(0.8),\n\t\thcLight: \"#292929\",\n\t},\n\tnls.localize(\n\t\t\"infoBorder\",\n\t\t\"If set, color of double underlines for infos in the editor.\",\n\t),\n);\n\nexport const editorHintForeground = registerColor(\n\t\"editorHint.foreground\",\n\t{\n\t\tdark: Color.fromHex(\"#eeeeee\").transparent(0.7),\n\t\tlight: \"#6c6c6c\",\n\t\thcDark: null,\n\t\thcLight: null,\n\t},\n\tnls.localize(\n\t\t\"editorHint.foreground\",\n\t\t\"Foreground color of hint squigglies in the editor.\",\n\t),\n);\n\nexport const editorHintBorder = registerColor(\n\t\"editorHint.border\",\n\t{\n\t\tdark: null,\n\t\tlight: null,\n\t\thcDark: Color.fromHex(\"#eeeeee\").transparent(0.8),\n\t\thcLight: \"#292929\",\n\t},\n\tnls.localize(\n\t\t\"hintBorder\",\n\t\t\"If set, color of double underlines for hints in the editor.\",\n\t),\n);\n\nexport const editorActiveLinkForeground = registerColor(\n\t\"editorLink.activeForeground\",\n\t{\n\t\tdark: \"#4E94CE\",\n\t\tlight: Color.blue,\n\t\thcDark: Color.cyan,\n\t\thcLight: \"#292929\",\n\t},\n\tnls.localize(\"activeLinkForeground\", \"Color of active links.\"),\n);\n\n// ----- editor selection\n\nexport const editorSelectionBackground = registerColor(\n\t\"editor.selectionBackground\",\n\t{\n\t\tlight: \"#ADD6FF\",\n\t\tdark: \"#264F78\",\n\t\thcDark: \"#f3f518\",\n\t\thcLight: \"#0F4A85\",\n\t},\n\tnls.localize(\"editorSelectionBackground\", \"Color of the editor selection.\"),\n);\n\nexport const editorSelectionForeground = registerColor(\n\t\"editor.selectionForeground\",\n\t{ light: null, dark: null, hcDark: \"#000000\", hcLight: Color.white },\n\tnls.localize(\n\t\t\"editorSelectionForeground\",\n\t\t\"Color of the selected text for high contrast.\",\n\t),\n);\n\nexport const editorInactiveSelection = registerColor(\n\t\"editor.inactiveSelectionBackground\",\n\t{\n\t\tlight: transparent(editorSelectionBackground, 0.5),\n\t\tdark: transparent(editorSelectionBackground, 0.5),\n\t\thcDark: transparent(editorSelectionBackground, 0.7),\n\t\thcLight: transparent(editorSelectionBackground, 0.5),\n\t},\n\tnls.localize(\n\t\t\"editorInactiveSelection\",\n\t\t\"Color of the selection in an inactive editor. The color must not be opaque so as not to hide underlying decorations.\",\n\t),\n\ttrue,\n);\n\nexport const editorSelectionHighlight = registerColor(\n\t\"editor.selectionHighlightBackground\",\n\t{\n\t\tlight: lessProminent(\n\t\t\teditorSelectionBackground,\n\t\t\teditorBackground,\n\t\t\t0.3,\n\t\t\t0.6,\n\t\t),\n\t\tdark: lessProminent(\n\t\t\teditorSelectionBackground,\n\t\t\teditorBackground,\n\t\t\t0.3,\n\t\t\t0.6,\n\t\t),\n\t\thcDark: null,\n\t\thcLight: null,\n\t},\n\tnls.localize(\n\t\t\"editorSelectionHighlight\",\n\t\t\"Color for regions with the same content as the selection. The color must not be opaque so as not to hide underlying decorations.\",\n\t),\n\ttrue,\n);\n\nexport const editorSelectionHighlightBorder = registerColor(\n\t\"editor.selectionHighlightBorder\",\n\t{\n\t\tlight: null,\n\t\tdark: null,\n\t\thcDark: activeContrastBorder,\n\t\thcLight: activeContrastBorder,\n\t},\n\tnls.localize(\n\t\t\"editorSelectionHighlightBorder\",\n\t\t\"Border color for regions with the same content as the selection.\",\n\t),\n);\n\n// ----- editor find\n\nexport const editorFindMatch = registerColor(\n\t\"editor.findMatchBackground\",\n\t{ light: \"#A8AC94\", dark: \"#515C6A\", hcDark: null, hcLight: null },\n\tnls.localize(\"editorFindMatch\", \"Color of the current search match.\"),\n);\n\nexport const editorFindMatchForeground = registerColor(\n\t\"editor.findMatchForeground\",\n\tnull,\n\tnls.localize(\n\t\t\"editorFindMatchForeground\",\n\t\t\"Text color of the current search match.\",\n\t),\n);\n\nexport const editorFindMatchHighlight = registerColor(\n\t\"editor.findMatchHighlightBackground\",\n\t{ light: \"#EA5C0055\", dark: \"#EA5C0055\", hcDark: null, hcLight: null },\n\tnls.localize(\n\t\t\"findMatchHighlight\",\n\t\t\"Color of the other search matches. The color must not be opaque so as not to hide underlying decorations.\",\n\t),\n\ttrue,\n);\n\nexport const editorFindMatchHighlightForeground = registerColor(\n\t\"editor.findMatchHighlightForeground\",\n\tnull,\n\tnls.localize(\n\t\t\"findMatchHighlightForeground\",\n\t\t\"Foreground color of the other search matches.\",\n\t),\n\ttrue,\n);\n\nexport const editorFindRangeHighlight = registerColor(\n\t\"editor.findRangeHighlightBackground\",\n\t{ dark: \"#3a3d4166\", light: \"#b4b4b44d\", hcDark: null, hcLight: null },\n\tnls.localize(\n\t\t\"findRangeHighlight\",\n\t\t\"Color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.\",\n\t),\n\ttrue,\n);\n\nexport const editorFindMatchBorder = registerColor(\n\t\"editor.findMatchBorder\",\n\t{\n\t\tlight: null,\n\t\tdark: null,\n\t\thcDark: activeContrastBorder,\n\t\thcLight: activeContrastBorder,\n\t},\n\tnls.localize(\n\t\t\"editorFindMatchBorder\",\n\t\t\"Border color of the current search match.\",\n\t),\n);\n\nexport const editorFindMatchHighlightBorder = registerColor(\n\t\"editor.findMatchHighlightBorder\",\n\t{\n\t\tlight: null,\n\t\tdark: null,\n\t\thcDark: activeContrastBorder,\n\t\thcLight: activeContrastBorder,\n\t},\n\tnls.localize(\n\t\t\"findMatchHighlightBorder\",\n\t\t\"Border color of the other search matches.\",\n\t),\n);\n\nexport const editorFindRangeHighlightBorder = registerColor(\n\t\"editor.findRangeHighlightBorder\",\n\t{\n\t\tdark: null,\n\t\tlight: null,\n\t\thcDark: transparent(activeContrastBorder, 0.4),\n\t\thcLight: transparent(activeContrastBorder, 0.4),\n\t},\n\tnls.localize(\n\t\t\"findRangeHighlightBorder\",\n\t\t\"Border color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.\",\n\t),\n\ttrue,\n);\n\n// ----- editor hover\n\nexport const editorHoverHighlight = registerColor(\n\t\"editor.hoverHighlightBackground\",\n\t{\n\t\tlight: \"#ADD6FF26\",\n\t\tdark: \"#264f7840\",\n\t\thcDark: \"#ADD6FF26\",\n\t\thcLight: null,\n\t},\n\tnls.localize(\n\t\t\"hoverHighlight\",\n\t\t\"Highlight below the word for which a hover is shown. The color must not be opaque so as not to hide underlying decorations.\",\n\t),\n\ttrue,\n);\n\nexport const editorHoverBackground = registerColor(\n\t\"editorHoverWidget.background\",\n\teditorWidgetBackground,\n\tnls.localize(\"hoverBackground\", \"Background color of the editor hover.\"),\n);\n\nexport const editorHoverForeground = registerColor(\n\t\"editorHoverWidget.foreground\",\n\teditorWidgetForeground,\n\tnls.localize(\"hoverForeground\", \"Foreground color of the editor hover.\"),\n);\n\nexport const editorHoverBorder = registerColor(\n\t\"editorHoverWidget.border\",\n\teditorWidgetBorder,\n\tnls.localize(\"hoverBorder\", \"Border color of the editor hover.\"),\n);\n\nexport const editorHoverStatusBarBackground = registerColor(\n\t\"editorHoverWidget.statusBarBackground\",\n\t{\n\t\tdark: lighten(editorHoverBackground, 0.2),\n\t\tlight: darken(editorHoverBackground, 0.05),\n\t\thcDark: editorWidgetBackground,\n\t\thcLight: editorWidgetBackground,\n\t},\n\tnls.localize(\n\t\t\"statusBarBackground\",\n\t\t\"Background color of the editor hover status bar.\",\n\t),\n);\n\n// ----- editor inlay hint\n\nexport const editorInlayHintForeground = registerColor(\n\t\"editorInlayHint.foreground\",\n\t{\n\t\tdark: \"#969696\",\n\t\tlight: \"#969696\",\n\t\thcDark: Color.white,\n\t\thcLight: Color.black,\n\t},\n\tnls.localize(\n\t\t\"editorInlayHintForeground\",\n\t\t\"Foreground color of inline hints\",\n\t),\n);\n\nexport const editorInlayHintBackground = registerColor(\n\t\"editorInlayHint.background\",\n\t{\n\t\tdark: transparent(badgeBackground, 0.1),\n\t\tlight: transparent(badgeBackground, 0.1),\n\t\thcDark: transparent(Color.white, 0.1),\n\t\thcLight: transparent(badgeBackground, 0.1),\n\t},\n\tnls.localize(\n\t\t\"editorInlayHintBackground\",\n\t\t\"Background color of inline hints\",\n\t),\n);\n\nexport const editorInlayHintTypeForeground = registerColor(\n\t\"editorInlayHint.typeForeground\",\n\teditorInlayHintForeground,\n\tnls.localize(\n\t\t\"editorInlayHintForegroundTypes\",\n\t\t\"Foreground color of inline hints for types\",\n\t),\n);\n\nexport const editorInlayHintTypeBackground = registerColor(\n\t\"editorInlayHint.typeBackground\",\n\teditorInlayHintBackground,\n\tnls.localize(\n\t\t\"editorInlayHintBackgroundTypes\",\n\t\t\"Background color of inline hints for types\",\n\t),\n);\n\nexport const editorInlayHintParameterForeground = registerColor(\n\t\"editorInlayHint.parameterForeground\",\n\teditorInlayHintForeground,\n\tnls.localize(\n\t\t\"editorInlayHintForegroundParameter\",\n\t\t\"Foreground color of inline hints for parameters\",\n\t),\n);\n\nexport const editorInlayHintParameterBackground = registerColor(\n\t\"editorInlayHint.parameterBackground\",\n\teditorInlayHintBackground,\n\tnls.localize(\n\t\t\"editorInlayHintBackgroundParameter\",\n\t\t\"Background color of inline hints for parameters\",\n\t),\n);\n\n// ----- editor lightbulb\n\nexport const editorLightBulbForeground = registerColor(\n\t\"editorLightBulb.foreground\",\n\t{\n\t\tdark: \"#FFCC00\",\n\t\tlight: \"#DDB100\",\n\t\thcDark: \"#FFCC00\",\n\t\thcLight: \"#007ACC\",\n\t},\n\tnls.localize(\n\t\t\"editorLightBulbForeground\",\n\t\t\"The color used for the lightbulb actions icon.\",\n\t),\n);\n\nexport const editorLightBulbAutoFixForeground = registerColor(\n\t\"editorLightBulbAutoFix.foreground\",\n\t{\n\t\tdark: \"#75BEFF\",\n\t\tlight: \"#007ACC\",\n\t\thcDark: \"#75BEFF\",\n\t\thcLight: \"#007ACC\",\n\t},\n\tnls.localize(\n\t\t\"editorLightBulbAutoFixForeground\",\n\t\t\"The color used for the lightbulb auto fix actions icon.\",\n\t),\n);\n\nexport const editorLightBulbAiForeground = registerColor(\n\t\"editorLightBulbAi.foreground\",\n\teditorLightBulbForeground,\n\tnls.localize(\n\t\t\"editorLightBulbAiForeground\",\n\t\t\"The color used for the lightbulb AI icon.\",\n\t),\n);\n\n// ----- editor snippet\n\nexport const snippetTabstopHighlightBackground = registerColor(\n\t\"editor.snippetTabstopHighlightBackground\",\n\t{\n\t\tdark: new Color(new RGBA(124, 124, 124, 0.3)),\n\t\tlight: new Color(new RGBA(10, 50, 100, 0.2)),\n\t\thcDark: new Color(new RGBA(124, 124, 124, 0.3)),\n\t\thcLight: new Color(new RGBA(10, 50, 100, 0.2)),\n\t},\n\tnls.localize(\n\t\t\"snippetTabstopHighlightBackground\",\n\t\t\"Highlight background color of a snippet tabstop.\",\n\t),\n);\n\nexport const snippetTabstopHighlightBorder = registerColor(\n\t\"editor.snippetTabstopHighlightBorder\",\n\tnull,\n\tnls.localize(\n\t\t\"snippetTabstopHighlightBorder\",\n\t\t\"Highlight border color of a snippet tabstop.\",\n\t),\n);\n\nexport const snippetFinalTabstopHighlightBackground = registerColor(\n\t\"editor.snippetFinalTabstopHighlightBackground\",\n\tnull,\n\tnls.localize(\n\t\t\"snippetFinalTabstopHighlightBackground\",\n\t\t\"Highlight background color of the final tabstop of a snippet.\",\n\t),\n);\n\nexport const snippetFinalTabstopHighlightBorder = registerColor(\n\t\"editor.snippetFinalTabstopHighlightBorder\",\n\t{\n\t\tdark: \"#525252\",\n\t\tlight: new Color(new RGBA(10, 50, 100, 0.5)),\n\t\thcDark: \"#525252\",\n\t\thcLight: \"#292929\",\n\t},\n\tnls.localize(\n\t\t\"snippetFinalTabstopHighlightBorder\",\n\t\t\"Highlight border color of the final tabstop of a snippet.\",\n\t),\n);\n\n// ----- diff editor\n\nexport const defaultInsertColor = new Color(new RGBA(155, 185, 85, 0.2));\nexport const defaultRemoveColor = new Color(new RGBA(255, 0, 0, 0.2));\n\nexport const diffInserted = registerColor(\n\t\"diffEditor.insertedTextBackground\",\n\t{ dark: \"#9ccc2c33\", light: \"#9ccc2c40\", hcDark: null, hcLight: null },\n\tnls.localize(\n\t\t\"diffEditorInserted\",\n\t\t\"Background color for text that got inserted. The color must not be opaque so as not to hide underlying decorations.\",\n\t),\n\ttrue,\n);\n\nexport const diffRemoved = registerColor(\n\t\"diffEditor.removedTextBackground\",\n\t{ dark: \"#ff000033\", light: \"#ff000033\", hcDark: null, hcLight: null },\n\tnls.localize(\n\t\t\"diffEditorRemoved\",\n\t\t\"Background color for text that got removed. The color must not be opaque so as not to hide underlying decorations.\",\n\t),\n\ttrue,\n);\n\nexport const diffInsertedLine = registerColor(\n\t\"diffEditor.insertedLineBackground\",\n\t{\n\t\tdark: defaultInsertColor,\n\t\tlight: defaultInsertColor,\n\t\thcDark: null,\n\t\thcLight: null,\n\t},\n\tnls.localize(\n\t\t\"diffEditorInsertedLines\",\n\t\t\"Background color for lines that got inserted. The color must not be opaque so as not to hide underlying decorations.\",\n\t),\n\ttrue,\n);\n\nexport const diffRemovedLine = registerColor(\n\t\"diffEditor.removedLineBackground\",\n\t{\n\t\tdark: defaultRemoveColor,\n\t\tlight: defaultRemoveColor,\n\t\thcDark: null,\n\t\thcLight: null,\n\t},\n\tnls.localize(\n\t\t\"diffEditorRemovedLines\",\n\t\t\"Background color for lines that got removed. The color must not be opaque so as not to hide underlying decorations.\",\n\t),\n\ttrue,\n);\n\nexport const diffInsertedLineGutter = registerColor(\n\t\"diffEditorGutter.insertedLineBackground\",\n\tnull,\n\tnls.localize(\n\t\t\"diffEditorInsertedLineGutter\",\n\t\t\"Background color for the margin where lines got inserted.\",\n\t),\n);\n\nexport const diffRemovedLineGutter = registerColor(\n\t\"diffEditorGutter.removedLineBackground\",\n\tnull,\n\tnls.localize(\n\t\t\"diffEditorRemovedLineGutter\",\n\t\t\"Background color for the margin where lines got removed.\",\n\t),\n);\n\nexport const diffOverviewRulerInserted = registerColor(\n\t\"diffEditorOverview.insertedForeground\",\n\tnull,\n\tnls.localize(\n\t\t\"diffEditorOverviewInserted\",\n\t\t\"Diff overview ruler foreground for inserted content.\",\n\t),\n);\n\nexport const diffOverviewRulerRemoved = registerColor(\n\t\"diffEditorOverview.removedForeground\",\n\tnull,\n\tnls.localize(\n\t\t\"diffEditorOverviewRemoved\",\n\t\t\"Diff overview ruler foreground for removed content.\",\n\t),\n);\n\nexport const diffInsertedOutline = registerColor(\n\t\"diffEditor.insertedTextBorder\",\n\t{ dark: null, light: null, hcDark: \"#33ff2eff\", hcLight: \"#374E06\" },\n\tnls.localize(\n\t\t\"diffEditorInsertedOutline\",\n\t\t\"Outline color for the text that got inserted.\",\n\t),\n);\n\nexport const diffRemovedOutline = registerColor(\n\t\"diffEditor.removedTextBorder\",\n\t{ dark: null, light: null, hcDark: \"#FF008F\", hcLight: \"#AD0707\" },\n\tnls.localize(\n\t\t\"diffEditorRemovedOutline\",\n\t\t\"Outline color for text that got removed.\",\n\t),\n);\n\nexport const diffBorder = registerColor(\n\t\"diffEditor.border\",\n\t{\n\t\tdark: null,\n\t\tlight: null,\n\t\thcDark: contrastBorder,\n\t\thcLight: contrastBorder,\n\t},\n\tnls.localize(\n\t\t\"diffEditorBorder\",\n\t\t\"Border color between the two text editors.\",\n\t),\n);\n\nexport const diffDiagonalFill = registerColor(\n\t\"diffEditor.diagonalFill\",\n\t{ dark: \"#cccccc33\", light: \"#22222233\", hcDark: null, hcLight: null },\n\tnls.localize(\n\t\t\"diffDiagonalFill\",\n\t\t\"Color of the diff editor's diagonal fill. The diagonal fill is used in side-by-side diff views.\",\n\t),\n);\n\nexport const diffUnchangedRegionBackground = registerColor(\n\t\"diffEditor.unchangedRegionBackground\",\n\t\"sideBar.background\",\n\tnls.localize(\n\t\t\"diffEditor.unchangedRegionBackground\",\n\t\t\"The background color of unchanged blocks in the diff editor.\",\n\t),\n);\n\nexport const diffUnchangedRegionForeground = registerColor(\n\t\"diffEditor.unchangedRegionForeground\",\n\t\"foreground\",\n\tnls.localize(\n\t\t\"diffEditor.unchangedRegionForeground\",\n\t\t\"The foreground color of unchanged blocks in the diff editor.\",\n\t),\n);\n\nexport const diffUnchangedTextBackground = registerColor(\n\t\"diffEditor.unchangedCodeBackground\",\n\t{ dark: \"#74747429\", light: \"#b8b8b829\", hcDark: null, hcLight: null },\n\tnls.localize(\n\t\t\"diffEditor.unchangedCodeBackground\",\n\t\t\"The background color of unchanged code in the diff editor.\",\n\t),\n);\n\n// ----- widget\n\nexport const widgetShadow = registerColor(\n\t\"widget.shadow\",\n\t{\n\t\tdark: transparent(Color.black, 0.36),\n\t\tlight: transparent(Color.black, 0.16),\n\t\thcDark: null,\n\t\thcLight: null,\n\t},\n\tnls.localize(\n\t\t\"widgetShadow\",\n\t\t\"Shadow color of widgets such as find/replace inside the editor.\",\n\t),\n);\n\nexport const widgetBorder = registerColor(\n\t\"widget.border\",\n\t{\n\t\tdark: null,\n\t\tlight: null,\n\t\thcDark: contrastBorder,\n\t\thcLight: contrastBorder,\n\t},\n\tnls.localize(\n\t\t\"widgetBorder\",\n\t\t\"Border color of widgets such as find/replace inside the editor.\",\n\t),\n);\n\n// ----- toolbar\n\nexport const toolbarHoverBackground = registerColor(\n\t\"toolbar.hoverBackground\",\n\t{ dark: \"#5a5d5e50\", light: \"#b8b8b850\", hcDark: null, hcLight: null },\n\tnls.localize(\n\t\t\"toolbarHoverBackground\",\n\t\t\"Toolbar background when hovering over actions using the mouse\",\n\t),\n);\n\nexport const toolbarHoverOutline = registerColor(\n\t\"toolbar.hoverOutline\",\n\t{\n\t\tdark: null,\n\t\tlight: null,\n\t\thcDark: activeContrastBorder,\n\t\thcLight: activeContrastBorder,\n\t},\n\tnls.localize(\n\t\t\"toolbarHoverOutline\",\n\t\t\"Toolbar outline when hovering over actions using the mouse\",\n\t),\n);\n\nexport const toolbarActiveBackground = registerColor(\n\t\"toolbar.activeBackground\",\n\t{\n\t\tdark: lighten(toolbarHoverBackground, 0.1),\n\t\tlight: darken(toolbarHoverBackground, 0.1),\n\t\thcDark: null,\n\t\thcLight: null,\n\t},\n\tnls.localize(\n\t\t\"toolbarActiveBackground\",\n\t\t\"Toolbar background when holding the mouse over actions\",\n\t),\n);\n\n// ----- breadcumbs\n\nexport const breadcrumbsForeground = registerColor(\n\t\"breadcrumb.foreground\",\n\ttransparent(foreground, 0.8),\n\tnls.localize(\n\t\t\"breadcrumbsFocusForeground\",\n\t\t\"Color of focused breadcrumb items.\",\n\t),\n);\n\nexport const breadcrumbsBackground = registerColor(\n\t\"breadcrumb.background\",\n\teditorBackground,\n\tnls.localize(\n\t\t\"breadcrumbsBackground\",\n\t\t\"Background color of breadcrumb items.\",\n\t),\n);\n\nexport const breadcrumbsFocusForeground = registerColor(\n\t\"breadcrumb.focusForeground\",\n\t{\n\t\tlight: darken(foreground, 0.2),\n\t\tdark: lighten(foreground, 0.1),\n\t\thcDark: lighten(foreground, 0.1),\n\t\thcLight: lighten(foreground, 0.1),\n\t},\n\tnls.localize(\n\t\t\"breadcrumbsFocusForeground\",\n\t\t\"Color of focused breadcrumb items.\",\n\t),\n);\n\nexport const breadcrumbsActiveSelectionForeground = registerColor(\n\t\"breadcrumb.activeSelectionForeground\",\n\t{\n\t\tlight: darken(foreground, 0.2),\n\t\tdark: lighten(foreground, 0.1),\n\t\thcDark: lighten(foreground, 0.1),\n\t\thcLight: lighten(foreground, 0.1),\n\t},\n\tnls.localize(\n\t\t\"breadcrumbsSelectedForeground\",\n\t\t\"Color of selected breadcrumb items.\",\n\t),\n);\n\nexport const breadcrumbsPickerBackground = registerColor(\n\t\"breadcrumbPicker.background\",\n\teditorWidgetBackground,\n\tnls.localize(\n\t\t\"breadcrumbsSelectedBackground\",\n\t\t\"Background color of breadcrumb item picker.\",\n\t),\n);\n\n// ----- merge\n\nconst headerTransparency = 0.5;\nconst currentBaseColor =\n\tColor.fromHex(\"#40C8AE\").transparent(headerTransparency);\nconst incomingBaseColor =\n\tColor.fromHex(\"#40A6FF\").transparent(headerTransparency);\nconst commonBaseColor = Color.fromHex(\"#606060\").transparent(0.4);\nconst contentTransparency = 0.4;\nconst rulerTransparency = 1;\n\nexport const mergeCurrentHeaderBackground = registerColor(\n\t\"merge.currentHeaderBackground\",\n\t{\n\t\tdark: currentBaseColor,\n\t\tlight: currentBaseColor,\n\t\thcDark: null,\n\t\thcLight: null,\n\t},\n\tnls.localize(\n\t\t\"mergeCurrentHeaderBackground\",\n\t\t\"Current header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.\",\n\t),\n\ttrue,\n);\n\nexport const mergeCurrentContentBackground = registerColor(\n\t\"merge.currentContentBackground\",\n\ttransparent(mergeCurrentHeaderBackground, contentTransparency),\n\tnls.localize(\n\t\t\"mergeCurrentContentBackground\",\n\t\t\"Current content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.\",\n\t),\n\ttrue,\n);\n\nexport const mergeIncomingHeaderBackground = registerColor(\n\t\"merge.incomingHeaderBackground\",\n\t{\n\t\tdark: incomingBaseColor,\n\t\tlight: incomingBaseColor,\n\t\thcDark: null,\n\t\thcLight: null,\n\t},\n\tnls.localize(\n\t\t\"mergeIncomingHeaderBackground\",\n\t\t\"Incoming header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.\",\n\t),\n\ttrue,\n);\n\nexport const mergeIncomingContentBackground = registerColor(\n\t\"merge.incomingContentBackground\",\n\ttransparent(mergeIncomingHeaderBackground, contentTransparency),\n\tnls.localize(\n\t\t\"mergeIncomingContentBackground\",\n\t\t\"Incoming content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.\",\n\t),\n\ttrue,\n);\n\nexport const mergeCommonHeaderBackground = registerColor(\n\t\"merge.commonHeaderBackground\",\n\t{\n\t\tdark: commonBaseColor,\n\t\tlight: commonBaseColor,\n\t\thcDark: null,\n\t\thcLight: null,\n\t},\n\tnls.localize(\n\t\t\"mergeCommonHeaderBackground\",\n\t\t\"Common ancestor header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.\",\n\t),\n\ttrue,\n);\n\nexport const mergeCommonContentBackground = registerColor(\n\t\"merge.commonContentBackground\",\n\ttransparent(mergeCommonHeaderBackground, contentTransparency),\n\tnls.localize(\n\t\t\"mergeCommonContentBackground\",\n\t\t\"Common ancestor content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.\",\n\t),\n\ttrue,\n);\n\nexport const mergeBorder = registerColor(\n\t\"merge.border\",\n\t{ dark: null, light: null, hcDark: \"#C3DF6F\", hcLight: \"#007ACC\" },\n\tnls.localize(\n\t\t\"mergeBorder\",\n\t\t\"Border color on headers and the splitter in inline merge-conflicts.\",\n\t),\n);\n\nexport const overviewRulerCurrentContentForeground = registerColor(\n\t\"editorOverviewRuler.currentContentForeground\",\n\t{\n\t\tdark: transparent(mergeCurrentHeaderBackground, rulerTransparency),\n\t\tlight: transparent(mergeCurrentHeaderBackground, rulerTransparency),\n\t\thcDark: mergeBorder,\n\t\thcLight: mergeBorder,\n\t},\n\tnls.localize(\n\t\t\"overviewRulerCurrentContentForeground\",\n\t\t\"Current overview ruler foreground for inline merge-conflicts.\",\n\t),\n);\n\nexport const overviewRulerIncomingContentForeground = registerColor(\n\t\"editorOverviewRuler.incomingContentForeground\",\n\t{\n\t\tdark: transparent(mergeIncomingHeaderBackground, rulerTransparency),\n\t\tlight: transparent(mergeIncomingHeaderBackground, rulerTransparency),\n\t\thcDark: mergeBorder,\n\t\thcLight: mergeBorder,\n\t},\n\tnls.localize(\n\t\t\"overviewRulerIncomingContentForeground\",\n\t\t\"Incoming overview ruler foreground for inline merge-conflicts.\",\n\t),\n);\n\nexport const overviewRulerCommonContentForeground = registerColor(\n\t\"editorOverviewRuler.commonContentForeground\",\n\t{\n\t\tdark: transparent(mergeCommonHeaderBackground, rulerTransparency),\n\t\tlight: transparent(mergeCommonHeaderBackground, rulerTransparency),\n\t\thcDark: mergeBorder,\n\t\thcLight: mergeBorder,\n\t},\n\tnls.localize(\n\t\t\"overviewRulerCommonContentForeground\",\n\t\t\"Common ancestor overview ruler foreground for inline merge-conflicts.\",\n\t),\n);\n\nexport const overviewRulerFindMatchForeground = registerColor(\n\t\"editorOverviewRuler.findMatchForeground\",\n\t{\n\t\tdark: \"#d186167e\",\n\t\tlight: \"#d186167e\",\n\t\thcDark: \"#AB5A00\",\n\t\thcLight: \"#AB5A00\",\n\t},\n\tnls.localize(\n\t\t\"overviewRulerFindMatchForeground\",\n\t\t\"Overview ruler marker color for find matches. The color must not be opaque so as not to hide underlying decorations.\",\n\t),\n\ttrue,\n);\n\nexport const overviewRulerSelectionHighlightForeground = registerColor(\n\t\"editorOverviewRuler.selectionHighlightForeground\",\n\t\"#A0A0A0CC\",\n\tnls.localize(\n\t\t\"overviewRulerSelectionHighlightForeground\",\n\t\t\"Overview ruler marker color for selection highlights. The color must not be opaque so as not to hide underlying decorations.\",\n\t),\n\ttrue,\n);\n\n// ----- problems\n\nexport const problemsErrorIconForeground = registerColor(\n\t\"problemsErrorIcon.foreground\",\n\teditorErrorForeground,\n\tnls.localize(\n\t\t\"problemsErrorIconForeground\",\n\t\t\"The color used for the problems error icon.\",\n\t),\n);\n\nexport const problemsWarningIconForeground = registerColor(\n\t\"problemsWarningIcon.foreground\",\n\teditorWarningForeground,\n\tnls.localize(\n\t\t\"problemsWarningIconForeground\",\n\t\t\"The color used for the problems warning icon.\",\n\t),\n);\n\nexport const problemsInfoIconForeground = registerColor(\n\t\"problemsInfoIcon.foreground\",\n\teditorInfoForeground,\n\tnls.localize(\n\t\t\"problemsInfoIconForeground\",\n\t\t\"The color used for the problems info icon.\",\n\t),\n);\n"],
  "mappings": "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",
  "names": []
}
