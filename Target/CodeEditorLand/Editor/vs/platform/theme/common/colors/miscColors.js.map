{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/theme/common/colors/miscColors.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../../../nls.js';\n\n// Import the effects we need\nimport { Color } from '../../../../base/common/color.js';\nimport { registerColor, transparent } from '../colorUtils.js';\n\n// Import the colors we need\nimport { contrastBorder, focusBorder } from './baseColors.js';\n\n\n// ----- sash\n\nexport const sashHoverBorder = registerColor('sash.hoverBorder',\n\tfocusBorder,\n\tnls.localize('sashActiveBorder', \"Border color of active sashes.\"));\n\n\n// ----- badge\n\nexport const badgeBackground = registerColor('badge.background',\n\t{ dark: '#4D4D4D', light: '#C4C4C4', hcDark: Color.black, hcLight: '#0F4A85' },\n\tnls.localize('badgeBackground', \"Badge background color. Badges are small information labels, e.g. for search results count.\"));\n\nexport const badgeForeground = registerColor('badge.foreground',\n\t{ dark: Color.white, light: '#333', hcDark: Color.white, hcLight: Color.white },\n\tnls.localize('badgeForeground', \"Badge foreground color. Badges are small information labels, e.g. for search results count.\"));\n\n\n// ----- scrollbar\n\nexport const scrollbarShadow = registerColor('scrollbar.shadow',\n\t{ dark: '#000000', light: '#DDDDDD', hcDark: null, hcLight: null },\n\tnls.localize('scrollbarShadow', \"Scrollbar shadow to indicate that the view is scrolled.\"));\n\nexport const scrollbarSliderBackground = registerColor('scrollbarSlider.background',\n\t{ dark: Color.fromHex('#797979').transparent(0.4), light: Color.fromHex('#646464').transparent(0.4), hcDark: transparent(contrastBorder, 0.6), hcLight: transparent(contrastBorder, 0.4) },\n\tnls.localize('scrollbarSliderBackground', \"Scrollbar slider background color.\"));\n\nexport const scrollbarSliderHoverBackground = registerColor('scrollbarSlider.hoverBackground',\n\t{ dark: Color.fromHex('#646464').transparent(0.7), light: Color.fromHex('#646464').transparent(0.7), hcDark: transparent(contrastBorder, 0.8), hcLight: transparent(contrastBorder, 0.8) },\n\tnls.localize('scrollbarSliderHoverBackground', \"Scrollbar slider background color when hovering.\"));\n\nexport const scrollbarSliderActiveBackground = registerColor('scrollbarSlider.activeBackground',\n\t{ dark: Color.fromHex('#BFBFBF').transparent(0.4), light: Color.fromHex('#000000').transparent(0.6), hcDark: contrastBorder, hcLight: contrastBorder },\n\tnls.localize('scrollbarSliderActiveBackground', \"Scrollbar slider background color when clicked on.\"));\n\n\n// ----- progress bar\n\nexport const progressBarBackground = registerColor('progressBar.background',\n\t{ dark: Color.fromHex('#0E70C0'), light: Color.fromHex('#0E70C0'), hcDark: contrastBorder, hcLight: contrastBorder },\n\tnls.localize('progressBarBackground', \"Background color of the progress bar that can show for long running operations.\"));\n"],
  "mappings": "AAKA,YAAY,SAAS;AAGrB,SAAS,aAAa;AACtB,SAAS,eAAe,mBAAmB;AAG3C,SAAS,gBAAgB,mBAAmB;AAKrC,MAAM,kBAAkB;AAAA,EAAc;AAAA,EAC5C;AAAA,EACA,IAAI,SAAS,oBAAoB,gCAAgC;AAAC;AAK5D,MAAM,kBAAkB;AAAA,EAAc;AAAA,EAC5C,EAAE,MAAM,WAAW,OAAO,WAAW,QAAQ,MAAM,OAAO,SAAS,UAAU;AAAA,EAC7E,IAAI,SAAS,mBAAmB,6FAA6F;AAAC;AAExH,MAAM,kBAAkB;AAAA,EAAc;AAAA,EAC5C,EAAE,MAAM,MAAM,OAAO,OAAO,QAAQ,QAAQ,MAAM,OAAO,SAAS,MAAM,MAAM;AAAA,EAC9E,IAAI,SAAS,mBAAmB,6FAA6F;AAAC;AAKxH,MAAM,kBAAkB;AAAA,EAAc;AAAA,EAC5C,EAAE,MAAM,WAAW,OAAO,WAAW,QAAQ,MAAM,SAAS,KAAK;AAAA,EACjE,IAAI,SAAS,mBAAmB,yDAAyD;AAAC;AAEpF,MAAM,4BAA4B;AAAA,EAAc;AAAA,EACtD,EAAE,MAAM,MAAM,QAAQ,SAAS,EAAE,YAAY,GAAG,GAAG,OAAO,MAAM,QAAQ,SAAS,EAAE,YAAY,GAAG,GAAG,QAAQ,YAAY,gBAAgB,GAAG,GAAG,SAAS,YAAY,gBAAgB,GAAG,EAAE;AAAA,EACzL,IAAI,SAAS,6BAA6B,oCAAoC;AAAC;AAEzE,MAAM,iCAAiC;AAAA,EAAc;AAAA,EAC3D,EAAE,MAAM,MAAM,QAAQ,SAAS,EAAE,YAAY,GAAG,GAAG,OAAO,MAAM,QAAQ,SAAS,EAAE,YAAY,GAAG,GAAG,QAAQ,YAAY,gBAAgB,GAAG,GAAG,SAAS,YAAY,gBAAgB,GAAG,EAAE;AAAA,EACzL,IAAI,SAAS,kCAAkC,kDAAkD;AAAC;AAE5F,MAAM,kCAAkC;AAAA,EAAc;AAAA,EAC5D,EAAE,MAAM,MAAM,QAAQ,SAAS,EAAE,YAAY,GAAG,GAAG,OAAO,MAAM,QAAQ,SAAS,EAAE,YAAY,GAAG,GAAG,QAAQ,gBAAgB,SAAS,eAAe;AAAA,EACrJ,IAAI,SAAS,mCAAmC,oDAAoD;AAAC;AAK/F,MAAM,wBAAwB;AAAA,EAAc;AAAA,EAClD,EAAE,MAAM,MAAM,QAAQ,SAAS,GAAG,OAAO,MAAM,QAAQ,SAAS,GAAG,QAAQ,gBAAgB,SAAS,eAAe;AAAA,EACnH,IAAI,SAAS,yBAAyB,iFAAiF;AAAC;",
  "names": []
}
