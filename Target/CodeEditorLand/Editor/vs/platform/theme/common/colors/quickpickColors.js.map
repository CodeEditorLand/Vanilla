{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/theme/common/colors/quickpickColors.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../../../nls.js';\n\n// Import the effects we need\nimport { Color, RGBA } from '../../../../base/common/color.js';\nimport { registerColor, oneOf } from '../colorUtils.js';\n\n// Import the colors we need\nimport { editorWidgetBackground, editorWidgetForeground } from './editorColors.js';\nimport { listActiveSelectionBackground, listActiveSelectionForeground, listActiveSelectionIconForeground } from './listColors.js';\n\n\nexport const quickInputBackground = registerColor('quickInput.background',\n\teditorWidgetBackground,\n\tnls.localize('pickerBackground', \"Quick picker background color. The quick picker widget is the container for pickers like the command palette.\"));\n\nexport const quickInputForeground = registerColor('quickInput.foreground',\n\teditorWidgetForeground,\n\tnls.localize('pickerForeground', \"Quick picker foreground color. The quick picker widget is the container for pickers like the command palette.\"));\n\nexport const quickInputTitleBackground = registerColor('quickInputTitle.background',\n\t{ dark: new Color(new RGBA(255, 255, 255, 0.105)), light: new Color(new RGBA(0, 0, 0, 0.06)), hcDark: '#000000', hcLight: Color.white },\n\tnls.localize('pickerTitleBackground', \"Quick picker title background color. The quick picker widget is the container for pickers like the command palette.\"));\n\nexport const pickerGroupForeground = registerColor('pickerGroup.foreground',\n\t{ dark: '#3794FF', light: '#0066BF', hcDark: Color.white, hcLight: '#0F4A85' },\n\tnls.localize('pickerGroupForeground', \"Quick picker color for grouping labels.\"));\n\nexport const pickerGroupBorder = registerColor('pickerGroup.border',\n\t{ dark: '#3F3F46', light: '#CCCEDB', hcDark: Color.white, hcLight: '#0F4A85' },\n\tnls.localize('pickerGroupBorder', \"Quick picker color for grouping borders.\"));\n\nexport const _deprecatedQuickInputListFocusBackground = registerColor('quickInput.list.focusBackground',\n\tnull, '', undefined,\n\tnls.localize('quickInput.list.focusBackground deprecation', \"Please use quickInputList.focusBackground instead\"));\n\nexport const quickInputListFocusForeground = registerColor('quickInputList.focusForeground',\n\tlistActiveSelectionForeground,\n\tnls.localize('quickInput.listFocusForeground', \"Quick picker foreground color for the focused item.\"));\n\nexport const quickInputListFocusIconForeground = registerColor('quickInputList.focusIconForeground',\n\tlistActiveSelectionIconForeground,\n\tnls.localize('quickInput.listFocusIconForeground', \"Quick picker icon foreground color for the focused item.\"));\n\nexport const quickInputListFocusBackground = registerColor('quickInputList.focusBackground',\n\t{ dark: oneOf(_deprecatedQuickInputListFocusBackground, listActiveSelectionBackground), light: oneOf(_deprecatedQuickInputListFocusBackground, listActiveSelectionBackground), hcDark: null, hcLight: null },\n\tnls.localize('quickInput.listFocusBackground', \"Quick picker background color for the focused item.\"));\n"],
  "mappings": "AAKA,YAAY,SAAS;AAGrB,SAAS,OAAO,YAAY;AAC5B,SAAS,eAAe,aAAa;AAGrC,SAAS,wBAAwB,8BAA8B;AAC/D,SAAS,+BAA+B,+BAA+B,yCAAyC;AAGzG,MAAM,uBAAuB;AAAA,EAAc;AAAA,EACjD;AAAA,EACA,IAAI,SAAS,oBAAoB,+GAA+G;AAAC;AAE3I,MAAM,uBAAuB;AAAA,EAAc;AAAA,EACjD;AAAA,EACA,IAAI,SAAS,oBAAoB,+GAA+G;AAAC;AAE3I,MAAM,4BAA4B;AAAA,EAAc;AAAA,EACtD,EAAE,MAAM,IAAI,MAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,CAAC,GAAG,OAAO,IAAI,MAAM,IAAI,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,QAAQ,WAAW,SAAS,MAAM,MAAM;AAAA,EACtI,IAAI,SAAS,yBAAyB,qHAAqH;AAAC;AAEtJ,MAAM,wBAAwB;AAAA,EAAc;AAAA,EAClD,EAAE,MAAM,WAAW,OAAO,WAAW,QAAQ,MAAM,OAAO,SAAS,UAAU;AAAA,EAC7E,IAAI,SAAS,yBAAyB,yCAAyC;AAAC;AAE1E,MAAM,oBAAoB;AAAA,EAAc;AAAA,EAC9C,EAAE,MAAM,WAAW,OAAO,WAAW,QAAQ,MAAM,OAAO,SAAS,UAAU;AAAA,EAC7E,IAAI,SAAS,qBAAqB,0CAA0C;AAAC;AAEvE,MAAM,2CAA2C;AAAA,EAAc;AAAA,EACrE;AAAA,EAAM;AAAA,EAAI;AAAA,EACV,IAAI,SAAS,+CAA+C,mDAAmD;AAAC;AAE1G,MAAM,gCAAgC;AAAA,EAAc;AAAA,EAC1D;AAAA,EACA,IAAI,SAAS,kCAAkC,qDAAqD;AAAC;AAE/F,MAAM,oCAAoC;AAAA,EAAc;AAAA,EAC9D;AAAA,EACA,IAAI,SAAS,sCAAsC,0DAA0D;AAAC;AAExG,MAAM,gCAAgC;AAAA,EAAc;AAAA,EAC1D,EAAE,MAAM,MAAM,0CAA0C,6BAA6B,GAAG,OAAO,MAAM,0CAA0C,6BAA6B,GAAG,QAAQ,MAAM,SAAS,KAAK;AAAA,EAC3M,IAAI,SAAS,kCAAkC,qDAAqD;AAAC;",
  "names": []
}
