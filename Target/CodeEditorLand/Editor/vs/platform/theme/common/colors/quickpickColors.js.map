{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/theme/common/colors/quickpickColors.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from \"../../../../nls.js\";\n\n// Import the effects we need\nimport { Color, RGBA } from \"../../../../base/common/color.js\";\nimport { oneOf, registerColor } from \"../colorUtils.js\";\n\n// Import the colors we need\nimport {\n\teditorWidgetBackground,\n\teditorWidgetForeground,\n} from \"./editorColors.js\";\nimport {\n\tlistActiveSelectionBackground,\n\tlistActiveSelectionForeground,\n\tlistActiveSelectionIconForeground,\n} from \"./listColors.js\";\n\nexport const quickInputBackground = registerColor(\n\t\"quickInput.background\",\n\teditorWidgetBackground,\n\tnls.localize(\n\t\t\"pickerBackground\",\n\t\t\"Quick picker background color. The quick picker widget is the container for pickers like the command palette.\",\n\t),\n);\n\nexport const quickInputForeground = registerColor(\n\t\"quickInput.foreground\",\n\teditorWidgetForeground,\n\tnls.localize(\n\t\t\"pickerForeground\",\n\t\t\"Quick picker foreground color. The quick picker widget is the container for pickers like the command palette.\",\n\t),\n);\n\nexport const quickInputTitleBackground = registerColor(\n\t\"quickInputTitle.background\",\n\t{\n\t\tdark: new Color(new RGBA(255, 255, 255, 0.105)),\n\t\tlight: new Color(new RGBA(0, 0, 0, 0.06)),\n\t\thcDark: \"#000000\",\n\t\thcLight: Color.white,\n\t},\n\tnls.localize(\n\t\t\"pickerTitleBackground\",\n\t\t\"Quick picker title background color. The quick picker widget is the container for pickers like the command palette.\",\n\t),\n);\n\nexport const pickerGroupForeground = registerColor(\n\t\"pickerGroup.foreground\",\n\t{\n\t\tdark: \"#3794FF\",\n\t\tlight: \"#0066BF\",\n\t\thcDark: Color.white,\n\t\thcLight: \"#0F4A85\",\n\t},\n\tnls.localize(\n\t\t\"pickerGroupForeground\",\n\t\t\"Quick picker color for grouping labels.\",\n\t),\n);\n\nexport const pickerGroupBorder = registerColor(\n\t\"pickerGroup.border\",\n\t{\n\t\tdark: \"#3F3F46\",\n\t\tlight: \"#CCCEDB\",\n\t\thcDark: Color.white,\n\t\thcLight: \"#0F4A85\",\n\t},\n\tnls.localize(\n\t\t\"pickerGroupBorder\",\n\t\t\"Quick picker color for grouping borders.\",\n\t),\n);\n\nexport const _deprecatedQuickInputListFocusBackground = registerColor(\n\t\"quickInput.list.focusBackground\",\n\tnull,\n\t\"\",\n\tundefined,\n\tnls.localize(\n\t\t\"quickInput.list.focusBackground deprecation\",\n\t\t\"Please use quickInputList.focusBackground instead\",\n\t),\n);\n\nexport const quickInputListFocusForeground = registerColor(\n\t\"quickInputList.focusForeground\",\n\tlistActiveSelectionForeground,\n\tnls.localize(\n\t\t\"quickInput.listFocusForeground\",\n\t\t\"Quick picker foreground color for the focused item.\",\n\t),\n);\n\nexport const quickInputListFocusIconForeground = registerColor(\n\t\"quickInputList.focusIconForeground\",\n\tlistActiveSelectionIconForeground,\n\tnls.localize(\n\t\t\"quickInput.listFocusIconForeground\",\n\t\t\"Quick picker icon foreground color for the focused item.\",\n\t),\n);\n\nexport const quickInputListFocusBackground = registerColor(\n\t\"quickInputList.focusBackground\",\n\t{\n\t\tdark: oneOf(\n\t\t\t_deprecatedQuickInputListFocusBackground,\n\t\t\tlistActiveSelectionBackground,\n\t\t),\n\t\tlight: oneOf(\n\t\t\t_deprecatedQuickInputListFocusBackground,\n\t\t\tlistActiveSelectionBackground,\n\t\t),\n\t\thcDark: null,\n\t\thcLight: null,\n\t},\n\tnls.localize(\n\t\t\"quickInput.listFocusBackground\",\n\t\t\"Quick picker background color for the focused item.\",\n\t),\n);\n"],
  "mappings": "AAKA,YAAY,SAAS;AAGrB,SAAS,OAAO,YAAY;AAC5B,SAAS,OAAO,qBAAqB;AAGrC;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AAEA,MAAM,uBAAuB;AAAA,EACnC;AAAA,EACA;AAAA,EACA,IAAI;AAAA,IACH;AAAA,IACA;AAAA,EACD;AACD;AAEO,MAAM,uBAAuB;AAAA,EACnC;AAAA,EACA;AAAA,EACA,IAAI;AAAA,IACH;AAAA,IACA;AAAA,EACD;AACD;AAEO,MAAM,4BAA4B;AAAA,EACxC;AAAA,EACA;AAAA,IACC,MAAM,IAAI,MAAM,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,CAAC;AAAA,IAC9C,OAAO,IAAI,MAAM,IAAI,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC;AAAA,IACxC,QAAQ;AAAA,IACR,SAAS,MAAM;AAAA,EAChB;AAAA,EACA,IAAI;AAAA,IACH;AAAA,IACA;AAAA,EACD;AACD;AAEO,MAAM,wBAAwB;AAAA,EACpC;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,OAAO;AAAA,IACP,QAAQ,MAAM;AAAA,IACd,SAAS;AAAA,EACV;AAAA,EACA,IAAI;AAAA,IACH;AAAA,IACA;AAAA,EACD;AACD;AAEO,MAAM,oBAAoB;AAAA,EAChC;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,OAAO;AAAA,IACP,QAAQ,MAAM;AAAA,IACd,SAAS;AAAA,EACV;AAAA,EACA,IAAI;AAAA,IACH;AAAA,IACA;AAAA,EACD;AACD;AAEO,MAAM,2CAA2C;AAAA,EACvD;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,IAAI;AAAA,IACH;AAAA,IACA;AAAA,EACD;AACD;AAEO,MAAM,gCAAgC;AAAA,EAC5C;AAAA,EACA;AAAA,EACA,IAAI;AAAA,IACH;AAAA,IACA;AAAA,EACD;AACD;AAEO,MAAM,oCAAoC;AAAA,EAChD;AAAA,EACA;AAAA,EACA,IAAI;AAAA,IACH;AAAA,IACA;AAAA,EACD;AACD;AAEO,MAAM,gCAAgC;AAAA,EAC5C;AAAA,EACA;AAAA,IACC,MAAM;AAAA,MACL;AAAA,MACA;AAAA,IACD;AAAA,IACA,OAAO;AAAA,MACN;AAAA,MACA;AAAA,IACD;AAAA,IACA,QAAQ;AAAA,IACR,SAAS;AAAA,EACV;AAAA,EACA,IAAI;AAAA,IACH;AAAA,IACA;AAAA,EACD;AACD;",
  "names": []
}
