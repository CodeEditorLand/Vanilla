{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/theme/common/colors/inputColors.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from \"../../../../nls.js\";\n\n// Import the effects we need\nimport { Color, RGBA } from \"../../../../base/common/color.js\";\nimport { darken, lighten, registerColor, transparent } from \"../colorUtils.js\";\n\n// Import the colors we need\nimport {\n\tcontrastBorder,\n\tfocusBorder,\n\tforeground,\n\ticonForeground,\n} from \"./baseColors.js\";\nimport { editorWidgetBackground } from \"./editorColors.js\";\n\n// ----- input\n\nexport const inputBackground = registerColor(\n\t\"input.background\",\n\t{\n\t\tdark: \"#3C3C3C\",\n\t\tlight: Color.white,\n\t\thcDark: Color.black,\n\t\thcLight: Color.white,\n\t},\n\tnls.localize(\"inputBoxBackground\", \"Input box background.\"),\n);\n\nexport const inputForeground = registerColor(\n\t\"input.foreground\",\n\tforeground,\n\tnls.localize(\"inputBoxForeground\", \"Input box foreground.\"),\n);\n\nexport const inputBorder = registerColor(\n\t\"input.border\",\n\t{\n\t\tdark: null,\n\t\tlight: null,\n\t\thcDark: contrastBorder,\n\t\thcLight: contrastBorder,\n\t},\n\tnls.localize(\"inputBoxBorder\", \"Input box border.\"),\n);\n\nexport const inputActiveOptionBorder = registerColor(\n\t\"inputOption.activeBorder\",\n\t{\n\t\tdark: \"#007ACC\",\n\t\tlight: \"#007ACC\",\n\t\thcDark: contrastBorder,\n\t\thcLight: contrastBorder,\n\t},\n\tnls.localize(\n\t\t\"inputBoxActiveOptionBorder\",\n\t\t\"Border color of activated options in input fields.\",\n\t),\n);\n\nexport const inputActiveOptionHoverBackground = registerColor(\n\t\"inputOption.hoverBackground\",\n\t{ dark: \"#5a5d5e80\", light: \"#b8b8b850\", hcDark: null, hcLight: null },\n\tnls.localize(\n\t\t\"inputOption.hoverBackground\",\n\t\t\"Background color of activated options in input fields.\",\n\t),\n);\n\nexport const inputActiveOptionBackground = registerColor(\n\t\"inputOption.activeBackground\",\n\t{\n\t\tdark: transparent(focusBorder, 0.4),\n\t\tlight: transparent(focusBorder, 0.2),\n\t\thcDark: Color.transparent,\n\t\thcLight: Color.transparent,\n\t},\n\tnls.localize(\n\t\t\"inputOption.activeBackground\",\n\t\t\"Background hover color of options in input fields.\",\n\t),\n);\n\nexport const inputActiveOptionForeground = registerColor(\n\t\"inputOption.activeForeground\",\n\t{\n\t\tdark: Color.white,\n\t\tlight: Color.black,\n\t\thcDark: foreground,\n\t\thcLight: foreground,\n\t},\n\tnls.localize(\n\t\t\"inputOption.activeForeground\",\n\t\t\"Foreground color of activated options in input fields.\",\n\t),\n);\n\nexport const inputPlaceholderForeground = registerColor(\n\t\"input.placeholderForeground\",\n\t{\n\t\tlight: transparent(foreground, 0.5),\n\t\tdark: transparent(foreground, 0.5),\n\t\thcDark: transparent(foreground, 0.7),\n\t\thcLight: transparent(foreground, 0.7),\n\t},\n\tnls.localize(\n\t\t\"inputPlaceholderForeground\",\n\t\t\"Input box foreground color for placeholder text.\",\n\t),\n);\n\n// ----- input validation\n\nexport const inputValidationInfoBackground = registerColor(\n\t\"inputValidation.infoBackground\",\n\t{\n\t\tdark: \"#063B49\",\n\t\tlight: \"#D6ECF2\",\n\t\thcDark: Color.black,\n\t\thcLight: Color.white,\n\t},\n\tnls.localize(\n\t\t\"inputValidationInfoBackground\",\n\t\t\"Input validation background color for information severity.\",\n\t),\n);\n\nexport const inputValidationInfoForeground = registerColor(\n\t\"inputValidation.infoForeground\",\n\t{ dark: null, light: null, hcDark: null, hcLight: foreground },\n\tnls.localize(\n\t\t\"inputValidationInfoForeground\",\n\t\t\"Input validation foreground color for information severity.\",\n\t),\n);\n\nexport const inputValidationInfoBorder = registerColor(\n\t\"inputValidation.infoBorder\",\n\t{\n\t\tdark: \"#007acc\",\n\t\tlight: \"#007acc\",\n\t\thcDark: contrastBorder,\n\t\thcLight: contrastBorder,\n\t},\n\tnls.localize(\n\t\t\"inputValidationInfoBorder\",\n\t\t\"Input validation border color for information severity.\",\n\t),\n);\n\nexport const inputValidationWarningBackground = registerColor(\n\t\"inputValidation.warningBackground\",\n\t{\n\t\tdark: \"#352A05\",\n\t\tlight: \"#F6F5D2\",\n\t\thcDark: Color.black,\n\t\thcLight: Color.white,\n\t},\n\tnls.localize(\n\t\t\"inputValidationWarningBackground\",\n\t\t\"Input validation background color for warning severity.\",\n\t),\n);\n\nexport const inputValidationWarningForeground = registerColor(\n\t\"inputValidation.warningForeground\",\n\t{ dark: null, light: null, hcDark: null, hcLight: foreground },\n\tnls.localize(\n\t\t\"inputValidationWarningForeground\",\n\t\t\"Input validation foreground color for warning severity.\",\n\t),\n);\n\nexport const inputValidationWarningBorder = registerColor(\n\t\"inputValidation.warningBorder\",\n\t{\n\t\tdark: \"#B89500\",\n\t\tlight: \"#B89500\",\n\t\thcDark: contrastBorder,\n\t\thcLight: contrastBorder,\n\t},\n\tnls.localize(\n\t\t\"inputValidationWarningBorder\",\n\t\t\"Input validation border color for warning severity.\",\n\t),\n);\n\nexport const inputValidationErrorBackground = registerColor(\n\t\"inputValidation.errorBackground\",\n\t{\n\t\tdark: \"#5A1D1D\",\n\t\tlight: \"#F2DEDE\",\n\t\thcDark: Color.black,\n\t\thcLight: Color.white,\n\t},\n\tnls.localize(\n\t\t\"inputValidationErrorBackground\",\n\t\t\"Input validation background color for error severity.\",\n\t),\n);\n\nexport const inputValidationErrorForeground = registerColor(\n\t\"inputValidation.errorForeground\",\n\t{ dark: null, light: null, hcDark: null, hcLight: foreground },\n\tnls.localize(\n\t\t\"inputValidationErrorForeground\",\n\t\t\"Input validation foreground color for error severity.\",\n\t),\n);\n\nexport const inputValidationErrorBorder = registerColor(\n\t\"inputValidation.errorBorder\",\n\t{\n\t\tdark: \"#BE1100\",\n\t\tlight: \"#BE1100\",\n\t\thcDark: contrastBorder,\n\t\thcLight: contrastBorder,\n\t},\n\tnls.localize(\n\t\t\"inputValidationErrorBorder\",\n\t\t\"Input validation border color for error severity.\",\n\t),\n);\n\n// ----- select\n\nexport const selectBackground = registerColor(\n\t\"dropdown.background\",\n\t{\n\t\tdark: \"#3C3C3C\",\n\t\tlight: Color.white,\n\t\thcDark: Color.black,\n\t\thcLight: Color.white,\n\t},\n\tnls.localize(\"dropdownBackground\", \"Dropdown background.\"),\n);\n\nexport const selectListBackground = registerColor(\n\t\"dropdown.listBackground\",\n\t{ dark: null, light: null, hcDark: Color.black, hcLight: Color.white },\n\tnls.localize(\"dropdownListBackground\", \"Dropdown list background.\"),\n);\n\nexport const selectForeground = registerColor(\n\t\"dropdown.foreground\",\n\t{\n\t\tdark: \"#F0F0F0\",\n\t\tlight: foreground,\n\t\thcDark: Color.white,\n\t\thcLight: foreground,\n\t},\n\tnls.localize(\"dropdownForeground\", \"Dropdown foreground.\"),\n);\n\nexport const selectBorder = registerColor(\n\t\"dropdown.border\",\n\t{\n\t\tdark: selectBackground,\n\t\tlight: \"#CECECE\",\n\t\thcDark: contrastBorder,\n\t\thcLight: contrastBorder,\n\t},\n\tnls.localize(\"dropdownBorder\", \"Dropdown border.\"),\n);\n\n// ------ button\n\nexport const buttonForeground = registerColor(\n\t\"button.foreground\",\n\tColor.white,\n\tnls.localize(\"buttonForeground\", \"Button foreground color.\"),\n);\n\nexport const buttonSeparator = registerColor(\n\t\"button.separator\",\n\ttransparent(buttonForeground, 0.4),\n\tnls.localize(\"buttonSeparator\", \"Button separator color.\"),\n);\n\nexport const buttonBackground = registerColor(\n\t\"button.background\",\n\t{ dark: \"#0E639C\", light: \"#007ACC\", hcDark: null, hcLight: \"#0F4A85\" },\n\tnls.localize(\"buttonBackground\", \"Button background color.\"),\n);\n\nexport const buttonHoverBackground = registerColor(\n\t\"button.hoverBackground\",\n\t{\n\t\tdark: lighten(buttonBackground, 0.2),\n\t\tlight: darken(buttonBackground, 0.2),\n\t\thcDark: buttonBackground,\n\t\thcLight: buttonBackground,\n\t},\n\tnls.localize(\n\t\t\"buttonHoverBackground\",\n\t\t\"Button background color when hovering.\",\n\t),\n);\n\nexport const buttonBorder = registerColor(\n\t\"button.border\",\n\tcontrastBorder,\n\tnls.localize(\"buttonBorder\", \"Button border color.\"),\n);\n\nexport const buttonSecondaryForeground = registerColor(\n\t\"button.secondaryForeground\",\n\t{\n\t\tdark: Color.white,\n\t\tlight: Color.white,\n\t\thcDark: Color.white,\n\t\thcLight: foreground,\n\t},\n\tnls.localize(\n\t\t\"buttonSecondaryForeground\",\n\t\t\"Secondary button foreground color.\",\n\t),\n);\n\nexport const buttonSecondaryBackground = registerColor(\n\t\"button.secondaryBackground\",\n\t{ dark: \"#3A3D41\", light: \"#5F6A79\", hcDark: null, hcLight: Color.white },\n\tnls.localize(\n\t\t\"buttonSecondaryBackground\",\n\t\t\"Secondary button background color.\",\n\t),\n);\n\nexport const buttonSecondaryHoverBackground = registerColor(\n\t\"button.secondaryHoverBackground\",\n\t{\n\t\tdark: lighten(buttonSecondaryBackground, 0.2),\n\t\tlight: darken(buttonSecondaryBackground, 0.2),\n\t\thcDark: null,\n\t\thcLight: null,\n\t},\n\tnls.localize(\n\t\t\"buttonSecondaryHoverBackground\",\n\t\t\"Secondary button background color when hovering.\",\n\t),\n);\n\n// ------ radio\n\nexport const radioActiveForeground = registerColor(\n\t\"radio.activeForeground\",\n\tinputActiveOptionForeground,\n\tnls.localize(\n\t\t\"radioActiveForeground\",\n\t\t\"Foreground color of active radio option.\",\n\t),\n);\n\nexport const radioActiveBackground = registerColor(\n\t\"radio.activeBackground\",\n\tinputActiveOptionBackground,\n\tnls.localize(\"radioBackground\", \"Background color of active radio option.\"),\n);\n\nexport const radioActiveBorder = registerColor(\n\t\"radio.activeBorder\",\n\tinputActiveOptionBorder,\n\tnls.localize(\n\t\t\"radioActiveBorder\",\n\t\t\"Border color of the active radio option.\",\n\t),\n);\n\nexport const radioInactiveForeground = registerColor(\n\t\"radio.inactiveForeground\",\n\tnull,\n\tnls.localize(\n\t\t\"radioInactiveForeground\",\n\t\t\"Foreground color of inactive radio option.\",\n\t),\n);\n\nexport const radioInactiveBackground = registerColor(\n\t\"radio.inactiveBackground\",\n\tnull,\n\tnls.localize(\n\t\t\"radioInactiveBackground\",\n\t\t\"Background color of inactive radio option.\",\n\t),\n);\n\nexport const radioInactiveBorder = registerColor(\n\t\"radio.inactiveBorder\",\n\t{\n\t\tlight: transparent(radioActiveForeground, 0.2),\n\t\tdark: transparent(radioActiveForeground, 0.2),\n\t\thcDark: transparent(radioActiveForeground, 0.4),\n\t\thcLight: transparent(radioActiveForeground, 0.2),\n\t},\n\tnls.localize(\n\t\t\"radioInactiveBorder\",\n\t\t\"Border color of the inactive radio option.\",\n\t),\n);\n\nexport const radioInactiveHoverBackground = registerColor(\n\t\"radio.inactiveHoverBackground\",\n\tinputActiveOptionHoverBackground,\n\tnls.localize(\n\t\t\"radioHoverBackground\",\n\t\t\"Background color of inactive active radio option when hovering.\",\n\t),\n);\n\n// ------ checkbox\n\nexport const checkboxBackground = registerColor(\n\t\"checkbox.background\",\n\tselectBackground,\n\tnls.localize(\"checkbox.background\", \"Background color of checkbox widget.\"),\n);\n\nexport const checkboxSelectBackground = registerColor(\n\t\"checkbox.selectBackground\",\n\teditorWidgetBackground,\n\tnls.localize(\n\t\t\"checkbox.select.background\",\n\t\t\"Background color of checkbox widget when the element it's in is selected.\",\n\t),\n);\n\nexport const checkboxForeground = registerColor(\n\t\"checkbox.foreground\",\n\tselectForeground,\n\tnls.localize(\"checkbox.foreground\", \"Foreground color of checkbox widget.\"),\n);\n\nexport const checkboxBorder = registerColor(\n\t\"checkbox.border\",\n\tselectBorder,\n\tnls.localize(\"checkbox.border\", \"Border color of checkbox widget.\"),\n);\n\nexport const checkboxSelectBorder = registerColor(\n\t\"checkbox.selectBorder\",\n\ticonForeground,\n\tnls.localize(\n\t\t\"checkbox.select.border\",\n\t\t\"Border color of checkbox widget when the element it's in is selected.\",\n\t),\n);\n\n// ------ keybinding label\n\nexport const keybindingLabelBackground = registerColor(\n\t\"keybindingLabel.background\",\n\t{\n\t\tdark: new Color(new RGBA(128, 128, 128, 0.17)),\n\t\tlight: new Color(new RGBA(221, 221, 221, 0.4)),\n\t\thcDark: Color.transparent,\n\t\thcLight: Color.transparent,\n\t},\n\tnls.localize(\n\t\t\"keybindingLabelBackground\",\n\t\t\"Keybinding label background color. The keybinding label is used to represent a keyboard shortcut.\",\n\t),\n);\n\nexport const keybindingLabelForeground = registerColor(\n\t\"keybindingLabel.foreground\",\n\t{\n\t\tdark: Color.fromHex(\"#CCCCCC\"),\n\t\tlight: Color.fromHex(\"#555555\"),\n\t\thcDark: Color.white,\n\t\thcLight: foreground,\n\t},\n\tnls.localize(\n\t\t\"keybindingLabelForeground\",\n\t\t\"Keybinding label foreground color. The keybinding label is used to represent a keyboard shortcut.\",\n\t),\n);\n\nexport const keybindingLabelBorder = registerColor(\n\t\"keybindingLabel.border\",\n\t{\n\t\tdark: new Color(new RGBA(51, 51, 51, 0.6)),\n\t\tlight: new Color(new RGBA(204, 204, 204, 0.4)),\n\t\thcDark: new Color(new RGBA(111, 195, 223)),\n\t\thcLight: contrastBorder,\n\t},\n\tnls.localize(\n\t\t\"keybindingLabelBorder\",\n\t\t\"Keybinding label border color. The keybinding label is used to represent a keyboard shortcut.\",\n\t),\n);\n\nexport const keybindingLabelBottomBorder = registerColor(\n\t\"keybindingLabel.bottomBorder\",\n\t{\n\t\tdark: new Color(new RGBA(68, 68, 68, 0.6)),\n\t\tlight: new Color(new RGBA(187, 187, 187, 0.4)),\n\t\thcDark: new Color(new RGBA(111, 195, 223)),\n\t\thcLight: foreground,\n\t},\n\tnls.localize(\n\t\t\"keybindingLabelBottomBorder\",\n\t\t\"Keybinding label border bottom color. The keybinding label is used to represent a keyboard shortcut.\",\n\t),\n);\n"],
  "mappings": "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",
  "names": []
}
