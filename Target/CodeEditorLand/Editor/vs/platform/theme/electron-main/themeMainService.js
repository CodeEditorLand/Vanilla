var p=Object.defineProperty;var E=Object.getOwnPropertyDescriptor;var d=(i,a,t,e)=>{for(var o=e>1?void 0:e?E(a,t):a,h=i.length-1,c;h>=0;h--)(c=i[h])&&(o=(e?c(a,t,o):c(o))||o);return e&&o&&p(a,t,o),o},l=(i,a)=>(t,e)=>a(t,e,i);import r from"electron";import{Emitter as k,Event as _}from"../../../../vs/base/common/event.js";import{Disposable as I}from"../../../../vs/base/common/lifecycle.js";import{isLinux as m,isMacintosh as u,isWindows as b}from"../../../../vs/base/common/platform.js";import{IConfigurationService as w}from"../../../../vs/platform/configuration/common/configuration.js";import{createDecorator as D}from"../../../../vs/platform/instantiation/common/instantiation.js";import{IStateService as B}from"../../../../vs/platform/state/node/state.js";import"../../../../vs/platform/theme/common/themeService.js";import"../../../../vs/platform/window/common/window.js";const H="#FFFFFF",S="#1E1E1E",C="#000000",g="#FFFFFF",v="theme",f="themeBackground",T="windowSplash";var s;(t=>(t.DETECT_COLOR_SCHEME="window.autoDetectColorScheme",t.SYSTEM_COLOR_THEME="window.systemColorTheme"))(s||={});const Y=D("themeMainService");let n=class extends I{constructor(t,e){super();this.stateService=t;this.configurationService=e;m||this._register(this.configurationService.onDidChangeConfiguration(o=>{(o.affectsConfiguration(s.SYSTEM_COLOR_THEME)||o.affectsConfiguration(s.DETECT_COLOR_SCHEME))&&this.updateSystemColorTheme()})),this.updateSystemColorTheme(),this._register(_.fromNodeEventEmitter(r.nativeTheme,"updated")(()=>this._onDidChangeColorScheme.fire(this.getColorScheme())))}_onDidChangeColorScheme=this._register(new k);onDidChangeColorScheme=this._onDidChangeColorScheme.event;updateSystemColorTheme(){if(m||this.configurationService.getValue(s.DETECT_COLOR_SCHEME))r.nativeTheme.themeSource="system";else switch(this.configurationService.getValue(s.SYSTEM_COLOR_THEME)){case"dark":r.nativeTheme.themeSource="dark";break;case"light":r.nativeTheme.themeSource="light";break;case"auto":switch(this.getBaseTheme()){case"vs":r.nativeTheme.themeSource="light";break;case"vs-dark":r.nativeTheme.themeSource="dark";break;default:r.nativeTheme.themeSource="system"}break;default:r.nativeTheme.themeSource="system";break}}getColorScheme(){if(b){if(r.nativeTheme.shouldUseHighContrastColors)return{dark:r.nativeTheme.shouldUseInvertedColorScheme,highContrast:!0}}else if(u){if(r.nativeTheme.shouldUseInvertedColorScheme||r.nativeTheme.shouldUseHighContrastColors)return{dark:r.nativeTheme.shouldUseDarkColors,highContrast:!0}}else if(m&&r.nativeTheme.shouldUseHighContrastColors)return{dark:!0,highContrast:!0};return{dark:r.nativeTheme.shouldUseDarkColors,highContrast:!1}}getBackgroundColor(){const t=this.getColorScheme();if(t.highContrast&&this.configurationService.getValue("window.autoDetectHighContrast"))return t.dark?C:g;let e=this.stateService.getItem(f,null);if(!e)switch(this.getBaseTheme()){case"vs":e=H;break;case"hc-black":e=C;break;case"hc-light":e=g;break;default:e=S}return u&&e.toUpperCase()===S&&(e="#171717"),e}getBaseTheme(){switch(this.stateService.getItem(v,"vs-dark").split(" ")[0]){case"vs":return"vs";case"hc-black":return"hc-black";case"hc-light":return"hc-light";default:return"vs-dark"}}saveWindowSplash(t,e){this.stateService.setItems([{key:v,data:e.baseTheme},{key:f,data:e.colorInfo.background},{key:T,data:e}]),typeof t=="number"&&this.updateBackgroundColor(t,e),this.updateSystemColorTheme()}updateBackgroundColor(t,e){for(const o of r.BrowserWindow.getAllWindows())if(o.id===t){o.setBackgroundColor(e.colorInfo.background);break}}getWindowSplash(){return this.stateService.getItem(T)}};n=d([l(0,B),l(1,w)],n);export{Y as IThemeMainService,n as ThemeMainService};
