{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/markers/common/markerService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isFalsyOrEmpty, isNonEmptyArray } from '../../../base/common/arrays.js';\nimport { DebounceEmitter } from '../../../base/common/event.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { IDisposable } from '../../../base/common/lifecycle.js';\nimport { ResourceMap } from '../../../base/common/map.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { IMarker, IMarkerData, IMarkerService, IResourceMarker, MarkerSeverity, MarkerStatistics } from './markers.js';\n\nexport const unsupportedSchemas = new Set([\n\tSchemas.inMemory,\n\tSchemas.vscodeSourceControl,\n\tSchemas.walkThrough,\n\tSchemas.walkThroughSnippet,\n\tSchemas.vscodeChatCodeBlock,\n]);\n\nclass DoubleResourceMap<V> {\n\n\tprivate _byResource = new ResourceMap<Map<string, V>>();\n\tprivate _byOwner = new Map<string, ResourceMap<V>>();\n\n\tset(resource: URI, owner: string, value: V) {\n\t\tlet ownerMap = this._byResource.get(resource);\n\t\tif (!ownerMap) {\n\t\t\townerMap = new Map();\n\t\t\tthis._byResource.set(resource, ownerMap);\n\t\t}\n\t\townerMap.set(owner, value);\n\n\t\tlet resourceMap = this._byOwner.get(owner);\n\t\tif (!resourceMap) {\n\t\t\tresourceMap = new ResourceMap();\n\t\t\tthis._byOwner.set(owner, resourceMap);\n\t\t}\n\t\tresourceMap.set(resource, value);\n\t}\n\n\tget(resource: URI, owner: string): V | undefined {\n\t\tconst ownerMap = this._byResource.get(resource);\n\t\treturn ownerMap?.get(owner);\n\t}\n\n\tdelete(resource: URI, owner: string): boolean {\n\t\tlet removedA = false;\n\t\tlet removedB = false;\n\t\tconst ownerMap = this._byResource.get(resource);\n\t\tif (ownerMap) {\n\t\t\tremovedA = ownerMap.delete(owner);\n\t\t}\n\t\tconst resourceMap = this._byOwner.get(owner);\n\t\tif (resourceMap) {\n\t\t\tremovedB = resourceMap.delete(resource);\n\t\t}\n\t\tif (removedA !== removedB) {\n\t\t\tthrow new Error('illegal state');\n\t\t}\n\t\treturn removedA && removedB;\n\t}\n\n\tvalues(key?: URI | string): Iterable<V> {\n\t\tif (typeof key === 'string') {\n\t\t\treturn this._byOwner.get(key)?.values() ?? Iterable.empty();\n\t\t}\n\t\tif (URI.isUri(key)) {\n\t\t\treturn this._byResource.get(key)?.values() ?? Iterable.empty();\n\t\t}\n\n\t\treturn Iterable.map(Iterable.concat(...this._byOwner.values()), map => map[1]);\n\t}\n}\n\nclass MarkerStats implements MarkerStatistics {\n\n\terrors: number = 0;\n\tinfos: number = 0;\n\twarnings: number = 0;\n\tunknowns: number = 0;\n\n\tprivate readonly _data = new ResourceMap<MarkerStatistics>();\n\tprivate readonly _service: IMarkerService;\n\tprivate readonly _subscription: IDisposable;\n\n\tconstructor(service: IMarkerService) {\n\t\tthis._service = service;\n\t\tthis._subscription = service.onMarkerChanged(this._update, this);\n\t}\n\n\tdispose(): void {\n\t\tthis._subscription.dispose();\n\t}\n\n\tprivate _update(resources: readonly URI[]): void {\n\t\tfor (const resource of resources) {\n\t\t\tconst oldStats = this._data.get(resource);\n\t\t\tif (oldStats) {\n\t\t\t\tthis._substract(oldStats);\n\t\t\t}\n\t\t\tconst newStats = this._resourceStats(resource);\n\t\t\tthis._add(newStats);\n\t\t\tthis._data.set(resource, newStats);\n\t\t}\n\t}\n\n\tprivate _resourceStats(resource: URI): MarkerStatistics {\n\t\tconst result: MarkerStatistics = { errors: 0, warnings: 0, infos: 0, unknowns: 0 };\n\n\t\t// TODO this is a hack\n\t\tif (unsupportedSchemas.has(resource.scheme)) {\n\t\t\treturn result;\n\t\t}\n\n\t\tfor (const { severity } of this._service.read({ resource })) {\n\t\t\tif (severity === MarkerSeverity.Error) {\n\t\t\t\tresult.errors += 1;\n\t\t\t} else if (severity === MarkerSeverity.Warning) {\n\t\t\t\tresult.warnings += 1;\n\t\t\t} else if (severity === MarkerSeverity.Info) {\n\t\t\t\tresult.infos += 1;\n\t\t\t} else {\n\t\t\t\tresult.unknowns += 1;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate _substract(op: MarkerStatistics) {\n\t\tthis.errors -= op.errors;\n\t\tthis.warnings -= op.warnings;\n\t\tthis.infos -= op.infos;\n\t\tthis.unknowns -= op.unknowns;\n\t}\n\n\tprivate _add(op: MarkerStatistics) {\n\t\tthis.errors += op.errors;\n\t\tthis.warnings += op.warnings;\n\t\tthis.infos += op.infos;\n\t\tthis.unknowns += op.unknowns;\n\t}\n}\n\nexport class MarkerService implements IMarkerService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onMarkerChanged = new DebounceEmitter<readonly URI[]>({\n\t\tdelay: 0,\n\t\tmerge: MarkerService._merge\n\t});\n\n\treadonly onMarkerChanged = this._onMarkerChanged.event;\n\n\tprivate readonly _data = new DoubleResourceMap<IMarker[]>();\n\tprivate readonly _stats = new MarkerStats(this);\n\n\tdispose(): void {\n\t\tthis._stats.dispose();\n\t\tthis._onMarkerChanged.dispose();\n\t}\n\n\tgetStatistics(): MarkerStatistics {\n\t\treturn this._stats;\n\t}\n\n\tremove(owner: string, resources: URI[]): void {\n\t\tfor (const resource of resources || []) {\n\t\t\tthis.changeOne(owner, resource, []);\n\t\t}\n\t}\n\n\tchangeOne(owner: string, resource: URI, markerData: IMarkerData[]): void {\n\n\t\tif (isFalsyOrEmpty(markerData)) {\n\t\t\t// remove marker for this (owner,resource)-tuple\n\t\t\tconst removed = this._data.delete(resource, owner);\n\t\t\tif (removed) {\n\t\t\t\tthis._onMarkerChanged.fire([resource]);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// insert marker for this (owner,resource)-tuple\n\t\t\tconst markers: IMarker[] = [];\n\t\t\tfor (const data of markerData) {\n\t\t\t\tconst marker = MarkerService._toMarker(owner, resource, data);\n\t\t\t\tif (marker) {\n\t\t\t\t\tmarkers.push(marker);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._data.set(resource, owner, markers);\n\t\t\tthis._onMarkerChanged.fire([resource]);\n\t\t}\n\t}\n\n\tprivate static _toMarker(owner: string, resource: URI, data: IMarkerData): IMarker | undefined {\n\t\tlet {\n\t\t\tcode, severity,\n\t\t\tmessage, source,\n\t\t\tstartLineNumber, startColumn, endLineNumber, endColumn,\n\t\t\trelatedInformation,\n\t\t\ttags,\n\t\t} = data;\n\n\t\tif (!message) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// santize data\n\t\tstartLineNumber = startLineNumber > 0 ? startLineNumber : 1;\n\t\tstartColumn = startColumn > 0 ? startColumn : 1;\n\t\tendLineNumber = endLineNumber >= startLineNumber ? endLineNumber : startLineNumber;\n\t\tendColumn = endColumn > 0 ? endColumn : startColumn;\n\n\t\treturn {\n\t\t\tresource,\n\t\t\towner,\n\t\t\tcode,\n\t\t\tseverity,\n\t\t\tmessage,\n\t\t\tsource,\n\t\t\tstartLineNumber,\n\t\t\tstartColumn,\n\t\t\tendLineNumber,\n\t\t\tendColumn,\n\t\t\trelatedInformation,\n\t\t\ttags,\n\t\t};\n\t}\n\n\tchangeAll(owner: string, data: IResourceMarker[]): void {\n\t\tconst changes: URI[] = [];\n\n\t\t// remove old marker\n\t\tconst existing = this._data.values(owner);\n\t\tif (existing) {\n\t\t\tfor (const data of existing) {\n\t\t\t\tconst first = Iterable.first(data);\n\t\t\t\tif (first) {\n\t\t\t\t\tchanges.push(first.resource);\n\t\t\t\t\tthis._data.delete(first.resource, owner);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// add new markers\n\t\tif (isNonEmptyArray(data)) {\n\n\t\t\t// group by resource\n\t\t\tconst groups = new ResourceMap<IMarker[]>();\n\t\t\tfor (const { resource, marker: markerData } of data) {\n\t\t\t\tconst marker = MarkerService._toMarker(owner, resource, markerData);\n\t\t\t\tif (!marker) {\n\t\t\t\t\t// filter bad markers\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst array = groups.get(resource);\n\t\t\t\tif (!array) {\n\t\t\t\t\tgroups.set(resource, [marker]);\n\t\t\t\t\tchanges.push(resource);\n\t\t\t\t} else {\n\t\t\t\t\tarray.push(marker);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// insert all\n\t\t\tfor (const [resource, value] of groups) {\n\t\t\t\tthis._data.set(resource, owner, value);\n\t\t\t}\n\t\t}\n\n\t\tif (changes.length > 0) {\n\t\t\tthis._onMarkerChanged.fire(changes);\n\t\t}\n\t}\n\n\tread(filter: { owner?: string; resource?: URI; severities?: number; take?: number } = Object.create(null)): IMarker[] {\n\n\t\tlet { owner, resource, severities, take } = filter;\n\n\t\tif (!take || take < 0) {\n\t\t\ttake = -1;\n\t\t}\n\n\t\tif (owner && resource) {\n\t\t\t// exactly one owner AND resource\n\t\t\tconst data = this._data.get(resource, owner);\n\t\t\tif (!data) {\n\t\t\t\treturn [];\n\t\t\t} else {\n\t\t\t\tconst result: IMarker[] = [];\n\t\t\t\tfor (const marker of data) {\n\t\t\t\t\tif (MarkerService._accept(marker, severities)) {\n\t\t\t\t\t\tconst newLen = result.push(marker);\n\t\t\t\t\t\tif (take > 0 && newLen === take) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t} else if (!owner && !resource) {\n\t\t\t// all\n\t\t\tconst result: IMarker[] = [];\n\t\t\tfor (const markers of this._data.values()) {\n\t\t\t\tfor (const data of markers) {\n\t\t\t\t\tif (MarkerService._accept(data, severities)) {\n\t\t\t\t\t\tconst newLen = result.push(data);\n\t\t\t\t\t\tif (take > 0 && newLen === take) {\n\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\n\t\t} else {\n\t\t\t// of one resource OR owner\n\t\t\tconst iterable = this._data.values(resource ?? owner!);\n\t\t\tconst result: IMarker[] = [];\n\t\t\tfor (const markers of iterable) {\n\t\t\t\tfor (const data of markers) {\n\t\t\t\t\tif (MarkerService._accept(data, severities)) {\n\t\t\t\t\t\tconst newLen = result.push(data);\n\t\t\t\t\t\tif (take > 0 && newLen === take) {\n\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tprivate static _accept(marker: IMarker, severities?: number): boolean {\n\t\treturn severities === undefined || (severities & marker.severity) === marker.severity;\n\t}\n\n\t// --- event debounce logic\n\n\tprivate static _merge(all: (readonly URI[])[]): URI[] {\n\t\tconst set = new ResourceMap<boolean>();\n\t\tfor (const array of all) {\n\t\t\tfor (const item of array) {\n\t\t\t\tset.set(item, true);\n\t\t\t}\n\t\t}\n\t\treturn Array.from(set.keys());\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,gBAAgB,uBAAuB;AAChD,SAAS,uBAAuB;AAChC,SAAS,gBAAgB;AACzB,SAAS,mBAAmB;AAC5B,SAAS,mBAAmB;AAC5B,SAAS,eAAe;AACxB,SAAS,WAAW;AACpB,SAAS,SAAS,aAAa,gBAAgB,iBAAiB,gBAAgB,wBAAwB;AAEjG,MAAM,qBAAqB,oBAAI,IAAI;AAAA,EACzC,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AACT,CAAC;AAED,MAAM,kBAAqB;AAAA,EAtB3B,OAsB2B;AAAA;AAAA;AAAA,EAElB,cAAc,IAAI,YAA4B;AAAA,EAC9C,WAAW,oBAAI,IAA4B;AAAA,EAEnD,IAAI,UAAe,OAAe,OAAU;AAC3C,QAAI,WAAW,KAAK,YAAY,IAAI,QAAQ;AAC5C,QAAI,CAAC,UAAU;AACd,iBAAW,oBAAI,IAAI;AACnB,WAAK,YAAY,IAAI,UAAU,QAAQ;AAAA,IACxC;AACA,aAAS,IAAI,OAAO,KAAK;AAEzB,QAAI,cAAc,KAAK,SAAS,IAAI,KAAK;AACzC,QAAI,CAAC,aAAa;AACjB,oBAAc,IAAI,YAAY;AAC9B,WAAK,SAAS,IAAI,OAAO,WAAW;AAAA,IACrC;AACA,gBAAY,IAAI,UAAU,KAAK;AAAA,EAChC;AAAA,EAEA,IAAI,UAAe,OAA8B;AAChD,UAAM,WAAW,KAAK,YAAY,IAAI,QAAQ;AAC9C,WAAO,UAAU,IAAI,KAAK;AAAA,EAC3B;AAAA,EAEA,OAAO,UAAe,OAAwB;AAC7C,QAAI,WAAW;AACf,QAAI,WAAW;AACf,UAAM,WAAW,KAAK,YAAY,IAAI,QAAQ;AAC9C,QAAI,UAAU;AACb,iBAAW,SAAS,OAAO,KAAK;AAAA,IACjC;AACA,UAAM,cAAc,KAAK,SAAS,IAAI,KAAK;AAC3C,QAAI,aAAa;AAChB,iBAAW,YAAY,OAAO,QAAQ;AAAA,IACvC;AACA,QAAI,aAAa,UAAU;AAC1B,YAAM,IAAI,MAAM,eAAe;AAAA,IAChC;AACA,WAAO,YAAY;AAAA,EACpB;AAAA,EAEA,OAAO,KAAiC;AACvC,QAAI,OAAO,QAAQ,UAAU;AAC5B,aAAO,KAAK,SAAS,IAAI,GAAG,GAAG,OAAO,KAAK,SAAS,MAAM;AAAA,IAC3D;AACA,QAAI,IAAI,MAAM,GAAG,GAAG;AACnB,aAAO,KAAK,YAAY,IAAI,GAAG,GAAG,OAAO,KAAK,SAAS,MAAM;AAAA,IAC9D;AAEA,WAAO,SAAS,IAAI,SAAS,OAAO,GAAG,KAAK,SAAS,OAAO,CAAC,GAAG,SAAO,IAAI,CAAC,CAAC;AAAA,EAC9E;AACD;AAEA,MAAM,YAAwC;AAAA,EA7E9C,OA6E8C;AAAA;AAAA;AAAA,EAE7C,SAAiB;AAAA,EACjB,QAAgB;AAAA,EAChB,WAAmB;AAAA,EACnB,WAAmB;AAAA,EAEF,QAAQ,IAAI,YAA8B;AAAA,EAC1C;AAAA,EACA;AAAA,EAEjB,YAAY,SAAyB;AACpC,SAAK,WAAW;AAChB,SAAK,gBAAgB,QAAQ,gBAAgB,KAAK,SAAS,IAAI;AAAA,EAChE;AAAA,EAEA,UAAgB;AACf,SAAK,cAAc,QAAQ;AAAA,EAC5B;AAAA,EAEQ,QAAQ,WAAiC;AAChD,eAAW,YAAY,WAAW;AACjC,YAAM,WAAW,KAAK,MAAM,IAAI,QAAQ;AACxC,UAAI,UAAU;AACb,aAAK,WAAW,QAAQ;AAAA,MACzB;AACA,YAAM,WAAW,KAAK,eAAe,QAAQ;AAC7C,WAAK,KAAK,QAAQ;AAClB,WAAK,MAAM,IAAI,UAAU,QAAQ;AAAA,IAClC;AAAA,EACD;AAAA,EAEQ,eAAe,UAAiC;AACvD,UAAM,SAA2B,EAAE,QAAQ,GAAG,UAAU,GAAG,OAAO,GAAG,UAAU,EAAE;AAGjF,QAAI,mBAAmB,IAAI,SAAS,MAAM,GAAG;AAC5C,aAAO;AAAA,IACR;AAEA,eAAW,EAAE,SAAS,KAAK,KAAK,SAAS,KAAK,EAAE,SAAS,CAAC,GAAG;AAC5D,UAAI,aAAa,eAAe,OAAO;AACtC,eAAO,UAAU;AAAA,MAClB,WAAW,aAAa,eAAe,SAAS;AAC/C,eAAO,YAAY;AAAA,MACpB,WAAW,aAAa,eAAe,MAAM;AAC5C,eAAO,SAAS;AAAA,MACjB,OAAO;AACN,eAAO,YAAY;AAAA,MACpB;AAAA,IACD;AAEA,WAAO;AAAA,EACR;AAAA,EAEQ,WAAW,IAAsB;AACxC,SAAK,UAAU,GAAG;AAClB,SAAK,YAAY,GAAG;AACpB,SAAK,SAAS,GAAG;AACjB,SAAK,YAAY,GAAG;AAAA,EACrB;AAAA,EAEQ,KAAK,IAAsB;AAClC,SAAK,UAAU,GAAG;AAClB,SAAK,YAAY,GAAG;AACpB,SAAK,SAAS,GAAG;AACjB,SAAK,YAAY,GAAG;AAAA,EACrB;AACD;AAEO,MAAM,cAAwC;AAAA,EAnJrD,OAmJqD;AAAA;AAAA;AAAA,EAInC,mBAAmB,IAAI,gBAAgC;AAAA,IACvE,OAAO;AAAA,IACP,OAAO,cAAc;AAAA,EACtB,CAAC;AAAA,EAEQ,kBAAkB,KAAK,iBAAiB;AAAA,EAEhC,QAAQ,IAAI,kBAA6B;AAAA,EACzC,SAAS,IAAI,YAAY,IAAI;AAAA,EAE9C,UAAgB;AACf,SAAK,OAAO,QAAQ;AACpB,SAAK,iBAAiB,QAAQ;AAAA,EAC/B;AAAA,EAEA,gBAAkC;AACjC,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,OAAO,OAAe,WAAwB;AAC7C,eAAW,YAAY,aAAa,CAAC,GAAG;AACvC,WAAK,UAAU,OAAO,UAAU,CAAC,CAAC;AAAA,IACnC;AAAA,EACD;AAAA,EAEA,UAAU,OAAe,UAAe,YAAiC;AAExE,QAAI,eAAe,UAAU,GAAG;AAE/B,YAAM,UAAU,KAAK,MAAM,OAAO,UAAU,KAAK;AACjD,UAAI,SAAS;AACZ,aAAK,iBAAiB,KAAK,CAAC,QAAQ,CAAC;AAAA,MACtC;AAAA,IAED,OAAO;AAEN,YAAM,UAAqB,CAAC;AAC5B,iBAAW,QAAQ,YAAY;AAC9B,cAAM,SAAS,cAAc,UAAU,OAAO,UAAU,IAAI;AAC5D,YAAI,QAAQ;AACX,kBAAQ,KAAK,MAAM;AAAA,QACpB;AAAA,MACD;AACA,WAAK,MAAM,IAAI,UAAU,OAAO,OAAO;AACvC,WAAK,iBAAiB,KAAK,CAAC,QAAQ,CAAC;AAAA,IACtC;AAAA,EACD;AAAA,EAEA,OAAe,UAAU,OAAe,UAAe,MAAwC;AAC9F,QAAI;AAAA,MACH;AAAA,MAAM;AAAA,MACN;AAAA,MAAS;AAAA,MACT;AAAA,MAAiB;AAAA,MAAa;AAAA,MAAe;AAAA,MAC7C;AAAA,MACA;AAAA,IACD,IAAI;AAEJ,QAAI,CAAC,SAAS;AACb,aAAO;AAAA,IACR;AAGA,sBAAkB,kBAAkB,IAAI,kBAAkB;AAC1D,kBAAc,cAAc,IAAI,cAAc;AAC9C,oBAAgB,iBAAiB,kBAAkB,gBAAgB;AACnE,gBAAY,YAAY,IAAI,YAAY;AAExC,WAAO;AAAA,MACN;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,EACD;AAAA,EAEA,UAAU,OAAe,MAA+B;AACvD,UAAM,UAAiB,CAAC;AAGxB,UAAM,WAAW,KAAK,MAAM,OAAO,KAAK;AACxC,QAAI,UAAU;AACb,iBAAWA,SAAQ,UAAU;AAC5B,cAAM,QAAQ,SAAS,MAAMA,KAAI;AACjC,YAAI,OAAO;AACV,kBAAQ,KAAK,MAAM,QAAQ;AAC3B,eAAK,MAAM,OAAO,MAAM,UAAU,KAAK;AAAA,QACxC;AAAA,MACD;AAAA,IACD;AAGA,QAAI,gBAAgB,IAAI,GAAG;AAG1B,YAAM,SAAS,IAAI,YAAuB;AAC1C,iBAAW,EAAE,UAAU,QAAQ,WAAW,KAAK,MAAM;AACpD,cAAM,SAAS,cAAc,UAAU,OAAO,UAAU,UAAU;AAClE,YAAI,CAAC,QAAQ;AAEZ;AAAA,QACD;AACA,cAAM,QAAQ,OAAO,IAAI,QAAQ;AACjC,YAAI,CAAC,OAAO;AACX,iBAAO,IAAI,UAAU,CAAC,MAAM,CAAC;AAC7B,kBAAQ,KAAK,QAAQ;AAAA,QACtB,OAAO;AACN,gBAAM,KAAK,MAAM;AAAA,QAClB;AAAA,MACD;AAGA,iBAAW,CAAC,UAAU,KAAK,KAAK,QAAQ;AACvC,aAAK,MAAM,IAAI,UAAU,OAAO,KAAK;AAAA,MACtC;AAAA,IACD;AAEA,QAAI,QAAQ,SAAS,GAAG;AACvB,WAAK,iBAAiB,KAAK,OAAO;AAAA,IACnC;AAAA,EACD;AAAA,EAEA,KAAK,SAAiF,uBAAO,OAAO,IAAI,GAAc;AAErH,QAAI,EAAE,OAAO,UAAU,YAAY,KAAK,IAAI;AAE5C,QAAI,CAAC,QAAQ,OAAO,GAAG;AACtB,aAAO;AAAA,IACR;AAEA,QAAI,SAAS,UAAU;AAEtB,YAAM,OAAO,KAAK,MAAM,IAAI,UAAU,KAAK;AAC3C,UAAI,CAAC,MAAM;AACV,eAAO,CAAC;AAAA,MACT,OAAO;AACN,cAAM,SAAoB,CAAC;AAC3B,mBAAW,UAAU,MAAM;AAC1B,cAAI,cAAc,QAAQ,QAAQ,UAAU,GAAG;AAC9C,kBAAM,SAAS,OAAO,KAAK,MAAM;AACjC,gBAAI,OAAO,KAAK,WAAW,MAAM;AAChC;AAAA,YACD;AAAA,UACD;AAAA,QACD;AACA,eAAO;AAAA,MACR;AAAA,IAED,WAAW,CAAC,SAAS,CAAC,UAAU;AAE/B,YAAM,SAAoB,CAAC;AAC3B,iBAAW,WAAW,KAAK,MAAM,OAAO,GAAG;AAC1C,mBAAW,QAAQ,SAAS;AAC3B,cAAI,cAAc,QAAQ,MAAM,UAAU,GAAG;AAC5C,kBAAM,SAAS,OAAO,KAAK,IAAI;AAC/B,gBAAI,OAAO,KAAK,WAAW,MAAM;AAChC,qBAAO;AAAA,YACR;AAAA,UACD;AAAA,QACD;AAAA,MACD;AACA,aAAO;AAAA,IAER,OAAO;AAEN,YAAM,WAAW,KAAK,MAAM,OAAO,YAAY,KAAM;AACrD,YAAM,SAAoB,CAAC;AAC3B,iBAAW,WAAW,UAAU;AAC/B,mBAAW,QAAQ,SAAS;AAC3B,cAAI,cAAc,QAAQ,MAAM,UAAU,GAAG;AAC5C,kBAAM,SAAS,OAAO,KAAK,IAAI;AAC/B,gBAAI,OAAO,KAAK,WAAW,MAAM;AAChC,qBAAO;AAAA,YACR;AAAA,UACD;AAAA,QACD;AAAA,MACD;AACA,aAAO;AAAA,IACR;AAAA,EACD;AAAA,EAEA,OAAe,QAAQ,QAAiB,YAA8B;AACrE,WAAO,eAAe,WAAc,aAAa,OAAO,cAAc,OAAO;AAAA,EAC9E;AAAA;AAAA,EAIA,OAAe,OAAO,KAAgC;AACrD,UAAM,MAAM,IAAI,YAAqB;AACrC,eAAW,SAAS,KAAK;AACxB,iBAAW,QAAQ,OAAO;AACzB,YAAI,IAAI,MAAM,IAAI;AAAA,MACnB;AAAA,IACD;AACA,WAAO,MAAM,KAAK,IAAI,KAAK,CAAC;AAAA,EAC7B;AACD;",
  "names": ["data"]
}
