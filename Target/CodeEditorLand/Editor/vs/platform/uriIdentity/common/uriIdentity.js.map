{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/uriIdentity/common/uriIdentity.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from '../../../base/common/uri.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { IExtUri } from '../../../base/common/resources.js';\n\n\nexport const IUriIdentityService = createDecorator<IUriIdentityService>('IUriIdentityService');\n\nexport interface IUriIdentityService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Uri extensions that are aware of casing.\n\t */\n\treadonly extUri: IExtUri;\n\n\t/**\n\t * Returns a canonical uri for the given resource. Different uris can point to the same\n\t * resource. That's because of casing or missing normalization, e.g the following uris\n\t * are different but refer to the same document (because windows paths are not case-sensitive)\n\t *\n\t * ```txt\n\t * file:///c:/foo/bar.txt\n\t * file:///c:/FOO/BAR.txt\n\t * ```\n\t *\n\t * This function should be invoked when feeding uris into the system that represent the truth,\n\t * e.g document uris or marker-to-document associations etc. This function should NOT be called\n\t * to pretty print a label nor to sanitize a uri.\n\t *\n\t * Samples:\n\t *\n\t * | in | out | |\n\t * |---|---|---|\n\t * | `file:///foo/bar/../bar` | `file:///foo/bar` | n/a |\n\t * | `file:///foo/bar/../bar#frag` | `file:///foo/bar#frag` | keep fragment |\n\t * | `file:///foo/BAR` | `file:///foo/bar` | assume ignore case |\n\t * | `file:///foo/bar/../BAR?q=2` | `file:///foo/BAR?q=2` | query makes it a different document |\n\t */\n\tasCanonicalUri(uri: URI): URI;\n}\n"],
  "mappings": "AAKA,SAAS,WAAW;AACpB,SAAS,uBAAuB;AAChC,SAAS,eAAe;AAGjB,MAAM,sBAAsB,gBAAqC,qBAAqB;",
  "names": []
}
