{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/uriIdentity/common/uriIdentityService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IUriIdentityService } from './uriIdentity.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { InstantiationType, registerSingleton } from '../../instantiation/common/extensions.js';\nimport { IFileService, FileSystemProviderCapabilities, IFileSystemProviderCapabilitiesChangeEvent, IFileSystemProviderRegistrationEvent } from '../../files/common/files.js';\nimport { ExtUri, IExtUri, normalizePath } from '../../../base/common/resources.js';\nimport { SkipList } from '../../../base/common/skipList.js';\nimport { Event } from '../../../base/common/event.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\n\nclass Entry {\n\tstatic _clock = 0;\n\ttime: number = Entry._clock++;\n\tconstructor(readonly uri: URI) { }\n\ttouch() {\n\t\tthis.time = Entry._clock++;\n\t\treturn this;\n\t}\n}\n\nexport class UriIdentityService implements IUriIdentityService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\treadonly extUri: IExtUri;\n\n\tprivate readonly _dispooables = new DisposableStore();\n\tprivate readonly _canonicalUris: SkipList<URI, Entry>;\n\tprivate readonly _limit = 2 ** 16;\n\n\tconstructor(@IFileService private readonly _fileService: IFileService) {\n\n\t\tconst schemeIgnoresPathCasingCache = new Map<string, boolean>();\n\n\t\t// assume path casing matters unless the file system provider spec'ed the opposite.\n\t\t// for all other cases path casing matters, e.g for\n\t\t// * virtual documents\n\t\t// * in-memory uris\n\t\t// * all kind of \"private\" schemes\n\t\tconst ignorePathCasing = (uri: URI): boolean => {\n\t\t\tlet ignorePathCasing = schemeIgnoresPathCasingCache.get(uri.scheme);\n\t\t\tif (ignorePathCasing === undefined) {\n\t\t\t\t// retrieve once and then case per scheme until a change happens\n\t\t\t\tignorePathCasing = _fileService.hasProvider(uri) && !this._fileService.hasCapability(uri, FileSystemProviderCapabilities.PathCaseSensitive);\n\t\t\t\tschemeIgnoresPathCasingCache.set(uri.scheme, ignorePathCasing);\n\t\t\t}\n\t\t\treturn ignorePathCasing;\n\t\t};\n\t\tthis._dispooables.add(Event.any<IFileSystemProviderCapabilitiesChangeEvent | IFileSystemProviderRegistrationEvent>(\n\t\t\t_fileService.onDidChangeFileSystemProviderRegistrations,\n\t\t\t_fileService.onDidChangeFileSystemProviderCapabilities\n\t\t)(e => {\n\t\t\t// remove from cache\n\t\t\tschemeIgnoresPathCasingCache.delete(e.scheme);\n\t\t}));\n\n\t\tthis.extUri = new ExtUri(ignorePathCasing);\n\t\tthis._canonicalUris = new SkipList((a, b) => this.extUri.compare(a, b, true), this._limit);\n\t}\n\n\tdispose(): void {\n\t\tthis._dispooables.dispose();\n\t\tthis._canonicalUris.clear();\n\t}\n\n\tasCanonicalUri(uri: URI): URI {\n\n\t\t// (1) normalize URI\n\t\tif (this._fileService.hasProvider(uri)) {\n\t\t\turi = normalizePath(uri);\n\t\t}\n\n\t\t// (2) find the uri in its canonical form or use this uri to define it\n\t\tconst item = this._canonicalUris.get(uri);\n\t\tif (item) {\n\t\t\treturn item.touch().uri.with({ fragment: uri.fragment });\n\t\t}\n\n\t\t// this uri is first and defines the canonical form\n\t\tthis._canonicalUris.set(uri, new Entry(uri));\n\t\tthis._checkTrim();\n\n\t\treturn uri;\n\t}\n\n\tprivate _checkTrim(): void {\n\t\tif (this._canonicalUris.size < this._limit) {\n\t\t\treturn;\n\t\t}\n\n\t\t// get all entries, sort by time (MRU) and re-initalize\n\t\t// the uri cache and the entry clock. this is an expensive\n\t\t// operation and should happen rarely\n\t\tconst entries = [...this._canonicalUris.entries()].sort((a, b) => {\n\t\t\tif (a[1].time < b[1].time) {\n\t\t\t\treturn 1;\n\t\t\t} else if (a[1].time > b[1].time) {\n\t\t\t\treturn -1;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t});\n\n\t\tEntry._clock = 0;\n\t\tthis._canonicalUris.clear();\n\t\tconst newSize = this._limit * 0.5;\n\t\tfor (let i = 0; i < newSize; i++) {\n\t\t\tthis._canonicalUris.set(entries[i][0], entries[i][1].touch());\n\t\t}\n\t}\n}\n\nregisterSingleton(IUriIdentityService, UriIdentityService, InstantiationType.Delayed);\n"],
  "mappings": "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",
  "names": ["ignorePathCasing"]
}
