{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/extensions/common/extensionValidator.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isEqualOrParent, joinPath } from '../../../base/common/resources.js';\nimport Severity from '../../../base/common/severity.js';\nimport { URI } from '../../../base/common/uri.js';\nimport * as nls from '../../../nls.js';\nimport * as semver from '../../../base/common/semver/semver.js';\nimport { IExtensionManifest, parseApiProposals } from './extensions.js';\nimport { allApiProposals } from './extensionsApiProposals.js';\n\nexport interface IParsedVersion {\n\thasCaret: boolean;\n\thasGreaterEquals: boolean;\n\tmajorBase: number;\n\tmajorMustEqual: boolean;\n\tminorBase: number;\n\tminorMustEqual: boolean;\n\tpatchBase: number;\n\tpatchMustEqual: boolean;\n\tpreRelease: string | null;\n}\n\nexport interface INormalizedVersion {\n\tmajorBase: number;\n\tmajorMustEqual: boolean;\n\tminorBase: number;\n\tminorMustEqual: boolean;\n\tpatchBase: number;\n\tpatchMustEqual: boolean;\n\tnotBefore: number; /* milliseconds timestamp, or 0 */\n\tisMinimum: boolean;\n}\n\nconst VERSION_REGEXP = /^(\\^|>=)?((\\d+)|x)\\.((\\d+)|x)\\.((\\d+)|x)(\\-.*)?$/;\nconst NOT_BEFORE_REGEXP = /^-(\\d{4})(\\d{2})(\\d{2})$/;\n\nexport function isValidVersionStr(version: string): boolean {\n\tversion = version.trim();\n\treturn (version === '*' || VERSION_REGEXP.test(version));\n}\n\nexport function parseVersion(version: string): IParsedVersion | null {\n\tif (!isValidVersionStr(version)) {\n\t\treturn null;\n\t}\n\n\tversion = version.trim();\n\n\tif (version === '*') {\n\t\treturn {\n\t\t\thasCaret: false,\n\t\t\thasGreaterEquals: false,\n\t\t\tmajorBase: 0,\n\t\t\tmajorMustEqual: false,\n\t\t\tminorBase: 0,\n\t\t\tminorMustEqual: false,\n\t\t\tpatchBase: 0,\n\t\t\tpatchMustEqual: false,\n\t\t\tpreRelease: null\n\t\t};\n\t}\n\n\tconst m = version.match(VERSION_REGEXP);\n\tif (!m) {\n\t\treturn null;\n\t}\n\treturn {\n\t\thasCaret: m[1] === '^',\n\t\thasGreaterEquals: m[1] === '>=',\n\t\tmajorBase: m[2] === 'x' ? 0 : parseInt(m[2], 10),\n\t\tmajorMustEqual: (m[2] === 'x' ? false : true),\n\t\tminorBase: m[4] === 'x' ? 0 : parseInt(m[4], 10),\n\t\tminorMustEqual: (m[4] === 'x' ? false : true),\n\t\tpatchBase: m[6] === 'x' ? 0 : parseInt(m[6], 10),\n\t\tpatchMustEqual: (m[6] === 'x' ? false : true),\n\t\tpreRelease: m[8] || null\n\t};\n}\n\nexport function normalizeVersion(version: IParsedVersion | null): INormalizedVersion | null {\n\tif (!version) {\n\t\treturn null;\n\t}\n\n\tconst majorBase = version.majorBase;\n\tconst majorMustEqual = version.majorMustEqual;\n\tconst minorBase = version.minorBase;\n\tlet minorMustEqual = version.minorMustEqual;\n\tconst patchBase = version.patchBase;\n\tlet patchMustEqual = version.patchMustEqual;\n\n\tif (version.hasCaret) {\n\t\tif (majorBase === 0) {\n\t\t\tpatchMustEqual = false;\n\t\t} else {\n\t\t\tminorMustEqual = false;\n\t\t\tpatchMustEqual = false;\n\t\t}\n\t}\n\n\tlet notBefore = 0;\n\tif (version.preRelease) {\n\t\tconst match = NOT_BEFORE_REGEXP.exec(version.preRelease);\n\t\tif (match) {\n\t\t\tconst [, year, month, day] = match;\n\t\t\tnotBefore = Date.UTC(Number(year), Number(month) - 1, Number(day));\n\t\t}\n\t}\n\n\treturn {\n\t\tmajorBase: majorBase,\n\t\tmajorMustEqual: majorMustEqual,\n\t\tminorBase: minorBase,\n\t\tminorMustEqual: minorMustEqual,\n\t\tpatchBase: patchBase,\n\t\tpatchMustEqual: patchMustEqual,\n\t\tisMinimum: version.hasGreaterEquals,\n\t\tnotBefore,\n\t};\n}\n\nexport function isValidVersion(_inputVersion: string | INormalizedVersion, _inputDate: ProductDate, _desiredVersion: string | INormalizedVersion): boolean {\n\tlet version: INormalizedVersion | null;\n\tif (typeof _inputVersion === 'string') {\n\t\tversion = normalizeVersion(parseVersion(_inputVersion));\n\t} else {\n\t\tversion = _inputVersion;\n\t}\n\n\tlet productTs: number | undefined;\n\tif (_inputDate instanceof Date) {\n\t\tproductTs = _inputDate.getTime();\n\t} else if (typeof _inputDate === 'string') {\n\t\tproductTs = new Date(_inputDate).getTime();\n\t}\n\n\tlet desiredVersion: INormalizedVersion | null;\n\tif (typeof _desiredVersion === 'string') {\n\t\tdesiredVersion = normalizeVersion(parseVersion(_desiredVersion));\n\t} else {\n\t\tdesiredVersion = _desiredVersion;\n\t}\n\n\tif (!version || !desiredVersion) {\n\t\treturn false;\n\t}\n\n\tconst majorBase = version.majorBase;\n\tconst minorBase = version.minorBase;\n\tconst patchBase = version.patchBase;\n\n\tlet desiredMajorBase = desiredVersion.majorBase;\n\tlet desiredMinorBase = desiredVersion.minorBase;\n\tlet desiredPatchBase = desiredVersion.patchBase;\n\tconst desiredNotBefore = desiredVersion.notBefore;\n\n\tlet majorMustEqual = desiredVersion.majorMustEqual;\n\tlet minorMustEqual = desiredVersion.minorMustEqual;\n\tlet patchMustEqual = desiredVersion.patchMustEqual;\n\n\tif (desiredVersion.isMinimum) {\n\t\tif (majorBase > desiredMajorBase) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (majorBase < desiredMajorBase) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (minorBase > desiredMinorBase) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (minorBase < desiredMinorBase) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (productTs && productTs < desiredNotBefore) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn patchBase >= desiredPatchBase;\n\t}\n\n\t// Anything < 1.0.0 is compatible with >= 1.0.0, except exact matches\n\tif (majorBase === 1 && desiredMajorBase === 0 && (!majorMustEqual || !minorMustEqual || !patchMustEqual)) {\n\t\tdesiredMajorBase = 1;\n\t\tdesiredMinorBase = 0;\n\t\tdesiredPatchBase = 0;\n\t\tmajorMustEqual = true;\n\t\tminorMustEqual = false;\n\t\tpatchMustEqual = false;\n\t}\n\n\tif (majorBase < desiredMajorBase) {\n\t\t// smaller major version\n\t\treturn false;\n\t}\n\n\tif (majorBase > desiredMajorBase) {\n\t\t// higher major version\n\t\treturn (!majorMustEqual);\n\t}\n\n\t// at this point, majorBase are equal\n\n\tif (minorBase < desiredMinorBase) {\n\t\t// smaller minor version\n\t\treturn false;\n\t}\n\n\tif (minorBase > desiredMinorBase) {\n\t\t// higher minor version\n\t\treturn (!minorMustEqual);\n\t}\n\n\t// at this point, minorBase are equal\n\n\tif (patchBase < desiredPatchBase) {\n\t\t// smaller patch version\n\t\treturn false;\n\t}\n\n\tif (patchBase > desiredPatchBase) {\n\t\t// higher patch version\n\t\treturn (!patchMustEqual);\n\t}\n\n\t// at this point, patchBase are equal\n\n\tif (productTs && productTs < desiredNotBefore) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\ntype ProductDate = string | Date | undefined;\n\nexport function validateExtensionManifest(productVersion: string, productDate: ProductDate, extensionLocation: URI, extensionManifest: IExtensionManifest, extensionIsBuiltin: boolean, validateApiVersion: boolean): readonly [Severity, string][] {\n\tconst validations: [Severity, string][] = [];\n\tif (typeof extensionManifest.publisher !== 'undefined' && typeof extensionManifest.publisher !== 'string') {\n\t\tvalidations.push([Severity.Error, nls.localize('extensionDescription.publisher', \"property publisher must be of type `string`.\")]);\n\t\treturn validations;\n\t}\n\tif (typeof extensionManifest.name !== 'string') {\n\t\tvalidations.push([Severity.Error, nls.localize('extensionDescription.name', \"property `{0}` is mandatory and must be of type `string`\", 'name')]);\n\t\treturn validations;\n\t}\n\tif (typeof extensionManifest.version !== 'string') {\n\t\tvalidations.push([Severity.Error, nls.localize('extensionDescription.version', \"property `{0}` is mandatory and must be of type `string`\", 'version')]);\n\t\treturn validations;\n\t}\n\tif (!extensionManifest.engines) {\n\t\tvalidations.push([Severity.Error, nls.localize('extensionDescription.engines', \"property `{0}` is mandatory and must be of type `object`\", 'engines')]);\n\t\treturn validations;\n\t}\n\tif (typeof extensionManifest.engines.vscode !== 'string') {\n\t\tvalidations.push([Severity.Error, nls.localize('extensionDescription.engines.vscode', \"property `{0}` is mandatory and must be of type `string`\", 'engines.vscode')]);\n\t\treturn validations;\n\t}\n\tif (typeof extensionManifest.extensionDependencies !== 'undefined') {\n\t\tif (!isStringArray(extensionManifest.extensionDependencies)) {\n\t\t\tvalidations.push([Severity.Error, nls.localize('extensionDescription.extensionDependencies', \"property `{0}` can be omitted or must be of type `string[]`\", 'extensionDependencies')]);\n\t\t\treturn validations;\n\t\t}\n\t}\n\tif (typeof extensionManifest.activationEvents !== 'undefined') {\n\t\tif (!isStringArray(extensionManifest.activationEvents)) {\n\t\t\tvalidations.push([Severity.Error, nls.localize('extensionDescription.activationEvents1', \"property `{0}` can be omitted or must be of type `string[]`\", 'activationEvents')]);\n\t\t\treturn validations;\n\t\t}\n\t\tif (typeof extensionManifest.main === 'undefined' && typeof extensionManifest.browser === 'undefined') {\n\t\t\tvalidations.push([Severity.Error, nls.localize('extensionDescription.activationEvents2', \"property `{0}` should be omitted if the extension doesn't have a `{1}` or `{2}` property.\", 'activationEvents', 'main', 'browser')]);\n\t\t\treturn validations;\n\t\t}\n\t}\n\tif (typeof extensionManifest.extensionKind !== 'undefined') {\n\t\tif (typeof extensionManifest.main === 'undefined') {\n\t\t\tvalidations.push([Severity.Warning, nls.localize('extensionDescription.extensionKind', \"property `{0}` can be defined only if property `main` is also defined.\", 'extensionKind')]);\n\t\t\t// not a failure case\n\t\t}\n\t}\n\tif (typeof extensionManifest.main !== 'undefined') {\n\t\tif (typeof extensionManifest.main !== 'string') {\n\t\t\tvalidations.push([Severity.Error, nls.localize('extensionDescription.main1', \"property `{0}` can be omitted or must be of type `string`\", 'main')]);\n\t\t\treturn validations;\n\t\t} else {\n\t\t\tconst mainLocation = joinPath(extensionLocation, extensionManifest.main);\n\t\t\tif (!isEqualOrParent(mainLocation, extensionLocation)) {\n\t\t\t\tvalidations.push([Severity.Warning, nls.localize('extensionDescription.main2', \"Expected `main` ({0}) to be included inside extension's folder ({1}). This might make the extension non-portable.\", mainLocation.path, extensionLocation.path)]);\n\t\t\t\t// not a failure case\n\t\t\t}\n\t\t}\n\t}\n\tif (typeof extensionManifest.browser !== 'undefined') {\n\t\tif (typeof extensionManifest.browser !== 'string') {\n\t\t\tvalidations.push([Severity.Error, nls.localize('extensionDescription.browser1', \"property `{0}` can be omitted or must be of type `string`\", 'browser')]);\n\t\t\treturn validations;\n\t\t} else {\n\t\t\tconst browserLocation = joinPath(extensionLocation, extensionManifest.browser);\n\t\t\tif (!isEqualOrParent(browserLocation, extensionLocation)) {\n\t\t\t\tvalidations.push([Severity.Warning, nls.localize('extensionDescription.browser2', \"Expected `browser` ({0}) to be included inside extension's folder ({1}). This might make the extension non-portable.\", browserLocation.path, extensionLocation.path)]);\n\t\t\t\t// not a failure case\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!semver.valid(extensionManifest.version)) {\n\t\tvalidations.push([Severity.Error, nls.localize('notSemver', \"Extension version is not semver compatible.\")]);\n\t\treturn validations;\n\t}\n\n\tconst notices: string[] = [];\n\tconst validExtensionVersion = isValidExtensionVersion(productVersion, productDate, extensionManifest, extensionIsBuiltin, notices);\n\tif (!validExtensionVersion) {\n\t\tfor (const notice of notices) {\n\t\t\tvalidations.push([Severity.Error, notice]);\n\t\t}\n\t}\n\n\tif (validateApiVersion && extensionManifest.enabledApiProposals?.length) {\n\t\tconst incompatibleNotices: string[] = [];\n\t\tif (!areApiProposalsCompatible([...extensionManifest.enabledApiProposals], incompatibleNotices)) {\n\t\t\tfor (const notice of incompatibleNotices) {\n\t\t\t\tvalidations.push([Severity.Error, notice]);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn validations;\n}\n\nexport function isValidExtensionVersion(productVersion: string, productDate: ProductDate, extensionManifest: IExtensionManifest, extensionIsBuiltin: boolean, notices: string[]): boolean {\n\n\tif (extensionIsBuiltin || (typeof extensionManifest.main === 'undefined' && typeof extensionManifest.browser === 'undefined')) {\n\t\t// No version check for builtin or declarative extensions\n\t\treturn true;\n\t}\n\n\treturn isVersionValid(productVersion, productDate, extensionManifest.engines.vscode, notices);\n}\n\nexport function isEngineValid(engine: string, version: string, date: ProductDate): boolean {\n\t// TODO@joao: discuss with alex '*' doesn't seem to be a valid engine version\n\treturn engine === '*' || isVersionValid(version, date, engine);\n}\n\nexport function areApiProposalsCompatible(apiProposals: string[]): boolean;\nexport function areApiProposalsCompatible(apiProposals: string[], notices: string[]): boolean;\nexport function areApiProposalsCompatible(apiProposals: string[], productApiProposals: Readonly<{ [proposalName: string]: Readonly<{ proposal: string; version?: number }> }>): boolean;\nexport function areApiProposalsCompatible(apiProposals: string[], arg1?: any): boolean {\n\tif (apiProposals.length === 0) {\n\t\treturn true;\n\t}\n\tconst notices: string[] | undefined = Array.isArray(arg1) ? arg1 : undefined;\n\tconst productApiProposals: Readonly<{ [proposalName: string]: Readonly<{ proposal: string; version?: number }> }> = (notices ? undefined : arg1) ?? allApiProposals;\n\tconst incompatibleNotices: string[] = [];\n\tconst parsedProposals = parseApiProposals(apiProposals);\n\tfor (const { proposalName, version } of parsedProposals) {\n\t\tconst existingProposal = productApiProposals[proposalName];\n\t\tif (!existingProposal) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (!version) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (existingProposal.version !== version) {\n\t\t\tincompatibleNotices.push(nls.localize('apiProposalMismatch', \"This extension is using the API proposal '{0}' that is not compatible with the current version of VS Code.\", proposalName));\n\t\t}\n\t}\n\tnotices?.push(...incompatibleNotices);\n\treturn incompatibleNotices.length === 0;\n\n}\n\nfunction isVersionValid(currentVersion: string, date: ProductDate, requestedVersion: string, notices: string[] = []): boolean {\n\n\tconst desiredVersion = normalizeVersion(parseVersion(requestedVersion));\n\tif (!desiredVersion) {\n\t\tnotices.push(nls.localize('versionSyntax', \"Could not parse `engines.vscode` value {0}. Please use, for example: ^1.22.0, ^1.22.x, etc.\", requestedVersion));\n\t\treturn false;\n\t}\n\n\t// enforce that a breaking API version is specified.\n\t// for 0.X.Y, that means up to 0.X must be specified\n\t// otherwise for Z.X.Y, that means Z must be specified\n\tif (desiredVersion.majorBase === 0) {\n\t\t// force that major and minor must be specific\n\t\tif (!desiredVersion.majorMustEqual || !desiredVersion.minorMustEqual) {\n\t\t\tnotices.push(nls.localize('versionSpecificity1', \"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions before 1.0.0, please define at a minimum the major and minor desired version. E.g. ^0.10.0, 0.10.x, 0.11.0, etc.\", requestedVersion));\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\t// force that major must be specific\n\t\tif (!desiredVersion.majorMustEqual) {\n\t\t\tnotices.push(nls.localize('versionSpecificity2', \"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions after 1.0.0, please define at a minimum the major desired version. E.g. ^1.10.0, 1.10.x, 1.x.x, 2.x.x, etc.\", requestedVersion));\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tif (!isValidVersion(currentVersion, date, desiredVersion)) {\n\t\tnotices.push(nls.localize('versionMismatch', \"Extension is not compatible with Code {0}. Extension requires: {1}.\", currentVersion, requestedVersion));\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\nfunction isStringArray(arr: string[]): boolean {\n\tif (!Array.isArray(arr)) {\n\t\treturn false;\n\t}\n\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\tif (typeof arr[i] !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n"],
  "mappings": "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",
  "names": []
}
