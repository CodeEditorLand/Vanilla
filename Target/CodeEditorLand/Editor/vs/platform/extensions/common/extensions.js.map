{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/extensions/common/extensions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type Severity from \"../../../base/common/severity.js\";\nimport * as strings from \"../../../base/common/strings.js\";\nimport type { URI } from \"../../../base/common/uri.js\";\nimport type { ILocalizedString } from \"../../action/common/action.js\";\nimport type { ExtensionKind } from \"../../environment/common/environment.js\";\nimport { createDecorator } from \"../../instantiation/common/instantiation.js\";\nimport { getRemoteName } from \"../../remote/common/remoteHosts.js\";\n\nexport const USER_MANIFEST_CACHE_FILE = \"extensions.user.cache\";\nexport const BUILTIN_MANIFEST_CACHE_FILE = \"extensions.builtin.cache\";\nexport const UNDEFINED_PUBLISHER = \"undefined_publisher\";\n\nexport interface ICommand {\n\tcommand: string;\n\ttitle: string | ILocalizedString;\n\tcategory?: string | ILocalizedString;\n}\n\nexport interface IDebugger {\n\tlabel?: string;\n\ttype: string;\n\truntime?: string;\n}\n\nexport interface IGrammar {\n\tlanguage?: string;\n}\n\nexport interface IJSONValidation {\n\tfileMatch: string | string[];\n\turl: string;\n}\n\nexport interface IKeyBinding {\n\tcommand: string;\n\tkey: string;\n\twhen?: string;\n\tmac?: string;\n\tlinux?: string;\n\twin?: string;\n}\n\nexport interface ILanguage {\n\tid: string;\n\textensions: string[];\n\taliases: string[];\n}\n\nexport interface IMenu {\n\tcommand: string;\n\talt?: string;\n\twhen?: string;\n\tgroup?: string;\n}\n\nexport interface ISnippet {\n\tlanguage: string;\n}\n\nexport interface ITheme {\n\tlabel: string;\n}\n\nexport interface IViewContainer {\n\tid: string;\n\ttitle: string;\n}\n\nexport interface IView {\n\tid: string;\n\tname: string;\n}\n\nexport interface IColor {\n\tid: string;\n\tdescription: string;\n\tdefaults: { light: string; dark: string; highContrast: string };\n}\n\ninterface IWebviewEditor {\n\treadonly viewType: string;\n\treadonly priority: string;\n\treadonly selector: readonly {\n\t\treadonly filenamePattern?: string;\n\t}[];\n}\n\nexport interface ICodeActionContributionAction {\n\treadonly kind: string;\n\treadonly title: string;\n\treadonly description?: string;\n}\n\nexport interface ICodeActionContribution {\n\treadonly languages: readonly string[];\n\treadonly actions: readonly ICodeActionContributionAction[];\n}\n\nexport interface IAuthenticationContribution {\n\treadonly id: string;\n\treadonly label: string;\n}\n\nexport interface IWalkthroughStep {\n\treadonly id: string;\n\treadonly title: string;\n\treadonly description: string | undefined;\n\treadonly media:\n\t\t| {\n\t\t\t\timage: string | { dark: string; light: string; hc: string };\n\t\t\t\taltText: string;\n\t\t\t\tmarkdown?: never;\n\t\t\t\tsvg?: never;\n\t\t  }\n\t\t| { markdown: string; image?: never; svg?: never }\n\t\t| { svg: string; altText: string; markdown?: never; image?: never };\n\treadonly completionEvents?: string[];\n\t/** @deprecated use `completionEvents: 'onCommand:...'` */\n\treadonly doneOn?: { command: string };\n\treadonly when?: string;\n}\n\nexport interface IWalkthrough {\n\treadonly id: string;\n\treadonly title: string;\n\treadonly icon?: string;\n\treadonly description: string;\n\treadonly steps: IWalkthroughStep[];\n\treadonly featuredFor: string[] | undefined;\n\treadonly when?: string;\n}\n\nexport interface IStartEntry {\n\treadonly title: string;\n\treadonly description: string;\n\treadonly command: string;\n\treadonly when?: string;\n\treadonly category: \"file\" | \"folder\" | \"notebook\";\n}\n\nexport interface INotebookEntry {\n\treadonly type: string;\n\treadonly displayName: string;\n}\n\nexport interface INotebookRendererContribution {\n\treadonly id: string;\n\treadonly displayName: string;\n\treadonly mimeTypes: string[];\n}\n\nexport interface IDebugVisualizationContribution {\n\treadonly id: string;\n\treadonly when: string;\n}\n\nexport interface ITranslation {\n\tid: string;\n\tpath: string;\n}\n\nexport interface ILocalizationContribution {\n\tlanguageId: string;\n\tlanguageName?: string;\n\tlocalizedLanguageName?: string;\n\ttranslations: ITranslation[];\n\tminimalTranslations?: { [key: string]: string };\n}\n\nexport interface IExtensionContributions {\n\tcommands?: ICommand[];\n\tconfiguration?: any;\n\tdebuggers?: IDebugger[];\n\tgrammars?: IGrammar[];\n\tjsonValidation?: IJSONValidation[];\n\tkeybindings?: IKeyBinding[];\n\tlanguages?: ILanguage[];\n\tmenus?: { [context: string]: IMenu[] };\n\tsnippets?: ISnippet[];\n\tthemes?: ITheme[];\n\ticonThemes?: ITheme[];\n\tproductIconThemes?: ITheme[];\n\tviewsContainers?: { [location: string]: IViewContainer[] };\n\tviews?: { [location: string]: IView[] };\n\tcolors?: IColor[];\n\tlocalizations?: ILocalizationContribution[];\n\treadonly customEditors?: readonly IWebviewEditor[];\n\treadonly codeActions?: readonly ICodeActionContribution[];\n\tauthentication?: IAuthenticationContribution[];\n\twalkthroughs?: IWalkthrough[];\n\tstartEntries?: IStartEntry[];\n\treadonly notebooks?: INotebookEntry[];\n\treadonly notebookRenderer?: INotebookRendererContribution[];\n\treadonly debugVisualizers?: IDebugVisualizationContribution[];\n\treadonly chatParticipants?: ReadonlyArray<{ id: string }>;\n}\n\nexport interface IExtensionCapabilities {\n\treadonly virtualWorkspaces?: ExtensionVirtualWorkspaceSupport;\n\treadonly untrustedWorkspaces?: ExtensionUntrustedWorkspaceSupport;\n}\n\nexport const ALL_EXTENSION_KINDS: readonly ExtensionKind[] = [\n\t\"ui\",\n\t\"workspace\",\n\t\"web\",\n];\n\nexport type LimitedWorkspaceSupportType = \"limited\";\nexport type ExtensionUntrustedWorkspaceSupportType =\n\t| boolean\n\t| LimitedWorkspaceSupportType;\nexport type ExtensionUntrustedWorkspaceSupport =\n\t| { supported: true }\n\t| { supported: false; description: string }\n\t| {\n\t\t\tsupported: LimitedWorkspaceSupportType;\n\t\t\tdescription: string;\n\t\t\trestrictedConfigurations?: string[];\n\t  };\n\nexport type ExtensionVirtualWorkspaceSupportType =\n\t| boolean\n\t| LimitedWorkspaceSupportType;\nexport type ExtensionVirtualWorkspaceSupport =\n\t| boolean\n\t| { supported: true }\n\t| { supported: false | LimitedWorkspaceSupportType; description: string };\n\nexport function getWorkspaceSupportTypeMessage(\n\tsupportType:\n\t\t| ExtensionUntrustedWorkspaceSupport\n\t\t| ExtensionVirtualWorkspaceSupport\n\t\t| undefined,\n): string | undefined {\n\tif (typeof supportType === \"object\" && supportType !== null) {\n\t\tif (supportType.supported !== true) {\n\t\t\treturn supportType.description;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nexport interface IExtensionIdentifier {\n\tid: string;\n\tuuid?: string;\n}\n\nexport const EXTENSION_CATEGORIES = [\n\t\"AI\",\n\t\"Azure\",\n\t\"Chat\",\n\t\"Data Science\",\n\t\"Debuggers\",\n\t\"Extension Packs\",\n\t\"Education\",\n\t\"Formatters\",\n\t\"Keymaps\",\n\t\"Language Packs\",\n\t\"Linters\",\n\t\"Machine Learning\",\n\t\"Notebooks\",\n\t\"Programming Languages\",\n\t\"SCM Providers\",\n\t\"Snippets\",\n\t\"Testing\",\n\t\"Themes\",\n\t\"Visualization\",\n\t\"Other\",\n];\n\nexport interface IRelaxedExtensionManifest {\n\tname: string;\n\tdisplayName?: string;\n\tpublisher: string;\n\tversion: string;\n\tengines: { readonly vscode: string };\n\tdescription?: string;\n\tmain?: string;\n\tbrowser?: string;\n\tpreview?: boolean;\n\t// For now this only supports pointing to l10n bundle files\n\t// but it will be used for package.l10n.json files in the future\n\tl10n?: string;\n\ticon?: string;\n\tcategories?: string[];\n\tkeywords?: string[];\n\tactivationEvents?: string[];\n\textensionDependencies?: string[];\n\textensionPack?: string[];\n\textensionKind?: ExtensionKind | ExtensionKind[];\n\tcontributes?: IExtensionContributions;\n\trepository?: { url: string };\n\tbugs?: { url: string };\n\toriginalEnabledApiProposals?: readonly string[];\n\tenabledApiProposals?: readonly string[];\n\tapi?: string;\n\tscripts?: { [key: string]: string };\n\tcapabilities?: IExtensionCapabilities;\n}\n\nexport type IExtensionManifest = Readonly<IRelaxedExtensionManifest>;\n\nexport enum ExtensionType {\n\tSystem = 0,\n\tUser = 1,\n}\n\nexport enum TargetPlatform {\n\tWIN32_X64 = \"win32-x64\",\n\tWIN32_ARM64 = \"win32-arm64\",\n\n\tLINUX_X64 = \"linux-x64\",\n\tLINUX_ARM64 = \"linux-arm64\",\n\tLINUX_ARMHF = \"linux-armhf\",\n\n\tALPINE_X64 = \"alpine-x64\",\n\tALPINE_ARM64 = \"alpine-arm64\",\n\n\tDARWIN_X64 = \"darwin-x64\",\n\tDARWIN_ARM64 = \"darwin-arm64\",\n\n\tWEB = \"web\",\n\n\tUNIVERSAL = \"universal\",\n\tUNKNOWN = \"unknown\",\n\tUNDEFINED = \"undefined\",\n}\n\nexport interface IExtension {\n\treadonly type: ExtensionType;\n\treadonly isBuiltin: boolean;\n\treadonly identifier: IExtensionIdentifier;\n\treadonly manifest: IExtensionManifest;\n\treadonly location: URI;\n\treadonly targetPlatform: TargetPlatform;\n\treadonly publisherDisplayName?: string;\n\treadonly readmeUrl?: URI;\n\treadonly changelogUrl?: URI;\n\treadonly isValid: boolean;\n\treadonly validations: readonly [Severity, string][];\n}\n\n/**\n * **!Do not construct directly!**\n *\n * **!Only static methods because it gets serialized!**\n *\n * This represents the \"canonical\" version for an extension identifier. Extension ids\n * have to be case-insensitive (due to the marketplace), but we must ensure case\n * preservation because the extension API is already public at this time.\n *\n * For example, given an extension with the publisher `\"Hello\"` and the name `\"World\"`,\n * its canonical extension identifier is `\"Hello.World\"`. This extension could be\n * referenced in some other extension's dependencies using the string `\"hello.world\"`.\n *\n * To make matters more complicated, an extension can optionally have an UUID. When two\n * extensions have the same UUID, they are considered equal even if their identifier is different.\n */\nexport class ExtensionIdentifier {\n\tpublic readonly value: string;\n\n\t/**\n\t * Do not use directly. This is public to avoid mangling and thus\n\t * allow compatibility between running from source and a built version.\n\t */\n\treadonly _lower: string;\n\n\tconstructor(value: string) {\n\t\tthis.value = value;\n\t\tthis._lower = value.toLowerCase();\n\t}\n\n\tpublic static equals(\n\t\ta: ExtensionIdentifier | string | null | undefined,\n\t\tb: ExtensionIdentifier | string | null | undefined,\n\t) {\n\t\tif (typeof a === \"undefined\" || a === null) {\n\t\t\treturn typeof b === \"undefined\" || b === null;\n\t\t}\n\t\tif (typeof b === \"undefined\" || b === null) {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof a === \"string\" || typeof b === \"string\") {\n\t\t\t// At least one of the arguments is an extension id in string form,\n\t\t\t// so we have to use the string comparison which ignores case.\n\t\t\tconst aValue = typeof a === \"string\" ? a : a.value;\n\t\t\tconst bValue = typeof b === \"string\" ? b : b.value;\n\t\t\treturn strings.equalsIgnoreCase(aValue, bValue);\n\t\t}\n\n\t\t// Now we know both arguments are ExtensionIdentifier\n\t\treturn a._lower === b._lower;\n\t}\n\n\t/**\n\t * Gives the value by which to index (for equality).\n\t */\n\tpublic static toKey(id: ExtensionIdentifier | string): string {\n\t\tif (typeof id === \"string\") {\n\t\t\treturn id.toLowerCase();\n\t\t}\n\t\treturn id._lower;\n\t}\n}\n\nexport class ExtensionIdentifierSet {\n\tprivate readonly _set = new Set<string>();\n\n\tpublic get size(): number {\n\t\treturn this._set.size;\n\t}\n\n\tconstructor(iterable?: Iterable<ExtensionIdentifier | string>) {\n\t\tif (iterable) {\n\t\t\tfor (const value of iterable) {\n\t\t\t\tthis.add(value);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic add(id: ExtensionIdentifier | string): void {\n\t\tthis._set.add(ExtensionIdentifier.toKey(id));\n\t}\n\n\tpublic delete(extensionId: ExtensionIdentifier): boolean {\n\t\treturn this._set.delete(ExtensionIdentifier.toKey(extensionId));\n\t}\n\n\tpublic has(id: ExtensionIdentifier | string): boolean {\n\t\treturn this._set.has(ExtensionIdentifier.toKey(id));\n\t}\n}\n\nexport class ExtensionIdentifierMap<T> {\n\tprivate readonly _map = new Map<string, T>();\n\n\tpublic clear(): void {\n\t\tthis._map.clear();\n\t}\n\n\tpublic delete(id: ExtensionIdentifier | string): void {\n\t\tthis._map.delete(ExtensionIdentifier.toKey(id));\n\t}\n\n\tpublic get(id: ExtensionIdentifier | string): T | undefined {\n\t\treturn this._map.get(ExtensionIdentifier.toKey(id));\n\t}\n\n\tpublic has(id: ExtensionIdentifier | string): boolean {\n\t\treturn this._map.has(ExtensionIdentifier.toKey(id));\n\t}\n\n\tpublic set(id: ExtensionIdentifier | string, value: T): void {\n\t\tthis._map.set(ExtensionIdentifier.toKey(id), value);\n\t}\n\n\tpublic values(): IterableIterator<T> {\n\t\treturn this._map.values();\n\t}\n\n\tforEach(\n\t\tcallbackfn: (value: T, key: string, map: Map<string, T>) => void,\n\t): void {\n\t\tthis._map.forEach(callbackfn);\n\t}\n\n\t[Symbol.iterator](): IterableIterator<[string, T]> {\n\t\treturn this._map[Symbol.iterator]();\n\t}\n}\n\nexport interface IRelaxedExtensionDescription\n\textends IRelaxedExtensionManifest {\n\tid?: string;\n\tidentifier: ExtensionIdentifier;\n\tuuid?: string;\n\tpublisherDisplayName?: string;\n\ttargetPlatform: TargetPlatform;\n\tisBuiltin: boolean;\n\tisUserBuiltin: boolean;\n\tisUnderDevelopment: boolean;\n\textensionLocation: URI;\n}\n\nexport type IExtensionDescription = Readonly<IRelaxedExtensionDescription>;\n\nexport function isApplicationScopedExtension(\n\tmanifest: IExtensionManifest,\n): boolean {\n\treturn isLanguagePackExtension(manifest);\n}\n\nexport function isLanguagePackExtension(manifest: IExtensionManifest): boolean {\n\treturn manifest.contributes && manifest.contributes.localizations\n\t\t? manifest.contributes.localizations.length > 0\n\t\t: false;\n}\n\nexport function isAuthenticationProviderExtension(\n\tmanifest: IExtensionManifest,\n): boolean {\n\treturn manifest.contributes && manifest.contributes.authentication\n\t\t? manifest.contributes.authentication.length > 0\n\t\t: false;\n}\n\nexport function isResolverExtension(\n\tmanifest: IExtensionManifest,\n\tremoteAuthority: string | undefined,\n): boolean {\n\tif (remoteAuthority) {\n\t\tconst activationEvent = `onResolveRemoteAuthority:${getRemoteName(remoteAuthority)}`;\n\t\treturn !!manifest.activationEvents?.includes(activationEvent);\n\t}\n\treturn false;\n}\n\nexport function parseApiProposals(\n\tenabledApiProposals: string[],\n): { proposalName: string; version?: number }[] {\n\treturn enabledApiProposals.map((proposal) => {\n\t\tconst [proposalName, version] = proposal.split(\"@\");\n\t\treturn {\n\t\t\tproposalName,\n\t\t\tversion: version ? Number.parseInt(version) : undefined,\n\t\t};\n\t});\n}\n\nexport function parseEnabledApiProposalNames(\n\tenabledApiProposals: string[],\n): string[] {\n\treturn enabledApiProposals.map((proposal) => proposal.split(\"@\")[0]);\n}\n\nexport const IBuiltinExtensionsScannerService =\n\tcreateDecorator<IBuiltinExtensionsScannerService>(\n\t\t\"IBuiltinExtensionsScannerService\",\n\t);\nexport interface IBuiltinExtensionsScannerService {\n\treadonly _serviceBrand: undefined;\n\tscanBuiltinExtensions(): Promise<IExtension[]>;\n}\n"],
  "mappings": "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",
  "names": ["ExtensionType", "TargetPlatform"]
}
