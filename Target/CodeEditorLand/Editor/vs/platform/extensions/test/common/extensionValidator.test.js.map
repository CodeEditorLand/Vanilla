{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/extensions/test/common/extensionValidator.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport assert from 'assert';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\nimport { IExtensionManifest } from '../../common/extensions.js';\nimport { areApiProposalsCompatible, INormalizedVersion, IParsedVersion, isValidExtensionVersion, isValidVersion, isValidVersionStr, normalizeVersion, parseVersion } from '../../common/extensionValidator.js';\n\nsuite('Extension Version Validator', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tconst productVersion = '2021-05-11T21:54:30.577Z';\n\n\ttest('isValidVersionStr', () => {\n\t\tassert.strictEqual(isValidVersionStr('0.10.0-dev'), true);\n\t\tassert.strictEqual(isValidVersionStr('0.10.0'), true);\n\t\tassert.strictEqual(isValidVersionStr('0.10.1'), true);\n\t\tassert.strictEqual(isValidVersionStr('0.10.100'), true);\n\t\tassert.strictEqual(isValidVersionStr('0.11.0'), true);\n\n\t\tassert.strictEqual(isValidVersionStr('x.x.x'), true);\n\t\tassert.strictEqual(isValidVersionStr('0.x.x'), true);\n\t\tassert.strictEqual(isValidVersionStr('0.10.0'), true);\n\t\tassert.strictEqual(isValidVersionStr('0.10.x'), true);\n\t\tassert.strictEqual(isValidVersionStr('^0.10.0'), true);\n\t\tassert.strictEqual(isValidVersionStr('*'), true);\n\n\t\tassert.strictEqual(isValidVersionStr('0.x.x.x'), false);\n\t\tassert.strictEqual(isValidVersionStr('0.10'), false);\n\t\tassert.strictEqual(isValidVersionStr('0.10.'), false);\n\t});\n\n\ttest('parseVersion', () => {\n\t\tfunction assertParseVersion(version: string, hasCaret: boolean, hasGreaterEquals: boolean, majorBase: number, majorMustEqual: boolean, minorBase: number, minorMustEqual: boolean, patchBase: number, patchMustEqual: boolean, preRelease: string | null): void {\n\t\t\tconst actual = parseVersion(version);\n\t\t\tconst expected: IParsedVersion = { hasCaret, hasGreaterEquals, majorBase, majorMustEqual, minorBase, minorMustEqual, patchBase, patchMustEqual, preRelease };\n\n\t\t\tassert.deepStrictEqual(actual, expected, 'parseVersion for ' + version);\n\t\t}\n\n\t\tassertParseVersion('0.10.0-dev', false, false, 0, true, 10, true, 0, true, '-dev');\n\t\tassertParseVersion('0.10.0', false, false, 0, true, 10, true, 0, true, null);\n\t\tassertParseVersion('0.10.1', false, false, 0, true, 10, true, 1, true, null);\n\t\tassertParseVersion('0.10.100', false, false, 0, true, 10, true, 100, true, null);\n\t\tassertParseVersion('0.11.0', false, false, 0, true, 11, true, 0, true, null);\n\n\t\tassertParseVersion('x.x.x', false, false, 0, false, 0, false, 0, false, null);\n\t\tassertParseVersion('0.x.x', false, false, 0, true, 0, false, 0, false, null);\n\t\tassertParseVersion('0.10.x', false, false, 0, true, 10, true, 0, false, null);\n\t\tassertParseVersion('^0.10.0', true, false, 0, true, 10, true, 0, true, null);\n\t\tassertParseVersion('^0.10.2', true, false, 0, true, 10, true, 2, true, null);\n\t\tassertParseVersion('^1.10.2', true, false, 1, true, 10, true, 2, true, null);\n\t\tassertParseVersion('*', false, false, 0, false, 0, false, 0, false, null);\n\n\t\tassertParseVersion('>=0.0.1', false, true, 0, true, 0, true, 1, true, null);\n\t\tassertParseVersion('>=2.4.3', false, true, 2, true, 4, true, 3, true, null);\n\t});\n\n\ttest('normalizeVersion', () => {\n\t\tfunction assertNormalizeVersion(version: string, majorBase: number, majorMustEqual: boolean, minorBase: number, minorMustEqual: boolean, patchBase: number, patchMustEqual: boolean, isMinimum: boolean, notBefore = 0): void {\n\t\t\tconst actual = normalizeVersion(parseVersion(version));\n\t\t\tconst expected: INormalizedVersion = { majorBase, majorMustEqual, minorBase, minorMustEqual, patchBase, patchMustEqual, isMinimum, notBefore };\n\t\t\tassert.deepStrictEqual(actual, expected, 'parseVersion for ' + version);\n\t\t}\n\n\t\tassertNormalizeVersion('0.10.0-dev', 0, true, 10, true, 0, true, false, 0);\n\t\tassertNormalizeVersion('0.10.0-222222222', 0, true, 10, true, 0, true, false, 0);\n\t\tassertNormalizeVersion('0.10.0-20210511', 0, true, 10, true, 0, true, false, new Date('2021-05-11T00:00:00Z').getTime());\n\n\t\tassertNormalizeVersion('0.10.0', 0, true, 10, true, 0, true, false);\n\t\tassertNormalizeVersion('0.10.1', 0, true, 10, true, 1, true, false);\n\t\tassertNormalizeVersion('0.10.100', 0, true, 10, true, 100, true, false);\n\t\tassertNormalizeVersion('0.11.0', 0, true, 11, true, 0, true, false);\n\n\t\tassertNormalizeVersion('x.x.x', 0, false, 0, false, 0, false, false);\n\t\tassertNormalizeVersion('0.x.x', 0, true, 0, false, 0, false, false);\n\t\tassertNormalizeVersion('0.10.x', 0, true, 10, true, 0, false, false);\n\t\tassertNormalizeVersion('^0.10.0', 0, true, 10, true, 0, false, false);\n\t\tassertNormalizeVersion('^0.10.2', 0, true, 10, true, 2, false, false);\n\t\tassertNormalizeVersion('^1.10.2', 1, true, 10, false, 2, false, false);\n\t\tassertNormalizeVersion('*', 0, false, 0, false, 0, false, false);\n\n\t\tassertNormalizeVersion('>=0.0.1', 0, true, 0, true, 1, true, true);\n\t\tassertNormalizeVersion('>=2.4.3', 2, true, 4, true, 3, true, true);\n\t\tassertNormalizeVersion('>=2.4.3', 2, true, 4, true, 3, true, true);\n\t});\n\n\ttest('isValidVersion', () => {\n\t\tfunction testIsValidVersion(version: string, desiredVersion: string, expectedResult: boolean): void {\n\t\t\tconst actual = isValidVersion(version, productVersion, desiredVersion);\n\t\t\tassert.strictEqual(actual, expectedResult, 'extension - vscode: ' + version + ', desiredVersion: ' + desiredVersion + ' should be ' + expectedResult);\n\t\t}\n\n\t\ttestIsValidVersion('0.10.0-dev', 'x.x.x', true);\n\t\ttestIsValidVersion('0.10.0-dev', '0.x.x', true);\n\t\ttestIsValidVersion('0.10.0-dev', '0.10.0', true);\n\t\ttestIsValidVersion('0.10.0-dev', '0.10.2', false);\n\t\ttestIsValidVersion('0.10.0-dev', '^0.10.2', false);\n\t\ttestIsValidVersion('0.10.0-dev', '0.10.x', true);\n\t\ttestIsValidVersion('0.10.0-dev', '^0.10.0', true);\n\t\ttestIsValidVersion('0.10.0-dev', '*', true);\n\t\ttestIsValidVersion('0.10.0-dev', '>=0.0.1', true);\n\t\ttestIsValidVersion('0.10.0-dev', '>=0.0.10', true);\n\t\ttestIsValidVersion('0.10.0-dev', '>=0.10.0', true);\n\t\ttestIsValidVersion('0.10.0-dev', '>=0.10.1', false);\n\t\ttestIsValidVersion('0.10.0-dev', '>=1.0.0', false);\n\n\t\ttestIsValidVersion('0.10.0', 'x.x.x', true);\n\t\ttestIsValidVersion('0.10.0', '0.x.x', true);\n\t\ttestIsValidVersion('0.10.0', '0.10.0', true);\n\t\ttestIsValidVersion('0.10.0', '0.10.2', false);\n\t\ttestIsValidVersion('0.10.0', '^0.10.2', false);\n\t\ttestIsValidVersion('0.10.0', '0.10.x', true);\n\t\ttestIsValidVersion('0.10.0', '^0.10.0', true);\n\t\ttestIsValidVersion('0.10.0', '*', true);\n\n\t\ttestIsValidVersion('0.10.1', 'x.x.x', true);\n\t\ttestIsValidVersion('0.10.1', '0.x.x', true);\n\t\ttestIsValidVersion('0.10.1', '0.10.0', false);\n\t\ttestIsValidVersion('0.10.1', '0.10.2', false);\n\t\ttestIsValidVersion('0.10.1', '^0.10.2', false);\n\t\ttestIsValidVersion('0.10.1', '0.10.x', true);\n\t\ttestIsValidVersion('0.10.1', '^0.10.0', true);\n\t\ttestIsValidVersion('0.10.1', '*', true);\n\n\t\ttestIsValidVersion('0.10.100', 'x.x.x', true);\n\t\ttestIsValidVersion('0.10.100', '0.x.x', true);\n\t\ttestIsValidVersion('0.10.100', '0.10.0', false);\n\t\ttestIsValidVersion('0.10.100', '0.10.2', false);\n\t\ttestIsValidVersion('0.10.100', '^0.10.2', true);\n\t\ttestIsValidVersion('0.10.100', '0.10.x', true);\n\t\ttestIsValidVersion('0.10.100', '^0.10.0', true);\n\t\ttestIsValidVersion('0.10.100', '*', true);\n\n\t\ttestIsValidVersion('0.11.0', 'x.x.x', true);\n\t\ttestIsValidVersion('0.11.0', '0.x.x', true);\n\t\ttestIsValidVersion('0.11.0', '0.10.0', false);\n\t\ttestIsValidVersion('0.11.0', '0.10.2', false);\n\t\ttestIsValidVersion('0.11.0', '^0.10.2', false);\n\t\ttestIsValidVersion('0.11.0', '0.10.x', false);\n\t\ttestIsValidVersion('0.11.0', '^0.10.0', false);\n\t\ttestIsValidVersion('0.11.0', '*', true);\n\n\t\t// Anything < 1.0.0 is compatible\n\n\t\ttestIsValidVersion('1.0.0', 'x.x.x', true);\n\t\ttestIsValidVersion('1.0.0', '0.x.x', true);\n\t\ttestIsValidVersion('1.0.0', '0.10.0', false);\n\t\ttestIsValidVersion('1.0.0', '0.10.2', false);\n\t\ttestIsValidVersion('1.0.0', '^0.10.2', true);\n\t\ttestIsValidVersion('1.0.0', '0.10.x', true);\n\t\ttestIsValidVersion('1.0.0', '^0.10.0', true);\n\t\ttestIsValidVersion('1.0.0', '1.0.0', true);\n\t\ttestIsValidVersion('1.0.0', '^1.0.0', true);\n\t\ttestIsValidVersion('1.0.0', '^2.0.0', false);\n\t\ttestIsValidVersion('1.0.0', '*', true);\n\t\ttestIsValidVersion('1.0.0', '>=0.0.1', true);\n\t\ttestIsValidVersion('1.0.0', '>=0.0.10', true);\n\t\ttestIsValidVersion('1.0.0', '>=0.10.0', true);\n\t\ttestIsValidVersion('1.0.0', '>=0.10.1', true);\n\t\ttestIsValidVersion('1.0.0', '>=1.0.0', true);\n\t\ttestIsValidVersion('1.0.0', '>=1.1.0', false);\n\t\ttestIsValidVersion('1.0.0', '>=1.0.1', false);\n\t\ttestIsValidVersion('1.0.0', '>=2.0.0', false);\n\n\t\ttestIsValidVersion('1.0.100', 'x.x.x', true);\n\t\ttestIsValidVersion('1.0.100', '0.x.x', true);\n\t\ttestIsValidVersion('1.0.100', '0.10.0', false);\n\t\ttestIsValidVersion('1.0.100', '0.10.2', false);\n\t\ttestIsValidVersion('1.0.100', '^0.10.2', true);\n\t\ttestIsValidVersion('1.0.100', '0.10.x', true);\n\t\ttestIsValidVersion('1.0.100', '^0.10.0', true);\n\t\ttestIsValidVersion('1.0.100', '1.0.0', false);\n\t\ttestIsValidVersion('1.0.100', '^1.0.0', true);\n\t\ttestIsValidVersion('1.0.100', '^1.0.1', true);\n\t\ttestIsValidVersion('1.0.100', '^2.0.0', false);\n\t\ttestIsValidVersion('1.0.100', '*', true);\n\n\t\ttestIsValidVersion('1.100.0', 'x.x.x', true);\n\t\ttestIsValidVersion('1.100.0', '0.x.x', true);\n\t\ttestIsValidVersion('1.100.0', '0.10.0', false);\n\t\ttestIsValidVersion('1.100.0', '0.10.2', false);\n\t\ttestIsValidVersion('1.100.0', '^0.10.2', true);\n\t\ttestIsValidVersion('1.100.0', '0.10.x', true);\n\t\ttestIsValidVersion('1.100.0', '^0.10.0', true);\n\t\ttestIsValidVersion('1.100.0', '1.0.0', false);\n\t\ttestIsValidVersion('1.100.0', '^1.0.0', true);\n\t\ttestIsValidVersion('1.100.0', '^1.1.0', true);\n\t\ttestIsValidVersion('1.100.0', '^1.100.0', true);\n\t\ttestIsValidVersion('1.100.0', '^2.0.0', false);\n\t\ttestIsValidVersion('1.100.0', '*', true);\n\t\ttestIsValidVersion('1.100.0', '>=1.99.0', true);\n\t\ttestIsValidVersion('1.100.0', '>=1.100.0', true);\n\t\ttestIsValidVersion('1.100.0', '>=1.101.0', false);\n\n\t\ttestIsValidVersion('2.0.0', 'x.x.x', true);\n\t\ttestIsValidVersion('2.0.0', '0.x.x', false);\n\t\ttestIsValidVersion('2.0.0', '0.10.0', false);\n\t\ttestIsValidVersion('2.0.0', '0.10.2', false);\n\t\ttestIsValidVersion('2.0.0', '^0.10.2', false);\n\t\ttestIsValidVersion('2.0.0', '0.10.x', false);\n\t\ttestIsValidVersion('2.0.0', '^0.10.0', false);\n\t\ttestIsValidVersion('2.0.0', '1.0.0', false);\n\t\ttestIsValidVersion('2.0.0', '^1.0.0', false);\n\t\ttestIsValidVersion('2.0.0', '^1.1.0', false);\n\t\ttestIsValidVersion('2.0.0', '^1.100.0', false);\n\t\ttestIsValidVersion('2.0.0', '^2.0.0', true);\n\t\ttestIsValidVersion('2.0.0', '*', true);\n\t});\n\n\ttest('isValidExtensionVersion', () => {\n\n\t\tfunction testExtensionVersion(version: string, desiredVersion: string, isBuiltin: boolean, hasMain: boolean, expectedResult: boolean): void {\n\t\t\tconst manifest: IExtensionManifest = {\n\t\t\t\tname: 'test',\n\t\t\t\tpublisher: 'test',\n\t\t\t\tversion: '0.0.0',\n\t\t\t\tengines: {\n\t\t\t\t\tvscode: desiredVersion\n\t\t\t\t},\n\t\t\t\tmain: hasMain ? 'something' : undefined\n\t\t\t};\n\t\t\tconst reasons: string[] = [];\n\t\t\tconst actual = isValidExtensionVersion(version, productVersion, manifest, isBuiltin, reasons);\n\n\t\t\tassert.strictEqual(actual, expectedResult, 'version: ' + version + ', desiredVersion: ' + desiredVersion + ', desc: ' + JSON.stringify(manifest) + ', reasons: ' + JSON.stringify(reasons));\n\t\t}\n\n\t\tfunction testIsInvalidExtensionVersion(version: string, desiredVersion: string, isBuiltin: boolean, hasMain: boolean): void {\n\t\t\ttestExtensionVersion(version, desiredVersion, isBuiltin, hasMain, false);\n\t\t}\n\n\t\tfunction testIsValidExtensionVersion(version: string, desiredVersion: string, isBuiltin: boolean, hasMain: boolean): void {\n\t\t\ttestExtensionVersion(version, desiredVersion, isBuiltin, hasMain, true);\n\t\t}\n\n\t\tfunction testIsValidVersion(version: string, desiredVersion: string, expectedResult: boolean): void {\n\t\t\ttestExtensionVersion(version, desiredVersion, false, true, expectedResult);\n\t\t}\n\n\t\t// builtin are allowed to use * or x.x.x\n\t\ttestIsValidExtensionVersion('0.10.0-dev', '*', true, true);\n\t\ttestIsValidExtensionVersion('0.10.0-dev', 'x.x.x', true, true);\n\t\ttestIsValidExtensionVersion('0.10.0-dev', '0.x.x', true, true);\n\t\ttestIsValidExtensionVersion('0.10.0-dev', '0.10.x', true, true);\n\t\ttestIsValidExtensionVersion('1.10.0-dev', '1.x.x', true, true);\n\t\ttestIsValidExtensionVersion('1.10.0-dev', '1.10.x', true, true);\n\t\ttestIsValidExtensionVersion('0.10.0-dev', '*', true, false);\n\t\ttestIsValidExtensionVersion('0.10.0-dev', 'x.x.x', true, false);\n\t\ttestIsValidExtensionVersion('0.10.0-dev', '0.x.x', true, false);\n\t\ttestIsValidExtensionVersion('0.10.0-dev', '0.10.x', true, false);\n\t\ttestIsValidExtensionVersion('1.10.0-dev', '1.x.x', true, false);\n\t\ttestIsValidExtensionVersion('1.10.0-dev', '1.10.x', true, false);\n\n\t\t// normal extensions are allowed to use * or x.x.x only if they have no main\n\t\ttestIsInvalidExtensionVersion('0.10.0-dev', '*', false, true);\n\t\ttestIsInvalidExtensionVersion('0.10.0-dev', 'x.x.x', false, true);\n\t\ttestIsInvalidExtensionVersion('0.10.0-dev', '0.x.x', false, true);\n\t\ttestIsValidExtensionVersion('0.10.0-dev', '0.10.x', false, true);\n\t\ttestIsValidExtensionVersion('1.10.0-dev', '1.x.x', false, true);\n\t\ttestIsValidExtensionVersion('1.10.0-dev', '1.10.x', false, true);\n\t\ttestIsValidExtensionVersion('0.10.0-dev', '*', false, false);\n\t\ttestIsValidExtensionVersion('0.10.0-dev', 'x.x.x', false, false);\n\t\ttestIsValidExtensionVersion('0.10.0-dev', '0.x.x', false, false);\n\t\ttestIsValidExtensionVersion('0.10.0-dev', '0.10.x', false, false);\n\t\ttestIsValidExtensionVersion('1.10.0-dev', '1.x.x', false, false);\n\t\ttestIsValidExtensionVersion('1.10.0-dev', '1.10.x', false, false);\n\n\t\t// extensions without \"main\" get no version check\n\t\ttestIsValidExtensionVersion('0.10.0-dev', '>=0.9.1-pre.1', false, false);\n\t\ttestIsValidExtensionVersion('0.10.0-dev', '*', false, false);\n\t\ttestIsValidExtensionVersion('0.10.0-dev', 'x.x.x', false, false);\n\t\ttestIsValidExtensionVersion('0.10.0-dev', '0.x.x', false, false);\n\t\ttestIsValidExtensionVersion('0.10.0-dev', '0.10.x', false, false);\n\t\ttestIsValidExtensionVersion('1.10.0-dev', '1.x.x', false, false);\n\t\ttestIsValidExtensionVersion('1.10.0-dev', '1.10.x', false, false);\n\t\ttestIsValidExtensionVersion('0.10.0-dev', '*', false, false);\n\t\ttestIsValidExtensionVersion('0.10.0-dev', 'x.x.x', false, false);\n\t\ttestIsValidExtensionVersion('0.10.0-dev', '0.x.x', false, false);\n\t\ttestIsValidExtensionVersion('0.10.0-dev', '0.10.x', false, false);\n\t\ttestIsValidExtensionVersion('1.10.0-dev', '1.x.x', false, false);\n\t\ttestIsValidExtensionVersion('1.10.0-dev', '1.10.x', false, false);\n\n\t\t// normal extensions with code\n\t\ttestIsValidVersion('0.10.0-dev', 'x.x.x', false); // fails due to lack of specificity\n\t\ttestIsValidVersion('0.10.0-dev', '0.x.x', false); // fails due to lack of specificity\n\t\ttestIsValidVersion('0.10.0-dev', '0.10.0', true);\n\t\ttestIsValidVersion('0.10.0-dev', '0.10.2', false);\n\t\ttestIsValidVersion('0.10.0-dev', '^0.10.2', false);\n\t\ttestIsValidVersion('0.10.0-dev', '0.10.x', true);\n\t\ttestIsValidVersion('0.10.0-dev', '^0.10.0', true);\n\t\ttestIsValidVersion('0.10.0-dev', '*', false); // fails due to lack of specificity\n\n\t\ttestIsValidVersion('0.10.0', 'x.x.x', false); // fails due to lack of specificity\n\t\ttestIsValidVersion('0.10.0', '0.x.x', false); // fails due to lack of specificity\n\t\ttestIsValidVersion('0.10.0', '0.10.0', true);\n\t\ttestIsValidVersion('0.10.0', '0.10.2', false);\n\t\ttestIsValidVersion('0.10.0', '^0.10.2', false);\n\t\ttestIsValidVersion('0.10.0', '0.10.x', true);\n\t\ttestIsValidVersion('0.10.0', '^0.10.0', true);\n\t\ttestIsValidVersion('0.10.0', '*', false); // fails due to lack of specificity\n\n\t\ttestIsValidVersion('0.10.1', 'x.x.x', false); // fails due to lack of specificity\n\t\ttestIsValidVersion('0.10.1', '0.x.x', false); // fails due to lack of specificity\n\t\ttestIsValidVersion('0.10.1', '0.10.0', false);\n\t\ttestIsValidVersion('0.10.1', '0.10.2', false);\n\t\ttestIsValidVersion('0.10.1', '^0.10.2', false);\n\t\ttestIsValidVersion('0.10.1', '0.10.x', true);\n\t\ttestIsValidVersion('0.10.1', '^0.10.0', true);\n\t\ttestIsValidVersion('0.10.1', '*', false); // fails due to lack of specificity\n\n\t\ttestIsValidVersion('0.10.100', 'x.x.x', false); // fails due to lack of specificity\n\t\ttestIsValidVersion('0.10.100', '0.x.x', false); // fails due to lack of specificity\n\t\ttestIsValidVersion('0.10.100', '0.10.0', false);\n\t\ttestIsValidVersion('0.10.100', '0.10.2', false);\n\t\ttestIsValidVersion('0.10.100', '^0.10.2', true);\n\t\ttestIsValidVersion('0.10.100', '0.10.x', true);\n\t\ttestIsValidVersion('0.10.100', '^0.10.0', true);\n\t\ttestIsValidVersion('0.10.100', '*', false); // fails due to lack of specificity\n\n\t\ttestIsValidVersion('0.11.0', 'x.x.x', false); // fails due to lack of specificity\n\t\ttestIsValidVersion('0.11.0', '0.x.x', false); // fails due to lack of specificity\n\t\ttestIsValidVersion('0.11.0', '0.10.0', false);\n\t\ttestIsValidVersion('0.11.0', '0.10.2', false);\n\t\ttestIsValidVersion('0.11.0', '^0.10.2', false);\n\t\ttestIsValidVersion('0.11.0', '0.10.x', false);\n\t\ttestIsValidVersion('0.11.0', '^0.10.0', false);\n\t\ttestIsValidVersion('0.11.0', '*', false); // fails due to lack of specificity\n\n\t\ttestIsValidVersion('1.0.0', 'x.x.x', false); // fails due to lack of specificity\n\t\ttestIsValidVersion('1.0.0', '0.x.x', false); // fails due to lack of specificity\n\t\ttestIsValidVersion('1.0.0', '0.10.0', false);\n\t\ttestIsValidVersion('1.0.0', '0.10.2', false);\n\t\ttestIsValidVersion('1.0.0', '^0.10.2', true);\n\t\ttestIsValidVersion('1.0.0', '0.10.x', true);\n\t\ttestIsValidVersion('1.0.0', '^0.10.0', true);\n\t\ttestIsValidVersion('1.0.0', '*', false); // fails due to lack of specificity\n\n\t\ttestIsValidVersion('1.10.0', 'x.x.x', false); // fails due to lack of specificity\n\t\ttestIsValidVersion('1.10.0', '1.x.x', true);\n\t\ttestIsValidVersion('1.10.0', '1.10.0', true);\n\t\ttestIsValidVersion('1.10.0', '1.10.2', false);\n\t\ttestIsValidVersion('1.10.0', '^1.10.2', false);\n\t\ttestIsValidVersion('1.10.0', '1.10.x', true);\n\t\ttestIsValidVersion('1.10.0', '^1.10.0', true);\n\t\ttestIsValidVersion('1.10.0', '*', false); // fails due to lack of specificity\n\n\n\t\t// Anything < 1.0.0 is compatible\n\n\t\ttestIsValidVersion('1.0.0', 'x.x.x', false); // fails due to lack of specificity\n\t\ttestIsValidVersion('1.0.0', '0.x.x', false); // fails due to lack of specificity\n\t\ttestIsValidVersion('1.0.0', '0.10.0', false);\n\t\ttestIsValidVersion('1.0.0', '0.10.2', false);\n\t\ttestIsValidVersion('1.0.0', '^0.10.2', true);\n\t\ttestIsValidVersion('1.0.0', '0.10.x', true);\n\t\ttestIsValidVersion('1.0.0', '^0.10.0', true);\n\t\ttestIsValidVersion('1.0.0', '1.0.0', true);\n\t\ttestIsValidVersion('1.0.0', '^1.0.0', true);\n\t\ttestIsValidVersion('1.0.0', '^2.0.0', false);\n\t\ttestIsValidVersion('1.0.0', '*', false); // fails due to lack of specificity\n\n\t\ttestIsValidVersion('1.0.100', 'x.x.x', false); // fails due to lack of specificity\n\t\ttestIsValidVersion('1.0.100', '0.x.x', false); // fails due to lack of specificity\n\t\ttestIsValidVersion('1.0.100', '0.10.0', false);\n\t\ttestIsValidVersion('1.0.100', '0.10.2', false);\n\t\ttestIsValidVersion('1.0.100', '^0.10.2', true);\n\t\ttestIsValidVersion('1.0.100', '0.10.x', true);\n\t\ttestIsValidVersion('1.0.100', '^0.10.0', true);\n\t\ttestIsValidVersion('1.0.100', '1.0.0', false);\n\t\ttestIsValidVersion('1.0.100', '^1.0.0', true);\n\t\ttestIsValidVersion('1.0.100', '^1.0.1', true);\n\t\ttestIsValidVersion('1.0.100', '^2.0.0', false);\n\t\ttestIsValidVersion('1.0.100', '*', false); // fails due to lack of specificity\n\n\t\ttestIsValidVersion('1.100.0', 'x.x.x', false); // fails due to lack of specificity\n\t\ttestIsValidVersion('1.100.0', '0.x.x', false); // fails due to lack of specificity\n\t\ttestIsValidVersion('1.100.0', '0.10.0', false);\n\t\ttestIsValidVersion('1.100.0', '0.10.2', false);\n\t\ttestIsValidVersion('1.100.0', '^0.10.2', true);\n\t\ttestIsValidVersion('1.100.0', '0.10.x', true);\n\t\ttestIsValidVersion('1.100.0', '^0.10.0', true);\n\t\ttestIsValidVersion('1.100.0', '1.0.0', false);\n\t\ttestIsValidVersion('1.100.0', '^1.0.0', true);\n\t\ttestIsValidVersion('1.100.0', '^1.1.0', true);\n\t\ttestIsValidVersion('1.100.0', '^1.100.0', true);\n\t\ttestIsValidVersion('1.100.0', '^2.0.0', false);\n\t\ttestIsValidVersion('1.100.0', '*', false); // fails due to lack of specificity\n\n\t\ttestIsValidVersion('2.0.0', 'x.x.x', false); // fails due to lack of specificity\n\t\ttestIsValidVersion('2.0.0', '0.x.x', false); // fails due to lack of specificity\n\t\ttestIsValidVersion('2.0.0', '0.10.0', false);\n\t\ttestIsValidVersion('2.0.0', '0.10.2', false);\n\t\ttestIsValidVersion('2.0.0', '^0.10.2', false);\n\t\ttestIsValidVersion('2.0.0', '0.10.x', false);\n\t\ttestIsValidVersion('2.0.0', '^0.10.0', false);\n\t\ttestIsValidVersion('2.0.0', '1.0.0', false);\n\t\ttestIsValidVersion('2.0.0', '^1.0.0', false);\n\t\ttestIsValidVersion('2.0.0', '^1.1.0', false);\n\t\ttestIsValidVersion('2.0.0', '^1.100.0', false);\n\t\ttestIsValidVersion('2.0.0', '^2.0.0', true);\n\t\ttestIsValidVersion('2.0.0', '*', false); // fails due to lack of specificity\n\n\t\t// date tags\n\t\ttestIsValidVersion('1.10.0', '^1.10.0-20210511', true); // current date\n\t\ttestIsValidVersion('1.10.0', '^1.10.0-20210510', true); // before date\n\t\ttestIsValidVersion('1.10.0', '^1.10.0-20210512', false); // future date\n\t\ttestIsValidVersion('1.10.1', '^1.10.0-20200101', true); // before date, but ahead version\n\t\ttestIsValidVersion('1.11.0', '^1.10.0-20200101', true);\n\t});\n\n\ttest('isValidExtensionVersion checks browser only extensions', () => {\n\t\tconst manifest = {\n\t\t\tname: 'test',\n\t\t\tpublisher: 'test',\n\t\t\tversion: '0.0.0',\n\t\t\tengines: {\n\t\t\t\tvscode: '^1.45.0'\n\t\t\t},\n\t\t\tbrowser: 'something'\n\t\t};\n\t\tassert.strictEqual(isValidExtensionVersion('1.44.0', undefined, manifest, false, []), false);\n\t});\n\n\ttest('areApiProposalsCompatible', () => {\n\t\tassert.strictEqual(areApiProposalsCompatible([]), true);\n\t\tassert.strictEqual(areApiProposalsCompatible([], ['hello']), true);\n\t\tassert.strictEqual(areApiProposalsCompatible([], {}), true);\n\t\tassert.strictEqual(areApiProposalsCompatible(['proposal1'], {}), true);\n\t\tassert.strictEqual(areApiProposalsCompatible(['proposal1'], { 'proposal1': { proposal: '' } }), true);\n\t\tassert.strictEqual(areApiProposalsCompatible(['proposal1'], { 'proposal1': { proposal: '', version: 1 } }), true);\n\t\tassert.strictEqual(areApiProposalsCompatible(['proposal1@1'], { 'proposal1': { proposal: '', version: 1 } }), true);\n\t\tassert.strictEqual(areApiProposalsCompatible(['proposal1'], { 'proposal2': { proposal: '' } }), true);\n\t\tassert.strictEqual(areApiProposalsCompatible(['proposal1', 'proposal2'], {}), true);\n\t\tassert.strictEqual(areApiProposalsCompatible(['proposal1', 'proposal2'], { 'proposal1': { proposal: '' } }), true);\n\n\t\tassert.strictEqual(areApiProposalsCompatible(['proposal1@1'], { 'proposal1': { proposal: '', version: 2 } }), false);\n\t\tassert.strictEqual(areApiProposalsCompatible(['proposal1@1'], { 'proposal1': { proposal: '' } }), false);\n\t});\n\n});\n"],
  "mappings": "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",
  "names": []
}
