{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/observable/common/platformObservableUtils.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from '../../../base/common/lifecycle.js';\nimport { autorunOpts, IObservable, IReader, observableFromEventOpts } from '../../../base/common/observable.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { ContextKeyValue, IContextKeyService, RawContextKey } from '../../contextkey/common/contextkey.js';\n\n/** Creates an observable update when a configuration key updates. */\nexport function observableConfigValue<T>(key: string, defaultValue: T, configurationService: IConfigurationService): IObservable<T> {\n\treturn observableFromEventOpts({ debugName: () => `Configuration Key \"${key}\"`, },\n\t\t(handleChange) => configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(key)) {\n\t\t\t\thandleChange(e);\n\t\t\t}\n\t\t}),\n\t\t() => configurationService.getValue<T>(key) ?? defaultValue\n\t);\n}\n\n/** Update the configuration key with a value derived from observables. */\nexport function bindContextKey<T extends ContextKeyValue>(key: RawContextKey<T>, service: IContextKeyService, computeValue: (reader: IReader) => T): IDisposable {\n\tconst boundKey = key.bindTo(service);\n\treturn autorunOpts({ debugName: () => `Set Context Key \"${key.key}\"` }, reader => {\n\t\tboundKey.set(computeValue(reader));\n\t});\n}\n\n"],
  "mappings": ";;AAKA,SAAS,mBAAmB;AAC5B,SAAS,aAAa,aAAa,SAAS,+BAA+B;AAC3E,SAAS,6BAA6B;AACtC,SAAS,iBAAiB,oBAAoB,qBAAqB;AAG5D,SAAS,sBAAyB,KAAa,cAAiB,sBAA6D;AACnI,SAAO;AAAA,IAAwB,EAAE,WAAW,6BAAM,sBAAsB,GAAG,KAA/B,aAAoC;AAAA,IAC/E,CAAC,iBAAiB,qBAAqB,yBAAyB,OAAK;AACpE,UAAI,EAAE,qBAAqB,GAAG,GAAG;AAChC,qBAAa,CAAC;AAAA,MACf;AAAA,IACD,CAAC;AAAA,IACD,MAAM,qBAAqB,SAAY,GAAG,KAAK;AAAA,EAChD;AACD;AATgB;AAYT,SAAS,eAA0C,KAAuB,SAA6B,cAAmD;AAChK,QAAM,WAAW,IAAI,OAAO,OAAO;AACnC,SAAO,YAAY,EAAE,WAAW,6BAAM,oBAAoB,IAAI,GAAG,KAAjC,aAAqC,GAAG,YAAU;AACjF,aAAS,IAAI,aAAa,MAAM,CAAC;AAAA,EAClC,CAAC;AACF;AALgB;",
  "names": []
}
