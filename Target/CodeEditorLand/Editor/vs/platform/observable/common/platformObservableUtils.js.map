{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/observable/common/platformObservableUtils.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IDisposable } from \"../../../base/common/lifecycle.js\";\nimport {\n\ttype IObservable,\n\ttype IReader,\n\tautorunOpts,\n\tobservableFromEventOpts,\n} from \"../../../base/common/observable.js\";\nimport type { IConfigurationService } from \"../../configuration/common/configuration.js\";\nimport type {\n\tContextKeyValue,\n\tIContextKeyService,\n\tRawContextKey,\n} from \"../../contextkey/common/contextkey.js\";\n\n/** Creates an observable update when a configuration key updates. */\nexport function observableConfigValue<T>(\n\tkey: string,\n\tdefaultValue: T,\n\tconfigurationService: IConfigurationService,\n): IObservable<T> {\n\treturn observableFromEventOpts(\n\t\t{ debugName: () => `Configuration Key \"${key}\"` },\n\t\t(handleChange) =>\n\t\t\tconfigurationService.onDidChangeConfiguration((e) => {\n\t\t\t\tif (e.affectsConfiguration(key)) {\n\t\t\t\t\thandleChange(e);\n\t\t\t\t}\n\t\t\t}),\n\t\t() => configurationService.getValue<T>(key) ?? defaultValue,\n\t);\n}\n\n/** Update the configuration key with a value derived from observables. */\nexport function bindContextKey<T extends ContextKeyValue>(\n\tkey: RawContextKey<T>,\n\tservice: IContextKeyService,\n\tcomputeValue: (reader: IReader) => T,\n): IDisposable {\n\tconst boundKey = key.bindTo(service);\n\treturn autorunOpts(\n\t\t{ debugName: () => `Set Context Key \"${key.key}\"` },\n\t\t(reader) => {\n\t\t\tboundKey.set(computeValue(reader));\n\t\t},\n\t);\n}\n"],
  "mappings": ";;AAMA;AAAA,EAGC;AAAA,EACA;AAAA,OACM;AASA,SAAS,sBACf,KACA,cACA,sBACiB;AACjB,SAAO;AAAA,IACN,EAAE,WAAW,6BAAM,sBAAsB,GAAG,KAA/B,aAAmC;AAAA,IAChD,CAAC,iBACA,qBAAqB,yBAAyB,CAAC,MAAM;AACpD,UAAI,EAAE,qBAAqB,GAAG,GAAG;AAChC,qBAAa,CAAC;AAAA,MACf;AAAA,IACD,CAAC;AAAA,IACF,MAAM,qBAAqB,SAAY,GAAG,KAAK;AAAA,EAChD;AACD;AAfgB;AAkBT,SAAS,eACf,KACA,SACA,cACc;AACd,QAAM,WAAW,IAAI,OAAO,OAAO;AACnC,SAAO;AAAA,IACN,EAAE,WAAW,6BAAM,oBAAoB,IAAI,GAAG,KAAjC,aAAqC;AAAA,IAClD,CAAC,WAAW;AACX,eAAS,IAAI,aAAa,MAAM,CAAC;AAAA,IAClC;AAAA,EACD;AACD;AAZgB;",
  "names": []
}
