var S=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var l=(n,o,e,r)=>{for(var t=r>1?void 0:r?f(o,e):o,s=n.length-1,c;s>=0;s--)(c=n[s])&&(t=(r?c(o,e,t):c(t))||t);return r&&t&&S(o,e,t),t},i=(n,o)=>(e,r)=>o(e,r,n);import{FileAccess as v,Schemas as m}from"../../../base/common/network.js";import{IConfigurationService as I}from"../../configuration/common/configuration.js";import{IEnvironmentService as d}from"../../environment/common/environment.js";import{IFileService as p}from"../../files/common/files.js";import{InstantiationType as u,registerSingleton as g}from"../../instantiation/common/extensions.js";import{ILogService as h}from"../../log/common/log.js";import{IProductService as y}from"../../product/common/productService.js";import{IStorageService as w}from"../../storage/common/storage.js";import{AbstractExtensionResourceLoaderService as R,IExtensionResourceLoaderService as x}from"../common/extensionResourceLoader.js";let a=class extends R{constructor(e,r,t,s,c,E){super(e,r,t,s,c);this._logService=E}async readExtensionResource(e){if(e=v.uriToBrowserUri(e),e.scheme!==m.http&&e.scheme!==m.https&&e.scheme!==m.data)return(await this._fileService.readFile(e)).value.toString();const r={};this.isExtensionGalleryResource(e)&&(r.headers=await this.getExtensionGalleryRequestHeaders(),r.mode="cors");const t=await fetch(e.toString(!0),r);if(t.status!==200)throw this._logService.info(`Request to '${e.toString(!0)}' failed with status code ${t.status}`),new Error(t.statusText);return t.text()}};a=l([i(0,p),i(1,w),i(2,y),i(3,d),i(4,I),i(5,h)],a),g(x,a,u.Delayed);
