{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/extensionResourceLoader/common/extensionResourceLoaderService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from \"../../../base/common/cancellation.js\";\nimport type { URI } from \"../../../base/common/uri.js\";\nimport { IConfigurationService } from \"../../configuration/common/configuration.js\";\nimport { IEnvironmentService } from \"../../environment/common/environment.js\";\nimport { IFileService } from \"../../files/common/files.js\";\nimport {\n\tInstantiationType,\n\tregisterSingleton,\n} from \"../../instantiation/common/extensions.js\";\nimport { IProductService } from \"../../product/common/productService.js\";\nimport {\n\tIRequestService,\n\tasTextOrError,\n} from \"../../request/common/request.js\";\nimport { IStorageService } from \"../../storage/common/storage.js\";\nimport {\n\tAbstractExtensionResourceLoaderService,\n\tIExtensionResourceLoaderService,\n} from \"./extensionResourceLoader.js\";\n\nexport class ExtensionResourceLoaderService extends AbstractExtensionResourceLoaderService {\n\tconstructor(\n\t\t@IFileService fileService: IFileService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IProductService productService: IProductService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IRequestService private readonly _requestService: IRequestService,\n\t) {\n\t\tsuper(fileService, storageService, productService, environmentService, configurationService);\n\t}\n\n\tasync readExtensionResource(uri: URI): Promise<string> {\n\t\tif (this.isExtensionGalleryResource(uri)) {\n\t\t\tconst headers = await this.getExtensionGalleryRequestHeaders();\n\t\t\tconst requestContext = await this._requestService.request(\n\t\t\t\t{ url: uri.toString(), headers },\n\t\t\t\tCancellationToken.None,\n\t\t\t);\n\t\t\treturn (await asTextOrError(requestContext)) || \"\";\n\t\t}\n\t\tconst result = await this._fileService.readFile(uri);\n\t\treturn result.value.toString();\n\t}\n}\n\nregisterSingleton(\n\tIExtensionResourceLoaderService,\n\tExtensionResourceLoaderService,\n\tInstantiationType.Delayed,\n);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,yBAAyB;AAElC,SAAS,6BAA6B;AACtC,SAAS,2BAA2B;AACpC,SAAS,oBAAoB;AAC7B;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,uBAAuB;AAChC;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,uBAAuB;AAChC;AAAA,EACC;AAAA,EACA;AAAA,OACM;AAEA,IAAM,iCAAN,cAA6C,uCAAuC;AAAA,EAC1F,YACe,aACG,gBACA,gBACI,oBACE,sBACW,iBACjC;AACD,UAAM,aAAa,gBAAgB,gBAAgB,oBAAoB,oBAAoB;AAFzD;AAAA,EAGnC;AAAA,EAnCD,OAyB2F;AAAA;AAAA;AAAA,EAY1F,MAAM,sBAAsB,KAA2B;AACtD,QAAI,KAAK,2BAA2B,GAAG,GAAG;AACzC,YAAM,UAAU,MAAM,KAAK,kCAAkC;AAC7D,YAAM,iBAAiB,MAAM,KAAK,gBAAgB;AAAA,QACjD,EAAE,KAAK,IAAI,SAAS,GAAG,QAAQ;AAAA,QAC/B,kBAAkB;AAAA,MACnB;AACA,aAAQ,MAAM,cAAc,cAAc,KAAM;AAAA,IACjD;AACA,UAAM,SAAS,MAAM,KAAK,aAAa,SAAS,GAAG;AACnD,WAAO,OAAO,MAAM,SAAS;AAAA,EAC9B;AACD;AAxBa,iCAAN;AAAA,EAEJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAPU;AA0Bb;AAAA,EACC;AAAA,EACA;AAAA,EACA,kBAAkB;AACnB;",
  "names": []
}
