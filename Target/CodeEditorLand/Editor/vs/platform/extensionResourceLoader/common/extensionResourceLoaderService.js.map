{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/extensionResourceLoader/common/extensionResourceLoaderService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from '../../../base/common/uri.js';\nimport { InstantiationType, registerSingleton } from '../../instantiation/common/extensions.js';\nimport { IFileService } from '../../files/common/files.js';\nimport { IProductService } from '../../product/common/productService.js';\nimport { asTextOrError, IRequestService } from '../../request/common/request.js';\nimport { IStorageService } from '../../storage/common/storage.js';\nimport { IEnvironmentService } from '../../environment/common/environment.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { AbstractExtensionResourceLoaderService, IExtensionResourceLoaderService } from './extensionResourceLoader.js';\n\nexport class ExtensionResourceLoaderService extends AbstractExtensionResourceLoaderService {\n\n\tconstructor(\n\t\t@IFileService fileService: IFileService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IProductService productService: IProductService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IRequestService private readonly _requestService: IRequestService,\n\t) {\n\t\tsuper(fileService, storageService, productService, environmentService, configurationService);\n\t}\n\n\tasync readExtensionResource(uri: URI): Promise<string> {\n\t\tif (this.isExtensionGalleryResource(uri)) {\n\t\t\tconst headers = await this.getExtensionGalleryRequestHeaders();\n\t\t\tconst requestContext = await this._requestService.request({ url: uri.toString(), headers }, CancellationToken.None);\n\t\t\treturn (await asTextOrError(requestContext)) || '';\n\t\t}\n\t\tconst result = await this._fileService.readFile(uri);\n\t\treturn result.value.toString();\n\t}\n\n}\n\nregisterSingleton(IExtensionResourceLoaderService, ExtensionResourceLoaderService, InstantiationType.Delayed);\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,WAAW;AACpB,SAAS,mBAAmB,yBAAyB;AACrD,SAAS,oBAAoB;AAC7B,SAAS,uBAAuB;AAChC,SAAS,eAAe,uBAAuB;AAC/C,SAAS,uBAAuB;AAChC,SAAS,2BAA2B;AACpC,SAAS,6BAA6B;AACtC,SAAS,yBAAyB;AAClC,SAAS,wCAAwC,uCAAuC;AAEjF,IAAM,iCAAN,cAA6C,uCAAuC;AAAA,EAE1F,YACe,aACG,gBACA,gBACI,oBACE,sBACW,iBACjC;AACD,UAAM,aAAa,gBAAgB,gBAAgB,oBAAoB,oBAAoB;AAFzD;AAAA,EAGnC;AAAA,EA3BD,OAgB2F;AAAA;AAAA;AAAA,EAa1F,MAAM,sBAAsB,KAA2B;AACtD,QAAI,KAAK,2BAA2B,GAAG,GAAG;AACzC,YAAM,UAAU,MAAM,KAAK,kCAAkC;AAC7D,YAAM,iBAAiB,MAAM,KAAK,gBAAgB,QAAQ,EAAE,KAAK,IAAI,SAAS,GAAG,QAAQ,GAAG,kBAAkB,IAAI;AAClH,aAAQ,MAAM,cAAc,cAAc,KAAM;AAAA,IACjD;AACA,UAAM,SAAS,MAAM,KAAK,aAAa,SAAS,GAAG;AACnD,WAAO,OAAO,MAAM,SAAS;AAAA,EAC9B;AAED;AAvBa,iCAAN;AAAA,EAGJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GARU;AAyBb,kBAAkB,iCAAiC,gCAAgC,kBAAkB,OAAO;",
  "names": []
}
