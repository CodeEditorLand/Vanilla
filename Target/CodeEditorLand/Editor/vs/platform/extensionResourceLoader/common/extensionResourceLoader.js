import{RemoteAuthorities as a}from"../../../base/common/network.js";import{isWeb as u}from"../../../base/common/platform.js";import{format2 as d}from"../../../base/common/strings.js";import{URI as c}from"../../../base/common/uri.js";import"../../configuration/common/configuration.js";import"../../environment/common/environment.js";import{TargetPlatform as s}from"../../extensions/common/extensions.js";import{getServiceMachineId as m}from"../../externalServices/common/serviceMachineId.js";import"../../files/common/files.js";import{createDecorator as p}from"../../instantiation/common/instantiation.js";import"../../product/common/productService.js";import"../../storage/common/storage.js";import{TelemetryLevel as h}from"../../telemetry/common/telemetry.js";import{getTelemetryLevel as v,supportsTelemetry as f}from"../../telemetry/common/telemetryUtils.js";const y="/web-extension-resource/",w=p("extensionResourceLoaderService");function O(n,e){if(n.query!==`target=${e}`)return;const r=n.path.split("/");if(r[3])return r[3]=`${r[3]}+${e}`,n.with({query:null,path:r.join("/")})}class X{constructor(e,r,i,t,l){this._fileService=e;this._storageService=r;this._productService=i;this._environmentService=t;this._configurationService=l;i.extensionsGallery&&(this._extensionGalleryResourceUrlTemplate=i.extensionsGallery.resourceUrlTemplate,this._extensionGalleryAuthority=this._extensionGalleryResourceUrlTemplate?this._getExtensionGalleryAuthority(c.parse(this._extensionGalleryResourceUrlTemplate)):void 0)}_serviceBrand;_extensionGalleryResourceUrlTemplate;_extensionGalleryAuthority;get supportsExtensionGalleryResources(){return this._extensionGalleryResourceUrlTemplate!==void 0}getExtensionGalleryResourceURL({publisher:e,name:r,version:i,targetPlatform:t},l){if(this._extensionGalleryResourceUrlTemplate){const o=c.parse(d(this._extensionGalleryResourceUrlTemplate,{publisher:e,name:r,version:t!==void 0&&t!==s.UNDEFINED&&t!==s.UNKNOWN&&t!==s.UNIVERSAL?`${i}+${t}`:i,path:"extension"}));return this._isWebExtensionResourceEndPoint(o)?o.with({scheme:a.getPreferredWebSchema()}):o}}isExtensionGalleryResource(e){return!!this._extensionGalleryAuthority&&this._extensionGalleryAuthority===this._getExtensionGalleryAuthority(e)}async getExtensionGalleryRequestHeaders(){const e={"X-Client-Name":`${this._productService.applicationName}${u?"-web":""}`,"X-Client-Version":this._productService.version};return f(this._productService,this._environmentService)&&v(this._configurationService)===h.USAGE&&(e["X-Machine-Id"]=await this._getServiceMachineId()),this._productService.commit&&(e["X-Client-Commit"]=this._productService.commit),e}_serviceMachineIdPromise;_getServiceMachineId(){return this._serviceMachineIdPromise||(this._serviceMachineIdPromise=m(this._environmentService,this._fileService,this._storageService)),this._serviceMachineIdPromise}_getExtensionGalleryAuthority(e){if(this._isWebExtensionResourceEndPoint(e))return e.authority;const r=e.authority.indexOf(".");return r!==-1?e.authority.substring(r+1):void 0}_isWebExtensionResourceEndPoint(e){const r=e.path,i=a.getServerRootPath();return r.startsWith(i)&&r.startsWith(y,i.length)}}export{X as AbstractExtensionResourceLoaderService,w as IExtensionResourceLoaderService,O as migratePlatformSpecificExtensionGalleryResourceURL};
