{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/extensionResourceLoader/common/extensionResourceLoader.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWeb } from '../../../base/common/platform.js';\nimport { format2 } from '../../../base/common/strings.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { IEnvironmentService } from '../../environment/common/environment.js';\nimport { IFileService } from '../../files/common/files.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { IProductService } from '../../product/common/productService.js';\nimport { getServiceMachineId } from '../../externalServices/common/serviceMachineId.js';\nimport { IStorageService } from '../../storage/common/storage.js';\nimport { TelemetryLevel } from '../../telemetry/common/telemetry.js';\nimport { getTelemetryLevel, supportsTelemetry } from '../../telemetry/common/telemetryUtils.js';\nimport { RemoteAuthorities } from '../../../base/common/network.js';\nimport { TargetPlatform } from '../../extensions/common/extensions.js';\n\nconst WEB_EXTENSION_RESOURCE_END_POINT_SEGMENT = '/web-extension-resource/';\n\nexport const IExtensionResourceLoaderService = createDecorator<IExtensionResourceLoaderService>('extensionResourceLoaderService');\n\n/**\n * A service useful for reading resources from within extensions.\n */\nexport interface IExtensionResourceLoaderService {\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Read a certain resource within an extension.\n\t */\n\treadExtensionResource(uri: URI): Promise<string>;\n\n\t/**\n\t * Returns whether the gallery provides extension resources.\n\t */\n\treadonly supportsExtensionGalleryResources: boolean;\n\n\t/**\n\t * Return true if the given URI is a extension gallery resource.\n\t */\n\tisExtensionGalleryResource(uri: URI): boolean;\n\n\t/**\n\t * Computes the URL of a extension gallery resource. Returns `undefined` if gallery does not provide extension resources.\n\t */\n\tgetExtensionGalleryResourceURL(galleryExtension: { publisher: string; name: string; version: string; targetPlatform?: TargetPlatform }, path?: string): URI | undefined;\n}\n\nexport function migratePlatformSpecificExtensionGalleryResourceURL(resource: URI, targetPlatform: TargetPlatform): URI | undefined {\n\tif (resource.query !== `target=${targetPlatform}`) {\n\t\treturn undefined;\n\t}\n\tconst paths = resource.path.split('/');\n\tif (!paths[3]) {\n\t\treturn undefined;\n\t}\n\tpaths[3] = `${paths[3]}+${targetPlatform}`;\n\treturn resource.with({ query: null, path: paths.join('/') });\n}\n\nexport abstract class AbstractExtensionResourceLoaderService implements IExtensionResourceLoaderService {\n\n\treadonly _serviceBrand: undefined;\n\n\tprivate readonly _extensionGalleryResourceUrlTemplate: string | undefined;\n\tprivate readonly _extensionGalleryAuthority: string | undefined;\n\n\tconstructor(\n\t\tprotected readonly _fileService: IFileService,\n\t\tprivate readonly _storageService: IStorageService,\n\t\tprivate readonly _productService: IProductService,\n\t\tprivate readonly _environmentService: IEnvironmentService,\n\t\tprivate readonly _configurationService: IConfigurationService,\n\t) {\n\t\tif (_productService.extensionsGallery) {\n\t\t\tthis._extensionGalleryResourceUrlTemplate = _productService.extensionsGallery.resourceUrlTemplate;\n\t\t\tthis._extensionGalleryAuthority = this._extensionGalleryResourceUrlTemplate ? this._getExtensionGalleryAuthority(URI.parse(this._extensionGalleryResourceUrlTemplate)) : undefined;\n\t\t}\n\t}\n\n\tpublic get supportsExtensionGalleryResources(): boolean {\n\t\treturn this._extensionGalleryResourceUrlTemplate !== undefined;\n\t}\n\n\tpublic getExtensionGalleryResourceURL({ publisher, name, version, targetPlatform }: { publisher: string; name: string; version: string; targetPlatform?: TargetPlatform }, path?: string): URI | undefined {\n\t\tif (this._extensionGalleryResourceUrlTemplate) {\n\t\t\tconst uri = URI.parse(format2(this._extensionGalleryResourceUrlTemplate, {\n\t\t\t\tpublisher,\n\t\t\t\tname,\n\t\t\t\tversion: targetPlatform !== undefined\n\t\t\t\t\t&& targetPlatform !== TargetPlatform.UNDEFINED\n\t\t\t\t\t&& targetPlatform !== TargetPlatform.UNKNOWN\n\t\t\t\t\t&& targetPlatform !== TargetPlatform.UNIVERSAL\n\t\t\t\t\t? `${version}+${targetPlatform}`\n\t\t\t\t\t: version,\n\t\t\t\tpath: 'extension'\n\t\t\t}));\n\t\t\treturn this._isWebExtensionResourceEndPoint(uri) ? uri.with({ scheme: RemoteAuthorities.getPreferredWebSchema() }) : uri;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tpublic abstract readExtensionResource(uri: URI): Promise<string>;\n\n\tisExtensionGalleryResource(uri: URI): boolean {\n\t\treturn !!this._extensionGalleryAuthority && this._extensionGalleryAuthority === this._getExtensionGalleryAuthority(uri);\n\t}\n\n\tprotected async getExtensionGalleryRequestHeaders(): Promise<Record<string, string>> {\n\t\tconst headers: Record<string, string> = {\n\t\t\t'X-Client-Name': `${this._productService.applicationName}${isWeb ? '-web' : ''}`,\n\t\t\t'X-Client-Version': this._productService.version\n\t\t};\n\t\tif (supportsTelemetry(this._productService, this._environmentService) && getTelemetryLevel(this._configurationService) === TelemetryLevel.USAGE) {\n\t\t\theaders['X-Machine-Id'] = await this._getServiceMachineId();\n\t\t}\n\t\tif (this._productService.commit) {\n\t\t\theaders['X-Client-Commit'] = this._productService.commit;\n\t\t}\n\t\treturn headers;\n\t}\n\n\tprivate _serviceMachineIdPromise: Promise<string> | undefined;\n\tprivate _getServiceMachineId(): Promise<string> {\n\t\tif (!this._serviceMachineIdPromise) {\n\t\t\tthis._serviceMachineIdPromise = getServiceMachineId(this._environmentService, this._fileService, this._storageService);\n\t\t}\n\t\treturn this._serviceMachineIdPromise;\n\t}\n\n\tprivate _getExtensionGalleryAuthority(uri: URI): string | undefined {\n\t\tif (this._isWebExtensionResourceEndPoint(uri)) {\n\t\t\treturn uri.authority;\n\t\t}\n\t\tconst index = uri.authority.indexOf('.');\n\t\treturn index !== -1 ? uri.authority.substring(index + 1) : undefined;\n\t}\n\n\tprotected _isWebExtensionResourceEndPoint(uri: URI): boolean {\n\t\tconst uriPath = uri.path, serverRootPath = RemoteAuthorities.getServerRootPath();\n\t\t// test if the path starts with the server root path followed by the web extension resource end point segment\n\t\treturn uriPath.startsWith(serverRootPath) && uriPath.startsWith(WEB_EXTENSION_RESOURCE_END_POINT_SEGMENT, serverRootPath.length);\n\t}\n\n}\n"],
  "mappings": "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",
  "names": []
}
