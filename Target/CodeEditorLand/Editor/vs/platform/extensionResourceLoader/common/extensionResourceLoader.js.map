{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/extensionResourceLoader/common/extensionResourceLoader.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RemoteAuthorities } from \"../../../base/common/network.js\";\nimport { isWeb } from \"../../../base/common/platform.js\";\nimport { format2 } from \"../../../base/common/strings.js\";\nimport { URI } from \"../../../base/common/uri.js\";\nimport type { IConfigurationService } from \"../../configuration/common/configuration.js\";\nimport type { IEnvironmentService } from \"../../environment/common/environment.js\";\nimport { TargetPlatform } from \"../../extensions/common/extensions.js\";\nimport { getServiceMachineId } from \"../../externalServices/common/serviceMachineId.js\";\nimport type { IFileService } from \"../../files/common/files.js\";\nimport { createDecorator } from \"../../instantiation/common/instantiation.js\";\nimport type { IProductService } from \"../../product/common/productService.js\";\nimport type { IStorageService } from \"../../storage/common/storage.js\";\nimport { TelemetryLevel } from \"../../telemetry/common/telemetry.js\";\nimport {\n\tgetTelemetryLevel,\n\tsupportsTelemetry,\n} from \"../../telemetry/common/telemetryUtils.js\";\n\nconst WEB_EXTENSION_RESOURCE_END_POINT_SEGMENT = \"/web-extension-resource/\";\n\nexport const IExtensionResourceLoaderService =\n\tcreateDecorator<IExtensionResourceLoaderService>(\n\t\t\"extensionResourceLoaderService\",\n\t);\n\n/**\n * A service useful for reading resources from within extensions.\n */\nexport interface IExtensionResourceLoaderService {\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Read a certain resource within an extension.\n\t */\n\treadExtensionResource(uri: URI): Promise<string>;\n\n\t/**\n\t * Returns whether the gallery provides extension resources.\n\t */\n\treadonly supportsExtensionGalleryResources: boolean;\n\n\t/**\n\t * Return true if the given URI is a extension gallery resource.\n\t */\n\tisExtensionGalleryResource(uri: URI): boolean;\n\n\t/**\n\t * Computes the URL of a extension gallery resource. Returns `undefined` if gallery does not provide extension resources.\n\t */\n\tgetExtensionGalleryResourceURL(\n\t\tgalleryExtension: {\n\t\t\tpublisher: string;\n\t\t\tname: string;\n\t\t\tversion: string;\n\t\t\ttargetPlatform?: TargetPlatform;\n\t\t},\n\t\tpath?: string,\n\t): URI | undefined;\n}\n\nexport function migratePlatformSpecificExtensionGalleryResourceURL(\n\tresource: URI,\n\ttargetPlatform: TargetPlatform,\n): URI | undefined {\n\tif (resource.query !== `target=${targetPlatform}`) {\n\t\treturn undefined;\n\t}\n\tconst paths = resource.path.split(\"/\");\n\tif (!paths[3]) {\n\t\treturn undefined;\n\t}\n\tpaths[3] = `${paths[3]}+${targetPlatform}`;\n\treturn resource.with({ query: null, path: paths.join(\"/\") });\n}\n\nexport abstract class AbstractExtensionResourceLoaderService\n\timplements IExtensionResourceLoaderService\n{\n\treadonly _serviceBrand: undefined;\n\n\tprivate readonly _extensionGalleryResourceUrlTemplate: string | undefined;\n\tprivate readonly _extensionGalleryAuthority: string | undefined;\n\n\tconstructor(\n\t\tprotected readonly _fileService: IFileService,\n\t\tprivate readonly _storageService: IStorageService,\n\t\tprivate readonly _productService: IProductService,\n\t\tprivate readonly _environmentService: IEnvironmentService,\n\t\tprivate readonly _configurationService: IConfigurationService,\n\t) {\n\t\tif (_productService.extensionsGallery) {\n\t\t\tthis._extensionGalleryResourceUrlTemplate =\n\t\t\t\t_productService.extensionsGallery.resourceUrlTemplate;\n\t\t\tthis._extensionGalleryAuthority = this\n\t\t\t\t._extensionGalleryResourceUrlTemplate\n\t\t\t\t? this._getExtensionGalleryAuthority(\n\t\t\t\t\t\tURI.parse(this._extensionGalleryResourceUrlTemplate),\n\t\t\t\t\t)\n\t\t\t\t: undefined;\n\t\t}\n\t}\n\n\tpublic get supportsExtensionGalleryResources(): boolean {\n\t\treturn this._extensionGalleryResourceUrlTemplate !== undefined;\n\t}\n\n\tpublic getExtensionGalleryResourceURL(\n\t\t{\n\t\t\tpublisher,\n\t\t\tname,\n\t\t\tversion,\n\t\t\ttargetPlatform,\n\t\t}: {\n\t\t\tpublisher: string;\n\t\t\tname: string;\n\t\t\tversion: string;\n\t\t\ttargetPlatform?: TargetPlatform;\n\t\t},\n\t\tpath?: string,\n\t): URI | undefined {\n\t\tif (this._extensionGalleryResourceUrlTemplate) {\n\t\t\tconst uri = URI.parse(\n\t\t\t\tformat2(this._extensionGalleryResourceUrlTemplate, {\n\t\t\t\t\tpublisher,\n\t\t\t\t\tname,\n\t\t\t\t\tversion:\n\t\t\t\t\t\ttargetPlatform !== undefined &&\n\t\t\t\t\t\ttargetPlatform !== TargetPlatform.UNDEFINED &&\n\t\t\t\t\t\ttargetPlatform !== TargetPlatform.UNKNOWN &&\n\t\t\t\t\t\ttargetPlatform !== TargetPlatform.UNIVERSAL\n\t\t\t\t\t\t\t? `${version}+${targetPlatform}`\n\t\t\t\t\t\t\t: version,\n\t\t\t\t\tpath: \"extension\",\n\t\t\t\t}),\n\t\t\t);\n\t\t\treturn this._isWebExtensionResourceEndPoint(uri)\n\t\t\t\t? uri.with({\n\t\t\t\t\t\tscheme: RemoteAuthorities.getPreferredWebSchema(),\n\t\t\t\t\t})\n\t\t\t\t: uri;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tpublic abstract readExtensionResource(uri: URI): Promise<string>;\n\n\tisExtensionGalleryResource(uri: URI): boolean {\n\t\treturn (\n\t\t\t!!this._extensionGalleryAuthority &&\n\t\t\tthis._extensionGalleryAuthority ===\n\t\t\t\tthis._getExtensionGalleryAuthority(uri)\n\t\t);\n\t}\n\n\tprotected async getExtensionGalleryRequestHeaders(): Promise<\n\t\tRecord<string, string>\n\t> {\n\t\tconst headers: Record<string, string> = {\n\t\t\t\"X-Client-Name\": `${this._productService.applicationName}${isWeb ? \"-web\" : \"\"}`,\n\t\t\t\"X-Client-Version\": this._productService.version,\n\t\t};\n\t\tif (\n\t\t\tsupportsTelemetry(this._productService, this._environmentService) &&\n\t\t\tgetTelemetryLevel(this._configurationService) ===\n\t\t\t\tTelemetryLevel.USAGE\n\t\t) {\n\t\t\theaders[\"X-Machine-Id\"] = await this._getServiceMachineId();\n\t\t}\n\t\tif (this._productService.commit) {\n\t\t\theaders[\"X-Client-Commit\"] = this._productService.commit;\n\t\t}\n\t\treturn headers;\n\t}\n\n\tprivate _serviceMachineIdPromise: Promise<string> | undefined;\n\tprivate _getServiceMachineId(): Promise<string> {\n\t\tif (!this._serviceMachineIdPromise) {\n\t\t\tthis._serviceMachineIdPromise = getServiceMachineId(\n\t\t\t\tthis._environmentService,\n\t\t\t\tthis._fileService,\n\t\t\t\tthis._storageService,\n\t\t\t);\n\t\t}\n\t\treturn this._serviceMachineIdPromise;\n\t}\n\n\tprivate _getExtensionGalleryAuthority(uri: URI): string | undefined {\n\t\tif (this._isWebExtensionResourceEndPoint(uri)) {\n\t\t\treturn uri.authority;\n\t\t}\n\t\tconst index = uri.authority.indexOf(\".\");\n\t\treturn index !== -1 ? uri.authority.substring(index + 1) : undefined;\n\t}\n\n\tprotected _isWebExtensionResourceEndPoint(uri: URI): boolean {\n\t\tconst uriPath = uri.path,\n\t\t\tserverRootPath = RemoteAuthorities.getServerRootPath();\n\t\t// test if the path starts with the server root path followed by the web extension resource end point segment\n\t\treturn (\n\t\t\turiPath.startsWith(serverRootPath) &&\n\t\t\turiPath.startsWith(\n\t\t\t\tWEB_EXTENSION_RESOURCE_END_POINT_SEGMENT,\n\t\t\t\tserverRootPath.length,\n\t\t\t)\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
