var S=Object.defineProperty;var l=Object.getOwnPropertyDescriptor;var m=(s,i,e,t)=>{for(var r=t>1?void 0:t?l(i,e):i,o=s.length-1,a;o>=0;o--)(a=s[o])&&(r=(t?a(i,e,r):a(r))||r);return t&&r&&S(i,e,r),r},n=(s,i)=>(e,t)=>i(e,t,s);import{CancellationToken as u}from"../../../base/common/cancellation.js";import"../../../base/common/uri.js";import{IConfigurationService as v}from"../../configuration/common/configuration.js";import{IEnvironmentService as I}from"../../environment/common/environment.js";import{IFileService as f}from"../../files/common/files.js";import{InstantiationType as p,registerSingleton as g}from"../../instantiation/common/extensions.js";import{IProductService as d}from"../../product/common/productService.js";import{asTextOrError as q,IRequestService as x}from"../../request/common/request.js";import{IStorageService as y}from"../../storage/common/storage.js";import{AbstractExtensionResourceLoaderService as R,IExtensionResourceLoaderService as h}from"./extensionResourceLoader.js";let c=class extends R{constructor(e,t,r,o,a,E){super(e,t,r,o,a);this._requestService=E}async readExtensionResource(e){if(this.isExtensionGalleryResource(e)){const r=await this.getExtensionGalleryRequestHeaders(),o=await this._requestService.request({url:e.toString(),headers:r},u.None);return await q(o)||""}return(await this._fileService.readFile(e)).value.toString()}};c=m([n(0,f),n(1,y),n(2,d),n(3,I),n(4,v),n(5,x)],c),g(h,c,p.Delayed);export{c as ExtensionResourceLoaderService};
