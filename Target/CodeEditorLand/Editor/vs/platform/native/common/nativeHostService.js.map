{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/native/common/nativeHostService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ProxyChannel } from '../../../base/parts/ipc/common/ipc.js';\nimport { IMainProcessService } from '../../ipc/common/mainProcessService.js';\nimport { INativeHostService } from './native.js';\n\n// @ts-ignore: interface is implemented via proxy\nexport class NativeHostService implements INativeHostService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\treadonly windowId: number,\n\t\t@IMainProcessService mainProcessService: IMainProcessService\n\t) {\n\t\treturn ProxyChannel.toService<INativeHostService>(mainProcessService.getChannel('nativeHost'), {\n\t\t\tcontext: windowId,\n\t\t\tproperties: (() => {\n\t\t\t\tconst properties = new Map<string, unknown>();\n\t\t\t\tproperties.set('windowId', windowId);\n\n\t\t\t\treturn properties;\n\t\t\t})()\n\t\t});\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,oBAAoB;AAC7B,SAAS,2BAA2B;AACpC,SAAS,0BAA0B;AAG5B,IAAM,oBAAN,MAAsD;AAAA,EAI5D,YACU,UACY,oBACpB;AAFQ;AAGT,WAAO,aAAa,UAA8B,mBAAmB,WAAW,YAAY,GAAG;AAAA,MAC9F,SAAS;AAAA,MACT,aAAa,MAAM;AAClB,cAAM,aAAa,oBAAI,IAAqB;AAC5C,mBAAW,IAAI,YAAY,QAAQ;AAEnC,eAAO;AAAA,MACR,GAAG;AAAA,IACJ,CAAC;AAAA,EACF;AAAA,EA3BD,OAU6D;AAAA;AAAA;AAkB7D;AAlBa,oBAAN;AAAA,EAMJ;AAAA,GANU;",
  "names": []
}
