{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/native/common/nativeHostService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ProxyChannel } from \"../../../base/parts/ipc/common/ipc.js\";\nimport { IMainProcessService } from \"../../ipc/common/mainProcessService.js\";\nimport type { INativeHostService } from \"./native.js\";\n\n// @ts-ignore: interface is implemented via proxy\nexport class NativeHostService implements INativeHostService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\treadonly windowId: number,\n\t\t@IMainProcessService mainProcessService: IMainProcessService,\n\t) {\n\t\treturn ProxyChannel.toService<INativeHostService>(\n\t\t\tmainProcessService.getChannel(\"nativeHost\"),\n\t\t\t{\n\t\t\t\tcontext: windowId,\n\t\t\t\tproperties: (() => {\n\t\t\t\t\tconst properties = new Map<string, unknown>();\n\t\t\t\t\tproperties.set(\"windowId\", windowId);\n\n\t\t\t\t\treturn properties;\n\t\t\t\t})(),\n\t\t\t},\n\t\t);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,oBAAoB;AAC7B,SAAS,2BAA2B;AAI7B,IAAM,oBAAN,MAAsD;AAAA,EAG5D,YACU,UACY,oBACpB;AAFQ;AAGT,WAAO,aAAa;AAAA,MACnB,mBAAmB,WAAW,YAAY;AAAA,MAC1C;AAAA,QACC,SAAS;AAAA,QACT,aAAa,MAAM;AAClB,gBAAM,aAAa,oBAAI,IAAqB;AAC5C,qBAAW,IAAI,YAAY,QAAQ;AAEnC,iBAAO;AAAA,QACR,GAAG;AAAA,MACJ;AAAA,IACD;AAAA,EACD;AAAA,EA7BD,OAU6D;AAAA;AAAA;AAoB7D;AApBa,oBAAN;AAAA,EAKJ;AAAA,GALU;",
  "names": []
}
