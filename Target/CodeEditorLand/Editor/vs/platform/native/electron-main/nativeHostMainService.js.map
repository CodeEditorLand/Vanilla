{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/native/electron-main/nativeHostMainService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { exec } from \"child_process\";\nimport * as fs from \"fs\";\nimport {\n\tarch,\n\tcpus,\n\tfreemem,\n\tloadavg,\n\tplatform,\n\trelease,\n\ttotalmem,\n\ttype,\n} from \"os\";\nimport { promisify } from \"util\";\nimport {\n\ttype BrowserWindow,\n\ttype Display,\n\tMenu,\n\ttype MessageBoxOptions,\n\ttype MessageBoxReturnValue,\n\ttype OpenDialogOptions,\n\ttype OpenDialogReturnValue,\n\ttype SaveDialogOptions,\n\ttype SaveDialogReturnValue,\n\tapp,\n\tclipboard,\n\tpowerMonitor,\n\tscreen,\n\tshell,\n\twebContents,\n} from \"electron\";\nimport { VSBuffer } from \"../../../base/common/buffer.js\";\nimport { memoize } from \"../../../base/common/decorators.js\";\nimport { CancellationError } from \"../../../base/common/errors.js\";\nimport { Emitter, Event } from \"../../../base/common/event.js\";\nimport { Disposable } from \"../../../base/common/lifecycle.js\";\nimport { Schemas, matchesSomeScheme } from \"../../../base/common/network.js\";\nimport {\n\tdirname,\n\tjoin,\n\tposix,\n\tresolve,\n\twin32,\n} from \"../../../base/common/path.js\";\nimport {\n\tisLinux,\n\tisMacintosh,\n\tisWindows,\n} from \"../../../base/common/platform.js\";\nimport type { AddFirstParameterToFunctions } from \"../../../base/common/types.js\";\nimport { URI } from \"../../../base/common/uri.js\";\nimport { realpath } from \"../../../base/node/extpath.js\";\nimport { virtualMachineHint } from \"../../../base/node/id.js\";\nimport { Promises, SymlinkSupport } from \"../../../base/node/pfs.js\";\nimport { findFreePort } from \"../../../base/node/ports.js\";\nimport { localize } from \"../../../nls.js\";\nimport type { ISerializableCommandAction } from \"../../action/common/action.js\";\nimport type { IAuxiliaryWindow } from \"../../auxiliaryWindow/electron-main/auxiliaryWindow.js\";\nimport { IAuxiliaryWindowsMainService } from \"../../auxiliaryWindow/electron-main/auxiliaryWindows.js\";\nimport { IConfigurationService } from \"../../configuration/common/configuration.js\";\nimport type { INativeOpenDialogOptions } from \"../../dialogs/common/dialogs.js\";\nimport { IDialogMainService } from \"../../dialogs/electron-main/dialogMainService.js\";\nimport { IEnvironmentMainService } from \"../../environment/electron-main/environmentMainService.js\";\nimport { createDecorator } from \"../../instantiation/common/instantiation.js\";\nimport {\n\tILifecycleMainService,\n\ttype IRelaunchOptions,\n} from \"../../lifecycle/electron-main/lifecycleMainService.js\";\nimport { ILogService } from \"../../log/common/log.js\";\nimport { IProductService } from \"../../product/common/productService.js\";\nimport type { IV8Profile } from \"../../profiling/common/profiling.js\";\nimport { WindowProfiler } from \"../../profiling/electron-main/windowProfiling.js\";\nimport { hasWSLFeatureInstalled } from \"../../remote/node/wsl.js\";\nimport {\n\ttype AuthInfo,\n\ttype Credentials,\n\tIRequestService,\n} from \"../../request/common/request.js\";\nimport type { IPartsSplash } from \"../../theme/common/themeService.js\";\nimport { IThemeMainService } from \"../../theme/electron-main/themeMainService.js\";\nimport {\n\ttype IColorScheme,\n\ttype IOpenEmptyWindowOptions,\n\ttype IOpenWindowOptions,\n\ttype IOpenedAuxiliaryWindow,\n\ttype IOpenedMainWindow,\n\ttype IPoint,\n\ttype IRectangle,\n\ttype IWindowOpenable,\n\tuseWindowControlsOverlay,\n} from \"../../window/common/window.js\";\nimport type { ICodeWindow } from \"../../window/electron-main/window.js\";\nimport {\n\tIWindowsMainService,\n\tOpenContext,\n} from \"../../windows/electron-main/windows.js\";\nimport {\n\tisWorkspaceIdentifier,\n\ttoWorkspaceIdentifier,\n} from \"../../workspace/common/workspace.js\";\nimport { IWorkspacesManagementMainService } from \"../../workspaces/electron-main/workspacesManagementMainService.js\";\nimport type {\n\tICommonNativeHostService,\n\tINativeHostOptions,\n\tIOSProperties,\n\tIOSStatistics,\n} from \"../common/native.js\";\nimport { IProxyAuthService } from \"./auth.js\";\n\nexport interface INativeHostMainService\n\textends AddFirstParameterToFunctions<\n\t\tICommonNativeHostService,\n\t\tPromise<unknown> /* only methods, not events */,\n\t\tnumber | undefined /* window ID */\n\t> {}\n\nexport const INativeHostMainService = createDecorator<INativeHostMainService>(\n\t\"nativeHostMainService\",\n);\n\nexport class NativeHostMainService\n\textends Disposable\n\timplements INativeHostMainService\n{\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IWindowsMainService private readonly windowsMainService: IWindowsMainService,\n\t\t@IAuxiliaryWindowsMainService private readonly auxiliaryWindowsMainService: IAuxiliaryWindowsMainService,\n\t\t@IDialogMainService private readonly dialogMainService: IDialogMainService,\n\t\t@ILifecycleMainService private readonly lifecycleMainService: ILifecycleMainService,\n\t\t@IEnvironmentMainService private readonly environmentMainService: IEnvironmentMainService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IThemeMainService private readonly themeMainService: IThemeMainService,\n\t\t@IWorkspacesManagementMainService private readonly workspacesManagementMainService: IWorkspacesManagementMainService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IRequestService private readonly requestService: IRequestService,\n\t\t@IProxyAuthService private readonly proxyAuthService: IProxyAuthService\n\t) {\n\t\tsuper();\n\t}\n\n\t//#region Properties\n\n\tget windowId(): never {\n\t\tthrow new Error(\"Not implemented in electron-main\");\n\t}\n\n\t//#endregion\n\n\t//#region Events\n\n\treadonly onDidOpenMainWindow = Event.map(\n\t\tthis.windowsMainService.onDidOpenWindow,\n\t\t(window) => window.id,\n\t);\n\n\treadonly onDidTriggerWindowSystemContextMenu = Event.any(\n\t\tEvent.map(\n\t\t\tthis.windowsMainService.onDidTriggerSystemContextMenu,\n\t\t\t({ window, x, y }) => ({ windowId: window.id, x, y }),\n\t\t),\n\t\tEvent.map(\n\t\t\tthis.auxiliaryWindowsMainService.onDidTriggerSystemContextMenu,\n\t\t\t({ window, x, y }) => ({ windowId: window.id, x, y }),\n\t\t),\n\t);\n\n\treadonly onDidMaximizeWindow = Event.any(\n\t\tEvent.map(\n\t\t\tthis.windowsMainService.onDidMaximizeWindow,\n\t\t\t(window) => window.id,\n\t\t),\n\t\tEvent.map(\n\t\t\tthis.auxiliaryWindowsMainService.onDidMaximizeWindow,\n\t\t\t(window) => window.id,\n\t\t),\n\t);\n\treadonly onDidUnmaximizeWindow = Event.any(\n\t\tEvent.map(\n\t\t\tthis.windowsMainService.onDidUnmaximizeWindow,\n\t\t\t(window) => window.id,\n\t\t),\n\t\tEvent.map(\n\t\t\tthis.auxiliaryWindowsMainService.onDidUnmaximizeWindow,\n\t\t\t(window) => window.id,\n\t\t),\n\t);\n\n\treadonly onDidChangeWindowFullScreen = Event.any(\n\t\tEvent.map(this.windowsMainService.onDidChangeFullScreen, (e) => ({\n\t\t\twindowId: e.window.id,\n\t\t\tfullscreen: e.fullscreen,\n\t\t})),\n\t\tEvent.map(\n\t\t\tthis.auxiliaryWindowsMainService.onDidChangeFullScreen,\n\t\t\t(e) => ({ windowId: e.window.id, fullscreen: e.fullscreen }),\n\t\t),\n\t);\n\n\treadonly onDidBlurMainWindow = Event.filter(\n\t\tEvent.fromNodeEventEmitter(\n\t\t\tapp,\n\t\t\t\"browser-window-blur\",\n\t\t\t(event, window: BrowserWindow) => window.id,\n\t\t),\n\t\t(windowId) => !!this.windowsMainService.getWindowById(windowId),\n\t);\n\treadonly onDidFocusMainWindow = Event.any(\n\t\tEvent.map(\n\t\t\tEvent.filter(\n\t\t\t\tEvent.map(this.windowsMainService.onDidChangeWindowsCount, () =>\n\t\t\t\t\tthis.windowsMainService.getLastActiveWindow(),\n\t\t\t\t),\n\t\t\t\t(window) => !!window,\n\t\t\t),\n\t\t\t(window) => window!.id,\n\t\t),\n\t\tEvent.filter(\n\t\t\tEvent.fromNodeEventEmitter(\n\t\t\t\tapp,\n\t\t\t\t\"browser-window-focus\",\n\t\t\t\t(event, window: BrowserWindow) => window.id,\n\t\t\t),\n\t\t\t(windowId) => !!this.windowsMainService.getWindowById(windowId),\n\t\t),\n\t);\n\n\treadonly onDidBlurMainOrAuxiliaryWindow = Event.any(\n\t\tthis.onDidBlurMainWindow,\n\t\tEvent.map(\n\t\t\tEvent.filter(\n\t\t\t\tEvent.fromNodeEventEmitter(\n\t\t\t\t\tapp,\n\t\t\t\t\t\"browser-window-blur\",\n\t\t\t\t\t(event, window: BrowserWindow) =>\n\t\t\t\t\t\tthis.auxiliaryWindowsMainService.getWindowByWebContents(\n\t\t\t\t\t\t\twindow.webContents,\n\t\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t\t(window) => !!window,\n\t\t\t),\n\t\t\t(window) => window!.id,\n\t\t),\n\t);\n\treadonly onDidFocusMainOrAuxiliaryWindow = Event.any(\n\t\tthis.onDidFocusMainWindow,\n\t\tEvent.map(\n\t\t\tEvent.filter(\n\t\t\t\tEvent.fromNodeEventEmitter(\n\t\t\t\t\tapp,\n\t\t\t\t\t\"browser-window-focus\",\n\t\t\t\t\t(event, window: BrowserWindow) =>\n\t\t\t\t\t\tthis.auxiliaryWindowsMainService.getWindowByWebContents(\n\t\t\t\t\t\t\twindow.webContents,\n\t\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t\t(window) => !!window,\n\t\t\t),\n\t\t\t(window) => window!.id,\n\t\t),\n\t);\n\n\treadonly onDidResumeOS = Event.fromNodeEventEmitter(powerMonitor, \"resume\");\n\n\treadonly onDidChangeColorScheme =\n\t\tthis.themeMainService.onDidChangeColorScheme;\n\n\tprivate readonly _onDidChangePassword = this._register(\n\t\tnew Emitter<{ account: string; service: string }>(),\n\t);\n\treadonly onDidChangePassword = this._onDidChangePassword.event;\n\n\treadonly onDidChangeDisplay = Event.debounce(\n\t\tEvent.any(\n\t\t\tEvent.filter(\n\t\t\t\tEvent.fromNodeEventEmitter(\n\t\t\t\t\tscreen,\n\t\t\t\t\t\"display-metrics-changed\",\n\t\t\t\t\t(\n\t\t\t\t\t\tevent: Electron.Event,\n\t\t\t\t\t\tdisplay: Display,\n\t\t\t\t\t\tchangedMetrics?: string[],\n\t\t\t\t\t) => changedMetrics,\n\t\t\t\t),\n\t\t\t\t(changedMetrics) => {\n\t\t\t\t\t// Electron will emit 'display-metrics-changed' events even when actually\n\t\t\t\t\t// going fullscreen, because the dock hides. However, we do not want to\n\t\t\t\t\t// react on this event as there is no change in display bounds.\n\t\t\t\t\treturn !(\n\t\t\t\t\t\tArray.isArray(changedMetrics) &&\n\t\t\t\t\t\tchangedMetrics.length === 1 &&\n\t\t\t\t\t\tchangedMetrics[0] === \"workArea\"\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t),\n\t\t\tEvent.fromNodeEventEmitter(screen, \"display-added\"),\n\t\t\tEvent.fromNodeEventEmitter(screen, \"display-removed\"),\n\t\t),\n\t\t() => {},\n\t\t100,\n\t);\n\n\t//#endregion\n\n\t//#region Window\n\n\tgetWindows(\n\t\twindowId: number | undefined,\n\t\toptions: { includeAuxiliaryWindows: true },\n\t): Promise<Array<IOpenedMainWindow | IOpenedAuxiliaryWindow>>;\n\tgetWindows(\n\t\twindowId: number | undefined,\n\t\toptions: { includeAuxiliaryWindows: false },\n\t): Promise<Array<IOpenedMainWindow>>;\n\tasync getWindows(\n\t\twindowId: number | undefined,\n\t\toptions: { includeAuxiliaryWindows: boolean },\n\t): Promise<Array<IOpenedMainWindow | IOpenedAuxiliaryWindow>> {\n\t\tconst mainWindows = this.windowsMainService\n\t\t\t.getWindows()\n\t\t\t.map((window) => ({\n\t\t\t\tid: window.id,\n\t\t\t\tworkspace:\n\t\t\t\t\twindow.openedWorkspace ??\n\t\t\t\t\ttoWorkspaceIdentifier(\n\t\t\t\t\t\twindow.backupPath,\n\t\t\t\t\t\twindow.isExtensionDevelopmentHost,\n\t\t\t\t\t),\n\t\t\t\ttitle: window.win?.getTitle() ?? \"\",\n\t\t\t\tfilename: window.getRepresentedFilename(),\n\t\t\t\tdirty: window.isDocumentEdited(),\n\t\t\t}));\n\n\t\tconst auxiliaryWindows = [];\n\t\tif (options.includeAuxiliaryWindows) {\n\t\t\tauxiliaryWindows.push(\n\t\t\t\t...this.auxiliaryWindowsMainService\n\t\t\t\t\t.getWindows()\n\t\t\t\t\t.map((window) => ({\n\t\t\t\t\t\tid: window.id,\n\t\t\t\t\t\tparentId: window.parentId,\n\t\t\t\t\t\ttitle: window.win?.getTitle() ?? \"\",\n\t\t\t\t\t\tfilename: window.getRepresentedFilename(),\n\t\t\t\t\t})),\n\t\t\t);\n\t\t}\n\n\t\treturn [...mainWindows, ...auxiliaryWindows];\n\t}\n\n\tasync getWindowCount(windowId: number | undefined): Promise<number> {\n\t\treturn this.windowsMainService.getWindowCount();\n\t}\n\n\tasync getActiveWindowId(\n\t\twindowId: number | undefined,\n\t): Promise<number | undefined> {\n\t\tconst activeWindow =\n\t\t\tthis.windowsMainService.getFocusedWindow() ||\n\t\t\tthis.windowsMainService.getLastActiveWindow();\n\t\tif (activeWindow) {\n\t\t\treturn activeWindow.id;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tasync getActiveWindowPosition(): Promise<IRectangle | undefined> {\n\t\tconst activeWindow =\n\t\t\tthis.windowsMainService.getFocusedWindow() ||\n\t\t\tthis.windowsMainService.getLastActiveWindow();\n\t\tif (activeWindow) {\n\t\t\treturn activeWindow.getBounds();\n\t\t}\n\t\treturn undefined;\n\t}\n\n\topenWindow(\n\t\twindowId: number | undefined,\n\t\toptions?: IOpenEmptyWindowOptions,\n\t): Promise<void>;\n\topenWindow(\n\t\twindowId: number | undefined,\n\t\ttoOpen: IWindowOpenable[],\n\t\toptions?: IOpenWindowOptions,\n\t): Promise<void>;\n\topenWindow(\n\t\twindowId: number | undefined,\n\t\targ1?: IOpenEmptyWindowOptions | IWindowOpenable[],\n\t\targ2?: IOpenWindowOptions,\n\t): Promise<void> {\n\t\tif (Array.isArray(arg1)) {\n\t\t\treturn this.doOpenWindow(windowId, arg1, arg2);\n\t\t}\n\n\t\treturn this.doOpenEmptyWindow(windowId, arg1);\n\t}\n\n\tprivate async doOpenWindow(\n\t\twindowId: number | undefined,\n\t\ttoOpen: IWindowOpenable[],\n\t\toptions: IOpenWindowOptions = Object.create(null),\n\t): Promise<void> {\n\t\tif (toOpen.length > 0) {\n\t\t\tawait this.windowsMainService.open({\n\t\t\t\tcontext: OpenContext.API,\n\t\t\t\tcontextWindowId: windowId,\n\t\t\t\turisToOpen: toOpen,\n\t\t\t\tcli: this.environmentMainService.args,\n\t\t\t\tforceNewWindow: options.forceNewWindow,\n\t\t\t\tforceReuseWindow: options.forceReuseWindow,\n\t\t\t\tpreferNewWindow: options.preferNewWindow,\n\t\t\t\tdiffMode: options.diffMode,\n\t\t\t\tmergeMode: options.mergeMode,\n\t\t\t\taddMode: options.addMode,\n\t\t\t\tgotoLineMode: options.gotoLineMode,\n\t\t\t\tnoRecentEntry: options.noRecentEntry,\n\t\t\t\twaitMarkerFileURI: options.waitMarkerFileURI,\n\t\t\t\tremoteAuthority: options.remoteAuthority || undefined,\n\t\t\t\tforceProfile: options.forceProfile,\n\t\t\t\tforceTempProfile: options.forceTempProfile,\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate async doOpenEmptyWindow(\n\t\twindowId: number | undefined,\n\t\toptions?: IOpenEmptyWindowOptions,\n\t): Promise<void> {\n\t\tawait this.windowsMainService.openEmptyWindow(\n\t\t\t{\n\t\t\t\tcontext: OpenContext.API,\n\t\t\t\tcontextWindowId: windowId,\n\t\t\t},\n\t\t\toptions,\n\t\t);\n\t}\n\n\tasync isFullScreen(\n\t\twindowId: number | undefined,\n\t\toptions?: INativeHostOptions,\n\t): Promise<boolean> {\n\t\tconst window = this.windowById(options?.targetWindowId, windowId);\n\t\treturn window?.isFullScreen ?? false;\n\t}\n\n\tasync toggleFullScreen(\n\t\twindowId: number | undefined,\n\t\toptions?: INativeHostOptions,\n\t): Promise<void> {\n\t\tconst window = this.windowById(options?.targetWindowId, windowId);\n\t\twindow?.toggleFullScreen();\n\t}\n\n\tasync handleTitleDoubleClick(\n\t\twindowId: number | undefined,\n\t\toptions?: INativeHostOptions,\n\t): Promise<void> {\n\t\tconst window = this.windowById(options?.targetWindowId, windowId);\n\t\twindow?.handleTitleDoubleClick();\n\t}\n\n\tasync getCursorScreenPoint(\n\t\twindowId: number | undefined,\n\t): Promise<{ readonly point: IPoint; readonly display: IRectangle }> {\n\t\tconst point = screen.getCursorScreenPoint();\n\t\tconst display = screen.getDisplayNearestPoint(point);\n\n\t\treturn { point, display: display.bounds };\n\t}\n\n\tasync isMaximized(\n\t\twindowId: number | undefined,\n\t\toptions?: INativeHostOptions,\n\t): Promise<boolean> {\n\t\tconst window = this.windowById(options?.targetWindowId, windowId);\n\t\treturn window?.win?.isMaximized() ?? false;\n\t}\n\n\tasync maximizeWindow(\n\t\twindowId: number | undefined,\n\t\toptions?: INativeHostOptions,\n\t): Promise<void> {\n\t\tconst window = this.windowById(options?.targetWindowId, windowId);\n\t\twindow?.win?.maximize();\n\t}\n\n\tasync unmaximizeWindow(\n\t\twindowId: number | undefined,\n\t\toptions?: INativeHostOptions,\n\t): Promise<void> {\n\t\tconst window = this.windowById(options?.targetWindowId, windowId);\n\t\twindow?.win?.unmaximize();\n\t}\n\n\tasync minimizeWindow(\n\t\twindowId: number | undefined,\n\t\toptions?: INativeHostOptions,\n\t): Promise<void> {\n\t\tconst window = this.windowById(options?.targetWindowId, windowId);\n\t\twindow?.win?.minimize();\n\t}\n\n\tasync moveWindowTop(\n\t\twindowId: number | undefined,\n\t\toptions?: INativeHostOptions,\n\t): Promise<void> {\n\t\tconst window = this.windowById(options?.targetWindowId, windowId);\n\t\twindow?.win?.moveTop();\n\t}\n\n\tasync positionWindow(\n\t\twindowId: number | undefined,\n\t\tposition: IRectangle,\n\t\toptions?: INativeHostOptions,\n\t): Promise<void> {\n\t\tconst window = this.windowById(options?.targetWindowId, windowId);\n\t\tif (window?.win) {\n\t\t\tif (window.win.isFullScreen()) {\n\t\t\t\tconst fullscreenLeftFuture = Event.toPromise(\n\t\t\t\t\tEvent.once(\n\t\t\t\t\t\tEvent.fromNodeEventEmitter(\n\t\t\t\t\t\t\twindow.win,\n\t\t\t\t\t\t\t\"leave-full-screen\",\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\twindow.win.setFullScreen(false);\n\t\t\t\tawait fullscreenLeftFuture;\n\t\t\t}\n\n\t\t\twindow.win.setBounds(position);\n\t\t}\n\t}\n\n\tasync updateWindowControls(\n\t\twindowId: number | undefined,\n\t\toptions: INativeHostOptions & {\n\t\t\theight?: number;\n\t\t\tbackgroundColor?: string;\n\t\t\tforegroundColor?: string;\n\t\t},\n\t): Promise<void> {\n\t\tconst window = this.windowById(options?.targetWindowId, windowId);\n\t\twindow?.updateWindowControls(options);\n\t}\n\n\tasync focusWindow(\n\t\twindowId: number | undefined,\n\t\toptions?: INativeHostOptions & { force?: boolean },\n\t): Promise<void> {\n\t\tconst window = this.windowById(options?.targetWindowId, windowId);\n\t\twindow?.focus({ force: options?.force ?? false });\n\t}\n\n\tasync setMinimumSize(\n\t\twindowId: number | undefined,\n\t\twidth: number | undefined,\n\t\theight: number | undefined,\n\t): Promise<void> {\n\t\tconst window = this.codeWindowById(windowId);\n\t\tif (window?.win) {\n\t\t\tconst [windowWidth, windowHeight] = window.win.getSize();\n\t\t\tconst [minWindowWidth, minWindowHeight] =\n\t\t\t\twindow.win.getMinimumSize();\n\t\t\tconst [newMinWindowWidth, newMinWindowHeight] = [\n\t\t\t\twidth ?? minWindowWidth,\n\t\t\t\theight ?? minWindowHeight,\n\t\t\t];\n\t\t\tconst [newWindowWidth, newWindowHeight] = [\n\t\t\t\tMath.max(windowWidth, newMinWindowWidth),\n\t\t\t\tMath.max(windowHeight, newMinWindowHeight),\n\t\t\t];\n\n\t\t\tif (\n\t\t\t\tminWindowWidth !== newMinWindowWidth ||\n\t\t\t\tminWindowHeight !== newMinWindowHeight\n\t\t\t) {\n\t\t\t\twindow.win.setMinimumSize(\n\t\t\t\t\tnewMinWindowWidth,\n\t\t\t\t\tnewMinWindowHeight,\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (\n\t\t\t\twindowWidth !== newWindowWidth ||\n\t\t\t\twindowHeight !== newWindowHeight\n\t\t\t) {\n\t\t\t\twindow.win.setSize(newWindowWidth, newWindowHeight);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync saveWindowSplash(\n\t\twindowId: number | undefined,\n\t\tsplash: IPartsSplash,\n\t): Promise<void> {\n\t\tthis.themeMainService.saveWindowSplash(windowId, splash);\n\t}\n\n\t//#endregion\n\n\t//#region macOS Shell Command\n\n\tasync installShellCommand(windowId: number | undefined): Promise<void> {\n\t\tconst { source, target } = await this.getShellCommandLink();\n\n\t\t// Only install unless already existing\n\t\ttry {\n\t\t\tconst { symbolicLink } = await SymlinkSupport.stat(source);\n\t\t\tif (symbolicLink && !symbolicLink.dangling) {\n\t\t\t\tconst linkTargetRealPath = await realpath(source);\n\t\t\t\tif (target === linkTargetRealPath) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Different source, delete it first\n\t\t\tawait fs.promises.unlink(source);\n\t\t} catch (error) {\n\t\t\tif (error.code !== \"ENOENT\") {\n\t\t\t\tthrow error; // throw on any error but file not found\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tawait fs.promises.symlink(target, source);\n\t\t} catch (error) {\n\t\t\tif (error.code !== \"EACCES\" && error.code !== \"ENOENT\") {\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tconst { response } = await this.showMessageBox(windowId, {\n\t\t\t\ttype: \"info\",\n\t\t\t\tmessage: localize(\n\t\t\t\t\t\"warnEscalation\",\n\t\t\t\t\t\"{0} will now prompt with 'osascript' for Administrator privileges to install the shell command.\",\n\t\t\t\t\tthis.productService.nameShort,\n\t\t\t\t),\n\t\t\t\tbuttons: [\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t{ key: \"ok\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\t\t\"&&OK\",\n\t\t\t\t\t),\n\t\t\t\t\tlocalize(\"cancel\", \"Cancel\"),\n\t\t\t\t],\n\t\t\t});\n\n\t\t\tif (response === 1 /* Cancel */) {\n\t\t\t\tthrow new CancellationError();\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst command = `osascript -e \"do shell script \\\\\"mkdir -p /usr/local/bin && ln -sf \\'${target}\\' \\'${source}\\'\\\\\" with administrator privileges\"`;\n\t\t\t\tawait promisify(exec)(command);\n\t\t\t} catch (error) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"cantCreateBinFolder\",\n\t\t\t\t\t\t\"Unable to install the shell command '{0}'.\",\n\t\t\t\t\t\tsource,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync uninstallShellCommand(windowId: number | undefined): Promise<void> {\n\t\tconst { source } = await this.getShellCommandLink();\n\n\t\ttry {\n\t\t\tawait fs.promises.unlink(source);\n\t\t} catch (error) {\n\t\t\tswitch (error.code) {\n\t\t\t\tcase \"EACCES\": {\n\t\t\t\t\tconst { response } = await this.showMessageBox(windowId, {\n\t\t\t\t\t\ttype: \"info\",\n\t\t\t\t\t\tmessage: localize(\n\t\t\t\t\t\t\t\"warnEscalationUninstall\",\n\t\t\t\t\t\t\t\"{0} will now prompt with 'osascript' for Administrator privileges to uninstall the shell command.\",\n\t\t\t\t\t\t\tthis.productService.nameShort,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tbuttons: [\n\t\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tkey: \"ok\",\n\t\t\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"&&OK\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tlocalize(\"cancel\", \"Cancel\"),\n\t\t\t\t\t\t],\n\t\t\t\t\t});\n\n\t\t\t\t\tif (response === 1 /* Cancel */) {\n\t\t\t\t\t\tthrow new CancellationError();\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst command = `osascript -e \"do shell script \\\\\"rm \\'${source}\\'\\\\\" with administrator privileges\"`;\n\t\t\t\t\t\tawait promisify(exec)(command);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t\t\"cantUninstall\",\n\t\t\t\t\t\t\t\t\"Unable to uninstall the shell command '{0}'.\",\n\t\t\t\t\t\t\t\tsource,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"ENOENT\":\n\t\t\t\t\tbreak; // ignore file not found\n\t\t\t\tdefault:\n\t\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async getShellCommandLink(): Promise<{\n\t\treadonly source: string;\n\t\treadonly target: string;\n\t}> {\n\t\tconst target = resolve(\n\t\t\tthis.environmentMainService.appRoot,\n\t\t\t\"bin\",\n\t\t\t\"code\",\n\t\t);\n\t\tconst source = `/usr/local/bin/${this.productService.applicationName}`;\n\n\t\t// Ensure source exists\n\t\tconst sourceExists = await Promises.exists(target);\n\t\tif (!sourceExists) {\n\t\t\tthrow new Error(\n\t\t\t\tlocalize(\n\t\t\t\t\t\"sourceMissing\",\n\t\t\t\t\t\"Unable to find shell script in '{0}'\",\n\t\t\t\t\ttarget,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\treturn { source, target };\n\t}\n\n\t//#endregion\n\n\t//#region Dialog\n\n\tasync showMessageBox(\n\t\twindowId: number | undefined,\n\t\toptions: MessageBoxOptions & INativeHostOptions,\n\t): Promise<MessageBoxReturnValue> {\n\t\tconst window = this.windowById(options?.targetWindowId, windowId);\n\t\treturn this.dialogMainService.showMessageBox(\n\t\t\toptions,\n\t\t\twindow?.win ?? undefined,\n\t\t);\n\t}\n\n\tasync showSaveDialog(\n\t\twindowId: number | undefined,\n\t\toptions: SaveDialogOptions & INativeHostOptions,\n\t): Promise<SaveDialogReturnValue> {\n\t\tconst window = this.windowById(options?.targetWindowId, windowId);\n\t\treturn this.dialogMainService.showSaveDialog(\n\t\t\toptions,\n\t\t\twindow?.win ?? undefined,\n\t\t);\n\t}\n\n\tasync showOpenDialog(\n\t\twindowId: number | undefined,\n\t\toptions: OpenDialogOptions & INativeHostOptions,\n\t): Promise<OpenDialogReturnValue> {\n\t\tconst window = this.windowById(options?.targetWindowId, windowId);\n\t\treturn this.dialogMainService.showOpenDialog(\n\t\t\toptions,\n\t\t\twindow?.win ?? undefined,\n\t\t);\n\t}\n\n\tasync pickFileFolderAndOpen(\n\t\twindowId: number | undefined,\n\t\toptions: INativeOpenDialogOptions,\n\t): Promise<void> {\n\t\tconst paths = await this.dialogMainService.pickFileFolder(options);\n\t\tif (paths) {\n\t\t\tawait this.doOpenPicked(\n\t\t\t\tawait Promise.all(\n\t\t\t\t\tpaths.map(async (path) =>\n\t\t\t\t\t\t(await SymlinkSupport.existsDirectory(path))\n\t\t\t\t\t\t\t? { folderUri: URI.file(path) }\n\t\t\t\t\t\t\t: { fileUri: URI.file(path) },\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t\toptions,\n\t\t\t\twindowId,\n\t\t\t);\n\t\t}\n\t}\n\n\tasync pickFolderAndOpen(\n\t\twindowId: number | undefined,\n\t\toptions: INativeOpenDialogOptions,\n\t): Promise<void> {\n\t\tconst paths = await this.dialogMainService.pickFolder(options);\n\t\tif (paths) {\n\t\t\tawait this.doOpenPicked(\n\t\t\t\tpaths.map((path) => ({ folderUri: URI.file(path) })),\n\t\t\t\toptions,\n\t\t\t\twindowId,\n\t\t\t);\n\t\t}\n\t}\n\n\tasync pickFileAndOpen(\n\t\twindowId: number | undefined,\n\t\toptions: INativeOpenDialogOptions,\n\t): Promise<void> {\n\t\tconst paths = await this.dialogMainService.pickFile(options);\n\t\tif (paths) {\n\t\t\tawait this.doOpenPicked(\n\t\t\t\tpaths.map((path) => ({ fileUri: URI.file(path) })),\n\t\t\t\toptions,\n\t\t\t\twindowId,\n\t\t\t);\n\t\t}\n\t}\n\n\tasync pickWorkspaceAndOpen(\n\t\twindowId: number | undefined,\n\t\toptions: INativeOpenDialogOptions,\n\t): Promise<void> {\n\t\tconst paths = await this.dialogMainService.pickWorkspace(options);\n\t\tif (paths) {\n\t\t\tawait this.doOpenPicked(\n\t\t\t\tpaths.map((path) => ({ workspaceUri: URI.file(path) })),\n\t\t\t\toptions,\n\t\t\t\twindowId,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate async doOpenPicked(\n\t\topenable: IWindowOpenable[],\n\t\toptions: INativeOpenDialogOptions,\n\t\twindowId: number | undefined,\n\t): Promise<void> {\n\t\tawait this.windowsMainService.open({\n\t\t\tcontext: OpenContext.DIALOG,\n\t\t\tcontextWindowId: windowId,\n\t\t\tcli: this.environmentMainService.args,\n\t\t\turisToOpen: openable,\n\t\t\tforceNewWindow: options.forceNewWindow,\n\t\t\t/* remoteAuthority will be determined based on openable */\n\t\t});\n\t}\n\n\t//#endregion\n\n\t//#region OS\n\n\tasync showItemInFolder(\n\t\twindowId: number | undefined,\n\t\tpath: string,\n\t): Promise<void> {\n\t\tshell.showItemInFolder(path);\n\t}\n\n\tasync setRepresentedFilename(\n\t\twindowId: number | undefined,\n\t\tpath: string,\n\t\toptions?: INativeHostOptions,\n\t): Promise<void> {\n\t\tconst window = this.windowById(options?.targetWindowId, windowId);\n\t\twindow?.setRepresentedFilename(path);\n\t}\n\n\tasync setDocumentEdited(\n\t\twindowId: number | undefined,\n\t\tedited: boolean,\n\t\toptions?: INativeHostOptions,\n\t): Promise<void> {\n\t\tconst window = this.windowById(options?.targetWindowId, windowId);\n\t\twindow?.setDocumentEdited(edited);\n\t}\n\n\tasync openExternal(\n\t\twindowId: number | undefined,\n\t\turl: string,\n\t\tdefaultApplication?: string,\n\t): Promise<boolean> {\n\t\tthis.environmentMainService.unsetSnapExportedVariables();\n\t\ttry {\n\t\t\tif (matchesSomeScheme(url, Schemas.http, Schemas.https)) {\n\t\t\t\tthis.openExternalBrowser(url, defaultApplication);\n\t\t\t} else {\n\t\t\t\tshell.openExternal(url);\n\t\t\t}\n\t\t} finally {\n\t\t\tthis.environmentMainService.restoreSnapExportedVariables();\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate async openExternalBrowser(\n\t\turl: string,\n\t\tdefaultApplication?: string,\n\t): Promise<void> {\n\t\tconst configuredBrowser =\n\t\t\tdefaultApplication ??\n\t\t\tthis.configurationService.getValue<string>(\n\t\t\t\t\"workbench.externalBrowser\",\n\t\t\t);\n\t\tif (!configuredBrowser) {\n\t\t\treturn shell.openExternal(url);\n\t\t}\n\n\t\tif (\n\t\t\tconfiguredBrowser.includes(posix.sep) ||\n\t\t\tconfiguredBrowser.includes(win32.sep)\n\t\t) {\n\t\t\tconst browserPathExists = await Promises.exists(configuredBrowser);\n\t\t\tif (!browserPathExists) {\n\t\t\t\tthis.logService.error(\n\t\t\t\t\t`Configured external browser path does not exist: ${configuredBrowser}`,\n\t\t\t\t);\n\t\t\t\treturn shell.openExternal(url);\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tconst { default: open } = await import(\"open\");\n\t\t\tconst res = await open(url, {\n\t\t\t\tapp: {\n\t\t\t\t\t// Use `open.apps` helper to allow cross-platform browser\n\t\t\t\t\t// aliases to be looked up properly. Fallback to the\n\t\t\t\t\t// configured value if not found.\n\t\t\t\t\tname: Object.hasOwn(open.apps, configuredBrowser)\n\t\t\t\t\t\t? open.apps[\n\t\t\t\t\t\t\t\tconfiguredBrowser as keyof (typeof open)[\"apps\"]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t: configuredBrowser,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tres.stderr?.once(\"data\", (data: Buffer) => {\n\t\t\t\tthis.logService.error(\n\t\t\t\t\t`Error openening external URL '${url}' using browser '${configuredBrowser}': ${data.toString()}`,\n\t\t\t\t);\n\t\t\t\treturn shell.openExternal(url);\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tthis.logService.error(\n\t\t\t\t`Unable to open external URL '${url}' using browser '${configuredBrowser}' due to ${error}.`,\n\t\t\t);\n\t\t\treturn shell.openExternal(url);\n\t\t}\n\t}\n\n\tmoveItemToTrash(\n\t\twindowId: number | undefined,\n\t\tfullPath: string,\n\t): Promise<void> {\n\t\treturn shell.trashItem(fullPath);\n\t}\n\n\tasync isAdmin(): Promise<boolean> {\n\t\tlet isAdmin: boolean;\n\t\tif (isWindows) {\n\t\t\tisAdmin = (await import(\"native-is-elevated\")).default();\n\t\t} else {\n\t\t\tisAdmin = process.getuid?.() === 0;\n\t\t}\n\n\t\treturn isAdmin;\n\t}\n\n\tasync writeElevated(\n\t\twindowId: number | undefined,\n\t\tsource: URI,\n\t\ttarget: URI,\n\t\toptions?: { unlock?: boolean },\n\t): Promise<void> {\n\t\tconst sudoPrompt = await import(\"@vscode/sudo-prompt\");\n\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\tconst sudoCommand: string[] = [`\"${this.cliPath}\"`];\n\t\t\tif (options?.unlock) {\n\t\t\t\tsudoCommand.push(\"--file-chmod\");\n\t\t\t}\n\n\t\t\tsudoCommand.push(\n\t\t\t\t\"--file-write\",\n\t\t\t\t`\"${source.fsPath}\"`,\n\t\t\t\t`\"${target.fsPath}\"`,\n\t\t\t);\n\n\t\t\tconst promptOptions = {\n\t\t\t\tname: this.productService.nameLong.replace(\"-\", \"\"),\n\t\t\t\ticns:\n\t\t\t\t\tisMacintosh && this.environmentMainService.isBuilt\n\t\t\t\t\t\t? join(\n\t\t\t\t\t\t\t\tdirname(this.environmentMainService.appRoot),\n\t\t\t\t\t\t\t\t`${this.productService.nameShort}.icns`,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t: undefined,\n\t\t\t};\n\n\t\t\tsudoPrompt.exec(\n\t\t\t\tsudoCommand.join(\" \"),\n\t\t\t\tpromptOptions,\n\t\t\t\t(error?, stdout?, stderr?) => {\n\t\t\t\t\tif (stdout) {\n\t\t\t\t\t\tthis.logService.trace(\n\t\t\t\t\t\t\t`[sudo-prompt] received stdout: ${stdout}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (stderr) {\n\t\t\t\t\t\tthis.logService.trace(\n\t\t\t\t\t\t\t`[sudo-prompt] received stderr: ${stderr}`,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\t\t});\n\t}\n\n\tasync isRunningUnderARM64Translation(): Promise<boolean> {\n\t\tif (isLinux || isWindows) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn app.runningUnderARM64Translation;\n\t}\n\n\t@memoize\n\tprivate get cliPath(): string {\n\t\t// Windows\n\t\tif (isWindows) {\n\t\t\tif (this.environmentMainService.isBuilt) {\n\t\t\t\treturn join(\n\t\t\t\t\tdirname(process.execPath),\n\t\t\t\t\t\"bin\",\n\t\t\t\t\t`${this.productService.applicationName}.cmd`,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn join(\n\t\t\t\tthis.environmentMainService.appRoot,\n\t\t\t\t\"scripts\",\n\t\t\t\t\"code-cli.bat\",\n\t\t\t);\n\t\t}\n\n\t\t// Linux\n\t\tif (isLinux) {\n\t\t\tif (this.environmentMainService.isBuilt) {\n\t\t\t\treturn join(\n\t\t\t\t\tdirname(process.execPath),\n\t\t\t\t\t\"bin\",\n\t\t\t\t\t`${this.productService.applicationName}`,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn join(\n\t\t\t\tthis.environmentMainService.appRoot,\n\t\t\t\t\"scripts\",\n\t\t\t\t\"code-cli.sh\",\n\t\t\t);\n\t\t}\n\n\t\t// macOS\n\t\tif (this.environmentMainService.isBuilt) {\n\t\t\treturn join(this.environmentMainService.appRoot, \"bin\", \"code\");\n\t\t}\n\n\t\treturn join(\n\t\t\tthis.environmentMainService.appRoot,\n\t\t\t\"scripts\",\n\t\t\t\"code-cli.sh\",\n\t\t);\n\t}\n\n\tasync getOSStatistics(): Promise<IOSStatistics> {\n\t\treturn {\n\t\t\ttotalmem: totalmem(),\n\t\t\tfreemem: freemem(),\n\t\t\tloadavg: loadavg(),\n\t\t};\n\t}\n\n\tasync getOSProperties(): Promise<IOSProperties> {\n\t\treturn {\n\t\t\tarch: arch(),\n\t\t\tplatform: platform(),\n\t\t\trelease: release(),\n\t\t\ttype: type(),\n\t\t\tcpus: cpus(),\n\t\t};\n\t}\n\n\tasync getOSVirtualMachineHint(): Promise<number> {\n\t\treturn virtualMachineHint.value();\n\t}\n\n\tasync getOSColorScheme(): Promise<IColorScheme> {\n\t\treturn this.themeMainService.getColorScheme();\n\t}\n\n\t// WSL\n\tasync hasWSLFeatureInstalled(): Promise<boolean> {\n\t\treturn isWindows && hasWSLFeatureInstalled();\n\t}\n\n\t//#endregion\n\n\t//#region Process\n\n\tasync getProcessId(\n\t\twindowId: number | undefined,\n\t): Promise<number | undefined> {\n\t\tconst window = this.windowById(undefined, windowId);\n\t\treturn window?.win?.webContents.getOSProcessId();\n\t}\n\n\tasync killProcess(\n\t\twindowId: number | undefined,\n\t\tpid: number,\n\t\tcode: string,\n\t): Promise<void> {\n\t\tprocess.kill(pid, code);\n\t}\n\n\t//#endregion\n\n\t//#region Clipboard\n\n\tasync readClipboardText(\n\t\twindowId: number | undefined,\n\t\ttype?: \"selection\" | \"clipboard\",\n\t): Promise<string> {\n\t\treturn clipboard.readText(type);\n\t}\n\n\tasync writeClipboardText(\n\t\twindowId: number | undefined,\n\t\ttext: string,\n\t\ttype?: \"selection\" | \"clipboard\",\n\t): Promise<void> {\n\t\treturn clipboard.writeText(text, type);\n\t}\n\n\tasync readClipboardFindText(windowId: number | undefined): Promise<string> {\n\t\treturn clipboard.readFindText();\n\t}\n\n\tasync writeClipboardFindText(\n\t\twindowId: number | undefined,\n\t\ttext: string,\n\t): Promise<void> {\n\t\treturn clipboard.writeFindText(text);\n\t}\n\n\tasync writeClipboardBuffer(\n\t\twindowId: number | undefined,\n\t\tformat: string,\n\t\tbuffer: VSBuffer,\n\t\ttype?: \"selection\" | \"clipboard\",\n\t): Promise<void> {\n\t\treturn clipboard.writeBuffer(format, Buffer.from(buffer.buffer), type);\n\t}\n\n\tasync readClipboardBuffer(\n\t\twindowId: number | undefined,\n\t\tformat: string,\n\t): Promise<VSBuffer> {\n\t\treturn VSBuffer.wrap(clipboard.readBuffer(format));\n\t}\n\n\tasync hasClipboard(\n\t\twindowId: number | undefined,\n\t\tformat: string,\n\t\ttype?: \"selection\" | \"clipboard\",\n\t): Promise<boolean> {\n\t\treturn clipboard.has(format, type);\n\t}\n\n\t//#endregion\n\n\t//#region macOS Touchbar\n\n\tasync newWindowTab(): Promise<void> {\n\t\tawait this.windowsMainService.open({\n\t\t\tcontext: OpenContext.API,\n\t\t\tcli: this.environmentMainService.args,\n\t\t\tforceNewTabbedWindow: true,\n\t\t\tforceEmpty: true,\n\t\t\tremoteAuthority:\n\t\t\t\tthis.environmentMainService.args.remote || undefined,\n\t\t});\n\t}\n\n\tasync showPreviousWindowTab(): Promise<void> {\n\t\tMenu.sendActionToFirstResponder(\"selectPreviousTab:\");\n\t}\n\n\tasync showNextWindowTab(): Promise<void> {\n\t\tMenu.sendActionToFirstResponder(\"selectNextTab:\");\n\t}\n\n\tasync moveWindowTabToNewWindow(): Promise<void> {\n\t\tMenu.sendActionToFirstResponder(\"moveTabToNewWindow:\");\n\t}\n\n\tasync mergeAllWindowTabs(): Promise<void> {\n\t\tMenu.sendActionToFirstResponder(\"mergeAllWindows:\");\n\t}\n\n\tasync toggleWindowTabsBar(): Promise<void> {\n\t\tMenu.sendActionToFirstResponder(\"toggleTabBar:\");\n\t}\n\n\tasync updateTouchBar(\n\t\twindowId: number | undefined,\n\t\titems: ISerializableCommandAction[][],\n\t): Promise<void> {\n\t\tconst window = this.codeWindowById(windowId);\n\t\twindow?.updateTouchBar(items);\n\t}\n\n\t//#endregion\n\n\t//#region Lifecycle\n\n\tasync notifyReady(windowId: number | undefined): Promise<void> {\n\t\tconst window = this.codeWindowById(windowId);\n\t\twindow?.setReady();\n\t}\n\n\tasync relaunch(\n\t\twindowId: number | undefined,\n\t\toptions?: IRelaunchOptions,\n\t): Promise<void> {\n\t\treturn this.lifecycleMainService.relaunch(options);\n\t}\n\n\tasync reload(\n\t\twindowId: number | undefined,\n\t\toptions?: { disableExtensions?: boolean },\n\t): Promise<void> {\n\t\tconst window = this.codeWindowById(windowId);\n\t\tif (window) {\n\t\t\t// Special case: support `transient` workspaces by preventing\n\t\t\t// the reload and rather go back to an empty window. Transient\n\t\t\t// workspaces should never restore, even when the user wants\n\t\t\t// to reload.\n\t\t\t// For: https://github.com/microsoft/vscode/issues/119695\n\t\t\tif (isWorkspaceIdentifier(window.openedWorkspace)) {\n\t\t\t\tconst configPath = window.openedWorkspace.configPath;\n\t\t\t\tif (configPath.scheme === Schemas.file) {\n\t\t\t\t\tconst workspace =\n\t\t\t\t\t\tawait this.workspacesManagementMainService.resolveLocalWorkspace(\n\t\t\t\t\t\t\tconfigPath,\n\t\t\t\t\t\t);\n\t\t\t\t\tif (workspace?.transient) {\n\t\t\t\t\t\treturn this.openWindow(window.id, {\n\t\t\t\t\t\t\tforceReuseWindow: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Proceed normally to reload the window\n\t\t\treturn this.lifecycleMainService.reload(\n\t\t\t\twindow,\n\t\t\t\toptions?.disableExtensions !== undefined\n\t\t\t\t\t? { _: [], \"disable-extensions\": options.disableExtensions }\n\t\t\t\t\t: undefined,\n\t\t\t);\n\t\t}\n\t}\n\n\tasync closeWindow(\n\t\twindowId: number | undefined,\n\t\toptions?: INativeHostOptions,\n\t): Promise<void> {\n\t\tconst window = this.windowById(options?.targetWindowId, windowId);\n\t\treturn window?.win?.close();\n\t}\n\n\tasync quit(windowId: number | undefined): Promise<void> {\n\t\t// If the user selected to exit from an extension development host window, do not quit, but just\n\t\t// close the window unless this is the last window that is opened.\n\t\tconst window = this.windowsMainService.getLastActiveWindow();\n\t\tif (\n\t\t\twindow?.isExtensionDevelopmentHost &&\n\t\t\tthis.windowsMainService.getWindowCount() > 1 &&\n\t\t\twindow.win\n\t\t) {\n\t\t\twindow.win.close();\n\t\t}\n\n\t\t// Otherwise: normal quit\n\t\telse {\n\t\t\tthis.lifecycleMainService.quit();\n\t\t}\n\t}\n\n\tasync exit(windowId: number | undefined, code: number): Promise<void> {\n\t\tawait this.lifecycleMainService.kill(code);\n\t}\n\n\t//#endregion\n\n\t//#region Connectivity\n\n\tasync resolveProxy(\n\t\twindowId: number | undefined,\n\t\turl: string,\n\t): Promise<string | undefined> {\n\t\tif (this.environmentMainService.extensionTestsLocationURI) {\n\t\t\tconst testProxy = this.configurationService.getValue<string>(\n\t\t\t\t\"integration-test.http.proxy\",\n\t\t\t);\n\t\t\tif (testProxy) {\n\t\t\t\treturn testProxy;\n\t\t\t}\n\t\t}\n\t\tconst window = this.codeWindowById(windowId);\n\t\tconst session = window?.win?.webContents?.session;\n\n\t\treturn session?.resolveProxy(url);\n\t}\n\n\tasync lookupAuthorization(\n\t\t_windowId: number | undefined,\n\t\tauthInfo: AuthInfo,\n\t): Promise<Credentials | undefined> {\n\t\treturn this.proxyAuthService.lookupAuthorization(authInfo);\n\t}\n\n\tasync lookupKerberosAuthorization(\n\t\t_windowId: number | undefined,\n\t\turl: string,\n\t): Promise<string | undefined> {\n\t\treturn this.requestService.lookupKerberosAuthorization(url);\n\t}\n\n\tasync loadCertificates(_windowId: number | undefined): Promise<string[]> {\n\t\treturn this.requestService.loadCertificates();\n\t}\n\n\tfindFreePort(\n\t\twindowId: number | undefined,\n\t\tstartPort: number,\n\t\tgiveUpAfter: number,\n\t\ttimeout: number,\n\t\tstride = 1,\n\t): Promise<number> {\n\t\treturn findFreePort(startPort, giveUpAfter, timeout, stride);\n\t}\n\n\t//#endregion\n\n\t//#region Development\n\n\tasync openDevTools(\n\t\twindowId: number | undefined,\n\t\toptions?: INativeHostOptions,\n\t): Promise<void> {\n\t\tconst window = this.windowById(options?.targetWindowId, windowId);\n\n\t\tlet mode: \"bottom\" | undefined;\n\t\tif (isLinux && useWindowControlsOverlay(this.configurationService)) {\n\t\t\tmode = \"bottom\"; // TODO@bpasero WCO and devtools collide with default option 'right'\n\t\t}\n\t\twindow?.win?.webContents.openDevTools(mode ? { mode } : undefined);\n\t}\n\n\tasync toggleDevTools(\n\t\twindowId: number | undefined,\n\t\toptions?: INativeHostOptions,\n\t): Promise<void> {\n\t\tconst window = this.windowById(options?.targetWindowId, windowId);\n\t\tconst webContents = window?.win?.webContents;\n\t\tif (!webContents) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\tisLinux &&\n\t\t\tuseWindowControlsOverlay(this.configurationService) &&\n\t\t\t!webContents.isDevToolsOpened()\n\t\t) {\n\t\t\twebContents.openDevTools({ mode: \"bottom\" }); // TODO@bpasero WCO and devtools collide with default option 'right'\n\t\t} else {\n\t\t\twebContents.toggleDevTools();\n\t\t}\n\t}\n\n\t//#endregion\n\n\t// #region Performance\n\n\tasync profileRenderer(\n\t\twindowId: number | undefined,\n\t\tsession: string,\n\t\tduration: number,\n\t): Promise<IV8Profile> {\n\t\tconst window = this.codeWindowById(windowId);\n\t\tif (!window || !window.win) {\n\t\t\tthrow new Error();\n\t\t}\n\n\t\tconst profiler = new WindowProfiler(\n\t\t\twindow.win,\n\t\t\tsession,\n\t\t\tthis.logService,\n\t\t);\n\t\tconst result = await profiler.inspect(duration);\n\t\treturn result;\n\t}\n\n\t// #endregion\n\n\t//#region Registry (windows)\n\n\tasync windowsGetStringRegKey(\n\t\twindowId: number | undefined,\n\t\thive:\n\t\t\t| \"HKEY_CURRENT_USER\"\n\t\t\t| \"HKEY_LOCAL_MACHINE\"\n\t\t\t| \"HKEY_CLASSES_ROOT\"\n\t\t\t| \"HKEY_USERS\"\n\t\t\t| \"HKEY_CURRENT_CONFIG\",\n\t\tpath: string,\n\t\tname: string,\n\t): Promise<string | undefined> {\n\t\tif (!isWindows) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst Registry = await import(\"@vscode/windows-registry\");\n\t\ttry {\n\t\t\treturn Registry.GetStringRegKey(hive, path, name);\n\t\t} catch {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\t//#endregion\n\n\tprivate windowById(\n\t\twindowId: number | undefined,\n\t\tfallbackCodeWindowId?: number,\n\t): ICodeWindow | IAuxiliaryWindow | undefined {\n\t\treturn (\n\t\t\tthis.codeWindowById(windowId) ??\n\t\t\tthis.auxiliaryWindowById(windowId) ??\n\t\t\tthis.codeWindowById(fallbackCodeWindowId)\n\t\t);\n\t}\n\n\tprivate codeWindowById(\n\t\twindowId: number | undefined,\n\t): ICodeWindow | undefined {\n\t\tif (typeof windowId !== \"number\") {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn this.windowsMainService.getWindowById(windowId);\n\t}\n\n\tprivate auxiliaryWindowById(\n\t\twindowId: number | undefined,\n\t): IAuxiliaryWindow | undefined {\n\t\tif (typeof windowId !== \"number\") {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst contents = webContents.fromId(windowId);\n\t\tif (!contents) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn this.auxiliaryWindowsMainService.getWindowByWebContents(\n\t\t\tcontents,\n\t\t);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,YAAY;AACrB,YAAY,QAAQ;AACpB;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,iBAAiB;AAC1B;AAAA,EAGC;AAAA,EAOA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,gBAAgB;AACzB,SAAS,eAAe;AACxB,SAAS,yBAAyB;AAClC,SAAS,SAAS,aAAa;AAC/B,SAAS,kBAAkB;AAC3B,SAAS,SAAS,yBAAyB;AAC3C;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AAEP,SAAS,WAAW;AACpB,SAAS,gBAAgB;AACzB,SAAS,0BAA0B;AACnC,SAAS,UAAU,sBAAsB;AACzC,SAAS,oBAAoB;AAC7B,SAAS,gBAAgB;AAGzB,SAAS,oCAAoC;AAC7C,SAAS,6BAA6B;AAEtC,SAAS,0BAA0B;AACnC,SAAS,+BAA+B;AACxC,SAAS,uBAAuB;AAChC;AAAA,EACC;AAAA,OAEM;AACP,SAAS,mBAAmB;AAC5B,SAAS,uBAAuB;AAEhC,SAAS,sBAAsB;AAC/B,SAAS,8BAA8B;AACvC;AAAA,EAGC;AAAA,OACM;AAEP,SAAS,yBAAyB;AAClC;AAAA,EASC;AAAA,OACM;AAEP;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,wCAAwC;AAOjD,SAAS,yBAAyB;AAS3B,MAAM,yBAAyB;AAAA,EACrC;AACD;AAEO,IAAM,wBAAN,cACE,WAET;AAAA,EAGC,YACuC,oBACS,6BACV,mBACG,sBACE,wBACZ,YACI,gBACE,kBACe,iCACX,sBACN,gBACE,kBACnC;AACD,UAAM;AAbgC;AACS;AACV;AACG;AACE;AACZ;AACI;AACE;AACe;AACX;AACN;AACE;AAAA,EAGrC;AAAA,EAjJD,OA+HA;AAAA;AAAA;AAAA;AAAA,EAsBC,IAAI,WAAkB;AACrB,UAAM,IAAI,MAAM,kCAAkC;AAAA,EACnD;AAAA;AAAA;AAAA,EAMS,sBAAsB,MAAM;AAAA,IACpC,KAAK,mBAAmB;AAAA,IACxB,CAAC,WAAW,OAAO;AAAA,EACpB;AAAA,EAES,sCAAsC,MAAM;AAAA,IACpD,MAAM;AAAA,MACL,KAAK,mBAAmB;AAAA,MACxB,CAAC,EAAE,QAAQ,GAAG,EAAE,OAAO,EAAE,UAAU,OAAO,IAAI,GAAG,EAAE;AAAA,IACpD;AAAA,IACA,MAAM;AAAA,MACL,KAAK,4BAA4B;AAAA,MACjC,CAAC,EAAE,QAAQ,GAAG,EAAE,OAAO,EAAE,UAAU,OAAO,IAAI,GAAG,EAAE;AAAA,IACpD;AAAA,EACD;AAAA,EAES,sBAAsB,MAAM;AAAA,IACpC,MAAM;AAAA,MACL,KAAK,mBAAmB;AAAA,MACxB,CAAC,WAAW,OAAO;AAAA,IACpB;AAAA,IACA,MAAM;AAAA,MACL,KAAK,4BAA4B;AAAA,MACjC,CAAC,WAAW,OAAO;AAAA,IACpB;AAAA,EACD;AAAA,EACS,wBAAwB,MAAM;AAAA,IACtC,MAAM;AAAA,MACL,KAAK,mBAAmB;AAAA,MACxB,CAAC,WAAW,OAAO;AAAA,IACpB;AAAA,IACA,MAAM;AAAA,MACL,KAAK,4BAA4B;AAAA,MACjC,CAAC,WAAW,OAAO;AAAA,IACpB;AAAA,EACD;AAAA,EAES,8BAA8B,MAAM;AAAA,IAC5C,MAAM,IAAI,KAAK,mBAAmB,uBAAuB,CAAC,OAAO;AAAA,MAChE,UAAU,EAAE,OAAO;AAAA,MACnB,YAAY,EAAE;AAAA,IACf,EAAE;AAAA,IACF,MAAM;AAAA,MACL,KAAK,4BAA4B;AAAA,MACjC,CAAC,OAAO,EAAE,UAAU,EAAE,OAAO,IAAI,YAAY,EAAE,WAAW;AAAA,IAC3D;AAAA,EACD;AAAA,EAES,sBAAsB,MAAM;AAAA,IACpC,MAAM;AAAA,MACL;AAAA,MACA;AAAA,MACA,CAAC,OAAO,WAA0B,OAAO;AAAA,IAC1C;AAAA,IACA,CAAC,aAAa,CAAC,CAAC,KAAK,mBAAmB,cAAc,QAAQ;AAAA,EAC/D;AAAA,EACS,uBAAuB,MAAM;AAAA,IACrC,MAAM;AAAA,MACL,MAAM;AAAA,QACL,MAAM;AAAA,UAAI,KAAK,mBAAmB;AAAA,UAAyB,MAC1D,KAAK,mBAAmB,oBAAoB;AAAA,QAC7C;AAAA,QACA,CAAC,WAAW,CAAC,CAAC;AAAA,MACf;AAAA,MACA,CAAC,WAAW,OAAQ;AAAA,IACrB;AAAA,IACA,MAAM;AAAA,MACL,MAAM;AAAA,QACL;AAAA,QACA;AAAA,QACA,CAAC,OAAO,WAA0B,OAAO;AAAA,MAC1C;AAAA,MACA,CAAC,aAAa,CAAC,CAAC,KAAK,mBAAmB,cAAc,QAAQ;AAAA,IAC/D;AAAA,EACD;AAAA,EAES,iCAAiC,MAAM;AAAA,IAC/C,KAAK;AAAA,IACL,MAAM;AAAA,MACL,MAAM;AAAA,QACL,MAAM;AAAA,UACL;AAAA,UACA;AAAA,UACA,CAAC,OAAO,WACP,KAAK,4BAA4B;AAAA,YAChC,OAAO;AAAA,UACR;AAAA,QACF;AAAA,QACA,CAAC,WAAW,CAAC,CAAC;AAAA,MACf;AAAA,MACA,CAAC,WAAW,OAAQ;AAAA,IACrB;AAAA,EACD;AAAA,EACS,kCAAkC,MAAM;AAAA,IAChD,KAAK;AAAA,IACL,MAAM;AAAA,MACL,MAAM;AAAA,QACL,MAAM;AAAA,UACL;AAAA,UACA;AAAA,UACA,CAAC,OAAO,WACP,KAAK,4BAA4B;AAAA,YAChC,OAAO;AAAA,UACR;AAAA,QACF;AAAA,QACA,CAAC,WAAW,CAAC,CAAC;AAAA,MACf;AAAA,MACA,CAAC,WAAW,OAAQ;AAAA,IACrB;AAAA,EACD;AAAA,EAES,gBAAgB,MAAM,qBAAqB,cAAc,QAAQ;AAAA,EAEjE,yBACR,KAAK,iBAAiB;AAAA,EAEN,uBAAuB,KAAK;AAAA,IAC5C,IAAI,QAA8C;AAAA,EACnD;AAAA,EACS,sBAAsB,KAAK,qBAAqB;AAAA,EAEhD,qBAAqB,MAAM;AAAA,IACnC,MAAM;AAAA,MACL,MAAM;AAAA,QACL,MAAM;AAAA,UACL;AAAA,UACA;AAAA,UACA,CACC,OACA,SACA,mBACI;AAAA,QACN;AAAA,QACA,CAAC,mBAAmB;AAInB,iBAAO,EACN,MAAM,QAAQ,cAAc,KAC5B,eAAe,WAAW,KAC1B,eAAe,CAAC,MAAM;AAAA,QAExB;AAAA,MACD;AAAA,MACA,MAAM,qBAAqB,QAAQ,eAAe;AAAA,MAClD,MAAM,qBAAqB,QAAQ,iBAAiB;AAAA,IACrD;AAAA,IACA,MAAM;AAAA,IAAC;AAAA,IACP;AAAA,EACD;AAAA,EAcA,MAAM,WACL,UACA,SAC6D;AAC7D,UAAM,cAAc,KAAK,mBACvB,WAAW,EACX,IAAI,CAAC,YAAY;AAAA,MACjB,IAAI,OAAO;AAAA,MACX,WACC,OAAO,mBACP;AAAA,QACC,OAAO;AAAA,QACP,OAAO;AAAA,MACR;AAAA,MACD,OAAO,OAAO,KAAK,SAAS,KAAK;AAAA,MACjC,UAAU,OAAO,uBAAuB;AAAA,MACxC,OAAO,OAAO,iBAAiB;AAAA,IAChC,EAAE;AAEH,UAAM,mBAAmB,CAAC;AAC1B,QAAI,QAAQ,yBAAyB;AACpC,uBAAiB;AAAA,QAChB,GAAG,KAAK,4BACN,WAAW,EACX,IAAI,CAAC,YAAY;AAAA,UACjB,IAAI,OAAO;AAAA,UACX,UAAU,OAAO;AAAA,UACjB,OAAO,OAAO,KAAK,SAAS,KAAK;AAAA,UACjC,UAAU,OAAO,uBAAuB;AAAA,QACzC,EAAE;AAAA,MACJ;AAAA,IACD;AAEA,WAAO,CAAC,GAAG,aAAa,GAAG,gBAAgB;AAAA,EAC5C;AAAA,EAEA,MAAM,eAAe,UAA+C;AACnE,WAAO,KAAK,mBAAmB,eAAe;AAAA,EAC/C;AAAA,EAEA,MAAM,kBACL,UAC8B;AAC9B,UAAM,eACL,KAAK,mBAAmB,iBAAiB,KACzC,KAAK,mBAAmB,oBAAoB;AAC7C,QAAI,cAAc;AACjB,aAAO,aAAa;AAAA,IACrB;AAEA,WAAO;AAAA,EACR;AAAA,EAEA,MAAM,0BAA2D;AAChE,UAAM,eACL,KAAK,mBAAmB,iBAAiB,KACzC,KAAK,mBAAmB,oBAAoB;AAC7C,QAAI,cAAc;AACjB,aAAO,aAAa,UAAU;AAAA,IAC/B;AACA,WAAO;AAAA,EACR;AAAA,EAWA,WACC,UACA,MACA,MACgB;AAChB,QAAI,MAAM,QAAQ,IAAI,GAAG;AACxB,aAAO,KAAK,aAAa,UAAU,MAAM,IAAI;AAAA,IAC9C;AAEA,WAAO,KAAK,kBAAkB,UAAU,IAAI;AAAA,EAC7C;AAAA,EAEA,MAAc,aACb,UACA,QACA,UAA8B,uBAAO,OAAO,IAAI,GAChC;AAChB,QAAI,OAAO,SAAS,GAAG;AACtB,YAAM,KAAK,mBAAmB,KAAK;AAAA,QAClC,SAAS,YAAY;AAAA,QACrB,iBAAiB;AAAA,QACjB,YAAY;AAAA,QACZ,KAAK,KAAK,uBAAuB;AAAA,QACjC,gBAAgB,QAAQ;AAAA,QACxB,kBAAkB,QAAQ;AAAA,QAC1B,iBAAiB,QAAQ;AAAA,QACzB,UAAU,QAAQ;AAAA,QAClB,WAAW,QAAQ;AAAA,QACnB,SAAS,QAAQ;AAAA,QACjB,cAAc,QAAQ;AAAA,QACtB,eAAe,QAAQ;AAAA,QACvB,mBAAmB,QAAQ;AAAA,QAC3B,iBAAiB,QAAQ,mBAAmB;AAAA,QAC5C,cAAc,QAAQ;AAAA,QACtB,kBAAkB,QAAQ;AAAA,MAC3B,CAAC;AAAA,IACF;AAAA,EACD;AAAA,EAEA,MAAc,kBACb,UACA,SACgB;AAChB,UAAM,KAAK,mBAAmB;AAAA,MAC7B;AAAA,QACC,SAAS,YAAY;AAAA,QACrB,iBAAiB;AAAA,MAClB;AAAA,MACA;AAAA,IACD;AAAA,EACD;AAAA,EAEA,MAAM,aACL,UACA,SACmB;AACnB,UAAM,SAAS,KAAK,WAAW,SAAS,gBAAgB,QAAQ;AAChE,WAAO,QAAQ,gBAAgB;AAAA,EAChC;AAAA,EAEA,MAAM,iBACL,UACA,SACgB;AAChB,UAAM,SAAS,KAAK,WAAW,SAAS,gBAAgB,QAAQ;AAChE,YAAQ,iBAAiB;AAAA,EAC1B;AAAA,EAEA,MAAM,uBACL,UACA,SACgB;AAChB,UAAM,SAAS,KAAK,WAAW,SAAS,gBAAgB,QAAQ;AAChE,YAAQ,uBAAuB;AAAA,EAChC;AAAA,EAEA,MAAM,qBACL,UACoE;AACpE,UAAM,QAAQ,OAAO,qBAAqB;AAC1C,UAAM,UAAU,OAAO,uBAAuB,KAAK;AAEnD,WAAO,EAAE,OAAO,SAAS,QAAQ,OAAO;AAAA,EACzC;AAAA,EAEA,MAAM,YACL,UACA,SACmB;AACnB,UAAM,SAAS,KAAK,WAAW,SAAS,gBAAgB,QAAQ;AAChE,WAAO,QAAQ,KAAK,YAAY,KAAK;AAAA,EACtC;AAAA,EAEA,MAAM,eACL,UACA,SACgB;AAChB,UAAM,SAAS,KAAK,WAAW,SAAS,gBAAgB,QAAQ;AAChE,YAAQ,KAAK,SAAS;AAAA,EACvB;AAAA,EAEA,MAAM,iBACL,UACA,SACgB;AAChB,UAAM,SAAS,KAAK,WAAW,SAAS,gBAAgB,QAAQ;AAChE,YAAQ,KAAK,WAAW;AAAA,EACzB;AAAA,EAEA,MAAM,eACL,UACA,SACgB;AAChB,UAAM,SAAS,KAAK,WAAW,SAAS,gBAAgB,QAAQ;AAChE,YAAQ,KAAK,SAAS;AAAA,EACvB;AAAA,EAEA,MAAM,cACL,UACA,SACgB;AAChB,UAAM,SAAS,KAAK,WAAW,SAAS,gBAAgB,QAAQ;AAChE,YAAQ,KAAK,QAAQ;AAAA,EACtB;AAAA,EAEA,MAAM,eACL,UACA,UACA,SACgB;AAChB,UAAM,SAAS,KAAK,WAAW,SAAS,gBAAgB,QAAQ;AAChE,QAAI,QAAQ,KAAK;AAChB,UAAI,OAAO,IAAI,aAAa,GAAG;AAC9B,cAAM,uBAAuB,MAAM;AAAA,UAClC,MAAM;AAAA,YACL,MAAM;AAAA,cACL,OAAO;AAAA,cACP;AAAA,YACD;AAAA,UACD;AAAA,QACD;AACA,eAAO,IAAI,cAAc,KAAK;AAC9B,cAAM;AAAA,MACP;AAEA,aAAO,IAAI,UAAU,QAAQ;AAAA,IAC9B;AAAA,EACD;AAAA,EAEA,MAAM,qBACL,UACA,SAKgB;AAChB,UAAM,SAAS,KAAK,WAAW,SAAS,gBAAgB,QAAQ;AAChE,YAAQ,qBAAqB,OAAO;AAAA,EACrC;AAAA,EAEA,MAAM,YACL,UACA,SACgB;AAChB,UAAM,SAAS,KAAK,WAAW,SAAS,gBAAgB,QAAQ;AAChE,YAAQ,MAAM,EAAE,OAAO,SAAS,SAAS,MAAM,CAAC;AAAA,EACjD;AAAA,EAEA,MAAM,eACL,UACA,OACA,QACgB;AAChB,UAAM,SAAS,KAAK,eAAe,QAAQ;AAC3C,QAAI,QAAQ,KAAK;AAChB,YAAM,CAAC,aAAa,YAAY,IAAI,OAAO,IAAI,QAAQ;AACvD,YAAM,CAAC,gBAAgB,eAAe,IACrC,OAAO,IAAI,eAAe;AAC3B,YAAM,CAAC,mBAAmB,kBAAkB,IAAI;AAAA,QAC/C,SAAS;AAAA,QACT,UAAU;AAAA,MACX;AACA,YAAM,CAAC,gBAAgB,eAAe,IAAI;AAAA,QACzC,KAAK,IAAI,aAAa,iBAAiB;AAAA,QACvC,KAAK,IAAI,cAAc,kBAAkB;AAAA,MAC1C;AAEA,UACC,mBAAmB,qBACnB,oBAAoB,oBACnB;AACD,eAAO,IAAI;AAAA,UACV;AAAA,UACA;AAAA,QACD;AAAA,MACD;AACA,UACC,gBAAgB,kBAChB,iBAAiB,iBAChB;AACD,eAAO,IAAI,QAAQ,gBAAgB,eAAe;AAAA,MACnD;AAAA,IACD;AAAA,EACD;AAAA,EAEA,MAAM,iBACL,UACA,QACgB;AAChB,SAAK,iBAAiB,iBAAiB,UAAU,MAAM;AAAA,EACxD;AAAA;AAAA;AAAA,EAMA,MAAM,oBAAoB,UAA6C;AACtE,UAAM,EAAE,QAAQ,OAAO,IAAI,MAAM,KAAK,oBAAoB;AAG1D,QAAI;AACH,YAAM,EAAE,aAAa,IAAI,MAAM,eAAe,KAAK,MAAM;AACzD,UAAI,gBAAgB,CAAC,aAAa,UAAU;AAC3C,cAAM,qBAAqB,MAAM,SAAS,MAAM;AAChD,YAAI,WAAW,oBAAoB;AAClC;AAAA,QACD;AAAA,MACD;AAGA,YAAM,GAAG,SAAS,OAAO,MAAM;AAAA,IAChC,SAAS,OAAO;AACf,UAAI,MAAM,SAAS,UAAU;AAC5B,cAAM;AAAA,MACP;AAAA,IACD;AAEA,QAAI;AACH,YAAM,GAAG,SAAS,QAAQ,QAAQ,MAAM;AAAA,IACzC,SAAS,OAAO;AACf,UAAI,MAAM,SAAS,YAAY,MAAM,SAAS,UAAU;AACvD,cAAM;AAAA,MACP;AAEA,YAAM,EAAE,SAAS,IAAI,MAAM,KAAK,eAAe,UAAU;AAAA,QACxD,MAAM;AAAA,QACN,SAAS;AAAA,UACR;AAAA,UACA;AAAA,UACA,KAAK,eAAe;AAAA,QACrB;AAAA,QACA,SAAS;AAAA,UACR;AAAA,YACC,EAAE,KAAK,MAAM,SAAS,CAAC,uBAAuB,EAAE;AAAA,YAChD;AAAA,UACD;AAAA,UACA,SAAS,UAAU,QAAQ;AAAA,QAC5B;AAAA,MACD,CAAC;AAED,UAAI,aAAa,GAAgB;AAChC,cAAM,IAAI,kBAAkB;AAAA,MAC7B;AAEA,UAAI;AACH,cAAM,UAAU,uEAAwE,MAAM,MAAQ,MAAM;AAC5G,cAAM,UAAU,IAAI,EAAE,OAAO;AAAA,MAC9B,SAASA,QAAO;AACf,cAAM,IAAI;AAAA,UACT;AAAA,YACC;AAAA,YACA;AAAA,YACA;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EAEA,MAAM,sBAAsB,UAA6C;AACxE,UAAM,EAAE,OAAO,IAAI,MAAM,KAAK,oBAAoB;AAElD,QAAI;AACH,YAAM,GAAG,SAAS,OAAO,MAAM;AAAA,IAChC,SAAS,OAAO;AACf,cAAQ,MAAM,MAAM;AAAA,QACnB,KAAK,UAAU;AACd,gBAAM,EAAE,SAAS,IAAI,MAAM,KAAK,eAAe,UAAU;AAAA,YACxD,MAAM;AAAA,YACN,SAAS;AAAA,cACR;AAAA,cACA;AAAA,cACA,KAAK,eAAe;AAAA,YACrB;AAAA,YACA,SAAS;AAAA,cACR;AAAA,gBACC;AAAA,kBACC,KAAK;AAAA,kBACL,SAAS,CAAC,uBAAuB;AAAA,gBAClC;AAAA,gBACA;AAAA,cACD;AAAA,cACA,SAAS,UAAU,QAAQ;AAAA,YAC5B;AAAA,UACD,CAAC;AAED,cAAI,aAAa,GAAgB;AAChC,kBAAM,IAAI,kBAAkB;AAAA,UAC7B;AAEA,cAAI;AACH,kBAAM,UAAU,wCAAyC,MAAM;AAC/D,kBAAM,UAAU,IAAI,EAAE,OAAO;AAAA,UAC9B,SAASA,QAAO;AACf,kBAAM,IAAI;AAAA,cACT;AAAA,gBACC;AAAA,gBACA;AAAA,gBACA;AAAA,cACD;AAAA,YACD;AAAA,UACD;AACA;AAAA,QACD;AAAA,QACA,KAAK;AACJ;AAAA;AAAA,QACD;AACC,gBAAM;AAAA,MACR;AAAA,IACD;AAAA,EACD;AAAA,EAEA,MAAc,sBAGX;AACF,UAAM,SAAS;AAAA,MACd,KAAK,uBAAuB;AAAA,MAC5B;AAAA,MACA;AAAA,IACD;AACA,UAAM,SAAS,kBAAkB,KAAK,eAAe,eAAe;AAGpE,UAAM,eAAe,MAAM,SAAS,OAAO,MAAM;AACjD,QAAI,CAAC,cAAc;AAClB,YAAM,IAAI;AAAA,QACT;AAAA,UACC;AAAA,UACA;AAAA,UACA;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAEA,WAAO,EAAE,QAAQ,OAAO;AAAA,EACzB;AAAA;AAAA;AAAA,EAMA,MAAM,eACL,UACA,SACiC;AACjC,UAAM,SAAS,KAAK,WAAW,SAAS,gBAAgB,QAAQ;AAChE,WAAO,KAAK,kBAAkB;AAAA,MAC7B;AAAA,MACA,QAAQ,OAAO;AAAA,IAChB;AAAA,EACD;AAAA,EAEA,MAAM,eACL,UACA,SACiC;AACjC,UAAM,SAAS,KAAK,WAAW,SAAS,gBAAgB,QAAQ;AAChE,WAAO,KAAK,kBAAkB;AAAA,MAC7B;AAAA,MACA,QAAQ,OAAO;AAAA,IAChB;AAAA,EACD;AAAA,EAEA,MAAM,eACL,UACA,SACiC;AACjC,UAAM,SAAS,KAAK,WAAW,SAAS,gBAAgB,QAAQ;AAChE,WAAO,KAAK,kBAAkB;AAAA,MAC7B;AAAA,MACA,QAAQ,OAAO;AAAA,IAChB;AAAA,EACD;AAAA,EAEA,MAAM,sBACL,UACA,SACgB;AAChB,UAAM,QAAQ,MAAM,KAAK,kBAAkB,eAAe,OAAO;AACjE,QAAI,OAAO;AACV,YAAM,KAAK;AAAA,QACV,MAAM,QAAQ;AAAA,UACb,MAAM;AAAA,YAAI,OAAO,SACf,MAAM,eAAe,gBAAgB,IAAI,IACvC,EAAE,WAAW,IAAI,KAAK,IAAI,EAAE,IAC5B,EAAE,SAAS,IAAI,KAAK,IAAI,EAAE;AAAA,UAC9B;AAAA,QACD;AAAA,QACA;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EAEA,MAAM,kBACL,UACA,SACgB;AAChB,UAAM,QAAQ,MAAM,KAAK,kBAAkB,WAAW,OAAO;AAC7D,QAAI,OAAO;AACV,YAAM,KAAK;AAAA,QACV,MAAM,IAAI,CAAC,UAAU,EAAE,WAAW,IAAI,KAAK,IAAI,EAAE,EAAE;AAAA,QACnD;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EAEA,MAAM,gBACL,UACA,SACgB;AAChB,UAAM,QAAQ,MAAM,KAAK,kBAAkB,SAAS,OAAO;AAC3D,QAAI,OAAO;AACV,YAAM,KAAK;AAAA,QACV,MAAM,IAAI,CAAC,UAAU,EAAE,SAAS,IAAI,KAAK,IAAI,EAAE,EAAE;AAAA,QACjD;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EAEA,MAAM,qBACL,UACA,SACgB;AAChB,UAAM,QAAQ,MAAM,KAAK,kBAAkB,cAAc,OAAO;AAChE,QAAI,OAAO;AACV,YAAM,KAAK;AAAA,QACV,MAAM,IAAI,CAAC,UAAU,EAAE,cAAc,IAAI,KAAK,IAAI,EAAE,EAAE;AAAA,QACtD;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EAEA,MAAc,aACb,UACA,SACA,UACgB;AAChB,UAAM,KAAK,mBAAmB,KAAK;AAAA,MAClC,SAAS,YAAY;AAAA,MACrB,iBAAiB;AAAA,MACjB,KAAK,KAAK,uBAAuB;AAAA,MACjC,YAAY;AAAA,MACZ,gBAAgB,QAAQ;AAAA;AAAA,IAEzB,CAAC;AAAA,EACF;AAAA;AAAA;AAAA,EAMA,MAAM,iBACL,UACA,MACgB;AAChB,UAAM,iBAAiB,IAAI;AAAA,EAC5B;AAAA,EAEA,MAAM,uBACL,UACA,MACA,SACgB;AAChB,UAAM,SAAS,KAAK,WAAW,SAAS,gBAAgB,QAAQ;AAChE,YAAQ,uBAAuB,IAAI;AAAA,EACpC;AAAA,EAEA,MAAM,kBACL,UACA,QACA,SACgB;AAChB,UAAM,SAAS,KAAK,WAAW,SAAS,gBAAgB,QAAQ;AAChE,YAAQ,kBAAkB,MAAM;AAAA,EACjC;AAAA,EAEA,MAAM,aACL,UACA,KACA,oBACmB;AACnB,SAAK,uBAAuB,2BAA2B;AACvD,QAAI;AACH,UAAI,kBAAkB,KAAK,QAAQ,MAAM,QAAQ,KAAK,GAAG;AACxD,aAAK,oBAAoB,KAAK,kBAAkB;AAAA,MACjD,OAAO;AACN,cAAM,aAAa,GAAG;AAAA,MACvB;AAAA,IACD,UAAE;AACD,WAAK,uBAAuB,6BAA6B;AAAA,IAC1D;AAEA,WAAO;AAAA,EACR;AAAA,EAEA,MAAc,oBACb,KACA,oBACgB;AAChB,UAAM,oBACL,sBACA,KAAK,qBAAqB;AAAA,MACzB;AAAA,IACD;AACD,QAAI,CAAC,mBAAmB;AACvB,aAAO,MAAM,aAAa,GAAG;AAAA,IAC9B;AAEA,QACC,kBAAkB,SAAS,MAAM,GAAG,KACpC,kBAAkB,SAAS,MAAM,GAAG,GACnC;AACD,YAAM,oBAAoB,MAAM,SAAS,OAAO,iBAAiB;AACjE,UAAI,CAAC,mBAAmB;AACvB,aAAK,WAAW;AAAA,UACf,oDAAoD,iBAAiB;AAAA,QACtE;AACA,eAAO,MAAM,aAAa,GAAG;AAAA,MAC9B;AAAA,IACD;AAEA,QAAI;AACH,YAAM,EAAE,SAAS,KAAK,IAAI,MAAM,OAAO,MAAM;AAC7C,YAAM,MAAM,MAAM,KAAK,KAAK;AAAA,QAC3B,KAAK;AAAA;AAAA;AAAA;AAAA,UAIJ,MAAM,OAAO,OAAO,KAAK,MAAM,iBAAiB,IAC7C,KAAK,KACL,iBACD,IACC;AAAA,QACJ;AAAA,MACD,CAAC;AAED,UAAI,QAAQ,KAAK,QAAQ,CAAC,SAAiB;AAC1C,aAAK,WAAW;AAAA,UACf,iCAAiC,GAAG,oBAAoB,iBAAiB,MAAM,KAAK,SAAS,CAAC;AAAA,QAC/F;AACA,eAAO,MAAM,aAAa,GAAG;AAAA,MAC9B,CAAC;AAAA,IACF,SAAS,OAAO;AACf,WAAK,WAAW;AAAA,QACf,gCAAgC,GAAG,oBAAoB,iBAAiB,YAAY,KAAK;AAAA,MAC1F;AACA,aAAO,MAAM,aAAa,GAAG;AAAA,IAC9B;AAAA,EACD;AAAA,EAEA,gBACC,UACA,UACgB;AAChB,WAAO,MAAM,UAAU,QAAQ;AAAA,EAChC;AAAA,EAEA,MAAM,UAA4B;AACjC,QAAI;AACJ,QAAI,WAAW;AACd,iBAAW,MAAM,OAAO,oBAAoB,GAAG,QAAQ;AAAA,IACxD,OAAO;AACN,gBAAU,QAAQ,SAAS,MAAM;AAAA,IAClC;AAEA,WAAO;AAAA,EACR;AAAA,EAEA,MAAM,cACL,UACA,QACA,QACA,SACgB;AAChB,UAAM,aAAa,MAAM,OAAO,qBAAqB;AAErD,WAAO,IAAI,QAAc,CAACC,UAAS,WAAW;AAC7C,YAAM,cAAwB,CAAC,IAAI,KAAK,OAAO,GAAG;AAClD,UAAI,SAAS,QAAQ;AACpB,oBAAY,KAAK,cAAc;AAAA,MAChC;AAEA,kBAAY;AAAA,QACX;AAAA,QACA,IAAI,OAAO,MAAM;AAAA,QACjB,IAAI,OAAO,MAAM;AAAA,MAClB;AAEA,YAAM,gBAAgB;AAAA,QACrB,MAAM,KAAK,eAAe,SAAS,QAAQ,KAAK,EAAE;AAAA,QAClD,MACC,eAAe,KAAK,uBAAuB,UACxC;AAAA,UACA,QAAQ,KAAK,uBAAuB,OAAO;AAAA,UAC3C,GAAG,KAAK,eAAe,SAAS;AAAA,QACjC,IACC;AAAA,MACL;AAEA,iBAAW;AAAA,QACV,YAAY,KAAK,GAAG;AAAA,QACpB;AAAA,QACA,CAAC,OAAQ,QAAS,WAAY;AAC7B,cAAI,QAAQ;AACX,iBAAK,WAAW;AAAA,cACf,kCAAkC,MAAM;AAAA,YACzC;AAAA,UACD;AAEA,cAAI,QAAQ;AACX,iBAAK,WAAW;AAAA,cACf,kCAAkC,MAAM;AAAA,YACzC;AAAA,UACD;AAEA,cAAI,OAAO;AACV,mBAAO,KAAK;AAAA,UACb,OAAO;AACN,YAAAA,SAAQ,MAAS;AAAA,UAClB;AAAA,QACD;AAAA,MACD;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEA,MAAM,iCAAmD;AACxD,QAAI,WAAW,WAAW;AACzB,aAAO;AAAA,IACR;AAEA,WAAO,IAAI;AAAA,EACZ;AAAA,EAGA,IAAY,UAAkB;AAE7B,QAAI,WAAW;AACd,UAAI,KAAK,uBAAuB,SAAS;AACxC,eAAO;AAAA,UACN,QAAQ,QAAQ,QAAQ;AAAA,UACxB;AAAA,UACA,GAAG,KAAK,eAAe,eAAe;AAAA,QACvC;AAAA,MACD;AAEA,aAAO;AAAA,QACN,KAAK,uBAAuB;AAAA,QAC5B;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAGA,QAAI,SAAS;AACZ,UAAI,KAAK,uBAAuB,SAAS;AACxC,eAAO;AAAA,UACN,QAAQ,QAAQ,QAAQ;AAAA,UACxB;AAAA,UACA,GAAG,KAAK,eAAe,eAAe;AAAA,QACvC;AAAA,MACD;AAEA,aAAO;AAAA,QACN,KAAK,uBAAuB;AAAA,QAC5B;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAGA,QAAI,KAAK,uBAAuB,SAAS;AACxC,aAAO,KAAK,KAAK,uBAAuB,SAAS,OAAO,MAAM;AAAA,IAC/D;AAEA,WAAO;AAAA,MACN,KAAK,uBAAuB;AAAA,MAC5B;AAAA,MACA;AAAA,IACD;AAAA,EACD;AAAA,EAEA,MAAM,kBAA0C;AAC/C,WAAO;AAAA,MACN,UAAU,SAAS;AAAA,MACnB,SAAS,QAAQ;AAAA,MACjB,SAAS,QAAQ;AAAA,IAClB;AAAA,EACD;AAAA,EAEA,MAAM,kBAA0C;AAC/C,WAAO;AAAA,MACN,MAAM,KAAK;AAAA,MACX,UAAU,SAAS;AAAA,MACnB,SAAS,QAAQ;AAAA,MACjB,MAAM,KAAK;AAAA,MACX,MAAM,KAAK;AAAA,IACZ;AAAA,EACD;AAAA,EAEA,MAAM,0BAA2C;AAChD,WAAO,mBAAmB,MAAM;AAAA,EACjC;AAAA,EAEA,MAAM,mBAA0C;AAC/C,WAAO,KAAK,iBAAiB,eAAe;AAAA,EAC7C;AAAA;AAAA,EAGA,MAAM,yBAA2C;AAChD,WAAO,aAAa,uBAAuB;AAAA,EAC5C;AAAA;AAAA;AAAA,EAMA,MAAM,aACL,UAC8B;AAC9B,UAAM,SAAS,KAAK,WAAW,QAAW,QAAQ;AAClD,WAAO,QAAQ,KAAK,YAAY,eAAe;AAAA,EAChD;AAAA,EAEA,MAAM,YACL,UACA,KACA,MACgB;AAChB,YAAQ,KAAK,KAAK,IAAI;AAAA,EACvB;AAAA;AAAA;AAAA,EAMA,MAAM,kBACL,UACAC,OACkB;AAClB,WAAO,UAAU,SAASA,KAAI;AAAA,EAC/B;AAAA,EAEA,MAAM,mBACL,UACA,MACAA,OACgB;AAChB,WAAO,UAAU,UAAU,MAAMA,KAAI;AAAA,EACtC;AAAA,EAEA,MAAM,sBAAsB,UAA+C;AAC1E,WAAO,UAAU,aAAa;AAAA,EAC/B;AAAA,EAEA,MAAM,uBACL,UACA,MACgB;AAChB,WAAO,UAAU,cAAc,IAAI;AAAA,EACpC;AAAA,EAEA,MAAM,qBACL,UACA,QACA,QACAA,OACgB;AAChB,WAAO,UAAU,YAAY,QAAQ,OAAO,KAAK,OAAO,MAAM,GAAGA,KAAI;AAAA,EACtE;AAAA,EAEA,MAAM,oBACL,UACA,QACoB;AACpB,WAAO,SAAS,KAAK,UAAU,WAAW,MAAM,CAAC;AAAA,EAClD;AAAA,EAEA,MAAM,aACL,UACA,QACAA,OACmB;AACnB,WAAO,UAAU,IAAI,QAAQA,KAAI;AAAA,EAClC;AAAA;AAAA;AAAA,EAMA,MAAM,eAA8B;AACnC,UAAM,KAAK,mBAAmB,KAAK;AAAA,MAClC,SAAS,YAAY;AAAA,MACrB,KAAK,KAAK,uBAAuB;AAAA,MACjC,sBAAsB;AAAA,MACtB,YAAY;AAAA,MACZ,iBACC,KAAK,uBAAuB,KAAK,UAAU;AAAA,IAC7C,CAAC;AAAA,EACF;AAAA,EAEA,MAAM,wBAAuC;AAC5C,SAAK,2BAA2B,oBAAoB;AAAA,EACrD;AAAA,EAEA,MAAM,oBAAmC;AACxC,SAAK,2BAA2B,gBAAgB;AAAA,EACjD;AAAA,EAEA,MAAM,2BAA0C;AAC/C,SAAK,2BAA2B,qBAAqB;AAAA,EACtD;AAAA,EAEA,MAAM,qBAAoC;AACzC,SAAK,2BAA2B,kBAAkB;AAAA,EACnD;AAAA,EAEA,MAAM,sBAAqC;AAC1C,SAAK,2BAA2B,eAAe;AAAA,EAChD;AAAA,EAEA,MAAM,eACL,UACA,OACgB;AAChB,UAAM,SAAS,KAAK,eAAe,QAAQ;AAC3C,YAAQ,eAAe,KAAK;AAAA,EAC7B;AAAA;AAAA;AAAA,EAMA,MAAM,YAAY,UAA6C;AAC9D,UAAM,SAAS,KAAK,eAAe,QAAQ;AAC3C,YAAQ,SAAS;AAAA,EAClB;AAAA,EAEA,MAAM,SACL,UACA,SACgB;AAChB,WAAO,KAAK,qBAAqB,SAAS,OAAO;AAAA,EAClD;AAAA,EAEA,MAAM,OACL,UACA,SACgB;AAChB,UAAM,SAAS,KAAK,eAAe,QAAQ;AAC3C,QAAI,QAAQ;AAMX,UAAI,sBAAsB,OAAO,eAAe,GAAG;AAClD,cAAM,aAAa,OAAO,gBAAgB;AAC1C,YAAI,WAAW,WAAW,QAAQ,MAAM;AACvC,gBAAM,YACL,MAAM,KAAK,gCAAgC;AAAA,YAC1C;AAAA,UACD;AACD,cAAI,WAAW,WAAW;AACzB,mBAAO,KAAK,WAAW,OAAO,IAAI;AAAA,cACjC,kBAAkB;AAAA,YACnB,CAAC;AAAA,UACF;AAAA,QACD;AAAA,MACD;AAGA,aAAO,KAAK,qBAAqB;AAAA,QAChC;AAAA,QACA,SAAS,sBAAsB,SAC5B,EAAE,GAAG,CAAC,GAAG,sBAAsB,QAAQ,kBAAkB,IACzD;AAAA,MACJ;AAAA,IACD;AAAA,EACD;AAAA,EAEA,MAAM,YACL,UACA,SACgB;AAChB,UAAM,SAAS,KAAK,WAAW,SAAS,gBAAgB,QAAQ;AAChE,WAAO,QAAQ,KAAK,MAAM;AAAA,EAC3B;AAAA,EAEA,MAAM,KAAK,UAA6C;AAGvD,UAAM,SAAS,KAAK,mBAAmB,oBAAoB;AAC3D,QACC,QAAQ,8BACR,KAAK,mBAAmB,eAAe,IAAI,KAC3C,OAAO,KACN;AACD,aAAO,IAAI,MAAM;AAAA,IAClB,OAGK;AACJ,WAAK,qBAAqB,KAAK;AAAA,IAChC;AAAA,EACD;AAAA,EAEA,MAAM,KAAK,UAA8B,MAA6B;AACrE,UAAM,KAAK,qBAAqB,KAAK,IAAI;AAAA,EAC1C;AAAA;AAAA;AAAA,EAMA,MAAM,aACL,UACA,KAC8B;AAC9B,QAAI,KAAK,uBAAuB,2BAA2B;AAC1D,YAAM,YAAY,KAAK,qBAAqB;AAAA,QAC3C;AAAA,MACD;AACA,UAAI,WAAW;AACd,eAAO;AAAA,MACR;AAAA,IACD;AACA,UAAM,SAAS,KAAK,eAAe,QAAQ;AAC3C,UAAM,UAAU,QAAQ,KAAK,aAAa;AAE1C,WAAO,SAAS,aAAa,GAAG;AAAA,EACjC;AAAA,EAEA,MAAM,oBACL,WACA,UACmC;AACnC,WAAO,KAAK,iBAAiB,oBAAoB,QAAQ;AAAA,EAC1D;AAAA,EAEA,MAAM,4BACL,WACA,KAC8B;AAC9B,WAAO,KAAK,eAAe,4BAA4B,GAAG;AAAA,EAC3D;AAAA,EAEA,MAAM,iBAAiB,WAAkD;AACxE,WAAO,KAAK,eAAe,iBAAiB;AAAA,EAC7C;AAAA,EAEA,aACC,UACA,WACA,aACA,SACA,SAAS,GACS;AAClB,WAAO,aAAa,WAAW,aAAa,SAAS,MAAM;AAAA,EAC5D;AAAA;AAAA;AAAA,EAMA,MAAM,aACL,UACA,SACgB;AAChB,UAAM,SAAS,KAAK,WAAW,SAAS,gBAAgB,QAAQ;AAEhE,QAAI;AACJ,QAAI,WAAW,yBAAyB,KAAK,oBAAoB,GAAG;AACnE,aAAO;AAAA,IACR;AACA,YAAQ,KAAK,YAAY,aAAa,OAAO,EAAE,KAAK,IAAI,MAAS;AAAA,EAClE;AAAA,EAEA,MAAM,eACL,UACA,SACgB;AAChB,UAAM,SAAS,KAAK,WAAW,SAAS,gBAAgB,QAAQ;AAChE,UAAMC,eAAc,QAAQ,KAAK;AACjC,QAAI,CAACA,cAAa;AACjB;AAAA,IACD;AAEA,QACC,WACA,yBAAyB,KAAK,oBAAoB,KAClD,CAACA,aAAY,iBAAiB,GAC7B;AACD,MAAAA,aAAY,aAAa,EAAE,MAAM,SAAS,CAAC;AAAA,IAC5C,OAAO;AACN,MAAAA,aAAY,eAAe;AAAA,IAC5B;AAAA,EACD;AAAA;AAAA;AAAA,EAMA,MAAM,gBACL,UACA,SACA,UACsB;AACtB,UAAM,SAAS,KAAK,eAAe,QAAQ;AAC3C,QAAI,CAAC,UAAU,CAAC,OAAO,KAAK;AAC3B,YAAM,IAAI,MAAM;AAAA,IACjB;AAEA,UAAM,WAAW,IAAI;AAAA,MACpB,OAAO;AAAA,MACP;AAAA,MACA,KAAK;AAAA,IACN;AACA,UAAM,SAAS,MAAM,SAAS,QAAQ,QAAQ;AAC9C,WAAO;AAAA,EACR;AAAA;AAAA;AAAA,EAMA,MAAM,uBACL,UACA,MAMA,MACA,MAC8B;AAC9B,QAAI,CAAC,WAAW;AACf,aAAO;AAAA,IACR;AAEA,UAAM,WAAW,MAAM,OAAO,0BAA0B;AACxD,QAAI;AACH,aAAO,SAAS,gBAAgB,MAAM,MAAM,IAAI;AAAA,IACjD,QAAQ;AACP,aAAO;AAAA,IACR;AAAA,EACD;AAAA;AAAA,EAIQ,WACP,UACA,sBAC6C;AAC7C,WACC,KAAK,eAAe,QAAQ,KAC5B,KAAK,oBAAoB,QAAQ,KACjC,KAAK,eAAe,oBAAoB;AAAA,EAE1C;AAAA,EAEQ,eACP,UAC0B;AAC1B,QAAI,OAAO,aAAa,UAAU;AACjC,aAAO;AAAA,IACR;AAEA,WAAO,KAAK,mBAAmB,cAAc,QAAQ;AAAA,EACtD;AAAA,EAEQ,oBACP,UAC+B;AAC/B,QAAI,OAAO,aAAa,UAAU;AACjC,aAAO;AAAA,IACR;AAEA,UAAM,WAAW,YAAY,OAAO,QAAQ;AAC5C,QAAI,CAAC,UAAU;AACd,aAAO;AAAA,IACR;AAEA,WAAO,KAAK,4BAA4B;AAAA,MACvC;AAAA,IACD;AAAA,EACD;AACD;AArca;AAAA,EADX;AAAA,GA/5BW,sBAg6BA;AAh6BA,wBAAN;AAAA,EAOJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAlBU;",
  "names": ["error", "resolve", "type", "webContents"]
}
