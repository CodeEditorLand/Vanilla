{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/externalTerminal/common/externalTerminal.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from \"../../instantiation/common/instantiation.js\";\nimport type { ITerminalEnvironment } from \"../../terminal/common/terminal.js\";\n\nexport const IExternalTerminalService =\n\tcreateDecorator<IExternalTerminalService>(\"externalTerminal\");\n\nexport interface IExternalTerminalSettings {\n\tlinuxExec?: string;\n\tosxExec?: string;\n\twindowsExec?: string;\n}\n\nexport interface ITerminalForPlatform {\n\twindows: string;\n\tlinux: string;\n\tosx: string;\n}\n\nexport interface IExternalTerminalService {\n\treadonly _serviceBrand: undefined;\n\topenTerminal(\n\t\tconfiguration: IExternalTerminalSettings,\n\t\tcwd: string | undefined,\n\t): Promise<void>;\n\trunInTerminal(\n\t\ttitle: string,\n\t\tcwd: string,\n\t\targs: string[],\n\t\tenv: ITerminalEnvironment,\n\t\tsettings: IExternalTerminalSettings,\n\t): Promise<number | undefined>;\n\tgetDefaultTerminalForPlatforms(): Promise<ITerminalForPlatform>;\n}\n\nexport interface IExternalTerminalConfiguration {\n\tterminal: {\n\t\texplorerKind: \"integrated\" | \"external\" | \"both\";\n\t\texternal: IExternalTerminalSettings;\n\t};\n}\n\nexport const DEFAULT_TERMINAL_OSX = \"Terminal.app\";\n"],
  "mappings": "AAKA,SAAS,uBAAuB;AAGzB,MAAM,2BACZ,gBAA0C,kBAAkB;AAqCtD,MAAM,uBAAuB;",
  "names": []
}
