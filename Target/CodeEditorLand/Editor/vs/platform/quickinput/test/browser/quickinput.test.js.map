{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/quickinput/test/browser/quickinput.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { unthemedInboxStyles } from '../../../../base/browser/ui/inputbox/inputBox.js';\nimport { unthemedButtonStyles } from '../../../../base/browser/ui/button/button.js';\nimport { unthemedListStyles } from '../../../../base/browser/ui/list/listWidget.js';\nimport { unthemedToggleStyles } from '../../../../base/browser/ui/toggle/toggle.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { raceTimeout } from '../../../../base/common/async.js';\nimport { unthemedCountStyles } from '../../../../base/browser/ui/countBadge/countBadge.js';\nimport { unthemedKeybindingLabelOptions } from '../../../../base/browser/ui/keybindingLabel/keybindingLabel.js';\nimport { unthemedProgressBarOptions } from '../../../../base/browser/ui/progressbar/progressbar.js';\nimport { QuickInputController } from '../../browser/quickInputController.js';\nimport { TestThemeService } from '../../../theme/test/common/testThemeService.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\nimport { toDisposable } from '../../../../base/common/lifecycle.js';\nimport { mainWindow } from '../../../../base/browser/window.js';\nimport { QuickPick } from '../../browser/quickInput.js';\nimport { IQuickPickItem, ItemActivation } from '../../common/quickInput.js';\nimport { TestInstantiationService } from '../../../instantiation/test/common/instantiationServiceMock.js';\nimport { IThemeService } from '../../../theme/common/themeService.js';\nimport { IConfigurationService } from '../../../configuration/common/configuration.js';\nimport { TestConfigurationService } from '../../../configuration/test/common/testConfigurationService.js';\nimport { ILayoutService } from '../../../layout/browser/layoutService.js';\nimport { IContextViewService } from '../../../contextview/browser/contextView.js';\nimport { IListService, ListService } from '../../../list/browser/listService.js';\nimport { IContextKeyService } from '../../../contextkey/common/contextkey.js';\nimport { ContextKeyService } from '../../../contextkey/browser/contextKeyService.js';\nimport { NoMatchingKb } from '../../../keybinding/common/keybindingResolver.js';\nimport { IKeybindingService } from '../../../keybinding/common/keybinding.js';\nimport { ContextViewService } from '../../../contextview/browser/contextViewService.js';\nimport { IAccessibilityService } from '../../../accessibility/common/accessibility.js';\nimport { TestAccessibilityService } from '../../../accessibility/test/common/testAccessibilityService.js';\n\n// Sets up an `onShow` listener to allow us to wait until the quick pick is shown (useful when triggering an `accept()` right after launching a quick pick)\n// kick this off before you launch the picker and then await the promise returned after you launch the picker.\nasync function setupWaitTilShownListener(controller: QuickInputController): Promise<void> {\n\tconst result = await raceTimeout(new Promise<boolean>(resolve => {\n\t\tconst event = controller.onShow(_ => {\n\t\t\tevent.dispose();\n\t\t\tresolve(true);\n\t\t});\n\t}), 2000);\n\n\tif (!result) {\n\t\tthrow new Error('Cancelled');\n\t}\n}\n\nsuite('QuickInput', () => { // https://github.com/microsoft/vscode/issues/147543\n\tconst store = ensureNoDisposablesAreLeakedInTestSuite();\n\tlet controller: QuickInputController;\n\n\tsetup(() => {\n\t\tconst fixture = document.createElement('div');\n\t\tmainWindow.document.body.appendChild(fixture);\n\t\tstore.add(toDisposable(() => fixture.remove()));\n\n\t\tconst instantiationService = new TestInstantiationService();\n\n\t\t// Stub the services the quick input controller needs to function\n\t\tinstantiationService.stub(IThemeService, new TestThemeService());\n\t\tinstantiationService.stub(IConfigurationService, new TestConfigurationService());\n\t\tinstantiationService.stub(IAccessibilityService, new TestAccessibilityService());\n\t\tinstantiationService.stub(IListService, store.add(new ListService()));\n\t\tinstantiationService.stub(ILayoutService, { activeContainer: fixture, onDidLayoutContainer: Event.None } as any);\n\t\tinstantiationService.stub(IContextViewService, store.add(instantiationService.createInstance(ContextViewService)));\n\t\tinstantiationService.stub(IContextKeyService, store.add(instantiationService.createInstance(ContextKeyService)));\n\t\tinstantiationService.stub(IKeybindingService, {\n\t\t\tmightProducePrintableCharacter() { return false; },\n\t\t\tsoftDispatch() { return NoMatchingKb; },\n\t\t});\n\n\t\tcontroller = store.add(instantiationService.createInstance(\n\t\t\tQuickInputController,\n\t\t\t{\n\t\t\t\tcontainer: fixture,\n\t\t\t\tidPrefix: 'testQuickInput',\n\t\t\t\tignoreFocusOut() { return true; },\n\t\t\t\treturnFocus() { },\n\t\t\t\tbackKeybindingLabel() { return undefined; },\n\t\t\t\tsetContextKey() { return undefined; },\n\t\t\t\tlinkOpenerDelegate(content) { },\n\t\t\t\thoverDelegate: {\n\t\t\t\t\tshowHover(options, focus) {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t},\n\t\t\t\t\tdelay: 200\n\t\t\t\t},\n\t\t\t\tstyles: {\n\t\t\t\t\tbutton: unthemedButtonStyles,\n\t\t\t\t\tcountBadge: unthemedCountStyles,\n\t\t\t\t\tinputBox: unthemedInboxStyles,\n\t\t\t\t\ttoggle: unthemedToggleStyles,\n\t\t\t\t\tkeybindingLabel: unthemedKeybindingLabelOptions,\n\t\t\t\t\tlist: unthemedListStyles,\n\t\t\t\t\tprogressBar: unthemedProgressBarOptions,\n\t\t\t\t\twidget: {\n\t\t\t\t\t\tquickInputBackground: undefined,\n\t\t\t\t\t\tquickInputForeground: undefined,\n\t\t\t\t\t\tquickInputTitleBackground: undefined,\n\t\t\t\t\t\twidgetBorder: undefined,\n\t\t\t\t\t\twidgetShadow: undefined,\n\t\t\t\t\t},\n\t\t\t\t\tpickerGroup: {\n\t\t\t\t\t\tpickerGroupBorder: undefined,\n\t\t\t\t\t\tpickerGroupForeground: undefined,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t));\n\n\t\t// initial layout\n\t\tcontroller.layout({ height: 20, width: 40 }, 0);\n\t});\n\n\ttest('pick - basecase', async () => {\n\t\tconst item = { label: 'foo' };\n\n\t\tconst wait = setupWaitTilShownListener(controller);\n\t\tconst pickPromise = controller.pick([item, { label: 'bar' }]);\n\t\tawait wait;\n\n\t\tcontroller.accept();\n\t\tconst pick = await raceTimeout(pickPromise, 2000);\n\n\t\tassert.strictEqual(pick, item);\n\t});\n\n\ttest('pick - activeItem is honored', async () => {\n\t\tconst item = { label: 'foo' };\n\n\t\tconst wait = setupWaitTilShownListener(controller);\n\t\tconst pickPromise = controller.pick([{ label: 'bar' }, item], { activeItem: item });\n\t\tawait wait;\n\n\t\tcontroller.accept();\n\t\tconst pick = await pickPromise;\n\n\t\tassert.strictEqual(pick, item);\n\t});\n\n\ttest('input - basecase', async () => {\n\t\tconst wait = setupWaitTilShownListener(controller);\n\t\tconst inputPromise = controller.input({ value: 'foo' });\n\t\tawait wait;\n\n\t\tcontroller.accept();\n\t\tconst value = await raceTimeout(inputPromise, 2000);\n\n\t\tassert.strictEqual(value, 'foo');\n\t});\n\n\ttest('onDidChangeValue - gets triggered when .value is set', async () => {\n\t\tconst quickpick = store.add(controller.createQuickPick());\n\n\t\tlet value: string | undefined = undefined;\n\t\tstore.add(quickpick.onDidChangeValue((e) => value = e));\n\n\t\t// Trigger a change\n\t\tquickpick.value = 'changed';\n\n\t\ttry {\n\t\t\tassert.strictEqual(value, quickpick.value);\n\t\t} finally {\n\t\t\tquickpick.dispose();\n\t\t}\n\t});\n\n\ttest('keepScrollPosition - works with activeItems', async () => {\n\t\tconst quickpick = store.add(controller.createQuickPick() as QuickPick<IQuickPickItem>);\n\n\t\tconst items = [];\n\t\tfor (let i = 0; i < 1000; i++) {\n\t\t\titems.push({ label: `item ${i}` });\n\t\t}\n\t\tquickpick.items = items;\n\t\t// setting the active item should cause the quick pick to scroll to the bottom\n\t\tquickpick.activeItems = [items[items.length - 1]];\n\t\tquickpick.show();\n\n\t\tconst cursorTop = quickpick.scrollTop;\n\n\t\tassert.notStrictEqual(cursorTop, 0);\n\n\t\tquickpick.keepScrollPosition = true;\n\t\tquickpick.activeItems = [items[0]];\n\t\tassert.strictEqual(cursorTop, quickpick.scrollTop);\n\n\t\tquickpick.keepScrollPosition = false;\n\t\tquickpick.activeItems = [items[0]];\n\t\tassert.strictEqual(quickpick.scrollTop, 0);\n\t});\n\n\ttest('keepScrollPosition - works with items', async () => {\n\t\tconst quickpick = store.add(controller.createQuickPick() as QuickPick<IQuickPickItem>);\n\n\t\tconst items = [];\n\t\tfor (let i = 0; i < 1000; i++) {\n\t\t\titems.push({ label: `item ${i}` });\n\t\t}\n\t\tquickpick.items = items;\n\t\t// setting the active item should cause the quick pick to scroll to the bottom\n\t\tquickpick.activeItems = [items[items.length - 1]];\n\t\tquickpick.show();\n\n\t\tconst cursorTop = quickpick.scrollTop;\n\t\tassert.notStrictEqual(cursorTop, 0);\n\n\t\tquickpick.keepScrollPosition = true;\n\t\tquickpick.items = items;\n\t\tassert.strictEqual(cursorTop, quickpick.scrollTop);\n\n\t\tquickpick.keepScrollPosition = false;\n\t\tquickpick.items = items;\n\t\tassert.strictEqual(quickpick.scrollTop, 0);\n\t});\n\n\ttest('selectedItems - verify previous selectedItems does not hang over to next set of items', async () => {\n\t\tconst quickpick = store.add(controller.createQuickPick());\n\t\tquickpick.items = [{ label: 'step 1' }];\n\t\tquickpick.show();\n\n\t\tvoid (await new Promise<void>(resolve => {\n\t\t\tstore.add(quickpick.onDidAccept(() => {\n\t\t\t\tquickpick.canSelectMany = true;\n\t\t\t\tquickpick.items = [{ label: 'a' }, { label: 'b' }, { label: 'c' }];\n\t\t\t\tresolve();\n\t\t\t}));\n\n\t\t\t// accept 'step 1'\n\t\t\tcontroller.accept();\n\t\t}));\n\n\t\t// accept in multi-select\n\t\tcontroller.accept();\n\n\t\t// Since we don't select any items, the selected items should be empty\n\t\tassert.strictEqual(quickpick.selectedItems.length, 0);\n\t});\n\n\ttest('activeItems - verify onDidChangeActive is triggered after setting items', async () => {\n\t\tconst quickpick = store.add(controller.createQuickPick());\n\n\t\t// Setup listener for verification\n\t\tconst activeItemsFromEvent: IQuickPickItem[] = [];\n\t\tstore.add(quickpick.onDidChangeActive(items => activeItemsFromEvent.push(...items)));\n\n\t\tquickpick.show();\n\n\t\tconst item = { label: 'step 1' };\n\t\tquickpick.items = [item];\n\n\t\tassert.strictEqual(activeItemsFromEvent.length, 1);\n\t\tassert.strictEqual(activeItemsFromEvent[0], item);\n\t\tassert.strictEqual(quickpick.activeItems.length, 1);\n\t\tassert.strictEqual(quickpick.activeItems[0], item);\n\t});\n\n\ttest('activeItems - verify setting itemActivation to None still triggers onDidChangeActive after selection #207832', async () => {\n\t\tconst quickpick = store.add(controller.createQuickPick());\n\t\tconst item = { label: 'step 1' };\n\t\tquickpick.items = [item];\n\t\tquickpick.show();\n\t\tassert.strictEqual(quickpick.activeItems[0], item);\n\n\t\t// Setup listener for verification\n\t\tconst activeItemsFromEvent: IQuickPickItem[] = [];\n\t\tstore.add(quickpick.onDidChangeActive(items => activeItemsFromEvent.push(...items)));\n\n\t\t// Trigger a change\n\t\tquickpick.itemActivation = ItemActivation.NONE;\n\t\tquickpick.items = [item];\n\n\t\tassert.strictEqual(activeItemsFromEvent.length, 0);\n\t\tassert.strictEqual(quickpick.activeItems.length, 0);\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
