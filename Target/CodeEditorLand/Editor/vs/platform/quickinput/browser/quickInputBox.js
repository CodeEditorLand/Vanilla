import*as e from"../../../base/browser/dom.js";import{FindInput as r}from"../../../base/browser/ui/findinput/findInput.js";import{MessageType as n}from"../../../base/browser/ui/inputbox/inputBox.js";import{Disposable as u}from"../../../base/common/lifecycle.js";import i from"../../../base/common/severity.js";import"./media/quickInput.css";const a=e.$;class b extends u{constructor(t,s,p){super();this.parent=t;this.container=e.append(this.parent,a(".quick-input-box")),this.findInput=this._register(new r(this.container,void 0,{label:"",inputBoxStyles:s,toggleStyles:p}));const o=this.findInput.inputBox.inputElement;o.role="combobox",o.ariaHasPopup="menu",o.ariaAutoComplete="list",o.ariaExpanded="true"}container;findInput;onKeyDown=t=>e.addStandardDisposableListener(this.findInput.inputBox.inputElement,e.EventType.KEY_DOWN,t);onMouseDown=t=>e.addStandardDisposableListener(this.findInput.inputBox.inputElement,e.EventType.MOUSE_DOWN,t);onDidChange=t=>this.findInput.onDidChange(t);get value(){return this.findInput.getValue()}set value(t){this.findInput.setValue(t)}select(t=null){this.findInput.inputBox.select(t)}getSelection(){return this.findInput.inputBox.getSelection()}isSelectionAtEnd(){return this.findInput.inputBox.isSelectionAtEnd()}setPlaceholder(t){this.findInput.inputBox.setPlaceHolder(t)}get placeholder(){return this.findInput.inputBox.inputElement.getAttribute("placeholder")||""}set placeholder(t){this.findInput.inputBox.setPlaceHolder(t)}get password(){return this.findInput.inputBox.inputElement.type==="password"}set password(t){this.findInput.inputBox.inputElement.type=t?"password":"text"}set enabled(t){this.findInput.inputBox.inputElement.toggleAttribute("readonly",!t)}set toggles(t){this.findInput.setAdditionalToggles(t)}hasFocus(){return this.findInput.inputBox.hasFocus()}setAttribute(t,s){this.findInput.inputBox.inputElement.setAttribute(t,s)}removeAttribute(t){this.findInput.inputBox.inputElement.removeAttribute(t)}showDecoration(t){t===i.Ignore?this.findInput.clearMessage():this.findInput.showMessage({type:t===i.Info?n.INFO:t===i.Warning?n.WARNING:n.ERROR,content:""})}stylesForType(t){return this.findInput.inputBox.stylesForType(t===i.Info?n.INFO:t===i.Warning?n.WARNING:n.ERROR)}setFocus(){this.findInput.focus()}layout(){this.findInput.inputBox.layout()}}export{b as QuickInputBox};
