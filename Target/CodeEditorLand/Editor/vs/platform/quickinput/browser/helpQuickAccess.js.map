{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/quickinput/browser/helpQuickAccess.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from '../../../nls.js';\nimport { Registry } from '../../registry/common/platform.js';\nimport { DisposableStore, IDisposable } from '../../../base/common/lifecycle.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { Extensions, IQuickAccessProvider, IQuickAccessProviderDescriptor, IQuickAccessRegistry } from '../common/quickAccess.js';\nimport { IQuickInputService, IQuickPick, IQuickPickItem } from '../common/quickInput.js';\n\ninterface IHelpQuickAccessPickItem extends IQuickPickItem {\n\treadonly prefix: string;\n}\n\nexport class HelpQuickAccessProvider implements IQuickAccessProvider {\n\n\tstatic PREFIX = '?';\n\n\tprivate readonly registry = Registry.as<IQuickAccessRegistry>(Extensions.Quickaccess);\n\n\tconstructor(\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService\n\t) { }\n\n\tprovide(picker: IQuickPick<IHelpQuickAccessPickItem, { useSeparators: true }>): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\n\t\t// Open a picker with the selected value if picked\n\t\tdisposables.add(picker.onDidAccept(() => {\n\t\t\tconst [item] = picker.selectedItems;\n\t\t\tif (item) {\n\t\t\t\tthis.quickInputService.quickAccess.show(item.prefix, { preserveValue: true });\n\t\t\t}\n\t\t}));\n\n\t\t// Also open a picker when we detect the user typed the exact\n\t\t// name of a provider (e.g. `?term` for terminals)\n\t\tdisposables.add(picker.onDidChangeValue(value => {\n\t\t\tconst providerDescriptor = this.registry.getQuickAccessProvider(value.substr(HelpQuickAccessProvider.PREFIX.length));\n\t\t\tif (providerDescriptor && providerDescriptor.prefix && providerDescriptor.prefix !== HelpQuickAccessProvider.PREFIX) {\n\t\t\t\tthis.quickInputService.quickAccess.show(providerDescriptor.prefix, { preserveValue: true });\n\t\t\t}\n\t\t}));\n\n\t\t// Fill in all providers\n\t\tpicker.items = this.getQuickAccessProviders().filter(p => p.prefix !== HelpQuickAccessProvider.PREFIX);\n\n\t\treturn disposables;\n\t}\n\n\tgetQuickAccessProviders(): IHelpQuickAccessPickItem[] {\n\t\tconst providers: IHelpQuickAccessPickItem[] = this.registry\n\t\t\t.getQuickAccessProviders()\n\t\t\t.sort((providerA, providerB) => providerA.prefix.localeCompare(providerB.prefix))\n\t\t\t.flatMap(provider => this.createPicks(provider));\n\n\t\treturn providers;\n\t}\n\n\tprivate createPicks(provider: IQuickAccessProviderDescriptor): IHelpQuickAccessPickItem[] {\n\t\treturn provider.helpEntries.map(helpEntry => {\n\t\t\tconst prefix = helpEntry.prefix || provider.prefix;\n\t\t\tconst label = prefix || '\\u2026' /* ... */;\n\n\t\t\treturn {\n\t\t\t\tprefix,\n\t\t\t\tlabel,\n\t\t\t\tkeybinding: helpEntry.commandId ? this.keybindingService.lookupKeybinding(helpEntry.commandId) : undefined,\n\t\t\t\tariaLabel: localize('helpPickAriaLabel', \"{0}, {1}\", label, helpEntry.description),\n\t\t\t\tdescription: helpEntry.description\n\t\t\t};\n\t\t});\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,gBAAgB;AACzB,SAAS,gBAAgB;AACzB,SAAS,iBAAiB,mBAAmB;AAC7C,SAAS,0BAA0B;AACnC,SAAS,YAAY,sBAAsB,gCAAgC,4BAA4B;AACvG,SAAS,oBAAoB,YAAY,sBAAsB;AAMxD,IAAM,0BAAN,MAA8D;AAAA,EAMpE,YACsC,mBACA,mBACpC;AAFoC;AACA;AAAA,EAClC;AAAA,EAzBL,OAgBqE;AAAA;AAAA;AAAA,EAEpE,OAAO,SAAS;AAAA,EAEC,WAAW,SAAS,GAAyB,WAAW,WAAW;AAAA,EAOpF,QAAQ,QAAoF;AAC3F,UAAM,cAAc,IAAI,gBAAgB;AAGxC,gBAAY,IAAI,OAAO,YAAY,MAAM;AACxC,YAAM,CAAC,IAAI,IAAI,OAAO;AACtB,UAAI,MAAM;AACT,aAAK,kBAAkB,YAAY,KAAK,KAAK,QAAQ,EAAE,eAAe,KAAK,CAAC;AAAA,MAC7E;AAAA,IACD,CAAC,CAAC;AAIF,gBAAY,IAAI,OAAO,iBAAiB,WAAS;AAChD,YAAM,qBAAqB,KAAK,SAAS,uBAAuB,MAAM,OAAO,wBAAwB,OAAO,MAAM,CAAC;AACnH,UAAI,sBAAsB,mBAAmB,UAAU,mBAAmB,WAAW,wBAAwB,QAAQ;AACpH,aAAK,kBAAkB,YAAY,KAAK,mBAAmB,QAAQ,EAAE,eAAe,KAAK,CAAC;AAAA,MAC3F;AAAA,IACD,CAAC,CAAC;AAGF,WAAO,QAAQ,KAAK,wBAAwB,EAAE,OAAO,OAAK,EAAE,WAAW,wBAAwB,MAAM;AAErG,WAAO;AAAA,EACR;AAAA,EAEA,0BAAsD;AACrD,UAAM,YAAwC,KAAK,SACjD,wBAAwB,EACxB,KAAK,CAAC,WAAW,cAAc,UAAU,OAAO,cAAc,UAAU,MAAM,CAAC,EAC/E,QAAQ,cAAY,KAAK,YAAY,QAAQ,CAAC;AAEhD,WAAO;AAAA,EACR;AAAA,EAEQ,YAAY,UAAsE;AACzF,WAAO,SAAS,YAAY,IAAI,eAAa;AAC5C,YAAM,SAAS,UAAU,UAAU,SAAS;AAC5C,YAAM,QAAQ,UAAU;AAExB,aAAO;AAAA,QACN;AAAA,QACA;AAAA,QACA,YAAY,UAAU,YAAY,KAAK,kBAAkB,iBAAiB,UAAU,SAAS,IAAI;AAAA,QACjG,WAAW,SAAS,qBAAqB,YAAY,OAAO,UAAU,WAAW;AAAA,QACjF,aAAa,UAAU;AAAA,MACxB;AAAA,IACD,CAAC;AAAA,EACF;AACD;AA5Da,0BAAN;AAAA,EAOJ;AAAA,EACA;AAAA,GARU;",
  "names": []
}
