var A=Object.defineProperty;var S=Object.getOwnPropertyDescriptor;var Q=(v,u,i,t)=>{for(var e=t>1?void 0:t?S(u,i):u,s=v.length-1,r;s>=0;s--)(r=v[s])&&(e=(t?r(u,i,e):r(e))||e);return t&&e&&A(u,i,e),e},P=(v,u)=>(i,t)=>u(i,t,v);import{DeferredPromise as b}from"../../../../vs/base/common/async.js";import{CancellationTokenSource as D}from"../../../../vs/base/common/cancellation.js";import{Event as h}from"../../../../vs/base/common/event.js";import{Disposable as O,DisposableStore as g,toDisposable as V}from"../../../../vs/base/common/lifecycle.js";import{IInstantiationService as y}from"../../../../vs/platform/instantiation/common/instantiation.js";import{DefaultQuickAccessFilterValue as w,Extensions as x}from"../../../../vs/platform/quickinput/common/quickAccess.js";import{IQuickInputService as q,ItemActivation as C}from"../../../../vs/platform/quickinput/common/quickInput.js";import{Registry as N}from"../../../../vs/platform/registry/common/platform.js";let k=class extends O{constructor(i,t){super();this.quickInputService=i;this.instantiationService=t}registry=N.as(x.Quickaccess);mapProviderToDescriptor=new Map;lastAcceptedPickerValues=new Map;visibleQuickAccess=void 0;pick(i="",t){return this.doShowOrPick(i,!0,t)}show(i="",t){this.doShowOrPick(i,!1,t)}doShowOrPick(i,t,e){const[s,r]=this.getOrInstantiateProvider(i,e?.enabledProviderPrefixes),n=this.visibleQuickAccess,a=n?.descriptor;if(n&&r&&a===r){i!==r.prefix&&!e?.preserveValue&&(n.picker.value=i),this.adjustValueSelection(n.picker,r,e);return}if(r&&!e?.preserveValue){let o;if(n&&a&&a!==r){const p=n.value.substr(a.prefix.length);p&&(o=`${r.prefix}${p}`)}if(!o){const p=s?.defaultFilterValue;p===w.LAST?o=this.lastAcceptedPickerValues.get(r):typeof p=="string"&&(o=`${r.prefix}${p}`)}typeof o=="string"&&(i=o)}const d=n?.picker?.valueSelection,f=n?.picker?.value,l=new g,c=l.add(this.quickInputService.createQuickPick({useSeparators:!0}));c.value=i,this.adjustValueSelection(c,r,e),c.placeholder=e?.placeholder??r?.placeholder,c.quickNavigate=e?.quickNavigateConfiguration,c.hideInput=!!c.quickNavigate&&!n,(typeof e?.itemActivation=="number"||e?.quickNavigateConfiguration)&&(c.itemActivation=e?.itemActivation??C.SECOND),c.contextKey=r?.contextKey,c.filterValue=o=>o.substring(r?r.prefix.length:0);let I;t&&(I=new b,l.add(h.once(c.onWillAccept)(o=>{o.veto(),c.hide()}))),l.add(this.registerPickerListeners(c,s,r,i,e));const m=l.add(new D);if(s&&l.add(s.provide(c,m.token,e?.providerOptions)),h.once(c.onDidHide)(()=>{c.selectedItems.length===0&&m.cancel(),l.dispose(),I?.complete(c.selectedItems.slice(0))}),c.show(),d&&f===i&&(c.valueSelection=d),t)return I?.p}adjustValueSelection(i,t,e){let s;e?.preserveValue?s=[i.value.length,i.value.length]:s=[t?.prefix.length??0,i.value.length],i.valueSelection=s}registerPickerListeners(i,t,e,s,r){const n=new g,a=this.visibleQuickAccess={picker:i,descriptor:e,value:s};return n.add(V(()=>{a===this.visibleQuickAccess&&(this.visibleQuickAccess=void 0)})),n.add(i.onDidChangeValue(d=>{const[f]=this.getOrInstantiateProvider(d,r?.enabledProviderPrefixes);f!==t?this.show(d,{enabledProviderPrefixes:r?.enabledProviderPrefixes,preserveValue:!0,providerOptions:r?.providerOptions}):a.value=d})),e&&n.add(i.onDidAccept(()=>{this.lastAcceptedPickerValues.set(e,i.value)})),n}getOrInstantiateProvider(i,t){const e=this.registry.getQuickAccessProvider(i);if(!e||t&&!t?.includes(e.prefix))return[void 0,void 0];let s=this.mapProviderToDescriptor.get(e);return s||(s=this.instantiationService.createInstance(e.ctor),this.mapProviderToDescriptor.set(e,s)),[s,e]}};k=Q([P(0,q),P(1,y)],k);export{k as QuickAccessController};
