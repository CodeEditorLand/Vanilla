var T=Object.defineProperty;var F=Object.getOwnPropertyDescriptor;var b=(I,u,e,a)=>{for(var t=a>1?void 0:a?F(u,e):u,n=I.length-1,s;n>=0;n--)(s=I[n])&&(t=(a?s(u,e,t):s(t))||t);return a&&t&&T(u,e,t),t},l=(I,u)=>(e,a)=>u(e,a,I);import{toErrorMessage as Q}from"../../../base/common/errorMessage.js";import{isCancellationError as O}from"../../../base/common/errors.js";import{matchesContiguousSubString as A,matchesPrefix as w,matchesWords as x,or as D}from"../../../base/common/filters.js";import{createSingleCallFunction as U}from"../../../base/common/functional.js";import{Disposable as W}from"../../../base/common/lifecycle.js";import{LRUCache as L}from"../../../base/common/map.js";import{TfIdfCalculator as N,normalizeTfIdfScores as K}from"../../../base/common/tfIdf.js";import{localize as g}from"../../../nls.js";import{ICommandService as z}from"../../commands/common/commands.js";import{IConfigurationService as M}from"../../configuration/common/configuration.js";import{IDialogService as Y}from"../../dialogs/common/dialogs.js";import{IInstantiationService as H}from"../../instantiation/common/instantiation.js";import{IKeybindingService as $}from"../../keybinding/common/keybinding.js";import{ILogService as q}from"../../log/common/log.js";import{PickerQuickAccessProvider as X}from"./pickerQuickAccess.js";import{IStorageService as G,StorageScope as k,StorageTarget as R,WillSaveStateReason as J}from"../../storage/common/storage.js";import{ITelemetryService as V}from"../../telemetry/common/telemetry.js";let d=class extends X{constructor(e,a,t,n,s,S){super(d.PREFIX,e);this.instantiationService=a;this.keybindingService=t;this.commandService=n;this.telemetryService=s;this.dialogService=S;this.options=e}static PREFIX=">";static TFIDF_THRESHOLD=.5;static TFIDF_MAX_RESULTS=5;static WORD_FILTER=D(w,x,A);commandsHistory=this._register(this.instantiationService.createInstance(r));options;async _getPicks(e,a,t,n){const s=await this.getCommandPicks(t);if(t.isCancellationRequested)return[];const S=U(()=>{const i=new N;i.updateDocuments(s.map(c=>({key:c.commandId,textChunks:[this.getTfIdfChunk(c)]})));const o=i.calculateScores(e,t);return K(o).filter(c=>c.score>d.TFIDF_THRESHOLD).slice(0,d.TFIDF_MAX_RESULTS)}),m=[];for(const i of s){const o=d.WORD_FILTER(e,i.label)??void 0,c=i.commandAlias?d.WORD_FILTER(e,i.commandAlias)??void 0:void 0;if(o||c)i.highlights={label:o,detail:this.options.showAlias?c:void 0},m.push(i);else if(e===i.commandId)m.push(i);else if(e.length>=3){const h=S();if(t.isCancellationRequested)return[];const p=h.find(C=>C.key===i.commandId);p&&(i.tfIdfScore=p.score,m.push(i))}}const E=new Map;for(const i of m){const o=E.get(i.label);o?(i.description=i.commandId,o.description=o.commandId):E.set(i.label,i)}m.sort((i,o)=>{if(i.tfIdfScore&&o.tfIdfScore)return i.tfIdfScore===o.tfIdfScore?i.label.localeCompare(o.label):o.tfIdfScore-i.tfIdfScore;if(i.tfIdfScore)return 1;if(o.tfIdfScore)return-1;const c=this.commandsHistory.peek(i.commandId),h=this.commandsHistory.peek(o.commandId);if(c&&h)return c>h?-1:1;if(c)return-1;if(h)return 1;if(this.options.suggestedCommandIds){const p=this.options.suggestedCommandIds.has(i.commandId),C=this.options.suggestedCommandIds.has(o.commandId);if(p&&C)return 0;if(p)return-1;if(C)return 1}return i.label.localeCompare(o.label)});const f=[];let v=!1,y=!0,P=!!this.options.suggestedCommandIds;for(let i=0;i<m.length;i++){const o=m[i];i===0&&this.commandsHistory.peek(o.commandId)&&(f.push({type:"separator",label:g("recentlyUsed","recently used")}),v=!0),y&&o.tfIdfScore!==void 0&&(f.push({type:"separator",label:g("suggested","similar commands")}),y=!1),P&&o.tfIdfScore===void 0&&!this.commandsHistory.peek(o.commandId)&&this.options.suggestedCommandIds?.has(o.commandId)&&(f.push({type:"separator",label:g("commonlyUsed","commonly used")}),v=!0,P=!1),v&&o.tfIdfScore===void 0&&!this.commandsHistory.peek(o.commandId)&&!this.options.suggestedCommandIds?.has(o.commandId)&&(f.push({type:"separator",label:g("morecCommands","other commands")}),v=!1),f.push(this.toCommandPick(o,n))}return this.hasAdditionalCommandPicks(e,t)?{picks:f,additionalPicks:(async()=>{const i=await this.getAdditionalCommandPicks(s,m,e,t);if(t.isCancellationRequested)return[];const o=i.map(c=>this.toCommandPick(c,n));return y&&o[0]?.type!=="separator"&&o.unshift({type:"separator",label:g("suggested","similar commands")}),o})()}:f}toCommandPick(e,a){if(e.type==="separator")return e;const t=this.keybindingService.lookupKeybinding(e.commandId),n=t?g("commandPickAriaLabelWithKeybinding","{0}, {1}",e.label,t.getAriaLabel()):e.label;return{...e,ariaLabel:n,detail:this.options.showAlias&&e.commandAlias!==e.label?e.commandAlias:void 0,keybinding:t,accept:async()=>{this.commandsHistory.push(e.commandId),this.telemetryService.publicLog2("workbenchActionExecuted",{id:e.commandId,from:a?.from??"quick open"});try{e.args?.length?await this.commandService.executeCommand(e.commandId,...e.args):await this.commandService.executeCommand(e.commandId)}catch(s){O(s)||this.dialogService.error(g("canNotRun","Command '{0}' resulted in an error",e.label),Q(s))}}}}getTfIdfChunk({label:e,commandAlias:a,commandDescription:t}){let n=e;return a&&a!==e&&(n+=` - ${a}`),t&&t.value!==e&&(n+=` - ${t.value===t.original?t.value:`${t.value} (${t.original})`}`),n}};d=b([l(1,H),l(2,$),l(3,z),l(4,V),l(5,Y)],d);let r=class extends W{constructor(e,a,t){super();this.storageService=e;this.configurationService=a;this.logService=t;this.updateConfiguration(),this.load(),this.registerListeners()}static DEFAULT_COMMANDS_HISTORY_LENGTH=50;static PREF_KEY_CACHE="commandPalette.mru.cache";static PREF_KEY_COUNTER="commandPalette.mru.counter";static cache;static counter=1;static hasChanges=!1;configuredCommandsHistoryLength=0;registerListeners(){this._register(this.configurationService.onDidChangeConfiguration(e=>this.updateConfiguration(e))),this._register(this.storageService.onWillSaveState(e=>{e.reason===J.SHUTDOWN&&this.saveState()}))}updateConfiguration(e){e&&!e.affectsConfiguration("workbench.commandPalette.history")||(this.configuredCommandsHistoryLength=r.getConfiguredCommandHistoryLength(this.configurationService),r.cache&&r.cache.limit!==this.configuredCommandsHistoryLength&&(r.cache.limit=this.configuredCommandsHistoryLength,r.hasChanges=!0))}load(){const e=this.storageService.get(r.PREF_KEY_CACHE,k.PROFILE);let a;if(e)try{a=JSON.parse(e)}catch(n){this.logService.error(`[CommandsHistory] invalid data: ${n}`)}const t=r.cache=new L(this.configuredCommandsHistoryLength,1);if(a){let n;a.usesLRU?n=a.entries:n=a.entries.sort((s,S)=>s.value-S.value),n.forEach(s=>t.set(s.key,s.value))}r.counter=this.storageService.getNumber(r.PREF_KEY_COUNTER,k.PROFILE,r.counter)}push(e){r.cache&&(r.cache.set(e,r.counter++),r.hasChanges=!0)}peek(e){return r.cache?.peek(e)}saveState(){if(!r.cache||!r.hasChanges)return;const e={usesLRU:!0,entries:[]};r.cache.forEach((a,t)=>e.entries.push({key:t,value:a})),this.storageService.store(r.PREF_KEY_CACHE,JSON.stringify(e),k.PROFILE,R.USER),this.storageService.store(r.PREF_KEY_COUNTER,r.counter,k.PROFILE,R.USER),r.hasChanges=!1}static getConfiguredCommandHistoryLength(e){const t=e.getValue().workbench?.commandPalette?.history;return typeof t=="number"?t:r.DEFAULT_COMMANDS_HISTORY_LENGTH}static clearHistory(e,a){const t=r.getConfiguredCommandHistoryLength(e);r.cache=new L(t),r.counter=1,r.hasChanges=!0}};r=b([l(0,G),l(1,M),l(2,q)],r);export{d as AbstractCommandsQuickAccessProvider,r as CommandsHistory};
