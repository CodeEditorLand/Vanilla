import{KeyCode as e,KeyMod as t}from"../../../base/common/keyCodes.js";import{isMacintosh as p}from"../../../base/common/platform.js";import{localize as h}from"../../../nls.js";import{ContextKeyExpr as c}from"../../contextkey/common/contextkey.js";import{InputFocusedContext as A}from"../../contextkey/common/contextkeys.js";import{KeybindingWeight as m,KeybindingsRegistry as f}from"../../keybinding/common/keybindingsRegistry.js";import{endOfQuickInputBoxContext as I,inQuickInputContext as g,quickInputTypeContextKeyValue as M}from"./quickInput.js";import{IQuickInputService as s,QuickInputType as b,QuickPickFocus as r}from"../common/quickInput.js";const k={weight:m.WorkbenchContrib,when:c.and(c.equals(M,b.QuickPick),g),metadata:{description:h("quickPick","Used while in the context of the quick pick. If you change one keybinding for this command, you should change all of the other keybindings (modifier variants) of this command as well.")}};function o(i,n={}){f.registerCommandAndKeybindingRule({...k,...i,secondary:y(i.primary,i.secondary??[],n)})}const l=p?t.WinCtrl:t.CtrlCmd;function y(i,n,u={}){return u.withAltMod&&n.push(t.Alt+i),u.withCtrlMod&&(n.push(l+i),u.withAltMod&&n.push(t.Alt+l+i)),u.withCmdMod&&p&&(n.push(t.CtrlCmd+i),u.withCtrlMod&&n.push(t.CtrlCmd+t.WinCtrl+i),u.withAltMod&&(n.push(t.CtrlCmd+t.Alt+i),u.withCtrlMod&&n.push(t.CtrlCmd+t.Alt+t.WinCtrl+i))),n}function a(i,n){return u=>{const d=u.get(s).currentQuickInput;if(d)return n&&d.quickNavigate?d.focus(n):d.focus(i)}}o({id:"quickInput.pageNext",primary:e.PageDown,handler:a(r.NextPage)},{withAltMod:!0,withCtrlMod:!0,withCmdMod:!0}),o({id:"quickInput.pagePrevious",primary:e.PageUp,handler:a(r.PreviousPage)},{withAltMod:!0,withCtrlMod:!0,withCmdMod:!0}),o({id:"quickInput.first",primary:l+e.Home,handler:a(r.First)},{withAltMod:!0,withCmdMod:!0}),o({id:"quickInput.last",primary:l+e.End,handler:a(r.Last)},{withAltMod:!0,withCmdMod:!0}),o({id:"quickInput.next",primary:e.DownArrow,handler:a(r.Next)},{withCtrlMod:!0}),o({id:"quickInput.previous",primary:e.UpArrow,handler:a(r.Previous)},{withCtrlMod:!0});const C=h("quickInput.nextSeparatorWithQuickAccessFallback","If we're in quick access mode, this will navigate to the next item. If we are not in quick access mode, this will navigate to the next separator."),w=h("quickInput.previousSeparatorWithQuickAccessFallback","If we're in quick access mode, this will navigate to the previous item. If we are not in quick access mode, this will navigate to the previous separator.");p?(o({id:"quickInput.nextSeparatorWithQuickAccessFallback",primary:t.CtrlCmd+e.DownArrow,handler:a(r.NextSeparator,r.Next),metadata:{description:C}}),o({id:"quickInput.nextSeparator",primary:t.CtrlCmd+t.Alt+e.DownArrow,secondary:[t.CtrlCmd+t.WinCtrl+e.DownArrow],handler:a(r.NextSeparator)},{withCtrlMod:!0}),o({id:"quickInput.previousSeparatorWithQuickAccessFallback",primary:t.CtrlCmd+e.UpArrow,handler:a(r.PreviousSeparator,r.Previous),metadata:{description:w}}),o({id:"quickInput.previousSeparator",primary:t.CtrlCmd+t.Alt+e.UpArrow,secondary:[t.CtrlCmd+t.WinCtrl+e.UpArrow],handler:a(r.PreviousSeparator)},{withCtrlMod:!0})):(o({id:"quickInput.nextSeparatorWithQuickAccessFallback",primary:t.Alt+e.DownArrow,handler:a(r.NextSeparator,r.Next),metadata:{description:C}}),o({id:"quickInput.nextSeparator",primary:t.CtrlCmd+t.Alt+e.DownArrow,handler:a(r.NextSeparator)}),o({id:"quickInput.previousSeparatorWithQuickAccessFallback",primary:t.Alt+e.UpArrow,handler:a(r.PreviousSeparator,r.Previous),metadata:{description:w}}),o({id:"quickInput.previousSeparator",primary:t.CtrlCmd+t.Alt+e.UpArrow,handler:a(r.PreviousSeparator)})),o({id:"quickInput.acceptInBackground",when:c.and(k.when,c.or(A.negate(),I)),primary:e.RightArrow,weight:m.WorkbenchContrib+50,handler:i=>{i.get(s).currentQuickInput?.accept(!0)}},{withAltMod:!0,withCtrlMod:!0,withCmdMod:!0});
