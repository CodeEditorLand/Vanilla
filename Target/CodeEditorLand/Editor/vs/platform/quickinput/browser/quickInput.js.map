{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/quickinput/browser/quickInput.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from \"../../../base/browser/dom.js\";\nimport { StandardKeyboardEvent } from \"../../../base/browser/keyboardEvent.js\";\nimport type { ActionBar } from \"../../../base/browser/ui/actionbar/actionbar.js\";\nimport type {\n\tButton,\n\tIButtonStyles,\n} from \"../../../base/browser/ui/button/button.js\";\nimport type {\n\tCountBadge,\n\tICountBadgeStyles,\n} from \"../../../base/browser/ui/countBadge/countBadge.js\";\nimport type {\n\tIHoverDelegate,\n\tIHoverDelegateOptions,\n} from \"../../../base/browser/ui/hover/hoverDelegate.js\";\nimport type { IInputBoxStyles } from \"../../../base/browser/ui/inputbox/inputBox.js\";\nimport type { IKeybindingLabelStyles } from \"../../../base/browser/ui/keybindingLabel/keybindingLabel.js\";\nimport type { IListStyles } from \"../../../base/browser/ui/list/listWidget.js\";\nimport type {\n\tIProgressBarStyles,\n\tProgressBar,\n} from \"../../../base/browser/ui/progressbar/progressbar.js\";\nimport {\n\ttype IToggleStyles,\n\tToggle,\n} from \"../../../base/browser/ui/toggle/toggle.js\";\nimport { equals } from \"../../../base/common/arrays.js\";\nimport { TimeoutTimer } from \"../../../base/common/async.js\";\nimport { Codicon } from \"../../../base/common/codicons.js\";\nimport {\n\tEmitter,\n\ttype Event,\n\tEventBufferer,\n} from \"../../../base/common/event.js\";\nimport { KeyCode } from \"../../../base/common/keyCodes.js\";\nimport { Disposable, DisposableStore } from \"../../../base/common/lifecycle.js\";\nimport { isIOS } from \"../../../base/common/platform.js\";\nimport Severity from \"../../../base/common/severity.js\";\nimport { ThemeIcon } from \"../../../base/common/themables.js\";\nimport \"./media/quickInput.css\";\nimport type { IHoverOptions } from \"../../../base/browser/ui/hover/hover.js\";\nimport { localize } from \"../../../nls.js\";\nimport { IConfigurationService } from \"../../configuration/common/configuration.js\";\nimport {\n\tContextKeyExpr,\n\tRawContextKey,\n} from \"../../contextkey/common/contextkey.js\";\nimport {\n\tIHoverService,\n\tWorkbenchHoverDelegate,\n} from \"../../hover/browser/hover.js\";\nimport {\n\ttype IInputBox,\n\ttype IKeyMods,\n\ttype IQuickInput,\n\ttype IQuickInputButton,\n\ttype IQuickInputHideEvent,\n\ttype IQuickInputToggle,\n\ttype IQuickNavigateConfiguration,\n\ttype IQuickPick,\n\ttype IQuickPickDidAcceptEvent,\n\ttype IQuickPickItem,\n\ttype IQuickPickItemButtonEvent,\n\ttype IQuickPickSeparator,\n\ttype IQuickPickSeparatorButtonEvent,\n\ttype IQuickPickWillAcceptEvent,\n\ttype IQuickWidget,\n\tItemActivation,\n\tNO_KEY_MODS,\n\tQuickInputButtonLocation,\n\tQuickInputHideReason,\n\tQuickInputType,\n\tQuickPickFocus,\n} from \"../common/quickInput.js\";\nimport type { QuickInputBox } from \"./quickInputBox.js\";\nimport type { QuickInputTree } from \"./quickInputTree.js\";\nimport {\n\tquickInputButtonToAction,\n\trenderQuickInputDescription,\n} from \"./quickInputUtils.js\";\n\nexport const inQuickInputContextKeyValue = \"inQuickInput\";\nexport const InQuickInputContextKey = new RawContextKey<boolean>(\n\tinQuickInputContextKeyValue,\n\tfalse,\n\tlocalize(\n\t\t\"inQuickInput\",\n\t\t\"Whether keyboard focus is inside the quick input control\",\n\t),\n);\nexport const inQuickInputContext = ContextKeyExpr.has(\n\tinQuickInputContextKeyValue,\n);\n\nexport const quickInputTypeContextKeyValue = \"quickInputType\";\nexport const QuickInputTypeContextKey = new RawContextKey<QuickInputType>(\n\tquickInputTypeContextKeyValue,\n\tundefined,\n\tlocalize(\"quickInputType\", \"The type of the currently visible quick input\"),\n);\n\nexport const endOfQuickInputBoxContextKeyValue = \"cursorAtEndOfQuickInputBox\";\nexport const EndOfQuickInputBoxContextKey = new RawContextKey<boolean>(\n\tendOfQuickInputBoxContextKeyValue,\n\tfalse,\n\tlocalize(\n\t\t\"cursorAtEndOfQuickInputBox\",\n\t\t\"Whether the cursor in the quick input is at the end of the input box\",\n\t),\n);\nexport const endOfQuickInputBoxContext = ContextKeyExpr.has(\n\tendOfQuickInputBoxContextKeyValue,\n);\n\nexport interface IQuickInputOptions {\n\tidPrefix: string;\n\tcontainer: HTMLElement;\n\tignoreFocusOut(): boolean;\n\tbackKeybindingLabel(): string | undefined;\n\tsetContextKey(id?: string): void;\n\tlinkOpenerDelegate(content: string): void;\n\treturnFocus(): void;\n\t/**\n\t * @todo With IHover in vs/editor, can we depend on the service directly\n\t * instead of passing it through a hover delegate?\n\t */\n\thoverDelegate: IHoverDelegate;\n\tstyles: IQuickInputStyles;\n}\n\nexport interface IQuickInputStyles {\n\treadonly widget: IQuickInputWidgetStyles;\n\treadonly inputBox: IInputBoxStyles;\n\treadonly toggle: IToggleStyles;\n\treadonly countBadge: ICountBadgeStyles;\n\treadonly button: IButtonStyles;\n\treadonly progressBar: IProgressBarStyles;\n\treadonly keybindingLabel: IKeybindingLabelStyles;\n\treadonly list: IListStyles;\n\treadonly pickerGroup: {\n\t\tpickerGroupBorder: string | undefined;\n\t\tpickerGroupForeground: string | undefined;\n\t};\n}\n\nexport interface IQuickInputWidgetStyles {\n\treadonly quickInputBackground: string | undefined;\n\treadonly quickInputForeground: string | undefined;\n\treadonly quickInputTitleBackground: string | undefined;\n\treadonly widgetBorder: string | undefined;\n\treadonly widgetShadow: string | undefined;\n}\n\nexport type Writeable<T> = { -readonly [P in keyof T]: T[P] };\n\nexport const backButton = {\n\ticonClass: ThemeIcon.asClassName(Codicon.quickInputBack),\n\ttooltip: localize(\"quickInput.back\", \"Back\"),\n\thandle: -1, // TODO\n};\n\nexport interface QuickInputUI {\n\tcontainer: HTMLElement;\n\tstyleSheet: HTMLStyleElement;\n\tleftActionBar: ActionBar;\n\ttitleBar: HTMLElement;\n\ttitle: HTMLElement;\n\tdescription1: HTMLElement;\n\tdescription2: HTMLElement;\n\twidget: HTMLElement;\n\trightActionBar: ActionBar;\n\tinlineActionBar: ActionBar;\n\tcheckAll: HTMLInputElement;\n\tinputContainer: HTMLElement;\n\tfilterContainer: HTMLElement;\n\tinputBox: QuickInputBox;\n\tvisibleCountContainer: HTMLElement;\n\tvisibleCount: CountBadge;\n\tcountContainer: HTMLElement;\n\tcount: CountBadge;\n\tokContainer: HTMLElement;\n\tok: Button;\n\tmessage: HTMLElement;\n\tcustomButtonContainer: HTMLElement;\n\tcustomButton: Button;\n\tprogressBar: ProgressBar;\n\tlist: QuickInputTree;\n\tonDidAccept: Event<void>;\n\tonDidCustom: Event<void>;\n\tonDidTriggerButton: Event<IQuickInputButton>;\n\tignoreFocusOut: boolean;\n\tkeyMods: Writeable<IKeyMods>;\n\tshow(controller: QuickInput): void;\n\tsetVisibilities(visibilities: Visibilities): void;\n\tsetEnabled(enabled: boolean): void;\n\tsetContextKey(contextKey?: string): void;\n\tlinkOpenerDelegate(content: string): void;\n\thide(): void;\n}\n\nexport type Visibilities = {\n\ttitle?: boolean;\n\tdescription?: boolean;\n\tcheckAll?: boolean;\n\tinputBox?: boolean;\n\tcheckBox?: boolean;\n\tvisibleCount?: boolean;\n\tcount?: boolean;\n\tmessage?: boolean;\n\tlist?: boolean;\n\tok?: boolean;\n\tcustomButton?: boolean;\n\tprogressBar?: boolean;\n};\n\nabstract class QuickInput extends Disposable implements IQuickInput {\n\tprotected static readonly noPromptMessage = localize(\n\t\t\"inputModeEntry\",\n\t\t\"Press 'Enter' to confirm your input or 'Escape' to cancel\",\n\t);\n\n\tprivate _title: string | undefined;\n\tprivate _description: string | undefined;\n\tprivate _widget: HTMLElement | undefined;\n\tprivate _widgetUpdated = false;\n\tprivate _steps: number | undefined;\n\tprivate _totalSteps: number | undefined;\n\tprotected visible = false;\n\tprivate _enabled = true;\n\tprivate _contextKey: string | undefined;\n\tprivate _busy = false;\n\tprivate _ignoreFocusOut = false;\n\tprivate _leftButtons: IQuickInputButton[] = [];\n\tprivate _rightButtons: IQuickInputButton[] = [];\n\tprivate _inlineButtons: IQuickInputButton[] = [];\n\tprivate buttonsUpdated = false;\n\tprivate _toggles: IQuickInputToggle[] = [];\n\tprivate togglesUpdated = false;\n\tprotected noValidationMessage = QuickInput.noPromptMessage;\n\tprivate _validationMessage: string | undefined;\n\tprivate _lastValidationMessage: string | undefined;\n\tprivate _severity: Severity = Severity.Ignore;\n\tprivate _lastSeverity: Severity | undefined;\n\tprivate readonly onDidTriggerButtonEmitter = this._register(\n\t\tnew Emitter<IQuickInputButton>(),\n\t);\n\tprivate readonly onDidHideEmitter = this._register(\n\t\tnew Emitter<IQuickInputHideEvent>(),\n\t);\n\tprivate readonly onWillHideEmitter = this._register(\n\t\tnew Emitter<IQuickInputHideEvent>(),\n\t);\n\tprivate readonly onDisposeEmitter = this._register(new Emitter<void>());\n\n\tprotected readonly visibleDisposables = this._register(\n\t\tnew DisposableStore(),\n\t);\n\n\tprivate busyDelay: TimeoutTimer | undefined;\n\n\tabstract type: QuickInputType;\n\n\tconstructor(protected ui: QuickInputUI) {\n\t\tsuper();\n\t}\n\n\tget title() {\n\t\treturn this._title;\n\t}\n\n\tset title(title: string | undefined) {\n\t\tthis._title = title;\n\t\tthis.update();\n\t}\n\n\tget description() {\n\t\treturn this._description;\n\t}\n\n\tset description(description: string | undefined) {\n\t\tthis._description = description;\n\t\tthis.update();\n\t}\n\n\tget widget() {\n\t\treturn this._widget;\n\t}\n\n\tset widget(widget: unknown | undefined) {\n\t\tif (!dom.isHTMLElement(widget)) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._widget !== widget) {\n\t\t\tthis._widget = widget;\n\t\t\tthis._widgetUpdated = true;\n\t\t\tthis.update();\n\t\t}\n\t}\n\n\tget step() {\n\t\treturn this._steps;\n\t}\n\n\tset step(step: number | undefined) {\n\t\tthis._steps = step;\n\t\tthis.update();\n\t}\n\n\tget totalSteps() {\n\t\treturn this._totalSteps;\n\t}\n\n\tset totalSteps(totalSteps: number | undefined) {\n\t\tthis._totalSteps = totalSteps;\n\t\tthis.update();\n\t}\n\n\tget enabled() {\n\t\treturn this._enabled;\n\t}\n\n\tset enabled(enabled: boolean) {\n\t\tthis._enabled = enabled;\n\t\tthis.update();\n\t}\n\n\tget contextKey() {\n\t\treturn this._contextKey;\n\t}\n\n\tset contextKey(contextKey: string | undefined) {\n\t\tthis._contextKey = contextKey;\n\t\tthis.update();\n\t}\n\n\tget busy() {\n\t\treturn this._busy;\n\t}\n\n\tset busy(busy: boolean) {\n\t\tthis._busy = busy;\n\t\tthis.update();\n\t}\n\n\tget ignoreFocusOut() {\n\t\treturn this._ignoreFocusOut;\n\t}\n\n\tset ignoreFocusOut(ignoreFocusOut: boolean) {\n\t\tconst shouldUpdate = this._ignoreFocusOut !== ignoreFocusOut && !isIOS;\n\t\tthis._ignoreFocusOut = ignoreFocusOut && !isIOS;\n\t\tif (shouldUpdate) {\n\t\t\tthis.update();\n\t\t}\n\t}\n\n\tprotected get titleButtons() {\n\t\treturn this._leftButtons.length\n\t\t\t? [...this._leftButtons, this._rightButtons]\n\t\t\t: this._rightButtons;\n\t}\n\n\tget buttons() {\n\t\treturn [\n\t\t\t...this._leftButtons,\n\t\t\t...this._rightButtons,\n\t\t\t...this._inlineButtons,\n\t\t];\n\t}\n\n\tset buttons(buttons: IQuickInputButton[]) {\n\t\tthis._leftButtons = buttons.filter((b) => b === backButton);\n\t\tthis._rightButtons = buttons.filter(\n\t\t\t(b) =>\n\t\t\t\tb !== backButton &&\n\t\t\t\tb.location !== QuickInputButtonLocation.Inline,\n\t\t);\n\t\tthis._inlineButtons = buttons.filter(\n\t\t\t(b) => b.location === QuickInputButtonLocation.Inline,\n\t\t);\n\t\tthis.buttonsUpdated = true;\n\t\tthis.update();\n\t}\n\n\tget toggles() {\n\t\treturn this._toggles;\n\t}\n\n\tset toggles(toggles: IQuickInputToggle[]) {\n\t\tthis._toggles = toggles ?? [];\n\t\tthis.togglesUpdated = true;\n\t\tthis.update();\n\t}\n\n\tget validationMessage() {\n\t\treturn this._validationMessage;\n\t}\n\n\tset validationMessage(validationMessage: string | undefined) {\n\t\tthis._validationMessage = validationMessage;\n\t\tthis.update();\n\t}\n\n\tget severity() {\n\t\treturn this._severity;\n\t}\n\n\tset severity(severity: Severity) {\n\t\tthis._severity = severity;\n\t\tthis.update();\n\t}\n\n\treadonly onDidTriggerButton = this.onDidTriggerButtonEmitter.event;\n\n\tshow(): void {\n\t\tif (this.visible) {\n\t\t\treturn;\n\t\t}\n\t\tthis.visibleDisposables.add(\n\t\t\tthis.ui.onDidTriggerButton((button) => {\n\t\t\t\tif (this.buttons.indexOf(button) !== -1) {\n\t\t\t\t\tthis.onDidTriggerButtonEmitter.fire(button);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis.ui.show(this);\n\n\t\t// update properties in the controller that get reset in the ui.show() call\n\t\tthis.visible = true;\n\t\t// This ensures the message/prompt gets rendered\n\t\tthis._lastValidationMessage = undefined;\n\t\t// This ensures the input box has the right severity applied\n\t\tthis._lastSeverity = undefined;\n\t\tif (this.buttons.length) {\n\t\t\t// if there are buttons, the ui.show() clears them out of the UI so we should\n\t\t\t// rerender them.\n\t\t\tthis.buttonsUpdated = true;\n\t\t}\n\t\tif (this.toggles.length) {\n\t\t\t// if there are toggles, the ui.show() clears them out of the UI so we should\n\t\t\t// rerender them.\n\t\t\tthis.togglesUpdated = true;\n\t\t}\n\n\t\tthis.update();\n\t}\n\n\thide(): void {\n\t\tif (!this.visible) {\n\t\t\treturn;\n\t\t}\n\t\tthis.ui.hide();\n\t}\n\n\tdidHide(reason = QuickInputHideReason.Other): void {\n\t\tthis.visible = false;\n\t\tthis.visibleDisposables.clear();\n\t\tthis.onDidHideEmitter.fire({ reason });\n\t}\n\n\treadonly onDidHide = this.onDidHideEmitter.event;\n\n\twillHide(reason = QuickInputHideReason.Other): void {\n\t\tthis.onWillHideEmitter.fire({ reason });\n\t}\n\treadonly onWillHide = this.onWillHideEmitter.event;\n\n\tprotected update() {\n\t\tif (!this.visible) {\n\t\t\treturn;\n\t\t}\n\t\tconst title = this.getTitle();\n\t\tif (title && this.ui.title.textContent !== title) {\n\t\t\tthis.ui.title.textContent = title;\n\t\t} else if (!title && this.ui.title.innerHTML !== \"&nbsp;\") {\n\t\t\tthis.ui.title.innerText = \"\\u00a0\";\n\t\t}\n\t\tconst description = this.getDescription();\n\t\tif (this.ui.description1.textContent !== description) {\n\t\t\tthis.ui.description1.textContent = description;\n\t\t}\n\t\tif (this.ui.description2.textContent !== description) {\n\t\t\tthis.ui.description2.textContent = description;\n\t\t}\n\t\tif (this._widgetUpdated) {\n\t\t\tthis._widgetUpdated = false;\n\t\t\tif (this._widget) {\n\t\t\t\tdom.reset(this.ui.widget, this._widget);\n\t\t\t} else {\n\t\t\t\tdom.reset(this.ui.widget);\n\t\t\t}\n\t\t}\n\t\tif (this.busy && !this.busyDelay) {\n\t\t\tthis.busyDelay = new TimeoutTimer();\n\t\t\tthis.busyDelay.setIfNotSet(() => {\n\t\t\t\tif (this.visible) {\n\t\t\t\t\tthis.ui.progressBar.infinite();\n\t\t\t\t}\n\t\t\t}, 800);\n\t\t}\n\t\tif (!this.busy && this.busyDelay) {\n\t\t\tthis.ui.progressBar.stop();\n\t\t\tthis.busyDelay.cancel();\n\t\t\tthis.busyDelay = undefined;\n\t\t}\n\t\tif (this.buttonsUpdated) {\n\t\t\tthis.buttonsUpdated = false;\n\t\t\tthis.ui.leftActionBar.clear();\n\t\t\tconst leftButtons = this._leftButtons.map((button, index) =>\n\t\t\t\tquickInputButtonToAction(button, `id-${index}`, async () =>\n\t\t\t\t\tthis.onDidTriggerButtonEmitter.fire(button),\n\t\t\t\t),\n\t\t\t);\n\t\t\tthis.ui.leftActionBar.push(leftButtons, {\n\t\t\t\ticon: true,\n\t\t\t\tlabel: false,\n\t\t\t});\n\t\t\tthis.ui.rightActionBar.clear();\n\t\t\tconst rightButtons = this._rightButtons.map((button, index) =>\n\t\t\t\tquickInputButtonToAction(button, `id-${index}`, async () =>\n\t\t\t\t\tthis.onDidTriggerButtonEmitter.fire(button),\n\t\t\t\t),\n\t\t\t);\n\t\t\tthis.ui.rightActionBar.push(rightButtons, {\n\t\t\t\ticon: true,\n\t\t\t\tlabel: false,\n\t\t\t});\n\t\t\tthis.ui.inlineActionBar.clear();\n\t\t\tconst inlineButtons = this._inlineButtons.map((button, index) =>\n\t\t\t\tquickInputButtonToAction(button, `id-${index}`, async () =>\n\t\t\t\t\tthis.onDidTriggerButtonEmitter.fire(button),\n\t\t\t\t),\n\t\t\t);\n\t\t\tthis.ui.inlineActionBar.push(inlineButtons, {\n\t\t\t\ticon: true,\n\t\t\t\tlabel: false,\n\t\t\t});\n\t\t}\n\t\tif (this.togglesUpdated) {\n\t\t\tthis.togglesUpdated = false;\n\t\t\t// HACK: Filter out toggles here that are not concrete Toggle objects. This is to workaround\n\t\t\t// a layering issue as quick input's interface is in common but Toggle is in browser and\n\t\t\t// it requires a HTMLElement on its interface\n\t\t\tconst concreteToggles =\n\t\t\t\t(this.toggles?.filter(\n\t\t\t\t\t(opts) => opts instanceof Toggle,\n\t\t\t\t) as Toggle[]) ?? [];\n\t\t\tthis.ui.inputBox.toggles = concreteToggles;\n\t\t}\n\t\tthis.ui.ignoreFocusOut = this.ignoreFocusOut;\n\t\tthis.ui.setEnabled(this.enabled);\n\t\tthis.ui.setContextKey(this.contextKey);\n\n\t\tconst validationMessage =\n\t\t\tthis.validationMessage || this.noValidationMessage;\n\t\tif (this._lastValidationMessage !== validationMessage) {\n\t\t\tthis._lastValidationMessage = validationMessage;\n\t\t\tdom.reset(this.ui.message);\n\t\t\trenderQuickInputDescription(validationMessage, this.ui.message, {\n\t\t\t\tcallback: (content) => {\n\t\t\t\t\tthis.ui.linkOpenerDelegate(content);\n\t\t\t\t},\n\t\t\t\tdisposables: this.visibleDisposables,\n\t\t\t});\n\t\t}\n\t\tif (this._lastSeverity !== this.severity) {\n\t\t\tthis._lastSeverity = this.severity;\n\t\t\tthis.showMessageDecoration(this.severity);\n\t\t}\n\t}\n\n\tprivate getTitle() {\n\t\tif (this.title && this.step) {\n\t\t\treturn `${this.title} (${this.getSteps()})`;\n\t\t}\n\t\tif (this.title) {\n\t\t\treturn this.title;\n\t\t}\n\t\tif (this.step) {\n\t\t\treturn this.getSteps();\n\t\t}\n\t\treturn \"\";\n\t}\n\n\tprivate getDescription() {\n\t\treturn this.description || \"\";\n\t}\n\n\tprivate getSteps() {\n\t\tif (this.step && this.totalSteps) {\n\t\t\treturn localize(\n\t\t\t\t\"quickInput.steps\",\n\t\t\t\t\"{0}/{1}\",\n\t\t\t\tthis.step,\n\t\t\t\tthis.totalSteps,\n\t\t\t);\n\t\t}\n\t\tif (this.step) {\n\t\t\treturn String(this.step);\n\t\t}\n\t\treturn \"\";\n\t}\n\n\tprotected showMessageDecoration(severity: Severity) {\n\t\tthis.ui.inputBox.showDecoration(severity);\n\t\tif (severity !== Severity.Ignore) {\n\t\t\tconst styles = this.ui.inputBox.stylesForType(severity);\n\t\t\tthis.ui.message.style.color = styles.foreground\n\t\t\t\t? `${styles.foreground}`\n\t\t\t\t: \"\";\n\t\t\tthis.ui.message.style.backgroundColor = styles.background\n\t\t\t\t? `${styles.background}`\n\t\t\t\t: \"\";\n\t\t\tthis.ui.message.style.border = styles.border\n\t\t\t\t? `1px solid ${styles.border}`\n\t\t\t\t: \"\";\n\t\t\tthis.ui.message.style.marginBottom = \"-2px\";\n\t\t} else {\n\t\t\tthis.ui.message.style.color = \"\";\n\t\t\tthis.ui.message.style.backgroundColor = \"\";\n\t\t\tthis.ui.message.style.border = \"\";\n\t\t\tthis.ui.message.style.marginBottom = \"\";\n\t\t}\n\t}\n\n\treadonly onDispose = this.onDisposeEmitter.event;\n\n\toverride dispose(): void {\n\t\tthis.hide();\n\t\tthis.onDisposeEmitter.fire();\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport class QuickPick<\n\t\tT extends IQuickPickItem,\n\t\tO extends { useSeparators: boolean } = { useSeparators: false },\n\t>\n\textends QuickInput\n\timplements IQuickPick<T, O>\n{\n\tprivate static readonly DEFAULT_ARIA_LABEL = localize(\n\t\t\"quickInputBox.ariaLabel\",\n\t\t\"Type to narrow down results.\",\n\t);\n\n\tprivate _value = \"\";\n\tprivate _ariaLabel: string | undefined;\n\tprivate _placeholder: string | undefined;\n\tprivate readonly onDidChangeValueEmitter = this._register(\n\t\tnew Emitter<string>(),\n\t);\n\tprivate readonly onWillAcceptEmitter = this._register(\n\t\tnew Emitter<IQuickPickWillAcceptEvent>(),\n\t);\n\tprivate readonly onDidAcceptEmitter = this._register(\n\t\tnew Emitter<IQuickPickDidAcceptEvent>(),\n\t);\n\tprivate readonly onDidCustomEmitter = this._register(new Emitter<void>());\n\tprivate _items: O extends { useSeparators: true }\n\t\t? Array<T | IQuickPickSeparator>\n\t\t: Array<T> = [];\n\tprivate itemsUpdated = false;\n\tprivate _canSelectMany = false;\n\tprivate _canAcceptInBackground = false;\n\tprivate _matchOnDescription = false;\n\tprivate _matchOnDetail = false;\n\tprivate _matchOnLabel = true;\n\tprivate _matchOnLabelMode: \"fuzzy\" | \"contiguous\" = \"fuzzy\";\n\tprivate _sortByLabel = true;\n\tprivate _keepScrollPosition = false;\n\tprivate _itemActivation = ItemActivation.FIRST;\n\tprivate _activeItems: T[] = [];\n\tprivate activeItemsUpdated = false;\n\tprivate activeItemsToConfirm: T[] | null = [];\n\tprivate readonly onDidChangeActiveEmitter = this._register(\n\t\tnew Emitter<T[]>(),\n\t);\n\tprivate _selectedItems: T[] = [];\n\tprivate selectedItemsUpdated = false;\n\tprivate selectedItemsToConfirm: T[] | null = [];\n\tprivate readonly onDidChangeSelectionEmitter = this._register(\n\t\tnew Emitter<T[]>(),\n\t);\n\tprivate readonly onDidTriggerItemButtonEmitter = this._register(\n\t\tnew Emitter<IQuickPickItemButtonEvent<T>>(),\n\t);\n\tprivate readonly onDidTriggerSeparatorButtonEmitter = this._register(\n\t\tnew Emitter<IQuickPickSeparatorButtonEvent>(),\n\t);\n\tprivate _valueSelection: Readonly<[number, number]> | undefined;\n\tprivate valueSelectionUpdated = true;\n\tprivate _ok: boolean | \"default\" = \"default\";\n\tprivate _customButton = false;\n\tprivate _customButtonLabel: string | undefined;\n\tprivate _customButtonHover: string | undefined;\n\tprivate _quickNavigate: IQuickNavigateConfiguration | undefined;\n\tprivate _hideInput: boolean | undefined;\n\tprivate _hideCountBadge: boolean | undefined;\n\tprivate _hideCheckAll: boolean | undefined;\n\tprivate _focusEventBufferer = new EventBufferer();\n\n\treadonly type = QuickInputType.QuickPick;\n\n\tget quickNavigate() {\n\t\treturn this._quickNavigate;\n\t}\n\n\tset quickNavigate(quickNavigate: IQuickNavigateConfiguration | undefined) {\n\t\tthis._quickNavigate = quickNavigate;\n\t\tthis.update();\n\t}\n\n\tget value() {\n\t\treturn this._value;\n\t}\n\n\tset value(value: string) {\n\t\tthis.doSetValue(value);\n\t}\n\n\tprivate doSetValue(value: string, skipUpdate?: boolean): void {\n\t\tif (this._value !== value) {\n\t\t\tthis._value = value;\n\t\t\tif (!skipUpdate) {\n\t\t\t\tthis.update();\n\t\t\t}\n\t\t\tif (this.visible) {\n\t\t\t\tconst didFilter = this.ui.list.filter(\n\t\t\t\t\tthis.filterValue(this._value),\n\t\t\t\t);\n\t\t\t\tif (didFilter) {\n\t\t\t\t\tthis.trySelectFirst();\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.onDidChangeValueEmitter.fire(this._value);\n\t\t}\n\t}\n\n\tfilterValue = (value: string) => value;\n\n\tset ariaLabel(ariaLabel: string | undefined) {\n\t\tthis._ariaLabel = ariaLabel;\n\t\tthis.update();\n\t}\n\n\tget ariaLabel() {\n\t\treturn this._ariaLabel;\n\t}\n\n\tget placeholder() {\n\t\treturn this._placeholder;\n\t}\n\n\tset placeholder(placeholder: string | undefined) {\n\t\tthis._placeholder = placeholder;\n\t\tthis.update();\n\t}\n\n\tonDidChangeValue = this.onDidChangeValueEmitter.event;\n\n\tonWillAccept = this.onWillAcceptEmitter.event;\n\tonDidAccept = this.onDidAcceptEmitter.event;\n\n\tonDidCustom = this.onDidCustomEmitter.event;\n\n\tget items() {\n\t\treturn this._items;\n\t}\n\n\tget scrollTop() {\n\t\treturn this.ui.list.scrollTop;\n\t}\n\n\tprivate set scrollTop(scrollTop: number) {\n\t\tthis.ui.list.scrollTop = scrollTop;\n\t}\n\n\tset items(items: O extends { useSeparators: true }\n\t\t? Array<T | IQuickPickSeparator>\n\t\t: Array<T>) {\n\t\tthis._items = items;\n\t\tthis.itemsUpdated = true;\n\t\tthis.update();\n\t}\n\n\tget canSelectMany() {\n\t\treturn this._canSelectMany;\n\t}\n\n\tset canSelectMany(canSelectMany: boolean) {\n\t\tthis._canSelectMany = canSelectMany;\n\t\tthis.update();\n\t}\n\n\tget canAcceptInBackground() {\n\t\treturn this._canAcceptInBackground;\n\t}\n\n\tset canAcceptInBackground(canAcceptInBackground: boolean) {\n\t\tthis._canAcceptInBackground = canAcceptInBackground;\n\t}\n\n\tget matchOnDescription() {\n\t\treturn this._matchOnDescription;\n\t}\n\n\tset matchOnDescription(matchOnDescription: boolean) {\n\t\tthis._matchOnDescription = matchOnDescription;\n\t\tthis.update();\n\t}\n\n\tget matchOnDetail() {\n\t\treturn this._matchOnDetail;\n\t}\n\n\tset matchOnDetail(matchOnDetail: boolean) {\n\t\tthis._matchOnDetail = matchOnDetail;\n\t\tthis.update();\n\t}\n\n\tget matchOnLabel() {\n\t\treturn this._matchOnLabel;\n\t}\n\n\tset matchOnLabel(matchOnLabel: boolean) {\n\t\tthis._matchOnLabel = matchOnLabel;\n\t\tthis.update();\n\t}\n\n\tget matchOnLabelMode() {\n\t\treturn this._matchOnLabelMode;\n\t}\n\n\tset matchOnLabelMode(matchOnLabelMode: \"fuzzy\" | \"contiguous\") {\n\t\tthis._matchOnLabelMode = matchOnLabelMode;\n\t\tthis.update();\n\t}\n\n\tget sortByLabel() {\n\t\treturn this._sortByLabel;\n\t}\n\n\tset sortByLabel(sortByLabel: boolean) {\n\t\tthis._sortByLabel = sortByLabel;\n\t\tthis.update();\n\t}\n\n\tget keepScrollPosition() {\n\t\treturn this._keepScrollPosition;\n\t}\n\n\tset keepScrollPosition(keepScrollPosition: boolean) {\n\t\tthis._keepScrollPosition = keepScrollPosition;\n\t}\n\n\tget itemActivation() {\n\t\treturn this._itemActivation;\n\t}\n\n\tset itemActivation(itemActivation: ItemActivation) {\n\t\tthis._itemActivation = itemActivation;\n\t}\n\n\tget activeItems() {\n\t\treturn this._activeItems;\n\t}\n\n\tset activeItems(activeItems: T[]) {\n\t\tthis._activeItems = activeItems;\n\t\tthis.activeItemsUpdated = true;\n\t\tthis.update();\n\t}\n\n\tonDidChangeActive = this.onDidChangeActiveEmitter.event;\n\n\tget selectedItems() {\n\t\treturn this._selectedItems;\n\t}\n\n\tset selectedItems(selectedItems: T[]) {\n\t\tthis._selectedItems = selectedItems;\n\t\tthis.selectedItemsUpdated = true;\n\t\tthis.update();\n\t}\n\n\tget keyMods() {\n\t\tif (this._quickNavigate) {\n\t\t\t// Disable keyMods when quick navigate is enabled\n\t\t\t// because in this model the interaction is purely\n\t\t\t// keyboard driven and Ctrl/Alt are typically\n\t\t\t// pressed and hold during this interaction.\n\t\t\treturn NO_KEY_MODS;\n\t\t}\n\t\treturn this.ui.keyMods;\n\t}\n\n\tget valueSelection() {\n\t\tconst selection = this.ui.inputBox.getSelection();\n\t\tif (!selection) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn [selection.start, selection.end];\n\t}\n\n\tset valueSelection(valueSelection: Readonly<[number, number]> | undefined) {\n\t\tthis._valueSelection = valueSelection;\n\t\tthis.valueSelectionUpdated = true;\n\t\tthis.update();\n\t}\n\n\tget customButton() {\n\t\treturn this._customButton;\n\t}\n\n\tset customButton(showCustomButton: boolean) {\n\t\tthis._customButton = showCustomButton;\n\t\tthis.update();\n\t}\n\n\tget customLabel() {\n\t\treturn this._customButtonLabel;\n\t}\n\n\tset customLabel(label: string | undefined) {\n\t\tthis._customButtonLabel = label;\n\t\tthis.update();\n\t}\n\n\tget customHover() {\n\t\treturn this._customButtonHover;\n\t}\n\n\tset customHover(hover: string | undefined) {\n\t\tthis._customButtonHover = hover;\n\t\tthis.update();\n\t}\n\n\tget ok() {\n\t\treturn this._ok;\n\t}\n\n\tset ok(showOkButton: boolean | \"default\") {\n\t\tthis._ok = showOkButton;\n\t\tthis.update();\n\t}\n\n\tinputHasFocus(): boolean {\n\t\treturn this.visible ? this.ui.inputBox.hasFocus() : false;\n\t}\n\n\tfocusOnInput() {\n\t\tthis.ui.inputBox.setFocus();\n\t}\n\n\tget hideInput() {\n\t\treturn !!this._hideInput;\n\t}\n\n\tset hideInput(hideInput: boolean) {\n\t\tthis._hideInput = hideInput;\n\t\tthis.update();\n\t}\n\n\tget hideCountBadge() {\n\t\treturn !!this._hideCountBadge;\n\t}\n\n\tset hideCountBadge(hideCountBadge: boolean) {\n\t\tthis._hideCountBadge = hideCountBadge;\n\t\tthis.update();\n\t}\n\n\tget hideCheckAll() {\n\t\treturn !!this._hideCheckAll;\n\t}\n\n\tset hideCheckAll(hideCheckAll: boolean) {\n\t\tthis._hideCheckAll = hideCheckAll;\n\t\tthis.update();\n\t}\n\n\tonDidChangeSelection = this.onDidChangeSelectionEmitter.event;\n\n\tonDidTriggerItemButton = this.onDidTriggerItemButtonEmitter.event;\n\n\tonDidTriggerSeparatorButton = this.onDidTriggerSeparatorButtonEmitter.event;\n\n\tprivate trySelectFirst() {\n\t\tif (!this.canSelectMany) {\n\t\t\tthis.ui.list.focus(QuickPickFocus.First);\n\t\t}\n\t}\n\n\toverride show() {\n\t\tif (!this.visible) {\n\t\t\tthis.visibleDisposables.add(\n\t\t\t\tthis.ui.inputBox.onDidChange((value) => {\n\t\t\t\t\tthis.doSetValue(\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\ttrue /* skip update since this originates from the UI */,\n\t\t\t\t\t);\n\t\t\t\t}),\n\t\t\t);\n\t\t\tthis.visibleDisposables.add(\n\t\t\t\tthis.ui.onDidAccept(() => {\n\t\t\t\t\tif (this.canSelectMany) {\n\t\t\t\t\t\t// if there are no checked elements, it means that an onDidChangeSelection never fired to overwrite\n\t\t\t\t\t\t// `_selectedItems`. In that case, we should emit one with an empty array to ensure that\n\t\t\t\t\t\t// `.selectedItems` is up to date.\n\t\t\t\t\t\tif (!this.ui.list.getCheckedElements().length) {\n\t\t\t\t\t\t\tthis._selectedItems = [];\n\t\t\t\t\t\t\tthis.onDidChangeSelectionEmitter.fire(\n\t\t\t\t\t\t\t\tthis.selectedItems,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (this.activeItems[0]) {\n\t\t\t\t\t\t// For single-select, we set `selectedItems` to the item that was accepted.\n\t\t\t\t\t\tthis._selectedItems = [this.activeItems[0]];\n\t\t\t\t\t\tthis.onDidChangeSelectionEmitter.fire(\n\t\t\t\t\t\t\tthis.selectedItems,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tthis.handleAccept(false);\n\t\t\t\t}),\n\t\t\t);\n\t\t\tthis.visibleDisposables.add(\n\t\t\t\tthis.ui.onDidCustom(() => {\n\t\t\t\t\tthis.onDidCustomEmitter.fire();\n\t\t\t\t}),\n\t\t\t);\n\t\t\tthis.visibleDisposables.add(\n\t\t\t\tthis._focusEventBufferer.wrapEvent(\n\t\t\t\t\tthis.ui.list.onDidChangeFocus,\n\t\t\t\t\t// Only fire the last event\n\t\t\t\t\t(_, e) => e,\n\t\t\t\t)((focusedItems) => {\n\t\t\t\t\tif (this.activeItemsUpdated) {\n\t\t\t\t\t\treturn; // Expect another event.\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.activeItemsToConfirm !== this._activeItems &&\n\t\t\t\t\t\tequals(\n\t\t\t\t\t\t\tfocusedItems,\n\t\t\t\t\t\t\tthis._activeItems,\n\t\t\t\t\t\t\t(a, b) => a === b,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis._activeItems = focusedItems as T[];\n\t\t\t\t\tthis.onDidChangeActiveEmitter.fire(focusedItems as T[]);\n\t\t\t\t}),\n\t\t\t);\n\t\t\tthis.visibleDisposables.add(\n\t\t\t\tthis.ui.list.onDidChangeSelection(\n\t\t\t\t\t({ items: selectedItems, event }) => {\n\t\t\t\t\t\tif (this.canSelectMany) {\n\t\t\t\t\t\t\tif (selectedItems.length) {\n\t\t\t\t\t\t\t\tthis.ui.list.setSelectedElements([]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tthis.selectedItemsToConfirm !==\n\t\t\t\t\t\t\t\tthis._selectedItems &&\n\t\t\t\t\t\t\tequals(\n\t\t\t\t\t\t\t\tselectedItems,\n\t\t\t\t\t\t\t\tthis._selectedItems,\n\t\t\t\t\t\t\t\t(a, b) => a === b,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._selectedItems = selectedItems as T[];\n\t\t\t\t\t\tthis.onDidChangeSelectionEmitter.fire(\n\t\t\t\t\t\t\tselectedItems as T[],\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (selectedItems.length) {\n\t\t\t\t\t\t\tthis.handleAccept(\n\t\t\t\t\t\t\t\tdom.isMouseEvent(event) &&\n\t\t\t\t\t\t\t\t\tevent.button === 1 /* mouse middle click */,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\t\t\tthis.visibleDisposables.add(\n\t\t\t\tthis.ui.list.onChangedCheckedElements((checkedItems) => {\n\t\t\t\t\tif (!this.canSelectMany || !this.visible) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.selectedItemsToConfirm !== this._selectedItems &&\n\t\t\t\t\t\tequals(\n\t\t\t\t\t\t\tcheckedItems,\n\t\t\t\t\t\t\tthis._selectedItems,\n\t\t\t\t\t\t\t(a, b) => a === b,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis._selectedItems = checkedItems as T[];\n\t\t\t\t\tthis.onDidChangeSelectionEmitter.fire(checkedItems as T[]);\n\t\t\t\t}),\n\t\t\t);\n\t\t\tthis.visibleDisposables.add(\n\t\t\t\tthis.ui.list.onButtonTriggered((event) =>\n\t\t\t\t\tthis.onDidTriggerItemButtonEmitter.fire(\n\t\t\t\t\t\tevent as IQuickPickItemButtonEvent<T>,\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t);\n\t\t\tthis.visibleDisposables.add(\n\t\t\t\tthis.ui.list.onSeparatorButtonTriggered((event) =>\n\t\t\t\t\tthis.onDidTriggerSeparatorButtonEmitter.fire(event),\n\t\t\t\t),\n\t\t\t);\n\t\t\tthis.visibleDisposables.add(this.registerQuickNavigation());\n\t\t\tthis.valueSelectionUpdated = true;\n\t\t}\n\t\tsuper.show(); // TODO: Why have show() bubble up while update() trickles down?\n\t}\n\n\tprivate handleAccept(inBackground: boolean): void {\n\t\t// Figure out veto via `onWillAccept` event\n\t\tlet veto = false;\n\t\tthis.onWillAcceptEmitter.fire({ veto: () => (veto = true) });\n\n\t\t// Continue with `onDidAccept` if no veto\n\t\tif (!veto) {\n\t\t\tthis.onDidAcceptEmitter.fire({ inBackground });\n\t\t}\n\t}\n\n\tprivate registerQuickNavigation() {\n\t\treturn dom.addDisposableListener(\n\t\t\tthis.ui.container,\n\t\t\tdom.EventType.KEY_UP,\n\t\t\t(e) => {\n\t\t\t\tif (this.canSelectMany || !this._quickNavigate) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst keyboardEvent: StandardKeyboardEvent =\n\t\t\t\t\tnew StandardKeyboardEvent(e);\n\t\t\t\tconst keyCode = keyboardEvent.keyCode;\n\n\t\t\t\t// Select element when keys are pressed that signal it\n\t\t\t\tconst quickNavKeys = this._quickNavigate.keybindings;\n\t\t\t\tconst wasTriggerKeyPressed = quickNavKeys.some((k) => {\n\t\t\t\t\tconst chords = k.getChords();\n\t\t\t\t\tif (chords.length > 1) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (chords[0].shiftKey && keyCode === KeyCode.Shift) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tkeyboardEvent.ctrlKey ||\n\t\t\t\t\t\t\tkeyboardEvent.altKey ||\n\t\t\t\t\t\t\tkeyboardEvent.metaKey\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn false; // this is an optimistic check for the shift key being used to navigate back in quick input\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (chords[0].altKey && keyCode === KeyCode.Alt) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (chords[0].ctrlKey && keyCode === KeyCode.Ctrl) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (chords[0].metaKey && keyCode === KeyCode.Meta) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\n\t\t\t\tif (wasTriggerKeyPressed) {\n\t\t\t\t\tif (this.activeItems[0]) {\n\t\t\t\t\t\tthis._selectedItems = [this.activeItems[0]];\n\t\t\t\t\t\tthis.onDidChangeSelectionEmitter.fire(\n\t\t\t\t\t\t\tthis.selectedItems,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.handleAccept(false);\n\t\t\t\t\t}\n\t\t\t\t\t// Unset quick navigate after press. It is only valid once\n\t\t\t\t\t// and should not result in any behaviour change afterwards\n\t\t\t\t\t// if the picker remains open because there was no active item\n\t\t\t\t\tthis._quickNavigate = undefined;\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\t}\n\n\tprotected override update() {\n\t\tif (!this.visible) {\n\t\t\treturn;\n\t\t}\n\t\t// store the scrollTop before it is reset\n\t\tconst scrollTopBefore = this.keepScrollPosition ? this.scrollTop : 0;\n\t\tconst hasDescription = !!this.description;\n\t\tconst visibilities: Visibilities = {\n\t\t\ttitle: !!this.title || !!this.step || !!this.titleButtons.length,\n\t\t\tdescription: hasDescription,\n\t\t\tcheckAll: this.canSelectMany && !this._hideCheckAll,\n\t\t\tcheckBox: this.canSelectMany,\n\t\t\tinputBox: !this._hideInput,\n\t\t\tprogressBar: !this._hideInput || hasDescription,\n\t\t\tvisibleCount: true,\n\t\t\tcount: this.canSelectMany && !this._hideCountBadge,\n\t\t\tok: this.ok === \"default\" ? this.canSelectMany : this.ok,\n\t\t\tlist: true,\n\t\t\tmessage: !!this.validationMessage,\n\t\t\tcustomButton: this.customButton,\n\t\t};\n\t\tthis.ui.setVisibilities(visibilities);\n\t\tsuper.update();\n\t\tif (this.ui.inputBox.value !== this.value) {\n\t\t\tthis.ui.inputBox.value = this.value;\n\t\t}\n\t\tif (this.valueSelectionUpdated) {\n\t\t\tthis.valueSelectionUpdated = false;\n\t\t\tthis.ui.inputBox.select(\n\t\t\t\tthis._valueSelection && {\n\t\t\t\t\tstart: this._valueSelection[0],\n\t\t\t\t\tend: this._valueSelection[1],\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\t\tif (this.ui.inputBox.placeholder !== (this.placeholder || \"\")) {\n\t\t\tthis.ui.inputBox.placeholder = this.placeholder || \"\";\n\t\t}\n\n\t\tlet ariaLabel = this.ariaLabel;\n\t\t// Only set aria label to the input box placeholder if we actually have an input box.\n\t\tif (!ariaLabel && visibilities.inputBox) {\n\t\t\tariaLabel = this.placeholder || QuickPick.DEFAULT_ARIA_LABEL;\n\t\t\t// If we have a title, include it in the aria label.\n\t\t\tif (this.title) {\n\t\t\t\tariaLabel += ` - ${this.title}`;\n\t\t\t}\n\t\t}\n\t\tif (this.ui.list.ariaLabel !== ariaLabel) {\n\t\t\tthis.ui.list.ariaLabel = ariaLabel ?? null;\n\t\t}\n\t\tthis.ui.list.matchOnDescription = this.matchOnDescription;\n\t\tthis.ui.list.matchOnDetail = this.matchOnDetail;\n\t\tthis.ui.list.matchOnLabel = this.matchOnLabel;\n\t\tthis.ui.list.matchOnLabelMode = this.matchOnLabelMode;\n\t\tthis.ui.list.sortByLabel = this.sortByLabel;\n\t\tif (this.itemsUpdated) {\n\t\t\tthis.itemsUpdated = false;\n\t\t\tthis._focusEventBufferer.bufferEvents(() => {\n\t\t\t\tthis.ui.list.setElements(this.items);\n\t\t\t\t// We want focus to exist in the list if there are items so that space can be used to toggle\n\t\t\t\tthis.ui.list.shouldLoop = !this.canSelectMany;\n\t\t\t\tthis.ui.list.filter(this.filterValue(this.ui.inputBox.value));\n\t\t\t\tswitch (this._itemActivation) {\n\t\t\t\t\tcase ItemActivation.NONE:\n\t\t\t\t\t\tthis._itemActivation = ItemActivation.FIRST; // only valid once, then unset\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ItemActivation.SECOND:\n\t\t\t\t\t\tthis.ui.list.focus(QuickPickFocus.Second);\n\t\t\t\t\t\tthis._itemActivation = ItemActivation.FIRST; // only valid once, then unset\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ItemActivation.LAST:\n\t\t\t\t\t\tthis.ui.list.focus(QuickPickFocus.Last);\n\t\t\t\t\t\tthis._itemActivation = ItemActivation.FIRST; // only valid once, then unset\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthis.trySelectFirst();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tif (\n\t\t\tthis.ui.container.classList.contains(\"show-checkboxes\") !==\n\t\t\t!!this.canSelectMany\n\t\t) {\n\t\t\tif (this.canSelectMany) {\n\t\t\t\tthis.ui.list.clearFocus();\n\t\t\t} else {\n\t\t\t\tthis.trySelectFirst();\n\t\t\t}\n\t\t}\n\t\tif (this.activeItemsUpdated) {\n\t\t\tthis.activeItemsUpdated = false;\n\t\t\tthis.activeItemsToConfirm = this._activeItems;\n\t\t\tthis.ui.list.setFocusedElements(this.activeItems);\n\t\t\tif (this.activeItemsToConfirm === this._activeItems) {\n\t\t\t\tthis.activeItemsToConfirm = null;\n\t\t\t}\n\t\t}\n\t\tif (this.selectedItemsUpdated) {\n\t\t\tthis.selectedItemsUpdated = false;\n\t\t\tthis.selectedItemsToConfirm = this._selectedItems;\n\t\t\tif (this.canSelectMany) {\n\t\t\t\tthis.ui.list.setCheckedElements(this.selectedItems);\n\t\t\t} else {\n\t\t\t\tthis.ui.list.setSelectedElements(this.selectedItems);\n\t\t\t}\n\t\t\tif (this.selectedItemsToConfirm === this._selectedItems) {\n\t\t\t\tthis.selectedItemsToConfirm = null;\n\t\t\t}\n\t\t}\n\t\tthis.ui.customButton.label = this.customLabel || \"\";\n\t\tthis.ui.customButton.element.title = this.customHover || \"\";\n\t\tif (!visibilities.inputBox) {\n\t\t\t// we need to move focus into the tree to detect keybindings\n\t\t\t// properly when the input box is not visible (quick nav)\n\t\t\tthis.ui.list.domFocus();\n\n\t\t\t// Focus the first element in the list if multiselect is enabled\n\t\t\tif (this.canSelectMany) {\n\t\t\t\tthis.ui.list.focus(QuickPickFocus.First);\n\t\t\t}\n\t\t}\n\n\t\t// Set the scroll position to what it was before updating the items\n\t\tif (this.keepScrollPosition) {\n\t\t\tthis.scrollTop = scrollTopBefore;\n\t\t}\n\t}\n\n\tfocus(focus: QuickPickFocus): void {\n\t\tthis.ui.list.focus(focus);\n\t\t// To allow things like space to check/uncheck items\n\t\tif (this.canSelectMany) {\n\t\t\tthis.ui.list.domFocus();\n\t\t}\n\t}\n\n\taccept(inBackground?: boolean | undefined): void {\n\t\tif (inBackground && !this._canAcceptInBackground) {\n\t\t\treturn; // needs to be enabled\n\t\t}\n\n\t\tif (this.activeItems[0]) {\n\t\t\tthis._selectedItems = [this.activeItems[0]];\n\t\t\tthis.onDidChangeSelectionEmitter.fire(this.selectedItems);\n\t\t\tthis.handleAccept(inBackground ?? false);\n\t\t}\n\t}\n}\n\nexport class InputBox extends QuickInput implements IInputBox {\n\tprivate _value = \"\";\n\tprivate _valueSelection: Readonly<[number, number]> | undefined;\n\tprivate valueSelectionUpdated = true;\n\tprivate _placeholder: string | undefined;\n\tprivate _password = false;\n\tprivate _prompt: string | undefined;\n\tprivate readonly onDidValueChangeEmitter = this._register(\n\t\tnew Emitter<string>(),\n\t);\n\tprivate readonly onDidAcceptEmitter = this._register(new Emitter<void>());\n\n\treadonly type = QuickInputType.InputBox;\n\n\tget value() {\n\t\treturn this._value;\n\t}\n\n\tset value(value: string) {\n\t\tthis._value = value || \"\";\n\t\tthis.update();\n\t}\n\n\tget valueSelection() {\n\t\tconst selection = this.ui.inputBox.getSelection();\n\t\tif (!selection) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn [selection.start, selection.end];\n\t}\n\n\tset valueSelection(valueSelection: Readonly<[number, number]> | undefined) {\n\t\tthis._valueSelection = valueSelection;\n\t\tthis.valueSelectionUpdated = true;\n\t\tthis.update();\n\t}\n\n\tget placeholder() {\n\t\treturn this._placeholder;\n\t}\n\n\tset placeholder(placeholder: string | undefined) {\n\t\tthis._placeholder = placeholder;\n\t\tthis.update();\n\t}\n\n\tget password() {\n\t\treturn this._password;\n\t}\n\n\tset password(password: boolean) {\n\t\tthis._password = password;\n\t\tthis.update();\n\t}\n\n\tget prompt() {\n\t\treturn this._prompt;\n\t}\n\n\tset prompt(prompt: string | undefined) {\n\t\tthis._prompt = prompt;\n\t\tthis.noValidationMessage = prompt\n\t\t\t? localize(\n\t\t\t\t\t\"inputModeEntryDescription\",\n\t\t\t\t\t\"{0} (Press 'Enter' to confirm or 'Escape' to cancel)\",\n\t\t\t\t\tprompt,\n\t\t\t\t)\n\t\t\t: QuickInput.noPromptMessage;\n\t\tthis.update();\n\t}\n\n\treadonly onDidChangeValue = this.onDidValueChangeEmitter.event;\n\n\treadonly onDidAccept = this.onDidAcceptEmitter.event;\n\n\toverride show() {\n\t\tif (!this.visible) {\n\t\t\tthis.visibleDisposables.add(\n\t\t\t\tthis.ui.inputBox.onDidChange((value) => {\n\t\t\t\t\tif (value === this.value) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis._value = value;\n\t\t\t\t\tthis.onDidValueChangeEmitter.fire(value);\n\t\t\t\t}),\n\t\t\t);\n\t\t\tthis.visibleDisposables.add(\n\t\t\t\tthis.ui.onDidAccept(() => this.onDidAcceptEmitter.fire()),\n\t\t\t);\n\t\t\tthis.valueSelectionUpdated = true;\n\t\t}\n\t\tsuper.show();\n\t}\n\n\tprotected override update() {\n\t\tif (!this.visible) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.ui.container.classList.remove(\"hidden-input\");\n\t\tconst visibilities: Visibilities = {\n\t\t\ttitle: !!this.title || !!this.step || !!this.titleButtons.length,\n\t\t\tdescription: !!this.description || !!this.step,\n\t\t\tinputBox: true,\n\t\t\tmessage: true,\n\t\t\tprogressBar: true,\n\t\t};\n\n\t\tthis.ui.setVisibilities(visibilities);\n\t\tsuper.update();\n\t\tif (this.ui.inputBox.value !== this.value) {\n\t\t\tthis.ui.inputBox.value = this.value;\n\t\t}\n\t\tif (this.valueSelectionUpdated) {\n\t\t\tthis.valueSelectionUpdated = false;\n\t\t\tthis.ui.inputBox.select(\n\t\t\t\tthis._valueSelection && {\n\t\t\t\t\tstart: this._valueSelection[0],\n\t\t\t\t\tend: this._valueSelection[1],\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\t\tif (this.ui.inputBox.placeholder !== (this.placeholder || \"\")) {\n\t\t\tthis.ui.inputBox.placeholder = this.placeholder || \"\";\n\t\t}\n\t\tif (this.ui.inputBox.password !== this.password) {\n\t\t\tthis.ui.inputBox.password = this.password;\n\t\t}\n\t}\n}\n\nexport class QuickWidget extends QuickInput implements IQuickWidget {\n\treadonly type = QuickInputType.QuickWidget;\n\n\tprotected override update() {\n\t\tif (!this.visible) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst visibilities: Visibilities = {\n\t\t\ttitle: !!this.title || !!this.step || !!this.titleButtons.length,\n\t\t\tdescription: !!this.description || !!this.step,\n\t\t};\n\n\t\tthis.ui.setVisibilities(visibilities);\n\t\tsuper.update();\n\t}\n}\n\nexport class QuickInputHoverDelegate extends WorkbenchHoverDelegate {\n\tconstructor(\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IHoverService hoverService: IHoverService,\n\t) {\n\t\tsuper(\n\t\t\t\"element\",\n\t\t\tfalse,\n\t\t\t(options) => this.getOverrideOptions(options),\n\t\t\tconfigurationService,\n\t\t\thoverService,\n\t\t);\n\t}\n\n\tprivate getOverrideOptions(\n\t\toptions: IHoverDelegateOptions,\n\t): Partial<IHoverOptions> {\n\t\t// Only show the hover hint if the content is of a decent size\n\t\tconst showHoverHint = (\n\t\t\tdom.isHTMLElement(options.content)\n\t\t\t\t? (options.content.textContent ?? \"\")\n\t\t\t\t: typeof options.content === \"string\"\n\t\t\t\t\t? options.content\n\t\t\t\t\t: options.content.value\n\t\t).includes(\"\\n\");\n\n\t\treturn {\n\t\t\tpersistence: {\n\t\t\t\thideOnKeyDown: false,\n\t\t\t},\n\t\t\tappearance: {\n\t\t\t\tshowHoverHint,\n\t\t\t\tskipFadeInAnimation: true,\n\t\t\t},\n\t\t};\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
