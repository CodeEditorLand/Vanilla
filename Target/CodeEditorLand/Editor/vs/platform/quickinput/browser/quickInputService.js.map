{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/quickinput/browser/quickInputService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { IContextKey, IContextKeyService, RawContextKey } from '../../contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { ILayoutService } from '../../layout/browser/layoutService.js';\nimport { IOpenerService } from '../../opener/common/opener.js';\nimport { QuickAccessController } from './quickAccess.js';\nimport { IQuickAccessController } from '../common/quickAccess.js';\nimport { IInputBox, IInputOptions, IKeyMods, IPickOptions, IQuickInputButton, IQuickInputService, IQuickNavigateConfiguration, IQuickPick, IQuickPickItem, IQuickWidget, QuickPickInput } from '../common/quickInput.js';\nimport { defaultButtonStyles, defaultCountBadgeStyles, defaultInputBoxStyles, defaultKeybindingLabelStyles, defaultProgressBarStyles, defaultToggleStyles, getListStyles } from '../../theme/browser/defaultStyles.js';\nimport { activeContrastBorder, asCssVariable, pickerGroupBorder, pickerGroupForeground, quickInputBackground, quickInputForeground, quickInputListFocusBackground, quickInputListFocusForeground, quickInputListFocusIconForeground, quickInputTitleBackground, widgetBorder, widgetShadow } from '../../theme/common/colorRegistry.js';\nimport { IThemeService, Themable } from '../../theme/common/themeService.js';\nimport { IQuickInputOptions, IQuickInputStyles, QuickInputHoverDelegate } from './quickInput.js';\nimport { QuickInputController, IQuickInputControllerHost } from './quickInputController.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { getWindow } from '../../../base/browser/dom.js';\n\nexport class QuickInputService extends Themable implements IQuickInputService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tget backButton(): IQuickInputButton { return this.controller.backButton; }\n\n\tprivate readonly _onShow = this._register(new Emitter<void>());\n\treadonly onShow = this._onShow.event;\n\n\tprivate readonly _onHide = this._register(new Emitter<void>());\n\treadonly onHide = this._onHide.event;\n\n\tprivate _controller: QuickInputController | undefined;\n\tprivate get controller(): QuickInputController {\n\t\tif (!this._controller) {\n\t\t\tthis._controller = this._register(this.createController());\n\t\t}\n\n\t\treturn this._controller;\n\t}\n\n\tprivate get hasController() { return !!this._controller; }\n\tget currentQuickInput() { return this.controller.currentQuickInput; }\n\n\tprivate _quickAccess: IQuickAccessController | undefined;\n\tget quickAccess(): IQuickAccessController {\n\t\tif (!this._quickAccess) {\n\t\t\tthis._quickAccess = this._register(this.instantiationService.createInstance(QuickAccessController));\n\t\t}\n\n\t\treturn this._quickAccess;\n\t}\n\n\tprivate readonly contexts = new Map<string, IContextKey<boolean>>();\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IContextKeyService protected readonly contextKeyService: IContextKeyService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ILayoutService protected readonly layoutService: ILayoutService,\n\t\t@IConfigurationService protected readonly configurationService: IConfigurationService,\n\t) {\n\t\tsuper(themeService);\n\t}\n\n\tprotected createController(host: IQuickInputControllerHost = this.layoutService, options?: Partial<IQuickInputOptions>): QuickInputController {\n\t\tconst defaultOptions: IQuickInputOptions = {\n\t\t\tidPrefix: 'quickInput_',\n\t\t\tcontainer: host.activeContainer,\n\t\t\tignoreFocusOut: () => false,\n\t\t\tbackKeybindingLabel: () => undefined,\n\t\t\tsetContextKey: (id?: string) => this.setContextKey(id),\n\t\t\tlinkOpenerDelegate: (content) => {\n\t\t\t\t// HACK: https://github.com/microsoft/vscode/issues/173691\n\t\t\t\tthis.instantiationService.invokeFunction(accessor => {\n\t\t\t\t\tconst openerService = accessor.get(IOpenerService);\n\t\t\t\t\topenerService.open(content, { allowCommands: true, fromUserGesture: true });\n\t\t\t\t});\n\t\t\t},\n\t\t\treturnFocus: () => host.focus(),\n\t\t\tstyles: this.computeStyles(),\n\t\t\thoverDelegate: this._register(this.instantiationService.createInstance(QuickInputHoverDelegate))\n\t\t};\n\n\t\tconst controller = this._register(this.instantiationService.createInstance(\n\t\t\tQuickInputController,\n\t\t\t{\n\t\t\t\t...defaultOptions,\n\t\t\t\t...options\n\t\t\t}\n\t\t));\n\n\t\tcontroller.layout(host.activeContainerDimension, host.activeContainerOffset.quickPickTop);\n\n\t\t// Layout changes\n\t\tthis._register(host.onDidLayoutActiveContainer(dimension => {\n\t\t\tif (getWindow(host.activeContainer) === getWindow(controller.container)) {\n\t\t\t\tcontroller.layout(dimension, host.activeContainerOffset.quickPickTop);\n\t\t\t}\n\t\t}));\n\t\tthis._register(host.onDidChangeActiveContainer(() => {\n\t\t\tif (controller.isVisible()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcontroller.layout(host.activeContainerDimension, host.activeContainerOffset.quickPickTop);\n\t\t}));\n\n\t\t// Context keys\n\t\tthis._register(controller.onShow(() => {\n\t\t\tthis.resetContextKeys();\n\t\t\tthis._onShow.fire();\n\t\t}));\n\t\tthis._register(controller.onHide(() => {\n\t\t\tthis.resetContextKeys();\n\t\t\tthis._onHide.fire();\n\t\t}));\n\n\t\treturn controller;\n\t}\n\n\tprivate setContextKey(id?: string) {\n\t\tlet key: IContextKey<boolean> | undefined;\n\t\tif (id) {\n\t\t\tkey = this.contexts.get(id);\n\t\t\tif (!key) {\n\t\t\t\tkey = new RawContextKey<boolean>(id, false)\n\t\t\t\t\t.bindTo(this.contextKeyService);\n\t\t\t\tthis.contexts.set(id, key);\n\t\t\t}\n\t\t}\n\n\t\tif (key && key.get()) {\n\t\t\treturn; // already active context\n\t\t}\n\n\t\tthis.resetContextKeys();\n\n\t\tkey?.set(true);\n\t}\n\n\tprivate resetContextKeys() {\n\t\tthis.contexts.forEach(context => {\n\t\t\tif (context.get()) {\n\t\t\t\tcontext.reset();\n\t\t\t}\n\t\t});\n\t}\n\n\tpick<T extends IQuickPickItem, O extends IPickOptions<T>>(picks: Promise<QuickPickInput<T>[]> | QuickPickInput<T>[], options?: O, token: CancellationToken = CancellationToken.None): Promise<(O extends { canPickMany: true } ? T[] : T) | undefined> {\n\t\treturn this.controller.pick(picks, options, token);\n\t}\n\n\tinput(options: IInputOptions = {}, token: CancellationToken = CancellationToken.None): Promise<string | undefined> {\n\t\treturn this.controller.input(options, token);\n\t}\n\n\tcreateQuickPick<T extends IQuickPickItem>(options: { useSeparators: true }): IQuickPick<T, { useSeparators: true }>;\n\tcreateQuickPick<T extends IQuickPickItem>(options?: { useSeparators: boolean }): IQuickPick<T, { useSeparators: false }>;\n\tcreateQuickPick<T extends IQuickPickItem>(options: { useSeparators: boolean } = { useSeparators: false }): IQuickPick<T, { useSeparators: boolean }> {\n\t\treturn this.controller.createQuickPick(options);\n\t}\n\n\tcreateInputBox(): IInputBox {\n\t\treturn this.controller.createInputBox();\n\t}\n\n\tcreateQuickWidget(): IQuickWidget {\n\t\treturn this.controller.createQuickWidget();\n\t}\n\n\tfocus() {\n\t\tthis.controller.focus();\n\t}\n\n\ttoggle() {\n\t\tthis.controller.toggle();\n\t}\n\n\tnavigate(next: boolean, quickNavigate?: IQuickNavigateConfiguration) {\n\t\tthis.controller.navigate(next, quickNavigate);\n\t}\n\n\taccept(keyMods?: IKeyMods) {\n\t\treturn this.controller.accept(keyMods);\n\t}\n\n\tback() {\n\t\treturn this.controller.back();\n\t}\n\n\tcancel() {\n\t\treturn this.controller.cancel();\n\t}\n\n\toverride updateStyles() {\n\t\tif (this.hasController) {\n\t\t\tthis.controller.applyStyles(this.computeStyles());\n\t\t}\n\t}\n\n\tprivate computeStyles(): IQuickInputStyles {\n\t\treturn {\n\t\t\twidget: {\n\t\t\t\tquickInputBackground: asCssVariable(quickInputBackground),\n\t\t\t\tquickInputForeground: asCssVariable(quickInputForeground),\n\t\t\t\tquickInputTitleBackground: asCssVariable(quickInputTitleBackground),\n\t\t\t\twidgetBorder: asCssVariable(widgetBorder),\n\t\t\t\twidgetShadow: asCssVariable(widgetShadow),\n\t\t\t},\n\t\t\tinputBox: defaultInputBoxStyles,\n\t\t\ttoggle: defaultToggleStyles,\n\t\t\tcountBadge: defaultCountBadgeStyles,\n\t\t\tbutton: defaultButtonStyles,\n\t\t\tprogressBar: defaultProgressBarStyles,\n\t\t\tkeybindingLabel: defaultKeybindingLabelStyles,\n\t\t\tlist: getListStyles({\n\t\t\t\tlistBackground: quickInputBackground,\n\t\t\t\tlistFocusBackground: quickInputListFocusBackground,\n\t\t\t\tlistFocusForeground: quickInputListFocusForeground,\n\t\t\t\t// Look like focused when inactive.\n\t\t\t\tlistInactiveFocusForeground: quickInputListFocusForeground,\n\t\t\t\tlistInactiveSelectionIconForeground: quickInputListFocusIconForeground,\n\t\t\t\tlistInactiveFocusBackground: quickInputListFocusBackground,\n\t\t\t\tlistFocusOutline: activeContrastBorder,\n\t\t\t\tlistInactiveFocusOutline: activeContrastBorder,\n\t\t\t}),\n\t\t\tpickerGroup: {\n\t\t\t\tpickerGroupBorder: asCssVariable(pickerGroupBorder),\n\t\t\t\tpickerGroupForeground: asCssVariable(pickerGroupForeground),\n\t\t\t}\n\t\t};\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
