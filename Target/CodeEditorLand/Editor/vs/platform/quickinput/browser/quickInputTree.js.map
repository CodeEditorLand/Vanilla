{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/quickinput/browser/quickInputTree.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from \"../../../base/browser/dom.js\";\nimport { StandardKeyboardEvent } from \"../../../base/browser/keyboardEvent.js\";\nimport { ActionBar } from \"../../../base/browser/ui/actionbar/actionbar.js\";\nimport type { AriaRole } from \"../../../base/browser/ui/aria/aria.js\";\nimport type {\n\tIHoverWidget,\n\tIManagedHoverTooltipMarkdownString,\n} from \"../../../base/browser/ui/hover/hover.js\";\nimport type { IHoverDelegate } from \"../../../base/browser/ui/hover/hoverDelegate.js\";\nimport { HoverPosition } from \"../../../base/browser/ui/hover/hoverWidget.js\";\nimport {\n\ttype IIconLabelValueOptions,\n\tIconLabel,\n} from \"../../../base/browser/ui/iconLabel/iconLabel.js\";\nimport { KeybindingLabel } from \"../../../base/browser/ui/keybindingLabel/keybindingLabel.js\";\nimport type { IListVirtualDelegate } from \"../../../base/browser/ui/list/list.js\";\nimport type {\n\tIListAccessibilityProvider,\n\tIListStyles,\n} from \"../../../base/browser/ui/list/listWidget.js\";\nimport { RenderIndentGuides } from \"../../../base/browser/ui/tree/abstractTree.js\";\nimport {\n\ttype IObjectTreeElement,\n\ttype ITreeNode,\n\ttype ITreeRenderer,\n\tTreeVisibility,\n} from \"../../../base/browser/ui/tree/tree.js\";\nimport { equals } from \"../../../base/common/arrays.js\";\nimport { ThrottledDelayer } from \"../../../base/common/async.js\";\nimport { compareAnything } from \"../../../base/common/comparers.js\";\nimport { memoize } from \"../../../base/common/decorators.js\";\nimport { isCancellationError } from \"../../../base/common/errors.js\";\nimport {\n\tEmitter,\n\tEvent,\n\tEventBufferer,\n\ttype IValueWithChangeEvent,\n} from \"../../../base/common/event.js\";\nimport type { IMatch } from \"../../../base/common/filters.js\";\nimport type { IMarkdownString } from \"../../../base/common/htmlContent.js\";\nimport {\n\ttype IParsedLabelWithIcons,\n\tgetCodiconAriaLabel,\n\tmatchesFuzzyIconAware,\n\tparseLabelWithIcons,\n} from \"../../../base/common/iconLabels.js\";\nimport { KeyCode } from \"../../../base/common/keyCodes.js\";\nimport { Lazy } from \"../../../base/common/lazy.js\";\nimport { Disposable, DisposableStore } from \"../../../base/common/lifecycle.js\";\nimport {\n\tobservableValue,\n\tobservableValueOpts,\n\ttransaction,\n} from \"../../../base/common/observable.js\";\nimport { OS } from \"../../../base/common/platform.js\";\nimport { ltrim } from \"../../../base/common/strings.js\";\nimport { URI } from \"../../../base/common/uri.js\";\nimport { localize } from \"../../../nls.js\";\nimport { IAccessibilityService } from \"../../accessibility/common/accessibility.js\";\nimport { IInstantiationService } from \"../../instantiation/common/instantiation.js\";\nimport { WorkbenchObjectTree } from \"../../list/browser/listService.js\";\nimport { isDark } from \"../../theme/common/theme.js\";\nimport { IThemeService } from \"../../theme/common/themeService.js\";\nimport {\n\ttype IQuickPickItem,\n\ttype IQuickPickItemButtonEvent,\n\ttype IQuickPickSeparator,\n\ttype IQuickPickSeparatorButtonEvent,\n\tQuickPickFocus,\n\ttype QuickPickItem,\n} from \"../common/quickInput.js\";\nimport { quickInputButtonToAction } from \"./quickInputUtils.js\";\n\nconst $ = dom.$;\n\ninterface IQuickInputItemLazyParts {\n\treadonly saneLabel: string;\n\treadonly saneSortLabel: string;\n\treadonly saneAriaLabel: string;\n}\n\ninterface IQuickPickElement extends IQuickInputItemLazyParts {\n\treadonly hasCheckbox: boolean;\n\treadonly index: number;\n\treadonly item?: IQuickPickItem;\n\treadonly saneDescription?: string;\n\treadonly saneDetail?: string;\n\treadonly saneTooltip?: string | IMarkdownString | HTMLElement;\n\thidden: boolean;\n\telement?: HTMLElement;\n\tlabelHighlights?: IMatch[];\n\tdescriptionHighlights?: IMatch[];\n\tdetailHighlights?: IMatch[];\n\tseparator?: IQuickPickSeparator;\n}\n\ninterface IQuickInputItemTemplateData {\n\tentry: HTMLDivElement;\n\tcheckbox: HTMLInputElement;\n\ticon: HTMLDivElement;\n\tlabel: IconLabel;\n\tkeybinding: KeybindingLabel;\n\tdetail: IconLabel;\n\tseparator: HTMLDivElement;\n\tactionBar: ActionBar;\n\telement: IQuickPickElement;\n\ttoDisposeElement: DisposableStore;\n\ttoDisposeTemplate: DisposableStore;\n}\n\nclass BaseQuickPickItemElement implements IQuickPickElement {\n\tprivate readonly _init: Lazy<IQuickInputItemLazyParts>;\n\n\tconstructor(\n\t\treadonly index: number,\n\t\treadonly hasCheckbox: boolean,\n\t\tmainItem: QuickPickItem,\n\t) {\n\t\tthis._init = new Lazy(() => {\n\t\t\tconst saneLabel = mainItem.label ?? \"\";\n\t\t\tconst saneSortLabel = parseLabelWithIcons(saneLabel).text.trim();\n\n\t\t\tconst saneAriaLabel =\n\t\t\t\tmainItem.ariaLabel ||\n\t\t\t\t[saneLabel, this.saneDescription, this.saneDetail]\n\t\t\t\t\t.map((s) => getCodiconAriaLabel(s))\n\t\t\t\t\t.filter((s) => !!s)\n\t\t\t\t\t.join(\", \");\n\n\t\t\treturn {\n\t\t\t\tsaneLabel,\n\t\t\t\tsaneSortLabel,\n\t\t\t\tsaneAriaLabel,\n\t\t\t};\n\t\t});\n\t\tthis._saneDescription = mainItem.description;\n\t\tthis._saneTooltip = mainItem.tooltip;\n\t}\n\n\t// #region Lazy Getters\n\n\tget saneLabel() {\n\t\treturn this._init.value.saneLabel;\n\t}\n\tget saneSortLabel() {\n\t\treturn this._init.value.saneSortLabel;\n\t}\n\tget saneAriaLabel() {\n\t\treturn this._init.value.saneAriaLabel;\n\t}\n\n\t// #endregion\n\n\t// #region Getters and Setters\n\n\tprivate _element?: HTMLElement;\n\tget element() {\n\t\treturn this._element;\n\t}\n\tset element(value: HTMLElement | undefined) {\n\t\tthis._element = value;\n\t}\n\n\tprivate _hidden = false;\n\tget hidden() {\n\t\treturn this._hidden;\n\t}\n\tset hidden(value: boolean) {\n\t\tthis._hidden = value;\n\t}\n\n\tprivate _saneDescription?: string;\n\tget saneDescription() {\n\t\treturn this._saneDescription;\n\t}\n\tset saneDescription(value: string | undefined) {\n\t\tthis._saneDescription = value;\n\t}\n\n\tprotected _saneDetail?: string;\n\tget saneDetail() {\n\t\treturn this._saneDetail;\n\t}\n\tset saneDetail(value: string | undefined) {\n\t\tthis._saneDetail = value;\n\t}\n\n\tprivate _saneTooltip?: string | IMarkdownString | HTMLElement;\n\tget saneTooltip() {\n\t\treturn this._saneTooltip;\n\t}\n\tset saneTooltip(value: string | IMarkdownString | HTMLElement | undefined) {\n\t\tthis._saneTooltip = value;\n\t}\n\n\tprotected _labelHighlights?: IMatch[];\n\tget labelHighlights() {\n\t\treturn this._labelHighlights;\n\t}\n\tset labelHighlights(value: IMatch[] | undefined) {\n\t\tthis._labelHighlights = value;\n\t}\n\n\tprotected _descriptionHighlights?: IMatch[];\n\tget descriptionHighlights() {\n\t\treturn this._descriptionHighlights;\n\t}\n\tset descriptionHighlights(value: IMatch[] | undefined) {\n\t\tthis._descriptionHighlights = value;\n\t}\n\n\tprotected _detailHighlights?: IMatch[];\n\tget detailHighlights() {\n\t\treturn this._detailHighlights;\n\t}\n\tset detailHighlights(value: IMatch[] | undefined) {\n\t\tthis._detailHighlights = value;\n\t}\n}\n\nclass QuickPickItemElement extends BaseQuickPickItemElement {\n\treadonly onChecked: Event<boolean>;\n\n\tconstructor(\n\t\tindex: number,\n\t\thasCheckbox: boolean,\n\t\treadonly fireButtonTriggered: (\n\t\t\tevent: IQuickPickItemButtonEvent<IQuickPickItem>,\n\t\t) => void,\n\t\tprivate _onChecked: Emitter<{\n\t\t\telement: IQuickPickElement;\n\t\t\tchecked: boolean;\n\t\t}>,\n\t\treadonly item: IQuickPickItem,\n\t\tprivate _separator: IQuickPickSeparator | undefined,\n\t) {\n\t\tsuper(index, hasCheckbox, item);\n\n\t\tthis.onChecked = hasCheckbox\n\t\t\t? Event.map(\n\t\t\t\t\tEvent.filter<{\n\t\t\t\t\t\telement: IQuickPickElement;\n\t\t\t\t\t\tchecked: boolean;\n\t\t\t\t\t}>(this._onChecked.event, (e) => e.element === this),\n\t\t\t\t\t(e) => e.checked,\n\t\t\t\t)\n\t\t\t: Event.None;\n\n\t\tthis._saneDetail = item.detail;\n\t\tthis._labelHighlights = item.highlights?.label;\n\t\tthis._descriptionHighlights = item.highlights?.description;\n\t\tthis._detailHighlights = item.highlights?.detail;\n\t}\n\n\tget separator() {\n\t\treturn this._separator;\n\t}\n\tset separator(value: IQuickPickSeparator | undefined) {\n\t\tthis._separator = value;\n\t}\n\n\tprivate _checked = false;\n\tget checked() {\n\t\treturn this._checked;\n\t}\n\tset checked(value: boolean) {\n\t\tif (value !== this._checked) {\n\t\t\tthis._checked = value;\n\t\t\tthis._onChecked.fire({ element: this, checked: value });\n\t\t}\n\t}\n\n\tget checkboxDisabled() {\n\t\treturn !!this.item.disabled;\n\t}\n}\n\nenum QuickPickSeparatorFocusReason {\n\t/**\n\t * No item is hovered or active\n\t */\n\tNONE = 0,\n\t/**\n\t * Some item within this section is hovered\n\t */\n\tMOUSE_HOVER = 1,\n\t/**\n\t * Some item within this section is active\n\t */\n\tACTIVE_ITEM = 2,\n}\n\nclass QuickPickSeparatorElement extends BaseQuickPickItemElement {\n\tchildren = new Array<QuickPickItemElement>();\n\t/**\n\t * If this item is >0, it means that there is some item in the list that is either:\n\t * * hovered over\n\t * * active\n\t */\n\tfocusInsideSeparator = QuickPickSeparatorFocusReason.NONE;\n\n\tconstructor(\n\t\tindex: number,\n\t\treadonly fireSeparatorButtonTriggered: (\n\t\t\tevent: IQuickPickSeparatorButtonEvent,\n\t\t) => void,\n\t\treadonly separator: IQuickPickSeparator,\n\t) {\n\t\tsuper(index, false, separator);\n\t}\n}\n\nclass QuickInputItemDelegate\n\timplements IListVirtualDelegate<IQuickPickElement>\n{\n\tgetHeight(element: IQuickPickElement): number {\n\t\tif (element instanceof QuickPickSeparatorElement) {\n\t\t\treturn 30;\n\t\t}\n\t\treturn element.saneDetail ? 44 : 22;\n\t}\n\n\tgetTemplateId(element: IQuickPickElement): string {\n\t\tif (element instanceof QuickPickItemElement) {\n\t\t\treturn QuickPickItemElementRenderer.ID;\n\t\t} else {\n\t\t\treturn QuickPickSeparatorElementRenderer.ID;\n\t\t}\n\t}\n}\n\nclass QuickInputAccessibilityProvider\n\timplements IListAccessibilityProvider<IQuickPickElement>\n{\n\tgetWidgetAriaLabel(): string {\n\t\treturn localize(\"quickInput\", \"Quick Input\");\n\t}\n\n\tgetAriaLabel(element: IQuickPickElement): string | null {\n\t\treturn element.separator?.label\n\t\t\t? `${element.saneAriaLabel}, ${element.separator.label}`\n\t\t\t: element.saneAriaLabel;\n\t}\n\n\tgetWidgetRole(): AriaRole {\n\t\treturn \"listbox\";\n\t}\n\n\tgetRole(element: IQuickPickElement) {\n\t\treturn element.hasCheckbox ? \"checkbox\" : \"option\";\n\t}\n\n\tisChecked(\n\t\telement: IQuickPickElement,\n\t): IValueWithChangeEvent<boolean> | undefined {\n\t\tif (\n\t\t\t!element.hasCheckbox ||\n\t\t\t!(element instanceof QuickPickItemElement)\n\t\t) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn {\n\t\t\tget value() {\n\t\t\t\treturn element.checked;\n\t\t\t},\n\t\t\tonDidChange: (e) => element.onChecked(() => e()),\n\t\t};\n\t}\n}\n\nabstract class BaseQuickInputListRenderer<T extends IQuickPickElement>\n\timplements ITreeRenderer<T, void, IQuickInputItemTemplateData>\n{\n\tabstract templateId: string;\n\n\tconstructor(private readonly hoverDelegate: IHoverDelegate | undefined) {}\n\n\t// TODO: only do the common stuff here and have a subclass handle their specific stuff\n\trenderTemplate(container: HTMLElement): IQuickInputItemTemplateData {\n\t\tconst data: IQuickInputItemTemplateData = Object.create(null);\n\t\tdata.toDisposeElement = new DisposableStore();\n\t\tdata.toDisposeTemplate = new DisposableStore();\n\t\tdata.entry = dom.append(container, $(\".quick-input-list-entry\"));\n\n\t\t// Checkbox\n\t\tconst label = dom.append(data.entry, $(\"label.quick-input-list-label\"));\n\t\tdata.toDisposeTemplate.add(\n\t\t\tdom.addStandardDisposableListener(\n\t\t\t\tlabel,\n\t\t\t\tdom.EventType.CLICK,\n\t\t\t\t(e) => {\n\t\t\t\t\tif (!data.checkbox.offsetParent) {\n\t\t\t\t\t\t// If checkbox not visible:\n\t\t\t\t\t\te.preventDefault(); // Prevent toggle of checkbox when it is immediately shown afterwards. #91740\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t\tdata.checkbox = <HTMLInputElement>(\n\t\t\tdom.append(label, $(\"input.quick-input-list-checkbox\"))\n\t\t);\n\t\tdata.checkbox.type = \"checkbox\";\n\n\t\t// Rows\n\t\tconst rows = dom.append(label, $(\".quick-input-list-rows\"));\n\t\tconst row1 = dom.append(rows, $(\".quick-input-list-row\"));\n\t\tconst row2 = dom.append(rows, $(\".quick-input-list-row\"));\n\n\t\t// Label\n\t\tdata.label = new IconLabel(row1, {\n\t\t\tsupportHighlights: true,\n\t\t\tsupportDescriptionHighlights: true,\n\t\t\tsupportIcons: true,\n\t\t\thoverDelegate: this.hoverDelegate,\n\t\t});\n\t\tdata.toDisposeTemplate.add(data.label);\n\t\tdata.icon = <HTMLInputElement>(\n\t\t\tdom.prepend(data.label.element, $(\".quick-input-list-icon\"))\n\t\t);\n\n\t\t// Keybinding\n\t\tconst keybindingContainer = dom.append(\n\t\t\trow1,\n\t\t\t$(\".quick-input-list-entry-keybinding\"),\n\t\t);\n\t\tdata.keybinding = new KeybindingLabel(keybindingContainer, OS);\n\t\tdata.toDisposeTemplate.add(data.keybinding);\n\n\t\t// Detail\n\t\tconst detailContainer = dom.append(\n\t\t\trow2,\n\t\t\t$(\".quick-input-list-label-meta\"),\n\t\t);\n\t\tdata.detail = new IconLabel(detailContainer, {\n\t\t\tsupportHighlights: true,\n\t\t\tsupportIcons: true,\n\t\t\thoverDelegate: this.hoverDelegate,\n\t\t});\n\t\tdata.toDisposeTemplate.add(data.detail);\n\n\t\t// Separator\n\t\tdata.separator = dom.append(\n\t\t\tdata.entry,\n\t\t\t$(\".quick-input-list-separator\"),\n\t\t);\n\n\t\t// Actions\n\t\tdata.actionBar = new ActionBar(\n\t\t\tdata.entry,\n\t\t\tthis.hoverDelegate\n\t\t\t\t? { hoverDelegate: this.hoverDelegate }\n\t\t\t\t: undefined,\n\t\t);\n\t\tdata.actionBar.domNode.classList.add(\n\t\t\t\"quick-input-list-entry-action-bar\",\n\t\t);\n\t\tdata.toDisposeTemplate.add(data.actionBar);\n\n\t\treturn data;\n\t}\n\n\tdisposeTemplate(data: IQuickInputItemTemplateData): void {\n\t\tdata.toDisposeElement.dispose();\n\t\tdata.toDisposeTemplate.dispose();\n\t}\n\n\tdisposeElement(\n\t\t_element: ITreeNode<IQuickPickElement, void>,\n\t\t_index: number,\n\t\tdata: IQuickInputItemTemplateData,\n\t): void {\n\t\tdata.toDisposeElement.clear();\n\t\tdata.actionBar.clear();\n\t}\n\n\t// TODO: only do the common stuff here and have a subclass handle their specific stuff\n\tabstract renderElement(\n\t\tnode: ITreeNode<IQuickPickElement, void>,\n\t\tindex: number,\n\t\tdata: IQuickInputItemTemplateData,\n\t): void;\n}\n\nclass QuickPickItemElementRenderer extends BaseQuickInputListRenderer<QuickPickItemElement> {\n\tstatic readonly ID = \"quickpickitem\";\n\n\t// Follow what we do in the separator renderer\n\tprivate readonly _itemsWithSeparatorsFrequency = new Map<\n\t\tQuickPickItemElement,\n\t\tnumber\n\t>();\n\n\tconstructor(\n\t\thoverDelegate: IHoverDelegate | undefined,\n\t\t@IThemeService private readonly themeService: IThemeService,\n\t) {\n\t\tsuper(hoverDelegate);\n\t}\n\n\tget templateId() {\n\t\treturn QuickPickItemElementRenderer.ID;\n\t}\n\n\toverride renderTemplate(\n\t\tcontainer: HTMLElement,\n\t): IQuickInputItemTemplateData {\n\t\tconst data = super.renderTemplate(container);\n\n\t\tdata.toDisposeTemplate.add(\n\t\t\tdom.addStandardDisposableListener(\n\t\t\t\tdata.checkbox,\n\t\t\t\tdom.EventType.CHANGE,\n\t\t\t\t(e) => {\n\t\t\t\t\t(data.element as QuickPickItemElement).checked =\n\t\t\t\t\t\tdata.checkbox.checked;\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\treturn data;\n\t}\n\n\trenderElement(\n\t\tnode: ITreeNode<QuickPickItemElement, void>,\n\t\tindex: number,\n\t\tdata: IQuickInputItemTemplateData,\n\t): void {\n\t\tconst element = node.element;\n\t\tdata.element = element;\n\t\telement.element = data.entry ?? undefined;\n\t\tconst mainItem: IQuickPickItem = element.item;\n\n\t\tdata.checkbox.checked = element.checked;\n\t\tdata.toDisposeElement.add(\n\t\t\telement.onChecked((checked) => (data.checkbox.checked = checked)),\n\t\t);\n\t\tdata.checkbox.disabled = element.checkboxDisabled;\n\n\t\tconst { labelHighlights, descriptionHighlights, detailHighlights } =\n\t\t\telement;\n\n\t\t// Icon\n\t\tif (mainItem.iconPath) {\n\t\t\tconst icon = isDark(this.themeService.getColorTheme().type)\n\t\t\t\t? mainItem.iconPath.dark\n\t\t\t\t: (mainItem.iconPath.light ?? mainItem.iconPath.dark);\n\t\t\tconst iconUrl = URI.revive(icon);\n\t\t\tdata.icon.className = \"quick-input-list-icon\";\n\t\t\tdata.icon.style.backgroundImage = dom.asCSSUrl(iconUrl);\n\t\t} else {\n\t\t\tdata.icon.style.backgroundImage = \"\";\n\t\t\tdata.icon.className = mainItem.iconClass\n\t\t\t\t? `quick-input-list-icon ${mainItem.iconClass}`\n\t\t\t\t: \"\";\n\t\t}\n\n\t\t// Label\n\t\tlet descriptionTitle: IManagedHoverTooltipMarkdownString | undefined;\n\t\t// if we have a tooltip, that will be the hover,\n\t\t// with the saneDescription as fallback if it\n\t\t// is defined\n\t\tif (!element.saneTooltip && element.saneDescription) {\n\t\t\tdescriptionTitle = {\n\t\t\t\tmarkdown: {\n\t\t\t\t\tvalue: element.saneDescription,\n\t\t\t\t\tsupportThemeIcons: true,\n\t\t\t\t},\n\t\t\t\tmarkdownNotSupportedFallback: element.saneDescription,\n\t\t\t};\n\t\t}\n\t\tconst options: IIconLabelValueOptions = {\n\t\t\tmatches: labelHighlights || [],\n\t\t\t// If we have a tooltip, we want that to be shown and not any other hover\n\t\t\tdescriptionTitle,\n\t\t\tdescriptionMatches: descriptionHighlights || [],\n\t\t\tlabelEscapeNewLines: true,\n\t\t};\n\t\toptions.extraClasses = mainItem.iconClasses;\n\t\toptions.italic = mainItem.italic;\n\t\toptions.strikethrough = mainItem.strikethrough;\n\t\tdata.entry.classList.remove(\"quick-input-list-separator-as-item\");\n\t\tdata.label.setLabel(\n\t\t\telement.saneLabel,\n\t\t\telement.saneDescription,\n\t\t\toptions,\n\t\t);\n\n\t\t// Keybinding\n\t\tdata.keybinding.set(mainItem.keybinding);\n\n\t\t// Detail\n\t\tif (element.saneDetail) {\n\t\t\tlet title: IManagedHoverTooltipMarkdownString | undefined;\n\t\t\t// If we have a tooltip, we want that to be shown and not any other hover\n\t\t\tif (!element.saneTooltip) {\n\t\t\t\ttitle = {\n\t\t\t\t\tmarkdown: {\n\t\t\t\t\t\tvalue: element.saneDetail,\n\t\t\t\t\t\tsupportThemeIcons: true,\n\t\t\t\t\t},\n\t\t\t\t\tmarkdownNotSupportedFallback: element.saneDetail,\n\t\t\t\t};\n\t\t\t}\n\t\t\tdata.detail.element.style.display = \"\";\n\t\t\tdata.detail.setLabel(element.saneDetail, undefined, {\n\t\t\t\tmatches: detailHighlights,\n\t\t\t\ttitle,\n\t\t\t\tlabelEscapeNewLines: true,\n\t\t\t});\n\t\t} else {\n\t\t\tdata.detail.element.style.display = \"none\";\n\t\t}\n\n\t\t// Separator\n\t\tif (element.separator?.label) {\n\t\t\tdata.separator.textContent = element.separator.label;\n\t\t\tdata.separator.style.display = \"\";\n\t\t\tthis.addItemWithSeparator(element);\n\t\t} else {\n\t\t\tdata.separator.style.display = \"none\";\n\t\t}\n\t\tdata.entry.classList.toggle(\n\t\t\t\"quick-input-list-separator-border\",\n\t\t\t!!element.separator,\n\t\t);\n\n\t\t// Actions\n\t\tconst buttons = mainItem.buttons;\n\t\tif (buttons && buttons.length) {\n\t\t\tdata.actionBar.push(\n\t\t\t\tbuttons.map((button, index) =>\n\t\t\t\t\tquickInputButtonToAction(button, `id-${index}`, () =>\n\t\t\t\t\t\telement.fireButtonTriggered({\n\t\t\t\t\t\t\tbutton,\n\t\t\t\t\t\t\titem: element.item,\n\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t\t{ icon: true, label: false },\n\t\t\t);\n\t\t\tdata.entry.classList.add(\"has-actions\");\n\t\t} else {\n\t\t\tdata.entry.classList.remove(\"has-actions\");\n\t\t}\n\t}\n\n\toverride disposeElement(\n\t\telement: ITreeNode<QuickPickItemElement, void>,\n\t\t_index: number,\n\t\tdata: IQuickInputItemTemplateData,\n\t): void {\n\t\tthis.removeItemWithSeparator(element.element);\n\t\tsuper.disposeElement(element, _index, data);\n\t}\n\n\tisItemWithSeparatorVisible(item: QuickPickItemElement): boolean {\n\t\treturn this._itemsWithSeparatorsFrequency.has(item);\n\t}\n\n\tprivate addItemWithSeparator(item: QuickPickItemElement): void {\n\t\tthis._itemsWithSeparatorsFrequency.set(\n\t\t\titem,\n\t\t\t(this._itemsWithSeparatorsFrequency.get(item) || 0) + 1,\n\t\t);\n\t}\n\n\tprivate removeItemWithSeparator(item: QuickPickItemElement): void {\n\t\tconst frequency = this._itemsWithSeparatorsFrequency.get(item) || 0;\n\t\tif (frequency > 1) {\n\t\t\tthis._itemsWithSeparatorsFrequency.set(item, frequency - 1);\n\t\t} else {\n\t\t\tthis._itemsWithSeparatorsFrequency.delete(item);\n\t\t}\n\t}\n}\n\nclass QuickPickSeparatorElementRenderer extends BaseQuickInputListRenderer<QuickPickSeparatorElement> {\n\tstatic readonly ID = \"quickpickseparator\";\n\n\t// This is a frequency map because sticky scroll re-uses the same renderer to render a second\n\t// instance of the same separator.\n\tprivate readonly _visibleSeparatorsFrequency = new Map<\n\t\tQuickPickSeparatorElement,\n\t\tnumber\n\t>();\n\n\tget templateId() {\n\t\treturn QuickPickSeparatorElementRenderer.ID;\n\t}\n\n\tget visibleSeparators(): QuickPickSeparatorElement[] {\n\t\treturn [...this._visibleSeparatorsFrequency.keys()];\n\t}\n\n\tisSeparatorVisible(separator: QuickPickSeparatorElement): boolean {\n\t\treturn this._visibleSeparatorsFrequency.has(separator);\n\t}\n\n\toverride renderTemplate(\n\t\tcontainer: HTMLElement,\n\t): IQuickInputItemTemplateData {\n\t\tconst data = super.renderTemplate(container);\n\t\tdata.checkbox.style.display = \"none\";\n\t\treturn data;\n\t}\n\n\toverride renderElement(\n\t\tnode: ITreeNode<QuickPickSeparatorElement, void>,\n\t\tindex: number,\n\t\tdata: IQuickInputItemTemplateData,\n\t): void {\n\t\tconst element = node.element;\n\t\tdata.element = element;\n\t\telement.element = data.entry ?? undefined;\n\t\telement.element.classList.toggle(\n\t\t\t\"focus-inside\",\n\t\t\t!!element.focusInsideSeparator,\n\t\t);\n\t\tconst mainItem: IQuickPickSeparator = element.separator;\n\n\t\tconst { labelHighlights, descriptionHighlights, detailHighlights } =\n\t\t\telement;\n\n\t\t// Icon\n\t\tdata.icon.style.backgroundImage = \"\";\n\t\tdata.icon.className = \"\";\n\n\t\t// Label\n\t\tlet descriptionTitle: IManagedHoverTooltipMarkdownString | undefined;\n\t\t// if we have a tooltip, that will be the hover,\n\t\t// with the saneDescription as fallback if it\n\t\t// is defined\n\t\tif (!element.saneTooltip && element.saneDescription) {\n\t\t\tdescriptionTitle = {\n\t\t\t\tmarkdown: {\n\t\t\t\t\tvalue: element.saneDescription,\n\t\t\t\t\tsupportThemeIcons: true,\n\t\t\t\t},\n\t\t\t\tmarkdownNotSupportedFallback: element.saneDescription,\n\t\t\t};\n\t\t}\n\t\tconst options: IIconLabelValueOptions = {\n\t\t\tmatches: labelHighlights || [],\n\t\t\t// If we have a tooltip, we want that to be shown and not any other hover\n\t\t\tdescriptionTitle,\n\t\t\tdescriptionMatches: descriptionHighlights || [],\n\t\t\tlabelEscapeNewLines: true,\n\t\t};\n\t\tdata.entry.classList.add(\"quick-input-list-separator-as-item\");\n\t\tdata.label.setLabel(\n\t\t\telement.saneLabel,\n\t\t\telement.saneDescription,\n\t\t\toptions,\n\t\t);\n\n\t\t// Detail\n\t\tif (element.saneDetail) {\n\t\t\tlet title: IManagedHoverTooltipMarkdownString | undefined;\n\t\t\t// If we have a tooltip, we want that to be shown and not any other hover\n\t\t\tif (!element.saneTooltip) {\n\t\t\t\ttitle = {\n\t\t\t\t\tmarkdown: {\n\t\t\t\t\t\tvalue: element.saneDetail,\n\t\t\t\t\t\tsupportThemeIcons: true,\n\t\t\t\t\t},\n\t\t\t\t\tmarkdownNotSupportedFallback: element.saneDetail,\n\t\t\t\t};\n\t\t\t}\n\t\t\tdata.detail.element.style.display = \"\";\n\t\t\tdata.detail.setLabel(element.saneDetail, undefined, {\n\t\t\t\tmatches: detailHighlights,\n\t\t\t\ttitle,\n\t\t\t\tlabelEscapeNewLines: true,\n\t\t\t});\n\t\t} else {\n\t\t\tdata.detail.element.style.display = \"none\";\n\t\t}\n\n\t\t// Separator\n\t\tdata.separator.style.display = \"none\";\n\t\tdata.entry.classList.add(\"quick-input-list-separator-border\");\n\n\t\t// Actions\n\t\tconst buttons = mainItem.buttons;\n\t\tif (buttons && buttons.length) {\n\t\t\tdata.actionBar.push(\n\t\t\t\tbuttons.map((button, index) =>\n\t\t\t\t\tquickInputButtonToAction(button, `id-${index}`, () =>\n\t\t\t\t\t\telement.fireSeparatorButtonTriggered({\n\t\t\t\t\t\t\tbutton,\n\t\t\t\t\t\t\tseparator: element.separator,\n\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t\t{ icon: true, label: false },\n\t\t\t);\n\t\t\tdata.entry.classList.add(\"has-actions\");\n\t\t} else {\n\t\t\tdata.entry.classList.remove(\"has-actions\");\n\t\t}\n\n\t\tthis.addSeparator(element);\n\t}\n\n\toverride disposeElement(\n\t\telement: ITreeNode<QuickPickSeparatorElement, void>,\n\t\t_index: number,\n\t\tdata: IQuickInputItemTemplateData,\n\t): void {\n\t\tthis.removeSeparator(element.element);\n\t\tif (!this.isSeparatorVisible(element.element)) {\n\t\t\telement.element.element?.classList.remove(\"focus-inside\");\n\t\t}\n\t\tsuper.disposeElement(element, _index, data);\n\t}\n\n\tprivate addSeparator(separator: QuickPickSeparatorElement): void {\n\t\tthis._visibleSeparatorsFrequency.set(\n\t\t\tseparator,\n\t\t\t(this._visibleSeparatorsFrequency.get(separator) || 0) + 1,\n\t\t);\n\t}\n\n\tprivate removeSeparator(separator: QuickPickSeparatorElement): void {\n\t\tconst frequency = this._visibleSeparatorsFrequency.get(separator) || 0;\n\t\tif (frequency > 1) {\n\t\t\tthis._visibleSeparatorsFrequency.set(separator, frequency - 1);\n\t\t} else {\n\t\t\tthis._visibleSeparatorsFrequency.delete(separator);\n\t\t}\n\t}\n}\n\nexport class QuickInputTree extends Disposable {\n\t//#region QuickInputTree Events\n\n\tprivate readonly _onKeyDown = new Emitter<StandardKeyboardEvent>();\n\t/**\n\t * Event that is fired when the tree receives a keydown.\n\t */\n\treadonly onKeyDown: Event<StandardKeyboardEvent> = this._onKeyDown.event;\n\n\tprivate readonly _onLeave = new Emitter<void>();\n\t/**\n\t * Event that is fired when the tree would no longer have focus.\n\t */\n\treadonly onLeave: Event<void> = this._onLeave.event;\n\n\tprivate readonly _visibleCountObservable = observableValue(\n\t\t\"VisibleCount\",\n\t\t0,\n\t);\n\tonChangedVisibleCount: Event<number> = Event.fromObservable(\n\t\tthis._visibleCountObservable,\n\t\tthis._store,\n\t);\n\n\tprivate readonly _allVisibleCheckedObservable = observableValue(\n\t\t\"AllVisibleChecked\",\n\t\tfalse,\n\t);\n\tonChangedAllVisibleChecked: Event<boolean> = Event.fromObservable(\n\t\tthis._allVisibleCheckedObservable,\n\t\tthis._store,\n\t);\n\n\tprivate readonly _checkedCountObservable = observableValue(\n\t\t\"CheckedCount\",\n\t\t0,\n\t);\n\tonChangedCheckedCount: Event<number> = Event.fromObservable(\n\t\tthis._checkedCountObservable,\n\t\tthis._store,\n\t);\n\n\tprivate readonly _checkedElementsObservable = observableValueOpts(\n\t\t{ equalsFn: equals },\n\t\tnew Array<IQuickPickItem>(),\n\t);\n\tonChangedCheckedElements: Event<IQuickPickItem[]> = Event.fromObservable(\n\t\tthis._checkedElementsObservable,\n\t\tthis._store,\n\t);\n\n\tprivate readonly _onButtonTriggered = new Emitter<\n\t\tIQuickPickItemButtonEvent<IQuickPickItem>\n\t>();\n\tonButtonTriggered = this._onButtonTriggered.event;\n\n\tprivate readonly _onSeparatorButtonTriggered =\n\t\tnew Emitter<IQuickPickSeparatorButtonEvent>();\n\tonSeparatorButtonTriggered = this._onSeparatorButtonTriggered.event;\n\n\tprivate readonly _elementChecked = new Emitter<{\n\t\telement: IQuickPickElement;\n\t\tchecked: boolean;\n\t}>();\n\tprivate readonly _elementCheckedEventBufferer = new EventBufferer();\n\n\t//#endregion\n\n\tprivate _hasCheckboxes = false;\n\n\tprivate readonly _container: HTMLElement;\n\tprivate readonly _tree: WorkbenchObjectTree<IQuickPickElement, void>;\n\tprivate readonly _separatorRenderer: QuickPickSeparatorElementRenderer;\n\tprivate readonly _itemRenderer: QuickPickItemElementRenderer;\n\tprivate _inputElements = new Array<QuickPickItem>();\n\tprivate _elementTree = new Array<IQuickPickElement>();\n\tprivate _itemElements = new Array<QuickPickItemElement>();\n\t// Elements that apply to the current set of elements\n\tprivate readonly _elementDisposable = this._register(new DisposableStore());\n\tprivate _lastHover: IHoverWidget | undefined;\n\tprivate _lastQueryString: string | undefined;\n\n\tconstructor(\n\t\tprivate parent: HTMLElement,\n\t\tprivate hoverDelegate: IHoverDelegate,\n\t\tprivate linkOpenerDelegate: (content: string) => void,\n\t\tid: string,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IAccessibilityService\n\t\tprivate readonly accessibilityService: IAccessibilityService,\n\t) {\n\t\tsuper();\n\t\tthis._container = dom.append(this.parent, $(\".quick-input-list\"));\n\t\tthis._separatorRenderer = new QuickPickSeparatorElementRenderer(\n\t\t\thoverDelegate,\n\t\t);\n\t\tthis._itemRenderer = instantiationService.createInstance(\n\t\t\tQuickPickItemElementRenderer,\n\t\t\thoverDelegate,\n\t\t);\n\t\tthis._tree = this._register(\n\t\t\tinstantiationService.createInstance(\n\t\t\t\tWorkbenchObjectTree<IQuickPickElement, void>,\n\t\t\t\t\"QuickInput\",\n\t\t\t\tthis._container,\n\t\t\t\tnew QuickInputItemDelegate(),\n\t\t\t\t[this._itemRenderer, this._separatorRenderer],\n\t\t\t\t{\n\t\t\t\t\tfilter: {\n\t\t\t\t\t\tfilter(element) {\n\t\t\t\t\t\t\treturn element.hidden\n\t\t\t\t\t\t\t\t? TreeVisibility.Hidden\n\t\t\t\t\t\t\t\t: element instanceof QuickPickSeparatorElement\n\t\t\t\t\t\t\t\t\t? TreeVisibility.Recurse\n\t\t\t\t\t\t\t\t\t: TreeVisibility.Visible;\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tsorter: {\n\t\t\t\t\t\tcompare: (element, otherElement) => {\n\t\t\t\t\t\t\tif (!this.sortByLabel || !this._lastQueryString) {\n\t\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst normalizedSearchValue =\n\t\t\t\t\t\t\t\tthis._lastQueryString.toLowerCase();\n\t\t\t\t\t\t\treturn compareEntries(\n\t\t\t\t\t\t\t\telement,\n\t\t\t\t\t\t\t\totherElement,\n\t\t\t\t\t\t\t\tnormalizedSearchValue,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\taccessibilityProvider:\n\t\t\t\t\t\tnew QuickInputAccessibilityProvider(),\n\t\t\t\t\tsetRowLineHeight: false,\n\t\t\t\t\tmultipleSelectionSupport: false,\n\t\t\t\t\thideTwistiesOfChildlessElements: true,\n\t\t\t\t\trenderIndentGuides: RenderIndentGuides.None,\n\t\t\t\t\tfindWidgetEnabled: false,\n\t\t\t\t\tindent: 0,\n\t\t\t\t\thorizontalScrolling: false,\n\t\t\t\t\tallowNonCollapsibleParents: true,\n\t\t\t\t\talwaysConsumeMouseWheel: true,\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t\tthis._tree.getHTMLElement().id = id;\n\t\tthis._registerListeners();\n\t}\n\n\t//#region public getters/setters\n\n\t@memoize\n\tget onDidChangeFocus() {\n\t\treturn Event.map(\n\t\t\tthis._tree.onDidChangeFocus,\n\t\t\t(e) =>\n\t\t\t\te.elements\n\t\t\t\t\t.filter(\n\t\t\t\t\t\t(e): e is QuickPickItemElement =>\n\t\t\t\t\t\t\te instanceof QuickPickItemElement,\n\t\t\t\t\t)\n\t\t\t\t\t.map((e) => e.item),\n\t\t\tthis._store,\n\t\t);\n\t}\n\n\t@memoize\n\tget onDidChangeSelection() {\n\t\treturn Event.map(\n\t\t\tthis._tree.onDidChangeSelection,\n\t\t\t(e) => ({\n\t\t\t\titems: e.elements\n\t\t\t\t\t.filter(\n\t\t\t\t\t\t(e): e is QuickPickItemElement =>\n\t\t\t\t\t\t\te instanceof QuickPickItemElement,\n\t\t\t\t\t)\n\t\t\t\t\t.map((e) => e.item),\n\t\t\t\tevent: e.browserEvent,\n\t\t\t}),\n\t\t\tthis._store,\n\t\t);\n\t}\n\n\tget displayed() {\n\t\treturn this._container.style.display !== \"none\";\n\t}\n\n\tset displayed(value: boolean) {\n\t\tthis._container.style.display = value ? \"\" : \"none\";\n\t}\n\n\tget scrollTop() {\n\t\treturn this._tree.scrollTop;\n\t}\n\n\tset scrollTop(scrollTop: number) {\n\t\tthis._tree.scrollTop = scrollTop;\n\t}\n\n\tget ariaLabel() {\n\t\treturn this._tree.ariaLabel;\n\t}\n\n\tset ariaLabel(label: string | null) {\n\t\tthis._tree.ariaLabel = label ?? \"\";\n\t}\n\n\tset enabled(value: boolean) {\n\t\tthis._tree.getHTMLElement().style.pointerEvents = value ? \"\" : \"none\";\n\t}\n\n\tprivate _matchOnDescription = false;\n\tget matchOnDescription() {\n\t\treturn this._matchOnDescription;\n\t}\n\tset matchOnDescription(value: boolean) {\n\t\tthis._matchOnDescription = value;\n\t}\n\n\tprivate _matchOnDetail = false;\n\tget matchOnDetail() {\n\t\treturn this._matchOnDetail;\n\t}\n\tset matchOnDetail(value: boolean) {\n\t\tthis._matchOnDetail = value;\n\t}\n\n\tprivate _matchOnLabel = true;\n\tget matchOnLabel() {\n\t\treturn this._matchOnLabel;\n\t}\n\tset matchOnLabel(value: boolean) {\n\t\tthis._matchOnLabel = value;\n\t}\n\n\tprivate _matchOnLabelMode: \"fuzzy\" | \"contiguous\" = \"fuzzy\";\n\tget matchOnLabelMode() {\n\t\treturn this._matchOnLabelMode;\n\t}\n\tset matchOnLabelMode(value: \"fuzzy\" | \"contiguous\") {\n\t\tthis._matchOnLabelMode = value;\n\t}\n\n\tprivate _matchOnMeta = true;\n\tget matchOnMeta() {\n\t\treturn this._matchOnMeta;\n\t}\n\tset matchOnMeta(value: boolean) {\n\t\tthis._matchOnMeta = value;\n\t}\n\n\tprivate _sortByLabel = true;\n\tget sortByLabel() {\n\t\treturn this._sortByLabel;\n\t}\n\tset sortByLabel(value: boolean) {\n\t\tthis._sortByLabel = value;\n\t}\n\n\tprivate _shouldLoop = true;\n\tget shouldLoop() {\n\t\treturn this._shouldLoop;\n\t}\n\tset shouldLoop(value: boolean) {\n\t\tthis._shouldLoop = value;\n\t}\n\n\t//#endregion\n\n\t//#region register listeners\n\n\tprivate _registerListeners() {\n\t\tthis._registerOnKeyDown();\n\t\tthis._registerOnContainerClick();\n\t\tthis._registerOnMouseMiddleClick();\n\t\tthis._registerOnTreeModelChanged();\n\t\tthis._registerOnElementChecked();\n\t\tthis._registerOnContextMenu();\n\t\tthis._registerHoverListeners();\n\t\tthis._registerSelectionChangeListener();\n\t\tthis._registerSeparatorActionShowingListeners();\n\t}\n\n\tprivate _registerOnKeyDown() {\n\t\t// TODO: Should this be added at a higher level?\n\t\tthis._register(\n\t\t\tthis._tree.onKeyDown((e) => {\n\t\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\t\tswitch (event.keyCode) {\n\t\t\t\t\tcase KeyCode.Space:\n\t\t\t\t\t\tthis.toggleCheckbox();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tthis._onKeyDown.fire(event);\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate _registerOnContainerClick() {\n\t\tthis._register(\n\t\t\tdom.addDisposableListener(\n\t\t\t\tthis._container,\n\t\t\t\tdom.EventType.CLICK,\n\t\t\t\t(e) => {\n\t\t\t\t\tif (e.x || e.y) {\n\t\t\t\t\t\t// Avoid 'click' triggered by 'space' on checkbox.\n\t\t\t\t\t\tthis._onLeave.fire();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate _registerOnMouseMiddleClick() {\n\t\tthis._register(\n\t\t\tdom.addDisposableListener(\n\t\t\t\tthis._container,\n\t\t\t\tdom.EventType.AUXCLICK,\n\t\t\t\t(e) => {\n\t\t\t\t\tif (e.button === 1) {\n\t\t\t\t\t\tthis._onLeave.fire();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate _registerOnTreeModelChanged() {\n\t\tthis._register(\n\t\t\tthis._tree.onDidChangeModel(() => {\n\t\t\t\tconst visibleCount = this._itemElements.filter(\n\t\t\t\t\t(e) => !e.hidden,\n\t\t\t\t).length;\n\t\t\t\tthis._visibleCountObservable.set(visibleCount, undefined);\n\t\t\t\tif (this._hasCheckboxes) {\n\t\t\t\t\tthis._updateCheckedObservables();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate _registerOnElementChecked() {\n\t\t// Only fire the last event when buffered\n\t\tthis._register(\n\t\t\tthis._elementCheckedEventBufferer.wrapEvent(\n\t\t\t\tthis._elementChecked.event,\n\t\t\t\t(_, e) => e,\n\t\t\t)((_) => this._updateCheckedObservables()),\n\t\t);\n\t}\n\n\tprivate _registerOnContextMenu() {\n\t\tthis._register(\n\t\t\tthis._tree.onContextMenu((e) => {\n\t\t\t\tif (e.element) {\n\t\t\t\t\te.browserEvent.preventDefault();\n\n\t\t\t\t\t// we want to treat a context menu event as\n\t\t\t\t\t// a gesture to open the item at the index\n\t\t\t\t\t// since we do not have any context menu\n\t\t\t\t\t// this enables for example macOS to Ctrl-\n\t\t\t\t\t// click on an item to open it.\n\t\t\t\t\tthis._tree.setSelection([e.element]);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate _registerHoverListeners() {\n\t\tconst delayer = this._register(\n\t\t\tnew ThrottledDelayer(this.hoverDelegate.delay),\n\t\t);\n\t\tthis._register(\n\t\t\tthis._tree.onMouseOver(async (e) => {\n\t\t\t\t// If we hover over an anchor element, we don't want to show the hover because\n\t\t\t\t// the anchor may have a tooltip that we want to show instead.\n\t\t\t\tif (dom.isHTMLAnchorElement(e.browserEvent.target)) {\n\t\t\t\t\tdelayer.cancel();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\t// anchors are an exception as called out above so we skip them here\n\t\t\t\t\t!dom.isHTMLAnchorElement(e.browserEvent.relatedTarget) &&\n\t\t\t\t\t// check if the mouse is still over the same element\n\t\t\t\t\tdom.isAncestor(\n\t\t\t\t\t\te.browserEvent.relatedTarget as Node,\n\t\t\t\t\t\te.element?.element as Node,\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tawait delayer.trigger(async () => {\n\t\t\t\t\t\tif (e.element instanceof QuickPickItemElement) {\n\t\t\t\t\t\t\tthis.showHover(e.element);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// Ignore cancellation errors due to mouse out\n\t\t\t\t\tif (!isCancellationError(e)) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\tthis._tree.onMouseOut((e) => {\n\t\t\t\t// onMouseOut triggers every time a new element has been moused over\n\t\t\t\t// even if it's on the same list item. We only want one event, so we\n\t\t\t\t// check if the mouse is still over the same element.\n\t\t\t\tif (\n\t\t\t\t\tdom.isAncestor(\n\t\t\t\t\t\te.browserEvent.relatedTarget as Node,\n\t\t\t\t\t\te.element?.element as Node,\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tdelayer.cancel();\n\t\t\t}),\n\t\t);\n\t}\n\n\t/**\n\t * Register's focus change and mouse events so that we can track when items inside of a\n\t * separator's section are focused or hovered so that we can display the separator's actions\n\t */\n\tprivate _registerSeparatorActionShowingListeners() {\n\t\tthis._register(\n\t\t\tthis._tree.onDidChangeFocus((e) => {\n\t\t\t\tconst parent = e.elements[0]\n\t\t\t\t\t? (this._tree.getParentElement(\n\t\t\t\t\t\t\te.elements[0],\n\t\t\t\t\t\t) as QuickPickSeparatorElement)\n\t\t\t\t\t: // treat null as focus lost and when we have no separators\n\t\t\t\t\t\tnull;\n\t\t\t\tfor (const separator of this._separatorRenderer\n\t\t\t\t\t.visibleSeparators) {\n\t\t\t\t\tconst value = separator === parent;\n\t\t\t\t\t// get bitness of ACTIVE_ITEM and check if it changed\n\t\t\t\t\tconst currentActive = !!(\n\t\t\t\t\t\tseparator.focusInsideSeparator &\n\t\t\t\t\t\tQuickPickSeparatorFocusReason.ACTIVE_ITEM\n\t\t\t\t\t);\n\t\t\t\t\tif (currentActive !== value) {\n\t\t\t\t\t\tif (value) {\n\t\t\t\t\t\t\tseparator.focusInsideSeparator |=\n\t\t\t\t\t\t\t\tQuickPickSeparatorFocusReason.ACTIVE_ITEM;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tseparator.focusInsideSeparator &=\n\t\t\t\t\t\t\t\t~QuickPickSeparatorFocusReason.ACTIVE_ITEM;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._tree.rerender(separator);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\tthis._tree.onMouseOver((e) => {\n\t\t\t\tconst parent = e.element\n\t\t\t\t\t? (this._tree.getParentElement(\n\t\t\t\t\t\t\te.element,\n\t\t\t\t\t\t) as QuickPickSeparatorElement)\n\t\t\t\t\t: null;\n\t\t\t\tfor (const separator of this._separatorRenderer\n\t\t\t\t\t.visibleSeparators) {\n\t\t\t\t\tif (separator !== parent) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tconst currentMouse = !!(\n\t\t\t\t\t\tseparator.focusInsideSeparator &\n\t\t\t\t\t\tQuickPickSeparatorFocusReason.MOUSE_HOVER\n\t\t\t\t\t);\n\t\t\t\t\tif (!currentMouse) {\n\t\t\t\t\t\tseparator.focusInsideSeparator |=\n\t\t\t\t\t\t\tQuickPickSeparatorFocusReason.MOUSE_HOVER;\n\t\t\t\t\t\tthis._tree.rerender(separator);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis._register(\n\t\t\tthis._tree.onMouseOut((e) => {\n\t\t\t\tconst parent = e.element\n\t\t\t\t\t? (this._tree.getParentElement(\n\t\t\t\t\t\t\te.element,\n\t\t\t\t\t\t) as QuickPickSeparatorElement)\n\t\t\t\t\t: null;\n\t\t\t\tfor (const separator of this._separatorRenderer\n\t\t\t\t\t.visibleSeparators) {\n\t\t\t\t\tif (separator !== parent) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tconst currentMouse = !!(\n\t\t\t\t\t\tseparator.focusInsideSeparator &\n\t\t\t\t\t\tQuickPickSeparatorFocusReason.MOUSE_HOVER\n\t\t\t\t\t);\n\t\t\t\t\tif (currentMouse) {\n\t\t\t\t\t\tseparator.focusInsideSeparator &=\n\t\t\t\t\t\t\t~QuickPickSeparatorFocusReason.MOUSE_HOVER;\n\t\t\t\t\t\tthis._tree.rerender(separator);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate _registerSelectionChangeListener() {\n\t\t// When the user selects a separator, the separator will move to the top and focus will be\n\t\t// set to the first element after the separator.\n\t\tthis._register(\n\t\t\tthis._tree.onDidChangeSelection((e) => {\n\t\t\t\tconst elementsWithoutSeparators = e.elements.filter(\n\t\t\t\t\t(e): e is QuickPickItemElement =>\n\t\t\t\t\t\te instanceof QuickPickItemElement,\n\t\t\t\t);\n\t\t\t\tif (elementsWithoutSeparators.length !== e.elements.length) {\n\t\t\t\t\tif (\n\t\t\t\t\t\te.elements.length === 1 &&\n\t\t\t\t\t\te.elements[0] instanceof QuickPickSeparatorElement\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis._tree.setFocus([e.elements[0].children[0]]);\n\t\t\t\t\t\tthis._tree.reveal(e.elements[0], 0);\n\t\t\t\t\t}\n\t\t\t\t\tthis._tree.setSelection(elementsWithoutSeparators);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\t//#endregion\n\n\t//#region public methods\n\n\tsetAllVisibleChecked(checked: boolean) {\n\t\tthis._elementCheckedEventBufferer.bufferEvents(() => {\n\t\t\tthis._itemElements.forEach((element) => {\n\t\t\t\tif (!element.hidden && !element.checkboxDisabled) {\n\t\t\t\t\t// Would fire an event if we didn't beffer the events\n\t\t\t\t\telement.checked = checked;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tsetElements(inputElements: QuickPickItem[]): void {\n\t\tthis._elementDisposable.clear();\n\t\tthis._lastQueryString = undefined;\n\t\tthis._inputElements = inputElements;\n\t\tthis._hasCheckboxes = this.parent.classList.contains(\"show-checkboxes\");\n\t\tlet currentSeparatorElement: QuickPickSeparatorElement | undefined;\n\t\tthis._itemElements = new Array<QuickPickItemElement>();\n\t\tthis._elementTree = inputElements.reduce((result, item, index) => {\n\t\t\tlet element: IQuickPickElement;\n\t\t\tif (item.type === \"separator\") {\n\t\t\t\tif (!item.buttons) {\n\t\t\t\t\t// This separator will be rendered as a part of the list item\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\tcurrentSeparatorElement = new QuickPickSeparatorElement(\n\t\t\t\t\tindex,\n\t\t\t\t\t(e) => this._onSeparatorButtonTriggered.fire(e),\n\t\t\t\t\titem,\n\t\t\t\t);\n\t\t\t\telement = currentSeparatorElement;\n\t\t\t} else {\n\t\t\t\tconst previous =\n\t\t\t\t\tindex > 0 ? inputElements[index - 1] : undefined;\n\t\t\t\tlet separator: IQuickPickSeparator | undefined;\n\t\t\t\tif (\n\t\t\t\t\tprevious &&\n\t\t\t\t\tprevious.type === \"separator\" &&\n\t\t\t\t\t!previous.buttons\n\t\t\t\t) {\n\t\t\t\t\t// Found an inline separator so we clear out the current separator element\n\t\t\t\t\tcurrentSeparatorElement = undefined;\n\t\t\t\t\tseparator = previous;\n\t\t\t\t}\n\t\t\t\tconst qpi = new QuickPickItemElement(\n\t\t\t\t\tindex,\n\t\t\t\t\tthis._hasCheckboxes,\n\t\t\t\t\t(e) => this._onButtonTriggered.fire(e),\n\t\t\t\t\tthis._elementChecked,\n\t\t\t\t\titem,\n\t\t\t\t\tseparator,\n\t\t\t\t);\n\t\t\t\tthis._itemElements.push(qpi);\n\n\t\t\t\tif (currentSeparatorElement) {\n\t\t\t\t\tcurrentSeparatorElement.children.push(qpi);\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\telement = qpi;\n\t\t\t}\n\n\t\t\tresult.push(element);\n\t\t\treturn result;\n\t\t}, new Array<IQuickPickElement>());\n\n\t\tthis._setElementsToTree(this._elementTree);\n\n\t\t// Accessibility hack, unfortunately on next tick\n\t\t// https://github.com/microsoft/vscode/issues/211976\n\t\tif (this.accessibilityService.isScreenReaderOptimized()) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst focusedElement = this._tree\n\t\t\t\t\t.getHTMLElement()\n\t\t\t\t\t.querySelector(`.monaco-list-row.focused`);\n\t\t\t\tconst parent = focusedElement?.parentNode;\n\t\t\t\tif (focusedElement && parent) {\n\t\t\t\t\tconst nextSibling = focusedElement.nextSibling;\n\t\t\t\t\tfocusedElement.remove();\n\t\t\t\t\tparent.insertBefore(focusedElement, nextSibling);\n\t\t\t\t}\n\t\t\t}, 0);\n\t\t}\n\t}\n\n\tsetFocusedElements(items: IQuickPickItem[]) {\n\t\tconst elements = items\n\t\t\t.map((item) => this._itemElements.find((e) => e.item === item))\n\t\t\t.filter((e): e is QuickPickItemElement => !!e)\n\t\t\t.filter((e) => !e.hidden);\n\t\tthis._tree.setFocus(elements);\n\t\tif (items.length > 0) {\n\t\t\tconst focused = this._tree.getFocus()[0];\n\t\t\tif (focused) {\n\t\t\t\tthis._tree.reveal(focused);\n\t\t\t}\n\t\t}\n\t}\n\n\tgetActiveDescendant() {\n\t\treturn this._tree\n\t\t\t.getHTMLElement()\n\t\t\t.getAttribute(\"aria-activedescendant\");\n\t}\n\n\tsetSelectedElements(items: IQuickPickItem[]) {\n\t\tconst elements = items\n\t\t\t.map((item) => this._itemElements.find((e) => e.item === item))\n\t\t\t.filter((e): e is QuickPickItemElement => !!e);\n\t\tthis._tree.setSelection(elements);\n\t}\n\n\tgetCheckedElements() {\n\t\treturn this._itemElements.filter((e) => e.checked).map((e) => e.item);\n\t}\n\n\tsetCheckedElements(items: IQuickPickItem[]) {\n\t\tthis._elementCheckedEventBufferer.bufferEvents(() => {\n\t\t\tconst checked = new Set();\n\t\t\tfor (const item of items) {\n\t\t\t\tchecked.add(item);\n\t\t\t}\n\t\t\tfor (const element of this._itemElements) {\n\t\t\t\t// Would fire an event if we didn't beffer the events\n\t\t\t\telement.checked = checked.has(element.item);\n\t\t\t}\n\t\t});\n\t}\n\n\tfocus(what: QuickPickFocus): void {\n\t\tif (!this._itemElements.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (what === QuickPickFocus.Second && this._itemElements.length < 2) {\n\t\t\twhat = QuickPickFocus.First;\n\t\t}\n\n\t\tswitch (what) {\n\t\t\tcase QuickPickFocus.First:\n\t\t\t\tthis._tree.scrollTop = 0;\n\t\t\t\tthis._tree.focusFirst(\n\t\t\t\t\tundefined,\n\t\t\t\t\t(e) => e.element instanceof QuickPickItemElement,\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase QuickPickFocus.Second: {\n\t\t\t\tthis._tree.scrollTop = 0;\n\t\t\t\tlet isSecondItem = false;\n\t\t\t\tthis._tree.focusFirst(undefined, (e) => {\n\t\t\t\t\tif (!(e.element instanceof QuickPickItemElement)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif (isSecondItem) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tisSecondItem = !isSecondItem;\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase QuickPickFocus.Last:\n\t\t\t\tthis._tree.scrollTop = this._tree.scrollHeight;\n\t\t\t\tthis._tree.focusLast(\n\t\t\t\t\tundefined,\n\t\t\t\t\t(e) => e.element instanceof QuickPickItemElement,\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase QuickPickFocus.Next: {\n\t\t\t\tconst prevFocus = this._tree.getFocus();\n\t\t\t\tthis._tree.focusNext(\n\t\t\t\t\tundefined,\n\t\t\t\t\tthis._shouldLoop,\n\t\t\t\t\tundefined,\n\t\t\t\t\t(e) => {\n\t\t\t\t\t\tif (!(e.element instanceof QuickPickItemElement)) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._tree.reveal(e.element);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t\tconst currentFocus = this._tree.getFocus();\n\t\t\t\tif (\n\t\t\t\t\tprevFocus.length &&\n\t\t\t\t\tprevFocus[0] === currentFocus[0] &&\n\t\t\t\t\tprevFocus[0] ===\n\t\t\t\t\t\tthis._itemElements[this._itemElements.length - 1]\n\t\t\t\t) {\n\t\t\t\t\tthis._onLeave.fire();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase QuickPickFocus.Previous: {\n\t\t\t\tconst prevFocus = this._tree.getFocus();\n\t\t\t\tthis._tree.focusPrevious(\n\t\t\t\t\tundefined,\n\t\t\t\t\tthis._shouldLoop,\n\t\t\t\t\tundefined,\n\t\t\t\t\t(e) => {\n\t\t\t\t\t\tif (!(e.element instanceof QuickPickItemElement)) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst parent = this._tree.getParentElement(e.element);\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tparent === null ||\n\t\t\t\t\t\t\t(parent as QuickPickSeparatorElement)\n\t\t\t\t\t\t\t\t.children[0] !== e.element\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis._tree.reveal(e.element);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Only if we are the first child of a separator do we reveal the separator\n\t\t\t\t\t\t\tthis._tree.reveal(parent);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t\tconst currentFocus = this._tree.getFocus();\n\t\t\t\tif (\n\t\t\t\t\tprevFocus.length &&\n\t\t\t\t\tprevFocus[0] === currentFocus[0] &&\n\t\t\t\t\tprevFocus[0] === this._itemElements[0]\n\t\t\t\t) {\n\t\t\t\t\tthis._onLeave.fire();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase QuickPickFocus.NextPage:\n\t\t\t\tthis._tree.focusNextPage(undefined, (e) => {\n\t\t\t\t\tif (!(e.element instanceof QuickPickItemElement)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tthis._tree.reveal(e.element);\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase QuickPickFocus.PreviousPage:\n\t\t\t\tthis._tree.focusPreviousPage(undefined, (e) => {\n\t\t\t\t\tif (!(e.element instanceof QuickPickItemElement)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tconst parent = this._tree.getParentElement(e.element);\n\t\t\t\t\tif (\n\t\t\t\t\t\tparent === null ||\n\t\t\t\t\t\t(parent as QuickPickSeparatorElement).children[0] !==\n\t\t\t\t\t\t\te.element\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis._tree.reveal(e.element);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._tree.reveal(parent);\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase QuickPickFocus.NextSeparator: {\n\t\t\t\tlet foundSeparatorAsItem = false;\n\t\t\t\tconst before = this._tree.getFocus()[0];\n\t\t\t\tthis._tree.focusNext(undefined, true, undefined, (e) => {\n\t\t\t\t\tif (foundSeparatorAsItem) {\n\t\t\t\t\t\t// This should be the index right after the separator so it\n\t\t\t\t\t\t// is the item we want to focus.\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (e.element instanceof QuickPickSeparatorElement) {\n\t\t\t\t\t\tfoundSeparatorAsItem = true;\n\t\t\t\t\t\t// If the separator is visible, then we should just reveal its first child so it's not as jarring.\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tthis._separatorRenderer.isSeparatorVisible(\n\t\t\t\t\t\t\t\te.element,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis._tree.reveal(e.element.children[0]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// If the separator is not visible, then we should\n\t\t\t\t\t\t\t// push it up to the top of the list.\n\t\t\t\t\t\t\tthis._tree.reveal(e.element, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (e.element instanceof QuickPickItemElement) {\n\t\t\t\t\t\tif (e.element.separator) {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tthis._itemRenderer.isItemWithSeparatorVisible(\n\t\t\t\t\t\t\t\t\te.element,\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tthis._tree.reveal(e.element);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis._tree.reveal(e.element, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t} else if (e.element === this._elementTree[0]) {\n\t\t\t\t\t\t\t// We should stop at the first item in the list if it's a regular item.\n\t\t\t\t\t\t\tthis._tree.reveal(e.element, 0);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t\tconst after = this._tree.getFocus()[0];\n\t\t\t\tif (before === after) {\n\t\t\t\t\t// If we didn't move, then we should just move to the end\n\t\t\t\t\t// of the list.\n\t\t\t\t\tthis._tree.scrollTop = this._tree.scrollHeight;\n\t\t\t\t\tthis._tree.focusLast(\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t(e) => e.element instanceof QuickPickItemElement,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase QuickPickFocus.PreviousSeparator: {\n\t\t\t\tlet focusElement: IQuickPickElement | undefined;\n\t\t\t\t// If we are already sitting on an inline separator, then we\n\t\t\t\t// have already found the _current_ separator and need to\n\t\t\t\t// move to the previous one.\n\t\t\t\tlet foundSeparator = !!this._tree.getFocus()[0]?.separator;\n\t\t\t\tthis._tree.focusPrevious(undefined, true, undefined, (e) => {\n\t\t\t\t\tif (e.element instanceof QuickPickSeparatorElement) {\n\t\t\t\t\t\tif (foundSeparator) {\n\t\t\t\t\t\t\tif (!focusElement) {\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tthis._separatorRenderer.isSeparatorVisible(\n\t\t\t\t\t\t\t\t\t\te.element,\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tthis._tree.reveal(e.element);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis._tree.reveal(e.element, 0);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tfocusElement = e.element.children[0];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfoundSeparator = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (e.element instanceof QuickPickItemElement) {\n\t\t\t\t\t\tif (!focusElement) {\n\t\t\t\t\t\t\tif (e.element.separator) {\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tthis._itemRenderer.isItemWithSeparatorVisible(\n\t\t\t\t\t\t\t\t\t\te.element,\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tthis._tree.reveal(e.element);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis._tree.reveal(e.element, 0);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tfocusElement = e.element;\n\t\t\t\t\t\t\t} else if (e.element === this._elementTree[0]) {\n\t\t\t\t\t\t\t\t// We should stop at the first item in the list if it's a regular item.\n\t\t\t\t\t\t\t\tthis._tree.reveal(e.element, 0);\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t\tif (focusElement) {\n\t\t\t\t\tthis._tree.setFocus([focusElement]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tclearFocus() {\n\t\tthis._tree.setFocus([]);\n\t}\n\n\tdomFocus() {\n\t\tthis._tree.domFocus();\n\t}\n\n\tlayout(maxHeight?: number): void {\n\t\tthis._tree.getHTMLElement().style.maxHeight = maxHeight\n\t\t\t? `${\n\t\t\t\t\t// Make sure height aligns with list item heights\n\t\t\t\t\tMath.floor(maxHeight / 44) * 44 +\n\t\t\t\t\t// Add some extra height so that it's clear there's more to scroll\n\t\t\t\t\t6\n\t\t\t\t}px`\n\t\t\t: \"\";\n\t\tthis._tree.layout();\n\t}\n\n\tfilter(query: string): boolean {\n\t\tthis._lastQueryString = query;\n\t\tif (\n\t\t\t!(\n\t\t\t\tthis._sortByLabel ||\n\t\t\t\tthis._matchOnLabel ||\n\t\t\t\tthis._matchOnDescription ||\n\t\t\t\tthis._matchOnDetail\n\t\t\t)\n\t\t) {\n\t\t\tthis._tree.layout();\n\t\t\treturn false;\n\t\t}\n\n\t\tconst queryWithWhitespace = query;\n\t\tquery = query.trim();\n\n\t\t// Reset filtering\n\t\tif (\n\t\t\t!query ||\n\t\t\t!(\n\t\t\t\tthis.matchOnLabel ||\n\t\t\t\tthis.matchOnDescription ||\n\t\t\t\tthis.matchOnDetail\n\t\t\t)\n\t\t) {\n\t\t\tthis._itemElements.forEach((element) => {\n\t\t\t\telement.labelHighlights = undefined;\n\t\t\t\telement.descriptionHighlights = undefined;\n\t\t\t\telement.detailHighlights = undefined;\n\t\t\t\telement.hidden = false;\n\t\t\t\tconst previous =\n\t\t\t\t\telement.index && this._inputElements[element.index - 1];\n\t\t\t\tif (element.item) {\n\t\t\t\t\telement.separator =\n\t\t\t\t\t\tprevious &&\n\t\t\t\t\t\tprevious.type === \"separator\" &&\n\t\t\t\t\t\t!previous.buttons\n\t\t\t\t\t\t\t? previous\n\t\t\t\t\t\t\t: undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Filter by value (since we support icons in labels, use $(..) aware fuzzy matching)\n\t\telse {\n\t\t\tlet currentSeparator: IQuickPickSeparator | undefined;\n\t\t\tthis._itemElements.forEach((element) => {\n\t\t\t\tlet labelHighlights: IMatch[] | undefined;\n\t\t\t\tif (this.matchOnLabelMode === \"fuzzy\") {\n\t\t\t\t\tlabelHighlights = this.matchOnLabel\n\t\t\t\t\t\t? (matchesFuzzyIconAware(\n\t\t\t\t\t\t\t\tquery,\n\t\t\t\t\t\t\t\tparseLabelWithIcons(element.saneLabel),\n\t\t\t\t\t\t\t) ?? undefined)\n\t\t\t\t\t\t: undefined;\n\t\t\t\t} else {\n\t\t\t\t\tlabelHighlights = this.matchOnLabel\n\t\t\t\t\t\t? (matchesContiguousIconAware(\n\t\t\t\t\t\t\t\tqueryWithWhitespace,\n\t\t\t\t\t\t\t\tparseLabelWithIcons(element.saneLabel),\n\t\t\t\t\t\t\t) ?? undefined)\n\t\t\t\t\t\t: undefined;\n\t\t\t\t}\n\t\t\t\tconst descriptionHighlights = this.matchOnDescription\n\t\t\t\t\t? (matchesFuzzyIconAware(\n\t\t\t\t\t\t\tquery,\n\t\t\t\t\t\t\tparseLabelWithIcons(element.saneDescription || \"\"),\n\t\t\t\t\t\t) ?? undefined)\n\t\t\t\t\t: undefined;\n\t\t\t\tconst detailHighlights = this.matchOnDetail\n\t\t\t\t\t? (matchesFuzzyIconAware(\n\t\t\t\t\t\t\tquery,\n\t\t\t\t\t\t\tparseLabelWithIcons(element.saneDetail || \"\"),\n\t\t\t\t\t\t) ?? undefined)\n\t\t\t\t\t: undefined;\n\n\t\t\t\tif (\n\t\t\t\t\tlabelHighlights ||\n\t\t\t\t\tdescriptionHighlights ||\n\t\t\t\t\tdetailHighlights\n\t\t\t\t) {\n\t\t\t\t\telement.labelHighlights = labelHighlights;\n\t\t\t\t\telement.descriptionHighlights = descriptionHighlights;\n\t\t\t\t\telement.detailHighlights = detailHighlights;\n\t\t\t\t\telement.hidden = false;\n\t\t\t\t} else {\n\t\t\t\t\telement.labelHighlights = undefined;\n\t\t\t\t\telement.descriptionHighlights = undefined;\n\t\t\t\t\telement.detailHighlights = undefined;\n\t\t\t\t\telement.hidden = element.item\n\t\t\t\t\t\t? !element.item.alwaysShow\n\t\t\t\t\t\t: true;\n\t\t\t\t}\n\n\t\t\t\t// Ensure separators are filtered out first before deciding if we need to bring them back\n\t\t\t\tif (element.item) {\n\t\t\t\t\telement.separator = undefined;\n\t\t\t\t} else if (element.separator) {\n\t\t\t\t\telement.hidden = true;\n\t\t\t\t}\n\n\t\t\t\t// we can show the separator unless the list gets sorted by match\n\t\t\t\tif (!this.sortByLabel) {\n\t\t\t\t\tconst previous =\n\t\t\t\t\t\t(element.index &&\n\t\t\t\t\t\t\tthis._inputElements[element.index - 1]) ||\n\t\t\t\t\t\tundefined;\n\t\t\t\t\tif (previous?.type === \"separator\" && !previous.buttons) {\n\t\t\t\t\t\tcurrentSeparator = previous;\n\t\t\t\t\t}\n\t\t\t\t\tif (currentSeparator && !element.hidden) {\n\t\t\t\t\t\telement.separator = currentSeparator;\n\t\t\t\t\t\tcurrentSeparator = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tthis._setElementsToTree(\n\t\t\tthis._sortByLabel && query\n\t\t\t\t? // We don't render any separators if we're sorting so just render the elements\n\t\t\t\t\tthis._itemElements\n\t\t\t\t: // Render the full tree\n\t\t\t\t\tthis._elementTree,\n\t\t);\n\t\tthis._tree.layout();\n\t\treturn true;\n\t}\n\n\ttoggleCheckbox() {\n\t\tthis._elementCheckedEventBufferer.bufferEvents(() => {\n\t\t\tconst elements = this._tree\n\t\t\t\t.getFocus()\n\t\t\t\t.filter(\n\t\t\t\t\t(e): e is QuickPickItemElement =>\n\t\t\t\t\t\te instanceof QuickPickItemElement,\n\t\t\t\t);\n\t\t\tconst allChecked = this._allVisibleChecked(elements);\n\t\t\tfor (const element of elements) {\n\t\t\t\tif (!element.checkboxDisabled) {\n\t\t\t\t\t// Would fire an event if we didn't have the flag set\n\t\t\t\t\telement.checked = !allChecked;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tstyle(styles: IListStyles) {\n\t\tthis._tree.style(styles);\n\t}\n\n\ttoggleHover() {\n\t\tconst focused: IQuickPickElement | null = this._tree.getFocus()[0];\n\t\tif (\n\t\t\t!focused?.saneTooltip ||\n\t\t\t!(focused instanceof QuickPickItemElement)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\t// if there's a hover already, hide it (toggle off)\n\t\tif (this._lastHover && !this._lastHover.isDisposed) {\n\t\t\tthis._lastHover.dispose();\n\t\t\treturn;\n\t\t}\n\n\t\t// If there is no hover, show it (toggle on)\n\t\tthis.showHover(focused);\n\t\tconst store = new DisposableStore();\n\t\tstore.add(\n\t\t\tthis._tree.onDidChangeFocus((e) => {\n\t\t\t\tif (e.elements[0] instanceof QuickPickItemElement) {\n\t\t\t\t\tthis.showHover(e.elements[0]);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tif (this._lastHover) {\n\t\t\tstore.add(this._lastHover);\n\t\t}\n\t\tthis._elementDisposable.add(store);\n\t}\n\n\t//#endregion\n\n\t//#region private methods\n\n\tprivate _setElementsToTree(elements: IQuickPickElement[]) {\n\t\tconst treeElements = new Array<IObjectTreeElement<IQuickPickElement>>();\n\t\tfor (const element of elements) {\n\t\t\tif (element instanceof QuickPickSeparatorElement) {\n\t\t\t\ttreeElements.push({\n\t\t\t\t\telement,\n\t\t\t\t\tcollapsible: false,\n\t\t\t\t\tcollapsed: false,\n\t\t\t\t\tchildren: element.children.map((e) => ({\n\t\t\t\t\t\telement: e,\n\t\t\t\t\t\tcollapsible: false,\n\t\t\t\t\t\tcollapsed: false,\n\t\t\t\t\t})),\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\ttreeElements.push({\n\t\t\t\t\telement,\n\t\t\t\t\tcollapsible: false,\n\t\t\t\t\tcollapsed: false,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tthis._tree.setChildren(null, treeElements);\n\t}\n\n\tprivate _allVisibleChecked(\n\t\telements: QuickPickItemElement[],\n\t\twhenNoneVisible = true,\n\t) {\n\t\tfor (let i = 0, n = elements.length; i < n; i++) {\n\t\t\tconst element = elements[i];\n\t\t\tif (!element.hidden) {\n\t\t\t\tif (element.checked) {\n\t\t\t\t\twhenNoneVisible = true;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn whenNoneVisible;\n\t}\n\n\tprivate _updateCheckedObservables() {\n\t\ttransaction((tx) => {\n\t\t\tthis._allVisibleCheckedObservable.set(\n\t\t\t\tthis._allVisibleChecked(this._itemElements, false),\n\t\t\t\ttx,\n\t\t\t);\n\t\t\tconst checkedCount = this._itemElements.filter(\n\t\t\t\t(element) => element.checked,\n\t\t\t).length;\n\t\t\tthis._checkedCountObservable.set(checkedCount, tx);\n\t\t\tthis._checkedElementsObservable.set(this.getCheckedElements(), tx);\n\t\t});\n\t}\n\n\t/**\n\t * Disposes of the hover and shows a new one for the given index if it has a tooltip.\n\t * @param element The element to show the hover for\n\t */\n\tprivate showHover(element: QuickPickItemElement): void {\n\t\tif (this._lastHover && !this._lastHover.isDisposed) {\n\t\t\tthis.hoverDelegate.onDidHideHover?.();\n\t\t\tthis._lastHover?.dispose();\n\t\t}\n\n\t\tif (!element.element || !element.saneTooltip) {\n\t\t\treturn;\n\t\t}\n\t\tthis._lastHover = this.hoverDelegate.showHover(\n\t\t\t{\n\t\t\t\tcontent: element.saneTooltip,\n\t\t\t\ttarget: element.element,\n\t\t\t\tlinkHandler: (url) => {\n\t\t\t\t\tthis.linkOpenerDelegate(url);\n\t\t\t\t},\n\t\t\t\tappearance: {\n\t\t\t\t\tshowPointer: true,\n\t\t\t\t},\n\t\t\t\tcontainer: this._container,\n\t\t\t\tposition: {\n\t\t\t\t\thoverPosition: HoverPosition.RIGHT,\n\t\t\t\t},\n\t\t\t},\n\t\t\tfalse,\n\t\t);\n\t}\n}\n\nfunction matchesContiguousIconAware(\n\tquery: string,\n\ttarget: IParsedLabelWithIcons,\n): IMatch[] | null {\n\tconst { text, iconOffsets } = target;\n\n\t// Return early if there are no icon markers in the word to match against\n\tif (!iconOffsets || iconOffsets.length === 0) {\n\t\treturn matchesContiguous(query, text);\n\t}\n\n\t// Trim the word to match against because it could have leading\n\t// whitespace now if the word started with an icon\n\tconst wordToMatchAgainstWithoutIconsTrimmed = ltrim(text, \" \");\n\tconst leadingWhitespaceOffset =\n\t\ttext.length - wordToMatchAgainstWithoutIconsTrimmed.length;\n\n\t// match on value without icon\n\tconst matches = matchesContiguous(\n\t\tquery,\n\t\twordToMatchAgainstWithoutIconsTrimmed,\n\t);\n\n\t// Map matches back to offsets with icon and trimming\n\tif (matches) {\n\t\tfor (const match of matches) {\n\t\t\tconst iconOffset =\n\t\t\t\ticonOffsets[\n\t\t\t\t\tmatch.start + leadingWhitespaceOffset\n\t\t\t\t] /* icon offsets at index */ +\n\t\t\t\tleadingWhitespaceOffset /* overall leading whitespace offset */;\n\t\t\tmatch.start += iconOffset;\n\t\t\tmatch.end += iconOffset;\n\t\t}\n\t}\n\n\treturn matches;\n}\n\nfunction matchesContiguous(\n\tword: string,\n\twordToMatchAgainst: string,\n): IMatch[] | null {\n\tconst matchIndex = wordToMatchAgainst\n\t\t.toLowerCase()\n\t\t.indexOf(word.toLowerCase());\n\tif (matchIndex !== -1) {\n\t\treturn [{ start: matchIndex, end: matchIndex + word.length }];\n\t}\n\treturn null;\n}\n\nfunction compareEntries(\n\telementA: IQuickPickElement,\n\telementB: IQuickPickElement,\n\tlookFor: string,\n): number {\n\tconst labelHighlightsA = elementA.labelHighlights || [];\n\tconst labelHighlightsB = elementB.labelHighlights || [];\n\tif (labelHighlightsA.length && !labelHighlightsB.length) {\n\t\treturn -1;\n\t}\n\n\tif (!labelHighlightsA.length && labelHighlightsB.length) {\n\t\treturn 1;\n\t}\n\n\tif (labelHighlightsA.length === 0 && labelHighlightsB.length === 0) {\n\t\treturn 0;\n\t}\n\n\treturn compareAnything(\n\t\telementA.saneSortLabel,\n\t\telementB.saneSortLabel,\n\t\tlookFor,\n\t);\n}\n"],
  "mappings": "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",
  "names": ["QuickPickSeparatorFocusReason", "index", "e"]
}
