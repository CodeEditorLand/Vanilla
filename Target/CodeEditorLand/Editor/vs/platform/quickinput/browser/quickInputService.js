var y=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var l=(u,n,e,t)=>{for(var i=t>1?void 0:t?m(n,e):n,r=u.length-1,o;r>=0;r--)(o=u[r])&&(i=(t?o(n,e,i):o(i))||i);return t&&i&&y(n,e,i),i},s=(u,n)=>(e,t)=>n(e,t,u);import{getWindow as p}from"../../../../vs/base/browser/dom.js";import{CancellationToken as k}from"../../../../vs/base/common/cancellation.js";import{Emitter as I}from"../../../../vs/base/common/event.js";import{IConfigurationService as S}from"../../../../vs/platform/configuration/common/configuration.js";import{IContextKeyService as C,RawContextKey as Q}from"../../../../vs/platform/contextkey/common/contextkey.js";import{IInstantiationService as x}from"../../../../vs/platform/instantiation/common/instantiation.js";import{ILayoutService as B}from"../../../../vs/platform/layout/browser/layoutService.js";import{IOpenerService as P}from"../../../../vs/platform/opener/common/opener.js";import{QuickAccessController as _}from"../../../../vs/platform/quickinput/browser/quickAccess.js";import{QuickInputController as T}from"../../../../vs/platform/quickinput/browser/quickInputController.js";import"../../../../vs/platform/quickinput/common/quickAccess.js";import"../../../../vs/platform/quickinput/common/quickInput.js";import{defaultButtonStyles as b,defaultCountBadgeStyles as F,defaultInputBoxStyles as w,defaultKeybindingLabelStyles as K,defaultProgressBarStyles as O,defaultToggleStyles as q,getListStyles as A}from"../../../../vs/platform/theme/browser/defaultStyles.js";import{activeContrastBorder as d,asCssVariable as c,pickerGroupBorder as L,pickerGroupForeground as H,quickInputBackground as g,quickInputForeground as D,quickInputListFocusBackground as f,quickInputListFocusForeground as v,quickInputListFocusIconForeground as G,quickInputTitleBackground as W,widgetBorder as M,widgetShadow as N}from"../../../../vs/platform/theme/common/colorRegistry.js";import{IThemeService as E,Themable as V}from"../../../../vs/platform/theme/common/themeService.js";import{QuickInputHoverDelegate as R}from"./quickInput.js";let a=class extends V{constructor(e,t,i,r,o){super(i);this.instantiationService=e;this.contextKeyService=t;this.layoutService=r;this.configurationService=o}get backButton(){return this.controller.backButton}_onShow=this._register(new I);onShow=this._onShow.event;_onHide=this._register(new I);onHide=this._onHide.event;_controller;get controller(){return this._controller||(this._controller=this._register(this.createController())),this._controller}get hasController(){return!!this._controller}get currentQuickInput(){return this.controller.currentQuickInput}_quickAccess;get quickAccess(){return this._quickAccess||(this._quickAccess=this._register(this.instantiationService.createInstance(_))),this._quickAccess}contexts=new Map;createController(e=this.layoutService,t){const i={idPrefix:"quickInput_",container:e.activeContainer,ignoreFocusOut:()=>!1,backKeybindingLabel:()=>{},setContextKey:o=>this.setContextKey(o),linkOpenerDelegate:o=>{this.instantiationService.invokeFunction(h=>{h.get(P).open(o,{allowCommands:!0,fromUserGesture:!0})})},returnFocus:()=>e.focus(),styles:this.computeStyles(),hoverDelegate:this._register(this.instantiationService.createInstance(R))},r=this._register(this.instantiationService.createInstance(T,{...i,...t}));return r.layout(e.activeContainerDimension,e.activeContainerOffset.quickPickTop),this._register(e.onDidLayoutActiveContainer(o=>{p(e.activeContainer)===p(r.container)&&r.layout(o,e.activeContainerOffset.quickPickTop)})),this._register(e.onDidChangeActiveContainer(()=>{r.isVisible()||r.layout(e.activeContainerDimension,e.activeContainerOffset.quickPickTop)})),this._register(r.onShow(()=>{this.resetContextKeys(),this._onShow.fire()})),this._register(r.onHide(()=>{this.resetContextKeys(),this._onHide.fire()})),r}setContextKey(e){let t;e&&(t=this.contexts.get(e),t||(t=new Q(e,!1).bindTo(this.contextKeyService),this.contexts.set(e,t))),!(t&&t.get())&&(this.resetContextKeys(),t?.set(!0))}resetContextKeys(){this.contexts.forEach(e=>{e.get()&&e.reset()})}pick(e,t,i=k.None){return this.controller.pick(e,t,i)}input(e={},t=k.None){return this.controller.input(e,t)}createQuickPick(e={useSeparators:!1}){return this.controller.createQuickPick(e)}createInputBox(){return this.controller.createInputBox()}createQuickWidget(){return this.controller.createQuickWidget()}focus(){this.controller.focus()}toggle(){this.controller.toggle()}navigate(e,t){this.controller.navigate(e,t)}accept(e){return this.controller.accept(e)}back(){return this.controller.back()}cancel(){return this.controller.cancel()}updateStyles(){this.hasController&&this.controller.applyStyles(this.computeStyles())}computeStyles(){return{widget:{quickInputBackground:c(g),quickInputForeground:c(D),quickInputTitleBackground:c(W),widgetBorder:c(M),widgetShadow:c(N)},inputBox:w,toggle:q,countBadge:F,button:b,progressBar:O,keybindingLabel:K,list:A({listBackground:g,listFocusBackground:f,listFocusForeground:v,listInactiveFocusForeground:v,listInactiveSelectionIconForeground:G,listInactiveFocusBackground:f,listFocusOutline:d,listInactiveFocusOutline:d}),pickerGroup:{pickerGroupBorder:c(L),pickerGroupForeground:c(H)}}}};a=l([s(0,x),s(1,C),s(2,E),s(3,B),s(4,S)],a);export{a as QuickInputService};
