{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/quickinput/browser/quickInputUtils.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from \"../../../base/browser/dom.js\";\nimport { DomEmitter } from \"../../../base/browser/event.js\";\nimport { StandardKeyboardEvent } from \"../../../base/browser/keyboardEvent.js\";\nimport {\n\tGesture,\n\tEventType as GestureEventType,\n} from \"../../../base/browser/touch.js\";\nimport { renderLabelWithIcons } from \"../../../base/browser/ui/iconLabel/iconLabels.js\";\nimport { Event } from \"../../../base/common/event.js\";\nimport { IdGenerator } from \"../../../base/common/idGenerator.js\";\nimport { KeyCode } from \"../../../base/common/keyCodes.js\";\nimport { parseLinkedText } from \"../../../base/common/linkedText.js\";\nimport type { URI } from \"../../../base/common/uri.js\";\nimport \"./media/quickInput.css\";\nimport type { IAction } from \"../../../base/common/actions.js\";\nimport type { DisposableStore } from \"../../../base/common/lifecycle.js\";\nimport { localize } from \"../../../nls.js\";\nimport type { IQuickInputButton } from \"../common/quickInput.js\";\n\nconst iconPathToClass: Record<string, string> = {};\nconst iconClassGenerator = new IdGenerator(\"quick-input-button-icon-\");\n\nfunction getIconClass(\n\ticonPath: { dark: URI; light?: URI } | undefined,\n): string | undefined {\n\tif (!iconPath) {\n\t\treturn undefined;\n\t}\n\tlet iconClass: string;\n\n\tconst key = iconPath.dark.toString();\n\tif (iconPathToClass[key]) {\n\t\ticonClass = iconPathToClass[key];\n\t} else {\n\t\ticonClass = iconClassGenerator.nextId();\n\t\tdom.createCSSRule(\n\t\t\t`.${iconClass}, .hc-light .${iconClass}`,\n\t\t\t`background-image: ${dom.asCSSUrl(iconPath.light || iconPath.dark)}`,\n\t\t);\n\t\tdom.createCSSRule(\n\t\t\t`.vs-dark .${iconClass}, .hc-black .${iconClass}`,\n\t\t\t`background-image: ${dom.asCSSUrl(iconPath.dark)}`,\n\t\t);\n\t\ticonPathToClass[key] = iconClass;\n\t}\n\n\treturn iconClass;\n}\n\nexport function quickInputButtonToAction(\n\tbutton: IQuickInputButton,\n\tid: string,\n\trun: () => unknown,\n): IAction {\n\tlet cssClasses = button.iconClass || getIconClass(button.iconPath);\n\tif (button.alwaysVisible) {\n\t\tcssClasses = cssClasses\n\t\t\t? `${cssClasses} always-visible`\n\t\t\t: \"always-visible\";\n\t}\n\n\treturn {\n\t\tid,\n\t\tlabel: \"\",\n\t\ttooltip: button.tooltip || \"\",\n\t\tclass: cssClasses,\n\t\tenabled: true,\n\t\trun,\n\t};\n}\n\nexport function renderQuickInputDescription(\n\tdescription: string,\n\tcontainer: HTMLElement,\n\tactionHandler: {\n\t\tcallback: (content: string) => void;\n\t\tdisposables: DisposableStore;\n\t},\n) {\n\tdom.reset(container);\n\tconst parsed = parseLinkedText(description);\n\tlet tabIndex = 0;\n\tfor (const node of parsed.nodes) {\n\t\tif (typeof node === \"string\") {\n\t\t\tcontainer.append(...renderLabelWithIcons(node));\n\t\t} else {\n\t\t\tlet title = node.title;\n\n\t\t\tif (!title && node.href.startsWith(\"command:\")) {\n\t\t\t\ttitle = localize(\n\t\t\t\t\t\"executeCommand\",\n\t\t\t\t\t\"Click to execute command '{0}'\",\n\t\t\t\t\tnode.href.substring(\"command:\".length),\n\t\t\t\t);\n\t\t\t} else if (!title) {\n\t\t\t\ttitle = node.href;\n\t\t\t}\n\n\t\t\tconst anchor = dom.$(\n\t\t\t\t\"a\",\n\t\t\t\t{ href: node.href, title, tabIndex: tabIndex++ },\n\t\t\t\tnode.label,\n\t\t\t);\n\t\t\tanchor.style.textDecoration = \"underline\";\n\t\t\tconst handleOpen = (e: unknown) => {\n\t\t\t\tif (dom.isEventLike(e)) {\n\t\t\t\t\tdom.EventHelper.stop(e, true);\n\t\t\t\t}\n\n\t\t\t\tactionHandler.callback(node.href);\n\t\t\t};\n\n\t\t\tconst onClick = actionHandler.disposables.add(\n\t\t\t\tnew DomEmitter(anchor, dom.EventType.CLICK),\n\t\t\t).event;\n\t\t\tconst onKeydown = actionHandler.disposables.add(\n\t\t\t\tnew DomEmitter(anchor, dom.EventType.KEY_DOWN),\n\t\t\t).event;\n\t\t\tconst onSpaceOrEnter = Event.chain(onKeydown, ($) =>\n\t\t\t\t$.filter((e) => {\n\t\t\t\t\tconst event = new StandardKeyboardEvent(e);\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\tevent.equals(KeyCode.Space) ||\n\t\t\t\t\t\tevent.equals(KeyCode.Enter)\n\t\t\t\t\t);\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tactionHandler.disposables.add(Gesture.addTarget(anchor));\n\t\t\tconst onTap = actionHandler.disposables.add(\n\t\t\t\tnew DomEmitter(anchor, GestureEventType.Tap),\n\t\t\t).event;\n\n\t\t\tEvent.any(onClick, onTap, onSpaceOrEnter)(\n\t\t\t\thandleOpen,\n\t\t\t\tnull,\n\t\t\t\tactionHandler.disposables,\n\t\t\t);\n\t\t\tcontainer.appendChild(anchor);\n\t\t}\n\t}\n}\n"],
  "mappings": ";;AAKA,YAAY,SAAS;AACrB,SAAS,kBAAkB;AAC3B,SAAS,6BAA6B;AACtC;AAAA,EACC;AAAA,EACA,aAAa;AAAA,OACP;AACP,SAAS,4BAA4B;AACrC,SAAS,aAAa;AACtB,SAAS,mBAAmB;AAC5B,SAAS,eAAe;AACxB,SAAS,uBAAuB;AAEhC,OAAO;AAGP,SAAS,gBAAgB;AAGzB,MAAM,kBAA0C,CAAC;AACjD,MAAM,qBAAqB,IAAI,YAAY,0BAA0B;AAErE,SAAS,aACR,UACqB;AACrB,MAAI,CAAC,UAAU;AACd,WAAO;AAAA,EACR;AACA,MAAI;AAEJ,QAAM,MAAM,SAAS,KAAK,SAAS;AACnC,MAAI,gBAAgB,GAAG,GAAG;AACzB,gBAAY,gBAAgB,GAAG;AAAA,EAChC,OAAO;AACN,gBAAY,mBAAmB,OAAO;AACtC,QAAI;AAAA,MACH,IAAI,SAAS,gBAAgB,SAAS;AAAA,MACtC,qBAAqB,IAAI,SAAS,SAAS,SAAS,SAAS,IAAI,CAAC;AAAA,IACnE;AACA,QAAI;AAAA,MACH,aAAa,SAAS,gBAAgB,SAAS;AAAA,MAC/C,qBAAqB,IAAI,SAAS,SAAS,IAAI,CAAC;AAAA,IACjD;AACA,oBAAgB,GAAG,IAAI;AAAA,EACxB;AAEA,SAAO;AACR;AAzBS;AA2BF,SAAS,yBACf,QACA,IACA,KACU;AACV,MAAI,aAAa,OAAO,aAAa,aAAa,OAAO,QAAQ;AACjE,MAAI,OAAO,eAAe;AACzB,iBAAa,aACV,GAAG,UAAU,oBACb;AAAA,EACJ;AAEA,SAAO;AAAA,IACN;AAAA,IACA,OAAO;AAAA,IACP,SAAS,OAAO,WAAW;AAAA,IAC3B,OAAO;AAAA,IACP,SAAS;AAAA,IACT;AAAA,EACD;AACD;AApBgB;AAsBT,SAAS,4BACf,aACA,WACA,eAIC;AACD,MAAI,MAAM,SAAS;AACnB,QAAM,SAAS,gBAAgB,WAAW;AAC1C,MAAI,WAAW;AACf,aAAW,QAAQ,OAAO,OAAO;AAChC,QAAI,OAAO,SAAS,UAAU;AAC7B,gBAAU,OAAO,GAAG,qBAAqB,IAAI,CAAC;AAAA,IAC/C,OAAO;AACN,UAAI,QAAQ,KAAK;AAEjB,UAAI,CAAC,SAAS,KAAK,KAAK,WAAW,UAAU,GAAG;AAC/C,gBAAQ;AAAA,UACP;AAAA,UACA;AAAA,UACA,KAAK,KAAK,UAAU,WAAW,MAAM;AAAA,QACtC;AAAA,MACD,WAAW,CAAC,OAAO;AAClB,gBAAQ,KAAK;AAAA,MACd;AAEA,YAAM,SAAS,IAAI;AAAA,QAClB;AAAA,QACA,EAAE,MAAM,KAAK,MAAM,OAAO,UAAU,WAAW;AAAA,QAC/C,KAAK;AAAA,MACN;AACA,aAAO,MAAM,iBAAiB;AAC9B,YAAM,aAAa,wBAAC,MAAe;AAClC,YAAI,IAAI,YAAY,CAAC,GAAG;AACvB,cAAI,YAAY,KAAK,GAAG,IAAI;AAAA,QAC7B;AAEA,sBAAc,SAAS,KAAK,IAAI;AAAA,MACjC,GANmB;AAQnB,YAAM,UAAU,cAAc,YAAY;AAAA,QACzC,IAAI,WAAW,QAAQ,IAAI,UAAU,KAAK;AAAA,MAC3C,EAAE;AACF,YAAM,YAAY,cAAc,YAAY;AAAA,QAC3C,IAAI,WAAW,QAAQ,IAAI,UAAU,QAAQ;AAAA,MAC9C,EAAE;AACF,YAAM,iBAAiB,MAAM;AAAA,QAAM;AAAA,QAAW,CAAC,MAC9C,EAAE,OAAO,CAAC,MAAM;AACf,gBAAM,QAAQ,IAAI,sBAAsB,CAAC;AAEzC,iBACC,MAAM,OAAO,QAAQ,KAAK,KAC1B,MAAM,OAAO,QAAQ,KAAK;AAAA,QAE5B,CAAC;AAAA,MACF;AAEA,oBAAc,YAAY,IAAI,QAAQ,UAAU,MAAM,CAAC;AACvD,YAAM,QAAQ,cAAc,YAAY;AAAA,QACvC,IAAI,WAAW,QAAQ,iBAAiB,GAAG;AAAA,MAC5C,EAAE;AAEF,YAAM,IAAI,SAAS,OAAO,cAAc;AAAA,QACvC;AAAA,QACA;AAAA,QACA,cAAc;AAAA,MACf;AACA,gBAAU,YAAY,MAAM;AAAA,IAC7B;AAAA,EACD;AACD;AAvEgB;",
  "names": []
}
