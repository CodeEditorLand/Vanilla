{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/actions/common/actions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IAction, SubmenuAction } from '../../../base/common/actions.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { Event, MicrotaskEmitter } from '../../../base/common/event.js';\nimport { DisposableStore, dispose, IDisposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { ICommandAction, ICommandActionTitle, Icon, ILocalizedString } from '../../action/common/action.js';\nimport { Categories } from '../../action/common/actionCommonCategories.js';\nimport { CommandsRegistry, ICommandService } from '../../commands/common/commands.js';\nimport { ContextKeyExpr, ContextKeyExpression, IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { createDecorator, ServicesAccessor } from '../../instantiation/common/instantiation.js';\nimport { IKeybindingRule, KeybindingsRegistry } from '../../keybinding/common/keybindingsRegistry.js';\n\nexport interface IMenuItem {\n\tcommand: ICommandAction;\n\talt?: ICommandAction;\n\t/**\n\t * Menu item is hidden if this expression returns false.\n\t */\n\twhen?: ContextKeyExpression;\n\tgroup?: 'navigation' | string;\n\torder?: number;\n\tisHiddenByDefault?: boolean;\n}\n\nexport interface ISubmenuItem {\n\ttitle: string | ICommandActionTitle;\n\tsubmenu: MenuId;\n\ticon?: Icon;\n\twhen?: ContextKeyExpression;\n\tgroup?: 'navigation' | string;\n\torder?: number;\n\tisSelection?: boolean;\n\trememberDefaultAction?: boolean;\t// for dropdown menu: if true the last executed action is remembered as the default action\n}\n\nexport function isIMenuItem(item: any): item is IMenuItem {\n\treturn (item as IMenuItem).command !== undefined;\n}\n\nexport function isISubmenuItem(item: any): item is ISubmenuItem {\n\treturn (item as ISubmenuItem).submenu !== undefined;\n}\n\nexport class MenuId {\n\n\tprivate static readonly _instances = new Map<string, MenuId>();\n\n\tstatic readonly CommandPalette = new MenuId('CommandPalette');\n\tstatic readonly DebugBreakpointsContext = new MenuId('DebugBreakpointsContext');\n\tstatic readonly DebugCallStackContext = new MenuId('DebugCallStackContext');\n\tstatic readonly DebugConsoleContext = new MenuId('DebugConsoleContext');\n\tstatic readonly DebugVariablesContext = new MenuId('DebugVariablesContext');\n\tstatic readonly NotebookVariablesContext = new MenuId('NotebookVariablesContext');\n\tstatic readonly DebugHoverContext = new MenuId('DebugHoverContext');\n\tstatic readonly DebugWatchContext = new MenuId('DebugWatchContext');\n\tstatic readonly DebugToolBar = new MenuId('DebugToolBar');\n\tstatic readonly DebugToolBarStop = new MenuId('DebugToolBarStop');\n\tstatic readonly DebugCallStackToolbar = new MenuId('DebugCallStackToolbar');\n\tstatic readonly DebugCreateConfiguration = new MenuId('DebugCreateConfiguration');\n\tstatic readonly EditorContext = new MenuId('EditorContext');\n\tstatic readonly SimpleEditorContext = new MenuId('SimpleEditorContext');\n\tstatic readonly EditorContent = new MenuId('EditorContent');\n\tstatic readonly EditorLineNumberContext = new MenuId('EditorLineNumberContext');\n\tstatic readonly EditorContextCopy = new MenuId('EditorContextCopy');\n\tstatic readonly EditorContextPeek = new MenuId('EditorContextPeek');\n\tstatic readonly EditorContextShare = new MenuId('EditorContextShare');\n\tstatic readonly EditorTitle = new MenuId('EditorTitle');\n\tstatic readonly EditorTitleRun = new MenuId('EditorTitleRun');\n\tstatic readonly EditorTitleContext = new MenuId('EditorTitleContext');\n\tstatic readonly EditorTitleContextShare = new MenuId('EditorTitleContextShare');\n\tstatic readonly EmptyEditorGroup = new MenuId('EmptyEditorGroup');\n\tstatic readonly EmptyEditorGroupContext = new MenuId('EmptyEditorGroupContext');\n\tstatic readonly EditorTabsBarContext = new MenuId('EditorTabsBarContext');\n\tstatic readonly EditorTabsBarShowTabsSubmenu = new MenuId('EditorTabsBarShowTabsSubmenu');\n\tstatic readonly EditorTabsBarShowTabsZenModeSubmenu = new MenuId('EditorTabsBarShowTabsZenModeSubmenu');\n\tstatic readonly EditorActionsPositionSubmenu = new MenuId('EditorActionsPositionSubmenu');\n\tstatic readonly ExplorerContext = new MenuId('ExplorerContext');\n\tstatic readonly ExplorerContextShare = new MenuId('ExplorerContextShare');\n\tstatic readonly ExtensionContext = new MenuId('ExtensionContext');\n\tstatic readonly ExtensionEditorContextMenu = new MenuId('ExtensionEditorContextMenu');\n\tstatic readonly GlobalActivity = new MenuId('GlobalActivity');\n\tstatic readonly CommandCenter = new MenuId('CommandCenter');\n\tstatic readonly CommandCenterCenter = new MenuId('CommandCenterCenter');\n\tstatic readonly LayoutControlMenuSubmenu = new MenuId('LayoutControlMenuSubmenu');\n\tstatic readonly LayoutControlMenu = new MenuId('LayoutControlMenu');\n\tstatic readonly MenubarMainMenu = new MenuId('MenubarMainMenu');\n\tstatic readonly MenubarAppearanceMenu = new MenuId('MenubarAppearanceMenu');\n\tstatic readonly MenubarDebugMenu = new MenuId('MenubarDebugMenu');\n\tstatic readonly MenubarEditMenu = new MenuId('MenubarEditMenu');\n\tstatic readonly MenubarCopy = new MenuId('MenubarCopy');\n\tstatic readonly MenubarFileMenu = new MenuId('MenubarFileMenu');\n\tstatic readonly MenubarGoMenu = new MenuId('MenubarGoMenu');\n\tstatic readonly MenubarHelpMenu = new MenuId('MenubarHelpMenu');\n\tstatic readonly MenubarLayoutMenu = new MenuId('MenubarLayoutMenu');\n\tstatic readonly MenubarNewBreakpointMenu = new MenuId('MenubarNewBreakpointMenu');\n\tstatic readonly PanelAlignmentMenu = new MenuId('PanelAlignmentMenu');\n\tstatic readonly PanelPositionMenu = new MenuId('PanelPositionMenu');\n\tstatic readonly ActivityBarPositionMenu = new MenuId('ActivityBarPositionMenu');\n\tstatic readonly MenubarPreferencesMenu = new MenuId('MenubarPreferencesMenu');\n\tstatic readonly MenubarRecentMenu = new MenuId('MenubarRecentMenu');\n\tstatic readonly MenubarSelectionMenu = new MenuId('MenubarSelectionMenu');\n\tstatic readonly MenubarShare = new MenuId('MenubarShare');\n\tstatic readonly MenubarSwitchEditorMenu = new MenuId('MenubarSwitchEditorMenu');\n\tstatic readonly MenubarSwitchGroupMenu = new MenuId('MenubarSwitchGroupMenu');\n\tstatic readonly MenubarTerminalMenu = new MenuId('MenubarTerminalMenu');\n\tstatic readonly MenubarViewMenu = new MenuId('MenubarViewMenu');\n\tstatic readonly MenubarHomeMenu = new MenuId('MenubarHomeMenu');\n\tstatic readonly OpenEditorsContext = new MenuId('OpenEditorsContext');\n\tstatic readonly OpenEditorsContextShare = new MenuId('OpenEditorsContextShare');\n\tstatic readonly ProblemsPanelContext = new MenuId('ProblemsPanelContext');\n\tstatic readonly SCMInputBox = new MenuId('SCMInputBox');\n\tstatic readonly SCMChangesContext = new MenuId('SCMChangesContext');\n\tstatic readonly SCMChangeContext = new MenuId('SCMChangeContext');\n\tstatic readonly SCMResourceContext = new MenuId('SCMResourceContext');\n\tstatic readonly SCMResourceContextShare = new MenuId('SCMResourceContextShare');\n\tstatic readonly SCMResourceFolderContext = new MenuId('SCMResourceFolderContext');\n\tstatic readonly SCMResourceGroupContext = new MenuId('SCMResourceGroupContext');\n\tstatic readonly SCMSourceControl = new MenuId('SCMSourceControl');\n\tstatic readonly SCMSourceControlInline = new MenuId('SCMSourceControlInline');\n\tstatic readonly SCMSourceControlTitle = new MenuId('SCMSourceControlTitle');\n\tstatic readonly SCMHistoryTitle = new MenuId('SCMHistoryTitle');\n\tstatic readonly SCMTitle = new MenuId('SCMTitle');\n\tstatic readonly SearchContext = new MenuId('SearchContext');\n\tstatic readonly SearchActionMenu = new MenuId('SearchActionContext');\n\tstatic readonly StatusBarWindowIndicatorMenu = new MenuId('StatusBarWindowIndicatorMenu');\n\tstatic readonly StatusBarRemoteIndicatorMenu = new MenuId('StatusBarRemoteIndicatorMenu');\n\tstatic readonly StickyScrollContext = new MenuId('StickyScrollContext');\n\tstatic readonly TestItem = new MenuId('TestItem');\n\tstatic readonly TestItemGutter = new MenuId('TestItemGutter');\n\tstatic readonly TestProfilesContext = new MenuId('TestProfilesContext');\n\tstatic readonly TestMessageContext = new MenuId('TestMessageContext');\n\tstatic readonly TestMessageContent = new MenuId('TestMessageContent');\n\tstatic readonly TestPeekElement = new MenuId('TestPeekElement');\n\tstatic readonly TestPeekTitle = new MenuId('TestPeekTitle');\n\tstatic readonly TestCallStack = new MenuId('TestCallStack');\n\tstatic readonly TouchBarContext = new MenuId('TouchBarContext');\n\tstatic readonly TitleBarContext = new MenuId('TitleBarContext');\n\tstatic readonly TitleBarTitleContext = new MenuId('TitleBarTitleContext');\n\tstatic readonly TunnelContext = new MenuId('TunnelContext');\n\tstatic readonly TunnelPrivacy = new MenuId('TunnelPrivacy');\n\tstatic readonly TunnelProtocol = new MenuId('TunnelProtocol');\n\tstatic readonly TunnelPortInline = new MenuId('TunnelInline');\n\tstatic readonly TunnelTitle = new MenuId('TunnelTitle');\n\tstatic readonly TunnelLocalAddressInline = new MenuId('TunnelLocalAddressInline');\n\tstatic readonly TunnelOriginInline = new MenuId('TunnelOriginInline');\n\tstatic readonly ViewItemContext = new MenuId('ViewItemContext');\n\tstatic readonly ViewContainerTitle = new MenuId('ViewContainerTitle');\n\tstatic readonly ViewContainerTitleContext = new MenuId('ViewContainerTitleContext');\n\tstatic readonly ViewTitle = new MenuId('ViewTitle');\n\tstatic readonly ViewTitleContext = new MenuId('ViewTitleContext');\n\tstatic readonly CommentEditorActions = new MenuId('CommentEditorActions');\n\tstatic readonly CommentThreadTitle = new MenuId('CommentThreadTitle');\n\tstatic readonly CommentThreadActions = new MenuId('CommentThreadActions');\n\tstatic readonly CommentThreadAdditionalActions = new MenuId('CommentThreadAdditionalActions');\n\tstatic readonly CommentThreadTitleContext = new MenuId('CommentThreadTitleContext');\n\tstatic readonly CommentThreadCommentContext = new MenuId('CommentThreadCommentContext');\n\tstatic readonly CommentTitle = new MenuId('CommentTitle');\n\tstatic readonly CommentActions = new MenuId('CommentActions');\n\tstatic readonly CommentsViewThreadActions = new MenuId('CommentsViewThreadActions');\n\tstatic readonly InteractiveToolbar = new MenuId('InteractiveToolbar');\n\tstatic readonly InteractiveCellTitle = new MenuId('InteractiveCellTitle');\n\tstatic readonly InteractiveCellDelete = new MenuId('InteractiveCellDelete');\n\tstatic readonly InteractiveCellExecute = new MenuId('InteractiveCellExecute');\n\tstatic readonly InteractiveInputExecute = new MenuId('InteractiveInputExecute');\n\tstatic readonly InteractiveInputConfig = new MenuId('InteractiveInputConfig');\n\tstatic readonly ReplInputExecute = new MenuId('ReplInputExecute');\n\tstatic readonly IssueReporter = new MenuId('IssueReporter');\n\tstatic readonly NotebookToolbar = new MenuId('NotebookToolbar');\n\tstatic readonly NotebookStickyScrollContext = new MenuId('NotebookStickyScrollContext');\n\tstatic readonly NotebookCellTitle = new MenuId('NotebookCellTitle');\n\tstatic readonly NotebookCellDelete = new MenuId('NotebookCellDelete');\n\tstatic readonly NotebookCellInsert = new MenuId('NotebookCellInsert');\n\tstatic readonly NotebookCellBetween = new MenuId('NotebookCellBetween');\n\tstatic readonly NotebookCellListTop = new MenuId('NotebookCellTop');\n\tstatic readonly NotebookCellExecute = new MenuId('NotebookCellExecute');\n\tstatic readonly NotebookCellExecuteGoTo = new MenuId('NotebookCellExecuteGoTo');\n\tstatic readonly NotebookCellExecutePrimary = new MenuId('NotebookCellExecutePrimary');\n\tstatic readonly NotebookDiffCellInputTitle = new MenuId('NotebookDiffCellInputTitle');\n\tstatic readonly NotebookDiffCellMetadataTitle = new MenuId('NotebookDiffCellMetadataTitle');\n\tstatic readonly NotebookDiffCellOutputsTitle = new MenuId('NotebookDiffCellOutputsTitle');\n\tstatic readonly NotebookOutputToolbar = new MenuId('NotebookOutputToolbar');\n\tstatic readonly NotebookOutlineFilter = new MenuId('NotebookOutlineFilter');\n\tstatic readonly NotebookOutlineActionMenu = new MenuId('NotebookOutlineActionMenu');\n\tstatic readonly NotebookEditorLayoutConfigure = new MenuId('NotebookEditorLayoutConfigure');\n\tstatic readonly NotebookKernelSource = new MenuId('NotebookKernelSource');\n\tstatic readonly BulkEditTitle = new MenuId('BulkEditTitle');\n\tstatic readonly BulkEditContext = new MenuId('BulkEditContext');\n\tstatic readonly TimelineItemContext = new MenuId('TimelineItemContext');\n\tstatic readonly TimelineTitle = new MenuId('TimelineTitle');\n\tstatic readonly TimelineTitleContext = new MenuId('TimelineTitleContext');\n\tstatic readonly TimelineFilterSubMenu = new MenuId('TimelineFilterSubMenu');\n\tstatic readonly AccountsContext = new MenuId('AccountsContext');\n\tstatic readonly SidebarTitle = new MenuId('SidebarTitle');\n\tstatic readonly PanelTitle = new MenuId('PanelTitle');\n\tstatic readonly AuxiliaryBarTitle = new MenuId('AuxiliaryBarTitle');\n\tstatic readonly AuxiliaryBarHeader = new MenuId('AuxiliaryBarHeader');\n\tstatic readonly TerminalInstanceContext = new MenuId('TerminalInstanceContext');\n\tstatic readonly TerminalEditorInstanceContext = new MenuId('TerminalEditorInstanceContext');\n\tstatic readonly TerminalNewDropdownContext = new MenuId('TerminalNewDropdownContext');\n\tstatic readonly TerminalTabContext = new MenuId('TerminalTabContext');\n\tstatic readonly TerminalTabEmptyAreaContext = new MenuId('TerminalTabEmptyAreaContext');\n\tstatic readonly TerminalStickyScrollContext = new MenuId('TerminalStickyScrollContext');\n\tstatic readonly WebviewContext = new MenuId('WebviewContext');\n\tstatic readonly InlineCompletionsActions = new MenuId('InlineCompletionsActions');\n\tstatic readonly InlineEditsActions = new MenuId('InlineEditsActions');\n\tstatic readonly InlineEditActions = new MenuId('InlineEditActions');\n\tstatic readonly NewFile = new MenuId('NewFile');\n\tstatic readonly MergeInput1Toolbar = new MenuId('MergeToolbar1Toolbar');\n\tstatic readonly MergeInput2Toolbar = new MenuId('MergeToolbar2Toolbar');\n\tstatic readonly MergeBaseToolbar = new MenuId('MergeBaseToolbar');\n\tstatic readonly MergeInputResultToolbar = new MenuId('MergeToolbarResultToolbar');\n\tstatic readonly InlineSuggestionToolbar = new MenuId('InlineSuggestionToolbar');\n\tstatic readonly InlineEditToolbar = new MenuId('InlineEditToolbar');\n\tstatic readonly ChatContext = new MenuId('ChatContext');\n\tstatic readonly ChatCodeBlock = new MenuId('ChatCodeblock');\n\tstatic readonly ChatCompareBlock = new MenuId('ChatCompareBlock');\n\tstatic readonly ChatMessageTitle = new MenuId('ChatMessageTitle');\n\tstatic readonly ChatExecute = new MenuId('ChatExecute');\n\tstatic readonly ChatExecuteSecondary = new MenuId('ChatExecuteSecondary');\n\tstatic readonly ChatInputSide = new MenuId('ChatInputSide');\n\tstatic readonly ChatInlineResourceAnchorContext = new MenuId('ChatInlineResourceAnchorContext');\n\tstatic readonly ChatInlineSymbolAnchorContext = new MenuId('ChatInlineSymbolAnchorContext');\n\tstatic readonly AccessibleView = new MenuId('AccessibleView');\n\tstatic readonly MultiDiffEditorFileToolbar = new MenuId('MultiDiffEditorFileToolbar');\n\tstatic readonly DiffEditorHunkToolbar = new MenuId('DiffEditorHunkToolbar');\n\tstatic readonly DiffEditorSelectionToolbar = new MenuId('DiffEditorSelectionToolbar');\n\n\n\t/**\n\t * Create or reuse a `MenuId` with the given identifier\n\t */\n\tstatic for(identifier: string): MenuId {\n\t\treturn MenuId._instances.get(identifier) ?? new MenuId(identifier);\n\t}\n\n\treadonly id: string;\n\n\t/**\n\t * Create a new `MenuId` with the unique identifier. Will throw if a menu\n\t * with the identifier already exists, use `MenuId.for(ident)` or a unique\n\t * identifier\n\t */\n\tconstructor(identifier: string) {\n\t\tif (MenuId._instances.has(identifier)) {\n\t\t\tthrow new TypeError(`MenuId with identifier '${identifier}' already exists. Use MenuId.for(ident) or a unique identifier`);\n\t\t}\n\t\tMenuId._instances.set(identifier, this);\n\t\tthis.id = identifier;\n\t}\n}\n\nexport interface IMenuActionOptions {\n\targ?: any;\n\tshouldForwardArgs?: boolean;\n\trenderShortTitle?: boolean;\n}\n\nexport interface IMenuChangeEvent {\n\treadonly menu: IMenu;\n\treadonly isStructuralChange: boolean;\n\treadonly isToggleChange: boolean;\n\treadonly isEnablementChange: boolean;\n}\n\nexport interface IMenu extends IDisposable {\n\treadonly onDidChange: Event<IMenuChangeEvent>;\n\tgetActions(options?: IMenuActionOptions): [string, Array<MenuItemAction | SubmenuItemAction>][];\n}\n\nexport interface IMenuData {\n\tcontexts: ReadonlySet<string>;\n\tactions: [string, Array<MenuItemAction | SubmenuItemAction>][];\n}\n\nexport const IMenuService = createDecorator<IMenuService>('menuService');\n\nexport interface IMenuCreateOptions {\n\temitEventsForSubmenuChanges?: boolean;\n\teventDebounceDelay?: number;\n}\n\nexport interface IMenuService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Consider using getMenuActions if you don't need to listen to events.\n\t *\n\t * Create a new menu for the given menu identifier. A menu sends events when it's entries\n\t * have changed (placement, enablement, checked-state). By default it does not send events for\n\t * submenu entries. That is more expensive and must be explicitly enabled with the\n\t * `emitEventsForSubmenuChanges` flag.\n\t */\n\tcreateMenu(id: MenuId, contextKeyService: IContextKeyService, options?: IMenuCreateOptions): IMenu;\n\n\t/**\n\t * Creates a new menu, gets the actions, and then disposes of the menu.\n\t */\n\tgetMenuActions(id: MenuId, contextKeyService: IContextKeyService, options?: IMenuActionOptions): [string, Array<MenuItemAction | SubmenuItemAction>][];\n\n\t/**\n\t * Gets the names of the contexts that this menu listens on.\n\t */\n\tgetMenuContexts(id: MenuId): ReadonlySet<string>;\n\n\t/**\n\t * Reset **all** menu item hidden states.\n\t */\n\tresetHiddenStates(): void;\n\n\t/**\n\t * Reset the menu's hidden states.\n\t */\n\tresetHiddenStates(menuIds: readonly MenuId[] | undefined): void;\n}\n\ntype ICommandsMap = Map<string, ICommandAction>;\n\nexport interface IMenuRegistryChangeEvent {\n\thas(id: MenuId): boolean;\n}\n\nclass MenuRegistryChangeEvent {\n\n\tprivate static _all = new Map<MenuId, MenuRegistryChangeEvent>();\n\n\tstatic for(id: MenuId): MenuRegistryChangeEvent {\n\t\tlet value = this._all.get(id);\n\t\tif (!value) {\n\t\t\tvalue = new MenuRegistryChangeEvent(id);\n\t\t\tthis._all.set(id, value);\n\t\t}\n\t\treturn value;\n\t}\n\n\tstatic merge(events: IMenuRegistryChangeEvent[]): IMenuRegistryChangeEvent {\n\t\tconst ids = new Set<MenuId>();\n\t\tfor (const item of events) {\n\t\t\tif (item instanceof MenuRegistryChangeEvent) {\n\t\t\t\tids.add(item.id);\n\t\t\t}\n\t\t}\n\t\treturn ids;\n\t}\n\n\treadonly has: (id: MenuId) => boolean;\n\n\tprivate constructor(private readonly id: MenuId) {\n\t\tthis.has = candidate => candidate === id;\n\t}\n}\n\nexport interface IMenuRegistry {\n\treadonly onDidChangeMenu: Event<IMenuRegistryChangeEvent>;\n\taddCommand(userCommand: ICommandAction): IDisposable;\n\tgetCommand(id: string): ICommandAction | undefined;\n\tgetCommands(): ICommandsMap;\n\n\t/**\n\t * @deprecated Use `appendMenuItem` or most likely use `registerAction2` instead. There should be no strong\n\t * reason to use this directly.\n\t */\n\tappendMenuItems(items: Iterable<{ id: MenuId; item: IMenuItem | ISubmenuItem }>): IDisposable;\n\tappendMenuItem(menu: MenuId, item: IMenuItem | ISubmenuItem): IDisposable;\n\tgetMenuItems(loc: MenuId): Array<IMenuItem | ISubmenuItem>;\n}\n\nexport const MenuRegistry: IMenuRegistry = new class implements IMenuRegistry {\n\n\tprivate readonly _commands = new Map<string, ICommandAction>();\n\tprivate readonly _menuItems = new Map<MenuId, LinkedList<IMenuItem | ISubmenuItem>>();\n\tprivate readonly _onDidChangeMenu = new MicrotaskEmitter<IMenuRegistryChangeEvent>({\n\t\tmerge: MenuRegistryChangeEvent.merge\n\t});\n\n\treadonly onDidChangeMenu: Event<IMenuRegistryChangeEvent> = this._onDidChangeMenu.event;\n\n\taddCommand(command: ICommandAction): IDisposable {\n\t\tthis._commands.set(command.id, command);\n\t\tthis._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(MenuId.CommandPalette));\n\n\t\treturn toDisposable(() => {\n\t\t\tif (this._commands.delete(command.id)) {\n\t\t\t\tthis._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(MenuId.CommandPalette));\n\t\t\t}\n\t\t});\n\t}\n\n\tgetCommand(id: string): ICommandAction | undefined {\n\t\treturn this._commands.get(id);\n\t}\n\n\tgetCommands(): ICommandsMap {\n\t\tconst map = new Map<string, ICommandAction>();\n\t\tthis._commands.forEach((value, key) => map.set(key, value));\n\t\treturn map;\n\t}\n\n\tappendMenuItem(id: MenuId, item: IMenuItem | ISubmenuItem): IDisposable {\n\t\tlet list = this._menuItems.get(id);\n\t\tif (!list) {\n\t\t\tlist = new LinkedList();\n\t\t\tthis._menuItems.set(id, list);\n\t\t}\n\t\tconst rm = list.push(item);\n\t\tthis._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(id));\n\t\treturn toDisposable(() => {\n\t\t\trm();\n\t\t\tthis._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(id));\n\t\t});\n\t}\n\n\tappendMenuItems(items: Iterable<{ id: MenuId; item: IMenuItem | ISubmenuItem }>): IDisposable {\n\t\tconst result = new DisposableStore();\n\t\tfor (const { id, item } of items) {\n\t\t\tresult.add(this.appendMenuItem(id, item));\n\t\t}\n\t\treturn result;\n\t}\n\n\tgetMenuItems(id: MenuId): Array<IMenuItem | ISubmenuItem> {\n\t\tlet result: Array<IMenuItem | ISubmenuItem>;\n\t\tif (this._menuItems.has(id)) {\n\t\t\tresult = [...this._menuItems.get(id)!];\n\t\t} else {\n\t\t\tresult = [];\n\t\t}\n\t\tif (id === MenuId.CommandPalette) {\n\t\t\t// CommandPalette is special because it shows\n\t\t\t// all commands by default\n\t\t\tthis._appendImplicitItems(result);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate _appendImplicitItems(result: Array<IMenuItem | ISubmenuItem>) {\n\t\tconst set = new Set<string>();\n\n\t\tfor (const item of result) {\n\t\t\tif (isIMenuItem(item)) {\n\t\t\t\tset.add(item.command.id);\n\t\t\t\tif (item.alt) {\n\t\t\t\t\tset.add(item.alt.id);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._commands.forEach((command, id) => {\n\t\t\tif (!set.has(id)) {\n\t\t\t\tresult.push({ command });\n\t\t\t}\n\t\t});\n\t}\n};\n\nexport class SubmenuItemAction extends SubmenuAction {\n\n\tconstructor(\n\t\treadonly item: ISubmenuItem,\n\t\treadonly hideActions: IMenuItemHide | undefined,\n\t\tactions: IAction[],\n\t) {\n\t\tsuper(`submenuitem.${item.submenu.id}`, typeof item.title === 'string' ? item.title : item.title.value, actions, 'submenu');\n\t}\n}\n\nexport interface IMenuItemHide {\n\treadonly isHidden: boolean;\n\treadonly hide: IAction;\n\treadonly toggle: IAction;\n}\n\n// implements IAction, does NOT extend Action, so that no one\n// subscribes to events of Action or modified properties\nexport class MenuItemAction implements IAction {\n\n\tstatic label(action: ICommandAction, options?: IMenuActionOptions): string {\n\t\treturn options?.renderShortTitle && action.shortTitle\n\t\t\t? (typeof action.shortTitle === 'string' ? action.shortTitle : action.shortTitle.value)\n\t\t\t: (typeof action.title === 'string' ? action.title : action.title.value);\n\t}\n\n\treadonly item: ICommandAction;\n\treadonly alt: MenuItemAction | undefined;\n\n\tprivate readonly _options: IMenuActionOptions | undefined;\n\n\treadonly id: string;\n\treadonly label: string;\n\treadonly tooltip: string;\n\treadonly class: string | undefined;\n\treadonly enabled: boolean;\n\treadonly checked?: boolean;\n\n\tconstructor(\n\t\titem: ICommandAction,\n\t\talt: ICommandAction | undefined,\n\t\toptions: IMenuActionOptions | undefined,\n\t\treadonly hideActions: IMenuItemHide | undefined,\n\t\treadonly menuKeybinding: IAction | undefined,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@ICommandService private _commandService: ICommandService\n\t) {\n\t\tthis.id = item.id;\n\t\tthis.label = MenuItemAction.label(item, options);\n\t\tthis.tooltip = (typeof item.tooltip === 'string' ? item.tooltip : item.tooltip?.value) ?? '';\n\t\tthis.enabled = !item.precondition || contextKeyService.contextMatchesRules(item.precondition);\n\t\tthis.checked = undefined;\n\n\t\tlet icon: ThemeIcon | undefined;\n\n\t\tif (item.toggled) {\n\t\t\tconst toggled = ((item.toggled as { condition: ContextKeyExpression }).condition ? item.toggled : { condition: item.toggled }) as {\n\t\t\t\tcondition: ContextKeyExpression; icon?: Icon; tooltip?: string | ILocalizedString; title?: string | ILocalizedString;\n\t\t\t};\n\t\t\tthis.checked = contextKeyService.contextMatchesRules(toggled.condition);\n\t\t\tif (this.checked && toggled.tooltip) {\n\t\t\t\tthis.tooltip = typeof toggled.tooltip === 'string' ? toggled.tooltip : toggled.tooltip.value;\n\t\t\t}\n\n\t\t\tif (this.checked && ThemeIcon.isThemeIcon(toggled.icon)) {\n\t\t\t\ticon = toggled.icon;\n\t\t\t}\n\n\t\t\tif (this.checked && toggled.title) {\n\t\t\t\tthis.label = typeof toggled.title === 'string' ? toggled.title : toggled.title.value;\n\t\t\t}\n\t\t}\n\n\t\tif (!icon) {\n\t\t\ticon = ThemeIcon.isThemeIcon(item.icon) ? item.icon : undefined;\n\t\t}\n\n\t\tthis.item = item;\n\t\tthis.alt = alt ? new MenuItemAction(alt, undefined, options, hideActions, undefined, contextKeyService, _commandService) : undefined;\n\t\tthis._options = options;\n\t\tthis.class = icon && ThemeIcon.asClassName(icon);\n\n\t}\n\n\trun(...args: any[]): Promise<void> {\n\t\tlet runArgs: any[] = [];\n\n\t\tif (this._options?.arg) {\n\t\t\trunArgs = [...runArgs, this._options.arg];\n\t\t}\n\n\t\tif (this._options?.shouldForwardArgs) {\n\t\t\trunArgs = [...runArgs, ...args];\n\t\t}\n\n\t\treturn this._commandService.executeCommand(this.id, ...runArgs);\n\t}\n}\n\n//#region --- IAction2\n\ntype OneOrN<T> = T | T[];\n\ninterface IAction2CommonOptions extends ICommandAction {\n\t/**\n\t * One or many menu items.\n\t */\n\tmenu?: OneOrN<{ id: MenuId; precondition?: null } & Omit<IMenuItem, 'command'>>;\n\n\t/**\n\t * One keybinding.\n\t */\n\tkeybinding?: OneOrN<Omit<IKeybindingRule, 'id'>>;\n}\n\ninterface IBaseAction2Options extends IAction2CommonOptions {\n\n\t/**\n\t * This type is used when an action is not going to show up in the command palette.\n\t * In that case, it's able to use a string for the `title` and `category` properties.\n\t */\n\tf1?: false;\n}\n\ninterface ICommandPaletteOptions extends IAction2CommonOptions {\n\n\t/**\n\t * The title of the command that will be displayed in the command palette after the category.\n\t *  This overrides {@link ICommandAction.title} to ensure a string isn't used so that the title\n\t *  includes the localized value and the original value for users using language packs.\n\t */\n\ttitle: ICommandActionTitle;\n\n\t/**\n\t * The category of the command that will be displayed in the command palette before the title suffixed.\n\t * with a colon This overrides {@link ICommandAction.title} to ensure a string isn't used so that\n\t * the title includes the localized value and the original value for users using language packs.\n\t */\n\tcategory?: keyof typeof Categories | ILocalizedString;\n\n\t/**\n\t * Shorthand to add this command to the command palette. Note: this is not the only way to declare that\n\t * a command should be in the command palette... however, enforcing ILocalizedString in the other scenarios\n\t * is much more challenging and this gets us most of the way there.\n\t */\n\tf1: true;\n}\n\nexport type IAction2Options = ICommandPaletteOptions | IBaseAction2Options;\n\nexport interface IAction2F1RequiredOptions {\n\ttitle: ICommandActionTitle;\n\tcategory?: keyof typeof Categories | ILocalizedString;\n}\n\nexport abstract class Action2 {\n\tconstructor(readonly desc: Readonly<IAction2Options>) { }\n\tabstract run(accessor: ServicesAccessor, ...args: any[]): void;\n}\n\nexport function registerAction2(ctor: { new(): Action2 }): IDisposable {\n\tconst disposables: IDisposable[] = []; // not using `DisposableStore` to reduce startup perf cost\n\tconst action = new ctor();\n\n\tconst { f1, menu, keybinding, ...command } = action.desc;\n\n\tif (CommandsRegistry.getCommand(command.id)) {\n\t\tthrow new Error(`Cannot register two commands with the same id: ${command.id}`);\n\t}\n\n\t// command\n\tdisposables.push(CommandsRegistry.registerCommand({\n\t\tid: command.id,\n\t\thandler: (accessor, ...args) => action.run(accessor, ...args),\n\t\tmetadata: command.metadata,\n\t}));\n\n\t// menu\n\tif (Array.isArray(menu)) {\n\t\tfor (const item of menu) {\n\t\t\tdisposables.push(MenuRegistry.appendMenuItem(item.id, { command: { ...command, precondition: item.precondition === null ? undefined : command.precondition }, ...item }));\n\t\t}\n\n\t} else if (menu) {\n\t\tdisposables.push(MenuRegistry.appendMenuItem(menu.id, { command: { ...command, precondition: menu.precondition === null ? undefined : command.precondition }, ...menu }));\n\t}\n\tif (f1) {\n\t\tdisposables.push(MenuRegistry.appendMenuItem(MenuId.CommandPalette, { command, when: command.precondition }));\n\t\tdisposables.push(MenuRegistry.addCommand(command));\n\t}\n\n\t// keybinding\n\tif (Array.isArray(keybinding)) {\n\t\tfor (const item of keybinding) {\n\t\t\tdisposables.push(KeybindingsRegistry.registerKeybindingRule({\n\t\t\t\t...item,\n\t\t\t\tid: command.id,\n\t\t\t\twhen: command.precondition ? ContextKeyExpr.and(command.precondition, item.when) : item.when\n\t\t\t}));\n\t\t}\n\t} else if (keybinding) {\n\t\tdisposables.push(KeybindingsRegistry.registerKeybindingRule({\n\t\t\t...keybinding,\n\t\t\tid: command.id,\n\t\t\twhen: command.precondition ? ContextKeyExpr.and(command.precondition, keybinding.when) : keybinding.when\n\t\t}));\n\t}\n\n\treturn {\n\t\tdispose() {\n\t\t\tdispose(disposables);\n\t\t}\n\t};\n}\n//#endregion\n"],
  "mappings": "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",
  "names": []
}
