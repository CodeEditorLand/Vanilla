{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/actions/common/actions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { type IAction, SubmenuAction } from \"../../../base/common/actions.js\";\nimport { type Event, MicrotaskEmitter } from \"../../../base/common/event.js\";\nimport {\n\tDisposableStore,\n\ttype IDisposable,\n\tdispose,\n\ttoDisposable,\n} from \"../../../base/common/lifecycle.js\";\nimport { LinkedList } from \"../../../base/common/linkedList.js\";\nimport { ThemeIcon } from \"../../../base/common/themables.js\";\nimport type {\n\tICommandAction,\n\tICommandActionTitle,\n\tILocalizedString,\n\tIcon,\n} from \"../../action/common/action.js\";\nimport type { Categories } from \"../../action/common/actionCommonCategories.js\";\nimport {\n\tCommandsRegistry,\n\tICommandService,\n} from \"../../commands/common/commands.js\";\nimport {\n\tContextKeyExpr,\n\ttype ContextKeyExpression,\n\tIContextKeyService,\n} from \"../../contextkey/common/contextkey.js\";\nimport {\n\ttype ServicesAccessor,\n\tcreateDecorator,\n} from \"../../instantiation/common/instantiation.js\";\nimport {\n\ttype IKeybindingRule,\n\tKeybindingsRegistry,\n} from \"../../keybinding/common/keybindingsRegistry.js\";\n\nexport interface IMenuItem {\n\tcommand: ICommandAction;\n\talt?: ICommandAction;\n\t/**\n\t * Menu item is hidden if this expression returns false.\n\t */\n\twhen?: ContextKeyExpression;\n\tgroup?: \"navigation\" | string;\n\torder?: number;\n\tisHiddenByDefault?: boolean;\n}\n\nexport interface ISubmenuItem {\n\ttitle: string | ICommandActionTitle;\n\tsubmenu: MenuId;\n\ticon?: Icon;\n\twhen?: ContextKeyExpression;\n\tgroup?: \"navigation\" | string;\n\torder?: number;\n\tisSelection?: boolean;\n\trememberDefaultAction?: boolean; // for dropdown menu: if true the last executed action is remembered as the default action\n}\n\nexport function isIMenuItem(item: any): item is IMenuItem {\n\treturn (item as IMenuItem).command !== undefined;\n}\n\nexport function isISubmenuItem(item: any): item is ISubmenuItem {\n\treturn (item as ISubmenuItem).submenu !== undefined;\n}\n\nexport class MenuId {\n\tprivate static readonly _instances = new Map<string, MenuId>();\n\n\tstatic readonly CommandPalette = new MenuId(\"CommandPalette\");\n\tstatic readonly DebugBreakpointsContext = new MenuId(\n\t\t\"DebugBreakpointsContext\",\n\t);\n\tstatic readonly DebugCallStackContext = new MenuId(\"DebugCallStackContext\");\n\tstatic readonly DebugConsoleContext = new MenuId(\"DebugConsoleContext\");\n\tstatic readonly DebugVariablesContext = new MenuId(\"DebugVariablesContext\");\n\tstatic readonly NotebookVariablesContext = new MenuId(\n\t\t\"NotebookVariablesContext\",\n\t);\n\tstatic readonly DebugHoverContext = new MenuId(\"DebugHoverContext\");\n\tstatic readonly DebugWatchContext = new MenuId(\"DebugWatchContext\");\n\tstatic readonly DebugToolBar = new MenuId(\"DebugToolBar\");\n\tstatic readonly DebugToolBarStop = new MenuId(\"DebugToolBarStop\");\n\tstatic readonly DebugCallStackToolbar = new MenuId(\"DebugCallStackToolbar\");\n\tstatic readonly DebugCreateConfiguration = new MenuId(\n\t\t\"DebugCreateConfiguration\",\n\t);\n\tstatic readonly EditorContext = new MenuId(\"EditorContext\");\n\tstatic readonly SimpleEditorContext = new MenuId(\"SimpleEditorContext\");\n\tstatic readonly EditorContent = new MenuId(\"EditorContent\");\n\tstatic readonly EditorLineNumberContext = new MenuId(\n\t\t\"EditorLineNumberContext\",\n\t);\n\tstatic readonly EditorContextCopy = new MenuId(\"EditorContextCopy\");\n\tstatic readonly EditorContextPeek = new MenuId(\"EditorContextPeek\");\n\tstatic readonly EditorContextShare = new MenuId(\"EditorContextShare\");\n\tstatic readonly EditorTitle = new MenuId(\"EditorTitle\");\n\tstatic readonly EditorTitleRun = new MenuId(\"EditorTitleRun\");\n\tstatic readonly EditorTitleContext = new MenuId(\"EditorTitleContext\");\n\tstatic readonly EditorTitleContextShare = new MenuId(\n\t\t\"EditorTitleContextShare\",\n\t);\n\tstatic readonly EmptyEditorGroup = new MenuId(\"EmptyEditorGroup\");\n\tstatic readonly EmptyEditorGroupContext = new MenuId(\n\t\t\"EmptyEditorGroupContext\",\n\t);\n\tstatic readonly EditorTabsBarContext = new MenuId(\"EditorTabsBarContext\");\n\tstatic readonly EditorTabsBarShowTabsSubmenu = new MenuId(\n\t\t\"EditorTabsBarShowTabsSubmenu\",\n\t);\n\tstatic readonly EditorTabsBarShowTabsZenModeSubmenu = new MenuId(\n\t\t\"EditorTabsBarShowTabsZenModeSubmenu\",\n\t);\n\tstatic readonly EditorActionsPositionSubmenu = new MenuId(\n\t\t\"EditorActionsPositionSubmenu\",\n\t);\n\tstatic readonly ExplorerContext = new MenuId(\"ExplorerContext\");\n\tstatic readonly ExplorerContextShare = new MenuId(\"ExplorerContextShare\");\n\tstatic readonly ExtensionContext = new MenuId(\"ExtensionContext\");\n\tstatic readonly ExtensionEditorContextMenu = new MenuId(\n\t\t\"ExtensionEditorContextMenu\",\n\t);\n\tstatic readonly GlobalActivity = new MenuId(\"GlobalActivity\");\n\tstatic readonly CommandCenter = new MenuId(\"CommandCenter\");\n\tstatic readonly CommandCenterCenter = new MenuId(\"CommandCenterCenter\");\n\tstatic readonly LayoutControlMenuSubmenu = new MenuId(\n\t\t\"LayoutControlMenuSubmenu\",\n\t);\n\tstatic readonly LayoutControlMenu = new MenuId(\"LayoutControlMenu\");\n\tstatic readonly MenubarMainMenu = new MenuId(\"MenubarMainMenu\");\n\tstatic readonly MenubarAppearanceMenu = new MenuId(\"MenubarAppearanceMenu\");\n\tstatic readonly MenubarDebugMenu = new MenuId(\"MenubarDebugMenu\");\n\tstatic readonly MenubarEditMenu = new MenuId(\"MenubarEditMenu\");\n\tstatic readonly MenubarCopy = new MenuId(\"MenubarCopy\");\n\tstatic readonly MenubarFileMenu = new MenuId(\"MenubarFileMenu\");\n\tstatic readonly MenubarGoMenu = new MenuId(\"MenubarGoMenu\");\n\tstatic readonly MenubarHelpMenu = new MenuId(\"MenubarHelpMenu\");\n\tstatic readonly MenubarLayoutMenu = new MenuId(\"MenubarLayoutMenu\");\n\tstatic readonly MenubarNewBreakpointMenu = new MenuId(\n\t\t\"MenubarNewBreakpointMenu\",\n\t);\n\tstatic readonly PanelAlignmentMenu = new MenuId(\"PanelAlignmentMenu\");\n\tstatic readonly PanelPositionMenu = new MenuId(\"PanelPositionMenu\");\n\tstatic readonly ActivityBarPositionMenu = new MenuId(\n\t\t\"ActivityBarPositionMenu\",\n\t);\n\tstatic readonly MenubarPreferencesMenu = new MenuId(\n\t\t\"MenubarPreferencesMenu\",\n\t);\n\tstatic readonly MenubarRecentMenu = new MenuId(\"MenubarRecentMenu\");\n\tstatic readonly MenubarSelectionMenu = new MenuId(\"MenubarSelectionMenu\");\n\tstatic readonly MenubarShare = new MenuId(\"MenubarShare\");\n\tstatic readonly MenubarSwitchEditorMenu = new MenuId(\n\t\t\"MenubarSwitchEditorMenu\",\n\t);\n\tstatic readonly MenubarSwitchGroupMenu = new MenuId(\n\t\t\"MenubarSwitchGroupMenu\",\n\t);\n\tstatic readonly MenubarTerminalMenu = new MenuId(\"MenubarTerminalMenu\");\n\tstatic readonly MenubarViewMenu = new MenuId(\"MenubarViewMenu\");\n\tstatic readonly MenubarHomeMenu = new MenuId(\"MenubarHomeMenu\");\n\tstatic readonly OpenEditorsContext = new MenuId(\"OpenEditorsContext\");\n\tstatic readonly OpenEditorsContextShare = new MenuId(\n\t\t\"OpenEditorsContextShare\",\n\t);\n\tstatic readonly ProblemsPanelContext = new MenuId(\"ProblemsPanelContext\");\n\tstatic readonly SCMInputBox = new MenuId(\"SCMInputBox\");\n\tstatic readonly SCMChangesContext = new MenuId(\"SCMChangesContext\");\n\tstatic readonly SCMChangeContext = new MenuId(\"SCMChangeContext\");\n\tstatic readonly SCMResourceContext = new MenuId(\"SCMResourceContext\");\n\tstatic readonly SCMResourceContextShare = new MenuId(\n\t\t\"SCMResourceContextShare\",\n\t);\n\tstatic readonly SCMResourceFolderContext = new MenuId(\n\t\t\"SCMResourceFolderContext\",\n\t);\n\tstatic readonly SCMResourceGroupContext = new MenuId(\n\t\t\"SCMResourceGroupContext\",\n\t);\n\tstatic readonly SCMSourceControl = new MenuId(\"SCMSourceControl\");\n\tstatic readonly SCMSourceControlInline = new MenuId(\n\t\t\"SCMSourceControlInline\",\n\t);\n\tstatic readonly SCMSourceControlTitle = new MenuId(\"SCMSourceControlTitle\");\n\tstatic readonly SCMHistoryTitle = new MenuId(\"SCMHistoryTitle\");\n\tstatic readonly SCMTitle = new MenuId(\"SCMTitle\");\n\tstatic readonly SearchContext = new MenuId(\"SearchContext\");\n\tstatic readonly SearchActionMenu = new MenuId(\"SearchActionContext\");\n\tstatic readonly StatusBarWindowIndicatorMenu = new MenuId(\n\t\t\"StatusBarWindowIndicatorMenu\",\n\t);\n\tstatic readonly StatusBarRemoteIndicatorMenu = new MenuId(\n\t\t\"StatusBarRemoteIndicatorMenu\",\n\t);\n\tstatic readonly StickyScrollContext = new MenuId(\"StickyScrollContext\");\n\tstatic readonly TestItem = new MenuId(\"TestItem\");\n\tstatic readonly TestItemGutter = new MenuId(\"TestItemGutter\");\n\tstatic readonly TestProfilesContext = new MenuId(\"TestProfilesContext\");\n\tstatic readonly TestMessageContext = new MenuId(\"TestMessageContext\");\n\tstatic readonly TestMessageContent = new MenuId(\"TestMessageContent\");\n\tstatic readonly TestPeekElement = new MenuId(\"TestPeekElement\");\n\tstatic readonly TestPeekTitle = new MenuId(\"TestPeekTitle\");\n\tstatic readonly TestCallStack = new MenuId(\"TestCallStack\");\n\tstatic readonly TouchBarContext = new MenuId(\"TouchBarContext\");\n\tstatic readonly TitleBarContext = new MenuId(\"TitleBarContext\");\n\tstatic readonly TitleBarTitleContext = new MenuId(\"TitleBarTitleContext\");\n\tstatic readonly TunnelContext = new MenuId(\"TunnelContext\");\n\tstatic readonly TunnelPrivacy = new MenuId(\"TunnelPrivacy\");\n\tstatic readonly TunnelProtocol = new MenuId(\"TunnelProtocol\");\n\tstatic readonly TunnelPortInline = new MenuId(\"TunnelInline\");\n\tstatic readonly TunnelTitle = new MenuId(\"TunnelTitle\");\n\tstatic readonly TunnelLocalAddressInline = new MenuId(\n\t\t\"TunnelLocalAddressInline\",\n\t);\n\tstatic readonly TunnelOriginInline = new MenuId(\"TunnelOriginInline\");\n\tstatic readonly ViewItemContext = new MenuId(\"ViewItemContext\");\n\tstatic readonly ViewContainerTitle = new MenuId(\"ViewContainerTitle\");\n\tstatic readonly ViewContainerTitleContext = new MenuId(\n\t\t\"ViewContainerTitleContext\",\n\t);\n\tstatic readonly ViewTitle = new MenuId(\"ViewTitle\");\n\tstatic readonly ViewTitleContext = new MenuId(\"ViewTitleContext\");\n\tstatic readonly CommentEditorActions = new MenuId(\"CommentEditorActions\");\n\tstatic readonly CommentThreadTitle = new MenuId(\"CommentThreadTitle\");\n\tstatic readonly CommentThreadActions = new MenuId(\"CommentThreadActions\");\n\tstatic readonly CommentThreadAdditionalActions = new MenuId(\n\t\t\"CommentThreadAdditionalActions\",\n\t);\n\tstatic readonly CommentThreadTitleContext = new MenuId(\n\t\t\"CommentThreadTitleContext\",\n\t);\n\tstatic readonly CommentThreadCommentContext = new MenuId(\n\t\t\"CommentThreadCommentContext\",\n\t);\n\tstatic readonly CommentTitle = new MenuId(\"CommentTitle\");\n\tstatic readonly CommentActions = new MenuId(\"CommentActions\");\n\tstatic readonly CommentsViewThreadActions = new MenuId(\n\t\t\"CommentsViewThreadActions\",\n\t);\n\tstatic readonly InteractiveToolbar = new MenuId(\"InteractiveToolbar\");\n\tstatic readonly InteractiveCellTitle = new MenuId(\"InteractiveCellTitle\");\n\tstatic readonly InteractiveCellDelete = new MenuId(\"InteractiveCellDelete\");\n\tstatic readonly InteractiveCellExecute = new MenuId(\n\t\t\"InteractiveCellExecute\",\n\t);\n\tstatic readonly InteractiveInputExecute = new MenuId(\n\t\t\"InteractiveInputExecute\",\n\t);\n\tstatic readonly InteractiveInputConfig = new MenuId(\n\t\t\"InteractiveInputConfig\",\n\t);\n\tstatic readonly ReplInputExecute = new MenuId(\"ReplInputExecute\");\n\tstatic readonly IssueReporter = new MenuId(\"IssueReporter\");\n\tstatic readonly NotebookToolbar = new MenuId(\"NotebookToolbar\");\n\tstatic readonly NotebookStickyScrollContext = new MenuId(\n\t\t\"NotebookStickyScrollContext\",\n\t);\n\tstatic readonly NotebookCellTitle = new MenuId(\"NotebookCellTitle\");\n\tstatic readonly NotebookCellDelete = new MenuId(\"NotebookCellDelete\");\n\tstatic readonly NotebookCellInsert = new MenuId(\"NotebookCellInsert\");\n\tstatic readonly NotebookCellBetween = new MenuId(\"NotebookCellBetween\");\n\tstatic readonly NotebookCellListTop = new MenuId(\"NotebookCellTop\");\n\tstatic readonly NotebookCellExecute = new MenuId(\"NotebookCellExecute\");\n\tstatic readonly NotebookCellExecuteGoTo = new MenuId(\n\t\t\"NotebookCellExecuteGoTo\",\n\t);\n\tstatic readonly NotebookCellExecutePrimary = new MenuId(\n\t\t\"NotebookCellExecutePrimary\",\n\t);\n\tstatic readonly NotebookDiffCellInputTitle = new MenuId(\n\t\t\"NotebookDiffCellInputTitle\",\n\t);\n\tstatic readonly NotebookDiffDocumentMetadata = new MenuId(\n\t\t\"NotebookDiffDocumentMetadata\",\n\t);\n\tstatic readonly NotebookDiffCellMetadataTitle = new MenuId(\n\t\t\"NotebookDiffCellMetadataTitle\",\n\t);\n\tstatic readonly NotebookDiffCellOutputsTitle = new MenuId(\n\t\t\"NotebookDiffCellOutputsTitle\",\n\t);\n\tstatic readonly NotebookOutputToolbar = new MenuId(\"NotebookOutputToolbar\");\n\tstatic readonly NotebookOutlineFilter = new MenuId(\"NotebookOutlineFilter\");\n\tstatic readonly NotebookOutlineActionMenu = new MenuId(\n\t\t\"NotebookOutlineActionMenu\",\n\t);\n\tstatic readonly NotebookEditorLayoutConfigure = new MenuId(\n\t\t\"NotebookEditorLayoutConfigure\",\n\t);\n\tstatic readonly NotebookKernelSource = new MenuId(\"NotebookKernelSource\");\n\tstatic readonly BulkEditTitle = new MenuId(\"BulkEditTitle\");\n\tstatic readonly BulkEditContext = new MenuId(\"BulkEditContext\");\n\tstatic readonly TimelineItemContext = new MenuId(\"TimelineItemContext\");\n\tstatic readonly TimelineTitle = new MenuId(\"TimelineTitle\");\n\tstatic readonly TimelineTitleContext = new MenuId(\"TimelineTitleContext\");\n\tstatic readonly TimelineFilterSubMenu = new MenuId(\"TimelineFilterSubMenu\");\n\tstatic readonly AccountsContext = new MenuId(\"AccountsContext\");\n\tstatic readonly SidebarTitle = new MenuId(\"SidebarTitle\");\n\tstatic readonly PanelTitle = new MenuId(\"PanelTitle\");\n\tstatic readonly AuxiliaryBarTitle = new MenuId(\"AuxiliaryBarTitle\");\n\tstatic readonly AuxiliaryBarHeader = new MenuId(\"AuxiliaryBarHeader\");\n\tstatic readonly TerminalInstanceContext = new MenuId(\n\t\t\"TerminalInstanceContext\",\n\t);\n\tstatic readonly TerminalEditorInstanceContext = new MenuId(\n\t\t\"TerminalEditorInstanceContext\",\n\t);\n\tstatic readonly TerminalNewDropdownContext = new MenuId(\n\t\t\"TerminalNewDropdownContext\",\n\t);\n\tstatic readonly TerminalTabContext = new MenuId(\"TerminalTabContext\");\n\tstatic readonly TerminalTabEmptyAreaContext = new MenuId(\n\t\t\"TerminalTabEmptyAreaContext\",\n\t);\n\tstatic readonly TerminalStickyScrollContext = new MenuId(\n\t\t\"TerminalStickyScrollContext\",\n\t);\n\tstatic readonly WebviewContext = new MenuId(\"WebviewContext\");\n\tstatic readonly InlineCompletionsActions = new MenuId(\n\t\t\"InlineCompletionsActions\",\n\t);\n\tstatic readonly InlineEditsActions = new MenuId(\"InlineEditsActions\");\n\tstatic readonly InlineEditActions = new MenuId(\"InlineEditActions\");\n\tstatic readonly NewFile = new MenuId(\"NewFile\");\n\tstatic readonly MergeInput1Toolbar = new MenuId(\"MergeToolbar1Toolbar\");\n\tstatic readonly MergeInput2Toolbar = new MenuId(\"MergeToolbar2Toolbar\");\n\tstatic readonly MergeBaseToolbar = new MenuId(\"MergeBaseToolbar\");\n\tstatic readonly MergeInputResultToolbar = new MenuId(\n\t\t\"MergeToolbarResultToolbar\",\n\t);\n\tstatic readonly InlineSuggestionToolbar = new MenuId(\n\t\t\"InlineSuggestionToolbar\",\n\t);\n\tstatic readonly InlineEditToolbar = new MenuId(\"InlineEditToolbar\");\n\tstatic readonly ChatContext = new MenuId(\"ChatContext\");\n\tstatic readonly ChatCodeBlock = new MenuId(\"ChatCodeblock\");\n\tstatic readonly ChatCompareBlock = new MenuId(\"ChatCompareBlock\");\n\tstatic readonly ChatMessageTitle = new MenuId(\"ChatMessageTitle\");\n\tstatic readonly ChatExecute = new MenuId(\"ChatExecute\");\n\tstatic readonly ChatExecuteSecondary = new MenuId(\"ChatExecuteSecondary\");\n\tstatic readonly ChatInputSide = new MenuId(\"ChatInputSide\");\n\tstatic readonly ChatInlineResourceAnchorContext = new MenuId(\n\t\t\"ChatInlineResourceAnchorContext\",\n\t);\n\tstatic readonly ChatInlineSymbolAnchorContext = new MenuId(\n\t\t\"ChatInlineSymbolAnchorContext\",\n\t);\n\tstatic readonly AccessibleView = new MenuId(\"AccessibleView\");\n\tstatic readonly MultiDiffEditorFileToolbar = new MenuId(\n\t\t\"MultiDiffEditorFileToolbar\",\n\t);\n\tstatic readonly DiffEditorHunkToolbar = new MenuId(\"DiffEditorHunkToolbar\");\n\tstatic readonly DiffEditorSelectionToolbar = new MenuId(\n\t\t\"DiffEditorSelectionToolbar\",\n\t);\n\n\t/**\n\t * Create or reuse a `MenuId` with the given identifier\n\t */\n\tstatic for(identifier: string): MenuId {\n\t\treturn MenuId._instances.get(identifier) ?? new MenuId(identifier);\n\t}\n\n\treadonly id: string;\n\n\t/**\n\t * Create a new `MenuId` with the unique identifier. Will throw if a menu\n\t * with the identifier already exists, use `MenuId.for(ident)` or a unique\n\t * identifier\n\t */\n\tconstructor(identifier: string) {\n\t\tif (MenuId._instances.has(identifier)) {\n\t\t\tthrow new TypeError(\n\t\t\t\t`MenuId with identifier '${identifier}' already exists. Use MenuId.for(ident) or a unique identifier`,\n\t\t\t);\n\t\t}\n\t\tMenuId._instances.set(identifier, this);\n\t\tthis.id = identifier;\n\t}\n}\n\nexport interface IMenuActionOptions {\n\targ?: any;\n\tshouldForwardArgs?: boolean;\n\trenderShortTitle?: boolean;\n}\n\nexport interface IMenuChangeEvent {\n\treadonly menu: IMenu;\n\treadonly isStructuralChange: boolean;\n\treadonly isToggleChange: boolean;\n\treadonly isEnablementChange: boolean;\n}\n\nexport interface IMenu extends IDisposable {\n\treadonly onDidChange: Event<IMenuChangeEvent>;\n\tgetActions(\n\t\toptions?: IMenuActionOptions,\n\t): [string, Array<MenuItemAction | SubmenuItemAction>][];\n}\n\nexport interface IMenuData {\n\tcontexts: ReadonlySet<string>;\n\tactions: [string, Array<MenuItemAction | SubmenuItemAction>][];\n}\n\nexport const IMenuService = createDecorator<IMenuService>(\"menuService\");\n\nexport interface IMenuCreateOptions {\n\temitEventsForSubmenuChanges?: boolean;\n\teventDebounceDelay?: number;\n}\n\nexport interface IMenuService {\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Consider using getMenuActions if you don't need to listen to events.\n\t *\n\t * Create a new menu for the given menu identifier. A menu sends events when it's entries\n\t * have changed (placement, enablement, checked-state). By default it does not send events for\n\t * submenu entries. That is more expensive and must be explicitly enabled with the\n\t * `emitEventsForSubmenuChanges` flag.\n\t */\n\tcreateMenu(\n\t\tid: MenuId,\n\t\tcontextKeyService: IContextKeyService,\n\t\toptions?: IMenuCreateOptions,\n\t): IMenu;\n\n\t/**\n\t * Creates a new menu, gets the actions, and then disposes of the menu.\n\t */\n\tgetMenuActions(\n\t\tid: MenuId,\n\t\tcontextKeyService: IContextKeyService,\n\t\toptions?: IMenuActionOptions,\n\t): [string, Array<MenuItemAction | SubmenuItemAction>][];\n\n\t/**\n\t * Gets the names of the contexts that this menu listens on.\n\t */\n\tgetMenuContexts(id: MenuId): ReadonlySet<string>;\n\n\t/**\n\t * Reset **all** menu item hidden states.\n\t */\n\tresetHiddenStates(): void;\n\n\t/**\n\t * Reset the menu's hidden states.\n\t */\n\tresetHiddenStates(menuIds: readonly MenuId[] | undefined): void;\n}\n\ntype ICommandsMap = Map<string, ICommandAction>;\n\nexport interface IMenuRegistryChangeEvent {\n\thas(id: MenuId): boolean;\n}\n\nclass MenuRegistryChangeEvent {\n\tprivate static _all = new Map<MenuId, MenuRegistryChangeEvent>();\n\n\tstatic for(id: MenuId): MenuRegistryChangeEvent {\n\t\tlet value = this._all.get(id);\n\t\tif (!value) {\n\t\t\tvalue = new MenuRegistryChangeEvent(id);\n\t\t\tthis._all.set(id, value);\n\t\t}\n\t\treturn value;\n\t}\n\n\tstatic merge(events: IMenuRegistryChangeEvent[]): IMenuRegistryChangeEvent {\n\t\tconst ids = new Set<MenuId>();\n\t\tfor (const item of events) {\n\t\t\tif (item instanceof MenuRegistryChangeEvent) {\n\t\t\t\tids.add(item.id);\n\t\t\t}\n\t\t}\n\t\treturn ids;\n\t}\n\n\treadonly has: (id: MenuId) => boolean;\n\n\tprivate constructor(private readonly id: MenuId) {\n\t\tthis.has = (candidate) => candidate === id;\n\t}\n}\n\nexport interface IMenuRegistry {\n\treadonly onDidChangeMenu: Event<IMenuRegistryChangeEvent>;\n\taddCommand(userCommand: ICommandAction): IDisposable;\n\tgetCommand(id: string): ICommandAction | undefined;\n\tgetCommands(): ICommandsMap;\n\n\t/**\n\t * @deprecated Use `appendMenuItem` or most likely use `registerAction2` instead. There should be no strong\n\t * reason to use this directly.\n\t */\n\tappendMenuItems(\n\t\titems: Iterable<{ id: MenuId; item: IMenuItem | ISubmenuItem }>,\n\t): IDisposable;\n\tappendMenuItem(menu: MenuId, item: IMenuItem | ISubmenuItem): IDisposable;\n\tgetMenuItems(loc: MenuId | undefined): Array<IMenuItem | ISubmenuItem>;\n}\n\nexport const MenuRegistry: IMenuRegistry = new (class implements IMenuRegistry {\n\tprivate readonly _commands = new Map<string, ICommandAction>();\n\tprivate readonly _menuItems = new Map<\n\t\tMenuId,\n\t\tLinkedList<IMenuItem | ISubmenuItem>\n\t>();\n\tprivate readonly _onDidChangeMenu =\n\t\tnew MicrotaskEmitter<IMenuRegistryChangeEvent>({\n\t\t\tmerge: MenuRegistryChangeEvent.merge,\n\t\t});\n\n\treadonly onDidChangeMenu: Event<IMenuRegistryChangeEvent> =\n\t\tthis._onDidChangeMenu.event;\n\n\taddCommand(command: ICommandAction): IDisposable {\n\t\tthis._commands.set(command.id, command);\n\t\tthis._onDidChangeMenu.fire(\n\t\t\tMenuRegistryChangeEvent.for(MenuId.CommandPalette),\n\t\t);\n\n\t\treturn toDisposable(() => {\n\t\t\tif (this._commands.delete(command.id)) {\n\t\t\t\tthis._onDidChangeMenu.fire(\n\t\t\t\t\tMenuRegistryChangeEvent.for(MenuId.CommandPalette),\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n\n\tgetCommand(id: string): ICommandAction | undefined {\n\t\treturn this._commands.get(id);\n\t}\n\n\tgetCommands(): ICommandsMap {\n\t\tconst map = new Map<string, ICommandAction>();\n\t\tthis._commands.forEach((value, key) => map.set(key, value));\n\t\treturn map;\n\t}\n\n\tappendMenuItem(id: MenuId, item: IMenuItem | ISubmenuItem): IDisposable {\n\t\tlet list = this._menuItems.get(id);\n\t\tif (!list) {\n\t\t\tlist = new LinkedList();\n\t\t\tthis._menuItems.set(id, list);\n\t\t}\n\t\tconst rm = list.push(item);\n\t\tthis._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(id));\n\t\treturn toDisposable(() => {\n\t\t\trm();\n\t\t\tthis._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(id));\n\t\t});\n\t}\n\n\tappendMenuItems(\n\t\titems: Iterable<{ id: MenuId; item: IMenuItem | ISubmenuItem }>,\n\t): IDisposable {\n\t\tconst result = new DisposableStore();\n\t\tfor (const { id, item } of items) {\n\t\t\tresult.add(this.appendMenuItem(id, item));\n\t\t}\n\t\treturn result;\n\t}\n\n\tgetMenuItems(id: MenuId | undefined): Array<IMenuItem | ISubmenuItem> {\n\t\tlet result: Array<IMenuItem | ISubmenuItem>;\n\t\tif (id === undefined) {\n\t\t\tresult = [];\n\t\t\tfor (const items of this._menuItems.values()) {\n\t\t\t\tresult.push(...items);\n\t\t\t}\n\t\t} else if (this._menuItems.has(id)) {\n\t\t\tresult = [...this._menuItems.get(id)!];\n\t\t} else {\n\t\t\tresult = [];\n\t\t}\n\t\tif (id === MenuId.CommandPalette) {\n\t\t\t// CommandPalette is special because it shows\n\t\t\t// all commands by default\n\t\t\tthis._appendImplicitItems(result);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate _appendImplicitItems(result: Array<IMenuItem | ISubmenuItem>) {\n\t\tconst set = new Set<string>();\n\n\t\tfor (const item of result) {\n\t\t\tif (isIMenuItem(item)) {\n\t\t\t\tset.add(item.command.id);\n\t\t\t\tif (item.alt) {\n\t\t\t\t\tset.add(item.alt.id);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._commands.forEach((command, id) => {\n\t\t\tif (!set.has(id)) {\n\t\t\t\tresult.push({ command });\n\t\t\t}\n\t\t});\n\t}\n})();\n\nexport class SubmenuItemAction extends SubmenuAction {\n\tconstructor(\n\t\treadonly item: ISubmenuItem,\n\t\treadonly hideActions: IMenuItemHide | undefined,\n\t\tactions: IAction[],\n\t) {\n\t\tsuper(\n\t\t\t`submenuitem.${item.submenu.id}`,\n\t\t\ttypeof item.title === \"string\" ? item.title : item.title.value,\n\t\t\tactions,\n\t\t\t\"submenu\",\n\t\t);\n\t}\n}\n\nexport interface IMenuItemHide {\n\treadonly isHidden: boolean;\n\treadonly hide: IAction;\n\treadonly toggle: IAction;\n}\n\n// implements IAction, does NOT extend Action, so that no one\n// subscribes to events of Action or modified properties\nexport class MenuItemAction implements IAction {\n\tstatic label(action: ICommandAction, options?: IMenuActionOptions): string {\n\t\treturn options?.renderShortTitle && action.shortTitle\n\t\t\t? typeof action.shortTitle === \"string\"\n\t\t\t\t? action.shortTitle\n\t\t\t\t: action.shortTitle.value\n\t\t\t: typeof action.title === \"string\"\n\t\t\t\t? action.title\n\t\t\t\t: action.title.value;\n\t}\n\n\treadonly item: ICommandAction;\n\treadonly alt: MenuItemAction | undefined;\n\n\tprivate readonly _options: IMenuActionOptions | undefined;\n\n\treadonly id: string;\n\treadonly label: string;\n\treadonly tooltip: string;\n\treadonly class: string | undefined;\n\treadonly enabled: boolean;\n\treadonly checked?: boolean;\n\n\tconstructor(\n\t\titem: ICommandAction,\n\t\talt: ICommandAction | undefined,\n\t\toptions: IMenuActionOptions | undefined,\n\t\treadonly hideActions: IMenuItemHide | undefined,\n\t\treadonly menuKeybinding: IAction | undefined,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@ICommandService private _commandService: ICommandService,\n\t) {\n\t\tthis.id = item.id;\n\t\tthis.label = MenuItemAction.label(item, options);\n\t\tthis.tooltip =\n\t\t\t(typeof item.tooltip === \"string\"\n\t\t\t\t? item.tooltip\n\t\t\t\t: item.tooltip?.value) ?? \"\";\n\t\tthis.enabled =\n\t\t\t!item.precondition ||\n\t\t\tcontextKeyService.contextMatchesRules(item.precondition);\n\t\tthis.checked = undefined;\n\n\t\tlet icon: ThemeIcon | undefined;\n\n\t\tif (item.toggled) {\n\t\t\tconst toggled = (\n\t\t\t\t(item.toggled as { condition: ContextKeyExpression }).condition\n\t\t\t\t\t? item.toggled\n\t\t\t\t\t: { condition: item.toggled }\n\t\t\t) as {\n\t\t\t\tcondition: ContextKeyExpression;\n\t\t\t\ticon?: Icon;\n\t\t\t\ttooltip?: string | ILocalizedString;\n\t\t\t\ttitle?: string | ILocalizedString;\n\t\t\t};\n\t\t\tthis.checked = contextKeyService.contextMatchesRules(\n\t\t\t\ttoggled.condition,\n\t\t\t);\n\t\t\tif (this.checked && toggled.tooltip) {\n\t\t\t\tthis.tooltip =\n\t\t\t\t\ttypeof toggled.tooltip === \"string\"\n\t\t\t\t\t\t? toggled.tooltip\n\t\t\t\t\t\t: toggled.tooltip.value;\n\t\t\t}\n\n\t\t\tif (this.checked && ThemeIcon.isThemeIcon(toggled.icon)) {\n\t\t\t\ticon = toggled.icon;\n\t\t\t}\n\n\t\t\tif (this.checked && toggled.title) {\n\t\t\t\tthis.label =\n\t\t\t\t\ttypeof toggled.title === \"string\"\n\t\t\t\t\t\t? toggled.title\n\t\t\t\t\t\t: toggled.title.value;\n\t\t\t}\n\t\t}\n\n\t\tif (!icon) {\n\t\t\ticon = ThemeIcon.isThemeIcon(item.icon) ? item.icon : undefined;\n\t\t}\n\n\t\tthis.item = item;\n\t\tthis.alt = alt\n\t\t\t? new MenuItemAction(\n\t\t\t\t\talt,\n\t\t\t\t\tundefined,\n\t\t\t\t\toptions,\n\t\t\t\t\thideActions,\n\t\t\t\t\tundefined,\n\t\t\t\t\tcontextKeyService,\n\t\t\t\t\t_commandService,\n\t\t\t\t)\n\t\t\t: undefined;\n\t\tthis._options = options;\n\t\tthis.class = icon && ThemeIcon.asClassName(icon);\n\t}\n\n\trun(...args: any[]): Promise<void> {\n\t\tlet runArgs: any[] = [];\n\n\t\tif (this._options?.arg) {\n\t\t\trunArgs = [...runArgs, this._options.arg];\n\t\t}\n\n\t\tif (this._options?.shouldForwardArgs) {\n\t\t\trunArgs = [...runArgs, ...args];\n\t\t}\n\n\t\treturn this._commandService.executeCommand(this.id, ...runArgs);\n\t}\n}\n\n//#region --- IAction2\n\ntype OneOrN<T> = T | T[];\n\ninterface IAction2CommonOptions extends ICommandAction {\n\t/**\n\t * One or many menu items.\n\t */\n\tmenu?: OneOrN<\n\t\t{ id: MenuId; precondition?: null } & Omit<IMenuItem, \"command\">\n\t>;\n\n\t/**\n\t * One keybinding.\n\t */\n\tkeybinding?: OneOrN<Omit<IKeybindingRule, \"id\">>;\n}\n\ninterface IBaseAction2Options extends IAction2CommonOptions {\n\t/**\n\t * This type is used when an action is not going to show up in the command palette.\n\t * In that case, it's able to use a string for the `title` and `category` properties.\n\t */\n\tf1?: false;\n}\n\ninterface ICommandPaletteOptions extends IAction2CommonOptions {\n\t/**\n\t * The title of the command that will be displayed in the command palette after the category.\n\t *  This overrides {@link ICommandAction.title} to ensure a string isn't used so that the title\n\t *  includes the localized value and the original value for users using language packs.\n\t */\n\ttitle: ICommandActionTitle;\n\n\t/**\n\t * The category of the command that will be displayed in the command palette before the title suffixed.\n\t * with a colon This overrides {@link ICommandAction.title} to ensure a string isn't used so that\n\t * the title includes the localized value and the original value for users using language packs.\n\t */\n\tcategory?: keyof typeof Categories | ILocalizedString;\n\n\t/**\n\t * Shorthand to add this command to the command palette. Note: this is not the only way to declare that\n\t * a command should be in the command palette... however, enforcing ILocalizedString in the other scenarios\n\t * is much more challenging and this gets us most of the way there.\n\t */\n\tf1: true;\n}\n\nexport type IAction2Options = ICommandPaletteOptions | IBaseAction2Options;\n\nexport interface IAction2F1RequiredOptions {\n\ttitle: ICommandActionTitle;\n\tcategory?: keyof typeof Categories | ILocalizedString;\n}\n\nexport abstract class Action2 {\n\tconstructor(readonly desc: Readonly<IAction2Options>) {}\n\tabstract run(accessor: ServicesAccessor, ...args: any[]): void;\n}\n\nexport function registerAction2(ctor: { new (): Action2 }): IDisposable {\n\tconst disposables: IDisposable[] = []; // not using `DisposableStore` to reduce startup perf cost\n\tconst action = new ctor();\n\n\tconst { f1, menu, keybinding, ...command } = action.desc;\n\n\tif (CommandsRegistry.getCommand(command.id)) {\n\t\tthrow new Error(\n\t\t\t`Cannot register two commands with the same id: ${command.id}`,\n\t\t);\n\t}\n\n\t// command\n\tdisposables.push(\n\t\tCommandsRegistry.registerCommand({\n\t\t\tid: command.id,\n\t\t\thandler: (accessor, ...args) => action.run(accessor, ...args),\n\t\t\tmetadata: command.metadata,\n\t\t}),\n\t);\n\n\t// menu\n\tif (Array.isArray(menu)) {\n\t\tfor (const item of menu) {\n\t\t\tdisposables.push(\n\t\t\t\tMenuRegistry.appendMenuItem(item.id, {\n\t\t\t\t\tcommand: {\n\t\t\t\t\t\t...command,\n\t\t\t\t\t\tprecondition:\n\t\t\t\t\t\t\titem.precondition === null\n\t\t\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t\t\t: command.precondition,\n\t\t\t\t\t},\n\t\t\t\t\t...item,\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t} else if (menu) {\n\t\tdisposables.push(\n\t\t\tMenuRegistry.appendMenuItem(menu.id, {\n\t\t\t\tcommand: {\n\t\t\t\t\t...command,\n\t\t\t\t\tprecondition:\n\t\t\t\t\t\tmenu.precondition === null\n\t\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t\t: command.precondition,\n\t\t\t\t},\n\t\t\t\t...menu,\n\t\t\t}),\n\t\t);\n\t}\n\tif (f1) {\n\t\tdisposables.push(\n\t\t\tMenuRegistry.appendMenuItem(MenuId.CommandPalette, {\n\t\t\t\tcommand,\n\t\t\t\twhen: command.precondition,\n\t\t\t}),\n\t\t);\n\t\tdisposables.push(MenuRegistry.addCommand(command));\n\t}\n\n\t// keybinding\n\tif (Array.isArray(keybinding)) {\n\t\tfor (const item of keybinding) {\n\t\t\tdisposables.push(\n\t\t\t\tKeybindingsRegistry.registerKeybindingRule({\n\t\t\t\t\t...item,\n\t\t\t\t\tid: command.id,\n\t\t\t\t\twhen: command.precondition\n\t\t\t\t\t\t? ContextKeyExpr.and(command.precondition, item.when)\n\t\t\t\t\t\t: item.when,\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t} else if (keybinding) {\n\t\tdisposables.push(\n\t\t\tKeybindingsRegistry.registerKeybindingRule({\n\t\t\t\t...keybinding,\n\t\t\t\tid: command.id,\n\t\t\t\twhen: command.precondition\n\t\t\t\t\t? ContextKeyExpr.and(command.precondition, keybinding.when)\n\t\t\t\t\t: keybinding.when,\n\t\t\t}),\n\t\t);\n\t}\n\n\treturn {\n\t\tdispose() {\n\t\t\tdispose(disposables);\n\t\t},\n\t};\n}\n//#endregion\n"],
  "mappings": "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",
  "names": []
}
