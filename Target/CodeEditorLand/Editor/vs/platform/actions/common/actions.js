var h=Object.defineProperty;var S=Object.getOwnPropertyDescriptor;var b=(o,t,n,a)=>{for(var r=a>1?void 0:a?S(t,n):t,l=o.length-1,i;l>=0;l--)(i=o[l])&&(r=(a?i(t,n,r):i(r))||r);return a&&r&&h(t,n,r),r},y=(o,t)=>(n,a)=>t(n,a,o);import{SubmenuAction as f}from"../../../base/common/actions.js";import{MicrotaskEmitter as E}from"../../../base/common/event.js";import{DisposableStore as A,dispose as I,toDisposable as p}from"../../../base/common/lifecycle.js";import{LinkedList as k}from"../../../base/common/linkedList.js";import{ThemeIcon as w}from"../../../base/common/themables.js";import"../../action/common/action.js";import"../../action/common/actionCommonCategories.js";import{CommandsRegistry as T,ICommandService as v}from"../../commands/common/commands.js";import{ContextKeyExpr as x,IContextKeyService as D}from"../../contextkey/common/contextkey.js";import{createDecorator as M}from"../../instantiation/common/instantiation.js";import{KeybindingsRegistry as g}from"../../keybinding/common/keybindingsRegistry.js";function N(o){return o.command!==void 0}function te(o){return o.submenu!==void 0}class e{static _instances=new Map;static CommandPalette=new e("CommandPalette");static DebugBreakpointsContext=new e("DebugBreakpointsContext");static DebugCallStackContext=new e("DebugCallStackContext");static DebugConsoleContext=new e("DebugConsoleContext");static DebugVariablesContext=new e("DebugVariablesContext");static NotebookVariablesContext=new e("NotebookVariablesContext");static DebugHoverContext=new e("DebugHoverContext");static DebugWatchContext=new e("DebugWatchContext");static DebugToolBar=new e("DebugToolBar");static DebugToolBarStop=new e("DebugToolBarStop");static DebugCallStackToolbar=new e("DebugCallStackToolbar");static DebugCreateConfiguration=new e("DebugCreateConfiguration");static EditorContext=new e("EditorContext");static SimpleEditorContext=new e("SimpleEditorContext");static EditorContent=new e("EditorContent");static EditorLineNumberContext=new e("EditorLineNumberContext");static EditorContextCopy=new e("EditorContextCopy");static EditorContextPeek=new e("EditorContextPeek");static EditorContextShare=new e("EditorContextShare");static EditorTitle=new e("EditorTitle");static EditorTitleRun=new e("EditorTitleRun");static EditorTitleContext=new e("EditorTitleContext");static EditorTitleContextShare=new e("EditorTitleContextShare");static EmptyEditorGroup=new e("EmptyEditorGroup");static EmptyEditorGroupContext=new e("EmptyEditorGroupContext");static EditorTabsBarContext=new e("EditorTabsBarContext");static EditorTabsBarShowTabsSubmenu=new e("EditorTabsBarShowTabsSubmenu");static EditorTabsBarShowTabsZenModeSubmenu=new e("EditorTabsBarShowTabsZenModeSubmenu");static EditorActionsPositionSubmenu=new e("EditorActionsPositionSubmenu");static ExplorerContext=new e("ExplorerContext");static ExplorerContextShare=new e("ExplorerContextShare");static ExtensionContext=new e("ExtensionContext");static GlobalActivity=new e("GlobalActivity");static CommandCenter=new e("CommandCenter");static CommandCenterCenter=new e("CommandCenterCenter");static LayoutControlMenuSubmenu=new e("LayoutControlMenuSubmenu");static LayoutControlMenu=new e("LayoutControlMenu");static MenubarMainMenu=new e("MenubarMainMenu");static MenubarAppearanceMenu=new e("MenubarAppearanceMenu");static MenubarDebugMenu=new e("MenubarDebugMenu");static MenubarEditMenu=new e("MenubarEditMenu");static MenubarCopy=new e("MenubarCopy");static MenubarFileMenu=new e("MenubarFileMenu");static MenubarGoMenu=new e("MenubarGoMenu");static MenubarHelpMenu=new e("MenubarHelpMenu");static MenubarLayoutMenu=new e("MenubarLayoutMenu");static MenubarNewBreakpointMenu=new e("MenubarNewBreakpointMenu");static PanelAlignmentMenu=new e("PanelAlignmentMenu");static PanelPositionMenu=new e("PanelPositionMenu");static ActivityBarPositionMenu=new e("ActivityBarPositionMenu");static MenubarPreferencesMenu=new e("MenubarPreferencesMenu");static MenubarRecentMenu=new e("MenubarRecentMenu");static MenubarSelectionMenu=new e("MenubarSelectionMenu");static MenubarShare=new e("MenubarShare");static MenubarSwitchEditorMenu=new e("MenubarSwitchEditorMenu");static MenubarSwitchGroupMenu=new e("MenubarSwitchGroupMenu");static MenubarTerminalMenu=new e("MenubarTerminalMenu");static MenubarViewMenu=new e("MenubarViewMenu");static MenubarHomeMenu=new e("MenubarHomeMenu");static OpenEditorsContext=new e("OpenEditorsContext");static OpenEditorsContextShare=new e("OpenEditorsContextShare");static ProblemsPanelContext=new e("ProblemsPanelContext");static SCMInputBox=new e("SCMInputBox");static SCMChangesContext=new e("SCMChangesContext");static SCMChangeContext=new e("SCMChangeContext");static SCMResourceContext=new e("SCMResourceContext");static SCMResourceContextShare=new e("SCMResourceContextShare");static SCMResourceFolderContext=new e("SCMResourceFolderContext");static SCMResourceGroupContext=new e("SCMResourceGroupContext");static SCMSourceControl=new e("SCMSourceControl");static SCMSourceControlInline=new e("SCMSourceControlInline");static SCMSourceControlTitle=new e("SCMSourceControlTitle");static SCMHistoryTitle=new e("SCMHistoryTitle");static SCMTitle=new e("SCMTitle");static SearchContext=new e("SearchContext");static SearchActionMenu=new e("SearchActionContext");static StatusBarWindowIndicatorMenu=new e("StatusBarWindowIndicatorMenu");static StatusBarRemoteIndicatorMenu=new e("StatusBarRemoteIndicatorMenu");static StickyScrollContext=new e("StickyScrollContext");static TestItem=new e("TestItem");static TestItemGutter=new e("TestItemGutter");static TestProfilesContext=new e("TestProfilesContext");static TestMessageContext=new e("TestMessageContext");static TestMessageContent=new e("TestMessageContent");static TestPeekElement=new e("TestPeekElement");static TestPeekTitle=new e("TestPeekTitle");static TestCallStack=new e("TestCallStack");static TouchBarContext=new e("TouchBarContext");static TitleBarContext=new e("TitleBarContext");static TitleBarTitleContext=new e("TitleBarTitleContext");static TunnelContext=new e("TunnelContext");static TunnelPrivacy=new e("TunnelPrivacy");static TunnelProtocol=new e("TunnelProtocol");static TunnelPortInline=new e("TunnelInline");static TunnelTitle=new e("TunnelTitle");static TunnelLocalAddressInline=new e("TunnelLocalAddressInline");static TunnelOriginInline=new e("TunnelOriginInline");static ViewItemContext=new e("ViewItemContext");static ViewContainerTitle=new e("ViewContainerTitle");static ViewContainerTitleContext=new e("ViewContainerTitleContext");static ViewTitle=new e("ViewTitle");static ViewTitleContext=new e("ViewTitleContext");static CommentEditorActions=new e("CommentEditorActions");static CommentThreadTitle=new e("CommentThreadTitle");static CommentThreadActions=new e("CommentThreadActions");static CommentThreadAdditionalActions=new e("CommentThreadAdditionalActions");static CommentThreadTitleContext=new e("CommentThreadTitleContext");static CommentThreadCommentContext=new e("CommentThreadCommentContext");static CommentTitle=new e("CommentTitle");static CommentActions=new e("CommentActions");static CommentsViewThreadActions=new e("CommentsViewThreadActions");static InteractiveToolbar=new e("InteractiveToolbar");static InteractiveCellTitle=new e("InteractiveCellTitle");static InteractiveCellDelete=new e("InteractiveCellDelete");static InteractiveCellExecute=new e("InteractiveCellExecute");static InteractiveInputExecute=new e("InteractiveInputExecute");static InteractiveInputConfig=new e("InteractiveInputConfig");static ReplInputExecute=new e("ReplInputExecute");static IssueReporter=new e("IssueReporter");static NotebookToolbar=new e("NotebookToolbar");static NotebookStickyScrollContext=new e("NotebookStickyScrollContext");static NotebookCellTitle=new e("NotebookCellTitle");static NotebookCellDelete=new e("NotebookCellDelete");static NotebookCellInsert=new e("NotebookCellInsert");static NotebookCellBetween=new e("NotebookCellBetween");static NotebookCellListTop=new e("NotebookCellTop");static NotebookCellExecute=new e("NotebookCellExecute");static NotebookCellExecuteGoTo=new e("NotebookCellExecuteGoTo");static NotebookCellExecutePrimary=new e("NotebookCellExecutePrimary");static NotebookDiffCellInputTitle=new e("NotebookDiffCellInputTitle");static NotebookDiffCellMetadataTitle=new e("NotebookDiffCellMetadataTitle");static NotebookDiffCellOutputsTitle=new e("NotebookDiffCellOutputsTitle");static NotebookOutputToolbar=new e("NotebookOutputToolbar");static NotebookOutlineFilter=new e("NotebookOutlineFilter");static NotebookOutlineActionMenu=new e("NotebookOutlineActionMenu");static NotebookEditorLayoutConfigure=new e("NotebookEditorLayoutConfigure");static NotebookKernelSource=new e("NotebookKernelSource");static BulkEditTitle=new e("BulkEditTitle");static BulkEditContext=new e("BulkEditContext");static TimelineItemContext=new e("TimelineItemContext");static TimelineTitle=new e("TimelineTitle");static TimelineTitleContext=new e("TimelineTitleContext");static TimelineFilterSubMenu=new e("TimelineFilterSubMenu");static AccountsContext=new e("AccountsContext");static SidebarTitle=new e("SidebarTitle");static PanelTitle=new e("PanelTitle");static AuxiliaryBarTitle=new e("AuxiliaryBarTitle");static AuxiliaryBarHeader=new e("AuxiliaryBarHeader");static TerminalInstanceContext=new e("TerminalInstanceContext");static TerminalEditorInstanceContext=new e("TerminalEditorInstanceContext");static TerminalNewDropdownContext=new e("TerminalNewDropdownContext");static TerminalTabContext=new e("TerminalTabContext");static TerminalTabEmptyAreaContext=new e("TerminalTabEmptyAreaContext");static TerminalStickyScrollContext=new e("TerminalStickyScrollContext");static WebviewContext=new e("WebviewContext");static InlineCompletionsActions=new e("InlineCompletionsActions");static InlineEditsActions=new e("InlineEditsActions");static InlineEditActions=new e("InlineEditActions");static NewFile=new e("NewFile");static MergeInput1Toolbar=new e("MergeToolbar1Toolbar");static MergeInput2Toolbar=new e("MergeToolbar2Toolbar");static MergeBaseToolbar=new e("MergeBaseToolbar");static MergeInputResultToolbar=new e("MergeToolbarResultToolbar");static InlineSuggestionToolbar=new e("InlineSuggestionToolbar");static InlineEditToolbar=new e("InlineEditToolbar");static ChatContext=new e("ChatContext");static ChatCodeBlock=new e("ChatCodeblock");static ChatCompareBlock=new e("ChatCompareBlock");static ChatMessageTitle=new e("ChatMessageTitle");static ChatExecute=new e("ChatExecute");static ChatExecuteSecondary=new e("ChatExecuteSecondary");static ChatInputSide=new e("ChatInputSide");static AccessibleView=new e("AccessibleView");static MultiDiffEditorFileToolbar=new e("MultiDiffEditorFileToolbar");static DiffEditorHunkToolbar=new e("DiffEditorHunkToolbar");static DiffEditorSelectionToolbar=new e("DiffEditorSelectionToolbar");static for(t){return e._instances.get(t)??new e(t)}id;constructor(t){if(e._instances.has(t))throw new TypeError(`MenuId with identifier '${t}' already exists. Use MenuId.for(ident) or a unique identifier`);e._instances.set(t,this),this.id=t}}const ne=M("menuService");class d{constructor(t){this.id=t;this.has=n=>n===t}static _all=new Map;static for(t){let n=this._all.get(t);return n||(n=new d(t),this._all.set(t,n)),n}static merge(t){const n=new Set;for(const a of t)a instanceof d&&n.add(a.id);return n}has}const u=new class{_commands=new Map;_menuItems=new Map;_onDidChangeMenu=new E({merge:d.merge});onDidChangeMenu=this._onDidChangeMenu.event;addCommand(o){return this._commands.set(o.id,o),this._onDidChangeMenu.fire(d.for(e.CommandPalette)),p(()=>{this._commands.delete(o.id)&&this._onDidChangeMenu.fire(d.for(e.CommandPalette))})}getCommand(o){return this._commands.get(o)}getCommands(){const o=new Map;return this._commands.forEach((t,n)=>o.set(n,t)),o}appendMenuItem(o,t){let n=this._menuItems.get(o);n||(n=new k,this._menuItems.set(o,n));const a=n.push(t);return this._onDidChangeMenu.fire(d.for(o)),p(()=>{a(),this._onDidChangeMenu.fire(d.for(o))})}appendMenuItems(o){const t=new A;for(const{id:n,item:a}of o)t.add(this.appendMenuItem(n,a));return t}getMenuItems(o){let t;return this._menuItems.has(o)?t=[...this._menuItems.get(o)]:t=[],o===e.CommandPalette&&this._appendImplicitItems(t),t}_appendImplicitItems(o){const t=new Set;for(const n of o)N(n)&&(t.add(n.command.id),n.alt&&t.add(n.alt.id));this._commands.forEach((n,a)=>{t.has(a)||o.push({command:n})})}};class oe extends f{constructor(n,a,r){super(`submenuitem.${n.submenu.id}`,typeof n.title=="string"?n.title:n.title.value,r,"submenu");this.item=n;this.hideActions=a}}let C=class{constructor(t,n,a,r,l,i,s){this.hideActions=r;this.menuKeybinding=l;this._commandService=s;this.id=t.id,this.label=C.label(t,a),this.tooltip=(typeof t.tooltip=="string"?t.tooltip:t.tooltip?.value)??"",this.enabled=!t.precondition||i.contextMatchesRules(t.precondition),this.checked=void 0;let m;if(t.toggled){const c=t.toggled.condition?t.toggled:{condition:t.toggled};this.checked=i.contextMatchesRules(c.condition),this.checked&&c.tooltip&&(this.tooltip=typeof c.tooltip=="string"?c.tooltip:c.tooltip.value),this.checked&&w.isThemeIcon(c.icon)&&(m=c.icon),this.checked&&c.title&&(this.label=typeof c.title=="string"?c.title:c.title.value)}m||(m=w.isThemeIcon(t.icon)?t.icon:void 0),this.item=t,this.alt=n?new C(n,void 0,a,r,void 0,i,s):void 0,this._options=a,this.class=m&&w.asClassName(m)}static label(t,n){return n?.renderShortTitle&&t.shortTitle?typeof t.shortTitle=="string"?t.shortTitle:t.shortTitle.value:typeof t.title=="string"?t.title:t.title.value}item;alt;_options;id;label;tooltip;class;enabled;checked;run(...t){let n=[];return this._options?.arg&&(n=[...n,this._options.arg]),this._options?.shouldForwardArgs&&(n=[...n,...t]),this._commandService.executeCommand(this.id,...n)}};C=b([y(5,D),y(6,v)],C);class ie{constructor(t){this.desc=t}}function ae(o){const t=[],n=new o,{f1:a,menu:r,keybinding:l,...i}=n.desc;if(T.getCommand(i.id))throw new Error(`Cannot register two commands with the same id: ${i.id}`);if(t.push(T.registerCommand({id:i.id,handler:(s,...m)=>n.run(s,...m),metadata:i.metadata})),Array.isArray(r))for(const s of r)t.push(u.appendMenuItem(s.id,{command:{...i,precondition:s.precondition===null?void 0:i.precondition},...s}));else r&&t.push(u.appendMenuItem(r.id,{command:{...i,precondition:r.precondition===null?void 0:i.precondition},...r}));if(a&&(t.push(u.appendMenuItem(e.CommandPalette,{command:i,when:i.precondition})),t.push(u.addCommand(i))),Array.isArray(l))for(const s of l)t.push(g.registerKeybindingRule({...s,id:i.id,when:i.precondition?x.and(i.precondition,s.when):s.when}));else l&&t.push(g.registerKeybindingRule({...l,id:i.id,when:i.precondition?x.and(i.precondition,l.when):l.when}));return{dispose(){I(t)}}}export{ie as Action2,ne as IMenuService,e as MenuId,C as MenuItemAction,u as MenuRegistry,oe as SubmenuItemAction,N as isIMenuItem,te as isISubmenuItem,ae as registerAction2};
