{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/actions/browser/menuEntryActionViewItem.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { $, addDisposableListener, append, asCSSUrl, EventType, ModifierKeyEmitter, prepend } from '../../../base/browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { ActionViewItem, BaseActionViewItem, SelectActionViewItem } from '../../../base/browser/ui/actionbar/actionViewItems.js';\nimport { DropdownMenuActionViewItem, IDropdownMenuActionViewItemOptions } from '../../../base/browser/ui/dropdown/dropdownActionViewItem.js';\nimport { ActionRunner, IAction, IRunEvent, Separator, SubmenuAction } from '../../../base/common/actions.js';\nimport { Event } from '../../../base/common/event.js';\nimport { UILabelProvider } from '../../../base/common/keybindingLabels.js';\nimport { KeyCode } from '../../../base/common/keyCodes.js';\nimport { combinedDisposable, MutableDisposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { isLinux, isWindows, OS } from '../../../base/common/platform.js';\nimport './menuEntryActionViewItem.css';\nimport { localize } from '../../../nls.js';\nimport { IMenu, IMenuActionOptions, IMenuService, MenuItemAction, SubmenuItemAction } from '../common/actions.js';\nimport { ICommandAction, isICommandActionToggleInfo } from '../../action/common/action.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { IContextMenuService, IContextViewService } from '../../contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { INotificationService } from '../../notification/common/notification.js';\nimport { IStorageService, StorageScope, StorageTarget } from '../../storage/common/storage.js';\nimport { IThemeService } from '../../theme/common/themeService.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { isDark } from '../../theme/common/theme.js';\nimport { IHoverDelegate } from '../../../base/browser/ui/hover/hoverDelegate.js';\nimport { assertType } from '../../../base/common/types.js';\nimport { asCssVariable, selectBorder } from '../../theme/common/colorRegistry.js';\nimport { defaultSelectBoxStyles } from '../../theme/browser/defaultStyles.js';\nimport { IAccessibilityService } from '../../accessibility/common/accessibility.js';\nimport { ResolvedKeybinding } from '../../../base/common/keybindings.js';\n\nexport function createAndFillInContextMenuActions(menu: IMenu, options: IMenuActionOptions | undefined, target: IAction[] | { primary: IAction[]; secondary: IAction[] }, primaryGroup?: string): void;\nexport function createAndFillInContextMenuActions(menu: [string, Array<MenuItemAction | SubmenuItemAction>][], target: IAction[] | { primary: IAction[]; secondary: IAction[] }, primaryGroup?: string): void;\nexport function createAndFillInContextMenuActions(menu: IMenu | [string, Array<MenuItemAction | SubmenuItemAction>][], optionsOrTarget: IMenuActionOptions | undefined | IAction[] | { primary: IAction[]; secondary: IAction[] }, targetOrPrimaryGroup?: IAction[] | { primary: IAction[]; secondary: IAction[] } | string, primaryGroupOrUndefined?: string): void {\n\tlet target: IAction[] | { primary: IAction[]; secondary: IAction[] };\n\tlet primaryGroup: string | ((actionGroup: string) => boolean) | undefined;\n\tlet groups: [string, Array<MenuItemAction | SubmenuItemAction>][];\n\tif (Array.isArray(menu)) {\n\t\tgroups = menu;\n\t\ttarget = optionsOrTarget as IAction[] | { primary: IAction[]; secondary: IAction[] };\n\t\tprimaryGroup = targetOrPrimaryGroup as string | undefined;\n\t} else {\n\t\tconst options: IMenuActionOptions | undefined = optionsOrTarget as IMenuActionOptions | undefined;\n\t\tgroups = menu.getActions(options);\n\t\ttarget = targetOrPrimaryGroup as IAction[] | { primary: IAction[]; secondary: IAction[] };\n\t\tprimaryGroup = primaryGroupOrUndefined;\n\t}\n\n\tconst modifierKeyEmitter = ModifierKeyEmitter.getInstance();\n\tconst useAlternativeActions = modifierKeyEmitter.keyStatus.altKey || ((isWindows || isLinux) && modifierKeyEmitter.keyStatus.shiftKey);\n\tfillInActions(groups, target, useAlternativeActions, primaryGroup ? actionGroup => actionGroup === primaryGroup : actionGroup => actionGroup === 'navigation');\n}\n\nexport function createAndFillInActionBarActions(\n\tmenu: IMenu,\n\toptions: IMenuActionOptions | undefined,\n\ttarget: IAction[] | { primary: IAction[]; secondary: IAction[] },\n\tprimaryGroup?: string | ((actionGroup: string) => boolean),\n\tshouldInlineSubmenu?: (action: SubmenuAction, group: string, groupSize: number) => boolean,\n\tuseSeparatorsInPrimaryActions?: boolean\n): void;\nexport function createAndFillInActionBarActions(\n\tmenu: [string, Array<MenuItemAction | SubmenuItemAction>][],\n\ttarget: IAction[] | { primary: IAction[]; secondary: IAction[] },\n\tprimaryGroup?: string | ((actionGroup: string) => boolean),\n\tshouldInlineSubmenu?: (action: SubmenuAction, group: string, groupSize: number) => boolean,\n\tuseSeparatorsInPrimaryActions?: boolean\n): void;\nexport function createAndFillInActionBarActions(\n\tmenu: IMenu | [string, Array<MenuItemAction | SubmenuItemAction>][],\n\toptionsOrTarget: IMenuActionOptions | undefined | IAction[] | { primary: IAction[]; secondary: IAction[] },\n\ttargetOrPrimaryGroup?: IAction[] | { primary: IAction[]; secondary: IAction[] } | string | ((actionGroup: string) => boolean),\n\tprimaryGroupOrShouldInlineSubmenu?: string | ((actionGroup: string) => boolean) | ((action: SubmenuAction, group: string, groupSize: number) => boolean),\n\tshouldInlineSubmenuOrUseSeparatorsInPrimaryActions?: ((action: SubmenuAction, group: string, groupSize: number) => boolean) | boolean,\n\tuseSeparatorsInPrimaryActionsOrUndefined?: boolean\n): void {\n\tlet target: IAction[] | { primary: IAction[]; secondary: IAction[] };\n\tlet primaryGroup: string | ((actionGroup: string) => boolean) | undefined;\n\tlet shouldInlineSubmenu: ((action: SubmenuAction, group: string, groupSize: number) => boolean) | undefined;\n\tlet useSeparatorsInPrimaryActions: boolean | undefined;\n\tlet groups: [string, Array<MenuItemAction | SubmenuItemAction>][];\n\tif (Array.isArray(menu)) {\n\t\tgroups = menu;\n\t\ttarget = optionsOrTarget as IAction[] | { primary: IAction[]; secondary: IAction[] };\n\t\tprimaryGroup = targetOrPrimaryGroup as string | ((actionGroup: string) => boolean) | undefined;\n\t\tshouldInlineSubmenu = primaryGroupOrShouldInlineSubmenu as (action: SubmenuAction, group: string, groupSize: number) => boolean;\n\t\tuseSeparatorsInPrimaryActions = shouldInlineSubmenuOrUseSeparatorsInPrimaryActions as boolean | undefined;\n\t} else {\n\t\tconst options: IMenuActionOptions | undefined = optionsOrTarget as IMenuActionOptions | undefined;\n\t\tgroups = menu.getActions(options);\n\t\ttarget = targetOrPrimaryGroup as IAction[] | { primary: IAction[]; secondary: IAction[] };\n\t\tprimaryGroup = primaryGroupOrShouldInlineSubmenu as string | ((actionGroup: string) => boolean) | undefined;\n\t\tshouldInlineSubmenu = shouldInlineSubmenuOrUseSeparatorsInPrimaryActions as (action: SubmenuAction, group: string, groupSize: number) => boolean;\n\t\tuseSeparatorsInPrimaryActions = useSeparatorsInPrimaryActionsOrUndefined;\n\t}\n\n\tconst isPrimaryAction = typeof primaryGroup === 'string' ? (actionGroup: string) => actionGroup === primaryGroup : primaryGroup;\n\n\t// Action bars handle alternative actions on their own so the alternative actions should be ignored\n\tfillInActions(groups, target, false, isPrimaryAction, shouldInlineSubmenu, useSeparatorsInPrimaryActions);\n}\n\nfunction fillInActions(\n\tgroups: ReadonlyArray<[string, ReadonlyArray<MenuItemAction | SubmenuItemAction>]>, target: IAction[] | { primary: IAction[]; secondary: IAction[] },\n\tuseAlternativeActions: boolean,\n\tisPrimaryAction: (actionGroup: string) => boolean = actionGroup => actionGroup === 'navigation',\n\tshouldInlineSubmenu: (action: SubmenuAction, group: string, groupSize: number) => boolean = () => false,\n\tuseSeparatorsInPrimaryActions: boolean = false\n): void {\n\n\tlet primaryBucket: IAction[];\n\tlet secondaryBucket: IAction[];\n\tif (Array.isArray(target)) {\n\t\tprimaryBucket = target;\n\t\tsecondaryBucket = target;\n\t} else {\n\t\tprimaryBucket = target.primary;\n\t\tsecondaryBucket = target.secondary;\n\t}\n\n\tconst submenuInfo = new Set<{ group: string; action: SubmenuAction; index: number }>();\n\n\tfor (const [group, actions] of groups) {\n\n\t\tlet target: IAction[];\n\t\tif (isPrimaryAction(group)) {\n\t\t\ttarget = primaryBucket;\n\t\t\tif (target.length > 0 && useSeparatorsInPrimaryActions) {\n\t\t\t\ttarget.push(new Separator());\n\t\t\t}\n\t\t} else {\n\t\t\ttarget = secondaryBucket;\n\t\t\tif (target.length > 0) {\n\t\t\t\ttarget.push(new Separator());\n\t\t\t}\n\t\t}\n\n\t\tfor (let action of actions) {\n\t\t\tif (useAlternativeActions) {\n\t\t\t\taction = action instanceof MenuItemAction && action.alt ? action.alt : action;\n\t\t\t}\n\t\t\tconst newLen = target.push(action);\n\t\t\t// keep submenu info for later inlining\n\t\t\tif (action instanceof SubmenuAction) {\n\t\t\t\tsubmenuInfo.add({ group, action, index: newLen - 1 });\n\t\t\t}\n\t\t}\n\t}\n\n\t// ask the outside if submenu should be inlined or not. only ask when\n\t// there would be enough space\n\tfor (const { group, action, index } of submenuInfo) {\n\t\tconst target = isPrimaryAction(group) ? primaryBucket : secondaryBucket;\n\n\t\t// inlining submenus with length 0 or 1 is easy,\n\t\t// larger submenus need to be checked with the overall limit\n\t\tconst submenuActions = action.actions;\n\t\tif (shouldInlineSubmenu(action, group, target.length)) {\n\t\t\ttarget.splice(index, 1, ...submenuActions);\n\t\t}\n\t}\n}\n\nexport interface IMenuEntryActionViewItemOptions {\n\tdraggable?: boolean;\n\tkeybinding?: string;\n\thoverDelegate?: IHoverDelegate;\n}\n\nexport class MenuEntryActionViewItem<T extends IMenuEntryActionViewItemOptions = IMenuEntryActionViewItemOptions> extends ActionViewItem {\n\n\tprivate _wantsAltCommand: boolean = false;\n\tprivate readonly _itemClassDispose = this._register(new MutableDisposable());\n\tprivate readonly _altKey: ModifierKeyEmitter;\n\n\tconstructor(\n\t\taction: MenuItemAction,\n\t\tprotected _options: T | undefined,\n\t\t@IKeybindingService protected readonly _keybindingService: IKeybindingService,\n\t\t@INotificationService protected _notificationService: INotificationService,\n\t\t@IContextKeyService protected _contextKeyService: IContextKeyService,\n\t\t@IThemeService protected _themeService: IThemeService,\n\t\t@IContextMenuService protected _contextMenuService: IContextMenuService,\n\t\t@IAccessibilityService private readonly _accessibilityService: IAccessibilityService\n\t) {\n\t\tsuper(undefined, action, { icon: !!(action.class || action.item.icon), label: !action.class && !action.item.icon, draggable: _options?.draggable, keybinding: _options?.keybinding, hoverDelegate: _options?.hoverDelegate });\n\t\tthis._altKey = ModifierKeyEmitter.getInstance();\n\t}\n\n\tprotected get _menuItemAction(): MenuItemAction {\n\t\treturn <MenuItemAction>this._action;\n\t}\n\n\tprotected get _commandAction(): MenuItemAction {\n\t\treturn this._wantsAltCommand && this._menuItemAction.alt || this._menuItemAction;\n\t}\n\n\toverride async onClick(event: MouseEvent): Promise<void> {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\ttry {\n\t\t\tawait this.actionRunner.run(this._commandAction, this._context);\n\t\t} catch (err) {\n\t\t\tthis._notificationService.error(err);\n\t\t}\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tsuper.render(container);\n\t\tcontainer.classList.add('menu-entry');\n\n\t\tif (this.options.icon) {\n\t\t\tthis._updateItemClass(this._menuItemAction.item);\n\t\t}\n\n\t\tif (this._menuItemAction.alt) {\n\t\t\tlet isMouseOver = false;\n\n\t\t\tconst updateAltState = () => {\n\t\t\t\tconst wantsAltCommand = !!this._menuItemAction.alt?.enabled &&\n\t\t\t\t\t(!this._accessibilityService.isMotionReduced() || isMouseOver) && (\n\t\t\t\t\t\tthis._altKey.keyStatus.altKey ||\n\t\t\t\t\t\t(this._altKey.keyStatus.shiftKey && isMouseOver)\n\t\t\t\t\t);\n\n\t\t\t\tif (wantsAltCommand !== this._wantsAltCommand) {\n\t\t\t\t\tthis._wantsAltCommand = wantsAltCommand;\n\t\t\t\t\tthis.updateLabel();\n\t\t\t\t\tthis.updateTooltip();\n\t\t\t\t\tthis.updateClass();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis._register(this._altKey.event(updateAltState));\n\n\t\t\tthis._register(addDisposableListener(container, 'mouseleave', _ => {\n\t\t\t\tisMouseOver = false;\n\t\t\t\tupdateAltState();\n\t\t\t}));\n\n\t\t\tthis._register(addDisposableListener(container, 'mouseenter', _ => {\n\t\t\t\tisMouseOver = true;\n\t\t\t\tupdateAltState();\n\t\t\t}));\n\n\t\t\tupdateAltState();\n\t\t}\n\t}\n\n\tprotected override updateLabel(): void {\n\t\tif (this.options.label && this.label) {\n\t\t\tthis.label.textContent = this._commandAction.label;\n\t\t}\n\t}\n\n\tprotected override getTooltip() {\n\t\tconst keybinding = this._keybindingService.lookupKeybinding(this._commandAction.id, this._contextKeyService);\n\t\tconst keybindingLabel = keybinding && keybinding.getLabel();\n\n\t\tconst tooltip = this._commandAction.tooltip || this._commandAction.label;\n\t\tlet title = keybindingLabel\n\t\t\t? localize('titleAndKb', \"{0} ({1})\", tooltip, keybindingLabel)\n\t\t\t: tooltip;\n\t\tif (!this._wantsAltCommand && this._menuItemAction.alt?.enabled) {\n\t\t\tconst altTooltip = this._menuItemAction.alt.tooltip || this._menuItemAction.alt.label;\n\t\t\tconst altKeybinding = this._keybindingService.lookupKeybinding(this._menuItemAction.alt.id, this._contextKeyService);\n\t\t\tconst altKeybindingLabel = altKeybinding && altKeybinding.getLabel();\n\t\t\tconst altTitleSection = altKeybindingLabel\n\t\t\t\t? localize('titleAndKb', \"{0} ({1})\", altTooltip, altKeybindingLabel)\n\t\t\t\t: altTooltip;\n\n\t\t\ttitle = localize('titleAndKbAndAlt', \"{0}\\n[{1}] {2}\", title, UILabelProvider.modifierLabels[OS].altKey, altTitleSection);\n\t\t}\n\t\treturn title;\n\t}\n\n\tprotected override updateClass(): void {\n\t\tif (this.options.icon) {\n\t\t\tif (this._commandAction !== this._menuItemAction) {\n\t\t\t\tif (this._menuItemAction.alt) {\n\t\t\t\t\tthis._updateItemClass(this._menuItemAction.alt.item);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._updateItemClass(this._menuItemAction.item);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _updateItemClass(item: ICommandAction): void {\n\t\tthis._itemClassDispose.value = undefined;\n\n\t\tconst { element, label } = this;\n\t\tif (!element || !label) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst icon = this._commandAction.checked && isICommandActionToggleInfo(item.toggled) && item.toggled.icon ? item.toggled.icon : item.icon;\n\n\t\tif (!icon) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (ThemeIcon.isThemeIcon(icon)) {\n\t\t\t// theme icons\n\t\t\tconst iconClasses = ThemeIcon.asClassNameArray(icon);\n\t\t\tlabel.classList.add(...iconClasses);\n\t\t\tthis._itemClassDispose.value = toDisposable(() => {\n\t\t\t\tlabel.classList.remove(...iconClasses);\n\t\t\t});\n\n\t\t} else {\n\t\t\t// icon path/url\n\t\t\tlabel.style.backgroundImage = (\n\t\t\t\tisDark(this._themeService.getColorTheme().type)\n\t\t\t\t\t? asCSSUrl(icon.dark)\n\t\t\t\t\t: asCSSUrl(icon.light)\n\t\t\t);\n\t\t\tlabel.classList.add('icon');\n\t\t\tthis._itemClassDispose.value = combinedDisposable(\n\t\t\t\ttoDisposable(() => {\n\t\t\t\t\tlabel.style.backgroundImage = '';\n\t\t\t\t\tlabel.classList.remove('icon');\n\t\t\t\t}),\n\t\t\t\tthis._themeService.onDidColorThemeChange(() => {\n\t\t\t\t\t// refresh when the theme changes in case we go between dark <-> light\n\t\t\t\t\tthis.updateClass();\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport interface ITextOnlyMenuEntryActionViewItemOptions extends IMenuEntryActionViewItemOptions {\n\tconversational?: boolean;\n\tuseComma?: boolean;\n}\n\nexport class TextOnlyMenuEntryActionViewItem extends MenuEntryActionViewItem<ITextOnlyMenuEntryActionViewItemOptions> {\n\n\toverride render(container: HTMLElement): void {\n\t\tthis.options.label = true;\n\t\tthis.options.icon = false;\n\t\tsuper.render(container);\n\t\tcontainer.classList.add('text-only');\n\t\tcontainer.classList.toggle('use-comma', this._options?.useComma ?? false);\n\t}\n\n\tprotected override updateLabel() {\n\t\tconst kb = this._keybindingService.lookupKeybinding(this._action.id, this._contextKeyService);\n\t\tif (!kb) {\n\t\t\treturn super.updateLabel();\n\t\t}\n\t\tif (this.label) {\n\t\t\tconst kb2 = TextOnlyMenuEntryActionViewItem._symbolPrintEnter(kb);\n\n\t\t\tif (this._options?.conversational) {\n\t\t\t\tthis.label.textContent = localize({ key: 'content2', comment: ['A label with keybindg like \"ESC to dismiss\"'] }, '{1} to {0}', this._action.label, kb2);\n\n\t\t\t} else {\n\t\t\t\tthis.label.textContent = localize({ key: 'content', comment: ['A label', 'A keybinding'] }, '{0} ({1})', this._action.label, kb2);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static _symbolPrintEnter(kb: ResolvedKeybinding) {\n\t\treturn kb.getLabel()\n\t\t\t?.replace(/\\benter\\b/gi, '\\u23CE')\n\t\t\t.replace(/\\bEscape\\b/gi, 'Esc');\n\t}\n}\n\nexport class SubmenuEntryActionViewItem extends DropdownMenuActionViewItem {\n\n\tconstructor(\n\t\taction: SubmenuItemAction,\n\t\toptions: IDropdownMenuActionViewItemOptions | undefined,\n\t\t@IKeybindingService protected _keybindingService: IKeybindingService,\n\t\t@IContextMenuService protected _contextMenuService: IContextMenuService,\n\t\t@IThemeService protected _themeService: IThemeService\n\t) {\n\t\tconst dropdownOptions: IDropdownMenuActionViewItemOptions = {\n\t\t\t...options,\n\t\t\tmenuAsChild: options?.menuAsChild ?? false,\n\t\t\tclassNames: options?.classNames ?? (ThemeIcon.isThemeIcon(action.item.icon) ? ThemeIcon.asClassName(action.item.icon) : undefined),\n\t\t\tkeybindingProvider: options?.keybindingProvider ?? (action => _keybindingService.lookupKeybinding(action.id))\n\t\t};\n\n\t\tsuper(action, { getActions: () => action.actions }, _contextMenuService, dropdownOptions);\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tsuper.render(container);\n\t\tassertType(this.element);\n\n\t\tcontainer.classList.add('menu-entry');\n\t\tconst action = <SubmenuItemAction>this._action;\n\t\tconst { icon } = action.item;\n\t\tif (icon && !ThemeIcon.isThemeIcon(icon)) {\n\t\t\tthis.element.classList.add('icon');\n\t\t\tconst setBackgroundImage = () => {\n\t\t\t\tif (this.element) {\n\t\t\t\t\tthis.element.style.backgroundImage = (\n\t\t\t\t\t\tisDark(this._themeService.getColorTheme().type)\n\t\t\t\t\t\t\t? asCSSUrl(icon.dark)\n\t\t\t\t\t\t\t: asCSSUrl(icon.light)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t};\n\t\t\tsetBackgroundImage();\n\t\t\tthis._register(this._themeService.onDidColorThemeChange(() => {\n\t\t\t\t// refresh when the theme changes in case we go between dark <-> light\n\t\t\t\tsetBackgroundImage();\n\t\t\t}));\n\t\t}\n\t}\n}\n\nexport interface IDropdownWithDefaultActionViewItemOptions extends IDropdownMenuActionViewItemOptions {\n\trenderKeybindingWithDefaultActionLabel?: boolean;\n\tpersistLastActionId?: boolean;\n}\n\nexport class DropdownWithDefaultActionViewItem extends BaseActionViewItem {\n\tprivate readonly _options: IDropdownWithDefaultActionViewItemOptions | undefined;\n\tprivate _defaultAction: ActionViewItem;\n\tprivate readonly _dropdown: DropdownMenuActionViewItem;\n\tprivate _container: HTMLElement | null = null;\n\tprivate readonly _storageKey: string;\n\n\tget onDidChangeDropdownVisibility(): Event<boolean> {\n\t\treturn this._dropdown.onDidChangeVisibility;\n\t}\n\n\tconstructor(\n\t\tsubmenuAction: SubmenuItemAction,\n\t\toptions: IDropdownWithDefaultActionViewItemOptions | undefined,\n\t\t@IKeybindingService protected readonly _keybindingService: IKeybindingService,\n\t\t@INotificationService protected _notificationService: INotificationService,\n\t\t@IContextMenuService protected _contextMenuService: IContextMenuService,\n\t\t@IMenuService protected _menuService: IMenuService,\n\t\t@IInstantiationService protected _instaService: IInstantiationService,\n\t\t@IStorageService protected _storageService: IStorageService\n\t) {\n\t\tsuper(null, submenuAction);\n\t\tthis._options = options;\n\t\tthis._storageKey = `${submenuAction.item.submenu.id}_lastActionId`;\n\n\t\t// determine default action\n\t\tlet defaultAction: IAction | undefined;\n\t\tconst defaultActionId = options?.persistLastActionId ? _storageService.get(this._storageKey, StorageScope.WORKSPACE) : undefined;\n\t\tif (defaultActionId) {\n\t\t\tdefaultAction = submenuAction.actions.find(a => defaultActionId === a.id);\n\t\t}\n\t\tif (!defaultAction) {\n\t\t\tdefaultAction = submenuAction.actions[0];\n\t\t}\n\n\t\tthis._defaultAction = this._instaService.createInstance(MenuEntryActionViewItem, <MenuItemAction>defaultAction, { keybinding: this._getDefaultActionKeybindingLabel(defaultAction) });\n\n\t\tconst dropdownOptions: IDropdownMenuActionViewItemOptions = {\n\t\t\tkeybindingProvider: action => this._keybindingService.lookupKeybinding(action.id),\n\t\t\t...options,\n\t\t\tmenuAsChild: options?.menuAsChild ?? true,\n\t\t\tclassNames: options?.classNames ?? ['codicon', 'codicon-chevron-down'],\n\t\t\tactionRunner: options?.actionRunner ?? new ActionRunner(),\n\t\t};\n\n\t\tthis._dropdown = new DropdownMenuActionViewItem(submenuAction, submenuAction.actions, this._contextMenuService, dropdownOptions);\n\t\tthis._register(this._dropdown.actionRunner.onDidRun((e: IRunEvent) => {\n\t\t\tif (e.action instanceof MenuItemAction) {\n\t\t\t\tthis.update(e.action);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate update(lastAction: MenuItemAction): void {\n\t\tif (this._options?.persistLastActionId) {\n\t\t\tthis._storageService.store(this._storageKey, lastAction.id, StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\t}\n\n\t\tthis._defaultAction.dispose();\n\t\tthis._defaultAction = this._instaService.createInstance(MenuEntryActionViewItem, lastAction, { keybinding: this._getDefaultActionKeybindingLabel(lastAction) });\n\t\tthis._defaultAction.actionRunner = new class extends ActionRunner {\n\t\t\tprotected override async runAction(action: IAction, context?: unknown): Promise<void> {\n\t\t\t\tawait action.run(undefined);\n\t\t\t}\n\t\t}();\n\n\t\tif (this._container) {\n\t\t\tthis._defaultAction.render(prepend(this._container, $('.action-container')));\n\t\t}\n\t}\n\n\tprivate _getDefaultActionKeybindingLabel(defaultAction: IAction) {\n\t\tlet defaultActionKeybinding: string | undefined;\n\t\tif (this._options?.renderKeybindingWithDefaultActionLabel) {\n\t\t\tconst kb = this._keybindingService.lookupKeybinding(defaultAction.id);\n\t\t\tif (kb) {\n\t\t\t\tdefaultActionKeybinding = `(${kb.getLabel()})`;\n\t\t\t}\n\t\t}\n\t\treturn defaultActionKeybinding;\n\t}\n\n\toverride setActionContext(newContext: unknown): void {\n\t\tsuper.setActionContext(newContext);\n\t\tthis._defaultAction.setActionContext(newContext);\n\t\tthis._dropdown.setActionContext(newContext);\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tthis._container = container;\n\t\tsuper.render(this._container);\n\n\t\tthis._container.classList.add('monaco-dropdown-with-default');\n\n\t\tconst primaryContainer = $('.action-container');\n\t\tthis._defaultAction.render(append(this._container, primaryContainer));\n\t\tthis._register(addDisposableListener(primaryContainer, EventType.KEY_DOWN, (e: KeyboardEvent) => {\n\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\tif (event.equals(KeyCode.RightArrow)) {\n\t\t\t\tthis._defaultAction.element!.tabIndex = -1;\n\t\t\t\tthis._dropdown.focus();\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t}));\n\n\t\tconst dropdownContainer = $('.dropdown-action-container');\n\t\tthis._dropdown.render(append(this._container, dropdownContainer));\n\t\tthis._register(addDisposableListener(dropdownContainer, EventType.KEY_DOWN, (e: KeyboardEvent) => {\n\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\tif (event.equals(KeyCode.LeftArrow)) {\n\t\t\t\tthis._defaultAction.element!.tabIndex = 0;\n\t\t\t\tthis._dropdown.setFocusable(false);\n\t\t\t\tthis._defaultAction.element?.focus();\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t}));\n\t}\n\n\toverride focus(fromRight?: boolean): void {\n\t\tif (fromRight) {\n\t\t\tthis._dropdown.focus();\n\t\t} else {\n\t\t\tthis._defaultAction.element!.tabIndex = 0;\n\t\t\tthis._defaultAction.element!.focus();\n\t\t}\n\t}\n\n\toverride blur(): void {\n\t\tthis._defaultAction.element!.tabIndex = -1;\n\t\tthis._dropdown.blur();\n\t\tthis._container!.blur();\n\t}\n\n\toverride setFocusable(focusable: boolean): void {\n\t\tif (focusable) {\n\t\t\tthis._defaultAction.element!.tabIndex = 0;\n\t\t} else {\n\t\t\tthis._defaultAction.element!.tabIndex = -1;\n\t\t\tthis._dropdown.setFocusable(false);\n\t\t}\n\t}\n\n\toverride dispose() {\n\t\tthis._defaultAction.dispose();\n\t\tthis._dropdown.dispose();\n\t\tsuper.dispose();\n\t}\n}\n\nclass SubmenuEntrySelectActionViewItem extends SelectActionViewItem {\n\n\tconstructor(\n\t\taction: SubmenuItemAction,\n\t\t@IContextViewService contextViewService: IContextViewService\n\t) {\n\t\tsuper(null, action, action.actions.map(a => ({\n\t\t\ttext: a.id === Separator.ID ? '\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500' : a.label,\n\t\t\tisDisabled: !a.enabled,\n\t\t})), 0, contextViewService, defaultSelectBoxStyles, { ariaLabel: action.tooltip, optionsAsChildren: true });\n\t\tthis.select(Math.max(0, action.actions.findIndex(a => a.checked)));\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tsuper.render(container);\n\t\tcontainer.style.borderColor = asCssVariable(selectBorder);\n\t}\n\n\tprotected override runAction(option: string, index: number): void {\n\t\tconst action = (this.action as SubmenuItemAction).actions[index];\n\t\tif (action) {\n\t\t\tthis.actionRunner.run(action);\n\t\t}\n\t}\n\n}\n\n/**\n * Creates action view items for menu actions or submenu actions.\n */\nexport function createActionViewItem(instaService: IInstantiationService, action: IAction, options: IDropdownMenuActionViewItemOptions | IMenuEntryActionViewItemOptions | undefined): undefined | MenuEntryActionViewItem | SubmenuEntryActionViewItem | BaseActionViewItem {\n\tif (action instanceof MenuItemAction) {\n\t\treturn instaService.createInstance(MenuEntryActionViewItem, action, options);\n\t} else if (action instanceof SubmenuItemAction) {\n\t\tif (action.item.isSelection) {\n\t\t\treturn instaService.createInstance(SubmenuEntrySelectActionViewItem, action);\n\t\t} else {\n\t\t\tif (action.item.rememberDefaultAction) {\n\t\t\t\treturn instaService.createInstance(DropdownWithDefaultActionViewItem, action, { ...options, persistLastActionId: true });\n\t\t\t} else {\n\t\t\t\treturn instaService.createInstance(SubmenuEntryActionViewItem, action, options);\n\t\t\t}\n\t\t}\n\t} else {\n\t\treturn undefined;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["target", "action"]
}
