{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/actions/browser/menuEntryActionViewItem.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\t$,\n\tEventType,\n\tModifierKeyEmitter,\n\taddDisposableListener,\n\tappend,\n\tasCSSUrl,\n\tprepend,\n} from \"../../../base/browser/dom.js\";\nimport { StandardKeyboardEvent } from \"../../../base/browser/keyboardEvent.js\";\nimport {\n\tActionViewItem,\n\tBaseActionViewItem,\n\tSelectActionViewItem,\n} from \"../../../base/browser/ui/actionbar/actionViewItems.js\";\nimport {\n\tDropdownMenuActionViewItem,\n\ttype IDropdownMenuActionViewItemOptions,\n} from \"../../../base/browser/ui/dropdown/dropdownActionViewItem.js\";\nimport {\n\tActionRunner,\n\ttype IAction,\n\ttype IRunEvent,\n\tSeparator,\n\tSubmenuAction,\n} from \"../../../base/common/actions.js\";\nimport type { Event } from \"../../../base/common/event.js\";\nimport { KeyCode } from \"../../../base/common/keyCodes.js\";\nimport { UILabelProvider } from \"../../../base/common/keybindingLabels.js\";\nimport {\n\tMutableDisposable,\n\tcombinedDisposable,\n\ttoDisposable,\n} from \"../../../base/common/lifecycle.js\";\nimport { OS, isLinux, isWindows } from \"../../../base/common/platform.js\";\nimport \"./menuEntryActionViewItem.css\";\nimport type { IHoverDelegate } from \"../../../base/browser/ui/hover/hoverDelegate.js\";\nimport type { ResolvedKeybinding } from \"../../../base/common/keybindings.js\";\nimport { ThemeIcon } from \"../../../base/common/themables.js\";\nimport { assertType } from \"../../../base/common/types.js\";\nimport { localize } from \"../../../nls.js\";\nimport { IAccessibilityService } from \"../../accessibility/common/accessibility.js\";\nimport {\n\ttype ICommandAction,\n\tisICommandActionToggleInfo,\n} from \"../../action/common/action.js\";\nimport { IContextKeyService } from \"../../contextkey/common/contextkey.js\";\nimport {\n\tIContextMenuService,\n\tIContextViewService,\n} from \"../../contextview/browser/contextView.js\";\nimport { IInstantiationService } from \"../../instantiation/common/instantiation.js\";\nimport { IKeybindingService } from \"../../keybinding/common/keybinding.js\";\nimport { INotificationService } from \"../../notification/common/notification.js\";\nimport {\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../storage/common/storage.js\";\nimport { defaultSelectBoxStyles } from \"../../theme/browser/defaultStyles.js\";\nimport {\n\tasCssVariable,\n\tselectBorder,\n} from \"../../theme/common/colorRegistry.js\";\nimport { isDark } from \"../../theme/common/theme.js\";\nimport { IThemeService } from \"../../theme/common/themeService.js\";\nimport {\n\ttype IMenu,\n\ttype IMenuActionOptions,\n\tIMenuService,\n\tMenuItemAction,\n\tSubmenuItemAction,\n} from \"../common/actions.js\";\n\nexport function createAndFillInContextMenuActions(\n\tmenu: IMenu,\n\toptions: IMenuActionOptions | undefined,\n\ttarget: IAction[] | { primary: IAction[]; secondary: IAction[] },\n\tprimaryGroup?: string,\n): void;\nexport function createAndFillInContextMenuActions(\n\tmenu: [string, Array<MenuItemAction | SubmenuItemAction>][],\n\ttarget: IAction[] | { primary: IAction[]; secondary: IAction[] },\n\tprimaryGroup?: string,\n): void;\nexport function createAndFillInContextMenuActions(\n\tmenu: IMenu | [string, Array<MenuItemAction | SubmenuItemAction>][],\n\toptionsOrTarget:\n\t\t| IMenuActionOptions\n\t\t| undefined\n\t\t| IAction[]\n\t\t| { primary: IAction[]; secondary: IAction[] },\n\ttargetOrPrimaryGroup?:\n\t\t| IAction[]\n\t\t| { primary: IAction[]; secondary: IAction[] }\n\t\t| string,\n\tprimaryGroupOrUndefined?: string,\n): void {\n\tlet target: IAction[] | { primary: IAction[]; secondary: IAction[] };\n\tlet primaryGroup: string | ((actionGroup: string) => boolean) | undefined;\n\tlet groups: [string, Array<MenuItemAction | SubmenuItemAction>][];\n\tif (Array.isArray(menu)) {\n\t\tgroups = menu;\n\t\ttarget = optionsOrTarget as\n\t\t\t| IAction[]\n\t\t\t| { primary: IAction[]; secondary: IAction[] };\n\t\tprimaryGroup = targetOrPrimaryGroup as string | undefined;\n\t} else {\n\t\tconst options: IMenuActionOptions | undefined = optionsOrTarget as\n\t\t\t| IMenuActionOptions\n\t\t\t| undefined;\n\t\tgroups = menu.getActions(options);\n\t\ttarget = targetOrPrimaryGroup as\n\t\t\t| IAction[]\n\t\t\t| { primary: IAction[]; secondary: IAction[] };\n\t\tprimaryGroup = primaryGroupOrUndefined;\n\t}\n\n\tconst modifierKeyEmitter = ModifierKeyEmitter.getInstance();\n\tconst useAlternativeActions =\n\t\tmodifierKeyEmitter.keyStatus.altKey ||\n\t\t((isWindows || isLinux) && modifierKeyEmitter.keyStatus.shiftKey);\n\tfillInActions(\n\t\tgroups,\n\t\ttarget,\n\t\tuseAlternativeActions,\n\t\tprimaryGroup\n\t\t\t? (actionGroup) => actionGroup === primaryGroup\n\t\t\t: (actionGroup) => actionGroup === \"navigation\",\n\t);\n}\n\nexport function createAndFillInActionBarActions(\n\tmenu: IMenu,\n\toptions: IMenuActionOptions | undefined,\n\ttarget: IAction[] | { primary: IAction[]; secondary: IAction[] },\n\tprimaryGroup?: string | ((actionGroup: string) => boolean),\n\tshouldInlineSubmenu?: (\n\t\taction: SubmenuAction,\n\t\tgroup: string,\n\t\tgroupSize: number,\n\t) => boolean,\n\tuseSeparatorsInPrimaryActions?: boolean,\n): void;\nexport function createAndFillInActionBarActions(\n\tmenu: [string, Array<MenuItemAction | SubmenuItemAction>][],\n\ttarget: IAction[] | { primary: IAction[]; secondary: IAction[] },\n\tprimaryGroup?: string | ((actionGroup: string) => boolean),\n\tshouldInlineSubmenu?: (\n\t\taction: SubmenuAction,\n\t\tgroup: string,\n\t\tgroupSize: number,\n\t) => boolean,\n\tuseSeparatorsInPrimaryActions?: boolean,\n): void;\nexport function createAndFillInActionBarActions(\n\tmenu: IMenu | [string, Array<MenuItemAction | SubmenuItemAction>][],\n\toptionsOrTarget:\n\t\t| IMenuActionOptions\n\t\t| undefined\n\t\t| IAction[]\n\t\t| { primary: IAction[]; secondary: IAction[] },\n\ttargetOrPrimaryGroup?:\n\t\t| IAction[]\n\t\t| { primary: IAction[]; secondary: IAction[] }\n\t\t| string\n\t\t| ((actionGroup: string) => boolean),\n\tprimaryGroupOrShouldInlineSubmenu?:\n\t\t| string\n\t\t| ((actionGroup: string) => boolean)\n\t\t| ((\n\t\t\t\taction: SubmenuAction,\n\t\t\t\tgroup: string,\n\t\t\t\tgroupSize: number,\n\t\t  ) => boolean),\n\tshouldInlineSubmenuOrUseSeparatorsInPrimaryActions?:\n\t\t| ((action: SubmenuAction, group: string, groupSize: number) => boolean)\n\t\t| boolean,\n\tuseSeparatorsInPrimaryActionsOrUndefined?: boolean,\n): void {\n\tlet target: IAction[] | { primary: IAction[]; secondary: IAction[] };\n\tlet primaryGroup: string | ((actionGroup: string) => boolean) | undefined;\n\tlet shouldInlineSubmenu:\n\t\t| ((action: SubmenuAction, group: string, groupSize: number) => boolean)\n\t\t| undefined;\n\tlet useSeparatorsInPrimaryActions: boolean | undefined;\n\tlet groups: [string, Array<MenuItemAction | SubmenuItemAction>][];\n\tif (Array.isArray(menu)) {\n\t\tgroups = menu;\n\t\ttarget = optionsOrTarget as\n\t\t\t| IAction[]\n\t\t\t| { primary: IAction[]; secondary: IAction[] };\n\t\tprimaryGroup = targetOrPrimaryGroup as\n\t\t\t| string\n\t\t\t| ((actionGroup: string) => boolean)\n\t\t\t| undefined;\n\t\tshouldInlineSubmenu = primaryGroupOrShouldInlineSubmenu as (\n\t\t\taction: SubmenuAction,\n\t\t\tgroup: string,\n\t\t\tgroupSize: number,\n\t\t) => boolean;\n\t\tuseSeparatorsInPrimaryActions =\n\t\t\tshouldInlineSubmenuOrUseSeparatorsInPrimaryActions as\n\t\t\t\t| boolean\n\t\t\t\t| undefined;\n\t} else {\n\t\tconst options: IMenuActionOptions | undefined = optionsOrTarget as\n\t\t\t| IMenuActionOptions\n\t\t\t| undefined;\n\t\tgroups = menu.getActions(options);\n\t\ttarget = targetOrPrimaryGroup as\n\t\t\t| IAction[]\n\t\t\t| { primary: IAction[]; secondary: IAction[] };\n\t\tprimaryGroup = primaryGroupOrShouldInlineSubmenu as\n\t\t\t| string\n\t\t\t| ((actionGroup: string) => boolean)\n\t\t\t| undefined;\n\t\tshouldInlineSubmenu =\n\t\t\tshouldInlineSubmenuOrUseSeparatorsInPrimaryActions as (\n\t\t\t\taction: SubmenuAction,\n\t\t\t\tgroup: string,\n\t\t\t\tgroupSize: number,\n\t\t\t) => boolean;\n\t\tuseSeparatorsInPrimaryActions =\n\t\t\tuseSeparatorsInPrimaryActionsOrUndefined;\n\t}\n\n\tconst isPrimaryAction =\n\t\ttypeof primaryGroup === \"string\"\n\t\t\t? (actionGroup: string) => actionGroup === primaryGroup\n\t\t\t: primaryGroup;\n\n\t// Action bars handle alternative actions on their own so the alternative actions should be ignored\n\tfillInActions(\n\t\tgroups,\n\t\ttarget,\n\t\tfalse,\n\t\tisPrimaryAction,\n\t\tshouldInlineSubmenu,\n\t\tuseSeparatorsInPrimaryActions,\n\t);\n}\n\nfunction fillInActions(\n\tgroups: ReadonlyArray<\n\t\t[string, ReadonlyArray<MenuItemAction | SubmenuItemAction>]\n\t>,\n\ttarget: IAction[] | { primary: IAction[]; secondary: IAction[] },\n\tuseAlternativeActions: boolean,\n\tisPrimaryAction: (actionGroup: string) => boolean = (actionGroup) =>\n\t\tactionGroup === \"navigation\",\n\tshouldInlineSubmenu: (\n\t\taction: SubmenuAction,\n\t\tgroup: string,\n\t\tgroupSize: number,\n\t) => boolean = () => false,\n\tuseSeparatorsInPrimaryActions = false,\n): void {\n\tlet primaryBucket: IAction[];\n\tlet secondaryBucket: IAction[];\n\tif (Array.isArray(target)) {\n\t\tprimaryBucket = target;\n\t\tsecondaryBucket = target;\n\t} else {\n\t\tprimaryBucket = target.primary;\n\t\tsecondaryBucket = target.secondary;\n\t}\n\n\tconst submenuInfo = new Set<{\n\t\tgroup: string;\n\t\taction: SubmenuAction;\n\t\tindex: number;\n\t}>();\n\n\tfor (const [group, actions] of groups) {\n\t\tlet target: IAction[];\n\t\tif (isPrimaryAction(group)) {\n\t\t\ttarget = primaryBucket;\n\t\t\tif (target.length > 0 && useSeparatorsInPrimaryActions) {\n\t\t\t\ttarget.push(new Separator());\n\t\t\t}\n\t\t} else {\n\t\t\ttarget = secondaryBucket;\n\t\t\tif (target.length > 0) {\n\t\t\t\ttarget.push(new Separator());\n\t\t\t}\n\t\t}\n\n\t\tfor (let action of actions) {\n\t\t\tif (useAlternativeActions) {\n\t\t\t\taction =\n\t\t\t\t\taction instanceof MenuItemAction && action.alt\n\t\t\t\t\t\t? action.alt\n\t\t\t\t\t\t: action;\n\t\t\t}\n\t\t\tconst newLen = target.push(action);\n\t\t\t// keep submenu info for later inlining\n\t\t\tif (action instanceof SubmenuAction) {\n\t\t\t\tsubmenuInfo.add({ group, action, index: newLen - 1 });\n\t\t\t}\n\t\t}\n\t}\n\n\t// ask the outside if submenu should be inlined or not. only ask when\n\t// there would be enough space\n\tfor (const { group, action, index } of submenuInfo) {\n\t\tconst target = isPrimaryAction(group) ? primaryBucket : secondaryBucket;\n\n\t\t// inlining submenus with length 0 or 1 is easy,\n\t\t// larger submenus need to be checked with the overall limit\n\t\tconst submenuActions = action.actions;\n\t\tif (shouldInlineSubmenu(action, group, target.length)) {\n\t\t\ttarget.splice(index, 1, ...submenuActions);\n\t\t}\n\t}\n}\n\nexport interface IMenuEntryActionViewItemOptions {\n\tdraggable?: boolean;\n\tkeybinding?: string;\n\thoverDelegate?: IHoverDelegate;\n}\n\nexport class MenuEntryActionViewItem<\n\tT extends IMenuEntryActionViewItemOptions = IMenuEntryActionViewItemOptions,\n> extends ActionViewItem {\n\tprivate _wantsAltCommand = false;\n\tprivate readonly _itemClassDispose = this._register(\n\t\tnew MutableDisposable(),\n\t);\n\tprivate readonly _altKey: ModifierKeyEmitter;\n\n\tconstructor(\n\t\taction: MenuItemAction,\n\t\tprotected _options: T | undefined,\n\t\t@IKeybindingService\n\t\tprotected readonly _keybindingService: IKeybindingService,\n\t\t@INotificationService\n\t\tprotected _notificationService: INotificationService,\n\t\t@IContextKeyService protected _contextKeyService: IContextKeyService,\n\t\t@IThemeService protected _themeService: IThemeService,\n\t\t@IContextMenuService protected _contextMenuService: IContextMenuService,\n\t\t@IAccessibilityService\n\t\tprivate readonly _accessibilityService: IAccessibilityService,\n\t) {\n\t\tsuper(undefined, action, {\n\t\t\ticon: !!(action.class || action.item.icon),\n\t\t\tlabel: !action.class && !action.item.icon,\n\t\t\tdraggable: _options?.draggable,\n\t\t\tkeybinding: _options?.keybinding,\n\t\t\thoverDelegate: _options?.hoverDelegate,\n\t\t});\n\t\tthis._altKey = ModifierKeyEmitter.getInstance();\n\t}\n\n\tprotected get _menuItemAction(): MenuItemAction {\n\t\treturn <MenuItemAction>this._action;\n\t}\n\n\tprotected get _commandAction(): MenuItemAction {\n\t\treturn (\n\t\t\t(this._wantsAltCommand && this._menuItemAction.alt) ||\n\t\t\tthis._menuItemAction\n\t\t);\n\t}\n\n\toverride async onClick(event: MouseEvent): Promise<void> {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\ttry {\n\t\t\tawait this.actionRunner.run(this._commandAction, this._context);\n\t\t} catch (err) {\n\t\t\tthis._notificationService.error(err);\n\t\t}\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tsuper.render(container);\n\t\tcontainer.classList.add(\"menu-entry\");\n\n\t\tif (this.options.icon) {\n\t\t\tthis._updateItemClass(this._menuItemAction.item);\n\t\t}\n\n\t\tif (this._menuItemAction.alt) {\n\t\t\tlet isMouseOver = false;\n\n\t\t\tconst updateAltState = () => {\n\t\t\t\tconst wantsAltCommand =\n\t\t\t\t\t!!this._menuItemAction.alt?.enabled &&\n\t\t\t\t\t(!this._accessibilityService.isMotionReduced() ||\n\t\t\t\t\t\tisMouseOver) &&\n\t\t\t\t\t(this._altKey.keyStatus.altKey ||\n\t\t\t\t\t\t(this._altKey.keyStatus.shiftKey && isMouseOver));\n\n\t\t\t\tif (wantsAltCommand !== this._wantsAltCommand) {\n\t\t\t\t\tthis._wantsAltCommand = wantsAltCommand;\n\t\t\t\t\tthis.updateLabel();\n\t\t\t\t\tthis.updateTooltip();\n\t\t\t\t\tthis.updateClass();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis._register(this._altKey.event(updateAltState));\n\n\t\t\tthis._register(\n\t\t\t\taddDisposableListener(container, \"mouseleave\", (_) => {\n\t\t\t\t\tisMouseOver = false;\n\t\t\t\t\tupdateAltState();\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tthis._register(\n\t\t\t\taddDisposableListener(container, \"mouseenter\", (_) => {\n\t\t\t\t\tisMouseOver = true;\n\t\t\t\t\tupdateAltState();\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tupdateAltState();\n\t\t}\n\t}\n\n\tprotected override updateLabel(): void {\n\t\tif (this.options.label && this.label) {\n\t\t\tthis.label.textContent = this._commandAction.label;\n\t\t}\n\t}\n\n\tprotected override getTooltip() {\n\t\tconst keybinding = this._keybindingService.lookupKeybinding(\n\t\t\tthis._commandAction.id,\n\t\t\tthis._contextKeyService,\n\t\t);\n\t\tconst keybindingLabel = keybinding && keybinding.getLabel();\n\n\t\tconst tooltip =\n\t\t\tthis._commandAction.tooltip || this._commandAction.label;\n\t\tlet title = keybindingLabel\n\t\t\t? localize(\"titleAndKb\", \"{0} ({1})\", tooltip, keybindingLabel)\n\t\t\t: tooltip;\n\t\tif (!this._wantsAltCommand && this._menuItemAction.alt?.enabled) {\n\t\t\tconst altTooltip =\n\t\t\t\tthis._menuItemAction.alt.tooltip ||\n\t\t\t\tthis._menuItemAction.alt.label;\n\t\t\tconst altKeybinding = this._keybindingService.lookupKeybinding(\n\t\t\t\tthis._menuItemAction.alt.id,\n\t\t\t\tthis._contextKeyService,\n\t\t\t);\n\t\t\tconst altKeybindingLabel =\n\t\t\t\taltKeybinding && altKeybinding.getLabel();\n\t\t\tconst altTitleSection = altKeybindingLabel\n\t\t\t\t? localize(\n\t\t\t\t\t\t\"titleAndKb\",\n\t\t\t\t\t\t\"{0} ({1})\",\n\t\t\t\t\t\taltTooltip,\n\t\t\t\t\t\taltKeybindingLabel,\n\t\t\t\t\t)\n\t\t\t\t: altTooltip;\n\n\t\t\ttitle = localize(\n\t\t\t\t\"titleAndKbAndAlt\",\n\t\t\t\t\"{0}\\n[{1}] {2}\",\n\t\t\t\ttitle,\n\t\t\t\tUILabelProvider.modifierLabels[OS].altKey,\n\t\t\t\taltTitleSection,\n\t\t\t);\n\t\t}\n\t\treturn title;\n\t}\n\n\tprotected override updateClass(): void {\n\t\tif (this.options.icon) {\n\t\t\tif (this._commandAction !== this._menuItemAction) {\n\t\t\t\tif (this._menuItemAction.alt) {\n\t\t\t\t\tthis._updateItemClass(this._menuItemAction.alt.item);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._updateItemClass(this._menuItemAction.item);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _updateItemClass(item: ICommandAction): void {\n\t\tthis._itemClassDispose.value = undefined;\n\n\t\tconst { element, label } = this;\n\t\tif (!element || !label) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst icon =\n\t\t\tthis._commandAction.checked &&\n\t\t\tisICommandActionToggleInfo(item.toggled) &&\n\t\t\titem.toggled.icon\n\t\t\t\t? item.toggled.icon\n\t\t\t\t: item.icon;\n\n\t\tif (!icon) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (ThemeIcon.isThemeIcon(icon)) {\n\t\t\t// theme icons\n\t\t\tconst iconClasses = ThemeIcon.asClassNameArray(icon);\n\t\t\tlabel.classList.add(...iconClasses);\n\t\t\tthis._itemClassDispose.value = toDisposable(() => {\n\t\t\t\tlabel.classList.remove(...iconClasses);\n\t\t\t});\n\t\t} else {\n\t\t\t// icon path/url\n\t\t\tlabel.style.backgroundImage = isDark(\n\t\t\t\tthis._themeService.getColorTheme().type,\n\t\t\t)\n\t\t\t\t? asCSSUrl(icon.dark)\n\t\t\t\t: asCSSUrl(icon.light);\n\t\t\tlabel.classList.add(\"icon\");\n\t\t\tthis._itemClassDispose.value = combinedDisposable(\n\t\t\t\ttoDisposable(() => {\n\t\t\t\t\tlabel.style.backgroundImage = \"\";\n\t\t\t\t\tlabel.classList.remove(\"icon\");\n\t\t\t\t}),\n\t\t\t\tthis._themeService.onDidColorThemeChange(() => {\n\t\t\t\t\t// refresh when the theme changes in case we go between dark <-> light\n\t\t\t\t\tthis.updateClass();\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport interface ITextOnlyMenuEntryActionViewItemOptions\n\textends IMenuEntryActionViewItemOptions {\n\tconversational?: boolean;\n\tuseComma?: boolean;\n}\n\nexport class TextOnlyMenuEntryActionViewItem extends MenuEntryActionViewItem<ITextOnlyMenuEntryActionViewItemOptions> {\n\toverride render(container: HTMLElement): void {\n\t\tthis.options.label = true;\n\t\tthis.options.icon = false;\n\t\tsuper.render(container);\n\t\tcontainer.classList.add(\"text-only\");\n\t\tcontainer.classList.toggle(\n\t\t\t\"use-comma\",\n\t\t\tthis._options?.useComma ?? false,\n\t\t);\n\t}\n\n\tprotected override updateLabel() {\n\t\tconst kb = this._keybindingService.lookupKeybinding(\n\t\t\tthis._action.id,\n\t\t\tthis._contextKeyService,\n\t\t);\n\t\tif (!kb) {\n\t\t\treturn super.updateLabel();\n\t\t}\n\t\tif (this.label) {\n\t\t\tconst kb2 = TextOnlyMenuEntryActionViewItem._symbolPrintEnter(kb);\n\n\t\t\tif (this._options?.conversational) {\n\t\t\t\tthis.label.textContent = localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"content2\",\n\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t'A label with keybindg like \"ESC to dismiss\"',\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\t\"{1} to {0}\",\n\t\t\t\t\tthis._action.label,\n\t\t\t\t\tkb2,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.label.textContent = localize(\n\t\t\t\t\t{ key: \"content\", comment: [\"A label\", \"A keybinding\"] },\n\t\t\t\t\t\"{0} ({1})\",\n\t\t\t\t\tthis._action.label,\n\t\t\t\t\tkb2,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static _symbolPrintEnter(kb: ResolvedKeybinding) {\n\t\treturn kb\n\t\t\t.getLabel()\n\t\t\t?.replace(/\\benter\\b/gi, \"\\u23CE\")\n\t\t\t.replace(/\\bEscape\\b/gi, \"Esc\");\n\t}\n}\n\nexport class SubmenuEntryActionViewItem extends DropdownMenuActionViewItem {\n\tconstructor(\n\t\taction: SubmenuItemAction,\n\t\toptions: IDropdownMenuActionViewItemOptions | undefined,\n\t\t@IKeybindingService protected _keybindingService: IKeybindingService,\n\t\t@IContextMenuService protected _contextMenuService: IContextMenuService,\n\t\t@IThemeService protected _themeService: IThemeService,\n\t) {\n\t\tconst dropdownOptions: IDropdownMenuActionViewItemOptions = {\n\t\t\t...options,\n\t\t\tmenuAsChild: options?.menuAsChild ?? false,\n\t\t\tclassNames:\n\t\t\t\toptions?.classNames ??\n\t\t\t\t(ThemeIcon.isThemeIcon(action.item.icon)\n\t\t\t\t\t? ThemeIcon.asClassName(action.item.icon)\n\t\t\t\t\t: undefined),\n\t\t\tkeybindingProvider:\n\t\t\t\toptions?.keybindingProvider ??\n\t\t\t\t((action) => _keybindingService.lookupKeybinding(action.id)),\n\t\t};\n\n\t\tsuper(\n\t\t\taction,\n\t\t\t{ getActions: () => action.actions },\n\t\t\t_contextMenuService,\n\t\t\tdropdownOptions,\n\t\t);\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tsuper.render(container);\n\t\tassertType(this.element);\n\n\t\tcontainer.classList.add(\"menu-entry\");\n\t\tconst action = <SubmenuItemAction>this._action;\n\t\tconst { icon } = action.item;\n\t\tif (icon && !ThemeIcon.isThemeIcon(icon)) {\n\t\t\tthis.element.classList.add(\"icon\");\n\t\t\tconst setBackgroundImage = () => {\n\t\t\t\tif (this.element) {\n\t\t\t\t\tthis.element.style.backgroundImage = isDark(\n\t\t\t\t\t\tthis._themeService.getColorTheme().type,\n\t\t\t\t\t)\n\t\t\t\t\t\t? asCSSUrl(icon.dark)\n\t\t\t\t\t\t: asCSSUrl(icon.light);\n\t\t\t\t}\n\t\t\t};\n\t\t\tsetBackgroundImage();\n\t\t\tthis._register(\n\t\t\t\tthis._themeService.onDidColorThemeChange(() => {\n\t\t\t\t\t// refresh when the theme changes in case we go between dark <-> light\n\t\t\t\t\tsetBackgroundImage();\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport interface IDropdownWithDefaultActionViewItemOptions\n\textends IDropdownMenuActionViewItemOptions {\n\trenderKeybindingWithDefaultActionLabel?: boolean;\n\tpersistLastActionId?: boolean;\n}\n\nexport class DropdownWithDefaultActionViewItem extends BaseActionViewItem {\n\tprivate readonly _options:\n\t\t| IDropdownWithDefaultActionViewItemOptions\n\t\t| undefined;\n\tprivate _defaultAction: ActionViewItem;\n\tprivate readonly _dropdown: DropdownMenuActionViewItem;\n\tprivate _container: HTMLElement | null = null;\n\tprivate readonly _storageKey: string;\n\n\tget onDidChangeDropdownVisibility(): Event<boolean> {\n\t\treturn this._dropdown.onDidChangeVisibility;\n\t}\n\n\tconstructor(\n\t\tsubmenuAction: SubmenuItemAction,\n\t\toptions: IDropdownWithDefaultActionViewItemOptions | undefined,\n\t\t@IKeybindingService\n\t\tprotected readonly _keybindingService: IKeybindingService,\n\t\t@INotificationService\n\t\tprotected _notificationService: INotificationService,\n\t\t@IContextMenuService protected _contextMenuService: IContextMenuService,\n\t\t@IMenuService protected _menuService: IMenuService,\n\t\t@IInstantiationService protected _instaService: IInstantiationService,\n\t\t@IStorageService protected _storageService: IStorageService,\n\t) {\n\t\tsuper(null, submenuAction);\n\t\tthis._options = options;\n\t\tthis._storageKey = `${submenuAction.item.submenu.id}_lastActionId`;\n\n\t\t// determine default action\n\t\tlet defaultAction: IAction | undefined;\n\t\tconst defaultActionId = options?.persistLastActionId\n\t\t\t? _storageService.get(this._storageKey, StorageScope.WORKSPACE)\n\t\t\t: undefined;\n\t\tif (defaultActionId) {\n\t\t\tdefaultAction = submenuAction.actions.find(\n\t\t\t\t(a) => defaultActionId === a.id,\n\t\t\t);\n\t\t}\n\t\tif (!defaultAction) {\n\t\t\tdefaultAction = submenuAction.actions[0];\n\t\t}\n\n\t\tthis._defaultAction = this._instaService.createInstance(\n\t\t\tMenuEntryActionViewItem,\n\t\t\t<MenuItemAction>defaultAction,\n\t\t\t{\n\t\t\t\tkeybinding:\n\t\t\t\t\tthis._getDefaultActionKeybindingLabel(defaultAction),\n\t\t\t},\n\t\t);\n\n\t\tconst dropdownOptions: IDropdownMenuActionViewItemOptions = {\n\t\t\tkeybindingProvider: (action) =>\n\t\t\t\tthis._keybindingService.lookupKeybinding(action.id),\n\t\t\t...options,\n\t\t\tmenuAsChild: options?.menuAsChild ?? true,\n\t\t\tclassNames: options?.classNames ?? [\n\t\t\t\t\"codicon\",\n\t\t\t\t\"codicon-chevron-down\",\n\t\t\t],\n\t\t\tactionRunner: options?.actionRunner ?? new ActionRunner(),\n\t\t};\n\n\t\tthis._dropdown = new DropdownMenuActionViewItem(\n\t\t\tsubmenuAction,\n\t\t\tsubmenuAction.actions,\n\t\t\tthis._contextMenuService,\n\t\t\tdropdownOptions,\n\t\t);\n\t\tthis._register(\n\t\t\tthis._dropdown.actionRunner.onDidRun((e: IRunEvent) => {\n\t\t\t\tif (e.action instanceof MenuItemAction) {\n\t\t\t\t\tthis.update(e.action);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate update(lastAction: MenuItemAction): void {\n\t\tif (this._options?.persistLastActionId) {\n\t\t\tthis._storageService.store(\n\t\t\t\tthis._storageKey,\n\t\t\t\tlastAction.id,\n\t\t\t\tStorageScope.WORKSPACE,\n\t\t\t\tStorageTarget.MACHINE,\n\t\t\t);\n\t\t}\n\n\t\tthis._defaultAction.dispose();\n\t\tthis._defaultAction = this._instaService.createInstance(\n\t\t\tMenuEntryActionViewItem,\n\t\t\tlastAction,\n\t\t\t{ keybinding: this._getDefaultActionKeybindingLabel(lastAction) },\n\t\t);\n\t\tthis._defaultAction.actionRunner = new (class extends ActionRunner {\n\t\t\tprotected override async runAction(\n\t\t\t\taction: IAction,\n\t\t\t\tcontext?: unknown,\n\t\t\t): Promise<void> {\n\t\t\t\tawait action.run(undefined);\n\t\t\t}\n\t\t})();\n\n\t\tif (this._container) {\n\t\t\tthis._defaultAction.render(\n\t\t\t\tprepend(this._container, $(\".action-container\")),\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _getDefaultActionKeybindingLabel(defaultAction: IAction) {\n\t\tlet defaultActionKeybinding: string | undefined;\n\t\tif (this._options?.renderKeybindingWithDefaultActionLabel) {\n\t\t\tconst kb = this._keybindingService.lookupKeybinding(\n\t\t\t\tdefaultAction.id,\n\t\t\t);\n\t\t\tif (kb) {\n\t\t\t\tdefaultActionKeybinding = `(${kb.getLabel()})`;\n\t\t\t}\n\t\t}\n\t\treturn defaultActionKeybinding;\n\t}\n\n\toverride setActionContext(newContext: unknown): void {\n\t\tsuper.setActionContext(newContext);\n\t\tthis._defaultAction.setActionContext(newContext);\n\t\tthis._dropdown.setActionContext(newContext);\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tthis._container = container;\n\t\tsuper.render(this._container);\n\n\t\tthis._container.classList.add(\"monaco-dropdown-with-default\");\n\n\t\tconst primaryContainer = $(\".action-container\");\n\t\tthis._defaultAction.render(append(this._container, primaryContainer));\n\t\tthis._register(\n\t\t\taddDisposableListener(\n\t\t\t\tprimaryContainer,\n\t\t\t\tEventType.KEY_DOWN,\n\t\t\t\t(e: KeyboardEvent) => {\n\t\t\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\t\t\tif (event.equals(KeyCode.RightArrow)) {\n\t\t\t\t\t\tthis._defaultAction.element!.tabIndex = -1;\n\t\t\t\t\t\tthis._dropdown.focus();\n\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tconst dropdownContainer = $(\".dropdown-action-container\");\n\t\tthis._dropdown.render(append(this._container, dropdownContainer));\n\t\tthis._register(\n\t\t\taddDisposableListener(\n\t\t\t\tdropdownContainer,\n\t\t\t\tEventType.KEY_DOWN,\n\t\t\t\t(e: KeyboardEvent) => {\n\t\t\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\t\t\tif (event.equals(KeyCode.LeftArrow)) {\n\t\t\t\t\t\tthis._defaultAction.element!.tabIndex = 0;\n\t\t\t\t\t\tthis._dropdown.setFocusable(false);\n\t\t\t\t\t\tthis._defaultAction.element?.focus();\n\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n\n\toverride focus(fromRight?: boolean): void {\n\t\tif (fromRight) {\n\t\t\tthis._dropdown.focus();\n\t\t} else {\n\t\t\tthis._defaultAction.element!.tabIndex = 0;\n\t\t\tthis._defaultAction.element!.focus();\n\t\t}\n\t}\n\n\toverride blur(): void {\n\t\tthis._defaultAction.element!.tabIndex = -1;\n\t\tthis._dropdown.blur();\n\t\tthis._container!.blur();\n\t}\n\n\toverride setFocusable(focusable: boolean): void {\n\t\tif (focusable) {\n\t\t\tthis._defaultAction.element!.tabIndex = 0;\n\t\t} else {\n\t\t\tthis._defaultAction.element!.tabIndex = -1;\n\t\t\tthis._dropdown.setFocusable(false);\n\t\t}\n\t}\n\n\toverride dispose() {\n\t\tthis._defaultAction.dispose();\n\t\tthis._dropdown.dispose();\n\t\tsuper.dispose();\n\t}\n}\n\nclass SubmenuEntrySelectActionViewItem extends SelectActionViewItem {\n\tconstructor(\n\t\taction: SubmenuItemAction,\n\t\t@IContextViewService contextViewService: IContextViewService,\n\t) {\n\t\tsuper(\n\t\t\tnull,\n\t\t\taction,\n\t\t\taction.actions.map((a) => ({\n\t\t\t\ttext:\n\t\t\t\t\ta.id === Separator.ID\n\t\t\t\t\t\t? \"\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\"\n\t\t\t\t\t\t: a.label,\n\t\t\t\tisDisabled: !a.enabled,\n\t\t\t})),\n\t\t\t0,\n\t\t\tcontextViewService,\n\t\t\tdefaultSelectBoxStyles,\n\t\t\t{ ariaLabel: action.tooltip, optionsAsChildren: true },\n\t\t);\n\t\tthis.select(\n\t\t\tMath.max(\n\t\t\t\t0,\n\t\t\t\taction.actions.findIndex((a) => a.checked),\n\t\t\t),\n\t\t);\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tsuper.render(container);\n\t\tcontainer.style.borderColor = asCssVariable(selectBorder);\n\t}\n\n\tprotected override runAction(option: string, index: number): void {\n\t\tconst action = (this.action as SubmenuItemAction).actions[index];\n\t\tif (action) {\n\t\t\tthis.actionRunner.run(action);\n\t\t}\n\t}\n}\n\n/**\n * Creates action view items for menu actions or submenu actions.\n */\nexport function createActionViewItem(\n\tinstaService: IInstantiationService,\n\taction: IAction,\n\toptions:\n\t\t| IDropdownMenuActionViewItemOptions\n\t\t| IMenuEntryActionViewItemOptions\n\t\t| undefined,\n):\n\t| undefined\n\t| MenuEntryActionViewItem\n\t| SubmenuEntryActionViewItem\n\t| BaseActionViewItem {\n\tif (action instanceof MenuItemAction) {\n\t\treturn instaService.createInstance(\n\t\t\tMenuEntryActionViewItem,\n\t\t\taction,\n\t\t\toptions,\n\t\t);\n\t} else if (action instanceof SubmenuItemAction) {\n\t\tif (action.item.isSelection) {\n\t\t\treturn instaService.createInstance(\n\t\t\t\tSubmenuEntrySelectActionViewItem,\n\t\t\t\taction,\n\t\t\t);\n\t\t} else if (action.item.rememberDefaultAction) {\n\t\t\treturn instaService.createInstance(\n\t\t\t\tDropdownWithDefaultActionViewItem,\n\t\t\t\taction,\n\t\t\t\t{ ...options, persistLastActionId: true },\n\t\t\t);\n\t\t} else {\n\t\t\treturn instaService.createInstance(\n\t\t\t\tSubmenuEntryActionViewItem,\n\t\t\t\taction,\n\t\t\t\toptions,\n\t\t\t);\n\t\t}\n\t} else {\n\t\treturn undefined;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["target", "action"]
}
