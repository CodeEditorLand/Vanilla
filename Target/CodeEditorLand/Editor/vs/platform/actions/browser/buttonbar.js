var M=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var b=(l,c,r,o)=>{for(var n=o>1?void 0:o?C(c,r):c,a=l.length-1,e;a>=0;a--)(e=l[a])&&(n=(o?e(c,r,n):e(n))||n);return o&&n&&M(c,r,n),n},s=(l,c)=>(r,o)=>c(r,o,l);import{ButtonBar as w}from"../../../../vs/base/browser/ui/button/button.js";import{createInstantHoverDelegate as B}from"../../../../vs/base/browser/ui/hover/hoverDelegateFactory.js";import{ActionRunner as D,SubmenuAction as L}from"../../../../vs/base/common/actions.js";import{Codicon as O}from"../../../../vs/base/common/codicons.js";import{Emitter as R}from"../../../../vs/base/common/event.js";import{DisposableStore as S}from"../../../../vs/base/common/lifecycle.js";import{ThemeIcon as k}from"../../../../vs/base/common/themables.js";import{localize as f}from"../../../../vs/nls.js";import{createAndFillInActionBarActions as E}from"../../../../vs/platform/actions/browser/menuEntryActionViewItem.js";import"../../../../vs/platform/actions/browser/toolbar.js";import{IMenuService as H,MenuItemAction as T}from"../../../../vs/platform/actions/common/actions.js";import{IContextKeyService as K}from"../../../../vs/platform/contextkey/common/contextkey.js";import{IContextMenuService as y}from"../../../../vs/platform/contextview/browser/contextView.js";import{IHoverService as _}from"../../../../vs/platform/hover/browser/hover.js";import{IKeybindingService as g}from"../../../../vs/platform/keybinding/common/keybinding.js";import{ITelemetryService as A}from"../../../../vs/platform/telemetry/common/telemetry.js";let h=class extends w{constructor(r,o,n,a,e,p){super(r);this._options=o;this._contextMenuService=n;this._keybindingService=a;this._hoverService=p;this._actionRunner=this._store.add(new D),o?.telemetrySource&&this._actionRunner.onDidRun(d=>{e.publicLog2("workbenchActionExecuted",{id:d.action.id,from:o.telemetrySource})},void 0,this._store)}_store=new S;_updateStore=new S;_actionRunner;_onDidChange=new R;onDidChange=this._onDidChange.event;dispose(){this._onDidChange.dispose(),this._updateStore.dispose(),this._store.dispose(),super.dispose()}update(r,o){const n=this._options?.buttonConfigProvider??(()=>({showLabel:!0}));this._updateStore.clear(),this.clear();const a=this._updateStore.add(B());for(let e=0;e<r.length;e++){const p=e>0,d=r[e];let t,i;if(d instanceof L&&d.actions.length>0){const[v,...x]=d.actions;t=v,i=this.addButtonWithDropdown({secondary:n(t,e)?.isSecondary??p,actionRunner:this._actionRunner,actions:x,contextMenuProvider:this._contextMenuService,ariaLabel:t.label})}else t=d,i=this.addButton({secondary:n(t,e)?.isSecondary??p,ariaLabel:t.label});i.enabled=t.enabled,i.checked=t.checked??!1,i.element.classList.add("default-colors"),n(t,e)?.showLabel??!0?i.label=t.label:i.element.classList.add("monaco-text-button"),n(t,e)?.showIcon&&(t instanceof T&&k.isThemeIcon(t.item.icon)?i.icon=t.item.icon:t.class&&i.element.classList.add(...t.class.split(" ")));const m=this._keybindingService.lookupKeybinding(t.id);let u;m?u=f("labelWithKeybinding","{0} ({1})",t.label,m.getLabel()):u=t.label,this._updateStore.add(this._hoverService.setupManagedHover(a,i.element,u)),this._updateStore.add(i.onDidClick(async()=>{this._actionRunner.run(t)}))}if(o.length>0){const e=this.addButton({secondary:!0,ariaLabel:f("moreActions","More Actions")});e.icon=O.dropDownButton,e.element.classList.add("default-colors","monaco-text-button"),e.enabled=!0,this._updateStore.add(this._hoverService.setupManagedHover(a,e.element,f("moreActions","More Actions"))),this._updateStore.add(e.onDidClick(async()=>{this._contextMenuService.showContextMenu({getAnchor:()=>e.element,getActions:()=>o,actionRunner:this._actionRunner,onHide:()=>e.element.setAttribute("aria-expanded","false")}),e.element.setAttribute("aria-expanded","true")}))}this._onDidChange.fire(this)}};h=b([s(2,y),s(3,g),s(4,A),s(5,_)],h);let I=class extends h{constructor(c,r,o,n,a,e,p,d,t){super(c,o,e,p,d,t);const i=n.createMenu(r,a);this._store.add(i);const m=()=>{this.clear();const u=[],v=[];E(i,o?.menuOptions,{primary:u,secondary:v},o?.toolbarOptions?.primaryGroup),super.update(u,v)};this._store.add(i.onDidChange(m)),m()}dispose(){super.dispose()}update(c){throw new Error("Use Menu or WorkbenchButtonBar")}};I=b([s(3,H),s(4,K),s(5,y),s(6,g),s(7,A),s(8,_)],I);export{I as MenuWorkbenchButtonBar,h as WorkbenchButtonBar};
