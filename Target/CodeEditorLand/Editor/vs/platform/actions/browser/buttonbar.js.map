{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/actions/browser/buttonbar.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ButtonBar, IButton } from '../../../base/browser/ui/button/button.js';\nimport { createInstantHoverDelegate } from '../../../base/browser/ui/hover/hoverDelegateFactory.js';\nimport { ActionRunner, IAction, IActionRunner, SubmenuAction, WorkbenchActionExecutedClassification, WorkbenchActionExecutedEvent } from '../../../base/common/actions.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { localize } from '../../../nls.js';\nimport { createAndFillInActionBarActions } from './menuEntryActionViewItem.js';\nimport { IToolBarRenderOptions } from './toolbar.js';\nimport { MenuId, IMenuService, MenuItemAction, IMenuActionOptions } from '../common/actions.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../contextview/browser/contextView.js';\nimport { IHoverService } from '../../hover/browser/hover.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { ITelemetryService } from '../../telemetry/common/telemetry.js';\n\nexport type IButtonConfigProvider = (action: IAction, index: number) => {\n\tshowIcon?: boolean;\n\tshowLabel?: boolean;\n\tisSecondary?: boolean;\n} | undefined;\n\nexport interface IWorkbenchButtonBarOptions {\n\ttelemetrySource?: string;\n\tbuttonConfigProvider?: IButtonConfigProvider;\n}\n\nexport class WorkbenchButtonBar extends ButtonBar {\n\n\tprotected readonly _store = new DisposableStore();\n\tprotected readonly _updateStore = new DisposableStore();\n\n\tprivate readonly _actionRunner: IActionRunner;\n\tprivate readonly _onDidChange = new Emitter<this>();\n\treadonly onDidChange: Event<this> = this._onDidChange.event;\n\n\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\tprivate readonly _options: IWorkbenchButtonBarOptions | undefined,\n\t\t@IContextMenuService private readonly _contextMenuService: IContextMenuService,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IHoverService private readonly _hoverService: IHoverService,\n\t) {\n\t\tsuper(container);\n\n\t\tthis._actionRunner = this._store.add(new ActionRunner());\n\t\tif (_options?.telemetrySource) {\n\t\t\tthis._actionRunner.onDidRun(e => {\n\t\t\t\ttelemetryService.publicLog2<WorkbenchActionExecutedEvent, WorkbenchActionExecutedClassification>(\n\t\t\t\t\t'workbenchActionExecuted',\n\t\t\t\t\t{ id: e.action.id, from: _options.telemetrySource! }\n\t\t\t\t);\n\t\t\t}, undefined, this._store);\n\t\t}\n\t}\n\n\toverride dispose() {\n\t\tthis._onDidChange.dispose();\n\t\tthis._updateStore.dispose();\n\t\tthis._store.dispose();\n\t\tsuper.dispose();\n\t}\n\n\tupdate(actions: IAction[], secondary: IAction[]): void {\n\n\t\tconst conifgProvider: IButtonConfigProvider = this._options?.buttonConfigProvider ?? (() => ({ showLabel: true }));\n\n\t\tthis._updateStore.clear();\n\t\tthis.clear();\n\n\t\t// Support instamt hover between buttons\n\t\tconst hoverDelegate = this._updateStore.add(createInstantHoverDelegate());\n\n\t\tfor (let i = 0; i < actions.length; i++) {\n\n\t\t\tconst secondary = i > 0;\n\t\t\tconst actionOrSubmenu = actions[i];\n\t\t\tlet action: IAction;\n\t\t\tlet btn: IButton;\n\n\t\t\tif (actionOrSubmenu instanceof SubmenuAction && actionOrSubmenu.actions.length > 0) {\n\t\t\t\tconst [first, ...rest] = actionOrSubmenu.actions;\n\t\t\t\taction = <MenuItemAction>first;\n\t\t\t\tbtn = this.addButtonWithDropdown({\n\t\t\t\t\tsecondary: conifgProvider(action, i)?.isSecondary ?? secondary,\n\t\t\t\t\tactionRunner: this._actionRunner,\n\t\t\t\t\tactions: rest,\n\t\t\t\t\tcontextMenuProvider: this._contextMenuService,\n\t\t\t\t\tariaLabel: action.label\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\taction = actionOrSubmenu;\n\t\t\t\tbtn = this.addButton({\n\t\t\t\t\tsecondary: conifgProvider(action, i)?.isSecondary ?? secondary,\n\t\t\t\t\tariaLabel: action.label\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tbtn.enabled = action.enabled;\n\t\t\tbtn.checked = action.checked ?? false;\n\t\t\tbtn.element.classList.add('default-colors');\n\t\t\tif (conifgProvider(action, i)?.showLabel ?? true) {\n\t\t\t\tbtn.label = action.label;\n\t\t\t} else {\n\t\t\t\tbtn.element.classList.add('monaco-text-button');\n\t\t\t}\n\t\t\tif (conifgProvider(action, i)?.showIcon) {\n\t\t\t\tif (action instanceof MenuItemAction && ThemeIcon.isThemeIcon(action.item.icon)) {\n\t\t\t\t\tbtn.icon = action.item.icon;\n\t\t\t\t} else if (action.class) {\n\t\t\t\t\tbtn.element.classList.add(...action.class.split(' '));\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst kb = this._keybindingService.lookupKeybinding(action.id);\n\t\t\tlet tooltip: string;\n\t\t\tif (kb) {\n\t\t\t\ttooltip = localize('labelWithKeybinding', \"{0} ({1})\", action.label, kb.getLabel());\n\t\t\t} else {\n\t\t\t\ttooltip = action.label;\n\t\t\t}\n\t\t\tthis._updateStore.add(this._hoverService.setupManagedHover(hoverDelegate, btn.element, tooltip));\n\t\t\tthis._updateStore.add(btn.onDidClick(async () => {\n\t\t\t\tthis._actionRunner.run(action);\n\t\t\t}));\n\t\t}\n\n\t\tif (secondary.length > 0) {\n\n\t\t\tconst btn = this.addButton({\n\t\t\t\tsecondary: true,\n\t\t\t\tariaLabel: localize('moreActions', \"More Actions\")\n\t\t\t});\n\n\t\t\tbtn.icon = Codicon.dropDownButton;\n\t\t\tbtn.element.classList.add('default-colors', 'monaco-text-button');\n\n\t\t\tbtn.enabled = true;\n\t\t\tthis._updateStore.add(this._hoverService.setupManagedHover(hoverDelegate, btn.element, localize('moreActions', \"More Actions\")));\n\t\t\tthis._updateStore.add(btn.onDidClick(async () => {\n\t\t\t\tthis._contextMenuService.showContextMenu({\n\t\t\t\t\tgetAnchor: () => btn.element,\n\t\t\t\t\tgetActions: () => secondary,\n\t\t\t\t\tactionRunner: this._actionRunner,\n\t\t\t\t\tonHide: () => btn.element.setAttribute('aria-expanded', 'false')\n\t\t\t\t});\n\t\t\t\tbtn.element.setAttribute('aria-expanded', 'true');\n\n\t\t\t}));\n\t\t}\n\t\tthis._onDidChange.fire(this);\n\t}\n}\n\nexport interface IMenuWorkbenchButtonBarOptions extends IWorkbenchButtonBarOptions {\n\tmenuOptions?: IMenuActionOptions;\n\n\ttoolbarOptions?: IToolBarRenderOptions;\n}\n\nexport class MenuWorkbenchButtonBar extends WorkbenchButtonBar {\n\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\tmenuId: MenuId,\n\t\toptions: IMenuWorkbenchButtonBarOptions | undefined,\n\t\t@IMenuService menuService: IMenuService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IHoverService hoverService: IHoverService,\n\t) {\n\t\tsuper(container, options, contextMenuService, keybindingService, telemetryService, hoverService);\n\n\t\tconst menu = menuService.createMenu(menuId, contextKeyService);\n\t\tthis._store.add(menu);\n\n\t\tconst update = () => {\n\n\t\t\tthis.clear();\n\n\t\t\tconst primary: IAction[] = [];\n\t\t\tconst secondary: IAction[] = [];\n\t\t\tcreateAndFillInActionBarActions(\n\t\t\t\tmenu,\n\t\t\t\toptions?.menuOptions,\n\t\t\t\t{ primary, secondary },\n\t\t\t\toptions?.toolbarOptions?.primaryGroup\n\t\t\t);\n\n\t\t\tsuper.update(primary, secondary);\n\t\t};\n\t\tthis._store.add(menu.onDidChange(update));\n\t\tupdate();\n\t}\n\n\toverride dispose() {\n\t\tsuper.dispose();\n\t}\n\n\toverride update(_actions: IAction[]): void {\n\t\tthrow new Error('Use Menu or WorkbenchButtonBar');\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,WAAW,eAAe;AACnC,SAAS,kCAAkC;AAC3C,SAAS,cAAc,SAAS,eAAe,eAAe,uCAAuC,oCAAoC;AACzI,SAAS,eAAe;AACxB,SAAS,SAAS,aAAa;AAC/B,SAAS,uBAAuB;AAChC,SAAS,iBAAiB;AAC1B,SAAS,gBAAgB;AACzB,SAAS,uCAAuC;AAChD,SAAS,6BAA6B;AACtC,SAAS,QAAQ,cAAc,gBAAgB,0BAA0B;AACzE,SAAS,0BAA0B;AACnC,SAAS,2BAA2B;AACpC,SAAS,qBAAqB;AAC9B,SAAS,0BAA0B;AACnC,SAAS,yBAAyB;AAa3B,IAAM,qBAAN,cAAiC,UAAU;AAAA,EAUjD,YACC,WACiB,UACqB,qBACD,oBAClB,kBACa,eAC/B;AACD,UAAM,SAAS;AANE;AACqB;AACD;AAEL;AAIhC,SAAK,gBAAgB,KAAK,OAAO,IAAI,IAAI,aAAa,CAAC;AACvD,QAAI,UAAU,iBAAiB;AAC9B,WAAK,cAAc,SAAS,OAAK;AAChC,yBAAiB;AAAA,UAChB;AAAA,UACA,EAAE,IAAI,EAAE,OAAO,IAAI,MAAM,SAAS,gBAAiB;AAAA,QACpD;AAAA,MACD,GAAG,QAAW,KAAK,MAAM;AAAA,IAC1B;AAAA,EACD;AAAA,EA9DD,OAiCkD;AAAA;AAAA;AAAA,EAE9B,SAAS,IAAI,gBAAgB;AAAA,EAC7B,eAAe,IAAI,gBAAgB;AAAA,EAErC;AAAA,EACA,eAAe,IAAI,QAAc;AAAA,EACzC,cAA2B,KAAK,aAAa;AAAA,EAwB7C,UAAU;AAClB,SAAK,aAAa,QAAQ;AAC1B,SAAK,aAAa,QAAQ;AAC1B,SAAK,OAAO,QAAQ;AACpB,UAAM,QAAQ;AAAA,EACf;AAAA,EAEA,OAAO,SAAoB,WAA4B;AAEtD,UAAM,iBAAwC,KAAK,UAAU,yBAAyB,OAAO,EAAE,WAAW,KAAK;AAE/G,SAAK,aAAa,MAAM;AACxB,SAAK,MAAM;AAGX,UAAM,gBAAgB,KAAK,aAAa,IAAI,2BAA2B,CAAC;AAExE,aAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AAExC,YAAMA,aAAY,IAAI;AACtB,YAAM,kBAAkB,QAAQ,CAAC;AACjC,UAAI;AACJ,UAAI;AAEJ,UAAI,2BAA2B,iBAAiB,gBAAgB,QAAQ,SAAS,GAAG;AACnF,cAAM,CAAC,OAAO,GAAG,IAAI,IAAI,gBAAgB;AACzC,iBAAyB;AACzB,cAAM,KAAK,sBAAsB;AAAA,UAChC,WAAW,eAAe,QAAQ,CAAC,GAAG,eAAeA;AAAA,UACrD,cAAc,KAAK;AAAA,UACnB,SAAS;AAAA,UACT,qBAAqB,KAAK;AAAA,UAC1B,WAAW,OAAO;AAAA,QACnB,CAAC;AAAA,MACF,OAAO;AACN,iBAAS;AACT,cAAM,KAAK,UAAU;AAAA,UACpB,WAAW,eAAe,QAAQ,CAAC,GAAG,eAAeA;AAAA,UACrD,WAAW,OAAO;AAAA,QACnB,CAAC;AAAA,MACF;AAEA,UAAI,UAAU,OAAO;AACrB,UAAI,UAAU,OAAO,WAAW;AAChC,UAAI,QAAQ,UAAU,IAAI,gBAAgB;AAC1C,UAAI,eAAe,QAAQ,CAAC,GAAG,aAAa,MAAM;AACjD,YAAI,QAAQ,OAAO;AAAA,MACpB,OAAO;AACN,YAAI,QAAQ,UAAU,IAAI,oBAAoB;AAAA,MAC/C;AACA,UAAI,eAAe,QAAQ,CAAC,GAAG,UAAU;AACxC,YAAI,kBAAkB,kBAAkB,UAAU,YAAY,OAAO,KAAK,IAAI,GAAG;AAChF,cAAI,OAAO,OAAO,KAAK;AAAA,QACxB,WAAW,OAAO,OAAO;AACxB,cAAI,QAAQ,UAAU,IAAI,GAAG,OAAO,MAAM,MAAM,GAAG,CAAC;AAAA,QACrD;AAAA,MACD;AACA,YAAM,KAAK,KAAK,mBAAmB,iBAAiB,OAAO,EAAE;AAC7D,UAAI;AACJ,UAAI,IAAI;AACP,kBAAU,SAAS,uBAAuB,aAAa,OAAO,OAAO,GAAG,SAAS,CAAC;AAAA,MACnF,OAAO;AACN,kBAAU,OAAO;AAAA,MAClB;AACA,WAAK,aAAa,IAAI,KAAK,cAAc,kBAAkB,eAAe,IAAI,SAAS,OAAO,CAAC;AAC/F,WAAK,aAAa,IAAI,IAAI,WAAW,YAAY;AAChD,aAAK,cAAc,IAAI,MAAM;AAAA,MAC9B,CAAC,CAAC;AAAA,IACH;AAEA,QAAI,UAAU,SAAS,GAAG;AAEzB,YAAM,MAAM,KAAK,UAAU;AAAA,QAC1B,WAAW;AAAA,QACX,WAAW,SAAS,eAAe,cAAc;AAAA,MAClD,CAAC;AAED,UAAI,OAAO,QAAQ;AACnB,UAAI,QAAQ,UAAU,IAAI,kBAAkB,oBAAoB;AAEhE,UAAI,UAAU;AACd,WAAK,aAAa,IAAI,KAAK,cAAc,kBAAkB,eAAe,IAAI,SAAS,SAAS,eAAe,cAAc,CAAC,CAAC;AAC/H,WAAK,aAAa,IAAI,IAAI,WAAW,YAAY;AAChD,aAAK,oBAAoB,gBAAgB;AAAA,UACxC,WAAW,6BAAM,IAAI,SAAV;AAAA,UACX,YAAY,6BAAM,WAAN;AAAA,UACZ,cAAc,KAAK;AAAA,UACnB,QAAQ,6BAAM,IAAI,QAAQ,aAAa,iBAAiB,OAAO,GAAvD;AAAA,QACT,CAAC;AACD,YAAI,QAAQ,aAAa,iBAAiB,MAAM;AAAA,MAEjD,CAAC,CAAC;AAAA,IACH;AACA,SAAK,aAAa,KAAK,IAAI;AAAA,EAC5B;AACD;AA9Ha,qBAAN;AAAA,EAaJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAhBU;AAsIN,IAAM,yBAAN,cAAqC,mBAAmB;AAAA,EAvK/D,OAuK+D;AAAA;AAAA;AAAA,EAE9D,YACC,WACA,QACA,SACc,aACM,mBACC,oBACD,mBACD,kBACJ,cACd;AACD,UAAM,WAAW,SAAS,oBAAoB,mBAAmB,kBAAkB,YAAY;AAE/F,UAAM,OAAO,YAAY,WAAW,QAAQ,iBAAiB;AAC7D,SAAK,OAAO,IAAI,IAAI;AAEpB,UAAM,SAAS,6BAAM;AAEpB,WAAK,MAAM;AAEX,YAAM,UAAqB,CAAC;AAC5B,YAAM,YAAuB,CAAC;AAC9B;AAAA,QACC;AAAA,QACA,SAAS;AAAA,QACT,EAAE,SAAS,UAAU;AAAA,QACrB,SAAS,gBAAgB;AAAA,MAC1B;AAEA,YAAM,OAAO,SAAS,SAAS;AAAA,IAChC,GAde;AAef,SAAK,OAAO,IAAI,KAAK,YAAY,MAAM,CAAC;AACxC,WAAO;AAAA,EACR;AAAA,EAES,UAAU;AAClB,UAAM,QAAQ;AAAA,EACf;AAAA,EAES,OAAO,UAA2B;AAC1C,UAAM,IAAI,MAAM,gCAAgC;AAAA,EACjD;AACD;AA5Ca,yBAAN;AAAA,EAMJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAXU;",
  "names": ["secondary"]
}
