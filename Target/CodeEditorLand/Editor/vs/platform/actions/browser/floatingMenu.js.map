{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/actions/browser/floatingMenu.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { $, append, clearNode } from \"../../../base/browser/dom.js\";\nimport { Widget } from \"../../../base/browser/ui/widget.js\";\nimport type { IAction } from \"../../../base/common/actions.js\";\nimport { Emitter } from \"../../../base/common/event.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttoDisposable,\n} from \"../../../base/common/lifecycle.js\";\nimport { IContextKeyService } from \"../../contextkey/common/contextkey.js\";\nimport { IInstantiationService } from \"../../instantiation/common/instantiation.js\";\nimport {\n\tasCssVariable,\n\tasCssVariableWithDefault,\n\tbuttonBackground,\n\tbuttonForeground,\n\tcontrastBorder,\n\teditorBackground,\n\teditorForeground,\n} from \"../../theme/common/colorRegistry.js\";\nimport { type IMenu, IMenuService, type MenuId } from \"../common/actions.js\";\nimport { createAndFillInActionBarActions } from \"./menuEntryActionViewItem.js\";\n\nexport class FloatingClickWidget extends Widget {\n\tprivate readonly _onClick = this._register(new Emitter<void>());\n\treadonly onClick = this._onClick.event;\n\n\tprivate _domNode: HTMLElement;\n\n\tconstructor(private label: string) {\n\t\tsuper();\n\n\t\tthis._domNode = $(\".floating-click-widget\");\n\t\tthis._domNode.style.padding = \"6px 11px\";\n\t\tthis._domNode.style.borderRadius = \"2px\";\n\t\tthis._domNode.style.cursor = \"pointer\";\n\t\tthis._domNode.style.zIndex = \"1\";\n\t}\n\n\tgetDomNode(): HTMLElement {\n\t\treturn this._domNode;\n\t}\n\n\trender() {\n\t\tclearNode(this._domNode);\n\t\tthis._domNode.style.backgroundColor = asCssVariableWithDefault(\n\t\t\tbuttonBackground,\n\t\t\tasCssVariable(editorBackground),\n\t\t);\n\t\tthis._domNode.style.color = asCssVariableWithDefault(\n\t\t\tbuttonForeground,\n\t\t\tasCssVariable(editorForeground),\n\t\t);\n\t\tthis._domNode.style.border = `1px solid ${asCssVariable(contrastBorder)}`;\n\n\t\tappend(this._domNode, $(\"\")).textContent = this.label;\n\n\t\tthis.onclick(this._domNode, () => this._onClick.fire());\n\t}\n}\n\nexport abstract class AbstractFloatingClickMenu extends Disposable {\n\tprivate readonly renderEmitter = new Emitter<FloatingClickWidget>();\n\tprotected readonly onDidRender = this.renderEmitter.event;\n\tprivate readonly menu: IMenu;\n\n\tconstructor(\n\t\tmenuId: MenuId,\n\t\t@IMenuService menuService: IMenuService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t) {\n\t\tsuper();\n\t\tthis.menu = this._register(\n\t\t\tmenuService.createMenu(menuId, contextKeyService),\n\t\t);\n\t}\n\n\t/** Should be called in implementation constructors after they initialized */\n\tprotected render() {\n\t\tconst menuDisposables = this._register(new DisposableStore());\n\t\tconst renderMenuAsFloatingClickBtn = () => {\n\t\t\tmenuDisposables.clear();\n\t\t\tif (!this.isVisible()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst actions: IAction[] = [];\n\t\t\tcreateAndFillInActionBarActions(\n\t\t\t\tthis.menu,\n\t\t\t\t{ renderShortTitle: true, shouldForwardArgs: true },\n\t\t\t\tactions,\n\t\t\t);\n\t\t\tif (actions.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// todo@jrieken find a way to handle N actions, like showing a context menu\n\t\t\tconst [first] = actions;\n\t\t\tconst widget = this.createWidget(first, menuDisposables);\n\t\t\tmenuDisposables.add(widget);\n\t\t\tmenuDisposables.add(\n\t\t\t\twidget.onClick(() => first.run(this.getActionArg())),\n\t\t\t);\n\t\t\twidget.render();\n\t\t};\n\t\tthis._register(this.menu.onDidChange(renderMenuAsFloatingClickBtn));\n\t\trenderMenuAsFloatingClickBtn();\n\t}\n\n\tprotected abstract createWidget(\n\t\taction: IAction,\n\t\tdisposables: DisposableStore,\n\t): FloatingClickWidget;\n\n\tprotected getActionArg(): unknown {\n\t\treturn undefined;\n\t}\n\n\tprotected isVisible() {\n\t\treturn true;\n\t}\n}\n\nexport class FloatingClickMenu extends AbstractFloatingClickMenu {\n\tconstructor(\n\t\tprivate readonly options: {\n\t\t\t/** Element the menu should be rendered into. */\n\t\t\tcontainer: HTMLElement;\n\t\t\t/** Menu to show. If no actions are present, the button is hidden. */\n\t\t\tmenuId: MenuId;\n\t\t\t/** Argument provided to the menu action */\n\t\t\tgetActionArg: () => void;\n\t\t},\n\t\t@IInstantiationService\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t\t@IMenuService menuService: IMenuService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t) {\n\t\tsuper(options.menuId, menuService, contextKeyService);\n\t\tthis.render();\n\t}\n\n\tprotected override createWidget(\n\t\taction: IAction,\n\t\tdisposable: DisposableStore,\n\t): FloatingClickWidget {\n\t\tconst w = this.instantiationService.createInstance(\n\t\t\tFloatingClickWidget,\n\t\t\taction.label,\n\t\t);\n\t\tconst node = w.getDomNode();\n\t\tthis.options.container.appendChild(node);\n\t\tdisposable.add(toDisposable(() => node.remove()));\n\t\treturn w;\n\t}\n\n\tprotected override getActionArg(): unknown {\n\t\treturn this.options.getActionArg();\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,GAAG,QAAQ,iBAAiB;AACrC,SAAS,cAAc;AAEvB,SAAS,eAAe;AACxB;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,0BAA0B;AACnC,SAAS,6BAA6B;AACtC;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAqB,oBAAiC;AACtD,SAAS,uCAAuC;AAEzC,MAAM,4BAA4B,OAAO;AAAA,EAM/C,YAAoB,OAAe;AAClC,UAAM;AADa;AAGnB,SAAK,WAAW,EAAE,wBAAwB;AAC1C,SAAK,SAAS,MAAM,UAAU;AAC9B,SAAK,SAAS,MAAM,eAAe;AACnC,SAAK,SAAS,MAAM,SAAS;AAC7B,SAAK,SAAS,MAAM,SAAS;AAAA,EAC9B;AAAA,EA1CD,OA4BgD;AAAA;AAAA;AAAA,EAC9B,WAAW,KAAK,UAAU,IAAI,QAAc,CAAC;AAAA,EACrD,UAAU,KAAK,SAAS;AAAA,EAEzB;AAAA,EAYR,aAA0B;AACzB,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,SAAS;AACR,cAAU,KAAK,QAAQ;AACvB,SAAK,SAAS,MAAM,kBAAkB;AAAA,MACrC;AAAA,MACA,cAAc,gBAAgB;AAAA,IAC/B;AACA,SAAK,SAAS,MAAM,QAAQ;AAAA,MAC3B;AAAA,MACA,cAAc,gBAAgB;AAAA,IAC/B;AACA,SAAK,SAAS,MAAM,SAAS,aAAa,cAAc,cAAc,CAAC;AAEvE,WAAO,KAAK,UAAU,EAAE,EAAE,CAAC,EAAE,cAAc,KAAK;AAEhD,SAAK,QAAQ,KAAK,UAAU,MAAM,KAAK,SAAS,KAAK,CAAC;AAAA,EACvD;AACD;AAEO,IAAe,4BAAf,cAAiD,WAAW;AAAA,EAlEnE,OAkEmE;AAAA;AAAA;AAAA,EACjD,gBAAgB,IAAI,QAA6B;AAAA,EAC/C,cAAc,KAAK,cAAc;AAAA,EACnC;AAAA,EAEjB,YACC,QACc,aACM,mBACnB;AACD,UAAM;AACN,SAAK,OAAO,KAAK;AAAA,MAChB,YAAY,WAAW,QAAQ,iBAAiB;AAAA,IACjD;AAAA,EACD;AAAA;AAAA,EAGU,SAAS;AAClB,UAAM,kBAAkB,KAAK,UAAU,IAAI,gBAAgB,CAAC;AAC5D,UAAM,+BAA+B,6BAAM;AAC1C,sBAAgB,MAAM;AACtB,UAAI,CAAC,KAAK,UAAU,GAAG;AACtB;AAAA,MACD;AACA,YAAM,UAAqB,CAAC;AAC5B;AAAA,QACC,KAAK;AAAA,QACL,EAAE,kBAAkB,MAAM,mBAAmB,KAAK;AAAA,QAClD;AAAA,MACD;AACA,UAAI,QAAQ,WAAW,GAAG;AACzB;AAAA,MACD;AAEA,YAAM,CAAC,KAAK,IAAI;AAChB,YAAM,SAAS,KAAK,aAAa,OAAO,eAAe;AACvD,sBAAgB,IAAI,MAAM;AAC1B,sBAAgB;AAAA,QACf,OAAO,QAAQ,MAAM,MAAM,IAAI,KAAK,aAAa,CAAC,CAAC;AAAA,MACpD;AACA,aAAO,OAAO;AAAA,IACf,GAtBqC;AAuBrC,SAAK,UAAU,KAAK,KAAK,YAAY,4BAA4B,CAAC;AAClE,iCAA6B;AAAA,EAC9B;AAAA,EAOU,eAAwB;AACjC,WAAO;AAAA,EACR;AAAA,EAEU,YAAY;AACrB,WAAO;AAAA,EACR;AACD;AA1DsB,4BAAf;AAAA,EAOJ;AAAA,EACA;AAAA,GARmB;AA4Df,IAAM,oBAAN,cAAgC,0BAA0B;AAAA,EAChE,YACkB,SASA,sBACH,aACM,mBACnB;AACD,UAAM,QAAQ,QAAQ,aAAa,iBAAiB;AAbnC;AASA;AAKjB,SAAK,OAAO;AAAA,EACb;AAAA,EA/ID,OA8HiE;AAAA;AAAA;AAAA,EAmB7C,aAClB,QACA,YACsB;AACtB,UAAM,IAAI,KAAK,qBAAqB;AAAA,MACnC;AAAA,MACA,OAAO;AAAA,IACR;AACA,UAAM,OAAO,EAAE,WAAW;AAC1B,SAAK,QAAQ,UAAU,YAAY,IAAI;AACvC,eAAW,IAAI,aAAa,MAAM,KAAK,OAAO,CAAC,CAAC;AAChD,WAAO;AAAA,EACR;AAAA,EAEmB,eAAwB;AAC1C,WAAO,KAAK,QAAQ,aAAa;AAAA,EAClC;AACD;AApCa,oBAAN;AAAA,EAUJ;AAAA,EAEA;AAAA,EACA;AAAA,GAbU;",
  "names": []
}
