{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/actions/browser/floatingMenu.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { $, append, clearNode } from '../../../base/browser/dom.js';\nimport { Widget } from '../../../base/browser/ui/widget.js';\nimport { IAction } from '../../../base/common/actions.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../base/common/lifecycle.js';\nimport { createAndFillInActionBarActions } from './menuEntryActionViewItem.js';\nimport { IMenu, IMenuService, MenuId } from '../common/actions.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { asCssVariable, asCssVariableWithDefault, buttonBackground, buttonForeground, contrastBorder, editorBackground, editorForeground } from '../../theme/common/colorRegistry.js';\n\nexport class FloatingClickWidget extends Widget {\n\n\tprivate readonly _onClick = this._register(new Emitter<void>());\n\treadonly onClick = this._onClick.event;\n\n\tprivate _domNode: HTMLElement;\n\n\tconstructor(private label: string) {\n\t\tsuper();\n\n\t\tthis._domNode = $('.floating-click-widget');\n\t\tthis._domNode.style.padding = '6px 11px';\n\t\tthis._domNode.style.borderRadius = '2px';\n\t\tthis._domNode.style.cursor = 'pointer';\n\t\tthis._domNode.style.zIndex = '1';\n\t}\n\n\tgetDomNode(): HTMLElement {\n\t\treturn this._domNode;\n\t}\n\n\trender() {\n\t\tclearNode(this._domNode);\n\t\tthis._domNode.style.backgroundColor = asCssVariableWithDefault(buttonBackground, asCssVariable(editorBackground));\n\t\tthis._domNode.style.color = asCssVariableWithDefault(buttonForeground, asCssVariable(editorForeground));\n\t\tthis._domNode.style.border = `1px solid ${asCssVariable(contrastBorder)}`;\n\n\t\tappend(this._domNode, $('')).textContent = this.label;\n\n\t\tthis.onclick(this._domNode, () => this._onClick.fire());\n\t}\n}\n\nexport abstract class AbstractFloatingClickMenu extends Disposable {\n\tprivate readonly renderEmitter = new Emitter<FloatingClickWidget>();\n\tprotected readonly onDidRender = this.renderEmitter.event;\n\tprivate readonly menu: IMenu;\n\n\tconstructor(\n\t\tmenuId: MenuId,\n\t\t@IMenuService menuService: IMenuService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService\n\t) {\n\t\tsuper();\n\t\tthis.menu = this._register(menuService.createMenu(menuId, contextKeyService));\n\t}\n\n\t/** Should be called in implementation constructors after they initialized */\n\tprotected render() {\n\t\tconst menuDisposables = this._register(new DisposableStore());\n\t\tconst renderMenuAsFloatingClickBtn = () => {\n\t\t\tmenuDisposables.clear();\n\t\t\tif (!this.isVisible()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst actions: IAction[] = [];\n\t\t\tcreateAndFillInActionBarActions(this.menu, { renderShortTitle: true, shouldForwardArgs: true }, actions);\n\t\t\tif (actions.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// todo@jrieken find a way to handle N actions, like showing a context menu\n\t\t\tconst [first] = actions;\n\t\t\tconst widget = this.createWidget(first, menuDisposables);\n\t\t\tmenuDisposables.add(widget);\n\t\t\tmenuDisposables.add(widget.onClick(() => first.run(this.getActionArg())));\n\t\t\twidget.render();\n\t\t};\n\t\tthis._register(this.menu.onDidChange(renderMenuAsFloatingClickBtn));\n\t\trenderMenuAsFloatingClickBtn();\n\t}\n\n\tprotected abstract createWidget(action: IAction, disposables: DisposableStore): FloatingClickWidget;\n\n\tprotected getActionArg(): unknown {\n\t\treturn undefined;\n\t}\n\n\tprotected isVisible() {\n\t\treturn true;\n\t}\n}\n\nexport class FloatingClickMenu extends AbstractFloatingClickMenu {\n\n\tconstructor(\n\t\tprivate readonly options: {\n\t\t\t/** Element the menu should be rendered into. */\n\t\t\tcontainer: HTMLElement;\n\t\t\t/** Menu to show. If no actions are present, the button is hidden. */\n\t\t\tmenuId: MenuId;\n\t\t\t/** Argument provided to the menu action */\n\t\t\tgetActionArg: () => void;\n\t\t},\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IMenuService menuService: IMenuService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService\n\t) {\n\t\tsuper(options.menuId, menuService, contextKeyService);\n\t\tthis.render();\n\t}\n\n\tprotected override createWidget(action: IAction, disposable: DisposableStore): FloatingClickWidget {\n\t\tconst w = this.instantiationService.createInstance(FloatingClickWidget, action.label);\n\t\tconst node = w.getDomNode();\n\t\tthis.options.container.appendChild(node);\n\t\tdisposable.add(toDisposable(() => node.remove()));\n\t\treturn w;\n\t}\n\n\tprotected override getActionArg(): unknown {\n\t\treturn this.options.getActionArg();\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
