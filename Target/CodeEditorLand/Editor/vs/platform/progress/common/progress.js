var g=Object.defineProperty;var I=Object.getOwnPropertyDescriptor;var c=(n,e,t,o)=>{for(var s=o>1?void 0:o?I(e,t):e,p=n.length-1,r;p>=0;p--)(r=n[p])&&(s=(o?r(e,t,s):r(s))||s);return o&&s&&g(e,t,s),s},d=(n,e)=>(t,o)=>e(t,o,n);import"../../../base/common/actions.js";import{DeferredPromise as h}from"../../../base/common/async.js";import{CancellationTokenSource as y}from"../../../base/common/cancellation.js";import{Disposable as u,DisposableStore as P,toDisposable as i}from"../../../base/common/lifecycle.js";import{createDecorator as l}from"../../instantiation/common/instantiation.js";import"../../notification/common/notification.js";const m=l("progressService");var v=(r=>(r[r.Explorer=1]="Explorer",r[r.Scm=3]="Scm",r[r.Extensions=5]="Extensions",r[r.Window=10]="Window",r[r.Notification=15]="Notification",r[r.Dialog=20]="Dialog",r))(v||{});const R=Object.freeze({total(){},worked(){},done(){}});class A{constructor(e){this.callback=e}static None=Object.freeze({report(){}});_value;get value(){return this._value}report(e){this._value=e,this.callback(this._value)}}class N{constructor(e){this.callback=e}_value;get value(){return this._value}_asyncQueue;_processingAsyncQueue;_drainListener;report(e){this._asyncQueue?this._asyncQueue.push(e):this._asyncQueue=[e],this._processAsyncQueue()}async _processAsyncQueue(){if(!this._processingAsyncQueue)try{for(this._processingAsyncQueue=!0;this._asyncQueue&&this._asyncQueue.length;){const e=this._asyncQueue.shift();this._value=e,await this.callback(this._value)}}finally{this._processingAsyncQueue=!1;const e=this._drainListener;this._drainListener=void 0,e?.()}}drain(){return this._processingAsyncQueue?new Promise(e=>{const t=this._drainListener;this._drainListener=()=>{t?.(),e()}}):Promise.resolve()}}let a=class extends u{deferred=new h;reporter;lastStep;constructor(e,t){super(),t.withProgress(e,o=>(this.reporter=o,this.lastStep&&o.report(this.lastStep),this.deferred.p)),this._register(i(()=>this.deferred.complete()))}report(e){this.reporter?this.reporter.report(e):this.lastStep=e}};a=c([d(1,m)],a);class C extends u{constructor(t){super();this.progressIndicator=t}currentOperationId=0;currentOperationDisposables=this._register(new P);currentProgressRunner;currentProgressTimeout;start(t){this.stop();const o=++this.currentOperationId,s=new y;return this.currentProgressTimeout=setTimeout(()=>{o===this.currentOperationId&&(this.currentProgressRunner=this.progressIndicator.show(!0))},t),this.currentOperationDisposables.add(i(()=>clearTimeout(this.currentProgressTimeout))),this.currentOperationDisposables.add(i(()=>s.cancel())),this.currentOperationDisposables.add(i(()=>this.currentProgressRunner?this.currentProgressRunner.done():void 0)),{id:o,token:s.token,stop:()=>this.doStop(o),isCurrent:()=>this.currentOperationId===o}}stop(){this.doStop(this.currentOperationId)}doStop(t){this.currentOperationId===t&&this.currentOperationDisposables.clear()}}const E=l("editorProgressService");export{N as AsyncProgress,E as IEditorProgressService,m as IProgressService,C as LongRunningOperation,A as Progress,v as ProgressLocation,a as UnmanagedProgress,R as emptyProgressRunner};
