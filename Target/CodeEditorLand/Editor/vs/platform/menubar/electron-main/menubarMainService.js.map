{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/menubar/electron-main/menubarMainService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from \"../../../base/common/lifecycle.js\";\nimport {\n\tIInstantiationService,\n\tcreateDecorator,\n} from \"../../instantiation/common/instantiation.js\";\nimport {\n\tILifecycleMainService,\n\tLifecycleMainPhase,\n} from \"../../lifecycle/electron-main/lifecycleMainService.js\";\nimport { ILogService } from \"../../log/common/log.js\";\nimport type { ICommonMenubarService, IMenubarData } from \"../common/menubar.js\";\nimport { Menubar } from \"./menubar.js\";\n\nexport const IMenubarMainService =\n\tcreateDecorator<IMenubarMainService>(\"menubarMainService\");\n\nexport interface IMenubarMainService extends ICommonMenubarService {\n\treadonly _serviceBrand: undefined;\n}\n\nexport class MenubarMainService\n\textends Disposable\n\timplements IMenubarMainService\n{\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly menubar = this.installMenuBarAfterWindowOpen();\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ILifecycleMainService private readonly lifecycleMainService: ILifecycleMainService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t}\n\n\tprivate async installMenuBarAfterWindowOpen(): Promise<Menubar> {\n\t\tawait this.lifecycleMainService.when(\n\t\t\tLifecycleMainPhase.AfterWindowOpen,\n\t\t);\n\n\t\treturn this._register(\n\t\t\tthis.instantiationService.createInstance(Menubar),\n\t\t);\n\t}\n\n\tasync updateMenubar(windowId: number, menus: IMenubarData): Promise<void> {\n\t\tthis.logService.trace(\"menubarService#updateMenubar\", windowId);\n\n\t\tconst menubar = await this.menubar;\n\t\tmenubar.updateMenu(menus, windowId);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,kBAAkB;AAC3B;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,mBAAmB;AAE5B,SAAS,eAAe;AAEjB,MAAM,sBACZ,gBAAqC,oBAAoB;AAMnD,IAAM,qBAAN,cACE,WAET;AAAA,EAKC,YACyC,sBACA,sBACV,YAC7B;AACD,UAAM;AAJkC;AACA;AACV;AAAA,EAG/B;AAAA,EAvCD,OA4BA;AAAA;AAAA;AAAA,EAGkB,UAAU,KAAK,8BAA8B;AAAA,EAU9D,MAAc,gCAAkD;AAC/D,UAAM,KAAK,qBAAqB;AAAA,MAC/B,mBAAmB;AAAA,IACpB;AAEA,WAAO,KAAK;AAAA,MACX,KAAK,qBAAqB,eAAe,OAAO;AAAA,IACjD;AAAA,EACD;AAAA,EAEA,MAAM,cAAc,UAAkB,OAAoC;AACzE,SAAK,WAAW,MAAM,gCAAgC,QAAQ;AAE9D,UAAM,UAAU,MAAM,KAAK;AAC3B,YAAQ,WAAW,OAAO,QAAQ;AAAA,EACnC;AACD;AAhCa,qBAAN;AAAA,EASJ;AAAA,EACA;AAAA,EACA;AAAA,GAXU;",
  "names": []
}
