{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/menubar/electron-main/menubar.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { app, BrowserWindow, KeyboardEvent, Menu, MenuItem, MenuItemConstructorOptions, WebContents } from 'electron';\nimport { WorkbenchActionExecutedClassification, WorkbenchActionExecutedEvent } from '../../../base/common/actions.js';\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { mnemonicMenuLabel } from '../../../base/common/labels.js';\nimport { isMacintosh, language } from '../../../base/common/platform.js';\nimport { URI } from '../../../base/common/uri.js';\nimport * as nls from '../../../nls.js';\nimport { IAuxiliaryWindowsMainService } from '../../auxiliaryWindow/electron-main/auxiliaryWindows.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { IEnvironmentMainService } from '../../environment/electron-main/environmentMainService.js';\nimport { ILifecycleMainService } from '../../lifecycle/electron-main/lifecycleMainService.js';\nimport { ILogService } from '../../log/common/log.js';\nimport { IMenubarData, IMenubarKeybinding, IMenubarMenu, IMenubarMenuRecentItemAction, isMenubarMenuItemAction, isMenubarMenuItemRecentAction, isMenubarMenuItemSeparator, isMenubarMenuItemSubmenu, MenubarMenuItem } from '../common/menubar.js';\nimport { INativeHostMainService } from '../../native/electron-main/nativeHostMainService.js';\nimport { IProductService } from '../../product/common/productService.js';\nimport { IStateService } from '../../state/node/state.js';\nimport { ITelemetryService } from '../../telemetry/common/telemetry.js';\nimport { IUpdateService, StateType } from '../../update/common/update.js';\nimport { INativeRunActionInWindowRequest, INativeRunKeybindingInWindowRequest, IWindowOpenable, hasNativeTitlebar } from '../../window/common/window.js';\nimport { IWindowsCountChangedEvent, IWindowsMainService, OpenContext } from '../../windows/electron-main/windows.js';\nimport { IWorkspacesHistoryMainService } from '../../workspaces/electron-main/workspacesHistoryMainService.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\n\nconst telemetryFrom = 'menu';\n\ninterface IMenuItemClickHandler {\n\tinDevTools: (contents: WebContents) => void;\n\tinNoWindow: () => void;\n}\n\ntype IMenuItemInvocation = (\n\t{ type: 'commandId'; commandId: string }\n\t| { type: 'keybinding'; userSettingsLabel: string }\n);\n\ninterface IMenuItemWithKeybinding {\n\tuserSettingsLabel?: string;\n}\n\nexport class Menubar extends Disposable {\n\n\tprivate static readonly lastKnownMenubarStorageKey = 'lastKnownMenubarData';\n\n\tprivate willShutdown: boolean | undefined;\n\tprivate appMenuInstalled: boolean | undefined;\n\tprivate closedLastWindow: boolean;\n\tprivate noActiveMainWindow: boolean;\n\n\tprivate menuUpdater: RunOnceScheduler;\n\tprivate menuGC: RunOnceScheduler;\n\n\t// Array to keep menus around so that GC doesn't cause crash as explained in #55347\n\t// TODO@sbatten Remove this when fixed upstream by Electron\n\tprivate oldMenus: Menu[];\n\n\tprivate menubarMenus: { [id: string]: IMenubarMenu };\n\n\tprivate keybindings: { [commandId: string]: IMenubarKeybinding };\n\n\tprivate readonly fallbackMenuHandlers: { [id: string]: (menuItem: MenuItem, browserWindow: BrowserWindow | undefined, event: KeyboardEvent) => void } = Object.create(null);\n\n\tconstructor(\n\t\t@IUpdateService private readonly updateService: IUpdateService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IWindowsMainService private readonly windowsMainService: IWindowsMainService,\n\t\t@IEnvironmentMainService private readonly environmentMainService: IEnvironmentMainService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IWorkspacesHistoryMainService private readonly workspacesHistoryMainService: IWorkspacesHistoryMainService,\n\t\t@IStateService private readonly stateService: IStateService,\n\t\t@ILifecycleMainService private readonly lifecycleMainService: ILifecycleMainService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@INativeHostMainService private readonly nativeHostMainService: INativeHostMainService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IAuxiliaryWindowsMainService private readonly auxiliaryWindowsMainService: IAuxiliaryWindowsMainService\n\t) {\n\t\tsuper();\n\n\t\tthis.menuUpdater = new RunOnceScheduler(() => this.doUpdateMenu(), 0);\n\n\t\tthis.menuGC = new RunOnceScheduler(() => { this.oldMenus = []; }, 10000);\n\n\t\tthis.menubarMenus = Object.create(null);\n\t\tthis.keybindings = Object.create(null);\n\n\t\tif (isMacintosh || hasNativeTitlebar(configurationService)) {\n\t\t\tthis.restoreCachedMenubarData();\n\t\t}\n\n\t\tthis.addFallbackHandlers();\n\n\t\tthis.closedLastWindow = false;\n\t\tthis.noActiveMainWindow = false;\n\n\t\tthis.oldMenus = [];\n\n\t\tthis.install();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate restoreCachedMenubarData() {\n\t\tconst menubarData = this.stateService.getItem<IMenubarData>(Menubar.lastKnownMenubarStorageKey);\n\t\tif (menubarData) {\n\t\t\tif (menubarData.menus) {\n\t\t\t\tthis.menubarMenus = menubarData.menus;\n\t\t\t}\n\n\t\t\tif (menubarData.keybindings) {\n\t\t\t\tthis.keybindings = menubarData.keybindings;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate addFallbackHandlers(): void {\n\n\t\t// File Menu Items\n\t\tthis.fallbackMenuHandlers['workbench.action.files.newUntitledFile'] = (menuItem, win, event) => {\n\t\t\tif (!this.runActionInRenderer({ type: 'commandId', commandId: 'workbench.action.files.newUntitledFile' })) { // this is one of the few supported actions when aux window has focus\n\t\t\t\tthis.windowsMainService.openEmptyWindow({ context: OpenContext.MENU, contextWindowId: win?.id });\n\t\t\t}\n\t\t};\n\t\tthis.fallbackMenuHandlers['workbench.action.newWindow'] = (menuItem, win, event) => this.windowsMainService.openEmptyWindow({ context: OpenContext.MENU, contextWindowId: win?.id });\n\t\tthis.fallbackMenuHandlers['workbench.action.files.openFileFolder'] = (menuItem, win, event) => this.nativeHostMainService.pickFileFolderAndOpen(undefined, { forceNewWindow: this.isOptionClick(event), telemetryExtraData: { from: telemetryFrom } });\n\t\tthis.fallbackMenuHandlers['workbench.action.files.openFolder'] = (menuItem, win, event) => this.nativeHostMainService.pickFolderAndOpen(undefined, { forceNewWindow: this.isOptionClick(event), telemetryExtraData: { from: telemetryFrom } });\n\t\tthis.fallbackMenuHandlers['workbench.action.openWorkspace'] = (menuItem, win, event) => this.nativeHostMainService.pickWorkspaceAndOpen(undefined, { forceNewWindow: this.isOptionClick(event), telemetryExtraData: { from: telemetryFrom } });\n\n\t\t// Recent Menu Items\n\t\tthis.fallbackMenuHandlers['workbench.action.clearRecentFiles'] = () => this.workspacesHistoryMainService.clearRecentlyOpened({ confirm: true /* ask for confirmation */ });\n\n\t\t// Help Menu Items\n\t\tconst youTubeUrl = this.productService.youTubeUrl;\n\t\tif (youTubeUrl) {\n\t\t\tthis.fallbackMenuHandlers['workbench.action.openYouTubeUrl'] = () => this.openUrl(youTubeUrl, 'openYouTubeUrl');\n\t\t}\n\n\t\tconst requestFeatureUrl = this.productService.requestFeatureUrl;\n\t\tif (requestFeatureUrl) {\n\t\t\tthis.fallbackMenuHandlers['workbench.action.openRequestFeatureUrl'] = () => this.openUrl(requestFeatureUrl, 'openUserVoiceUrl');\n\t\t}\n\n\t\tconst reportIssueUrl = this.productService.reportIssueUrl;\n\t\tif (reportIssueUrl) {\n\t\t\tthis.fallbackMenuHandlers['workbench.action.openIssueReporter'] = () => this.openUrl(reportIssueUrl, 'openReportIssues');\n\t\t}\n\n\t\tconst licenseUrl = this.productService.licenseUrl;\n\t\tif (licenseUrl) {\n\t\t\tthis.fallbackMenuHandlers['workbench.action.openLicenseUrl'] = () => {\n\t\t\t\tif (language) {\n\t\t\t\t\tconst queryArgChar = licenseUrl.indexOf('?') > 0 ? '&' : '?';\n\t\t\t\t\tthis.openUrl(`${licenseUrl}${queryArgChar}lang=${language}`, 'openLicenseUrl');\n\t\t\t\t} else {\n\t\t\t\t\tthis.openUrl(licenseUrl, 'openLicenseUrl');\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tconst privacyStatementUrl = this.productService.privacyStatementUrl;\n\t\tif (privacyStatementUrl && licenseUrl) {\n\t\t\tthis.fallbackMenuHandlers['workbench.action.openPrivacyStatementUrl'] = () => {\n\t\t\t\tthis.openUrl(privacyStatementUrl, 'openPrivacyStatement');\n\t\t\t};\n\t\t}\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// Keep flag when app quits\n\t\tthis._register(this.lifecycleMainService.onWillShutdown(() => this.willShutdown = true));\n\n\t\t// Listen to some events from window service to update menu\n\t\tthis._register(this.windowsMainService.onDidChangeWindowsCount(e => this.onDidChangeWindowsCount(e)));\n\t\tthis._register(this.nativeHostMainService.onDidBlurMainWindow(() => this.onDidChangeWindowFocus()));\n\t\tthis._register(this.nativeHostMainService.onDidFocusMainWindow(() => this.onDidChangeWindowFocus()));\n\t}\n\n\tprivate get currentEnableMenuBarMnemonics(): boolean {\n\t\tconst enableMenuBarMnemonics = this.configurationService.getValue('window.enableMenuBarMnemonics');\n\t\tif (typeof enableMenuBarMnemonics !== 'boolean') {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn enableMenuBarMnemonics;\n\t}\n\n\tprivate get currentEnableNativeTabs(): boolean {\n\t\tif (!isMacintosh) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst enableNativeTabs = this.configurationService.getValue('window.nativeTabs');\n\t\tif (typeof enableNativeTabs !== 'boolean') {\n\t\t\treturn false;\n\t\t}\n\t\treturn enableNativeTabs;\n\t}\n\n\tupdateMenu(menubarData: IMenubarData, windowId: number) {\n\t\tthis.menubarMenus = menubarData.menus;\n\t\tthis.keybindings = menubarData.keybindings;\n\n\t\t// Save off new menu and keybindings\n\t\tthis.stateService.setItem(Menubar.lastKnownMenubarStorageKey, menubarData);\n\n\t\tthis.scheduleUpdateMenu();\n\t}\n\n\n\tprivate scheduleUpdateMenu(): void {\n\t\tthis.menuUpdater.schedule(); // buffer multiple attempts to update the menu\n\t}\n\n\tprivate doUpdateMenu(): void {\n\n\t\t// Due to limitations in Electron, it is not possible to update menu items dynamically. The suggested\n\t\t// workaround from Electron is to set the application menu again.\n\t\t// See also https://github.com/electron/electron/issues/846\n\t\t//\n\t\t// Run delayed to prevent updating menu while it is open\n\t\tif (!this.willShutdown) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (!this.willShutdown) {\n\t\t\t\t\tthis.install();\n\t\t\t\t}\n\t\t\t}, 10 /* delay this because there is an issue with updating a menu when it is open */);\n\t\t}\n\t}\n\n\tprivate onDidChangeWindowsCount(e: IWindowsCountChangedEvent): void {\n\t\tif (!isMacintosh) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Update menu if window count goes from N > 0 or 0 > N to update menu item enablement\n\t\tif ((e.oldCount === 0 && e.newCount > 0) || (e.oldCount > 0 && e.newCount === 0)) {\n\t\t\tthis.closedLastWindow = e.newCount === 0;\n\t\t\tthis.scheduleUpdateMenu();\n\t\t}\n\t}\n\n\tprivate onDidChangeWindowFocus(): void {\n\t\tif (!isMacintosh) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst focusedWindow = BrowserWindow.getFocusedWindow();\n\t\tthis.noActiveMainWindow = !focusedWindow || !!this.auxiliaryWindowsMainService.getWindowByWebContents(focusedWindow.webContents);\n\t\tthis.scheduleUpdateMenu();\n\t}\n\n\tprivate install(): void {\n\t\t// Store old menu in our array to avoid GC to collect the menu and crash. See #55347\n\t\t// TODO@sbatten Remove this when fixed upstream by Electron\n\t\tconst oldMenu = Menu.getApplicationMenu();\n\t\tif (oldMenu) {\n\t\t\tthis.oldMenus.push(oldMenu);\n\t\t}\n\n\t\t// If we don't have a menu yet, set it to null to avoid the electron menu.\n\t\t// This should only happen on the first launch ever\n\t\tif (Object.keys(this.menubarMenus).length === 0) {\n\t\t\tthis.doSetApplicationMenu(isMacintosh ? new Menu() : null);\n\t\t\treturn;\n\t\t}\n\n\t\t// Menus\n\t\tconst menubar = new Menu();\n\n\t\t// Mac: Application\n\t\tlet macApplicationMenuItem: MenuItem;\n\t\tif (isMacintosh) {\n\t\t\tconst applicationMenu = new Menu();\n\t\t\tmacApplicationMenuItem = new MenuItem({ label: this.productService.nameShort, submenu: applicationMenu });\n\t\t\tthis.setMacApplicationMenu(applicationMenu);\n\t\t\tmenubar.append(macApplicationMenuItem);\n\t\t}\n\n\t\t// Mac: Dock\n\t\tif (isMacintosh && !this.appMenuInstalled) {\n\t\t\tthis.appMenuInstalled = true;\n\n\t\t\tconst dockMenu = new Menu();\n\t\t\tdockMenu.append(new MenuItem({ label: this.mnemonicLabel(nls.localize({ key: 'miNewWindow', comment: ['&& denotes a mnemonic'] }, \"New &&Window\")), click: () => this.windowsMainService.openEmptyWindow({ context: OpenContext.DOCK }) }));\n\n\t\t\tapp.dock.setMenu(dockMenu);\n\t\t}\n\n\t\t// File\n\t\tif (this.shouldDrawMenu('File')) {\n\t\t\tconst fileMenu = new Menu();\n\t\t\tconst fileMenuItem = new MenuItem({ label: this.mnemonicLabel(nls.localize({ key: 'mFile', comment: ['&& denotes a mnemonic'] }, \"&&File\")), submenu: fileMenu });\n\t\t\tthis.setMenuById(fileMenu, 'File');\n\t\t\tmenubar.append(fileMenuItem);\n\t\t}\n\n\t\t// Edit\n\t\tif (this.shouldDrawMenu('Edit')) {\n\t\t\tconst editMenu = new Menu();\n\t\t\tconst editMenuItem = new MenuItem({ label: this.mnemonicLabel(nls.localize({ key: 'mEdit', comment: ['&& denotes a mnemonic'] }, \"&&Edit\")), submenu: editMenu });\n\t\t\tthis.setMenuById(editMenu, 'Edit');\n\t\t\tmenubar.append(editMenuItem);\n\t\t}\n\n\t\t// Selection\n\t\tif (this.shouldDrawMenu('Selection')) {\n\t\t\tconst selectionMenu = new Menu();\n\t\t\tconst selectionMenuItem = new MenuItem({ label: this.mnemonicLabel(nls.localize({ key: 'mSelection', comment: ['&& denotes a mnemonic'] }, \"&&Selection\")), submenu: selectionMenu });\n\t\t\tthis.setMenuById(selectionMenu, 'Selection');\n\t\t\tmenubar.append(selectionMenuItem);\n\t\t}\n\n\t\t// View\n\t\tif (this.shouldDrawMenu('View')) {\n\t\t\tconst viewMenu = new Menu();\n\t\t\tconst viewMenuItem = new MenuItem({ label: this.mnemonicLabel(nls.localize({ key: 'mView', comment: ['&& denotes a mnemonic'] }, \"&&View\")), submenu: viewMenu });\n\t\t\tthis.setMenuById(viewMenu, 'View');\n\t\t\tmenubar.append(viewMenuItem);\n\t\t}\n\n\t\t// Go\n\t\tif (this.shouldDrawMenu('Go')) {\n\t\t\tconst gotoMenu = new Menu();\n\t\t\tconst gotoMenuItem = new MenuItem({ label: this.mnemonicLabel(nls.localize({ key: 'mGoto', comment: ['&& denotes a mnemonic'] }, \"&&Go\")), submenu: gotoMenu });\n\t\t\tthis.setMenuById(gotoMenu, 'Go');\n\t\t\tmenubar.append(gotoMenuItem);\n\t\t}\n\n\t\t// Debug\n\t\tif (this.shouldDrawMenu('Run')) {\n\t\t\tconst debugMenu = new Menu();\n\t\t\tconst debugMenuItem = new MenuItem({ label: this.mnemonicLabel(nls.localize({ key: 'mRun', comment: ['&& denotes a mnemonic'] }, \"&&Run\")), submenu: debugMenu });\n\t\t\tthis.setMenuById(debugMenu, 'Run');\n\t\t\tmenubar.append(debugMenuItem);\n\t\t}\n\n\t\t// Terminal\n\t\tif (this.shouldDrawMenu('Terminal')) {\n\t\t\tconst terminalMenu = new Menu();\n\t\t\tconst terminalMenuItem = new MenuItem({ label: this.mnemonicLabel(nls.localize({ key: 'mTerminal', comment: ['&& denotes a mnemonic'] }, \"&&Terminal\")), submenu: terminalMenu });\n\t\t\tthis.setMenuById(terminalMenu, 'Terminal');\n\t\t\tmenubar.append(terminalMenuItem);\n\t\t}\n\n\t\t// Mac: Window\n\t\tlet macWindowMenuItem: MenuItem | undefined;\n\t\tif (this.shouldDrawMenu('Window')) {\n\t\t\tconst windowMenu = new Menu();\n\t\t\tmacWindowMenuItem = new MenuItem({ label: this.mnemonicLabel(nls.localize('mWindow', \"Window\")), submenu: windowMenu, role: 'window' });\n\t\t\tthis.setMacWindowMenu(windowMenu);\n\t\t}\n\n\t\tif (macWindowMenuItem) {\n\t\t\tmenubar.append(macWindowMenuItem);\n\t\t}\n\n\t\t// Help\n\t\tif (this.shouldDrawMenu('Help')) {\n\t\t\tconst helpMenu = new Menu();\n\t\t\tconst helpMenuItem = new MenuItem({ label: this.mnemonicLabel(nls.localize({ key: 'mHelp', comment: ['&& denotes a mnemonic'] }, \"&&Help\")), submenu: helpMenu, role: 'help' });\n\t\t\tthis.setMenuById(helpMenu, 'Help');\n\t\t\tmenubar.append(helpMenuItem);\n\t\t}\n\n\t\tif (menubar.items && menubar.items.length > 0) {\n\t\t\tthis.doSetApplicationMenu(menubar);\n\t\t} else {\n\t\t\tthis.doSetApplicationMenu(null);\n\t\t}\n\n\t\t// Dispose of older menus after some time\n\t\tthis.menuGC.schedule();\n\t}\n\n\tprivate doSetApplicationMenu(menu: (Menu) | (null)): void {\n\n\t\t// Setting the application menu sets it to all opened windows,\n\t\t// but we currently do not support a menu in auxiliary windows,\n\t\t// so we need to unset it there.\n\t\t//\n\t\t// This is a bit ugly but `setApplicationMenu()` has some nice\n\t\t// behaviour we want:\n\t\t// - on macOS it is required because menus are application set\n\t\t// - we use `getApplicationMenu()` to access the current state\n\t\t// - new windows immediately get the same menu when opening\n\t\t//   reducing overall flicker for these\n\n\t\tMenu.setApplicationMenu(menu);\n\n\t\tif (menu) {\n\t\t\tfor (const window of this.auxiliaryWindowsMainService.getWindows()) {\n\t\t\t\twindow.win?.setMenu(null);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate setMacApplicationMenu(macApplicationMenu: Menu): void {\n\t\tconst about = this.createMenuItem(nls.localize('mAbout', \"About {0}\", this.productService.nameLong), 'workbench.action.showAboutDialog');\n\t\tconst checkForUpdates = this.getUpdateMenuItems();\n\n\t\tlet preferences;\n\t\tif (this.shouldDrawMenu('Preferences')) {\n\t\t\tconst preferencesMenu = new Menu();\n\t\t\tthis.setMenuById(preferencesMenu, 'Preferences');\n\t\t\tpreferences = new MenuItem({ label: this.mnemonicLabel(nls.localize({ key: 'miPreferences', comment: ['&& denotes a mnemonic'] }, \"&&Preferences\")), submenu: preferencesMenu });\n\t\t}\n\n\t\tconst servicesMenu = new Menu();\n\t\tconst services = new MenuItem({ label: nls.localize('mServices', \"Services\"), role: 'services', submenu: servicesMenu });\n\t\tconst hide = new MenuItem({ label: nls.localize('mHide', \"Hide {0}\", this.productService.nameLong), role: 'hide', accelerator: 'Command+H' });\n\t\tconst hideOthers = new MenuItem({ label: nls.localize('mHideOthers', \"Hide Others\"), role: 'hideOthers', accelerator: 'Command+Alt+H' });\n\t\tconst showAll = new MenuItem({ label: nls.localize('mShowAll', \"Show All\"), role: 'unhide' });\n\t\tconst quit = new MenuItem(this.likeAction('workbench.action.quit', {\n\t\t\tlabel: nls.localize('miQuit', \"Quit {0}\", this.productService.nameLong), click: async (item, window, event) => {\n\t\t\t\tconst lastActiveWindow = this.windowsMainService.getLastActiveWindow();\n\t\t\t\tif (\n\t\t\t\t\tthis.windowsMainService.getWindowCount() === 0 || \t// allow to quit when no more windows are open\n\t\t\t\t\t!!BrowserWindow.getFocusedWindow() ||\t\t\t\t// allow to quit when window has focus (fix for https://github.com/microsoft/vscode/issues/39191)\n\t\t\t\t\tlastActiveWindow?.win?.isMinimized()\t\t\t\t// allow to quit when window has no focus but is minimized (https://github.com/microsoft/vscode/issues/63000)\n\t\t\t\t) {\n\t\t\t\t\tconst confirmed = await this.confirmBeforeQuit(event);\n\t\t\t\t\tif (confirmed) {\n\t\t\t\t\t\tthis.nativeHostMainService.quit(undefined);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tconst actions = [about];\n\t\tactions.push(...checkForUpdates);\n\n\t\tif (preferences) {\n\t\t\tactions.push(...[\n\t\t\t\t__separator__(),\n\t\t\t\tpreferences\n\t\t\t]);\n\t\t}\n\n\t\tactions.push(...[\n\t\t\t__separator__(),\n\t\t\tservices,\n\t\t\t__separator__(),\n\t\t\thide,\n\t\t\thideOthers,\n\t\t\tshowAll,\n\t\t\t__separator__(),\n\t\t\tquit\n\t\t]);\n\n\t\tactions.forEach(i => macApplicationMenu.append(i));\n\t}\n\n\tprivate async confirmBeforeQuit(event: KeyboardEvent): Promise<boolean> {\n\t\tif (this.windowsMainService.getWindowCount() === 0) {\n\t\t\treturn true; // never confirm when no windows are opened\n\t\t}\n\n\t\tconst confirmBeforeClose = this.configurationService.getValue<'always' | 'never' | 'keyboardOnly'>('window.confirmBeforeClose');\n\t\tif (confirmBeforeClose === 'always' || (confirmBeforeClose === 'keyboardOnly' && this.isKeyboardEvent(event))) {\n\t\t\tconst { response } = await this.nativeHostMainService.showMessageBox(this.windowsMainService.getFocusedWindow()?.id, {\n\t\t\t\ttype: 'question',\n\t\t\t\tbuttons: [\n\t\t\t\t\tnls.localize({ key: 'quit', comment: ['&& denotes a mnemonic'] }, \"&&Quit\"),\n\t\t\t\t\tnls.localize('cancel', \"Cancel\")\n\t\t\t\t],\n\t\t\t\tmessage: nls.localize('quitMessage', \"Are you sure you want to quit?\")\n\t\t\t});\n\n\t\t\treturn response === 0;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate shouldDrawMenu(menuId: string): boolean {\n\t\t// We need to draw an empty menu to override the electron default\n\t\tif (!isMacintosh && !hasNativeTitlebar(this.configurationService)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tswitch (menuId) {\n\t\t\tcase 'File':\n\t\t\tcase 'Help':\n\t\t\t\tif (isMacintosh) {\n\t\t\t\t\treturn (this.windowsMainService.getWindowCount() === 0 && this.closedLastWindow) || (this.windowsMainService.getWindowCount() > 0 && this.noActiveMainWindow) || (!!this.menubarMenus && !!this.menubarMenus[menuId]);\n\t\t\t\t}\n\n\t\t\tcase 'Window':\n\t\t\t\tif (isMacintosh) {\n\t\t\t\t\treturn (this.windowsMainService.getWindowCount() === 0 && this.closedLastWindow) || (this.windowsMainService.getWindowCount() > 0 && this.noActiveMainWindow) || !!this.menubarMenus;\n\t\t\t\t}\n\n\t\t\tdefault:\n\t\t\t\treturn this.windowsMainService.getWindowCount() > 0 && (!!this.menubarMenus && !!this.menubarMenus[menuId]);\n\t\t}\n\t}\n\n\n\tprivate setMenu(menu: Menu, items: Array<MenubarMenuItem>) {\n\t\titems.forEach((item: MenubarMenuItem) => {\n\t\t\tif (isMenubarMenuItemSeparator(item)) {\n\t\t\t\tmenu.append(__separator__());\n\t\t\t} else if (isMenubarMenuItemSubmenu(item)) {\n\t\t\t\tconst submenu = new Menu();\n\t\t\t\tconst submenuItem = new MenuItem({ label: this.mnemonicLabel(item.label), submenu });\n\t\t\t\tthis.setMenu(submenu, item.submenu.items);\n\t\t\t\tmenu.append(submenuItem);\n\t\t\t} else if (isMenubarMenuItemRecentAction(item)) {\n\t\t\t\tmenu.append(this.createOpenRecentMenuItem(item));\n\t\t\t} else if (isMenubarMenuItemAction(item)) {\n\t\t\t\tif (item.id === 'workbench.action.showAboutDialog') {\n\t\t\t\t\tthis.insertCheckForUpdatesItems(menu);\n\t\t\t\t}\n\n\t\t\t\tif (isMacintosh) {\n\t\t\t\t\tif ((this.windowsMainService.getWindowCount() === 0 && this.closedLastWindow) ||\n\t\t\t\t\t\t(this.windowsMainService.getWindowCount() > 0 && this.noActiveMainWindow)) {\n\t\t\t\t\t\t// In the fallback scenario, we are either disabled or using a fallback handler\n\t\t\t\t\t\tif (this.fallbackMenuHandlers[item.id]) {\n\t\t\t\t\t\t\tmenu.append(new MenuItem(this.likeAction(item.id, { label: this.mnemonicLabel(item.label), click: this.fallbackMenuHandlers[item.id] })));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmenu.append(this.createMenuItem(item.label, item.id, false, item.checked));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmenu.append(this.createMenuItem(item.label, item.id, item.enabled === false ? false : true, !!item.checked));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tmenu.append(this.createMenuItem(item.label, item.id, item.enabled === false ? false : true, !!item.checked));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate setMenuById(menu: Menu, menuId: string): void {\n\t\tif (this.menubarMenus && this.menubarMenus[menuId]) {\n\t\t\tthis.setMenu(menu, this.menubarMenus[menuId].items);\n\t\t}\n\t}\n\n\tprivate insertCheckForUpdatesItems(menu: Menu) {\n\t\tconst updateItems = this.getUpdateMenuItems();\n\t\tif (updateItems.length) {\n\t\t\tupdateItems.forEach(i => menu.append(i));\n\t\t\tmenu.append(__separator__());\n\t\t}\n\t}\n\n\tprivate createOpenRecentMenuItem(item: IMenubarMenuRecentItemAction): MenuItem {\n\t\tconst revivedUri = URI.revive(item.uri);\n\t\tconst commandId = item.id;\n\t\tconst openable: IWindowOpenable =\n\t\t\t(commandId === 'openRecentFile') ? { fileUri: revivedUri } :\n\t\t\t\t(commandId === 'openRecentWorkspace') ? { workspaceUri: revivedUri } : { folderUri: revivedUri };\n\n\t\treturn new MenuItem(this.likeAction(commandId, {\n\t\t\tlabel: item.label,\n\t\t\tclick: async (menuItem, win, event) => {\n\t\t\t\tconst openInNewWindow = this.isOptionClick(event);\n\t\t\t\tconst success = (await this.windowsMainService.open({\n\t\t\t\t\tcontext: OpenContext.MENU,\n\t\t\t\t\tcli: this.environmentMainService.args,\n\t\t\t\t\turisToOpen: [openable],\n\t\t\t\t\tforceNewWindow: openInNewWindow,\n\t\t\t\t\tgotoLineMode: false,\n\t\t\t\t\tremoteAuthority: item.remoteAuthority\n\t\t\t\t})).length > 0;\n\n\t\t\t\tif (!success) {\n\t\t\t\t\tawait this.workspacesHistoryMainService.removeRecentlyOpened([revivedUri]);\n\t\t\t\t}\n\t\t\t}\n\t\t}, false));\n\t}\n\n\tprivate isOptionClick(event: KeyboardEvent): boolean {\n\t\treturn !!(event && ((!isMacintosh && (event.ctrlKey || event.shiftKey)) || (isMacintosh && (event.metaKey || event.altKey))));\n\t}\n\n\tprivate isKeyboardEvent(event: KeyboardEvent): boolean {\n\t\treturn !!(event.triggeredByAccelerator || event.altKey || event.ctrlKey || event.metaKey || event.shiftKey);\n\t}\n\n\tprivate createRoleMenuItem(label: string, commandId: string, role: any): MenuItem {\n\t\tconst options: MenuItemConstructorOptions = {\n\t\t\tlabel: this.mnemonicLabel(label),\n\t\t\trole,\n\t\t\tenabled: true\n\t\t};\n\n\t\treturn new MenuItem(this.withKeybinding(commandId, options));\n\t}\n\n\tprivate setMacWindowMenu(macWindowMenu: Menu): void {\n\t\tconst minimize = new MenuItem({ label: nls.localize('mMinimize', \"Minimize\"), role: 'minimize', accelerator: 'Command+M', enabled: this.windowsMainService.getWindowCount() > 0 });\n\t\tconst zoom = new MenuItem({ label: nls.localize('mZoom', \"Zoom\"), role: 'zoom', enabled: this.windowsMainService.getWindowCount() > 0 });\n\t\tconst bringAllToFront = new MenuItem({ label: nls.localize('mBringToFront', \"Bring All to Front\"), role: 'front', enabled: this.windowsMainService.getWindowCount() > 0 });\n\t\tconst switchWindow = this.createMenuItem(nls.localize({ key: 'miSwitchWindow', comment: ['&& denotes a mnemonic'] }, \"Switch &&Window...\"), 'workbench.action.switchWindow');\n\n\t\tconst nativeTabMenuItems: MenuItem[] = [];\n\t\tif (this.currentEnableNativeTabs) {\n\t\t\tnativeTabMenuItems.push(__separator__());\n\n\t\t\tnativeTabMenuItems.push(this.createMenuItem(nls.localize('mNewTab', \"New Tab\"), 'workbench.action.newWindowTab'));\n\n\t\t\tnativeTabMenuItems.push(this.createRoleMenuItem(nls.localize('mShowPreviousTab', \"Show Previous Tab\"), 'workbench.action.showPreviousWindowTab', 'selectPreviousTab'));\n\t\t\tnativeTabMenuItems.push(this.createRoleMenuItem(nls.localize('mShowNextTab', \"Show Next Tab\"), 'workbench.action.showNextWindowTab', 'selectNextTab'));\n\t\t\tnativeTabMenuItems.push(this.createRoleMenuItem(nls.localize('mMoveTabToNewWindow', \"Move Tab to New Window\"), 'workbench.action.moveWindowTabToNewWindow', 'moveTabToNewWindow'));\n\t\t\tnativeTabMenuItems.push(this.createRoleMenuItem(nls.localize('mMergeAllWindows', \"Merge All Windows\"), 'workbench.action.mergeAllWindowTabs', 'mergeAllWindows'));\n\t\t}\n\n\t\t[\n\t\t\tminimize,\n\t\t\tzoom,\n\t\t\t__separator__(),\n\t\t\tswitchWindow,\n\t\t\t...nativeTabMenuItems,\n\t\t\t__separator__(),\n\t\t\tbringAllToFront\n\t\t].forEach(item => macWindowMenu.append(item));\n\t}\n\n\tprivate getUpdateMenuItems(): MenuItem[] {\n\t\tconst state = this.updateService.state;\n\n\t\tswitch (state.type) {\n\t\t\tcase StateType.Idle:\n\t\t\t\treturn [new MenuItem({\n\t\t\t\t\tlabel: this.mnemonicLabel(nls.localize('miCheckForUpdates', \"Check for &&Updates...\")), click: () => setTimeout(() => {\n\t\t\t\t\t\tthis.reportMenuActionTelemetry('CheckForUpdate');\n\t\t\t\t\t\tthis.updateService.checkForUpdates(true);\n\t\t\t\t\t}, 0)\n\t\t\t\t})];\n\n\t\t\tcase StateType.CheckingForUpdates:\n\t\t\t\treturn [new MenuItem({ label: nls.localize('miCheckingForUpdates', \"Checking for Updates...\"), enabled: false })];\n\n\t\t\tcase StateType.AvailableForDownload:\n\t\t\t\treturn [new MenuItem({\n\t\t\t\t\tlabel: this.mnemonicLabel(nls.localize('miDownloadUpdate', \"D&&ownload Available Update\")), click: () => {\n\t\t\t\t\t\tthis.updateService.downloadUpdate();\n\t\t\t\t\t}\n\t\t\t\t})];\n\n\t\t\tcase StateType.Downloading:\n\t\t\t\treturn [new MenuItem({ label: nls.localize('miDownloadingUpdate', \"Downloading Update...\"), enabled: false })];\n\n\t\t\tcase StateType.Downloaded:\n\t\t\t\treturn isMacintosh ? [] : [new MenuItem({\n\t\t\t\t\tlabel: this.mnemonicLabel(nls.localize('miInstallUpdate', \"Install &&Update...\")), click: () => {\n\t\t\t\t\t\tthis.reportMenuActionTelemetry('InstallUpdate');\n\t\t\t\t\t\tthis.updateService.applyUpdate();\n\t\t\t\t\t}\n\t\t\t\t})];\n\n\t\t\tcase StateType.Updating:\n\t\t\t\treturn [new MenuItem({ label: nls.localize('miInstallingUpdate', \"Installing Update...\"), enabled: false })];\n\n\t\t\tcase StateType.Ready:\n\t\t\t\treturn [new MenuItem({\n\t\t\t\t\tlabel: this.mnemonicLabel(nls.localize('miRestartToUpdate', \"Restart to &&Update\")), click: () => {\n\t\t\t\t\t\tthis.reportMenuActionTelemetry('RestartToUpdate');\n\t\t\t\t\t\tthis.updateService.quitAndInstall();\n\t\t\t\t\t}\n\t\t\t\t})];\n\n\t\t\tdefault:\n\t\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate createMenuItem(label: string, commandId: string | string[], enabled?: boolean, checked?: boolean): MenuItem;\n\tprivate createMenuItem(label: string, click: () => void, enabled?: boolean, checked?: boolean): MenuItem;\n\tprivate createMenuItem(arg1: string, arg2: any, arg3?: boolean, arg4?: boolean): MenuItem {\n\t\tconst label = this.mnemonicLabel(arg1);\n\t\tconst click: () => void = (typeof arg2 === 'function') ? arg2 : (menuItem: MenuItem & IMenuItemWithKeybinding, win: BrowserWindow, event: KeyboardEvent) => {\n\t\t\tconst userSettingsLabel = menuItem ? menuItem.userSettingsLabel : null;\n\t\t\tlet commandId = arg2;\n\t\t\tif (Array.isArray(arg2)) {\n\t\t\t\tcommandId = this.isOptionClick(event) ? arg2[1] : arg2[0]; // support alternative action if we got multiple action Ids and the option key was pressed while invoking\n\t\t\t}\n\n\t\t\tif (userSettingsLabel && event.triggeredByAccelerator) {\n\t\t\t\tthis.runActionInRenderer({ type: 'keybinding', userSettingsLabel });\n\t\t\t} else {\n\t\t\t\tthis.runActionInRenderer({ type: 'commandId', commandId });\n\t\t\t}\n\t\t};\n\t\tconst enabled = typeof arg3 === 'boolean' ? arg3 : this.windowsMainService.getWindowCount() > 0;\n\t\tconst checked = typeof arg4 === 'boolean' ? arg4 : false;\n\n\t\tconst options: MenuItemConstructorOptions = {\n\t\t\tlabel,\n\t\t\tclick,\n\t\t\tenabled\n\t\t};\n\n\t\tif (checked) {\n\t\t\toptions.type = 'checkbox';\n\t\t\toptions.checked = checked;\n\t\t}\n\n\t\tlet commandId: string | undefined;\n\t\tif (typeof arg2 === 'string') {\n\t\t\tcommandId = arg2;\n\t\t} else if (Array.isArray(arg2)) {\n\t\t\tcommandId = arg2[0];\n\t\t}\n\n\t\tif (isMacintosh) {\n\n\t\t\t// Add role for special case menu items\n\t\t\tif (commandId === 'editor.action.clipboardCutAction') {\n\t\t\t\toptions.role = 'cut';\n\t\t\t} else if (commandId === 'editor.action.clipboardCopyAction') {\n\t\t\t\toptions.role = 'copy';\n\t\t\t} else if (commandId === 'editor.action.clipboardPasteAction') {\n\t\t\t\toptions.role = 'paste';\n\t\t\t}\n\n\t\t\t// Add context aware click handlers for special case menu items\n\t\t\tif (commandId === 'undo') {\n\t\t\t\toptions.click = this.makeContextAwareClickHandler(click, {\n\t\t\t\t\tinDevTools: devTools => devTools.undo(),\n\t\t\t\t\tinNoWindow: () => Menu.sendActionToFirstResponder('undo:')\n\t\t\t\t});\n\t\t\t} else if (commandId === 'redo') {\n\t\t\t\toptions.click = this.makeContextAwareClickHandler(click, {\n\t\t\t\t\tinDevTools: devTools => devTools.redo(),\n\t\t\t\t\tinNoWindow: () => Menu.sendActionToFirstResponder('redo:')\n\t\t\t\t});\n\t\t\t} else if (commandId === 'editor.action.selectAll') {\n\t\t\t\toptions.click = this.makeContextAwareClickHandler(click, {\n\t\t\t\t\tinDevTools: devTools => devTools.selectAll(),\n\t\t\t\t\tinNoWindow: () => Menu.sendActionToFirstResponder('selectAll:')\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new MenuItem(this.withKeybinding(commandId, options));\n\t}\n\n\tprivate makeContextAwareClickHandler(click: (menuItem: MenuItem, win: BrowserWindow, event: KeyboardEvent) => void, contextSpecificHandlers: IMenuItemClickHandler): (menuItem: MenuItem, win: BrowserWindow | undefined, event: KeyboardEvent) => void {\n\t\treturn (menuItem: MenuItem, win: BrowserWindow | undefined, event: KeyboardEvent) => {\n\n\t\t\t// No Active Window\n\t\t\tconst activeWindow = BrowserWindow.getFocusedWindow();\n\t\t\tif (!activeWindow) {\n\t\t\t\treturn contextSpecificHandlers.inNoWindow();\n\t\t\t}\n\n\t\t\t// DevTools focused\n\t\t\tif (activeWindow.webContents.isDevToolsFocused() &&\n\t\t\t\tactiveWindow.webContents.devToolsWebContents) {\n\t\t\t\treturn contextSpecificHandlers.inDevTools(activeWindow.webContents.devToolsWebContents);\n\t\t\t}\n\n\t\t\t// Finally execute command in Window\n\t\t\tclick(menuItem, win || activeWindow, event);\n\t\t};\n\t}\n\n\tprivate runActionInRenderer(invocation: IMenuItemInvocation): boolean {\n\n\t\t// We want to support auxililary windows that may have focus by\n\t\t// returning their parent windows as target to support running\n\t\t// actions via the main window.\n\t\tlet activeBrowserWindow = BrowserWindow.getFocusedWindow();\n\t\tif (activeBrowserWindow) {\n\t\t\tconst auxiliaryWindowCandidate = this.auxiliaryWindowsMainService.getWindowByWebContents(activeBrowserWindow.webContents);\n\t\t\tif (auxiliaryWindowCandidate) {\n\t\t\t\tactiveBrowserWindow = this.windowsMainService.getWindowById(auxiliaryWindowCandidate.parentId)?.win ?? null;\n\t\t\t}\n\t\t}\n\n\t\t// We make sure to not run actions when the window has no focus, this helps\n\t\t// for https://github.com/microsoft/vscode/issues/25907 and specifically for\n\t\t// https://github.com/microsoft/vscode/issues/11928\n\t\t// Still allow to run when the last active window is minimized though for\n\t\t// https://github.com/microsoft/vscode/issues/63000\n\t\tif (!activeBrowserWindow) {\n\t\t\tconst lastActiveWindow = this.windowsMainService.getLastActiveWindow();\n\t\t\tif (lastActiveWindow?.win?.isMinimized()) {\n\t\t\t\tactiveBrowserWindow = lastActiveWindow.win;\n\t\t\t}\n\t\t}\n\n\t\tconst activeWindow = activeBrowserWindow ? this.windowsMainService.getWindowById(activeBrowserWindow.id) : undefined;\n\t\tif (activeWindow) {\n\t\t\tthis.logService.trace('menubar#runActionInRenderer', invocation);\n\n\t\t\tif (isMacintosh && !this.environmentMainService.isBuilt && !activeWindow.isReady) {\n\t\t\t\tif ((invocation.type === 'commandId' && invocation.commandId === 'workbench.action.toggleDevTools') || (invocation.type !== 'commandId' && invocation.userSettingsLabel === 'alt+cmd+i')) {\n\t\t\t\t\t// prevent this action from running twice on macOS (https://github.com/microsoft/vscode/issues/62719)\n\t\t\t\t\t// we already register a keybinding in bootstrap-window.js for opening developer tools in case something\n\t\t\t\t\t// goes wrong and that keybinding is only removed when the application has loaded (= window ready).\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (invocation.type === 'commandId') {\n\t\t\t\tconst runActionPayload: INativeRunActionInWindowRequest = { id: invocation.commandId, from: 'menu' };\n\t\t\t\tactiveWindow.sendWhenReady('vscode:runAction', CancellationToken.None, runActionPayload);\n\t\t\t} else {\n\t\t\t\tconst runKeybindingPayload: INativeRunKeybindingInWindowRequest = { userSettingsLabel: invocation.userSettingsLabel };\n\t\t\t\tactiveWindow.sendWhenReady('vscode:runKeybinding', CancellationToken.None, runKeybindingPayload);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.logService.trace('menubar#runActionInRenderer: no active window found', invocation);\n\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate withKeybinding(commandId: string | undefined, options: MenuItemConstructorOptions & IMenuItemWithKeybinding): MenuItemConstructorOptions {\n\t\tconst binding = typeof commandId === 'string' ? this.keybindings[commandId] : undefined;\n\n\t\t// Apply binding if there is one\n\t\tif (binding?.label) {\n\n\t\t\t// if the binding is native, we can just apply it\n\t\t\tif (binding.isNative !== false) {\n\t\t\t\toptions.accelerator = binding.label;\n\t\t\t\toptions.userSettingsLabel = binding.userSettingsLabel;\n\t\t\t}\n\n\t\t\t// the keybinding is not native so we cannot show it as part of the accelerator of\n\t\t\t// the menu item. we fallback to a different strategy so that we always display it\n\t\t\telse if (typeof options.label === 'string') {\n\t\t\t\tconst bindingIndex = options.label.indexOf('[');\n\t\t\t\tif (bindingIndex >= 0) {\n\t\t\t\t\toptions.label = `${options.label.substr(0, bindingIndex)} [${binding.label}]`;\n\t\t\t\t} else {\n\t\t\t\t\toptions.label = `${options.label} [${binding.label}]`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Unset bindings if there is none\n\t\telse {\n\t\t\toptions.accelerator = undefined;\n\t\t}\n\n\t\treturn options;\n\t}\n\n\tprivate likeAction(commandId: string, options: MenuItemConstructorOptions, setAccelerator = !options.accelerator): MenuItemConstructorOptions {\n\t\tif (setAccelerator) {\n\t\t\toptions = this.withKeybinding(commandId, options);\n\t\t}\n\n\t\tconst originalClick = options.click;\n\t\toptions.click = (item, window, event) => {\n\t\t\tthis.reportMenuActionTelemetry(commandId);\n\t\t\toriginalClick?.(item, window, event);\n\t\t};\n\n\t\treturn options;\n\t}\n\n\tprivate openUrl(url: string, id: string): void {\n\t\tthis.nativeHostMainService.openExternal(undefined, url);\n\t\tthis.reportMenuActionTelemetry(id);\n\t}\n\n\tprivate reportMenuActionTelemetry(id: string): void {\n\t\tthis.telemetryService.publicLog2<WorkbenchActionExecutedEvent, WorkbenchActionExecutedClassification>('workbenchActionExecuted', { id, from: telemetryFrom });\n\t}\n\n\tprivate mnemonicLabel(label: string): string {\n\t\treturn mnemonicMenuLabel(label, !this.currentEnableMenuBarMnemonics);\n\t}\n}\n\nfunction __separator__(): MenuItem {\n\treturn new MenuItem({ type: 'separator' });\n}\n"],
  "mappings": "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",
  "names": ["commandId"]
}
