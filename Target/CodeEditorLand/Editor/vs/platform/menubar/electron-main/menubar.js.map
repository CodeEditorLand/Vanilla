{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/menubar/electron-main/menubar.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tBrowserWindow,\n\ttype KeyboardEvent,\n\tMenu,\n\tMenuItem,\n\ttype MenuItemConstructorOptions,\n\ttype WebContents,\n\tapp,\n} from \"electron\";\nimport type {\n\tWorkbenchActionExecutedClassification,\n\tWorkbenchActionExecutedEvent,\n} from \"../../../base/common/actions.js\";\nimport { RunOnceScheduler } from \"../../../base/common/async.js\";\nimport { CancellationToken } from \"../../../base/common/cancellation.js\";\nimport { mnemonicMenuLabel } from \"../../../base/common/labels.js\";\nimport { Disposable } from \"../../../base/common/lifecycle.js\";\nimport { isMacintosh, language } from \"../../../base/common/platform.js\";\nimport { URI } from \"../../../base/common/uri.js\";\nimport * as nls from \"../../../nls.js\";\nimport { IAuxiliaryWindowsMainService } from \"../../auxiliaryWindow/electron-main/auxiliaryWindows.js\";\nimport { IConfigurationService } from \"../../configuration/common/configuration.js\";\nimport { IEnvironmentMainService } from \"../../environment/electron-main/environmentMainService.js\";\nimport { ILifecycleMainService } from \"../../lifecycle/electron-main/lifecycleMainService.js\";\nimport { ILogService } from \"../../log/common/log.js\";\nimport { INativeHostMainService } from \"../../native/electron-main/nativeHostMainService.js\";\nimport { IProductService } from \"../../product/common/productService.js\";\nimport { IStateService } from \"../../state/node/state.js\";\nimport { ITelemetryService } from \"../../telemetry/common/telemetry.js\";\nimport { IUpdateService, StateType } from \"../../update/common/update.js\";\nimport {\n\ttype INativeRunActionInWindowRequest,\n\ttype INativeRunKeybindingInWindowRequest,\n\ttype IWindowOpenable,\n\thasNativeTitlebar,\n} from \"../../window/common/window.js\";\nimport {\n\ttype IWindowsCountChangedEvent,\n\tIWindowsMainService,\n\tOpenContext,\n} from \"../../windows/electron-main/windows.js\";\nimport { IWorkspacesHistoryMainService } from \"../../workspaces/electron-main/workspacesHistoryMainService.js\";\nimport {\n\ttype IMenubarData,\n\ttype IMenubarKeybinding,\n\ttype IMenubarMenu,\n\ttype IMenubarMenuRecentItemAction,\n\ttype MenubarMenuItem,\n\tisMenubarMenuItemAction,\n\tisMenubarMenuItemRecentAction,\n\tisMenubarMenuItemSeparator,\n\tisMenubarMenuItemSubmenu,\n} from \"../common/menubar.js\";\n\nconst telemetryFrom = \"menu\";\n\ninterface IMenuItemClickHandler {\n\tinDevTools: (contents: WebContents) => void;\n\tinNoWindow: () => void;\n}\n\ntype IMenuItemInvocation =\n\t| { type: \"commandId\"; commandId: string }\n\t| { type: \"keybinding\"; userSettingsLabel: string };\n\ninterface IMenuItemWithKeybinding {\n\tuserSettingsLabel?: string;\n}\n\nexport class Menubar extends Disposable {\n\tprivate static readonly lastKnownMenubarStorageKey = \"lastKnownMenubarData\";\n\n\tprivate willShutdown: boolean | undefined;\n\tprivate appMenuInstalled: boolean | undefined;\n\tprivate closedLastWindow: boolean;\n\tprivate noActiveMainWindow: boolean;\n\n\tprivate menuUpdater: RunOnceScheduler;\n\tprivate menuGC: RunOnceScheduler;\n\n\t// Array to keep menus around so that GC doesn't cause crash as explained in #55347\n\t// TODO@sbatten Remove this when fixed upstream by Electron\n\tprivate oldMenus: Menu[];\n\n\tprivate menubarMenus: { [id: string]: IMenubarMenu };\n\n\tprivate keybindings: { [commandId: string]: IMenubarKeybinding };\n\n\tprivate readonly fallbackMenuHandlers: {\n\t\t[id: string]: (\n\t\t\tmenuItem: MenuItem,\n\t\t\tbrowserWindow: BrowserWindow | undefined,\n\t\t\tevent: KeyboardEvent,\n\t\t) => void;\n\t} = Object.create(null);\n\n\tconstructor(\n\t\t@IUpdateService private readonly updateService: IUpdateService,\n\t\t@IConfigurationService\n\t\tprivate readonly configurationService: IConfigurationService,\n\t\t@IWindowsMainService\n\t\tprivate readonly windowsMainService: IWindowsMainService,\n\t\t@IEnvironmentMainService\n\t\tprivate readonly environmentMainService: IEnvironmentMainService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IWorkspacesHistoryMainService\n\t\tprivate readonly workspacesHistoryMainService: IWorkspacesHistoryMainService,\n\t\t@IStateService private readonly stateService: IStateService,\n\t\t@ILifecycleMainService\n\t\tprivate readonly lifecycleMainService: ILifecycleMainService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@INativeHostMainService\n\t\tprivate readonly nativeHostMainService: INativeHostMainService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IAuxiliaryWindowsMainService\n\t\tprivate readonly auxiliaryWindowsMainService: IAuxiliaryWindowsMainService,\n\t) {\n\t\tsuper();\n\n\t\tthis.menuUpdater = new RunOnceScheduler(() => this.doUpdateMenu(), 0);\n\n\t\tthis.menuGC = new RunOnceScheduler(() => {\n\t\t\tthis.oldMenus = [];\n\t\t}, 10000);\n\n\t\tthis.menubarMenus = Object.create(null);\n\t\tthis.keybindings = Object.create(null);\n\n\t\tif (isMacintosh || hasNativeTitlebar(configurationService)) {\n\t\t\tthis.restoreCachedMenubarData();\n\t\t}\n\n\t\tthis.addFallbackHandlers();\n\n\t\tthis.closedLastWindow = false;\n\t\tthis.noActiveMainWindow = false;\n\n\t\tthis.oldMenus = [];\n\n\t\tthis.install();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate restoreCachedMenubarData() {\n\t\tconst menubarData = this.stateService.getItem<IMenubarData>(\n\t\t\tMenubar.lastKnownMenubarStorageKey,\n\t\t);\n\t\tif (menubarData) {\n\t\t\tif (menubarData.menus) {\n\t\t\t\tthis.menubarMenus = menubarData.menus;\n\t\t\t}\n\n\t\t\tif (menubarData.keybindings) {\n\t\t\t\tthis.keybindings = menubarData.keybindings;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate addFallbackHandlers(): void {\n\t\t// File Menu Items\n\t\tthis.fallbackMenuHandlers[\"workbench.action.files.newUntitledFile\"] = (\n\t\t\tmenuItem,\n\t\t\twin,\n\t\t\tevent,\n\t\t) => {\n\t\t\tif (\n\t\t\t\t!this.runActionInRenderer({\n\t\t\t\t\ttype: \"commandId\",\n\t\t\t\t\tcommandId: \"workbench.action.files.newUntitledFile\",\n\t\t\t\t})\n\t\t\t) {\n\t\t\t\t// this is one of the few supported actions when aux window has focus\n\t\t\t\tthis.windowsMainService.openEmptyWindow({\n\t\t\t\t\tcontext: OpenContext.MENU,\n\t\t\t\t\tcontextWindowId: win?.id,\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\tthis.fallbackMenuHandlers[\"workbench.action.newWindow\"] = (\n\t\t\tmenuItem,\n\t\t\twin,\n\t\t\tevent,\n\t\t) =>\n\t\t\tthis.windowsMainService.openEmptyWindow({\n\t\t\t\tcontext: OpenContext.MENU,\n\t\t\t\tcontextWindowId: win?.id,\n\t\t\t});\n\t\tthis.fallbackMenuHandlers[\"workbench.action.files.openFileFolder\"] = (\n\t\t\tmenuItem,\n\t\t\twin,\n\t\t\tevent,\n\t\t) =>\n\t\t\tthis.nativeHostMainService.pickFileFolderAndOpen(undefined, {\n\t\t\t\tforceNewWindow: this.isOptionClick(event),\n\t\t\t\ttelemetryExtraData: { from: telemetryFrom },\n\t\t\t});\n\t\tthis.fallbackMenuHandlers[\"workbench.action.files.openFolder\"] = (\n\t\t\tmenuItem,\n\t\t\twin,\n\t\t\tevent,\n\t\t) =>\n\t\t\tthis.nativeHostMainService.pickFolderAndOpen(undefined, {\n\t\t\t\tforceNewWindow: this.isOptionClick(event),\n\t\t\t\ttelemetryExtraData: { from: telemetryFrom },\n\t\t\t});\n\t\tthis.fallbackMenuHandlers[\"workbench.action.openWorkspace\"] = (\n\t\t\tmenuItem,\n\t\t\twin,\n\t\t\tevent,\n\t\t) =>\n\t\t\tthis.nativeHostMainService.pickWorkspaceAndOpen(undefined, {\n\t\t\t\tforceNewWindow: this.isOptionClick(event),\n\t\t\t\ttelemetryExtraData: { from: telemetryFrom },\n\t\t\t});\n\n\t\t// Recent Menu Items\n\t\tthis.fallbackMenuHandlers[\"workbench.action.clearRecentFiles\"] = () =>\n\t\t\tthis.workspacesHistoryMainService.clearRecentlyOpened({\n\t\t\t\tconfirm: true /* ask for confirmation */,\n\t\t\t});\n\n\t\t// Help Menu Items\n\t\tconst youTubeUrl = this.productService.youTubeUrl;\n\t\tif (youTubeUrl) {\n\t\t\tthis.fallbackMenuHandlers[\"workbench.action.openYouTubeUrl\"] = () =>\n\t\t\t\tthis.openUrl(youTubeUrl, \"openYouTubeUrl\");\n\t\t}\n\n\t\tconst requestFeatureUrl = this.productService.requestFeatureUrl;\n\t\tif (requestFeatureUrl) {\n\t\t\tthis.fallbackMenuHandlers[\n\t\t\t\t\"workbench.action.openRequestFeatureUrl\"\n\t\t\t] = () => this.openUrl(requestFeatureUrl, \"openUserVoiceUrl\");\n\t\t}\n\n\t\tconst reportIssueUrl = this.productService.reportIssueUrl;\n\t\tif (reportIssueUrl) {\n\t\t\tthis.fallbackMenuHandlers[\"workbench.action.openIssueReporter\"] =\n\t\t\t\t() => this.openUrl(reportIssueUrl, \"openReportIssues\");\n\t\t}\n\n\t\tconst licenseUrl = this.productService.licenseUrl;\n\t\tif (licenseUrl) {\n\t\t\tthis.fallbackMenuHandlers[\"workbench.action.openLicenseUrl\"] =\n\t\t\t\t() => {\n\t\t\t\t\tif (language) {\n\t\t\t\t\t\tconst queryArgChar =\n\t\t\t\t\t\t\tlicenseUrl.indexOf(\"?\") > 0 ? \"&\" : \"?\";\n\t\t\t\t\t\tthis.openUrl(\n\t\t\t\t\t\t\t`${licenseUrl}${queryArgChar}lang=${language}`,\n\t\t\t\t\t\t\t\"openLicenseUrl\",\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.openUrl(licenseUrl, \"openLicenseUrl\");\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t}\n\n\t\tconst privacyStatementUrl = this.productService.privacyStatementUrl;\n\t\tif (privacyStatementUrl && licenseUrl) {\n\t\t\tthis.fallbackMenuHandlers[\n\t\t\t\t\"workbench.action.openPrivacyStatementUrl\"\n\t\t\t] = () => {\n\t\t\t\tthis.openUrl(privacyStatementUrl, \"openPrivacyStatement\");\n\t\t\t};\n\t\t}\n\t}\n\n\tprivate registerListeners(): void {\n\t\t// Keep flag when app quits\n\t\tthis._register(\n\t\t\tthis.lifecycleMainService.onWillShutdown(\n\t\t\t\t() => (this.willShutdown = true),\n\t\t\t),\n\t\t);\n\n\t\t// Listen to some events from window service to update menu\n\t\tthis._register(\n\t\t\tthis.windowsMainService.onDidChangeWindowsCount((e) =>\n\t\t\t\tthis.onDidChangeWindowsCount(e),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.nativeHostMainService.onDidBlurMainWindow(() =>\n\t\t\t\tthis.onDidChangeWindowFocus(),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.nativeHostMainService.onDidFocusMainWindow(() =>\n\t\t\t\tthis.onDidChangeWindowFocus(),\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate get currentEnableMenuBarMnemonics(): boolean {\n\t\tconst enableMenuBarMnemonics = this.configurationService.getValue(\n\t\t\t\"window.enableMenuBarMnemonics\",\n\t\t);\n\t\tif (typeof enableMenuBarMnemonics !== \"boolean\") {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn enableMenuBarMnemonics;\n\t}\n\n\tprivate get currentEnableNativeTabs(): boolean {\n\t\tif (!isMacintosh) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst enableNativeTabs =\n\t\t\tthis.configurationService.getValue(\"window.nativeTabs\");\n\t\tif (typeof enableNativeTabs !== \"boolean\") {\n\t\t\treturn false;\n\t\t}\n\t\treturn enableNativeTabs;\n\t}\n\n\tupdateMenu(menubarData: IMenubarData, windowId: number) {\n\t\tthis.menubarMenus = menubarData.menus;\n\t\tthis.keybindings = menubarData.keybindings;\n\n\t\t// Save off new menu and keybindings\n\t\tthis.stateService.setItem(\n\t\t\tMenubar.lastKnownMenubarStorageKey,\n\t\t\tmenubarData,\n\t\t);\n\n\t\tthis.scheduleUpdateMenu();\n\t}\n\n\tprivate scheduleUpdateMenu(): void {\n\t\tthis.menuUpdater.schedule(); // buffer multiple attempts to update the menu\n\t}\n\n\tprivate doUpdateMenu(): void {\n\t\t// Due to limitations in Electron, it is not possible to update menu items dynamically. The suggested\n\t\t// workaround from Electron is to set the application menu again.\n\t\t// See also https://github.com/electron/electron/issues/846\n\t\t//\n\t\t// Run delayed to prevent updating menu while it is open\n\t\tif (!this.willShutdown) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (!this.willShutdown) {\n\t\t\t\t\tthis.install();\n\t\t\t\t}\n\t\t\t}, 10 /* delay this because there is an issue with updating a menu when it is open */);\n\t\t}\n\t}\n\n\tprivate onDidChangeWindowsCount(e: IWindowsCountChangedEvent): void {\n\t\tif (!isMacintosh) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Update menu if window count goes from N > 0 or 0 > N to update menu item enablement\n\t\tif (\n\t\t\t(e.oldCount === 0 && e.newCount > 0) ||\n\t\t\t(e.oldCount > 0 && e.newCount === 0)\n\t\t) {\n\t\t\tthis.closedLastWindow = e.newCount === 0;\n\t\t\tthis.scheduleUpdateMenu();\n\t\t}\n\t}\n\n\tprivate onDidChangeWindowFocus(): void {\n\t\tif (!isMacintosh) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst focusedWindow = BrowserWindow.getFocusedWindow();\n\t\tthis.noActiveMainWindow =\n\t\t\t!focusedWindow ||\n\t\t\t!!this.auxiliaryWindowsMainService.getWindowByWebContents(\n\t\t\t\tfocusedWindow.webContents,\n\t\t\t);\n\t\tthis.scheduleUpdateMenu();\n\t}\n\n\tprivate install(): void {\n\t\t// Store old menu in our array to avoid GC to collect the menu and crash. See #55347\n\t\t// TODO@sbatten Remove this when fixed upstream by Electron\n\t\tconst oldMenu = Menu.getApplicationMenu();\n\t\tif (oldMenu) {\n\t\t\tthis.oldMenus.push(oldMenu);\n\t\t}\n\n\t\t// If we don't have a menu yet, set it to null to avoid the electron menu.\n\t\t// This should only happen on the first launch ever\n\t\tif (Object.keys(this.menubarMenus).length === 0) {\n\t\t\tthis.doSetApplicationMenu(isMacintosh ? new Menu() : null);\n\t\t\treturn;\n\t\t}\n\n\t\t// Menus\n\t\tconst menubar = new Menu();\n\n\t\t// Mac: Application\n\t\tlet macApplicationMenuItem: MenuItem;\n\t\tif (isMacintosh) {\n\t\t\tconst applicationMenu = new Menu();\n\t\t\tmacApplicationMenuItem = new MenuItem({\n\t\t\t\tlabel: this.productService.nameShort,\n\t\t\t\tsubmenu: applicationMenu,\n\t\t\t});\n\t\t\tthis.setMacApplicationMenu(applicationMenu);\n\t\t\tmenubar.append(macApplicationMenuItem);\n\t\t}\n\n\t\t// Mac: Dock\n\t\tif (isMacintosh && !this.appMenuInstalled) {\n\t\t\tthis.appMenuInstalled = true;\n\n\t\t\tconst dockMenu = new Menu();\n\t\t\tdockMenu.append(\n\t\t\t\tnew MenuItem({\n\t\t\t\t\tlabel: this.mnemonicLabel(\n\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tkey: \"miNewWindow\",\n\t\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"New &&Window\",\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t\tclick: () =>\n\t\t\t\t\t\tthis.windowsMainService.openEmptyWindow({\n\t\t\t\t\t\t\tcontext: OpenContext.DOCK,\n\t\t\t\t\t\t}),\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tapp.dock.setMenu(dockMenu);\n\t\t}\n\n\t\t// File\n\t\tif (this.shouldDrawMenu(\"File\")) {\n\t\t\tconst fileMenu = new Menu();\n\t\t\tconst fileMenuItem = new MenuItem({\n\t\t\t\tlabel: this.mnemonicLabel(\n\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t{ key: \"mFile\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\t\t\"&&File\",\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t\tsubmenu: fileMenu,\n\t\t\t});\n\t\t\tthis.setMenuById(fileMenu, \"File\");\n\t\t\tmenubar.append(fileMenuItem);\n\t\t}\n\n\t\t// Edit\n\t\tif (this.shouldDrawMenu(\"Edit\")) {\n\t\t\tconst editMenu = new Menu();\n\t\t\tconst editMenuItem = new MenuItem({\n\t\t\t\tlabel: this.mnemonicLabel(\n\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t{ key: \"mEdit\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\t\t\"&&Edit\",\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t\tsubmenu: editMenu,\n\t\t\t});\n\t\t\tthis.setMenuById(editMenu, \"Edit\");\n\t\t\tmenubar.append(editMenuItem);\n\t\t}\n\n\t\t// Selection\n\t\tif (this.shouldDrawMenu(\"Selection\")) {\n\t\t\tconst selectionMenu = new Menu();\n\t\t\tconst selectionMenuItem = new MenuItem({\n\t\t\t\tlabel: this.mnemonicLabel(\n\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: \"mSelection\",\n\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"&&Selection\",\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t\tsubmenu: selectionMenu,\n\t\t\t});\n\t\t\tthis.setMenuById(selectionMenu, \"Selection\");\n\t\t\tmenubar.append(selectionMenuItem);\n\t\t}\n\n\t\t// View\n\t\tif (this.shouldDrawMenu(\"View\")) {\n\t\t\tconst viewMenu = new Menu();\n\t\t\tconst viewMenuItem = new MenuItem({\n\t\t\t\tlabel: this.mnemonicLabel(\n\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t{ key: \"mView\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\t\t\"&&View\",\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t\tsubmenu: viewMenu,\n\t\t\t});\n\t\t\tthis.setMenuById(viewMenu, \"View\");\n\t\t\tmenubar.append(viewMenuItem);\n\t\t}\n\n\t\t// Go\n\t\tif (this.shouldDrawMenu(\"Go\")) {\n\t\t\tconst gotoMenu = new Menu();\n\t\t\tconst gotoMenuItem = new MenuItem({\n\t\t\t\tlabel: this.mnemonicLabel(\n\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t{ key: \"mGoto\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\t\t\"&&Go\",\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t\tsubmenu: gotoMenu,\n\t\t\t});\n\t\t\tthis.setMenuById(gotoMenu, \"Go\");\n\t\t\tmenubar.append(gotoMenuItem);\n\t\t}\n\n\t\t// Debug\n\t\tif (this.shouldDrawMenu(\"Run\")) {\n\t\t\tconst debugMenu = new Menu();\n\t\t\tconst debugMenuItem = new MenuItem({\n\t\t\t\tlabel: this.mnemonicLabel(\n\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t{ key: \"mRun\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\t\t\"&&Run\",\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t\tsubmenu: debugMenu,\n\t\t\t});\n\t\t\tthis.setMenuById(debugMenu, \"Run\");\n\t\t\tmenubar.append(debugMenuItem);\n\t\t}\n\n\t\t// Terminal\n\t\tif (this.shouldDrawMenu(\"Terminal\")) {\n\t\t\tconst terminalMenu = new Menu();\n\t\t\tconst terminalMenuItem = new MenuItem({\n\t\t\t\tlabel: this.mnemonicLabel(\n\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: \"mTerminal\",\n\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"&&Terminal\",\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t\tsubmenu: terminalMenu,\n\t\t\t});\n\t\t\tthis.setMenuById(terminalMenu, \"Terminal\");\n\t\t\tmenubar.append(terminalMenuItem);\n\t\t}\n\n\t\t// Mac: Window\n\t\tlet macWindowMenuItem: MenuItem | undefined;\n\t\tif (this.shouldDrawMenu(\"Window\")) {\n\t\t\tconst windowMenu = new Menu();\n\t\t\tmacWindowMenuItem = new MenuItem({\n\t\t\t\tlabel: this.mnemonicLabel(nls.localize(\"mWindow\", \"Window\")),\n\t\t\t\tsubmenu: windowMenu,\n\t\t\t\trole: \"window\",\n\t\t\t});\n\t\t\tthis.setMacWindowMenu(windowMenu);\n\t\t}\n\n\t\tif (macWindowMenuItem) {\n\t\t\tmenubar.append(macWindowMenuItem);\n\t\t}\n\n\t\t// Help\n\t\tif (this.shouldDrawMenu(\"Help\")) {\n\t\t\tconst helpMenu = new Menu();\n\t\t\tconst helpMenuItem = new MenuItem({\n\t\t\t\tlabel: this.mnemonicLabel(\n\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t{ key: \"mHelp\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\t\t\"&&Help\",\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t\tsubmenu: helpMenu,\n\t\t\t\trole: \"help\",\n\t\t\t});\n\t\t\tthis.setMenuById(helpMenu, \"Help\");\n\t\t\tmenubar.append(helpMenuItem);\n\t\t}\n\n\t\tif (menubar.items && menubar.items.length > 0) {\n\t\t\tthis.doSetApplicationMenu(menubar);\n\t\t} else {\n\t\t\tthis.doSetApplicationMenu(null);\n\t\t}\n\n\t\t// Dispose of older menus after some time\n\t\tthis.menuGC.schedule();\n\t}\n\n\tprivate doSetApplicationMenu(menu: Menu | null): void {\n\t\t// Setting the application menu sets it to all opened windows,\n\t\t// but we currently do not support a menu in auxiliary windows,\n\t\t// so we need to unset it there.\n\t\t//\n\t\t// This is a bit ugly but `setApplicationMenu()` has some nice\n\t\t// behaviour we want:\n\t\t// - on macOS it is required because menus are application set\n\t\t// - we use `getApplicationMenu()` to access the current state\n\t\t// - new windows immediately get the same menu when opening\n\t\t//   reducing overall flicker for these\n\n\t\tMenu.setApplicationMenu(menu);\n\n\t\tif (menu) {\n\t\t\tfor (const window of this.auxiliaryWindowsMainService.getWindows()) {\n\t\t\t\twindow.win?.setMenu(null);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate setMacApplicationMenu(macApplicationMenu: Menu): void {\n\t\tconst about = this.createMenuItem(\n\t\t\tnls.localize(\"mAbout\", \"About {0}\", this.productService.nameLong),\n\t\t\t\"workbench.action.showAboutDialog\",\n\t\t);\n\t\tconst checkForUpdates = this.getUpdateMenuItems();\n\n\t\tlet preferences;\n\t\tif (this.shouldDrawMenu(\"Preferences\")) {\n\t\t\tconst preferencesMenu = new Menu();\n\t\t\tthis.setMenuById(preferencesMenu, \"Preferences\");\n\t\t\tpreferences = new MenuItem({\n\t\t\t\tlabel: this.mnemonicLabel(\n\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: \"miPreferences\",\n\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"&&Preferences\",\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t\tsubmenu: preferencesMenu,\n\t\t\t});\n\t\t}\n\n\t\tconst servicesMenu = new Menu();\n\t\tconst services = new MenuItem({\n\t\t\tlabel: nls.localize(\"mServices\", \"Services\"),\n\t\t\trole: \"services\",\n\t\t\tsubmenu: servicesMenu,\n\t\t});\n\t\tconst hide = new MenuItem({\n\t\t\tlabel: nls.localize(\n\t\t\t\t\"mHide\",\n\t\t\t\t\"Hide {0}\",\n\t\t\t\tthis.productService.nameLong,\n\t\t\t),\n\t\t\trole: \"hide\",\n\t\t\taccelerator: \"Command+H\",\n\t\t});\n\t\tconst hideOthers = new MenuItem({\n\t\t\tlabel: nls.localize(\"mHideOthers\", \"Hide Others\"),\n\t\t\trole: \"hideOthers\",\n\t\t\taccelerator: \"Command+Alt+H\",\n\t\t});\n\t\tconst showAll = new MenuItem({\n\t\t\tlabel: nls.localize(\"mShowAll\", \"Show All\"),\n\t\t\trole: \"unhide\",\n\t\t});\n\t\tconst quit = new MenuItem(\n\t\t\tthis.likeAction(\"workbench.action.quit\", {\n\t\t\t\tlabel: nls.localize(\n\t\t\t\t\t\"miQuit\",\n\t\t\t\t\t\"Quit {0}\",\n\t\t\t\t\tthis.productService.nameLong,\n\t\t\t\t),\n\t\t\t\tclick: async (item, window, event) => {\n\t\t\t\t\tconst lastActiveWindow =\n\t\t\t\t\t\tthis.windowsMainService.getLastActiveWindow();\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.windowsMainService.getWindowCount() === 0 || // allow to quit when no more windows are open\n\t\t\t\t\t\t!!BrowserWindow.getFocusedWindow() || // allow to quit when window has focus (fix for https://github.com/microsoft/vscode/issues/39191)\n\t\t\t\t\t\tlastActiveWindow?.win?.isMinimized() // allow to quit when window has no focus but is minimized (https://github.com/microsoft/vscode/issues/63000)\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst confirmed = await this.confirmBeforeQuit(event);\n\t\t\t\t\t\tif (confirmed) {\n\t\t\t\t\t\t\tthis.nativeHostMainService.quit(undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t}),\n\t\t);\n\n\t\tconst actions = [about];\n\t\tactions.push(...checkForUpdates);\n\n\t\tif (preferences) {\n\t\t\tactions.push(...[__separator__(), preferences]);\n\t\t}\n\n\t\tactions.push(\n\t\t\t...[\n\t\t\t\t__separator__(),\n\t\t\t\tservices,\n\t\t\t\t__separator__(),\n\t\t\t\thide,\n\t\t\t\thideOthers,\n\t\t\t\tshowAll,\n\t\t\t\t__separator__(),\n\t\t\t\tquit,\n\t\t\t],\n\t\t);\n\n\t\tactions.forEach((i) => macApplicationMenu.append(i));\n\t}\n\n\tprivate async confirmBeforeQuit(event: KeyboardEvent): Promise<boolean> {\n\t\tif (this.windowsMainService.getWindowCount() === 0) {\n\t\t\treturn true; // never confirm when no windows are opened\n\t\t}\n\n\t\tconst confirmBeforeClose = this.configurationService.getValue<\n\t\t\t\"always\" | \"never\" | \"keyboardOnly\"\n\t\t>(\"window.confirmBeforeClose\");\n\t\tif (\n\t\t\tconfirmBeforeClose === \"always\" ||\n\t\t\t(confirmBeforeClose === \"keyboardOnly\" &&\n\t\t\t\tthis.isKeyboardEvent(event))\n\t\t) {\n\t\t\tconst { response } =\n\t\t\t\tawait this.nativeHostMainService.showMessageBox(\n\t\t\t\t\tthis.windowsMainService.getFocusedWindow()?.id,\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: \"question\",\n\t\t\t\t\t\tbuttons: [\n\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tkey: \"quit\",\n\t\t\t\t\t\t\t\t\tcomment: [\"&& denotes a mnemonic\"],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"&&Quit\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tnls.localize(\"cancel\", \"Cancel\"),\n\t\t\t\t\t\t],\n\t\t\t\t\t\tmessage: nls.localize(\n\t\t\t\t\t\t\t\"quitMessage\",\n\t\t\t\t\t\t\t\"Are you sure you want to quit?\",\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t);\n\n\t\t\treturn response === 0;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate shouldDrawMenu(menuId: string): boolean {\n\t\t// We need to draw an empty menu to override the electron default\n\t\tif (!isMacintosh && !hasNativeTitlebar(this.configurationService)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tswitch (menuId) {\n\t\t\tcase \"File\":\n\t\t\tcase \"Help\":\n\t\t\t\tif (isMacintosh) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t(this.windowsMainService.getWindowCount() === 0 &&\n\t\t\t\t\t\t\tthis.closedLastWindow) ||\n\t\t\t\t\t\t(this.windowsMainService.getWindowCount() > 0 &&\n\t\t\t\t\t\t\tthis.noActiveMainWindow) ||\n\t\t\t\t\t\t(!!this.menubarMenus && !!this.menubarMenus[menuId])\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\tcase \"Window\":\n\t\t\t\tif (isMacintosh) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t(this.windowsMainService.getWindowCount() === 0 &&\n\t\t\t\t\t\t\tthis.closedLastWindow) ||\n\t\t\t\t\t\t(this.windowsMainService.getWindowCount() > 0 &&\n\t\t\t\t\t\t\tthis.noActiveMainWindow) ||\n\t\t\t\t\t\t!!this.menubarMenus\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\tdefault:\n\t\t\t\treturn (\n\t\t\t\t\tthis.windowsMainService.getWindowCount() > 0 &&\n\t\t\t\t\t!!this.menubarMenus &&\n\t\t\t\t\t!!this.menubarMenus[menuId]\n\t\t\t\t);\n\t\t}\n\t}\n\n\tprivate setMenu(menu: Menu, items: Array<MenubarMenuItem>) {\n\t\titems.forEach((item: MenubarMenuItem) => {\n\t\t\tif (isMenubarMenuItemSeparator(item)) {\n\t\t\t\tmenu.append(__separator__());\n\t\t\t} else if (isMenubarMenuItemSubmenu(item)) {\n\t\t\t\tconst submenu = new Menu();\n\t\t\t\tconst submenuItem = new MenuItem({\n\t\t\t\t\tlabel: this.mnemonicLabel(item.label),\n\t\t\t\t\tsubmenu,\n\t\t\t\t});\n\t\t\t\tthis.setMenu(submenu, item.submenu.items);\n\t\t\t\tmenu.append(submenuItem);\n\t\t\t} else if (isMenubarMenuItemRecentAction(item)) {\n\t\t\t\tmenu.append(this.createOpenRecentMenuItem(item));\n\t\t\t} else if (isMenubarMenuItemAction(item)) {\n\t\t\t\tif (item.id === \"workbench.action.showAboutDialog\") {\n\t\t\t\t\tthis.insertCheckForUpdatesItems(menu);\n\t\t\t\t}\n\n\t\t\t\tif (isMacintosh) {\n\t\t\t\t\tif (\n\t\t\t\t\t\t(this.windowsMainService.getWindowCount() === 0 &&\n\t\t\t\t\t\t\tthis.closedLastWindow) ||\n\t\t\t\t\t\t(this.windowsMainService.getWindowCount() > 0 &&\n\t\t\t\t\t\t\tthis.noActiveMainWindow)\n\t\t\t\t\t) {\n\t\t\t\t\t\t// In the fallback scenario, we are either disabled or using a fallback handler\n\t\t\t\t\t\tif (this.fallbackMenuHandlers[item.id]) {\n\t\t\t\t\t\t\tmenu.append(\n\t\t\t\t\t\t\t\tnew MenuItem(\n\t\t\t\t\t\t\t\t\tthis.likeAction(item.id, {\n\t\t\t\t\t\t\t\t\t\tlabel: this.mnemonicLabel(item.label),\n\t\t\t\t\t\t\t\t\t\tclick: this.fallbackMenuHandlers[\n\t\t\t\t\t\t\t\t\t\t\titem.id\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmenu.append(\n\t\t\t\t\t\t\t\tthis.createMenuItem(\n\t\t\t\t\t\t\t\t\titem.label,\n\t\t\t\t\t\t\t\t\titem.id,\n\t\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t\t\titem.checked,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmenu.append(\n\t\t\t\t\t\t\tthis.createMenuItem(\n\t\t\t\t\t\t\t\titem.label,\n\t\t\t\t\t\t\t\titem.id,\n\t\t\t\t\t\t\t\titem.enabled === false ? false : true,\n\t\t\t\t\t\t\t\t!!item.checked,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tmenu.append(\n\t\t\t\t\t\tthis.createMenuItem(\n\t\t\t\t\t\t\titem.label,\n\t\t\t\t\t\t\titem.id,\n\t\t\t\t\t\t\titem.enabled === false ? false : true,\n\t\t\t\t\t\t\t!!item.checked,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate setMenuById(menu: Menu, menuId: string): void {\n\t\tif (this.menubarMenus && this.menubarMenus[menuId]) {\n\t\t\tthis.setMenu(menu, this.menubarMenus[menuId].items);\n\t\t}\n\t}\n\n\tprivate insertCheckForUpdatesItems(menu: Menu) {\n\t\tconst updateItems = this.getUpdateMenuItems();\n\t\tif (updateItems.length) {\n\t\t\tupdateItems.forEach((i) => menu.append(i));\n\t\t\tmenu.append(__separator__());\n\t\t}\n\t}\n\n\tprivate createOpenRecentMenuItem(\n\t\titem: IMenubarMenuRecentItemAction,\n\t): MenuItem {\n\t\tconst revivedUri = URI.revive(item.uri);\n\t\tconst commandId = item.id;\n\t\tconst openable: IWindowOpenable =\n\t\t\tcommandId === \"openRecentFile\"\n\t\t\t\t? { fileUri: revivedUri }\n\t\t\t\t: commandId === \"openRecentWorkspace\"\n\t\t\t\t\t? { workspaceUri: revivedUri }\n\t\t\t\t\t: { folderUri: revivedUri };\n\n\t\treturn new MenuItem(\n\t\t\tthis.likeAction(\n\t\t\t\tcommandId,\n\t\t\t\t{\n\t\t\t\t\tlabel: item.label,\n\t\t\t\t\tclick: async (menuItem, win, event) => {\n\t\t\t\t\t\tconst openInNewWindow = this.isOptionClick(event);\n\t\t\t\t\t\tconst success =\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\tawait this.windowsMainService.open({\n\t\t\t\t\t\t\t\t\tcontext: OpenContext.MENU,\n\t\t\t\t\t\t\t\t\tcli: this.environmentMainService.args,\n\t\t\t\t\t\t\t\t\turisToOpen: [openable],\n\t\t\t\t\t\t\t\t\tforceNewWindow: openInNewWindow,\n\t\t\t\t\t\t\t\t\tgotoLineMode: false,\n\t\t\t\t\t\t\t\t\tremoteAuthority: item.remoteAuthority,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t).length > 0;\n\n\t\t\t\t\t\tif (!success) {\n\t\t\t\t\t\t\tawait this.workspacesHistoryMainService.removeRecentlyOpened(\n\t\t\t\t\t\t\t\t[revivedUri],\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tfalse,\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate isOptionClick(event: KeyboardEvent): boolean {\n\t\treturn !!(\n\t\t\tevent &&\n\t\t\t((!isMacintosh && (event.ctrlKey || event.shiftKey)) ||\n\t\t\t\t(isMacintosh && (event.metaKey || event.altKey)))\n\t\t);\n\t}\n\n\tprivate isKeyboardEvent(event: KeyboardEvent): boolean {\n\t\treturn !!(\n\t\t\tevent.triggeredByAccelerator ||\n\t\t\tevent.altKey ||\n\t\t\tevent.ctrlKey ||\n\t\t\tevent.metaKey ||\n\t\t\tevent.shiftKey\n\t\t);\n\t}\n\n\tprivate createRoleMenuItem(\n\t\tlabel: string,\n\t\tcommandId: string,\n\t\trole: any,\n\t): MenuItem {\n\t\tconst options: MenuItemConstructorOptions = {\n\t\t\tlabel: this.mnemonicLabel(label),\n\t\t\trole,\n\t\t\tenabled: true,\n\t\t};\n\n\t\treturn new MenuItem(this.withKeybinding(commandId, options));\n\t}\n\n\tprivate setMacWindowMenu(macWindowMenu: Menu): void {\n\t\tconst minimize = new MenuItem({\n\t\t\tlabel: nls.localize(\"mMinimize\", \"Minimize\"),\n\t\t\trole: \"minimize\",\n\t\t\taccelerator: \"Command+M\",\n\t\t\tenabled: this.windowsMainService.getWindowCount() > 0,\n\t\t});\n\t\tconst zoom = new MenuItem({\n\t\t\tlabel: nls.localize(\"mZoom\", \"Zoom\"),\n\t\t\trole: \"zoom\",\n\t\t\tenabled: this.windowsMainService.getWindowCount() > 0,\n\t\t});\n\t\tconst bringAllToFront = new MenuItem({\n\t\t\tlabel: nls.localize(\"mBringToFront\", \"Bring All to Front\"),\n\t\t\trole: \"front\",\n\t\t\tenabled: this.windowsMainService.getWindowCount() > 0,\n\t\t});\n\t\tconst switchWindow = this.createMenuItem(\n\t\t\tnls.localize(\n\t\t\t\t{ key: \"miSwitchWindow\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\"Switch &&Window...\",\n\t\t\t),\n\t\t\t\"workbench.action.switchWindow\",\n\t\t);\n\n\t\tconst nativeTabMenuItems: MenuItem[] = [];\n\t\tif (this.currentEnableNativeTabs) {\n\t\t\tnativeTabMenuItems.push(__separator__());\n\n\t\t\tnativeTabMenuItems.push(\n\t\t\t\tthis.createMenuItem(\n\t\t\t\t\tnls.localize(\"mNewTab\", \"New Tab\"),\n\t\t\t\t\t\"workbench.action.newWindowTab\",\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tnativeTabMenuItems.push(\n\t\t\t\tthis.createRoleMenuItem(\n\t\t\t\t\tnls.localize(\"mShowPreviousTab\", \"Show Previous Tab\"),\n\t\t\t\t\t\"workbench.action.showPreviousWindowTab\",\n\t\t\t\t\t\"selectPreviousTab\",\n\t\t\t\t),\n\t\t\t);\n\t\t\tnativeTabMenuItems.push(\n\t\t\t\tthis.createRoleMenuItem(\n\t\t\t\t\tnls.localize(\"mShowNextTab\", \"Show Next Tab\"),\n\t\t\t\t\t\"workbench.action.showNextWindowTab\",\n\t\t\t\t\t\"selectNextTab\",\n\t\t\t\t),\n\t\t\t);\n\t\t\tnativeTabMenuItems.push(\n\t\t\t\tthis.createRoleMenuItem(\n\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\"mMoveTabToNewWindow\",\n\t\t\t\t\t\t\"Move Tab to New Window\",\n\t\t\t\t\t),\n\t\t\t\t\t\"workbench.action.moveWindowTabToNewWindow\",\n\t\t\t\t\t\"moveTabToNewWindow\",\n\t\t\t\t),\n\t\t\t);\n\t\t\tnativeTabMenuItems.push(\n\t\t\t\tthis.createRoleMenuItem(\n\t\t\t\t\tnls.localize(\"mMergeAllWindows\", \"Merge All Windows\"),\n\t\t\t\t\t\"workbench.action.mergeAllWindowTabs\",\n\t\t\t\t\t\"mergeAllWindows\",\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\n\t\t[\n\t\t\tminimize,\n\t\t\tzoom,\n\t\t\t__separator__(),\n\t\t\tswitchWindow,\n\t\t\t...nativeTabMenuItems,\n\t\t\t__separator__(),\n\t\t\tbringAllToFront,\n\t\t].forEach((item) => macWindowMenu.append(item));\n\t}\n\n\tprivate getUpdateMenuItems(): MenuItem[] {\n\t\tconst state = this.updateService.state;\n\n\t\tswitch (state.type) {\n\t\t\tcase StateType.Idle:\n\t\t\t\treturn [\n\t\t\t\t\tnew MenuItem({\n\t\t\t\t\t\tlabel: this.mnemonicLabel(\n\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\"miCheckForUpdates\",\n\t\t\t\t\t\t\t\t\"Check for &&Updates...\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t\tclick: () =>\n\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\tthis.reportMenuActionTelemetry(\n\t\t\t\t\t\t\t\t\t\"CheckForUpdate\",\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tthis.updateService.checkForUpdates(true);\n\t\t\t\t\t\t\t}, 0),\n\t\t\t\t\t}),\n\t\t\t\t];\n\n\t\t\tcase StateType.CheckingForUpdates:\n\t\t\t\treturn [\n\t\t\t\t\tnew MenuItem({\n\t\t\t\t\t\tlabel: nls.localize(\n\t\t\t\t\t\t\t\"miCheckingForUpdates\",\n\t\t\t\t\t\t\t\"Checking for Updates...\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\tenabled: false,\n\t\t\t\t\t}),\n\t\t\t\t];\n\n\t\t\tcase StateType.AvailableForDownload:\n\t\t\t\treturn [\n\t\t\t\t\tnew MenuItem({\n\t\t\t\t\t\tlabel: this.mnemonicLabel(\n\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\"miDownloadUpdate\",\n\t\t\t\t\t\t\t\t\"D&&ownload Available Update\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\tthis.updateService.downloadUpdate();\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t];\n\n\t\t\tcase StateType.Downloading:\n\t\t\t\treturn [\n\t\t\t\t\tnew MenuItem({\n\t\t\t\t\t\tlabel: nls.localize(\n\t\t\t\t\t\t\t\"miDownloadingUpdate\",\n\t\t\t\t\t\t\t\"Downloading Update...\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\tenabled: false,\n\t\t\t\t\t}),\n\t\t\t\t];\n\n\t\t\tcase StateType.Downloaded:\n\t\t\t\treturn isMacintosh\n\t\t\t\t\t? []\n\t\t\t\t\t: [\n\t\t\t\t\t\t\tnew MenuItem({\n\t\t\t\t\t\t\t\tlabel: this.mnemonicLabel(\n\t\t\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\t\t\"miInstallUpdate\",\n\t\t\t\t\t\t\t\t\t\t\"Install &&Update...\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\t\t\tthis.reportMenuActionTelemetry(\n\t\t\t\t\t\t\t\t\t\t\"InstallUpdate\",\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tthis.updateService.applyUpdate();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t];\n\n\t\t\tcase StateType.Updating:\n\t\t\t\treturn [\n\t\t\t\t\tnew MenuItem({\n\t\t\t\t\t\tlabel: nls.localize(\n\t\t\t\t\t\t\t\"miInstallingUpdate\",\n\t\t\t\t\t\t\t\"Installing Update...\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\tenabled: false,\n\t\t\t\t\t}),\n\t\t\t\t];\n\n\t\t\tcase StateType.Ready:\n\t\t\t\treturn [\n\t\t\t\t\tnew MenuItem({\n\t\t\t\t\t\tlabel: this.mnemonicLabel(\n\t\t\t\t\t\t\tnls.localize(\n\t\t\t\t\t\t\t\t\"miRestartToUpdate\",\n\t\t\t\t\t\t\t\t\"Restart to &&Update\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\tthis.reportMenuActionTelemetry(\"RestartToUpdate\");\n\t\t\t\t\t\t\tthis.updateService.quitAndInstall();\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t];\n\n\t\t\tdefault:\n\t\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate createMenuItem(\n\t\tlabel: string,\n\t\tcommandId: string | string[],\n\t\tenabled?: boolean,\n\t\tchecked?: boolean,\n\t): MenuItem;\n\tprivate createMenuItem(\n\t\tlabel: string,\n\t\tclick: () => void,\n\t\tenabled?: boolean,\n\t\tchecked?: boolean,\n\t): MenuItem;\n\tprivate createMenuItem(\n\t\targ1: string,\n\t\targ2: any,\n\t\targ3?: boolean,\n\t\targ4?: boolean,\n\t): MenuItem {\n\t\tconst label = this.mnemonicLabel(arg1);\n\t\tconst click: () => void =\n\t\t\ttypeof arg2 === \"function\"\n\t\t\t\t? arg2\n\t\t\t\t: (\n\t\t\t\t\t\tmenuItem: MenuItem & IMenuItemWithKeybinding,\n\t\t\t\t\t\twin: BrowserWindow,\n\t\t\t\t\t\tevent: KeyboardEvent,\n\t\t\t\t\t) => {\n\t\t\t\t\t\tconst userSettingsLabel = menuItem\n\t\t\t\t\t\t\t? menuItem.userSettingsLabel\n\t\t\t\t\t\t\t: null;\n\t\t\t\t\t\tlet commandId = arg2;\n\t\t\t\t\t\tif (Array.isArray(arg2)) {\n\t\t\t\t\t\t\tcommandId = this.isOptionClick(event)\n\t\t\t\t\t\t\t\t? arg2[1]\n\t\t\t\t\t\t\t\t: arg2[0]; // support alternative action if we got multiple action Ids and the option key was pressed while invoking\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (userSettingsLabel && event.triggeredByAccelerator) {\n\t\t\t\t\t\t\tthis.runActionInRenderer({\n\t\t\t\t\t\t\t\ttype: \"keybinding\",\n\t\t\t\t\t\t\t\tuserSettingsLabel,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.runActionInRenderer({\n\t\t\t\t\t\t\t\ttype: \"commandId\",\n\t\t\t\t\t\t\t\tcommandId,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\tconst enabled =\n\t\t\ttypeof arg3 === \"boolean\"\n\t\t\t\t? arg3\n\t\t\t\t: this.windowsMainService.getWindowCount() > 0;\n\t\tconst checked = typeof arg4 === \"boolean\" ? arg4 : false;\n\n\t\tconst options: MenuItemConstructorOptions = {\n\t\t\tlabel,\n\t\t\tclick,\n\t\t\tenabled,\n\t\t};\n\n\t\tif (checked) {\n\t\t\toptions.type = \"checkbox\";\n\t\t\toptions.checked = checked;\n\t\t}\n\n\t\tlet commandId: string | undefined;\n\t\tif (typeof arg2 === \"string\") {\n\t\t\tcommandId = arg2;\n\t\t} else if (Array.isArray(arg2)) {\n\t\t\tcommandId = arg2[0];\n\t\t}\n\n\t\tif (isMacintosh) {\n\t\t\t// Add role for special case menu items\n\t\t\tif (commandId === \"editor.action.clipboardCutAction\") {\n\t\t\t\toptions.role = \"cut\";\n\t\t\t} else if (commandId === \"editor.action.clipboardCopyAction\") {\n\t\t\t\toptions.role = \"copy\";\n\t\t\t} else if (commandId === \"editor.action.clipboardPasteAction\") {\n\t\t\t\toptions.role = \"paste\";\n\t\t\t}\n\n\t\t\t// Add context aware click handlers for special case menu items\n\t\t\tif (commandId === \"undo\") {\n\t\t\t\toptions.click = this.makeContextAwareClickHandler(click, {\n\t\t\t\t\tinDevTools: (devTools) => devTools.undo(),\n\t\t\t\t\tinNoWindow: () => Menu.sendActionToFirstResponder(\"undo:\"),\n\t\t\t\t});\n\t\t\t} else if (commandId === \"redo\") {\n\t\t\t\toptions.click = this.makeContextAwareClickHandler(click, {\n\t\t\t\t\tinDevTools: (devTools) => devTools.redo(),\n\t\t\t\t\tinNoWindow: () => Menu.sendActionToFirstResponder(\"redo:\"),\n\t\t\t\t});\n\t\t\t} else if (commandId === \"editor.action.selectAll\") {\n\t\t\t\toptions.click = this.makeContextAwareClickHandler(click, {\n\t\t\t\t\tinDevTools: (devTools) => devTools.selectAll(),\n\t\t\t\t\tinNoWindow: () =>\n\t\t\t\t\t\tMenu.sendActionToFirstResponder(\"selectAll:\"),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new MenuItem(this.withKeybinding(commandId, options));\n\t}\n\n\tprivate makeContextAwareClickHandler(\n\t\tclick: (\n\t\t\tmenuItem: MenuItem,\n\t\t\twin: BrowserWindow,\n\t\t\tevent: KeyboardEvent,\n\t\t) => void,\n\t\tcontextSpecificHandlers: IMenuItemClickHandler,\n\t): (\n\t\tmenuItem: MenuItem,\n\t\twin: BrowserWindow | undefined,\n\t\tevent: KeyboardEvent,\n\t) => void {\n\t\treturn (\n\t\t\tmenuItem: MenuItem,\n\t\t\twin: BrowserWindow | undefined,\n\t\t\tevent: KeyboardEvent,\n\t\t) => {\n\t\t\t// No Active Window\n\t\t\tconst activeWindow = BrowserWindow.getFocusedWindow();\n\t\t\tif (!activeWindow) {\n\t\t\t\treturn contextSpecificHandlers.inNoWindow();\n\t\t\t}\n\n\t\t\t// DevTools focused\n\t\t\tif (\n\t\t\t\tactiveWindow.webContents.isDevToolsFocused() &&\n\t\t\t\tactiveWindow.webContents.devToolsWebContents\n\t\t\t) {\n\t\t\t\treturn contextSpecificHandlers.inDevTools(\n\t\t\t\t\tactiveWindow.webContents.devToolsWebContents,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Finally execute command in Window\n\t\t\tclick(menuItem, win || activeWindow, event);\n\t\t};\n\t}\n\n\tprivate runActionInRenderer(invocation: IMenuItemInvocation): boolean {\n\t\t// We want to support auxililary windows that may have focus by\n\t\t// returning their parent windows as target to support running\n\t\t// actions via the main window.\n\t\tlet activeBrowserWindow = BrowserWindow.getFocusedWindow();\n\t\tif (activeBrowserWindow) {\n\t\t\tconst auxiliaryWindowCandidate =\n\t\t\t\tthis.auxiliaryWindowsMainService.getWindowByWebContents(\n\t\t\t\t\tactiveBrowserWindow.webContents,\n\t\t\t\t);\n\t\t\tif (auxiliaryWindowCandidate) {\n\t\t\t\tactiveBrowserWindow =\n\t\t\t\t\tthis.windowsMainService.getWindowById(\n\t\t\t\t\t\tauxiliaryWindowCandidate.parentId,\n\t\t\t\t\t)?.win ?? null;\n\t\t\t}\n\t\t}\n\n\t\t// We make sure to not run actions when the window has no focus, this helps\n\t\t// for https://github.com/microsoft/vscode/issues/25907 and specifically for\n\t\t// https://github.com/microsoft/vscode/issues/11928\n\t\t// Still allow to run when the last active window is minimized though for\n\t\t// https://github.com/microsoft/vscode/issues/63000\n\t\tif (!activeBrowserWindow) {\n\t\t\tconst lastActiveWindow =\n\t\t\t\tthis.windowsMainService.getLastActiveWindow();\n\t\t\tif (lastActiveWindow?.win?.isMinimized()) {\n\t\t\t\tactiveBrowserWindow = lastActiveWindow.win;\n\t\t\t}\n\t\t}\n\n\t\tconst activeWindow = activeBrowserWindow\n\t\t\t? this.windowsMainService.getWindowById(activeBrowserWindow.id)\n\t\t\t: undefined;\n\t\tif (activeWindow) {\n\t\t\tthis.logService.trace(\"menubar#runActionInRenderer\", invocation);\n\n\t\t\tif (\n\t\t\t\tisMacintosh &&\n\t\t\t\t!this.environmentMainService.isBuilt &&\n\t\t\t\t!activeWindow.isReady\n\t\t\t) {\n\t\t\t\tif (\n\t\t\t\t\t(invocation.type === \"commandId\" &&\n\t\t\t\t\t\tinvocation.commandId ===\n\t\t\t\t\t\t\t\"workbench.action.toggleDevTools\") ||\n\t\t\t\t\t(invocation.type !== \"commandId\" &&\n\t\t\t\t\t\tinvocation.userSettingsLabel === \"alt+cmd+i\")\n\t\t\t\t) {\n\t\t\t\t\t// prevent this action from running twice on macOS (https://github.com/microsoft/vscode/issues/62719)\n\t\t\t\t\t// we already register a keybinding in bootstrap-window.js for opening developer tools in case something\n\t\t\t\t\t// goes wrong and that keybinding is only removed when the application has loaded (= window ready).\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (invocation.type === \"commandId\") {\n\t\t\t\tconst runActionPayload: INativeRunActionInWindowRequest = {\n\t\t\t\t\tid: invocation.commandId,\n\t\t\t\t\tfrom: \"menu\",\n\t\t\t\t};\n\t\t\t\tactiveWindow.sendWhenReady(\n\t\t\t\t\t\"vscode:runAction\",\n\t\t\t\t\tCancellationToken.None,\n\t\t\t\t\trunActionPayload,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tconst runKeybindingPayload: INativeRunKeybindingInWindowRequest =\n\t\t\t\t\t{ userSettingsLabel: invocation.userSettingsLabel };\n\t\t\t\tactiveWindow.sendWhenReady(\n\t\t\t\t\t\"vscode:runKeybinding\",\n\t\t\t\t\tCancellationToken.None,\n\t\t\t\t\trunKeybindingPayload,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.logService.trace(\n\t\t\t\t\"menubar#runActionInRenderer: no active window found\",\n\t\t\t\tinvocation,\n\t\t\t);\n\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate withKeybinding(\n\t\tcommandId: string | undefined,\n\t\toptions: MenuItemConstructorOptions & IMenuItemWithKeybinding,\n\t): MenuItemConstructorOptions {\n\t\tconst binding =\n\t\t\ttypeof commandId === \"string\"\n\t\t\t\t? this.keybindings[commandId]\n\t\t\t\t: undefined;\n\n\t\t// Apply binding if there is one\n\t\tif (binding?.label) {\n\t\t\t// if the binding is native, we can just apply it\n\t\t\tif (binding.isNative !== false) {\n\t\t\t\toptions.accelerator = binding.label;\n\t\t\t\toptions.userSettingsLabel = binding.userSettingsLabel;\n\t\t\t}\n\n\t\t\t// the keybinding is not native so we cannot show it as part of the accelerator of\n\t\t\t// the menu item. we fallback to a different strategy so that we always display it\n\t\t\telse if (typeof options.label === \"string\") {\n\t\t\t\tconst bindingIndex = options.label.indexOf(\"[\");\n\t\t\t\tif (bindingIndex >= 0) {\n\t\t\t\t\toptions.label = `${options.label.substr(0, bindingIndex)} [${binding.label}]`;\n\t\t\t\t} else {\n\t\t\t\t\toptions.label = `${options.label} [${binding.label}]`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Unset bindings if there is none\n\t\telse {\n\t\t\toptions.accelerator = undefined;\n\t\t}\n\n\t\treturn options;\n\t}\n\n\tprivate likeAction(\n\t\tcommandId: string,\n\t\toptions: MenuItemConstructorOptions,\n\t\tsetAccelerator = !options.accelerator,\n\t): MenuItemConstructorOptions {\n\t\tif (setAccelerator) {\n\t\t\toptions = this.withKeybinding(commandId, options);\n\t\t}\n\n\t\tconst originalClick = options.click;\n\t\toptions.click = (item, window, event) => {\n\t\t\tthis.reportMenuActionTelemetry(commandId);\n\t\t\toriginalClick?.(item, window, event);\n\t\t};\n\n\t\treturn options;\n\t}\n\n\tprivate openUrl(url: string, id: string): void {\n\t\tthis.nativeHostMainService.openExternal(undefined, url);\n\t\tthis.reportMenuActionTelemetry(id);\n\t}\n\n\tprivate reportMenuActionTelemetry(id: string): void {\n\t\tthis.telemetryService.publicLog2<\n\t\t\tWorkbenchActionExecutedEvent,\n\t\t\tWorkbenchActionExecutedClassification\n\t\t>(\"workbenchActionExecuted\", { id, from: telemetryFrom });\n\t}\n\n\tprivate mnemonicLabel(label: string): string {\n\t\treturn mnemonicMenuLabel(label, !this.currentEnableMenuBarMnemonics);\n\t}\n}\n\nfunction __separator__(): MenuItem {\n\treturn new MenuItem({ type: \"separator\" });\n}\n"],
  "mappings": "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",
  "names": ["commandId"]
}
