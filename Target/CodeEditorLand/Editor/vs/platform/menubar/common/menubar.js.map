{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/menubar/common/menubar.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from '../../../base/common/uri.js';\n\nexport interface ICommonMenubarService {\n\tupdateMenubar(windowId: number, menuData: IMenubarData): Promise<void>;\n}\n\nexport interface IMenubarData {\n\tmenus: { [id: string]: IMenubarMenu };\n\tkeybindings: { [id: string]: IMenubarKeybinding };\n}\n\nexport interface IMenubarMenu {\n\titems: Array<MenubarMenuItem>;\n}\n\nexport interface IMenubarKeybinding {\n\tlabel: string;\n\tuserSettingsLabel?: string;\n\tisNative?: boolean; // Assumed true if missing\n}\n\nexport interface IMenubarMenuItemAction {\n\tid: string;\n\tlabel: string;\n\tchecked?: boolean; // Assumed false if missing\n\tenabled?: boolean; // Assumed true if missing\n}\n\nexport interface IMenubarMenuRecentItemAction {\n\tid: string;\n\tlabel: string;\n\turi: URI;\n\tremoteAuthority?: string;\n\tenabled?: boolean;\n}\n\nexport interface IMenubarMenuItemSubmenu {\n\tid: string;\n\tlabel: string;\n\tsubmenu: IMenubarMenu;\n}\n\nexport interface IMenubarMenuItemSeparator {\n\tid: 'vscode.menubar.separator';\n}\n\nexport type MenubarMenuItem = IMenubarMenuItemAction | IMenubarMenuItemSubmenu | IMenubarMenuItemSeparator | IMenubarMenuRecentItemAction;\n\nexport function isMenubarMenuItemSubmenu(menuItem: MenubarMenuItem): menuItem is IMenubarMenuItemSubmenu {\n\treturn (<IMenubarMenuItemSubmenu>menuItem).submenu !== undefined;\n}\n\nexport function isMenubarMenuItemSeparator(menuItem: MenubarMenuItem): menuItem is IMenubarMenuItemSeparator {\n\treturn (<IMenubarMenuItemSeparator>menuItem).id === 'vscode.menubar.separator';\n}\n\nexport function isMenubarMenuItemRecentAction(menuItem: MenubarMenuItem): menuItem is IMenubarMenuRecentItemAction {\n\treturn (<IMenubarMenuRecentItemAction>menuItem).uri !== undefined;\n}\n\nexport function isMenubarMenuItemAction(menuItem: MenubarMenuItem): menuItem is IMenubarMenuItemAction {\n\treturn !isMenubarMenuItemSubmenu(menuItem) && !isMenubarMenuItemSeparator(menuItem) && !isMenubarMenuItemRecentAction(menuItem);\n}\n"],
  "mappings": ";;AAKA,SAAS,WAAW;AAgDb,SAAS,yBAAyB,UAAgE;AACxG,SAAiC,SAAU,YAAY;AACxD;AAFgB;AAIT,SAAS,2BAA2B,UAAkE;AAC5G,SAAmC,SAAU,OAAO;AACrD;AAFgB;AAIT,SAAS,8BAA8B,UAAqE;AAClH,SAAsC,SAAU,QAAQ;AACzD;AAFgB;AAIT,SAAS,wBAAwB,UAA+D;AACtG,SAAO,CAAC,yBAAyB,QAAQ,KAAK,CAAC,2BAA2B,QAAQ,KAAK,CAAC,8BAA8B,QAAQ;AAC/H;AAFgB;",
  "names": []
}
