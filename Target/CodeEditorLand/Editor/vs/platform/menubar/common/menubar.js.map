{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/menubar/common/menubar.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { URI } from \"../../../base/common/uri.js\";\n\nexport interface ICommonMenubarService {\n\tupdateMenubar(windowId: number, menuData: IMenubarData): Promise<void>;\n}\n\nexport interface IMenubarData {\n\tmenus: { [id: string]: IMenubarMenu };\n\tkeybindings: { [id: string]: IMenubarKeybinding };\n}\n\nexport interface IMenubarMenu {\n\titems: Array<MenubarMenuItem>;\n}\n\nexport interface IMenubarKeybinding {\n\tlabel: string;\n\tuserSettingsLabel?: string;\n\tisNative?: boolean; // Assumed true if missing\n}\n\nexport interface IMenubarMenuItemAction {\n\tid: string;\n\tlabel: string;\n\tchecked?: boolean; // Assumed false if missing\n\tenabled?: boolean; // Assumed true if missing\n}\n\nexport interface IMenubarMenuRecentItemAction {\n\tid: string;\n\tlabel: string;\n\turi: URI;\n\tremoteAuthority?: string;\n\tenabled?: boolean;\n}\n\nexport interface IMenubarMenuItemSubmenu {\n\tid: string;\n\tlabel: string;\n\tsubmenu: IMenubarMenu;\n}\n\nexport interface IMenubarMenuItemSeparator {\n\tid: \"vscode.menubar.separator\";\n}\n\nexport type MenubarMenuItem =\n\t| IMenubarMenuItemAction\n\t| IMenubarMenuItemSubmenu\n\t| IMenubarMenuItemSeparator\n\t| IMenubarMenuRecentItemAction;\n\nexport function isMenubarMenuItemSubmenu(\n\tmenuItem: MenubarMenuItem,\n): menuItem is IMenubarMenuItemSubmenu {\n\treturn (<IMenubarMenuItemSubmenu>menuItem).submenu !== undefined;\n}\n\nexport function isMenubarMenuItemSeparator(\n\tmenuItem: MenubarMenuItem,\n): menuItem is IMenubarMenuItemSeparator {\n\treturn (\n\t\t(<IMenubarMenuItemSeparator>menuItem).id === \"vscode.menubar.separator\"\n\t);\n}\n\nexport function isMenubarMenuItemRecentAction(\n\tmenuItem: MenubarMenuItem,\n): menuItem is IMenubarMenuRecentItemAction {\n\treturn (<IMenubarMenuRecentItemAction>menuItem).uri !== undefined;\n}\n\nexport function isMenubarMenuItemAction(\n\tmenuItem: MenubarMenuItem,\n): menuItem is IMenubarMenuItemAction {\n\treturn (\n\t\t!isMenubarMenuItemSubmenu(menuItem) &&\n\t\t!isMenubarMenuItemSeparator(menuItem) &&\n\t\t!isMenubarMenuItemRecentAction(menuItem)\n\t);\n}\n"],
  "mappings": ";;AAyDO,SAAS,yBACf,UACsC;AACtC,SAAiC,SAAU,YAAY;AACxD;AAJgB;AAMT,SAAS,2BACf,UACwC;AACxC,SAC6B,SAAU,OAAO;AAE/C;AANgB;AAQT,SAAS,8BACf,UAC2C;AAC3C,SAAsC,SAAU,QAAQ;AACzD;AAJgB;AAMT,SAAS,wBACf,UACqC;AACrC,SACC,CAAC,yBAAyB,QAAQ,KAClC,CAAC,2BAA2B,QAAQ,KACpC,CAAC,8BAA8B,QAAQ;AAEzC;AARgB;",
  "names": []
}
