import m from"electron";import{Color as W}from"../../../base/common/color.js";import{join as y}from"../../../base/common/path.js";import{isLinux as h,isMacintosh as s,isWindows as I}from"../../../base/common/platform.js";import{IConfigurationService as b}from"../../configuration/common/configuration.js";import{IEnvironmentMainService as v}from"../../environment/electron-main/environmentMainService.js";import{createDecorator as x}from"../../instantiation/common/instantiation.js";import{IProductService as C}from"../../product/common/productService.js";import{IThemeMainService as S}from"../../theme/electron-main/themeMainService.js";import{TitlebarStyle as E,WindowMinimumSize as p,hasNativeTitlebar as F,useNativeFullScreen as M,useWindowControlsOverlay as T,zoomLevelToZoomFactor as D}from"../../window/common/window.js";import{WindowMode as f,defaultWindowState as A}from"../../window/electron-main/window.js";const G=x("windowsMainService");var B=(n=>(n[n.CLI=0]="CLI",n[n.DOCK=1]="DOCK",n[n.MENU=2]="MENU",n[n.DIALOG=3]="DIALOG",n[n.DESKTOP=4]="DESKTOP",n[n.API=5]="API",n[n.LINK=6]="LINK",n))(B||{});function q(a,r,u,i){const e=a.get(S),l=a.get(C),t=a.get(b),n=a.get(v),w=t.getValue("window"),o={backgroundColor:e.getBackgroundColor(),minWidth:p.WIDTH,minHeight:p.HEIGHT,title:l.nameLong,show:r.mode!==f.Maximized&&r.mode!==f.Fullscreen,x:r.x,y:r.y,width:r.width,height:r.height,webPreferences:{...i,enableWebSQL:!1,spellcheck:!1,zoomFactor:D(r.zoomLevel??w?.zoomLevel),autoplayPolicy:"user-gesture-required",enableBlinkFeatures:"HighlightAPI",sandbox:!0},experimentalDarkMode:!0};if(h?o.icon=y(n.appRoot,"resources/linux/code.png"):I&&!n.isBuilt&&(o.icon=y(n.appRoot,"resources/win32/code_150x150.png")),s&&(o.acceptFirstMouse=!0,w?.clickThroughInactive===!1&&(o.acceptFirstMouse=!1)),u?.disableFullscreen?o.fullscreen=!1:s&&!M(t)&&(o.fullscreenable=!1),s&&w?.nativeTabs===!0&&(o.tabbingIdentifier=l.nameShort),!F(t,u?.forceNativeTitlebar?E.NATIVE:void 0)&&(o.titleBarStyle="hidden",s||(o.frame=!1),T(t))){const c=e.getWindowSplash()?.colorInfo.titleBarBackground??e.getBackgroundColor(),g=W.fromHex(c).isDarker()?"#FFFFFF":"#000000";o.titleBarOverlay={height:29,color:c,symbolColor:g}}return o}function Q(a){let r,u=Number.MIN_VALUE;for(const i of a)i.lastFocusTime>u&&(u=i.lastFocusTime,r=i);return r}var k;(u=>{function a(i,e,l=m.screen.getAllDisplays()){if(i.trace(`window#validateWindowState: validating window state on ${l.length} display(s)`,e),typeof e.x!="number"||typeof e.y!="number"||typeof e.width!="number"||typeof e.height!="number"){i.trace("window#validateWindowState: unexpected type of state values");return}if(e.width<=0||e.height<=0){i.trace("window#validateWindowState: unexpected negative values");return}if(l.length===1){const o=r(l[0]);if(i.trace("window#validateWindowState: single monitor working area",o),o){let d=function(){!e||typeof e.x!="number"||typeof e.y!="number"||!o||(e.x<o.x&&(e.x=o.x),e.y<o.y&&(e.y=o.y))};var w=d;d(),e.width>o.width&&(e.width=o.width),e.height>o.height&&(e.height=o.height),e.x>o.x+o.width-128&&(e.x=o.x+o.width-e.width),e.y>o.y+o.height-128&&(e.y=o.y+o.height-e.height),d()}return e}if(e.display&&e.mode===f.Fullscreen){const o=l.find(d=>d.id===e.display);if(o&&typeof o.bounds?.x=="number"&&typeof o.bounds?.y=="number"){i.trace("window#validateWindowState: restoring fullscreen to previous display");const d=A(f.Fullscreen);return d.x=o.bounds.x,d.y=o.bounds.y,d}}let t,n;try{t=m.screen.getDisplayMatching({x:e.x,y:e.y,width:e.width,height:e.height}),n=r(t),i.trace("window#validateWindowState: multi-monitor working area",n)}catch(o){i.error("window#validateWindowState: error finding display for window state",o)}if(t&&n&&e.x+e.width>n.x&&e.y+e.height>n.y&&e.x<n.x+n.width&&e.y<n.y+n.height)return e;i.trace("window#validateWindowState: state is outside of the multi-monitor working area")}u.validateWindowState=a;function r(i){if(i.workArea.width>0&&i.workArea.height>0)return i.workArea;if(i.bounds.width>0&&i.bounds.height>0)return i.bounds}})(k||={});export{G as IWindowsMainService,B as OpenContext,k as WindowStateValidator,q as defaultBrowserWindowOptions,Q as getLastFocused};
