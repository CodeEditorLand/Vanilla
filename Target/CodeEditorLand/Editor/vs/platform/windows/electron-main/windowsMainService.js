var oe=Object.defineProperty;var re=Object.getOwnPropertyDescriptor;var j=(P,T,e,i)=>{for(var t=i>1?void 0:i?re(T,e):T,n=P.length-1,s;n>=0;n--)(s=P[n])&&(t=(i?s(T,e,t):s(t))||t);return i&&t&&oe(T,e,t),t},m=(P,T)=>(e,i)=>T(e,i,P);import*as ne from"fs";import{app as se,BrowserWindow as N,shell as ae}from"electron";import{addUNCHostToAllowlist as de}from"../../../base/node/unc.js";import{hostname as le,release as ce,arch as fe}from"os";import{coalesce as S,distinct as L}from"../../../base/common/arrays.js";import{CancellationToken as x}from"../../../base/common/cancellation.js";import{CharCode as z}from"../../../base/common/charCode.js";import{Emitter as O,Event as E}from"../../../base/common/event.js";import{isWindowsDriveLetter as ue,parseLineAndColumnAware as q,sanitizeFilePath as he,toSlashes as pe}from"../../../base/common/extpath.js";import{getPathLabel as K}from"../../../base/common/labels.js";import{Disposable as we,DisposableStore as V}from"../../../base/common/lifecycle.js";import{Schemas as g}from"../../../base/common/network.js";import{basename as Z,join as me,normalize as ve,posix as We}from"../../../base/common/path.js";import{getMarks as Ie,mark as J}from"../../../base/common/performance.js";import{isMacintosh as ye,isWindows as ge,OS as Q}from"../../../base/common/platform.js";import{cwd as Pe}from"../../../base/common/process.js";import{extUriBiasedIgnorePathCase as X,isEqualAuthority as v,normalizePath as Se,originalFSPath as Oe,removeTrailingPathSeparator as ke}from"../../../base/common/resources.js";import{assertIsDefined as Te}from"../../../base/common/types.js";import{URI as I}from"../../../base/common/uri.js";import{getNLSLanguage as Me,getNLSMessages as be,localize as y}from"../../../nls.js";import{IBackupMainService as Ae}from"../../backup/electron-main/backup.js";import"../../backup/node/backup.js";import{IConfigurationService as De}from"../../configuration/common/configuration.js";import{IDialogMainService as Fe}from"../../dialogs/electron-main/dialogMainService.js";import"../../environment/common/argv.js";import{IEnvironmentMainService as xe}from"../../environment/electron-main/environmentMainService.js";import{FileType as C,IFileService as Ee}from"../../files/common/files.js";import{IInstantiationService as Ce}from"../../instantiation/common/instantiation.js";import{ILifecycleMainService as Re}from"../../lifecycle/electron-main/lifecycleMainService.js";import{ILogService as Ue}from"../../log/common/log.js";import Ne from"../../product/common/product.js";import{IProtocolMainService as Le}from"../../protocol/electron-main/protocol.js";import{getRemoteAuthority as R}from"../../remote/common/remoteHosts.js";import{IStateService as _e}from"../../state/node/state.js";import{isFileToOpen as Y,isFolderToOpen as Be,isWorkspaceToOpen as ee}from"../../window/common/window.js";import{CodeWindow as He}from"./windowImpl.js";import{OpenContext as k,getLastFocused as ze}from"./windows.js";import{findWindowOnExtensionDevelopmentPath as qe,findWindowOnFile as Ge,findWindowOnWorkspaceOrFolder as U}from"./windowsFinder.js";import{WindowsStateHandler as $e}from"./windowsStateHandler.js";import"../../workspaces/common/workspaces.js";import{hasWorkspaceFileExtension as ie,isSingleFolderWorkspaceIdentifier as _,isWorkspaceIdentifier as G,toWorkspaceIdentifier as je}from"../../workspace/common/workspace.js";import{createEmptyWorkspaceIdentifier as Ke,getSingleFolderWorkspaceIdentifier as $,getWorkspaceIdentifier as te}from"../../workspaces/node/workspaces.js";import{IWorkspacesHistoryMainService as Ve}from"../../workspaces/electron-main/workspacesHistoryMainService.js";import{IWorkspacesManagementMainService as Ze}from"../../workspaces/electron-main/workspacesManagementMainService.js";import{UnloadReason as Je}from"../../window/electron-main/window.js";import{IThemeMainService as Qe}from"../../theme/electron-main/themeMainService.js";import"../../editor/common/editor.js";import"../../userDataProfile/common/userDataProfile.js";import{IPolicyService as Xe}from"../../policy/common/policy.js";import{IUserDataProfilesMainService as Ye}from"../../userDataProfile/electron-main/userDataProfile.js";import{ILoggerMainService as ei}from"../../log/electron-main/loggerService.js";import{IAuxiliaryWindowsMainService as ii}from"../../auxiliaryWindow/electron-main/auxiliaryWindows.js";import"../../auxiliaryWindow/electron-main/auxiliaryWindow.js";import{ICSSDevelopmentService as ti}from"../../cssDev/node/cssDevService.js";function B(P){return G(P?.workspace)}function F(P){return _(P?.workspace)}let H=class extends we{constructor(e,i,t,n,s,o,r,c,d,a,w,M,A,h,p,b,f,l,u,W,D,oi){super();this.machineId=e;this.sqmId=i;this.devDeviceId=t;this.initialUserEnv=n;this.logService=s;this.loggerService=o;this.stateService=r;this.policyService=c;this.environmentMainService=d;this.userDataProfilesMainService=a;this.lifecycleMainService=w;this.backupMainService=M;this.configurationService=A;this.workspacesHistoryMainService=h;this.workspacesManagementMainService=p;this.instantiationService=b;this.dialogMainService=f;this.fileService=l;this.protocolMainService=u;this.themeMainService=W;this.auxiliaryWindowsMainService=D;this.cssDevelopmentService=oi;this.registerListeners()}_onDidOpenWindow=this._register(new O);onDidOpenWindow=this._onDidOpenWindow.event;_onDidSignalReadyWindow=this._register(new O);onDidSignalReadyWindow=this._onDidSignalReadyWindow.event;_onDidDestroyWindow=this._register(new O);onDidDestroyWindow=this._onDidDestroyWindow.event;_onDidChangeWindowsCount=this._register(new O);onDidChangeWindowsCount=this._onDidChangeWindowsCount.event;_onDidMaximizeWindow=this._register(new O);onDidMaximizeWindow=this._onDidMaximizeWindow.event;_onDidUnmaximizeWindow=this._register(new O);onDidUnmaximizeWindow=this._onDidUnmaximizeWindow.event;_onDidChangeFullScreen=this._register(new O);onDidChangeFullScreen=this._onDidChangeFullScreen.event;_onDidTriggerSystemContextMenu=this._register(new O);onDidTriggerSystemContextMenu=this._onDidTriggerSystemContextMenu.event;windows=new Map;windowsStateHandler=this._register(new $e(this,this.stateService,this.lifecycleMainService,this.logService,this.configurationService));registerListeners(){this._register(this.workspacesManagementMainService.onDidEnterWorkspace(e=>this._onDidSignalReadyWindow.fire(e.window))),this._register(this.onDidSignalReadyWindow(e=>{if(e.config?.extensionDevelopmentPath||e.config?.extensionTestsPath){const i=new V;if(i.add(E.any(e.onDidClose,e.onDidDestroy)(()=>i.dispose())),e.config.extensionDevelopmentPath)for(const t of e.config.extensionDevelopmentPath)i.add(this.protocolMainService.addValidFileRoot(t));e.config.extensionTestsPath&&i.add(this.protocolMainService.addValidFileRoot(e.config.extensionTestsPath))}}))}openEmptyWindow(e,i){const t=this.environmentMainService.args,n=i?.remoteAuthority||void 0,s=!0,o=i?.forceReuseWindow,r=!o;return this.open({...e,cli:t,forceEmpty:s,forceNewWindow:r,forceReuseWindow:o,remoteAuthority:n,forceTempProfile:i?.forceTempProfile,forceProfile:i?.forceProfile})}openExistingWindow(e,i){e.focus(),this.handleWaitMarkerFile(i,[e])}async open(e){this.logService.trace("windowsManager#open"),e.addMode&&(e.initialStartup||!this.getLastActiveWindow())&&(e.addMode=!1);const i=[],t=[],n=[],s=[],o=[];let r,c=!1;const d=await this.getPathsToOpen(e);this.logService.trace("windowsManager#open pathsToOpen",d);for(const h of d)F(h)?e.addMode?i.push(h):t.push(h):B(h)?n.push(h):h.fileUri?(r||(r={filesToOpenOrCreate:[],filesToDiff:[],filesToMerge:[],remoteAuthority:h.remoteAuthority}),r.filesToOpenOrCreate.push(h)):h.backupPath?o.push({backupFolder:Z(h.backupPath),remoteAuthority:h.remoteAuthority}):c=!0;e.diffMode&&r&&r.filesToOpenOrCreate.length>=2&&(r.filesToDiff=r.filesToOpenOrCreate.slice(0,2),r.filesToOpenOrCreate=[]),e.mergeMode&&r&&r.filesToOpenOrCreate.length===4&&(r.filesToMerge=r.filesToOpenOrCreate.slice(0,4),r.filesToOpenOrCreate=[],r.filesToDiff=[]),r&&e.waitMarkerFileURI&&(r.filesToWait={paths:S([...r.filesToDiff,r.filesToMerge[3],...r.filesToOpenOrCreate]),waitMarkerFileUri:e.waitMarkerFileURI}),e.initialStartup?(s.push(...this.workspacesManagementMainService.getUntitledWorkspaces()),n.push(...s),o.push(...this.backupMainService.getEmptyWindowBackups())):o.length=0;const{windows:a,filesOpenedInWindow:w}=await this.doOpen(e,n,t,o,c,r,i);if(this.logService.trace(`windowsManager#open used window count ${a.length} (workspacesToOpen: ${n.length}, foldersToOpen: ${t.length}, emptyToRestore: ${o.length}, openOneEmptyWindow: ${c})`),a.length>1)if(w)w.focus();else{const h=this.windowsStateHandler.state.lastActiveWindow&&!e.forceEmpty&&!e.cli._.length&&!e.cli["file-uri"]&&!e.cli["folder-uri"]&&!(e.urisToOpen&&e.urisToOpen.length);let p=!0,b=!0;if(h){const f=a.filter(l=>this.windowsStateHandler.state.lastActiveWindow&&l.backupPath===this.windowsStateHandler.state.lastActiveWindow.backupPath);f.length&&(f[0].focus(),p=!1,b=!1)}if(p)for(let f=a.length-1;f>=0;f--){const l=a[f];if(!(l.openedWorkspace&&s.some(u=>l.openedWorkspace&&u.workspace.id===l.openedWorkspace.id)||l.backupPath&&o.some(u=>l.backupPath&&u.backupFolder===Z(l.backupPath)))){l.focus(),b=!1;break}}b&&a[a.length-1].focus()}const M=r&&r.filesToDiff.length>0,A=r&&r.filesToMerge.length>0;if(!a.some(h=>h.isExtensionDevelopmentHost)&&!M&&!A&&!e.noRecentEntry){const h=[];for(const p of d)B(p)&&!p.transient?h.push({label:p.label,workspace:p.workspace,remoteAuthority:p.remoteAuthority}):F(p)?h.push({label:p.label,folderUri:p.workspace.uri,remoteAuthority:p.remoteAuthority}):p.fileUri&&h.push({label:p.label,fileUri:p.fileUri,remoteAuthority:p.remoteAuthority});this.workspacesHistoryMainService.addRecentlyOpened(h)}return this.handleWaitMarkerFile(e,a),a}handleWaitMarkerFile(e,i){const t=e.waitMarkerFileURI;e.context===k.CLI&&t&&i.length===1&&i[0]&&(async()=>{await i[0].whenClosedOrLoaded;try{await this.fileService.del(t)}catch{}})()}async doOpen(e,i,t,n,s,o,r){const c=[];let d;function a(f,l){c.push(f),l&&(d=f,o=void 0)}let{openFolderInNewWindow:w,openFilesInNewWindow:M}=this.shouldOpenNewWindow(e);if(!e.initialStartup&&r.length>0){const f=r[0].remoteAuthority,l=this.getLastActiveWindowForAuthority(f);l&&a(this.doAddFoldersToExistingWindow(l,r.map(u=>u.workspace.uri)))}const A=t.length+i.length+n.length;if(o&&A===0){const f=o.filesToOpenOrCreate[0]||o.filesToDiff[0]||o.filesToMerge[3],l=this.getWindows().filter(W=>o&&v(W.remoteAuthority,o.remoteAuthority));let u;f?.fileUri&&!M&&((e.context===k.DESKTOP||e.context===k.CLI||e.context===k.DOCK||e.context===k.LINK)&&(u=await Ge(l,f.fileUri,async W=>W.configPath.scheme===g.file?this.workspacesManagementMainService.resolveLocalWorkspace(W.configPath):void 0)),u||(u=this.doGetLastActiveWindow(l))),u?G(u.openedWorkspace)?i.push({workspace:u.openedWorkspace,remoteAuthority:u.remoteAuthority}):_(u.openedWorkspace)?t.push({workspace:u.openedWorkspace,remoteAuthority:u.remoteAuthority}):a(this.doOpenFilesInExistingWindow(e,u,o),!0):a(await this.openInBrowserWindow({userEnv:e.userEnv,cli:e.cli,initialStartup:e.initialStartup,filesToOpen:o,forceNewWindow:!0,remoteAuthority:o.remoteAuthority,forceNewTabbedWindow:e.forceNewTabbedWindow,forceProfile:e.forceProfile,forceTempProfile:e.forceTempProfile}),!0)}const h=L(i,f=>f.workspace.id);if(h.length>0){const f=S(h.map(l=>U(this.getWindows(),l.workspace.configPath)));if(f.length>0){const l=f[0],u=v(o?.remoteAuthority,l.remoteAuthority)?o:void 0;a(this.doOpenFilesInExistingWindow(e,l,u),!!u),w=!0}for(const l of h){if(f.some(D=>D.openedWorkspace&&D.openedWorkspace.id===l.workspace.id))continue;const u=l.remoteAuthority,W=v(o?.remoteAuthority,u)?o:void 0;a(await this.doOpenFolderOrWorkspace(e,l,w,W),!!W),w=!0}}const p=L(t,f=>X.getComparisonKey(f.workspace.uri));if(p.length>0){const f=S(p.map(l=>U(this.getWindows(),l.workspace.uri)));if(f.length>0){const l=f[0],u=v(o?.remoteAuthority,l.remoteAuthority)?o:void 0;a(this.doOpenFilesInExistingWindow(e,l,u),!!u),w=!0}for(const l of p){if(f.some(D=>_(D.openedWorkspace)&&X.isEqual(D.openedWorkspace.uri,l.workspace.uri)))continue;const u=l.remoteAuthority,W=v(o?.remoteAuthority,u)?o:void 0;a(await this.doOpenFolderOrWorkspace(e,l,w,W),!!W),w=!0}}const b=L(n,f=>f.backupFolder);if(b.length>0)for(const f of b){const l=f.remoteAuthority,u=v(o?.remoteAuthority,l)?o:void 0;a(await this.doOpenEmpty(e,!0,l,u,f),!!u),w=!0}if(o||s){const f=o?o.remoteAuthority:e.remoteAuthority;a(await this.doOpenEmpty(e,w,f,o),!!o)}return{windows:L(c),filesOpenedInWindow:d}}doOpenFilesInExistingWindow(e,i,t){this.logService.trace("windowsManager#doOpenFilesInExistingWindow",{filesToOpen:t}),this.focusMainOrChildWindow(i);const n={filesToOpenOrCreate:t?.filesToOpenOrCreate,filesToDiff:t?.filesToDiff,filesToMerge:t?.filesToMerge,filesToWait:t?.filesToWait,termProgram:e?.userEnv?.TERM_PROGRAM};return i.sendWhenReady("vscode:openFiles",x.None,n),i}focusMainOrChildWindow(e){let i=e;const t=N.getFocusedWindow();if(t&&t.id!==e.id){const n=this.auxiliaryWindowsMainService.getWindowByWebContents(t.webContents);n&&n.parentId===e.id&&(i=n)}i.focus()}doAddFoldersToExistingWindow(e,i){this.logService.trace("windowsManager#doAddFoldersToExistingWindow",{foldersToAdd:i}),e.focus();const t={foldersToAdd:i};return e.sendWhenReady("vscode:addFolders",x.None,t),e}doOpenEmpty(e,i,t,n,s){this.logService.trace("windowsManager#doOpenEmpty",{restore:!!s,remoteAuthority:t,filesToOpen:n,forceNewWindow:i});let o;return!i&&typeof e.contextWindowId=="number"&&(o=this.getWindowById(e.contextWindowId)),this.openInBrowserWindow({userEnv:e.userEnv,cli:e.cli,initialStartup:e.initialStartup,remoteAuthority:t,forceNewWindow:i,forceNewTabbedWindow:e.forceNewTabbedWindow,filesToOpen:n,windowToUse:o,emptyWindowBackupInfo:s,forceProfile:e.forceProfile,forceTempProfile:e.forceTempProfile})}doOpenFolderOrWorkspace(e,i,t,n,s){return this.logService.trace("windowsManager#doOpenFolderOrWorkspace",{folderOrWorkspace:i,filesToOpen:n}),!t&&!s&&typeof e.contextWindowId=="number"&&(s=this.getWindowById(e.contextWindowId)),this.openInBrowserWindow({workspace:i.workspace,userEnv:e.userEnv,cli:e.cli,initialStartup:e.initialStartup,remoteAuthority:i.remoteAuthority,forceNewWindow:t,forceNewTabbedWindow:e.forceNewTabbedWindow,filesToOpen:n,windowToUse:s,forceProfile:e.forceProfile,forceTempProfile:e.forceTempProfile})}async getPathsToOpen(e){let i,t=!1,n=!1;if(e.urisToOpen&&e.urisToOpen.length>0?(i=await this.doExtractPathsFromAPI(e),t=!0):e.forceEmpty?i=[Object.create(null)]:e.cli._.length||e.cli["folder-uri"]||e.cli["file-uri"]?(i=await this.doExtractPathsFromCLI(e.cli),i.length===0&&i.push(Object.create(null)),t=!0):(i=await this.doGetPathsFromLastSession(),i.length===0&&i.push(Object.create(null)),n=!0),!e.addMode&&t){const s=i.filter(o=>F(o));if(s.length>1){const o=s[0].remoteAuthority;if(s.every(r=>v(r.remoteAuthority,o))){const r=await this.workspacesManagementMainService.createUntitledWorkspace(s.map(c=>({uri:c.workspace.uri})));i.push({workspace:r,remoteAuthority:o}),i=i.filter(c=>!F(c))}}}if(e.initialStartup&&!n&&this.configurationService.getValue("window")?.restoreWindows==="preserve"){const s=await this.doGetPathsFromLastSession();i.unshift(...s.filter(o=>B(o)||F(o)||o.backupPath))}return i}async doExtractPathsFromAPI(e){const i={gotoLineMode:e.gotoLineMode,remoteAuthority:e.remoteAuthority},t=await Promise.all(S(e.urisToOpen||[]).map(async n=>{const s=await this.resolveOpenable(n,i);if(s)return s.label=n.label,s;const o=this.resourceFromOpenable(n);this.dialogMainService.showMessageBox({type:"info",buttons:[y({key:"ok",comment:["&& denotes a mnemonic"]},"&&OK")],message:o.scheme===g.file?y("pathNotExistTitle","Path does not exist"):y("uriInvalidTitle","URI can not be opened"),detail:o.scheme===g.file?y("pathNotExistDetail","The path '{0}' does not exist on this computer.",K(o,{os:Q,tildify:this.environmentMainService})):y("uriInvalidDetail","The URI '{0}' is not valid and can not be opened.",o.toString(!0))},N.getFocusedWindow()??void 0)}));return S(t)}async doExtractPathsFromCLI(e){const i=[],t={ignoreFileNotFound:!0,gotoLineMode:e.goto,remoteAuthority:e.remote||void 0,forceOpenWorkspaceAsFile:e.diff&&e._.length===2||e.merge&&e._.length===4},n=e["folder-uri"];if(n){const r=await Promise.all(n.map(c=>{const d=this.cliArgToUri(c);if(d)return this.resolveOpenable({folderUri:d},t)}));i.push(...S(r))}const s=e["file-uri"];if(s){const r=await Promise.all(s.map(c=>{const d=this.cliArgToUri(c);if(d)return this.resolveOpenable(ie(c)?{workspaceUri:d}:{fileUri:d},t)}));i.push(...S(r))}const o=await Promise.all(e._.map(r=>t.remoteAuthority?this.doResolveRemotePath(r,t):this.doResolveFilePath(r,t)));return i.push(...S(o)),i}cliArgToUri(e){try{const i=I.parse(e);if(!i.scheme){this.logService.error(`Invalid URI input string, scheme missing: ${e}`);return}return i.path?i:i.with({path:"/"})}catch(i){this.logService.error(`Invalid URI input string: ${e}, ${i.message}`)}}async doGetPathsFromLastSession(){const e=this.getRestoreWindowsSetting();switch(e){case"none":return[];case"one":case"all":case"preserve":case"folders":{const i=[];e!=="one"&&i.push(...this.windowsStateHandler.state.openedWindows),this.windowsStateHandler.state.lastActiveWindow&&i.push(this.windowsStateHandler.state.lastActiveWindow);const t=await Promise.all(i.map(async n=>{if(n.workspace){const s=await this.resolveOpenable({workspaceUri:n.workspace.configPath},{remoteAuthority:n.remoteAuthority,rejectTransientWorkspaces:!0});if(B(s))return s}else if(n.folderUri){const s=await this.resolveOpenable({folderUri:n.folderUri},{remoteAuthority:n.remoteAuthority});if(F(s))return s}else if(e!=="folders"&&n.backupPath)return{backupPath:n.backupPath,remoteAuthority:n.remoteAuthority}}));return S(t)}}}getRestoreWindowsSetting(){let e;return this.lifecycleMainService.wasRestarted?e="all":(e=this.configurationService.getValue("window")?.restoreWindows||"all",["preserve","all","folders","one","none"].includes(e)||(e="all")),e}async resolveOpenable(e,i=Object.create(null)){const t=this.resourceFromOpenable(e);return t.scheme===g.file?(Y(e)&&(i={...i,forceOpenWorkspaceAsFile:!0}),this.doResolveFilePath(t.fsPath,i)):this.doResolveRemoteOpenable(e,i)}doResolveRemoteOpenable(e,i){let t=this.resourceFromOpenable(e);const n=R(t)||i.remoteAuthority;if(t=ke(Se(t)),Y(e)){if(i.gotoLineMode){const{path:s,line:o,column:r}=q(t.path);return{fileUri:t.with({path:s}),options:{selection:o?{startLineNumber:o,startColumn:r||1}:void 0},remoteAuthority:n}}return{fileUri:t,remoteAuthority:n}}else if(ee(e))return{workspace:te(t),remoteAuthority:n};return{workspace:$(t),remoteAuthority:n}}resourceFromOpenable(e){return ee(e)?e.workspaceUri:Be(e)?e.folderUri:e.fileUri}async doResolveFilePath(e,i,t){let n,s;i.gotoLineMode&&({path:e,line:n,column:s}=q(e)),e=he(ve(e),Pe());try{const o=await ne.promises.stat(e);if(o.isFile()){if(!i.forceOpenWorkspaceAsFile){const r=await this.workspacesManagementMainService.resolveLocalWorkspace(I.file(e));if(r)return r.transient&&i.rejectTransientWorkspaces?void 0:{workspace:{id:r.id,configPath:r.configPath},type:C.File,exists:!0,remoteAuthority:r.remoteAuthority,transient:r.transient}}return{fileUri:I.file(e),type:C.File,exists:!0,options:{selection:n?{startLineNumber:n,startColumn:s||1}:void 0}}}else{if(o.isDirectory())return{workspace:$(I.file(e),o),type:C.Directory,exists:!0};if(!ge&&e==="/dev/null")return{fileUri:I.file(e),type:C.File,exists:!0}}}catch(o){if(o.code==="ERR_UNC_HOST_NOT_ALLOWED"&&!t)return this.onUNCHostNotAllowed(e,i);const r=I.file(e);if(this.workspacesHistoryMainService.removeRecentlyOpened([r]),i.ignoreFileNotFound)return{fileUri:r,type:C.File,exists:!1}}}async onUNCHostNotAllowed(e,i){const t=I.file(e),{response:n,checkboxChecked:s}=await this.dialogMainService.showMessageBox({type:"warning",buttons:[y({key:"allow",comment:["&& denotes a mnemonic"]},"&&Allow"),y({key:"cancel",comment:["&& denotes a mnemonic"]},"&&Cancel"),y({key:"learnMore",comment:["&& denotes a mnemonic"]},"&&Learn More")],message:y("confirmOpenMessage","The host '{0}' was not found in the list of allowed hosts. Do you want to allow it anyway?",t.authority),detail:y("confirmOpenDetail","The path '{0}' uses a host that is not allowed. Unless you trust the host, you should press 'Cancel'",K(t,{os:Q,tildify:this.environmentMainService})),checkboxLabel:y("doNotAskAgain","Permanently allow host '{0}'",t.authority),cancelId:1});if(n===0){if(de(t.authority),s){const o={channel:"vscode:configureAllowedUNCHost",args:t.authority};this.sendToFocused(o.channel,o.args),this.sendToOpeningWindow(o.channel,o.args)}return this.doResolveFilePath(e,i,!0)}if(n===2)return ae.openExternal("https://aka.ms/vscode-windows-unc"),this.onUNCHostNotAllowed(e,i)}doResolveRemotePath(e,i){const t=e.charCodeAt(0),n=i.remoteAuthority;let s,o;i.gotoLineMode&&({path:e,line:s,column:o}=q(e)),t!==z.Slash&&(ue(t)&&e.charCodeAt(e.charCodeAt(1))===z.Colon&&(e=pe(e)),e=`/${e}`);const r=I.from({scheme:g.vscodeRemote,authority:n,path:e});if(e.charCodeAt(e.length-1)!==z.Slash){if(ie(e))return i.forceOpenWorkspaceAsFile?{fileUri:r,options:{selection:s?{startLineNumber:s,startColumn:o||1}:void 0},remoteAuthority:i.remoteAuthority}:{workspace:te(r),remoteAuthority:n};if(i.gotoLineMode||We.basename(e).indexOf(".")!==-1)return{fileUri:r,options:{selection:s?{startLineNumber:s,startColumn:o||1}:void 0},remoteAuthority:n}}return{workspace:$(r),remoteAuthority:n}}shouldOpenNewWindow(e){const i=this.configurationService.getValue("window"),t=i?.openFoldersInNewWindow||"default",n=i?.openFilesInNewWindow||"off";let s=(e.preferNewWindow||e.forceNewWindow)&&!e.forceReuseWindow;!e.forceNewWindow&&!e.forceReuseWindow&&(t==="on"||t==="off")&&(s=t==="on");let o=!1;return e.forceNewWindow||e.forceReuseWindow?o=!!e.forceNewWindow&&!e.forceReuseWindow:(ye?e.context===k.DOCK&&(o=!0):e.context!==k.DIALOG&&e.context!==k.MENU&&!(e.userEnv&&e.userEnv.TERM_PROGRAM==="vscode")&&(o=!0),!e.cli.extensionDevelopmentPath&&(n==="on"||n==="off")&&(o=n==="on")),{openFolderInNewWindow:!!s,openFilesInNewWindow:o}}async openExtensionDevelopmentHostWindow(e,i){const t=qe(this.getWindows(),e);if(t)return this.lifecycleMainService.reload(t,i.cli),t.focus(),[t];let n=i.cli["folder-uri"]||[],s=i.cli["file-uri"]||[],o=i.cli._;if(!o.length&&!n.length&&!s.length&&!i.cli.extensionTestsPath){const d=this.windowsStateHandler.state.lastPluginDevelopmentHostWindow,a=d?.workspace??d?.folderUri;a&&(I.isUri(a)?a.scheme===g.file?o=[a.fsPath]:n=[a.toString()]:a.configPath.scheme===g.file?o=[Oe(a.configPath)]:s=[a.configPath.toString()])}let r=i.remoteAuthority;for(const d of e)if(d.match(/^[a-zA-Z][a-zA-Z0-9\+\-\.]+:/)){const a=I.parse(d),w=R(a);w&&(r?v(w,r)||this.logService.error("more than one extension development path authority"):r=w)}o=o.filter(d=>{const a=I.file(d);return U(this.getWindows(),a)?!1:v(R(a),r)}),n=n.filter(d=>{const a=this.cliArgToUri(d);return a&&U(this.getWindows(),a)?!1:a?v(R(a),r):!1}),s=s.filter(d=>{const a=this.cliArgToUri(d);return a&&U(this.getWindows(),a)?!1:a?v(R(a),r):!1}),i.cli._=o,i.cli["folder-uri"]=n,i.cli["file-uri"]=s;const c={context:i.context,cli:i.cli,forceNewWindow:!0,forceEmpty:!o.length&&!n.length&&!s.length,userEnv:i.userEnv,noRecentEntry:!0,waitMarkerFileURI:i.waitMarkerFileURI,remoteAuthority:r,forceProfile:i.forceProfile,forceTempProfile:i.forceTempProfile};return this.open(c)}async openInBrowserWindow(e){const i=this.configurationService.getValue("window"),t=this.getLastActiveWindow(),s=(i?.newWindowProfile?this.userDataProfilesMainService.profiles.find(c=>c.name===i.newWindowProfile):void 0)??t?.profile??this.userDataProfilesMainService.defaultProfile;let o;!e.forceNewWindow&&!e.forceNewTabbedWindow&&(o=e.windowToUse||t,o&&o.focus());const r={...this.environmentMainService.args,...e.cli,machineId:this.machineId,sqmId:this.sqmId,devDeviceId:this.devDeviceId,windowId:-1,mainPid:process.pid,appRoot:this.environmentMainService.appRoot,execPath:process.execPath,codeCachePath:this.environmentMainService.codeCachePath,backupPath:e.emptyWindowBackupInfo?me(this.environmentMainService.backupHome,e.emptyWindowBackupInfo.backupFolder):void 0,profiles:{home:this.userDataProfilesMainService.profilesHome,all:this.userDataProfilesMainService.profiles,profile:s},homeDir:this.environmentMainService.userHome.with({scheme:g.file}).fsPath,tmpDir:this.environmentMainService.tmpDir.with({scheme:g.file}).fsPath,userDataDir:this.environmentMainService.userDataPath,remoteAuthority:e.remoteAuthority,workspace:e.workspace,userEnv:{...this.initialUserEnv,...e.userEnv},nls:{messages:be(),language:Me()},filesToOpenOrCreate:e.filesToOpen?.filesToOpenOrCreate,filesToDiff:e.filesToOpen?.filesToDiff,filesToMerge:e.filesToOpen?.filesToMerge,filesToWait:e.filesToOpen?.filesToWait,logLevel:this.loggerService.getLogLevel(),loggers:{window:[],global:this.loggerService.getRegisteredLoggers()},logsPath:this.environmentMainService.logsHome.with({scheme:g.file}).fsPath,product:Ne,isInitialStartup:e.initialStartup,perfMarks:Ie(),os:{release:ce(),hostname:le(),arch:fe()},autoDetectHighContrast:i?.autoDetectHighContrast??!0,autoDetectColorScheme:i?.autoDetectColorScheme??!1,accessibilitySupport:se.accessibilitySupportEnabled,colorScheme:this.themeMainService.getColorScheme(),policiesData:this.policyService.serialize(),continueOn:this.environmentMainService.continueOn,cssModules:this.cssDevelopmentService.isEnabled?await this.cssDevelopmentService.getCssModules():void 0};if(o){const c=o.config;!r.extensionDevelopmentPath&&c?.extensionDevelopmentPath&&(r.extensionDevelopmentPath=c.extensionDevelopmentPath,r.extensionDevelopmentKind=c.extensionDevelopmentKind,r["enable-proposed-api"]=c["enable-proposed-api"],r.verbose=c.verbose,r["inspect-extensions"]=c["inspect-extensions"],r["inspect-brk-extensions"]=c["inspect-brk-extensions"],r.debugId=c.debugId,r.extensionEnvironment=c.extensionEnvironment,r["extensions-dir"]=c["extensions-dir"],r["disable-extensions"]=c["disable-extensions"]),r.loggers={global:r.loggers.global,window:c?.loggers.window??r.loggers.window}}else{const c=this.windowsStateHandler.getNewWindowState(r);J("code/willCreateCodeWindow");const d=o=this.instantiationService.createInstance(He,{state:c,extensionDevelopmentPath:r.extensionDevelopmentPath,isExtensionTestHost:!!r.extensionTestsPath});J("code/didCreateCodeWindow"),e.forceNewTabbedWindow&&this.getLastActiveWindow()?.addTabbedWindow(d),this.windows.set(d.id,d),this._onDidOpenWindow.fire(d),this._onDidChangeWindowsCount.fire({oldCount:this.getWindowCount()-1,newCount:this.getWindowCount()});const a=new V;a.add(d.onDidSignalReady(()=>this._onDidSignalReadyWindow.fire(d))),a.add(E.once(d.onDidClose)(()=>this.onWindowClosed(d,a))),a.add(E.once(d.onDidDestroy)(()=>this.onWindowDestroyed(d))),a.add(d.onDidMaximize(()=>this._onDidMaximizeWindow.fire(d))),a.add(d.onDidUnmaximize(()=>this._onDidUnmaximizeWindow.fire(d))),a.add(d.onDidEnterFullScreen(()=>this._onDidChangeFullScreen.fire({window:d,fullscreen:!0}))),a.add(d.onDidLeaveFullScreen(()=>this._onDidChangeFullScreen.fire({window:d,fullscreen:!1}))),a.add(d.onDidTriggerSystemContextMenu(({x:M,y:A})=>this._onDidTriggerSystemContextMenu.fire({window:d,x:M,y:A})));const w=Te(d.win?.webContents);w.removeAllListeners("devtools-reload-page"),a.add(E.fromNodeEventEmitter(w,"devtools-reload-page")(()=>this.lifecycleMainService.reload(d))),this.lifecycleMainService.registerWindow(d)}return r.windowId=o.id,o.isReady?this.lifecycleMainService.unload(o,Je.LOAD).then(async c=>{c||await this.doOpenInBrowserWindow(o,r,e,s)}):await this.doOpenInBrowserWindow(o,r,e,s),o}async doOpenInBrowserWindow(e,i,t,n){if(i.extensionDevelopmentPath||(G(i.workspace)?i.backupPath=this.backupMainService.registerWorkspaceBackup({workspace:i.workspace,remoteAuthority:i.remoteAuthority}):_(i.workspace)?i.backupPath=this.backupMainService.registerFolderBackup({folderUri:i.workspace.uri,remoteAuthority:i.remoteAuthority}):i.backupPath=this.backupMainService.registerEmptyWindowBackup({backupFolder:t.emptyWindowBackupInfo?.backupFolder??Ke().id,remoteAuthority:i.remoteAuthority})),this.userDataProfilesMainService.isEnabled()){const s=i.workspace??je(i.backupPath,!1),o=this.resolveProfileForBrowserWindow(t,s,n),r=o instanceof Promise?await o:o;i.profiles.profile=r,i.extensionDevelopmentPath||await this.userDataProfilesMainService.setProfileForWorkspace(s,r)}e.load(i)}resolveProfileForBrowserWindow(e,i,t){return e.forceProfile?this.userDataProfilesMainService.profiles.find(n=>n.name===e.forceProfile)??this.userDataProfilesMainService.createNamedProfile(e.forceProfile):e.forceTempProfile?this.userDataProfilesMainService.createTransientProfile():this.userDataProfilesMainService.getProfileForWorkspace(i)??t}onWindowClosed(e,i){this.windows.delete(e.id),this._onDidChangeWindowsCount.fire({oldCount:this.getWindowCount()+1,newCount:this.getWindowCount()}),i.dispose()}onWindowDestroyed(e){this.windows.delete(e.id),this._onDidDestroyWindow.fire(e)}getFocusedWindow(){const e=N.getFocusedWindow();if(e)return this.getWindowById(e.id)}getLastActiveWindow(){return this.doGetLastActiveWindow(this.getWindows())}getLastActiveWindowForAuthority(e){return this.doGetLastActiveWindow(this.getWindows().filter(i=>v(i.remoteAuthority,e)))}doGetLastActiveWindow(e){return ze(e)}sendToFocused(e,...i){(this.getFocusedWindow()||this.getLastActiveWindow())?.sendWhenReady(e,x.None,...i)}sendToOpeningWindow(e,...i){this._register(E.once(this.onDidSignalReadyWindow)(t=>{t.sendWhenReady(e,x.None,...i)}))}sendToAll(e,i,t){for(const n of this.getWindows())t&&t.indexOf(n.id)>=0||n.sendWhenReady(e,x.None,i)}getWindows(){return Array.from(this.windows.values())}getWindowCount(){return this.windows.size}getWindowById(e){return this.windows.get(e)}getWindowByWebContents(e){const i=N.fromWebContents(e);if(!i)return;const t=this.getWindowById(i.id);return t?.matches(e)?t:void 0}};H=j([m(4,Ue),m(5,ei),m(6,_e),m(7,Xe),m(8,xe),m(9,Ye),m(10,Re),m(11,Ae),m(12,De),m(13,Ve),m(14,Ze),m(15,Ce),m(16,Fe),m(17,Ee),m(18,Le),m(19,Qe),m(20,ii),m(21,ti)],H);export{H as WindowsMainService};
