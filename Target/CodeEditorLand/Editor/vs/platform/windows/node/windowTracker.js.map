{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/windows/node/windowTracker.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\ttype CancelablePromise,\n\tcreateCancelablePromise,\n} from \"../../../base/common/async.js\";\nimport { Event } from \"../../../base/common/event.js\";\nimport { Disposable, DisposableStore } from \"../../../base/common/lifecycle.js\";\n\nexport class ActiveWindowManager extends Disposable {\n\tprivate readonly disposables = this._register(new DisposableStore());\n\tprivate firstActiveWindowIdPromise:\n\t\t| CancelablePromise<number | undefined>\n\t\t| undefined;\n\n\tprivate activeWindowId: number | undefined;\n\n\tconstructor({\n\t\tonDidOpenMainWindow,\n\t\tonDidFocusMainWindow,\n\t\tgetActiveWindowId,\n\t}: {\n\t\tonDidOpenMainWindow: Event<number>;\n\t\tonDidFocusMainWindow: Event<number>;\n\t\tgetActiveWindowId(): Promise<number | undefined>;\n\t}) {\n\t\tsuper();\n\n\t\t// remember last active window id upon events\n\t\tconst onActiveWindowChange = Event.latch(\n\t\t\tEvent.any(onDidOpenMainWindow, onDidFocusMainWindow),\n\t\t);\n\t\tonActiveWindowChange(this.setActiveWindow, this, this.disposables);\n\n\t\t// resolve current active window\n\t\tthis.firstActiveWindowIdPromise = createCancelablePromise(() =>\n\t\t\tgetActiveWindowId(),\n\t\t);\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tconst windowId = await this.firstActiveWindowIdPromise;\n\t\t\t\tthis.activeWindowId =\n\t\t\t\t\ttypeof this.activeWindowId === \"number\"\n\t\t\t\t\t\t? this.activeWindowId\n\t\t\t\t\t\t: windowId;\n\t\t\t} catch (error) {\n\t\t\t\t// ignore\n\t\t\t} finally {\n\t\t\t\tthis.firstActiveWindowIdPromise = undefined;\n\t\t\t}\n\t\t})();\n\t}\n\n\tprivate setActiveWindow(windowId: number | undefined) {\n\t\tif (this.firstActiveWindowIdPromise) {\n\t\t\tthis.firstActiveWindowIdPromise.cancel();\n\t\t\tthis.firstActiveWindowIdPromise = undefined;\n\t\t}\n\n\t\tthis.activeWindowId = windowId;\n\t}\n\n\tasync getActiveClientId(): Promise<string | undefined> {\n\t\tconst id = this.firstActiveWindowIdPromise\n\t\t\t? await this.firstActiveWindowIdPromise\n\t\t\t: this.activeWindowId;\n\n\t\treturn `window:${id}`;\n\t}\n}\n"],
  "mappings": ";;AAKA;AAAA,EAEC;AAAA,OACM;AACP,SAAS,aAAa;AACtB,SAAS,YAAY,uBAAuB;AAErC,MAAM,4BAA4B,WAAW;AAAA,EAZpD,OAYoD;AAAA;AAAA;AAAA,EAClC,cAAc,KAAK,UAAU,IAAI,gBAAgB,CAAC;AAAA,EAC3D;AAAA,EAIA;AAAA,EAER,YAAY;AAAA,IACX;AAAA,IACA;AAAA,IACA;AAAA,EACD,GAIG;AACF,UAAM;AAGN,UAAM,uBAAuB,MAAM;AAAA,MAClC,MAAM,IAAI,qBAAqB,oBAAoB;AAAA,IACpD;AACA,yBAAqB,KAAK,iBAAiB,MAAM,KAAK,WAAW;AAGjE,SAAK,6BAA6B;AAAA,MAAwB,MACzD,kBAAkB;AAAA,IACnB;AACA,KAAC,YAAY;AACZ,UAAI;AACH,cAAM,WAAW,MAAM,KAAK;AAC5B,aAAK,iBACJ,OAAO,KAAK,mBAAmB,WAC5B,KAAK,iBACL;AAAA,MACL,SAAS,OAAO;AAAA,MAEhB,UAAE;AACD,aAAK,6BAA6B;AAAA,MACnC;AAAA,IACD,GAAG;AAAA,EACJ;AAAA,EAEQ,gBAAgB,UAA8B;AACrD,QAAI,KAAK,4BAA4B;AACpC,WAAK,2BAA2B,OAAO;AACvC,WAAK,6BAA6B;AAAA,IACnC;AAEA,SAAK,iBAAiB;AAAA,EACvB;AAAA,EAEA,MAAM,oBAAiD;AACtD,UAAM,KAAK,KAAK,6BACb,MAAM,KAAK,6BACX,KAAK;AAER,WAAO,UAAU,EAAE;AAAA,EACpB;AACD;",
  "names": []
}
