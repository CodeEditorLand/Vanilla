{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/windows/test/electron-main/windowsStateHandler.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { tmpdir } from 'os';\nimport { join } from '../../../../base/common/path.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\nimport { IWindowState as IWindowUIState, WindowMode } from '../../../window/electron-main/window.js';\nimport { getWindowsStateStoreData, IWindowsState, IWindowState, restoreWindowsState } from '../../electron-main/windowsStateHandler.js';\nimport { IWorkspaceIdentifier } from '../../../workspace/common/workspace.js';\n\nsuite('Windows State Storing', () => {\n\n\tfunction getUIState(): IWindowUIState {\n\t\treturn {\n\t\t\tx: 0,\n\t\t\ty: 10,\n\t\t\twidth: 100,\n\t\t\theight: 200,\n\t\t\tmode: 0\n\t\t};\n\t}\n\n\tfunction toWorkspace(uri: URI): IWorkspaceIdentifier {\n\t\treturn {\n\t\t\tid: '1234',\n\t\t\tconfigPath: uri\n\t\t};\n\t}\n\tfunction assertEqualURI(u1: URI | undefined, u2: URI | undefined, message?: string): void {\n\t\tassert.strictEqual(u1 && u1.toString(), u2 && u2.toString(), message);\n\t}\n\n\tfunction assertEqualWorkspace(w1: IWorkspaceIdentifier | undefined, w2: IWorkspaceIdentifier | undefined, message?: string): void {\n\t\tif (!w1 || !w2) {\n\t\t\tassert.strictEqual(w1, w2, message);\n\t\t\treturn;\n\t\t}\n\t\tassert.strictEqual(w1.id, w2.id, message);\n\t\tassertEqualURI(w1.configPath, w2.configPath, message);\n\t}\n\n\tfunction assertEqualWindowState(expected: IWindowState | undefined, actual: IWindowState | undefined, message?: string) {\n\t\tif (!expected || !actual) {\n\t\t\tassert.deepStrictEqual(expected, actual, message);\n\t\t\treturn;\n\t\t}\n\t\tassert.strictEqual(expected.backupPath, actual.backupPath, message);\n\t\tassertEqualURI(expected.folderUri, actual.folderUri, message);\n\t\tassert.strictEqual(expected.remoteAuthority, actual.remoteAuthority, message);\n\t\tassertEqualWorkspace(expected.workspace, actual.workspace, message);\n\t\tassert.deepStrictEqual(expected.uiState, actual.uiState, message);\n\t}\n\n\tfunction assertEqualWindowsState(expected: IWindowsState, actual: IWindowsState, message?: string) {\n\t\tassertEqualWindowState(expected.lastPluginDevelopmentHostWindow, actual.lastPluginDevelopmentHostWindow, message);\n\t\tassertEqualWindowState(expected.lastActiveWindow, actual.lastActiveWindow, message);\n\t\tassert.strictEqual(expected.openedWindows.length, actual.openedWindows.length, message);\n\t\tfor (let i = 0; i < expected.openedWindows.length; i++) {\n\t\t\tassertEqualWindowState(expected.openedWindows[i], actual.openedWindows[i], message);\n\t\t}\n\t}\n\n\tfunction assertRestoring(state: IWindowsState, message?: string) {\n\t\tconst stored = getWindowsStateStoreData(state);\n\t\tconst restored = restoreWindowsState(stored);\n\t\tassertEqualWindowsState(state, restored, message);\n\t}\n\n\tconst testBackupPath1 = join(tmpdir(), 'windowStateTest', 'backupFolder1');\n\tconst testBackupPath2 = join(tmpdir(), 'windowStateTest', 'backupFolder2');\n\n\tconst testWSPath = URI.file(join(tmpdir(), 'windowStateTest', 'test.code-workspace'));\n\tconst testFolderURI = URI.file(join(tmpdir(), 'windowStateTest', 'testFolder'));\n\n\tconst testRemoteFolderURI = URI.parse('foo://bar/c/d');\n\n\ttest('storing and restoring', () => {\n\t\tlet windowState: IWindowsState;\n\t\twindowState = {\n\t\t\topenedWindows: []\n\t\t};\n\t\tassertRestoring(windowState, 'no windows');\n\t\twindowState = {\n\t\t\topenedWindows: [{ backupPath: testBackupPath1, uiState: getUIState() }]\n\t\t};\n\t\tassertRestoring(windowState, 'empty workspace');\n\n\t\twindowState = {\n\t\t\topenedWindows: [{ backupPath: testBackupPath1, uiState: getUIState(), workspace: toWorkspace(testWSPath) }]\n\t\t};\n\t\tassertRestoring(windowState, 'workspace');\n\n\t\twindowState = {\n\t\t\topenedWindows: [{ backupPath: testBackupPath2, uiState: getUIState(), folderUri: testFolderURI }]\n\t\t};\n\t\tassertRestoring(windowState, 'folder');\n\n\t\twindowState = {\n\t\t\topenedWindows: [{ backupPath: testBackupPath1, uiState: getUIState(), folderUri: testFolderURI }, { backupPath: testBackupPath1, uiState: getUIState(), folderUri: testRemoteFolderURI, remoteAuthority: 'bar' }]\n\t\t};\n\t\tassertRestoring(windowState, 'multiple windows');\n\n\t\twindowState = {\n\t\t\tlastActiveWindow: { backupPath: testBackupPath2, uiState: getUIState(), folderUri: testFolderURI },\n\t\t\topenedWindows: []\n\t\t};\n\t\tassertRestoring(windowState, 'lastActiveWindow');\n\n\t\twindowState = {\n\t\t\tlastPluginDevelopmentHostWindow: { backupPath: testBackupPath2, uiState: getUIState(), folderUri: testFolderURI },\n\t\t\topenedWindows: []\n\t\t};\n\t\tassertRestoring(windowState, 'lastPluginDevelopmentHostWindow');\n\t});\n\n\ttest('open 1_32', () => {\n\t\tconst v1_32_workspace = `{\n\t\t\t\"openedWindows\": [],\n\t\t\t\"lastActiveWindow\": {\n\t\t\t\t\"workspaceIdentifier\": {\n\t\t\t\t\t\"id\": \"53b714b46ef1a2d4346568b4f591028c\",\n\t\t\t\t\t\"configURIPath\": \"file:///home/user/workspaces/testing/custom.code-workspace\"\n\t\t\t\t},\n\t\t\t\t\"backupPath\": \"/home/user/.config/code-oss-dev/Backups/53b714b46ef1a2d4346568b4f591028c\",\n\t\t\t\t\"uiState\": {\n\t\t\t\t\t\"mode\": 0,\n\t\t\t\t\t\"x\": 0,\n\t\t\t\t\t\"y\": 27,\n\t\t\t\t\t\"width\": 2560,\n\t\t\t\t\t\"height\": 1364\n\t\t\t\t}\n\t\t\t}\n\t\t}`;\n\n\t\tlet windowsState = restoreWindowsState(JSON.parse(v1_32_workspace));\n\t\tlet expected: IWindowsState = {\n\t\t\topenedWindows: [],\n\t\t\tlastActiveWindow: {\n\t\t\t\tbackupPath: '/home/user/.config/code-oss-dev/Backups/53b714b46ef1a2d4346568b4f591028c',\n\t\t\t\tuiState: { mode: WindowMode.Maximized, x: 0, y: 27, width: 2560, height: 1364 },\n\t\t\t\tworkspace: { id: '53b714b46ef1a2d4346568b4f591028c', configPath: URI.parse('file:///home/user/workspaces/testing/custom.code-workspace') }\n\t\t\t}\n\t\t};\n\n\t\tassertEqualWindowsState(expected, windowsState, 'v1_32_workspace');\n\n\t\tconst v1_32_folder = `{\n\t\t\t\"openedWindows\": [],\n\t\t\t\"lastActiveWindow\": {\n\t\t\t\t\"folder\": \"file:///home/user/workspaces/testing/folding\",\n\t\t\t\t\"backupPath\": \"/home/user/.config/code-oss-dev/Backups/1daac1621c6c06f9e916ac8062e5a1b5\",\n\t\t\t\t\"uiState\": {\n\t\t\t\t\t\"mode\": 1,\n\t\t\t\t\t\"x\": 625,\n\t\t\t\t\t\"y\": 263,\n\t\t\t\t\t\"width\": 1718,\n\t\t\t\t\t\"height\": 953\n\t\t\t\t}\n\t\t\t}\n\t\t}`;\n\n\t\twindowsState = restoreWindowsState(JSON.parse(v1_32_folder));\n\t\texpected = {\n\t\t\topenedWindows: [],\n\t\t\tlastActiveWindow: {\n\t\t\t\tbackupPath: '/home/user/.config/code-oss-dev/Backups/1daac1621c6c06f9e916ac8062e5a1b5',\n\t\t\t\tuiState: { mode: WindowMode.Normal, x: 625, y: 263, width: 1718, height: 953 },\n\t\t\t\tfolderUri: URI.parse('file:///home/user/workspaces/testing/folding')\n\t\t\t}\n\t\t};\n\t\tassertEqualWindowsState(expected, windowsState, 'v1_32_folder');\n\n\t\tconst v1_32_empty_window = ` {\n\t\t\t\"openedWindows\": [\n\t\t\t],\n\t\t\t\"lastActiveWindow\": {\n\t\t\t\t\"backupPath\": \"/home/user/.config/code-oss-dev/Backups/1549539668998\",\n\t\t\t\t\"uiState\": {\n\t\t\t\t\t\"mode\": 1,\n\t\t\t\t\t\"x\": 768,\n\t\t\t\t\t\"y\": 336,\n\t\t\t\t\t\"width\": 1024,\n\t\t\t\t\t\"height\": 768\n\t\t\t\t}\n\t\t\t}\n\t\t}`;\n\n\t\twindowsState = restoreWindowsState(JSON.parse(v1_32_empty_window));\n\t\texpected = {\n\t\t\topenedWindows: [],\n\t\t\tlastActiveWindow: {\n\t\t\t\tbackupPath: '/home/user/.config/code-oss-dev/Backups/1549539668998',\n\t\t\t\tuiState: { mode: WindowMode.Normal, x: 768, y: 336, width: 1024, height: 768 }\n\t\t\t}\n\t\t};\n\t\tassertEqualWindowsState(expected, windowsState, 'v1_32_empty_window');\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"],
  "mappings": "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",
  "names": []
}
