{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/storage/test/common/storageService.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { deepStrictEqual, ok, strictEqual } from 'assert';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\nimport { InMemoryStorageService, IStorageService, IStorageTargetChangeEvent, IStorageValueChangeEvent, StorageScope, StorageTarget } from '../../common/storage.js';\n\nexport function createSuite<T extends IStorageService>(params: { setup: () => Promise<T>; teardown: (service: T) => Promise<void> }): void {\n\n\tlet storageService: T;\n\n\tconst disposables = new DisposableStore();\n\n\tsetup(async () => {\n\t\tstorageService = await params.setup();\n\t});\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t\treturn params.teardown(storageService);\n\t});\n\n\ttest('Get Data, Integer, Boolean (application)', () => {\n\t\tstoreData(StorageScope.APPLICATION);\n\t});\n\n\ttest('Get Data, Integer, Boolean (profile)', () => {\n\t\tstoreData(StorageScope.PROFILE);\n\t});\n\n\ttest('Get Data, Integer, Boolean, Object (workspace)', () => {\n\t\tstoreData(StorageScope.WORKSPACE);\n\t});\n\n\ttest('Storage change source', () => {\n\t\tconst storageValueChangeEvents: IStorageValueChangeEvent[] = [];\n\t\tstorageService.onDidChangeValue(StorageScope.WORKSPACE, undefined, disposables)(e => storageValueChangeEvents.push(e), undefined, disposables);\n\n\t\t// Explicit external source\n\t\tstorageService.storeAll([{ key: 'testExternalChange', value: 'foobar', scope: StorageScope.WORKSPACE, target: StorageTarget.MACHINE }], true);\n\t\tlet storageValueChangeEvent = storageValueChangeEvents.find(e => e.key === 'testExternalChange');\n\t\tstrictEqual(storageValueChangeEvent?.external, true);\n\n\t\t// Default source\n\t\tstorageService.storeAll([{ key: 'testChange', value: 'barfoo', scope: StorageScope.WORKSPACE, target: StorageTarget.MACHINE }], false);\n\t\tstorageValueChangeEvent = storageValueChangeEvents.find(e => e.key === 'testChange');\n\t\tstrictEqual(storageValueChangeEvent?.external, false);\n\n\t\tstorageService.store('testChange', 'foobar', StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\tstorageValueChangeEvent = storageValueChangeEvents.find(e => e.key === 'testChange');\n\t\tstrictEqual(storageValueChangeEvent?.external, false);\n\t});\n\n\ttest('Storage change event scope (all keys)', () => {\n\t\tconst storageValueChangeEvents: IStorageValueChangeEvent[] = [];\n\t\tstorageService.onDidChangeValue(StorageScope.WORKSPACE, undefined, disposables)(e => storageValueChangeEvents.push(e), undefined, disposables);\n\n\t\tstorageService.store('testChange', 'foobar', StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\tstorageService.store('testChange2', 'foobar', StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\tstorageService.store('testChange', 'foobar', StorageScope.APPLICATION, StorageTarget.MACHINE);\n\t\tstorageService.store('testChange', 'foobar', StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\tstorageService.store('testChange2', 'foobar', StorageScope.PROFILE, StorageTarget.MACHINE);\n\t\tstrictEqual(storageValueChangeEvents.length, 2);\n\t});\n\n\ttest('Storage change event scope (specific key)', () => {\n\t\tconst storageValueChangeEvents: IStorageValueChangeEvent[] = [];\n\t\tstorageService.onDidChangeValue(StorageScope.WORKSPACE, 'testChange', disposables)(e => storageValueChangeEvents.push(e), undefined, disposables);\n\n\t\tstorageService.store('testChange', 'foobar', StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\tstorageService.store('testChange', 'foobar', StorageScope.PROFILE, StorageTarget.USER);\n\t\tstorageService.store('testChange', 'foobar', StorageScope.APPLICATION, StorageTarget.MACHINE);\n\t\tstorageService.store('testChange2', 'foobar', StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\tconst storageValueChangeEvent = storageValueChangeEvents.find(e => e.key === 'testChange');\n\t\tok(storageValueChangeEvent);\n\t\tstrictEqual(storageValueChangeEvents.length, 1);\n\t});\n\n\tfunction storeData(scope: StorageScope): void {\n\t\tlet storageValueChangeEvents: IStorageValueChangeEvent[] = [];\n\t\tstorageService.onDidChangeValue(scope, undefined, disposables)(e => storageValueChangeEvents.push(e), undefined, disposables);\n\n\t\tstrictEqual(storageService.get('test.get', scope, 'foobar'), 'foobar');\n\t\tstrictEqual(storageService.get('test.get', scope, ''), '');\n\t\tstrictEqual(storageService.getNumber('test.getNumber', scope, 5), 5);\n\t\tstrictEqual(storageService.getNumber('test.getNumber', scope, 0), 0);\n\t\tstrictEqual(storageService.getBoolean('test.getBoolean', scope, true), true);\n\t\tstrictEqual(storageService.getBoolean('test.getBoolean', scope, false), false);\n\t\tdeepStrictEqual(storageService.getObject('test.getObject', scope, { 'foo': 'bar' }), { 'foo': 'bar' });\n\t\tdeepStrictEqual(storageService.getObject('test.getObject', scope, {}), {});\n\t\tdeepStrictEqual(storageService.getObject('test.getObject', scope, []), []);\n\n\t\tstorageService.store('test.get', 'foobar', scope, StorageTarget.MACHINE);\n\t\tstrictEqual(storageService.get('test.get', scope, (undefined)!), 'foobar');\n\t\tlet storageValueChangeEvent = storageValueChangeEvents.find(e => e.key === 'test.get');\n\t\tstrictEqual(storageValueChangeEvent?.scope, scope);\n\t\tstrictEqual(storageValueChangeEvent?.key, 'test.get');\n\t\tstorageValueChangeEvents = [];\n\n\t\tstorageService.store('test.get', '', scope, StorageTarget.MACHINE);\n\t\tstrictEqual(storageService.get('test.get', scope, (undefined)!), '');\n\t\tstorageValueChangeEvent = storageValueChangeEvents.find(e => e.key === 'test.get');\n\t\tstrictEqual(storageValueChangeEvent!.scope, scope);\n\t\tstrictEqual(storageValueChangeEvent!.key, 'test.get');\n\n\t\tstorageService.store('test.getNumber', 5, scope, StorageTarget.MACHINE);\n\t\tstrictEqual(storageService.getNumber('test.getNumber', scope, (undefined)!), 5);\n\n\t\tstorageService.store('test.getNumber', 0, scope, StorageTarget.MACHINE);\n\t\tstrictEqual(storageService.getNumber('test.getNumber', scope, (undefined)!), 0);\n\n\t\tstorageService.store('test.getBoolean', true, scope, StorageTarget.MACHINE);\n\t\tstrictEqual(storageService.getBoolean('test.getBoolean', scope, (undefined)!), true);\n\n\t\tstorageService.store('test.getBoolean', false, scope, StorageTarget.MACHINE);\n\t\tstrictEqual(storageService.getBoolean('test.getBoolean', scope, (undefined)!), false);\n\n\t\tstorageService.store('test.getObject', {}, scope, StorageTarget.MACHINE);\n\t\tdeepStrictEqual(storageService.getObject('test.getObject', scope, (undefined)!), {});\n\n\t\tstorageService.store('test.getObject', [42], scope, StorageTarget.MACHINE);\n\t\tdeepStrictEqual(storageService.getObject('test.getObject', scope, (undefined)!), [42]);\n\n\t\tstorageService.store('test.getObject', { 'foo': {} }, scope, StorageTarget.MACHINE);\n\t\tdeepStrictEqual(storageService.getObject('test.getObject', scope, (undefined)!), { 'foo': {} });\n\n\t\tstrictEqual(storageService.get('test.getDefault', scope, 'getDefault'), 'getDefault');\n\t\tstrictEqual(storageService.getNumber('test.getNumberDefault', scope, 5), 5);\n\t\tstrictEqual(storageService.getBoolean('test.getBooleanDefault', scope, true), true);\n\t\tdeepStrictEqual(storageService.getObject('test.getObjectDefault', scope, { 'foo': 42 }), { 'foo': 42 });\n\n\t\tstorageService.storeAll([\n\t\t\t{ key: 'test.storeAll1', value: 'foobar', scope, target: StorageTarget.MACHINE },\n\t\t\t{ key: 'test.storeAll2', value: 4, scope, target: StorageTarget.MACHINE },\n\t\t\t{ key: 'test.storeAll3', value: null, scope, target: StorageTarget.MACHINE }\n\t\t], false);\n\n\t\tstrictEqual(storageService.get('test.storeAll1', scope, 'foobar'), 'foobar');\n\t\tstrictEqual(storageService.get('test.storeAll2', scope, '4'), '4');\n\t\tstrictEqual(storageService.get('test.storeAll3', scope, 'null'), 'null');\n\t}\n\n\ttest('Remove Data (application)', () => {\n\t\tremoveData(StorageScope.APPLICATION);\n\t});\n\n\ttest('Remove Data (profile)', () => {\n\t\tremoveData(StorageScope.PROFILE);\n\t});\n\n\ttest('Remove Data (workspace)', () => {\n\t\tremoveData(StorageScope.WORKSPACE);\n\t});\n\n\tfunction removeData(scope: StorageScope): void {\n\t\tconst storageValueChangeEvents: IStorageValueChangeEvent[] = [];\n\t\tstorageService.onDidChangeValue(scope, undefined, disposables)(e => storageValueChangeEvents.push(e), undefined, disposables);\n\n\t\tstorageService.store('test.remove', 'foobar', scope, StorageTarget.MACHINE);\n\t\tstrictEqual('foobar', storageService.get('test.remove', scope, (undefined)!));\n\n\t\tstorageService.remove('test.remove', scope);\n\t\tok(!storageService.get('test.remove', scope, (undefined)!));\n\t\tconst storageValueChangeEvent = storageValueChangeEvents.find(e => e.key === 'test.remove');\n\t\tstrictEqual(storageValueChangeEvent?.scope, scope);\n\t\tstrictEqual(storageValueChangeEvent?.key, 'test.remove');\n\t}\n\n\ttest('Keys (in-memory)', () => {\n\t\tlet storageTargetEvent: IStorageTargetChangeEvent | undefined = undefined;\n\t\tstorageService.onDidChangeTarget(e => storageTargetEvent = e, undefined, disposables);\n\n\t\t// Empty\n\t\tfor (const scope of [StorageScope.WORKSPACE, StorageScope.PROFILE, StorageScope.APPLICATION]) {\n\t\t\tfor (const target of [StorageTarget.MACHINE, StorageTarget.USER]) {\n\t\t\t\tstrictEqual(storageService.keys(scope, target).length, 0);\n\t\t\t}\n\t\t}\n\n\t\tlet storageValueChangeEvent: IStorageValueChangeEvent | undefined = undefined;\n\n\t\t// Add values\n\t\tfor (const scope of [StorageScope.WORKSPACE, StorageScope.PROFILE, StorageScope.APPLICATION]) {\n\t\t\tstorageService.onDidChangeValue(scope, undefined, disposables)(e => storageValueChangeEvent = e, undefined, disposables);\n\n\t\t\tfor (const target of [StorageTarget.MACHINE, StorageTarget.USER]) {\n\t\t\t\tstorageTargetEvent = Object.create(null);\n\t\t\t\tstorageValueChangeEvent = Object.create(null);\n\n\t\t\t\tstorageService.store('test.target1', 'value1', scope, target);\n\t\t\t\tstrictEqual(storageService.keys(scope, target).length, 1);\n\t\t\t\tstrictEqual(storageTargetEvent?.scope, scope);\n\t\t\t\tstrictEqual(storageValueChangeEvent?.key, 'test.target1');\n\t\t\t\tstrictEqual(storageValueChangeEvent?.scope, scope);\n\t\t\t\tstrictEqual(storageValueChangeEvent?.target, target);\n\n\t\t\t\tstorageTargetEvent = undefined;\n\t\t\t\tstorageValueChangeEvent = Object.create(null);\n\n\t\t\t\tstorageService.store('test.target1', 'otherValue1', scope, target);\n\t\t\t\tstrictEqual(storageService.keys(scope, target).length, 1);\n\t\t\t\tstrictEqual(storageTargetEvent, undefined);\n\t\t\t\tstrictEqual(storageValueChangeEvent?.key, 'test.target1');\n\t\t\t\tstrictEqual(storageValueChangeEvent?.scope, scope);\n\t\t\t\tstrictEqual(storageValueChangeEvent?.target, target);\n\n\t\t\t\tstorageService.store('test.target2', 'value2', scope, target);\n\t\t\t\tstorageService.store('test.target3', 'value3', scope, target);\n\n\t\t\t\tstrictEqual(storageService.keys(scope, target).length, 3);\n\t\t\t}\n\t\t}\n\n\t\t// Remove values\n\t\tfor (const scope of [StorageScope.WORKSPACE, StorageScope.PROFILE, StorageScope.APPLICATION]) {\n\t\t\tfor (const target of [StorageTarget.MACHINE, StorageTarget.USER]) {\n\t\t\t\tconst keysLength = storageService.keys(scope, target).length;\n\n\t\t\t\tstorageService.store('test.target4', 'value1', scope, target);\n\t\t\t\tstrictEqual(storageService.keys(scope, target).length, keysLength + 1);\n\n\t\t\t\tstorageTargetEvent = Object.create(null);\n\t\t\t\tstorageValueChangeEvent = Object.create(null);\n\n\t\t\t\tstorageService.remove('test.target4', scope);\n\t\t\t\tstrictEqual(storageService.keys(scope, target).length, keysLength);\n\t\t\t\tstrictEqual(storageTargetEvent?.scope, scope);\n\t\t\t\tstrictEqual(storageValueChangeEvent?.key, 'test.target4');\n\t\t\t\tstrictEqual(storageValueChangeEvent?.scope, scope);\n\t\t\t}\n\t\t}\n\n\t\t// Remove all\n\t\tfor (const scope of [StorageScope.WORKSPACE, StorageScope.PROFILE, StorageScope.APPLICATION]) {\n\t\t\tfor (const target of [StorageTarget.MACHINE, StorageTarget.USER]) {\n\t\t\t\tconst keys = storageService.keys(scope, target);\n\n\t\t\t\tfor (const key of keys) {\n\t\t\t\t\tstorageService.remove(key, scope);\n\t\t\t\t}\n\n\t\t\t\tstrictEqual(storageService.keys(scope, target).length, 0);\n\t\t\t}\n\t\t}\n\n\t\t// Adding undefined or null removes value\n\t\tfor (const scope of [StorageScope.WORKSPACE, StorageScope.PROFILE, StorageScope.APPLICATION]) {\n\t\t\tfor (const target of [StorageTarget.MACHINE, StorageTarget.USER]) {\n\t\t\t\tstorageService.store('test.target1', 'value1', scope, target);\n\t\t\t\tstrictEqual(storageService.keys(scope, target).length, 1);\n\n\t\t\t\tstorageTargetEvent = Object.create(null);\n\n\t\t\t\tstorageService.store('test.target1', undefined, scope, target);\n\t\t\t\tstrictEqual(storageService.keys(scope, target).length, 0);\n\t\t\t\tstrictEqual(storageTargetEvent?.scope, scope);\n\n\t\t\t\tstorageService.store('test.target1', '', scope, target);\n\t\t\t\tstrictEqual(storageService.keys(scope, target).length, 1);\n\n\t\t\t\tstorageService.store('test.target1', null, scope, target);\n\t\t\t\tstrictEqual(storageService.keys(scope, target).length, 0);\n\t\t\t}\n\t\t}\n\n\t\t// Target change\n\t\tfor (const scope of [StorageScope.WORKSPACE, StorageScope.PROFILE, StorageScope.APPLICATION]) {\n\t\t\tstorageTargetEvent = undefined;\n\t\t\tstorageService.store('test.target5', 'value1', scope, StorageTarget.MACHINE);\n\t\t\tok(storageTargetEvent);\n\t\t\tstorageTargetEvent = undefined;\n\t\t\tstorageService.store('test.target5', 'value1', scope, StorageTarget.USER);\n\t\t\tok(storageTargetEvent);\n\t\t\tstorageTargetEvent = undefined;\n\t\t\tstorageService.store('test.target5', 'value1', scope, StorageTarget.MACHINE);\n\t\t\tok(storageTargetEvent);\n\t\t\tstorageTargetEvent = undefined;\n\t\t\tstorageService.store('test.target5', 'value1', scope, StorageTarget.MACHINE);\n\t\t\tok(!storageTargetEvent); // no change in target\n\t\t}\n\t});\n}\n\nsuite('StorageService (in-memory)', function () {\n\n\tconst disposables = new DisposableStore();\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t});\n\n\tcreateSuite<InMemoryStorageService>({\n\t\tsetup: async () => disposables.add(new InMemoryStorageService()),\n\t\tteardown: async () => { }\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"],
  "mappings": "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",
  "names": []
}
