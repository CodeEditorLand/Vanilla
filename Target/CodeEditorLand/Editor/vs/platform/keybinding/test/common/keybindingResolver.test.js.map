{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/keybinding/test/common/keybindingResolver.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { decodeKeybinding, createSimpleKeybinding, KeyCodeChord } from '../../../../base/common/keybindings.js';\nimport { KeyChord, KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { OS } from '../../../../base/common/platform.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\nimport { ContextKeyExpr, ContextKeyExpression, IContext } from '../../../contextkey/common/contextkey.js';\nimport { KeybindingResolver, ResultKind } from '../../common/keybindingResolver.js';\nimport { ResolvedKeybindingItem } from '../../common/resolvedKeybindingItem.js';\nimport { USLayoutResolvedKeybinding } from '../../common/usLayoutResolvedKeybinding.js';\nimport { createUSLayoutResolvedKeybinding } from './keybindingsTestUtils.js';\n\nfunction createContext(ctx: any) {\n\treturn {\n\t\tgetValue: (key: string) => {\n\t\t\treturn ctx[key];\n\t\t}\n\t};\n}\n\nsuite('KeybindingResolver', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tfunction kbItem(keybinding: number | number[], command: string, commandArgs: any, when: ContextKeyExpression | undefined, isDefault: boolean): ResolvedKeybindingItem {\n\t\tconst resolvedKeybinding = createUSLayoutResolvedKeybinding(keybinding, OS);\n\t\treturn new ResolvedKeybindingItem(\n\t\t\tresolvedKeybinding,\n\t\t\tcommand,\n\t\t\tcommandArgs,\n\t\t\twhen,\n\t\t\tisDefault,\n\t\t\tnull,\n\t\t\tfalse\n\t\t);\n\t}\n\n\tfunction getDispatchStr(chord: KeyCodeChord): string {\n\t\treturn USLayoutResolvedKeybinding.getDispatchStr(chord)!;\n\t}\n\n\ttest('resolve key', () => {\n\t\tconst keybinding = KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyZ;\n\t\tconst runtimeKeybinding = createSimpleKeybinding(keybinding, OS);\n\t\tconst contextRules = ContextKeyExpr.equals('bar', 'baz');\n\t\tconst keybindingItem = kbItem(keybinding, 'yes', null, contextRules, true);\n\n\t\tassert.strictEqual(contextRules.evaluate(createContext({ bar: 'baz' })), true);\n\t\tassert.strictEqual(contextRules.evaluate(createContext({ bar: 'bz' })), false);\n\n\t\tconst resolver = new KeybindingResolver([keybindingItem], [], () => { });\n\n\t\tconst r1 = resolver.resolve(createContext({ bar: 'baz' }), [], getDispatchStr(runtimeKeybinding));\n\t\tassert.ok(r1.kind === ResultKind.KbFound);\n\t\tassert.strictEqual(r1.commandId, 'yes');\n\n\t\tconst r2 = resolver.resolve(createContext({ bar: 'bz' }), [], getDispatchStr(runtimeKeybinding));\n\t\tassert.strictEqual(r2.kind, ResultKind.NoMatchingKb);\n\t});\n\n\ttest('resolve key with arguments', () => {\n\t\tconst commandArgs = { text: 'no' };\n\t\tconst keybinding = KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyZ;\n\t\tconst runtimeKeybinding = createSimpleKeybinding(keybinding, OS);\n\t\tconst contextRules = ContextKeyExpr.equals('bar', 'baz');\n\t\tconst keybindingItem = kbItem(keybinding, 'yes', commandArgs, contextRules, true);\n\n\t\tconst resolver = new KeybindingResolver([keybindingItem], [], () => { });\n\n\t\tconst r = resolver.resolve(createContext({ bar: 'baz' }), [], getDispatchStr(runtimeKeybinding));\n\t\tassert.ok(r.kind === ResultKind.KbFound);\n\t\tassert.strictEqual(r.commandArgs, commandArgs);\n\t});\n\n\tsuite('handle keybinding removals', () => {\n\n\t\ttest('simple 1', () => {\n\t\t\tconst defaults = [\n\t\t\t\tkbItem(KeyCode.KeyA, 'yes1', null, ContextKeyExpr.equals('1', 'a'), true)\n\t\t\t];\n\t\t\tconst overrides = [\n\t\t\t\tkbItem(KeyCode.KeyB, 'yes2', null, ContextKeyExpr.equals('2', 'b'), false)\n\t\t\t];\n\t\t\tconst actual = KeybindingResolver.handleRemovals([...defaults, ...overrides]);\n\t\t\tassert.deepStrictEqual(actual, [\n\t\t\t\tkbItem(KeyCode.KeyA, 'yes1', null, ContextKeyExpr.equals('1', 'a'), true),\n\t\t\t\tkbItem(KeyCode.KeyB, 'yes2', null, ContextKeyExpr.equals('2', 'b'), false),\n\t\t\t]);\n\t\t});\n\n\t\ttest('simple 2', () => {\n\t\t\tconst defaults = [\n\t\t\t\tkbItem(KeyCode.KeyA, 'yes1', null, ContextKeyExpr.equals('1', 'a'), true),\n\t\t\t\tkbItem(KeyCode.KeyB, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t\t];\n\t\t\tconst overrides = [\n\t\t\t\tkbItem(KeyCode.KeyC, 'yes3', null, ContextKeyExpr.equals('3', 'c'), false)\n\t\t\t];\n\t\t\tconst actual = KeybindingResolver.handleRemovals([...defaults, ...overrides]);\n\t\t\tassert.deepStrictEqual(actual, [\n\t\t\t\tkbItem(KeyCode.KeyA, 'yes1', null, ContextKeyExpr.equals('1', 'a'), true),\n\t\t\t\tkbItem(KeyCode.KeyB, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true),\n\t\t\t\tkbItem(KeyCode.KeyC, 'yes3', null, ContextKeyExpr.equals('3', 'c'), false),\n\t\t\t]);\n\t\t});\n\n\t\ttest('removal with not matching when', () => {\n\t\t\tconst defaults = [\n\t\t\t\tkbItem(KeyCode.KeyA, 'yes1', null, ContextKeyExpr.equals('1', 'a'), true),\n\t\t\t\tkbItem(KeyCode.KeyB, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t\t];\n\t\t\tconst overrides = [\n\t\t\t\tkbItem(KeyCode.KeyA, '-yes1', null, ContextKeyExpr.equals('1', 'b'), false)\n\t\t\t];\n\t\t\tconst actual = KeybindingResolver.handleRemovals([...defaults, ...overrides]);\n\t\t\tassert.deepStrictEqual(actual, [\n\t\t\t\tkbItem(KeyCode.KeyA, 'yes1', null, ContextKeyExpr.equals('1', 'a'), true),\n\t\t\t\tkbItem(KeyCode.KeyB, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t\t]);\n\t\t});\n\n\t\ttest('removal with not matching keybinding', () => {\n\t\t\tconst defaults = [\n\t\t\t\tkbItem(KeyCode.KeyA, 'yes1', null, ContextKeyExpr.equals('1', 'a'), true),\n\t\t\t\tkbItem(KeyCode.KeyB, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t\t];\n\t\t\tconst overrides = [\n\t\t\t\tkbItem(KeyCode.KeyB, '-yes1', null, ContextKeyExpr.equals('1', 'a'), false)\n\t\t\t];\n\t\t\tconst actual = KeybindingResolver.handleRemovals([...defaults, ...overrides]);\n\t\t\tassert.deepStrictEqual(actual, [\n\t\t\t\tkbItem(KeyCode.KeyA, 'yes1', null, ContextKeyExpr.equals('1', 'a'), true),\n\t\t\t\tkbItem(KeyCode.KeyB, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t\t]);\n\t\t});\n\n\t\ttest('removal with matching keybinding and when', () => {\n\t\t\tconst defaults = [\n\t\t\t\tkbItem(KeyCode.KeyA, 'yes1', null, ContextKeyExpr.equals('1', 'a'), true),\n\t\t\t\tkbItem(KeyCode.KeyB, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t\t];\n\t\t\tconst overrides = [\n\t\t\t\tkbItem(KeyCode.KeyA, '-yes1', null, ContextKeyExpr.equals('1', 'a'), false)\n\t\t\t];\n\t\t\tconst actual = KeybindingResolver.handleRemovals([...defaults, ...overrides]);\n\t\t\tassert.deepStrictEqual(actual, [\n\t\t\t\tkbItem(KeyCode.KeyB, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t\t]);\n\t\t});\n\n\t\ttest('removal with unspecified keybinding', () => {\n\t\t\tconst defaults = [\n\t\t\t\tkbItem(KeyCode.KeyA, 'yes1', null, ContextKeyExpr.equals('1', 'a'), true),\n\t\t\t\tkbItem(KeyCode.KeyB, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t\t];\n\t\t\tconst overrides = [\n\t\t\t\tkbItem(0, '-yes1', null, ContextKeyExpr.equals('1', 'a'), false)\n\t\t\t];\n\t\t\tconst actual = KeybindingResolver.handleRemovals([...defaults, ...overrides]);\n\t\t\tassert.deepStrictEqual(actual, [\n\t\t\t\tkbItem(KeyCode.KeyB, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t\t]);\n\t\t});\n\n\t\ttest('removal with unspecified when', () => {\n\t\t\tconst defaults = [\n\t\t\t\tkbItem(KeyCode.KeyA, 'yes1', null, ContextKeyExpr.equals('1', 'a'), true),\n\t\t\t\tkbItem(KeyCode.KeyB, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t\t];\n\t\t\tconst overrides = [\n\t\t\t\tkbItem(KeyCode.KeyA, '-yes1', null, undefined, false)\n\t\t\t];\n\t\t\tconst actual = KeybindingResolver.handleRemovals([...defaults, ...overrides]);\n\t\t\tassert.deepStrictEqual(actual, [\n\t\t\t\tkbItem(KeyCode.KeyB, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t\t]);\n\t\t});\n\n\t\ttest('removal with unspecified when and unspecified keybinding', () => {\n\t\t\tconst defaults = [\n\t\t\t\tkbItem(KeyCode.KeyA, 'yes1', null, ContextKeyExpr.equals('1', 'a'), true),\n\t\t\t\tkbItem(KeyCode.KeyB, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t\t];\n\t\t\tconst overrides = [\n\t\t\t\tkbItem(0, '-yes1', null, undefined, false)\n\t\t\t];\n\t\t\tconst actual = KeybindingResolver.handleRemovals([...defaults, ...overrides]);\n\t\t\tassert.deepStrictEqual(actual, [\n\t\t\t\tkbItem(KeyCode.KeyB, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t\t]);\n\t\t});\n\n\t\ttest('issue #138997 - removal in default list', () => {\n\t\t\tconst defaults = [\n\t\t\t\tkbItem(KeyCode.KeyA, 'yes1', null, undefined, true),\n\t\t\t\tkbItem(KeyCode.KeyB, 'yes2', null, undefined, true),\n\t\t\t\tkbItem(0, '-yes1', null, undefined, false)\n\t\t\t];\n\t\t\tconst overrides: ResolvedKeybindingItem[] = [];\n\t\t\tconst actual = KeybindingResolver.handleRemovals([...defaults, ...overrides]);\n\t\t\tassert.deepStrictEqual(actual, [\n\t\t\t\tkbItem(KeyCode.KeyB, 'yes2', null, undefined, true)\n\t\t\t]);\n\t\t});\n\n\t\ttest('issue #612#issuecomment-222109084 cannot remove keybindings for commands with ^', () => {\n\t\t\tconst defaults = [\n\t\t\t\tkbItem(KeyCode.KeyA, '^yes1', null, ContextKeyExpr.equals('1', 'a'), true),\n\t\t\t\tkbItem(KeyCode.KeyB, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t\t];\n\t\t\tconst overrides = [\n\t\t\t\tkbItem(KeyCode.KeyA, '-yes1', null, undefined, false)\n\t\t\t];\n\t\t\tconst actual = KeybindingResolver.handleRemovals([...defaults, ...overrides]);\n\t\t\tassert.deepStrictEqual(actual, [\n\t\t\t\tkbItem(KeyCode.KeyB, 'yes2', null, ContextKeyExpr.equals('2', 'b'), true)\n\t\t\t]);\n\t\t});\n\n\t\ttest('issue #140884 Unable to reassign F1 as keybinding for Show All Commands', () => {\n\t\t\tconst defaults = [\n\t\t\t\tkbItem(KeyCode.KeyA, 'command1', null, undefined, true),\n\t\t\t];\n\t\t\tconst overrides = [\n\t\t\t\tkbItem(KeyCode.KeyA, '-command1', null, undefined, false),\n\t\t\t\tkbItem(KeyCode.KeyA, 'command1', null, undefined, false),\n\t\t\t];\n\t\t\tconst actual = KeybindingResolver.handleRemovals([...defaults, ...overrides]);\n\t\t\tassert.deepStrictEqual(actual, [\n\t\t\t\tkbItem(KeyCode.KeyA, 'command1', null, undefined, false)\n\t\t\t]);\n\t\t});\n\n\t\ttest('issue #141638: Keyboard Shortcuts: Change When Expression might actually remove keybinding in Insiders', () => {\n\t\t\tconst defaults = [\n\t\t\t\tkbItem(KeyCode.KeyA, 'command1', null, undefined, true),\n\t\t\t];\n\t\t\tconst overrides = [\n\t\t\t\tkbItem(KeyCode.KeyA, 'command1', null, ContextKeyExpr.equals('a', '1'), false),\n\t\t\t\tkbItem(KeyCode.KeyA, '-command1', null, undefined, false),\n\t\t\t];\n\t\t\tconst actual = KeybindingResolver.handleRemovals([...defaults, ...overrides]);\n\t\t\tassert.deepStrictEqual(actual, [\n\t\t\t\tkbItem(KeyCode.KeyA, 'command1', null, ContextKeyExpr.equals('a', '1'), false)\n\t\t\t]);\n\t\t});\n\n\t\ttest('issue #157751: Auto-quoting of context keys prevents removal of keybindings via UI', () => {\n\t\t\tconst defaults = [\n\t\t\t\tkbItem(KeyCode.KeyA, 'command1', null, ContextKeyExpr.deserialize(`editorTextFocus && activeEditor != workbench.editor.notebook && editorLangId in julia.supportedLanguageIds`), true),\n\t\t\t];\n\t\t\tconst overrides = [\n\t\t\t\tkbItem(KeyCode.KeyA, '-command1', null, ContextKeyExpr.deserialize(`editorTextFocus && activeEditor != 'workbench.editor.notebook' && editorLangId in 'julia.supportedLanguageIds'`), false),\n\t\t\t];\n\t\t\tconst actual = KeybindingResolver.handleRemovals([...defaults, ...overrides]);\n\t\t\tassert.deepStrictEqual(actual, []);\n\t\t});\n\n\t\ttest('issue #160604: Remove keybindings with when clause does not work', () => {\n\t\t\tconst defaults = [\n\t\t\t\tkbItem(KeyCode.KeyA, 'command1', null, undefined, true),\n\t\t\t];\n\t\t\tconst overrides = [\n\t\t\t\tkbItem(KeyCode.KeyA, '-command1', null, ContextKeyExpr.true(), false),\n\t\t\t];\n\t\t\tconst actual = KeybindingResolver.handleRemovals([...defaults, ...overrides]);\n\t\t\tassert.deepStrictEqual(actual, []);\n\t\t});\n\n\t\ttest('contextIsEntirelyIncluded', () => {\n\t\t\tconst toContextKeyExpression = (expr: ContextKeyExpression | string | null) => {\n\t\t\t\tif (typeof expr === 'string' || !expr) {\n\t\t\t\t\treturn ContextKeyExpr.deserialize(expr);\n\t\t\t\t}\n\t\t\t\treturn expr;\n\t\t\t};\n\t\t\tconst assertIsIncluded = (a: ContextKeyExpression | string | null, b: ContextKeyExpression | string | null) => {\n\t\t\t\tassert.strictEqual(KeybindingResolver.whenIsEntirelyIncluded(toContextKeyExpression(a), toContextKeyExpression(b)), true);\n\t\t\t};\n\t\t\tconst assertIsNotIncluded = (a: ContextKeyExpression | string | null, b: ContextKeyExpression | string | null) => {\n\t\t\t\tassert.strictEqual(KeybindingResolver.whenIsEntirelyIncluded(toContextKeyExpression(a), toContextKeyExpression(b)), false);\n\t\t\t};\n\n\t\t\tassertIsIncluded(null, null);\n\t\t\tassertIsIncluded(null, ContextKeyExpr.true());\n\t\t\tassertIsIncluded(ContextKeyExpr.true(), null);\n\t\t\tassertIsIncluded(ContextKeyExpr.true(), ContextKeyExpr.true());\n\t\t\tassertIsIncluded('key1', null);\n\t\t\tassertIsIncluded('key1', '');\n\t\t\tassertIsIncluded('key1', 'key1');\n\t\t\tassertIsIncluded('key1', ContextKeyExpr.true());\n\t\t\tassertIsIncluded('!key1', '');\n\t\t\tassertIsIncluded('!key1', '!key1');\n\t\t\tassertIsIncluded('key2', '');\n\t\t\tassertIsIncluded('key2', 'key2');\n\t\t\tassertIsIncluded('key1 && key1 && key2 && key2', 'key2');\n\t\t\tassertIsIncluded('key1 && key2', 'key2');\n\t\t\tassertIsIncluded('key1 && key2', 'key1');\n\t\t\tassertIsIncluded('key1 && key2', '');\n\t\t\tassertIsIncluded('key1', 'key1 || key2');\n\t\t\tassertIsIncluded('key1 || !key1', 'key2 || !key2');\n\t\t\tassertIsIncluded('key1', 'key1 || key2 && key3');\n\n\t\t\tassertIsNotIncluded('key1', '!key1');\n\t\t\tassertIsNotIncluded('!key1', 'key1');\n\t\t\tassertIsNotIncluded('key1 && key2', 'key3');\n\t\t\tassertIsNotIncluded('key1 && key2', 'key4');\n\t\t\tassertIsNotIncluded('key1', 'key2');\n\t\t\tassertIsNotIncluded('key1 || key2', 'key2');\n\t\t\tassertIsNotIncluded('', 'key2');\n\t\t\tassertIsNotIncluded(null, 'key2');\n\t\t});\n\t});\n\n\tsuite('resolve command', () => {\n\n\t\tfunction _kbItem(keybinding: number | number[], command: string, when: ContextKeyExpression | undefined): ResolvedKeybindingItem {\n\t\t\treturn kbItem(keybinding, command, null, when, true);\n\t\t}\n\n\t\tconst items = [\n\t\t\t// This one will never match because its \"when\" is always overwritten by another one\n\t\t\t_kbItem(\n\t\t\t\tKeyCode.KeyX,\n\t\t\t\t'first',\n\t\t\t\tContextKeyExpr.and(\n\t\t\t\t\tContextKeyExpr.equals('key1', true),\n\t\t\t\t\tContextKeyExpr.notEquals('key2', false)\n\t\t\t\t)\n\t\t\t),\n\t\t\t// This one always overwrites first\n\t\t\t_kbItem(\n\t\t\t\tKeyCode.KeyX,\n\t\t\t\t'second',\n\t\t\t\tContextKeyExpr.equals('key2', true)\n\t\t\t),\n\t\t\t// This one is a secondary mapping for `second`\n\t\t\t_kbItem(\n\t\t\t\tKeyCode.KeyZ,\n\t\t\t\t'second',\n\t\t\t\tundefined\n\t\t\t),\n\t\t\t// This one sometimes overwrites first\n\t\t\t_kbItem(\n\t\t\t\tKeyCode.KeyX,\n\t\t\t\t'third',\n\t\t\t\tContextKeyExpr.equals('key3', true)\n\t\t\t),\n\t\t\t// This one is always overwritten by another one\n\t\t\t_kbItem(\n\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyY,\n\t\t\t\t'fourth',\n\t\t\t\tContextKeyExpr.equals('key4', true)\n\t\t\t),\n\t\t\t// This one overwrites with a chord the previous one\n\t\t\t_kbItem(\n\t\t\t\tKeyChord(KeyMod.CtrlCmd | KeyCode.KeyY, KeyCode.KeyZ),\n\t\t\t\t'fifth',\n\t\t\t\tundefined\n\t\t\t),\n\t\t\t// This one has no keybinding\n\t\t\t_kbItem(\n\t\t\t\t0,\n\t\t\t\t'sixth',\n\t\t\t\tundefined\n\t\t\t),\n\t\t\t_kbItem(\n\t\t\t\tKeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyU),\n\t\t\t\t'seventh',\n\t\t\t\tundefined\n\t\t\t),\n\t\t\t_kbItem(\n\t\t\t\tKeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyK),\n\t\t\t\t'seventh',\n\t\t\t\tundefined\n\t\t\t),\n\t\t\t_kbItem(\n\t\t\t\tKeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyU),\n\t\t\t\t'uncomment lines',\n\t\t\t\tundefined\n\t\t\t),\n\t\t\t_kbItem(\n\t\t\t\tKeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyC), // cmd+k cmd+c\n\t\t\t\t'comment lines',\n\t\t\t\tundefined\n\t\t\t),\n\t\t\t_kbItem(\n\t\t\t\tKeyChord(KeyMod.CtrlCmd | KeyCode.KeyG, KeyMod.CtrlCmd | KeyCode.KeyC), // cmd+g cmd+c\n\t\t\t\t'unreachablechord',\n\t\t\t\tundefined\n\t\t\t),\n\t\t\t_kbItem(\n\t\t\t\tKeyMod.CtrlCmd | KeyCode.KeyG, // cmd+g\n\t\t\t\t'eleven',\n\t\t\t\tundefined\n\t\t\t),\n\t\t\t_kbItem(\n\t\t\t\t[KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyA, KeyCode.KeyB], // cmd+k a b\n\t\t\t\t'long multi chord',\n\t\t\t\tundefined\n\t\t\t),\n\t\t\t_kbItem(\n\t\t\t\t[KeyMod.CtrlCmd | KeyCode.KeyB, KeyMod.CtrlCmd | KeyCode.KeyC], // cmd+b cmd+c\n\t\t\t\t'shadowed by long-multi-chord-2',\n\t\t\t\tundefined\n\t\t\t),\n\t\t\t_kbItem(\n\t\t\t\t[KeyMod.CtrlCmd | KeyCode.KeyB, KeyMod.CtrlCmd | KeyCode.KeyC, KeyCode.KeyI], // cmd+b cmd+c i\n\t\t\t\t'long-multi-chord-2',\n\t\t\t\tundefined\n\t\t\t)\n\t\t];\n\n\t\tconst resolver = new KeybindingResolver(items, [], () => { });\n\n\t\tconst testKbLookupByCommand = (commandId: string, expectedKeys: number[] | number[][]) => {\n\t\t\t// Test lookup\n\t\t\tconst lookupResult = resolver.lookupKeybindings(commandId);\n\t\t\tassert.strictEqual(lookupResult.length, expectedKeys.length, 'Length mismatch @ commandId ' + commandId);\n\t\t\tfor (let i = 0, len = lookupResult.length; i < len; i++) {\n\t\t\t\tconst expected = createUSLayoutResolvedKeybinding(expectedKeys[i], OS)!;\n\n\t\t\t\tassert.strictEqual(lookupResult[i].resolvedKeybinding!.getUserSettingsLabel(), expected.getUserSettingsLabel(), 'value mismatch @ commandId ' + commandId);\n\t\t\t}\n\t\t};\n\n\t\tconst testResolve = (ctx: IContext, _expectedKey: number | number[], commandId: string) => {\n\t\t\tconst expectedKeybinding = decodeKeybinding(_expectedKey, OS)!;\n\n\t\t\tconst previousChord: string[] = [];\n\n\t\t\tfor (let i = 0, len = expectedKeybinding.chords.length; i < len; i++) {\n\n\t\t\t\tconst chord = getDispatchStr(<KeyCodeChord>expectedKeybinding.chords[i]);\n\n\t\t\t\tconst result = resolver.resolve(ctx, previousChord, chord);\n\n\t\t\t\tif (i === len - 1) {\n\t\t\t\t\t// if it's the final chord, then we should find a valid command,\n\t\t\t\t\t// and there should not be a chord.\n\t\t\t\t\tassert.ok(result.kind === ResultKind.KbFound, `Enters multi chord for ${commandId} at chord ${i}`);\n\t\t\t\t\tassert.strictEqual(result.commandId, commandId, `Enters multi chord for ${commandId} at chord ${i}`);\n\t\t\t\t} else if (i > 0) {\n\t\t\t\t\t// if this is an intermediate chord, we should not find a valid command,\n\t\t\t\t\t// and there should be an open chord we continue.\n\t\t\t\t\tassert.ok(result.kind === ResultKind.MoreChordsNeeded, `Continues multi chord for ${commandId} at chord ${i}`);\n\t\t\t\t} else {\n\t\t\t\t\t// if it's not the final chord and not an intermediate, then we should not\n\t\t\t\t\t// find a valid command, and we should enter a chord.\n\t\t\t\t\tassert.ok(result.kind === ResultKind.MoreChordsNeeded, `Enters multi chord for ${commandId} at chord ${i}`);\n\t\t\t\t}\n\t\t\t\tpreviousChord.push(chord);\n\t\t\t}\n\t\t};\n\n\t\ttest('resolve command - 1', () => {\n\t\t\ttestKbLookupByCommand('first', []);\n\t\t});\n\n\t\ttest('resolve command - 2', () => {\n\t\t\ttestKbLookupByCommand('second', [KeyCode.KeyZ, KeyCode.KeyX]);\n\t\t\ttestResolve(createContext({ key2: true }), KeyCode.KeyX, 'second');\n\t\t\ttestResolve(createContext({}), KeyCode.KeyZ, 'second');\n\t\t});\n\n\t\ttest('resolve command - 3', () => {\n\t\t\ttestKbLookupByCommand('third', [KeyCode.KeyX]);\n\t\t\ttestResolve(createContext({ key3: true }), KeyCode.KeyX, 'third');\n\t\t});\n\n\t\ttest('resolve command - 4', () => {\n\t\t\ttestKbLookupByCommand('fourth', []);\n\t\t});\n\n\t\ttest('resolve command - 5', () => {\n\t\t\ttestKbLookupByCommand('fifth', [KeyChord(KeyMod.CtrlCmd | KeyCode.KeyY, KeyCode.KeyZ)]);\n\t\t\ttestResolve(createContext({}), KeyChord(KeyMod.CtrlCmd | KeyCode.KeyY, KeyCode.KeyZ), 'fifth');\n\t\t});\n\n\t\ttest('resolve command - 6', () => {\n\t\t\ttestKbLookupByCommand('seventh', [KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyK)]);\n\t\t\ttestResolve(createContext({}), KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyK), 'seventh');\n\t\t});\n\n\t\ttest('resolve command - 7', () => {\n\t\t\ttestKbLookupByCommand('uncomment lines', [KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyU)]);\n\t\t\ttestResolve(createContext({}), KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyU), 'uncomment lines');\n\t\t});\n\n\t\ttest('resolve command - 8', () => {\n\t\t\ttestKbLookupByCommand('comment lines', [KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyC)]);\n\t\t\ttestResolve(createContext({}), KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyC), 'comment lines');\n\t\t});\n\n\t\ttest('resolve command - 9', () => {\n\t\t\ttestKbLookupByCommand('unreachablechord', []);\n\t\t});\n\n\t\ttest('resolve command - 10', () => {\n\t\t\ttestKbLookupByCommand('eleven', [KeyMod.CtrlCmd | KeyCode.KeyG]);\n\t\t\ttestResolve(createContext({}), KeyMod.CtrlCmd | KeyCode.KeyG, 'eleven');\n\t\t});\n\n\t\ttest('resolve command - 11', () => {\n\t\t\ttestKbLookupByCommand('sixth', []);\n\t\t});\n\n\t\ttest('resolve command - 12', () => {\n\t\t\ttestKbLookupByCommand('long multi chord', [[KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyA, KeyCode.KeyB]]);\n\t\t\ttestResolve(createContext({}), [KeyMod.CtrlCmd | KeyCode.KeyK, KeyCode.KeyA, KeyCode.KeyB], 'long multi chord');\n\t\t});\n\n\t\tconst emptyContext = createContext({});\n\n\t\ttest('KBs having common prefix - the one defined later is returned', () => {\n\t\t\ttestResolve(emptyContext, [KeyMod.CtrlCmd | KeyCode.KeyB, KeyMod.CtrlCmd | KeyCode.KeyC, KeyCode.KeyI], 'long-multi-chord-2');\n\t\t});\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
