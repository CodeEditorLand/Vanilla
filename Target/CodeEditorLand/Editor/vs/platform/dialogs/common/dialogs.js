import"../../../../vs/base/common/event.js";import"../../../../vs/base/common/htmlContent.js";import{mnemonicButtonLabel as I}from"../../../../vs/base/common/labels.js";import{deepClone as g}from"../../../../vs/base/common/objects.js";import{isLinux as m,isMacintosh as f,isWindows as y}from"../../../../vs/base/common/platform.js";import{basename as P}from"../../../../vs/base/common/resources.js";import u from"../../../../vs/base/common/severity.js";import"../../../../vs/base/common/themables.js";import"../../../../vs/base/common/uri.js";import"../../../../vs/base/parts/sandbox/common/electronTypes.js";import{localize as a}from"../../../../vs/nls.js";import{createDecorator as d}from"../../../../vs/platform/instantiation/common/instantiation.js";import"../../../../vs/platform/product/common/productService.js";import"../../../../vs/platform/telemetry/common/telemetry.js";const N=d("dialogService");var x=(e=>(e[e.Confirmation=1]="Confirmation",e[e.Prompt=2]="Prompt",e[e.Input=3]="Input",e))(x||{});class V{getConfirmationButtons(n){return this.getButtons(n,1)}getPromptButtons(n){return this.getButtons(n,2)}getInputButtons(n){return this.getButtons(n,3)}getButtons(n,o){const e=[];switch(o){case 1:{const t=n;t.primaryButton?e.push(t.primaryButton):e.push(a({key:"yesButton",comment:["&& denotes a mnemonic"]},"&&Yes")),t.cancelButton?e.push(t.cancelButton):e.push(a("cancelButton","Cancel"));break}case 2:{const t=n;Array.isArray(t.buttons)&&t.buttons.length>0&&e.push(...t.buttons.map(i=>i.label)),t.cancelButton&&(t.cancelButton===!0?e.push(a("cancelButton","Cancel")):typeof t.cancelButton=="string"?e.push(t.cancelButton):t.cancelButton.label?e.push(t.cancelButton.label):e.push(a("cancelButton","Cancel"))),e.length===0&&e.push(a({key:"okButton",comment:["&& denotes a mnemonic"]},"&&OK"));break}case 3:{const t=n;t.primaryButton?e.push(t.primaryButton):e.push(a({key:"okButton",comment:["&& denotes a mnemonic"]},"&&OK")),t.cancelButton?e.push(t.cancelButton):e.push(a("cancelButton","Cancel"));break}}return e}getDialogType(n){if(typeof n=="string")return n;if(typeof n=="number")return n===u.Info?"info":n===u.Error?"error":n===u.Warning?"warning":"none"}getPromptResult(n,o,e){const t=[...n.buttons??[]];n.cancelButton&&typeof n.cancelButton!="string"&&typeof n.cancelButton!="boolean"&&t.push(n.cancelButton);let i=t[o]?.run({checkboxChecked:e});return i instanceof Promise||(i=Promise.resolve(i)),{result:i,checkboxChecked:e}}}const j=d("fileDialogService");var h=(e=>(e[e.SAVE=0]="SAVE",e[e.DONT_SAVE=1]="DONT_SAVE",e[e.CANCEL=2]="CANCEL",e))(h||{});const c=10;function q(s){const n=[];return n.push(...s.slice(0,c).map(o=>typeof o=="string"?o:P(o))),s.length>c&&(s.length-c===1?n.push(a("moreFile","...1 additional file not shown")):n.push(a("moreFiles","...{0} additional files not shown",s.length-c))),n.push(""),n.join(`
`)}function z(s,n){const o=g(s);let e=(o.buttons??[]).map(l=>I(l)),t=(s.buttons||[]).map((l,p)=>p),i=0,r=o.cancelId??e.length-1;if(e.length>1){const l=typeof r=="number"?e[r]:void 0;if(m||f){if(typeof l=="string"&&e.length>1&&r!==1){e.splice(r,1),e.splice(1,0,l);const p=t[r];t.splice(r,1),t.splice(1,0,p),r=1}m&&e.length>1&&(e=e.reverse(),t=t.reverse(),i=e.length-1,typeof l=="string"&&(r=i-1))}else if(y&&typeof l=="string"&&e.length>1&&r!==e.length-1){e.splice(r,1),e.push(l);const p=t[r];t.splice(r,1),t.push(p),r=e.length-1}}return o.buttons=e,o.defaultId=i,o.cancelId=r,o.noLink=!0,o.title=o.title||n.nameLong,{options:o,buttonIndeces:t}}export{V as AbstractDialogHandler,h as ConfirmResult,N as IDialogService,j as IFileDialogService,q as getFileNamesMessage,z as massageMessageBoxOptions};
