{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/dialogs/test/common/testDialogService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from '../../../../base/common/event.js';\nimport Severity from '../../../../base/common/severity.js';\nimport { IConfirmation, IConfirmationResult, IDialogService, IInputResult, IPrompt, IPromptBaseButton, IPromptResult, IPromptResultWithCancel, IPromptWithCustomCancel, IPromptWithDefaultCancel } from '../../common/dialogs.js';\n\nexport class TestDialogService implements IDialogService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\treadonly onWillShowDialog = Event.None;\n\treadonly onDidShowDialog = Event.None;\n\n\tconstructor(\n\t\tprivate defaultConfirmResult: IConfirmationResult | undefined = undefined,\n\t\tprivate defaultPromptResult: IPromptResult<any> | undefined = undefined\n\t) { }\n\n\tprivate confirmResult: IConfirmationResult | undefined = undefined;\n\tsetConfirmResult(result: IConfirmationResult) {\n\t\tthis.confirmResult = result;\n\t}\n\n\tasync confirm(confirmation: IConfirmation): Promise<IConfirmationResult> {\n\t\tif (this.confirmResult) {\n\t\t\tconst confirmResult = this.confirmResult;\n\t\t\tthis.confirmResult = undefined;\n\n\t\t\treturn confirmResult;\n\t\t}\n\n\t\treturn this.defaultConfirmResult ?? { confirmed: false };\n\t}\n\n\tprompt<T>(prompt: IPromptWithCustomCancel<T>): Promise<IPromptResultWithCancel<T>>;\n\tprompt<T>(prompt: IPromptWithDefaultCancel<T>): Promise<IPromptResult<T>>;\n\tprompt<T>(prompt: IPrompt<T>): Promise<IPromptResult<T>>;\n\tasync prompt<T>(prompt: IPrompt<T> | IPromptWithCustomCancel<T>): Promise<IPromptResult<T> | IPromptResultWithCancel<T>> {\n\t\tif (this.defaultPromptResult) {\n\t\t\treturn this.defaultPromptResult;\n\t\t}\n\t\tconst promptButtons: IPromptBaseButton<T>[] = [...(prompt.buttons ?? [])];\n\t\tif (prompt.cancelButton && typeof prompt.cancelButton !== 'string' && typeof prompt.cancelButton !== 'boolean') {\n\t\t\tpromptButtons.push(prompt.cancelButton);\n\t\t}\n\n\t\treturn { result: await promptButtons[0]?.run({ checkboxChecked: false }) };\n\t}\n\tasync info(message: string, detail?: string): Promise<void> {\n\t\tawait this.prompt({ type: Severity.Info, message, detail });\n\t}\n\n\tasync warn(message: string, detail?: string): Promise<void> {\n\t\tawait this.prompt({ type: Severity.Warning, message, detail });\n\t}\n\n\tasync error(message: string, detail?: string): Promise<void> {\n\t\tawait this.prompt({ type: Severity.Error, message, detail });\n\t}\n\tasync input(): Promise<IInputResult> { { return { confirmed: true, values: [] }; } }\n\tasync about(): Promise<void> { }\n}\n"],
  "mappings": ";;AAKA,SAAS,aAAa;AACtB,OAAO,cAAc;AACrB,SAAS,eAAe,qBAAqB,gBAAgB,cAAc,SAAS,mBAAmB,eAAe,yBAAyB,yBAAyB,gCAAgC;AAEjM,MAAM,kBAA4C;AAAA,EAOxD,YACS,uBAAwD,QACxD,sBAAsD,QAC7D;AAFO;AACA;AAAA,EACL;AAAA,EAnBL,OASyD;AAAA;AAAA;AAAA,EAI/C,mBAAmB,MAAM;AAAA,EACzB,kBAAkB,MAAM;AAAA,EAOzB,gBAAiD;AAAA,EACzD,iBAAiB,QAA6B;AAC7C,SAAK,gBAAgB;AAAA,EACtB;AAAA,EAEA,MAAM,QAAQ,cAA2D;AACxE,QAAI,KAAK,eAAe;AACvB,YAAM,gBAAgB,KAAK;AAC3B,WAAK,gBAAgB;AAErB,aAAO;AAAA,IACR;AAEA,WAAO,KAAK,wBAAwB,EAAE,WAAW,MAAM;AAAA,EACxD;AAAA,EAKA,MAAM,OAAU,QAAyG;AACxH,QAAI,KAAK,qBAAqB;AAC7B,aAAO,KAAK;AAAA,IACb;AACA,UAAM,gBAAwC,CAAC,GAAI,OAAO,WAAW,CAAC,CAAE;AACxE,QAAI,OAAO,gBAAgB,OAAO,OAAO,iBAAiB,YAAY,OAAO,OAAO,iBAAiB,WAAW;AAC/G,oBAAc,KAAK,OAAO,YAAY;AAAA,IACvC;AAEA,WAAO,EAAE,QAAQ,MAAM,cAAc,CAAC,GAAG,IAAI,EAAE,iBAAiB,MAAM,CAAC,EAAE;AAAA,EAC1E;AAAA,EACA,MAAM,KAAK,SAAiB,QAAgC;AAC3D,UAAM,KAAK,OAAO,EAAE,MAAM,SAAS,MAAM,SAAS,OAAO,CAAC;AAAA,EAC3D;AAAA,EAEA,MAAM,KAAK,SAAiB,QAAgC;AAC3D,UAAM,KAAK,OAAO,EAAE,MAAM,SAAS,SAAS,SAAS,OAAO,CAAC;AAAA,EAC9D;AAAA,EAEA,MAAM,MAAM,SAAiB,QAAgC;AAC5D,UAAM,KAAK,OAAO,EAAE,MAAM,SAAS,OAAO,SAAS,OAAO,CAAC;AAAA,EAC5D;AAAA,EACA,MAAM,QAA+B;AAAE;AAAE,aAAO,EAAE,WAAW,MAAM,QAAQ,CAAC,EAAE;AAAA,IAAG;AAAA,EAAE;AAAA,EACnF,MAAM,QAAuB;AAAA,EAAE;AAChC;",
  "names": []
}
