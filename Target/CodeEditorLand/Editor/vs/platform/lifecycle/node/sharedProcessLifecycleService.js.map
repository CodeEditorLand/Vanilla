{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/lifecycle/node/sharedProcessLifecycleService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, type Event } from \"../../../base/common/event.js\";\nimport { Disposable } from \"../../../base/common/lifecycle.js\";\nimport { createDecorator } from \"../../instantiation/common/instantiation.js\";\nimport { ILogService } from \"../../log/common/log.js\";\n\nexport const ISharedProcessLifecycleService =\n\tcreateDecorator<ISharedProcessLifecycleService>(\n\t\t\"sharedProcessLifecycleService\",\n\t);\n\nexport interface ISharedProcessLifecycleService {\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * An event for when the application will shutdown\n\t */\n\treadonly onWillShutdown: Event<void>;\n}\n\nexport class SharedProcessLifecycleService\n\textends Disposable\n\timplements ISharedProcessLifecycleService\n{\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onWillShutdown = this._register(new Emitter<void>());\n\treadonly onWillShutdown = this._onWillShutdown.event;\n\n\tconstructor(@ILogService private readonly logService: ILogService) {\n\t\tsuper();\n\t}\n\n\tfireOnWillShutdown(): void {\n\t\tthis.logService.trace(\"Lifecycle#onWillShutdown.fire()\");\n\n\t\tthis._onWillShutdown.fire();\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,eAA2B;AACpC,SAAS,kBAAkB;AAC3B,SAAS,uBAAuB;AAChC,SAAS,mBAAmB;AAErB,MAAM,iCACZ;AAAA,EACC;AACD;AAWM,IAAM,gCAAN,cACE,WAET;AAAA,EAMC,YAA0C,YAAyB;AAClE,UAAM;AADmC;AAAA,EAE1C;AAAA,EAnCD,OA2BA;AAAA;AAAA;AAAA,EAGkB,kBAAkB,KAAK,UAAU,IAAI,QAAc,CAAC;AAAA,EAC5D,iBAAiB,KAAK,gBAAgB;AAAA,EAM/C,qBAA2B;AAC1B,SAAK,WAAW,MAAM,iCAAiC;AAEvD,SAAK,gBAAgB,KAAK;AAAA,EAC3B;AACD;AAlBa,gCAAN;AAAA,EASO;AAAA,GATD;",
  "names": []
}
