{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/lifecycle/node/sharedProcessLifecycleService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { ILogService } from '../../log/common/log.js';\n\nexport const ISharedProcessLifecycleService = createDecorator<ISharedProcessLifecycleService>('sharedProcessLifecycleService');\n\nexport interface ISharedProcessLifecycleService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * An event for when the application will shutdown\n\t */\n\treadonly onWillShutdown: Event<void>;\n}\n\nexport class SharedProcessLifecycleService extends Disposable implements ISharedProcessLifecycleService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onWillShutdown = this._register(new Emitter<void>());\n\treadonly onWillShutdown = this._onWillShutdown.event;\n\n\tconstructor(\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t}\n\n\tfireOnWillShutdown(): void {\n\t\tthis.logService.trace('Lifecycle#onWillShutdown.fire()');\n\n\t\tthis._onWillShutdown.fire();\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,SAAS,aAAa;AAC/B,SAAS,kBAAkB;AAC3B,SAAS,uBAAuB;AAChC,SAAS,mBAAmB;AAErB,MAAM,iCAAiC,gBAAgD,+BAA+B;AAYtH,IAAM,gCAAN,cAA4C,WAAqD;AAAA,EAOvG,YAC+B,YAC7B;AACD,UAAM;AAFwB;AAAA,EAG/B;AAAA,EAjCD,OAsBwG;AAAA;AAAA;AAAA,EAItF,kBAAkB,KAAK,UAAU,IAAI,QAAc,CAAC;AAAA,EAC5D,iBAAiB,KAAK,gBAAgB;AAAA,EAQ/C,qBAA2B;AAC1B,SAAK,WAAW,MAAM,iCAAiC;AAEvD,SAAK,gBAAgB,KAAK;AAAA,EAC3B;AACD;AAlBa,gCAAN;AAAA,EAQJ;AAAA,GARU;",
  "names": []
}
