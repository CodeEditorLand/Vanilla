{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/lifecycle/common/lifecycle.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Promises, isThenable } from \"../../../base/common/async.js\";\n\n// Shared veto handling across main and renderer\nexport function handleVetos(\n\tvetos: (boolean | Promise<boolean>)[],\n\tonError: (error: Error) => void,\n): Promise<boolean /* veto */> {\n\tif (vetos.length === 0) {\n\t\treturn Promise.resolve(false);\n\t}\n\n\tconst promises: Promise<void>[] = [];\n\tlet lazyValue = false;\n\n\tfor (const valueOrPromise of vetos) {\n\t\t// veto, done\n\t\tif (valueOrPromise === true) {\n\t\t\treturn Promise.resolve(true);\n\t\t}\n\n\t\tif (isThenable(valueOrPromise)) {\n\t\t\tpromises.push(\n\t\t\t\tvalueOrPromise.then(\n\t\t\t\t\t(value) => {\n\t\t\t\t\t\tif (value) {\n\t\t\t\t\t\t\tlazyValue = true; // veto, done\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t(err) => {\n\t\t\t\t\t\tonError(err); // error, treated like a veto, done\n\t\t\t\t\t\tlazyValue = true;\n\t\t\t\t\t},\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t}\n\n\treturn Promises.settled(promises).then(() => lazyValue);\n}\n"],
  "mappings": ";;AAKA,SAAS,UAAU,kBAAkB;AAG9B,SAAS,YACf,OACA,SAC8B;AAC9B,MAAI,MAAM,WAAW,GAAG;AACvB,WAAO,QAAQ,QAAQ,KAAK;AAAA,EAC7B;AAEA,QAAM,WAA4B,CAAC;AACnC,MAAI,YAAY;AAEhB,aAAW,kBAAkB,OAAO;AAEnC,QAAI,mBAAmB,MAAM;AAC5B,aAAO,QAAQ,QAAQ,IAAI;AAAA,IAC5B;AAEA,QAAI,WAAW,cAAc,GAAG;AAC/B,eAAS;AAAA,QACR,eAAe;AAAA,UACd,CAAC,UAAU;AACV,gBAAI,OAAO;AACV,0BAAY;AAAA,YACb;AAAA,UACD;AAAA,UACA,CAAC,QAAQ;AACR,oBAAQ,GAAG;AACX,wBAAY;AAAA,UACb;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAEA,SAAO,SAAS,QAAQ,QAAQ,EAAE,KAAK,MAAM,SAAS;AACvD;AAnCgB;",
  "names": []
}
