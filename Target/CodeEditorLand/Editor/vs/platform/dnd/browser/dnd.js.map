{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/dnd/browser/dnd.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DataTransfers } from \"../../../base/browser/dnd.js\";\nimport type { DragMouseEvent } from \"../../../base/browser/mouseEvent.js\";\nimport { mainWindow } from \"../../../base/browser/window.js\";\nimport { coalesce } from \"../../../base/common/arrays.js\";\nimport { DeferredPromise } from \"../../../base/common/async.js\";\nimport { VSBuffer } from \"../../../base/common/buffer.js\";\nimport { ResourceMap } from \"../../../base/common/map.js\";\nimport { parse } from \"../../../base/common/marshalling.js\";\nimport { Schemas } from \"../../../base/common/network.js\";\nimport { isWeb } from \"../../../base/common/platform.js\";\nimport { URI } from \"../../../base/common/uri.js\";\nimport { localize } from \"../../../nls.js\";\nimport { IDialogService } from \"../../dialogs/common/dialogs.js\";\nimport type { IBaseTextResourceEditorInput } from \"../../editor/common/editor.js\";\nimport { HTMLFileSystemProvider } from \"../../files/browser/htmlFileSystemProvider.js\";\nimport { WebFileSystemAccess } from \"../../files/browser/webFileSystemAccess.js\";\nimport { ByteSize, IFileService } from \"../../files/common/files.js\";\nimport {\n\tIInstantiationService,\n\ttype ServicesAccessor,\n} from \"../../instantiation/common/instantiation.js\";\nimport { extractSelection } from \"../../opener/common/opener.js\";\nimport { Registry } from \"../../registry/common/platform.js\";\n\nexport interface FileAdditionalNativeProperties {\n\t/**\n\t * The real path to the file on the users filesystem. Only available on electron.\n\t */\n\treadonly path?: string;\n}\n\n//#region Editor / Resources DND\n\nexport const CodeDataTransfers = {\n\tEDITORS: \"CodeEditors\",\n\tFILES: \"CodeFiles\",\n};\n\nexport interface IDraggedResourceEditorInput\n\textends IBaseTextResourceEditorInput {\n\tresource: URI | undefined;\n\n\t/**\n\t * A hint that the source of the dragged editor input\n\t * might not be the application but some external tool.\n\t */\n\tisExternal?: boolean;\n\n\t/**\n\t * Whether we probe for the dropped editor to be a workspace\n\t * (i.e. code-workspace file or even a folder), allowing to\n\t * open it as workspace instead of opening as editor.\n\t */\n\tallowWorkspaceOpen?: boolean;\n}\n\nexport function extractEditorsDropData(\n\te: DragEvent,\n): Array<IDraggedResourceEditorInput> {\n\tconst editors: IDraggedResourceEditorInput[] = [];\n\tif (e.dataTransfer && e.dataTransfer.types.length > 0) {\n\t\t// Data Transfer: Code Editors\n\t\tconst rawEditorsData = e.dataTransfer.getData(\n\t\t\tCodeDataTransfers.EDITORS,\n\t\t);\n\t\tif (rawEditorsData) {\n\t\t\ttry {\n\t\t\t\teditors.push(...parse(rawEditorsData));\n\t\t\t} catch (error) {\n\t\t\t\t// Invalid transfer\n\t\t\t}\n\t\t}\n\n\t\t// Data Transfer: Resources\n\t\telse {\n\t\t\ttry {\n\t\t\t\tconst rawResourcesData = e.dataTransfer.getData(\n\t\t\t\t\tDataTransfers.RESOURCES,\n\t\t\t\t);\n\t\t\t\teditors.push(\n\t\t\t\t\t...createDraggedEditorInputFromRawResourcesData(\n\t\t\t\t\t\trawResourcesData,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t} catch (error) {\n\t\t\t\t// Invalid transfer\n\t\t\t}\n\t\t}\n\n\t\t// Check for native file transfer\n\t\tif (e.dataTransfer?.files) {\n\t\t\tfor (let i = 0; i < e.dataTransfer.files.length; i++) {\n\t\t\t\tconst file = e.dataTransfer.files[i];\n\t\t\t\tif (\n\t\t\t\t\tfile &&\n\t\t\t\t\t(file as FileAdditionalNativeProperties)\n\t\t\t\t\t\t.path /* Electron only */\n\t\t\t\t) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\teditors.push({\n\t\t\t\t\t\t\tresource: URI.file(\n\t\t\t\t\t\t\t\t(file as FileAdditionalNativeProperties).path!,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tisExternal: true,\n\t\t\t\t\t\t\tallowWorkspaceOpen: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t// Invalid URI\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Check for CodeFiles transfer\n\t\tconst rawCodeFiles = e.dataTransfer.getData(CodeDataTransfers.FILES);\n\t\tif (rawCodeFiles) {\n\t\t\ttry {\n\t\t\t\tconst codeFiles: string[] = JSON.parse(rawCodeFiles);\n\t\t\t\tfor (const codeFile of codeFiles) {\n\t\t\t\t\teditors.push({\n\t\t\t\t\t\tresource: URI.file(codeFile),\n\t\t\t\t\t\tisExternal: true,\n\t\t\t\t\t\tallowWorkspaceOpen: true,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\t// Invalid transfer\n\t\t\t}\n\t\t}\n\n\t\t// Workbench contributions\n\t\tconst contributions = Registry.as<IDragAndDropContributionRegistry>(\n\t\t\tExtensions.DragAndDropContribution,\n\t\t).getAll();\n\t\tfor (const contribution of contributions) {\n\t\t\tconst data = e.dataTransfer.getData(contribution.dataFormatKey);\n\t\t\tif (data) {\n\t\t\t\ttry {\n\t\t\t\t\teditors.push(...contribution.getEditorInputs(data));\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// Invalid transfer\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Prevent duplicates: it is possible that we end up with the same\n\t// dragged editor multiple times because multiple data transfers\n\t// are being used (https://github.com/microsoft/vscode/issues/128925)\n\n\tconst coalescedEditors: IDraggedResourceEditorInput[] = [];\n\tconst seen = new ResourceMap<boolean>();\n\tfor (const editor of editors) {\n\t\tif (!editor.resource) {\n\t\t\tcoalescedEditors.push(editor);\n\t\t} else if (!seen.has(editor.resource)) {\n\t\t\tcoalescedEditors.push(editor);\n\t\t\tseen.set(editor.resource, true);\n\t\t}\n\t}\n\n\treturn coalescedEditors;\n}\n\nexport async function extractEditorsAndFilesDropData(\n\taccessor: ServicesAccessor,\n\te: DragEvent,\n): Promise<Array<IDraggedResourceEditorInput>> {\n\tconst editors = extractEditorsDropData(e);\n\n\t// Web: Check for file transfer\n\tif (e.dataTransfer && isWeb && containsDragType(e, DataTransfers.FILES)) {\n\t\tconst files = e.dataTransfer.items;\n\t\tif (files) {\n\t\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\t\tconst filesData = await instantiationService.invokeFunction(\n\t\t\t\t(accessor) => extractFilesDropData(accessor, e),\n\t\t\t);\n\t\t\tfor (const fileData of filesData) {\n\t\t\t\teditors.push({\n\t\t\t\t\tresource: fileData.resource,\n\t\t\t\t\tcontents: fileData.contents?.toString(),\n\t\t\t\t\tisExternal: true,\n\t\t\t\t\tallowWorkspaceOpen: fileData.isDirectory,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\treturn editors;\n}\n\nexport function createDraggedEditorInputFromRawResourcesData(\n\trawResourcesData: string | undefined,\n): IDraggedResourceEditorInput[] {\n\tconst editors: IDraggedResourceEditorInput[] = [];\n\n\tif (rawResourcesData) {\n\t\tconst resourcesRaw: string[] = JSON.parse(rawResourcesData);\n\t\tfor (const resourceRaw of resourcesRaw) {\n\t\t\tif (resourceRaw.indexOf(\":\") > 0) {\n\t\t\t\t// mitigate https://github.com/microsoft/vscode/issues/124946\n\t\t\t\tconst { selection, uri } = extractSelection(\n\t\t\t\t\tURI.parse(resourceRaw),\n\t\t\t\t);\n\t\t\t\teditors.push({ resource: uri, options: { selection } });\n\t\t\t}\n\t\t}\n\t}\n\n\treturn editors;\n}\n\ninterface IFileTransferData {\n\tresource: URI;\n\tisDirectory?: boolean;\n\tcontents?: VSBuffer;\n}\n\nasync function extractFilesDropData(\n\taccessor: ServicesAccessor,\n\tevent: DragEvent,\n): Promise<IFileTransferData[]> {\n\t// Try to extract via `FileSystemHandle`\n\tif (WebFileSystemAccess.supported(mainWindow)) {\n\t\tconst items = event.dataTransfer?.items;\n\t\tif (items) {\n\t\t\treturn extractFileTransferData(accessor, items);\n\t\t}\n\t}\n\n\t// Try to extract via `FileList`\n\tconst files = event.dataTransfer?.files;\n\tif (!files) {\n\t\treturn [];\n\t}\n\n\treturn extractFileListData(accessor, files);\n}\n\nasync function extractFileTransferData(\n\taccessor: ServicesAccessor,\n\titems: DataTransferItemList,\n): Promise<IFileTransferData[]> {\n\tconst fileSystemProvider = accessor\n\t\t.get(IFileService)\n\t\t.getProvider(Schemas.file);\n\t// eslint-disable-next-line no-restricted-syntax\n\tif (!(fileSystemProvider instanceof HTMLFileSystemProvider)) {\n\t\treturn []; // only supported when running in web\n\t}\n\n\tconst results: DeferredPromise<IFileTransferData | undefined>[] = [];\n\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst file = items[i];\n\t\tif (file) {\n\t\t\tconst result = new DeferredPromise<IFileTransferData | undefined>();\n\t\t\tresults.push(result);\n\n\t\t\t(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst handle = await file.getAsFileSystemHandle();\n\t\t\t\t\tif (!handle) {\n\t\t\t\t\t\tresult.complete(undefined);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (WebFileSystemAccess.isFileSystemFileHandle(handle)) {\n\t\t\t\t\t\tresult.complete({\n\t\t\t\t\t\t\tresource:\n\t\t\t\t\t\t\t\tawait fileSystemProvider.registerFileHandle(\n\t\t\t\t\t\t\t\t\thandle,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tisDirectory: false,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tWebFileSystemAccess.isFileSystemDirectoryHandle(handle)\n\t\t\t\t\t) {\n\t\t\t\t\t\tresult.complete({\n\t\t\t\t\t\t\tresource:\n\t\t\t\t\t\t\t\tawait fileSystemProvider.registerDirectoryHandle(\n\t\t\t\t\t\t\t\t\thandle,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tisDirectory: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.complete(undefined);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tresult.complete(undefined);\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\t}\n\n\treturn coalesce(await Promise.all(results.map((result) => result.p)));\n}\n\nexport async function extractFileListData(\n\taccessor: ServicesAccessor,\n\tfiles: FileList,\n): Promise<IFileTransferData[]> {\n\tconst dialogService = accessor.get(IDialogService);\n\n\tconst results: DeferredPromise<IFileTransferData | undefined>[] = [];\n\n\tfor (let i = 0; i < files.length; i++) {\n\t\tconst file = files.item(i);\n\t\tif (file) {\n\t\t\t// Skip for very large files because this operation is unbuffered\n\t\t\tif (file.size > 100 * ByteSize.MB) {\n\t\t\t\tdialogService.warn(\n\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\"fileTooLarge\",\n\t\t\t\t\t\t\"File is too large to open as untitled editor. Please upload it first into the file explorer and then try again.\",\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst result = new DeferredPromise<IFileTransferData | undefined>();\n\t\t\tresults.push(result);\n\n\t\t\tconst reader = new FileReader();\n\n\t\t\treader.onerror = () => result.complete(undefined);\n\t\t\treader.onabort = () => result.complete(undefined);\n\n\t\t\treader.onload = async (event) => {\n\t\t\t\tconst name = file.name;\n\t\t\t\tconst loadResult = event.target?.result ?? undefined;\n\t\t\t\tif (\n\t\t\t\t\ttypeof name !== \"string\" ||\n\t\t\t\t\ttypeof loadResult === \"undefined\"\n\t\t\t\t) {\n\t\t\t\t\tresult.complete(undefined);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresult.complete({\n\t\t\t\t\tresource: URI.from({\n\t\t\t\t\t\tscheme: Schemas.untitled,\n\t\t\t\t\t\tpath: name,\n\t\t\t\t\t}),\n\t\t\t\t\tcontents:\n\t\t\t\t\t\ttypeof loadResult === \"string\"\n\t\t\t\t\t\t\t? VSBuffer.fromString(loadResult)\n\t\t\t\t\t\t\t: VSBuffer.wrap(new Uint8Array(loadResult)),\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t// Start reading\n\t\t\treader.readAsArrayBuffer(file);\n\t\t}\n\t}\n\n\treturn coalesce(await Promise.all(results.map((result) => result.p)));\n}\n\n//#endregion\n\nexport function containsDragType(\n\tevent: DragEvent,\n\t...dragTypesToFind: string[]\n): boolean {\n\tif (!event.dataTransfer) {\n\t\treturn false;\n\t}\n\n\tconst dragTypes = event.dataTransfer.types;\n\tconst lowercaseDragTypes: string[] = [];\n\tfor (let i = 0; i < dragTypes.length; i++) {\n\t\tlowercaseDragTypes.push(dragTypes[i].toLowerCase()); // somehow the types are lowercase\n\t}\n\n\tfor (const dragType of dragTypesToFind) {\n\t\tif (lowercaseDragTypes.indexOf(dragType.toLowerCase()) >= 0) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n//#region DND contributions\n\nexport interface IResourceStat {\n\tresource: URI;\n\tisDirectory?: boolean;\n}\n\nexport interface IDragAndDropContributionRegistry {\n\t/**\n\t * Registers a drag and drop contribution.\n\t */\n\tregister(contribution: IDragAndDropContribution): void;\n\n\t/**\n\t * Returns all registered drag and drop contributions.\n\t */\n\tgetAll(): IterableIterator<IDragAndDropContribution>;\n}\n\ninterface IDragAndDropContribution {\n\treadonly dataFormatKey: string;\n\tgetEditorInputs(data: string): IDraggedResourceEditorInput[];\n\tsetData(\n\t\tresources: IResourceStat[],\n\t\tevent: DragMouseEvent | DragEvent,\n\t): void;\n}\n\nclass DragAndDropContributionRegistry\n\timplements IDragAndDropContributionRegistry\n{\n\tprivate readonly _contributions = new Map<\n\t\tstring,\n\t\tIDragAndDropContribution\n\t>();\n\n\tregister(contribution: IDragAndDropContribution): void {\n\t\tif (this._contributions.has(contribution.dataFormatKey)) {\n\t\t\tthrow new Error(\n\t\t\t\t`A drag and drop contributiont with key '${contribution.dataFormatKey}' was already registered.`,\n\t\t\t);\n\t\t}\n\t\tthis._contributions.set(contribution.dataFormatKey, contribution);\n\t}\n\n\tgetAll(): IterableIterator<IDragAndDropContribution> {\n\t\treturn this._contributions.values();\n\t}\n}\n\nexport const Extensions = {\n\tDragAndDropContribution: \"workbench.contributions.dragAndDrop\",\n};\n\nRegistry.add(\n\tExtensions.DragAndDropContribution,\n\tnew DragAndDropContributionRegistry(),\n);\n\n//#endregion\n\n//#region DND Utilities\n\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer<T> {\n\tprivate static readonly INSTANCE = new LocalSelectionTransfer();\n\n\tprivate data?: T[];\n\tprivate proto?: T;\n\n\tprivate constructor() {\n\t\t// protect against external instantiation\n\t}\n\n\tstatic getInstance<T>(): LocalSelectionTransfer<T> {\n\t\treturn LocalSelectionTransfer.INSTANCE as LocalSelectionTransfer<T>;\n\t}\n\n\thasData(proto: T): boolean {\n\t\treturn proto && proto === this.proto;\n\t}\n\n\tclearData(proto: T): void {\n\t\tif (this.hasData(proto)) {\n\t\t\tthis.proto = undefined;\n\t\t\tthis.data = undefined;\n\t\t}\n\t}\n\n\tgetData(proto: T): T[] | undefined {\n\t\tif (this.hasData(proto)) {\n\t\t\treturn this.data;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tsetData(data: T[], proto: T): void {\n\t\tif (proto) {\n\t\t\tthis.data = data;\n\t\t\tthis.proto = proto;\n\t\t}\n\t}\n}\n\n//#endregion\n"],
  "mappings": "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",
  "names": ["accessor"]
}
