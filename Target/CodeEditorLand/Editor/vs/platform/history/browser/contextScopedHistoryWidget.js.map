{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/history/browser/contextScopedHistoryWidget.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isActiveElement } from \"../../../base/browser/dom.js\";\nimport type { IHistoryNavigationWidget } from \"../../../base/browser/history.js\";\nimport type { IContextViewProvider } from \"../../../base/browser/ui/contextview/contextview.js\";\nimport {\n\tFindInput,\n\ttype IFindInputOptions,\n} from \"../../../base/browser/ui/findinput/findInput.js\";\nimport {\n\ttype IReplaceInputOptions,\n\tReplaceInput,\n} from \"../../../base/browser/ui/findinput/replaceInput.js\";\nimport {\n\tHistoryInputBox,\n\ttype IHistoryInputOptions,\n} from \"../../../base/browser/ui/inputbox/inputBox.js\";\nimport { KeyCode, KeyMod } from \"../../../base/common/keyCodes.js\";\nimport {\n\tDisposableStore,\n\ttype IDisposable,\n\ttoDisposable,\n} from \"../../../base/common/lifecycle.js\";\nimport { localize } from \"../../../nls.js\";\nimport {\n\tContextKeyExpr,\n\ttype IContextKey,\n\tIContextKeyService,\n\tRawContextKey,\n} from \"../../contextkey/common/contextkey.js\";\nimport {\n\tKeybindingWeight,\n\tKeybindingsRegistry,\n} from \"../../keybinding/common/keybindingsRegistry.js\";\n\nexport const historyNavigationVisible = new RawContextKey<boolean>(\n\t\"suggestWidgetVisible\",\n\tfalse,\n\tlocalize(\"suggestWidgetVisible\", \"Whether suggestion are visible\"),\n);\n\nconst HistoryNavigationWidgetFocusContext = \"historyNavigationWidgetFocus\";\nconst HistoryNavigationForwardsEnablementContext =\n\t\"historyNavigationForwardsEnabled\";\nconst HistoryNavigationBackwardsEnablementContext =\n\t\"historyNavigationBackwardsEnabled\";\n\nexport interface IHistoryNavigationContext extends IDisposable {\n\thistoryNavigationForwardsEnablement: IContextKey<boolean>;\n\thistoryNavigationBackwardsEnablement: IContextKey<boolean>;\n}\n\nlet lastFocusedWidget: IHistoryNavigationWidget | undefined;\nconst widgets: IHistoryNavigationWidget[] = [];\n\nexport function registerAndCreateHistoryNavigationContext(\n\tscopedContextKeyService: IContextKeyService,\n\twidget: IHistoryNavigationWidget,\n): IHistoryNavigationContext {\n\tif (widgets.includes(widget)) {\n\t\tthrow new Error(\"Cannot register the same widget multiple times\");\n\t}\n\n\twidgets.push(widget);\n\tconst disposableStore = new DisposableStore();\n\tconst historyNavigationWidgetFocus = new RawContextKey<boolean>(\n\t\tHistoryNavigationWidgetFocusContext,\n\t\tfalse,\n\t).bindTo(scopedContextKeyService);\n\tconst historyNavigationForwardsEnablement = new RawContextKey<boolean>(\n\t\tHistoryNavigationForwardsEnablementContext,\n\t\ttrue,\n\t).bindTo(scopedContextKeyService);\n\tconst historyNavigationBackwardsEnablement = new RawContextKey<boolean>(\n\t\tHistoryNavigationBackwardsEnablementContext,\n\t\ttrue,\n\t).bindTo(scopedContextKeyService);\n\n\tconst onDidFocus = () => {\n\t\thistoryNavigationWidgetFocus.set(true);\n\t\tlastFocusedWidget = widget;\n\t};\n\n\tconst onDidBlur = () => {\n\t\thistoryNavigationWidgetFocus.set(false);\n\t\tif (lastFocusedWidget === widget) {\n\t\t\tlastFocusedWidget = undefined;\n\t\t}\n\t};\n\n\t// Check for currently being focused\n\tif (isActiveElement(widget.element)) {\n\t\tonDidFocus();\n\t}\n\n\tdisposableStore.add(widget.onDidFocus(() => onDidFocus()));\n\tdisposableStore.add(widget.onDidBlur(() => onDidBlur()));\n\tdisposableStore.add(\n\t\ttoDisposable(() => {\n\t\t\twidgets.splice(widgets.indexOf(widget), 1);\n\t\t\tonDidBlur();\n\t\t}),\n\t);\n\n\treturn {\n\t\thistoryNavigationForwardsEnablement,\n\t\thistoryNavigationBackwardsEnablement,\n\t\tdispose() {\n\t\t\tdisposableStore.dispose();\n\t\t},\n\t};\n}\n\nexport class ContextScopedHistoryInputBox extends HistoryInputBox {\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\tcontextViewProvider: IContextViewProvider | undefined,\n\t\toptions: IHistoryInputOptions,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t) {\n\t\tsuper(container, contextViewProvider, options);\n\t\tconst scopedContextKeyService = this._register(\n\t\t\tcontextKeyService.createScoped(this.element),\n\t\t);\n\t\tthis._register(\n\t\t\tregisterAndCreateHistoryNavigationContext(\n\t\t\t\tscopedContextKeyService,\n\t\t\t\tthis,\n\t\t\t),\n\t\t);\n\t}\n}\n\nexport class ContextScopedFindInput extends FindInput {\n\tconstructor(\n\t\tcontainer: HTMLElement | null,\n\t\tcontextViewProvider: IContextViewProvider,\n\t\toptions: IFindInputOptions,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t) {\n\t\tsuper(container, contextViewProvider, options);\n\t\tconst scopedContextKeyService = this._register(\n\t\t\tcontextKeyService.createScoped(this.inputBox.element),\n\t\t);\n\t\tthis._register(\n\t\t\tregisterAndCreateHistoryNavigationContext(\n\t\t\t\tscopedContextKeyService,\n\t\t\t\tthis.inputBox,\n\t\t\t),\n\t\t);\n\t}\n}\n\nexport class ContextScopedReplaceInput extends ReplaceInput {\n\tconstructor(\n\t\tcontainer: HTMLElement | null,\n\t\tcontextViewProvider: IContextViewProvider | undefined,\n\t\toptions: IReplaceInputOptions,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\tshowReplaceOptions = false,\n\t) {\n\t\tsuper(container, contextViewProvider, showReplaceOptions, options);\n\t\tconst scopedContextKeyService = this._register(\n\t\t\tcontextKeyService.createScoped(this.inputBox.element),\n\t\t);\n\t\tthis._register(\n\t\t\tregisterAndCreateHistoryNavigationContext(\n\t\t\t\tscopedContextKeyService,\n\t\t\t\tthis.inputBox,\n\t\t\t),\n\t\t);\n\t}\n}\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: \"history.showPrevious\",\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(\n\t\tContextKeyExpr.has(HistoryNavigationWidgetFocusContext),\n\t\tContextKeyExpr.equals(\n\t\t\tHistoryNavigationBackwardsEnablementContext,\n\t\t\ttrue,\n\t\t),\n\t\tContextKeyExpr.not(\"isComposing\"),\n\t\thistoryNavigationVisible.isEqualTo(false),\n\t),\n\tprimary: KeyCode.UpArrow,\n\tsecondary: [KeyMod.Alt | KeyCode.UpArrow],\n\thandler: (accessor) => {\n\t\tlastFocusedWidget?.showPreviousValue();\n\t},\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: \"history.showNext\",\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(\n\t\tContextKeyExpr.has(HistoryNavigationWidgetFocusContext),\n\t\tContextKeyExpr.equals(HistoryNavigationForwardsEnablementContext, true),\n\t\tContextKeyExpr.not(\"isComposing\"),\n\t\thistoryNavigationVisible.isEqualTo(false),\n\t),\n\tprimary: KeyCode.DownArrow,\n\tsecondary: [KeyMod.Alt | KeyCode.DownArrow],\n\thandler: (accessor) => {\n\t\tlastFocusedWidget?.showNextValue();\n\t},\n});\n"],
  "mappings": "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",
  "names": []
}
