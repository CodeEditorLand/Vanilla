{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/history/browser/contextScopedHistoryWidget.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IHistoryNavigationWidget } from '../../../base/browser/history.js';\nimport { IContextViewProvider } from '../../../base/browser/ui/contextview/contextview.js';\nimport { FindInput, IFindInputOptions } from '../../../base/browser/ui/findinput/findInput.js';\nimport { IReplaceInputOptions, ReplaceInput } from '../../../base/browser/ui/findinput/replaceInput.js';\nimport { HistoryInputBox, IHistoryInputOptions } from '../../../base/browser/ui/inputbox/inputBox.js';\nimport { KeyCode, KeyMod } from '../../../base/common/keyCodes.js';\nimport { ContextKeyExpr, IContextKey, IContextKeyService, RawContextKey } from '../../contextkey/common/contextkey.js';\nimport { KeybindingsRegistry, KeybindingWeight } from '../../keybinding/common/keybindingsRegistry.js';\nimport { localize } from '../../../nls.js';\nimport { DisposableStore, IDisposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { isActiveElement } from '../../../base/browser/dom.js';\n\nexport const historyNavigationVisible = new RawContextKey<boolean>('suggestWidgetVisible', false, localize('suggestWidgetVisible', \"Whether suggestion are visible\"));\n\nconst HistoryNavigationWidgetFocusContext = 'historyNavigationWidgetFocus';\nconst HistoryNavigationForwardsEnablementContext = 'historyNavigationForwardsEnabled';\nconst HistoryNavigationBackwardsEnablementContext = 'historyNavigationBackwardsEnabled';\n\nexport interface IHistoryNavigationContext extends IDisposable {\n\thistoryNavigationForwardsEnablement: IContextKey<boolean>;\n\thistoryNavigationBackwardsEnablement: IContextKey<boolean>;\n}\n\nlet lastFocusedWidget: IHistoryNavigationWidget | undefined = undefined;\nconst widgets: IHistoryNavigationWidget[] = [];\n\nexport function registerAndCreateHistoryNavigationContext(scopedContextKeyService: IContextKeyService, widget: IHistoryNavigationWidget): IHistoryNavigationContext {\n\tif (widgets.includes(widget)) {\n\t\tthrow new Error('Cannot register the same widget multiple times');\n\t}\n\n\twidgets.push(widget);\n\tconst disposableStore = new DisposableStore();\n\tconst historyNavigationWidgetFocus = new RawContextKey<boolean>(HistoryNavigationWidgetFocusContext, false).bindTo(scopedContextKeyService);\n\tconst historyNavigationForwardsEnablement = new RawContextKey<boolean>(HistoryNavigationForwardsEnablementContext, true).bindTo(scopedContextKeyService);\n\tconst historyNavigationBackwardsEnablement = new RawContextKey<boolean>(HistoryNavigationBackwardsEnablementContext, true).bindTo(scopedContextKeyService);\n\n\tconst onDidFocus = () => {\n\t\thistoryNavigationWidgetFocus.set(true);\n\t\tlastFocusedWidget = widget;\n\t};\n\n\tconst onDidBlur = () => {\n\t\thistoryNavigationWidgetFocus.set(false);\n\t\tif (lastFocusedWidget === widget) {\n\t\t\tlastFocusedWidget = undefined;\n\t\t}\n\t};\n\n\t// Check for currently being focused\n\tif (isActiveElement(widget.element)) {\n\t\tonDidFocus();\n\t}\n\n\tdisposableStore.add(widget.onDidFocus(() => onDidFocus()));\n\tdisposableStore.add(widget.onDidBlur(() => onDidBlur()));\n\tdisposableStore.add(toDisposable(() => {\n\t\twidgets.splice(widgets.indexOf(widget), 1);\n\t\tonDidBlur();\n\t}));\n\n\treturn {\n\t\thistoryNavigationForwardsEnablement,\n\t\thistoryNavigationBackwardsEnablement,\n\t\tdispose() {\n\t\t\tdisposableStore.dispose();\n\t\t}\n\t};\n}\n\nexport class ContextScopedHistoryInputBox extends HistoryInputBox {\n\n\tconstructor(container: HTMLElement, contextViewProvider: IContextViewProvider | undefined, options: IHistoryInputOptions,\n\t\t@IContextKeyService contextKeyService: IContextKeyService\n\t) {\n\t\tsuper(container, contextViewProvider, options);\n\t\tconst scopedContextKeyService = this._register(contextKeyService.createScoped(this.element));\n\t\tthis._register(registerAndCreateHistoryNavigationContext(scopedContextKeyService, this));\n\t}\n\n}\n\nexport class ContextScopedFindInput extends FindInput {\n\n\tconstructor(container: HTMLElement | null, contextViewProvider: IContextViewProvider, options: IFindInputOptions,\n\t\t@IContextKeyService contextKeyService: IContextKeyService\n\t) {\n\t\tsuper(container, contextViewProvider, options);\n\t\tconst scopedContextKeyService = this._register(contextKeyService.createScoped(this.inputBox.element));\n\t\tthis._register(registerAndCreateHistoryNavigationContext(scopedContextKeyService, this.inputBox));\n\t}\n}\n\nexport class ContextScopedReplaceInput extends ReplaceInput {\n\n\tconstructor(container: HTMLElement | null, contextViewProvider: IContextViewProvider | undefined, options: IReplaceInputOptions,\n\t\t@IContextKeyService contextKeyService: IContextKeyService, showReplaceOptions: boolean = false\n\t) {\n\t\tsuper(container, contextViewProvider, showReplaceOptions, options);\n\t\tconst scopedContextKeyService = this._register(contextKeyService.createScoped(this.inputBox.element));\n\t\tthis._register(registerAndCreateHistoryNavigationContext(scopedContextKeyService, this.inputBox));\n\t}\n\n}\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'history.showPrevious',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(\n\t\tContextKeyExpr.has(HistoryNavigationWidgetFocusContext),\n\t\tContextKeyExpr.equals(HistoryNavigationBackwardsEnablementContext, true),\n\t\tContextKeyExpr.not('isComposing'),\n\t\thistoryNavigationVisible.isEqualTo(false),\n\t),\n\tprimary: KeyCode.UpArrow,\n\tsecondary: [KeyMod.Alt | KeyCode.UpArrow],\n\thandler: (accessor) => {\n\t\tlastFocusedWidget?.showPreviousValue();\n\t}\n});\n\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n\tid: 'history.showNext',\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(\n\t\tContextKeyExpr.has(HistoryNavigationWidgetFocusContext),\n\t\tContextKeyExpr.equals(HistoryNavigationForwardsEnablementContext, true),\n\t\tContextKeyExpr.not('isComposing'),\n\t\thistoryNavigationVisible.isEqualTo(false),\n\t),\n\tprimary: KeyCode.DownArrow,\n\tsecondary: [KeyMod.Alt | KeyCode.DownArrow],\n\thandler: (accessor) => {\n\t\tlastFocusedWidget?.showNextValue();\n\t}\n});\n"],
  "mappings": "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",
  "names": []
}
