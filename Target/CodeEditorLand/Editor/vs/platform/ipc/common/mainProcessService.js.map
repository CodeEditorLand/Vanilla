{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/ipc/common/mainProcessService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type {\n\tIChannel,\n\tIPCServer,\n\tIServerChannel,\n\tStaticRouter,\n} from \"../../../base/parts/ipc/common/ipc.js\";\nimport { createDecorator } from \"../../instantiation/common/instantiation.js\";\nimport type { IRemoteService } from \"./services.js\";\n\nexport const IMainProcessService =\n\tcreateDecorator<IMainProcessService>(\"mainProcessService\");\n\nexport interface IMainProcessService extends IRemoteService {}\n\n/**\n * An implementation of `IMainProcessService` that leverages `IPCServer`.\n */\nexport class MainProcessService implements IMainProcessService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\tprivate server: IPCServer,\n\t\tprivate router: StaticRouter,\n\t) {}\n\n\tgetChannel(channelName: string): IChannel {\n\t\treturn this.server.getChannel(channelName, this.router);\n\t}\n\n\tregisterChannel(\n\t\tchannelName: string,\n\t\tchannel: IServerChannel<string>,\n\t): void {\n\t\tthis.server.registerChannel(channelName, channel);\n\t}\n}\n"],
  "mappings": ";;AAWA,SAAS,uBAAuB;AAGzB,MAAM,sBACZ,gBAAqC,oBAAoB;AAOnD,MAAM,mBAAkD;AAAA,EAG9D,YACS,QACA,QACP;AAFO;AACA;AAAA,EACN;AAAA,EA5BJ,OAsB+D;AAAA;AAAA;AAAA,EAQ9D,WAAW,aAA+B;AACzC,WAAO,KAAK,OAAO,WAAW,aAAa,KAAK,MAAM;AAAA,EACvD;AAAA,EAEA,gBACC,aACA,SACO;AACP,SAAK,OAAO,gBAAgB,aAAa,OAAO;AAAA,EACjD;AACD;",
  "names": []
}
