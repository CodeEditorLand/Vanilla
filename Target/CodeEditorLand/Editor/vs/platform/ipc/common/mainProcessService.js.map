{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/ipc/common/mainProcessService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IPCServer, IServerChannel, StaticRouter } from '../../../base/parts/ipc/common/ipc.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { IRemoteService } from './services.js';\n\nexport const IMainProcessService = createDecorator<IMainProcessService>('mainProcessService');\n\nexport interface IMainProcessService extends IRemoteService { }\n\n/**\n * An implementation of `IMainProcessService` that leverages `IPCServer`.\n */\nexport class MainProcessService implements IMainProcessService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\tprivate server: IPCServer,\n\t\tprivate router: StaticRouter\n\t) { }\n\n\tgetChannel(channelName: string): IChannel {\n\t\treturn this.server.getChannel(channelName, this.router);\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<string>): void {\n\t\tthis.server.registerChannel(channelName, channel);\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,UAAU,WAAW,gBAAgB,oBAAoB;AAClE,SAAS,uBAAuB;AAChC,SAAS,sBAAsB;AAExB,MAAM,sBAAsB,gBAAqC,oBAAoB;AAOrF,MAAM,mBAAkD;AAAA,EAI9D,YACS,QACA,QACP;AAFO;AACA;AAAA,EACL;AAAA,EAvBL,OAgB+D;AAAA;AAAA;AAAA,EAS9D,WAAW,aAA+B;AACzC,WAAO,KAAK,OAAO,WAAW,aAAa,KAAK,MAAM;AAAA,EACvD;AAAA,EAEA,gBAAgB,aAAqB,SAAuC;AAC3E,SAAK,OAAO,gBAAgB,aAAa,OAAO;AAAA,EACjD;AACD;",
  "names": []
}
