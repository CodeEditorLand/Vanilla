{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/url/common/urlIpc.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { Event } from '../../../base/common/event.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Client, IChannel, IClientRouter, IConnectionHub, IServerChannel } from '../../../base/parts/ipc/common/ipc.js';\nimport { ILogService } from '../../log/common/log.js';\nimport { IOpenURLOptions, IURLHandler } from './url.js';\n\nexport class URLHandlerChannel implements IServerChannel {\n\n\tconstructor(private handler: IURLHandler) { }\n\n\tlisten<T>(_: unknown, event: string): Event<T> {\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'handleURL': return this.handler.handleURL(URI.revive(arg[0]), arg[1]);\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n}\n\nexport class URLHandlerChannelClient implements IURLHandler {\n\n\tconstructor(private channel: IChannel) { }\n\n\thandleURL(uri: URI, options?: IOpenURLOptions): Promise<boolean> {\n\t\treturn this.channel.call('handleURL', [uri.toJSON(), options]);\n\t}\n}\n\nexport class URLHandlerRouter implements IClientRouter<string> {\n\n\tconstructor(\n\t\tprivate next: IClientRouter<string>,\n\t\tprivate readonly logService: ILogService\n\t) { }\n\n\tasync routeCall(hub: IConnectionHub<string>, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<Client<string>> {\n\t\tif (command !== 'handleURL') {\n\t\t\tthrow new Error(`Call not found: ${command}`);\n\t\t}\n\n\t\tif (Array.isArray(arg) && arg.length > 0) {\n\t\t\tconst uri = URI.revive(arg[0]);\n\n\t\t\tthis.logService.trace('URLHandlerRouter#routeCall() with URI argument', uri.toString(true));\n\n\t\t\tif (uri.query) {\n\t\t\t\tconst match = /\\bwindowId=(\\d+)/.exec(uri.query);\n\n\t\t\t\tif (match) {\n\t\t\t\t\tconst windowId = match[1];\n\n\t\t\t\t\tthis.logService.trace(`URLHandlerRouter#routeCall(): found windowId query parameter with value \"${windowId}\"`, uri.toString(true));\n\n\t\t\t\t\tconst regex = new RegExp(`window:${windowId}`);\n\t\t\t\t\tconst connection = hub.connections.find(c => {\n\t\t\t\t\t\tthis.logService.trace('URLHandlerRouter#routeCall(): testing connection', c.ctx);\n\n\t\t\t\t\t\treturn regex.test(c.ctx);\n\t\t\t\t\t});\n\t\t\t\t\tif (connection) {\n\t\t\t\t\t\tthis.logService.trace('URLHandlerRouter#routeCall(): found a connection to route', uri.toString(true));\n\n\t\t\t\t\t\treturn connection;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.logService.trace('URLHandlerRouter#routeCall(): did not find a connection to route', uri.toString(true));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.logService.trace('URLHandlerRouter#routeCall(): did not find windowId query parameter', uri.toString(true));\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthis.logService.trace('URLHandlerRouter#routeCall() without URI argument');\n\t\t}\n\n\t\treturn this.next.routeCall(hub, command, arg, cancellationToken);\n\t}\n\n\trouteEvent(_: IConnectionHub<string>, event: string): Promise<Client<string>> {\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,yBAAyB;AAClC,SAAS,aAAa;AACtB,SAAS,WAAW;AACpB,SAAS,QAAQ,UAAU,eAAe,gBAAgB,sBAAsB;AAChF,SAAS,mBAAmB;AAC5B,SAAS,iBAAiB,mBAAmB;AAEtC,MAAM,kBAA4C;AAAA,EAExD,YAAoB,SAAsB;AAAtB;AAAA,EAAwB;AAAA,EAd7C,OAYyD;AAAA;AAAA;AAAA,EAIxD,OAAU,GAAY,OAAyB;AAC9C,UAAM,IAAI,MAAM,oBAAoB,KAAK,EAAE;AAAA,EAC5C;AAAA,EAEA,KAAK,GAAY,SAAiB,KAAyB;AAC1D,YAAQ,SAAS;AAAA,MAChB,KAAK;AAAa,eAAO,KAAK,QAAQ,UAAU,IAAI,OAAO,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;AAAA,IAC3E;AAEA,UAAM,IAAI,MAAM,mBAAmB,OAAO,EAAE;AAAA,EAC7C;AACD;AAEO,MAAM,wBAA+C;AAAA,EAE3D,YAAoB,SAAmB;AAAnB;AAAA,EAAqB;AAAA,EA/B1C,OA6B4D;AAAA;AAAA;AAAA,EAI3D,UAAU,KAAU,SAA6C;AAChE,WAAO,KAAK,QAAQ,KAAK,aAAa,CAAC,IAAI,OAAO,GAAG,OAAO,CAAC;AAAA,EAC9D;AACD;AAEO,MAAM,iBAAkD;AAAA,EAE9D,YACS,MACS,YAChB;AAFO;AACS;AAAA,EACd;AAAA,EA3CL,OAsC+D;AAAA;AAAA;AAAA,EAO9D,MAAM,UAAU,KAA6B,SAAiB,KAAW,mBAAgE;AACxI,QAAI,YAAY,aAAa;AAC5B,YAAM,IAAI,MAAM,mBAAmB,OAAO,EAAE;AAAA,IAC7C;AAEA,QAAI,MAAM,QAAQ,GAAG,KAAK,IAAI,SAAS,GAAG;AACzC,YAAM,MAAM,IAAI,OAAO,IAAI,CAAC,CAAC;AAE7B,WAAK,WAAW,MAAM,kDAAkD,IAAI,SAAS,IAAI,CAAC;AAE1F,UAAI,IAAI,OAAO;AACd,cAAM,QAAQ,mBAAmB,KAAK,IAAI,KAAK;AAE/C,YAAI,OAAO;AACV,gBAAM,WAAW,MAAM,CAAC;AAExB,eAAK,WAAW,MAAM,4EAA4E,QAAQ,KAAK,IAAI,SAAS,IAAI,CAAC;AAEjI,gBAAM,QAAQ,IAAI,OAAO,UAAU,QAAQ,EAAE;AAC7C,gBAAM,aAAa,IAAI,YAAY,KAAK,OAAK;AAC5C,iBAAK,WAAW,MAAM,oDAAoD,EAAE,GAAG;AAE/E,mBAAO,MAAM,KAAK,EAAE,GAAG;AAAA,UACxB,CAAC;AACD,cAAI,YAAY;AACf,iBAAK,WAAW,MAAM,6DAA6D,IAAI,SAAS,IAAI,CAAC;AAErG,mBAAO;AAAA,UACR,OAAO;AACN,iBAAK,WAAW,MAAM,oEAAoE,IAAI,SAAS,IAAI,CAAC;AAAA,UAC7G;AAAA,QACD,OAAO;AACN,eAAK,WAAW,MAAM,uEAAuE,IAAI,SAAS,IAAI,CAAC;AAAA,QAChH;AAAA,MACD;AAAA,IACD,OAAO;AACN,WAAK,WAAW,MAAM,mDAAmD;AAAA,IAC1E;AAEA,WAAO,KAAK,KAAK,UAAU,KAAK,SAAS,KAAK,iBAAiB;AAAA,EAChE;AAAA,EAEA,WAAW,GAA2B,OAAwC;AAC7E,UAAM,IAAI,MAAM,oBAAoB,KAAK,EAAE;AAAA,EAC5C;AACD;",
  "names": []
}
