{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/url/common/urlService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { first } from \"../../../base/common/async.js\";\nimport {\n\tDisposable,\n\ttype IDisposable,\n\ttoDisposable,\n} from \"../../../base/common/lifecycle.js\";\nimport { URI, type UriComponents } from \"../../../base/common/uri.js\";\nimport { IProductService } from \"../../product/common/productService.js\";\nimport type { IOpenURLOptions, IURLHandler, IURLService } from \"./url.js\";\n\nexport abstract class AbstractURLService\n\textends Disposable\n\timplements IURLService\n{\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate handlers = new Set<IURLHandler>();\n\n\tabstract create(options?: Partial<UriComponents>): URI;\n\n\topen(uri: URI, options?: IOpenURLOptions): Promise<boolean> {\n\t\tconst handlers = [...this.handlers.values()];\n\t\treturn first(\n\t\t\thandlers.map((h) => () => h.handleURL(uri, options)),\n\t\t\tundefined,\n\t\t\tfalse,\n\t\t).then((val) => val || false);\n\t}\n\n\tregisterHandler(handler: IURLHandler): IDisposable {\n\t\tthis.handlers.add(handler);\n\t\treturn toDisposable(() => this.handlers.delete(handler));\n\t}\n}\n\nexport class NativeURLService extends AbstractURLService {\n\tconstructor(\n\t\t@IProductService protected readonly productService: IProductService,\n\t) {\n\t\tsuper();\n\t}\n\n\tcreate(options?: Partial<UriComponents>): URI {\n\t\tlet { authority, path, query, fragment } = options\n\t\t\t? options\n\t\t\t: {\n\t\t\t\t\tauthority: undefined,\n\t\t\t\t\tpath: undefined,\n\t\t\t\t\tquery: undefined,\n\t\t\t\t\tfragment: undefined,\n\t\t\t\t};\n\n\t\tif (authority && path && path.indexOf(\"/\") !== 0) {\n\t\t\tpath = `/${path}`; // URI validation requires a path if there is an authority\n\t\t}\n\n\t\treturn URI.from({\n\t\t\tscheme: this.productService.urlProtocol,\n\t\t\tauthority,\n\t\t\tpath,\n\t\t\tquery,\n\t\t\tfragment,\n\t\t});\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,aAAa;AACtB;AAAA,EACC;AAAA,EAEA;AAAA,OACM;AACP,SAAS,WAA+B;AACxC,SAAS,uBAAuB;AAGzB,MAAe,2BACb,WAET;AAAA,EAlBA,OAkBA;AAAA;AAAA;AAAA,EAGS,WAAW,oBAAI,IAAiB;AAAA,EAIxC,KAAK,KAAU,SAA6C;AAC3D,UAAM,WAAW,CAAC,GAAG,KAAK,SAAS,OAAO,CAAC;AAC3C,WAAO;AAAA,MACN,SAAS,IAAI,CAAC,MAAM,MAAM,EAAE,UAAU,KAAK,OAAO,CAAC;AAAA,MACnD;AAAA,MACA;AAAA,IACD,EAAE,KAAK,CAAC,QAAQ,OAAO,KAAK;AAAA,EAC7B;AAAA,EAEA,gBAAgB,SAAmC;AAClD,SAAK,SAAS,IAAI,OAAO;AACzB,WAAO,aAAa,MAAM,KAAK,SAAS,OAAO,OAAO,CAAC;AAAA,EACxD;AACD;AAEO,IAAM,mBAAN,cAA+B,mBAAmB;AAAA,EACxD,YACqC,gBACnC;AACD,UAAM;AAF8B;AAAA,EAGrC;AAAA,EA7CD,OAwCyD;AAAA;AAAA;AAAA,EAOxD,OAAO,SAAuC;AAC7C,QAAI,EAAE,WAAW,MAAM,OAAO,SAAS,IAAI,UACxC,UACA;AAAA,MACA,WAAW;AAAA,MACX,MAAM;AAAA,MACN,OAAO;AAAA,MACP,UAAU;AAAA,IACX;AAEF,QAAI,aAAa,QAAQ,KAAK,QAAQ,GAAG,MAAM,GAAG;AACjD,aAAO,IAAI,IAAI;AAAA,IAChB;AAEA,WAAO,IAAI,KAAK;AAAA,MACf,QAAQ,KAAK,eAAe;AAAA,MAC5B;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD,CAAC;AAAA,EACF;AACD;AA7Ba,mBAAN;AAAA,EAEJ;AAAA,GAFU;",
  "names": []
}
