{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/url/electron-main/url.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from '../../../base/common/uri.js';\nimport { IWindowOpenable } from '../../window/common/window.js';\n\nexport interface IProtocolUrl {\n\n\t/**\n\t * The parsed URI from the raw URL.\n\t */\n\turi: URI;\n\n\t/**\n\t * The raw URL that was passed in.\n\t */\n\toriginalUrl: string;\n}\n\n/**\n * A special set of protocol URLs that are to be handled\n * right on startup. Handling is complex depending on the\n * form of the protocol URL:\n *\n * On the high level, there are 2 types of protocol URLs:\n * - those that need to be handled within a window because\n *   they need to be forwarded to an extension for example\n * - those that can be handled directly as window to open\n *\n * The former can be of the form:\n * ```\n * <protocol>://<extension.id>/<path>\n * ```\n * and the latter are of the form\n *\n * ```\n * <protocol>:/<file | vscode-remote>/<path>\n * ```\n *\n * On top of that, protocol URLs can indicate to be handled in\n * a new empty window or not via the `windowId` parameter. If that\n * parameter is set to `_blank`, the URL should be handled not in\n * the existing window but a new window. This is only supported\n * for protocol URLs that need to be handled within a window.\n *\n * This interface splits the protocol links up into the 2 groups:\n * - `urls` are the protocol URLs that need to be handled in a window\n * - `openables` are windows that should open for the protocol URLs\n *\n * The decision is made as follows:\n * - a URL with authority `file` or `vscode-remote` becomes an `IWindowOpenable`\n *   and will not be included in the `urls` array because it was fully handled\n * - a URL with any other authority will be added to the `urls` array\n */\nexport interface IInitialProtocolUrls {\n\n\t/**\n\t * Initial protocol URLs to handle that are not\n\t * already converted to `IWindowOpenable` window\n\t * instances.\n\t *\n\t * These URLs will be handled by the URL service\n\t * in the active or a new empty window (if `windowId`\n\t * is set to `_blank`).\n\t */\n\treadonly urls: IProtocolUrl[];\n\n\t/**\n\t * Initial protocol URLs that result in direct\n\t * windows to open.\n\t */\n\treadonly openables: IWindowOpenable[];\n}\n"],
  "mappings": "AAKA,SAAS,WAAW;AACpB,SAAS,uBAAuB;",
  "names": []
}
