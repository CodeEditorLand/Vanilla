{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/cssDev/node/cssDevService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { spawn } from 'child_process';\nimport { relative } from 'path';\nimport { isESM } from '../../../base/common/amd.js';\nimport { FileAccess } from '../../../base/common/network.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\nimport { IEnvironmentService } from '../../environment/common/environment.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { ILogService } from '../../log/common/log.js';\n\nexport const ICSSDevelopmentService = createDecorator<ICSSDevelopmentService>('ICSSDevelopmentService');\n\nexport interface ICSSDevelopmentService {\n\t_serviceBrand: undefined;\n\tisEnabled: boolean;\n\tgetCssModules(): Promise<string[]>;\n}\n\nexport class CSSDevelopmentService implements ICSSDevelopmentService {\n\n\tdeclare _serviceBrand: undefined;\n\n\tprivate _cssModules?: Promise<string[]>;\n\n\tconstructor(\n\t\t@IEnvironmentService private readonly envService: IEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) { }\n\n\tget isEnabled(): boolean {\n\t\treturn !this.envService.isBuilt && isESM;\n\t}\n\n\tgetCssModules(): Promise<string[]> {\n\t\tthis._cssModules ??= this.computeCssModules();\n\t\treturn this._cssModules;\n\t}\n\n\tprivate async computeCssModules(): Promise<string[]> {\n\t\tif (!this.isEnabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst rg = await import('@vscode/ripgrep');\n\t\treturn await new Promise<string[]>((resolve) => {\n\n\t\t\tconst sw = StopWatch.create();\n\n\t\t\tconst chunks: string[][] = [];\n\t\t\tconst decoder = new TextDecoder();\n\t\t\tconst basePath = FileAccess.asFileUri('').fsPath;\n\t\t\tconst process = spawn(rg.rgPath, ['-g', '**/*.css', '--files', '--no-ignore', basePath], {});\n\n\t\t\tprocess.stdout.on('data', data => {\n\t\t\t\tconst chunk = decoder.decode(data, { stream: true });\n\t\t\t\tchunks.push(chunk.split('\\n').filter(Boolean));\n\t\t\t});\n\t\t\tprocess.on('error', err => {\n\t\t\t\tthis.logService.error('[CSS_DEV] FAILED to compute CSS data', err);\n\t\t\t\tresolve([]);\n\t\t\t});\n\t\t\tprocess.on('close', () => {\n\t\t\t\tconst result = chunks.flat().map(path => relative(basePath, path).replace(/\\\\/g, '/')).filter(Boolean).sort();\n\t\t\t\tresolve(result);\n\t\t\t\tthis.logService.info(`[CSS_DEV] DONE, ${result.length} css modules (${Math.round(sw.elapsed())}ms)`);\n\t\t\t});\n\t\t});\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,aAAa;AACtB,SAAS,gBAAgB;AACzB,SAAS,aAAa;AACtB,SAAS,kBAAkB;AAC3B,SAAS,iBAAiB;AAC1B,SAAS,2BAA2B;AACpC,SAAS,uBAAuB;AAChC,SAAS,mBAAmB;AAErB,MAAM,yBAAyB,gBAAwC,wBAAwB;AAQ/F,IAAM,wBAAN,MAA8D;AAAA,EAMpE,YACuC,YACR,YAC7B;AAFqC;AACR;AAAA,EAC3B;AAAA,EA/BL,OAsBqE;AAAA;AAAA;AAAA,EAI5D;AAAA,EAOR,IAAI,YAAqB;AACxB,WAAO,CAAC,KAAK,WAAW,WAAW;AAAA,EACpC;AAAA,EAEA,gBAAmC;AAClC,SAAK,gBAAgB,KAAK,kBAAkB;AAC5C,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,MAAc,oBAAuC;AACpD,QAAI,CAAC,KAAK,WAAW;AACpB,aAAO,CAAC;AAAA,IACT;AAEA,UAAM,KAAK,MAAM,OAAO,iBAAiB;AACzC,WAAO,MAAM,IAAI,QAAkB,CAAC,YAAY;AAE/C,YAAM,KAAK,UAAU,OAAO;AAE5B,YAAM,SAAqB,CAAC;AAC5B,YAAM,UAAU,IAAI,YAAY;AAChC,YAAM,WAAW,WAAW,UAAU,EAAE,EAAE;AAC1C,YAAM,UAAU,MAAM,GAAG,QAAQ,CAAC,MAAM,YAAY,WAAW,eAAe,QAAQ,GAAG,CAAC,CAAC;AAE3F,cAAQ,OAAO,GAAG,QAAQ,UAAQ;AACjC,cAAM,QAAQ,QAAQ,OAAO,MAAM,EAAE,QAAQ,KAAK,CAAC;AACnD,eAAO,KAAK,MAAM,MAAM,IAAI,EAAE,OAAO,OAAO,CAAC;AAAA,MAC9C,CAAC;AACD,cAAQ,GAAG,SAAS,SAAO;AAC1B,aAAK,WAAW,MAAM,wCAAwC,GAAG;AACjE,gBAAQ,CAAC,CAAC;AAAA,MACX,CAAC;AACD,cAAQ,GAAG,SAAS,MAAM;AACzB,cAAM,SAAS,OAAO,KAAK,EAAE,IAAI,UAAQ,SAAS,UAAU,IAAI,EAAE,QAAQ,OAAO,GAAG,CAAC,EAAE,OAAO,OAAO,EAAE,KAAK;AAC5G,gBAAQ,MAAM;AACd,aAAK,WAAW,KAAK,mBAAmB,OAAO,MAAM,iBAAiB,KAAK,MAAM,GAAG,QAAQ,CAAC,CAAC,KAAK;AAAA,MACpG,CAAC;AAAA,IACF,CAAC;AAAA,EACF;AACD;AAlDa,wBAAN;AAAA,EAOJ;AAAA,EACA;AAAA,GARU;",
  "names": []
}
