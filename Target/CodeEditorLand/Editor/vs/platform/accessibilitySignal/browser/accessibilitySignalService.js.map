{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/accessibilitySignal/browser/accessibilitySignalService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CachedFunction } from \"../../../base/common/cache.js\";\nimport { getStructuralKey } from \"../../../base/common/equals.js\";\nimport type {\n\tEvent,\n\tIValueWithChangeEvent,\n} from \"../../../base/common/event.js\";\nimport {\n\tDisposable,\n\ttype IDisposable,\n\ttoDisposable,\n} from \"../../../base/common/lifecycle.js\";\nimport { FileAccess } from \"../../../base/common/network.js\";\nimport {\n\tValueWithChangeEventFromObservable,\n\tderived,\n\tobservableFromEvent,\n} from \"../../../base/common/observable.js\";\nimport { localize } from \"../../../nls.js\";\nimport { IAccessibilityService } from \"../../accessibility/common/accessibility.js\";\nimport { IConfigurationService } from \"../../configuration/common/configuration.js\";\nimport { createDecorator } from \"../../instantiation/common/instantiation.js\";\nimport { observableConfigValue } from \"../../observable/common/platformObservableUtils.js\";\nimport { ITelemetryService } from \"../../telemetry/common/telemetry.js\";\n\nexport const IAccessibilitySignalService =\n\tcreateDecorator<IAccessibilitySignalService>(\"accessibilitySignalService\");\n\nexport interface IAccessibilitySignalService {\n\treadonly _serviceBrand: undefined;\n\tplaySignal(\n\t\tsignal: AccessibilitySignal,\n\t\toptions?: IAccessbilitySignalOptions,\n\t): Promise<void>;\n\tplaySignals(\n\t\tsignals: (\n\t\t\t| AccessibilitySignal\n\t\t\t| { signal: AccessibilitySignal; source: string }\n\t\t)[],\n\t): Promise<void>;\n\tplaySignalLoop(\n\t\tsignal: AccessibilitySignal,\n\t\tmilliseconds: number,\n\t): IDisposable;\n\n\tgetEnabledState(\n\t\tsignal: AccessibilitySignal,\n\t\tuserGesture: boolean,\n\t\tmodality?: AccessibilityModality | undefined,\n\t): IValueWithChangeEvent<boolean>;\n\tgetDelayMs(\n\t\tsignal: AccessibilitySignal,\n\t\tmodality: AccessibilityModality,\n\t\tmode: \"line\" | \"positional\",\n\t): number;\n\t/**\n\t * Avoid this method and prefer `.playSignal`!\n\t * Only use it when you want to play the sound regardless of enablement, e.g. in the settings quick pick.\n\t */\n\tplaySound(\n\t\tsignal: Sound,\n\t\tallowManyInParallel: boolean,\n\t\ttoken: typeof AcknowledgeDocCommentsToken,\n\t): Promise<void>;\n\n\t/** @deprecated Use getEnabledState(...).onChange */\n\tisSoundEnabled(signal: AccessibilitySignal): boolean;\n\t/** @deprecated Use getEnabledState(...).value */\n\tisAnnouncementEnabled(signal: AccessibilitySignal): boolean;\n\t/** @deprecated Use getEnabledState(...).onChange */\n\tonSoundEnabledChanged(signal: AccessibilitySignal): Event<void>;\n}\n\n/** Make sure you understand the doc comments of the method you want to call when using this token! */\nexport const AcknowledgeDocCommentsToken = Symbol(\n\t\"AcknowledgeDocCommentsToken\",\n);\n\nexport type AccessibilityModality = \"sound\" | \"announcement\";\n\nexport interface IAccessbilitySignalOptions {\n\tallowManyInParallel?: boolean;\n\n\tmodality?: AccessibilityModality;\n\n\t/**\n\t * The source that triggered the signal (e.g. \"diffEditor.cursorPositionChanged\").\n\t */\n\tsource?: string;\n\n\t/**\n\t * For actions like save or format, depending on the\n\t * configured value, we will only\n\t * play the sound if the user triggered the action.\n\t */\n\tuserGesture?: boolean;\n}\n\nexport class AccessibilitySignalService\n\textends Disposable\n\timplements IAccessibilitySignalService\n{\n\treadonly _serviceBrand: undefined;\n\tprivate readonly sounds: Map<string, HTMLAudioElement> = new Map();\n\tprivate readonly screenReaderAttached = observableFromEvent(\n\t\tthis,\n\t\tthis.accessibilityService.onDidChangeScreenReaderOptimized,\n\t\t() =>\n\t\t\t/** @description accessibilityService.onDidChangeScreenReaderOptimized */ this.accessibilityService.isScreenReaderOptimized(),\n\t);\n\tprivate readonly sentTelemetry = new Set<string>();\n\n\tconstructor(\n\t\t@IConfigurationService\n\t\tprivate readonly configurationService: IConfigurationService,\n\t\t@IAccessibilityService\n\t\tprivate readonly accessibilityService: IAccessibilityService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t) {\n\t\tsuper();\n\t}\n\n\tpublic getEnabledState(\n\t\tsignal: AccessibilitySignal,\n\t\tuserGesture: boolean,\n\t\tmodality?: AccessibilityModality | undefined,\n\t): IValueWithChangeEvent<boolean> {\n\t\treturn new ValueWithChangeEventFromObservable(\n\t\t\tthis._signalEnabledState.get({ signal, userGesture, modality }),\n\t\t);\n\t}\n\n\tpublic async playSignal(\n\t\tsignal: AccessibilitySignal,\n\t\toptions: IAccessbilitySignalOptions = {},\n\t): Promise<void> {\n\t\tconst shouldPlayAnnouncement =\n\t\t\toptions.modality === \"announcement\" ||\n\t\t\toptions.modality === undefined;\n\t\tconst announcementMessage = signal.announcementMessage;\n\t\tif (\n\t\t\tshouldPlayAnnouncement &&\n\t\t\tthis.isAnnouncementEnabled(signal, options.userGesture) &&\n\t\t\tannouncementMessage\n\t\t) {\n\t\t\tthis.accessibilityService.status(announcementMessage);\n\t\t}\n\n\t\tconst shouldPlaySound =\n\t\t\toptions.modality === \"sound\" || options.modality === undefined;\n\t\tif (\n\t\t\tshouldPlaySound &&\n\t\t\tthis.isSoundEnabled(signal, options.userGesture)\n\t\t) {\n\t\t\tthis.sendSignalTelemetry(signal, options.source);\n\t\t\tawait this.playSound(\n\t\t\t\tsignal.sound.getSound(),\n\t\t\t\toptions.allowManyInParallel,\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic async playSignals(\n\t\tsignals: (\n\t\t\t| AccessibilitySignal\n\t\t\t| { signal: AccessibilitySignal; source: string }\n\t\t)[],\n\t): Promise<void> {\n\t\tfor (const signal of signals) {\n\t\t\tthis.sendSignalTelemetry(\n\t\t\t\t\"signal\" in signal ? signal.signal : signal,\n\t\t\t\t\"source\" in signal ? signal.source : undefined,\n\t\t\t);\n\t\t}\n\t\tconst signalArray = signals.map((s) => (\"signal\" in s ? s.signal : s));\n\t\tconst announcements = signalArray\n\t\t\t.filter((signal) => this.isAnnouncementEnabled(signal))\n\t\t\t.map((s) => s.announcementMessage);\n\t\tif (announcements.length) {\n\t\t\tthis.accessibilityService.status(announcements.join(\", \"));\n\t\t}\n\n\t\t// Some sounds are reused. Don't play the same sound twice.\n\t\tconst sounds = new Set(\n\t\t\tsignalArray\n\t\t\t\t.filter((signal) => this.isSoundEnabled(signal))\n\t\t\t\t.map((signal) => signal.sound.getSound()),\n\t\t);\n\t\tawait Promise.all(\n\t\t\tArray.from(sounds).map((sound) => this.playSound(sound, true)),\n\t\t);\n\t}\n\n\tprivate sendSignalTelemetry(\n\t\tsignal: AccessibilitySignal,\n\t\tsource: string | undefined,\n\t): void {\n\t\tconst isScreenReaderOptimized =\n\t\t\tthis.accessibilityService.isScreenReaderOptimized();\n\t\tconst key =\n\t\t\tsignal.name +\n\t\t\t(source ? `::${source}` : \"\") +\n\t\t\t(isScreenReaderOptimized ? \"{screenReaderOptimized}\" : \"\");\n\t\t// Only send once per user session\n\t\tif (this.sentTelemetry.has(key) || this.getVolumeInPercent() === 0) {\n\t\t\treturn;\n\t\t}\n\t\tthis.sentTelemetry.add(key);\n\n\t\tthis.telemetryService.publicLog2<\n\t\t\t{\n\t\t\t\tsignal: string;\n\t\t\t\tsource: string;\n\t\t\t\tisScreenReaderOptimized: boolean;\n\t\t\t},\n\t\t\t{\n\t\t\t\towner: \"hediet\";\n\n\t\t\t\tsignal: {\n\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\t\tcomment: \"The signal that was played.\";\n\t\t\t\t};\n\t\t\t\tsource: {\n\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\t\tcomment: 'The source that triggered the signal (e.g. \"diffEditorNavigation\").';\n\t\t\t\t};\n\t\t\t\tisScreenReaderOptimized: {\n\t\t\t\t\tclassification: \"SystemMetaData\";\n\t\t\t\t\tpurpose: \"FeatureInsight\";\n\t\t\t\t\tcomment: \"Whether the user is using a screen reader\";\n\t\t\t\t};\n\n\t\t\t\tcomment: \"This data is collected to understand how signals are used and if more signals should be added.\";\n\t\t\t}\n\t\t>(\"signal.played\", {\n\t\t\tsignal: signal.name,\n\t\t\tsource: source ?? \"\",\n\t\t\tisScreenReaderOptimized,\n\t\t});\n\t}\n\n\tprivate getVolumeInPercent(): number {\n\t\tconst volume = this.configurationService.getValue<number>(\n\t\t\t\"accessibility.signalOptions.volume\",\n\t\t);\n\t\tif (typeof volume !== \"number\") {\n\t\t\treturn 50;\n\t\t}\n\n\t\treturn Math.max(Math.min(volume, 100), 0);\n\t}\n\n\tprivate readonly playingSounds = new Set<Sound>();\n\n\tpublic async playSound(\n\t\tsound: Sound,\n\t\tallowManyInParallel = false,\n\t): Promise<void> {\n\t\tif (!allowManyInParallel && this.playingSounds.has(sound)) {\n\t\t\treturn;\n\t\t}\n\t\tthis.playingSounds.add(sound);\n\t\tconst url = FileAccess.asBrowserUri(\n\t\t\t`vs/platform/accessibilitySignal/browser/media/${sound.fileName}`,\n\t\t).toString(true);\n\n\t\ttry {\n\t\t\tconst sound = this.sounds.get(url);\n\t\t\tif (sound) {\n\t\t\t\tsound.volume = this.getVolumeInPercent() / 100;\n\t\t\t\tsound.currentTime = 0;\n\t\t\t\tawait sound.play();\n\t\t\t} else {\n\t\t\t\tconst playedSound = await playAudio(\n\t\t\t\t\turl,\n\t\t\t\t\tthis.getVolumeInPercent() / 100,\n\t\t\t\t);\n\t\t\t\tthis.sounds.set(url, playedSound);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tif (\n\t\t\t\t!e.message.includes(\n\t\t\t\t\t\"play() can only be initiated by a user gesture\",\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// tracking this issue in #178642, no need to spam the console\n\t\t\t\tconsole.error(\"Error while playing sound\", e);\n\t\t\t}\n\t\t} finally {\n\t\t\tthis.playingSounds.delete(sound);\n\t\t}\n\t}\n\n\tpublic playSignalLoop(\n\t\tsignal: AccessibilitySignal,\n\t\tmilliseconds: number,\n\t): IDisposable {\n\t\tlet playing = true;\n\t\tconst playSound = () => {\n\t\t\tif (playing) {\n\t\t\t\tthis.playSignal(signal, { allowManyInParallel: true }).finally(\n\t\t\t\t\t() => {\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tif (playing) {\n\t\t\t\t\t\t\t\tplaySound();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, milliseconds);\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\t\tplaySound();\n\t\treturn toDisposable(() => (playing = false));\n\t}\n\n\tprivate readonly _signalConfigValue = new CachedFunction(\n\t\t(signal: AccessibilitySignal) =>\n\t\t\tobservableConfigValue<{\n\t\t\t\tsound: EnabledState;\n\t\t\t\tannouncement: EnabledState;\n\t\t\t}>(\n\t\t\t\tsignal.settingsKey,\n\t\t\t\t{ sound: \"off\", announcement: \"off\" },\n\t\t\t\tthis.configurationService,\n\t\t\t),\n\t);\n\n\tprivate readonly _signalEnabledState = new CachedFunction(\n\t\t{ getCacheKey: getStructuralKey },\n\t\t(arg: {\n\t\t\tsignal: AccessibilitySignal;\n\t\t\tuserGesture: boolean;\n\t\t\tmodality?: AccessibilityModality | undefined;\n\t\t}) => {\n\t\t\treturn derived((reader) => {\n\t\t\t\t/** @description sound enabled */\n\t\t\t\tconst setting = this._signalConfigValue\n\t\t\t\t\t.get(arg.signal)\n\t\t\t\t\t.read(reader);\n\n\t\t\t\tif (arg.modality === \"sound\" || arg.modality === undefined) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tcheckEnabledState(\n\t\t\t\t\t\t\tsetting.sound,\n\t\t\t\t\t\t\t() => this.screenReaderAttached.read(reader),\n\t\t\t\t\t\t\targ.userGesture,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\targ.modality === \"announcement\" ||\n\t\t\t\t\targ.modality === undefined\n\t\t\t\t) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tcheckEnabledState(\n\t\t\t\t\t\t\tsetting.announcement,\n\t\t\t\t\t\t\t() => this.screenReaderAttached.read(reader),\n\t\t\t\t\t\t\targ.userGesture,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}).recomputeInitiallyAndOnChange(this._store);\n\t\t},\n\t);\n\n\tpublic isAnnouncementEnabled(\n\t\tsignal: AccessibilitySignal,\n\t\tuserGesture?: boolean,\n\t): boolean {\n\t\tif (!signal.announcementMessage) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this._signalEnabledState\n\t\t\t.get({\n\t\t\t\tsignal,\n\t\t\t\tuserGesture: !!userGesture,\n\t\t\t\tmodality: \"announcement\",\n\t\t\t})\n\t\t\t.get();\n\t}\n\n\tpublic isSoundEnabled(\n\t\tsignal: AccessibilitySignal,\n\t\tuserGesture?: boolean,\n\t): boolean {\n\t\treturn this._signalEnabledState\n\t\t\t.get({ signal, userGesture: !!userGesture, modality: \"sound\" })\n\t\t\t.get();\n\t}\n\n\tpublic onSoundEnabledChanged(signal: AccessibilitySignal): Event<void> {\n\t\treturn this.getEnabledState(signal, false).onDidChange;\n\t}\n\n\tpublic getDelayMs(\n\t\tsignal: AccessibilitySignal,\n\t\tmodality: AccessibilityModality,\n\t\tmode: \"line\" | \"positional\",\n\t): number {\n\t\tif (\n\t\t\t!this.configurationService.getValue(\n\t\t\t\t\"accessibility.signalOptions.debouncePositionChanges\",\n\t\t\t)\n\t\t) {\n\t\t\treturn 0;\n\t\t}\n\t\tlet value: { sound: number; announcement: number };\n\t\tif (\n\t\t\tsignal.name === AccessibilitySignal.errorAtPosition.name &&\n\t\t\tmode === \"positional\"\n\t\t) {\n\t\t\tvalue = this.configurationService.getValue(\n\t\t\t\t\"accessibility.signalOptions.experimental.delays.errorAtPosition\",\n\t\t\t);\n\t\t} else if (\n\t\t\tsignal.name === AccessibilitySignal.warningAtPosition.name &&\n\t\t\tmode === \"positional\"\n\t\t) {\n\t\t\tvalue = this.configurationService.getValue(\n\t\t\t\t\"accessibility.signalOptions.experimental.delays.warningAtPosition\",\n\t\t\t);\n\t\t} else {\n\t\t\tvalue = this.configurationService.getValue(\n\t\t\t\t\"accessibility.signalOptions.experimental.delays.general\",\n\t\t\t);\n\t\t}\n\t\treturn modality === \"sound\" ? value.sound : value.announcement;\n\t}\n}\n\ntype EnabledState = \"on\" | \"off\" | \"auto\" | \"userGesture\" | \"always\" | \"never\";\nfunction checkEnabledState(\n\tstate: EnabledState,\n\tgetScreenReaderAttached: () => boolean,\n\tisTriggeredByUserGesture: boolean,\n): boolean {\n\treturn (\n\t\tstate === \"on\" ||\n\t\tstate === \"always\" ||\n\t\t(state === \"auto\" && getScreenReaderAttached()) ||\n\t\t(state === \"userGesture\" && isTriggeredByUserGesture)\n\t);\n}\n\n/**\n * Play the given audio url.\n * @volume value between 0 and 1\n */\nfunction playAudio(url: string, volume: number): Promise<HTMLAudioElement> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst audio = new Audio(url);\n\t\taudio.volume = volume;\n\t\taudio.addEventListener(\"ended\", () => {\n\t\t\tresolve(audio);\n\t\t});\n\t\taudio.addEventListener(\"error\", (e) => {\n\t\t\t// When the error event fires, ended might not be called\n\t\t\treject(e.error);\n\t\t});\n\t\taudio.play().catch((e) => {\n\t\t\t// When play fails, the error event is not fired.\n\t\t\treject(e);\n\t\t});\n\t});\n}\n\n/**\n * Corresponds to the audio files in ./media.\n */\nexport class Sound {\n\tprivate static register(options: { fileName: string }): Sound {\n\t\tconst sound = new Sound(options.fileName);\n\t\treturn sound;\n\t}\n\n\tpublic static readonly error = Sound.register({ fileName: \"error.mp3\" });\n\tpublic static readonly warning = Sound.register({\n\t\tfileName: \"warning.mp3\",\n\t});\n\tpublic static readonly success = Sound.register({\n\t\tfileName: \"success.mp3\",\n\t});\n\tpublic static readonly foldedArea = Sound.register({\n\t\tfileName: \"foldedAreas.mp3\",\n\t});\n\tpublic static readonly break = Sound.register({ fileName: \"break.mp3\" });\n\tpublic static readonly quickFixes = Sound.register({\n\t\tfileName: \"quickFixes.mp3\",\n\t});\n\tpublic static readonly taskCompleted = Sound.register({\n\t\tfileName: \"taskCompleted.mp3\",\n\t});\n\tpublic static readonly taskFailed = Sound.register({\n\t\tfileName: \"taskFailed.mp3\",\n\t});\n\tpublic static readonly terminalBell = Sound.register({\n\t\tfileName: \"terminalBell.mp3\",\n\t});\n\tpublic static readonly diffLineInserted = Sound.register({\n\t\tfileName: \"diffLineInserted.mp3\",\n\t});\n\tpublic static readonly diffLineDeleted = Sound.register({\n\t\tfileName: \"diffLineDeleted.mp3\",\n\t});\n\tpublic static readonly diffLineModified = Sound.register({\n\t\tfileName: \"diffLineModified.mp3\",\n\t});\n\tpublic static readonly chatRequestSent = Sound.register({\n\t\tfileName: \"chatRequestSent.mp3\",\n\t});\n\tpublic static readonly chatResponseReceived1 = Sound.register({\n\t\tfileName: \"chatResponseReceived1.mp3\",\n\t});\n\tpublic static readonly chatResponseReceived2 = Sound.register({\n\t\tfileName: \"chatResponseReceived2.mp3\",\n\t});\n\tpublic static readonly chatResponseReceived3 = Sound.register({\n\t\tfileName: \"chatResponseReceived3.mp3\",\n\t});\n\tpublic static readonly chatResponseReceived4 = Sound.register({\n\t\tfileName: \"chatResponseReceived4.mp3\",\n\t});\n\tpublic static readonly clear = Sound.register({ fileName: \"clear.mp3\" });\n\tpublic static readonly save = Sound.register({ fileName: \"save.mp3\" });\n\tpublic static readonly format = Sound.register({ fileName: \"format.mp3\" });\n\tpublic static readonly voiceRecordingStarted = Sound.register({\n\t\tfileName: \"voiceRecordingStarted.mp3\",\n\t});\n\tpublic static readonly voiceRecordingStopped = Sound.register({\n\t\tfileName: \"voiceRecordingStopped.mp3\",\n\t});\n\tpublic static readonly progress = Sound.register({\n\t\tfileName: \"progress.mp3\",\n\t});\n\n\tprivate constructor(public readonly fileName: string) {}\n}\n\nexport class SoundSource {\n\tconstructor(public readonly randomOneOf: Sound[]) {}\n\n\tpublic getSound(deterministic = false): Sound {\n\t\tif (deterministic || this.randomOneOf.length === 1) {\n\t\t\treturn this.randomOneOf[0];\n\t\t} else {\n\t\t\tconst index = Math.floor(Math.random() * this.randomOneOf.length);\n\t\t\treturn this.randomOneOf[index];\n\t\t}\n\t}\n}\n\nexport class AccessibilitySignal {\n\tprivate constructor(\n\t\tpublic readonly sound: SoundSource,\n\t\tpublic readonly name: string,\n\t\tpublic readonly legacySoundSettingsKey: string | undefined,\n\t\tpublic readonly settingsKey: string,\n\t\tpublic readonly legacyAnnouncementSettingsKey: string | undefined,\n\t\tpublic readonly announcementMessage: string | undefined,\n\t) {}\n\n\tprivate static _signals = new Set<AccessibilitySignal>();\n\tprivate static register(options: {\n\t\tname: string;\n\t\tsound:\n\t\t\t| Sound\n\t\t\t| {\n\t\t\t\t\t/**\n\t\t\t\t\t * Gaming and other apps often play a sound variant when the same event happens again\n\t\t\t\t\t * for an improved experience. This option enables playing a random sound.\n\t\t\t\t\t */\n\t\t\t\t\trandomOneOf: Sound[];\n\t\t\t  };\n\t\tlegacySoundSettingsKey?: string;\n\t\tsettingsKey: string;\n\t\tlegacyAnnouncementSettingsKey?: string;\n\t\tannouncementMessage?: string;\n\t\tdelaySettingsKey?: string;\n\t}): AccessibilitySignal {\n\t\tconst soundSource = new SoundSource(\n\t\t\t\"randomOneOf\" in options.sound\n\t\t\t\t? options.sound.randomOneOf\n\t\t\t\t: [options.sound],\n\t\t);\n\t\tconst signal = new AccessibilitySignal(\n\t\t\tsoundSource,\n\t\t\toptions.name,\n\t\t\toptions.legacySoundSettingsKey,\n\t\t\toptions.settingsKey,\n\t\t\toptions.legacyAnnouncementSettingsKey,\n\t\t\toptions.announcementMessage,\n\t\t);\n\t\tAccessibilitySignal._signals.add(signal);\n\t\treturn signal;\n\t}\n\n\tpublic static get allAccessibilitySignals() {\n\t\treturn [...this._signals];\n\t}\n\n\tpublic static readonly errorAtPosition = AccessibilitySignal.register({\n\t\tname: localize(\n\t\t\t\"accessibilitySignals.positionHasError.name\",\n\t\t\t\"Error at Position\",\n\t\t),\n\t\tsound: Sound.error,\n\t\tannouncementMessage: localize(\n\t\t\t\"accessibility.signals.positionHasError\",\n\t\t\t\"Error\",\n\t\t),\n\t\tsettingsKey: \"accessibility.signals.positionHasError\",\n\t\tdelaySettingsKey: \"accessibility.signalOptions.delays.errorAtPosition\",\n\t});\n\tpublic static readonly warningAtPosition = AccessibilitySignal.register({\n\t\tname: localize(\n\t\t\t\"accessibilitySignals.positionHasWarning.name\",\n\t\t\t\"Warning at Position\",\n\t\t),\n\t\tsound: Sound.warning,\n\t\tannouncementMessage: localize(\n\t\t\t\"accessibility.signals.positionHasWarning\",\n\t\t\t\"Warning\",\n\t\t),\n\t\tsettingsKey: \"accessibility.signals.positionHasWarning\",\n\t\tdelaySettingsKey:\n\t\t\t\"accessibility.signalOptions.delays.warningAtPosition\",\n\t});\n\n\tpublic static readonly errorOnLine = AccessibilitySignal.register({\n\t\tname: localize(\n\t\t\t\"accessibilitySignals.lineHasError.name\",\n\t\t\t\"Error on Line\",\n\t\t),\n\t\tsound: Sound.error,\n\t\tlegacySoundSettingsKey: \"audioCues.lineHasError\",\n\t\tlegacyAnnouncementSettingsKey: \"accessibility.alert.error\",\n\t\tannouncementMessage: localize(\n\t\t\t\"accessibility.signals.lineHasError\",\n\t\t\t\"Error on Line\",\n\t\t),\n\t\tsettingsKey: \"accessibility.signals.lineHasError\",\n\t});\n\n\tpublic static readonly warningOnLine = AccessibilitySignal.register({\n\t\tname: localize(\n\t\t\t\"accessibilitySignals.lineHasWarning.name\",\n\t\t\t\"Warning on Line\",\n\t\t),\n\t\tsound: Sound.warning,\n\t\tlegacySoundSettingsKey: \"audioCues.lineHasWarning\",\n\t\tlegacyAnnouncementSettingsKey: \"accessibility.alert.warning\",\n\t\tannouncementMessage: localize(\n\t\t\t\"accessibility.signals.lineHasWarning\",\n\t\t\t\"Warning on Line\",\n\t\t),\n\t\tsettingsKey: \"accessibility.signals.lineHasWarning\",\n\t});\n\tpublic static readonly foldedArea = AccessibilitySignal.register({\n\t\tname: localize(\n\t\t\t\"accessibilitySignals.lineHasFoldedArea.name\",\n\t\t\t\"Folded Area on Line\",\n\t\t),\n\t\tsound: Sound.foldedArea,\n\t\tlegacySoundSettingsKey: \"audioCues.lineHasFoldedArea\",\n\t\tlegacyAnnouncementSettingsKey: \"accessibility.alert.foldedArea\",\n\t\tannouncementMessage: localize(\n\t\t\t\"accessibility.signals.lineHasFoldedArea\",\n\t\t\t\"Folded\",\n\t\t),\n\t\tsettingsKey: \"accessibility.signals.lineHasFoldedArea\",\n\t});\n\tpublic static readonly break = AccessibilitySignal.register({\n\t\tname: localize(\n\t\t\t\"accessibilitySignals.lineHasBreakpoint.name\",\n\t\t\t\"Breakpoint on Line\",\n\t\t),\n\t\tsound: Sound.break,\n\t\tlegacySoundSettingsKey: \"audioCues.lineHasBreakpoint\",\n\t\tlegacyAnnouncementSettingsKey: \"accessibility.alert.breakpoint\",\n\t\tannouncementMessage: localize(\n\t\t\t\"accessibility.signals.lineHasBreakpoint\",\n\t\t\t\"Breakpoint\",\n\t\t),\n\t\tsettingsKey: \"accessibility.signals.lineHasBreakpoint\",\n\t});\n\tpublic static readonly inlineSuggestion = AccessibilitySignal.register({\n\t\tname: localize(\n\t\t\t\"accessibilitySignals.lineHasInlineSuggestion.name\",\n\t\t\t\"Inline Suggestion on Line\",\n\t\t),\n\t\tsound: Sound.quickFixes,\n\t\tlegacySoundSettingsKey: \"audioCues.lineHasInlineSuggestion\",\n\t\tsettingsKey: \"accessibility.signals.lineHasInlineSuggestion\",\n\t});\n\n\tpublic static readonly terminalQuickFix = AccessibilitySignal.register({\n\t\tname: localize(\n\t\t\t\"accessibilitySignals.terminalQuickFix.name\",\n\t\t\t\"Terminal Quick Fix\",\n\t\t),\n\t\tsound: Sound.quickFixes,\n\t\tlegacySoundSettingsKey: \"audioCues.terminalQuickFix\",\n\t\tlegacyAnnouncementSettingsKey: \"accessibility.alert.terminalQuickFix\",\n\t\tannouncementMessage: localize(\n\t\t\t\"accessibility.signals.terminalQuickFix\",\n\t\t\t\"Quick Fix\",\n\t\t),\n\t\tsettingsKey: \"accessibility.signals.terminalQuickFix\",\n\t});\n\n\tpublic static readonly onDebugBreak = AccessibilitySignal.register({\n\t\tname: localize(\n\t\t\t\"accessibilitySignals.onDebugBreak.name\",\n\t\t\t\"Debugger Stopped on Breakpoint\",\n\t\t),\n\t\tsound: Sound.break,\n\t\tlegacySoundSettingsKey: \"audioCues.onDebugBreak\",\n\t\tlegacyAnnouncementSettingsKey: \"accessibility.alert.onDebugBreak\",\n\t\tannouncementMessage: localize(\n\t\t\t\"accessibility.signals.onDebugBreak\",\n\t\t\t\"Breakpoint\",\n\t\t),\n\t\tsettingsKey: \"accessibility.signals.onDebugBreak\",\n\t});\n\n\tpublic static readonly noInlayHints = AccessibilitySignal.register({\n\t\tname: localize(\n\t\t\t\"accessibilitySignals.noInlayHints\",\n\t\t\t\"No Inlay Hints on Line\",\n\t\t),\n\t\tsound: Sound.error,\n\t\tlegacySoundSettingsKey: \"audioCues.noInlayHints\",\n\t\tlegacyAnnouncementSettingsKey: \"accessibility.alert.noInlayHints\",\n\t\tannouncementMessage: localize(\n\t\t\t\"accessibility.signals.noInlayHints\",\n\t\t\t\"No Inlay Hints\",\n\t\t),\n\t\tsettingsKey: \"accessibility.signals.noInlayHints\",\n\t});\n\n\tpublic static readonly taskCompleted = AccessibilitySignal.register({\n\t\tname: localize(\"accessibilitySignals.taskCompleted\", \"Task Completed\"),\n\t\tsound: Sound.taskCompleted,\n\t\tlegacySoundSettingsKey: \"audioCues.taskCompleted\",\n\t\tlegacyAnnouncementSettingsKey: \"accessibility.alert.taskCompleted\",\n\t\tannouncementMessage: localize(\n\t\t\t\"accessibility.signals.taskCompleted\",\n\t\t\t\"Task Completed\",\n\t\t),\n\t\tsettingsKey: \"accessibility.signals.taskCompleted\",\n\t});\n\n\tpublic static readonly taskFailed = AccessibilitySignal.register({\n\t\tname: localize(\"accessibilitySignals.taskFailed\", \"Task Failed\"),\n\t\tsound: Sound.taskFailed,\n\t\tlegacySoundSettingsKey: \"audioCues.taskFailed\",\n\t\tlegacyAnnouncementSettingsKey: \"accessibility.alert.taskFailed\",\n\t\tannouncementMessage: localize(\n\t\t\t\"accessibility.signals.taskFailed\",\n\t\t\t\"Task Failed\",\n\t\t),\n\t\tsettingsKey: \"accessibility.signals.taskFailed\",\n\t});\n\n\tpublic static readonly terminalCommandFailed = AccessibilitySignal.register(\n\t\t{\n\t\t\tname: localize(\n\t\t\t\t\"accessibilitySignals.terminalCommandFailed\",\n\t\t\t\t\"Terminal Command Failed\",\n\t\t\t),\n\t\t\tsound: Sound.error,\n\t\t\tlegacySoundSettingsKey: \"audioCues.terminalCommandFailed\",\n\t\t\tlegacyAnnouncementSettingsKey:\n\t\t\t\t\"accessibility.alert.terminalCommandFailed\",\n\t\t\tannouncementMessage: localize(\n\t\t\t\t\"accessibility.signals.terminalCommandFailed\",\n\t\t\t\t\"Command Failed\",\n\t\t\t),\n\t\t\tsettingsKey: \"accessibility.signals.terminalCommandFailed\",\n\t\t},\n\t);\n\n\tpublic static readonly terminalCommandSucceeded =\n\t\tAccessibilitySignal.register({\n\t\t\tname: localize(\n\t\t\t\t\"accessibilitySignals.terminalCommandSucceeded\",\n\t\t\t\t\"Terminal Command Succeeded\",\n\t\t\t),\n\t\t\tsound: Sound.success,\n\t\t\tannouncementMessage: localize(\n\t\t\t\t\"accessibility.signals.terminalCommandSucceeded\",\n\t\t\t\t\"Command Succeeded\",\n\t\t\t),\n\t\t\tsettingsKey: \"accessibility.signals.terminalCommandSucceeded\",\n\t\t});\n\n\tpublic static readonly terminalBell = AccessibilitySignal.register({\n\t\tname: localize(\"accessibilitySignals.terminalBell\", \"Terminal Bell\"),\n\t\tsound: Sound.terminalBell,\n\t\tlegacySoundSettingsKey: \"audioCues.terminalBell\",\n\t\tlegacyAnnouncementSettingsKey: \"accessibility.alert.terminalBell\",\n\t\tannouncementMessage: localize(\n\t\t\t\"accessibility.signals.terminalBell\",\n\t\t\t\"Terminal Bell\",\n\t\t),\n\t\tsettingsKey: \"accessibility.signals.terminalBell\",\n\t});\n\n\tpublic static readonly notebookCellCompleted = AccessibilitySignal.register(\n\t\t{\n\t\t\tname: localize(\n\t\t\t\t\"accessibilitySignals.notebookCellCompleted\",\n\t\t\t\t\"Notebook Cell Completed\",\n\t\t\t),\n\t\t\tsound: Sound.taskCompleted,\n\t\t\tlegacySoundSettingsKey: \"audioCues.notebookCellCompleted\",\n\t\t\tlegacyAnnouncementSettingsKey:\n\t\t\t\t\"accessibility.alert.notebookCellCompleted\",\n\t\t\tannouncementMessage: localize(\n\t\t\t\t\"accessibility.signals.notebookCellCompleted\",\n\t\t\t\t\"Notebook Cell Completed\",\n\t\t\t),\n\t\t\tsettingsKey: \"accessibility.signals.notebookCellCompleted\",\n\t\t},\n\t);\n\n\tpublic static readonly notebookCellFailed = AccessibilitySignal.register({\n\t\tname: localize(\n\t\t\t\"accessibilitySignals.notebookCellFailed\",\n\t\t\t\"Notebook Cell Failed\",\n\t\t),\n\t\tsound: Sound.taskFailed,\n\t\tlegacySoundSettingsKey: \"audioCues.notebookCellFailed\",\n\t\tlegacyAnnouncementSettingsKey: \"accessibility.alert.notebookCellFailed\",\n\t\tannouncementMessage: localize(\n\t\t\t\"accessibility.signals.notebookCellFailed\",\n\t\t\t\"Notebook Cell Failed\",\n\t\t),\n\t\tsettingsKey: \"accessibility.signals.notebookCellFailed\",\n\t});\n\n\tpublic static readonly diffLineInserted = AccessibilitySignal.register({\n\t\tname: localize(\n\t\t\t\"accessibilitySignals.diffLineInserted\",\n\t\t\t\"Diff Line Inserted\",\n\t\t),\n\t\tsound: Sound.diffLineInserted,\n\t\tlegacySoundSettingsKey: \"audioCues.diffLineInserted\",\n\t\tsettingsKey: \"accessibility.signals.diffLineInserted\",\n\t});\n\n\tpublic static readonly diffLineDeleted = AccessibilitySignal.register({\n\t\tname: localize(\n\t\t\t\"accessibilitySignals.diffLineDeleted\",\n\t\t\t\"Diff Line Deleted\",\n\t\t),\n\t\tsound: Sound.diffLineDeleted,\n\t\tlegacySoundSettingsKey: \"audioCues.diffLineDeleted\",\n\t\tsettingsKey: \"accessibility.signals.diffLineDeleted\",\n\t});\n\n\tpublic static readonly diffLineModified = AccessibilitySignal.register({\n\t\tname: localize(\n\t\t\t\"accessibilitySignals.diffLineModified\",\n\t\t\t\"Diff Line Modified\",\n\t\t),\n\t\tsound: Sound.diffLineModified,\n\t\tlegacySoundSettingsKey: \"audioCues.diffLineModified\",\n\t\tsettingsKey: \"accessibility.signals.diffLineModified\",\n\t});\n\n\tpublic static readonly chatRequestSent = AccessibilitySignal.register({\n\t\tname: localize(\n\t\t\t\"accessibilitySignals.chatRequestSent\",\n\t\t\t\"Chat Request Sent\",\n\t\t),\n\t\tsound: Sound.chatRequestSent,\n\t\tlegacySoundSettingsKey: \"audioCues.chatRequestSent\",\n\t\tlegacyAnnouncementSettingsKey: \"accessibility.alert.chatRequestSent\",\n\t\tannouncementMessage: localize(\n\t\t\t\"accessibility.signals.chatRequestSent\",\n\t\t\t\"Chat Request Sent\",\n\t\t),\n\t\tsettingsKey: \"accessibility.signals.chatRequestSent\",\n\t});\n\n\tpublic static readonly chatResponseReceived = AccessibilitySignal.register({\n\t\tname: localize(\n\t\t\t\"accessibilitySignals.chatResponseReceived\",\n\t\t\t\"Chat Response Received\",\n\t\t),\n\t\tlegacySoundSettingsKey: \"audioCues.chatResponseReceived\",\n\t\tsound: {\n\t\t\trandomOneOf: [\n\t\t\t\tSound.chatResponseReceived1,\n\t\t\t\tSound.chatResponseReceived2,\n\t\t\t\tSound.chatResponseReceived3,\n\t\t\t\tSound.chatResponseReceived4,\n\t\t\t],\n\t\t},\n\t\tsettingsKey: \"accessibility.signals.chatResponseReceived\",\n\t});\n\n\tpublic static readonly progress = AccessibilitySignal.register({\n\t\tname: localize(\"accessibilitySignals.progress\", \"Progress\"),\n\t\tsound: Sound.progress,\n\t\tlegacySoundSettingsKey: \"audioCues.chatResponsePending\",\n\t\tlegacyAnnouncementSettingsKey: \"accessibility.alert.progress\",\n\t\tannouncementMessage: localize(\n\t\t\t\"accessibility.signals.progress\",\n\t\t\t\"Progress\",\n\t\t),\n\t\tsettingsKey: \"accessibility.signals.progress\",\n\t});\n\n\tpublic static readonly clear = AccessibilitySignal.register({\n\t\tname: localize(\"accessibilitySignals.clear\", \"Clear\"),\n\t\tsound: Sound.clear,\n\t\tlegacySoundSettingsKey: \"audioCues.clear\",\n\t\tlegacyAnnouncementSettingsKey: \"accessibility.alert.clear\",\n\t\tannouncementMessage: localize(\"accessibility.signals.clear\", \"Clear\"),\n\t\tsettingsKey: \"accessibility.signals.clear\",\n\t});\n\n\tpublic static readonly save = AccessibilitySignal.register({\n\t\tname: localize(\"accessibilitySignals.save\", \"Save\"),\n\t\tsound: Sound.save,\n\t\tlegacySoundSettingsKey: \"audioCues.save\",\n\t\tlegacyAnnouncementSettingsKey: \"accessibility.alert.save\",\n\t\tannouncementMessage: localize(\"accessibility.signals.save\", \"Save\"),\n\t\tsettingsKey: \"accessibility.signals.save\",\n\t});\n\n\tpublic static readonly format = AccessibilitySignal.register({\n\t\tname: localize(\"accessibilitySignals.format\", \"Format\"),\n\t\tsound: Sound.format,\n\t\tlegacySoundSettingsKey: \"audioCues.format\",\n\t\tlegacyAnnouncementSettingsKey: \"accessibility.alert.format\",\n\t\tannouncementMessage: localize(\"accessibility.signals.format\", \"Format\"),\n\t\tsettingsKey: \"accessibility.signals.format\",\n\t});\n\n\tpublic static readonly voiceRecordingStarted = AccessibilitySignal.register(\n\t\t{\n\t\t\tname: localize(\n\t\t\t\t\"accessibilitySignals.voiceRecordingStarted\",\n\t\t\t\t\"Voice Recording Started\",\n\t\t\t),\n\t\t\tsound: Sound.voiceRecordingStarted,\n\t\t\tlegacySoundSettingsKey: \"audioCues.voiceRecordingStarted\",\n\t\t\tsettingsKey: \"accessibility.signals.voiceRecordingStarted\",\n\t\t},\n\t);\n\n\tpublic static readonly voiceRecordingStopped = AccessibilitySignal.register(\n\t\t{\n\t\t\tname: localize(\n\t\t\t\t\"accessibilitySignals.voiceRecordingStopped\",\n\t\t\t\t\"Voice Recording Stopped\",\n\t\t\t),\n\t\t\tsound: Sound.voiceRecordingStopped,\n\t\t\tlegacySoundSettingsKey: \"audioCues.voiceRecordingStopped\",\n\t\t\tsettingsKey: \"accessibility.signals.voiceRecordingStopped\",\n\t\t},\n\t);\n}\n"],
  "mappings": "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",
  "names": ["sound"]
}
