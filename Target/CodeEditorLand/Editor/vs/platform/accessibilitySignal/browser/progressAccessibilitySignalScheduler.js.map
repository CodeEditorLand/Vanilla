{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/accessibilitySignal/browser/progressAccessibilitySignalScheduler.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RunOnceScheduler } from \"../../../base/common/async.js\";\nimport {\n\tDisposable,\n\ttype IDisposable,\n} from \"../../../base/common/lifecycle.js\";\nimport {\n\tAccessibilitySignal,\n\tIAccessibilitySignalService,\n} from \"./accessibilitySignalService.js\";\n\nconst PROGRESS_SIGNAL_LOOP_DELAY = 5000;\n\n/**\n * Schedules a signal to play while progress is happening.\n */\nexport class AccessibilityProgressSignalScheduler extends Disposable {\n\tprivate _scheduler: RunOnceScheduler;\n\tprivate _signalLoop: IDisposable | undefined;\n\tconstructor(msDelayTime: number, msLoopTime: number | undefined, @IAccessibilitySignalService private readonly _accessibilitySignalService: IAccessibilitySignalService) {\n\t\tsuper();\n\t\tthis._scheduler = new RunOnceScheduler(() => {\n\t\t\tthis._signalLoop = this._accessibilitySignalService.playSignalLoop(AccessibilitySignal.progress, msLoopTime ?? PROGRESS_SIGNAL_LOOP_DELAY);\n\t\t}, msDelayTime);\n\t\tthis._scheduler.schedule();\n\t}\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tthis._signalLoop?.dispose();\n\t\tthis._scheduler.dispose();\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,wBAAwB;AACjC;AAAA,EACC;AAAA,OAEM;AACP;AAAA,EACC;AAAA,EACA;AAAA,OACM;AAEP,MAAM,6BAA6B;AAK5B,IAAM,uCAAN,cAAmD,WAAW;AAAA,EAGpE,YAAY,aAAqB,YAA8E,6BAA0D;AACxK,UAAM;AADwG;AAE9G,SAAK,aAAa,IAAI,iBAAiB,MAAM;AAC5C,WAAK,cAAc,KAAK,4BAA4B,eAAe,oBAAoB,UAAU,cAAc,0BAA0B;AAAA,IAC1I,GAAG,WAAW;AACd,SAAK,WAAW,SAAS;AAAA,EAC1B;AAAA,EA7BD,OAoBqE;AAAA;AAAA;AAAA,EAC5D;AAAA,EACA;AAAA,EAQC,UAAgB;AACxB,UAAM,QAAQ;AACd,SAAK,aAAa,QAAQ;AAC1B,SAAK,WAAW,QAAQ;AAAA,EACzB;AACD;AAfa,uCAAN;AAAA,EAG4D;AAAA,GAHtD;",
  "names": []
}
