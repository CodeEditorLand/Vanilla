import"../../../base/common/event.js";import"../../../base/common/lifecycle.js";import"./terminal.js";class d{constructor(e){this._callback=e}_terminalBufferMap=new Map;dispose(){for(const e of this._terminalBufferMap.values())e.dispose()}startBuffering(e,t,n=5){const s=t(a=>{const f=typeof a=="string"?a:a.data;let r=this._terminalBufferMap.get(e);if(r){r.data.push(f);return}const i=setTimeout(()=>this.flushBuffer(e),n);r={data:[f],timeoutId:i,dispose:()=>{clearTimeout(i),this.flushBuffer(e),s.dispose()}},this._terminalBufferMap.set(e,r)});return s}stopBuffering(e){this._terminalBufferMap.get(e)?.dispose()}flushBuffer(e){const t=this._terminalBufferMap.get(e);t&&(this._terminalBufferMap.delete(e),this._callback(e,t.data.join("")))}}export{d as TerminalDataBufferer};
