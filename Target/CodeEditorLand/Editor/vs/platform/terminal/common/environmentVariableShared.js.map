{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/terminal/common/environmentVariableShared.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type {\n\tIEnvironmentVariableCollection,\n\tIEnvironmentVariableCollectionDescription,\n\tIEnvironmentVariableMutator,\n\tISerializableEnvironmentDescriptionMap,\n\tISerializableEnvironmentVariableCollection,\n\tISerializableEnvironmentVariableCollections,\n} from \"./environmentVariable.js\";\n\n// This file is shared between the renderer and extension host\n\nexport function serializeEnvironmentVariableCollection(\n\tcollection: ReadonlyMap<string, IEnvironmentVariableMutator>,\n): ISerializableEnvironmentVariableCollection {\n\treturn [...collection.entries()];\n}\n\nexport function serializeEnvironmentDescriptionMap(\n\tdescriptionMap:\n\t\t| ReadonlyMap<string, IEnvironmentVariableCollectionDescription>\n\t\t| undefined,\n): ISerializableEnvironmentDescriptionMap {\n\treturn descriptionMap ? [...descriptionMap.entries()] : [];\n}\n\nexport function deserializeEnvironmentVariableCollection(\n\tserializedCollection: ISerializableEnvironmentVariableCollection,\n): Map<string, IEnvironmentVariableMutator> {\n\treturn new Map<string, IEnvironmentVariableMutator>(serializedCollection);\n}\n\nexport function deserializeEnvironmentDescriptionMap(\n\tserializableEnvironmentDescription:\n\t\t| ISerializableEnvironmentDescriptionMap\n\t\t| undefined,\n): Map<string, IEnvironmentVariableCollectionDescription> {\n\treturn new Map<string, IEnvironmentVariableCollectionDescription>(\n\t\tserializableEnvironmentDescription ?? [],\n\t);\n}\n\nexport function serializeEnvironmentVariableCollections(\n\tcollections: ReadonlyMap<string, IEnvironmentVariableCollection>,\n): ISerializableEnvironmentVariableCollections {\n\treturn Array.from(collections.entries()).map((e) => {\n\t\treturn [\n\t\t\te[0],\n\t\t\tserializeEnvironmentVariableCollection(e[1].map),\n\t\t\tserializeEnvironmentDescriptionMap(e[1].descriptionMap),\n\t\t];\n\t});\n}\n\nexport function deserializeEnvironmentVariableCollections(\n\tserializedCollection: ISerializableEnvironmentVariableCollections,\n): Map<string, IEnvironmentVariableCollection> {\n\treturn new Map<string, IEnvironmentVariableCollection>(\n\t\tserializedCollection.map((e) => {\n\t\t\treturn [\n\t\t\t\te[0],\n\t\t\t\t{\n\t\t\t\t\tmap: deserializeEnvironmentVariableCollection(e[1]),\n\t\t\t\t\tdescriptionMap: deserializeEnvironmentDescriptionMap(e[2]),\n\t\t\t\t},\n\t\t\t];\n\t\t}),\n\t);\n}\n"],
  "mappings": ";;AAgBO,SAAS,uCACf,YAC6C;AAC7C,SAAO,CAAC,GAAG,WAAW,QAAQ,CAAC;AAChC;AAJgB;AAMT,SAAS,mCACf,gBAGyC;AACzC,SAAO,iBAAiB,CAAC,GAAG,eAAe,QAAQ,CAAC,IAAI,CAAC;AAC1D;AANgB;AAQT,SAAS,yCACf,sBAC2C;AAC3C,SAAO,IAAI,IAAyC,oBAAoB;AACzE;AAJgB;AAMT,SAAS,qCACf,oCAGyD;AACzD,SAAO,IAAI;AAAA,IACV,sCAAsC,CAAC;AAAA,EACxC;AACD;AARgB;AAUT,SAAS,wCACf,aAC8C;AAC9C,SAAO,MAAM,KAAK,YAAY,QAAQ,CAAC,EAAE,IAAI,CAAC,MAAM;AACnD,WAAO;AAAA,MACN,EAAE,CAAC;AAAA,MACH,uCAAuC,EAAE,CAAC,EAAE,GAAG;AAAA,MAC/C,mCAAmC,EAAE,CAAC,EAAE,cAAc;AAAA,IACvD;AAAA,EACD,CAAC;AACF;AAVgB;AAYT,SAAS,0CACf,sBAC8C;AAC9C,SAAO,IAAI;AAAA,IACV,qBAAqB,IAAI,CAAC,MAAM;AAC/B,aAAO;AAAA,QACN,EAAE,CAAC;AAAA,QACH;AAAA,UACC,KAAK,yCAAyC,EAAE,CAAC,CAAC;AAAA,UAClD,gBAAgB,qCAAqC,EAAE,CAAC,CAAC;AAAA,QAC1D;AAAA,MACD;AAAA,IACD,CAAC;AAAA,EACF;AACD;AAdgB;",
  "names": []
}
