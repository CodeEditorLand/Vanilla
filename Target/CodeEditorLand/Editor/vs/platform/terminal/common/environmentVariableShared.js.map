{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/terminal/common/environmentVariableShared.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IEnvironmentVariableCollectionDescription, IEnvironmentVariableCollection, IEnvironmentVariableMutator, ISerializableEnvironmentDescriptionMap as ISerializableEnvironmentDescriptionMap, ISerializableEnvironmentVariableCollection, ISerializableEnvironmentVariableCollections } from './environmentVariable.js';\n\n// This file is shared between the renderer and extension host\n\nexport function serializeEnvironmentVariableCollection(collection: ReadonlyMap<string, IEnvironmentVariableMutator>): ISerializableEnvironmentVariableCollection {\n\treturn [...collection.entries()];\n}\n\nexport function serializeEnvironmentDescriptionMap(descriptionMap: ReadonlyMap<string, IEnvironmentVariableCollectionDescription> | undefined): ISerializableEnvironmentDescriptionMap {\n\treturn descriptionMap ? [...descriptionMap.entries()] : [];\n}\n\nexport function deserializeEnvironmentVariableCollection(\n\tserializedCollection: ISerializableEnvironmentVariableCollection\n): Map<string, IEnvironmentVariableMutator> {\n\treturn new Map<string, IEnvironmentVariableMutator>(serializedCollection);\n}\n\nexport function deserializeEnvironmentDescriptionMap(\n\tserializableEnvironmentDescription: ISerializableEnvironmentDescriptionMap | undefined\n): Map<string, IEnvironmentVariableCollectionDescription> {\n\treturn new Map<string, IEnvironmentVariableCollectionDescription>(serializableEnvironmentDescription ?? []);\n}\n\nexport function serializeEnvironmentVariableCollections(collections: ReadonlyMap<string, IEnvironmentVariableCollection>): ISerializableEnvironmentVariableCollections {\n\treturn Array.from(collections.entries()).map(e => {\n\t\treturn [e[0], serializeEnvironmentVariableCollection(e[1].map), serializeEnvironmentDescriptionMap(e[1].descriptionMap)];\n\t});\n}\n\nexport function deserializeEnvironmentVariableCollections(\n\tserializedCollection: ISerializableEnvironmentVariableCollections\n): Map<string, IEnvironmentVariableCollection> {\n\treturn new Map<string, IEnvironmentVariableCollection>(serializedCollection.map(e => {\n\t\treturn [e[0], { map: deserializeEnvironmentVariableCollection(e[1]), descriptionMap: deserializeEnvironmentDescriptionMap(e[2]) }];\n\t}));\n}\n"],
  "mappings": ";;AAKA,SAAS,2CAA2C,gCAAgC,6BAA6B,wCAAkF,4CAA4C,mDAAmD;AAI3R,SAAS,uCAAuC,YAA0G;AAChK,SAAO,CAAC,GAAG,WAAW,QAAQ,CAAC;AAChC;AAFgB;AAIT,SAAS,mCAAmC,gBAAoI;AACtL,SAAO,iBAAiB,CAAC,GAAG,eAAe,QAAQ,CAAC,IAAI,CAAC;AAC1D;AAFgB;AAIT,SAAS,yCACf,sBAC2C;AAC3C,SAAO,IAAI,IAAyC,oBAAoB;AACzE;AAJgB;AAMT,SAAS,qCACf,oCACyD;AACzD,SAAO,IAAI,IAAuD,sCAAsC,CAAC,CAAC;AAC3G;AAJgB;AAMT,SAAS,wCAAwC,aAA+G;AACtK,SAAO,MAAM,KAAK,YAAY,QAAQ,CAAC,EAAE,IAAI,OAAK;AACjD,WAAO,CAAC,EAAE,CAAC,GAAG,uCAAuC,EAAE,CAAC,EAAE,GAAG,GAAG,mCAAmC,EAAE,CAAC,EAAE,cAAc,CAAC;AAAA,EACxH,CAAC;AACF;AAJgB;AAMT,SAAS,0CACf,sBAC8C;AAC9C,SAAO,IAAI,IAA4C,qBAAqB,IAAI,OAAK;AACpF,WAAO,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,yCAAyC,EAAE,CAAC,CAAC,GAAG,gBAAgB,qCAAqC,EAAE,CAAC,CAAC,EAAE,CAAC;AAAA,EAClI,CAAC,CAAC;AACH;AANgB;",
  "names": []
}
