import{Emitter as r}from"../../../../base/common/event.js";import{DisposableStore as a}from"../../../../base/common/lifecycle.js";import{TerminalCapability as n}from"./capabilities.js";var m=(t=>(t[t.MinimumPromptLength=2]="MinimumPromptLength",t))(m||{});class p extends a{constructor(i){super();this._terminal=i;this.add(this._terminal.onData(e=>this._onData(e))),this.add(this._terminal.parser.registerCsiHandler({final:"J"},e=>(e.length>=1&&(e[0]===2||e[0]===3)&&this._clearCommandsInViewport(),!1)))}type=n.PartialCommandDetection;_commands=[];get commands(){return this._commands}_onCommandFinished=this.add(new r);onCommandFinished=this._onCommandFinished.event;_onData(i){i==="\r"&&this._onEnter()}_onEnter(){if(this._terminal&&this._terminal.buffer.active.cursorX>=2){const i=this._terminal.registerMarker(0);i&&(this._commands.push(i),this._onCommandFinished.fire(i))}}_clearCommandsInViewport(){let i=0;for(let e=this._commands.length-1;e>=0&&!(this._commands[e].line<this._terminal.buffer.active.baseY);e--)i++;this._commands.splice(this._commands.length-i,i)}}export{p as PartialCommandDetectionCapability};
