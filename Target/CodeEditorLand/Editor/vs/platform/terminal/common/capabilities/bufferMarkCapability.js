import{Emitter as i}from"../../../../base/common/event.js";import{Disposable as t}from"../../../../base/common/lifecycle.js";import{TerminalCapability as s}from"./capabilities.js";class p extends t{constructor(e){super();this._terminal=e}type=s.BufferMarkDetection;_idToMarkerMap=new Map;_anonymousMarkers=new Map;_onMarkAdded=this._register(new i);onMarkAdded=this._onMarkAdded.event;*markers(){for(const e of this._idToMarkerMap.values())yield e;for(const e of this._anonymousMarkers.values())yield e}addMark(e){const r=e?.marker||this._terminal.registerMarker(),a=e?.id;r&&(a?(this._idToMarkerMap.set(a,r),r.onDispose(()=>this._idToMarkerMap.delete(a))):(this._anonymousMarkers.set(r.id,r),r.onDispose(()=>this._anonymousMarkers.delete(r.id))),this._onMarkAdded.fire({marker:r,id:a,hidden:e?.hidden,hoverMessage:e?.hoverMessage}))}getMark(e){return this._idToMarkerMap.get(e)}}export{p as BufferMarkCapability};
