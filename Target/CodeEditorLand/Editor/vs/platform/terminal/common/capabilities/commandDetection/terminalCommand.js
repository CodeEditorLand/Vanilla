import"../../terminal.js";import"../capabilities.js";class p{constructor(t,e){this._xterm=t;this._properties=e}get command(){return this._properties.command}get commandLineConfidence(){return this._properties.commandLineConfidence}get isTrusted(){return this._properties.isTrusted}get timestamp(){return this._properties.timestamp}get duration(){return this._properties.duration}get promptStartMarker(){return this._properties.promptStartMarker}get marker(){return this._properties.marker}get endMarker(){return this._properties.endMarker}set endMarker(t){this._properties.endMarker=t}get executedMarker(){return this._properties.executedMarker}get aliases(){return this._properties.aliases}get wasReplayed(){return this._properties.wasReplayed}get cwd(){return this._properties.cwd}get exitCode(){return this._properties.exitCode}get commandStartLineContent(){return this._properties.commandStartLineContent}get markProperties(){return this._properties.markProperties}get executedX(){return this._properties.executedX}get startX(){return this._properties.startX}static deserialize(t,e,n){const r=t.buffer.normal,m=e.startLine!==void 0?t.registerMarker(e.startLine-(r.baseY+r.cursorY)):void 0;if(!m)return;const o=e.promptStartLine!==void 0?t.registerMarker(e.promptStartLine-(r.baseY+r.cursorY)):void 0,a=e.endLine!==void 0?t.registerMarker(e.endLine-(r.baseY+r.cursorY)):void 0,u=e.executedLine!==void 0?t.registerMarker(e.executedLine-(r.baseY+r.cursorY)):void 0;return new p(t,{command:n?"":e.command,commandLineConfidence:e.commandLineConfidence??"low",isTrusted:e.isTrusted,promptStartMarker:o,marker:m,startX:e.startX,endMarker:a,executedMarker:u,executedX:e.executedX,timestamp:e.timestamp,duration:e.duration,cwd:e.cwd,commandStartLineContent:e.commandStartLineContent,exitCode:e.exitCode,markProperties:e.markProperties,aliases:void 0,wasReplayed:!0})}serialize(t){return{promptStartLine:this.promptStartMarker?.line,startLine:this.marker?.line,startX:void 0,endLine:this.endMarker?.line,executedLine:this.executedMarker?.line,executedX:this.executedX,command:t?"":this.command,commandLineConfidence:t?"low":this.commandLineConfidence,isTrusted:this.isTrusted,cwd:this.cwd,exitCode:this.exitCode,commandStartLineContent:this.commandStartLineContent,timestamp:this.timestamp,duration:this.duration,markProperties:this.markProperties}}extractCommandLine(){return f(this._xterm.buffer.active,this._xterm.cols,this.marker,this.startX,this.executedMarker,this.executedX)}getOutput(){if(!this.executedMarker||!this.endMarker)return;const t=this.executedMarker.line,e=this.endMarker.line;if(t===e)return;let n="",r;for(let m=t;m<e;m++)r=this._xterm.buffer.active.getLine(m),r&&(n+=r.translateToString(!r.isWrapped)+(r.isWrapped?"":`
`));return n===""?void 0:n}getOutputMatch(t){if(!this.executedMarker||!this.endMarker)return;const e=this.endMarker.line;if(e===-1)return;const n=this._xterm.buffer.active,r=Math.max(this.executedMarker.line,0),m=t.lineMatcher,o=typeof m=="string"?1:t.length||M(m),a=[];let u;if(t.anchor==="bottom")for(let d=e-(t.offset||0);d>=r;d--){let s=d;const c=d;for(;s>=r&&n.getLine(s)?.isWrapped;)s--;if(d=s,a.unshift(h(n,s,c,this._xterm.cols)),u||(u=a[0].match(m)),a.length>=o)break}else for(let d=r+(t.offset||0);d<e;d++){const s=d;let c=d;for(;c+1<e&&n.getLine(c+1)?.isWrapped;)c++;if(d=c,a.push(h(n,s,c,this._xterm.cols)),u||(u=a[a.length-1].match(m)),a.length>=o)break}return u?{regexMatch:u,outputLines:a}:void 0}hasOutput(){return!this.executedMarker?.isDisposed&&!this.endMarker?.isDisposed&&!!(this.executedMarker&&this.endMarker&&this.executedMarker.line<this.endMarker.line)}getPromptRowCount(){return l(this,this._xterm.buffer.active)}getCommandRowCount(){return k(this)}}class X{constructor(t){this._xterm=t}promptStartMarker;commandStartMarker;commandStartX;commandStartLineContent;commandRightPromptStartX;commandRightPromptEndX;commandLines;commandExecutedMarker;commandExecutedX;commandExecutedTimestamp;commandDuration;commandFinishedMarker;currentContinuationMarker;continuations;cwd;command;commandLineConfidence;isTrusted;isInvalid;serialize(t){if(this.commandStartMarker)return{promptStartLine:this.promptStartMarker?.line,startLine:this.commandStartMarker.line,startX:this.commandStartX,endLine:void 0,executedLine:void 0,executedX:void 0,command:"",commandLineConfidence:"low",isTrusted:!0,cwd:t,exitCode:void 0,commandStartLineContent:void 0,timestamp:0,duration:0,markProperties:void 0}}promoteToFullCommand(t,e,n,r){if(e===void 0&&this.command===void 0&&(this.command=""),this.command!==void 0&&!this.command.startsWith("\\")||n)return new p(this._xterm,{command:n?"":this.command||"",commandLineConfidence:n?"low":this.commandLineConfidence||"low",isTrusted:!!this.isTrusted,promptStartMarker:this.promptStartMarker,marker:this.commandStartMarker,startX:this.commandStartX,endMarker:this.commandFinishedMarker,executedMarker:this.commandExecutedMarker,executedX:this.commandExecutedX,timestamp:Date.now(),duration:this.commandDuration||0,cwd:t,exitCode:e,commandStartLineContent:this.commandStartLineContent,markProperties:r})}markExecutedTime(){this.commandExecutedTimestamp===void 0&&(this.commandExecutedTimestamp=Date.now())}markFinishedTime(){this.commandDuration===void 0&&this.commandExecutedTimestamp!==void 0&&(this.commandDuration=Date.now()-this.commandExecutedTimestamp)}extractCommandLine(){return f(this._xterm.buffer.active,this._xterm.cols,this.commandStartMarker,this.commandStartX,this.commandExecutedMarker,this.commandExecutedX)}getPromptRowCount(){return l(this,this._xterm.buffer.active)}getCommandRowCount(){return k(this)}}function f(i,t,e,n,r,m){if(!e||!r||n===void 0||m===void 0)return"";let o="";for(let a=e.line;a<=r.line;a++){const u=i.getLine(a);u&&(o+=u.translateToString(!0,a===e.line?n:0,a===r.line?m:t))}return o}function h(i,t,e,n){const r=Math.max(2048/n*2);e=Math.min(e,t+r);let m="";for(let o=t;o<=e;o++){const a=i.getLine(o);a&&(m+=a.translateToString(!0,0,n))}return m}function M(i){if(!i.multiline)return 1;const t=i.source;let e=1,n=t.indexOf("\\n");for(;n!==-1;)e++,n=t.indexOf("\\n",n+1);return e}function l(i,t){const e="hasOutput"in i?i.marker:i.commandStartMarker;if(!e||!i.promptStartMarker)return 1;let n=1,r=i.promptStartMarker.line;for(;r<e.line&&(t.getLine(r)?.translateToString(!0)??"").length===0;)r++;return n=e.line-r+1,n}function k(i){const t="hasOutput"in i?i.marker:i.commandStartMarker,e="hasOutput"in i?i.executedMarker:i.commandExecutedMarker;if(!t||!e)return 1;let r=Math.max(e.line,t.line)-t.line+1;return("hasOutput"in i?i.executedX:i.commandExecutedX)===0&&r--,r}export{X as PartialTerminalCommand,p as TerminalCommand};
