{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/terminal/common/capabilities/cwdDetectionCapability.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from \"../../../../base/common/event.js\";\nimport { Disposable } from \"../../../../base/common/lifecycle.js\";\nimport {\n\ttype ICwdDetectionCapability,\n\tTerminalCapability,\n} from \"./capabilities.js\";\n\nexport class CwdDetectionCapability\n\textends Disposable\n\timplements ICwdDetectionCapability\n{\n\treadonly type = TerminalCapability.CwdDetection;\n\tprivate _cwd = \"\";\n\tprivate _cwds = new Map</*cwd*/ string, /*frequency*/ number>();\n\n\t/**\n\t * Gets the list of cwds seen in this session in order of last accessed.\n\t */\n\tget cwds(): string[] {\n\t\treturn Array.from(this._cwds.keys());\n\t}\n\n\tprivate readonly _onDidChangeCwd = this._register(new Emitter<string>());\n\treadonly onDidChangeCwd = this._onDidChangeCwd.event;\n\n\tgetCwd(): string {\n\t\treturn this._cwd;\n\t}\n\n\tupdateCwd(cwd: string): void {\n\t\tconst didChange = this._cwd !== cwd;\n\t\tthis._cwd = cwd;\n\t\tconst count = this._cwds.get(this._cwd) || 0;\n\t\tthis._cwds.delete(this._cwd); // Delete to put it at the bottom of the iterable\n\t\tthis._cwds.set(this._cwd, count + 1);\n\t\tif (didChange) {\n\t\t\tthis._onDidChangeCwd.fire(cwd);\n\t\t}\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,eAAe;AACxB,SAAS,kBAAkB;AAC3B;AAAA,EAEC;AAAA,OACM;AAEA,MAAM,+BACJ,WAET;AAAA,EAfA,OAeA;AAAA;AAAA;AAAA,EACU,OAAO,mBAAmB;AAAA,EAC3B,OAAO;AAAA,EACP,QAAQ,oBAAI,IAA0C;AAAA;AAAA;AAAA;AAAA,EAK9D,IAAI,OAAiB;AACpB,WAAO,MAAM,KAAK,KAAK,MAAM,KAAK,CAAC;AAAA,EACpC;AAAA,EAEiB,kBAAkB,KAAK,UAAU,IAAI,QAAgB,CAAC;AAAA,EAC9D,iBAAiB,KAAK,gBAAgB;AAAA,EAE/C,SAAiB;AAChB,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,UAAU,KAAmB;AAC5B,UAAM,YAAY,KAAK,SAAS;AAChC,SAAK,OAAO;AACZ,UAAM,QAAQ,KAAK,MAAM,IAAI,KAAK,IAAI,KAAK;AAC3C,SAAK,MAAM,OAAO,KAAK,IAAI;AAC3B,SAAK,MAAM,IAAI,KAAK,MAAM,QAAQ,CAAC;AACnC,QAAI,WAAW;AACd,WAAK,gBAAgB,KAAK,GAAG;AAAA,IAC9B;AAAA,EACD;AACD;",
  "names": []
}
