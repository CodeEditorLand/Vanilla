{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/terminal/common/terminalRecorder.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IPtyHostProcessReplayEvent } from './capabilities/capabilities.js';\nimport { ReplayEntry } from './terminalProcess.js';\n\nconst enum Constants {\n\tMaxRecorderDataSize = 10 * 1024 * 1024 // 10MB\n}\n\ninterface RecorderEntry {\n\tcols: number;\n\trows: number;\n\tdata: string[];\n}\n\nexport interface IRemoteTerminalProcessReplayEvent {\n\tevents: ReplayEntry[];\n}\n\nexport class TerminalRecorder {\n\n\tprivate _entries: RecorderEntry[];\n\tprivate _totalDataLength: number = 0;\n\n\tconstructor(cols: number, rows: number) {\n\t\tthis._entries = [{ cols, rows, data: [] }];\n\t}\n\n\thandleResize(cols: number, rows: number): void {\n\t\tif (this._entries.length > 0) {\n\t\t\tconst lastEntry = this._entries[this._entries.length - 1];\n\t\t\tif (lastEntry.data.length === 0) {\n\t\t\t\t// last entry is just a resize, so just remove it\n\t\t\t\tthis._entries.pop();\n\t\t\t}\n\t\t}\n\n\t\tif (this._entries.length > 0) {\n\t\t\tconst lastEntry = this._entries[this._entries.length - 1];\n\t\t\tif (lastEntry.cols === cols && lastEntry.rows === rows) {\n\t\t\t\t// nothing changed\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (lastEntry.cols === 0 && lastEntry.rows === 0) {\n\t\t\t\t// we finally received a good size!\n\t\t\t\tlastEntry.cols = cols;\n\t\t\t\tlastEntry.rows = rows;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis._entries.push({ cols, rows, data: [] });\n\t}\n\n\thandleData(data: string): void {\n\t\tconst lastEntry = this._entries[this._entries.length - 1];\n\t\tlastEntry.data.push(data);\n\n\t\tthis._totalDataLength += data.length;\n\t\twhile (this._totalDataLength > Constants.MaxRecorderDataSize) {\n\t\t\tconst firstEntry = this._entries[0];\n\t\t\tconst remainingToDelete = this._totalDataLength - Constants.MaxRecorderDataSize;\n\t\t\tif (remainingToDelete >= firstEntry.data[0].length) {\n\t\t\t\t// the first data piece must be deleted\n\t\t\t\tthis._totalDataLength -= firstEntry.data[0].length;\n\t\t\t\tfirstEntry.data.shift();\n\t\t\t\tif (firstEntry.data.length === 0) {\n\t\t\t\t\t// the first entry must be deleted\n\t\t\t\t\tthis._entries.shift();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// the first data piece must be partially deleted\n\t\t\t\tfirstEntry.data[0] = firstEntry.data[0].substr(remainingToDelete);\n\t\t\t\tthis._totalDataLength -= remainingToDelete;\n\t\t\t}\n\t\t}\n\t}\n\n\tgenerateReplayEventSync(): IPtyHostProcessReplayEvent {\n\t\t// normalize entries to one element per data array\n\t\tthis._entries.forEach((entry) => {\n\t\t\tif (entry.data.length > 0) {\n\t\t\t\tentry.data = [entry.data.join('')];\n\t\t\t}\n\t\t});\n\t\treturn {\n\t\t\tevents: this._entries.map(entry => ({ cols: entry.cols, rows: entry.rows, data: entry.data[0] ?? '' })),\n\t\t\t// No command restoration is needed when relaunching terminals\n\t\t\tcommands: {\n\t\t\t\tisWindowsPty: false,\n\t\t\t\tcommands: [],\n\t\t\t\tpromptInputModel: undefined,\n\t\t\t}\n\t\t};\n\t}\n\n\tasync generateReplayEvent(): Promise<IPtyHostProcessReplayEvent> {\n\t\treturn this.generateReplayEventSync();\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,kCAAkC;AAC3C,SAAS,mBAAmB;AAE5B,IAAW,YAAX,kBAAWA,eAAX;AACC,EAAAA,sBAAA,yBAAsB,YAAtB;AADU,SAAAA;AAAA,GAAA;AAcJ,MAAM,iBAAiB;AAAA,EAtB9B,OAsB8B;AAAA;AAAA;AAAA,EAErB;AAAA,EACA,mBAA2B;AAAA,EAEnC,YAAY,MAAc,MAAc;AACvC,SAAK,WAAW,CAAC,EAAE,MAAM,MAAM,MAAM,CAAC,EAAE,CAAC;AAAA,EAC1C;AAAA,EAEA,aAAa,MAAc,MAAoB;AAC9C,QAAI,KAAK,SAAS,SAAS,GAAG;AAC7B,YAAM,YAAY,KAAK,SAAS,KAAK,SAAS,SAAS,CAAC;AACxD,UAAI,UAAU,KAAK,WAAW,GAAG;AAEhC,aAAK,SAAS,IAAI;AAAA,MACnB;AAAA,IACD;AAEA,QAAI,KAAK,SAAS,SAAS,GAAG;AAC7B,YAAM,YAAY,KAAK,SAAS,KAAK,SAAS,SAAS,CAAC;AACxD,UAAI,UAAU,SAAS,QAAQ,UAAU,SAAS,MAAM;AAEvD;AAAA,MACD;AACA,UAAI,UAAU,SAAS,KAAK,UAAU,SAAS,GAAG;AAEjD,kBAAU,OAAO;AACjB,kBAAU,OAAO;AACjB;AAAA,MACD;AAAA,IACD;AAEA,SAAK,SAAS,KAAK,EAAE,MAAM,MAAM,MAAM,CAAC,EAAE,CAAC;AAAA,EAC5C;AAAA,EAEA,WAAW,MAAoB;AAC9B,UAAM,YAAY,KAAK,SAAS,KAAK,SAAS,SAAS,CAAC;AACxD,cAAU,KAAK,KAAK,IAAI;AAExB,SAAK,oBAAoB,KAAK;AAC9B,WAAO,KAAK,mBAAmB,oCAA+B;AAC7D,YAAM,aAAa,KAAK,SAAS,CAAC;AAClC,YAAM,oBAAoB,KAAK,mBAAmB;AAClD,UAAI,qBAAqB,WAAW,KAAK,CAAC,EAAE,QAAQ;AAEnD,aAAK,oBAAoB,WAAW,KAAK,CAAC,EAAE;AAC5C,mBAAW,KAAK,MAAM;AACtB,YAAI,WAAW,KAAK,WAAW,GAAG;AAEjC,eAAK,SAAS,MAAM;AAAA,QACrB;AAAA,MACD,OAAO;AAEN,mBAAW,KAAK,CAAC,IAAI,WAAW,KAAK,CAAC,EAAE,OAAO,iBAAiB;AAChE,aAAK,oBAAoB;AAAA,MAC1B;AAAA,IACD;AAAA,EACD;AAAA,EAEA,0BAAsD;AAErD,SAAK,SAAS,QAAQ,CAAC,UAAU;AAChC,UAAI,MAAM,KAAK,SAAS,GAAG;AAC1B,cAAM,OAAO,CAAC,MAAM,KAAK,KAAK,EAAE,CAAC;AAAA,MAClC;AAAA,IACD,CAAC;AACD,WAAO;AAAA,MACN,QAAQ,KAAK,SAAS,IAAI,YAAU,EAAE,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,KAAK,CAAC,KAAK,GAAG,EAAE;AAAA;AAAA,MAEtG,UAAU;AAAA,QACT,cAAc;AAAA,QACd,UAAU,CAAC;AAAA,QACX,kBAAkB;AAAA,MACnB;AAAA,IACD;AAAA,EACD;AAAA,EAEA,MAAM,sBAA2D;AAChE,WAAO,KAAK,wBAAwB;AAAA,EACrC;AACD;",
  "names": ["Constants"]
}
