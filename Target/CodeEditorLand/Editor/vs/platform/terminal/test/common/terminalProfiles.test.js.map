{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/terminal/test/common/terminalProfiles.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { deepStrictEqual } from 'assert';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\nimport { ITerminalProfile } from '../../common/terminal.js';\nimport { createProfileSchemaEnums } from '../../common/terminalProfiles.js';\n\nsuite('terminalProfiles', () => {\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tsuite('createProfileSchemaEnums', () => {\n\t\ttest('should return an empty array when there are no profiles', () => {\n\t\t\tdeepStrictEqual(createProfileSchemaEnums([]), {\n\t\t\t\tvalues: [\n\t\t\t\t\tnull\n\t\t\t\t],\n\t\t\t\tmarkdownDescriptions: [\n\t\t\t\t\t'Automatically detect the default'\n\t\t\t\t]\n\t\t\t});\n\t\t});\n\t\ttest('should return a single entry when there is one profile', () => {\n\t\t\tconst profile: ITerminalProfile = {\n\t\t\t\tprofileName: 'name',\n\t\t\t\tpath: 'path',\n\t\t\t\tisDefault: true\n\t\t\t};\n\t\t\tdeepStrictEqual(createProfileSchemaEnums([profile]), {\n\t\t\t\tvalues: [\n\t\t\t\t\tnull,\n\t\t\t\t\t'name'\n\t\t\t\t],\n\t\t\t\tmarkdownDescriptions: [\n\t\t\t\t\t'Automatically detect the default',\n\t\t\t\t\t'$(terminal) name\\n- path: path'\n\t\t\t\t]\n\t\t\t});\n\t\t});\n\t\ttest('should show all profile information', () => {\n\t\t\tconst profile: ITerminalProfile = {\n\t\t\t\tprofileName: 'name',\n\t\t\t\tpath: 'path',\n\t\t\t\tisDefault: true,\n\t\t\t\targs: ['a', 'b'],\n\t\t\t\tcolor: 'terminal.ansiRed',\n\t\t\t\tenv: {\n\t\t\t\t\tc: 'd',\n\t\t\t\t\te: 'f'\n\t\t\t\t},\n\t\t\t\ticon: Codicon.zap,\n\t\t\t\toverrideName: true\n\t\t\t};\n\t\t\tdeepStrictEqual(createProfileSchemaEnums([profile]), {\n\t\t\t\tvalues: [\n\t\t\t\t\tnull,\n\t\t\t\t\t'name'\n\t\t\t\t],\n\t\t\t\tmarkdownDescriptions: [\n\t\t\t\t\t'Automatically detect the default',\n\t\t\t\t\t`$(zap) name\\n- path: path\\n- args: ['a','b']\\n- overrideName: true\\n- color: terminal.ansiRed\\n- env: {\\\"c\\\":\\\"d\\\",\\\"e\\\":\\\"f\\\"}`\n\t\t\t\t]\n\t\t\t});\n\t\t});\n\t\ttest('should return a multiple entries when there are multiple profiles', () => {\n\t\t\tconst profile1: ITerminalProfile = {\n\t\t\t\tprofileName: 'name',\n\t\t\t\tpath: 'path',\n\t\t\t\tisDefault: true\n\t\t\t};\n\t\t\tconst profile2: ITerminalProfile = {\n\t\t\t\tprofileName: 'foo',\n\t\t\t\tpath: 'bar',\n\t\t\t\tisDefault: false\n\t\t\t};\n\t\t\tdeepStrictEqual(createProfileSchemaEnums([profile1, profile2]), {\n\t\t\t\tvalues: [\n\t\t\t\t\tnull,\n\t\t\t\t\t'name',\n\t\t\t\t\t'foo'\n\t\t\t\t],\n\t\t\t\tmarkdownDescriptions: [\n\t\t\t\t\t'Automatically detect the default',\n\t\t\t\t\t'$(terminal) name\\n- path: path',\n\t\t\t\t\t'$(terminal) foo\\n- path: bar'\n\t\t\t\t]\n\t\t\t});\n\t\t});\n\t});\n});\n"],
  "mappings": "AAKA,SAAS,uBAAuB;AAChC,SAAS,eAAe;AACxB,SAAS,+CAA+C;AACxD,SAAS,wBAAwB;AACjC,SAAS,gCAAgC;AAEzC,MAAM,oBAAoB,MAAM;AAC/B,0CAAwC;AAExC,QAAM,4BAA4B,MAAM;AACvC,SAAK,2DAA2D,MAAM;AACrE,sBAAgB,yBAAyB,CAAC,CAAC,GAAG;AAAA,QAC7C,QAAQ;AAAA,UACP;AAAA,QACD;AAAA,QACA,sBAAsB;AAAA,UACrB;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF,CAAC;AACD,SAAK,0DAA0D,MAAM;AACpE,YAAM,UAA4B;AAAA,QACjC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,WAAW;AAAA,MACZ;AACA,sBAAgB,yBAAyB,CAAC,OAAO,CAAC,GAAG;AAAA,QACpD,QAAQ;AAAA,UACP;AAAA,UACA;AAAA,QACD;AAAA,QACA,sBAAsB;AAAA,UACrB;AAAA,UACA;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF,CAAC;AACD,SAAK,uCAAuC,MAAM;AACjD,YAAM,UAA4B;AAAA,QACjC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,WAAW;AAAA,QACX,MAAM,CAAC,KAAK,GAAG;AAAA,QACf,OAAO;AAAA,QACP,KAAK;AAAA,UACJ,GAAG;AAAA,UACH,GAAG;AAAA,QACJ;AAAA,QACA,MAAM,QAAQ;AAAA,QACd,cAAc;AAAA,MACf;AACA,sBAAgB,yBAAyB,CAAC,OAAO,CAAC,GAAG;AAAA,QACpD,QAAQ;AAAA,UACP;AAAA,UACA;AAAA,QACD;AAAA,QACA,sBAAsB;AAAA,UACrB;AAAA,UACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF,CAAC;AACD,SAAK,qEAAqE,MAAM;AAC/E,YAAM,WAA6B;AAAA,QAClC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,WAAW;AAAA,MACZ;AACA,YAAM,WAA6B;AAAA,QAClC,aAAa;AAAA,QACb,MAAM;AAAA,QACN,WAAW;AAAA,MACZ;AACA,sBAAgB,yBAAyB,CAAC,UAAU,QAAQ,CAAC,GAAG;AAAA,QAC/D,QAAQ;AAAA,UACP;AAAA,UACA;AAAA,UACA;AAAA,QACD;AAAA,QACA,sBAAsB;AAAA,UACrB;AAAA,UACA;AAAA,UACA;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF,CAAC;AAAA,EACF,CAAC;AACF,CAAC;",
  "names": []
}
