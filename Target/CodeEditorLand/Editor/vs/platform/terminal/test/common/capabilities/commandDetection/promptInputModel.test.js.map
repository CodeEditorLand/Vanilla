{
  "version": 3,
  "sources": ["../../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/terminal/test/common/capabilities/commandDetection/promptInputModel.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/* eslint-disable local/code-import-patterns */\n\nimport type { Terminal } from '@xterm/xterm';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../../../base/test/common/utils.js';\nimport { NullLogService } from '../../../../../log/common/log.js';\nimport { PromptInputModel, type IPromptInputModelState } from '../../../../common/capabilities/commandDetection/promptInputModel.js';\nimport { Emitter } from '../../../../../../base/common/event.js';\nimport type { ITerminalCommand } from '../../../../common/capabilities/capabilities.js';\nimport { notDeepStrictEqual, strictEqual } from 'assert';\nimport { timeout } from '../../../../../../base/common/async.js';\nimport { importAMDNodeModule } from '../../../../../../amdX.js';\n\nsuite('PromptInputModel', () => {\n\tconst store = ensureNoDisposablesAreLeakedInTestSuite();\n\n\tlet promptInputModel: PromptInputModel;\n\tlet xterm: Terminal;\n\tlet onCommandStart: Emitter<ITerminalCommand>;\n\tlet onCommandExecuted: Emitter<ITerminalCommand>;\n\n\tasync function writePromise(data: string) {\n\t\tawait new Promise<void>(r => xterm.write(data, r));\n\t}\n\n\tfunction fireCommandStart() {\n\t\tonCommandStart.fire({ marker: xterm.registerMarker() } as ITerminalCommand);\n\t}\n\n\tfunction fireCommandExecuted() {\n\t\tonCommandExecuted.fire(null!);\n\t}\n\n\tfunction setContinuationPrompt(prompt: string) {\n\t\tpromptInputModel.setContinuationPrompt(prompt);\n\t}\n\n\tasync function assertPromptInput(valueWithCursor: string) {\n\t\tawait timeout(0);\n\n\t\tif (promptInputModel.cursorIndex !== -1 && !valueWithCursor.includes('|')) {\n\t\t\tthrow new Error('assertPromptInput must contain | character');\n\t\t}\n\n\t\tconst actualValueWithCursor = promptInputModel.getCombinedString();\n\t\tstrictEqual(\n\t\t\tactualValueWithCursor,\n\t\t\tvalueWithCursor.replaceAll('\\n', '\\u23CE')\n\t\t);\n\n\t\t// This is required to ensure the cursor index is correctly resolved for non-ascii characters\n\t\tconst value = valueWithCursor.replace(/[\\|\\[\\]]/g, '');\n\t\tconst cursorIndex = valueWithCursor.indexOf('|');\n\t\tstrictEqual(promptInputModel.value, value);\n\t\tstrictEqual(promptInputModel.cursorIndex, cursorIndex, `value=${promptInputModel.value}`);\n\t}\n\n\tsetup(async () => {\n\t\tconst TerminalCtor = (await importAMDNodeModule<typeof import('@xterm/xterm')>('@xterm/xterm', 'lib/xterm.js')).Terminal;\n\t\txterm = store.add(new TerminalCtor({ allowProposedApi: true }));\n\t\tonCommandStart = store.add(new Emitter());\n\t\tonCommandExecuted = store.add(new Emitter());\n\t\tpromptInputModel = store.add(new PromptInputModel(xterm, onCommandStart.event, onCommandExecuted.event, new NullLogService));\n\t});\n\n\ttest('basic input and execute', async () => {\n\t\tawait writePromise('$ ');\n\t\tfireCommandStart();\n\t\tawait assertPromptInput('|');\n\n\t\tawait writePromise('foo bar');\n\t\tawait assertPromptInput('foo bar|');\n\n\t\tawait writePromise('\\r\\n');\n\t\tfireCommandExecuted();\n\t\tawait assertPromptInput('foo bar');\n\n\t\tawait writePromise('(command output)\\r\\n$ ');\n\t\tfireCommandStart();\n\t\tawait assertPromptInput('|');\n\t});\n\n\ttest('should not fire onDidChangeInput events when nothing changes', async () => {\n\t\tconst events: IPromptInputModelState[] = [];\n\t\tstore.add(promptInputModel.onDidChangeInput(e => events.push(e)));\n\n\t\tawait writePromise('$ ');\n\t\tfireCommandStart();\n\t\tawait assertPromptInput('|');\n\n\t\tawait writePromise('foo');\n\t\tawait assertPromptInput('foo|');\n\n\t\tawait writePromise(' bar');\n\t\tawait assertPromptInput('foo bar|');\n\n\t\tawait writePromise('\\r\\n');\n\t\tfireCommandExecuted();\n\t\tawait assertPromptInput('foo bar');\n\n\t\tawait writePromise('$ ');\n\t\tfireCommandStart();\n\t\tawait assertPromptInput('|');\n\n\t\tawait writePromise('foo bar');\n\t\tawait assertPromptInput('foo bar|');\n\n\t\tfor (let i = 0; i < events.length - 1; i++) {\n\t\t\tnotDeepStrictEqual(events[i], events[i + 1], 'not adjacent events should fire with the same value');\n\t\t}\n\t});\n\n\ttest('should fire onDidInterrupt followed by onDidFinish when ctrl+c is pressed', async () => {\n\t\tawait writePromise('$ ');\n\t\tfireCommandStart();\n\t\tawait assertPromptInput('|');\n\n\t\tawait writePromise('foo');\n\t\tawait assertPromptInput('foo|');\n\n\t\tawait new Promise<void>(r => {\n\t\t\tstore.add(promptInputModel.onDidInterrupt(() => {\n\t\t\t\t// Fire onDidFinishInput immediately after onDidInterrupt\n\t\t\t\tstore.add(promptInputModel.onDidFinishInput(() => {\n\t\t\t\t\tr();\n\t\t\t\t}));\n\t\t\t}));\n\t\t\txterm.input('\\x03');\n\t\t\twritePromise('^C').then(() => fireCommandExecuted());\n\t\t});\n\t});\n\n\ttest('cursor navigation', async () => {\n\t\tawait writePromise('$ ');\n\t\tfireCommandStart();\n\t\tawait assertPromptInput('|');\n\n\t\tawait writePromise('foo bar');\n\t\tawait assertPromptInput('foo bar|');\n\n\t\tawait writePromise('\\x1b[3D');\n\t\tawait assertPromptInput('foo |bar');\n\n\t\tawait writePromise('\\x1b[4D');\n\t\tawait assertPromptInput('|foo bar');\n\n\t\tawait writePromise('\\x1b[3C');\n\t\tawait assertPromptInput('foo| bar');\n\n\t\tawait writePromise('\\x1b[4C');\n\t\tawait assertPromptInput('foo bar|');\n\n\t\tawait writePromise('\\x1b[D');\n\t\tawait assertPromptInput('foo ba|r');\n\n\t\tawait writePromise('\\x1b[C');\n\t\tawait assertPromptInput('foo bar|');\n\t});\n\n\ttest('ghost text', async () => {\n\t\tawait writePromise('$ ');\n\t\tfireCommandStart();\n\t\tawait assertPromptInput('|');\n\n\t\tawait writePromise('foo\\x1b[2m bar\\x1b[0m\\x1b[4D');\n\t\tawait assertPromptInput('foo|[ bar]');\n\n\t\tawait writePromise('\\x1b[2D');\n\t\tawait assertPromptInput('f|oo[ bar]');\n\t});\n\n\ttest('wide input (Korean)', async () => {\n\t\tawait writePromise('$ ');\n\t\tfireCommandStart();\n\t\tawait assertPromptInput('|');\n\n\t\tawait writePromise('\uC548\uC601');\n\t\tawait assertPromptInput('\uC548\uC601|');\n\n\t\tawait writePromise('\\r\\n\uCEF4\uD4E8\uD130');\n\t\tawait assertPromptInput('\uC548\uC601\\n\uCEF4\uD4E8\uD130|');\n\n\t\tawait writePromise('\\r\\n\uC0AC\uB78C');\n\t\tawait assertPromptInput('\uC548\uC601\\n\uCEF4\uD4E8\uD130\\n\uC0AC\uB78C|');\n\n\t\tawait writePromise('\\x1b[G');\n\t\tawait assertPromptInput('\uC548\uC601\\n\uCEF4\uD4E8\uD130\\n|\uC0AC\uB78C');\n\n\t\tawait writePromise('\\x1b[A');\n\t\tawait assertPromptInput('\uC548\uC601\\n|\uCEF4\uD4E8\uD130\\n\uC0AC\uB78C');\n\n\t\tawait writePromise('\\x1b[4C');\n\t\tawait assertPromptInput('\uC548\uC601\\n\uCEF4\uD4E8|\uD130\\n\uC0AC\uB78C');\n\n\t\tawait writePromise('\\x1b[1;4H');\n\t\tawait assertPromptInput('\uC548|\uC601\\n\uCEF4\uD4E8\uD130\\n\uC0AC\uB78C');\n\n\t\tawait writePromise('\\x1b[D');\n\t\tawait assertPromptInput('|\uC548\uC601\\n\uCEF4\uD4E8\uD130\\n\uC0AC\uB78C');\n\t});\n\n\ttest('emoji input', async () => {\n\t\tawait writePromise('$ ');\n\t\tfireCommandStart();\n\t\tawait assertPromptInput('|');\n\n\t\tawait writePromise('\u270C\uFE0F\uD83D\uDC4D');\n\t\tawait assertPromptInput('\u270C\uFE0F\uD83D\uDC4D|');\n\n\t\tawait writePromise('\\r\\n\uD83D\uDE0E\uD83D\uDE15\uD83D\uDE05');\n\t\tawait assertPromptInput('\u270C\uFE0F\uD83D\uDC4D\\n\uD83D\uDE0E\uD83D\uDE15\uD83D\uDE05|');\n\n\t\tawait writePromise('\\r\\n\uD83E\uDD14\uD83E\uDD37\uD83D\uDE29');\n\t\tawait assertPromptInput('\u270C\uFE0F\uD83D\uDC4D\\n\uD83D\uDE0E\uD83D\uDE15\uD83D\uDE05\\n\uD83E\uDD14\uD83E\uDD37\uD83D\uDE29|');\n\n\t\tawait writePromise('\\x1b[G');\n\t\tawait assertPromptInput('\u270C\uFE0F\uD83D\uDC4D\\n\uD83D\uDE0E\uD83D\uDE15\uD83D\uDE05\\n|\uD83E\uDD14\uD83E\uDD37\uD83D\uDE29');\n\n\t\tawait writePromise('\\x1b[A');\n\t\tawait assertPromptInput('\u270C\uFE0F\uD83D\uDC4D\\n|\uD83D\uDE0E\uD83D\uDE15\uD83D\uDE05\\n\uD83E\uDD14\uD83E\uDD37\uD83D\uDE29');\n\n\t\tawait writePromise('\\x1b[2C');\n\t\tawait assertPromptInput('\u270C\uFE0F\uD83D\uDC4D\\n\uD83D\uDE0E\uD83D\uDE15|\uD83D\uDE05\\n\uD83E\uDD14\uD83E\uDD37\uD83D\uDE29');\n\n\t\tawait writePromise('\\x1b[1;4H');\n\t\tawait assertPromptInput('\u270C\uFE0F|\uD83D\uDC4D\\n\uD83D\uDE0E\uD83D\uDE15\uD83D\uDE05\\n\uD83E\uDD14\uD83E\uDD37\uD83D\uDE29');\n\n\t\tawait writePromise('\\x1b[D');\n\t\tawait assertPromptInput('|\u270C\uFE0F\uD83D\uDC4D\\n\uD83D\uDE0E\uD83D\uDE15\uD83D\uDE05\\n\uD83E\uDD14\uD83E\uDD37\uD83D\uDE29');\n\t});\n\n\tsuite('trailing whitespace', () => {\n\t\ttest('delete whitespace with backspace', async () => {\n\t\t\tawait writePromise('$ ');\n\t\t\tfireCommandStart();\n\t\t\tawait assertPromptInput('|');\n\n\t\t\tawait writePromise(' ');\n\t\t\tawait assertPromptInput(` |`);\n\n\t\t\txterm.input('\\x7F', true); // Backspace\n\t\t\tawait writePromise('\\x1b[D');\n\t\t\tawait assertPromptInput('|');\n\n\t\t\txterm.input(' '.repeat(4), true);\n\t\t\tawait writePromise(' '.repeat(4));\n\t\t\tawait assertPromptInput(`    |`);\n\n\t\t\txterm.input('\\x1b[D'.repeat(2), true); // Left\n\t\t\tawait writePromise('\\x1b[2D');\n\t\t\tawait assertPromptInput(`  |  `);\n\n\t\t\txterm.input('\\x7F', true); // Backspace\n\t\t\tawait writePromise('\\x1b[D');\n\t\t\tawait assertPromptInput(` |  `);\n\n\t\t\txterm.input('\\x7F', true); // Backspace\n\t\t\tawait writePromise('\\x1b[D');\n\t\t\tawait assertPromptInput(`|  `);\n\n\t\t\txterm.input(' ', true);\n\t\t\tawait writePromise(' ');\n\t\t\tawait assertPromptInput(` |  `);\n\n\t\t\txterm.input(' ', true);\n\t\t\tawait writePromise(' ');\n\t\t\tawait assertPromptInput(`  |  `);\n\n\t\t\txterm.input('\\x1b[C', true); // Right\n\t\t\tawait writePromise('\\x1b[C');\n\t\t\tawait assertPromptInput(`   | `);\n\n\t\t\txterm.input('a', true);\n\t\t\tawait writePromise('a');\n\t\t\tawait assertPromptInput(`   a| `);\n\n\t\t\txterm.input('\\x7F', true); // Backspace\n\t\t\tawait writePromise('\\x1b[D\\x1b[K');\n\t\t\tawait assertPromptInput(`   | `);\n\n\t\t\txterm.input('\\x1b[D'.repeat(2), true); // Left\n\t\t\tawait writePromise('\\x1b[2D');\n\t\t\tawait assertPromptInput(` |   `);\n\n\t\t\txterm.input('\\x1b[3~', true); // Delete\n\t\t\tawait writePromise('');\n\t\t\tawait assertPromptInput(` |  `);\n\t\t});\n\n\t\t// TODO: This doesn't work correctly but it doesn't matter too much as it only happens when\n\t\t// there is a lot of whitespace at the end of a prompt input\n\t\ttest.skip('track whitespace when ConPTY deletes whitespace unexpectedly', async () => {\n\t\t\tawait writePromise('$ ');\n\t\t\tfireCommandStart();\n\t\t\tawait assertPromptInput('|');\n\n\t\t\txterm.input('ls', true);\n\t\t\tawait writePromise('ls');\n\t\t\tawait assertPromptInput(`ls|`);\n\n\t\t\txterm.input(' '.repeat(4), true);\n\t\t\tawait writePromise(' '.repeat(4));\n\t\t\tawait assertPromptInput(`ls    |`);\n\n\t\t\txterm.input(' ', true);\n\t\t\tawait writePromise('\\x1b[4D\\x1b[5X\\x1b[5C'); // Cursor left x(N-1), delete xN, cursor right xN\n\t\t\tawait assertPromptInput(`ls     |`);\n\t\t});\n\n\t\ttest('track whitespace beyond cursor', async () => {\n\t\t\tawait writePromise('$ ');\n\t\t\tfireCommandStart();\n\t\t\tawait assertPromptInput('|');\n\n\t\t\tawait writePromise(' '.repeat(8));\n\t\t\tawait assertPromptInput(`${' '.repeat(8)}|`);\n\n\t\t\tawait writePromise('\\x1b[4D');\n\t\t\tawait assertPromptInput(`${' '.repeat(4)}|${' '.repeat(4)}`);\n\t\t});\n\t});\n\n\tsuite('multi-line', () => {\n\t\ttest('basic 2 line', async () => {\n\t\t\tawait writePromise('$ ');\n\t\t\tfireCommandStart();\n\t\t\tawait assertPromptInput('|');\n\n\t\t\tawait writePromise('echo \"a');\n\t\t\tawait assertPromptInput(`echo \"a|`);\n\n\t\t\tawait writePromise('\\n\\r\\\u2219 ');\n\t\t\tsetContinuationPrompt('\u2219 ');\n\t\t\tawait assertPromptInput(`echo \"a\\n|`);\n\n\t\t\tawait writePromise('b');\n\t\t\tawait assertPromptInput(`echo \"a\\nb|`);\n\t\t});\n\n\t\ttest('basic 3 line', async () => {\n\t\t\tawait writePromise('$ ');\n\t\t\tfireCommandStart();\n\t\t\tawait assertPromptInput('|');\n\n\t\t\tawait writePromise('echo \"a');\n\t\t\tawait assertPromptInput(`echo \"a|`);\n\n\t\t\tawait writePromise('\\n\\r\\\u2219 ');\n\t\t\tsetContinuationPrompt('\u2219 ');\n\t\t\tawait assertPromptInput(`echo \"a\\n|`);\n\n\t\t\tawait writePromise('b');\n\t\t\tawait assertPromptInput(`echo \"a\\nb|`);\n\n\t\t\tawait writePromise('\\n\\r\\\u2219 ');\n\t\t\tsetContinuationPrompt('\u2219 ');\n\t\t\tawait assertPromptInput(`echo \"a\\nb\\n|`);\n\n\t\t\tawait writePromise('c');\n\t\t\tawait assertPromptInput(`echo \"a\\nb\\nc|`);\n\t\t});\n\n\t\ttest('navigate left in multi-line', async () => {\n\t\t\tawait writePromise('$ ');\n\t\t\tfireCommandStart();\n\t\t\tawait assertPromptInput('|');\n\n\t\t\tawait writePromise('echo \"a');\n\t\t\tawait assertPromptInput(`echo \"a|`);\n\n\t\t\tawait writePromise('\\n\\r\\\u2219 ');\n\t\t\tsetContinuationPrompt('\u2219 ');\n\t\t\tawait assertPromptInput(`echo \"a\\n|`);\n\n\t\t\tawait writePromise('b');\n\t\t\tawait assertPromptInput(`echo \"a\\nb|`);\n\n\t\t\tawait writePromise('\\x1b[D');\n\t\t\tawait assertPromptInput(`echo \"a\\n|b`);\n\n\t\t\tawait writePromise('\\x1b[@c');\n\t\t\tawait assertPromptInput(`echo \"a\\nc|b`);\n\n\t\t\tawait writePromise('\\x1b[K\\n\\r\\\u2219 ');\n\t\t\tawait assertPromptInput(`echo \"a\\nc\\n|`);\n\n\t\t\tawait writePromise('b');\n\t\t\tawait assertPromptInput(`echo \"a\\nc\\nb|`);\n\n\t\t\tawait writePromise(' foo');\n\t\t\tawait assertPromptInput(`echo \"a\\nc\\nb foo|`);\n\n\t\t\tawait writePromise('\\x1b[3D');\n\t\t\tawait assertPromptInput(`echo \"a\\nc\\nb |foo`);\n\t\t});\n\n\t\ttest('navigate up in multi-line', async () => {\n\t\t\tawait writePromise('$ ');\n\t\t\tfireCommandStart();\n\t\t\tawait assertPromptInput('|');\n\n\t\t\tawait writePromise('echo \"foo');\n\t\t\tawait assertPromptInput(`echo \"foo|`);\n\n\t\t\tawait writePromise('\\n\\r\\\u2219 ');\n\t\t\tsetContinuationPrompt('\u2219 ');\n\t\t\tawait assertPromptInput(`echo \"foo\\n|`);\n\n\t\t\tawait writePromise('bar');\n\t\t\tawait assertPromptInput(`echo \"foo\\nbar|`);\n\n\t\t\tawait writePromise('\\n\\r\\\u2219 ');\n\t\t\tsetContinuationPrompt('\u2219 ');\n\t\t\tawait assertPromptInput(`echo \"foo\\nbar\\n|`);\n\n\t\t\tawait writePromise('baz');\n\t\t\tawait assertPromptInput(`echo \"foo\\nbar\\nbaz|`);\n\n\t\t\tawait writePromise('\\x1b[A');\n\t\t\tawait assertPromptInput(`echo \"foo\\nbar|\\nbaz`);\n\n\t\t\tawait writePromise('\\x1b[D');\n\t\t\tawait assertPromptInput(`echo \"foo\\nba|r\\nbaz`);\n\n\t\t\tawait writePromise('\\x1b[D');\n\t\t\tawait assertPromptInput(`echo \"foo\\nb|ar\\nbaz`);\n\n\t\t\tawait writePromise('\\x1b[D');\n\t\t\tawait assertPromptInput(`echo \"foo\\n|bar\\nbaz`);\n\n\t\t\tawait writePromise('\\x1b[1;9H');\n\t\t\tawait assertPromptInput(`echo \"|foo\\nbar\\nbaz`);\n\n\t\t\tawait writePromise('\\x1b[C');\n\t\t\tawait assertPromptInput(`echo \"f|oo\\nbar\\nbaz`);\n\n\t\t\tawait writePromise('\\x1b[C');\n\t\t\tawait assertPromptInput(`echo \"fo|o\\nbar\\nbaz`);\n\n\t\t\tawait writePromise('\\x1b[C');\n\t\t\tawait assertPromptInput(`echo \"foo|\\nbar\\nbaz`);\n\t\t});\n\n\t\ttest('navigating up when first line contains invalid/stale trailing whitespace', async () => {\n\t\t\tawait writePromise('$ ');\n\t\t\tfireCommandStart();\n\t\t\tawait assertPromptInput('|');\n\n\t\t\tawait writePromise('echo \"foo      \\x1b[6D');\n\t\t\tawait assertPromptInput(`echo \"foo|`);\n\n\t\t\tawait writePromise('\\n\\r\\\u2219 ');\n\t\t\tsetContinuationPrompt('\u2219 ');\n\t\t\tawait assertPromptInput(`echo \"foo\\n|`);\n\n\t\t\tawait writePromise('bar');\n\t\t\tawait assertPromptInput(`echo \"foo\\nbar|`);\n\n\t\t\tawait writePromise('\\x1b[D');\n\t\t\tawait assertPromptInput(`echo \"foo\\nba|r`);\n\n\t\t\tawait writePromise('\\x1b[D');\n\t\t\tawait assertPromptInput(`echo \"foo\\nb|ar`);\n\n\t\t\tawait writePromise('\\x1b[D');\n\t\t\tawait assertPromptInput(`echo \"foo\\n|bar`);\n\t\t});\n\t});\n\n\tsuite('wrapped line (non-continuation)', () => {\n\t\ttest('basic wrapped line', async () => {\n\t\t\txterm.resize(5, 10);\n\n\t\t\tawait writePromise('$ ');\n\t\t\tfireCommandStart();\n\t\t\tawait assertPromptInput('|');\n\n\t\t\tawait writePromise('ech');\n\t\t\tawait assertPromptInput(`ech|`);\n\n\t\t\tawait writePromise('o ');\n\t\t\tawait assertPromptInput(`echo |`);\n\n\t\t\tawait writePromise('\"a\"');\n\t\t\t// HACK: Trailing whitespace is due to flaky detection in wrapped lines (but it doesn't matter much)\n\t\t\tawait assertPromptInput(`echo \"a\"| `);\n\t\t});\n\t});\n\n\t// To \"record a session\" for these tests:\n\t// - Enable debug logging\n\t// - Open and clear Terminal output channel\n\t// - Open terminal and perform the test\n\t// - Extract all \"parsing data\" lines from the terminal\n\tsuite('recorded sessions', () => {\n\t\tasync function replayEvents(events: string[]) {\n\t\t\tfor (const data of events) {\n\t\t\t\tawait writePromise(data);\n\t\t\t}\n\t\t}\n\n\t\tsuite('Windows 11 (10.0.22621.3447), pwsh 7.4.2, starship prompt 1.10.2', () => {\n\t\t\ttest('input with ignored ghost text', async () => {\n\t\t\t\tawait replayEvents([\n\t\t\t\t\t'\u001B[?25l\u001B[2J\u001B[m\u001B[H\u001B]0;C:\\\\Program Files\\\\WindowsApps\\\\Microsoft.PowerShell_7.4.2.0_x64__8wekyb3d8bbwe\\\\pwsh.exe\u0007\u001B[?25h',\n\t\t\t\t\t'\u001B[?25l\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\u001B[H\u001B[?25h',\n\t\t\t\t\t'\u001B]633;P;IsWindows=True\u0007',\n\t\t\t\t\t'\u001B]633;P;ContinuationPrompt=\\x1b[38\\x3b5\\x3b8m\u2219\\x1b[0m \u0007',\n\t\t\t\t\t'\u001B]633;A\u0007\u001B]633;P;Cwd=C:\\x5cGithub\\x5cmicrosoft\\x5cvscode\u0007\u001B]633;B\u0007',\n\t\t\t\t\t'\u001B[34m\\r\\n\uE0B6\u001B[38;2;17;17;17m\u001B[44m03:13:47 \u001B[34m\u001B[41m\uE0B0 \u001B[38;2;17;17;17mvscode \u001B[31m\u001B[43m\uE0B0 \u001B[38;2;17;17;17m\uE0A0 tyriar/prompt_input_model \u001B[33m\u001B[46m\uE0B0 \u001B[38;2;17;17;17m$\u21E1 \u001B[36m\u001B[49m\uE0B0 \u001B[mvia \u001B[32m\u001B[1m\uE718 v18.18.2 \\r\\n\u276F\u001B[m ',\n\t\t\t\t]);\n\t\t\t\tfireCommandStart();\n\t\t\t\tawait assertPromptInput('|');\n\n\t\t\t\tawait replayEvents([\n\t\t\t\t\t'\u001B[?25l\u001B[93mf\u001B[97m\u001B[2m\u001B[3makecommand\u001B[3;4H\u001B[?25h',\n\t\t\t\t\t'\u001B[m',\n\t\t\t\t\t'\u001B[93m\bfo\u001B[9X',\n\t\t\t\t\t'\u001B[m',\n\t\t\t\t\t'\u001B[?25l\u001B[93m\u001B[3;3Hfoo\u001B[?25h',\n\t\t\t\t\t'\u001B[m',\n\t\t\t\t]);\n\t\t\t\tawait assertPromptInput('foo|');\n\t\t\t});\n\t\t\ttest('input with accepted and run ghost text', async () => {\n\t\t\t\tawait replayEvents([\n\t\t\t\t\t'\u001B[?25l\u001B[2J\u001B[m\u001B[H\u001B]0;C:\\\\Program Files\\\\WindowsApps\\\\Microsoft.PowerShell_7.4.2.0_x64__8wekyb3d8bbwe\\\\pwsh.exe\u0007\u001B[?25h',\n\t\t\t\t\t'\u001B[?25l\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\u001B[H\u001B[?25h',\n\t\t\t\t\t'\u001B]633;P;IsWindows=True\u0007',\n\t\t\t\t\t'\u001B]633;P;ContinuationPrompt=\\x1b[38\\x3b5\\x3b8m\u2219\\x1b[0m \u0007',\n\t\t\t\t\t'\u001B]633;A\u0007\u001B]633;P;Cwd=C:\\x5cGithub\\x5cmicrosoft\\x5cvscode\u0007\u001B]633;B\u0007',\n\t\t\t\t\t'\u001B[34m\\r\\n\uE0B6\u001B[38;2;17;17;17m\u001B[44m03:41:36 \u001B[34m\u001B[41m\uE0B0 \u001B[38;2;17;17;17mvscode \u001B[31m\u001B[43m\uE0B0 \u001B[38;2;17;17;17m\uE0A0 tyriar/prompt_input_model \u001B[33m\u001B[46m\uE0B0 \u001B[38;2;17;17;17m$ \u001B[36m\u001B[49m\uE0B0 \u001B[mvia \u001B[32m\u001B[1m\uE718 v18.18.2 \\r\\n\u276F\u001B[m ',\n\t\t\t\t]);\n\t\t\t\tpromptInputModel.setContinuationPrompt('\u2219 ');\n\t\t\t\tfireCommandStart();\n\t\t\t\tawait assertPromptInput('|');\n\n\t\t\t\tawait replayEvents([\n\t\t\t\t\t'\u001B[?25l\u001B[93me\u001B[97m\u001B[2m\u001B[3mcho \"hello world\"\u001B[3;4H\u001B[?25h',\n\t\t\t\t\t'\u001B[m',\n\t\t\t\t]);\n\t\t\t\tawait assertPromptInput('e|[cho \"hello world\"]');\n\n\t\t\t\tawait replayEvents([\n\t\t\t\t\t'\u001B[?25l\u001B[93m\bec\u001B[97m\u001B[2m\u001B[3mho \"hello world\"\u001B[3;5H\u001B[?25h',\n\t\t\t\t\t'\u001B[m',\n\t\t\t\t]);\n\t\t\t\tawait assertPromptInput('ec|[ho \"hello world\"]');\n\n\t\t\t\tawait replayEvents([\n\t\t\t\t\t'\u001B[?25l\u001B[93m\u001B[3;3Hech\u001B[97m\u001B[2m\u001B[3mo \"hello world\"\u001B[3;6H\u001B[?25h',\n\t\t\t\t\t'\u001B[m',\n\t\t\t\t]);\n\t\t\t\tawait assertPromptInput('ech|[o \"hello world\"]');\n\n\t\t\t\tawait replayEvents([\n\t\t\t\t\t'\u001B[?25l\u001B[93m\u001B[3;3Hecho\u001B[97m\u001B[2m\u001B[3m \"hello world\"\u001B[3;7H\u001B[?25h',\n\t\t\t\t\t'\u001B[m',\n\t\t\t\t]);\n\t\t\t\tawait assertPromptInput('echo|[ \"hello world\"]');\n\n\t\t\t\tawait replayEvents([\n\t\t\t\t\t'\u001B[?25l\u001B[93m\u001B[3;3Hecho \u001B[97m\u001B[2m\u001B[3m\"hello world\"\u001B[3;8H\u001B[?25h',\n\t\t\t\t\t'\u001B[m',\n\t\t\t\t]);\n\t\t\t\tawait assertPromptInput('echo |[\"hello world\"]');\n\n\t\t\t\tawait replayEvents([\n\t\t\t\t\t'\u001B[?25l\u001B[93m\u001B[3;3Hecho \u001B[36m\"hello world\"\u001B[?25h',\n\t\t\t\t\t'\u001B[m',\n\t\t\t\t]);\n\t\t\t\tawait assertPromptInput('echo \"hello world\"|');\n\n\t\t\t\tawait replayEvents([\n\t\t\t\t\t'\u001B]633;E;echo \"hello world\";ff464d39-bc80-4bae-9ead-b1cafc4adf6f\u0007\u001B]633;C\u0007',\n\t\t\t\t]);\n\t\t\t\tfireCommandExecuted();\n\t\t\t\tawait assertPromptInput('echo \"hello world\"');\n\n\t\t\t\tawait replayEvents([\n\t\t\t\t\t'\\r\\n',\n\t\t\t\t\t'hello world\\r\\n',\n\t\t\t\t]);\n\t\t\t\tawait assertPromptInput('echo \"hello world\"');\n\n\t\t\t\tawait replayEvents([\n\t\t\t\t\t'\u001B]633;D;0\u0007\u001B]633;A\u0007\u001B]633;P;Cwd=C:\\x5cGithub\\x5cmicrosoft\\x5cvscode\u0007\u001B]633;B\u0007',\n\t\t\t\t\t'\u001B[34m\\r\\n\uE0B6\u001B[38;2;17;17;17m\u001B[44m03:41:42 \u001B[34m\u001B[41m\uE0B0 \u001B[38;2;17;17;17mvscode \u001B[31m\u001B[43m\uE0B0 \u001B[38;2;17;17;17m\uE0A0 tyriar/prompt_input_model \u001B[33m\u001B[46m\uE0B0 \u001B[38;2;17;17;17m$ \u001B[36m\u001B[49m\uE0B0 \u001B[mvia \u001B[32m\u001B[1m\uE718 v18.18.2 \\r\\n\u276F\u001B[m ',\n\t\t\t\t]);\n\t\t\t\tfireCommandStart();\n\t\t\t\tawait assertPromptInput('|');\n\t\t\t});\n\n\t\t\ttest('input, go to start (ctrl+home), delete word in front (ctrl+delete)', async () => {\n\t\t\t\tawait replayEvents([\n\t\t\t\t\t'\u001B[?25l\u001B[2J\u001B[m\u001B[H\u001B]0;C:\\Program Files\\WindowsApps\\Microsoft.PowerShell_7.4.2.0_x64__8wekyb3d8bbwe\\pwsh.exe\u0007\u001B[?25h',\n\t\t\t\t\t'\u001B[?25l\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\\r\\n\u001B[K\u001B[H\u001B[?25h',\n\t\t\t\t\t'\u001B]633;P;IsWindows=True\u0007',\n\t\t\t\t\t'\u001B]633;P;ContinuationPrompt=\\x1b[38\\x3b5\\x3b8m\u2219\\x1b[0m \u0007',\n\t\t\t\t\t'\u001B]633;A\u0007\u001B]633;P;Cwd=C:\\x5cGithub\\x5cmicrosoft\\x5cvscode\u0007\u001B]633;B\u0007',\n\t\t\t\t\t'\u001B[34m\\r\\n\uE0B6\u001B[38;2;17;17;17m\u001B[44m16:07:06 \u001B[34m\u001B[41m\uE0B0 \u001B[38;2;17;17;17mvscode \u001B[31m\u001B[43m\uE0B0 \u001B[38;2;17;17;17m\uE0A0 tyriar/210662 \u001B[33m\u001B[46m\uE0B0 \u001B[38;2;17;17;17m$! \u001B[36m\u001B[49m\uE0B0 \u001B[mvia \u001B[32m\u001B[1m\uE718 v18.18.2 \\r\\n\u276F\u001B[m ',\n\t\t\t\t]);\n\t\t\t\tfireCommandStart();\n\t\t\t\tawait assertPromptInput('|');\n\n\t\t\t\tawait replayEvents([\n\t\t\t\t\t'\u001B[?25l\u001B[93mG\u001B[97m\u001B[2m\u001B[3mit push\u001B[3;4H\u001B[?25h',\n\t\t\t\t\t'\u001B[m',\n\t\t\t\t\t'\u001B[?25l\u001B[93m\bGe\u001B[97m\u001B[2m\u001B[3mt-ChildItem -Path a\u001B[3;5H\u001B[?25h',\n\t\t\t\t\t'\u001B[m',\n\t\t\t\t\t'\u001B[?25l\u001B[93m\u001B[3;3HGet\u001B[97m\u001B[2m\u001B[3m-ChildItem -Path a\u001B[3;6H\u001B[?25h',\n\t\t\t\t]);\n\t\t\t\tawait assertPromptInput('Get|[-ChildItem -Path a]');\n\n\t\t\t\tawait replayEvents([\n\t\t\t\t\t'\u001B[m',\n\t\t\t\t\t'\u001B[?25l\u001B[3;3H\u001B[?25h',\n\t\t\t\t\t'\u001B[21X',\n\t\t\t\t]);\n\n\t\t\t\t// Don't force a sync, the prompt input model should update by itself\n\t\t\t\tawait timeout(0);\n\t\t\t\tconst actualValueWithCursor = promptInputModel.getCombinedString();\n\t\t\t\tstrictEqual(\n\t\t\t\t\tactualValueWithCursor,\n\t\t\t\t\t'|'.replaceAll('\\n', '\\u23CE')\n\t\t\t\t);\n\t\t\t});\n\t\t});\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
