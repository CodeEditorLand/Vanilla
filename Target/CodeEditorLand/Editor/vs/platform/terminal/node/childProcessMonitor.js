var d=Object.defineProperty;var l=Object.getOwnPropertyDescriptor;var c=(n,r,e,s)=>{for(var i=s>1?void 0:s?l(r,e):r,t=n.length-1,h;t>=0;t--)(h=n[t])&&(i=(s?h(r,e,i):h(i))||i);return s&&i&&d(r,e,i),i},a=(n,r)=>(e,s)=>r(e,s,n);import{debounce as m,throttle as p}from"../../../base/common/decorators.js";import{Emitter as f}from"../../../base/common/event.js";import{Disposable as g}from"../../../base/common/lifecycle.js";import{parse as v}from"../../../base/common/path.js";import"../../../base/common/processes.js";import{listProcesses as _}from"../../../base/node/ps.js";import{ILogService as u}from"../../log/common/log.js";var b=(e=>(e[e.InactiveThrottleDuration=5e3]="InactiveThrottleDuration",e[e.ActiveDebounceDuration=1e3]="ActiveDebounceDuration",e))(b||{});const C=[];let o=class extends g{constructor(e,s){super();this._pid=e;this._logService=s}_hasChildProcesses=!1;set hasChildProcesses(e){this._hasChildProcesses!==e&&(this._hasChildProcesses=e,this._logService.debug("ChildProcessMonitor: Has child processes changed",e),this._onDidChangeHasChildProcesses.fire(e))}get hasChildProcesses(){return this._hasChildProcesses}_onDidChangeHasChildProcesses=this._register(new f);onDidChangeHasChildProcesses=this._onDidChangeHasChildProcesses.event;handleInput(){this._refreshActive()}handleOutput(){this._refreshInactive()}async _refreshActive(){if(!this._store.isDisposed)try{const e=await _(this._pid);this.hasChildProcesses=this._processContainsChildren(e)}catch(e){this._logService.debug("ChildProcessMonitor: Fetching process tree failed",e)}}_refreshInactive(){this._refreshActive()}_processContainsChildren(e){if(!e.children)return!1;if(e.children.length===1){const s=e.children[0];let i;if(s.cmd.startsWith('"'))i=s.cmd.substring(1,s.cmd.indexOf('"',1));else{const t=s.cmd.indexOf(" ");t===-1?i=s.cmd:i=s.cmd.substring(0,t)}return C.indexOf(v(i).name)===-1}return e.children.length>0}};c([m(1e3)],o.prototype,"_refreshActive",1),c([p(5e3)],o.prototype,"_refreshInactive",1),o=c([a(1,u)],o);export{o as ChildProcessMonitor,C as ignoreProcessNames};
