var c=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var d=(i,t,e,n)=>{for(var r=n>1?void 0:n?m(t,e):t,l=i.length-1,h;l>=0;l--)(h=i[l])&&(r=(n?h(t,e,r):h(r))||r);return n&&r&&c(t,e,r),r};import{timeout as T}from"../../../../vs/base/common/async.js";import{debounce as f}from"../../../../vs/base/common/decorators.js";import{Emitter as u}from"../../../../vs/base/common/event.js";import{Disposable as g}from"../../../../vs/base/common/lifecycle.js";import{isWindows as p,platform as y}from"../../../../vs/base/common/platform.js";import{GeneralShellType as s,WindowsShellType as o}from"../../../../vs/platform/terminal/common/terminal.js";const S=["cmd.exe","powershell.exe","pwsh.exe","bash.exe","wsl.exe","ubuntu.exe","ubuntu1804.exe","kali.exe","debian.exe","opensuse-42.exe","sles-12.exe"];let a;class x extends g{constructor(e){super();this._rootProcessId=e;if(!p)throw new Error(`WindowsShellHelper cannot be instantiated on ${y}`);this._startMonitoringShell()}_currentRequest;_shellType;get shellType(){return this._shellType}_shellTitle="";get shellTitle(){return this._shellTitle}_onShellNameChanged=new u;get onShellNameChanged(){return this._onShellNameChanged.event}_onShellTypeChanged=new u;get onShellTypeChanged(){return this._onShellTypeChanged.event}async _startMonitoringShell(){this._store.isDisposed||this.checkShell()}async checkShell(){p&&(await T(300),this.getShellName().then(e=>{const n=this.getShellType(e);n!==this._shellType&&(this._onShellTypeChanged.fire(n),this._onShellNameChanged.fire(e),this._shellType=n,this._shellTitle=e)}))}traverseTree(e){if(!e)return"";if(S.indexOf(e.name)===-1||!e.children||e.children.length===0)return e.name;let n=0;for(;n<e.children.length;n++){const r=e.children[n];if(!r.children||r.children.length===0||r.children[0].name!=="conhost.exe")break}return n>=e.children.length?e.name:this.traverseTree(e.children[n])}async getShellName(){return this._store.isDisposed?Promise.resolve(""):this._currentRequest?this._currentRequest:(a||(a=await import("@vscode/windows-process-tree")),this._currentRequest=new Promise(e=>{a.getProcessTree(this._rootProcessId,n=>{const r=this.traverseTree(n);this._currentRequest=void 0,e(r)})}),this._currentRequest)}getShellType(e){switch(e.toLowerCase()){case"cmd.exe":return o.CommandPrompt;case"powershell.exe":case"pwsh.exe":return s.PowerShell;case"bash.exe":case"git-cmd.exe":return o.GitBash;case"julia.exe:":return s.Julia;case"nu.exe":return s.NuShell;case"wsl.exe":case"ubuntu.exe":case"ubuntu1804.exe":case"kali.exe":case"debian.exe":case"opensuse-42.exe":case"sles-12.exe":return o.Wsl;default:return e.match(/python(\d(\.\d{0,2})?)?\.exe/)?s.Python:void 0}}}d([f(500)],x.prototype,"checkShell",1);export{x as WindowsShellHelper};
