{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/clipboard/common/clipboardService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from '../../../base/common/uri.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\n\nexport const IClipboardService = createDecorator<IClipboardService>('clipboardService');\n\nexport interface IClipboardService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Writes text to the system clipboard.\n\t */\n\twriteText(text: string, type?: string): Promise<void>;\n\n\t/**\n\t * Reads the content of the clipboard in plain text\n\t */\n\treadText(type?: string): Promise<string>;\n\n\t/**\n\t * Reads text from the system find pasteboard.\n\t */\n\treadFindText(): Promise<string>;\n\n\t/**\n\t * Writes text to the system find pasteboard.\n\t */\n\twriteFindText(text: string): Promise<void>;\n\n\t/**\n\t * Writes resources to the system clipboard.\n\t */\n\twriteResources(resources: URI[]): Promise<void>;\n\n\t/**\n\t * Reads resources from the system clipboard.\n\t */\n\treadResources(): Promise<URI[]>;\n\n\t/**\n\t * Find out if resources are copied to the clipboard.\n\t */\n\thasResources(): Promise<boolean>;\n\n\t/**\n\t * Resets the internal state of the clipboard (if any) without touching the real clipboard.\n\t *\n\t * Used for implementations such as web which do not always support using the real clipboard.\n\t */\n\tclearInternalState?(): void;\n}\n"],
  "mappings": "AAKA,SAAS,WAAW;AACpB,SAAS,uBAAuB;AAEzB,MAAM,oBAAoB,gBAAmC,kBAAkB;",
  "names": []
}
