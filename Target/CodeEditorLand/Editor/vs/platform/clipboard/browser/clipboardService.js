var b=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var u=(d,o,e,r)=>{for(var t=r>1?void 0:r?f(o,e):o,i=d.length-1,s;i>=0;i--)(s=d[i])&&(t=(r?s(o,e,t):s(t))||t);return r&&t&&b(o,e,t),t},p=(d,o)=>(e,r)=>o(e,r,d);import{isSafari as g,isWebkitWebView as y}from"../../../base/browser/browser.js";import{$ as v,addDisposableListener as l,getActiveDocument as w,getActiveWindow as a,isHTMLElement as T,onDidRegisterWindow as S}from"../../../base/browser/dom.js";import{mainWindow as P}from"../../../base/browser/window.js";import{DeferredPromise as R}from"../../../base/common/async.js";import{Event as h}from"../../../base/common/event.js";import{hash as x}from"../../../base/common/hash.js";import{Disposable as W}from"../../../base/common/lifecycle.js";import{URI as I}from"../../../base/common/uri.js";import"../common/clipboardService.js";import{ILayoutService as E}from"../../layout/browser/layoutService.js";import{ILogService as A}from"../../log/common/log.js";const c="application/vnd.code.resources";let n=class extends W{constructor(e,r){super();this.layoutService=e;this.logService=r;(g||y)&&this.installWebKitWriteTextWorkaround(),this._register(h.runAndSubscribe(S,({window:t,disposables:i})=>{i.add(l(t.document,"copy",()=>this.clearResourcesState()))},{window:P,disposables:this._store}))}async readImage(){try{const r=(await navigator.clipboard.read())[0],i=["image/png","image/jpeg","image/gif","image/tiff","image/bmp"].find(s=>r.types.includes(s));if(i){const m=await(await r.getType(i)).arrayBuffer();return new Uint8Array(m)}}catch{}return new Uint8Array(0)}webKitPendingClipboardWritePromise;installWebKitWriteTextWorkaround(){const e=()=>{const r=new R;this.webKitPendingClipboardWritePromise&&!this.webKitPendingClipboardWritePromise.isSettled&&this.webKitPendingClipboardWritePromise.cancel(),this.webKitPendingClipboardWritePromise=r,a().navigator.clipboard.write([new ClipboardItem({"text/plain":r.p})]).catch(async t=>{(!(t instanceof Error)||t.name!=="NotAllowedError"||!r.isRejected)&&this.logService.error(t)})};this._register(h.runAndSubscribe(this.layoutService.onDidAddContainer,({container:r,disposables:t})=>{t.add(l(r,"click",e)),t.add(l(r,"keydown",e))},{container:this.layoutService.mainContainer,disposables:this._store}))}mapTextToType=new Map;async writeText(e,r){if(this.clearResourcesState(),r){this.mapTextToType.set(r,e);return}if(this.webKitPendingClipboardWritePromise)return this.webKitPendingClipboardWritePromise.complete(e);try{return await a().navigator.clipboard.writeText(e)}catch{}this.fallbackWriteText(e)}fallbackWriteText(e){const r=w(),t=r.activeElement,i=r.body.appendChild(v("textarea",{"aria-hidden":!0}));i.style.height="1px",i.style.width="1px",i.style.position="absolute",i.value=e,i.focus(),i.select(),r.execCommand("copy"),T(t)&&t.focus(),i.remove()}async readText(e){if(e)return this.mapTextToType.get(e)||"";try{return await a().navigator.clipboard.readText()}catch{}return""}findText="";async readFindText(){return this.findText}async writeFindText(e){this.findText=e}resources=[];resourcesStateHash=void 0;static MAX_RESOURCE_STATE_SOURCE_LENGTH=1e3;async writeResources(e){try{await a().navigator.clipboard.write([new ClipboardItem({[`web ${c}`]:new Blob([JSON.stringify(e.map(r=>r.toJSON()))],{type:c})})])}catch{}e.length===0?this.clearResourcesState():(this.resources=e,this.resourcesStateHash=await this.computeResourcesStateHash())}async readResources(){try{const r=await a().navigator.clipboard.read();for(const t of r)if(t.types.includes(`web ${c}`)){const i=await t.getType(`web ${c}`);return JSON.parse(await i.text()).map(m=>I.from(m))}}catch{}const e=await this.computeResourcesStateHash();return this.resourcesStateHash!==e&&this.clearResourcesState(),this.resources}async computeResourcesStateHash(){if(this.resources.length===0)return;const e=await this.readText();return x(e.substring(0,n.MAX_RESOURCE_STATE_SOURCE_LENGTH))}async hasResources(){try{const e=await a().navigator.clipboard.read();for(const r of e)if(r.types.includes(`web ${c}`))return!0}catch{}return this.resources.length>0}clearInternalState(){this.clearResourcesState()}clearResourcesState(){this.resources=[],this.resourcesStateHash=void 0}};n=u([p(0,E),p(1,A)],n);export{n as BrowserClipboardService};
