{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/configuration/test/common/configurationModels.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport assert from 'assert';\nimport { ResourceMap } from '../../../../base/common/map.js';\nimport { join } from '../../../../base/common/path.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\nimport { Configuration, ConfigurationChangeEvent, ConfigurationModel, ConfigurationModelParser, mergeChanges } from '../../common/configurationModels.js';\nimport { IConfigurationRegistry, Extensions, ConfigurationScope } from '../../common/configurationRegistry.js';\nimport { NullLogService } from '../../../log/common/log.js';\nimport { Registry } from '../../../registry/common/platform.js';\nimport { WorkspaceFolder } from '../../../workspace/common/workspace.js';\nimport { Workspace } from '../../../workspace/test/common/testWorkspace.js';\n\nsuite('ConfigurationModelParser', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tsuiteSetup(() => {\n\t\tRegistry.as<IConfigurationRegistry>(Extensions.Configuration).registerConfiguration({\n\t\t\t'id': 'ConfigurationModelParserTest',\n\t\t\t'type': 'object',\n\t\t\t'properties': {\n\t\t\t\t'ConfigurationModelParserTest.windowSetting': {\n\t\t\t\t\t'type': 'string',\n\t\t\t\t\t'default': 'isSet',\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n\n\ttest('parse configuration model with single override identifier', () => {\n\t\tconst testObject = new ConfigurationModelParser('', new NullLogService());\n\n\t\ttestObject.parse(JSON.stringify({ '[x]': { 'a': 1 } }));\n\n\t\tassert.deepStrictEqual(JSON.stringify(testObject.configurationModel.overrides), JSON.stringify([{ identifiers: ['x'], keys: ['a'], contents: { 'a': 1 } }]));\n\t});\n\n\ttest('parse configuration model with multiple override identifiers', () => {\n\t\tconst testObject = new ConfigurationModelParser('', new NullLogService());\n\n\t\ttestObject.parse(JSON.stringify({ '[x][y]': { 'a': 1 } }));\n\n\t\tassert.deepStrictEqual(JSON.stringify(testObject.configurationModel.overrides), JSON.stringify([{ identifiers: ['x', 'y'], keys: ['a'], contents: { 'a': 1 } }]));\n\t});\n\n\ttest('parse configuration model with multiple duplicate override identifiers', () => {\n\t\tconst testObject = new ConfigurationModelParser('', new NullLogService());\n\n\t\ttestObject.parse(JSON.stringify({ '[x][y][x][z]': { 'a': 1 } }));\n\n\t\tassert.deepStrictEqual(JSON.stringify(testObject.configurationModel.overrides), JSON.stringify([{ identifiers: ['x', 'y', 'z'], keys: ['a'], contents: { 'a': 1 } }]));\n\t});\n\n\ttest('parse configuration model with exclude option', () => {\n\t\tconst testObject = new ConfigurationModelParser('', new NullLogService());\n\n\t\ttestObject.parse(JSON.stringify({ 'a': 1, 'b': 2 }), { exclude: ['a'] });\n\n\t\tassert.strictEqual(testObject.configurationModel.getValue('a'), undefined);\n\t\tassert.strictEqual(testObject.configurationModel.getValue('b'), 2);\n\t});\n\n\ttest('parse configuration model with exclude option even included', () => {\n\t\tconst testObject = new ConfigurationModelParser('', new NullLogService());\n\n\t\ttestObject.parse(JSON.stringify({ 'a': 1, 'b': 2 }), { exclude: ['a'], include: ['a'] });\n\n\t\tassert.strictEqual(testObject.configurationModel.getValue('a'), undefined);\n\t\tassert.strictEqual(testObject.configurationModel.getValue('b'), 2);\n\t});\n\n\ttest('parse configuration model with scopes filter', () => {\n\t\tconst testObject = new ConfigurationModelParser('', new NullLogService());\n\n\t\ttestObject.parse(JSON.stringify({ 'ConfigurationModelParserTest.windowSetting': '1' }), { scopes: [ConfigurationScope.APPLICATION] });\n\n\t\tassert.strictEqual(testObject.configurationModel.getValue('ConfigurationModelParserTest.windowSetting'), undefined);\n\t});\n\n\ttest('parse configuration model with include option', () => {\n\t\tconst testObject = new ConfigurationModelParser('', new NullLogService());\n\n\t\ttestObject.parse(JSON.stringify({ 'ConfigurationModelParserTest.windowSetting': '1' }), { include: ['ConfigurationModelParserTest.windowSetting'], scopes: [ConfigurationScope.APPLICATION] });\n\n\t\tassert.strictEqual(testObject.configurationModel.getValue('ConfigurationModelParserTest.windowSetting'), '1');\n\t});\n\n\ttest('parse configuration model with invalid setting key', () => {\n\t\tconst testObject = new ConfigurationModelParser('', new NullLogService());\n\n\t\ttestObject.parse(JSON.stringify({ 'a': null, 'a.b.c': { c: 1 } }));\n\n\t\tassert.strictEqual(testObject.configurationModel.getValue('a'), null);\n\t\tassert.strictEqual(testObject.configurationModel.getValue('a.b'), undefined);\n\t\tassert.strictEqual(testObject.configurationModel.getValue('a.b.c'), undefined);\n\t});\n\n});\n\nsuite('ConfigurationModel', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('setValue for a key that has no sections and not defined', () => {\n\t\tconst testObject = new ConfigurationModel({ 'a': { 'b': 1 } }, ['a.b'], [], undefined, new NullLogService());\n\n\t\ttestObject.setValue('f', 1);\n\n\t\tassert.deepStrictEqual(testObject.contents, { 'a': { 'b': 1 }, 'f': 1 });\n\t\tassert.deepStrictEqual(testObject.keys, ['a.b', 'f']);\n\t});\n\n\ttest('setValue for a key that has no sections and defined', () => {\n\t\tconst testObject = new ConfigurationModel({ 'a': { 'b': 1 }, 'f': 1 }, ['a.b', 'f'], [], undefined, new NullLogService());\n\n\t\ttestObject.setValue('f', 3);\n\n\t\tassert.deepStrictEqual(testObject.contents, { 'a': { 'b': 1 }, 'f': 3 });\n\t\tassert.deepStrictEqual(testObject.keys, ['a.b', 'f']);\n\t});\n\n\ttest('setValue for a key that has sections and not defined', () => {\n\t\tconst testObject = new ConfigurationModel({ 'a': { 'b': 1 }, 'f': 1 }, ['a.b', 'f'], [], undefined, new NullLogService());\n\n\t\ttestObject.setValue('b.c', 1);\n\n\t\tconst expected: any = {};\n\t\texpected['a'] = { 'b': 1 };\n\t\texpected['f'] = 1;\n\t\texpected['b'] = Object.create(null);\n\t\texpected['b']['c'] = 1;\n\t\tassert.deepStrictEqual(testObject.contents, expected);\n\t\tassert.deepStrictEqual(testObject.keys, ['a.b', 'f', 'b.c']);\n\t});\n\n\ttest('setValue for a key that has sections and defined', () => {\n\t\tconst testObject = new ConfigurationModel({ 'a': { 'b': 1 }, 'b': { 'c': 1 }, 'f': 1 }, ['a.b', 'b.c', 'f'], [], undefined, new NullLogService());\n\n\t\ttestObject.setValue('b.c', 3);\n\n\t\tassert.deepStrictEqual(testObject.contents, { 'a': { 'b': 1 }, 'b': { 'c': 3 }, 'f': 1 });\n\t\tassert.deepStrictEqual(testObject.keys, ['a.b', 'b.c', 'f']);\n\t});\n\n\ttest('setValue for a key that has sections and sub section not defined', () => {\n\t\tconst testObject = new ConfigurationModel({ 'a': { 'b': 1 }, 'f': 1 }, ['a.b', 'f'], [], undefined, new NullLogService());\n\n\t\ttestObject.setValue('a.c', 1);\n\n\t\tassert.deepStrictEqual(testObject.contents, { 'a': { 'b': 1, 'c': 1 }, 'f': 1 });\n\t\tassert.deepStrictEqual(testObject.keys, ['a.b', 'f', 'a.c']);\n\t});\n\n\ttest('setValue for a key that has sections and sub section defined', () => {\n\t\tconst testObject = new ConfigurationModel({ 'a': { 'b': 1, 'c': 1 }, 'f': 1 }, ['a.b', 'a.c', 'f'], [], undefined, new NullLogService());\n\n\t\ttestObject.setValue('a.c', 3);\n\n\t\tassert.deepStrictEqual(testObject.contents, { 'a': { 'b': 1, 'c': 3 }, 'f': 1 });\n\t\tassert.deepStrictEqual(testObject.keys, ['a.b', 'a.c', 'f']);\n\t});\n\n\ttest('setValue for a key that has sections and last section is added', () => {\n\t\tconst testObject = new ConfigurationModel({ 'a': { 'b': {} }, 'f': 1 }, ['a.b', 'f'], [], undefined, new NullLogService());\n\n\t\ttestObject.setValue('a.b.c', 1);\n\n\t\tassert.deepStrictEqual(testObject.contents, { 'a': { 'b': { 'c': 1 } }, 'f': 1 });\n\t\tassert.deepStrictEqual(testObject.keys, ['a.b', 'f', 'a.b.c']);\n\t});\n\n\ttest('removeValue: remove a non existing key', () => {\n\t\tconst testObject = new ConfigurationModel({ 'a': { 'b': 2 } }, ['a.b'], [], undefined, new NullLogService());\n\n\t\ttestObject.removeValue('a.b.c');\n\n\t\tassert.deepStrictEqual(testObject.contents, { 'a': { 'b': 2 } });\n\t\tassert.deepStrictEqual(testObject.keys, ['a.b']);\n\t});\n\n\ttest('removeValue: remove a single segmented key', () => {\n\t\tconst testObject = new ConfigurationModel({ 'a': 1 }, ['a'], [], undefined, new NullLogService());\n\n\t\ttestObject.removeValue('a');\n\n\t\tassert.deepStrictEqual(testObject.contents, {});\n\t\tassert.deepStrictEqual(testObject.keys, []);\n\t});\n\n\ttest('removeValue: remove a multi segmented key', () => {\n\t\tconst testObject = new ConfigurationModel({ 'a': { 'b': 1 } }, ['a.b'], [], undefined, new NullLogService());\n\n\t\ttestObject.removeValue('a.b');\n\n\t\tassert.deepStrictEqual(testObject.contents, {});\n\t\tassert.deepStrictEqual(testObject.keys, []);\n\t});\n\n\ttest('get overriding configuration model for an existing identifier', () => {\n\t\tconst testObject = new ConfigurationModel(\n\t\t\t{ 'a': { 'b': 1 }, 'f': 1 }, [],\n\t\t\t[{ identifiers: ['c'], contents: { 'a': { 'd': 1 } }, keys: ['a'] }], [], new NullLogService());\n\n\t\tassert.deepStrictEqual(testObject.override('c').contents, { 'a': { 'b': 1, 'd': 1 }, 'f': 1 });\n\t});\n\n\ttest('get overriding configuration model for an identifier that does not exist', () => {\n\t\tconst testObject = new ConfigurationModel(\n\t\t\t{ 'a': { 'b': 1 }, 'f': 1 }, [],\n\t\t\t[{ identifiers: ['c'], contents: { 'a': { 'd': 1 } }, keys: ['a'] }], [], new NullLogService());\n\n\t\tassert.deepStrictEqual(testObject.override('xyz').contents, { 'a': { 'b': 1 }, 'f': 1 });\n\t});\n\n\ttest('get overriding configuration when one of the keys does not exist in base', () => {\n\t\tconst testObject = new ConfigurationModel(\n\t\t\t{ 'a': { 'b': 1 }, 'f': 1 }, [],\n\t\t\t[{ identifiers: ['c'], contents: { 'a': { 'd': 1 }, 'g': 1 }, keys: ['a', 'g'] }], [], new NullLogService());\n\n\t\tassert.deepStrictEqual(testObject.override('c').contents, { 'a': { 'b': 1, 'd': 1 }, 'f': 1, 'g': 1 });\n\t});\n\n\ttest('get overriding configuration when one of the key in base is not of object type', () => {\n\t\tconst testObject = new ConfigurationModel(\n\t\t\t{ 'a': { 'b': 1 }, 'f': 1 }, [],\n\t\t\t[{ identifiers: ['c'], contents: { 'a': { 'd': 1 }, 'f': { 'g': 1 } }, keys: ['a', 'f'] }], [], new NullLogService());\n\n\t\tassert.deepStrictEqual(testObject.override('c').contents, { 'a': { 'b': 1, 'd': 1 }, 'f': { 'g': 1 } });\n\t});\n\n\ttest('get overriding configuration when one of the key in overriding contents is not of object type', () => {\n\t\tconst testObject = new ConfigurationModel(\n\t\t\t{ 'a': { 'b': 1 }, 'f': { 'g': 1 } }, [],\n\t\t\t[{ identifiers: ['c'], contents: { 'a': { 'd': 1 }, 'f': 1 }, keys: ['a', 'f'] }], [], new NullLogService());\n\n\t\tassert.deepStrictEqual(testObject.override('c').contents, { 'a': { 'b': 1, 'd': 1 }, 'f': 1 });\n\t});\n\n\ttest('get overriding configuration if the value of overriding identifier is not object', () => {\n\t\tconst testObject = new ConfigurationModel(\n\t\t\t{ 'a': { 'b': 1 }, 'f': { 'g': 1 } }, [],\n\t\t\t[{ identifiers: ['c'], contents: 'abc', keys: [] }], [], new NullLogService());\n\n\t\tassert.deepStrictEqual(testObject.override('c').contents, { 'a': { 'b': 1 }, 'f': { 'g': 1 } });\n\t});\n\n\ttest('get overriding configuration if the value of overriding identifier is an empty object', () => {\n\t\tconst testObject = new ConfigurationModel(\n\t\t\t{ 'a': { 'b': 1 }, 'f': { 'g': 1 } }, [],\n\t\t\t[{ identifiers: ['c'], contents: {}, keys: [] }], [], new NullLogService());\n\n\t\tassert.deepStrictEqual(testObject.override('c').contents, { 'a': { 'b': 1 }, 'f': { 'g': 1 } });\n\t});\n\n\ttest('simple merge', () => {\n\t\tconst base = new ConfigurationModel({ 'a': 1, 'b': 2 }, ['a', 'b'], [], undefined, new NullLogService());\n\t\tconst add = new ConfigurationModel({ 'a': 3, 'c': 4 }, ['a', 'c'], [], undefined, new NullLogService());\n\t\tconst result = base.merge(add);\n\n\t\tassert.deepStrictEqual(result.contents, { 'a': 3, 'b': 2, 'c': 4 });\n\t\tassert.deepStrictEqual(result.keys, ['a', 'b', 'c']);\n\t});\n\n\ttest('recursive merge', () => {\n\t\tconst base = new ConfigurationModel({ 'a': { 'b': 1 } }, ['a.b'], [], undefined, new NullLogService());\n\t\tconst add = new ConfigurationModel({ 'a': { 'b': 2 } }, ['a.b'], [], undefined, new NullLogService());\n\t\tconst result = base.merge(add);\n\n\t\tassert.deepStrictEqual(result.contents, { 'a': { 'b': 2 } });\n\t\tassert.deepStrictEqual(result.getValue('a'), { 'b': 2 });\n\t\tassert.deepStrictEqual(result.keys, ['a.b']);\n\t});\n\n\ttest('simple merge overrides', () => {\n\t\tconst base = new ConfigurationModel({ 'a': { 'b': 1 } }, ['a.b'], [{ identifiers: ['c'], contents: { 'a': 2 }, keys: ['a'] }], undefined, new NullLogService());\n\t\tconst add = new ConfigurationModel({ 'a': { 'b': 2 } }, ['a.b'], [{ identifiers: ['c'], contents: { 'b': 2 }, keys: ['b'] }], undefined, new NullLogService());\n\t\tconst result = base.merge(add);\n\n\t\tassert.deepStrictEqual(result.contents, { 'a': { 'b': 2 } });\n\t\tassert.deepStrictEqual(result.overrides, [{ identifiers: ['c'], contents: { 'a': 2, 'b': 2 }, keys: ['a', 'b'] }]);\n\t\tassert.deepStrictEqual(result.override('c').contents, { 'a': 2, 'b': 2 });\n\t\tassert.deepStrictEqual(result.keys, ['a.b']);\n\t});\n\n\ttest('recursive merge overrides', () => {\n\t\tconst base = new ConfigurationModel({ 'a': { 'b': 1 }, 'f': 1 }, ['a.b', 'f'], [{ identifiers: ['c'], contents: { 'a': { 'd': 1 } }, keys: ['a'] }], undefined, new NullLogService());\n\t\tconst add = new ConfigurationModel({ 'a': { 'b': 2 } }, ['a.b'], [{ identifiers: ['c'], contents: { 'a': { 'e': 2 } }, keys: ['a'] }], undefined, new NullLogService());\n\t\tconst result = base.merge(add);\n\n\t\tassert.deepStrictEqual(result.contents, { 'a': { 'b': 2 }, 'f': 1 });\n\t\tassert.deepStrictEqual(result.overrides, [{ identifiers: ['c'], contents: { 'a': { 'd': 1, 'e': 2 } }, keys: ['a'] }]);\n\t\tassert.deepStrictEqual(result.override('c').contents, { 'a': { 'b': 2, 'd': 1, 'e': 2 }, 'f': 1 });\n\t\tassert.deepStrictEqual(result.keys, ['a.b', 'f']);\n\t});\n\n\ttest('Test contents while getting an existing property', () => {\n\t\tlet testObject = new ConfigurationModel({ 'a': 1 }, [], [], undefined, new NullLogService());\n\t\tassert.deepStrictEqual(testObject.getValue('a'), 1);\n\n\t\ttestObject = new ConfigurationModel({ 'a': { 'b': 1 } }, [], [], undefined, new NullLogService());\n\t\tassert.deepStrictEqual(testObject.getValue('a'), { 'b': 1 });\n\t});\n\n\ttest('Test contents are undefined for non existing properties', () => {\n\t\tconst testObject = new ConfigurationModel({ awesome: true }, [], [], undefined, new NullLogService());\n\n\t\tassert.deepStrictEqual(testObject.getValue('unknownproperty'), undefined);\n\t});\n\n\ttest('Test override gives all content merged with overrides', () => {\n\t\tconst testObject = new ConfigurationModel({ 'a': 1, 'c': 1 }, [], [{ identifiers: ['b'], contents: { 'a': 2 }, keys: ['a'] }], undefined, new NullLogService());\n\n\t\tassert.deepStrictEqual(testObject.override('b').contents, { 'a': 2, 'c': 1 });\n\t});\n\n\ttest('Test override when an override has multiple identifiers', () => {\n\t\tconst testObject = new ConfigurationModel({ 'a': 1, 'c': 1 }, ['a', 'c'], [{ identifiers: ['x', 'y'], contents: { 'a': 2 }, keys: ['a'] }], undefined, new NullLogService());\n\n\t\tlet actual = testObject.override('x');\n\t\tassert.deepStrictEqual(actual.contents, { 'a': 2, 'c': 1 });\n\t\tassert.deepStrictEqual(actual.keys, ['a', 'c']);\n\t\tassert.deepStrictEqual(testObject.getKeysForOverrideIdentifier('x'), ['a']);\n\n\t\tactual = testObject.override('y');\n\t\tassert.deepStrictEqual(actual.contents, { 'a': 2, 'c': 1 });\n\t\tassert.deepStrictEqual(actual.keys, ['a', 'c']);\n\t\tassert.deepStrictEqual(testObject.getKeysForOverrideIdentifier('y'), ['a']);\n\t});\n\n\ttest('Test override when an identifier is defined in multiple overrides', () => {\n\t\tconst testObject = new ConfigurationModel({ 'a': 1, 'c': 1 }, ['a', 'c'], [{ identifiers: ['x'], contents: { 'a': 3, 'b': 1 }, keys: ['a', 'b'] }, { identifiers: ['x', 'y'], contents: { 'a': 2 }, keys: ['a'] }], undefined, new NullLogService());\n\n\t\tconst actual = testObject.override('x');\n\t\tassert.deepStrictEqual(actual.contents, { 'a': 3, 'c': 1, 'b': 1 });\n\t\tassert.deepStrictEqual(actual.keys, ['a', 'c']);\n\n\t\tassert.deepStrictEqual(testObject.getKeysForOverrideIdentifier('x'), ['a', 'b']);\n\t});\n\n\ttest('Test merge when configuration models have multiple identifiers', () => {\n\t\tconst testObject = new ConfigurationModel({ 'a': 1, 'c': 1 }, ['a', 'c'], [{ identifiers: ['y'], contents: { 'c': 1 }, keys: ['c'] }, { identifiers: ['x', 'y'], contents: { 'a': 2 }, keys: ['a'] }], undefined, new NullLogService());\n\t\tconst target = new ConfigurationModel({ 'a': 2, 'b': 1 }, ['a', 'b'], [{ identifiers: ['x'], contents: { 'a': 3, 'b': 2 }, keys: ['a', 'b'] }, { identifiers: ['x', 'y'], contents: { 'b': 3 }, keys: ['b'] }], undefined, new NullLogService());\n\n\t\tconst actual = testObject.merge(target);\n\n\t\tassert.deepStrictEqual(actual.contents, { 'a': 2, 'c': 1, 'b': 1 });\n\t\tassert.deepStrictEqual(actual.keys, ['a', 'c', 'b']);\n\t\tassert.deepStrictEqual(actual.overrides, [\n\t\t\t{ identifiers: ['y'], contents: { 'c': 1 }, keys: ['c'] },\n\t\t\t{ identifiers: ['x', 'y'], contents: { 'a': 2, 'b': 3 }, keys: ['a', 'b'] },\n\t\t\t{ identifiers: ['x'], contents: { 'a': 3, 'b': 2 }, keys: ['a', 'b'] },\n\t\t]);\n\t});\n\n\ttest('inspect when raw is same', () => {\n\t\tconst testObject = new ConfigurationModel({ 'a': 1, 'c': 1 }, ['a', 'c'], [{ identifiers: ['x', 'y'], contents: { 'a': 2, 'b': 1 }, keys: ['a'] }], undefined, new NullLogService());\n\n\t\tassert.deepStrictEqual(testObject.inspect('a'), { value: 1, override: undefined, merged: 1, overrides: [{ identifiers: ['x', 'y'], value: 2 }] });\n\t\tassert.deepStrictEqual(testObject.inspect('a', 'x'), { value: 1, override: 2, merged: 2, overrides: [{ identifiers: ['x', 'y'], value: 2 }] });\n\t\tassert.deepStrictEqual(testObject.inspect('b', 'x'), { value: undefined, override: 1, merged: 1, overrides: [{ identifiers: ['x', 'y'], value: 1 }] });\n\t\tassert.deepStrictEqual(testObject.inspect('d'), { value: undefined, override: undefined, merged: undefined, overrides: undefined });\n\t});\n\n\ttest('inspect when raw is not same', () => {\n\t\tconst testObject = new ConfigurationModel({ 'a': 1, 'c': 1 }, ['a', 'c'], [{ identifiers: ['x', 'y'], contents: { 'a': 2, }, keys: ['a'] }], [{\n\t\t\t'a': 1,\n\t\t\t'b': 2,\n\t\t\t'c': 1,\n\t\t\t'd': 3,\n\t\t\t'[x][y]': {\n\t\t\t\t'a': 2,\n\t\t\t\t'b': 1\n\t\t\t}\n\t\t}], new NullLogService());\n\n\t\tassert.deepStrictEqual(testObject.inspect('a'), { value: 1, override: undefined, merged: 1, overrides: [{ identifiers: ['x', 'y'], value: 2 }] });\n\t\tassert.deepStrictEqual(testObject.inspect('a', 'x'), { value: 1, override: 2, merged: 2, overrides: [{ identifiers: ['x', 'y'], value: 2 }] });\n\t\tassert.deepStrictEqual(testObject.inspect('b', 'x'), { value: 2, override: 1, merged: 1, overrides: [{ identifiers: ['x', 'y'], value: 1 }] });\n\t\tassert.deepStrictEqual(testObject.inspect('d'), { value: 3, override: undefined, merged: 3, overrides: undefined });\n\t\tassert.deepStrictEqual(testObject.inspect('e'), { value: undefined, override: undefined, merged: undefined, overrides: undefined });\n\t});\n\n\ttest('inspect in merged configuration when raw is same', () => {\n\t\tconst target1 = new ConfigurationModel({ 'a': 1 }, ['a'], [{ identifiers: ['x', 'y'], contents: { 'a': 2, }, keys: ['a'] }], undefined, new NullLogService());\n\t\tconst target2 = new ConfigurationModel({ 'b': 3 }, ['b'], [], undefined, new NullLogService());\n\t\tconst testObject = target1.merge(target2);\n\n\t\tassert.deepStrictEqual(testObject.inspect('a'), { value: 1, override: undefined, merged: 1, overrides: [{ identifiers: ['x', 'y'], value: 2 }] });\n\t\tassert.deepStrictEqual(testObject.inspect('a', 'x'), { value: 1, override: 2, merged: 2, overrides: [{ identifiers: ['x', 'y'], value: 2 }] });\n\t\tassert.deepStrictEqual(testObject.inspect('b'), { value: 3, override: undefined, merged: 3, overrides: undefined });\n\t\tassert.deepStrictEqual(testObject.inspect('b', 'y'), { value: 3, override: undefined, merged: 3, overrides: undefined });\n\t\tassert.deepStrictEqual(testObject.inspect('c'), { value: undefined, override: undefined, merged: undefined, overrides: undefined });\n\t});\n\n\ttest('inspect in merged configuration when raw is not same for one model', () => {\n\t\tconst target1 = new ConfigurationModel({ 'a': 1 }, ['a'], [{ identifiers: ['x', 'y'], contents: { 'a': 2, }, keys: ['a'] }], [{\n\t\t\t'a': 1,\n\t\t\t'b': 2,\n\t\t\t'c': 3,\n\t\t\t'[x][y]': {\n\t\t\t\t'a': 2,\n\t\t\t\t'b': 4,\n\t\t\t}\n\t\t}], new NullLogService());\n\t\tconst target2 = new ConfigurationModel({ 'b': 3 }, ['b'], [], undefined, new NullLogService());\n\t\tconst testObject = target1.merge(target2);\n\n\t\tassert.deepStrictEqual(testObject.inspect('a'), { value: 1, override: undefined, merged: 1, overrides: [{ identifiers: ['x', 'y'], value: 2 }] });\n\t\tassert.deepStrictEqual(testObject.inspect('a', 'x'), { value: 1, override: 2, merged: 2, overrides: [{ identifiers: ['x', 'y'], value: 2 }] });\n\t\tassert.deepStrictEqual(testObject.inspect('b'), { value: 3, override: undefined, merged: 3, overrides: [{ identifiers: ['x', 'y'], value: 4 }] });\n\t\tassert.deepStrictEqual(testObject.inspect('b', 'y'), { value: 3, override: 4, merged: 4, overrides: [{ identifiers: ['x', 'y'], value: 4 }] });\n\t\tassert.deepStrictEqual(testObject.inspect('c'), { value: 3, override: undefined, merged: 3, overrides: undefined });\n\t});\n\n\ttest('inspect: return all overrides', () => {\n\t\tconst testObject = new ConfigurationModel({ 'a': 1, 'c': 1 }, ['a', 'c'], [\n\t\t\t{ identifiers: ['x', 'y'], contents: { 'a': 2, 'b': 1 }, keys: ['a', 'b'] },\n\t\t\t{ identifiers: ['x'], contents: { 'a': 3 }, keys: ['a'] },\n\t\t\t{ identifiers: ['y'], contents: { 'b': 3 }, keys: ['b'] }\n\t\t], undefined, new NullLogService());\n\n\t\tassert.deepStrictEqual(testObject.inspect('a').overrides, [\n\t\t\t{ identifiers: ['x', 'y'], value: 2 },\n\t\t\t{ identifiers: ['x'], value: 3 }\n\t\t]);\n\t});\n\n\ttest('inspect when no overrides', () => {\n\t\tconst testObject = new ConfigurationModel({ 'a': 1, 'c': 1 }, ['a', 'c'], [], undefined, new NullLogService());\n\n\t\tassert.strictEqual(testObject.inspect('a').overrides, undefined);\n\t});\n\n});\n\nsuite('CustomConfigurationModel', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('simple merge using models', () => {\n\t\tconst base = new ConfigurationModelParser('base', new NullLogService());\n\t\tbase.parse(JSON.stringify({ 'a': 1, 'b': 2 }));\n\n\t\tconst add = new ConfigurationModelParser('add', new NullLogService());\n\t\tadd.parse(JSON.stringify({ 'a': 3, 'c': 4 }));\n\n\t\tconst result = base.configurationModel.merge(add.configurationModel);\n\t\tassert.deepStrictEqual(result.contents, { 'a': 3, 'b': 2, 'c': 4 });\n\t});\n\n\ttest('simple merge with an undefined contents', () => {\n\t\tlet base = new ConfigurationModelParser('base', new NullLogService());\n\t\tbase.parse(JSON.stringify({ 'a': 1, 'b': 2 }));\n\t\tlet add = new ConfigurationModelParser('add', new NullLogService());\n\t\tlet result = base.configurationModel.merge(add.configurationModel);\n\t\tassert.deepStrictEqual(result.contents, { 'a': 1, 'b': 2 });\n\n\t\tbase = new ConfigurationModelParser('base', new NullLogService());\n\t\tadd = new ConfigurationModelParser('add', new NullLogService());\n\t\tadd.parse(JSON.stringify({ 'a': 1, 'b': 2 }));\n\t\tresult = base.configurationModel.merge(add.configurationModel);\n\t\tassert.deepStrictEqual(result.contents, { 'a': 1, 'b': 2 });\n\n\t\tbase = new ConfigurationModelParser('base', new NullLogService());\n\t\tadd = new ConfigurationModelParser('add', new NullLogService());\n\t\tresult = base.configurationModel.merge(add.configurationModel);\n\t\tassert.deepStrictEqual(result.contents, {});\n\t});\n\n\ttest('Recursive merge using config models', () => {\n\t\tconst base = new ConfigurationModelParser('base', new NullLogService());\n\t\tbase.parse(JSON.stringify({ 'a': { 'b': 1 } }));\n\t\tconst add = new ConfigurationModelParser('add', new NullLogService());\n\t\tadd.parse(JSON.stringify({ 'a': { 'b': 2 } }));\n\t\tconst result = base.configurationModel.merge(add.configurationModel);\n\t\tassert.deepStrictEqual(result.contents, { 'a': { 'b': 2 } });\n\t});\n\n\ttest('Test contents while getting an existing property', () => {\n\t\tconst testObject = new ConfigurationModelParser('test', new NullLogService());\n\t\ttestObject.parse(JSON.stringify({ 'a': 1 }));\n\t\tassert.deepStrictEqual(testObject.configurationModel.getValue('a'), 1);\n\n\t\ttestObject.parse(JSON.stringify({ 'a': { 'b': 1 } }));\n\t\tassert.deepStrictEqual(testObject.configurationModel.getValue('a'), { 'b': 1 });\n\t});\n\n\ttest('Test contents are undefined for non existing properties', () => {\n\t\tconst testObject = new ConfigurationModelParser('test', new NullLogService());\n\t\ttestObject.parse(JSON.stringify({\n\t\t\tawesome: true\n\t\t}));\n\n\t\tassert.deepStrictEqual(testObject.configurationModel.getValue('unknownproperty'), undefined);\n\t});\n\n\ttest('Test contents are undefined for undefined config', () => {\n\t\tconst testObject = new ConfigurationModelParser('test', new NullLogService());\n\n\t\tassert.deepStrictEqual(testObject.configurationModel.getValue('unknownproperty'), undefined);\n\t});\n\n\ttest('Test configWithOverrides gives all content merged with overrides', () => {\n\t\tconst testObject = new ConfigurationModelParser('test', new NullLogService());\n\t\ttestObject.parse(JSON.stringify({ 'a': 1, 'c': 1, '[b]': { 'a': 2 } }));\n\n\t\tassert.deepStrictEqual(testObject.configurationModel.override('b').contents, { 'a': 2, 'c': 1, '[b]': { 'a': 2 } });\n\t});\n\n\ttest('Test configWithOverrides gives empty contents', () => {\n\t\tconst testObject = new ConfigurationModelParser('test', new NullLogService());\n\n\t\tassert.deepStrictEqual(testObject.configurationModel.override('b').contents, {});\n\t});\n\n\ttest('Test update with empty data', () => {\n\t\tconst testObject = new ConfigurationModelParser('test', new NullLogService());\n\t\ttestObject.parse('');\n\n\t\tassert.deepStrictEqual(testObject.configurationModel.contents, Object.create(null));\n\t\tassert.deepStrictEqual(testObject.configurationModel.keys, []);\n\n\t\ttestObject.parse(null);\n\n\t\tassert.deepStrictEqual(testObject.configurationModel.contents, Object.create(null));\n\t\tassert.deepStrictEqual(testObject.configurationModel.keys, []);\n\n\t\ttestObject.parse(undefined);\n\n\t\tassert.deepStrictEqual(testObject.configurationModel.contents, Object.create(null));\n\t\tassert.deepStrictEqual(testObject.configurationModel.keys, []);\n\t});\n\n\ttest('Test empty property is not ignored', () => {\n\t\tconst testObject = new ConfigurationModelParser('test', new NullLogService());\n\t\ttestObject.parse(JSON.stringify({ '': 1 }));\n\n\t\t// deepStrictEqual seems to ignore empty properties, fall back\n\t\t// to comparing the output of JSON.stringify\n\t\tassert.strictEqual(JSON.stringify(testObject.configurationModel.contents), JSON.stringify({ '': 1 }));\n\t\tassert.deepStrictEqual(testObject.configurationModel.keys, ['']);\n\t});\n\n});\n\nexport class TestConfiguration extends Configuration {\n\n\tconstructor(\n\t\tdefaultConfiguration: ConfigurationModel,\n\t\tpolicyConfiguration: ConfigurationModel,\n\t\tapplicationConfiguration: ConfigurationModel,\n\t\tlocalUserConfiguration: ConfigurationModel,\n\t) {\n\t\tsuper(\n\t\t\tdefaultConfiguration,\n\t\t\tpolicyConfiguration,\n\t\t\tapplicationConfiguration,\n\t\t\tlocalUserConfiguration,\n\t\t\tConfigurationModel.createEmptyModel(new NullLogService()),\n\t\t\tConfigurationModel.createEmptyModel(new NullLogService()),\n\t\t\tnew ResourceMap<ConfigurationModel>(),\n\t\t\tConfigurationModel.createEmptyModel(new NullLogService()),\n\t\t\tnew ResourceMap<ConfigurationModel>(),\n\t\t\tnew NullLogService()\n\t\t);\n\t}\n\n}\n\nsuite('Configuration', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('Test inspect for overrideIdentifiers', () => {\n\t\tconst defaultConfigurationModel = parseConfigurationModel({ '[l1]': { 'a': 1 }, '[l2]': { 'b': 1 } });\n\t\tconst userConfigurationModel = parseConfigurationModel({ '[l3]': { 'a': 2 } });\n\t\tconst workspaceConfigurationModel = parseConfigurationModel({ '[l1]': { 'a': 3 }, '[l4]': { 'a': 3 } });\n\t\tconst testObject: Configuration = new TestConfiguration(defaultConfigurationModel, ConfigurationModel.createEmptyModel(new NullLogService()), userConfigurationModel, workspaceConfigurationModel);\n\n\t\tconst { overrideIdentifiers } = testObject.inspect('a', {}, undefined);\n\n\t\tassert.deepStrictEqual(overrideIdentifiers, ['l1', 'l3', 'l4']);\n\t});\n\n\ttest('Test update value', () => {\n\t\tconst parser = new ConfigurationModelParser('test', new NullLogService());\n\t\tparser.parse(JSON.stringify({ 'a': 1 }));\n\t\tconst testObject: Configuration = new TestConfiguration(parser.configurationModel, ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()));\n\n\t\ttestObject.updateValue('a', 2);\n\n\t\tassert.strictEqual(testObject.getValue('a', {}, undefined), 2);\n\t});\n\n\ttest('Test update value after inspect', () => {\n\t\tconst parser = new ConfigurationModelParser('test', new NullLogService());\n\t\tparser.parse(JSON.stringify({ 'a': 1 }));\n\t\tconst testObject: Configuration = new TestConfiguration(parser.configurationModel, ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()));\n\n\t\ttestObject.inspect('a', {}, undefined);\n\t\ttestObject.updateValue('a', 2);\n\n\t\tassert.strictEqual(testObject.getValue('a', {}, undefined), 2);\n\t});\n\n\ttest('Test compare and update default configuration', () => {\n\t\tconst testObject = new TestConfiguration(ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()));\n\t\ttestObject.updateDefaultConfiguration(toConfigurationModel({\n\t\t\t'editor.lineNumbers': 'on',\n\t\t}));\n\n\t\tconst actual = testObject.compareAndUpdateDefaultConfiguration(toConfigurationModel({\n\t\t\t'editor.lineNumbers': 'off',\n\t\t\t'[markdown]': {\n\t\t\t\t'editor.wordWrap': 'off'\n\t\t\t}\n\t\t}), ['editor.lineNumbers', '[markdown]']);\n\n\t\tassert.deepStrictEqual(actual, { keys: ['editor.lineNumbers', '[markdown]'], overrides: [['markdown', ['editor.wordWrap']]] });\n\n\t});\n\n\ttest('Test compare and update application configuration', () => {\n\t\tconst testObject = new TestConfiguration(ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()));\n\t\ttestObject.updateApplicationConfiguration(toConfigurationModel({\n\t\t\t'update.mode': 'on',\n\t\t}));\n\n\t\tconst actual = testObject.compareAndUpdateApplicationConfiguration(toConfigurationModel({\n\t\t\t'update.mode': 'none',\n\t\t\t'[typescript]': {\n\t\t\t\t'editor.wordWrap': 'off'\n\t\t\t}\n\t\t}));\n\n\t\tassert.deepStrictEqual(actual, { keys: ['[typescript]', 'update.mode',], overrides: [['typescript', ['editor.wordWrap']]] });\n\n\t});\n\n\ttest('Test compare and update user configuration', () => {\n\t\tconst testObject = new TestConfiguration(ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()));\n\t\ttestObject.updateLocalUserConfiguration(toConfigurationModel({\n\t\t\t'editor.lineNumbers': 'off',\n\t\t\t'editor.fontSize': 12,\n\t\t\t'[typescript]': {\n\t\t\t\t'editor.wordWrap': 'off'\n\t\t\t}\n\t\t}));\n\n\t\tconst actual = testObject.compareAndUpdateLocalUserConfiguration(toConfigurationModel({\n\t\t\t'editor.lineNumbers': 'on',\n\t\t\t'window.zoomLevel': 1,\n\t\t\t'[typescript]': {\n\t\t\t\t'editor.wordWrap': 'on',\n\t\t\t\t'editor.insertSpaces': false\n\t\t\t}\n\t\t}));\n\n\t\tassert.deepStrictEqual(actual, { keys: ['window.zoomLevel', 'editor.lineNumbers', '[typescript]', 'editor.fontSize'], overrides: [['typescript', ['editor.insertSpaces', 'editor.wordWrap']]] });\n\n\t});\n\n\ttest('Test compare and update workspace configuration', () => {\n\t\tconst testObject = new TestConfiguration(ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()));\n\t\ttestObject.updateWorkspaceConfiguration(toConfigurationModel({\n\t\t\t'editor.lineNumbers': 'off',\n\t\t\t'editor.fontSize': 12,\n\t\t\t'[typescript]': {\n\t\t\t\t'editor.wordWrap': 'off'\n\t\t\t}\n\t\t}));\n\n\t\tconst actual = testObject.compareAndUpdateWorkspaceConfiguration(toConfigurationModel({\n\t\t\t'editor.lineNumbers': 'on',\n\t\t\t'window.zoomLevel': 1,\n\t\t\t'[typescript]': {\n\t\t\t\t'editor.wordWrap': 'on',\n\t\t\t\t'editor.insertSpaces': false\n\t\t\t}\n\t\t}));\n\n\t\tassert.deepStrictEqual(actual, { keys: ['window.zoomLevel', 'editor.lineNumbers', '[typescript]', 'editor.fontSize'], overrides: [['typescript', ['editor.insertSpaces', 'editor.wordWrap']]] });\n\n\t});\n\n\ttest('Test compare and update workspace folder configuration', () => {\n\t\tconst testObject = new TestConfiguration(ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()));\n\t\ttestObject.updateFolderConfiguration(URI.file('file1'), toConfigurationModel({\n\t\t\t'editor.lineNumbers': 'off',\n\t\t\t'editor.fontSize': 12,\n\t\t\t'[typescript]': {\n\t\t\t\t'editor.wordWrap': 'off'\n\t\t\t}\n\t\t}));\n\n\t\tconst actual = testObject.compareAndUpdateFolderConfiguration(URI.file('file1'), toConfigurationModel({\n\t\t\t'editor.lineNumbers': 'on',\n\t\t\t'window.zoomLevel': 1,\n\t\t\t'[typescript]': {\n\t\t\t\t'editor.wordWrap': 'on',\n\t\t\t\t'editor.insertSpaces': false\n\t\t\t}\n\t\t}));\n\n\t\tassert.deepStrictEqual(actual, { keys: ['window.zoomLevel', 'editor.lineNumbers', '[typescript]', 'editor.fontSize'], overrides: [['typescript', ['editor.insertSpaces', 'editor.wordWrap']]] });\n\n\t});\n\n\ttest('Test compare and delete workspace folder configuration', () => {\n\t\tconst testObject = new TestConfiguration(ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()));\n\t\ttestObject.updateFolderConfiguration(URI.file('file1'), toConfigurationModel({\n\t\t\t'editor.lineNumbers': 'off',\n\t\t\t'editor.fontSize': 12,\n\t\t\t'[typescript]': {\n\t\t\t\t'editor.wordWrap': 'off'\n\t\t\t}\n\t\t}));\n\n\t\tconst actual = testObject.compareAndDeleteFolderConfiguration(URI.file('file1'));\n\n\t\tassert.deepStrictEqual(actual, { keys: ['editor.lineNumbers', 'editor.fontSize', '[typescript]'], overrides: [['typescript', ['editor.wordWrap']]] });\n\n\t});\n\n\tfunction parseConfigurationModel(content: any): ConfigurationModel {\n\t\tconst parser = new ConfigurationModelParser('test', new NullLogService());\n\t\tparser.parse(JSON.stringify(content));\n\t\treturn parser.configurationModel;\n\t}\n\n});\n\nsuite('ConfigurationChangeEvent', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('changeEvent affecting keys with new configuration', () => {\n\t\tconst configuration = new TestConfiguration(ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()));\n\t\tconst change = configuration.compareAndUpdateLocalUserConfiguration(toConfigurationModel({\n\t\t\t'window.zoomLevel': 1,\n\t\t\t'workbench.editor.enablePreview': false,\n\t\t\t'files.autoSave': 'off',\n\t\t}));\n\t\tconst testObject = new ConfigurationChangeEvent(change, undefined, configuration, undefined, new NullLogService());\n\n\t\tassert.deepStrictEqual([...testObject.affectedKeys], ['window.zoomLevel', 'workbench.editor.enablePreview', 'files.autoSave']);\n\n\t\tassert.ok(testObject.affectsConfiguration('window.zoomLevel'));\n\t\tassert.ok(testObject.affectsConfiguration('window'));\n\n\t\tassert.ok(testObject.affectsConfiguration('workbench.editor.enablePreview'));\n\t\tassert.ok(testObject.affectsConfiguration('workbench.editor'));\n\t\tassert.ok(testObject.affectsConfiguration('workbench'));\n\n\t\tassert.ok(testObject.affectsConfiguration('files'));\n\t\tassert.ok(testObject.affectsConfiguration('files.autoSave'));\n\t\tassert.ok(!testObject.affectsConfiguration('files.exclude'));\n\n\t\tassert.ok(!testObject.affectsConfiguration('[markdown]'));\n\t\tassert.ok(!testObject.affectsConfiguration('editor'));\n\t});\n\n\ttest('changeEvent affecting keys when configuration changed', () => {\n\t\tconst configuration = new TestConfiguration(ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()));\n\t\tconfiguration.updateLocalUserConfiguration(toConfigurationModel({\n\t\t\t'window.zoomLevel': 2,\n\t\t\t'workbench.editor.enablePreview': true,\n\t\t\t'files.autoSave': 'off',\n\t\t}));\n\t\tconst data = configuration.toData();\n\t\tconst change = configuration.compareAndUpdateLocalUserConfiguration(toConfigurationModel({\n\t\t\t'window.zoomLevel': 1,\n\t\t\t'workbench.editor.enablePreview': false,\n\t\t\t'files.autoSave': 'off',\n\t\t}));\n\t\tconst testObject = new ConfigurationChangeEvent(change, { data }, configuration, undefined, new NullLogService());\n\n\t\tassert.deepStrictEqual([...testObject.affectedKeys], ['window.zoomLevel', 'workbench.editor.enablePreview']);\n\n\t\tassert.ok(testObject.affectsConfiguration('window.zoomLevel'));\n\t\tassert.ok(testObject.affectsConfiguration('window'));\n\n\t\tassert.ok(testObject.affectsConfiguration('workbench.editor.enablePreview'));\n\t\tassert.ok(testObject.affectsConfiguration('workbench.editor'));\n\t\tassert.ok(testObject.affectsConfiguration('workbench'));\n\n\t\tassert.ok(!testObject.affectsConfiguration('files'));\n\t\tassert.ok(!testObject.affectsConfiguration('[markdown]'));\n\t\tassert.ok(!testObject.affectsConfiguration('editor'));\n\t});\n\n\ttest('changeEvent affecting overrides with new configuration', () => {\n\t\tconst configuration = new TestConfiguration(ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()));\n\t\tconst change = configuration.compareAndUpdateLocalUserConfiguration(toConfigurationModel({\n\t\t\t'files.autoSave': 'off',\n\t\t\t'[markdown]': {\n\t\t\t\t'editor.wordWrap': 'off'\n\t\t\t},\n\t\t\t'[typescript][jsonc]': {\n\t\t\t\t'editor.lineNumbers': 'off'\n\t\t\t}\n\t\t}));\n\t\tconst testObject = new ConfigurationChangeEvent(change, undefined, configuration, undefined, new NullLogService());\n\n\t\tassert.deepStrictEqual([...testObject.affectedKeys], ['files.autoSave', '[markdown]', '[typescript][jsonc]', 'editor.wordWrap', 'editor.lineNumbers']);\n\n\t\tassert.ok(testObject.affectsConfiguration('files'));\n\t\tassert.ok(testObject.affectsConfiguration('files.autoSave'));\n\t\tassert.ok(!testObject.affectsConfiguration('files.exclude'));\n\n\t\tassert.ok(testObject.affectsConfiguration('[markdown]'));\n\t\tassert.ok(!testObject.affectsConfiguration('[markdown].editor'));\n\t\tassert.ok(!testObject.affectsConfiguration('[markdown].workbench'));\n\n\t\tassert.ok(testObject.affectsConfiguration('editor'));\n\t\tassert.ok(testObject.affectsConfiguration('editor.wordWrap'));\n\t\tassert.ok(testObject.affectsConfiguration('editor.lineNumbers'));\n\t\tassert.ok(testObject.affectsConfiguration('editor', { overrideIdentifier: 'markdown' }));\n\t\tassert.ok(testObject.affectsConfiguration('editor', { overrideIdentifier: 'jsonc' }));\n\t\tassert.ok(testObject.affectsConfiguration('editor', { overrideIdentifier: 'typescript' }));\n\t\tassert.ok(testObject.affectsConfiguration('editor.wordWrap', { overrideIdentifier: 'markdown' }));\n\t\tassert.ok(!testObject.affectsConfiguration('editor.wordWrap', { overrideIdentifier: 'jsonc' }));\n\t\tassert.ok(!testObject.affectsConfiguration('editor.wordWrap', { overrideIdentifier: 'typescript' }));\n\t\tassert.ok(!testObject.affectsConfiguration('editor.lineNumbers', { overrideIdentifier: 'markdown' }));\n\t\tassert.ok(testObject.affectsConfiguration('editor.lineNumbers', { overrideIdentifier: 'typescript' }));\n\t\tassert.ok(testObject.affectsConfiguration('editor.lineNumbers', { overrideIdentifier: 'jsonc' }));\n\t\tassert.ok(!testObject.affectsConfiguration('editor', { overrideIdentifier: 'json' }));\n\t\tassert.ok(!testObject.affectsConfiguration('editor.fontSize', { overrideIdentifier: 'markdown' }));\n\n\t\tassert.ok(!testObject.affectsConfiguration('editor.fontSize'));\n\t\tassert.ok(!testObject.affectsConfiguration('window'));\n\t});\n\n\ttest('changeEvent affecting overrides when configuration changed', () => {\n\t\tconst configuration = new TestConfiguration(ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()));\n\t\tconfiguration.updateLocalUserConfiguration(toConfigurationModel({\n\t\t\t'workbench.editor.enablePreview': true,\n\t\t\t'[markdown]': {\n\t\t\t\t'editor.fontSize': 12,\n\t\t\t\t'editor.wordWrap': 'off'\n\t\t\t},\n\t\t\t'[css][scss]': {\n\t\t\t\t'editor.lineNumbers': 'off',\n\t\t\t\t'css.lint.emptyRules': 'error'\n\t\t\t},\n\t\t\t'files.autoSave': 'off',\n\t\t}));\n\t\tconst data = configuration.toData();\n\t\tconst change = configuration.compareAndUpdateLocalUserConfiguration(toConfigurationModel({\n\t\t\t'files.autoSave': 'off',\n\t\t\t'[markdown]': {\n\t\t\t\t'editor.fontSize': 13,\n\t\t\t\t'editor.wordWrap': 'off'\n\t\t\t},\n\t\t\t'[css][scss]': {\n\t\t\t\t'editor.lineNumbers': 'relative',\n\t\t\t\t'css.lint.emptyRules': 'error'\n\t\t\t},\n\t\t\t'window.zoomLevel': 1,\n\t\t}));\n\t\tconst testObject = new ConfigurationChangeEvent(change, { data }, configuration, undefined, new NullLogService());\n\n\t\tassert.deepStrictEqual([...testObject.affectedKeys], ['window.zoomLevel', '[markdown]', '[css][scss]', 'workbench.editor.enablePreview', 'editor.fontSize', 'editor.lineNumbers']);\n\n\t\tassert.ok(!testObject.affectsConfiguration('files'));\n\n\t\tassert.ok(testObject.affectsConfiguration('[markdown]'));\n\t\tassert.ok(!testObject.affectsConfiguration('[markdown].editor'));\n\t\tassert.ok(!testObject.affectsConfiguration('[markdown].editor.fontSize'));\n\t\tassert.ok(!testObject.affectsConfiguration('[markdown].editor.wordWrap'));\n\t\tassert.ok(!testObject.affectsConfiguration('[markdown].workbench'));\n\t\tassert.ok(testObject.affectsConfiguration('[css][scss]'));\n\n\t\tassert.ok(testObject.affectsConfiguration('editor'));\n\t\tassert.ok(testObject.affectsConfiguration('editor', { overrideIdentifier: 'markdown' }));\n\t\tassert.ok(testObject.affectsConfiguration('editor', { overrideIdentifier: 'css' }));\n\t\tassert.ok(testObject.affectsConfiguration('editor', { overrideIdentifier: 'scss' }));\n\t\tassert.ok(testObject.affectsConfiguration('editor.fontSize', { overrideIdentifier: 'markdown' }));\n\t\tassert.ok(!testObject.affectsConfiguration('editor.fontSize', { overrideIdentifier: 'css' }));\n\t\tassert.ok(!testObject.affectsConfiguration('editor.fontSize', { overrideIdentifier: 'scss' }));\n\t\tassert.ok(testObject.affectsConfiguration('editor.lineNumbers', { overrideIdentifier: 'scss' }));\n\t\tassert.ok(testObject.affectsConfiguration('editor.lineNumbers', { overrideIdentifier: 'css' }));\n\t\tassert.ok(!testObject.affectsConfiguration('editor.lineNumbers', { overrideIdentifier: 'markdown' }));\n\t\tassert.ok(!testObject.affectsConfiguration('editor.wordWrap'));\n\t\tassert.ok(!testObject.affectsConfiguration('editor.wordWrap', { overrideIdentifier: 'markdown' }));\n\t\tassert.ok(!testObject.affectsConfiguration('editor', { overrideIdentifier: 'json' }));\n\t\tassert.ok(!testObject.affectsConfiguration('editor.fontSize', { overrideIdentifier: 'json' }));\n\n\t\tassert.ok(testObject.affectsConfiguration('window'));\n\t\tassert.ok(testObject.affectsConfiguration('window.zoomLevel'));\n\t\tassert.ok(testObject.affectsConfiguration('window', { overrideIdentifier: 'markdown' }));\n\t\tassert.ok(testObject.affectsConfiguration('window.zoomLevel', { overrideIdentifier: 'markdown' }));\n\n\t\tassert.ok(testObject.affectsConfiguration('workbench'));\n\t\tassert.ok(testObject.affectsConfiguration('workbench.editor'));\n\t\tassert.ok(testObject.affectsConfiguration('workbench.editor.enablePreview'));\n\t\tassert.ok(testObject.affectsConfiguration('workbench', { overrideIdentifier: 'markdown' }));\n\t\tassert.ok(testObject.affectsConfiguration('workbench.editor', { overrideIdentifier: 'markdown' }));\n\t});\n\n\ttest('changeEvent affecting workspace folders', () => {\n\t\tconst configuration = new TestConfiguration(ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()));\n\t\tconfiguration.updateWorkspaceConfiguration(toConfigurationModel({ 'window.title': 'custom' }));\n\t\tconfiguration.updateFolderConfiguration(URI.file('folder1'), toConfigurationModel({ 'window.zoomLevel': 2, 'window.restoreFullscreen': true }));\n\t\tconfiguration.updateFolderConfiguration(URI.file('folder2'), toConfigurationModel({ 'workbench.editor.enablePreview': true, 'window.restoreWindows': true }));\n\t\tconst data = configuration.toData();\n\t\tconst workspace = new Workspace('a', [new WorkspaceFolder({ index: 0, name: 'a', uri: URI.file('folder1') }), new WorkspaceFolder({ index: 1, name: 'b', uri: URI.file('folder2') }), new WorkspaceFolder({ index: 2, name: 'c', uri: URI.file('folder3') })]);\n\t\tconst change = mergeChanges(\n\t\t\tconfiguration.compareAndUpdateWorkspaceConfiguration(toConfigurationModel({ 'window.title': 'native' })),\n\t\t\tconfiguration.compareAndUpdateFolderConfiguration(URI.file('folder1'), toConfigurationModel({ 'window.zoomLevel': 1, 'window.restoreFullscreen': false })),\n\t\t\tconfiguration.compareAndUpdateFolderConfiguration(URI.file('folder2'), toConfigurationModel({ 'workbench.editor.enablePreview': false, 'window.restoreWindows': false }))\n\t\t);\n\t\tconst testObject = new ConfigurationChangeEvent(change, { data, workspace }, configuration, workspace, new NullLogService());\n\n\t\tassert.deepStrictEqual([...testObject.affectedKeys], ['window.title', 'window.zoomLevel', 'window.restoreFullscreen', 'workbench.editor.enablePreview', 'window.restoreWindows']);\n\n\t\tassert.ok(testObject.affectsConfiguration('window.zoomLevel'));\n\t\tassert.ok(testObject.affectsConfiguration('window.zoomLevel', { resource: URI.file('folder1') }));\n\t\tassert.ok(testObject.affectsConfiguration('window.zoomLevel', { resource: URI.file(join('folder1', 'file1')) }));\n\t\tassert.ok(!testObject.affectsConfiguration('window.zoomLevel', { resource: URI.file('file1') }));\n\t\tassert.ok(!testObject.affectsConfiguration('window.zoomLevel', { resource: URI.file('file2') }));\n\t\tassert.ok(!testObject.affectsConfiguration('window.zoomLevel', { resource: URI.file(join('folder2', 'file2')) }));\n\t\tassert.ok(!testObject.affectsConfiguration('window.zoomLevel', { resource: URI.file(join('folder3', 'file3')) }));\n\n\t\tassert.ok(testObject.affectsConfiguration('window.restoreFullscreen'));\n\t\tassert.ok(testObject.affectsConfiguration('window.restoreFullscreen', { resource: URI.file(join('folder1', 'file1')) }));\n\t\tassert.ok(testObject.affectsConfiguration('window.restoreFullscreen', { resource: URI.file('folder1') }));\n\t\tassert.ok(!testObject.affectsConfiguration('window.restoreFullscreen', { resource: URI.file('file1') }));\n\t\tassert.ok(!testObject.affectsConfiguration('window.restoreFullscreen', { resource: URI.file('file2') }));\n\t\tassert.ok(!testObject.affectsConfiguration('window.restoreFullscreen', { resource: URI.file(join('folder2', 'file2')) }));\n\t\tassert.ok(!testObject.affectsConfiguration('window.restoreFullscreen', { resource: URI.file(join('folder3', 'file3')) }));\n\n\t\tassert.ok(testObject.affectsConfiguration('window.restoreWindows'));\n\t\tassert.ok(testObject.affectsConfiguration('window.restoreWindows', { resource: URI.file('folder2') }));\n\t\tassert.ok(testObject.affectsConfiguration('window.restoreWindows', { resource: URI.file(join('folder2', 'file2')) }));\n\t\tassert.ok(!testObject.affectsConfiguration('window.restoreWindows', { resource: URI.file('file2') }));\n\t\tassert.ok(!testObject.affectsConfiguration('window.restoreWindows', { resource: URI.file(join('folder1', 'file1')) }));\n\t\tassert.ok(!testObject.affectsConfiguration('window.restoreWindows', { resource: URI.file(join('folder3', 'file3')) }));\n\n\t\tassert.ok(testObject.affectsConfiguration('window.title'));\n\t\tassert.ok(testObject.affectsConfiguration('window.title', { resource: URI.file('folder1') }));\n\t\tassert.ok(testObject.affectsConfiguration('window.title', { resource: URI.file(join('folder1', 'file1')) }));\n\t\tassert.ok(testObject.affectsConfiguration('window.title', { resource: URI.file('folder2') }));\n\t\tassert.ok(testObject.affectsConfiguration('window.title', { resource: URI.file(join('folder2', 'file2')) }));\n\t\tassert.ok(testObject.affectsConfiguration('window.title', { resource: URI.file('folder3') }));\n\t\tassert.ok(testObject.affectsConfiguration('window.title', { resource: URI.file(join('folder3', 'file3')) }));\n\t\tassert.ok(testObject.affectsConfiguration('window.title', { resource: URI.file('file1') }));\n\t\tassert.ok(testObject.affectsConfiguration('window.title', { resource: URI.file('file2') }));\n\t\tassert.ok(testObject.affectsConfiguration('window.title', { resource: URI.file('file3') }));\n\n\t\tassert.ok(testObject.affectsConfiguration('window'));\n\t\tassert.ok(testObject.affectsConfiguration('window', { resource: URI.file('folder1') }));\n\t\tassert.ok(testObject.affectsConfiguration('window', { resource: URI.file(join('folder1', 'file1')) }));\n\t\tassert.ok(testObject.affectsConfiguration('window', { resource: URI.file('folder2') }));\n\t\tassert.ok(testObject.affectsConfiguration('window', { resource: URI.file(join('folder2', 'file2')) }));\n\t\tassert.ok(testObject.affectsConfiguration('window', { resource: URI.file('folder3') }));\n\t\tassert.ok(testObject.affectsConfiguration('window', { resource: URI.file(join('folder3', 'file3')) }));\n\t\tassert.ok(testObject.affectsConfiguration('window', { resource: URI.file('file1') }));\n\t\tassert.ok(testObject.affectsConfiguration('window', { resource: URI.file('file2') }));\n\t\tassert.ok(testObject.affectsConfiguration('window', { resource: URI.file('file3') }));\n\n\t\tassert.ok(testObject.affectsConfiguration('workbench.editor.enablePreview'));\n\t\tassert.ok(testObject.affectsConfiguration('workbench.editor.enablePreview', { resource: URI.file('folder2') }));\n\t\tassert.ok(testObject.affectsConfiguration('workbench.editor.enablePreview', { resource: URI.file(join('folder2', 'file2')) }));\n\t\tassert.ok(!testObject.affectsConfiguration('workbench.editor.enablePreview', { resource: URI.file('folder1') }));\n\t\tassert.ok(!testObject.affectsConfiguration('workbench.editor.enablePreview', { resource: URI.file(join('folder1', 'file1')) }));\n\t\tassert.ok(!testObject.affectsConfiguration('workbench.editor.enablePreview', { resource: URI.file('folder3') }));\n\n\t\tassert.ok(testObject.affectsConfiguration('workbench.editor'));\n\t\tassert.ok(testObject.affectsConfiguration('workbench.editor', { resource: URI.file('folder2') }));\n\t\tassert.ok(testObject.affectsConfiguration('workbench.editor', { resource: URI.file(join('folder2', 'file2')) }));\n\t\tassert.ok(!testObject.affectsConfiguration('workbench.editor', { resource: URI.file('folder1') }));\n\t\tassert.ok(!testObject.affectsConfiguration('workbench.editor', { resource: URI.file(join('folder1', 'file1')) }));\n\t\tassert.ok(!testObject.affectsConfiguration('workbench.editor', { resource: URI.file('folder3') }));\n\n\t\tassert.ok(testObject.affectsConfiguration('workbench'));\n\t\tassert.ok(testObject.affectsConfiguration('workbench', { resource: URI.file('folder2') }));\n\t\tassert.ok(testObject.affectsConfiguration('workbench', { resource: URI.file(join('folder2', 'file2')) }));\n\t\tassert.ok(!testObject.affectsConfiguration('workbench', { resource: URI.file('folder1') }));\n\t\tassert.ok(!testObject.affectsConfiguration('workbench', { resource: URI.file('folder3') }));\n\n\t\tassert.ok(!testObject.affectsConfiguration('files'));\n\t\tassert.ok(!testObject.affectsConfiguration('files', { resource: URI.file('folder1') }));\n\t\tassert.ok(!testObject.affectsConfiguration('files', { resource: URI.file(join('folder1', 'file1')) }));\n\t\tassert.ok(!testObject.affectsConfiguration('files', { resource: URI.file('folder2') }));\n\t\tassert.ok(!testObject.affectsConfiguration('files', { resource: URI.file(join('folder2', 'file2')) }));\n\t\tassert.ok(!testObject.affectsConfiguration('files', { resource: URI.file('folder3') }));\n\t\tassert.ok(!testObject.affectsConfiguration('files', { resource: URI.file(join('folder3', 'file3')) }));\n\t});\n\n\ttest('changeEvent - all', () => {\n\t\tconst configuration = new TestConfiguration(ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()));\n\t\tconfiguration.updateFolderConfiguration(URI.file('file1'), toConfigurationModel({ 'window.zoomLevel': 2, 'window.restoreFullscreen': true }));\n\t\tconst data = configuration.toData();\n\t\tconst change = mergeChanges(\n\t\t\tconfiguration.compareAndUpdateDefaultConfiguration(toConfigurationModel({\n\t\t\t\t'editor.lineNumbers': 'off',\n\t\t\t\t'[markdown]': {\n\t\t\t\t\t'editor.wordWrap': 'off'\n\t\t\t\t}\n\t\t\t}), ['editor.lineNumbers', '[markdown]']),\n\t\t\tconfiguration.compareAndUpdateLocalUserConfiguration(toConfigurationModel({\n\t\t\t\t'[json]': {\n\t\t\t\t\t'editor.lineNumbers': 'relative'\n\t\t\t\t}\n\t\t\t})),\n\t\t\tconfiguration.compareAndUpdateWorkspaceConfiguration(toConfigurationModel({ 'window.title': 'custom' })),\n\t\t\tconfiguration.compareAndDeleteFolderConfiguration(URI.file('file1')),\n\t\t\tconfiguration.compareAndUpdateFolderConfiguration(URI.file('file2'), toConfigurationModel({ 'workbench.editor.enablePreview': true, 'window.restoreWindows': true })));\n\t\tconst workspace = new Workspace('a', [new WorkspaceFolder({ index: 0, name: 'a', uri: URI.file('file1') }), new WorkspaceFolder({ index: 1, name: 'b', uri: URI.file('file2') }), new WorkspaceFolder({ index: 2, name: 'c', uri: URI.file('folder3') })]);\n\t\tconst testObject = new ConfigurationChangeEvent(change, { data, workspace }, configuration, workspace, new NullLogService());\n\n\t\tassert.deepStrictEqual([...testObject.affectedKeys], ['editor.lineNumbers', '[markdown]', '[json]', 'window.title', 'window.zoomLevel', 'window.restoreFullscreen', 'workbench.editor.enablePreview', 'window.restoreWindows', 'editor.wordWrap']);\n\n\t\tassert.ok(testObject.affectsConfiguration('window.title'));\n\t\tassert.ok(testObject.affectsConfiguration('window.title', { resource: URI.file('file1') }));\n\t\tassert.ok(testObject.affectsConfiguration('window.title', { resource: URI.file('file2') }));\n\n\t\tassert.ok(testObject.affectsConfiguration('window'));\n\t\tassert.ok(testObject.affectsConfiguration('window', { resource: URI.file('file1') }));\n\t\tassert.ok(testObject.affectsConfiguration('window', { resource: URI.file('file2') }));\n\n\t\tassert.ok(testObject.affectsConfiguration('window.zoomLevel'));\n\t\tassert.ok(testObject.affectsConfiguration('window.zoomLevel', { resource: URI.file('file1') }));\n\t\tassert.ok(!testObject.affectsConfiguration('window.zoomLevel', { resource: URI.file('file2') }));\n\n\t\tassert.ok(testObject.affectsConfiguration('window.restoreFullscreen'));\n\t\tassert.ok(testObject.affectsConfiguration('window.restoreFullscreen', { resource: URI.file('file1') }));\n\t\tassert.ok(!testObject.affectsConfiguration('window.restoreFullscreen', { resource: URI.file('file2') }));\n\n\t\tassert.ok(testObject.affectsConfiguration('window.restoreWindows'));\n\t\tassert.ok(testObject.affectsConfiguration('window.restoreWindows', { resource: URI.file('file2') }));\n\t\tassert.ok(!testObject.affectsConfiguration('window.restoreWindows', { resource: URI.file('file1') }));\n\n\t\tassert.ok(testObject.affectsConfiguration('workbench.editor.enablePreview'));\n\t\tassert.ok(testObject.affectsConfiguration('workbench.editor.enablePreview', { resource: URI.file('file2') }));\n\t\tassert.ok(!testObject.affectsConfiguration('workbench.editor.enablePreview', { resource: URI.file('file1') }));\n\n\t\tassert.ok(testObject.affectsConfiguration('workbench.editor'));\n\t\tassert.ok(testObject.affectsConfiguration('workbench.editor', { resource: URI.file('file2') }));\n\t\tassert.ok(!testObject.affectsConfiguration('workbench.editor', { resource: URI.file('file1') }));\n\n\t\tassert.ok(testObject.affectsConfiguration('workbench'));\n\t\tassert.ok(testObject.affectsConfiguration('workbench', { resource: URI.file('file2') }));\n\t\tassert.ok(!testObject.affectsConfiguration('workbench', { resource: URI.file('file1') }));\n\n\t\tassert.ok(!testObject.affectsConfiguration('files'));\n\t\tassert.ok(!testObject.affectsConfiguration('files', { resource: URI.file('file1') }));\n\t\tassert.ok(!testObject.affectsConfiguration('files', { resource: URI.file('file2') }));\n\n\t\tassert.ok(testObject.affectsConfiguration('editor'));\n\t\tassert.ok(testObject.affectsConfiguration('editor', { resource: URI.file('file1') }));\n\t\tassert.ok(testObject.affectsConfiguration('editor', { resource: URI.file('file2') }));\n\t\tassert.ok(testObject.affectsConfiguration('editor', { resource: URI.file('file1'), overrideIdentifier: 'json' }));\n\t\tassert.ok(testObject.affectsConfiguration('editor', { resource: URI.file('file1'), overrideIdentifier: 'markdown' }));\n\t\tassert.ok(testObject.affectsConfiguration('editor', { resource: URI.file('file1'), overrideIdentifier: 'typescript' }));\n\t\tassert.ok(testObject.affectsConfiguration('editor', { resource: URI.file('file2'), overrideIdentifier: 'json' }));\n\t\tassert.ok(testObject.affectsConfiguration('editor', { resource: URI.file('file2'), overrideIdentifier: 'markdown' }));\n\t\tassert.ok(testObject.affectsConfiguration('editor', { resource: URI.file('file2'), overrideIdentifier: 'typescript' }));\n\n\t\tassert.ok(testObject.affectsConfiguration('editor.lineNumbers'));\n\t\tassert.ok(testObject.affectsConfiguration('editor.lineNumbers', { resource: URI.file('file1') }));\n\t\tassert.ok(testObject.affectsConfiguration('editor.lineNumbers', { resource: URI.file('file2') }));\n\t\tassert.ok(testObject.affectsConfiguration('editor.lineNumbers', { resource: URI.file('file1'), overrideIdentifier: 'json' }));\n\t\tassert.ok(testObject.affectsConfiguration('editor.lineNumbers', { resource: URI.file('file1'), overrideIdentifier: 'markdown' }));\n\t\tassert.ok(testObject.affectsConfiguration('editor.lineNumbers', { resource: URI.file('file1'), overrideIdentifier: 'typescript' }));\n\t\tassert.ok(testObject.affectsConfiguration('editor.lineNumbers', { resource: URI.file('file2'), overrideIdentifier: 'json' }));\n\t\tassert.ok(testObject.affectsConfiguration('editor.lineNumbers', { resource: URI.file('file2'), overrideIdentifier: 'markdown' }));\n\t\tassert.ok(testObject.affectsConfiguration('editor.lineNumbers', { resource: URI.file('file2'), overrideIdentifier: 'typescript' }));\n\n\t\tassert.ok(testObject.affectsConfiguration('editor.wordWrap'));\n\t\tassert.ok(!testObject.affectsConfiguration('editor.wordWrap', { resource: URI.file('file1') }));\n\t\tassert.ok(!testObject.affectsConfiguration('editor.wordWrap', { resource: URI.file('file2') }));\n\t\tassert.ok(!testObject.affectsConfiguration('editor.wordWrap', { resource: URI.file('file1'), overrideIdentifier: 'json' }));\n\t\tassert.ok(testObject.affectsConfiguration('editor.wordWrap', { resource: URI.file('file1'), overrideIdentifier: 'markdown' }));\n\t\tassert.ok(!testObject.affectsConfiguration('editor.wordWrap', { resource: URI.file('file1'), overrideIdentifier: 'typescript' }));\n\t\tassert.ok(!testObject.affectsConfiguration('editor.wordWrap', { resource: URI.file('file2'), overrideIdentifier: 'json' }));\n\t\tassert.ok(testObject.affectsConfiguration('editor.wordWrap', { resource: URI.file('file2'), overrideIdentifier: 'markdown' }));\n\t\tassert.ok(!testObject.affectsConfiguration('editor.wordWrap', { resource: URI.file('file2'), overrideIdentifier: 'typescript' }));\n\n\t\tassert.ok(!testObject.affectsConfiguration('editor.fontSize'));\n\t\tassert.ok(!testObject.affectsConfiguration('editor.fontSize', { resource: URI.file('file1') }));\n\t\tassert.ok(!testObject.affectsConfiguration('editor.fontSize', { resource: URI.file('file2') }));\n\t});\n\n\ttest('changeEvent affecting tasks and launches', () => {\n\t\tconst configuration = new TestConfiguration(ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()));\n\t\tconst change = configuration.compareAndUpdateLocalUserConfiguration(toConfigurationModel({\n\t\t\t'launch': {\n\t\t\t\t'configuraiton': {}\n\t\t\t},\n\t\t\t'launch.version': 1,\n\t\t\t'tasks': {\n\t\t\t\t'version': 2\n\t\t\t}\n\t\t}));\n\t\tconst testObject = new ConfigurationChangeEvent(change, undefined, configuration, undefined, new NullLogService());\n\n\t\tassert.deepStrictEqual([...testObject.affectedKeys], ['launch', 'launch.version', 'tasks']);\n\t\tassert.ok(testObject.affectsConfiguration('launch'));\n\t\tassert.ok(testObject.affectsConfiguration('launch.version'));\n\t\tassert.ok(testObject.affectsConfiguration('tasks'));\n\t});\n\n\ttest('affectsConfiguration returns false for empty string', () => {\n\t\tconst configuration = new TestConfiguration(ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()), ConfigurationModel.createEmptyModel(new NullLogService()));\n\t\tconst change = configuration.compareAndUpdateLocalUserConfiguration(toConfigurationModel({ 'window.zoomLevel': 1 }));\n\t\tconst testObject = new ConfigurationChangeEvent(change, undefined, configuration, undefined, new NullLogService());\n\n\t\tassert.strictEqual(false, testObject.affectsConfiguration(''));\n\t});\n\n});\n\nfunction toConfigurationModel(obj: any): ConfigurationModel {\n\tconst parser = new ConfigurationModelParser('test', new NullLogService());\n\tparser.parse(JSON.stringify(obj));\n\treturn parser.configurationModel;\n}\n"],
  "mappings": "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",
  "names": []
}
