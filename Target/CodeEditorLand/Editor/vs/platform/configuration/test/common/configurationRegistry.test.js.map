{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/configuration/test/common/configurationRegistry.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\nimport { Extensions as ConfigurationExtensions, IConfigurationRegistry } from '../../common/configurationRegistry.js';\nimport { Registry } from '../../../registry/common/platform.js';\n\nsuite('ConfigurationRegistry', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tconst configurationRegistry = Registry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration);\n\n\tsetup(() => reset());\n\tteardown(() => reset());\n\n\tfunction reset() {\n\t\tconfigurationRegistry.deregisterConfigurations(configurationRegistry.getConfigurations());\n\t\tconfigurationRegistry.deregisterDefaultConfigurations(configurationRegistry.getRegisteredDefaultConfigurations());\n\t}\n\n\ttest('configuration override', async () => {\n\t\tconfigurationRegistry.registerConfiguration({\n\t\t\t'id': '_test_default',\n\t\t\t'type': 'object',\n\t\t\t'properties': {\n\t\t\t\t'config': {\n\t\t\t\t\t'type': 'object',\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tconfigurationRegistry.registerDefaultConfigurations([{ overrides: { 'config': { a: 1, b: 2 } } }]);\n\t\tconfigurationRegistry.registerDefaultConfigurations([{ overrides: { '[lang]': { a: 2, c: 3 } } }]);\n\n\t\tassert.deepStrictEqual(configurationRegistry.getConfigurationProperties()['config'].default, { a: 1, b: 2 });\n\t\tassert.deepStrictEqual(configurationRegistry.getConfigurationProperties()['[lang]'].default, { a: 2, c: 3 });\n\t});\n\n\ttest('configuration override defaults - prevent overriding default value', async () => {\n\t\tconfigurationRegistry.registerConfiguration({\n\t\t\t'id': '_test_default',\n\t\t\t'type': 'object',\n\t\t\t'properties': {\n\t\t\t\t'config.preventDefaultValueOverride': {\n\t\t\t\t\t'type': 'object',\n\t\t\t\t\tdefault: { a: 0 },\n\t\t\t\t\t'disallowConfigurationDefault': true\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconfigurationRegistry.registerDefaultConfigurations([{ overrides: { 'config.preventDefaultValueOverride': { a: 1, b: 2 } } }]);\n\n\t\tassert.deepStrictEqual(configurationRegistry.getConfigurationProperties()['config.preventDefaultValueOverride'].default, { a: 0 });\n\t});\n\n\ttest('configuration override defaults - merges defaults', async () => {\n\t\tconfigurationRegistry.registerDefaultConfigurations([{ overrides: { '[lang]': { a: 1, b: 2 } } }]);\n\t\tconfigurationRegistry.registerDefaultConfigurations([{ overrides: { '[lang]': { a: 2, c: 3 } } }]);\n\n\t\tassert.deepStrictEqual(configurationRegistry.getConfigurationProperties()['[lang]'].default, { a: 2, b: 2, c: 3 });\n\t});\n\n\ttest('configuration defaults - merge object default overrides', async () => {\n\t\tconfigurationRegistry.registerConfiguration({\n\t\t\t'id': '_test_default',\n\t\t\t'type': 'object',\n\t\t\t'properties': {\n\t\t\t\t'config': {\n\t\t\t\t\t'type': 'object',\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tconfigurationRegistry.registerDefaultConfigurations([{ overrides: { 'config': { a: 1, b: 2 } } }]);\n\t\tconfigurationRegistry.registerDefaultConfigurations([{ overrides: { 'config': { a: 2, c: 3 } } }]);\n\n\t\tassert.deepStrictEqual(configurationRegistry.getConfigurationProperties()['config'].default, { a: 2, b: 2, c: 3 });\n\t});\n\n\ttest('registering multiple settings with same policy', async () => {\n\t\tconfigurationRegistry.registerConfiguration({\n\t\t\t'id': '_test_default',\n\t\t\t'type': 'object',\n\t\t\t'properties': {\n\t\t\t\t'policy1': {\n\t\t\t\t\t'type': 'object',\n\t\t\t\t\tpolicy: {\n\t\t\t\t\t\tname: 'policy',\n\t\t\t\t\t\tminimumVersion: '1.0.0'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'policy2': {\n\t\t\t\t\t'type': 'object',\n\t\t\t\t\tpolicy: {\n\t\t\t\t\t\tname: 'policy',\n\t\t\t\t\t\tminimumVersion: '1.0.0'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tconst actual = configurationRegistry.getConfigurationProperties();\n\t\tassert.ok(actual['policy1'] !== undefined);\n\t\tassert.ok(actual['policy2'] === undefined);\n\t});\n\n\ttest('configuration defaults - deregister merged object default override', async () => {\n\t\tconfigurationRegistry.registerConfiguration({\n\t\t\t'id': '_test_default',\n\t\t\t'type': 'object',\n\t\t\t'properties': {\n\t\t\t\t'config': {\n\t\t\t\t\t'type': 'object',\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst overrides1 = [{ overrides: { 'config': { a: 1, b: 2 } }, source: { id: 'source1', displayName: 'source1' } }];\n\t\tconst overrides2 = [{ overrides: { 'config': { a: 2, c: 3 } }, source: { id: 'source2', displayName: 'source2' } }];\n\n\t\tconfigurationRegistry.registerDefaultConfigurations(overrides1);\n\t\tconfigurationRegistry.registerDefaultConfigurations(overrides2);\n\n\t\tassert.deepStrictEqual(configurationRegistry.getConfigurationProperties()['config'].default, { a: 2, b: 2, c: 3 });\n\n\t\tconfigurationRegistry.deregisterDefaultConfigurations(overrides2);\n\n\t\tassert.deepStrictEqual(configurationRegistry.getConfigurationProperties()['config'].default, { a: 1, b: 2 });\n\n\t\tconfigurationRegistry.deregisterDefaultConfigurations(overrides1);\n\n\t\tassert.deepStrictEqual(configurationRegistry.getConfigurationProperties()['config'].default, {});\n\t});\n\n\ttest('configuration defaults - deregister merged object default override without source', async () => {\n\t\tconfigurationRegistry.registerConfiguration({\n\t\t\t'id': '_test_default',\n\t\t\t'type': 'object',\n\t\t\t'properties': {\n\t\t\t\t'config': {\n\t\t\t\t\t'type': 'object',\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst overrides1 = [{ overrides: { 'config': { a: 1, b: 2 } } }];\n\t\tconst overrides2 = [{ overrides: { 'config': { a: 2, c: 3 } } }];\n\n\t\tconfigurationRegistry.registerDefaultConfigurations(overrides1);\n\t\tconfigurationRegistry.registerDefaultConfigurations(overrides2);\n\n\t\tassert.deepStrictEqual(configurationRegistry.getConfigurationProperties()['config'].default, { a: 2, b: 2, c: 3 });\n\n\t\tconfigurationRegistry.deregisterDefaultConfigurations(overrides2);\n\n\t\tassert.deepStrictEqual(configurationRegistry.getConfigurationProperties()['config'].default, { a: 1, b: 2 });\n\n\t\tconfigurationRegistry.deregisterDefaultConfigurations(overrides1);\n\n\t\tassert.deepStrictEqual(configurationRegistry.getConfigurationProperties()['config'].default, {});\n\t});\n\n\ttest('configuration defaults - deregister merged object default language overrides', async () => {\n\t\tconfigurationRegistry.registerConfiguration({\n\t\t\t'id': '_test_default',\n\t\t\t'type': 'object',\n\t\t\t'properties': {\n\t\t\t\t'config': {\n\t\t\t\t\t'type': 'object',\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst overrides1 = [{ overrides: { '[lang]': { 'config': { a: 1, b: 2 } } }, source: { id: 'source1', displayName: 'source1' } }];\n\t\tconst overrides2 = [{ overrides: { '[lang]': { 'config': { a: 2, c: 3 } } }, source: { id: 'source2', displayName: 'source2' } }];\n\n\t\tconfigurationRegistry.registerDefaultConfigurations(overrides1);\n\t\tconfigurationRegistry.registerDefaultConfigurations(overrides2);\n\n\t\tassert.deepStrictEqual(configurationRegistry.getConfigurationProperties()['[lang]'].default, { 'config': { a: 2, b: 2, c: 3 } });\n\n\t\tconfigurationRegistry.deregisterDefaultConfigurations(overrides2);\n\n\t\tassert.deepStrictEqual(configurationRegistry.getConfigurationProperties()['[lang]'].default, { 'config': { a: 1, b: 2 } });\n\n\t\tconfigurationRegistry.deregisterDefaultConfigurations(overrides1);\n\n\t\tassert.deepStrictEqual(configurationRegistry.getConfigurationProperties()['[lang]'], undefined);\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
