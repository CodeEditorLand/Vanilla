{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/configuration/common/configurationModels.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as arrays from '../../../base/common/arrays.js';\nimport { IStringDictionary } from '../../../base/common/collections.js';\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport * as json from '../../../base/common/json.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { getOrSet, ResourceMap } from '../../../base/common/map.js';\nimport * as objects from '../../../base/common/objects.js';\nimport { IExtUri } from '../../../base/common/resources.js';\nimport * as types from '../../../base/common/types.js';\nimport { URI, UriComponents } from '../../../base/common/uri.js';\nimport { addToValueTree, ConfigurationTarget, getConfigurationValue, IConfigurationChange, IConfigurationChangeEvent, IConfigurationCompareResult, IConfigurationData, IConfigurationModel, IConfigurationOverrides, IConfigurationUpdateOverrides, IConfigurationValue, IInspectValue, IOverrides, removeFromValueTree, toValuesTree } from './configuration.js';\nimport { ConfigurationScope, Extensions, IConfigurationPropertySchema, IConfigurationRegistry, overrideIdentifiersFromKey, OVERRIDE_PROPERTY_REGEX } from './configurationRegistry.js';\nimport { FileOperation, IFileService } from '../../files/common/files.js';\nimport { ILogService } from '../../log/common/log.js';\nimport { Registry } from '../../registry/common/platform.js';\nimport { Workspace } from '../../workspace/common/workspace.js';\n\nfunction freeze<T>(data: T): T {\n\treturn Object.isFrozen(data) ? data : objects.deepFreeze(data);\n}\n\ntype InspectValue<V> = IInspectValue<V> & { merged?: V };\n\nexport class ConfigurationModel implements IConfigurationModel {\n\n\tstatic createEmptyModel(logService: ILogService): ConfigurationModel {\n\t\treturn new ConfigurationModel({}, [], [], undefined, logService);\n\t}\n\n\tprivate readonly overrideConfigurations = new Map<string, ConfigurationModel>();\n\n\tconstructor(\n\t\tprivate readonly _contents: any,\n\t\tprivate readonly _keys: string[],\n\t\tprivate readonly _overrides: IOverrides[],\n\t\treadonly raw: ReadonlyArray<IStringDictionary<any> | ConfigurationModel> | undefined,\n\t\tprivate readonly logService: ILogService\n\t) {\n\t}\n\n\tprivate _rawConfiguration: ConfigurationModel | undefined;\n\tget rawConfiguration(): ConfigurationModel {\n\t\tif (!this._rawConfiguration) {\n\t\t\tif (this.raw?.length) {\n\t\t\t\tconst rawConfigurationModels = this.raw.map(raw => {\n\t\t\t\t\tif (raw instanceof ConfigurationModel) {\n\t\t\t\t\t\treturn raw;\n\t\t\t\t\t}\n\t\t\t\t\tconst parser = new ConfigurationModelParser('', this.logService);\n\t\t\t\t\tparser.parseRaw(raw);\n\t\t\t\t\treturn parser.configurationModel;\n\t\t\t\t});\n\t\t\t\tthis._rawConfiguration = rawConfigurationModels.reduce((previous, current) => current === previous ? current : previous.merge(current), rawConfigurationModels[0]);\n\t\t\t} else {\n\t\t\t\t// raw is same as current\n\t\t\t\tthis._rawConfiguration = this;\n\t\t\t}\n\t\t}\n\t\treturn this._rawConfiguration;\n\t}\n\n\tget contents(): any {\n\t\treturn this._contents;\n\t}\n\n\tget overrides(): IOverrides[] {\n\t\treturn this._overrides;\n\t}\n\n\tget keys(): string[] {\n\t\treturn this._keys;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._keys.length === 0 && Object.keys(this._contents).length === 0 && this._overrides.length === 0;\n\t}\n\n\tgetValue<V>(section: string | undefined): V {\n\t\treturn section ? getConfigurationValue<any>(this.contents, section) : this.contents;\n\t}\n\n\tinspect<V>(section: string | undefined, overrideIdentifier?: string | null): InspectValue<V> {\n\t\tconst that = this;\n\t\treturn {\n\t\t\tget value() {\n\t\t\t\treturn freeze(that.rawConfiguration.getValue<V>(section));\n\t\t\t},\n\t\t\tget override() {\n\t\t\t\treturn overrideIdentifier ? freeze(that.rawConfiguration.getOverrideValue<V>(section, overrideIdentifier)) : undefined;\n\t\t\t},\n\t\t\tget merged() {\n\t\t\t\treturn freeze(overrideIdentifier ? that.rawConfiguration.override(overrideIdentifier).getValue<V>(section) : that.rawConfiguration.getValue<V>(section));\n\t\t\t},\n\t\t\tget overrides() {\n\t\t\t\tconst overrides: { readonly identifiers: string[]; readonly value: V }[] = [];\n\t\t\t\tfor (const { contents, identifiers, keys } of that.rawConfiguration.overrides) {\n\t\t\t\t\tconst value = new ConfigurationModel(contents, keys, [], undefined, that.logService).getValue<V>(section);\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\toverrides.push({ identifiers, value });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn overrides.length ? freeze(overrides) : undefined;\n\t\t\t}\n\t\t};\n\t}\n\n\tgetOverrideValue<V>(section: string | undefined, overrideIdentifier: string): V | undefined {\n\t\tconst overrideContents = this.getContentsForOverrideIdentifer(overrideIdentifier);\n\t\treturn overrideContents\n\t\t\t? section ? getConfigurationValue<any>(overrideContents, section) : overrideContents\n\t\t\t: undefined;\n\t}\n\n\tgetKeysForOverrideIdentifier(identifier: string): string[] {\n\t\tconst keys: string[] = [];\n\t\tfor (const override of this.overrides) {\n\t\t\tif (override.identifiers.includes(identifier)) {\n\t\t\t\tkeys.push(...override.keys);\n\t\t\t}\n\t\t}\n\t\treturn arrays.distinct(keys);\n\t}\n\n\tgetAllOverrideIdentifiers(): string[] {\n\t\tconst result: string[] = [];\n\t\tfor (const override of this.overrides) {\n\t\t\tresult.push(...override.identifiers);\n\t\t}\n\t\treturn arrays.distinct(result);\n\t}\n\n\toverride(identifier: string): ConfigurationModel {\n\t\tlet overrideConfigurationModel = this.overrideConfigurations.get(identifier);\n\t\tif (!overrideConfigurationModel) {\n\t\t\toverrideConfigurationModel = this.createOverrideConfigurationModel(identifier);\n\t\t\tthis.overrideConfigurations.set(identifier, overrideConfigurationModel);\n\t\t}\n\t\treturn overrideConfigurationModel;\n\t}\n\n\tmerge(...others: ConfigurationModel[]): ConfigurationModel {\n\t\tconst contents = objects.deepClone(this.contents);\n\t\tconst overrides = objects.deepClone(this.overrides);\n\t\tconst keys = [...this.keys];\n\t\tconst raws = this.raw?.length ? [...this.raw] : [this];\n\n\t\tfor (const other of others) {\n\t\t\traws.push(...(other.raw?.length ? other.raw : [other]));\n\t\t\tif (other.isEmpty()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.mergeContents(contents, other.contents);\n\n\t\t\tfor (const otherOverride of other.overrides) {\n\t\t\t\tconst [override] = overrides.filter(o => arrays.equals(o.identifiers, otherOverride.identifiers));\n\t\t\t\tif (override) {\n\t\t\t\t\tthis.mergeContents(override.contents, otherOverride.contents);\n\t\t\t\t\toverride.keys.push(...otherOverride.keys);\n\t\t\t\t\toverride.keys = arrays.distinct(override.keys);\n\t\t\t\t} else {\n\t\t\t\t\toverrides.push(objects.deepClone(otherOverride));\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const key of other.keys) {\n\t\t\t\tif (keys.indexOf(key) === -1) {\n\t\t\t\t\tkeys.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn new ConfigurationModel(contents, keys, overrides, raws.every(raw => raw instanceof ConfigurationModel) ? undefined : raws, this.logService);\n\t}\n\n\tprivate createOverrideConfigurationModel(identifier: string): ConfigurationModel {\n\t\tconst overrideContents = this.getContentsForOverrideIdentifer(identifier);\n\n\t\tif (!overrideContents || typeof overrideContents !== 'object' || !Object.keys(overrideContents).length) {\n\t\t\t// If there are no valid overrides, return self\n\t\t\treturn this;\n\t\t}\n\n\t\tconst contents: any = {};\n\t\tfor (const key of arrays.distinct([...Object.keys(this.contents), ...Object.keys(overrideContents)])) {\n\n\t\t\tlet contentsForKey = this.contents[key];\n\t\t\tconst overrideContentsForKey = overrideContents[key];\n\n\t\t\t// If there are override contents for the key, clone and merge otherwise use base contents\n\t\t\tif (overrideContentsForKey) {\n\t\t\t\t// Clone and merge only if base contents and override contents are of type object otherwise just override\n\t\t\t\tif (typeof contentsForKey === 'object' && typeof overrideContentsForKey === 'object') {\n\t\t\t\t\tcontentsForKey = objects.deepClone(contentsForKey);\n\t\t\t\t\tthis.mergeContents(contentsForKey, overrideContentsForKey);\n\t\t\t\t} else {\n\t\t\t\t\tcontentsForKey = overrideContentsForKey;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcontents[key] = contentsForKey;\n\t\t}\n\n\t\treturn new ConfigurationModel(contents, this.keys, this.overrides, undefined, this.logService);\n\t}\n\n\tprivate mergeContents(source: any, target: any): void {\n\t\tfor (const key of Object.keys(target)) {\n\t\t\tif (key in source) {\n\t\t\t\tif (types.isObject(source[key]) && types.isObject(target[key])) {\n\t\t\t\t\tthis.mergeContents(source[key], target[key]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsource[key] = objects.deepClone(target[key]);\n\t\t}\n\t}\n\n\tprivate getContentsForOverrideIdentifer(identifier: string): any {\n\t\tlet contentsForIdentifierOnly: IStringDictionary<any> | null = null;\n\t\tlet contents: IStringDictionary<any> | null = null;\n\t\tconst mergeContents = (contentsToMerge: any) => {\n\t\t\tif (contentsToMerge) {\n\t\t\t\tif (contents) {\n\t\t\t\t\tthis.mergeContents(contents, contentsToMerge);\n\t\t\t\t} else {\n\t\t\t\t\tcontents = objects.deepClone(contentsToMerge);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tfor (const override of this.overrides) {\n\t\t\tif (override.identifiers.length === 1 && override.identifiers[0] === identifier) {\n\t\t\t\tcontentsForIdentifierOnly = override.contents;\n\t\t\t} else if (override.identifiers.includes(identifier)) {\n\t\t\t\tmergeContents(override.contents);\n\t\t\t}\n\t\t}\n\t\t// Merge contents of the identifier only at the end to take precedence.\n\t\tmergeContents(contentsForIdentifierOnly);\n\t\treturn contents;\n\t}\n\n\ttoJSON(): IConfigurationModel {\n\t\treturn {\n\t\t\tcontents: this.contents,\n\t\t\toverrides: this.overrides,\n\t\t\tkeys: this.keys\n\t\t};\n\t}\n\n\t// Update methods\n\n\tpublic addValue(key: string, value: any): void {\n\t\tthis.updateValue(key, value, true);\n\t}\n\n\tpublic setValue(key: string, value: any): void {\n\t\tthis.updateValue(key, value, false);\n\t}\n\n\tpublic removeValue(key: string): void {\n\t\tconst index = this.keys.indexOf(key);\n\t\tif (index === -1) {\n\t\t\treturn;\n\t\t}\n\t\tthis.keys.splice(index, 1);\n\t\tremoveFromValueTree(this.contents, key);\n\t\tif (OVERRIDE_PROPERTY_REGEX.test(key)) {\n\t\t\tthis.overrides.splice(this.overrides.findIndex(o => arrays.equals(o.identifiers, overrideIdentifiersFromKey(key))), 1);\n\t\t}\n\t}\n\n\tprivate updateValue(key: string, value: any, add: boolean): void {\n\t\taddToValueTree(this.contents, key, value, e => this.logService.error(e));\n\t\tadd = add || this.keys.indexOf(key) === -1;\n\t\tif (add) {\n\t\t\tthis.keys.push(key);\n\t\t}\n\t\tif (OVERRIDE_PROPERTY_REGEX.test(key)) {\n\t\t\tconst identifiers = overrideIdentifiersFromKey(key);\n\t\t\tconst override = {\n\t\t\t\tidentifiers,\n\t\t\t\tkeys: Object.keys(this.contents[key]),\n\t\t\t\tcontents: toValuesTree(this.contents[key], message => this.logService.error(message)),\n\t\t\t};\n\t\t\tconst index = this.overrides.findIndex(o => arrays.equals(o.identifiers, identifiers));\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.overrides[index] = override;\n\t\t\t} else {\n\t\t\t\tthis.overrides.push(override);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport interface ConfigurationParseOptions {\n\tscopes?: ConfigurationScope[];\n\tskipRestricted?: boolean;\n\tinclude?: string[];\n\texclude?: string[];\n}\n\nexport class ConfigurationModelParser {\n\n\tprivate _raw: any = null;\n\tprivate _configurationModel: ConfigurationModel | null = null;\n\tprivate _restrictedConfigurations: string[] = [];\n\tprivate _parseErrors: any[] = [];\n\n\tconstructor(\n\t\tprotected readonly _name: string,\n\t\tprotected readonly logService: ILogService\n\t) { }\n\n\tget configurationModel(): ConfigurationModel {\n\t\treturn this._configurationModel || ConfigurationModel.createEmptyModel(this.logService);\n\t}\n\n\tget restrictedConfigurations(): string[] {\n\t\treturn this._restrictedConfigurations;\n\t}\n\n\tget errors(): any[] {\n\t\treturn this._parseErrors;\n\t}\n\n\tpublic parse(content: string | null | undefined, options?: ConfigurationParseOptions): void {\n\t\tif (!types.isUndefinedOrNull(content)) {\n\t\t\tconst raw = this.doParseContent(content);\n\t\t\tthis.parseRaw(raw, options);\n\t\t}\n\t}\n\n\tpublic reparse(options: ConfigurationParseOptions): void {\n\t\tif (this._raw) {\n\t\t\tthis.parseRaw(this._raw, options);\n\t\t}\n\t}\n\n\tpublic parseRaw(raw: any, options?: ConfigurationParseOptions): void {\n\t\tthis._raw = raw;\n\t\tconst { contents, keys, overrides, restricted, hasExcludedProperties } = this.doParseRaw(raw, options);\n\t\tthis._configurationModel = new ConfigurationModel(contents, keys, overrides, hasExcludedProperties ? [raw] : undefined /* raw has not changed */, this.logService);\n\t\tthis._restrictedConfigurations = restricted || [];\n\t}\n\n\tprivate doParseContent(content: string): any {\n\t\tlet raw: any = {};\n\t\tlet currentProperty: string | null = null;\n\t\tlet currentParent: any = [];\n\t\tconst previousParents: any[] = [];\n\t\tconst parseErrors: json.ParseError[] = [];\n\n\t\tfunction onValue(value: any) {\n\t\t\tif (Array.isArray(currentParent)) {\n\t\t\t\t(<any[]>currentParent).push(value);\n\t\t\t} else if (currentProperty !== null) {\n\t\t\t\tcurrentParent[currentProperty] = value;\n\t\t\t}\n\t\t}\n\n\t\tconst visitor: json.JSONVisitor = {\n\t\t\tonObjectBegin: () => {\n\t\t\t\tconst object = {};\n\t\t\t\tonValue(object);\n\t\t\t\tpreviousParents.push(currentParent);\n\t\t\t\tcurrentParent = object;\n\t\t\t\tcurrentProperty = null;\n\t\t\t},\n\t\t\tonObjectProperty: (name: string) => {\n\t\t\t\tcurrentProperty = name;\n\t\t\t},\n\t\t\tonObjectEnd: () => {\n\t\t\t\tcurrentParent = previousParents.pop();\n\t\t\t},\n\t\t\tonArrayBegin: () => {\n\t\t\t\tconst array: any[] = [];\n\t\t\t\tonValue(array);\n\t\t\t\tpreviousParents.push(currentParent);\n\t\t\t\tcurrentParent = array;\n\t\t\t\tcurrentProperty = null;\n\t\t\t},\n\t\t\tonArrayEnd: () => {\n\t\t\t\tcurrentParent = previousParents.pop();\n\t\t\t},\n\t\t\tonLiteralValue: onValue,\n\t\t\tonError: (error: json.ParseErrorCode, offset: number, length: number) => {\n\t\t\t\tparseErrors.push({ error, offset, length });\n\t\t\t}\n\t\t};\n\t\tif (content) {\n\t\t\ttry {\n\t\t\t\tjson.visit(content, visitor);\n\t\t\t\traw = currentParent[0] || {};\n\t\t\t} catch (e) {\n\t\t\t\tthis.logService.error(`Error while parsing settings file ${this._name}: ${e}`);\n\t\t\t\tthis._parseErrors = [e];\n\t\t\t}\n\t\t}\n\n\t\treturn raw;\n\t}\n\n\tprotected doParseRaw(raw: any, options?: ConfigurationParseOptions): IConfigurationModel & { restricted?: string[]; hasExcludedProperties?: boolean } {\n\t\tconst configurationProperties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\t\tconst filtered = this.filter(raw, configurationProperties, true, options);\n\t\traw = filtered.raw;\n\t\tconst contents = toValuesTree(raw, message => this.logService.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\tconst keys = Object.keys(raw);\n\t\tconst overrides = this.toOverrides(raw, message => this.logService.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\treturn { contents, keys, overrides, restricted: filtered.restricted, hasExcludedProperties: filtered.hasExcludedProperties };\n\t}\n\n\tprivate filter(properties: any, configurationProperties: { [qualifiedKey: string]: IConfigurationPropertySchema | undefined }, filterOverriddenProperties: boolean, options?: ConfigurationParseOptions): { raw: {}; restricted: string[]; hasExcludedProperties: boolean } {\n\t\tlet hasExcludedProperties = false;\n\t\tif (!options?.scopes && !options?.skipRestricted && !options?.exclude?.length) {\n\t\t\treturn { raw: properties, restricted: [], hasExcludedProperties };\n\t\t}\n\t\tconst raw: any = {};\n\t\tconst restricted: string[] = [];\n\t\tfor (const key in properties) {\n\t\t\tif (OVERRIDE_PROPERTY_REGEX.test(key) && filterOverriddenProperties) {\n\t\t\t\tconst result = this.filter(properties[key], configurationProperties, false, options);\n\t\t\t\traw[key] = result.raw;\n\t\t\t\thasExcludedProperties = hasExcludedProperties || result.hasExcludedProperties;\n\t\t\t\trestricted.push(...result.restricted);\n\t\t\t} else {\n\t\t\t\tconst propertySchema = configurationProperties[key];\n\t\t\t\tconst scope = propertySchema ? typeof propertySchema.scope !== 'undefined' ? propertySchema.scope : ConfigurationScope.WINDOW : undefined;\n\t\t\t\tif (propertySchema?.restricted) {\n\t\t\t\t\trestricted.push(key);\n\t\t\t\t}\n\t\t\t\tif (!options.exclude?.includes(key) /* Check exclude */\n\t\t\t\t\t&& (options.include?.includes(key) /* Check include */\n\t\t\t\t\t\t|| ((scope === undefined || options.scopes === undefined || options.scopes.includes(scope)) /* Check scopes */\n\t\t\t\t\t\t\t&& !(options.skipRestricted && propertySchema?.restricted)))) /* Check restricted */ {\n\t\t\t\t\traw[key] = properties[key];\n\t\t\t\t} else {\n\t\t\t\t\thasExcludedProperties = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { raw, restricted, hasExcludedProperties };\n\t}\n\n\tprivate toOverrides(raw: any, conflictReporter: (message: string) => void): IOverrides[] {\n\t\tconst overrides: IOverrides[] = [];\n\t\tfor (const key of Object.keys(raw)) {\n\t\t\tif (OVERRIDE_PROPERTY_REGEX.test(key)) {\n\t\t\t\tconst overrideRaw: any = {};\n\t\t\t\tfor (const keyInOverrideRaw in raw[key]) {\n\t\t\t\t\toverrideRaw[keyInOverrideRaw] = raw[key][keyInOverrideRaw];\n\t\t\t\t}\n\t\t\t\toverrides.push({\n\t\t\t\t\tidentifiers: overrideIdentifiersFromKey(key),\n\t\t\t\t\tkeys: Object.keys(overrideRaw),\n\t\t\t\t\tcontents: toValuesTree(overrideRaw, conflictReporter)\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn overrides;\n\t}\n\n}\n\nexport class UserSettings extends Disposable {\n\n\tprivate readonly parser: ConfigurationModelParser;\n\tprotected readonly _onDidChange: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tconstructor(\n\t\tprivate readonly userSettingsResource: URI,\n\t\tprotected parseOptions: ConfigurationParseOptions,\n\t\textUri: IExtUri,\n\t\tprivate readonly fileService: IFileService,\n\t\tprivate readonly logService: ILogService,\n\t) {\n\t\tsuper();\n\t\tthis.parser = new ConfigurationModelParser(this.userSettingsResource.toString(), logService);\n\t\tthis._register(this.fileService.watch(extUri.dirname(this.userSettingsResource)));\n\t\t// Also listen to the resource incase the resource is a symlink - https://github.com/microsoft/vscode/issues/118134\n\t\tthis._register(this.fileService.watch(this.userSettingsResource));\n\t\tthis._register(Event.any(\n\t\t\tEvent.filter(this.fileService.onDidFilesChange, e => e.contains(this.userSettingsResource)),\n\t\t\tEvent.filter(this.fileService.onDidRunOperation, e => (e.isOperation(FileOperation.CREATE) || e.isOperation(FileOperation.COPY) || e.isOperation(FileOperation.DELETE) || e.isOperation(FileOperation.WRITE)) && extUri.isEqual(e.resource, userSettingsResource))\n\t\t)(() => this._onDidChange.fire()));\n\t}\n\n\tasync loadConfiguration(): Promise<ConfigurationModel> {\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(this.userSettingsResource);\n\t\t\tthis.parser.parse(content.value.toString() || '{}', this.parseOptions);\n\t\t\treturn this.parser.configurationModel;\n\t\t} catch (e) {\n\t\t\treturn ConfigurationModel.createEmptyModel(this.logService);\n\t\t}\n\t}\n\n\treparse(parseOptions?: ConfigurationParseOptions): ConfigurationModel {\n\t\tif (parseOptions) {\n\t\t\tthis.parseOptions = parseOptions;\n\t\t}\n\t\tthis.parser.reparse(this.parseOptions);\n\t\treturn this.parser.configurationModel;\n\t}\n\n\tgetRestrictedSettings(): string[] {\n\t\treturn this.parser.restrictedConfigurations;\n\t}\n}\n\nclass ConfigurationInspectValue<V> implements IConfigurationValue<V> {\n\n\tconstructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly overrides: IConfigurationOverrides,\n\t\tprivate readonly _value: V | undefined,\n\t\treadonly overrideIdentifiers: string[] | undefined,\n\t\tprivate readonly defaultConfiguration: ConfigurationModel,\n\t\tprivate readonly policyConfiguration: ConfigurationModel | undefined,\n\t\tprivate readonly applicationConfiguration: ConfigurationModel | undefined,\n\t\tprivate readonly userConfiguration: ConfigurationModel,\n\t\tprivate readonly localUserConfiguration: ConfigurationModel,\n\t\tprivate readonly remoteUserConfiguration: ConfigurationModel,\n\t\tprivate readonly workspaceConfiguration: ConfigurationModel | undefined,\n\t\tprivate readonly folderConfigurationModel: ConfigurationModel | undefined,\n\t\tprivate readonly memoryConfigurationModel: ConfigurationModel\n\t) {\n\t}\n\n\tget value(): V | undefined {\n\t\treturn freeze(this._value);\n\t}\n\n\tprivate toInspectValue(inspectValue: IInspectValue<V> | undefined | null): IInspectValue<V> | undefined {\n\t\treturn inspectValue?.value !== undefined || inspectValue?.override !== undefined || inspectValue?.overrides !== undefined ? inspectValue : undefined;\n\t}\n\n\tprivate _defaultInspectValue: InspectValue<V> | undefined;\n\tprivate get defaultInspectValue(): InspectValue<V> {\n\t\tif (!this._defaultInspectValue) {\n\t\t\tthis._defaultInspectValue = this.defaultConfiguration.inspect<V>(this.key, this.overrides.overrideIdentifier);\n\t\t}\n\t\treturn this._defaultInspectValue;\n\t}\n\n\tget defaultValue(): V | undefined {\n\t\treturn this.defaultInspectValue.merged;\n\t}\n\n\tget default(): IInspectValue<V> | undefined {\n\t\treturn this.toInspectValue(this.defaultInspectValue);\n\t}\n\n\tprivate _policyInspectValue: InspectValue<V> | undefined | null;\n\tprivate get policyInspectValue(): InspectValue<V> | null {\n\t\tif (this._policyInspectValue === undefined) {\n\t\t\tthis._policyInspectValue = this.policyConfiguration ? this.policyConfiguration.inspect<V>(this.key) : null;\n\t\t}\n\t\treturn this._policyInspectValue;\n\t}\n\n\tget policyValue(): V | undefined {\n\t\treturn this.policyInspectValue?.merged;\n\t}\n\n\tget policy(): IInspectValue<V> | undefined {\n\t\treturn this.policyInspectValue?.value !== undefined ? { value: this.policyInspectValue.value } : undefined;\n\t}\n\n\tprivate _applicationInspectValue: InspectValue<V> | undefined | null;\n\tprivate get applicationInspectValue(): InspectValue<V> | null {\n\t\tif (this._applicationInspectValue === undefined) {\n\t\t\tthis._applicationInspectValue = this.applicationConfiguration ? this.applicationConfiguration.inspect<V>(this.key) : null;\n\t\t}\n\t\treturn this._applicationInspectValue;\n\t}\n\n\tget applicationValue(): V | undefined {\n\t\treturn this.applicationInspectValue?.merged;\n\t}\n\n\tget application(): IInspectValue<V> | undefined {\n\t\treturn this.toInspectValue(this.applicationInspectValue);\n\t}\n\n\tprivate _userInspectValue: InspectValue<V> | undefined;\n\tprivate get userInspectValue(): InspectValue<V> {\n\t\tif (!this._userInspectValue) {\n\t\t\tthis._userInspectValue = this.userConfiguration.inspect<V>(this.key, this.overrides.overrideIdentifier);\n\t\t}\n\t\treturn this._userInspectValue;\n\t}\n\n\tget userValue(): V | undefined {\n\t\treturn this.userInspectValue.merged;\n\t}\n\n\tget user(): IInspectValue<V> | undefined {\n\t\treturn this.toInspectValue(this.userInspectValue);\n\t}\n\n\tprivate _userLocalInspectValue: InspectValue<V> | undefined;\n\tprivate get userLocalInspectValue(): InspectValue<V> {\n\t\tif (!this._userLocalInspectValue) {\n\t\t\tthis._userLocalInspectValue = this.localUserConfiguration.inspect<V>(this.key, this.overrides.overrideIdentifier);\n\t\t}\n\t\treturn this._userLocalInspectValue;\n\t}\n\n\tget userLocalValue(): V | undefined {\n\t\treturn this.userLocalInspectValue.merged;\n\t}\n\n\tget userLocal(): IInspectValue<V> | undefined {\n\t\treturn this.toInspectValue(this.userLocalInspectValue);\n\t}\n\n\tprivate _userRemoteInspectValue: InspectValue<V> | undefined;\n\tprivate get userRemoteInspectValue(): InspectValue<V> {\n\t\tif (!this._userRemoteInspectValue) {\n\t\t\tthis._userRemoteInspectValue = this.remoteUserConfiguration.inspect<V>(this.key, this.overrides.overrideIdentifier);\n\t\t}\n\t\treturn this._userRemoteInspectValue;\n\t}\n\n\tget userRemoteValue(): V | undefined {\n\t\treturn this.userRemoteInspectValue.merged;\n\t}\n\n\tget userRemote(): IInspectValue<V> | undefined {\n\t\treturn this.toInspectValue(this.userRemoteInspectValue);\n\t}\n\n\tprivate _workspaceInspectValue: InspectValue<V> | undefined | null;\n\tprivate get workspaceInspectValue(): InspectValue<V> | null {\n\t\tif (this._workspaceInspectValue === undefined) {\n\t\t\tthis._workspaceInspectValue = this.workspaceConfiguration ? this.workspaceConfiguration.inspect<V>(this.key, this.overrides.overrideIdentifier) : null;\n\t\t}\n\t\treturn this._workspaceInspectValue;\n\t}\n\n\tget workspaceValue(): V | undefined {\n\t\treturn this.workspaceInspectValue?.merged;\n\t}\n\n\tget workspace(): IInspectValue<V> | undefined {\n\t\treturn this.toInspectValue(this.workspaceInspectValue);\n\t}\n\n\tprivate _workspaceFolderInspectValue: InspectValue<V> | undefined | null;\n\tprivate get workspaceFolderInspectValue(): InspectValue<V> | null {\n\t\tif (this._workspaceFolderInspectValue === undefined) {\n\t\t\tthis._workspaceFolderInspectValue = this.folderConfigurationModel ? this.folderConfigurationModel.inspect<V>(this.key, this.overrides.overrideIdentifier) : null;\n\t\t}\n\t\treturn this._workspaceFolderInspectValue;\n\t}\n\n\tget workspaceFolderValue(): V | undefined {\n\t\treturn this.workspaceFolderInspectValue?.merged;\n\t}\n\n\tget workspaceFolder(): IInspectValue<V> | undefined {\n\t\treturn this.toInspectValue(this.workspaceFolderInspectValue);\n\t}\n\n\tprivate _memoryInspectValue: InspectValue<V> | undefined;\n\tprivate get memoryInspectValue(): InspectValue<V> {\n\t\tif (this._memoryInspectValue === undefined) {\n\t\t\tthis._memoryInspectValue = this.memoryConfigurationModel.inspect<V>(this.key, this.overrides.overrideIdentifier);\n\t\t}\n\t\treturn this._memoryInspectValue;\n\t}\n\n\tget memoryValue(): V | undefined {\n\t\treturn this.memoryInspectValue.merged;\n\t}\n\n\tget memory(): IInspectValue<V> | undefined {\n\t\treturn this.toInspectValue(this.memoryInspectValue);\n\t}\n\n}\n\nexport class Configuration {\n\n\tprivate _workspaceConsolidatedConfiguration: ConfigurationModel | null = null;\n\tprivate _foldersConsolidatedConfigurations = new ResourceMap<ConfigurationModel>();\n\n\tconstructor(\n\t\tprivate _defaultConfiguration: ConfigurationModel,\n\t\tprivate _policyConfiguration: ConfigurationModel,\n\t\tprivate _applicationConfiguration: ConfigurationModel,\n\t\tprivate _localUserConfiguration: ConfigurationModel,\n\t\tprivate _remoteUserConfiguration: ConfigurationModel,\n\t\tprivate _workspaceConfiguration: ConfigurationModel,\n\t\tprivate _folderConfigurations: ResourceMap<ConfigurationModel>,\n\t\tprivate _memoryConfiguration: ConfigurationModel,\n\t\tprivate _memoryConfigurationByResource: ResourceMap<ConfigurationModel>,\n\t\tprivate readonly logService: ILogService\n\t) {\n\t}\n\n\tgetValue(section: string | undefined, overrides: IConfigurationOverrides, workspace: Workspace | undefined): any {\n\t\tconst consolidateConfigurationModel = this.getConsolidatedConfigurationModel(section, overrides, workspace);\n\t\treturn consolidateConfigurationModel.getValue(section);\n\t}\n\n\tupdateValue(key: string, value: any, overrides: IConfigurationUpdateOverrides = {}): void {\n\t\tlet memoryConfiguration: ConfigurationModel | undefined;\n\t\tif (overrides.resource) {\n\t\t\tmemoryConfiguration = this._memoryConfigurationByResource.get(overrides.resource);\n\t\t\tif (!memoryConfiguration) {\n\t\t\t\tmemoryConfiguration = ConfigurationModel.createEmptyModel(this.logService);\n\t\t\t\tthis._memoryConfigurationByResource.set(overrides.resource, memoryConfiguration);\n\t\t\t}\n\t\t} else {\n\t\t\tmemoryConfiguration = this._memoryConfiguration;\n\t\t}\n\n\t\tif (value === undefined) {\n\t\t\tmemoryConfiguration.removeValue(key);\n\t\t} else {\n\t\t\tmemoryConfiguration.setValue(key, value);\n\t\t}\n\n\t\tif (!overrides.resource) {\n\t\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\t}\n\t}\n\n\tinspect<C>(key: string, overrides: IConfigurationOverrides, workspace: Workspace | undefined): IConfigurationValue<C> {\n\t\tconst consolidateConfigurationModel = this.getConsolidatedConfigurationModel(key, overrides, workspace);\n\t\tconst folderConfigurationModel = this.getFolderConfigurationModelForResource(overrides.resource, workspace);\n\t\tconst memoryConfigurationModel = overrides.resource ? this._memoryConfigurationByResource.get(overrides.resource) || this._memoryConfiguration : this._memoryConfiguration;\n\t\tconst overrideIdentifiers = new Set<string>();\n\t\tfor (const override of consolidateConfigurationModel.overrides) {\n\t\t\tfor (const overrideIdentifier of override.identifiers) {\n\t\t\t\tif (consolidateConfigurationModel.getOverrideValue(key, overrideIdentifier) !== undefined) {\n\t\t\t\t\toverrideIdentifiers.add(overrideIdentifier);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn new ConfigurationInspectValue<C>(\n\t\t\tkey,\n\t\t\toverrides,\n\t\t\tconsolidateConfigurationModel.getValue<C>(key),\n\t\t\toverrideIdentifiers.size ? [...overrideIdentifiers] : undefined,\n\t\t\tthis._defaultConfiguration,\n\t\t\tthis._policyConfiguration.isEmpty() ? undefined : this._policyConfiguration,\n\t\t\tthis.applicationConfiguration.isEmpty() ? undefined : this.applicationConfiguration,\n\t\t\tthis.userConfiguration,\n\t\t\tthis.localUserConfiguration,\n\t\t\tthis.remoteUserConfiguration,\n\t\t\tworkspace ? this._workspaceConfiguration : undefined,\n\t\t\tfolderConfigurationModel ? folderConfigurationModel : undefined,\n\t\t\tmemoryConfigurationModel\n\t\t);\n\n\t}\n\n\tkeys(workspace: Workspace | undefined): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t} {\n\t\tconst folderConfigurationModel = this.getFolderConfigurationModelForResource(undefined, workspace);\n\t\treturn {\n\t\t\tdefault: this._defaultConfiguration.keys.slice(0),\n\t\t\tuser: this.userConfiguration.keys.slice(0),\n\t\t\tworkspace: this._workspaceConfiguration.keys.slice(0),\n\t\t\tworkspaceFolder: folderConfigurationModel ? folderConfigurationModel.keys.slice(0) : []\n\t\t};\n\t}\n\n\tupdateDefaultConfiguration(defaultConfiguration: ConfigurationModel): void {\n\t\tthis._defaultConfiguration = defaultConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdatePolicyConfiguration(policyConfiguration: ConfigurationModel): void {\n\t\tthis._policyConfiguration = policyConfiguration;\n\t}\n\n\tupdateApplicationConfiguration(applicationConfiguration: ConfigurationModel): void {\n\t\tthis._applicationConfiguration = applicationConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateLocalUserConfiguration(localUserConfiguration: ConfigurationModel): void {\n\t\tthis._localUserConfiguration = localUserConfiguration;\n\t\tthis._userConfiguration = null;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateRemoteUserConfiguration(remoteUserConfiguration: ConfigurationModel): void {\n\t\tthis._remoteUserConfiguration = remoteUserConfiguration;\n\t\tthis._userConfiguration = null;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateWorkspaceConfiguration(workspaceConfiguration: ConfigurationModel): void {\n\t\tthis._workspaceConfiguration = workspaceConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateFolderConfiguration(resource: URI, configuration: ConfigurationModel): void {\n\t\tthis._folderConfigurations.set(resource, configuration);\n\t\tthis._foldersConsolidatedConfigurations.delete(resource);\n\t}\n\n\tdeleteFolderConfiguration(resource: URI): void {\n\t\tthis.folderConfigurations.delete(resource);\n\t\tthis._foldersConsolidatedConfigurations.delete(resource);\n\t}\n\n\tcompareAndUpdateDefaultConfiguration(defaults: ConfigurationModel, keys?: string[]): IConfigurationChange {\n\t\tconst overrides: [string, string[]][] = [];\n\t\tif (!keys) {\n\t\t\tconst { added, updated, removed } = compare(this._defaultConfiguration, defaults);\n\t\t\tkeys = [...added, ...updated, ...removed];\n\t\t}\n\t\tfor (const key of keys) {\n\t\t\tfor (const overrideIdentifier of overrideIdentifiersFromKey(key)) {\n\t\t\t\tconst fromKeys = this._defaultConfiguration.getKeysForOverrideIdentifier(overrideIdentifier);\n\t\t\t\tconst toKeys = defaults.getKeysForOverrideIdentifier(overrideIdentifier);\n\t\t\t\tconst keys = [\n\t\t\t\t\t...toKeys.filter(key => fromKeys.indexOf(key) === -1),\n\t\t\t\t\t...fromKeys.filter(key => toKeys.indexOf(key) === -1),\n\t\t\t\t\t...fromKeys.filter(key => !objects.equals(this._defaultConfiguration.override(overrideIdentifier).getValue(key), defaults.override(overrideIdentifier).getValue(key)))\n\t\t\t\t];\n\t\t\t\toverrides.push([overrideIdentifier, keys]);\n\t\t\t}\n\t\t}\n\t\tthis.updateDefaultConfiguration(defaults);\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdatePolicyConfiguration(policyConfiguration: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed } = compare(this._policyConfiguration, policyConfiguration);\n\t\tconst keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updatePolicyConfiguration(policyConfiguration);\n\t\t}\n\t\treturn { keys, overrides: [] };\n\t}\n\n\tcompareAndUpdateApplicationConfiguration(application: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.applicationConfiguration, application);\n\t\tconst keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateApplicationConfiguration(application);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateLocalUserConfiguration(user: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.localUserConfiguration, user);\n\t\tconst keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateLocalUserConfiguration(user);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateRemoteUserConfiguration(user: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.remoteUserConfiguration, user);\n\t\tconst keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateRemoteUserConfiguration(user);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateWorkspaceConfiguration(workspaceConfiguration: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.workspaceConfiguration, workspaceConfiguration);\n\t\tconst keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateWorkspaceConfiguration(workspaceConfiguration);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateFolderConfiguration(resource: URI, folderConfiguration: ConfigurationModel): IConfigurationChange {\n\t\tconst currentFolderConfiguration = this.folderConfigurations.get(resource);\n\t\tconst { added, updated, removed, overrides } = compare(currentFolderConfiguration, folderConfiguration);\n\t\tconst keys = [...added, ...updated, ...removed];\n\t\tif (keys.length || !currentFolderConfiguration) {\n\t\t\tthis.updateFolderConfiguration(resource, folderConfiguration);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndDeleteFolderConfiguration(folder: URI): IConfigurationChange {\n\t\tconst folderConfig = this.folderConfigurations.get(folder);\n\t\tif (!folderConfig) {\n\t\t\tthrow new Error('Unknown folder');\n\t\t}\n\t\tthis.deleteFolderConfiguration(folder);\n\t\tconst { added, updated, removed, overrides } = compare(folderConfig, undefined);\n\t\treturn { keys: [...added, ...updated, ...removed], overrides };\n\t}\n\n\tget defaults(): ConfigurationModel {\n\t\treturn this._defaultConfiguration;\n\t}\n\n\tget applicationConfiguration(): ConfigurationModel {\n\t\treturn this._applicationConfiguration;\n\t}\n\n\tprivate _userConfiguration: ConfigurationModel | null = null;\n\tget userConfiguration(): ConfigurationModel {\n\t\tif (!this._userConfiguration) {\n\t\t\tthis._userConfiguration = this._remoteUserConfiguration.isEmpty() ? this._localUserConfiguration : this._localUserConfiguration.merge(this._remoteUserConfiguration);\n\t\t}\n\t\treturn this._userConfiguration;\n\t}\n\n\tget localUserConfiguration(): ConfigurationModel {\n\t\treturn this._localUserConfiguration;\n\t}\n\n\tget remoteUserConfiguration(): ConfigurationModel {\n\t\treturn this._remoteUserConfiguration;\n\t}\n\n\tget workspaceConfiguration(): ConfigurationModel {\n\t\treturn this._workspaceConfiguration;\n\t}\n\n\tget folderConfigurations(): ResourceMap<ConfigurationModel> {\n\t\treturn this._folderConfigurations;\n\t}\n\n\tprivate getConsolidatedConfigurationModel(section: string | undefined, overrides: IConfigurationOverrides, workspace: Workspace | undefined): ConfigurationModel {\n\t\tlet configurationModel = this.getConsolidatedConfigurationModelForResource(overrides, workspace);\n\t\tif (overrides.overrideIdentifier) {\n\t\t\tconfigurationModel = configurationModel.override(overrides.overrideIdentifier);\n\t\t}\n\t\tif (!this._policyConfiguration.isEmpty() && this._policyConfiguration.getValue(section) !== undefined) {\n\t\t\tconfigurationModel = configurationModel.merge(this._policyConfiguration);\n\t\t}\n\t\treturn configurationModel;\n\t}\n\n\tprivate getConsolidatedConfigurationModelForResource({ resource }: IConfigurationOverrides, workspace: Workspace | undefined): ConfigurationModel {\n\t\tlet consolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n\n\t\tif (workspace && resource) {\n\t\t\tconst root = workspace.getFolder(resource);\n\t\t\tif (root) {\n\t\t\t\tconsolidateConfiguration = this.getFolderConsolidatedConfiguration(root.uri) || consolidateConfiguration;\n\t\t\t}\n\t\t\tconst memoryConfigurationForResource = this._memoryConfigurationByResource.get(resource);\n\t\t\tif (memoryConfigurationForResource) {\n\t\t\t\tconsolidateConfiguration = consolidateConfiguration.merge(memoryConfigurationForResource);\n\t\t\t}\n\t\t}\n\n\t\treturn consolidateConfiguration;\n\t}\n\n\tprivate getWorkspaceConsolidatedConfiguration(): ConfigurationModel {\n\t\tif (!this._workspaceConsolidatedConfiguration) {\n\t\t\tthis._workspaceConsolidatedConfiguration = this._defaultConfiguration.merge(this.applicationConfiguration, this.userConfiguration, this._workspaceConfiguration, this._memoryConfiguration);\n\t\t}\n\t\treturn this._workspaceConsolidatedConfiguration;\n\t}\n\n\tprivate getFolderConsolidatedConfiguration(folder: URI): ConfigurationModel {\n\t\tlet folderConsolidatedConfiguration = this._foldersConsolidatedConfigurations.get(folder);\n\t\tif (!folderConsolidatedConfiguration) {\n\t\t\tconst workspaceConsolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n\t\t\tconst folderConfiguration = this._folderConfigurations.get(folder);\n\t\t\tif (folderConfiguration) {\n\t\t\t\tfolderConsolidatedConfiguration = workspaceConsolidateConfiguration.merge(folderConfiguration);\n\t\t\t\tthis._foldersConsolidatedConfigurations.set(folder, folderConsolidatedConfiguration);\n\t\t\t} else {\n\t\t\t\tfolderConsolidatedConfiguration = workspaceConsolidateConfiguration;\n\t\t\t}\n\t\t}\n\t\treturn folderConsolidatedConfiguration;\n\t}\n\n\tprivate getFolderConfigurationModelForResource(resource: URI | null | undefined, workspace: Workspace | undefined): ConfigurationModel | undefined {\n\t\tif (workspace && resource) {\n\t\t\tconst root = workspace.getFolder(resource);\n\t\t\tif (root) {\n\t\t\t\treturn this._folderConfigurations.get(root.uri);\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\ttoData(): IConfigurationData {\n\t\treturn {\n\t\t\tdefaults: {\n\t\t\t\tcontents: this._defaultConfiguration.contents,\n\t\t\t\toverrides: this._defaultConfiguration.overrides,\n\t\t\t\tkeys: this._defaultConfiguration.keys\n\t\t\t},\n\t\t\tpolicy: {\n\t\t\t\tcontents: this._policyConfiguration.contents,\n\t\t\t\toverrides: this._policyConfiguration.overrides,\n\t\t\t\tkeys: this._policyConfiguration.keys\n\t\t\t},\n\t\t\tapplication: {\n\t\t\t\tcontents: this.applicationConfiguration.contents,\n\t\t\t\toverrides: this.applicationConfiguration.overrides,\n\t\t\t\tkeys: this.applicationConfiguration.keys\n\t\t\t},\n\t\t\tuser: {\n\t\t\t\tcontents: this.userConfiguration.contents,\n\t\t\t\toverrides: this.userConfiguration.overrides,\n\t\t\t\tkeys: this.userConfiguration.keys\n\t\t\t},\n\t\t\tworkspace: {\n\t\t\t\tcontents: this._workspaceConfiguration.contents,\n\t\t\t\toverrides: this._workspaceConfiguration.overrides,\n\t\t\t\tkeys: this._workspaceConfiguration.keys\n\t\t\t},\n\t\t\tfolders: [...this._folderConfigurations.keys()].reduce<[UriComponents, IConfigurationModel][]>((result, folder) => {\n\t\t\t\tconst { contents, overrides, keys } = this._folderConfigurations.get(folder)!;\n\t\t\t\tresult.push([folder, { contents, overrides, keys }]);\n\t\t\t\treturn result;\n\t\t\t}, [])\n\t\t};\n\t}\n\n\tallKeys(): string[] {\n\t\tconst keys: Set<string> = new Set<string>();\n\t\tthis._defaultConfiguration.keys.forEach(key => keys.add(key));\n\t\tthis.userConfiguration.keys.forEach(key => keys.add(key));\n\t\tthis._workspaceConfiguration.keys.forEach(key => keys.add(key));\n\t\tthis._folderConfigurations.forEach(folderConfiguration => folderConfiguration.keys.forEach(key => keys.add(key)));\n\t\treturn [...keys.values()];\n\t}\n\n\tprotected allOverrideIdentifiers(): string[] {\n\t\tconst keys: Set<string> = new Set<string>();\n\t\tthis._defaultConfiguration.getAllOverrideIdentifiers().forEach(key => keys.add(key));\n\t\tthis.userConfiguration.getAllOverrideIdentifiers().forEach(key => keys.add(key));\n\t\tthis._workspaceConfiguration.getAllOverrideIdentifiers().forEach(key => keys.add(key));\n\t\tthis._folderConfigurations.forEach(folderConfiguration => folderConfiguration.getAllOverrideIdentifiers().forEach(key => keys.add(key)));\n\t\treturn [...keys.values()];\n\t}\n\n\tprotected getAllKeysForOverrideIdentifier(overrideIdentifier: string): string[] {\n\t\tconst keys: Set<string> = new Set<string>();\n\t\tthis._defaultConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis.userConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis._workspaceConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis._folderConfigurations.forEach(folderConfiguration => folderConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key)));\n\t\treturn [...keys.values()];\n\t}\n\n\tstatic parse(data: IConfigurationData, logService: ILogService): Configuration {\n\t\tconst defaultConfiguration = this.parseConfigurationModel(data.defaults, logService);\n\t\tconst policyConfiguration = this.parseConfigurationModel(data.policy, logService);\n\t\tconst applicationConfiguration = this.parseConfigurationModel(data.application, logService);\n\t\tconst userConfiguration = this.parseConfigurationModel(data.user, logService);\n\t\tconst workspaceConfiguration = this.parseConfigurationModel(data.workspace, logService);\n\t\tconst folders: ResourceMap<ConfigurationModel> = data.folders.reduce((result, value) => {\n\t\t\tresult.set(URI.revive(value[0]), this.parseConfigurationModel(value[1], logService));\n\t\t\treturn result;\n\t\t}, new ResourceMap<ConfigurationModel>());\n\t\treturn new Configuration(\n\t\t\tdefaultConfiguration,\n\t\t\tpolicyConfiguration,\n\t\t\tapplicationConfiguration,\n\t\t\tuserConfiguration,\n\t\t\tConfigurationModel.createEmptyModel(logService),\n\t\t\tworkspaceConfiguration,\n\t\t\tfolders,\n\t\t\tConfigurationModel.createEmptyModel(logService),\n\t\t\tnew ResourceMap<ConfigurationModel>(),\n\t\t\tlogService\n\t\t);\n\t}\n\n\tprivate static parseConfigurationModel(model: IConfigurationModel, logService: ILogService): ConfigurationModel {\n\t\treturn new ConfigurationModel(model.contents, model.keys, model.overrides, undefined, logService);\n\t}\n\n}\n\nexport function mergeChanges(...changes: IConfigurationChange[]): IConfigurationChange {\n\tif (changes.length === 0) {\n\t\treturn { keys: [], overrides: [] };\n\t}\n\tif (changes.length === 1) {\n\t\treturn changes[0];\n\t}\n\tconst keysSet = new Set<string>();\n\tconst overridesMap = new Map<string, Set<string>>();\n\tfor (const change of changes) {\n\t\tchange.keys.forEach(key => keysSet.add(key));\n\t\tchange.overrides.forEach(([identifier, keys]) => {\n\t\t\tconst result = getOrSet(overridesMap, identifier, new Set<string>());\n\t\t\tkeys.forEach(key => result.add(key));\n\t\t});\n\t}\n\tconst overrides: [string, string[]][] = [];\n\toverridesMap.forEach((keys, identifier) => overrides.push([identifier, [...keys.values()]]));\n\treturn { keys: [...keysSet.values()], overrides };\n}\n\nexport class ConfigurationChangeEvent implements IConfigurationChangeEvent {\n\n\tprivate readonly _marker = '\\n';\n\tprivate readonly _markerCode1 = this._marker.charCodeAt(0);\n\tprivate readonly _markerCode2 = '.'.charCodeAt(0);\n\tprivate readonly _affectsConfigStr: string;\n\n\treadonly affectedKeys = new Set<string>();\n\tsource!: ConfigurationTarget;\n\n\tconstructor(\n\t\treadonly change: IConfigurationChange,\n\t\tprivate readonly previous: { workspace?: Workspace; data: IConfigurationData } | undefined,\n\t\tprivate readonly currentConfiguraiton: Configuration,\n\t\tprivate readonly currentWorkspace: Workspace | undefined,\n\t\tprivate readonly logService: ILogService\n\t) {\n\t\tfor (const key of change.keys) {\n\t\t\tthis.affectedKeys.add(key);\n\t\t}\n\t\tfor (const [, keys] of change.overrides) {\n\t\t\tfor (const key of keys) {\n\t\t\t\tthis.affectedKeys.add(key);\n\t\t\t}\n\t\t}\n\n\t\t// Example: '\\nfoo.bar\\nabc.def\\n'\n\t\tthis._affectsConfigStr = this._marker;\n\t\tfor (const key of this.affectedKeys) {\n\t\t\tthis._affectsConfigStr += key + this._marker;\n\t\t}\n\t}\n\n\tprivate _previousConfiguration: Configuration | undefined = undefined;\n\tget previousConfiguration(): Configuration | undefined {\n\t\tif (!this._previousConfiguration && this.previous) {\n\t\t\tthis._previousConfiguration = Configuration.parse(this.previous.data, this.logService);\n\t\t}\n\t\treturn this._previousConfiguration;\n\t}\n\n\taffectsConfiguration(section: string, overrides?: IConfigurationOverrides): boolean {\n\t\t// we have one large string with all keys that have changed. we pad (marker) the section\n\t\t// and check that either find it padded or before a segment character\n\t\tconst needle = this._marker + section;\n\t\tconst idx = this._affectsConfigStr.indexOf(needle);\n\t\tif (idx < 0) {\n\t\t\t// NOT: (marker + section)\n\t\t\treturn false;\n\t\t}\n\t\tconst pos = idx + needle.length;\n\t\tif (pos >= this._affectsConfigStr.length) {\n\t\t\treturn false;\n\t\t}\n\t\tconst code = this._affectsConfigStr.charCodeAt(pos);\n\t\tif (code !== this._markerCode1 && code !== this._markerCode2) {\n\t\t\t// NOT: section + (marker | segment)\n\t\t\treturn false;\n\t\t}\n\t\tif (overrides) {\n\t\t\tconst value1 = this.previousConfiguration ? this.previousConfiguration.getValue(section, overrides, this.previous?.workspace) : undefined;\n\t\t\tconst value2 = this.currentConfiguraiton.getValue(section, overrides, this.currentWorkspace);\n\t\t\treturn !objects.equals(value1, value2);\n\t\t}\n\t\treturn true;\n\t}\n}\n\nfunction compare(from: ConfigurationModel | undefined, to: ConfigurationModel | undefined): IConfigurationCompareResult {\n\tconst { added, removed, updated } = compareConfigurationContents(to?.rawConfiguration, from?.rawConfiguration);\n\tconst overrides: [string, string[]][] = [];\n\n\tconst fromOverrideIdentifiers = from?.getAllOverrideIdentifiers() || [];\n\tconst toOverrideIdentifiers = to?.getAllOverrideIdentifiers() || [];\n\n\tif (to) {\n\t\tconst addedOverrideIdentifiers = toOverrideIdentifiers.filter(key => !fromOverrideIdentifiers.includes(key));\n\t\tfor (const identifier of addedOverrideIdentifiers) {\n\t\t\toverrides.push([identifier, to.getKeysForOverrideIdentifier(identifier)]);\n\t\t}\n\t}\n\n\tif (from) {\n\t\tconst removedOverrideIdentifiers = fromOverrideIdentifiers.filter(key => !toOverrideIdentifiers.includes(key));\n\t\tfor (const identifier of removedOverrideIdentifiers) {\n\t\t\toverrides.push([identifier, from.getKeysForOverrideIdentifier(identifier)]);\n\t\t}\n\t}\n\n\tif (to && from) {\n\t\tfor (const identifier of fromOverrideIdentifiers) {\n\t\t\tif (toOverrideIdentifiers.includes(identifier)) {\n\t\t\t\tconst result = compareConfigurationContents({ contents: from.getOverrideValue(undefined, identifier) || {}, keys: from.getKeysForOverrideIdentifier(identifier) }, { contents: to.getOverrideValue(undefined, identifier) || {}, keys: to.getKeysForOverrideIdentifier(identifier) });\n\t\t\t\toverrides.push([identifier, [...result.added, ...result.removed, ...result.updated]]);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { added, removed, updated, overrides };\n}\n\nfunction compareConfigurationContents(to: { keys: string[]; contents: any } | undefined, from: { keys: string[]; contents: any } | undefined) {\n\tconst added = to\n\t\t? from ? to.keys.filter(key => from.keys.indexOf(key) === -1) : [...to.keys]\n\t\t: [];\n\tconst removed = from\n\t\t? to ? from.keys.filter(key => to.keys.indexOf(key) === -1) : [...from.keys]\n\t\t: [];\n\tconst updated: string[] = [];\n\n\tif (to && from) {\n\t\tfor (const key of from.keys) {\n\t\t\tif (to.keys.indexOf(key) !== -1) {\n\t\t\t\tconst value1 = getConfigurationValue(from.contents, key);\n\t\t\t\tconst value2 = getConfigurationValue(to.contents, key);\n\t\t\t\tif (!objects.equals(value1, value2)) {\n\t\t\t\t\tupdated.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn { added, removed, updated };\n}\n"],
  "mappings": "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",
  "names": ["keys", "key"]
}
