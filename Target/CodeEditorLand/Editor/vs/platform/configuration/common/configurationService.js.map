{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/configuration/common/configurationService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tequals as arrayEquals,\n\tdistinct,\n} from \"../../../base/common/arrays.js\";\nimport { Queue, RunOnceScheduler } from \"../../../base/common/async.js\";\nimport { VSBuffer } from \"../../../base/common/buffer.js\";\nimport { Emitter, type Event } from \"../../../base/common/event.js\";\nimport {\n\ttype JSONPath,\n\ttype ParseError,\n\tparse,\n} from \"../../../base/common/json.js\";\nimport { applyEdits, setProperty } from \"../../../base/common/jsonEdit.js\";\nimport type {\n\tEdit,\n\tFormattingOptions,\n} from \"../../../base/common/jsonFormatter.js\";\nimport {\n\tDisposable,\n\ttype IDisposable,\n} from \"../../../base/common/lifecycle.js\";\nimport { ResourceMap } from \"../../../base/common/map.js\";\nimport { equals } from \"../../../base/common/objects.js\";\nimport { OS, OperatingSystem } from \"../../../base/common/platform.js\";\nimport { extUriBiasedIgnorePathCase } from \"../../../base/common/resources.js\";\nimport type { URI } from \"../../../base/common/uri.js\";\nimport {\n\ttype FileOperationError,\n\tFileOperationResult,\n\ttype IFileService,\n} from \"../../files/common/files.js\";\nimport type { ILogService } from \"../../log/common/log.js\";\nimport {\n\ttype IPolicyService,\n\tNullPolicyService,\n} from \"../../policy/common/policy.js\";\nimport {\n\tConfigurationTarget,\n\ttype IConfigurationChange,\n\ttype IConfigurationChangeEvent,\n\ttype IConfigurationData,\n\ttype IConfigurationOverrides,\n\ttype IConfigurationService,\n\ttype IConfigurationUpdateOptions,\n\ttype IConfigurationUpdateOverrides,\n\ttype IConfigurationValue,\n\tisConfigurationOverrides,\n\tisConfigurationUpdateOverrides,\n} from \"./configuration.js\";\nimport {\n\tConfiguration,\n\tConfigurationChangeEvent,\n\tConfigurationModel,\n\tUserSettings,\n} from \"./configurationModels.js\";\nimport { keyFromOverrideIdentifiers } from \"./configurationRegistry.js\";\nimport {\n\tDefaultConfiguration,\n\ttype IPolicyConfiguration,\n\tNullPolicyConfiguration,\n\tPolicyConfiguration,\n} from \"./configurations.js\";\n\nexport class ConfigurationService\n\textends Disposable\n\timplements IConfigurationService, IDisposable\n{\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate configuration: Configuration;\n\tprivate readonly defaultConfiguration: DefaultConfiguration;\n\tprivate readonly policyConfiguration: IPolicyConfiguration;\n\tprivate readonly userConfiguration: UserSettings;\n\tprivate readonly reloadConfigurationScheduler: RunOnceScheduler;\n\n\tprivate readonly _onDidChangeConfiguration: Emitter<IConfigurationChangeEvent> =\n\t\tthis._register(new Emitter<IConfigurationChangeEvent>());\n\treadonly onDidChangeConfiguration: Event<IConfigurationChangeEvent> =\n\t\tthis._onDidChangeConfiguration.event;\n\n\tprivate readonly configurationEditing: ConfigurationEditing;\n\n\tconstructor(\n\t\tprivate readonly settingsResource: URI,\n\t\tfileService: IFileService,\n\t\tpolicyService: IPolicyService,\n\t\tprivate readonly logService: ILogService,\n\t) {\n\t\tsuper();\n\t\tthis.defaultConfiguration = this._register(\n\t\t\tnew DefaultConfiguration(logService),\n\t\t);\n\t\tthis.policyConfiguration =\n\t\t\tpolicyService instanceof NullPolicyService\n\t\t\t\t? new NullPolicyConfiguration()\n\t\t\t\t: this._register(\n\t\t\t\t\t\tnew PolicyConfiguration(\n\t\t\t\t\t\t\tthis.defaultConfiguration,\n\t\t\t\t\t\t\tpolicyService,\n\t\t\t\t\t\t\tlogService,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\tthis.userConfiguration = this._register(\n\t\t\tnew UserSettings(\n\t\t\t\tthis.settingsResource,\n\t\t\t\t{},\n\t\t\t\textUriBiasedIgnorePathCase,\n\t\t\t\tfileService,\n\t\t\t\tlogService,\n\t\t\t),\n\t\t);\n\t\tthis.configuration = new Configuration(\n\t\t\tthis.defaultConfiguration.configurationModel,\n\t\t\tthis.policyConfiguration.configurationModel,\n\t\t\tConfigurationModel.createEmptyModel(logService),\n\t\t\tConfigurationModel.createEmptyModel(logService),\n\t\t\tConfigurationModel.createEmptyModel(logService),\n\t\t\tConfigurationModel.createEmptyModel(logService),\n\t\t\tnew ResourceMap<ConfigurationModel>(),\n\t\t\tConfigurationModel.createEmptyModel(logService),\n\t\t\tnew ResourceMap<ConfigurationModel>(),\n\t\t\tlogService,\n\t\t);\n\t\tthis.configurationEditing = new ConfigurationEditing(\n\t\t\tsettingsResource,\n\t\t\tfileService,\n\t\t\tthis,\n\t\t);\n\n\t\tthis.reloadConfigurationScheduler = this._register(\n\t\t\tnew RunOnceScheduler(() => this.reloadConfiguration(), 50),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.defaultConfiguration.onDidChangeConfiguration(\n\t\t\t\t({ defaults, properties }) =>\n\t\t\t\t\tthis.onDidDefaultConfigurationChange(defaults, properties),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.policyConfiguration.onDidChangeConfiguration((model) =>\n\t\t\t\tthis.onDidPolicyConfigurationChange(model),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.userConfiguration.onDidChange(() =>\n\t\t\t\tthis.reloadConfigurationScheduler.schedule(),\n\t\t\t),\n\t\t);\n\t}\n\n\tasync initialize(): Promise<void> {\n\t\tconst [defaultModel, policyModel, userModel] = await Promise.all([\n\t\t\tthis.defaultConfiguration.initialize(),\n\t\t\tthis.policyConfiguration.initialize(),\n\t\t\tthis.userConfiguration.loadConfiguration(),\n\t\t]);\n\t\tthis.configuration = new Configuration(\n\t\t\tdefaultModel,\n\t\t\tpolicyModel,\n\t\t\tConfigurationModel.createEmptyModel(this.logService),\n\t\t\tuserModel,\n\t\t\tConfigurationModel.createEmptyModel(this.logService),\n\t\t\tConfigurationModel.createEmptyModel(this.logService),\n\t\t\tnew ResourceMap<ConfigurationModel>(),\n\t\t\tConfigurationModel.createEmptyModel(this.logService),\n\t\t\tnew ResourceMap<ConfigurationModel>(),\n\t\t\tthis.logService,\n\t\t);\n\t}\n\n\tgetConfigurationData(): IConfigurationData {\n\t\treturn this.configuration.toData();\n\t}\n\n\tgetValue<T>(): T;\n\tgetValue<T>(section: string): T;\n\tgetValue<T>(overrides: IConfigurationOverrides): T;\n\tgetValue<T>(section: string, overrides: IConfigurationOverrides): T;\n\tgetValue(arg1?: any, arg2?: any): any {\n\t\tconst section = typeof arg1 === \"string\" ? arg1 : undefined;\n\t\tconst overrides = isConfigurationOverrides(arg1)\n\t\t\t? arg1\n\t\t\t: isConfigurationOverrides(arg2)\n\t\t\t\t? arg2\n\t\t\t\t: {};\n\t\treturn this.configuration.getValue(section, overrides, undefined);\n\t}\n\n\tupdateValue(key: string, value: any): Promise<void>;\n\tupdateValue(\n\t\tkey: string,\n\t\tvalue: any,\n\t\toverrides: IConfigurationOverrides | IConfigurationUpdateOverrides,\n\t): Promise<void>;\n\tupdateValue(\n\t\tkey: string,\n\t\tvalue: any,\n\t\ttarget: ConfigurationTarget,\n\t): Promise<void>;\n\tupdateValue(\n\t\tkey: string,\n\t\tvalue: any,\n\t\toverrides: IConfigurationOverrides | IConfigurationUpdateOverrides,\n\t\ttarget: ConfigurationTarget,\n\t\toptions?: IConfigurationUpdateOptions,\n\t): Promise<void>;\n\tasync updateValue(\n\t\tkey: string,\n\t\tvalue: any,\n\t\targ3?: any,\n\t\targ4?: any,\n\t\toptions?: any,\n\t): Promise<void> {\n\t\tconst overrides: IConfigurationUpdateOverrides | undefined =\n\t\t\tisConfigurationUpdateOverrides(arg3)\n\t\t\t\t? arg3\n\t\t\t\t: isConfigurationOverrides(arg3)\n\t\t\t\t\t? {\n\t\t\t\t\t\t\tresource: arg3.resource,\n\t\t\t\t\t\t\toverrideIdentifiers: arg3.overrideIdentifier\n\t\t\t\t\t\t\t\t? [arg3.overrideIdentifier]\n\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\t}\n\t\t\t\t\t: undefined;\n\n\t\tconst target: ConfigurationTarget | undefined = overrides ? arg4 : arg3;\n\t\tif (target !== undefined) {\n\t\t\tif (\n\t\t\t\ttarget !== ConfigurationTarget.USER_LOCAL &&\n\t\t\t\ttarget !== ConfigurationTarget.USER\n\t\t\t) {\n\t\t\t\tthrow new Error(`Unable to write ${key} to target ${target}.`);\n\t\t\t}\n\t\t}\n\n\t\tif (overrides?.overrideIdentifiers) {\n\t\t\toverrides.overrideIdentifiers = distinct(\n\t\t\t\toverrides.overrideIdentifiers,\n\t\t\t);\n\t\t\toverrides.overrideIdentifiers = overrides.overrideIdentifiers.length\n\t\t\t\t? overrides.overrideIdentifiers\n\t\t\t\t: undefined;\n\t\t}\n\n\t\tconst inspect = this.inspect(key, {\n\t\t\tresource: overrides?.resource,\n\t\t\toverrideIdentifier: overrides?.overrideIdentifiers\n\t\t\t\t? overrides.overrideIdentifiers[0]\n\t\t\t\t: undefined,\n\t\t});\n\t\tif (inspect.policyValue !== undefined) {\n\t\t\tthrow new Error(\n\t\t\t\t`Unable to write ${key} because it is configured in system policy.`,\n\t\t\t);\n\t\t}\n\n\t\t// Remove the setting, if the value is same as default value\n\t\tif (equals(value, inspect.defaultValue)) {\n\t\t\tvalue = undefined;\n\t\t}\n\n\t\tif (\n\t\t\toverrides?.overrideIdentifiers?.length &&\n\t\t\toverrides.overrideIdentifiers.length > 1\n\t\t) {\n\t\t\tconst overrideIdentifiers = overrides.overrideIdentifiers.sort();\n\t\t\tconst existingOverrides =\n\t\t\t\tthis.configuration.localUserConfiguration.overrides.find(\n\t\t\t\t\t(override) =>\n\t\t\t\t\t\tarrayEquals(\n\t\t\t\t\t\t\t[...override.identifiers].sort(),\n\t\t\t\t\t\t\toverrideIdentifiers,\n\t\t\t\t\t\t),\n\t\t\t\t);\n\t\t\tif (existingOverrides) {\n\t\t\t\toverrides.overrideIdentifiers = existingOverrides.identifiers;\n\t\t\t}\n\t\t}\n\n\t\tconst path = overrides?.overrideIdentifiers?.length\n\t\t\t? [keyFromOverrideIdentifiers(overrides.overrideIdentifiers), key]\n\t\t\t: [key];\n\n\t\tawait this.configurationEditing.write(path, value);\n\t\tawait this.reloadConfiguration();\n\t}\n\n\tinspect<T>(\n\t\tkey: string,\n\t\toverrides: IConfigurationOverrides = {},\n\t): IConfigurationValue<T> {\n\t\treturn this.configuration.inspect<T>(key, overrides, undefined);\n\t}\n\n\tkeys(): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t} {\n\t\treturn this.configuration.keys(undefined);\n\t}\n\n\tasync reloadConfiguration(): Promise<void> {\n\t\tconst configurationModel =\n\t\t\tawait this.userConfiguration.loadConfiguration();\n\t\tthis.onDidChangeUserConfiguration(configurationModel);\n\t}\n\n\tprivate onDidChangeUserConfiguration(\n\t\tuserConfigurationModel: ConfigurationModel,\n\t): void {\n\t\tconst previous = this.configuration.toData();\n\t\tconst change =\n\t\t\tthis.configuration.compareAndUpdateLocalUserConfiguration(\n\t\t\t\tuserConfigurationModel,\n\t\t\t);\n\t\tthis.trigger(change, previous, ConfigurationTarget.USER);\n\t}\n\n\tprivate onDidDefaultConfigurationChange(\n\t\tdefaultConfigurationModel: ConfigurationModel,\n\t\tproperties: string[],\n\t): void {\n\t\tconst previous = this.configuration.toData();\n\t\tconst change = this.configuration.compareAndUpdateDefaultConfiguration(\n\t\t\tdefaultConfigurationModel,\n\t\t\tproperties,\n\t\t);\n\t\tthis.trigger(change, previous, ConfigurationTarget.DEFAULT);\n\t}\n\n\tprivate onDidPolicyConfigurationChange(\n\t\tpolicyConfiguration: ConfigurationModel,\n\t): void {\n\t\tconst previous = this.configuration.toData();\n\t\tconst change =\n\t\t\tthis.configuration.compareAndUpdatePolicyConfiguration(\n\t\t\t\tpolicyConfiguration,\n\t\t\t);\n\t\tthis.trigger(change, previous, ConfigurationTarget.DEFAULT);\n\t}\n\n\tprivate trigger(\n\t\tconfigurationChange: IConfigurationChange,\n\t\tprevious: IConfigurationData,\n\t\tsource: ConfigurationTarget,\n\t): void {\n\t\tconst event = new ConfigurationChangeEvent(\n\t\t\tconfigurationChange,\n\t\t\t{ data: previous },\n\t\t\tthis.configuration,\n\t\t\tundefined,\n\t\t\tthis.logService,\n\t\t);\n\t\tevent.source = source;\n\t\tthis._onDidChangeConfiguration.fire(event);\n\t}\n}\n\nclass ConfigurationEditing {\n\tprivate readonly queue: Queue<void>;\n\n\tconstructor(\n\t\tprivate readonly settingsResource: URI,\n\t\tprivate readonly fileService: IFileService,\n\t\tprivate readonly configurationService: IConfigurationService,\n\t) {\n\t\tthis.queue = new Queue<void>();\n\t}\n\n\twrite(path: JSONPath, value: any): Promise<void> {\n\t\treturn this.queue.queue(() => this.doWriteConfiguration(path, value)); // queue up writes to prevent race conditions\n\t}\n\n\tprivate async doWriteConfiguration(\n\t\tpath: JSONPath,\n\t\tvalue: any,\n\t): Promise<void> {\n\t\tlet content: string;\n\t\ttry {\n\t\t\tconst fileContent = await this.fileService.readFile(\n\t\t\t\tthis.settingsResource,\n\t\t\t);\n\t\t\tcontent = fileContent.value.toString();\n\t\t} catch (error) {\n\t\t\tif (\n\t\t\t\t(<FileOperationError>error).fileOperationResult ===\n\t\t\t\tFileOperationResult.FILE_NOT_FOUND\n\t\t\t) {\n\t\t\t\tcontent = \"{}\";\n\t\t\t} else {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\tconst parseErrors: ParseError[] = [];\n\t\tparse(content, parseErrors, {\n\t\t\tallowTrailingComma: true,\n\t\t\tallowEmptyContent: true,\n\t\t});\n\t\tif (parseErrors.length > 0) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Unable to write into the settings file. Please open the file to correct errors/warnings in the file and try again.\",\n\t\t\t);\n\t\t}\n\n\t\tconst edits = this.getEdits(content, path, value);\n\t\tcontent = applyEdits(content, edits);\n\n\t\tawait this.fileService.writeFile(\n\t\t\tthis.settingsResource,\n\t\t\tVSBuffer.fromString(content),\n\t\t);\n\t}\n\n\tprivate getEdits(content: string, path: JSONPath, value: any): Edit[] {\n\t\tconst { tabSize, insertSpaces, eol } = this.formattingOptions;\n\n\t\t// With empty path the entire file is being replaced, so we just use JSON.stringify\n\t\tif (!path.length) {\n\t\t\tconst content = JSON.stringify(\n\t\t\t\tvalue,\n\t\t\t\tnull,\n\t\t\t\tinsertSpaces ? \" \".repeat(tabSize) : \"\\t\",\n\t\t\t);\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tcontent,\n\t\t\t\t\tlength: content.length,\n\t\t\t\t\toffset: 0,\n\t\t\t\t},\n\t\t\t];\n\t\t}\n\n\t\treturn setProperty(content, path, value, {\n\t\t\ttabSize,\n\t\t\tinsertSpaces,\n\t\t\teol,\n\t\t});\n\t}\n\n\tprivate _formattingOptions: Required<FormattingOptions> | undefined;\n\tprivate get formattingOptions(): Required<FormattingOptions> {\n\t\tif (!this._formattingOptions) {\n\t\t\tlet eol =\n\t\t\t\tOS === OperatingSystem.Linux || OS === OperatingSystem.Macintosh\n\t\t\t\t\t? \"\\n\"\n\t\t\t\t\t: \"\\r\\n\";\n\t\t\tconst configuredEol = this.configurationService.getValue(\n\t\t\t\t\"files.eol\",\n\t\t\t\t{ overrideIdentifier: \"jsonc\" },\n\t\t\t);\n\t\t\tif (\n\t\t\t\tconfiguredEol &&\n\t\t\t\ttypeof configuredEol === \"string\" &&\n\t\t\t\tconfiguredEol !== \"auto\"\n\t\t\t) {\n\t\t\t\teol = configuredEol;\n\t\t\t}\n\t\t\tthis._formattingOptions = {\n\t\t\t\teol,\n\t\t\t\tinsertSpaces: !!this.configurationService.getValue(\n\t\t\t\t\t\"editor.insertSpaces\",\n\t\t\t\t\t{ overrideIdentifier: \"jsonc\" },\n\t\t\t\t),\n\t\t\t\ttabSize: this.configurationService.getValue(\"editor.tabSize\", {\n\t\t\t\t\toverrideIdentifier: \"jsonc\",\n\t\t\t\t}),\n\t\t\t};\n\t\t}\n\t\treturn this._formattingOptions;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["content"]
}
