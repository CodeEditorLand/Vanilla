{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/userDataProfile/browser/userDataProfile.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { BroadcastDataChannel } from '../../../base/browser/broadcast.js';\nimport { revive } from '../../../base/common/marshalling.js';\nimport { UriDto } from '../../../base/common/uri.js';\nimport { IEnvironmentService } from '../../environment/common/environment.js';\nimport { IFileService } from '../../files/common/files.js';\nimport { ILogService } from '../../log/common/log.js';\nimport { IUriIdentityService } from '../../uriIdentity/common/uriIdentity.js';\nimport { DidChangeProfilesEvent, IUserDataProfile, IUserDataProfilesService, reviveProfile, StoredProfileAssociations, StoredUserDataProfile, UserDataProfilesService } from '../common/userDataProfile.js';\n\ntype BroadcastedProfileChanges = UriDto<Omit<DidChangeProfilesEvent, 'all'>>;\n\nexport class BrowserUserDataProfilesService extends UserDataProfilesService implements IUserDataProfilesService {\n\n\tprivate readonly changesBroadcastChannel: BroadcastDataChannel<BroadcastedProfileChanges>;\n\n\tconstructor(\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t\t@ILogService logService: ILogService,\n\t) {\n\t\tsuper(environmentService, fileService, uriIdentityService, logService);\n\t\tthis.changesBroadcastChannel = this._register(new BroadcastDataChannel<BroadcastedProfileChanges>(`${UserDataProfilesService.PROFILES_KEY}.changes`));\n\t\tthis._register(this.changesBroadcastChannel.onDidReceiveData(changes => {\n\t\t\ttry {\n\t\t\t\tthis._profilesObject = undefined;\n\t\t\t\tconst added = changes.added.map(p => reviveProfile(p, this.profilesHome.scheme));\n\t\t\t\tconst removed = changes.removed.map(p => reviveProfile(p, this.profilesHome.scheme));\n\t\t\t\tconst updated = changes.updated.map(p => reviveProfile(p, this.profilesHome.scheme));\n\n\t\t\t\tthis.updateTransientProfiles(\n\t\t\t\t\tadded.filter(a => a.isTransient),\n\t\t\t\t\tremoved.filter(a => a.isTransient),\n\t\t\t\t\tupdated.filter(a => a.isTransient)\n\t\t\t\t);\n\n\t\t\t\tthis._onDidChangeProfiles.fire({\n\t\t\t\t\tadded,\n\t\t\t\t\tremoved,\n\t\t\t\t\tupdated,\n\t\t\t\t\tall: this.profiles\n\t\t\t\t});\n\t\t\t} catch (error) {/* ignore */ }\n\t\t}));\n\t}\n\n\tprivate updateTransientProfiles(added: IUserDataProfile[], removed: IUserDataProfile[], updated: IUserDataProfile[]): void {\n\t\tif (added.length) {\n\t\t\tthis.transientProfilesObject.profiles.push(...added);\n\t\t}\n\t\tif (removed.length || updated.length) {\n\t\t\tconst allTransientProfiles = this.transientProfilesObject.profiles;\n\t\t\tthis.transientProfilesObject.profiles = [];\n\t\t\tfor (const profile of allTransientProfiles) {\n\t\t\t\tif (removed.some(p => profile.id === p.id)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthis.transientProfilesObject.profiles.push(updated.find(p => profile.id === p.id) ?? profile);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected override getStoredProfiles(): StoredUserDataProfile[] {\n\t\ttry {\n\t\t\tconst value = localStorage.getItem(UserDataProfilesService.PROFILES_KEY);\n\t\t\tif (value) {\n\t\t\t\treturn revive(JSON.parse(value));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t/* ignore */\n\t\t\tthis.logService.error(error);\n\t\t}\n\t\treturn [];\n\t}\n\n\tprotected override triggerProfilesChanges(added: IUserDataProfile[], removed: IUserDataProfile[], updated: IUserDataProfile[]) {\n\t\tsuper.triggerProfilesChanges(added, removed, updated);\n\t\tthis.changesBroadcastChannel.postData({ added, removed, updated });\n\t}\n\n\tprotected override saveStoredProfiles(storedProfiles: StoredUserDataProfile[]): void {\n\t\tlocalStorage.setItem(UserDataProfilesService.PROFILES_KEY, JSON.stringify(storedProfiles));\n\t}\n\n\tprotected override getStoredProfileAssociations(): StoredProfileAssociations {\n\t\tconst migrateKey = 'profileAssociationsMigration';\n\t\ttry {\n\t\t\tconst value = localStorage.getItem(UserDataProfilesService.PROFILE_ASSOCIATIONS_KEY);\n\t\t\tif (value) {\n\t\t\t\tlet associations: StoredProfileAssociations = JSON.parse(value);\n\t\t\t\tif (!localStorage.getItem(migrateKey)) {\n\t\t\t\t\tassociations = this.migrateStoredProfileAssociations(associations);\n\t\t\t\t\tthis.saveStoredProfileAssociations(associations);\n\t\t\t\t\tlocalStorage.setItem(migrateKey, 'true');\n\t\t\t\t}\n\t\t\t\treturn associations;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t/* ignore */\n\t\t\tthis.logService.error(error);\n\t\t}\n\t\treturn {};\n\t}\n\n\tprotected override saveStoredProfileAssociations(storedProfileAssociations: StoredProfileAssociations): void {\n\t\tlocalStorage.setItem(UserDataProfilesService.PROFILE_ASSOCIATIONS_KEY, JSON.stringify(storedProfileAssociations));\n\t}\n\n}\n"],
  "mappings": "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",
  "names": []
}
