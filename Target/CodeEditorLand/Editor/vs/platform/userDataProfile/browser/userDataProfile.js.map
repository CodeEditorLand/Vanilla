{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/userDataProfile/browser/userDataProfile.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { BroadcastDataChannel } from \"../../../base/browser/broadcast.js\";\nimport { revive } from \"../../../base/common/marshalling.js\";\nimport type { UriDto } from \"../../../base/common/uri.js\";\nimport { IEnvironmentService } from \"../../environment/common/environment.js\";\nimport { IFileService } from \"../../files/common/files.js\";\nimport { ILogService } from \"../../log/common/log.js\";\nimport { IUriIdentityService } from \"../../uriIdentity/common/uriIdentity.js\";\nimport {\n\ttype DidChangeProfilesEvent,\n\ttype IUserDataProfile,\n\ttype IUserDataProfilesService,\n\ttype StoredProfileAssociations,\n\ttype StoredUserDataProfile,\n\tUserDataProfilesService,\n\treviveProfile,\n} from \"../common/userDataProfile.js\";\n\ntype BroadcastedProfileChanges = UriDto<Omit<DidChangeProfilesEvent, \"all\">>;\n\nexport class BrowserUserDataProfilesService\n\textends UserDataProfilesService\n\timplements IUserDataProfilesService\n{\n\tprivate readonly changesBroadcastChannel: BroadcastDataChannel<BroadcastedProfileChanges>;\n\n\tconstructor(\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t\t@ILogService logService: ILogService,\n\t) {\n\t\tsuper(environmentService, fileService, uriIdentityService, logService);\n\t\tthis.changesBroadcastChannel = this._register(\n\t\t\tnew BroadcastDataChannel<BroadcastedProfileChanges>(\n\t\t\t\t`${UserDataProfilesService.PROFILES_KEY}.changes`,\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.changesBroadcastChannel.onDidReceiveData((changes) => {\n\t\t\t\ttry {\n\t\t\t\t\tthis._profilesObject = undefined;\n\t\t\t\t\tconst added = changes.added.map((p) =>\n\t\t\t\t\t\treviveProfile(p, this.profilesHome.scheme),\n\t\t\t\t\t);\n\t\t\t\t\tconst removed = changes.removed.map((p) =>\n\t\t\t\t\t\treviveProfile(p, this.profilesHome.scheme),\n\t\t\t\t\t);\n\t\t\t\t\tconst updated = changes.updated.map((p) =>\n\t\t\t\t\t\treviveProfile(p, this.profilesHome.scheme),\n\t\t\t\t\t);\n\n\t\t\t\t\tthis.updateTransientProfiles(\n\t\t\t\t\t\tadded.filter((a) => a.isTransient),\n\t\t\t\t\t\tremoved.filter((a) => a.isTransient),\n\t\t\t\t\t\tupdated.filter((a) => a.isTransient),\n\t\t\t\t\t);\n\n\t\t\t\t\tthis._onDidChangeProfiles.fire({\n\t\t\t\t\t\tadded,\n\t\t\t\t\t\tremoved,\n\t\t\t\t\t\tupdated,\n\t\t\t\t\t\tall: this.profiles,\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\t/* ignore */\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tprivate updateTransientProfiles(\n\t\tadded: IUserDataProfile[],\n\t\tremoved: IUserDataProfile[],\n\t\tupdated: IUserDataProfile[],\n\t): void {\n\t\tif (added.length) {\n\t\t\tthis.transientProfilesObject.profiles.push(...added);\n\t\t}\n\t\tif (removed.length || updated.length) {\n\t\t\tconst allTransientProfiles = this.transientProfilesObject.profiles;\n\t\t\tthis.transientProfilesObject.profiles = [];\n\t\t\tfor (const profile of allTransientProfiles) {\n\t\t\t\tif (removed.some((p) => profile.id === p.id)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthis.transientProfilesObject.profiles.push(\n\t\t\t\t\tupdated.find((p) => profile.id === p.id) ?? profile,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected override getStoredProfiles(): StoredUserDataProfile[] {\n\t\ttry {\n\t\t\tconst value = localStorage.getItem(\n\t\t\t\tUserDataProfilesService.PROFILES_KEY,\n\t\t\t);\n\t\t\tif (value) {\n\t\t\t\treturn revive(JSON.parse(value));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t/* ignore */\n\t\t\tthis.logService.error(error);\n\t\t}\n\t\treturn [];\n\t}\n\n\tprotected override triggerProfilesChanges(\n\t\tadded: IUserDataProfile[],\n\t\tremoved: IUserDataProfile[],\n\t\tupdated: IUserDataProfile[],\n\t) {\n\t\tsuper.triggerProfilesChanges(added, removed, updated);\n\t\tthis.changesBroadcastChannel.postData({ added, removed, updated });\n\t}\n\n\tprotected override saveStoredProfiles(\n\t\tstoredProfiles: StoredUserDataProfile[],\n\t): void {\n\t\tlocalStorage.setItem(\n\t\t\tUserDataProfilesService.PROFILES_KEY,\n\t\t\tJSON.stringify(storedProfiles),\n\t\t);\n\t}\n\n\tprotected override getStoredProfileAssociations(): StoredProfileAssociations {\n\t\tconst migrateKey = \"profileAssociationsMigration\";\n\t\ttry {\n\t\t\tconst value = localStorage.getItem(\n\t\t\t\tUserDataProfilesService.PROFILE_ASSOCIATIONS_KEY,\n\t\t\t);\n\t\t\tif (value) {\n\t\t\t\tlet associations: StoredProfileAssociations = JSON.parse(value);\n\t\t\t\tif (!localStorage.getItem(migrateKey)) {\n\t\t\t\t\tassociations =\n\t\t\t\t\t\tthis.migrateStoredProfileAssociations(associations);\n\t\t\t\t\tthis.saveStoredProfileAssociations(associations);\n\t\t\t\t\tlocalStorage.setItem(migrateKey, \"true\");\n\t\t\t\t}\n\t\t\t\treturn associations;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t/* ignore */\n\t\t\tthis.logService.error(error);\n\t\t}\n\t\treturn {};\n\t}\n\n\tprotected override saveStoredProfileAssociations(\n\t\tstoredProfileAssociations: StoredProfileAssociations,\n\t): void {\n\t\tlocalStorage.setItem(\n\t\t\tUserDataProfilesService.PROFILE_ASSOCIATIONS_KEY,\n\t\t\tJSON.stringify(storedProfileAssociations),\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
