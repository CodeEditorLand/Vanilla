{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/userDataProfile/node/userDataProfile.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IStringDictionary } from \"../../../base/common/collections.js\";\nimport { isString } from \"../../../base/common/types.js\";\nimport {\n\tURI,\n\ttype UriComponents,\n\ttype UriDto,\n} from \"../../../base/common/uri.js\";\nimport { INativeEnvironmentService } from \"../../environment/common/environment.js\";\nimport { IFileService } from \"../../files/common/files.js\";\nimport { ILogService } from \"../../log/common/log.js\";\nimport { IStateReadService, IStateService } from \"../../state/node/state.js\";\nimport { SaveStrategy, StateService } from \"../../state/node/stateService.js\";\nimport { IUriIdentityService } from \"../../uriIdentity/common/uriIdentity.js\";\nimport {\n\tUserDataProfilesService as BaseUserDataProfilesService,\n\ttype IUserDataProfilesService,\n\ttype StoredProfileAssociations,\n\ttype StoredUserDataProfile,\n} from \"../common/userDataProfile.js\";\n\ntype StoredUserDataProfileState = StoredUserDataProfile & {\n\tlocation: URI | string;\n};\n\nexport class UserDataProfilesReadonlyService\n\textends BaseUserDataProfilesService\n\timplements IUserDataProfilesService\n{\n\tprotected static readonly PROFILE_ASSOCIATIONS_MIGRATION_KEY =\n\t\t\"profileAssociationsMigration\";\n\n\tconstructor(\n\t\t@IStateReadService private readonly stateReadonlyService: IStateReadService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t\t@INativeEnvironmentService private readonly nativeEnvironmentService: INativeEnvironmentService,\n\t\t@IFileService fileService: IFileService,\n\t\t@ILogService logService: ILogService,\n\t) {\n\t\tsuper(nativeEnvironmentService, fileService, uriIdentityService, logService);\n\t}\n\n\tprotected override getStoredProfiles(): StoredUserDataProfile[] {\n\t\tconst storedProfilesState = this.stateReadonlyService.getItem<\n\t\t\tUriDto<StoredUserDataProfileState>[]\n\t\t>(UserDataProfilesReadonlyService.PROFILES_KEY, []);\n\t\treturn storedProfilesState.map((p) => ({\n\t\t\t...p,\n\t\t\tlocation: isString(p.location)\n\t\t\t\t? this.uriIdentityService.extUri.joinPath(\n\t\t\t\t\t\tthis.profilesHome,\n\t\t\t\t\t\tp.location,\n\t\t\t\t\t)\n\t\t\t\t: URI.revive(p.location),\n\t\t}));\n\t}\n\n\tprotected override getStoredProfileAssociations(): StoredProfileAssociations {\n\t\tconst associations =\n\t\t\tthis.stateReadonlyService.getItem<StoredProfileAssociations>(\n\t\t\t\tUserDataProfilesReadonlyService.PROFILE_ASSOCIATIONS_KEY,\n\t\t\t\t{},\n\t\t\t);\n\t\tconst migrated = this.stateReadonlyService.getItem<boolean>(\n\t\t\tUserDataProfilesReadonlyService.PROFILE_ASSOCIATIONS_MIGRATION_KEY,\n\t\t\tfalse,\n\t\t);\n\t\treturn migrated\n\t\t\t? associations\n\t\t\t: this.migrateStoredProfileAssociations(associations);\n\t}\n\n\tprotected override getDefaultProfileExtensionsLocation(): URI {\n\t\treturn this.uriIdentityService.extUri.joinPath(\n\t\t\tURI.file(this.nativeEnvironmentService.extensionsPath).with({\n\t\t\t\tscheme: this.profilesHome.scheme,\n\t\t\t}),\n\t\t\t\"extensions.json\",\n\t\t);\n\t}\n}\n\nexport class UserDataProfilesService\n\textends UserDataProfilesReadonlyService\n\timplements IUserDataProfilesService\n{\n\tconstructor(\n\t\t@IStateService protected readonly stateService: IStateService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@IFileService fileService: IFileService,\n\t\t@ILogService logService: ILogService,\n\t) {\n\t\tsuper(stateService, uriIdentityService, environmentService, fileService, logService);\n\t}\n\n\tprotected override saveStoredProfiles(\n\t\tstoredProfiles: StoredUserDataProfile[],\n\t): void {\n\t\tif (storedProfiles.length) {\n\t\t\tthis.stateService.setItem(\n\t\t\t\tUserDataProfilesService.PROFILES_KEY,\n\t\t\t\tstoredProfiles.map((profile) => ({\n\t\t\t\t\t...profile,\n\t\t\t\t\tlocation: this.uriIdentityService.extUri.basename(\n\t\t\t\t\t\tprofile.location,\n\t\t\t\t\t),\n\t\t\t\t})),\n\t\t\t);\n\t\t} else {\n\t\t\tthis.stateService.removeItem(UserDataProfilesService.PROFILES_KEY);\n\t\t}\n\t}\n\n\tprotected override getStoredProfiles(): StoredUserDataProfile[] {\n\t\tconst storedProfiles = super.getStoredProfiles();\n\t\tif (\n\t\t\t!this.stateService.getItem<boolean>(\n\t\t\t\t\"userDataProfilesMigration\",\n\t\t\t\tfalse,\n\t\t\t)\n\t\t) {\n\t\t\tthis.saveStoredProfiles(storedProfiles);\n\t\t\tthis.stateService.setItem(\"userDataProfilesMigration\", true);\n\t\t}\n\t\treturn storedProfiles;\n\t}\n\n\tprotected override saveStoredProfileAssociations(\n\t\tstoredProfileAssociations: StoredProfileAssociations,\n\t): void {\n\t\tif (\n\t\t\tstoredProfileAssociations.emptyWindows ||\n\t\t\tstoredProfileAssociations.workspaces\n\t\t) {\n\t\t\tthis.stateService.setItem(\n\t\t\t\tUserDataProfilesService.PROFILE_ASSOCIATIONS_KEY,\n\t\t\t\tstoredProfileAssociations,\n\t\t\t);\n\t\t} else {\n\t\t\tthis.stateService.removeItem(\n\t\t\t\tUserDataProfilesService.PROFILE_ASSOCIATIONS_KEY,\n\t\t\t);\n\t\t}\n\t}\n\n\tprotected override getStoredProfileAssociations(): StoredProfileAssociations {\n\t\tconst oldKey = \"workspaceAndProfileInfo\";\n\t\tconst storedWorkspaceInfos = this.stateService.getItem<\n\t\t\t{ workspace: UriComponents; profile: UriComponents }[]\n\t\t>(oldKey, undefined);\n\t\tif (storedWorkspaceInfos) {\n\t\t\tthis.stateService.removeItem(oldKey);\n\t\t\tconst workspaces = storedWorkspaceInfos.reduce<\n\t\t\t\tIStringDictionary<string>\n\t\t\t>((result, { workspace, profile }) => {\n\t\t\t\tresult[URI.revive(workspace).toString()] =\n\t\t\t\t\tURI.revive(profile).toString();\n\t\t\t\treturn result;\n\t\t\t}, {});\n\t\t\tthis.stateService.setItem(\n\t\t\t\tUserDataProfilesService.PROFILE_ASSOCIATIONS_KEY,\n\t\t\t\t{ workspaces } satisfies StoredProfileAssociations,\n\t\t\t);\n\t\t}\n\t\tconst associations = super.getStoredProfileAssociations();\n\t\tif (\n\t\t\t!this.stateService.getItem<boolean>(\n\t\t\t\tUserDataProfilesService.PROFILE_ASSOCIATIONS_MIGRATION_KEY,\n\t\t\t\tfalse,\n\t\t\t)\n\t\t) {\n\t\t\tthis.saveStoredProfileAssociations(associations);\n\t\t\tthis.stateService.setItem(\n\t\t\t\tUserDataProfilesService.PROFILE_ASSOCIATIONS_MIGRATION_KEY,\n\t\t\t\ttrue,\n\t\t\t);\n\t\t}\n\t\treturn associations;\n\t}\n}\n\nexport class ServerUserDataProfilesService\n\textends UserDataProfilesService\n\timplements IUserDataProfilesService\n{\n\tconstructor(\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@IFileService fileService: IFileService,\n\t\t@ILogService logService: ILogService,\n\t) {\n\t\tsuper(\n\t\t\tnew StateService(\n\t\t\t\tSaveStrategy.IMMEDIATE,\n\t\t\t\tenvironmentService,\n\t\t\t\tlogService,\n\t\t\t\tfileService,\n\t\t\t),\n\t\t\turiIdentityService,\n\t\t\tenvironmentService,\n\t\t\tfileService,\n\t\t\tlogService,\n\t\t);\n\t}\n\n\toverride async init(): Promise<void> {\n\t\tawait (this.stateService as StateService).init();\n\t\treturn super.init();\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
