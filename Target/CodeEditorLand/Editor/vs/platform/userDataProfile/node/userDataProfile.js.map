{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/userDataProfile/node/userDataProfile.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents, UriDto } from '../../../base/common/uri.js';\nimport { INativeEnvironmentService } from '../../environment/common/environment.js';\nimport { IFileService } from '../../files/common/files.js';\nimport { ILogService } from '../../log/common/log.js';\nimport { IStateReadService, IStateService } from '../../state/node/state.js';\nimport { IUriIdentityService } from '../../uriIdentity/common/uriIdentity.js';\nimport { IUserDataProfilesService, UserDataProfilesService as BaseUserDataProfilesService, StoredUserDataProfile, StoredProfileAssociations } from '../common/userDataProfile.js';\nimport { IStringDictionary } from '../../../base/common/collections.js';\nimport { isString } from '../../../base/common/types.js';\nimport { SaveStrategy, StateService } from '../../state/node/stateService.js';\n\ntype StoredUserDataProfileState = StoredUserDataProfile & { location: URI | string };\n\nexport class UserDataProfilesReadonlyService extends BaseUserDataProfilesService implements IUserDataProfilesService {\n\n\tprotected static readonly PROFILE_ASSOCIATIONS_MIGRATION_KEY = 'profileAssociationsMigration';\n\n\tconstructor(\n\t\t@IStateReadService private readonly stateReadonlyService: IStateReadService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t\t@INativeEnvironmentService private readonly nativeEnvironmentService: INativeEnvironmentService,\n\t\t@IFileService fileService: IFileService,\n\t\t@ILogService logService: ILogService,\n\t) {\n\t\tsuper(nativeEnvironmentService, fileService, uriIdentityService, logService);\n\t}\n\n\tprotected override getStoredProfiles(): StoredUserDataProfile[] {\n\t\tconst storedProfilesState = this.stateReadonlyService.getItem<UriDto<StoredUserDataProfileState>[]>(UserDataProfilesReadonlyService.PROFILES_KEY, []);\n\t\treturn storedProfilesState.map(p => ({ ...p, location: isString(p.location) ? this.uriIdentityService.extUri.joinPath(this.profilesHome, p.location) : URI.revive(p.location) }));\n\t}\n\n\tprotected override getStoredProfileAssociations(): StoredProfileAssociations {\n\t\tconst associations = this.stateReadonlyService.getItem<StoredProfileAssociations>(UserDataProfilesReadonlyService.PROFILE_ASSOCIATIONS_KEY, {});\n\t\tconst migrated = this.stateReadonlyService.getItem<boolean>(UserDataProfilesReadonlyService.PROFILE_ASSOCIATIONS_MIGRATION_KEY, false);\n\t\treturn migrated ? associations : this.migrateStoredProfileAssociations(associations);\n\t}\n\n\tprotected override getDefaultProfileExtensionsLocation(): URI {\n\t\treturn this.uriIdentityService.extUri.joinPath(URI.file(this.nativeEnvironmentService.extensionsPath).with({ scheme: this.profilesHome.scheme }), 'extensions.json');\n\t}\n\n}\n\nexport class UserDataProfilesService extends UserDataProfilesReadonlyService implements IUserDataProfilesService {\n\n\tconstructor(\n\t\t@IStateService protected readonly stateService: IStateService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@IFileService fileService: IFileService,\n\t\t@ILogService logService: ILogService,\n\t) {\n\t\tsuper(stateService, uriIdentityService, environmentService, fileService, logService);\n\t}\n\n\tprotected override saveStoredProfiles(storedProfiles: StoredUserDataProfile[]): void {\n\t\tif (storedProfiles.length) {\n\t\t\tthis.stateService.setItem(UserDataProfilesService.PROFILES_KEY, storedProfiles.map(profile => ({ ...profile, location: this.uriIdentityService.extUri.basename(profile.location) })));\n\t\t} else {\n\t\t\tthis.stateService.removeItem(UserDataProfilesService.PROFILES_KEY);\n\t\t}\n\t}\n\n\tprotected override getStoredProfiles(): StoredUserDataProfile[] {\n\t\tconst storedProfiles = super.getStoredProfiles();\n\t\tif (!this.stateService.getItem<boolean>('userDataProfilesMigration', false)) {\n\t\t\tthis.saveStoredProfiles(storedProfiles);\n\t\t\tthis.stateService.setItem('userDataProfilesMigration', true);\n\t\t}\n\t\treturn storedProfiles;\n\t}\n\n\tprotected override saveStoredProfileAssociations(storedProfileAssociations: StoredProfileAssociations): void {\n\t\tif (storedProfileAssociations.emptyWindows || storedProfileAssociations.workspaces) {\n\t\t\tthis.stateService.setItem(UserDataProfilesService.PROFILE_ASSOCIATIONS_KEY, storedProfileAssociations);\n\t\t} else {\n\t\t\tthis.stateService.removeItem(UserDataProfilesService.PROFILE_ASSOCIATIONS_KEY);\n\t\t}\n\t}\n\n\tprotected override getStoredProfileAssociations(): StoredProfileAssociations {\n\t\tconst oldKey = 'workspaceAndProfileInfo';\n\t\tconst storedWorkspaceInfos = this.stateService.getItem<{ workspace: UriComponents; profile: UriComponents }[]>(oldKey, undefined);\n\t\tif (storedWorkspaceInfos) {\n\t\t\tthis.stateService.removeItem(oldKey);\n\t\t\tconst workspaces = storedWorkspaceInfos.reduce<IStringDictionary<string>>((result, { workspace, profile }) => {\n\t\t\t\tresult[URI.revive(workspace).toString()] = URI.revive(profile).toString();\n\t\t\t\treturn result;\n\t\t\t}, {});\n\t\t\tthis.stateService.setItem(UserDataProfilesService.PROFILE_ASSOCIATIONS_KEY, { workspaces } satisfies StoredProfileAssociations);\n\t\t}\n\t\tconst associations = super.getStoredProfileAssociations();\n\t\tif (!this.stateService.getItem<boolean>(UserDataProfilesService.PROFILE_ASSOCIATIONS_MIGRATION_KEY, false)) {\n\t\t\tthis.saveStoredProfileAssociations(associations);\n\t\t\tthis.stateService.setItem(UserDataProfilesService.PROFILE_ASSOCIATIONS_MIGRATION_KEY, true);\n\t\t}\n\t\treturn associations;\n\t}\n}\n\nexport class ServerUserDataProfilesService extends UserDataProfilesService implements IUserDataProfilesService {\n\n\tconstructor(\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@IFileService fileService: IFileService,\n\t\t@ILogService logService: ILogService,\n\t) {\n\t\tsuper(new StateService(SaveStrategy.IMMEDIATE, environmentService, logService, fileService), uriIdentityService, environmentService, fileService, logService);\n\t}\n\n\toverride async init(): Promise<void> {\n\t\tawait (this.stateService as StateService).init();\n\t\treturn super.init();\n\t}\n\n}\n"],
  "mappings": "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",
  "names": []
}
