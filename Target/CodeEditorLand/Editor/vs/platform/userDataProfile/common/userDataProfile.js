var U=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var y=(n,a,e,i)=>{for(var t=i>1?void 0:i?w(a,e):a,r=n.length-1,s;r>=0;r--)(s=n[r])&&(t=(i?s(a,e,t):s(t))||t);return i&&t&&U(a,e,t),t},u=(n,a)=>(e,i)=>a(e,i,n);import{hash as I}from"../../../base/common/hash.js";import{Emitter as m}from"../../../base/common/event.js";import{Disposable as k}from"../../../base/common/lifecycle.js";import{basename as b,joinPath as p}from"../../../base/common/resources.js";import{URI as c}from"../../../base/common/uri.js";import{localize as S}from"../../../nls.js";import{IEnvironmentService as W}from"../../environment/common/environment.js";import{FileOperationResult as x,IFileService as O,toFileOperationResult as R}from"../../files/common/files.js";import{createDecorator as E}from"../../instantiation/common/instantiation.js";import{ILogService as j}from"../../log/common/log.js";import{isSingleFolderWorkspaceIdentifier as A,isWorkspaceIdentifier as F}from"../../workspace/common/workspace.js";import"../../../base/common/collections.js";import{IUriIdentityService as _}from"../../uriIdentity/common/uriIdentity.js";import{Promises as C}from"../../../base/common/async.js";import{generateUuid as D}from"../../../base/common/uuid.js";import{escapeRegExpCharacters as H}from"../../../base/common/strings.js";import{isString as v}from"../../../base/common/types.js";var N=(s=>(s.Settings="settings",s.Keybindings="keybindings",s.Snippets="snippets",s.Tasks="tasks",s.Extensions="extensions",s.GlobalState="globalState",s))(N||{});function le(n){const a=n;return!!(a&&typeof a=="object"&&typeof a.id=="string"&&typeof a.isDefault=="boolean"&&typeof a.name=="string"&&c.isUri(a.location)&&c.isUri(a.globalStorageHome)&&c.isUri(a.settingsResource)&&c.isUri(a.keybindingsResource)&&c.isUri(a.tasksResource)&&c.isUri(a.snippetsHome)&&c.isUri(a.extensionsResource))}const fe=E("IUserDataProfilesService");function ce(n,a){return{id:n.id,isDefault:n.isDefault,name:n.name,shortName:n.shortName,icon:n.icon,location:c.revive(n.location).with({scheme:a}),globalStorageHome:c.revive(n.globalStorageHome).with({scheme:a}),settingsResource:c.revive(n.settingsResource).with({scheme:a}),keybindingsResource:c.revive(n.keybindingsResource).with({scheme:a}),tasksResource:c.revive(n.tasksResource).with({scheme:a}),snippetsHome:c.revive(n.snippetsHome).with({scheme:a}),extensionsResource:c.revive(n.extensionsResource).with({scheme:a}),cacheHome:c.revive(n.cacheHome).with({scheme:a}),useDefaultFlags:n.useDefaultFlags,isTransient:n.isTransient,workspaces:n.workspaces?.map(e=>c.revive(e))}}function g(n,a,e,i,t,r){return{id:n,name:a,location:e,isDefault:!1,shortName:t?.shortName,icon:t?.icon,globalStorageHome:r&&t?.useDefaultFlags?.globalState?r.globalStorageHome:p(e,"globalStorage"),settingsResource:r&&t?.useDefaultFlags?.settings?r.settingsResource:p(e,"settings.json"),keybindingsResource:r&&t?.useDefaultFlags?.keybindings?r.keybindingsResource:p(e,"keybindings.json"),tasksResource:r&&t?.useDefaultFlags?.tasks?r.tasksResource:p(e,"tasks.json"),snippetsHome:r&&t?.useDefaultFlags?.snippets?r.snippetsHome:p(e,"snippets"),extensionsResource:r&&t?.useDefaultFlags?.extensions?r.extensionsResource:p(e,"extensions.json"),cacheHome:p(i,n),useDefaultFlags:t?.useDefaultFlags,isTransient:t?.transient,workspaces:t?.workspaces}}let h=class extends k{constructor(e,i,t,r){super();this.environmentService=e;this.fileService=i;this.uriIdentityService=t;this.logService=r;this.profilesHome=p(this.environmentService.userRoamingDataHome,"profiles"),this.profilesCacheHome=p(this.environmentService.cacheHome,"CachedProfilesData")}static PROFILES_KEY="userDataProfiles";static PROFILE_ASSOCIATIONS_KEY="profileAssociations";_serviceBrand;enabled=!0;profilesHome;profilesCacheHome;get defaultProfile(){return this.profiles[0]}get profiles(){return[...this.profilesObject.profiles,...this.transientProfilesObject.profiles]}_onDidChangeProfiles=this._register(new m);onDidChangeProfiles=this._onDidChangeProfiles.event;_onWillCreateProfile=this._register(new m);onWillCreateProfile=this._onWillCreateProfile.event;_onWillRemoveProfile=this._register(new m);onWillRemoveProfile=this._onWillRemoveProfile.event;_onDidResetWorkspaces=this._register(new m);onDidResetWorkspaces=this._onDidResetWorkspaces.event;profileCreationPromises=new Map;transientProfilesObject={profiles:[],emptyWindows:new Map};init(){this._profilesObject=void 0}setEnablement(e){this.enabled!==e&&(this._profilesObject=void 0,this.enabled=e)}isEnabled(){return this.enabled}_profilesObject;get profilesObject(){if(!this._profilesObject){const e=this.createDefaultProfile(),i=[e];if(this.enabled)try{for(const r of this.getStoredProfiles()){if(!r.name||!v(r.name)||!r.location){this.logService.warn("Skipping the invalid stored profile",r.location||r.name);continue}i.push(g(b(r.location),r.name,r.location,this.profilesCacheHome,{shortName:r.shortName,icon:r.icon,useDefaultFlags:r.useDefaultFlags},e))}}catch(r){this.logService.error(r)}const t=new Map;if(i.length)try{const r=this.getStoredProfileAssociations();if(r.workspaces)for(const[s,l]of Object.entries(r.workspaces)){const o=c.parse(s),f=i.find(d=>d.id===l);if(f){const d=f.workspaces?f.workspaces.slice(0):[];d.push(o),f.workspaces=d}}if(r.emptyWindows)for(const[s,l]of Object.entries(r.emptyWindows)){const o=i.find(f=>f.id===l);o&&t.set(s,o)}}catch(r){this.logService.error(r)}this._profilesObject={profiles:i,emptyWindows:t}}return this._profilesObject}createDefaultProfile(){const e=g("__default__profile__",S("defaultProfile","Default"),this.environmentService.userRoamingDataHome,this.profilesCacheHome);return{...e,extensionsResource:this.getDefaultProfileExtensionsLocation()??e.extensionsResource,isDefault:!0}}async createTransientProfile(e){const i="Temp",t=new RegExp(`${H(i)}\\s(\\d+)`);let r=0;for(const l of this.profiles){const o=t.exec(l.name),f=o?parseInt(o[1]):0;r=f>r?f:r}const s=`${i} ${r+1}`;return this.createProfile(I(D()).toString(16),s,{transient:!0},e)}async createNamedProfile(e,i,t){return this.createProfile(I(D()).toString(16),e,i,t)}async createProfile(e,i,t,r){if(!this.enabled)throw new Error("Profiles are disabled in the current environment.");return await this.doCreateProfile(e,i,t,r)}async doCreateProfile(e,i,t,r){if(!v(i)||!i)throw new Error("Name of the profile is mandatory and must be of type `string`");let s=this.profileCreationPromises.get(i);return s||(s=(async()=>{try{if(this.profiles.find(P=>P.id===e||!P.isTransient&&!t?.transient&&P.name===i))throw new Error(`Profile with ${i} name already exists`);const o=r?this.getWorkspace(r):void 0;c.isUri(o)&&(t={...t,workspaces:[o]});const f=g(e,i,p(this.profilesHome,e),this.profilesCacheHome,t,this.defaultProfile);await this.fileService.createFolder(f.location);const d=[];return this._onWillCreateProfile.fire({profile:f,join(P){d.push(P)}}),await C.settled(d),o&&!c.isUri(o)&&this.updateEmptyWindowAssociation(o,f,!!f.isTransient),this.updateProfiles([f],[],[]),f}finally{this.profileCreationPromises.delete(i)}})(),this.profileCreationPromises.set(i,s)),s}async updateProfile(e,i){if(!this.enabled)throw new Error("Profiles are disabled in the current environment.");const t=[];for(const s of this.profiles){let l;if(e.id===s.id)s.isDefault?i.workspaces&&(l=s,l.workspaces=i.workspaces):l=g(s.id,i.name??s.name,s.location,this.profilesCacheHome,{shortName:i.shortName??s.shortName,icon:i.icon===null?void 0:i.icon??s.icon,transient:i.transient??s.isTransient,useDefaultFlags:i.useDefaultFlags??s.useDefaultFlags,workspaces:i.workspaces??s.workspaces},this.defaultProfile);else if(i.workspaces){const o=s.workspaces?.filter(f=>!i.workspaces?.some(d=>this.uriIdentityService.extUri.isEqual(f,d)));s.workspaces?.length!==o?.length&&(l=s,l.workspaces=o)}l&&t.push(l)}if(!t.length)throw e.isDefault?new Error("Cannot update default profile"):new Error(`Profile '${e.name}' does not exist`);this.updateProfiles([],[],t);const r=this.profiles.find(s=>s.id===e.id);if(!r)throw new Error(`Profile '${e.name}' was not updated`);return r}async removeProfile(e){if(!this.enabled)throw new Error("Profiles are disabled in the current environment.");if(e.isDefault)throw new Error("Cannot remove default profile");const i=this.profiles.find(r=>r.id===e.id);if(!i)throw new Error(`Profile '${e.name}' does not exist`);const t=[];this._onWillRemoveProfile.fire({profile:i,join(r){t.push(r)}});try{await Promise.allSettled(t)}catch(r){this.logService.error(r)}this.updateProfiles([],[i],[]);try{await this.fileService.del(i.cacheHome,{recursive:!0})}catch(r){R(r)!==x.FILE_NOT_FOUND&&this.logService.error(r)}}async setProfileForWorkspace(e,i){if(!this.enabled)throw new Error("Profiles are disabled in the current environment.");const t=this.profiles.find(s=>s.id===i.id);if(!t)throw new Error(`Profile '${i.name}' does not exist`);const r=this.getWorkspace(e);if(c.isUri(r)){const s=t.workspaces?[...t.workspaces]:[];s.some(l=>this.uriIdentityService.extUri.isEqual(l,r))||(s.push(r),await this.updateProfile(t,{workspaces:s}))}else this.updateEmptyWindowAssociation(r,t,!1),this.updateStoredProfiles(this.profiles)}unsetWorkspace(e,i=!1){if(!this.enabled)throw new Error("Profiles are disabled in the current environment.");const t=this.getWorkspace(e);if(c.isUri(t)){const r=this.getProfileForWorkspace(e);r&&this.updateProfile(r,{workspaces:r.workspaces?.filter(s=>!this.uriIdentityService.extUri.isEqual(s,t))})}else this.updateEmptyWindowAssociation(t,void 0,i),this.updateStoredProfiles(this.profiles)}async resetWorkspaces(){this.transientProfilesObject.emptyWindows.clear(),this.profilesObject.emptyWindows.clear();for(const e of this.profiles)e.workspaces=void 0;this.updateProfiles([],[],this.profiles),this._onDidResetWorkspaces.fire()}async cleanUp(){if(this.enabled&&await this.fileService.exists(this.profilesHome)){const e=await this.fileService.resolve(this.profilesHome);await Promise.all((e.children||[]).filter(i=>i.isDirectory&&this.profiles.every(t=>!this.uriIdentityService.extUri.isEqual(t.location,i.resource))).map(i=>this.fileService.del(i.resource,{recursive:!0})))}}async cleanUpTransientProfiles(){if(!this.enabled)return;const e=this.transientProfilesObject.profiles.filter(i=>!this.isProfileAssociatedToWorkspace(i));await Promise.allSettled(e.map(i=>this.removeProfile(i)))}getProfileForWorkspace(e){const i=this.getWorkspace(e);return c.isUri(i)?this.profiles.find(t=>t.workspaces?.some(r=>this.uriIdentityService.extUri.isEqual(r,i))):this.profilesObject.emptyWindows.get(i)??this.transientProfilesObject.emptyWindows.get(i)}getWorkspace(e){return A(e)?e.uri:F(e)?e.configPath:e.id}isProfileAssociatedToWorkspace(e){return!!(e.workspaces?.length||[...this.profilesObject.emptyWindows.values()].some(i=>this.uriIdentityService.extUri.isEqual(i.location,e.location))||[...this.transientProfilesObject.emptyWindows.values()].some(i=>this.uriIdentityService.extUri.isEqual(i.location,e.location)))}updateProfiles(e,i,t){const r=[...this.profiles,...e],s=this.transientProfilesObject.profiles;this.transientProfilesObject.profiles=[];const l=[];for(let o of r){if(i.some(f=>o.id===f.id)){for(const f of[...this.profilesObject.emptyWindows.keys()])o.id===this.profilesObject.emptyWindows.get(f)?.id&&this.profilesObject.emptyWindows.delete(f);continue}if(!o.isDefault){o=t.find(d=>o.id===d.id)??o;const f=s.find(d=>o.id===d.id);if(o.isTransient)this.transientProfilesObject.profiles.push(o);else if(f){for(const[d,P]of this.transientProfilesObject.emptyWindows.entries())if(o.id===P.id){this.transientProfilesObject.emptyWindows.delete(d),this.profilesObject.emptyWindows.set(d,o);break}}}o.workspaces?.length===0&&(o.workspaces=void 0),l.push(o)}this.updateStoredProfiles(l),this.triggerProfilesChanges(e,i,t)}triggerProfilesChanges(e,i,t){this._onDidChangeProfiles.fire({added:e,removed:i,updated:t,all:this.profiles})}updateEmptyWindowAssociation(e,i,t){t=i?.isTransient?!0:t,t?i?this.transientProfilesObject.emptyWindows.set(e,i):this.transientProfilesObject.emptyWindows.delete(e):(this.transientProfilesObject.emptyWindows.delete(e),i?this.profilesObject.emptyWindows.set(e,i):this.profilesObject.emptyWindows.delete(e))}updateStoredProfiles(e){const i=[],t={},r={};for(const s of e)if(!s.isTransient&&(s.isDefault||i.push({location:s.location,name:s.name,shortName:s.shortName,icon:s.icon,useDefaultFlags:s.useDefaultFlags}),s.workspaces))for(const l of s.workspaces)t[l.toString()]=s.id;for(const[s,l]of this.profilesObject.emptyWindows.entries())r[s.toString()]=l.id;this.saveStoredProfileAssociations({workspaces:t,emptyWindows:r}),this.saveStoredProfiles(i),this._profilesObject=void 0}migrateStoredProfileAssociations(e){const i={},t=this.createDefaultProfile();if(e.workspaces)for(const[s,l]of Object.entries(e.workspaces)){const o=c.parse(l);i[s]=this.uriIdentityService.extUri.isEqual(o,t.location)?t.id:this.uriIdentityService.extUri.basename(o)}const r={};if(e.emptyWindows)for(const[s,l]of Object.entries(e.emptyWindows)){const o=c.parse(l);r[s]=this.uriIdentityService.extUri.isEqual(o,t.location)?t.id:this.uriIdentityService.extUri.basename(o)}return{workspaces:i,emptyWindows:r}}getStoredProfiles(){return[]}saveStoredProfiles(e){throw new Error("not implemented")}getStoredProfileAssociations(){return{}}saveStoredProfileAssociations(e){throw new Error("not implemented")}getDefaultProfileExtensionsLocation(){}};h=y([u(0,W),u(1,O),u(2,_),u(3,j)],h);class de extends h{storedProfiles=[];getStoredProfiles(){return this.storedProfiles}saveStoredProfiles(a){this.storedProfiles=a}storedProfileAssociations={};getStoredProfileAssociations(){return this.storedProfileAssociations}saveStoredProfileAssociations(a){this.storedProfileAssociations=a}}export{fe as IUserDataProfilesService,de as InMemoryUserDataProfilesService,N as ProfileResourceType,h as UserDataProfilesService,le as isUserDataProfile,ce as reviveProfile,g as toUserDataProfile};
