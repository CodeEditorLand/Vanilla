{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/userDataProfile/electron-main/userDataProfile.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from '../../../base/common/event.js';\nimport { INativeEnvironmentService } from '../../environment/common/environment.js';\nimport { IFileService } from '../../files/common/files.js';\nimport { refineServiceDecorator } from '../../instantiation/common/instantiation.js';\nimport { ILogService } from '../../log/common/log.js';\nimport { IUriIdentityService } from '../../uriIdentity/common/uriIdentity.js';\nimport { IUserDataProfilesService, WillCreateProfileEvent, WillRemoveProfileEvent, IUserDataProfile } from '../common/userDataProfile.js';\nimport { UserDataProfilesService } from '../node/userDataProfile.js';\nimport { IAnyWorkspaceIdentifier, IEmptyWorkspaceIdentifier } from '../../workspace/common/workspace.js';\nimport { IStateService } from '../../state/node/state.js';\n\nexport const IUserDataProfilesMainService = refineServiceDecorator<IUserDataProfilesService, IUserDataProfilesMainService>(IUserDataProfilesService);\nexport interface IUserDataProfilesMainService extends IUserDataProfilesService {\n\tgetProfileForWorkspace(workspaceIdentifier: IAnyWorkspaceIdentifier): IUserDataProfile | undefined;\n\tunsetWorkspace(workspaceIdentifier: IAnyWorkspaceIdentifier, transient?: boolean): void;\n\tgetAssociatedEmptyWindows(): IEmptyWorkspaceIdentifier[];\n\treadonly onWillCreateProfile: Event<WillCreateProfileEvent>;\n\treadonly onWillRemoveProfile: Event<WillRemoveProfileEvent>;\n}\n\nexport class UserDataProfilesMainService extends UserDataProfilesService implements IUserDataProfilesMainService {\n\n\tconstructor(\n\t\t@IStateService stateService: IStateService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@IFileService fileService: IFileService,\n\t\t@ILogService logService: ILogService,\n\t) {\n\t\tsuper(stateService, uriIdentityService, environmentService, fileService, logService);\n\t}\n\n\tgetAssociatedEmptyWindows(): IEmptyWorkspaceIdentifier[] {\n\t\tconst emptyWindows: IEmptyWorkspaceIdentifier[] = [];\n\t\tfor (const id of this.profilesObject.emptyWindows.keys()) {\n\t\t\temptyWindows.push({ id });\n\t\t}\n\t\treturn emptyWindows;\n\t}\n\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,aAAa;AACtB,SAAS,iCAAiC;AAC1C,SAAS,oBAAoB;AAC7B,SAAS,8BAA8B;AACvC,SAAS,mBAAmB;AAC5B,SAAS,2BAA2B;AACpC,SAAS,0BAA0B,wBAAwB,wBAAwB,wBAAwB;AAC3G,SAAS,+BAA+B;AACxC,SAAS,yBAAyB,iCAAiC;AACnE,SAAS,qBAAqB;AAEvB,MAAM,+BAA+B,uBAA+E,wBAAwB;AAS5I,IAAM,8BAAN,cAA0C,wBAAgE;AAAA,EAzBjH,OAyBiH;AAAA;AAAA;AAAA,EAEhH,YACgB,cACM,oBACM,oBACb,aACD,YACZ;AACD,UAAM,cAAc,oBAAoB,oBAAoB,aAAa,UAAU;AAAA,EACpF;AAAA,EAEA,4BAAyD;AACxD,UAAM,eAA4C,CAAC;AACnD,eAAW,MAAM,KAAK,eAAe,aAAa,KAAK,GAAG;AACzD,mBAAa,KAAK,EAAE,GAAG,CAAC;AAAA,IACzB;AACA,WAAO;AAAA,EACR;AAED;AApBa,8BAAN;AAAA,EAGJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAPU;",
  "names": []
}
