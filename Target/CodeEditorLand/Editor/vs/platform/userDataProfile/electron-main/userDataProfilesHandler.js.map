{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/userDataProfile/electron-main/userDataProfilesHandler.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { ILifecycleMainService, } from '../../lifecycle/electron-main/lifecycleMainService.js';\nimport { ICodeWindow, LoadReason } from '../../window/electron-main/window.js';\nimport { IUserDataProfilesMainService } from './userDataProfile.js';\nimport { IAnyWorkspaceIdentifier, toWorkspaceIdentifier } from '../../workspace/common/workspace.js';\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { IWindowsMainService } from '../../windows/electron-main/windows.js';\n\nexport class UserDataProfilesHandler extends Disposable {\n\n\tconstructor(\n\t\t@ILifecycleMainService lifecycleMainService: ILifecycleMainService,\n\t\t@IUserDataProfilesMainService private readonly userDataProfilesService: IUserDataProfilesMainService,\n\t\t@IWindowsMainService private readonly windowsMainService: IWindowsMainService,\n\t) {\n\t\tsuper();\n\t\tthis._register(lifecycleMainService.onWillLoadWindow(e => {\n\t\t\tif (e.reason === LoadReason.LOAD) {\n\t\t\t\tthis.unsetProfileForWorkspace(e.window);\n\t\t\t}\n\t\t}));\n\t\tthis._register(lifecycleMainService.onBeforeCloseWindow(window => this.unsetProfileForWorkspace(window)));\n\t\tthis._register(new RunOnceScheduler(() => this.cleanUpEmptyWindowAssociations(), 30 * 1000 /* after 30s */)).schedule();\n\t}\n\n\tprivate async unsetProfileForWorkspace(window: ICodeWindow): Promise<void> {\n\t\tconst workspace = this.getWorkspace(window);\n\t\tconst profile = this.userDataProfilesService.getProfileForWorkspace(workspace);\n\t\tif (profile?.isTransient) {\n\t\t\tthis.userDataProfilesService.unsetWorkspace(workspace, profile.isTransient);\n\t\t\tif (profile.isTransient) {\n\t\t\t\tawait this.userDataProfilesService.cleanUpTransientProfiles();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getWorkspace(window: ICodeWindow): IAnyWorkspaceIdentifier {\n\t\treturn window.openedWorkspace ?? toWorkspaceIdentifier(window.backupPath, window.isExtensionDevelopmentHost);\n\t}\n\n\tprivate cleanUpEmptyWindowAssociations(): void {\n\t\tconst associatedEmptyWindows = this.userDataProfilesService.getAssociatedEmptyWindows();\n\t\tif (associatedEmptyWindows.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst openedWorkspaces = this.windowsMainService.getWindows().map(window => this.getWorkspace(window));\n\t\tfor (const associatedEmptyWindow of associatedEmptyWindows) {\n\t\t\tif (openedWorkspaces.some(openedWorkspace => openedWorkspace.id === associatedEmptyWindow.id)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.userDataProfilesService.unsetWorkspace(associatedEmptyWindow, false);\n\t\t}\n\t}\n\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,kBAAkB;AAC3B,SAAS,6BAA8B;AACvC,SAAS,aAAa,kBAAkB;AACxC,SAAS,oCAAoC;AAC7C,SAAS,yBAAyB,6BAA6B;AAC/D,SAAS,wBAAwB;AACjC,SAAS,2BAA2B;AAE7B,IAAM,0BAAN,cAAsC,WAAW;AAAA,EAEvD,YACwB,sBACwB,yBACT,oBACrC;AACD,UAAM;AAHyC;AACT;AAGtC,SAAK,UAAU,qBAAqB,iBAAiB,OAAK;AACzD,UAAI,EAAE,WAAW,WAAW,MAAM;AACjC,aAAK,yBAAyB,EAAE,MAAM;AAAA,MACvC;AAAA,IACD,CAAC,CAAC;AACF,SAAK,UAAU,qBAAqB,oBAAoB,YAAU,KAAK,yBAAyB,MAAM,CAAC,CAAC;AACxG,SAAK,UAAU,IAAI;AAAA,MAAiB,MAAM,KAAK,+BAA+B;AAAA,MAAG,KAAK;AAAA;AAAA,IAAoB,CAAC,EAAE,SAAS;AAAA,EACvH;AAAA,EA5BD,OAawD;AAAA;AAAA;AAAA,EAiBvD,MAAc,yBAAyB,QAAoC;AAC1E,UAAM,YAAY,KAAK,aAAa,MAAM;AAC1C,UAAM,UAAU,KAAK,wBAAwB,uBAAuB,SAAS;AAC7E,QAAI,SAAS,aAAa;AACzB,WAAK,wBAAwB,eAAe,WAAW,QAAQ,WAAW;AAC1E,UAAI,QAAQ,aAAa;AACxB,cAAM,KAAK,wBAAwB,yBAAyB;AAAA,MAC7D;AAAA,IACD;AAAA,EACD;AAAA,EAEQ,aAAa,QAA8C;AAClE,WAAO,OAAO,mBAAmB,sBAAsB,OAAO,YAAY,OAAO,0BAA0B;AAAA,EAC5G;AAAA,EAEQ,iCAAuC;AAC9C,UAAM,yBAAyB,KAAK,wBAAwB,0BAA0B;AACtF,QAAI,uBAAuB,WAAW,GAAG;AACxC;AAAA,IACD;AACA,UAAM,mBAAmB,KAAK,mBAAmB,WAAW,EAAE,IAAI,YAAU,KAAK,aAAa,MAAM,CAAC;AACrG,eAAW,yBAAyB,wBAAwB;AAC3D,UAAI,iBAAiB,KAAK,qBAAmB,gBAAgB,OAAO,sBAAsB,EAAE,GAAG;AAC9F;AAAA,MACD;AACA,WAAK,wBAAwB,eAAe,uBAAuB,KAAK;AAAA,IACzE;AAAA,EACD;AAED;AA9Ca,0BAAN;AAAA,EAGJ;AAAA,EACA;AAAA,EACA;AAAA,GALU;",
  "names": []
}
