{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/workspace/test/common/testWorkspace.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isLinux, isWindows } from '../../../../base/common/platform.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { toWorkspaceFolder, Workspace as BaseWorkspace, WorkspaceFolder } from '../../common/workspace.js';\n\nexport class Workspace extends BaseWorkspace {\n\tconstructor(\n\t\tid: string,\n\t\tfolders: WorkspaceFolder[] = [],\n\t\tconfiguration: URI | null = null,\n\t\tignorePathCasing: (key: URI) => boolean = () => !isLinux\n\t) {\n\t\tsuper(id, folders, false, configuration, ignorePathCasing);\n\t}\n}\n\nconst wsUri = URI.file(isWindows ? 'C:\\\\testWorkspace' : '/testWorkspace');\nexport const TestWorkspace = testWorkspace(wsUri);\n\nexport function testWorkspace(resource: URI): Workspace {\n\treturn new Workspace(resource.toString(), [toWorkspaceFolder(resource)]);\n}\n"],
  "mappings": ";;AAKA,SAAS,SAAS,iBAAiB;AACnC,SAAS,WAAW;AACpB,SAAS,mBAAmB,aAAa,eAAe,uBAAuB;AAExE,MAAM,kBAAkB,cAAc;AAAA,EAT7C,OAS6C;AAAA;AAAA;AAAA,EAC5C,YACC,IACA,UAA6B,CAAC,GAC9B,gBAA4B,MAC5B,mBAA0C,MAAM,CAAC,SAChD;AACD,UAAM,IAAI,SAAS,OAAO,eAAe,gBAAgB;AAAA,EAC1D;AACD;AAEA,MAAM,QAAQ,IAAI,KAAK,YAAY,sBAAsB,gBAAgB;AAClE,MAAM,gBAAgB,cAAc,KAAK;AAEzC,SAAS,cAAc,UAA0B;AACvD,SAAO,IAAI,UAAU,SAAS,SAAS,GAAG,CAAC,kBAAkB,QAAQ,CAAC,CAAC;AACxE;AAFgB;",
  "names": []
}
