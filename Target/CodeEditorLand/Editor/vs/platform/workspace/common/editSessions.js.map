{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/workspace/common/editSessions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { CancellationToken } from \"../../../base/common/cancellation.js\";\nimport type { IDisposable } from \"../../../base/common/lifecycle.js\";\nimport { createDecorator } from \"../../instantiation/common/instantiation.js\";\nimport type { IWorkspaceFolder } from \"./workspace.js\";\n\nexport interface IEditSessionIdentityProvider {\n\treadonly scheme: string;\n\tgetEditSessionIdentifier(\n\t\tworkspaceFolder: IWorkspaceFolder,\n\t\ttoken: CancellationToken,\n\t): Promise<string | undefined>;\n\tprovideEditSessionIdentityMatch(\n\t\tworkspaceFolder: IWorkspaceFolder,\n\t\tidentity1: string,\n\t\tidentity2: string,\n\t\ttoken: CancellationToken,\n\t): Promise<EditSessionIdentityMatch | undefined>;\n}\n\nexport const IEditSessionIdentityService =\n\tcreateDecorator<IEditSessionIdentityService>(\"editSessionIdentityService\");\n\nexport interface IEditSessionIdentityService {\n\treadonly _serviceBrand: undefined;\n\n\tregisterEditSessionIdentityProvider(\n\t\tprovider: IEditSessionIdentityProvider,\n\t): IDisposable;\n\tgetEditSessionIdentifier(\n\t\tworkspaceFolder: IWorkspaceFolder,\n\t\tcancellationToken: CancellationToken,\n\t): Promise<string | undefined>;\n\tprovideEditSessionIdentityMatch(\n\t\tworkspaceFolder: IWorkspaceFolder,\n\t\tidentity1: string,\n\t\tidentity2: string,\n\t\tcancellationToken: CancellationToken,\n\t): Promise<EditSessionIdentityMatch | undefined>;\n\taddEditSessionIdentityCreateParticipant(\n\t\tparticipants: IEditSessionIdentityCreateParticipant,\n\t): IDisposable;\n\tonWillCreateEditSessionIdentity(\n\t\tworkspaceFolder: IWorkspaceFolder,\n\t\tcancellationToken: CancellationToken,\n\t): Promise<void>;\n}\n\nexport interface IEditSessionIdentityCreateParticipant {\n\tparticipate(\n\t\tworkspaceFolder: IWorkspaceFolder,\n\t\tcancellationToken: CancellationToken,\n\t): Promise<void>;\n}\n\nexport enum EditSessionIdentityMatch {\n\tComplete = 100,\n\tPartial = 50,\n\tNone = 0,\n}\n"],
  "mappings": "AAOA,SAAS,uBAAuB;AAiBzB,MAAM,8BACZ,gBAA6C,4BAA4B;AAkCnE,IAAK,2BAAL,kBAAKA,8BAAL;AACN,EAAAA,oDAAA,cAAW,OAAX;AACA,EAAAA,oDAAA,aAAU,MAAV;AACA,EAAAA,oDAAA,UAAO,KAAP;AAHW,SAAAA;AAAA,GAAA;",
  "names": ["EditSessionIdentityMatch"]
}
