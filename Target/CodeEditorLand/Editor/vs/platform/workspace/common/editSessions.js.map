{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/workspace/common/editSessions.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { IDisposable } from '../../../base/common/lifecycle.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { IWorkspaceFolder } from './workspace.js';\n\nexport interface IEditSessionIdentityProvider {\n\treadonly scheme: string;\n\tgetEditSessionIdentifier(workspaceFolder: IWorkspaceFolder, token: CancellationToken): Promise<string | undefined>;\n\tprovideEditSessionIdentityMatch(workspaceFolder: IWorkspaceFolder, identity1: string, identity2: string, token: CancellationToken): Promise<EditSessionIdentityMatch | undefined>;\n}\n\nexport const IEditSessionIdentityService = createDecorator<IEditSessionIdentityService>('editSessionIdentityService');\n\nexport interface IEditSessionIdentityService {\n\treadonly _serviceBrand: undefined;\n\n\tregisterEditSessionIdentityProvider(provider: IEditSessionIdentityProvider): IDisposable;\n\tgetEditSessionIdentifier(workspaceFolder: IWorkspaceFolder, cancellationToken: CancellationToken): Promise<string | undefined>;\n\tprovideEditSessionIdentityMatch(workspaceFolder: IWorkspaceFolder, identity1: string, identity2: string, cancellationToken: CancellationToken): Promise<EditSessionIdentityMatch | undefined>;\n\taddEditSessionIdentityCreateParticipant(participants: IEditSessionIdentityCreateParticipant): IDisposable;\n\tonWillCreateEditSessionIdentity(workspaceFolder: IWorkspaceFolder, cancellationToken: CancellationToken): Promise<void>;\n}\n\nexport interface IEditSessionIdentityCreateParticipant {\n\tparticipate(workspaceFolder: IWorkspaceFolder, cancellationToken: CancellationToken): Promise<void>;\n}\n\nexport enum EditSessionIdentityMatch {\n\tComplete = 100,\n\tPartial = 50,\n\tNone = 0,\n}\n"],
  "mappings": "AAKA,SAAS,yBAAyB;AAClC,SAAS,mBAAmB;AAC5B,SAAS,uBAAuB;AAChC,SAAS,wBAAwB;AAQ1B,MAAM,8BAA8B,gBAA6C,4BAA4B;AAgB7G,IAAK,2BAAL,kBAAKA,8BAAL;AACN,EAAAA,oDAAA,cAAW,OAAX;AACA,EAAAA,oDAAA,aAAU,MAAV;AACA,EAAAA,oDAAA,UAAO,KAAP;AAHW,SAAAA;AAAA,GAAA;",
  "names": ["EditSessionIdentityMatch"]
}
