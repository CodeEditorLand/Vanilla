{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/download/common/downloadService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from \"../../../base/common/cancellation.js\";\nimport { Schemas } from \"../../../base/common/network.js\";\nimport type { URI } from \"../../../base/common/uri.js\";\nimport { IFileService } from \"../../files/common/files.js\";\nimport {\n\tIRequestService,\n\tasTextOrError,\n} from \"../../request/common/request.js\";\nimport type { IDownloadService } from \"./download.js\";\n\nexport class DownloadService implements IDownloadService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IRequestService private readonly requestService: IRequestService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t) {}\n\n\tasync download(\n\t\tresource: URI,\n\t\ttarget: URI,\n\t\tcancellationToken: CancellationToken = CancellationToken.None,\n\t): Promise<void> {\n\t\tif (\n\t\t\tresource.scheme === Schemas.file ||\n\t\t\tresource.scheme === Schemas.vscodeRemote\n\t\t) {\n\t\t\t// Intentionally only support this for file|remote<->file|remote scenarios\n\t\t\tawait this.fileService.copy(resource, target);\n\t\t\treturn;\n\t\t}\n\t\tconst options = { type: \"GET\", url: resource.toString(true) };\n\t\tconst context = await this.requestService.request(\n\t\t\toptions,\n\t\t\tcancellationToken,\n\t\t);\n\t\tif (context.res.statusCode === 200) {\n\t\t\tawait this.fileService.writeFile(target, context.stream);\n\t\t} else {\n\t\t\tconst message = await asTextOrError(context);\n\t\t\tthrow new Error(\n\t\t\t\t`Expected 200, got back ${context.res.statusCode} instead.\\n\\n${message}`,\n\t\t\t);\n\t\t}\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,yBAAyB;AAClC,SAAS,eAAe;AAExB,SAAS,oBAAoB;AAC7B;AAAA,EACC;AAAA,EACA;AAAA,OACM;AAGA,IAAM,kBAAN,MAAkD;AAAA,EAGxD,YACmC,gBACH,aAC9B;AAFiC;AACH;AAAA,EAC7B;AAAA,EArBJ,OAeyD;AAAA;AAAA;AAAA,EAQxD,MAAM,SACL,UACA,QACA,oBAAuC,kBAAkB,MACzC;AAChB,QACC,SAAS,WAAW,QAAQ,QAC5B,SAAS,WAAW,QAAQ,cAC3B;AAED,YAAM,KAAK,YAAY,KAAK,UAAU,MAAM;AAC5C;AAAA,IACD;AACA,UAAM,UAAU,EAAE,MAAM,OAAO,KAAK,SAAS,SAAS,IAAI,EAAE;AAC5D,UAAM,UAAU,MAAM,KAAK,eAAe;AAAA,MACzC;AAAA,MACA;AAAA,IACD;AACA,QAAI,QAAQ,IAAI,eAAe,KAAK;AACnC,YAAM,KAAK,YAAY,UAAU,QAAQ,QAAQ,MAAM;AAAA,IACxD,OAAO;AACN,YAAM,UAAU,MAAM,cAAc,OAAO;AAC3C,YAAM,IAAI;AAAA,QACT,0BAA0B,QAAQ,IAAI,UAAU;AAAA;AAAA,EAAgB,OAAO;AAAA,MACxE;AAAA,IACD;AAAA,EACD;AACD;AAnCa,kBAAN;AAAA,EAIJ;AAAA,EACA;AAAA,GALU;",
  "names": []
}
