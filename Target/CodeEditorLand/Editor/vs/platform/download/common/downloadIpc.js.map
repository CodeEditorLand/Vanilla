{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/download/common/downloadIpc.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { Event } from \"../../../base/common/event.js\";\nimport { URI } from \"../../../base/common/uri.js\";\nimport type { IURITransformer } from \"../../../base/common/uriIpc.js\";\nimport type {\n\tIChannel,\n\tIServerChannel,\n} from \"../../../base/parts/ipc/common/ipc.js\";\nimport type { IDownloadService } from \"./download.js\";\n\nexport class DownloadServiceChannel implements IServerChannel {\n\tconstructor(private readonly service: IDownloadService) {}\n\n\tlisten(_: unknown, event: string, arg?: any): Event<any> {\n\t\tthrow new Error(\"Invalid listen\");\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase \"download\":\n\t\t\t\treturn this.service.download(\n\t\t\t\t\tURI.revive(args[0]),\n\t\t\t\t\tURI.revive(args[1]),\n\t\t\t\t);\n\t\t}\n\t\tthrow new Error(\"Invalid call\");\n\t}\n}\n\nexport class DownloadServiceChannelClient implements IDownloadService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\tprivate channel: IChannel,\n\t\tprivate getUriTransformer: () => IURITransformer | null,\n\t) {}\n\n\tasync download(from: URI, to: URI): Promise<void> {\n\t\tconst uriTransformer = this.getUriTransformer();\n\t\tif (uriTransformer) {\n\t\t\tfrom = uriTransformer.transformOutgoingURI(from);\n\t\t\tto = uriTransformer.transformOutgoingURI(to);\n\t\t}\n\t\tawait this.channel.call(\"download\", [from, to]);\n\t}\n}\n"],
  "mappings": ";;AAMA,SAAS,WAAW;AAQb,MAAM,uBAAiD;AAAA,EAC7D,YAA6B,SAA2B;AAA3B;AAAA,EAA4B;AAAA,EAf1D,OAc8D;AAAA;AAAA;AAAA,EAG7D,OAAO,GAAY,OAAe,KAAuB;AACxD,UAAM,IAAI,MAAM,gBAAgB;AAAA,EACjC;AAAA,EAEA,KAAK,SAAc,SAAiB,MAA0B;AAC7D,YAAQ,SAAS;AAAA,MAChB,KAAK;AACJ,eAAO,KAAK,QAAQ;AAAA,UACnB,IAAI,OAAO,KAAK,CAAC,CAAC;AAAA,UAClB,IAAI,OAAO,KAAK,CAAC,CAAC;AAAA,QACnB;AAAA,IACF;AACA,UAAM,IAAI,MAAM,cAAc;AAAA,EAC/B;AACD;AAEO,MAAM,6BAAyD;AAAA,EAGrE,YACS,SACA,mBACP;AAFO;AACA;AAAA,EACN;AAAA,EAvCJ,OAiCsE;AAAA;AAAA;AAAA,EAQrE,MAAM,SAAS,MAAW,IAAwB;AACjD,UAAM,iBAAiB,KAAK,kBAAkB;AAC9C,QAAI,gBAAgB;AACnB,aAAO,eAAe,qBAAqB,IAAI;AAC/C,WAAK,eAAe,qBAAqB,EAAE;AAAA,IAC5C;AACA,UAAM,KAAK,QAAQ,KAAK,YAAY,CAAC,MAAM,EAAE,CAAC;AAAA,EAC/C;AACD;",
  "names": []
}
