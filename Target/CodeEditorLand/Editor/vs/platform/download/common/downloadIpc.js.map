{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/download/common/downloadIpc.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from '../../../base/common/event.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { IURITransformer } from '../../../base/common/uriIpc.js';\nimport { IChannel, IServerChannel } from '../../../base/parts/ipc/common/ipc.js';\nimport { IDownloadService } from './download.js';\n\nexport class DownloadServiceChannel implements IServerChannel {\n\n\tconstructor(private readonly service: IDownloadService) { }\n\n\tlisten(_: unknown, event: string, arg?: any): Event<any> {\n\t\tthrow new Error('Invalid listen');\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'download': return this.service.download(URI.revive(args[0]), URI.revive(args[1]));\n\t\t}\n\t\tthrow new Error('Invalid call');\n\t}\n}\n\nexport class DownloadServiceChannelClient implements IDownloadService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private channel: IChannel, private getUriTransformer: () => IURITransformer | null) { }\n\n\tasync download(from: URI, to: URI): Promise<void> {\n\t\tconst uriTransformer = this.getUriTransformer();\n\t\tif (uriTransformer) {\n\t\t\tfrom = uriTransformer.transformOutgoingURI(from);\n\t\t\tto = uriTransformer.transformOutgoingURI(to);\n\t\t}\n\t\tawait this.channel.call('download', [from, to]);\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,aAAa;AACtB,SAAS,WAAW;AACpB,SAAS,uBAAuB;AAChC,SAAS,UAAU,sBAAsB;AACzC,SAAS,wBAAwB;AAE1B,MAAM,uBAAiD;AAAA,EAE7D,YAA6B,SAA2B;AAA3B;AAAA,EAA6B;AAAA,EAb3D,OAW8D;AAAA;AAAA;AAAA,EAI7D,OAAO,GAAY,OAAe,KAAuB;AACxD,UAAM,IAAI,MAAM,gBAAgB;AAAA,EACjC;AAAA,EAEA,KAAK,SAAc,SAAiB,MAA0B;AAC7D,YAAQ,SAAS;AAAA,MAChB,KAAK;AAAY,eAAO,KAAK,QAAQ,SAAS,IAAI,OAAO,KAAK,CAAC,CAAC,GAAG,IAAI,OAAO,KAAK,CAAC,CAAC,CAAC;AAAA,IACvF;AACA,UAAM,IAAI,MAAM,cAAc;AAAA,EAC/B;AACD;AAEO,MAAM,6BAAyD;AAAA,EAIrE,YAAoB,SAA2B,mBAAiD;AAA5E;AAA2B;AAAA,EAAmD;AAAA,EA/BnG,OA2BsE;AAAA;AAAA;AAAA,EAMrE,MAAM,SAAS,MAAW,IAAwB;AACjD,UAAM,iBAAiB,KAAK,kBAAkB;AAC9C,QAAI,gBAAgB;AACnB,aAAO,eAAe,qBAAqB,IAAI;AAC/C,WAAK,eAAe,qBAAqB,EAAE;AAAA,IAC5C;AACA,UAAM,KAAK,QAAQ,KAAK,YAAY,CAAC,MAAM,EAAE,CAAC;AAAA,EAC/C;AACD;",
  "names": []
}
