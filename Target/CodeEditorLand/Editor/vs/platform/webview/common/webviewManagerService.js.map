{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/webview/common/webviewManagerService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { Event } from \"../../../base/common/event.js\";\nimport { createDecorator } from \"../../instantiation/common/instantiation.js\";\n\nexport const IWebviewManagerService = createDecorator<IWebviewManagerService>(\n\t\"webviewManagerService\",\n);\n\nexport interface WebviewWebContentsId {\n\treadonly webContentsId: number;\n}\n\nexport interface WebviewWindowId {\n\treadonly windowId: number;\n}\n\nexport interface FindInFrameOptions {\n\treadonly forward?: boolean;\n\treadonly findNext?: boolean;\n\treadonly matchCase?: boolean;\n}\n\nexport interface FoundInFrameResult {\n\treadonly requestId: number;\n\treadonly activeMatchOrdinal: number;\n\treadonly matches: number;\n\treadonly selectionArea: any;\n\treadonly finalUpdate: boolean;\n}\n\nexport interface IWebviewManagerService {\n\t_serviceBrand: unknown;\n\n\tonFoundInFrame: Event<FoundInFrameResult>;\n\n\tsetIgnoreMenuShortcuts(\n\t\tid: WebviewWebContentsId | WebviewWindowId,\n\t\tenabled: boolean,\n\t): Promise<void>;\n\n\tfindInFrame(\n\t\twindowId: WebviewWindowId,\n\t\tframeName: string,\n\t\ttext: string,\n\t\toptions: FindInFrameOptions,\n\t): Promise<void>;\n\n\tstopFindInFrame(\n\t\twindowId: WebviewWindowId,\n\t\tframeName: string,\n\t\toptions: { keepSelection?: boolean },\n\t): Promise<void>;\n}\n"],
  "mappings": "AAMA,SAAS,uBAAuB;AAEzB,MAAM,yBAAyB;AAAA,EACrC;AACD;",
  "names": []
}
