{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/webview/common/mimeTypes.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getMediaMime, Mimes } from '../../../base/common/mime.js';\nimport { extname } from '../../../base/common/path.js';\nimport { URI } from '../../../base/common/uri.js';\n\nconst webviewMimeTypes = new Map([\n\t['.svg', 'image/svg+xml'],\n\t['.txt', Mimes.text],\n\t['.css', 'text/css'],\n\t['.js', 'application/javascript'],\n\t['.cjs', 'application/javascript'],\n\t['.mjs', 'application/javascript'],\n\t['.json', 'application/json'],\n\t['.html', 'text/html'],\n\t['.htm', 'text/html'],\n\t['.xhtml', 'application/xhtml+xml'],\n\t['.oft', 'font/otf'],\n\t['.xml', 'application/xml'],\n\t['.wasm', 'application/wasm'],\n]);\n\nexport function getWebviewContentMimeType(resource: URI): string {\n\tconst ext = extname(resource.fsPath).toLowerCase();\n\treturn webviewMimeTypes.get(ext) || getMediaMime(resource.fsPath) || Mimes.unknown;\n}\n"],
  "mappings": ";;AAKA,SAAS,cAAc,aAAa;AACpC,SAAS,eAAe;AACxB,SAAS,WAAW;AAEpB,MAAM,mBAAmB,oBAAI,IAAI;AAAA,EAChC,CAAC,QAAQ,eAAe;AAAA,EACxB,CAAC,QAAQ,MAAM,IAAI;AAAA,EACnB,CAAC,QAAQ,UAAU;AAAA,EACnB,CAAC,OAAO,wBAAwB;AAAA,EAChC,CAAC,QAAQ,wBAAwB;AAAA,EACjC,CAAC,QAAQ,wBAAwB;AAAA,EACjC,CAAC,SAAS,kBAAkB;AAAA,EAC5B,CAAC,SAAS,WAAW;AAAA,EACrB,CAAC,QAAQ,WAAW;AAAA,EACpB,CAAC,UAAU,uBAAuB;AAAA,EAClC,CAAC,QAAQ,UAAU;AAAA,EACnB,CAAC,QAAQ,iBAAiB;AAAA,EAC1B,CAAC,SAAS,kBAAkB;AAC7B,CAAC;AAEM,SAAS,0BAA0B,UAAuB;AAChE,QAAM,MAAM,QAAQ,SAAS,MAAM,EAAE,YAAY;AACjD,SAAO,iBAAiB,IAAI,GAAG,KAAK,aAAa,SAAS,MAAM,KAAK,MAAM;AAC5E;AAHgB;",
  "names": []
}
