{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/webview/electron-main/webviewMainService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { type WebContents, type WebFrameMain, webContents } from \"electron\";\nimport { Emitter } from \"../../../base/common/event.js\";\nimport { Disposable } from \"../../../base/common/lifecycle.js\";\nimport { IWindowsMainService } from \"../../windows/electron-main/windows.js\";\nimport type {\n\tFindInFrameOptions,\n\tFoundInFrameResult,\n\tIWebviewManagerService,\n\tWebviewWebContentsId,\n\tWebviewWindowId,\n} from \"../common/webviewManagerService.js\";\nimport { WebviewProtocolProvider } from \"./webviewProtocolProvider.js\";\n\nexport class WebviewMainService\n\textends Disposable\n\timplements IWebviewManagerService\n{\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onFoundInFrame = this._register(\n\t\tnew Emitter<FoundInFrameResult>(),\n\t);\n\tpublic onFoundInFrame = this._onFoundInFrame.event;\n\n\tconstructor(\n\t\t@IWindowsMainService\n\t\tprivate readonly windowsMainService: IWindowsMainService,\n\t) {\n\t\tsuper();\n\t\tthis._register(new WebviewProtocolProvider());\n\t}\n\n\tpublic async setIgnoreMenuShortcuts(\n\t\tid: WebviewWebContentsId | WebviewWindowId,\n\t\tenabled: boolean,\n\t): Promise<void> {\n\t\tlet contents: WebContents | undefined;\n\n\t\tif (typeof (id as WebviewWindowId).windowId === \"number\") {\n\t\t\tconst { windowId } = id as WebviewWindowId;\n\t\t\tconst window = this.windowsMainService.getWindowById(windowId);\n\t\t\tif (!window?.win) {\n\t\t\t\tthrow new Error(`Invalid windowId: ${windowId}`);\n\t\t\t}\n\t\t\tcontents = window.win.webContents;\n\t\t} else {\n\t\t\tconst { webContentsId } = id as WebviewWebContentsId;\n\t\t\tcontents = webContents.fromId(webContentsId);\n\t\t\tif (!contents) {\n\t\t\t\tthrow new Error(`Invalid webContentsId: ${webContentsId}`);\n\t\t\t}\n\t\t}\n\n\t\tif (!contents.isDestroyed()) {\n\t\t\tcontents.setIgnoreMenuShortcuts(enabled);\n\t\t}\n\t}\n\n\tpublic async findInFrame(\n\t\twindowId: WebviewWindowId,\n\t\tframeName: string,\n\t\ttext: string,\n\t\toptions: { findNext?: boolean; forward?: boolean },\n\t): Promise<void> {\n\t\tconst initialFrame = this.getFrameByName(windowId, frameName);\n\n\t\ttype WebFrameMainWithFindSupport = WebFrameMain & {\n\t\t\tfindInFrame?(text: string, findOptions: FindInFrameOptions): void;\n\t\t\ton(event: \"found-in-frame\", listener: Function): WebFrameMain;\n\t\t\tremoveListener(\n\t\t\t\tevent: \"found-in-frame\",\n\t\t\t\tlistener: Function,\n\t\t\t): WebFrameMain;\n\t\t};\n\t\tconst frame = initialFrame as unknown as WebFrameMainWithFindSupport;\n\t\tif (typeof frame.findInFrame === \"function\") {\n\t\t\tframe.findInFrame(text, {\n\t\t\t\tfindNext: options.findNext,\n\t\t\t\tforward: options.forward,\n\t\t\t});\n\t\t\tconst foundInFrameHandler = (\n\t\t\t\t_: unknown,\n\t\t\t\tresult: FoundInFrameResult,\n\t\t\t) => {\n\t\t\t\tif (result.finalUpdate) {\n\t\t\t\t\tthis._onFoundInFrame.fire(result);\n\t\t\t\t\tframe.removeListener(\"found-in-frame\", foundInFrameHandler);\n\t\t\t\t}\n\t\t\t};\n\t\t\tframe.on(\"found-in-frame\", foundInFrameHandler);\n\t\t}\n\t}\n\n\tpublic async stopFindInFrame(\n\t\twindowId: WebviewWindowId,\n\t\tframeName: string,\n\t\toptions: { keepSelection?: boolean },\n\t): Promise<void> {\n\t\tconst initialFrame = this.getFrameByName(windowId, frameName);\n\n\t\ttype WebFrameMainWithFindSupport = WebFrameMain & {\n\t\t\tstopFindInFrame?(\n\t\t\t\tstopOption: \"keepSelection\" | \"clearSelection\",\n\t\t\t): void;\n\t\t};\n\n\t\tconst frame = initialFrame as unknown as WebFrameMainWithFindSupport;\n\t\tif (typeof frame.stopFindInFrame === \"function\") {\n\t\t\tframe.stopFindInFrame(\n\t\t\t\toptions.keepSelection ? \"keepSelection\" : \"clearSelection\",\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate getFrameByName(\n\t\twindowId: WebviewWindowId,\n\t\tframeName: string,\n\t): WebFrameMain {\n\t\tconst window = this.windowsMainService.getWindowById(windowId.windowId);\n\t\tif (!window?.win) {\n\t\t\tthrow new Error(`Invalid windowId: ${windowId}`);\n\t\t}\n\t\tconst frame = window.win.webContents.mainFrame.framesInSubtree.find(\n\t\t\t(frame) => {\n\t\t\t\treturn frame.name === frameName;\n\t\t\t},\n\t\t);\n\t\tif (!frame) {\n\t\t\tthrow new Error(`Unknown frame: ${frameName}`);\n\t\t}\n\t\treturn frame;\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAA8C,mBAAmB;AACjE,SAAS,eAAe;AACxB,SAAS,kBAAkB;AAC3B,SAAS,2BAA2B;AAQpC,SAAS,+BAA+B;AAEjC,IAAM,qBAAN,cACE,WAET;AAAA,EAQC,YAEkB,oBAChB;AACD,UAAM;AAFW;AAGjB,SAAK,UAAU,IAAI,wBAAwB,CAAC;AAAA,EAC7C;AAAA,EAnCD,OAqBA;AAAA;AAAA;AAAA,EAGkB,kBAAkB,KAAK;AAAA,IACvC,IAAI,QAA4B;AAAA,EACjC;AAAA,EACO,iBAAiB,KAAK,gBAAgB;AAAA,EAU7C,MAAa,uBACZ,IACA,SACgB;AAChB,QAAI;AAEJ,QAAI,OAAQ,GAAuB,aAAa,UAAU;AACzD,YAAM,EAAE,SAAS,IAAI;AACrB,YAAM,SAAS,KAAK,mBAAmB,cAAc,QAAQ;AAC7D,UAAI,CAAC,QAAQ,KAAK;AACjB,cAAM,IAAI,MAAM,qBAAqB,QAAQ,EAAE;AAAA,MAChD;AACA,iBAAW,OAAO,IAAI;AAAA,IACvB,OAAO;AACN,YAAM,EAAE,cAAc,IAAI;AAC1B,iBAAW,YAAY,OAAO,aAAa;AAC3C,UAAI,CAAC,UAAU;AACd,cAAM,IAAI,MAAM,0BAA0B,aAAa,EAAE;AAAA,MAC1D;AAAA,IACD;AAEA,QAAI,CAAC,SAAS,YAAY,GAAG;AAC5B,eAAS,uBAAuB,OAAO;AAAA,IACxC;AAAA,EACD;AAAA,EAEA,MAAa,YACZ,UACA,WACA,MACA,SACgB;AAChB,UAAM,eAAe,KAAK,eAAe,UAAU,SAAS;AAU5D,UAAM,QAAQ;AACd,QAAI,OAAO,MAAM,gBAAgB,YAAY;AAC5C,YAAM,YAAY,MAAM;AAAA,QACvB,UAAU,QAAQ;AAAA,QAClB,SAAS,QAAQ;AAAA,MAClB,CAAC;AACD,YAAM,sBAAsB,wBAC3B,GACA,WACI;AACJ,YAAI,OAAO,aAAa;AACvB,eAAK,gBAAgB,KAAK,MAAM;AAChC,gBAAM,eAAe,kBAAkB,mBAAmB;AAAA,QAC3D;AAAA,MACD,GAR4B;AAS5B,YAAM,GAAG,kBAAkB,mBAAmB;AAAA,IAC/C;AAAA,EACD;AAAA,EAEA,MAAa,gBACZ,UACA,WACA,SACgB;AAChB,UAAM,eAAe,KAAK,eAAe,UAAU,SAAS;AAQ5D,UAAM,QAAQ;AACd,QAAI,OAAO,MAAM,oBAAoB,YAAY;AAChD,YAAM;AAAA,QACL,QAAQ,gBAAgB,kBAAkB;AAAA,MAC3C;AAAA,IACD;AAAA,EACD;AAAA,EAEQ,eACP,UACA,WACe;AACf,UAAM,SAAS,KAAK,mBAAmB,cAAc,SAAS,QAAQ;AACtE,QAAI,CAAC,QAAQ,KAAK;AACjB,YAAM,IAAI,MAAM,qBAAqB,QAAQ,EAAE;AAAA,IAChD;AACA,UAAM,QAAQ,OAAO,IAAI,YAAY,UAAU,gBAAgB;AAAA,MAC9D,CAACA,WAAU;AACV,eAAOA,OAAM,SAAS;AAAA,MACvB;AAAA,IACD;AACA,QAAI,CAAC,OAAO;AACX,YAAM,IAAI,MAAM,kBAAkB,SAAS,EAAE;AAAA,IAC9C;AACA,WAAO;AAAA,EACR;AACD;AAvHa,qBAAN;AAAA,EAYJ;AAAA,GAZU;",
  "names": ["frame"]
}
