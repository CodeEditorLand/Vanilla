{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/webview/electron-main/webviewMainService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { WebContents, webContents, WebFrameMain } from 'electron';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { FindInFrameOptions, FoundInFrameResult, IWebviewManagerService, WebviewWebContentsId, WebviewWindowId } from '../common/webviewManagerService.js';\nimport { WebviewProtocolProvider } from './webviewProtocolProvider.js';\nimport { IWindowsMainService } from '../../windows/electron-main/windows.js';\n\nexport class WebviewMainService extends Disposable implements IWebviewManagerService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onFoundInFrame = this._register(new Emitter<FoundInFrameResult>());\n\tpublic onFoundInFrame = this._onFoundInFrame.event;\n\n\tconstructor(\n\t\t@IWindowsMainService private readonly windowsMainService: IWindowsMainService,\n\t) {\n\t\tsuper();\n\t\tthis._register(new WebviewProtocolProvider());\n\t}\n\n\tpublic async setIgnoreMenuShortcuts(id: WebviewWebContentsId | WebviewWindowId, enabled: boolean): Promise<void> {\n\t\tlet contents: WebContents | undefined;\n\n\t\tif (typeof (id as WebviewWindowId).windowId === 'number') {\n\t\t\tconst { windowId } = (id as WebviewWindowId);\n\t\t\tconst window = this.windowsMainService.getWindowById(windowId);\n\t\t\tif (!window?.win) {\n\t\t\t\tthrow new Error(`Invalid windowId: ${windowId}`);\n\t\t\t}\n\t\t\tcontents = window.win.webContents;\n\t\t} else {\n\t\t\tconst { webContentsId } = (id as WebviewWebContentsId);\n\t\t\tcontents = webContents.fromId(webContentsId);\n\t\t\tif (!contents) {\n\t\t\t\tthrow new Error(`Invalid webContentsId: ${webContentsId}`);\n\t\t\t}\n\t\t}\n\n\t\tif (!contents.isDestroyed()) {\n\t\t\tcontents.setIgnoreMenuShortcuts(enabled);\n\t\t}\n\t}\n\n\tpublic async findInFrame(windowId: WebviewWindowId, frameName: string, text: string, options: { findNext?: boolean; forward?: boolean }): Promise<void> {\n\t\tconst initialFrame = this.getFrameByName(windowId, frameName);\n\n\t\ttype WebFrameMainWithFindSupport = WebFrameMain & {\n\t\t\tfindInFrame?(text: string, findOptions: FindInFrameOptions): void;\n\t\t\ton(event: 'found-in-frame', listener: Function): WebFrameMain;\n\t\t\tremoveListener(event: 'found-in-frame', listener: Function): WebFrameMain;\n\t\t};\n\t\tconst frame = initialFrame as unknown as WebFrameMainWithFindSupport;\n\t\tif (typeof frame.findInFrame === 'function') {\n\t\t\tframe.findInFrame(text, {\n\t\t\t\tfindNext: options.findNext,\n\t\t\t\tforward: options.forward,\n\t\t\t});\n\t\t\tconst foundInFrameHandler = (_: unknown, result: FoundInFrameResult) => {\n\t\t\t\tif (result.finalUpdate) {\n\t\t\t\t\tthis._onFoundInFrame.fire(result);\n\t\t\t\t\tframe.removeListener('found-in-frame', foundInFrameHandler);\n\t\t\t\t}\n\t\t\t};\n\t\t\tframe.on('found-in-frame', foundInFrameHandler);\n\t\t}\n\t}\n\n\tpublic async stopFindInFrame(windowId: WebviewWindowId, frameName: string, options: { keepSelection?: boolean }): Promise<void> {\n\t\tconst initialFrame = this.getFrameByName(windowId, frameName);\n\n\t\ttype WebFrameMainWithFindSupport = WebFrameMain & {\n\t\t\tstopFindInFrame?(stopOption: 'keepSelection' | 'clearSelection'): void;\n\t\t};\n\n\t\tconst frame = initialFrame as unknown as WebFrameMainWithFindSupport;\n\t\tif (typeof frame.stopFindInFrame === 'function') {\n\t\t\tframe.stopFindInFrame(options.keepSelection ? 'keepSelection' : 'clearSelection');\n\t\t}\n\t}\n\n\tprivate getFrameByName(windowId: WebviewWindowId, frameName: string): WebFrameMain {\n\t\tconst window = this.windowsMainService.getWindowById(windowId.windowId);\n\t\tif (!window?.win) {\n\t\t\tthrow new Error(`Invalid windowId: ${windowId}`);\n\t\t}\n\t\tconst frame = window.win.webContents.mainFrame.framesInSubtree.find(frame => {\n\t\t\treturn frame.name === frameName;\n\t\t});\n\t\tif (!frame) {\n\t\t\tthrow new Error(`Unknown frame: ${frameName}`);\n\t\t}\n\t\treturn frame;\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,aAAa,aAAa,oBAAoB;AACvD,SAAS,eAAe;AACxB,SAAS,kBAAkB;AAC3B,SAAS,oBAAoB,oBAAoB,wBAAwB,sBAAsB,uBAAuB;AACtH,SAAS,+BAA+B;AACxC,SAAS,2BAA2B;AAE7B,IAAM,qBAAN,cAAiC,WAA6C;AAAA,EAOpF,YACuC,oBACrC;AACD,UAAM;AAFgC;AAGtC,SAAK,UAAU,IAAI,wBAAwB,CAAC;AAAA,EAC7C;AAAA,EAxBD,OAYqF;AAAA;AAAA;AAAA,EAInE,kBAAkB,KAAK,UAAU,IAAI,QAA4B,CAAC;AAAA,EAC5E,iBAAiB,KAAK,gBAAgB;AAAA,EAS7C,MAAa,uBAAuB,IAA4C,SAAiC;AAChH,QAAI;AAEJ,QAAI,OAAQ,GAAuB,aAAa,UAAU;AACzD,YAAM,EAAE,SAAS,IAAK;AACtB,YAAM,SAAS,KAAK,mBAAmB,cAAc,QAAQ;AAC7D,UAAI,CAAC,QAAQ,KAAK;AACjB,cAAM,IAAI,MAAM,qBAAqB,QAAQ,EAAE;AAAA,MAChD;AACA,iBAAW,OAAO,IAAI;AAAA,IACvB,OAAO;AACN,YAAM,EAAE,cAAc,IAAK;AAC3B,iBAAW,YAAY,OAAO,aAAa;AAC3C,UAAI,CAAC,UAAU;AACd,cAAM,IAAI,MAAM,0BAA0B,aAAa,EAAE;AAAA,MAC1D;AAAA,IACD;AAEA,QAAI,CAAC,SAAS,YAAY,GAAG;AAC5B,eAAS,uBAAuB,OAAO;AAAA,IACxC;AAAA,EACD;AAAA,EAEA,MAAa,YAAY,UAA2B,WAAmB,MAAc,SAAmE;AACvJ,UAAM,eAAe,KAAK,eAAe,UAAU,SAAS;AAO5D,UAAM,QAAQ;AACd,QAAI,OAAO,MAAM,gBAAgB,YAAY;AAC5C,YAAM,YAAY,MAAM;AAAA,QACvB,UAAU,QAAQ;AAAA,QAClB,SAAS,QAAQ;AAAA,MAClB,CAAC;AACD,YAAM,sBAAsB,wBAAC,GAAY,WAA+B;AACvE,YAAI,OAAO,aAAa;AACvB,eAAK,gBAAgB,KAAK,MAAM;AAChC,gBAAM,eAAe,kBAAkB,mBAAmB;AAAA,QAC3D;AAAA,MACD,GAL4B;AAM5B,YAAM,GAAG,kBAAkB,mBAAmB;AAAA,IAC/C;AAAA,EACD;AAAA,EAEA,MAAa,gBAAgB,UAA2B,WAAmB,SAAqD;AAC/H,UAAM,eAAe,KAAK,eAAe,UAAU,SAAS;AAM5D,UAAM,QAAQ;AACd,QAAI,OAAO,MAAM,oBAAoB,YAAY;AAChD,YAAM,gBAAgB,QAAQ,gBAAgB,kBAAkB,gBAAgB;AAAA,IACjF;AAAA,EACD;AAAA,EAEQ,eAAe,UAA2B,WAAiC;AAClF,UAAM,SAAS,KAAK,mBAAmB,cAAc,SAAS,QAAQ;AACtE,QAAI,CAAC,QAAQ,KAAK;AACjB,YAAM,IAAI,MAAM,qBAAqB,QAAQ,EAAE;AAAA,IAChD;AACA,UAAM,QAAQ,OAAO,IAAI,YAAY,UAAU,gBAAgB,KAAK,CAAAA,WAAS;AAC5E,aAAOA,OAAM,SAAS;AAAA,IACvB,CAAC;AACD,QAAI,CAAC,OAAO;AACX,YAAM,IAAI,MAAM,kBAAkB,SAAS,EAAE;AAAA,IAC9C;AACA,WAAO;AAAA,EACR;AACD;AAvFa,qBAAN;AAAA,EAQJ;AAAA,GARU;",
  "names": ["frame"]
}
