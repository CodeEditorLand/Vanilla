var I=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var F=(a,t,n,o)=>{for(var e=o>1?void 0:o?p(t,n):t,i=a.length-1,r;i>=0;i--)(r=a[i])&&(e=(o?r(t,n,e):r(e))||e);return o&&e&&I(t,n,e),e},f=(a,t)=>(n,o)=>t(n,o,a);import{webContents as c}from"electron";import{Emitter as b}from"../../../base/common/event.js";import{Disposable as u}from"../../../base/common/lifecycle.js";import{WebviewProtocolProvider as W}from"./webviewProtocolProvider.js";import{IWindowsMainService as l}from"../../windows/electron-main/windows.js";let s=class extends u{constructor(n){super();this.windowsMainService=n;this._register(new W)}_onFoundInFrame=this._register(new b);onFoundInFrame=this._onFoundInFrame.event;async setIgnoreMenuShortcuts(n,o){let e;if(typeof n.windowId=="number"){const{windowId:i}=n,r=this.windowsMainService.getWindowById(i);if(!r?.win)throw new Error(`Invalid windowId: ${i}`);e=r.win.webContents}else{const{webContentsId:i}=n;if(e=c.fromId(i),!e)throw new Error(`Invalid webContentsId: ${i}`)}e.isDestroyed()||e.setIgnoreMenuShortcuts(o)}async findInFrame(n,o,e,i){const d=this.getFrameByName(n,o);if(typeof d.findInFrame=="function"){d.findInFrame(e,{findNext:i.findNext,forward:i.forward});const m=(v,w)=>{w.finalUpdate&&(this._onFoundInFrame.fire(w),d.removeListener("found-in-frame",m))};d.on("found-in-frame",m)}}async stopFindInFrame(n,o,e){const r=this.getFrameByName(n,o);typeof r.stopFindInFrame=="function"&&r.stopFindInFrame(e.keepSelection?"keepSelection":"clearSelection")}getFrameByName(n,o){const e=this.windowsMainService.getWindowById(n.windowId);if(!e?.win)throw new Error(`Invalid windowId: ${n}`);const i=e.win.webContents.mainFrame.framesInSubtree.find(r=>r.name===o);if(!i)throw new Error(`Unknown frame: ${o}`);return i}};s=F([f(0,l)],s);export{s as WebviewMainService};
