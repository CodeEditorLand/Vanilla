{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/accessibility/common/accessibility.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from '../../../base/common/event.js';\nimport { RawContextKey } from '../../contextkey/common/contextkey.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\n\nexport const IAccessibilityService = createDecorator<IAccessibilityService>('accessibilityService');\n\nexport interface IAccessibilityService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly onDidChangeScreenReaderOptimized: Event<void>;\n\treadonly onDidChangeReducedMotion: Event<void>;\n\n\talwaysUnderlineAccessKeys(): Promise<boolean>;\n\tisScreenReaderOptimized(): boolean;\n\tisMotionReduced(): boolean;\n\tgetAccessibilitySupport(): AccessibilitySupport;\n\tsetAccessibilitySupport(accessibilitySupport: AccessibilitySupport): void;\n\talert(message: string): void;\n\tstatus(message: string): void;\n}\n\nexport const enum AccessibilitySupport {\n\t/**\n\t * This should be the browser case where it is not known if a screen reader is attached or no.\n\t */\n\tUnknown = 0,\n\n\tDisabled = 1,\n\n\tEnabled = 2\n}\n\nexport const CONTEXT_ACCESSIBILITY_MODE_ENABLED = new RawContextKey<boolean>('accessibilityModeEnabled', false);\n\nexport interface IAccessibilityInformation {\n\tlabel: string;\n\trole?: string;\n}\n\nexport function isAccessibilityInformation(obj: any): obj is IAccessibilityInformation {\n\treturn obj && typeof obj === 'object'\n\t\t&& typeof obj.label === 'string'\n\t\t&& (typeof obj.role === 'undefined' || typeof obj.role === 'string');\n}\n\nexport const ACCESSIBLE_VIEW_SHOWN_STORAGE_PREFIX = 'ACCESSIBLE_VIEW_SHOWN_';\n"],
  "mappings": ";;AAKA,SAAS,aAAa;AACtB,SAAS,qBAAqB;AAC9B,SAAS,uBAAuB;AAEzB,MAAM,wBAAwB,gBAAuC,sBAAsB;AAiB3F,IAAW,uBAAX,kBAAWA,0BAAX;AAIN,EAAAA,4CAAA,aAAU,KAAV;AAEA,EAAAA,4CAAA,cAAW,KAAX;AAEA,EAAAA,4CAAA,aAAU,KAAV;AARiB,SAAAA;AAAA,GAAA;AAWX,MAAM,qCAAqC,IAAI,cAAuB,4BAA4B,KAAK;AAOvG,SAAS,2BAA2B,KAA4C;AACtF,SAAO,OAAO,OAAO,QAAQ,YACzB,OAAO,IAAI,UAAU,aACpB,OAAO,IAAI,SAAS,eAAe,OAAO,IAAI,SAAS;AAC7D;AAJgB;AAMT,MAAM,uCAAuC;",
  "names": ["AccessibilitySupport"]
}
