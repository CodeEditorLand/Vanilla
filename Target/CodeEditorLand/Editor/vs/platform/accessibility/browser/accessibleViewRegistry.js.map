{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/accessibility/browser/accessibleViewRegistry.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IDisposable } from \"../../../base/common/lifecycle.js\";\nimport type { ContextKeyExpression } from \"../../contextkey/common/contextkey.js\";\nimport type { ServicesAccessor } from \"../../instantiation/common/instantiation.js\";\nimport type {\n\tAccessibleContentProvider,\n\tAccessibleViewType,\n\tExtensionContentProvider,\n} from \"./accessibleView.js\";\n\nexport interface IAccessibleViewImplentation {\n\ttype: AccessibleViewType;\n\tpriority: number;\n\tname: string;\n\t/**\n\t * @returns the provider or undefined if the view should not be shown\n\t */\n\tgetProvider: (\n\t\taccessor: ServicesAccessor,\n\t) => AccessibleContentProvider | ExtensionContentProvider | undefined;\n\twhen?: ContextKeyExpression | undefined;\n}\n\nexport const AccessibleViewRegistry = new (class AccessibleViewRegistry {\n\t_implementations: IAccessibleViewImplentation[] = [];\n\n\tregister(implementation: IAccessibleViewImplentation): IDisposable {\n\t\tthis._implementations.push(implementation);\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tconst idx = this._implementations.indexOf(implementation);\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tthis._implementations.splice(idx, 1);\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t}\n\n\tgetImplementations(): IAccessibleViewImplentation[] {\n\t\treturn this._implementations;\n\t}\n})();\n"],
  "mappings": ";;AA2BO,MAAM,yBAAyB,IAAK,MAAMA,wBAAuB;AAAA,EA3BxE,OA2BwE;AAAA;AAAA;AAAA,EACvE,mBAAkD,CAAC;AAAA,EAEnD,SAAS,gBAA0D;AAClE,SAAK,iBAAiB,KAAK,cAAc;AACzC,WAAO;AAAA,MACN,SAAS,6BAAM;AACd,cAAM,MAAM,KAAK,iBAAiB,QAAQ,cAAc;AACxD,YAAI,QAAQ,IAAI;AACf,eAAK,iBAAiB,OAAO,KAAK,CAAC;AAAA,QACpC;AAAA,MACD,GALS;AAAA,IAMV;AAAA,EACD;AAAA,EAEA,qBAAoD;AACnD,WAAO,KAAK;AAAA,EACb;AACD,EAAG;",
  "names": ["AccessibleViewRegistry"]
}
