{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/window/electron-sandbox/window.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getZoomLevel, setZoomFactor, setZoomLevel } from '../../../base/browser/browser.js';\nimport { getActiveWindow, getWindows } from '../../../base/browser/dom.js';\nimport { mainWindow } from '../../../base/browser/window.js';\nimport { ISandboxGlobals, ipcRenderer, webFrame } from '../../../base/parts/sandbox/electron-sandbox/globals.js';\nimport { zoomLevelToZoomFactor } from '../common/window.js';\n\nexport enum ApplyZoomTarget {\n\tACTIVE_WINDOW = 1,\n\tALL_WINDOWS\n}\n\nexport const MAX_ZOOM_LEVEL = 8;\nexport const MIN_ZOOM_LEVEL = -8;\n\n/**\n * Apply a zoom level to the window. Also sets it in our in-memory\n * browser helper so that it can be accessed in non-electron layers.\n */\nexport function applyZoom(zoomLevel: number, target: ApplyZoomTarget | Window): void {\n\tzoomLevel = Math.min(Math.max(zoomLevel, MIN_ZOOM_LEVEL), MAX_ZOOM_LEVEL); // cap zoom levels between -8 and 8\n\n\tconst targetWindows: Window[] = [];\n\tif (target === ApplyZoomTarget.ACTIVE_WINDOW) {\n\t\ttargetWindows.push(getActiveWindow());\n\t} else if (target === ApplyZoomTarget.ALL_WINDOWS) {\n\t\ttargetWindows.push(...Array.from(getWindows()).map(({ window }) => window));\n\t} else {\n\t\ttargetWindows.push(target);\n\t}\n\n\tfor (const targetWindow of targetWindows) {\n\t\tgetGlobals(targetWindow)?.webFrame?.setZoomLevel(zoomLevel);\n\t\tsetZoomFactor(zoomLevelToZoomFactor(zoomLevel), targetWindow);\n\t\tsetZoomLevel(zoomLevel, targetWindow);\n\t}\n}\n\nfunction getGlobals(win: Window): ISandboxGlobals | undefined {\n\tif (win === mainWindow) {\n\t\t// main window\n\t\treturn { ipcRenderer, webFrame };\n\t} else {\n\t\t// auxiliary window\n\t\tconst auxiliaryWindow = win as unknown as { vscode: ISandboxGlobals };\n\t\tif (auxiliaryWindow?.vscode?.ipcRenderer && auxiliaryWindow?.vscode?.webFrame) {\n\t\t\treturn auxiliaryWindow.vscode;\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nexport function zoomIn(target: ApplyZoomTarget | Window): void {\n\tapplyZoom(getZoomLevel(typeof target === 'number' ? getActiveWindow() : target) + 1, target);\n}\n\nexport function zoomOut(target: ApplyZoomTarget | Window): void {\n\tapplyZoom(getZoomLevel(typeof target === 'number' ? getActiveWindow() : target) - 1, target);\n}\n"],
  "mappings": ";;AAKA,SAAS,cAAc,eAAe,oBAAoB;AAC1D,SAAS,iBAAiB,kBAAkB;AAC5C,SAAS,kBAAkB;AAC3B,SAAS,iBAAiB,aAAa,gBAAgB;AACvD,SAAS,6BAA6B;AAE/B,IAAK,kBAAL,kBAAKA,qBAAL;AACN,EAAAA,kCAAA,mBAAgB,KAAhB;AACA,EAAAA,kCAAA;AAFW,SAAAA;AAAA,GAAA;AAKL,MAAM,iBAAiB;AACvB,MAAM,iBAAiB;AAMvB,SAAS,UAAU,WAAmB,QAAwC;AACpF,cAAY,KAAK,IAAI,KAAK,IAAI,WAAW,cAAc,GAAG,cAAc;AAExE,QAAM,gBAA0B,CAAC;AACjC,MAAI,WAAW,uBAA+B;AAC7C,kBAAc,KAAK,gBAAgB,CAAC;AAAA,EACrC,WAAW,WAAW,qBAA6B;AAClD,kBAAc,KAAK,GAAG,MAAM,KAAK,WAAW,CAAC,EAAE,IAAI,CAAC,EAAE,OAAO,MAAM,MAAM,CAAC;AAAA,EAC3E,OAAO;AACN,kBAAc,KAAK,MAAM;AAAA,EAC1B;AAEA,aAAW,gBAAgB,eAAe;AACzC,eAAW,YAAY,GAAG,UAAU,aAAa,SAAS;AAC1D,kBAAc,sBAAsB,SAAS,GAAG,YAAY;AAC5D,iBAAa,WAAW,YAAY;AAAA,EACrC;AACD;AAjBgB;AAmBhB,SAAS,WAAW,KAA0C;AAC7D,MAAI,QAAQ,YAAY;AAEvB,WAAO,EAAE,aAAa,SAAS;AAAA,EAChC,OAAO;AAEN,UAAM,kBAAkB;AACxB,QAAI,iBAAiB,QAAQ,eAAe,iBAAiB,QAAQ,UAAU;AAC9E,aAAO,gBAAgB;AAAA,IACxB;AAAA,EACD;AAEA,SAAO;AACR;AAbS;AAeF,SAAS,OAAO,QAAwC;AAC9D,YAAU,aAAa,OAAO,WAAW,WAAW,gBAAgB,IAAI,MAAM,IAAI,GAAG,MAAM;AAC5F;AAFgB;AAIT,SAAS,QAAQ,QAAwC;AAC/D,YAAU,aAAa,OAAO,WAAW,WAAW,gBAAgB,IAAI,MAAM,IAAI,GAAG,MAAM;AAC5F;AAFgB;",
  "names": ["ApplyZoomTarget"]
}
