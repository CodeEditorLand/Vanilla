{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/externalServices/common/marketplace.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IHeaders } from \"../../../base/parts/request/common/request.js\";\nimport type { IConfigurationService } from \"../../configuration/common/configuration.js\";\nimport type { IEnvironmentService } from \"../../environment/common/environment.js\";\nimport type { IFileService } from \"../../files/common/files.js\";\nimport type { IProductService } from \"../../product/common/productService.js\";\nimport type { IStorageService } from \"../../storage/common/storage.js\";\nimport {\n\ttype ITelemetryService,\n\tTelemetryLevel,\n} from \"../../telemetry/common/telemetry.js\";\nimport {\n\tgetTelemetryLevel,\n\tsupportsTelemetry,\n} from \"../../telemetry/common/telemetryUtils.js\";\nimport { getServiceMachineId } from \"./serviceMachineId.js\";\n\nexport async function resolveMarketplaceHeaders(\n\tversion: string,\n\tproductService: IProductService,\n\tenvironmentService: IEnvironmentService,\n\tconfigurationService: IConfigurationService,\n\tfileService: IFileService,\n\tstorageService: IStorageService | undefined,\n\ttelemetryService: ITelemetryService,\n): Promise<IHeaders> {\n\tconst headers: IHeaders = {\n\t\t\"X-Market-Client-Id\": `VSCode ${version}`,\n\t\t\"User-Agent\": `VSCode ${version} (${productService.nameShort})`,\n\t};\n\n\tif (\n\t\tsupportsTelemetry(productService, environmentService) &&\n\t\tgetTelemetryLevel(configurationService) === TelemetryLevel.USAGE\n\t) {\n\t\tconst serviceMachineId = await getServiceMachineId(\n\t\t\tenvironmentService,\n\t\t\tfileService,\n\t\t\tstorageService,\n\t\t);\n\t\theaders[\"X-Market-User-Id\"] = serviceMachineId;\n\t\t// Send machineId as VSCode-SessionId so we can correlate telemetry events across different services\n\t\t// machineId can be undefined sometimes (eg: when launching from CLI), so send serviceMachineId instead otherwise\n\t\t// Marketplace will reject the request if there is no VSCode-SessionId header\n\t\theaders[\"VSCode-SessionId\"] =\n\t\t\ttelemetryService.machineId || serviceMachineId;\n\t}\n\n\treturn headers;\n}\n"],
  "mappings": ";;AAWA;AAAA,EAEC;AAAA,OACM;AACP;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,2BAA2B;AAEpC,eAAsB,0BACrB,SACA,gBACA,oBACA,sBACA,aACA,gBACA,kBACoB;AACpB,QAAM,UAAoB;AAAA,IACzB,sBAAsB,UAAU,OAAO;AAAA,IACvC,cAAc,UAAU,OAAO,KAAK,eAAe,SAAS;AAAA,EAC7D;AAEA,MACC,kBAAkB,gBAAgB,kBAAkB,KACpD,kBAAkB,oBAAoB,MAAM,eAAe,OAC1D;AACD,UAAM,mBAAmB,MAAM;AAAA,MAC9B;AAAA,MACA;AAAA,MACA;AAAA,IACD;AACA,YAAQ,kBAAkB,IAAI;AAI9B,YAAQ,kBAAkB,IACzB,iBAAiB,aAAa;AAAA,EAChC;AAEA,SAAO;AACR;AAhCsB;",
  "names": []
}
