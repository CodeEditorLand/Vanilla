{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/externalServices/common/serviceMachineId.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from \"../../../base/common/buffer.js\";\nimport { generateUuid, isUUID } from \"../../../base/common/uuid.js\";\nimport type { IEnvironmentService } from \"../../environment/common/environment.js\";\nimport type { IFileService } from \"../../files/common/files.js\";\nimport {\n\ttype IStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../storage/common/storage.js\";\n\nexport async function getServiceMachineId(\n\tenvironmentService: IEnvironmentService,\n\tfileService: IFileService,\n\tstorageService: IStorageService | undefined,\n): Promise<string> {\n\tlet uuid: string | null = storageService\n\t\t? storageService.get(\n\t\t\t\t\"storage.serviceMachineId\",\n\t\t\t\tStorageScope.APPLICATION,\n\t\t\t) || null\n\t\t: null;\n\tif (uuid) {\n\t\treturn uuid;\n\t}\n\ttry {\n\t\tconst contents = await fileService.readFile(\n\t\t\tenvironmentService.serviceMachineIdResource,\n\t\t);\n\t\tconst value = contents.value.toString();\n\t\tuuid = isUUID(value) ? value : null;\n\t} catch (e) {\n\t\tuuid = null;\n\t}\n\n\tif (!uuid) {\n\t\tuuid = generateUuid();\n\t\ttry {\n\t\t\tawait fileService.writeFile(\n\t\t\t\tenvironmentService.serviceMachineIdResource,\n\t\t\t\tVSBuffer.fromString(uuid),\n\t\t\t);\n\t\t} catch (error) {\n\t\t\t//noop\n\t\t}\n\t}\n\n\tstorageService?.store(\n\t\t\"storage.serviceMachineId\",\n\t\tuuid,\n\t\tStorageScope.APPLICATION,\n\t\tStorageTarget.MACHINE,\n\t);\n\n\treturn uuid;\n}\n"],
  "mappings": ";;AAKA,SAAS,gBAAgB;AACzB,SAAS,cAAc,cAAc;AAGrC;AAAA,EAEC;AAAA,EACA;AAAA,OACM;AAEP,eAAsB,oBACrB,oBACA,aACA,gBACkB;AAClB,MAAI,OAAsB,iBACvB,eAAe;AAAA,IACf;AAAA,IACA,aAAa;AAAA,EACd,KAAK,OACJ;AACH,MAAI,MAAM;AACT,WAAO;AAAA,EACR;AACA,MAAI;AACH,UAAM,WAAW,MAAM,YAAY;AAAA,MAClC,mBAAmB;AAAA,IACpB;AACA,UAAM,QAAQ,SAAS,MAAM,SAAS;AACtC,WAAO,OAAO,KAAK,IAAI,QAAQ;AAAA,EAChC,SAAS,GAAG;AACX,WAAO;AAAA,EACR;AAEA,MAAI,CAAC,MAAM;AACV,WAAO,aAAa;AACpB,QAAI;AACH,YAAM,YAAY;AAAA,QACjB,mBAAmB;AAAA,QACnB,SAAS,WAAW,IAAI;AAAA,MACzB;AAAA,IACD,SAAS,OAAO;AAAA,IAEhB;AAAA,EACD;AAEA,kBAAgB;AAAA,IACf;AAAA,IACA;AAAA,IACA,aAAa;AAAA,IACb,cAAc;AAAA,EACf;AAEA,SAAO;AACR;AA5CsB;",
  "names": []
}
