{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/keyboardLayout/common/keyboardMapper.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type {\n\tKeybinding,\n\tResolvedKeybinding,\n} from \"../../../base/common/keybindings.js\";\nimport type { IKeyboardEvent } from \"../../keybinding/common/keybinding.js\";\n\nexport interface IKeyboardMapper {\n\tdumpDebugInfo(): string;\n\tresolveKeyboardEvent(keyboardEvent: IKeyboardEvent): ResolvedKeybinding;\n\tresolveKeybinding(keybinding: Keybinding): ResolvedKeybinding[];\n}\n\nexport class CachedKeyboardMapper implements IKeyboardMapper {\n\tprivate _actual: IKeyboardMapper;\n\tprivate _cache: Map<string, ResolvedKeybinding[]>;\n\n\tconstructor(actual: IKeyboardMapper) {\n\t\tthis._actual = actual;\n\t\tthis._cache = new Map<string, ResolvedKeybinding[]>();\n\t}\n\n\tpublic dumpDebugInfo(): string {\n\t\treturn this._actual.dumpDebugInfo();\n\t}\n\n\tpublic resolveKeyboardEvent(\n\t\tkeyboardEvent: IKeyboardEvent,\n\t): ResolvedKeybinding {\n\t\treturn this._actual.resolveKeyboardEvent(keyboardEvent);\n\t}\n\n\tpublic resolveKeybinding(keybinding: Keybinding): ResolvedKeybinding[] {\n\t\tconst hashCode = keybinding.getHashCode();\n\t\tconst resolved = this._cache.get(hashCode);\n\t\tif (!resolved) {\n\t\t\tconst r = this._actual.resolveKeybinding(keybinding);\n\t\t\tthis._cache.set(hashCode, r);\n\t\t\treturn r;\n\t\t}\n\t\treturn resolved;\n\t}\n}\n"],
  "mappings": ";;AAiBO,MAAM,qBAAgD;AAAA,EAjB7D,OAiB6D;AAAA;AAAA;AAAA,EACpD;AAAA,EACA;AAAA,EAER,YAAY,QAAyB;AACpC,SAAK,UAAU;AACf,SAAK,SAAS,oBAAI,IAAkC;AAAA,EACrD;AAAA,EAEO,gBAAwB;AAC9B,WAAO,KAAK,QAAQ,cAAc;AAAA,EACnC;AAAA,EAEO,qBACN,eACqB;AACrB,WAAO,KAAK,QAAQ,qBAAqB,aAAa;AAAA,EACvD;AAAA,EAEO,kBAAkB,YAA8C;AACtE,UAAM,WAAW,WAAW,YAAY;AACxC,UAAM,WAAW,KAAK,OAAO,IAAI,QAAQ;AACzC,QAAI,CAAC,UAAU;AACd,YAAM,IAAI,KAAK,QAAQ,kBAAkB,UAAU;AACnD,WAAK,OAAO,IAAI,UAAU,CAAC;AAC3B,aAAO;AAAA,IACR;AACA,WAAO;AAAA,EACR;AACD;",
  "names": []
}
