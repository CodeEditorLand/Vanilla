import"../../../../vs/base/common/event.js";import{ScanCode as i,ScanCodeUtils as y}from"../../../../vs/base/common/keyCodes.js";import{createDecorator as u}from"../../../../vs/platform/instantiation/common/instantiation.js";import"../../../../vs/platform/keybinding/common/keybinding.js";import"../../../../vs/platform/keyboardLayout/common/keyboardMapper.js";const b=u("keyboardLayoutService");function M(e,o){return!e||!o?!1:!!(e.name&&o.name&&e.name===o.name||e.id&&o.id&&e.id===o.id||e.model&&o.model&&e.model===o.model&&e.layout===o.layout)}function w(e){if(!e)return{label:"",description:""};if(e.name)return{label:e.text,description:""};if(e.id){const t=e;return t.localizedName?{label:t.localizedName,description:""}:/^com\.apple\.keylayout\./.test(t.id)?{label:t.id.replace(/^com\.apple\.keylayout\./,"").replace(/-/," "),description:""}:/^.*inputmethod\./.test(t.id)?{label:t.id.replace(/^.*inputmethod\./,"").replace(/[-\.]/," "),description:`Input Method (${t.lang})`}:{label:t.lang,description:""}}return{label:e.layout,description:""}}function x(e){return e.name?e.name:e.id?e.id:e.layout}function d(e,o){return!e&&!o?!0:!e||!o?!1:e.vkey===o.vkey&&e.value===o.value&&e.withShift===o.withShift&&e.withAltGr===o.withAltGr&&e.withShiftAltGr===o.withShiftAltGr}function h(e,o){if(!e&&!o)return!0;if(!e||!o)return!1;for(let t=0;t<i.MAX_VALUE;t++){const n=y.toString(t),r=e[n],a=o[n];if(!d(r,a))return!1}return!0}function p(e,o){return!e&&!o?!0:!e||!o?!1:e.value===o.value&&e.withShift===o.withShift&&e.withAltGr===o.withAltGr&&e.withShiftAltGr===o.withShiftAltGr}function m(e,o){if(!e&&!o)return!0;if(!e||!o)return!1;for(let t=0;t<i.MAX_VALUE;t++){const n=y.toString(t),r=e[n],a=o[n];if(!p(r,a))return!1}return!0}export{b as IKeyboardLayoutService,M as areKeyboardLayoutsEqual,x as getKeyboardLayoutId,m as macLinuxKeyboardMappingEquals,w as parseKeyboardLayoutDescription,h as windowsKeyboardMappingEquals};
