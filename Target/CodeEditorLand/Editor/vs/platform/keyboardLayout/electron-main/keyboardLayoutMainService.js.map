{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/keyboardLayout/electron-main/keyboardLayoutMainService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type * as nativeKeymap from 'native-keymap';\nimport * as platform from '../../../base/common/platform.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { IKeyboardLayoutData, INativeKeyboardLayoutService } from '../common/keyboardLayoutService.js';\nimport { ILifecycleMainService, LifecycleMainPhase } from '../../lifecycle/electron-main/lifecycleMainService.js';\n\nexport const IKeyboardLayoutMainService = createDecorator<IKeyboardLayoutMainService>('keyboardLayoutMainService');\n\nexport interface IKeyboardLayoutMainService extends INativeKeyboardLayoutService { }\n\nexport class KeyboardLayoutMainService extends Disposable implements INativeKeyboardLayoutService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidChangeKeyboardLayout = this._register(new Emitter<IKeyboardLayoutData>());\n\treadonly onDidChangeKeyboardLayout = this._onDidChangeKeyboardLayout.event;\n\n\tprivate _initPromise: Promise<void> | null;\n\tprivate _keyboardLayoutData: IKeyboardLayoutData | null;\n\n\tconstructor(\n\t\t@ILifecycleMainService lifecycleMainService: ILifecycleMainService\n\t) {\n\t\tsuper();\n\t\tthis._initPromise = null;\n\t\tthis._keyboardLayoutData = null;\n\n\t\t// perf: automatically trigger initialize after windows\n\t\t// have opened so that we can do this work in parallel\n\t\t// to the window load.\n\t\tlifecycleMainService.when(LifecycleMainPhase.AfterWindowOpen).then(() => this._initialize());\n\t}\n\n\tprivate _initialize(): Promise<void> {\n\t\tif (!this._initPromise) {\n\t\t\tthis._initPromise = this._doInitialize();\n\t\t}\n\t\treturn this._initPromise;\n\t}\n\n\tprivate async _doInitialize(): Promise<void> {\n\t\tconst nativeKeymapMod = await import('native-keymap');\n\n\t\tthis._keyboardLayoutData = readKeyboardLayoutData(nativeKeymapMod);\n\t\tif (!platform.isCI) {\n\t\t\t// See https://github.com/microsoft/vscode/issues/152840\n\t\t\t// Do not register the keyboard layout change listener in CI because it doesn't work\n\t\t\t// on the build machines and it just adds noise to the build logs.\n\t\t\tnativeKeymapMod.onDidChangeKeyboardLayout(() => {\n\t\t\t\tthis._keyboardLayoutData = readKeyboardLayoutData(nativeKeymapMod);\n\t\t\t\tthis._onDidChangeKeyboardLayout.fire(this._keyboardLayoutData);\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic async getKeyboardLayoutData(): Promise<IKeyboardLayoutData> {\n\t\tawait this._initialize();\n\t\treturn this._keyboardLayoutData!;\n\t}\n}\n\nfunction readKeyboardLayoutData(nativeKeymapMod: typeof nativeKeymap): IKeyboardLayoutData {\n\tconst keyboardMapping = nativeKeymapMod.getKeyMap();\n\tconst keyboardLayoutInfo = nativeKeymapMod.getCurrentKeyboardLayout();\n\treturn { keyboardMapping, keyboardLayoutInfo };\n}\n"],
  "mappings": ";;;;;;;;;;;;AAMA,YAAY,cAAc;AAC1B,SAAS,eAAe;AACxB,SAAS,kBAAkB;AAC3B,SAAS,uBAAuB;AAChC,SAAS,qBAAqB,oCAAoC;AAClE,SAAS,uBAAuB,0BAA0B;AAEnD,MAAM,6BAA6B,gBAA4C,2BAA2B;AAI1G,IAAM,4BAAN,cAAwC,WAAmD;AAAA,EAjBlG,OAiBkG;AAAA;AAAA;AAAA,EAIhF,6BAA6B,KAAK,UAAU,IAAI,QAA6B,CAAC;AAAA,EACtF,4BAA4B,KAAK,2BAA2B;AAAA,EAE7D;AAAA,EACA;AAAA,EAER,YACwB,sBACtB;AACD,UAAM;AACN,SAAK,eAAe;AACpB,SAAK,sBAAsB;AAK3B,yBAAqB,KAAK,mBAAmB,eAAe,EAAE,KAAK,MAAM,KAAK,YAAY,CAAC;AAAA,EAC5F;AAAA,EAEQ,cAA6B;AACpC,QAAI,CAAC,KAAK,cAAc;AACvB,WAAK,eAAe,KAAK,cAAc;AAAA,IACxC;AACA,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,MAAc,gBAA+B;AAC5C,UAAM,kBAAkB,MAAM,OAAO,eAAe;AAEpD,SAAK,sBAAsB,uBAAuB,eAAe;AACjE,QAAI,CAAC,SAAS,MAAM;AAInB,sBAAgB,0BAA0B,MAAM;AAC/C,aAAK,sBAAsB,uBAAuB,eAAe;AACjE,aAAK,2BAA2B,KAAK,KAAK,mBAAmB;AAAA,MAC9D,CAAC;AAAA,IACF;AAAA,EACD;AAAA,EAEA,MAAa,wBAAsD;AAClE,UAAM,KAAK,YAAY;AACvB,WAAO,KAAK;AAAA,EACb;AACD;AAjDa,4BAAN;AAAA,EAWJ;AAAA,GAXU;AAmDb,SAAS,uBAAuB,iBAA2D;AAC1F,QAAM,kBAAkB,gBAAgB,UAAU;AAClD,QAAM,qBAAqB,gBAAgB,yBAAyB;AACpE,SAAO,EAAE,iBAAiB,mBAAmB;AAC9C;AAJS;",
  "names": []
}
