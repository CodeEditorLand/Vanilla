{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/extensionManagement/common/implicitActivationEvents.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from \"../../../base/common/errors.js\";\nimport {\n\tExtensionIdentifier,\n\ttype IExtensionDescription,\n} from \"../../extensions/common/extensions.js\";\n\nexport interface IActivationEventsGenerator<T> {\n\t(contributions: T[], result: { push(item: string): void }): void;\n}\n\nexport class ImplicitActivationEventsImpl {\n\tprivate readonly _generators = new Map<\n\t\tstring,\n\t\tIActivationEventsGenerator<any>\n\t>();\n\tprivate readonly _cache = new WeakMap<IExtensionDescription, string[]>();\n\n\tpublic register<T>(\n\t\textensionPointName: string,\n\t\tgenerator: IActivationEventsGenerator<T>,\n\t): void {\n\t\tthis._generators.set(extensionPointName, generator);\n\t}\n\n\t/**\n\t * This can run correctly only on the renderer process because that is the only place\n\t * where all extension points and all implicit activation events generators are known.\n\t */\n\tpublic readActivationEvents(\n\t\textensionDescription: IExtensionDescription,\n\t): string[] {\n\t\tif (!this._cache.has(extensionDescription)) {\n\t\t\tthis._cache.set(\n\t\t\t\textensionDescription,\n\t\t\t\tthis._readActivationEvents(extensionDescription),\n\t\t\t);\n\t\t}\n\t\treturn this._cache.get(extensionDescription)!;\n\t}\n\n\t/**\n\t * This can run correctly only on the renderer process because that is the only place\n\t * where all extension points and all implicit activation events generators are known.\n\t */\n\tpublic createActivationEventsMap(\n\t\textensionDescriptions: IExtensionDescription[],\n\t): { [extensionId: string]: string[] } {\n\t\tconst result: { [extensionId: string]: string[] } = Object.create(null);\n\t\tfor (const extensionDescription of extensionDescriptions) {\n\t\t\tconst activationEvents =\n\t\t\t\tthis.readActivationEvents(extensionDescription);\n\t\t\tif (activationEvents.length > 0) {\n\t\t\t\tresult[\n\t\t\t\t\tExtensionIdentifier.toKey(extensionDescription.identifier)\n\t\t\t\t] = activationEvents;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate _readActivationEvents(desc: IExtensionDescription): string[] {\n\t\tif (\n\t\t\ttypeof desc.main === \"undefined\" &&\n\t\t\ttypeof desc.browser === \"undefined\"\n\t\t) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst activationEvents: string[] = Array.isArray(desc.activationEvents)\n\t\t\t? desc.activationEvents.slice(0)\n\t\t\t: [];\n\n\t\tfor (let i = 0; i < activationEvents.length; i++) {\n\t\t\t// TODO@joao: there's no easy way to contribute this\n\t\t\tif (activationEvents[i] === \"onUri\") {\n\t\t\t\tactivationEvents[i] =\n\t\t\t\t\t`onUri:${ExtensionIdentifier.toKey(desc.identifier)}`;\n\t\t\t}\n\t\t}\n\n\t\tif (!desc.contributes) {\n\t\t\t// no implicit activation events\n\t\t\treturn activationEvents;\n\t\t}\n\n\t\tfor (const extPointName in desc.contributes) {\n\t\t\tconst generator = this._generators.get(extPointName);\n\t\t\tif (!generator) {\n\t\t\t\t// There's no generator for this extension point\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst contrib = (desc.contributes as any)[extPointName];\n\t\t\tconst contribArr = Array.isArray(contrib) ? contrib : [contrib];\n\t\t\ttry {\n\t\t\t\tgenerator(contribArr, activationEvents);\n\t\t\t} catch (err) {\n\t\t\t\tonUnexpectedError(err);\n\t\t\t}\n\t\t}\n\n\t\treturn activationEvents;\n\t}\n}\n\nexport const ImplicitActivationEvents: ImplicitActivationEventsImpl =\n\tnew ImplicitActivationEventsImpl();\n"],
  "mappings": ";;AAKA,SAAS,yBAAyB;AAClC;AAAA,EACC;AAAA,OAEM;AAMA,MAAM,6BAA6B;AAAA,EAf1C,OAe0C;AAAA;AAAA;AAAA,EACxB,cAAc,oBAAI,IAGjC;AAAA,EACe,SAAS,oBAAI,QAAyC;AAAA,EAEhE,SACN,oBACA,WACO;AACP,SAAK,YAAY,IAAI,oBAAoB,SAAS;AAAA,EACnD;AAAA;AAAA;AAAA;AAAA;AAAA,EAMO,qBACN,sBACW;AACX,QAAI,CAAC,KAAK,OAAO,IAAI,oBAAoB,GAAG;AAC3C,WAAK,OAAO;AAAA,QACX;AAAA,QACA,KAAK,sBAAsB,oBAAoB;AAAA,MAChD;AAAA,IACD;AACA,WAAO,KAAK,OAAO,IAAI,oBAAoB;AAAA,EAC5C;AAAA;AAAA;AAAA;AAAA;AAAA,EAMO,0BACN,uBACsC;AACtC,UAAM,SAA8C,uBAAO,OAAO,IAAI;AACtE,eAAW,wBAAwB,uBAAuB;AACzD,YAAM,mBACL,KAAK,qBAAqB,oBAAoB;AAC/C,UAAI,iBAAiB,SAAS,GAAG;AAChC,eACC,oBAAoB,MAAM,qBAAqB,UAAU,CAC1D,IAAI;AAAA,MACL;AAAA,IACD;AACA,WAAO;AAAA,EACR;AAAA,EAEQ,sBAAsB,MAAuC;AACpE,QACC,OAAO,KAAK,SAAS,eACrB,OAAO,KAAK,YAAY,aACvB;AACD,aAAO,CAAC;AAAA,IACT;AAEA,UAAM,mBAA6B,MAAM,QAAQ,KAAK,gBAAgB,IACnE,KAAK,iBAAiB,MAAM,CAAC,IAC7B,CAAC;AAEJ,aAAS,IAAI,GAAG,IAAI,iBAAiB,QAAQ,KAAK;AAEjD,UAAI,iBAAiB,CAAC,MAAM,SAAS;AACpC,yBAAiB,CAAC,IACjB,SAAS,oBAAoB,MAAM,KAAK,UAAU,CAAC;AAAA,MACrD;AAAA,IACD;AAEA,QAAI,CAAC,KAAK,aAAa;AAEtB,aAAO;AAAA,IACR;AAEA,eAAW,gBAAgB,KAAK,aAAa;AAC5C,YAAM,YAAY,KAAK,YAAY,IAAI,YAAY;AACnD,UAAI,CAAC,WAAW;AAEf;AAAA,MACD;AACA,YAAM,UAAW,KAAK,YAAoB,YAAY;AACtD,YAAM,aAAa,MAAM,QAAQ,OAAO,IAAI,UAAU,CAAC,OAAO;AAC9D,UAAI;AACH,kBAAU,YAAY,gBAAgB;AAAA,MACvC,SAAS,KAAK;AACb,0BAAkB,GAAG;AAAA,MACtB;AAAA,IACD;AAEA,WAAO;AAAA,EACR;AACD;AAEO,MAAM,2BACZ,IAAI,6BAA6B;",
  "names": []
}
