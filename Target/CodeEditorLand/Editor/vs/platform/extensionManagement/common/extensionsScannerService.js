var Q=Object.defineProperty;var X=Object.getOwnPropertyDescriptor;var b=(p,c,e,n)=>{for(var t=n>1?void 0:n?X(c,e):c,i=p.length-1,s;i>=0;i--)(s=p[i])&&(t=(n?s(c,e,t):s(t))||t);return n&&t&&Q(c,e,t),t},u=(p,c)=>(e,n)=>c(e,n,p);import{coalesce as D}from"../../../../vs/base/common/arrays.js";import{ThrottledDelayer as Y}from"../../../../vs/base/common/async.js";import{VSBuffer as M}from"../../../../vs/base/common/buffer.js";import"../../../../vs/base/common/collections.js";import{getErrorMessage as w}from"../../../../vs/base/common/errors.js";import{Emitter as j}from"../../../../vs/base/common/event.js";import{getNodeType as R,parse as U}from"../../../../vs/base/common/json.js";import{getParseErrorMessage as C}from"../../../../vs/base/common/jsonErrorMessages.js";import{Disposable as k}from"../../../../vs/base/common/lifecycle.js";import{revive as Z}from"../../../../vs/base/common/marshalling.js";import{FileAccess as ee,Schemas as ne}from"../../../../vs/base/common/network.js";import*as z from"../../../../vs/base/common/objects.js";import*as O from"../../../../vs/base/common/path.js";import*as F from"../../../../vs/base/common/platform.js";import{basename as te,isEqual as A,joinPath as m}from"../../../../vs/base/common/resources.js";import*as $ from"vs/base/common/semver/semver";import ie from"../../../../vs/base/common/severity.js";import{isEmptyObject as se}from"../../../../vs/base/common/types.js";import{URI as E}from"../../../../vs/base/common/uri.js";import{localize as v}from"../../../../vs/nls.js";import{IEnvironmentService as T}from"../../../../vs/platform/environment/common/environment.js";import"../../../../vs/platform/extensionManagement/common/extensionManagement.js";import{areSameExtensions as re,computeTargetPlatform as ae,ExtensionKey as oe,getExtensionId as le,getGalleryExtensionId as ce}from"../../../../vs/platform/extensionManagement/common/extensionManagementUtil.js";import{localizeManifest as de}from"../../../../vs/platform/extensionManagement/common/extensionNls.js";import{ExtensionsProfileScanningError as J,ExtensionsProfileScanningErrorCode as q,IExtensionsProfileScannerService as _}from"../../../../vs/platform/extensionManagement/common/extensionsProfileScannerService.js";import{BUILTIN_MANIFEST_CACHE_FILE as ue,ExtensionIdentifier as fe,ExtensionIdentifierMap as pe,ExtensionType as f,parseEnabledApiProposalNames as Se,TargetPlatform as he,UNDEFINED_PUBLISHER as me,USER_MANIFEST_CACHE_FILE as ve}from"../../../../vs/platform/extensions/common/extensions.js";import{validateExtensionManifest as xe}from"../../../../vs/platform/extensions/common/extensionValidator.js";import{FileOperationResult as W,IFileService as N,toFileOperationResult as H}from"../../../../vs/platform/files/common/files.js";import{createDecorator as ge,IInstantiationService as Ee}from"../../../../vs/platform/instantiation/common/instantiation.js";import{ILogService as L}from"../../../../vs/platform/log/common/log.js";import{IProductService as V}from"../../../../vs/platform/product/common/productService.js";import{IUriIdentityService as B}from"../../../../vs/platform/uriIdentity/common/uriIdentity.js";import{IUserDataProfilesService as K}from"../../../../vs/platform/userDataProfile/common/userDataProfile.js";var G;(c=>{function p(e,n){if(e===n)return!0;const t=Object.keys(e),i=new Set;for(const s of Object.keys(n))i.add(s);if(t.length!==i.size)return!1;for(const s of t){if(e[s]!==n[s])return!1;i.delete(s)}return i.size===0}c.equals=p})(G||={});const un=ge("IExtensionsScannerService");let I=class extends k{constructor(e,n,t,i,s,a,o,r,l,d,S,h){super();this.systemExtensionsLocation=e;this.userExtensionsLocation=n;this.extensionsControlLocation=t;this.currentProfile=i;this.userDataProfilesService=s;this.extensionsProfileScannerService=a;this.fileService=o;this.logService=r;this.environmentService=l;this.productService=d;this.uriIdentityService=S;this.instantiationService=h;this._register(this.systemExtensionsCachedScanner.onDidChangeCache(()=>this._onDidChangeCache.fire(f.System))),this._register(this.userExtensionsCachedScanner.onDidChangeCache(()=>this._onDidChangeCache.fire(f.User)))}_serviceBrand;_onDidChangeCache=this._register(new j);onDidChangeCache=this._onDidChangeCache.event;obsoleteFile=m(this.userExtensionsLocation,".obsolete");systemExtensionsCachedScanner=this._register(this.instantiationService.createInstance(g,this.currentProfile,this.obsoleteFile));userExtensionsCachedScanner=this._register(this.instantiationService.createInstance(g,this.currentProfile,this.obsoleteFile));extensionsScanner=this._register(this.instantiationService.createInstance(x,this.obsoleteFile));_targetPlatformPromise;getTargetPlatform(){return this._targetPlatformPromise||(this._targetPlatformPromise=ae(this.fileService,this.logService)),this._targetPlatformPromise}async scanAllExtensions(e,n,t){const[i,s]=await Promise.all([this.scanSystemExtensions(e),this.scanUserExtensions(n)]),a=t?await this.scanExtensionsUnderDevelopment(e,[...i,...s]):[];return this.dedupExtensions(i,s,a,await this.getTargetPlatform(),!0)}async scanSystemExtensions(e){const n=[];n.push(this.scanDefaultSystemExtensions(!!e.useCache,e.language)),n.push(this.scanDevSystemExtensions(e.language,!!e.checkControlFile));const[t,i]=await Promise.all(n);return this.applyScanOptions([...t,...i],f.System,e,!1)}async scanUserExtensions(e){const n=e.profileLocation??this.userExtensionsLocation;this.logService.trace("Started scanning user extensions",n);const t=this.uriIdentityService.extUri.isEqual(e.profileLocation,this.userDataProfilesService.defaultProfile.extensionsResource)?{bailOutWhenFileNotFound:!0}:void 0,i=await this.createExtensionScannerInput(n,!!e.profileLocation,f.User,!e.includeUninstalled,e.language,!0,t,e.productVersion??this.getProductVersion()),s=e.useCache&&!i.devMode&&i.excludeObsolete?this.userExtensionsCachedScanner:this.extensionsScanner;let a;try{a=await s.scanExtensions(i)}catch(o){if(o instanceof J&&o.code===q.ERROR_PROFILE_NOT_FOUND)await this.doInitializeDefaultProfileExtensions(),a=await s.scanExtensions(i);else throw o}return a=await this.applyScanOptions(a,f.User,e,!0),this.logService.trace("Scanned user extensions:",a.length),a}async scanExtensionsUnderDevelopment(e,n){if(this.environmentService.isExtensionDevelopment&&this.environmentService.extensionDevelopmentLocationURI){const t=(await Promise.all(this.environmentService.extensionDevelopmentLocationURI.filter(i=>i.scheme===ne.file).map(async i=>{const s=await this.createExtensionScannerInput(i,!1,f.User,!0,e.language,!1,void 0,e.productVersion??this.getProductVersion());return(await this.extensionsScanner.scanOneOrMultipleExtensions(s)).map(o=>(o.type=n.find(r=>re(r.identifier,o.identifier))?.type??o.type,this.extensionsScanner.validate(o,s)))}))).flat();return this.applyScanOptions(t,"development",e,!0)}return[]}async scanExistingExtension(e,n,t){const i=await this.createExtensionScannerInput(e,!1,n,!0,t.language,!0,void 0,t.productVersion??this.getProductVersion()),s=await this.extensionsScanner.scanExtension(i);return!s||!t.includeInvalid&&!s.isValid?null:s}async scanOneOrMultipleExtensions(e,n,t){const i=await this.createExtensionScannerInput(e,!1,n,!0,t.language,!0,void 0,t.productVersion??this.getProductVersion()),s=await this.extensionsScanner.scanOneOrMultipleExtensions(i);return this.applyScanOptions(s,n,t,!0)}async scanMultipleExtensions(e,n,t){const i=[];return await Promise.all(e.map(async s=>{const a=await this.scanOneOrMultipleExtensions(s,n,t);i.push(...a)})),this.applyScanOptions(i,n,t,!0)}async scanMetadata(e){const n=m(e,"package.json"),t=(await this.fileService.readFile(n)).value.toString();return JSON.parse(t).__metadata}async updateMetadata(e,n){const t=m(e,"package.json"),i=(await this.fileService.readFile(t)).value.toString(),s=JSON.parse(i);n.isMachineScoped===!1&&delete n.isMachineScoped,n.isBuiltin===!1&&delete n.isBuiltin,s.__metadata={...s.__metadata,...n},await this.fileService.writeFile(m(e,"package.json"),M.fromString(JSON.stringify(s,null,"	")))}async initializeDefaultProfileExtensions(){try{await this.extensionsProfileScannerService.scanProfileExtensions(this.userDataProfilesService.defaultProfile.extensionsResource,{bailOutWhenFileNotFound:!0})}catch(e){if(e instanceof J&&e.code===q.ERROR_PROFILE_NOT_FOUND)await this.doInitializeDefaultProfileExtensions();else throw e}}initializeDefaultProfileExtensionsPromise=void 0;async doInitializeDefaultProfileExtensions(){return this.initializeDefaultProfileExtensionsPromise||(this.initializeDefaultProfileExtensionsPromise=(async()=>{try{this.logService.info("Started initializing default profile extensions in extensions installation folder.",this.userExtensionsLocation.toString());const e=await this.scanUserExtensions({includeInvalid:!0});if(e.length)await this.extensionsProfileScannerService.addExtensionsToProfile(e.map(n=>[n,n.metadata]),this.userDataProfilesService.defaultProfile.extensionsResource);else try{await this.fileService.createFile(this.userDataProfilesService.defaultProfile.extensionsResource,M.fromString(JSON.stringify([])))}catch(n){H(n)!==W.FILE_NOT_FOUND&&this.logService.warn("Failed to create default profile extensions manifest in extensions installation folder.",this.userExtensionsLocation.toString(),w(n))}this.logService.info("Completed initializing default profile extensions in extensions installation folder.",this.userExtensionsLocation.toString())}catch(e){this.logService.error(e)}finally{this.initializeDefaultProfileExtensionsPromise=void 0}})()),this.initializeDefaultProfileExtensionsPromise}async applyScanOptions(e,n,t,i){return t.includeAllVersions||(e=this.dedupExtensions(n===f.System?e:void 0,n===f.User?e:void 0,n==="development"?e:void 0,await this.getTargetPlatform(),i)),t.includeInvalid||(e=e.filter(s=>s.isValid)),e.sort((s,a)=>{const o=O.basename(s.location.fsPath),r=O.basename(a.location.fsPath);return o<r?-1:o>r?1:0})}dedupExtensions(e,n,t,i,s){const a=(r,l,d)=>{if(r.isValid&&!l.isValid)return!1;if(r.isValid===l.isValid){if(s&&$.gt(r.manifest.version,l.manifest.version))return this.logService.debug(`Skipping extension ${l.location.path} with lower version ${l.manifest.version} in favour of ${r.location.path} with version ${r.manifest.version}`),!1;if($.eq(r.manifest.version,l.manifest.version)){if(r.type===f.System)return this.logService.debug(`Skipping extension ${l.location.path} in favour of system extension ${r.location.path} with same version`),!1;if(r.targetPlatform===i)return this.logService.debug(`Skipping extension ${l.location.path} from different target platform ${l.targetPlatform}`),!1}}return d?this.logService.warn(`Overwriting user extension ${r.location.path} with ${l.location.path}.`):this.logService.debug(`Overwriting user extension ${r.location.path} with ${l.location.path}.`),!0},o=new pe;return e?.forEach(r=>{const l=o.get(r.identifier.id);(!l||a(l,r,!1))&&o.set(r.identifier.id,r)}),n?.forEach(r=>{const l=o.get(r.identifier.id);if(!l&&e&&r.type===f.System){this.logService.debug(`Skipping obsolete system extension ${r.location.path}.`);return}(!l||a(l,r,!1))&&o.set(r.identifier.id,r)}),t?.forEach(r=>{const l=o.get(r.identifier.id);(!l||a(l,r,!0))&&o.set(r.identifier.id,r),o.set(r.identifier.id,r)}),[...o.values()]}async scanDefaultSystemExtensions(e,n){this.logService.trace("Started scanning system extensions");const t=await this.createExtensionScannerInput(this.systemExtensionsLocation,!1,f.System,!0,n,!0,void 0,this.getProductVersion()),s=await(e&&!t.devMode?this.systemExtensionsCachedScanner:this.extensionsScanner).scanExtensions(t);return this.logService.trace("Scanned system extensions:",s.length),s}async scanDevSystemExtensions(e,n){const t=this.environmentService.isBuilt?[]:this.productService.builtInExtensions;if(!t?.length)return[];this.logService.trace("Started scanning dev system extensions");const i=n?await this.getBuiltInExtensionControl():{},s=[],a=E.file(O.normalize(O.join(ee.asFileUri("").fsPath,"..",".build","builtInExtensions")));for(const r of t){const l=i[r.name]||"marketplace";switch(l){case"disabled":break;case"marketplace":s.push(m(a,r.name));break;default:s.push(E.file(l));break}}const o=await Promise.all(s.map(async r=>this.extensionsScanner.scanExtension(await this.createExtensionScannerInput(r,!1,f.System,!0,e,!0,void 0,this.getProductVersion()))));return this.logService.trace("Scanned dev system extensions:",o.length),D(o)}async getBuiltInExtensionControl(){try{const e=await this.fileService.readFile(this.extensionsControlLocation);return JSON.parse(e.value.toString())}catch{return{}}}async createExtensionScannerInput(e,n,t,i,s,a,o,r){const l=await this.getTranslations(s??F.language),d=await this.getMtime(e),S=n&&!this.uriIdentityService.extUri.isEqual(e,this.userDataProfilesService.defaultProfile.extensionsResource)?this.userDataProfilesService.defaultProfile.extensionsResource:void 0,h=S?await this.getMtime(S):void 0;return new y(e,d,S,h,n,o,t,i,a,r.version,r.date,this.productService.commit,!this.environmentService.isBuilt,s,l)}async getMtime(e){try{const n=await this.fileService.stat(e);if(typeof n.mtime=="number")return n.mtime}catch{}}getProductVersion(){return{version:this.productService.version,date:this.productService.date}}};I=b([u(4,K),u(5,_),u(6,N),u(7,L),u(8,T),u(9,V),u(10,B),u(11,Ee)],I);class y{constructor(c,e,n,t,i,s,a,o,r,l,d,S,h,P,Ie){this.location=c;this.mtime=e;this.applicationExtensionslocation=n;this.applicationExtensionslocationMtime=t;this.profile=i;this.profileScanOptions=s;this.type=a;this.excludeObsolete=o;this.validate=r;this.productVersion=l;this.productDate=d;this.productCommit=S;this.devMode=h;this.language=P;this.translations=Ie}static createNlsConfiguration(c){return{language:c.language,pseudo:c.language==="pseudo",devMode:c.devMode,translations:c.translations}}static equals(c,e){return A(c.location,e.location)&&c.mtime===e.mtime&&A(c.applicationExtensionslocation,e.applicationExtensionslocation)&&c.applicationExtensionslocationMtime===e.applicationExtensionslocationMtime&&c.profile===e.profile&&z.equals(c.profileScanOptions,e.profileScanOptions)&&c.type===e.type&&c.excludeObsolete===e.excludeObsolete&&c.validate===e.validate&&c.productVersion===e.productVersion&&c.productDate===e.productDate&&c.productCommit===e.productCommit&&c.devMode===e.devMode&&c.language===e.language&&G.equals(c.translations,e.translations)}}let x=class extends k{constructor(e,n,t,i,s,a,o){super();this.obsoleteFile=e;this.extensionsProfileScannerService=n;this.uriIdentityService=t;this.fileService=i;this.environmentService=a;this.logService=o;this.extensionsEnabledWithApiProposalVersion=s.extensionsEnabledWithApiProposalVersion?.map(r=>r.toLowerCase())??[]}extensionsEnabledWithApiProposalVersion;async scanExtensions(e){const n=e.profile?await this.scanExtensionsFromProfile(e):await this.scanExtensionsFromLocation(e);let t={};if(e.excludeObsolete&&e.type===f.User)try{const i=(await this.fileService.readFile(this.obsoleteFile)).value.toString();t=JSON.parse(i)}catch{}return se(t)?n:n.filter(i=>!t[oe.create(i).toString()])}async scanExtensionsFromLocation(e){const n=await this.fileService.resolve(e.location);if(!n.children?.length)return[];const t=await Promise.all(n.children.map(async i=>{if(!i.isDirectory||e.type===f.User&&te(i.resource).indexOf(".")===0)return null;const s=new y(i.resource,e.mtime,e.applicationExtensionslocation,e.applicationExtensionslocationMtime,e.profile,e.profileScanOptions,e.type,e.excludeObsolete,e.validate,e.productVersion,e.productDate,e.productCommit,e.devMode,e.language,e.translations);return this.scanExtension(s)}));return D(t).sort((i,s)=>i.location.path<s.location.path?-1:1)}async scanExtensionsFromProfile(e){let n=await this.scanExtensionsFromProfileResource(e.location,()=>!0,e);if(e.applicationExtensionslocation&&!this.uriIdentityService.extUri.isEqual(e.location,e.applicationExtensionslocation)){n=n.filter(i=>!i.metadata?.isApplicationScoped);const t=await this.scanExtensionsFromProfileResource(e.applicationExtensionslocation,i=>!!i.metadata?.isBuiltin||!!i.metadata?.isApplicationScoped,e);n.push(...t)}return n}async scanExtensionsFromProfileResource(e,n,t){const i=await this.extensionsProfileScannerService.scanProfileExtensions(e,t.profileScanOptions);if(!i.length)return[];const s=await Promise.all(i.map(async a=>{if(n(a)){const o=new y(a.location,t.mtime,t.applicationExtensionslocation,t.applicationExtensionslocationMtime,t.profile,t.profileScanOptions,t.type,t.excludeObsolete,t.validate,t.productVersion,t.productDate,t.productCommit,t.devMode,t.language,t.translations);return this.scanExtension(o,a.metadata)}return null}));return D(s)}async scanOneOrMultipleExtensions(e){try{if(await this.fileService.exists(m(e.location,"package.json"))){const n=await this.scanExtension(e);return n?[n]:[]}else return await this.scanExtensions(e)}catch(n){return this.logService.error(`Error scanning extensions at ${e.location.path}:`,w(n)),[]}}async scanExtension(e,n){try{let t=await this.scanExtensionManifest(e.location);if(t){t.publisher||(t.publisher=me),n=n??t.__metadata,delete t.__metadata;const i=ce(t.publisher,t.name),s=n?.id?{id:i,uuid:n.id}:{id:i},a=n?.isSystem?f.System:e.type,o=a===f.System||!!n?.isBuiltin;t=await this.translateManifest(e.location,t,y.createNlsConfiguration(e));let r={type:a,identifier:s,manifest:t,location:e.location,isBuiltin:o,targetPlatform:n?.targetPlatform??he.UNDEFINED,publisherDisplayName:n?.publisherDisplayName,metadata:n,isValid:!0,validations:[]};return e.validate&&(r=this.validate(r,e)),t.enabledApiProposals&&(!this.environmentService.isBuilt||this.extensionsEnabledWithApiProposalVersion.includes(i.toLowerCase()))&&(t.originalEnabledApiProposals=t.enabledApiProposals,t.enabledApiProposals=Se([...t.enabledApiProposals])),r}}catch(t){e.type!==f.System&&this.logService.error(t)}return null}validate(e,n){let t=!0;const i=this.environmentService.isBuilt&&this.extensionsEnabledWithApiProposalVersion.includes(e.identifier.id.toLowerCase()),s=xe(n.productVersion,n.productDate,n.location,e.manifest,e.isBuiltin,i);for(const[a,o]of s)a===ie.Error&&(t=!1,this.logService.error(this.formatMessage(n.location,o)));return e.isValid=t,e.validations=s,e}async scanExtensionManifest(e){const n=m(e,"package.json");let t;try{t=(await this.fileService.readFile(n)).value.toString()}catch(s){return H(s)!==W.FILE_NOT_FOUND&&this.logService.error(this.formatMessage(e,v("fileReadFail","Cannot read file {0}: {1}.",n.path,s.message))),null}let i;try{i=JSON.parse(t)}catch{const a=[];U(t,a);for(const o of a)this.logService.error(this.formatMessage(e,v("jsonParseFail","Failed to parse {0}: [{1}, {2}] {3}.",n.path,o.offset,o.length,C(o.error))));return null}return R(i)!=="object"?(this.logService.error(this.formatMessage(e,v("jsonParseInvalidType","Invalid manifest file {0}: Not a JSON object.",n.path))),null):i}async translateManifest(e,n,t){const i=await this.getLocalizedMessages(e,n,t);if(i)try{const s=[],a=await this.resolveOriginalMessageBundle(i.default,s);if(s.length>0)return s.forEach(r=>{this.logService.error(this.formatMessage(e,v("jsonsParseReportErrors","Failed to parse {0}: {1}.",i.default?.path,C(r.error))))}),n;if(R(i)!=="object")return this.logService.error(this.formatMessage(e,v("jsonInvalidFormat","Invalid format {0}: JSON object expected.",i.default?.path))),n;const o=i.values||Object.create(null);return de(this.logService,n,o,a)}catch{}return n}async getLocalizedMessages(e,n,t){const i=m(e,"package.nls.json"),s=(l,d)=>{d.forEach(S=>{this.logService.error(this.formatMessage(e,v("jsonsParseReportErrors","Failed to parse {0}: {1}.",l?.path,C(S.error))))})},a=l=>{this.logService.error(this.formatMessage(e,v("jsonInvalidFormat","Invalid format {0}: JSON object expected.",l?.path)))},o=`${n.publisher}.${n.name}`,r=t.translations[o];if(r)try{const l=E.file(r),d=(await this.fileService.readFile(l)).value.toString(),S=[],h=U(d,S);return S.length>0?(s(l,S),{values:void 0,default:i}):R(h)!=="object"?(a(l),{values:void 0,default:i}):{values:h.contents?h.contents.package:void 0,default:i}}catch{return{values:void 0,default:i}}else{if(!await this.fileService.exists(i))return;let d;try{d=await this.findMessageBundles(e,t)}catch{return}if(!d.localized)return{values:void 0,default:d.original};try{const S=(await this.fileService.readFile(d.localized)).value.toString(),h=[],P=U(S,h);return h.length>0?(s(d.localized,h),{values:void 0,default:d.original}):R(P)!=="object"?(a(d.localized),{values:void 0,default:d.original}):{values:P,default:d.original}}catch{return{values:void 0,default:d.original}}}}async resolveOriginalMessageBundle(e,n){if(e)try{const t=(await this.fileService.readFile(e)).value.toString();return U(t,n)}catch{}}findMessageBundles(e,n){return new Promise((t,i)=>{const s=a=>{const o=m(e,`package.nls.${a}.json`);this.fileService.exists(o).then(r=>{r&&t({localized:o,original:m(e,"package.nls.json")});const l=a.lastIndexOf("-");l===-1?t({localized:m(e,"package.nls.json"),original:null}):(a=a.substring(0,l),s(a))})};if(n.devMode||n.pseudo||!n.language)return t({localized:m(e,"package.nls.json"),original:null});s(n.language)})}formatMessage(e,n){return`[${e.path}]: ${n}`}};x=b([u(1,_),u(2,B),u(3,N),u(4,V),u(5,T),u(6,L)],x);let g=class extends x{constructor(e,n,t,i,s,a,o,r,l){super(n,i,s,a,o,r,l);this.currentProfile=e;this.userDataProfilesService=t}input;cacheValidatorThrottler=this._register(new Y(3e3));_onDidChangeCache=this._register(new j);onDidChangeCache=this._onDidChangeCache.event;async scanExtensions(e){const n=this.getCacheFile(e),t=await this.readExtensionCache(n);if(this.input=e,t&&t.input&&y.equals(t.input,this.input))return this.logService.debug("Using cached extensions scan result",e.type===f.System?"system":"user",e.location.toString()),this.cacheValidatorThrottler.trigger(()=>this.validateCache()),t.result.map(s=>(s.location=E.revive(s.location),s));const i=await super.scanExtensions(e);return await this.writeExtensionCache(n,{input:e,result:i}),i}async readExtensionCache(e){try{const n=await this.fileService.readFile(e),t=JSON.parse(n.value.toString());return{result:t.result,input:Z(t.input)}}catch(n){this.logService.debug("Error while reading the extension cache file:",e.path,w(n))}return null}async writeExtensionCache(e,n){try{await this.fileService.writeFile(e,M.fromString(JSON.stringify(n)))}catch(t){this.logService.debug("Error while writing the extension cache file:",e.path,w(t))}}async validateCache(){if(!this.input)return;const e=this.getCacheFile(this.input),n=await this.readExtensionCache(e);if(!n)return;const t=n.result,i=JSON.parse(JSON.stringify(await super.scanExtensions(this.input)));if(!z.equals(i,t))try{this.logService.info("Invalidating Cache",t,i),await this.fileService.del(e),this._onDidChangeCache.fire()}catch(s){this.logService.error(s)}}getCacheFile(e){const n=this.getProfile(e);return this.uriIdentityService.extUri.joinPath(n.cacheHome,e.type===f.System?ue:ve)}getProfile(e){return e.type===f.System?this.userDataProfilesService.defaultProfile:e.profile?this.uriIdentityService.extUri.isEqual(e.location,this.currentProfile.extensionsResource)?this.currentProfile:this.userDataProfilesService.profiles.find(n=>this.uriIdentityService.extUri.isEqual(e.location,n.extensionsResource))??this.currentProfile:this.userDataProfilesService.defaultProfile}};g=b([u(2,K),u(3,_),u(4,B),u(5,N),u(6,V),u(7,T),u(8,L)],g);function fn(p,c){const e=le(p.manifest.publisher,p.manifest.name);return{id:e,identifier:new fe(e),isBuiltin:p.type===f.System,isUserBuiltin:p.type===f.User&&p.isBuiltin,isUnderDevelopment:c,extensionLocation:p.location,uuid:p.identifier.uuid,targetPlatform:p.targetPlatform,publisherDisplayName:p.publisherDisplayName,...p.manifest}}class pn extends I{translationsPromise;constructor(c,e,n,t,i,s,a,o,r,l,d,S){super(c,e,m(n,".vscode-oss-dev","extensions","control.json"),t,i,s,a,o,r,l,d,S),this.translationsPromise=(async()=>{if(F.translationsConfigFile)try{const h=await this.fileService.readFile(E.file(F.translationsConfigFile));return JSON.parse(h.value.toString())}catch{}return Object.create(null)})()}getTranslations(c){return this.translationsPromise}}export{I as AbstractExtensionsScannerService,y as ExtensionScannerInput,un as IExtensionsScannerService,pn as NativeExtensionsScannerService,G as Translations,fn as toExtensionDescription};
