{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/extensionManagement/common/extensionEnablementService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, type Event } from \"../../../base/common/event.js\";\nimport { Disposable, DisposableStore } from \"../../../base/common/lifecycle.js\";\nimport { isUndefinedOrNull } from \"../../../base/common/types.js\";\nimport {\n\ttype IProfileStorageValueChangeEvent,\n\tIStorageService,\n\tStorageScope,\n\tStorageTarget,\n} from \"../../storage/common/storage.js\";\nimport {\n\tDISABLED_EXTENSIONS_STORAGE_PATH,\n\ttype IExtensionIdentifier,\n\tIExtensionManagementService,\n\ttype IGlobalExtensionEnablementService,\n\tInstallOperation,\n} from \"./extensionManagement.js\";\nimport { areSameExtensions } from \"./extensionManagementUtil.js\";\n\nexport class GlobalExtensionEnablementService\n\textends Disposable\n\timplements IGlobalExtensionEnablementService\n{\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _onDidChangeEnablement = new Emitter<{\n\t\treadonly extensions: IExtensionIdentifier[];\n\t\treadonly source?: string;\n\t}>();\n\treadonly onDidChangeEnablement: Event<{\n\t\treadonly extensions: IExtensionIdentifier[];\n\t\treadonly source?: string;\n\t}> = this._onDidChangeEnablement.event;\n\tprivate readonly storageManager: StorageManager;\n\n\tconstructor(\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IExtensionManagementService extensionManagementService: IExtensionManagementService,\n\t) {\n\t\tsuper();\n\t\tthis.storageManager = this._register(\n\t\t\tnew StorageManager(storageService),\n\t\t);\n\t\tthis._register(\n\t\t\tthis.storageManager.onDidChange((extensions) =>\n\t\t\t\tthis._onDidChangeEnablement.fire({\n\t\t\t\t\textensions,\n\t\t\t\t\tsource: \"storage\",\n\t\t\t\t}),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\textensionManagementService.onDidInstallExtensions((e) =>\n\t\t\t\te.forEach(({ local, operation }) => {\n\t\t\t\t\tif (local && operation === InstallOperation.Migrate) {\n\t\t\t\t\t\tthis._removeFromDisabledExtensions(\n\t\t\t\t\t\t\tlocal.identifier,\n\t\t\t\t\t\t); /* Reset migrated extensions */\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t),\n\t\t);\n\t}\n\n\tasync enableExtension(\n\t\textension: IExtensionIdentifier,\n\t\tsource?: string,\n\t): Promise<boolean> {\n\t\tif (this._removeFromDisabledExtensions(extension)) {\n\t\t\tthis._onDidChangeEnablement.fire({\n\t\t\t\textensions: [extension],\n\t\t\t\tsource,\n\t\t\t});\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tasync disableExtension(\n\t\textension: IExtensionIdentifier,\n\t\tsource?: string,\n\t): Promise<boolean> {\n\t\tif (this._addToDisabledExtensions(extension)) {\n\t\t\tthis._onDidChangeEnablement.fire({\n\t\t\t\textensions: [extension],\n\t\t\t\tsource,\n\t\t\t});\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tgetDisabledExtensions(): IExtensionIdentifier[] {\n\t\treturn this._getExtensions(DISABLED_EXTENSIONS_STORAGE_PATH);\n\t}\n\n\tasync getDisabledExtensionsAsync(): Promise<IExtensionIdentifier[]> {\n\t\treturn this.getDisabledExtensions();\n\t}\n\n\tprivate _addToDisabledExtensions(\n\t\tidentifier: IExtensionIdentifier,\n\t): boolean {\n\t\tconst disabledExtensions = this.getDisabledExtensions();\n\t\tif (\n\t\t\tdisabledExtensions.every((e) => !areSameExtensions(e, identifier))\n\t\t) {\n\t\t\tdisabledExtensions.push(identifier);\n\t\t\tthis._setDisabledExtensions(disabledExtensions);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _removeFromDisabledExtensions(\n\t\tidentifier: IExtensionIdentifier,\n\t): boolean {\n\t\tconst disabledExtensions = this.getDisabledExtensions();\n\t\tfor (let index = 0; index < disabledExtensions.length; index++) {\n\t\t\tconst disabledExtension = disabledExtensions[index];\n\t\t\tif (areSameExtensions(disabledExtension, identifier)) {\n\t\t\t\tdisabledExtensions.splice(index, 1);\n\t\t\t\tthis._setDisabledExtensions(disabledExtensions);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _setDisabledExtensions(\n\t\tdisabledExtensions: IExtensionIdentifier[],\n\t): void {\n\t\tthis._setExtensions(\n\t\t\tDISABLED_EXTENSIONS_STORAGE_PATH,\n\t\t\tdisabledExtensions,\n\t\t);\n\t}\n\n\tprivate _getExtensions(storageId: string): IExtensionIdentifier[] {\n\t\treturn this.storageManager.get(storageId, StorageScope.PROFILE);\n\t}\n\n\tprivate _setExtensions(\n\t\tstorageId: string,\n\t\textensions: IExtensionIdentifier[],\n\t): void {\n\t\tthis.storageManager.set(storageId, extensions, StorageScope.PROFILE);\n\t}\n}\n\nexport class StorageManager extends Disposable {\n\tprivate storage: { [key: string]: string } = Object.create(null);\n\n\tprivate _onDidChange: Emitter<IExtensionIdentifier[]> = this._register(\n\t\tnew Emitter<IExtensionIdentifier[]>(),\n\t);\n\treadonly onDidChange: Event<IExtensionIdentifier[]> =\n\t\tthis._onDidChange.event;\n\n\tconstructor(private storageService: IStorageService) {\n\t\tsuper();\n\t\tthis._register(\n\t\t\tstorageService.onDidChangeValue(\n\t\t\t\tStorageScope.PROFILE,\n\t\t\t\tundefined,\n\t\t\t\tthis._register(new DisposableStore()),\n\t\t\t)((e) => this.onDidStorageChange(e)),\n\t\t);\n\t}\n\n\tget(key: string, scope: StorageScope): IExtensionIdentifier[] {\n\t\tlet value: string;\n\t\tif (scope === StorageScope.PROFILE) {\n\t\t\tif (isUndefinedOrNull(this.storage[key])) {\n\t\t\t\tthis.storage[key] = this._get(key, scope);\n\t\t\t}\n\t\t\tvalue = this.storage[key];\n\t\t} else {\n\t\t\tvalue = this._get(key, scope);\n\t\t}\n\t\treturn JSON.parse(value);\n\t}\n\n\tset(key: string, value: IExtensionIdentifier[], scope: StorageScope): void {\n\t\tconst newValue: string = JSON.stringify(\n\t\t\tvalue.map(({ id, uuid }): IExtensionIdentifier => ({ id, uuid })),\n\t\t);\n\t\tconst oldValue = this._get(key, scope);\n\t\tif (oldValue !== newValue) {\n\t\t\tif (scope === StorageScope.PROFILE) {\n\t\t\t\tif (value.length) {\n\t\t\t\t\tthis.storage[key] = newValue;\n\t\t\t\t} else {\n\t\t\t\t\tdelete this.storage[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._set(key, value.length ? newValue : undefined, scope);\n\t\t}\n\t}\n\n\tprivate onDidStorageChange(\n\t\tstorageChangeEvent: IProfileStorageValueChangeEvent,\n\t): void {\n\t\tif (!isUndefinedOrNull(this.storage[storageChangeEvent.key])) {\n\t\t\tconst newValue = this._get(\n\t\t\t\tstorageChangeEvent.key,\n\t\t\t\tstorageChangeEvent.scope,\n\t\t\t);\n\t\t\tif (newValue !== this.storage[storageChangeEvent.key]) {\n\t\t\t\tconst oldValues = this.get(\n\t\t\t\t\tstorageChangeEvent.key,\n\t\t\t\t\tstorageChangeEvent.scope,\n\t\t\t\t);\n\t\t\t\tdelete this.storage[storageChangeEvent.key];\n\t\t\t\tconst newValues = this.get(\n\t\t\t\t\tstorageChangeEvent.key,\n\t\t\t\t\tstorageChangeEvent.scope,\n\t\t\t\t);\n\t\t\t\tconst added = oldValues.filter(\n\t\t\t\t\t(oldValue) =>\n\t\t\t\t\t\t!newValues.some((newValue) =>\n\t\t\t\t\t\t\tareSameExtensions(oldValue, newValue),\n\t\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tconst removed = newValues.filter(\n\t\t\t\t\t(newValue) =>\n\t\t\t\t\t\t!oldValues.some((oldValue) =>\n\t\t\t\t\t\t\tareSameExtensions(oldValue, newValue),\n\t\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tif (added.length || removed.length) {\n\t\t\t\t\tthis._onDidChange.fire([...added, ...removed]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _get(key: string, scope: StorageScope): string {\n\t\treturn this.storageService.get(key, scope, \"[]\");\n\t}\n\n\tprivate _set(\n\t\tkey: string,\n\t\tvalue: string | undefined,\n\t\tscope: StorageScope,\n\t): void {\n\t\tif (value) {\n\t\t\t// Enablement state is synced separately through extensions\n\t\t\tthis.storageService.store(key, value, scope, StorageTarget.MACHINE);\n\t\t} else {\n\t\t\tthis.storageService.remove(key, scope);\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": ["newValue"]
}
