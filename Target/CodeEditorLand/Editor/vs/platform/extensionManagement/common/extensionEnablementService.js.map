{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/extensionManagement/common/extensionEnablementService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { isUndefinedOrNull } from '../../../base/common/types.js';\nimport { DISABLED_EXTENSIONS_STORAGE_PATH, IExtensionIdentifier, IExtensionManagementService, IGlobalExtensionEnablementService, InstallOperation } from './extensionManagement.js';\nimport { areSameExtensions } from './extensionManagementUtil.js';\nimport { IProfileStorageValueChangeEvent, IStorageService, StorageScope, StorageTarget } from '../../storage/common/storage.js';\n\nexport class GlobalExtensionEnablementService extends Disposable implements IGlobalExtensionEnablementService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _onDidChangeEnablement = new Emitter<{ readonly extensions: IExtensionIdentifier[]; readonly source?: string }>();\n\treadonly onDidChangeEnablement: Event<{ readonly extensions: IExtensionIdentifier[]; readonly source?: string }> = this._onDidChangeEnablement.event;\n\tprivate readonly storageManager: StorageManager;\n\n\tconstructor(\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IExtensionManagementService extensionManagementService: IExtensionManagementService,\n\t) {\n\t\tsuper();\n\t\tthis.storageManager = this._register(new StorageManager(storageService));\n\t\tthis._register(this.storageManager.onDidChange(extensions => this._onDidChangeEnablement.fire({ extensions, source: 'storage' })));\n\t\tthis._register(extensionManagementService.onDidInstallExtensions(e => e.forEach(({ local, operation }) => {\n\t\t\tif (local && operation === InstallOperation.Migrate) {\n\t\t\t\tthis._removeFromDisabledExtensions(local.identifier); /* Reset migrated extensions */\n\t\t\t}\n\t\t})));\n\t}\n\n\tasync enableExtension(extension: IExtensionIdentifier, source?: string): Promise<boolean> {\n\t\tif (this._removeFromDisabledExtensions(extension)) {\n\t\t\tthis._onDidChangeEnablement.fire({ extensions: [extension], source });\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tasync disableExtension(extension: IExtensionIdentifier, source?: string): Promise<boolean> {\n\t\tif (this._addToDisabledExtensions(extension)) {\n\t\t\tthis._onDidChangeEnablement.fire({ extensions: [extension], source });\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tgetDisabledExtensions(): IExtensionIdentifier[] {\n\t\treturn this._getExtensions(DISABLED_EXTENSIONS_STORAGE_PATH);\n\t}\n\n\tasync getDisabledExtensionsAsync(): Promise<IExtensionIdentifier[]> {\n\t\treturn this.getDisabledExtensions();\n\t}\n\n\tprivate _addToDisabledExtensions(identifier: IExtensionIdentifier): boolean {\n\t\tconst disabledExtensions = this.getDisabledExtensions();\n\t\tif (disabledExtensions.every(e => !areSameExtensions(e, identifier))) {\n\t\t\tdisabledExtensions.push(identifier);\n\t\t\tthis._setDisabledExtensions(disabledExtensions);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _removeFromDisabledExtensions(identifier: IExtensionIdentifier): boolean {\n\t\tconst disabledExtensions = this.getDisabledExtensions();\n\t\tfor (let index = 0; index < disabledExtensions.length; index++) {\n\t\t\tconst disabledExtension = disabledExtensions[index];\n\t\t\tif (areSameExtensions(disabledExtension, identifier)) {\n\t\t\t\tdisabledExtensions.splice(index, 1);\n\t\t\t\tthis._setDisabledExtensions(disabledExtensions);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _setDisabledExtensions(disabledExtensions: IExtensionIdentifier[]): void {\n\t\tthis._setExtensions(DISABLED_EXTENSIONS_STORAGE_PATH, disabledExtensions);\n\t}\n\n\tprivate _getExtensions(storageId: string): IExtensionIdentifier[] {\n\t\treturn this.storageManager.get(storageId, StorageScope.PROFILE);\n\t}\n\n\tprivate _setExtensions(storageId: string, extensions: IExtensionIdentifier[]): void {\n\t\tthis.storageManager.set(storageId, extensions, StorageScope.PROFILE);\n\t}\n\n}\n\nexport class StorageManager extends Disposable {\n\n\tprivate storage: { [key: string]: string } = Object.create(null);\n\n\tprivate _onDidChange: Emitter<IExtensionIdentifier[]> = this._register(new Emitter<IExtensionIdentifier[]>());\n\treadonly onDidChange: Event<IExtensionIdentifier[]> = this._onDidChange.event;\n\n\tconstructor(private storageService: IStorageService) {\n\t\tsuper();\n\t\tthis._register(storageService.onDidChangeValue(StorageScope.PROFILE, undefined, this._register(new DisposableStore()))(e => this.onDidStorageChange(e)));\n\t}\n\n\tget(key: string, scope: StorageScope): IExtensionIdentifier[] {\n\t\tlet value: string;\n\t\tif (scope === StorageScope.PROFILE) {\n\t\t\tif (isUndefinedOrNull(this.storage[key])) {\n\t\t\t\tthis.storage[key] = this._get(key, scope);\n\t\t\t}\n\t\t\tvalue = this.storage[key];\n\t\t} else {\n\t\t\tvalue = this._get(key, scope);\n\t\t}\n\t\treturn JSON.parse(value);\n\t}\n\n\tset(key: string, value: IExtensionIdentifier[], scope: StorageScope): void {\n\t\tconst newValue: string = JSON.stringify(value.map(({ id, uuid }): IExtensionIdentifier => ({ id, uuid })));\n\t\tconst oldValue = this._get(key, scope);\n\t\tif (oldValue !== newValue) {\n\t\t\tif (scope === StorageScope.PROFILE) {\n\t\t\t\tif (value.length) {\n\t\t\t\t\tthis.storage[key] = newValue;\n\t\t\t\t} else {\n\t\t\t\t\tdelete this.storage[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._set(key, value.length ? newValue : undefined, scope);\n\t\t}\n\t}\n\n\tprivate onDidStorageChange(storageChangeEvent: IProfileStorageValueChangeEvent): void {\n\t\tif (!isUndefinedOrNull(this.storage[storageChangeEvent.key])) {\n\t\t\tconst newValue = this._get(storageChangeEvent.key, storageChangeEvent.scope);\n\t\t\tif (newValue !== this.storage[storageChangeEvent.key]) {\n\t\t\t\tconst oldValues = this.get(storageChangeEvent.key, storageChangeEvent.scope);\n\t\t\t\tdelete this.storage[storageChangeEvent.key];\n\t\t\t\tconst newValues = this.get(storageChangeEvent.key, storageChangeEvent.scope);\n\t\t\t\tconst added = oldValues.filter(oldValue => !newValues.some(newValue => areSameExtensions(oldValue, newValue)));\n\t\t\t\tconst removed = newValues.filter(newValue => !oldValues.some(oldValue => areSameExtensions(oldValue, newValue)));\n\t\t\t\tif (added.length || removed.length) {\n\t\t\t\t\tthis._onDidChange.fire([...added, ...removed]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _get(key: string, scope: StorageScope): string {\n\t\treturn this.storageService.get(key, scope, '[]');\n\t}\n\n\tprivate _set(key: string, value: string | undefined, scope: StorageScope): void {\n\t\tif (value) {\n\t\t\t// Enablement state is synced separately through extensions\n\t\t\tthis.storageService.store(key, value, scope, StorageTarget.MACHINE);\n\t\t} else {\n\t\t\tthis.storageService.remove(key, scope);\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": ["newValue"]
}
