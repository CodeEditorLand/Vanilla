{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/extensionManagement/common/extensionManagementIpc.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { cloneAndChange } from '../../../base/common/objects.js';\nimport { URI, UriComponents } from '../../../base/common/uri.js';\nimport { DefaultURITransformer, IURITransformer, transformAndReviveIncomingURIs } from '../../../base/common/uriIpc.js';\nimport { IChannel, IServerChannel } from '../../../base/parts/ipc/common/ipc.js';\nimport { IExtensionIdentifier, IExtensionTipsService, IGalleryExtension, ILocalExtension, IExtensionsControlManifest, isTargetPlatformCompatible, InstallOptions, UninstallOptions, Metadata, IExtensionManagementService, DidUninstallExtensionEvent, InstallExtensionEvent, InstallExtensionResult, UninstallExtensionEvent, InstallOperation, InstallExtensionInfo, IProductVersion, DidUpdateExtensionMetadata, UninstallExtensionInfo } from './extensionManagement.js';\nimport { ExtensionType, IExtensionManifest, TargetPlatform } from '../../extensions/common/extensions.js';\n\nfunction transformIncomingURI(uri: UriComponents, transformer: IURITransformer | null): URI;\nfunction transformIncomingURI(uri: UriComponents | undefined, transformer: IURITransformer | null): URI | undefined;\nfunction transformIncomingURI(uri: UriComponents | undefined, transformer: IURITransformer | null): URI | undefined {\n\treturn uri ? URI.revive(transformer ? transformer.transformIncoming(uri) : uri) : undefined;\n}\n\nfunction transformOutgoingURI(uri: URI, transformer: IURITransformer | null): URI {\n\treturn transformer ? transformer.transformOutgoingURI(uri) : uri;\n}\n\nfunction transformIncomingExtension(extension: ILocalExtension, transformer: IURITransformer | null): ILocalExtension {\n\ttransformer = transformer ? transformer : DefaultURITransformer;\n\tconst manifest = extension.manifest;\n\tconst transformed = transformAndReviveIncomingURIs({ ...extension, ...{ manifest: undefined } }, transformer);\n\treturn { ...transformed, ...{ manifest } };\n}\n\nfunction transformIncomingOptions<O extends { profileLocation?: UriComponents }>(options: O | undefined, transformer: IURITransformer | null): O | undefined {\n\treturn options?.profileLocation ? transformAndReviveIncomingURIs(options, transformer ?? DefaultURITransformer) : options;\n}\n\nfunction transformOutgoingExtension(extension: ILocalExtension, transformer: IURITransformer | null): ILocalExtension {\n\treturn transformer ? cloneAndChange(extension, value => value instanceof URI ? transformer.transformOutgoingURI(value) : undefined) : extension;\n}\n\nexport class ExtensionManagementChannel implements IServerChannel {\n\n\tonInstallExtension: Event<InstallExtensionEvent>;\n\tonDidInstallExtensions: Event<readonly InstallExtensionResult[]>;\n\tonUninstallExtension: Event<UninstallExtensionEvent>;\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent>;\n\tonDidUpdateExtensionMetadata: Event<DidUpdateExtensionMetadata>;\n\n\tconstructor(private service: IExtensionManagementService, private getUriTransformer: (requestContext: any) => IURITransformer | null) {\n\t\tthis.onInstallExtension = Event.buffer(service.onInstallExtension, true);\n\t\tthis.onDidInstallExtensions = Event.buffer(service.onDidInstallExtensions, true);\n\t\tthis.onUninstallExtension = Event.buffer(service.onUninstallExtension, true);\n\t\tthis.onDidUninstallExtension = Event.buffer(service.onDidUninstallExtension, true);\n\t\tthis.onDidUpdateExtensionMetadata = Event.buffer(service.onDidUpdateExtensionMetadata, true);\n\t}\n\n\tlisten(context: any, event: string): Event<any> {\n\t\tconst uriTransformer = this.getUriTransformer(context);\n\t\tswitch (event) {\n\t\t\tcase 'onInstallExtension': {\n\t\t\t\treturn Event.map<InstallExtensionEvent, InstallExtensionEvent>(this.onInstallExtension, e => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...e,\n\t\t\t\t\t\tprofileLocation: e.profileLocation ? transformOutgoingURI(e.profileLocation, uriTransformer) : e.profileLocation\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t}\n\t\t\tcase 'onDidInstallExtensions': {\n\t\t\t\treturn Event.map<readonly InstallExtensionResult[], readonly InstallExtensionResult[]>(this.onDidInstallExtensions, results =>\n\t\t\t\t\tresults.map(i => ({\n\t\t\t\t\t\t...i,\n\t\t\t\t\t\tlocal: i.local ? transformOutgoingExtension(i.local, uriTransformer) : i.local,\n\t\t\t\t\t\tprofileLocation: i.profileLocation ? transformOutgoingURI(i.profileLocation, uriTransformer) : i.profileLocation\n\t\t\t\t\t})));\n\t\t\t}\n\t\t\tcase 'onUninstallExtension': {\n\t\t\t\treturn Event.map<UninstallExtensionEvent, UninstallExtensionEvent>(this.onUninstallExtension, e => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...e,\n\t\t\t\t\t\tprofileLocation: e.profileLocation ? transformOutgoingURI(e.profileLocation, uriTransformer) : e.profileLocation\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t}\n\t\t\tcase 'onDidUninstallExtension': {\n\t\t\t\treturn Event.map<DidUninstallExtensionEvent, DidUninstallExtensionEvent>(this.onDidUninstallExtension, e => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...e,\n\t\t\t\t\t\tprofileLocation: e.profileLocation ? transformOutgoingURI(e.profileLocation, uriTransformer) : e.profileLocation\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t}\n\t\t\tcase 'onDidUpdateExtensionMetadata': {\n\t\t\t\treturn Event.map<DidUpdateExtensionMetadata, DidUpdateExtensionMetadata>(this.onDidUpdateExtensionMetadata, e => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tlocal: transformOutgoingExtension(e.local, uriTransformer),\n\t\t\t\t\t\tprofileLocation: transformOutgoingURI(e.profileLocation, uriTransformer)\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error('Invalid listen');\n\t}\n\n\tasync call(context: any, command: string, args?: any): Promise<any> {\n\t\tconst uriTransformer: IURITransformer | null = this.getUriTransformer(context);\n\t\tswitch (command) {\n\t\t\tcase 'zip': {\n\t\t\t\tconst extension = transformIncomingExtension(args[0], uriTransformer);\n\t\t\t\tconst uri = await this.service.zip(extension);\n\t\t\t\treturn transformOutgoingURI(uri, uriTransformer);\n\t\t\t}\n\t\t\tcase 'install': {\n\t\t\t\treturn this.service.install(transformIncomingURI(args[0], uriTransformer), transformIncomingOptions(args[1], uriTransformer));\n\t\t\t}\n\t\t\tcase 'installFromLocation': {\n\t\t\t\treturn this.service.installFromLocation(transformIncomingURI(args[0], uriTransformer), transformIncomingURI(args[1], uriTransformer));\n\t\t\t}\n\t\t\tcase 'installExtensionsFromProfile': {\n\t\t\t\treturn this.service.installExtensionsFromProfile(args[0], transformIncomingURI(args[1], uriTransformer), transformIncomingURI(args[2], uriTransformer));\n\t\t\t}\n\t\t\tcase 'getManifest': {\n\t\t\t\treturn this.service.getManifest(transformIncomingURI(args[0], uriTransformer));\n\t\t\t}\n\t\t\tcase 'getTargetPlatform': {\n\t\t\t\treturn this.service.getTargetPlatform();\n\t\t\t}\n\t\t\tcase 'canInstall': {\n\t\t\t\treturn this.service.canInstall(args[0]);\n\t\t\t}\n\t\t\tcase 'installFromGallery': {\n\t\t\t\treturn this.service.installFromGallery(args[0], transformIncomingOptions(args[1], uriTransformer));\n\t\t\t}\n\t\t\tcase 'installGalleryExtensions': {\n\t\t\t\tconst arg: InstallExtensionInfo[] = args[0];\n\t\t\t\treturn this.service.installGalleryExtensions(arg.map(({ extension, options }) => ({ extension, options: transformIncomingOptions(options, uriTransformer) ?? {} })));\n\t\t\t}\n\t\t\tcase 'uninstall': {\n\t\t\t\treturn this.service.uninstall(transformIncomingExtension(args[0], uriTransformer), transformIncomingOptions(args[1], uriTransformer));\n\t\t\t}\n\t\t\tcase 'uninstallExtensions': {\n\t\t\t\tconst arg: UninstallExtensionInfo[] = args[0];\n\t\t\t\treturn this.service.uninstallExtensions(arg.map(({ extension, options }) => ({ extension: transformIncomingExtension(extension, uriTransformer), options: transformIncomingOptions(options, uriTransformer) })));\n\t\t\t}\n\t\t\tcase 'reinstallFromGallery': {\n\t\t\t\treturn this.service.reinstallFromGallery(transformIncomingExtension(args[0], uriTransformer));\n\t\t\t}\n\t\t\tcase 'getInstalled': {\n\t\t\t\tconst extensions = await this.service.getInstalled(args[0], transformIncomingURI(args[1], uriTransformer), args[2]);\n\t\t\t\treturn extensions.map(e => transformOutgoingExtension(e, uriTransformer));\n\t\t\t}\n\t\t\tcase 'toggleAppliationScope': {\n\t\t\t\tconst extension = await this.service.toggleAppliationScope(transformIncomingExtension(args[0], uriTransformer), transformIncomingURI(args[1], uriTransformer));\n\t\t\t\treturn transformOutgoingExtension(extension, uriTransformer);\n\t\t\t}\n\t\t\tcase 'copyExtensions': {\n\t\t\t\treturn this.service.copyExtensions(transformIncomingURI(args[0], uriTransformer), transformIncomingURI(args[1], uriTransformer));\n\t\t\t}\n\t\t\tcase 'updateMetadata': {\n\t\t\t\tconst e = await this.service.updateMetadata(transformIncomingExtension(args[0], uriTransformer), args[1], transformIncomingURI(args[2], uriTransformer));\n\t\t\t\treturn transformOutgoingExtension(e, uriTransformer);\n\t\t\t}\n\t\t\tcase 'resetPinnedStateForAllUserExtensions': {\n\t\t\t\treturn this.service.resetPinnedStateForAllUserExtensions(args[0]);\n\t\t\t}\n\t\t\tcase 'getExtensionsControlManifest': {\n\t\t\t\treturn this.service.getExtensionsControlManifest();\n\t\t\t}\n\t\t\tcase 'download': {\n\t\t\t\treturn this.service.download(args[0], args[1], args[2]);\n\t\t\t}\n\t\t\tcase 'cleanUp': {\n\t\t\t\treturn this.service.cleanUp();\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error('Invalid call');\n\t}\n}\n\nexport interface ExtensionEventResult {\n\treadonly profileLocation: URI;\n\treadonly local?: ILocalExtension;\n\treadonly applicationScoped?: boolean;\n}\n\nexport class ExtensionManagementChannelClient extends Disposable implements IExtensionManagementService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onInstallExtension = this._register(new Emitter<InstallExtensionEvent>());\n\tget onInstallExtension() { return this._onInstallExtension.event; }\n\n\tprivate readonly _onDidInstallExtensions = this._register(new Emitter<readonly InstallExtensionResult[]>());\n\tget onDidInstallExtensions() { return this._onDidInstallExtensions.event; }\n\n\tprivate readonly _onUninstallExtension = this._register(new Emitter<UninstallExtensionEvent>());\n\tget onUninstallExtension() { return this._onUninstallExtension.event; }\n\n\tprivate readonly _onDidUninstallExtension = this._register(new Emitter<DidUninstallExtensionEvent>());\n\tget onDidUninstallExtension() { return this._onDidUninstallExtension.event; }\n\n\tprivate readonly _onDidUpdateExtensionMetadata = this._register(new Emitter<DidUpdateExtensionMetadata>());\n\tget onDidUpdateExtensionMetadata() { return this._onDidUpdateExtensionMetadata.event; }\n\n\tconstructor(private readonly channel: IChannel) {\n\t\tsuper();\n\t\tthis._register(this.channel.listen<InstallExtensionEvent>('onInstallExtension')(e => this.fireEvent(this._onInstallExtension, { ...e, source: this.isUriComponents(e.source) ? URI.revive(e.source) : e.source, profileLocation: URI.revive(e.profileLocation) })));\n\t\tthis._register(this.channel.listen<readonly InstallExtensionResult[]>('onDidInstallExtensions')(results => this.fireEvent(this._onDidInstallExtensions, results.map(e => ({ ...e, local: e.local ? transformIncomingExtension(e.local, null) : e.local, source: this.isUriComponents(e.source) ? URI.revive(e.source) : e.source, profileLocation: URI.revive(e.profileLocation) })))));\n\t\tthis._register(this.channel.listen<UninstallExtensionEvent>('onUninstallExtension')(e => this.fireEvent(this._onUninstallExtension, { ...e, profileLocation: URI.revive(e.profileLocation) })));\n\t\tthis._register(this.channel.listen<DidUninstallExtensionEvent>('onDidUninstallExtension')(e => this.fireEvent(this._onDidUninstallExtension, { ...e, profileLocation: URI.revive(e.profileLocation) })));\n\t\tthis._register(this.channel.listen<DidUpdateExtensionMetadata>('onDidUpdateExtensionMetadata')(e => this.fireEvent(this._onDidUpdateExtensionMetadata, { profileLocation: URI.revive(e.profileLocation), local: transformIncomingExtension(e.local, null) })));\n\t}\n\n\tprotected fireEvent<E extends ExtensionEventResult>(event: Emitter<E>, data: E): void;\n\tprotected fireEvent<E extends ExtensionEventResult>(event: Emitter<readonly E[]>, data: E[]): void;\n\tprotected fireEvent<E extends ExtensionEventResult>(event: Emitter<E | E[]>, data: E | E[]): void {\n\t\tevent.fire(data);\n\t}\n\n\tprivate isUriComponents(thing: unknown): thing is UriComponents {\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<any>thing).path === 'string' &&\n\t\t\ttypeof (<any>thing).scheme === 'string';\n\t}\n\n\tprotected _targetPlatformPromise: Promise<TargetPlatform> | undefined;\n\tgetTargetPlatform(): Promise<TargetPlatform> {\n\t\tif (!this._targetPlatformPromise) {\n\t\t\tthis._targetPlatformPromise = this.channel.call<TargetPlatform>('getTargetPlatform');\n\t\t}\n\t\treturn this._targetPlatformPromise;\n\t}\n\n\tasync canInstall(extension: IGalleryExtension): Promise<boolean> {\n\t\tconst currentTargetPlatform = await this.getTargetPlatform();\n\t\treturn extension.allTargetPlatforms.some(targetPlatform => isTargetPlatformCompatible(targetPlatform, extension.allTargetPlatforms, currentTargetPlatform));\n\t}\n\n\tzip(extension: ILocalExtension): Promise<URI> {\n\t\treturn Promise.resolve(this.channel.call<UriComponents>('zip', [extension]).then(result => URI.revive(result)));\n\t}\n\n\tinstall(vsix: URI, options?: InstallOptions): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('install', [vsix, options])).then(local => transformIncomingExtension(local, null));\n\t}\n\n\tinstallFromLocation(location: URI, profileLocation: URI): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('installFromLocation', [location, profileLocation])).then(local => transformIncomingExtension(local, null));\n\t}\n\n\tasync installExtensionsFromProfile(extensions: IExtensionIdentifier[], fromProfileLocation: URI, toProfileLocation: URI): Promise<ILocalExtension[]> {\n\t\tconst result = await this.channel.call<ILocalExtension[]>('installExtensionsFromProfile', [extensions, fromProfileLocation, toProfileLocation]);\n\t\treturn result.map(local => transformIncomingExtension(local, null));\n\t}\n\n\tgetManifest(vsix: URI): Promise<IExtensionManifest> {\n\t\treturn Promise.resolve(this.channel.call<IExtensionManifest>('getManifest', [vsix]));\n\t}\n\n\tinstallFromGallery(extension: IGalleryExtension, installOptions?: InstallOptions): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('installFromGallery', [extension, installOptions])).then(local => transformIncomingExtension(local, null));\n\t}\n\n\tasync installGalleryExtensions(extensions: InstallExtensionInfo[]): Promise<InstallExtensionResult[]> {\n\t\tconst results = await this.channel.call<InstallExtensionResult[]>('installGalleryExtensions', [extensions]);\n\t\treturn results.map(e => ({ ...e, local: e.local ? transformIncomingExtension(e.local, null) : e.local, source: this.isUriComponents(e.source) ? URI.revive(e.source) : e.source, profileLocation: URI.revive(e.profileLocation) }));\n\t}\n\n\tuninstall(extension: ILocalExtension, options?: UninstallOptions): Promise<void> {\n\t\tif (extension.isWorkspaceScoped) {\n\t\t\tthrow new Error('Cannot uninstall a workspace extension');\n\t\t}\n\t\treturn Promise.resolve(this.channel.call<void>('uninstall', [extension, options]));\n\t}\n\n\tuninstallExtensions(extensions: UninstallExtensionInfo[]): Promise<void> {\n\t\tif (extensions.some(e => e.extension.isWorkspaceScoped)) {\n\t\t\tthrow new Error('Cannot uninstall a workspace extension');\n\t\t}\n\t\treturn Promise.resolve(this.channel.call<void>('uninstallExtensions', [extensions]));\n\n\t}\n\n\treinstallFromGallery(extension: ILocalExtension): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('reinstallFromGallery', [extension])).then(local => transformIncomingExtension(local, null));\n\t}\n\n\tgetInstalled(type: ExtensionType | null = null, extensionsProfileResource?: URI, productVersion?: IProductVersion): Promise<ILocalExtension[]> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension[]>('getInstalled', [type, extensionsProfileResource, productVersion]))\n\t\t\t.then(extensions => extensions.map(extension => transformIncomingExtension(extension, null)));\n\t}\n\n\tupdateMetadata(local: ILocalExtension, metadata: Partial<Metadata>, extensionsProfileResource?: URI): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('updateMetadata', [local, metadata, extensionsProfileResource]))\n\t\t\t.then(extension => transformIncomingExtension(extension, null));\n\t}\n\n\tresetPinnedStateForAllUserExtensions(pinned: boolean): Promise<void> {\n\t\treturn this.channel.call<void>('resetPinnedStateForAllUserExtensions', [pinned]);\n\t}\n\n\ttoggleAppliationScope(local: ILocalExtension, fromProfileLocation: URI): Promise<ILocalExtension> {\n\t\treturn this.channel.call<ILocalExtension>('toggleAppliationScope', [local, fromProfileLocation])\n\t\t\t.then(extension => transformIncomingExtension(extension, null));\n\t}\n\n\tcopyExtensions(fromProfileLocation: URI, toProfileLocation: URI): Promise<void> {\n\t\treturn this.channel.call<void>('copyExtensions', [fromProfileLocation, toProfileLocation]);\n\t}\n\n\tgetExtensionsControlManifest(): Promise<IExtensionsControlManifest> {\n\t\treturn Promise.resolve(this.channel.call<IExtensionsControlManifest>('getExtensionsControlManifest'));\n\t}\n\n\tasync download(extension: IGalleryExtension, operation: InstallOperation, donotVerifySignature: boolean): Promise<URI> {\n\t\tconst result = await this.channel.call<UriComponents>('download', [extension, operation, donotVerifySignature]);\n\t\treturn URI.revive(result);\n\t}\n\n\tasync cleanUp(): Promise<void> {\n\t\treturn this.channel.call('cleanUp');\n\t}\n\n\tregisterParticipant() { throw new Error('Not Supported'); }\n}\n\nexport class ExtensionTipsChannel implements IServerChannel {\n\n\tconstructor(private service: IExtensionTipsService) {\n\t}\n\n\tlisten(context: any, event: string): Event<any> {\n\t\tthrow new Error('Invalid listen');\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'getConfigBasedTips': return this.service.getConfigBasedTips(URI.revive(args[0]));\n\t\t\tcase 'getImportantExecutableBasedTips': return this.service.getImportantExecutableBasedTips();\n\t\t\tcase 'getOtherExecutableBasedTips': return this.service.getOtherExecutableBasedTips();\n\t\t}\n\n\t\tthrow new Error('Invalid call');\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
