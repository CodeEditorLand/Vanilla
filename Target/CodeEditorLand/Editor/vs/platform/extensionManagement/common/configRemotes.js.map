{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/extensionManagement/common/configRemotes.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from '../../../base/common/uri.js';\n\nconst SshProtocolMatcher = /^([^@:]+@)?([^:]+):/;\nconst SshUrlMatcher = /^([^@:]+@)?([^:]+):(.+)$/;\nconst AuthorityMatcher = /^([^@]+@)?([^:]+)(:\\d+)?$/;\nconst SecondLevelDomainMatcher = /([^@:.]+\\.[^@:.]+)(:\\d+)?$/;\nconst RemoteMatcher = /^\\s*url\\s*=\\s*(.+\\S)\\s*$/mg;\nconst AnyButDot = /[^.]/g;\n\nexport const AllowedSecondLevelDomains = [\n\t'github.com',\n\t'bitbucket.org',\n\t'visualstudio.com',\n\t'gitlab.com',\n\t'heroku.com',\n\t'azurewebsites.net',\n\t'ibm.com',\n\t'amazon.com',\n\t'amazonaws.com',\n\t'cloudapp.net',\n\t'rhcloud.com',\n\t'google.com',\n\t'azure.com'\n];\n\nfunction stripLowLevelDomains(domain: string): string | null {\n\tconst match = domain.match(SecondLevelDomainMatcher);\n\treturn match ? match[1] : null;\n}\n\nfunction extractDomain(url: string): string | null {\n\tif (url.indexOf('://') === -1) {\n\t\tconst match = url.match(SshProtocolMatcher);\n\t\tif (match) {\n\t\t\treturn stripLowLevelDomains(match[2]);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\ttry {\n\t\tconst uri = URI.parse(url);\n\t\tif (uri.authority) {\n\t\t\treturn stripLowLevelDomains(uri.authority);\n\t\t}\n\t} catch (e) {\n\t\t// ignore invalid URIs\n\t}\n\treturn null;\n}\n\nexport function getDomainsOfRemotes(text: string, allowedDomains: readonly string[]): string[] {\n\tconst domains = new Set<string>();\n\tlet match: RegExpExecArray | null;\n\twhile (match = RemoteMatcher.exec(text)) {\n\t\tconst domain = extractDomain(match[1]);\n\t\tif (domain) {\n\t\t\tdomains.add(domain);\n\t\t}\n\t}\n\n\tconst allowedDomainsSet = new Set(allowedDomains);\n\treturn Array.from(domains)\n\t\t.map(key => allowedDomainsSet.has(key) ? key : key.replace(AnyButDot, 'a'));\n}\n\nfunction stripPort(authority: string): string | null {\n\tconst match = authority.match(AuthorityMatcher);\n\treturn match ? match[2] : null;\n}\n\nfunction normalizeRemote(host: string | null, path: string, stripEndingDotGit: boolean): string | null {\n\tif (host && path) {\n\t\tif (stripEndingDotGit && path.endsWith('.git')) {\n\t\t\tpath = path.substr(0, path.length - 4);\n\t\t}\n\t\treturn (path.indexOf('/') === 0) ? `${host}${path}` : `${host}/${path}`;\n\t}\n\treturn null;\n}\n\nfunction extractRemote(url: string, stripEndingDotGit: boolean): string | null {\n\tif (url.indexOf('://') === -1) {\n\t\tconst match = url.match(SshUrlMatcher);\n\t\tif (match) {\n\t\t\treturn normalizeRemote(match[2], match[3], stripEndingDotGit);\n\t\t}\n\t}\n\ttry {\n\t\tconst uri = URI.parse(url);\n\t\tif (uri.authority) {\n\t\t\treturn normalizeRemote(stripPort(uri.authority), uri.path, stripEndingDotGit);\n\t\t}\n\t} catch (e) {\n\t\t// ignore invalid URIs\n\t}\n\treturn null;\n}\n\nexport function getRemotes(text: string, stripEndingDotGit: boolean = false): string[] {\n\tconst remotes: string[] = [];\n\tlet match: RegExpExecArray | null;\n\twhile (match = RemoteMatcher.exec(text)) {\n\t\tconst remote = extractRemote(match[1], stripEndingDotGit);\n\t\tif (remote) {\n\t\t\tremotes.push(remote);\n\t\t}\n\t}\n\treturn remotes;\n}\n"],
  "mappings": ";;AAKA,SAAS,WAAW;AAEpB,MAAM,qBAAqB;AAC3B,MAAM,gBAAgB;AACtB,MAAM,mBAAmB;AACzB,MAAM,2BAA2B;AACjC,MAAM,gBAAgB;AACtB,MAAM,YAAY;AAEX,MAAM,4BAA4B;AAAA,EACxC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACD;AAEA,SAAS,qBAAqB,QAA+B;AAC5D,QAAM,QAAQ,OAAO,MAAM,wBAAwB;AACnD,SAAO,QAAQ,MAAM,CAAC,IAAI;AAC3B;AAHS;AAKT,SAAS,cAAc,KAA4B;AAClD,MAAI,IAAI,QAAQ,KAAK,MAAM,IAAI;AAC9B,UAAM,QAAQ,IAAI,MAAM,kBAAkB;AAC1C,QAAI,OAAO;AACV,aAAO,qBAAqB,MAAM,CAAC,CAAC;AAAA,IACrC,OAAO;AACN,aAAO;AAAA,IACR;AAAA,EACD;AACA,MAAI;AACH,UAAM,MAAM,IAAI,MAAM,GAAG;AACzB,QAAI,IAAI,WAAW;AAClB,aAAO,qBAAqB,IAAI,SAAS;AAAA,IAC1C;AAAA,EACD,SAAS,GAAG;AAAA,EAEZ;AACA,SAAO;AACR;AAlBS;AAoBF,SAAS,oBAAoB,MAAc,gBAA6C;AAC9F,QAAM,UAAU,oBAAI,IAAY;AAChC,MAAI;AACJ,SAAO,QAAQ,cAAc,KAAK,IAAI,GAAG;AACxC,UAAM,SAAS,cAAc,MAAM,CAAC,CAAC;AACrC,QAAI,QAAQ;AACX,cAAQ,IAAI,MAAM;AAAA,IACnB;AAAA,EACD;AAEA,QAAM,oBAAoB,IAAI,IAAI,cAAc;AAChD,SAAO,MAAM,KAAK,OAAO,EACvB,IAAI,SAAO,kBAAkB,IAAI,GAAG,IAAI,MAAM,IAAI,QAAQ,WAAW,GAAG,CAAC;AAC5E;AAbgB;AAehB,SAAS,UAAU,WAAkC;AACpD,QAAM,QAAQ,UAAU,MAAM,gBAAgB;AAC9C,SAAO,QAAQ,MAAM,CAAC,IAAI;AAC3B;AAHS;AAKT,SAAS,gBAAgB,MAAqB,MAAc,mBAA2C;AACtG,MAAI,QAAQ,MAAM;AACjB,QAAI,qBAAqB,KAAK,SAAS,MAAM,GAAG;AAC/C,aAAO,KAAK,OAAO,GAAG,KAAK,SAAS,CAAC;AAAA,IACtC;AACA,WAAQ,KAAK,QAAQ,GAAG,MAAM,IAAK,GAAG,IAAI,GAAG,IAAI,KAAK,GAAG,IAAI,IAAI,IAAI;AAAA,EACtE;AACA,SAAO;AACR;AARS;AAUT,SAAS,cAAc,KAAa,mBAA2C;AAC9E,MAAI,IAAI,QAAQ,KAAK,MAAM,IAAI;AAC9B,UAAM,QAAQ,IAAI,MAAM,aAAa;AACrC,QAAI,OAAO;AACV,aAAO,gBAAgB,MAAM,CAAC,GAAG,MAAM,CAAC,GAAG,iBAAiB;AAAA,IAC7D;AAAA,EACD;AACA,MAAI;AACH,UAAM,MAAM,IAAI,MAAM,GAAG;AACzB,QAAI,IAAI,WAAW;AAClB,aAAO,gBAAgB,UAAU,IAAI,SAAS,GAAG,IAAI,MAAM,iBAAiB;AAAA,IAC7E;AAAA,EACD,SAAS,GAAG;AAAA,EAEZ;AACA,SAAO;AACR;AAhBS;AAkBF,SAAS,WAAW,MAAc,oBAA6B,OAAiB;AACtF,QAAM,UAAoB,CAAC;AAC3B,MAAI;AACJ,SAAO,QAAQ,cAAc,KAAK,IAAI,GAAG;AACxC,UAAM,SAAS,cAAc,MAAM,CAAC,GAAG,iBAAiB;AACxD,QAAI,QAAQ;AACX,cAAQ,KAAK,MAAM;AAAA,IACpB;AAAA,EACD;AACA,SAAO;AACR;AAVgB;",
  "names": []
}
