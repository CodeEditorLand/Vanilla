{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/extensionManagement/node/extensionsManifestCache.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { DidUninstallExtensionEvent, IExtensionManagementService, InstallExtensionResult } from '../common/extensionManagement.js';\nimport { USER_MANIFEST_CACHE_FILE } from '../../extensions/common/extensions.js';\nimport { FileOperationResult, IFileService, toFileOperationResult } from '../../files/common/files.js';\nimport { ILogService } from '../../log/common/log.js';\nimport { IUriIdentityService } from '../../uriIdentity/common/uriIdentity.js';\nimport { IUserDataProfile, IUserDataProfilesService } from '../../userDataProfile/common/userDataProfile.js';\n\nexport class ExtensionsManifestCache extends Disposable {\n\n\tconstructor(\n\t\tprivate readonly userDataProfilesService: IUserDataProfilesService,\n\t\tprivate readonly fileService: IFileService,\n\t\tprivate readonly uriIdentityService: IUriIdentityService,\n\t\textensionsManagementService: IExtensionManagementService,\n\t\tprivate readonly logService: ILogService,\n\t) {\n\t\tsuper();\n\t\tthis._register(extensionsManagementService.onDidInstallExtensions(e => this.onDidInstallExtensions(e)));\n\t\tthis._register(extensionsManagementService.onDidUninstallExtension(e => this.onDidUnInstallExtension(e)));\n\t}\n\n\tprivate onDidInstallExtensions(results: readonly InstallExtensionResult[]): void {\n\t\tfor (const r of results) {\n\t\t\tif (r.local) {\n\t\t\t\tthis.invalidate(r.profileLocation);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onDidUnInstallExtension(e: DidUninstallExtensionEvent): void {\n\t\tif (!e.error) {\n\t\t\tthis.invalidate(e.profileLocation);\n\t\t}\n\t}\n\n\tasync invalidate(extensionsManifestLocation: URI | undefined): Promise<void> {\n\t\tif (extensionsManifestLocation) {\n\t\t\tfor (const profile of this.userDataProfilesService.profiles) {\n\t\t\t\tif (this.uriIdentityService.extUri.isEqual(profile.extensionsResource, extensionsManifestLocation)) {\n\t\t\t\t\tawait this.deleteUserCacheFile(profile);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tawait this.deleteUserCacheFile(this.userDataProfilesService.defaultProfile);\n\t\t}\n\t}\n\n\tprivate async deleteUserCacheFile(profile: IUserDataProfile): Promise<void> {\n\t\ttry {\n\t\t\tawait this.fileService.del(this.uriIdentityService.extUri.joinPath(profile.cacheHome, USER_MANIFEST_CACHE_FILE));\n\t\t} catch (error) {\n\t\t\tif (toFileOperationResult(error) !== FileOperationResult.FILE_NOT_FOUND) {\n\t\t\t\tthis.logService.error(error);\n\t\t\t}\n\t\t}\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,kBAAkB;AAC3B,SAAS,WAAW;AACpB,SAAS,4BAA4B,6BAA6B,8BAA8B;AAChG,SAAS,gCAAgC;AACzC,SAAS,qBAAqB,cAAc,6BAA6B;AACzE,SAAS,mBAAmB;AAC5B,SAAS,2BAA2B;AACpC,SAAS,kBAAkB,gCAAgC;AAEpD,MAAM,gCAAgC,WAAW;AAAA,EAEvD,YACkB,yBACA,aACA,oBACjB,6BACiB,YAChB;AACD,UAAM;AANW;AACA;AACA;AAEA;AAGjB,SAAK,UAAU,4BAA4B,uBAAuB,OAAK,KAAK,uBAAuB,CAAC,CAAC,CAAC;AACtG,SAAK,UAAU,4BAA4B,wBAAwB,OAAK,KAAK,wBAAwB,CAAC,CAAC,CAAC;AAAA,EACzG;AAAA,EA1BD,OAcwD;AAAA;AAAA;AAAA,EAc/C,uBAAuB,SAAkD;AAChF,eAAW,KAAK,SAAS;AACxB,UAAI,EAAE,OAAO;AACZ,aAAK,WAAW,EAAE,eAAe;AAAA,MAClC;AAAA,IACD;AAAA,EACD;AAAA,EAEQ,wBAAwB,GAAqC;AACpE,QAAI,CAAC,EAAE,OAAO;AACb,WAAK,WAAW,EAAE,eAAe;AAAA,IAClC;AAAA,EACD;AAAA,EAEA,MAAM,WAAW,4BAA4D;AAC5E,QAAI,4BAA4B;AAC/B,iBAAW,WAAW,KAAK,wBAAwB,UAAU;AAC5D,YAAI,KAAK,mBAAmB,OAAO,QAAQ,QAAQ,oBAAoB,0BAA0B,GAAG;AACnG,gBAAM,KAAK,oBAAoB,OAAO;AAAA,QACvC;AAAA,MACD;AAAA,IACD,OAAO;AACN,YAAM,KAAK,oBAAoB,KAAK,wBAAwB,cAAc;AAAA,IAC3E;AAAA,EACD;AAAA,EAEA,MAAc,oBAAoB,SAA0C;AAC3E,QAAI;AACH,YAAM,KAAK,YAAY,IAAI,KAAK,mBAAmB,OAAO,SAAS,QAAQ,WAAW,wBAAwB,CAAC;AAAA,IAChH,SAAS,OAAO;AACf,UAAI,sBAAsB,KAAK,MAAM,oBAAoB,gBAAgB;AACxE,aAAK,WAAW,MAAM,KAAK;AAAA,MAC5B;AAAA,IACD;AAAA,EACD;AACD;",
  "names": []
}
