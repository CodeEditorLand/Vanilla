{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/extensionManagement/node/extensionManagementUtil.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { buffer, ExtractError } from \"../../../base/node/zip.js\";\nimport { localize } from \"../../../nls.js\";\nimport type { IExtensionManifest } from \"../../extensions/common/extensions.js\";\nimport { toExtensionManagementError } from \"../common/abstractExtensionManagementService.js\";\nimport {\n\tExtensionManagementError,\n\tExtensionManagementErrorCode,\n} from \"../common/extensionManagement.js\";\n\nexport function fromExtractError(e: Error): ExtensionManagementError {\n\tlet errorCode = ExtensionManagementErrorCode.Extract;\n\tif (e instanceof ExtractError) {\n\t\tif (e.type === \"CorruptZip\") {\n\t\t\terrorCode = ExtensionManagementErrorCode.CorruptZip;\n\t\t} else if (e.type === \"Incomplete\") {\n\t\t\terrorCode = ExtensionManagementErrorCode.IncompleteZip;\n\t\t}\n\t}\n\treturn toExtensionManagementError(e, errorCode);\n}\n\nexport async function getManifest(\n\tvsixPath: string,\n): Promise<IExtensionManifest> {\n\tlet data;\n\ttry {\n\t\tdata = await buffer(vsixPath, \"extension/package.json\");\n\t} catch (e) {\n\t\tthrow fromExtractError(e);\n\t}\n\n\ttry {\n\t\treturn JSON.parse(data.toString(\"utf8\"));\n\t} catch (err) {\n\t\tthrow new ExtensionManagementError(\n\t\t\tlocalize(\n\t\t\t\t\"invalidManifest\",\n\t\t\t\t\"VSIX invalid: package.json is not a JSON file.\",\n\t\t\t),\n\t\t\tExtensionManagementErrorCode.Invalid,\n\t\t);\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,QAAQ,oBAAoB;AACrC,SAAS,gBAAgB;AAEzB,SAAS,kCAAkC;AAC3C;AAAA,EACC;AAAA,EACA;AAAA,OACM;AAEA,SAAS,iBAAiB,GAAoC;AACpE,MAAI,YAAY,6BAA6B;AAC7C,MAAI,aAAa,cAAc;AAC9B,QAAI,EAAE,SAAS,cAAc;AAC5B,kBAAY,6BAA6B;AAAA,IAC1C,WAAW,EAAE,SAAS,cAAc;AACnC,kBAAY,6BAA6B;AAAA,IAC1C;AAAA,EACD;AACA,SAAO,2BAA2B,GAAG,SAAS;AAC/C;AAVgB;AAYhB,eAAsB,YACrB,UAC8B;AAC9B,MAAI;AACJ,MAAI;AACH,WAAO,MAAM,OAAO,UAAU,wBAAwB;AAAA,EACvD,SAAS,GAAG;AACX,UAAM,iBAAiB,CAAC;AAAA,EACzB;AAEA,MAAI;AACH,WAAO,KAAK,MAAM,KAAK,SAAS,MAAM,CAAC;AAAA,EACxC,SAAS,KAAK;AACb,UAAM,IAAI;AAAA,MACT;AAAA,QACC;AAAA,QACA;AAAA,MACD;AAAA,MACA,6BAA6B;AAAA,IAC9B;AAAA,EACD;AACD;AArBsB;",
  "names": []
}
