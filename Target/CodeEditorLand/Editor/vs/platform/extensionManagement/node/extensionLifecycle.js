var P=Object.defineProperty;var E=Object.getOwnPropertyDescriptor;var h=(f,s,t,r)=>{for(var e=r>1?void 0:r?E(s,t):s,o=f.length-1,n;o>=0;o--)(n=f[o])&&(e=(r?n(s,t,e):n(e))||e);return r&&e&&P(s,t,e),e},v=(f,s)=>(t,r)=>s(t,r,f);import{fork as L}from"child_process";import{Limiter as w}from"../../../base/common/async.js";import{toErrorMessage as I}from"../../../base/common/errorMessage.js";import{Event as l}from"../../../base/common/event.js";import{Disposable as $}from"../../../base/common/lifecycle.js";import{Schemas as b}from"../../../base/common/network.js";import{join as S}from"../../../base/common/path.js";import{Promises as D}from"../../../base/node/pfs.js";import"../common/extensionManagement.js";import{ILogService as k}from"../../log/common/log.js";import{IUserDataProfilesService as y}from"../../userDataProfile/common/userDataProfile.js";let p=class extends ${constructor(t,r){super();this.userDataProfilesService=t;this.logService=r}processesLimiter=new w(5);async postUninstall(t){const r=this.parseScript(t,"uninstall");r&&(this.logService.info(t.identifier.id,t.manifest.version,"Running post uninstall script"),await this.processesLimiter.queue(async()=>{try{await this.runLifecycleHook(r.script,"uninstall",r.args,!0,t),this.logService.info("Finished running post uninstall script",t.identifier.id,t.manifest.version)}catch(e){this.logService.error("Failed to run post uninstall script",t.identifier.id,t.manifest.version),this.logService.error(e)}}));try{await D.rm(this.getExtensionStoragePath(t))}catch(e){this.logService.error("Error while removing extension storage path",t.identifier.id),this.logService.error(e)}}parseScript(t,r){const e=`vscode:${r}`;if(t.location.scheme===b.file&&t.manifest&&t.manifest.scripts&&typeof t.manifest.scripts[e]=="string"){const o=t.manifest.scripts[e].split(" ");return o.length<2||o[0]!=="node"||!o[1]?(this.logService.warn(t.identifier.id,t.manifest.version,`${e} should be a node script`),null):{script:S(t.location.fsPath,o[1]),args:o.slice(2)||[]}}return null}runLifecycleHook(t,r,e,o,n){return new Promise((a,m)=>{const d=this.start(t,r,e,n);let c;const g=i=>{c&&(clearTimeout(c),c=null),i?m(i):a(void 0)};d.on("error",i=>{g(I(i)||"Unknown")}),d.on("exit",(i,u)=>{g(i?`post-${r} process exited with code ${i}`:void 0)}),o&&(c=setTimeout(()=>{c=null,d.kill(),m("timed out")},5e3))})}start(t,r,e,o){const n={silent:!0,execArgv:void 0},a=L(t,[`--type=extension-post-${r}`,...e],n);a.stdout.setEncoding("utf8"),a.stderr.setEncoding("utf8");const m=l.fromNodeEventEmitter(a.stdout,"data"),d=l.fromNodeEventEmitter(a.stderr,"data");this._register(m(i=>this.logService.info(o.identifier.id,o.manifest.version,`post-${r}`,i))),this._register(d(i=>this.logService.error(o.identifier.id,o.manifest.version,`post-${r}`,i)));const c=l.any(l.map(m,i=>({data:`%c${i}`,format:[""]}),this._store),l.map(d,i=>({data:`%c${i}`,format:["color: red"]}),this._store));return l.debounce(c,(i,u)=>i?{data:i.data+u.data,format:[...i.format,...u.format]}:{data:u.data,format:u.format},100,void 0,void 0,void 0,this._store)(i=>{}),a}getExtensionStoragePath(t){return S(this.userDataProfilesService.defaultProfile.globalStorageHome.fsPath,t.identifier.id.toLowerCase())}};p=h([v(0,y),v(1,k)],p);export{p as ExtensionsLifecycle};
