{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/extensionManagement/node/extensionLifecycle.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ChildProcess, fork } from 'child_process';\nimport { Limiter } from '../../../base/common/async.js';\nimport { toErrorMessage } from '../../../base/common/errorMessage.js';\nimport { Event } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { join } from '../../../base/common/path.js';\nimport { Promises } from '../../../base/node/pfs.js';\nimport { ILocalExtension } from '../common/extensionManagement.js';\nimport { ILogService } from '../../log/common/log.js';\nimport { IUserDataProfilesService } from '../../userDataProfile/common/userDataProfile.js';\n\nexport class ExtensionsLifecycle extends Disposable {\n\n\tprivate processesLimiter: Limiter<void> = new Limiter(5); // Run max 5 processes in parallel\n\n\tconstructor(\n\t\t@IUserDataProfilesService private userDataProfilesService: IUserDataProfilesService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t}\n\n\tasync postUninstall(extension: ILocalExtension): Promise<void> {\n\t\tconst script = this.parseScript(extension, 'uninstall');\n\t\tif (script) {\n\t\t\tthis.logService.info(extension.identifier.id, extension.manifest.version, `Running post uninstall script`);\n\t\t\tawait this.processesLimiter.queue(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.runLifecycleHook(script.script, 'uninstall', script.args, true, extension);\n\t\t\t\t\tthis.logService.info(`Finished running post uninstall script`, extension.identifier.id, extension.manifest.version);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.error('Failed to run post uninstall script', extension.identifier.id, extension.manifest.version);\n\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\ttry {\n\t\t\tawait Promises.rm(this.getExtensionStoragePath(extension));\n\t\t} catch (error) {\n\t\t\tthis.logService.error('Error while removing extension storage path', extension.identifier.id);\n\t\t\tthis.logService.error(error);\n\t\t}\n\t}\n\n\tprivate parseScript(extension: ILocalExtension, type: string): { script: string; args: string[] } | null {\n\t\tconst scriptKey = `vscode:${type}`;\n\t\tif (extension.location.scheme === Schemas.file && extension.manifest && extension.manifest['scripts'] && typeof extension.manifest['scripts'][scriptKey] === 'string') {\n\t\t\tconst script = (<string>extension.manifest['scripts'][scriptKey]).split(' ');\n\t\t\tif (script.length < 2 || script[0] !== 'node' || !script[1]) {\n\t\t\t\tthis.logService.warn(extension.identifier.id, extension.manifest.version, `${scriptKey} should be a node script`);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn { script: join(extension.location.fsPath, script[1]), args: script.slice(2) || [] };\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate runLifecycleHook(lifecycleHook: string, lifecycleType: string, args: string[], timeout: boolean, extension: ILocalExtension): Promise<void> {\n\t\treturn new Promise<void>((c, e) => {\n\n\t\t\tconst extensionLifecycleProcess = this.start(lifecycleHook, lifecycleType, args, extension);\n\t\t\tlet timeoutHandler: any;\n\n\t\t\tconst onexit = (error?: string) => {\n\t\t\t\tif (timeoutHandler) {\n\t\t\t\t\tclearTimeout(timeoutHandler);\n\t\t\t\t\ttimeoutHandler = null;\n\t\t\t\t}\n\t\t\t\tif (error) {\n\t\t\t\t\te(error);\n\t\t\t\t} else {\n\t\t\t\t\tc(undefined);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// on error\n\t\t\textensionLifecycleProcess.on('error', (err) => {\n\t\t\t\tonexit(toErrorMessage(err) || 'Unknown');\n\t\t\t});\n\n\t\t\t// on exit\n\t\t\textensionLifecycleProcess.on('exit', (code: number, signal: string) => {\n\t\t\t\tonexit(code ? `post-${lifecycleType} process exited with code ${code}` : undefined);\n\t\t\t});\n\n\t\t\tif (timeout) {\n\t\t\t\t// timeout: kill process after waiting for 5s\n\t\t\t\ttimeoutHandler = setTimeout(() => {\n\t\t\t\t\ttimeoutHandler = null;\n\t\t\t\t\textensionLifecycleProcess.kill();\n\t\t\t\t\te('timed out');\n\t\t\t\t}, 5000);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate start(uninstallHook: string, lifecycleType: string, args: string[], extension: ILocalExtension): ChildProcess {\n\t\tconst opts = {\n\t\t\tsilent: true,\n\t\t\texecArgv: undefined\n\t\t};\n\t\tconst extensionUninstallProcess = fork(uninstallHook, [`--type=extension-post-${lifecycleType}`, ...args], opts);\n\n\t\t// Catch all output coming from the process\n\t\ttype Output = { data: string; format: string[] };\n\t\textensionUninstallProcess.stdout!.setEncoding('utf8');\n\t\textensionUninstallProcess.stderr!.setEncoding('utf8');\n\n\t\tconst onStdout = Event.fromNodeEventEmitter<string>(extensionUninstallProcess.stdout!, 'data');\n\t\tconst onStderr = Event.fromNodeEventEmitter<string>(extensionUninstallProcess.stderr!, 'data');\n\n\t\t// Log output\n\t\tthis._register(onStdout(data => this.logService.info(extension.identifier.id, extension.manifest.version, `post-${lifecycleType}`, data)));\n\t\tthis._register(onStderr(data => this.logService.error(extension.identifier.id, extension.manifest.version, `post-${lifecycleType}`, data)));\n\n\t\tconst onOutput = Event.any(\n\t\t\tEvent.map(onStdout, o => ({ data: `%c${o}`, format: [''] }), this._store),\n\t\t\tEvent.map(onStderr, o => ({ data: `%c${o}`, format: ['color: red'] }), this._store)\n\t\t);\n\t\t// Debounce all output, so we can render it in the Chrome console as a group\n\t\tconst onDebouncedOutput = Event.debounce<Output>(onOutput, (r, o) => {\n\t\t\treturn r\n\t\t\t\t? { data: r.data + o.data, format: [...r.format, ...o.format] }\n\t\t\t\t: { data: o.data, format: o.format };\n\t\t}, 100, undefined, undefined, undefined, this._store);\n\n\t\t// Print out output\n\t\tonDebouncedOutput(data => {\n\t\t\tconsole.group(extension.identifier.id);\n\t\t\tconsole.log(data.data, ...data.format);\n\t\t\tconsole.groupEnd();\n\t\t});\n\n\t\treturn extensionUninstallProcess;\n\t}\n\n\tprivate getExtensionStoragePath(extension: ILocalExtension): string {\n\t\treturn join(this.userDataProfilesService.defaultProfile.globalStorageHome.fsPath, extension.identifier.id.toLowerCase());\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,cAAc,YAAY;AACnC,SAAS,eAAe;AACxB,SAAS,sBAAsB;AAC/B,SAAS,aAAa;AACtB,SAAS,kBAAkB;AAC3B,SAAS,eAAe;AACxB,SAAS,YAAY;AACrB,SAAS,gBAAgB;AACzB,SAAS,uBAAuB;AAChC,SAAS,mBAAmB;AAC5B,SAAS,gCAAgC;AAElC,IAAM,sBAAN,cAAkC,WAAW;AAAA;AAAA,EAInD,YACmC,yBACJ,YAC7B;AACD,UAAM;AAH4B;AACJ;AAAA,EAG/B;AAAA,EA1BD,OAiBoD;AAAA;AAAA;AAAA,EAE3C,mBAAkC,IAAI,QAAQ,CAAC;AAAA,EASvD,MAAM,cAAc,WAA2C;AAC9D,UAAM,SAAS,KAAK,YAAY,WAAW,WAAW;AACtD,QAAI,QAAQ;AACX,WAAK,WAAW,KAAK,UAAU,WAAW,IAAI,UAAU,SAAS,SAAS,+BAA+B;AACzG,YAAM,KAAK,iBAAiB,MAAM,YAAY;AAC7C,YAAI;AACH,gBAAM,KAAK,iBAAiB,OAAO,QAAQ,aAAa,OAAO,MAAM,MAAM,SAAS;AACpF,eAAK,WAAW,KAAK,0CAA0C,UAAU,WAAW,IAAI,UAAU,SAAS,OAAO;AAAA,QACnH,SAAS,OAAO;AACf,eAAK,WAAW,MAAM,uCAAuC,UAAU,WAAW,IAAI,UAAU,SAAS,OAAO;AAChH,eAAK,WAAW,MAAM,KAAK;AAAA,QAC5B;AAAA,MACD,CAAC;AAAA,IACF;AACA,QAAI;AACH,YAAM,SAAS,GAAG,KAAK,wBAAwB,SAAS,CAAC;AAAA,IAC1D,SAAS,OAAO;AACf,WAAK,WAAW,MAAM,+CAA+C,UAAU,WAAW,EAAE;AAC5F,WAAK,WAAW,MAAM,KAAK;AAAA,IAC5B;AAAA,EACD;AAAA,EAEQ,YAAY,WAA4B,MAAyD;AACxG,UAAM,YAAY,UAAU,IAAI;AAChC,QAAI,UAAU,SAAS,WAAW,QAAQ,QAAQ,UAAU,YAAY,UAAU,SAAS,SAAS,KAAK,OAAO,UAAU,SAAS,SAAS,EAAE,SAAS,MAAM,UAAU;AACtK,YAAM,SAAkB,UAAU,SAAS,SAAS,EAAE,SAAS,EAAG,MAAM,GAAG;AAC3E,UAAI,OAAO,SAAS,KAAK,OAAO,CAAC,MAAM,UAAU,CAAC,OAAO,CAAC,GAAG;AAC5D,aAAK,WAAW,KAAK,UAAU,WAAW,IAAI,UAAU,SAAS,SAAS,GAAG,SAAS,0BAA0B;AAChH,eAAO;AAAA,MACR;AACA,aAAO,EAAE,QAAQ,KAAK,UAAU,SAAS,QAAQ,OAAO,CAAC,CAAC,GAAG,MAAM,OAAO,MAAM,CAAC,KAAK,CAAC,EAAE;AAAA,IAC1F;AACA,WAAO;AAAA,EACR;AAAA,EAEQ,iBAAiB,eAAuB,eAAuB,MAAgB,SAAkB,WAA2C;AACnJ,WAAO,IAAI,QAAc,CAAC,GAAG,MAAM;AAElC,YAAM,4BAA4B,KAAK,MAAM,eAAe,eAAe,MAAM,SAAS;AAC1F,UAAI;AAEJ,YAAM,SAAS,wBAAC,UAAmB;AAClC,YAAI,gBAAgB;AACnB,uBAAa,cAAc;AAC3B,2BAAiB;AAAA,QAClB;AACA,YAAI,OAAO;AACV,YAAE,KAAK;AAAA,QACR,OAAO;AACN,YAAE,MAAS;AAAA,QACZ;AAAA,MACD,GAVe;AAaf,gCAA0B,GAAG,SAAS,CAAC,QAAQ;AAC9C,eAAO,eAAe,GAAG,KAAK,SAAS;AAAA,MACxC,CAAC;AAGD,gCAA0B,GAAG,QAAQ,CAAC,MAAc,WAAmB;AACtE,eAAO,OAAO,QAAQ,aAAa,6BAA6B,IAAI,KAAK,MAAS;AAAA,MACnF,CAAC;AAED,UAAI,SAAS;AAEZ,yBAAiB,WAAW,MAAM;AACjC,2BAAiB;AACjB,oCAA0B,KAAK;AAC/B,YAAE,WAAW;AAAA,QACd,GAAG,GAAI;AAAA,MACR;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEQ,MAAM,eAAuB,eAAuB,MAAgB,WAA0C;AACrH,UAAM,OAAO;AAAA,MACZ,QAAQ;AAAA,MACR,UAAU;AAAA,IACX;AACA,UAAM,4BAA4B,KAAK,eAAe,CAAC,yBAAyB,aAAa,IAAI,GAAG,IAAI,GAAG,IAAI;AAI/G,8BAA0B,OAAQ,YAAY,MAAM;AACpD,8BAA0B,OAAQ,YAAY,MAAM;AAEpD,UAAM,WAAW,MAAM,qBAA6B,0BAA0B,QAAS,MAAM;AAC7F,UAAM,WAAW,MAAM,qBAA6B,0BAA0B,QAAS,MAAM;AAG7F,SAAK,UAAU,SAAS,UAAQ,KAAK,WAAW,KAAK,UAAU,WAAW,IAAI,UAAU,SAAS,SAAS,QAAQ,aAAa,IAAI,IAAI,CAAC,CAAC;AACzI,SAAK,UAAU,SAAS,UAAQ,KAAK,WAAW,MAAM,UAAU,WAAW,IAAI,UAAU,SAAS,SAAS,QAAQ,aAAa,IAAI,IAAI,CAAC,CAAC;AAE1I,UAAM,WAAW,MAAM;AAAA,MACtB,MAAM,IAAI,UAAU,QAAM,EAAE,MAAM,KAAK,CAAC,IAAI,QAAQ,CAAC,EAAE,EAAE,IAAI,KAAK,MAAM;AAAA,MACxE,MAAM,IAAI,UAAU,QAAM,EAAE,MAAM,KAAK,CAAC,IAAI,QAAQ,CAAC,YAAY,EAAE,IAAI,KAAK,MAAM;AAAA,IACnF;AAEA,UAAM,oBAAoB,MAAM,SAAiB,UAAU,CAAC,GAAG,MAAM;AACpE,aAAO,IACJ,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,QAAQ,CAAC,GAAG,EAAE,QAAQ,GAAG,EAAE,MAAM,EAAE,IAC5D,EAAE,MAAM,EAAE,MAAM,QAAQ,EAAE,OAAO;AAAA,IACrC,GAAG,KAAK,QAAW,QAAW,QAAW,KAAK,MAAM;AAGpD,sBAAkB,UAAQ;AACzB,cAAQ,MAAM,UAAU,WAAW,EAAE;AACrC,cAAQ,IAAI,KAAK,MAAM,GAAG,KAAK,MAAM;AACrC,cAAQ,SAAS;AAAA,IAClB,CAAC;AAED,WAAO;AAAA,EACR;AAAA,EAEQ,wBAAwB,WAAoC;AACnE,WAAO,KAAK,KAAK,wBAAwB,eAAe,kBAAkB,QAAQ,UAAU,WAAW,GAAG,YAAY,CAAC;AAAA,EACxH;AACD;AAhIa,sBAAN;AAAA,EAKJ;AAAA,EACA;AAAA,GANU;",
  "names": []
}
