var p=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var c=(a,e,o,r)=>{for(var t=r>1?void 0:r?y(e,o):e,s=a.length-1,i;s>=0;s--)(i=a[s])&&(t=(r?i(e,o,t):i(t))||t);return r&&t&&p(e,o,t),t},l=(a,e)=>(o,r)=>e(o,r,a);import{createWebWorker as f}from"../../../base/browser/defaultWorkerFactory.js";import"../../../base/common/uri.js";import"../../../base/common/worker/simpleWorker.js";import{InstantiationType as g,registerSingleton as I}from"../../instantiation/common/extensions.js";import{createDecorator as d}from"../../instantiation/common/instantiation.js";import{ILogService as u}from"../../log/common/log.js";import{ITelemetryService as P}from"../../telemetry/common/telemetry.js";import"../common/profiling.js";import"../common/profilingModel.js";import{reportSample as v}from"../common/profilingTelemetrySpec.js";var U=(r=>(r[r.Failure=0]="Failure",r[r.Irrelevant=1]="Irrelevant",r[r.Interesting=2]="Interesting",r))(U||{});const S=d("IProfileAnalysisWorkerService");let n=class{constructor(e,o){this._telemetryService=e;this._logService=o}async _withWorker(e){const o=f("vs/platform/profiling/electron-sandbox/profileAnalysisWorker","CpuProfileAnalysisWorker");try{return await e(o.proxy)}finally{o.dispose()}}async analyseBottomUp(e,o,r,t){return this._withWorker(async s=>{const i=await s.$analyseBottomUp(e);if(i.kind===2)for(const m of i.samples)v({sample:m,perfBaseline:r,source:o(m.url)},this._telemetryService,this._logService,t);return i.kind})}async analyseByLocation(e,o){return this._withWorker(async r=>await r.$analyseByUrlCategory(e,o))}};n=c([l(0,P),l(1,u)],n),I(S,n,g.Delayed);export{S as IProfileAnalysisWorkerService,U as ProfilingOutput};
