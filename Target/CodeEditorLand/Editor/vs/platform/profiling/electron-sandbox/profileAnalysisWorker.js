import{basename as b}from"../../../base/common/path.js";import{TernarySearchTree as I}from"../../../base/common/ternarySearchTree.js";import{URI as h}from"../../../base/common/uri.js";import"../../../base/common/worker/simpleWorker.js";import{Utils as y}from"../common/profiling.js";import{BottomUpNode as T,buildModel as p,processNode as N}from"../common/profilingModel.js";import{ProfilingOutput as f}from"./profileAnalysisWorkerService.js";function $(e){return new S}class S{_requestHandlerBrand;$analyseBottomUp(o){if(!y.isValidProfile(o))return{kind:f.Irrelevant,samples:[]};const n=p(o),l=U(n,5).filter(t=>!t.isSpecial);return l.length===0||l[0].percentage<10?{kind:f.Irrelevant,samples:[]}:{kind:f.Interesting,samples:l}}$analyseByUrlCategory(o,n){const l=I.forUris();l.fill(n);const t=p(o),a=new Map;for(const i of t.nodes){const c=t.locations[i.locationId];let u;try{u=l.findSubstr(h.parse(c.callFrame.url))}catch{}u||(u=d(c.callFrame));const m=(a.get(u)??0)+i.selfTime;a.set(u,m)}const r=[];for(const[i,c]of a)r.push([i,c]);return r}}function k(e){return e.functionName.startsWith("(")&&e.functionName.endsWith(")")}function d(e){let o=e.functionName||"(anonymous)";return e.url&&(o+="#",o+=b(e.url),e.lineNumber>=0&&(o+=":",o+=e.lineNumber+1),e.columnNumber>=0&&(o+=":",o+=e.columnNumber+1)),o}function g(e){let o=e.functionName||"(anonymous)";return e.url&&(o+=" (",o+=e.url,e.lineNumber>=0&&(o+=":",o+=e.lineNumber+1),e.columnNumber>=0&&(o+=":",o+=e.columnNumber+1),o+=")"),o}function F(e,o){const n={};for(const t of e.nodes)n[t.locationId]=(n[t.locationId]||0)+t.selfTime;const l=Object.entries(n).sort(([,t],[,a])=>a-t).slice(0,o).map(([t])=>Number(t));return new Set(l)}function U(e,o){const n=T.root(),l=F(e,o);for(const r of e.nodes)l.has(r.locationId)&&(N(n,r,e),n.addNode(r));const t=Object.values(n.children).sort((r,i)=>i.selfTime-r.selfTime).slice(0,o),a=[];for(const r of t){const i={selfTime:Math.round(r.selfTime/1e3),totalTime:Math.round(r.aggregateTime/1e3),location:d(r.callFrame),absLocation:g(r.callFrame),url:r.callFrame.url,caller:[],percentage:Math.round(r.selfTime/(e.duration/100)),isSpecial:k(r.callFrame)},c=[r];for(;c.length;){const u=c.pop();let s;for(const m of Object.values(u.children))(!s||s.selfTime<m.selfTime)&&(s=m);if(s){const m=Math.round(s.selfTime/(u.selfTime/100));i.caller.push({percentage:m,location:d(s.callFrame),absLocation:g(s.callFrame)}),c.push(s)}}a.push(i)}return a}export{$ as create};
