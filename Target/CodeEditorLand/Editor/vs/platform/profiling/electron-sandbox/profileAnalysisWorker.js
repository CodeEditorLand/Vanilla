import{basename as b}from"../../../base/common/path.js";import{TernarySearchTree as y}from"../../../base/common/ternarySearchTree.js";import{URI as I}from"../../../base/common/uri.js";import{Utils as h}from"../common/profiling.js";import{BottomUpNode as T,buildModel as d,processNode as k}from"../common/profilingModel.js";import{ProfilingOutput as f}from"./profileAnalysisWorkerService.js";function w(e){return new N}class N{_requestHandlerBrand;$analyseBottomUp(o){if(!h.isValidProfile(o))return{kind:f.Irrelevant,samples:[]};const n=d(o),l=U(n,5).filter(r=>!r.isSpecial);return l.length===0||l[0].percentage<10?{kind:f.Irrelevant,samples:[]}:{kind:f.Interesting,samples:l}}$analyseByUrlCategory(o,n){const l=y.forUris();l.fill(n);const r=d(o),a=new Map;for(const s of r.nodes){const c=r.locations[s.locationId];let m;try{m=l.findSubstr(I.parse(c.callFrame.url))}catch{}m||(m=p(c.callFrame));const u=(a.get(m)??0)+s.selfTime;a.set(m,u)}const t=[];for(const[s,c]of a)t.push([s,c]);return t}}function S(e){return e.functionName.startsWith("(")&&e.functionName.endsWith(")")}function p(e){let o=e.functionName||"(anonymous)";return e.url&&(o+="#",o+=b(e.url),e.lineNumber>=0&&(o+=":",o+=e.lineNumber+1),e.columnNumber>=0&&(o+=":",o+=e.columnNumber+1)),o}function g(e){let o=e.functionName||"(anonymous)";return e.url&&(o+=" (",o+=e.url,e.lineNumber>=0&&(o+=":",o+=e.lineNumber+1),e.columnNumber>=0&&(o+=":",o+=e.columnNumber+1),o+=")"),o}function F(e,o){const n={};for(const r of e.nodes)n[r.locationId]=(n[r.locationId]||0)+r.selfTime;const l=Object.entries(n).sort(([,r],[,a])=>a-r).slice(0,o).map(([r])=>Number(r));return new Set(l)}function U(e,o){const n=T.root(),l=F(e,o);for(const t of e.nodes)l.has(t.locationId)&&(k(n,t,e),n.addNode(t));const r=Object.values(n.children).sort((t,s)=>s.selfTime-t.selfTime).slice(0,o),a=[];for(const t of r){const s={selfTime:Math.round(t.selfTime/1e3),totalTime:Math.round(t.aggregateTime/1e3),location:p(t.callFrame),absLocation:g(t.callFrame),url:t.callFrame.url,caller:[],percentage:Math.round(t.selfTime/(e.duration/100)),isSpecial:S(t.callFrame)},c=[t];for(;c.length;){const m=c.pop();let i;for(const u of Object.values(m.children))(!i||i.selfTime<u.selfTime)&&(i=u);if(i){const u=Math.round(i.selfTime/(m.selfTime/100));s.caller.push({percentage:u,location:p(i.callFrame),absLocation:g(i.callFrame)}),c.push(i)}}a.push(s)}return a}export{w as create};
