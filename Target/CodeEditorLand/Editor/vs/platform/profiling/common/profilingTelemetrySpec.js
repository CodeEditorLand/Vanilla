import{errorHandler as i}from"../../../base/common/errors.js";function f(r,e,o,n){const{sample:t,perfBaseline:l,source:s}=r;e.publicLog2("unresponsive.sample",{perfBaseline:l,selfTime:t.selfTime,totalTime:t.totalTime,percentage:t.percentage,functionName:t.location,callers:t.caller.map(a=>a.location).join("<"),callersAnnotated:t.caller.map(a=>`${a.percentage}|${a.location}`).join("<"),source:s});const m=new c(r);n?i.onUnexpectedError(m):o.error(m)}class c extends Error{selfTime;constructor(e){super(`PerfSampleError: by ${e.source} in ${e.sample.location}`),this.name="PerfSampleError",this.selfTime=e.sample.selfTime;const o=[e.sample.absLocation,...e.sample.caller.map(n=>n.absLocation)];this.stack=`
	 at ${o.join(`
	 at `)}`}}export{f as reportSample};
