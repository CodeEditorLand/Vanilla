{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/update/common/updateIpc.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { IChannel, IServerChannel } from '../../../base/parts/ipc/common/ipc.js';\nimport { IUpdateService, State } from './update.js';\n\nexport class UpdateChannel implements IServerChannel {\n\n\tconstructor(private service: IUpdateService) { }\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'onStateChange': return this.service.onStateChange;\n\t\t}\n\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'checkForUpdates': return this.service.checkForUpdates(arg);\n\t\t\tcase 'downloadUpdate': return this.service.downloadUpdate();\n\t\t\tcase 'applyUpdate': return this.service.applyUpdate();\n\t\t\tcase 'quitAndInstall': return this.service.quitAndInstall();\n\t\t\tcase '_getInitialState': return Promise.resolve(this.service.state);\n\t\t\tcase 'isLatestVersion': return this.service.isLatestVersion();\n\t\t\tcase '_applySpecificUpdate': return this.service._applySpecificUpdate(arg);\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n}\n\nexport class UpdateChannelClient implements IUpdateService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onStateChange = new Emitter<State>();\n\treadonly onStateChange: Event<State> = this._onStateChange.event;\n\n\tprivate _state: State = State.Uninitialized;\n\tget state(): State { return this._state; }\n\tset state(state: State) {\n\t\tthis._state = state;\n\t\tthis._onStateChange.fire(state);\n\t}\n\n\tconstructor(private readonly channel: IChannel) {\n\t\tthis.channel.listen<State>('onStateChange')(state => this.state = state);\n\t\tthis.channel.call<State>('_getInitialState').then(state => this.state = state);\n\t}\n\n\tcheckForUpdates(explicit: boolean): Promise<void> {\n\t\treturn this.channel.call('checkForUpdates', explicit);\n\t}\n\n\tdownloadUpdate(): Promise<void> {\n\t\treturn this.channel.call('downloadUpdate');\n\t}\n\n\tapplyUpdate(): Promise<void> {\n\t\treturn this.channel.call('applyUpdate');\n\t}\n\n\tquitAndInstall(): Promise<void> {\n\t\treturn this.channel.call('quitAndInstall');\n\t}\n\n\tisLatestVersion(): Promise<boolean | undefined> {\n\t\treturn this.channel.call('isLatestVersion');\n\t}\n\n\t_applySpecificUpdate(packagePath: string): Promise<void> {\n\t\treturn this.channel.call('_applySpecificUpdate', packagePath);\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,SAAS,aAAa;AAC/B,SAAS,UAAU,sBAAsB;AACzC,SAAS,gBAAgB,aAAa;AAE/B,MAAM,cAAwC;AAAA,EAEpD,YAAoB,SAAyB;AAAzB;AAAA,EAA2B;AAAA,EAXhD,OASqD;AAAA;AAAA;AAAA,EAIpD,OAAO,GAAY,OAA2B;AAC7C,YAAQ,OAAO;AAAA,MACd,KAAK;AAAiB,eAAO,KAAK,QAAQ;AAAA,IAC3C;AAEA,UAAM,IAAI,MAAM,oBAAoB,KAAK,EAAE;AAAA,EAC5C;AAAA,EAEA,KAAK,GAAY,SAAiB,KAAyB;AAC1D,YAAQ,SAAS;AAAA,MAChB,KAAK;AAAmB,eAAO,KAAK,QAAQ,gBAAgB,GAAG;AAAA,MAC/D,KAAK;AAAkB,eAAO,KAAK,QAAQ,eAAe;AAAA,MAC1D,KAAK;AAAe,eAAO,KAAK,QAAQ,YAAY;AAAA,MACpD,KAAK;AAAkB,eAAO,KAAK,QAAQ,eAAe;AAAA,MAC1D,KAAK;AAAoB,eAAO,QAAQ,QAAQ,KAAK,QAAQ,KAAK;AAAA,MAClE,KAAK;AAAmB,eAAO,KAAK,QAAQ,gBAAgB;AAAA,MAC5D,KAAK;AAAwB,eAAO,KAAK,QAAQ,qBAAqB,GAAG;AAAA,IAC1E;AAEA,UAAM,IAAI,MAAM,mBAAmB,OAAO,EAAE;AAAA,EAC7C;AACD;AAEO,MAAM,oBAA8C;AAAA,EAc1D,YAA6B,SAAmB;AAAnB;AAC5B,SAAK,QAAQ,OAAc,eAAe,EAAE,WAAS,KAAK,QAAQ,KAAK;AACvE,SAAK,QAAQ,KAAY,kBAAkB,EAAE,KAAK,WAAS,KAAK,QAAQ,KAAK;AAAA,EAC9E;AAAA,EArDD,OAoC2D;AAAA;AAAA;AAAA,EAIzC,iBAAiB,IAAI,QAAe;AAAA,EAC5C,gBAA8B,KAAK,eAAe;AAAA,EAEnD,SAAgB,MAAM;AAAA,EAC9B,IAAI,QAAe;AAAE,WAAO,KAAK;AAAA,EAAQ;AAAA,EACzC,IAAI,MAAM,OAAc;AACvB,SAAK,SAAS;AACd,SAAK,eAAe,KAAK,KAAK;AAAA,EAC/B;AAAA,EAOA,gBAAgB,UAAkC;AACjD,WAAO,KAAK,QAAQ,KAAK,mBAAmB,QAAQ;AAAA,EACrD;AAAA,EAEA,iBAAgC;AAC/B,WAAO,KAAK,QAAQ,KAAK,gBAAgB;AAAA,EAC1C;AAAA,EAEA,cAA6B;AAC5B,WAAO,KAAK,QAAQ,KAAK,aAAa;AAAA,EACvC;AAAA,EAEA,iBAAgC;AAC/B,WAAO,KAAK,QAAQ,KAAK,gBAAgB;AAAA,EAC1C;AAAA,EAEA,kBAAgD;AAC/C,WAAO,KAAK,QAAQ,KAAK,iBAAiB;AAAA,EAC3C;AAAA,EAEA,qBAAqB,aAAoC;AACxD,WAAO,KAAK,QAAQ,KAAK,wBAAwB,WAAW;AAAA,EAC7D;AACD;",
  "names": []
}
