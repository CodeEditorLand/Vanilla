{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/update/common/updateIpc.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, type Event } from \"../../../base/common/event.js\";\nimport type {\n\tIChannel,\n\tIServerChannel,\n} from \"../../../base/parts/ipc/common/ipc.js\";\nimport { type IUpdateService, State } from \"./update.js\";\n\nexport class UpdateChannel implements IServerChannel {\n\tconstructor(private service: IUpdateService) {}\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase \"onStateChange\":\n\t\t\t\treturn this.service.onStateChange;\n\t\t}\n\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase \"checkForUpdates\":\n\t\t\t\treturn this.service.checkForUpdates(arg);\n\t\t\tcase \"downloadUpdate\":\n\t\t\t\treturn this.service.downloadUpdate();\n\t\t\tcase \"applyUpdate\":\n\t\t\t\treturn this.service.applyUpdate();\n\t\t\tcase \"quitAndInstall\":\n\t\t\t\treturn this.service.quitAndInstall();\n\t\t\tcase \"_getInitialState\":\n\t\t\t\treturn Promise.resolve(this.service.state);\n\t\t\tcase \"isLatestVersion\":\n\t\t\t\treturn this.service.isLatestVersion();\n\t\t\tcase \"_applySpecificUpdate\":\n\t\t\t\treturn this.service._applySpecificUpdate(arg);\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n}\n\nexport class UpdateChannelClient implements IUpdateService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onStateChange = new Emitter<State>();\n\treadonly onStateChange: Event<State> = this._onStateChange.event;\n\n\tprivate _state: State = State.Uninitialized;\n\tget state(): State {\n\t\treturn this._state;\n\t}\n\tset state(state: State) {\n\t\tthis._state = state;\n\t\tthis._onStateChange.fire(state);\n\t}\n\n\tconstructor(private readonly channel: IChannel) {\n\t\tthis.channel.listen<State>(\"onStateChange\")(\n\t\t\t(state) => (this.state = state),\n\t\t);\n\t\tthis.channel\n\t\t\t.call<State>(\"_getInitialState\")\n\t\t\t.then((state) => (this.state = state));\n\t}\n\n\tcheckForUpdates(explicit: boolean): Promise<void> {\n\t\treturn this.channel.call(\"checkForUpdates\", explicit);\n\t}\n\n\tdownloadUpdate(): Promise<void> {\n\t\treturn this.channel.call(\"downloadUpdate\");\n\t}\n\n\tapplyUpdate(): Promise<void> {\n\t\treturn this.channel.call(\"applyUpdate\");\n\t}\n\n\tquitAndInstall(): Promise<void> {\n\t\treturn this.channel.call(\"quitAndInstall\");\n\t}\n\n\tisLatestVersion(): Promise<boolean | undefined> {\n\t\treturn this.channel.call(\"isLatestVersion\");\n\t}\n\n\t_applySpecificUpdate(packagePath: string): Promise<void> {\n\t\treturn this.channel.call(\"_applySpecificUpdate\", packagePath);\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,eAA2B;AAKpC,SAA8B,aAAa;AAEpC,MAAM,cAAwC;AAAA,EACpD,YAAoB,SAAyB;AAAzB;AAAA,EAA0B;AAAA,EAb/C,OAYqD;AAAA;AAAA;AAAA,EAGpD,OAAO,GAAY,OAA2B;AAC7C,YAAQ,OAAO;AAAA,MACd,KAAK;AACJ,eAAO,KAAK,QAAQ;AAAA,IACtB;AAEA,UAAM,IAAI,MAAM,oBAAoB,KAAK,EAAE;AAAA,EAC5C;AAAA,EAEA,KAAK,GAAY,SAAiB,KAAyB;AAC1D,YAAQ,SAAS;AAAA,MAChB,KAAK;AACJ,eAAO,KAAK,QAAQ,gBAAgB,GAAG;AAAA,MACxC,KAAK;AACJ,eAAO,KAAK,QAAQ,eAAe;AAAA,MACpC,KAAK;AACJ,eAAO,KAAK,QAAQ,YAAY;AAAA,MACjC,KAAK;AACJ,eAAO,KAAK,QAAQ,eAAe;AAAA,MACpC,KAAK;AACJ,eAAO,QAAQ,QAAQ,KAAK,QAAQ,KAAK;AAAA,MAC1C,KAAK;AACJ,eAAO,KAAK,QAAQ,gBAAgB;AAAA,MACrC,KAAK;AACJ,eAAO,KAAK,QAAQ,qBAAqB,GAAG;AAAA,IAC9C;AAEA,UAAM,IAAI,MAAM,mBAAmB,OAAO,EAAE;AAAA,EAC7C;AACD;AAEO,MAAM,oBAA8C;AAAA,EAe1D,YAA6B,SAAmB;AAAnB;AAC5B,SAAK,QAAQ,OAAc,eAAe;AAAA,MACzC,CAAC,UAAW,KAAK,QAAQ;AAAA,IAC1B;AACA,SAAK,QACH,KAAY,kBAAkB,EAC9B,KAAK,CAAC,UAAW,KAAK,QAAQ,KAAM;AAAA,EACvC;AAAA,EApED,OA8C2D;AAAA;AAAA;AAAA,EAGzC,iBAAiB,IAAI,QAAe;AAAA,EAC5C,gBAA8B,KAAK,eAAe;AAAA,EAEnD,SAAgB,MAAM;AAAA,EAC9B,IAAI,QAAe;AAClB,WAAO,KAAK;AAAA,EACb;AAAA,EACA,IAAI,MAAM,OAAc;AACvB,SAAK,SAAS;AACd,SAAK,eAAe,KAAK,KAAK;AAAA,EAC/B;AAAA,EAWA,gBAAgB,UAAkC;AACjD,WAAO,KAAK,QAAQ,KAAK,mBAAmB,QAAQ;AAAA,EACrD;AAAA,EAEA,iBAAgC;AAC/B,WAAO,KAAK,QAAQ,KAAK,gBAAgB;AAAA,EAC1C;AAAA,EAEA,cAA6B;AAC5B,WAAO,KAAK,QAAQ,KAAK,aAAa;AAAA,EACvC;AAAA,EAEA,iBAAgC;AAC/B,WAAO,KAAK,QAAQ,KAAK,gBAAgB;AAAA,EAC1C;AAAA,EAEA,kBAAgD;AAC/C,WAAO,KAAK,QAAQ,KAAK,iBAAiB;AAAA,EAC3C;AAAA,EAEA,qBAAqB,aAAoC;AACxD,WAAO,KAAK,QAAQ,KAAK,wBAAwB,WAAW;AAAA,EAC7D;AACD;",
  "names": []
}
