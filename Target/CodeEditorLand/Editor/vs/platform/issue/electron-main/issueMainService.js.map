{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/issue/electron-main/issueMainService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { arch, release, type } from \"os\";\nimport {\n\tBrowserWindow,\n\ttype BrowserWindowConstructorOptions,\n\ttype Display,\n\tscreen,\n} from \"electron\";\nimport { isESM } from \"../../../base/common/amd.js\";\nimport { raceTimeout } from \"../../../base/common/async.js\";\nimport { CancellationTokenSource } from \"../../../base/common/cancellation.js\";\nimport { DisposableStore } from \"../../../base/common/lifecycle.js\";\nimport { FileAccess } from \"../../../base/common/network.js\";\nimport {\n\ttype IProcessEnvironment,\n\tisMacintosh,\n} from \"../../../base/common/platform.js\";\nimport { validatedIpcMain } from \"../../../base/parts/ipc/electron-main/ipcMain.js\";\nimport { getNLSLanguage, getNLSMessages, localize } from \"../../../nls.js\";\nimport { ICSSDevelopmentService } from \"../../cssDev/node/cssDevService.js\";\nimport { IDialogMainService } from \"../../dialogs/electron-main/dialogMainService.js\";\nimport { IEnvironmentMainService } from \"../../environment/electron-main/environmentMainService.js\";\nimport { ILogService } from \"../../log/common/log.js\";\nimport { INativeHostMainService } from \"../../native/electron-main/nativeHostMainService.js\";\nimport product from \"../../product/common/product.js\";\nimport {\n\ttype IIPCObjectUrl,\n\tIProtocolMainService,\n} from \"../../protocol/electron-main/protocol.js\";\nimport { zoomLevelToZoomFactor } from \"../../window/common/window.js\";\nimport type {\n\tICodeWindow,\n\tIWindowState,\n} from \"../../window/electron-main/window.js\";\nimport { IWindowsMainService } from \"../../windows/electron-main/windows.js\";\nimport type {\n\tIIssueMainService,\n\tOldIssueReporterData,\n\tOldIssueReporterWindowConfiguration,\n} from \"../common/issue.js\";\n\ninterface IBrowserWindowOptions {\n\tbackgroundColor: string | undefined;\n\ttitle: string;\n\tzoomLevel: number;\n\talwaysOnTop: boolean;\n}\n\ntype IStrictWindowState = Required<\n\tPick<IWindowState, \"x\" | \"y\" | \"width\" | \"height\">\n>;\n\nexport class IssueMainService implements IIssueMainService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate static readonly DEFAULT_BACKGROUND_COLOR = \"#1E1E1E\";\n\n\tprivate issueReporterWindow: BrowserWindow | null = null;\n\tprivate issueReporterParentWindow: BrowserWindow | null = null;\n\n\tconstructor(\n\t\tprivate userEnv: IProcessEnvironment,\n\t\t@IEnvironmentMainService private readonly environmentMainService: IEnvironmentMainService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IDialogMainService private readonly dialogMainService: IDialogMainService,\n\t\t@INativeHostMainService private readonly nativeHostMainService: INativeHostMainService,\n\t\t@IProtocolMainService private readonly protocolMainService: IProtocolMainService,\n\t\t@IWindowsMainService private readonly windowsMainService: IWindowsMainService,\n\t\t@ICSSDevelopmentService private readonly cssDevelopmentService: ICSSDevelopmentService,\n\t) { }\n\n\t//#region Used by renderer\n\n\tasync openReporter(data: OldIssueReporterData): Promise<void> {\n\t\tif (!this.issueReporterWindow) {\n\t\t\tthis.issueReporterParentWindow = BrowserWindow.getFocusedWindow();\n\t\t\tif (this.issueReporterParentWindow) {\n\t\t\t\tconst issueReporterDisposables = new DisposableStore();\n\n\t\t\t\tconst issueReporterWindowConfigUrl =\n\t\t\t\t\tissueReporterDisposables.add(\n\t\t\t\t\t\tthis.protocolMainService.createIPCObjectUrl<OldIssueReporterWindowConfiguration>(),\n\t\t\t\t\t);\n\t\t\t\tconst position = this.getWindowPosition(\n\t\t\t\t\tthis.issueReporterParentWindow,\n\t\t\t\t\t700,\n\t\t\t\t\t800,\n\t\t\t\t);\n\n\t\t\t\tthis.issueReporterWindow = this.createBrowserWindow(\n\t\t\t\t\tposition,\n\t\t\t\t\tissueReporterWindowConfigUrl,\n\t\t\t\t\t{\n\t\t\t\t\t\tbackgroundColor: data.styles.backgroundColor,\n\t\t\t\t\t\ttitle: localize(\"issueReporter\", \"Issue Reporter\"),\n\t\t\t\t\t\tzoomLevel: data.zoomLevel,\n\t\t\t\t\t\talwaysOnTop: false,\n\t\t\t\t\t},\n\t\t\t\t\t\"issue-reporter\",\n\t\t\t\t);\n\n\t\t\t\t// Store into config object URL\n\t\t\t\tissueReporterWindowConfigUrl.update({\n\t\t\t\t\tappRoot: this.environmentMainService.appRoot,\n\t\t\t\t\twindowId: this.issueReporterWindow.id,\n\t\t\t\t\tuserEnv: this.userEnv,\n\t\t\t\t\tdata,\n\t\t\t\t\tdisableExtensions:\n\t\t\t\t\t\t!!this.environmentMainService.disableExtensions,\n\t\t\t\t\tos: {\n\t\t\t\t\t\ttype: type(),\n\t\t\t\t\t\tarch: arch(),\n\t\t\t\t\t\trelease: release(),\n\t\t\t\t\t},\n\t\t\t\t\tproduct,\n\t\t\t\t\tnls: {\n\t\t\t\t\t\tmessages: getNLSMessages(),\n\t\t\t\t\t\tlanguage: getNLSLanguage(),\n\t\t\t\t\t},\n\t\t\t\t\tcssModules: this.cssDevelopmentService.isEnabled\n\t\t\t\t\t\t? await this.cssDevelopmentService.getCssModules()\n\t\t\t\t\t\t: undefined,\n\t\t\t\t});\n\n\t\t\t\tthis.issueReporterWindow.loadURL(\n\t\t\t\t\tFileAccess.asBrowserUri(\n\t\t\t\t\t\t`vs/workbench/contrib/issue/electron-sandbox/issueReporter${this.environmentMainService.isBuilt ? \"\" : \"-dev\"}.${isESM ? \"esm.\" : \"\"}html`,\n\t\t\t\t\t).toString(true),\n\t\t\t\t);\n\n\t\t\t\tthis.issueReporterWindow.on(\"close\", () => {\n\t\t\t\t\tthis.issueReporterWindow = null;\n\t\t\t\t\tissueReporterDisposables.dispose();\n\t\t\t\t});\n\n\t\t\t\tthis.issueReporterParentWindow.on(\"closed\", () => {\n\t\t\t\t\tif (this.issueReporterWindow) {\n\t\t\t\t\t\tthis.issueReporterWindow.close();\n\t\t\t\t\t\tthis.issueReporterWindow = null;\n\t\t\t\t\t\tissueReporterDisposables.dispose();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (this.issueReporterWindow) {\n\t\t\tthis.focusWindow(this.issueReporterWindow);\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region used by issue reporter window\n\tasync $reloadWithExtensionsDisabled(): Promise<void> {\n\t\tif (this.issueReporterParentWindow) {\n\t\t\ttry {\n\t\t\t\tawait this.nativeHostMainService.reload(\n\t\t\t\t\tthis.issueReporterParentWindow.id,\n\t\t\t\t\t{ disableExtensions: true },\n\t\t\t\t);\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.error(error);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync $showConfirmCloseDialog(): Promise<void> {\n\t\tif (this.issueReporterWindow) {\n\t\t\tconst { response } = await this.dialogMainService.showMessageBox(\n\t\t\t\t{\n\t\t\t\t\ttype: \"warning\",\n\t\t\t\t\tmessage: localize(\n\t\t\t\t\t\t\"confirmCloseIssueReporter\",\n\t\t\t\t\t\t\"Your input will not be saved. Are you sure you want to close this window?\",\n\t\t\t\t\t),\n\t\t\t\t\tbuttons: [\n\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t{ key: \"yes\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\t\t\t\"&&Yes\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\tlocalize(\"cancel\", \"Cancel\"),\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\tthis.issueReporterWindow,\n\t\t\t);\n\n\t\t\tif (response === 0) {\n\t\t\t\tif (this.issueReporterWindow) {\n\t\t\t\t\tthis.issueReporterWindow.destroy();\n\t\t\t\t\tthis.issueReporterWindow = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tasync $showClipboardDialog(): Promise<boolean> {\n\t\tif (this.issueReporterWindow) {\n\t\t\tconst { response } = await this.dialogMainService.showMessageBox(\n\t\t\t\t{\n\t\t\t\t\ttype: \"warning\",\n\t\t\t\t\tmessage: localize(\n\t\t\t\t\t\t\"issueReporterWriteToClipboard\",\n\t\t\t\t\t\t\"There is too much data to send to GitHub directly. The data will be copied to the clipboard, please paste it into the GitHub issue page that is opened.\",\n\t\t\t\t\t),\n\t\t\t\t\tbuttons: [\n\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t{ key: \"ok\", comment: [\"&& denotes a mnemonic\"] },\n\t\t\t\t\t\t\t\"&&OK\",\n\t\t\t\t\t\t),\n\t\t\t\t\t\tlocalize(\"cancel\", \"Cancel\"),\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\tthis.issueReporterWindow,\n\t\t\t);\n\n\t\t\treturn response === 0;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tissueReporterWindowCheck(): ICodeWindow {\n\t\tif (!this.issueReporterParentWindow) {\n\t\t\tthrow new Error(\"Issue reporter window not available\");\n\t\t}\n\t\tconst window = this.windowsMainService.getWindowById(\n\t\t\tthis.issueReporterParentWindow.id,\n\t\t);\n\t\tif (!window) {\n\t\t\tthrow new Error(\"Window not found\");\n\t\t}\n\t\treturn window;\n\t}\n\n\tasync $sendReporterMenu(\n\t\textensionId: string,\n\t\textensionName: string,\n\t): Promise<OldIssueReporterData | undefined> {\n\t\tconst window = this.issueReporterWindowCheck();\n\t\tconst replyChannel = `vscode:triggerReporterMenu`;\n\t\tconst cts = new CancellationTokenSource();\n\t\twindow.sendWhenReady(replyChannel, cts.token, {\n\t\t\treplyChannel,\n\t\t\textensionId,\n\t\t\textensionName,\n\t\t});\n\t\tconst result = await raceTimeout(\n\t\t\tnew Promise((resolve) =>\n\t\t\t\tvalidatedIpcMain.once(\n\t\t\t\t\t`vscode:triggerReporterMenuResponse:${extensionId}`,\n\t\t\t\t\t(_: unknown, data: OldIssueReporterData | undefined) =>\n\t\t\t\t\t\tresolve(data),\n\t\t\t\t),\n\t\t\t),\n\t\t\t5000,\n\t\t\t() => {\n\t\t\t\tthis.logService.error(\n\t\t\t\t\t`Error: Extension ${extensionId} timed out waiting for menu response`,\n\t\t\t\t);\n\t\t\t\tcts.cancel();\n\t\t\t},\n\t\t);\n\t\treturn result as OldIssueReporterData | undefined;\n\t}\n\n\tasync $closeReporter(): Promise<void> {\n\t\tthis.issueReporterWindow?.close();\n\t}\n\n\t//#endregion\n\n\tprivate focusWindow(window: BrowserWindow): void {\n\t\tif (window.isMinimized()) {\n\t\t\twindow.restore();\n\t\t}\n\n\t\twindow.focus();\n\t}\n\n\tprivate createBrowserWindow<T>(\n\t\tposition: IWindowState,\n\t\tipcObjectUrl: IIPCObjectUrl<T>,\n\t\toptions: IBrowserWindowOptions,\n\t\twindowKind: string,\n\t): BrowserWindow {\n\t\tconst window = new BrowserWindow({\n\t\t\tfullscreen: false,\n\t\t\tskipTaskbar: false,\n\t\t\tresizable: true,\n\t\t\twidth: position.width,\n\t\t\theight: position.height,\n\t\t\tminWidth: 300,\n\t\t\tminHeight: 200,\n\t\t\tx: position.x,\n\t\t\ty: position.y,\n\t\t\ttitle: options.title,\n\t\t\tbackgroundColor:\n\t\t\t\toptions.backgroundColor ||\n\t\t\t\tIssueMainService.DEFAULT_BACKGROUND_COLOR,\n\t\t\twebPreferences: {\n\t\t\t\tpreload: FileAccess.asFileUri(\n\t\t\t\t\t\"vs/base/parts/sandbox/electron-sandbox/preload.js\",\n\t\t\t\t).fsPath,\n\t\t\t\tadditionalArguments: [\n\t\t\t\t\t`--vscode-window-config=${ipcObjectUrl.resource.toString()}`,\n\t\t\t\t],\n\t\t\t\tv8CacheOptions: this.environmentMainService.useCodeCache\n\t\t\t\t\t? \"bypassHeatCheck\"\n\t\t\t\t\t: \"none\",\n\t\t\t\tenableWebSQL: false,\n\t\t\t\tspellcheck: false,\n\t\t\t\tzoomFactor: zoomLevelToZoomFactor(options.zoomLevel),\n\t\t\t\tsandbox: true,\n\t\t\t},\n\t\t\talwaysOnTop: options.alwaysOnTop,\n\t\t\texperimentalDarkMode: true,\n\t\t} as BrowserWindowConstructorOptions & {\n\t\t\texperimentalDarkMode: boolean;\n\t\t});\n\n\t\twindow.setMenuBarVisibility(false);\n\n\t\treturn window;\n\t}\n\n\tprivate getWindowPosition(\n\t\tparentWindow: BrowserWindow,\n\t\tdefaultWidth: number,\n\t\tdefaultHeight: number,\n\t): IStrictWindowState {\n\t\t// We want the new window to open on the same display that the parent is in\n\t\tlet displayToUse: Display | undefined;\n\t\tconst displays = screen.getAllDisplays();\n\n\t\t// Single Display\n\t\tif (displays.length === 1) {\n\t\t\tdisplayToUse = displays[0];\n\t\t}\n\n\t\t// Multi Display\n\t\telse {\n\t\t\t// on mac there is 1 menu per window so we need to use the monitor where the cursor currently is\n\t\t\tif (isMacintosh) {\n\t\t\t\tconst cursorPoint = screen.getCursorScreenPoint();\n\t\t\t\tdisplayToUse = screen.getDisplayNearestPoint(cursorPoint);\n\t\t\t}\n\n\t\t\t// if we have a last active window, use that display for the new window\n\t\t\tif (!displayToUse && parentWindow) {\n\t\t\t\tdisplayToUse = screen.getDisplayMatching(\n\t\t\t\t\tparentWindow.getBounds(),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// fallback to primary display or first display\n\t\t\tif (!displayToUse) {\n\t\t\t\tdisplayToUse = screen.getPrimaryDisplay() || displays[0];\n\t\t\t}\n\t\t}\n\n\t\tconst displayBounds = displayToUse.bounds;\n\n\t\tconst state: IStrictWindowState = {\n\t\t\twidth: defaultWidth,\n\t\t\theight: defaultHeight,\n\t\t\tx: displayBounds.x + displayBounds.width / 2 - defaultWidth / 2,\n\t\t\ty: displayBounds.y + displayBounds.height / 2 - defaultHeight / 2,\n\t\t};\n\n\t\tif (\n\t\t\tdisplayBounds.width > 0 &&\n\t\t\tdisplayBounds.height >\n\t\t\t\t0 /* Linux X11 sessions sometimes report wrong display bounds */\n\t\t) {\n\t\t\tif (state.x < displayBounds.x) {\n\t\t\t\tstate.x = displayBounds.x; // prevent window from falling out of the screen to the left\n\t\t\t}\n\n\t\t\tif (state.y < displayBounds.y) {\n\t\t\t\tstate.y = displayBounds.y; // prevent window from falling out of the screen to the top\n\t\t\t}\n\n\t\t\tif (state.x > displayBounds.x + displayBounds.width) {\n\t\t\t\tstate.x = displayBounds.x; // prevent window from falling out of the screen to the right\n\t\t\t}\n\n\t\t\tif (state.y > displayBounds.y + displayBounds.height) {\n\t\t\t\tstate.y = displayBounds.y; // prevent window from falling out of the screen to the bottom\n\t\t\t}\n\n\t\t\tif (state.width > displayBounds.width) {\n\t\t\t\tstate.width = displayBounds.width; // prevent window from exceeding display bounds width\n\t\t\t}\n\n\t\t\tif (state.height > displayBounds.height) {\n\t\t\t\tstate.height = displayBounds.height; // prevent window from exceeding display bounds height\n\t\t\t}\n\t\t}\n\n\t\treturn state;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
