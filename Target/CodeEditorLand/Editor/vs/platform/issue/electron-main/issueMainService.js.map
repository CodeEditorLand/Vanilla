{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/issue/electron-main/issueMainService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { BrowserWindow, BrowserWindowConstructorOptions, Display, screen } from 'electron';\nimport { arch, release, type } from 'os';\nimport { raceTimeout } from '../../../base/common/async.js';\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { FileAccess } from '../../../base/common/network.js';\nimport { IProcessEnvironment, isMacintosh } from '../../../base/common/platform.js';\nimport { validatedIpcMain } from '../../../base/parts/ipc/electron-main/ipcMain.js';\nimport { getNLSLanguage, getNLSMessages, localize } from '../../../nls.js';\nimport { IDialogMainService } from '../../dialogs/electron-main/dialogMainService.js';\nimport { IEnvironmentMainService } from '../../environment/electron-main/environmentMainService.js';\nimport { IIssueMainService, OldIssueReporterData, OldIssueReporterWindowConfiguration } from '../common/issue.js';\nimport { ILogService } from '../../log/common/log.js';\nimport { INativeHostMainService } from '../../native/electron-main/nativeHostMainService.js';\nimport product from '../../product/common/product.js';\nimport { IIPCObjectUrl, IProtocolMainService } from '../../protocol/electron-main/protocol.js';\nimport { zoomLevelToZoomFactor } from '../../window/common/window.js';\nimport { ICodeWindow, IWindowState } from '../../window/electron-main/window.js';\nimport { IWindowsMainService } from '../../windows/electron-main/windows.js';\nimport { isESM } from '../../../base/common/amd.js';\nimport { ICSSDevelopmentService } from '../../cssDev/node/cssDevService.js';\n\ninterface IBrowserWindowOptions {\n\tbackgroundColor: string | undefined;\n\ttitle: string;\n\tzoomLevel: number;\n\talwaysOnTop: boolean;\n}\n\ntype IStrictWindowState = Required<Pick<IWindowState, 'x' | 'y' | 'width' | 'height'>>;\n\nexport class IssueMainService implements IIssueMainService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate static readonly DEFAULT_BACKGROUND_COLOR = '#1E1E1E';\n\n\tprivate issueReporterWindow: BrowserWindow | null = null;\n\tprivate issueReporterParentWindow: BrowserWindow | null = null;\n\n\tconstructor(\n\t\tprivate userEnv: IProcessEnvironment,\n\t\t@IEnvironmentMainService private readonly environmentMainService: IEnvironmentMainService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IDialogMainService private readonly dialogMainService: IDialogMainService,\n\t\t@INativeHostMainService private readonly nativeHostMainService: INativeHostMainService,\n\t\t@IProtocolMainService private readonly protocolMainService: IProtocolMainService,\n\t\t@IWindowsMainService private readonly windowsMainService: IWindowsMainService,\n\t\t@ICSSDevelopmentService private readonly cssDevelopmentService: ICSSDevelopmentService,\n\t) { }\n\n\t//#region Used by renderer\n\n\tasync openReporter(data: OldIssueReporterData): Promise<void> {\n\t\tif (!this.issueReporterWindow) {\n\t\t\tthis.issueReporterParentWindow = BrowserWindow.getFocusedWindow();\n\t\t\tif (this.issueReporterParentWindow) {\n\t\t\t\tconst issueReporterDisposables = new DisposableStore();\n\n\t\t\t\tconst issueReporterWindowConfigUrl = issueReporterDisposables.add(this.protocolMainService.createIPCObjectUrl<OldIssueReporterWindowConfiguration>());\n\t\t\t\tconst position = this.getWindowPosition(this.issueReporterParentWindow, 700, 800);\n\n\t\t\t\tthis.issueReporterWindow = this.createBrowserWindow(position, issueReporterWindowConfigUrl, {\n\t\t\t\t\tbackgroundColor: data.styles.backgroundColor,\n\t\t\t\t\ttitle: localize('issueReporter', \"Issue Reporter\"),\n\t\t\t\t\tzoomLevel: data.zoomLevel,\n\t\t\t\t\talwaysOnTop: false\n\t\t\t\t}, 'issue-reporter');\n\n\t\t\t\t// Store into config object URL\n\t\t\t\tissueReporterWindowConfigUrl.update({\n\t\t\t\t\tappRoot: this.environmentMainService.appRoot,\n\t\t\t\t\twindowId: this.issueReporterWindow.id,\n\t\t\t\t\tuserEnv: this.userEnv,\n\t\t\t\t\tdata,\n\t\t\t\t\tdisableExtensions: !!this.environmentMainService.disableExtensions,\n\t\t\t\t\tos: {\n\t\t\t\t\t\ttype: type(),\n\t\t\t\t\t\tarch: arch(),\n\t\t\t\t\t\trelease: release(),\n\t\t\t\t\t},\n\t\t\t\t\tproduct,\n\t\t\t\t\tnls: {\n\t\t\t\t\t\tmessages: getNLSMessages(),\n\t\t\t\t\t\tlanguage: getNLSLanguage()\n\t\t\t\t\t},\n\t\t\t\t\tcssModules: this.cssDevelopmentService.isEnabled ? await this.cssDevelopmentService.getCssModules() : undefined\n\t\t\t\t});\n\n\t\t\t\tthis.issueReporterWindow.loadURL(\n\t\t\t\t\tFileAccess.asBrowserUri(`vs/workbench/contrib/issue/electron-sandbox/issueReporter${this.environmentMainService.isBuilt ? '' : '-dev'}.${isESM ? 'esm.' : ''}html`).toString(true)\n\t\t\t\t);\n\n\t\t\t\tthis.issueReporterWindow.on('close', () => {\n\t\t\t\t\tthis.issueReporterWindow = null;\n\t\t\t\t\tissueReporterDisposables.dispose();\n\t\t\t\t});\n\n\t\t\t\tthis.issueReporterParentWindow.on('closed', () => {\n\t\t\t\t\tif (this.issueReporterWindow) {\n\t\t\t\t\t\tthis.issueReporterWindow.close();\n\t\t\t\t\t\tthis.issueReporterWindow = null;\n\t\t\t\t\t\tissueReporterDisposables.dispose();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\telse if (this.issueReporterWindow) {\n\t\t\tthis.focusWindow(this.issueReporterWindow);\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region used by issue reporter window\n\tasync $reloadWithExtensionsDisabled(): Promise<void> {\n\t\tif (this.issueReporterParentWindow) {\n\t\t\ttry {\n\t\t\t\tawait this.nativeHostMainService.reload(this.issueReporterParentWindow.id, { disableExtensions: true });\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.error(error);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync $showConfirmCloseDialog(): Promise<void> {\n\t\tif (this.issueReporterWindow) {\n\t\t\tconst { response } = await this.dialogMainService.showMessageBox({\n\t\t\t\ttype: 'warning',\n\t\t\t\tmessage: localize('confirmCloseIssueReporter', \"Your input will not be saved. Are you sure you want to close this window?\"),\n\t\t\t\tbuttons: [\n\t\t\t\t\tlocalize({ key: 'yes', comment: ['&& denotes a mnemonic'] }, \"&&Yes\"),\n\t\t\t\t\tlocalize('cancel', \"Cancel\")\n\t\t\t\t]\n\t\t\t}, this.issueReporterWindow);\n\n\t\t\tif (response === 0) {\n\t\t\t\tif (this.issueReporterWindow) {\n\t\t\t\t\tthis.issueReporterWindow.destroy();\n\t\t\t\t\tthis.issueReporterWindow = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tasync $showClipboardDialog(): Promise<boolean> {\n\t\tif (this.issueReporterWindow) {\n\t\t\tconst { response } = await this.dialogMainService.showMessageBox({\n\t\t\t\ttype: 'warning',\n\t\t\t\tmessage: localize('issueReporterWriteToClipboard', \"There is too much data to send to GitHub directly. The data will be copied to the clipboard, please paste it into the GitHub issue page that is opened.\"),\n\t\t\t\tbuttons: [\n\t\t\t\t\tlocalize({ key: 'ok', comment: ['&& denotes a mnemonic'] }, \"&&OK\"),\n\t\t\t\t\tlocalize('cancel', \"Cancel\")\n\t\t\t\t]\n\t\t\t}, this.issueReporterWindow);\n\n\t\t\treturn response === 0;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tissueReporterWindowCheck(): ICodeWindow {\n\t\tif (!this.issueReporterParentWindow) {\n\t\t\tthrow new Error('Issue reporter window not available');\n\t\t}\n\t\tconst window = this.windowsMainService.getWindowById(this.issueReporterParentWindow.id);\n\t\tif (!window) {\n\t\t\tthrow new Error('Window not found');\n\t\t}\n\t\treturn window;\n\t}\n\n\tasync $sendReporterMenu(extensionId: string, extensionName: string): Promise<OldIssueReporterData | undefined> {\n\t\tconst window = this.issueReporterWindowCheck();\n\t\tconst replyChannel = `vscode:triggerReporterMenu`;\n\t\tconst cts = new CancellationTokenSource();\n\t\twindow.sendWhenReady(replyChannel, cts.token, { replyChannel, extensionId, extensionName });\n\t\tconst result = await raceTimeout(new Promise(resolve => validatedIpcMain.once(`vscode:triggerReporterMenuResponse:${extensionId}`, (_: unknown, data: OldIssueReporterData | undefined) => resolve(data))), 5000, () => {\n\t\t\tthis.logService.error(`Error: Extension ${extensionId} timed out waiting for menu response`);\n\t\t\tcts.cancel();\n\t\t});\n\t\treturn result as OldIssueReporterData | undefined;\n\t}\n\n\tasync $closeReporter(): Promise<void> {\n\t\tthis.issueReporterWindow?.close();\n\t}\n\n\t//#endregion\n\n\tprivate focusWindow(window: BrowserWindow): void {\n\t\tif (window.isMinimized()) {\n\t\t\twindow.restore();\n\t\t}\n\n\t\twindow.focus();\n\t}\n\n\tprivate createBrowserWindow<T>(position: IWindowState, ipcObjectUrl: IIPCObjectUrl<T>, options: IBrowserWindowOptions, windowKind: string): BrowserWindow {\n\t\tconst window = new BrowserWindow({\n\t\t\tfullscreen: false,\n\t\t\tskipTaskbar: false,\n\t\t\tresizable: true,\n\t\t\twidth: position.width,\n\t\t\theight: position.height,\n\t\t\tminWidth: 300,\n\t\t\tminHeight: 200,\n\t\t\tx: position.x,\n\t\t\ty: position.y,\n\t\t\ttitle: options.title,\n\t\t\tbackgroundColor: options.backgroundColor || IssueMainService.DEFAULT_BACKGROUND_COLOR,\n\t\t\twebPreferences: {\n\t\t\t\tpreload: FileAccess.asFileUri('vs/base/parts/sandbox/electron-sandbox/preload.js').fsPath,\n\t\t\t\tadditionalArguments: [`--vscode-window-config=${ipcObjectUrl.resource.toString()}`],\n\t\t\t\tv8CacheOptions: this.environmentMainService.useCodeCache ? 'bypassHeatCheck' : 'none',\n\t\t\t\tenableWebSQL: false,\n\t\t\t\tspellcheck: false,\n\t\t\t\tzoomFactor: zoomLevelToZoomFactor(options.zoomLevel),\n\t\t\t\tsandbox: true\n\t\t\t},\n\t\t\talwaysOnTop: options.alwaysOnTop,\n\t\t\texperimentalDarkMode: true\n\t\t} as BrowserWindowConstructorOptions & { experimentalDarkMode: boolean });\n\n\t\twindow.setMenuBarVisibility(false);\n\n\t\treturn window;\n\t}\n\n\tprivate getWindowPosition(parentWindow: BrowserWindow, defaultWidth: number, defaultHeight: number): IStrictWindowState {\n\n\t\t// We want the new window to open on the same display that the parent is in\n\t\tlet displayToUse: Display | undefined;\n\t\tconst displays = screen.getAllDisplays();\n\n\t\t// Single Display\n\t\tif (displays.length === 1) {\n\t\t\tdisplayToUse = displays[0];\n\t\t}\n\n\t\t// Multi Display\n\t\telse {\n\n\t\t\t// on mac there is 1 menu per window so we need to use the monitor where the cursor currently is\n\t\t\tif (isMacintosh) {\n\t\t\t\tconst cursorPoint = screen.getCursorScreenPoint();\n\t\t\t\tdisplayToUse = screen.getDisplayNearestPoint(cursorPoint);\n\t\t\t}\n\n\t\t\t// if we have a last active window, use that display for the new window\n\t\t\tif (!displayToUse && parentWindow) {\n\t\t\t\tdisplayToUse = screen.getDisplayMatching(parentWindow.getBounds());\n\t\t\t}\n\n\t\t\t// fallback to primary display or first display\n\t\t\tif (!displayToUse) {\n\t\t\t\tdisplayToUse = screen.getPrimaryDisplay() || displays[0];\n\t\t\t}\n\t\t}\n\n\t\tconst displayBounds = displayToUse.bounds;\n\n\t\tconst state: IStrictWindowState = {\n\t\t\twidth: defaultWidth,\n\t\t\theight: defaultHeight,\n\t\t\tx: displayBounds.x + (displayBounds.width / 2) - (defaultWidth / 2),\n\t\t\ty: displayBounds.y + (displayBounds.height / 2) - (defaultHeight / 2)\n\t\t};\n\n\t\tif (displayBounds.width > 0 && displayBounds.height > 0 /* Linux X11 sessions sometimes report wrong display bounds */) {\n\t\t\tif (state.x < displayBounds.x) {\n\t\t\t\tstate.x = displayBounds.x; // prevent window from falling out of the screen to the left\n\t\t\t}\n\n\t\t\tif (state.y < displayBounds.y) {\n\t\t\t\tstate.y = displayBounds.y; // prevent window from falling out of the screen to the top\n\t\t\t}\n\n\t\t\tif (state.x > (displayBounds.x + displayBounds.width)) {\n\t\t\t\tstate.x = displayBounds.x; // prevent window from falling out of the screen to the right\n\t\t\t}\n\n\t\t\tif (state.y > (displayBounds.y + displayBounds.height)) {\n\t\t\t\tstate.y = displayBounds.y; // prevent window from falling out of the screen to the bottom\n\t\t\t}\n\n\t\t\tif (state.width > displayBounds.width) {\n\t\t\t\tstate.width = displayBounds.width; // prevent window from exceeding display bounds width\n\t\t\t}\n\n\t\t\tif (state.height > displayBounds.height) {\n\t\t\t\tstate.height = displayBounds.height; // prevent window from exceeding display bounds height\n\t\t\t}\n\t\t}\n\n\t\treturn state;\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,eAAe,iCAAiC,SAAS,cAAc;AAChF,SAAS,MAAM,SAAS,YAAY;AACpC,SAAS,mBAAmB;AAC5B,SAAS,+BAA+B;AACxC,SAAS,uBAAuB;AAChC,SAAS,kBAAkB;AAC3B,SAAS,qBAAqB,mBAAmB;AACjD,SAAS,wBAAwB;AACjC,SAAS,gBAAgB,gBAAgB,gBAAgB;AACzD,SAAS,0BAA0B;AACnC,SAAS,+BAA+B;AACxC,SAAS,mBAAmB,sBAAsB,2CAA2C;AAC7F,SAAS,mBAAmB;AAC5B,SAAS,8BAA8B;AACvC,OAAO,aAAa;AACpB,SAAS,eAAe,4BAA4B;AACpD,SAAS,6BAA6B;AACtC,SAAS,aAAa,oBAAoB;AAC1C,SAAS,2BAA2B;AACpC,SAAS,aAAa;AACtB,SAAS,8BAA8B;AAWhC,IAAM,mBAAN,MAAoD;AAAA,EAS1D,YACS,SACkC,wBACZ,YACO,mBACI,uBACF,qBACD,oBACG,uBACxC;AARO;AACkC;AACZ;AACO;AACI;AACF;AACD;AACG;AAAA,EACtC;AAAA,EAtDL,OAoC2D;AAAA;AAAA;AAAA,EAI1D,OAAwB,2BAA2B;AAAA,EAE3C,sBAA4C;AAAA,EAC5C,4BAAkD;AAAA;AAAA,EAe1D,MAAM,aAAa,MAA2C;AAC7D,QAAI,CAAC,KAAK,qBAAqB;AAC9B,WAAK,4BAA4B,cAAc,iBAAiB;AAChE,UAAI,KAAK,2BAA2B;AACnC,cAAM,2BAA2B,IAAI,gBAAgB;AAErD,cAAM,+BAA+B,yBAAyB,IAAI,KAAK,oBAAoB,mBAAwD,CAAC;AACpJ,cAAM,WAAW,KAAK,kBAAkB,KAAK,2BAA2B,KAAK,GAAG;AAEhF,aAAK,sBAAsB,KAAK,oBAAoB,UAAU,8BAA8B;AAAA,UAC3F,iBAAiB,KAAK,OAAO;AAAA,UAC7B,OAAO,SAAS,iBAAiB,gBAAgB;AAAA,UACjD,WAAW,KAAK;AAAA,UAChB,aAAa;AAAA,QACd,GAAG,gBAAgB;AAGnB,qCAA6B,OAAO;AAAA,UACnC,SAAS,KAAK,uBAAuB;AAAA,UACrC,UAAU,KAAK,oBAAoB;AAAA,UACnC,SAAS,KAAK;AAAA,UACd;AAAA,UACA,mBAAmB,CAAC,CAAC,KAAK,uBAAuB;AAAA,UACjD,IAAI;AAAA,YACH,MAAM,KAAK;AAAA,YACX,MAAM,KAAK;AAAA,YACX,SAAS,QAAQ;AAAA,UAClB;AAAA,UACA;AAAA,UACA,KAAK;AAAA,YACJ,UAAU,eAAe;AAAA,YACzB,UAAU,eAAe;AAAA,UAC1B;AAAA,UACA,YAAY,KAAK,sBAAsB,YAAY,MAAM,KAAK,sBAAsB,cAAc,IAAI;AAAA,QACvG,CAAC;AAED,aAAK,oBAAoB;AAAA,UACxB,WAAW,aAAa,4DAA4D,KAAK,uBAAuB,UAAU,KAAK,MAAM,IAAI,QAAQ,SAAS,EAAE,MAAM,EAAE,SAAS,IAAI;AAAA,QAClL;AAEA,aAAK,oBAAoB,GAAG,SAAS,MAAM;AAC1C,eAAK,sBAAsB;AAC3B,mCAAyB,QAAQ;AAAA,QAClC,CAAC;AAED,aAAK,0BAA0B,GAAG,UAAU,MAAM;AACjD,cAAI,KAAK,qBAAqB;AAC7B,iBAAK,oBAAoB,MAAM;AAC/B,iBAAK,sBAAsB;AAC3B,qCAAyB,QAAQ;AAAA,UAClC;AAAA,QACD,CAAC;AAAA,MACF;AAAA,IACD,WAES,KAAK,qBAAqB;AAClC,WAAK,YAAY,KAAK,mBAAmB;AAAA,IAC1C;AAAA,EACD;AAAA;AAAA;AAAA,EAKA,MAAM,gCAA+C;AACpD,QAAI,KAAK,2BAA2B;AACnC,UAAI;AACH,cAAM,KAAK,sBAAsB,OAAO,KAAK,0BAA0B,IAAI,EAAE,mBAAmB,KAAK,CAAC;AAAA,MACvG,SAAS,OAAO;AACf,aAAK,WAAW,MAAM,KAAK;AAAA,MAC5B;AAAA,IACD;AAAA,EACD;AAAA,EAEA,MAAM,0BAAyC;AAC9C,QAAI,KAAK,qBAAqB;AAC7B,YAAM,EAAE,SAAS,IAAI,MAAM,KAAK,kBAAkB,eAAe;AAAA,QAChE,MAAM;AAAA,QACN,SAAS,SAAS,6BAA6B,2EAA2E;AAAA,QAC1H,SAAS;AAAA,UACR,SAAS,EAAE,KAAK,OAAO,SAAS,CAAC,uBAAuB,EAAE,GAAG,OAAO;AAAA,UACpE,SAAS,UAAU,QAAQ;AAAA,QAC5B;AAAA,MACD,GAAG,KAAK,mBAAmB;AAE3B,UAAI,aAAa,GAAG;AACnB,YAAI,KAAK,qBAAqB;AAC7B,eAAK,oBAAoB,QAAQ;AACjC,eAAK,sBAAsB;AAAA,QAC5B;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EAEA,MAAM,uBAAyC;AAC9C,QAAI,KAAK,qBAAqB;AAC7B,YAAM,EAAE,SAAS,IAAI,MAAM,KAAK,kBAAkB,eAAe;AAAA,QAChE,MAAM;AAAA,QACN,SAAS,SAAS,iCAAiC,yJAAyJ;AAAA,QAC5M,SAAS;AAAA,UACR,SAAS,EAAE,KAAK,MAAM,SAAS,CAAC,uBAAuB,EAAE,GAAG,MAAM;AAAA,UAClE,SAAS,UAAU,QAAQ;AAAA,QAC5B;AAAA,MACD,GAAG,KAAK,mBAAmB;AAE3B,aAAO,aAAa;AAAA,IACrB;AAEA,WAAO;AAAA,EACR;AAAA,EAEA,2BAAwC;AACvC,QAAI,CAAC,KAAK,2BAA2B;AACpC,YAAM,IAAI,MAAM,qCAAqC;AAAA,IACtD;AACA,UAAM,SAAS,KAAK,mBAAmB,cAAc,KAAK,0BAA0B,EAAE;AACtF,QAAI,CAAC,QAAQ;AACZ,YAAM,IAAI,MAAM,kBAAkB;AAAA,IACnC;AACA,WAAO;AAAA,EACR;AAAA,EAEA,MAAM,kBAAkB,aAAqB,eAAkE;AAC9G,UAAM,SAAS,KAAK,yBAAyB;AAC7C,UAAM,eAAe;AACrB,UAAM,MAAM,IAAI,wBAAwB;AACxC,WAAO,cAAc,cAAc,IAAI,OAAO,EAAE,cAAc,aAAa,cAAc,CAAC;AAC1F,UAAM,SAAS,MAAM,YAAY,IAAI,QAAQ,aAAW,iBAAiB,KAAK,sCAAsC,WAAW,IAAI,CAAC,GAAY,SAA2C,QAAQ,IAAI,CAAC,CAAC,GAAG,KAAM,MAAM;AACvN,WAAK,WAAW,MAAM,oBAAoB,WAAW,sCAAsC;AAC3F,UAAI,OAAO;AAAA,IACZ,CAAC;AACD,WAAO;AAAA,EACR;AAAA,EAEA,MAAM,iBAAgC;AACrC,SAAK,qBAAqB,MAAM;AAAA,EACjC;AAAA;AAAA,EAIQ,YAAY,QAA6B;AAChD,QAAI,OAAO,YAAY,GAAG;AACzB,aAAO,QAAQ;AAAA,IAChB;AAEA,WAAO,MAAM;AAAA,EACd;AAAA,EAEQ,oBAAuB,UAAwB,cAAgC,SAAgC,YAAmC;AACzJ,UAAM,SAAS,IAAI,cAAc;AAAA,MAChC,YAAY;AAAA,MACZ,aAAa;AAAA,MACb,WAAW;AAAA,MACX,OAAO,SAAS;AAAA,MAChB,QAAQ,SAAS;AAAA,MACjB,UAAU;AAAA,MACV,WAAW;AAAA,MACX,GAAG,SAAS;AAAA,MACZ,GAAG,SAAS;AAAA,MACZ,OAAO,QAAQ;AAAA,MACf,iBAAiB,QAAQ,mBAAmB,iBAAiB;AAAA,MAC7D,gBAAgB;AAAA,QACf,SAAS,WAAW,UAAU,mDAAmD,EAAE;AAAA,QACnF,qBAAqB,CAAC,0BAA0B,aAAa,SAAS,SAAS,CAAC,EAAE;AAAA,QAClF,gBAAgB,KAAK,uBAAuB,eAAe,oBAAoB;AAAA,QAC/E,cAAc;AAAA,QACd,YAAY;AAAA,QACZ,YAAY,sBAAsB,QAAQ,SAAS;AAAA,QACnD,SAAS;AAAA,MACV;AAAA,MACA,aAAa,QAAQ;AAAA,MACrB,sBAAsB;AAAA,IACvB,CAAwE;AAExE,WAAO,qBAAqB,KAAK;AAEjC,WAAO;AAAA,EACR;AAAA,EAEQ,kBAAkB,cAA6B,cAAsB,eAA2C;AAGvH,QAAI;AACJ,UAAM,WAAW,OAAO,eAAe;AAGvC,QAAI,SAAS,WAAW,GAAG;AAC1B,qBAAe,SAAS,CAAC;AAAA,IAC1B,OAGK;AAGJ,UAAI,aAAa;AAChB,cAAM,cAAc,OAAO,qBAAqB;AAChD,uBAAe,OAAO,uBAAuB,WAAW;AAAA,MACzD;AAGA,UAAI,CAAC,gBAAgB,cAAc;AAClC,uBAAe,OAAO,mBAAmB,aAAa,UAAU,CAAC;AAAA,MAClE;AAGA,UAAI,CAAC,cAAc;AAClB,uBAAe,OAAO,kBAAkB,KAAK,SAAS,CAAC;AAAA,MACxD;AAAA,IACD;AAEA,UAAM,gBAAgB,aAAa;AAEnC,UAAM,QAA4B;AAAA,MACjC,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,GAAG,cAAc,IAAK,cAAc,QAAQ,IAAM,eAAe;AAAA,MACjE,GAAG,cAAc,IAAK,cAAc,SAAS,IAAM,gBAAgB;AAAA,IACpE;AAEA,QAAI,cAAc,QAAQ,KAAK,cAAc,SAAS,GAAkE;AACvH,UAAI,MAAM,IAAI,cAAc,GAAG;AAC9B,cAAM,IAAI,cAAc;AAAA,MACzB;AAEA,UAAI,MAAM,IAAI,cAAc,GAAG;AAC9B,cAAM,IAAI,cAAc;AAAA,MACzB;AAEA,UAAI,MAAM,IAAK,cAAc,IAAI,cAAc,OAAQ;AACtD,cAAM,IAAI,cAAc;AAAA,MACzB;AAEA,UAAI,MAAM,IAAK,cAAc,IAAI,cAAc,QAAS;AACvD,cAAM,IAAI,cAAc;AAAA,MACzB;AAEA,UAAI,MAAM,QAAQ,cAAc,OAAO;AACtC,cAAM,QAAQ,cAAc;AAAA,MAC7B;AAEA,UAAI,MAAM,SAAS,cAAc,QAAQ;AACxC,cAAM,SAAS,cAAc;AAAA,MAC9B;AAAA,IACD;AAEA,WAAO;AAAA,EACR;AACD;AA5Qa,mBAAN;AAAA,EAWJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAjBU;",
  "names": []
}
