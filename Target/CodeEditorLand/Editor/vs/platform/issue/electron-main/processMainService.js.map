{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/issue/electron-main/processMainService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { BrowserWindow, BrowserWindowConstructorOptions, contentTracing, Display, IpcMainEvent, screen } from 'electron';\nimport { randomPath } from '../../../base/common/extpath.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { FileAccess } from '../../../base/common/network.js';\nimport { IProcessEnvironment, isMacintosh } from '../../../base/common/platform.js';\nimport { listProcesses } from '../../../base/node/ps.js';\nimport { validatedIpcMain } from '../../../base/parts/ipc/electron-main/ipcMain.js';\nimport { getNLSLanguage, getNLSMessages, localize } from '../../../nls.js';\nimport { IDiagnosticsService, isRemoteDiagnosticError, PerformanceInfo, SystemInfo } from '../../diagnostics/common/diagnostics.js';\nimport { IDiagnosticsMainService } from '../../diagnostics/electron-main/diagnosticsMainService.js';\nimport { IDialogMainService } from '../../dialogs/electron-main/dialogMainService.js';\nimport { IEnvironmentMainService } from '../../environment/electron-main/environmentMainService.js';\nimport { ICSSDevelopmentService } from '../../cssDev/node/cssDevService.js';\nimport { IProcessMainService, ProcessExplorerData, ProcessExplorerWindowConfiguration } from '../common/issue.js';\nimport { ILogService } from '../../log/common/log.js';\nimport { INativeHostMainService } from '../../native/electron-main/nativeHostMainService.js';\nimport product from '../../product/common/product.js';\nimport { IProductService } from '../../product/common/productService.js';\nimport { IIPCObjectUrl, IProtocolMainService } from '../../protocol/electron-main/protocol.js';\nimport { IStateService } from '../../state/node/state.js';\nimport { UtilityProcess } from '../../utilityProcess/electron-main/utilityProcess.js';\nimport { zoomLevelToZoomFactor } from '../../window/common/window.js';\nimport { IWindowState } from '../../window/electron-main/window.js';\nimport { isESM } from '../../../base/common/amd.js';\n\nconst processExplorerWindowState = 'issue.processExplorerWindowState';\n\ninterface IBrowserWindowOptions {\n\tbackgroundColor: string | undefined;\n\ttitle: string;\n\tzoomLevel: number;\n\talwaysOnTop: boolean;\n}\n\ntype IStrictWindowState = Required<Pick<IWindowState, 'x' | 'y' | 'width' | 'height'>>;\n\nexport class ProcessMainService implements IProcessMainService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate static readonly DEFAULT_BACKGROUND_COLOR = '#1E1E1E';\n\n\tprivate processExplorerWindow: BrowserWindow | null = null;\n\tprivate processExplorerParentWindow: BrowserWindow | null = null;\n\n\tconstructor(\n\t\tprivate userEnv: IProcessEnvironment,\n\t\t@IEnvironmentMainService private readonly environmentMainService: IEnvironmentMainService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IDiagnosticsService private readonly diagnosticsService: IDiagnosticsService,\n\t\t@IDiagnosticsMainService private readonly diagnosticsMainService: IDiagnosticsMainService,\n\t\t@IDialogMainService private readonly dialogMainService: IDialogMainService,\n\t\t@INativeHostMainService private readonly nativeHostMainService: INativeHostMainService,\n\t\t@IProtocolMainService private readonly protocolMainService: IProtocolMainService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IStateService private readonly stateService: IStateService,\n\t\t@ICSSDevelopmentService private readonly cssDevelopmentService: ICSSDevelopmentService\n\t) {\n\t\tthis.registerListeners();\n\t}\n\n\t//#region Register Listeners\n\n\tprivate registerListeners(): void {\n\t\tvalidatedIpcMain.on('vscode:listProcesses', async event => {\n\t\t\tconst processes = [];\n\n\t\t\ttry {\n\t\t\t\tprocesses.push({ name: localize('local', \"Local\"), rootProcess: await listProcesses(process.pid) });\n\n\t\t\t\tconst remoteDiagnostics = await this.diagnosticsMainService.getRemoteDiagnostics({ includeProcesses: true });\n\t\t\t\tremoteDiagnostics.forEach(data => {\n\t\t\t\t\tif (isRemoteDiagnosticError(data)) {\n\t\t\t\t\t\tprocesses.push({\n\t\t\t\t\t\t\tname: data.hostName,\n\t\t\t\t\t\t\trootProcess: data\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (data.processes) {\n\t\t\t\t\t\t\tprocesses.push({\n\t\t\t\t\t\t\t\tname: data.hostName,\n\t\t\t\t\t\t\t\trootProcess: data.processes\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\tthis.logService.error(`Listing processes failed: ${e}`);\n\t\t\t}\n\n\t\t\tthis.safeSend(event, 'vscode:listProcessesResponse', processes);\n\t\t});\n\n\t\tvalidatedIpcMain.on('vscode:workbenchCommand', (_: unknown, commandInfo: { id: any; from: any; args: any }) => {\n\t\t\tconst { id, from, args } = commandInfo;\n\n\t\t\tlet parentWindow: BrowserWindow | null;\n\t\t\tswitch (from) {\n\t\t\t\tcase 'processExplorer':\n\t\t\t\t\tparentWindow = this.processExplorerParentWindow;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t// The issue reporter does not use this anymore.\n\t\t\t\t\tthrow new Error(`Unexpected command source: ${from}`);\n\t\t\t}\n\n\t\t\tparentWindow?.webContents.send('vscode:runAction', { id, from, args });\n\t\t});\n\n\t\tvalidatedIpcMain.on('vscode:closeProcessExplorer', event => {\n\t\t\tthis.processExplorerWindow?.close();\n\t\t});\n\n\t\tvalidatedIpcMain.on('vscode:pidToNameRequest', async event => {\n\t\t\tconst mainProcessInfo = await this.diagnosticsMainService.getMainDiagnostics();\n\n\t\t\tconst pidToNames: [number, string][] = [];\n\t\t\tfor (const window of mainProcessInfo.windows) {\n\t\t\t\tpidToNames.push([window.pid, `window [${window.id}] (${window.title})`]);\n\t\t\t}\n\n\t\t\tfor (const { pid, name } of UtilityProcess.getAll()) {\n\t\t\t\tpidToNames.push([pid, name]);\n\t\t\t}\n\n\t\t\tthis.safeSend(event, 'vscode:pidToNameResponse', pidToNames);\n\t\t});\n\t}\n\n\tasync openProcessExplorer(data: ProcessExplorerData): Promise<void> {\n\t\tif (!this.processExplorerWindow) {\n\t\t\tthis.processExplorerParentWindow = BrowserWindow.getFocusedWindow();\n\t\t\tif (this.processExplorerParentWindow) {\n\t\t\t\tconst processExplorerDisposables = new DisposableStore();\n\n\t\t\t\tconst processExplorerWindowConfigUrl = processExplorerDisposables.add(this.protocolMainService.createIPCObjectUrl<ProcessExplorerWindowConfiguration>());\n\n\t\t\t\tconst savedPosition = this.stateService.getItem<IWindowState>(processExplorerWindowState, undefined);\n\t\t\t\tconst position = isStrictWindowState(savedPosition) ? savedPosition : this.getWindowPosition(this.processExplorerParentWindow, 800, 500);\n\n\t\t\t\tthis.processExplorerWindow = this.createBrowserWindow(position, processExplorerWindowConfigUrl, {\n\t\t\t\t\tbackgroundColor: data.styles.backgroundColor,\n\t\t\t\t\ttitle: localize('processExplorer', \"Process Explorer\"),\n\t\t\t\t\tzoomLevel: data.zoomLevel,\n\t\t\t\t\talwaysOnTop: true\n\t\t\t\t}, 'process-explorer');\n\n\t\t\t\t// Store into config object URL\n\t\t\t\tprocessExplorerWindowConfigUrl.update({\n\t\t\t\t\tappRoot: this.environmentMainService.appRoot,\n\t\t\t\t\twindowId: this.processExplorerWindow.id,\n\t\t\t\t\tuserEnv: this.userEnv,\n\t\t\t\t\tdata,\n\t\t\t\t\tproduct,\n\t\t\t\t\tnls: {\n\t\t\t\t\t\tmessages: getNLSMessages(),\n\t\t\t\t\t\tlanguage: getNLSLanguage()\n\t\t\t\t\t},\n\t\t\t\t\tcssModules: this.cssDevelopmentService.isEnabled ? await this.cssDevelopmentService.getCssModules() : undefined\n\t\t\t\t});\n\n\t\t\t\tthis.processExplorerWindow.loadURL(\n\t\t\t\t\tFileAccess.asBrowserUri(`vs/code/electron-sandbox/processExplorer/processExplorer${this.environmentMainService.isBuilt ? '' : '-dev'}.${isESM ? 'esm.' : ''}html`).toString(true)\n\t\t\t\t);\n\n\t\t\t\tthis.processExplorerWindow.on('close', () => {\n\t\t\t\t\tthis.processExplorerWindow = null;\n\t\t\t\t\tprocessExplorerDisposables.dispose();\n\t\t\t\t});\n\n\t\t\t\tthis.processExplorerParentWindow.on('close', () => {\n\t\t\t\t\tif (this.processExplorerWindow) {\n\t\t\t\t\t\tthis.processExplorerWindow.close();\n\t\t\t\t\t\tthis.processExplorerWindow = null;\n\n\t\t\t\t\t\tprocessExplorerDisposables.dispose();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tconst storeState = () => {\n\t\t\t\t\tif (!this.processExplorerWindow) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconst size = this.processExplorerWindow.getSize();\n\t\t\t\t\tconst position = this.processExplorerWindow.getPosition();\n\t\t\t\t\tif (!size || !position) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconst state: IWindowState = {\n\t\t\t\t\t\twidth: size[0],\n\t\t\t\t\t\theight: size[1],\n\t\t\t\t\t\tx: position[0],\n\t\t\t\t\t\ty: position[1]\n\t\t\t\t\t};\n\t\t\t\t\tthis.stateService.setItem(processExplorerWindowState, state);\n\t\t\t\t};\n\n\t\t\t\tthis.processExplorerWindow.on('moved', storeState);\n\t\t\t\tthis.processExplorerWindow.on('resized', storeState);\n\t\t\t}\n\t\t}\n\n\t\tif (this.processExplorerWindow) {\n\t\t\tthis.focusWindow(this.processExplorerWindow);\n\t\t}\n\t}\n\n\tprivate focusWindow(window: BrowserWindow): void {\n\t\tif (window.isMinimized()) {\n\t\t\twindow.restore();\n\t\t}\n\n\t\twindow.focus();\n\t}\n\n\tprivate getWindowPosition(parentWindow: BrowserWindow, defaultWidth: number, defaultHeight: number): IStrictWindowState {\n\n\t\t// We want the new window to open on the same display that the parent is in\n\t\tlet displayToUse: Display | undefined;\n\t\tconst displays = screen.getAllDisplays();\n\n\t\t// Single Display\n\t\tif (displays.length === 1) {\n\t\t\tdisplayToUse = displays[0];\n\t\t}\n\n\t\t// Multi Display\n\t\telse {\n\n\t\t\t// on mac there is 1 menu per window so we need to use the monitor where the cursor currently is\n\t\t\tif (isMacintosh) {\n\t\t\t\tconst cursorPoint = screen.getCursorScreenPoint();\n\t\t\t\tdisplayToUse = screen.getDisplayNearestPoint(cursorPoint);\n\t\t\t}\n\n\t\t\t// if we have a last active window, use that display for the new window\n\t\t\tif (!displayToUse && parentWindow) {\n\t\t\t\tdisplayToUse = screen.getDisplayMatching(parentWindow.getBounds());\n\t\t\t}\n\n\t\t\t// fallback to primary display or first display\n\t\t\tif (!displayToUse) {\n\t\t\t\tdisplayToUse = screen.getPrimaryDisplay() || displays[0];\n\t\t\t}\n\t\t}\n\n\t\tconst displayBounds = displayToUse.bounds;\n\n\t\tconst state: IStrictWindowState = {\n\t\t\twidth: defaultWidth,\n\t\t\theight: defaultHeight,\n\t\t\tx: displayBounds.x + (displayBounds.width / 2) - (defaultWidth / 2),\n\t\t\ty: displayBounds.y + (displayBounds.height / 2) - (defaultHeight / 2)\n\t\t};\n\n\t\tif (displayBounds.width > 0 && displayBounds.height > 0 /* Linux X11 sessions sometimes report wrong display bounds */) {\n\t\t\tif (state.x < displayBounds.x) {\n\t\t\t\tstate.x = displayBounds.x; // prevent window from falling out of the screen to the left\n\t\t\t}\n\n\t\t\tif (state.y < displayBounds.y) {\n\t\t\t\tstate.y = displayBounds.y; // prevent window from falling out of the screen to the top\n\t\t\t}\n\n\t\t\tif (state.x > (displayBounds.x + displayBounds.width)) {\n\t\t\t\tstate.x = displayBounds.x; // prevent window from falling out of the screen to the right\n\t\t\t}\n\n\t\t\tif (state.y > (displayBounds.y + displayBounds.height)) {\n\t\t\t\tstate.y = displayBounds.y; // prevent window from falling out of the screen to the bottom\n\t\t\t}\n\n\t\t\tif (state.width > displayBounds.width) {\n\t\t\t\tstate.width = displayBounds.width; // prevent window from exceeding display bounds width\n\t\t\t}\n\n\t\t\tif (state.height > displayBounds.height) {\n\t\t\t\tstate.height = displayBounds.height; // prevent window from exceeding display bounds height\n\t\t\t}\n\t\t}\n\n\t\treturn state;\n\t}\n\n\tasync stopTracing(): Promise<void> {\n\t\tif (!this.environmentMainService.args.trace) {\n\t\t\treturn; // requires tracing to be on\n\t\t}\n\n\t\tconst path = await contentTracing.stopRecording(`${randomPath(this.environmentMainService.userHome.fsPath, this.productService.applicationName)}.trace.txt`);\n\n\t\t// Inform user to report an issue\n\t\tawait this.dialogMainService.showMessageBox({\n\t\t\ttype: 'info',\n\t\t\tmessage: localize('trace.message', \"Successfully created the trace file\"),\n\t\t\tdetail: localize('trace.detail', \"Please create an issue and manually attach the following file:\\n{0}\", path),\n\t\t\tbuttons: [localize({ key: 'trace.ok', comment: ['&& denotes a mnemonic'] }, \"&&OK\")],\n\t\t}, BrowserWindow.getFocusedWindow() ?? undefined);\n\n\t\t// Show item in explorer\n\t\tthis.nativeHostMainService.showItemInFolder(undefined, path);\n\t}\n\n\tasync getSystemStatus(): Promise<string> {\n\t\tconst [info, remoteData] = await Promise.all([this.diagnosticsMainService.getMainDiagnostics(), this.diagnosticsMainService.getRemoteDiagnostics({ includeProcesses: false, includeWorkspaceMetadata: false })]);\n\t\treturn this.diagnosticsService.getDiagnostics(info, remoteData);\n\t}\n\n\tasync $getSystemInfo(): Promise<SystemInfo> {\n\t\tconst [info, remoteData] = await Promise.all([this.diagnosticsMainService.getMainDiagnostics(), this.diagnosticsMainService.getRemoteDiagnostics({ includeProcesses: false, includeWorkspaceMetadata: false })]);\n\t\tconst msg = await this.diagnosticsService.getSystemInfo(info, remoteData);\n\t\treturn msg;\n\t}\n\n\tasync $getPerformanceInfo(): Promise<PerformanceInfo> {\n\t\ttry {\n\t\t\tconst [info, remoteData] = await Promise.all([this.diagnosticsMainService.getMainDiagnostics(), this.diagnosticsMainService.getRemoteDiagnostics({ includeProcesses: true, includeWorkspaceMetadata: true })]);\n\t\t\treturn await this.diagnosticsService.getPerformanceInfo(info, remoteData);\n\t\t} catch (error) {\n\t\t\tthis.logService.warn('issueService#getPerformanceInfo ', error.message);\n\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate createBrowserWindow<T>(position: IWindowState, ipcObjectUrl: IIPCObjectUrl<T>, options: IBrowserWindowOptions, windowKind: string): BrowserWindow {\n\t\tconst window = new BrowserWindow({\n\t\t\tfullscreen: false,\n\t\t\tskipTaskbar: false,\n\t\t\tresizable: true,\n\t\t\twidth: position.width,\n\t\t\theight: position.height,\n\t\t\tminWidth: 300,\n\t\t\tminHeight: 200,\n\t\t\tx: position.x,\n\t\t\ty: position.y,\n\t\t\ttitle: options.title,\n\t\t\tbackgroundColor: options.backgroundColor || ProcessMainService.DEFAULT_BACKGROUND_COLOR,\n\t\t\twebPreferences: {\n\t\t\t\tpreload: FileAccess.asFileUri('vs/base/parts/sandbox/electron-sandbox/preload.js').fsPath,\n\t\t\t\tadditionalArguments: [`--vscode-window-config=${ipcObjectUrl.resource.toString()}`],\n\t\t\t\tv8CacheOptions: this.environmentMainService.useCodeCache ? 'bypassHeatCheck' : 'none',\n\t\t\t\tenableWebSQL: false,\n\t\t\t\tspellcheck: false,\n\t\t\t\tzoomFactor: zoomLevelToZoomFactor(options.zoomLevel),\n\t\t\t\tsandbox: true\n\t\t\t},\n\t\t\talwaysOnTop: options.alwaysOnTop,\n\t\t\texperimentalDarkMode: true\n\t\t} as BrowserWindowConstructorOptions & { experimentalDarkMode: boolean });\n\n\t\twindow.setMenuBarVisibility(false);\n\n\t\treturn window;\n\t}\n\n\tprivate safeSend(event: IpcMainEvent, channel: string, ...args: unknown[]): void {\n\t\tif (!event.sender.isDestroyed()) {\n\t\t\tevent.sender.send(channel, ...args);\n\t\t}\n\t}\n\n\tasync closeProcessExplorer(): Promise<void> {\n\t\tthis.processExplorerWindow?.close();\n\t}\n}\n\nfunction isStrictWindowState(obj: unknown): obj is IStrictWindowState {\n\tif (typeof obj !== 'object' || obj === null) {\n\t\treturn false;\n\t}\n\treturn (\n\t\t'x' in obj &&\n\t\t'y' in obj &&\n\t\t'width' in obj &&\n\t\t'height' in obj\n\t);\n}\n"],
  "mappings": "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",
  "names": ["position"]
}
