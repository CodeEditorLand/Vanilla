var h=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var l=(i,r,e,t)=>{for(var o=t>1?void 0:t?d(r,e):r,n=i.length-1,s;n>=0;n--)(s=i[n])&&(o=(t?s(r,e,o):s(o))||o);return t&&o&&h(r,e,o),o},R=(i,r)=>(e,t)=>r(e,t,i);import{DeferredPromise as u}from"../../../base/common/async.js";import*as m from"../../../base/common/errors.js";import{Emitter as v}from"../../../base/common/event.js";import{Disposable as p}from"../../../base/common/lifecycle.js";import{RemoteAuthorities as c}from"../../../base/common/network.js";import{IProductService as _}from"../../product/common/productService.js";import{RemoteConnectionType as g}from"../common/remoteAuthorityResolver.js";let a=class extends p{constructor(e,t){super();this.remoteResourceLoader=t;this._resolveAuthorityRequests=new Map,this._connectionTokens=new Map,this._canonicalURIRequests=new Map,this._canonicalURIProvider=null,c.setServerRootPath(e,void 0)}_onDidChangeConnectionData=this._register(new v);onDidChangeConnectionData=this._onDidChangeConnectionData.event;_resolveAuthorityRequests;_connectionTokens;_canonicalURIRequests;_canonicalURIProvider;resolveAuthority(e){return this._resolveAuthorityRequests.has(e)||this._resolveAuthorityRequests.set(e,new u),this._resolveAuthorityRequests.get(e).p}async getCanonicalURI(e){const t=e.toString(),o=this._canonicalURIRequests.get(t);if(o)return o.result.p;const n=new u;return this._canonicalURIProvider?.(e).then(s=>n.complete(s),s=>n.error(s)),this._canonicalURIRequests.set(t,{input:e,result:n}),n.p}getConnectionData(e){if(!this._resolveAuthorityRequests.has(e))return null;const t=this._resolveAuthorityRequests.get(e);if(!t.isResolved)return null;const o=this._connectionTokens.get(e);return{connectTo:t.value.authority.connectTo,connectionToken:o}}_clearResolvedAuthority(e){this._resolveAuthorityRequests.has(e)&&(this._resolveAuthorityRequests.get(e).cancel(),this._resolveAuthorityRequests.delete(e))}_setResolvedAuthority(e,t){if(this._resolveAuthorityRequests.has(e.authority)){const o=this._resolveAuthorityRequests.get(e.authority);e.connectTo.type===g.WebSocket?c.set(e.authority,e.connectTo.host,e.connectTo.port):c.setDelegate(this.remoteResourceLoader.getResourceUriProvider()),e.connectionToken&&c.setConnectionToken(e.authority,e.connectionToken),o.complete({authority:e,options:t}),this._onDidChangeConnectionData.fire()}}_setResolvedAuthorityError(e,t){this._resolveAuthorityRequests.has(e)&&this._resolveAuthorityRequests.get(e).error(m.ErrorNoTelemetry.fromError(t))}_setAuthorityConnectionToken(e,t){this._connectionTokens.set(e,t),c.setConnectionToken(e,t),this._onDidChangeConnectionData.fire()}_setCanonicalURIProvider(e){this._canonicalURIProvider=e,this._canonicalURIRequests.forEach(({result:t,input:o})=>{this._canonicalURIProvider(o).then(n=>t.complete(n),n=>t.error(n))})}};a=l([R(0,_)],a);export{a as RemoteAuthorityResolverService};
