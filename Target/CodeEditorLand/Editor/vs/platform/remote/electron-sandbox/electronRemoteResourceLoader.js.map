{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/remote/electron-sandbox/electronRemoteResourceLoader.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer, encodeBase64 } from '../../../base/common/buffer.js';\nimport { Event } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { getMediaOrTextMime } from '../../../base/common/mime.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { IServerChannel } from '../../../base/parts/ipc/common/ipc.js';\nimport { FileOperationError, FileOperationResult, IFileContent, IFileService } from '../../files/common/files.js';\nimport { IMainProcessService } from '../../ipc/common/mainProcessService.js';\nimport { NODE_REMOTE_RESOURCE_CHANNEL_NAME, NODE_REMOTE_RESOURCE_IPC_METHOD_NAME, NodeRemoteResourceResponse } from '../common/electronRemoteResources.js';\n\nexport class ElectronRemoteResourceLoader extends Disposable {\n\tconstructor(\n\t\tprivate readonly windowId: number,\n\t\t@IMainProcessService mainProcessService: IMainProcessService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t) {\n\t\tsuper();\n\n\t\tconst channel: IServerChannel = {\n\t\t\tlisten<T>(_: unknown, event: string): Event<T> {\n\t\t\t\tthrow new Error(`Event not found: ${event}`);\n\t\t\t},\n\n\t\t\tcall: (_: unknown, command: string, arg?: any): Promise<any> => {\n\t\t\t\tswitch (command) {\n\t\t\t\t\tcase NODE_REMOTE_RESOURCE_IPC_METHOD_NAME: return this.doRequest(URI.revive(arg[0]));\n\t\t\t\t}\n\n\t\t\t\tthrow new Error(`Call not found: ${command}`);\n\t\t\t}\n\t\t};\n\n\t\tmainProcessService.registerChannel(NODE_REMOTE_RESOURCE_CHANNEL_NAME, channel);\n\t}\n\n\tprivate async doRequest(uri: URI): Promise<NodeRemoteResourceResponse> {\n\t\tlet content: IFileContent;\n\t\ttry {\n\t\t\tconst params = new URLSearchParams(uri.query);\n\t\t\tconst actual = uri.with({\n\t\t\t\tscheme: params.get('scheme')!,\n\t\t\t\tauthority: params.get('authority')!,\n\t\t\t\tquery: '',\n\t\t\t});\n\t\t\tcontent = await this.fileService.readFile(actual);\n\t\t} catch (e) {\n\t\t\tconst str = encodeBase64(VSBuffer.fromString(e.message));\n\t\t\tif (e instanceof FileOperationError && e.fileOperationResult === FileOperationResult.FILE_NOT_FOUND) {\n\t\t\t\treturn { statusCode: 404, body: str };\n\t\t\t} else {\n\t\t\t\treturn { statusCode: 500, body: str };\n\t\t\t}\n\t\t}\n\n\t\tconst mimeType = uri.path && getMediaOrTextMime(uri.path);\n\t\treturn { statusCode: 200, body: encodeBase64(content.value), mimeType };\n\t}\n\n\tpublic getResourceUriProvider() {\n\t\treturn (uri: URI) => uri.with({\n\t\t\tscheme: Schemas.vscodeManagedRemoteResource,\n\t\t\tauthority: `window:${this.windowId}`,\n\t\t\tquery: new URLSearchParams({ authority: uri.authority, scheme: uri.scheme }).toString(),\n\t\t});\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,UAAU,oBAAoB;AACvC,SAAS,aAAa;AACtB,SAAS,kBAAkB;AAC3B,SAAS,0BAA0B;AACnC,SAAS,eAAe;AACxB,SAAS,WAAW;AACpB,SAAS,sBAAsB;AAC/B,SAAS,oBAAoB,qBAAqB,cAAc,oBAAoB;AACpF,SAAS,2BAA2B;AACpC,SAAS,mCAAmC,sCAAsC,kCAAkC;AAE7G,IAAM,+BAAN,cAA2C,WAAW;AAAA,EAC5D,YACkB,UACI,oBACU,aAC9B;AACD,UAAM;AAJW;AAEc;AAI/B,UAAM,UAA0B;AAAA,MAC/B,OAAU,GAAY,OAAyB;AAC9C,cAAM,IAAI,MAAM,oBAAoB,KAAK,EAAE;AAAA,MAC5C;AAAA,MAEA,MAAM,wBAAC,GAAY,SAAiB,QAA4B;AAC/D,gBAAQ,SAAS;AAAA,UAChB,KAAK;AAAsC,mBAAO,KAAK,UAAU,IAAI,OAAO,IAAI,CAAC,CAAC,CAAC;AAAA,QACpF;AAEA,cAAM,IAAI,MAAM,mBAAmB,OAAO,EAAE;AAAA,MAC7C,GANM;AAAA,IAOP;AAEA,uBAAmB,gBAAgB,mCAAmC,OAAO;AAAA,EAC9E;AAAA,EAvCD,OAgB6D;AAAA;AAAA;AAAA,EAyB5D,MAAc,UAAU,KAA+C;AACtE,QAAI;AACJ,QAAI;AACH,YAAM,SAAS,IAAI,gBAAgB,IAAI,KAAK;AAC5C,YAAM,SAAS,IAAI,KAAK;AAAA,QACvB,QAAQ,OAAO,IAAI,QAAQ;AAAA,QAC3B,WAAW,OAAO,IAAI,WAAW;AAAA,QACjC,OAAO;AAAA,MACR,CAAC;AACD,gBAAU,MAAM,KAAK,YAAY,SAAS,MAAM;AAAA,IACjD,SAAS,GAAG;AACX,YAAM,MAAM,aAAa,SAAS,WAAW,EAAE,OAAO,CAAC;AACvD,UAAI,aAAa,sBAAsB,EAAE,wBAAwB,oBAAoB,gBAAgB;AACpG,eAAO,EAAE,YAAY,KAAK,MAAM,IAAI;AAAA,MACrC,OAAO;AACN,eAAO,EAAE,YAAY,KAAK,MAAM,IAAI;AAAA,MACrC;AAAA,IACD;AAEA,UAAM,WAAW,IAAI,QAAQ,mBAAmB,IAAI,IAAI;AACxD,WAAO,EAAE,YAAY,KAAK,MAAM,aAAa,QAAQ,KAAK,GAAG,SAAS;AAAA,EACvE;AAAA,EAEO,yBAAyB;AAC/B,WAAO,CAAC,QAAa,IAAI,KAAK;AAAA,MAC7B,QAAQ,QAAQ;AAAA,MAChB,WAAW,UAAU,KAAK,QAAQ;AAAA,MAClC,OAAO,IAAI,gBAAgB,EAAE,WAAW,IAAI,WAAW,QAAQ,IAAI,OAAO,CAAC,EAAE,SAAS;AAAA,IACvF,CAAC;AAAA,EACF;AACD;AAvDa,+BAAN;AAAA,EAGJ;AAAA,EACA;AAAA,GAJU;",
  "names": []
}
