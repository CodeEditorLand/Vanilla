var p=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var h=(s,i,e,t)=>{for(var o=t>1?void 0:t?d(i,e):i,r=s.length-1,n;r>=0;r--)(n=s[r])&&(o=(t?n(i,e,o):n(o))||o);return t&&o&&p(i,e,o),o},c=(s,i)=>(e,t)=>i(e,t,s);import{encodeBase64 as l,VSBuffer as f}from"../../../base/common/buffer.js";import"../../../base/common/event.js";import{Disposable as v}from"../../../base/common/lifecycle.js";import{getMediaOrTextMime as w}from"../../../base/common/mime.js";import{Schemas as y}from"../../../base/common/network.js";import{URI as E}from"../../../base/common/uri.js";import"../../../base/parts/ipc/common/ipc.js";import{FileOperationError as R,FileOperationResult as S,IFileService as I}from"../../files/common/files.js";import{IMainProcessService as C}from"../../ipc/common/mainProcessService.js";import{NODE_REMOTE_RESOURCE_CHANNEL_NAME as O,NODE_REMOTE_RESOURCE_IPC_METHOD_NAME as _}from"../common/electronRemoteResources.js";let m=class extends v{constructor(e,t,o){super();this.windowId=e;this.fileService=o;const r={listen(n,a){throw new Error(`Event not found: ${a}`)},call:(n,a,u)=>{switch(a){case _:return this.doRequest(E.revive(u[0]))}throw new Error(`Call not found: ${a}`)}};t.registerChannel(O,r)}async doRequest(e){let t;try{const r=new URLSearchParams(e.query),n=e.with({scheme:r.get("scheme"),authority:r.get("authority"),query:""});t=await this.fileService.readFile(n)}catch(r){const n=l(f.fromString(r.message));return r instanceof R&&r.fileOperationResult===S.FILE_NOT_FOUND?{statusCode:404,body:n}:{statusCode:500,body:n}}const o=e.path&&w(e.path);return{statusCode:200,body:l(t.value),mimeType:o}}getResourceUriProvider(){return e=>e.with({scheme:y.vscodeManagedRemoteResource,authority:`window:${this.windowId}`,query:new URLSearchParams({authority:e.authority,scheme:e.scheme}).toString()})}};m=h([c(1,C),c(2,I)],m);export{m as ElectronRemoteResourceLoader};
