{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/remote/test/electron-sandbox/remoteAuthorityResolverService.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\nimport product from '../../../product/common/product.js';\nimport { IProductService } from '../../../product/common/productService.js';\nimport { RemoteAuthorityResolverError, RemoteAuthorityResolverErrorCode } from '../../common/remoteAuthorityResolver.js';\nimport { RemoteAuthorityResolverService } from '../../electron-sandbox/remoteAuthorityResolverService.js';\n\nsuite('RemoteAuthorityResolverService', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('issue #147318: RemoteAuthorityResolverError keeps the same type', async () => {\n\t\tconst productService: IProductService = { _serviceBrand: undefined, ...product };\n\t\tconst service = new RemoteAuthorityResolverService(productService, undefined as any);\n\t\tconst result = service.resolveAuthority('test+x');\n\t\tservice._setResolvedAuthorityError('test+x', new RemoteAuthorityResolverError('something', RemoteAuthorityResolverErrorCode.TemporarilyNotAvailable));\n\t\ttry {\n\t\t\tawait result;\n\t\t\tassert.fail();\n\t\t} catch (err) {\n\t\t\tassert.strictEqual(RemoteAuthorityResolverError.isTemporarilyNotAvailable(err), true);\n\t\t}\n\t\tservice.dispose();\n\t});\n});\n"],
  "mappings": "AAKA,OAAO,YAAY;AACnB,SAAS,+CAA+C;AACxD,OAAO,aAAa;AACpB,SAAS,uBAAuB;AAChC,SAAS,8BAA8B,wCAAwC;AAC/E,SAAS,sCAAsC;AAE/C,MAAM,kCAAkC,MAAM;AAE7C,0CAAwC;AAExC,OAAK,mEAAmE,YAAY;AACnF,UAAM,iBAAkC,EAAE,eAAe,QAAW,GAAG,QAAQ;AAC/E,UAAM,UAAU,IAAI,+BAA+B,gBAAgB,MAAgB;AACnF,UAAM,SAAS,QAAQ,iBAAiB,QAAQ;AAChD,YAAQ,2BAA2B,UAAU,IAAI,6BAA6B,aAAa,iCAAiC,uBAAuB,CAAC;AACpJ,QAAI;AACH,YAAM;AACN,aAAO,KAAK;AAAA,IACb,SAAS,KAAK;AACb,aAAO,YAAY,6BAA6B,0BAA0B,GAAG,GAAG,IAAI;AAAA,IACrF;AACA,YAAQ,QAAQ;AAAA,EACjB,CAAC;AACF,CAAC;",
  "names": []
}
