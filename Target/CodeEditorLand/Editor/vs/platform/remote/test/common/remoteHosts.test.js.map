{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/remote/test/common/remoteHosts.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\nimport { parseAuthorityWithOptionalPort, parseAuthorityWithPort } from '../../common/remoteHosts.js';\n\nsuite('remoteHosts', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('parseAuthority hostname', () => {\n\t\tassert.deepStrictEqual(parseAuthorityWithPort('localhost:8080'), { host: 'localhost', port: 8080 });\n\t});\n\n\ttest('parseAuthority ipv4', () => {\n\t\tassert.deepStrictEqual(parseAuthorityWithPort('127.0.0.1:8080'), { host: '127.0.0.1', port: 8080 });\n\t});\n\n\ttest('parseAuthority ipv6', () => {\n\t\tassert.deepStrictEqual(parseAuthorityWithPort('[2001:0db8:85a3:0000:0000:8a2e:0370:7334]:8080'), { host: '[2001:0db8:85a3:0000:0000:8a2e:0370:7334]', port: 8080 });\n\t});\n\n\ttest('parseAuthorityWithOptionalPort hostname', () => {\n\t\tassert.deepStrictEqual(parseAuthorityWithOptionalPort('localhost:8080', 123), { host: 'localhost', port: 8080 });\n\t\tassert.deepStrictEqual(parseAuthorityWithOptionalPort('localhost', 123), { host: 'localhost', port: 123 });\n\t});\n\n\ttest('parseAuthorityWithOptionalPort ipv4', () => {\n\t\tassert.deepStrictEqual(parseAuthorityWithOptionalPort('127.0.0.1:8080', 123), { host: '127.0.0.1', port: 8080 });\n\t\tassert.deepStrictEqual(parseAuthorityWithOptionalPort('127.0.0.1', 123), { host: '127.0.0.1', port: 123 });\n\t});\n\n\ttest('parseAuthorityWithOptionalPort ipv6', () => {\n\t\tassert.deepStrictEqual(parseAuthorityWithOptionalPort('[2001:0db8:85a3:0000:0000:8a2e:0370:7334]:8080', 123), { host: '[2001:0db8:85a3:0000:0000:8a2e:0370:7334]', port: 8080 });\n\t\tassert.deepStrictEqual(parseAuthorityWithOptionalPort('[2001:0db8:85a3:0000:0000:8a2e:0370:7334]', 123), { host: '[2001:0db8:85a3:0000:0000:8a2e:0370:7334]', port: 123 });\n\t});\n\n\ttest('issue #151748: Error: Remote authorities containing \\'+\\' need to be resolved!', () => {\n\t\tassert.deepStrictEqual(parseAuthorityWithOptionalPort('codespaces+aaaaa-aaaaa-aaaa-aaaaa-a111aa111', 123), { host: 'codespaces+aaaaa-aaaaa-aaaa-aaaaa-a111aa111', port: 123 });\n\t});\n\n});\n"],
  "mappings": "AAKA,OAAO,YAAY;AACnB,SAAS,+CAA+C;AACxD,SAAS,gCAAgC,8BAA8B;AAEvE,MAAM,eAAe,MAAM;AAE1B,0CAAwC;AAExC,OAAK,2BAA2B,MAAM;AACrC,WAAO,gBAAgB,uBAAuB,gBAAgB,GAAG,EAAE,MAAM,aAAa,MAAM,KAAK,CAAC;AAAA,EACnG,CAAC;AAED,OAAK,uBAAuB,MAAM;AACjC,WAAO,gBAAgB,uBAAuB,gBAAgB,GAAG,EAAE,MAAM,aAAa,MAAM,KAAK,CAAC;AAAA,EACnG,CAAC;AAED,OAAK,uBAAuB,MAAM;AACjC,WAAO,gBAAgB,uBAAuB,gDAAgD,GAAG,EAAE,MAAM,6CAA6C,MAAM,KAAK,CAAC;AAAA,EACnK,CAAC;AAED,OAAK,2CAA2C,MAAM;AACrD,WAAO,gBAAgB,+BAA+B,kBAAkB,GAAG,GAAG,EAAE,MAAM,aAAa,MAAM,KAAK,CAAC;AAC/G,WAAO,gBAAgB,+BAA+B,aAAa,GAAG,GAAG,EAAE,MAAM,aAAa,MAAM,IAAI,CAAC;AAAA,EAC1G,CAAC;AAED,OAAK,uCAAuC,MAAM;AACjD,WAAO,gBAAgB,+BAA+B,kBAAkB,GAAG,GAAG,EAAE,MAAM,aAAa,MAAM,KAAK,CAAC;AAC/G,WAAO,gBAAgB,+BAA+B,aAAa,GAAG,GAAG,EAAE,MAAM,aAAa,MAAM,IAAI,CAAC;AAAA,EAC1G,CAAC;AAED,OAAK,uCAAuC,MAAM;AACjD,WAAO,gBAAgB,+BAA+B,kDAAkD,GAAG,GAAG,EAAE,MAAM,6CAA6C,MAAM,KAAK,CAAC;AAC/K,WAAO,gBAAgB,+BAA+B,6CAA6C,GAAG,GAAG,EAAE,MAAM,6CAA6C,MAAM,IAAI,CAAC;AAAA,EAC1K,CAAC;AAED,OAAK,gFAAkF,MAAM;AAC5F,WAAO,gBAAgB,+BAA+B,+CAA+C,GAAG,GAAG,EAAE,MAAM,+CAA+C,MAAM,IAAI,CAAC;AAAA,EAC9K,CAAC;AAEF,CAAC;",
  "names": []
}
