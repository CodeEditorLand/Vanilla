{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/remote/browser/browserSocketFactory.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from \"../../../base/browser/dom.js\";\nimport { mainWindow } from \"../../../base/browser/window.js\";\nimport { RunOnceScheduler } from \"../../../base/common/async.js\";\nimport { VSBuffer } from \"../../../base/common/buffer.js\";\nimport { Emitter, type Event } from \"../../../base/common/event.js\";\nimport {\n\tDisposable,\n\ttype IDisposable,\n} from \"../../../base/common/lifecycle.js\";\nimport {\n\ttype ISocket,\n\ttype SocketCloseEvent,\n\tSocketCloseEventType,\n\tSocketDiagnostics,\n\tSocketDiagnosticsEventType,\n} from \"../../../base/parts/ipc/common/ipc.net.js\";\nimport {\n\tRemoteAuthorityResolverError,\n\tRemoteAuthorityResolverErrorCode,\n\ttype RemoteConnectionType,\n\ttype WebSocketRemoteConnection,\n} from \"../common/remoteAuthorityResolver.js\";\nimport type { ISocketFactory } from \"../common/remoteSocketFactoryService.js\";\n\nexport interface IWebSocketFactory {\n\tcreate(url: string, debugLabel: string): IWebSocket;\n}\n\nexport interface IWebSocketCloseEvent {\n\t/**\n\t * Returns the WebSocket connection close code provided by the server.\n\t */\n\treadonly code: number;\n\t/**\n\t * Returns the WebSocket connection close reason provided by the server.\n\t */\n\treadonly reason: string;\n\t/**\n\t * Returns true if the connection closed cleanly; false otherwise.\n\t */\n\treadonly wasClean: boolean;\n\t/**\n\t * Underlying event.\n\t */\n\treadonly event: any | undefined;\n}\n\nexport interface IWebSocket {\n\treadonly onData: Event<ArrayBuffer>;\n\treadonly onOpen: Event<void>;\n\treadonly onClose: Event<IWebSocketCloseEvent | void>;\n\treadonly onError: Event<any>;\n\n\ttraceSocketEvent?(\n\t\ttype: SocketDiagnosticsEventType,\n\t\tdata?: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView | any,\n\t): void;\n\tsend(data: ArrayBuffer | ArrayBufferView): void;\n\tclose(): void;\n}\n\nclass BrowserWebSocket extends Disposable implements IWebSocket {\n\tprivate readonly _onData = new Emitter<ArrayBuffer>();\n\tpublic readonly onData = this._onData.event;\n\n\tprivate readonly _onOpen = this._register(new Emitter<void>());\n\tpublic readonly onOpen = this._onOpen.event;\n\n\tprivate readonly _onClose = this._register(\n\t\tnew Emitter<IWebSocketCloseEvent>(),\n\t);\n\tpublic readonly onClose = this._onClose.event;\n\n\tprivate readonly _onError = this._register(new Emitter<any>());\n\tpublic readonly onError = this._onError.event;\n\n\tprivate readonly _debugLabel: string;\n\tprivate readonly _socket: WebSocket;\n\tprivate readonly _fileReader: FileReader;\n\tprivate readonly _queue: Blob[];\n\tprivate _isReading: boolean;\n\tprivate _isClosed: boolean;\n\n\tprivate readonly _socketMessageListener: (ev: MessageEvent) => void;\n\n\tpublic traceSocketEvent(\n\t\ttype: SocketDiagnosticsEventType,\n\t\tdata?: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView | any,\n\t): void {\n\t\tSocketDiagnostics.traceSocketEvent(\n\t\t\tthis._socket,\n\t\t\tthis._debugLabel,\n\t\t\ttype,\n\t\t\tdata,\n\t\t);\n\t}\n\n\tconstructor(url: string, debugLabel: string) {\n\t\tsuper();\n\t\tthis._debugLabel = debugLabel;\n\t\tthis._socket = new WebSocket(url);\n\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.Created, {\n\t\t\ttype: \"BrowserWebSocket\",\n\t\t\turl,\n\t\t});\n\t\tthis._fileReader = new FileReader();\n\t\tthis._queue = [];\n\t\tthis._isReading = false;\n\t\tthis._isClosed = false;\n\n\t\tthis._fileReader.onload = (event) => {\n\t\t\tthis._isReading = false;\n\t\t\tconst buff = <ArrayBuffer>(<any>event.target).result;\n\n\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.Read, buff);\n\t\t\tthis._onData.fire(buff);\n\n\t\t\tif (this._queue.length > 0) {\n\t\t\t\tenqueue(this._queue.shift()!);\n\t\t\t}\n\t\t};\n\n\t\tconst enqueue = (blob: Blob) => {\n\t\t\tif (this._isReading) {\n\t\t\t\tthis._queue.push(blob);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._isReading = true;\n\t\t\tthis._fileReader.readAsArrayBuffer(blob);\n\t\t};\n\n\t\tthis._socketMessageListener = (ev: MessageEvent) => {\n\t\t\tconst blob = <Blob>ev.data;\n\t\t\tthis.traceSocketEvent(\n\t\t\t\tSocketDiagnosticsEventType.BrowserWebSocketBlobReceived,\n\t\t\t\t{ type: blob.type, size: blob.size },\n\t\t\t);\n\t\t\tenqueue(blob);\n\t\t};\n\t\tthis._socket.addEventListener(\"message\", this._socketMessageListener);\n\n\t\tthis._register(\n\t\t\tdom.addDisposableListener(this._socket, \"open\", (e) => {\n\t\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.Open);\n\t\t\t\tthis._onOpen.fire();\n\t\t\t}),\n\t\t);\n\n\t\t// WebSockets emit error events that do not contain any real information\n\t\t// Our only chance of getting to the root cause of an error is to\n\t\t// listen to the close event which gives out some real information:\n\t\t// - https://www.w3.org/TR/websockets/#closeevent\n\t\t// - https://tools.ietf.org/html/rfc6455#section-11.7\n\t\t//\n\t\t// But the error event is emitted before the close event, so we therefore\n\t\t// delay the error event processing in the hope of receiving a close event\n\t\t// with more information\n\n\t\tlet pendingErrorEvent: any | null = null;\n\n\t\tconst sendPendingErrorNow = () => {\n\t\t\tconst err = pendingErrorEvent;\n\t\t\tpendingErrorEvent = null;\n\t\t\tthis._onError.fire(err);\n\t\t};\n\n\t\tconst errorRunner = this._register(\n\t\t\tnew RunOnceScheduler(sendPendingErrorNow, 0),\n\t\t);\n\n\t\tconst sendErrorSoon = (err: any) => {\n\t\t\terrorRunner.cancel();\n\t\t\tpendingErrorEvent = err;\n\t\t\terrorRunner.schedule();\n\t\t};\n\n\t\tconst sendErrorNow = (err: any) => {\n\t\t\terrorRunner.cancel();\n\t\t\tpendingErrorEvent = err;\n\t\t\tsendPendingErrorNow();\n\t\t};\n\n\t\tthis._register(\n\t\t\tdom.addDisposableListener(\n\t\t\t\tthis._socket,\n\t\t\t\t\"close\",\n\t\t\t\t(e: CloseEvent) => {\n\t\t\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.Close, {\n\t\t\t\t\t\tcode: e.code,\n\t\t\t\t\t\treason: e.reason,\n\t\t\t\t\t\twasClean: e.wasClean,\n\t\t\t\t\t});\n\n\t\t\t\t\tthis._isClosed = true;\n\n\t\t\t\t\tif (pendingErrorEvent) {\n\t\t\t\t\t\tif (navigator.onLine) {\n\t\t\t\t\t\t\t// An error event is pending\n\t\t\t\t\t\t\t// The browser appears to be online...\n\t\t\t\t\t\t\tif (e.wasClean) {\n\t\t\t\t\t\t\t\t// this was a clean close => send existing error\n\t\t\t\t\t\t\t\terrorRunner.cancel();\n\t\t\t\t\t\t\t\tsendPendingErrorNow();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Let's be optimistic and hope that perhaps the server could not be reached or something\n\t\t\t\t\t\t\t\tsendErrorNow(\n\t\t\t\t\t\t\t\t\tnew RemoteAuthorityResolverError(\n\t\t\t\t\t\t\t\t\t\te.reason ||\n\t\t\t\t\t\t\t\t\t\t\t`WebSocket close with status code ${e.code}`,\n\t\t\t\t\t\t\t\t\t\tRemoteAuthorityResolverErrorCode.TemporarilyNotAvailable,\n\t\t\t\t\t\t\t\t\t\te,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// The browser is offline => this is a temporary error which might resolve itself\n\t\t\t\t\t\t\tsendErrorNow(\n\t\t\t\t\t\t\t\tnew RemoteAuthorityResolverError(\n\t\t\t\t\t\t\t\t\t\"Browser is offline\",\n\t\t\t\t\t\t\t\t\tRemoteAuthorityResolverErrorCode.TemporarilyNotAvailable,\n\t\t\t\t\t\t\t\t\te,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._onClose.fire({\n\t\t\t\t\t\tcode: e.code,\n\t\t\t\t\t\treason: e.reason,\n\t\t\t\t\t\twasClean: e.wasClean,\n\t\t\t\t\t\tevent: e,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\tdom.addDisposableListener(this._socket, \"error\", (err) => {\n\t\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.Error, {\n\t\t\t\t\tmessage: err?.message,\n\t\t\t\t});\n\t\t\t\tsendErrorSoon(err);\n\t\t\t}),\n\t\t);\n\t}\n\n\tsend(data: ArrayBuffer | ArrayBufferView): void {\n\t\tif (this._isClosed) {\n\t\t\t// Refuse to write data to closed WebSocket...\n\t\t\treturn;\n\t\t}\n\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.Write, data);\n\t\tthis._socket.send(data);\n\t}\n\n\tclose(): void {\n\t\tthis._isClosed = true;\n\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.Close);\n\t\tthis._socket.close();\n\t\tthis._socket.removeEventListener(\n\t\t\t\"message\",\n\t\t\tthis._socketMessageListener,\n\t\t);\n\t\tthis.dispose();\n\t}\n}\n\nconst defaultWebSocketFactory = new (class implements IWebSocketFactory {\n\tcreate(url: string, debugLabel: string): IWebSocket {\n\t\treturn new BrowserWebSocket(url, debugLabel);\n\t}\n})();\n\nclass BrowserSocket implements ISocket {\n\tpublic readonly socket: IWebSocket;\n\tpublic readonly debugLabel: string;\n\n\tpublic traceSocketEvent(\n\t\ttype: SocketDiagnosticsEventType,\n\t\tdata?: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView | any,\n\t): void {\n\t\tif (typeof this.socket.traceSocketEvent === \"function\") {\n\t\t\tthis.socket.traceSocketEvent(type, data);\n\t\t} else {\n\t\t\tSocketDiagnostics.traceSocketEvent(\n\t\t\t\tthis.socket,\n\t\t\t\tthis.debugLabel,\n\t\t\t\ttype,\n\t\t\t\tdata,\n\t\t\t);\n\t\t}\n\t}\n\n\tconstructor(socket: IWebSocket, debugLabel: string) {\n\t\tthis.socket = socket;\n\t\tthis.debugLabel = debugLabel;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.socket.close();\n\t}\n\n\tpublic onData(listener: (e: VSBuffer) => void): IDisposable {\n\t\treturn this.socket.onData((data) =>\n\t\t\tlistener(VSBuffer.wrap(new Uint8Array(data))),\n\t\t);\n\t}\n\n\tpublic onClose(listener: (e: SocketCloseEvent) => void): IDisposable {\n\t\tconst adapter = (e: IWebSocketCloseEvent | void) => {\n\t\t\tif (typeof e === \"undefined\") {\n\t\t\t\tlistener(e);\n\t\t\t} else {\n\t\t\t\tlistener({\n\t\t\t\t\ttype: SocketCloseEventType.WebSocketCloseEvent,\n\t\t\t\t\tcode: e.code,\n\t\t\t\t\treason: e.reason,\n\t\t\t\t\twasClean: e.wasClean,\n\t\t\t\t\tevent: e.event,\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\treturn this.socket.onClose(adapter);\n\t}\n\n\tpublic onEnd(listener: () => void): IDisposable {\n\t\treturn Disposable.None;\n\t}\n\n\tpublic write(buffer: VSBuffer): void {\n\t\tthis.socket.send(buffer.buffer);\n\t}\n\n\tpublic end(): void {\n\t\tthis.socket.close();\n\t}\n\n\tpublic drain(): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n}\n\nexport class BrowserSocketFactory\n\timplements ISocketFactory<RemoteConnectionType.WebSocket>\n{\n\tprivate readonly _webSocketFactory: IWebSocketFactory;\n\n\tconstructor(webSocketFactory: IWebSocketFactory | null | undefined) {\n\t\tthis._webSocketFactory = webSocketFactory || defaultWebSocketFactory;\n\t}\n\n\tsupports(connectTo: WebSocketRemoteConnection): boolean {\n\t\treturn true;\n\t}\n\n\tconnect(\n\t\t{ host, port }: WebSocketRemoteConnection,\n\t\tpath: string,\n\t\tquery: string,\n\t\tdebugLabel: string,\n\t): Promise<ISocket> {\n\t\treturn new Promise<ISocket>((resolve, reject) => {\n\t\t\tconst webSocketSchema = /^https:/.test(mainWindow.location.href)\n\t\t\t\t? \"wss\"\n\t\t\t\t: \"ws\";\n\t\t\tconst socket = this._webSocketFactory.create(\n\t\t\t\t`${webSocketSchema}://${/:/.test(host) && !/\\[/.test(host) ? `[${host}]` : host}:${port}${path}?${query}&skipWebSocketFrames=false`,\n\t\t\t\tdebugLabel,\n\t\t\t);\n\t\t\tconst errorListener = socket.onError(reject);\n\t\t\tsocket.onOpen(() => {\n\t\t\t\terrorListener.dispose();\n\t\t\t\tresolve(new BrowserSocket(socket, debugLabel));\n\t\t\t});\n\t\t});\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
