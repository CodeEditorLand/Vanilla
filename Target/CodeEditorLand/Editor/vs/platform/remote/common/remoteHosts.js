import{Schemas as i}from"../../../base/common/network.js";function u(t){return t.scheme===i.vscodeRemote?t.authority:void 0}function f(t){if(!t)return;const e=t.indexOf("+");return e<0?t:t.substr(0,e)}function m(t){const{host:e,port:n}=o(t);if(typeof n>"u")throw new Error(`Invalid remote authority: ${t}. It must either be a remote of form <remoteName>+<arg> or a remote host of form <host>:<port>.`);return{host:e,port:n}}function d(t,e){let{host:n,port:r}=o(t);return typeof r>"u"&&(r=e),{host:n,port:r}}function o(t){const e=t.match(/^(\[[0-9a-z:]+\]):(\d+)$/);if(e)return{host:e[1],port:Number.parseInt(e[2],10)};const n=t.match(/^(\[[0-9a-z:]+\])$/);if(n)return{host:n[1],port:void 0};const r=t.match(/(.*):(\d+)$/);return r?{host:r[1],port:Number.parseInt(r[2],10)}:{host:t,port:void 0}}export{u as getRemoteAuthority,f as getRemoteName,d as parseAuthorityWithOptionalPort,m as parseAuthorityWithPort};
