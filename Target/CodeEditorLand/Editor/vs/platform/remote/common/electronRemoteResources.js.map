{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/remote/common/electronRemoteResources.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { UriComponents } from '../../../base/common/uri.js';\nimport { Client, IClientRouter, IConnectionHub } from '../../../base/parts/ipc/common/ipc.js';\n\nexport const NODE_REMOTE_RESOURCE_IPC_METHOD_NAME = 'request';\n\nexport const NODE_REMOTE_RESOURCE_CHANNEL_NAME = 'remoteResourceHandler';\n\nexport type NodeRemoteResourceResponse = { body: /* base64 */ string; mimeType?: string; statusCode: number };\n\nexport class NodeRemoteResourceRouter implements IClientRouter<string> {\n\tasync routeCall(hub: IConnectionHub<string>, command: string, arg?: any): Promise<Client<string>> {\n\t\tif (command !== NODE_REMOTE_RESOURCE_IPC_METHOD_NAME) {\n\t\t\tthrow new Error(`Call not found: ${command}`);\n\t\t}\n\n\t\tconst uri = arg[0] as (UriComponents | undefined);\n\t\tif (uri?.authority) {\n\t\t\tconst connection = hub.connections.find(c => c.ctx === uri.authority);\n\t\t\tif (connection) {\n\t\t\t\treturn connection;\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(`Caller not found`);\n\t}\n\n\trouteEvent(_: IConnectionHub<string>, event: string): Promise<Client<string>> {\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,qBAAqB;AAC9B,SAAS,QAAQ,eAAe,sBAAsB;AAE/C,MAAM,uCAAuC;AAE7C,MAAM,oCAAoC;AAI1C,MAAM,yBAA0D;AAAA,EAdvE,OAcuE;AAAA;AAAA;AAAA,EACtE,MAAM,UAAU,KAA6B,SAAiB,KAAoC;AACjG,QAAI,YAAY,sCAAsC;AACrD,YAAM,IAAI,MAAM,mBAAmB,OAAO,EAAE;AAAA,IAC7C;AAEA,UAAM,MAAM,IAAI,CAAC;AACjB,QAAI,KAAK,WAAW;AACnB,YAAM,aAAa,IAAI,YAAY,KAAK,OAAK,EAAE,QAAQ,IAAI,SAAS;AACpE,UAAI,YAAY;AACf,eAAO;AAAA,MACR;AAAA,IACD;AAEA,UAAM,IAAI,MAAM,kBAAkB;AAAA,EACnC;AAAA,EAEA,WAAW,GAA2B,OAAwC;AAC7E,UAAM,IAAI,MAAM,oBAAoB,KAAK,EAAE;AAAA,EAC5C;AACD;",
  "names": []
}
