{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/remote/common/electronRemoteResources.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { UriComponents } from \"../../../base/common/uri.js\";\nimport type {\n\tClient,\n\tIClientRouter,\n\tIConnectionHub,\n} from \"../../../base/parts/ipc/common/ipc.js\";\n\nexport const NODE_REMOTE_RESOURCE_IPC_METHOD_NAME = \"request\";\n\nexport const NODE_REMOTE_RESOURCE_CHANNEL_NAME = \"remoteResourceHandler\";\n\nexport type NodeRemoteResourceResponse = {\n\tbody: /* base64 */ string;\n\tmimeType?: string;\n\tstatusCode: number;\n};\n\nexport class NodeRemoteResourceRouter implements IClientRouter<string> {\n\tasync routeCall(\n\t\thub: IConnectionHub<string>,\n\t\tcommand: string,\n\t\targ?: any,\n\t): Promise<Client<string>> {\n\t\tif (command !== NODE_REMOTE_RESOURCE_IPC_METHOD_NAME) {\n\t\t\tthrow new Error(`Call not found: ${command}`);\n\t\t}\n\n\t\tconst uri = arg[0] as UriComponents | undefined;\n\t\tif (uri?.authority) {\n\t\t\tconst connection = hub.connections.find(\n\t\t\t\t(c) => c.ctx === uri.authority,\n\t\t\t);\n\t\t\tif (connection) {\n\t\t\t\treturn connection;\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(`Caller not found`);\n\t}\n\n\trouteEvent(\n\t\t_: IConnectionHub<string>,\n\t\tevent: string,\n\t): Promise<Client<string>> {\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n}\n"],
  "mappings": ";;AAYO,MAAM,uCAAuC;AAE7C,MAAM,oCAAoC;AAQ1C,MAAM,yBAA0D;AAAA,EAtBvE,OAsBuE;AAAA;AAAA;AAAA,EACtE,MAAM,UACL,KACA,SACA,KAC0B;AAC1B,QAAI,YAAY,sCAAsC;AACrD,YAAM,IAAI,MAAM,mBAAmB,OAAO,EAAE;AAAA,IAC7C;AAEA,UAAM,MAAM,IAAI,CAAC;AACjB,QAAI,KAAK,WAAW;AACnB,YAAM,aAAa,IAAI,YAAY;AAAA,QAClC,CAAC,MAAM,EAAE,QAAQ,IAAI;AAAA,MACtB;AACA,UAAI,YAAY;AACf,eAAO;AAAA,MACR;AAAA,IACD;AAEA,UAAM,IAAI,MAAM,kBAAkB;AAAA,EACnC;AAAA,EAEA,WACC,GACA,OAC0B;AAC1B,UAAM,IAAI,MAAM,oBAAoB,KAAK,EAAE;AAAA,EAC5C;AACD;",
  "names": []
}
