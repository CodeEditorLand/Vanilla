{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/auxiliaryWindow/electron-main/auxiliaryWindowsMainService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tBrowserWindow,\n\ttype BrowserWindowConstructorOptions,\n\ttype HandlerDetails,\n\ttype WebContents,\n\tapp,\n} from \"electron\";\nimport { Emitter, Event } from \"../../../base/common/event.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttoDisposable,\n} from \"../../../base/common/lifecycle.js\";\nimport { FileAccess } from \"../../../base/common/network.js\";\nimport { validatedIpcMain } from \"../../../base/parts/ipc/electron-main/ipcMain.js\";\nimport { IInstantiationService } from \"../../instantiation/common/instantiation.js\";\nimport { ILogService } from \"../../log/common/log.js\";\nimport {\n\ttype IWindowState,\n\tWindowMode,\n\tdefaultAuxWindowState,\n} from \"../../window/electron-main/window.js\";\nimport {\n\ttype IDefaultBrowserWindowOptionsOverrides,\n\tWindowStateValidator,\n\tdefaultBrowserWindowOptions,\n\tgetLastFocused,\n} from \"../../windows/electron-main/windows.js\";\nimport { AuxiliaryWindow, type IAuxiliaryWindow } from \"./auxiliaryWindow.js\";\nimport type { IAuxiliaryWindowsMainService } from \"./auxiliaryWindows.js\";\n\nexport class AuxiliaryWindowsMainService\n\textends Disposable\n\timplements IAuxiliaryWindowsMainService\n{\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidMaximizeWindow = this._register(\n\t\tnew Emitter<IAuxiliaryWindow>(),\n\t);\n\treadonly onDidMaximizeWindow = this._onDidMaximizeWindow.event;\n\n\tprivate readonly _onDidUnmaximizeWindow = this._register(\n\t\tnew Emitter<IAuxiliaryWindow>(),\n\t);\n\treadonly onDidUnmaximizeWindow = this._onDidUnmaximizeWindow.event;\n\n\tprivate readonly _onDidChangeFullScreen = this._register(\n\t\tnew Emitter<{ window: IAuxiliaryWindow; fullscreen: boolean }>(),\n\t);\n\treadonly onDidChangeFullScreen = this._onDidChangeFullScreen.event;\n\n\tprivate readonly _onDidTriggerSystemContextMenu = this._register(\n\t\tnew Emitter<{ window: IAuxiliaryWindow; x: number; y: number }>(),\n\t);\n\treadonly onDidTriggerSystemContextMenu =\n\t\tthis._onDidTriggerSystemContextMenu.event;\n\n\tprivate readonly windows = new Map<\n\t\tnumber /* webContents ID */,\n\t\tAuxiliaryWindow\n\t>();\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\t// We have to ensure that an auxiliary window gets to know its\n\t\t// containing `BrowserWindow` so that it can apply listeners to it\n\t\t// Unfortunately we cannot rely on static `BrowserWindow` methods\n\t\t// because we might call the methods too early before the window\n\t\t// is created.\n\n\t\tapp.on(\"browser-window-created\", (_event, browserWindow) => {\n\t\t\t// This is an auxiliary window, try to claim it\n\t\t\tconst auxiliaryWindow = this.getWindowByWebContents(\n\t\t\t\tbrowserWindow.webContents,\n\t\t\t);\n\t\t\tif (auxiliaryWindow) {\n\t\t\t\tthis.logService.trace(\n\t\t\t\t\t'[aux window] app.on(\"browser-window-created\"): Trying to claim auxiliary window',\n\t\t\t\t);\n\n\t\t\t\tauxiliaryWindow.tryClaimWindow();\n\t\t\t}\n\n\t\t\t// This is a main window, listen to child windows getting created to claim it\n\t\t\telse {\n\t\t\t\tconst disposables = new DisposableStore();\n\t\t\t\tdisposables.add(\n\t\t\t\t\tEvent.fromNodeEventEmitter(\n\t\t\t\t\t\tbrowserWindow.webContents,\n\t\t\t\t\t\t\"did-create-window\",\n\t\t\t\t\t\t(browserWindow, details) => ({\n\t\t\t\t\t\t\tbrowserWindow,\n\t\t\t\t\t\t\tdetails,\n\t\t\t\t\t\t}),\n\t\t\t\t\t)(({ browserWindow, details }) => {\n\t\t\t\t\t\tconst auxiliaryWindow = this.getWindowByWebContents(\n\t\t\t\t\t\t\tbrowserWindow.webContents,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (auxiliaryWindow) {\n\t\t\t\t\t\t\tthis.logService.trace(\n\t\t\t\t\t\t\t\t'[aux window] window.on(\"did-create-window\"): Trying to claim auxiliary window',\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tauxiliaryWindow.tryClaimWindow(details.options);\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t\tdisposables.add(\n\t\t\t\t\tEvent.fromNodeEventEmitter(\n\t\t\t\t\t\tbrowserWindow,\n\t\t\t\t\t\t\"closed\",\n\t\t\t\t\t)(() => disposables.dispose()),\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t\tvalidatedIpcMain.handle(\n\t\t\t\"vscode:registerAuxiliaryWindow\",\n\t\t\tasync (event, mainWindowId: number) => {\n\t\t\t\tconst auxiliaryWindow = this.getWindowByWebContents(\n\t\t\t\t\tevent.sender,\n\t\t\t\t);\n\t\t\t\tif (auxiliaryWindow) {\n\t\t\t\t\tthis.logService.trace(\n\t\t\t\t\t\t\"[aux window] vscode:registerAuxiliaryWindow: Registering auxiliary window to main window\",\n\t\t\t\t\t);\n\n\t\t\t\t\tauxiliaryWindow.parentId = mainWindowId;\n\t\t\t\t}\n\n\t\t\t\treturn event.sender.id;\n\t\t\t},\n\t\t);\n\t}\n\n\tcreateWindow(details: HandlerDetails): BrowserWindowConstructorOptions {\n\t\tconst { state, overrides } =\n\t\t\tthis.computeWindowStateAndOverrides(details);\n\t\treturn this.instantiationService.invokeFunction(\n\t\t\tdefaultBrowserWindowOptions,\n\t\t\tstate,\n\t\t\toverrides,\n\t\t\t{\n\t\t\t\tpreload: FileAccess.asFileUri(\n\t\t\t\t\t\"vs/base/parts/sandbox/electron-sandbox/preload-aux.js\",\n\t\t\t\t).fsPath,\n\t\t\t},\n\t\t);\n\t}\n\n\tprivate computeWindowStateAndOverrides(details: HandlerDetails): {\n\t\treadonly state: IWindowState;\n\t\treadonly overrides: IDefaultBrowserWindowOptionsOverrides;\n\t} {\n\t\tconst windowState: IWindowState = {};\n\t\tconst overrides: IDefaultBrowserWindowOptionsOverrides = {};\n\n\t\tconst features = details.features.split(\",\"); // for example: popup=yes,left=270,top=14.5,width=800,height=600\n\t\tfor (const feature of features) {\n\t\t\tconst [key, value] = feature.split(\"=\");\n\t\t\tswitch (key) {\n\t\t\t\tcase \"width\":\n\t\t\t\t\twindowState.width = Number.parseInt(value, 10);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"height\":\n\t\t\t\t\twindowState.height = Number.parseInt(value, 10);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"left\":\n\t\t\t\t\twindowState.x = Number.parseInt(value, 10);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"top\":\n\t\t\t\t\twindowState.y = Number.parseInt(value, 10);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"window-maximized\":\n\t\t\t\t\twindowState.mode = WindowMode.Maximized;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"window-fullscreen\":\n\t\t\t\t\twindowState.mode = WindowMode.Fullscreen;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"window-disable-fullscreen\":\n\t\t\t\t\toverrides.disableFullscreen = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"window-native-titlebar\":\n\t\t\t\t\toverrides.forceNativeTitlebar = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tconst state =\n\t\t\tWindowStateValidator.validateWindowState(\n\t\t\t\tthis.logService,\n\t\t\t\twindowState,\n\t\t\t) ?? defaultAuxWindowState();\n\n\t\tthis.logService.trace(\"[aux window] using window state\", state);\n\n\t\treturn { state, overrides };\n\t}\n\n\tregisterWindow(webContents: WebContents): void {\n\t\tconst disposables = new DisposableStore();\n\n\t\tconst auxiliaryWindow = this.instantiationService.createInstance(\n\t\t\tAuxiliaryWindow,\n\t\t\twebContents,\n\t\t);\n\n\t\tthis.windows.set(auxiliaryWindow.id, auxiliaryWindow);\n\t\tdisposables.add(\n\t\t\ttoDisposable(() => this.windows.delete(auxiliaryWindow.id)),\n\t\t);\n\n\t\tdisposables.add(\n\t\t\tauxiliaryWindow.onDidMaximize(() =>\n\t\t\t\tthis._onDidMaximizeWindow.fire(auxiliaryWindow),\n\t\t\t),\n\t\t);\n\t\tdisposables.add(\n\t\t\tauxiliaryWindow.onDidUnmaximize(() =>\n\t\t\t\tthis._onDidUnmaximizeWindow.fire(auxiliaryWindow),\n\t\t\t),\n\t\t);\n\t\tdisposables.add(\n\t\t\tauxiliaryWindow.onDidEnterFullScreen(() =>\n\t\t\t\tthis._onDidChangeFullScreen.fire({\n\t\t\t\t\twindow: auxiliaryWindow,\n\t\t\t\t\tfullscreen: true,\n\t\t\t\t}),\n\t\t\t),\n\t\t);\n\t\tdisposables.add(\n\t\t\tauxiliaryWindow.onDidLeaveFullScreen(() =>\n\t\t\t\tthis._onDidChangeFullScreen.fire({\n\t\t\t\t\twindow: auxiliaryWindow,\n\t\t\t\t\tfullscreen: false,\n\t\t\t\t}),\n\t\t\t),\n\t\t);\n\t\tdisposables.add(\n\t\t\tauxiliaryWindow.onDidTriggerSystemContextMenu(({ x, y }) =>\n\t\t\t\tthis._onDidTriggerSystemContextMenu.fire({\n\t\t\t\t\twindow: auxiliaryWindow,\n\t\t\t\t\tx,\n\t\t\t\t\ty,\n\t\t\t\t}),\n\t\t\t),\n\t\t);\n\n\t\tEvent.once(auxiliaryWindow.onDidClose)(() => disposables.dispose());\n\t}\n\n\tgetWindowByWebContents(\n\t\twebContents: WebContents,\n\t): AuxiliaryWindow | undefined {\n\t\tconst window = this.windows.get(webContents.id);\n\n\t\treturn window?.matches(webContents) ? window : undefined;\n\t}\n\n\tgetFocusedWindow(): IAuxiliaryWindow | undefined {\n\t\tconst window = BrowserWindow.getFocusedWindow();\n\t\tif (window) {\n\t\t\treturn this.getWindowByWebContents(window.webContents);\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tgetLastActiveWindow(): IAuxiliaryWindow | undefined {\n\t\treturn getLastFocused(Array.from(this.windows.values()));\n\t}\n\n\tgetWindows(): readonly IAuxiliaryWindow[] {\n\t\treturn Array.from(this.windows.values());\n\t}\n}\n"],
  "mappings": "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",
  "names": ["browserWindow", "auxiliaryWindow"]
}
