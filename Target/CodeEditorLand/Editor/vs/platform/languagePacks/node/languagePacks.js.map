{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/languagePacks/node/languagePacks.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createHash } from \"crypto\";\nimport * as fs from \"fs\";\nimport { equals } from \"../../../base/common/arrays.js\";\nimport { Queue } from \"../../../base/common/async.js\";\nimport { Disposable } from \"../../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../../base/common/network.js\";\nimport { join } from \"../../../base/common/path.js\";\nimport { URI } from \"../../../base/common/uri.js\";\nimport { Promises } from \"../../../base/node/pfs.js\";\nimport { INativeEnvironmentService } from \"../../environment/common/environment.js\";\nimport {\n\tIExtensionGalleryService,\n\ttype IExtensionIdentifier,\n\tIExtensionManagementService,\n\ttype ILocalExtension,\n} from \"../../extensionManagement/common/extensionManagement.js\";\nimport { areSameExtensions } from \"../../extensionManagement/common/extensionManagementUtil.js\";\nimport type { ILocalizationContribution } from \"../../extensions/common/extensions.js\";\nimport { ILogService } from \"../../log/common/log.js\";\nimport {\n\ttype ILanguagePackItem,\n\tLanguagePackBaseService,\n} from \"../common/languagePacks.js\";\n\ninterface ILanguagePack {\n\thash: string;\n\tlabel: string | undefined;\n\textensions: {\n\t\textensionIdentifier: IExtensionIdentifier;\n\t\tversion: string;\n\t}[];\n\ttranslations: { [id: string]: string };\n}\n\nexport class NativeLanguagePackService extends LanguagePackBaseService {\n\tprivate readonly cache: LanguagePacksCache;\n\n\tconstructor(\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@IExtensionGalleryService extensionGalleryService: IExtensionGalleryService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper(extensionGalleryService);\n\t\tthis.cache = this._register(new LanguagePacksCache(environmentService, logService));\n\t\tthis.extensionManagementService.registerParticipant({\n\t\t\tpostInstall: async (extension: ILocalExtension): Promise<void> => {\n\t\t\t\treturn this.postInstallExtension(extension);\n\t\t\t},\n\t\t\tpostUninstall: async (extension: ILocalExtension): Promise<void> => {\n\t\t\t\treturn this.postUninstallExtension(extension);\n\t\t\t}\n\t\t});\n\t}\n\n\tasync getBuiltInExtensionTranslationsUri(\n\t\tid: string,\n\t\tlanguage: string,\n\t): Promise<URI | undefined> {\n\t\tconst packs = await this.cache.getLanguagePacks();\n\t\tconst pack = packs[language];\n\t\tif (!pack) {\n\t\t\tthis.logService.warn(`No language pack found for ${language}`);\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst translation = pack.translations[id];\n\t\treturn translation ? URI.file(translation) : undefined;\n\t}\n\n\tasync getInstalledLanguages(): Promise<Array<ILanguagePackItem>> {\n\t\tconst languagePacks = await this.cache.getLanguagePacks();\n\t\tconst languages: ILanguagePackItem[] = Object.keys(languagePacks).map(\n\t\t\t(locale) => {\n\t\t\t\tconst languagePack = languagePacks[locale];\n\t\t\t\tconst baseQuickPick = this.createQuickPickItem(\n\t\t\t\t\tlocale,\n\t\t\t\t\tlanguagePack.label,\n\t\t\t\t);\n\t\t\t\treturn {\n\t\t\t\t\t...baseQuickPick,\n\t\t\t\t\textensionId:\n\t\t\t\t\t\tlanguagePack.extensions[0].extensionIdentifier.id,\n\t\t\t\t};\n\t\t\t},\n\t\t);\n\t\tlanguages.push(this.createQuickPickItem(\"en\", \"English\"));\n\t\tlanguages.sort((a, b) => a.label.localeCompare(b.label));\n\t\treturn languages;\n\t}\n\n\tprivate async postInstallExtension(\n\t\textension: ILocalExtension,\n\t): Promise<void> {\n\t\tif (\n\t\t\textension &&\n\t\t\textension.manifest &&\n\t\t\textension.manifest.contributes &&\n\t\t\textension.manifest.contributes.localizations &&\n\t\t\textension.manifest.contributes.localizations.length\n\t\t) {\n\t\t\tthis.logService.info(\n\t\t\t\t\"Adding language packs from the extension\",\n\t\t\t\textension.identifier.id,\n\t\t\t);\n\t\t\tawait this.update();\n\t\t}\n\t}\n\n\tprivate async postUninstallExtension(\n\t\textension: ILocalExtension,\n\t): Promise<void> {\n\t\tconst languagePacks = await this.cache.getLanguagePacks();\n\t\tif (\n\t\t\tObject.keys(languagePacks).some(\n\t\t\t\t(language) =>\n\t\t\t\t\tlanguagePacks[language] &&\n\t\t\t\t\tlanguagePacks[language].extensions.some((e) =>\n\t\t\t\t\t\tareSameExtensions(\n\t\t\t\t\t\t\te.extensionIdentifier,\n\t\t\t\t\t\t\textension.identifier,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t)\n\t\t) {\n\t\t\tthis.logService.info(\n\t\t\t\t\"Removing language packs from the extension\",\n\t\t\t\textension.identifier.id,\n\t\t\t);\n\t\t\tawait this.update();\n\t\t}\n\t}\n\n\tasync update(): Promise<boolean> {\n\t\tconst [current, installed] = await Promise.all([\n\t\t\tthis.cache.getLanguagePacks(),\n\t\t\tthis.extensionManagementService.getInstalled(),\n\t\t]);\n\t\tconst updated = await this.cache.update(installed);\n\t\treturn !equals(Object.keys(current), Object.keys(updated));\n\t}\n}\n\nclass LanguagePacksCache extends Disposable {\n\tprivate languagePacks: { [language: string]: ILanguagePack } = {};\n\tprivate languagePacksFilePath: string;\n\tprivate languagePacksFileLimiter: Queue<any>;\n\tprivate initializedCache: boolean | undefined;\n\n\tconstructor(\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.languagePacksFilePath = join(environmentService.userDataPath, 'languagepacks.json');\n\t\tthis.languagePacksFileLimiter = new Queue();\n\t}\n\n\tgetLanguagePacks(): Promise<{ [language: string]: ILanguagePack }> {\n\t\t// if queue is not empty, fetch from disk\n\t\tif (this.languagePacksFileLimiter.size || !this.initializedCache) {\n\t\t\treturn this.withLanguagePacks().then(() => this.languagePacks);\n\t\t}\n\t\treturn Promise.resolve(this.languagePacks);\n\t}\n\n\tupdate(\n\t\textensions: ILocalExtension[],\n\t): Promise<{ [language: string]: ILanguagePack }> {\n\t\treturn this.withLanguagePacks((languagePacks) => {\n\t\t\tObject.keys(languagePacks).forEach(\n\t\t\t\t(language) => delete languagePacks[language],\n\t\t\t);\n\t\t\tthis.createLanguagePacksFromExtensions(\n\t\t\t\tlanguagePacks,\n\t\t\t\t...extensions,\n\t\t\t);\n\t\t}).then(() => this.languagePacks);\n\t}\n\n\tprivate createLanguagePacksFromExtensions(\n\t\tlanguagePacks: { [language: string]: ILanguagePack },\n\t\t...extensions: ILocalExtension[]\n\t): void {\n\t\tfor (const extension of extensions) {\n\t\t\tif (\n\t\t\t\textension &&\n\t\t\t\textension.manifest &&\n\t\t\t\textension.manifest.contributes &&\n\t\t\t\textension.manifest.contributes.localizations &&\n\t\t\t\textension.manifest.contributes.localizations.length\n\t\t\t) {\n\t\t\t\tthis.createLanguagePacksFromExtension(languagePacks, extension);\n\t\t\t}\n\t\t}\n\t\tObject.keys(languagePacks).forEach((languageId) =>\n\t\t\tthis.updateHash(languagePacks[languageId]),\n\t\t);\n\t}\n\n\tprivate createLanguagePacksFromExtension(\n\t\tlanguagePacks: { [language: string]: ILanguagePack },\n\t\textension: ILocalExtension,\n\t): void {\n\t\tconst extensionIdentifier = extension.identifier;\n\t\tconst localizations =\n\t\t\textension.manifest.contributes &&\n\t\t\textension.manifest.contributes.localizations\n\t\t\t\t? extension.manifest.contributes.localizations\n\t\t\t\t: [];\n\t\tfor (const localizationContribution of localizations) {\n\t\t\tif (\n\t\t\t\textension.location.scheme === Schemas.file &&\n\t\t\t\tisValidLocalization(localizationContribution)\n\t\t\t) {\n\t\t\t\tlet languagePack =\n\t\t\t\t\tlanguagePacks[localizationContribution.languageId];\n\t\t\t\tif (!languagePack) {\n\t\t\t\t\tlanguagePack = {\n\t\t\t\t\t\thash: \"\",\n\t\t\t\t\t\textensions: [],\n\t\t\t\t\t\ttranslations: {},\n\t\t\t\t\t\tlabel:\n\t\t\t\t\t\t\tlocalizationContribution.localizedLanguageName ??\n\t\t\t\t\t\t\tlocalizationContribution.languageName,\n\t\t\t\t\t};\n\t\t\t\t\tlanguagePacks[localizationContribution.languageId] =\n\t\t\t\t\t\tlanguagePack;\n\t\t\t\t}\n\t\t\t\tconst extensionInLanguagePack = languagePack.extensions.filter(\n\t\t\t\t\t(e) =>\n\t\t\t\t\t\tareSameExtensions(\n\t\t\t\t\t\t\te.extensionIdentifier,\n\t\t\t\t\t\t\textensionIdentifier,\n\t\t\t\t\t\t),\n\t\t\t\t)[0];\n\t\t\t\tif (extensionInLanguagePack) {\n\t\t\t\t\textensionInLanguagePack.version =\n\t\t\t\t\t\textension.manifest.version;\n\t\t\t\t} else {\n\t\t\t\t\tlanguagePack.extensions.push({\n\t\t\t\t\t\textensionIdentifier,\n\t\t\t\t\t\tversion: extension.manifest.version,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tfor (const translation of localizationContribution.translations) {\n\t\t\t\t\tlanguagePack.translations[translation.id] = join(\n\t\t\t\t\t\textension.location.fsPath,\n\t\t\t\t\t\ttranslation.path,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateHash(languagePack: ILanguagePack): void {\n\t\tif (languagePack) {\n\t\t\tconst md5 = createHash(\"md5\"); // CodeQL [SM04514] Used to create an hash for language pack extension version, which is not a security issue\n\t\t\tfor (const extension of languagePack.extensions) {\n\t\t\t\tmd5.update(\n\t\t\t\t\textension.extensionIdentifier.uuid ||\n\t\t\t\t\t\textension.extensionIdentifier.id,\n\t\t\t\t).update(extension.version); // CodeQL [SM01510] The extension UUID is not sensitive info and is not manually created by a user\n\t\t\t}\n\t\t\tlanguagePack.hash = md5.digest(\"hex\");\n\t\t}\n\t}\n\n\tprivate withLanguagePacks<T>(\n\t\tfn: (languagePacks: {\n\t\t\t[language: string]: ILanguagePack;\n\t\t}) => T | null = () => null,\n\t): Promise<T> {\n\t\treturn this.languagePacksFileLimiter.queue(() => {\n\t\t\tlet result: T | null = null;\n\t\t\treturn fs.promises\n\t\t\t\t.readFile(this.languagePacksFilePath, \"utf8\")\n\t\t\t\t.then(undefined, (err) =>\n\t\t\t\t\terr.code === \"ENOENT\"\n\t\t\t\t\t\t? Promise.resolve(\"{}\")\n\t\t\t\t\t\t: Promise.reject(err),\n\t\t\t\t)\n\t\t\t\t.then<{ [language: string]: ILanguagePack }>((raw) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn JSON.parse(raw);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn {};\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.then((languagePacks) => {\n\t\t\t\t\tresult = fn(languagePacks);\n\t\t\t\t\treturn languagePacks;\n\t\t\t\t})\n\t\t\t\t.then((languagePacks) => {\n\t\t\t\t\tfor (const language of Object.keys(languagePacks)) {\n\t\t\t\t\t\tif (!languagePacks[language]) {\n\t\t\t\t\t\t\tdelete languagePacks[language];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.languagePacks = languagePacks;\n\t\t\t\t\tthis.initializedCache = true;\n\t\t\t\t\tconst raw = JSON.stringify(this.languagePacks);\n\t\t\t\t\tthis.logService.debug(\"Writing language packs\", raw);\n\t\t\t\t\treturn Promises.writeFile(this.languagePacksFilePath, raw);\n\t\t\t\t})\n\t\t\t\t.then(\n\t\t\t\t\t() => result,\n\t\t\t\t\t(error) => this.logService.error(error),\n\t\t\t\t);\n\t\t});\n\t}\n}\n\nfunction isValidLocalization(localization: ILocalizationContribution): boolean {\n\tif (typeof localization.languageId !== \"string\") {\n\t\treturn false;\n\t}\n\tif (\n\t\t!Array.isArray(localization.translations) ||\n\t\tlocalization.translations.length === 0\n\t) {\n\t\treturn false;\n\t}\n\tfor (const translation of localization.translations) {\n\t\tif (typeof translation.id !== \"string\") {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof translation.path !== \"string\") {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (\n\t\tlocalization.languageName &&\n\t\ttypeof localization.languageName !== \"string\"\n\t) {\n\t\treturn false;\n\t}\n\tif (\n\t\tlocalization.localizedLanguageName &&\n\t\ttypeof localization.localizedLanguageName !== \"string\"\n\t) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n"],
  "mappings": "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",
  "names": []
}
