var m=Object.defineProperty;var I=Object.getOwnPropertyDescriptor;var g=(s,r,t,n)=>{for(var a=n>1?void 0:n?I(r,t):r,i=s.length-1,e;i>=0;i--)(e=s[i])&&(a=(n?e(r,t,a):e(a))||a);return n&&a&&m(r,t,a),a},u=(s,r)=>(t,n)=>r(t,n,s);import{CancellationTokenSource as d}from"../../../base/common/cancellation.js";import{Disposable as p}from"../../../base/common/lifecycle.js";import{language as k}from"../../../base/common/platform.js";import{localize as f}from"../../../nls.js";import{IExtensionGalleryService as y}from"../../extensionManagement/common/extensionManagement.js";import{createDecorator as x}from"../../instantiation/common/instantiation.js";function P(s){return s.tags.find(r=>r.startsWith("lp-"))?.split("lp-")[1]}const C=x("languagePackService");let l=class extends p{constructor(t){super();this.extensionGalleryService=t}async getAvailableLanguages(){const t=new d;setTimeout(()=>t.cancel(),1e3);let n;try{n=await this.extensionGalleryService.query({text:'category:"language packs"',pageSize:20},t.token)}catch{return[]}const i=n.firstPage.filter(e=>e.properties.localizedLanguages?.length&&e.tags.some(o=>o.startsWith("lp-"))).map(e=>{const o=e.properties.localizedLanguages?.[0],c=P(e);return{...this.createQuickPickItem(c,o,e),extensionId:e.identifier.id,galleryExtension:e}});return i.push(this.createQuickPickItem("en","English")),i}createQuickPickItem(t,n,a){const i=n??t;let e;if(i!==t&&(e=`(${t})`),t.toLowerCase()===k.toLowerCase()&&(e??="",e+=f("currentDisplayLanguage"," (Current)")),a?.installCount){e??="";const o=a.installCount;let c;o>1e6?c=`${Math.floor(o/1e5)/10}M`:o>1e3?c=`${Math.floor(o/1e3)}K`:c=String(o),e+=` $(cloud-download) ${c}`}return{id:t,label:i,description:e}}};l=g([u(0,y)],l);export{C as ILanguagePackService,l as LanguagePackBaseService,P as getLocale};
