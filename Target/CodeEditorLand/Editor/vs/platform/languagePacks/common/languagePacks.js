var m=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var g=(o,r,t,n)=>{for(var a=n>1?void 0:n?d(r,t):r,i=o.length-1,e;i>=0;i--)(e=o[i])&&(a=(n?e(r,t,a):e(a))||a);return n&&a&&m(r,t,a),a},u=(o,r)=>(t,n)=>r(t,n,o);import{CancellationTokenSource as I}from"../../../base/common/cancellation.js";import{Disposable as k}from"../../../base/common/lifecycle.js";import{language as p}from"../../../base/common/platform.js";import{localize as f}from"../../../nls.js";import{IExtensionGalleryService as x}from"../../extensionManagement/common/extensionManagement.js";import{createDecorator as P}from"../../instantiation/common/instantiation.js";function y(o){return o.tags.find(r=>r.startsWith("lp-"))?.split("lp-")[1]}const z=P("languagePackService");let c=class extends k{constructor(t){super();this.extensionGalleryService=t}async getAvailableLanguages(){const t=new I;setTimeout(()=>t.cancel(),1e3);let n;try{n=await this.extensionGalleryService.query({text:'category:"language packs"',pageSize:20},t.token)}catch{return[]}const i=n.firstPage.filter(e=>e.properties.localizedLanguages?.length&&e.tags.some(s=>s.startsWith("lp-"))).map(e=>{const s=e.properties.localizedLanguages?.[0],l=y(e);return{...this.createQuickPickItem(l,s,e),extensionId:e.identifier.id,galleryExtension:e}});return i.push(this.createQuickPickItem("en","English")),i}createQuickPickItem(t,n,a){const i=n??t;let e;if(i!==t&&(e=`(${t})`),t.toLowerCase()===p.toLowerCase()&&(e??="",e+=f("currentDisplayLanguage"," (Current)")),a?.installCount){e??="";const s=a.installCount;let l;s>1e6?l=`${Math.floor(s/1e5)/10}M`:s>1e3?l=`${Math.floor(s/1e3)}K`:l=String(s),e+=` $(cloud-download) ${l}`}return{id:t,label:i,description:e}}};c=g([u(0,x)],c);export{z as ILanguagePackService,c as LanguagePackBaseService,y as getLocale};
