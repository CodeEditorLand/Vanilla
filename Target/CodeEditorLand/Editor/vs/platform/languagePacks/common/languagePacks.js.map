{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/languagePacks/common/languagePacks.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationTokenSource } from \"../../../base/common/cancellation.js\";\nimport { Disposable } from \"../../../base/common/lifecycle.js\";\nimport { language } from \"../../../base/common/platform.js\";\nimport type { URI } from \"../../../base/common/uri.js\";\nimport { localize } from \"../../../nls.js\";\nimport {\n\tIExtensionGalleryService,\n\ttype IGalleryExtension,\n} from \"../../extensionManagement/common/extensionManagement.js\";\nimport { createDecorator } from \"../../instantiation/common/instantiation.js\";\nimport type { IQuickPickItem } from \"../../quickinput/common/quickInput.js\";\n\nexport function getLocale(extension: IGalleryExtension): string | undefined {\n\treturn extension.tags.find((t) => t.startsWith(\"lp-\"))?.split(\"lp-\")[1];\n}\n\nexport const ILanguagePackService = createDecorator<ILanguagePackService>(\n\t\"languagePackService\",\n);\n\nexport interface ILanguagePackItem extends IQuickPickItem {\n\treadonly extensionId?: string;\n\treadonly galleryExtension?: IGalleryExtension;\n}\n\nexport interface ILanguagePackService {\n\treadonly _serviceBrand: undefined;\n\tgetAvailableLanguages(): Promise<Array<ILanguagePackItem>>;\n\tgetInstalledLanguages(): Promise<Array<ILanguagePackItem>>;\n\tgetBuiltInExtensionTranslationsUri(\n\t\tid: string,\n\t\tlanguage: string,\n\t): Promise<URI | undefined>;\n}\n\nexport abstract class LanguagePackBaseService\n\textends Disposable\n\timplements ILanguagePackService\n{\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IExtensionGalleryService\n\t\tprotected readonly extensionGalleryService: IExtensionGalleryService,\n\t) {\n\t\tsuper();\n\t}\n\n\tabstract getBuiltInExtensionTranslationsUri(\n\t\tid: string,\n\t\tlanguage: string,\n\t): Promise<URI | undefined>;\n\n\tabstract getInstalledLanguages(): Promise<Array<ILanguagePackItem>>;\n\n\tasync getAvailableLanguages(): Promise<ILanguagePackItem[]> {\n\t\tconst timeout = new CancellationTokenSource();\n\t\tsetTimeout(() => timeout.cancel(), 1000);\n\n\t\tlet result;\n\t\ttry {\n\t\t\tresult = await this.extensionGalleryService.query(\n\t\t\t\t{\n\t\t\t\t\ttext: 'category:\"language packs\"',\n\t\t\t\t\tpageSize: 20,\n\t\t\t\t},\n\t\t\t\ttimeout.token,\n\t\t\t);\n\t\t} catch (_) {\n\t\t\t// This method is best effort. So, we ignore any errors.\n\t\t\treturn [];\n\t\t}\n\n\t\tconst languagePackExtensions = result.firstPage.filter(\n\t\t\t(e) =>\n\t\t\t\te.properties.localizedLanguages?.length &&\n\t\t\t\te.tags.some((t) => t.startsWith(\"lp-\")),\n\t\t);\n\t\tconst allFromMarketplace: ILanguagePackItem[] =\n\t\t\tlanguagePackExtensions.map((lp) => {\n\t\t\t\tconst languageName = lp.properties.localizedLanguages?.[0];\n\t\t\t\tconst locale = getLocale(lp)!;\n\t\t\t\tconst baseQuickPick = this.createQuickPickItem(\n\t\t\t\t\tlocale,\n\t\t\t\t\tlanguageName,\n\t\t\t\t\tlp,\n\t\t\t\t);\n\t\t\t\treturn {\n\t\t\t\t\t...baseQuickPick,\n\t\t\t\t\textensionId: lp.identifier.id,\n\t\t\t\t\tgalleryExtension: lp,\n\t\t\t\t};\n\t\t\t});\n\n\t\tallFromMarketplace.push(this.createQuickPickItem(\"en\", \"English\"));\n\n\t\treturn allFromMarketplace;\n\t}\n\n\tprotected createQuickPickItem(\n\t\tlocale: string,\n\t\tlanguageName?: string,\n\t\tlanguagePack?: IGalleryExtension,\n\t): IQuickPickItem {\n\t\tconst label = languageName ?? locale;\n\t\tlet description: string | undefined;\n\t\tif (label !== locale) {\n\t\t\tdescription = `(${locale})`;\n\t\t}\n\n\t\tif (locale.toLowerCase() === language.toLowerCase()) {\n\t\t\tdescription ??= \"\";\n\t\t\tdescription += localize(\"currentDisplayLanguage\", \" (Current)\");\n\t\t}\n\n\t\tif (languagePack?.installCount) {\n\t\t\tdescription ??= \"\";\n\n\t\t\tconst count = languagePack.installCount;\n\t\t\tlet countLabel: string;\n\t\t\tif (count > 1000000) {\n\t\t\t\tcountLabel = `${Math.floor(count / 100000) / 10}M`;\n\t\t\t} else if (count > 1000) {\n\t\t\t\tcountLabel = `${Math.floor(count / 1000)}K`;\n\t\t\t} else {\n\t\t\t\tcountLabel = String(count);\n\t\t\t}\n\t\t\tdescription += ` $(cloud-download) ${countLabel}`;\n\t\t}\n\n\t\treturn {\n\t\t\tid: locale,\n\t\t\tlabel,\n\t\t\tdescription,\n\t\t};\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,+BAA+B;AACxC,SAAS,kBAAkB;AAC3B,SAAS,gBAAgB;AAEzB,SAAS,gBAAgB;AACzB;AAAA,EACC;AAAA,OAEM;AACP,SAAS,uBAAuB;AAGzB,SAAS,UAAU,WAAkD;AAC3E,SAAO,UAAU,KAAK,KAAK,CAAC,MAAM,EAAE,WAAW,KAAK,CAAC,GAAG,MAAM,KAAK,EAAE,CAAC;AACvE;AAFgB;AAIT,MAAM,uBAAuB;AAAA,EACnC;AACD;AAiBO,IAAe,0BAAf,cACE,WAET;AAAA,EAGC,YAEoB,yBAClB;AACD,UAAM;AAFa;AAAA,EAGpB;AAAA,EAnDD,OA2CA;AAAA;AAAA;AAAA,EAiBC,MAAM,wBAAsD;AAC3D,UAAM,UAAU,IAAI,wBAAwB;AAC5C,eAAW,MAAM,QAAQ,OAAO,GAAG,GAAI;AAEvC,QAAI;AACJ,QAAI;AACH,eAAS,MAAM,KAAK,wBAAwB;AAAA,QAC3C;AAAA,UACC,MAAM;AAAA,UACN,UAAU;AAAA,QACX;AAAA,QACA,QAAQ;AAAA,MACT;AAAA,IACD,SAAS,GAAG;AAEX,aAAO,CAAC;AAAA,IACT;AAEA,UAAM,yBAAyB,OAAO,UAAU;AAAA,MAC/C,CAAC,MACA,EAAE,WAAW,oBAAoB,UACjC,EAAE,KAAK,KAAK,CAAC,MAAM,EAAE,WAAW,KAAK,CAAC;AAAA,IACxC;AACA,UAAM,qBACL,uBAAuB,IAAI,CAAC,OAAO;AAClC,YAAM,eAAe,GAAG,WAAW,qBAAqB,CAAC;AACzD,YAAM,SAAS,UAAU,EAAE;AAC3B,YAAM,gBAAgB,KAAK;AAAA,QAC1B;AAAA,QACA;AAAA,QACA;AAAA,MACD;AACA,aAAO;AAAA,QACN,GAAG;AAAA,QACH,aAAa,GAAG,WAAW;AAAA,QAC3B,kBAAkB;AAAA,MACnB;AAAA,IACD,CAAC;AAEF,uBAAmB,KAAK,KAAK,oBAAoB,MAAM,SAAS,CAAC;AAEjE,WAAO;AAAA,EACR;AAAA,EAEU,oBACT,QACA,cACA,cACiB;AACjB,UAAM,QAAQ,gBAAgB;AAC9B,QAAI;AACJ,QAAI,UAAU,QAAQ;AACrB,oBAAc,IAAI,MAAM;AAAA,IACzB;AAEA,QAAI,OAAO,YAAY,MAAM,SAAS,YAAY,GAAG;AACpD,sBAAgB;AAChB,qBAAe,SAAS,0BAA0B,YAAY;AAAA,IAC/D;AAEA,QAAI,cAAc,cAAc;AAC/B,sBAAgB;AAEhB,YAAM,QAAQ,aAAa;AAC3B,UAAI;AACJ,UAAI,QAAQ,KAAS;AACpB,qBAAa,GAAG,KAAK,MAAM,QAAQ,GAAM,IAAI,EAAE;AAAA,MAChD,WAAW,QAAQ,KAAM;AACxB,qBAAa,GAAG,KAAK,MAAM,QAAQ,GAAI,CAAC;AAAA,MACzC,OAAO;AACN,qBAAa,OAAO,KAAK;AAAA,MAC1B;AACA,qBAAe,sBAAsB,UAAU;AAAA,IAChD;AAEA,WAAO;AAAA,MACN,IAAI;AAAA,MACJ;AAAA,MACA;AAAA,IACD;AAAA,EACD;AACD;AArGsB,0BAAf;AAAA,EAOJ;AAAA,GAPmB;",
  "names": []
}
