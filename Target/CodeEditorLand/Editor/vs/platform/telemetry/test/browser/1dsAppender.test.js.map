{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/telemetry/test/browser/1dsAppender.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport type { ITelemetryItem, ITelemetryUnloadState } from '@microsoft/1ds-core-js';\nimport assert from 'assert';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\nimport { OneDataSystemWebAppender } from '../../browser/1dsAppender.js';\nimport { IAppInsightsCore } from '../../common/1dsAppender.js';\n\nclass AppInsightsCoreMock implements IAppInsightsCore {\n\tpluginVersionString: string = 'Test Runner';\n\tpublic events: any[] = [];\n\tpublic IsTrackingPageView: boolean = false;\n\tpublic exceptions: any[] = [];\n\n\tpublic track(event: ITelemetryItem) {\n\t\tthis.events.push(event.baseData);\n\t}\n\n\tpublic unload(isAsync: boolean, unloadComplete: (unloadState: ITelemetryUnloadState) => void): void {\n\t\t// No-op\n\t}\n}\n\nsuite('AIAdapter', () => {\n\tlet appInsightsMock: AppInsightsCoreMock;\n\tlet adapter: OneDataSystemWebAppender;\n\tconst prefix = 'prefix';\n\n\n\tteardown(() => {\n\t\tadapter.flush();\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tsetup(() => {\n\t\tappInsightsMock = new AppInsightsCoreMock();\n\t\tadapter = new OneDataSystemWebAppender(false, prefix, undefined!, () => appInsightsMock);\n\t});\n\n\n\ttest('Simple event', () => {\n\t\tadapter.log('testEvent');\n\n\t\tassert.strictEqual(appInsightsMock.events.length, 1);\n\t\tassert.strictEqual(appInsightsMock.events[0].name, `${prefix}/testEvent`);\n\t});\n\n\ttest('addional data', () => {\n\t\tadapter = new OneDataSystemWebAppender(false, prefix, { first: '1st', second: 2, third: true }, () => appInsightsMock);\n\t\tadapter.log('testEvent');\n\n\t\tassert.strictEqual(appInsightsMock.events.length, 1);\n\t\tconst [first] = appInsightsMock.events;\n\t\tassert.strictEqual(first.name, `${prefix}/testEvent`);\n\t\tassert.strictEqual(first.properties!['first'], '1st');\n\t\tassert.strictEqual(first.measurements!['second'], 2);\n\t\tassert.strictEqual(first.measurements!['third'], 1);\n\t});\n\n\ttest('property limits', () => {\n\t\tlet reallyLongPropertyName = 'abcdefghijklmnopqrstuvwxyz';\n\t\tfor (let i = 0; i < 6; i++) {\n\t\t\treallyLongPropertyName += 'abcdefghijklmnopqrstuvwxyz';\n\t\t}\n\t\tassert(reallyLongPropertyName.length > 150);\n\n\t\tlet reallyLongPropertyValue = 'abcdefghijklmnopqrstuvwxyz012345678901234567890123';\n\t\tfor (let i = 0; i < 400; i++) {\n\t\t\treallyLongPropertyValue += 'abcdefghijklmnopqrstuvwxyz012345678901234567890123';\n\t\t}\n\t\tassert(reallyLongPropertyValue.length > 8192);\n\n\t\tconst data = Object.create(null);\n\t\tdata[reallyLongPropertyName] = '1234';\n\t\tdata['reallyLongPropertyValue'] = reallyLongPropertyValue;\n\t\tadapter.log('testEvent', data);\n\n\t\tassert.strictEqual(appInsightsMock.events.length, 1);\n\n\t\tfor (const prop in appInsightsMock.events[0].properties!) {\n\t\t\tassert(prop.length < 150);\n\t\t\tassert(appInsightsMock.events[0].properties![prop].length < 8192);\n\t\t}\n\t});\n\n\ttest('Different data types', () => {\n\t\tconst date = new Date();\n\t\tadapter.log('testEvent', { favoriteDate: date, likeRed: false, likeBlue: true, favoriteNumber: 1, favoriteColor: 'blue', favoriteCars: ['bmw', 'audi', 'ford'] });\n\n\t\tassert.strictEqual(appInsightsMock.events.length, 1);\n\t\tassert.strictEqual(appInsightsMock.events[0].name, `${prefix}/testEvent`);\n\t\tassert.strictEqual(appInsightsMock.events[0].properties!['favoriteColor'], 'blue');\n\t\tassert.strictEqual(appInsightsMock.events[0].measurements!['likeRed'], 0);\n\t\tassert.strictEqual(appInsightsMock.events[0].measurements!['likeBlue'], 1);\n\t\tassert.strictEqual(appInsightsMock.events[0].properties!['favoriteDate'], date.toISOString());\n\t\tassert.strictEqual(appInsightsMock.events[0].properties!['favoriteCars'], JSON.stringify(['bmw', 'audi', 'ford']));\n\t\tassert.strictEqual(appInsightsMock.events[0].measurements!['favoriteNumber'], 1);\n\t});\n\n\ttest('Nested data', () => {\n\t\tadapter.log('testEvent', {\n\t\t\twindow: {\n\t\t\t\ttitle: 'some title',\n\t\t\t\tmeasurements: {\n\t\t\t\t\twidth: 100,\n\t\t\t\t\theight: 200\n\t\t\t\t}\n\t\t\t},\n\t\t\tnestedObj: {\n\t\t\t\tnestedObj2: {\n\t\t\t\t\tnestedObj3: {\n\t\t\t\t\t\ttestProperty: 'test',\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ttestMeasurement: 1\n\t\t\t}\n\t\t});\n\n\t\tassert.strictEqual(appInsightsMock.events.length, 1);\n\t\tassert.strictEqual(appInsightsMock.events[0].name, `${prefix}/testEvent`);\n\n\t\tassert.strictEqual(appInsightsMock.events[0].properties!['window.title'], 'some title');\n\t\tassert.strictEqual(appInsightsMock.events[0].measurements!['window.measurements.width'], 100);\n\t\tassert.strictEqual(appInsightsMock.events[0].measurements!['window.measurements.height'], 200);\n\n\t\tassert.strictEqual(appInsightsMock.events[0].properties!['nestedObj.nestedObj2.nestedObj3'], JSON.stringify({ 'testProperty': 'test' }));\n\t\tassert.strictEqual(appInsightsMock.events[0].measurements!['nestedObj.testMeasurement'], 1);\n\t});\n\n});\n"],
  "mappings": "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",
  "names": []
}
