import n from"assert";import*as u from"sinon";import k from"sinon-test";import{mainWindow as f}from"../../../../base/browser/window.js";import*as i from"../../../../base/common/errors.js";import{Emitter as q}from"../../../../base/common/event.js";import{ensureNoDisposablesAreLeakedInTestSuite as y}from"../../../../base/test/common/utils.js";import{TestConfigurationService as g}from"../../../configuration/test/common/testConfigurationService.js";import P from"../../../product/common/product.js";import"../../../product/common/productService.js";import l from"../../browser/errorTelemetry.js";import{TelemetryConfiguration as I,TelemetryLevel as x}from"../../common/telemetry.js";import{TelemetryService as v}from"../../common/telemetryService.js";import{NullAppender as O}from"../../common/telemetryUtils.js";const d=k(u);class c{events;isDisposed;constructor(){this.events=[],this.isDisposed=!1}log(p,r){this.events.push({eventName:p,data:r})}getEventsCount(){return this.events.length}flush(){return this.isDisposed=!0,Promise.resolve(null)}}class E{personalInfo;importantInfo;filePrefix;dangerousPathWithoutImportantInfo;dangerousPathWithImportantInfo;missingModelPrefix;missingModelMessage;noSuchFilePrefix;noSuchFileMessage;stack;randomUserFile="a/path/that/doe_snt/con-tain/code/names.js";anonymizedRandomUserFile="<REDACTED: user-file-path>";nodeModulePathToRetain="node_modules/path/that/shouldbe/retained/names.js:14:15854";nodeModuleAsarPathToRetain="node_modules.asar/path/that/shouldbe/retained/names.js:14:12354";constructor(){this.personalInfo="DANGEROUS/PATH",this.importantInfo="important/information",this.filePrefix="file:///",this.dangerousPathWithImportantInfo=this.filePrefix+this.personalInfo+"/resources/app/"+this.importantInfo,this.dangerousPathWithoutImportantInfo=this.filePrefix+this.personalInfo,this.missingModelPrefix="Received model events for missing model ",this.missingModelMessage=this.missingModelPrefix+" "+this.dangerousPathWithoutImportantInfo,this.noSuchFilePrefix="ENOENT: no such file or directory",this.noSuchFileMessage=this.noSuchFilePrefix+" '"+this.personalInfo+"'",this.stack=[`at e._modelEvents (${this.randomUserFile}:11:7309)`,`    at t.AllWorkers (${this.randomUserFile}:6:8844)`,`    at e.(anonymous function) [as _modelEvents] (${this.randomUserFile}:5:29552)`,`    at Function.<anonymous> (${this.randomUserFile}:6:8272)`,`    at e.dispatch (${this.randomUserFile}:5:26931)`,`    at e.request (/${this.nodeModuleAsarPathToRetain})`,`    at t._handleMessage (${this.nodeModuleAsarPathToRetain})`,`    at t._onmessage (/${this.nodeModulePathToRetain})`,`    at t.onmessage (${this.nodeModulePathToRetain})`,"    at DedicatedWorkerGlobalScope.self.onmessage",this.dangerousPathWithImportantInfo,this.dangerousPathWithoutImportantInfo,this.missingModelMessage,this.noSuchFileMessage]}}suite("TelemetryService",()=>{const m={_serviceBrand:void 0,...P};test("Disposing",d(function(){const r=new c,e=new v({appenders:[r]},new g,m);e.publicLog("testPrivateEvent"),n.strictEqual(r.getEventsCount(),1),e.dispose(),n.strictEqual(!r.isDisposed,!0)})),test("Simple event",d(function(){const r=new c,e=new v({appenders:[r]},new g,m);e.publicLog("testEvent"),n.strictEqual(r.getEventsCount(),1),n.strictEqual(r.events[0].eventName,"testEvent"),n.notStrictEqual(r.events[0].data,null),e.dispose()})),test("Event with data",d(function(){const r=new c,e=new v({appenders:[r]},new g,m);e.publicLog("testEvent",{stringProp:"property",numberProp:1,booleanProp:!0,complexProp:{value:0}}),n.strictEqual(r.getEventsCount(),1),n.strictEqual(r.events[0].eventName,"testEvent"),n.notStrictEqual(r.events[0].data,null),n.strictEqual(r.events[0].data.stringProp,"property"),n.strictEqual(r.events[0].data.numberProp,1),n.strictEqual(r.events[0].data.booleanProp,!0),n.strictEqual(r.events[0].data.complexProp.value,0),e.dispose()})),test("common properties added to *all* events, simple event",function(){const r=new c,e=new v({appenders:[r],commonProperties:{foo:"JA!",get bar(){return Math.random()%2===0}}},new g,m);e.publicLog("testEvent");const[t]=r.events;n.strictEqual(Object.keys(t.data).length,2),n.strictEqual(typeof t.data.foo,"string"),n.strictEqual(typeof t.data.bar,"boolean"),e.dispose()}),test("common properties added to *all* events, event with data",function(){const r=new c,e=new v({appenders:[r],commonProperties:{foo:"JA!",get bar(){return Math.random()%2===0}}},new g,m);e.publicLog("testEvent",{hightower:"xl",price:8e3});const[t]=r.events;n.strictEqual(Object.keys(t.data).length,4),n.strictEqual(typeof t.data.foo,"string"),n.strictEqual(typeof t.data.bar,"boolean"),n.strictEqual(typeof t.data.hightower,"string"),n.strictEqual(typeof t.data.price,"number"),e.dispose()}),test("TelemetryInfo comes from properties",function(){const r=new v({appenders:[O],commonProperties:{sessionID:"one","common.machineId":"three"}},new g,m);n.strictEqual(r.sessionId,"one"),n.strictEqual(r.machineId,"three"),r.dispose()}),test("telemetry on by default",function(){const r=new c,e=new v({appenders:[r]},new g,m);e.publicLog("testEvent"),n.strictEqual(r.getEventsCount(),1),n.strictEqual(r.events[0].eventName,"testEvent"),e.dispose()});class p extends v{constructor(e){super({...e,sendErrorTelemetry:!0},new g,m)}}test("Error events",d(function(){const r=i.errorHandler.getUnexpectedErrorHandler();i.setUnexpectedErrorHandler(()=>{});try{const e=new c,t=new p({appenders:[e]}),s=new l(t),o=new Error("This is a test.");o.stack||(o.stack="blah"),i.onUnexpectedError(o),this.clock.tick(l.ERROR_FLUSH_TIMEOUT),n.strictEqual(e.getEventsCount(),1),n.strictEqual(e.events[0].eventName,"UnhandledError"),n.strictEqual(e.events[0].data.msg,"This is a test."),s.dispose(),t.dispose()}finally{i.setUnexpectedErrorHandler(r)}})),test("Handle global errors",d(function(){const r=u.stub();f.onerror=r;const e=new c,t=new p({appenders:[e]}),s=new l(t),o=new Error("test");f.onerror("Error Message","file.js",2,42,o),this.clock.tick(l.ERROR_FLUSH_TIMEOUT),n.strictEqual(r.alwaysCalledWithExactly("Error Message","file.js",2,42,o),!0),n.strictEqual(r.callCount,1),n.strictEqual(e.getEventsCount(),1),n.strictEqual(e.events[0].eventName,"UnhandledError"),n.strictEqual(e.events[0].data.msg,"Error Message"),n.strictEqual(e.events[0].data.file,"file.js"),n.strictEqual(e.events[0].data.line,2),n.strictEqual(e.events[0].data.column,42),n.strictEqual(e.events[0].data.uncaught_error_msg,"test"),s.dispose(),t.dispose(),u.restore()})),test("Error Telemetry removes PII from filename with spaces",d(function(){const r=u.stub();f.onerror=r;const e=new E,t=new c,s=new p({appenders:[t]}),o=new l(s),a=e.personalInfo.slice(0,2)+" "+e.personalInfo.slice(2),h=new Error("dangerousFilename");h.stack=e.stack,f.onerror("dangerousFilename",e.dangerousPathWithImportantInfo.replace(e.personalInfo,a)+"/test.js",2,42,h),this.clock.tick(l.ERROR_FLUSH_TIMEOUT),n.strictEqual(r.callCount,1),n.strictEqual(t.events[0].data.file.indexOf(e.dangerousPathWithImportantInfo.replace(e.personalInfo,a)),-1),n.strictEqual(t.events[0].data.file,e.importantInfo+"/test.js"),o.dispose(),s.dispose(),u.restore()})),test("Uncaught Error Telemetry removes PII from filename",d(function(){const r=this.clock,e=u.stub();f.onerror=e;const t=new E,s=new c,o=new p({appenders:[s]}),a=new l(o);let h=new Error("dangerousFilename");h.stack=t.stack,f.onerror("dangerousFilename",t.dangerousPathWithImportantInfo+"/test.js",2,42,h),r.tick(l.ERROR_FLUSH_TIMEOUT),n.strictEqual(e.callCount,1),n.strictEqual(s.events[0].data.file.indexOf(t.dangerousPathWithImportantInfo),-1),h=new Error("dangerousFilename"),h.stack=t.stack,f.onerror("dangerousFilename",t.dangerousPathWithImportantInfo+"/test.js",2,42,h),r.tick(l.ERROR_FLUSH_TIMEOUT),n.strictEqual(e.callCount,2),n.strictEqual(s.events[0].data.file.indexOf(t.dangerousPathWithImportantInfo),-1),n.strictEqual(s.events[0].data.file,t.importantInfo+"/test.js"),a.dispose(),o.dispose(),u.restore()})),test("Unexpected Error Telemetry removes PII",d(function(){const r=i.errorHandler.getUnexpectedErrorHandler();i.setUnexpectedErrorHandler(()=>{});try{const e=new E,t=new c,s=new p({appenders:[t]}),o=new l(s),a=new Error(e.dangerousPathWithoutImportantInfo);a.stack=e.stack,i.onUnexpectedError(a),this.clock.tick(l.ERROR_FLUSH_TIMEOUT),n.strictEqual(t.events[0].data.msg.indexOf(e.personalInfo),-1),n.strictEqual(t.events[0].data.msg.indexOf(e.filePrefix),-1),n.strictEqual(t.events[0].data.callstack.indexOf(e.personalInfo),-1),n.strictEqual(t.events[0].data.callstack.indexOf(e.filePrefix),-1),n.notStrictEqual(t.events[0].data.callstack.indexOf(e.stack[4].replace(e.randomUserFile,e.anonymizedRandomUserFile)),-1),n.strictEqual(t.events[0].data.callstack.split(`
`).length,e.stack.length),o.dispose(),s.dispose()}finally{i.setUnexpectedErrorHandler(r)}})),test("Uncaught Error Telemetry removes PII",d(function(){const r=u.stub();f.onerror=r;const e=new E,t=new c,s=new p({appenders:[t]}),o=new l(s),a=new Error("dangerousPathWithoutImportantInfo");a.stack=e.stack,f.onerror(e.dangerousPathWithoutImportantInfo,"test.js",2,42,a),this.clock.tick(l.ERROR_FLUSH_TIMEOUT),n.strictEqual(r.callCount,1),n.strictEqual(t.events[0].data.msg.indexOf(e.personalInfo),-1),n.strictEqual(t.events[0].data.msg.indexOf(e.filePrefix),-1),n.strictEqual(t.events[0].data.callstack.indexOf(e.personalInfo),-1),n.strictEqual(t.events[0].data.callstack.indexOf(e.filePrefix),-1),n.notStrictEqual(t.events[0].data.callstack.indexOf(e.stack[4].replace(e.randomUserFile,e.anonymizedRandomUserFile)),-1),n.strictEqual(t.events[0].data.callstack.split(`
`).length,e.stack.length),o.dispose(),s.dispose(),u.restore()})),test("Unexpected Error Telemetry removes PII but preserves Code file path",d(function(){const r=i.errorHandler.getUnexpectedErrorHandler();i.setUnexpectedErrorHandler(()=>{});try{const e=new E,t=new c,s=new p({appenders:[t]}),o=new l(s),a=new Error(e.dangerousPathWithImportantInfo);a.stack=e.stack,i.onUnexpectedError(a),this.clock.tick(l.ERROR_FLUSH_TIMEOUT),n.notStrictEqual(t.events[0].data.msg.indexOf(e.importantInfo),-1),n.strictEqual(t.events[0].data.msg.indexOf(e.personalInfo),-1),n.strictEqual(t.events[0].data.msg.indexOf(e.filePrefix),-1),n.notStrictEqual(t.events[0].data.callstack.indexOf(e.importantInfo),-1),n.strictEqual(t.events[0].data.callstack.indexOf(e.personalInfo),-1),n.strictEqual(t.events[0].data.callstack.indexOf(e.filePrefix),-1),n.notStrictEqual(t.events[0].data.callstack.indexOf(e.stack[4].replace(e.randomUserFile,e.anonymizedRandomUserFile)),-1),n.strictEqual(t.events[0].data.callstack.split(`
`).length,e.stack.length),o.dispose(),s.dispose()}finally{i.setUnexpectedErrorHandler(r)}})),test("Uncaught Error Telemetry removes PII but preserves Code file path",d(function(){const r=u.stub();f.onerror=r;const e=new E,t=new c,s=new p({appenders:[t]}),o=new l(s),a=new Error("dangerousPathWithImportantInfo");a.stack=e.stack,f.onerror(e.dangerousPathWithImportantInfo,"test.js",2,42,a),this.clock.tick(l.ERROR_FLUSH_TIMEOUT),n.strictEqual(r.callCount,1),n.notStrictEqual(t.events[0].data.callstack.indexOf("("+e.nodeModuleAsarPathToRetain),-1),n.notStrictEqual(t.events[0].data.callstack.indexOf("("+e.nodeModulePathToRetain),-1),n.notStrictEqual(t.events[0].data.callstack.indexOf("(/"+e.nodeModuleAsarPathToRetain),-1),n.notStrictEqual(t.events[0].data.callstack.indexOf("(/"+e.nodeModulePathToRetain),-1),n.notStrictEqual(t.events[0].data.msg.indexOf(e.importantInfo),-1),n.strictEqual(t.events[0].data.msg.indexOf(e.personalInfo),-1),n.strictEqual(t.events[0].data.msg.indexOf(e.filePrefix),-1),n.notStrictEqual(t.events[0].data.callstack.indexOf(e.importantInfo),-1),n.strictEqual(t.events[0].data.callstack.indexOf(e.personalInfo),-1),n.strictEqual(t.events[0].data.callstack.indexOf(e.filePrefix),-1),n.notStrictEqual(t.events[0].data.callstack.indexOf(e.stack[4].replace(e.randomUserFile,e.anonymizedRandomUserFile)),-1),n.strictEqual(t.events[0].data.callstack.split(`
`).length,e.stack.length),o.dispose(),s.dispose(),u.restore()})),test("Unexpected Error Telemetry removes PII but preserves Code file path with node modules",d(function(){const r=i.errorHandler.getUnexpectedErrorHandler();i.setUnexpectedErrorHandler(()=>{});try{const e=new E,t=new c,s=new p({appenders:[t]}),o=new l(s),a=new Error(e.dangerousPathWithImportantInfo);a.stack=e.stack,i.onUnexpectedError(a),this.clock.tick(l.ERROR_FLUSH_TIMEOUT),n.notStrictEqual(t.events[0].data.callstack.indexOf("("+e.nodeModuleAsarPathToRetain),-1),n.notStrictEqual(t.events[0].data.callstack.indexOf("("+e.nodeModulePathToRetain),-1),n.notStrictEqual(t.events[0].data.callstack.indexOf("(/"+e.nodeModuleAsarPathToRetain),-1),n.notStrictEqual(t.events[0].data.callstack.indexOf("(/"+e.nodeModulePathToRetain),-1),o.dispose(),s.dispose()}finally{i.setUnexpectedErrorHandler(r)}})),test("Unexpected Error Telemetry removes PII but preserves Code file path when PIIPath is configured",d(function(){const r=i.errorHandler.getUnexpectedErrorHandler();i.setUnexpectedErrorHandler(()=>{});try{const e=new E,t=new c,s=new p({appenders:[t],piiPaths:[e.personalInfo+"/resources/app/"]}),o=new l(s),a=new Error(e.dangerousPathWithImportantInfo);a.stack=e.stack,i.onUnexpectedError(a),this.clock.tick(l.ERROR_FLUSH_TIMEOUT),n.notStrictEqual(t.events[0].data.msg.indexOf(e.importantInfo),-1),n.strictEqual(t.events[0].data.msg.indexOf(e.personalInfo),-1),n.strictEqual(t.events[0].data.msg.indexOf(e.filePrefix),-1),n.notStrictEqual(t.events[0].data.callstack.indexOf(e.importantInfo),-1),n.strictEqual(t.events[0].data.callstack.indexOf(e.personalInfo),-1),n.strictEqual(t.events[0].data.callstack.indexOf(e.filePrefix),-1),n.notStrictEqual(t.events[0].data.callstack.indexOf(e.stack[4].replace(e.randomUserFile,e.anonymizedRandomUserFile)),-1),n.strictEqual(t.events[0].data.callstack.split(`
`).length,e.stack.length),o.dispose(),s.dispose()}finally{i.setUnexpectedErrorHandler(r)}})),test("Uncaught Error Telemetry removes PII but preserves Code file path when PIIPath is configured",d(function(){const r=u.stub();f.onerror=r;const e=new E,t=new c,s=new p({appenders:[t],piiPaths:[e.personalInfo+"/resources/app/"]}),o=new l(s),a=new Error("dangerousPathWithImportantInfo");a.stack=e.stack,f.onerror(e.dangerousPathWithImportantInfo,"test.js",2,42,a),this.clock.tick(l.ERROR_FLUSH_TIMEOUT),n.strictEqual(r.callCount,1),n.notStrictEqual(t.events[0].data.msg.indexOf(e.importantInfo),-1),n.strictEqual(t.events[0].data.msg.indexOf(e.personalInfo),-1),n.strictEqual(t.events[0].data.msg.indexOf(e.filePrefix),-1),n.notStrictEqual(t.events[0].data.callstack.indexOf(e.importantInfo),-1),n.strictEqual(t.events[0].data.callstack.indexOf(e.personalInfo),-1),n.strictEqual(t.events[0].data.callstack.indexOf(e.filePrefix),-1),n.notStrictEqual(t.events[0].data.callstack.indexOf(e.stack[4].replace(e.randomUserFile,e.anonymizedRandomUserFile)),-1),n.strictEqual(t.events[0].data.callstack.split(`
`).length,e.stack.length),o.dispose(),s.dispose(),u.restore()})),test("Unexpected Error Telemetry removes PII but preserves Missing Model error message",d(function(){const r=i.errorHandler.getUnexpectedErrorHandler();i.setUnexpectedErrorHandler(()=>{});try{const e=new E,t=new c,s=new p({appenders:[t]}),o=new l(s),a=new Error(e.missingModelMessage);a.stack=e.stack,i.onUnexpectedError(a),this.clock.tick(l.ERROR_FLUSH_TIMEOUT),n.notStrictEqual(t.events[0].data.msg.indexOf(e.missingModelPrefix),-1),n.strictEqual(t.events[0].data.msg.indexOf(e.personalInfo),-1),n.strictEqual(t.events[0].data.msg.indexOf(e.filePrefix),-1),n.notStrictEqual(t.events[0].data.callstack.indexOf(e.missingModelPrefix),-1),n.strictEqual(t.events[0].data.callstack.indexOf(e.personalInfo),-1),n.strictEqual(t.events[0].data.callstack.indexOf(e.filePrefix),-1),n.notStrictEqual(t.events[0].data.callstack.indexOf(e.stack[4].replace(e.randomUserFile,e.anonymizedRandomUserFile)),-1),n.strictEqual(t.events[0].data.callstack.split(`
`).length,e.stack.length),o.dispose(),s.dispose()}finally{i.setUnexpectedErrorHandler(r)}})),test("Uncaught Error Telemetry removes PII but preserves Missing Model error message",d(function(){const r=u.stub();f.onerror=r;const e=new E,t=new c,s=new p({appenders:[t]}),o=new l(s),a=new Error("missingModelMessage");a.stack=e.stack,f.onerror(e.missingModelMessage,"test.js",2,42,a),this.clock.tick(l.ERROR_FLUSH_TIMEOUT),n.strictEqual(r.callCount,1),n.notStrictEqual(t.events[0].data.msg.indexOf(e.missingModelPrefix),-1),n.strictEqual(t.events[0].data.msg.indexOf(e.personalInfo),-1),n.strictEqual(t.events[0].data.msg.indexOf(e.filePrefix),-1),n.notStrictEqual(t.events[0].data.callstack.indexOf(e.missingModelPrefix),-1),n.strictEqual(t.events[0].data.callstack.indexOf(e.personalInfo),-1),n.strictEqual(t.events[0].data.callstack.indexOf(e.filePrefix),-1),n.notStrictEqual(t.events[0].data.callstack.indexOf(e.stack[4].replace(e.randomUserFile,e.anonymizedRandomUserFile)),-1),n.strictEqual(t.events[0].data.callstack.split(`
`).length,e.stack.length),o.dispose(),s.dispose(),u.restore()})),test("Unexpected Error Telemetry removes PII but preserves No Such File error message",d(function(){const r=i.errorHandler.getUnexpectedErrorHandler();i.setUnexpectedErrorHandler(()=>{});try{const e=new E,t=new c,s=new p({appenders:[t]}),o=new l(s),a=new Error(e.noSuchFileMessage);a.stack=e.stack,i.onUnexpectedError(a),this.clock.tick(l.ERROR_FLUSH_TIMEOUT),n.notStrictEqual(t.events[0].data.msg.indexOf(e.noSuchFilePrefix),-1),n.strictEqual(t.events[0].data.msg.indexOf(e.personalInfo),-1),n.strictEqual(t.events[0].data.msg.indexOf(e.filePrefix),-1),n.notStrictEqual(t.events[0].data.callstack.indexOf(e.noSuchFilePrefix),-1),n.strictEqual(t.events[0].data.callstack.indexOf(e.personalInfo),-1),n.strictEqual(t.events[0].data.callstack.indexOf(e.filePrefix),-1),n.notStrictEqual(t.events[0].data.callstack.indexOf(e.stack[4].replace(e.randomUserFile,e.anonymizedRandomUserFile)),-1),n.strictEqual(t.events[0].data.callstack.split(`
`).length,e.stack.length),o.dispose(),s.dispose()}finally{i.setUnexpectedErrorHandler(r)}})),test("Uncaught Error Telemetry removes PII but preserves No Such File error message",d(function(){const r=i.errorHandler.getUnexpectedErrorHandler();i.setUnexpectedErrorHandler(()=>{});try{const e=u.stub();f.onerror=e;const t=new E,s=new c,o=new p({appenders:[s]}),a=new l(o),h=new Error("noSuchFileMessage");h.stack=t.stack,f.onerror(t.noSuchFileMessage,"test.js",2,42,h),this.clock.tick(l.ERROR_FLUSH_TIMEOUT),n.strictEqual(e.callCount,1),i.onUnexpectedError(h),n.notStrictEqual(s.events[0].data.msg.indexOf(t.noSuchFilePrefix),-1),n.strictEqual(s.events[0].data.msg.indexOf(t.personalInfo),-1),n.strictEqual(s.events[0].data.msg.indexOf(t.filePrefix),-1),n.notStrictEqual(s.events[0].data.callstack.indexOf(t.noSuchFilePrefix),-1),n.strictEqual(s.events[0].data.callstack.indexOf(t.personalInfo),-1),n.strictEqual(s.events[0].data.callstack.indexOf(t.filePrefix),-1),n.notStrictEqual(s.events[0].data.callstack.indexOf(t.stack[4].replace(t.randomUserFile,t.anonymizedRandomUserFile)),-1),n.strictEqual(s.events[0].data.callstack.split(`
`).length,t.stack.length),a.dispose(),o.dispose(),u.restore()}finally{i.setUnexpectedErrorHandler(r)}})),test("Telemetry Service sends events when telemetry is on",d(function(){const r=new c,e=new v({appenders:[r]},new g,m);e.publicLog("testEvent"),n.strictEqual(r.getEventsCount(),1),e.dispose()})),test("Telemetry Service checks with config service",function(){let r=I.OFF;const e=new q,t=new c,s=new v({appenders:[t]},new class extends g{onDidChangeConfiguration=e.event;getValue(){return r}},m);n.strictEqual(s.telemetryLevel,x.NONE),r=I.ON,e.fire({affectsConfiguration:()=>!0}),n.strictEqual(s.telemetryLevel,x.USAGE),r=I.ERROR,e.fire({affectsConfiguration:()=>!0}),n.strictEqual(s.telemetryLevel,x.ERROR),s.dispose()}),y()});
