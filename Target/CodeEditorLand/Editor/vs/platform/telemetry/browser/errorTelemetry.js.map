{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/telemetry/browser/errorTelemetry.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { mainWindow } from '../../../base/browser/window.js';\nimport { ErrorNoTelemetry } from '../../../base/common/errors.js';\nimport { toDisposable } from '../../../base/common/lifecycle.js';\nimport BaseErrorTelemetry, { ErrorEvent } from '../common/errorTelemetry.js';\n\nexport default class ErrorTelemetry extends BaseErrorTelemetry {\n\tprotected override installErrorListeners(): void {\n\t\tlet oldOnError: OnErrorEventHandler;\n\t\tconst that = this;\n\t\tif (typeof mainWindow.onerror === 'function') {\n\t\t\toldOnError = mainWindow.onerror;\n\t\t}\n\t\tmainWindow.onerror = function (message: Event | string, filename?: string, line?: number, column?: number, error?: Error) {\n\t\t\tthat._onUncaughtError(message as string, filename as string, line as number, column, error);\n\t\t\toldOnError?.apply(this, [message, filename, line, column, error]);\n\t\t};\n\t\tthis._disposables.add(toDisposable(() => {\n\t\t\tif (oldOnError) {\n\t\t\t\tmainWindow.onerror = oldOnError;\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _onUncaughtError(msg: string, file: string, line: number, column?: number, err?: any): void {\n\t\tconst data: ErrorEvent = {\n\t\t\tcallstack: msg,\n\t\t\tmsg,\n\t\t\tfile,\n\t\t\tline,\n\t\t\tcolumn\n\t\t};\n\n\t\tif (err) {\n\t\t\t// If it's the no telemetry error it doesn't get logged\n\t\t\tif (ErrorNoTelemetry.isErrorNoTelemetry(err)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { name, message, stack } = err;\n\t\t\tdata.uncaught_error_name = name;\n\t\t\tif (message) {\n\t\t\t\tdata.uncaught_error_msg = message;\n\t\t\t}\n\t\t\tif (stack) {\n\t\t\t\tdata.callstack = Array.isArray(err.stack)\n\t\t\t\t\t? err.stack = err.stack.join('\\n')\n\t\t\t\t\t: err.stack;\n\t\t\t}\n\t\t}\n\n\t\tthis._enqueue(data);\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,kBAAkB;AAC3B,SAAS,wBAAwB;AACjC,SAAS,oBAAoB;AAC7B,OAAO,sBAAsB,kBAAkB;AAE/C,MAAO,uBAAqC,mBAAmB;AAAA,EAV/D,OAU+D;AAAA;AAAA;AAAA,EAC3C,wBAA8B;AAChD,QAAI;AACJ,UAAM,OAAO;AACb,QAAI,OAAO,WAAW,YAAY,YAAY;AAC7C,mBAAa,WAAW;AAAA,IACzB;AACA,eAAW,UAAU,SAAU,SAAyB,UAAmB,MAAe,QAAiB,OAAe;AACzH,WAAK,iBAAiB,SAAmB,UAAoB,MAAgB,QAAQ,KAAK;AAC1F,kBAAY,MAAM,MAAM,CAAC,SAAS,UAAU,MAAM,QAAQ,KAAK,CAAC;AAAA,IACjE;AACA,SAAK,aAAa,IAAI,aAAa,MAAM;AACxC,UAAI,YAAY;AACf,mBAAW,UAAU;AAAA,MACtB;AAAA,IACD,CAAC,CAAC;AAAA,EACH;AAAA,EAEQ,iBAAiB,KAAa,MAAc,MAAc,QAAiB,KAAiB;AACnG,UAAM,OAAmB;AAAA,MACxB,WAAW;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAEA,QAAI,KAAK;AAER,UAAI,iBAAiB,mBAAmB,GAAG,GAAG;AAC7C;AAAA,MACD;AAEA,YAAM,EAAE,MAAM,SAAS,MAAM,IAAI;AACjC,WAAK,sBAAsB;AAC3B,UAAI,SAAS;AACZ,aAAK,qBAAqB;AAAA,MAC3B;AACA,UAAI,OAAO;AACV,aAAK,YAAY,MAAM,QAAQ,IAAI,KAAK,IACrC,IAAI,QAAQ,IAAI,MAAM,KAAK,IAAI,IAC/B,IAAI;AAAA,MACR;AAAA,IACD;AAEA,SAAK,SAAS,IAAI;AAAA,EACnB;AACD;",
  "names": []
}
