{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/telemetry/electron-main/telemetryUtils.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILogService } from '../../log/common/log.js';\nimport { IStateService } from '../../state/node/state.js';\nimport { machineIdKey, sqmIdKey, devDeviceIdKey } from '../common/telemetry.js';\nimport { resolveMachineId as resolveNodeMachineId, resolveSqmId as resolveNodeSqmId, resolvedevDeviceId as resolveNodedevDeviceId } from '../node/telemetryUtils.js';\n\nexport async function resolveMachineId(stateService: IStateService, logService: ILogService): Promise<string> {\n\t// Call the node layers implementation to avoid code duplication\n\tconst machineId = await resolveNodeMachineId(stateService, logService);\n\tstateService.setItem(machineIdKey, machineId);\n\treturn machineId;\n}\n\nexport async function resolveSqmId(stateService: IStateService, logService: ILogService): Promise<string> {\n\tconst sqmId = await resolveNodeSqmId(stateService, logService);\n\tstateService.setItem(sqmIdKey, sqmId);\n\treturn sqmId;\n}\n\nexport async function resolvedevDeviceId(stateService: IStateService, logService: ILogService): Promise<string> {\n\tconst devDeviceId = await resolveNodedevDeviceId(stateService, logService);\n\tstateService.setItem(devDeviceIdKey, devDeviceId);\n\treturn devDeviceId;\n}\n"],
  "mappings": ";;AAKA,SAAS,mBAAmB;AAC5B,SAAS,qBAAqB;AAC9B,SAAS,cAAc,UAAU,sBAAsB;AACvD,SAAS,oBAAoB,sBAAsB,gBAAgB,kBAAkB,sBAAsB,8BAA8B;AAEzI,eAAsB,iBAAiB,cAA6B,YAA0C;AAE7G,QAAM,YAAY,MAAM,qBAAqB,cAAc,UAAU;AACrE,eAAa,QAAQ,cAAc,SAAS;AAC5C,SAAO;AACR;AALsB;AAOtB,eAAsB,aAAa,cAA6B,YAA0C;AACzG,QAAM,QAAQ,MAAM,iBAAiB,cAAc,UAAU;AAC7D,eAAa,QAAQ,UAAU,KAAK;AACpC,SAAO;AACR;AAJsB;AAMtB,eAAsB,mBAAmB,cAA6B,YAA0C;AAC/G,QAAM,cAAc,MAAM,uBAAuB,cAAc,UAAU;AACzE,eAAa,QAAQ,gBAAgB,WAAW;AAChD,SAAO;AACR;AAJsB;",
  "names": []
}
