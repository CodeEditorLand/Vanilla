import*as u from"https";import{streamToBuffer as p}from"../../../../vs/base/common/buffer.js";import{CancellationToken as c}from"../../../../vs/base/common/cancellation.js";import"../../../../vs/base/parts/request/common/request.js";import"../../../../vs/platform/request/common/request.js";import{AbstractOneDataSystemAppender as m}from"../../../../vs/platform/telemetry/common/1dsAppender.js";async function f(t,e){const s=await e.request(t,c.None),o=(await p(s.stream)).toString(),n=s.res.statusCode??200;return{headers:s.res.headers,statusCode:n,responseData:o}}async function h(t){const e={method:t.type,headers:t.headers};return new Promise((o,n)=>{const r=u.request(t.url??"",e,a=>{a.on("data",function(i){o({headers:a.headers,statusCode:a.statusCode??200,responseData:i.toString()})}),a.on("error",function(i){n(i)})});r.write(t.data,a=>{a&&n(a)}),r.end()})}async function g(t,e,s){const o=typeof e.data=="string"?e.data:new TextDecoder().decode(e.data),n={type:"POST",headers:{...e.headers,"Content-Type":"application/json","Content-Length":Buffer.byteLength(e.data).toString()},url:e.urlString,data:o};try{const r=t?await f(n,t):await h(n);s(r.statusCode,r.headers,r.responseData)}catch{s(0,{})}}class P extends m{constructor(e,s,o,n,r){const a={sendPOST:(i,d)=>{g(e,i,d)}};super(s,o,n,r,a)}}export{P as OneDataSystemAppender};
