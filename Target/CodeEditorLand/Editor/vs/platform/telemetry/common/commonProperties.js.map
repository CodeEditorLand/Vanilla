{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/telemetry/common/commonProperties.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isLinuxSnap, platform, Platform, PlatformToString } from '../../../base/common/platform.js';\nimport { env, platform as nodePlatform } from '../../../base/common/process.js';\nimport { generateUuid } from '../../../base/common/uuid.js';\nimport { ICommonProperties } from './telemetry.js';\n\nfunction getPlatformDetail(hostname: string): string | undefined {\n\tif (platform === Platform.Linux && /^penguin(\\.|$)/i.test(hostname)) {\n\t\treturn 'chromebook';\n\t}\n\n\treturn undefined;\n}\n\nexport function resolveCommonProperties(\n\trelease: string,\n\thostname: string,\n\tarch: string,\n\tcommit: string | undefined,\n\tversion: string | undefined,\n\tmachineId: string | undefined,\n\tsqmId: string | undefined,\n\tdevDeviceId: string | undefined,\n\tisInternalTelemetry: boolean,\n\tproduct?: string\n): ICommonProperties {\n\tconst result: ICommonProperties = Object.create(null);\n\n\t// __GDPR__COMMON__ \"common.machineId\" : { \"endPoint\": \"MacAddressHash\", \"classification\": \"EndUserPseudonymizedInformation\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.machineId'] = machineId;\n\t// __GDPR__COMMON__ \"common.sqmId\" : { \"endPoint\": \"SqmMachineId\", \"classification\": \"EndUserPseudonymizedInformation\", \"purpose\": \"BusinessInsight\" }\n\tresult['common.sqmId'] = sqmId;\n\t// __GDPR__COMMON__ \"common.devDeviceId\" : { \"endPoint\": \"SqmMachineId\", \"classification\": \"EndUserPseudonymizedInformation\", \"purpose\": \"BusinessInsight\" }\n\tresult['common.devDeviceId'] = devDeviceId;\n\t// __GDPR__COMMON__ \"sessionID\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['sessionID'] = generateUuid() + Date.now();\n\t// __GDPR__COMMON__ \"commitHash\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['commitHash'] = commit;\n\t// __GDPR__COMMON__ \"version\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['version'] = version;\n\t// __GDPR__COMMON__ \"common.platformVersion\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.platformVersion'] = (release || '').replace(/^(\\d+)(\\.\\d+)?(\\.\\d+)?(.*)/, '$1$2$3');\n\t// __GDPR__COMMON__ \"common.platform\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.platform'] = PlatformToString(platform);\n\t// __GDPR__COMMON__ \"common.nodePlatform\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.nodePlatform'] = nodePlatform;\n\t// __GDPR__COMMON__ \"common.nodeArch\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.nodeArch'] = arch;\n\t// __GDPR__COMMON__ \"common.product\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.product'] = product || 'desktop';\n\n\tif (isInternalTelemetry) {\n\t\t// __GDPR__COMMON__ \"common.msftInternal\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\tresult['common.msftInternal'] = isInternalTelemetry;\n\t}\n\n\t// dynamic properties which value differs on each call\n\tlet seq = 0;\n\tconst startTime = Date.now();\n\tObject.defineProperties(result, {\n\t\t// __GDPR__COMMON__ \"timestamp\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t'timestamp': {\n\t\t\tget: () => new Date(),\n\t\t\tenumerable: true\n\t\t},\n\t\t// __GDPR__COMMON__ \"common.timesincesessionstart\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t'common.timesincesessionstart': {\n\t\t\tget: () => Date.now() - startTime,\n\t\t\tenumerable: true\n\t\t},\n\t\t// __GDPR__COMMON__ \"common.sequence\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t'common.sequence': {\n\t\t\tget: () => seq++,\n\t\t\tenumerable: true\n\t\t}\n\t});\n\n\tif (isLinuxSnap) {\n\t\t// __GDPR__COMMON__ \"common.snap\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\tresult['common.snap'] = 'true';\n\t}\n\n\tconst platformDetail = getPlatformDetail(hostname);\n\n\tif (platformDetail) {\n\t\t// __GDPR__COMMON__ \"common.platformDetail\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\tresult['common.platformDetail'] = platformDetail;\n\t}\n\n\treturn result;\n}\n\nexport function verifyMicrosoftInternalDomain(domainList: readonly string[]): boolean {\n\tconst userDnsDomain = env['USERDNSDOMAIN'];\n\tif (!userDnsDomain) {\n\t\treturn false;\n\t}\n\n\tconst domain = userDnsDomain.toLowerCase();\n\treturn domainList.some(msftDomain => domain === msftDomain);\n}\n"],
  "mappings": ";;AAKA,SAAS,aAAa,UAAU,UAAU,wBAAwB;AAClE,SAAS,KAAK,YAAY,oBAAoB;AAC9C,SAAS,oBAAoB;AAC7B,SAAS,yBAAyB;AAElC,SAAS,kBAAkB,UAAsC;AAChE,MAAI,aAAa,SAAS,SAAS,kBAAkB,KAAK,QAAQ,GAAG;AACpE,WAAO;AAAA,EACR;AAEA,SAAO;AACR;AANS;AAQF,SAAS,wBACf,SACA,UACA,MACA,QACA,SACA,WACA,OACA,aACA,qBACA,SACoB;AACpB,QAAM,SAA4B,uBAAO,OAAO,IAAI;AAGpD,SAAO,kBAAkB,IAAI;AAE7B,SAAO,cAAc,IAAI;AAEzB,SAAO,oBAAoB,IAAI;AAE/B,SAAO,WAAW,IAAI,aAAa,IAAI,KAAK,IAAI;AAEhD,SAAO,YAAY,IAAI;AAEvB,SAAO,SAAS,IAAI;AAEpB,SAAO,wBAAwB,KAAK,WAAW,IAAI,QAAQ,8BAA8B,QAAQ;AAEjG,SAAO,iBAAiB,IAAI,iBAAiB,QAAQ;AAErD,SAAO,qBAAqB,IAAI;AAEhC,SAAO,iBAAiB,IAAI;AAE5B,SAAO,gBAAgB,IAAI,WAAW;AAEtC,MAAI,qBAAqB;AAExB,WAAO,qBAAqB,IAAI;AAAA,EACjC;AAGA,MAAI,MAAM;AACV,QAAM,YAAY,KAAK,IAAI;AAC3B,SAAO,iBAAiB,QAAQ;AAAA;AAAA,IAE/B,aAAa;AAAA,MACZ,KAAK,6BAAM,oBAAI,KAAK,GAAf;AAAA,MACL,YAAY;AAAA,IACb;AAAA;AAAA,IAEA,gCAAgC;AAAA,MAC/B,KAAK,6BAAM,KAAK,IAAI,IAAI,WAAnB;AAAA,MACL,YAAY;AAAA,IACb;AAAA;AAAA,IAEA,mBAAmB;AAAA,MAClB,KAAK,6BAAM,OAAN;AAAA,MACL,YAAY;AAAA,IACb;AAAA,EACD,CAAC;AAED,MAAI,aAAa;AAEhB,WAAO,aAAa,IAAI;AAAA,EACzB;AAEA,QAAM,iBAAiB,kBAAkB,QAAQ;AAEjD,MAAI,gBAAgB;AAEnB,WAAO,uBAAuB,IAAI;AAAA,EACnC;AAEA,SAAO;AACR;AA5EgB;AA8ET,SAAS,8BAA8B,YAAwC;AACrF,QAAM,gBAAgB,IAAI,eAAe;AACzC,MAAI,CAAC,eAAe;AACnB,WAAO;AAAA,EACR;AAEA,QAAM,SAAS,cAAc,YAAY;AACzC,SAAO,WAAW,KAAK,gBAAc,WAAW,UAAU;AAC3D;AARgB;",
  "names": []
}
