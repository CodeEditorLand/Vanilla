import{Platform as g,PlatformToString as D,isLinuxSnap as P,platform as s}from"../../../base/common/platform.js";import{env as I,platform as b}from"../../../base/common/process.js";import{generateUuid as v}from"../../../base/common/uuid.js";function w(o){if(s===g.Linux&&/^penguin(\.|$)/i.test(o))return"chromebook"}function S(o,n,t,r,a,f,c,u,m,d){const e=Object.create(null);e["common.machineId"]=f,e["common.sqmId"]=c,e["common.devDeviceId"]=u,e.sessionID=v()+Date.now(),e.commitHash=r,e.version=a,e["common.platformVersion"]=(o||"").replace(/^(\d+)(\.\d+)?(\.\d+)?(.*)/,"$1$2$3"),e["common.platform"]=D(s),e["common.nodePlatform"]=b,e["common.nodeArch"]=t,e["common.product"]=d||"desktop",m&&(e["common.msftInternal"]=m);let l=0;const p=Date.now();Object.defineProperties(e,{timestamp:{get:()=>new Date,enumerable:!0},"common.timesincesessionstart":{get:()=>Date.now()-p,enumerable:!0},"common.sequence":{get:()=>l++,enumerable:!0}}),P&&(e["common.snap"]="true");const i=w(n);return i&&(e["common.platformDetail"]=i),e}function $(o){const n=I.USERDNSDOMAIN;if(!n)return!1;const t=n.toLowerCase();return o.some(r=>t===r)}export{S as resolveCommonProperties,$ as verifyMicrosoftInternalDomain};
