{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/contextview/browser/contextMenuHandler.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IContextMenuDelegate } from '../../../base/browser/contextmenu.js';\nimport { $, addDisposableListener, EventType, getActiveElement, getWindow, isAncestor, isHTMLElement } from '../../../base/browser/dom.js';\nimport { StandardMouseEvent } from '../../../base/browser/mouseEvent.js';\nimport { Menu } from '../../../base/browser/ui/menu/menu.js';\nimport { ActionRunner, IRunEvent, WorkbenchActionExecutedClassification, WorkbenchActionExecutedEvent } from '../../../base/common/actions.js';\nimport { isCancellationError } from '../../../base/common/errors.js';\nimport { combinedDisposable, DisposableStore, IDisposable } from '../../../base/common/lifecycle.js';\nimport { IContextViewService } from './contextView.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { INotificationService } from '../../notification/common/notification.js';\nimport { ITelemetryService } from '../../telemetry/common/telemetry.js';\nimport { defaultMenuStyles } from '../../theme/browser/defaultStyles.js';\n\n\nexport interface IContextMenuHandlerOptions {\n\tblockMouse: boolean;\n}\n\nexport class ContextMenuHandler {\n\tprivate focusToReturn: HTMLElement | null = null;\n\tprivate lastContainer: HTMLElement | null = null;\n\tprivate block: HTMLElement | null = null;\n\tprivate blockDisposable: IDisposable | null = null;\n\tprivate options: IContextMenuHandlerOptions = { blockMouse: true };\n\n\tconstructor(\n\t\tprivate contextViewService: IContextViewService,\n\t\tprivate telemetryService: ITelemetryService,\n\t\tprivate notificationService: INotificationService,\n\t\tprivate keybindingService: IKeybindingService,\n\t) { }\n\n\tconfigure(options: IContextMenuHandlerOptions): void {\n\t\tthis.options = options;\n\t}\n\n\tshowContextMenu(delegate: IContextMenuDelegate): void {\n\t\tconst actions = delegate.getActions();\n\t\tif (!actions.length) {\n\t\t\treturn; // Don't render an empty context menu\n\t\t}\n\n\t\tthis.focusToReturn = getActiveElement() as HTMLElement;\n\n\t\tlet menu: Menu | undefined;\n\n\t\tconst shadowRootElement = isHTMLElement(delegate.domForShadowRoot) ? delegate.domForShadowRoot : undefined;\n\t\tthis.contextViewService.showContextView({\n\t\t\tgetAnchor: () => delegate.getAnchor(),\n\t\t\tcanRelayout: false,\n\t\t\tanchorAlignment: delegate.anchorAlignment,\n\t\t\tanchorAxisAlignment: delegate.anchorAxisAlignment,\n\n\t\t\trender: (container) => {\n\t\t\t\tthis.lastContainer = container;\n\t\t\t\tconst className = delegate.getMenuClassName ? delegate.getMenuClassName() : '';\n\n\t\t\t\tif (className) {\n\t\t\t\t\tcontainer.className += ' ' + className;\n\t\t\t\t}\n\n\t\t\t\t// Render invisible div to block mouse interaction in the rest of the UI\n\t\t\t\tif (this.options.blockMouse) {\n\t\t\t\t\tthis.block = container.appendChild($('.context-view-block'));\n\t\t\t\t\tthis.block.style.position = 'fixed';\n\t\t\t\t\tthis.block.style.cursor = 'initial';\n\t\t\t\t\tthis.block.style.left = '0';\n\t\t\t\t\tthis.block.style.top = '0';\n\t\t\t\t\tthis.block.style.width = '100%';\n\t\t\t\t\tthis.block.style.height = '100%';\n\t\t\t\t\tthis.block.style.zIndex = '-1';\n\n\t\t\t\t\tthis.blockDisposable?.dispose();\n\t\t\t\t\tthis.blockDisposable = addDisposableListener(this.block, EventType.MOUSE_DOWN, e => e.stopPropagation());\n\t\t\t\t}\n\n\t\t\t\tconst menuDisposables = new DisposableStore();\n\n\t\t\t\tconst actionRunner = delegate.actionRunner || new ActionRunner();\n\t\t\t\tactionRunner.onWillRun(evt => this.onActionRun(evt, !delegate.skipTelemetry), this, menuDisposables);\n\t\t\t\tactionRunner.onDidRun(this.onDidActionRun, this, menuDisposables);\n\t\t\t\tmenu = new Menu(container, actions, {\n\t\t\t\t\tactionViewItemProvider: delegate.getActionViewItem,\n\t\t\t\t\tcontext: delegate.getActionsContext ? delegate.getActionsContext() : null,\n\t\t\t\t\tactionRunner,\n\t\t\t\t\tgetKeyBinding: delegate.getKeyBinding ? delegate.getKeyBinding : action => this.keybindingService.lookupKeybinding(action.id)\n\t\t\t\t},\n\t\t\t\t\tdefaultMenuStyles\n\t\t\t\t);\n\n\t\t\t\tmenu.onDidCancel(() => this.contextViewService.hideContextView(true), null, menuDisposables);\n\t\t\t\tmenu.onDidBlur(() => this.contextViewService.hideContextView(true), null, menuDisposables);\n\t\t\t\tconst targetWindow = getWindow(container);\n\t\t\t\tmenuDisposables.add(addDisposableListener(targetWindow, EventType.BLUR, () => this.contextViewService.hideContextView(true)));\n\t\t\t\tmenuDisposables.add(addDisposableListener(targetWindow, EventType.MOUSE_DOWN, (e: MouseEvent) => {\n\t\t\t\t\tif (e.defaultPrevented) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst event = new StandardMouseEvent(targetWindow, e);\n\t\t\t\t\tlet element: HTMLElement | null = event.target;\n\n\t\t\t\t\t// Don't do anything as we are likely creating a context menu\n\t\t\t\t\tif (event.rightButton) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\twhile (element) {\n\t\t\t\t\t\tif (element === container) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\telement = element.parentElement;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.contextViewService.hideContextView(true);\n\t\t\t\t}));\n\n\t\t\t\treturn combinedDisposable(menuDisposables, menu);\n\t\t\t},\n\n\t\t\tfocus: () => {\n\t\t\t\tmenu?.focus(!!delegate.autoSelectFirstItem);\n\t\t\t},\n\n\t\t\tonHide: (didCancel?: boolean) => {\n\t\t\t\tdelegate.onHide?.(!!didCancel);\n\n\t\t\t\tif (this.block) {\n\t\t\t\t\tthis.block.remove();\n\t\t\t\t\tthis.block = null;\n\t\t\t\t}\n\n\t\t\t\tthis.blockDisposable?.dispose();\n\t\t\t\tthis.blockDisposable = null;\n\n\t\t\t\tif (!!this.lastContainer && (getActiveElement() === this.lastContainer || isAncestor(getActiveElement(), this.lastContainer))) {\n\t\t\t\t\tthis.focusToReturn?.focus();\n\t\t\t\t}\n\n\t\t\t\tthis.lastContainer = null;\n\t\t\t}\n\t\t}, shadowRootElement, !!shadowRootElement);\n\t}\n\n\tprivate onActionRun(e: IRunEvent, logTelemetry: boolean): void {\n\t\tif (logTelemetry) {\n\t\t\tthis.telemetryService.publicLog2<WorkbenchActionExecutedEvent, WorkbenchActionExecutedClassification>('workbenchActionExecuted', { id: e.action.id, from: 'contextMenu' });\n\t\t}\n\n\t\tthis.contextViewService.hideContextView(false);\n\t}\n\n\tprivate onDidActionRun(e: IRunEvent): void {\n\t\tif (e.error && !isCancellationError(e.error)) {\n\t\t\tthis.notificationService.error(e.error);\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
