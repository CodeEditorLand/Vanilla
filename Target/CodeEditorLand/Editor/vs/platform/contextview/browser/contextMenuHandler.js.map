{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/contextview/browser/contextMenuHandler.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IContextMenuDelegate } from \"../../../base/browser/contextmenu.js\";\nimport {\n\t$,\n\tEventType,\n\taddDisposableListener,\n\tgetActiveElement,\n\tgetWindow,\n\tisAncestor,\n\tisHTMLElement,\n} from \"../../../base/browser/dom.js\";\nimport { StandardMouseEvent } from \"../../../base/browser/mouseEvent.js\";\nimport { Menu } from \"../../../base/browser/ui/menu/menu.js\";\nimport {\n\tActionRunner,\n\ttype IRunEvent,\n\ttype WorkbenchActionExecutedClassification,\n\ttype WorkbenchActionExecutedEvent,\n} from \"../../../base/common/actions.js\";\nimport { isCancellationError } from \"../../../base/common/errors.js\";\nimport {\n\tDisposableStore,\n\ttype IDisposable,\n\tcombinedDisposable,\n} from \"../../../base/common/lifecycle.js\";\nimport type { IKeybindingService } from \"../../keybinding/common/keybinding.js\";\nimport type { INotificationService } from \"../../notification/common/notification.js\";\nimport type { ITelemetryService } from \"../../telemetry/common/telemetry.js\";\nimport { defaultMenuStyles } from \"../../theme/browser/defaultStyles.js\";\nimport type { IContextViewService } from \"./contextView.js\";\n\nexport interface IContextMenuHandlerOptions {\n\tblockMouse: boolean;\n}\n\nexport class ContextMenuHandler {\n\tprivate focusToReturn: HTMLElement | null = null;\n\tprivate lastContainer: HTMLElement | null = null;\n\tprivate block: HTMLElement | null = null;\n\tprivate blockDisposable: IDisposable | null = null;\n\tprivate options: IContextMenuHandlerOptions = { blockMouse: true };\n\n\tconstructor(\n\t\tprivate contextViewService: IContextViewService,\n\t\tprivate telemetryService: ITelemetryService,\n\t\tprivate notificationService: INotificationService,\n\t\tprivate keybindingService: IKeybindingService,\n\t) {}\n\n\tconfigure(options: IContextMenuHandlerOptions): void {\n\t\tthis.options = options;\n\t}\n\n\tshowContextMenu(delegate: IContextMenuDelegate): void {\n\t\tconst actions = delegate.getActions();\n\t\tif (!actions.length) {\n\t\t\treturn; // Don't render an empty context menu\n\t\t}\n\n\t\tthis.focusToReturn = getActiveElement() as HTMLElement;\n\n\t\tlet menu: Menu | undefined;\n\n\t\tconst shadowRootElement = isHTMLElement(delegate.domForShadowRoot)\n\t\t\t? delegate.domForShadowRoot\n\t\t\t: undefined;\n\t\tthis.contextViewService.showContextView(\n\t\t\t{\n\t\t\t\tgetAnchor: () => delegate.getAnchor(),\n\t\t\t\tcanRelayout: false,\n\t\t\t\tanchorAlignment: delegate.anchorAlignment,\n\t\t\t\tanchorAxisAlignment: delegate.anchorAxisAlignment,\n\n\t\t\t\trender: (container) => {\n\t\t\t\t\tthis.lastContainer = container;\n\t\t\t\t\tconst className = delegate.getMenuClassName\n\t\t\t\t\t\t? delegate.getMenuClassName()\n\t\t\t\t\t\t: \"\";\n\n\t\t\t\t\tif (className) {\n\t\t\t\t\t\tcontainer.className += \" \" + className;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Render invisible div to block mouse interaction in the rest of the UI\n\t\t\t\t\tif (this.options.blockMouse) {\n\t\t\t\t\t\tthis.block = container.appendChild(\n\t\t\t\t\t\t\t$(\".context-view-block\"),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.block.style.position = \"fixed\";\n\t\t\t\t\t\tthis.block.style.cursor = \"initial\";\n\t\t\t\t\t\tthis.block.style.left = \"0\";\n\t\t\t\t\t\tthis.block.style.top = \"0\";\n\t\t\t\t\t\tthis.block.style.width = \"100%\";\n\t\t\t\t\t\tthis.block.style.height = \"100%\";\n\t\t\t\t\t\tthis.block.style.zIndex = \"-1\";\n\n\t\t\t\t\t\tthis.blockDisposable?.dispose();\n\t\t\t\t\t\tthis.blockDisposable = addDisposableListener(\n\t\t\t\t\t\t\tthis.block,\n\t\t\t\t\t\t\tEventType.MOUSE_DOWN,\n\t\t\t\t\t\t\t(e) => e.stopPropagation(),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst menuDisposables = new DisposableStore();\n\n\t\t\t\t\tconst actionRunner =\n\t\t\t\t\t\tdelegate.actionRunner || new ActionRunner();\n\t\t\t\t\tactionRunner.onWillRun(\n\t\t\t\t\t\t(evt) => this.onActionRun(evt, !delegate.skipTelemetry),\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\tmenuDisposables,\n\t\t\t\t\t);\n\t\t\t\t\tactionRunner.onDidRun(\n\t\t\t\t\t\tthis.onDidActionRun,\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\tmenuDisposables,\n\t\t\t\t\t);\n\t\t\t\t\tmenu = new Menu(\n\t\t\t\t\t\tcontainer,\n\t\t\t\t\t\tactions,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tactionViewItemProvider: delegate.getActionViewItem,\n\t\t\t\t\t\t\tcontext: delegate.getActionsContext\n\t\t\t\t\t\t\t\t? delegate.getActionsContext()\n\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\t\tactionRunner,\n\t\t\t\t\t\t\tgetKeyBinding: delegate.getKeyBinding\n\t\t\t\t\t\t\t\t? delegate.getKeyBinding\n\t\t\t\t\t\t\t\t: (action) =>\n\t\t\t\t\t\t\t\t\t\tthis.keybindingService.lookupKeybinding(\n\t\t\t\t\t\t\t\t\t\t\taction.id,\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdefaultMenuStyles,\n\t\t\t\t\t);\n\n\t\t\t\t\tmenu.onDidCancel(\n\t\t\t\t\t\t() => this.contextViewService.hideContextView(true),\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tmenuDisposables,\n\t\t\t\t\t);\n\t\t\t\t\tmenu.onDidBlur(\n\t\t\t\t\t\t() => this.contextViewService.hideContextView(true),\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tmenuDisposables,\n\t\t\t\t\t);\n\t\t\t\t\tconst targetWindow = getWindow(container);\n\t\t\t\t\tmenuDisposables.add(\n\t\t\t\t\t\taddDisposableListener(\n\t\t\t\t\t\t\ttargetWindow,\n\t\t\t\t\t\t\tEventType.BLUR,\n\t\t\t\t\t\t\t() => this.contextViewService.hideContextView(true),\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tmenuDisposables.add(\n\t\t\t\t\t\taddDisposableListener(\n\t\t\t\t\t\t\ttargetWindow,\n\t\t\t\t\t\t\tEventType.MOUSE_DOWN,\n\t\t\t\t\t\t\t(e: MouseEvent) => {\n\t\t\t\t\t\t\t\tif (e.defaultPrevented) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tconst event = new StandardMouseEvent(\n\t\t\t\t\t\t\t\t\ttargetWindow,\n\t\t\t\t\t\t\t\t\te,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tlet element: HTMLElement | null = event.target;\n\n\t\t\t\t\t\t\t\t// Don't do anything as we are likely creating a context menu\n\t\t\t\t\t\t\t\tif (event.rightButton) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\twhile (element) {\n\t\t\t\t\t\t\t\t\tif (element === container) {\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\telement = element.parentElement;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tthis.contextViewService.hideContextView(true);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\n\t\t\t\t\treturn combinedDisposable(menuDisposables, menu);\n\t\t\t\t},\n\n\t\t\t\tfocus: () => {\n\t\t\t\t\tmenu?.focus(!!delegate.autoSelectFirstItem);\n\t\t\t\t},\n\n\t\t\t\tonHide: (didCancel?: boolean) => {\n\t\t\t\t\tdelegate.onHide?.(!!didCancel);\n\n\t\t\t\t\tif (this.block) {\n\t\t\t\t\t\tthis.block.remove();\n\t\t\t\t\t\tthis.block = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.blockDisposable?.dispose();\n\t\t\t\t\tthis.blockDisposable = null;\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t!!this.lastContainer &&\n\t\t\t\t\t\t(getActiveElement() === this.lastContainer ||\n\t\t\t\t\t\t\tisAncestor(getActiveElement(), this.lastContainer))\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.focusToReturn?.focus();\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.lastContainer = null;\n\t\t\t\t},\n\t\t\t},\n\t\t\tshadowRootElement,\n\t\t\t!!shadowRootElement,\n\t\t);\n\t}\n\n\tprivate onActionRun(e: IRunEvent, logTelemetry: boolean): void {\n\t\tif (logTelemetry) {\n\t\t\tthis.telemetryService.publicLog2<\n\t\t\t\tWorkbenchActionExecutedEvent,\n\t\t\t\tWorkbenchActionExecutedClassification\n\t\t\t>(\"workbenchActionExecuted\", {\n\t\t\t\tid: e.action.id,\n\t\t\t\tfrom: \"contextMenu\",\n\t\t\t});\n\t\t}\n\n\t\tthis.contextViewService.hideContextView(false);\n\t}\n\n\tprivate onDidActionRun(e: IRunEvent): void {\n\t\tif (e.error && !isCancellationError(e.error)) {\n\t\t\tthis.notificationService.error(e.error);\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
