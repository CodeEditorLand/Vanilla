{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/contextview/browser/contextViewService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getWindow } from \"../../../base/browser/dom.js\";\nimport {\n\tContextView,\n\tContextViewDOMPosition,\n\ttype IContextViewProvider,\n} from \"../../../base/browser/ui/contextview/contextview.js\";\nimport { Disposable } from \"../../../base/common/lifecycle.js\";\nimport { ILayoutService } from \"../../layout/browser/layoutService.js\";\nimport type {\n\tIContextViewDelegate,\n\tIContextViewService,\n\tIOpenContextView,\n} from \"./contextView.js\";\n\nexport class ContextViewHandler\n\textends Disposable\n\timplements IContextViewProvider\n{\n\tprivate openContextView: IOpenContextView | undefined;\n\tprotected readonly contextView = this._register(\n\t\tnew ContextView(\n\t\t\tthis.layoutService.mainContainer,\n\t\t\tContextViewDOMPosition.ABSOLUTE,\n\t\t),\n\t);\n\n\tconstructor(\n\t\t@ILayoutService private readonly layoutService: ILayoutService\n\t) {\n\t\tsuper();\n\n\t\tthis.layout();\n\t\tthis._register(layoutService.onDidLayoutContainer(() => this.layout()));\n\t}\n\n\t// ContextView\n\n\tshowContextView(\n\t\tdelegate: IContextViewDelegate,\n\t\tcontainer?: HTMLElement,\n\t\tshadowRoot?: boolean,\n\t): IOpenContextView {\n\t\tlet domPosition: ContextViewDOMPosition;\n\t\tif (container) {\n\t\t\tif (\n\t\t\t\tcontainer ===\n\t\t\t\tthis.layoutService.getContainer(getWindow(container))\n\t\t\t) {\n\t\t\t\tdomPosition = ContextViewDOMPosition.ABSOLUTE;\n\t\t\t} else if (shadowRoot) {\n\t\t\t\tdomPosition = ContextViewDOMPosition.FIXED_SHADOW;\n\t\t\t} else {\n\t\t\t\tdomPosition = ContextViewDOMPosition.FIXED;\n\t\t\t}\n\t\t} else {\n\t\t\tdomPosition = ContextViewDOMPosition.ABSOLUTE;\n\t\t}\n\n\t\tthis.contextView.setContainer(\n\t\t\tcontainer ?? this.layoutService.activeContainer,\n\t\t\tdomPosition,\n\t\t);\n\n\t\tthis.contextView.show(delegate);\n\n\t\tconst openContextView: IOpenContextView = {\n\t\t\tclose: () => {\n\t\t\t\tif (this.openContextView === openContextView) {\n\t\t\t\t\tthis.hideContextView();\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\n\t\tthis.openContextView = openContextView;\n\t\treturn openContextView;\n\t}\n\n\tlayout(): void {\n\t\tthis.contextView.layout();\n\t}\n\n\thideContextView(data?: any): void {\n\t\tthis.contextView.hide(data);\n\t\tthis.openContextView = undefined;\n\t}\n}\n\nexport class ContextViewService\n\textends ContextViewHandler\n\timplements IContextViewService\n{\n\tdeclare readonly _serviceBrand: undefined;\n\n\tgetContextViewElement(): HTMLElement {\n\t\treturn this.contextView.getViewElement();\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,iBAAiB;AAC1B;AAAA,EACC;AAAA,EACA;AAAA,OAEM;AACP,SAAS,kBAAkB;AAC3B,SAAS,sBAAsB;AAOxB,IAAM,qBAAN,cACE,WAET;AAAA,EASC,YACkC,eAChC;AACD,UAAM;AAF2B;AAIjC,SAAK,OAAO;AACZ,SAAK,UAAU,cAAc,qBAAqB,MAAM,KAAK,OAAO,CAAC,CAAC;AAAA,EACvE;AAAA,EAtCD,OAsBA;AAAA;AAAA;AAAA,EACS;AAAA,EACW,cAAc,KAAK;AAAA,IACrC,IAAI;AAAA,MACH,KAAK,cAAc;AAAA,MACnB,uBAAuB;AAAA,IACxB;AAAA,EACD;AAAA;AAAA,EAaA,gBACC,UACA,WACA,YACmB;AACnB,QAAI;AACJ,QAAI,WAAW;AACd,UACC,cACA,KAAK,cAAc,aAAa,UAAU,SAAS,CAAC,GACnD;AACD,sBAAc,uBAAuB;AAAA,MACtC,WAAW,YAAY;AACtB,sBAAc,uBAAuB;AAAA,MACtC,OAAO;AACN,sBAAc,uBAAuB;AAAA,MACtC;AAAA,IACD,OAAO;AACN,oBAAc,uBAAuB;AAAA,IACtC;AAEA,SAAK,YAAY;AAAA,MAChB,aAAa,KAAK,cAAc;AAAA,MAChC;AAAA,IACD;AAEA,SAAK,YAAY,KAAK,QAAQ;AAE9B,UAAM,kBAAoC;AAAA,MACzC,OAAO,6BAAM;AACZ,YAAI,KAAK,oBAAoB,iBAAiB;AAC7C,eAAK,gBAAgB;AAAA,QACtB;AAAA,MACD,GAJO;AAAA,IAKR;AAEA,SAAK,kBAAkB;AACvB,WAAO;AAAA,EACR;AAAA,EAEA,SAAe;AACd,SAAK,YAAY,OAAO;AAAA,EACzB;AAAA,EAEA,gBAAgB,MAAkB;AACjC,SAAK,YAAY,KAAK,IAAI;AAC1B,SAAK,kBAAkB;AAAA,EACxB;AACD;AAvEa,qBAAN;AAAA,EAaJ;AAAA,GAbU;AAyEN,MAAM,2BACJ,mBAET;AAAA,EA/FA,OA+FA;AAAA;AAAA;AAAA,EAGC,wBAAqC;AACpC,WAAO,KAAK,YAAY,eAAe;AAAA,EACxC;AACD;",
  "names": []
}
