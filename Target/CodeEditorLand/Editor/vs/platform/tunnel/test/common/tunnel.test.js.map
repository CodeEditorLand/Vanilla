{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/tunnel/test/common/tunnel.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport assert from 'assert';\nimport { URI } from '../../../../base/common/uri.js';\nimport {\n\textractLocalHostUriMetaDataForPortMapping,\n\textractQueryLocalHostUriMetaDataForPortMapping\n} from '../../common/tunnel.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\n\n\nsuite('Tunnel', () => {\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tfunction portMappingDoTest(uri: string,\n\t\tfunc: (uri: URI) => { address: string; port: number } | undefined,\n\t\texpectedAddress?: string,\n\t\texpectedPort?: number) {\n\t\tconst res = func(URI.parse(uri));\n\t\tassert.strictEqual(!expectedAddress, !res);\n\t\tassert.strictEqual(res?.address, expectedAddress);\n\t\tassert.strictEqual(res?.port, expectedPort);\n\t}\n\n\tfunction portMappingTest(uri: string, expectedAddress?: string, expectedPort?: number) {\n\t\tportMappingDoTest(uri, extractLocalHostUriMetaDataForPortMapping, expectedAddress, expectedPort);\n\t}\n\n\tfunction portMappingTestQuery(uri: string, expectedAddress?: string, expectedPort?: number) {\n\t\tportMappingDoTest(uri, extractQueryLocalHostUriMetaDataForPortMapping, expectedAddress, expectedPort);\n\t}\n\n\ttest('portMapping', () => {\n\t\tportMappingTest('file:///foo.bar/baz');\n\t\tportMappingTest('http://foo.bar:1234');\n\t\tportMappingTest('http://localhost:8080', 'localhost', 8080);\n\t\tportMappingTest('https://localhost:443', 'localhost', 443);\n\t\tportMappingTest('http://127.0.0.1:3456', '127.0.0.1', 3456);\n\t\tportMappingTest('http://0.0.0.0:7654', '0.0.0.0', 7654);\n\t\tportMappingTest('http://localhost:8080/path?foo=bar', 'localhost', 8080);\n\t\tportMappingTest('http://localhost:8080/path?foo=http%3A%2F%2Flocalhost%3A8081', 'localhost', 8080);\n\t\tportMappingTestQuery('http://foo.bar/path?url=http%3A%2F%2Flocalhost%3A8081', 'localhost', 8081);\n\t\tportMappingTestQuery('http://foo.bar/path?url=http%3A%2F%2Flocalhost%3A8081&url2=http%3A%2F%2Flocalhost%3A8082', 'localhost', 8081);\n\t\tportMappingTestQuery('http://foo.bar/path?url=http%3A%2F%2Fmicrosoft.com%2Fbad&url2=http%3A%2F%2Flocalhost%3A8081', 'localhost', 8081);\n\t});\n});\n"],
  "mappings": ";;AAIA,OAAO,YAAY;AACnB,SAAS,WAAW;AACpB;AAAA,EACC;AAAA,EACA;AAAA,OACM;AACP,SAAS,+CAA+C;AAGxD,MAAM,UAAU,MAAM;AACrB,0CAAwC;AAExC,WAAS,kBAAkB,KAC1B,MACA,iBACA,cAAuB;AACvB,UAAM,MAAM,KAAK,IAAI,MAAM,GAAG,CAAC;AAC/B,WAAO,YAAY,CAAC,iBAAiB,CAAC,GAAG;AACzC,WAAO,YAAY,KAAK,SAAS,eAAe;AAChD,WAAO,YAAY,KAAK,MAAM,YAAY;AAAA,EAC3C;AARS;AAUT,WAAS,gBAAgB,KAAa,iBAA0B,cAAuB;AACtF,sBAAkB,KAAK,2CAA2C,iBAAiB,YAAY;AAAA,EAChG;AAFS;AAIT,WAAS,qBAAqB,KAAa,iBAA0B,cAAuB;AAC3F,sBAAkB,KAAK,gDAAgD,iBAAiB,YAAY;AAAA,EACrG;AAFS;AAIT,OAAK,eAAe,MAAM;AACzB,oBAAgB,qBAAqB;AACrC,oBAAgB,qBAAqB;AACrC,oBAAgB,yBAAyB,aAAa,IAAI;AAC1D,oBAAgB,yBAAyB,aAAa,GAAG;AACzD,oBAAgB,yBAAyB,aAAa,IAAI;AAC1D,oBAAgB,uBAAuB,WAAW,IAAI;AACtD,oBAAgB,sCAAsC,aAAa,IAAI;AACvE,oBAAgB,gEAAgE,aAAa,IAAI;AACjG,yBAAqB,yDAAyD,aAAa,IAAI;AAC/F,yBAAqB,4FAA4F,aAAa,IAAI;AAClI,yBAAqB,+FAA+F,aAAa,IAAI;AAAA,EACtI,CAAC;AACF,CAAC;",
  "names": []
}
