{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/hover/browser/hover.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { IHoverDelegate, IHoverDelegateOptions } from '../../../base/browser/ui/hover/hoverDelegate.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { addStandardDisposableListener, isHTMLElement } from '../../../base/browser/dom.js';\nimport { KeyCode } from '../../../base/common/keyCodes.js';\nimport type { IHoverDelegate2, IHoverOptions, IHoverWidget } from '../../../base/browser/ui/hover/hover.js';\n\nexport const IHoverService = createDecorator<IHoverService>('hoverService');\n\nexport interface IHoverService extends IHoverDelegate2 {\n\treadonly _serviceBrand: undefined;\n}\n\nexport class WorkbenchHoverDelegate extends Disposable implements IHoverDelegate {\n\n\tprivate lastHoverHideTime = 0;\n\tprivate timeLimit = 200;\n\n\tprivate _delay: number;\n\tget delay(): number {\n\t\tif (this.isInstantlyHovering()) {\n\t\t\treturn 0; // show instantly when a hover was recently shown\n\t\t}\n\t\treturn this._delay;\n\t}\n\n\tprivate readonly hoverDisposables = this._register(new DisposableStore());\n\n\tconstructor(\n\t\tpublic readonly placement: 'mouse' | 'element',\n\t\tprivate readonly instantHover: boolean,\n\t\tprivate overrideOptions: Partial<IHoverOptions> | ((options: IHoverDelegateOptions, focus?: boolean) => Partial<IHoverOptions>) = {},\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IHoverService private readonly hoverService: IHoverService,\n\t) {\n\t\tsuper();\n\n\t\tthis._delay = this.configurationService.getValue<number>('workbench.hover.delay');\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('workbench.hover.delay')) {\n\t\t\t\tthis._delay = this.configurationService.getValue<number>('workbench.hover.delay');\n\t\t\t}\n\t\t}));\n\t}\n\n\tshowHover(options: IHoverDelegateOptions, focus?: boolean): IHoverWidget | undefined {\n\t\tconst overrideOptions = typeof this.overrideOptions === 'function' ? this.overrideOptions(options, focus) : this.overrideOptions;\n\n\t\t// close hover on escape\n\t\tthis.hoverDisposables.clear();\n\t\tconst targets = isHTMLElement(options.target) ? [options.target] : options.target.targetElements;\n\t\tfor (const target of targets) {\n\t\t\tthis.hoverDisposables.add(addStandardDisposableListener(target, 'keydown', (e) => {\n\t\t\t\tif (e.equals(KeyCode.Escape)) {\n\t\t\t\t\tthis.hoverService.hideHover();\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\tconst id = isHTMLElement(options.content) ? undefined : options.content.toString();\n\n\t\treturn this.hoverService.showHover({\n\t\t\t...options,\n\t\t\t...overrideOptions,\n\t\t\tpersistence: {\n\t\t\t\thideOnKeyDown: true,\n\t\t\t\t...overrideOptions.persistence\n\t\t\t},\n\t\t\tid,\n\t\t\tappearance: {\n\t\t\t\t...options.appearance,\n\t\t\t\tcompact: true,\n\t\t\t\tskipFadeInAnimation: this.isInstantlyHovering(),\n\t\t\t\t...overrideOptions.appearance\n\t\t\t}\n\t\t}, focus);\n\t}\n\n\tprivate isInstantlyHovering(): boolean {\n\t\treturn this.instantHover && Date.now() - this.lastHoverHideTime < this.timeLimit;\n\t}\n\n\tsetInstantHoverTimeLimit(timeLimit: number): void {\n\t\tif (!this.instantHover) {\n\t\t\tthrow new Error('Instant hover is not enabled');\n\t\t}\n\t\tthis.timeLimit = timeLimit;\n\t}\n\n\tonDidHideHover(): void {\n\t\tthis.hoverDisposables.clear();\n\t\tif (this.instantHover) {\n\t\t\tthis.lastHoverHideTime = Date.now();\n\t\t}\n\t}\n}\n\n// TODO@benibenj remove this, only temp fix for contextviews\nexport const nativeHoverDelegate: IHoverDelegate = {\n\tshowHover: function (): IHoverWidget | undefined {\n\t\tthrow new Error('Native hover function not implemented.');\n\t},\n\tdelay: 0,\n\tshowNativeHover: true\n};\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,uBAAuB;AAChC,SAAS,YAAY,uBAAuB;AAC5C,SAAS,gBAAgB,6BAA6B;AACtD,SAAS,6BAA6B;AACtC,SAAS,+BAA+B,qBAAqB;AAC7D,SAAS,eAAe;AAGjB,MAAM,gBAAgB,gBAA+B,cAAc;AAMnE,IAAM,yBAAN,cAAqC,WAAqC;AAAA,EAehF,YACiB,WACC,cACT,kBAA0H,CAAC,GAC3F,sBACR,cAC/B;AACD,UAAM;AANU;AACC;AACT;AACgC;AACR;AAIhC,SAAK,SAAS,KAAK,qBAAqB,SAAiB,uBAAuB;AAChF,SAAK,UAAU,KAAK,qBAAqB,yBAAyB,OAAK;AACtE,UAAI,EAAE,qBAAqB,uBAAuB,GAAG;AACpD,aAAK,SAAS,KAAK,qBAAqB,SAAiB,uBAAuB;AAAA,MACjF;AAAA,IACD,CAAC,CAAC;AAAA,EACH;AAAA,EAjDD,OAmBiF;AAAA;AAAA;AAAA,EAExE,oBAAoB;AAAA,EACpB,YAAY;AAAA,EAEZ;AAAA,EACR,IAAI,QAAgB;AACnB,QAAI,KAAK,oBAAoB,GAAG;AAC/B,aAAO;AAAA,IACR;AACA,WAAO,KAAK;AAAA,EACb;AAAA,EAEiB,mBAAmB,KAAK,UAAU,IAAI,gBAAgB,CAAC;AAAA,EAmBxE,UAAU,SAAgC,OAA2C;AACpF,UAAM,kBAAkB,OAAO,KAAK,oBAAoB,aAAa,KAAK,gBAAgB,SAAS,KAAK,IAAI,KAAK;AAGjH,SAAK,iBAAiB,MAAM;AAC5B,UAAM,UAAU,cAAc,QAAQ,MAAM,IAAI,CAAC,QAAQ,MAAM,IAAI,QAAQ,OAAO;AAClF,eAAW,UAAU,SAAS;AAC7B,WAAK,iBAAiB,IAAI,8BAA8B,QAAQ,WAAW,CAAC,MAAM;AACjF,YAAI,EAAE,OAAO,QAAQ,MAAM,GAAG;AAC7B,eAAK,aAAa,UAAU;AAAA,QAC7B;AAAA,MACD,CAAC,CAAC;AAAA,IACH;AAEA,UAAM,KAAK,cAAc,QAAQ,OAAO,IAAI,SAAY,QAAQ,QAAQ,SAAS;AAEjF,WAAO,KAAK,aAAa,UAAU;AAAA,MAClC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,aAAa;AAAA,QACZ,eAAe;AAAA,QACf,GAAG,gBAAgB;AAAA,MACpB;AAAA,MACA;AAAA,MACA,YAAY;AAAA,QACX,GAAG,QAAQ;AAAA,QACX,SAAS;AAAA,QACT,qBAAqB,KAAK,oBAAoB;AAAA,QAC9C,GAAG,gBAAgB;AAAA,MACpB;AAAA,IACD,GAAG,KAAK;AAAA,EACT;AAAA,EAEQ,sBAA+B;AACtC,WAAO,KAAK,gBAAgB,KAAK,IAAI,IAAI,KAAK,oBAAoB,KAAK;AAAA,EACxE;AAAA,EAEA,yBAAyB,WAAyB;AACjD,QAAI,CAAC,KAAK,cAAc;AACvB,YAAM,IAAI,MAAM,8BAA8B;AAAA,IAC/C;AACA,SAAK,YAAY;AAAA,EAClB;AAAA,EAEA,iBAAuB;AACtB,SAAK,iBAAiB,MAAM;AAC5B,QAAI,KAAK,cAAc;AACtB,WAAK,oBAAoB,KAAK,IAAI;AAAA,IACnC;AAAA,EACD;AACD;AAlFa,yBAAN;AAAA,EAmBJ;AAAA,EACA;AAAA,GApBU;AAqFN,MAAM,sBAAsC;AAAA,EAClD,WAAW,kCAAsC;AAChD,UAAM,IAAI,MAAM,wCAAwC;AAAA,EACzD,GAFW;AAAA,EAGX,OAAO;AAAA,EACP,iBAAiB;AAClB;",
  "names": []
}
