import o from"assert";import{combinedDisposable as m}from"../../../../base/common/lifecycle.js";import{ensureNoDisposablesAreLeakedInTestSuite as i}from"../../../../base/test/common/utils.js";import{CommandsRegistry as e}from"../../common/commands.js";suite("Command Tests",function(){i(),test("register command - no handler",function(){o.throws(()=>e.registerCommand("foo",null))}),test("register/dispose",()=>{const n=function(){},t=e.registerCommand("foo",n);o.ok(e.getCommand("foo").handler===n),t.dispose(),o.ok(e.getCommand("foo")===void 0)}),test("register/register/dispose",()=>{const n=function(){},t=function(){};let d=e.registerCommand("foo",n);o.ok(e.getCommand("foo").handler===n);let s=e.registerCommand("foo",t);o.ok(e.getCommand("foo").handler===t),s.dispose(),o.ok(e.getCommand("foo").handler===n),d.dispose(),o.ok(e.getCommand("foo")===void 0),d=e.registerCommand("foo",n),s=e.registerCommand("foo",t),o.ok(e.getCommand("foo").handler===t),d.dispose(),o.ok(e.getCommand("foo").handler===t),s.dispose(),o.ok(e.getCommand("foo")===void 0)}),test("command with description",function(){const n=e.registerCommand("test",function(s,r){o.ok(typeof r=="string")}),t=e.registerCommand("test2",function(s,r){o.ok(typeof r=="string")}),d=e.registerCommand({id:"test3",handler:function(s,r){return!0},metadata:{description:"a command",args:[{name:"value",constraint:Number}]}});e.getCommands().get("test").handler.apply(void 0,[void 0,"string"]),e.getCommands().get("test2").handler.apply(void 0,[void 0,"string"]),o.throws(()=>e.getCommands().get("test3").handler.apply(void 0,[void 0,"string"])),o.strictEqual(e.getCommands().get("test3").handler.apply(void 0,[void 0,1]),!0),m(n,t,d).dispose()})});
