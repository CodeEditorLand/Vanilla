var c=class{unexpectedErrorHandler;listeners;constructor(){this.listeners=[],this.unexpectedErrorHandler=function(n){setTimeout(()=>{throw n.stack?g.isErrorNoTelemetry(n)?new g(n.message+`

`+n.stack):new Error(n.message+`

`+n.stack):n},0)}}addListener(n){return this.listeners.push(n),()=>{this._removeListener(n)}}emit(n){this.listeners.forEach(i=>{i(n)})}_removeListener(n){this.listeners.splice(this.listeners.indexOf(n),1)}setUnexpectedErrorHandler(n){this.unexpectedErrorHandler=n}getUnexpectedErrorHandler(){return this.unexpectedErrorHandler}onUnexpectedError(n){this.unexpectedErrorHandler(n),this.emit(n)}onUnexpectedExternalError(n){this.unexpectedErrorHandler(n)}},y=new c;function m(e){return e?new Error(`Illegal state: ${e}`):new Error("Illegal state")}var g=class e extends Error{name;constructor(n){super(n),this.name="CodeExpectedError"}static fromError(n){if(n instanceof e)return n;let i=new e;return i.message=n.message,i.stack=n.stack,i}static isErrorNoTelemetry(n){return n.name==="CodeExpectedError"}};function x(){return globalThis._VSCODE_NLS_MESSAGES}function T(){return globalThis._VSCODE_NLS_LANGUAGE}var f=T()==="pseudo"||typeof document<"u"&&document.location&&document.location.hash.indexOf("pseudo=true")>=0;function p(e,n){let i;return n.length===0?i=e:i=e.replace(/\{(\d+)\}/g,(_,E)=>{let l=E[0],s=n[l],u=_;return typeof s=="string"?u=s:(typeof s=="number"||typeof s=="boolean"||s===void 0||s===null)&&(u=String(s)),u}),f&&(i="\uFF3B"+i.replace(/[aouei]/g,"$&$&")+"\uFF3D"),i}function r(e,n,...i){return p(typeof e=="number"?U(e,n):n,i)}function U(e,n){let i=x()?.[e];if(typeof i!="string"){if(typeof n=="string")return n;throw new Error(`!!! NLS MISSING: ${e} !!!`)}return i}var R=(t=>(t[t.LParen=0]="LParen",t[t.RParen=1]="RParen",t[t.Neg=2]="Neg",t[t.Eq=3]="Eq",t[t.NotEq=4]="NotEq",t[t.Lt=5]="Lt",t[t.LtEq=6]="LtEq",t[t.Gt=7]="Gt",t[t.GtEq=8]="GtEq",t[t.RegexOp=9]="RegexOp",t[t.RegexStr=10]="RegexStr",t[t.True=11]="True",t[t.False=12]="False",t[t.In=13]="In",t[t.Not=14]="Not",t[t.And=15]="And",t[t.Or=16]="Or",t[t.Str=17]="Str",t[t.QuotedStr=18]="QuotedStr",t[t.Error=19]="Error",t[t.EOF=20]="EOF",t))(R||{});function o(...e){switch(e.length){case 1:return r("contextkey.scanner.hint.didYouMean1","Did you mean {0}?",e[0]);case 2:return r("contextkey.scanner.hint.didYouMean2","Did you mean {0} or {1}?",e[0],e[1]);case 3:return r("contextkey.scanner.hint.didYouMean3","Did you mean {0}, {1} or {2}?",e[0],e[1],e[2]);default:return}}var L=r("contextkey.scanner.hint.didYouForgetToOpenOrCloseQuote","Did you forget to open or close the quote?"),I=r("contextkey.scanner.hint.didYouForgetToEscapeSlash","Did you forget to escape the '/' (slash) character? Put two backslashes before it to escape, e.g., '\\\\/'."),b=class e{static getLexeme(n){switch(n.type){case 0:return"(";case 1:return")";case 2:return"!";case 3:return n.isTripleEq?"===":"==";case 4:return n.isTripleEq?"!==":"!=";case 5:return"<";case 6:return"<=";case 7:return">=";case 8:return">=";case 9:return"=~";case 10:return n.lexeme;case 11:return"true";case 12:return"false";case 13:return"in";case 14:return"not";case 15:return"&&";case 16:return"||";case 17:return n.lexeme;case 18:return n.lexeme;case 19:return n.lexeme;case 20:return"EOF";default:throw m(`unhandled token type: ${JSON.stringify(n)}; have you forgotten to add a case?`)}}static _regexFlags=new Set(["i","g","s","m","y","u"].map(n=>n.charCodeAt(0)));static _keywords=new Map([["not",14],["in",13],["false",12],["true",11]]);_input="";_start=0;_current=0;_tokens=[];_errors=[];get errors(){return this._errors}reset(n){return this._input=n,this._start=0,this._current=0,this._tokens=[],this._errors=[],this}scan(){for(;!this._isAtEnd();)switch(this._start=this._current,this._advance()){case 40:this._addToken(0);break;case 41:this._addToken(1);break;case 33:if(this._match(61)){let i=this._match(61);this._tokens.push({type:4,offset:this._start,isTripleEq:i})}else this._addToken(2);break;case 39:this._quotedString();break;case 47:this._regex();break;case 61:if(this._match(61)){let i=this._match(61);this._tokens.push({type:3,offset:this._start,isTripleEq:i})}else this._match(126)?this._addToken(9):this._error(o("==","=~"));break;case 60:this._addToken(this._match(61)?6:5);break;case 62:this._addToken(this._match(61)?8:7);break;case 38:this._match(38)?this._addToken(15):this._error(o("&&"));break;case 124:this._match(124)?this._addToken(16):this._error(o("||"));break;case 32:case 13:case 9:case 10:case 160:break;default:this._string()}return this._start=this._current,this._addToken(20),Array.from(this._tokens)}_match(n){return this._isAtEnd()||this._input.charCodeAt(this._current)!==n?!1:(this._current++,!0)}_advance(){return this._input.charCodeAt(this._current++)}_peek(){return this._isAtEnd()?0:this._input.charCodeAt(this._current)}_addToken(n){this._tokens.push({type:n,offset:this._start})}_error(n){let i=this._start,_=this._input.substring(this._start,this._current),E={type:19,offset:this._start,lexeme:_};this._errors.push({offset:i,lexeme:_,additionalInfo:n}),this._tokens.push(E)}stringRe=/[a-zA-Z0-9_<>\-\./\\:\*\?\+\[\]\^,#@;"%\$\p{L}-]+/uy;_string(){this.stringRe.lastIndex=this._start;let n=this.stringRe.exec(this._input);if(n){this._current=this._start+n[0].length;let i=this._input.substring(this._start,this._current),_=e._keywords.get(i);_?this._addToken(_):this._tokens.push({type:17,lexeme:i,offset:this._start})}}_quotedString(){for(;this._peek()!==39&&!this._isAtEnd();)this._advance();if(this._isAtEnd()){this._error(L);return}this._advance(),this._tokens.push({type:18,lexeme:this._input.substring(this._start+1,this._current-1),offset:this._start+1})}_regex(){let n=this._current,i=!1,_=!1;for(;;){if(n>=this._input.length){this._current=n,this._error(I);return}let l=this._input.charCodeAt(n);if(i)i=!1;else if(l===47&&!_){n++;break}else l===91?_=!0:l===92?i=!0:l===93&&(_=!1);n++}for(;n<this._input.length&&e._regexFlags.has(this._input.charCodeAt(n));)n++;this._current=n;let E=this._input.substring(this._start,this._current);this._tokens.push({type:10,lexeme:E,offset:this._start})}_isAtEnd(){return this._current>=this._input.length}};export{b as Scanner,R as TokenType};
