{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/contextkey/common/contextkeys.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tisIOS,\n\tisLinux,\n\tisMacintosh,\n\tisMobile,\n\tisWeb,\n\tisWindows,\n} from \"../../../base/common/platform.js\";\nimport { localize } from \"../../../nls.js\";\nimport { RawContextKey } from \"./contextkey.js\";\n\nexport const IsMacContext = new RawContextKey<boolean>(\n\t\"isMac\",\n\tisMacintosh,\n\tlocalize(\"isMac\", \"Whether the operating system is macOS\"),\n);\nexport const IsLinuxContext = new RawContextKey<boolean>(\n\t\"isLinux\",\n\tisLinux,\n\tlocalize(\"isLinux\", \"Whether the operating system is Linux\"),\n);\nexport const IsWindowsContext = new RawContextKey<boolean>(\n\t\"isWindows\",\n\tisWindows,\n\tlocalize(\"isWindows\", \"Whether the operating system is Windows\"),\n);\n\nexport const IsWebContext = new RawContextKey<boolean>(\n\t\"isWeb\",\n\tisWeb,\n\tlocalize(\"isWeb\", \"Whether the platform is a web browser\"),\n);\nexport const IsMacNativeContext = new RawContextKey<boolean>(\n\t\"isMacNative\",\n\tisMacintosh && !isWeb,\n\tlocalize(\n\t\t\"isMacNative\",\n\t\t\"Whether the operating system is macOS on a non-browser platform\",\n\t),\n);\nexport const IsIOSContext = new RawContextKey<boolean>(\n\t\"isIOS\",\n\tisIOS,\n\tlocalize(\"isIOS\", \"Whether the operating system is iOS\"),\n);\nexport const IsMobileContext = new RawContextKey<boolean>(\n\t\"isMobile\",\n\tisMobile,\n\tlocalize(\"isMobile\", \"Whether the platform is a mobile web browser\"),\n);\n\nexport const IsDevelopmentContext = new RawContextKey<boolean>(\n\t\"isDevelopment\",\n\tfalse,\n\ttrue,\n);\nexport const ProductQualityContext = new RawContextKey<string>(\n\t\"productQualityType\",\n\t\"\",\n\tlocalize(\"productQualityType\", \"Quality type of VS Code\"),\n);\n\nexport const InputFocusedContextKey = \"inputFocus\";\nexport const InputFocusedContext = new RawContextKey<boolean>(\n\tInputFocusedContextKey,\n\tfalse,\n\tlocalize(\"inputFocus\", \"Whether keyboard focus is inside an input box\"),\n);\n"],
  "mappings": "AAKA;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,gBAAgB;AACzB,SAAS,qBAAqB;AAEvB,MAAM,eAAe,IAAI;AAAA,EAC/B;AAAA,EACA;AAAA,EACA,SAAS,SAAS,uCAAuC;AAC1D;AACO,MAAM,iBAAiB,IAAI;AAAA,EACjC;AAAA,EACA;AAAA,EACA,SAAS,WAAW,uCAAuC;AAC5D;AACO,MAAM,mBAAmB,IAAI;AAAA,EACnC;AAAA,EACA;AAAA,EACA,SAAS,aAAa,yCAAyC;AAChE;AAEO,MAAM,eAAe,IAAI;AAAA,EAC/B;AAAA,EACA;AAAA,EACA,SAAS,SAAS,uCAAuC;AAC1D;AACO,MAAM,qBAAqB,IAAI;AAAA,EACrC;AAAA,EACA,eAAe,CAAC;AAAA,EAChB;AAAA,IACC;AAAA,IACA;AAAA,EACD;AACD;AACO,MAAM,eAAe,IAAI;AAAA,EAC/B;AAAA,EACA;AAAA,EACA,SAAS,SAAS,qCAAqC;AACxD;AACO,MAAM,kBAAkB,IAAI;AAAA,EAClC;AAAA,EACA;AAAA,EACA,SAAS,YAAY,8CAA8C;AACpE;AAEO,MAAM,uBAAuB,IAAI;AAAA,EACvC;AAAA,EACA;AAAA,EACA;AACD;AACO,MAAM,wBAAwB,IAAI;AAAA,EACxC;AAAA,EACA;AAAA,EACA,SAAS,sBAAsB,yBAAyB;AACzD;AAEO,MAAM,yBAAyB;AAC/B,MAAM,sBAAsB,IAAI;AAAA,EACtC;AAAA,EACA;AAAA,EACA,SAAS,cAAc,+CAA+C;AACvE;",
  "names": []
}
