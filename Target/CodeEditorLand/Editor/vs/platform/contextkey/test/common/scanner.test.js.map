{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/contextkey/test/common/scanner.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport assert from 'assert';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\nimport { Scanner, Token, TokenType } from '../../common/scanner.js';\n\nsuite('Context Key Scanner', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tfunction tokenTypeToStr(token: Token) {\n\t\tswitch (token.type) {\n\t\t\tcase TokenType.LParen:\n\t\t\t\treturn '(';\n\t\t\tcase TokenType.RParen:\n\t\t\t\treturn ')';\n\t\t\tcase TokenType.Neg:\n\t\t\t\treturn '!';\n\t\t\tcase TokenType.Eq:\n\t\t\t\treturn token.isTripleEq ? '===' : '==';\n\t\t\tcase TokenType.NotEq:\n\t\t\t\treturn token.isTripleEq ? '!==' : '!=';\n\t\t\tcase TokenType.Lt:\n\t\t\t\treturn '<';\n\t\t\tcase TokenType.LtEq:\n\t\t\t\treturn '<=';\n\t\t\tcase TokenType.Gt:\n\t\t\t\treturn '>';\n\t\t\tcase TokenType.GtEq:\n\t\t\t\treturn '>=';\n\t\t\tcase TokenType.RegexOp:\n\t\t\t\treturn '=~';\n\t\t\tcase TokenType.RegexStr:\n\t\t\t\treturn 'RegexStr';\n\t\t\tcase TokenType.True:\n\t\t\t\treturn 'true';\n\t\t\tcase TokenType.False:\n\t\t\t\treturn 'false';\n\t\t\tcase TokenType.In:\n\t\t\t\treturn 'in';\n\t\t\tcase TokenType.Not:\n\t\t\t\treturn 'not';\n\t\t\tcase TokenType.And:\n\t\t\t\treturn '&&';\n\t\t\tcase TokenType.Or:\n\t\t\t\treturn '||';\n\t\t\tcase TokenType.Str:\n\t\t\t\treturn 'Str';\n\t\t\tcase TokenType.QuotedStr:\n\t\t\t\treturn 'QuotedStr';\n\t\t\tcase TokenType.Error:\n\t\t\t\treturn 'ErrorToken';\n\t\t\tcase TokenType.EOF:\n\t\t\t\treturn 'EOF';\n\t\t}\n\n\t}\n\n\tfunction scan(input: string) {\n\t\treturn (new Scanner()).reset(input).scan().map((token: Token) => {\n\t\t\treturn 'lexeme' in token\n\t\t\t\t? {\n\t\t\t\t\ttype: tokenTypeToStr(token),\n\t\t\t\t\toffset: token.offset,\n\t\t\t\t\tlexeme: token.lexeme\n\t\t\t\t} : {\n\t\t\t\t\ttype: tokenTypeToStr(token),\n\t\t\t\t\toffset: token.offset\n\t\t\t\t};\n\t\t});\n\t}\n\n\tsuite('scanning various cases of context keys', () => {\n\n\t\ttest('foo.bar<C-shift+2>', () => {\n\t\t\tconst input = 'foo.bar<C-shift+2>';\n\t\t\tassert.deepStrictEqual(scan(input), ([{ type: \"Str\", lexeme: \"foo.bar<C-shift+2>\", offset: 0 }, { type: \"EOF\", offset: 18 }]));\n\t\t});\n\n\t\ttest('!foo', () => {\n\t\t\tconst input = '!foo';\n\t\t\tassert.deepStrictEqual(scan(input), ([{ type: \"!\", offset: 0 }, { type: \"Str\", lexeme: \"foo\", offset: 1 }, { type: \"EOF\", offset: 4 }]));\n\t\t});\n\n\t\ttest('foo === bar', () => {\n\t\t\tconst input = 'foo === bar';\n\t\t\tassert.deepStrictEqual(scan(input), ([{ type: \"Str\", offset: 0, lexeme: \"foo\" }, { type: \"===\", offset: 4 }, { type: \"Str\", offset: 8, lexeme: \"bar\" }, { type: \"EOF\", offset: 11 }]));\n\t\t});\n\n\t\ttest('foo  !== bar', () => {\n\t\t\tconst input = 'foo  !== bar';\n\t\t\tassert.deepStrictEqual(scan(input), ([{ type: \"Str\", offset: 0, lexeme: \"foo\" }, { type: \"!==\", offset: 5 }, { type: \"Str\", offset: 9, lexeme: \"bar\" }, { type: \"EOF\", offset: 12 }]));\n\t\t});\n\n\t\ttest('!(foo && bar)', () => {\n\t\t\tconst input = '!(foo && bar)';\n\t\t\tassert.deepStrictEqual(scan(input), ([{ type: \"!\", offset: 0 }, { type: \"(\", offset: 1 }, { type: \"Str\", lexeme: \"foo\", offset: 2 }, { type: \"&&\", offset: 6 }, { type: \"Str\", lexeme: \"bar\", offset: 9 }, { type: \")\", offset: 12 }, { type: \"EOF\", offset: 13 }]));\n\t\t});\n\n\t\ttest('=~ ', () => {\n\t\t\tconst input = '=~ ';\n\t\t\tassert.deepStrictEqual(scan(input), ([{ type: \"=~\", offset: 0 }, { type: \"EOF\", offset: 3 }]));\n\t\t});\n\n\t\ttest('foo =~ /bar/', () => {\n\t\t\tconst input = 'foo =~ /bar/';\n\t\t\tassert.deepStrictEqual(scan(input), ([{ type: \"Str\", lexeme: \"foo\", offset: 0 }, { type: \"=~\", offset: 4 }, { type: \"RegexStr\", lexeme: \"/bar/\", offset: 7 }, { type: \"EOF\", offset: 12 }]));\n\t\t});\n\n\t\ttest('foo =~ /zee/i', () => {\n\t\t\tconst input = 'foo =~ /zee/i';\n\t\t\tassert.deepStrictEqual(scan(input), ([{ type: \"Str\", lexeme: \"foo\", offset: 0 }, { type: \"=~\", offset: 4 }, { type: \"RegexStr\", lexeme: \"/zee/i\", offset: 7 }, { type: \"EOF\", offset: 13 }]));\n\t\t});\n\n\n\t\ttest('foo =~ /zee/gm', () => {\n\t\t\tconst input = 'foo =~ /zee/gm';\n\t\t\tassert.deepStrictEqual(scan(input), ([{ type: \"Str\", lexeme: \"foo\", offset: 0 }, { type: \"=~\", offset: 4 }, { type: \"RegexStr\", lexeme: \"/zee/gm\", offset: 7 }, { type: \"EOF\", offset: 14 }]));\n\t\t});\n\n\t\ttest('foo in barrr  ', () => {\n\t\t\tconst input = 'foo in barrr  ';\n\t\t\tassert.deepStrictEqual(scan(input), ([{ type: \"Str\", lexeme: \"foo\", offset: 0 }, { type: \"in\", offset: 4 }, { type: \"Str\", lexeme: \"barrr\", offset: 7 }, { type: \"EOF\", offset: 14 }]));\n\t\t});\n\n\t\ttest(`resource =~ //FileCabinet/(SuiteScripts|Templates/(E-mail%20Templates|Marketing%20Templates)|Web%20Site%20Hosting%20Files)(/.*)*$/`, () => {\n\t\t\tconst input = `resource =~ //FileCabinet/(SuiteScripts|Templates/(E-mail%20Templates|Marketing%20Templates)|Web%20Site%20Hosting%20Files)(/.*)*$/`;\n\t\t\tassert.deepStrictEqual(scan(input), ([{ type: \"Str\", offset: 0, lexeme: \"resource\" }, { type: \"=~\", offset: 9 }, { type: \"RegexStr\", offset: 12, lexeme: \"//\" }, { type: \"Str\", offset: 14, lexeme: \"FileCabinet/\" }, { type: \"(\", offset: 26 }, { type: \"Str\", offset: 27, lexeme: \"SuiteScripts\" }, { type: \"ErrorToken\", offset: 39, lexeme: \"|\" }, { type: \"Str\", offset: 40, lexeme: \"Templates/\" }, { type: \"(\", offset: 50 }, { type: \"Str\", offset: 51, lexeme: \"E-mail%20Templates\" }, { type: \"ErrorToken\", offset: 69, lexeme: \"|\" }, { type: \"Str\", offset: 70, lexeme: \"Marketing%20Templates\" }, { type: \")\", offset: 91 }, { type: \"ErrorToken\", offset: 92, lexeme: \"|\" }, { type: \"Str\", offset: 93, lexeme: \"Web%20Site%20Hosting%20Files\" }, { type: \")\", offset: 121 }, { type: \"(\", offset: 122 }, { type: \"RegexStr\", offset: 123, lexeme: \"/.*)*$/\" }, { type: \"EOF\", offset: 130 }]));\n\t\t});\n\n\t\ttest('editorLangId in testely.supportedLangIds && resourceFilename =~ /^.+(.test.(\\w+))$/gm', () => {\n\t\t\tconst input = 'editorLangId in testely.supportedLangIds && resourceFilename =~ /^.+(.test.(\\w+))$/gm';\n\t\t\tassert.deepStrictEqual(scan(input), ([{ type: \"Str\", lexeme: \"editorLangId\", offset: 0 }, { type: \"in\", offset: 13 }, { type: \"Str\", lexeme: \"testely.supportedLangIds\", offset: 16 }, { type: \"&&\", offset: 41 }, { type: \"Str\", lexeme: \"resourceFilename\", offset: 44 }, { type: \"=~\", offset: 61 }, { type: \"RegexStr\", lexeme: \"/^.+(.test.(w+))$/gm\", offset: 64 }, { type: \"EOF\", offset: 84 }]));\n\t\t});\n\n\t\ttest('!(foo && bar) && baz', () => {\n\t\t\tconst input = '!(foo && bar) && baz';\n\t\t\tassert.deepStrictEqual(scan(input), ([{ type: \"!\", offset: 0 }, { type: \"(\", offset: 1 }, { type: \"Str\", lexeme: \"foo\", offset: 2 }, { type: \"&&\", offset: 6 }, { type: \"Str\", lexeme: \"bar\", offset: 9 }, { type: \")\", offset: 12 }, { type: \"&&\", offset: 14 }, { type: \"Str\", lexeme: \"baz\", offset: 17 }, { type: \"EOF\", offset: 20 }]));\n\t\t});\n\n\t\ttest('foo.bar:zed==completed - equality with no space', () => {\n\t\t\tconst input = 'foo.bar:zed==completed';\n\t\t\tassert.deepStrictEqual(scan(input), ([{ type: \"Str\", lexeme: \"foo.bar:zed\", offset: 0 }, { type: \"==\", offset: 11 }, { type: \"Str\", lexeme: \"completed\", offset: 13 }, { type: \"EOF\", offset: 22 }]));\n\t\t});\n\n\t\ttest('a && b || c', () => {\n\t\t\tconst input = 'a && b || c';\n\t\t\tassert.deepStrictEqual(scan(input), ([{ type: \"Str\", lexeme: \"a\", offset: 0 }, { type: \"&&\", offset: 2 }, { type: \"Str\", lexeme: \"b\", offset: 5 }, { type: \"||\", offset: 7 }, { type: \"Str\", lexeme: \"c\", offset: 10 }, { type: \"EOF\", offset: 11 }]));\n\t\t});\n\n\t\ttest('fooBar && baz.jar && fee.bee<K-loo+1>', () => {\n\t\t\tconst input = 'fooBar && baz.jar && fee.bee<K-loo+1>';\n\t\t\tassert.deepStrictEqual(scan(input), ([{ type: \"Str\", lexeme: \"fooBar\", offset: 0 }, { type: \"&&\", offset: 7 }, { type: \"Str\", lexeme: \"baz.jar\", offset: 10 }, { type: \"&&\", offset: 18 }, { type: \"Str\", lexeme: \"fee.bee<K-loo+1>\", offset: 21 }, { type: \"EOF\", offset: 37 }]));\n\t\t});\n\n\t\ttest('foo.barBaz<C-r> < 2', () => {\n\t\t\tconst input = 'foo.barBaz<C-r> < 2';\n\t\t\tassert.deepStrictEqual(scan(input), ([{ type: \"Str\", lexeme: \"foo.barBaz<C-r>\", offset: 0 }, { type: \"<\", offset: 16 }, { type: \"Str\", lexeme: \"2\", offset: 18 }, { type: \"EOF\", offset: 19 }]));\n\t\t});\n\n\t\ttest('foo.bar >= -1', () => {\n\t\t\tconst input = 'foo.bar >= -1';\n\t\t\tassert.deepStrictEqual(scan(input), ([{ type: \"Str\", lexeme: \"foo.bar\", offset: 0 }, { type: \">=\", offset: 8 }, { type: \"Str\", lexeme: \"-1\", offset: 11 }, { type: \"EOF\", offset: 13 }]));\n\t\t});\n\n\t\ttest('foo.bar <= -1', () => {\n\t\t\tconst input = 'foo.bar <= -1';\n\t\t\tassert.deepStrictEqual(scan(input), ([{ type: \"Str\", lexeme: \"foo.bar\", offset: 0 }, { type: \"<=\", offset: 8 }, { type: \"Str\", lexeme: \"-1\", offset: 11 }, { type: \"EOF\", offset: 13 }]));\n\t\t});\n\n\t\ttest(`resource =~ /\\\\/Objects\\\\/.+\\\\.xml$/`, () => {\n\t\t\tconst input = `resource =~ /\\\\/Objects\\\\/.+\\\\.xml$/`;\n\t\t\tassert.deepStrictEqual(scan(input), ([{ type: \"Str\", lexeme: \"resource\", offset: 0 }, { type: \"=~\", offset: 9 }, { type: \"RegexStr\", lexeme: \"/\\\\/Objects\\\\/.+\\\\.xml$/\", offset: 12 }, { type: \"EOF\", offset: 33 }]));\n\t\t});\n\n\t\ttest('view == vsc-packages-activitybar-folders\u00A0&& vsc-packages-folders-loaded', () => {\n\t\t\tconst input = `view == vsc-packages-activitybar-folders\u00A0&& vsc-packages-folders-loaded`;\n\t\t\tassert.deepStrictEqual(scan(input), ([{ type: \"Str\", lexeme: \"view\", offset: 0 }, { type: \"==\", offset: 5 }, { type: \"Str\", lexeme: \"vsc-packages-activitybar-folders\", offset: 8 }, { type: \"&&\", offset: 41 }, { type: \"Str\", lexeme: \"vsc-packages-folders-loaded\", offset: 44 }, { type: \"EOF\", offset: 71 }]));\n\t\t});\n\n\t\ttest(`sfdx:project_opened && resource =~ /.*\\\\/functions\\\\/.*\\\\/[^\\\\/]+(\\\\/[^\\\\/]+\\.(ts|js|java|json|toml))?$/ && resourceFilename != package.json && resourceFilename != package-lock.json && resourceFilename != tsconfig.json`, () => {\n\t\t\tconst input = `sfdx:project_opened && resource =~ /.*\\\\/functions\\\\/.*\\\\/[^\\\\/]+(\\\\/[^\\\\/]+\\.(ts|js|java|json|toml))?$/ && resourceFilename != package.json && resourceFilename != package-lock.json && resourceFilename != tsconfig.json`;\n\t\t\tassert.deepStrictEqual(scan(input), ([{ type: \"Str\", lexeme: \"sfdx:project_opened\", offset: 0 }, { type: \"&&\", offset: 20 }, { type: \"Str\", lexeme: \"resource\", offset: 23 }, { type: \"=~\", offset: 32 }, { type: \"RegexStr\", lexeme: \"/.*\\\\/functions\\\\/.*\\\\/[^\\\\/]+(\\\\/[^\\\\/]+.(ts|js|java|json|toml))?$/\", offset: 35 }, { type: \"&&\", offset: 98 }, { type: \"Str\", lexeme: \"resourceFilename\", offset: 101 }, { type: \"!=\", offset: 118 }, { type: \"Str\", lexeme: \"package.json\", offset: 121 }, { type: \"&&\", offset: 134 }, { type: \"Str\", lexeme: \"resourceFilename\", offset: 137 }, { type: \"!=\", offset: 154 }, { type: \"Str\", lexeme: \"package-lock.json\", offset: 157 }, { type: \"&&\", offset: 175 }, { type: \"Str\", lexeme: \"resourceFilename\", offset: 178 }, { type: \"!=\", offset: 195 }, { type: \"Str\", lexeme: \"tsconfig.json\", offset: 198 }, { type: \"EOF\", offset: 211 }]));\n\t\t});\n\n\t\ttest(`view =~ '/(servers)/' && viewItem =~ '/^(Starting|Started|Debugging|Stopping|Stopped)/'`, () => {\n\t\t\tconst input = `view =~ '/(servers)/' && viewItem =~ '/^(Starting|Started|Debugging|Stopping|Stopped)/'`;\n\t\t\tassert.deepStrictEqual(scan(input), ([{ type: \"Str\", lexeme: \"view\", offset: 0 }, { type: \"=~\", offset: 5 }, { type: \"QuotedStr\", lexeme: \"/(servers)/\", offset: 9 }, { type: \"&&\", offset: 22 }, { type: \"Str\", lexeme: \"viewItem\", offset: 25 }, { type: \"=~\", offset: 34 }, { type: \"QuotedStr\", lexeme: \"/^(Starting|Started|Debugging|Stopping|Stopped)/\", offset: 38 }, { type: \"EOF\", offset: 87 }]));\n\t\t});\n\n\t\ttest(`resourcePath =~ /\\.md(\\.yml|\\.txt)*$/gim`, () => {\n\t\t\tconst input = `resourcePath =~ /\\.md(\\.yml|\\.txt)*$/gim`;\n\t\t\tassert.deepStrictEqual(scan(input), ([{ type: \"Str\", offset: 0, lexeme: \"resourcePath\" }, { type: \"=~\", offset: 13 }, { type: \"RegexStr\", offset: 16, lexeme: \"/.md(.yml|.txt)*$/gim\" }, { type: \"EOF\", offset: 37 }]));\n\t\t});\n\t});\n\n\ttest(`foo === bar'`, () => {\n\t\tconst input = `foo === bar'`;\n\t\tassert.deepStrictEqual(scan(input), ([{ type: \"Str\", offset: 0, lexeme: \"foo\" }, { type: \"===\", offset: 4 }, { type: \"Str\", offset: 8, lexeme: \"bar\" }, { type: \"ErrorToken\", offset: 11, lexeme: \"'\" }, { type: \"EOF\", offset: 12 }]));\n\t});\n\n\tsuite('handling lexical errors', () => {\n\n\t\ttest(`foo === '`, () => {\n\t\t\tconst input = `foo === '`;\n\t\t\tassert.deepStrictEqual(scan(input), ([{ type: \"Str\", offset: 0, lexeme: \"foo\" }, { type: \"===\", offset: 4 }, { type: \"ErrorToken\", offset: 8, lexeme: \"'\" }, { type: \"EOF\", offset: 9 }]));\n\t\t});\n\n\t\ttest(`foo && 'bar - unterminated single quote`, () => {\n\t\t\tconst input = `foo && 'bar`;\n\t\t\tassert.deepStrictEqual(scan(input), ([{ type: \"Str\", lexeme: \"foo\", offset: 0 }, { type: \"&&\", offset: 4 }, { type: \"ErrorToken\", offset: 7, lexeme: \"'bar\" }, { type: \"EOF\", offset: 11 }]));\n\t\t});\n\n\t\ttest('vim<c-r> == 1 && vim<2 <= 3', () => {\n\t\t\tconst input = 'vim<c-r> == 1 && vim<2 <= 3';\n\t\t\tassert.deepStrictEqual(scan(input), ([{ type: \"Str\", lexeme: \"vim<c-r>\", offset: 0 }, { type: \"==\", offset: 9 }, { type: \"Str\", lexeme: \"1\", offset: 12 }, { type: \"&&\", offset: 14 }, { type: \"Str\", lexeme: \"vim<2\", offset: 17 }, { type: \"<=\", offset: 23 }, { type: \"Str\", lexeme: \"3\", offset: 26 }, { type: \"EOF\", offset: 27 }]));\n\t\t});\n\n\t\ttest('vim<c-r>==1 && vim<2<=3', () => {\n\t\t\tconst input = 'vim<c-r>==1 && vim<2<=3';\n\t\t\tassert.deepStrictEqual(scan(input), ([{ type: \"Str\", offset: 0, lexeme: \"vim<c-r>\" }, { type: \"==\", offset: 8 }, { type: \"Str\", offset: 10, lexeme: \"1\" }, { type: \"&&\", offset: 12 }, { type: \"Str\", offset: 15, lexeme: \"vim<2<\" }, { type: \"ErrorToken\", offset: 21, lexeme: \"=\" }, { type: \"Str\", offset: 22, lexeme: \"3\" }, { type: \"EOF\", offset: 23 }]));\n\t\t});\n\n\t\ttest(`foo|bar`, () => {\n\t\t\tconst input = `foo|bar`;\n\t\t\tassert.deepStrictEqual(scan(input), ([{ type: \"Str\", offset: 0, lexeme: \"foo\" }, { type: \"ErrorToken\", offset: 3, lexeme: \"|\" }, { type: \"Str\", offset: 4, lexeme: \"bar\" }, { type: \"EOF\", offset: 7 }]));\n\t\t});\n\n\t\ttest(`resource =~ //foo/(barr|door/(Foo-Bar%20Templates|Soo%20Looo)|Web%20Site%Jjj%20Llll)(/.*)*$/`, () => {\n\t\t\tconst input = `resource =~ //foo/(barr|door/(Foo-Bar%20Templates|Soo%20Looo)|Web%20Site%Jjj%20Llll)(/.*)*$/`;\n\t\t\tassert.deepStrictEqual(scan(input), ([{ type: \"Str\", offset: 0, lexeme: \"resource\" }, { type: \"=~\", offset: 9 }, { type: \"RegexStr\", offset: 12, lexeme: \"//\" }, { type: \"Str\", offset: 14, lexeme: \"foo/\" }, { type: \"(\", offset: 18 }, { type: \"Str\", offset: 19, lexeme: \"barr\" }, { type: \"ErrorToken\", offset: 23, lexeme: \"|\" }, { type: \"Str\", offset: 24, lexeme: \"door/\" }, { type: \"(\", offset: 29 }, { type: \"Str\", offset: 30, lexeme: \"Foo-Bar%20Templates\" }, { type: \"ErrorToken\", offset: 49, lexeme: \"|\" }, { type: \"Str\", offset: 50, lexeme: \"Soo%20Looo\" }, { type: \")\", offset: 60 }, { type: \"ErrorToken\", offset: 61, lexeme: \"|\" }, { type: \"Str\", offset: 62, lexeme: \"Web%20Site%Jjj%20Llll\" }, { type: \")\", offset: 83 }, { type: \"(\", offset: 84 }, { type: \"RegexStr\", offset: 85, lexeme: \"/.*)*$/\" }, { type: \"EOF\", offset: 92 }]));\n\t\t});\n\n\t\ttest(`/((/foo/(?!bar)(.*)/)|((/src/).*/)).*$/`, () => {\n\t\t\tconst input = `/((/foo/(?!bar)(.*)/)|((/src/).*/)).*$/`;\n\t\t\tassert.deepStrictEqual(scan(input), ([{ type: \"RegexStr\", offset: 0, lexeme: \"/((/\" }, { type: \"Str\", offset: 4, lexeme: \"foo/\" }, { type: \"(\", offset: 8 }, { type: \"Str\", offset: 9, lexeme: \"?\" }, { type: \"!\", offset: 10 }, { type: \"Str\", offset: 11, lexeme: \"bar\" }, { type: \")\", offset: 14 }, { type: \"(\", offset: 15 }, { type: \"Str\", offset: 16, lexeme: \".*\" }, { type: \")\", offset: 18 }, { type: \"RegexStr\", offset: 19, lexeme: \"/)|((/s\" }, { type: \"Str\", offset: 26, lexeme: \"rc/\" }, { type: \")\", offset: 29 }, { type: \"Str\", offset: 30, lexeme: \".*/\" }, { type: \")\", offset: 33 }, { type: \")\", offset: 34 }, { type: \"Str\", offset: 35, lexeme: \".*$/\" }, { type: \"EOF\", offset: 39 }]));\n\t\t});\n\n\t\ttest(`resourcePath =~ //foo/barr// || resourcePath =~ //view/(jarrr|doooor|bees)/(web|templates)// && resourceExtname in foo.Bar`, () => {\n\t\t\tconst input = `resourcePath =~ //foo/barr// || resourcePath =~ //view/(jarrr|doooor|bees)/(web|templates)// && resourceExtname in foo.Bar`;\n\t\t\tassert.deepStrictEqual(scan(input), ([{ type: \"Str\", offset: 0, lexeme: \"resourcePath\" }, { type: \"=~\", offset: 13 }, { type: \"RegexStr\", offset: 16, lexeme: \"//\" }, { type: \"Str\", offset: 18, lexeme: \"foo/barr//\" }, { type: \"||\", offset: 29 }, { type: \"Str\", offset: 32, lexeme: \"resourcePath\" }, { type: \"=~\", offset: 45 }, { type: \"RegexStr\", offset: 48, lexeme: \"//\" }, { type: \"Str\", offset: 50, lexeme: \"view/\" }, { type: \"(\", offset: 55 }, { type: \"Str\", offset: 56, lexeme: \"jarrr\" }, { type: \"ErrorToken\", offset: 61, lexeme: \"|\" }, { type: \"Str\", offset: 62, lexeme: \"doooor\" }, { type: \"ErrorToken\", offset: 68, lexeme: \"|\" }, { type: \"Str\", offset: 69, lexeme: \"bees\" }, { type: \")\", offset: 73 }, { type: \"RegexStr\", offset: 74, lexeme: \"/(web|templates)/\" }, { type: \"ErrorToken\", offset: 91, lexeme: \"/ && resourceExtname in foo.Bar\" }, { type: \"EOF\", offset: 122 }]));\n\t\t});\n\n\t\ttest(`foo =~ /file:\\// || bar`, () => {\n\t\t\tconst input = JSON.parse('\"foo =~ /file:\\// || bar\"');\n\t\t\tassert.deepStrictEqual(scan(input), ([{ type: \"Str\", offset: 0, lexeme: \"foo\" }, { type: \"=~\", offset: 4 }, { type: \"RegexStr\", offset: 7, lexeme: \"/file:/\" }, { type: \"ErrorToken\", offset: 14, lexeme: \"/ || bar\" }, { type: \"EOF\", offset: 22 }]));\n\t\t});\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
