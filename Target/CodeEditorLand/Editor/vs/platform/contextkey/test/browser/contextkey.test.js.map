{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/contextkey/test/browser/contextkey.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { DeferredPromise } from '../../../../base/common/async.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { mock } from '../../../../base/test/common/mock.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\nimport { IConfigurationService } from '../../../configuration/common/configuration.js';\nimport { TestConfigurationService } from '../../../configuration/test/common/testConfigurationService.js';\nimport { ContextKeyService, setContext } from '../../browser/contextKeyService.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../common/contextkey.js';\nimport { ServiceCollection } from '../../../instantiation/common/serviceCollection.js';\nimport { TestInstantiationService } from '../../../instantiation/test/common/instantiationServiceMock.js';\nimport { ITelemetryService } from '../../../telemetry/common/telemetry.js';\n\nsuite('ContextKeyService', () => {\n\tconst testDisposables = ensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('updateParent', () => {\n\t\tconst root = testDisposables.add(new ContextKeyService(new TestConfigurationService()));\n\t\tconst parent1 = testDisposables.add(root.createScoped(document.createElement('div')));\n\t\tconst parent2 = testDisposables.add(root.createScoped(document.createElement('div')));\n\n\t\tconst child = testDisposables.add(parent1.createScoped(document.createElement('div')));\n\t\tparent1.createKey('testA', 1);\n\t\tparent1.createKey('testB', 2);\n\t\tparent1.createKey('testD', 0);\n\n\t\tparent2.createKey('testA', 3);\n\t\tparent2.createKey('testC', 4);\n\t\tparent2.createKey('testD', 0);\n\n\t\tlet complete: () => void;\n\t\tlet reject: (err: Error) => void;\n\t\tconst p = new Promise<void>((_complete, _reject) => {\n\t\t\tcomplete = _complete;\n\t\t\treject = _reject;\n\t\t});\n\t\ttestDisposables.add(child.onDidChangeContext(e => {\n\t\t\ttry {\n\t\t\t\tassert.ok(e.affectsSome(new Set(['testA'])), 'testA changed');\n\t\t\t\tassert.ok(e.affectsSome(new Set(['testB'])), 'testB changed');\n\t\t\t\tassert.ok(e.affectsSome(new Set(['testC'])), 'testC changed');\n\t\t\t\tassert.ok(!e.affectsSome(new Set(['testD'])), 'testD did not change');\n\n\t\t\t\tassert.strictEqual(child.getContextKeyValue('testA'), 3);\n\t\t\t\tassert.strictEqual(child.getContextKeyValue('testB'), undefined);\n\t\t\t\tassert.strictEqual(child.getContextKeyValue('testC'), 4);\n\t\t\t\tassert.strictEqual(child.getContextKeyValue('testD'), 0);\n\t\t\t} catch (err) {\n\t\t\t\treject(err);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcomplete();\n\t\t}));\n\n\t\tchild.updateParent(parent2);\n\n\t\treturn p;\n\t});\n\n\ttest('updateParent to same service', () => {\n\t\tconst root = testDisposables.add(new ContextKeyService(new TestConfigurationService()));\n\t\tconst parent1 = testDisposables.add(root.createScoped(document.createElement('div')));\n\n\t\tconst child = testDisposables.add(parent1.createScoped(document.createElement('div')));\n\t\tparent1.createKey('testA', 1);\n\t\tparent1.createKey('testB', 2);\n\t\tparent1.createKey('testD', 0);\n\n\t\tlet eventFired = false;\n\t\ttestDisposables.add(child.onDidChangeContext(e => {\n\t\t\teventFired = true;\n\t\t}));\n\n\t\tchild.updateParent(parent1);\n\n\t\tassert.strictEqual(eventFired, false);\n\t});\n\n\ttest('issue #147732: URIs as context values', () => {\n\t\tconst configurationService: IConfigurationService = new TestConfigurationService();\n\t\tconst contextKeyService: IContextKeyService = testDisposables.add(new ContextKeyService(configurationService));\n\t\tconst instantiationService = testDisposables.add(new TestInstantiationService(new ServiceCollection(\n\t\t\t[IConfigurationService, configurationService],\n\t\t\t[IContextKeyService, contextKeyService],\n\t\t\t[ITelemetryService, new class extends mock<ITelemetryService>() {\n\t\t\t\toverride async publicLog2() {\n\t\t\t\t\t//\n\t\t\t\t}\n\t\t\t}]\n\t\t)));\n\n\t\tconst uri = URI.parse('test://abc');\n\t\tcontextKeyService.createKey<string>('notebookCellResource', undefined).set(uri.toString());\n\t\tinstantiationService.invokeFunction(setContext, 'jupyter.runByLineCells', JSON.parse(JSON.stringify([uri])));\n\n\t\tconst expr = ContextKeyExpr.in('notebookCellResource', 'jupyter.runByLineCells');\n\t\tassert.deepStrictEqual(contextKeyService.contextMatchesRules(expr), true);\n\t});\n\n\ttest('suppress update event from parent when one key is overridden by child', () => {\n\t\tconst root = testDisposables.add(new ContextKeyService(new TestConfigurationService()));\n\t\tconst child = testDisposables.add(root.createScoped(document.createElement('div')));\n\n\t\troot.createKey('testA', 1);\n\t\tchild.createKey('testA', 4);\n\n\t\tlet fired = false;\n\t\tconst event = testDisposables.add(child.onDidChangeContext(e => fired = true));\n\t\troot.setContext('testA', 10);\n\t\tassert.strictEqual(fired, false, 'Should not fire event when overridden key is updated in parent');\n\t\tevent.dispose();\n\t});\n\n\ttest('suppress update event from parent when all keys are overridden by child', () => {\n\t\tconst root = testDisposables.add(new ContextKeyService(new TestConfigurationService()));\n\t\tconst child = testDisposables.add(root.createScoped(document.createElement('div')));\n\n\t\troot.createKey('testA', 1);\n\t\troot.createKey('testB', 2);\n\t\troot.createKey('testC', 3);\n\n\t\tchild.createKey('testA', 4);\n\t\tchild.createKey('testB', 5);\n\t\tchild.createKey('testD', 6);\n\n\t\tlet fired = false;\n\t\tconst event = testDisposables.add(child.onDidChangeContext(e => fired = true));\n\t\troot.bufferChangeEvents(() => {\n\t\t\troot.setContext('testA', 10);\n\t\t\troot.setContext('testB', 20);\n\t\t\troot.setContext('testD', 30);\n\t\t});\n\n\t\tassert.strictEqual(fired, false, 'Should not fire event when overridden key is updated in parent');\n\t\tevent.dispose();\n\t});\n\n\ttest('pass through update event from parent when one key is not overridden by child', () => {\n\t\tconst root = testDisposables.add(new ContextKeyService(new TestConfigurationService()));\n\t\tconst child = testDisposables.add(root.createScoped(document.createElement('div')));\n\n\t\troot.createKey('testA', 1);\n\t\troot.createKey('testB', 2);\n\t\troot.createKey('testC', 3);\n\n\t\tchild.createKey('testA', 4);\n\t\tchild.createKey('testB', 5);\n\t\tchild.createKey('testD', 6);\n\n\t\tconst def = new DeferredPromise();\n\t\ttestDisposables.add(child.onDidChangeContext(e => {\n\t\t\ttry {\n\t\t\t\tassert.ok(e.affectsSome(new Set(['testA'])), 'testA changed');\n\t\t\t\tassert.ok(e.affectsSome(new Set(['testB'])), 'testB changed');\n\t\t\t\tassert.ok(e.affectsSome(new Set(['testC'])), 'testC changed');\n\t\t\t} catch (err) {\n\t\t\t\tdef.error(err);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdef.complete(undefined);\n\t\t}));\n\n\t\troot.bufferChangeEvents(() => {\n\t\t\troot.setContext('testA', 10);\n\t\t\troot.setContext('testB', 20);\n\t\t\troot.setContext('testC', 30);\n\t\t});\n\n\t\treturn def.p;\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
