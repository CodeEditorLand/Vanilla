{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/contextkey/browser/contextKeyService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\ttype Emitter,\n\ttype Event,\n\tPauseableEmitter,\n} from \"../../../base/common/event.js\";\nimport { Iterable } from \"../../../base/common/iterator.js\";\nimport {\n\tDisposable,\n\ttype IDisposable,\n\tMutableDisposable,\n} from \"../../../base/common/lifecycle.js\";\nimport type { MarshalledObject } from \"../../../base/common/marshalling.js\";\nimport { MarshalledId } from \"../../../base/common/marshallingIds.js\";\nimport { cloneAndChange, distinct } from \"../../../base/common/objects.js\";\nimport { TernarySearchTree } from \"../../../base/common/ternarySearchTree.js\";\nimport { URI } from \"../../../base/common/uri.js\";\nimport { localize } from \"../../../nls.js\";\nimport { CommandsRegistry } from \"../../commands/common/commands.js\";\nimport {\n\tConfigurationTarget,\n\tIConfigurationService,\n} from \"../../configuration/common/configuration.js\";\nimport type { ServicesAccessor } from \"../../instantiation/common/instantiation.js\";\nimport {\n\ttype ContextKeyExpression,\n\ttype ContextKeyInfo,\n\ttype ContextKeyValue,\n\ttype IContext,\n\ttype IContextKey,\n\ttype IContextKeyChangeEvent,\n\tIContextKeyService,\n\ttype IContextKeyServiceTarget,\n\ttype IReadableSet,\n\ttype IScopedContextKeyService,\n\tRawContextKey,\n} from \"../common/contextkey.js\";\n\nconst KEYBINDING_CONTEXT_ATTR = \"data-keybinding-context\";\n\nexport class Context implements IContext {\n\tprotected _parent: Context | null;\n\tprotected _value: Record<string, any>;\n\tprotected _id: number;\n\n\tconstructor(id: number, parent: Context | null) {\n\t\tthis._id = id;\n\t\tthis._parent = parent;\n\t\tthis._value = Object.create(null);\n\t\tthis._value[\"_contextId\"] = id;\n\t}\n\n\tpublic get value(): Record<string, any> {\n\t\treturn { ...this._value };\n\t}\n\n\tpublic setValue(key: string, value: any): boolean {\n\t\t// console.log('SET ' + key + ' = ' + value + ' ON ' + this._id);\n\t\tif (this._value[key] !== value) {\n\t\t\tthis._value[key] = value;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic removeValue(key: string): boolean {\n\t\t// console.log('REMOVE ' + key + ' FROM ' + this._id);\n\t\tif (key in this._value) {\n\t\t\tdelete this._value[key];\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic getValue<T>(key: string): T | undefined {\n\t\tconst ret = this._value[key];\n\t\tif (typeof ret === \"undefined\" && this._parent) {\n\t\t\treturn this._parent.getValue<T>(key);\n\t\t}\n\t\treturn ret;\n\t}\n\n\tpublic updateParent(parent: Context): void {\n\t\tthis._parent = parent;\n\t}\n\n\tpublic collectAllValues(): Record<string, any> {\n\t\tlet result = this._parent\n\t\t\t? this._parent.collectAllValues()\n\t\t\t: Object.create(null);\n\t\tresult = { ...result, ...this._value };\n\t\tdelete result[\"_contextId\"];\n\t\treturn result;\n\t}\n}\n\nclass NullContext extends Context {\n\tstatic readonly INSTANCE = new NullContext();\n\n\tconstructor() {\n\t\tsuper(-1, null);\n\t}\n\n\tpublic override setValue(key: string, value: any): boolean {\n\t\treturn false;\n\t}\n\n\tpublic override removeValue(key: string): boolean {\n\t\treturn false;\n\t}\n\n\tpublic override getValue<T>(key: string): T | undefined {\n\t\treturn undefined;\n\t}\n\n\toverride collectAllValues(): { [key: string]: any } {\n\t\treturn Object.create(null);\n\t}\n}\n\nclass ConfigAwareContextValuesContainer extends Context {\n\tprivate static readonly _keyPrefix = \"config.\";\n\n\tprivate readonly _values = TernarySearchTree.forConfigKeys<any>();\n\tprivate readonly _listener: IDisposable;\n\n\tconstructor(\n\t\tid: number,\n\t\tprivate readonly _configurationService: IConfigurationService,\n\t\temitter: Emitter<IContextKeyChangeEvent>,\n\t) {\n\t\tsuper(id, null);\n\n\t\tthis._listener = this._configurationService.onDidChangeConfiguration(\n\t\t\t(event) => {\n\t\t\t\tif (event.source === ConfigurationTarget.DEFAULT) {\n\t\t\t\t\t// new setting, reset everything\n\t\t\t\t\tconst allKeys = Array.from(this._values, ([k]) => k);\n\t\t\t\t\tthis._values.clear();\n\t\t\t\t\temitter.fire(new ArrayContextKeyChangeEvent(allKeys));\n\t\t\t\t} else {\n\t\t\t\t\tconst changedKeys: string[] = [];\n\t\t\t\t\tfor (const configKey of event.affectedKeys) {\n\t\t\t\t\t\tconst contextKey = `config.${configKey}`;\n\n\t\t\t\t\t\tconst cachedItems =\n\t\t\t\t\t\t\tthis._values.findSuperstr(contextKey);\n\t\t\t\t\t\tif (cachedItems !== undefined) {\n\t\t\t\t\t\t\tchangedKeys.push(\n\t\t\t\t\t\t\t\t...Iterable.map(cachedItems, ([key]) => key),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tthis._values.deleteSuperstr(contextKey);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this._values.has(contextKey)) {\n\t\t\t\t\t\t\tchangedKeys.push(contextKey);\n\t\t\t\t\t\t\tthis._values.delete(contextKey);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\temitter.fire(new ArrayContextKeyChangeEvent(changedKeys));\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\t}\n\n\tdispose(): void {\n\t\tthis._listener.dispose();\n\t}\n\n\toverride getValue(key: string): any {\n\t\tif (key.indexOf(ConfigAwareContextValuesContainer._keyPrefix) !== 0) {\n\t\t\treturn super.getValue(key);\n\t\t}\n\n\t\tif (this._values.has(key)) {\n\t\t\treturn this._values.get(key);\n\t\t}\n\n\t\tconst configKey = key.substr(\n\t\t\tConfigAwareContextValuesContainer._keyPrefix.length,\n\t\t);\n\t\tconst configValue = this._configurationService.getValue(configKey);\n\t\tlet value: any;\n\t\tswitch (typeof configValue) {\n\t\t\tcase \"number\":\n\t\t\tcase \"boolean\":\n\t\t\tcase \"string\":\n\t\t\t\tvalue = configValue;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tif (Array.isArray(configValue)) {\n\t\t\t\t\tvalue = JSON.stringify(configValue);\n\t\t\t\t} else {\n\t\t\t\t\tvalue = configValue;\n\t\t\t\t}\n\t\t}\n\n\t\tthis._values.set(key, value);\n\t\treturn value;\n\t}\n\n\toverride setValue(key: string, value: any): boolean {\n\t\treturn super.setValue(key, value);\n\t}\n\n\toverride removeValue(key: string): boolean {\n\t\treturn super.removeValue(key);\n\t}\n\n\toverride collectAllValues(): { [key: string]: any } {\n\t\tconst result: { [key: string]: any } = Object.create(null);\n\t\tthis._values.forEach((value, index) => (result[index] = value));\n\t\treturn { ...result, ...super.collectAllValues() };\n\t}\n}\n\nclass ContextKey<T extends ContextKeyValue> implements IContextKey<T> {\n\tprivate _service: AbstractContextKeyService;\n\tprivate _key: string;\n\tprivate _defaultValue: T | undefined;\n\n\tconstructor(\n\t\tservice: AbstractContextKeyService,\n\t\tkey: string,\n\t\tdefaultValue: T | undefined,\n\t) {\n\t\tthis._service = service;\n\t\tthis._key = key;\n\t\tthis._defaultValue = defaultValue;\n\t\tthis.reset();\n\t}\n\n\tpublic set(value: T): void {\n\t\tthis._service.setContext(this._key, value);\n\t}\n\n\tpublic reset(): void {\n\t\tif (typeof this._defaultValue === \"undefined\") {\n\t\t\tthis._service.removeContext(this._key);\n\t\t} else {\n\t\t\tthis._service.setContext(this._key, this._defaultValue);\n\t\t}\n\t}\n\n\tpublic get(): T | undefined {\n\t\treturn this._service.getContextKeyValue<T>(this._key);\n\t}\n}\n\nclass SimpleContextKeyChangeEvent implements IContextKeyChangeEvent {\n\tconstructor(readonly key: string) {}\n\taffectsSome(keys: IReadableSet<string>): boolean {\n\t\treturn keys.has(this.key);\n\t}\n\tallKeysContainedIn(keys: IReadableSet<string>): boolean {\n\t\treturn this.affectsSome(keys);\n\t}\n}\n\nclass ArrayContextKeyChangeEvent implements IContextKeyChangeEvent {\n\tconstructor(readonly keys: string[]) {}\n\taffectsSome(keys: IReadableSet<string>): boolean {\n\t\tfor (const key of this.keys) {\n\t\t\tif (keys.has(key)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tallKeysContainedIn(keys: IReadableSet<string>): boolean {\n\t\treturn this.keys.every((key) => keys.has(key));\n\t}\n}\n\nclass CompositeContextKeyChangeEvent implements IContextKeyChangeEvent {\n\tconstructor(readonly events: IContextKeyChangeEvent[]) {}\n\taffectsSome(keys: IReadableSet<string>): boolean {\n\t\tfor (const e of this.events) {\n\t\t\tif (e.affectsSome(keys)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tallKeysContainedIn(keys: IReadableSet<string>): boolean {\n\t\treturn this.events.every((evt) => evt.allKeysContainedIn(keys));\n\t}\n}\n\nfunction allEventKeysInContext(\n\tevent: IContextKeyChangeEvent,\n\tcontext: Record<string, any>,\n): boolean {\n\treturn event.allKeysContainedIn(new Set(Object.keys(context)));\n}\n\nexport abstract class AbstractContextKeyService\n\textends Disposable\n\timplements IContextKeyService\n{\n\tdeclare _serviceBrand: undefined;\n\n\tprotected _isDisposed: boolean;\n\tprotected _myContextId: number;\n\n\tprotected _onDidChangeContext = this._register(\n\t\tnew PauseableEmitter<IContextKeyChangeEvent>({\n\t\t\tmerge: (input) => new CompositeContextKeyChangeEvent(input),\n\t\t}),\n\t);\n\treadonly onDidChangeContext = this._onDidChangeContext.event;\n\n\tconstructor(myContextId: number) {\n\t\tsuper();\n\t\tthis._isDisposed = false;\n\t\tthis._myContextId = myContextId;\n\t}\n\n\tpublic get contextId(): number {\n\t\treturn this._myContextId;\n\t}\n\n\tpublic createKey<T extends ContextKeyValue>(\n\t\tkey: string,\n\t\tdefaultValue: T | undefined,\n\t): IContextKey<T> {\n\t\tif (this._isDisposed) {\n\t\t\tthrow new Error(`AbstractContextKeyService has been disposed`);\n\t\t}\n\t\treturn new ContextKey(this, key, defaultValue);\n\t}\n\n\tbufferChangeEvents(callback: Function): void {\n\t\tthis._onDidChangeContext.pause();\n\t\ttry {\n\t\t\tcallback();\n\t\t} finally {\n\t\t\tthis._onDidChangeContext.resume();\n\t\t}\n\t}\n\n\tpublic createScoped(\n\t\tdomNode: IContextKeyServiceTarget,\n\t): IScopedContextKeyService {\n\t\tif (this._isDisposed) {\n\t\t\tthrow new Error(`AbstractContextKeyService has been disposed`);\n\t\t}\n\t\treturn new ScopedContextKeyService(this, domNode);\n\t}\n\n\tcreateOverlay(\n\t\toverlay: Iterable<[string, any]> = Iterable.empty(),\n\t): IContextKeyService {\n\t\tif (this._isDisposed) {\n\t\t\tthrow new Error(`AbstractContextKeyService has been disposed`);\n\t\t}\n\t\treturn new OverlayContextKeyService(this, overlay);\n\t}\n\n\tpublic contextMatchesRules(\n\t\trules: ContextKeyExpression | undefined,\n\t): boolean {\n\t\tif (this._isDisposed) {\n\t\t\tthrow new Error(`AbstractContextKeyService has been disposed`);\n\t\t}\n\t\tconst context = this.getContextValuesContainer(this._myContextId);\n\t\tconst result = rules ? rules.evaluate(context) : true;\n\t\t// console.group(rules.serialize() + ' -> ' + result);\n\t\t// rules.keys().forEach(key => { console.log(key, ctx[key]); });\n\t\t// console.groupEnd();\n\t\treturn result;\n\t}\n\n\tpublic getContextKeyValue<T>(key: string): T | undefined {\n\t\tif (this._isDisposed) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this.getContextValuesContainer(this._myContextId).getValue<T>(\n\t\t\tkey,\n\t\t);\n\t}\n\n\tpublic setContext(key: string, value: any): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\t\tconst myContext = this.getContextValuesContainer(this._myContextId);\n\t\tif (!myContext) {\n\t\t\treturn;\n\t\t}\n\t\tif (myContext.setValue(key, value)) {\n\t\t\tthis._onDidChangeContext.fire(new SimpleContextKeyChangeEvent(key));\n\t\t}\n\t}\n\n\tpublic removeContext(key: string): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\t\tif (\n\t\t\tthis.getContextValuesContainer(this._myContextId).removeValue(key)\n\t\t) {\n\t\t\tthis._onDidChangeContext.fire(new SimpleContextKeyChangeEvent(key));\n\t\t}\n\t}\n\n\tpublic getContext(target: IContextKeyServiceTarget | null): IContext {\n\t\tif (this._isDisposed) {\n\t\t\treturn NullContext.INSTANCE;\n\t\t}\n\t\treturn this.getContextValuesContainer(findContextAttr(target));\n\t}\n\n\tpublic abstract getContextValuesContainer(contextId: number): Context;\n\tpublic abstract createChildContext(parentContextId?: number): number;\n\tpublic abstract disposeContext(contextId: number): void;\n\tpublic abstract updateParent(\n\t\tparentContextKeyService?: IContextKeyService,\n\t): void;\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t\tthis._isDisposed = true;\n\t}\n}\n\nexport class ContextKeyService\n\textends AbstractContextKeyService\n\timplements IContextKeyService\n{\n\tprivate _lastContextId: number;\n\tprivate readonly _contexts = new Map<number, Context>();\n\n\tconstructor(\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t) {\n\t\tsuper(0);\n\t\tthis._lastContextId = 0;\n\n\t\tconst myContext = this._register(\n\t\t\tnew ConfigAwareContextValuesContainer(\n\t\t\t\tthis._myContextId,\n\t\t\t\tconfigurationService,\n\t\t\t\tthis._onDidChangeContext,\n\t\t\t),\n\t\t);\n\t\tthis._contexts.set(this._myContextId, myContext);\n\n\t\t// Uncomment this to see the contexts continuously logged\n\t\t// let lastLoggedValue: string | null = null;\n\t\t// setInterval(() => {\n\t\t// \tlet values = Object.keys(this._contexts).map((key) => this._contexts[key]);\n\t\t// \tlet logValue = values.map(v => JSON.stringify(v._value, null, '\\t')).join('\\n');\n\t\t// \tif (lastLoggedValue !== logValue) {\n\t\t// \t\tlastLoggedValue = logValue;\n\t\t// \t\tconsole.log(lastLoggedValue);\n\t\t// \t}\n\t\t// }, 2000);\n\t}\n\n\tpublic getContextValuesContainer(contextId: number): Context {\n\t\tif (this._isDisposed) {\n\t\t\treturn NullContext.INSTANCE;\n\t\t}\n\t\treturn this._contexts.get(contextId) || NullContext.INSTANCE;\n\t}\n\n\tpublic createChildContext(\n\t\tparentContextId: number = this._myContextId,\n\t): number {\n\t\tif (this._isDisposed) {\n\t\t\tthrow new Error(`ContextKeyService has been disposed`);\n\t\t}\n\t\tconst id = ++this._lastContextId;\n\t\tthis._contexts.set(\n\t\t\tid,\n\t\t\tnew Context(id, this.getContextValuesContainer(parentContextId)),\n\t\t);\n\t\treturn id;\n\t}\n\n\tpublic disposeContext(contextId: number): void {\n\t\tif (!this._isDisposed) {\n\t\t\tthis._contexts.delete(contextId);\n\t\t}\n\t}\n\n\tpublic updateParent(_parentContextKeyService: IContextKeyService): void {\n\t\tthrow new Error(\"Cannot update parent of root ContextKeyService\");\n\t}\n}\n\nclass ScopedContextKeyService extends AbstractContextKeyService {\n\tprivate _parent: AbstractContextKeyService;\n\tprivate _domNode: IContextKeyServiceTarget;\n\n\tprivate readonly _parentChangeListener = this._register(\n\t\tnew MutableDisposable(),\n\t);\n\n\tconstructor(\n\t\tparent: AbstractContextKeyService,\n\t\tdomNode: IContextKeyServiceTarget,\n\t) {\n\t\tsuper(parent.createChildContext());\n\t\tthis._parent = parent;\n\t\tthis._updateParentChangeListener();\n\n\t\tthis._domNode = domNode;\n\t\tif (this._domNode.hasAttribute(KEYBINDING_CONTEXT_ATTR)) {\n\t\t\tlet extraInfo = \"\";\n\t\t\tif ((this._domNode as HTMLElement).classList) {\n\t\t\t\textraInfo = Array.from(\n\t\t\t\t\t(this._domNode as HTMLElement).classList.values(),\n\t\t\t\t).join(\", \");\n\t\t\t}\n\n\t\t\tconsole.error(\n\t\t\t\t`Element already has context attribute${extraInfo ? \": \" + extraInfo : \"\"}`,\n\t\t\t);\n\t\t}\n\t\tthis._domNode.setAttribute(\n\t\t\tKEYBINDING_CONTEXT_ATTR,\n\t\t\tString(this._myContextId),\n\t\t);\n\t}\n\n\tprivate _updateParentChangeListener(): void {\n\t\t// Forward parent events to this listener. Parent will change.\n\t\tthis._parentChangeListener.value = this._parent.onDidChangeContext(\n\t\t\t(e) => {\n\t\t\t\tconst thisContainer = this._parent.getContextValuesContainer(\n\t\t\t\t\tthis._myContextId,\n\t\t\t\t);\n\t\t\t\tconst thisContextValues = thisContainer.value;\n\n\t\t\t\tif (!allEventKeysInContext(e, thisContextValues)) {\n\t\t\t\t\tthis._onDidChangeContext.fire(e);\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\t}\n\n\tpublic override dispose(): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._parent.disposeContext(this._myContextId);\n\t\tthis._domNode.removeAttribute(KEYBINDING_CONTEXT_ATTR);\n\t\tsuper.dispose();\n\t}\n\n\tpublic getContextValuesContainer(contextId: number): Context {\n\t\tif (this._isDisposed) {\n\t\t\treturn NullContext.INSTANCE;\n\t\t}\n\t\treturn this._parent.getContextValuesContainer(contextId);\n\t}\n\n\tpublic createChildContext(\n\t\tparentContextId: number = this._myContextId,\n\t): number {\n\t\tif (this._isDisposed) {\n\t\t\tthrow new Error(`ScopedContextKeyService has been disposed`);\n\t\t}\n\t\treturn this._parent.createChildContext(parentContextId);\n\t}\n\n\tpublic disposeContext(contextId: number): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\t\tthis._parent.disposeContext(contextId);\n\t}\n\n\tpublic updateParent(\n\t\tparentContextKeyService: AbstractContextKeyService,\n\t): void {\n\t\tif (this._parent === parentContextKeyService) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst thisContainer = this._parent.getContextValuesContainer(\n\t\t\tthis._myContextId,\n\t\t);\n\t\tconst oldAllValues = thisContainer.collectAllValues();\n\t\tthis._parent = parentContextKeyService;\n\t\tthis._updateParentChangeListener();\n\t\tconst newParentContainer = this._parent.getContextValuesContainer(\n\t\t\tthis._parent.contextId,\n\t\t);\n\t\tthisContainer.updateParent(newParentContainer);\n\n\t\tconst newAllValues = thisContainer.collectAllValues();\n\t\tconst allValuesDiff = {\n\t\t\t...distinct(oldAllValues, newAllValues),\n\t\t\t...distinct(newAllValues, oldAllValues),\n\t\t};\n\t\tconst changedKeys = Object.keys(allValuesDiff);\n\n\t\tthis._onDidChangeContext.fire(\n\t\t\tnew ArrayContextKeyChangeEvent(changedKeys),\n\t\t);\n\t}\n}\n\nclass OverlayContext implements IContext {\n\tconstructor(\n\t\tprivate parent: IContext,\n\t\tprivate overlay: ReadonlyMap<string, any>,\n\t) {}\n\n\tgetValue<T>(key: string): T | undefined {\n\t\treturn this.overlay.has(key)\n\t\t\t? this.overlay.get(key)\n\t\t\t: this.parent.getValue(key);\n\t}\n}\n\nclass OverlayContextKeyService implements IContextKeyService {\n\tdeclare _serviceBrand: undefined;\n\tprivate overlay: Map<string, any>;\n\n\tget contextId(): number {\n\t\treturn this.parent.contextId;\n\t}\n\n\tget onDidChangeContext(): Event<IContextKeyChangeEvent> {\n\t\treturn this.parent.onDidChangeContext;\n\t}\n\n\tconstructor(\n\t\tprivate parent: AbstractContextKeyService | OverlayContextKeyService,\n\t\toverlay: Iterable<[string, any]>,\n\t) {\n\t\tthis.overlay = new Map(overlay);\n\t}\n\n\tbufferChangeEvents(callback: Function): void {\n\t\tthis.parent.bufferChangeEvents(callback);\n\t}\n\n\tcreateKey<T extends ContextKeyValue>(): IContextKey<T> {\n\t\tthrow new Error(\"Not supported.\");\n\t}\n\n\tgetContext(target: IContextKeyServiceTarget | null): IContext {\n\t\treturn new OverlayContext(this.parent.getContext(target), this.overlay);\n\t}\n\n\tgetContextValuesContainer(contextId: number): IContext {\n\t\tconst parentContext = this.parent.getContextValuesContainer(contextId);\n\t\treturn new OverlayContext(parentContext, this.overlay);\n\t}\n\n\tcontextMatchesRules(rules: ContextKeyExpression | undefined): boolean {\n\t\tconst context = this.getContextValuesContainer(this.contextId);\n\t\tconst result = rules ? rules.evaluate(context) : true;\n\t\treturn result;\n\t}\n\n\tgetContextKeyValue<T>(key: string): T | undefined {\n\t\treturn this.overlay.has(key)\n\t\t\t? this.overlay.get(key)\n\t\t\t: this.parent.getContextKeyValue(key);\n\t}\n\n\tcreateScoped(): IScopedContextKeyService {\n\t\tthrow new Error(\"Not supported.\");\n\t}\n\n\tcreateOverlay(\n\t\toverlay: Iterable<[string, any]> = Iterable.empty(),\n\t): IContextKeyService {\n\t\treturn new OverlayContextKeyService(this, overlay);\n\t}\n\n\tupdateParent(): void {\n\t\tthrow new Error(\"Not supported.\");\n\t}\n}\n\nfunction findContextAttr(domNode: IContextKeyServiceTarget | null): number {\n\twhile (domNode) {\n\t\tif (domNode.hasAttribute(KEYBINDING_CONTEXT_ATTR)) {\n\t\t\tconst attr = domNode.getAttribute(KEYBINDING_CONTEXT_ATTR);\n\t\t\tif (attr) {\n\t\t\t\treturn Number.parseInt(attr, 10);\n\t\t\t}\n\t\t\treturn Number.NaN;\n\t\t}\n\t\tdomNode = domNode.parentElement;\n\t}\n\treturn 0;\n}\n\nexport function setContext(\n\taccessor: ServicesAccessor,\n\tcontextKey: any,\n\tcontextValue: any,\n) {\n\tconst contextKeyService = accessor.get(IContextKeyService);\n\tcontextKeyService.createKey(\n\t\tString(contextKey),\n\t\tstringifyURIs(contextValue),\n\t);\n}\n\nfunction stringifyURIs(contextValue: any): any {\n\treturn cloneAndChange(contextValue, (obj) => {\n\t\tif (\n\t\t\ttypeof obj === \"object\" &&\n\t\t\t(<MarshalledObject>obj).$mid === MarshalledId.Uri\n\t\t) {\n\t\t\treturn URI.revive(obj).toString();\n\t\t}\n\t\tif (obj instanceof URI) {\n\t\t\treturn obj.toString();\n\t\t}\n\t\treturn undefined;\n\t});\n}\n\nCommandsRegistry.registerCommand(\"_setContext\", setContext);\n\nCommandsRegistry.registerCommand({\n\tid: \"getContextKeyInfo\",\n\thandler() {\n\t\treturn [...RawContextKey.all()].sort((a, b) =>\n\t\t\ta.key.localeCompare(b.key),\n\t\t);\n\t},\n\tmetadata: {\n\t\tdescription: localize(\n\t\t\t\"getContextKeyInfo\",\n\t\t\t\"A command that returns information about context keys\",\n\t\t),\n\t\targs: [],\n\t},\n});\n\nCommandsRegistry.registerCommand(\"_generateContextKeyInfo\", () => {\n\tconst result: ContextKeyInfo[] = [];\n\tconst seen = new Set<string>();\n\tfor (const info of RawContextKey.all()) {\n\t\tif (!seen.has(info.key)) {\n\t\t\tseen.add(info.key);\n\t\t\tresult.push(info);\n\t\t}\n\t}\n\tresult.sort((a, b) => a.key.localeCompare(b.key));\n\tconsole.log(JSON.stringify(result, undefined, 2));\n});\n"],
  "mappings": "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",
  "names": []
}
