{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/files/node/watcher/watcherStats.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\ttype IUniversalWatchRequest,\n\trequestFilterToString,\n} from \"../../common/watcher.js\";\nimport type {\n\tINodeJSWatcherInstance,\n\tNodeJSWatcher,\n} from \"./nodejs/nodejsWatcher.js\";\nimport type {\n\tParcelWatcher,\n\tParcelWatcherInstance,\n} from \"./parcel/parcelWatcher.js\";\n\nconst useParcelWatcher2 = process.env.VSCODE_USE_WATCHER2 === \"true\";\n\nexport function computeStats(\n\trequests: IUniversalWatchRequest[],\n\trecursiveWatcher: ParcelWatcher,\n\tnonRecursiveWatcher: NodeJSWatcher,\n): string {\n\tconst lines: string[] = [];\n\n\tconst allRecursiveRequests = sortByPathPrefix(\n\t\trequests.filter((request) => request.recursive),\n\t);\n\tconst nonSuspendedRecursiveRequests = allRecursiveRequests.filter(\n\t\t(request) => recursiveWatcher.isSuspended(request) === false,\n\t);\n\tconst suspendedPollingRecursiveRequests = allRecursiveRequests.filter(\n\t\t(request) => recursiveWatcher.isSuspended(request) === \"polling\",\n\t);\n\tconst suspendedNonPollingRecursiveRequests = allRecursiveRequests.filter(\n\t\t(request) => recursiveWatcher.isSuspended(request) === true,\n\t);\n\n\tconst recursiveRequestsStatus = computeRequestStatus(\n\t\tallRecursiveRequests,\n\t\trecursiveWatcher,\n\t);\n\tconst recursiveWatcherStatus =\n\t\tcomputeRecursiveWatchStatus(recursiveWatcher);\n\n\tconst allNonRecursiveRequests = sortByPathPrefix(\n\t\trequests.filter((request) => !request.recursive),\n\t);\n\tconst nonSuspendedNonRecursiveRequests = allNonRecursiveRequests.filter(\n\t\t(request) => nonRecursiveWatcher.isSuspended(request) === false,\n\t);\n\tconst suspendedPollingNonRecursiveRequests = allNonRecursiveRequests.filter(\n\t\t(request) => nonRecursiveWatcher.isSuspended(request) === \"polling\",\n\t);\n\tconst suspendedNonPollingNonRecursiveRequests =\n\t\tallNonRecursiveRequests.filter(\n\t\t\t(request) => nonRecursiveWatcher.isSuspended(request) === true,\n\t\t);\n\n\tconst nonRecursiveRequestsStatus = computeRequestStatus(\n\t\tallNonRecursiveRequests,\n\t\tnonRecursiveWatcher,\n\t);\n\tconst nonRecursiveWatcherStatus =\n\t\tcomputeNonRecursiveWatchStatus(nonRecursiveWatcher);\n\n\tlines.push(\"[Summary]\");\n\tlines.push(\n\t\t`- Recursive Requests:     total: ${allRecursiveRequests.length}, suspended: ${recursiveRequestsStatus.suspended}, polling: ${recursiveRequestsStatus.polling}`,\n\t);\n\tlines.push(\n\t\t`- Non-Recursive Requests: total: ${allNonRecursiveRequests.length}, suspended: ${nonRecursiveRequestsStatus.suspended}, polling: ${nonRecursiveRequestsStatus.polling}`,\n\t);\n\tlines.push(\n\t\t`- Recursive Watchers:     total: ${recursiveWatcher.watchers.size}, active: ${recursiveWatcherStatus.active}, failed: ${recursiveWatcherStatus.failed}, stopped: ${recursiveWatcherStatus.stopped}`,\n\t);\n\tlines.push(\n\t\t`- Non-Recursive Watchers: total: ${nonRecursiveWatcher.watchers.size}, active: ${nonRecursiveWatcherStatus.active}, failed: ${nonRecursiveWatcherStatus.failed}, reusing: ${nonRecursiveWatcherStatus.reusing}`,\n\t);\n\tlines.push(\n\t\t`- I/O Handles Impact:     total: ${recursiveRequestsStatus.polling + nonRecursiveRequestsStatus.polling + recursiveWatcherStatus.active + nonRecursiveWatcherStatus.active}`,\n\t);\n\n\tlines.push(\n\t\t`\\n[Recursive Requests (${allRecursiveRequests.length}, suspended: ${recursiveRequestsStatus.suspended}, polling: ${recursiveRequestsStatus.polling})]:`,\n\t);\n\tconst recursiveRequestLines: string[] = [];\n\tfor (const request of [\n\t\tnonSuspendedRecursiveRequests,\n\t\tsuspendedPollingRecursiveRequests,\n\t\tsuspendedNonPollingRecursiveRequests,\n\t].flat()) {\n\t\tfillRequestStats(recursiveRequestLines, request, recursiveWatcher);\n\t}\n\tlines.push(...alignTextColumns(recursiveRequestLines));\n\n\tconst recursiveWatcheLines: string[] = [];\n\tfillRecursiveWatcherStats(recursiveWatcheLines, recursiveWatcher);\n\tlines.push(...alignTextColumns(recursiveWatcheLines));\n\n\tlines.push(\n\t\t`\\n[Non-Recursive Requests (${allNonRecursiveRequests.length}, suspended: ${nonRecursiveRequestsStatus.suspended}, polling: ${nonRecursiveRequestsStatus.polling})]:`,\n\t);\n\tconst nonRecursiveRequestLines: string[] = [];\n\tfor (const request of [\n\t\tnonSuspendedNonRecursiveRequests,\n\t\tsuspendedPollingNonRecursiveRequests,\n\t\tsuspendedNonPollingNonRecursiveRequests,\n\t].flat()) {\n\t\tfillRequestStats(\n\t\t\tnonRecursiveRequestLines,\n\t\t\trequest,\n\t\t\tnonRecursiveWatcher,\n\t\t);\n\t}\n\tlines.push(...alignTextColumns(nonRecursiveRequestLines));\n\n\tconst nonRecursiveWatcheLines: string[] = [];\n\tfillNonRecursiveWatcherStats(nonRecursiveWatcheLines, nonRecursiveWatcher);\n\tlines.push(...alignTextColumns(nonRecursiveWatcheLines));\n\n\treturn useParcelWatcher2\n\t\t? `\\n\\n[File Watcher NEXT] request stats:\\n\\n${lines.join(\"\\n\")}\\n\\n`\n\t\t: `\\n\\n[File Watcher CLASSIC] request stats:\\n\\n${lines.join(\"\\n\")}\\n\\n`;\n}\n\nfunction alignTextColumns(lines: string[]) {\n\tlet maxLength = 0;\n\tfor (const line of lines) {\n\t\tmaxLength = Math.max(maxLength, line.split(\"\\t\")[0].length);\n\t}\n\n\tfor (let i = 0; i < lines.length; i++) {\n\t\tconst line = lines[i];\n\t\tconst parts = line.split(\"\\t\");\n\t\tif (parts.length === 2) {\n\t\t\tconst padding = \" \".repeat(maxLength - parts[0].length);\n\t\t\tlines[i] = `${parts[0]}${padding}\\t${parts[1]}`;\n\t\t}\n\t}\n\n\treturn lines;\n}\n\nfunction computeRequestStatus(\n\trequests: IUniversalWatchRequest[],\n\twatcher: ParcelWatcher | NodeJSWatcher,\n): { suspended: number; polling: number } {\n\tlet polling = 0;\n\tlet suspended = 0;\n\n\tfor (const request of requests) {\n\t\tconst isSuspended = watcher.isSuspended(request);\n\t\tif (isSuspended === false) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tsuspended++;\n\n\t\tif (isSuspended === \"polling\") {\n\t\t\tpolling++;\n\t\t}\n\t}\n\n\treturn { suspended, polling };\n}\n\nfunction computeRecursiveWatchStatus(recursiveWatcher: ParcelWatcher): {\n\tactive: number;\n\tfailed: number;\n\tstopped: number;\n} {\n\tlet active = 0;\n\tlet failed = 0;\n\tlet stopped = 0;\n\n\tfor (const watcher of recursiveWatcher.watchers.values()) {\n\t\tif (!watcher.failed && !watcher.stopped) {\n\t\t\tactive++;\n\t\t}\n\t\tif (watcher.failed) {\n\t\t\tfailed++;\n\t\t}\n\t\tif (watcher.stopped) {\n\t\t\tstopped++;\n\t\t}\n\t}\n\n\treturn { active, failed, stopped };\n}\n\nfunction computeNonRecursiveWatchStatus(nonRecursiveWatcher: NodeJSWatcher): {\n\tactive: number;\n\tfailed: number;\n\treusing: number;\n} {\n\tlet active = 0;\n\tlet failed = 0;\n\tlet reusing = 0;\n\n\tfor (const watcher of nonRecursiveWatcher.watchers) {\n\t\tif (\n\t\t\t!watcher.instance.failed &&\n\t\t\t!watcher.instance.isReusingRecursiveWatcher\n\t\t) {\n\t\t\tactive++;\n\t\t}\n\t\tif (watcher.instance.failed) {\n\t\t\tfailed++;\n\t\t}\n\t\tif (watcher.instance.isReusingRecursiveWatcher) {\n\t\t\treusing++;\n\t\t}\n\t}\n\n\treturn { active, failed, reusing };\n}\n\nfunction sortByPathPrefix(\n\trequests: IUniversalWatchRequest[],\n): IUniversalWatchRequest[];\nfunction sortByPathPrefix(\n\trequests: INodeJSWatcherInstance[],\n): INodeJSWatcherInstance[];\nfunction sortByPathPrefix(\n\trequests: ParcelWatcherInstance[],\n): ParcelWatcherInstance[];\nfunction sortByPathPrefix(\n\trequests:\n\t\t| IUniversalWatchRequest[]\n\t\t| INodeJSWatcherInstance[]\n\t\t| ParcelWatcherInstance[],\n):\n\t| IUniversalWatchRequest[]\n\t| INodeJSWatcherInstance[]\n\t| ParcelWatcherInstance[] {\n\trequests.sort((r1, r2) => {\n\t\tconst p1 = isUniversalWatchRequest(r1) ? r1.path : r1.request.path;\n\t\tconst p2 = isUniversalWatchRequest(r2) ? r2.path : r2.request.path;\n\n\t\tconst minLength = Math.min(p1.length, p2.length);\n\t\tfor (let i = 0; i < minLength; i++) {\n\t\t\tif (p1[i] !== p2[i]) {\n\t\t\t\treturn p1[i] < p2[i] ? -1 : 1;\n\t\t\t}\n\t\t}\n\n\t\treturn p1.length - p2.length;\n\t});\n\n\treturn requests;\n}\n\nfunction isUniversalWatchRequest(obj: unknown): obj is IUniversalWatchRequest {\n\tconst candidate = obj as IUniversalWatchRequest | undefined;\n\n\treturn typeof candidate?.path === \"string\";\n}\n\nfunction fillRequestStats(\n\tlines: string[],\n\trequest: IUniversalWatchRequest,\n\twatcher: ParcelWatcher | NodeJSWatcher,\n): void {\n\tconst decorations = [];\n\tconst suspended = watcher.isSuspended(request);\n\tif (suspended !== false) {\n\t\tif (suspended === \"polling\") {\n\t\t\tdecorations.push(\"[SUSPENDED <polling>]\");\n\t\t} else {\n\t\t\tdecorations.push(\"[SUSPENDED <non-polling>]\");\n\t\t}\n\t}\n\n\tlines.push(\n\t\t` ${request.path}\\t${decorations.length > 0 ? decorations.join(\" \") + \" \" : \"\"}(${requestDetailsToString(request)})`,\n\t);\n}\n\nfunction requestDetailsToString(request: IUniversalWatchRequest): string {\n\treturn `excludes: ${request.excludes.length > 0 ? request.excludes : \"<none>\"}, includes: ${request.includes && request.includes.length > 0 ? JSON.stringify(request.includes) : \"<all>\"}, filter: ${requestFilterToString(request.filter)}, correlationId: ${typeof request.correlationId === \"number\" ? request.correlationId : \"<none>\"}`;\n}\n\nfunction fillRecursiveWatcherStats(\n\tlines: string[],\n\trecursiveWatcher: ParcelWatcher,\n): void {\n\tconst watchers = sortByPathPrefix(\n\t\tArray.from(recursiveWatcher.watchers.values()),\n\t);\n\n\tconst { active, failed, stopped } =\n\t\tcomputeRecursiveWatchStatus(recursiveWatcher);\n\tlines.push(\n\t\t`\\n[Recursive Watchers (${watchers.length}, active: ${active}, failed: ${failed}, stopped: ${stopped})]:`,\n\t);\n\n\tfor (const watcher of watchers) {\n\t\tconst decorations = [];\n\t\tif (watcher.failed) {\n\t\t\tdecorations.push(\"[FAILED]\");\n\t\t}\n\t\tif (watcher.stopped) {\n\t\t\tdecorations.push(\"[STOPPED]\");\n\t\t}\n\t\tif (watcher.subscriptionsCount > 0) {\n\t\t\tdecorations.push(`[SUBSCRIBED:${watcher.subscriptionsCount}]`);\n\t\t}\n\t\tif (watcher.restarts > 0) {\n\t\t\tdecorations.push(`[RESTARTED:${watcher.restarts}]`);\n\t\t}\n\t\tlines.push(\n\t\t\t` ${watcher.request.path}\\t${decorations.length > 0 ? decorations.join(\" \") + \" \" : \"\"}(${requestDetailsToString(watcher.request)})`,\n\t\t);\n\t}\n}\n\nfunction fillNonRecursiveWatcherStats(\n\tlines: string[],\n\tnonRecursiveWatcher: NodeJSWatcher,\n): void {\n\tconst allWatchers = sortByPathPrefix(\n\t\tArray.from(nonRecursiveWatcher.watchers.values()),\n\t);\n\tconst activeWatchers = allWatchers.filter(\n\t\t(watcher) =>\n\t\t\t!watcher.instance.failed &&\n\t\t\t!watcher.instance.isReusingRecursiveWatcher,\n\t);\n\tconst failedWatchers = allWatchers.filter(\n\t\t(watcher) => watcher.instance.failed,\n\t);\n\tconst reusingWatchers = allWatchers.filter(\n\t\t(watcher) => watcher.instance.isReusingRecursiveWatcher,\n\t);\n\n\tconst { active, failed, reusing } =\n\t\tcomputeNonRecursiveWatchStatus(nonRecursiveWatcher);\n\tlines.push(\n\t\t`\\n[Non-Recursive Watchers (${allWatchers.length}, active: ${active}, failed: ${failed}, reusing: ${reusing})]:`,\n\t);\n\n\tfor (const watcher of [\n\t\tactiveWatchers,\n\t\tfailedWatchers,\n\t\treusingWatchers,\n\t].flat()) {\n\t\tconst decorations = [];\n\t\tif (watcher.instance.failed) {\n\t\t\tdecorations.push(\"[FAILED]\");\n\t\t}\n\t\tif (watcher.instance.isReusingRecursiveWatcher) {\n\t\t\tdecorations.push(\"[REUSING]\");\n\t\t}\n\t\tlines.push(\n\t\t\t` ${watcher.request.path}\\t${decorations.length > 0 ? decorations.join(\" \") + \" \" : \"\"}(${requestDetailsToString(watcher.request)})`,\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
