{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/files/node/watcher/watcherStats.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IUniversalWatchRequest, requestFilterToString } from '../../common/watcher.js';\nimport { INodeJSWatcherInstance, NodeJSWatcher } from './nodejs/nodejsWatcher.js';\nimport { ParcelWatcher, ParcelWatcherInstance } from './parcel/parcelWatcher.js';\n\nconst useParcelWatcher2 = process.env.VSCODE_USE_WATCHER2 === 'true';\n\nexport function computeStats(\n\trequests: IUniversalWatchRequest[],\n\trecursiveWatcher: ParcelWatcher,\n\tnonRecursiveWatcher: NodeJSWatcher\n): string {\n\tconst lines: string[] = [];\n\n\tconst allRecursiveRequests = sortByPathPrefix(requests.filter(request => request.recursive));\n\tconst nonSuspendedRecursiveRequests = allRecursiveRequests.filter(request => recursiveWatcher.isSuspended(request) === false);\n\tconst suspendedPollingRecursiveRequests = allRecursiveRequests.filter(request => recursiveWatcher.isSuspended(request) === 'polling');\n\tconst suspendedNonPollingRecursiveRequests = allRecursiveRequests.filter(request => recursiveWatcher.isSuspended(request) === true);\n\n\tconst recursiveRequestsStatus = computeRequestStatus(allRecursiveRequests, recursiveWatcher);\n\tconst recursiveWatcherStatus = computeRecursiveWatchStatus(recursiveWatcher);\n\n\tconst allNonRecursiveRequests = sortByPathPrefix(requests.filter(request => !request.recursive));\n\tconst nonSuspendedNonRecursiveRequests = allNonRecursiveRequests.filter(request => nonRecursiveWatcher.isSuspended(request) === false);\n\tconst suspendedPollingNonRecursiveRequests = allNonRecursiveRequests.filter(request => nonRecursiveWatcher.isSuspended(request) === 'polling');\n\tconst suspendedNonPollingNonRecursiveRequests = allNonRecursiveRequests.filter(request => nonRecursiveWatcher.isSuspended(request) === true);\n\n\tconst nonRecursiveRequestsStatus = computeRequestStatus(allNonRecursiveRequests, nonRecursiveWatcher);\n\tconst nonRecursiveWatcherStatus = computeNonRecursiveWatchStatus(nonRecursiveWatcher);\n\n\tlines.push('[Summary]');\n\tlines.push(`- Recursive Requests:     total: ${allRecursiveRequests.length}, suspended: ${recursiveRequestsStatus.suspended}, polling: ${recursiveRequestsStatus.polling}`);\n\tlines.push(`- Non-Recursive Requests: total: ${allNonRecursiveRequests.length}, suspended: ${nonRecursiveRequestsStatus.suspended}, polling: ${nonRecursiveRequestsStatus.polling}`);\n\tlines.push(`- Recursive Watchers:     total: ${recursiveWatcher.watchers.size}, active: ${recursiveWatcherStatus.active}, failed: ${recursiveWatcherStatus.failed}, stopped: ${recursiveWatcherStatus.stopped}`);\n\tlines.push(`- Non-Recursive Watchers: total: ${nonRecursiveWatcher.watchers.size}, active: ${nonRecursiveWatcherStatus.active}, failed: ${nonRecursiveWatcherStatus.failed}, reusing: ${nonRecursiveWatcherStatus.reusing}`);\n\tlines.push(`- I/O Handles Impact:     total: ${recursiveRequestsStatus.polling + nonRecursiveRequestsStatus.polling + recursiveWatcherStatus.active + nonRecursiveWatcherStatus.active}`);\n\n\tlines.push(`\\n[Recursive Requests (${allRecursiveRequests.length}, suspended: ${recursiveRequestsStatus.suspended}, polling: ${recursiveRequestsStatus.polling})]:`);\n\tconst recursiveRequestLines: string[] = [];\n\tfor (const request of [nonSuspendedRecursiveRequests, suspendedPollingRecursiveRequests, suspendedNonPollingRecursiveRequests].flat()) {\n\t\tfillRequestStats(recursiveRequestLines, request, recursiveWatcher);\n\t}\n\tlines.push(...alignTextColumns(recursiveRequestLines));\n\n\tconst recursiveWatcheLines: string[] = [];\n\tfillRecursiveWatcherStats(recursiveWatcheLines, recursiveWatcher);\n\tlines.push(...alignTextColumns(recursiveWatcheLines));\n\n\tlines.push(`\\n[Non-Recursive Requests (${allNonRecursiveRequests.length}, suspended: ${nonRecursiveRequestsStatus.suspended}, polling: ${nonRecursiveRequestsStatus.polling})]:`);\n\tconst nonRecursiveRequestLines: string[] = [];\n\tfor (const request of [nonSuspendedNonRecursiveRequests, suspendedPollingNonRecursiveRequests, suspendedNonPollingNonRecursiveRequests].flat()) {\n\t\tfillRequestStats(nonRecursiveRequestLines, request, nonRecursiveWatcher);\n\t}\n\tlines.push(...alignTextColumns(nonRecursiveRequestLines));\n\n\tconst nonRecursiveWatcheLines: string[] = [];\n\tfillNonRecursiveWatcherStats(nonRecursiveWatcheLines, nonRecursiveWatcher);\n\tlines.push(...alignTextColumns(nonRecursiveWatcheLines));\n\n\treturn useParcelWatcher2 ? `\\n\\n[File Watcher NEXT] request stats:\\n\\n${lines.join('\\n')}\\n\\n` : `\\n\\n[File Watcher CLASSIC] request stats:\\n\\n${lines.join('\\n')}\\n\\n`;\n}\n\nfunction alignTextColumns(lines: string[]) {\n\tlet maxLength = 0;\n\tfor (const line of lines) {\n\t\tmaxLength = Math.max(maxLength, line.split('\\t')[0].length);\n\t}\n\n\tfor (let i = 0; i < lines.length; i++) {\n\t\tconst line = lines[i];\n\t\tconst parts = line.split('\\t');\n\t\tif (parts.length === 2) {\n\t\t\tconst padding = ' '.repeat(maxLength - parts[0].length);\n\t\t\tlines[i] = `${parts[0]}${padding}\\t${parts[1]}`;\n\t\t}\n\t}\n\n\treturn lines;\n}\n\nfunction computeRequestStatus(requests: IUniversalWatchRequest[], watcher: ParcelWatcher | NodeJSWatcher): { suspended: number; polling: number } {\n\tlet polling = 0;\n\tlet suspended = 0;\n\n\tfor (const request of requests) {\n\t\tconst isSuspended = watcher.isSuspended(request);\n\t\tif (isSuspended === false) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tsuspended++;\n\n\t\tif (isSuspended === 'polling') {\n\t\t\tpolling++;\n\t\t}\n\t}\n\n\treturn { suspended, polling };\n}\n\nfunction computeRecursiveWatchStatus(recursiveWatcher: ParcelWatcher): { active: number; failed: number; stopped: number } {\n\tlet active = 0;\n\tlet failed = 0;\n\tlet stopped = 0;\n\n\tfor (const watcher of recursiveWatcher.watchers.values()) {\n\t\tif (!watcher.failed && !watcher.stopped) {\n\t\t\tactive++;\n\t\t}\n\t\tif (watcher.failed) {\n\t\t\tfailed++;\n\t\t}\n\t\tif (watcher.stopped) {\n\t\t\tstopped++;\n\t\t}\n\t}\n\n\treturn { active, failed, stopped };\n}\n\nfunction computeNonRecursiveWatchStatus(nonRecursiveWatcher: NodeJSWatcher): { active: number; failed: number; reusing: number } {\n\tlet active = 0;\n\tlet failed = 0;\n\tlet reusing = 0;\n\n\tfor (const watcher of nonRecursiveWatcher.watchers) {\n\t\tif (!watcher.instance.failed && !watcher.instance.isReusingRecursiveWatcher) {\n\t\t\tactive++;\n\t\t}\n\t\tif (watcher.instance.failed) {\n\t\t\tfailed++;\n\t\t}\n\t\tif (watcher.instance.isReusingRecursiveWatcher) {\n\t\t\treusing++;\n\t\t}\n\t}\n\n\treturn { active, failed, reusing };\n}\n\nfunction sortByPathPrefix(requests: IUniversalWatchRequest[]): IUniversalWatchRequest[];\nfunction sortByPathPrefix(requests: INodeJSWatcherInstance[]): INodeJSWatcherInstance[];\nfunction sortByPathPrefix(requests: ParcelWatcherInstance[]): ParcelWatcherInstance[];\nfunction sortByPathPrefix(requests: IUniversalWatchRequest[] | INodeJSWatcherInstance[] | ParcelWatcherInstance[]): IUniversalWatchRequest[] | INodeJSWatcherInstance[] | ParcelWatcherInstance[] {\n\trequests.sort((r1, r2) => {\n\t\tconst p1 = isUniversalWatchRequest(r1) ? r1.path : r1.request.path;\n\t\tconst p2 = isUniversalWatchRequest(r2) ? r2.path : r2.request.path;\n\n\t\tconst minLength = Math.min(p1.length, p2.length);\n\t\tfor (let i = 0; i < minLength; i++) {\n\t\t\tif (p1[i] !== p2[i]) {\n\t\t\t\treturn (p1[i] < p2[i]) ? -1 : 1;\n\t\t\t}\n\t\t}\n\n\t\treturn p1.length - p2.length;\n\t});\n\n\treturn requests;\n}\n\nfunction isUniversalWatchRequest(obj: unknown): obj is IUniversalWatchRequest {\n\tconst candidate = obj as IUniversalWatchRequest | undefined;\n\n\treturn typeof candidate?.path === 'string';\n}\n\nfunction fillRequestStats(lines: string[], request: IUniversalWatchRequest, watcher: ParcelWatcher | NodeJSWatcher): void {\n\tconst decorations = [];\n\tconst suspended = watcher.isSuspended(request);\n\tif (suspended !== false) {\n\t\tif (suspended === 'polling') {\n\t\t\tdecorations.push('[SUSPENDED <polling>]');\n\t\t} else {\n\t\t\tdecorations.push('[SUSPENDED <non-polling>]');\n\t\t}\n\t}\n\n\tlines.push(` ${request.path}\\t${decorations.length > 0 ? decorations.join(' ') + ' ' : ''}(${requestDetailsToString(request)})`);\n}\n\nfunction requestDetailsToString(request: IUniversalWatchRequest): string {\n\treturn `excludes: ${request.excludes.length > 0 ? request.excludes : '<none>'}, includes: ${request.includes && request.includes.length > 0 ? JSON.stringify(request.includes) : '<all>'}, filter: ${requestFilterToString(request.filter)}, correlationId: ${typeof request.correlationId === 'number' ? request.correlationId : '<none>'}`;\n}\n\nfunction fillRecursiveWatcherStats(lines: string[], recursiveWatcher: ParcelWatcher): void {\n\tconst watchers = sortByPathPrefix(Array.from(recursiveWatcher.watchers.values()));\n\n\tconst { active, failed, stopped } = computeRecursiveWatchStatus(recursiveWatcher);\n\tlines.push(`\\n[Recursive Watchers (${watchers.length}, active: ${active}, failed: ${failed}, stopped: ${stopped})]:`);\n\n\tfor (const watcher of watchers) {\n\t\tconst decorations = [];\n\t\tif (watcher.failed) {\n\t\t\tdecorations.push('[FAILED]');\n\t\t}\n\t\tif (watcher.stopped) {\n\t\t\tdecorations.push('[STOPPED]');\n\t\t}\n\t\tif (watcher.subscriptionsCount > 0) {\n\t\t\tdecorations.push(`[SUBSCRIBED:${watcher.subscriptionsCount}]`);\n\t\t}\n\t\tif (watcher.restarts > 0) {\n\t\t\tdecorations.push(`[RESTARTED:${watcher.restarts}]`);\n\t\t}\n\t\tlines.push(` ${watcher.request.path}\\t${decorations.length > 0 ? decorations.join(' ') + ' ' : ''}(${requestDetailsToString(watcher.request)})`);\n\t}\n}\n\nfunction fillNonRecursiveWatcherStats(lines: string[], nonRecursiveWatcher: NodeJSWatcher): void {\n\tconst allWatchers = sortByPathPrefix(Array.from(nonRecursiveWatcher.watchers.values()));\n\tconst activeWatchers = allWatchers.filter(watcher => !watcher.instance.failed && !watcher.instance.isReusingRecursiveWatcher);\n\tconst failedWatchers = allWatchers.filter(watcher => watcher.instance.failed);\n\tconst reusingWatchers = allWatchers.filter(watcher => watcher.instance.isReusingRecursiveWatcher);\n\n\tconst { active, failed, reusing } = computeNonRecursiveWatchStatus(nonRecursiveWatcher);\n\tlines.push(`\\n[Non-Recursive Watchers (${allWatchers.length}, active: ${active}, failed: ${failed}, reusing: ${reusing})]:`);\n\n\tfor (const watcher of [activeWatchers, failedWatchers, reusingWatchers].flat()) {\n\t\tconst decorations = [];\n\t\tif (watcher.instance.failed) {\n\t\t\tdecorations.push('[FAILED]');\n\t\t}\n\t\tif (watcher.instance.isReusingRecursiveWatcher) {\n\t\t\tdecorations.push('[REUSING]');\n\t\t}\n\t\tlines.push(` ${watcher.request.path}\\t${decorations.length > 0 ? decorations.join(' ') + ' ' : ''}(${requestDetailsToString(watcher.request)})`);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
