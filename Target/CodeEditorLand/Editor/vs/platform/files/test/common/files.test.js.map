{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/files/test/common/files.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { isEqual, isEqualOrParent } from '../../../../base/common/extpath.js';\nimport { isLinux, isMacintosh, isWindows } from '../../../../base/common/platform.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite, toResource } from '../../../../base/test/common/utils.js';\nimport { FileChangesEvent, FileChangeType, IFileChange, isParent } from '../../common/files.js';\n\nsuite('Files', () => {\n\n\ttest('FileChangesEvent - basics', function () {\n\t\tconst changes = [\n\t\t\t{ resource: toResource.call(this, '/foo/updated.txt'), type: FileChangeType.UPDATED },\n\t\t\t{ resource: toResource.call(this, '/foo/otherupdated.txt'), type: FileChangeType.UPDATED },\n\t\t\t{ resource: toResource.call(this, '/added.txt'), type: FileChangeType.ADDED },\n\t\t\t{ resource: toResource.call(this, '/bar/deleted.txt'), type: FileChangeType.DELETED },\n\t\t\t{ resource: toResource.call(this, '/bar/folder'), type: FileChangeType.DELETED },\n\t\t\t{ resource: toResource.call(this, '/BAR/FOLDER'), type: FileChangeType.DELETED }\n\t\t];\n\n\t\tfor (const ignorePathCasing of [false, true]) {\n\t\t\tconst event = new FileChangesEvent(changes, ignorePathCasing);\n\n\t\t\tassert(!event.contains(toResource.call(this, '/foo'), FileChangeType.UPDATED));\n\t\t\tassert(event.affects(toResource.call(this, '/foo'), FileChangeType.UPDATED));\n\t\t\tassert(event.contains(toResource.call(this, '/foo/updated.txt'), FileChangeType.UPDATED));\n\t\t\tassert(event.affects(toResource.call(this, '/foo/updated.txt'), FileChangeType.UPDATED));\n\t\t\tassert(event.contains(toResource.call(this, '/foo/updated.txt'), FileChangeType.UPDATED, FileChangeType.ADDED));\n\t\t\tassert(event.affects(toResource.call(this, '/foo/updated.txt'), FileChangeType.UPDATED, FileChangeType.ADDED));\n\t\t\tassert(event.contains(toResource.call(this, '/foo/updated.txt'), FileChangeType.UPDATED, FileChangeType.ADDED, FileChangeType.DELETED));\n\t\t\tassert(!event.contains(toResource.call(this, '/foo/updated.txt'), FileChangeType.ADDED, FileChangeType.DELETED));\n\t\t\tassert(!event.contains(toResource.call(this, '/foo/updated.txt'), FileChangeType.ADDED));\n\t\t\tassert(!event.contains(toResource.call(this, '/foo/updated.txt'), FileChangeType.DELETED));\n\t\t\tassert(!event.affects(toResource.call(this, '/foo/updated.txt'), FileChangeType.DELETED));\n\n\t\t\tassert(event.contains(toResource.call(this, '/bar/folder'), FileChangeType.DELETED));\n\t\t\tassert(event.contains(toResource.call(this, '/BAR/FOLDER'), FileChangeType.DELETED));\n\t\t\tassert(event.affects(toResource.call(this, '/BAR'), FileChangeType.DELETED));\n\t\t\tif (ignorePathCasing) {\n\t\t\t\tassert(event.contains(toResource.call(this, '/BAR/folder'), FileChangeType.DELETED));\n\t\t\t\tassert(event.affects(toResource.call(this, '/bar'), FileChangeType.DELETED));\n\t\t\t} else {\n\t\t\t\tassert(!event.contains(toResource.call(this, '/BAR/folder'), FileChangeType.DELETED));\n\t\t\t\tassert(event.affects(toResource.call(this, '/bar'), FileChangeType.DELETED));\n\t\t\t}\n\t\t\tassert(event.contains(toResource.call(this, '/bar/folder/somefile'), FileChangeType.DELETED));\n\t\t\tassert(event.contains(toResource.call(this, '/bar/folder/somefile/test.txt'), FileChangeType.DELETED));\n\t\t\tassert(event.contains(toResource.call(this, '/BAR/FOLDER/somefile/test.txt'), FileChangeType.DELETED));\n\t\t\tif (ignorePathCasing) {\n\t\t\t\tassert(event.contains(toResource.call(this, '/BAR/folder/somefile/test.txt'), FileChangeType.DELETED));\n\t\t\t} else {\n\t\t\t\tassert(!event.contains(toResource.call(this, '/BAR/folder/somefile/test.txt'), FileChangeType.DELETED));\n\t\t\t}\n\t\t\tassert(!event.contains(toResource.call(this, '/bar/folder2/somefile'), FileChangeType.DELETED));\n\n\t\t\tassert.strictEqual(1, event.rawAdded.length);\n\t\t\tassert.strictEqual(2, event.rawUpdated.length);\n\t\t\tassert.strictEqual(3, event.rawDeleted.length);\n\t\t\tassert.strictEqual(true, event.gotAdded());\n\t\t\tassert.strictEqual(true, event.gotUpdated());\n\t\t\tassert.strictEqual(true, event.gotDeleted());\n\t\t}\n\t});\n\n\ttest('FileChangesEvent - supports multiple changes on file tree', function () {\n\t\tfor (const type of [FileChangeType.ADDED, FileChangeType.UPDATED, FileChangeType.DELETED]) {\n\t\t\tconst changes = [\n\t\t\t\t{ resource: toResource.call(this, '/foo/bar/updated.txt'), type },\n\t\t\t\t{ resource: toResource.call(this, '/foo/bar/otherupdated.txt'), type },\n\t\t\t\t{ resource: toResource.call(this, '/foo/bar'), type },\n\t\t\t\t{ resource: toResource.call(this, '/foo'), type },\n\t\t\t\t{ resource: toResource.call(this, '/bar'), type },\n\t\t\t\t{ resource: toResource.call(this, '/bar/foo'), type },\n\t\t\t\t{ resource: toResource.call(this, '/bar/foo/updated.txt'), type },\n\t\t\t\t{ resource: toResource.call(this, '/bar/foo/otherupdated.txt'), type }\n\t\t\t];\n\n\t\t\tfor (const ignorePathCasing of [false, true]) {\n\t\t\t\tconst event = new FileChangesEvent(changes, ignorePathCasing);\n\n\t\t\t\tfor (const change of changes) {\n\t\t\t\t\tassert(event.contains(change.resource, type));\n\t\t\t\t\tassert(event.affects(change.resource, type));\n\t\t\t\t}\n\n\t\t\t\tassert(event.affects(toResource.call(this, '/foo'), type));\n\t\t\t\tassert(event.affects(toResource.call(this, '/bar'), type));\n\t\t\t\tassert(event.affects(toResource.call(this, '/'), type));\n\t\t\t\tassert(!event.affects(toResource.call(this, '/foobar'), type));\n\n\t\t\t\tassert(!event.contains(toResource.call(this, '/some/foo/bar'), type));\n\t\t\t\tassert(!event.affects(toResource.call(this, '/some/foo/bar'), type));\n\t\t\t\tassert(!event.contains(toResource.call(this, '/some/bar'), type));\n\t\t\t\tassert(!event.affects(toResource.call(this, '/some/bar'), type));\n\n\t\t\t\tswitch (type) {\n\t\t\t\t\tcase FileChangeType.ADDED:\n\t\t\t\t\t\tassert.strictEqual(8, event.rawAdded.length);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase FileChangeType.DELETED:\n\t\t\t\t\t\tassert.strictEqual(8, event.rawDeleted.length);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\ttest('FileChangesEvent - correlation', function () {\n\t\tlet changes: IFileChange[] = [\n\t\t\t{ resource: toResource.call(this, '/foo/updated.txt'), type: FileChangeType.UPDATED },\n\t\t\t{ resource: toResource.call(this, '/foo/otherupdated.txt'), type: FileChangeType.UPDATED },\n\t\t\t{ resource: toResource.call(this, '/added.txt'), type: FileChangeType.ADDED },\n\t\t];\n\n\t\tlet event: FileChangesEvent = new FileChangesEvent(changes, true);\n\t\tassert.strictEqual(event.hasCorrelation(), false);\n\t\tassert.strictEqual(event.correlates(100), false);\n\n\t\tchanges = [\n\t\t\t{ resource: toResource.call(this, '/foo/updated.txt'), type: FileChangeType.UPDATED, cId: 100 },\n\t\t\t{ resource: toResource.call(this, '/foo/otherupdated.txt'), type: FileChangeType.UPDATED, cId: 100 },\n\t\t\t{ resource: toResource.call(this, '/added.txt'), type: FileChangeType.ADDED, cId: 100 },\n\t\t];\n\n\t\tevent = new FileChangesEvent(changes, true);\n\t\tassert.strictEqual(event.hasCorrelation(), true);\n\t\tassert.strictEqual(event.correlates(100), true);\n\t\tassert.strictEqual(event.correlates(120), false);\n\n\t\tchanges = [\n\t\t\t{ resource: toResource.call(this, '/foo/updated.txt'), type: FileChangeType.UPDATED, cId: 100 },\n\t\t\t{ resource: toResource.call(this, '/foo/otherupdated.txt'), type: FileChangeType.UPDATED },\n\t\t\t{ resource: toResource.call(this, '/added.txt'), type: FileChangeType.ADDED, cId: 100 },\n\t\t];\n\n\t\tevent = new FileChangesEvent(changes, true);\n\t\tassert.strictEqual(event.hasCorrelation(), false);\n\t\tassert.strictEqual(event.correlates(100), false);\n\t\tassert.strictEqual(event.correlates(120), false);\n\n\t\tchanges = [\n\t\t\t{ resource: toResource.call(this, '/foo/updated.txt'), type: FileChangeType.UPDATED, cId: 100 },\n\t\t\t{ resource: toResource.call(this, '/foo/otherupdated.txt'), type: FileChangeType.UPDATED, cId: 120 },\n\t\t\t{ resource: toResource.call(this, '/added.txt'), type: FileChangeType.ADDED, cId: 100 },\n\t\t];\n\n\t\tevent = new FileChangesEvent(changes, true);\n\t\tassert.strictEqual(event.hasCorrelation(), false);\n\t\tassert.strictEqual(event.correlates(100), false);\n\t\tassert.strictEqual(event.correlates(120), false);\n\t});\n\n\tfunction testIsEqual(testMethod: (pA: string, pB: string, ignoreCase: boolean) => boolean): void {\n\n\t\t// corner cases\n\t\tassert(testMethod('', '', true));\n\t\tassert(!testMethod(null!, '', true));\n\t\tassert(!testMethod(undefined!, '', true));\n\n\t\t// basics (string)\n\t\tassert(testMethod('/', '/', true));\n\t\tassert(testMethod('/some', '/some', true));\n\t\tassert(testMethod('/some/path', '/some/path', true));\n\n\t\tassert(testMethod('c:\\\\', 'c:\\\\', true));\n\t\tassert(testMethod('c:\\\\some', 'c:\\\\some', true));\n\t\tassert(testMethod('c:\\\\some\\\\path', 'c:\\\\some\\\\path', true));\n\n\t\tassert(testMethod('/some\u00F6\u00E4\u00FC/path', '/some\u00F6\u00E4\u00FC/path', true));\n\t\tassert(testMethod('c:\\\\some\u00F6\u00E4\u00FC\\\\path', 'c:\\\\some\u00F6\u00E4\u00FC\\\\path', true));\n\n\t\tassert(!testMethod('/some/path', '/some/other/path', true));\n\t\tassert(!testMethod('c:\\\\some\\\\path', 'c:\\\\some\\\\other\\\\path', true));\n\t\tassert(!testMethod('c:\\\\some\\\\path', 'd:\\\\some\\\\path', true));\n\n\t\tassert(testMethod('/some/path', '/some/PATH', true));\n\t\tassert(testMethod('/some\u00F6\u00E4\u00FC/path', '/some\u00D6\u00C4\u00DC/PATH', true));\n\t\tassert(testMethod('c:\\\\some\\\\path', 'c:\\\\some\\\\PATH', true));\n\t\tassert(testMethod('c:\\\\some\u00F6\u00E4\u00FC\\\\path', 'c:\\\\some\u00D6\u00C4\u00DC\\\\PATH', true));\n\t\tassert(testMethod('c:\\\\some\\\\path', 'C:\\\\some\\\\PATH', true));\n\t}\n\n\ttest('isEqual (ignoreCase)', function () {\n\t\ttestIsEqual(isEqual);\n\n\t\t// basics (uris)\n\t\tassert(isEqual(URI.file('/some/path').fsPath, URI.file('/some/path').fsPath, true));\n\t\tassert(isEqual(URI.file('c:\\\\some\\\\path').fsPath, URI.file('c:\\\\some\\\\path').fsPath, true));\n\n\t\tassert(isEqual(URI.file('/some\u00F6\u00E4\u00FC/path').fsPath, URI.file('/some\u00F6\u00E4\u00FC/path').fsPath, true));\n\t\tassert(isEqual(URI.file('c:\\\\some\u00F6\u00E4\u00FC\\\\path').fsPath, URI.file('c:\\\\some\u00F6\u00E4\u00FC\\\\path').fsPath, true));\n\n\t\tassert(!isEqual(URI.file('/some/path').fsPath, URI.file('/some/other/path').fsPath, true));\n\t\tassert(!isEqual(URI.file('c:\\\\some\\\\path').fsPath, URI.file('c:\\\\some\\\\other\\\\path').fsPath, true));\n\n\t\tassert(isEqual(URI.file('/some/path').fsPath, URI.file('/some/PATH').fsPath, true));\n\t\tassert(isEqual(URI.file('/some\u00F6\u00E4\u00FC/path').fsPath, URI.file('/some\u00D6\u00C4\u00DC/PATH').fsPath, true));\n\t\tassert(isEqual(URI.file('c:\\\\some\\\\path').fsPath, URI.file('c:\\\\some\\\\PATH').fsPath, true));\n\t\tassert(isEqual(URI.file('c:\\\\some\u00F6\u00E4\u00FC\\\\path').fsPath, URI.file('c:\\\\some\u00D6\u00C4\u00DC\\\\PATH').fsPath, true));\n\t\tassert(isEqual(URI.file('c:\\\\some\\\\path').fsPath, URI.file('C:\\\\some\\\\PATH').fsPath, true));\n\t});\n\n\ttest('isParent (ignorecase)', function () {\n\t\tif (isWindows) {\n\t\t\tassert(isParent('c:\\\\some\\\\path', 'c:\\\\', true));\n\t\t\tassert(isParent('c:\\\\some\\\\path', 'c:\\\\some', true));\n\t\t\tassert(isParent('c:\\\\some\\\\path', 'c:\\\\some\\\\', true));\n\t\t\tassert(isParent('c:\\\\some\u00F6\u00E4\u00FC\\\\path', 'c:\\\\some\u00F6\u00E4\u00FC', true));\n\t\t\tassert(isParent('c:\\\\some\u00F6\u00E4\u00FC\\\\path', 'c:\\\\some\u00F6\u00E4\u00FC\\\\', true));\n\t\t\tassert(isParent('c:\\\\foo\\\\bar\\\\test.ts', 'c:\\\\foo\\\\bar', true));\n\t\t\tassert(isParent('c:\\\\foo\\\\bar\\\\test.ts', 'c:\\\\foo\\\\bar\\\\', true));\n\n\t\t\tassert(isParent('c:\\\\some\\\\path', 'C:\\\\', true));\n\t\t\tassert(isParent('c:\\\\some\\\\path', 'c:\\\\SOME', true));\n\t\t\tassert(isParent('c:\\\\some\\\\path', 'c:\\\\SOME\\\\', true));\n\n\t\t\tassert(!isParent('c:\\\\some\\\\path', 'd:\\\\', true));\n\t\t\tassert(!isParent('c:\\\\some\\\\path', 'c:\\\\some\\\\path', true));\n\t\t\tassert(!isParent('c:\\\\some\\\\path', 'd:\\\\some\\\\path', true));\n\t\t\tassert(!isParent('c:\\\\foo\\\\bar\\\\test.ts', 'c:\\\\foo\\\\barr', true));\n\t\t\tassert(!isParent('c:\\\\foo\\\\bar\\\\test.ts', 'c:\\\\foo\\\\bar\\\\test', true));\n\t\t}\n\n\t\tif (isMacintosh || isLinux) {\n\t\t\tassert(isParent('/some/path', '/', true));\n\t\t\tassert(isParent('/some/path', '/some', true));\n\t\t\tassert(isParent('/some/path', '/some/', true));\n\t\t\tassert(isParent('/some\u00F6\u00E4\u00FC/path', '/some\u00F6\u00E4\u00FC', true));\n\t\t\tassert(isParent('/some\u00F6\u00E4\u00FC/path', '/some\u00F6\u00E4\u00FC/', true));\n\t\t\tassert(isParent('/foo/bar/test.ts', '/foo/bar', true));\n\t\t\tassert(isParent('/foo/bar/test.ts', '/foo/bar/', true));\n\n\t\t\tassert(isParent('/some/path', '/SOME', true));\n\t\t\tassert(isParent('/some/path', '/SOME/', true));\n\t\t\tassert(isParent('/some\u00F6\u00E4\u00FC/path', '/SOME\u00D6\u00C4\u00DC', true));\n\t\t\tassert(isParent('/some\u00F6\u00E4\u00FC/path', '/SOME\u00D6\u00C4\u00DC/', true));\n\n\t\t\tassert(!isParent('/some/path', '/some/path', true));\n\t\t\tassert(!isParent('/foo/bar/test.ts', '/foo/barr', true));\n\t\t\tassert(!isParent('/foo/bar/test.ts', '/foo/bar/test', true));\n\t\t}\n\t});\n\n\ttest('isEqualOrParent (ignorecase)', function () {\n\n\t\t// same assertions apply as with isEqual()\n\t\ttestIsEqual(isEqualOrParent); //\n\n\t\tif (isWindows) {\n\t\t\tassert(isEqualOrParent('c:\\\\some\\\\path', 'c:\\\\', true));\n\t\t\tassert(isEqualOrParent('c:\\\\some\\\\path', 'c:\\\\some', true));\n\t\t\tassert(isEqualOrParent('c:\\\\some\\\\path', 'c:\\\\some\\\\', true));\n\t\t\tassert(isEqualOrParent('c:\\\\some\u00F6\u00E4\u00FC\\\\path', 'c:\\\\some\u00F6\u00E4\u00FC', true));\n\t\t\tassert(isEqualOrParent('c:\\\\some\u00F6\u00E4\u00FC\\\\path', 'c:\\\\some\u00F6\u00E4\u00FC\\\\', true));\n\t\t\tassert(isEqualOrParent('c:\\\\foo\\\\bar\\\\test.ts', 'c:\\\\foo\\\\bar', true));\n\t\t\tassert(isEqualOrParent('c:\\\\foo\\\\bar\\\\test.ts', 'c:\\\\foo\\\\bar\\\\', true));\n\t\t\tassert(isEqualOrParent('c:\\\\some\\\\path', 'c:\\\\some\\\\path', true));\n\t\t\tassert(isEqualOrParent('c:\\\\foo\\\\bar\\\\test.ts', 'c:\\\\foo\\\\bar\\\\test.ts', true));\n\n\t\t\tassert(isEqualOrParent('c:\\\\some\\\\path', 'C:\\\\', true));\n\t\t\tassert(isEqualOrParent('c:\\\\some\\\\path', 'c:\\\\SOME', true));\n\t\t\tassert(isEqualOrParent('c:\\\\some\\\\path', 'c:\\\\SOME\\\\', true));\n\n\t\t\tassert(!isEqualOrParent('c:\\\\some\\\\path', 'd:\\\\', true));\n\t\t\tassert(!isEqualOrParent('c:\\\\some\\\\path', 'd:\\\\some\\\\path', true));\n\t\t\tassert(!isEqualOrParent('c:\\\\foo\\\\bar\\\\test.ts', 'c:\\\\foo\\\\barr', true));\n\t\t\tassert(!isEqualOrParent('c:\\\\foo\\\\bar\\\\test.ts', 'c:\\\\foo\\\\bar\\\\test', true));\n\t\t\tassert(!isEqualOrParent('c:\\\\foo\\\\bar\\\\test.ts', 'c:\\\\foo\\\\bar\\\\test.', true));\n\t\t\tassert(!isEqualOrParent('c:\\\\foo\\\\bar\\\\test.ts', 'c:\\\\foo\\\\BAR\\\\test.', true));\n\t\t}\n\n\t\tif (isMacintosh || isLinux) {\n\t\t\tassert(isEqualOrParent('/some/path', '/', true));\n\t\t\tassert(isEqualOrParent('/some/path', '/some', true));\n\t\t\tassert(isEqualOrParent('/some/path', '/some/', true));\n\t\t\tassert(isEqualOrParent('/some\u00F6\u00E4\u00FC/path', '/some\u00F6\u00E4\u00FC', true));\n\t\t\tassert(isEqualOrParent('/some\u00F6\u00E4\u00FC/path', '/some\u00F6\u00E4\u00FC/', true));\n\t\t\tassert(isEqualOrParent('/foo/bar/test.ts', '/foo/bar', true));\n\t\t\tassert(isEqualOrParent('/foo/bar/test.ts', '/foo/bar/', true));\n\t\t\tassert(isEqualOrParent('/some/path', '/some/path', true));\n\n\t\t\tassert(isEqualOrParent('/some/path', '/SOME', true));\n\t\t\tassert(isEqualOrParent('/some/path', '/SOME/', true));\n\t\t\tassert(isEqualOrParent('/some\u00F6\u00E4\u00FC/path', '/SOME\u00D6\u00C4\u00DC', true));\n\t\t\tassert(isEqualOrParent('/some\u00F6\u00E4\u00FC/path', '/SOME\u00D6\u00C4\u00DC/', true));\n\n\t\t\tassert(!isEqualOrParent('/foo/bar/test.ts', '/foo/barr', true));\n\t\t\tassert(!isEqualOrParent('/foo/bar/test.ts', '/foo/bar/test', true));\n\t\t\tassert(!isEqualOrParent('foo/bar/test.ts', 'foo/bar/test.', true));\n\t\t\tassert(!isEqualOrParent('foo/bar/test.ts', 'foo/BAR/test.', true));\n\t\t}\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"],
  "mappings": ";;AAKA,OAAO,YAAY;AACnB,SAAS,SAAS,uBAAuB;AACzC,SAAS,SAAS,aAAa,iBAAiB;AAChD,SAAS,WAAW;AACpB,SAAS,yCAAyC,kBAAkB;AACpE,SAAS,kBAAkB,gBAAgB,aAAa,gBAAgB;AAExE,MAAM,SAAS,MAAM;AAEpB,OAAK,6BAA6B,WAAY;AAC7C,UAAM,UAAU;AAAA,MACf,EAAE,UAAU,WAAW,KAAK,MAAM,kBAAkB,GAAG,MAAM,eAAe,QAAQ;AAAA,MACpF,EAAE,UAAU,WAAW,KAAK,MAAM,uBAAuB,GAAG,MAAM,eAAe,QAAQ;AAAA,MACzF,EAAE,UAAU,WAAW,KAAK,MAAM,YAAY,GAAG,MAAM,eAAe,MAAM;AAAA,MAC5E,EAAE,UAAU,WAAW,KAAK,MAAM,kBAAkB,GAAG,MAAM,eAAe,QAAQ;AAAA,MACpF,EAAE,UAAU,WAAW,KAAK,MAAM,aAAa,GAAG,MAAM,eAAe,QAAQ;AAAA,MAC/E,EAAE,UAAU,WAAW,KAAK,MAAM,aAAa,GAAG,MAAM,eAAe,QAAQ;AAAA,IAChF;AAEA,eAAW,oBAAoB,CAAC,OAAO,IAAI,GAAG;AAC7C,YAAM,QAAQ,IAAI,iBAAiB,SAAS,gBAAgB;AAE5D,aAAO,CAAC,MAAM,SAAS,WAAW,KAAK,MAAM,MAAM,GAAG,eAAe,OAAO,CAAC;AAC7E,aAAO,MAAM,QAAQ,WAAW,KAAK,MAAM,MAAM,GAAG,eAAe,OAAO,CAAC;AAC3E,aAAO,MAAM,SAAS,WAAW,KAAK,MAAM,kBAAkB,GAAG,eAAe,OAAO,CAAC;AACxF,aAAO,MAAM,QAAQ,WAAW,KAAK,MAAM,kBAAkB,GAAG,eAAe,OAAO,CAAC;AACvF,aAAO,MAAM,SAAS,WAAW,KAAK,MAAM,kBAAkB,GAAG,eAAe,SAAS,eAAe,KAAK,CAAC;AAC9G,aAAO,MAAM,QAAQ,WAAW,KAAK,MAAM,kBAAkB,GAAG,eAAe,SAAS,eAAe,KAAK,CAAC;AAC7G,aAAO,MAAM,SAAS,WAAW,KAAK,MAAM,kBAAkB,GAAG,eAAe,SAAS,eAAe,OAAO,eAAe,OAAO,CAAC;AACtI,aAAO,CAAC,MAAM,SAAS,WAAW,KAAK,MAAM,kBAAkB,GAAG,eAAe,OAAO,eAAe,OAAO,CAAC;AAC/G,aAAO,CAAC,MAAM,SAAS,WAAW,KAAK,MAAM,kBAAkB,GAAG,eAAe,KAAK,CAAC;AACvF,aAAO,CAAC,MAAM,SAAS,WAAW,KAAK,MAAM,kBAAkB,GAAG,eAAe,OAAO,CAAC;AACzF,aAAO,CAAC,MAAM,QAAQ,WAAW,KAAK,MAAM,kBAAkB,GAAG,eAAe,OAAO,CAAC;AAExF,aAAO,MAAM,SAAS,WAAW,KAAK,MAAM,aAAa,GAAG,eAAe,OAAO,CAAC;AACnF,aAAO,MAAM,SAAS,WAAW,KAAK,MAAM,aAAa,GAAG,eAAe,OAAO,CAAC;AACnF,aAAO,MAAM,QAAQ,WAAW,KAAK,MAAM,MAAM,GAAG,eAAe,OAAO,CAAC;AAC3E,UAAI,kBAAkB;AACrB,eAAO,MAAM,SAAS,WAAW,KAAK,MAAM,aAAa,GAAG,eAAe,OAAO,CAAC;AACnF,eAAO,MAAM,QAAQ,WAAW,KAAK,MAAM,MAAM,GAAG,eAAe,OAAO,CAAC;AAAA,MAC5E,OAAO;AACN,eAAO,CAAC,MAAM,SAAS,WAAW,KAAK,MAAM,aAAa,GAAG,eAAe,OAAO,CAAC;AACpF,eAAO,MAAM,QAAQ,WAAW,KAAK,MAAM,MAAM,GAAG,eAAe,OAAO,CAAC;AAAA,MAC5E;AACA,aAAO,MAAM,SAAS,WAAW,KAAK,MAAM,sBAAsB,GAAG,eAAe,OAAO,CAAC;AAC5F,aAAO,MAAM,SAAS,WAAW,KAAK,MAAM,+BAA+B,GAAG,eAAe,OAAO,CAAC;AACrG,aAAO,MAAM,SAAS,WAAW,KAAK,MAAM,+BAA+B,GAAG,eAAe,OAAO,CAAC;AACrG,UAAI,kBAAkB;AACrB,eAAO,MAAM,SAAS,WAAW,KAAK,MAAM,+BAA+B,GAAG,eAAe,OAAO,CAAC;AAAA,MACtG,OAAO;AACN,eAAO,CAAC,MAAM,SAAS,WAAW,KAAK,MAAM,+BAA+B,GAAG,eAAe,OAAO,CAAC;AAAA,MACvG;AACA,aAAO,CAAC,MAAM,SAAS,WAAW,KAAK,MAAM,uBAAuB,GAAG,eAAe,OAAO,CAAC;AAE9F,aAAO,YAAY,GAAG,MAAM,SAAS,MAAM;AAC3C,aAAO,YAAY,GAAG,MAAM,WAAW,MAAM;AAC7C,aAAO,YAAY,GAAG,MAAM,WAAW,MAAM;AAC7C,aAAO,YAAY,MAAM,MAAM,SAAS,CAAC;AACzC,aAAO,YAAY,MAAM,MAAM,WAAW,CAAC;AAC3C,aAAO,YAAY,MAAM,MAAM,WAAW,CAAC;AAAA,IAC5C;AAAA,EACD,CAAC;AAED,OAAK,6DAA6D,WAAY;AAC7E,eAAW,QAAQ,CAAC,eAAe,OAAO,eAAe,SAAS,eAAe,OAAO,GAAG;AAC1F,YAAM,UAAU;AAAA,QACf,EAAE,UAAU,WAAW,KAAK,MAAM,sBAAsB,GAAG,KAAK;AAAA,QAChE,EAAE,UAAU,WAAW,KAAK,MAAM,2BAA2B,GAAG,KAAK;AAAA,QACrE,EAAE,UAAU,WAAW,KAAK,MAAM,UAAU,GAAG,KAAK;AAAA,QACpD,EAAE,UAAU,WAAW,KAAK,MAAM,MAAM,GAAG,KAAK;AAAA,QAChD,EAAE,UAAU,WAAW,KAAK,MAAM,MAAM,GAAG,KAAK;AAAA,QAChD,EAAE,UAAU,WAAW,KAAK,MAAM,UAAU,GAAG,KAAK;AAAA,QACpD,EAAE,UAAU,WAAW,KAAK,MAAM,sBAAsB,GAAG,KAAK;AAAA,QAChE,EAAE,UAAU,WAAW,KAAK,MAAM,2BAA2B,GAAG,KAAK;AAAA,MACtE;AAEA,iBAAW,oBAAoB,CAAC,OAAO,IAAI,GAAG;AAC7C,cAAM,QAAQ,IAAI,iBAAiB,SAAS,gBAAgB;AAE5D,mBAAW,UAAU,SAAS;AAC7B,iBAAO,MAAM,SAAS,OAAO,UAAU,IAAI,CAAC;AAC5C,iBAAO,MAAM,QAAQ,OAAO,UAAU,IAAI,CAAC;AAAA,QAC5C;AAEA,eAAO,MAAM,QAAQ,WAAW,KAAK,MAAM,MAAM,GAAG,IAAI,CAAC;AACzD,eAAO,MAAM,QAAQ,WAAW,KAAK,MAAM,MAAM,GAAG,IAAI,CAAC;AACzD,eAAO,MAAM,QAAQ,WAAW,KAAK,MAAM,GAAG,GAAG,IAAI,CAAC;AACtD,eAAO,CAAC,MAAM,QAAQ,WAAW,KAAK,MAAM,SAAS,GAAG,IAAI,CAAC;AAE7D,eAAO,CAAC,MAAM,SAAS,WAAW,KAAK,MAAM,eAAe,GAAG,IAAI,CAAC;AACpE,eAAO,CAAC,MAAM,QAAQ,WAAW,KAAK,MAAM,eAAe,GAAG,IAAI,CAAC;AACnE,eAAO,CAAC,MAAM,SAAS,WAAW,KAAK,MAAM,WAAW,GAAG,IAAI,CAAC;AAChE,eAAO,CAAC,MAAM,QAAQ,WAAW,KAAK,MAAM,WAAW,GAAG,IAAI,CAAC;AAE/D,gBAAQ,MAAM;AAAA,UACb,KAAK,eAAe;AACnB,mBAAO,YAAY,GAAG,MAAM,SAAS,MAAM;AAC3C;AAAA,UACD,KAAK,eAAe;AACnB,mBAAO,YAAY,GAAG,MAAM,WAAW,MAAM;AAC7C;AAAA,QACF;AAAA,MACD;AAAA,IACD;AAAA,EACD,CAAC;AAED,OAAK,kCAAkC,WAAY;AAClD,QAAI,UAAyB;AAAA,MAC5B,EAAE,UAAU,WAAW,KAAK,MAAM,kBAAkB,GAAG,MAAM,eAAe,QAAQ;AAAA,MACpF,EAAE,UAAU,WAAW,KAAK,MAAM,uBAAuB,GAAG,MAAM,eAAe,QAAQ;AAAA,MACzF,EAAE,UAAU,WAAW,KAAK,MAAM,YAAY,GAAG,MAAM,eAAe,MAAM;AAAA,IAC7E;AAEA,QAAI,QAA0B,IAAI,iBAAiB,SAAS,IAAI;AAChE,WAAO,YAAY,MAAM,eAAe,GAAG,KAAK;AAChD,WAAO,YAAY,MAAM,WAAW,GAAG,GAAG,KAAK;AAE/C,cAAU;AAAA,MACT,EAAE,UAAU,WAAW,KAAK,MAAM,kBAAkB,GAAG,MAAM,eAAe,SAAS,KAAK,IAAI;AAAA,MAC9F,EAAE,UAAU,WAAW,KAAK,MAAM,uBAAuB,GAAG,MAAM,eAAe,SAAS,KAAK,IAAI;AAAA,MACnG,EAAE,UAAU,WAAW,KAAK,MAAM,YAAY,GAAG,MAAM,eAAe,OAAO,KAAK,IAAI;AAAA,IACvF;AAEA,YAAQ,IAAI,iBAAiB,SAAS,IAAI;AAC1C,WAAO,YAAY,MAAM,eAAe,GAAG,IAAI;AAC/C,WAAO,YAAY,MAAM,WAAW,GAAG,GAAG,IAAI;AAC9C,WAAO,YAAY,MAAM,WAAW,GAAG,GAAG,KAAK;AAE/C,cAAU;AAAA,MACT,EAAE,UAAU,WAAW,KAAK,MAAM,kBAAkB,GAAG,MAAM,eAAe,SAAS,KAAK,IAAI;AAAA,MAC9F,EAAE,UAAU,WAAW,KAAK,MAAM,uBAAuB,GAAG,MAAM,eAAe,QAAQ;AAAA,MACzF,EAAE,UAAU,WAAW,KAAK,MAAM,YAAY,GAAG,MAAM,eAAe,OAAO,KAAK,IAAI;AAAA,IACvF;AAEA,YAAQ,IAAI,iBAAiB,SAAS,IAAI;AAC1C,WAAO,YAAY,MAAM,eAAe,GAAG,KAAK;AAChD,WAAO,YAAY,MAAM,WAAW,GAAG,GAAG,KAAK;AAC/C,WAAO,YAAY,MAAM,WAAW,GAAG,GAAG,KAAK;AAE/C,cAAU;AAAA,MACT,EAAE,UAAU,WAAW,KAAK,MAAM,kBAAkB,GAAG,MAAM,eAAe,SAAS,KAAK,IAAI;AAAA,MAC9F,EAAE,UAAU,WAAW,KAAK,MAAM,uBAAuB,GAAG,MAAM,eAAe,SAAS,KAAK,IAAI;AAAA,MACnG,EAAE,UAAU,WAAW,KAAK,MAAM,YAAY,GAAG,MAAM,eAAe,OAAO,KAAK,IAAI;AAAA,IACvF;AAEA,YAAQ,IAAI,iBAAiB,SAAS,IAAI;AAC1C,WAAO,YAAY,MAAM,eAAe,GAAG,KAAK;AAChD,WAAO,YAAY,MAAM,WAAW,GAAG,GAAG,KAAK;AAC/C,WAAO,YAAY,MAAM,WAAW,GAAG,GAAG,KAAK;AAAA,EAChD,CAAC;AAED,WAAS,YAAY,YAA4E;AAGhG,WAAO,WAAW,IAAI,IAAI,IAAI,CAAC;AAC/B,WAAO,CAAC,WAAW,MAAO,IAAI,IAAI,CAAC;AACnC,WAAO,CAAC,WAAW,QAAY,IAAI,IAAI,CAAC;AAGxC,WAAO,WAAW,KAAK,KAAK,IAAI,CAAC;AACjC,WAAO,WAAW,SAAS,SAAS,IAAI,CAAC;AACzC,WAAO,WAAW,cAAc,cAAc,IAAI,CAAC;AAEnD,WAAO,WAAW,QAAQ,QAAQ,IAAI,CAAC;AACvC,WAAO,WAAW,YAAY,YAAY,IAAI,CAAC;AAC/C,WAAO,WAAW,kBAAkB,kBAAkB,IAAI,CAAC;AAE3D,WAAO,WAAW,0BAAiB,0BAAiB,IAAI,CAAC;AACzD,WAAO,WAAW,8BAAqB,8BAAqB,IAAI,CAAC;AAEjE,WAAO,CAAC,WAAW,cAAc,oBAAoB,IAAI,CAAC;AAC1D,WAAO,CAAC,WAAW,kBAAkB,yBAAyB,IAAI,CAAC;AACnE,WAAO,CAAC,WAAW,kBAAkB,kBAAkB,IAAI,CAAC;AAE5D,WAAO,WAAW,cAAc,cAAc,IAAI,CAAC;AACnD,WAAO,WAAW,0BAAiB,0BAAiB,IAAI,CAAC;AACzD,WAAO,WAAW,kBAAkB,kBAAkB,IAAI,CAAC;AAC3D,WAAO,WAAW,8BAAqB,8BAAqB,IAAI,CAAC;AACjE,WAAO,WAAW,kBAAkB,kBAAkB,IAAI,CAAC;AAAA,EAC5D;AA5BS;AA8BT,OAAK,wBAAwB,WAAY;AACxC,gBAAY,OAAO;AAGnB,WAAO,QAAQ,IAAI,KAAK,YAAY,EAAE,QAAQ,IAAI,KAAK,YAAY,EAAE,QAAQ,IAAI,CAAC;AAClF,WAAO,QAAQ,IAAI,KAAK,gBAAgB,EAAE,QAAQ,IAAI,KAAK,gBAAgB,EAAE,QAAQ,IAAI,CAAC;AAE1F,WAAO,QAAQ,IAAI,KAAK,wBAAe,EAAE,QAAQ,IAAI,KAAK,wBAAe,EAAE,QAAQ,IAAI,CAAC;AACxF,WAAO,QAAQ,IAAI,KAAK,4BAAmB,EAAE,QAAQ,IAAI,KAAK,4BAAmB,EAAE,QAAQ,IAAI,CAAC;AAEhG,WAAO,CAAC,QAAQ,IAAI,KAAK,YAAY,EAAE,QAAQ,IAAI,KAAK,kBAAkB,EAAE,QAAQ,IAAI,CAAC;AACzF,WAAO,CAAC,QAAQ,IAAI,KAAK,gBAAgB,EAAE,QAAQ,IAAI,KAAK,uBAAuB,EAAE,QAAQ,IAAI,CAAC;AAElG,WAAO,QAAQ,IAAI,KAAK,YAAY,EAAE,QAAQ,IAAI,KAAK,YAAY,EAAE,QAAQ,IAAI,CAAC;AAClF,WAAO,QAAQ,IAAI,KAAK,wBAAe,EAAE,QAAQ,IAAI,KAAK,wBAAe,EAAE,QAAQ,IAAI,CAAC;AACxF,WAAO,QAAQ,IAAI,KAAK,gBAAgB,EAAE,QAAQ,IAAI,KAAK,gBAAgB,EAAE,QAAQ,IAAI,CAAC;AAC1F,WAAO,QAAQ,IAAI,KAAK,4BAAmB,EAAE,QAAQ,IAAI,KAAK,4BAAmB,EAAE,QAAQ,IAAI,CAAC;AAChG,WAAO,QAAQ,IAAI,KAAK,gBAAgB,EAAE,QAAQ,IAAI,KAAK,gBAAgB,EAAE,QAAQ,IAAI,CAAC;AAAA,EAC3F,CAAC;AAED,OAAK,yBAAyB,WAAY;AACzC,QAAI,WAAW;AACd,aAAO,SAAS,kBAAkB,QAAQ,IAAI,CAAC;AAC/C,aAAO,SAAS,kBAAkB,YAAY,IAAI,CAAC;AACnD,aAAO,SAAS,kBAAkB,cAAc,IAAI,CAAC;AACrD,aAAO,SAAS,8BAAqB,wBAAe,IAAI,CAAC;AACzD,aAAO,SAAS,8BAAqB,0BAAiB,IAAI,CAAC;AAC3D,aAAO,SAAS,yBAAyB,gBAAgB,IAAI,CAAC;AAC9D,aAAO,SAAS,yBAAyB,kBAAkB,IAAI,CAAC;AAEhE,aAAO,SAAS,kBAAkB,QAAQ,IAAI,CAAC;AAC/C,aAAO,SAAS,kBAAkB,YAAY,IAAI,CAAC;AACnD,aAAO,SAAS,kBAAkB,cAAc,IAAI,CAAC;AAErD,aAAO,CAAC,SAAS,kBAAkB,QAAQ,IAAI,CAAC;AAChD,aAAO,CAAC,SAAS,kBAAkB,kBAAkB,IAAI,CAAC;AAC1D,aAAO,CAAC,SAAS,kBAAkB,kBAAkB,IAAI,CAAC;AAC1D,aAAO,CAAC,SAAS,yBAAyB,iBAAiB,IAAI,CAAC;AAChE,aAAO,CAAC,SAAS,yBAAyB,sBAAsB,IAAI,CAAC;AAAA,IACtE;AAEA,QAAI,eAAe,SAAS;AAC3B,aAAO,SAAS,cAAc,KAAK,IAAI,CAAC;AACxC,aAAO,SAAS,cAAc,SAAS,IAAI,CAAC;AAC5C,aAAO,SAAS,cAAc,UAAU,IAAI,CAAC;AAC7C,aAAO,SAAS,0BAAiB,qBAAY,IAAI,CAAC;AAClD,aAAO,SAAS,0BAAiB,sBAAa,IAAI,CAAC;AACnD,aAAO,SAAS,oBAAoB,YAAY,IAAI,CAAC;AACrD,aAAO,SAAS,oBAAoB,aAAa,IAAI,CAAC;AAEtD,aAAO,SAAS,cAAc,SAAS,IAAI,CAAC;AAC5C,aAAO,SAAS,cAAc,UAAU,IAAI,CAAC;AAC7C,aAAO,SAAS,0BAAiB,qBAAY,IAAI,CAAC;AAClD,aAAO,SAAS,0BAAiB,sBAAa,IAAI,CAAC;AAEnD,aAAO,CAAC,SAAS,cAAc,cAAc,IAAI,CAAC;AAClD,aAAO,CAAC,SAAS,oBAAoB,aAAa,IAAI,CAAC;AACvD,aAAO,CAAC,SAAS,oBAAoB,iBAAiB,IAAI,CAAC;AAAA,IAC5D;AAAA,EACD,CAAC;AAED,OAAK,gCAAgC,WAAY;AAGhD,gBAAY,eAAe;AAE3B,QAAI,WAAW;AACd,aAAO,gBAAgB,kBAAkB,QAAQ,IAAI,CAAC;AACtD,aAAO,gBAAgB,kBAAkB,YAAY,IAAI,CAAC;AAC1D,aAAO,gBAAgB,kBAAkB,cAAc,IAAI,CAAC;AAC5D,aAAO,gBAAgB,8BAAqB,wBAAe,IAAI,CAAC;AAChE,aAAO,gBAAgB,8BAAqB,0BAAiB,IAAI,CAAC;AAClE,aAAO,gBAAgB,yBAAyB,gBAAgB,IAAI,CAAC;AACrE,aAAO,gBAAgB,yBAAyB,kBAAkB,IAAI,CAAC;AACvE,aAAO,gBAAgB,kBAAkB,kBAAkB,IAAI,CAAC;AAChE,aAAO,gBAAgB,yBAAyB,yBAAyB,IAAI,CAAC;AAE9E,aAAO,gBAAgB,kBAAkB,QAAQ,IAAI,CAAC;AACtD,aAAO,gBAAgB,kBAAkB,YAAY,IAAI,CAAC;AAC1D,aAAO,gBAAgB,kBAAkB,cAAc,IAAI,CAAC;AAE5D,aAAO,CAAC,gBAAgB,kBAAkB,QAAQ,IAAI,CAAC;AACvD,aAAO,CAAC,gBAAgB,kBAAkB,kBAAkB,IAAI,CAAC;AACjE,aAAO,CAAC,gBAAgB,yBAAyB,iBAAiB,IAAI,CAAC;AACvE,aAAO,CAAC,gBAAgB,yBAAyB,sBAAsB,IAAI,CAAC;AAC5E,aAAO,CAAC,gBAAgB,yBAAyB,uBAAuB,IAAI,CAAC;AAC7E,aAAO,CAAC,gBAAgB,yBAAyB,uBAAuB,IAAI,CAAC;AAAA,IAC9E;AAEA,QAAI,eAAe,SAAS;AAC3B,aAAO,gBAAgB,cAAc,KAAK,IAAI,CAAC;AAC/C,aAAO,gBAAgB,cAAc,SAAS,IAAI,CAAC;AACnD,aAAO,gBAAgB,cAAc,UAAU,IAAI,CAAC;AACpD,aAAO,gBAAgB,0BAAiB,qBAAY,IAAI,CAAC;AACzD,aAAO,gBAAgB,0BAAiB,sBAAa,IAAI,CAAC;AAC1D,aAAO,gBAAgB,oBAAoB,YAAY,IAAI,CAAC;AAC5D,aAAO,gBAAgB,oBAAoB,aAAa,IAAI,CAAC;AAC7D,aAAO,gBAAgB,cAAc,cAAc,IAAI,CAAC;AAExD,aAAO,gBAAgB,cAAc,SAAS,IAAI,CAAC;AACnD,aAAO,gBAAgB,cAAc,UAAU,IAAI,CAAC;AACpD,aAAO,gBAAgB,0BAAiB,qBAAY,IAAI,CAAC;AACzD,aAAO,gBAAgB,0BAAiB,sBAAa,IAAI,CAAC;AAE1D,aAAO,CAAC,gBAAgB,oBAAoB,aAAa,IAAI,CAAC;AAC9D,aAAO,CAAC,gBAAgB,oBAAoB,iBAAiB,IAAI,CAAC;AAClE,aAAO,CAAC,gBAAgB,mBAAmB,iBAAiB,IAAI,CAAC;AACjE,aAAO,CAAC,gBAAgB,mBAAmB,iBAAiB,IAAI,CAAC;AAAA,IAClE;AAAA,EACD,CAAC;AAED,0CAAwC;AACzC,CAAC;",
  "names": []
}
