{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/files/test/common/nullFileSystemProvider.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { Disposable, IDisposable } from '../../../../base/common/lifecycle.js';\nimport { ReadableStreamEvents } from '../../../../base/common/stream.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { IFileDeleteOptions, IFileOpenOptions, IFileOverwriteOptions, FileSystemProviderCapabilities, FileType, IFileWriteOptions, IFileChange, IFileSystemProvider, IStat, IWatchOptions, IFileReadStreamOptions } from '../../common/files.js';\n\nexport class NullFileSystemProvider implements IFileSystemProvider {\n\n\tcapabilities: FileSystemProviderCapabilities = FileSystemProviderCapabilities.Readonly;\n\n\tprivate readonly _onDidChangeCapabilities = new Emitter<void>();\n\treadonly onDidChangeCapabilities: Event<void> = this._onDidChangeCapabilities.event;\n\n\tprivate readonly _onDidChangeFile = new Emitter<readonly IFileChange[]>();\n\treadonly onDidChangeFile: Event<readonly IFileChange[]> = this._onDidChangeFile.event;\n\n\tconstructor(private disposableFactory: () => IDisposable = () => Disposable.None) { }\n\n\temitFileChangeEvents(changes: IFileChange[]): void {\n\t\tthis._onDidChangeFile.fire(changes);\n\t}\n\n\tsetCapabilities(capabilities: FileSystemProviderCapabilities): void {\n\t\tthis.capabilities = capabilities;\n\n\t\tthis._onDidChangeCapabilities.fire();\n\t}\n\n\twatch(resource: URI, opts: IWatchOptions): IDisposable { return this.disposableFactory(); }\n\tasync stat(resource: URI): Promise<IStat> { return undefined!; }\n\tasync mkdir(resource: URI): Promise<void> { return undefined; }\n\tasync readdir(resource: URI): Promise<[string, FileType][]> { return undefined!; }\n\tasync delete(resource: URI, opts: IFileDeleteOptions): Promise<void> { return undefined; }\n\tasync rename(from: URI, to: URI, opts: IFileOverwriteOptions): Promise<void> { return undefined; }\n\tasync copy(from: URI, to: URI, opts: IFileOverwriteOptions): Promise<void> { return undefined; }\n\tasync readFile(resource: URI): Promise<Uint8Array> { return undefined!; }\n\treadFileStream(resource: URI, opts: IFileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array> { return undefined!; }\n\tasync writeFile(resource: URI, content: Uint8Array, opts: IFileWriteOptions): Promise<void> { return undefined; }\n\tasync open(resource: URI, opts: IFileOpenOptions): Promise<number> { return undefined!; }\n\tasync close(fd: number): Promise<void> { return undefined; }\n\tasync read(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> { return undefined!; }\n\tasync write(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> { return undefined!; }\n}\n"],
  "mappings": ";;AAKA,SAAS,yBAAyB;AAClC,SAAS,SAAS,aAAa;AAC/B,SAAS,YAAY,mBAAmB;AACxC,SAAS,4BAA4B;AACrC,SAAS,WAAW;AACpB,SAAS,oBAAoB,kBAAkB,uBAAuB,gCAAgC,UAAU,mBAAmB,aAAa,qBAAqB,OAAO,eAAe,8BAA8B;AAElN,MAAM,uBAAsD;AAAA,EAUlE,YAAoB,oBAAuC,MAAM,WAAW,MAAM;AAA9D;AAAA,EAAgE;AAAA,EAtBrF,OAYmE;AAAA;AAAA;AAAA,EAElE,eAA+C,+BAA+B;AAAA,EAE7D,2BAA2B,IAAI,QAAc;AAAA,EACrD,0BAAuC,KAAK,yBAAyB;AAAA,EAE7D,mBAAmB,IAAI,QAAgC;AAAA,EAC/D,kBAAiD,KAAK,iBAAiB;AAAA,EAIhF,qBAAqB,SAA8B;AAClD,SAAK,iBAAiB,KAAK,OAAO;AAAA,EACnC;AAAA,EAEA,gBAAgB,cAAoD;AACnE,SAAK,eAAe;AAEpB,SAAK,yBAAyB,KAAK;AAAA,EACpC;AAAA,EAEA,MAAM,UAAe,MAAkC;AAAE,WAAO,KAAK,kBAAkB;AAAA,EAAG;AAAA,EAC1F,MAAM,KAAK,UAA+B;AAAE,WAAO;AAAA,EAAY;AAAA,EAC/D,MAAM,MAAM,UAA8B;AAAE,WAAO;AAAA,EAAW;AAAA,EAC9D,MAAM,QAAQ,UAA8C;AAAE,WAAO;AAAA,EAAY;AAAA,EACjF,MAAM,OAAO,UAAe,MAAyC;AAAE,WAAO;AAAA,EAAW;AAAA,EACzF,MAAM,OAAO,MAAW,IAAS,MAA4C;AAAE,WAAO;AAAA,EAAW;AAAA,EACjG,MAAM,KAAK,MAAW,IAAS,MAA4C;AAAE,WAAO;AAAA,EAAW;AAAA,EAC/F,MAAM,SAAS,UAAoC;AAAE,WAAO;AAAA,EAAY;AAAA,EACxE,eAAe,UAAe,MAA8B,OAA4D;AAAE,WAAO;AAAA,EAAY;AAAA,EAC7I,MAAM,UAAU,UAAe,SAAqB,MAAwC;AAAE,WAAO;AAAA,EAAW;AAAA,EAChH,MAAM,KAAK,UAAe,MAAyC;AAAE,WAAO;AAAA,EAAY;AAAA,EACxF,MAAM,MAAM,IAA2B;AAAE,WAAO;AAAA,EAAW;AAAA,EAC3D,MAAM,KAAK,IAAY,KAAa,MAAkB,QAAgB,QAAiC;AAAE,WAAO;AAAA,EAAY;AAAA,EAC5H,MAAM,MAAM,IAAY,KAAa,MAAkB,QAAgB,QAAiC;AAAE,WAAO;AAAA,EAAY;AAC9H;",
  "names": []
}
