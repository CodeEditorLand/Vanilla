import"../../../../base/common/cancellation.js";import{Emitter as n}from"../../../../base/common/event.js";import{Disposable as s}from"../../../../base/common/lifecycle.js";import"../../../../base/common/stream.js";import"../../../../base/common/uri.js";import{FileSystemProviderCapabilities as a}from"../../common/files.js";class E{constructor(e=()=>s.None){this.disposableFactory=e}capabilities=a.Readonly;_onDidChangeCapabilities=new n;onDidChangeCapabilities=this._onDidChangeCapabilities.event;_onDidChangeFile=new n;onDidChangeFile=this._onDidChangeFile.event;emitFileChangeEvents(e){this._onDidChangeFile.fire(e)}setCapabilities(e){this.capabilities=e,this._onDidChangeCapabilities.fire()}watch(e,i){return this.disposableFactory()}async stat(e){}async mkdir(e){}async readdir(e){}async delete(e,i){}async rename(e,i,r){}async copy(e,i,r){}async readFile(e){}readFileStream(e,i,r){}async writeFile(e,i,r){}async open(e,i){}async close(e){}async read(e,i,r,t,o){}async write(e,i,r,t,o){}}export{E as NullFileSystemProvider};
