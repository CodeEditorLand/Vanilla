{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/files/test/browser/fileService.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { DeferredPromise, timeout } from '../../../../base/common/async.js';\nimport { bufferToReadable, bufferToStream, VSBuffer } from '../../../../base/common/buffer.js';\nimport { CancellationToken, CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { DisposableStore, IDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { isEqual } from '../../../../base/common/resources.js';\nimport { consumeStream, newWriteableStream, ReadableStreamEvents } from '../../../../base/common/stream.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\nimport { IFileOpenOptions, IFileReadStreamOptions, FileSystemProviderCapabilities, FileType, IFileSystemProviderCapabilitiesChangeEvent, IFileSystemProviderRegistrationEvent, IStat, IFileAtomicReadOptions, IFileAtomicWriteOptions, IFileAtomicDeleteOptions, IFileSystemProviderWithFileAtomicReadCapability, IFileSystemProviderWithFileAtomicDeleteCapability, IFileSystemProviderWithFileAtomicWriteCapability, IFileAtomicOptions, IFileChange, isFileSystemWatcher, FileChangesEvent, FileChangeType } from '../../common/files.js';\nimport { FileService } from '../../common/fileService.js';\nimport { NullFileSystemProvider } from '../common/nullFileSystemProvider.js';\nimport { NullLogService } from '../../../log/common/log.js';\n\nsuite('File Service', () => {\n\n\tconst disposables = new DisposableStore();\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\t});\n\n\ttest('provider registration', async () => {\n\t\tconst service = disposables.add(new FileService(new NullLogService()));\n\t\tconst resource = URI.parse('test://foo/bar');\n\t\tconst provider = new NullFileSystemProvider();\n\n\t\tassert.strictEqual(await service.canHandleResource(resource), false);\n\t\tassert.strictEqual(service.hasProvider(resource), false);\n\t\tassert.strictEqual(service.getProvider(resource.scheme), undefined);\n\n\t\tconst registrations: IFileSystemProviderRegistrationEvent[] = [];\n\t\tdisposables.add(service.onDidChangeFileSystemProviderRegistrations(e => {\n\t\t\tregistrations.push(e);\n\t\t}));\n\n\t\tconst capabilityChanges: IFileSystemProviderCapabilitiesChangeEvent[] = [];\n\t\tdisposables.add(service.onDidChangeFileSystemProviderCapabilities(e => {\n\t\t\tcapabilityChanges.push(e);\n\t\t}));\n\n\t\tlet registrationDisposable: IDisposable | undefined;\n\t\tlet callCount = 0;\n\t\tdisposables.add(service.onWillActivateFileSystemProvider(e => {\n\t\t\tcallCount++;\n\n\t\t\tif (e.scheme === 'test' && callCount === 1) {\n\t\t\t\te.join(new Promise(resolve => {\n\t\t\t\t\tregistrationDisposable = service.registerProvider('test', provider);\n\n\t\t\t\t\tresolve();\n\t\t\t\t}));\n\t\t\t}\n\t\t}));\n\n\t\tassert.strictEqual(await service.canHandleResource(resource), true);\n\t\tassert.strictEqual(service.hasProvider(resource), true);\n\t\tassert.strictEqual(service.getProvider(resource.scheme), provider);\n\n\t\tassert.strictEqual(registrations.length, 1);\n\t\tassert.strictEqual(registrations[0].scheme, 'test');\n\t\tassert.strictEqual(registrations[0].added, true);\n\t\tassert.ok(registrationDisposable);\n\n\t\tassert.strictEqual(capabilityChanges.length, 0);\n\n\t\tprovider.setCapabilities(FileSystemProviderCapabilities.FileFolderCopy);\n\t\tassert.strictEqual(capabilityChanges.length, 1);\n\t\tprovider.setCapabilities(FileSystemProviderCapabilities.Readonly);\n\t\tassert.strictEqual(capabilityChanges.length, 2);\n\n\t\tawait service.activateProvider('test');\n\t\tassert.strictEqual(callCount, 2); // activation is called again\n\n\t\tassert.strictEqual(service.hasCapability(resource, FileSystemProviderCapabilities.Readonly), true);\n\t\tassert.strictEqual(service.hasCapability(resource, FileSystemProviderCapabilities.FileOpenReadWriteClose), false);\n\n\t\tregistrationDisposable.dispose();\n\n\t\tassert.strictEqual(await service.canHandleResource(resource), false);\n\t\tassert.strictEqual(service.hasProvider(resource), false);\n\n\t\tassert.strictEqual(registrations.length, 2);\n\t\tassert.strictEqual(registrations[1].scheme, 'test');\n\t\tassert.strictEqual(registrations[1].added, false);\n\t});\n\n\ttest('watch', async () => {\n\t\tconst service = disposables.add(new FileService(new NullLogService()));\n\n\t\tlet disposeCounter = 0;\n\t\tdisposables.add(service.registerProvider('test', new NullFileSystemProvider(() => {\n\t\t\treturn toDisposable(() => {\n\t\t\t\tdisposeCounter++;\n\t\t\t});\n\t\t})));\n\t\tawait service.activateProvider('test');\n\n\t\tconst resource1 = URI.parse('test://foo/bar1');\n\t\tconst watcher1Disposable = service.watch(resource1);\n\n\t\tawait timeout(0); // service.watch() is async\n\t\tassert.strictEqual(disposeCounter, 0);\n\t\twatcher1Disposable.dispose();\n\t\tassert.strictEqual(disposeCounter, 1);\n\n\t\tdisposeCounter = 0;\n\t\tconst resource2 = URI.parse('test://foo/bar2');\n\t\tconst watcher2Disposable1 = service.watch(resource2);\n\t\tconst watcher2Disposable2 = service.watch(resource2);\n\t\tconst watcher2Disposable3 = service.watch(resource2);\n\n\t\tawait timeout(0); // service.watch() is async\n\t\tassert.strictEqual(disposeCounter, 0);\n\t\twatcher2Disposable1.dispose();\n\t\tassert.strictEqual(disposeCounter, 0);\n\t\twatcher2Disposable2.dispose();\n\t\tassert.strictEqual(disposeCounter, 0);\n\t\twatcher2Disposable3.dispose();\n\t\tassert.strictEqual(disposeCounter, 1);\n\n\t\tdisposeCounter = 0;\n\t\tconst resource3 = URI.parse('test://foo/bar3');\n\t\tconst watcher3Disposable1 = service.watch(resource3);\n\t\tconst watcher3Disposable2 = service.watch(resource3, { recursive: true, excludes: [] });\n\t\tconst watcher3Disposable3 = service.watch(resource3, { recursive: false, excludes: [], includes: [] });\n\n\t\tawait timeout(0); // service.watch() is async\n\t\tassert.strictEqual(disposeCounter, 0);\n\t\twatcher3Disposable1.dispose();\n\t\tassert.strictEqual(disposeCounter, 1);\n\t\twatcher3Disposable2.dispose();\n\t\tassert.strictEqual(disposeCounter, 2);\n\t\twatcher3Disposable3.dispose();\n\t\tassert.strictEqual(disposeCounter, 3);\n\n\t\tservice.dispose();\n\t});\n\n\ttest('watch - with corelation', async () => {\n\t\tconst service = disposables.add(new FileService(new NullLogService()));\n\n\t\tconst provider = new class extends NullFileSystemProvider {\n\t\t\tprivate readonly _testOnDidChangeFile = new Emitter<readonly IFileChange[]>();\n\t\t\toverride readonly onDidChangeFile: Event<readonly IFileChange[]> = this._testOnDidChangeFile.event;\n\n\t\t\tfireFileChange(changes: readonly IFileChange[]) {\n\t\t\t\tthis._testOnDidChangeFile.fire(changes);\n\t\t\t}\n\t\t};\n\n\t\tdisposables.add(service.registerProvider('test', provider));\n\t\tawait service.activateProvider('test');\n\n\t\tconst globalEvents: FileChangesEvent[] = [];\n\t\tdisposables.add(service.onDidFilesChange(e => {\n\t\t\tglobalEvents.push(e);\n\t\t}));\n\n\t\tconst watcher0 = disposables.add(service.watch(URI.parse('test://watch/folder1'), { recursive: true, excludes: [], includes: [] }));\n\t\tassert.strictEqual(isFileSystemWatcher(watcher0), false);\n\t\tconst watcher1 = disposables.add(service.watch(URI.parse('test://watch/folder2'), { recursive: true, excludes: [], includes: [], correlationId: 100 }));\n\t\tassert.strictEqual(isFileSystemWatcher(watcher1), true);\n\t\tconst watcher2 = disposables.add(service.watch(URI.parse('test://watch/folder3'), { recursive: true, excludes: [], includes: [], correlationId: 200 }));\n\t\tassert.strictEqual(isFileSystemWatcher(watcher2), true);\n\n\t\tconst watcher1Events: FileChangesEvent[] = [];\n\t\tdisposables.add(watcher1.onDidChange(e => {\n\t\t\twatcher1Events.push(e);\n\t\t}));\n\n\t\tconst watcher2Events: FileChangesEvent[] = [];\n\t\tdisposables.add(watcher2.onDidChange(e => {\n\t\t\twatcher2Events.push(e);\n\t\t}));\n\n\t\tprovider.fireFileChange([{ resource: URI.parse('test://watch/folder1'), type: FileChangeType.ADDED }]);\n\t\tprovider.fireFileChange([{ resource: URI.parse('test://watch/folder2'), type: FileChangeType.ADDED, cId: 100 }]);\n\t\tprovider.fireFileChange([{ resource: URI.parse('test://watch/folder2'), type: FileChangeType.ADDED, cId: 100 }]);\n\t\tprovider.fireFileChange([{ resource: URI.parse('test://watch/folder3/file'), type: FileChangeType.UPDATED, cId: 200 }]);\n\t\tprovider.fireFileChange([{ resource: URI.parse('test://watch/folder3'), type: FileChangeType.UPDATED, cId: 200 }]);\n\n\t\tprovider.fireFileChange([{ resource: URI.parse('test://watch/folder4'), type: FileChangeType.ADDED, cId: 50 }]);\n\t\tprovider.fireFileChange([{ resource: URI.parse('test://watch/folder4'), type: FileChangeType.ADDED, cId: 60 }]);\n\t\tprovider.fireFileChange([{ resource: URI.parse('test://watch/folder4'), type: FileChangeType.ADDED, cId: 70 }]);\n\n\t\tassert.strictEqual(globalEvents.length, 1);\n\t\tassert.strictEqual(watcher1Events.length, 2);\n\t\tassert.strictEqual(watcher2Events.length, 2);\n\t});\n\n\ttest('error from readFile bubbles through (https://github.com/microsoft/vscode/issues/118060) - async', async () => {\n\t\ttestReadErrorBubbles(true);\n\t});\n\n\ttest('error from readFile bubbles through (https://github.com/microsoft/vscode/issues/118060)', async () => {\n\t\ttestReadErrorBubbles(false);\n\t});\n\n\tasync function testReadErrorBubbles(async: boolean) {\n\t\tconst service = disposables.add(new FileService(new NullLogService()));\n\n\t\tconst provider = new class extends NullFileSystemProvider {\n\t\t\toverride async stat(resource: URI): Promise<IStat> {\n\t\t\t\treturn {\n\t\t\t\t\tmtime: Date.now(),\n\t\t\t\t\tctime: Date.now(),\n\t\t\t\t\tsize: 100,\n\t\t\t\t\ttype: FileType.File\n\t\t\t\t};\n\t\t\t}\n\n\t\t\toverride readFile(resource: URI): Promise<Uint8Array> {\n\t\t\t\tif (async) {\n\t\t\t\t\treturn timeout(5, CancellationToken.None).then(() => { throw new Error('failed'); });\n\t\t\t\t}\n\n\t\t\t\tthrow new Error('failed');\n\t\t\t}\n\n\t\t\toverride open(resource: URI, opts: IFileOpenOptions): Promise<number> {\n\t\t\t\tif (async) {\n\t\t\t\t\treturn timeout(5, CancellationToken.None).then(() => { throw new Error('failed'); });\n\t\t\t\t}\n\n\t\t\t\tthrow new Error('failed');\n\t\t\t}\n\n\t\t\toverride readFileStream(resource: URI, opts: IFileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array> {\n\t\t\t\tif (async) {\n\t\t\t\t\tconst stream = newWriteableStream<Uint8Array>(chunk => chunk[0]);\n\t\t\t\t\ttimeout(5, CancellationToken.None).then(() => stream.error(new Error('failed')));\n\n\t\t\t\t\treturn stream;\n\n\t\t\t\t}\n\n\t\t\t\tthrow new Error('failed');\n\t\t\t}\n\t\t};\n\n\t\tdisposables.add(service.registerProvider('test', provider));\n\n\t\tfor (const capabilities of [FileSystemProviderCapabilities.FileReadWrite, FileSystemProviderCapabilities.FileReadStream, FileSystemProviderCapabilities.FileOpenReadWriteClose]) {\n\t\t\tprovider.setCapabilities(capabilities);\n\n\t\t\tlet e1;\n\t\t\ttry {\n\t\t\t\tawait service.readFile(URI.parse('test://foo/bar'));\n\t\t\t} catch (error) {\n\t\t\t\te1 = error;\n\t\t\t}\n\n\t\t\tassert.ok(e1);\n\n\t\t\tlet e2;\n\t\t\ttry {\n\t\t\t\tconst stream = await service.readFileStream(URI.parse('test://foo/bar'));\n\t\t\t\tawait consumeStream(stream.value, chunk => chunk[0]);\n\t\t\t} catch (error) {\n\t\t\t\te2 = error;\n\t\t\t}\n\n\t\t\tassert.ok(e2);\n\t\t}\n\t}\n\n\ttest('readFile/readFileStream supports cancellation (https://github.com/microsoft/vscode/issues/138805)', async () => {\n\t\tconst service = disposables.add(new FileService(new NullLogService()));\n\n\t\tlet readFileStreamReady: DeferredPromise<void> | undefined = undefined;\n\n\t\tconst provider = new class extends NullFileSystemProvider {\n\n\t\t\toverride async stat(resource: URI): Promise<IStat> {\n\t\t\t\treturn {\n\t\t\t\t\tmtime: Date.now(),\n\t\t\t\t\tctime: Date.now(),\n\t\t\t\t\tsize: 100,\n\t\t\t\t\ttype: FileType.File\n\t\t\t\t};\n\t\t\t}\n\n\t\t\toverride readFileStream(resource: URI, opts: IFileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array> {\n\t\t\t\tconst stream = newWriteableStream<Uint8Array>(chunk => chunk[0]);\n\t\t\t\tdisposables.add(token.onCancellationRequested(() => {\n\t\t\t\t\tstream.error(new Error('Expected cancellation'));\n\t\t\t\t\tstream.end();\n\t\t\t\t}));\n\n\t\t\t\treadFileStreamReady!.complete();\n\n\t\t\t\treturn stream;\n\t\t\t}\n\t\t};\n\n\t\tdisposables.add(service.registerProvider('test', provider));\n\n\t\tprovider.setCapabilities(FileSystemProviderCapabilities.FileReadStream);\n\n\t\tlet e1;\n\t\ttry {\n\t\t\tconst cts = new CancellationTokenSource();\n\t\t\treadFileStreamReady = new DeferredPromise();\n\t\t\tconst promise = service.readFile(URI.parse('test://foo/bar'), undefined, cts.token);\n\t\t\tawait Promise.all([readFileStreamReady.p.then(() => cts.cancel()), promise]);\n\t\t} catch (error) {\n\t\t\te1 = error;\n\t\t}\n\n\t\tassert.ok(e1);\n\n\t\tlet e2;\n\t\ttry {\n\t\t\tconst cts = new CancellationTokenSource();\n\t\t\treadFileStreamReady = new DeferredPromise();\n\t\t\tconst stream = await service.readFileStream(URI.parse('test://foo/bar'), undefined, cts.token);\n\t\t\tawait Promise.all([readFileStreamReady.p.then(() => cts.cancel()), consumeStream(stream.value, chunk => chunk[0])]);\n\t\t} catch (error) {\n\t\t\te2 = error;\n\t\t}\n\n\t\tassert.ok(e2);\n\t});\n\n\ttest('enforced atomic read/write/delete', async () => {\n\t\tconst service = disposables.add(new FileService(new NullLogService()));\n\n\t\tconst atomicResource = URI.parse('test://foo/bar/atomic');\n\t\tconst nonAtomicResource = URI.parse('test://foo/nonatomic');\n\n\t\tlet atomicReadCounter = 0;\n\t\tlet atomicWriteCounter = 0;\n\t\tlet atomicDeleteCounter = 0;\n\n\t\tconst provider = new class extends NullFileSystemProvider implements IFileSystemProviderWithFileAtomicReadCapability, IFileSystemProviderWithFileAtomicWriteCapability, IFileSystemProviderWithFileAtomicDeleteCapability {\n\n\t\t\toverride async stat(resource: URI): Promise<IStat> {\n\t\t\t\treturn {\n\t\t\t\t\ttype: FileType.File,\n\t\t\t\t\tctime: Date.now(),\n\t\t\t\t\tmtime: Date.now(),\n\t\t\t\t\tsize: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\toverride async readFile(resource: URI, opts?: IFileAtomicReadOptions): Promise<Uint8Array> {\n\t\t\t\tif (opts?.atomic) {\n\t\t\t\t\tatomicReadCounter++;\n\t\t\t\t}\n\t\t\t\treturn new Uint8Array();\n\t\t\t}\n\n\t\t\toverride readFileStream(resource: URI, opts: IFileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array> {\n\t\t\t\treturn newWriteableStream<Uint8Array>(chunk => chunk[0]);\n\t\t\t}\n\n\t\t\tenforceAtomicReadFile(resource: URI): boolean {\n\t\t\t\treturn isEqual(resource, atomicResource);\n\t\t\t}\n\n\t\t\toverride async writeFile(resource: URI, content: Uint8Array, opts: IFileAtomicWriteOptions): Promise<void> {\n\t\t\t\tif (opts.atomic) {\n\t\t\t\t\tatomicWriteCounter++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tenforceAtomicWriteFile(resource: URI): IFileAtomicOptions | false {\n\t\t\t\treturn isEqual(resource, atomicResource) ? { postfix: '.tmp' } : false;\n\t\t\t}\n\n\t\t\toverride async delete(resource: URI, opts: IFileAtomicDeleteOptions): Promise<void> {\n\t\t\t\tif (opts.atomic) {\n\t\t\t\t\tatomicDeleteCounter++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tenforceAtomicDelete(resource: URI): IFileAtomicOptions | false {\n\t\t\t\treturn isEqual(resource, atomicResource) ? { postfix: '.tmp' } : false;\n\t\t\t}\n\t\t};\n\n\t\tprovider.setCapabilities(\n\t\t\tFileSystemProviderCapabilities.FileReadWrite |\n\t\t\tFileSystemProviderCapabilities.FileOpenReadWriteClose |\n\t\t\tFileSystemProviderCapabilities.FileReadStream |\n\t\t\tFileSystemProviderCapabilities.FileAtomicRead |\n\t\t\tFileSystemProviderCapabilities.FileAtomicWrite |\n\t\t\tFileSystemProviderCapabilities.FileAtomicDelete\n\t\t);\n\n\t\tdisposables.add(service.registerProvider('test', provider));\n\n\t\tawait service.readFile(atomicResource);\n\t\tawait service.readFile(nonAtomicResource);\n\t\tawait service.readFileStream(atomicResource);\n\t\tawait service.readFileStream(nonAtomicResource);\n\n\t\tawait service.writeFile(atomicResource, VSBuffer.fromString(''));\n\t\tawait service.writeFile(nonAtomicResource, VSBuffer.fromString(''));\n\n\t\tawait service.writeFile(atomicResource, bufferToStream(VSBuffer.fromString('')));\n\t\tawait service.writeFile(nonAtomicResource, bufferToStream(VSBuffer.fromString('')));\n\n\t\tawait service.writeFile(atomicResource, bufferToReadable(VSBuffer.fromString('')));\n\t\tawait service.writeFile(nonAtomicResource, bufferToReadable(VSBuffer.fromString('')));\n\n\t\tawait service.del(atomicResource);\n\t\tawait service.del(nonAtomicResource);\n\n\t\tassert.strictEqual(atomicReadCounter, 2);\n\t\tassert.strictEqual(atomicWriteCounter, 3);\n\t\tassert.strictEqual(atomicDeleteCounter, 1);\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"],
  "mappings": "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",
  "names": []
}
