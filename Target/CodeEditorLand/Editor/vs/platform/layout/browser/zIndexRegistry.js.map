{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/layout/browser/zIndexRegistry.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tclearNode,\n\tcreateCSSRule,\n\tcreateStyleSheet,\n} from \"../../../base/browser/dom.js\";\nimport { RunOnceScheduler } from \"../../../base/common/async.js\";\n\nexport enum ZIndex {\n\tBase = 0,\n\tSash = 35,\n\tSuggestWidget = 40,\n\tHover = 50,\n\tDragImage = 1000,\n\tMenubarMenuItemsHolder = 2000, // quick-input-widget\n\tContextView = 2500,\n\tModalDialog = 2600,\n\tPaneDropOverlay = 10000,\n}\n\nconst ZIndexValues = Object.keys(ZIndex)\n\t.filter((key) => !isNaN(Number(key)))\n\t.map((key) => Number(key))\n\t.sort((a, b) => b - a);\nfunction findBase(z: number) {\n\tfor (const zi of ZIndexValues) {\n\t\tif (z >= zi) {\n\t\t\treturn zi;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\nclass ZIndexRegistry {\n\tprivate styleSheet: HTMLStyleElement;\n\tprivate zIndexMap: Map<string, number>;\n\tprivate scheduler: RunOnceScheduler;\n\tconstructor() {\n\t\tthis.styleSheet = createStyleSheet();\n\t\tthis.zIndexMap = new Map<string, number>();\n\t\tthis.scheduler = new RunOnceScheduler(\n\t\t\t() => this.updateStyleElement(),\n\t\t\t200,\n\t\t);\n\t}\n\n\tregisterZIndex(relativeLayer: ZIndex, z: number, name: string): string {\n\t\tif (this.zIndexMap.get(name)) {\n\t\t\tthrow new Error(\n\t\t\t\t`z-index with name ${name} has already been registered.`,\n\t\t\t);\n\t\t}\n\n\t\tconst proposedZValue = relativeLayer + z;\n\t\tif (findBase(proposedZValue) !== relativeLayer) {\n\t\t\tthrow new Error(\n\t\t\t\t`Relative layer: ${relativeLayer} + z-index: ${z} exceeds next layer ${proposedZValue}.`,\n\t\t\t);\n\t\t}\n\n\t\tthis.zIndexMap.set(name, proposedZValue);\n\t\tthis.scheduler.schedule();\n\t\treturn this.getVarName(name);\n\t}\n\n\tprivate getVarName(name: string): string {\n\t\treturn `--z-index-${name}`;\n\t}\n\n\tprivate updateStyleElement(): void {\n\t\tclearNode(this.styleSheet);\n\t\tlet ruleBuilder = \"\";\n\t\tthis.zIndexMap.forEach((zIndex, name) => {\n\t\t\truleBuilder += `${this.getVarName(name)}: ${zIndex};\\n`;\n\t\t});\n\t\tcreateCSSRule(\":root\", ruleBuilder, this.styleSheet);\n\t}\n}\n\nconst zIndexRegistry = new ZIndexRegistry();\n\nexport function registerZIndex(\n\trelativeLayer: ZIndex,\n\tz: number,\n\tname: string,\n): string {\n\treturn zIndexRegistry.registerZIndex(relativeLayer, z, name);\n}\n"],
  "mappings": ";;AAKA;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,wBAAwB;AAE1B,IAAK,SAAL,kBAAKA,YAAL;AACN,EAAAA,gBAAA,UAAO,KAAP;AACA,EAAAA,gBAAA,UAAO,MAAP;AACA,EAAAA,gBAAA,mBAAgB,MAAhB;AACA,EAAAA,gBAAA,WAAQ,MAAR;AACA,EAAAA,gBAAA,eAAY,OAAZ;AACA,EAAAA,gBAAA,4BAAyB,OAAzB;AACA,EAAAA,gBAAA,iBAAc,QAAd;AACA,EAAAA,gBAAA,iBAAc,QAAd;AACA,EAAAA,gBAAA,qBAAkB,OAAlB;AATW,SAAAA;AAAA,GAAA;AAYZ,MAAM,eAAe,OAAO,KAAK,MAAM,EACrC,OAAO,CAAC,QAAQ,CAAC,MAAM,OAAO,GAAG,CAAC,CAAC,EACnC,IAAI,CAAC,QAAQ,OAAO,GAAG,CAAC,EACxB,KAAK,CAAC,GAAG,MAAM,IAAI,CAAC;AACtB,SAAS,SAAS,GAAW;AAC5B,aAAW,MAAM,cAAc;AAC9B,QAAI,KAAK,IAAI;AACZ,aAAO;AAAA,IACR;AAAA,EACD;AAEA,SAAO;AACR;AARS;AAUT,MAAM,eAAe;AAAA,EAtCrB,OAsCqB;AAAA;AAAA;AAAA,EACZ;AAAA,EACA;AAAA,EACA;AAAA,EACR,cAAc;AACb,SAAK,aAAa,iBAAiB;AACnC,SAAK,YAAY,oBAAI,IAAoB;AACzC,SAAK,YAAY,IAAI;AAAA,MACpB,MAAM,KAAK,mBAAmB;AAAA,MAC9B;AAAA,IACD;AAAA,EACD;AAAA,EAEA,eAAe,eAAuB,GAAW,MAAsB;AACtE,QAAI,KAAK,UAAU,IAAI,IAAI,GAAG;AAC7B,YAAM,IAAI;AAAA,QACT,qBAAqB,IAAI;AAAA,MAC1B;AAAA,IACD;AAEA,UAAM,iBAAiB,gBAAgB;AACvC,QAAI,SAAS,cAAc,MAAM,eAAe;AAC/C,YAAM,IAAI;AAAA,QACT,mBAAmB,aAAa,eAAe,CAAC,uBAAuB,cAAc;AAAA,MACtF;AAAA,IACD;AAEA,SAAK,UAAU,IAAI,MAAM,cAAc;AACvC,SAAK,UAAU,SAAS;AACxB,WAAO,KAAK,WAAW,IAAI;AAAA,EAC5B;AAAA,EAEQ,WAAW,MAAsB;AACxC,WAAO,aAAa,IAAI;AAAA,EACzB;AAAA,EAEQ,qBAA2B;AAClC,cAAU,KAAK,UAAU;AACzB,QAAI,cAAc;AAClB,SAAK,UAAU,QAAQ,CAAC,QAAQ,SAAS;AACxC,qBAAe,GAAG,KAAK,WAAW,IAAI,CAAC,KAAK,MAAM;AAAA;AAAA,IACnD,CAAC;AACD,kBAAc,SAAS,aAAa,KAAK,UAAU;AAAA,EACpD;AACD;AAEA,MAAM,iBAAiB,IAAI,eAAe;AAEnC,SAAS,eACf,eACA,GACA,MACS;AACT,SAAO,eAAe,eAAe,eAAe,GAAG,IAAI;AAC5D;AANgB;",
  "names": ["ZIndex"]
}
