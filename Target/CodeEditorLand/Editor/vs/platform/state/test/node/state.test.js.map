{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/state/test/node/state.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { readFileSync, promises } from 'fs';\nimport { tmpdir } from 'os';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { join } from '../../../../base/common/path.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { Promises, writeFileSync } from '../../../../base/node/pfs.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\nimport { flakySuite, getRandomTestPath } from '../../../../base/test/node/testUtils.js';\nimport { IFileService } from '../../../files/common/files.js';\nimport { FileService } from '../../../files/common/fileService.js';\nimport { DiskFileSystemProvider } from '../../../files/node/diskFileSystemProvider.js';\nimport { ILogService, NullLogService } from '../../../log/common/log.js';\nimport { FileStorage, SaveStrategy } from '../../node/stateService.js';\n\nflakySuite('StateService', () => {\n\n\tlet testDir: string;\n\tlet fileService: IFileService;\n\tlet logService: ILogService;\n\tlet diskFileSystemProvider: DiskFileSystemProvider;\n\n\tconst disposables = new DisposableStore();\n\n\tsetup(() => {\n\t\ttestDir = getRandomTestPath(tmpdir(), 'vsctests', 'statemainservice');\n\n\t\tlogService = new NullLogService();\n\n\t\tfileService = disposables.add(new FileService(logService));\n\t\tdiskFileSystemProvider = disposables.add(new DiskFileSystemProvider(logService));\n\t\tdisposables.add(fileService.registerProvider(Schemas.file, diskFileSystemProvider));\n\n\t\treturn promises.mkdir(testDir, { recursive: true });\n\t});\n\n\tteardown(() => {\n\t\tdisposables.clear();\n\n\t\treturn Promises.rm(testDir);\n\t});\n\n\ttest('Basics (delayed strategy)', async function () {\n\t\tconst storageFile = join(testDir, 'storage.json');\n\t\twriteFileSync(storageFile, '');\n\n\t\tlet service = disposables.add(new FileStorage(URI.file(storageFile), SaveStrategy.DELAYED, logService, fileService));\n\t\tawait service.init();\n\n\t\tservice.setItem('some.key', 'some.value');\n\t\tassert.strictEqual(service.getItem('some.key'), 'some.value');\n\n\t\tservice.removeItem('some.key');\n\t\tassert.strictEqual(service.getItem('some.key', 'some.default'), 'some.default');\n\n\t\tassert.ok(!service.getItem('some.unknonw.key'));\n\n\t\tservice.setItem('some.other.key', 'some.other.value');\n\n\t\tawait service.close();\n\n\t\tservice = disposables.add(new FileStorage(URI.file(storageFile), SaveStrategy.DELAYED, logService, fileService));\n\t\tawait service.init();\n\n\t\tassert.strictEqual(service.getItem('some.other.key'), 'some.other.value');\n\n\t\tservice.setItem('some.other.key', 'some.other.value');\n\t\tassert.strictEqual(service.getItem('some.other.key'), 'some.other.value');\n\n\t\tservice.setItem('some.undefined.key', undefined);\n\t\tassert.strictEqual(service.getItem('some.undefined.key', 'some.default'), 'some.default');\n\n\t\tservice.setItem('some.null.key', null);\n\t\tassert.strictEqual(service.getItem('some.null.key', 'some.default'), 'some.default');\n\n\t\tservice.setItems([\n\t\t\t{ key: 'some.setItems.key1', data: 'some.value' },\n\t\t\t{ key: 'some.setItems.key2', data: 0 },\n\t\t\t{ key: 'some.setItems.key3', data: true },\n\t\t\t{ key: 'some.setItems.key4', data: null },\n\t\t\t{ key: 'some.setItems.key5', data: undefined }\n\t\t]);\n\n\t\tassert.strictEqual(service.getItem('some.setItems.key1'), 'some.value');\n\t\tassert.strictEqual(service.getItem('some.setItems.key2'), 0);\n\t\tassert.strictEqual(service.getItem('some.setItems.key3'), true);\n\t\tassert.strictEqual(service.getItem('some.setItems.key4'), undefined);\n\t\tassert.strictEqual(service.getItem('some.setItems.key5'), undefined);\n\n\t\tservice.setItems([\n\t\t\t{ key: 'some.setItems.key1', data: undefined },\n\t\t\t{ key: 'some.setItems.key2', data: undefined },\n\t\t\t{ key: 'some.setItems.key3', data: undefined },\n\t\t\t{ key: 'some.setItems.key4', data: null },\n\t\t\t{ key: 'some.setItems.key5', data: undefined }\n\t\t]);\n\n\t\tassert.strictEqual(service.getItem('some.setItems.key1'), undefined);\n\t\tassert.strictEqual(service.getItem('some.setItems.key2'), undefined);\n\t\tassert.strictEqual(service.getItem('some.setItems.key3'), undefined);\n\t\tassert.strictEqual(service.getItem('some.setItems.key4'), undefined);\n\t\tassert.strictEqual(service.getItem('some.setItems.key5'), undefined);\n\n\t\treturn service.close();\n\t});\n\n\ttest('Basics (immediate strategy)', async function () {\n\t\tconst storageFile = join(testDir, 'storage.json');\n\t\twriteFileSync(storageFile, '');\n\n\t\tlet service = disposables.add(new FileStorage(URI.file(storageFile), SaveStrategy.IMMEDIATE, logService, fileService));\n\t\tawait service.init();\n\n\t\tservice.setItem('some.key', 'some.value');\n\t\tassert.strictEqual(service.getItem('some.key'), 'some.value');\n\n\t\tservice.removeItem('some.key');\n\t\tassert.strictEqual(service.getItem('some.key', 'some.default'), 'some.default');\n\n\t\tassert.ok(!service.getItem('some.unknonw.key'));\n\n\t\tservice.setItem('some.other.key', 'some.other.value');\n\n\t\tawait service.close();\n\n\t\tservice = disposables.add(new FileStorage(URI.file(storageFile), SaveStrategy.IMMEDIATE, logService, fileService));\n\t\tawait service.init();\n\n\t\tassert.strictEqual(service.getItem('some.other.key'), 'some.other.value');\n\n\t\tservice.setItem('some.other.key', 'some.other.value');\n\t\tassert.strictEqual(service.getItem('some.other.key'), 'some.other.value');\n\n\t\tservice.setItem('some.undefined.key', undefined);\n\t\tassert.strictEqual(service.getItem('some.undefined.key', 'some.default'), 'some.default');\n\n\t\tservice.setItem('some.null.key', null);\n\t\tassert.strictEqual(service.getItem('some.null.key', 'some.default'), 'some.default');\n\n\t\tservice.setItems([\n\t\t\t{ key: 'some.setItems.key1', data: 'some.value' },\n\t\t\t{ key: 'some.setItems.key2', data: 0 },\n\t\t\t{ key: 'some.setItems.key3', data: true },\n\t\t\t{ key: 'some.setItems.key4', data: null },\n\t\t\t{ key: 'some.setItems.key5', data: undefined }\n\t\t]);\n\n\t\tassert.strictEqual(service.getItem('some.setItems.key1'), 'some.value');\n\t\tassert.strictEqual(service.getItem('some.setItems.key2'), 0);\n\t\tassert.strictEqual(service.getItem('some.setItems.key3'), true);\n\t\tassert.strictEqual(service.getItem('some.setItems.key4'), undefined);\n\t\tassert.strictEqual(service.getItem('some.setItems.key5'), undefined);\n\n\t\tservice.setItems([\n\t\t\t{ key: 'some.setItems.key1', data: undefined },\n\t\t\t{ key: 'some.setItems.key2', data: undefined },\n\t\t\t{ key: 'some.setItems.key3', data: undefined },\n\t\t\t{ key: 'some.setItems.key4', data: null },\n\t\t\t{ key: 'some.setItems.key5', data: undefined }\n\t\t]);\n\n\t\tassert.strictEqual(service.getItem('some.setItems.key1'), undefined);\n\t\tassert.strictEqual(service.getItem('some.setItems.key2'), undefined);\n\t\tassert.strictEqual(service.getItem('some.setItems.key3'), undefined);\n\t\tassert.strictEqual(service.getItem('some.setItems.key4'), undefined);\n\t\tassert.strictEqual(service.getItem('some.setItems.key5'), undefined);\n\n\t\treturn service.close();\n\t});\n\n\ttest('Multiple ops are buffered and applied', async function () {\n\t\tconst storageFile = join(testDir, 'storage.json');\n\t\twriteFileSync(storageFile, '');\n\n\t\tlet service = disposables.add(new FileStorage(URI.file(storageFile), SaveStrategy.DELAYED, logService, fileService));\n\t\tawait service.init();\n\n\t\tservice.setItem('some.key1', 'some.value1');\n\t\tservice.setItem('some.key2', 'some.value2');\n\t\tservice.setItem('some.key3', 'some.value3');\n\t\tservice.setItem('some.key4', 'some.value4');\n\t\tservice.removeItem('some.key4');\n\n\t\tassert.strictEqual(service.getItem('some.key1'), 'some.value1');\n\t\tassert.strictEqual(service.getItem('some.key2'), 'some.value2');\n\t\tassert.strictEqual(service.getItem('some.key3'), 'some.value3');\n\t\tassert.strictEqual(service.getItem('some.key4'), undefined);\n\n\t\tawait service.close();\n\n\t\tservice = disposables.add(new FileStorage(URI.file(storageFile), SaveStrategy.DELAYED, logService, fileService));\n\t\tawait service.init();\n\n\t\tassert.strictEqual(service.getItem('some.key1'), 'some.value1');\n\t\tassert.strictEqual(service.getItem('some.key2'), 'some.value2');\n\t\tassert.strictEqual(service.getItem('some.key3'), 'some.value3');\n\t\tassert.strictEqual(service.getItem('some.key4'), undefined);\n\n\t\treturn service.close();\n\t});\n\n\ttest('Multiple ops (Immediate Strategy)', async function () {\n\t\tconst storageFile = join(testDir, 'storage.json');\n\t\twriteFileSync(storageFile, '');\n\n\t\tlet service = disposables.add(new FileStorage(URI.file(storageFile), SaveStrategy.IMMEDIATE, logService, fileService));\n\t\tawait service.init();\n\n\t\tservice.setItem('some.key1', 'some.value1');\n\t\tservice.setItem('some.key2', 'some.value2');\n\t\tservice.setItem('some.key3', 'some.value3');\n\t\tservice.setItem('some.key4', 'some.value4');\n\t\tservice.removeItem('some.key4');\n\n\t\tassert.strictEqual(service.getItem('some.key1'), 'some.value1');\n\t\tassert.strictEqual(service.getItem('some.key2'), 'some.value2');\n\t\tassert.strictEqual(service.getItem('some.key3'), 'some.value3');\n\t\tassert.strictEqual(service.getItem('some.key4'), undefined);\n\n\t\tawait service.close();\n\n\t\tservice = disposables.add(new FileStorage(URI.file(storageFile), SaveStrategy.IMMEDIATE, logService, fileService));\n\t\tawait service.init();\n\n\t\tassert.strictEqual(service.getItem('some.key1'), 'some.value1');\n\t\tassert.strictEqual(service.getItem('some.key2'), 'some.value2');\n\t\tassert.strictEqual(service.getItem('some.key3'), 'some.value3');\n\t\tassert.strictEqual(service.getItem('some.key4'), undefined);\n\n\t\treturn service.close();\n\t});\n\n\ttest('Used before init', async function () {\n\t\tconst storageFile = join(testDir, 'storage.json');\n\t\twriteFileSync(storageFile, '');\n\n\t\tconst service = disposables.add(new FileStorage(URI.file(storageFile), SaveStrategy.DELAYED, logService, fileService));\n\n\t\tservice.setItem('some.key1', 'some.value1');\n\t\tservice.setItem('some.key2', 'some.value2');\n\t\tservice.setItem('some.key3', 'some.value3');\n\t\tservice.setItem('some.key4', 'some.value4');\n\t\tservice.removeItem('some.key4');\n\n\t\tassert.strictEqual(service.getItem('some.key1'), 'some.value1');\n\t\tassert.strictEqual(service.getItem('some.key2'), 'some.value2');\n\t\tassert.strictEqual(service.getItem('some.key3'), 'some.value3');\n\t\tassert.strictEqual(service.getItem('some.key4'), undefined);\n\n\t\tawait service.init();\n\n\t\tassert.strictEqual(service.getItem('some.key1'), 'some.value1');\n\t\tassert.strictEqual(service.getItem('some.key2'), 'some.value2');\n\t\tassert.strictEqual(service.getItem('some.key3'), 'some.value3');\n\t\tassert.strictEqual(service.getItem('some.key4'), undefined);\n\n\t\treturn service.close();\n\t});\n\n\ttest('Used after close', async function () {\n\t\tconst storageFile = join(testDir, 'storage.json');\n\t\twriteFileSync(storageFile, '');\n\n\t\tconst service = disposables.add(new FileStorage(URI.file(storageFile), SaveStrategy.DELAYED, logService, fileService));\n\n\t\tawait service.init();\n\n\t\tservice.setItem('some.key1', 'some.value1');\n\t\tservice.setItem('some.key2', 'some.value2');\n\t\tservice.setItem('some.key3', 'some.value3');\n\t\tservice.setItem('some.key4', 'some.value4');\n\n\t\tawait service.close();\n\n\t\tservice.setItem('some.key5', 'some.marker');\n\n\t\tconst contents = readFileSync(storageFile).toString();\n\t\tassert.ok(contents.includes('some.value1'));\n\t\tassert.ok(!contents.includes('some.marker'));\n\n\t\treturn service.close();\n\t});\n\n\ttest('Closed before init', async function () {\n\t\tconst storageFile = join(testDir, 'storage.json');\n\t\twriteFileSync(storageFile, '');\n\n\t\tconst service = disposables.add(new FileStorage(URI.file(storageFile), SaveStrategy.DELAYED, logService, fileService));\n\n\t\tservice.setItem('some.key1', 'some.value1');\n\t\tservice.setItem('some.key2', 'some.value2');\n\t\tservice.setItem('some.key3', 'some.value3');\n\t\tservice.setItem('some.key4', 'some.value4');\n\n\t\tawait service.close();\n\n\t\tconst contents = readFileSync(storageFile).toString();\n\t\tassert.strictEqual(contents.length, 0);\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"],
  "mappings": "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",
  "names": []
}
