var u=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var d=(n,r,e,t)=>{for(var i=t>1?void 0:t?m(r,e):r,s=n.length-1,l;s>=0;s--)(l=n[s])&&(i=(t?l(r,e,i):l(i))||i);return t&&i&&u(r,e,i),i},a=(n,r)=>(e,t)=>r(e,t,n);import{ThrottledDelayer as c}from"../../../../vs/base/common/async.js";import{VSBuffer as h}from"../../../../vs/base/common/buffer.js";import{Disposable as g}from"../../../../vs/base/common/lifecycle.js";import{isUndefined as f,isUndefinedOrNull as v}from"../../../../vs/base/common/types.js";import"../../../../vs/base/common/uri.js";import{IEnvironmentService as S}from"../../../../vs/platform/environment/common/environment.js";import{FileOperationResult as p,IFileService as I}from"../../../../vs/platform/files/common/files.js";import{ILogService as y}from"../../../../vs/platform/log/common/log.js";import"../../../../vs/platform/state/node/state.js";var T=(e=>(e[e.IMMEDIATE=0]="IMMEDIATE",e[e.DELAYED=1]="DELAYED",e))(T||{});class b extends g{constructor(e,t,i,s){super();this.storagePath=e;this.saveStrategy=t;this.logService=i;this.fileService=s}storage=Object.create(null);lastSavedStorageContents="";flushDelayer=this._register(new c(this.saveStrategy===0?0:100));initializing=void 0;closing=void 0;init(){return this.initializing||(this.initializing=this.doInit()),this.initializing}async doInit(){try{this.lastSavedStorageContents=(await this.fileService.readFile(this.storagePath)).value.toString(),this.storage=JSON.parse(this.lastSavedStorageContents)}catch(e){e.fileOperationResult!==p.FILE_NOT_FOUND&&this.logService.error(e)}}getItem(e,t){const i=this.storage[e];return v(i)?t:i}setItem(e,t){this.setItems([{key:e,data:t}])}setItems(e){let t=!1;for(const{key:i,data:s}of e)this.storage[i]!==s&&(v(s)?f(this.storage[i])||(this.storage[i]=void 0,t=!0):(this.storage[i]=s,t=!0));t&&this.save()}removeItem(e){f(this.storage[e])||(this.storage[e]=void 0,this.save())}async save(){if(!this.closing)return this.flushDelayer.trigger(()=>this.doSave())}async doSave(){if(!this.initializing)return;await this.initializing;const e=JSON.stringify(this.storage,null,4);if(e!==this.lastSavedStorageContents)try{await this.fileService.writeFile(this.storagePath,h.fromString(e),{atomic:{postfix:".vsctmp"}}),this.lastSavedStorageContents=e}catch(t){this.logService.error(t)}}async close(){return this.closing||(this.closing=this.flushDelayer.trigger(()=>this.doSave(),0)),this.closing}}let o=class extends g{fileStorage;constructor(r,e,t,i){super(),this.fileStorage=this._register(new b(e.stateResource,r,t,i))}async init(){await this.fileStorage.init()}getItem(r,e){return this.fileStorage.getItem(r,e)}};o=d([a(1,S),a(2,y),a(3,I)],o);class U extends o{setItem(r,e){this.fileStorage.setItem(r,e)}setItems(r){this.fileStorage.setItems(r)}removeItem(r){this.fileStorage.removeItem(r)}close(){return this.fileStorage.close()}}export{b as FileStorage,T as SaveStrategy,o as StateReadonlyService,U as StateService};
