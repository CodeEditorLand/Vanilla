{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/instantiation/test/common/instantiationService.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { dispose } from '../../../../base/common/lifecycle.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../../base/test/common/utils.js';\nimport { SyncDescriptor } from '../../common/descriptors.js';\nimport { createDecorator, IInstantiationService, ServicesAccessor } from '../../common/instantiation.js';\nimport { InstantiationService } from '../../common/instantiationService.js';\nimport { ServiceCollection } from '../../common/serviceCollection.js';\n\nconst IService1 = createDecorator<IService1>('service1');\n\ninterface IService1 {\n\treadonly _serviceBrand: undefined;\n\tc: number;\n}\n\nclass Service1 implements IService1 {\n\tdeclare readonly _serviceBrand: undefined;\n\tc = 1;\n}\n\nconst IService2 = createDecorator<IService2>('service2');\n\ninterface IService2 {\n\treadonly _serviceBrand: undefined;\n\td: boolean;\n}\n\nclass Service2 implements IService2 {\n\tdeclare readonly _serviceBrand: undefined;\n\td = true;\n}\n\nconst IService3 = createDecorator<IService3>('service3');\n\ninterface IService3 {\n\treadonly _serviceBrand: undefined;\n\ts: string;\n}\n\nclass Service3 implements IService3 {\n\tdeclare readonly _serviceBrand: undefined;\n\ts = 'farboo';\n}\n\nconst IDependentService = createDecorator<IDependentService>('dependentService');\n\ninterface IDependentService {\n\treadonly _serviceBrand: undefined;\n\tname: string;\n}\n\nclass DependentService implements IDependentService {\n\tdeclare readonly _serviceBrand: undefined;\n\tconstructor(@IService1 service: IService1) {\n\t\tassert.strictEqual(service.c, 1);\n\t}\n\n\tname = 'farboo';\n}\n\nclass Service1Consumer {\n\n\tconstructor(@IService1 service1: IService1) {\n\t\tassert.ok(service1);\n\t\tassert.strictEqual(service1.c, 1);\n\t}\n}\n\nclass Target2Dep {\n\n\tconstructor(@IService1 service1: IService1, @IService2 service2: Service2) {\n\t\tassert.ok(service1 instanceof Service1);\n\t\tassert.ok(service2 instanceof Service2);\n\t}\n}\n\nclass TargetWithStaticParam {\n\tconstructor(v: boolean, @IService1 service1: IService1) {\n\t\tassert.ok(v);\n\t\tassert.ok(service1);\n\t\tassert.strictEqual(service1.c, 1);\n\t}\n}\n\n\n\nclass DependentServiceTarget {\n\tconstructor(@IDependentService d: IDependentService) {\n\t\tassert.ok(d);\n\t\tassert.strictEqual(d.name, 'farboo');\n\t}\n}\n\nclass DependentServiceTarget2 {\n\tconstructor(@IDependentService d: IDependentService, @IService1 s: IService1) {\n\t\tassert.ok(d);\n\t\tassert.strictEqual(d.name, 'farboo');\n\t\tassert.ok(s);\n\t\tassert.strictEqual(s.c, 1);\n\t}\n}\n\n\nclass ServiceLoop1 implements IService1 {\n\tdeclare readonly _serviceBrand: undefined;\n\tc = 1;\n\n\tconstructor(@IService2 s: IService2) {\n\n\t}\n}\n\nclass ServiceLoop2 implements IService2 {\n\tdeclare readonly _serviceBrand: undefined;\n\td = true;\n\n\tconstructor(@IService1 s: IService1) {\n\n\t}\n}\n\nsuite('Instantiation Service', () => {\n\n\ttest('service collection, cannot overwrite', function () {\n\t\tconst collection = new ServiceCollection();\n\t\tlet result = collection.set(IService1, null!);\n\t\tassert.strictEqual(result, undefined);\n\t\tresult = collection.set(IService1, new Service1());\n\t\tassert.strictEqual(result, null);\n\t});\n\n\ttest('service collection, add/has', function () {\n\t\tconst collection = new ServiceCollection();\n\t\tcollection.set(IService1, null!);\n\t\tassert.ok(collection.has(IService1));\n\n\t\tcollection.set(IService2, null!);\n\t\tassert.ok(collection.has(IService1));\n\t\tassert.ok(collection.has(IService2));\n\t});\n\n\ttest('@Param - simple clase', function () {\n\t\tconst collection = new ServiceCollection();\n\t\tconst service = new InstantiationService(collection);\n\t\tcollection.set(IService1, new Service1());\n\t\tcollection.set(IService2, new Service2());\n\t\tcollection.set(IService3, new Service3());\n\n\t\tservice.createInstance(Service1Consumer);\n\t});\n\n\ttest('@Param - fixed args', function () {\n\t\tconst collection = new ServiceCollection();\n\t\tconst service = new InstantiationService(collection);\n\t\tcollection.set(IService1, new Service1());\n\t\tcollection.set(IService2, new Service2());\n\t\tcollection.set(IService3, new Service3());\n\n\t\tservice.createInstance(TargetWithStaticParam, true);\n\t});\n\n\ttest('service collection is live', function () {\n\n\t\tconst collection = new ServiceCollection();\n\t\tcollection.set(IService1, new Service1());\n\n\t\tconst service = new InstantiationService(collection);\n\t\tservice.createInstance(Service1Consumer);\n\n\t\tcollection.set(IService2, new Service2());\n\n\t\tservice.createInstance(Target2Dep);\n\t\tservice.invokeFunction(function (a) {\n\t\t\tassert.ok(a.get(IService1));\n\t\t\tassert.ok(a.get(IService2));\n\t\t});\n\t});\n\n\t// we made this a warning\n\t// test('@Param - too many args', function () {\n\t// \tlet service = instantiationService.create(Object.create(null));\n\t// \tservice.addSingleton(IService1, new Service1());\n\t// \tservice.addSingleton(IService2, new Service2());\n\t// \tservice.addSingleton(IService3, new Service3());\n\n\t// \tassert.throws(() => service.createInstance(ParameterTarget2, true, 2));\n\t// });\n\n\t// test('@Param - too few args', function () {\n\t// \tlet service = instantiationService.create(Object.create(null));\n\t// \tservice.addSingleton(IService1, new Service1());\n\t// \tservice.addSingleton(IService2, new Service2());\n\t// \tservice.addSingleton(IService3, new Service3());\n\n\t// \tassert.throws(() => service.createInstance(ParameterTarget2));\n\t// });\n\n\ttest('SyncDesc - no dependencies', function () {\n\t\tconst collection = new ServiceCollection();\n\t\tconst service = new InstantiationService(collection);\n\t\tcollection.set(IService1, new SyncDescriptor<IService1>(Service1));\n\n\t\tservice.invokeFunction(accessor => {\n\n\t\t\tconst service1 = accessor.get(IService1);\n\t\t\tassert.ok(service1);\n\t\t\tassert.strictEqual(service1.c, 1);\n\n\t\t\tconst service2 = accessor.get(IService1);\n\t\t\tassert.ok(service1 === service2);\n\t\t});\n\t});\n\n\ttest('SyncDesc - service with service dependency', function () {\n\t\tconst collection = new ServiceCollection();\n\t\tconst service = new InstantiationService(collection);\n\t\tcollection.set(IService1, new SyncDescriptor<IService1>(Service1));\n\t\tcollection.set(IDependentService, new SyncDescriptor<IDependentService>(DependentService));\n\n\t\tservice.invokeFunction(accessor => {\n\t\t\tconst d = accessor.get(IDependentService);\n\t\t\tassert.ok(d);\n\t\t\tassert.strictEqual(d.name, 'farboo');\n\t\t});\n\t});\n\n\ttest('SyncDesc - target depends on service future', function () {\n\t\tconst collection = new ServiceCollection();\n\t\tconst service = new InstantiationService(collection);\n\t\tcollection.set(IService1, new SyncDescriptor<IService1>(Service1));\n\t\tcollection.set(IDependentService, new SyncDescriptor<IDependentService>(DependentService));\n\n\t\tconst d = service.createInstance(DependentServiceTarget);\n\t\tassert.ok(d instanceof DependentServiceTarget);\n\n\t\tconst d2 = service.createInstance(DependentServiceTarget2);\n\t\tassert.ok(d2 instanceof DependentServiceTarget2);\n\t});\n\n\ttest('SyncDesc - explode on loop', function () {\n\t\tconst collection = new ServiceCollection();\n\t\tconst service = new InstantiationService(collection);\n\t\tcollection.set(IService1, new SyncDescriptor<IService1>(ServiceLoop1));\n\t\tcollection.set(IService2, new SyncDescriptor<IService2>(ServiceLoop2));\n\n\t\tassert.throws(() => {\n\t\t\tservice.invokeFunction(accessor => {\n\t\t\t\taccessor.get(IService1);\n\t\t\t});\n\t\t});\n\t\tassert.throws(() => {\n\t\t\tservice.invokeFunction(accessor => {\n\t\t\t\taccessor.get(IService2);\n\t\t\t});\n\t\t});\n\n\t\ttry {\n\t\t\tservice.invokeFunction(accessor => {\n\t\t\t\taccessor.get(IService1);\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tassert.ok(err.name);\n\t\t\tassert.ok(err.message);\n\t\t}\n\t});\n\n\ttest('Invoke - get services', function () {\n\t\tconst collection = new ServiceCollection();\n\t\tconst service = new InstantiationService(collection);\n\t\tcollection.set(IService1, new Service1());\n\t\tcollection.set(IService2, new Service2());\n\n\t\tfunction test(accessor: ServicesAccessor) {\n\t\t\tassert.ok(accessor.get(IService1) instanceof Service1);\n\t\t\tassert.strictEqual(accessor.get(IService1).c, 1);\n\n\t\t\treturn true;\n\t\t}\n\n\t\tassert.strictEqual(service.invokeFunction(test), true);\n\t});\n\n\ttest('Invoke - get service, optional', function () {\n\t\tconst collection = new ServiceCollection([IService1, new Service1()]);\n\t\tconst service = new InstantiationService(collection);\n\n\t\tfunction test(accessor: ServicesAccessor) {\n\t\t\tassert.ok(accessor.get(IService1) instanceof Service1);\n\t\t\tassert.throws(() => accessor.get(IService2));\n\t\t\treturn true;\n\t\t}\n\t\tassert.strictEqual(service.invokeFunction(test), true);\n\t});\n\n\ttest('Invoke - keeping accessor NOT allowed', function () {\n\t\tconst collection = new ServiceCollection();\n\t\tconst service = new InstantiationService(collection);\n\t\tcollection.set(IService1, new Service1());\n\t\tcollection.set(IService2, new Service2());\n\n\t\tlet cached: ServicesAccessor;\n\n\t\tfunction test(accessor: ServicesAccessor) {\n\t\t\tassert.ok(accessor.get(IService1) instanceof Service1);\n\t\t\tassert.strictEqual(accessor.get(IService1).c, 1);\n\t\t\tcached = accessor;\n\t\t\treturn true;\n\t\t}\n\n\t\tassert.strictEqual(service.invokeFunction(test), true);\n\n\t\tassert.throws(() => cached.get(IService2));\n\t});\n\n\ttest('Invoke - throw error', function () {\n\t\tconst collection = new ServiceCollection();\n\t\tconst service = new InstantiationService(collection);\n\t\tcollection.set(IService1, new Service1());\n\t\tcollection.set(IService2, new Service2());\n\n\t\tfunction test(accessor: ServicesAccessor) {\n\t\t\tthrow new Error();\n\t\t}\n\n\t\tassert.throws(() => service.invokeFunction(test));\n\t});\n\n\ttest('Create child', function () {\n\n\t\tlet serviceInstanceCount = 0;\n\n\t\tconst CtorCounter = class implements Service1 {\n\t\t\tdeclare readonly _serviceBrand: undefined;\n\t\t\tc = 1;\n\t\t\tconstructor() {\n\t\t\t\tserviceInstanceCount += 1;\n\t\t\t}\n\t\t};\n\n\t\t// creating the service instance BEFORE the child service\n\t\tlet service = new InstantiationService(new ServiceCollection([IService1, new SyncDescriptor(CtorCounter)]));\n\t\tservice.createInstance(Service1Consumer);\n\n\t\t// second instance must be earlier ONE\n\t\tlet child = service.createChild(new ServiceCollection([IService2, new Service2()]));\n\t\tchild.createInstance(Service1Consumer);\n\n\t\tassert.strictEqual(serviceInstanceCount, 1);\n\n\t\t// creating the service instance AFTER the child service\n\t\tserviceInstanceCount = 0;\n\t\tservice = new InstantiationService(new ServiceCollection([IService1, new SyncDescriptor(CtorCounter)]));\n\t\tchild = service.createChild(new ServiceCollection([IService2, new Service2()]));\n\n\t\t// second instance must be earlier ONE\n\t\tservice.createInstance(Service1Consumer);\n\t\tchild.createInstance(Service1Consumer);\n\n\t\tassert.strictEqual(serviceInstanceCount, 1);\n\t});\n\n\ttest('Remote window / integration tests is broken #105562', function () {\n\n\t\tconst Service1 = createDecorator<any>('service1');\n\t\tclass Service1Impl {\n\t\t\tconstructor(@IInstantiationService insta: IInstantiationService) {\n\t\t\t\tconst c = insta.invokeFunction(accessor => accessor.get(Service2)); // THIS is the recursive call\n\t\t\t\tassert.ok(c);\n\t\t\t}\n\t\t}\n\t\tconst Service2 = createDecorator<any>('service2');\n\t\tclass Service2Impl {\n\t\t\tconstructor() { }\n\t\t}\n\n\t\t// This service depends on Service1 and Service2 BUT creating Service1 creates Service2 (via recursive invocation)\n\t\t// and then Servce2 should not be created a second time\n\t\tconst Service21 = createDecorator<any>('service21');\n\t\tclass Service21Impl {\n\t\t\tconstructor(@Service2 public readonly service2: Service2Impl, @Service1 public readonly service1: Service1Impl) { }\n\t\t}\n\n\t\tconst insta = new InstantiationService(new ServiceCollection(\n\t\t\t[Service1, new SyncDescriptor(Service1Impl)],\n\t\t\t[Service2, new SyncDescriptor(Service2Impl)],\n\t\t\t[Service21, new SyncDescriptor(Service21Impl)],\n\t\t));\n\n\t\tconst obj = insta.invokeFunction(accessor => accessor.get(Service21));\n\t\tassert.ok(obj);\n\t});\n\n\ttest('Sync/Async dependency loop', async function () {\n\n\t\tconst A = createDecorator<A>('A');\n\t\tconst B = createDecorator<B>('B');\n\t\tinterface A { _serviceBrand: undefined; doIt(): void }\n\t\tinterface B { _serviceBrand: undefined; b(): boolean }\n\n\t\tclass BConsumer {\n\t\t\tconstructor(@B private readonly b: B) {\n\n\t\t\t}\n\t\t\tdoIt() {\n\t\t\t\treturn this.b.b();\n\t\t\t}\n\t\t}\n\n\t\tclass AService implements A {\n\t\t\t_serviceBrand: undefined;\n\t\t\tprop: BConsumer;\n\t\t\tconstructor(@IInstantiationService insta: IInstantiationService) {\n\t\t\t\tthis.prop = insta.createInstance(BConsumer);\n\t\t\t}\n\t\t\tdoIt() {\n\t\t\t\treturn this.prop.doIt();\n\t\t\t}\n\t\t}\n\n\t\tclass BService implements B {\n\t\t\t_serviceBrand: undefined;\n\t\t\tconstructor(@A a: A) {\n\t\t\t\tassert.ok(a);\n\t\t\t}\n\t\t\tb() { return true; }\n\t\t}\n\n\t\t// SYNC -> explodes AImpl -> [insta:BConsumer] -> BImpl -> AImpl\n\t\t{\n\t\t\tconst insta1 = new InstantiationService(new ServiceCollection(\n\t\t\t\t[A, new SyncDescriptor(AService)],\n\t\t\t\t[B, new SyncDescriptor(BService)],\n\t\t\t), true, undefined, true);\n\n\t\t\ttry {\n\t\t\t\tinsta1.invokeFunction(accessor => accessor.get(A));\n\t\t\t\tassert.ok(false);\n\n\t\t\t} catch (error) {\n\t\t\t\tassert.ok(error instanceof Error);\n\t\t\t\tassert.ok(error.message.includes('RECURSIVELY'));\n\t\t\t}\n\t\t}\n\n\t\t// ASYNC -> doesn't explode but cycle is tracked\n\t\t{\n\t\t\tconst insta2 = new InstantiationService(new ServiceCollection(\n\t\t\t\t[A, new SyncDescriptor(AService, undefined, true)],\n\t\t\t\t[B, new SyncDescriptor(BService, undefined)],\n\t\t\t), true, undefined, true);\n\n\t\t\tconst a = insta2.invokeFunction(accessor => accessor.get(A));\n\t\t\ta.doIt();\n\n\t\t\tconst cycle = insta2._globalGraph?.findCycleSlow();\n\t\t\tassert.strictEqual(cycle, 'A -> B -> A');\n\t\t}\n\t});\n\n\ttest('Delayed and events', function () {\n\t\tconst A = createDecorator<A>('A');\n\t\tinterface A {\n\t\t\t_serviceBrand: undefined;\n\t\t\tonDidDoIt: Event<any>;\n\t\t\tdoIt(): void;\n\t\t}\n\n\t\tlet created = false;\n\t\tclass AImpl implements A {\n\t\t\t_serviceBrand: undefined;\n\t\t\t_doIt = 0;\n\n\t\t\t_onDidDoIt = new Emitter<this>();\n\t\t\tonDidDoIt: Event<this> = this._onDidDoIt.event;\n\n\t\t\tconstructor() {\n\t\t\t\tcreated = true;\n\t\t\t}\n\n\t\t\tdoIt(): void {\n\t\t\t\tthis._doIt += 1;\n\t\t\t\tthis._onDidDoIt.fire(this);\n\t\t\t}\n\t\t}\n\n\t\tconst insta = new InstantiationService(new ServiceCollection(\n\t\t\t[A, new SyncDescriptor(AImpl, undefined, true)],\n\t\t), true, undefined, true);\n\n\t\tclass Consumer {\n\t\t\tconstructor(@A public readonly a: A) {\n\t\t\t\t// eager subscribe -> NO service instance\n\t\t\t}\n\t\t}\n\n\t\tconst c: Consumer = insta.createInstance(Consumer);\n\t\tlet eventCount = 0;\n\n\t\t// subscribing to event doesn't trigger instantiation\n\t\tconst listener = (e: any) => {\n\t\t\tassert.ok(e instanceof AImpl);\n\t\t\teventCount++;\n\t\t};\n\t\tconst d1 = c.a.onDidDoIt(listener);\n\t\tconst d2 = c.a.onDidDoIt(listener);\n\t\tassert.strictEqual(created, false);\n\t\tassert.strictEqual(eventCount, 0);\n\t\td2.dispose();\n\n\t\t// instantiation happens on first call\n\t\tc.a.doIt();\n\t\tassert.strictEqual(created, true);\n\t\tassert.strictEqual(eventCount, 1);\n\n\n\t\tconst d3 = c.a.onDidDoIt(listener);\n\t\tc.a.doIt();\n\t\tassert.strictEqual(eventCount, 3);\n\n\t\tdispose([d1, d3]);\n\t});\n\n\n\ttest('Capture event before init, use after init', function () {\n\t\tconst A = createDecorator<A>('A');\n\t\tinterface A {\n\t\t\t_serviceBrand: undefined;\n\t\t\tonDidDoIt: Event<any>;\n\t\t\tdoIt(): void;\n\t\t\tnoop(): void;\n\t\t}\n\n\t\tlet created = false;\n\t\tclass AImpl implements A {\n\t\t\t_serviceBrand: undefined;\n\t\t\t_doIt = 0;\n\n\t\t\t_onDidDoIt = new Emitter<this>();\n\t\t\tonDidDoIt: Event<this> = this._onDidDoIt.event;\n\n\t\t\tconstructor() {\n\t\t\t\tcreated = true;\n\t\t\t}\n\n\t\t\tdoIt(): void {\n\t\t\t\tthis._doIt += 1;\n\t\t\t\tthis._onDidDoIt.fire(this);\n\t\t\t}\n\n\t\t\tnoop(): void {\n\t\t\t}\n\t\t}\n\n\t\tconst insta = new InstantiationService(new ServiceCollection(\n\t\t\t[A, new SyncDescriptor(AImpl, undefined, true)],\n\t\t), true, undefined, true);\n\n\t\tclass Consumer {\n\t\t\tconstructor(@A public readonly a: A) {\n\t\t\t\t// eager subscribe -> NO service instance\n\t\t\t}\n\t\t}\n\n\t\tconst c: Consumer = insta.createInstance(Consumer);\n\t\tlet eventCount = 0;\n\n\t\t// subscribing to event doesn't trigger instantiation\n\t\tconst listener = (e: any) => {\n\t\t\tassert.ok(e instanceof AImpl);\n\t\t\teventCount++;\n\t\t};\n\n\t\tconst event = c.a.onDidDoIt;\n\n\t\t// const d1 = c.a.onDidDoIt(listener);\n\t\tassert.strictEqual(created, false);\n\n\t\tc.a.noop();\n\t\tassert.strictEqual(created, true);\n\n\t\tconst d1 = event(listener);\n\n\t\tc.a.doIt();\n\n\n\t\t// instantiation happens on first call\n\t\tassert.strictEqual(eventCount, 1);\n\n\t\tdispose(d1);\n\t});\n\n\ttest('Dispose early event listener', function () {\n\t\tconst A = createDecorator<A>('A');\n\t\tinterface A {\n\t\t\t_serviceBrand: undefined;\n\t\t\tonDidDoIt: Event<any>;\n\t\t\tdoIt(): void;\n\t\t}\n\t\tlet created = false;\n\t\tclass AImpl implements A {\n\t\t\t_serviceBrand: undefined;\n\t\t\t_doIt = 0;\n\n\t\t\t_onDidDoIt = new Emitter<this>();\n\t\t\tonDidDoIt: Event<this> = this._onDidDoIt.event;\n\n\t\t\tconstructor() {\n\t\t\t\tcreated = true;\n\t\t\t}\n\n\t\t\tdoIt(): void {\n\t\t\t\tthis._doIt += 1;\n\t\t\t\tthis._onDidDoIt.fire(this);\n\t\t\t}\n\t\t}\n\n\t\tconst insta = new InstantiationService(new ServiceCollection(\n\t\t\t[A, new SyncDescriptor(AImpl, undefined, true)],\n\t\t), true, undefined, true);\n\n\t\tclass Consumer {\n\t\t\tconstructor(@A public readonly a: A) {\n\t\t\t\t// eager subscribe -> NO service instance\n\t\t\t}\n\t\t}\n\n\t\tconst c: Consumer = insta.createInstance(Consumer);\n\t\tlet eventCount = 0;\n\n\t\t// subscribing to event doesn't trigger instantiation\n\t\tconst listener = (e: any) => {\n\t\t\tassert.ok(e instanceof AImpl);\n\t\t\teventCount++;\n\t\t};\n\n\t\tconst d1 = c.a.onDidDoIt(listener);\n\t\tassert.strictEqual(created, false);\n\t\tassert.strictEqual(eventCount, 0);\n\n\t\tc.a.doIt();\n\n\t\t// instantiation happens on first call\n\t\tassert.strictEqual(created, true);\n\t\tassert.strictEqual(eventCount, 1);\n\n\t\tdispose(d1);\n\n\t\tc.a.doIt();\n\t\tassert.strictEqual(eventCount, 1);\n\t});\n\n\n\ttest('Dispose services it created', function () {\n\t\tlet disposedA = false;\n\t\tlet disposedB = false;\n\n\t\tconst A = createDecorator<A>('A');\n\t\tinterface A {\n\t\t\t_serviceBrand: undefined;\n\t\t\tvalue: 1;\n\t\t}\n\t\tclass AImpl implements A {\n\t\t\t_serviceBrand: undefined;\n\t\t\tvalue: 1 = 1;\n\t\t\tdispose() {\n\t\t\t\tdisposedA = true;\n\t\t\t}\n\t\t}\n\n\t\tconst B = createDecorator<B>('B');\n\t\tinterface B {\n\t\t\t_serviceBrand: undefined;\n\t\t\tvalue: 1;\n\t\t}\n\t\tclass BImpl implements B {\n\t\t\t_serviceBrand: undefined;\n\t\t\tvalue: 1 = 1;\n\t\t\tdispose() {\n\t\t\t\tdisposedB = true;\n\t\t\t}\n\t\t}\n\n\t\tconst insta = new InstantiationService(new ServiceCollection(\n\t\t\t[A, new SyncDescriptor(AImpl, undefined, true)],\n\t\t\t[B, new BImpl()],\n\t\t), true, undefined, true);\n\n\t\tclass Consumer {\n\t\t\tconstructor(\n\t\t\t\t@A public readonly a: A,\n\t\t\t\t@B public readonly b: B\n\t\t\t) {\n\t\t\t\tassert.strictEqual(a.value, b.value);\n\t\t\t}\n\t\t}\n\n\t\tconst c: Consumer = insta.createInstance(Consumer);\n\n\t\tinsta.dispose();\n\t\tassert.ok(c);\n\t\tassert.strictEqual(disposedA, true);\n\t\tassert.strictEqual(disposedB, false);\n\t});\n\n\ttest('Disposed service cannot be used anymore', function () {\n\n\n\t\tconst B = createDecorator<B>('B');\n\t\tinterface B {\n\t\t\t_serviceBrand: undefined;\n\t\t\tvalue: 1;\n\t\t}\n\t\tclass BImpl implements B {\n\t\t\t_serviceBrand: undefined;\n\t\t\tvalue: 1 = 1;\n\t\t}\n\n\t\tconst insta = new InstantiationService(new ServiceCollection(\n\t\t\t[B, new BImpl()],\n\t\t), true, undefined, true);\n\n\t\tclass Consumer {\n\t\t\tconstructor(\n\t\t\t\t@B public readonly b: B\n\t\t\t) {\n\t\t\t\tassert.strictEqual(b.value, 1);\n\t\t\t}\n\t\t}\n\n\t\tconst c: Consumer = insta.createInstance(Consumer);\n\t\tassert.ok(c);\n\n\t\tinsta.dispose();\n\n\t\tassert.throws(() => insta.createInstance(Consumer));\n\t\tassert.throws(() => insta.invokeFunction(accessor => { }));\n\t\tassert.throws(() => insta.createChild(new ServiceCollection()));\n\t});\n\n\ttest('Child does not dispose parent', function () {\n\n\t\tconst B = createDecorator<B>('B');\n\t\tinterface B {\n\t\t\t_serviceBrand: undefined;\n\t\t\tvalue: 1;\n\t\t}\n\t\tclass BImpl implements B {\n\t\t\t_serviceBrand: undefined;\n\t\t\tvalue: 1 = 1;\n\t\t}\n\n\t\tconst insta1 = new InstantiationService(new ServiceCollection(\n\t\t\t[B, new BImpl()],\n\t\t), true, undefined, true);\n\n\t\tconst insta2 = insta1.createChild(new ServiceCollection());\n\n\t\tclass Consumer {\n\t\t\tconstructor(\n\t\t\t\t@B public readonly b: B\n\t\t\t) {\n\t\t\t\tassert.strictEqual(b.value, 1);\n\t\t\t}\n\t\t}\n\n\t\tassert.ok(insta1.createInstance(Consumer));\n\t\tassert.ok(insta2.createInstance(Consumer));\n\n\t\tinsta2.dispose();\n\n\t\tassert.ok(insta1.createInstance(Consumer)); // parent NOT disposed by child\n\t\tassert.throws(() => insta2.createInstance(Consumer));\n\t});\n\n\ttest('Parent does dispose children', function () {\n\n\t\tconst B = createDecorator<B>('B');\n\t\tinterface B {\n\t\t\t_serviceBrand: undefined;\n\t\t\tvalue: 1;\n\t\t}\n\t\tclass BImpl implements B {\n\t\t\t_serviceBrand: undefined;\n\t\t\tvalue: 1 = 1;\n\t\t}\n\n\t\tconst insta1 = new InstantiationService(new ServiceCollection(\n\t\t\t[B, new BImpl()],\n\t\t), true, undefined, true);\n\n\t\tconst insta2 = insta1.createChild(new ServiceCollection());\n\n\t\tclass Consumer {\n\t\t\tconstructor(\n\t\t\t\t@B public readonly b: B\n\t\t\t) {\n\t\t\t\tassert.strictEqual(b.value, 1);\n\t\t\t}\n\t\t}\n\n\t\tassert.ok(insta1.createInstance(Consumer));\n\t\tassert.ok(insta2.createInstance(Consumer));\n\n\t\tinsta1.dispose();\n\n\t\tassert.throws(() => insta2.createInstance(Consumer)); // child is disposed by parent\n\t\tassert.throws(() => insta1.createInstance(Consumer));\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"],
  "mappings": "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",
  "names": ["test", "Service1", "insta", "Service2"]
}
