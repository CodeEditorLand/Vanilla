{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/instantiation/common/graph.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport class Node<T> {\n\n\n\treadonly incoming = new Map<string, Node<T>>();\n\treadonly outgoing = new Map<string, Node<T>>();\n\n\tconstructor(\n\t\treadonly key: string,\n\t\treadonly data: T\n\t) { }\n}\n\nexport class Graph<T> {\n\n\tprivate readonly _nodes = new Map<string, Node<T>>();\n\n\tconstructor(private readonly _hashFn: (element: T) => string) {\n\t\t// empty\n\t}\n\n\troots(): Node<T>[] {\n\t\tconst ret: Node<T>[] = [];\n\t\tfor (const node of this._nodes.values()) {\n\t\t\tif (node.outgoing.size === 0) {\n\t\t\t\tret.push(node);\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tinsertEdge(from: T, to: T): void {\n\t\tconst fromNode = this.lookupOrInsertNode(from);\n\t\tconst toNode = this.lookupOrInsertNode(to);\n\n\t\tfromNode.outgoing.set(toNode.key, toNode);\n\t\ttoNode.incoming.set(fromNode.key, fromNode);\n\t}\n\n\tremoveNode(data: T): void {\n\t\tconst key = this._hashFn(data);\n\t\tthis._nodes.delete(key);\n\t\tfor (const node of this._nodes.values()) {\n\t\t\tnode.outgoing.delete(key);\n\t\t\tnode.incoming.delete(key);\n\t\t}\n\t}\n\n\tlookupOrInsertNode(data: T): Node<T> {\n\t\tconst key = this._hashFn(data);\n\t\tlet node = this._nodes.get(key);\n\n\t\tif (!node) {\n\t\t\tnode = new Node(key, data);\n\t\t\tthis._nodes.set(key, node);\n\t\t}\n\n\t\treturn node;\n\t}\n\n\tlookup(data: T): Node<T> | undefined {\n\t\treturn this._nodes.get(this._hashFn(data));\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._nodes.size === 0;\n\t}\n\n\ttoString(): string {\n\t\tconst data: string[] = [];\n\t\tfor (const [key, value] of this._nodes) {\n\t\t\tdata.push(`${key}\\n\\t(-> incoming)[${[...value.incoming.keys()].join(', ')}]\\n\\t(outgoing ->)[${[...value.outgoing.keys()].join(',')}]\\n`);\n\n\t\t}\n\t\treturn data.join('\\n');\n\t}\n\n\t/**\n\t * This is brute force and slow and **only** be used\n\t * to trouble shoot.\n\t */\n\tfindCycleSlow() {\n\t\tfor (const [id, node] of this._nodes) {\n\t\t\tconst seen = new Set<string>([id]);\n\t\t\tconst res = this._findCycle(node, seen);\n\t\t\tif (res) {\n\t\t\t\treturn res;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate _findCycle(node: Node<T>, seen: Set<string>): string | undefined {\n\t\tfor (const [id, outgoing] of node.outgoing) {\n\t\t\tif (seen.has(id)) {\n\t\t\t\treturn [...seen, id].join(' -> ');\n\t\t\t}\n\t\t\tseen.add(id);\n\t\t\tconst value = this._findCycle(outgoing, seen);\n\t\t\tif (value) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tseen.delete(id);\n\t\t}\n\t\treturn undefined;\n\t}\n}\n"],
  "mappings": ";;AAKO,MAAM,KAAQ;AAAA,EAMpB,YACU,KACA,MACR;AAFQ;AACA;AAAA,EACN;AAAA,EAdL,OAKqB;AAAA;AAAA;AAAA,EAGX,WAAW,oBAAI,IAAqB;AAAA,EACpC,WAAW,oBAAI,IAAqB;AAM9C;AAEO,MAAM,MAAS;AAAA,EAIrB,YAA6B,SAAiC;AAAjC;AAAA,EAE7B;AAAA,EAvBD,OAiBsB;AAAA;AAAA;AAAA,EAEJ,SAAS,oBAAI,IAAqB;AAAA,EAMnD,QAAmB;AAClB,UAAM,MAAiB,CAAC;AACxB,eAAW,QAAQ,KAAK,OAAO,OAAO,GAAG;AACxC,UAAI,KAAK,SAAS,SAAS,GAAG;AAC7B,YAAI,KAAK,IAAI;AAAA,MACd;AAAA,IACD;AACA,WAAO;AAAA,EACR;AAAA,EAEA,WAAW,MAAS,IAAa;AAChC,UAAM,WAAW,KAAK,mBAAmB,IAAI;AAC7C,UAAM,SAAS,KAAK,mBAAmB,EAAE;AAEzC,aAAS,SAAS,IAAI,OAAO,KAAK,MAAM;AACxC,WAAO,SAAS,IAAI,SAAS,KAAK,QAAQ;AAAA,EAC3C;AAAA,EAEA,WAAW,MAAe;AACzB,UAAM,MAAM,KAAK,QAAQ,IAAI;AAC7B,SAAK,OAAO,OAAO,GAAG;AACtB,eAAW,QAAQ,KAAK,OAAO,OAAO,GAAG;AACxC,WAAK,SAAS,OAAO,GAAG;AACxB,WAAK,SAAS,OAAO,GAAG;AAAA,IACzB;AAAA,EACD;AAAA,EAEA,mBAAmB,MAAkB;AACpC,UAAM,MAAM,KAAK,QAAQ,IAAI;AAC7B,QAAI,OAAO,KAAK,OAAO,IAAI,GAAG;AAE9B,QAAI,CAAC,MAAM;AACV,aAAO,IAAI,KAAK,KAAK,IAAI;AACzB,WAAK,OAAO,IAAI,KAAK,IAAI;AAAA,IAC1B;AAEA,WAAO;AAAA,EACR;AAAA,EAEA,OAAO,MAA8B;AACpC,WAAO,KAAK,OAAO,IAAI,KAAK,QAAQ,IAAI,CAAC;AAAA,EAC1C;AAAA,EAEA,UAAmB;AAClB,WAAO,KAAK,OAAO,SAAS;AAAA,EAC7B;AAAA,EAEA,WAAmB;AAClB,UAAM,OAAiB,CAAC;AACxB,eAAW,CAAC,KAAK,KAAK,KAAK,KAAK,QAAQ;AACvC,WAAK,KAAK,GAAG,GAAG;AAAA,iBAAqB,CAAC,GAAG,MAAM,SAAS,KAAK,CAAC,EAAE,KAAK,IAAI,CAAC;AAAA,iBAAsB,CAAC,GAAG,MAAM,SAAS,KAAK,CAAC,EAAE,KAAK,GAAG,CAAC;AAAA,CAAK;AAAA,IAE1I;AACA,WAAO,KAAK,KAAK,IAAI;AAAA,EACtB;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,gBAAgB;AACf,eAAW,CAAC,IAAI,IAAI,KAAK,KAAK,QAAQ;AACrC,YAAM,OAAO,oBAAI,IAAY,CAAC,EAAE,CAAC;AACjC,YAAM,MAAM,KAAK,WAAW,MAAM,IAAI;AACtC,UAAI,KAAK;AACR,eAAO;AAAA,MACR;AAAA,IACD;AACA,WAAO;AAAA,EACR;AAAA,EAEQ,WAAW,MAAe,MAAuC;AACxE,eAAW,CAAC,IAAI,QAAQ,KAAK,KAAK,UAAU;AAC3C,UAAI,KAAK,IAAI,EAAE,GAAG;AACjB,eAAO,CAAC,GAAG,MAAM,EAAE,EAAE,KAAK,MAAM;AAAA,MACjC;AACA,WAAK,IAAI,EAAE;AACX,YAAM,QAAQ,KAAK,WAAW,UAAU,IAAI;AAC5C,UAAI,OAAO;AACV,eAAO;AAAA,MACR;AACA,WAAK,OAAO,EAAE;AAAA,IACf;AACA,WAAO;AAAA,EACR;AACD;",
  "names": []
}
