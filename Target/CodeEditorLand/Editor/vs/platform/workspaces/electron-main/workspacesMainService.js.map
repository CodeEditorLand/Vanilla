{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/workspaces/electron-main/workspacesMainService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { AddFirstParameterToFunctions } from \"../../../base/common/types.js\";\nimport type { URI } from \"../../../base/common/uri.js\";\nimport type {\n\tIFolderBackupInfo,\n\tIWorkspaceBackupInfo,\n} from \"../../backup/common/backup.js\";\nimport { IBackupMainService } from \"../../backup/electron-main/backup.js\";\nimport { IWindowsMainService } from \"../../windows/electron-main/windows.js\";\nimport type { IWorkspaceIdentifier } from \"../../workspace/common/workspace.js\";\nimport type {\n\tIEnterWorkspaceResult,\n\tIRecent,\n\tIRecentlyOpened,\n\tIWorkspaceFolderCreationData,\n\tIWorkspacesService,\n} from \"../common/workspaces.js\";\nimport { IWorkspacesHistoryMainService } from \"./workspacesHistoryMainService.js\";\nimport { IWorkspacesManagementMainService } from \"./workspacesManagementMainService.js\";\n\nexport class WorkspacesMainService\n\timplements\n\t\tAddFirstParameterToFunctions<\n\t\t\tIWorkspacesService,\n\t\t\tPromise<unknown> /* only methods, not events */,\n\t\t\tnumber /* window ID */\n\t\t>\n{\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IWorkspacesManagementMainService private readonly workspacesManagementMainService: IWorkspacesManagementMainService,\n\t\t@IWindowsMainService private readonly windowsMainService: IWindowsMainService,\n\t\t@IWorkspacesHistoryMainService private readonly workspacesHistoryMainService: IWorkspacesHistoryMainService,\n\t\t@IBackupMainService private readonly backupMainService: IBackupMainService\n\t) {\n\t}\n\n\t//#region Workspace Management\n\n\tasync enterWorkspace(\n\t\twindowId: number,\n\t\tpath: URI,\n\t): Promise<IEnterWorkspaceResult | undefined> {\n\t\tconst window = this.windowsMainService.getWindowById(windowId);\n\t\tif (window) {\n\t\t\treturn this.workspacesManagementMainService.enterWorkspace(\n\t\t\t\twindow,\n\t\t\t\tthis.windowsMainService.getWindows(),\n\t\t\t\tpath,\n\t\t\t);\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tcreateUntitledWorkspace(\n\t\twindowId: number,\n\t\tfolders?: IWorkspaceFolderCreationData[],\n\t\tremoteAuthority?: string,\n\t): Promise<IWorkspaceIdentifier> {\n\t\treturn this.workspacesManagementMainService.createUntitledWorkspace(\n\t\t\tfolders,\n\t\t\tremoteAuthority,\n\t\t);\n\t}\n\n\tdeleteUntitledWorkspace(\n\t\twindowId: number,\n\t\tworkspace: IWorkspaceIdentifier,\n\t): Promise<void> {\n\t\treturn this.workspacesManagementMainService.deleteUntitledWorkspace(\n\t\t\tworkspace,\n\t\t);\n\t}\n\n\tgetWorkspaceIdentifier(\n\t\twindowId: number,\n\t\tworkspacePath: URI,\n\t): Promise<IWorkspaceIdentifier> {\n\t\treturn this.workspacesManagementMainService.getWorkspaceIdentifier(\n\t\t\tworkspacePath,\n\t\t);\n\t}\n\n\t//#endregion\n\n\t//#region Workspaces History\n\n\treadonly onDidChangeRecentlyOpened =\n\t\tthis.workspacesHistoryMainService.onDidChangeRecentlyOpened;\n\n\tgetRecentlyOpened(windowId: number): Promise<IRecentlyOpened> {\n\t\treturn this.workspacesHistoryMainService.getRecentlyOpened();\n\t}\n\n\taddRecentlyOpened(windowId: number, recents: IRecent[]): Promise<void> {\n\t\treturn this.workspacesHistoryMainService.addRecentlyOpened(recents);\n\t}\n\n\tremoveRecentlyOpened(windowId: number, paths: URI[]): Promise<void> {\n\t\treturn this.workspacesHistoryMainService.removeRecentlyOpened(paths);\n\t}\n\n\tclearRecentlyOpened(windowId: number): Promise<void> {\n\t\treturn this.workspacesHistoryMainService.clearRecentlyOpened();\n\t}\n\n\t//#endregion\n\n\t//#region Dirty Workspaces\n\n\tasync getDirtyWorkspaces(): Promise<\n\t\tArray<IWorkspaceBackupInfo | IFolderBackupInfo>\n\t> {\n\t\treturn this.backupMainService.getDirtyWorkspaces();\n\t}\n\n\t//#endregion\n}\n"],
  "mappings": ";;;;;;;;;;;;AAWA,SAAS,0BAA0B;AACnC,SAAS,2BAA2B;AASpC,SAAS,qCAAqC;AAC9C,SAAS,wCAAwC;AAE1C,IAAM,wBAAN,MAOP;AAAA,EAGC,YACoD,iCACb,oBACU,8BACX,mBACpC;AAJkD;AACb;AACU;AACX;AAAA,EAEtC;AAAA,EAxCD,OA+BA;AAAA;AAAA;AAAA;AAAA,EAaC,MAAM,eACL,UACA,MAC6C;AAC7C,UAAM,SAAS,KAAK,mBAAmB,cAAc,QAAQ;AAC7D,QAAI,QAAQ;AACX,aAAO,KAAK,gCAAgC;AAAA,QAC3C;AAAA,QACA,KAAK,mBAAmB,WAAW;AAAA,QACnC;AAAA,MACD;AAAA,IACD;AAEA,WAAO;AAAA,EACR;AAAA,EAEA,wBACC,UACA,SACA,iBACgC;AAChC,WAAO,KAAK,gCAAgC;AAAA,MAC3C;AAAA,MACA;AAAA,IACD;AAAA,EACD;AAAA,EAEA,wBACC,UACA,WACgB;AAChB,WAAO,KAAK,gCAAgC;AAAA,MAC3C;AAAA,IACD;AAAA,EACD;AAAA,EAEA,uBACC,UACA,eACgC;AAChC,WAAO,KAAK,gCAAgC;AAAA,MAC3C;AAAA,IACD;AAAA,EACD;AAAA;AAAA;AAAA,EAMS,4BACR,KAAK,6BAA6B;AAAA,EAEnC,kBAAkB,UAA4C;AAC7D,WAAO,KAAK,6BAA6B,kBAAkB;AAAA,EAC5D;AAAA,EAEA,kBAAkB,UAAkB,SAAmC;AACtE,WAAO,KAAK,6BAA6B,kBAAkB,OAAO;AAAA,EACnE;AAAA,EAEA,qBAAqB,UAAkB,OAA6B;AACnE,WAAO,KAAK,6BAA6B,qBAAqB,KAAK;AAAA,EACpE;AAAA,EAEA,oBAAoB,UAAiC;AACpD,WAAO,KAAK,6BAA6B,oBAAoB;AAAA,EAC9D;AAAA;AAAA;AAAA,EAMA,MAAM,qBAEJ;AACD,WAAO,KAAK,kBAAkB,mBAAmB;AAAA,EAClD;AAAA;AAGD;AAnGa,wBAAN;AAAA,EAWJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GAdU;",
  "names": []
}
