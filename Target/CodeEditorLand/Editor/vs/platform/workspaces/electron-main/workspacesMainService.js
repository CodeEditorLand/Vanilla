var p=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var d=(o,r,e,n)=>{for(var i=n>1?void 0:n?m(r,e):r,s=o.length-1,c;s>=0;s--)(c=o[s])&&(i=(n?c(r,e,i):c(i))||i);return n&&i&&p(r,e,i),i},t=(o,r)=>(e,n)=>r(e,n,o);import"../../../base/common/types.js";import"../../../base/common/uri.js";import"../../backup/common/backup.js";import{IBackupMainService as I}from"../../backup/electron-main/backup.js";import{IWindowsMainService as k}from"../../windows/electron-main/windows.js";import"../../workspace/common/workspace.js";import"../common/workspaces.js";import{IWorkspacesHistoryMainService as w}from"./workspacesHistoryMainService.js";import{IWorkspacesManagementMainService as u}from"./workspacesManagementMainService.js";let a=class{constructor(r,e,n,i){this.workspacesManagementMainService=r;this.windowsMainService=e;this.workspacesHistoryMainService=n;this.backupMainService=i}async enterWorkspace(r,e){const n=this.windowsMainService.getWindowById(r);if(n)return this.workspacesManagementMainService.enterWorkspace(n,this.windowsMainService.getWindows(),e)}createUntitledWorkspace(r,e,n){return this.workspacesManagementMainService.createUntitledWorkspace(e,n)}deleteUntitledWorkspace(r,e){return this.workspacesManagementMainService.deleteUntitledWorkspace(e)}getWorkspaceIdentifier(r,e){return this.workspacesManagementMainService.getWorkspaceIdentifier(e)}onDidChangeRecentlyOpened=this.workspacesHistoryMainService.onDidChangeRecentlyOpened;getRecentlyOpened(r){return this.workspacesHistoryMainService.getRecentlyOpened()}addRecentlyOpened(r,e){return this.workspacesHistoryMainService.addRecentlyOpened(e)}removeRecentlyOpened(r,e){return this.workspacesHistoryMainService.removeRecentlyOpened(e)}clearRecentlyOpened(r){return this.workspacesHistoryMainService.clearRecentlyOpened()}async getDirtyWorkspaces(){return this.backupMainService.getDirtyWorkspaces()}};a=d([t(0,u),t(1,k),t(2,w),t(3,I)],a);export{a as WorkspacesMainService};
