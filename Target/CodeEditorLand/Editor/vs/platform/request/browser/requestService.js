var c=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var d=(o,t,e,r)=>{for(var n=r>1?void 0:r?f(t,e):t,s=o.length-1,u;s>=0;s--)(u=o[s])&&(n=(r?u(t,e,n):u(n))||n);return r&&n&&c(t,e,n),n},a=(o,t)=>(e,r)=>t(e,r,o);import"../../../../vs/base/common/cancellation.js";import{request as l}from"../../../../vs/base/parts/request/browser/request.js";import"../../../../vs/base/parts/request/common/request.js";import{IConfigurationService as m}from"../../../../vs/platform/configuration/common/configuration.js";import{ILoggerService as g}from"../../../../vs/platform/log/common/log.js";import{AbstractRequestService as p}from"../../../../vs/platform/request/common/request.js";let i=class extends p{constructor(e,r){super(r);this.configurationService=e}async request(e,r){return e.proxyAuthorization||(e.proxyAuthorization=this.configurationService.getValue("http.proxyAuthorization")),this.logAndRequest("browser",e,()=>l(e,r))}async resolveProxy(e){}async lookupAuthorization(e){}async lookupKerberosAuthorization(e){}async loadCertificates(){return[]}};i=d([a(0,m),a(1,g)],i);export{i as RequestService};
