{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/policy/common/policyIpc.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IStringDictionary } from \"../../../base/common/collections.js\";\nimport { Event } from \"../../../base/common/event.js\";\nimport { DisposableStore } from \"../../../base/common/lifecycle.js\";\nimport type {\n\tIChannel,\n\tIServerChannel,\n} from \"../../../base/parts/ipc/common/ipc.js\";\nimport {\n\tAbstractPolicyService,\n\ttype IPolicyService,\n\ttype PolicyDefinition,\n\ttype PolicyName,\n\ttype PolicyValue,\n} from \"./policy.js\";\n\nexport class PolicyChannel implements IServerChannel {\n\tprivate readonly disposables = new DisposableStore();\n\n\tconstructor(private service: IPolicyService) {}\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase \"onDidChange\":\n\t\t\t\treturn Event.map(\n\t\t\t\t\tthis.service.onDidChange,\n\t\t\t\t\t(names) =>\n\t\t\t\t\t\tnames.reduce<object>(\n\t\t\t\t\t\t\t(r, name) => ({\n\t\t\t\t\t\t\t\t...r,\n\t\t\t\t\t\t\t\t[name]:\n\t\t\t\t\t\t\t\t\tthis.service.getPolicyValue(name) ?? null,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t),\n\t\t\t\t\tthis.disposables,\n\t\t\t\t);\n\t\t}\n\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase \"updatePolicyDefinitions\":\n\t\t\t\treturn this.service.updatePolicyDefinitions(\n\t\t\t\t\targ as IStringDictionary<PolicyDefinition>,\n\t\t\t\t);\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n\n\tdispose() {\n\t\tthis.disposables.dispose();\n\t}\n}\n\nexport class PolicyChannelClient\n\textends AbstractPolicyService\n\timplements IPolicyService\n{\n\tconstructor(\n\t\tpoliciesData: IStringDictionary<{\n\t\t\tdefinition: PolicyDefinition;\n\t\t\tvalue: PolicyValue;\n\t\t}>,\n\t\tprivate readonly channel: IChannel,\n\t) {\n\t\tsuper();\n\t\tfor (const name in policiesData) {\n\t\t\tconst { definition, value } = policiesData[name];\n\t\t\tthis.policyDefinitions[name] = definition;\n\t\t\tif (value !== undefined) {\n\t\t\t\tthis.policies.set(name, value);\n\t\t\t}\n\t\t}\n\t\tthis.channel.listen<object>(\"onDidChange\")((policies) => {\n\t\t\tfor (const name in policies) {\n\t\t\t\tconst value = policies[name as keyof typeof policies];\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\tthis.policies.delete(name);\n\t\t\t\t} else {\n\t\t\t\t\tthis.policies.set(name, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._onDidChange.fire(Object.keys(policies));\n\t\t});\n\t}\n\n\tprotected async _updatePolicyDefinitions(\n\t\tpolicyDefinitions: IStringDictionary<PolicyDefinition>,\n\t): Promise<void> {\n\t\tconst result = await this.channel.call<{\n\t\t\t[name: PolicyName]: PolicyValue;\n\t\t}>(\"updatePolicyDefinitions\", policyDefinitions);\n\t\tfor (const name in result) {\n\t\t\tthis.policies.set(name, result[name]);\n\t\t}\n\t}\n}\n"],
  "mappings": ";;AAMA,SAAS,aAAa;AACtB,SAAS,uBAAuB;AAKhC;AAAA,EACC;AAAA,OAKM;AAEA,MAAM,cAAwC;AAAA,EAGpD,YAAoB,SAAyB;AAAzB;AAAA,EAA0B;AAAA,EAvB/C,OAoBqD;AAAA;AAAA;AAAA,EACnC,cAAc,IAAI,gBAAgB;AAAA,EAInD,OAAO,GAAY,OAA2B;AAC7C,YAAQ,OAAO;AAAA,MACd,KAAK;AACJ,eAAO,MAAM;AAAA,UACZ,KAAK,QAAQ;AAAA,UACb,CAAC,UACA,MAAM;AAAA,YACL,CAAC,GAAG,UAAU;AAAA,cACb,GAAG;AAAA,cACH,CAAC,IAAI,GACJ,KAAK,QAAQ,eAAe,IAAI,KAAK;AAAA,YACvC;AAAA,YACA,CAAC;AAAA,UACF;AAAA,UACD,KAAK;AAAA,QACN;AAAA,IACF;AAEA,UAAM,IAAI,MAAM,oBAAoB,KAAK,EAAE;AAAA,EAC5C;AAAA,EAEA,KAAK,GAAY,SAAiB,KAAyB;AAC1D,YAAQ,SAAS;AAAA,MAChB,KAAK;AACJ,eAAO,KAAK,QAAQ;AAAA,UACnB;AAAA,QACD;AAAA,IACF;AAEA,UAAM,IAAI,MAAM,mBAAmB,OAAO,EAAE;AAAA,EAC7C;AAAA,EAEA,UAAU;AACT,SAAK,YAAY,QAAQ;AAAA,EAC1B;AACD;AAEO,MAAM,4BACJ,sBAET;AAAA,EACC,YACC,cAIiB,SAChB;AACD,UAAM;AAFW;AAGjB,eAAW,QAAQ,cAAc;AAChC,YAAM,EAAE,YAAY,MAAM,IAAI,aAAa,IAAI;AAC/C,WAAK,kBAAkB,IAAI,IAAI;AAC/B,UAAI,UAAU,QAAW;AACxB,aAAK,SAAS,IAAI,MAAM,KAAK;AAAA,MAC9B;AAAA,IACD;AACA,SAAK,QAAQ,OAAe,aAAa,EAAE,CAAC,aAAa;AACxD,iBAAW,QAAQ,UAAU;AAC5B,cAAM,QAAQ,SAAS,IAA6B;AAEpD,YAAI,UAAU,MAAM;AACnB,eAAK,SAAS,OAAO,IAAI;AAAA,QAC1B,OAAO;AACN,eAAK,SAAS,IAAI,MAAM,KAAK;AAAA,QAC9B;AAAA,MACD;AAEA,WAAK,aAAa,KAAK,OAAO,KAAK,QAAQ,CAAC;AAAA,IAC7C,CAAC;AAAA,EACF;AAAA,EA9FD,OAiEA;AAAA;AAAA;AAAA,EA+BC,MAAgB,yBACf,mBACgB;AAChB,UAAM,SAAS,MAAM,KAAK,QAAQ,KAE/B,2BAA2B,iBAAiB;AAC/C,eAAW,QAAQ,QAAQ;AAC1B,WAAK,SAAS,IAAI,MAAM,OAAO,IAAI,CAAC;AAAA,IACrC;AAAA,EACD;AACD;",
  "names": []
}
