{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/policy/common/policyIpc.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IStringDictionary } from '../../../base/common/collections.js';\nimport { Event } from '../../../base/common/event.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { IChannel, IServerChannel } from '../../../base/parts/ipc/common/ipc.js';\nimport { AbstractPolicyService, IPolicyService, PolicyDefinition, PolicyName, PolicyValue } from './policy.js';\n\nexport class PolicyChannel implements IServerChannel {\n\n\tprivate readonly disposables = new DisposableStore();\n\n\tconstructor(private service: IPolicyService) { }\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'onDidChange': return Event.map(\n\t\t\t\tthis.service.onDidChange,\n\t\t\t\tnames => names.reduce<object>((r, name) => ({ ...r, [name]: this.service.getPolicyValue(name) ?? null }), {}),\n\t\t\t\tthis.disposables\n\t\t\t);\n\t\t}\n\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'updatePolicyDefinitions': return this.service.updatePolicyDefinitions(arg as IStringDictionary<PolicyDefinition>);\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n\n\tdispose() {\n\t\tthis.disposables.dispose();\n\t}\n}\n\nexport class PolicyChannelClient extends AbstractPolicyService implements IPolicyService {\n\n\tconstructor(policiesData: IStringDictionary<{ definition: PolicyDefinition; value: PolicyValue }>, private readonly channel: IChannel) {\n\t\tsuper();\n\t\tfor (const name in policiesData) {\n\t\t\tconst { definition, value } = policiesData[name];\n\t\t\tthis.policyDefinitions[name] = definition;\n\t\t\tif (value !== undefined) {\n\t\t\t\tthis.policies.set(name, value);\n\t\t\t}\n\t\t}\n\t\tthis.channel.listen<object>('onDidChange')(policies => {\n\t\t\tfor (const name in policies) {\n\t\t\t\tconst value = policies[name as keyof typeof policies];\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\tthis.policies.delete(name);\n\t\t\t\t} else {\n\t\t\t\t\tthis.policies.set(name, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._onDidChange.fire(Object.keys(policies));\n\t\t});\n\t}\n\n\tprotected async _updatePolicyDefinitions(policyDefinitions: IStringDictionary<PolicyDefinition>): Promise<void> {\n\t\tconst result = await this.channel.call<{ [name: PolicyName]: PolicyValue }>('updatePolicyDefinitions', policyDefinitions);\n\t\tfor (const name in result) {\n\t\t\tthis.policies.set(name, result[name]);\n\t\t}\n\t}\n\n}\n"],
  "mappings": ";;AAKA,SAAS,yBAAyB;AAClC,SAAS,aAAa;AACtB,SAAS,uBAAuB;AAChC,SAAS,UAAU,sBAAsB;AACzC,SAAS,uBAAuB,gBAAgB,kBAAkB,YAAY,mBAAmB;AAE1F,MAAM,cAAwC;AAAA,EAIpD,YAAoB,SAAyB;AAAzB;AAAA,EAA2B;AAAA,EAfhD,OAWqD;AAAA;AAAA;AAAA,EAEnC,cAAc,IAAI,gBAAgB;AAAA,EAInD,OAAO,GAAY,OAA2B;AAC7C,YAAQ,OAAO;AAAA,MACd,KAAK;AAAe,eAAO,MAAM;AAAA,UAChC,KAAK,QAAQ;AAAA,UACb,WAAS,MAAM,OAAe,CAAC,GAAG,UAAU,EAAE,GAAG,GAAG,CAAC,IAAI,GAAG,KAAK,QAAQ,eAAe,IAAI,KAAK,KAAK,IAAI,CAAC,CAAC;AAAA,UAC5G,KAAK;AAAA,QACN;AAAA,IACD;AAEA,UAAM,IAAI,MAAM,oBAAoB,KAAK,EAAE;AAAA,EAC5C;AAAA,EAEA,KAAK,GAAY,SAAiB,KAAyB;AAC1D,YAAQ,SAAS;AAAA,MAChB,KAAK;AAA2B,eAAO,KAAK,QAAQ,wBAAwB,GAA0C;AAAA,IACvH;AAEA,UAAM,IAAI,MAAM,mBAAmB,OAAO,EAAE;AAAA,EAC7C;AAAA,EAEA,UAAU;AACT,SAAK,YAAY,QAAQ;AAAA,EAC1B;AACD;AAEO,MAAM,4BAA4B,sBAAgD;AAAA,EAExF,YAAY,cAAwG,SAAmB;AACtI,UAAM;AAD6G;AAEnH,eAAW,QAAQ,cAAc;AAChC,YAAM,EAAE,YAAY,MAAM,IAAI,aAAa,IAAI;AAC/C,WAAK,kBAAkB,IAAI,IAAI;AAC/B,UAAI,UAAU,QAAW;AACxB,aAAK,SAAS,IAAI,MAAM,KAAK;AAAA,MAC9B;AAAA,IACD;AACA,SAAK,QAAQ,OAAe,aAAa,EAAE,cAAY;AACtD,iBAAW,QAAQ,UAAU;AAC5B,cAAM,QAAQ,SAAS,IAA6B;AAEpD,YAAI,UAAU,MAAM;AACnB,eAAK,SAAS,OAAO,IAAI;AAAA,QAC1B,OAAO;AACN,eAAK,SAAS,IAAI,MAAM,KAAK;AAAA,QAC9B;AAAA,MACD;AAEA,WAAK,aAAa,KAAK,OAAO,KAAK,QAAQ,CAAC;AAAA,IAC7C,CAAC;AAAA,EACF;AAAA,EAlED,OA0CyF;AAAA;AAAA;AAAA,EA0BxF,MAAgB,yBAAyB,mBAAuE;AAC/G,UAAM,SAAS,MAAM,KAAK,QAAQ,KAA0C,2BAA2B,iBAAiB;AACxH,eAAW,QAAQ,QAAQ;AAC1B,WAAK,SAAS,IAAI,MAAM,OAAO,IAAI,CAAC;AAAA,IACrC;AAAA,EACD;AAED;",
  "names": []
}
