{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/policy/common/policy.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IStringDictionary } from '../../../base/common/collections.js';\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\n\nexport type PolicyName = string;\nexport type PolicyValue = string | number;\nexport type PolicyDefinition = { type: 'string' | 'number' };\n\nexport const IPolicyService = createDecorator<IPolicyService>('policy');\n\nexport interface IPolicyService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly onDidChange: Event<readonly PolicyName[]>;\n\tupdatePolicyDefinitions(policyDefinitions: IStringDictionary<PolicyDefinition>): Promise<IStringDictionary<PolicyValue>>;\n\tgetPolicyValue(name: PolicyName): PolicyValue | undefined;\n\tserialize(): IStringDictionary<{ definition: PolicyDefinition; value: PolicyValue }> | undefined;\n}\n\nexport abstract class AbstractPolicyService extends Disposable implements IPolicyService {\n\treadonly _serviceBrand: undefined;\n\n\tprotected policyDefinitions: IStringDictionary<PolicyDefinition> = {};\n\tprotected policies = new Map<PolicyName, PolicyValue>();\n\n\tprotected readonly _onDidChange = this._register(new Emitter<readonly PolicyName[]>());\n\treadonly onDidChange = this._onDidChange.event;\n\n\tasync updatePolicyDefinitions(policyDefinitions: IStringDictionary<PolicyDefinition>): Promise<IStringDictionary<PolicyValue>> {\n\t\tconst size = Object.keys(this.policyDefinitions).length;\n\t\tthis.policyDefinitions = { ...policyDefinitions, ...this.policyDefinitions };\n\n\t\tif (size !== Object.keys(this.policyDefinitions).length) {\n\t\t\tawait this._updatePolicyDefinitions(policyDefinitions);\n\t\t}\n\n\t\treturn Iterable.reduce(this.policies.entries(), (r, [name, value]) => ({ ...r, [name]: value }), {});\n\t}\n\n\tgetPolicyValue(name: PolicyName): PolicyValue | undefined {\n\t\treturn this.policies.get(name);\n\t}\n\n\tserialize(): IStringDictionary<{ definition: PolicyDefinition; value: PolicyValue }> {\n\t\treturn Iterable.reduce<[PolicyName, PolicyDefinition], IStringDictionary<{ definition: PolicyDefinition; value: PolicyValue }>>(Object.entries(this.policyDefinitions), (r, [name, definition]) => ({ ...r, [name]: { definition, value: this.policies.get(name)! } }), {});\n\t}\n\n\tprotected abstract _updatePolicyDefinitions(policyDefinitions: IStringDictionary<PolicyDefinition>): Promise<void>;\n}\n\nexport class NullPolicyService implements IPolicyService {\n\treadonly _serviceBrand: undefined;\n\treadonly onDidChange = Event.None;\n\tasync updatePolicyDefinitions() { return {}; }\n\tgetPolicyValue() { return undefined; }\n\tserialize() { return undefined; }\n}\n"],
  "mappings": ";;AAKA,SAAS,yBAAyB;AAClC,SAAS,SAAS,aAAa;AAC/B,SAAS,gBAAgB;AACzB,SAAS,kBAAkB;AAC3B,SAAS,uBAAuB;AAMzB,MAAM,iBAAiB,gBAAgC,QAAQ;AAW/D,MAAe,8BAA8B,WAAqC;AAAA,EA1BzF,OA0ByF;AAAA;AAAA;AAAA,EAC/E;AAAA,EAEC,oBAAyD,CAAC;AAAA,EAC1D,WAAW,oBAAI,IAA6B;AAAA,EAEnC,eAAe,KAAK,UAAU,IAAI,QAA+B,CAAC;AAAA,EAC5E,cAAc,KAAK,aAAa;AAAA,EAEzC,MAAM,wBAAwB,mBAAiG;AAC9H,UAAM,OAAO,OAAO,KAAK,KAAK,iBAAiB,EAAE;AACjD,SAAK,oBAAoB,EAAE,GAAG,mBAAmB,GAAG,KAAK,kBAAkB;AAE3E,QAAI,SAAS,OAAO,KAAK,KAAK,iBAAiB,EAAE,QAAQ;AACxD,YAAM,KAAK,yBAAyB,iBAAiB;AAAA,IACtD;AAEA,WAAO,SAAS,OAAO,KAAK,SAAS,QAAQ,GAAG,CAAC,GAAG,CAAC,MAAM,KAAK,OAAO,EAAE,GAAG,GAAG,CAAC,IAAI,GAAG,MAAM,IAAI,CAAC,CAAC;AAAA,EACpG;AAAA,EAEA,eAAe,MAA2C;AACzD,WAAO,KAAK,SAAS,IAAI,IAAI;AAAA,EAC9B;AAAA,EAEA,YAAqF;AACpF,WAAO,SAAS,OAAgH,OAAO,QAAQ,KAAK,iBAAiB,GAAG,CAAC,GAAG,CAAC,MAAM,UAAU,OAAO,EAAE,GAAG,GAAG,CAAC,IAAI,GAAG,EAAE,YAAY,OAAO,KAAK,SAAS,IAAI,IAAI,EAAG,EAAE,IAAI,CAAC,CAAC;AAAA,EAC3Q;AAGD;AAEO,MAAM,kBAA4C;AAAA,EAzDzD,OAyDyD;AAAA;AAAA;AAAA,EAC/C;AAAA,EACA,cAAc,MAAM;AAAA,EAC7B,MAAM,0BAA0B;AAAE,WAAO,CAAC;AAAA,EAAG;AAAA,EAC7C,iBAAiB;AAAE,WAAO;AAAA,EAAW;AAAA,EACrC,YAAY;AAAE,WAAO;AAAA,EAAW;AACjC;",
  "names": []
}
