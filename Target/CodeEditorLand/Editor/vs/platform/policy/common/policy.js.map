{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/policy/common/policy.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IStringDictionary } from \"../../../base/common/collections.js\";\nimport { Emitter, Event } from \"../../../base/common/event.js\";\nimport { Iterable } from \"../../../base/common/iterator.js\";\nimport { Disposable } from \"../../../base/common/lifecycle.js\";\nimport { createDecorator } from \"../../instantiation/common/instantiation.js\";\n\nexport type PolicyName = string;\nexport type PolicyValue = string | number;\nexport type PolicyDefinition = { type: \"string\" | \"number\" };\n\nexport const IPolicyService = createDecorator<IPolicyService>(\"policy\");\n\nexport interface IPolicyService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly onDidChange: Event<readonly PolicyName[]>;\n\tupdatePolicyDefinitions(\n\t\tpolicyDefinitions: IStringDictionary<PolicyDefinition>,\n\t): Promise<IStringDictionary<PolicyValue>>;\n\tgetPolicyValue(name: PolicyName): PolicyValue | undefined;\n\tserialize():\n\t\t| IStringDictionary<{\n\t\t\t\tdefinition: PolicyDefinition;\n\t\t\t\tvalue: PolicyValue;\n\t\t  }>\n\t\t| undefined;\n}\n\nexport abstract class AbstractPolicyService\n\textends Disposable\n\timplements IPolicyService\n{\n\treadonly _serviceBrand: undefined;\n\n\tprotected policyDefinitions: IStringDictionary<PolicyDefinition> = {};\n\tprotected policies = new Map<PolicyName, PolicyValue>();\n\n\tprotected readonly _onDidChange = this._register(\n\t\tnew Emitter<readonly PolicyName[]>(),\n\t);\n\treadonly onDidChange = this._onDidChange.event;\n\n\tasync updatePolicyDefinitions(\n\t\tpolicyDefinitions: IStringDictionary<PolicyDefinition>,\n\t): Promise<IStringDictionary<PolicyValue>> {\n\t\tconst size = Object.keys(this.policyDefinitions).length;\n\t\tthis.policyDefinitions = {\n\t\t\t...policyDefinitions,\n\t\t\t...this.policyDefinitions,\n\t\t};\n\n\t\tif (size !== Object.keys(this.policyDefinitions).length) {\n\t\t\tawait this._updatePolicyDefinitions(policyDefinitions);\n\t\t}\n\n\t\treturn Iterable.reduce(\n\t\t\tthis.policies.entries(),\n\t\t\t(r, [name, value]) => ({ ...r, [name]: value }),\n\t\t\t{},\n\t\t);\n\t}\n\n\tgetPolicyValue(name: PolicyName): PolicyValue | undefined {\n\t\treturn this.policies.get(name);\n\t}\n\n\tserialize(): IStringDictionary<{\n\t\tdefinition: PolicyDefinition;\n\t\tvalue: PolicyValue;\n\t}> {\n\t\treturn Iterable.reduce<\n\t\t\t[PolicyName, PolicyDefinition],\n\t\t\tIStringDictionary<{\n\t\t\t\tdefinition: PolicyDefinition;\n\t\t\t\tvalue: PolicyValue;\n\t\t\t}>\n\t\t>(\n\t\t\tObject.entries(this.policyDefinitions),\n\t\t\t(r, [name, definition]) => ({\n\t\t\t\t...r,\n\t\t\t\t[name]: { definition, value: this.policies.get(name)! },\n\t\t\t}),\n\t\t\t{},\n\t\t);\n\t}\n\n\tprotected abstract _updatePolicyDefinitions(\n\t\tpolicyDefinitions: IStringDictionary<PolicyDefinition>,\n\t): Promise<void>;\n}\n\nexport class NullPolicyService implements IPolicyService {\n\treadonly _serviceBrand: undefined;\n\treadonly onDidChange = Event.None;\n\tasync updatePolicyDefinitions() {\n\t\treturn {};\n\t}\n\tgetPolicyValue() {\n\t\treturn undefined;\n\t}\n\tserialize() {\n\t\treturn undefined;\n\t}\n}\n"],
  "mappings": ";;AAMA,SAAS,SAAS,aAAa;AAC/B,SAAS,gBAAgB;AACzB,SAAS,kBAAkB;AAC3B,SAAS,uBAAuB;AAMzB,MAAM,iBAAiB,gBAAgC,QAAQ;AAkB/D,MAAe,8BACb,WAET;AAAA,EApCA,OAoCA;AAAA;AAAA;AAAA,EACU;AAAA,EAEC,oBAAyD,CAAC;AAAA,EAC1D,WAAW,oBAAI,IAA6B;AAAA,EAEnC,eAAe,KAAK;AAAA,IACtC,IAAI,QAA+B;AAAA,EACpC;AAAA,EACS,cAAc,KAAK,aAAa;AAAA,EAEzC,MAAM,wBACL,mBAC0C;AAC1C,UAAM,OAAO,OAAO,KAAK,KAAK,iBAAiB,EAAE;AACjD,SAAK,oBAAoB;AAAA,MACxB,GAAG;AAAA,MACH,GAAG,KAAK;AAAA,IACT;AAEA,QAAI,SAAS,OAAO,KAAK,KAAK,iBAAiB,EAAE,QAAQ;AACxD,YAAM,KAAK,yBAAyB,iBAAiB;AAAA,IACtD;AAEA,WAAO,SAAS;AAAA,MACf,KAAK,SAAS,QAAQ;AAAA,MACtB,CAAC,GAAG,CAAC,MAAM,KAAK,OAAO,EAAE,GAAG,GAAG,CAAC,IAAI,GAAG,MAAM;AAAA,MAC7C,CAAC;AAAA,IACF;AAAA,EACD;AAAA,EAEA,eAAe,MAA2C;AACzD,WAAO,KAAK,SAAS,IAAI,IAAI;AAAA,EAC9B;AAAA,EAEA,YAGG;AACF,WAAO,SAAS;AAAA,MAOf,OAAO,QAAQ,KAAK,iBAAiB;AAAA,MACrC,CAAC,GAAG,CAAC,MAAM,UAAU,OAAO;AAAA,QAC3B,GAAG;AAAA,QACH,CAAC,IAAI,GAAG,EAAE,YAAY,OAAO,KAAK,SAAS,IAAI,IAAI,EAAG;AAAA,MACvD;AAAA,MACA,CAAC;AAAA,IACF;AAAA,EACD;AAKD;AAEO,MAAM,kBAA4C;AAAA,EAhGzD,OAgGyD;AAAA;AAAA;AAAA,EAC/C;AAAA,EACA,cAAc,MAAM;AAAA,EAC7B,MAAM,0BAA0B;AAC/B,WAAO,CAAC;AAAA,EACT;AAAA,EACA,iBAAiB;AAChB,WAAO;AAAA,EACR;AAAA,EACA,YAAY;AACX,WAAO;AAAA,EACR;AACD;",
  "names": []
}
