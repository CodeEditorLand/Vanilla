{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/policy/common/filePolicyService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ThrottledDelayer } from \"../../../base/common/async.js\";\nimport { Event } from \"../../../base/common/event.js\";\nimport { Iterable } from \"../../../base/common/iterator.js\";\nimport { isObject } from \"../../../base/common/types.js\";\nimport type { URI } from \"../../../base/common/uri.js\";\nimport {\n\ttype FileOperationError,\n\tFileOperationResult,\n\tIFileService,\n} from \"../../files/common/files.js\";\nimport { ILogService } from \"../../log/common/log.js\";\nimport {\n\tAbstractPolicyService,\n\ttype IPolicyService,\n\ttype PolicyName,\n\ttype PolicyValue,\n} from \"./policy.js\";\n\nfunction keysDiff<T>(a: Map<string, T>, b: Map<string, T>): string[] {\n\tconst result: string[] = [];\n\n\tfor (const key of new Set(Iterable.concat(a.keys(), b.keys()))) {\n\t\tif (a.get(key) !== b.get(key)) {\n\t\t\tresult.push(key);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport class FilePolicyService\n\textends AbstractPolicyService\n\timplements IPolicyService\n{\n\tprivate readonly throttledDelayer = this._register(\n\t\tnew ThrottledDelayer(500),\n\t);\n\n\tconstructor(\n\t\tprivate readonly file: URI,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t\tsuper();\n\n\t\tconst onDidChangePolicyFile = Event.filter(\n\t\t\tfileService.onDidFilesChange,\n\t\t\t(e) => e.affects(file),\n\t\t);\n\t\tthis._register(fileService.watch(file));\n\t\tthis._register(\n\t\t\tonDidChangePolicyFile(() =>\n\t\t\t\tthis.throttledDelayer.trigger(() => this.refresh()),\n\t\t\t),\n\t\t);\n\t}\n\n\tprotected async _updatePolicyDefinitions(): Promise<void> {\n\t\tawait this.refresh();\n\t}\n\n\tprivate async read(): Promise<Map<PolicyName, PolicyValue>> {\n\t\tconst policies = new Map<PolicyName, PolicyValue>();\n\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(this.file);\n\t\t\tconst raw = JSON.parse(content.value.toString());\n\n\t\t\tif (!isObject(raw)) {\n\t\t\t\tthrow new Error(\"Policy file isn't a JSON object\");\n\t\t\t}\n\n\t\t\tfor (const key of Object.keys(raw)) {\n\t\t\t\tif (this.policyDefinitions[key]) {\n\t\t\t\t\tpolicies.set(key, raw[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (\n\t\t\t\t(<FileOperationError>error).fileOperationResult !==\n\t\t\t\tFileOperationResult.FILE_NOT_FOUND\n\t\t\t) {\n\t\t\t\tthis.logService.error(\n\t\t\t\t\t`[FilePolicyService] Failed to read policies`,\n\t\t\t\t\terror,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn policies;\n\t}\n\n\tprivate async refresh(): Promise<void> {\n\t\tconst policies = await this.read();\n\t\tconst diff = keysDiff(this.policies, policies);\n\t\tthis.policies = policies;\n\n\t\tif (diff.length > 0) {\n\t\t\tthis._onDidChange.fire(diff);\n\t\t}\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;AAKA,SAAS,wBAAwB;AACjC,SAAS,aAAa;AACtB,SAAS,gBAAgB;AACzB,SAAS,gBAAgB;AAEzB;AAAA,EAEC;AAAA,EACA;AAAA,OACM;AACP,SAAS,mBAAmB;AAC5B;AAAA,EACC;AAAA,OAIM;AAEP,SAAS,SAAY,GAAmB,GAA6B;AACpE,QAAM,SAAmB,CAAC;AAE1B,aAAW,OAAO,IAAI,IAAI,SAAS,OAAO,EAAE,KAAK,GAAG,EAAE,KAAK,CAAC,CAAC,GAAG;AAC/D,QAAI,EAAE,IAAI,GAAG,MAAM,EAAE,IAAI,GAAG,GAAG;AAC9B,aAAO,KAAK,GAAG;AAAA,IAChB;AAAA,EACD;AAEA,SAAO;AACR;AAVS;AAYF,IAAM,oBAAN,cACE,sBAET;AAAA,EAKC,YACkB,MACc,aACD,YAC7B;AACD,UAAM;AAJW;AACc;AACD;AAI9B,UAAM,wBAAwB,MAAM;AAAA,MACnC,YAAY;AAAA,MACZ,CAAC,MAAM,EAAE,QAAQ,IAAI;AAAA,IACtB;AACA,SAAK,UAAU,YAAY,MAAM,IAAI,CAAC;AACtC,SAAK;AAAA,MACJ;AAAA,QAAsB,MACrB,KAAK,iBAAiB,QAAQ,MAAM,KAAK,QAAQ,CAAC;AAAA,MACnD;AAAA,IACD;AAAA,EACD;AAAA,EA5DD,OAsCA;AAAA;AAAA;AAAA,EACkB,mBAAmB,KAAK;AAAA,IACxC,IAAI,iBAAiB,GAAG;AAAA,EACzB;AAAA,EAqBA,MAAgB,2BAA0C;AACzD,UAAM,KAAK,QAAQ;AAAA,EACpB;AAAA,EAEA,MAAc,OAA8C;AAC3D,UAAM,WAAW,oBAAI,IAA6B;AAElD,QAAI;AACH,YAAM,UAAU,MAAM,KAAK,YAAY,SAAS,KAAK,IAAI;AACzD,YAAM,MAAM,KAAK,MAAM,QAAQ,MAAM,SAAS,CAAC;AAE/C,UAAI,CAAC,SAAS,GAAG,GAAG;AACnB,cAAM,IAAI,MAAM,iCAAiC;AAAA,MAClD;AAEA,iBAAW,OAAO,OAAO,KAAK,GAAG,GAAG;AACnC,YAAI,KAAK,kBAAkB,GAAG,GAAG;AAChC,mBAAS,IAAI,KAAK,IAAI,GAAG,CAAC;AAAA,QAC3B;AAAA,MACD;AAAA,IACD,SAAS,OAAO;AACf,UACsB,MAAO,wBAC5B,oBAAoB,gBACnB;AACD,aAAK,WAAW;AAAA,UACf;AAAA,UACA;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAEA,WAAO;AAAA,EACR;AAAA,EAEA,MAAc,UAAyB;AACtC,UAAM,WAAW,MAAM,KAAK,KAAK;AACjC,UAAM,OAAO,SAAS,KAAK,UAAU,QAAQ;AAC7C,SAAK,WAAW;AAEhB,QAAI,KAAK,SAAS,GAAG;AACpB,WAAK,aAAa,KAAK,IAAI;AAAA,IAC5B;AAAA,EACD;AACD;AAvEa,oBAAN;AAAA,EAUJ;AAAA,EACA;AAAA,GAXU;",
  "names": []
}
