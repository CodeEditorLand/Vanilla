{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/log/electron-main/loggerService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ResourceMap } from '../../../base/common/map.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Event } from '../../../base/common/event.js';\nimport { refineServiceDecorator } from '../../instantiation/common/instantiation.js';\nimport { DidChangeLoggersEvent, ILogger, ILoggerOptions, ILoggerResource, ILoggerService, LogLevel, isLogLevel } from '../common/log.js';\nimport { LoggerService } from '../node/loggerService.js';\n\nexport const ILoggerMainService = refineServiceDecorator<ILoggerService, ILoggerMainService>(ILoggerService);\n\nexport interface ILoggerMainService extends ILoggerService {\n\n\tgetOnDidChangeLogLevelEvent(windowId: number): Event<LogLevel | [URI, LogLevel]>;\n\n\tgetOnDidChangeVisibilityEvent(windowId: number): Event<[URI, boolean]>;\n\n\tgetOnDidChangeLoggersEvent(windowId: number): Event<DidChangeLoggersEvent>;\n\n\tcreateLogger(resource: URI, options?: ILoggerOptions, windowId?: number): ILogger;\n\n\tcreateLogger(id: string, options?: Omit<ILoggerOptions, 'id'>, windowId?: number): ILogger;\n\n\tregisterLogger(resource: ILoggerResource, windowId?: number): void;\n\n\tgetRegisteredLoggers(windowId?: number): ILoggerResource[];\n\n\tderegisterLoggers(windowId: number): void;\n\n}\n\nexport class LoggerMainService extends LoggerService implements ILoggerMainService {\n\n\tprivate readonly loggerResourcesByWindow = new ResourceMap<number>();\n\n\toverride createLogger(idOrResource: URI | string, options?: ILoggerOptions, windowId?: number): ILogger {\n\t\tif (windowId !== undefined) {\n\t\t\tthis.loggerResourcesByWindow.set(this.toResource(idOrResource), windowId);\n\t\t}\n\t\ttry {\n\t\t\treturn super.createLogger(idOrResource, options);\n\t\t} catch (error) {\n\t\t\tthis.loggerResourcesByWindow.delete(this.toResource(idOrResource));\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\toverride registerLogger(resource: ILoggerResource, windowId?: number): void {\n\t\tif (windowId !== undefined) {\n\t\t\tthis.loggerResourcesByWindow.set(resource.resource, windowId);\n\t\t}\n\t\tsuper.registerLogger(resource);\n\t}\n\n\toverride deregisterLogger(resource: URI): void {\n\t\tthis.loggerResourcesByWindow.delete(resource);\n\t\tsuper.deregisterLogger(resource);\n\t}\n\n\toverride getRegisteredLoggers(windowId?: number): ILoggerResource[] {\n\t\tconst resources: ILoggerResource[] = [];\n\t\tfor (const resource of super.getRegisteredLoggers()) {\n\t\t\tif (windowId === this.loggerResourcesByWindow.get(resource.resource)) {\n\t\t\t\tresources.push(resource);\n\t\t\t}\n\t\t}\n\t\treturn resources;\n\t}\n\n\tgetOnDidChangeLogLevelEvent(windowId: number): Event<LogLevel | [URI, LogLevel]> {\n\t\treturn Event.filter(this.onDidChangeLogLevel, arg => isLogLevel(arg) || this.isInterestedLoggerResource(arg[0], windowId));\n\t}\n\n\tgetOnDidChangeVisibilityEvent(windowId: number): Event<[URI, boolean]> {\n\t\treturn Event.filter(this.onDidChangeVisibility, ([resource]) => this.isInterestedLoggerResource(resource, windowId));\n\t}\n\n\tgetOnDidChangeLoggersEvent(windowId: number): Event<DidChangeLoggersEvent> {\n\t\treturn Event.filter(\n\t\t\tEvent.map(this.onDidChangeLoggers, e => {\n\t\t\t\tconst r = {\n\t\t\t\t\tadded: [...e.added].filter(loggerResource => this.isInterestedLoggerResource(loggerResource.resource, windowId)),\n\t\t\t\t\tremoved: [...e.removed].filter(loggerResource => this.isInterestedLoggerResource(loggerResource.resource, windowId)),\n\t\t\t\t};\n\t\t\t\treturn r;\n\t\t\t}), e => e.added.length > 0 || e.removed.length > 0);\n\t}\n\n\tderegisterLoggers(windowId: number): void {\n\t\tfor (const [resource, resourceWindow] of this.loggerResourcesByWindow) {\n\t\t\tif (resourceWindow === windowId) {\n\t\t\t\tthis.deregisterLogger(resource);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate isInterestedLoggerResource(resource: URI, windowId: number | undefined): boolean {\n\t\tconst loggerWindowId = this.loggerResourcesByWindow.get(resource);\n\t\treturn loggerWindowId === undefined || loggerWindowId === windowId;\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tthis.loggerResourcesByWindow.clear();\n\t}\n}\n\n"],
  "mappings": ";;AAKA,SAAS,mBAAmB;AAC5B,SAAS,WAAW;AACpB,SAAS,aAAa;AACtB,SAAS,8BAA8B;AACvC,SAAS,uBAAuB,SAAS,gBAAgB,iBAAiB,gBAAgB,UAAU,kBAAkB;AACtH,SAAS,qBAAqB;AAEvB,MAAM,qBAAqB,uBAA2D,cAAc;AAsBpG,MAAM,0BAA0B,cAA4C;AAAA,EAlCnF,OAkCmF;AAAA;AAAA;AAAA,EAEjE,0BAA0B,IAAI,YAAoB;AAAA,EAE1D,aAAa,cAA4B,SAA0B,UAA4B;AACvG,QAAI,aAAa,QAAW;AAC3B,WAAK,wBAAwB,IAAI,KAAK,WAAW,YAAY,GAAG,QAAQ;AAAA,IACzE;AACA,QAAI;AACH,aAAO,MAAM,aAAa,cAAc,OAAO;AAAA,IAChD,SAAS,OAAO;AACf,WAAK,wBAAwB,OAAO,KAAK,WAAW,YAAY,CAAC;AACjE,YAAM;AAAA,IACP;AAAA,EACD;AAAA,EAES,eAAe,UAA2B,UAAyB;AAC3E,QAAI,aAAa,QAAW;AAC3B,WAAK,wBAAwB,IAAI,SAAS,UAAU,QAAQ;AAAA,IAC7D;AACA,UAAM,eAAe,QAAQ;AAAA,EAC9B;AAAA,EAES,iBAAiB,UAAqB;AAC9C,SAAK,wBAAwB,OAAO,QAAQ;AAC5C,UAAM,iBAAiB,QAAQ;AAAA,EAChC;AAAA,EAES,qBAAqB,UAAsC;AACnE,UAAM,YAA+B,CAAC;AACtC,eAAW,YAAY,MAAM,qBAAqB,GAAG;AACpD,UAAI,aAAa,KAAK,wBAAwB,IAAI,SAAS,QAAQ,GAAG;AACrE,kBAAU,KAAK,QAAQ;AAAA,MACxB;AAAA,IACD;AACA,WAAO;AAAA,EACR;AAAA,EAEA,4BAA4B,UAAqD;AAChF,WAAO,MAAM,OAAO,KAAK,qBAAqB,SAAO,WAAW,GAAG,KAAK,KAAK,2BAA2B,IAAI,CAAC,GAAG,QAAQ,CAAC;AAAA,EAC1H;AAAA,EAEA,8BAA8B,UAAyC;AACtE,WAAO,MAAM,OAAO,KAAK,uBAAuB,CAAC,CAAC,QAAQ,MAAM,KAAK,2BAA2B,UAAU,QAAQ,CAAC;AAAA,EACpH;AAAA,EAEA,2BAA2B,UAAgD;AAC1E,WAAO,MAAM;AAAA,MACZ,MAAM,IAAI,KAAK,oBAAoB,OAAK;AACvC,cAAM,IAAI;AAAA,UACT,OAAO,CAAC,GAAG,EAAE,KAAK,EAAE,OAAO,oBAAkB,KAAK,2BAA2B,eAAe,UAAU,QAAQ,CAAC;AAAA,UAC/G,SAAS,CAAC,GAAG,EAAE,OAAO,EAAE,OAAO,oBAAkB,KAAK,2BAA2B,eAAe,UAAU,QAAQ,CAAC;AAAA,QACpH;AACA,eAAO;AAAA,MACR,CAAC;AAAA,MAAG,OAAK,EAAE,MAAM,SAAS,KAAK,EAAE,QAAQ,SAAS;AAAA,IAAC;AAAA,EACrD;AAAA,EAEA,kBAAkB,UAAwB;AACzC,eAAW,CAAC,UAAU,cAAc,KAAK,KAAK,yBAAyB;AACtE,UAAI,mBAAmB,UAAU;AAChC,aAAK,iBAAiB,QAAQ;AAAA,MAC/B;AAAA,IACD;AAAA,EACD;AAAA,EAEQ,2BAA2B,UAAe,UAAuC;AACxF,UAAM,iBAAiB,KAAK,wBAAwB,IAAI,QAAQ;AAChE,WAAO,mBAAmB,UAAa,mBAAmB;AAAA,EAC3D;AAAA,EAES,UAAgB;AACxB,UAAM,QAAQ;AACd,SAAK,wBAAwB,MAAM;AAAA,EACpC;AACD;",
  "names": []
}
