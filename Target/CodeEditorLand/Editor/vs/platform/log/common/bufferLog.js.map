{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/log/common/bufferLog.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { AbstractMessageLogger, DEFAULT_LOG_LEVEL, ILogger, log, LogLevel } from './log.js';\n\ninterface ILog {\n\tlevel: LogLevel;\n\tmessage: string;\n}\n\nexport class BufferLogger extends AbstractMessageLogger {\n\n\tdeclare readonly _serviceBrand: undefined;\n\tprivate buffer: ILog[] = [];\n\tprivate _logger: ILogger | undefined = undefined;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t\tthis._register(this.onDidChangeLogLevel(level => {\n\t\t\tthis._logger?.setLevel(level);\n\t\t}));\n\t}\n\n\tset logger(logger: ILogger) {\n\t\tthis._logger = logger;\n\n\t\tfor (const { level, message } of this.buffer) {\n\t\t\tlog(logger, level, message);\n\t\t}\n\n\t\tthis.buffer = [];\n\t}\n\n\tprotected log(level: LogLevel, message: string): void {\n\t\tif (this._logger) {\n\t\t\tlog(this._logger, level, message);\n\t\t} else if (this.getLevel() <= level) {\n\t\t\tthis.buffer.push({ level, message });\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tthis._logger?.dispose();\n\t\tsuper.dispose();\n\t}\n\n\toverride flush(): void {\n\t\tthis._logger?.flush();\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,uBAAuB,mBAAmB,SAAS,KAAK,gBAAgB;AAO1E,MAAM,qBAAqB,sBAAsB;AAAA,EAZxD,OAYwD;AAAA;AAAA;AAAA,EAG/C,SAAiB,CAAC;AAAA,EAClB,UAA+B;AAAA,EAEvC,YAAY,WAAqB,mBAAmB;AACnD,UAAM;AACN,SAAK,SAAS,QAAQ;AACtB,SAAK,UAAU,KAAK,oBAAoB,WAAS;AAChD,WAAK,SAAS,SAAS,KAAK;AAAA,IAC7B,CAAC,CAAC;AAAA,EACH;AAAA,EAEA,IAAI,OAAO,QAAiB;AAC3B,SAAK,UAAU;AAEf,eAAW,EAAE,OAAO,QAAQ,KAAK,KAAK,QAAQ;AAC7C,UAAI,QAAQ,OAAO,OAAO;AAAA,IAC3B;AAEA,SAAK,SAAS,CAAC;AAAA,EAChB;AAAA,EAEU,IAAI,OAAiB,SAAuB;AACrD,QAAI,KAAK,SAAS;AACjB,UAAI,KAAK,SAAS,OAAO,OAAO;AAAA,IACjC,WAAW,KAAK,SAAS,KAAK,OAAO;AACpC,WAAK,OAAO,KAAK,EAAE,OAAO,QAAQ,CAAC;AAAA,IACpC;AAAA,EACD;AAAA,EAES,UAAgB;AACxB,SAAK,SAAS,QAAQ;AACtB,UAAM,QAAQ;AAAA,EACf;AAAA,EAES,QAAc;AACtB,SAAK,SAAS,MAAM;AAAA,EACrB;AACD;",
  "names": []
}
