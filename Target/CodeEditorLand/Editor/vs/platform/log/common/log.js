import{toErrorMessage as h}from"../../../base/common/errorMessage.js";import{Emitter as a}from"../../../base/common/event.js";import{hash as p}from"../../../base/common/hash.js";import{Disposable as u}from"../../../base/common/lifecycle.js";import{ResourceMap as y}from"../../../base/common/map.js";import{isWindows as I}from"../../../base/common/platform.js";import{joinPath as b}from"../../../base/common/resources.js";import{isNumber as E,isString as c}from"../../../base/common/types.js";import{URI as x}from"../../../base/common/uri.js";import*as n from"../../../nls.js";import{RawContextKey as w}from"../../contextkey/common/contextkey.js";import{createDecorator as m}from"../../instantiation/common/instantiation.js";const N=m("logService"),B=m("loggerService");function j(){return new Date().toISOString()}function F(s){return E(s)}var R=(i=>(i[i.Off=0]="Off",i[i.Trace=1]="Trace",i[i.Debug=2]="Debug",i[i.Info=3]="Info",i[i.Warning=4]="Warning",i[i.Error=5]="Error",i))(R||{});const L=3;function G(s,g,e){switch(g){case 1:s.trace(e);break;case 2:s.debug(e);break;case 3:s.info(e);break;case 4:s.warn(e);break;case 5:s.error(e);break;case 0:break;default:throw new Error(`Invalid log level ${g}`)}}function l(s,g=!1){let e="";for(let o=0;o<s.length;o++){let r=s[o];if(r instanceof Error&&(r=h(r,g)),typeof r=="object")try{r=JSON.stringify(r)}catch{}e+=(o>0?" ":"")+r}return e}class v extends u{level=L;_onDidChangeLogLevel=this._register(new a);onDidChangeLogLevel=this._onDidChangeLogLevel.event;setLevel(g){this.level!==g&&(this.level=g,this._onDidChangeLogLevel.fire(this.level))}getLevel(){return this.level}checkLogLevel(g){return this.level!==0&&this.level<=g}}class H extends v{constructor(e){super();this.logAlways=e}checkLogLevel(e){return this.logAlways||super.checkLogLevel(e)}trace(e,...o){this.checkLogLevel(1)&&this.log(1,l([e,...o],!0))}debug(e,...o){this.checkLogLevel(2)&&this.log(2,l([e,...o]))}info(e,...o){this.checkLogLevel(3)&&this.log(3,l([e,...o]))}warn(e,...o){this.checkLogLevel(4)&&this.log(4,l([e,...o]))}error(e,...o){if(this.checkLogLevel(5))if(e instanceof Error){const r=Array.prototype.slice.call(arguments);r[0]=e.stack,this.log(5,l(r))}else this.log(5,l([e,...o]))}flush(){}}class J extends v{useColors;constructor(g=L){super(),this.setLevel(g),this.useColors=!I}trace(g,...e){this.checkLogLevel(1)&&this.useColors}debug(g,...e){this.checkLogLevel(2)&&this.useColors}info(g,...e){this.checkLogLevel(3)&&this.useColors}warn(g,...e){this.checkLogLevel(4)&&this.useColors}error(g,...e){this.checkLogLevel(5)&&this.useColors}flush(){}}class K extends v{constructor(e=L,o=!0){super();this.useColors=o;this.setLevel(e)}trace(e,...o){this.checkLogLevel(1)&&this.useColors}debug(e,...o){this.checkLogLevel(2)&&this.useColors}info(e,...o){this.checkLogLevel(3)&&this.useColors}warn(e,...o){this.checkLogLevel(4)&&this.useColors}error(e,...o){this.checkLogLevel(5)&&this.useColors}flush(){}}class P extends v{constructor(e,o=L){super();this.adapter=e;this.setLevel(o)}trace(e,...o){this.checkLogLevel(1)&&this.adapter.log(1,[this.extractMessage(e),...o])}debug(e,...o){this.checkLogLevel(2)&&this.adapter.log(2,[this.extractMessage(e),...o])}info(e,...o){this.checkLogLevel(3)&&this.adapter.log(3,[this.extractMessage(e),...o])}warn(e,...o){this.checkLogLevel(4)&&this.adapter.log(4,[this.extractMessage(e),...o])}error(e,...o){this.checkLogLevel(5)&&this.adapter.log(5,[this.extractMessage(e),...o])}extractMessage(e){return typeof e=="string"?e:h(e,this.checkLogLevel(1))}flush(){}}class X extends v{constructor(e){super();this.loggers=e;e.length&&this.setLevel(e[0].getLevel())}setLevel(e){for(const o of this.loggers)o.setLevel(e);super.setLevel(e)}trace(e,...o){for(const r of this.loggers)r.trace(e,...o)}debug(e,...o){for(const r of this.loggers)r.debug(e,...o)}info(e,...o){for(const r of this.loggers)r.info(e,...o)}warn(e,...o){for(const r of this.loggers)r.warn(e,...o)}error(e,...o){for(const r of this.loggers)r.error(e,...o)}flush(){for(const e of this.loggers)e.flush()}dispose(){for(const e of this.loggers)e.dispose();super.dispose()}}class q extends u{constructor(e,o,r){super();this.logLevel=e;this.logsHome=o;if(r)for(const t of r)this._loggers.set(t.resource,{logger:void 0,info:t})}_loggers=new y;_onDidChangeLoggers=this._register(new a);onDidChangeLoggers=this._onDidChangeLoggers.event;_onDidChangeLogLevel=this._register(new a);onDidChangeLogLevel=this._onDidChangeLogLevel.event;_onDidChangeVisibility=this._register(new a);onDidChangeVisibility=this._onDidChangeVisibility.event;getLoggerEntry(e){return c(e)?[...this._loggers.values()].find(o=>o.info.id===e):this._loggers.get(e)}getLogger(e){return this.getLoggerEntry(e)?.logger}createLogger(e,o){const r=this.toResource(e),t=c(e)?e:o?.id??p(r.toString()).toString(16);let i=this._loggers.get(r)?.logger;const d=o?.logLevel==="always"?1:o?.logLevel;i||(i=this.doCreateLogger(r,d??this.getLogLevel(r)??this.logLevel,{...o,id:t}));const f={logger:i,info:{resource:r,id:t,logLevel:d,name:o?.name,hidden:o?.hidden,extensionId:o?.extensionId,when:o?.when}};return this.registerLogger(f.info),this._loggers.set(r,f),i}toResource(e){return c(e)?b(this.logsHome,`${e}.log`):e}setLogLevel(e,o){if(x.isUri(e)){const r=e,t=o,i=this._loggers.get(r);i&&t!==i.info.logLevel&&(i.info.logLevel=t===this.logLevel?void 0:t,i.logger?.setLevel(t),this._loggers.set(i.info.resource,i),this._onDidChangeLogLevel.fire([r,t]))}else{this.logLevel=e;for(const[r,t]of this._loggers.entries())this._loggers.get(r)?.info.logLevel===void 0&&t.logger?.setLevel(this.logLevel);this._onDidChangeLogLevel.fire(this.logLevel)}}setVisibility(e,o){const r=this.getLoggerEntry(e);r&&o!==!r.info.hidden&&(r.info.hidden=!o,this._loggers.set(r.info.resource,r),this._onDidChangeVisibility.fire([r.info.resource,o]))}getLogLevel(e){let o;return e&&(o=this._loggers.get(e)?.info.logLevel),o??this.logLevel}registerLogger(e){const o=this._loggers.get(e.resource);o?o.info.hidden!==e.hidden&&this.setVisibility(e.resource,!e.hidden):(this._loggers.set(e.resource,{info:e,logger:void 0}),this._onDidChangeLoggers.fire({added:[e],removed:[]}))}deregisterLogger(e){const o=this._loggers.get(e);o&&(o.logger&&o.logger.dispose(),this._loggers.delete(e),this._onDidChangeLoggers.fire({added:[],removed:[o.info]}))}*getRegisteredLoggers(){for(const e of this._loggers.values())yield e.info}getRegisteredLogger(e){return this._loggers.get(e)?.info}dispose(){this._loggers.forEach(e=>e.logger?.dispose()),this._loggers.clear(),super.dispose()}}class C{onDidChangeLogLevel=new a().event;setLevel(g){}getLevel(){return 3}trace(g,...e){}debug(g,...e){}info(g,...e){}warn(g,...e){}error(g,...e){}critical(g,...e){}dispose(){}flush(){}}class Q extends C{}function Y(s){if(s.verbose)return 1;if(typeof s.logLevel=="string"){const g=D(s.logLevel.toLowerCase());if(g!==void 0)return g}return L}function _(s){switch(s){case 1:return"trace";case 2:return"debug";case 3:return"info";case 4:return"warn";case 5:return"error";case 0:return"off"}}function Z(s){switch(s){case 1:return{original:"Trace",value:n.localize("trace","Trace")};case 2:return{original:"Debug",value:n.localize("debug","Debug")};case 3:return{original:"Info",value:n.localize("info","Info")};case 4:return{original:"Warning",value:n.localize("warn","Warning")};case 5:return{original:"Error",value:n.localize("error","Error")};case 0:return{original:"Off",value:n.localize("off","Off")}}}function D(s){switch(s){case"trace":return 1;case"debug":return 2;case"info":return 3;case"warn":return 4;case"error":return 5;case"critical":return 5;case"off":return 0}}const ee=new w("logLevel",_(3));export{v as AbstractLogger,q as AbstractLoggerService,H as AbstractMessageLogger,P as AdapterLogger,ee as CONTEXT_LOG_LEVEL,K as ConsoleLogger,J as ConsoleMainLogger,L as DEFAULT_LOG_LEVEL,N as ILogService,B as ILoggerService,R as LogLevel,Z as LogLevelToLocalizedString,_ as LogLevelToString,X as MultiplexLogger,Q as NullLogService,C as NullLogger,Y as getLogLevel,F as isLogLevel,G as log,D as parseLogLevel};
