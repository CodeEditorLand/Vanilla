{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/log/common/logService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { Event } from \"../../../base/common/event.js\";\nimport { Disposable } from \"../../../base/common/lifecycle.js\";\nimport {\n\ttype ILogService,\n\ttype ILogger,\n\ttype LogLevel,\n\tMultiplexLogger,\n} from \"./log.js\";\n\nexport class LogService extends Disposable implements ILogService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly logger: ILogger;\n\n\tconstructor(primaryLogger: ILogger, otherLoggers: ILogger[] = []) {\n\t\tsuper();\n\t\tthis.logger = new MultiplexLogger([primaryLogger, ...otherLoggers]);\n\t\tthis._register(\n\t\t\tprimaryLogger.onDidChangeLogLevel((level) => this.setLevel(level)),\n\t\t);\n\t}\n\n\tget onDidChangeLogLevel(): Event<LogLevel> {\n\t\treturn this.logger.onDidChangeLogLevel;\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tthis.logger.setLevel(level);\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.logger.getLevel();\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tthis.logger.trace(message, ...args);\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tthis.logger.debug(message, ...args);\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tthis.logger.info(message, ...args);\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tthis.logger.warn(message, ...args);\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tthis.logger.error(message, ...args);\n\t}\n\n\tflush(): void {\n\t\tthis.logger.flush();\n\t}\n}\n"],
  "mappings": ";;AAMA,SAAS,kBAAkB;AAC3B;AAAA,EAIC;AAAA,OACM;AAEA,MAAM,mBAAmB,WAAkC;AAAA,EAdlE,OAckE;AAAA;AAAA;AAAA,EAGhD;AAAA,EAEjB,YAAY,eAAwB,eAA0B,CAAC,GAAG;AACjE,UAAM;AACN,SAAK,SAAS,IAAI,gBAAgB,CAAC,eAAe,GAAG,YAAY,CAAC;AAClE,SAAK;AAAA,MACJ,cAAc,oBAAoB,CAAC,UAAU,KAAK,SAAS,KAAK,CAAC;AAAA,IAClE;AAAA,EACD;AAAA,EAEA,IAAI,sBAAuC;AAC1C,WAAO,KAAK,OAAO;AAAA,EACpB;AAAA,EAEA,SAAS,OAAuB;AAC/B,SAAK,OAAO,SAAS,KAAK;AAAA,EAC3B;AAAA,EAEA,WAAqB;AACpB,WAAO,KAAK,OAAO,SAAS;AAAA,EAC7B;AAAA,EAEA,MAAM,YAAoB,MAAmB;AAC5C,SAAK,OAAO,MAAM,SAAS,GAAG,IAAI;AAAA,EACnC;AAAA,EAEA,MAAM,YAAoB,MAAmB;AAC5C,SAAK,OAAO,MAAM,SAAS,GAAG,IAAI;AAAA,EACnC;AAAA,EAEA,KAAK,YAAoB,MAAmB;AAC3C,SAAK,OAAO,KAAK,SAAS,GAAG,IAAI;AAAA,EAClC;AAAA,EAEA,KAAK,YAAoB,MAAmB;AAC3C,SAAK,OAAO,KAAK,SAAS,GAAG,IAAI;AAAA,EAClC;AAAA,EAEA,MAAM,YAA4B,MAAmB;AACpD,SAAK,OAAO,MAAM,SAAS,GAAG,IAAI;AAAA,EACnC;AAAA,EAEA,QAAc;AACb,SAAK,OAAO,MAAM;AAAA,EACnB;AACD;",
  "names": []
}
