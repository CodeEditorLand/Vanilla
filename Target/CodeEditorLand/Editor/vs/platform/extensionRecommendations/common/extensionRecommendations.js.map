{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/platform/extensionRecommendations/common/extensionRecommendations.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from '../../../base/common/uri.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\n\nexport const enum RecommendationSource {\n\tFILE = 1,\n\tWORKSPACE = 2,\n\tEXE = 3\n}\n\nexport interface IExtensionRecommendations {\n\tsource: RecommendationSource;\n\textensions: string[];\n\tname: string;\n\tsearchValue?: string;\n}\n\nexport function RecommendationSourceToString(source: RecommendationSource) {\n\tswitch (source) {\n\t\tcase RecommendationSource.FILE: return 'file';\n\t\tcase RecommendationSource.WORKSPACE: return 'workspace';\n\t\tcase RecommendationSource.EXE: return 'exe';\n\t}\n}\n\nexport const enum RecommendationsNotificationResult {\n\tIgnored = 'ignored',\n\tCancelled = 'cancelled',\n\tTooMany = 'toomany',\n\tIncompatibleWindow = 'incompatibleWindow',\n\tAccepted = 'reacted',\n}\n\nexport const IExtensionRecommendationNotificationService = createDecorator<IExtensionRecommendationNotificationService>('IExtensionRecommendationNotificationService');\n\nexport interface IExtensionRecommendationNotificationService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly ignoredRecommendations: string[];\n\thasToIgnoreRecommendationNotifications(): boolean;\n\n\tpromptImportantExtensionsInstallNotification(recommendations: IExtensionRecommendations): Promise<RecommendationsNotificationResult>;\n\tpromptWorkspaceRecommendations(recommendations: Array<string | URI>): Promise<void>;\n}\n\n"],
  "mappings": ";;AAKA,SAAS,WAAW;AACpB,SAAS,uBAAuB;AAEzB,IAAW,uBAAX,kBAAWA,0BAAX;AACN,EAAAA,4CAAA,UAAO,KAAP;AACA,EAAAA,4CAAA,eAAY,KAAZ;AACA,EAAAA,4CAAA,SAAM,KAAN;AAHiB,SAAAA;AAAA,GAAA;AAaX,SAAS,6BAA6B,QAA8B;AAC1E,UAAQ,QAAQ;AAAA,IACf,KAAK;AAA2B,aAAO;AAAA,IACvC,KAAK;AAAgC,aAAO;AAAA,IAC5C,KAAK;AAA0B,aAAO;AAAA,EACvC;AACD;AANgB;AAQT,IAAW,oCAAX,kBAAWC,uCAAX;AACN,EAAAA,mCAAA,aAAU;AACV,EAAAA,mCAAA,eAAY;AACZ,EAAAA,mCAAA,aAAU;AACV,EAAAA,mCAAA,wBAAqB;AACrB,EAAAA,mCAAA,cAAW;AALM,SAAAA;AAAA,GAAA;AAQX,MAAM,8CAA8C,gBAA6D,6CAA6C;",
  "names": ["RecommendationSource", "RecommendationsNotificationResult"]
}
