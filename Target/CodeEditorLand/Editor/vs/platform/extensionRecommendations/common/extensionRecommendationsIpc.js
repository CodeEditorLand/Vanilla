class i{constructor(n){this.channel=n}get ignoredRecommendations(){throw new Error("not supported")}promptImportantExtensionsInstallNotification(n){return this.channel.call("promptImportantExtensionsInstallNotification",[n])}promptWorkspaceRecommendations(n){throw new Error("not supported")}hasToIgnoreRecommendationNotifications(){throw new Error("not supported")}}class r{constructor(n){this.service=n}listen(n,o){throw new Error(`Event not found: ${o}`)}call(n,o,t){switch(o){case"promptImportantExtensionsInstallNotification":return this.service.promptImportantExtensionsInstallNotification(t[0])}throw new Error(`Call not found: ${o}`)}}export{r as ExtensionRecommendationNotificationServiceChannel,i as ExtensionRecommendationNotificationServiceChannelClient};
