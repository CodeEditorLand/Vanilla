import"../../../../vs/base/common/event.js";import"../../../../vs/base/parts/ipc/common/ipc.js";import"../../../../vs/platform/extensionRecommendations/common/extensionRecommendations.js";class E{constructor(n){this.channel=n}get ignoredRecommendations(){throw new Error("not supported")}promptImportantExtensionsInstallNotification(n){return this.channel.call("promptImportantExtensionsInstallNotification",[n])}promptWorkspaceRecommendations(n){throw new Error("not supported")}hasToIgnoreRecommendationNotifications(){throw new Error("not supported")}}class f{constructor(n){this.service=n}listen(n,o){throw new Error(`Event not found: ${o}`)}call(n,o,e){switch(o){case"promptImportantExtensionsInstallNotification":return this.service.promptImportantExtensionsInstallNotification(e[0])}throw new Error(`Call not found: ${o}`)}}export{f as ExtensionRecommendationNotificationServiceChannel,E as ExtensionRecommendationNotificationServiceChannelClient};
