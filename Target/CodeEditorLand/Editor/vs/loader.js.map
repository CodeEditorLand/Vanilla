{
  "version": 3,
  "sources": ["../../../../Dependency/CodeEditorLand/Editor/Source/vs/loader.js"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/*---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n * Please make sure to make edits in the .ts file at https://github.com/microsoft/vscode-loader/\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *--------------------------------------------------------------------------------------------*/\nconst _amdLoaderGlobal = this;\nconst _commonjsGlobal = typeof global === 'object' ? global : {};\nvar AMDLoader;\n(function (AMDLoader) {\n\tAMDLoader.global = _amdLoaderGlobal;\n\tclass Environment {\n\t\tget isWindows() {\n\t\t\tthis._detect();\n\t\t\treturn this._isWindows;\n\t\t}\n\t\tget isNode() {\n\t\t\tthis._detect();\n\t\t\treturn this._isNode;\n\t\t}\n\t\tget isElectronRenderer() {\n\t\t\tthis._detect();\n\t\t\treturn this._isElectronRenderer;\n\t\t}\n\t\tget isWebWorker() {\n\t\t\tthis._detect();\n\t\t\treturn this._isWebWorker;\n\t\t}\n\t\tget isElectronNodeIntegrationWebWorker() {\n\t\t\tthis._detect();\n\t\t\treturn this._isElectronNodeIntegrationWebWorker;\n\t\t}\n\t\tconstructor() {\n\t\t\tthis._detected = false;\n\t\t\tthis._isWindows = false;\n\t\t\tthis._isNode = false;\n\t\t\tthis._isElectronRenderer = false;\n\t\t\tthis._isWebWorker = false;\n\t\t\tthis._isElectronNodeIntegrationWebWorker = false;\n\t\t}\n\t\t_detect() {\n\t\t\tif (this._detected) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._detected = true;\n\t\t\tthis._isWindows = Environment._isWindows();\n\t\t\tthis._isNode = (typeof module !== 'undefined' && !!module.exports);\n\t\t\tthis._isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\n\t\t\tthis._isWebWorker = (typeof AMDLoader.global.importScripts === 'function');\n\t\t\tthis._isElectronNodeIntegrationWebWorker = this._isWebWorker && (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'worker');\n\t\t}\n\t\tstatic _isWindows() {\n\t\t\tif (typeof navigator !== 'undefined') {\n\t\t\t\tif (navigator.userAgent && navigator.userAgent.indexOf('Windows') >= 0) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof process !== 'undefined') {\n\t\t\t\treturn (process.platform === 'win32');\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n\tAMDLoader.Environment = Environment;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n\tclass LoaderEvent {\n\t\tconstructor(type, detail, timestamp) {\n\t\t\tthis.type = type;\n\t\t\tthis.detail = detail;\n\t\t\tthis.timestamp = timestamp;\n\t\t}\n\t}\n\tAMDLoader.LoaderEvent = LoaderEvent;\n\tclass LoaderEventRecorder {\n\t\tconstructor(loaderAvailableTimestamp) {\n\t\t\tthis._events = [new LoaderEvent(1 /* LoaderEventType.LoaderAvailable */, '', loaderAvailableTimestamp)];\n\t\t}\n\t\trecord(type, detail) {\n\t\t\tthis._events.push(new LoaderEvent(type, detail, AMDLoader.Utilities.getHighPerformanceTimestamp()));\n\t\t}\n\t\tgetEvents() {\n\t\t\treturn this._events;\n\t\t}\n\t}\n\tAMDLoader.LoaderEventRecorder = LoaderEventRecorder;\n\tclass NullLoaderEventRecorder {\n\t\trecord(type, detail) {\n\t\t\t// Nothing to do\n\t\t}\n\t\tgetEvents() {\n\t\t\treturn [];\n\t\t}\n\t}\n\tNullLoaderEventRecorder.INSTANCE = new NullLoaderEventRecorder();\n\tAMDLoader.NullLoaderEventRecorder = NullLoaderEventRecorder;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n\tclass Utilities {\n\t\t/**\n\t\t * This method does not take care of / vs \\\n\t\t */\n\t\tstatic fileUriToFilePath(isWindows, uri) {\n\t\t\turi = decodeURI(uri).replace(/%23/g, '#');\n\t\t\tif (isWindows) {\n\t\t\t\tif (/^file:\\/\\/\\//.test(uri)) {\n\t\t\t\t\t// This is a URI without a hostname => return only the path segment\n\t\t\t\t\treturn uri.substr(8);\n\t\t\t\t}\n\t\t\t\tif (/^file:\\/\\//.test(uri)) {\n\t\t\t\t\treturn uri.substr(5);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (/^file:\\/\\//.test(uri)) {\n\t\t\t\t\treturn uri.substr(7);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Not sure...\n\t\t\treturn uri;\n\t\t}\n\t\tstatic startsWith(haystack, needle) {\n\t\t\treturn haystack.length >= needle.length && haystack.substr(0, needle.length) === needle;\n\t\t}\n\t\tstatic endsWith(haystack, needle) {\n\t\t\treturn haystack.length >= needle.length && haystack.substr(haystack.length - needle.length) === needle;\n\t\t}\n\t\t// only check for \"?\" before \"#\" to ensure that there is a real Query-String\n\t\tstatic containsQueryString(url) {\n\t\t\treturn /^[^\\#]*\\?/gi.test(url);\n\t\t}\n\t\t/**\n\t\t * Does `url` start with http:// or https:// or file:// or / ?\n\t\t */\n\t\tstatic isAbsolutePath(url) {\n\t\t\treturn /^((http:\\/\\/)|(https:\\/\\/)|(file:\\/\\/)|(\\/))/.test(url);\n\t\t}\n\t\tstatic forEachProperty(obj, callback) {\n\t\t\tif (obj) {\n\t\t\t\tlet key;\n\t\t\t\tfor (key in obj) {\n\t\t\t\t\tif (obj.hasOwnProperty(key)) {\n\t\t\t\t\t\tcallback(key, obj[key]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tstatic isEmpty(obj) {\n\t\t\tlet isEmpty = true;\n\t\t\tUtilities.forEachProperty(obj, () => {\n\t\t\t\tisEmpty = false;\n\t\t\t});\n\t\t\treturn isEmpty;\n\t\t}\n\t\tstatic recursiveClone(obj) {\n\t\t\tif (!obj || typeof obj !== 'object' || obj instanceof RegExp) {\n\t\t\t\treturn obj;\n\t\t\t}\n\t\t\tif (!Array.isArray(obj) && Object.getPrototypeOf(obj) !== Object.prototype) {\n\t\t\t\t// only clone \"simple\" objects\n\t\t\t\treturn obj;\n\t\t\t}\n\t\t\tlet result = Array.isArray(obj) ? [] : {};\n\t\t\tUtilities.forEachProperty(obj, (key, value) => {\n\t\t\t\tif (value && typeof value === 'object') {\n\t\t\t\t\tresult[key] = Utilities.recursiveClone(value);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tresult[key] = value;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn result;\n\t\t}\n\t\tstatic generateAnonymousModule() {\n\t\t\treturn '===anonymous' + (Utilities.NEXT_ANONYMOUS_ID++) + '===';\n\t\t}\n\t\tstatic isAnonymousModule(id) {\n\t\t\treturn Utilities.startsWith(id, '===anonymous');\n\t\t}\n\t\tstatic getHighPerformanceTimestamp() {\n\t\t\tif (!this.PERFORMANCE_NOW_PROBED) {\n\t\t\t\tthis.PERFORMANCE_NOW_PROBED = true;\n\t\t\t\tthis.HAS_PERFORMANCE_NOW = (AMDLoader.global.performance && typeof AMDLoader.global.performance.now === 'function');\n\t\t\t}\n\t\t\treturn (this.HAS_PERFORMANCE_NOW ? AMDLoader.global.performance.now() : Date.now());\n\t\t}\n\t}\n\tUtilities.NEXT_ANONYMOUS_ID = 1;\n\tUtilities.PERFORMANCE_NOW_PROBED = false;\n\tUtilities.HAS_PERFORMANCE_NOW = false;\n\tAMDLoader.Utilities = Utilities;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n\tfunction ensureError(err) {\n\t\tif (err instanceof Error) {\n\t\t\treturn err;\n\t\t}\n\t\tconst result = new Error(err.message || String(err) || 'Unknown Error');\n\t\tif (err.stack) {\n\t\t\tresult.stack = err.stack;\n\t\t}\n\t\treturn result;\n\t}\n\tAMDLoader.ensureError = ensureError;\n\t;\n\tclass ConfigurationOptionsUtil {\n\t\t/**\n\t\t * Ensure configuration options make sense\n\t\t */\n\t\tstatic validateConfigurationOptions(options) {\n\t\t\tfunction defaultOnError(err) {\n\t\t\t\tif (err.phase === 'loading') {\n\t\t\t\t\tconsole.error('Loading \"' + err.moduleId + '\" failed');\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t\tconsole.error('Here are the modules that depend on it:');\n\t\t\t\t\tconsole.error(err.neededBy);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (err.phase === 'factory') {\n\t\t\t\t\tconsole.error('The factory function of \"' + err.moduleId + '\" has thrown an exception');\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t\tconsole.error('Here are the modules that depend on it:');\n\t\t\t\t\tconsole.error(err.neededBy);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\toptions = options || {};\n\t\t\tif (typeof options.baseUrl !== 'string') {\n\t\t\t\toptions.baseUrl = '';\n\t\t\t}\n\t\t\tif (typeof options.isBuild !== 'boolean') {\n\t\t\t\toptions.isBuild = false;\n\t\t\t}\n\t\t\tif (typeof options.paths !== 'object') {\n\t\t\t\toptions.paths = {};\n\t\t\t}\n\t\t\tif (typeof options.config !== 'object') {\n\t\t\t\toptions.config = {};\n\t\t\t}\n\t\t\tif (typeof options.catchError === 'undefined') {\n\t\t\t\toptions.catchError = false;\n\t\t\t}\n\t\t\tif (typeof options.recordStats === 'undefined') {\n\t\t\t\toptions.recordStats = false;\n\t\t\t}\n\t\t\tif (typeof options.urlArgs !== 'string') {\n\t\t\t\toptions.urlArgs = '';\n\t\t\t}\n\t\t\tif (typeof options.onError !== 'function') {\n\t\t\t\toptions.onError = defaultOnError;\n\t\t\t}\n\t\t\tif (!Array.isArray(options.ignoreDuplicateModules)) {\n\t\t\t\toptions.ignoreDuplicateModules = [];\n\t\t\t}\n\t\t\tif (options.baseUrl.length > 0) {\n\t\t\t\tif (!AMDLoader.Utilities.endsWith(options.baseUrl, '/')) {\n\t\t\t\t\toptions.baseUrl += '/';\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof options.cspNonce !== 'string') {\n\t\t\t\toptions.cspNonce = '';\n\t\t\t}\n\t\t\tif (typeof options.preferScriptTags === 'undefined') {\n\t\t\t\toptions.preferScriptTags = false;\n\t\t\t}\n\t\t\tif (options.nodeCachedData && typeof options.nodeCachedData === 'object') {\n\t\t\t\tif (typeof options.nodeCachedData.seed !== 'string') {\n\t\t\t\t\toptions.nodeCachedData.seed = 'seed';\n\t\t\t\t}\n\t\t\t\tif (typeof options.nodeCachedData.writeDelay !== 'number' || options.nodeCachedData.writeDelay < 0) {\n\t\t\t\t\toptions.nodeCachedData.writeDelay = 1000 * 7;\n\t\t\t\t}\n\t\t\t\tif (!options.nodeCachedData.path || typeof options.nodeCachedData.path !== 'string') {\n\t\t\t\t\tconst err = ensureError(new Error('INVALID cached data configuration, \\'path\\' MUST be set'));\n\t\t\t\t\terr.phase = 'configuration';\n\t\t\t\t\toptions.onError(err);\n\t\t\t\t\toptions.nodeCachedData = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn options;\n\t\t}\n\t\tstatic mergeConfigurationOptions(overwrite = null, base = null) {\n\t\t\tlet result = AMDLoader.Utilities.recursiveClone(base || {});\n\t\t\t// Merge known properties and overwrite the unknown ones\n\t\t\tAMDLoader.Utilities.forEachProperty(overwrite, (key, value) => {\n\t\t\t\tif (key === 'ignoreDuplicateModules' && typeof result.ignoreDuplicateModules !== 'undefined') {\n\t\t\t\t\tresult.ignoreDuplicateModules = result.ignoreDuplicateModules.concat(value);\n\t\t\t\t}\n\t\t\t\telse if (key === 'paths' && typeof result.paths !== 'undefined') {\n\t\t\t\t\tAMDLoader.Utilities.forEachProperty(value, (key2, value2) => result.paths[key2] = value2);\n\t\t\t\t}\n\t\t\t\telse if (key === 'config' && typeof result.config !== 'undefined') {\n\t\t\t\t\tAMDLoader.Utilities.forEachProperty(value, (key2, value2) => result.config[key2] = value2);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tresult[key] = AMDLoader.Utilities.recursiveClone(value);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ConfigurationOptionsUtil.validateConfigurationOptions(result);\n\t\t}\n\t}\n\tAMDLoader.ConfigurationOptionsUtil = ConfigurationOptionsUtil;\n\tclass Configuration {\n\t\tconstructor(env, options) {\n\t\t\tthis._env = env;\n\t\t\tthis.options = ConfigurationOptionsUtil.mergeConfigurationOptions(options);\n\t\t\tthis._createIgnoreDuplicateModulesMap();\n\t\t\tthis._createSortedPathsRules();\n\t\t\tif (this.options.baseUrl === '') {\n\t\t\t\tif (this.options.nodeRequire && this.options.nodeRequire.main && this.options.nodeRequire.main.filename && this._env.isNode) {\n\t\t\t\t\tlet nodeMain = this.options.nodeRequire.main.filename;\n\t\t\t\t\tlet dirnameIndex = Math.max(nodeMain.lastIndexOf('/'), nodeMain.lastIndexOf('\\\\'));\n\t\t\t\t\tthis.options.baseUrl = nodeMain.substring(0, dirnameIndex + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_createIgnoreDuplicateModulesMap() {\n\t\t\t// Build a map out of the ignoreDuplicateModules array\n\t\t\tthis.ignoreDuplicateModulesMap = {};\n\t\t\tfor (let i = 0; i < this.options.ignoreDuplicateModules.length; i++) {\n\t\t\t\tthis.ignoreDuplicateModulesMap[this.options.ignoreDuplicateModules[i]] = true;\n\t\t\t}\n\t\t}\n\t\t_createSortedPathsRules() {\n\t\t\t// Create an array our of the paths rules, sorted descending by length to\n\t\t\t// result in a more specific -> less specific order\n\t\t\tthis.sortedPathsRules = [];\n\t\t\tAMDLoader.Utilities.forEachProperty(this.options.paths, (from, to) => {\n\t\t\t\tif (!Array.isArray(to)) {\n\t\t\t\t\tthis.sortedPathsRules.push({\n\t\t\t\t\t\tfrom: from,\n\t\t\t\t\t\tto: [to]\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.sortedPathsRules.push({\n\t\t\t\t\t\tfrom: from,\n\t\t\t\t\t\tto: to\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.sortedPathsRules.sort((a, b) => {\n\t\t\t\treturn b.from.length - a.from.length;\n\t\t\t});\n\t\t}\n\t\t/**\n\t\t * Clone current configuration and overwrite options selectively.\n\t\t * @param options The selective options to overwrite with.\n\t\t * @result A new configuration\n\t\t */\n\t\tcloneAndMerge(options) {\n\t\t\treturn new Configuration(this._env, ConfigurationOptionsUtil.mergeConfigurationOptions(options, this.options));\n\t\t}\n\t\t/**\n\t\t * Get current options bag. Useful for passing it forward to plugins.\n\t\t */\n\t\tgetOptionsLiteral() {\n\t\t\treturn this.options;\n\t\t}\n\t\t_applyPaths(moduleId) {\n\t\t\tlet pathRule;\n\t\t\tfor (let i = 0, len = this.sortedPathsRules.length; i < len; i++) {\n\t\t\t\tpathRule = this.sortedPathsRules[i];\n\t\t\t\tif (AMDLoader.Utilities.startsWith(moduleId, pathRule.from)) {\n\t\t\t\t\tlet result = [];\n\t\t\t\t\tfor (let j = 0, lenJ = pathRule.to.length; j < lenJ; j++) {\n\t\t\t\t\t\tresult.push(pathRule.to[j] + moduleId.substr(pathRule.from.length));\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn [moduleId];\n\t\t}\n\t\t_addUrlArgsToUrl(url) {\n\t\t\tif (AMDLoader.Utilities.containsQueryString(url)) {\n\t\t\t\treturn url + '&' + this.options.urlArgs;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn url + '?' + this.options.urlArgs;\n\t\t\t}\n\t\t}\n\t\t_addUrlArgsIfNecessaryToUrl(url) {\n\t\t\tif (this.options.urlArgs) {\n\t\t\t\treturn this._addUrlArgsToUrl(url);\n\t\t\t}\n\t\t\treturn url;\n\t\t}\n\t\t_addUrlArgsIfNecessaryToUrls(urls) {\n\t\t\tif (this.options.urlArgs) {\n\t\t\t\tfor (let i = 0, len = urls.length; i < len; i++) {\n\t\t\t\t\turls[i] = this._addUrlArgsToUrl(urls[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn urls;\n\t\t}\n\t\t/**\n\t\t * Transform a module id to a location. Appends .js to module ids\n\t\t */\n\t\tmoduleIdToPaths(moduleId) {\n\t\t\tif (this._env.isNode) {\n\t\t\t\tconst isNodeModule = (this.options.amdModulesPattern instanceof RegExp\n\t\t\t\t\t&& !this.options.amdModulesPattern.test(moduleId));\n\t\t\t\tif (isNodeModule) {\n\t\t\t\t\t// This is a node module...\n\t\t\t\t\tif (this.isBuild()) {\n\t\t\t\t\t\t// ...and we are at build time, drop it\n\t\t\t\t\t\treturn ['empty:'];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// ...and at runtime we create a `shortcut`-path\n\t\t\t\t\t\treturn ['node|' + moduleId];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet result = moduleId;\n\t\t\tlet results;\n\t\t\tif (!AMDLoader.Utilities.endsWith(result, '.js') && !AMDLoader.Utilities.isAbsolutePath(result)) {\n\t\t\t\tresults = this._applyPaths(result);\n\t\t\t\tfor (let i = 0, len = results.length; i < len; i++) {\n\t\t\t\t\tif (this.isBuild() && results[i] === 'empty:') {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (!AMDLoader.Utilities.isAbsolutePath(results[i])) {\n\t\t\t\t\t\tresults[i] = this.options.baseUrl + results[i];\n\t\t\t\t\t}\n\t\t\t\t\tif (!AMDLoader.Utilities.endsWith(results[i], '.js') && !AMDLoader.Utilities.containsQueryString(results[i])) {\n\t\t\t\t\t\tresults[i] = results[i] + '.js';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!AMDLoader.Utilities.endsWith(result, '.js') && !AMDLoader.Utilities.containsQueryString(result)) {\n\t\t\t\t\tresult = result + '.js';\n\t\t\t\t}\n\t\t\t\tresults = [result];\n\t\t\t}\n\t\t\treturn this._addUrlArgsIfNecessaryToUrls(results);\n\t\t}\n\t\t/**\n\t\t * Transform a module id or url to a location.\n\t\t */\n\t\trequireToUrl(url) {\n\t\t\tlet result = url;\n\t\t\tif (!AMDLoader.Utilities.isAbsolutePath(result)) {\n\t\t\t\tresult = this._applyPaths(result)[0];\n\t\t\t\tif (!AMDLoader.Utilities.isAbsolutePath(result)) {\n\t\t\t\t\tresult = this.options.baseUrl + result;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._addUrlArgsIfNecessaryToUrl(result);\n\t\t}\n\t\t/**\n\t\t * Flag to indicate if current execution is as part of a build.\n\t\t */\n\t\tisBuild() {\n\t\t\treturn this.options.isBuild;\n\t\t}\n\t\tshouldInvokeFactory(strModuleId) {\n\t\t\tif (!this.options.isBuild) {\n\t\t\t\t// outside of a build, all factories should be invoked\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t// during a build, only explicitly marked or anonymous modules get their factories invoked\n\t\t\tif (AMDLoader.Utilities.isAnonymousModule(strModuleId)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (this.options.buildForceInvokeFactory && this.options.buildForceInvokeFactory[strModuleId]) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\t/**\n\t\t * Test if module `moduleId` is expected to be defined multiple times\n\t\t */\n\t\tisDuplicateMessageIgnoredFor(moduleId) {\n\t\t\treturn this.ignoreDuplicateModulesMap.hasOwnProperty(moduleId);\n\t\t}\n\t\t/**\n\t\t * Get the configuration settings for the provided module id\n\t\t */\n\t\tgetConfigForModule(moduleId) {\n\t\t\tif (this.options.config) {\n\t\t\t\treturn this.options.config[moduleId];\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Should errors be caught when executing module factories?\n\t\t */\n\t\tshouldCatchError() {\n\t\t\treturn this.options.catchError;\n\t\t}\n\t\t/**\n\t\t * Should statistics be recorded?\n\t\t */\n\t\tshouldRecordStats() {\n\t\t\treturn this.options.recordStats;\n\t\t}\n\t\t/**\n\t\t * Forward an error to the error handler.\n\t\t */\n\t\tonError(err) {\n\t\t\tthis.options.onError(err);\n\t\t}\n\t}\n\tAMDLoader.Configuration = Configuration;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n\t/**\n\t * Load `scriptSrc` only once (avoid multiple <script> tags)\n\t */\n\tclass OnlyOnceScriptLoader {\n\t\tconstructor(env) {\n\t\t\tthis._env = env;\n\t\t\tthis._scriptLoader = null;\n\t\t\tthis._callbackMap = {};\n\t\t}\n\t\tload(moduleManager, scriptSrc, callback, errorback) {\n\t\t\tif (!this._scriptLoader) {\n\t\t\t\tif (this._env.isWebWorker) {\n\t\t\t\t\tthis._scriptLoader = new WorkerScriptLoader();\n\t\t\t\t}\n\t\t\t\telse if (this._env.isElectronRenderer) {\n\t\t\t\t\tconst { preferScriptTags } = moduleManager.getConfig().getOptionsLiteral();\n\t\t\t\t\tif (preferScriptTags) {\n\t\t\t\t\t\tthis._scriptLoader = new BrowserScriptLoader();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._scriptLoader = new NodeScriptLoader(this._env);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (this._env.isNode) {\n\t\t\t\t\tthis._scriptLoader = new NodeScriptLoader(this._env);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._scriptLoader = new BrowserScriptLoader();\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet scriptCallbacks = {\n\t\t\t\tcallback: callback,\n\t\t\t\terrorback: errorback\n\t\t\t};\n\t\t\tif (this._callbackMap.hasOwnProperty(scriptSrc)) {\n\t\t\t\tthis._callbackMap[scriptSrc].push(scriptCallbacks);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._callbackMap[scriptSrc] = [scriptCallbacks];\n\t\t\tthis._scriptLoader.load(moduleManager, scriptSrc, () => this.triggerCallback(scriptSrc), (err) => this.triggerErrorback(scriptSrc, err));\n\t\t}\n\t\ttriggerCallback(scriptSrc) {\n\t\t\tlet scriptCallbacks = this._callbackMap[scriptSrc];\n\t\t\tdelete this._callbackMap[scriptSrc];\n\t\t\tfor (let i = 0; i < scriptCallbacks.length; i++) {\n\t\t\t\tscriptCallbacks[i].callback();\n\t\t\t}\n\t\t}\n\t\ttriggerErrorback(scriptSrc, err) {\n\t\t\tlet scriptCallbacks = this._callbackMap[scriptSrc];\n\t\t\tdelete this._callbackMap[scriptSrc];\n\t\t\tfor (let i = 0; i < scriptCallbacks.length; i++) {\n\t\t\t\tscriptCallbacks[i].errorback(err);\n\t\t\t}\n\t\t}\n\t}\n\tclass BrowserScriptLoader {\n\t\t/**\n\t\t * Attach load / error listeners to a script element and remove them when either one has fired.\n\t\t * Implemented for browsers supporting HTML5 standard 'load' and 'error' events.\n\t\t */\n\t\tattachListeners(script, callback, errorback) {\n\t\t\tlet unbind = () => {\n\t\t\t\tscript.removeEventListener('load', loadEventListener);\n\t\t\t\tscript.removeEventListener('error', errorEventListener);\n\t\t\t};\n\t\t\tlet loadEventListener = (e) => {\n\t\t\t\tunbind();\n\t\t\t\tcallback();\n\t\t\t};\n\t\t\tlet errorEventListener = (e) => {\n\t\t\t\tunbind();\n\t\t\t\terrorback(e);\n\t\t\t};\n\t\t\tscript.addEventListener('load', loadEventListener);\n\t\t\tscript.addEventListener('error', errorEventListener);\n\t\t}\n\t\tload(moduleManager, scriptSrc, callback, errorback) {\n\t\t\tif (/^node\\|/.test(scriptSrc)) {\n\t\t\t\tlet opts = moduleManager.getConfig().getOptionsLiteral();\n\t\t\t\tlet nodeRequire = ensureRecordedNodeRequire(moduleManager.getRecorder(), (opts.nodeRequire || AMDLoader.global.nodeRequire));\n\t\t\t\tlet pieces = scriptSrc.split('|');\n\t\t\t\tlet moduleExports = null;\n\t\t\t\ttry {\n\t\t\t\t\tmoduleExports = nodeRequire(pieces[1]);\n\t\t\t\t}\n\t\t\t\tcatch (err) {\n\t\t\t\t\terrorback(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tmoduleManager.enqueueDefineAnonymousModule([], () => moduleExports);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet script = document.createElement('script');\n\t\t\t\tscript.setAttribute('async', 'async');\n\t\t\t\tscript.setAttribute('type', 'text/javascript');\n\t\t\t\tthis.attachListeners(script, callback, errorback);\n\t\t\t\tconst { trustedTypesPolicy } = moduleManager.getConfig().getOptionsLiteral();\n\t\t\t\tif (trustedTypesPolicy) {\n\t\t\t\t\tscriptSrc = trustedTypesPolicy.createScriptURL(scriptSrc);\n\t\t\t\t}\n\t\t\t\tscript.setAttribute('src', scriptSrc);\n\t\t\t\t// Propagate CSP nonce to dynamically created script tag.\n\t\t\t\tconst { cspNonce } = moduleManager.getConfig().getOptionsLiteral();\n\t\t\t\tif (cspNonce) {\n\t\t\t\t\tscript.setAttribute('nonce', cspNonce);\n\t\t\t\t}\n\t\t\t\tdocument.getElementsByTagName('head')[0].appendChild(script);\n\t\t\t}\n\t\t}\n\t}\n\tfunction canUseEval(moduleManager) {\n\t\tconst { trustedTypesPolicy } = moduleManager.getConfig().getOptionsLiteral();\n\t\ttry {\n\t\t\tconst func = (trustedTypesPolicy\n\t\t\t\t? self.eval(trustedTypesPolicy.createScript('', 'true')) // CodeQL [SM01632] the loader is responsible with loading code, fetch + eval is used on the web worker instead of importScripts if possible because importScripts is synchronous and we observed deadlocks on Safari\n\t\t\t\t: new Function('true') // CodeQL [SM01632] the loader is responsible with loading code, fetch + eval is used on the web worker instead of importScripts if possible because importScripts is synchronous and we observed deadlocks on Safari\n\t\t\t);\n\t\t\tfunc.call(self);\n\t\t\treturn true;\n\t\t}\n\t\tcatch (err) {\n\t\t\treturn false;\n\t\t}\n\t}\n\tclass WorkerScriptLoader {\n\t\tconstructor() {\n\t\t\tthis._cachedCanUseEval = null;\n\t\t}\n\t\t_canUseEval(moduleManager) {\n\t\t\tif (this._cachedCanUseEval === null) {\n\t\t\t\tthis._cachedCanUseEval = canUseEval(moduleManager);\n\t\t\t}\n\t\t\treturn this._cachedCanUseEval;\n\t\t}\n\t\tload(moduleManager, scriptSrc, callback, errorback) {\n\t\t\tif (/^node\\|/.test(scriptSrc)) {\n\t\t\t\tconst opts = moduleManager.getConfig().getOptionsLiteral();\n\t\t\t\tconst nodeRequire = ensureRecordedNodeRequire(moduleManager.getRecorder(), (opts.nodeRequire || AMDLoader.global.nodeRequire));\n\t\t\t\tconst pieces = scriptSrc.split('|');\n\t\t\t\tlet moduleExports = null;\n\t\t\t\ttry {\n\t\t\t\t\tmoduleExports = nodeRequire(pieces[1]);\n\t\t\t\t}\n\t\t\t\tcatch (err) {\n\t\t\t\t\terrorback(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tmoduleManager.enqueueDefineAnonymousModule([], function () { return moduleExports; });\n\t\t\t\tcallback();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst { trustedTypesPolicy } = moduleManager.getConfig().getOptionsLiteral();\n\t\t\t\tconst isCrossOrigin = (/^((http:)|(https:)|(file:))/.test(scriptSrc) && scriptSrc.substring(0, self.origin.length) !== self.origin);\n\t\t\t\tif (!isCrossOrigin && this._canUseEval(moduleManager)) {\n\t\t\t\t\t// use `fetch` if possible because `importScripts`\n\t\t\t\t\t// is synchronous and can lead to deadlocks on Safari\n\t\t\t\t\tfetch(scriptSrc).then((response) => {\n\t\t\t\t\t\tif (response.status !== 200) {\n\t\t\t\t\t\t\tthrow new Error(response.statusText);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn response.text();\n\t\t\t\t\t}).then((text) => {\n\t\t\t\t\t\ttext = `${text}\\n//# sourceURL=${scriptSrc}`;\n\t\t\t\t\t\tconst func = (trustedTypesPolicy\n\t\t\t\t\t\t\t? self.eval(trustedTypesPolicy.createScript('', text)) // CodeQL [SM01632] the loader is responsible with loading code, fetch + eval is used on the web worker instead of importScripts if possible because importScripts is synchronous and we observed deadlocks on Safari\n\t\t\t\t\t\t\t: new Function(text) // CodeQL [SM01632] the loader is responsible with loading code, fetch + eval is used on the web worker instead of importScripts if possible because importScripts is synchronous and we observed deadlocks on Safari\n\t\t\t\t\t\t);\n\t\t\t\t\t\tfunc.call(self);\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t}).then(undefined, errorback);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tif (trustedTypesPolicy) {\n\t\t\t\t\t\tscriptSrc = trustedTypesPolicy.createScriptURL(scriptSrc);\n\t\t\t\t\t}\n\t\t\t\t\timportScripts(scriptSrc);\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t\tcatch (e) {\n\t\t\t\t\terrorback(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tclass NodeScriptLoader {\n\t\tconstructor(env) {\n\t\t\tthis._env = env;\n\t\t\tthis._didInitialize = false;\n\t\t\tthis._didPatchNodeRequire = false;\n\t\t}\n\t\t_init(nodeRequire) {\n\t\t\tif (this._didInitialize) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._didInitialize = true;\n\t\t\t// capture node modules\n\t\t\tthis._fs = nodeRequire('fs');\n\t\t\tthis._vm = nodeRequire('vm');\n\t\t\tthis._path = nodeRequire('path');\n\t\t\tthis._crypto = nodeRequire('crypto');\n\t\t}\n\t\t// patch require-function of nodejs such that we can manually create a script\n\t\t// from cached data. this is done by overriding the `Module._compile` function\n\t\t_initNodeRequire(nodeRequire, moduleManager) {\n\t\t\t// It is important to check for `nodeCachedData` first and then set `_didPatchNodeRequire`.\n\t\t\t// That's because `nodeCachedData` is set _after_ calling this for the first time...\n\t\t\tconst { nodeCachedData } = moduleManager.getConfig().getOptionsLiteral();\n\t\t\tif (!nodeCachedData) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this._didPatchNodeRequire) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._didPatchNodeRequire = true;\n\t\t\tconst that = this;\n\t\t\tconst Module = nodeRequire('module');\n\t\t\tfunction makeRequireFunction(mod) {\n\t\t\t\tconst Module = mod.constructor;\n\t\t\t\tlet require = function require(path) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn mod.require(path);\n\t\t\t\t\t}\n\t\t\t\t\tfinally {\n\t\t\t\t\t\t// nothing\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\trequire.resolve = function resolve(request, options) {\n\t\t\t\t\treturn Module._resolveFilename(request, mod, false, options);\n\t\t\t\t};\n\t\t\t\trequire.resolve.paths = function paths(request) {\n\t\t\t\t\treturn Module._resolveLookupPaths(request, mod);\n\t\t\t\t};\n\t\t\t\trequire.main = process.mainModule;\n\t\t\t\trequire.extensions = Module._extensions;\n\t\t\t\trequire.cache = Module._cache;\n\t\t\t\treturn require;\n\t\t\t}\n\t\t\tModule.prototype._compile = function (content, filename) {\n\t\t\t\t// remove shebang and create wrapper function\n\t\t\t\tconst scriptSource = Module.wrap(content.replace(/^#!.*/, ''));\n\t\t\t\t// create script\n\t\t\t\tconst recorder = moduleManager.getRecorder();\n\t\t\t\tconst cachedDataPath = that._getCachedDataPath(nodeCachedData, filename);\n\t\t\t\tconst options = { filename };\n\t\t\t\tlet hashData;\n\t\t\t\ttry {\n\t\t\t\t\tconst data = that._fs.readFileSync(cachedDataPath);\n\t\t\t\t\thashData = data.slice(0, 16);\n\t\t\t\t\toptions.cachedData = data.slice(16);\n\t\t\t\t\trecorder.record(60 /* LoaderEventType.CachedDataFound */, cachedDataPath);\n\t\t\t\t}\n\t\t\t\tcatch (_e) {\n\t\t\t\t\trecorder.record(61 /* LoaderEventType.CachedDataMissed */, cachedDataPath);\n\t\t\t\t}\n\t\t\t\tconst script = new that._vm.Script(scriptSource, options);\n\t\t\t\tconst compileWrapper = script.runInThisContext(options);\n\t\t\t\t// run script\n\t\t\t\tconst dirname = that._path.dirname(filename);\n\t\t\t\tconst require = makeRequireFunction(this);\n\t\t\t\tconst args = [this.exports, require, this, filename, dirname, process, _commonjsGlobal, Buffer];\n\t\t\t\tconst result = compileWrapper.apply(this.exports, args);\n\t\t\t\t// cached data aftermath\n\t\t\t\tthat._handleCachedData(script, scriptSource, cachedDataPath, !options.cachedData, moduleManager);\n\t\t\t\tthat._verifyCachedData(script, scriptSource, cachedDataPath, hashData, moduleManager);\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\tload(moduleManager, scriptSrc, callback, errorback) {\n\t\t\tconst opts = moduleManager.getConfig().getOptionsLiteral();\n\t\t\tconst nodeRequire = ensureRecordedNodeRequire(moduleManager.getRecorder(), (opts.nodeRequire || AMDLoader.global.nodeRequire));\n\t\t\tconst nodeInstrumenter = (opts.nodeInstrumenter || function (c) { return c; });\n\t\t\tthis._init(nodeRequire);\n\t\t\tthis._initNodeRequire(nodeRequire, moduleManager);\n\t\t\tlet recorder = moduleManager.getRecorder();\n\t\t\tif (/^node\\|/.test(scriptSrc)) {\n\t\t\t\tlet pieces = scriptSrc.split('|');\n\t\t\t\tlet moduleExports = null;\n\t\t\t\ttry {\n\t\t\t\t\tmoduleExports = nodeRequire(pieces[1]);\n\t\t\t\t}\n\t\t\t\tcatch (err) {\n\t\t\t\t\terrorback(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tmoduleManager.enqueueDefineAnonymousModule([], () => moduleExports);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tscriptSrc = AMDLoader.Utilities.fileUriToFilePath(this._env.isWindows, scriptSrc);\n\t\t\t\tconst normalizedScriptSrc = this._path.normalize(scriptSrc);\n\t\t\t\tconst vmScriptPathOrUri = this._getElectronRendererScriptPathOrUri(normalizedScriptSrc);\n\t\t\t\tconst wantsCachedData = Boolean(opts.nodeCachedData);\n\t\t\t\tconst cachedDataPath = wantsCachedData ? this._getCachedDataPath(opts.nodeCachedData, scriptSrc) : undefined;\n\t\t\t\tthis._readSourceAndCachedData(normalizedScriptSrc, cachedDataPath, recorder, (err, data, cachedData, hashData) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\terrorback(err);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tlet scriptSource;\n\t\t\t\t\tif (data.charCodeAt(0) === NodeScriptLoader._BOM) {\n\t\t\t\t\t\tscriptSource = NodeScriptLoader._PREFIX + data.substring(1) + NodeScriptLoader._SUFFIX;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tscriptSource = NodeScriptLoader._PREFIX + data + NodeScriptLoader._SUFFIX;\n\t\t\t\t\t}\n\t\t\t\t\tscriptSource = nodeInstrumenter(scriptSource, normalizedScriptSrc);\n\t\t\t\t\tconst scriptOpts = { filename: vmScriptPathOrUri, cachedData };\n\t\t\t\t\tconst script = this._createAndEvalScript(moduleManager, scriptSource, scriptOpts, callback, errorback);\n\t\t\t\t\tthis._handleCachedData(script, scriptSource, cachedDataPath, wantsCachedData && !cachedData, moduleManager);\n\t\t\t\t\tthis._verifyCachedData(script, scriptSource, cachedDataPath, hashData, moduleManager);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\t_createAndEvalScript(moduleManager, contents, options, callback, errorback) {\n\t\t\tconst recorder = moduleManager.getRecorder();\n\t\t\trecorder.record(31 /* LoaderEventType.NodeBeginEvaluatingScript */, options.filename);\n\t\t\tconst script = new this._vm.Script(contents, options);\n\t\t\tconst ret = script.runInThisContext(options);\n\t\t\tconst globalDefineFunc = moduleManager.getGlobalAMDDefineFunc();\n\t\t\tlet receivedDefineCall = false;\n\t\t\tconst localDefineFunc = function () {\n\t\t\t\treceivedDefineCall = true;\n\t\t\t\treturn globalDefineFunc.apply(null, arguments);\n\t\t\t};\n\t\t\tlocalDefineFunc.amd = globalDefineFunc.amd;\n\t\t\tret.call(AMDLoader.global, moduleManager.getGlobalAMDRequireFunc(), localDefineFunc, options.filename, this._path.dirname(options.filename));\n\t\t\trecorder.record(32 /* LoaderEventType.NodeEndEvaluatingScript */, options.filename);\n\t\t\tif (receivedDefineCall) {\n\t\t\t\tcallback();\n\t\t\t}\n\t\t\telse {\n\t\t\t\terrorback(new Error(`Didn't receive define call in ${options.filename}!`));\n\t\t\t}\n\t\t\treturn script;\n\t\t}\n\t\t_getElectronRendererScriptPathOrUri(path) {\n\t\t\tif (!this._env.isElectronRenderer) {\n\t\t\t\treturn path;\n\t\t\t}\n\t\t\tlet driveLetterMatch = path.match(/^([a-z])\\:(.*)/i);\n\t\t\tif (driveLetterMatch) {\n\t\t\t\t// windows\n\t\t\t\treturn `file:///${(driveLetterMatch[1].toUpperCase() + ':' + driveLetterMatch[2]).replace(/\\\\/g, '/')}`;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// nix\n\t\t\t\treturn `file://${path}`;\n\t\t\t}\n\t\t}\n\t\t_getCachedDataPath(config, filename) {\n\t\t\tconst hash = this._crypto.createHash('md5').update(filename, 'utf8').update(config.seed, 'utf8').update(process.arch, '').digest('hex');\n\t\t\tconst basename = this._path.basename(filename).replace(/\\.js$/, '');\n\t\t\treturn this._path.join(config.path, `${basename}-${hash}.code`);\n\t\t}\n\t\t_handleCachedData(script, scriptSource, cachedDataPath, createCachedData, moduleManager) {\n\t\t\tif (script.cachedDataRejected) {\n\t\t\t\t// cached data got rejected -> delete and re-create\n\t\t\t\tthis._fs.unlink(cachedDataPath, err => {\n\t\t\t\t\tmoduleManager.getRecorder().record(62 /* LoaderEventType.CachedDataRejected */, cachedDataPath);\n\t\t\t\t\tthis._createAndWriteCachedData(script, scriptSource, cachedDataPath, moduleManager);\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tmoduleManager.getConfig().onError(err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if (createCachedData) {\n\t\t\t\t// no cached data, but wanted\n\t\t\t\tthis._createAndWriteCachedData(script, scriptSource, cachedDataPath, moduleManager);\n\t\t\t}\n\t\t}\n\t\t// Cached data format: | SOURCE_HASH | V8_CACHED_DATA |\n\t\t// -SOURCE_HASH is the md5 hash of the JS source (always 16 bytes)\n\t\t// -V8_CACHED_DATA is what v8 produces\n\t\t_createAndWriteCachedData(script, scriptSource, cachedDataPath, moduleManager) {\n\t\t\tlet timeout = Math.ceil(moduleManager.getConfig().getOptionsLiteral().nodeCachedData.writeDelay * (1 + Math.random()));\n\t\t\tlet lastSize = -1;\n\t\t\tlet iteration = 0;\n\t\t\tlet hashData = undefined;\n\t\t\tconst createLoop = () => {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tif (!hashData) {\n\t\t\t\t\t\thashData = this._crypto.createHash('md5').update(scriptSource, 'utf8').digest();\n\t\t\t\t\t}\n\t\t\t\t\tconst cachedData = script.createCachedData();\n\t\t\t\t\tif (cachedData.length === 0 || cachedData.length === lastSize || iteration >= 5) {\n\t\t\t\t\t\t// done\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (cachedData.length < lastSize) {\n\t\t\t\t\t\t// less data than before: skip, try again next round\n\t\t\t\t\t\tcreateLoop();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tlastSize = cachedData.length;\n\t\t\t\t\tthis._fs.writeFile(cachedDataPath, Buffer.concat([hashData, cachedData]), err => {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tmoduleManager.getConfig().onError(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmoduleManager.getRecorder().record(63 /* LoaderEventType.CachedDataCreated */, cachedDataPath);\n\t\t\t\t\t\tcreateLoop();\n\t\t\t\t\t});\n\t\t\t\t}, timeout * (Math.pow(4, iteration++)));\n\t\t\t};\n\t\t\t// with some delay (`timeout`) create cached data\n\t\t\t// and repeat that (with backoff delay) until the\n\t\t\t// data seems to be not changing anymore\n\t\t\tcreateLoop();\n\t\t}\n\t\t_readSourceAndCachedData(sourcePath, cachedDataPath, recorder, callback) {\n\t\t\tif (!cachedDataPath) {\n\t\t\t\t// no cached data case\n\t\t\t\tthis._fs.readFile(sourcePath, { encoding: 'utf8' }, callback);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// cached data case: read both files in parallel\n\t\t\t\tlet source = undefined;\n\t\t\t\tlet cachedData = undefined;\n\t\t\t\tlet hashData = undefined;\n\t\t\t\tlet steps = 2;\n\t\t\t\tconst step = (err) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t}\n\t\t\t\t\telse if (--steps === 0) {\n\t\t\t\t\t\tcallback(undefined, source, cachedData, hashData);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tthis._fs.readFile(sourcePath, { encoding: 'utf8' }, (err, data) => {\n\t\t\t\t\tsource = data;\n\t\t\t\t\tstep(err);\n\t\t\t\t});\n\t\t\t\tthis._fs.readFile(cachedDataPath, (err, data) => {\n\t\t\t\t\tif (!err && data && data.length > 0) {\n\t\t\t\t\t\thashData = data.slice(0, 16);\n\t\t\t\t\t\tcachedData = data.slice(16);\n\t\t\t\t\t\trecorder.record(60 /* LoaderEventType.CachedDataFound */, cachedDataPath);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\trecorder.record(61 /* LoaderEventType.CachedDataMissed */, cachedDataPath);\n\t\t\t\t\t}\n\t\t\t\t\tstep(); // ignored: cached data is optional\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\t_verifyCachedData(script, scriptSource, cachedDataPath, hashData, moduleManager) {\n\t\t\tif (!hashData) {\n\t\t\t\t// nothing to do\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (script.cachedDataRejected) {\n\t\t\t\t// invalid anyways\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsetTimeout(() => {\n\t\t\t\t// check source hash - the contract is that file paths change when file content\n\t\t\t\t// change (e.g use the commit or version id as cache path). this check is\n\t\t\t\t// for violations of this contract.\n\t\t\t\tconst hashDataNow = this._crypto.createHash('md5').update(scriptSource, 'utf8').digest();\n\t\t\t\tif (!hashData.equals(hashDataNow)) {\n\t\t\t\t\tmoduleManager.getConfig().onError(new Error(`FAILED TO VERIFY CACHED DATA, deleting stale '${cachedDataPath}' now, but a RESTART IS REQUIRED`));\n\t\t\t\t\tthis._fs.unlink(cachedDataPath, err => {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tmoduleManager.getConfig().onError(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, Math.ceil(5000 * (1 + Math.random())));\n\t\t}\n\t}\n\tNodeScriptLoader._BOM = 0xFEFF;\n\tNodeScriptLoader._PREFIX = '(function (require, define, __filename, __dirname) { ';\n\tNodeScriptLoader._SUFFIX = '\\n});';\n\tfunction ensureRecordedNodeRequire(recorder, _nodeRequire) {\n\t\tif (_nodeRequire.__$__isRecorded) {\n\t\t\t// it is already recorded\n\t\t\treturn _nodeRequire;\n\t\t}\n\t\tconst nodeRequire = function nodeRequire(what) {\n\t\t\trecorder.record(33 /* LoaderEventType.NodeBeginNativeRequire */, what);\n\t\t\ttry {\n\t\t\t\treturn _nodeRequire(what);\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\trecorder.record(34 /* LoaderEventType.NodeEndNativeRequire */, what);\n\t\t\t}\n\t\t};\n\t\tnodeRequire.__$__isRecorded = true;\n\t\treturn nodeRequire;\n\t}\n\tAMDLoader.ensureRecordedNodeRequire = ensureRecordedNodeRequire;\n\tfunction createScriptLoader(env) {\n\t\treturn new OnlyOnceScriptLoader(env);\n\t}\n\tAMDLoader.createScriptLoader = createScriptLoader;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n\t// ------------------------------------------------------------------------\n\t// ModuleIdResolver\n\tclass ModuleIdResolver {\n\t\tconstructor(fromModuleId) {\n\t\t\tlet lastSlash = fromModuleId.lastIndexOf('/');\n\t\t\tif (lastSlash !== -1) {\n\t\t\t\tthis.fromModulePath = fromModuleId.substr(0, lastSlash + 1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.fromModulePath = '';\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Normalize 'a/../name' to 'name', etc.\n\t\t */\n\t\tstatic _normalizeModuleId(moduleId) {\n\t\t\tlet r = moduleId, pattern;\n\t\t\t// replace /./ => /\n\t\t\tpattern = /\\/\\.\\//;\n\t\t\twhile (pattern.test(r)) {\n\t\t\t\tr = r.replace(pattern, '/');\n\t\t\t}\n\t\t\t// replace ^./ => nothing\n\t\t\tr = r.replace(/^\\.\\//g, '');\n\t\t\t// replace /aa/../ => / (BUT IGNORE /../../)\n\t\t\tpattern = /\\/(([^\\/])|([^\\/][^\\/\\.])|([^\\/\\.][^\\/])|([^\\/][^\\/][^\\/]+))\\/\\.\\.\\//;\n\t\t\twhile (pattern.test(r)) {\n\t\t\t\tr = r.replace(pattern, '/');\n\t\t\t}\n\t\t\t// replace ^aa/../ => nothing (BUT IGNORE ../../)\n\t\t\tr = r.replace(/^(([^\\/])|([^\\/][^\\/\\.])|([^\\/\\.][^\\/])|([^\\/][^\\/][^\\/]+))\\/\\.\\.\\//, '');\n\t\t\treturn r;\n\t\t}\n\t\t/**\n\t\t * Resolve relative module ids\n\t\t */\n\t\tresolveModule(moduleId) {\n\t\t\tlet result = moduleId;\n\t\t\tif (!AMDLoader.Utilities.isAbsolutePath(result)) {\n\t\t\t\tif (AMDLoader.Utilities.startsWith(result, './') || AMDLoader.Utilities.startsWith(result, '../')) {\n\t\t\t\t\tresult = ModuleIdResolver._normalizeModuleId(this.fromModulePath + result);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\tModuleIdResolver.ROOT = new ModuleIdResolver('');\n\tAMDLoader.ModuleIdResolver = ModuleIdResolver;\n\t// ------------------------------------------------------------------------\n\t// Module\n\tclass Module {\n\t\tconstructor(id, strId, dependencies, callback, errorback, moduleIdResolver) {\n\t\t\tthis.id = id;\n\t\t\tthis.strId = strId;\n\t\t\tthis.dependencies = dependencies;\n\t\t\tthis._callback = callback;\n\t\t\tthis._errorback = errorback;\n\t\t\tthis.moduleIdResolver = moduleIdResolver;\n\t\t\tthis.exports = {};\n\t\t\tthis.error = null;\n\t\t\tthis.exportsPassedIn = false;\n\t\t\tthis.unresolvedDependenciesCount = this.dependencies.length;\n\t\t\tthis._isComplete = false;\n\t\t}\n\t\tstatic _safeInvokeFunction(callback, args) {\n\t\t\ttry {\n\t\t\t\treturn {\n\t\t\t\t\treturnedValue: callback.apply(AMDLoader.global, args),\n\t\t\t\t\tproducedError: null\n\t\t\t\t};\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\treturn {\n\t\t\t\t\treturnedValue: null,\n\t\t\t\t\tproducedError: e\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tstatic _invokeFactory(config, strModuleId, callback, dependenciesValues) {\n\t\t\tif (!config.shouldInvokeFactory(strModuleId)) {\n\t\t\t\treturn {\n\t\t\t\t\treturnedValue: null,\n\t\t\t\t\tproducedError: null\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (config.shouldCatchError()) {\n\t\t\t\treturn this._safeInvokeFunction(callback, dependenciesValues);\n\t\t\t}\n\t\t\treturn {\n\t\t\t\treturnedValue: callback.apply(AMDLoader.global, dependenciesValues),\n\t\t\t\tproducedError: null\n\t\t\t};\n\t\t}\n\t\tcomplete(recorder, config, dependenciesValues, inversedependenciesProvider) {\n\t\t\tthis._isComplete = true;\n\t\t\tlet producedError = null;\n\t\t\tif (this._callback) {\n\t\t\t\tif (typeof this._callback === 'function') {\n\t\t\t\t\trecorder.record(21 /* LoaderEventType.BeginInvokeFactory */, this.strId);\n\t\t\t\t\tlet r = Module._invokeFactory(config, this.strId, this._callback, dependenciesValues);\n\t\t\t\t\tproducedError = r.producedError;\n\t\t\t\t\trecorder.record(22 /* LoaderEventType.EndInvokeFactory */, this.strId);\n\t\t\t\t\tif (!producedError && typeof r.returnedValue !== 'undefined' && (!this.exportsPassedIn || AMDLoader.Utilities.isEmpty(this.exports))) {\n\t\t\t\t\t\tthis.exports = r.returnedValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.exports = this._callback;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (producedError) {\n\t\t\t\tlet err = AMDLoader.ensureError(producedError);\n\t\t\t\terr.phase = 'factory';\n\t\t\t\terr.moduleId = this.strId;\n\t\t\t\terr.neededBy = inversedependenciesProvider(this.id);\n\t\t\t\tthis.error = err;\n\t\t\t\tconfig.onError(err);\n\t\t\t}\n\t\t\tthis.dependencies = null;\n\t\t\tthis._callback = null;\n\t\t\tthis._errorback = null;\n\t\t\tthis.moduleIdResolver = null;\n\t\t}\n\t\t/**\n\t\t * One of the direct dependencies or a transitive dependency has failed to load.\n\t\t */\n\t\tonDependencyError(err) {\n\t\t\tthis._isComplete = true;\n\t\t\tthis.error = err;\n\t\t\tif (this._errorback) {\n\t\t\t\tthis._errorback(err);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\t/**\n\t\t * Is the current module complete?\n\t\t */\n\t\tisComplete() {\n\t\t\treturn this._isComplete;\n\t\t}\n\t}\n\tAMDLoader.Module = Module;\n\tclass ModuleIdProvider {\n\t\tconstructor() {\n\t\t\tthis._nextId = 0;\n\t\t\tthis._strModuleIdToIntModuleId = new Map();\n\t\t\tthis._intModuleIdToStrModuleId = [];\n\t\t\t// Ensure values 0, 1, 2 are assigned accordingly with ModuleId\n\t\t\tthis.getModuleId('exports');\n\t\t\tthis.getModuleId('module');\n\t\t\tthis.getModuleId('require');\n\t\t}\n\t\tgetMaxModuleId() {\n\t\t\treturn this._nextId;\n\t\t}\n\t\tgetModuleId(strModuleId) {\n\t\t\tlet id = this._strModuleIdToIntModuleId.get(strModuleId);\n\t\t\tif (typeof id === 'undefined') {\n\t\t\t\tid = this._nextId++;\n\t\t\t\tthis._strModuleIdToIntModuleId.set(strModuleId, id);\n\t\t\t\tthis._intModuleIdToStrModuleId[id] = strModuleId;\n\t\t\t}\n\t\t\treturn id;\n\t\t}\n\t\tgetStrModuleId(moduleId) {\n\t\t\treturn this._intModuleIdToStrModuleId[moduleId];\n\t\t}\n\t}\n\tclass RegularDependency {\n\t\tconstructor(id) {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\tRegularDependency.EXPORTS = new RegularDependency(0 /* ModuleId.EXPORTS */);\n\tRegularDependency.MODULE = new RegularDependency(1 /* ModuleId.MODULE */);\n\tRegularDependency.REQUIRE = new RegularDependency(2 /* ModuleId.REQUIRE */);\n\tAMDLoader.RegularDependency = RegularDependency;\n\tclass PluginDependency {\n\t\tconstructor(id, pluginId, pluginParam) {\n\t\t\tthis.id = id;\n\t\t\tthis.pluginId = pluginId;\n\t\t\tthis.pluginParam = pluginParam;\n\t\t}\n\t}\n\tAMDLoader.PluginDependency = PluginDependency;\n\tclass ModuleManager {\n\t\tconstructor(env, scriptLoader, defineFunc, requireFunc, loaderAvailableTimestamp = 0) {\n\t\t\tthis._env = env;\n\t\t\tthis._scriptLoader = scriptLoader;\n\t\t\tthis._loaderAvailableTimestamp = loaderAvailableTimestamp;\n\t\t\tthis._defineFunc = defineFunc;\n\t\t\tthis._requireFunc = requireFunc;\n\t\t\tthis._moduleIdProvider = new ModuleIdProvider();\n\t\t\tthis._config = new AMDLoader.Configuration(this._env);\n\t\t\tthis._hasDependencyCycle = false;\n\t\t\tthis._modules2 = [];\n\t\t\tthis._knownModules2 = [];\n\t\t\tthis._inverseDependencies2 = [];\n\t\t\tthis._inversePluginDependencies2 = new Map();\n\t\t\tthis._currentAnonymousDefineCall = null;\n\t\t\tthis._recorder = null;\n\t\t\tthis._buildInfoPath = [];\n\t\t\tthis._buildInfoDefineStack = [];\n\t\t\tthis._buildInfoDependencies = [];\n\t\t\tthis._requireFunc.moduleManager = this;\n\t\t}\n\t\treset() {\n\t\t\treturn new ModuleManager(this._env, this._scriptLoader, this._defineFunc, this._requireFunc, this._loaderAvailableTimestamp);\n\t\t}\n\t\tgetGlobalAMDDefineFunc() {\n\t\t\treturn this._defineFunc;\n\t\t}\n\t\tgetGlobalAMDRequireFunc() {\n\t\t\treturn this._requireFunc;\n\t\t}\n\t\tstatic _findRelevantLocationInStack(needle, stack) {\n\t\t\tlet normalize = (str) => str.replace(/\\\\/g, '/');\n\t\t\tlet normalizedPath = normalize(needle);\n\t\t\tlet stackPieces = stack.split(/\\n/);\n\t\t\tfor (let i = 0; i < stackPieces.length; i++) {\n\t\t\t\tlet m = stackPieces[i].match(/(.*):(\\d+):(\\d+)\\)?$/);\n\t\t\t\tif (m) {\n\t\t\t\t\tlet stackPath = m[1];\n\t\t\t\t\tlet stackLine = m[2];\n\t\t\t\t\tlet stackColumn = m[3];\n\t\t\t\t\tlet trimPathOffset = Math.max(stackPath.lastIndexOf(' ') + 1, stackPath.lastIndexOf('(') + 1);\n\t\t\t\t\tstackPath = stackPath.substr(trimPathOffset);\n\t\t\t\t\tstackPath = normalize(stackPath);\n\t\t\t\t\tif (stackPath === normalizedPath) {\n\t\t\t\t\t\tlet r = {\n\t\t\t\t\t\t\tline: parseInt(stackLine, 10),\n\t\t\t\t\t\t\tcol: parseInt(stackColumn, 10)\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (r.line === 1) {\n\t\t\t\t\t\t\tr.col -= '(function (require, define, __filename, __dirname) { '.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn r;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow new Error('Could not correlate define call site for needle ' + needle);\n\t\t}\n\t\tgetBuildInfo() {\n\t\t\tif (!this._config.isBuild()) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tlet result = [], resultLen = 0;\n\t\t\tfor (let i = 0, len = this._modules2.length; i < len; i++) {\n\t\t\t\tlet m = this._modules2[i];\n\t\t\t\tif (!m) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlet location = this._buildInfoPath[m.id] || null;\n\t\t\t\tlet defineStack = this._buildInfoDefineStack[m.id] || null;\n\t\t\t\tlet dependencies = this._buildInfoDependencies[m.id];\n\t\t\t\tresult[resultLen++] = {\n\t\t\t\t\tid: m.strId,\n\t\t\t\t\tpath: location,\n\t\t\t\t\tdefineLocation: (location && defineStack ? ModuleManager._findRelevantLocationInStack(location, defineStack) : null),\n\t\t\t\t\tdependencies: dependencies,\n\t\t\t\t\tshim: null,\n\t\t\t\t\texports: m.exports\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\tgetRecorder() {\n\t\t\tif (!this._recorder) {\n\t\t\t\tif (this._config.shouldRecordStats()) {\n\t\t\t\t\tthis._recorder = new AMDLoader.LoaderEventRecorder(this._loaderAvailableTimestamp);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._recorder = AMDLoader.NullLoaderEventRecorder.INSTANCE;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._recorder;\n\t\t}\n\t\tgetLoaderEvents() {\n\t\t\treturn this.getRecorder().getEvents();\n\t\t}\n\t\t/**\n\t\t * Defines an anonymous module (without an id). Its name will be resolved as we receive a callback from the scriptLoader.\n\t\t * @param dependencies @see defineModule\n\t\t * @param callback @see defineModule\n\t\t */\n\t\tenqueueDefineAnonymousModule(dependencies, callback) {\n\t\t\tif (this._currentAnonymousDefineCall !== null) {\n\t\t\t\tthrow new Error('Can only have one anonymous define call per script file');\n\t\t\t}\n\t\t\tlet stack = null;\n\t\t\tif (this._config.isBuild()) {\n\t\t\t\tstack = new Error('StackLocation').stack || null;\n\t\t\t}\n\t\t\tthis._currentAnonymousDefineCall = {\n\t\t\t\tstack: stack,\n\t\t\t\tdependencies: dependencies,\n\t\t\t\tcallback: callback\n\t\t\t};\n\t\t}\n\t\t/**\n\t\t * Creates a module and stores it in _modules. The manager will immediately begin resolving its dependencies.\n\t\t * @param strModuleId An unique and absolute id of the module. This must not collide with another module's id\n\t\t * @param dependencies An array with the dependencies of the module. Special keys are: \"require\", \"exports\" and \"module\"\n\t\t * @param callback if callback is a function, it will be called with the resolved dependencies. if callback is an object, it will be considered as the exports of the module.\n\t\t */\n\t\tdefineModule(strModuleId, dependencies, callback, errorback, stack, moduleIdResolver = new ModuleIdResolver(strModuleId)) {\n\t\t\tlet moduleId = this._moduleIdProvider.getModuleId(strModuleId);\n\t\t\tif (this._modules2[moduleId]) {\n\t\t\t\tif (!this._config.isDuplicateMessageIgnoredFor(strModuleId)) {\n\t\t\t\t\tconsole.warn('Duplicate definition of module \\'' + strModuleId + '\\'');\n\t\t\t\t}\n\t\t\t\t// Super important! Completely ignore duplicate module definition\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet m = new Module(moduleId, strModuleId, this._normalizeDependencies(dependencies, moduleIdResolver), callback, errorback, moduleIdResolver);\n\t\t\tthis._modules2[moduleId] = m;\n\t\t\tif (this._config.isBuild()) {\n\t\t\t\tthis._buildInfoDefineStack[moduleId] = stack;\n\t\t\t\tthis._buildInfoDependencies[moduleId] = (m.dependencies || []).map(dep => this._moduleIdProvider.getStrModuleId(dep.id));\n\t\t\t}\n\t\t\t// Resolving of dependencies is immediate (not in a timeout). If there's a need to support a packer that concatenates in an\n\t\t\t// unordered manner, in order to finish processing the file, execute the following method in a timeout\n\t\t\tthis._resolve(m);\n\t\t}\n\t\t_normalizeDependency(dependency, moduleIdResolver) {\n\t\t\tif (dependency === 'exports') {\n\t\t\t\treturn RegularDependency.EXPORTS;\n\t\t\t}\n\t\t\tif (dependency === 'module') {\n\t\t\t\treturn RegularDependency.MODULE;\n\t\t\t}\n\t\t\tif (dependency === 'require') {\n\t\t\t\treturn RegularDependency.REQUIRE;\n\t\t\t}\n\t\t\t// Normalize dependency and then request it from the manager\n\t\t\tlet bangIndex = dependency.indexOf('!');\n\t\t\tif (bangIndex >= 0) {\n\t\t\t\tlet strPluginId = moduleIdResolver.resolveModule(dependency.substr(0, bangIndex));\n\t\t\t\tlet pluginParam = moduleIdResolver.resolveModule(dependency.substr(bangIndex + 1));\n\t\t\t\tlet dependencyId = this._moduleIdProvider.getModuleId(strPluginId + '!' + pluginParam);\n\t\t\t\tlet pluginId = this._moduleIdProvider.getModuleId(strPluginId);\n\t\t\t\treturn new PluginDependency(dependencyId, pluginId, pluginParam);\n\t\t\t}\n\t\t\treturn new RegularDependency(this._moduleIdProvider.getModuleId(moduleIdResolver.resolveModule(dependency)));\n\t\t}\n\t\t_normalizeDependencies(dependencies, moduleIdResolver) {\n\t\t\tlet result = [], resultLen = 0;\n\t\t\tfor (let i = 0, len = dependencies.length; i < len; i++) {\n\t\t\t\tresult[resultLen++] = this._normalizeDependency(dependencies[i], moduleIdResolver);\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\t_relativeRequire(moduleIdResolver, dependencies, callback, errorback) {\n\t\t\tif (typeof dependencies === 'string') {\n\t\t\t\treturn this.synchronousRequire(dependencies, moduleIdResolver);\n\t\t\t}\n\t\t\tthis.defineModule(AMDLoader.Utilities.generateAnonymousModule(), dependencies, callback, errorback, null, moduleIdResolver);\n\t\t}\n\t\t/**\n\t\t * Require synchronously a module by its absolute id. If the module is not loaded, an exception will be thrown.\n\t\t * @param id The unique and absolute id of the required module\n\t\t * @return The exports of module 'id'\n\t\t */\n\t\tsynchronousRequire(_strModuleId, moduleIdResolver = new ModuleIdResolver(_strModuleId)) {\n\t\t\tlet dependency = this._normalizeDependency(_strModuleId, moduleIdResolver);\n\t\t\tlet m = this._modules2[dependency.id];\n\t\t\tif (!m) {\n\t\t\t\tthrow new Error('Check dependency list! Synchronous require cannot resolve module \\'' + _strModuleId + '\\'. This is the first mention of this module!');\n\t\t\t}\n\t\t\tif (!m.isComplete()) {\n\t\t\t\tthrow new Error('Check dependency list! Synchronous require cannot resolve module \\'' + _strModuleId + '\\'. This module has not been resolved completely yet.');\n\t\t\t}\n\t\t\tif (m.error) {\n\t\t\t\tthrow m.error;\n\t\t\t}\n\t\t\treturn m.exports;\n\t\t}\n\t\tconfigure(params, shouldOverwrite) {\n\t\t\tlet oldShouldRecordStats = this._config.shouldRecordStats();\n\t\t\tif (shouldOverwrite) {\n\t\t\t\tthis._config = new AMDLoader.Configuration(this._env, params);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._config = this._config.cloneAndMerge(params);\n\t\t\t}\n\t\t\tif (this._config.shouldRecordStats() && !oldShouldRecordStats) {\n\t\t\t\tthis._recorder = null;\n\t\t\t}\n\t\t}\n\t\tgetConfig() {\n\t\t\treturn this._config;\n\t\t}\n\t\t/**\n\t\t * Callback from the scriptLoader when a module has been loaded.\n\t\t * This means its code is available and has been executed.\n\t\t */\n\t\t_onLoad(moduleId) {\n\t\t\tif (this._currentAnonymousDefineCall !== null) {\n\t\t\t\tlet defineCall = this._currentAnonymousDefineCall;\n\t\t\t\tthis._currentAnonymousDefineCall = null;\n\t\t\t\t// Hit an anonymous define call\n\t\t\t\tthis.defineModule(this._moduleIdProvider.getStrModuleId(moduleId), defineCall.dependencies, defineCall.callback, null, defineCall.stack);\n\t\t\t}\n\t\t}\n\t\t_createLoadError(moduleId, _err) {\n\t\t\tlet strModuleId = this._moduleIdProvider.getStrModuleId(moduleId);\n\t\t\tlet neededBy = (this._inverseDependencies2[moduleId] || []).map((intModuleId) => this._moduleIdProvider.getStrModuleId(intModuleId));\n\t\t\tconst err = AMDLoader.ensureError(_err);\n\t\t\terr.phase = 'loading';\n\t\t\terr.moduleId = strModuleId;\n\t\t\terr.neededBy = neededBy;\n\t\t\treturn err;\n\t\t}\n\t\t/**\n\t\t * Callback from the scriptLoader when a module hasn't been loaded.\n\t\t * This means that the script was not found (e.g. 404) or there was an error in the script.\n\t\t */\n\t\t_onLoadError(moduleId, err) {\n\t\t\tconst error = this._createLoadError(moduleId, err);\n\t\t\tif (!this._modules2[moduleId]) {\n\t\t\t\tthis._modules2[moduleId] = new Module(moduleId, this._moduleIdProvider.getStrModuleId(moduleId), [], () => { }, null, null);\n\t\t\t}\n\t\t\t// Find any 'local' error handlers, walk the entire chain of inverse dependencies if necessary.\n\t\t\tlet seenModuleId = [];\n\t\t\tfor (let i = 0, len = this._moduleIdProvider.getMaxModuleId(); i < len; i++) {\n\t\t\t\tseenModuleId[i] = false;\n\t\t\t}\n\t\t\tlet someoneNotified = false;\n\t\t\tlet queue = [];\n\t\t\tqueue.push(moduleId);\n\t\t\tseenModuleId[moduleId] = true;\n\t\t\twhile (queue.length > 0) {\n\t\t\t\tlet queueElement = queue.shift();\n\t\t\t\tlet m = this._modules2[queueElement];\n\t\t\t\tif (m) {\n\t\t\t\t\tsomeoneNotified = m.onDependencyError(error) || someoneNotified;\n\t\t\t\t}\n\t\t\t\tlet inverseDeps = this._inverseDependencies2[queueElement];\n\t\t\t\tif (inverseDeps) {\n\t\t\t\t\tfor (let i = 0, len = inverseDeps.length; i < len; i++) {\n\t\t\t\t\t\tlet inverseDep = inverseDeps[i];\n\t\t\t\t\t\tif (!seenModuleId[inverseDep]) {\n\t\t\t\t\t\t\tqueue.push(inverseDep);\n\t\t\t\t\t\t\tseenModuleId[inverseDep] = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!someoneNotified) {\n\t\t\t\tthis._config.onError(error);\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Walks (recursively) the dependencies of 'from' in search of 'to'.\n\t\t * Returns true if there is such a path or false otherwise.\n\t\t * @param from Module id to start at\n\t\t * @param to Module id to look for\n\t\t */\n\t\t_hasDependencyPath(fromId, toId) {\n\t\t\tlet from = this._modules2[fromId];\n\t\t\tif (!from) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tlet inQueue = [];\n\t\t\tfor (let i = 0, len = this._moduleIdProvider.getMaxModuleId(); i < len; i++) {\n\t\t\t\tinQueue[i] = false;\n\t\t\t}\n\t\t\tlet queue = [];\n\t\t\t// Insert 'from' in queue\n\t\t\tqueue.push(from);\n\t\t\tinQueue[fromId] = true;\n\t\t\twhile (queue.length > 0) {\n\t\t\t\t// Pop first inserted element of queue\n\t\t\t\tlet element = queue.shift();\n\t\t\t\tlet dependencies = element.dependencies;\n\t\t\t\tif (dependencies) {\n\t\t\t\t\t// Walk the element's dependencies\n\t\t\t\t\tfor (let i = 0, len = dependencies.length; i < len; i++) {\n\t\t\t\t\t\tlet dependency = dependencies[i];\n\t\t\t\t\t\tif (dependency.id === toId) {\n\t\t\t\t\t\t\t// There is a path to 'to'\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet dependencyModule = this._modules2[dependency.id];\n\t\t\t\t\t\tif (dependencyModule && !inQueue[dependency.id]) {\n\t\t\t\t\t\t\t// Insert 'dependency' in queue\n\t\t\t\t\t\t\tinQueue[dependency.id] = true;\n\t\t\t\t\t\t\tqueue.push(dependencyModule);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// There is no path to 'to'\n\t\t\treturn false;\n\t\t}\n\t\t/**\n\t\t * Walks (recursively) the dependencies of 'from' in search of 'to'.\n\t\t * Returns cycle as array.\n\t\t * @param from Module id to start at\n\t\t * @param to Module id to look for\n\t\t */\n\t\t_findCyclePath(fromId, toId, depth) {\n\t\t\tif (fromId === toId || depth === 50) {\n\t\t\t\treturn [fromId];\n\t\t\t}\n\t\t\tlet from = this._modules2[fromId];\n\t\t\tif (!from) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t// Walk the element's dependencies\n\t\t\tlet dependencies = from.dependencies;\n\t\t\tif (dependencies) {\n\t\t\t\tfor (let i = 0, len = dependencies.length; i < len; i++) {\n\t\t\t\t\tlet path = this._findCyclePath(dependencies[i].id, toId, depth + 1);\n\t\t\t\t\tif (path !== null) {\n\t\t\t\t\t\tpath.push(fromId);\n\t\t\t\t\t\treturn path;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\t/**\n\t\t * Create the local 'require' that is passed into modules\n\t\t */\n\t\t_createRequire(moduleIdResolver) {\n\t\t\tlet result = ((dependencies, callback, errorback) => {\n\t\t\t\treturn this._relativeRequire(moduleIdResolver, dependencies, callback, errorback);\n\t\t\t});\n\t\t\tresult.toUrl = (id) => {\n\t\t\t\treturn this._config.requireToUrl(moduleIdResolver.resolveModule(id));\n\t\t\t};\n\t\t\tresult.getStats = () => {\n\t\t\t\treturn this.getLoaderEvents();\n\t\t\t};\n\t\t\tresult.hasDependencyCycle = () => {\n\t\t\t\treturn this._hasDependencyCycle;\n\t\t\t};\n\t\t\tresult.config = (params, shouldOverwrite = false) => {\n\t\t\t\tthis.configure(params, shouldOverwrite);\n\t\t\t};\n\t\t\tresult.__$__nodeRequire = AMDLoader.global.nodeRequire;\n\t\t\treturn result;\n\t\t}\n\t\t_loadModule(moduleId) {\n\t\t\tif (this._modules2[moduleId] || this._knownModules2[moduleId]) {\n\t\t\t\t// known module\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._knownModules2[moduleId] = true;\n\t\t\tlet strModuleId = this._moduleIdProvider.getStrModuleId(moduleId);\n\t\t\tlet paths = this._config.moduleIdToPaths(strModuleId);\n\t\t\tlet scopedPackageRegex = /^@[^\\/]+\\/[^\\/]+$/; // matches @scope/package-name\n\t\t\tif (this._env.isNode && (strModuleId.indexOf('/') === -1 || scopedPackageRegex.test(strModuleId))) {\n\t\t\t\tpaths.push('node|' + strModuleId);\n\t\t\t}\n\t\t\tlet lastPathIndex = -1;\n\t\t\tlet loadNextPath = (err) => {\n\t\t\t\tlastPathIndex++;\n\t\t\t\tif (lastPathIndex >= paths.length) {\n\t\t\t\t\t// No more paths to try\n\t\t\t\t\tthis._onLoadError(moduleId, err);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet currentPath = paths[lastPathIndex];\n\t\t\t\t\tlet recorder = this.getRecorder();\n\t\t\t\t\tif (this._config.isBuild() && currentPath === 'empty:') {\n\t\t\t\t\t\tthis._buildInfoPath[moduleId] = currentPath;\n\t\t\t\t\t\tthis.defineModule(this._moduleIdProvider.getStrModuleId(moduleId), [], null, null, null);\n\t\t\t\t\t\tthis._onLoad(moduleId);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\trecorder.record(10 /* LoaderEventType.BeginLoadingScript */, currentPath);\n\t\t\t\t\tthis._scriptLoader.load(this, currentPath, () => {\n\t\t\t\t\t\tif (this._config.isBuild()) {\n\t\t\t\t\t\t\tthis._buildInfoPath[moduleId] = currentPath;\n\t\t\t\t\t\t}\n\t\t\t\t\t\trecorder.record(11 /* LoaderEventType.EndLoadingScriptOK */, currentPath);\n\t\t\t\t\t\tthis._onLoad(moduleId);\n\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\trecorder.record(12 /* LoaderEventType.EndLoadingScriptError */, currentPath);\n\t\t\t\t\t\tloadNextPath(err);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t\tloadNextPath(null);\n\t\t}\n\t\t/**\n\t\t * Resolve a plugin dependency with the plugin loaded & complete\n\t\t * @param module The module that has this dependency\n\t\t * @param pluginDependency The semi-normalized dependency that appears in the module. e.g. 'vs/css!./mycssfile'. Only the plugin part (before !) is normalized\n\t\t * @param plugin The plugin (what the plugin exports)\n\t\t */\n\t\t_loadPluginDependency(plugin, pluginDependency) {\n\t\t\tif (this._modules2[pluginDependency.id] || this._knownModules2[pluginDependency.id]) {\n\t\t\t\t// known module\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._knownModules2[pluginDependency.id] = true;\n\t\t\t// Delegate the loading of the resource to the plugin\n\t\t\tlet load = ((value) => {\n\t\t\t\tthis.defineModule(this._moduleIdProvider.getStrModuleId(pluginDependency.id), [], value, null, null);\n\t\t\t});\n\t\t\tload.error = (err) => {\n\t\t\t\tthis._config.onError(this._createLoadError(pluginDependency.id, err));\n\t\t\t};\n\t\t\tplugin.load(pluginDependency.pluginParam, this._createRequire(ModuleIdResolver.ROOT), load, this._config.getOptionsLiteral());\n\t\t}\n\t\t/**\n\t\t * Examine the dependencies of module 'module' and resolve them as needed.\n\t\t */\n\t\t_resolve(module) {\n\t\t\tlet dependencies = module.dependencies;\n\t\t\tif (dependencies) {\n\t\t\t\tfor (let i = 0, len = dependencies.length; i < len; i++) {\n\t\t\t\t\tlet dependency = dependencies[i];\n\t\t\t\t\tif (dependency === RegularDependency.EXPORTS) {\n\t\t\t\t\t\tmodule.exportsPassedIn = true;\n\t\t\t\t\t\tmodule.unresolvedDependenciesCount--;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (dependency === RegularDependency.MODULE) {\n\t\t\t\t\t\tmodule.unresolvedDependenciesCount--;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (dependency === RegularDependency.REQUIRE) {\n\t\t\t\t\t\tmodule.unresolvedDependenciesCount--;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tlet dependencyModule = this._modules2[dependency.id];\n\t\t\t\t\tif (dependencyModule && dependencyModule.isComplete()) {\n\t\t\t\t\t\tif (dependencyModule.error) {\n\t\t\t\t\t\t\tmodule.onDependencyError(dependencyModule.error);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmodule.unresolvedDependenciesCount--;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (this._hasDependencyPath(dependency.id, module.id)) {\n\t\t\t\t\t\tthis._hasDependencyCycle = true;\n\t\t\t\t\t\tconsole.warn('There is a dependency cycle between \\'' + this._moduleIdProvider.getStrModuleId(dependency.id) + '\\' and \\'' + this._moduleIdProvider.getStrModuleId(module.id) + '\\'. The cyclic path follows:');\n\t\t\t\t\t\tlet cyclePath = this._findCyclePath(dependency.id, module.id, 0) || [];\n\t\t\t\t\t\tcyclePath.reverse();\n\t\t\t\t\t\tcyclePath.push(dependency.id);\n\t\t\t\t\t\tconsole.warn(cyclePath.map(id => this._moduleIdProvider.getStrModuleId(id)).join(' => \\n'));\n\t\t\t\t\t\t// Break the cycle\n\t\t\t\t\t\tmodule.unresolvedDependenciesCount--;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t// record inverse dependency\n\t\t\t\t\tthis._inverseDependencies2[dependency.id] = this._inverseDependencies2[dependency.id] || [];\n\t\t\t\t\tthis._inverseDependencies2[dependency.id].push(module.id);\n\t\t\t\t\tif (dependency instanceof PluginDependency) {\n\t\t\t\t\t\tlet plugin = this._modules2[dependency.pluginId];\n\t\t\t\t\t\tif (plugin && plugin.isComplete()) {\n\t\t\t\t\t\t\tthis._loadPluginDependency(plugin.exports, dependency);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Record dependency for when the plugin gets loaded\n\t\t\t\t\t\tlet inversePluginDeps = this._inversePluginDependencies2.get(dependency.pluginId);\n\t\t\t\t\t\tif (!inversePluginDeps) {\n\t\t\t\t\t\t\tinversePluginDeps = [];\n\t\t\t\t\t\t\tthis._inversePluginDependencies2.set(dependency.pluginId, inversePluginDeps);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinversePluginDeps.push(dependency);\n\t\t\t\t\t\tthis._loadModule(dependency.pluginId);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tthis._loadModule(dependency.id);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (module.unresolvedDependenciesCount === 0) {\n\t\t\t\tthis._onModuleComplete(module);\n\t\t\t}\n\t\t}\n\t\t_onModuleComplete(module) {\n\t\t\tlet recorder = this.getRecorder();\n\t\t\tif (module.isComplete()) {\n\t\t\t\t// already done\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet dependencies = module.dependencies;\n\t\t\tlet dependenciesValues = [];\n\t\t\tif (dependencies) {\n\t\t\t\tfor (let i = 0, len = dependencies.length; i < len; i++) {\n\t\t\t\t\tlet dependency = dependencies[i];\n\t\t\t\t\tif (dependency === RegularDependency.EXPORTS) {\n\t\t\t\t\t\tdependenciesValues[i] = module.exports;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (dependency === RegularDependency.MODULE) {\n\t\t\t\t\t\tdependenciesValues[i] = {\n\t\t\t\t\t\t\tid: module.strId,\n\t\t\t\t\t\t\tconfig: () => {\n\t\t\t\t\t\t\t\treturn this._config.getConfigForModule(module.strId);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (dependency === RegularDependency.REQUIRE) {\n\t\t\t\t\t\tdependenciesValues[i] = this._createRequire(module.moduleIdResolver);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tlet dependencyModule = this._modules2[dependency.id];\n\t\t\t\t\tif (dependencyModule) {\n\t\t\t\t\t\tdependenciesValues[i] = dependencyModule.exports;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tdependenciesValues[i] = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst inversedependenciesProvider = (moduleId) => {\n\t\t\t\treturn (this._inverseDependencies2[moduleId] || []).map((intModuleId) => this._moduleIdProvider.getStrModuleId(intModuleId));\n\t\t\t};\n\t\t\tmodule.complete(recorder, this._config, dependenciesValues, inversedependenciesProvider);\n\t\t\t// Fetch and clear inverse dependencies\n\t\t\tlet inverseDeps = this._inverseDependencies2[module.id];\n\t\t\tthis._inverseDependencies2[module.id] = null;\n\t\t\tif (inverseDeps) {\n\t\t\t\t// Resolve one inverse dependency at a time, always\n\t\t\t\t// on the lookout for a completed module.\n\t\t\t\tfor (let i = 0, len = inverseDeps.length; i < len; i++) {\n\t\t\t\t\tlet inverseDependencyId = inverseDeps[i];\n\t\t\t\t\tlet inverseDependency = this._modules2[inverseDependencyId];\n\t\t\t\t\tinverseDependency.unresolvedDependenciesCount--;\n\t\t\t\t\tif (inverseDependency.unresolvedDependenciesCount === 0) {\n\t\t\t\t\t\tthis._onModuleComplete(inverseDependency);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet inversePluginDeps = this._inversePluginDependencies2.get(module.id);\n\t\t\tif (inversePluginDeps) {\n\t\t\t\t// This module is used as a plugin at least once\n\t\t\t\t// Fetch and clear these inverse plugin dependencies\n\t\t\t\tthis._inversePluginDependencies2.delete(module.id);\n\t\t\t\t// Resolve plugin dependencies one at a time\n\t\t\t\tfor (let i = 0, len = inversePluginDeps.length; i < len; i++) {\n\t\t\t\t\tthis._loadPluginDependency(module.exports, inversePluginDeps[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tAMDLoader.ModuleManager = ModuleManager;\n})(AMDLoader || (AMDLoader = {}));\nvar define;\nvar AMDLoader;\n(function (AMDLoader) {\n\tconst env = new AMDLoader.Environment();\n\tlet moduleManager = null;\n\tconst DefineFunc = function (id, dependencies, callback) {\n\t\tif (typeof id !== 'string') {\n\t\t\tcallback = dependencies;\n\t\t\tdependencies = id;\n\t\t\tid = null;\n\t\t}\n\t\tif (typeof dependencies !== 'object' || !Array.isArray(dependencies)) {\n\t\t\tcallback = dependencies;\n\t\t\tdependencies = null;\n\t\t}\n\t\tif (!dependencies) {\n\t\t\tdependencies = ['require', 'exports', 'module'];\n\t\t}\n\t\tif (id) {\n\t\t\tmoduleManager.defineModule(id, dependencies, callback, null, null);\n\t\t}\n\t\telse {\n\t\t\tmoduleManager.enqueueDefineAnonymousModule(dependencies, callback);\n\t\t}\n\t};\n\tDefineFunc.amd = {\n\t\tjQuery: true\n\t};\n\tconst _requireFunc_config = function (params, shouldOverwrite = false) {\n\t\tmoduleManager.configure(params, shouldOverwrite);\n\t};\n\tconst RequireFunc = function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif ((arguments[0] instanceof Object) && !Array.isArray(arguments[0])) {\n\t\t\t\t_requireFunc_config(arguments[0]);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (typeof arguments[0] === 'string') {\n\t\t\t\treturn moduleManager.synchronousRequire(arguments[0]);\n\t\t\t}\n\t\t}\n\t\tif (arguments.length === 2 || arguments.length === 3) {\n\t\t\tif (Array.isArray(arguments[0])) {\n\t\t\t\tmoduleManager.defineModule(AMDLoader.Utilities.generateAnonymousModule(), arguments[0], arguments[1], arguments[2], null);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthrow new Error('Unrecognized require call');\n\t};\n\tRequireFunc.config = _requireFunc_config;\n\tRequireFunc.getConfig = function () {\n\t\treturn moduleManager.getConfig().getOptionsLiteral();\n\t};\n\tRequireFunc.reset = function () {\n\t\tmoduleManager = moduleManager.reset();\n\t};\n\tRequireFunc.getBuildInfo = function () {\n\t\treturn moduleManager.getBuildInfo();\n\t};\n\tRequireFunc.getStats = function () {\n\t\treturn moduleManager.getLoaderEvents();\n\t};\n\tRequireFunc.define = DefineFunc;\n\tfunction init() {\n\t\tif (typeof AMDLoader.global.require !== 'undefined' || typeof require !== 'undefined') {\n\t\t\tconst _nodeRequire = (AMDLoader.global.require || require);\n\t\t\tif (typeof _nodeRequire === 'function' && typeof _nodeRequire.resolve === 'function') {\n\t\t\t\t// re-expose node's require function\n\t\t\t\tconst nodeRequire = AMDLoader.ensureRecordedNodeRequire(moduleManager.getRecorder(), _nodeRequire);\n\t\t\t\tAMDLoader.global.nodeRequire = nodeRequire;\n\t\t\t\tRequireFunc.nodeRequire = nodeRequire;\n\t\t\t\tRequireFunc.__$__nodeRequire = nodeRequire;\n\t\t\t}\n\t\t}\n\t\tif (env.isNode && !env.isElectronRenderer && !env.isElectronNodeIntegrationWebWorker) {\n\t\t\tmodule.exports = RequireFunc;\n\t\t}\n\t\telse {\n\t\t\tif (!env.isElectronRenderer) {\n\t\t\t\tAMDLoader.global.define = DefineFunc;\n\t\t\t}\n\t\t\tAMDLoader.global.require = RequireFunc;\n\t\t}\n\t}\n\tAMDLoader.init = init;\n\tif (typeof AMDLoader.global.define !== 'function' || !AMDLoader.global.define.amd) {\n\t\tmoduleManager = new AMDLoader.ModuleManager(env, AMDLoader.createScriptLoader(env), DefineFunc, RequireFunc, AMDLoader.Utilities.getHighPerformanceTimestamp());\n\t\t// The global variable require can configure the loader\n\t\tif (typeof AMDLoader.global.require !== 'undefined' && typeof AMDLoader.global.require !== 'function') {\n\t\t\tRequireFunc.config(AMDLoader.global.require);\n\t\t}\n\t\t// This define is for the local closure defined in node in the case that the loader is concatenated\n\t\tdefine = function () {\n\t\t\treturn DefineFunc.apply(null, arguments);\n\t\t};\n\t\tdefine.amd = DefineFunc.amd;\n\t\tif (typeof doNotInitLoader === 'undefined') {\n\t\t\tinit();\n\t\t}\n\t}\n})(AMDLoader || (AMDLoader = {}));\n"],
  "mappings": "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",
  "names": ["AMDLoader", "Module", "require", "nodeRequire", "err", "module"]
}
