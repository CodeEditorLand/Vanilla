{
  "version": 3,
  "sources": ["../../../../Dependency/CodeEditorLand/Editor/Source/vs/loader.js"],
  "sourcesContent": ["const _commonjsGlobal = typeof global === \"object\" ? global : {};\nvar AMDLoader;\n((AMDLoader) => {\n\tAMDLoader.global = this;\n\tclass Environment {\n\t\tget isWindows() {\n\t\t\tthis._detect();\n\t\t\treturn this._isWindows;\n\t\t}\n\t\tget isNode() {\n\t\t\tthis._detect();\n\t\t\treturn this._isNode;\n\t\t}\n\t\tget isElectronRenderer() {\n\t\t\tthis._detect();\n\t\t\treturn this._isElectronRenderer;\n\t\t}\n\t\tget isWebWorker() {\n\t\t\tthis._detect();\n\t\t\treturn this._isWebWorker;\n\t\t}\n\t\tget isElectronNodeIntegrationWebWorker() {\n\t\t\tthis._detect();\n\t\t\treturn this._isElectronNodeIntegrationWebWorker;\n\t\t}\n\t\tconstructor() {\n\t\t\tthis._detected = false;\n\t\t\tthis._isWindows = false;\n\t\t\tthis._isNode = false;\n\t\t\tthis._isElectronRenderer = false;\n\t\t\tthis._isWebWorker = false;\n\t\t\tthis._isElectronNodeIntegrationWebWorker = false;\n\t\t}\n\t\t_detect() {\n\t\t\tif (this._detected) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._detected = true;\n\t\t\tthis._isWindows = Environment._isWindows();\n\t\t\tthis._isNode = typeof module !== \"undefined\" && !!module.exports;\n\t\t\tthis._isElectronRenderer =\n\t\t\t\ttypeof process !== \"undefined\" &&\n\t\t\t\ttypeof process.versions !== \"undefined\" &&\n\t\t\t\ttypeof process.versions.electron !== \"undefined\" &&\n\t\t\t\tprocess.type === \"renderer\";\n\t\t\tthis._isWebWorker =\n\t\t\t\ttypeof AMDLoader.global.importScripts === \"function\";\n\t\t\tthis._isElectronNodeIntegrationWebWorker =\n\t\t\t\tthis._isWebWorker &&\n\t\t\t\ttypeof process !== \"undefined\" &&\n\t\t\t\t\ttypeof process.versions !== \"undefined\" &&\n\t\t\t\t\ttypeof process.versions.electron !== \"undefined\" &&\n\t\t\t\tprocess.type === \"worker\";\n\t\t}\n\t\tstatic _isWindows() {\n\t\t\tif (typeof navigator !== \"undefined\") {\n\t\t\t\tif (\n\t\t\t\t\tnavigator.userAgent &&\n\t\t\t\t\tnavigator.userAgent.indexOf(\"Windows\") >= 0\n\t\t\t\t) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof process !== \"undefined\") {\n\t\t\t\treturn process.platform === \"win32\";\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n\tAMDLoader.Environment = Environment;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n((AMDLoader) => {\n\tclass LoaderEvent {\n\t\tconstructor(type, detail, timestamp) {\n\t\t\tthis.type = type;\n\t\t\tthis.detail = detail;\n\t\t\tthis.timestamp = timestamp;\n\t\t}\n\t}\n\tAMDLoader.LoaderEvent = LoaderEvent;\n\tclass LoaderEventRecorder {\n\t\tconstructor(loaderAvailableTimestamp) {\n\t\t\tthis._events = [\n\t\t\t\tnew LoaderEvent(\n\t\t\t\t\t1 /* LoaderEventType.LoaderAvailable */,\n\t\t\t\t\t\"\",\n\t\t\t\t\tloaderAvailableTimestamp,\n\t\t\t\t),\n\t\t\t];\n\t\t}\n\t\trecord(type, detail) {\n\t\t\tthis._events.push(\n\t\t\t\tnew LoaderEvent(\n\t\t\t\t\ttype,\n\t\t\t\t\tdetail,\n\t\t\t\t\tAMDLoader.Utilities.getHighPerformanceTimestamp(),\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t\tgetEvents() {\n\t\t\treturn this._events;\n\t\t}\n\t}\n\tAMDLoader.LoaderEventRecorder = LoaderEventRecorder;\n\tclass NullLoaderEventRecorder {\n\t\trecord(type, detail) {\n\t\t\t// Nothing to do\n\t\t}\n\t\tgetEvents() {\n\t\t\treturn [];\n\t\t}\n\t}\n\tNullLoaderEventRecorder.INSTANCE = new NullLoaderEventRecorder();\n\tAMDLoader.NullLoaderEventRecorder = NullLoaderEventRecorder;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n((AMDLoader) => {\n\tclass Utilities {\n\t\t/**\n\t\t * This method does not take care of / vs \\\n\t\t */\n\t\tstatic fileUriToFilePath(isWindows, uri) {\n\t\t\turi = decodeURI(uri).replace(/%23/g, \"#\");\n\t\t\tif (isWindows) {\n\t\t\t\tif (/^file:\\/\\/\\//.test(uri)) {\n\t\t\t\t\t// This is a URI without a hostname => return only the path segment\n\t\t\t\t\treturn uri.substr(8);\n\t\t\t\t}\n\t\t\t\tif (/^file:\\/\\//.test(uri)) {\n\t\t\t\t\treturn uri.substr(5);\n\t\t\t\t}\n\t\t\t} else if (/^file:\\/\\//.test(uri)) {\n\t\t\t\treturn uri.substr(7);\n\t\t\t}\n\t\t\t// Not sure...\n\t\t\treturn uri;\n\t\t}\n\t\tstatic startsWith(haystack, needle) {\n\t\t\treturn (\n\t\t\t\thaystack.length >= needle.length &&\n\t\t\t\thaystack.substr(0, needle.length) === needle\n\t\t\t);\n\t\t}\n\t\tstatic endsWith(haystack, needle) {\n\t\t\treturn (\n\t\t\t\thaystack.length >= needle.length &&\n\t\t\t\thaystack.substr(haystack.length - needle.length) === needle\n\t\t\t);\n\t\t}\n\t\t// only check for \"?\" before \"#\" to ensure that there is a real Query-String\n\t\tstatic containsQueryString(url) {\n\t\t\treturn /^[^#]*\\?/gi.test(url);\n\t\t}\n\t\t/**\n\t\t * Does `url` start with http:// or https:// or file:// or / ?\n\t\t */\n\t\tstatic isAbsolutePath(url) {\n\t\t\treturn /^((http:\\/\\/)|(https:\\/\\/)|(file:\\/\\/)|(\\/))/.test(url);\n\t\t}\n\t\tstatic forEachProperty(obj, callback) {\n\t\t\tif (obj) {\n\t\t\t\tlet key;\n\t\t\t\tfor (key in obj) {\n\t\t\t\t\tif (obj.hasOwnProperty(key)) {\n\t\t\t\t\t\tcallback(key, obj[key]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tstatic isEmpty(obj) {\n\t\t\tlet isEmpty = true;\n\t\t\tUtilities.forEachProperty(obj, () => {\n\t\t\t\tisEmpty = false;\n\t\t\t});\n\t\t\treturn isEmpty;\n\t\t}\n\t\tstatic recursiveClone(obj) {\n\t\t\tif (!obj || typeof obj !== \"object\" || obj instanceof RegExp) {\n\t\t\t\treturn obj;\n\t\t\t}\n\t\t\tif (\n\t\t\t\t!Array.isArray(obj) &&\n\t\t\t\tObject.getPrototypeOf(obj) !== Object.prototype\n\t\t\t) {\n\t\t\t\t// only clone \"simple\" objects\n\t\t\t\treturn obj;\n\t\t\t}\n\t\t\tconst result = Array.isArray(obj) ? [] : {};\n\t\t\tUtilities.forEachProperty(obj, (key, value) => {\n\t\t\t\tif (value && typeof value === \"object\") {\n\t\t\t\t\tresult[key] = Utilities.recursiveClone(value);\n\t\t\t\t} else {\n\t\t\t\t\tresult[key] = value;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn result;\n\t\t}\n\t\tstatic generateAnonymousModule() {\n\t\t\treturn \"===anonymous\" + Utilities.NEXT_ANONYMOUS_ID++ + \"===\";\n\t\t}\n\t\tstatic isAnonymousModule(id) {\n\t\t\treturn Utilities.startsWith(id, \"===anonymous\");\n\t\t}\n\t\tstatic getHighPerformanceTimestamp() {\n\t\t\tif (!this.PERFORMANCE_NOW_PROBED) {\n\t\t\t\tthis.PERFORMANCE_NOW_PROBED = true;\n\t\t\t\tthis.HAS_PERFORMANCE_NOW =\n\t\t\t\t\tAMDLoader.global.performance &&\n\t\t\t\t\ttypeof AMDLoader.global.performance.now === \"function\";\n\t\t\t}\n\t\t\treturn this.HAS_PERFORMANCE_NOW\n\t\t\t\t? AMDLoader.global.performance.now()\n\t\t\t\t: Date.now();\n\t\t}\n\t}\n\tUtilities.NEXT_ANONYMOUS_ID = 1;\n\tUtilities.PERFORMANCE_NOW_PROBED = false;\n\tUtilities.HAS_PERFORMANCE_NOW = false;\n\tAMDLoader.Utilities = Utilities;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n((AMDLoader) => {\n\tfunction ensureError(err) {\n\t\tif (err instanceof Error) {\n\t\t\treturn err;\n\t\t}\n\t\tconst result = new Error(err.message || String(err) || \"Unknown Error\");\n\t\tif (err.stack) {\n\t\t\tresult.stack = err.stack;\n\t\t}\n\t\treturn result;\n\t}\n\tAMDLoader.ensureError = ensureError;\n\tclass ConfigurationOptionsUtil {\n\t\t/**\n\t\t * Ensure configuration options make sense\n\t\t */\n\t\tstatic validateConfigurationOptions(options) {\n\t\t\tfunction defaultOnError(err) {\n\t\t\t\tif (err.phase === \"loading\") {\n\t\t\t\t\tconsole.error('Loading \"' + err.moduleId + '\" failed');\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t\tconsole.error(\"Here are the modules that depend on it:\");\n\t\t\t\t\tconsole.error(err.neededBy);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (err.phase === \"factory\") {\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'The factory function of \"' +\n\t\t\t\t\t\t\terr.moduleId +\n\t\t\t\t\t\t\t'\" has thrown an exception',\n\t\t\t\t\t);\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t\tconsole.error(\"Here are the modules that depend on it:\");\n\t\t\t\t\tconsole.error(err.neededBy);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\toptions = options || {};\n\t\t\tif (typeof options.baseUrl !== \"string\") {\n\t\t\t\toptions.baseUrl = \"\";\n\t\t\t}\n\t\t\tif (typeof options.isBuild !== \"boolean\") {\n\t\t\t\toptions.isBuild = false;\n\t\t\t}\n\t\t\tif (typeof options.paths !== \"object\") {\n\t\t\t\toptions.paths = {};\n\t\t\t}\n\t\t\tif (typeof options.config !== \"object\") {\n\t\t\t\toptions.config = {};\n\t\t\t}\n\t\t\tif (typeof options.catchError === \"undefined\") {\n\t\t\t\toptions.catchError = false;\n\t\t\t}\n\t\t\tif (typeof options.recordStats === \"undefined\") {\n\t\t\t\toptions.recordStats = false;\n\t\t\t}\n\t\t\tif (typeof options.urlArgs !== \"string\") {\n\t\t\t\toptions.urlArgs = \"\";\n\t\t\t}\n\t\t\tif (typeof options.onError !== \"function\") {\n\t\t\t\toptions.onError = defaultOnError;\n\t\t\t}\n\t\t\tif (!Array.isArray(options.ignoreDuplicateModules)) {\n\t\t\t\toptions.ignoreDuplicateModules = [];\n\t\t\t}\n\t\t\tif (options.baseUrl.length > 0) {\n\t\t\t\tif (!AMDLoader.Utilities.endsWith(options.baseUrl, \"/\")) {\n\t\t\t\t\toptions.baseUrl += \"/\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof options.cspNonce !== \"string\") {\n\t\t\t\toptions.cspNonce = \"\";\n\t\t\t}\n\t\t\tif (typeof options.preferScriptTags === \"undefined\") {\n\t\t\t\toptions.preferScriptTags = false;\n\t\t\t}\n\t\t\tif (\n\t\t\t\toptions.nodeCachedData &&\n\t\t\t\ttypeof options.nodeCachedData === \"object\"\n\t\t\t) {\n\t\t\t\tif (typeof options.nodeCachedData.seed !== \"string\") {\n\t\t\t\t\toptions.nodeCachedData.seed = \"seed\";\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\ttypeof options.nodeCachedData.writeDelay !== \"number\" ||\n\t\t\t\t\toptions.nodeCachedData.writeDelay < 0\n\t\t\t\t) {\n\t\t\t\t\toptions.nodeCachedData.writeDelay = 1000 * 7;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\t!options.nodeCachedData.path ||\n\t\t\t\t\ttypeof options.nodeCachedData.path !== \"string\"\n\t\t\t\t) {\n\t\t\t\t\tconst err = ensureError(\n\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\"INVALID cached data configuration, 'path' MUST be set\",\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\terr.phase = \"configuration\";\n\t\t\t\t\toptions.onError(err);\n\t\t\t\t\toptions.nodeCachedData = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn options;\n\t\t}\n\t\tstatic mergeConfigurationOptions(overwrite = null, base = null) {\n\t\t\tconst result = AMDLoader.Utilities.recursiveClone(base || {});\n\t\t\t// Merge known properties and overwrite the unknown ones\n\t\t\tAMDLoader.Utilities.forEachProperty(overwrite, (key, value) => {\n\t\t\t\tif (\n\t\t\t\t\tkey === \"ignoreDuplicateModules\" &&\n\t\t\t\t\ttypeof result.ignoreDuplicateModules !== \"undefined\"\n\t\t\t\t) {\n\t\t\t\t\tresult.ignoreDuplicateModules =\n\t\t\t\t\t\tresult.ignoreDuplicateModules.concat(value);\n\t\t\t\t} else if (\n\t\t\t\t\tkey === \"paths\" &&\n\t\t\t\t\ttypeof result.paths !== \"undefined\"\n\t\t\t\t) {\n\t\t\t\t\tAMDLoader.Utilities.forEachProperty(\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t(key2, value2) => (result.paths[key2] = value2),\n\t\t\t\t\t);\n\t\t\t\t} else if (\n\t\t\t\t\tkey === \"config\" &&\n\t\t\t\t\ttypeof result.config !== \"undefined\"\n\t\t\t\t) {\n\t\t\t\t\tAMDLoader.Utilities.forEachProperty(\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t(key2, value2) => (result.config[key2] = value2),\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tresult[key] = AMDLoader.Utilities.recursiveClone(value);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ConfigurationOptionsUtil.validateConfigurationOptions(\n\t\t\t\tresult,\n\t\t\t);\n\t\t}\n\t}\n\tAMDLoader.ConfigurationOptionsUtil = ConfigurationOptionsUtil;\n\tclass Configuration {\n\t\tconstructor(env, options) {\n\t\t\tthis._env = env;\n\t\t\tthis.options =\n\t\t\t\tConfigurationOptionsUtil.mergeConfigurationOptions(options);\n\t\t\tthis._createIgnoreDuplicateModulesMap();\n\t\t\tthis._createSortedPathsRules();\n\t\t\tif (this.options.baseUrl === \"\") {\n\t\t\t\tif (\n\t\t\t\t\tthis.options.nodeRequire &&\n\t\t\t\t\tthis.options.nodeRequire.main &&\n\t\t\t\t\tthis.options.nodeRequire.main.filename &&\n\t\t\t\t\tthis._env.isNode\n\t\t\t\t) {\n\t\t\t\t\tconst nodeMain = this.options.nodeRequire.main.filename;\n\t\t\t\t\tconst dirnameIndex = Math.max(\n\t\t\t\t\t\tnodeMain.lastIndexOf(\"/\"),\n\t\t\t\t\t\tnodeMain.lastIndexOf(\"\\\\\"),\n\t\t\t\t\t);\n\t\t\t\t\tthis.options.baseUrl = nodeMain.substring(\n\t\t\t\t\t\t0,\n\t\t\t\t\t\tdirnameIndex + 1,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_createIgnoreDuplicateModulesMap() {\n\t\t\t// Build a map out of the ignoreDuplicateModules array\n\t\t\tthis.ignoreDuplicateModulesMap = {};\n\t\t\tfor (\n\t\t\t\tlet i = 0;\n\t\t\t\ti < this.options.ignoreDuplicateModules.length;\n\t\t\t\ti++\n\t\t\t) {\n\t\t\t\tthis.ignoreDuplicateModulesMap[\n\t\t\t\t\tthis.options.ignoreDuplicateModules[i]\n\t\t\t\t] = true;\n\t\t\t}\n\t\t}\n\t\t_createSortedPathsRules() {\n\t\t\t// Create an array our of the paths rules, sorted descending by length to\n\t\t\t// result in a more specific -> less specific order\n\t\t\tthis.sortedPathsRules = [];\n\t\t\tAMDLoader.Utilities.forEachProperty(\n\t\t\t\tthis.options.paths,\n\t\t\t\t(from, to) => {\n\t\t\t\t\tif (Array.isArray(to)) {\n\t\t\t\t\t\tthis.sortedPathsRules.push({\n\t\t\t\t\t\t\tfrom: from,\n\t\t\t\t\t\t\tto: to,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.sortedPathsRules.push({\n\t\t\t\t\t\t\tfrom: from,\n\t\t\t\t\t\t\tto: [to],\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\t\t\tthis.sortedPathsRules.sort((a, b) => {\n\t\t\t\treturn b.from.length - a.from.length;\n\t\t\t});\n\t\t}\n\t\t/**\n\t\t * Clone current configuration and overwrite options selectively.\n\t\t * @param options The selective options to overwrite with.\n\t\t * @result A new configuration\n\t\t */\n\t\tcloneAndMerge(options) {\n\t\t\treturn new Configuration(\n\t\t\t\tthis._env,\n\t\t\t\tConfigurationOptionsUtil.mergeConfigurationOptions(\n\t\t\t\t\toptions,\n\t\t\t\t\tthis.options,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t\t/**\n\t\t * Get current options bag. Useful for passing it forward to plugins.\n\t\t */\n\t\tgetOptionsLiteral() {\n\t\t\treturn this.options;\n\t\t}\n\t\t_applyPaths(moduleId) {\n\t\t\tlet pathRule;\n\t\t\tfor (let i = 0, len = this.sortedPathsRules.length; i < len; i++) {\n\t\t\t\tpathRule = this.sortedPathsRules[i];\n\t\t\t\tif (AMDLoader.Utilities.startsWith(moduleId, pathRule.from)) {\n\t\t\t\t\tconst result = [];\n\t\t\t\t\tfor (let j = 0, lenJ = pathRule.to.length; j < lenJ; j++) {\n\t\t\t\t\t\tresult.push(\n\t\t\t\t\t\t\tpathRule.to[j] +\n\t\t\t\t\t\t\t\tmoduleId.substr(pathRule.from.length),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn [moduleId];\n\t\t}\n\t\t_addUrlArgsToUrl(url) {\n\t\t\tif (AMDLoader.Utilities.containsQueryString(url)) {\n\t\t\t\treturn url + \"&\" + this.options.urlArgs;\n\t\t\t} else {\n\t\t\t\treturn url + \"?\" + this.options.urlArgs;\n\t\t\t}\n\t\t}\n\t\t_addUrlArgsIfNecessaryToUrl(url) {\n\t\t\tif (this.options.urlArgs) {\n\t\t\t\treturn this._addUrlArgsToUrl(url);\n\t\t\t}\n\t\t\treturn url;\n\t\t}\n\t\t_addUrlArgsIfNecessaryToUrls(urls) {\n\t\t\tif (this.options.urlArgs) {\n\t\t\t\tfor (let i = 0, len = urls.length; i < len; i++) {\n\t\t\t\t\turls[i] = this._addUrlArgsToUrl(urls[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn urls;\n\t\t}\n\t\t/**\n\t\t * Transform a module id to a location. Appends .js to module ids\n\t\t */\n\t\tmoduleIdToPaths(moduleId) {\n\t\t\tif (this._env.isNode) {\n\t\t\t\tconst isNodeModule =\n\t\t\t\t\tthis.options.amdModulesPattern instanceof RegExp &&\n\t\t\t\t\t!this.options.amdModulesPattern.test(moduleId);\n\t\t\t\tif (isNodeModule) {\n\t\t\t\t\t// This is a node module...\n\t\t\t\t\tif (this.isBuild()) {\n\t\t\t\t\t\t// ...and we are at build time, drop it\n\t\t\t\t\t\treturn [\"empty:\"];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// ...and at runtime we create a `shortcut`-path\n\t\t\t\t\t\treturn [\"node|\" + moduleId];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet result = moduleId;\n\t\t\tlet results;\n\t\t\tif (\n\t\t\t\t!AMDLoader.Utilities.endsWith(result, \".js\") &&\n\t\t\t\t!AMDLoader.Utilities.isAbsolutePath(result)\n\t\t\t) {\n\t\t\t\tresults = this._applyPaths(result);\n\t\t\t\tfor (let i = 0, len = results.length; i < len; i++) {\n\t\t\t\t\tif (this.isBuild() && results[i] === \"empty:\") {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (!AMDLoader.Utilities.isAbsolutePath(results[i])) {\n\t\t\t\t\t\tresults[i] = this.options.baseUrl + results[i];\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\t!AMDLoader.Utilities.endsWith(results[i], \".js\") &&\n\t\t\t\t\t\t!AMDLoader.Utilities.containsQueryString(results[i])\n\t\t\t\t\t) {\n\t\t\t\t\t\tresults[i] = results[i] + \".js\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\t!AMDLoader.Utilities.endsWith(result, \".js\") &&\n\t\t\t\t\t!AMDLoader.Utilities.containsQueryString(result)\n\t\t\t\t) {\n\t\t\t\t\tresult = result + \".js\";\n\t\t\t\t}\n\t\t\t\tresults = [result];\n\t\t\t}\n\t\t\treturn this._addUrlArgsIfNecessaryToUrls(results);\n\t\t}\n\t\t/**\n\t\t * Transform a module id or url to a location.\n\t\t */\n\t\trequireToUrl(url) {\n\t\t\tlet result = url;\n\t\t\tif (!AMDLoader.Utilities.isAbsolutePath(result)) {\n\t\t\t\tresult = this._applyPaths(result)[0];\n\t\t\t\tif (!AMDLoader.Utilities.isAbsolutePath(result)) {\n\t\t\t\t\tresult = this.options.baseUrl + result;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._addUrlArgsIfNecessaryToUrl(result);\n\t\t}\n\t\t/**\n\t\t * Flag to indicate if current execution is as part of a build.\n\t\t */\n\t\tisBuild() {\n\t\t\treturn this.options.isBuild;\n\t\t}\n\t\tshouldInvokeFactory(strModuleId) {\n\t\t\tif (!this.options.isBuild) {\n\t\t\t\t// outside of a build, all factories should be invoked\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t// during a build, only explicitly marked or anonymous modules get their factories invoked\n\t\t\tif (AMDLoader.Utilities.isAnonymousModule(strModuleId)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (\n\t\t\t\tthis.options.buildForceInvokeFactory &&\n\t\t\t\tthis.options.buildForceInvokeFactory[strModuleId]\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\t/**\n\t\t * Test if module `moduleId` is expected to be defined multiple times\n\t\t */\n\t\tisDuplicateMessageIgnoredFor(moduleId) {\n\t\t\treturn this.ignoreDuplicateModulesMap.hasOwnProperty(moduleId);\n\t\t}\n\t\t/**\n\t\t * Get the configuration settings for the provided module id\n\t\t */\n\t\tgetConfigForModule(moduleId) {\n\t\t\tif (this.options.config) {\n\t\t\t\treturn this.options.config[moduleId];\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Should errors be caught when executing module factories?\n\t\t */\n\t\tshouldCatchError() {\n\t\t\treturn this.options.catchError;\n\t\t}\n\t\t/**\n\t\t * Should statistics be recorded?\n\t\t */\n\t\tshouldRecordStats() {\n\t\t\treturn this.options.recordStats;\n\t\t}\n\t\t/**\n\t\t * Forward an error to the error handler.\n\t\t */\n\t\tonError(err) {\n\t\t\tthis.options.onError(err);\n\t\t}\n\t}\n\tAMDLoader.Configuration = Configuration;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n((AMDLoader) => {\n\t/**\n\t * Load `scriptSrc` only once (avoid multiple <script> tags)\n\t */\n\tclass OnlyOnceScriptLoader {\n\t\tconstructor(env) {\n\t\t\tthis._env = env;\n\t\t\tthis._scriptLoader = null;\n\t\t\tthis._callbackMap = {};\n\t\t}\n\t\tload(moduleManager, scriptSrc, callback, errorback) {\n\t\t\tif (!this._scriptLoader) {\n\t\t\t\tif (this._env.isWebWorker) {\n\t\t\t\t\tthis._scriptLoader = new WorkerScriptLoader();\n\t\t\t\t} else if (this._env.isElectronRenderer) {\n\t\t\t\t\tconst { preferScriptTags } = moduleManager\n\t\t\t\t\t\t.getConfig()\n\t\t\t\t\t\t.getOptionsLiteral();\n\t\t\t\t\tif (preferScriptTags) {\n\t\t\t\t\t\tthis._scriptLoader = new BrowserScriptLoader();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._scriptLoader = new NodeScriptLoader(this._env);\n\t\t\t\t\t}\n\t\t\t\t} else if (this._env.isNode) {\n\t\t\t\t\tthis._scriptLoader = new NodeScriptLoader(this._env);\n\t\t\t\t} else {\n\t\t\t\t\tthis._scriptLoader = new BrowserScriptLoader();\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst scriptCallbacks = {\n\t\t\t\tcallback: callback,\n\t\t\t\terrorback: errorback,\n\t\t\t};\n\t\t\tif (this._callbackMap.hasOwnProperty(scriptSrc)) {\n\t\t\t\tthis._callbackMap[scriptSrc].push(scriptCallbacks);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._callbackMap[scriptSrc] = [scriptCallbacks];\n\t\t\tthis._scriptLoader.load(\n\t\t\t\tmoduleManager,\n\t\t\t\tscriptSrc,\n\t\t\t\t() => this.triggerCallback(scriptSrc),\n\t\t\t\t(err) => this.triggerErrorback(scriptSrc, err),\n\t\t\t);\n\t\t}\n\t\ttriggerCallback(scriptSrc) {\n\t\t\tconst scriptCallbacks = this._callbackMap[scriptSrc];\n\t\t\tdelete this._callbackMap[scriptSrc];\n\t\t\tfor (let i = 0; i < scriptCallbacks.length; i++) {\n\t\t\t\tscriptCallbacks[i].callback();\n\t\t\t}\n\t\t}\n\t\ttriggerErrorback(scriptSrc, err) {\n\t\t\tconst scriptCallbacks = this._callbackMap[scriptSrc];\n\t\t\tdelete this._callbackMap[scriptSrc];\n\t\t\tfor (let i = 0; i < scriptCallbacks.length; i++) {\n\t\t\t\tscriptCallbacks[i].errorback(err);\n\t\t\t}\n\t\t}\n\t}\n\tclass BrowserScriptLoader {\n\t\t/**\n\t\t * Attach load / error listeners to a script element and remove them when either one has fired.\n\t\t * Implemented for browsers supporting HTML5 standard 'load' and 'error' events.\n\t\t */\n\t\tattachListeners(script, callback, errorback) {\n\t\t\tconst unbind = () => {\n\t\t\t\tscript.removeEventListener(\"load\", loadEventListener);\n\t\t\t\tscript.removeEventListener(\"error\", errorEventListener);\n\t\t\t};\n\t\t\tconst loadEventListener = (e) => {\n\t\t\t\tunbind();\n\t\t\t\tcallback();\n\t\t\t};\n\t\t\tconst errorEventListener = (e) => {\n\t\t\t\tunbind();\n\t\t\t\terrorback(e);\n\t\t\t};\n\t\t\tscript.addEventListener(\"load\", loadEventListener);\n\t\t\tscript.addEventListener(\"error\", errorEventListener);\n\t\t}\n\t\tload(moduleManager, scriptSrc, callback, errorback) {\n\t\t\tif (/^node\\|/.test(scriptSrc)) {\n\t\t\t\tconst opts = moduleManager.getConfig().getOptionsLiteral();\n\t\t\t\tconst nodeRequire = ensureRecordedNodeRequire(\n\t\t\t\t\tmoduleManager.getRecorder(),\n\t\t\t\t\topts.nodeRequire || AMDLoader.global.nodeRequire,\n\t\t\t\t);\n\t\t\t\tconst pieces = scriptSrc.split(\"|\");\n\t\t\t\tlet moduleExports = null;\n\t\t\t\ttry {\n\t\t\t\t\tmoduleExports = nodeRequire(pieces[1]);\n\t\t\t\t} catch (err) {\n\t\t\t\t\terrorback(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tmoduleManager.enqueueDefineAnonymousModule(\n\t\t\t\t\t[],\n\t\t\t\t\t() => moduleExports,\n\t\t\t\t);\n\t\t\t\tcallback();\n\t\t\t} else {\n\t\t\t\tconst script = document.createElement(\"script\");\n\t\t\t\tscript.setAttribute(\"async\", \"async\");\n\t\t\t\tscript.setAttribute(\"type\", \"text/javascript\");\n\t\t\t\tthis.attachListeners(script, callback, errorback);\n\t\t\t\tconst { trustedTypesPolicy } = moduleManager\n\t\t\t\t\t.getConfig()\n\t\t\t\t\t.getOptionsLiteral();\n\t\t\t\tif (trustedTypesPolicy) {\n\t\t\t\t\tscriptSrc = trustedTypesPolicy.createScriptURL(scriptSrc);\n\t\t\t\t}\n\t\t\t\tscript.setAttribute(\"src\", scriptSrc);\n\t\t\t\t// Propagate CSP nonce to dynamically created script tag.\n\t\t\t\tconst { cspNonce } = moduleManager\n\t\t\t\t\t.getConfig()\n\t\t\t\t\t.getOptionsLiteral();\n\t\t\t\tif (cspNonce) {\n\t\t\t\t\tscript.setAttribute(\"nonce\", cspNonce);\n\t\t\t\t}\n\t\t\t\tdocument.getElementsByTagName(\"head\")[0].appendChild(script);\n\t\t\t}\n\t\t}\n\t}\n\tfunction canUseEval(moduleManager) {\n\t\tconst { trustedTypesPolicy } = moduleManager\n\t\t\t.getConfig()\n\t\t\t.getOptionsLiteral();\n\t\ttry {\n\t\t\tconst func = trustedTypesPolicy\n\t\t\t\t? self.eval(trustedTypesPolicy.createScript(\"\", \"true\")) // CodeQL [SM01632] the loader is responsible with loading code, fetch + eval is used on the web worker instead of importScripts if possible because importScripts is synchronous and we observed deadlocks on Safari\n\t\t\t\t: new Function(\"true\"); // CodeQL [SM01632] the loader is responsible with loading code, fetch + eval is used on the web worker instead of importScripts if possible because importScripts is synchronous and we observed deadlocks on Safari\n\t\t\tfunc.call(self);\n\t\t\treturn true;\n\t\t} catch (err) {\n\t\t\treturn false;\n\t\t}\n\t}\n\tclass WorkerScriptLoader {\n\t\tconstructor() {\n\t\t\tthis._cachedCanUseEval = null;\n\t\t}\n\t\t_canUseEval(moduleManager) {\n\t\t\tif (this._cachedCanUseEval === null) {\n\t\t\t\tthis._cachedCanUseEval = canUseEval(moduleManager);\n\t\t\t}\n\t\t\treturn this._cachedCanUseEval;\n\t\t}\n\t\tload(moduleManager, scriptSrc, callback, errorback) {\n\t\t\tif (/^node\\|/.test(scriptSrc)) {\n\t\t\t\tconst opts = moduleManager.getConfig().getOptionsLiteral();\n\t\t\t\tconst nodeRequire = ensureRecordedNodeRequire(\n\t\t\t\t\tmoduleManager.getRecorder(),\n\t\t\t\t\topts.nodeRequire || AMDLoader.global.nodeRequire,\n\t\t\t\t);\n\t\t\t\tconst pieces = scriptSrc.split(\"|\");\n\t\t\t\tlet moduleExports = null;\n\t\t\t\ttry {\n\t\t\t\t\tmoduleExports = nodeRequire(pieces[1]);\n\t\t\t\t} catch (err) {\n\t\t\t\t\terrorback(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tmoduleManager.enqueueDefineAnonymousModule(\n\t\t\t\t\t[],\n\t\t\t\t\t() => moduleExports,\n\t\t\t\t);\n\t\t\t\tcallback();\n\t\t\t} else {\n\t\t\t\tconst { trustedTypesPolicy } = moduleManager\n\t\t\t\t\t.getConfig()\n\t\t\t\t\t.getOptionsLiteral();\n\t\t\t\tconst isCrossOrigin =\n\t\t\t\t\t/^((http:)|(https:)|(file:))/.test(scriptSrc) &&\n\t\t\t\t\tscriptSrc.substring(0, self.origin.length) !== self.origin;\n\t\t\t\tif (!isCrossOrigin && this._canUseEval(moduleManager)) {\n\t\t\t\t\t// use `fetch` if possible because `importScripts`\n\t\t\t\t\t// is synchronous and can lead to deadlocks on Safari\n\t\t\t\t\tfetch(scriptSrc)\n\t\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t\tif (response.status !== 200) {\n\t\t\t\t\t\t\t\tthrow new Error(response.statusText);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn response.text();\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.then((text) => {\n\t\t\t\t\t\t\ttext = `${text}\\n//# sourceURL=${scriptSrc}`;\n\t\t\t\t\t\t\tconst func = trustedTypesPolicy\n\t\t\t\t\t\t\t\t? self.eval(\n\t\t\t\t\t\t\t\t\t\ttrustedTypesPolicy.createScript(\n\t\t\t\t\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t\t\t\t\ttext,\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t) // CodeQL [SM01632] the loader is responsible with loading code, fetch + eval is used on the web worker instead of importScripts if possible because importScripts is synchronous and we observed deadlocks on Safari\n\t\t\t\t\t\t\t\t: new Function(text); // CodeQL [SM01632] the loader is responsible with loading code, fetch + eval is used on the web worker instead of importScripts if possible because importScripts is synchronous and we observed deadlocks on Safari\n\t\t\t\t\t\t\tfunc.call(self);\n\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.then(undefined, errorback);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tif (trustedTypesPolicy) {\n\t\t\t\t\t\tscriptSrc =\n\t\t\t\t\t\t\ttrustedTypesPolicy.createScriptURL(scriptSrc);\n\t\t\t\t\t}\n\t\t\t\t\timportScripts(scriptSrc);\n\t\t\t\t\tcallback();\n\t\t\t\t} catch (e) {\n\t\t\t\t\terrorback(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tclass NodeScriptLoader {\n\t\tconstructor(env) {\n\t\t\tthis._env = env;\n\t\t\tthis._didInitialize = false;\n\t\t\tthis._didPatchNodeRequire = false;\n\t\t}\n\t\t_init(nodeRequire) {\n\t\t\tif (this._didInitialize) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._didInitialize = true;\n\t\t\t// capture node modules\n\t\t\tthis._fs = nodeRequire(\"fs\");\n\t\t\tthis._vm = nodeRequire(\"vm\");\n\t\t\tthis._path = nodeRequire(\"path\");\n\t\t\tthis._crypto = nodeRequire(\"crypto\");\n\t\t}\n\t\t// patch require-function of nodejs such that we can manually create a script\n\t\t// from cached data. this is done by overriding the `Module._compile` function\n\t\t_initNodeRequire(nodeRequire, moduleManager) {\n\t\t\t// It is important to check for `nodeCachedData` first and then set `_didPatchNodeRequire`.\n\t\t\t// That's because `nodeCachedData` is set _after_ calling this for the first time...\n\t\t\tconst { nodeCachedData } = moduleManager\n\t\t\t\t.getConfig()\n\t\t\t\t.getOptionsLiteral();\n\t\t\tif (!nodeCachedData) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this._didPatchNodeRequire) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._didPatchNodeRequire = true;\n\t\t\tconst that = this;\n\t\t\tconst Module = nodeRequire(\"module\");\n\t\t\tfunction makeRequireFunction(mod) {\n\t\t\t\tconst Module = mod.constructor;\n\t\t\t\tconst require = function require(path) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn mod.require(path);\n\t\t\t\t\t} finally {\n\t\t\t\t\t\t// nothing\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\trequire.resolve = function resolve(request, options) {\n\t\t\t\t\treturn Module._resolveFilename(\n\t\t\t\t\t\trequest,\n\t\t\t\t\t\tmod,\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\toptions,\n\t\t\t\t\t);\n\t\t\t\t};\n\t\t\t\trequire.resolve.paths = function paths(request) {\n\t\t\t\t\treturn Module._resolveLookupPaths(request, mod);\n\t\t\t\t};\n\t\t\t\trequire.main = process.mainModule;\n\t\t\t\trequire.extensions = Module._extensions;\n\t\t\t\trequire.cache = Module._cache;\n\t\t\t\treturn require;\n\t\t\t}\n\t\t\tModule.prototype._compile = function (content, filename) {\n\t\t\t\t// remove shebang and create wrapper function\n\t\t\t\tconst scriptSource = Module.wrap(content.replace(/^#!.*/, \"\"));\n\t\t\t\t// create script\n\t\t\t\tconst recorder = moduleManager.getRecorder();\n\t\t\t\tconst cachedDataPath = that._getCachedDataPath(\n\t\t\t\t\tnodeCachedData,\n\t\t\t\t\tfilename,\n\t\t\t\t);\n\t\t\t\tconst options = { filename };\n\t\t\t\tlet hashData;\n\t\t\t\ttry {\n\t\t\t\t\tconst data = that._fs.readFileSync(cachedDataPath);\n\t\t\t\t\thashData = data.slice(0, 16);\n\t\t\t\t\toptions.cachedData = data.slice(16);\n\t\t\t\t\trecorder.record(\n\t\t\t\t\t\t60 /* LoaderEventType.CachedDataFound */,\n\t\t\t\t\t\tcachedDataPath,\n\t\t\t\t\t);\n\t\t\t\t} catch (_e) {\n\t\t\t\t\trecorder.record(\n\t\t\t\t\t\t61 /* LoaderEventType.CachedDataMissed */,\n\t\t\t\t\t\tcachedDataPath,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tconst script = new that._vm.Script(scriptSource, options);\n\t\t\t\tconst compileWrapper = script.runInThisContext(options);\n\t\t\t\t// run script\n\t\t\t\tconst dirname = that._path.dirname(filename);\n\t\t\t\tconst require = makeRequireFunction(this);\n\t\t\t\tconst args = [\n\t\t\t\t\tthis.exports,\n\t\t\t\t\trequire,\n\t\t\t\t\tthis,\n\t\t\t\t\tfilename,\n\t\t\t\t\tdirname,\n\t\t\t\t\tprocess,\n\t\t\t\t\t_commonjsGlobal,\n\t\t\t\t\tBuffer,\n\t\t\t\t];\n\t\t\t\tconst result = compileWrapper.apply(this.exports, args);\n\t\t\t\t// cached data aftermath\n\t\t\t\tthat._handleCachedData(\n\t\t\t\t\tscript,\n\t\t\t\t\tscriptSource,\n\t\t\t\t\tcachedDataPath,\n\t\t\t\t\t!options.cachedData,\n\t\t\t\t\tmoduleManager,\n\t\t\t\t);\n\t\t\t\tthat._verifyCachedData(\n\t\t\t\t\tscript,\n\t\t\t\t\tscriptSource,\n\t\t\t\t\tcachedDataPath,\n\t\t\t\t\thashData,\n\t\t\t\t\tmoduleManager,\n\t\t\t\t);\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\tload(moduleManager, scriptSrc, callback, errorback) {\n\t\t\tconst opts = moduleManager.getConfig().getOptionsLiteral();\n\t\t\tconst nodeRequire = ensureRecordedNodeRequire(\n\t\t\t\tmoduleManager.getRecorder(),\n\t\t\t\topts.nodeRequire || AMDLoader.global.nodeRequire,\n\t\t\t);\n\t\t\tconst nodeInstrumenter = opts.nodeInstrumenter || ((c) => c);\n\t\t\tthis._init(nodeRequire);\n\t\t\tthis._initNodeRequire(nodeRequire, moduleManager);\n\t\t\tconst recorder = moduleManager.getRecorder();\n\t\t\tif (/^node\\|/.test(scriptSrc)) {\n\t\t\t\tconst pieces = scriptSrc.split(\"|\");\n\t\t\t\tlet moduleExports = null;\n\t\t\t\ttry {\n\t\t\t\t\tmoduleExports = nodeRequire(pieces[1]);\n\t\t\t\t} catch (err) {\n\t\t\t\t\terrorback(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tmoduleManager.enqueueDefineAnonymousModule(\n\t\t\t\t\t[],\n\t\t\t\t\t() => moduleExports,\n\t\t\t\t);\n\t\t\t\tcallback();\n\t\t\t} else {\n\t\t\t\tscriptSrc = AMDLoader.Utilities.fileUriToFilePath(\n\t\t\t\t\tthis._env.isWindows,\n\t\t\t\t\tscriptSrc,\n\t\t\t\t);\n\t\t\t\tconst normalizedScriptSrc = this._path.normalize(scriptSrc);\n\t\t\t\tconst vmScriptPathOrUri =\n\t\t\t\t\tthis._getElectronRendererScriptPathOrUri(\n\t\t\t\t\t\tnormalizedScriptSrc,\n\t\t\t\t\t);\n\t\t\t\tconst wantsCachedData = Boolean(opts.nodeCachedData);\n\t\t\t\tconst cachedDataPath = wantsCachedData\n\t\t\t\t\t? this._getCachedDataPath(opts.nodeCachedData, scriptSrc)\n\t\t\t\t\t: undefined;\n\t\t\t\tthis._readSourceAndCachedData(\n\t\t\t\t\tnormalizedScriptSrc,\n\t\t\t\t\tcachedDataPath,\n\t\t\t\t\trecorder,\n\t\t\t\t\t(err, data, cachedData, hashData) => {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\terrorback(err);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet scriptSource;\n\t\t\t\t\t\tif (data.charCodeAt(0) === NodeScriptLoader._BOM) {\n\t\t\t\t\t\t\tscriptSource =\n\t\t\t\t\t\t\t\tNodeScriptLoader._PREFIX +\n\t\t\t\t\t\t\t\tdata.substring(1) +\n\t\t\t\t\t\t\t\tNodeScriptLoader._SUFFIX;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscriptSource =\n\t\t\t\t\t\t\t\tNodeScriptLoader._PREFIX +\n\t\t\t\t\t\t\t\tdata +\n\t\t\t\t\t\t\t\tNodeScriptLoader._SUFFIX;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tscriptSource = nodeInstrumenter(\n\t\t\t\t\t\t\tscriptSource,\n\t\t\t\t\t\t\tnormalizedScriptSrc,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst scriptOpts = {\n\t\t\t\t\t\t\tfilename: vmScriptPathOrUri,\n\t\t\t\t\t\t\tcachedData,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tconst script = this._createAndEvalScript(\n\t\t\t\t\t\t\tmoduleManager,\n\t\t\t\t\t\t\tscriptSource,\n\t\t\t\t\t\t\tscriptOpts,\n\t\t\t\t\t\t\tcallback,\n\t\t\t\t\t\t\terrorback,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis._handleCachedData(\n\t\t\t\t\t\t\tscript,\n\t\t\t\t\t\t\tscriptSource,\n\t\t\t\t\t\t\tcachedDataPath,\n\t\t\t\t\t\t\twantsCachedData && !cachedData,\n\t\t\t\t\t\t\tmoduleManager,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis._verifyCachedData(\n\t\t\t\t\t\t\tscript,\n\t\t\t\t\t\t\tscriptSource,\n\t\t\t\t\t\t\tcachedDataPath,\n\t\t\t\t\t\t\thashData,\n\t\t\t\t\t\t\tmoduleManager,\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\t_createAndEvalScript(\n\t\t\tmoduleManager,\n\t\t\tcontents,\n\t\t\toptions,\n\t\t\tcallback,\n\t\t\terrorback,\n\t\t) {\n\t\t\tconst recorder = moduleManager.getRecorder();\n\t\t\trecorder.record(\n\t\t\t\t31 /* LoaderEventType.NodeBeginEvaluatingScript */,\n\t\t\t\toptions.filename,\n\t\t\t);\n\t\t\tconst script = new this._vm.Script(contents, options);\n\t\t\tconst ret = script.runInThisContext(options);\n\t\t\tconst globalDefineFunc = moduleManager.getGlobalAMDDefineFunc();\n\t\t\tlet receivedDefineCall = false;\n\t\t\tconst localDefineFunc = () => {\n\t\t\t\treceivedDefineCall = true;\n\t\t\t\treturn globalDefineFunc.apply(null, arguments);\n\t\t\t};\n\t\t\tlocalDefineFunc.amd = globalDefineFunc.amd;\n\t\t\tret.call(\n\t\t\t\tAMDLoader.global,\n\t\t\t\tmoduleManager.getGlobalAMDRequireFunc(),\n\t\t\t\tlocalDefineFunc,\n\t\t\t\toptions.filename,\n\t\t\t\tthis._path.dirname(options.filename),\n\t\t\t);\n\t\t\trecorder.record(\n\t\t\t\t32 /* LoaderEventType.NodeEndEvaluatingScript */,\n\t\t\t\toptions.filename,\n\t\t\t);\n\t\t\tif (receivedDefineCall) {\n\t\t\t\tcallback();\n\t\t\t} else {\n\t\t\t\terrorback(\n\t\t\t\t\tnew Error(\n\t\t\t\t\t\t`Didn't receive define call in ${options.filename}!`,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn script;\n\t\t}\n\t\t_getElectronRendererScriptPathOrUri(path) {\n\t\t\tif (!this._env.isElectronRenderer) {\n\t\t\t\treturn path;\n\t\t\t}\n\t\t\tconst driveLetterMatch = path.match(/^([a-z]):(.*)/i);\n\t\t\tif (driveLetterMatch) {\n\t\t\t\t// windows\n\t\t\t\treturn `file:///${(driveLetterMatch[1].toUpperCase() + \":\" + driveLetterMatch[2]).replace(/\\\\/g, \"/\")}`;\n\t\t\t} else {\n\t\t\t\t// nix\n\t\t\t\treturn `file://${path}`;\n\t\t\t}\n\t\t}\n\t\t_getCachedDataPath(config, filename) {\n\t\t\tconst hash = this._crypto\n\t\t\t\t.createHash(\"md5\")\n\t\t\t\t.update(filename, \"utf8\")\n\t\t\t\t.update(config.seed, \"utf8\")\n\t\t\t\t.update(process.arch, \"\")\n\t\t\t\t.digest(\"hex\");\n\t\t\tconst basename = this._path.basename(filename).replace(/\\.js$/, \"\");\n\t\t\treturn this._path.join(config.path, `${basename}-${hash}.code`);\n\t\t}\n\t\t_handleCachedData(\n\t\t\tscript,\n\t\t\tscriptSource,\n\t\t\tcachedDataPath,\n\t\t\tcreateCachedData,\n\t\t\tmoduleManager,\n\t\t) {\n\t\t\tif (script.cachedDataRejected) {\n\t\t\t\t// cached data got rejected -> delete and re-create\n\t\t\t\tthis._fs.unlink(cachedDataPath, (err) => {\n\t\t\t\t\tmoduleManager\n\t\t\t\t\t\t.getRecorder()\n\t\t\t\t\t\t.record(\n\t\t\t\t\t\t\t62 /* LoaderEventType.CachedDataRejected */,\n\t\t\t\t\t\t\tcachedDataPath,\n\t\t\t\t\t\t);\n\t\t\t\t\tthis._createAndWriteCachedData(\n\t\t\t\t\t\tscript,\n\t\t\t\t\t\tscriptSource,\n\t\t\t\t\t\tcachedDataPath,\n\t\t\t\t\t\tmoduleManager,\n\t\t\t\t\t);\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tmoduleManager.getConfig().onError(err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (createCachedData) {\n\t\t\t\t// no cached data, but wanted\n\t\t\t\tthis._createAndWriteCachedData(\n\t\t\t\t\tscript,\n\t\t\t\t\tscriptSource,\n\t\t\t\t\tcachedDataPath,\n\t\t\t\t\tmoduleManager,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\t// Cached data format: | SOURCE_HASH | V8_CACHED_DATA |\n\t\t// -SOURCE_HASH is the md5 hash of the JS source (always 16 bytes)\n\t\t// -V8_CACHED_DATA is what v8 produces\n\t\t_createAndWriteCachedData(\n\t\t\tscript,\n\t\t\tscriptSource,\n\t\t\tcachedDataPath,\n\t\t\tmoduleManager,\n\t\t) {\n\t\t\tconst timeout = Math.ceil(\n\t\t\t\tmoduleManager.getConfig().getOptionsLiteral().nodeCachedData\n\t\t\t\t\t.writeDelay *\n\t\t\t\t\t(1 + Math.random()),\n\t\t\t);\n\t\t\tlet lastSize = -1;\n\t\t\tlet iteration = 0;\n\t\t\tlet hashData;\n\t\t\tconst createLoop = () => {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tif (!hashData) {\n\t\t\t\t\t\thashData = this._crypto\n\t\t\t\t\t\t\t.createHash(\"md5\")\n\t\t\t\t\t\t\t.update(scriptSource, \"utf8\")\n\t\t\t\t\t\t\t.digest();\n\t\t\t\t\t}\n\t\t\t\t\tconst cachedData = script.createCachedData();\n\t\t\t\t\tif (\n\t\t\t\t\t\tcachedData.length === 0 ||\n\t\t\t\t\t\tcachedData.length === lastSize ||\n\t\t\t\t\t\titeration >= 5\n\t\t\t\t\t) {\n\t\t\t\t\t\t// done\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (cachedData.length < lastSize) {\n\t\t\t\t\t\t// less data than before: skip, try again next round\n\t\t\t\t\t\tcreateLoop();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tlastSize = cachedData.length;\n\t\t\t\t\tthis._fs.writeFile(\n\t\t\t\t\t\tcachedDataPath,\n\t\t\t\t\t\tBuffer.concat([hashData, cachedData]),\n\t\t\t\t\t\t(err) => {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\tmoduleManager.getConfig().onError(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmoduleManager\n\t\t\t\t\t\t\t\t.getRecorder()\n\t\t\t\t\t\t\t\t.record(\n\t\t\t\t\t\t\t\t\t63 /* LoaderEventType.CachedDataCreated */,\n\t\t\t\t\t\t\t\t\tcachedDataPath,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tcreateLoop();\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t}, timeout * Math.pow(4, iteration++));\n\t\t\t};\n\t\t\t// with some delay (`timeout`) create cached data\n\t\t\t// and repeat that (with backoff delay) until the\n\t\t\t// data seems to be not changing anymore\n\t\t\tcreateLoop();\n\t\t}\n\t\t_readSourceAndCachedData(\n\t\t\tsourcePath,\n\t\t\tcachedDataPath,\n\t\t\trecorder,\n\t\t\tcallback,\n\t\t) {\n\t\t\tif (cachedDataPath) {\n\t\t\t\t// cached data case: read both files in parallel\n\t\t\t\tlet source;\n\t\t\t\tlet cachedData;\n\t\t\t\tlet hashData;\n\t\t\t\tlet steps = 2;\n\t\t\t\tconst step = (err) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t} else if (--steps === 0) {\n\t\t\t\t\t\tcallback(undefined, source, cachedData, hashData);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tthis._fs.readFile(\n\t\t\t\t\tsourcePath,\n\t\t\t\t\t{ encoding: \"utf8\" },\n\t\t\t\t\t(err, data) => {\n\t\t\t\t\t\tsource = data;\n\t\t\t\t\t\tstep(err);\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t\tthis._fs.readFile(cachedDataPath, (err, data) => {\n\t\t\t\t\tif (!err && data && data.length > 0) {\n\t\t\t\t\t\thashData = data.slice(0, 16);\n\t\t\t\t\t\tcachedData = data.slice(16);\n\t\t\t\t\t\trecorder.record(\n\t\t\t\t\t\t\t60 /* LoaderEventType.CachedDataFound */,\n\t\t\t\t\t\t\tcachedDataPath,\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trecorder.record(\n\t\t\t\t\t\t\t61 /* LoaderEventType.CachedDataMissed */,\n\t\t\t\t\t\t\tcachedDataPath,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tstep(); // ignored: cached data is optional\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// no cached data case\n\t\t\t\tthis._fs.readFile(sourcePath, { encoding: \"utf8\" }, callback);\n\t\t\t}\n\t\t}\n\t\t_verifyCachedData(\n\t\t\tscript,\n\t\t\tscriptSource,\n\t\t\tcachedDataPath,\n\t\t\thashData,\n\t\t\tmoduleManager,\n\t\t) {\n\t\t\tif (!hashData) {\n\t\t\t\t// nothing to do\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (script.cachedDataRejected) {\n\t\t\t\t// invalid anyways\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsetTimeout(\n\t\t\t\t() => {\n\t\t\t\t\t// check source hash - the contract is that file paths change when file content\n\t\t\t\t\t// change (e.g use the commit or version id as cache path). this check is\n\t\t\t\t\t// for violations of this contract.\n\t\t\t\t\tconst hashDataNow = this._crypto\n\t\t\t\t\t\t.createHash(\"md5\")\n\t\t\t\t\t\t.update(scriptSource, \"utf8\")\n\t\t\t\t\t\t.digest();\n\t\t\t\t\tif (!hashData.equals(hashDataNow)) {\n\t\t\t\t\t\tmoduleManager\n\t\t\t\t\t\t\t.getConfig()\n\t\t\t\t\t\t\t.onError(\n\t\t\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\t\t`FAILED TO VERIFY CACHED DATA, deleting stale '${cachedDataPath}' now, but a RESTART IS REQUIRED`,\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tthis._fs.unlink(cachedDataPath, (err) => {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\tmoduleManager.getConfig().onError(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tMath.ceil(5000 * (1 + Math.random())),\n\t\t\t);\n\t\t}\n\t}\n\tNodeScriptLoader._BOM = 0xfeff;\n\tNodeScriptLoader._PREFIX =\n\t\t\"(function (require, define, __filename, __dirname) { \";\n\tNodeScriptLoader._SUFFIX = \"\\n});\";\n\tfunction ensureRecordedNodeRequire(recorder, _nodeRequire) {\n\t\tif (_nodeRequire.__$__isRecorded) {\n\t\t\t// it is already recorded\n\t\t\treturn _nodeRequire;\n\t\t}\n\t\tconst nodeRequire = function nodeRequire(what) {\n\t\t\trecorder.record(\n\t\t\t\t33 /* LoaderEventType.NodeBeginNativeRequire */,\n\t\t\t\twhat,\n\t\t\t);\n\t\t\ttry {\n\t\t\t\treturn _nodeRequire(what);\n\t\t\t} finally {\n\t\t\t\trecorder.record(\n\t\t\t\t\t34 /* LoaderEventType.NodeEndNativeRequire */,\n\t\t\t\t\twhat,\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\t\tnodeRequire.__$__isRecorded = true;\n\t\treturn nodeRequire;\n\t}\n\tAMDLoader.ensureRecordedNodeRequire = ensureRecordedNodeRequire;\n\tfunction createScriptLoader(env) {\n\t\treturn new OnlyOnceScriptLoader(env);\n\t}\n\tAMDLoader.createScriptLoader = createScriptLoader;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n((AMDLoader) => {\n\t// ------------------------------------------------------------------------\n\t// ModuleIdResolver\n\tclass ModuleIdResolver {\n\t\tconstructor(fromModuleId) {\n\t\t\tconst lastSlash = fromModuleId.lastIndexOf(\"/\");\n\t\t\tif (lastSlash !== -1) {\n\t\t\t\tthis.fromModulePath = fromModuleId.substr(0, lastSlash + 1);\n\t\t\t} else {\n\t\t\t\tthis.fromModulePath = \"\";\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Normalize 'a/../name' to 'name', etc.\n\t\t */\n\t\tstatic _normalizeModuleId(moduleId) {\n\t\t\tlet r = moduleId,\n\t\t\t\tpattern;\n\t\t\t// replace /./ => /\n\t\t\tpattern = /\\/\\.\\//;\n\t\t\twhile (pattern.test(r)) {\n\t\t\t\tr = r.replace(pattern, \"/\");\n\t\t\t}\n\t\t\t// replace ^./ => nothing\n\t\t\tr = r.replace(/^\\.\\//g, \"\");\n\t\t\t// replace /aa/../ => / (BUT IGNORE /../../)\n\t\t\tpattern =\n\t\t\t\t/\\/(([^/])|([^/][^/.])|([^/.][^/])|([^/][^/][^/]+))\\/\\.\\.\\//;\n\t\t\twhile (pattern.test(r)) {\n\t\t\t\tr = r.replace(pattern, \"/\");\n\t\t\t}\n\t\t\t// replace ^aa/../ => nothing (BUT IGNORE ../../)\n\t\t\tr = r.replace(\n\t\t\t\t/^(([^/])|([^/][^/.])|([^/.][^/])|([^/][^/][^/]+))\\/\\.\\.\\//,\n\t\t\t\t\"\",\n\t\t\t);\n\t\t\treturn r;\n\t\t}\n\t\t/**\n\t\t * Resolve relative module ids\n\t\t */\n\t\tresolveModule(moduleId) {\n\t\t\tlet result = moduleId;\n\t\t\tif (!AMDLoader.Utilities.isAbsolutePath(result)) {\n\t\t\t\tif (\n\t\t\t\t\tAMDLoader.Utilities.startsWith(result, \"./\") ||\n\t\t\t\t\tAMDLoader.Utilities.startsWith(result, \"../\")\n\t\t\t\t) {\n\t\t\t\t\tresult = ModuleIdResolver._normalizeModuleId(\n\t\t\t\t\t\tthis.fromModulePath + result,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\tModuleIdResolver.ROOT = new ModuleIdResolver(\"\");\n\tAMDLoader.ModuleIdResolver = ModuleIdResolver;\n\t// ------------------------------------------------------------------------\n\t// Module\n\tclass Module {\n\t\tconstructor(\n\t\t\tid,\n\t\t\tstrId,\n\t\t\tdependencies,\n\t\t\tcallback,\n\t\t\terrorback,\n\t\t\tmoduleIdResolver,\n\t\t) {\n\t\t\tthis.id = id;\n\t\t\tthis.strId = strId;\n\t\t\tthis.dependencies = dependencies;\n\t\t\tthis._callback = callback;\n\t\t\tthis._errorback = errorback;\n\t\t\tthis.moduleIdResolver = moduleIdResolver;\n\t\t\tthis.exports = {};\n\t\t\tthis.error = null;\n\t\t\tthis.exportsPassedIn = false;\n\t\t\tthis.unresolvedDependenciesCount = this.dependencies.length;\n\t\t\tthis._isComplete = false;\n\t\t}\n\t\tstatic _safeInvokeFunction(callback, args) {\n\t\t\ttry {\n\t\t\t\treturn {\n\t\t\t\t\treturnedValue: callback.apply(AMDLoader.global, args),\n\t\t\t\t\tproducedError: null,\n\t\t\t\t};\n\t\t\t} catch (e) {\n\t\t\t\treturn {\n\t\t\t\t\treturnedValue: null,\n\t\t\t\t\tproducedError: e,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tstatic _invokeFactory(\n\t\t\tconfig,\n\t\t\tstrModuleId,\n\t\t\tcallback,\n\t\t\tdependenciesValues,\n\t\t) {\n\t\t\tif (!config.shouldInvokeFactory(strModuleId)) {\n\t\t\t\treturn {\n\t\t\t\t\treturnedValue: null,\n\t\t\t\t\tproducedError: null,\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (config.shouldCatchError()) {\n\t\t\t\treturn this._safeInvokeFunction(callback, dependenciesValues);\n\t\t\t}\n\t\t\treturn {\n\t\t\t\treturnedValue: callback.apply(\n\t\t\t\t\tAMDLoader.global,\n\t\t\t\t\tdependenciesValues,\n\t\t\t\t),\n\t\t\t\tproducedError: null,\n\t\t\t};\n\t\t}\n\t\tcomplete(\n\t\t\trecorder,\n\t\t\tconfig,\n\t\t\tdependenciesValues,\n\t\t\tinversedependenciesProvider,\n\t\t) {\n\t\t\tthis._isComplete = true;\n\t\t\tlet producedError = null;\n\t\t\tif (this._callback) {\n\t\t\t\tif (typeof this._callback === \"function\") {\n\t\t\t\t\trecorder.record(\n\t\t\t\t\t\t21 /* LoaderEventType.BeginInvokeFactory */,\n\t\t\t\t\t\tthis.strId,\n\t\t\t\t\t);\n\t\t\t\t\tconst r = Module._invokeFactory(\n\t\t\t\t\t\tconfig,\n\t\t\t\t\t\tthis.strId,\n\t\t\t\t\t\tthis._callback,\n\t\t\t\t\t\tdependenciesValues,\n\t\t\t\t\t);\n\t\t\t\t\tproducedError = r.producedError;\n\t\t\t\t\trecorder.record(\n\t\t\t\t\t\t22 /* LoaderEventType.EndInvokeFactory */,\n\t\t\t\t\t\tthis.strId,\n\t\t\t\t\t);\n\t\t\t\t\tif (\n\t\t\t\t\t\t!producedError &&\n\t\t\t\t\t\ttypeof r.returnedValue !== \"undefined\" &&\n\t\t\t\t\t\t(!this.exportsPassedIn ||\n\t\t\t\t\t\t\tAMDLoader.Utilities.isEmpty(this.exports))\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.exports = r.returnedValue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.exports = this._callback;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (producedError) {\n\t\t\t\tconst err = AMDLoader.ensureError(producedError);\n\t\t\t\terr.phase = \"factory\";\n\t\t\t\terr.moduleId = this.strId;\n\t\t\t\terr.neededBy = inversedependenciesProvider(this.id);\n\t\t\t\tthis.error = err;\n\t\t\t\tconfig.onError(err);\n\t\t\t}\n\t\t\tthis.dependencies = null;\n\t\t\tthis._callback = null;\n\t\t\tthis._errorback = null;\n\t\t\tthis.moduleIdResolver = null;\n\t\t}\n\t\t/**\n\t\t * One of the direct dependencies or a transitive dependency has failed to load.\n\t\t */\n\t\tonDependencyError(err) {\n\t\t\tthis._isComplete = true;\n\t\t\tthis.error = err;\n\t\t\tif (this._errorback) {\n\t\t\t\tthis._errorback(err);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\t/**\n\t\t * Is the current module complete?\n\t\t */\n\t\tisComplete() {\n\t\t\treturn this._isComplete;\n\t\t}\n\t}\n\tAMDLoader.Module = Module;\n\tclass ModuleIdProvider {\n\t\tconstructor() {\n\t\t\tthis._nextId = 0;\n\t\t\tthis._strModuleIdToIntModuleId = new Map();\n\t\t\tthis._intModuleIdToStrModuleId = [];\n\t\t\t// Ensure values 0, 1, 2 are assigned accordingly with ModuleId\n\t\t\tthis.getModuleId(\"exports\");\n\t\t\tthis.getModuleId(\"module\");\n\t\t\tthis.getModuleId(\"require\");\n\t\t}\n\t\tgetMaxModuleId() {\n\t\t\treturn this._nextId;\n\t\t}\n\t\tgetModuleId(strModuleId) {\n\t\t\tlet id = this._strModuleIdToIntModuleId.get(strModuleId);\n\t\t\tif (typeof id === \"undefined\") {\n\t\t\t\tid = this._nextId++;\n\t\t\t\tthis._strModuleIdToIntModuleId.set(strModuleId, id);\n\t\t\t\tthis._intModuleIdToStrModuleId[id] = strModuleId;\n\t\t\t}\n\t\t\treturn id;\n\t\t}\n\t\tgetStrModuleId(moduleId) {\n\t\t\treturn this._intModuleIdToStrModuleId[moduleId];\n\t\t}\n\t}\n\tclass RegularDependency {\n\t\tconstructor(id) {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\tRegularDependency.EXPORTS = new RegularDependency(0 /* ModuleId.EXPORTS */);\n\tRegularDependency.MODULE = new RegularDependency(1 /* ModuleId.MODULE */);\n\tRegularDependency.REQUIRE = new RegularDependency(2 /* ModuleId.REQUIRE */);\n\tAMDLoader.RegularDependency = RegularDependency;\n\tclass PluginDependency {\n\t\tconstructor(id, pluginId, pluginParam) {\n\t\t\tthis.id = id;\n\t\t\tthis.pluginId = pluginId;\n\t\t\tthis.pluginParam = pluginParam;\n\t\t}\n\t}\n\tAMDLoader.PluginDependency = PluginDependency;\n\tclass ModuleManager {\n\t\tconstructor(\n\t\t\tenv,\n\t\t\tscriptLoader,\n\t\t\tdefineFunc,\n\t\t\trequireFunc,\n\t\t\tloaderAvailableTimestamp = 0,\n\t\t) {\n\t\t\tthis._env = env;\n\t\t\tthis._scriptLoader = scriptLoader;\n\t\t\tthis._loaderAvailableTimestamp = loaderAvailableTimestamp;\n\t\t\tthis._defineFunc = defineFunc;\n\t\t\tthis._requireFunc = requireFunc;\n\t\t\tthis._moduleIdProvider = new ModuleIdProvider();\n\t\t\tthis._config = new AMDLoader.Configuration(this._env);\n\t\t\tthis._hasDependencyCycle = false;\n\t\t\tthis._modules2 = [];\n\t\t\tthis._knownModules2 = [];\n\t\t\tthis._inverseDependencies2 = [];\n\t\t\tthis._inversePluginDependencies2 = new Map();\n\t\t\tthis._currentAnonymousDefineCall = null;\n\t\t\tthis._recorder = null;\n\t\t\tthis._buildInfoPath = [];\n\t\t\tthis._buildInfoDefineStack = [];\n\t\t\tthis._buildInfoDependencies = [];\n\t\t\tthis._requireFunc.moduleManager = this;\n\t\t}\n\t\treset() {\n\t\t\treturn new ModuleManager(\n\t\t\t\tthis._env,\n\t\t\t\tthis._scriptLoader,\n\t\t\t\tthis._defineFunc,\n\t\t\t\tthis._requireFunc,\n\t\t\t\tthis._loaderAvailableTimestamp,\n\t\t\t);\n\t\t}\n\t\tgetGlobalAMDDefineFunc() {\n\t\t\treturn this._defineFunc;\n\t\t}\n\t\tgetGlobalAMDRequireFunc() {\n\t\t\treturn this._requireFunc;\n\t\t}\n\t\tstatic _findRelevantLocationInStack(needle, stack) {\n\t\t\tconst normalize = (str) => str.replace(/\\\\/g, \"/\");\n\t\t\tconst normalizedPath = normalize(needle);\n\t\t\tconst stackPieces = stack.split(/\\n/);\n\t\t\tfor (let i = 0; i < stackPieces.length; i++) {\n\t\t\t\tconst m = stackPieces[i].match(/(.*):(\\d+):(\\d+)\\)?$/);\n\t\t\t\tif (m) {\n\t\t\t\t\tlet stackPath = m[1];\n\t\t\t\t\tconst stackLine = m[2];\n\t\t\t\t\tconst stackColumn = m[3];\n\t\t\t\t\tconst trimPathOffset = Math.max(\n\t\t\t\t\t\tstackPath.lastIndexOf(\" \") + 1,\n\t\t\t\t\t\tstackPath.lastIndexOf(\"(\") + 1,\n\t\t\t\t\t);\n\t\t\t\t\tstackPath = stackPath.substr(trimPathOffset);\n\t\t\t\t\tstackPath = normalize(stackPath);\n\t\t\t\t\tif (stackPath === normalizedPath) {\n\t\t\t\t\t\tconst r = {\n\t\t\t\t\t\t\tline: Number.parseInt(stackLine, 10),\n\t\t\t\t\t\t\tcol: Number.parseInt(stackColumn, 10),\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (r.line === 1) {\n\t\t\t\t\t\t\tr.col -=\n\t\t\t\t\t\t\t\t\"(function (require, define, __filename, __dirname) { \".length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn r;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t\"Could not correlate define call site for needle \" + needle,\n\t\t\t);\n\t\t}\n\t\tgetBuildInfo() {\n\t\t\tif (!this._config.isBuild()) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tlet result = [],\n\t\t\t\tresultLen = 0;\n\t\t\tfor (let i = 0, len = this._modules2.length; i < len; i++) {\n\t\t\t\tconst m = this._modules2[i];\n\t\t\t\tif (!m) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst location = this._buildInfoPath[m.id] || null;\n\t\t\t\tconst defineStack = this._buildInfoDefineStack[m.id] || null;\n\t\t\t\tconst dependencies = this._buildInfoDependencies[m.id];\n\t\t\t\tresult[resultLen++] = {\n\t\t\t\t\tid: m.strId,\n\t\t\t\t\tpath: location,\n\t\t\t\t\tdefineLocation:\n\t\t\t\t\t\tlocation && defineStack\n\t\t\t\t\t\t\t? ModuleManager._findRelevantLocationInStack(\n\t\t\t\t\t\t\t\t\tlocation,\n\t\t\t\t\t\t\t\t\tdefineStack,\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: null,\n\t\t\t\t\tdependencies: dependencies,\n\t\t\t\t\tshim: null,\n\t\t\t\t\texports: m.exports,\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\tgetRecorder() {\n\t\t\tif (!this._recorder) {\n\t\t\t\tif (this._config.shouldRecordStats()) {\n\t\t\t\t\tthis._recorder = new AMDLoader.LoaderEventRecorder(\n\t\t\t\t\t\tthis._loaderAvailableTimestamp,\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tthis._recorder = AMDLoader.NullLoaderEventRecorder.INSTANCE;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._recorder;\n\t\t}\n\t\tgetLoaderEvents() {\n\t\t\treturn this.getRecorder().getEvents();\n\t\t}\n\t\t/**\n\t\t * Defines an anonymous module (without an id). Its name will be resolved as we receive a callback from the scriptLoader.\n\t\t * @param dependencies @see defineModule\n\t\t * @param callback @see defineModule\n\t\t */\n\t\tenqueueDefineAnonymousModule(dependencies, callback) {\n\t\t\tif (this._currentAnonymousDefineCall !== null) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\"Can only have one anonymous define call per script file\",\n\t\t\t\t);\n\t\t\t}\n\t\t\tlet stack = null;\n\t\t\tif (this._config.isBuild()) {\n\t\t\t\tstack = new Error(\"StackLocation\").stack || null;\n\t\t\t}\n\t\t\tthis._currentAnonymousDefineCall = {\n\t\t\t\tstack: stack,\n\t\t\t\tdependencies: dependencies,\n\t\t\t\tcallback: callback,\n\t\t\t};\n\t\t}\n\t\t/**\n\t\t * Creates a module and stores it in _modules. The manager will immediately begin resolving its dependencies.\n\t\t * @param strModuleId An unique and absolute id of the module. This must not collide with another module's id\n\t\t * @param dependencies An array with the dependencies of the module. Special keys are: \"require\", \"exports\" and \"module\"\n\t\t * @param callback if callback is a function, it will be called with the resolved dependencies. if callback is an object, it will be considered as the exports of the module.\n\t\t */\n\t\tdefineModule(\n\t\t\tstrModuleId,\n\t\t\tdependencies,\n\t\t\tcallback,\n\t\t\terrorback,\n\t\t\tstack,\n\t\t\tmoduleIdResolver = new ModuleIdResolver(strModuleId),\n\t\t) {\n\t\t\tconst moduleId = this._moduleIdProvider.getModuleId(strModuleId);\n\t\t\tif (this._modules2[moduleId]) {\n\t\t\t\tif (!this._config.isDuplicateMessageIgnoredFor(strModuleId)) {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\"Duplicate definition of module '\" + strModuleId + \"'\",\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t// Super important! Completely ignore duplicate module definition\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst m = new Module(\n\t\t\t\tmoduleId,\n\t\t\t\tstrModuleId,\n\t\t\t\tthis._normalizeDependencies(dependencies, moduleIdResolver),\n\t\t\t\tcallback,\n\t\t\t\terrorback,\n\t\t\t\tmoduleIdResolver,\n\t\t\t);\n\t\t\tthis._modules2[moduleId] = m;\n\t\t\tif (this._config.isBuild()) {\n\t\t\t\tthis._buildInfoDefineStack[moduleId] = stack;\n\t\t\t\tthis._buildInfoDependencies[moduleId] = (\n\t\t\t\t\tm.dependencies || []\n\t\t\t\t).map((dep) => this._moduleIdProvider.getStrModuleId(dep.id));\n\t\t\t}\n\t\t\t// Resolving of dependencies is immediate (not in a timeout). If there's a need to support a packer that concatenates in an\n\t\t\t// unordered manner, in order to finish processing the file, execute the following method in a timeout\n\t\t\tthis._resolve(m);\n\t\t}\n\t\t_normalizeDependency(dependency, moduleIdResolver) {\n\t\t\tif (dependency === \"exports\") {\n\t\t\t\treturn RegularDependency.EXPORTS;\n\t\t\t}\n\t\t\tif (dependency === \"module\") {\n\t\t\t\treturn RegularDependency.MODULE;\n\t\t\t}\n\t\t\tif (dependency === \"require\") {\n\t\t\t\treturn RegularDependency.REQUIRE;\n\t\t\t}\n\t\t\t// Normalize dependency and then request it from the manager\n\t\t\tconst bangIndex = dependency.indexOf(\"!\");\n\t\t\tif (bangIndex >= 0) {\n\t\t\t\tconst strPluginId = moduleIdResolver.resolveModule(\n\t\t\t\t\tdependency.substr(0, bangIndex),\n\t\t\t\t);\n\t\t\t\tconst pluginParam = moduleIdResolver.resolveModule(\n\t\t\t\t\tdependency.substr(bangIndex + 1),\n\t\t\t\t);\n\t\t\t\tconst dependencyId = this._moduleIdProvider.getModuleId(\n\t\t\t\t\tstrPluginId + \"!\" + pluginParam,\n\t\t\t\t);\n\t\t\t\tconst pluginId =\n\t\t\t\t\tthis._moduleIdProvider.getModuleId(strPluginId);\n\t\t\t\treturn new PluginDependency(\n\t\t\t\t\tdependencyId,\n\t\t\t\t\tpluginId,\n\t\t\t\t\tpluginParam,\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn new RegularDependency(\n\t\t\t\tthis._moduleIdProvider.getModuleId(\n\t\t\t\t\tmoduleIdResolver.resolveModule(dependency),\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t\t_normalizeDependencies(dependencies, moduleIdResolver) {\n\t\t\tlet result = [],\n\t\t\t\tresultLen = 0;\n\t\t\tfor (let i = 0, len = dependencies.length; i < len; i++) {\n\t\t\t\tresult[resultLen++] = this._normalizeDependency(\n\t\t\t\t\tdependencies[i],\n\t\t\t\t\tmoduleIdResolver,\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\t_relativeRequire(moduleIdResolver, dependencies, callback, errorback) {\n\t\t\tif (typeof dependencies === \"string\") {\n\t\t\t\treturn this.synchronousRequire(dependencies, moduleIdResolver);\n\t\t\t}\n\t\t\tthis.defineModule(\n\t\t\t\tAMDLoader.Utilities.generateAnonymousModule(),\n\t\t\t\tdependencies,\n\t\t\t\tcallback,\n\t\t\t\terrorback,\n\t\t\t\tnull,\n\t\t\t\tmoduleIdResolver,\n\t\t\t);\n\t\t}\n\t\t/**\n\t\t * Require synchronously a module by its absolute id. If the module is not loaded, an exception will be thrown.\n\t\t * @param id The unique and absolute id of the required module\n\t\t * @return The exports of module 'id'\n\t\t */\n\t\tsynchronousRequire(\n\t\t\t_strModuleId,\n\t\t\tmoduleIdResolver = new ModuleIdResolver(_strModuleId),\n\t\t) {\n\t\t\tconst dependency = this._normalizeDependency(\n\t\t\t\t_strModuleId,\n\t\t\t\tmoduleIdResolver,\n\t\t\t);\n\t\t\tconst m = this._modules2[dependency.id];\n\t\t\tif (!m) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\"Check dependency list! Synchronous require cannot resolve module '\" +\n\t\t\t\t\t\t_strModuleId +\n\t\t\t\t\t\t\"'. This is the first mention of this module!\",\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (!m.isComplete()) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\"Check dependency list! Synchronous require cannot resolve module '\" +\n\t\t\t\t\t\t_strModuleId +\n\t\t\t\t\t\t\"'. This module has not been resolved completely yet.\",\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (m.error) {\n\t\t\t\tthrow m.error;\n\t\t\t}\n\t\t\treturn m.exports;\n\t\t}\n\t\tconfigure(params, shouldOverwrite) {\n\t\t\tconst oldShouldRecordStats = this._config.shouldRecordStats();\n\t\t\tif (shouldOverwrite) {\n\t\t\t\tthis._config = new AMDLoader.Configuration(this._env, params);\n\t\t\t} else {\n\t\t\t\tthis._config = this._config.cloneAndMerge(params);\n\t\t\t}\n\t\t\tif (this._config.shouldRecordStats() && !oldShouldRecordStats) {\n\t\t\t\tthis._recorder = null;\n\t\t\t}\n\t\t}\n\t\tgetConfig() {\n\t\t\treturn this._config;\n\t\t}\n\t\t/**\n\t\t * Callback from the scriptLoader when a module has been loaded.\n\t\t * This means its code is available and has been executed.\n\t\t */\n\t\t_onLoad(moduleId) {\n\t\t\tif (this._currentAnonymousDefineCall !== null) {\n\t\t\t\tconst defineCall = this._currentAnonymousDefineCall;\n\t\t\t\tthis._currentAnonymousDefineCall = null;\n\t\t\t\t// Hit an anonymous define call\n\t\t\t\tthis.defineModule(\n\t\t\t\t\tthis._moduleIdProvider.getStrModuleId(moduleId),\n\t\t\t\t\tdefineCall.dependencies,\n\t\t\t\t\tdefineCall.callback,\n\t\t\t\t\tnull,\n\t\t\t\t\tdefineCall.stack,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\t_createLoadError(moduleId, _err) {\n\t\t\tconst strModuleId = this._moduleIdProvider.getStrModuleId(moduleId);\n\t\t\tconst neededBy = (this._inverseDependencies2[moduleId] || []).map(\n\t\t\t\t(intModuleId) =>\n\t\t\t\t\tthis._moduleIdProvider.getStrModuleId(intModuleId),\n\t\t\t);\n\t\t\tconst err = AMDLoader.ensureError(_err);\n\t\t\terr.phase = \"loading\";\n\t\t\terr.moduleId = strModuleId;\n\t\t\terr.neededBy = neededBy;\n\t\t\treturn err;\n\t\t}\n\t\t/**\n\t\t * Callback from the scriptLoader when a module hasn't been loaded.\n\t\t * This means that the script was not found (e.g. 404) or there was an error in the script.\n\t\t */\n\t\t_onLoadError(moduleId, err) {\n\t\t\tconst error = this._createLoadError(moduleId, err);\n\t\t\tif (!this._modules2[moduleId]) {\n\t\t\t\tthis._modules2[moduleId] = new Module(\n\t\t\t\t\tmoduleId,\n\t\t\t\t\tthis._moduleIdProvider.getStrModuleId(moduleId),\n\t\t\t\t\t[],\n\t\t\t\t\t() => {},\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t);\n\t\t\t}\n\t\t\t// Find any 'local' error handlers, walk the entire chain of inverse dependencies if necessary.\n\t\t\tconst seenModuleId = [];\n\t\t\tfor (\n\t\t\t\tlet i = 0, len = this._moduleIdProvider.getMaxModuleId();\n\t\t\t\ti < len;\n\t\t\t\ti++\n\t\t\t) {\n\t\t\t\tseenModuleId[i] = false;\n\t\t\t}\n\t\t\tlet someoneNotified = false;\n\t\t\tconst queue = [];\n\t\t\tqueue.push(moduleId);\n\t\t\tseenModuleId[moduleId] = true;\n\t\t\twhile (queue.length > 0) {\n\t\t\t\tconst queueElement = queue.shift();\n\t\t\t\tconst m = this._modules2[queueElement];\n\t\t\t\tif (m) {\n\t\t\t\t\tsomeoneNotified =\n\t\t\t\t\t\tm.onDependencyError(error) || someoneNotified;\n\t\t\t\t}\n\t\t\t\tconst inverseDeps = this._inverseDependencies2[queueElement];\n\t\t\t\tif (inverseDeps) {\n\t\t\t\t\tfor (let i = 0, len = inverseDeps.length; i < len; i++) {\n\t\t\t\t\t\tconst inverseDep = inverseDeps[i];\n\t\t\t\t\t\tif (!seenModuleId[inverseDep]) {\n\t\t\t\t\t\t\tqueue.push(inverseDep);\n\t\t\t\t\t\t\tseenModuleId[inverseDep] = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!someoneNotified) {\n\t\t\t\tthis._config.onError(error);\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Walks (recursively) the dependencies of 'from' in search of 'to'.\n\t\t * Returns true if there is such a path or false otherwise.\n\t\t * @param from Module id to start at\n\t\t * @param to Module id to look for\n\t\t */\n\t\t_hasDependencyPath(fromId, toId) {\n\t\t\tconst from = this._modules2[fromId];\n\t\t\tif (!from) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst inQueue = [];\n\t\t\tfor (\n\t\t\t\tlet i = 0, len = this._moduleIdProvider.getMaxModuleId();\n\t\t\t\ti < len;\n\t\t\t\ti++\n\t\t\t) {\n\t\t\t\tinQueue[i] = false;\n\t\t\t}\n\t\t\tconst queue = [];\n\t\t\t// Insert 'from' in queue\n\t\t\tqueue.push(from);\n\t\t\tinQueue[fromId] = true;\n\t\t\twhile (queue.length > 0) {\n\t\t\t\t// Pop first inserted element of queue\n\t\t\t\tconst element = queue.shift();\n\t\t\t\tconst dependencies = element.dependencies;\n\t\t\t\tif (dependencies) {\n\t\t\t\t\t// Walk the element's dependencies\n\t\t\t\t\tfor (let i = 0, len = dependencies.length; i < len; i++) {\n\t\t\t\t\t\tconst dependency = dependencies[i];\n\t\t\t\t\t\tif (dependency.id === toId) {\n\t\t\t\t\t\t\t// There is a path to 'to'\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst dependencyModule = this._modules2[dependency.id];\n\t\t\t\t\t\tif (dependencyModule && !inQueue[dependency.id]) {\n\t\t\t\t\t\t\t// Insert 'dependency' in queue\n\t\t\t\t\t\t\tinQueue[dependency.id] = true;\n\t\t\t\t\t\t\tqueue.push(dependencyModule);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// There is no path to 'to'\n\t\t\treturn false;\n\t\t}\n\t\t/**\n\t\t * Walks (recursively) the dependencies of 'from' in search of 'to'.\n\t\t * Returns cycle as array.\n\t\t * @param from Module id to start at\n\t\t * @param to Module id to look for\n\t\t */\n\t\t_findCyclePath(fromId, toId, depth) {\n\t\t\tif (fromId === toId || depth === 50) {\n\t\t\t\treturn [fromId];\n\t\t\t}\n\t\t\tconst from = this._modules2[fromId];\n\t\t\tif (!from) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t// Walk the element's dependencies\n\t\t\tconst dependencies = from.dependencies;\n\t\t\tif (dependencies) {\n\t\t\t\tfor (let i = 0, len = dependencies.length; i < len; i++) {\n\t\t\t\t\tconst path = this._findCyclePath(\n\t\t\t\t\t\tdependencies[i].id,\n\t\t\t\t\t\ttoId,\n\t\t\t\t\t\tdepth + 1,\n\t\t\t\t\t);\n\t\t\t\t\tif (path !== null) {\n\t\t\t\t\t\tpath.push(fromId);\n\t\t\t\t\t\treturn path;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\t/**\n\t\t * Create the local 'require' that is passed into modules\n\t\t */\n\t\t_createRequire(moduleIdResolver) {\n\t\t\tconst result = (dependencies, callback, errorback) => {\n\t\t\t\treturn this._relativeRequire(\n\t\t\t\t\tmoduleIdResolver,\n\t\t\t\t\tdependencies,\n\t\t\t\t\tcallback,\n\t\t\t\t\terrorback,\n\t\t\t\t);\n\t\t\t};\n\t\t\tresult.toUrl = (id) => {\n\t\t\t\treturn this._config.requireToUrl(\n\t\t\t\t\tmoduleIdResolver.resolveModule(id),\n\t\t\t\t);\n\t\t\t};\n\t\t\tresult.getStats = () => {\n\t\t\t\treturn this.getLoaderEvents();\n\t\t\t};\n\t\t\tresult.hasDependencyCycle = () => {\n\t\t\t\treturn this._hasDependencyCycle;\n\t\t\t};\n\t\t\tresult.config = (params, shouldOverwrite = false) => {\n\t\t\t\tthis.configure(params, shouldOverwrite);\n\t\t\t};\n\t\t\tresult.__$__nodeRequire = AMDLoader.global.nodeRequire;\n\t\t\treturn result;\n\t\t}\n\t\t_loadModule(moduleId) {\n\t\t\tif (this._modules2[moduleId] || this._knownModules2[moduleId]) {\n\t\t\t\t// known module\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._knownModules2[moduleId] = true;\n\t\t\tconst strModuleId = this._moduleIdProvider.getStrModuleId(moduleId);\n\t\t\tconst paths = this._config.moduleIdToPaths(strModuleId);\n\t\t\tconst scopedPackageRegex = /^@[^/]+\\/[^/]+$/; // matches @scope/package-name\n\t\t\tif (\n\t\t\t\tthis._env.isNode &&\n\t\t\t\t(strModuleId.indexOf(\"/\") === -1 ||\n\t\t\t\t\tscopedPackageRegex.test(strModuleId))\n\t\t\t) {\n\t\t\t\tpaths.push(\"node|\" + strModuleId);\n\t\t\t}\n\t\t\tlet lastPathIndex = -1;\n\t\t\tconst loadNextPath = (err) => {\n\t\t\t\tlastPathIndex++;\n\t\t\t\tif (lastPathIndex >= paths.length) {\n\t\t\t\t\t// No more paths to try\n\t\t\t\t\tthis._onLoadError(moduleId, err);\n\t\t\t\t} else {\n\t\t\t\t\tconst currentPath = paths[lastPathIndex];\n\t\t\t\t\tconst recorder = this.getRecorder();\n\t\t\t\t\tif (this._config.isBuild() && currentPath === \"empty:\") {\n\t\t\t\t\t\tthis._buildInfoPath[moduleId] = currentPath;\n\t\t\t\t\t\tthis.defineModule(\n\t\t\t\t\t\t\tthis._moduleIdProvider.getStrModuleId(moduleId),\n\t\t\t\t\t\t\t[],\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis._onLoad(moduleId);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\trecorder.record(\n\t\t\t\t\t\t10 /* LoaderEventType.BeginLoadingScript */,\n\t\t\t\t\t\tcurrentPath,\n\t\t\t\t\t);\n\t\t\t\t\tthis._scriptLoader.load(\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\tcurrentPath,\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tif (this._config.isBuild()) {\n\t\t\t\t\t\t\t\tthis._buildInfoPath[moduleId] = currentPath;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trecorder.record(\n\t\t\t\t\t\t\t\t11 /* LoaderEventType.EndLoadingScriptOK */,\n\t\t\t\t\t\t\t\tcurrentPath,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tthis._onLoad(moduleId);\n\t\t\t\t\t\t},\n\t\t\t\t\t\t(err) => {\n\t\t\t\t\t\t\trecorder.record(\n\t\t\t\t\t\t\t\t12 /* LoaderEventType.EndLoadingScriptError */,\n\t\t\t\t\t\t\t\tcurrentPath,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tloadNextPath(err);\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t};\n\t\t\tloadNextPath(null);\n\t\t}\n\t\t/**\n\t\t * Resolve a plugin dependency with the plugin loaded & complete\n\t\t * @param module The module that has this dependency\n\t\t * @param pluginDependency The semi-normalized dependency that appears in the module. e.g. 'vs/css!./mycssfile'. Only the plugin part (before !) is normalized\n\t\t * @param plugin The plugin (what the plugin exports)\n\t\t */\n\t\t_loadPluginDependency(plugin, pluginDependency) {\n\t\t\tif (\n\t\t\t\tthis._modules2[pluginDependency.id] ||\n\t\t\t\tthis._knownModules2[pluginDependency.id]\n\t\t\t) {\n\t\t\t\t// known module\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._knownModules2[pluginDependency.id] = true;\n\t\t\t// Delegate the loading of the resource to the plugin\n\t\t\tconst load = (value) => {\n\t\t\t\tthis.defineModule(\n\t\t\t\t\tthis._moduleIdProvider.getStrModuleId(pluginDependency.id),\n\t\t\t\t\t[],\n\t\t\t\t\tvalue,\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t);\n\t\t\t};\n\t\t\tload.error = (err) => {\n\t\t\t\tthis._config.onError(\n\t\t\t\t\tthis._createLoadError(pluginDependency.id, err),\n\t\t\t\t);\n\t\t\t};\n\t\t\tplugin.load(\n\t\t\t\tpluginDependency.pluginParam,\n\t\t\t\tthis._createRequire(ModuleIdResolver.ROOT),\n\t\t\t\tload,\n\t\t\t\tthis._config.getOptionsLiteral(),\n\t\t\t);\n\t\t}\n\t\t/**\n\t\t * Examine the dependencies of module 'module' and resolve them as needed.\n\t\t */\n\t\t_resolve(module) {\n\t\t\tconst dependencies = module.dependencies;\n\t\t\tif (dependencies) {\n\t\t\t\tfor (let i = 0, len = dependencies.length; i < len; i++) {\n\t\t\t\t\tconst dependency = dependencies[i];\n\t\t\t\t\tif (dependency === RegularDependency.EXPORTS) {\n\t\t\t\t\t\tmodule.exportsPassedIn = true;\n\t\t\t\t\t\tmodule.unresolvedDependenciesCount--;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (dependency === RegularDependency.MODULE) {\n\t\t\t\t\t\tmodule.unresolvedDependenciesCount--;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (dependency === RegularDependency.REQUIRE) {\n\t\t\t\t\t\tmodule.unresolvedDependenciesCount--;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tconst dependencyModule = this._modules2[dependency.id];\n\t\t\t\t\tif (dependencyModule && dependencyModule.isComplete()) {\n\t\t\t\t\t\tif (dependencyModule.error) {\n\t\t\t\t\t\t\tmodule.onDependencyError(dependencyModule.error);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmodule.unresolvedDependenciesCount--;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (this._hasDependencyPath(dependency.id, module.id)) {\n\t\t\t\t\t\tthis._hasDependencyCycle = true;\n\t\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\t\"There is a dependency cycle between '\" +\n\t\t\t\t\t\t\t\tthis._moduleIdProvider.getStrModuleId(\n\t\t\t\t\t\t\t\t\tdependency.id,\n\t\t\t\t\t\t\t\t) +\n\t\t\t\t\t\t\t\t\"' and '\" +\n\t\t\t\t\t\t\t\tthis._moduleIdProvider.getStrModuleId(\n\t\t\t\t\t\t\t\t\tmodule.id,\n\t\t\t\t\t\t\t\t) +\n\t\t\t\t\t\t\t\t\"'. The cyclic path follows:\",\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst cyclePath =\n\t\t\t\t\t\t\tthis._findCyclePath(dependency.id, module.id, 0) ||\n\t\t\t\t\t\t\t[];\n\t\t\t\t\t\tcyclePath.reverse();\n\t\t\t\t\t\tcyclePath.push(dependency.id);\n\t\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\tcyclePath\n\t\t\t\t\t\t\t\t.map((id) =>\n\t\t\t\t\t\t\t\t\tthis._moduleIdProvider.getStrModuleId(id),\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.join(\" => \\n\"),\n\t\t\t\t\t\t);\n\t\t\t\t\t\t// Break the cycle\n\t\t\t\t\t\tmodule.unresolvedDependenciesCount--;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t// record inverse dependency\n\t\t\t\t\tthis._inverseDependencies2[dependency.id] =\n\t\t\t\t\t\tthis._inverseDependencies2[dependency.id] || [];\n\t\t\t\t\tthis._inverseDependencies2[dependency.id].push(module.id);\n\t\t\t\t\tif (dependency instanceof PluginDependency) {\n\t\t\t\t\t\tconst plugin = this._modules2[dependency.pluginId];\n\t\t\t\t\t\tif (plugin && plugin.isComplete()) {\n\t\t\t\t\t\t\tthis._loadPluginDependency(\n\t\t\t\t\t\t\t\tplugin.exports,\n\t\t\t\t\t\t\t\tdependency,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Record dependency for when the plugin gets loaded\n\t\t\t\t\t\tlet inversePluginDeps =\n\t\t\t\t\t\t\tthis._inversePluginDependencies2.get(\n\t\t\t\t\t\t\t\tdependency.pluginId,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tif (!inversePluginDeps) {\n\t\t\t\t\t\t\tinversePluginDeps = [];\n\t\t\t\t\t\t\tthis._inversePluginDependencies2.set(\n\t\t\t\t\t\t\t\tdependency.pluginId,\n\t\t\t\t\t\t\t\tinversePluginDeps,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinversePluginDeps.push(dependency);\n\t\t\t\t\t\tthis._loadModule(dependency.pluginId);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tthis._loadModule(dependency.id);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (module.unresolvedDependenciesCount === 0) {\n\t\t\t\tthis._onModuleComplete(module);\n\t\t\t}\n\t\t}\n\t\t_onModuleComplete(module) {\n\t\t\tconst recorder = this.getRecorder();\n\t\t\tif (module.isComplete()) {\n\t\t\t\t// already done\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst dependencies = module.dependencies;\n\t\t\tconst dependenciesValues = [];\n\t\t\tif (dependencies) {\n\t\t\t\tfor (let i = 0, len = dependencies.length; i < len; i++) {\n\t\t\t\t\tconst dependency = dependencies[i];\n\t\t\t\t\tif (dependency === RegularDependency.EXPORTS) {\n\t\t\t\t\t\tdependenciesValues[i] = module.exports;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (dependency === RegularDependency.MODULE) {\n\t\t\t\t\t\tdependenciesValues[i] = {\n\t\t\t\t\t\t\tid: module.strId,\n\t\t\t\t\t\t\tconfig: () => {\n\t\t\t\t\t\t\t\treturn this._config.getConfigForModule(\n\t\t\t\t\t\t\t\t\tmodule.strId,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (dependency === RegularDependency.REQUIRE) {\n\t\t\t\t\t\tdependenciesValues[i] = this._createRequire(\n\t\t\t\t\t\t\tmodule.moduleIdResolver,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tconst dependencyModule = this._modules2[dependency.id];\n\t\t\t\t\tif (dependencyModule) {\n\t\t\t\t\t\tdependenciesValues[i] = dependencyModule.exports;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tdependenciesValues[i] = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst inversedependenciesProvider = (moduleId) => {\n\t\t\t\treturn (this._inverseDependencies2[moduleId] || []).map(\n\t\t\t\t\t(intModuleId) =>\n\t\t\t\t\t\tthis._moduleIdProvider.getStrModuleId(intModuleId),\n\t\t\t\t);\n\t\t\t};\n\t\t\tmodule.complete(\n\t\t\t\trecorder,\n\t\t\t\tthis._config,\n\t\t\t\tdependenciesValues,\n\t\t\t\tinversedependenciesProvider,\n\t\t\t);\n\t\t\t// Fetch and clear inverse dependencies\n\t\t\tconst inverseDeps = this._inverseDependencies2[module.id];\n\t\t\tthis._inverseDependencies2[module.id] = null;\n\t\t\tif (inverseDeps) {\n\t\t\t\t// Resolve one inverse dependency at a time, always\n\t\t\t\t// on the lookout for a completed module.\n\t\t\t\tfor (let i = 0, len = inverseDeps.length; i < len; i++) {\n\t\t\t\t\tconst inverseDependencyId = inverseDeps[i];\n\t\t\t\t\tconst inverseDependency =\n\t\t\t\t\t\tthis._modules2[inverseDependencyId];\n\t\t\t\t\tinverseDependency.unresolvedDependenciesCount--;\n\t\t\t\t\tif (inverseDependency.unresolvedDependenciesCount === 0) {\n\t\t\t\t\t\tthis._onModuleComplete(inverseDependency);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst inversePluginDeps = this._inversePluginDependencies2.get(\n\t\t\t\tmodule.id,\n\t\t\t);\n\t\t\tif (inversePluginDeps) {\n\t\t\t\t// This module is used as a plugin at least once\n\t\t\t\t// Fetch and clear these inverse plugin dependencies\n\t\t\t\tthis._inversePluginDependencies2.delete(module.id);\n\t\t\t\t// Resolve plugin dependencies one at a time\n\t\t\t\tfor (let i = 0, len = inversePluginDeps.length; i < len; i++) {\n\t\t\t\t\tthis._loadPluginDependency(\n\t\t\t\t\t\tmodule.exports,\n\t\t\t\t\t\tinversePluginDeps[i],\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tAMDLoader.ModuleManager = ModuleManager;\n})(AMDLoader || (AMDLoader = {}));\nvar define;\nvar AMDLoader;\n((AMDLoader) => {\n\tconst env = new AMDLoader.Environment();\n\tlet moduleManager = null;\n\tconst DefineFunc = (id, dependencies, callback) => {\n\t\tif (typeof id !== \"string\") {\n\t\t\tcallback = dependencies;\n\t\t\tdependencies = id;\n\t\t\tid = null;\n\t\t}\n\t\tif (typeof dependencies !== \"object\" || !Array.isArray(dependencies)) {\n\t\t\tcallback = dependencies;\n\t\t\tdependencies = null;\n\t\t}\n\t\tif (!dependencies) {\n\t\t\tdependencies = [\"require\", \"exports\", \"module\"];\n\t\t}\n\t\tif (id) {\n\t\t\tmoduleManager.defineModule(id, dependencies, callback, null, null);\n\t\t} else {\n\t\t\tmoduleManager.enqueueDefineAnonymousModule(dependencies, callback);\n\t\t}\n\t};\n\tDefineFunc.amd = {\n\t\tjQuery: true,\n\t};\n\tconst _requireFunc_config = (params, shouldOverwrite = false) => {\n\t\tmoduleManager.configure(params, shouldOverwrite);\n\t};\n\tconst RequireFunc = () => {\n\t\tif (arguments.length === 1) {\n\t\t\tif (\n\t\t\t\targuments[0] instanceof Object &&\n\t\t\t\t!Array.isArray(arguments[0])\n\t\t\t) {\n\t\t\t\t_requireFunc_config(arguments[0]);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (typeof arguments[0] === \"string\") {\n\t\t\t\treturn moduleManager.synchronousRequire(arguments[0]);\n\t\t\t}\n\t\t}\n\t\tif (arguments.length === 2 || arguments.length === 3) {\n\t\t\tif (Array.isArray(arguments[0])) {\n\t\t\t\tmoduleManager.defineModule(\n\t\t\t\t\tAMDLoader.Utilities.generateAnonymousModule(),\n\t\t\t\t\targuments[0],\n\t\t\t\t\targuments[1],\n\t\t\t\t\targuments[2],\n\t\t\t\t\tnull,\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthrow new Error(\"Unrecognized require call\");\n\t};\n\tRequireFunc.config = _requireFunc_config;\n\tRequireFunc.getConfig = () => moduleManager.getConfig().getOptionsLiteral();\n\tRequireFunc.reset = () => {\n\t\tmoduleManager = moduleManager.reset();\n\t};\n\tRequireFunc.getBuildInfo = () => moduleManager.getBuildInfo();\n\tRequireFunc.getStats = () => moduleManager.getLoaderEvents();\n\tRequireFunc.define = DefineFunc;\n\tfunction init() {\n\t\tif (\n\t\t\ttypeof AMDLoader.global.require !== \"undefined\" ||\n\t\t\ttypeof require !== \"undefined\"\n\t\t) {\n\t\t\tconst _nodeRequire = AMDLoader.global.require || require;\n\t\t\tif (\n\t\t\t\ttypeof _nodeRequire === \"function\" &&\n\t\t\t\ttypeof _nodeRequire.resolve === \"function\"\n\t\t\t) {\n\t\t\t\t// re-expose node's require function\n\t\t\t\tconst nodeRequire = AMDLoader.ensureRecordedNodeRequire(\n\t\t\t\t\tmoduleManager.getRecorder(),\n\t\t\t\t\t_nodeRequire,\n\t\t\t\t);\n\t\t\t\tAMDLoader.global.nodeRequire = nodeRequire;\n\t\t\t\tRequireFunc.nodeRequire = nodeRequire;\n\t\t\t\tRequireFunc.__$__nodeRequire = nodeRequire;\n\t\t\t}\n\t\t}\n\t\tif (\n\t\t\tenv.isNode &&\n\t\t\t!env.isElectronRenderer &&\n\t\t\t!env.isElectronNodeIntegrationWebWorker\n\t\t) {\n\t\t\tmodule.exports = RequireFunc;\n\t\t} else {\n\t\t\tif (!env.isElectronRenderer) {\n\t\t\t\tAMDLoader.global.define = DefineFunc;\n\t\t\t}\n\t\t\tAMDLoader.global.require = RequireFunc;\n\t\t}\n\t}\n\tAMDLoader.init = init;\n\tif (\n\t\ttypeof AMDLoader.global.define !== \"function\" ||\n\t\t!AMDLoader.global.define.amd\n\t) {\n\t\tmoduleManager = new AMDLoader.ModuleManager(\n\t\t\tenv,\n\t\t\tAMDLoader.createScriptLoader(env),\n\t\t\tDefineFunc,\n\t\t\tRequireFunc,\n\t\t\tAMDLoader.Utilities.getHighPerformanceTimestamp(),\n\t\t);\n\t\t// The global variable require can configure the loader\n\t\tif (\n\t\t\ttypeof AMDLoader.global.require !== \"undefined\" &&\n\t\t\ttypeof AMDLoader.global.require !== \"function\"\n\t\t) {\n\t\t\tRequireFunc.config(AMDLoader.global.require);\n\t\t}\n\t\t// This define is for the local closure defined in node in the case that the loader is concatenated\n\t\tdefine = () => DefineFunc.apply(null, arguments);\n\t\tdefine.amd = DefineFunc.amd;\n\t\tif (typeof doNotInitLoader === \"undefined\") {\n\t\t\tinit();\n\t\t}\n\t}\n})(AMDLoader || (AMDLoader = {}));\n"],
  "mappings": "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",
  "names": ["AMDLoader", "Module", "require", "nodeRequire", "err", "module"]
}
