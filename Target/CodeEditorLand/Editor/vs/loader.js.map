{
  "version": 3,
  "sources": ["../../../../Dependency/CodeEditorLand/Editor/Source/vs/loader.js"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/*---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n * Please make sure to make edits in the .ts file at https://github.com/microsoft/vscode-loader/\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *--------------------------------------------------------------------------------------------*/\nconst _amdLoaderGlobal = this;\nconst _commonjsGlobal = typeof global === 'object' ? global : {};\nvar AMDLoader;\n(function (AMDLoader) {\n\tAMDLoader.global = _amdLoaderGlobal;\n\tclass Environment {\n\t\tget isWindows() {\n\t\t\tthis._detect();\n\t\t\treturn this._isWindows;\n\t\t}\n\t\tget isNode() {\n\t\t\tthis._detect();\n\t\t\treturn this._isNode;\n\t\t}\n\t\tget isElectronRenderer() {\n\t\t\tthis._detect();\n\t\t\treturn this._isElectronRenderer;\n\t\t}\n\t\tget isWebWorker() {\n\t\t\tthis._detect();\n\t\t\treturn this._isWebWorker;\n\t\t}\n\t\tget isElectronNodeIntegrationWebWorker() {\n\t\t\tthis._detect();\n\t\t\treturn this._isElectronNodeIntegrationWebWorker;\n\t\t}\n\t\tconstructor() {\n\t\t\tthis._detected = false;\n\t\t\tthis._isWindows = false;\n\t\t\tthis._isNode = false;\n\t\t\tthis._isElectronRenderer = false;\n\t\t\tthis._isWebWorker = false;\n\t\t\tthis._isElectronNodeIntegrationWebWorker = false;\n\t\t}\n\t\t_detect() {\n\t\t\tif (this._detected) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._detected = true;\n\t\t\tthis._isWindows = Environment._isWindows();\n\t\t\tthis._isNode = (typeof module !== 'undefined' && !!module.exports);\n\t\t\tthis._isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\n\t\t\tthis._isWebWorker = (typeof AMDLoader.global.importScripts === 'function');\n\t\t\tthis._isElectronNodeIntegrationWebWorker = this._isWebWorker && (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'worker');\n\t\t}\n\t\tstatic _isWindows() {\n\t\t\tif (typeof navigator !== 'undefined') {\n\t\t\t\tif (navigator.userAgent && navigator.userAgent.indexOf('Windows') >= 0) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof process !== 'undefined') {\n\t\t\t\treturn (process.platform === 'win32');\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}\n\tAMDLoader.Environment = Environment;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n\tclass LoaderEvent {\n\t\tconstructor(type, detail, timestamp) {\n\t\t\tthis.type = type;\n\t\t\tthis.detail = detail;\n\t\t\tthis.timestamp = timestamp;\n\t\t}\n\t}\n\tAMDLoader.LoaderEvent = LoaderEvent;\n\tclass LoaderEventRecorder {\n\t\tconstructor(loaderAvailableTimestamp) {\n\t\t\tthis._events = [new LoaderEvent(1 /* LoaderEventType.LoaderAvailable */, '', loaderAvailableTimestamp)];\n\t\t}\n\t\trecord(type, detail) {\n\t\t\tthis._events.push(new LoaderEvent(type, detail, AMDLoader.Utilities.getHighPerformanceTimestamp()));\n\t\t}\n\t\tgetEvents() {\n\t\t\treturn this._events;\n\t\t}\n\t}\n\tAMDLoader.LoaderEventRecorder = LoaderEventRecorder;\n\tclass NullLoaderEventRecorder {\n\t\trecord(type, detail) {\n\t\t\t// Nothing to do\n\t\t}\n\t\tgetEvents() {\n\t\t\treturn [];\n\t\t}\n\t}\n\tNullLoaderEventRecorder.INSTANCE = new NullLoaderEventRecorder();\n\tAMDLoader.NullLoaderEventRecorder = NullLoaderEventRecorder;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n\tclass Utilities {\n\t\t/**\n\t\t * This method does not take care of / vs \\\n\t\t */\n\t\tstatic fileUriToFilePath(isWindows, uri) {\n\t\t\turi = decodeURI(uri).replace(/%23/g, '#');\n\t\t\tif (isWindows) {\n\t\t\t\tif (/^file:\\/\\/\\//.test(uri)) {\n\t\t\t\t\t// This is a URI without a hostname => return only the path segment\n\t\t\t\t\treturn uri.substr(8);\n\t\t\t\t}\n\t\t\t\tif (/^file:\\/\\//.test(uri)) {\n\t\t\t\t\treturn uri.substr(5);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (/^file:\\/\\//.test(uri)) {\n\t\t\t\t\treturn uri.substr(7);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Not sure...\n\t\t\treturn uri;\n\t\t}\n\t\tstatic startsWith(haystack, needle) {\n\t\t\treturn haystack.length >= needle.length && haystack.substr(0, needle.length) === needle;\n\t\t}\n\t\tstatic endsWith(haystack, needle) {\n\t\t\treturn haystack.length >= needle.length && haystack.substr(haystack.length - needle.length) === needle;\n\t\t}\n\t\t// only check for \"?\" before \"#\" to ensure that there is a real Query-String\n\t\tstatic containsQueryString(url) {\n\t\t\treturn /^[^\\#]*\\?/gi.test(url);\n\t\t}\n\t\t/**\n\t\t * Does `url` start with http:// or https:// or file:// or / ?\n\t\t */\n\t\tstatic isAbsolutePath(url) {\n\t\t\treturn /^((http:\\/\\/)|(https:\\/\\/)|(file:\\/\\/)|(\\/))/.test(url);\n\t\t}\n\t\tstatic forEachProperty(obj, callback) {\n\t\t\tif (obj) {\n\t\t\t\tlet key;\n\t\t\t\tfor (key in obj) {\n\t\t\t\t\tif (obj.hasOwnProperty(key)) {\n\t\t\t\t\t\tcallback(key, obj[key]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tstatic isEmpty(obj) {\n\t\t\tlet isEmpty = true;\n\t\t\tUtilities.forEachProperty(obj, () => {\n\t\t\t\tisEmpty = false;\n\t\t\t});\n\t\t\treturn isEmpty;\n\t\t}\n\t\tstatic recursiveClone(obj) {\n\t\t\tif (!obj || typeof obj !== 'object' || obj instanceof RegExp) {\n\t\t\t\treturn obj;\n\t\t\t}\n\t\t\tif (!Array.isArray(obj) && Object.getPrototypeOf(obj) !== Object.prototype) {\n\t\t\t\t// only clone \"simple\" objects\n\t\t\t\treturn obj;\n\t\t\t}\n\t\t\tlet result = Array.isArray(obj) ? [] : {};\n\t\t\tUtilities.forEachProperty(obj, (key, value) => {\n\t\t\t\tif (value && typeof value === 'object') {\n\t\t\t\t\tresult[key] = Utilities.recursiveClone(value);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tresult[key] = value;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn result;\n\t\t}\n\t\tstatic generateAnonymousModule() {\n\t\t\treturn '===anonymous' + (Utilities.NEXT_ANONYMOUS_ID++) + '===';\n\t\t}\n\t\tstatic isAnonymousModule(id) {\n\t\t\treturn Utilities.startsWith(id, '===anonymous');\n\t\t}\n\t\tstatic getHighPerformanceTimestamp() {\n\t\t\tif (!this.PERFORMANCE_NOW_PROBED) {\n\t\t\t\tthis.PERFORMANCE_NOW_PROBED = true;\n\t\t\t\tthis.HAS_PERFORMANCE_NOW = (AMDLoader.global.performance && typeof AMDLoader.global.performance.now === 'function');\n\t\t\t}\n\t\t\treturn (this.HAS_PERFORMANCE_NOW ? AMDLoader.global.performance.now() : Date.now());\n\t\t}\n\t}\n\tUtilities.NEXT_ANONYMOUS_ID = 1;\n\tUtilities.PERFORMANCE_NOW_PROBED = false;\n\tUtilities.HAS_PERFORMANCE_NOW = false;\n\tAMDLoader.Utilities = Utilities;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n\tfunction ensureError(err) {\n\t\tif (err instanceof Error) {\n\t\t\treturn err;\n\t\t}\n\t\tconst result = new Error(err.message || String(err) || 'Unknown Error');\n\t\tif (err.stack) {\n\t\t\tresult.stack = err.stack;\n\t\t}\n\t\treturn result;\n\t}\n\tAMDLoader.ensureError = ensureError;\n\t;\n\tclass ConfigurationOptionsUtil {\n\t\t/**\n\t\t * Ensure configuration options make sense\n\t\t */\n\t\tstatic validateConfigurationOptions(options) {\n\t\t\tfunction defaultOnError(err) {\n\t\t\t\tif (err.phase === 'loading') {\n\t\t\t\t\tconsole.error('Loading \"' + err.moduleId + '\" failed');\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t\tconsole.error('Here are the modules that depend on it:');\n\t\t\t\t\tconsole.error(err.neededBy);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (err.phase === 'factory') {\n\t\t\t\t\tconsole.error('The factory function of \"' + err.moduleId + '\" has thrown an exception');\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t\tconsole.error('Here are the modules that depend on it:');\n\t\t\t\t\tconsole.error(err.neededBy);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\toptions = options || {};\n\t\t\tif (typeof options.baseUrl !== 'string') {\n\t\t\t\toptions.baseUrl = '';\n\t\t\t}\n\t\t\tif (typeof options.isBuild !== 'boolean') {\n\t\t\t\toptions.isBuild = false;\n\t\t\t}\n\t\t\tif (typeof options.paths !== 'object') {\n\t\t\t\toptions.paths = {};\n\t\t\t}\n\t\t\tif (typeof options.config !== 'object') {\n\t\t\t\toptions.config = {};\n\t\t\t}\n\t\t\tif (typeof options.catchError === 'undefined') {\n\t\t\t\toptions.catchError = false;\n\t\t\t}\n\t\t\tif (typeof options.recordStats === 'undefined') {\n\t\t\t\toptions.recordStats = false;\n\t\t\t}\n\t\t\tif (typeof options.urlArgs !== 'string') {\n\t\t\t\toptions.urlArgs = '';\n\t\t\t}\n\t\t\tif (typeof options.onError !== 'function') {\n\t\t\t\toptions.onError = defaultOnError;\n\t\t\t}\n\t\t\tif (!Array.isArray(options.ignoreDuplicateModules)) {\n\t\t\t\toptions.ignoreDuplicateModules = [];\n\t\t\t}\n\t\t\tif (options.baseUrl.length > 0) {\n\t\t\t\tif (!AMDLoader.Utilities.endsWith(options.baseUrl, '/')) {\n\t\t\t\t\toptions.baseUrl += '/';\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof options.cspNonce !== 'string') {\n\t\t\t\toptions.cspNonce = '';\n\t\t\t}\n\t\t\tif (typeof options.preferScriptTags === 'undefined') {\n\t\t\t\toptions.preferScriptTags = false;\n\t\t\t}\n\t\t\tif (options.nodeCachedData && typeof options.nodeCachedData === 'object') {\n\t\t\t\tif (typeof options.nodeCachedData.seed !== 'string') {\n\t\t\t\t\toptions.nodeCachedData.seed = 'seed';\n\t\t\t\t}\n\t\t\t\tif (typeof options.nodeCachedData.writeDelay !== 'number' || options.nodeCachedData.writeDelay < 0) {\n\t\t\t\t\toptions.nodeCachedData.writeDelay = 1000 * 7;\n\t\t\t\t}\n\t\t\t\tif (!options.nodeCachedData.path || typeof options.nodeCachedData.path !== 'string') {\n\t\t\t\t\tconst err = ensureError(new Error('INVALID cached data configuration, \\'path\\' MUST be set'));\n\t\t\t\t\terr.phase = 'configuration';\n\t\t\t\t\toptions.onError(err);\n\t\t\t\t\toptions.nodeCachedData = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn options;\n\t\t}\n\t\tstatic mergeConfigurationOptions(overwrite = null, base = null) {\n\t\t\tlet result = AMDLoader.Utilities.recursiveClone(base || {});\n\t\t\t// Merge known properties and overwrite the unknown ones\n\t\t\tAMDLoader.Utilities.forEachProperty(overwrite, (key, value) => {\n\t\t\t\tif (key === 'ignoreDuplicateModules' && typeof result.ignoreDuplicateModules !== 'undefined') {\n\t\t\t\t\tresult.ignoreDuplicateModules = result.ignoreDuplicateModules.concat(value);\n\t\t\t\t}\n\t\t\t\telse if (key === 'paths' && typeof result.paths !== 'undefined') {\n\t\t\t\t\tAMDLoader.Utilities.forEachProperty(value, (key2, value2) => result.paths[key2] = value2);\n\t\t\t\t}\n\t\t\t\telse if (key === 'config' && typeof result.config !== 'undefined') {\n\t\t\t\t\tAMDLoader.Utilities.forEachProperty(value, (key2, value2) => result.config[key2] = value2);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tresult[key] = AMDLoader.Utilities.recursiveClone(value);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ConfigurationOptionsUtil.validateConfigurationOptions(result);\n\t\t}\n\t}\n\tAMDLoader.ConfigurationOptionsUtil = ConfigurationOptionsUtil;\n\tclass Configuration {\n\t\tconstructor(env, options) {\n\t\t\tthis._env = env;\n\t\t\tthis.options = ConfigurationOptionsUtil.mergeConfigurationOptions(options);\n\t\t\tthis._createIgnoreDuplicateModulesMap();\n\t\t\tthis._createSortedPathsRules();\n\t\t\tif (this.options.baseUrl === '') {\n\t\t\t\tif (this.options.nodeRequire && this.options.nodeRequire.main && this.options.nodeRequire.main.filename && this._env.isNode) {\n\t\t\t\t\tlet nodeMain = this.options.nodeRequire.main.filename;\n\t\t\t\t\tlet dirnameIndex = Math.max(nodeMain.lastIndexOf('/'), nodeMain.lastIndexOf('\\\\'));\n\t\t\t\t\tthis.options.baseUrl = nodeMain.substring(0, dirnameIndex + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_createIgnoreDuplicateModulesMap() {\n\t\t\t// Build a map out of the ignoreDuplicateModules array\n\t\t\tthis.ignoreDuplicateModulesMap = {};\n\t\t\tfor (let i = 0; i < this.options.ignoreDuplicateModules.length; i++) {\n\t\t\t\tthis.ignoreDuplicateModulesMap[this.options.ignoreDuplicateModules[i]] = true;\n\t\t\t}\n\t\t}\n\t\t_createSortedPathsRules() {\n\t\t\t// Create an array our of the paths rules, sorted descending by length to\n\t\t\t// result in a more specific -> less specific order\n\t\t\tthis.sortedPathsRules = [];\n\t\t\tAMDLoader.Utilities.forEachProperty(this.options.paths, (from, to) => {\n\t\t\t\tif (!Array.isArray(to)) {\n\t\t\t\t\tthis.sortedPathsRules.push({\n\t\t\t\t\t\tfrom: from,\n\t\t\t\t\t\tto: [to]\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.sortedPathsRules.push({\n\t\t\t\t\t\tfrom: from,\n\t\t\t\t\t\tto: to\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.sortedPathsRules.sort((a, b) => {\n\t\t\t\treturn b.from.length - a.from.length;\n\t\t\t});\n\t\t}\n\t\t/**\n\t\t * Clone current configuration and overwrite options selectively.\n\t\t * @param options The selective options to overwrite with.\n\t\t * @result A new configuration\n\t\t */\n\t\tcloneAndMerge(options) {\n\t\t\treturn new Configuration(this._env, ConfigurationOptionsUtil.mergeConfigurationOptions(options, this.options));\n\t\t}\n\t\t/**\n\t\t * Get current options bag. Useful for passing it forward to plugins.\n\t\t */\n\t\tgetOptionsLiteral() {\n\t\t\treturn this.options;\n\t\t}\n\t\t_applyPaths(moduleId) {\n\t\t\tlet pathRule;\n\t\t\tfor (let i = 0, len = this.sortedPathsRules.length; i < len; i++) {\n\t\t\t\tpathRule = this.sortedPathsRules[i];\n\t\t\t\tif (AMDLoader.Utilities.startsWith(moduleId, pathRule.from)) {\n\t\t\t\t\tlet result = [];\n\t\t\t\t\tfor (let j = 0, lenJ = pathRule.to.length; j < lenJ; j++) {\n\t\t\t\t\t\tresult.push(pathRule.to[j] + moduleId.substr(pathRule.from.length));\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn [moduleId];\n\t\t}\n\t\t_addUrlArgsToUrl(url) {\n\t\t\tif (AMDLoader.Utilities.containsQueryString(url)) {\n\t\t\t\treturn url + '&' + this.options.urlArgs;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn url + '?' + this.options.urlArgs;\n\t\t\t}\n\t\t}\n\t\t_addUrlArgsIfNecessaryToUrl(url) {\n\t\t\tif (this.options.urlArgs) {\n\t\t\t\treturn this._addUrlArgsToUrl(url);\n\t\t\t}\n\t\t\treturn url;\n\t\t}\n\t\t_addUrlArgsIfNecessaryToUrls(urls) {\n\t\t\tif (this.options.urlArgs) {\n\t\t\t\tfor (let i = 0, len = urls.length; i < len; i++) {\n\t\t\t\t\turls[i] = this._addUrlArgsToUrl(urls[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn urls;\n\t\t}\n\t\t/**\n\t\t * Transform a module id to a location. Appends .js to module ids\n\t\t */\n\t\tmoduleIdToPaths(moduleId) {\n\t\t\tif (this._env.isNode) {\n\t\t\t\tconst isNodeModule = (this.options.amdModulesPattern instanceof RegExp\n\t\t\t\t\t&& !this.options.amdModulesPattern.test(moduleId));\n\t\t\t\tif (isNodeModule) {\n\t\t\t\t\t// This is a node module...\n\t\t\t\t\tif (this.isBuild()) {\n\t\t\t\t\t\t// ...and we are at build time, drop it\n\t\t\t\t\t\treturn ['empty:'];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// ...and at runtime we create a `shortcut`-path\n\t\t\t\t\t\treturn ['node|' + moduleId];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet result = moduleId;\n\t\t\tlet results;\n\t\t\tif (!AMDLoader.Utilities.endsWith(result, '.js') && !AMDLoader.Utilities.isAbsolutePath(result)) {\n\t\t\t\tresults = this._applyPaths(result);\n\t\t\t\tfor (let i = 0, len = results.length; i < len; i++) {\n\t\t\t\t\tif (this.isBuild() && results[i] === 'empty:') {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (!AMDLoader.Utilities.isAbsolutePath(results[i])) {\n\t\t\t\t\t\tresults[i] = this.options.baseUrl + results[i];\n\t\t\t\t\t}\n\t\t\t\t\tif (!AMDLoader.Utilities.endsWith(results[i], '.js') && !AMDLoader.Utilities.containsQueryString(results[i])) {\n\t\t\t\t\t\tresults[i] = results[i] + '.js';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!AMDLoader.Utilities.endsWith(result, '.js') && !AMDLoader.Utilities.containsQueryString(result)) {\n\t\t\t\t\tresult = result + '.js';\n\t\t\t\t}\n\t\t\t\tresults = [result];\n\t\t\t}\n\t\t\treturn this._addUrlArgsIfNecessaryToUrls(results);\n\t\t}\n\t\t/**\n\t\t * Transform a module id or url to a location.\n\t\t */\n\t\trequireToUrl(url) {\n\t\t\tlet result = url;\n\t\t\tif (!AMDLoader.Utilities.isAbsolutePath(result)) {\n\t\t\t\tresult = this._applyPaths(result)[0];\n\t\t\t\tif (!AMDLoader.Utilities.isAbsolutePath(result)) {\n\t\t\t\t\tresult = this.options.baseUrl + result;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._addUrlArgsIfNecessaryToUrl(result);\n\t\t}\n\t\t/**\n\t\t * Flag to indicate if current execution is as part of a build.\n\t\t */\n\t\tisBuild() {\n\t\t\treturn this.options.isBuild;\n\t\t}\n\t\tshouldInvokeFactory(strModuleId) {\n\t\t\tif (!this.options.isBuild) {\n\t\t\t\t// outside of a build, all factories should be invoked\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t// during a build, only explicitly marked or anonymous modules get their factories invoked\n\t\t\tif (AMDLoader.Utilities.isAnonymousModule(strModuleId)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (this.options.buildForceInvokeFactory && this.options.buildForceInvokeFactory[strModuleId]) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\t/**\n\t\t * Test if module `moduleId` is expected to be defined multiple times\n\t\t */\n\t\tisDuplicateMessageIgnoredFor(moduleId) {\n\t\t\treturn this.ignoreDuplicateModulesMap.hasOwnProperty(moduleId);\n\t\t}\n\t\t/**\n\t\t * Get the configuration settings for the provided module id\n\t\t */\n\t\tgetConfigForModule(moduleId) {\n\t\t\tif (this.options.config) {\n\t\t\t\treturn this.options.config[moduleId];\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Should errors be caught when executing module factories?\n\t\t */\n\t\tshouldCatchError() {\n\t\t\treturn this.options.catchError;\n\t\t}\n\t\t/**\n\t\t * Should statistics be recorded?\n\t\t */\n\t\tshouldRecordStats() {\n\t\t\treturn this.options.recordStats;\n\t\t}\n\t\t/**\n\t\t * Forward an error to the error handler.\n\t\t */\n\t\tonError(err) {\n\t\t\tthis.options.onError(err);\n\t\t}\n\t}\n\tAMDLoader.Configuration = Configuration;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n\t/**\n\t * Load `scriptSrc` only once (avoid multiple <script> tags)\n\t */\n\tclass OnlyOnceScriptLoader {\n\t\tconstructor(env) {\n\t\t\tthis._env = env;\n\t\t\tthis._scriptLoader = null;\n\t\t\tthis._callbackMap = {};\n\t\t}\n\t\tload(moduleManager, scriptSrc, callback, errorback) {\n\t\t\tif (!this._scriptLoader) {\n\t\t\t\tif (this._env.isWebWorker) {\n\t\t\t\t\tthis._scriptLoader = new WorkerScriptLoader();\n\t\t\t\t}\n\t\t\t\telse if (this._env.isElectronRenderer) {\n\t\t\t\t\tconst { preferScriptTags } = moduleManager.getConfig().getOptionsLiteral();\n\t\t\t\t\tif (preferScriptTags) {\n\t\t\t\t\t\tthis._scriptLoader = new BrowserScriptLoader();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._scriptLoader = new NodeScriptLoader(this._env);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (this._env.isNode) {\n\t\t\t\t\tthis._scriptLoader = new NodeScriptLoader(this._env);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._scriptLoader = new BrowserScriptLoader();\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet scriptCallbacks = {\n\t\t\t\tcallback: callback,\n\t\t\t\terrorback: errorback\n\t\t\t};\n\t\t\tif (this._callbackMap.hasOwnProperty(scriptSrc)) {\n\t\t\t\tthis._callbackMap[scriptSrc].push(scriptCallbacks);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._callbackMap[scriptSrc] = [scriptCallbacks];\n\t\t\tthis._scriptLoader.load(moduleManager, scriptSrc, () => this.triggerCallback(scriptSrc), (err) => this.triggerErrorback(scriptSrc, err));\n\t\t}\n\t\ttriggerCallback(scriptSrc) {\n\t\t\tlet scriptCallbacks = this._callbackMap[scriptSrc];\n\t\t\tdelete this._callbackMap[scriptSrc];\n\t\t\tfor (let i = 0; i < scriptCallbacks.length; i++) {\n\t\t\t\tscriptCallbacks[i].callback();\n\t\t\t}\n\t\t}\n\t\ttriggerErrorback(scriptSrc, err) {\n\t\t\tlet scriptCallbacks = this._callbackMap[scriptSrc];\n\t\t\tdelete this._callbackMap[scriptSrc];\n\t\t\tfor (let i = 0; i < scriptCallbacks.length; i++) {\n\t\t\t\tscriptCallbacks[i].errorback(err);\n\t\t\t}\n\t\t}\n\t}\n\tclass BrowserScriptLoader {\n\t\t/**\n\t\t * Attach load / error listeners to a script element and remove them when either one has fired.\n\t\t * Implemented for browsers supporting HTML5 standard 'load' and 'error' events.\n\t\t */\n\t\tattachListeners(script, callback, errorback) {\n\t\t\tlet unbind = () => {\n\t\t\t\tscript.removeEventListener('load', loadEventListener);\n\t\t\t\tscript.removeEventListener('error', errorEventListener);\n\t\t\t};\n\t\t\tlet loadEventListener = (e) => {\n\t\t\t\tunbind();\n\t\t\t\tcallback();\n\t\t\t};\n\t\t\tlet errorEventListener = (e) => {\n\t\t\t\tunbind();\n\t\t\t\terrorback(e);\n\t\t\t};\n\t\t\tscript.addEventListener('load', loadEventListener);\n\t\t\tscript.addEventListener('error', errorEventListener);\n\t\t}\n\t\tload(moduleManager, scriptSrc, callback, errorback) {\n\t\t\tif (/^node\\|/.test(scriptSrc)) {\n\t\t\t\tlet opts = moduleManager.getConfig().getOptionsLiteral();\n\t\t\t\tlet nodeRequire = ensureRecordedNodeRequire(moduleManager.getRecorder(), (opts.nodeRequire || AMDLoader.global.nodeRequire));\n\t\t\t\tlet pieces = scriptSrc.split('|');\n\t\t\t\tlet moduleExports = null;\n\t\t\t\ttry {\n\t\t\t\t\tmoduleExports = nodeRequire(pieces[1]);\n\t\t\t\t}\n\t\t\t\tcatch (err) {\n\t\t\t\t\terrorback(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tmoduleManager.enqueueDefineAnonymousModule([], () => moduleExports);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet script = document.createElement('script');\n\t\t\t\tscript.setAttribute('async', 'async');\n\t\t\t\tscript.setAttribute('type', 'text/javascript');\n\t\t\t\tthis.attachListeners(script, callback, errorback);\n\t\t\t\tconst { trustedTypesPolicy } = moduleManager.getConfig().getOptionsLiteral();\n\t\t\t\tif (trustedTypesPolicy) {\n\t\t\t\t\tscriptSrc = trustedTypesPolicy.createScriptURL(scriptSrc);\n\t\t\t\t}\n\t\t\t\tscript.setAttribute('src', scriptSrc);\n\t\t\t\t// Propagate CSP nonce to dynamically created script tag.\n\t\t\t\tconst { cspNonce } = moduleManager.getConfig().getOptionsLiteral();\n\t\t\t\tif (cspNonce) {\n\t\t\t\t\tscript.setAttribute('nonce', cspNonce);\n\t\t\t\t}\n\t\t\t\tdocument.getElementsByTagName('head')[0].appendChild(script);\n\t\t\t}\n\t\t}\n\t}\n\tfunction canUseEval(moduleManager) {\n\t\tconst { trustedTypesPolicy } = moduleManager.getConfig().getOptionsLiteral();\n\t\ttry {\n\t\t\tconst func = (trustedTypesPolicy\n\t\t\t\t? self.eval(trustedTypesPolicy.createScript('', 'true')) // CodeQL [SM01632] the loader is responsible with loading code, fetch + eval is used on the web worker instead of importScripts if possible because importScripts is synchronous and we observed deadlocks on Safari\n\t\t\t\t: new Function('true') // CodeQL [SM01632] the loader is responsible with loading code, fetch + eval is used on the web worker instead of importScripts if possible because importScripts is synchronous and we observed deadlocks on Safari\n\t\t\t);\n\t\t\tfunc.call(self);\n\t\t\treturn true;\n\t\t}\n\t\tcatch (err) {\n\t\t\treturn false;\n\t\t}\n\t}\n\tclass WorkerScriptLoader {\n\t\tconstructor() {\n\t\t\tthis._cachedCanUseEval = null;\n\t\t}\n\t\t_canUseEval(moduleManager) {\n\t\t\tif (this._cachedCanUseEval === null) {\n\t\t\t\tthis._cachedCanUseEval = canUseEval(moduleManager);\n\t\t\t}\n\t\t\treturn this._cachedCanUseEval;\n\t\t}\n\t\tload(moduleManager, scriptSrc, callback, errorback) {\n\t\t\tif (/^node\\|/.test(scriptSrc)) {\n\t\t\t\tconst opts = moduleManager.getConfig().getOptionsLiteral();\n\t\t\t\tconst nodeRequire = ensureRecordedNodeRequire(moduleManager.getRecorder(), (opts.nodeRequire || AMDLoader.global.nodeRequire));\n\t\t\t\tconst pieces = scriptSrc.split('|');\n\t\t\t\tlet moduleExports = null;\n\t\t\t\ttry {\n\t\t\t\t\tmoduleExports = nodeRequire(pieces[1]);\n\t\t\t\t}\n\t\t\t\tcatch (err) {\n\t\t\t\t\terrorback(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tmoduleManager.enqueueDefineAnonymousModule([], function () { return moduleExports; });\n\t\t\t\tcallback();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst { trustedTypesPolicy } = moduleManager.getConfig().getOptionsLiteral();\n\t\t\t\tconst isCrossOrigin = (/^((http:)|(https:)|(file:))/.test(scriptSrc) && scriptSrc.substring(0, self.origin.length) !== self.origin);\n\t\t\t\tif (!isCrossOrigin && this._canUseEval(moduleManager)) {\n\t\t\t\t\t// use `fetch` if possible because `importScripts`\n\t\t\t\t\t// is synchronous and can lead to deadlocks on Safari\n\t\t\t\t\tfetch(scriptSrc).then((response) => {\n\t\t\t\t\t\tif (response.status !== 200) {\n\t\t\t\t\t\t\tthrow new Error(response.statusText);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn response.text();\n\t\t\t\t\t}).then((text) => {\n\t\t\t\t\t\ttext = `${text}\\n//# sourceURL=${scriptSrc}`;\n\t\t\t\t\t\tconst func = (trustedTypesPolicy\n\t\t\t\t\t\t\t? self.eval(trustedTypesPolicy.createScript('', text)) // CodeQL [SM01632] the loader is responsible with loading code, fetch + eval is used on the web worker instead of importScripts if possible because importScripts is synchronous and we observed deadlocks on Safari\n\t\t\t\t\t\t\t: new Function(text) // CodeQL [SM01632] the loader is responsible with loading code, fetch + eval is used on the web worker instead of importScripts if possible because importScripts is synchronous and we observed deadlocks on Safari\n\t\t\t\t\t\t);\n\t\t\t\t\t\tfunc.call(self);\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t}).then(undefined, errorback);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tif (trustedTypesPolicy) {\n\t\t\t\t\t\tscriptSrc = trustedTypesPolicy.createScriptURL(scriptSrc);\n\t\t\t\t\t}\n\t\t\t\t\timportScripts(scriptSrc);\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t\tcatch (e) {\n\t\t\t\t\terrorback(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tclass NodeScriptLoader {\n\t\tconstructor(env) {\n\t\t\tthis._env = env;\n\t\t\tthis._didInitialize = false;\n\t\t\tthis._didPatchNodeRequire = false;\n\t\t}\n\t\t_init(nodeRequire) {\n\t\t\tif (this._didInitialize) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._didInitialize = true;\n\t\t\t// capture node modules\n\t\t\tthis._fs = nodeRequire('fs');\n\t\t\tthis._vm = nodeRequire('vm');\n\t\t\tthis._path = nodeRequire('path');\n\t\t\tthis._crypto = nodeRequire('crypto');\n\t\t}\n\t\t// patch require-function of nodejs such that we can manually create a script\n\t\t// from cached data. this is done by overriding the `Module._compile` function\n\t\t_initNodeRequire(nodeRequire, moduleManager) {\n\t\t\t// It is important to check for `nodeCachedData` first and then set `_didPatchNodeRequire`.\n\t\t\t// That's because `nodeCachedData` is set _after_ calling this for the first time...\n\t\t\tconst { nodeCachedData } = moduleManager.getConfig().getOptionsLiteral();\n\t\t\tif (!nodeCachedData) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this._didPatchNodeRequire) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._didPatchNodeRequire = true;\n\t\t\tconst that = this;\n\t\t\tconst Module = nodeRequire('module');\n\t\t\tfunction makeRequireFunction(mod) {\n\t\t\t\tconst Module = mod.constructor;\n\t\t\t\tlet require = function require(path) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn mod.require(path);\n\t\t\t\t\t}\n\t\t\t\t\tfinally {\n\t\t\t\t\t\t// nothing\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\trequire.resolve = function resolve(request, options) {\n\t\t\t\t\treturn Module._resolveFilename(request, mod, false, options);\n\t\t\t\t};\n\t\t\t\trequire.resolve.paths = function paths(request) {\n\t\t\t\t\treturn Module._resolveLookupPaths(request, mod);\n\t\t\t\t};\n\t\t\t\trequire.main = process.mainModule;\n\t\t\t\trequire.extensions = Module._extensions;\n\t\t\t\trequire.cache = Module._cache;\n\t\t\t\treturn require;\n\t\t\t}\n\t\t\tModule.prototype._compile = function (content, filename) {\n\t\t\t\t// remove shebang and create wrapper function\n\t\t\t\tconst scriptSource = Module.wrap(content.replace(/^#!.*/, ''));\n\t\t\t\t// create script\n\t\t\t\tconst recorder = moduleManager.getRecorder();\n\t\t\t\tconst cachedDataPath = that._getCachedDataPath(nodeCachedData, filename);\n\t\t\t\tconst options = { filename };\n\t\t\t\tlet hashData;\n\t\t\t\ttry {\n\t\t\t\t\tconst data = that._fs.readFileSync(cachedDataPath);\n\t\t\t\t\thashData = data.slice(0, 16);\n\t\t\t\t\toptions.cachedData = data.slice(16);\n\t\t\t\t\trecorder.record(60 /* LoaderEventType.CachedDataFound */, cachedDataPath);\n\t\t\t\t}\n\t\t\t\tcatch (_e) {\n\t\t\t\t\trecorder.record(61 /* LoaderEventType.CachedDataMissed */, cachedDataPath);\n\t\t\t\t}\n\t\t\t\tconst script = new that._vm.Script(scriptSource, options);\n\t\t\t\tconst compileWrapper = script.runInThisContext(options);\n\t\t\t\t// run script\n\t\t\t\tconst dirname = that._path.dirname(filename);\n\t\t\t\tconst require = makeRequireFunction(this);\n\t\t\t\tconst args = [this.exports, require, this, filename, dirname, process, _commonjsGlobal, Buffer];\n\t\t\t\tconst result = compileWrapper.apply(this.exports, args);\n\t\t\t\t// cached data aftermath\n\t\t\t\tthat._handleCachedData(script, scriptSource, cachedDataPath, !options.cachedData, moduleManager);\n\t\t\t\tthat._verifyCachedData(script, scriptSource, cachedDataPath, hashData, moduleManager);\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\tload(moduleManager, scriptSrc, callback, errorback) {\n\t\t\tconst opts = moduleManager.getConfig().getOptionsLiteral();\n\t\t\tconst nodeRequire = ensureRecordedNodeRequire(moduleManager.getRecorder(), (opts.nodeRequire || AMDLoader.global.nodeRequire));\n\t\t\tconst nodeInstrumenter = (opts.nodeInstrumenter || function (c) { return c; });\n\t\t\tthis._init(nodeRequire);\n\t\t\tthis._initNodeRequire(nodeRequire, moduleManager);\n\t\t\tlet recorder = moduleManager.getRecorder();\n\t\t\tif (/^node\\|/.test(scriptSrc)) {\n\t\t\t\tlet pieces = scriptSrc.split('|');\n\t\t\t\tlet moduleExports = null;\n\t\t\t\ttry {\n\t\t\t\t\tmoduleExports = nodeRequire(pieces[1]);\n\t\t\t\t}\n\t\t\t\tcatch (err) {\n\t\t\t\t\terrorback(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tmoduleManager.enqueueDefineAnonymousModule([], () => moduleExports);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tscriptSrc = AMDLoader.Utilities.fileUriToFilePath(this._env.isWindows, scriptSrc);\n\t\t\t\tconst normalizedScriptSrc = this._path.normalize(scriptSrc);\n\t\t\t\tconst vmScriptPathOrUri = this._getElectronRendererScriptPathOrUri(normalizedScriptSrc);\n\t\t\t\tconst wantsCachedData = Boolean(opts.nodeCachedData);\n\t\t\t\tconst cachedDataPath = wantsCachedData ? this._getCachedDataPath(opts.nodeCachedData, scriptSrc) : undefined;\n\t\t\t\tthis._readSourceAndCachedData(normalizedScriptSrc, cachedDataPath, recorder, (err, data, cachedData, hashData) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\terrorback(err);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tlet scriptSource;\n\t\t\t\t\tif (data.charCodeAt(0) === NodeScriptLoader._BOM) {\n\t\t\t\t\t\tscriptSource = NodeScriptLoader._PREFIX + data.substring(1) + NodeScriptLoader._SUFFIX;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tscriptSource = NodeScriptLoader._PREFIX + data + NodeScriptLoader._SUFFIX;\n\t\t\t\t\t}\n\t\t\t\t\tscriptSource = nodeInstrumenter(scriptSource, normalizedScriptSrc);\n\t\t\t\t\tconst scriptOpts = { filename: vmScriptPathOrUri, cachedData };\n\t\t\t\t\tconst script = this._createAndEvalScript(moduleManager, scriptSource, scriptOpts, callback, errorback);\n\t\t\t\t\tthis._handleCachedData(script, scriptSource, cachedDataPath, wantsCachedData && !cachedData, moduleManager);\n\t\t\t\t\tthis._verifyCachedData(script, scriptSource, cachedDataPath, hashData, moduleManager);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\t_createAndEvalScript(moduleManager, contents, options, callback, errorback) {\n\t\t\tconst recorder = moduleManager.getRecorder();\n\t\t\trecorder.record(31 /* LoaderEventType.NodeBeginEvaluatingScript */, options.filename);\n\t\t\tconst script = new this._vm.Script(contents, options);\n\t\t\tconst ret = script.runInThisContext(options);\n\t\t\tconst globalDefineFunc = moduleManager.getGlobalAMDDefineFunc();\n\t\t\tlet receivedDefineCall = false;\n\t\t\tconst localDefineFunc = function () {\n\t\t\t\treceivedDefineCall = true;\n\t\t\t\treturn globalDefineFunc.apply(null, arguments);\n\t\t\t};\n\t\t\tlocalDefineFunc.amd = globalDefineFunc.amd;\n\t\t\tret.call(AMDLoader.global, moduleManager.getGlobalAMDRequireFunc(), localDefineFunc, options.filename, this._path.dirname(options.filename));\n\t\t\trecorder.record(32 /* LoaderEventType.NodeEndEvaluatingScript */, options.filename);\n\t\t\tif (receivedDefineCall) {\n\t\t\t\tcallback();\n\t\t\t}\n\t\t\telse {\n\t\t\t\terrorback(new Error(`Didn't receive define call in ${options.filename}!`));\n\t\t\t}\n\t\t\treturn script;\n\t\t}\n\t\t_getElectronRendererScriptPathOrUri(path) {\n\t\t\tif (!this._env.isElectronRenderer) {\n\t\t\t\treturn path;\n\t\t\t}\n\t\t\tlet driveLetterMatch = path.match(/^([a-z])\\:(.*)/i);\n\t\t\tif (driveLetterMatch) {\n\t\t\t\t// windows\n\t\t\t\treturn `file:///${(driveLetterMatch[1].toUpperCase() + ':' + driveLetterMatch[2]).replace(/\\\\/g, '/')}`;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// nix\n\t\t\t\treturn `file://${path}`;\n\t\t\t}\n\t\t}\n\t\t_getCachedDataPath(config, filename) {\n\t\t\tconst hash = this._crypto.createHash('md5').update(filename, 'utf8').update(config.seed, 'utf8').update(process.arch, '').digest('hex');\n\t\t\tconst basename = this._path.basename(filename).replace(/\\.js$/, '');\n\t\t\treturn this._path.join(config.path, `${basename}-${hash}.code`);\n\t\t}\n\t\t_handleCachedData(script, scriptSource, cachedDataPath, createCachedData, moduleManager) {\n\t\t\tif (script.cachedDataRejected) {\n\t\t\t\t// cached data got rejected -> delete and re-create\n\t\t\t\tthis._fs.unlink(cachedDataPath, err => {\n\t\t\t\t\tmoduleManager.getRecorder().record(62 /* LoaderEventType.CachedDataRejected */, cachedDataPath);\n\t\t\t\t\tthis._createAndWriteCachedData(script, scriptSource, cachedDataPath, moduleManager);\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tmoduleManager.getConfig().onError(err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if (createCachedData) {\n\t\t\t\t// no cached data, but wanted\n\t\t\t\tthis._createAndWriteCachedData(script, scriptSource, cachedDataPath, moduleManager);\n\t\t\t}\n\t\t}\n\t\t// Cached data format: | SOURCE_HASH | V8_CACHED_DATA |\n\t\t// -SOURCE_HASH is the md5 hash of the JS source (always 16 bytes)\n\t\t// -V8_CACHED_DATA is what v8 produces\n\t\t_createAndWriteCachedData(script, scriptSource, cachedDataPath, moduleManager) {\n\t\t\tlet timeout = Math.ceil(moduleManager.getConfig().getOptionsLiteral().nodeCachedData.writeDelay * (1 + Math.random()));\n\t\t\tlet lastSize = -1;\n\t\t\tlet iteration = 0;\n\t\t\tlet hashData = undefined;\n\t\t\tconst createLoop = () => {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tif (!hashData) {\n\t\t\t\t\t\thashData = this._crypto.createHash('md5').update(scriptSource, 'utf8').digest();\n\t\t\t\t\t}\n\t\t\t\t\tconst cachedData = script.createCachedData();\n\t\t\t\t\tif (cachedData.length === 0 || cachedData.length === lastSize || iteration >= 5) {\n\t\t\t\t\t\t// done\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (cachedData.length < lastSize) {\n\t\t\t\t\t\t// less data than before: skip, try again next round\n\t\t\t\t\t\tcreateLoop();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tlastSize = cachedData.length;\n\t\t\t\t\tthis._fs.writeFile(cachedDataPath, Buffer.concat([hashData, cachedData]), err => {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tmoduleManager.getConfig().onError(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmoduleManager.getRecorder().record(63 /* LoaderEventType.CachedDataCreated */, cachedDataPath);\n\t\t\t\t\t\tcreateLoop();\n\t\t\t\t\t});\n\t\t\t\t}, timeout * (Math.pow(4, iteration++)));\n\t\t\t};\n\t\t\t// with some delay (`timeout`) create cached data\n\t\t\t// and repeat that (with backoff delay) until the\n\t\t\t// data seems to be not changing anymore\n\t\t\tcreateLoop();\n\t\t}\n\t\t_readSourceAndCachedData(sourcePath, cachedDataPath, recorder, callback) {\n\t\t\tif (!cachedDataPath) {\n\t\t\t\t// no cached data case\n\t\t\t\tthis._fs.readFile(sourcePath, { encoding: 'utf8' }, callback);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// cached data case: read both files in parallel\n\t\t\t\tlet source = undefined;\n\t\t\t\tlet cachedData = undefined;\n\t\t\t\tlet hashData = undefined;\n\t\t\t\tlet steps = 2;\n\t\t\t\tconst step = (err) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t}\n\t\t\t\t\telse if (--steps === 0) {\n\t\t\t\t\t\tcallback(undefined, source, cachedData, hashData);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tthis._fs.readFile(sourcePath, { encoding: 'utf8' }, (err, data) => {\n\t\t\t\t\tsource = data;\n\t\t\t\t\tstep(err);\n\t\t\t\t});\n\t\t\t\tthis._fs.readFile(cachedDataPath, (err, data) => {\n\t\t\t\t\tif (!err && data && data.length > 0) {\n\t\t\t\t\t\thashData = data.slice(0, 16);\n\t\t\t\t\t\tcachedData = data.slice(16);\n\t\t\t\t\t\trecorder.record(60 /* LoaderEventType.CachedDataFound */, cachedDataPath);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\trecorder.record(61 /* LoaderEventType.CachedDataMissed */, cachedDataPath);\n\t\t\t\t\t}\n\t\t\t\t\tstep(); // ignored: cached data is optional\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\t_verifyCachedData(script, scriptSource, cachedDataPath, hashData, moduleManager) {\n\t\t\tif (!hashData) {\n\t\t\t\t// nothing to do\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (script.cachedDataRejected) {\n\t\t\t\t// invalid anyways\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsetTimeout(() => {\n\t\t\t\t// check source hash - the contract is that file paths change when file content\n\t\t\t\t// change (e.g use the commit or version id as cache path). this check is\n\t\t\t\t// for violations of this contract.\n\t\t\t\tconst hashDataNow = this._crypto.createHash('md5').update(scriptSource, 'utf8').digest();\n\t\t\t\tif (!hashData.equals(hashDataNow)) {\n\t\t\t\t\tmoduleManager.getConfig().onError(new Error(`FAILED TO VERIFY CACHED DATA, deleting stale '${cachedDataPath}' now, but a RESTART IS REQUIRED`));\n\t\t\t\t\tthis._fs.unlink(cachedDataPath, err => {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tmoduleManager.getConfig().onError(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, Math.ceil(5000 * (1 + Math.random())));\n\t\t}\n\t}\n\tNodeScriptLoader._BOM = 0xFEFF;\n\tNodeScriptLoader._PREFIX = '(function (require, define, __filename, __dirname) { ';\n\tNodeScriptLoader._SUFFIX = '\\n});';\n\tfunction ensureRecordedNodeRequire(recorder, _nodeRequire) {\n\t\tif (_nodeRequire.__$__isRecorded) {\n\t\t\t// it is already recorded\n\t\t\treturn _nodeRequire;\n\t\t}\n\t\tconst nodeRequire = function nodeRequire(what) {\n\t\t\trecorder.record(33 /* LoaderEventType.NodeBeginNativeRequire */, what);\n\t\t\ttry {\n\t\t\t\treturn _nodeRequire(what);\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\trecorder.record(34 /* LoaderEventType.NodeEndNativeRequire */, what);\n\t\t\t}\n\t\t};\n\t\tnodeRequire.__$__isRecorded = true;\n\t\treturn nodeRequire;\n\t}\n\tAMDLoader.ensureRecordedNodeRequire = ensureRecordedNodeRequire;\n\tfunction createScriptLoader(env) {\n\t\treturn new OnlyOnceScriptLoader(env);\n\t}\n\tAMDLoader.createScriptLoader = createScriptLoader;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n\t// ------------------------------------------------------------------------\n\t// ModuleIdResolver\n\tclass ModuleIdResolver {\n\t\tconstructor(fromModuleId) {\n\t\t\tlet lastSlash = fromModuleId.lastIndexOf('/');\n\t\t\tif (lastSlash !== -1) {\n\t\t\t\tthis.fromModulePath = fromModuleId.substr(0, lastSlash + 1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.fromModulePath = '';\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Normalize 'a/../name' to 'name', etc.\n\t\t */\n\t\tstatic _normalizeModuleId(moduleId) {\n\t\t\tlet r = moduleId, pattern;\n\t\t\t// replace /./ => /\n\t\t\tpattern = /\\/\\.\\//;\n\t\t\twhile (pattern.test(r)) {\n\t\t\t\tr = r.replace(pattern, '/');\n\t\t\t}\n\t\t\t// replace ^./ => nothing\n\t\t\tr = r.replace(/^\\.\\//g, '');\n\t\t\t// replace /aa/../ => / (BUT IGNORE /../../)\n\t\t\tpattern = /\\/(([^\\/])|([^\\/][^\\/\\.])|([^\\/\\.][^\\/])|([^\\/][^\\/][^\\/]+))\\/\\.\\.\\//;\n\t\t\twhile (pattern.test(r)) {\n\t\t\t\tr = r.replace(pattern, '/');\n\t\t\t}\n\t\t\t// replace ^aa/../ => nothing (BUT IGNORE ../../)\n\t\t\tr = r.replace(/^(([^\\/])|([^\\/][^\\/\\.])|([^\\/\\.][^\\/])|([^\\/][^\\/][^\\/]+))\\/\\.\\.\\//, '');\n\t\t\treturn r;\n\t\t}\n\t\t/**\n\t\t * Resolve relative module ids\n\t\t */\n\t\tresolveModule(moduleId) {\n\t\t\tlet result = moduleId;\n\t\t\tif (!AMDLoader.Utilities.isAbsolutePath(result)) {\n\t\t\t\tif (AMDLoader.Utilities.startsWith(result, './') || AMDLoader.Utilities.startsWith(result, '../')) {\n\t\t\t\t\tresult = ModuleIdResolver._normalizeModuleId(this.fromModulePath + result);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\tModuleIdResolver.ROOT = new ModuleIdResolver('');\n\tAMDLoader.ModuleIdResolver = ModuleIdResolver;\n\t// ------------------------------------------------------------------------\n\t// Module\n\tclass Module {\n\t\tconstructor(id, strId, dependencies, callback, errorback, moduleIdResolver) {\n\t\t\tthis.id = id;\n\t\t\tthis.strId = strId;\n\t\t\tthis.dependencies = dependencies;\n\t\t\tthis._callback = callback;\n\t\t\tthis._errorback = errorback;\n\t\t\tthis.moduleIdResolver = moduleIdResolver;\n\t\t\tthis.exports = {};\n\t\t\tthis.error = null;\n\t\t\tthis.exportsPassedIn = false;\n\t\t\tthis.unresolvedDependenciesCount = this.dependencies.length;\n\t\t\tthis._isComplete = false;\n\t\t}\n\t\tstatic _safeInvokeFunction(callback, args) {\n\t\t\ttry {\n\t\t\t\treturn {\n\t\t\t\t\treturnedValue: callback.apply(AMDLoader.global, args),\n\t\t\t\t\tproducedError: null\n\t\t\t\t};\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\treturn {\n\t\t\t\t\treturnedValue: null,\n\t\t\t\t\tproducedError: e\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tstatic _invokeFactory(config, strModuleId, callback, dependenciesValues) {\n\t\t\tif (!config.shouldInvokeFactory(strModuleId)) {\n\t\t\t\treturn {\n\t\t\t\t\treturnedValue: null,\n\t\t\t\t\tproducedError: null\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (config.shouldCatchError()) {\n\t\t\t\treturn this._safeInvokeFunction(callback, dependenciesValues);\n\t\t\t}\n\t\t\treturn {\n\t\t\t\treturnedValue: callback.apply(AMDLoader.global, dependenciesValues),\n\t\t\t\tproducedError: null\n\t\t\t};\n\t\t}\n\t\tcomplete(recorder, config, dependenciesValues, inversedependenciesProvider) {\n\t\t\tthis._isComplete = true;\n\t\t\tlet producedError = null;\n\t\t\tif (this._callback) {\n\t\t\t\tif (typeof this._callback === 'function') {\n\t\t\t\t\trecorder.record(21 /* LoaderEventType.BeginInvokeFactory */, this.strId);\n\t\t\t\t\tlet r = Module._invokeFactory(config, this.strId, this._callback, dependenciesValues);\n\t\t\t\t\tproducedError = r.producedError;\n\t\t\t\t\trecorder.record(22 /* LoaderEventType.EndInvokeFactory */, this.strId);\n\t\t\t\t\tif (!producedError && typeof r.returnedValue !== 'undefined' && (!this.exportsPassedIn || AMDLoader.Utilities.isEmpty(this.exports))) {\n\t\t\t\t\t\tthis.exports = r.returnedValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.exports = this._callback;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (producedError) {\n\t\t\t\tlet err = AMDLoader.ensureError(producedError);\n\t\t\t\terr.phase = 'factory';\n\t\t\t\terr.moduleId = this.strId;\n\t\t\t\terr.neededBy = inversedependenciesProvider(this.id);\n\t\t\t\tthis.error = err;\n\t\t\t\tconfig.onError(err);\n\t\t\t}\n\t\t\tthis.dependencies = null;\n\t\t\tthis._callback = null;\n\t\t\tthis._errorback = null;\n\t\t\tthis.moduleIdResolver = null;\n\t\t}\n\t\t/**\n\t\t * One of the direct dependencies or a transitive dependency has failed to load.\n\t\t */\n\t\tonDependencyError(err) {\n\t\t\tthis._isComplete = true;\n\t\t\tthis.error = err;\n\t\t\tif (this._errorback) {\n\t\t\t\tthis._errorback(err);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\t/**\n\t\t * Is the current module complete?\n\t\t */\n\t\tisComplete() {\n\t\t\treturn this._isComplete;\n\t\t}\n\t}\n\tAMDLoader.Module = Module;\n\tclass ModuleIdProvider {\n\t\tconstructor() {\n\t\t\tthis._nextId = 0;\n\t\t\tthis._strModuleIdToIntModuleId = new Map();\n\t\t\tthis._intModuleIdToStrModuleId = [];\n\t\t\t// Ensure values 0, 1, 2 are assigned accordingly with ModuleId\n\t\t\tthis.getModuleId('exports');\n\t\t\tthis.getModuleId('module');\n\t\t\tthis.getModuleId('require');\n\t\t}\n\t\tgetMaxModuleId() {\n\t\t\treturn this._nextId;\n\t\t}\n\t\tgetModuleId(strModuleId) {\n\t\t\tlet id = this._strModuleIdToIntModuleId.get(strModuleId);\n\t\t\tif (typeof id === 'undefined') {\n\t\t\t\tid = this._nextId++;\n\t\t\t\tthis._strModuleIdToIntModuleId.set(strModuleId, id);\n\t\t\t\tthis._intModuleIdToStrModuleId[id] = strModuleId;\n\t\t\t}\n\t\t\treturn id;\n\t\t}\n\t\tgetStrModuleId(moduleId) {\n\t\t\treturn this._intModuleIdToStrModuleId[moduleId];\n\t\t}\n\t}\n\tclass RegularDependency {\n\t\tconstructor(id) {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\tRegularDependency.EXPORTS = new RegularDependency(0 /* ModuleId.EXPORTS */);\n\tRegularDependency.MODULE = new RegularDependency(1 /* ModuleId.MODULE */);\n\tRegularDependency.REQUIRE = new RegularDependency(2 /* ModuleId.REQUIRE */);\n\tAMDLoader.RegularDependency = RegularDependency;\n\tclass PluginDependency {\n\t\tconstructor(id, pluginId, pluginParam) {\n\t\t\tthis.id = id;\n\t\t\tthis.pluginId = pluginId;\n\t\t\tthis.pluginParam = pluginParam;\n\t\t}\n\t}\n\tAMDLoader.PluginDependency = PluginDependency;\n\tclass ModuleManager {\n\t\tconstructor(env, scriptLoader, defineFunc, requireFunc, loaderAvailableTimestamp = 0) {\n\t\t\tthis._env = env;\n\t\t\tthis._scriptLoader = scriptLoader;\n\t\t\tthis._loaderAvailableTimestamp = loaderAvailableTimestamp;\n\t\t\tthis._defineFunc = defineFunc;\n\t\t\tthis._requireFunc = requireFunc;\n\t\t\tthis._moduleIdProvider = new ModuleIdProvider();\n\t\t\tthis._config = new AMDLoader.Configuration(this._env);\n\t\t\tthis._hasDependencyCycle = false;\n\t\t\tthis._modules2 = [];\n\t\t\tthis._knownModules2 = [];\n\t\t\tthis._inverseDependencies2 = [];\n\t\t\tthis._inversePluginDependencies2 = new Map();\n\t\t\tthis._currentAnonymousDefineCall = null;\n\t\t\tthis._recorder = null;\n\t\t\tthis._buildInfoPath = [];\n\t\t\tthis._buildInfoDefineStack = [];\n\t\t\tthis._buildInfoDependencies = [];\n\t\t\tthis._requireFunc.moduleManager = this;\n\t\t}\n\t\treset() {\n\t\t\treturn new ModuleManager(this._env, this._scriptLoader, this._defineFunc, this._requireFunc, this._loaderAvailableTimestamp);\n\t\t}\n\t\tgetGlobalAMDDefineFunc() {\n\t\t\treturn this._defineFunc;\n\t\t}\n\t\tgetGlobalAMDRequireFunc() {\n\t\t\treturn this._requireFunc;\n\t\t}\n\t\tstatic _findRelevantLocationInStack(needle, stack) {\n\t\t\tlet normalize = (str) => str.replace(/\\\\/g, '/');\n\t\t\tlet normalizedPath = normalize(needle);\n\t\t\tlet stackPieces = stack.split(/\\n/);\n\t\t\tfor (let i = 0; i < stackPieces.length; i++) {\n\t\t\t\tlet m = stackPieces[i].match(/(.*):(\\d+):(\\d+)\\)?$/);\n\t\t\t\tif (m) {\n\t\t\t\t\tlet stackPath = m[1];\n\t\t\t\t\tlet stackLine = m[2];\n\t\t\t\t\tlet stackColumn = m[3];\n\t\t\t\t\tlet trimPathOffset = Math.max(stackPath.lastIndexOf(' ') + 1, stackPath.lastIndexOf('(') + 1);\n\t\t\t\t\tstackPath = stackPath.substr(trimPathOffset);\n\t\t\t\t\tstackPath = normalize(stackPath);\n\t\t\t\t\tif (stackPath === normalizedPath) {\n\t\t\t\t\t\tlet r = {\n\t\t\t\t\t\t\tline: parseInt(stackLine, 10),\n\t\t\t\t\t\t\tcol: parseInt(stackColumn, 10)\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (r.line === 1) {\n\t\t\t\t\t\t\tr.col -= '(function (require, define, __filename, __dirname) { '.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn r;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow new Error('Could not correlate define call site for needle ' + needle);\n\t\t}\n\t\tgetBuildInfo() {\n\t\t\tif (!this._config.isBuild()) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tlet result = [], resultLen = 0;\n\t\t\tfor (let i = 0, len = this._modules2.length; i < len; i++) {\n\t\t\t\tlet m = this._modules2[i];\n\t\t\t\tif (!m) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlet location = this._buildInfoPath[m.id] || null;\n\t\t\t\tlet defineStack = this._buildInfoDefineStack[m.id] || null;\n\t\t\t\tlet dependencies = this._buildInfoDependencies[m.id];\n\t\t\t\tresult[resultLen++] = {\n\t\t\t\t\tid: m.strId,\n\t\t\t\t\tpath: location,\n\t\t\t\t\tdefineLocation: (location && defineStack ? ModuleManager._findRelevantLocationInStack(location, defineStack) : null),\n\t\t\t\t\tdependencies: dependencies,\n\t\t\t\t\tshim: null,\n\t\t\t\t\texports: m.exports\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\tgetRecorder() {\n\t\t\tif (!this._recorder) {\n\t\t\t\tif (this._config.shouldRecordStats()) {\n\t\t\t\t\tthis._recorder = new AMDLoader.LoaderEventRecorder(this._loaderAvailableTimestamp);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._recorder = AMDLoader.NullLoaderEventRecorder.INSTANCE;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._recorder;\n\t\t}\n\t\tgetLoaderEvents() {\n\t\t\treturn this.getRecorder().getEvents();\n\t\t}\n\t\t/**\n\t\t * Defines an anonymous module (without an id). Its name will be resolved as we receive a callback from the scriptLoader.\n\t\t * @param dependencies @see defineModule\n\t\t * @param callback @see defineModule\n\t\t */\n\t\tenqueueDefineAnonymousModule(dependencies, callback) {\n\t\t\tif (this._currentAnonymousDefineCall !== null) {\n\t\t\t\tthrow new Error('Can only have one anonymous define call per script file');\n\t\t\t}\n\t\t\tlet stack = null;\n\t\t\tif (this._config.isBuild()) {\n\t\t\t\tstack = new Error('StackLocation').stack || null;\n\t\t\t}\n\t\t\tthis._currentAnonymousDefineCall = {\n\t\t\t\tstack: stack,\n\t\t\t\tdependencies: dependencies,\n\t\t\t\tcallback: callback\n\t\t\t};\n\t\t}\n\t\t/**\n\t\t * Creates a module and stores it in _modules. The manager will immediately begin resolving its dependencies.\n\t\t * @param strModuleId An unique and absolute id of the module. This must not collide with another module's id\n\t\t * @param dependencies An array with the dependencies of the module. Special keys are: \"require\", \"exports\" and \"module\"\n\t\t * @param callback if callback is a function, it will be called with the resolved dependencies. if callback is an object, it will be considered as the exports of the module.\n\t\t */\n\t\tdefineModule(strModuleId, dependencies, callback, errorback, stack, moduleIdResolver = new ModuleIdResolver(strModuleId)) {\n\t\t\tlet moduleId = this._moduleIdProvider.getModuleId(strModuleId);\n\t\t\tif (this._modules2[moduleId]) {\n\t\t\t\tif (!this._config.isDuplicateMessageIgnoredFor(strModuleId)) {\n\t\t\t\t\tconsole.warn('Duplicate definition of module \\'' + strModuleId + '\\'');\n\t\t\t\t}\n\t\t\t\t// Super important! Completely ignore duplicate module definition\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet m = new Module(moduleId, strModuleId, this._normalizeDependencies(dependencies, moduleIdResolver), callback, errorback, moduleIdResolver);\n\t\t\tthis._modules2[moduleId] = m;\n\t\t\tif (this._config.isBuild()) {\n\t\t\t\tthis._buildInfoDefineStack[moduleId] = stack;\n\t\t\t\tthis._buildInfoDependencies[moduleId] = (m.dependencies || []).map(dep => this._moduleIdProvider.getStrModuleId(dep.id));\n\t\t\t}\n\t\t\t// Resolving of dependencies is immediate (not in a timeout). If there's a need to support a packer that concatenates in an\n\t\t\t// unordered manner, in order to finish processing the file, execute the following method in a timeout\n\t\t\tthis._resolve(m);\n\t\t}\n\t\t_normalizeDependency(dependency, moduleIdResolver) {\n\t\t\tif (dependency === 'exports') {\n\t\t\t\treturn RegularDependency.EXPORTS;\n\t\t\t}\n\t\t\tif (dependency === 'module') {\n\t\t\t\treturn RegularDependency.MODULE;\n\t\t\t}\n\t\t\tif (dependency === 'require') {\n\t\t\t\treturn RegularDependency.REQUIRE;\n\t\t\t}\n\t\t\t// Normalize dependency and then request it from the manager\n\t\t\tlet bangIndex = dependency.indexOf('!');\n\t\t\tif (bangIndex >= 0) {\n\t\t\t\tlet strPluginId = moduleIdResolver.resolveModule(dependency.substr(0, bangIndex));\n\t\t\t\tlet pluginParam = moduleIdResolver.resolveModule(dependency.substr(bangIndex + 1));\n\t\t\t\tlet dependencyId = this._moduleIdProvider.getModuleId(strPluginId + '!' + pluginParam);\n\t\t\t\tlet pluginId = this._moduleIdProvider.getModuleId(strPluginId);\n\t\t\t\treturn new PluginDependency(dependencyId, pluginId, pluginParam);\n\t\t\t}\n\t\t\treturn new RegularDependency(this._moduleIdProvider.getModuleId(moduleIdResolver.resolveModule(dependency)));\n\t\t}\n\t\t_normalizeDependencies(dependencies, moduleIdResolver) {\n\t\t\tlet result = [], resultLen = 0;\n\t\t\tfor (let i = 0, len = dependencies.length; i < len; i++) {\n\t\t\t\tresult[resultLen++] = this._normalizeDependency(dependencies[i], moduleIdResolver);\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\t_relativeRequire(moduleIdResolver, dependencies, callback, errorback) {\n\t\t\tif (typeof dependencies === 'string') {\n\t\t\t\treturn this.synchronousRequire(dependencies, moduleIdResolver);\n\t\t\t}\n\t\t\tthis.defineModule(AMDLoader.Utilities.generateAnonymousModule(), dependencies, callback, errorback, null, moduleIdResolver);\n\t\t}\n\t\t/**\n\t\t * Require synchronously a module by its absolute id. If the module is not loaded, an exception will be thrown.\n\t\t * @param id The unique and absolute id of the required module\n\t\t * @return The exports of module 'id'\n\t\t */\n\t\tsynchronousRequire(_strModuleId, moduleIdResolver = new ModuleIdResolver(_strModuleId)) {\n\t\t\tlet dependency = this._normalizeDependency(_strModuleId, moduleIdResolver);\n\t\t\tlet m = this._modules2[dependency.id];\n\t\t\tif (!m) {\n\t\t\t\tthrow new Error('Check dependency list! Synchronous require cannot resolve module \\'' + _strModuleId + '\\'. This is the first mention of this module!');\n\t\t\t}\n\t\t\tif (!m.isComplete()) {\n\t\t\t\tthrow new Error('Check dependency list! Synchronous require cannot resolve module \\'' + _strModuleId + '\\'. This module has not been resolved completely yet.');\n\t\t\t}\n\t\t\tif (m.error) {\n\t\t\t\tthrow m.error;\n\t\t\t}\n\t\t\treturn m.exports;\n\t\t}\n\t\tconfigure(params, shouldOverwrite) {\n\t\t\tlet oldShouldRecordStats = this._config.shouldRecordStats();\n\t\t\tif (shouldOverwrite) {\n\t\t\t\tthis._config = new AMDLoader.Configuration(this._env, params);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._config = this._config.cloneAndMerge(params);\n\t\t\t}\n\t\t\tif (this._config.shouldRecordStats() && !oldShouldRecordStats) {\n\t\t\t\tthis._recorder = null;\n\t\t\t}\n\t\t}\n\t\tgetConfig() {\n\t\t\treturn this._config;\n\t\t}\n\t\t/**\n\t\t * Callback from the scriptLoader when a module has been loaded.\n\t\t * This means its code is available and has been executed.\n\t\t */\n\t\t_onLoad(moduleId) {\n\t\t\tif (this._currentAnonymousDefineCall !== null) {\n\t\t\t\tlet defineCall = this._currentAnonymousDefineCall;\n\t\t\t\tthis._currentAnonymousDefineCall = null;\n\t\t\t\t// Hit an anonymous define call\n\t\t\t\tthis.defineModule(this._moduleIdProvider.getStrModuleId(moduleId), defineCall.dependencies, defineCall.callback, null, defineCall.stack);\n\t\t\t}\n\t\t}\n\t\t_createLoadError(moduleId, _err) {\n\t\t\tlet strModuleId = this._moduleIdProvider.getStrModuleId(moduleId);\n\t\t\tlet neededBy = (this._inverseDependencies2[moduleId] || []).map((intModuleId) => this._moduleIdProvider.getStrModuleId(intModuleId));\n\t\t\tconst err = AMDLoader.ensureError(_err);\n\t\t\terr.phase = 'loading';\n\t\t\terr.moduleId = strModuleId;\n\t\t\terr.neededBy = neededBy;\n\t\t\treturn err;\n\t\t}\n\t\t/**\n\t\t * Callback from the scriptLoader when a module hasn't been loaded.\n\t\t * This means that the script was not found (e.g. 404) or there was an error in the script.\n\t\t */\n\t\t_onLoadError(moduleId, err) {\n\t\t\tconst error = this._createLoadError(moduleId, err);\n\t\t\tif (!this._modules2[moduleId]) {\n\t\t\t\tthis._modules2[moduleId] = new Module(moduleId, this._moduleIdProvider.getStrModuleId(moduleId), [], () => { }, null, null);\n\t\t\t}\n\t\t\t// Find any 'local' error handlers, walk the entire chain of inverse dependencies if necessary.\n\t\t\tlet seenModuleId = [];\n\t\t\tfor (let i = 0, len = this._moduleIdProvider.getMaxModuleId(); i < len; i++) {\n\t\t\t\tseenModuleId[i] = false;\n\t\t\t}\n\t\t\tlet someoneNotified = false;\n\t\t\tlet queue = [];\n\t\t\tqueue.push(moduleId);\n\t\t\tseenModuleId[moduleId] = true;\n\t\t\twhile (queue.length > 0) {\n\t\t\t\tlet queueElement = queue.shift();\n\t\t\t\tlet m = this._modules2[queueElement];\n\t\t\t\tif (m) {\n\t\t\t\t\tsomeoneNotified = m.onDependencyError(error) || someoneNotified;\n\t\t\t\t}\n\t\t\t\tlet inverseDeps = this._inverseDependencies2[queueElement];\n\t\t\t\tif (inverseDeps) {\n\t\t\t\t\tfor (let i = 0, len = inverseDeps.length; i < len; i++) {\n\t\t\t\t\t\tlet inverseDep = inverseDeps[i];\n\t\t\t\t\t\tif (!seenModuleId[inverseDep]) {\n\t\t\t\t\t\t\tqueue.push(inverseDep);\n\t\t\t\t\t\t\tseenModuleId[inverseDep] = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!someoneNotified) {\n\t\t\t\tthis._config.onError(error);\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Walks (recursively) the dependencies of 'from' in search of 'to'.\n\t\t * Returns true if there is such a path or false otherwise.\n\t\t * @param from Module id to start at\n\t\t * @param to Module id to look for\n\t\t */\n\t\t_hasDependencyPath(fromId, toId) {\n\t\t\tlet from = this._modules2[fromId];\n\t\t\tif (!from) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tlet inQueue = [];\n\t\t\tfor (let i = 0, len = this._moduleIdProvider.getMaxModuleId(); i < len; i++) {\n\t\t\t\tinQueue[i] = false;\n\t\t\t}\n\t\t\tlet queue = [];\n\t\t\t// Insert 'from' in queue\n\t\t\tqueue.push(from);\n\t\t\tinQueue[fromId] = true;\n\t\t\twhile (queue.length > 0) {\n\t\t\t\t// Pop first inserted element of queue\n\t\t\t\tlet element = queue.shift();\n\t\t\t\tlet dependencies = element.dependencies;\n\t\t\t\tif (dependencies) {\n\t\t\t\t\t// Walk the element's dependencies\n\t\t\t\t\tfor (let i = 0, len = dependencies.length; i < len; i++) {\n\t\t\t\t\t\tlet dependency = dependencies[i];\n\t\t\t\t\t\tif (dependency.id === toId) {\n\t\t\t\t\t\t\t// There is a path to 'to'\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet dependencyModule = this._modules2[dependency.id];\n\t\t\t\t\t\tif (dependencyModule && !inQueue[dependency.id]) {\n\t\t\t\t\t\t\t// Insert 'dependency' in queue\n\t\t\t\t\t\t\tinQueue[dependency.id] = true;\n\t\t\t\t\t\t\tqueue.push(dependencyModule);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// There is no path to 'to'\n\t\t\treturn false;\n\t\t}\n\t\t/**\n\t\t * Walks (recursively) the dependencies of 'from' in search of 'to'.\n\t\t * Returns cycle as array.\n\t\t * @param from Module id to start at\n\t\t * @param to Module id to look for\n\t\t */\n\t\t_findCyclePath(fromId, toId, depth) {\n\t\t\tif (fromId === toId || depth === 50) {\n\t\t\t\treturn [fromId];\n\t\t\t}\n\t\t\tlet from = this._modules2[fromId];\n\t\t\tif (!from) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t// Walk the element's dependencies\n\t\t\tlet dependencies = from.dependencies;\n\t\t\tif (dependencies) {\n\t\t\t\tfor (let i = 0, len = dependencies.length; i < len; i++) {\n\t\t\t\t\tlet path = this._findCyclePath(dependencies[i].id, toId, depth + 1);\n\t\t\t\t\tif (path !== null) {\n\t\t\t\t\t\tpath.push(fromId);\n\t\t\t\t\t\treturn path;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\t/**\n\t\t * Create the local 'require' that is passed into modules\n\t\t */\n\t\t_createRequire(moduleIdResolver) {\n\t\t\tlet result = ((dependencies, callback, errorback) => {\n\t\t\t\treturn this._relativeRequire(moduleIdResolver, dependencies, callback, errorback);\n\t\t\t});\n\t\t\tresult.toUrl = (id) => {\n\t\t\t\treturn this._config.requireToUrl(moduleIdResolver.resolveModule(id));\n\t\t\t};\n\t\t\tresult.getStats = () => {\n\t\t\t\treturn this.getLoaderEvents();\n\t\t\t};\n\t\t\tresult.hasDependencyCycle = () => {\n\t\t\t\treturn this._hasDependencyCycle;\n\t\t\t};\n\t\t\tresult.config = (params, shouldOverwrite = false) => {\n\t\t\t\tthis.configure(params, shouldOverwrite);\n\t\t\t};\n\t\t\tresult.__$__nodeRequire = AMDLoader.global.nodeRequire;\n\t\t\treturn result;\n\t\t}\n\t\t_loadModule(moduleId) {\n\t\t\tif (this._modules2[moduleId] || this._knownModules2[moduleId]) {\n\t\t\t\t// known module\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._knownModules2[moduleId] = true;\n\t\t\tlet strModuleId = this._moduleIdProvider.getStrModuleId(moduleId);\n\t\t\tlet paths = this._config.moduleIdToPaths(strModuleId);\n\t\t\tlet scopedPackageRegex = /^@[^\\/]+\\/[^\\/]+$/; // matches @scope/package-name\n\t\t\tif (this._env.isNode && (strModuleId.indexOf('/') === -1 || scopedPackageRegex.test(strModuleId))) {\n\t\t\t\tpaths.push('node|' + strModuleId);\n\t\t\t}\n\t\t\tlet lastPathIndex = -1;\n\t\t\tlet loadNextPath = (err) => {\n\t\t\t\tlastPathIndex++;\n\t\t\t\tif (lastPathIndex >= paths.length) {\n\t\t\t\t\t// No more paths to try\n\t\t\t\t\tthis._onLoadError(moduleId, err);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet currentPath = paths[lastPathIndex];\n\t\t\t\t\tlet recorder = this.getRecorder();\n\t\t\t\t\tif (this._config.isBuild() && currentPath === 'empty:') {\n\t\t\t\t\t\tthis._buildInfoPath[moduleId] = currentPath;\n\t\t\t\t\t\tthis.defineModule(this._moduleIdProvider.getStrModuleId(moduleId), [], null, null, null);\n\t\t\t\t\t\tthis._onLoad(moduleId);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\trecorder.record(10 /* LoaderEventType.BeginLoadingScript */, currentPath);\n\t\t\t\t\tthis._scriptLoader.load(this, currentPath, () => {\n\t\t\t\t\t\tif (this._config.isBuild()) {\n\t\t\t\t\t\t\tthis._buildInfoPath[moduleId] = currentPath;\n\t\t\t\t\t\t}\n\t\t\t\t\t\trecorder.record(11 /* LoaderEventType.EndLoadingScriptOK */, currentPath);\n\t\t\t\t\t\tthis._onLoad(moduleId);\n\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\trecorder.record(12 /* LoaderEventType.EndLoadingScriptError */, currentPath);\n\t\t\t\t\t\tloadNextPath(err);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t\tloadNextPath(null);\n\t\t}\n\t\t/**\n\t\t * Resolve a plugin dependency with the plugin loaded & complete\n\t\t * @param module The module that has this dependency\n\t\t * @param pluginDependency The semi-normalized dependency that appears in the module. e.g. 'vs/css!./mycssfile'. Only the plugin part (before !) is normalized\n\t\t * @param plugin The plugin (what the plugin exports)\n\t\t */\n\t\t_loadPluginDependency(plugin, pluginDependency) {\n\t\t\tif (this._modules2[pluginDependency.id] || this._knownModules2[pluginDependency.id]) {\n\t\t\t\t// known module\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._knownModules2[pluginDependency.id] = true;\n\t\t\t// Delegate the loading of the resource to the plugin\n\t\t\tlet load = ((value) => {\n\t\t\t\tthis.defineModule(this._moduleIdProvider.getStrModuleId(pluginDependency.id), [], value, null, null);\n\t\t\t});\n\t\t\tload.error = (err) => {\n\t\t\t\tthis._config.onError(this._createLoadError(pluginDependency.id, err));\n\t\t\t};\n\t\t\tplugin.load(pluginDependency.pluginParam, this._createRequire(ModuleIdResolver.ROOT), load, this._config.getOptionsLiteral());\n\t\t}\n\t\t/**\n\t\t * Examine the dependencies of module 'module' and resolve them as needed.\n\t\t */\n\t\t_resolve(module) {\n\t\t\tlet dependencies = module.dependencies;\n\t\t\tif (dependencies) {\n\t\t\t\tfor (let i = 0, len = dependencies.length; i < len; i++) {\n\t\t\t\t\tlet dependency = dependencies[i];\n\t\t\t\t\tif (dependency === RegularDependency.EXPORTS) {\n\t\t\t\t\t\tmodule.exportsPassedIn = true;\n\t\t\t\t\t\tmodule.unresolvedDependenciesCount--;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (dependency === RegularDependency.MODULE) {\n\t\t\t\t\t\tmodule.unresolvedDependenciesCount--;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (dependency === RegularDependency.REQUIRE) {\n\t\t\t\t\t\tmodule.unresolvedDependenciesCount--;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tlet dependencyModule = this._modules2[dependency.id];\n\t\t\t\t\tif (dependencyModule && dependencyModule.isComplete()) {\n\t\t\t\t\t\tif (dependencyModule.error) {\n\t\t\t\t\t\t\tmodule.onDependencyError(dependencyModule.error);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmodule.unresolvedDependenciesCount--;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (this._hasDependencyPath(dependency.id, module.id)) {\n\t\t\t\t\t\tthis._hasDependencyCycle = true;\n\t\t\t\t\t\tconsole.warn('There is a dependency cycle between \\'' + this._moduleIdProvider.getStrModuleId(dependency.id) + '\\' and \\'' + this._moduleIdProvider.getStrModuleId(module.id) + '\\'. The cyclic path follows:');\n\t\t\t\t\t\tlet cyclePath = this._findCyclePath(dependency.id, module.id, 0) || [];\n\t\t\t\t\t\tcyclePath.reverse();\n\t\t\t\t\t\tcyclePath.push(dependency.id);\n\t\t\t\t\t\tconsole.warn(cyclePath.map(id => this._moduleIdProvider.getStrModuleId(id)).join(' => \\n'));\n\t\t\t\t\t\t// Break the cycle\n\t\t\t\t\t\tmodule.unresolvedDependenciesCount--;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t// record inverse dependency\n\t\t\t\t\tthis._inverseDependencies2[dependency.id] = this._inverseDependencies2[dependency.id] || [];\n\t\t\t\t\tthis._inverseDependencies2[dependency.id].push(module.id);\n\t\t\t\t\tif (dependency instanceof PluginDependency) {\n\t\t\t\t\t\tlet plugin = this._modules2[dependency.pluginId];\n\t\t\t\t\t\tif (plugin && plugin.isComplete()) {\n\t\t\t\t\t\t\tthis._loadPluginDependency(plugin.exports, dependency);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Record dependency for when the plugin gets loaded\n\t\t\t\t\t\tlet inversePluginDeps = this._inversePluginDependencies2.get(dependency.pluginId);\n\t\t\t\t\t\tif (!inversePluginDeps) {\n\t\t\t\t\t\t\tinversePluginDeps = [];\n\t\t\t\t\t\t\tthis._inversePluginDependencies2.set(dependency.pluginId, inversePluginDeps);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinversePluginDeps.push(dependency);\n\t\t\t\t\t\tthis._loadModule(dependency.pluginId);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tthis._loadModule(dependency.id);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (module.unresolvedDependenciesCount === 0) {\n\t\t\t\tthis._onModuleComplete(module);\n\t\t\t}\n\t\t}\n\t\t_onModuleComplete(module) {\n\t\t\tlet recorder = this.getRecorder();\n\t\t\tif (module.isComplete()) {\n\t\t\t\t// already done\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet dependencies = module.dependencies;\n\t\t\tlet dependenciesValues = [];\n\t\t\tif (dependencies) {\n\t\t\t\tfor (let i = 0, len = dependencies.length; i < len; i++) {\n\t\t\t\t\tlet dependency = dependencies[i];\n\t\t\t\t\tif (dependency === RegularDependency.EXPORTS) {\n\t\t\t\t\t\tdependenciesValues[i] = module.exports;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (dependency === RegularDependency.MODULE) {\n\t\t\t\t\t\tdependenciesValues[i] = {\n\t\t\t\t\t\t\tid: module.strId,\n\t\t\t\t\t\t\tconfig: () => {\n\t\t\t\t\t\t\t\treturn this._config.getConfigForModule(module.strId);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (dependency === RegularDependency.REQUIRE) {\n\t\t\t\t\t\tdependenciesValues[i] = this._createRequire(module.moduleIdResolver);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tlet dependencyModule = this._modules2[dependency.id];\n\t\t\t\t\tif (dependencyModule) {\n\t\t\t\t\t\tdependenciesValues[i] = dependencyModule.exports;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tdependenciesValues[i] = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst inversedependenciesProvider = (moduleId) => {\n\t\t\t\treturn (this._inverseDependencies2[moduleId] || []).map((intModuleId) => this._moduleIdProvider.getStrModuleId(intModuleId));\n\t\t\t};\n\t\t\tmodule.complete(recorder, this._config, dependenciesValues, inversedependenciesProvider);\n\t\t\t// Fetch and clear inverse dependencies\n\t\t\tlet inverseDeps = this._inverseDependencies2[module.id];\n\t\t\tthis._inverseDependencies2[module.id] = null;\n\t\t\tif (inverseDeps) {\n\t\t\t\t// Resolve one inverse dependency at a time, always\n\t\t\t\t// on the lookout for a completed module.\n\t\t\t\tfor (let i = 0, len = inverseDeps.length; i < len; i++) {\n\t\t\t\t\tlet inverseDependencyId = inverseDeps[i];\n\t\t\t\t\tlet inverseDependency = this._modules2[inverseDependencyId];\n\t\t\t\t\tinverseDependency.unresolvedDependenciesCount--;\n\t\t\t\t\tif (inverseDependency.unresolvedDependenciesCount === 0) {\n\t\t\t\t\t\tthis._onModuleComplete(inverseDependency);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet inversePluginDeps = this._inversePluginDependencies2.get(module.id);\n\t\t\tif (inversePluginDeps) {\n\t\t\t\t// This module is used as a plugin at least once\n\t\t\t\t// Fetch and clear these inverse plugin dependencies\n\t\t\t\tthis._inversePluginDependencies2.delete(module.id);\n\t\t\t\t// Resolve plugin dependencies one at a time\n\t\t\t\tfor (let i = 0, len = inversePluginDeps.length; i < len; i++) {\n\t\t\t\t\tthis._loadPluginDependency(module.exports, inversePluginDeps[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tAMDLoader.ModuleManager = ModuleManager;\n})(AMDLoader || (AMDLoader = {}));\nvar define;\nvar AMDLoader;\n(function (AMDLoader) {\n\tconst env = new AMDLoader.Environment();\n\tlet moduleManager = null;\n\tconst DefineFunc = function (id, dependencies, callback) {\n\t\tif (typeof id !== 'string') {\n\t\t\tcallback = dependencies;\n\t\t\tdependencies = id;\n\t\t\tid = null;\n\t\t}\n\t\tif (typeof dependencies !== 'object' || !Array.isArray(dependencies)) {\n\t\t\tcallback = dependencies;\n\t\t\tdependencies = null;\n\t\t}\n\t\tif (!dependencies) {\n\t\t\tdependencies = ['require', 'exports', 'module'];\n\t\t}\n\t\tif (id) {\n\t\t\tmoduleManager.defineModule(id, dependencies, callback, null, null);\n\t\t}\n\t\telse {\n\t\t\tmoduleManager.enqueueDefineAnonymousModule(dependencies, callback);\n\t\t}\n\t};\n\tDefineFunc.amd = {\n\t\tjQuery: true\n\t};\n\tconst _requireFunc_config = function (params, shouldOverwrite = false) {\n\t\tmoduleManager.configure(params, shouldOverwrite);\n\t};\n\tconst RequireFunc = function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif ((arguments[0] instanceof Object) && !Array.isArray(arguments[0])) {\n\t\t\t\t_requireFunc_config(arguments[0]);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (typeof arguments[0] === 'string') {\n\t\t\t\treturn moduleManager.synchronousRequire(arguments[0]);\n\t\t\t}\n\t\t}\n\t\tif (arguments.length === 2 || arguments.length === 3) {\n\t\t\tif (Array.isArray(arguments[0])) {\n\t\t\t\tmoduleManager.defineModule(AMDLoader.Utilities.generateAnonymousModule(), arguments[0], arguments[1], arguments[2], null);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthrow new Error('Unrecognized require call');\n\t};\n\tRequireFunc.config = _requireFunc_config;\n\tRequireFunc.getConfig = function () {\n\t\treturn moduleManager.getConfig().getOptionsLiteral();\n\t};\n\tRequireFunc.reset = function () {\n\t\tmoduleManager = moduleManager.reset();\n\t};\n\tRequireFunc.getBuildInfo = function () {\n\t\treturn moduleManager.getBuildInfo();\n\t};\n\tRequireFunc.getStats = function () {\n\t\treturn moduleManager.getLoaderEvents();\n\t};\n\tRequireFunc.define = DefineFunc;\n\tfunction init() {\n\t\tif (typeof AMDLoader.global.require !== 'undefined' || typeof require !== 'undefined') {\n\t\t\tconst _nodeRequire = (AMDLoader.global.require || require);\n\t\t\tif (typeof _nodeRequire === 'function' && typeof _nodeRequire.resolve === 'function') {\n\t\t\t\t// re-expose node's require function\n\t\t\t\tconst nodeRequire = AMDLoader.ensureRecordedNodeRequire(moduleManager.getRecorder(), _nodeRequire);\n\t\t\t\tAMDLoader.global.nodeRequire = nodeRequire;\n\t\t\t\tRequireFunc.nodeRequire = nodeRequire;\n\t\t\t\tRequireFunc.__$__nodeRequire = nodeRequire;\n\t\t\t}\n\t\t}\n\t\tif (env.isNode && !env.isElectronRenderer && !env.isElectronNodeIntegrationWebWorker) {\n\t\t\tmodule.exports = RequireFunc;\n\t\t}\n\t\telse {\n\t\t\tif (!env.isElectronRenderer) {\n\t\t\t\tAMDLoader.global.define = DefineFunc;\n\t\t\t}\n\t\t\tAMDLoader.global.require = RequireFunc;\n\t\t}\n\t}\n\tAMDLoader.init = init;\n\tif (typeof AMDLoader.global.define !== 'function' || !AMDLoader.global.define.amd) {\n\t\tmoduleManager = new AMDLoader.ModuleManager(env, AMDLoader.createScriptLoader(env), DefineFunc, RequireFunc, AMDLoader.Utilities.getHighPerformanceTimestamp());\n\t\t// The global variable require can configure the loader\n\t\tif (typeof AMDLoader.global.require !== 'undefined' && typeof AMDLoader.global.require !== 'function') {\n\t\t\tRequireFunc.config(AMDLoader.global.require);\n\t\t}\n\t\t// This define is for the local closure defined in node in the case that the loader is concatenated\n\t\tdefine = function () {\n\t\t\treturn DefineFunc.apply(null, arguments);\n\t\t};\n\t\tdefine.amd = DefineFunc.amd;\n\t\tif (typeof doNotInitLoader === 'undefined') {\n\t\t\tinit();\n\t\t}\n\t}\n})(AMDLoader || (AMDLoader = {}));\n"],
  "mappings": "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",
  "names": ["AMDLoader", "Module", "require", "nodeRequire", "err", "module"]
}
