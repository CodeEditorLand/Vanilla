import { Event } from "vs/base/common/event";
import { Disposable } from "vs/base/common/lifecycle";
import { IServerChannel } from "vs/base/parts/ipc/common/ipc";
import { IConfigurationService } from "vs/platform/configuration/common/configuration";
import { IExtensionManagementService } from "vs/platform/extensionManagement/common/extensionManagement";
import { ILogService } from "vs/platform/log/common/log";
import { IProductService } from "vs/platform/product/common/productService";
import { RemoteAgentConnectionContext } from "vs/platform/remote/common/remoteAgentEnvironment";
import { IPtyHostService } from "vs/platform/terminal/common/terminal";
import { IServerEnvironmentService } from "vs/server/node/serverEnvironmentService";
import { RemoteTerminalChannelEvent, RemoteTerminalChannelRequest } from "vs/workbench/contrib/terminal/common/remote/terminal";
export declare class RemoteTerminalChannel extends Disposable implements IServerChannel<RemoteAgentConnectionContext> {
    private readonly _environmentService;
    private readonly _logService;
    private readonly _ptyHostService;
    private readonly _productService;
    private readonly _extensionManagementService;
    private readonly _configurationService;
    private _lastReqId;
    private readonly _pendingCommands;
    private readonly _onExecuteCommand;
    readonly onExecuteCommand: any;
    constructor(_environmentService: IServerEnvironmentService, _logService: ILogService, _ptyHostService: IPtyHostService, _productService: IProductService, _extensionManagementService: IExtensionManagementService, _configurationService: IConfigurationService);
    call(ctx: RemoteAgentConnectionContext, command: RemoteTerminalChannelRequest, args?: any): Promise<any>;
    listen(_: any, event: RemoteTerminalChannelEvent, arg: any): Event<any>;
    private _createProcess;
    private _executeCommand;
    private _sendCommandResult;
    private _getDefaultSystemShell;
    private _getProfiles;
    private _getEnvironment;
    private _getWslPath;
    private _reduceConnectionGraceTime;
}
