{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/server/node/remoteTerminalChannel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as os from 'os';\nimport { Emitter, Event } from '../../base/common/event.js';\nimport { cloneAndChange } from '../../base/common/objects.js';\nimport { Disposable } from '../../base/common/lifecycle.js';\nimport * as path from '../../base/common/path.js';\nimport * as platform from '../../base/common/platform.js';\nimport { URI } from '../../base/common/uri.js';\nimport { IURITransformer } from '../../base/common/uriIpc.js';\nimport { IServerChannel } from '../../base/parts/ipc/common/ipc.js';\nimport { createRandomIPCHandle } from '../../base/parts/ipc/node/ipc.net.js';\nimport { RemoteAgentConnectionContext } from '../../platform/remote/common/remoteAgentEnvironment.js';\nimport { IPtyHostService, IShellLaunchConfig, ITerminalProfile } from '../../platform/terminal/common/terminal.js';\nimport { IGetTerminalLayoutInfoArgs, ISetTerminalLayoutInfoArgs } from '../../platform/terminal/common/terminalProcess.js';\nimport { IWorkspaceFolder } from '../../platform/workspace/common/workspace.js';\nimport { createURITransformer } from '../../workbench/api/node/uriTransformer.js';\nimport { CLIServerBase, ICommandsExecuter } from '../../workbench/api/node/extHostCLIServer.js';\nimport { IEnvironmentVariableCollection } from '../../platform/terminal/common/environmentVariable.js';\nimport { MergedEnvironmentVariableCollection } from '../../platform/terminal/common/environmentVariableCollection.js';\nimport { deserializeEnvironmentDescriptionMap, deserializeEnvironmentVariableCollection } from '../../platform/terminal/common/environmentVariableShared.js';\nimport { ICreateTerminalProcessArguments, ICreateTerminalProcessResult, IWorkspaceFolderData, RemoteTerminalChannelEvent, RemoteTerminalChannelRequest } from '../../workbench/contrib/terminal/common/remote/terminal.js';\nimport * as terminalEnvironment from '../../workbench/contrib/terminal/common/terminalEnvironment.js';\nimport { AbstractVariableResolverService } from '../../workbench/services/configurationResolver/common/variableResolver.js';\nimport { buildUserEnvironment } from './extensionHostConnection.js';\nimport { IServerEnvironmentService } from './serverEnvironmentService.js';\nimport { IProductService } from '../../platform/product/common/productService.js';\nimport { IExtensionManagementService } from '../../platform/extensionManagement/common/extensionManagement.js';\nimport { IConfigurationService } from '../../platform/configuration/common/configuration.js';\nimport { ILogService } from '../../platform/log/common/log.js';\nimport { promiseWithResolvers } from '../../base/common/async.js';\nimport { shouldUseEnvironmentVariableCollection } from '../../platform/terminal/common/terminalEnvironment.js';\n\nclass CustomVariableResolver extends AbstractVariableResolverService {\n\tconstructor(\n\t\tenv: platform.IProcessEnvironment,\n\t\tworkspaceFolders: IWorkspaceFolder[],\n\t\tactiveFileResource: URI | undefined,\n\t\tresolvedVariables: { [name: string]: string },\n\t\textensionService: IExtensionManagementService,\n\t) {\n\t\tsuper({\n\t\t\tgetFolderUri: (folderName: string): URI | undefined => {\n\t\t\t\tconst found = workspaceFolders.filter(f => f.name === folderName);\n\t\t\t\tif (found && found.length > 0) {\n\t\t\t\t\treturn found[0].uri;\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tgetWorkspaceFolderCount: (): number => {\n\t\t\t\treturn workspaceFolders.length;\n\t\t\t},\n\t\t\tgetConfigurationValue: (folderUri: URI, section: string): string | undefined => {\n\t\t\t\treturn resolvedVariables[`config:${section}`];\n\t\t\t},\n\t\t\tgetExecPath: (): string | undefined => {\n\t\t\t\treturn env['VSCODE_EXEC_PATH'];\n\t\t\t},\n\t\t\tgetAppRoot: (): string | undefined => {\n\t\t\t\treturn env['VSCODE_CWD'];\n\t\t\t},\n\t\t\tgetFilePath: (): string | undefined => {\n\t\t\t\tif (activeFileResource) {\n\t\t\t\t\treturn path.normalize(activeFileResource.fsPath);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tgetSelectedText: (): string | undefined => {\n\t\t\t\treturn resolvedVariables['selectedText'];\n\t\t\t},\n\t\t\tgetLineNumber: (): string | undefined => {\n\t\t\t\treturn resolvedVariables['lineNumber'];\n\t\t\t},\n\t\t\tgetExtension: async id => {\n\t\t\t\tconst installed = await extensionService.getInstalled();\n\t\t\t\tconst found = installed.find(e => e.identifier.id === id);\n\t\t\t\treturn found && { extensionLocation: found.location };\n\t\t\t},\n\t\t}, undefined, Promise.resolve(os.homedir()), Promise.resolve(env));\n\t}\n}\n\nexport class RemoteTerminalChannel extends Disposable implements IServerChannel<RemoteAgentConnectionContext> {\n\n\tprivate _lastReqId = 0;\n\tprivate readonly _pendingCommands = new Map<number, {\n\t\tresolve: (data: any) => void;\n\t\treject: (err: any) => void;\n\t\turiTransformer: IURITransformer;\n\t}>();\n\n\tprivate readonly _onExecuteCommand = this._register(new Emitter<{ reqId: number; persistentProcessId: number; commandId: string; commandArgs: any[] }>());\n\treadonly onExecuteCommand = this._onExecuteCommand.event;\n\n\tconstructor(\n\t\tprivate readonly _environmentService: IServerEnvironmentService,\n\t\tprivate readonly _logService: ILogService,\n\t\tprivate readonly _ptyHostService: IPtyHostService,\n\t\tprivate readonly _productService: IProductService,\n\t\tprivate readonly _extensionManagementService: IExtensionManagementService,\n\t\tprivate readonly _configurationService: IConfigurationService\n\t) {\n\t\tsuper();\n\t}\n\n\tasync call(ctx: RemoteAgentConnectionContext, command: RemoteTerminalChannelRequest, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase RemoteTerminalChannelRequest.RestartPtyHost: return this._ptyHostService.restartPtyHost.apply(this._ptyHostService, args);\n\n\t\t\tcase RemoteTerminalChannelRequest.CreateProcess: {\n\t\t\t\tconst uriTransformer = createURITransformer(ctx.remoteAuthority);\n\t\t\t\treturn this._createProcess(uriTransformer, <ICreateTerminalProcessArguments>args);\n\t\t\t}\n\t\t\tcase RemoteTerminalChannelRequest.AttachToProcess: return this._ptyHostService.attachToProcess.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.DetachFromProcess: return this._ptyHostService.detachFromProcess.apply(this._ptyHostService, args);\n\n\t\t\tcase RemoteTerminalChannelRequest.ListProcesses: return this._ptyHostService.listProcesses.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.GetLatency: return this._ptyHostService.getLatency.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.GetPerformanceMarks: return this._ptyHostService.getPerformanceMarks.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.OrphanQuestionReply: return this._ptyHostService.orphanQuestionReply.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.AcceptPtyHostResolvedVariables: return this._ptyHostService.acceptPtyHostResolvedVariables.apply(this._ptyHostService, args);\n\n\t\t\tcase RemoteTerminalChannelRequest.Start: return this._ptyHostService.start.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.Input: return this._ptyHostService.input.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.AcknowledgeDataEvent: return this._ptyHostService.acknowledgeDataEvent.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.Shutdown: return this._ptyHostService.shutdown.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.Resize: return this._ptyHostService.resize.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.ClearBuffer: return this._ptyHostService.clearBuffer.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.GetInitialCwd: return this._ptyHostService.getInitialCwd.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.GetCwd: return this._ptyHostService.getCwd.apply(this._ptyHostService, args);\n\n\t\t\tcase RemoteTerminalChannelRequest.ProcessBinary: return this._ptyHostService.processBinary.apply(this._ptyHostService, args);\n\n\t\t\tcase RemoteTerminalChannelRequest.SendCommandResult: return this._sendCommandResult(args[0], args[1], args[2]);\n\t\t\tcase RemoteTerminalChannelRequest.InstallAutoReply: return this._ptyHostService.installAutoReply.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.UninstallAllAutoReplies: return this._ptyHostService.uninstallAllAutoReplies.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.GetDefaultSystemShell: return this._getDefaultSystemShell.apply(this, args);\n\t\t\tcase RemoteTerminalChannelRequest.GetProfiles: return this._getProfiles.apply(this, args);\n\t\t\tcase RemoteTerminalChannelRequest.GetEnvironment: return this._getEnvironment();\n\t\t\tcase RemoteTerminalChannelRequest.GetWslPath: return this._getWslPath(args[0], args[1]);\n\t\t\tcase RemoteTerminalChannelRequest.GetTerminalLayoutInfo: return this._ptyHostService.getTerminalLayoutInfo(<IGetTerminalLayoutInfoArgs>args);\n\t\t\tcase RemoteTerminalChannelRequest.SetTerminalLayoutInfo: return this._ptyHostService.setTerminalLayoutInfo(<ISetTerminalLayoutInfoArgs>args);\n\t\t\tcase RemoteTerminalChannelRequest.SerializeTerminalState: return this._ptyHostService.serializeTerminalState.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.ReviveTerminalProcesses: return this._ptyHostService.reviveTerminalProcesses.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.GetRevivedPtyNewId: return this._ptyHostService.getRevivedPtyNewId.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.SetUnicodeVersion: return this._ptyHostService.setUnicodeVersion.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.ReduceConnectionGraceTime: return this._reduceConnectionGraceTime();\n\t\t\tcase RemoteTerminalChannelRequest.UpdateIcon: return this._ptyHostService.updateIcon.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.UpdateTitle: return this._ptyHostService.updateTitle.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.UpdateProperty: return this._ptyHostService.updateProperty.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.RefreshProperty: return this._ptyHostService.refreshProperty.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.RequestDetachInstance: return this._ptyHostService.requestDetachInstance(args[0], args[1]);\n\t\t\tcase RemoteTerminalChannelRequest.AcceptDetachedInstance: return this._ptyHostService.acceptDetachInstanceReply(args[0], args[1]);\n\t\t\tcase RemoteTerminalChannelRequest.FreePortKillProcess: return this._ptyHostService.freePortKillProcess.apply(this._ptyHostService, args);\n\t\t\tcase RemoteTerminalChannelRequest.AcceptDetachInstanceReply: return this._ptyHostService.acceptDetachInstanceReply.apply(this._ptyHostService, args);\n\t\t}\n\n\t\t// @ts-expect-error Assert command is the `never` type to ensure all messages are handled\n\t\tthrow new Error(`IPC Command ${command} not found`);\n\t}\n\n\tlisten(_: any, event: RemoteTerminalChannelEvent, arg: any): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase RemoteTerminalChannelEvent.OnPtyHostExitEvent: return this._ptyHostService.onPtyHostExit || Event.None;\n\t\t\tcase RemoteTerminalChannelEvent.OnPtyHostStartEvent: return this._ptyHostService.onPtyHostStart || Event.None;\n\t\t\tcase RemoteTerminalChannelEvent.OnPtyHostUnresponsiveEvent: return this._ptyHostService.onPtyHostUnresponsive || Event.None;\n\t\t\tcase RemoteTerminalChannelEvent.OnPtyHostResponsiveEvent: return this._ptyHostService.onPtyHostResponsive || Event.None;\n\t\t\tcase RemoteTerminalChannelEvent.OnPtyHostRequestResolveVariablesEvent: return this._ptyHostService.onPtyHostRequestResolveVariables || Event.None;\n\t\t\tcase RemoteTerminalChannelEvent.OnProcessDataEvent: return this._ptyHostService.onProcessData;\n\t\t\tcase RemoteTerminalChannelEvent.OnProcessReadyEvent: return this._ptyHostService.onProcessReady;\n\t\t\tcase RemoteTerminalChannelEvent.OnProcessExitEvent: return this._ptyHostService.onProcessExit;\n\t\t\tcase RemoteTerminalChannelEvent.OnProcessReplayEvent: return this._ptyHostService.onProcessReplay;\n\t\t\tcase RemoteTerminalChannelEvent.OnProcessOrphanQuestion: return this._ptyHostService.onProcessOrphanQuestion;\n\t\t\tcase RemoteTerminalChannelEvent.OnExecuteCommand: return this.onExecuteCommand;\n\t\t\tcase RemoteTerminalChannelEvent.OnDidRequestDetach: return this._ptyHostService.onDidRequestDetach || Event.None;\n\t\t\tcase RemoteTerminalChannelEvent.OnDidChangeProperty: return this._ptyHostService.onDidChangeProperty;\n\t\t}\n\n\t\t// @ts-expect-error Assert event is the `never` type to ensure all messages are handled\n\t\tthrow new Error(`IPC Command ${event} not found`);\n\t}\n\n\tprivate async _createProcess(uriTransformer: IURITransformer, args: ICreateTerminalProcessArguments): Promise<ICreateTerminalProcessResult> {\n\t\tconst shellLaunchConfig: IShellLaunchConfig = {\n\t\t\tname: args.shellLaunchConfig.name,\n\t\t\texecutable: args.shellLaunchConfig.executable,\n\t\t\targs: args.shellLaunchConfig.args,\n\t\t\tcwd: (\n\t\t\t\ttypeof args.shellLaunchConfig.cwd === 'string' || typeof args.shellLaunchConfig.cwd === 'undefined'\n\t\t\t\t\t? args.shellLaunchConfig.cwd\n\t\t\t\t\t: URI.revive(uriTransformer.transformIncoming(args.shellLaunchConfig.cwd))\n\t\t\t),\n\t\t\tenv: args.shellLaunchConfig.env,\n\t\t\tuseShellEnvironment: args.shellLaunchConfig.useShellEnvironment,\n\t\t\treconnectionProperties: args.shellLaunchConfig.reconnectionProperties,\n\t\t\ttype: args.shellLaunchConfig.type,\n\t\t\tisFeatureTerminal: args.shellLaunchConfig.isFeatureTerminal\n\t\t};\n\n\n\t\tconst baseEnv = await buildUserEnvironment(args.resolverEnv, !!args.shellLaunchConfig.useShellEnvironment, platform.language, this._environmentService, this._logService, this._configurationService);\n\t\tthis._logService.trace('baseEnv', baseEnv);\n\n\t\tconst reviveWorkspaceFolder = (workspaceData: IWorkspaceFolderData): IWorkspaceFolder => {\n\t\t\treturn {\n\t\t\t\turi: URI.revive(uriTransformer.transformIncoming(workspaceData.uri)),\n\t\t\t\tname: workspaceData.name,\n\t\t\t\tindex: workspaceData.index,\n\t\t\t\ttoResource: () => {\n\t\t\t\t\tthrow new Error('Not implemented');\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t\tconst workspaceFolders = args.workspaceFolders.map(reviveWorkspaceFolder);\n\t\tconst activeWorkspaceFolder = args.activeWorkspaceFolder ? reviveWorkspaceFolder(args.activeWorkspaceFolder) : undefined;\n\t\tconst activeFileResource = args.activeFileResource ? URI.revive(uriTransformer.transformIncoming(args.activeFileResource)) : undefined;\n\t\tconst customVariableResolver = new CustomVariableResolver(baseEnv, workspaceFolders, activeFileResource, args.resolvedVariables, this._extensionManagementService);\n\t\tconst variableResolver = terminalEnvironment.createVariableResolver(activeWorkspaceFolder, process.env, customVariableResolver);\n\n\t\t// Get the initial cwd\n\t\tconst initialCwd = await terminalEnvironment.getCwd(shellLaunchConfig, os.homedir(), variableResolver, activeWorkspaceFolder?.uri, args.configuration['terminal.integrated.cwd'], this._logService);\n\t\tshellLaunchConfig.cwd = initialCwd;\n\n\t\tconst envPlatformKey = platform.isWindows ? 'terminal.integrated.env.windows' : (platform.isMacintosh ? 'terminal.integrated.env.osx' : 'terminal.integrated.env.linux');\n\t\tconst envFromConfig = args.configuration[envPlatformKey];\n\t\tconst env = await terminalEnvironment.createTerminalEnvironment(\n\t\t\tshellLaunchConfig,\n\t\t\tenvFromConfig,\n\t\t\tvariableResolver,\n\t\t\tthis._productService.version,\n\t\t\targs.configuration['terminal.integrated.detectLocale'],\n\t\t\tbaseEnv\n\t\t);\n\n\t\t// Apply extension environment variable collections to the environment\n\t\tif (shouldUseEnvironmentVariableCollection(shellLaunchConfig)) {\n\t\t\tconst entries: [string, IEnvironmentVariableCollection][] = [];\n\t\t\tfor (const [k, v, d] of args.envVariableCollections) {\n\t\t\t\tentries.push([k, { map: deserializeEnvironmentVariableCollection(v), descriptionMap: deserializeEnvironmentDescriptionMap(d) }]);\n\t\t\t}\n\t\t\tconst envVariableCollections = new Map<string, IEnvironmentVariableCollection>(entries);\n\t\t\tconst mergedCollection = new MergedEnvironmentVariableCollection(envVariableCollections);\n\t\t\tconst workspaceFolder = activeWorkspaceFolder ? activeWorkspaceFolder ?? undefined : undefined;\n\t\t\tawait mergedCollection.applyToProcessEnvironment(env, { workspaceFolder }, variableResolver);\n\t\t}\n\n\t\t// Fork the process and listen for messages\n\t\tthis._logService.debug(`Terminal process launching on remote agent`, { shellLaunchConfig, initialCwd, cols: args.cols, rows: args.rows, env });\n\n\t\t// Setup the CLI server to support forwarding commands run from the CLI\n\t\tconst ipcHandlePath = createRandomIPCHandle();\n\t\tenv.VSCODE_IPC_HOOK_CLI = ipcHandlePath;\n\n\t\tconst persistentProcessId = await this._ptyHostService.createProcess(shellLaunchConfig, initialCwd, args.cols, args.rows, args.unicodeVersion, env, baseEnv, args.options, args.shouldPersistTerminal, args.workspaceId, args.workspaceName);\n\t\tconst commandsExecuter: ICommandsExecuter = {\n\t\t\texecuteCommand: <T>(id: string, ...args: any[]): Promise<T> => this._executeCommand(persistentProcessId, id, args, uriTransformer)\n\t\t};\n\t\tconst cliServer = new CLIServerBase(commandsExecuter, this._logService, ipcHandlePath);\n\t\tthis._ptyHostService.onProcessExit(e => e.id === persistentProcessId && cliServer.dispose());\n\n\t\treturn {\n\t\t\tpersistentTerminalId: persistentProcessId,\n\t\t\tresolvedShellLaunchConfig: shellLaunchConfig\n\t\t};\n\t}\n\n\tprivate _executeCommand<T>(persistentProcessId: number, commandId: string, commandArgs: any[], uriTransformer: IURITransformer): Promise<T> {\n\t\tconst { resolve, reject, promise } = promiseWithResolvers<T>();\n\n\t\tconst reqId = ++this._lastReqId;\n\t\tthis._pendingCommands.set(reqId, { resolve, reject, uriTransformer });\n\n\t\tconst serializedCommandArgs = cloneAndChange(commandArgs, (obj) => {\n\t\t\tif (obj && obj.$mid === 1) {\n\t\t\t\t// this is UriComponents\n\t\t\t\treturn uriTransformer.transformOutgoing(obj);\n\t\t\t}\n\t\t\tif (obj && obj instanceof URI) {\n\t\t\t\treturn uriTransformer.transformOutgoingURI(obj);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t\tthis._onExecuteCommand.fire({\n\t\t\treqId,\n\t\t\tpersistentProcessId,\n\t\t\tcommandId,\n\t\t\tcommandArgs: serializedCommandArgs\n\t\t});\n\n\t\treturn promise;\n\t}\n\n\tprivate _sendCommandResult(reqId: number, isError: boolean, serializedPayload: any): void {\n\t\tconst data = this._pendingCommands.get(reqId);\n\t\tif (!data) {\n\t\t\treturn;\n\t\t}\n\t\tthis._pendingCommands.delete(reqId);\n\t\tconst payload = cloneAndChange(serializedPayload, (obj) => {\n\t\t\tif (obj && obj.$mid === 1) {\n\t\t\t\t// this is UriComponents\n\t\t\t\treturn data.uriTransformer.transformIncoming(obj);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t});\n\t\tif (isError) {\n\t\t\tdata.reject(payload);\n\t\t} else {\n\t\t\tdata.resolve(payload);\n\t\t}\n\t}\n\n\tprivate _getDefaultSystemShell(osOverride?: platform.OperatingSystem): Promise<string> {\n\t\treturn this._ptyHostService.getDefaultSystemShell(osOverride);\n\t}\n\n\tprivate async _getProfiles(workspaceId: string, profiles: unknown, defaultProfile: unknown, includeDetectedProfiles?: boolean): Promise<ITerminalProfile[]> {\n\t\treturn this._ptyHostService.getProfiles(workspaceId, profiles, defaultProfile, includeDetectedProfiles) || [];\n\t}\n\n\tprivate _getEnvironment(): platform.IProcessEnvironment {\n\t\treturn { ...process.env };\n\t}\n\n\tprivate _getWslPath(original: string, direction: 'unix-to-win' | 'win-to-unix'): Promise<string> {\n\t\treturn this._ptyHostService.getWslPath(original, direction);\n\t}\n\n\n\tprivate _reduceConnectionGraceTime(): Promise<void> {\n\t\treturn this._ptyHostService.reduceConnectionGraceTime();\n\t}\n}\n"],
  "mappings": ";;AAKA,YAAY,QAAQ;AACpB,SAAS,SAAS,aAAa;AAC/B,SAAS,sBAAsB;AAC/B,SAAS,kBAAkB;AAC3B,YAAY,UAAU;AACtB,YAAY,cAAc;AAC1B,SAAS,WAAW;AACpB,SAAS,uBAAuB;AAChC,SAAS,sBAAsB;AAC/B,SAAS,6BAA6B;AACtC,SAAS,oCAAoC;AAC7C,SAAS,iBAAiB,oBAAoB,wBAAwB;AACtE,SAAS,4BAA4B,kCAAkC;AACvE,SAAS,wBAAwB;AACjC,SAAS,4BAA4B;AACrC,SAAS,eAAe,yBAAyB;AACjD,SAAS,sCAAsC;AAC/C,SAAS,2CAA2C;AACpD,SAAS,sCAAsC,gDAAgD;AAC/F,SAAS,iCAAiC,8BAA8B,sBAAsB,4BAA4B,oCAAoC;AAC9J,YAAY,yBAAyB;AACrC,SAAS,uCAAuC;AAChD,SAAS,4BAA4B;AACrC,SAAS,iCAAiC;AAC1C,SAAS,uBAAuB;AAChC,SAAS,mCAAmC;AAC5C,SAAS,6BAA6B;AACtC,SAAS,mBAAmB;AAC5B,SAAS,4BAA4B;AACrC,SAAS,8CAA8C;AAEvD,MAAM,+BAA+B,gCAAgC;AAAA,EApCrE,OAoCqE;AAAA;AAAA;AAAA,EACpE,YACC,KACA,kBACA,oBACA,mBACA,kBACC;AACD,UAAM;AAAA,MACL,cAAc,wBAAC,eAAwC;AACtD,cAAM,QAAQ,iBAAiB,OAAO,OAAK,EAAE,SAAS,UAAU;AAChE,YAAI,SAAS,MAAM,SAAS,GAAG;AAC9B,iBAAO,MAAM,CAAC,EAAE;AAAA,QACjB;AACA,eAAO;AAAA,MACR,GANc;AAAA,MAOd,yBAAyB,6BAAc;AACtC,eAAO,iBAAiB;AAAA,MACzB,GAFyB;AAAA,MAGzB,uBAAuB,wBAAC,WAAgB,YAAwC;AAC/E,eAAO,kBAAkB,UAAU,OAAO,EAAE;AAAA,MAC7C,GAFuB;AAAA,MAGvB,aAAa,6BAA0B;AACtC,eAAO,IAAI,kBAAkB;AAAA,MAC9B,GAFa;AAAA,MAGb,YAAY,6BAA0B;AACrC,eAAO,IAAI,YAAY;AAAA,MACxB,GAFY;AAAA,MAGZ,aAAa,6BAA0B;AACtC,YAAI,oBAAoB;AACvB,iBAAO,KAAK,UAAU,mBAAmB,MAAM;AAAA,QAChD;AACA,eAAO;AAAA,MACR,GALa;AAAA,MAMb,iBAAiB,6BAA0B;AAC1C,eAAO,kBAAkB,cAAc;AAAA,MACxC,GAFiB;AAAA,MAGjB,eAAe,6BAA0B;AACxC,eAAO,kBAAkB,YAAY;AAAA,MACtC,GAFe;AAAA,MAGf,cAAc,8BAAM,OAAM;AACzB,cAAM,YAAY,MAAM,iBAAiB,aAAa;AACtD,cAAM,QAAQ,UAAU,KAAK,OAAK,EAAE,WAAW,OAAO,EAAE;AACxD,eAAO,SAAS,EAAE,mBAAmB,MAAM,SAAS;AAAA,MACrD,GAJc;AAAA,IAKf,GAAG,QAAW,QAAQ,QAAQ,GAAG,QAAQ,CAAC,GAAG,QAAQ,QAAQ,GAAG,CAAC;AAAA,EAClE;AACD;AAEO,MAAM,8BAA8B,WAAmE;AAAA,EAY7G,YACkB,qBACA,aACA,iBACA,iBACA,6BACA,uBAChB;AACD,UAAM;AAPW;AACA;AACA;AACA;AACA;AACA;AAAA,EAGlB;AAAA,EA1GD,OAqF8G;AAAA;AAAA;AAAA,EAErG,aAAa;AAAA,EACJ,mBAAmB,oBAAI,IAIrC;AAAA,EAEc,oBAAoB,KAAK,UAAU,IAAI,QAA+F,CAAC;AAAA,EAC/I,mBAAmB,KAAK,kBAAkB;AAAA,EAanD,MAAM,KAAK,KAAmC,SAAuC,MAA0B;AAC9G,YAAQ,SAAS;AAAA,MAChB,KAAK,6BAA6B;AAAgB,eAAO,KAAK,gBAAgB,eAAe,MAAM,KAAK,iBAAiB,IAAI;AAAA,MAE7H,KAAK,6BAA6B,eAAe;AAChD,cAAM,iBAAiB,qBAAqB,IAAI,eAAe;AAC/D,eAAO,KAAK,eAAe,gBAAiD,IAAI;AAAA,MACjF;AAAA,MACA,KAAK,6BAA6B;AAAiB,eAAO,KAAK,gBAAgB,gBAAgB,MAAM,KAAK,iBAAiB,IAAI;AAAA,MAC/H,KAAK,6BAA6B;AAAmB,eAAO,KAAK,gBAAgB,kBAAkB,MAAM,KAAK,iBAAiB,IAAI;AAAA,MAEnI,KAAK,6BAA6B;AAAe,eAAO,KAAK,gBAAgB,cAAc,MAAM,KAAK,iBAAiB,IAAI;AAAA,MAC3H,KAAK,6BAA6B;AAAY,eAAO,KAAK,gBAAgB,WAAW,MAAM,KAAK,iBAAiB,IAAI;AAAA,MACrH,KAAK,6BAA6B;AAAqB,eAAO,KAAK,gBAAgB,oBAAoB,MAAM,KAAK,iBAAiB,IAAI;AAAA,MACvI,KAAK,6BAA6B;AAAqB,eAAO,KAAK,gBAAgB,oBAAoB,MAAM,KAAK,iBAAiB,IAAI;AAAA,MACvI,KAAK,6BAA6B;AAAgC,eAAO,KAAK,gBAAgB,+BAA+B,MAAM,KAAK,iBAAiB,IAAI;AAAA,MAE7J,KAAK,6BAA6B;AAAO,eAAO,KAAK,gBAAgB,MAAM,MAAM,KAAK,iBAAiB,IAAI;AAAA,MAC3G,KAAK,6BAA6B;AAAO,eAAO,KAAK,gBAAgB,MAAM,MAAM,KAAK,iBAAiB,IAAI;AAAA,MAC3G,KAAK,6BAA6B;AAAsB,eAAO,KAAK,gBAAgB,qBAAqB,MAAM,KAAK,iBAAiB,IAAI;AAAA,MACzI,KAAK,6BAA6B;AAAU,eAAO,KAAK,gBAAgB,SAAS,MAAM,KAAK,iBAAiB,IAAI;AAAA,MACjH,KAAK,6BAA6B;AAAQ,eAAO,KAAK,gBAAgB,OAAO,MAAM,KAAK,iBAAiB,IAAI;AAAA,MAC7G,KAAK,6BAA6B;AAAa,eAAO,KAAK,gBAAgB,YAAY,MAAM,KAAK,iBAAiB,IAAI;AAAA,MACvH,KAAK,6BAA6B;AAAe,eAAO,KAAK,gBAAgB,cAAc,MAAM,KAAK,iBAAiB,IAAI;AAAA,MAC3H,KAAK,6BAA6B;AAAQ,eAAO,KAAK,gBAAgB,OAAO,MAAM,KAAK,iBAAiB,IAAI;AAAA,MAE7G,KAAK,6BAA6B;AAAe,eAAO,KAAK,gBAAgB,cAAc,MAAM,KAAK,iBAAiB,IAAI;AAAA,MAE3H,KAAK,6BAA6B;AAAmB,eAAO,KAAK,mBAAmB,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAAA,MAC7G,KAAK,6BAA6B;AAAkB,eAAO,KAAK,gBAAgB,iBAAiB,MAAM,KAAK,iBAAiB,IAAI;AAAA,MACjI,KAAK,6BAA6B;AAAyB,eAAO,KAAK,gBAAgB,wBAAwB,MAAM,KAAK,iBAAiB,IAAI;AAAA,MAC/I,KAAK,6BAA6B;AAAuB,eAAO,KAAK,uBAAuB,MAAM,MAAM,IAAI;AAAA,MAC5G,KAAK,6BAA6B;AAAa,eAAO,KAAK,aAAa,MAAM,MAAM,IAAI;AAAA,MACxF,KAAK,6BAA6B;AAAgB,eAAO,KAAK,gBAAgB;AAAA,MAC9E,KAAK,6BAA6B;AAAY,eAAO,KAAK,YAAY,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAAA,MACtF,KAAK,6BAA6B;AAAuB,eAAO,KAAK,gBAAgB,sBAAkD,IAAI;AAAA,MAC3I,KAAK,6BAA6B;AAAuB,eAAO,KAAK,gBAAgB,sBAAkD,IAAI;AAAA,MAC3I,KAAK,6BAA6B;AAAwB,eAAO,KAAK,gBAAgB,uBAAuB,MAAM,KAAK,iBAAiB,IAAI;AAAA,MAC7I,KAAK,6BAA6B;AAAyB,eAAO,KAAK,gBAAgB,wBAAwB,MAAM,KAAK,iBAAiB,IAAI;AAAA,MAC/I,KAAK,6BAA6B;AAAoB,eAAO,KAAK,gBAAgB,mBAAmB,MAAM,KAAK,iBAAiB,IAAI;AAAA,MACrI,KAAK,6BAA6B;AAAmB,eAAO,KAAK,gBAAgB,kBAAkB,MAAM,KAAK,iBAAiB,IAAI;AAAA,MACnI,KAAK,6BAA6B;AAA2B,eAAO,KAAK,2BAA2B;AAAA,MACpG,KAAK,6BAA6B;AAAY,eAAO,KAAK,gBAAgB,WAAW,MAAM,KAAK,iBAAiB,IAAI;AAAA,MACrH,KAAK,6BAA6B;AAAa,eAAO,KAAK,gBAAgB,YAAY,MAAM,KAAK,iBAAiB,IAAI;AAAA,MACvH,KAAK,6BAA6B;AAAgB,eAAO,KAAK,gBAAgB,eAAe,MAAM,KAAK,iBAAiB,IAAI;AAAA,MAC7H,KAAK,6BAA6B;AAAiB,eAAO,KAAK,gBAAgB,gBAAgB,MAAM,KAAK,iBAAiB,IAAI;AAAA,MAC/H,KAAK,6BAA6B;AAAuB,eAAO,KAAK,gBAAgB,sBAAsB,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAAA,MAC3H,KAAK,6BAA6B;AAAwB,eAAO,KAAK,gBAAgB,0BAA0B,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAAA,MAChI,KAAK,6BAA6B;AAAqB,eAAO,KAAK,gBAAgB,oBAAoB,MAAM,KAAK,iBAAiB,IAAI;AAAA,MACvI,KAAK,6BAA6B;AAA2B,eAAO,KAAK,gBAAgB,0BAA0B,MAAM,KAAK,iBAAiB,IAAI;AAAA,IACpJ;AAGA,UAAM,IAAI,MAAM,eAAe,OAAO,YAAY;AAAA,EACnD;AAAA,EAEA,OAAO,GAAQ,OAAmC,KAAsB;AACvE,YAAQ,OAAO;AAAA,MACd,KAAK,2BAA2B;AAAoB,eAAO,KAAK,gBAAgB,iBAAiB,MAAM;AAAA,MACvG,KAAK,2BAA2B;AAAqB,eAAO,KAAK,gBAAgB,kBAAkB,MAAM;AAAA,MACzG,KAAK,2BAA2B;AAA4B,eAAO,KAAK,gBAAgB,yBAAyB,MAAM;AAAA,MACvH,KAAK,2BAA2B;AAA0B,eAAO,KAAK,gBAAgB,uBAAuB,MAAM;AAAA,MACnH,KAAK,2BAA2B;AAAuC,eAAO,KAAK,gBAAgB,oCAAoC,MAAM;AAAA,MAC7I,KAAK,2BAA2B;AAAoB,eAAO,KAAK,gBAAgB;AAAA,MAChF,KAAK,2BAA2B;AAAqB,eAAO,KAAK,gBAAgB;AAAA,MACjF,KAAK,2BAA2B;AAAoB,eAAO,KAAK,gBAAgB;AAAA,MAChF,KAAK,2BAA2B;AAAsB,eAAO,KAAK,gBAAgB;AAAA,MAClF,KAAK,2BAA2B;AAAyB,eAAO,KAAK,gBAAgB;AAAA,MACrF,KAAK,2BAA2B;AAAkB,eAAO,KAAK;AAAA,MAC9D,KAAK,2BAA2B;AAAoB,eAAO,KAAK,gBAAgB,sBAAsB,MAAM;AAAA,MAC5G,KAAK,2BAA2B;AAAqB,eAAO,KAAK,gBAAgB;AAAA,IAClF;AAGA,UAAM,IAAI,MAAM,eAAe,KAAK,YAAY;AAAA,EACjD;AAAA,EAEA,MAAc,eAAe,gBAAiC,MAA8E;AAC3I,UAAM,oBAAwC;AAAA,MAC7C,MAAM,KAAK,kBAAkB;AAAA,MAC7B,YAAY,KAAK,kBAAkB;AAAA,MACnC,MAAM,KAAK,kBAAkB;AAAA,MAC7B,KACC,OAAO,KAAK,kBAAkB,QAAQ,YAAY,OAAO,KAAK,kBAAkB,QAAQ,cACrF,KAAK,kBAAkB,MACvB,IAAI,OAAO,eAAe,kBAAkB,KAAK,kBAAkB,GAAG,CAAC;AAAA,MAE3E,KAAK,KAAK,kBAAkB;AAAA,MAC5B,qBAAqB,KAAK,kBAAkB;AAAA,MAC5C,wBAAwB,KAAK,kBAAkB;AAAA,MAC/C,MAAM,KAAK,kBAAkB;AAAA,MAC7B,mBAAmB,KAAK,kBAAkB;AAAA,IAC3C;AAGA,UAAM,UAAU,MAAM,qBAAqB,KAAK,aAAa,CAAC,CAAC,KAAK,kBAAkB,qBAAqB,SAAS,UAAU,KAAK,qBAAqB,KAAK,aAAa,KAAK,qBAAqB;AACpM,SAAK,YAAY,MAAM,WAAW,OAAO;AAEzC,UAAM,wBAAwB,wBAAC,kBAA0D;AACxF,aAAO;AAAA,QACN,KAAK,IAAI,OAAO,eAAe,kBAAkB,cAAc,GAAG,CAAC;AAAA,QACnE,MAAM,cAAc;AAAA,QACpB,OAAO,cAAc;AAAA,QACrB,YAAY,6BAAM;AACjB,gBAAM,IAAI,MAAM,iBAAiB;AAAA,QAClC,GAFY;AAAA,MAGb;AAAA,IACD,GAT8B;AAU9B,UAAM,mBAAmB,KAAK,iBAAiB,IAAI,qBAAqB;AACxE,UAAM,wBAAwB,KAAK,wBAAwB,sBAAsB,KAAK,qBAAqB,IAAI;AAC/G,UAAM,qBAAqB,KAAK,qBAAqB,IAAI,OAAO,eAAe,kBAAkB,KAAK,kBAAkB,CAAC,IAAI;AAC7H,UAAM,yBAAyB,IAAI,uBAAuB,SAAS,kBAAkB,oBAAoB,KAAK,mBAAmB,KAAK,2BAA2B;AACjK,UAAM,mBAAmB,oBAAoB,uBAAuB,uBAAuB,QAAQ,KAAK,sBAAsB;AAG9H,UAAM,aAAa,MAAM,oBAAoB,OAAO,mBAAmB,GAAG,QAAQ,GAAG,kBAAkB,uBAAuB,KAAK,KAAK,cAAc,yBAAyB,GAAG,KAAK,WAAW;AAClM,sBAAkB,MAAM;AAExB,UAAM,iBAAiB,SAAS,YAAY,oCAAqC,SAAS,cAAc,gCAAgC;AACxI,UAAM,gBAAgB,KAAK,cAAc,cAAc;AACvD,UAAM,MAAM,MAAM,oBAAoB;AAAA,MACrC;AAAA,MACA;AAAA,MACA;AAAA,MACA,KAAK,gBAAgB;AAAA,MACrB,KAAK,cAAc,kCAAkC;AAAA,MACrD;AAAA,IACD;AAGA,QAAI,uCAAuC,iBAAiB,GAAG;AAC9D,YAAM,UAAsD,CAAC;AAC7D,iBAAW,CAAC,GAAG,GAAG,CAAC,KAAK,KAAK,wBAAwB;AACpD,gBAAQ,KAAK,CAAC,GAAG,EAAE,KAAK,yCAAyC,CAAC,GAAG,gBAAgB,qCAAqC,CAAC,EAAE,CAAC,CAAC;AAAA,MAChI;AACA,YAAM,yBAAyB,IAAI,IAA4C,OAAO;AACtF,YAAM,mBAAmB,IAAI,oCAAoC,sBAAsB;AACvF,YAAM,kBAAkB,wBAAwB,yBAAyB,SAAY;AACrF,YAAM,iBAAiB,0BAA0B,KAAK,EAAE,gBAAgB,GAAG,gBAAgB;AAAA,IAC5F;AAGA,SAAK,YAAY,MAAM,8CAA8C,EAAE,mBAAmB,YAAY,MAAM,KAAK,MAAM,MAAM,KAAK,MAAM,IAAI,CAAC;AAG7I,UAAM,gBAAgB,sBAAsB;AAC5C,QAAI,sBAAsB;AAE1B,UAAM,sBAAsB,MAAM,KAAK,gBAAgB,cAAc,mBAAmB,YAAY,KAAK,MAAM,KAAK,MAAM,KAAK,gBAAgB,KAAK,SAAS,KAAK,SAAS,KAAK,uBAAuB,KAAK,aAAa,KAAK,aAAa;AAC3O,UAAM,mBAAsC;AAAA,MAC3C,gBAAgB,wBAAI,OAAeA,UAA4B,KAAK,gBAAgB,qBAAqB,IAAIA,OAAM,cAAc,GAAjH;AAAA,IACjB;AACA,UAAM,YAAY,IAAI,cAAc,kBAAkB,KAAK,aAAa,aAAa;AACrF,SAAK,gBAAgB,cAAc,OAAK,EAAE,OAAO,uBAAuB,UAAU,QAAQ,CAAC;AAE3F,WAAO;AAAA,MACN,sBAAsB;AAAA,MACtB,2BAA2B;AAAA,IAC5B;AAAA,EACD;AAAA,EAEQ,gBAAmB,qBAA6B,WAAmB,aAAoB,gBAA6C;AAC3I,UAAM,EAAE,SAAS,QAAQ,QAAQ,IAAI,qBAAwB;AAE7D,UAAM,QAAQ,EAAE,KAAK;AACrB,SAAK,iBAAiB,IAAI,OAAO,EAAE,SAAS,QAAQ,eAAe,CAAC;AAEpE,UAAM,wBAAwB,eAAe,aAAa,CAAC,QAAQ;AAClE,UAAI,OAAO,IAAI,SAAS,GAAG;AAE1B,eAAO,eAAe,kBAAkB,GAAG;AAAA,MAC5C;AACA,UAAI,OAAO,eAAe,KAAK;AAC9B,eAAO,eAAe,qBAAqB,GAAG;AAAA,MAC/C;AACA,aAAO;AAAA,IACR,CAAC;AACD,SAAK,kBAAkB,KAAK;AAAA,MAC3B;AAAA,MACA;AAAA,MACA;AAAA,MACA,aAAa;AAAA,IACd,CAAC;AAED,WAAO;AAAA,EACR;AAAA,EAEQ,mBAAmB,OAAe,SAAkB,mBAA8B;AACzF,UAAM,OAAO,KAAK,iBAAiB,IAAI,KAAK;AAC5C,QAAI,CAAC,MAAM;AACV;AAAA,IACD;AACA,SAAK,iBAAiB,OAAO,KAAK;AAClC,UAAM,UAAU,eAAe,mBAAmB,CAAC,QAAQ;AAC1D,UAAI,OAAO,IAAI,SAAS,GAAG;AAE1B,eAAO,KAAK,eAAe,kBAAkB,GAAG;AAAA,MACjD;AACA,aAAO;AAAA,IACR,CAAC;AACD,QAAI,SAAS;AACZ,WAAK,OAAO,OAAO;AAAA,IACpB,OAAO;AACN,WAAK,QAAQ,OAAO;AAAA,IACrB;AAAA,EACD;AAAA,EAEQ,uBAAuB,YAAwD;AACtF,WAAO,KAAK,gBAAgB,sBAAsB,UAAU;AAAA,EAC7D;AAAA,EAEA,MAAc,aAAa,aAAqB,UAAmB,gBAAyB,yBAAgE;AAC3J,WAAO,KAAK,gBAAgB,YAAY,aAAa,UAAU,gBAAgB,uBAAuB,KAAK,CAAC;AAAA,EAC7G;AAAA,EAEQ,kBAAgD;AACvD,WAAO,EAAE,GAAG,QAAQ,IAAI;AAAA,EACzB;AAAA,EAEQ,YAAY,UAAkB,WAA2D;AAChG,WAAO,KAAK,gBAAgB,WAAW,UAAU,SAAS;AAAA,EAC3D;AAAA,EAGQ,6BAA4C;AACnD,WAAO,KAAK,gBAAgB,0BAA0B;AAAA,EACvD;AACD;",
  "names": ["args"]
}
