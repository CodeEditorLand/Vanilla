{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/server/node/webClientServer.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as crypto from \"crypto\";\nimport { createReadStream, promises } from \"fs\";\nimport type * as http from \"http\";\nimport * as path from \"path\";\nimport * as url from \"url\";\nimport * as cookie from \"cookie\";\nimport { isESM } from \"../../base/common/amd.js\";\nimport { streamToBuffer } from \"../../base/common/buffer.js\";\nimport { CancellationToken } from \"../../base/common/cancellation.js\";\nimport { CharCode } from \"../../base/common/charCode.js\";\nimport { isEqualOrParent } from \"../../base/common/extpath.js\";\nimport { getMediaMime } from \"../../base/common/mime.js\";\nimport {\n\tFileAccess,\n\tSchemas,\n\tbuiltinExtensionsPath,\n\tconnectionTokenCookieName,\n\tconnectionTokenQueryName,\n} from \"../../base/common/network.js\";\nimport { dirname, extname, join, normalize } from \"../../base/common/path.js\";\nimport { isLinux } from \"../../base/common/platform.js\";\nimport type { IProductConfiguration } from \"../../base/common/product.js\";\nimport { isString } from \"../../base/common/types.js\";\nimport { URI } from \"../../base/common/uri.js\";\nimport { generateUuid } from \"../../base/common/uuid.js\";\nimport type { IHeaders } from \"../../base/parts/request/common/request.js\";\nimport { ICSSDevelopmentService } from \"../../platform/cssDev/node/cssDevService.js\";\nimport type { IExtensionManifest } from \"../../platform/extensions/common/extensions.js\";\nimport { ILogService } from \"../../platform/log/common/log.js\";\nimport { IProductService } from \"../../platform/product/common/productService.js\";\nimport {\n\tIRequestService,\n\tasTextOrError,\n} from \"../../platform/request/common/request.js\";\nimport {\n\ttype ServerConnectionToken,\n\tServerConnectionTokenType,\n} from \"./serverConnectionToken.js\";\nimport { IServerEnvironmentService } from \"./serverEnvironmentService.js\";\n\nconst textMimeType: { [ext: string]: string | undefined } = {\n\t\".html\": \"text/html\",\n\t\".js\": \"text/javascript\",\n\t\".json\": \"application/json\",\n\t\".css\": \"text/css\",\n\t\".svg\": \"image/svg+xml\",\n};\n\n/**\n * Return an error to the client.\n */\nexport async function serveError(\n\treq: http.IncomingMessage,\n\tres: http.ServerResponse,\n\terrorCode: number,\n\terrorMessage: string,\n): Promise<void> {\n\tres.writeHead(errorCode, { \"Content-Type\": \"text/plain\" });\n\tres.end(errorMessage);\n}\n\nexport enum CacheControl {\n\tNO_CACHING = 0,\n\tETAG = 1,\n\tNO_EXPIRY = 2,\n}\n\n/**\n * Serve a file at a given path or 404 if the file is missing.\n */\nexport async function serveFile(\n\tfilePath: string,\n\tcacheControl: CacheControl,\n\tlogService: ILogService,\n\treq: http.IncomingMessage,\n\tres: http.ServerResponse,\n\tresponseHeaders: Record<string, string>,\n): Promise<void> {\n\ttry {\n\t\tconst stat = await promises.stat(filePath); // throws an error if file doesn't exist\n\t\tif (cacheControl === CacheControl.ETAG) {\n\t\t\t// Check if file modified since\n\t\t\tconst etag = `W/\"${[stat.ino, stat.size, stat.mtime.getTime()].join(\"-\")}\"`; // weak validator (https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag)\n\t\t\tif (req.headers[\"if-none-match\"] === etag) {\n\t\t\t\tres.writeHead(304);\n\t\t\t\treturn void res.end();\n\t\t\t}\n\n\t\t\tresponseHeaders[\"Etag\"] = etag;\n\t\t} else if (cacheControl === CacheControl.NO_EXPIRY) {\n\t\t\tresponseHeaders[\"Cache-Control\"] = \"public, max-age=31536000\";\n\t\t} else if (cacheControl === CacheControl.NO_CACHING) {\n\t\t\tresponseHeaders[\"Cache-Control\"] = \"no-store\";\n\t\t}\n\n\t\tresponseHeaders[\"Content-Type\"] =\n\t\t\ttextMimeType[extname(filePath)] ||\n\t\t\tgetMediaMime(filePath) ||\n\t\t\t\"text/plain\";\n\n\t\tres.writeHead(200, responseHeaders);\n\n\t\t// Data\n\t\tcreateReadStream(filePath).pipe(res);\n\t} catch (error) {\n\t\tif (error.code !== \"ENOENT\") {\n\t\t\tlogService.error(error);\n\t\t\tconsole.error(error.toString());\n\t\t} else {\n\t\t\tconsole.error(`File not found: ${filePath}`);\n\t\t}\n\n\t\tres.writeHead(404, { \"Content-Type\": \"text/plain\" });\n\t\treturn void res.end(\"Not found\");\n\t}\n}\n\nconst APP_ROOT = dirname(FileAccess.asFileUri(\"\").fsPath);\n\nexport class WebClientServer {\n\tprivate readonly _webExtensionResourceUrlTemplate: URI | undefined;\n\n\tprivate readonly _staticRoute: string;\n\tprivate readonly _callbackRoute: string;\n\tprivate readonly _webExtensionRoute: string;\n\n\tconstructor(\n\t\tprivate readonly _connectionToken: ServerConnectionToken,\n\t\tprivate readonly _basePath: string,\n\t\treadonly serverRootPath: string,\n\t\t@IServerEnvironmentService private readonly _environmentService: IServerEnvironmentService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@IRequestService private readonly _requestService: IRequestService,\n\t\t@IProductService private readonly _productService: IProductService,\n\t\t@ICSSDevelopmentService private readonly _cssDevService: ICSSDevelopmentService\n\t) {\n\t\tthis._webExtensionResourceUrlTemplate = this._productService.extensionsGallery?.resourceUrlTemplate ? URI.parse(this._productService.extensionsGallery.resourceUrlTemplate) : undefined;\n\n\t\tthis._staticRoute = `${serverRootPath}/static`;\n\t\tthis._callbackRoute = `${serverRootPath}/callback`;\n\t\tthis._webExtensionRoute = `${serverRootPath}/web-extension-resource`;\n\t}\n\n\t/**\n\t * Handle web resources (i.e. only needed by the web client).\n\t * **NOTE**: This method is only invoked when the server has web bits.\n\t * **NOTE**: This method is only invoked after the connection token has been validated.\n\t */\n\tasync handle(\n\t\treq: http.IncomingMessage,\n\t\tres: http.ServerResponse,\n\t\tparsedUrl: url.UrlWithParsedQuery,\n\t): Promise<void> {\n\t\ttry {\n\t\t\tconst pathname = parsedUrl.pathname!;\n\n\t\t\tif (\n\t\t\t\tpathname.startsWith(this._staticRoute) &&\n\t\t\t\tpathname.charCodeAt(this._staticRoute.length) === CharCode.Slash\n\t\t\t) {\n\t\t\t\treturn this._handleStatic(req, res, parsedUrl);\n\t\t\t}\n\t\t\tif (pathname === this._basePath) {\n\t\t\t\treturn this._handleRoot(req, res, parsedUrl);\n\t\t\t}\n\t\t\tif (pathname === this._callbackRoute) {\n\t\t\t\t// callback support\n\t\t\t\treturn this._handleCallback(res);\n\t\t\t}\n\t\t\tif (\n\t\t\t\tpathname.startsWith(this._webExtensionRoute) &&\n\t\t\t\tpathname.charCodeAt(this._webExtensionRoute.length) ===\n\t\t\t\t\tCharCode.Slash\n\t\t\t) {\n\t\t\t\t// extension resource support\n\t\t\t\treturn this._handleWebExtensionResource(req, res, parsedUrl);\n\t\t\t}\n\n\t\t\treturn serveError(req, res, 404, \"Not found.\");\n\t\t} catch (error) {\n\t\t\tthis._logService.error(error);\n\t\t\tconsole.error(error.toString());\n\n\t\t\treturn serveError(req, res, 500, \"Internal Server Error.\");\n\t\t}\n\t}\n\t/**\n\t * Handle HTTP requests for /static/*\n\t */\n\tprivate async _handleStatic(\n\t\treq: http.IncomingMessage,\n\t\tres: http.ServerResponse,\n\t\tparsedUrl: url.UrlWithParsedQuery,\n\t): Promise<void> {\n\t\tconst headers: Record<string, string> = Object.create(null);\n\n\t\t// Strip the this._staticRoute from the path\n\t\tconst normalizedPathname = decodeURIComponent(parsedUrl.pathname!); // support paths that are uri-encoded (e.g. spaces => %20)\n\t\tconst relativeFilePath = normalizedPathname.substring(\n\t\t\tthis._staticRoute.length + 1,\n\t\t);\n\n\t\tconst filePath = join(APP_ROOT, relativeFilePath); // join also normalizes the path\n\t\tif (!isEqualOrParent(filePath, APP_ROOT, !isLinux)) {\n\t\t\treturn serveError(req, res, 400, `Bad request.`);\n\t\t}\n\n\t\treturn serveFile(\n\t\t\tfilePath,\n\t\t\tthis._environmentService.isBuilt\n\t\t\t\t? CacheControl.NO_EXPIRY\n\t\t\t\t: CacheControl.ETAG,\n\t\t\tthis._logService,\n\t\t\treq,\n\t\t\tres,\n\t\t\theaders,\n\t\t);\n\t}\n\n\tprivate _getResourceURLTemplateAuthority(uri: URI): string | undefined {\n\t\tconst index = uri.authority.indexOf(\".\");\n\t\treturn index !== -1 ? uri.authority.substring(index + 1) : undefined;\n\t}\n\n\t/**\n\t * Handle extension resources\n\t */\n\tprivate async _handleWebExtensionResource(\n\t\treq: http.IncomingMessage,\n\t\tres: http.ServerResponse,\n\t\tparsedUrl: url.UrlWithParsedQuery,\n\t): Promise<void> {\n\t\tif (!this._webExtensionResourceUrlTemplate) {\n\t\t\treturn serveError(\n\t\t\t\treq,\n\t\t\t\tres,\n\t\t\t\t500,\n\t\t\t\t\"No extension gallery service configured.\",\n\t\t\t);\n\t\t}\n\n\t\t// Strip `/web-extension-resource/` from the path\n\t\tconst normalizedPathname = decodeURIComponent(parsedUrl.pathname!); // support paths that are uri-encoded (e.g. spaces => %20)\n\t\tconst path = normalize(\n\t\t\tnormalizedPathname.substring(this._webExtensionRoute.length + 1),\n\t\t);\n\t\tconst uri = URI.parse(path).with({\n\t\t\tscheme: this._webExtensionResourceUrlTemplate.scheme,\n\t\t\tauthority: path.substring(0, path.indexOf(\"/\")),\n\t\t\tpath: path.substring(path.indexOf(\"/\") + 1),\n\t\t});\n\n\t\tif (\n\t\t\tthis._getResourceURLTemplateAuthority(\n\t\t\t\tthis._webExtensionResourceUrlTemplate,\n\t\t\t) !== this._getResourceURLTemplateAuthority(uri)\n\t\t) {\n\t\t\treturn serveError(req, res, 403, \"Request Forbidden\");\n\t\t}\n\n\t\tconst headers: IHeaders = {};\n\t\tconst setRequestHeader = (header: string) => {\n\t\t\tconst value = req.headers[header];\n\t\t\tif (value && (isString(value) || value[0])) {\n\t\t\t\theaders[header] = isString(value) ? value : value[0];\n\t\t\t} else if (header !== header.toLowerCase()) {\n\t\t\t\tsetRequestHeader(header.toLowerCase());\n\t\t\t}\n\t\t};\n\t\tsetRequestHeader(\"X-Client-Name\");\n\t\tsetRequestHeader(\"X-Client-Version\");\n\t\tsetRequestHeader(\"X-Machine-Id\");\n\t\tsetRequestHeader(\"X-Client-Commit\");\n\n\t\tconst context = await this._requestService.request(\n\t\t\t{\n\t\t\t\ttype: \"GET\",\n\t\t\t\turl: uri.toString(true),\n\t\t\t\theaders,\n\t\t\t},\n\t\t\tCancellationToken.None,\n\t\t);\n\n\t\tconst status = context.res.statusCode || 500;\n\t\tif (status !== 200) {\n\t\t\tlet text: string | null = null;\n\t\t\ttry {\n\t\t\t\ttext = await asTextOrError(context);\n\t\t\t} catch (error) {\n\t\t\t\t/* Ignore */\n\t\t\t}\n\t\t\treturn serveError(\n\t\t\t\treq,\n\t\t\t\tres,\n\t\t\t\tstatus,\n\t\t\t\ttext || `Request failed with status ${status}`,\n\t\t\t);\n\t\t}\n\n\t\tconst responseHeaders: Record<string, string | string[]> =\n\t\t\tObject.create(null);\n\t\tconst setResponseHeader = (header: string) => {\n\t\t\tconst value = context.res.headers[header];\n\t\t\tif (value) {\n\t\t\t\tresponseHeaders[header] = value;\n\t\t\t} else if (header !== header.toLowerCase()) {\n\t\t\t\tsetResponseHeader(header.toLowerCase());\n\t\t\t}\n\t\t};\n\t\tsetResponseHeader(\"Cache-Control\");\n\t\tsetResponseHeader(\"Content-Type\");\n\t\tres.writeHead(200, responseHeaders);\n\t\tconst buffer = await streamToBuffer(context.stream);\n\t\treturn void res.end(buffer.buffer);\n\t}\n\n\t/**\n\t * Handle HTTP requests for /\n\t */\n\tprivate async _handleRoot(\n\t\treq: http.IncomingMessage,\n\t\tres: http.ServerResponse,\n\t\tparsedUrl: url.UrlWithParsedQuery,\n\t): Promise<void> {\n\t\tconst queryConnectionToken = parsedUrl.query[connectionTokenQueryName];\n\t\tif (typeof queryConnectionToken === \"string\") {\n\t\t\t// We got a connection token as a query parameter.\n\t\t\t// We want to have a clean URL, so we strip it\n\t\t\tconst responseHeaders: Record<string, string> = Object.create(null);\n\t\t\tresponseHeaders[\"Set-Cookie\"] = cookie.serialize(\n\t\t\t\tconnectionTokenCookieName,\n\t\t\t\tqueryConnectionToken,\n\t\t\t\t{\n\t\t\t\t\tsameSite: \"lax\",\n\t\t\t\t\tmaxAge: 60 * 60 * 24 * 7 /* 1 week */,\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tconst newQuery = Object.create(null);\n\t\t\tfor (const key in parsedUrl.query) {\n\t\t\t\tif (key !== connectionTokenQueryName) {\n\t\t\t\t\tnewQuery[key] = parsedUrl.query[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst newLocation = url.format({\n\t\t\t\tpathname: parsedUrl.pathname,\n\t\t\t\tquery: newQuery,\n\t\t\t});\n\t\t\tresponseHeaders[\"Location\"] = newLocation;\n\n\t\t\tres.writeHead(302, responseHeaders);\n\t\t\treturn void res.end();\n\t\t}\n\n\t\tconst getFirstHeader = (headerName: string) => {\n\t\t\tconst val = req.headers[headerName];\n\t\t\treturn Array.isArray(val) ? val[0] : val;\n\t\t};\n\n\t\tconst useTestResolver =\n\t\t\t!this._environmentService.isBuilt &&\n\t\t\tthis._environmentService.args[\"use-test-resolver\"];\n\t\tconst remoteAuthority = useTestResolver\n\t\t\t? \"test+test\"\n\t\t\t: getFirstHeader(\"x-original-host\") ||\n\t\t\t\tgetFirstHeader(\"x-forwarded-host\") ||\n\t\t\t\treq.headers.host;\n\t\tif (!remoteAuthority) {\n\t\t\treturn serveError(req, res, 400, `Bad request.`);\n\t\t}\n\n\t\tfunction asJSON(value: unknown): string {\n\t\t\treturn JSON.stringify(value).replace(/\"/g, \"&quot;\");\n\t\t}\n\n\t\tlet _wrapWebWorkerExtHostInIframe: undefined | false;\n\t\tif (this._environmentService.args[\"enable-smoke-test-driver\"]) {\n\t\t\t// integration tests run at a time when the built output is not yet published to the CDN\n\t\t\t// so we must disable the iframe wrapping because the iframe URL will give a 404\n\t\t\t_wrapWebWorkerExtHostInIframe = false;\n\t\t}\n\n\t\tconst resolveWorkspaceURI = (defaultLocation?: string) =>\n\t\t\tdefaultLocation &&\n\t\t\tURI.file(path.resolve(defaultLocation)).with({\n\t\t\t\tscheme: Schemas.vscodeRemote,\n\t\t\t\tauthority: remoteAuthority,\n\t\t\t});\n\n\t\tconst filePath = FileAccess.asFileUri(\n\t\t\t`vs/code/browser/workbench/workbench${this._environmentService.isBuilt ? \"\" : \"-dev\"}.${isESM ? \"esm.\" : \"\"}html`,\n\t\t).fsPath;\n\t\tconst authSessionInfo =\n\t\t\t!this._environmentService.isBuilt &&\n\t\t\tthis._environmentService.args[\"github-auth\"]\n\t\t\t\t? {\n\t\t\t\t\t\tid: generateUuid(),\n\t\t\t\t\t\tproviderId: \"github\",\n\t\t\t\t\t\taccessToken:\n\t\t\t\t\t\t\tthis._environmentService.args[\"github-auth\"],\n\t\t\t\t\t\tscopes: [[\"user:email\"], [\"repo\"]],\n\t\t\t\t\t}\n\t\t\t\t: undefined;\n\n\t\tconst productConfiguration = {\n\t\t\tembedderIdentifier: \"server-distro\",\n\t\t\textensionsGallery:\n\t\t\t\tthis._webExtensionResourceUrlTemplate &&\n\t\t\t\tthis._productService.extensionsGallery\n\t\t\t\t\t? {\n\t\t\t\t\t\t\t...this._productService.extensionsGallery,\n\t\t\t\t\t\t\tresourceUrlTemplate:\n\t\t\t\t\t\t\t\tthis._webExtensionResourceUrlTemplate\n\t\t\t\t\t\t\t\t\t.with({\n\t\t\t\t\t\t\t\t\t\tscheme: \"http\",\n\t\t\t\t\t\t\t\t\t\tauthority: remoteAuthority,\n\t\t\t\t\t\t\t\t\t\tpath: `${this._webExtensionRoute}/${this._webExtensionResourceUrlTemplate.authority}${this._webExtensionResourceUrlTemplate.path}`,\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.toString(true),\n\t\t\t\t\t\t}\n\t\t\t\t\t: undefined,\n\t\t} satisfies Partial<IProductConfiguration>;\n\n\t\tif (!this._environmentService.isBuilt) {\n\t\t\ttry {\n\t\t\t\tconst productOverrides = JSON.parse(\n\t\t\t\t\t(\n\t\t\t\t\t\tawait promises.readFile(\n\t\t\t\t\t\t\tjoin(APP_ROOT, \"product.overrides.json\"),\n\t\t\t\t\t\t)\n\t\t\t\t\t).toString(),\n\t\t\t\t);\n\t\t\t\tObject.assign(productConfiguration, productOverrides);\n\t\t\t} catch (err) {\n\t\t\t\t/* Ignore Error */\n\t\t\t}\n\t\t}\n\n\t\tconst workbenchWebConfiguration = {\n\t\t\tremoteAuthority,\n\t\t\tserverBasePath: this._basePath,\n\t\t\t_wrapWebWorkerExtHostInIframe,\n\t\t\tdevelopmentOptions: {\n\t\t\t\tenableSmokeTestDriver: this._environmentService.args[\n\t\t\t\t\t\"enable-smoke-test-driver\"\n\t\t\t\t]\n\t\t\t\t\t? true\n\t\t\t\t\t: undefined,\n\t\t\t\tlogLevel: this._logService.getLevel(),\n\t\t\t},\n\t\t\tsettingsSyncOptions:\n\t\t\t\t!this._environmentService.isBuilt &&\n\t\t\t\tthis._environmentService.args[\"enable-sync\"]\n\t\t\t\t\t? { enabled: true }\n\t\t\t\t\t: undefined,\n\t\t\tenableWorkspaceTrust:\n\t\t\t\t!this._environmentService.args[\"disable-workspace-trust\"],\n\t\t\tfolderUri: resolveWorkspaceURI(\n\t\t\t\tthis._environmentService.args[\"default-folder\"],\n\t\t\t),\n\t\t\tworkspaceUri: resolveWorkspaceURI(\n\t\t\t\tthis._environmentService.args[\"default-workspace\"],\n\t\t\t),\n\t\t\tproductConfiguration,\n\t\t\tcallbackRoute: this._callbackRoute,\n\t\t};\n\n\t\tconst cookies = cookie.parse(req.headers.cookie || \"\");\n\t\tconst locale =\n\t\t\tcookies[\"vscode.nls.locale\"] ||\n\t\t\treq.headers[\"accept-language\"]?.split(\",\")[0]?.toLowerCase() ||\n\t\t\t\"en\";\n\t\tlet WORKBENCH_NLS_BASE_URL: string | undefined;\n\t\tlet WORKBENCH_NLS_URL: string;\n\t\tif (!locale.startsWith(\"en\") && this._productService.nlsCoreBaseUrl) {\n\t\t\tWORKBENCH_NLS_BASE_URL = this._productService.nlsCoreBaseUrl;\n\t\t\tWORKBENCH_NLS_URL = `${WORKBENCH_NLS_BASE_URL}${this._productService.commit}/${this._productService.version}/${locale}/nls.messages.js`;\n\t\t} else {\n\t\t\tWORKBENCH_NLS_URL = \"\"; // fallback will apply\n\t\t}\n\n\t\tconst values: { [key: string]: string } = {\n\t\t\tWORKBENCH_WEB_CONFIGURATION: asJSON(workbenchWebConfiguration),\n\t\t\tWORKBENCH_AUTH_SESSION: authSessionInfo\n\t\t\t\t? asJSON(authSessionInfo)\n\t\t\t\t: \"\",\n\t\t\tWORKBENCH_WEB_BASE_URL: this._staticRoute,\n\t\t\tWORKBENCH_NLS_URL,\n\t\t\tWORKBENCH_NLS_FALLBACK_URL: `${this._staticRoute}/out/nls.messages.js`,\n\t\t};\n\n\t\t// DEV ---------------------------------------------------------------------------------------\n\t\t// DEV: This is for development and enables loading CSS via import-statements via import-maps.\n\t\t// DEV: The server needs to send along all CSS modules so that the client can construct the\n\t\t// DEV: import-map.\n\t\t// DEV ---------------------------------------------------------------------------------------\n\t\tif (this._cssDevService.isEnabled) {\n\t\t\tconst cssModules = await this._cssDevService.getCssModules();\n\t\t\tvalues[\"WORKBENCH_DEV_CSS_MODULES\"] = JSON.stringify(cssModules);\n\t\t}\n\n\t\tif (useTestResolver) {\n\t\t\tconst bundledExtensions: {\n\t\t\t\textensionPath: string;\n\t\t\t\tpackageJSON: IExtensionManifest;\n\t\t\t}[] = [];\n\t\t\tfor (const extensionPath of [\n\t\t\t\t\"vscode-test-resolver\",\n\t\t\t\t\"github-authentication\",\n\t\t\t]) {\n\t\t\t\tconst packageJSON = JSON.parse(\n\t\t\t\t\t(\n\t\t\t\t\t\tawait promises.readFile(\n\t\t\t\t\t\t\tFileAccess.asFileUri(\n\t\t\t\t\t\t\t\t`${builtinExtensionsPath}/${extensionPath}/package.json`,\n\t\t\t\t\t\t\t).fsPath,\n\t\t\t\t\t\t)\n\t\t\t\t\t).toString(),\n\t\t\t\t);\n\t\t\t\tbundledExtensions.push({ extensionPath, packageJSON });\n\t\t\t}\n\t\t\tvalues[\"WORKBENCH_BUILTIN_EXTENSIONS\"] = asJSON(bundledExtensions);\n\t\t}\n\n\t\tlet data;\n\t\ttry {\n\t\t\tconst workbenchTemplate = (\n\t\t\t\tawait promises.readFile(filePath)\n\t\t\t).toString();\n\t\t\tdata = workbenchTemplate.replace(\n\t\t\t\t/\\{\\{([^}]+)\\}\\}/g,\n\t\t\t\t(_, key) => values[key] ?? \"undefined\",\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tres.writeHead(404, { \"Content-Type\": \"text/plain\" });\n\t\t\treturn void res.end(\"Not found\");\n\t\t}\n\n\t\tconst webWorkerExtensionHostIframeScriptSHA = isESM\n\t\t\t? \"sha256-2Q+j4hfT09+1+imS46J2YlkCtHWQt0/BE79PXjJ0ZJ8=\"\n\t\t\t: \"sha256-V28GQnL3aYxbwgpV3yW1oJ+VKKe/PBSzWntNyH8zVXA=\";\n\n\t\tconst cspDirectives = [\n\t\t\t\"default-src 'self';\",\n\t\t\t\"img-src 'self' https: data: blob:;\",\n\t\t\t\"media-src 'self';\",\n\t\t\tisESM\n\t\t\t\t? `script-src 'self' 'unsafe-eval' ${WORKBENCH_NLS_BASE_URL ?? \"\"} blob: 'nonce-1nline-m4p' ${this._getScriptCspHashes(data).join(\" \")} '${webWorkerExtensionHostIframeScriptSHA}' 'sha256-/r7rqQ+yrxt57sxLuQ6AMYcy/lUpvAIzHjIJt/OeLWU=' ${useTestResolver ? \"\" : `http://${remoteAuthority}`};`\n\t\t\t\t: // the sha is the same as in src/vs/workbench/services/extensions/worker/webWorkerExtensionHostIframe.esm.html\n\t\t\t\t\t`script-src 'self' 'unsafe-eval' ${WORKBENCH_NLS_BASE_URL ?? \"\"} ${this._getScriptCspHashes(data).join(\" \")} '${webWorkerExtensionHostIframeScriptSHA}' ${useTestResolver ? \"\" : `http://${remoteAuthority}`};`, // the sha is the same as in src/vs/workbench/services/extensions/worker/webWorkerExtensionHostIframe.html\n\t\t\t\"child-src 'self';\",\n\t\t\t`frame-src 'self' https://*.vscode-cdn.net data:;`,\n\t\t\t\"worker-src 'self' data: blob:;\",\n\t\t\t\"style-src 'self' 'unsafe-inline';\",\n\t\t\t\"connect-src 'self' ws: wss: https:;\",\n\t\t\t\"font-src 'self' blob:;\",\n\t\t\t\"manifest-src 'self';\",\n\t\t].join(\" \");\n\n\t\tconst headers: http.OutgoingHttpHeaders = {\n\t\t\t\"Content-Type\": \"text/html\",\n\t\t\t\"Content-Security-Policy\": cspDirectives,\n\t\t};\n\t\tif (this._connectionToken.type !== ServerConnectionTokenType.None) {\n\t\t\t// At this point we know the client has a valid cookie\n\t\t\t// and we want to set it prolong it to ensure that this\n\t\t\t// client is valid for another 1 week at least\n\t\t\theaders[\"Set-Cookie\"] = cookie.serialize(\n\t\t\t\tconnectionTokenCookieName,\n\t\t\t\tthis._connectionToken.value,\n\t\t\t\t{\n\t\t\t\t\tsameSite: \"lax\",\n\t\t\t\t\tmaxAge: 60 * 60 * 24 * 7 /* 1 week */,\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\n\t\tres.writeHead(200, headers);\n\t\treturn void res.end(data);\n\t}\n\n\tprivate _getScriptCspHashes(content: string): string[] {\n\t\t// Compute the CSP hashes for line scripts. Uses regex\n\t\t// which means it isn't 100% good.\n\t\tconst regex = /<script>([\\s\\S]+?)<\\/script>/gim;\n\t\tconst result: string[] = [];\n\t\tlet match: RegExpExecArray | null;\n\t\twhile ((match = regex.exec(content))) {\n\t\t\tconst hasher = crypto.createHash(\"sha256\");\n\t\t\t// This only works on Windows if we strip `\\r` from `\\r\\n`.\n\t\t\tconst script = match[1].replace(/\\r\\n/g, \"\\n\");\n\t\t\tconst hash = hasher\n\t\t\t\t.update(Buffer.from(script))\n\t\t\t\t.digest()\n\t\t\t\t.toString(\"base64\");\n\n\t\t\tresult.push(`'sha256-${hash}'`);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * Handle HTTP requests for /callback\n\t */\n\tprivate async _handleCallback(res: http.ServerResponse): Promise<void> {\n\t\tconst filePath = FileAccess.asFileUri(\n\t\t\t\"vs/code/browser/workbench/callback.html\",\n\t\t).fsPath;\n\t\tconst data = (await promises.readFile(filePath)).toString();\n\t\tconst cspDirectives = [\n\t\t\t\"default-src 'self';\",\n\t\t\t\"img-src 'self' https: data: blob:;\",\n\t\t\t\"media-src 'none';\",\n\t\t\t`script-src 'self' ${this._getScriptCspHashes(data).join(\" \")};`,\n\t\t\t\"style-src 'self' 'unsafe-inline';\",\n\t\t\t\"font-src 'self' blob:;\",\n\t\t].join(\" \");\n\n\t\tres.writeHead(200, {\n\t\t\t\"Content-Type\": \"text/html\",\n\t\t\t\"Content-Security-Policy\": cspDirectives,\n\t\t});\n\t\treturn void res.end(data);\n\t}\n}\n"],
  "mappings": "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",
  "names": ["CacheControl", "path"]
}
