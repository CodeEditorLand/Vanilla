{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/server/node/remoteExtensionHostAgentCli.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ServiceCollection } from '../../platform/instantiation/common/serviceCollection.js';\nimport { ConsoleLogger, getLogLevel, ILoggerService, ILogService, NullLogger } from '../../platform/log/common/log.js';\nimport { SyncDescriptor } from '../../platform/instantiation/common/descriptors.js';\nimport { ConfigurationService } from '../../platform/configuration/common/configurationService.js';\nimport { IConfigurationService } from '../../platform/configuration/common/configuration.js';\nimport { IRequestService } from '../../platform/request/common/request.js';\nimport { RequestService } from '../../platform/request/node/requestService.js';\nimport { NullTelemetryService } from '../../platform/telemetry/common/telemetryUtils.js';\nimport { ITelemetryService } from '../../platform/telemetry/common/telemetry.js';\nimport { IExtensionGalleryService, InstallOptions } from '../../platform/extensionManagement/common/extensionManagement.js';\nimport { ExtensionGalleryServiceWithNoStorageService } from '../../platform/extensionManagement/common/extensionGalleryService.js';\nimport { ExtensionManagementService, INativeServerExtensionManagementService } from '../../platform/extensionManagement/node/extensionManagementService.js';\nimport { ExtensionSignatureVerificationService, IExtensionSignatureVerificationService } from '../../platform/extensionManagement/node/extensionSignatureVerificationService.js';\nimport { InstantiationService } from '../../platform/instantiation/common/instantiationService.js';\nimport { IInstantiationService } from '../../platform/instantiation/common/instantiation.js';\nimport product from '../../platform/product/common/product.js';\nimport { Disposable } from '../../base/common/lifecycle.js';\nimport { FileService } from '../../platform/files/common/fileService.js';\nimport { DiskFileSystemProvider } from '../../platform/files/node/diskFileSystemProvider.js';\nimport { Schemas } from '../../base/common/network.js';\nimport { IFileService } from '../../platform/files/common/files.js';\nimport { IProductService } from '../../platform/product/common/productService.js';\nimport { IServerEnvironmentService, ServerEnvironmentService, ServerParsedArgs } from './serverEnvironmentService.js';\nimport { ExtensionManagementCLI } from '../../platform/extensionManagement/common/extensionManagementCLI.js';\nimport { ILanguagePackService } from '../../platform/languagePacks/common/languagePacks.js';\nimport { NativeLanguagePackService } from '../../platform/languagePacks/node/languagePacks.js';\nimport { getErrorMessage } from '../../base/common/errors.js';\nimport { URI } from '../../base/common/uri.js';\nimport { isAbsolute, join } from '../../base/common/path.js';\nimport { cwd } from '../../base/common/process.js';\nimport { DownloadService } from '../../platform/download/common/downloadService.js';\nimport { IDownloadService } from '../../platform/download/common/download.js';\nimport { IUriIdentityService } from '../../platform/uriIdentity/common/uriIdentity.js';\nimport { UriIdentityService } from '../../platform/uriIdentity/common/uriIdentityService.js';\nimport { buildHelpMessage, buildVersionMessage, OptionDescriptions } from '../../platform/environment/node/argv.js';\nimport { isWindows } from '../../base/common/platform.js';\nimport { IExtensionsScannerService } from '../../platform/extensionManagement/common/extensionsScannerService.js';\nimport { ExtensionsScannerService } from './extensionsScannerService.js';\nimport { IUserDataProfilesService } from '../../platform/userDataProfile/common/userDataProfile.js';\nimport { IExtensionsProfileScannerService } from '../../platform/extensionManagement/common/extensionsProfileScannerService.js';\nimport { NullPolicyService } from '../../platform/policy/common/policy.js';\nimport { ServerUserDataProfilesService } from '../../platform/userDataProfile/node/userDataProfile.js';\nimport { ExtensionsProfileScannerService } from '../../platform/extensionManagement/node/extensionsProfileScannerService.js';\nimport { LogService } from '../../platform/log/common/logService.js';\nimport { LoggerService } from '../../platform/log/node/loggerService.js';\nimport { localize } from '../../nls.js';\nimport { addUNCHostToAllowlist, disableUNCAccessRestrictions } from '../../base/node/unc.js';\n\nclass CliMain extends Disposable {\n\n\tconstructor(private readonly args: ServerParsedArgs, private readonly remoteDataFolder: string) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\t// Dispose on exit\n\t\tprocess.once('exit', () => this.dispose());\n\t}\n\n\tasync run(): Promise<void> {\n\t\tconst instantiationService = await this.initServices();\n\t\tawait instantiationService.invokeFunction(async accessor => {\n\t\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\t\tconst logService = accessor.get(ILogService);\n\n\t\t\t// On Windows, configure the UNC allow list based on settings\n\t\t\tif (isWindows) {\n\t\t\t\tif (configurationService.getValue('security.restrictUNCAccess') === false) {\n\t\t\t\t\tdisableUNCAccessRestrictions();\n\t\t\t\t} else {\n\t\t\t\t\taddUNCHostToAllowlist(configurationService.getValue('security.allowedUNCHosts'));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tawait this.doRun(instantiationService.createInstance(ExtensionManagementCLI, new ConsoleLogger(logService.getLevel(), false)));\n\t\t\t} catch (error) {\n\t\t\t\tlogService.error(error);\n\t\t\t\tconsole.error(getErrorMessage(error));\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async initServices(): Promise<IInstantiationService> {\n\t\tconst services = new ServiceCollection();\n\n\t\tconst productService = { _serviceBrand: undefined, ...product };\n\t\tservices.set(IProductService, productService);\n\n\t\tconst environmentService = new ServerEnvironmentService(this.args, productService);\n\t\tservices.set(IServerEnvironmentService, environmentService);\n\n\t\tconst loggerService = new LoggerService(getLogLevel(environmentService), environmentService.logsHome);\n\t\tservices.set(ILoggerService, loggerService);\n\n\t\tconst logService = new LogService(this._register(loggerService.createLogger('remoteCLI', { name: localize('remotecli', \"Remote CLI\") })));\n\t\tservices.set(ILogService, logService);\n\t\tlogService.trace(`Remote configuration data at ${this.remoteDataFolder}`);\n\t\tlogService.trace('process arguments:', this.args);\n\n\t\t// Files\n\t\tconst fileService = this._register(new FileService(logService));\n\t\tservices.set(IFileService, fileService);\n\t\tfileService.registerProvider(Schemas.file, this._register(new DiskFileSystemProvider(logService)));\n\n\t\tconst uriIdentityService = new UriIdentityService(fileService);\n\t\tservices.set(IUriIdentityService, uriIdentityService);\n\n\t\t// User Data Profiles\n\t\tconst userDataProfilesService = this._register(new ServerUserDataProfilesService(uriIdentityService, environmentService, fileService, logService));\n\t\tservices.set(IUserDataProfilesService, userDataProfilesService);\n\n\t\t// Configuration\n\t\tconst configurationService = this._register(new ConfigurationService(userDataProfilesService.defaultProfile.settingsResource, fileService, new NullPolicyService(), logService));\n\t\tservices.set(IConfigurationService, configurationService);\n\n\t\t// Initialize\n\t\tawait Promise.all([\n\t\t\tconfigurationService.initialize(),\n\t\t\tuserDataProfilesService.init()\n\t\t]);\n\n\t\tservices.set(IRequestService, new SyncDescriptor(RequestService, [new NullLogger()]));\n\t\tservices.set(IDownloadService, new SyncDescriptor(DownloadService));\n\t\tservices.set(ITelemetryService, NullTelemetryService);\n\t\tservices.set(IExtensionGalleryService, new SyncDescriptor(ExtensionGalleryServiceWithNoStorageService));\n\t\tservices.set(IExtensionsProfileScannerService, new SyncDescriptor(ExtensionsProfileScannerService));\n\t\tservices.set(IExtensionsScannerService, new SyncDescriptor(ExtensionsScannerService));\n\t\tservices.set(IExtensionSignatureVerificationService, new SyncDescriptor(ExtensionSignatureVerificationService));\n\t\tservices.set(INativeServerExtensionManagementService, new SyncDescriptor(ExtensionManagementService));\n\t\tservices.set(ILanguagePackService, new SyncDescriptor(NativeLanguagePackService));\n\n\t\treturn new InstantiationService(services);\n\t}\n\n\tprivate async doRun(extensionManagementCLI: ExtensionManagementCLI): Promise<void> {\n\n\t\t// List Extensions\n\t\tif (this.args['list-extensions']) {\n\t\t\treturn extensionManagementCLI.listExtensions(!!this.args['show-versions'], this.args['category']);\n\t\t}\n\n\t\t// Install Extension\n\t\telse if (this.args['install-extension'] || this.args['install-builtin-extension']) {\n\t\t\tconst installOptions: InstallOptions = { isMachineScoped: !!this.args['do-not-sync'], installPreReleaseVersion: !!this.args['pre-release'] };\n\t\t\treturn extensionManagementCLI.installExtensions(this.asExtensionIdOrVSIX(this.args['install-extension'] || []), this.asExtensionIdOrVSIX(this.args['install-builtin-extension'] || []), installOptions, !!this.args['force']);\n\t\t}\n\n\t\t// Uninstall Extension\n\t\telse if (this.args['uninstall-extension']) {\n\t\t\treturn extensionManagementCLI.uninstallExtensions(this.asExtensionIdOrVSIX(this.args['uninstall-extension']), !!this.args['force']);\n\t\t}\n\n\t\t// Update the installed extensions\n\t\telse if (this.args['update-extensions']) {\n\t\t\treturn extensionManagementCLI.updateExtensions();\n\t\t}\n\n\t\t// Locate Extension\n\t\telse if (this.args['locate-extension']) {\n\t\t\treturn extensionManagementCLI.locateExtension(this.args['locate-extension']);\n\t\t}\n\t}\n\n\tprivate asExtensionIdOrVSIX(inputs: string[]): (string | URI)[] {\n\t\treturn inputs.map(input => /\\.vsix$/i.test(input) ? URI.file(isAbsolute(input) ? input : join(cwd(), input)) : input);\n\t}\n}\n\nfunction eventuallyExit(code: number): void {\n\tsetTimeout(() => process.exit(code), 0);\n}\n\nexport async function run(args: ServerParsedArgs, REMOTE_DATA_FOLDER: string, optionDescriptions: OptionDescriptions<ServerParsedArgs>): Promise<void> {\n\tif (args.help) {\n\t\tconst executable = product.serverApplicationName + (isWindows ? '.cmd' : '');\n\t\tconsole.log(buildHelpMessage(product.nameLong, executable, product.version, optionDescriptions, { noInputFiles: true, noPipe: true }));\n\t\treturn;\n\t}\n\t// Version Info\n\tif (args.version) {\n\t\tconsole.log(buildVersionMessage(product.version, product.commit));\n\t\treturn;\n\t}\n\n\n\tconst cliMain = new CliMain(args, REMOTE_DATA_FOLDER);\n\ttry {\n\t\tawait cliMain.run();\n\t\teventuallyExit(0);\n\t} catch (err) {\n\t\teventuallyExit(1);\n\t} finally {\n\t\tcliMain.dispose();\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
