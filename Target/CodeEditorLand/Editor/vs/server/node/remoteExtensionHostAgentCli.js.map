{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/server/node/remoteExtensionHostAgentCli.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getErrorMessage } from \"../../base/common/errors.js\";\nimport { Disposable } from \"../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../base/common/network.js\";\nimport { isAbsolute, join } from \"../../base/common/path.js\";\nimport { isWindows } from \"../../base/common/platform.js\";\nimport { cwd } from \"../../base/common/process.js\";\nimport { URI } from \"../../base/common/uri.js\";\nimport {\n\taddUNCHostToAllowlist,\n\tdisableUNCAccessRestrictions,\n} from \"../../base/node/unc.js\";\nimport { localize } from \"../../nls.js\";\nimport { IConfigurationService } from \"../../platform/configuration/common/configuration.js\";\nimport { ConfigurationService } from \"../../platform/configuration/common/configurationService.js\";\nimport { IDownloadService } from \"../../platform/download/common/download.js\";\nimport { DownloadService } from \"../../platform/download/common/downloadService.js\";\nimport {\n\ttype OptionDescriptions,\n\tbuildHelpMessage,\n\tbuildVersionMessage,\n} from \"../../platform/environment/node/argv.js\";\nimport { ExtensionGalleryServiceWithNoStorageService } from \"../../platform/extensionManagement/common/extensionGalleryService.js\";\nimport {\n\tIExtensionGalleryService,\n\ttype InstallOptions,\n} from \"../../platform/extensionManagement/common/extensionManagement.js\";\nimport { ExtensionManagementCLI } from \"../../platform/extensionManagement/common/extensionManagementCLI.js\";\nimport { IExtensionsProfileScannerService } from \"../../platform/extensionManagement/common/extensionsProfileScannerService.js\";\nimport { IExtensionsScannerService } from \"../../platform/extensionManagement/common/extensionsScannerService.js\";\nimport {\n\tExtensionManagementService,\n\tINativeServerExtensionManagementService,\n} from \"../../platform/extensionManagement/node/extensionManagementService.js\";\nimport {\n\tExtensionSignatureVerificationService,\n\tIExtensionSignatureVerificationService,\n} from \"../../platform/extensionManagement/node/extensionSignatureVerificationService.js\";\nimport { ExtensionsProfileScannerService } from \"../../platform/extensionManagement/node/extensionsProfileScannerService.js\";\nimport { FileService } from \"../../platform/files/common/fileService.js\";\nimport { IFileService } from \"../../platform/files/common/files.js\";\nimport { DiskFileSystemProvider } from \"../../platform/files/node/diskFileSystemProvider.js\";\nimport { SyncDescriptor } from \"../../platform/instantiation/common/descriptors.js\";\nimport type { IInstantiationService } from \"../../platform/instantiation/common/instantiation.js\";\nimport { InstantiationService } from \"../../platform/instantiation/common/instantiationService.js\";\nimport { ServiceCollection } from \"../../platform/instantiation/common/serviceCollection.js\";\nimport { ILanguagePackService } from \"../../platform/languagePacks/common/languagePacks.js\";\nimport { NativeLanguagePackService } from \"../../platform/languagePacks/node/languagePacks.js\";\nimport {\n\tConsoleLogger,\n\tILogService,\n\tILoggerService,\n\tNullLogger,\n\tgetLogLevel,\n} from \"../../platform/log/common/log.js\";\nimport { LogService } from \"../../platform/log/common/logService.js\";\nimport { LoggerService } from \"../../platform/log/node/loggerService.js\";\nimport { NullPolicyService } from \"../../platform/policy/common/policy.js\";\nimport product from \"../../platform/product/common/product.js\";\nimport { IProductService } from \"../../platform/product/common/productService.js\";\nimport { IRequestService } from \"../../platform/request/common/request.js\";\nimport { RequestService } from \"../../platform/request/node/requestService.js\";\nimport { ITelemetryService } from \"../../platform/telemetry/common/telemetry.js\";\nimport { NullTelemetryService } from \"../../platform/telemetry/common/telemetryUtils.js\";\nimport { IUriIdentityService } from \"../../platform/uriIdentity/common/uriIdentity.js\";\nimport { UriIdentityService } from \"../../platform/uriIdentity/common/uriIdentityService.js\";\nimport { IUserDataProfilesService } from \"../../platform/userDataProfile/common/userDataProfile.js\";\nimport { ServerUserDataProfilesService } from \"../../platform/userDataProfile/node/userDataProfile.js\";\nimport { ExtensionsScannerService } from \"./extensionsScannerService.js\";\nimport {\n\tIServerEnvironmentService,\n\tServerEnvironmentService,\n\ttype ServerParsedArgs,\n} from \"./serverEnvironmentService.js\";\n\nclass CliMain extends Disposable {\n\tconstructor(\n\t\tprivate readonly args: ServerParsedArgs,\n\t\tprivate readonly remoteDataFolder: string,\n\t) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\t// Dispose on exit\n\t\tprocess.once(\"exit\", () => this.dispose());\n\t}\n\n\tasync run(): Promise<void> {\n\t\tconst instantiationService = await this.initServices();\n\t\tawait instantiationService.invokeFunction(async (accessor) => {\n\t\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\t\tconst logService = accessor.get(ILogService);\n\n\t\t\t// On Windows, configure the UNC allow list based on settings\n\t\t\tif (isWindows) {\n\t\t\t\tif (\n\t\t\t\t\tconfigurationService.getValue(\n\t\t\t\t\t\t\"security.restrictUNCAccess\",\n\t\t\t\t\t) === false\n\t\t\t\t) {\n\t\t\t\t\tdisableUNCAccessRestrictions();\n\t\t\t\t} else {\n\t\t\t\t\taddUNCHostToAllowlist(\n\t\t\t\t\t\tconfigurationService.getValue(\n\t\t\t\t\t\t\t\"security.allowedUNCHosts\",\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tawait this.doRun(\n\t\t\t\t\tinstantiationService.createInstance(\n\t\t\t\t\t\tExtensionManagementCLI,\n\t\t\t\t\t\tnew ConsoleLogger(logService.getLevel(), false),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t} catch (error) {\n\t\t\t\tlogService.error(error);\n\t\t\t\tconsole.error(getErrorMessage(error));\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async initServices(): Promise<IInstantiationService> {\n\t\tconst services = new ServiceCollection();\n\n\t\tconst productService = { _serviceBrand: undefined, ...product };\n\t\tservices.set(IProductService, productService);\n\n\t\tconst environmentService = new ServerEnvironmentService(\n\t\t\tthis.args,\n\t\t\tproductService,\n\t\t);\n\t\tservices.set(IServerEnvironmentService, environmentService);\n\n\t\tconst loggerService = new LoggerService(\n\t\t\tgetLogLevel(environmentService),\n\t\t\tenvironmentService.logsHome,\n\t\t);\n\t\tservices.set(ILoggerService, loggerService);\n\n\t\tconst logService = new LogService(\n\t\t\tthis._register(\n\t\t\t\tloggerService.createLogger(\"remoteCLI\", {\n\t\t\t\t\tname: localize(\"remotecli\", \"Remote CLI\"),\n\t\t\t\t}),\n\t\t\t),\n\t\t);\n\t\tservices.set(ILogService, logService);\n\t\tlogService.trace(\n\t\t\t`Remote configuration data at ${this.remoteDataFolder}`,\n\t\t);\n\t\tlogService.trace(\"process arguments:\", this.args);\n\n\t\t// Files\n\t\tconst fileService = this._register(new FileService(logService));\n\t\tservices.set(IFileService, fileService);\n\t\tfileService.registerProvider(\n\t\t\tSchemas.file,\n\t\t\tthis._register(new DiskFileSystemProvider(logService)),\n\t\t);\n\n\t\tconst uriIdentityService = new UriIdentityService(fileService);\n\t\tservices.set(IUriIdentityService, uriIdentityService);\n\n\t\t// User Data Profiles\n\t\tconst userDataProfilesService = this._register(\n\t\t\tnew ServerUserDataProfilesService(\n\t\t\t\turiIdentityService,\n\t\t\t\tenvironmentService,\n\t\t\t\tfileService,\n\t\t\t\tlogService,\n\t\t\t),\n\t\t);\n\t\tservices.set(IUserDataProfilesService, userDataProfilesService);\n\n\t\t// Configuration\n\t\tconst configurationService = this._register(\n\t\t\tnew ConfigurationService(\n\t\t\t\tuserDataProfilesService.defaultProfile.settingsResource,\n\t\t\t\tfileService,\n\t\t\t\tnew NullPolicyService(),\n\t\t\t\tlogService,\n\t\t\t),\n\t\t);\n\t\tservices.set(IConfigurationService, configurationService);\n\n\t\t// Initialize\n\t\tawait Promise.all([\n\t\t\tconfigurationService.initialize(),\n\t\t\tuserDataProfilesService.init(),\n\t\t]);\n\n\t\tservices.set(\n\t\t\tIRequestService,\n\t\t\tnew SyncDescriptor(RequestService, [new NullLogger()]),\n\t\t);\n\t\tservices.set(IDownloadService, new SyncDescriptor(DownloadService));\n\t\tservices.set(ITelemetryService, NullTelemetryService);\n\t\tservices.set(\n\t\t\tIExtensionGalleryService,\n\t\t\tnew SyncDescriptor(ExtensionGalleryServiceWithNoStorageService),\n\t\t);\n\t\tservices.set(\n\t\t\tIExtensionsProfileScannerService,\n\t\t\tnew SyncDescriptor(ExtensionsProfileScannerService),\n\t\t);\n\t\tservices.set(\n\t\t\tIExtensionsScannerService,\n\t\t\tnew SyncDescriptor(ExtensionsScannerService),\n\t\t);\n\t\tservices.set(\n\t\t\tIExtensionSignatureVerificationService,\n\t\t\tnew SyncDescriptor(ExtensionSignatureVerificationService),\n\t\t);\n\t\tservices.set(\n\t\t\tINativeServerExtensionManagementService,\n\t\t\tnew SyncDescriptor(ExtensionManagementService),\n\t\t);\n\t\tservices.set(\n\t\t\tILanguagePackService,\n\t\t\tnew SyncDescriptor(NativeLanguagePackService),\n\t\t);\n\n\t\treturn new InstantiationService(services);\n\t}\n\n\tprivate async doRun(\n\t\textensionManagementCLI: ExtensionManagementCLI,\n\t): Promise<void> {\n\t\t// List Extensions\n\t\tif (this.args[\"list-extensions\"]) {\n\t\t\treturn extensionManagementCLI.listExtensions(\n\t\t\t\t!!this.args[\"show-versions\"],\n\t\t\t\tthis.args[\"category\"],\n\t\t\t);\n\t\t}\n\n\t\t// Install Extension\n\t\telse if (\n\t\t\tthis.args[\"install-extension\"] ||\n\t\t\tthis.args[\"install-builtin-extension\"]\n\t\t) {\n\t\t\tconst installOptions: InstallOptions = {\n\t\t\t\tisMachineScoped: !!this.args[\"do-not-sync\"],\n\t\t\t\tinstallPreReleaseVersion: !!this.args[\"pre-release\"],\n\t\t\t};\n\t\t\treturn extensionManagementCLI.installExtensions(\n\t\t\t\tthis.asExtensionIdOrVSIX(this.args[\"install-extension\"] || []),\n\t\t\t\tthis.asExtensionIdOrVSIX(\n\t\t\t\t\tthis.args[\"install-builtin-extension\"] || [],\n\t\t\t\t),\n\t\t\t\tinstallOptions,\n\t\t\t\t!!this.args[\"force\"],\n\t\t\t);\n\t\t}\n\n\t\t// Uninstall Extension\n\t\telse if (this.args[\"uninstall-extension\"]) {\n\t\t\treturn extensionManagementCLI.uninstallExtensions(\n\t\t\t\tthis.asExtensionIdOrVSIX(this.args[\"uninstall-extension\"]),\n\t\t\t\t!!this.args[\"force\"],\n\t\t\t);\n\t\t}\n\n\t\t// Update the installed extensions\n\t\telse if (this.args[\"update-extensions\"]) {\n\t\t\treturn extensionManagementCLI.updateExtensions();\n\t\t}\n\n\t\t// Locate Extension\n\t\telse if (this.args[\"locate-extension\"]) {\n\t\t\treturn extensionManagementCLI.locateExtension(\n\t\t\t\tthis.args[\"locate-extension\"],\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate asExtensionIdOrVSIX(inputs: string[]): (string | URI)[] {\n\t\treturn inputs.map((input) =>\n\t\t\t/\\.vsix$/i.test(input)\n\t\t\t\t? URI.file(isAbsolute(input) ? input : join(cwd(), input))\n\t\t\t\t: input,\n\t\t);\n\t}\n}\n\nfunction eventuallyExit(code: number): void {\n\tsetTimeout(() => process.exit(code), 0);\n}\n\nexport async function run(\n\targs: ServerParsedArgs,\n\tREMOTE_DATA_FOLDER: string,\n\toptionDescriptions: OptionDescriptions<ServerParsedArgs>,\n): Promise<void> {\n\tif (args.help) {\n\t\tconst executable =\n\t\t\tproduct.serverApplicationName + (isWindows ? \".cmd\" : \"\");\n\t\tconsole.log(\n\t\t\tbuildHelpMessage(\n\t\t\t\tproduct.nameLong,\n\t\t\t\texecutable,\n\t\t\t\tproduct.version,\n\t\t\t\toptionDescriptions,\n\t\t\t\t{ noInputFiles: true, noPipe: true },\n\t\t\t),\n\t\t);\n\t\treturn;\n\t}\n\t// Version Info\n\tif (args.version) {\n\t\tconsole.log(buildVersionMessage(product.version, product.commit));\n\t\treturn;\n\t}\n\n\tconst cliMain = new CliMain(args, REMOTE_DATA_FOLDER);\n\ttry {\n\t\tawait cliMain.run();\n\t\teventuallyExit(0);\n\t} catch (err) {\n\t\teventuallyExit(1);\n\t} finally {\n\t\tcliMain.dispose();\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
