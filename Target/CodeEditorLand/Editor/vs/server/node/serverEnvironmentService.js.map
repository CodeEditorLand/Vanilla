{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/server/node/serverEnvironmentService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from \"../../nls.js\";\n\nimport { memoize } from \"../../base/common/decorators.js\";\nimport type { URI } from \"../../base/common/uri.js\";\nimport {\n\tIEnvironmentService,\n\ttype INativeEnvironmentService,\n} from \"../../platform/environment/common/environment.js\";\nimport {\n\tOPTIONS,\n\ttype OptionDescriptions,\n} from \"../../platform/environment/node/argv.js\";\nimport { NativeEnvironmentService } from \"../../platform/environment/node/environmentService.js\";\nimport { refineServiceDecorator } from \"../../platform/instantiation/common/instantiation.js\";\n\nexport const serverOptions: OptionDescriptions<Required<ServerParsedArgs>> = {\n\t/* ----- server setup ----- */\n\n\thost: {\n\t\ttype: \"string\",\n\t\tcat: \"o\",\n\t\targs: \"ip-address\",\n\t\tdescription: nls.localize(\n\t\t\t\"host\",\n\t\t\t\"The host name or IP address the server should listen to. If not set, defaults to 'localhost'.\",\n\t\t),\n\t},\n\tport: {\n\t\ttype: \"string\",\n\t\tcat: \"o\",\n\t\targs: \"port | port range\",\n\t\tdescription: nls.localize(\n\t\t\t\"port\",\n\t\t\t\"The port the server should listen to. If 0 is passed a random free port is picked. If a range in the format num-num is passed, a free port from the range (end inclusive) is selected.\",\n\t\t),\n\t},\n\t\"socket-path\": {\n\t\ttype: \"string\",\n\t\tcat: \"o\",\n\t\targs: \"path\",\n\t\tdescription: nls.localize(\n\t\t\t\"socket-path\",\n\t\t\t\"The path to a socket file for the server to listen to.\",\n\t\t),\n\t},\n\t\"server-base-path\": {\n\t\ttype: \"string\",\n\t\tcat: \"o\",\n\t\targs: \"path\",\n\t\tdescription: nls.localize(\n\t\t\t\"server-base-path\",\n\t\t\t\"The path under which the web UI and the code server is provided. Defaults to '/'.`\",\n\t\t),\n\t},\n\t\"connection-token\": {\n\t\ttype: \"string\",\n\t\tcat: \"o\",\n\t\targs: \"token\",\n\t\tdeprecates: [\"connectionToken\"],\n\t\tdescription: nls.localize(\n\t\t\t\"connection-token\",\n\t\t\t\"A secret that must be included with all requests.\",\n\t\t),\n\t},\n\t\"connection-token-file\": {\n\t\ttype: \"string\",\n\t\tcat: \"o\",\n\t\targs: \"path\",\n\t\tdeprecates: [\"connection-secret\", \"connectionTokenFile\"],\n\t\tdescription: nls.localize(\n\t\t\t\"connection-token-file\",\n\t\t\t\"Path to a file that contains the connection token.\",\n\t\t),\n\t},\n\t\"without-connection-token\": {\n\t\ttype: \"boolean\",\n\t\tcat: \"o\",\n\t\tdescription: nls.localize(\n\t\t\t\"without-connection-token\",\n\t\t\t\"Run without a connection token. Only use this if the connection is secured by other means.\",\n\t\t),\n\t},\n\t\"disable-websocket-compression\": { type: \"boolean\" },\n\t\"print-startup-performance\": { type: \"boolean\" },\n\t\"print-ip-address\": { type: \"boolean\" },\n\t\"accept-server-license-terms\": {\n\t\ttype: \"boolean\",\n\t\tcat: \"o\",\n\t\tdescription: nls.localize(\n\t\t\t\"acceptLicenseTerms\",\n\t\t\t\"If set, the user accepts the server license terms and the server will be started without a user prompt.\",\n\t\t),\n\t},\n\t\"server-data-dir\": {\n\t\ttype: \"string\",\n\t\tcat: \"o\",\n\t\tdescription: nls.localize(\n\t\t\t\"serverDataDir\",\n\t\t\t\"Specifies the directory that server data is kept in.\",\n\t\t),\n\t},\n\t\"telemetry-level\": {\n\t\ttype: \"string\",\n\t\tcat: \"o\",\n\t\targs: \"level\",\n\t\tdescription: nls.localize(\n\t\t\t\"telemetry-level\",\n\t\t\t\"Sets the initial telemetry level. Valid levels are: 'off', 'crash', 'error' and 'all'. If not specified, the server will send telemetry until a client connects, it will then use the clients telemetry setting. Setting this to 'off' is equivalent to --disable-telemetry\",\n\t\t),\n\t},\n\n\t/* ----- vs code options ---\t-- */\n\n\t\"user-data-dir\": OPTIONS[\"user-data-dir\"],\n\t\"enable-smoke-test-driver\": OPTIONS[\"enable-smoke-test-driver\"],\n\t\"disable-telemetry\": OPTIONS[\"disable-telemetry\"],\n\t\"disable-workspace-trust\": OPTIONS[\"disable-workspace-trust\"],\n\t\"file-watcher-polling\": {\n\t\ttype: \"string\",\n\t\tdeprecates: [\"fileWatcherPolling\"],\n\t},\n\tlog: OPTIONS[\"log\"],\n\tlogsPath: OPTIONS[\"logsPath\"],\n\t\"force-disable-user-env\": OPTIONS[\"force-disable-user-env\"],\n\n\t/* ----- vs code web options ----- */\n\n\tfolder: {\n\t\ttype: \"string\",\n\t\tdeprecationMessage:\n\t\t\t\"No longer supported. Folder needs to be provided in the browser URL or with `default-folder`.\",\n\t},\n\tworkspace: {\n\t\ttype: \"string\",\n\t\tdeprecationMessage:\n\t\t\t\"No longer supported. Workspace needs to be provided in the browser URL or with `default-workspace`.\",\n\t},\n\n\t\"default-folder\": {\n\t\ttype: \"string\",\n\t\tdescription: nls.localize(\n\t\t\t\"default-folder\",\n\t\t\t\"The workspace folder to open when no input is specified in the browser URL. A relative or absolute path resolved against the current working directory.\",\n\t\t),\n\t},\n\t\"default-workspace\": {\n\t\ttype: \"string\",\n\t\tdescription: nls.localize(\n\t\t\t\"default-workspace\",\n\t\t\t\"The workspace to open when no input is specified in the browser URL. A relative or absolute path resolved against the current working directory.\",\n\t\t),\n\t},\n\n\t\"enable-sync\": { type: \"boolean\" },\n\t\"github-auth\": { type: \"string\" },\n\t\"use-test-resolver\": { type: \"boolean\" },\n\n\t/* ----- extension management ----- */\n\n\t\"extensions-dir\": OPTIONS[\"extensions-dir\"],\n\t\"extensions-download-dir\": OPTIONS[\"extensions-download-dir\"],\n\t\"builtin-extensions-dir\": OPTIONS[\"builtin-extensions-dir\"],\n\t\"install-extension\": OPTIONS[\"install-extension\"],\n\t\"install-builtin-extension\": OPTIONS[\"install-builtin-extension\"],\n\t\"update-extensions\": OPTIONS[\"update-extensions\"],\n\t\"uninstall-extension\": OPTIONS[\"uninstall-extension\"],\n\t\"list-extensions\": OPTIONS[\"list-extensions\"],\n\t\"locate-extension\": OPTIONS[\"locate-extension\"],\n\n\t\"show-versions\": OPTIONS[\"show-versions\"],\n\tcategory: OPTIONS[\"category\"],\n\tforce: OPTIONS[\"force\"],\n\t\"do-not-sync\": OPTIONS[\"do-not-sync\"],\n\t\"pre-release\": OPTIONS[\"pre-release\"],\n\t\"start-server\": {\n\t\ttype: \"boolean\",\n\t\tcat: \"e\",\n\t\tdescription: nls.localize(\n\t\t\t\"start-server\",\n\t\t\t\"Start the server when installing or uninstalling extensions. To be used in combination with 'install-extension', 'install-builtin-extension' and 'uninstall-extension'.\",\n\t\t),\n\t},\n\n\t/* ----- remote development options ----- */\n\n\t\"enable-remote-auto-shutdown\": { type: \"boolean\" },\n\t\"remote-auto-shutdown-without-delay\": { type: \"boolean\" },\n\n\t\"use-host-proxy\": { type: \"boolean\" },\n\t\"without-browser-env-var\": { type: \"boolean\" },\n\n\t/* ----- server cli ----- */\n\n\thelp: OPTIONS[\"help\"],\n\tversion: OPTIONS[\"version\"],\n\t\"locate-shell-integration-path\": OPTIONS[\"locate-shell-integration-path\"],\n\n\tcompatibility: { type: \"string\" },\n\n\t_: OPTIONS[\"_\"],\n};\n\nexport interface ServerParsedArgs {\n\t/* ----- server setup ----- */\n\n\thost?: string;\n\t/**\n\t * A port or a port range\n\t */\n\tport?: string;\n\t\"socket-path\"?: string;\n\n\t/**\n\t * The path under which the web UI and the code server is provided.\n\t * By defaults it is '/'.`\n\t */\n\t\"server-base-path\"?: string;\n\n\t/**\n\t * A secret token that must be provided by the web client with all requests.\n\t * Use only `[0-9A-Za-z\\-]`.\n\t *\n\t * By default, a UUID will be generated every time the server starts up.\n\t *\n\t * If the server is running on a multi-user system, then consider\n\t * using `--connection-token-file` which has the advantage that the token cannot\n\t * be seen by other users using `ps` or similar commands.\n\t */\n\t\"connection-token\"?: string;\n\t/**\n\t * A path to a filename which will be read on startup.\n\t * Consider placing this file in a folder readable only by the same user (a `chmod 0700` directory).\n\t *\n\t * The contents of the file will be used as the connection token. Use only `[0-9A-Z\\-]` as contents in the file.\n\t * The file can optionally end in a `\\n` which will be ignored.\n\t *\n\t * This secret must be communicated to any vscode instance via the resolver or embedder API.\n\t */\n\t\"connection-token-file\"?: string;\n\n\t/**\n\t * Run the server without a connection token\n\t */\n\t\"without-connection-token\"?: boolean;\n\n\t\"disable-websocket-compression\"?: boolean;\n\n\t\"print-startup-performance\"?: boolean;\n\t\"print-ip-address\"?: boolean;\n\n\t\"accept-server-license-terms\": boolean;\n\n\t\"server-data-dir\"?: string;\n\n\t\"telemetry-level\"?: string;\n\n\t\"disable-workspace-trust\"?: boolean;\n\n\t/* ----- vs code options ----- */\n\n\t\"user-data-dir\"?: string;\n\n\t\"enable-smoke-test-driver\"?: boolean;\n\n\t\"disable-telemetry\"?: boolean;\n\t\"file-watcher-polling\"?: string;\n\n\tlog?: string[];\n\tlogsPath?: string;\n\n\t\"force-disable-user-env\"?: boolean;\n\n\t/* ----- vs code web options ----- */\n\n\t\"default-workspace\"?: string;\n\t\"default-folder\"?: string;\n\n\t/** @deprecated use default-workspace instead */\n\tworkspace: string;\n\t/** @deprecated use default-folder instead */\n\tfolder: string;\n\n\t\"enable-sync\"?: boolean;\n\t\"github-auth\"?: string;\n\t\"use-test-resolver\"?: boolean;\n\n\t/* ----- extension management ----- */\n\n\t\"extensions-dir\"?: string;\n\t\"extensions-download-dir\"?: string;\n\t\"builtin-extensions-dir\"?: string;\n\t\"install-extension\"?: string[];\n\t\"install-builtin-extension\"?: string[];\n\t\"update-extensions\"?: boolean;\n\t\"uninstall-extension\"?: string[];\n\t\"list-extensions\"?: boolean;\n\t\"locate-extension\"?: string[];\n\t\"show-versions\"?: boolean;\n\tcategory?: string;\n\tforce?: boolean; // used by install-extension\n\t\"do-not-sync\"?: boolean; // used by install-extension\n\t\"pre-release\"?: boolean; // used by install-extension\n\n\t\"start-server\"?: boolean;\n\n\t/* ----- remote development options ----- */\n\n\t\"enable-remote-auto-shutdown\"?: boolean;\n\t\"remote-auto-shutdown-without-delay\"?: boolean;\n\n\t\"use-host-proxy\"?: boolean;\n\t\"without-browser-env-var\"?: boolean;\n\n\t/* ----- server cli ----- */\n\thelp: boolean;\n\tversion: boolean;\n\t\"locate-shell-integration-path\"?: string;\n\n\tcompatibility: string;\n\n\t_: string[];\n}\n\nexport const IServerEnvironmentService = refineServiceDecorator<\n\tIEnvironmentService,\n\tIServerEnvironmentService\n>(IEnvironmentService);\n\nexport interface IServerEnvironmentService extends INativeEnvironmentService {\n\treadonly args: ServerParsedArgs;\n}\n\nexport class ServerEnvironmentService\n\textends NativeEnvironmentService\n\timplements IServerEnvironmentService\n{\n\t@memoize\n\toverride get userRoamingDataHome(): URI {\n\t\treturn this.appSettingsHome;\n\t}\n\toverride get args(): ServerParsedArgs {\n\t\treturn super.args as ServerParsedArgs;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
