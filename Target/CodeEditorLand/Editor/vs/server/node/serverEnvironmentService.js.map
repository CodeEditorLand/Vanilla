{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/server/node/serverEnvironmentService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../nls.js';\n\nimport { NativeEnvironmentService } from '../../platform/environment/node/environmentService.js';\nimport { OPTIONS, OptionDescriptions } from '../../platform/environment/node/argv.js';\nimport { refineServiceDecorator } from '../../platform/instantiation/common/instantiation.js';\nimport { IEnvironmentService, INativeEnvironmentService } from '../../platform/environment/common/environment.js';\nimport { memoize } from '../../base/common/decorators.js';\nimport { URI } from '../../base/common/uri.js';\n\nexport const serverOptions: OptionDescriptions<Required<ServerParsedArgs>> = {\n\n\t/* ----- server setup ----- */\n\n\t'host': { type: 'string', cat: 'o', args: 'ip-address', description: nls.localize('host', \"The host name or IP address the server should listen to. If not set, defaults to 'localhost'.\") },\n\t'port': { type: 'string', cat: 'o', args: 'port | port range', description: nls.localize('port', \"The port the server should listen to. If 0 is passed a random free port is picked. If a range in the format num-num is passed, a free port from the range (end inclusive) is selected.\") },\n\t'socket-path': { type: 'string', cat: 'o', args: 'path', description: nls.localize('socket-path', \"The path to a socket file for the server to listen to.\") },\n\t'server-base-path': { type: 'string', cat: 'o', args: 'path', description: nls.localize('server-base-path', \"The path under which the web UI and the code server is provided. Defaults to '/'.`\") },\n\t'connection-token': { type: 'string', cat: 'o', args: 'token', deprecates: ['connectionToken'], description: nls.localize('connection-token', \"A secret that must be included with all requests.\") },\n\t'connection-token-file': { type: 'string', cat: 'o', args: 'path', deprecates: ['connection-secret', 'connectionTokenFile'], description: nls.localize('connection-token-file', \"Path to a file that contains the connection token.\") },\n\t'without-connection-token': { type: 'boolean', cat: 'o', description: nls.localize('without-connection-token', \"Run without a connection token. Only use this if the connection is secured by other means.\") },\n\t'disable-websocket-compression': { type: 'boolean' },\n\t'print-startup-performance': { type: 'boolean' },\n\t'print-ip-address': { type: 'boolean' },\n\t'accept-server-license-terms': { type: 'boolean', cat: 'o', description: nls.localize('acceptLicenseTerms', \"If set, the user accepts the server license terms and the server will be started without a user prompt.\") },\n\t'server-data-dir': { type: 'string', cat: 'o', description: nls.localize('serverDataDir', \"Specifies the directory that server data is kept in.\") },\n\t'telemetry-level': { type: 'string', cat: 'o', args: 'level', description: nls.localize('telemetry-level', \"Sets the initial telemetry level. Valid levels are: 'off', 'crash', 'error' and 'all'. If not specified, the server will send telemetry until a client connects, it will then use the clients telemetry setting. Setting this to 'off' is equivalent to --disable-telemetry\") },\n\n\t/* ----- vs code options ---\t-- */\n\n\t'user-data-dir': OPTIONS['user-data-dir'],\n\t'enable-smoke-test-driver': OPTIONS['enable-smoke-test-driver'],\n\t'disable-telemetry': OPTIONS['disable-telemetry'],\n\t'disable-workspace-trust': OPTIONS['disable-workspace-trust'],\n\t'file-watcher-polling': { type: 'string', deprecates: ['fileWatcherPolling'] },\n\t'log': OPTIONS['log'],\n\t'logsPath': OPTIONS['logsPath'],\n\t'force-disable-user-env': OPTIONS['force-disable-user-env'],\n\n\t/* ----- vs code web options ----- */\n\n\t'folder': { type: 'string', deprecationMessage: 'No longer supported. Folder needs to be provided in the browser URL or with `default-folder`.' },\n\t'workspace': { type: 'string', deprecationMessage: 'No longer supported. Workspace needs to be provided in the browser URL or with `default-workspace`.' },\n\n\t'default-folder': { type: 'string', description: nls.localize('default-folder', 'The workspace folder to open when no input is specified in the browser URL. A relative or absolute path resolved against the current working directory.') },\n\t'default-workspace': { type: 'string', description: nls.localize('default-workspace', 'The workspace to open when no input is specified in the browser URL. A relative or absolute path resolved against the current working directory.') },\n\n\t'enable-sync': { type: 'boolean' },\n\t'github-auth': { type: 'string' },\n\t'use-test-resolver': { type: 'boolean' },\n\n\t/* ----- extension management ----- */\n\n\t'extensions-dir': OPTIONS['extensions-dir'],\n\t'extensions-download-dir': OPTIONS['extensions-download-dir'],\n\t'builtin-extensions-dir': OPTIONS['builtin-extensions-dir'],\n\t'install-extension': OPTIONS['install-extension'],\n\t'install-builtin-extension': OPTIONS['install-builtin-extension'],\n\t'update-extensions': OPTIONS['update-extensions'],\n\t'uninstall-extension': OPTIONS['uninstall-extension'],\n\t'list-extensions': OPTIONS['list-extensions'],\n\t'locate-extension': OPTIONS['locate-extension'],\n\n\t'show-versions': OPTIONS['show-versions'],\n\t'category': OPTIONS['category'],\n\t'force': OPTIONS['force'],\n\t'do-not-sync': OPTIONS['do-not-sync'],\n\t'pre-release': OPTIONS['pre-release'],\n\t'start-server': { type: 'boolean', cat: 'e', description: nls.localize('start-server', \"Start the server when installing or uninstalling extensions. To be used in combination with 'install-extension', 'install-builtin-extension' and 'uninstall-extension'.\") },\n\n\n\t/* ----- remote development options ----- */\n\n\t'enable-remote-auto-shutdown': { type: 'boolean' },\n\t'remote-auto-shutdown-without-delay': { type: 'boolean' },\n\n\t'use-host-proxy': { type: 'boolean' },\n\t'without-browser-env-var': { type: 'boolean' },\n\n\t/* ----- server cli ----- */\n\n\t'help': OPTIONS['help'],\n\t'version': OPTIONS['version'],\n\t'locate-shell-integration-path': OPTIONS['locate-shell-integration-path'],\n\n\t'compatibility': { type: 'string' },\n\n\t_: OPTIONS['_']\n};\n\nexport interface ServerParsedArgs {\n\n\t/* ----- server setup ----- */\n\n\thost?: string;\n\t/**\n\t * A port or a port range\n\t */\n\tport?: string;\n\t'socket-path'?: string;\n\n\t/**\n\t * The path under which the web UI and the code server is provided.\n\t * By defaults it is '/'.`\n\t */\n\t'server-base-path'?: string;\n\n\t/**\n\t * A secret token that must be provided by the web client with all requests.\n\t * Use only `[0-9A-Za-z\\-]`.\n\t *\n\t * By default, a UUID will be generated every time the server starts up.\n\t *\n\t * If the server is running on a multi-user system, then consider\n\t * using `--connection-token-file` which has the advantage that the token cannot\n\t * be seen by other users using `ps` or similar commands.\n\t */\n\t'connection-token'?: string;\n\t/**\n\t * A path to a filename which will be read on startup.\n\t * Consider placing this file in a folder readable only by the same user (a `chmod 0700` directory).\n\t *\n\t * The contents of the file will be used as the connection token. Use only `[0-9A-Z\\-]` as contents in the file.\n\t * The file can optionally end in a `\\n` which will be ignored.\n\t *\n\t * This secret must be communicated to any vscode instance via the resolver or embedder API.\n\t */\n\t'connection-token-file'?: string;\n\n\t/**\n\t * Run the server without a connection token\n\t */\n\t'without-connection-token'?: boolean;\n\n\t'disable-websocket-compression'?: boolean;\n\n\t'print-startup-performance'?: boolean;\n\t'print-ip-address'?: boolean;\n\n\t'accept-server-license-terms': boolean;\n\n\t'server-data-dir'?: string;\n\n\t'telemetry-level'?: string;\n\n\t'disable-workspace-trust'?: boolean;\n\n\t/* ----- vs code options ----- */\n\n\t'user-data-dir'?: string;\n\n\t'enable-smoke-test-driver'?: boolean;\n\n\t'disable-telemetry'?: boolean;\n\t'file-watcher-polling'?: string;\n\n\t'log'?: string[];\n\t'logsPath'?: string;\n\n\t'force-disable-user-env'?: boolean;\n\n\t/* ----- vs code web options ----- */\n\n\t'default-workspace'?: string;\n\t'default-folder'?: string;\n\n\t/** @deprecated use default-workspace instead */\n\tworkspace: string;\n\t/** @deprecated use default-folder instead */\n\tfolder: string;\n\n\n\t'enable-sync'?: boolean;\n\t'github-auth'?: string;\n\t'use-test-resolver'?: boolean;\n\n\t/* ----- extension management ----- */\n\n\t'extensions-dir'?: string;\n\t'extensions-download-dir'?: string;\n\t'builtin-extensions-dir'?: string;\n\t'install-extension'?: string[];\n\t'install-builtin-extension'?: string[];\n\t'update-extensions'?: boolean;\n\t'uninstall-extension'?: string[];\n\t'list-extensions'?: boolean;\n\t'locate-extension'?: string[];\n\t'show-versions'?: boolean;\n\t'category'?: string;\n\tforce?: boolean; // used by install-extension\n\t'do-not-sync'?: boolean; // used by install-extension\n\t'pre-release'?: boolean; // used by install-extension\n\n\t'start-server'?: boolean;\n\n\t/* ----- remote development options ----- */\n\n\t'enable-remote-auto-shutdown'?: boolean;\n\t'remote-auto-shutdown-without-delay'?: boolean;\n\n\t'use-host-proxy'?: boolean;\n\t'without-browser-env-var'?: boolean;\n\n\t/* ----- server cli ----- */\n\thelp: boolean;\n\tversion: boolean;\n\t'locate-shell-integration-path'?: string;\n\n\tcompatibility: string;\n\n\t_: string[];\n}\n\nexport const IServerEnvironmentService = refineServiceDecorator<IEnvironmentService, IServerEnvironmentService>(IEnvironmentService);\n\nexport interface IServerEnvironmentService extends INativeEnvironmentService {\n\treadonly args: ServerParsedArgs;\n}\n\nexport class ServerEnvironmentService extends NativeEnvironmentService implements IServerEnvironmentService {\n\t@memoize\n\toverride get userRoamingDataHome(): URI { return this.appSettingsHome; }\n\toverride get args(): ServerParsedArgs { return super.args as ServerParsedArgs; }\n}\n"],
  "mappings": "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",
  "names": []
}
