{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/server/node/serverServices.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { hostname, release } from \"os\";\nimport { Emitter, type Event } from \"../../base/common/event.js\";\nimport {\n\ttype DisposableStore,\n\ttoDisposable,\n} from \"../../base/common/lifecycle.js\";\nimport { Schemas } from \"../../base/common/network.js\";\nimport * as path from \"../../base/common/path.js\";\nimport type { IURITransformer } from \"../../base/common/uriIpc.js\";\nimport {\n\tgetMachineId,\n\tgetSqmMachineId,\n\tgetdevDeviceId,\n} from \"../../base/node/id.js\";\nimport { Promises } from \"../../base/node/pfs.js\";\nimport {\n\ttype ClientConnectionEvent,\n\ttype IMessagePassingProtocol,\n\tIPCServer,\n\tStaticRouter,\n} from \"../../base/parts/ipc/common/ipc.js\";\nimport { ProtocolConstants } from \"../../base/parts/ipc/common/ipc.net.js\";\nimport { localize } from \"../../nls.js\";\nimport { IConfigurationService } from \"../../platform/configuration/common/configuration.js\";\nimport { ConfigurationService } from \"../../platform/configuration/common/configurationService.js\";\nimport {\n\tCSSDevelopmentService,\n\tICSSDevelopmentService,\n} from \"../../platform/cssDev/node/cssDevService.js\";\nimport { ExtensionHostDebugBroadcastChannel } from \"../../platform/debug/common/extensionHostDebugIpc.js\";\nimport { IDownloadService } from \"../../platform/download/common/download.js\";\nimport { DownloadServiceChannelClient } from \"../../platform/download/common/downloadIpc.js\";\nimport {\n\tIEnvironmentService,\n\tINativeEnvironmentService,\n} from \"../../platform/environment/common/environment.js\";\nimport { ExtensionGalleryServiceWithNoStorageService } from \"../../platform/extensionManagement/common/extensionGalleryService.js\";\nimport { IExtensionGalleryService } from \"../../platform/extensionManagement/common/extensionManagement.js\";\nimport { ExtensionManagementCLI } from \"../../platform/extensionManagement/common/extensionManagementCLI.js\";\nimport { ExtensionManagementChannel } from \"../../platform/extensionManagement/common/extensionManagementIpc.js\";\nimport { IExtensionsProfileScannerService } from \"../../platform/extensionManagement/common/extensionsProfileScannerService.js\";\nimport { IExtensionsScannerService } from \"../../platform/extensionManagement/common/extensionsScannerService.js\";\nimport {\n\tExtensionManagementService,\n\tINativeServerExtensionManagementService,\n} from \"../../platform/extensionManagement/node/extensionManagementService.js\";\nimport {\n\tExtensionSignatureVerificationService,\n\tIExtensionSignatureVerificationService,\n} from \"../../platform/extensionManagement/node/extensionSignatureVerificationService.js\";\nimport { ExtensionsProfileScannerService } from \"../../platform/extensionManagement/node/extensionsProfileScannerService.js\";\nimport { FileService } from \"../../platform/files/common/fileService.js\";\nimport { IFileService } from \"../../platform/files/common/files.js\";\nimport { DiskFileSystemProvider } from \"../../platform/files/node/diskFileSystemProvider.js\";\nimport { SyncDescriptor } from \"../../platform/instantiation/common/descriptors.js\";\nimport type { IInstantiationService } from \"../../platform/instantiation/common/instantiation.js\";\nimport { InstantiationService } from \"../../platform/instantiation/common/instantiationService.js\";\nimport { ServiceCollection } from \"../../platform/instantiation/common/serviceCollection.js\";\nimport { ILanguagePackService } from \"../../platform/languagePacks/common/languagePacks.js\";\nimport { NativeLanguagePackService } from \"../../platform/languagePacks/node/languagePacks.js\";\nimport {\n\tAbstractLogger,\n\tDEFAULT_LOG_LEVEL,\n\tILogService,\n\tILoggerService,\n\tLogLevel,\n\tLogLevelToString,\n\tgetLogLevel,\n\tlog,\n} from \"../../platform/log/common/log.js\";\nimport { LoggerChannel } from \"../../platform/log/common/logIpc.js\";\nimport { LogService } from \"../../platform/log/common/logService.js\";\nimport { LoggerService } from \"../../platform/log/node/loggerService.js\";\nimport { NullPolicyService } from \"../../platform/policy/common/policy.js\";\nimport product from \"../../platform/product/common/product.js\";\nimport { IProductService } from \"../../platform/product/common/productService.js\";\nimport type { RemoteAgentConnectionContext } from \"../../platform/remote/common/remoteAgentEnvironment.js\";\nimport { RemoteExtensionsScannerChannelName } from \"../../platform/remote/common/remoteExtensionsScanner.js\";\nimport { IRequestService } from \"../../platform/request/common/request.js\";\nimport { RequestChannel } from \"../../platform/request/common/requestIpc.js\";\nimport { RequestService } from \"../../platform/request/node/requestService.js\";\nimport { resolveCommonProperties } from \"../../platform/telemetry/common/commonProperties.js\";\nimport { ServerTelemetryChannel } from \"../../platform/telemetry/common/remoteTelemetryChannel.js\";\nimport {\n\tIServerTelemetryService,\n\tServerNullTelemetryService,\n\tServerTelemetryService,\n} from \"../../platform/telemetry/common/serverTelemetryService.js\";\nimport {\n\tITelemetryService,\n\tTelemetryLevel,\n} from \"../../platform/telemetry/common/telemetry.js\";\nimport type { ITelemetryServiceConfig } from \"../../platform/telemetry/common/telemetryService.js\";\nimport {\n\ttype ITelemetryAppender,\n\tNullAppender,\n\tgetPiiPathsFromEnvironment,\n\tisInternalTelemetry,\n\tisLoggingOnly,\n\tsupportsTelemetry,\n} from \"../../platform/telemetry/common/telemetryUtils.js\";\nimport { OneDataSystemAppender } from \"../../platform/telemetry/node/1dsAppender.js\";\nimport ErrorTelemetry from \"../../platform/telemetry/node/errorTelemetry.js\";\nimport {\n\tIPtyService,\n\tTerminalSettingId,\n} from \"../../platform/terminal/common/terminal.js\";\nimport { NodePtyHostStarter } from \"../../platform/terminal/node/nodePtyHostStarter.js\";\nimport { PtyHostService } from \"../../platform/terminal/node/ptyHostService.js\";\nimport { IUriIdentityService } from \"../../platform/uriIdentity/common/uriIdentity.js\";\nimport { UriIdentityService } from \"../../platform/uriIdentity/common/uriIdentityService.js\";\nimport { IUserDataProfilesService } from \"../../platform/userDataProfile/common/userDataProfile.js\";\nimport { RemoteUserDataProfilesServiceChannel } from \"../../platform/userDataProfile/common/userDataProfileIpc.js\";\nimport { ServerUserDataProfilesService } from \"../../platform/userDataProfile/node/userDataProfile.js\";\nimport { createURITransformer } from \"../../workbench/api/node/uriTransformer.js\";\nimport { REMOTE_TERMINAL_CHANNEL_NAME } from \"../../workbench/contrib/terminal/common/remote/remoteTerminalChannel.js\";\nimport { REMOTE_FILE_SYSTEM_CHANNEL_NAME } from \"../../workbench/services/remote/common/remoteFileSystemProviderClient.js\";\nimport {\n\tExtensionHostStatusService,\n\tIExtensionHostStatusService,\n} from \"./extensionHostStatusService.js\";\nimport { ExtensionsScannerService } from \"./extensionsScannerService.js\";\nimport { RemoteAgentEnvironmentChannel } from \"./remoteAgentEnvironmentImpl.js\";\nimport {\n\tRemoteExtensionsScannerChannel,\n\tRemoteExtensionsScannerService,\n} from \"./remoteExtensionsScanner.js\";\nimport { RemoteAgentFileSystemProviderChannel } from \"./remoteFileSystemProviderServer.js\";\nimport { RemoteTerminalChannel } from \"./remoteTerminalChannel.js\";\nimport type { ServerConnectionToken } from \"./serverConnectionToken.js\";\nimport {\n\tServerEnvironmentService,\n\ttype ServerParsedArgs,\n} from \"./serverEnvironmentService.js\";\n\nconst eventPrefix = \"monacoworkbench\";\n\nexport async function setupServerServices(\n\tconnectionToken: ServerConnectionToken,\n\targs: ServerParsedArgs,\n\tREMOTE_DATA_FOLDER: string,\n\tdisposables: DisposableStore,\n) {\n\tconst services = new ServiceCollection();\n\tconst socketServer = new SocketServer<RemoteAgentConnectionContext>();\n\n\tconst productService: IProductService = {\n\t\t_serviceBrand: undefined,\n\t\t...product,\n\t};\n\tservices.set(IProductService, productService);\n\n\tconst environmentService = new ServerEnvironmentService(\n\t\targs,\n\t\tproductService,\n\t);\n\tservices.set(IEnvironmentService, environmentService);\n\tservices.set(INativeEnvironmentService, environmentService);\n\n\tconst loggerService = new LoggerService(\n\t\tgetLogLevel(environmentService),\n\t\tenvironmentService.logsHome,\n\t);\n\tservices.set(ILoggerService, loggerService);\n\tsocketServer.registerChannel(\n\t\t\"logger\",\n\t\tnew LoggerChannel(loggerService, (ctx: RemoteAgentConnectionContext) =>\n\t\t\tgetUriTransformer(ctx.remoteAuthority),\n\t\t),\n\t);\n\n\tconst logger = loggerService.createLogger(\"remoteagent\", {\n\t\tname: localize(\"remoteExtensionLog\", \"Server\"),\n\t});\n\tconst logService = new LogService(logger, [\n\t\tnew ServerLogger(getLogLevel(environmentService)),\n\t]);\n\tservices.set(ILogService, logService);\n\tsetTimeout(\n\t\t() =>\n\t\t\tcleanupOlderLogs(\n\t\t\t\tenvironmentService.logsHome.with({ scheme: Schemas.file })\n\t\t\t\t\t.fsPath,\n\t\t\t).then(null, (err) => logService.error(err)),\n\t\t10000,\n\t);\n\tlogService.onDidChangeLogLevel((logLevel) =>\n\t\tlog(\n\t\t\tlogService,\n\t\t\tlogLevel,\n\t\t\t`Log level changed to ${LogLevelToString(logService.getLevel())}`,\n\t\t),\n\t);\n\n\tlogService.trace(`Remote configuration data at ${REMOTE_DATA_FOLDER}`);\n\tlogService.trace(\"process arguments:\", environmentService.args);\n\tif (Array.isArray(productService.serverGreeting)) {\n\t\tlogService.info(`\\n\\n${productService.serverGreeting.join(\"\\n\")}\\n\\n`);\n\t}\n\n\t// ExtensionHost Debug broadcast service\n\tsocketServer.registerChannel(\n\t\tExtensionHostDebugBroadcastChannel.ChannelName,\n\t\tnew ExtensionHostDebugBroadcastChannel(),\n\t);\n\n\t// TODO: @Sandy @Joao need dynamic context based router\n\tconst router = new StaticRouter<RemoteAgentConnectionContext>(\n\t\t(ctx) => ctx.clientId === \"renderer\",\n\t);\n\n\t// Files\n\tconst fileService = disposables.add(new FileService(logService));\n\tservices.set(IFileService, fileService);\n\tfileService.registerProvider(\n\t\tSchemas.file,\n\t\tdisposables.add(new DiskFileSystemProvider(logService)),\n\t);\n\n\t// URI Identity\n\tconst uriIdentityService = new UriIdentityService(fileService);\n\tservices.set(IUriIdentityService, uriIdentityService);\n\n\t// Configuration\n\tconst configurationService = new ConfigurationService(\n\t\tenvironmentService.machineSettingsResource,\n\t\tfileService,\n\t\tnew NullPolicyService(),\n\t\tlogService,\n\t);\n\tservices.set(IConfigurationService, configurationService);\n\n\t// User Data Profiles\n\tconst userDataProfilesService = new ServerUserDataProfilesService(\n\t\turiIdentityService,\n\t\tenvironmentService,\n\t\tfileService,\n\t\tlogService,\n\t);\n\tservices.set(IUserDataProfilesService, userDataProfilesService);\n\tsocketServer.registerChannel(\n\t\t\"userDataProfiles\",\n\t\tnew RemoteUserDataProfilesServiceChannel(\n\t\t\tuserDataProfilesService,\n\t\t\t(ctx: RemoteAgentConnectionContext) =>\n\t\t\t\tgetUriTransformer(ctx.remoteAuthority),\n\t\t),\n\t);\n\n\t// Dev Only: CSS service (for ESM)\n\tservices.set(\n\t\tICSSDevelopmentService,\n\t\tnew SyncDescriptor(CSSDevelopmentService, undefined, true),\n\t);\n\n\t// Initialize\n\tconst [, , machineId, sqmId, devDeviceId] = await Promise.all([\n\t\tconfigurationService.initialize(),\n\t\tuserDataProfilesService.init(),\n\t\tgetMachineId(logService.error.bind(logService)),\n\t\tgetSqmMachineId(logService.error.bind(logService)),\n\t\tgetdevDeviceId(logService.error.bind(logService)),\n\t]);\n\n\tconst extensionHostStatusService = new ExtensionHostStatusService();\n\tservices.set(IExtensionHostStatusService, extensionHostStatusService);\n\n\t// Request\n\tconst requestService = new RequestService(\n\t\tconfigurationService,\n\t\tenvironmentService,\n\t\tlogService,\n\t);\n\tservices.set(IRequestService, requestService);\n\n\tlet oneDsAppender: ITelemetryAppender = NullAppender;\n\tconst isInternal = isInternalTelemetry(\n\t\tproductService,\n\t\tconfigurationService,\n\t);\n\tif (supportsTelemetry(productService, environmentService)) {\n\t\tif (\n\t\t\t!isLoggingOnly(productService, environmentService) &&\n\t\t\tproductService.aiConfig?.ariaKey\n\t\t) {\n\t\t\toneDsAppender = new OneDataSystemAppender(\n\t\t\t\trequestService,\n\t\t\t\tisInternal,\n\t\t\t\teventPrefix,\n\t\t\t\tnull,\n\t\t\t\tproductService.aiConfig.ariaKey,\n\t\t\t);\n\t\t\tdisposables.add(toDisposable(() => oneDsAppender?.flush())); // Ensure the AI appender is disposed so that it flushes remaining data\n\t\t}\n\n\t\tconst config: ITelemetryServiceConfig = {\n\t\t\tappenders: [oneDsAppender],\n\t\t\tcommonProperties: resolveCommonProperties(\n\t\t\t\trelease(),\n\t\t\t\thostname(),\n\t\t\t\tprocess.arch,\n\t\t\t\tproductService.commit,\n\t\t\t\tproductService.version + \"-remote\",\n\t\t\t\tmachineId,\n\t\t\t\tsqmId,\n\t\t\t\tdevDeviceId,\n\t\t\t\tisInternal,\n\t\t\t\t\"remoteAgent\",\n\t\t\t),\n\t\t\tpiiPaths: getPiiPathsFromEnvironment(environmentService),\n\t\t};\n\t\tconst initialTelemetryLevelArg =\n\t\t\tenvironmentService.args[\"telemetry-level\"];\n\t\tlet injectedTelemetryLevel: TelemetryLevel = TelemetryLevel.USAGE;\n\t\t// Convert the passed in CLI argument into a telemetry level for the telemetry service\n\t\tif (initialTelemetryLevelArg === \"all\") {\n\t\t\tinjectedTelemetryLevel = TelemetryLevel.USAGE;\n\t\t} else if (initialTelemetryLevelArg === \"error\") {\n\t\t\tinjectedTelemetryLevel = TelemetryLevel.ERROR;\n\t\t} else if (initialTelemetryLevelArg === \"crash\") {\n\t\t\tinjectedTelemetryLevel = TelemetryLevel.CRASH;\n\t\t} else if (initialTelemetryLevelArg !== undefined) {\n\t\t\tinjectedTelemetryLevel = TelemetryLevel.NONE;\n\t\t}\n\t\tservices.set(\n\t\t\tIServerTelemetryService,\n\t\t\tnew SyncDescriptor(ServerTelemetryService, [\n\t\t\t\tconfig,\n\t\t\t\tinjectedTelemetryLevel,\n\t\t\t]),\n\t\t);\n\t} else {\n\t\tservices.set(IServerTelemetryService, ServerNullTelemetryService);\n\t}\n\n\tservices.set(\n\t\tIExtensionGalleryService,\n\t\tnew SyncDescriptor(ExtensionGalleryServiceWithNoStorageService),\n\t);\n\n\tconst downloadChannel = socketServer.getChannel(\"download\", router);\n\tservices.set(\n\t\tIDownloadService,\n\t\tnew DownloadServiceChannelClient(\n\t\t\tdownloadChannel,\n\t\t\t() =>\n\t\t\t\tgetUriTransformer(\n\t\t\t\t\t\"renderer\",\n\t\t\t\t) /* TODO: @Sandy @Joao need dynamic context based router */,\n\t\t),\n\t);\n\n\tservices.set(\n\t\tIExtensionsProfileScannerService,\n\t\tnew SyncDescriptor(ExtensionsProfileScannerService),\n\t);\n\tservices.set(\n\t\tIExtensionsScannerService,\n\t\tnew SyncDescriptor(ExtensionsScannerService),\n\t);\n\tservices.set(\n\t\tIExtensionSignatureVerificationService,\n\t\tnew SyncDescriptor(ExtensionSignatureVerificationService),\n\t);\n\tservices.set(\n\t\tINativeServerExtensionManagementService,\n\t\tnew SyncDescriptor(ExtensionManagementService),\n\t);\n\n\tconst instantiationService: IInstantiationService =\n\t\tnew InstantiationService(services);\n\tservices.set(\n\t\tILanguagePackService,\n\t\tinstantiationService.createInstance(NativeLanguagePackService),\n\t);\n\n\tconst ptyHostStarter = instantiationService.createInstance(\n\t\tNodePtyHostStarter,\n\t\t{\n\t\t\tgraceTime: ProtocolConstants.ReconnectionGraceTime,\n\t\t\tshortGraceTime: ProtocolConstants.ReconnectionShortGraceTime,\n\t\t\tscrollback:\n\t\t\t\tconfigurationService.getValue<number>(\n\t\t\t\t\tTerminalSettingId.PersistentSessionScrollback,\n\t\t\t\t) ?? 100,\n\t\t},\n\t);\n\tconst ptyHostService = instantiationService.createInstance(\n\t\tPtyHostService,\n\t\tptyHostStarter,\n\t);\n\tservices.set(IPtyService, ptyHostService);\n\n\tinstantiationService.invokeFunction((accessor) => {\n\t\tconst extensionManagementService = accessor.get(\n\t\t\tINativeServerExtensionManagementService,\n\t\t);\n\t\tconst extensionsScannerService = accessor.get(\n\t\t\tIExtensionsScannerService,\n\t\t);\n\t\tconst extensionGalleryService = accessor.get(IExtensionGalleryService);\n\t\tconst languagePackService = accessor.get(ILanguagePackService);\n\t\tconst remoteExtensionEnvironmentChannel =\n\t\t\tnew RemoteAgentEnvironmentChannel(\n\t\t\t\tconnectionToken,\n\t\t\t\tenvironmentService,\n\t\t\t\tuserDataProfilesService,\n\t\t\t\textensionHostStatusService,\n\t\t\t);\n\t\tsocketServer.registerChannel(\n\t\t\t\"remoteextensionsenvironment\",\n\t\t\tremoteExtensionEnvironmentChannel,\n\t\t);\n\n\t\tconst telemetryChannel = new ServerTelemetryChannel(\n\t\t\taccessor.get(IServerTelemetryService),\n\t\t\toneDsAppender,\n\t\t);\n\t\tsocketServer.registerChannel(\"telemetry\", telemetryChannel);\n\n\t\tsocketServer.registerChannel(\n\t\t\tREMOTE_TERMINAL_CHANNEL_NAME,\n\t\t\tnew RemoteTerminalChannel(\n\t\t\t\tenvironmentService,\n\t\t\t\tlogService,\n\t\t\t\tptyHostService,\n\t\t\t\tproductService,\n\t\t\t\textensionManagementService,\n\t\t\t\tconfigurationService,\n\t\t\t),\n\t\t);\n\n\t\tconst remoteExtensionsScanner = new RemoteExtensionsScannerService(\n\t\t\tinstantiationService.createInstance(\n\t\t\t\tExtensionManagementCLI,\n\t\t\t\tlogService,\n\t\t\t),\n\t\t\tenvironmentService,\n\t\t\tuserDataProfilesService,\n\t\t\textensionsScannerService,\n\t\t\tlogService,\n\t\t\textensionGalleryService,\n\t\t\tlanguagePackService,\n\t\t);\n\t\tsocketServer.registerChannel(\n\t\t\tRemoteExtensionsScannerChannelName,\n\t\t\tnew RemoteExtensionsScannerChannel(\n\t\t\t\tremoteExtensionsScanner,\n\t\t\t\t(ctx: RemoteAgentConnectionContext) =>\n\t\t\t\t\tgetUriTransformer(ctx.remoteAuthority),\n\t\t\t),\n\t\t);\n\n\t\tconst remoteFileSystemChannel = disposables.add(\n\t\t\tnew RemoteAgentFileSystemProviderChannel(\n\t\t\t\tlogService,\n\t\t\t\tenvironmentService,\n\t\t\t\tconfigurationService,\n\t\t\t),\n\t\t);\n\t\tsocketServer.registerChannel(\n\t\t\tREMOTE_FILE_SYSTEM_CHANNEL_NAME,\n\t\t\tremoteFileSystemChannel,\n\t\t);\n\n\t\tsocketServer.registerChannel(\n\t\t\t\"request\",\n\t\t\tnew RequestChannel(accessor.get(IRequestService)),\n\t\t);\n\n\t\tconst channel = new ExtensionManagementChannel(\n\t\t\textensionManagementService,\n\t\t\t(ctx: RemoteAgentConnectionContext) =>\n\t\t\t\tgetUriTransformer(ctx.remoteAuthority),\n\t\t);\n\t\tsocketServer.registerChannel(\"extensions\", channel);\n\n\t\t// clean up extensions folder\n\t\tremoteExtensionsScanner\n\t\t\t.whenExtensionsReady()\n\t\t\t.then(() => extensionManagementService.cleanUp());\n\n\t\tdisposables.add(new ErrorTelemetry(accessor.get(ITelemetryService)));\n\n\t\treturn {\n\t\t\ttelemetryService: accessor.get(ITelemetryService),\n\t\t};\n\t});\n\n\treturn { socketServer, instantiationService };\n}\n\nconst _uriTransformerCache: { [remoteAuthority: string]: IURITransformer } =\n\tObject.create(null);\n\nfunction getUriTransformer(remoteAuthority: string): IURITransformer {\n\tif (!_uriTransformerCache[remoteAuthority]) {\n\t\t_uriTransformerCache[remoteAuthority] =\n\t\t\tcreateURITransformer(remoteAuthority);\n\t}\n\treturn _uriTransformerCache[remoteAuthority];\n}\n\nexport class SocketServer<TContext = string> extends IPCServer<TContext> {\n\tprivate _onDidConnectEmitter: Emitter<ClientConnectionEvent>;\n\n\tconstructor() {\n\t\tconst emitter = new Emitter<ClientConnectionEvent>();\n\t\tsuper(emitter.event);\n\t\tthis._onDidConnectEmitter = emitter;\n\t}\n\n\tpublic acceptConnection(\n\t\tprotocol: IMessagePassingProtocol,\n\t\tonDidClientDisconnect: Event<void>,\n\t): void {\n\t\tthis._onDidConnectEmitter.fire({ protocol, onDidClientDisconnect });\n\t}\n}\n\nclass ServerLogger extends AbstractLogger {\n\tprivate useColors: boolean;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t\tthis.useColors = Boolean(process.stdout.isTTY);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Trace)) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Debug)) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Info)) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Warning)) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.warn(`\\x1b[93m[${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`[${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Error)) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[91m[${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n}\n\nfunction now(): string {\n\tconst date = new Date();\n\treturn `${twodigits(date.getHours())}:${twodigits(date.getMinutes())}:${twodigits(date.getSeconds())}`;\n}\n\nfunction twodigits(n: number): string {\n\tif (n < 10) {\n\t\treturn `0${n}`;\n\t}\n\treturn String(n);\n}\n\n/**\n * Cleans up older logs, while keeping the 10 most recent ones.\n */\nasync function cleanupOlderLogs(logsPath: string): Promise<void> {\n\tconst currentLog = path.basename(logsPath);\n\tconst logsRoot = path.dirname(logsPath);\n\tconst children = await Promises.readdir(logsRoot);\n\tconst allSessions = children.filter((name) => /^\\d{8}T\\d{6}$/.test(name));\n\tconst oldSessions = allSessions.sort().filter((d) => d !== currentLog);\n\tconst toDelete = oldSessions.slice(0, Math.max(0, oldSessions.length - 9));\n\n\tawait Promise.all(\n\t\ttoDelete.map((name) => Promises.rm(path.join(logsRoot, name))),\n\t);\n}\n"],
  "mappings": "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",
  "names": []
}
