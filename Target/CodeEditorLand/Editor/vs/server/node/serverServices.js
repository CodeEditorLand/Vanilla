import{hostname as ne,release as oe}from"os";import{Emitter as ie}from"../../base/common/event.js";import{toDisposable as se}from"../../base/common/lifecycle.js";import{Schemas as k}from"../../base/common/network.js";import*as E from"../../base/common/path.js";import{getMachineId as me,getSqmMachineId as ae,getdevDeviceId as ce}from"../../base/node/id.js";import{Promises as $}from"../../base/node/pfs.js";import{IPCServer as le,StaticRouter as ge}from"../../base/parts/ipc/common/ipc.js";import{ProtocolConstants as M}from"../../base/parts/ipc/common/ipc.net.js";import{localize as ve}from"../../nls.js";import{IConfigurationService as fe}from"../../platform/configuration/common/configuration.js";import{ConfigurationService as Se}from"../../platform/configuration/common/configurationService.js";import{CSSDevelopmentService as pe,ICSSDevelopmentService as de}from"../../platform/cssDev/node/cssDevService.js";import{ExtensionHostDebugBroadcastChannel as H}from"../../platform/debug/common/extensionHostDebugIpc.js";import{IDownloadService as Ce}from"../../platform/download/common/download.js";import{DownloadServiceChannelClient as ue}from"../../platform/download/common/downloadIpc.js";import{IEnvironmentService as he,INativeEnvironmentService as ye}from"../../platform/environment/common/environment.js";import{ExtensionGalleryServiceWithNoStorageService as we}from"../../platform/extensionManagement/common/extensionGalleryService.js";import{IExtensionGalleryService as U}from"../../platform/extensionManagement/common/extensionManagement.js";import{ExtensionManagementCLI as Ie}from"../../platform/extensionManagement/common/extensionManagementCLI.js";import{ExtensionManagementChannel as Ee}from"../../platform/extensionManagement/common/extensionManagementIpc.js";import{IExtensionsProfileScannerService as xe}from"../../platform/extensionManagement/common/extensionsProfileScannerService.js";import{IExtensionsScannerService as _}from"../../platform/extensionManagement/common/extensionsScannerService.js";import{ExtensionManagementService as Le,INativeServerExtensionManagementService as G}from"../../platform/extensionManagement/node/extensionManagementService.js";import{ExtensionSignatureVerificationService as Te,IExtensionSignatureVerificationService as Pe}from"../../platform/extensionManagement/node/extensionSignatureVerificationService.js";import{ExtensionsProfileScannerService as Re}from"../../platform/extensionManagement/node/extensionsProfileScannerService.js";import{FileService as Ae}from"../../platform/files/common/fileService.js";import{IFileService as De}from"../../platform/files/common/files.js";import{DiskFileSystemProvider as be}from"../../platform/files/node/diskFileSystemProvider.js";import{SyncDescriptor as g}from"../../platform/instantiation/common/descriptors.js";import{InstantiationService as Ne}from"../../platform/instantiation/common/instantiationService.js";import{ServiceCollection as ke}from"../../platform/instantiation/common/serviceCollection.js";import{ILanguagePackService as j}from"../../platform/languagePacks/common/languagePacks.js";import{NativeLanguagePackService as $e}from"../../platform/languagePacks/node/languagePacks.js";import{AbstractLogger as Me,DEFAULT_LOG_LEVEL as He,ILogService as Ue,ILoggerService as _e,LogLevel as C,LogLevelToString as Ge,getLogLevel as F,log as je}from"../../platform/log/common/log.js";import{LoggerChannel as Fe}from"../../platform/log/common/logIpc.js";import{LogService as Oe}from"../../platform/log/common/logService.js";import{LoggerService as qe}from"../../platform/log/node/loggerService.js";import{NullPolicyService as Ve}from"../../platform/policy/common/policy.js";import Be from"../../platform/product/common/product.js";import{IProductService as ze}from"../../platform/product/common/productService.js";import{RemoteExtensionsScannerChannelName as Ke}from"../../platform/remote/common/remoteExtensionsScanner.js";import{IRequestService as O}from"../../platform/request/common/request.js";import{RequestChannel as We}from"../../platform/request/common/requestIpc.js";import{RequestService as Ye}from"../../platform/request/node/requestService.js";import{resolveCommonProperties as Je}from"../../platform/telemetry/common/commonProperties.js";import{ServerTelemetryChannel as Qe}from"../../platform/telemetry/common/remoteTelemetryChannel.js";import{IServerTelemetryService as x,ServerNullTelemetryService as Xe,ServerTelemetryService as Ze}from"../../platform/telemetry/common/serverTelemetryService.js";import{ITelemetryService as q,TelemetryLevel as u}from"../../platform/telemetry/common/telemetry.js";import{NullAppender as er,getPiiPathsFromEnvironment as rr,isInternalTelemetry as tr,isLoggingOnly as nr,supportsTelemetry as or}from"../../platform/telemetry/common/telemetryUtils.js";import{OneDataSystemAppender as ir}from"../../platform/telemetry/node/1dsAppender.js";import sr from"../../platform/telemetry/node/errorTelemetry.js";import{IPtyService as mr,TerminalSettingId as ar}from"../../platform/terminal/common/terminal.js";import{NodePtyHostStarter as cr}from"../../platform/terminal/node/nodePtyHostStarter.js";import{PtyHostService as lr}from"../../platform/terminal/node/ptyHostService.js";import{IUriIdentityService as gr}from"../../platform/uriIdentity/common/uriIdentity.js";import{UriIdentityService as vr}from"../../platform/uriIdentity/common/uriIdentityService.js";import{IUserDataProfilesService as fr}from"../../platform/userDataProfile/common/userDataProfile.js";import{RemoteUserDataProfilesServiceChannel as Sr}from"../../platform/userDataProfile/common/userDataProfileIpc.js";import{ServerUserDataProfilesService as pr}from"../../platform/userDataProfile/node/userDataProfile.js";import{createURITransformer as dr}from"../../workbench/api/node/uriTransformer.js";import{REMOTE_TERMINAL_CHANNEL_NAME as Cr}from"../../workbench/contrib/terminal/common/remote/remoteTerminalChannel.js";import{REMOTE_FILE_SYSTEM_CHANNEL_NAME as ur}from"../../workbench/services/remote/common/remoteFileSystemProviderClient.js";import{ExtensionHostStatusService as hr,IExtensionHostStatusService as yr}from"./extensionHostStatusService.js";import{ExtensionsScannerService as wr}from"./extensionsScannerService.js";import{RemoteAgentEnvironmentChannel as Ir}from"./remoteAgentEnvironmentImpl.js";import{RemoteExtensionsScannerChannel as Er,RemoteExtensionsScannerService as xr}from"./remoteExtensionsScanner.js";import{RemoteAgentFileSystemProviderChannel as Lr}from"./remoteFileSystemProviderServer.js";import{RemoteTerminalChannel as Tr}from"./remoteTerminalChannel.js";import{ServerEnvironmentService as Pr}from"./serverEnvironmentService.js";const Rr="monacoworkbench";async function Kt(o,i,a,v){const e=new ke,s=new Ar,m={_serviceBrand:void 0,...Be};e.set(ze,m);const r=new Pr(i,m);e.set(he,r),e.set(ye,r);const w=new qe(F(r),r.logsHome);e.set(_e,w),s.registerChannel("logger",new Fe(w,n=>h(n.remoteAuthority)));const V=w.createLogger("remoteagent",{name:ve("remoteExtensionLog","Server")}),t=new Oe(V,[new Dr(F(r))]);e.set(Ue,t),setTimeout(()=>br(r.logsHome.with({scheme:k.file}).fsPath).then(null,n=>t.error(n)),1e4),t.onDidChangeLogLevel(n=>je(t,n,`Log level changed to ${Ge(t.getLevel())}`)),t.trace(`Remote configuration data at ${a}`),t.trace("process arguments:",r.args),Array.isArray(m.serverGreeting)&&t.info(`

${m.serverGreeting.join(`
`)}

`),s.registerChannel(H.ChannelName,new H);const B=new ge(n=>n.clientId==="renderer"),p=v.add(new Ae(t));e.set(De,p),p.registerProvider(k.file,v.add(new be(t)));const P=new vr(p);e.set(gr,P);const f=new Se(r.machineSettingsResource,p,new Ve,t);e.set(fe,f);const d=new pr(P,r,p,t);e.set(fr,d),s.registerChannel("userDataProfiles",new Sr(d,n=>h(n.remoteAuthority))),e.set(de,new g(pe,void 0,!0));const[,,z,K,W]=await Promise.all([f.initialize(),d.init(),me(t.error.bind(t)),ae(t.error.bind(t)),ce(t.error.bind(t))]),R=new hr;e.set(yr,R);const A=new Ye(f,r,t);e.set(O,A);let y=er;const D=tr(m,f);if(or(m,r)){!nr(m,r)&&m.aiConfig?.ariaKey&&(y=new ir(A,D,Rr,null,m.aiConfig.ariaKey),v.add(se(()=>y?.flush())));const n={appenders:[y],commonProperties:Je(oe(),ne(),process.arch,m.commit,m.version+"-remote",z,K,W,D,"remoteAgent"),piiPaths:rr(r)},c=r.args["telemetry-level"];let l=u.USAGE;c==="all"?l=u.USAGE:c==="error"?l=u.ERROR:c==="crash"?l=u.CRASH:c!==void 0&&(l=u.NONE),e.set(x,new g(Ze,[n,l]))}else e.set(x,Xe);e.set(U,new g(we));const Y=s.getChannel("download",B);e.set(Ce,new ue(Y,()=>h("renderer"))),e.set(xe,new g(Re)),e.set(_,new g(wr)),e.set(Pe,new g(Te)),e.set(G,new g(Le));const S=new Ne(e);e.set(j,S.createInstance($e));const J=S.createInstance(cr,{graceTime:M.ReconnectionGraceTime,shortGraceTime:M.ReconnectionShortGraceTime,scrollback:f.getValue(ar.PersistentSessionScrollback)??100}),b=S.createInstance(lr,J);return e.set(mr,b),S.invokeFunction(n=>{const c=n.get(G),l=n.get(_),Q=n.get(U),X=n.get(j),Z=new Ir(o,r,d,R);s.registerChannel("remoteextensionsenvironment",Z);const ee=new Qe(n.get(x),y);s.registerChannel("telemetry",ee),s.registerChannel(Cr,new Tr(r,t,b,m,c,f));const N=new xr(S.createInstance(Ie,t),r,d,l,t,Q,X);s.registerChannel(Ke,new Er(N,I=>h(I.remoteAuthority)));const re=v.add(new Lr(t,r));s.registerChannel(ur,re),s.registerChannel("request",new We(n.get(O)));const te=new Ee(c,I=>h(I.remoteAuthority));return s.registerChannel("extensions",te),N.whenExtensionsReady().then(()=>c.cleanUp()),v.add(new sr(n.get(q))),{telemetryService:n.get(q)}}),{socketServer:s,instantiationService:S}}const L=Object.create(null);function h(o){return L[o]||(L[o]=dr(o)),L[o]}class Ar extends le{_onDidConnectEmitter;constructor(){const i=new ie;super(i.event),this._onDidConnectEmitter=i}acceptConnection(i,a){this._onDidConnectEmitter.fire({protocol:i,onDidClientDisconnect:a})}}class Dr extends Me{useColors;constructor(i=He){super(),this.setLevel(i),this.useColors=!!process.stdout.isTTY}trace(i,...a){this.checkLogLevel(C.Trace)&&this.useColors}debug(i,...a){this.checkLogLevel(C.Debug)&&this.useColors}info(i,...a){this.checkLogLevel(C.Info)&&this.useColors}warn(i,...a){this.checkLogLevel(C.Warning)&&this.useColors}error(i,...a){this.checkLogLevel(C.Error)&&this.useColors}flush(){}}function Wt(){const o=new Date;return`${T(o.getHours())}:${T(o.getMinutes())}:${T(o.getSeconds())}`}function T(o){return o<10?`0${o}`:String(o)}async function br(o){const i=E.basename(o),a=E.dirname(o),s=(await $.readdir(a)).filter(r=>/^\d{8}T\d{6}$/.test(r)).sort().filter(r=>r!==i),m=s.slice(0,Math.max(0,s.length-9));await Promise.all(m.map(r=>$.rm(E.join(a,r))))}export{Ar as SocketServer,Kt as setupServerServices};
