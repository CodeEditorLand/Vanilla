{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/server/node/server.main.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from \"fs\";\nimport type * as net from \"net\";\nimport * as os from \"os\";\nimport { performance } from \"perf_hooks\";\nimport { FileAccess } from \"../../base/common/network.js\";\nimport { dirname, join } from \"../../base/common/path.js\";\nimport * as perf from \"../../base/common/performance.js\";\nimport {\n\ttype ErrorReporter,\n\tparseArgs,\n} from \"../../platform/environment/node/argv.js\";\nimport product from \"../../platform/product/common/product.js\";\nimport { run as runCli } from \"./remoteExtensionHostAgentCli.js\";\nimport {\n\ttype IServerAPI,\n\tcreateServer as doCreateServer,\n} from \"./remoteExtensionHostAgentServer.js\";\nimport { serverOptions } from \"./serverEnvironmentService.js\";\n\nperf.mark(\"code/server/codeLoaded\");\n(<any>global).vscodeServerCodeLoadedTime = performance.now();\n\nconst errorReporter: ErrorReporter = {\n\tonMultipleValues: (id: string, usedValue: string) => {\n\t\tconsole.error(\n\t\t\t`Option '${id}' can only be defined once. Using value ${usedValue}.`,\n\t\t);\n\t},\n\tonEmptyValue: (id) => {\n\t\tconsole.error(`Ignoring option '${id}': Value must not be empty.`);\n\t},\n\tonUnknownOption: (id: string) => {\n\t\tconsole.error(`Ignoring option '${id}': not supported for server.`);\n\t},\n\tonDeprecatedOption: (deprecatedOption: string, message) => {\n\t\tconsole.warn(`Option '${deprecatedOption}' is deprecated: ${message}`);\n\t},\n};\n\nconst args = parseArgs(process.argv.slice(2), serverOptions, errorReporter);\n\nconst REMOTE_DATA_FOLDER =\n\targs[\"server-data-dir\"] ||\n\tprocess.env[\"VSCODE_AGENT_FOLDER\"] ||\n\tjoin(os.homedir(), product.serverDataFolderName || \".vscode-remote\");\nconst USER_DATA_PATH = join(REMOTE_DATA_FOLDER, \"data\");\nconst APP_SETTINGS_HOME = join(USER_DATA_PATH, \"User\");\nconst GLOBAL_STORAGE_HOME = join(APP_SETTINGS_HOME, \"globalStorage\");\nconst LOCAL_HISTORY_HOME = join(APP_SETTINGS_HOME, \"History\");\nconst MACHINE_SETTINGS_HOME = join(USER_DATA_PATH, \"Machine\");\nargs[\"user-data-dir\"] = USER_DATA_PATH;\nconst APP_ROOT = dirname(FileAccess.asFileUri(\"\").fsPath);\nconst BUILTIN_EXTENSIONS_FOLDER_PATH = join(APP_ROOT, \"extensions\");\nargs[\"builtin-extensions-dir\"] = BUILTIN_EXTENSIONS_FOLDER_PATH;\nargs[\"extensions-dir\"] =\n\targs[\"extensions-dir\"] || join(REMOTE_DATA_FOLDER, \"extensions\");\n\n[\n\tREMOTE_DATA_FOLDER,\n\targs[\"extensions-dir\"],\n\tUSER_DATA_PATH,\n\tAPP_SETTINGS_HOME,\n\tMACHINE_SETTINGS_HOME,\n\tGLOBAL_STORAGE_HOME,\n\tLOCAL_HISTORY_HOME,\n].forEach((f) => {\n\ttry {\n\t\tif (!fs.existsSync(f)) {\n\t\t\tfs.mkdirSync(f, { mode: 0o700 });\n\t\t}\n\t} catch (err) {\n\t\tconsole.error(err);\n\t}\n});\n\n/**\n * invoked by server-main.js\n */\nexport function spawnCli() {\n\trunCli(args, REMOTE_DATA_FOLDER, serverOptions);\n}\n\n/**\n * invoked by server-main.js\n */\nexport function createServer(\n\taddress: string | net.AddressInfo | null,\n): Promise<IServerAPI> {\n\treturn doCreateServer(address, args, REMOTE_DATA_FOLDER);\n}\n"],
  "mappings": ";;AAKA,YAAY,QAAQ;AAEpB,YAAY,QAAQ;AACpB,SAAS,mBAAmB;AAC5B,SAAS,kBAAkB;AAC3B,SAAS,SAAS,YAAY;AAC9B,YAAY,UAAU;AACtB;AAAA,EAEC;AAAA,OACM;AACP,OAAO,aAAa;AACpB,SAAS,OAAO,cAAc;AAC9B;AAAA,EAEC,gBAAgB;AAAA,OACV;AACP,SAAS,qBAAqB;AAE9B,KAAK,KAAK,wBAAwB;AAC5B,OAAQ,6BAA6B,YAAY,IAAI;AAE3D,MAAM,gBAA+B;AAAA,EACpC,kBAAkB,wBAAC,IAAY,cAAsB;AACpD,YAAQ;AAAA,MACP,WAAW,EAAE,2CAA2C,SAAS;AAAA,IAClE;AAAA,EACD,GAJkB;AAAA,EAKlB,cAAc,wBAAC,OAAO;AACrB,YAAQ,MAAM,oBAAoB,EAAE,6BAA6B;AAAA,EAClE,GAFc;AAAA,EAGd,iBAAiB,wBAAC,OAAe;AAChC,YAAQ,MAAM,oBAAoB,EAAE,8BAA8B;AAAA,EACnE,GAFiB;AAAA,EAGjB,oBAAoB,wBAAC,kBAA0B,YAAY;AAC1D,YAAQ,KAAK,WAAW,gBAAgB,oBAAoB,OAAO,EAAE;AAAA,EACtE,GAFoB;AAGrB;AAEA,MAAM,OAAO,UAAU,QAAQ,KAAK,MAAM,CAAC,GAAG,eAAe,aAAa;AAE1E,MAAM,qBACL,KAAK,iBAAiB,KACtB,QAAQ,IAAI,qBAAqB,KACjC,KAAK,GAAG,QAAQ,GAAG,QAAQ,wBAAwB,gBAAgB;AACpE,MAAM,iBAAiB,KAAK,oBAAoB,MAAM;AACtD,MAAM,oBAAoB,KAAK,gBAAgB,MAAM;AACrD,MAAM,sBAAsB,KAAK,mBAAmB,eAAe;AACnE,MAAM,qBAAqB,KAAK,mBAAmB,SAAS;AAC5D,MAAM,wBAAwB,KAAK,gBAAgB,SAAS;AAC5D,KAAK,eAAe,IAAI;AACxB,MAAM,WAAW,QAAQ,WAAW,UAAU,EAAE,EAAE,MAAM;AACxD,MAAM,iCAAiC,KAAK,UAAU,YAAY;AAClE,KAAK,wBAAwB,IAAI;AACjC,KAAK,gBAAgB,IACpB,KAAK,gBAAgB,KAAK,KAAK,oBAAoB,YAAY;AAEhE;AAAA,EACC;AAAA,EACA,KAAK,gBAAgB;AAAA,EACrB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACD,EAAE,QAAQ,CAAC,MAAM;AAChB,MAAI;AACH,QAAI,CAAC,GAAG,WAAW,CAAC,GAAG;AACtB,SAAG,UAAU,GAAG,EAAE,MAAM,IAAM,CAAC;AAAA,IAChC;AAAA,EACD,SAAS,KAAK;AACb,YAAQ,MAAM,GAAG;AAAA,EAClB;AACD,CAAC;AAKM,SAAS,WAAW;AAC1B,SAAO,MAAM,oBAAoB,aAAa;AAC/C;AAFgB;AAOT,SAAS,aACf,SACsB;AACtB,SAAO,eAAe,SAAS,MAAM,kBAAkB;AACxD;AAJgB;",
  "names": []
}
