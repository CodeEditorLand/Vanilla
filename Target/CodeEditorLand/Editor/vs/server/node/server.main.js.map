{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/server/node/server.main.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as os from 'os';\nimport * as fs from 'fs';\nimport * as net from 'net';\nimport { FileAccess } from '../../base/common/network.js';\nimport { run as runCli } from './remoteExtensionHostAgentCli.js';\nimport { createServer as doCreateServer, IServerAPI } from './remoteExtensionHostAgentServer.js';\nimport { parseArgs, ErrorReporter } from '../../platform/environment/node/argv.js';\nimport { join, dirname } from '../../base/common/path.js';\nimport { performance } from 'perf_hooks';\nimport { serverOptions } from './serverEnvironmentService.js';\nimport product from '../../platform/product/common/product.js';\nimport * as perf from '../../base/common/performance.js';\n\nperf.mark('code/server/codeLoaded');\n(<any>global).vscodeServerCodeLoadedTime = performance.now();\n\nconst errorReporter: ErrorReporter = {\n\tonMultipleValues: (id: string, usedValue: string) => {\n\t\tconsole.error(`Option '${id}' can only be defined once. Using value ${usedValue}.`);\n\t},\n\tonEmptyValue: (id) => {\n\t\tconsole.error(`Ignoring option '${id}': Value must not be empty.`);\n\t},\n\tonUnknownOption: (id: string) => {\n\t\tconsole.error(`Ignoring option '${id}': not supported for server.`);\n\t},\n\tonDeprecatedOption: (deprecatedOption: string, message) => {\n\t\tconsole.warn(`Option '${deprecatedOption}' is deprecated: ${message}`);\n\t}\n};\n\nconst args = parseArgs(process.argv.slice(2), serverOptions, errorReporter);\n\nconst REMOTE_DATA_FOLDER = args['server-data-dir'] || process.env['VSCODE_AGENT_FOLDER'] || join(os.homedir(), product.serverDataFolderName || '.vscode-remote');\nconst USER_DATA_PATH = join(REMOTE_DATA_FOLDER, 'data');\nconst APP_SETTINGS_HOME = join(USER_DATA_PATH, 'User');\nconst GLOBAL_STORAGE_HOME = join(APP_SETTINGS_HOME, 'globalStorage');\nconst LOCAL_HISTORY_HOME = join(APP_SETTINGS_HOME, 'History');\nconst MACHINE_SETTINGS_HOME = join(USER_DATA_PATH, 'Machine');\nargs['user-data-dir'] = USER_DATA_PATH;\nconst APP_ROOT = dirname(FileAccess.asFileUri('').fsPath);\nconst BUILTIN_EXTENSIONS_FOLDER_PATH = join(APP_ROOT, 'extensions');\nargs['builtin-extensions-dir'] = BUILTIN_EXTENSIONS_FOLDER_PATH;\nargs['extensions-dir'] = args['extensions-dir'] || join(REMOTE_DATA_FOLDER, 'extensions');\n\n[REMOTE_DATA_FOLDER, args['extensions-dir'], USER_DATA_PATH, APP_SETTINGS_HOME, MACHINE_SETTINGS_HOME, GLOBAL_STORAGE_HOME, LOCAL_HISTORY_HOME].forEach(f => {\n\ttry {\n\t\tif (!fs.existsSync(f)) {\n\t\t\tfs.mkdirSync(f, { mode: 0o700 });\n\t\t}\n\t} catch (err) { console.error(err); }\n});\n\n/**\n * invoked by server-main.js\n */\nexport function spawnCli() {\n\trunCli(args, REMOTE_DATA_FOLDER, serverOptions);\n}\n\n/**\n * invoked by server-main.js\n */\nexport function createServer(address: string | net.AddressInfo | null): Promise<IServerAPI> {\n\treturn doCreateServer(address, args, REMOTE_DATA_FOLDER);\n}\n"],
  "mappings": ";;AAKA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB,SAAS,kBAAkB;AAC3B,SAAS,OAAO,cAAc;AAC9B,SAAS,gBAAgB,gBAAgB,kBAAkB;AAC3D,SAAS,WAAW,qBAAqB;AACzC,SAAS,MAAM,eAAe;AAC9B,SAAS,mBAAmB;AAC5B,SAAS,qBAAqB;AAC9B,OAAO,aAAa;AACpB,YAAY,UAAU;AAEtB,KAAK,KAAK,wBAAwB;AAC5B,OAAQ,6BAA6B,YAAY,IAAI;AAE3D,MAAM,gBAA+B;AAAA,EACpC,kBAAkB,wBAAC,IAAY,cAAsB;AACpD,YAAQ,MAAM,WAAW,EAAE,2CAA2C,SAAS,GAAG;AAAA,EACnF,GAFkB;AAAA,EAGlB,cAAc,wBAAC,OAAO;AACrB,YAAQ,MAAM,oBAAoB,EAAE,6BAA6B;AAAA,EAClE,GAFc;AAAA,EAGd,iBAAiB,wBAAC,OAAe;AAChC,YAAQ,MAAM,oBAAoB,EAAE,8BAA8B;AAAA,EACnE,GAFiB;AAAA,EAGjB,oBAAoB,wBAAC,kBAA0B,YAAY;AAC1D,YAAQ,KAAK,WAAW,gBAAgB,oBAAoB,OAAO,EAAE;AAAA,EACtE,GAFoB;AAGrB;AAEA,MAAM,OAAO,UAAU,QAAQ,KAAK,MAAM,CAAC,GAAG,eAAe,aAAa;AAE1E,MAAM,qBAAqB,KAAK,iBAAiB,KAAK,QAAQ,IAAI,qBAAqB,KAAK,KAAK,GAAG,QAAQ,GAAG,QAAQ,wBAAwB,gBAAgB;AAC/J,MAAM,iBAAiB,KAAK,oBAAoB,MAAM;AACtD,MAAM,oBAAoB,KAAK,gBAAgB,MAAM;AACrD,MAAM,sBAAsB,KAAK,mBAAmB,eAAe;AACnE,MAAM,qBAAqB,KAAK,mBAAmB,SAAS;AAC5D,MAAM,wBAAwB,KAAK,gBAAgB,SAAS;AAC5D,KAAK,eAAe,IAAI;AACxB,MAAM,WAAW,QAAQ,WAAW,UAAU,EAAE,EAAE,MAAM;AACxD,MAAM,iCAAiC,KAAK,UAAU,YAAY;AAClE,KAAK,wBAAwB,IAAI;AACjC,KAAK,gBAAgB,IAAI,KAAK,gBAAgB,KAAK,KAAK,oBAAoB,YAAY;AAExF,CAAC,oBAAoB,KAAK,gBAAgB,GAAG,gBAAgB,mBAAmB,uBAAuB,qBAAqB,kBAAkB,EAAE,QAAQ,OAAK;AAC5J,MAAI;AACH,QAAI,CAAC,GAAG,WAAW,CAAC,GAAG;AACtB,SAAG,UAAU,GAAG,EAAE,MAAM,IAAM,CAAC;AAAA,IAChC;AAAA,EACD,SAAS,KAAK;AAAE,YAAQ,MAAM,GAAG;AAAA,EAAG;AACrC,CAAC;AAKM,SAAS,WAAW;AAC1B,SAAO,MAAM,oBAAoB,aAAa;AAC/C;AAFgB;AAOT,SAAS,aAAa,SAA+D;AAC3F,SAAO,eAAe,SAAS,MAAM,kBAAkB;AACxD;AAFgB;",
  "names": []
}
