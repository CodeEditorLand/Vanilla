var p=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var c=(s,n,i,r)=>{for(var o=r>1?void 0:r?d(n,i):n,a=s.length-1,l;a>=0;a--)(l=s[a])&&(o=(r?l(n,i,o):l(o))||o);return r&&o&&p(n,i,o),o};import*as t from"../../nls.js";import{memoize as h}from"../../base/common/decorators.js";import{IEnvironmentService as g}from"../../platform/environment/common/environment.js";import{OPTIONS as e}from"../../platform/environment/node/argv.js";import{NativeEnvironmentService as u}from"../../platform/environment/node/environmentService.js";import{refineServiceDecorator as b}from"../../platform/instantiation/common/instantiation.js";const S={host:{type:"string",cat:"o",args:"ip-address",description:t.localize("host","The host name or IP address the server should listen to. If not set, defaults to 'localhost'.")},port:{type:"string",cat:"o",args:"port | port range",description:t.localize("port","The port the server should listen to. If 0 is passed a random free port is picked. If a range in the format num-num is passed, a free port from the range (end inclusive) is selected.")},"socket-path":{type:"string",cat:"o",args:"path",description:t.localize("socket-path","The path to a socket file for the server to listen to.")},"server-base-path":{type:"string",cat:"o",args:"path",description:t.localize("server-base-path","The path under which the web UI and the code server is provided. Defaults to '/'.`")},"connection-token":{type:"string",cat:"o",args:"token",deprecates:["connectionToken"],description:t.localize("connection-token","A secret that must be included with all requests.")},"connection-token-file":{type:"string",cat:"o",args:"path",deprecates:["connection-secret","connectionTokenFile"],description:t.localize("connection-token-file","Path to a file that contains the connection token.")},"without-connection-token":{type:"boolean",cat:"o",description:t.localize("without-connection-token","Run without a connection token. Only use this if the connection is secured by other means.")},"disable-websocket-compression":{type:"boolean"},"print-startup-performance":{type:"boolean"},"print-ip-address":{type:"boolean"},"accept-server-license-terms":{type:"boolean",cat:"o",description:t.localize("acceptLicenseTerms","If set, the user accepts the server license terms and the server will be started without a user prompt.")},"server-data-dir":{type:"string",cat:"o",description:t.localize("serverDataDir","Specifies the directory that server data is kept in.")},"telemetry-level":{type:"string",cat:"o",args:"level",description:t.localize("telemetry-level","Sets the initial telemetry level. Valid levels are: 'off', 'crash', 'error' and 'all'. If not specified, the server will send telemetry until a client connects, it will then use the clients telemetry setting. Setting this to 'off' is equivalent to --disable-telemetry")},"user-data-dir":e["user-data-dir"],"enable-smoke-test-driver":e["enable-smoke-test-driver"],"disable-telemetry":e["disable-telemetry"],"disable-workspace-trust":e["disable-workspace-trust"],"file-watcher-polling":{type:"string",deprecates:["fileWatcherPolling"]},log:e.log,logsPath:e.logsPath,"force-disable-user-env":e["force-disable-user-env"],folder:{type:"string",deprecationMessage:"No longer supported. Folder needs to be provided in the browser URL or with `default-folder`."},workspace:{type:"string",deprecationMessage:"No longer supported. Workspace needs to be provided in the browser URL or with `default-workspace`."},"default-folder":{type:"string",description:t.localize("default-folder","The workspace folder to open when no input is specified in the browser URL. A relative or absolute path resolved against the current working directory.")},"default-workspace":{type:"string",description:t.localize("default-workspace","The workspace to open when no input is specified in the browser URL. A relative or absolute path resolved against the current working directory.")},"enable-sync":{type:"boolean"},"github-auth":{type:"string"},"use-test-resolver":{type:"boolean"},"extensions-dir":e["extensions-dir"],"extensions-download-dir":e["extensions-download-dir"],"builtin-extensions-dir":e["builtin-extensions-dir"],"install-extension":e["install-extension"],"install-builtin-extension":e["install-builtin-extension"],"update-extensions":e["update-extensions"],"uninstall-extension":e["uninstall-extension"],"list-extensions":e["list-extensions"],"locate-extension":e["locate-extension"],"show-versions":e["show-versions"],category:e.category,force:e.force,"do-not-sync":e["do-not-sync"],"pre-release":e["pre-release"],"start-server":{type:"boolean",cat:"e",description:t.localize("start-server","Start the server when installing or uninstalling extensions. To be used in combination with 'install-extension', 'install-builtin-extension' and 'uninstall-extension'.")},"enable-remote-auto-shutdown":{type:"boolean"},"remote-auto-shutdown-without-delay":{type:"boolean"},"use-host-proxy":{type:"boolean"},"without-browser-env-var":{type:"boolean"},help:e.help,version:e.version,"locate-shell-integration-path":e["locate-shell-integration-path"],compatibility:{type:"string"},_:e._},I=b(g);class v extends u{get userRoamingDataHome(){return this.appSettingsHome}get args(){return super.args}}c([h],v.prototype,"userRoamingDataHome",1);export{I as IServerEnvironmentService,v as ServerEnvironmentService,S as serverOptions};
