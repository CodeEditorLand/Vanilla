{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/server/node/remoteExtensionsScanner.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { Event } from \"../../base/common/event.js\";\nimport { Schemas } from \"../../base/common/network.js\";\nimport { isAbsolute, join, resolve } from \"../../base/common/path.js\";\nimport * as performance from \"../../base/common/performance.js\";\nimport * as platform from \"../../base/common/platform.js\";\nimport { cwd } from \"../../base/common/process.js\";\nimport { URI } from \"../../base/common/uri.js\";\nimport {\n\ttype IURITransformer,\n\ttransformOutgoingURIs,\n} from \"../../base/common/uriIpc.js\";\nimport type { IServerChannel } from \"../../base/parts/ipc/common/ipc.js\";\nimport {\n\tContextKeyDefinedExpr,\n\tContextKeyEqualsExpr,\n\tContextKeyExpr,\n\ttype ContextKeyExpression,\n\tContextKeyGreaterEqualsExpr,\n\tContextKeyGreaterExpr,\n\tContextKeyInExpr,\n\tContextKeyNotEqualsExpr,\n\tContextKeyNotExpr,\n\tContextKeyNotInExpr,\n\tContextKeyRegexExpr,\n\tContextKeySmallerEqualsExpr,\n\tContextKeySmallerExpr,\n\ttype IContextKeyExprMapper,\n} from \"../../platform/contextkey/common/contextkey.js\";\nimport type {\n\tIExtensionGalleryService,\n\tInstallOptions,\n} from \"../../platform/extensionManagement/common/extensionManagement.js\";\nimport type { ExtensionManagementCLI } from \"../../platform/extensionManagement/common/extensionManagementCLI.js\";\nimport {\n\ttype IExtensionsScannerService,\n\ttoExtensionDescription,\n} from \"../../platform/extensionManagement/common/extensionsScannerService.js\";\nimport {\n\tExtensionType,\n\ttype IExtensionDescription,\n} from \"../../platform/extensions/common/extensions.js\";\nimport type { ILanguagePackService } from \"../../platform/languagePacks/common/languagePacks.js\";\nimport type { ILogService } from \"../../platform/log/common/log.js\";\nimport type { IRemoteExtensionsScannerService } from \"../../platform/remote/common/remoteExtensionsScanner.js\";\nimport type { IUserDataProfilesService } from \"../../platform/userDataProfile/common/userDataProfile.js\";\nimport { dedupExtensions } from \"../../workbench/services/extensions/common/extensionsUtil.js\";\nimport type { IServerEnvironmentService } from \"./serverEnvironmentService.js\";\n\nexport class RemoteExtensionsScannerService\n\timplements IRemoteExtensionsScannerService\n{\n\treadonly _serviceBrand: undefined;\n\n\tprivate readonly _whenBuiltinExtensionsReady = Promise.resolve();\n\tprivate readonly _whenExtensionsReady = Promise.resolve();\n\n\tconstructor(\n\t\tprivate readonly _extensionManagementCLI: ExtensionManagementCLI,\n\t\tenvironmentService: IServerEnvironmentService,\n\t\tprivate readonly _userDataProfilesService: IUserDataProfilesService,\n\t\tprivate readonly _extensionsScannerService: IExtensionsScannerService,\n\t\tprivate readonly _logService: ILogService,\n\t\tprivate readonly _extensionGalleryService: IExtensionGalleryService,\n\t\tprivate readonly _languagePackService: ILanguagePackService,\n\t) {\n\t\tconst builtinExtensionsToInstall =\n\t\t\tenvironmentService.args[\"install-builtin-extension\"];\n\t\tif (builtinExtensionsToInstall) {\n\t\t\t_logService.trace(\n\t\t\t\t\"Installing builtin extensions passed via args...\",\n\t\t\t);\n\t\t\tconst installOptions: InstallOptions = {\n\t\t\t\tisMachineScoped: !!environmentService.args[\"do-not-sync\"],\n\t\t\t\tinstallPreReleaseVersion:\n\t\t\t\t\t!!environmentService.args[\"pre-release\"],\n\t\t\t};\n\t\t\tperformance.mark(\"code/server/willInstallBuiltinExtensions\");\n\t\t\tthis._whenExtensionsReady = this._whenBuiltinExtensionsReady =\n\t\t\t\t_extensionManagementCLI\n\t\t\t\t\t.installExtensions(\n\t\t\t\t\t\t[],\n\t\t\t\t\t\tthis._asExtensionIdOrVSIX(builtinExtensionsToInstall),\n\t\t\t\t\t\tinstallOptions,\n\t\t\t\t\t\t!!environmentService.args[\"force\"],\n\t\t\t\t\t)\n\t\t\t\t\t.then(\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tperformance.mark(\n\t\t\t\t\t\t\t\t\"code/server/didInstallBuiltinExtensions\",\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t_logService.trace(\n\t\t\t\t\t\t\t\t\"Finished installing builtin extensions\",\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t},\n\t\t\t\t\t\t(error) => {\n\t\t\t\t\t\t\t_logService.error(error);\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t}\n\n\t\tconst extensionsToInstall =\n\t\t\tenvironmentService.args[\"install-extension\"];\n\t\tif (extensionsToInstall) {\n\t\t\t_logService.trace(\"Installing extensions passed via args...\");\n\t\t\tthis._whenExtensionsReady = this._whenBuiltinExtensionsReady\n\t\t\t\t.then(() =>\n\t\t\t\t\t_extensionManagementCLI.installExtensions(\n\t\t\t\t\t\tthis._asExtensionIdOrVSIX(extensionsToInstall),\n\t\t\t\t\t\t[],\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tisMachineScoped:\n\t\t\t\t\t\t\t\t!!environmentService.args[\"do-not-sync\"],\n\t\t\t\t\t\t\tinstallPreReleaseVersion:\n\t\t\t\t\t\t\t\t!!environmentService.args[\"pre-release\"],\n\t\t\t\t\t\t\tisApplicationScoped: true, // extensions installed during server startup are available to all profiles\n\t\t\t\t\t\t},\n\t\t\t\t\t\t!!environmentService.args[\"force\"],\n\t\t\t\t\t),\n\t\t\t\t)\n\t\t\t\t.then(\n\t\t\t\t\t() => {\n\t\t\t\t\t\t_logService.trace(\"Finished installing extensions\");\n\t\t\t\t\t},\n\t\t\t\t\t(error) => {\n\t\t\t\t\t\t_logService.error(error);\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t}\n\t}\n\n\tprivate _asExtensionIdOrVSIX(inputs: string[]): (string | URI)[] {\n\t\treturn inputs.map((input) =>\n\t\t\t/\\.vsix$/i.test(input)\n\t\t\t\t? URI.file(isAbsolute(input) ? input : join(cwd(), input))\n\t\t\t\t: input,\n\t\t);\n\t}\n\n\twhenExtensionsReady(): Promise<void> {\n\t\treturn this._whenExtensionsReady;\n\t}\n\n\tasync scanExtensions(\n\t\tlanguage?: string,\n\t\tprofileLocation?: URI,\n\t\tworkspaceExtensionLocations?: URI[],\n\t\textensionDevelopmentLocations?: URI[],\n\t\tlanguagePackId?: string,\n\t): Promise<IExtensionDescription[]> {\n\t\tperformance.mark(\"code/server/willScanExtensions\");\n\t\tthis._logService.trace(\n\t\t\t`Scanning extensions using UI language: ${language}`,\n\t\t);\n\n\t\tawait this._whenBuiltinExtensionsReady;\n\n\t\tconst extensionDevelopmentPaths = extensionDevelopmentLocations\n\t\t\t? extensionDevelopmentLocations\n\t\t\t\t\t.filter((url) => url.scheme === Schemas.file)\n\t\t\t\t\t.map((url) => url.fsPath)\n\t\t\t: undefined;\n\t\tprofileLocation =\n\t\t\tprofileLocation ??\n\t\t\tthis._userDataProfilesService.defaultProfile.extensionsResource;\n\n\t\tconst extensions = await this._scanExtensions(\n\t\t\tprofileLocation,\n\t\t\tlanguage ?? platform.language,\n\t\t\tworkspaceExtensionLocations,\n\t\t\textensionDevelopmentPaths,\n\t\t\tlanguagePackId,\n\t\t);\n\n\t\tthis._logService.trace(\"Scanned Extensions\", extensions);\n\t\tthis._massageWhenConditions(extensions);\n\n\t\tperformance.mark(\"code/server/didScanExtensions\");\n\t\treturn extensions;\n\t}\n\n\tprivate async _scanExtensions(\n\t\tprofileLocation: URI,\n\t\tlanguage: string,\n\t\tworkspaceInstalledExtensionLocations: URI[] | undefined,\n\t\textensionDevelopmentPath: string[] | undefined,\n\t\tlanguagePackId: string | undefined,\n\t): Promise<IExtensionDescription[]> {\n\t\tawait this._ensureLanguagePackIsInstalled(language, languagePackId);\n\n\t\tconst [\n\t\t\tbuiltinExtensions,\n\t\t\tinstalledExtensions,\n\t\t\tworkspaceInstalledExtensions,\n\t\t\tdevelopedExtensions,\n\t\t] = await Promise.all([\n\t\t\tthis._scanBuiltinExtensions(language),\n\t\t\tthis._scanInstalledExtensions(profileLocation, language),\n\t\t\tthis._scanWorkspaceInstalledExtensions(\n\t\t\t\tlanguage,\n\t\t\t\tworkspaceInstalledExtensionLocations,\n\t\t\t),\n\t\t\tthis._scanDevelopedExtensions(language, extensionDevelopmentPath),\n\t\t]);\n\n\t\treturn dedupExtensions(\n\t\t\tbuiltinExtensions,\n\t\t\tinstalledExtensions,\n\t\t\tworkspaceInstalledExtensions,\n\t\t\tdevelopedExtensions,\n\t\t\tthis._logService,\n\t\t);\n\t}\n\n\tprivate async _scanDevelopedExtensions(\n\t\tlanguage: string,\n\t\textensionDevelopmentPaths?: string[],\n\t): Promise<IExtensionDescription[]> {\n\t\tif (extensionDevelopmentPaths) {\n\t\t\treturn (\n\t\t\t\tawait Promise.all(\n\t\t\t\t\textensionDevelopmentPaths.map((extensionDevelopmentPath) =>\n\t\t\t\t\t\tthis._extensionsScannerService.scanOneOrMultipleExtensions(\n\t\t\t\t\t\t\tURI.file(resolve(extensionDevelopmentPath)),\n\t\t\t\t\t\t\tExtensionType.User,\n\t\t\t\t\t\t\t{ language },\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t)\n\t\t\t)\n\t\t\t\t.flat()\n\t\t\t\t.map((e) => toExtensionDescription(e, true));\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate async _scanWorkspaceInstalledExtensions(\n\t\tlanguage: string,\n\t\tworkspaceInstalledExtensions?: URI[],\n\t): Promise<IExtensionDescription[]> {\n\t\tconst result: IExtensionDescription[] = [];\n\t\tif (workspaceInstalledExtensions?.length) {\n\t\t\tconst scannedExtensions = await Promise.all(\n\t\t\t\tworkspaceInstalledExtensions.map((location) =>\n\t\t\t\t\tthis._extensionsScannerService.scanExistingExtension(\n\t\t\t\t\t\tlocation,\n\t\t\t\t\t\tExtensionType.User,\n\t\t\t\t\t\t{ language },\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t);\n\t\t\tfor (const scannedExtension of scannedExtensions) {\n\t\t\t\tif (scannedExtension) {\n\t\t\t\t\tresult.push(\n\t\t\t\t\t\ttoExtensionDescription(scannedExtension, false),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate async _scanBuiltinExtensions(\n\t\tlanguage: string,\n\t): Promise<IExtensionDescription[]> {\n\t\tconst scannedExtensions =\n\t\t\tawait this._extensionsScannerService.scanSystemExtensions({\n\t\t\t\tlanguage,\n\t\t\t\tuseCache: true,\n\t\t\t});\n\t\treturn scannedExtensions.map((e) => toExtensionDescription(e, false));\n\t}\n\n\tprivate async _scanInstalledExtensions(\n\t\tprofileLocation: URI,\n\t\tlanguage: string,\n\t): Promise<IExtensionDescription[]> {\n\t\tconst scannedExtensions =\n\t\t\tawait this._extensionsScannerService.scanUserExtensions({\n\t\t\t\tprofileLocation,\n\t\t\t\tlanguage,\n\t\t\t\tuseCache: true,\n\t\t\t});\n\t\treturn scannedExtensions.map((e) => toExtensionDescription(e, false));\n\t}\n\n\tprivate async _ensureLanguagePackIsInstalled(\n\t\tlanguage: string,\n\t\tlanguagePackId: string | undefined,\n\t): Promise<void> {\n\t\tif (\n\t\t\t// No need to install language packs for the default language\n\t\t\tlanguage === platform.LANGUAGE_DEFAULT ||\n\t\t\t// The extension gallery service needs to be available\n\t\t\t!this._extensionGalleryService.isEnabled()\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tconst installed =\n\t\t\t\tawait this._languagePackService.getInstalledLanguages();\n\t\t\tif (installed.find((p) => p.id === language)) {\n\t\t\t\tthis._logService.trace(\n\t\t\t\t\t`Language Pack ${language} is already installed. Skipping language pack installation.`,\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch (err) {\n\t\t\t// We tried to see what is installed but failed. We can try installing anyway.\n\t\t\tthis._logService.error(err);\n\t\t}\n\n\t\tif (!languagePackId) {\n\t\t\tthis._logService.trace(\n\t\t\t\t`No language pack id provided for language ${language}. Skipping language pack installation.`,\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._logService.trace(\n\t\t\t`Language Pack ${languagePackId} for language ${language} is not installed. It will be installed now.`,\n\t\t);\n\t\ttry {\n\t\t\tawait this._extensionManagementCLI.installExtensions(\n\t\t\t\t[languagePackId],\n\t\t\t\t[],\n\t\t\t\t{ isMachineScoped: true },\n\t\t\t\ttrue,\n\t\t\t);\n\t\t} catch (err) {\n\t\t\t// We tried to install the language pack but failed. We can continue without it thus using the default language.\n\t\t\tthis._logService.error(err);\n\t\t}\n\t}\n\n\tprivate _massageWhenConditions(extensions: IExtensionDescription[]): void {\n\t\t// Massage \"when\" conditions which mention `resourceScheme`\n\n\t\tinterface WhenUser {\n\t\t\twhen?: string;\n\t\t}\n\n\t\tinterface LocWhenUser {\n\t\t\t[loc: string]: WhenUser[];\n\t\t}\n\n\t\tconst _mapResourceSchemeValue = (\n\t\t\tvalue: string,\n\t\t\tisRegex: boolean,\n\t\t): string => {\n\t\t\t// console.log(`_mapResourceSchemeValue: ${value}, ${isRegex}`);\n\t\t\treturn value.replace(/file/g, \"vscode-remote\");\n\t\t};\n\n\t\tconst _mapResourceRegExpValue = (value: RegExp): RegExp => {\n\t\t\tlet flags = \"\";\n\t\t\tflags += value.global ? \"g\" : \"\";\n\t\t\tflags += value.ignoreCase ? \"i\" : \"\";\n\t\t\tflags += value.multiline ? \"m\" : \"\";\n\t\t\treturn new RegExp(\n\t\t\t\t_mapResourceSchemeValue(value.source, true),\n\t\t\t\tflags,\n\t\t\t);\n\t\t};\n\n\t\tconst _exprKeyMapper = new (class implements IContextKeyExprMapper {\n\t\t\tmapDefined(key: string): ContextKeyExpression {\n\t\t\t\treturn ContextKeyDefinedExpr.create(key);\n\t\t\t}\n\t\t\tmapNot(key: string): ContextKeyExpression {\n\t\t\t\treturn ContextKeyNotExpr.create(key);\n\t\t\t}\n\t\t\tmapEquals(key: string, value: any): ContextKeyExpression {\n\t\t\t\tif (key === \"resourceScheme\" && typeof value === \"string\") {\n\t\t\t\t\treturn ContextKeyEqualsExpr.create(\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\t_mapResourceSchemeValue(value, false),\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\treturn ContextKeyEqualsExpr.create(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t\tmapNotEquals(key: string, value: any): ContextKeyExpression {\n\t\t\t\tif (key === \"resourceScheme\" && typeof value === \"string\") {\n\t\t\t\t\treturn ContextKeyNotEqualsExpr.create(\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\t_mapResourceSchemeValue(value, false),\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\treturn ContextKeyNotEqualsExpr.create(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t\tmapGreater(key: string, value: any): ContextKeyExpression {\n\t\t\t\treturn ContextKeyGreaterExpr.create(key, value);\n\t\t\t}\n\t\t\tmapGreaterEquals(key: string, value: any): ContextKeyExpression {\n\t\t\t\treturn ContextKeyGreaterEqualsExpr.create(key, value);\n\t\t\t}\n\t\t\tmapSmaller(key: string, value: any): ContextKeyExpression {\n\t\t\t\treturn ContextKeySmallerExpr.create(key, value);\n\t\t\t}\n\t\t\tmapSmallerEquals(key: string, value: any): ContextKeyExpression {\n\t\t\t\treturn ContextKeySmallerEqualsExpr.create(key, value);\n\t\t\t}\n\t\t\tmapRegex(key: string, regexp: RegExp | null): ContextKeyRegexExpr {\n\t\t\t\tif (key === \"resourceScheme\" && regexp) {\n\t\t\t\t\treturn ContextKeyRegexExpr.create(\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\t_mapResourceRegExpValue(regexp),\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\treturn ContextKeyRegexExpr.create(key, regexp);\n\t\t\t\t}\n\t\t\t}\n\t\t\tmapIn(key: string, valueKey: string): ContextKeyInExpr {\n\t\t\t\treturn ContextKeyInExpr.create(key, valueKey);\n\t\t\t}\n\t\t\tmapNotIn(key: string, valueKey: string): ContextKeyNotInExpr {\n\t\t\t\treturn ContextKeyNotInExpr.create(key, valueKey);\n\t\t\t}\n\t\t})();\n\n\t\tconst _massageWhenUser = (element: WhenUser) => {\n\t\t\tif (\n\t\t\t\t!element ||\n\t\t\t\t!element.when ||\n\t\t\t\t!/resourceScheme/.test(element.when)\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst expr = ContextKeyExpr.deserialize(element.when);\n\t\t\tif (!expr) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst massaged = expr.map(_exprKeyMapper);\n\t\t\telement.when = massaged.serialize();\n\t\t};\n\n\t\tconst _massageWhenUserArr = (elements: WhenUser[] | WhenUser) => {\n\t\t\tif (Array.isArray(elements)) {\n\t\t\t\tfor (const element of elements) {\n\t\t\t\t\t_massageWhenUser(element);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t_massageWhenUser(elements);\n\t\t\t}\n\t\t};\n\n\t\tconst _massageLocWhenUser = (target: LocWhenUser) => {\n\t\t\tfor (const loc in target) {\n\t\t\t\t_massageWhenUserArr(target[loc]);\n\t\t\t}\n\t\t};\n\n\t\textensions.forEach((extension) => {\n\t\t\tif (extension.contributes) {\n\t\t\t\tif (extension.contributes.menus) {\n\t\t\t\t\t_massageLocWhenUser(\n\t\t\t\t\t\t<LocWhenUser>extension.contributes.menus,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (extension.contributes.keybindings) {\n\t\t\t\t\t_massageWhenUserArr(\n\t\t\t\t\t\t<WhenUser | WhenUser[]>(\n\t\t\t\t\t\t\textension.contributes.keybindings\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (extension.contributes.views) {\n\t\t\t\t\t_massageLocWhenUser(\n\t\t\t\t\t\t<LocWhenUser>extension.contributes.views,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport class RemoteExtensionsScannerChannel implements IServerChannel {\n\tconstructor(\n\t\tprivate service: RemoteExtensionsScannerService,\n\t\tprivate getUriTransformer: (requestContext: any) => IURITransformer,\n\t) {}\n\n\tlisten(context: any, event: string): Event<any> {\n\t\tthrow new Error(\"Invalid listen\");\n\t}\n\n\tasync call(context: any, command: string, args?: any): Promise<any> {\n\t\tconst uriTransformer = this.getUriTransformer(context);\n\t\tswitch (command) {\n\t\t\tcase \"whenExtensionsReady\":\n\t\t\t\treturn this.service.whenExtensionsReady();\n\t\t\tcase \"scanExtensions\": {\n\t\t\t\tconst language = args[0];\n\t\t\t\tconst profileLocation = args[1]\n\t\t\t\t\t? URI.revive(uriTransformer.transformIncoming(args[1]))\n\t\t\t\t\t: undefined;\n\t\t\t\tconst workspaceExtensionLocations = Array.isArray(args[2])\n\t\t\t\t\t? args[2].map((u) =>\n\t\t\t\t\t\t\tURI.revive(uriTransformer.transformIncoming(u)),\n\t\t\t\t\t\t)\n\t\t\t\t\t: undefined;\n\t\t\t\tconst extensionDevelopmentPath = Array.isArray(args[3])\n\t\t\t\t\t? args[3].map((u) =>\n\t\t\t\t\t\t\tURI.revive(uriTransformer.transformIncoming(u)),\n\t\t\t\t\t\t)\n\t\t\t\t\t: undefined;\n\t\t\t\tconst languagePackId: string | undefined = args[4];\n\t\t\t\tconst extensions = await this.service.scanExtensions(\n\t\t\t\t\tlanguage,\n\t\t\t\t\tprofileLocation,\n\t\t\t\t\tworkspaceExtensionLocations,\n\t\t\t\t\textensionDevelopmentPath,\n\t\t\t\t\tlanguagePackId,\n\t\t\t\t);\n\t\t\t\treturn extensions.map((extension) =>\n\t\t\t\t\ttransformOutgoingURIs(extension, uriTransformer),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tthrow new Error(\"Invalid call\");\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
