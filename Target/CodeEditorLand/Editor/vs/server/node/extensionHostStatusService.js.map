{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/server/node/extensionHostStatusService.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from \"../../platform/instantiation/common/instantiation.js\";\nimport type { IExtensionHostExitInfo } from \"../../workbench/services/remote/common/remoteAgentService.js\";\n\nexport const IExtensionHostStatusService =\n\tcreateDecorator<IExtensionHostStatusService>(\"extensionHostStatusService\");\n\nexport interface IExtensionHostStatusService {\n\treadonly _serviceBrand: undefined;\n\n\tsetExitInfo(reconnectionToken: string, info: IExtensionHostExitInfo): void;\n\tgetExitInfo(reconnectionToken: string): IExtensionHostExitInfo | null;\n}\n\nexport class ExtensionHostStatusService implements IExtensionHostStatusService {\n\t_serviceBrand: undefined;\n\n\tprivate readonly _exitInfo = new Map<string, IExtensionHostExitInfo>();\n\n\tsetExitInfo(reconnectionToken: string, info: IExtensionHostExitInfo): void {\n\t\tthis._exitInfo.set(reconnectionToken, info);\n\t}\n\n\tgetExitInfo(reconnectionToken: string): IExtensionHostExitInfo | null {\n\t\treturn this._exitInfo.get(reconnectionToken) || null;\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,uBAAuB;AAGzB,MAAM,8BACZ,gBAA6C,4BAA4B;AASnE,MAAM,2BAAkE;AAAA,EAlB/E,OAkB+E;AAAA;AAAA;AAAA,EAC9E;AAAA,EAEiB,YAAY,oBAAI,IAAoC;AAAA,EAErE,YAAY,mBAA2B,MAAoC;AAC1E,SAAK,UAAU,IAAI,mBAAmB,IAAI;AAAA,EAC3C;AAAA,EAEA,YAAY,mBAA0D;AACrE,WAAO,KAAK,UAAU,IAAI,iBAAiB,KAAK;AAAA,EACjD;AACD;",
  "names": []
}
