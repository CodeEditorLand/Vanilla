{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/test/browser/formattedTextRenderer.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { renderFormattedText, renderText } from '../../browser/formattedTextRenderer.js';\nimport { DisposableStore } from '../../common/lifecycle.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../common/utils.js';\n\nsuite('FormattedTextRenderer', () => {\n\tconst store = new DisposableStore();\n\n\tsetup(() => {\n\t\tstore.clear();\n\t});\n\n\tteardown(() => {\n\t\tstore.clear();\n\t});\n\n\ttest('render simple element', () => {\n\t\tconst result: HTMLElement = renderText('testing');\n\n\t\tassert.strictEqual(result.nodeType, document.ELEMENT_NODE);\n\t\tassert.strictEqual(result.textContent, 'testing');\n\t\tassert.strictEqual(result.tagName, 'DIV');\n\t});\n\n\ttest('render element with class', () => {\n\t\tconst result: HTMLElement = renderText('testing', {\n\t\t\tclassName: 'testClass'\n\t\t});\n\t\tassert.strictEqual(result.nodeType, document.ELEMENT_NODE);\n\t\tassert.strictEqual(result.className, 'testClass');\n\t});\n\n\ttest('simple formatting', () => {\n\t\tlet result: HTMLElement = renderFormattedText('**bold**');\n\t\tassert.strictEqual(result.children.length, 1);\n\t\tassert.strictEqual(result.firstChild!.textContent, 'bold');\n\t\tassert.strictEqual((<HTMLElement>result.firstChild).tagName, 'B');\n\t\tassert.strictEqual(result.innerHTML, '<b>bold</b>');\n\n\t\tresult = renderFormattedText('__italics__');\n\t\tassert.strictEqual(result.innerHTML, '<i>italics</i>');\n\n\t\tresult = renderFormattedText('``code``');\n\t\tassert.strictEqual(result.innerHTML, '``code``');\n\n\t\tresult = renderFormattedText('``code``', { renderCodeSegments: true });\n\t\tassert.strictEqual(result.innerHTML, '<code>code</code>');\n\n\t\tresult = renderFormattedText('this string has **bold**, __italics__, and ``code``!!', { renderCodeSegments: true });\n\t\tassert.strictEqual(result.innerHTML, 'this string has <b>bold</b>, <i>italics</i>, and <code>code</code>!!');\n\t});\n\n\ttest('no formatting', () => {\n\t\tconst result: HTMLElement = renderFormattedText('this is just a string');\n\t\tassert.strictEqual(result.innerHTML, 'this is just a string');\n\t});\n\n\ttest('preserve newlines', () => {\n\t\tconst result: HTMLElement = renderFormattedText('line one\\nline two');\n\t\tassert.strictEqual(result.innerHTML, 'line one<br>line two');\n\t});\n\n\ttest('action', () => {\n\t\tlet callbackCalled = false;\n\t\tconst result: HTMLElement = renderFormattedText('[[action]]', {\n\t\t\tactionHandler: {\n\t\t\t\tcallback(content) {\n\t\t\t\t\tassert.strictEqual(content, '0');\n\t\t\t\t\tcallbackCalled = true;\n\t\t\t\t},\n\t\t\t\tdisposables: store\n\t\t\t}\n\t\t});\n\t\tassert.strictEqual(result.innerHTML, '<a>action</a>');\n\n\t\tconst event: MouseEvent = document.createEvent('MouseEvent');\n\t\tevent.initEvent('click', true, true);\n\t\tresult.firstChild!.dispatchEvent(event);\n\t\tassert.strictEqual(callbackCalled, true);\n\t});\n\n\ttest('fancy action', () => {\n\t\tlet callbackCalled = false;\n\t\tconst result: HTMLElement = renderFormattedText('__**[[action]]**__', {\n\t\t\tactionHandler: {\n\t\t\t\tcallback(content) {\n\t\t\t\t\tassert.strictEqual(content, '0');\n\t\t\t\t\tcallbackCalled = true;\n\t\t\t\t},\n\t\t\t\tdisposables: store\n\t\t\t}\n\t\t});\n\t\tassert.strictEqual(result.innerHTML, '<i><b><a>action</a></b></i>');\n\n\t\tconst event: MouseEvent = document.createEvent('MouseEvent');\n\t\tevent.initEvent('click', true, true);\n\t\tresult.firstChild!.firstChild!.firstChild!.dispatchEvent(event);\n\t\tassert.strictEqual(callbackCalled, true);\n\t});\n\n\ttest('fancier action', () => {\n\t\tlet callbackCalled = false;\n\t\tconst result: HTMLElement = renderFormattedText('``__**[[action]]**__``', {\n\t\t\trenderCodeSegments: true,\n\t\t\tactionHandler: {\n\t\t\t\tcallback(content) {\n\t\t\t\t\tassert.strictEqual(content, '0');\n\t\t\t\t\tcallbackCalled = true;\n\t\t\t\t},\n\t\t\t\tdisposables: store\n\t\t\t}\n\t\t});\n\t\tassert.strictEqual(result.innerHTML, '<code><i><b><a>action</a></b></i></code>');\n\n\t\tconst event: MouseEvent = document.createEvent('MouseEvent');\n\t\tevent.initEvent('click', true, true);\n\t\tresult.firstChild!.firstChild!.firstChild!.firstChild!.dispatchEvent(event);\n\t\tassert.strictEqual(callbackCalled, true);\n\t});\n\n\ttest('escaped formatting', () => {\n\t\tconst result: HTMLElement = renderFormattedText('\\\\*\\\\*bold\\\\*\\\\*');\n\t\tassert.strictEqual(result.children.length, 0);\n\t\tassert.strictEqual(result.innerHTML, '**bold**');\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"],
  "mappings": "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",
  "names": []
}
