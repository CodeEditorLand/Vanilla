{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/test/browser/ui/tree/objectTree.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { IIdentityProvider, IListVirtualDelegate } from '../../../../browser/ui/list/list.js';\nimport { CompressibleObjectTreeModel, ICompressedTreeNode } from '../../../../browser/ui/tree/compressedObjectTreeModel.js';\nimport { CompressibleObjectTree, ICompressibleTreeRenderer, ObjectTree } from '../../../../browser/ui/tree/objectTree.js';\nimport { ITreeNode, ITreeRenderer } from '../../../../browser/ui/tree/tree.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../../common/utils.js';\nimport { ObjectTreeModel } from '../../../../browser/ui/tree/objectTreeModel.js';\n\nfunction getRowsTextContent(container: HTMLElement): string[] {\n\tconst rows = [...container.querySelectorAll('.monaco-list-row')];\n\trows.sort((a, b) => parseInt(a.getAttribute('data-index')!) - parseInt(b.getAttribute('data-index')!));\n\treturn rows.map(row => row.querySelector('.monaco-tl-contents')!.textContent!);\n}\n\nsuite('ObjectTree', function () {\n\n\tsuite('TreeNavigator', function () {\n\t\tlet tree: ObjectTree<number>;\n\t\tlet filter = (_: number) => true;\n\n\t\tteardown(() => {\n\t\t\ttree.dispose();\n\t\t\tfilter = (_: number) => true;\n\t\t});\n\n\t\tensureNoDisposablesAreLeakedInTestSuite();\n\n\t\tsetup(() => {\n\t\t\tconst container = document.createElement('div');\n\t\t\tcontainer.style.width = '200px';\n\t\t\tcontainer.style.height = '200px';\n\n\t\t\tconst delegate = new class implements IListVirtualDelegate<number> {\n\t\t\t\tgetHeight() { return 20; }\n\t\t\t\tgetTemplateId(): string { return 'default'; }\n\t\t\t};\n\n\t\t\tconst renderer = new class implements ITreeRenderer<number, void, HTMLElement> {\n\t\t\t\treadonly templateId = 'default';\n\t\t\t\trenderTemplate(container: HTMLElement): HTMLElement {\n\t\t\t\t\treturn container;\n\t\t\t\t}\n\t\t\t\trenderElement(element: ITreeNode<number, void>, index: number, templateData: HTMLElement): void {\n\t\t\t\t\ttemplateData.textContent = `${element.element}`;\n\t\t\t\t}\n\t\t\t\tdisposeTemplate(): void { }\n\t\t\t};\n\n\t\t\ttree = new ObjectTree<number>('test', container, delegate, [renderer], { filter: { filter: (el) => filter(el) } });\n\t\t\ttree.layout(200);\n\t\t});\n\n\t\ttest('should be able to navigate', () => {\n\t\t\ttree.setChildren(null, [\n\t\t\t\t{\n\t\t\t\t\telement: 0, children: [\n\t\t\t\t\t\t{ element: 10 },\n\t\t\t\t\t\t{ element: 11 },\n\t\t\t\t\t\t{ element: 12 },\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{ element: 1 },\n\t\t\t\t{ element: 2 }\n\t\t\t]);\n\n\t\t\tconst navigator = tree.navigate();\n\n\t\t\tassert.strictEqual(navigator.current(), null);\n\t\t\tassert.strictEqual(navigator.next(), 0);\n\t\t\tassert.strictEqual(navigator.current(), 0);\n\t\t\tassert.strictEqual(navigator.next(), 10);\n\t\t\tassert.strictEqual(navigator.current(), 10);\n\t\t\tassert.strictEqual(navigator.next(), 11);\n\t\t\tassert.strictEqual(navigator.current(), 11);\n\t\t\tassert.strictEqual(navigator.next(), 12);\n\t\t\tassert.strictEqual(navigator.current(), 12);\n\t\t\tassert.strictEqual(navigator.next(), 1);\n\t\t\tassert.strictEqual(navigator.current(), 1);\n\t\t\tassert.strictEqual(navigator.next(), 2);\n\t\t\tassert.strictEqual(navigator.current(), 2);\n\t\t\tassert.strictEqual(navigator.previous(), 1);\n\t\t\tassert.strictEqual(navigator.current(), 1);\n\t\t\tassert.strictEqual(navigator.previous(), 12);\n\t\t\tassert.strictEqual(navigator.previous(), 11);\n\t\t\tassert.strictEqual(navigator.previous(), 10);\n\t\t\tassert.strictEqual(navigator.previous(), 0);\n\t\t\tassert.strictEqual(navigator.previous(), null);\n\t\t\tassert.strictEqual(navigator.next(), 0);\n\t\t\tassert.strictEqual(navigator.next(), 10);\n\t\t\tassert.strictEqual(navigator.first(), 0);\n\t\t\tassert.strictEqual(navigator.last(), 2);\n\t\t});\n\n\t\ttest('should skip collapsed nodes', () => {\n\t\t\ttree.setChildren(null, [\n\t\t\t\t{\n\t\t\t\t\telement: 0, collapsed: true, children: [\n\t\t\t\t\t\t{ element: 10 },\n\t\t\t\t\t\t{ element: 11 },\n\t\t\t\t\t\t{ element: 12 },\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{ element: 1 },\n\t\t\t\t{ element: 2 }\n\t\t\t]);\n\n\t\t\tconst navigator = tree.navigate();\n\n\t\t\tassert.strictEqual(navigator.current(), null);\n\t\t\tassert.strictEqual(navigator.next(), 0);\n\t\t\tassert.strictEqual(navigator.next(), 1);\n\t\t\tassert.strictEqual(navigator.next(), 2);\n\t\t\tassert.strictEqual(navigator.next(), null);\n\t\t\tassert.strictEqual(navigator.previous(), 2);\n\t\t\tassert.strictEqual(navigator.previous(), 1);\n\t\t\tassert.strictEqual(navigator.previous(), 0);\n\t\t\tassert.strictEqual(navigator.previous(), null);\n\t\t\tassert.strictEqual(navigator.next(), 0);\n\t\t\tassert.strictEqual(navigator.first(), 0);\n\t\t\tassert.strictEqual(navigator.last(), 2);\n\t\t});\n\n\t\ttest('should skip filtered elements', () => {\n\t\t\tfilter = el => el % 2 === 0;\n\n\t\t\ttree.setChildren(null, [\n\t\t\t\t{\n\t\t\t\t\telement: 0, children: [\n\t\t\t\t\t\t{ element: 10 },\n\t\t\t\t\t\t{ element: 11 },\n\t\t\t\t\t\t{ element: 12 },\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{ element: 1 },\n\t\t\t\t{ element: 2 }\n\t\t\t]);\n\n\t\t\tconst navigator = tree.navigate();\n\n\t\t\tassert.strictEqual(navigator.current(), null);\n\t\t\tassert.strictEqual(navigator.next(), 0);\n\t\t\tassert.strictEqual(navigator.next(), 10);\n\t\t\tassert.strictEqual(navigator.next(), 12);\n\t\t\tassert.strictEqual(navigator.next(), 2);\n\t\t\tassert.strictEqual(navigator.next(), null);\n\t\t\tassert.strictEqual(navigator.previous(), 2);\n\t\t\tassert.strictEqual(navigator.previous(), 12);\n\t\t\tassert.strictEqual(navigator.previous(), 10);\n\t\t\tassert.strictEqual(navigator.previous(), 0);\n\t\t\tassert.strictEqual(navigator.previous(), null);\n\t\t\tassert.strictEqual(navigator.next(), 0);\n\t\t\tassert.strictEqual(navigator.next(), 10);\n\t\t\tassert.strictEqual(navigator.first(), 0);\n\t\t\tassert.strictEqual(navigator.last(), 2);\n\t\t});\n\n\t\ttest('should be able to start from node', () => {\n\t\t\ttree.setChildren(null, [\n\t\t\t\t{\n\t\t\t\t\telement: 0, children: [\n\t\t\t\t\t\t{ element: 10 },\n\t\t\t\t\t\t{ element: 11 },\n\t\t\t\t\t\t{ element: 12 },\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{ element: 1 },\n\t\t\t\t{ element: 2 }\n\t\t\t]);\n\n\t\t\tconst navigator = tree.navigate(1);\n\n\t\t\tassert.strictEqual(navigator.current(), 1);\n\t\t\tassert.strictEqual(navigator.next(), 2);\n\t\t\tassert.strictEqual(navigator.current(), 2);\n\t\t\tassert.strictEqual(navigator.previous(), 1);\n\t\t\tassert.strictEqual(navigator.current(), 1);\n\t\t\tassert.strictEqual(navigator.previous(), 12);\n\t\t\tassert.strictEqual(navigator.previous(), 11);\n\t\t\tassert.strictEqual(navigator.previous(), 10);\n\t\t\tassert.strictEqual(navigator.previous(), 0);\n\t\t\tassert.strictEqual(navigator.previous(), null);\n\t\t\tassert.strictEqual(navigator.next(), 0);\n\t\t\tassert.strictEqual(navigator.next(), 10);\n\t\t\tassert.strictEqual(navigator.first(), 0);\n\t\t\tassert.strictEqual(navigator.last(), 2);\n\t\t});\n\t});\n\n\tclass Delegate implements IListVirtualDelegate<number> {\n\t\tgetHeight() { return 20; }\n\t\tgetTemplateId(): string { return 'default'; }\n\t}\n\n\tclass Renderer implements ITreeRenderer<number, void, HTMLElement> {\n\t\treadonly templateId = 'default';\n\t\trenderTemplate(container: HTMLElement): HTMLElement {\n\t\t\treturn container;\n\t\t}\n\t\trenderElement(element: ITreeNode<number, void>, index: number, templateData: HTMLElement): void {\n\t\t\ttemplateData.textContent = `${element.element}`;\n\t\t}\n\t\tdisposeTemplate(): void { }\n\t}\n\n\tclass IdentityProvider implements IIdentityProvider<number> {\n\t\tgetId(element: number): { toString(): string } {\n\t\t\treturn `${element % 100}`;\n\t\t}\n\t}\n\n\ttest('traits are preserved according to string identity', function () {\n\t\tconst container = document.createElement('div');\n\t\tcontainer.style.width = '200px';\n\t\tcontainer.style.height = '200px';\n\n\t\tconst delegate = new Delegate();\n\t\tconst renderer = new Renderer();\n\t\tconst identityProvider = new IdentityProvider();\n\n\t\tconst tree = new ObjectTree<number>('test', container, delegate, [renderer], { identityProvider });\n\t\ttree.layout(200);\n\n\t\ttree.setChildren(null, [{ element: 0 }, { element: 1 }, { element: 2 }, { element: 3 }]);\n\t\ttree.setFocus([1]);\n\t\tassert.deepStrictEqual(tree.getFocus(), [1]);\n\n\t\ttree.setChildren(null, [{ element: 100 }, { element: 101 }, { element: 102 }, { element: 103 }]);\n\t\tassert.deepStrictEqual(tree.getFocus(), [101]);\n\t});\n\n\ttest('swap model', function () {\n\t\tconst container = document.createElement('div');\n\t\tcontainer.style.width = '200px';\n\t\tcontainer.style.height = '200px';\n\n\t\tconst delegate = new Delegate();\n\t\tconst renderer = new Renderer();\n\t\tconst identityProvider = new IdentityProvider();\n\n\t\tconst tree = new ObjectTree<number>('test', container, delegate, [renderer], { identityProvider });\n\t\ttree.layout(200);\n\n\t\ttree.setChildren(null, [{ element: 1 }, { element: 2 }, { element: 3 }, { element: 4 }]);\n\t\tassert.deepStrictEqual(getRowsTextContent(container), ['1', '2', '3', '4']);\n\n\t\tconst oldModel = tree.getModel();\n\n\t\tconst newModel = new ObjectTreeModel<number, void>('test', {});\n\t\ttree.setModel(newModel);\n\t\tassert.deepStrictEqual(getRowsTextContent(container), []);\n\n\t\tnewModel.setChildren(null, [\n\t\t\t{ element: 1, children: [{ element: 11 }] },\n\t\t\t{ element: 2 }\n\t\t]);\n\t\tassert.deepStrictEqual(getRowsTextContent(container), ['1', '11', '2']);\n\n\t\ttree.setChildren(11, [\n\t\t\t{ element: 111, children: [{ element: 1111 }] },\n\t\t\t{ element: 112 },\n\t\t]);\n\t\tassert.deepStrictEqual(getRowsTextContent(container), ['1', '11', '111', '1111', '112', '2']);\n\n\t\ttree.setModel(oldModel);\n\t\tassert.deepStrictEqual(getRowsTextContent(container), ['1', '2', '3', '4']);\n\t});\n\n\ttest('swap model events', function () {\n\t\tconst container = document.createElement('div');\n\t\tcontainer.style.width = '200px';\n\t\tcontainer.style.height = '200px';\n\n\t\tconst delegate = new Delegate();\n\t\tconst renderer = new Renderer();\n\t\tconst identityProvider = new IdentityProvider();\n\n\t\tconst tree = new ObjectTree<number>('test', container, delegate, [renderer], { identityProvider });\n\t\ttree.layout(200);\n\n\t\ttree.setChildren(null, [{ element: 1 }, { element: 2 }, { element: 3 }, { element: 4 }]);\n\t\tassert.deepStrictEqual(getRowsTextContent(container), ['1', '2', '3', '4']);\n\n\t\tconst newModel = new ObjectTreeModel<number, void>('test', {});\n\t\tnewModel.setChildren(null, [\n\t\t\t{ element: 1, children: [{ element: 11 }] },\n\t\t\t{ element: 2 }\n\t\t]);\n\n\t\tlet didChangeModel = false;\n\t\tlet didChangeRenderNodeCount = false;\n\t\tlet didChangeCollapseState = false;\n\n\t\ttree.onDidChangeModel(() => { didChangeModel = true; });\n\t\ttree.onDidChangeRenderNodeCount(() => { didChangeRenderNodeCount = true; });\n\t\ttree.onDidChangeCollapseState(() => { didChangeCollapseState = true; });\n\n\t\ttree.setModel(newModel);\n\n\t\tassert.strictEqual(didChangeModel, true);\n\t\tassert.strictEqual(didChangeRenderNodeCount, false);\n\t\tassert.strictEqual(didChangeCollapseState, false);\n\t});\n\n\t// TODO@benibenj: Make sure user is updated in the tree when model is swapped\n\ttest.skip('swap model TreeError uses updated user', function () {\n\t\tconst container = document.createElement('div');\n\t\tcontainer.style.width = '200px';\n\t\tcontainer.style.height = '200px';\n\n\t\tconst delegate = new Delegate();\n\t\tconst renderer = new Renderer();\n\n\t\tconst tree = new ObjectTree<number>('test', container, delegate, [renderer], {});\n\t\ttree.layout(200);\n\n\t\ttree.setChildren(null, [{ element: 1 }]);\n\n\t\tconst newModel = new ObjectTreeModel<number, void>('NEW_USER_NAME', {});\n\t\ttree.setModel(newModel);\n\n\t\ttry {\n\t\t\t// This should throw an error because no identity provider is provided\n\t\t\ttree.getViewState();\n\t\t} catch (e) {\n\t\t\tassert.strictEqual(e.message.includes('NEW_USER_NAME'), true);\n\t\t\treturn;\n\t\t}\n\n\t\tassert.fail('Expected error');\n\t});\n});\n\nsuite('CompressibleObjectTree', function () {\n\n\tclass Delegate implements IListVirtualDelegate<number> {\n\t\tgetHeight() { return 20; }\n\t\tgetTemplateId(): string { return 'default'; }\n\t}\n\n\tclass Renderer implements ICompressibleTreeRenderer<number, void, HTMLElement> {\n\t\treadonly templateId = 'default';\n\t\trenderTemplate(container: HTMLElement): HTMLElement {\n\t\t\treturn container;\n\t\t}\n\t\trenderElement(node: ITreeNode<number, void>, _: number, templateData: HTMLElement): void {\n\t\t\ttemplateData.textContent = `${node.element}`;\n\t\t}\n\t\trenderCompressedElements(node: ITreeNode<ICompressedTreeNode<number>, void>, _: number, templateData: HTMLElement): void {\n\t\t\ttemplateData.textContent = `${node.element.elements.join('/')}`;\n\t\t}\n\t\tdisposeTemplate(): void { }\n\t}\n\n\tconst ds = ensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('empty', function () {\n\t\tconst container = document.createElement('div');\n\t\tcontainer.style.width = '200px';\n\t\tcontainer.style.height = '200px';\n\n\t\tconst tree = ds.add(new CompressibleObjectTree<number>('test', container, new Delegate(), [new Renderer()]));\n\t\ttree.layout(200);\n\n\t\tassert.strictEqual(getRowsTextContent(container).length, 0);\n\t});\n\n\ttest('simple', function () {\n\t\tconst container = document.createElement('div');\n\t\tcontainer.style.width = '200px';\n\t\tcontainer.style.height = '200px';\n\n\t\tconst tree = ds.add(new CompressibleObjectTree<number>('test', container, new Delegate(), [new Renderer()]));\n\t\ttree.layout(200);\n\n\t\ttree.setChildren(null, [\n\t\t\t{\n\t\t\t\telement: 0, children: [\n\t\t\t\t\t{ element: 10 },\n\t\t\t\t\t{ element: 11 },\n\t\t\t\t\t{ element: 12 },\n\t\t\t\t]\n\t\t\t},\n\t\t\t{ element: 1 },\n\t\t\t{ element: 2 }\n\t\t]);\n\n\t\tassert.deepStrictEqual(getRowsTextContent(container), ['0', '10', '11', '12', '1', '2']);\n\t});\n\n\ttest('compressed', () => {\n\t\tconst container = document.createElement('div');\n\t\tcontainer.style.width = '200px';\n\t\tcontainer.style.height = '200px';\n\n\t\tconst tree = ds.add(new CompressibleObjectTree<number>('test', container, new Delegate(), [new Renderer()]));\n\t\ttree.layout(200);\n\n\t\ttree.setChildren(null, [\n\t\t\t{\n\t\t\t\telement: 1, children: [{\n\t\t\t\t\telement: 11, children: [{\n\t\t\t\t\t\telement: 111, children: [\n\t\t\t\t\t\t\t{ element: 1111 },\n\t\t\t\t\t\t\t{ element: 1112 },\n\t\t\t\t\t\t\t{ element: 1113 },\n\t\t\t\t\t\t]\n\t\t\t\t\t}]\n\t\t\t\t}]\n\t\t\t}\n\t\t]);\n\n\t\tassert.deepStrictEqual(getRowsTextContent(container), ['1/11/111', '1111', '1112', '1113']);\n\n\t\ttree.setChildren(11, [\n\t\t\t{ element: 111 },\n\t\t\t{ element: 112 },\n\t\t\t{ element: 113 },\n\t\t]);\n\n\t\tassert.deepStrictEqual(getRowsTextContent(container), ['1/11', '111', '112', '113']);\n\n\t\ttree.setChildren(113, [\n\t\t\t{ element: 1131 }\n\t\t]);\n\n\t\tassert.deepStrictEqual(getRowsTextContent(container), ['1/11', '111', '112', '113/1131']);\n\n\t\ttree.setChildren(1131, [\n\t\t\t{ element: 1132 }\n\t\t]);\n\n\t\tassert.deepStrictEqual(getRowsTextContent(container), ['1/11', '111', '112', '113/1131/1132']);\n\n\t\ttree.setChildren(1131, [\n\t\t\t{ element: 1132 },\n\t\t\t{ element: 1133 },\n\t\t]);\n\n\t\tassert.deepStrictEqual(getRowsTextContent(container), ['1/11', '111', '112', '113/1131', '1132', '1133']);\n\t});\n\n\ttest('enableCompression', () => {\n\t\tconst container = document.createElement('div');\n\t\tcontainer.style.width = '200px';\n\t\tcontainer.style.height = '200px';\n\n\t\tconst tree = ds.add(new CompressibleObjectTree<number>('test', container, new Delegate(), [new Renderer()]));\n\t\ttree.layout(200);\n\n\t\ttree.setChildren(null, [\n\t\t\t{\n\t\t\t\telement: 1, children: [{\n\t\t\t\t\telement: 11, children: [{\n\t\t\t\t\t\telement: 111, children: [\n\t\t\t\t\t\t\t{ element: 1111 },\n\t\t\t\t\t\t\t{ element: 1112 },\n\t\t\t\t\t\t\t{ element: 1113 },\n\t\t\t\t\t\t]\n\t\t\t\t\t}]\n\t\t\t\t}]\n\t\t\t}\n\t\t]);\n\n\t\tassert.deepStrictEqual(getRowsTextContent(container), ['1/11/111', '1111', '1112', '1113']);\n\n\t\ttree.updateOptions({ compressionEnabled: false });\n\t\tassert.deepStrictEqual(getRowsTextContent(container), ['1', '11', '111', '1111', '1112', '1113']);\n\n\t\ttree.updateOptions({ compressionEnabled: true });\n\t\tassert.deepStrictEqual(getRowsTextContent(container), ['1/11/111', '1111', '1112', '1113']);\n\t});\n\n\ttest('swapModel', () => {\n\t\tconst container = document.createElement('div');\n\t\tcontainer.style.width = '200px';\n\t\tcontainer.style.height = '200px';\n\n\t\tconst tree = ds.add(new CompressibleObjectTree<number>('test', container, new Delegate(), [new Renderer()]));\n\t\ttree.layout(200);\n\n\t\ttree.setChildren(null, [\n\t\t\t{\n\t\t\t\telement: 1, children: [{\n\t\t\t\t\telement: 11, children: [{\n\t\t\t\t\t\telement: 111, children: [\n\t\t\t\t\t\t\t{ element: 1111 },\n\t\t\t\t\t\t\t{ element: 1112 },\n\t\t\t\t\t\t\t{ element: 1113 },\n\t\t\t\t\t\t]\n\t\t\t\t\t}]\n\t\t\t\t}]\n\t\t\t}\n\t\t]);\n\n\t\tassert.deepStrictEqual(getRowsTextContent(container), ['1/11/111', '1111', '1112', '1113']);\n\n\t\tconst newModel = new CompressibleObjectTreeModel<number, void>('test', {});\n\t\tnewModel.setChildren(null, [\n\t\t\t{\n\t\t\t\telement: 1, children: [{\n\t\t\t\t\telement: 11\n\t\t\t\t}]\n\t\t\t},\n\t\t\t{\n\t\t\t\telement: 2, children: [{\n\t\t\t\t\telement: 21, children: [\n\t\t\t\t\t\t{ element: 211 },\n\t\t\t\t\t\t{ element: 212 },\n\t\t\t\t\t\t{ element: 213 },\n\t\t\t\t\t]\n\t\t\t\t}]\n\t\t\t}\n\t\t]);\n\n\t\ttree.setModel(newModel);\n\t\tassert.deepStrictEqual(getRowsTextContent(container), ['1/11', '2/21', '211', '212', '213']);\n\n\t\ttree.setChildren(11, [\n\t\t\t{ element: 111 },\n\t\t\t{ element: 112 },\n\t\t\t{ element: 113 },\n\t\t]);\n\n\t\tassert.deepStrictEqual(getRowsTextContent(container), ['1/11', '111', '112', '113', '2/21', '211', '212', '213']);\n\n\t});\n});\n"],
  "mappings": "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",
  "names": ["container"]
}
