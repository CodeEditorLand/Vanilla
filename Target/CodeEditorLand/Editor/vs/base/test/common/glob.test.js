import a from"assert";import*as e from"../../common/glob.js";import{sep as d}from"../../common/path.js";import{isLinux as j,isMacintosh as h,isWindows as i}from"../../common/platform.js";import{URI as E}from"../../common/uri.js";import{ensureNoDisposablesAreLeakedInTestSuite as q}from"./utils.js";suite("Glob",()=>{function t(o,n){a(e.match(o,n),`${JSON.stringify(o)} should match ${n}`),a(e.match(o,f(n)),`${o} should match ${f(n)}`)}function s(o,n){a(!e.match(o,n),`${o} should not match ${n}`),a(!e.match(o,f(n)),`${o} should not match ${f(n)}`)}test("simple",()=>{let o="node_modules";t(o,"node_modules"),s(o,"node_module"),s(o,"/node_modules"),s(o,"test/node_modules"),o="test.txt",t(o,"test.txt"),s(o,"test?txt"),s(o,"/text.txt"),s(o,"test/test.txt"),o="test(.txt",t(o,"test(.txt"),s(o,"test?txt"),o="qunit",t(o,"qunit"),s(o,"qunit.css"),s(o,"test/qunit"),o="/DNXConsoleApp/**/*.cs",t(o,"/DNXConsoleApp/Program.cs"),t(o,"/DNXConsoleApp/foo/Program.cs"),o="C:/DNXConsoleApp/**/*.cs",t(o,"C:\\DNXConsoleApp\\Program.cs"),t(o,"C:\\DNXConsoleApp\\foo\\Program.cs"),o="*",t(o,"")}),test("dot hidden",function(){let o=".*";t(o,".git"),t(o,".hidden.txt"),s(o,"git"),s(o,"hidden.txt"),s(o,"path/.git"),s(o,"path/.hidden.txt"),o="**/.*",t(o,".git"),t(o,"/.git"),t(o,".hidden.txt"),s(o,"git"),s(o,"hidden.txt"),t(o,"path/.git"),t(o,"path/.hidden.txt"),t(o,"/path/.git"),t(o,"/path/.hidden.txt"),s(o,"path/git"),s(o,"pat.h/hidden.txt"),o="._*",t(o,"._git"),t(o,"._hidden.txt"),s(o,"git"),s(o,"hidden.txt"),s(o,"path/._git"),s(o,"path/._hidden.txt"),o="**/._*",t(o,"._git"),t(o,"._hidden.txt"),s(o,"git"),s(o,"hidden._txt"),t(o,"path/._git"),t(o,"path/._hidden.txt"),t(o,"/path/._git"),t(o,"/path/._hidden.txt"),s(o,"path/git"),s(o,"pat.h/hidden._txt")}),test("file pattern",function(){let o="*.js";t(o,"foo.js"),s(o,"folder/foo.js"),s(o,"/node_modules/foo.js"),s(o,"foo.jss"),s(o,"some.js/test"),o="html.*",t(o,"html.js"),t(o,"html.txt"),s(o,"htm.txt"),o="*.*",t(o,"html.js"),t(o,"html.txt"),t(o,"htm.txt"),s(o,"folder/foo.js"),s(o,"/node_modules/foo.js"),o="node_modules/test/*.js",t(o,"node_modules/test/foo.js"),s(o,"folder/foo.js"),s(o,"/node_module/test/foo.js"),s(o,"foo.jss"),s(o,"some.js/test")}),test("star",()=>{let o="node*modules";t(o,"node_modules"),t(o,"node_super_modules"),s(o,"node_module"),s(o,"/node_modules"),s(o,"test/node_modules"),o="*",t(o,"html.js"),t(o,"html.txt"),t(o,"htm.txt"),s(o,"folder/foo.js"),s(o,"/node_modules/foo.js")}),test("file / folder match",function(){const o="**/node_modules/**";t(o,"node_modules"),t(o,"node_modules/"),t(o,"a/node_modules"),t(o,"a/node_modules/"),t(o,"node_modules/foo"),t(o,"foo/node_modules/foo/bar"),t(o,"/node_modules"),t(o,"/node_modules/"),t(o,"/a/node_modules"),t(o,"/a/node_modules/"),t(o,"/node_modules/foo"),t(o,"/foo/node_modules/foo/bar")}),test("questionmark",()=>{let o="node?modules";t(o,"node_modules"),s(o,"node_super_modules"),s(o,"node_module"),s(o,"/node_modules"),s(o,"test/node_modules"),o="?",t(o,"h"),s(o,"html.txt"),s(o,"htm.txt"),s(o,"folder/foo.js"),s(o,"/node_modules/foo.js")}),test("globstar",()=>{let o="**/*.js";t(o,"foo.js"),t(o,"/foo.js"),t(o,"folder/foo.js"),t(o,"/node_modules/foo.js"),s(o,"foo.jss"),s(o,"some.js/test"),s(o,"/some.js/test"),s(o,"\\some.js\\test"),o="**/project.json",t(o,"project.json"),t(o,"/project.json"),t(o,"some/folder/project.json"),t(o,"/some/folder/project.json"),s(o,"some/folder/file_project.json"),s(o,"some/folder/fileproject.json"),s(o,"some/rrproject.json"),s(o,"some\\rrproject.json"),o="test/**",t(o,"test"),t(o,"test/foo"),t(o,"test/foo/"),t(o,"test/foo.js"),t(o,"test/other/foo.js"),s(o,"est/other/foo.js"),o="**",t(o,"/"),t(o,"foo.js"),t(o,"folder/foo.js"),t(o,"folder/foo/"),t(o,"/node_modules/foo.js"),t(o,"foo.jss"),t(o,"some.js/test"),o="test/**/*.js",t(o,"test/foo.js"),t(o,"test/other/foo.js"),t(o,"test/other/more/foo.js"),s(o,"test/foo.ts"),s(o,"test/other/foo.ts"),s(o,"test/other/more/foo.ts"),o="**/**/*.js",t(o,"foo.js"),t(o,"/foo.js"),t(o,"folder/foo.js"),t(o,"/node_modules/foo.js"),s(o,"foo.jss"),s(o,"some.js/test"),o="**/node_modules/**/*.js",s(o,"foo.js"),s(o,"folder/foo.js"),t(o,"node_modules/foo.js"),t(o,"/node_modules/foo.js"),t(o,"node_modules/some/folder/foo.js"),t(o,"/node_modules/some/folder/foo.js"),s(o,"node_modules/some/folder/foo.ts"),s(o,"foo.jss"),s(o,"some.js/test"),o="{**/node_modules/**,**/.git/**,**/bower_components/**}",t(o,"node_modules"),t(o,"/node_modules"),t(o,"/node_modules/more"),t(o,"some/test/node_modules"),t(o,"some\\test\\node_modules"),t(o,"/some/test/node_modules"),t(o,"\\some\\test\\node_modules"),t(o,"C:\\\\some\\test\\node_modules"),t(o,"C:\\\\some\\test\\node_modules\\more"),t(o,"bower_components"),t(o,"bower_components/more"),t(o,"/bower_components"),t(o,"some/test/bower_components"),t(o,"some\\test\\bower_components"),t(o,"/some/test/bower_components"),t(o,"\\some\\test\\bower_components"),t(o,"C:\\\\some\\test\\bower_components"),t(o,"C:\\\\some\\test\\bower_components\\more"),t(o,".git"),t(o,"/.git"),t(o,"some/test/.git"),t(o,"some\\test\\.git"),t(o,"/some/test/.git"),t(o,"\\some\\test\\.git"),t(o,"C:\\\\some\\test\\.git"),s(o,"tempting"),s(o,"/tempting"),s(o,"some/test/tempting"),s(o,"some\\test\\tempting"),s(o,"/some/test/tempting"),s(o,"\\some\\test\\tempting"),s(o,"C:\\\\some\\test\\tempting"),o="{**/package.json,**/project.json}",t(o,"package.json"),t(o,"/package.json"),s(o,"xpackage.json"),s(o,"/xpackage.json")}),test("issue 41724",function(){let o="some/**/*.js";t(o,"some/foo.js"),t(o,"some/folder/foo.js"),s(o,"something/foo.js"),s(o,"something/folder/foo.js"),o="some/**/*",t(o,"some/foo.js"),t(o,"some/folder/foo.js"),s(o,"something/foo.js"),s(o,"something/folder/foo.js")}),test("brace expansion",function(){let o="*.{html,js}";t(o,"foo.js"),t(o,"foo.html"),s(o,"folder/foo.js"),s(o,"/node_modules/foo.js"),s(o,"foo.jss"),s(o,"some.js/test"),o="*.{html}",t(o,"foo.html"),s(o,"foo.js"),s(o,"folder/foo.js"),s(o,"/node_modules/foo.js"),s(o,"foo.jss"),s(o,"some.js/test"),o="{node_modules,testing}",t(o,"node_modules"),t(o,"testing"),s(o,"node_module"),s(o,"dtesting"),o="**/{foo,bar}",t(o,"foo"),t(o,"bar"),t(o,"test/foo"),t(o,"test/bar"),t(o,"other/more/foo"),t(o,"other/more/bar"),t(o,"/foo"),t(o,"/bar"),t(o,"/test/foo"),t(o,"/test/bar"),t(o,"/other/more/foo"),t(o,"/other/more/bar"),o="{foo,bar}/**",t(o,"foo"),t(o,"bar"),t(o,"bar/"),t(o,"foo/test"),t(o,"bar/test"),t(o,"bar/test/"),t(o,"foo/other/more"),t(o,"bar/other/more"),t(o,"bar/other/more/"),o="{**/*.d.ts,**/*.js}",t(o,"foo.js"),t(o,"testing/foo.js"),t(o,"testing\\foo.js"),t(o,"/testing/foo.js"),t(o,"\\testing\\foo.js"),t(o,"C:\\testing\\foo.js"),t(o,"foo.d.ts"),t(o,"testing/foo.d.ts"),t(o,"testing\\foo.d.ts"),t(o,"/testing/foo.d.ts"),t(o,"\\testing\\foo.d.ts"),t(o,"C:\\testing\\foo.d.ts"),s(o,"foo.d"),s(o,"testing/foo.d"),s(o,"testing\\foo.d"),s(o,"/testing/foo.d"),s(o,"\\testing\\foo.d"),s(o,"C:\\testing\\foo.d"),o="{**/*.d.ts,**/*.js,path/simple.jgs}",t(o,"foo.js"),t(o,"testing/foo.js"),t(o,"testing\\foo.js"),t(o,"/testing/foo.js"),t(o,"path/simple.jgs"),s(o,"/path/simple.jgs"),t(o,"\\testing\\foo.js"),t(o,"C:\\testing\\foo.js"),o="{**/*.d.ts,**/*.js,foo.[0-9]}",t(o,"foo.5"),t(o,"foo.8"),s(o,"bar.5"),s(o,"foo.f"),t(o,"foo.js"),o="prefix/{**/*.d.ts,**/*.js,foo.[0-9]}",t(o,"prefix/foo.5"),t(o,"prefix/foo.8"),s(o,"prefix/bar.5"),s(o,"prefix/foo.f"),t(o,"prefix/foo.js")}),test("expression support (single)",function(){const o=["test.html","test.txt","test.ts","test.js"],n=l=>o.indexOf(l)!==-1;let r={"**/*.js":{when:"$(basename).ts"}};a.strictEqual("**/*.js",e.match(r,"test.js",n)),a.strictEqual(e.match(r,"test.js",()=>!1),null),a.strictEqual(e.match(r,"test.js",l=>l==="te.ts"),null),a.strictEqual(e.match(r,"test.js"),null),r={"**/*.js":{when:""}},a.strictEqual(e.match(r,"test.js",n),null),r={"**/*.js":{}},a.strictEqual("**/*.js",e.match(r,"test.js",n)),r={},a.strictEqual(e.match(r,"test.js",n),null)}),test("expression support (multiple)",function(){const o=["test.html","test.txt","test.ts","test.js"],n=l=>o.indexOf(l)!==-1,r={"**/*.js":{when:"$(basename).ts"},"**/*.as":!0,"**/*.foo":!1,"**/*.bananas":{bananas:!0}};a.strictEqual("**/*.js",e.match(r,"test.js",n)),a.strictEqual("**/*.as",e.match(r,"test.as",n)),a.strictEqual("**/*.bananas",e.match(r,"test.bananas",n)),a.strictEqual("**/*.bananas",e.match(r,"test.bananas")),a.strictEqual(e.match(r,"test.foo",n),null)}),test("brackets",()=>{let o="foo.[0-9]";t(o,"foo.5"),t(o,"foo.8"),s(o,"bar.5"),s(o,"foo.f"),o="foo.[^0-9]",s(o,"foo.5"),s(o,"foo.8"),s(o,"bar.5"),t(o,"foo.f"),o="foo.[!0-9]",s(o,"foo.5"),s(o,"foo.8"),s(o,"bar.5"),t(o,"foo.f"),o="foo.[0!^*?]",s(o,"foo.5"),s(o,"foo.8"),t(o,"foo.0"),t(o,"foo.!"),t(o,"foo.^"),t(o,"foo.*"),t(o,"foo.?"),o="foo[/]bar",s(o,"foo/bar"),o="foo.[[]",t(o,"foo.["),o="foo.[]]",t(o,"foo.]"),o="foo.[][!]",t(o,"foo.]"),t(o,"foo.["),t(o,"foo.!"),o="foo.[]-]",t(o,"foo.]"),t(o,"foo.-")}),test("full path",function(){t("testing/this/foo.txt","testing/this/foo.txt")}),test("ending path",function(){t("**/testing/this/foo.txt","some/path/testing/this/foo.txt")}),test("prefix agnostic",function(){let o="**/*.js";t(o,"foo.js"),t(o,"/foo.js"),t(o,"\\foo.js"),t(o,"testing/foo.js"),t(o,"testing\\foo.js"),t(o,"/testing/foo.js"),t(o,"\\testing\\foo.js"),t(o,"C:\\testing\\foo.js"),s(o,"foo.ts"),s(o,"testing/foo.ts"),s(o,"testing\\foo.ts"),s(o,"/testing/foo.ts"),s(o,"\\testing\\foo.ts"),s(o,"C:\\testing\\foo.ts"),s(o,"foo.js.txt"),s(o,"testing/foo.js.txt"),s(o,"testing\\foo.js.txt"),s(o,"/testing/foo.js.txt"),s(o,"\\testing\\foo.js.txt"),s(o,"C:\\testing\\foo.js.txt"),s(o,"testing.js/foo"),s(o,"testing.js\\foo"),s(o,"/testing.js/foo"),s(o,"\\testing.js\\foo"),s(o,"C:\\testing.js\\foo"),o="**/foo.js",t(o,"foo.js"),t(o,"/foo.js"),t(o,"\\foo.js"),t(o,"testing/foo.js"),t(o,"testing\\foo.js"),t(o,"/testing/foo.js"),t(o,"\\testing\\foo.js"),t(o,"C:\\testing\\foo.js")}),test("cached properly",function(){const o="**/*.js";t(o,"foo.js"),t(o,"testing/foo.js"),t(o,"testing\\foo.js"),t(o,"/testing/foo.js"),t(o,"\\testing\\foo.js"),t(o,"C:\\testing\\foo.js"),s(o,"foo.ts"),s(o,"testing/foo.ts"),s(o,"testing\\foo.ts"),s(o,"/testing/foo.ts"),s(o,"\\testing\\foo.ts"),s(o,"C:\\testing\\foo.ts"),s(o,"foo.js.txt"),s(o,"testing/foo.js.txt"),s(o,"testing\\foo.js.txt"),s(o,"/testing/foo.js.txt"),s(o,"\\testing\\foo.js.txt"),s(o,"C:\\testing\\foo.js.txt"),s(o,"testing.js/foo"),s(o,"testing.js\\foo"),s(o,"/testing.js/foo"),s(o,"\\testing.js\\foo"),s(o,"C:\\testing.js\\foo"),t(o,"foo.js"),t(o,"testing/foo.js"),t(o,"testing\\foo.js"),t(o,"/testing/foo.js"),t(o,"\\testing\\foo.js"),t(o,"C:\\testing\\foo.js"),s(o,"foo.ts"),s(o,"testing/foo.ts"),s(o,"testing\\foo.ts"),s(o,"/testing/foo.ts"),s(o,"\\testing\\foo.ts"),s(o,"C:\\testing\\foo.ts"),s(o,"foo.js.txt"),s(o,"testing/foo.js.txt"),s(o,"testing\\foo.js.txt"),s(o,"/testing/foo.js.txt"),s(o,"\\testing\\foo.js.txt"),s(o,"C:\\testing\\foo.js.txt"),s(o,"testing.js/foo"),s(o,"testing.js\\foo"),s(o,"/testing.js/foo"),s(o,"\\testing.js\\foo"),s(o,"C:\\testing.js\\foo")}),test("invalid glob",function(){s("**/*(.js","foo.js")}),test("split glob aware",function(){a.deepStrictEqual(e.splitGlobAware("foo,bar",","),["foo","bar"]),a.deepStrictEqual(e.splitGlobAware("foo",","),["foo"]),a.deepStrictEqual(e.splitGlobAware("{foo,bar}",","),["{foo,bar}"]),a.deepStrictEqual(e.splitGlobAware("foo,bar,{foo,bar}",","),["foo","bar","{foo,bar}"]),a.deepStrictEqual(e.splitGlobAware("{foo,bar},foo,bar,{foo,bar}",","),["{foo,bar}","foo","bar","{foo,bar}"]),a.deepStrictEqual(e.splitGlobAware("[foo,bar]",","),["[foo,bar]"]),a.deepStrictEqual(e.splitGlobAware("foo,bar,[foo,bar]",","),["foo","bar","[foo,bar]"]),a.deepStrictEqual(e.splitGlobAware("[foo,bar],foo,bar,[foo,bar]",","),["[foo,bar]","foo","bar","[foo,bar]"])}),test("expression with disabled glob",function(){const o={"**/*.js":!1};a.strictEqual(e.match(o,"foo.js"),null)}),test("expression with two non-trivia globs",function(){const o={"**/*.j?":!0,"**/*.t?":!0};a.strictEqual(e.match(o,"foo.js"),"**/*.j?"),a.strictEqual(e.match(o,"foo.as"),null)}),test("expression with non-trivia glob (issue 144458)",function(){const o="**/p*";a.strictEqual(e.match(o,"foo/barp"),!1),a.strictEqual(e.match(o,"foo/bar/ap"),!1),a.strictEqual(e.match(o,"ap"),!1),a.strictEqual(e.match(o,"foo/barp1"),!1),a.strictEqual(e.match(o,"foo/bar/ap1"),!1),a.strictEqual(e.match(o,"ap1"),!1),a.strictEqual(e.match(o,"/foo/barp"),!1),a.strictEqual(e.match(o,"/foo/bar/ap"),!1),a.strictEqual(e.match(o,"/ap"),!1),a.strictEqual(e.match(o,"/foo/barp1"),!1),a.strictEqual(e.match(o,"/foo/bar/ap1"),!1),a.strictEqual(e.match(o,"/ap1"),!1),a.strictEqual(e.match(o,"foo/pbar"),!0),a.strictEqual(e.match(o,"/foo/pbar"),!0),a.strictEqual(e.match(o,"foo/bar/pa"),!0),a.strictEqual(e.match(o,"/p"),!0)}),test("expression with empty glob",function(){const o={"":!0};a.strictEqual(e.match(o,"foo.js"),null)}),test("expression with other falsy value",function(){const o={"**/*.js":0};a.strictEqual(e.match(o,"foo.js"),"**/*.js")}),test("expression with two basename globs",function(){const o={"**/bar":!0,"**/baz":!0};a.strictEqual(e.match(o,"bar"),"**/bar"),a.strictEqual(e.match(o,"foo"),null),a.strictEqual(e.match(o,"foo/bar"),"**/bar"),a.strictEqual(e.match(o,"foo\\bar"),"**/bar"),a.strictEqual(e.match(o,"foo/foo"),null)}),test("expression with two basename globs and a siblings expression",function(){const o={"**/bar":!0,"**/baz":!0,"**/*.js":{when:"$(basename).ts"}},n=["foo.ts","foo.js","foo","bar"],r=l=>n.indexOf(l)!==-1;a.strictEqual(e.match(o,"bar",r),"**/bar"),a.strictEqual(e.match(o,"foo",r),null),a.strictEqual(e.match(o,"foo/bar",r),"**/bar"),i&&a.strictEqual(e.match(o,"foo\\bar",r),"**/bar"),a.strictEqual(e.match(o,"foo/foo",r),null),a.strictEqual(e.match(o,"foo.js",r),"**/*.js"),a.strictEqual(e.match(o,"bar.js",r),null)}),test("expression with multipe basename globs",function(){const o={"**/bar":!0,"{**/baz,**/foo}":!0};a.strictEqual(e.match(o,"bar"),"**/bar"),a.strictEqual(e.match(o,"foo"),"{**/baz,**/foo}"),a.strictEqual(e.match(o,"baz"),"{**/baz,**/foo}"),a.strictEqual(e.match(o,"abc"),null)}),test("falsy expression/pattern",function(){a.strictEqual(e.match(null,"foo"),!1),a.strictEqual(e.match("","foo"),!1),a.strictEqual(e.parse(null)("foo"),!1),a.strictEqual(e.parse("")("foo"),!1)}),test("falsy path",function(){a.strictEqual(e.parse("foo")(null),!1),a.strictEqual(e.parse("foo")(""),!1),a.strictEqual(e.parse("**/*.j?")(null),!1),a.strictEqual(e.parse("**/*.j?")(""),!1),a.strictEqual(e.parse("**/*.foo")(null),!1),a.strictEqual(e.parse("**/*.foo")(""),!1),a.strictEqual(e.parse("**/foo")(null),!1),a.strictEqual(e.parse("**/foo")(""),!1),a.strictEqual(e.parse("{**/baz,**/foo}")(null),!1),a.strictEqual(e.parse("{**/baz,**/foo}")(""),!1),a.strictEqual(e.parse("{**/*.baz,**/*.foo}")(null),!1),a.strictEqual(e.parse("{**/*.baz,**/*.foo}")(""),!1)}),test("expression/pattern basename",function(){a.strictEqual(e.parse("**/foo")("bar/baz","baz"),!1),a.strictEqual(e.parse("**/foo")("bar/foo","foo"),!0),a.strictEqual(e.parse("{**/baz,**/foo}")("baz/bar","bar"),!1),a.strictEqual(e.parse("{**/baz,**/foo}")("baz/foo","foo"),!0);const o={"**/*.js":{when:"$(basename).ts"}},n=["foo.ts","foo.js"],r=l=>n.indexOf(l)!==-1;a.strictEqual(e.parse(o)("bar/baz.js","baz.js",r),null),a.strictEqual(e.parse(o)("bar/foo.js","foo.js",r),"**/*.js")}),test("expression/pattern basename terms",function(){a.deepStrictEqual(e.getBasenameTerms(e.parse("**/*.foo")),[]),a.deepStrictEqual(e.getBasenameTerms(e.parse("**/foo")),["foo"]),a.deepStrictEqual(e.getBasenameTerms(e.parse("**/foo/")),["foo"]),a.deepStrictEqual(e.getBasenameTerms(e.parse("{**/baz,**/foo}")),["baz","foo"]),a.deepStrictEqual(e.getBasenameTerms(e.parse("{**/baz/,**/foo/}")),["baz","foo"]),a.deepStrictEqual(e.getBasenameTerms(e.parse({"**/foo":!0,"{**/bar,**/baz}":!0,"{**/bar2/,**/baz2/}":!0,"**/bulb":!1})),["foo","bar","baz","bar2","baz2"]),a.deepStrictEqual(e.getBasenameTerms(e.parse({"**/foo":{when:"$(basename).zip"},"**/bar":!0})),["bar"])}),test("expression/pattern optimization for basenames",function(){a.deepStrictEqual(e.getBasenameTerms(e.parse("**/foo/**")),[]),a.deepStrictEqual(e.getBasenameTerms(e.parse("**/foo/**",{trimForExclusions:!0})),["foo"]),b("**/*.foo/**",[],[["baz/bar.foo/bar/baz",!0]]),b("**/foo/**",["foo"],[["bar/foo",!0],["bar/foo/baz",!1]]),b("{**/baz/**,**/foo/**}",["baz","foo"],[["bar/baz",!0],["bar/foo",!0]]),b({"**/foo/**":!0,"{**/bar/**,**/baz/**}":!0,"**/bulb/**":!1},["foo","bar","baz"],[["bar/foo","**/foo/**"],["foo/bar","{**/bar/**,**/baz/**}"],["bar/nope",null]]);const o=["baz","baz.zip","nope"],n=r=>o.indexOf(r)!==-1;b({"**/foo/**":{when:"$(basename).zip"},"**/bar/**":!0},["bar"],[["bar/foo",null],["bar/foo/baz",null],["bar/foo/nope",null],["foo/bar","**/bar/**"]],[null,n,n])});function b(o,n,r,l=[]){const p=e.parse(o,{trimForExclusions:!0});a.deepStrictEqual(e.getBasenameTerms(p),n),r.forEach(([u,m],g)=>{a.strictEqual(p(u,null,l[g]),m)})}test("trailing slash",function(){a.strictEqual(e.parse("**/foo/")("bar/baz","baz"),!1),a.strictEqual(e.parse("**/foo/")("bar/foo","foo"),!0),a.strictEqual(e.parse("**/*.foo/")("bar/file.baz","file.baz"),!1),a.strictEqual(e.parse("**/*.foo/")("bar/file.foo","file.foo"),!0),a.strictEqual(e.parse("{**/foo/,**/abc/}")("bar/baz","baz"),!1),a.strictEqual(e.parse("{**/foo/,**/abc/}")("bar/foo","foo"),!0),a.strictEqual(e.parse("{**/foo/,**/abc/}")("bar/abc","abc"),!0),a.strictEqual(e.parse("{**/foo/,**/abc/}",{trimForExclusions:!0})("bar/baz","baz"),!1),a.strictEqual(e.parse("{**/foo/,**/abc/}",{trimForExclusions:!0})("bar/foo","foo"),!0),a.strictEqual(e.parse("{**/foo/,**/abc/}",{trimForExclusions:!0})("bar/abc","abc"),!0)}),test("expression/pattern path",function(){a.strictEqual(e.parse("**/foo/bar")(f("foo/baz"),"baz"),!1),a.strictEqual(e.parse("**/foo/bar")(f("foo/bar"),"bar"),!0),a.strictEqual(e.parse("**/foo/bar")(f("bar/foo/bar"),"bar"),!0),a.strictEqual(e.parse("**/foo/bar/**")(f("bar/foo/bar"),"bar"),!0),a.strictEqual(e.parse("**/foo/bar/**")(f("bar/foo/bar/baz"),"baz"),!0),a.strictEqual(e.parse("**/foo/bar/**",{trimForExclusions:!0})(f("bar/foo/bar"),"bar"),!0),a.strictEqual(e.parse("**/foo/bar/**",{trimForExclusions:!0})(f("bar/foo/bar/baz"),"baz"),!1),a.strictEqual(e.parse("foo/bar")(f("foo/baz"),"baz"),!1),a.strictEqual(e.parse("foo/bar")(f("foo/bar"),"bar"),!0),a.strictEqual(e.parse("foo/bar/baz")(f("foo/bar/baz"),"baz"),!0),a.strictEqual(e.parse("foo/bar")(f("bar/foo/bar"),"bar"),!1),a.strictEqual(e.parse("foo/bar/**")(f("foo/bar/baz"),"baz"),!0),a.strictEqual(e.parse("foo/bar/**",{trimForExclusions:!0})(f("foo/bar"),"bar"),!0),a.strictEqual(e.parse("foo/bar/**",{trimForExclusions:!0})(f("foo/bar/baz"),"baz"),!1)}),test("expression/pattern paths",function(){a.deepStrictEqual(e.getPathTerms(e.parse("**/*.foo")),[]),a.deepStrictEqual(e.getPathTerms(e.parse("**/foo")),[]),a.deepStrictEqual(e.getPathTerms(e.parse("**/foo/bar")),["*/foo/bar"]),a.deepStrictEqual(e.getPathTerms(e.parse("**/foo/bar/")),["*/foo/bar"]);const o=e.parse({"**/foo/bar":!0,"**/foo2/bar2":!0,"**/bulb":!0,"**/bulb2":!0,"**/bulb/foo":!1});a.deepStrictEqual(e.getPathTerms(o),["*/foo/bar","*/foo2/bar2"]),a.deepStrictEqual(e.getBasenameTerms(o),["bulb","bulb2"]),a.deepStrictEqual(e.getPathTerms(e.parse({"**/foo/bar":{when:"$(basename).zip"},"**/bar/foo":!0,"**/bar2/foo2":!0})),["*/bar/foo","*/bar2/foo2"])}),test("expression/pattern optimization for paths",function(){a.deepStrictEqual(e.getPathTerms(e.parse("**/foo/bar/**")),[]),a.deepStrictEqual(e.getPathTerms(e.parse("**/foo/bar/**",{trimForExclusions:!0})),["*/foo/bar"]),c("**/*.foo/bar/**",[],[[f("baz/bar.foo/bar/baz"),!0]]),c("**/foo/bar/**",["*/foo/bar"],[[f("bar/foo/bar"),!0],[f("bar/foo/bar/baz"),!1]]),c({"**/foo/bar/**":!0,"**/bulb/bar/**":!1},["*/foo/bar"],[[f("bar/foo/bar"),"**/foo/bar/**"],[f("/foo/bar/nope"),null]]);const o=["baz","baz.zip","nope"],n=r=>o.indexOf(r)!==-1;c({"**/foo/123/**":{when:"$(basename).zip"},"**/bar/123/**":!0},["*/bar/123"],[[f("bar/foo/123"),null],[f("bar/foo/123/baz"),null],[f("bar/foo/123/nope"),null],[f("foo/bar/123"),"**/bar/123/**"]],[null,n,n])});function c(o,n,r,l=[]){const p=e.parse(o,{trimForExclusions:!0});a.deepStrictEqual(e.getPathTerms(p),n),r.forEach(([u,m],g)=>{a.strictEqual(p(u,null,l[g]),m)})}function f(o){return o.replace(/\//g,d)}test("relative pattern - glob star",function(){if(i){const o={base:"C:\\DNXConsoleApp\\foo",pattern:"**/*.cs"};t(o,"C:\\DNXConsoleApp\\foo\\Program.cs"),t(o,"C:\\DNXConsoleApp\\foo\\bar\\Program.cs"),s(o,"C:\\DNXConsoleApp\\foo\\Program.ts"),s(o,"C:\\DNXConsoleApp\\Program.cs"),s(o,"C:\\other\\DNXConsoleApp\\foo\\Program.ts")}else{const o={base:"/DNXConsoleApp/foo",pattern:"**/*.cs"};t(o,"/DNXConsoleApp/foo/Program.cs"),t(o,"/DNXConsoleApp/foo/bar/Program.cs"),s(o,"/DNXConsoleApp/foo/Program.ts"),s(o,"/DNXConsoleApp/Program.cs"),s(o,"/other/DNXConsoleApp/foo/Program.ts")}}),test("relative pattern - single star",function(){if(i){const o={base:"C:\\DNXConsoleApp\\foo",pattern:"*.cs"};t(o,"C:\\DNXConsoleApp\\foo\\Program.cs"),s(o,"C:\\DNXConsoleApp\\foo\\bar\\Program.cs"),s(o,"C:\\DNXConsoleApp\\foo\\Program.ts"),s(o,"C:\\DNXConsoleApp\\Program.cs"),s(o,"C:\\other\\DNXConsoleApp\\foo\\Program.ts")}else{const o={base:"/DNXConsoleApp/foo",pattern:"*.cs"};t(o,"/DNXConsoleApp/foo/Program.cs"),s(o,"/DNXConsoleApp/foo/bar/Program.cs"),s(o,"/DNXConsoleApp/foo/Program.ts"),s(o,"/DNXConsoleApp/Program.cs"),s(o,"/other/DNXConsoleApp/foo/Program.ts")}}),test("relative pattern - single star with path",function(){if(i){const o={base:"C:\\DNXConsoleApp\\foo",pattern:"something/*.cs"};t(o,"C:\\DNXConsoleApp\\foo\\something\\Program.cs"),s(o,"C:\\DNXConsoleApp\\foo\\Program.cs")}else{const o={base:"/DNXConsoleApp/foo",pattern:"something/*.cs"};t(o,"/DNXConsoleApp/foo/something/Program.cs"),s(o,"/DNXConsoleApp/foo/Program.cs")}}),test("relative pattern - single star alone",function(){if(i){const o={base:"C:\\DNXConsoleApp\\foo\\something\\Program.cs",pattern:"*"};t(o,"C:\\DNXConsoleApp\\foo\\something\\Program.cs"),s(o,"C:\\DNXConsoleApp\\foo\\Program.cs")}else{const o={base:"/DNXConsoleApp/foo/something/Program.cs",pattern:"*"};t(o,"/DNXConsoleApp/foo/something/Program.cs"),s(o,"/DNXConsoleApp/foo/Program.cs")}}),test("relative pattern - ignores case on macOS/Windows",function(){i?t({base:"C:\\DNXConsoleApp\\foo",pattern:"something/*.cs"},"C:\\DNXConsoleApp\\foo\\something\\Program.cs".toLowerCase()):h?t({base:"/DNXConsoleApp/foo",pattern:"something/*.cs"},"/DNXConsoleApp/foo/something/Program.cs".toLowerCase()):j&&s({base:"/DNXConsoleApp/foo",pattern:"something/*.cs"},"/DNXConsoleApp/foo/something/Program.cs".toLowerCase())}),test("relative pattern - trailing slash / backslash (#162498)",function(){if(i){let o={base:"C:\\",pattern:"foo.cs"};t(o,"C:\\foo.cs"),o={base:"C:\\bar\\",pattern:"foo.cs"},t(o,"C:\\bar\\foo.cs")}else{let o={base:"/",pattern:"foo.cs"};t(o,"/foo.cs"),o={base:"/bar/",pattern:"foo.cs"},t(o,"/bar/foo.cs")}}),test('pattern with "base" does not explode - #36081',function(){a.ok(e.match({base:!0},"base"))}),test("relative pattern - #57475",function(){if(i){const o={base:"C:\\DNXConsoleApp\\foo",pattern:"styles/style.css"};t(o,"C:\\DNXConsoleApp\\foo\\styles\\style.css"),s(o,"C:\\DNXConsoleApp\\foo\\Program.cs")}else{const o={base:"/DNXConsoleApp/foo",pattern:"styles/style.css"};t(o,"/DNXConsoleApp/foo/styles/style.css"),s(o,"/DNXConsoleApp/foo/Program.cs")}}),test("URI match",()=>{t("scheme:/**/*.md",E.file("super/duper/long/some/file.md").with({scheme:"scheme"}).toString())}),test("expression fails when siblings use promises (https://github.com/microsoft/vscode/issues/146294)",async function(){const o=["test.html","test.txt","test.ts"],n=p=>Promise.resolve(o.indexOf(p)!==-1),r={"**/test.js":{when:"$(basename).js"},"**/*.js":{when:"$(basename).ts"}},l=e.parse(r);a.strictEqual("**/*.js",await l("test.js",void 0,n))}),test("patternsEquals",()=>{a.ok(e.patternsEquals(["a"],["a"])),a.ok(!e.patternsEquals(["a"],["b"])),a.ok(e.patternsEquals(["a","b","c"],["a","b","c"])),a.ok(!e.patternsEquals(["1","2"],["1","3"])),a.ok(e.patternsEquals([{base:"a",pattern:"*"},"b","c"],[{base:"a",pattern:"*"},"b","c"])),a.ok(e.patternsEquals(void 0,void 0)),a.ok(!e.patternsEquals(void 0,["b"])),a.ok(!e.patternsEquals(["a"],void 0))}),q()});
