{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/test/common/fuzzyScorer.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { compareItemsByFuzzyScore, FuzzyScore, FuzzyScore2, FuzzyScorerCache, IItemAccessor, IItemScore, pieceToQuery, prepareQuery, scoreFuzzy, scoreFuzzy2, scoreItemFuzzy } from '../../common/fuzzyScorer.js';\nimport { Schemas } from '../../common/network.js';\nimport { basename, dirname, posix, sep, win32 } from '../../common/path.js';\nimport { isWindows } from '../../common/platform.js';\nimport { URI } from '../../common/uri.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from './utils.js';\n\nclass ResourceAccessorClass implements IItemAccessor<URI> {\n\n\tgetItemLabel(resource: URI): string {\n\t\treturn basename(resource.fsPath);\n\t}\n\n\tgetItemDescription(resource: URI): string {\n\t\treturn dirname(resource.fsPath);\n\t}\n\n\tgetItemPath(resource: URI): string {\n\t\treturn resource.fsPath;\n\t}\n}\n\nconst ResourceAccessor = new ResourceAccessorClass();\n\nclass ResourceWithSlashAccessorClass implements IItemAccessor<URI> {\n\n\tgetItemLabel(resource: URI): string {\n\t\treturn basename(resource.fsPath);\n\t}\n\n\tgetItemDescription(resource: URI): string {\n\t\treturn posix.normalize(dirname(resource.path));\n\t}\n\n\tgetItemPath(resource: URI): string {\n\t\treturn posix.normalize(resource.path);\n\t}\n}\n\nconst ResourceWithSlashAccessor = new ResourceWithSlashAccessorClass();\n\nclass ResourceWithBackslashAccessorClass implements IItemAccessor<URI> {\n\n\tgetItemLabel(resource: URI): string {\n\t\treturn basename(resource.fsPath);\n\t}\n\n\tgetItemDescription(resource: URI): string {\n\t\treturn win32.normalize(dirname(resource.path));\n\t}\n\n\tgetItemPath(resource: URI): string {\n\t\treturn win32.normalize(resource.path);\n\t}\n}\n\nconst ResourceWithBackslashAccessor = new ResourceWithBackslashAccessorClass();\n\nclass NullAccessorClass implements IItemAccessor<URI> {\n\n\tgetItemLabel(resource: URI): string {\n\t\treturn undefined!;\n\t}\n\n\tgetItemDescription(resource: URI): string {\n\t\treturn undefined!;\n\t}\n\n\tgetItemPath(resource: URI): string {\n\t\treturn undefined!;\n\t}\n}\n\nfunction _doScore(target: string, query: string, allowNonContiguousMatches?: boolean): FuzzyScore {\n\tconst preparedQuery = prepareQuery(query);\n\n\treturn scoreFuzzy(target, preparedQuery.normalized, preparedQuery.normalizedLowercase, allowNonContiguousMatches ?? !preparedQuery.expectContiguousMatch);\n}\n\nfunction _doScore2(target: string, query: string, matchOffset: number = 0): FuzzyScore2 {\n\tconst preparedQuery = prepareQuery(query);\n\n\treturn scoreFuzzy2(target, preparedQuery, 0, matchOffset);\n}\n\nfunction scoreItem<T>(item: T, query: string, allowNonContiguousMatches: boolean, accessor: IItemAccessor<T>, cache: FuzzyScorerCache = Object.create(null)): IItemScore {\n\treturn scoreItemFuzzy(item, prepareQuery(query), allowNonContiguousMatches, accessor, cache);\n}\n\nfunction compareItemsByScore<T>(itemA: T, itemB: T, query: string, allowNonContiguousMatches: boolean, accessor: IItemAccessor<T>): number {\n\treturn compareItemsByFuzzyScore(itemA, itemB, prepareQuery(query), allowNonContiguousMatches, accessor, Object.create(null));\n}\n\nconst NullAccessor = new NullAccessorClass();\n\nsuite('Fuzzy Scorer', () => {\n\n\ttest('score (fuzzy)', function () {\n\t\tconst target = 'HelLo-World';\n\n\t\tconst scores: FuzzyScore[] = [];\n\t\tscores.push(_doScore(target, 'HelLo-World', true)); // direct case match\n\t\tscores.push(_doScore(target, 'hello-world', true)); // direct mix-case match\n\t\tscores.push(_doScore(target, 'HW', true)); // direct case prefix (multiple)\n\t\tscores.push(_doScore(target, 'hw', true)); // direct mix-case prefix (multiple)\n\t\tscores.push(_doScore(target, 'H', true)); // direct case prefix\n\t\tscores.push(_doScore(target, 'h', true)); // direct mix-case prefix\n\t\tscores.push(_doScore(target, 'W', true)); // direct case word prefix\n\t\tscores.push(_doScore(target, 'Ld', true)); // in-string case match (multiple)\n\t\tscores.push(_doScore(target, 'ld', true)); // in-string mix-case match (consecutive, avoids scattered hit)\n\t\tscores.push(_doScore(target, 'w', true)); // direct mix-case word prefix\n\t\tscores.push(_doScore(target, 'L', true)); // in-string case match\n\t\tscores.push(_doScore(target, 'l', true)); // in-string mix-case match\n\t\tscores.push(_doScore(target, '4', true)); // no match\n\n\t\t// Assert scoring order\n\t\tconst sortedScores = scores.concat().sort((a, b) => b[0] - a[0]);\n\t\tassert.deepStrictEqual(scores, sortedScores);\n\n\t\t// Assert scoring positions\n\t\t// let positions = scores[0][1];\n\t\t// assert.strictEqual(positions.length, 'HelLo-World'.length);\n\n\t\t// positions = scores[2][1];\n\t\t// assert.strictEqual(positions.length, 'HW'.length);\n\t\t// assert.strictEqual(positions[0], 0);\n\t\t// assert.strictEqual(positions[1], 6);\n\t});\n\n\ttest('score (non fuzzy)', function () {\n\t\tconst target = 'HelLo-World';\n\n\t\tassert.ok(_doScore(target, 'HelLo-World', false)[0] > 0);\n\t\tassert.strictEqual(_doScore(target, 'HelLo-World', false)[1].length, 'HelLo-World'.length);\n\n\t\tassert.ok(_doScore(target, 'hello-world', false)[0] > 0);\n\t\tassert.strictEqual(_doScore(target, 'HW', false)[0], 0);\n\t\tassert.ok(_doScore(target, 'h', false)[0] > 0);\n\t\tassert.ok(_doScore(target, 'ello', false)[0] > 0);\n\t\tassert.ok(_doScore(target, 'ld', false)[0] > 0);\n\t\tassert.strictEqual(_doScore(target, 'eo', false)[0], 0);\n\t});\n\n\ttest('scoreItem - matches are proper', function () {\n\t\tlet res = scoreItem(null, 'something', true, ResourceAccessor);\n\t\tassert.ok(!res.score);\n\n\t\tconst resource = URI.file('/xyz/some/path/someFile123.txt');\n\n\t\tres = scoreItem(resource, 'something', true, NullAccessor);\n\t\tassert.ok(!res.score);\n\n\t\t// Path Identity\n\t\tconst identityRes = scoreItem(resource, ResourceAccessor.getItemPath(resource), true, ResourceAccessor);\n\t\tassert.ok(identityRes.score);\n\t\tassert.strictEqual(identityRes.descriptionMatch!.length, 1);\n\t\tassert.strictEqual(identityRes.labelMatch!.length, 1);\n\t\tassert.strictEqual(identityRes.descriptionMatch![0].start, 0);\n\t\tassert.strictEqual(identityRes.descriptionMatch![0].end, ResourceAccessor.getItemDescription(resource).length);\n\t\tassert.strictEqual(identityRes.labelMatch![0].start, 0);\n\t\tassert.strictEqual(identityRes.labelMatch![0].end, ResourceAccessor.getItemLabel(resource).length);\n\n\t\t// Basename Prefix\n\t\tconst basenamePrefixRes = scoreItem(resource, 'som', true, ResourceAccessor);\n\t\tassert.ok(basenamePrefixRes.score);\n\t\tassert.ok(!basenamePrefixRes.descriptionMatch);\n\t\tassert.strictEqual(basenamePrefixRes.labelMatch!.length, 1);\n\t\tassert.strictEqual(basenamePrefixRes.labelMatch![0].start, 0);\n\t\tassert.strictEqual(basenamePrefixRes.labelMatch![0].end, 'som'.length);\n\n\t\t// Basename Camelcase\n\t\tconst basenameCamelcaseRes = scoreItem(resource, 'sF', true, ResourceAccessor);\n\t\tassert.ok(basenameCamelcaseRes.score);\n\t\tassert.ok(!basenameCamelcaseRes.descriptionMatch);\n\t\tassert.strictEqual(basenameCamelcaseRes.labelMatch!.length, 2);\n\t\tassert.strictEqual(basenameCamelcaseRes.labelMatch![0].start, 0);\n\t\tassert.strictEqual(basenameCamelcaseRes.labelMatch![0].end, 1);\n\t\tassert.strictEqual(basenameCamelcaseRes.labelMatch![1].start, 4);\n\t\tassert.strictEqual(basenameCamelcaseRes.labelMatch![1].end, 5);\n\n\t\t// Basename Match\n\t\tconst basenameRes = scoreItem(resource, 'of', true, ResourceAccessor);\n\t\tassert.ok(basenameRes.score);\n\t\tassert.ok(!basenameRes.descriptionMatch);\n\t\tassert.strictEqual(basenameRes.labelMatch!.length, 2);\n\t\tassert.strictEqual(basenameRes.labelMatch![0].start, 1);\n\t\tassert.strictEqual(basenameRes.labelMatch![0].end, 2);\n\t\tassert.strictEqual(basenameRes.labelMatch![1].start, 4);\n\t\tassert.strictEqual(basenameRes.labelMatch![1].end, 5);\n\n\t\t// Path Match\n\t\tconst pathRes = scoreItem(resource, 'xyz123', true, ResourceAccessor);\n\t\tassert.ok(pathRes.score);\n\t\tassert.ok(pathRes.descriptionMatch);\n\t\tassert.ok(pathRes.labelMatch);\n\t\tassert.strictEqual(pathRes.labelMatch.length, 1);\n\t\tassert.strictEqual(pathRes.labelMatch[0].start, 8);\n\t\tassert.strictEqual(pathRes.labelMatch[0].end, 11);\n\t\tassert.strictEqual(pathRes.descriptionMatch.length, 1);\n\t\tassert.strictEqual(pathRes.descriptionMatch[0].start, 1);\n\t\tassert.strictEqual(pathRes.descriptionMatch[0].end, 4);\n\n\t\t// No Match\n\t\tconst noRes = scoreItem(resource, '987', true, ResourceAccessor);\n\t\tassert.ok(!noRes.score);\n\t\tassert.ok(!noRes.labelMatch);\n\t\tassert.ok(!noRes.descriptionMatch);\n\n\t\t// No Exact Match\n\t\tconst noExactRes = scoreItem(resource, '\"sF\"', true, ResourceAccessor);\n\t\tassert.ok(!noExactRes.score);\n\t\tassert.ok(!noExactRes.labelMatch);\n\t\tassert.ok(!noExactRes.descriptionMatch);\n\t\tassert.strictEqual(noRes.score, noExactRes.score);\n\n\t\t// Verify Scores\n\t\tassert.ok(identityRes.score > basenamePrefixRes.score);\n\t\tassert.ok(basenamePrefixRes.score > basenameRes.score);\n\t\tassert.ok(basenameRes.score > pathRes.score);\n\t\tassert.ok(pathRes.score > noRes.score);\n\t});\n\n\ttest('scoreItem - multiple', function () {\n\t\tconst resource = URI.file('/xyz/some/path/someFile123.txt');\n\n\t\tconst res1 = scoreItem(resource, 'xyz some', true, ResourceAccessor);\n\t\tassert.ok(res1.score);\n\t\tassert.strictEqual(res1.labelMatch?.length, 1);\n\t\tassert.strictEqual(res1.labelMatch[0].start, 0);\n\t\tassert.strictEqual(res1.labelMatch[0].end, 4);\n\t\tassert.strictEqual(res1.descriptionMatch?.length, 1);\n\t\tassert.strictEqual(res1.descriptionMatch[0].start, 1);\n\t\tassert.strictEqual(res1.descriptionMatch[0].end, 4);\n\n\t\tconst res2 = scoreItem(resource, 'some xyz', true, ResourceAccessor);\n\t\tassert.ok(res2.score);\n\t\tassert.strictEqual(res1.score, res2.score);\n\t\tassert.strictEqual(res2.labelMatch?.length, 1);\n\t\tassert.strictEqual(res2.labelMatch[0].start, 0);\n\t\tassert.strictEqual(res2.labelMatch[0].end, 4);\n\t\tassert.strictEqual(res2.descriptionMatch?.length, 1);\n\t\tassert.strictEqual(res2.descriptionMatch[0].start, 1);\n\t\tassert.strictEqual(res2.descriptionMatch[0].end, 4);\n\n\t\tconst res3 = scoreItem(resource, 'some xyz file file123', true, ResourceAccessor);\n\t\tassert.ok(res3.score);\n\t\tassert.ok(res3.score > res2.score);\n\t\tassert.strictEqual(res3.labelMatch?.length, 1);\n\t\tassert.strictEqual(res3.labelMatch[0].start, 0);\n\t\tassert.strictEqual(res3.labelMatch[0].end, 11);\n\t\tassert.strictEqual(res3.descriptionMatch?.length, 1);\n\t\tassert.strictEqual(res3.descriptionMatch[0].start, 1);\n\t\tassert.strictEqual(res3.descriptionMatch[0].end, 4);\n\n\t\tconst res4 = scoreItem(resource, 'path z y', true, ResourceAccessor);\n\t\tassert.ok(res4.score);\n\t\tassert.ok(res4.score < res2.score);\n\t\tassert.strictEqual(res4.labelMatch?.length, 0);\n\t\tassert.strictEqual(res4.descriptionMatch?.length, 2);\n\t\tassert.strictEqual(res4.descriptionMatch[0].start, 2);\n\t\tassert.strictEqual(res4.descriptionMatch[0].end, 4);\n\t\tassert.strictEqual(res4.descriptionMatch[1].start, 10);\n\t\tassert.strictEqual(res4.descriptionMatch[1].end, 14);\n\t});\n\n\ttest('scoreItem - multiple with cache yields different results', function () {\n\t\tconst resource = URI.file('/xyz/some/path/someFile123.txt');\n\t\tconst cache = {};\n\t\tconst res1 = scoreItem(resource, 'xyz sm', true, ResourceAccessor, cache);\n\t\tassert.ok(res1.score);\n\n\t\t// from the cache's perspective this should be a totally different query\n\t\tconst res2 = scoreItem(resource, 'xyz \"sm\"', true, ResourceAccessor, cache);\n\t\tassert.ok(!res2.score);\n\t});\n\n\ttest('scoreItem - invalid input', function () {\n\n\t\tlet res = scoreItem(null, null!, true, ResourceAccessor);\n\t\tassert.strictEqual(res.score, 0);\n\n\t\tres = scoreItem(null, 'null', true, ResourceAccessor);\n\t\tassert.strictEqual(res.score, 0);\n\t});\n\n\ttest('scoreItem - optimize for file paths', function () {\n\t\tconst resource = URI.file('/xyz/others/spath/some/xsp/file123.txt');\n\n\t\t// xsp is more relevant to the end of the file path even though it matches\n\t\t// fuzzy also in the beginning. we verify the more relevant match at the\n\t\t// end gets returned.\n\t\tconst pathRes = scoreItem(resource, 'xspfile123', true, ResourceAccessor);\n\t\tassert.ok(pathRes.score);\n\t\tassert.ok(pathRes.descriptionMatch);\n\t\tassert.ok(pathRes.labelMatch);\n\t\tassert.strictEqual(pathRes.labelMatch.length, 1);\n\t\tassert.strictEqual(pathRes.labelMatch[0].start, 0);\n\t\tassert.strictEqual(pathRes.labelMatch[0].end, 7);\n\t\tassert.strictEqual(pathRes.descriptionMatch.length, 1);\n\t\tassert.strictEqual(pathRes.descriptionMatch[0].start, 23);\n\t\tassert.strictEqual(pathRes.descriptionMatch[0].end, 26);\n\t});\n\n\ttest('scoreItem - avoid match scattering (bug #36119)', function () {\n\t\tconst resource = URI.file('projects/ui/cula/ats/target.mk');\n\n\t\tconst pathRes = scoreItem(resource, 'tcltarget.mk', true, ResourceAccessor);\n\t\tassert.ok(pathRes.score);\n\t\tassert.ok(pathRes.descriptionMatch);\n\t\tassert.ok(pathRes.labelMatch);\n\t\tassert.strictEqual(pathRes.labelMatch.length, 1);\n\t\tassert.strictEqual(pathRes.labelMatch[0].start, 0);\n\t\tassert.strictEqual(pathRes.labelMatch[0].end, 9);\n\t});\n\n\ttest('scoreItem - prefers more compact matches', function () {\n\t\tconst resource = URI.file('/1a111d1/11a1d1/something.txt');\n\n\t\t// expect \"ad\" to be matched towards the end of the file because the\n\t\t// match is more compact\n\t\tconst res = scoreItem(resource, 'ad', true, ResourceAccessor);\n\t\tassert.ok(res.score);\n\t\tassert.ok(res.descriptionMatch);\n\t\tassert.ok(!res.labelMatch!.length);\n\t\tassert.strictEqual(res.descriptionMatch.length, 2);\n\t\tassert.strictEqual(res.descriptionMatch[0].start, 11);\n\t\tassert.strictEqual(res.descriptionMatch[0].end, 12);\n\t\tassert.strictEqual(res.descriptionMatch[1].start, 13);\n\t\tassert.strictEqual(res.descriptionMatch[1].end, 14);\n\t});\n\n\ttest('scoreItem - proper target offset', function () {\n\t\tconst resource = URI.file('etem');\n\n\t\tconst res = scoreItem(resource, 'teem', true, ResourceAccessor);\n\t\tassert.ok(!res.score);\n\t});\n\n\ttest('scoreItem - proper target offset #2', function () {\n\t\tconst resource = URI.file('ede');\n\n\t\tconst res = scoreItem(resource, 'de', true, ResourceAccessor);\n\n\t\tassert.strictEqual(res.labelMatch!.length, 1);\n\t\tassert.strictEqual(res.labelMatch![0].start, 1);\n\t\tassert.strictEqual(res.labelMatch![0].end, 3);\n\t});\n\n\ttest('scoreItem - proper target offset #3', function () {\n\t\tconst resource = URI.file('/src/vs/editor/browser/viewParts/lineNumbers/flipped-cursor-2x.svg');\n\n\t\tconst res = scoreItem(resource, 'debug', true, ResourceAccessor);\n\n\t\tassert.strictEqual(res.descriptionMatch!.length, 3);\n\t\tassert.strictEqual(res.descriptionMatch![0].start, 9);\n\t\tassert.strictEqual(res.descriptionMatch![0].end, 10);\n\t\tassert.strictEqual(res.descriptionMatch![1].start, 36);\n\t\tassert.strictEqual(res.descriptionMatch![1].end, 37);\n\t\tassert.strictEqual(res.descriptionMatch![2].start, 40);\n\t\tassert.strictEqual(res.descriptionMatch![2].end, 41);\n\n\t\tassert.strictEqual(res.labelMatch!.length, 2);\n\t\tassert.strictEqual(res.labelMatch![0].start, 9);\n\t\tassert.strictEqual(res.labelMatch![0].end, 10);\n\t\tassert.strictEqual(res.labelMatch![1].start, 20);\n\t\tassert.strictEqual(res.labelMatch![1].end, 21);\n\t});\n\n\ttest('scoreItem - no match unless query contained in sequence', function () {\n\t\tconst resource = URI.file('abcde');\n\n\t\tconst res = scoreItem(resource, 'edcda', true, ResourceAccessor);\n\t\tassert.ok(!res.score);\n\t});\n\n\ttest('scoreItem - match if using slash or backslash (local, remote resource)', function () {\n\t\tconst localResource = URI.file('abcde/super/duper');\n\t\tconst remoteResource = URI.from({ scheme: Schemas.vscodeRemote, path: 'abcde/super/duper' });\n\n\t\tfor (const resource of [localResource, remoteResource]) {\n\t\t\tlet res = scoreItem(resource, 'abcde\\\\super\\\\duper', true, ResourceAccessor);\n\t\t\tassert.ok(res.score);\n\n\t\t\tres = scoreItem(resource, 'abcde\\\\super\\\\duper', true, ResourceWithSlashAccessor);\n\t\t\tassert.ok(res.score);\n\n\t\t\tres = scoreItem(resource, 'abcde\\\\super\\\\duper', true, ResourceWithBackslashAccessor);\n\t\t\tassert.ok(res.score);\n\n\t\t\tres = scoreItem(resource, 'abcde/super/duper', true, ResourceAccessor);\n\t\t\tassert.ok(res.score);\n\n\t\t\tres = scoreItem(resource, 'abcde/super/duper', true, ResourceWithSlashAccessor);\n\t\t\tassert.ok(res.score);\n\n\t\t\tres = scoreItem(resource, 'abcde/super/duper', true, ResourceWithBackslashAccessor);\n\t\t\tassert.ok(res.score);\n\t\t}\n\t});\n\n\ttest('scoreItem - ensure upper case bonus only applies on non-consecutive matches (bug #134723)', function () {\n\t\tconst resourceWithUpper = URI.file('ASDFasdfasdf');\n\t\tconst resourceAllLower = URI.file('asdfasdfasdf');\n\n\t\tassert.ok(scoreItem(resourceAllLower, 'asdf', true, ResourceAccessor).score > scoreItem(resourceWithUpper, 'asdf', true, ResourceAccessor).score);\n\t});\n\n\ttest('compareItemsByScore - identity', function () {\n\t\tconst resourceA = URI.file('/some/path/fileA.txt');\n\t\tconst resourceB = URI.file('/some/path/other/fileB.txt');\n\t\tconst resourceC = URI.file('/unrelated/some/path/other/fileC.txt');\n\n\t\t// Full resource A path\n\t\tlet query = ResourceAccessor.getItemPath(resourceA);\n\n\t\tlet res = [resourceA, resourceB, resourceC].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceA);\n\t\tassert.strictEqual(res[1], resourceB);\n\t\tassert.strictEqual(res[2], resourceC);\n\n\t\tres = [resourceC, resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceA);\n\t\tassert.strictEqual(res[1], resourceB);\n\t\tassert.strictEqual(res[2], resourceC);\n\n\t\t// Full resource B path\n\t\tquery = ResourceAccessor.getItemPath(resourceB);\n\n\t\tres = [resourceA, resourceB, resourceC].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\t\tassert.strictEqual(res[1], resourceA);\n\t\tassert.strictEqual(res[2], resourceC);\n\n\t\tres = [resourceC, resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\t\tassert.strictEqual(res[1], resourceA);\n\t\tassert.strictEqual(res[2], resourceC);\n\t});\n\n\ttest('compareFilesByScore - basename prefix', function () {\n\t\tconst resourceA = URI.file('/some/path/fileA.txt');\n\t\tconst resourceB = URI.file('/some/path/other/fileB.txt');\n\t\tconst resourceC = URI.file('/unrelated/some/path/other/fileC.txt');\n\n\t\t// Full resource A basename\n\t\tlet query = ResourceAccessor.getItemLabel(resourceA);\n\n\t\tlet res = [resourceA, resourceB, resourceC].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceA);\n\t\tassert.strictEqual(res[1], resourceB);\n\t\tassert.strictEqual(res[2], resourceC);\n\n\t\tres = [resourceC, resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceA);\n\t\tassert.strictEqual(res[1], resourceB);\n\t\tassert.strictEqual(res[2], resourceC);\n\n\t\t// Full resource B basename\n\t\tquery = ResourceAccessor.getItemLabel(resourceB);\n\n\t\tres = [resourceA, resourceB, resourceC].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\t\tassert.strictEqual(res[1], resourceA);\n\t\tassert.strictEqual(res[2], resourceC);\n\n\t\tres = [resourceC, resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\t\tassert.strictEqual(res[1], resourceA);\n\t\tassert.strictEqual(res[2], resourceC);\n\t});\n\n\ttest('compareFilesByScore - basename camelcase', function () {\n\t\tconst resourceA = URI.file('/some/path/fileA.txt');\n\t\tconst resourceB = URI.file('/some/path/other/fileB.txt');\n\t\tconst resourceC = URI.file('/unrelated/some/path/other/fileC.txt');\n\n\t\t// resource A camelcase\n\t\tlet query = 'fA';\n\n\t\tlet res = [resourceA, resourceB, resourceC].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceA);\n\t\tassert.strictEqual(res[1], resourceB);\n\t\tassert.strictEqual(res[2], resourceC);\n\n\t\tres = [resourceC, resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceA);\n\t\tassert.strictEqual(res[1], resourceB);\n\t\tassert.strictEqual(res[2], resourceC);\n\n\t\t// resource B camelcase\n\t\tquery = 'fB';\n\n\t\tres = [resourceA, resourceB, resourceC].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\t\tassert.strictEqual(res[1], resourceA);\n\t\tassert.strictEqual(res[2], resourceC);\n\n\t\tres = [resourceC, resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\t\tassert.strictEqual(res[1], resourceA);\n\t\tassert.strictEqual(res[2], resourceC);\n\t});\n\n\ttest('compareFilesByScore - basename scores', function () {\n\t\tconst resourceA = URI.file('/some/path/fileA.txt');\n\t\tconst resourceB = URI.file('/some/path/other/fileB.txt');\n\t\tconst resourceC = URI.file('/unrelated/some/path/other/fileC.txt');\n\n\t\t// Resource A part of basename\n\t\tlet query = 'fileA';\n\n\t\tlet res = [resourceA, resourceB, resourceC].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceA);\n\t\tassert.strictEqual(res[1], resourceB);\n\t\tassert.strictEqual(res[2], resourceC);\n\n\t\tres = [resourceC, resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceA);\n\t\tassert.strictEqual(res[1], resourceB);\n\t\tassert.strictEqual(res[2], resourceC);\n\n\t\t// Resource B part of basename\n\t\tquery = 'fileB';\n\n\t\tres = [resourceA, resourceB, resourceC].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\t\tassert.strictEqual(res[1], resourceA);\n\t\tassert.strictEqual(res[2], resourceC);\n\n\t\tres = [resourceC, resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\t\tassert.strictEqual(res[1], resourceA);\n\t\tassert.strictEqual(res[2], resourceC);\n\t});\n\n\ttest('compareFilesByScore - path scores', function () {\n\t\tconst resourceA = URI.file('/some/path/fileA.txt');\n\t\tconst resourceB = URI.file('/some/path/other/fileB.txt');\n\t\tconst resourceC = URI.file('/unrelated/some/path/other/fileC.txt');\n\n\t\t// Resource A part of path\n\t\tlet query = 'pathfileA';\n\n\t\tlet res = [resourceA, resourceB, resourceC].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceA);\n\t\tassert.strictEqual(res[1], resourceB);\n\t\tassert.strictEqual(res[2], resourceC);\n\n\t\tres = [resourceC, resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceA);\n\t\tassert.strictEqual(res[1], resourceB);\n\t\tassert.strictEqual(res[2], resourceC);\n\n\t\t// Resource B part of path\n\t\tquery = 'pathfileB';\n\n\t\tres = [resourceA, resourceB, resourceC].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\t\tassert.strictEqual(res[1], resourceA);\n\t\tassert.strictEqual(res[2], resourceC);\n\n\t\tres = [resourceC, resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\t\tassert.strictEqual(res[1], resourceA);\n\t\tassert.strictEqual(res[2], resourceC);\n\t});\n\n\ttest('compareFilesByScore - prefer shorter basenames', function () {\n\t\tconst resourceA = URI.file('/some/path/fileA.txt');\n\t\tconst resourceB = URI.file('/some/path/other/fileBLonger.txt');\n\t\tconst resourceC = URI.file('/unrelated/the/path/other/fileC.txt');\n\n\t\t// Resource A part of path\n\t\tconst query = 'somepath';\n\n\t\tlet res = [resourceA, resourceB, resourceC].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceA);\n\t\tassert.strictEqual(res[1], resourceB);\n\t\tassert.strictEqual(res[2], resourceC);\n\n\t\tres = [resourceC, resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceA);\n\t\tassert.strictEqual(res[1], resourceB);\n\t\tassert.strictEqual(res[2], resourceC);\n\t});\n\n\ttest('compareFilesByScore - prefer shorter basenames (match on basename)', function () {\n\t\tconst resourceA = URI.file('/some/path/fileA.txt');\n\t\tconst resourceB = URI.file('/some/path/other/fileBLonger.txt');\n\t\tconst resourceC = URI.file('/unrelated/the/path/other/fileC.txt');\n\n\t\t// Resource A part of path\n\t\tconst query = 'file';\n\n\t\tlet res = [resourceA, resourceB, resourceC].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceA);\n\t\tassert.strictEqual(res[1], resourceC);\n\t\tassert.strictEqual(res[2], resourceB);\n\n\t\tres = [resourceC, resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceA);\n\t\tassert.strictEqual(res[1], resourceC);\n\t\tassert.strictEqual(res[2], resourceB);\n\t});\n\n\ttest('compareFilesByScore - prefer shorter paths', function () {\n\t\tconst resourceA = URI.file('/some/path/fileA.txt');\n\t\tconst resourceB = URI.file('/some/path/other/fileB.txt');\n\t\tconst resourceC = URI.file('/unrelated/some/path/other/fileC.txt');\n\n\t\t// Resource A part of path\n\t\tconst query = 'somepath';\n\n\t\tlet res = [resourceA, resourceB, resourceC].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceA);\n\t\tassert.strictEqual(res[1], resourceB);\n\t\tassert.strictEqual(res[2], resourceC);\n\n\t\tres = [resourceC, resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceA);\n\t\tassert.strictEqual(res[1], resourceB);\n\t\tassert.strictEqual(res[2], resourceC);\n\t});\n\n\ttest('compareFilesByScore - prefer shorter paths (bug #17443)', function () {\n\t\tconst resourceA = URI.file('config/test/t1.js');\n\t\tconst resourceB = URI.file('config/test.js');\n\t\tconst resourceC = URI.file('config/test/t2.js');\n\n\t\tconst query = 'co/te';\n\n\t\tconst res = [resourceA, resourceB, resourceC].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\t\tassert.strictEqual(res[1], resourceA);\n\t\tassert.strictEqual(res[2], resourceC);\n\t});\n\n\ttest('compareFilesByScore - prefer matches in label over description if scores are otherwise equal', function () {\n\t\tconst resourceA = URI.file('parts/quick/arrow-left-dark.svg');\n\t\tconst resourceB = URI.file('parts/quickopen/quickopen.ts');\n\n\t\tconst query = 'partsquick';\n\n\t\tconst res = [resourceA, resourceB].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\t\tassert.strictEqual(res[1], resourceA);\n\t});\n\n\ttest('compareFilesByScore - prefer camel case matches', function () {\n\t\tconst resourceA = URI.file('config/test/NullPointerException.java');\n\t\tconst resourceB = URI.file('config/test/nopointerexception.java');\n\n\t\tfor (const query of ['npe', 'NPE']) {\n\t\t\tlet res = [resourceA, resourceB].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\t\tassert.strictEqual(res[0], resourceA);\n\t\t\tassert.strictEqual(res[1], resourceB);\n\n\t\t\tres = [resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\t\tassert.strictEqual(res[0], resourceA);\n\t\t\tassert.strictEqual(res[1], resourceB);\n\t\t}\n\t});\n\n\ttest('compareFilesByScore - prefer more compact camel case matches', function () {\n\t\tconst resourceA = URI.file('config/test/openthisAnythingHandler.js');\n\t\tconst resourceB = URI.file('config/test/openthisisnotsorelevantforthequeryAnyHand.js');\n\n\t\tconst query = 'AH';\n\n\t\tlet res = [resourceA, resourceB].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\t\tassert.strictEqual(res[1], resourceA);\n\n\t\tres = [resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\t\tassert.strictEqual(res[1], resourceA);\n\t});\n\n\ttest('compareFilesByScore - prefer more compact matches (label)', function () {\n\t\tconst resourceA = URI.file('config/test/examasdaple.js');\n\t\tconst resourceB = URI.file('config/test/exampleasdaasd.ts');\n\n\t\tconst query = 'xp';\n\n\t\tlet res = [resourceA, resourceB].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\t\tassert.strictEqual(res[1], resourceA);\n\n\t\tres = [resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\t\tassert.strictEqual(res[1], resourceA);\n\t});\n\n\ttest('compareFilesByScore - prefer more compact matches (path)', function () {\n\t\tconst resourceA = URI.file('config/test/examasdaple/file.js');\n\t\tconst resourceB = URI.file('config/test/exampleasdaasd/file.ts');\n\n\t\tconst query = 'xp';\n\n\t\tlet res = [resourceA, resourceB].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\t\tassert.strictEqual(res[1], resourceA);\n\n\t\tres = [resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\t\tassert.strictEqual(res[1], resourceA);\n\t});\n\n\ttest('compareFilesByScore - prefer more compact matches (label and path)', function () {\n\t\tconst resourceA = URI.file('config/example/thisfile.ts');\n\t\tconst resourceB = URI.file('config/24234243244/example/file.js');\n\n\t\tconst query = 'exfile';\n\n\t\tlet res = [resourceA, resourceB].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\t\tassert.strictEqual(res[1], resourceA);\n\n\t\tres = [resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\t\tassert.strictEqual(res[1], resourceA);\n\t});\n\n\ttest('compareFilesByScore - avoid match scattering (bug #34210)', function () {\n\t\tconst resourceA = URI.file('node_modules1/bundle/lib/model/modules/ot1/index.js');\n\t\tconst resourceB = URI.file('node_modules1/bundle/lib/model/modules/un1/index.js');\n\t\tconst resourceC = URI.file('node_modules1/bundle/lib/model/modules/modu1/index.js');\n\t\tconst resourceD = URI.file('node_modules1/bundle/lib/model/modules/oddl1/index.js');\n\n\t\tlet query = isWindows ? 'modu1\\\\index.js' : 'modu1/index.js';\n\n\t\tlet res = [resourceA, resourceB, resourceC, resourceD].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceC);\n\n\t\tres = [resourceC, resourceB, resourceA, resourceD].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceC);\n\n\t\tquery = isWindows ? 'un1\\\\index.js' : 'un1/index.js';\n\n\t\tres = [resourceA, resourceB, resourceC, resourceD].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\n\t\tres = [resourceC, resourceB, resourceA, resourceD].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\t});\n\n\ttest('compareFilesByScore - avoid match scattering (bug #21019 1.)', function () {\n\t\tconst resourceA = URI.file('app/containers/Services/NetworkData/ServiceDetails/ServiceLoad/index.js');\n\t\tconst resourceB = URI.file('app/containers/Services/NetworkData/ServiceDetails/ServiceDistribution/index.js');\n\t\tconst resourceC = URI.file('app/containers/Services/NetworkData/ServiceDetailTabs/ServiceTabs/StatVideo/index.js');\n\n\t\tconst query = 'StatVideoindex';\n\n\t\tlet res = [resourceA, resourceB, resourceC].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceC);\n\n\t\tres = [resourceC, resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceC);\n\t});\n\n\ttest('compareFilesByScore - avoid match scattering (bug #21019 2.)', function () {\n\t\tconst resourceA = URI.file('src/build-helper/store/redux.ts');\n\t\tconst resourceB = URI.file('src/repository/store/redux.ts');\n\n\t\tconst query = 'reproreduxts';\n\n\t\tlet res = [resourceA, resourceB].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\n\t\tres = [resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\t});\n\n\ttest('compareFilesByScore - avoid match scattering (bug #26649)', function () {\n\t\tconst resourceA = URI.file('photobook/src/components/AddPagesButton/index.js');\n\t\tconst resourceB = URI.file('photobook/src/components/ApprovalPageHeader/index.js');\n\t\tconst resourceC = URI.file('photobook/src/canvasComponents/BookPage/index.js');\n\n\t\tconst query = 'bookpageIndex';\n\n\t\tlet res = [resourceA, resourceB, resourceC].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceC);\n\n\t\tres = [resourceC, resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceC);\n\t});\n\n\ttest('compareFilesByScore - avoid match scattering (bug #33247)', function () {\n\t\tconst resourceA = URI.file('ui/src/utils/constants.js');\n\t\tconst resourceB = URI.file('ui/src/ui/Icons/index.js');\n\n\t\tconst query = isWindows ? 'ui\\\\icons' : 'ui/icons';\n\n\t\tlet res = [resourceA, resourceB].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\n\t\tres = [resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\t});\n\n\ttest('compareFilesByScore - avoid match scattering (bug #33247 comment)', function () {\n\t\tconst resourceA = URI.file('ui/src/components/IDInput/index.js');\n\t\tconst resourceB = URI.file('ui/src/ui/Input/index.js');\n\n\t\tconst query = isWindows ? 'ui\\\\input\\\\index' : 'ui/input/index';\n\n\t\tlet res = [resourceA, resourceB].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\n\t\tres = [resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\t});\n\n\ttest('compareFilesByScore - avoid match scattering (bug #36166)', function () {\n\t\tconst resourceA = URI.file('django/contrib/sites/locale/ga/LC_MESSAGES/django.mo');\n\t\tconst resourceB = URI.file('django/core/signals.py');\n\n\t\tconst query = 'djancosig';\n\n\t\tlet res = [resourceA, resourceB].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\n\t\tres = [resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\t});\n\n\ttest('compareFilesByScore - avoid match scattering (bug #32918)', function () {\n\t\tconst resourceA = URI.file('adsys/protected/config.php');\n\t\tconst resourceB = URI.file('adsys/protected/framework/smarty/sysplugins/smarty_internal_config.php');\n\t\tconst resourceC = URI.file('duowanVideo/wap/protected/config.php');\n\n\t\tconst query = 'protectedconfig.php';\n\n\t\tlet res = [resourceA, resourceB, resourceC].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceA);\n\t\tassert.strictEqual(res[1], resourceC);\n\t\tassert.strictEqual(res[2], resourceB);\n\n\t\tres = [resourceC, resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceA);\n\t\tassert.strictEqual(res[1], resourceC);\n\t\tassert.strictEqual(res[2], resourceB);\n\t});\n\n\ttest('compareFilesByScore - avoid match scattering (bug #14879)', function () {\n\t\tconst resourceA = URI.file('pkg/search/gradient/testdata/constraint_attrMatchString.yml');\n\t\tconst resourceB = URI.file('cmd/gradient/main.go');\n\n\t\tconst query = 'gradientmain';\n\n\t\tlet res = [resourceA, resourceB].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\n\t\tres = [resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\t});\n\n\ttest('compareFilesByScore - avoid match scattering (bug #14727 1)', function () {\n\t\tconst resourceA = URI.file('alpha-beta-cappa.txt');\n\t\tconst resourceB = URI.file('abc.txt');\n\n\t\tconst query = 'abc';\n\n\t\tlet res = [resourceA, resourceB].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\n\t\tres = [resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\t});\n\n\ttest('compareFilesByScore - avoid match scattering (bug #14727 2)', function () {\n\t\tconst resourceA = URI.file('xerxes-yak-zubba/index.js');\n\t\tconst resourceB = URI.file('xyz/index.js');\n\n\t\tconst query = 'xyz';\n\n\t\tlet res = [resourceA, resourceB].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\n\t\tres = [resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\t});\n\n\ttest('compareFilesByScore - avoid match scattering (bug #18381)', function () {\n\t\tconst resourceA = URI.file('AssymblyInfo.cs');\n\t\tconst resourceB = URI.file('IAsynchronousTask.java');\n\n\t\tconst query = 'async';\n\n\t\tlet res = [resourceA, resourceB].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\n\t\tres = [resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\t});\n\n\ttest('compareFilesByScore - avoid match scattering (bug #35572)', function () {\n\t\tconst resourceA = URI.file('static/app/source/angluar/-admin/-organization/-settings/layout/layout.js');\n\t\tconst resourceB = URI.file('static/app/source/angular/-admin/-project/-settings/_settings/settings.js');\n\n\t\tconst query = 'partisettings';\n\n\t\tlet res = [resourceA, resourceB].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\n\t\tres = [resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\t});\n\n\ttest('compareFilesByScore - avoid match scattering (bug #36810)', function () {\n\t\tconst resourceA = URI.file('Trilby.TrilbyTV.Web.Portal/Views/Systems/Index.cshtml');\n\t\tconst resourceB = URI.file('Trilby.TrilbyTV.Web.Portal/Areas/Admins/Views/Tips/Index.cshtml');\n\n\t\tconst query = 'tipsindex.cshtml';\n\n\t\tlet res = [resourceA, resourceB].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\n\t\tres = [resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\t});\n\n\ttest('compareFilesByScore - prefer shorter hit (bug #20546)', function () {\n\t\tconst resourceA = URI.file('editor/core/components/tests/list-view-spec.js');\n\t\tconst resourceB = URI.file('editor/core/components/list-view.js');\n\n\t\tconst query = 'listview';\n\n\t\tlet res = [resourceA, resourceB].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\n\t\tres = [resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\t});\n\n\ttest('compareFilesByScore - avoid match scattering (bug #12095)', function () {\n\t\tconst resourceA = URI.file('src/vs/workbench/contrib/files/common/explorerViewModel.ts');\n\t\tconst resourceB = URI.file('src/vs/workbench/contrib/files/browser/views/explorerView.ts');\n\t\tconst resourceC = URI.file('src/vs/workbench/contrib/files/browser/views/explorerViewer.ts');\n\n\t\tconst query = 'filesexplorerview.ts';\n\n\t\tlet res = [resourceA, resourceB, resourceC].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\n\t\tres = [resourceA, resourceC, resourceB].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\t});\n\n\ttest('compareFilesByScore - prefer case match (bug #96122)', function () {\n\t\tconst resourceA = URI.file('lists.php');\n\t\tconst resourceB = URI.file('lib/Lists.php');\n\n\t\tconst query = 'Lists.php';\n\n\t\tlet res = [resourceA, resourceB].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\n\t\tres = [resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\t});\n\n\ttest('compareFilesByScore - prefer shorter match (bug #103052) - foo bar', function () {\n\t\tconst resourceA = URI.file('app/emails/foo.bar.js');\n\t\tconst resourceB = URI.file('app/emails/other-footer.other-bar.js');\n\n\t\tfor (const query of ['foo bar', 'foobar']) {\n\t\t\tlet res = [resourceA, resourceB].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\t\tassert.strictEqual(res[0], resourceA);\n\t\t\tassert.strictEqual(res[1], resourceB);\n\n\t\t\tres = [resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\t\tassert.strictEqual(res[0], resourceA);\n\t\t\tassert.strictEqual(res[1], resourceB);\n\t\t}\n\t});\n\n\ttest('compareFilesByScore - prefer shorter match (bug #103052) - payment model', function () {\n\t\tconst resourceA = URI.file('app/components/payment/payment.model.js');\n\t\tconst resourceB = URI.file('app/components/online-payments-history/online-payments-history.model.js');\n\n\t\tfor (const query of ['payment model', 'paymentmodel']) {\n\t\t\tlet res = [resourceA, resourceB].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\t\tassert.strictEqual(res[0], resourceA);\n\t\t\tassert.strictEqual(res[1], resourceB);\n\n\t\t\tres = [resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\t\tassert.strictEqual(res[0], resourceA);\n\t\t\tassert.strictEqual(res[1], resourceB);\n\t\t}\n\t});\n\n\ttest('compareFilesByScore - prefer shorter match (bug #103052) - color', function () {\n\t\tconst resourceA = URI.file('app/constants/color.js');\n\t\tconst resourceB = URI.file('app/components/model/input/pick-avatar-color.js');\n\n\t\tfor (const query of ['color js', 'colorjs']) {\n\t\t\tlet res = [resourceA, resourceB].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\t\tassert.strictEqual(res[0], resourceA);\n\t\t\tassert.strictEqual(res[1], resourceB);\n\n\t\t\tres = [resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\t\tassert.strictEqual(res[0], resourceA);\n\t\t\tassert.strictEqual(res[1], resourceB);\n\t\t}\n\t});\n\n\ttest('compareFilesByScore - prefer strict case prefix', function () {\n\t\tconst resourceA = URI.file('app/constants/color.js');\n\t\tconst resourceB = URI.file('app/components/model/input/Color.js');\n\n\t\tlet query = 'Color';\n\n\t\tlet res = [resourceA, resourceB].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\t\tassert.strictEqual(res[1], resourceA);\n\n\t\tres = [resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceB);\n\t\tassert.strictEqual(res[1], resourceA);\n\n\t\tquery = 'color';\n\n\t\tres = [resourceA, resourceB].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceA);\n\t\tassert.strictEqual(res[1], resourceB);\n\n\t\tres = [resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceA);\n\t\tassert.strictEqual(res[1], resourceB);\n\t});\n\n\ttest('compareFilesByScore - prefer prefix (bug #103052)', function () {\n\t\tconst resourceA = URI.file('test/smoke/src/main.ts');\n\t\tconst resourceB = URI.file('src/vs/editor/common/services/semantikTokensProviderStyling.ts');\n\n\t\tconst query = 'smoke main.ts';\n\n\t\tlet res = [resourceA, resourceB].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceA);\n\t\tassert.strictEqual(res[1], resourceB);\n\n\t\tres = [resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\tassert.strictEqual(res[0], resourceA);\n\t\tassert.strictEqual(res[1], resourceB);\n\t});\n\n\ttest('compareFilesByScore - boost better prefix match if multiple queries are used', function () {\n\t\tconst resourceA = URI.file('src/vs/workbench/services/host/browser/browserHostService.ts');\n\t\tconst resourceB = URI.file('src/vs/workbench/browser/workbench.ts');\n\n\t\tfor (const query of ['workbench.ts browser', 'browser workbench.ts', 'browser workbench', 'workbench browser']) {\n\t\t\tlet res = [resourceA, resourceB].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\t\tassert.strictEqual(res[0], resourceB);\n\t\t\tassert.strictEqual(res[1], resourceA);\n\n\t\t\tres = [resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\t\tassert.strictEqual(res[0], resourceB);\n\t\t\tassert.strictEqual(res[1], resourceA);\n\t\t}\n\t});\n\n\ttest('compareFilesByScore - boost shorter prefix match if multiple queries are used', function () {\n\t\tconst resourceA = URI.file('src/vs/workbench/node/actions/windowActions.ts');\n\t\tconst resourceB = URI.file('src/vs/workbench/electron-node/window.ts');\n\n\t\tfor (const query of ['window node', 'window.ts node']) {\n\t\t\tlet res = [resourceA, resourceB].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\t\tassert.strictEqual(res[0], resourceB);\n\t\t\tassert.strictEqual(res[1], resourceA);\n\n\t\t\tres = [resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\t\tassert.strictEqual(res[0], resourceB);\n\t\t\tassert.strictEqual(res[1], resourceA);\n\t\t}\n\t});\n\n\ttest('compareFilesByScore - boost shorter prefix match if multiple queries are used (#99171)', function () {\n\t\tconst resourceA = URI.file('mesh_editor_lifetime_job.h');\n\t\tconst resourceB = URI.file('lifetime_job.h');\n\n\t\tfor (const query of ['m life, life m']) {\n\t\t\tlet res = [resourceA, resourceB].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\t\tassert.strictEqual(res[0], resourceB);\n\t\t\tassert.strictEqual(res[1], resourceA);\n\n\t\t\tres = [resourceB, resourceA].sort((r1, r2) => compareItemsByScore(r1, r2, query, true, ResourceAccessor));\n\t\t\tassert.strictEqual(res[0], resourceB);\n\t\t\tassert.strictEqual(res[1], resourceA);\n\t\t}\n\t});\n\n\ttest('prepareQuery', () => {\n\t\tassert.strictEqual(prepareQuery(' f*a ').normalized, 'fa');\n\t\tassert.strictEqual(prepareQuery('model Tester.ts').original, 'model Tester.ts');\n\t\tassert.strictEqual(prepareQuery('model Tester.ts').originalLowercase, 'model Tester.ts'.toLowerCase());\n\t\tassert.strictEqual(prepareQuery('model Tester.ts').normalized, 'modelTester.ts');\n\t\tassert.strictEqual(prepareQuery('model Tester.ts').expectContiguousMatch, false); // doesn't have quotes in it\n\t\tassert.strictEqual(prepareQuery('Model Tester.ts').normalizedLowercase, 'modeltester.ts');\n\t\tassert.strictEqual(prepareQuery('ModelTester.ts').containsPathSeparator, false);\n\t\tassert.strictEqual(prepareQuery('Model' + sep + 'Tester.ts').containsPathSeparator, true);\n\t\tassert.strictEqual(prepareQuery('\"hello\"').expectContiguousMatch, true);\n\t\tassert.strictEqual(prepareQuery('\"hello\"').normalized, 'hello');\n\n\t\t// with spaces\n\t\tlet query = prepareQuery('He*llo World');\n\t\tassert.strictEqual(query.original, 'He*llo World');\n\t\tassert.strictEqual(query.normalized, 'HelloWorld');\n\t\tassert.strictEqual(query.normalizedLowercase, 'HelloWorld'.toLowerCase());\n\t\tassert.strictEqual(query.values?.length, 2);\n\t\tassert.strictEqual(query.values?.[0].original, 'He*llo');\n\t\tassert.strictEqual(query.values?.[0].normalized, 'Hello');\n\t\tassert.strictEqual(query.values?.[0].normalizedLowercase, 'Hello'.toLowerCase());\n\t\tassert.strictEqual(query.values?.[1].original, 'World');\n\t\tassert.strictEqual(query.values?.[1].normalized, 'World');\n\t\tassert.strictEqual(query.values?.[1].normalizedLowercase, 'World'.toLowerCase());\n\n\t\tconst restoredQuery = pieceToQuery(query.values);\n\t\tassert.strictEqual(restoredQuery.original, query.original);\n\t\tassert.strictEqual(restoredQuery.values?.length, query.values?.length);\n\t\tassert.strictEqual(restoredQuery.containsPathSeparator, query.containsPathSeparator);\n\n\t\t// with spaces that are empty\n\t\tquery = prepareQuery(' Hello   World  \t');\n\t\tassert.strictEqual(query.original, ' Hello   World  \t');\n\t\tassert.strictEqual(query.originalLowercase, ' Hello   World  \t'.toLowerCase());\n\t\tassert.strictEqual(query.normalized, 'HelloWorld');\n\t\tassert.strictEqual(query.normalizedLowercase, 'HelloWorld'.toLowerCase());\n\t\tassert.strictEqual(query.values?.length, 2);\n\t\tassert.strictEqual(query.values?.[0].original, 'Hello');\n\t\tassert.strictEqual(query.values?.[0].originalLowercase, 'Hello'.toLowerCase());\n\t\tassert.strictEqual(query.values?.[0].normalized, 'Hello');\n\t\tassert.strictEqual(query.values?.[0].normalizedLowercase, 'Hello'.toLowerCase());\n\t\tassert.strictEqual(query.values?.[1].original, 'World');\n\t\tassert.strictEqual(query.values?.[1].originalLowercase, 'World'.toLowerCase());\n\t\tassert.strictEqual(query.values?.[1].normalized, 'World');\n\t\tassert.strictEqual(query.values?.[1].normalizedLowercase, 'World'.toLowerCase());\n\n\t\t// Path related\n\t\tif (isWindows) {\n\t\t\tassert.strictEqual(prepareQuery('C:\\\\some\\\\path').pathNormalized, 'C:\\\\some\\\\path');\n\t\t\tassert.strictEqual(prepareQuery('C:\\\\some\\\\path').normalized, 'C:\\\\some\\\\path');\n\t\t\tassert.strictEqual(prepareQuery('C:\\\\some\\\\path').containsPathSeparator, true);\n\t\t\tassert.strictEqual(prepareQuery('C:/some/path').pathNormalized, 'C:\\\\some\\\\path');\n\t\t\tassert.strictEqual(prepareQuery('C:/some/path').normalized, 'C:\\\\some\\\\path');\n\t\t\tassert.strictEqual(prepareQuery('C:/some/path').containsPathSeparator, true);\n\t\t} else {\n\t\t\tassert.strictEqual(prepareQuery('/some/path').pathNormalized, '/some/path');\n\t\t\tassert.strictEqual(prepareQuery('/some/path').normalized, '/some/path');\n\t\t\tassert.strictEqual(prepareQuery('/some/path').containsPathSeparator, true);\n\t\t\tassert.strictEqual(prepareQuery('\\\\some\\\\path').pathNormalized, '/some/path');\n\t\t\tassert.strictEqual(prepareQuery('\\\\some\\\\path').normalized, '/some/path');\n\t\t\tassert.strictEqual(prepareQuery('\\\\some\\\\path').containsPathSeparator, true);\n\t\t}\n\t});\n\n\ttest('fuzzyScore2 (matching)', function () {\n\t\tconst target = 'HelLo-World';\n\n\t\tfor (const offset of [0, 3]) {\n\t\t\tlet [score, matches] = _doScore2(offset === 0 ? target : `123${target}`, 'HelLo-World', offset);\n\n\t\t\tassert.ok(score);\n\t\t\tassert.strictEqual(matches.length, 1);\n\t\t\tassert.strictEqual(matches[0].start, 0 + offset);\n\t\t\tassert.strictEqual(matches[0].end, target.length + offset);\n\n\t\t\t[score, matches] = _doScore2(offset === 0 ? target : `123${target}`, 'HW', offset);\n\n\t\t\tassert.ok(score);\n\t\t\tassert.strictEqual(matches.length, 2);\n\t\t\tassert.strictEqual(matches[0].start, 0 + offset);\n\t\t\tassert.strictEqual(matches[0].end, 1 + offset);\n\t\t\tassert.strictEqual(matches[1].start, 6 + offset);\n\t\t\tassert.strictEqual(matches[1].end, 7 + offset);\n\t\t}\n\t});\n\n\ttest('fuzzyScore2 (multiple queries)', function () {\n\t\tconst target = 'HelLo-World';\n\n\t\tconst [firstSingleScore, firstSingleMatches] = _doScore2(target, 'HelLo');\n\t\tconst [secondSingleScore, secondSingleMatches] = _doScore2(target, 'World');\n\t\tconst firstAndSecondSingleMatches = [...firstSingleMatches || [], ...secondSingleMatches || []];\n\n\t\tlet [multiScore, multiMatches] = _doScore2(target, 'HelLo World');\n\n\t\tfunction assertScore() {\n\t\t\tassert.ok(multiScore ?? 0 >= ((firstSingleScore ?? 0) + (secondSingleScore ?? 0)));\n\t\t\tfor (let i = 0; multiMatches && i < multiMatches.length; i++) {\n\t\t\t\tconst multiMatch = multiMatches[i];\n\t\t\t\tconst firstAndSecondSingleMatch = firstAndSecondSingleMatches[i];\n\n\t\t\t\tif (multiMatch && firstAndSecondSingleMatch) {\n\t\t\t\t\tassert.strictEqual(multiMatch.start, firstAndSecondSingleMatch.start);\n\t\t\t\t\tassert.strictEqual(multiMatch.end, firstAndSecondSingleMatch.end);\n\t\t\t\t} else {\n\t\t\t\t\tassert.fail();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction assertNoScore() {\n\t\t\tassert.strictEqual(multiScore, undefined);\n\t\t\tassert.strictEqual(multiMatches.length, 0);\n\t\t}\n\n\t\tassertScore();\n\n\t\t[multiScore, multiMatches] = _doScore2(target, 'World HelLo');\n\t\tassertScore();\n\n\t\t[multiScore, multiMatches] = _doScore2(target, 'World HelLo World');\n\t\tassertScore();\n\n\t\t[multiScore, multiMatches] = _doScore2(target, 'World HelLo Nothing');\n\t\tassertNoScore();\n\n\t\t[multiScore, multiMatches] = _doScore2(target, 'More Nothing');\n\t\tassertNoScore();\n\t});\n\n\ttest('fuzzyScore2 (#95716)', function () {\n\t\tconst target = '# \u274C Wow';\n\n\t\tconst score = _doScore2(target, '\u274C');\n\t\tassert.ok(score);\n\t\tassert.ok(typeof score[0] === 'number');\n\t\tassert.ok(score[1].length > 0);\n\t});\n\n\ttest('Using quotes should expect contiguous matches match', function () {\n\t\t// missing the \"i\" in the query\n\t\tassert.strictEqual(_doScore('contiguous', '\"contguous\"')[0], 0);\n\n\t\tconst score = _doScore('contiguous', '\"contiguous\"');\n\t\tassert.strictEqual(score[0], 253);\n\t});\n\n\ttest('Using quotes should highlight contiguous indexes', function () {\n\t\tconst score = _doScore('2021-7-26.md', '\"26\"');\n\t\tassert.strictEqual(score[0], 13);\n\n\t\t// The indexes of the 2 and 6 of \"26\"\n\t\tassert.strictEqual(score[1][0], 7);\n\t\tassert.strictEqual(score[1][1], 8);\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"],
  "mappings": "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",
  "names": []
}
