{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/test/common/arraysFind.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { MonotonousArray, findFirstMonotonous, findLastMonotonous } from '../../common/arraysFind.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from './utils.js';\n\nsuite('Arrays', () => {\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('findLastMonotonous', () => {\n\t\tconst array = [1, 4, 5, 7, 55, 59, 60, 61, 64, 69];\n\n\t\tconst result = findLastMonotonous(array, n => n <= 60);\n\t\tassert.strictEqual(result, 60);\n\n\t\tconst result2 = findLastMonotonous(array, n => n <= 62);\n\t\tassert.strictEqual(result2, 61);\n\n\t\tconst result3 = findLastMonotonous(array, n => n <= 1);\n\t\tassert.strictEqual(result3, 1);\n\n\t\tconst result4 = findLastMonotonous(array, n => n <= 70);\n\t\tassert.strictEqual(result4, 69);\n\n\t\tconst result5 = findLastMonotonous(array, n => n <= 0);\n\t\tassert.strictEqual(result5, undefined);\n\t});\n\n\ttest('findFirstMonotonous', () => {\n\t\tconst array = [1, 4, 5, 7, 55, 59, 60, 61, 64, 69];\n\n\t\tconst result = findFirstMonotonous(array, n => n >= 60);\n\t\tassert.strictEqual(result, 60);\n\n\t\tconst result2 = findFirstMonotonous(array, n => n >= 62);\n\t\tassert.strictEqual(result2, 64);\n\n\t\tconst result3 = findFirstMonotonous(array, n => n >= 1);\n\t\tassert.strictEqual(result3, 1);\n\n\t\tconst result4 = findFirstMonotonous(array, n => n >= 70);\n\t\tassert.strictEqual(result4, undefined);\n\n\t\tconst result5 = findFirstMonotonous(array, n => n >= 0);\n\t\tassert.strictEqual(result5, 1);\n\t});\n\n\ttest('MonotonousArray', () => {\n\t\tconst arr = new MonotonousArray([1, 4, 5, 7, 55, 59, 60, 61, 64, 69]);\n\t\tassert.strictEqual(arr.findLastMonotonous(n => n <= 0), undefined);\n\t\tassert.strictEqual(arr.findLastMonotonous(n => n <= 0), undefined);\n\t\tassert.strictEqual(arr.findLastMonotonous(n => n <= 5), 5);\n\t\tassert.strictEqual(arr.findLastMonotonous(n => n <= 6), 5);\n\t\tassert.strictEqual(arr.findLastMonotonous(n => n <= 55), 55);\n\t\tassert.strictEqual(arr.findLastMonotonous(n => n <= 60), 60);\n\t\tassert.strictEqual(arr.findLastMonotonous(n => n <= 80), 69);\n\t});\n});\n"],
  "mappings": "AAKA,OAAO,YAAY;AACnB,SAAS,iBAAiB,qBAAqB,0BAA0B;AACzE,SAAS,+CAA+C;AAExD,MAAM,UAAU,MAAM;AACrB,0CAAwC;AAExC,OAAK,sBAAsB,MAAM;AAChC,UAAM,QAAQ,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AAEjD,UAAM,SAAS,mBAAmB,OAAO,OAAK,KAAK,EAAE;AACrD,WAAO,YAAY,QAAQ,EAAE;AAE7B,UAAM,UAAU,mBAAmB,OAAO,OAAK,KAAK,EAAE;AACtD,WAAO,YAAY,SAAS,EAAE;AAE9B,UAAM,UAAU,mBAAmB,OAAO,OAAK,KAAK,CAAC;AACrD,WAAO,YAAY,SAAS,CAAC;AAE7B,UAAM,UAAU,mBAAmB,OAAO,OAAK,KAAK,EAAE;AACtD,WAAO,YAAY,SAAS,EAAE;AAE9B,UAAM,UAAU,mBAAmB,OAAO,OAAK,KAAK,CAAC;AACrD,WAAO,YAAY,SAAS,MAAS;AAAA,EACtC,CAAC;AAED,OAAK,uBAAuB,MAAM;AACjC,UAAM,QAAQ,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AAEjD,UAAM,SAAS,oBAAoB,OAAO,OAAK,KAAK,EAAE;AACtD,WAAO,YAAY,QAAQ,EAAE;AAE7B,UAAM,UAAU,oBAAoB,OAAO,OAAK,KAAK,EAAE;AACvD,WAAO,YAAY,SAAS,EAAE;AAE9B,UAAM,UAAU,oBAAoB,OAAO,OAAK,KAAK,CAAC;AACtD,WAAO,YAAY,SAAS,CAAC;AAE7B,UAAM,UAAU,oBAAoB,OAAO,OAAK,KAAK,EAAE;AACvD,WAAO,YAAY,SAAS,MAAS;AAErC,UAAM,UAAU,oBAAoB,OAAO,OAAK,KAAK,CAAC;AACtD,WAAO,YAAY,SAAS,CAAC;AAAA,EAC9B,CAAC;AAED,OAAK,mBAAmB,MAAM;AAC7B,UAAM,MAAM,IAAI,gBAAgB,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,CAAC;AACpE,WAAO,YAAY,IAAI,mBAAmB,OAAK,KAAK,CAAC,GAAG,MAAS;AACjE,WAAO,YAAY,IAAI,mBAAmB,OAAK,KAAK,CAAC,GAAG,MAAS;AACjE,WAAO,YAAY,IAAI,mBAAmB,OAAK,KAAK,CAAC,GAAG,CAAC;AACzD,WAAO,YAAY,IAAI,mBAAmB,OAAK,KAAK,CAAC,GAAG,CAAC;AACzD,WAAO,YAAY,IAAI,mBAAmB,OAAK,KAAK,EAAE,GAAG,EAAE;AAC3D,WAAO,YAAY,IAAI,mBAAmB,OAAK,KAAK,EAAE,GAAG,EAAE;AAC3D,WAAO,YAAY,IAAI,mBAAmB,OAAK,KAAK,EAAE,GAAG,EAAE;AAAA,EAC5D,CAAC;AACF,CAAC;",
  "names": []
}
