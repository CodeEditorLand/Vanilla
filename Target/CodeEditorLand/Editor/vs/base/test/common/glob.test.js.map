{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/test/common/glob.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport * as glob from '../../common/glob.js';\nimport { sep } from '../../common/path.js';\nimport { isLinux, isMacintosh, isWindows } from '../../common/platform.js';\nimport { URI } from '../../common/uri.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from './utils.js';\n\nsuite('Glob', () => {\n\n\t// test('perf', () => {\n\n\t// \tlet patterns = [\n\t// \t\t'{**/*.cs,**/*.json,**/*.csproj,**/*.sln}',\n\t// \t\t'{**/*.cs,**/*.csproj,**/*.sln}',\n\t// \t\t'{**/*.ts,**/*.tsx,**/*.js,**/*.jsx,**/*.es6,**/*.mjs,**/*.cjs}',\n\t// \t\t'**/*.go',\n\t// \t\t'{**/*.ps,**/*.ps1}',\n\t// \t\t'{**/*.c,**/*.cpp,**/*.h}',\n\t// \t\t'{**/*.fsx,**/*.fsi,**/*.fs,**/*.ml,**/*.mli}',\n\t// \t\t'{**/*.js,**/*.jsx,**/*.es6,**/*.mjs,**/*.cjs}',\n\t// \t\t'{**/*.ts,**/*.tsx}',\n\t// \t\t'{**/*.php}',\n\t// \t\t'{**/*.php}',\n\t// \t\t'{**/*.php}',\n\t// \t\t'{**/*.php}',\n\t// \t\t'{**/*.py}',\n\t// \t\t'{**/*.py}',\n\t// \t\t'{**/*.py}',\n\t// \t\t'{**/*.rs,**/*.rslib}',\n\t// \t\t'{**/*.cpp,**/*.cc,**/*.h}',\n\t// \t\t'{**/*.md}',\n\t// \t\t'{**/*.md}',\n\t// \t\t'{**/*.md}'\n\t// \t];\n\n\t// \tlet paths = [\n\t// \t\t'/DNXConsoleApp/Program.cs',\n\t// \t\t'C:\\\\DNXConsoleApp\\\\foo\\\\Program.cs',\n\t// \t\t'test/qunit',\n\t// \t\t'test/test.txt',\n\t// \t\t'test/node_modules',\n\t// \t\t'.hidden.txt',\n\t// \t\t'/node_module/test/foo.js'\n\t// \t];\n\n\t// \tlet results = 0;\n\t// \tlet c = 1000;\n\t// \tconsole.profile('glob.match');\n\t// \twhile (c-- > 0) {\n\t// \t\tfor (let path of paths) {\n\t// \t\t\tfor (let pattern of patterns) {\n\t// \t\t\t\tlet r = glob.match(pattern, path);\n\t// \t\t\t\tif (r) {\n\t// \t\t\t\t\tresults += 42;\n\t// \t\t\t\t}\n\t// \t\t\t}\n\t// \t\t}\n\t// \t}\n\t// \tconsole.profileEnd();\n\t// });\n\n\tfunction assertGlobMatch(pattern: string | glob.IRelativePattern, input: string) {\n\t\tassert(glob.match(pattern, input), `${JSON.stringify(pattern)} should match ${input}`);\n\t\tassert(glob.match(pattern, nativeSep(input)), `${pattern} should match ${nativeSep(input)}`);\n\t}\n\n\tfunction assertNoGlobMatch(pattern: string | glob.IRelativePattern, input: string) {\n\t\tassert(!glob.match(pattern, input), `${pattern} should not match ${input}`);\n\t\tassert(!glob.match(pattern, nativeSep(input)), `${pattern} should not match ${nativeSep(input)}`);\n\t}\n\n\ttest('simple', () => {\n\t\tlet p = 'node_modules';\n\n\t\tassertGlobMatch(p, 'node_modules');\n\t\tassertNoGlobMatch(p, 'node_module');\n\t\tassertNoGlobMatch(p, '/node_modules');\n\t\tassertNoGlobMatch(p, 'test/node_modules');\n\n\t\tp = 'test.txt';\n\t\tassertGlobMatch(p, 'test.txt');\n\t\tassertNoGlobMatch(p, 'test?txt');\n\t\tassertNoGlobMatch(p, '/text.txt');\n\t\tassertNoGlobMatch(p, 'test/test.txt');\n\n\t\tp = 'test(.txt';\n\t\tassertGlobMatch(p, 'test(.txt');\n\t\tassertNoGlobMatch(p, 'test?txt');\n\n\t\tp = 'qunit';\n\n\t\tassertGlobMatch(p, 'qunit');\n\t\tassertNoGlobMatch(p, 'qunit.css');\n\t\tassertNoGlobMatch(p, 'test/qunit');\n\n\t\t// Absolute\n\n\t\tp = '/DNXConsoleApp/**/*.cs';\n\t\tassertGlobMatch(p, '/DNXConsoleApp/Program.cs');\n\t\tassertGlobMatch(p, '/DNXConsoleApp/foo/Program.cs');\n\n\t\tp = 'C:/DNXConsoleApp/**/*.cs';\n\t\tassertGlobMatch(p, 'C:\\\\DNXConsoleApp\\\\Program.cs');\n\t\tassertGlobMatch(p, 'C:\\\\DNXConsoleApp\\\\foo\\\\Program.cs');\n\n\t\tp = '*';\n\t\tassertGlobMatch(p, '');\n\t});\n\n\ttest('dot hidden', function () {\n\t\tlet p = '.*';\n\n\t\tassertGlobMatch(p, '.git');\n\t\tassertGlobMatch(p, '.hidden.txt');\n\t\tassertNoGlobMatch(p, 'git');\n\t\tassertNoGlobMatch(p, 'hidden.txt');\n\t\tassertNoGlobMatch(p, 'path/.git');\n\t\tassertNoGlobMatch(p, 'path/.hidden.txt');\n\n\t\tp = '**/.*';\n\t\tassertGlobMatch(p, '.git');\n\t\tassertGlobMatch(p, '/.git');\n\t\tassertGlobMatch(p, '.hidden.txt');\n\t\tassertNoGlobMatch(p, 'git');\n\t\tassertNoGlobMatch(p, 'hidden.txt');\n\t\tassertGlobMatch(p, 'path/.git');\n\t\tassertGlobMatch(p, 'path/.hidden.txt');\n\t\tassertGlobMatch(p, '/path/.git');\n\t\tassertGlobMatch(p, '/path/.hidden.txt');\n\t\tassertNoGlobMatch(p, 'path/git');\n\t\tassertNoGlobMatch(p, 'pat.h/hidden.txt');\n\n\t\tp = '._*';\n\n\t\tassertGlobMatch(p, '._git');\n\t\tassertGlobMatch(p, '._hidden.txt');\n\t\tassertNoGlobMatch(p, 'git');\n\t\tassertNoGlobMatch(p, 'hidden.txt');\n\t\tassertNoGlobMatch(p, 'path/._git');\n\t\tassertNoGlobMatch(p, 'path/._hidden.txt');\n\n\t\tp = '**/._*';\n\t\tassertGlobMatch(p, '._git');\n\t\tassertGlobMatch(p, '._hidden.txt');\n\t\tassertNoGlobMatch(p, 'git');\n\t\tassertNoGlobMatch(p, 'hidden._txt');\n\t\tassertGlobMatch(p, 'path/._git');\n\t\tassertGlobMatch(p, 'path/._hidden.txt');\n\t\tassertGlobMatch(p, '/path/._git');\n\t\tassertGlobMatch(p, '/path/._hidden.txt');\n\t\tassertNoGlobMatch(p, 'path/git');\n\t\tassertNoGlobMatch(p, 'pat.h/hidden._txt');\n\t});\n\n\ttest('file pattern', function () {\n\t\tlet p = '*.js';\n\n\t\tassertGlobMatch(p, 'foo.js');\n\t\tassertNoGlobMatch(p, 'folder/foo.js');\n\t\tassertNoGlobMatch(p, '/node_modules/foo.js');\n\t\tassertNoGlobMatch(p, 'foo.jss');\n\t\tassertNoGlobMatch(p, 'some.js/test');\n\n\t\tp = 'html.*';\n\t\tassertGlobMatch(p, 'html.js');\n\t\tassertGlobMatch(p, 'html.txt');\n\t\tassertNoGlobMatch(p, 'htm.txt');\n\n\t\tp = '*.*';\n\t\tassertGlobMatch(p, 'html.js');\n\t\tassertGlobMatch(p, 'html.txt');\n\t\tassertGlobMatch(p, 'htm.txt');\n\t\tassertNoGlobMatch(p, 'folder/foo.js');\n\t\tassertNoGlobMatch(p, '/node_modules/foo.js');\n\n\t\tp = 'node_modules/test/*.js';\n\t\tassertGlobMatch(p, 'node_modules/test/foo.js');\n\t\tassertNoGlobMatch(p, 'folder/foo.js');\n\t\tassertNoGlobMatch(p, '/node_module/test/foo.js');\n\t\tassertNoGlobMatch(p, 'foo.jss');\n\t\tassertNoGlobMatch(p, 'some.js/test');\n\t});\n\n\ttest('star', () => {\n\t\tlet p = 'node*modules';\n\n\t\tassertGlobMatch(p, 'node_modules');\n\t\tassertGlobMatch(p, 'node_super_modules');\n\t\tassertNoGlobMatch(p, 'node_module');\n\t\tassertNoGlobMatch(p, '/node_modules');\n\t\tassertNoGlobMatch(p, 'test/node_modules');\n\n\t\tp = '*';\n\t\tassertGlobMatch(p, 'html.js');\n\t\tassertGlobMatch(p, 'html.txt');\n\t\tassertGlobMatch(p, 'htm.txt');\n\t\tassertNoGlobMatch(p, 'folder/foo.js');\n\t\tassertNoGlobMatch(p, '/node_modules/foo.js');\n\t});\n\n\ttest('file / folder match', function () {\n\t\tconst p = '**/node_modules/**';\n\n\t\tassertGlobMatch(p, 'node_modules');\n\t\tassertGlobMatch(p, 'node_modules/');\n\t\tassertGlobMatch(p, 'a/node_modules');\n\t\tassertGlobMatch(p, 'a/node_modules/');\n\t\tassertGlobMatch(p, 'node_modules/foo');\n\t\tassertGlobMatch(p, 'foo/node_modules/foo/bar');\n\n\t\tassertGlobMatch(p, '/node_modules');\n\t\tassertGlobMatch(p, '/node_modules/');\n\t\tassertGlobMatch(p, '/a/node_modules');\n\t\tassertGlobMatch(p, '/a/node_modules/');\n\t\tassertGlobMatch(p, '/node_modules/foo');\n\t\tassertGlobMatch(p, '/foo/node_modules/foo/bar');\n\t});\n\n\ttest('questionmark', () => {\n\t\tlet p = 'node?modules';\n\n\t\tassertGlobMatch(p, 'node_modules');\n\t\tassertNoGlobMatch(p, 'node_super_modules');\n\t\tassertNoGlobMatch(p, 'node_module');\n\t\tassertNoGlobMatch(p, '/node_modules');\n\t\tassertNoGlobMatch(p, 'test/node_modules');\n\n\t\tp = '?';\n\t\tassertGlobMatch(p, 'h');\n\t\tassertNoGlobMatch(p, 'html.txt');\n\t\tassertNoGlobMatch(p, 'htm.txt');\n\t\tassertNoGlobMatch(p, 'folder/foo.js');\n\t\tassertNoGlobMatch(p, '/node_modules/foo.js');\n\t});\n\n\ttest('globstar', () => {\n\t\tlet p = '**/*.js';\n\n\t\tassertGlobMatch(p, 'foo.js');\n\t\tassertGlobMatch(p, '/foo.js');\n\t\tassertGlobMatch(p, 'folder/foo.js');\n\t\tassertGlobMatch(p, '/node_modules/foo.js');\n\t\tassertNoGlobMatch(p, 'foo.jss');\n\t\tassertNoGlobMatch(p, 'some.js/test');\n\t\tassertNoGlobMatch(p, '/some.js/test');\n\t\tassertNoGlobMatch(p, '\\\\some.js\\\\test');\n\n\t\tp = '**/project.json';\n\n\t\tassertGlobMatch(p, 'project.json');\n\t\tassertGlobMatch(p, '/project.json');\n\t\tassertGlobMatch(p, 'some/folder/project.json');\n\t\tassertGlobMatch(p, '/some/folder/project.json');\n\t\tassertNoGlobMatch(p, 'some/folder/file_project.json');\n\t\tassertNoGlobMatch(p, 'some/folder/fileproject.json');\n\t\tassertNoGlobMatch(p, 'some/rrproject.json');\n\t\tassertNoGlobMatch(p, 'some\\\\rrproject.json');\n\n\t\tp = 'test/**';\n\t\tassertGlobMatch(p, 'test');\n\t\tassertGlobMatch(p, 'test/foo');\n\t\tassertGlobMatch(p, 'test/foo/');\n\t\tassertGlobMatch(p, 'test/foo.js');\n\t\tassertGlobMatch(p, 'test/other/foo.js');\n\t\tassertNoGlobMatch(p, 'est/other/foo.js');\n\n\t\tp = '**';\n\t\tassertGlobMatch(p, '/');\n\t\tassertGlobMatch(p, 'foo.js');\n\t\tassertGlobMatch(p, 'folder/foo.js');\n\t\tassertGlobMatch(p, 'folder/foo/');\n\t\tassertGlobMatch(p, '/node_modules/foo.js');\n\t\tassertGlobMatch(p, 'foo.jss');\n\t\tassertGlobMatch(p, 'some.js/test');\n\n\t\tp = 'test/**/*.js';\n\t\tassertGlobMatch(p, 'test/foo.js');\n\t\tassertGlobMatch(p, 'test/other/foo.js');\n\t\tassertGlobMatch(p, 'test/other/more/foo.js');\n\t\tassertNoGlobMatch(p, 'test/foo.ts');\n\t\tassertNoGlobMatch(p, 'test/other/foo.ts');\n\t\tassertNoGlobMatch(p, 'test/other/more/foo.ts');\n\n\t\tp = '**/**/*.js';\n\n\t\tassertGlobMatch(p, 'foo.js');\n\t\tassertGlobMatch(p, '/foo.js');\n\t\tassertGlobMatch(p, 'folder/foo.js');\n\t\tassertGlobMatch(p, '/node_modules/foo.js');\n\t\tassertNoGlobMatch(p, 'foo.jss');\n\t\tassertNoGlobMatch(p, 'some.js/test');\n\n\t\tp = '**/node_modules/**/*.js';\n\n\t\tassertNoGlobMatch(p, 'foo.js');\n\t\tassertNoGlobMatch(p, 'folder/foo.js');\n\t\tassertGlobMatch(p, 'node_modules/foo.js');\n\t\tassertGlobMatch(p, '/node_modules/foo.js');\n\t\tassertGlobMatch(p, 'node_modules/some/folder/foo.js');\n\t\tassertGlobMatch(p, '/node_modules/some/folder/foo.js');\n\t\tassertNoGlobMatch(p, 'node_modules/some/folder/foo.ts');\n\t\tassertNoGlobMatch(p, 'foo.jss');\n\t\tassertNoGlobMatch(p, 'some.js/test');\n\n\t\tp = '{**/node_modules/**,**/.git/**,**/bower_components/**}';\n\n\t\tassertGlobMatch(p, 'node_modules');\n\t\tassertGlobMatch(p, '/node_modules');\n\t\tassertGlobMatch(p, '/node_modules/more');\n\t\tassertGlobMatch(p, 'some/test/node_modules');\n\t\tassertGlobMatch(p, 'some\\\\test\\\\node_modules');\n\t\tassertGlobMatch(p, '/some/test/node_modules');\n\t\tassertGlobMatch(p, '\\\\some\\\\test\\\\node_modules');\n\t\tassertGlobMatch(p, 'C:\\\\\\\\some\\\\test\\\\node_modules');\n\t\tassertGlobMatch(p, 'C:\\\\\\\\some\\\\test\\\\node_modules\\\\more');\n\n\t\tassertGlobMatch(p, 'bower_components');\n\t\tassertGlobMatch(p, 'bower_components/more');\n\t\tassertGlobMatch(p, '/bower_components');\n\t\tassertGlobMatch(p, 'some/test/bower_components');\n\t\tassertGlobMatch(p, 'some\\\\test\\\\bower_components');\n\t\tassertGlobMatch(p, '/some/test/bower_components');\n\t\tassertGlobMatch(p, '\\\\some\\\\test\\\\bower_components');\n\t\tassertGlobMatch(p, 'C:\\\\\\\\some\\\\test\\\\bower_components');\n\t\tassertGlobMatch(p, 'C:\\\\\\\\some\\\\test\\\\bower_components\\\\more');\n\n\t\tassertGlobMatch(p, '.git');\n\t\tassertGlobMatch(p, '/.git');\n\t\tassertGlobMatch(p, 'some/test/.git');\n\t\tassertGlobMatch(p, 'some\\\\test\\\\.git');\n\t\tassertGlobMatch(p, '/some/test/.git');\n\t\tassertGlobMatch(p, '\\\\some\\\\test\\\\.git');\n\t\tassertGlobMatch(p, 'C:\\\\\\\\some\\\\test\\\\.git');\n\n\t\tassertNoGlobMatch(p, 'tempting');\n\t\tassertNoGlobMatch(p, '/tempting');\n\t\tassertNoGlobMatch(p, 'some/test/tempting');\n\t\tassertNoGlobMatch(p, 'some\\\\test\\\\tempting');\n\t\tassertNoGlobMatch(p, '/some/test/tempting');\n\t\tassertNoGlobMatch(p, '\\\\some\\\\test\\\\tempting');\n\t\tassertNoGlobMatch(p, 'C:\\\\\\\\some\\\\test\\\\tempting');\n\n\t\tp = '{**/package.json,**/project.json}';\n\t\tassertGlobMatch(p, 'package.json');\n\t\tassertGlobMatch(p, '/package.json');\n\t\tassertNoGlobMatch(p, 'xpackage.json');\n\t\tassertNoGlobMatch(p, '/xpackage.json');\n\t});\n\n\ttest('issue 41724', function () {\n\t\tlet p = 'some/**/*.js';\n\n\t\tassertGlobMatch(p, 'some/foo.js');\n\t\tassertGlobMatch(p, 'some/folder/foo.js');\n\t\tassertNoGlobMatch(p, 'something/foo.js');\n\t\tassertNoGlobMatch(p, 'something/folder/foo.js');\n\n\t\tp = 'some/**/*';\n\n\t\tassertGlobMatch(p, 'some/foo.js');\n\t\tassertGlobMatch(p, 'some/folder/foo.js');\n\t\tassertNoGlobMatch(p, 'something/foo.js');\n\t\tassertNoGlobMatch(p, 'something/folder/foo.js');\n\t});\n\n\ttest('brace expansion', function () {\n\t\tlet p = '*.{html,js}';\n\n\t\tassertGlobMatch(p, 'foo.js');\n\t\tassertGlobMatch(p, 'foo.html');\n\t\tassertNoGlobMatch(p, 'folder/foo.js');\n\t\tassertNoGlobMatch(p, '/node_modules/foo.js');\n\t\tassertNoGlobMatch(p, 'foo.jss');\n\t\tassertNoGlobMatch(p, 'some.js/test');\n\n\t\tp = '*.{html}';\n\n\t\tassertGlobMatch(p, 'foo.html');\n\t\tassertNoGlobMatch(p, 'foo.js');\n\t\tassertNoGlobMatch(p, 'folder/foo.js');\n\t\tassertNoGlobMatch(p, '/node_modules/foo.js');\n\t\tassertNoGlobMatch(p, 'foo.jss');\n\t\tassertNoGlobMatch(p, 'some.js/test');\n\n\t\tp = '{node_modules,testing}';\n\t\tassertGlobMatch(p, 'node_modules');\n\t\tassertGlobMatch(p, 'testing');\n\t\tassertNoGlobMatch(p, 'node_module');\n\t\tassertNoGlobMatch(p, 'dtesting');\n\n\t\tp = '**/{foo,bar}';\n\t\tassertGlobMatch(p, 'foo');\n\t\tassertGlobMatch(p, 'bar');\n\t\tassertGlobMatch(p, 'test/foo');\n\t\tassertGlobMatch(p, 'test/bar');\n\t\tassertGlobMatch(p, 'other/more/foo');\n\t\tassertGlobMatch(p, 'other/more/bar');\n\t\tassertGlobMatch(p, '/foo');\n\t\tassertGlobMatch(p, '/bar');\n\t\tassertGlobMatch(p, '/test/foo');\n\t\tassertGlobMatch(p, '/test/bar');\n\t\tassertGlobMatch(p, '/other/more/foo');\n\t\tassertGlobMatch(p, '/other/more/bar');\n\n\t\tp = '{foo,bar}/**';\n\t\tassertGlobMatch(p, 'foo');\n\t\tassertGlobMatch(p, 'bar');\n\t\tassertGlobMatch(p, 'bar/');\n\t\tassertGlobMatch(p, 'foo/test');\n\t\tassertGlobMatch(p, 'bar/test');\n\t\tassertGlobMatch(p, 'bar/test/');\n\t\tassertGlobMatch(p, 'foo/other/more');\n\t\tassertGlobMatch(p, 'bar/other/more');\n\t\tassertGlobMatch(p, 'bar/other/more/');\n\n\t\tp = '{**/*.d.ts,**/*.js}';\n\n\t\tassertGlobMatch(p, 'foo.js');\n\t\tassertGlobMatch(p, 'testing/foo.js');\n\t\tassertGlobMatch(p, 'testing\\\\foo.js');\n\t\tassertGlobMatch(p, '/testing/foo.js');\n\t\tassertGlobMatch(p, '\\\\testing\\\\foo.js');\n\t\tassertGlobMatch(p, 'C:\\\\testing\\\\foo.js');\n\n\t\tassertGlobMatch(p, 'foo.d.ts');\n\t\tassertGlobMatch(p, 'testing/foo.d.ts');\n\t\tassertGlobMatch(p, 'testing\\\\foo.d.ts');\n\t\tassertGlobMatch(p, '/testing/foo.d.ts');\n\t\tassertGlobMatch(p, '\\\\testing\\\\foo.d.ts');\n\t\tassertGlobMatch(p, 'C:\\\\testing\\\\foo.d.ts');\n\n\t\tassertNoGlobMatch(p, 'foo.d');\n\t\tassertNoGlobMatch(p, 'testing/foo.d');\n\t\tassertNoGlobMatch(p, 'testing\\\\foo.d');\n\t\tassertNoGlobMatch(p, '/testing/foo.d');\n\t\tassertNoGlobMatch(p, '\\\\testing\\\\foo.d');\n\t\tassertNoGlobMatch(p, 'C:\\\\testing\\\\foo.d');\n\n\t\tp = '{**/*.d.ts,**/*.js,path/simple.jgs}';\n\n\t\tassertGlobMatch(p, 'foo.js');\n\t\tassertGlobMatch(p, 'testing/foo.js');\n\t\tassertGlobMatch(p, 'testing\\\\foo.js');\n\t\tassertGlobMatch(p, '/testing/foo.js');\n\t\tassertGlobMatch(p, 'path/simple.jgs');\n\t\tassertNoGlobMatch(p, '/path/simple.jgs');\n\t\tassertGlobMatch(p, '\\\\testing\\\\foo.js');\n\t\tassertGlobMatch(p, 'C:\\\\testing\\\\foo.js');\n\n\t\tp = '{**/*.d.ts,**/*.js,foo.[0-9]}';\n\n\t\tassertGlobMatch(p, 'foo.5');\n\t\tassertGlobMatch(p, 'foo.8');\n\t\tassertNoGlobMatch(p, 'bar.5');\n\t\tassertNoGlobMatch(p, 'foo.f');\n\t\tassertGlobMatch(p, 'foo.js');\n\n\t\tp = 'prefix/{**/*.d.ts,**/*.js,foo.[0-9]}';\n\n\t\tassertGlobMatch(p, 'prefix/foo.5');\n\t\tassertGlobMatch(p, 'prefix/foo.8');\n\t\tassertNoGlobMatch(p, 'prefix/bar.5');\n\t\tassertNoGlobMatch(p, 'prefix/foo.f');\n\t\tassertGlobMatch(p, 'prefix/foo.js');\n\t});\n\n\ttest('expression support (single)', function () {\n\t\tconst siblings = ['test.html', 'test.txt', 'test.ts', 'test.js'];\n\t\tconst hasSibling = (name: string) => siblings.indexOf(name) !== -1;\n\n\t\t// { \"**/*.js\": { \"when\": \"$(basename).ts\" } }\n\t\tlet expression: glob.IExpression = {\n\t\t\t'**/*.js': {\n\t\t\t\twhen: '$(basename).ts'\n\t\t\t}\n\t\t};\n\n\t\tassert.strictEqual('**/*.js', glob.match(expression, 'test.js', hasSibling));\n\t\tassert.strictEqual(glob.match(expression, 'test.js', () => false), null);\n\t\tassert.strictEqual(glob.match(expression, 'test.js', name => name === 'te.ts'), null);\n\t\tassert.strictEqual(glob.match(expression, 'test.js'), null);\n\n\t\texpression = {\n\t\t\t'**/*.js': {\n\t\t\t\twhen: ''\n\t\t\t}\n\t\t};\n\n\t\tassert.strictEqual(glob.match(expression, 'test.js', hasSibling), null);\n\n\t\texpression = {\n\t\t\t'**/*.js': {\n\t\t\t} as any\n\t\t};\n\n\t\tassert.strictEqual('**/*.js', glob.match(expression, 'test.js', hasSibling));\n\n\t\texpression = {};\n\n\t\tassert.strictEqual(glob.match(expression, 'test.js', hasSibling), null);\n\t});\n\n\ttest('expression support (multiple)', function () {\n\t\tconst siblings = ['test.html', 'test.txt', 'test.ts', 'test.js'];\n\t\tconst hasSibling = (name: string) => siblings.indexOf(name) !== -1;\n\n\t\t// { \"**/*.js\": { \"when\": \"$(basename).ts\" } }\n\t\tconst expression: glob.IExpression = {\n\t\t\t'**/*.js': { when: '$(basename).ts' },\n\t\t\t'**/*.as': true,\n\t\t\t'**/*.foo': false,\n\t\t\t'**/*.bananas': { bananas: true } as any\n\t\t};\n\n\t\tassert.strictEqual('**/*.js', glob.match(expression, 'test.js', hasSibling));\n\t\tassert.strictEqual('**/*.as', glob.match(expression, 'test.as', hasSibling));\n\t\tassert.strictEqual('**/*.bananas', glob.match(expression, 'test.bananas', hasSibling));\n\t\tassert.strictEqual('**/*.bananas', glob.match(expression, 'test.bananas'));\n\t\tassert.strictEqual(glob.match(expression, 'test.foo', hasSibling), null);\n\t});\n\n\ttest('brackets', () => {\n\t\tlet p = 'foo.[0-9]';\n\n\t\tassertGlobMatch(p, 'foo.5');\n\t\tassertGlobMatch(p, 'foo.8');\n\t\tassertNoGlobMatch(p, 'bar.5');\n\t\tassertNoGlobMatch(p, 'foo.f');\n\n\t\tp = 'foo.[^0-9]';\n\n\t\tassertNoGlobMatch(p, 'foo.5');\n\t\tassertNoGlobMatch(p, 'foo.8');\n\t\tassertNoGlobMatch(p, 'bar.5');\n\t\tassertGlobMatch(p, 'foo.f');\n\n\t\tp = 'foo.[!0-9]';\n\n\t\tassertNoGlobMatch(p, 'foo.5');\n\t\tassertNoGlobMatch(p, 'foo.8');\n\t\tassertNoGlobMatch(p, 'bar.5');\n\t\tassertGlobMatch(p, 'foo.f');\n\n\t\tp = 'foo.[0!^*?]';\n\n\t\tassertNoGlobMatch(p, 'foo.5');\n\t\tassertNoGlobMatch(p, 'foo.8');\n\t\tassertGlobMatch(p, 'foo.0');\n\t\tassertGlobMatch(p, 'foo.!');\n\t\tassertGlobMatch(p, 'foo.^');\n\t\tassertGlobMatch(p, 'foo.*');\n\t\tassertGlobMatch(p, 'foo.?');\n\n\t\tp = 'foo[/]bar';\n\n\t\tassertNoGlobMatch(p, 'foo/bar');\n\n\t\tp = 'foo.[[]';\n\n\t\tassertGlobMatch(p, 'foo.[');\n\n\t\tp = 'foo.[]]';\n\n\t\tassertGlobMatch(p, 'foo.]');\n\n\t\tp = 'foo.[][!]';\n\n\t\tassertGlobMatch(p, 'foo.]');\n\t\tassertGlobMatch(p, 'foo.[');\n\t\tassertGlobMatch(p, 'foo.!');\n\n\t\tp = 'foo.[]-]';\n\n\t\tassertGlobMatch(p, 'foo.]');\n\t\tassertGlobMatch(p, 'foo.-');\n\t});\n\n\ttest('full path', function () {\n\t\tassertGlobMatch('testing/this/foo.txt', 'testing/this/foo.txt');\n\t});\n\n\ttest('ending path', function () {\n\t\tassertGlobMatch('**/testing/this/foo.txt', 'some/path/testing/this/foo.txt');\n\t});\n\n\ttest('prefix agnostic', function () {\n\t\tlet p = '**/*.js';\n\n\t\tassertGlobMatch(p, 'foo.js');\n\t\tassertGlobMatch(p, '/foo.js');\n\t\tassertGlobMatch(p, '\\\\foo.js');\n\t\tassertGlobMatch(p, 'testing/foo.js');\n\t\tassertGlobMatch(p, 'testing\\\\foo.js');\n\t\tassertGlobMatch(p, '/testing/foo.js');\n\t\tassertGlobMatch(p, '\\\\testing\\\\foo.js');\n\t\tassertGlobMatch(p, 'C:\\\\testing\\\\foo.js');\n\n\t\tassertNoGlobMatch(p, 'foo.ts');\n\t\tassertNoGlobMatch(p, 'testing/foo.ts');\n\t\tassertNoGlobMatch(p, 'testing\\\\foo.ts');\n\t\tassertNoGlobMatch(p, '/testing/foo.ts');\n\t\tassertNoGlobMatch(p, '\\\\testing\\\\foo.ts');\n\t\tassertNoGlobMatch(p, 'C:\\\\testing\\\\foo.ts');\n\n\t\tassertNoGlobMatch(p, 'foo.js.txt');\n\t\tassertNoGlobMatch(p, 'testing/foo.js.txt');\n\t\tassertNoGlobMatch(p, 'testing\\\\foo.js.txt');\n\t\tassertNoGlobMatch(p, '/testing/foo.js.txt');\n\t\tassertNoGlobMatch(p, '\\\\testing\\\\foo.js.txt');\n\t\tassertNoGlobMatch(p, 'C:\\\\testing\\\\foo.js.txt');\n\n\t\tassertNoGlobMatch(p, 'testing.js/foo');\n\t\tassertNoGlobMatch(p, 'testing.js\\\\foo');\n\t\tassertNoGlobMatch(p, '/testing.js/foo');\n\t\tassertNoGlobMatch(p, '\\\\testing.js\\\\foo');\n\t\tassertNoGlobMatch(p, 'C:\\\\testing.js\\\\foo');\n\n\t\tp = '**/foo.js';\n\n\t\tassertGlobMatch(p, 'foo.js');\n\t\tassertGlobMatch(p, '/foo.js');\n\t\tassertGlobMatch(p, '\\\\foo.js');\n\t\tassertGlobMatch(p, 'testing/foo.js');\n\t\tassertGlobMatch(p, 'testing\\\\foo.js');\n\t\tassertGlobMatch(p, '/testing/foo.js');\n\t\tassertGlobMatch(p, '\\\\testing\\\\foo.js');\n\t\tassertGlobMatch(p, 'C:\\\\testing\\\\foo.js');\n\t});\n\n\ttest('cached properly', function () {\n\t\tconst p = '**/*.js';\n\n\t\tassertGlobMatch(p, 'foo.js');\n\t\tassertGlobMatch(p, 'testing/foo.js');\n\t\tassertGlobMatch(p, 'testing\\\\foo.js');\n\t\tassertGlobMatch(p, '/testing/foo.js');\n\t\tassertGlobMatch(p, '\\\\testing\\\\foo.js');\n\t\tassertGlobMatch(p, 'C:\\\\testing\\\\foo.js');\n\n\t\tassertNoGlobMatch(p, 'foo.ts');\n\t\tassertNoGlobMatch(p, 'testing/foo.ts');\n\t\tassertNoGlobMatch(p, 'testing\\\\foo.ts');\n\t\tassertNoGlobMatch(p, '/testing/foo.ts');\n\t\tassertNoGlobMatch(p, '\\\\testing\\\\foo.ts');\n\t\tassertNoGlobMatch(p, 'C:\\\\testing\\\\foo.ts');\n\n\t\tassertNoGlobMatch(p, 'foo.js.txt');\n\t\tassertNoGlobMatch(p, 'testing/foo.js.txt');\n\t\tassertNoGlobMatch(p, 'testing\\\\foo.js.txt');\n\t\tassertNoGlobMatch(p, '/testing/foo.js.txt');\n\t\tassertNoGlobMatch(p, '\\\\testing\\\\foo.js.txt');\n\t\tassertNoGlobMatch(p, 'C:\\\\testing\\\\foo.js.txt');\n\n\t\tassertNoGlobMatch(p, 'testing.js/foo');\n\t\tassertNoGlobMatch(p, 'testing.js\\\\foo');\n\t\tassertNoGlobMatch(p, '/testing.js/foo');\n\t\tassertNoGlobMatch(p, '\\\\testing.js\\\\foo');\n\t\tassertNoGlobMatch(p, 'C:\\\\testing.js\\\\foo');\n\n\t\t// Run again and make sure the regex are properly reused\n\n\t\tassertGlobMatch(p, 'foo.js');\n\t\tassertGlobMatch(p, 'testing/foo.js');\n\t\tassertGlobMatch(p, 'testing\\\\foo.js');\n\t\tassertGlobMatch(p, '/testing/foo.js');\n\t\tassertGlobMatch(p, '\\\\testing\\\\foo.js');\n\t\tassertGlobMatch(p, 'C:\\\\testing\\\\foo.js');\n\n\t\tassertNoGlobMatch(p, 'foo.ts');\n\t\tassertNoGlobMatch(p, 'testing/foo.ts');\n\t\tassertNoGlobMatch(p, 'testing\\\\foo.ts');\n\t\tassertNoGlobMatch(p, '/testing/foo.ts');\n\t\tassertNoGlobMatch(p, '\\\\testing\\\\foo.ts');\n\t\tassertNoGlobMatch(p, 'C:\\\\testing\\\\foo.ts');\n\n\t\tassertNoGlobMatch(p, 'foo.js.txt');\n\t\tassertNoGlobMatch(p, 'testing/foo.js.txt');\n\t\tassertNoGlobMatch(p, 'testing\\\\foo.js.txt');\n\t\tassertNoGlobMatch(p, '/testing/foo.js.txt');\n\t\tassertNoGlobMatch(p, '\\\\testing\\\\foo.js.txt');\n\t\tassertNoGlobMatch(p, 'C:\\\\testing\\\\foo.js.txt');\n\n\t\tassertNoGlobMatch(p, 'testing.js/foo');\n\t\tassertNoGlobMatch(p, 'testing.js\\\\foo');\n\t\tassertNoGlobMatch(p, '/testing.js/foo');\n\t\tassertNoGlobMatch(p, '\\\\testing.js\\\\foo');\n\t\tassertNoGlobMatch(p, 'C:\\\\testing.js\\\\foo');\n\t});\n\n\ttest('invalid glob', function () {\n\t\tconst p = '**/*(.js';\n\n\t\tassertNoGlobMatch(p, 'foo.js');\n\t});\n\n\ttest('split glob aware', function () {\n\t\tassert.deepStrictEqual(glob.splitGlobAware('foo,bar', ','), ['foo', 'bar']);\n\t\tassert.deepStrictEqual(glob.splitGlobAware('foo', ','), ['foo']);\n\t\tassert.deepStrictEqual(glob.splitGlobAware('{foo,bar}', ','), ['{foo,bar}']);\n\t\tassert.deepStrictEqual(glob.splitGlobAware('foo,bar,{foo,bar}', ','), ['foo', 'bar', '{foo,bar}']);\n\t\tassert.deepStrictEqual(glob.splitGlobAware('{foo,bar},foo,bar,{foo,bar}', ','), ['{foo,bar}', 'foo', 'bar', '{foo,bar}']);\n\n\t\tassert.deepStrictEqual(glob.splitGlobAware('[foo,bar]', ','), ['[foo,bar]']);\n\t\tassert.deepStrictEqual(glob.splitGlobAware('foo,bar,[foo,bar]', ','), ['foo', 'bar', '[foo,bar]']);\n\t\tassert.deepStrictEqual(glob.splitGlobAware('[foo,bar],foo,bar,[foo,bar]', ','), ['[foo,bar]', 'foo', 'bar', '[foo,bar]']);\n\t});\n\n\ttest('expression with disabled glob', function () {\n\t\tconst expr = { '**/*.js': false };\n\n\t\tassert.strictEqual(glob.match(expr, 'foo.js'), null);\n\t});\n\n\ttest('expression with two non-trivia globs', function () {\n\t\tconst expr = {\n\t\t\t'**/*.j?': true,\n\t\t\t'**/*.t?': true\n\t\t};\n\n\t\tassert.strictEqual(glob.match(expr, 'foo.js'), '**/*.j?');\n\t\tassert.strictEqual(glob.match(expr, 'foo.as'), null);\n\t});\n\n\ttest('expression with non-trivia glob (issue 144458)', function () {\n\t\tconst pattern = '**/p*';\n\n\t\tassert.strictEqual(glob.match(pattern, 'foo/barp'), false);\n\t\tassert.strictEqual(glob.match(pattern, 'foo/bar/ap'), false);\n\t\tassert.strictEqual(glob.match(pattern, 'ap'), false);\n\n\t\tassert.strictEqual(glob.match(pattern, 'foo/barp1'), false);\n\t\tassert.strictEqual(glob.match(pattern, 'foo/bar/ap1'), false);\n\t\tassert.strictEqual(glob.match(pattern, 'ap1'), false);\n\n\t\tassert.strictEqual(glob.match(pattern, '/foo/barp'), false);\n\t\tassert.strictEqual(glob.match(pattern, '/foo/bar/ap'), false);\n\t\tassert.strictEqual(glob.match(pattern, '/ap'), false);\n\n\t\tassert.strictEqual(glob.match(pattern, '/foo/barp1'), false);\n\t\tassert.strictEqual(glob.match(pattern, '/foo/bar/ap1'), false);\n\t\tassert.strictEqual(glob.match(pattern, '/ap1'), false);\n\n\t\tassert.strictEqual(glob.match(pattern, 'foo/pbar'), true);\n\t\tassert.strictEqual(glob.match(pattern, '/foo/pbar'), true);\n\t\tassert.strictEqual(glob.match(pattern, 'foo/bar/pa'), true);\n\t\tassert.strictEqual(glob.match(pattern, '/p'), true);\n\t});\n\n\ttest('expression with empty glob', function () {\n\t\tconst expr = { '': true };\n\n\t\tassert.strictEqual(glob.match(expr, 'foo.js'), null);\n\t});\n\n\ttest('expression with other falsy value', function () {\n\t\tconst expr = { '**/*.js': 0 } as any;\n\n\t\tassert.strictEqual(glob.match(expr, 'foo.js'), '**/*.js');\n\t});\n\n\ttest('expression with two basename globs', function () {\n\t\tconst expr = {\n\t\t\t'**/bar': true,\n\t\t\t'**/baz': true\n\t\t};\n\n\t\tassert.strictEqual(glob.match(expr, 'bar'), '**/bar');\n\t\tassert.strictEqual(glob.match(expr, 'foo'), null);\n\t\tassert.strictEqual(glob.match(expr, 'foo/bar'), '**/bar');\n\t\tassert.strictEqual(glob.match(expr, 'foo\\\\bar'), '**/bar');\n\t\tassert.strictEqual(glob.match(expr, 'foo/foo'), null);\n\t});\n\n\ttest('expression with two basename globs and a siblings expression', function () {\n\t\tconst expr = {\n\t\t\t'**/bar': true,\n\t\t\t'**/baz': true,\n\t\t\t'**/*.js': { when: '$(basename).ts' }\n\t\t};\n\n\t\tconst siblings = ['foo.ts', 'foo.js', 'foo', 'bar'];\n\t\tconst hasSibling = (name: string) => siblings.indexOf(name) !== -1;\n\n\t\tassert.strictEqual(glob.match(expr, 'bar', hasSibling), '**/bar');\n\t\tassert.strictEqual(glob.match(expr, 'foo', hasSibling), null);\n\t\tassert.strictEqual(glob.match(expr, 'foo/bar', hasSibling), '**/bar');\n\t\tif (isWindows) {\n\t\t\t// backslash is a valid file name character on posix\n\t\t\tassert.strictEqual(glob.match(expr, 'foo\\\\bar', hasSibling), '**/bar');\n\t\t}\n\t\tassert.strictEqual(glob.match(expr, 'foo/foo', hasSibling), null);\n\t\tassert.strictEqual(glob.match(expr, 'foo.js', hasSibling), '**/*.js');\n\t\tassert.strictEqual(glob.match(expr, 'bar.js', hasSibling), null);\n\t});\n\n\ttest('expression with multipe basename globs', function () {\n\t\tconst expr = {\n\t\t\t'**/bar': true,\n\t\t\t'{**/baz,**/foo}': true\n\t\t};\n\n\t\tassert.strictEqual(glob.match(expr, 'bar'), '**/bar');\n\t\tassert.strictEqual(glob.match(expr, 'foo'), '{**/baz,**/foo}');\n\t\tassert.strictEqual(glob.match(expr, 'baz'), '{**/baz,**/foo}');\n\t\tassert.strictEqual(glob.match(expr, 'abc'), null);\n\t});\n\n\ttest('falsy expression/pattern', function () {\n\t\tassert.strictEqual(glob.match(null!, 'foo'), false);\n\t\tassert.strictEqual(glob.match('', 'foo'), false);\n\t\tassert.strictEqual(glob.parse(null!)('foo'), false);\n\t\tassert.strictEqual(glob.parse('')('foo'), false);\n\t});\n\n\ttest('falsy path', function () {\n\t\tassert.strictEqual(glob.parse('foo')(null!), false);\n\t\tassert.strictEqual(glob.parse('foo')(''), false);\n\t\tassert.strictEqual(glob.parse('**/*.j?')(null!), false);\n\t\tassert.strictEqual(glob.parse('**/*.j?')(''), false);\n\t\tassert.strictEqual(glob.parse('**/*.foo')(null!), false);\n\t\tassert.strictEqual(glob.parse('**/*.foo')(''), false);\n\t\tassert.strictEqual(glob.parse('**/foo')(null!), false);\n\t\tassert.strictEqual(glob.parse('**/foo')(''), false);\n\t\tassert.strictEqual(glob.parse('{**/baz,**/foo}')(null!), false);\n\t\tassert.strictEqual(glob.parse('{**/baz,**/foo}')(''), false);\n\t\tassert.strictEqual(glob.parse('{**/*.baz,**/*.foo}')(null!), false);\n\t\tassert.strictEqual(glob.parse('{**/*.baz,**/*.foo}')(''), false);\n\t});\n\n\ttest('expression/pattern basename', function () {\n\t\tassert.strictEqual(glob.parse('**/foo')('bar/baz', 'baz'), false);\n\t\tassert.strictEqual(glob.parse('**/foo')('bar/foo', 'foo'), true);\n\n\t\tassert.strictEqual(glob.parse('{**/baz,**/foo}')('baz/bar', 'bar'), false);\n\t\tassert.strictEqual(glob.parse('{**/baz,**/foo}')('baz/foo', 'foo'), true);\n\n\t\tconst expr = { '**/*.js': { when: '$(basename).ts' } };\n\t\tconst siblings = ['foo.ts', 'foo.js'];\n\t\tconst hasSibling = (name: string) => siblings.indexOf(name) !== -1;\n\n\t\tassert.strictEqual(glob.parse(expr)('bar/baz.js', 'baz.js', hasSibling), null);\n\t\tassert.strictEqual(glob.parse(expr)('bar/foo.js', 'foo.js', hasSibling), '**/*.js');\n\t});\n\n\ttest('expression/pattern basename terms', function () {\n\t\tassert.deepStrictEqual(glob.getBasenameTerms(glob.parse('**/*.foo')), []);\n\t\tassert.deepStrictEqual(glob.getBasenameTerms(glob.parse('**/foo')), ['foo']);\n\t\tassert.deepStrictEqual(glob.getBasenameTerms(glob.parse('**/foo/')), ['foo']);\n\t\tassert.deepStrictEqual(glob.getBasenameTerms(glob.parse('{**/baz,**/foo}')), ['baz', 'foo']);\n\t\tassert.deepStrictEqual(glob.getBasenameTerms(glob.parse('{**/baz/,**/foo/}')), ['baz', 'foo']);\n\n\t\tassert.deepStrictEqual(glob.getBasenameTerms(glob.parse({\n\t\t\t'**/foo': true,\n\t\t\t'{**/bar,**/baz}': true,\n\t\t\t'{**/bar2/,**/baz2/}': true,\n\t\t\t'**/bulb': false\n\t\t})), ['foo', 'bar', 'baz', 'bar2', 'baz2']);\n\t\tassert.deepStrictEqual(glob.getBasenameTerms(glob.parse({\n\t\t\t'**/foo': { when: '$(basename).zip' },\n\t\t\t'**/bar': true\n\t\t})), ['bar']);\n\t});\n\n\ttest('expression/pattern optimization for basenames', function () {\n\t\tassert.deepStrictEqual(glob.getBasenameTerms(glob.parse('**/foo/**')), []);\n\t\tassert.deepStrictEqual(glob.getBasenameTerms(glob.parse('**/foo/**', { trimForExclusions: true })), ['foo']);\n\n\t\ttestOptimizationForBasenames('**/*.foo/**', [], [['baz/bar.foo/bar/baz', true]]);\n\t\ttestOptimizationForBasenames('**/foo/**', ['foo'], [['bar/foo', true], ['bar/foo/baz', false]]);\n\t\ttestOptimizationForBasenames('{**/baz/**,**/foo/**}', ['baz', 'foo'], [['bar/baz', true], ['bar/foo', true]]);\n\n\t\ttestOptimizationForBasenames({\n\t\t\t'**/foo/**': true,\n\t\t\t'{**/bar/**,**/baz/**}': true,\n\t\t\t'**/bulb/**': false\n\t\t}, ['foo', 'bar', 'baz'], [\n\t\t\t['bar/foo', '**/foo/**'],\n\t\t\t['foo/bar', '{**/bar/**,**/baz/**}'],\n\t\t\t['bar/nope', null!]\n\t\t]);\n\n\t\tconst siblings = ['baz', 'baz.zip', 'nope'];\n\t\tconst hasSibling = (name: string) => siblings.indexOf(name) !== -1;\n\t\ttestOptimizationForBasenames({\n\t\t\t'**/foo/**': { when: '$(basename).zip' },\n\t\t\t'**/bar/**': true\n\t\t}, ['bar'], [\n\t\t\t['bar/foo', null!],\n\t\t\t['bar/foo/baz', null!],\n\t\t\t['bar/foo/nope', null!],\n\t\t\t['foo/bar', '**/bar/**'],\n\t\t], [\n\t\t\tnull!,\n\t\t\thasSibling,\n\t\t\thasSibling\n\t\t]);\n\t});\n\n\tfunction testOptimizationForBasenames(pattern: string | glob.IExpression, basenameTerms: string[], matches: [string, string | boolean][], siblingsFns: ((name: string) => boolean)[] = []) {\n\t\tconst parsed = glob.parse(<glob.IExpression>pattern, { trimForExclusions: true });\n\t\tassert.deepStrictEqual(glob.getBasenameTerms(parsed), basenameTerms);\n\t\tmatches.forEach(([text, result], i) => {\n\t\t\tassert.strictEqual(parsed(text, null!, siblingsFns[i]), result);\n\t\t});\n\t}\n\n\ttest('trailing slash', function () {\n\t\t// Testing existing (more or less intuitive) behavior\n\t\tassert.strictEqual(glob.parse('**/foo/')('bar/baz', 'baz'), false);\n\t\tassert.strictEqual(glob.parse('**/foo/')('bar/foo', 'foo'), true);\n\t\tassert.strictEqual(glob.parse('**/*.foo/')('bar/file.baz', 'file.baz'), false);\n\t\tassert.strictEqual(glob.parse('**/*.foo/')('bar/file.foo', 'file.foo'), true);\n\t\tassert.strictEqual(glob.parse('{**/foo/,**/abc/}')('bar/baz', 'baz'), false);\n\t\tassert.strictEqual(glob.parse('{**/foo/,**/abc/}')('bar/foo', 'foo'), true);\n\t\tassert.strictEqual(glob.parse('{**/foo/,**/abc/}')('bar/abc', 'abc'), true);\n\t\tassert.strictEqual(glob.parse('{**/foo/,**/abc/}', { trimForExclusions: true })('bar/baz', 'baz'), false);\n\t\tassert.strictEqual(glob.parse('{**/foo/,**/abc/}', { trimForExclusions: true })('bar/foo', 'foo'), true);\n\t\tassert.strictEqual(glob.parse('{**/foo/,**/abc/}', { trimForExclusions: true })('bar/abc', 'abc'), true);\n\t});\n\n\ttest('expression/pattern path', function () {\n\t\tassert.strictEqual(glob.parse('**/foo/bar')(nativeSep('foo/baz'), 'baz'), false);\n\t\tassert.strictEqual(glob.parse('**/foo/bar')(nativeSep('foo/bar'), 'bar'), true);\n\t\tassert.strictEqual(glob.parse('**/foo/bar')(nativeSep('bar/foo/bar'), 'bar'), true);\n\t\tassert.strictEqual(glob.parse('**/foo/bar/**')(nativeSep('bar/foo/bar'), 'bar'), true);\n\t\tassert.strictEqual(glob.parse('**/foo/bar/**')(nativeSep('bar/foo/bar/baz'), 'baz'), true);\n\t\tassert.strictEqual(glob.parse('**/foo/bar/**', { trimForExclusions: true })(nativeSep('bar/foo/bar'), 'bar'), true);\n\t\tassert.strictEqual(glob.parse('**/foo/bar/**', { trimForExclusions: true })(nativeSep('bar/foo/bar/baz'), 'baz'), false);\n\n\t\tassert.strictEqual(glob.parse('foo/bar')(nativeSep('foo/baz'), 'baz'), false);\n\t\tassert.strictEqual(glob.parse('foo/bar')(nativeSep('foo/bar'), 'bar'), true);\n\t\tassert.strictEqual(glob.parse('foo/bar/baz')(nativeSep('foo/bar/baz'), 'baz'), true); // #15424\n\t\tassert.strictEqual(glob.parse('foo/bar')(nativeSep('bar/foo/bar'), 'bar'), false);\n\t\tassert.strictEqual(glob.parse('foo/bar/**')(nativeSep('foo/bar/baz'), 'baz'), true);\n\t\tassert.strictEqual(glob.parse('foo/bar/**', { trimForExclusions: true })(nativeSep('foo/bar'), 'bar'), true);\n\t\tassert.strictEqual(glob.parse('foo/bar/**', { trimForExclusions: true })(nativeSep('foo/bar/baz'), 'baz'), false);\n\t});\n\n\ttest('expression/pattern paths', function () {\n\t\tassert.deepStrictEqual(glob.getPathTerms(glob.parse('**/*.foo')), []);\n\t\tassert.deepStrictEqual(glob.getPathTerms(glob.parse('**/foo')), []);\n\t\tassert.deepStrictEqual(glob.getPathTerms(glob.parse('**/foo/bar')), ['*/foo/bar']);\n\t\tassert.deepStrictEqual(glob.getPathTerms(glob.parse('**/foo/bar/')), ['*/foo/bar']);\n\t\t// Not supported\n\t\t// assert.deepStrictEqual(glob.getPathTerms(glob.parse('{**/baz/bar,**/foo/bar,**/bar}')), ['*/baz/bar', '*/foo/bar']);\n\t\t// assert.deepStrictEqual(glob.getPathTerms(glob.parse('{**/baz/bar/,**/foo/bar/,**/bar/}')), ['*/baz/bar', '*/foo/bar']);\n\n\t\tconst parsed = glob.parse({\n\t\t\t'**/foo/bar': true,\n\t\t\t'**/foo2/bar2': true,\n\t\t\t// Not supported\n\t\t\t// '{**/bar/foo,**/baz/foo}': true,\n\t\t\t// '{**/bar2/foo/,**/baz2/foo/}': true,\n\t\t\t'**/bulb': true,\n\t\t\t'**/bulb2': true,\n\t\t\t'**/bulb/foo': false\n\t\t});\n\t\tassert.deepStrictEqual(glob.getPathTerms(parsed), ['*/foo/bar', '*/foo2/bar2']);\n\t\tassert.deepStrictEqual(glob.getBasenameTerms(parsed), ['bulb', 'bulb2']);\n\t\tassert.deepStrictEqual(glob.getPathTerms(glob.parse({\n\t\t\t'**/foo/bar': { when: '$(basename).zip' },\n\t\t\t'**/bar/foo': true,\n\t\t\t'**/bar2/foo2': true\n\t\t})), ['*/bar/foo', '*/bar2/foo2']);\n\t});\n\n\ttest('expression/pattern optimization for paths', function () {\n\t\tassert.deepStrictEqual(glob.getPathTerms(glob.parse('**/foo/bar/**')), []);\n\t\tassert.deepStrictEqual(glob.getPathTerms(glob.parse('**/foo/bar/**', { trimForExclusions: true })), ['*/foo/bar']);\n\n\t\ttestOptimizationForPaths('**/*.foo/bar/**', [], [[nativeSep('baz/bar.foo/bar/baz'), true]]);\n\t\ttestOptimizationForPaths('**/foo/bar/**', ['*/foo/bar'], [[nativeSep('bar/foo/bar'), true], [nativeSep('bar/foo/bar/baz'), false]]);\n\t\t// Not supported\n\t\t// testOptimizationForPaths('{**/baz/bar/**,**/foo/bar/**}', ['*/baz/bar', '*/foo/bar'], [[nativeSep('bar/baz/bar'), true], [nativeSep('bar/foo/bar'), true]]);\n\n\t\ttestOptimizationForPaths({\n\t\t\t'**/foo/bar/**': true,\n\t\t\t// Not supported\n\t\t\t// '{**/bar/bar/**,**/baz/bar/**}': true,\n\t\t\t'**/bulb/bar/**': false\n\t\t}, ['*/foo/bar'], [\n\t\t\t[nativeSep('bar/foo/bar'), '**/foo/bar/**'],\n\t\t\t// Not supported\n\t\t\t// [nativeSep('foo/bar/bar'), '{**/bar/bar/**,**/baz/bar/**}'],\n\t\t\t[nativeSep('/foo/bar/nope'), null!]\n\t\t]);\n\n\t\tconst siblings = ['baz', 'baz.zip', 'nope'];\n\t\tconst hasSibling = (name: string) => siblings.indexOf(name) !== -1;\n\t\ttestOptimizationForPaths({\n\t\t\t'**/foo/123/**': { when: '$(basename).zip' },\n\t\t\t'**/bar/123/**': true\n\t\t}, ['*/bar/123'], [\n\t\t\t[nativeSep('bar/foo/123'), null!],\n\t\t\t[nativeSep('bar/foo/123/baz'), null!],\n\t\t\t[nativeSep('bar/foo/123/nope'), null!],\n\t\t\t[nativeSep('foo/bar/123'), '**/bar/123/**'],\n\t\t], [\n\t\t\tnull!,\n\t\t\thasSibling,\n\t\t\thasSibling\n\t\t]);\n\t});\n\n\tfunction testOptimizationForPaths(pattern: string | glob.IExpression, pathTerms: string[], matches: [string, string | boolean][], siblingsFns: ((name: string) => boolean)[] = []) {\n\t\tconst parsed = glob.parse(<glob.IExpression>pattern, { trimForExclusions: true });\n\t\tassert.deepStrictEqual(glob.getPathTerms(parsed), pathTerms);\n\t\tmatches.forEach(([text, result], i) => {\n\t\t\tassert.strictEqual(parsed(text, null!, siblingsFns[i]), result);\n\t\t});\n\t}\n\n\tfunction nativeSep(slashPath: string): string {\n\t\treturn slashPath.replace(/\\//g, sep);\n\t}\n\n\ttest('relative pattern - glob star', function () {\n\t\tif (isWindows) {\n\t\t\tconst p: glob.IRelativePattern = { base: 'C:\\\\DNXConsoleApp\\\\foo', pattern: '**/*.cs' };\n\t\t\tassertGlobMatch(p, 'C:\\\\DNXConsoleApp\\\\foo\\\\Program.cs');\n\t\t\tassertGlobMatch(p, 'C:\\\\DNXConsoleApp\\\\foo\\\\bar\\\\Program.cs');\n\t\t\tassertNoGlobMatch(p, 'C:\\\\DNXConsoleApp\\\\foo\\\\Program.ts');\n\t\t\tassertNoGlobMatch(p, 'C:\\\\DNXConsoleApp\\\\Program.cs');\n\t\t\tassertNoGlobMatch(p, 'C:\\\\other\\\\DNXConsoleApp\\\\foo\\\\Program.ts');\n\t\t} else {\n\t\t\tconst p: glob.IRelativePattern = { base: '/DNXConsoleApp/foo', pattern: '**/*.cs' };\n\t\t\tassertGlobMatch(p, '/DNXConsoleApp/foo/Program.cs');\n\t\t\tassertGlobMatch(p, '/DNXConsoleApp/foo/bar/Program.cs');\n\t\t\tassertNoGlobMatch(p, '/DNXConsoleApp/foo/Program.ts');\n\t\t\tassertNoGlobMatch(p, '/DNXConsoleApp/Program.cs');\n\t\t\tassertNoGlobMatch(p, '/other/DNXConsoleApp/foo/Program.ts');\n\t\t}\n\t});\n\n\ttest('relative pattern - single star', function () {\n\t\tif (isWindows) {\n\t\t\tconst p: glob.IRelativePattern = { base: 'C:\\\\DNXConsoleApp\\\\foo', pattern: '*.cs' };\n\t\t\tassertGlobMatch(p, 'C:\\\\DNXConsoleApp\\\\foo\\\\Program.cs');\n\t\t\tassertNoGlobMatch(p, 'C:\\\\DNXConsoleApp\\\\foo\\\\bar\\\\Program.cs');\n\t\t\tassertNoGlobMatch(p, 'C:\\\\DNXConsoleApp\\\\foo\\\\Program.ts');\n\t\t\tassertNoGlobMatch(p, 'C:\\\\DNXConsoleApp\\\\Program.cs');\n\t\t\tassertNoGlobMatch(p, 'C:\\\\other\\\\DNXConsoleApp\\\\foo\\\\Program.ts');\n\t\t} else {\n\t\t\tconst p: glob.IRelativePattern = { base: '/DNXConsoleApp/foo', pattern: '*.cs' };\n\t\t\tassertGlobMatch(p, '/DNXConsoleApp/foo/Program.cs');\n\t\t\tassertNoGlobMatch(p, '/DNXConsoleApp/foo/bar/Program.cs');\n\t\t\tassertNoGlobMatch(p, '/DNXConsoleApp/foo/Program.ts');\n\t\t\tassertNoGlobMatch(p, '/DNXConsoleApp/Program.cs');\n\t\t\tassertNoGlobMatch(p, '/other/DNXConsoleApp/foo/Program.ts');\n\t\t}\n\t});\n\n\ttest('relative pattern - single star with path', function () {\n\t\tif (isWindows) {\n\t\t\tconst p: glob.IRelativePattern = { base: 'C:\\\\DNXConsoleApp\\\\foo', pattern: 'something/*.cs' };\n\t\t\tassertGlobMatch(p, 'C:\\\\DNXConsoleApp\\\\foo\\\\something\\\\Program.cs');\n\t\t\tassertNoGlobMatch(p, 'C:\\\\DNXConsoleApp\\\\foo\\\\Program.cs');\n\t\t} else {\n\t\t\tconst p: glob.IRelativePattern = { base: '/DNXConsoleApp/foo', pattern: 'something/*.cs' };\n\t\t\tassertGlobMatch(p, '/DNXConsoleApp/foo/something/Program.cs');\n\t\t\tassertNoGlobMatch(p, '/DNXConsoleApp/foo/Program.cs');\n\t\t}\n\t});\n\n\ttest('relative pattern - single star alone', function () {\n\t\tif (isWindows) {\n\t\t\tconst p: glob.IRelativePattern = { base: 'C:\\\\DNXConsoleApp\\\\foo\\\\something\\\\Program.cs', pattern: '*' };\n\t\t\tassertGlobMatch(p, 'C:\\\\DNXConsoleApp\\\\foo\\\\something\\\\Program.cs');\n\t\t\tassertNoGlobMatch(p, 'C:\\\\DNXConsoleApp\\\\foo\\\\Program.cs');\n\t\t} else {\n\t\t\tconst p: glob.IRelativePattern = { base: '/DNXConsoleApp/foo/something/Program.cs', pattern: '*' };\n\t\t\tassertGlobMatch(p, '/DNXConsoleApp/foo/something/Program.cs');\n\t\t\tassertNoGlobMatch(p, '/DNXConsoleApp/foo/Program.cs');\n\t\t}\n\t});\n\n\ttest('relative pattern - ignores case on macOS/Windows', function () {\n\t\tif (isWindows) {\n\t\t\tconst p: glob.IRelativePattern = { base: 'C:\\\\DNXConsoleApp\\\\foo', pattern: 'something/*.cs' };\n\t\t\tassertGlobMatch(p, 'C:\\\\DNXConsoleApp\\\\foo\\\\something\\\\Program.cs'.toLowerCase());\n\t\t} else if (isMacintosh) {\n\t\t\tconst p: glob.IRelativePattern = { base: '/DNXConsoleApp/foo', pattern: 'something/*.cs' };\n\t\t\tassertGlobMatch(p, '/DNXConsoleApp/foo/something/Program.cs'.toLowerCase());\n\t\t} else if (isLinux) {\n\t\t\tconst p: glob.IRelativePattern = { base: '/DNXConsoleApp/foo', pattern: 'something/*.cs' };\n\t\t\tassertNoGlobMatch(p, '/DNXConsoleApp/foo/something/Program.cs'.toLowerCase());\n\t\t}\n\t});\n\n\ttest('relative pattern - trailing slash / backslash (#162498)', function () {\n\t\tif (isWindows) {\n\t\t\tlet p: glob.IRelativePattern = { base: 'C:\\\\', pattern: 'foo.cs' };\n\t\t\tassertGlobMatch(p, 'C:\\\\foo.cs');\n\n\t\t\tp = { base: 'C:\\\\bar\\\\', pattern: 'foo.cs' };\n\t\t\tassertGlobMatch(p, 'C:\\\\bar\\\\foo.cs');\n\t\t} else {\n\t\t\tlet p: glob.IRelativePattern = { base: '/', pattern: 'foo.cs' };\n\t\t\tassertGlobMatch(p, '/foo.cs');\n\n\t\t\tp = { base: '/bar/', pattern: 'foo.cs' };\n\t\t\tassertGlobMatch(p, '/bar/foo.cs');\n\t\t}\n\t});\n\n\ttest('pattern with \"base\" does not explode - #36081', function () {\n\t\tassert.ok(glob.match({ 'base': true }, 'base'));\n\t});\n\n\ttest('relative pattern - #57475', function () {\n\t\tif (isWindows) {\n\t\t\tconst p: glob.IRelativePattern = { base: 'C:\\\\DNXConsoleApp\\\\foo', pattern: 'styles/style.css' };\n\t\t\tassertGlobMatch(p, 'C:\\\\DNXConsoleApp\\\\foo\\\\styles\\\\style.css');\n\t\t\tassertNoGlobMatch(p, 'C:\\\\DNXConsoleApp\\\\foo\\\\Program.cs');\n\t\t} else {\n\t\t\tconst p: glob.IRelativePattern = { base: '/DNXConsoleApp/foo', pattern: 'styles/style.css' };\n\t\t\tassertGlobMatch(p, '/DNXConsoleApp/foo/styles/style.css');\n\t\t\tassertNoGlobMatch(p, '/DNXConsoleApp/foo/Program.cs');\n\t\t}\n\t});\n\n\ttest('URI match', () => {\n\t\tconst p = 'scheme:/**/*.md';\n\t\tassertGlobMatch(p, URI.file('super/duper/long/some/file.md').with({ scheme: 'scheme' }).toString());\n\t});\n\n\ttest('expression fails when siblings use promises (https://github.com/microsoft/vscode/issues/146294)', async function () {\n\t\tconst siblings = ['test.html', 'test.txt', 'test.ts'];\n\t\tconst hasSibling = (name: string) => Promise.resolve(siblings.indexOf(name) !== -1);\n\n\t\t// { \"**/*.js\": { \"when\": \"$(basename).ts\" } }\n\t\tconst expression: glob.IExpression = {\n\t\t\t'**/test.js': { when: '$(basename).js' },\n\t\t\t'**/*.js': { when: '$(basename).ts' }\n\t\t};\n\n\t\tconst parsedExpression = glob.parse(expression);\n\n\t\tassert.strictEqual('**/*.js', await parsedExpression('test.js', undefined, hasSibling));\n\t});\n\n\ttest('patternsEquals', () => {\n\t\tassert.ok(glob.patternsEquals(['a'], ['a']));\n\t\tassert.ok(!glob.patternsEquals(['a'], ['b']));\n\n\t\tassert.ok(glob.patternsEquals(['a', 'b', 'c'], ['a', 'b', 'c']));\n\t\tassert.ok(!glob.patternsEquals(['1', '2'], ['1', '3']));\n\n\t\tassert.ok(glob.patternsEquals([{ base: 'a', pattern: '*' }, 'b', 'c'], [{ base: 'a', pattern: '*' }, 'b', 'c']));\n\n\t\tassert.ok(glob.patternsEquals(undefined, undefined));\n\t\tassert.ok(!glob.patternsEquals(undefined, ['b']));\n\t\tassert.ok(!glob.patternsEquals(['a'], undefined));\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"],
  "mappings": "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",
  "names": []
}
