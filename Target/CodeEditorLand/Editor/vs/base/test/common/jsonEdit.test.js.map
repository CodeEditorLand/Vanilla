{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/test/common/jsonEdit.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport assert from 'assert';\nimport { removeProperty, setProperty } from '../../common/jsonEdit.js';\nimport { Edit, FormattingOptions } from '../../common/jsonFormatter.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from './utils.js';\n\nsuite('JSON - edits', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tfunction assertEdit(content: string, edits: Edit[], expected: string) {\n\t\tassert(edits);\n\t\tlet lastEditOffset = content.length;\n\t\tfor (let i = edits.length - 1; i >= 0; i--) {\n\t\t\tconst edit = edits[i];\n\t\t\tassert(edit.offset >= 0 && edit.length >= 0 && edit.offset + edit.length <= content.length);\n\t\t\tassert(typeof edit.content === 'string');\n\t\t\tassert(lastEditOffset >= edit.offset + edit.length); // make sure all edits are ordered\n\t\t\tlastEditOffset = edit.offset;\n\t\t\tcontent = content.substring(0, edit.offset) + edit.content + content.substring(edit.offset + edit.length);\n\t\t}\n\t\tassert.strictEqual(content, expected);\n\t}\n\n\tconst formatterOptions: FormattingOptions = {\n\t\tinsertSpaces: true,\n\t\ttabSize: 2,\n\t\teol: '\\n'\n\t};\n\n\ttest('set property', () => {\n\t\tlet content = '{\\n  \"x\": \"y\"\\n}';\n\t\tlet edits = setProperty(content, ['x'], 'bar', formatterOptions);\n\t\tassertEdit(content, edits, '{\\n  \"x\": \"bar\"\\n}');\n\n\t\tcontent = 'true';\n\t\tedits = setProperty(content, [], 'bar', formatterOptions);\n\t\tassertEdit(content, edits, '\"bar\"');\n\n\t\tcontent = '{\\n  \"x\": \"y\"\\n}';\n\t\tedits = setProperty(content, ['x'], { key: true }, formatterOptions);\n\t\tassertEdit(content, edits, '{\\n  \"x\": {\\n    \"key\": true\\n  }\\n}');\n\t\tcontent = '{\\n  \"a\": \"b\",  \"x\": \"y\"\\n}';\n\t\tedits = setProperty(content, ['a'], null, formatterOptions);\n\t\tassertEdit(content, edits, '{\\n  \"a\": null,  \"x\": \"y\"\\n}');\n\t});\n\n\ttest('insert property', () => {\n\t\tlet content = '{}';\n\t\tlet edits = setProperty(content, ['foo'], 'bar', formatterOptions);\n\t\tassertEdit(content, edits, '{\\n  \"foo\": \"bar\"\\n}');\n\n\t\tedits = setProperty(content, ['foo', 'foo2'], 'bar', formatterOptions);\n\t\tassertEdit(content, edits, '{\\n  \"foo\": {\\n    \"foo2\": \"bar\"\\n  }\\n}');\n\n\t\tcontent = '{\\n}';\n\t\tedits = setProperty(content, ['foo'], 'bar', formatterOptions);\n\t\tassertEdit(content, edits, '{\\n  \"foo\": \"bar\"\\n}');\n\n\t\tcontent = '  {\\n  }';\n\t\tedits = setProperty(content, ['foo'], 'bar', formatterOptions);\n\t\tassertEdit(content, edits, '  {\\n    \"foo\": \"bar\"\\n  }');\n\n\t\tcontent = '{\\n  \"x\": \"y\"\\n}';\n\t\tedits = setProperty(content, ['foo'], 'bar', formatterOptions);\n\t\tassertEdit(content, edits, '{\\n  \"x\": \"y\",\\n  \"foo\": \"bar\"\\n}');\n\n\t\tcontent = '{\\n  \"x\": \"y\"\\n}';\n\t\tedits = setProperty(content, ['e'], 'null', formatterOptions);\n\t\tassertEdit(content, edits, '{\\n  \"x\": \"y\",\\n  \"e\": \"null\"\\n}');\n\n\t\tedits = setProperty(content, ['x'], 'bar', formatterOptions);\n\t\tassertEdit(content, edits, '{\\n  \"x\": \"bar\"\\n}');\n\n\t\tcontent = '{\\n  \"x\": {\\n    \"a\": 1,\\n    \"b\": true\\n  }\\n}\\n';\n\t\tedits = setProperty(content, ['x'], 'bar', formatterOptions);\n\t\tassertEdit(content, edits, '{\\n  \"x\": \"bar\"\\n}\\n');\n\n\t\tedits = setProperty(content, ['x', 'b'], 'bar', formatterOptions);\n\t\tassertEdit(content, edits, '{\\n  \"x\": {\\n    \"a\": 1,\\n    \"b\": \"bar\"\\n  }\\n}\\n');\n\n\t\tedits = setProperty(content, ['x', 'c'], 'bar', formatterOptions, () => 0);\n\t\tassertEdit(content, edits, '{\\n  \"x\": {\\n    \"c\": \"bar\",\\n    \"a\": 1,\\n    \"b\": true\\n  }\\n}\\n');\n\n\t\tedits = setProperty(content, ['x', 'c'], 'bar', formatterOptions, () => 1);\n\t\tassertEdit(content, edits, '{\\n  \"x\": {\\n    \"a\": 1,\\n    \"c\": \"bar\",\\n    \"b\": true\\n  }\\n}\\n');\n\n\t\tedits = setProperty(content, ['x', 'c'], 'bar', formatterOptions, () => 2);\n\t\tassertEdit(content, edits, '{\\n  \"x\": {\\n    \"a\": 1,\\n    \"b\": true,\\n    \"c\": \"bar\"\\n  }\\n}\\n');\n\n\t\tedits = setProperty(content, ['c'], 'bar', formatterOptions);\n\t\tassertEdit(content, edits, '{\\n  \"x\": {\\n    \"a\": 1,\\n    \"b\": true\\n  },\\n  \"c\": \"bar\"\\n}\\n');\n\n\t\tcontent = '{\\n  \"a\": [\\n    {\\n    } \\n  ]  \\n}';\n\t\tedits = setProperty(content, ['foo'], 'bar', formatterOptions);\n\t\tassertEdit(content, edits, '{\\n  \"a\": [\\n    {\\n    } \\n  ],\\n  \"foo\": \"bar\"\\n}');\n\n\t\tcontent = '';\n\t\tedits = setProperty(content, ['foo', 0], 'bar', formatterOptions);\n\t\tassertEdit(content, edits, '{\\n  \"foo\": [\\n    \"bar\"\\n  ]\\n}');\n\n\t\tcontent = '//comment';\n\t\tedits = setProperty(content, ['foo', 0], 'bar', formatterOptions);\n\t\tassertEdit(content, edits, '{\\n  \"foo\": [\\n    \"bar\"\\n  ]\\n} //comment');\n\t});\n\n\ttest('remove property', () => {\n\t\tlet content = '{\\n  \"x\": \"y\"\\n}';\n\t\tlet edits = removeProperty(content, ['x'], formatterOptions);\n\t\tassertEdit(content, edits, '{\\n}');\n\n\t\tcontent = '{\\n  \"x\": \"y\", \"a\": []\\n}';\n\t\tedits = removeProperty(content, ['x'], formatterOptions);\n\t\tassertEdit(content, edits, '{\\n  \"a\": []\\n}');\n\n\t\tcontent = '{\\n  \"x\": \"y\", \"a\": []\\n}';\n\t\tedits = removeProperty(content, ['a'], formatterOptions);\n\t\tassertEdit(content, edits, '{\\n  \"x\": \"y\"\\n}');\n\t});\n\n\ttest('insert item at 0', () => {\n\t\tconst content = '[\\n  2,\\n  3\\n]';\n\t\tconst edits = setProperty(content, [0], 1, formatterOptions);\n\t\tassertEdit(content, edits, '[\\n  1,\\n  2,\\n  3\\n]');\n\t});\n\n\ttest('insert item at 0 in empty array', () => {\n\t\tconst content = '[\\n]';\n\t\tconst edits = setProperty(content, [0], 1, formatterOptions);\n\t\tassertEdit(content, edits, '[\\n  1\\n]');\n\t});\n\n\ttest('insert item at an index', () => {\n\t\tconst content = '[\\n  1,\\n  3\\n]';\n\t\tconst edits = setProperty(content, [1], 2, formatterOptions);\n\t\tassertEdit(content, edits, '[\\n  1,\\n  2,\\n  3\\n]');\n\t});\n\n\ttest('insert item at an index im empty array', () => {\n\t\tconst content = '[\\n]';\n\t\tconst edits = setProperty(content, [1], 1, formatterOptions);\n\t\tassertEdit(content, edits, '[\\n  1\\n]');\n\t});\n\n\ttest('insert item at end index', () => {\n\t\tconst content = '[\\n  1,\\n  2\\n]';\n\t\tconst edits = setProperty(content, [2], 3, formatterOptions);\n\t\tassertEdit(content, edits, '[\\n  1,\\n  2,\\n  3\\n]');\n\t});\n\n\ttest('insert item at end to empty array', () => {\n\t\tconst content = '[\\n]';\n\t\tconst edits = setProperty(content, [-1], 'bar', formatterOptions);\n\t\tassertEdit(content, edits, '[\\n  \"bar\"\\n]');\n\t});\n\n\ttest('insert item at end', () => {\n\t\tconst content = '[\\n  1,\\n  2\\n]';\n\t\tconst edits = setProperty(content, [-1], 'bar', formatterOptions);\n\t\tassertEdit(content, edits, '[\\n  1,\\n  2,\\n  \"bar\"\\n]');\n\t});\n\n\ttest('remove item in array with one item', () => {\n\t\tconst content = '[\\n  1\\n]';\n\t\tconst edits = setProperty(content, [0], undefined, formatterOptions);\n\t\tassertEdit(content, edits, '[]');\n\t});\n\n\ttest('remove item in the middle of the array', () => {\n\t\tconst content = '[\\n  1,\\n  2,\\n  3\\n]';\n\t\tconst edits = setProperty(content, [1], undefined, formatterOptions);\n\t\tassertEdit(content, edits, '[\\n  1,\\n  3\\n]');\n\t});\n\n\ttest('remove last item in the array', () => {\n\t\tconst content = '[\\n  1,\\n  2,\\n  \"bar\"\\n]';\n\t\tconst edits = setProperty(content, [2], undefined, formatterOptions);\n\t\tassertEdit(content, edits, '[\\n  1,\\n  2\\n]');\n\t});\n\n\ttest('remove last item in the array if ends with comma', () => {\n\t\tconst content = '[\\n  1,\\n  \"foo\",\\n  \"bar\",\\n]';\n\t\tconst edits = setProperty(content, [2], undefined, formatterOptions);\n\t\tassertEdit(content, edits, '[\\n  1,\\n  \"foo\"\\n]');\n\t});\n\n\ttest('remove last item in the array if there is a comment in the beginning', () => {\n\t\tconst content = '// This is a comment\\n[\\n  1,\\n  \"foo\",\\n  \"bar\"\\n]';\n\t\tconst edits = setProperty(content, [2], undefined, formatterOptions);\n\t\tassertEdit(content, edits, '// This is a comment\\n[\\n  1,\\n  \"foo\"\\n]');\n\t});\n\n});\n"],
  "mappings": "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",
  "names": []
}
