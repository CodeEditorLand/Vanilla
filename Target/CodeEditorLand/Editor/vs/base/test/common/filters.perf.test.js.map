{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/test/common/filters.perf.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { importAMDNodeModule } from '../../../amdX.js';\nimport * as filters from '../../common/filters.js';\nimport { FileAccess } from '../../common/network.js';\n\nconst patterns = ['cci', 'ida', 'pos', 'CCI', 'enbled', 'callback', 'gGame', 'cons', 'zyx', 'aBc'];\n\nconst _enablePerf = false;\n\nfunction perfSuite(name: string, callback: (this: Mocha.Suite) => void) {\n\tif (_enablePerf) {\n\t\tsuite(name, callback);\n\t}\n}\n\nperfSuite('Performance - fuzzyMatch', async function () {\n\n\tconst uri = FileAccess.asBrowserUri('vs/base/test/common/filters.perf.data').toString(true);\n\tconst { data } = await importAMDNodeModule<typeof import('./filters.perf.data.js')>(uri, '');\n\n\t// suiteSetup(() => console.profile());\n\t// suiteTeardown(() => console.profileEnd());\n\n\tconsole.log(`Matching ${data.length} items against ${patterns.length} patterns (${data.length * patterns.length} operations) `);\n\n\tfunction perfTest(name: string, match: filters.FuzzyScorer) {\n\t\ttest(name, () => {\n\n\t\t\tconst t1 = Date.now();\n\t\t\tlet count = 0;\n\t\t\tfor (let i = 0; i < 2; i++) {\n\t\t\t\tfor (const pattern of patterns) {\n\t\t\t\t\tconst patternLow = pattern.toLowerCase();\n\t\t\t\t\tfor (const item of data) {\n\t\t\t\t\t\tcount += 1;\n\t\t\t\t\t\tmatch(pattern, patternLow, 0, item, item.toLowerCase(), 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst d = Date.now() - t1;\n\t\t\tconsole.log(name, `${d}ms, ${Math.round(count / d) * 15}/15ms, ${Math.round(count / d)}/1ms`);\n\t\t});\n\t}\n\n\tperfTest('fuzzyScore', filters.fuzzyScore);\n\tperfTest('fuzzyScoreGraceful', filters.fuzzyScoreGraceful);\n\tperfTest('fuzzyScoreGracefulAggressive', filters.fuzzyScoreGracefulAggressive);\n});\n\n\nperfSuite('Performance - IFilter', async function () {\n\n\tconst uri = FileAccess.asBrowserUri('vs/base/test/common/filters.perf.data').toString(true);\n\tconst { data } = await importAMDNodeModule<typeof import('./filters.perf.data.js')>(uri, '');\n\n\tfunction perfTest(name: string, match: filters.IFilter) {\n\t\ttest(name, () => {\n\n\t\t\tconst t1 = Date.now();\n\t\t\tlet count = 0;\n\t\t\tfor (let i = 0; i < 2; i++) {\n\t\t\t\tfor (const pattern of patterns) {\n\t\t\t\t\tfor (const item of data) {\n\t\t\t\t\t\tcount += 1;\n\t\t\t\t\t\tmatch(pattern, item);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst d = Date.now() - t1;\n\t\t\tconsole.log(name, `${d}ms, ${Math.round(count / d) * 15}/15ms, ${Math.round(count / d)}/1ms`);\n\t\t});\n\t}\n\n\tperfTest('matchesFuzzy', filters.matchesFuzzy);\n\tperfTest('matchesFuzzy2', filters.matchesFuzzy2);\n\tperfTest('matchesPrefix', filters.matchesPrefix);\n\tperfTest('matchesContiguousSubString', filters.matchesContiguousSubString);\n\tperfTest('matchesCamelCase', filters.matchesCamelCase);\n});\n"],
  "mappings": ";;AAIA,SAAS,2BAA2B;AACpC,YAAY,aAAa;AACzB,SAAS,kBAAkB;AAE3B,MAAM,WAAW,CAAC,OAAO,OAAO,OAAO,OAAO,UAAU,YAAY,SAAS,QAAQ,OAAO,KAAK;AAEjG,MAAM,cAAc;AAEpB,SAAS,UAAU,MAAc,UAAuC;AACvE,MAAI,aAAa;AAChB,UAAM,MAAM,QAAQ;AAAA,EACrB;AACD;AAJS;AAMT,UAAU,4BAA4B,iBAAkB;AAEvD,QAAM,MAAM,WAAW,aAAa,uCAAuC,EAAE,SAAS,IAAI;AAC1F,QAAM,EAAE,KAAK,IAAI,MAAM,oBAA6D,KAAK,EAAE;AAK3F,UAAQ,IAAI,YAAY,KAAK,MAAM,kBAAkB,SAAS,MAAM,cAAc,KAAK,SAAS,SAAS,MAAM,eAAe;AAE9H,WAAS,SAAS,MAAc,OAA4B;AAC3D,SAAK,MAAM,MAAM;AAEhB,YAAM,KAAK,KAAK,IAAI;AACpB,UAAI,QAAQ;AACZ,eAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC3B,mBAAW,WAAW,UAAU;AAC/B,gBAAM,aAAa,QAAQ,YAAY;AACvC,qBAAW,QAAQ,MAAM;AACxB,qBAAS;AACT,kBAAM,SAAS,YAAY,GAAG,MAAM,KAAK,YAAY,GAAG,CAAC;AAAA,UAC1D;AAAA,QACD;AAAA,MACD;AACA,YAAM,IAAI,KAAK,IAAI,IAAI;AACvB,cAAQ,IAAI,MAAM,GAAG,CAAC,OAAO,KAAK,MAAM,QAAQ,CAAC,IAAI,EAAE,UAAU,KAAK,MAAM,QAAQ,CAAC,CAAC,MAAM;AAAA,IAC7F,CAAC;AAAA,EACF;AAjBS;AAmBT,WAAS,cAAc,QAAQ,UAAU;AACzC,WAAS,sBAAsB,QAAQ,kBAAkB;AACzD,WAAS,gCAAgC,QAAQ,4BAA4B;AAC9E,CAAC;AAGD,UAAU,yBAAyB,iBAAkB;AAEpD,QAAM,MAAM,WAAW,aAAa,uCAAuC,EAAE,SAAS,IAAI;AAC1F,QAAM,EAAE,KAAK,IAAI,MAAM,oBAA6D,KAAK,EAAE;AAE3F,WAAS,SAAS,MAAc,OAAwB;AACvD,SAAK,MAAM,MAAM;AAEhB,YAAM,KAAK,KAAK,IAAI;AACpB,UAAI,QAAQ;AACZ,eAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC3B,mBAAW,WAAW,UAAU;AAC/B,qBAAW,QAAQ,MAAM;AACxB,qBAAS;AACT,kBAAM,SAAS,IAAI;AAAA,UACpB;AAAA,QACD;AAAA,MACD;AACA,YAAM,IAAI,KAAK,IAAI,IAAI;AACvB,cAAQ,IAAI,MAAM,GAAG,CAAC,OAAO,KAAK,MAAM,QAAQ,CAAC,IAAI,EAAE,UAAU,KAAK,MAAM,QAAQ,CAAC,CAAC,MAAM;AAAA,IAC7F,CAAC;AAAA,EACF;AAhBS;AAkBT,WAAS,gBAAgB,QAAQ,YAAY;AAC7C,WAAS,iBAAiB,QAAQ,aAAa;AAC/C,WAAS,iBAAiB,QAAQ,aAAa;AAC/C,WAAS,8BAA8B,QAAQ,0BAA0B;AACzE,WAAS,oBAAoB,QAAQ,gBAAgB;AACtD,CAAC;",
  "names": []
}
