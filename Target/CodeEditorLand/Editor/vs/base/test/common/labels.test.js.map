{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/test/common/labels.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport * as labels from '../../common/labels.js';\nimport { isMacintosh, isWindows, OperatingSystem } from '../../common/platform.js';\nimport { URI } from '../../common/uri.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from './utils.js';\n\nsuite('Labels', () => {\n\t(!isWindows ? test.skip : test)('shorten - windows', () => {\n\n\t\t// nothing to shorten\n\t\tassert.deepStrictEqual(labels.shorten(['a']), ['a']);\n\t\tassert.deepStrictEqual(labels.shorten(['a', 'b']), ['a', 'b']);\n\t\tassert.deepStrictEqual(labels.shorten(['a', 'b', 'c']), ['a', 'b', 'c']);\n\t\tassert.deepStrictEqual(labels.shorten(['\\\\\\\\x\\\\a', '\\\\\\\\x\\\\a']), ['\\\\\\\\x\\\\a', '\\\\\\\\x\\\\a']);\n\t\tassert.deepStrictEqual(labels.shorten(['C:\\\\a', 'C:\\\\b']), ['C:\\\\a', 'C:\\\\b']);\n\n\t\t// completely different paths\n\t\tassert.deepStrictEqual(labels.shorten(['a\\\\b', 'c\\\\d', 'e\\\\f']), ['\u2026\\\\b', '\u2026\\\\d', '\u2026\\\\f']);\n\n\t\t// same beginning\n\t\tassert.deepStrictEqual(labels.shorten(['a', 'a\\\\b']), ['a', '\u2026\\\\b']);\n\t\tassert.deepStrictEqual(labels.shorten(['a\\\\b', 'a\\\\b\\\\c']), ['\u2026\\\\b', '\u2026\\\\c']);\n\t\tassert.deepStrictEqual(labels.shorten(['a', 'a\\\\b', 'a\\\\b\\\\c']), ['a', '\u2026\\\\b', '\u2026\\\\c']);\n\t\tassert.deepStrictEqual(labels.shorten(['x:\\\\a\\\\b', 'x:\\\\a\\\\c']), ['x:\\\\\u2026\\\\b', 'x:\\\\\u2026\\\\c']);\n\t\tassert.deepStrictEqual(labels.shorten(['\\\\\\\\a\\\\b', '\\\\\\\\a\\\\c']), ['\\\\\\\\a\\\\b', '\\\\\\\\a\\\\c']);\n\n\t\t// same ending\n\t\tassert.deepStrictEqual(labels.shorten(['a', 'b\\\\a']), ['a', 'b\\\\\u2026']);\n\t\tassert.deepStrictEqual(labels.shorten(['a\\\\b\\\\c', 'd\\\\b\\\\c']), ['a\\\\\u2026', 'd\\\\\u2026']);\n\t\tassert.deepStrictEqual(labels.shorten(['a\\\\b\\\\c\\\\d', 'f\\\\b\\\\c\\\\d']), ['a\\\\\u2026', 'f\\\\\u2026']);\n\t\tassert.deepStrictEqual(labels.shorten(['d\\\\e\\\\a\\\\b\\\\c', 'd\\\\b\\\\c']), ['\u2026\\\\a\\\\\u2026', 'd\\\\b\\\\\u2026']);\n\t\tassert.deepStrictEqual(labels.shorten(['a\\\\b\\\\c\\\\d', 'a\\\\f\\\\b\\\\c\\\\d']), ['a\\\\b\\\\\u2026', '\u2026\\\\f\\\\\u2026']);\n\t\tassert.deepStrictEqual(labels.shorten(['a\\\\b\\\\a', 'b\\\\b\\\\a']), ['a\\\\b\\\\\u2026', 'b\\\\b\\\\\u2026']);\n\t\tassert.deepStrictEqual(labels.shorten(['d\\\\f\\\\a\\\\b\\\\c', 'h\\\\d\\\\b\\\\c']), ['\u2026\\\\a\\\\\u2026', 'h\\\\\u2026']);\n\t\tassert.deepStrictEqual(labels.shorten(['a\\\\b\\\\c', 'x:\\\\0\\\\a\\\\b\\\\c']), ['a\\\\b\\\\c', 'x:\\\\0\\\\\u2026']);\n\t\tassert.deepStrictEqual(labels.shorten(['x:\\\\a\\\\b\\\\c', 'x:\\\\0\\\\a\\\\b\\\\c']), ['x:\\\\a\\\\\u2026', 'x:\\\\0\\\\\u2026']);\n\t\tassert.deepStrictEqual(labels.shorten(['x:\\\\a\\\\b', 'y:\\\\a\\\\b']), ['x:\\\\\u2026', 'y:\\\\\u2026']);\n\t\tassert.deepStrictEqual(labels.shorten(['x:\\\\a', 'x:\\\\c']), ['x:\\\\a', 'x:\\\\c']);\n\t\tassert.deepStrictEqual(labels.shorten(['x:\\\\a\\\\b', 'y:\\\\x\\\\a\\\\b']), ['x:\\\\\u2026', 'y:\\\\\u2026']);\n\t\tassert.deepStrictEqual(labels.shorten(['\\\\\\\\x\\\\b', '\\\\\\\\y\\\\b']), ['\\\\\\\\x\\\\\u2026', '\\\\\\\\y\\\\\u2026']);\n\t\tassert.deepStrictEqual(labels.shorten(['\\\\\\\\x\\\\a', '\\\\\\\\x\\\\b']), ['\\\\\\\\x\\\\a', '\\\\\\\\x\\\\b']);\n\n\t\t// same name ending\n\t\tassert.deepStrictEqual(labels.shorten(['a\\\\b', 'a\\\\c', 'a\\\\e-b']), ['\u2026\\\\b', '\u2026\\\\c', '\u2026\\\\e-b']);\n\n\t\t// same in the middle\n\t\tassert.deepStrictEqual(labels.shorten(['a\\\\b\\\\c', 'd\\\\b\\\\e']), ['\u2026\\\\c', '\u2026\\\\e']);\n\n\t\t// case-sensetive\n\t\tassert.deepStrictEqual(labels.shorten(['a\\\\b\\\\c', 'd\\\\b\\\\C']), ['\u2026\\\\c', '\u2026\\\\C']);\n\n\t\t// empty or null\n\t\tassert.deepStrictEqual(labels.shorten(['', null!]), ['.\\\\', null]);\n\n\t\tassert.deepStrictEqual(labels.shorten(['a', 'a\\\\b', 'a\\\\b\\\\c', 'd\\\\b\\\\c', 'd\\\\b']), ['a', 'a\\\\b', 'a\\\\b\\\\c', 'd\\\\b\\\\c', 'd\\\\b']);\n\t\tassert.deepStrictEqual(labels.shorten(['a', 'a\\\\b', 'b']), ['a', 'a\\\\b', 'b']);\n\t\tassert.deepStrictEqual(labels.shorten(['', 'a', 'b', 'b\\\\c', 'a\\\\c']), ['.\\\\', 'a', 'b', 'b\\\\c', 'a\\\\c']);\n\t\tassert.deepStrictEqual(labels.shorten(['src\\\\vs\\\\workbench\\\\parts\\\\execution\\\\electron-sandbox', 'src\\\\vs\\\\workbench\\\\parts\\\\execution\\\\electron-sandbox\\\\something', 'src\\\\vs\\\\workbench\\\\parts\\\\terminal\\\\electron-sandbox']), ['\u2026\\\\execution\\\\electron-sandbox', '\u2026\\\\something', '\u2026\\\\terminal\\\\\u2026']);\n\t});\n\n\t(isWindows ? test.skip : test)('shorten - not windows', () => {\n\n\t\t// nothing to shorten\n\t\tassert.deepStrictEqual(labels.shorten(['a']), ['a']);\n\t\tassert.deepStrictEqual(labels.shorten(['a', 'b']), ['a', 'b']);\n\t\tassert.deepStrictEqual(labels.shorten(['/a', '/b']), ['/a', '/b']);\n\t\tassert.deepStrictEqual(labels.shorten(['~/a/b/c', '~/a/b/c']), ['~/a/b/c', '~/a/b/c']);\n\t\tassert.deepStrictEqual(labels.shorten(['a', 'b', 'c']), ['a', 'b', 'c']);\n\n\t\t// completely different paths\n\t\tassert.deepStrictEqual(labels.shorten(['a/b', 'c/d', 'e/f']), ['\u2026/b', '\u2026/d', '\u2026/f']);\n\n\t\t// same beginning\n\t\tassert.deepStrictEqual(labels.shorten(['a', 'a/b']), ['a', '\u2026/b']);\n\t\tassert.deepStrictEqual(labels.shorten(['a/b', 'a/b/c']), ['\u2026/b', '\u2026/c']);\n\t\tassert.deepStrictEqual(labels.shorten(['a', 'a/b', 'a/b/c']), ['a', '\u2026/b', '\u2026/c']);\n\t\tassert.deepStrictEqual(labels.shorten(['/a/b', '/a/c']), ['/a/b', '/a/c']);\n\n\t\t// same ending\n\t\tassert.deepStrictEqual(labels.shorten(['a', 'b/a']), ['a', 'b/\u2026']);\n\t\tassert.deepStrictEqual(labels.shorten(['a/b/c', 'd/b/c']), ['a/\u2026', 'd/\u2026']);\n\t\tassert.deepStrictEqual(labels.shorten(['a/b/c/d', 'f/b/c/d']), ['a/\u2026', 'f/\u2026']);\n\t\tassert.deepStrictEqual(labels.shorten(['d/e/a/b/c', 'd/b/c']), ['\u2026/a/\u2026', 'd/b/\u2026']);\n\t\tassert.deepStrictEqual(labels.shorten(['a/b/c/d', 'a/f/b/c/d']), ['a/b/\u2026', '\u2026/f/\u2026']);\n\t\tassert.deepStrictEqual(labels.shorten(['a/b/a', 'b/b/a']), ['a/b/\u2026', 'b/b/\u2026']);\n\t\tassert.deepStrictEqual(labels.shorten(['d/f/a/b/c', 'h/d/b/c']), ['\u2026/a/\u2026', 'h/\u2026']);\n\t\tassert.deepStrictEqual(labels.shorten(['/x/b', '/y/b']), ['/x/\u2026', '/y/\u2026']);\n\n\t\t// same name ending\n\t\tassert.deepStrictEqual(labels.shorten(['a/b', 'a/c', 'a/e-b']), ['\u2026/b', '\u2026/c', '\u2026/e-b']);\n\n\t\t// same in the middle\n\t\tassert.deepStrictEqual(labels.shorten(['a/b/c', 'd/b/e']), ['\u2026/c', '\u2026/e']);\n\n\t\t// case-sensitive\n\t\tassert.deepStrictEqual(labels.shorten(['a/b/c', 'd/b/C']), ['\u2026/c', '\u2026/C']);\n\n\t\t// empty or null\n\t\tassert.deepStrictEqual(labels.shorten(['', null!]), ['./', null]);\n\n\t\tassert.deepStrictEqual(labels.shorten(['a', 'a/b', 'a/b/c', 'd/b/c', 'd/b']), ['a', 'a/b', 'a/b/c', 'd/b/c', 'd/b']);\n\t\tassert.deepStrictEqual(labels.shorten(['a', 'a/b', 'b']), ['a', 'a/b', 'b']);\n\t\tassert.deepStrictEqual(labels.shorten(['', 'a', 'b', 'b/c', 'a/c']), ['./', 'a', 'b', 'b/c', 'a/c']);\n\t});\n\n\ttest('template', () => {\n\n\t\t// simple\n\t\tassert.strictEqual(labels.template('Foo Bar'), 'Foo Bar');\n\t\tassert.strictEqual(labels.template('Foo${}Bar'), 'FooBar');\n\t\tassert.strictEqual(labels.template('$FooBar'), '');\n\t\tassert.strictEqual(labels.template('}FooBar'), '}FooBar');\n\t\tassert.strictEqual(labels.template('Foo ${one} Bar', { one: 'value' }), 'Foo value Bar');\n\t\tassert.strictEqual(labels.template('Foo ${one} Bar ${two}', { one: 'value', two: 'other value' }), 'Foo value Bar other value');\n\n\t\t// conditional separator\n\t\tassert.strictEqual(labels.template('Foo${separator}Bar'), 'FooBar');\n\t\tassert.strictEqual(labels.template('Foo${separator}Bar', { separator: { label: ' - ' } }), 'Foo - Bar');\n\t\tassert.strictEqual(labels.template('${separator}Foo${separator}Bar', { value: 'something', separator: { label: ' - ' } }), 'Foo - Bar');\n\t\tassert.strictEqual(labels.template('${value} Foo${separator}Bar', { value: 'something', separator: { label: ' - ' } }), 'something Foo - Bar');\n\n\t\t// real world example (macOS)\n\t\tlet t = '${activeEditorShort}${separator}${rootName}';\n\t\tassert.strictEqual(labels.template(t, { activeEditorShort: '', rootName: '', separator: { label: ' - ' } }), '');\n\t\tassert.strictEqual(labels.template(t, { activeEditorShort: '', rootName: 'root', separator: { label: ' - ' } }), 'root');\n\t\tassert.strictEqual(labels.template(t, { activeEditorShort: 'markdown.txt', rootName: 'root', separator: { label: ' - ' } }), 'markdown.txt - root');\n\n\t\t// real world example (other)\n\t\tt = '${dirty}${activeEditorShort}${separator}${rootName}${separator}${appName}';\n\t\tassert.strictEqual(labels.template(t, { dirty: '', activeEditorShort: '', rootName: '', appName: '', separator: { label: ' - ' } }), '');\n\t\tassert.strictEqual(labels.template(t, { dirty: '', activeEditorShort: '', rootName: '', appName: 'Visual Studio Code', separator: { label: ' - ' } }), 'Visual Studio Code');\n\t\tassert.strictEqual(labels.template(t, { dirty: '', activeEditorShort: 'Untitled-1', rootName: '', appName: 'Visual Studio Code', separator: { label: ' - ' } }), 'Untitled-1 - Visual Studio Code');\n\t\tassert.strictEqual(labels.template(t, { dirty: '', activeEditorShort: '', rootName: 'monaco', appName: 'Visual Studio Code', separator: { label: ' - ' } }), 'monaco - Visual Studio Code');\n\t\tassert.strictEqual(labels.template(t, { dirty: '', activeEditorShort: 'somefile.txt', rootName: 'monaco', appName: 'Visual Studio Code', separator: { label: ' - ' } }), 'somefile.txt - monaco - Visual Studio Code');\n\t\tassert.strictEqual(labels.template(t, { dirty: '* ', activeEditorShort: 'somefile.txt', rootName: 'monaco', appName: 'Visual Studio Code', separator: { label: ' - ' } }), '* somefile.txt - monaco - Visual Studio Code');\n\n\t\t// real world example (other)\n\t\tt = '${dirty}${activeEditorShort}${separator}${rootNameShort}${separator}${appName}';\n\t\tassert.strictEqual(labels.template(t, { dirty: '', activeEditorShort: '', rootName: 'monaco (Workspace)', rootNameShort: 'monaco', appName: 'Visual Studio Code', separator: { label: ' - ' } }), 'monaco - Visual Studio Code');\n\t});\n\n\ttest('mnemonicButtonLabel', () => {\n\t\tassert.strictEqual(labels.mnemonicButtonLabel('Hello World'), 'Hello World');\n\t\tassert.strictEqual(labels.mnemonicButtonLabel(''), '');\n\t\tif (isWindows) {\n\t\t\tassert.strictEqual(labels.mnemonicButtonLabel('Hello & World'), 'Hello && World');\n\t\t\tassert.strictEqual(labels.mnemonicButtonLabel('Do &&not Save & Continue'), 'Do &not Save && Continue');\n\t\t} else if (isMacintosh) {\n\t\t\tassert.strictEqual(labels.mnemonicButtonLabel('Hello & World'), 'Hello & World');\n\t\t\tassert.strictEqual(labels.mnemonicButtonLabel('Do &&not Save & Continue'), 'Do not Save & Continue');\n\t\t} else {\n\t\t\tassert.strictEqual(labels.mnemonicButtonLabel('Hello & World'), 'Hello & World');\n\t\t\tassert.strictEqual(labels.mnemonicButtonLabel('Do &&not Save & Continue'), 'Do _not Save & Continue');\n\t\t}\n\t});\n\n\ttest('getPathLabel', () => {\n\t\tconst winFileUri = URI.file('c:/some/folder/file.txt');\n\t\tconst nixFileUri = URI.file('/some/folder/file.txt');\n\t\tconst nixBadFileUri = URI.revive({ scheme: 'vscode', authority: 'file', path: '//some/folder/file.txt' });\n\t\tconst uncFileUri = URI.file('c:/some/folder/file.txt').with({ authority: 'auth' });\n\t\tconst remoteFileUri = URI.file('/some/folder/file.txt').with({ scheme: 'vscode-test', authority: 'auth' });\n\n\t\t// Basics\n\n\t\tassert.strictEqual(labels.getPathLabel(winFileUri, { os: OperatingSystem.Windows }), 'C:\\\\some\\\\folder\\\\file.txt');\n\t\tassert.strictEqual(labels.getPathLabel(winFileUri, { os: OperatingSystem.Macintosh }), 'c:/some/folder/file.txt');\n\t\tassert.strictEqual(labels.getPathLabel(winFileUri, { os: OperatingSystem.Linux }), 'c:/some/folder/file.txt');\n\n\t\tassert.strictEqual(labels.getPathLabel(nixFileUri, { os: OperatingSystem.Windows }), '\\\\some\\\\folder\\\\file.txt');\n\t\tassert.strictEqual(labels.getPathLabel(nixFileUri, { os: OperatingSystem.Macintosh }), '/some/folder/file.txt');\n\t\tassert.strictEqual(labels.getPathLabel(nixFileUri, { os: OperatingSystem.Linux }), '/some/folder/file.txt');\n\n\t\tassert.strictEqual(labels.getPathLabel(uncFileUri, { os: OperatingSystem.Windows }), '\\\\\\\\auth\\\\c:\\\\some\\\\folder\\\\file.txt');\n\t\tassert.strictEqual(labels.getPathLabel(uncFileUri, { os: OperatingSystem.Macintosh }), '/auth/c:/some/folder/file.txt');\n\t\tassert.strictEqual(labels.getPathLabel(uncFileUri, { os: OperatingSystem.Linux }), '/auth/c:/some/folder/file.txt');\n\n\t\tassert.strictEqual(labels.getPathLabel(remoteFileUri, { os: OperatingSystem.Windows }), '\\\\some\\\\folder\\\\file.txt');\n\t\tassert.strictEqual(labels.getPathLabel(remoteFileUri, { os: OperatingSystem.Macintosh }), '/some/folder/file.txt');\n\t\tassert.strictEqual(labels.getPathLabel(remoteFileUri, { os: OperatingSystem.Linux }), '/some/folder/file.txt');\n\n\t\t// Tildify\n\n\t\tconst nixUserHome = URI.file('/some');\n\t\tconst remoteUserHome = URI.file('/some').with({ scheme: 'vscode-test', authority: 'auth' });\n\n\t\tassert.strictEqual(labels.getPathLabel(nixFileUri, { os: OperatingSystem.Windows, tildify: { userHome: nixUserHome } }), '\\\\some\\\\folder\\\\file.txt');\n\t\tassert.strictEqual(labels.getPathLabel(nixFileUri, { os: OperatingSystem.Macintosh, tildify: { userHome: nixUserHome } }), '~/folder/file.txt');\n\t\tassert.strictEqual(labels.getPathLabel(nixBadFileUri, { os: OperatingSystem.Macintosh, tildify: { userHome: nixUserHome } }), '/some/folder/file.txt');\n\t\tassert.strictEqual(labels.getPathLabel(nixFileUri, { os: OperatingSystem.Linux, tildify: { userHome: nixUserHome } }), '~/folder/file.txt');\n\n\t\tassert.strictEqual(labels.getPathLabel(nixFileUri, { os: OperatingSystem.Windows, tildify: { userHome: remoteUserHome } }), '\\\\some\\\\folder\\\\file.txt');\n\t\tassert.strictEqual(labels.getPathLabel(nixFileUri, { os: OperatingSystem.Macintosh, tildify: { userHome: remoteUserHome } }), '~/folder/file.txt');\n\t\tassert.strictEqual(labels.getPathLabel(nixFileUri, { os: OperatingSystem.Linux, tildify: { userHome: remoteUserHome } }), '~/folder/file.txt');\n\n\t\tconst nixUntitledUri = URI.file('/some/folder/file.txt').with({ scheme: 'untitled' });\n\n\t\tassert.strictEqual(labels.getPathLabel(nixUntitledUri, { os: OperatingSystem.Windows, tildify: { userHome: nixUserHome } }), '\\\\some\\\\folder\\\\file.txt');\n\t\tassert.strictEqual(labels.getPathLabel(nixUntitledUri, { os: OperatingSystem.Macintosh, tildify: { userHome: nixUserHome } }), '~/folder/file.txt');\n\t\tassert.strictEqual(labels.getPathLabel(nixUntitledUri, { os: OperatingSystem.Linux, tildify: { userHome: nixUserHome } }), '~/folder/file.txt');\n\n\t\tassert.strictEqual(labels.getPathLabel(nixUntitledUri, { os: OperatingSystem.Windows, tildify: { userHome: remoteUserHome } }), '\\\\some\\\\folder\\\\file.txt');\n\t\tassert.strictEqual(labels.getPathLabel(nixUntitledUri, { os: OperatingSystem.Macintosh, tildify: { userHome: remoteUserHome } }), '~/folder/file.txt');\n\t\tassert.strictEqual(labels.getPathLabel(nixUntitledUri, { os: OperatingSystem.Linux, tildify: { userHome: remoteUserHome } }), '~/folder/file.txt');\n\n\t\t// Relative\n\n\t\tconst winFolder = URI.file('c:/some');\n\t\tconst winRelativePathProvider: labels.IRelativePathProvider = {\n\t\t\tgetWorkspace() { return { folders: [{ uri: winFolder }] }; },\n\t\t\tgetWorkspaceFolder(resource) { return { uri: winFolder }; }\n\t\t};\n\n\t\tassert.strictEqual(labels.getPathLabel(winFileUri, { os: OperatingSystem.Windows, relative: winRelativePathProvider }), 'folder\\\\file.txt');\n\t\tassert.strictEqual(labels.getPathLabel(winFileUri, { os: OperatingSystem.Macintosh, relative: winRelativePathProvider }), 'folder/file.txt');\n\t\tassert.strictEqual(labels.getPathLabel(winFileUri, { os: OperatingSystem.Linux, relative: winRelativePathProvider }), 'folder/file.txt');\n\n\t\tconst nixFolder = URI.file('/some');\n\t\tconst nixRelativePathProvider: labels.IRelativePathProvider = {\n\t\t\tgetWorkspace() { return { folders: [{ uri: nixFolder }] }; },\n\t\t\tgetWorkspaceFolder(resource) { return { uri: nixFolder }; }\n\t\t};\n\n\t\tassert.strictEqual(labels.getPathLabel(nixFileUri, { os: OperatingSystem.Windows, relative: nixRelativePathProvider }), 'folder\\\\file.txt');\n\t\tassert.strictEqual(labels.getPathLabel(nixFileUri, { os: OperatingSystem.Macintosh, relative: nixRelativePathProvider }), 'folder/file.txt');\n\t\tassert.strictEqual(labels.getPathLabel(nixFileUri, { os: OperatingSystem.Linux, relative: nixRelativePathProvider }), 'folder/file.txt');\n\n\t\tassert.strictEqual(labels.getPathLabel(nixUntitledUri, { os: OperatingSystem.Windows, relative: nixRelativePathProvider }), 'folder\\\\file.txt');\n\t\tassert.strictEqual(labels.getPathLabel(nixUntitledUri, { os: OperatingSystem.Macintosh, relative: nixRelativePathProvider }), 'folder/file.txt');\n\t\tassert.strictEqual(labels.getPathLabel(nixUntitledUri, { os: OperatingSystem.Linux, relative: nixRelativePathProvider }), 'folder/file.txt');\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"],
  "mappings": "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",
  "names": []
}
