{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/test/common/lazy.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { Lazy } from '../../common/lazy.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from './utils.js';\n\nsuite('Lazy', () => {\n\n\ttest('lazy values should only be resolved once', () => {\n\t\tlet counter = 0;\n\t\tconst value = new Lazy(() => ++counter);\n\n\t\tassert.strictEqual(value.hasValue, false);\n\t\tassert.strictEqual(value.value, 1);\n\t\tassert.strictEqual(value.hasValue, true);\n\t\tassert.strictEqual(value.value, 1); // make sure we did not evaluate again\n\t});\n\n\ttest('lazy values handle error case', () => {\n\t\tlet counter = 0;\n\t\tconst value = new Lazy(() => { throw new Error(`${++counter}`); });\n\n\t\tassert.strictEqual(value.hasValue, false);\n\t\tassert.throws(() => value.value, /\\b1\\b/);\n\t\tassert.strictEqual(value.hasValue, true);\n\t\tassert.throws(() => value.value, /\\b1\\b/);\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"],
  "mappings": "AAKA,OAAO,YAAY;AACnB,SAAS,YAAY;AACrB,SAAS,+CAA+C;AAExD,MAAM,QAAQ,MAAM;AAEnB,OAAK,4CAA4C,MAAM;AACtD,QAAI,UAAU;AACd,UAAM,QAAQ,IAAI,KAAK,MAAM,EAAE,OAAO;AAEtC,WAAO,YAAY,MAAM,UAAU,KAAK;AACxC,WAAO,YAAY,MAAM,OAAO,CAAC;AACjC,WAAO,YAAY,MAAM,UAAU,IAAI;AACvC,WAAO,YAAY,MAAM,OAAO,CAAC;AAAA,EAClC,CAAC;AAED,OAAK,iCAAiC,MAAM;AAC3C,QAAI,UAAU;AACd,UAAM,QAAQ,IAAI,KAAK,MAAM;AAAE,YAAM,IAAI,MAAM,GAAG,EAAE,OAAO,EAAE;AAAA,IAAG,CAAC;AAEjE,WAAO,YAAY,MAAM,UAAU,KAAK;AACxC,WAAO,OAAO,MAAM,MAAM,OAAO,OAAO;AACxC,WAAO,YAAY,MAAM,UAAU,IAAI;AACvC,WAAO,OAAO,MAAM,MAAM,OAAO,OAAO;AAAA,EACzC,CAAC;AAED,0CAAwC;AACzC,CAAC;",
  "names": []
}
