{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/test/common/buffer.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { timeout } from '../../common/async.js';\nimport { bufferedStreamToBuffer, bufferToReadable, bufferToStream, decodeBase64, encodeBase64, newWriteableBufferStream, readableToBuffer, streamToBuffer, VSBuffer } from '../../common/buffer.js';\nimport { peekStream } from '../../common/stream.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from './utils.js';\n\nsuite('Buffer', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('issue #71993 - VSBuffer#toString returns numbers', () => {\n\t\tconst data = new Uint8Array([1, 2, 3, 'h'.charCodeAt(0), 'i'.charCodeAt(0), 4, 5]).buffer;\n\t\tconst buffer = VSBuffer.wrap(new Uint8Array(data, 3, 2));\n\t\tassert.deepStrictEqual(buffer.toString(), 'hi');\n\t});\n\n\ttest('bufferToReadable / readableToBuffer', () => {\n\t\tconst content = 'Hello World';\n\t\tconst readable = bufferToReadable(VSBuffer.fromString(content));\n\n\t\tassert.strictEqual(readableToBuffer(readable).toString(), content);\n\t});\n\n\ttest('bufferToStream / streamToBuffer', async () => {\n\t\tconst content = 'Hello World';\n\t\tconst stream = bufferToStream(VSBuffer.fromString(content));\n\n\t\tassert.strictEqual((await streamToBuffer(stream)).toString(), content);\n\t});\n\n\ttest('bufferedStreamToBuffer', async () => {\n\t\tconst content = 'Hello World';\n\t\tconst stream = await peekStream(bufferToStream(VSBuffer.fromString(content)), 1);\n\n\t\tassert.strictEqual((await bufferedStreamToBuffer(stream)).toString(), content);\n\t});\n\n\ttest('bufferWriteableStream - basics (no error)', async () => {\n\t\tconst stream = newWriteableBufferStream();\n\n\t\tconst chunks: VSBuffer[] = [];\n\t\tstream.on('data', data => {\n\t\t\tchunks.push(data);\n\t\t});\n\n\t\tlet ended = false;\n\t\tstream.on('end', () => {\n\t\t\tended = true;\n\t\t});\n\n\t\tconst errors: Error[] = [];\n\t\tstream.on('error', error => {\n\t\t\terrors.push(error);\n\t\t});\n\n\t\tawait timeout(0);\n\t\tstream.write(VSBuffer.fromString('Hello'));\n\t\tawait timeout(0);\n\t\tstream.end(VSBuffer.fromString('World'));\n\n\t\tassert.strictEqual(chunks.length, 2);\n\t\tassert.strictEqual(chunks[0].toString(), 'Hello');\n\t\tassert.strictEqual(chunks[1].toString(), 'World');\n\t\tassert.strictEqual(ended, true);\n\t\tassert.strictEqual(errors.length, 0);\n\t});\n\n\ttest('bufferWriteableStream - basics (error)', async () => {\n\t\tconst stream = newWriteableBufferStream();\n\n\t\tconst chunks: VSBuffer[] = [];\n\t\tstream.on('data', data => {\n\t\t\tchunks.push(data);\n\t\t});\n\n\t\tlet ended = false;\n\t\tstream.on('end', () => {\n\t\t\tended = true;\n\t\t});\n\n\t\tconst errors: Error[] = [];\n\t\tstream.on('error', error => {\n\t\t\terrors.push(error);\n\t\t});\n\n\t\tawait timeout(0);\n\t\tstream.write(VSBuffer.fromString('Hello'));\n\t\tawait timeout(0);\n\t\tstream.error(new Error());\n\t\tstream.end();\n\n\t\tassert.strictEqual(chunks.length, 1);\n\t\tassert.strictEqual(chunks[0].toString(), 'Hello');\n\t\tassert.strictEqual(ended, true);\n\t\tassert.strictEqual(errors.length, 1);\n\t});\n\n\ttest('bufferWriteableStream - buffers data when no listener', async () => {\n\t\tconst stream = newWriteableBufferStream();\n\n\t\tawait timeout(0);\n\t\tstream.write(VSBuffer.fromString('Hello'));\n\t\tawait timeout(0);\n\t\tstream.end(VSBuffer.fromString('World'));\n\n\t\tconst chunks: VSBuffer[] = [];\n\t\tstream.on('data', data => {\n\t\t\tchunks.push(data);\n\t\t});\n\n\t\tlet ended = false;\n\t\tstream.on('end', () => {\n\t\t\tended = true;\n\t\t});\n\n\t\tconst errors: Error[] = [];\n\t\tstream.on('error', error => {\n\t\t\terrors.push(error);\n\t\t});\n\n\t\tassert.strictEqual(chunks.length, 1);\n\t\tassert.strictEqual(chunks[0].toString(), 'HelloWorld');\n\t\tassert.strictEqual(ended, true);\n\t\tassert.strictEqual(errors.length, 0);\n\t});\n\n\ttest('bufferWriteableStream - buffers errors when no listener', async () => {\n\t\tconst stream = newWriteableBufferStream();\n\n\t\tawait timeout(0);\n\t\tstream.write(VSBuffer.fromString('Hello'));\n\t\tawait timeout(0);\n\t\tstream.error(new Error());\n\n\t\tconst chunks: VSBuffer[] = [];\n\t\tstream.on('data', data => {\n\t\t\tchunks.push(data);\n\t\t});\n\n\t\tconst errors: Error[] = [];\n\t\tstream.on('error', error => {\n\t\t\terrors.push(error);\n\t\t});\n\n\t\tlet ended = false;\n\t\tstream.on('end', () => {\n\t\t\tended = true;\n\t\t});\n\n\t\tstream.end();\n\n\t\tassert.strictEqual(chunks.length, 1);\n\t\tassert.strictEqual(chunks[0].toString(), 'Hello');\n\t\tassert.strictEqual(ended, true);\n\t\tassert.strictEqual(errors.length, 1);\n\t});\n\n\ttest('bufferWriteableStream - buffers end when no listener', async () => {\n\t\tconst stream = newWriteableBufferStream();\n\n\t\tawait timeout(0);\n\t\tstream.write(VSBuffer.fromString('Hello'));\n\t\tawait timeout(0);\n\t\tstream.end(VSBuffer.fromString('World'));\n\n\t\tlet ended = false;\n\t\tstream.on('end', () => {\n\t\t\tended = true;\n\t\t});\n\n\t\tconst chunks: VSBuffer[] = [];\n\t\tstream.on('data', data => {\n\t\t\tchunks.push(data);\n\t\t});\n\n\t\tconst errors: Error[] = [];\n\t\tstream.on('error', error => {\n\t\t\terrors.push(error);\n\t\t});\n\n\t\tassert.strictEqual(chunks.length, 1);\n\t\tassert.strictEqual(chunks[0].toString(), 'HelloWorld');\n\t\tassert.strictEqual(ended, true);\n\t\tassert.strictEqual(errors.length, 0);\n\t});\n\n\ttest('bufferWriteableStream - nothing happens after end()', async () => {\n\t\tconst stream = newWriteableBufferStream();\n\n\t\tconst chunks: VSBuffer[] = [];\n\t\tstream.on('data', data => {\n\t\t\tchunks.push(data);\n\t\t});\n\n\t\tawait timeout(0);\n\t\tstream.write(VSBuffer.fromString('Hello'));\n\t\tawait timeout(0);\n\t\tstream.end(VSBuffer.fromString('World'));\n\n\t\tlet dataCalledAfterEnd = false;\n\t\tstream.on('data', data => {\n\t\t\tdataCalledAfterEnd = true;\n\t\t});\n\n\t\tlet errorCalledAfterEnd = false;\n\t\tstream.on('error', error => {\n\t\t\terrorCalledAfterEnd = true;\n\t\t});\n\n\t\tlet endCalledAfterEnd = false;\n\t\tstream.on('end', () => {\n\t\t\tendCalledAfterEnd = true;\n\t\t});\n\n\t\tawait timeout(0);\n\t\tstream.write(VSBuffer.fromString('Hello'));\n\t\tawait timeout(0);\n\t\tstream.error(new Error());\n\t\tawait timeout(0);\n\t\tstream.end(VSBuffer.fromString('World'));\n\n\t\tassert.strictEqual(dataCalledAfterEnd, false);\n\t\tassert.strictEqual(errorCalledAfterEnd, false);\n\t\tassert.strictEqual(endCalledAfterEnd, false);\n\n\t\tassert.strictEqual(chunks.length, 2);\n\t\tassert.strictEqual(chunks[0].toString(), 'Hello');\n\t\tassert.strictEqual(chunks[1].toString(), 'World');\n\t});\n\n\ttest('bufferWriteableStream - pause/resume (simple)', async () => {\n\t\tconst stream = newWriteableBufferStream();\n\n\t\tconst chunks: VSBuffer[] = [];\n\t\tstream.on('data', data => {\n\t\t\tchunks.push(data);\n\t\t});\n\n\t\tlet ended = false;\n\t\tstream.on('end', () => {\n\t\t\tended = true;\n\t\t});\n\n\t\tconst errors: Error[] = [];\n\t\tstream.on('error', error => {\n\t\t\terrors.push(error);\n\t\t});\n\n\t\tstream.pause();\n\n\t\tawait timeout(0);\n\t\tstream.write(VSBuffer.fromString('Hello'));\n\t\tawait timeout(0);\n\t\tstream.end(VSBuffer.fromString('World'));\n\n\t\tassert.strictEqual(chunks.length, 0);\n\t\tassert.strictEqual(errors.length, 0);\n\t\tassert.strictEqual(ended, false);\n\n\t\tstream.resume();\n\n\t\tassert.strictEqual(chunks.length, 1);\n\t\tassert.strictEqual(chunks[0].toString(), 'HelloWorld');\n\t\tassert.strictEqual(ended, true);\n\t\tassert.strictEqual(errors.length, 0);\n\t});\n\n\ttest('bufferWriteableStream - pause/resume (pause after first write)', async () => {\n\t\tconst stream = newWriteableBufferStream();\n\n\t\tconst chunks: VSBuffer[] = [];\n\t\tstream.on('data', data => {\n\t\t\tchunks.push(data);\n\t\t});\n\n\t\tlet ended = false;\n\t\tstream.on('end', () => {\n\t\t\tended = true;\n\t\t});\n\n\t\tconst errors: Error[] = [];\n\t\tstream.on('error', error => {\n\t\t\terrors.push(error);\n\t\t});\n\n\t\tawait timeout(0);\n\t\tstream.write(VSBuffer.fromString('Hello'));\n\n\t\tstream.pause();\n\n\t\tawait timeout(0);\n\t\tstream.end(VSBuffer.fromString('World'));\n\n\t\tassert.strictEqual(chunks.length, 1);\n\t\tassert.strictEqual(chunks[0].toString(), 'Hello');\n\t\tassert.strictEqual(errors.length, 0);\n\t\tassert.strictEqual(ended, false);\n\n\t\tstream.resume();\n\n\t\tassert.strictEqual(chunks.length, 2);\n\t\tassert.strictEqual(chunks[0].toString(), 'Hello');\n\t\tassert.strictEqual(chunks[1].toString(), 'World');\n\t\tassert.strictEqual(ended, true);\n\t\tassert.strictEqual(errors.length, 0);\n\t});\n\n\ttest('bufferWriteableStream - pause/resume (error)', async () => {\n\t\tconst stream = newWriteableBufferStream();\n\n\t\tconst chunks: VSBuffer[] = [];\n\t\tstream.on('data', data => {\n\t\t\tchunks.push(data);\n\t\t});\n\n\t\tlet ended = false;\n\t\tstream.on('end', () => {\n\t\t\tended = true;\n\t\t});\n\n\t\tconst errors: Error[] = [];\n\t\tstream.on('error', error => {\n\t\t\terrors.push(error);\n\t\t});\n\n\t\tstream.pause();\n\n\t\tawait timeout(0);\n\t\tstream.write(VSBuffer.fromString('Hello'));\n\t\tawait timeout(0);\n\t\tstream.error(new Error());\n\t\tstream.end();\n\n\t\tassert.strictEqual(chunks.length, 0);\n\t\tassert.strictEqual(ended, false);\n\t\tassert.strictEqual(errors.length, 0);\n\n\t\tstream.resume();\n\n\t\tassert.strictEqual(chunks.length, 1);\n\t\tassert.strictEqual(chunks[0].toString(), 'Hello');\n\t\tassert.strictEqual(ended, true);\n\t\tassert.strictEqual(errors.length, 1);\n\t});\n\n\ttest('bufferWriteableStream - destroy', async () => {\n\t\tconst stream = newWriteableBufferStream();\n\n\t\tconst chunks: VSBuffer[] = [];\n\t\tstream.on('data', data => {\n\t\t\tchunks.push(data);\n\t\t});\n\n\t\tlet ended = false;\n\t\tstream.on('end', () => {\n\t\t\tended = true;\n\t\t});\n\n\t\tconst errors: Error[] = [];\n\t\tstream.on('error', error => {\n\t\t\terrors.push(error);\n\t\t});\n\n\t\tstream.destroy();\n\n\t\tawait timeout(0);\n\t\tstream.write(VSBuffer.fromString('Hello'));\n\t\tawait timeout(0);\n\t\tstream.end(VSBuffer.fromString('World'));\n\n\t\tassert.strictEqual(chunks.length, 0);\n\t\tassert.strictEqual(ended, false);\n\t\tassert.strictEqual(errors.length, 0);\n\t});\n\n\ttest('Performance issue with VSBuffer#slice #76076', function () { // TODO@alexdima this test seems to fail in web (https://github.com/microsoft/vscode/issues/114042)\n\t\t// Buffer#slice creates a view\n\t\tif (typeof Buffer !== 'undefined') {\n\t\t\tconst buff = Buffer.from([10, 20, 30, 40]);\n\t\t\tconst b2 = buff.slice(1, 3);\n\t\t\tassert.strictEqual(buff[1], 20);\n\t\t\tassert.strictEqual(b2[0], 20);\n\n\t\t\tbuff[1] = 17; // modify buff AND b2\n\t\t\tassert.strictEqual(buff[1], 17);\n\t\t\tassert.strictEqual(b2[0], 17);\n\t\t}\n\n\t\t// TypedArray#slice creates a copy\n\t\t{\n\t\t\tconst unit = new Uint8Array([10, 20, 30, 40]);\n\t\t\tconst u2 = unit.slice(1, 3);\n\t\t\tassert.strictEqual(unit[1], 20);\n\t\t\tassert.strictEqual(u2[0], 20);\n\n\t\t\tunit[1] = 17; // modify unit, NOT b2\n\t\t\tassert.strictEqual(unit[1], 17);\n\t\t\tassert.strictEqual(u2[0], 20);\n\t\t}\n\n\t\t// TypedArray#subarray creates a view\n\t\t{\n\t\t\tconst unit = new Uint8Array([10, 20, 30, 40]);\n\t\t\tconst u2 = unit.subarray(1, 3);\n\t\t\tassert.strictEqual(unit[1], 20);\n\t\t\tassert.strictEqual(u2[0], 20);\n\n\t\t\tunit[1] = 17; // modify unit AND b2\n\t\t\tassert.strictEqual(unit[1], 17);\n\t\t\tassert.strictEqual(u2[0], 17);\n\t\t}\n\t});\n\n\ttest('indexOf', () => {\n\t\tconst haystack = VSBuffer.fromString('abcaabbccaaabbbccc');\n\t\tassert.strictEqual(haystack.indexOf(VSBuffer.fromString('')), 0);\n\t\tassert.strictEqual(haystack.indexOf(VSBuffer.fromString('a'.repeat(100))), -1);\n\n\t\tassert.strictEqual(haystack.indexOf(VSBuffer.fromString('a')), 0);\n\t\tassert.strictEqual(haystack.indexOf(VSBuffer.fromString('c')), 2);\n\n\t\tassert.strictEqual(haystack.indexOf(VSBuffer.fromString('abcaa')), 0);\n\t\tassert.strictEqual(haystack.indexOf(VSBuffer.fromString('caaab')), 8);\n\t\tassert.strictEqual(haystack.indexOf(VSBuffer.fromString('ccc')), 15);\n\n\t\tassert.strictEqual(haystack.indexOf(VSBuffer.fromString('cccb')), -1);\n\n\t});\n\n\tsuite('base64', () => {\n\t\t/*\n\t\tGenerated with:\n\n\t\tconst crypto = require('crypto');\n\n\t\tfor (let i = 0; i < 16; i++) {\n\t\t\tconst buf =  crypto.randomBytes(i);\n\t\t\tconsole.log(`[new Uint8Array([${Array.from(buf).join(', ')}]), '${buf.toString('base64')}'],`)\n\t\t}\n\n\t\t*/\n\n\t\tconst testCases: [Uint8Array, string][] = [\n\t\t\t[new Uint8Array([]), ''],\n\t\t\t[new Uint8Array([56]), 'OA=='],\n\t\t\t[new Uint8Array([209, 4]), '0QQ='],\n\t\t\t[new Uint8Array([19, 57, 119]), 'Ezl3'],\n\t\t\t[new Uint8Array([199, 237, 207, 112]), 'x+3PcA=='],\n\t\t\t[new Uint8Array([59, 193, 173, 26, 242]), 'O8GtGvI='],\n\t\t\t[new Uint8Array([81, 226, 95, 231, 116, 126]), 'UeJf53R+'],\n\t\t\t[new Uint8Array([11, 164, 253, 85, 8, 6, 56]), 'C6T9VQgGOA=='],\n\t\t\t[new Uint8Array([164, 16, 88, 88, 224, 173, 144, 114]), 'pBBYWOCtkHI='],\n\t\t\t[new Uint8Array([0, 196, 99, 12, 21, 229, 78, 101, 13]), 'AMRjDBXlTmUN'],\n\t\t\t[new Uint8Array([167, 114, 225, 116, 226, 83, 51, 48, 88, 114]), 'p3LhdOJTMzBYcg=='],\n\t\t\t[new Uint8Array([75, 33, 118, 10, 77, 5, 168, 194, 59, 47, 59]), 'SyF2Ck0FqMI7Lzs='],\n\t\t\t[new Uint8Array([203, 182, 165, 51, 208, 27, 123, 223, 112, 198, 127, 147]), 'y7alM9Abe99wxn+T'],\n\t\t\t[new Uint8Array([154, 93, 222, 41, 117, 234, 250, 85, 95, 144, 16, 94, 18]), 'ml3eKXXq+lVfkBBeEg=='],\n\t\t\t[new Uint8Array([246, 186, 88, 105, 192, 57, 25, 168, 183, 164, 103, 162, 243, 56]), '9rpYacA5Gai3pGei8zg='],\n\t\t\t[new Uint8Array([149, 240, 155, 96, 30, 55, 162, 172, 191, 187, 33, 124, 169, 183, 254]), 'lfCbYB43oqy/uyF8qbf+'],\n\t\t];\n\n\t\ttest('encodes', () => {\n\t\t\tfor (const [bytes, expected] of testCases) {\n\t\t\t\tassert.strictEqual(encodeBase64(VSBuffer.wrap(bytes)), expected);\n\t\t\t}\n\t\t});\n\n\t\ttest('decodes', () => {\n\t\t\tfor (const [expected, encoded] of testCases) {\n\t\t\t\tassert.deepStrictEqual(new Uint8Array(decodeBase64(encoded).buffer), expected);\n\t\t\t}\n\t\t});\n\n\t\ttest('throws error on invalid encoding', () => {\n\t\t\tassert.throws(() => decodeBase64('invalid!'));\n\t\t});\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
