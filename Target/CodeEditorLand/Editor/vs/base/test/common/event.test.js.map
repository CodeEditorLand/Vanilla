{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/test/common/event.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport assert from 'assert';\nimport { stub } from 'sinon';\nimport { tail2 } from '../../common/arrays.js';\nimport { DeferredPromise, timeout } from '../../common/async.js';\nimport { CancellationToken } from '../../common/cancellation.js';\nimport { errorHandler, setUnexpectedErrorHandler } from '../../common/errors.js';\nimport { AsyncEmitter, DebounceEmitter, DynamicListEventMultiplexer, Emitter, Event, EventBufferer, EventMultiplexer, IWaitUntil, ListenerLeakError, ListenerRefusalError, MicrotaskEmitter, PauseableEmitter, Relay, createEventDeliveryQueue } from '../../common/event.js';\nimport { DisposableStore, IDisposable, isDisposable, setDisposableTracker, DisposableTracker } from '../../common/lifecycle.js';\nimport { observableValue, transaction } from '../../common/observable.js';\nimport { MicrotaskDelay } from '../../common/symbols.js';\nimport { runWithFakedTimers } from './timeTravelScheduler.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from './utils.js';\n\nnamespace Samples {\n\n\texport class EventCounter {\n\n\t\tcount = 0;\n\n\t\treset() {\n\t\t\tthis.count = 0;\n\t\t}\n\n\t\tonEvent() {\n\t\t\tthis.count += 1;\n\t\t}\n\t}\n\n\texport class Document3 {\n\n\t\tprivate readonly _onDidChange = new Emitter<string>();\n\n\t\tonDidChange: Event<string> = this._onDidChange.event;\n\n\t\tsetText(value: string) {\n\t\t\t//...\n\t\t\tthis._onDidChange.fire(value);\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis._onDidChange.dispose();\n\t\t}\n\n\t}\n}\n\nsuite('Event utils dispose', function () {\n\n\tconst ds = ensureNoDisposablesAreLeakedInTestSuite();\n\n\tlet tracker = new DisposableTracker();\n\n\tfunction assertDisposablesCount(expected: number | Array<IDisposable>) {\n\t\tif (Array.isArray(expected)) {\n\t\t\tconst instances = new Set(expected);\n\t\t\tconst actualInstances = tracker.getTrackedDisposables();\n\t\t\tassert.strictEqual(actualInstances.length, expected.length);\n\n\t\t\tfor (const item of actualInstances) {\n\t\t\t\tassert.ok(instances.has(item));\n\t\t\t}\n\n\t\t} else {\n\t\t\tassert.strictEqual(tracker.getTrackedDisposables().length, expected);\n\t\t}\n\n\t}\n\n\tsetup(() => {\n\t\ttracker = new DisposableTracker();\n\t\tsetDisposableTracker(tracker);\n\t});\n\n\tteardown(function () {\n\t\tsetDisposableTracker(null);\n\t});\n\n\ttest('no leak with snapshot-utils', function () {\n\n\t\tconst store = new DisposableStore();\n\t\tconst emitter = ds.add(new Emitter<number>());\n\t\tconst evens = Event.filter(emitter.event, n => n % 2 === 0, store);\n\t\tassertDisposablesCount(1); // snaphot only listen when `evens` is being listened on\n\n\t\tlet all = 0;\n\t\tconst leaked = evens(n => all += n);\n\t\tassert.ok(isDisposable(leaked));\n\t\tassertDisposablesCount(3);\n\n\t\temitter.dispose();\n\t\tstore.dispose();\n\t\tassertDisposablesCount([leaked]); // leaked is still there\n\t});\n\n\ttest('no leak with debounce-util', function () {\n\t\tconst store = new DisposableStore();\n\t\tconst emitter = ds.add(new Emitter<number>());\n\t\tconst debounced = Event.debounce(emitter.event, (l) => 0, undefined, undefined, undefined, undefined, store);\n\t\tassertDisposablesCount(1); // debounce only listens when `debounce` is being listened on\n\n\t\tlet all = 0;\n\t\tconst leaked = debounced(n => all += n);\n\t\tassert.ok(isDisposable(leaked));\n\t\tassertDisposablesCount(3);\n\n\t\temitter.dispose();\n\t\tstore.dispose();\n\n\t\tassertDisposablesCount([leaked]); // leaked is still there\n\t});\n});\n\nsuite('Event', function () {\n\n\tconst ds = ensureNoDisposablesAreLeakedInTestSuite();\n\n\tconst counter = new Samples.EventCounter();\n\n\tsetup(() => counter.reset());\n\n\ttest('Emitter plain', function () {\n\n\t\tconst doc = ds.add(new Samples.Document3());\n\n\t\tconst subscription = doc.onDidChange(counter.onEvent, counter);\n\n\t\tdoc.setText('far');\n\t\tdoc.setText('boo');\n\n\t\t// unhook listener\n\t\tsubscription.dispose();\n\t\tdoc.setText('boo');\n\t\tassert.strictEqual(counter.count, 2);\n\t});\n\n\ttest('Emitter duplicate functions', () => {\n\t\tconst calls: string[] = [];\n\t\tconst a = (v: string) => calls.push(`a${v}`);\n\t\tconst b = (v: string) => calls.push(`b${v}`);\n\n\t\tconst emitter = ds.add(new Emitter<string>());\n\n\t\tds.add(emitter.event(a));\n\t\tds.add(emitter.event(b));\n\t\tconst s2 = emitter.event(a);\n\n\t\temitter.fire('1');\n\t\tassert.deepStrictEqual(calls, ['a1', 'b1', 'a1']);\n\n\t\ts2.dispose();\n\t\tcalls.length = 0;\n\t\temitter.fire('2');\n\t\tassert.deepStrictEqual(calls, ['a2', 'b2']);\n\t});\n\n\ttest('Emitter, dispose listener during emission', () => {\n\t\tfor (let keepFirstMod = 1; keepFirstMod < 4; keepFirstMod++) {\n\t\t\tconst emitter = ds.add(new Emitter<void>());\n\t\t\tconst calls: number[] = [];\n\t\t\tconst disposables = Array.from({ length: 25 }, (_, n) => ds.add(emitter.event(() => {\n\t\t\t\tif (n % keepFirstMod === 0) {\n\t\t\t\t\tdisposables[n].dispose();\n\t\t\t\t}\n\t\t\t\tcalls.push(n);\n\t\t\t})));\n\n\t\t\temitter.fire();\n\t\t\tassert.deepStrictEqual(calls, Array.from({ length: 25 }, (_, n) => n));\n\t\t}\n\t});\n\n\ttest('Emitter, dispose emitter during emission', () => {\n\t\tconst emitter = ds.add(new Emitter<void>());\n\t\tconst calls: number[] = [];\n\t\tconst disposables = Array.from({ length: 25 }, (_, n) => ds.add(emitter.event(() => {\n\t\t\tif (n === 10) {\n\t\t\t\temitter.dispose();\n\t\t\t}\n\t\t\tcalls.push(n);\n\t\t})));\n\n\t\temitter.fire();\n\t\tdisposables.forEach(d => d.dispose());\n\t\tassert.deepStrictEqual(calls, Array.from({ length: 11 }, (_, n) => n));\n\t});\n\n\ttest('Emitter, shared delivery queue', () => {\n\t\tconst deliveryQueue = createEventDeliveryQueue();\n\t\tconst emitter1 = ds.add(new Emitter<number>({ deliveryQueue }));\n\t\tconst emitter2 = ds.add(new Emitter<number>({ deliveryQueue }));\n\n\t\tconst calls: string[] = [];\n\t\tds.add(emitter1.event(d => { calls.push(`${d}a`); if (d === 1) { emitter2.fire(2); } }));\n\t\tds.add(emitter1.event(d => { calls.push(`${d}b`); }));\n\n\t\tds.add(emitter2.event(d => { calls.push(`${d}c`); emitter1.dispose(); }));\n\t\tds.add(emitter2.event(d => { calls.push(`${d}d`); }));\n\n\t\temitter1.fire(1);\n\n\t\t// 1. Check that 2 is not delivered before 1 finishes\n\t\t// 2. Check that 2 finishes getting delivered even if one emitter is disposed\n\t\tassert.deepStrictEqual(calls, ['1a', '1b', '2c', '2d']);\n\t});\n\n\ttest('Emitter, handles removal during 3', () => {\n\t\tconst fn1 = stub();\n\t\tconst fn2 = stub();\n\t\tconst emitter = ds.add(new Emitter<string>());\n\n\t\tds.add(emitter.event(fn1));\n\t\tconst h = emitter.event(() => {\n\t\t\th.dispose();\n\t\t});\n\t\tds.add(emitter.event(fn2));\n\t\temitter.fire('foo');\n\n\t\tassert.deepStrictEqual(fn2.args, [['foo']]);\n\t\tassert.deepStrictEqual(fn1.args, [['foo']]);\n\t});\n\n\ttest('Emitter, handles removal during 2', () => {\n\t\tconst fn1 = stub();\n\t\tconst emitter = ds.add(new Emitter<string>());\n\n\t\tds.add(emitter.event(fn1));\n\t\tconst h = emitter.event(() => {\n\t\t\th.dispose();\n\t\t});\n\t\temitter.fire('foo');\n\n\t\tassert.deepStrictEqual(fn1.args, [['foo']]);\n\t});\n\n\ttest('Emitter, bucket', function () {\n\n\t\tconst bucket: IDisposable[] = [];\n\t\tconst doc = ds.add(new Samples.Document3());\n\t\tconst subscription = doc.onDidChange(counter.onEvent, counter, bucket);\n\n\t\tdoc.setText('far');\n\t\tdoc.setText('boo');\n\n\t\t// unhook listener\n\t\twhile (bucket.length) {\n\t\t\tbucket.pop()!.dispose();\n\t\t}\n\t\tdoc.setText('boo');\n\n\t\t// noop\n\t\tsubscription.dispose();\n\n\t\tdoc.setText('boo');\n\t\tassert.strictEqual(counter.count, 2);\n\t});\n\n\ttest('Emitter, store', function () {\n\n\t\tconst bucket = ds.add(new DisposableStore());\n\t\tconst doc = ds.add(new Samples.Document3());\n\t\tconst subscription = doc.onDidChange(counter.onEvent, counter, bucket);\n\n\t\tdoc.setText('far');\n\t\tdoc.setText('boo');\n\n\t\t// unhook listener\n\t\tbucket.clear();\n\t\tdoc.setText('boo');\n\n\t\t// noop\n\t\tsubscription.dispose();\n\n\t\tdoc.setText('boo');\n\t\tassert.strictEqual(counter.count, 2);\n\t});\n\n\ttest('onFirstAdd|onLastRemove', () => {\n\n\t\tlet firstCount = 0;\n\t\tlet lastCount = 0;\n\t\tconst a = ds.add(new Emitter({\n\t\t\tonWillAddFirstListener() { firstCount += 1; },\n\t\t\tonDidRemoveLastListener() { lastCount += 1; }\n\t\t}));\n\n\t\tassert.strictEqual(firstCount, 0);\n\t\tassert.strictEqual(lastCount, 0);\n\n\t\tlet subscription1 = ds.add(a.event(function () { }));\n\t\tconst subscription2 = ds.add(a.event(function () { }));\n\t\tassert.strictEqual(firstCount, 1);\n\t\tassert.strictEqual(lastCount, 0);\n\n\t\tsubscription1.dispose();\n\t\tassert.strictEqual(firstCount, 1);\n\t\tassert.strictEqual(lastCount, 0);\n\n\t\tsubscription2.dispose();\n\t\tassert.strictEqual(firstCount, 1);\n\t\tassert.strictEqual(lastCount, 1);\n\n\t\tsubscription1 = ds.add(a.event(function () { }));\n\t\tassert.strictEqual(firstCount, 2);\n\t\tassert.strictEqual(lastCount, 1);\n\t});\n\n\ttest('onWillRemoveListener', () => {\n\t\tlet count = 0;\n\t\tconst a = ds.add(new Emitter({\n\t\t\tonWillRemoveListener() { count += 1; }\n\t\t}));\n\n\t\tassert.strictEqual(count, 0);\n\n\t\tlet subscription = ds.add(a.event(function () { }));\n\t\tassert.strictEqual(count, 0);\n\n\t\tsubscription.dispose();\n\t\tassert.strictEqual(count, 1);\n\n\t\tsubscription = ds.add(a.event(function () { }));\n\t\tassert.strictEqual(count, 1);\n\t});\n\n\ttest('throwingListener', () => {\n\t\tconst origErrorHandler = errorHandler.getUnexpectedErrorHandler();\n\t\tsetUnexpectedErrorHandler(() => null);\n\n\t\ttry {\n\t\t\tconst a = ds.add(new Emitter<undefined>());\n\t\t\tlet hit = false;\n\t\t\tds.add(a.event(function () {\n\t\t\t\t// eslint-disable-next-line no-throw-literal\n\t\t\t\tthrow 9;\n\t\t\t}));\n\t\t\tds.add(a.event(function () {\n\t\t\t\thit = true;\n\t\t\t}));\n\t\t\ta.fire(undefined);\n\t\t\tassert.strictEqual(hit, true);\n\n\t\t} finally {\n\t\t\tsetUnexpectedErrorHandler(origErrorHandler);\n\t\t}\n\t});\n\n\ttest('throwingListener (custom handler)', () => {\n\n\t\tconst allError: any[] = [];\n\n\t\tconst a = ds.add(new Emitter<undefined>({\n\t\t\tonListenerError(e) { allError.push(e); }\n\t\t}));\n\t\tlet hit = false;\n\t\tds.add(a.event(function () {\n\t\t\t// eslint-disable-next-line no-throw-literal\n\t\t\tthrow 9;\n\t\t}));\n\t\tds.add(a.event(function () {\n\t\t\thit = true;\n\t\t}));\n\t\ta.fire(undefined);\n\t\tassert.strictEqual(hit, true);\n\t\tassert.deepStrictEqual(allError, [9]);\n\n\t});\n\n\ttest('throw ListenerLeakError', () => {\n\n\t\tconst store = new DisposableStore();\n\t\tconst allError: any[] = [];\n\n\t\tconst a = ds.add(new Emitter<undefined>({\n\t\t\tonListenerError(e) { allError.push(e); },\n\t\t\tleakWarningThreshold: 3,\n\t\t}));\n\n\t\tfor (let i = 0; i < 11; i++) {\n\t\t\ta.event(() => { }, undefined, store);\n\t\t}\n\n\t\tassert.deepStrictEqual(allError.length, 5);\n\t\tconst [start, tail] = tail2(allError);\n\t\tassert.ok(tail instanceof ListenerRefusalError);\n\n\t\tfor (const item of start) {\n\t\t\tassert.ok(item instanceof ListenerLeakError);\n\t\t}\n\n\t\tstore.dispose();\n\t});\n\n\ttest('reusing event function and context', function () {\n\t\tlet counter = 0;\n\t\tfunction listener() {\n\t\t\tcounter += 1;\n\t\t}\n\t\tconst context = {};\n\n\t\tconst emitter = ds.add(new Emitter<undefined>());\n\t\tconst reg1 = emitter.event(listener, context);\n\t\tconst reg2 = emitter.event(listener, context);\n\n\t\temitter.fire(undefined);\n\t\tassert.strictEqual(counter, 2);\n\n\t\treg1.dispose();\n\t\temitter.fire(undefined);\n\t\tassert.strictEqual(counter, 3);\n\n\t\treg2.dispose();\n\t\temitter.fire(undefined);\n\t\tassert.strictEqual(counter, 3);\n\t});\n\n\ttest('DebounceEmitter', async function () {\n\t\treturn runWithFakedTimers({}, async function () {\n\n\t\t\tlet callCount = 0;\n\t\t\tlet sum = 0;\n\t\t\tconst emitter = new DebounceEmitter<number>({\n\t\t\t\tmerge: arr => {\n\t\t\t\t\tcallCount += 1;\n\t\t\t\t\treturn arr.reduce((p, c) => p + c);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tds.add(emitter.event(e => { sum = e; }));\n\n\t\t\tconst p = Event.toPromise(emitter.event);\n\n\t\t\temitter.fire(1);\n\t\t\temitter.fire(2);\n\n\t\t\tawait p;\n\n\t\t\tassert.strictEqual(callCount, 1);\n\t\t\tassert.strictEqual(sum, 3);\n\t\t});\n\t});\n\n\ttest('Microtask Emitter', (done) => {\n\t\tlet count = 0;\n\t\tassert.strictEqual(count, 0);\n\t\tconst emitter = new MicrotaskEmitter<void>();\n\t\tconst listener = emitter.event(() => {\n\t\t\tcount++;\n\t\t});\n\t\temitter.fire();\n\t\tassert.strictEqual(count, 0);\n\t\temitter.fire();\n\t\tassert.strictEqual(count, 0);\n\t\t// Should wait until the event loop ends and therefore be the last thing called\n\t\tsetTimeout(() => {\n\t\t\tassert.strictEqual(count, 3);\n\t\t\tdone();\n\t\t}, 0);\n\t\tqueueMicrotask(() => {\n\t\t\tassert.strictEqual(count, 2);\n\t\t\tcount++;\n\t\t\tlistener.dispose();\n\t\t});\n\t});\n\n\ttest('Emitter - In Order Delivery', function () {\n\t\tconst a = ds.add(new Emitter<string>());\n\t\tconst listener2Events: string[] = [];\n\t\tds.add(a.event(function listener1(event) {\n\t\t\tif (event === 'e1') {\n\t\t\t\ta.fire('e2');\n\t\t\t\t// assert that all events are delivered at this point\n\t\t\t\tassert.deepStrictEqual(listener2Events, ['e1', 'e2']);\n\t\t\t}\n\t\t}));\n\t\tds.add(a.event(function listener2(event) {\n\t\t\tlistener2Events.push(event);\n\t\t}));\n\t\ta.fire('e1');\n\n\t\t// assert that all events are delivered in order\n\t\tassert.deepStrictEqual(listener2Events, ['e1', 'e2']);\n\t});\n\n\ttest('Emitter, - In Order Delivery 3x', function () {\n\t\tconst a = ds.add(new Emitter<string>());\n\t\tconst listener2Events: string[] = [];\n\t\tds.add(a.event(function listener1(event) {\n\t\t\tif (event === 'e2') {\n\t\t\t\ta.fire('e3');\n\t\t\t\t// assert that all events are delivered at this point\n\t\t\t\tassert.deepStrictEqual(listener2Events, ['e1', 'e2', 'e3']);\n\t\t\t}\n\t\t}));\n\t\tds.add(a.event(function listener1(event) {\n\t\t\tif (event === 'e1') {\n\t\t\t\ta.fire('e2');\n\t\t\t\t// assert that all events are delivered at this point\n\t\t\t\tassert.deepStrictEqual(listener2Events, ['e1', 'e2', 'e3']);\n\t\t\t}\n\t\t}));\n\t\tds.add(a.event(function listener2(event) {\n\t\t\tlistener2Events.push(event);\n\t\t}));\n\t\ta.fire('e1');\n\n\t\t// assert that all events are delivered in order\n\t\tassert.deepStrictEqual(listener2Events, ['e1', 'e2', 'e3']);\n\t});\n\n\ttest('Cannot read property \\'_actual\\' of undefined #142204', function () {\n\t\tconst e = ds.add(new Emitter<number>());\n\t\tconst dispo = e.event(() => { });\n\t\tdispo.dispose.call(undefined);  // assert that disposable can be called with this\n\t});\n});\n\nsuite('AsyncEmitter', function () {\n\n\tconst ds = ensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('event has waitUntil-function', async function () {\n\n\t\tinterface E extends IWaitUntil {\n\t\t\tfoo: boolean;\n\t\t\tbar: number;\n\t\t}\n\n\t\tconst emitter = new AsyncEmitter<E>();\n\n\t\tds.add(emitter.event(e => {\n\t\t\tassert.strictEqual(e.foo, true);\n\t\t\tassert.strictEqual(e.bar, 1);\n\t\t\tassert.strictEqual(typeof e.waitUntil, 'function');\n\t\t}));\n\n\t\temitter.fireAsync({ foo: true, bar: 1, }, CancellationToken.None);\n\t\temitter.dispose();\n\t});\n\n\ttest('sequential delivery', async function () {\n\t\treturn runWithFakedTimers({}, async function () {\n\n\t\t\tinterface E extends IWaitUntil {\n\t\t\t\tfoo: boolean;\n\t\t\t}\n\n\t\t\tlet globalState = 0;\n\t\t\tconst emitter = new AsyncEmitter<E>();\n\n\t\t\tds.add(emitter.event(e => {\n\t\t\t\te.waitUntil(timeout(10).then(_ => {\n\t\t\t\t\tassert.strictEqual(globalState, 0);\n\t\t\t\t\tglobalState += 1;\n\t\t\t\t}));\n\t\t\t}));\n\n\t\t\tds.add(emitter.event(e => {\n\t\t\t\te.waitUntil(timeout(1).then(_ => {\n\t\t\t\t\tassert.strictEqual(globalState, 1);\n\t\t\t\t\tglobalState += 1;\n\t\t\t\t}));\n\t\t\t}));\n\n\t\t\tawait emitter.fireAsync({ foo: true }, CancellationToken.None);\n\t\t\tassert.strictEqual(globalState, 2);\n\t\t});\n\t});\n\n\ttest('sequential, in-order delivery', async function () {\n\t\treturn runWithFakedTimers({}, async function () {\n\n\t\t\tinterface E extends IWaitUntil {\n\t\t\t\tfoo: number;\n\t\t\t}\n\t\t\tconst events: number[] = [];\n\t\t\tlet done = false;\n\t\t\tconst emitter = new AsyncEmitter<E>();\n\n\t\t\t// e1\n\t\t\tds.add(emitter.event(e => {\n\t\t\t\te.waitUntil(timeout(10).then(async _ => {\n\t\t\t\t\tif (e.foo === 1) {\n\t\t\t\t\t\tawait emitter.fireAsync({ foo: 2 }, CancellationToken.None);\n\t\t\t\t\t\tassert.deepStrictEqual(events, [1, 2]);\n\t\t\t\t\t\tdone = true;\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}));\n\n\t\t\t// e2\n\t\t\tds.add(emitter.event(e => {\n\t\t\t\tevents.push(e.foo);\n\t\t\t\te.waitUntil(timeout(7));\n\t\t\t}));\n\n\t\t\tawait emitter.fireAsync({ foo: 1 }, CancellationToken.None);\n\t\t\tassert.ok(done);\n\t\t});\n\t});\n\n\ttest('catch errors', async function () {\n\t\tconst origErrorHandler = errorHandler.getUnexpectedErrorHandler();\n\t\tsetUnexpectedErrorHandler(() => null);\n\n\t\tinterface E extends IWaitUntil {\n\t\t\tfoo: boolean;\n\t\t}\n\n\t\tlet globalState = 0;\n\t\tconst emitter = new AsyncEmitter<E>();\n\n\t\tds.add(emitter.event(e => {\n\t\t\tglobalState += 1;\n\t\t\te.waitUntil(new Promise((_r, reject) => reject(new Error())));\n\t\t}));\n\n\t\tds.add(emitter.event(e => {\n\t\t\tglobalState += 1;\n\t\t\te.waitUntil(timeout(10));\n\t\t\te.waitUntil(timeout(20).then(() => globalState++)); // multiple `waitUntil` are supported and awaited on\n\t\t}));\n\n\t\tawait emitter.fireAsync({ foo: true }, CancellationToken.None).then(() => {\n\t\t\tassert.strictEqual(globalState, 3);\n\t\t}).catch(e => {\n\t\t\tconsole.log(e);\n\t\t\tassert.ok(false);\n\t\t});\n\n\t\tsetUnexpectedErrorHandler(origErrorHandler);\n\t});\n});\n\nsuite('PausableEmitter', function () {\n\n\tconst ds = ensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('basic', function () {\n\t\tconst data: number[] = [];\n\t\tconst emitter = ds.add(new PauseableEmitter<number>());\n\n\t\tds.add(emitter.event(e => data.push(e)));\n\t\temitter.fire(1);\n\t\temitter.fire(2);\n\n\t\tassert.deepStrictEqual(data, [1, 2]);\n\t});\n\n\ttest('pause/resume - no merge', function () {\n\t\tconst data: number[] = [];\n\t\tconst emitter = ds.add(new PauseableEmitter<number>());\n\n\t\tds.add(emitter.event(e => data.push(e)));\n\t\temitter.fire(1);\n\t\temitter.fire(2);\n\t\tassert.deepStrictEqual(data, [1, 2]);\n\n\t\temitter.pause();\n\t\temitter.fire(3);\n\t\temitter.fire(4);\n\t\tassert.deepStrictEqual(data, [1, 2]);\n\n\t\temitter.resume();\n\t\tassert.deepStrictEqual(data, [1, 2, 3, 4]);\n\t\temitter.fire(5);\n\t\tassert.deepStrictEqual(data, [1, 2, 3, 4, 5]);\n\t});\n\n\ttest('pause/resume - merge', function () {\n\t\tconst data: number[] = [];\n\t\tconst emitter = ds.add(new PauseableEmitter<number>({ merge: (a) => a.reduce((p, c) => p + c, 0) }));\n\n\t\tds.add(emitter.event(e => data.push(e)));\n\t\temitter.fire(1);\n\t\temitter.fire(2);\n\t\tassert.deepStrictEqual(data, [1, 2]);\n\n\t\temitter.pause();\n\t\temitter.fire(3);\n\t\temitter.fire(4);\n\t\tassert.deepStrictEqual(data, [1, 2]);\n\n\t\temitter.resume();\n\t\tassert.deepStrictEqual(data, [1, 2, 7]);\n\n\t\temitter.fire(5);\n\t\tassert.deepStrictEqual(data, [1, 2, 7, 5]);\n\t});\n\n\ttest('double pause/resume', function () {\n\t\tconst data: number[] = [];\n\t\tconst emitter = ds.add(new PauseableEmitter<number>());\n\n\t\tds.add(emitter.event(e => data.push(e)));\n\t\temitter.fire(1);\n\t\temitter.fire(2);\n\t\tassert.deepStrictEqual(data, [1, 2]);\n\n\t\temitter.pause();\n\t\temitter.pause();\n\t\temitter.fire(3);\n\t\temitter.fire(4);\n\t\tassert.deepStrictEqual(data, [1, 2]);\n\n\t\temitter.resume();\n\t\tassert.deepStrictEqual(data, [1, 2]);\n\n\t\temitter.resume();\n\t\tassert.deepStrictEqual(data, [1, 2, 3, 4]);\n\n\t\temitter.resume();\n\t\tassert.deepStrictEqual(data, [1, 2, 3, 4]);\n\t});\n\n\ttest('resume, no pause', function () {\n\t\tconst data: number[] = [];\n\t\tconst emitter = ds.add(new PauseableEmitter<number>());\n\n\t\tds.add(emitter.event(e => data.push(e)));\n\t\temitter.fire(1);\n\t\temitter.fire(2);\n\t\tassert.deepStrictEqual(data, [1, 2]);\n\n\t\temitter.resume();\n\t\temitter.fire(3);\n\t\tassert.deepStrictEqual(data, [1, 2, 3]);\n\t});\n\n\ttest('nested pause', function () {\n\t\tconst data: number[] = [];\n\t\tconst emitter = ds.add(new PauseableEmitter<number>());\n\n\t\tlet once = true;\n\t\tds.add(emitter.event(e => {\n\t\t\tdata.push(e);\n\n\t\t\tif (once) {\n\t\t\t\temitter.pause();\n\t\t\t\tonce = false;\n\t\t\t}\n\t\t}));\n\t\tds.add(emitter.event(e => {\n\t\t\tdata.push(e);\n\t\t}));\n\n\t\temitter.pause();\n\t\temitter.fire(1);\n\t\temitter.fire(2);\n\t\tassert.deepStrictEqual(data, []);\n\n\t\temitter.resume();\n\t\tassert.deepStrictEqual(data, [1, 1]); // paused after first event\n\n\t\temitter.resume();\n\t\tassert.deepStrictEqual(data, [1, 1, 2, 2]); // remaing event delivered\n\n\t\temitter.fire(3);\n\t\tassert.deepStrictEqual(data, [1, 1, 2, 2, 3, 3]);\n\n\t});\n\n\ttest('empty pause with merge', function () {\n\t\tconst data: number[] = [];\n\t\tconst emitter = ds.add(new PauseableEmitter<number>({ merge: a => a[0] }));\n\t\tds.add(emitter.event(e => data.push(1)));\n\n\t\temitter.pause();\n\t\temitter.resume();\n\t\tassert.deepStrictEqual(data, []);\n\t});\n\n});\n\nsuite('Event utils - ensureNoDisposablesAreLeakedInTestSuite', function () {\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('fromObservable', function () {\n\n\t\tconst obs = observableValue('test', 12);\n\t\tconst event = Event.fromObservable(obs);\n\n\t\tconst values: number[] = [];\n\t\tconst d = event(n => { values.push(n); });\n\n\t\tobs.set(3, undefined);\n\t\tobs.set(13, undefined);\n\t\tobs.set(3, undefined);\n\t\tobs.set(33, undefined);\n\t\tobs.set(1, undefined);\n\n\t\ttransaction(tx => {\n\t\t\tobs.set(334, tx);\n\t\t\tobs.set(99, tx);\n\t\t});\n\n\t\tassert.deepStrictEqual(values, ([3, 13, 3, 33, 1, 99]));\n\t\td.dispose();\n\t});\n});\n\nsuite('Event utils', () => {\n\n\tconst ds = ensureNoDisposablesAreLeakedInTestSuite();\n\n\tsuite('EventBufferer', () => {\n\n\t\ttest('should not buffer when not wrapped', () => {\n\t\t\tconst bufferer = new EventBufferer();\n\t\t\tconst counter = new Samples.EventCounter();\n\t\t\tconst emitter = ds.add(new Emitter<void>());\n\t\t\tconst event = bufferer.wrapEvent(emitter.event);\n\t\t\tconst listener = event(counter.onEvent, counter);\n\n\t\t\tassert.strictEqual(counter.count, 0);\n\t\t\temitter.fire();\n\t\t\tassert.strictEqual(counter.count, 1);\n\t\t\temitter.fire();\n\t\t\tassert.strictEqual(counter.count, 2);\n\t\t\temitter.fire();\n\t\t\tassert.strictEqual(counter.count, 3);\n\n\t\t\tlistener.dispose();\n\t\t});\n\n\t\ttest('should buffer when wrapped', () => {\n\t\t\tconst bufferer = new EventBufferer();\n\t\t\tconst counter = new Samples.EventCounter();\n\t\t\tconst emitter = ds.add(new Emitter<void>());\n\t\t\tconst event = bufferer.wrapEvent(emitter.event);\n\t\t\tconst listener = event(counter.onEvent, counter);\n\n\t\t\tassert.strictEqual(counter.count, 0);\n\t\t\temitter.fire();\n\t\t\tassert.strictEqual(counter.count, 1);\n\n\t\t\tbufferer.bufferEvents(() => {\n\t\t\t\temitter.fire();\n\t\t\t\tassert.strictEqual(counter.count, 1);\n\t\t\t\temitter.fire();\n\t\t\t\tassert.strictEqual(counter.count, 1);\n\t\t\t});\n\n\t\t\tassert.strictEqual(counter.count, 3);\n\t\t\temitter.fire();\n\t\t\tassert.strictEqual(counter.count, 4);\n\n\t\t\tlistener.dispose();\n\t\t});\n\n\t\ttest('once', () => {\n\t\t\tconst emitter = ds.add(new Emitter<void>());\n\n\t\t\tlet counter1 = 0, counter2 = 0, counter3 = 0;\n\n\t\t\tconst listener1 = emitter.event(() => counter1++);\n\t\t\tconst listener2 = Event.once(emitter.event)(() => counter2++);\n\t\t\tconst listener3 = Event.once(emitter.event)(() => counter3++);\n\n\t\t\tassert.strictEqual(counter1, 0);\n\t\t\tassert.strictEqual(counter2, 0);\n\t\t\tassert.strictEqual(counter3, 0);\n\n\t\t\tlistener3.dispose();\n\t\t\temitter.fire();\n\t\t\tassert.strictEqual(counter1, 1);\n\t\t\tassert.strictEqual(counter2, 1);\n\t\t\tassert.strictEqual(counter3, 0);\n\n\t\t\temitter.fire();\n\t\t\tassert.strictEqual(counter1, 2);\n\t\t\tassert.strictEqual(counter2, 1);\n\t\t\tassert.strictEqual(counter3, 0);\n\n\t\t\tlistener1.dispose();\n\t\t\tlistener2.dispose();\n\t\t});\n\t});\n\n\tsuite('buffer', () => {\n\n\t\ttest('should buffer events', () => {\n\t\t\tconst result: number[] = [];\n\t\t\tconst emitter = ds.add(new Emitter<number>());\n\t\t\tconst event = emitter.event;\n\t\t\tconst bufferedEvent = Event.buffer(event);\n\n\t\t\temitter.fire(1);\n\t\t\temitter.fire(2);\n\t\t\temitter.fire(3);\n\t\t\tassert.deepStrictEqual(result, [] as number[]);\n\n\t\t\tconst listener = bufferedEvent(num => result.push(num));\n\t\t\tassert.deepStrictEqual(result, [1, 2, 3]);\n\n\t\t\temitter.fire(4);\n\t\t\tassert.deepStrictEqual(result, [1, 2, 3, 4]);\n\n\t\t\tlistener.dispose();\n\t\t\temitter.fire(5);\n\t\t\tassert.deepStrictEqual(result, [1, 2, 3, 4]);\n\t\t});\n\n\t\ttest('should buffer events on next tick', async () => {\n\t\t\tconst result: number[] = [];\n\t\t\tconst emitter = ds.add(new Emitter<number>());\n\t\t\tconst event = emitter.event;\n\t\t\tconst bufferedEvent = Event.buffer(event, true);\n\n\t\t\temitter.fire(1);\n\t\t\temitter.fire(2);\n\t\t\temitter.fire(3);\n\t\t\tassert.deepStrictEqual(result, [] as number[]);\n\n\t\t\tconst listener = bufferedEvent(num => result.push(num));\n\t\t\tassert.deepStrictEqual(result, []);\n\n\t\t\tawait timeout(10);\n\t\t\temitter.fire(4);\n\t\t\tassert.deepStrictEqual(result, [1, 2, 3, 4]);\n\t\t\tlistener.dispose();\n\t\t\temitter.fire(5);\n\t\t\tassert.deepStrictEqual(result, [1, 2, 3, 4]);\n\t\t});\n\n\t\ttest('should fire initial buffer events', () => {\n\t\t\tconst result: number[] = [];\n\t\t\tconst emitter = ds.add(new Emitter<number>());\n\t\t\tconst event = emitter.event;\n\t\t\tconst bufferedEvent = Event.buffer(event, false, [-2, -1, 0]);\n\n\t\t\temitter.fire(1);\n\t\t\temitter.fire(2);\n\t\t\temitter.fire(3);\n\t\t\tassert.deepStrictEqual(result, [] as number[]);\n\n\t\t\tds.add(bufferedEvent(num => result.push(num)));\n\t\t\tassert.deepStrictEqual(result, [-2, -1, 0, 1, 2, 3]);\n\t\t});\n\t});\n\n\tsuite('EventMultiplexer', () => {\n\n\t\ttest('works', () => {\n\t\t\tconst result: number[] = [];\n\t\t\tconst m = new EventMultiplexer<number>();\n\t\t\tds.add(m.event(r => result.push(r)));\n\n\t\t\tconst e1 = ds.add(new Emitter<number>());\n\t\t\tds.add(m.add(e1.event));\n\n\t\t\tassert.deepStrictEqual(result, []);\n\n\t\t\te1.fire(0);\n\t\t\tassert.deepStrictEqual(result, [0]);\n\t\t});\n\n\t\ttest('multiplexer dispose works', () => {\n\t\t\tconst result: number[] = [];\n\t\t\tconst m = new EventMultiplexer<number>();\n\t\t\tds.add(m.event(r => result.push(r)));\n\n\t\t\tconst e1 = ds.add(new Emitter<number>());\n\t\t\tds.add(m.add(e1.event));\n\n\t\t\tassert.deepStrictEqual(result, []);\n\n\t\t\te1.fire(0);\n\t\t\tassert.deepStrictEqual(result, [0]);\n\n\t\t\tm.dispose();\n\t\t\tassert.deepStrictEqual(result, [0]);\n\n\t\t\te1.fire(0);\n\t\t\tassert.deepStrictEqual(result, [0]);\n\t\t});\n\n\t\ttest('event dispose works', () => {\n\t\t\tconst result: number[] = [];\n\t\t\tconst m = new EventMultiplexer<number>();\n\t\t\tds.add(m.event(r => result.push(r)));\n\n\t\t\tconst e1 = ds.add(new Emitter<number>());\n\t\t\tds.add(m.add(e1.event));\n\n\t\t\tassert.deepStrictEqual(result, []);\n\n\t\t\te1.fire(0);\n\t\t\tassert.deepStrictEqual(result, [0]);\n\n\t\t\te1.dispose();\n\t\t\tassert.deepStrictEqual(result, [0]);\n\n\t\t\te1.fire(0);\n\t\t\tassert.deepStrictEqual(result, [0]);\n\t\t});\n\n\t\ttest('mutliplexer event dispose works', () => {\n\t\t\tconst result: number[] = [];\n\t\t\tconst m = new EventMultiplexer<number>();\n\t\t\tds.add(m.event(r => result.push(r)));\n\n\t\t\tconst e1 = ds.add(new Emitter<number>());\n\t\t\tconst l1 = m.add(e1.event);\n\n\t\t\tassert.deepStrictEqual(result, []);\n\n\t\t\te1.fire(0);\n\t\t\tassert.deepStrictEqual(result, [0]);\n\n\t\t\tl1.dispose();\n\t\t\tassert.deepStrictEqual(result, [0]);\n\n\t\t\te1.fire(0);\n\t\t\tassert.deepStrictEqual(result, [0]);\n\t\t});\n\n\t\ttest('hot start works', () => {\n\t\t\tconst result: number[] = [];\n\t\t\tconst m = new EventMultiplexer<number>();\n\t\t\tds.add(m.event(r => result.push(r)));\n\n\t\t\tconst e1 = ds.add(new Emitter<number>());\n\t\t\tds.add(m.add(e1.event));\n\t\t\tconst e2 = ds.add(new Emitter<number>());\n\t\t\tds.add(m.add(e2.event));\n\t\t\tconst e3 = ds.add(new Emitter<number>());\n\t\t\tds.add(m.add(e3.event));\n\n\t\t\te1.fire(1);\n\t\t\te2.fire(2);\n\t\t\te3.fire(3);\n\t\t\tassert.deepStrictEqual(result, [1, 2, 3]);\n\t\t});\n\n\t\ttest('cold start works', () => {\n\t\t\tconst result: number[] = [];\n\t\t\tconst m = new EventMultiplexer<number>();\n\n\t\t\tconst e1 = ds.add(new Emitter<number>());\n\t\t\tds.add(m.add(e1.event));\n\t\t\tconst e2 = ds.add(new Emitter<number>());\n\t\t\tds.add(m.add(e2.event));\n\t\t\tconst e3 = ds.add(new Emitter<number>());\n\t\t\tds.add(m.add(e3.event));\n\n\t\t\tds.add(m.event(r => result.push(r)));\n\n\t\t\te1.fire(1);\n\t\t\te2.fire(2);\n\t\t\te3.fire(3);\n\t\t\tassert.deepStrictEqual(result, [1, 2, 3]);\n\t\t});\n\n\t\ttest('late add works', () => {\n\t\t\tconst result: number[] = [];\n\t\t\tconst m = new EventMultiplexer<number>();\n\n\t\t\tconst e1 = ds.add(new Emitter<number>());\n\t\t\tds.add(m.add(e1.event));\n\t\t\tconst e2 = ds.add(new Emitter<number>());\n\t\t\tds.add(m.add(e2.event));\n\n\t\t\tds.add(m.event(r => result.push(r)));\n\n\t\t\te1.fire(1);\n\t\t\te2.fire(2);\n\n\t\t\tconst e3 = ds.add(new Emitter<number>());\n\t\t\tds.add(m.add(e3.event));\n\t\t\te3.fire(3);\n\n\t\t\tassert.deepStrictEqual(result, [1, 2, 3]);\n\t\t});\n\n\t\ttest('add dispose works', () => {\n\t\t\tconst result: number[] = [];\n\t\t\tconst m = new EventMultiplexer<number>();\n\n\t\t\tconst e1 = ds.add(new Emitter<number>());\n\t\t\tds.add(m.add(e1.event));\n\t\t\tconst e2 = ds.add(new Emitter<number>());\n\t\t\tds.add(m.add(e2.event));\n\n\t\t\tds.add(m.event(r => result.push(r)));\n\n\t\t\te1.fire(1);\n\t\t\te2.fire(2);\n\n\t\t\tconst e3 = ds.add(new Emitter<number>());\n\t\t\tconst l3 = m.add(e3.event);\n\t\t\te3.fire(3);\n\t\t\tassert.deepStrictEqual(result, [1, 2, 3]);\n\n\t\t\tl3.dispose();\n\t\t\te3.fire(4);\n\t\t\tassert.deepStrictEqual(result, [1, 2, 3]);\n\n\t\t\te2.fire(4);\n\t\t\te1.fire(5);\n\t\t\tassert.deepStrictEqual(result, [1, 2, 3, 4, 5]);\n\t\t});\n\t});\n\n\tsuite('DynamicListEventMultiplexer', () => {\n\t\tlet addEmitter: Emitter<TestItem>;\n\t\tlet removeEmitter: Emitter<TestItem>;\n\t\tconst recordedEvents: number[] = [];\n\t\tclass TestItem {\n\t\t\treadonly onTestEventEmitter = ds.add(new Emitter<number>());\n\t\t\treadonly onTestEvent = this.onTestEventEmitter.event;\n\t\t}\n\t\tlet items: TestItem[];\n\t\tlet m: DynamicListEventMultiplexer<TestItem, number>;\n\t\tsetup(() => {\n\t\t\taddEmitter = ds.add(new Emitter<TestItem>());\n\t\t\tremoveEmitter = ds.add(new Emitter<TestItem>());\n\t\t\titems = [new TestItem(), new TestItem()];\n\t\t\tfor (const [i, item] of items.entries()) {\n\t\t\t\tds.add(item.onTestEvent(e => `${i}:${e}`));\n\t\t\t}\n\t\t\tm = new DynamicListEventMultiplexer(items, addEmitter.event, removeEmitter.event, e => e.onTestEvent);\n\t\t\tds.add(m.event(e => recordedEvents.push(e)));\n\t\t\trecordedEvents.length = 0;\n\t\t});\n\t\tteardown(() => m.dispose());\n\t\ttest('should fire events for initial items', () => {\n\t\t\titems[0].onTestEventEmitter.fire(1);\n\t\t\titems[1].onTestEventEmitter.fire(2);\n\t\t\titems[0].onTestEventEmitter.fire(3);\n\t\t\titems[1].onTestEventEmitter.fire(4);\n\t\t\tassert.deepStrictEqual(recordedEvents, [1, 2, 3, 4]);\n\t\t});\n\t\ttest('should fire events for added items', () => {\n\t\t\tconst addedItem = new TestItem();\n\t\t\taddEmitter.fire(addedItem);\n\t\t\taddedItem.onTestEventEmitter.fire(1);\n\t\t\titems[0].onTestEventEmitter.fire(2);\n\t\t\titems[1].onTestEventEmitter.fire(3);\n\t\t\taddedItem.onTestEventEmitter.fire(4);\n\t\t\tassert.deepStrictEqual(recordedEvents, [1, 2, 3, 4]);\n\t\t});\n\t\ttest('should not fire events for removed items', () => {\n\t\t\tremoveEmitter.fire(items[0]);\n\t\t\titems[0].onTestEventEmitter.fire(1);\n\t\t\titems[1].onTestEventEmitter.fire(2);\n\t\t\titems[0].onTestEventEmitter.fire(3);\n\t\t\titems[1].onTestEventEmitter.fire(4);\n\t\t\tassert.deepStrictEqual(recordedEvents, [2, 4]);\n\t\t});\n\t});\n\n\ttest('latch', () => {\n\t\tconst emitter = ds.add(new Emitter<number>());\n\t\tconst event = Event.latch(emitter.event);\n\n\t\tconst result: number[] = [];\n\t\tconst listener = ds.add(event(num => result.push(num)));\n\n\t\tassert.deepStrictEqual(result, []);\n\n\t\temitter.fire(1);\n\t\tassert.deepStrictEqual(result, [1]);\n\n\t\temitter.fire(2);\n\t\tassert.deepStrictEqual(result, [1, 2]);\n\n\t\temitter.fire(2);\n\t\tassert.deepStrictEqual(result, [1, 2]);\n\n\t\temitter.fire(1);\n\t\tassert.deepStrictEqual(result, [1, 2, 1]);\n\n\t\temitter.fire(1);\n\t\tassert.deepStrictEqual(result, [1, 2, 1]);\n\n\t\temitter.fire(3);\n\t\tassert.deepStrictEqual(result, [1, 2, 1, 3]);\n\n\t\temitter.fire(3);\n\t\tassert.deepStrictEqual(result, [1, 2, 1, 3]);\n\n\t\temitter.fire(3);\n\t\tassert.deepStrictEqual(result, [1, 2, 1, 3]);\n\n\t\tlistener.dispose();\n\t});\n\n\ttest('dispose is reentrant', () => {\n\t\tconst emitter = ds.add(new Emitter<number>({\n\t\t\tonDidRemoveLastListener: () => {\n\t\t\t\temitter.dispose();\n\t\t\t}\n\t\t}));\n\n\t\tconst listener = emitter.event(() => undefined);\n\t\tlistener.dispose(); // should not crash\n\t});\n\n\tsuite('fromPromise', () => {\n\n\t\ttest('not yet resolved', async function () {\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tlet promise = new DeferredPromise<number>();\n\n\t\t\t\tds.add(Event.fromPromise(promise.p)(e => {\n\t\t\t\t\tassert.strictEqual(e, 1);\n\n\t\t\t\t\tpromise = new DeferredPromise();\n\n\t\t\t\t\tds.add(Event.fromPromise(promise.p)(() => {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}));\n\n\t\t\t\t\tpromise.error(undefined);\n\t\t\t\t}));\n\n\t\t\t\tpromise.complete(1);\n\t\t\t});\n\t\t});\n\n\t\ttest('already resolved', async function () {\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tlet promise = new DeferredPromise<number>();\n\t\t\t\tpromise.complete(1);\n\n\t\t\t\tds.add(Event.fromPromise(promise.p)(e => {\n\t\t\t\t\tassert.strictEqual(e, 1);\n\n\t\t\t\t\tpromise = new DeferredPromise();\n\t\t\t\t\tpromise.error(undefined);\n\n\t\t\t\t\tds.add(Event.fromPromise(promise.p)(() => {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}));\n\t\t\t\t}));\n\n\t\t\t});\n\t\t});\n\t});\n\n\tsuite('Relay', () => {\n\t\ttest('should input work', () => {\n\t\t\tconst e1 = ds.add(new Emitter<number>());\n\t\t\tconst e2 = ds.add(new Emitter<number>());\n\t\t\tconst relay = new Relay<number>();\n\n\t\t\tconst result: number[] = [];\n\t\t\tconst listener = (num: number) => result.push(num);\n\t\t\tconst subscription = relay.event(listener);\n\n\t\t\te1.fire(1);\n\t\t\tassert.deepStrictEqual(result, []);\n\n\t\t\trelay.input = e1.event;\n\t\t\te1.fire(2);\n\t\t\tassert.deepStrictEqual(result, [2]);\n\n\t\t\trelay.input = e2.event;\n\t\t\te1.fire(3);\n\t\t\te2.fire(4);\n\t\t\tassert.deepStrictEqual(result, [2, 4]);\n\n\t\t\tsubscription.dispose();\n\t\t\te1.fire(5);\n\t\t\te2.fire(6);\n\t\t\tassert.deepStrictEqual(result, [2, 4]);\n\t\t});\n\n\t\ttest('should Relay dispose work', () => {\n\t\t\tconst e1 = ds.add(new Emitter<number>());\n\t\t\tconst e2 = ds.add(new Emitter<number>());\n\t\t\tconst relay = new Relay<number>();\n\n\t\t\tconst result: number[] = [];\n\t\t\tconst listener = (num: number) => result.push(num);\n\t\t\tds.add(relay.event(listener));\n\n\t\t\te1.fire(1);\n\t\t\tassert.deepStrictEqual(result, []);\n\n\t\t\trelay.input = e1.event;\n\t\t\te1.fire(2);\n\t\t\tassert.deepStrictEqual(result, [2]);\n\n\t\t\trelay.input = e2.event;\n\t\t\te1.fire(3);\n\t\t\te2.fire(4);\n\t\t\tassert.deepStrictEqual(result, [2, 4]);\n\n\t\t\trelay.dispose();\n\t\t\te1.fire(5);\n\t\t\te2.fire(6);\n\t\t\tassert.deepStrictEqual(result, [2, 4]);\n\t\t});\n\t});\n\n\tsuite('accumulate', () => {\n\t\ttest('should not fire after a listener is disposed with undefined or []', async () => {\n\t\t\tconst eventEmitter = ds.add(new Emitter<number>());\n\t\t\tconst event = eventEmitter.event;\n\t\t\tconst accumulated = Event.accumulate(event, 0);\n\n\t\t\tconst calls1: number[][] = [];\n\t\t\tconst calls2: number[][] = [];\n\t\t\tconst listener1 = ds.add(accumulated((e) => calls1.push(e)));\n\t\t\tds.add(accumulated((e) => calls2.push(e)));\n\n\t\t\teventEmitter.fire(1);\n\t\t\tawait timeout(1);\n\t\t\tassert.deepStrictEqual(calls1, [[1]]);\n\t\t\tassert.deepStrictEqual(calls2, [[1]]);\n\n\t\t\tlistener1.dispose();\n\t\t\tawait timeout(1);\n\t\t\tassert.deepStrictEqual(calls1, [[1]]);\n\t\t\tassert.deepStrictEqual(calls2, [[1]], 'should not fire after a listener is disposed with undefined or []');\n\t\t});\n\t\ttest('should accumulate a single event', async () => {\n\t\t\tconst eventEmitter = ds.add(new Emitter<number>());\n\t\t\tconst event = eventEmitter.event;\n\t\t\tconst accumulated = Event.accumulate(event, 0);\n\n\t\t\tconst results1 = await new Promise<number[]>(r => {\n\t\t\t\tds.add(accumulated(r));\n\t\t\t\teventEmitter.fire(1);\n\t\t\t});\n\t\t\tassert.deepStrictEqual(results1, [1]);\n\n\t\t\tconst results2 = await new Promise<number[]>(r => {\n\t\t\t\tds.add(accumulated(r));\n\t\t\t\teventEmitter.fire(2);\n\t\t\t});\n\t\t\tassert.deepStrictEqual(results2, [2]);\n\t\t});\n\t\ttest('should accumulate multiple events', async () => {\n\t\t\tconst eventEmitter = ds.add(new Emitter<number>());\n\t\t\tconst event = eventEmitter.event;\n\t\t\tconst accumulated = Event.accumulate(event, 0);\n\n\t\t\tconst results1 = await new Promise<number[]>(r => {\n\t\t\t\tds.add(accumulated(r));\n\t\t\t\teventEmitter.fire(1);\n\t\t\t\teventEmitter.fire(2);\n\t\t\t\teventEmitter.fire(3);\n\t\t\t});\n\t\t\tassert.deepStrictEqual(results1, [1, 2, 3]);\n\n\t\t\tconst results2 = await new Promise<number[]>(r => {\n\t\t\t\tds.add(accumulated(r));\n\t\t\t\teventEmitter.fire(4);\n\t\t\t\teventEmitter.fire(5);\n\t\t\t\teventEmitter.fire(6);\n\t\t\t\teventEmitter.fire(7);\n\t\t\t\teventEmitter.fire(8);\n\t\t\t});\n\t\t\tassert.deepStrictEqual(results2, [4, 5, 6, 7, 8]);\n\t\t});\n\t});\n\n\tsuite('debounce', () => {\n\t\ttest('simple', function (done: () => void) {\n\t\t\tconst doc = ds.add(new Samples.Document3());\n\n\t\t\tconst onDocDidChange = Event.debounce(doc.onDidChange, (prev: string[] | undefined, cur) => {\n\t\t\t\tif (!prev) {\n\t\t\t\t\tprev = [cur];\n\t\t\t\t} else if (prev.indexOf(cur) < 0) {\n\t\t\t\t\tprev.push(cur);\n\t\t\t\t}\n\t\t\t\treturn prev;\n\t\t\t}, 10);\n\n\t\t\tlet count = 0;\n\n\t\t\tds.add(onDocDidChange(keys => {\n\t\t\t\tcount++;\n\t\t\t\tassert.ok(keys, 'was not expecting keys.');\n\t\t\t\tif (count === 1) {\n\t\t\t\t\tdoc.setText('4');\n\t\t\t\t\tassert.deepStrictEqual(keys, ['1', '2', '3']);\n\t\t\t\t} else if (count === 2) {\n\t\t\t\t\tassert.deepStrictEqual(keys, ['4']);\n\t\t\t\t\tdone();\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tdoc.setText('1');\n\t\t\tdoc.setText('2');\n\t\t\tdoc.setText('3');\n\t\t});\n\n\n\t\ttest('microtask', function (done: () => void) {\n\t\t\tconst doc = ds.add(new Samples.Document3());\n\n\t\t\tconst onDocDidChange = Event.debounce(doc.onDidChange, (prev: string[] | undefined, cur) => {\n\t\t\t\tif (!prev) {\n\t\t\t\t\tprev = [cur];\n\t\t\t\t} else if (prev.indexOf(cur) < 0) {\n\t\t\t\t\tprev.push(cur);\n\t\t\t\t}\n\t\t\t\treturn prev;\n\t\t\t}, MicrotaskDelay);\n\n\t\t\tlet count = 0;\n\n\t\t\tds.add(onDocDidChange(keys => {\n\t\t\t\tcount++;\n\t\t\t\tassert.ok(keys, 'was not expecting keys.');\n\t\t\t\tif (count === 1) {\n\t\t\t\t\tdoc.setText('4');\n\t\t\t\t\tassert.deepStrictEqual(keys, ['1', '2', '3']);\n\t\t\t\t} else if (count === 2) {\n\t\t\t\t\tassert.deepStrictEqual(keys, ['4']);\n\t\t\t\t\tdone();\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tdoc.setText('1');\n\t\t\tdoc.setText('2');\n\t\t\tdoc.setText('3');\n\t\t});\n\n\n\t\ttest('leading', async function () {\n\t\t\tconst emitter = ds.add(new Emitter<void>());\n\t\t\tconst debounced = Event.debounce(emitter.event, (l, e) => e, 0, /*leading=*/true);\n\n\t\t\tlet calls = 0;\n\t\t\tds.add(debounced(() => {\n\t\t\t\tcalls++;\n\t\t\t}));\n\n\t\t\t// If the source event is fired once, the debounced (on the leading edge) event should be fired only once\n\t\t\temitter.fire();\n\n\t\t\tawait timeout(1);\n\t\t\tassert.strictEqual(calls, 1);\n\t\t});\n\n\t\ttest('leading (2)', async function () {\n\t\t\tconst emitter = ds.add(new Emitter<void>());\n\t\t\tconst debounced = Event.debounce(emitter.event, (l, e) => e, 0, /*leading=*/true);\n\n\t\t\tlet calls = 0;\n\t\t\tds.add(debounced(() => {\n\t\t\t\tcalls++;\n\t\t\t}));\n\n\t\t\t// If the source event is fired multiple times, the debounced (on the leading edge) event should be fired twice\n\t\t\temitter.fire();\n\t\t\temitter.fire();\n\t\t\temitter.fire();\n\t\t\tawait timeout(1);\n\t\t\tassert.strictEqual(calls, 2);\n\t\t});\n\n\t\ttest('leading reset', async function () {\n\t\t\tconst emitter = ds.add(new Emitter<number>());\n\t\t\tconst debounced = Event.debounce(emitter.event, (l, e) => l ? l + 1 : 1, 0, /*leading=*/true);\n\n\t\t\tconst calls: number[] = [];\n\t\t\tds.add(debounced((e) => calls.push(e)));\n\n\t\t\temitter.fire(1);\n\t\t\temitter.fire(1);\n\n\t\t\tawait timeout(1);\n\t\t\tassert.deepStrictEqual(calls, [1, 1]);\n\t\t});\n\n\t\ttest('should not flush events when a listener is disposed', async () => {\n\t\t\tconst emitter = ds.add(new Emitter<number>());\n\t\t\tconst debounced = Event.debounce(emitter.event, (l, e) => l ? l + 1 : 1, 0);\n\n\t\t\tconst calls: number[] = [];\n\t\t\tconst listener = ds.add(debounced((e) => calls.push(e)));\n\n\t\t\temitter.fire(1);\n\t\t\tlistener.dispose();\n\n\t\t\temitter.fire(1);\n\n\t\t\tawait timeout(1);\n\t\t\tassert.deepStrictEqual(calls, []);\n\t\t});\n\n\t\ttest('flushOnListenerRemove - should flush events when a listener is disposed', async () => {\n\t\t\tconst emitter = ds.add(new Emitter<number>());\n\t\t\tconst debounced = Event.debounce(emitter.event, (l, e) => l ? l + 1 : 1, 0, undefined, true);\n\n\t\t\tconst calls: number[] = [];\n\t\t\tconst listener = ds.add(debounced((e) => calls.push(e)));\n\n\t\t\temitter.fire(1);\n\t\t\tlistener.dispose();\n\n\t\t\temitter.fire(1);\n\n\t\t\tawait timeout(1);\n\t\t\tassert.deepStrictEqual(calls, [1], 'should fire with the first event, not the second (after listener dispose)');\n\t\t});\n\n\t\ttest('should flush events when the emitter is disposed', async () => {\n\t\t\tconst emitter = ds.add(new Emitter<number>());\n\t\t\tconst debounced = Event.debounce(emitter.event, (l, e) => l ? l + 1 : 1, 0);\n\n\t\t\tconst calls: number[] = [];\n\t\t\tds.add(debounced((e) => calls.push(e)));\n\n\t\t\temitter.fire(1);\n\t\t\temitter.dispose();\n\n\t\t\tawait timeout(1);\n\t\t\tassert.deepStrictEqual(calls, [1]);\n\t\t});\n\t});\n\n\tsuite('chain2', () => {\n\t\tlet em: Emitter<number>;\n\t\tlet calls: number[];\n\n\t\tsetup(() => {\n\t\t\tem = ds.add(new Emitter<number>());\n\t\t\tcalls = [];\n\t\t});\n\n\t\ttest('maps', () => {\n\t\t\tconst ev = Event.chain(em.event, $ => $.map(v => v * 2));\n\t\t\tds.add(ev(v => calls.push(v)));\n\t\t\tem.fire(1);\n\t\t\tem.fire(2);\n\t\t\tem.fire(3);\n\t\t\tassert.deepStrictEqual(calls, [2, 4, 6]);\n\t\t});\n\n\t\ttest('filters', () => {\n\t\t\tconst ev = Event.chain(em.event, $ => $.filter(v => v % 2 === 0));\n\t\t\tds.add(ev(v => calls.push(v)));\n\t\t\tem.fire(1);\n\t\t\tem.fire(2);\n\t\t\tem.fire(3);\n\t\t\tem.fire(4);\n\t\t\tassert.deepStrictEqual(calls, [2, 4]);\n\t\t});\n\n\t\ttest('reduces', () => {\n\t\t\tconst ev = Event.chain(em.event, $ => $.reduce((acc, v) => acc + v, 0));\n\t\t\tds.add(ev(v => calls.push(v)));\n\t\t\tem.fire(1);\n\t\t\tem.fire(2);\n\t\t\tem.fire(3);\n\t\t\tem.fire(4);\n\t\t\tassert.deepStrictEqual(calls, [1, 3, 6, 10]);\n\t\t});\n\n\t\ttest('latches', () => {\n\t\t\tconst ev = Event.chain(em.event, $ => $.latch());\n\t\t\tds.add(ev(v => calls.push(v)));\n\t\t\tem.fire(1);\n\t\t\tem.fire(1);\n\t\t\tem.fire(2);\n\t\t\tem.fire(2);\n\t\t\tem.fire(3);\n\t\t\tem.fire(3);\n\t\t\tem.fire(1);\n\t\t\tassert.deepStrictEqual(calls, [1, 2, 3, 1]);\n\t\t});\n\n\t\ttest('does everything', () => {\n\t\t\tconst ev = Event.chain(em.event, $ => $\n\t\t\t\t.filter(v => v % 2 === 0)\n\t\t\t\t.map(v => v * 2)\n\t\t\t\t.reduce((acc, v) => acc + v, 0)\n\t\t\t\t.latch()\n\t\t\t);\n\n\t\t\tds.add(ev(v => calls.push(v)));\n\t\t\tem.fire(1);\n\t\t\tem.fire(2);\n\t\t\tem.fire(3);\n\t\t\tem.fire(4);\n\t\t\tem.fire(0);\n\t\t\tassert.deepStrictEqual(calls, [4, 12]);\n\t\t});\n\t});\n});\n"],
  "mappings": ";;AAIA,OAAO,YAAY;AACnB,SAAS,YAAY;AACrB,SAAS,aAAa;AACtB,SAAS,iBAAiB,eAAe;AACzC,SAAS,yBAAyB;AAClC,SAAS,cAAc,iCAAiC;AACxD,SAAS,cAAc,iBAAiB,6BAA6B,SAAS,OAAO,eAAe,kBAAkB,YAAY,mBAAmB,sBAAsB,kBAAkB,kBAAkB,OAAO,gCAAgC;AACtP,SAAS,iBAAiB,aAAa,cAAc,sBAAsB,yBAAyB;AACpG,SAAS,iBAAiB,mBAAmB;AAC7C,SAAS,sBAAsB;AAC/B,SAAS,0BAA0B;AACnC,SAAS,+CAA+C;AAExD,IAAU;AAAA,CAAV,CAAUA,aAAV;AAAA,EAEQ,MAAM,aAAa;AAAA,IAnB3B,OAmB2B;AAAA;AAAA;AAAA,IAEzB,QAAQ;AAAA,IAER,QAAQ;AACP,WAAK,QAAQ;AAAA,IACd;AAAA,IAEA,UAAU;AACT,WAAK,SAAS;AAAA,IACf;AAAA,EACD;AAXO,EAAAA,SAAM;AAAA,EAaN,MAAM,UAAU;AAAA,IAhCxB,OAgCwB;AAAA;AAAA;AAAA,IAEL,eAAe,IAAI,QAAgB;AAAA,IAEpD,cAA6B,KAAK,aAAa;AAAA,IAE/C,QAAQ,OAAe;AAEtB,WAAK,aAAa,KAAK,KAAK;AAAA,IAC7B;AAAA,IAEA,UAAU;AACT,WAAK,aAAa,QAAQ;AAAA,IAC3B;AAAA,EAED;AAfO,EAAAA,SAAM;AAAA,GAfJ;AAiCV,MAAM,uBAAuB,WAAY;AAExC,QAAM,KAAK,wCAAwC;AAEnD,MAAI,UAAU,IAAI,kBAAkB;AAEpC,WAAS,uBAAuB,UAAuC;AACtE,QAAI,MAAM,QAAQ,QAAQ,GAAG;AAC5B,YAAM,YAAY,IAAI,IAAI,QAAQ;AAClC,YAAM,kBAAkB,QAAQ,sBAAsB;AACtD,aAAO,YAAY,gBAAgB,QAAQ,SAAS,MAAM;AAE1D,iBAAW,QAAQ,iBAAiB;AACnC,eAAO,GAAG,UAAU,IAAI,IAAI,CAAC;AAAA,MAC9B;AAAA,IAED,OAAO;AACN,aAAO,YAAY,QAAQ,sBAAsB,EAAE,QAAQ,QAAQ;AAAA,IACpE;AAAA,EAED;AAdS;AAgBT,QAAM,MAAM;AACX,cAAU,IAAI,kBAAkB;AAChC,yBAAqB,OAAO;AAAA,EAC7B,CAAC;AAED,WAAS,WAAY;AACpB,yBAAqB,IAAI;AAAA,EAC1B,CAAC;AAED,OAAK,+BAA+B,WAAY;AAE/C,UAAM,QAAQ,IAAI,gBAAgB;AAClC,UAAM,UAAU,GAAG,IAAI,IAAI,QAAgB,CAAC;AAC5C,UAAM,QAAQ,MAAM,OAAO,QAAQ,OAAO,OAAK,IAAI,MAAM,GAAG,KAAK;AACjE,2BAAuB,CAAC;AAExB,QAAI,MAAM;AACV,UAAM,SAAS,MAAM,OAAK,OAAO,CAAC;AAClC,WAAO,GAAG,aAAa,MAAM,CAAC;AAC9B,2BAAuB,CAAC;AAExB,YAAQ,QAAQ;AAChB,UAAM,QAAQ;AACd,2BAAuB,CAAC,MAAM,CAAC;AAAA,EAChC,CAAC;AAED,OAAK,8BAA8B,WAAY;AAC9C,UAAM,QAAQ,IAAI,gBAAgB;AAClC,UAAM,UAAU,GAAG,IAAI,IAAI,QAAgB,CAAC;AAC5C,UAAM,YAAY,MAAM,SAAS,QAAQ,OAAO,CAAC,MAAM,GAAG,QAAW,QAAW,QAAW,QAAW,KAAK;AAC3G,2BAAuB,CAAC;AAExB,QAAI,MAAM;AACV,UAAM,SAAS,UAAU,OAAK,OAAO,CAAC;AACtC,WAAO,GAAG,aAAa,MAAM,CAAC;AAC9B,2BAAuB,CAAC;AAExB,YAAQ,QAAQ;AAChB,UAAM,QAAQ;AAEd,2BAAuB,CAAC,MAAM,CAAC;AAAA,EAChC,CAAC;AACF,CAAC;AAED,MAAM,SAAS,WAAY;AAE1B,QAAM,KAAK,wCAAwC;AAEnD,QAAM,UAAU,IAAI,QAAQ,aAAa;AAEzC,QAAM,MAAM,QAAQ,MAAM,CAAC;AAE3B,OAAK,iBAAiB,WAAY;AAEjC,UAAM,MAAM,GAAG,IAAI,IAAI,QAAQ,UAAU,CAAC;AAE1C,UAAM,eAAe,IAAI,YAAY,QAAQ,SAAS,OAAO;AAE7D,QAAI,QAAQ,KAAK;AACjB,QAAI,QAAQ,KAAK;AAGjB,iBAAa,QAAQ;AACrB,QAAI,QAAQ,KAAK;AACjB,WAAO,YAAY,QAAQ,OAAO,CAAC;AAAA,EACpC,CAAC;AAED,OAAK,+BAA+B,MAAM;AACzC,UAAM,QAAkB,CAAC;AACzB,UAAM,IAAI,wBAAC,MAAc,MAAM,KAAK,IAAI,CAAC,EAAE,GAAjC;AACV,UAAM,IAAI,wBAAC,MAAc,MAAM,KAAK,IAAI,CAAC,EAAE,GAAjC;AAEV,UAAM,UAAU,GAAG,IAAI,IAAI,QAAgB,CAAC;AAE5C,OAAG,IAAI,QAAQ,MAAM,CAAC,CAAC;AACvB,OAAG,IAAI,QAAQ,MAAM,CAAC,CAAC;AACvB,UAAM,KAAK,QAAQ,MAAM,CAAC;AAE1B,YAAQ,KAAK,GAAG;AAChB,WAAO,gBAAgB,OAAO,CAAC,MAAM,MAAM,IAAI,CAAC;AAEhD,OAAG,QAAQ;AACX,UAAM,SAAS;AACf,YAAQ,KAAK,GAAG;AAChB,WAAO,gBAAgB,OAAO,CAAC,MAAM,IAAI,CAAC;AAAA,EAC3C,CAAC;AAED,OAAK,6CAA6C,MAAM;AACvD,aAAS,eAAe,GAAG,eAAe,GAAG,gBAAgB;AAC5D,YAAM,UAAU,GAAG,IAAI,IAAI,QAAc,CAAC;AAC1C,YAAM,QAAkB,CAAC;AACzB,YAAM,cAAc,MAAM,KAAK,EAAE,QAAQ,GAAG,GAAG,CAAC,GAAG,MAAM,GAAG,IAAI,QAAQ,MAAM,MAAM;AACnF,YAAI,IAAI,iBAAiB,GAAG;AAC3B,sBAAY,CAAC,EAAE,QAAQ;AAAA,QACxB;AACA,cAAM,KAAK,CAAC;AAAA,MACb,CAAC,CAAC,CAAC;AAEH,cAAQ,KAAK;AACb,aAAO,gBAAgB,OAAO,MAAM,KAAK,EAAE,QAAQ,GAAG,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC;AAAA,IACtE;AAAA,EACD,CAAC;AAED,OAAK,4CAA4C,MAAM;AACtD,UAAM,UAAU,GAAG,IAAI,IAAI,QAAc,CAAC;AAC1C,UAAM,QAAkB,CAAC;AACzB,UAAM,cAAc,MAAM,KAAK,EAAE,QAAQ,GAAG,GAAG,CAAC,GAAG,MAAM,GAAG,IAAI,QAAQ,MAAM,MAAM;AACnF,UAAI,MAAM,IAAI;AACb,gBAAQ,QAAQ;AAAA,MACjB;AACA,YAAM,KAAK,CAAC;AAAA,IACb,CAAC,CAAC,CAAC;AAEH,YAAQ,KAAK;AACb,gBAAY,QAAQ,OAAK,EAAE,QAAQ,CAAC;AACpC,WAAO,gBAAgB,OAAO,MAAM,KAAK,EAAE,QAAQ,GAAG,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC;AAAA,EACtE,CAAC;AAED,OAAK,kCAAkC,MAAM;AAC5C,UAAM,gBAAgB,yBAAyB;AAC/C,UAAM,WAAW,GAAG,IAAI,IAAI,QAAgB,EAAE,cAAc,CAAC,CAAC;AAC9D,UAAM,WAAW,GAAG,IAAI,IAAI,QAAgB,EAAE,cAAc,CAAC,CAAC;AAE9D,UAAM,QAAkB,CAAC;AACzB,OAAG,IAAI,SAAS,MAAM,OAAK;AAAE,YAAM,KAAK,GAAG,CAAC,GAAG;AAAG,UAAI,MAAM,GAAG;AAAE,iBAAS,KAAK,CAAC;AAAA,MAAG;AAAA,IAAE,CAAC,CAAC;AACvF,OAAG,IAAI,SAAS,MAAM,OAAK;AAAE,YAAM,KAAK,GAAG,CAAC,GAAG;AAAA,IAAG,CAAC,CAAC;AAEpD,OAAG,IAAI,SAAS,MAAM,OAAK;AAAE,YAAM,KAAK,GAAG,CAAC,GAAG;AAAG,eAAS,QAAQ;AAAA,IAAG,CAAC,CAAC;AACxE,OAAG,IAAI,SAAS,MAAM,OAAK;AAAE,YAAM,KAAK,GAAG,CAAC,GAAG;AAAA,IAAG,CAAC,CAAC;AAEpD,aAAS,KAAK,CAAC;AAIf,WAAO,gBAAgB,OAAO,CAAC,MAAM,MAAM,MAAM,IAAI,CAAC;AAAA,EACvD,CAAC;AAED,OAAK,qCAAqC,MAAM;AAC/C,UAAM,MAAM,KAAK;AACjB,UAAM,MAAM,KAAK;AACjB,UAAM,UAAU,GAAG,IAAI,IAAI,QAAgB,CAAC;AAE5C,OAAG,IAAI,QAAQ,MAAM,GAAG,CAAC;AACzB,UAAM,IAAI,QAAQ,MAAM,MAAM;AAC7B,QAAE,QAAQ;AAAA,IACX,CAAC;AACD,OAAG,IAAI,QAAQ,MAAM,GAAG,CAAC;AACzB,YAAQ,KAAK,KAAK;AAElB,WAAO,gBAAgB,IAAI,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC;AAC1C,WAAO,gBAAgB,IAAI,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC;AAAA,EAC3C,CAAC;AAED,OAAK,qCAAqC,MAAM;AAC/C,UAAM,MAAM,KAAK;AACjB,UAAM,UAAU,GAAG,IAAI,IAAI,QAAgB,CAAC;AAE5C,OAAG,IAAI,QAAQ,MAAM,GAAG,CAAC;AACzB,UAAM,IAAI,QAAQ,MAAM,MAAM;AAC7B,QAAE,QAAQ;AAAA,IACX,CAAC;AACD,YAAQ,KAAK,KAAK;AAElB,WAAO,gBAAgB,IAAI,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC;AAAA,EAC3C,CAAC;AAED,OAAK,mBAAmB,WAAY;AAEnC,UAAM,SAAwB,CAAC;AAC/B,UAAM,MAAM,GAAG,IAAI,IAAI,QAAQ,UAAU,CAAC;AAC1C,UAAM,eAAe,IAAI,YAAY,QAAQ,SAAS,SAAS,MAAM;AAErE,QAAI,QAAQ,KAAK;AACjB,QAAI,QAAQ,KAAK;AAGjB,WAAO,OAAO,QAAQ;AACrB,aAAO,IAAI,EAAG,QAAQ;AAAA,IACvB;AACA,QAAI,QAAQ,KAAK;AAGjB,iBAAa,QAAQ;AAErB,QAAI,QAAQ,KAAK;AACjB,WAAO,YAAY,QAAQ,OAAO,CAAC;AAAA,EACpC,CAAC;AAED,OAAK,kBAAkB,WAAY;AAElC,UAAM,SAAS,GAAG,IAAI,IAAI,gBAAgB,CAAC;AAC3C,UAAM,MAAM,GAAG,IAAI,IAAI,QAAQ,UAAU,CAAC;AAC1C,UAAM,eAAe,IAAI,YAAY,QAAQ,SAAS,SAAS,MAAM;AAErE,QAAI,QAAQ,KAAK;AACjB,QAAI,QAAQ,KAAK;AAGjB,WAAO,MAAM;AACb,QAAI,QAAQ,KAAK;AAGjB,iBAAa,QAAQ;AAErB,QAAI,QAAQ,KAAK;AACjB,WAAO,YAAY,QAAQ,OAAO,CAAC;AAAA,EACpC,CAAC;AAED,OAAK,2BAA2B,MAAM;AAErC,QAAI,aAAa;AACjB,QAAI,YAAY;AAChB,UAAM,IAAI,GAAG,IAAI,IAAI,QAAQ;AAAA,MAC5B,yBAAyB;AAAE,sBAAc;AAAA,MAAG;AAAA,MAC5C,0BAA0B;AAAE,qBAAa;AAAA,MAAG;AAAA,IAC7C,CAAC,CAAC;AAEF,WAAO,YAAY,YAAY,CAAC;AAChC,WAAO,YAAY,WAAW,CAAC;AAE/B,QAAI,gBAAgB,GAAG,IAAI,EAAE,MAAM,WAAY;AAAA,IAAE,CAAC,CAAC;AACnD,UAAM,gBAAgB,GAAG,IAAI,EAAE,MAAM,WAAY;AAAA,IAAE,CAAC,CAAC;AACrD,WAAO,YAAY,YAAY,CAAC;AAChC,WAAO,YAAY,WAAW,CAAC;AAE/B,kBAAc,QAAQ;AACtB,WAAO,YAAY,YAAY,CAAC;AAChC,WAAO,YAAY,WAAW,CAAC;AAE/B,kBAAc,QAAQ;AACtB,WAAO,YAAY,YAAY,CAAC;AAChC,WAAO,YAAY,WAAW,CAAC;AAE/B,oBAAgB,GAAG,IAAI,EAAE,MAAM,WAAY;AAAA,IAAE,CAAC,CAAC;AAC/C,WAAO,YAAY,YAAY,CAAC;AAChC,WAAO,YAAY,WAAW,CAAC;AAAA,EAChC,CAAC;AAED,OAAK,wBAAwB,MAAM;AAClC,QAAI,QAAQ;AACZ,UAAM,IAAI,GAAG,IAAI,IAAI,QAAQ;AAAA,MAC5B,uBAAuB;AAAE,iBAAS;AAAA,MAAG;AAAA,IACtC,CAAC,CAAC;AAEF,WAAO,YAAY,OAAO,CAAC;AAE3B,QAAI,eAAe,GAAG,IAAI,EAAE,MAAM,WAAY;AAAA,IAAE,CAAC,CAAC;AAClD,WAAO,YAAY,OAAO,CAAC;AAE3B,iBAAa,QAAQ;AACrB,WAAO,YAAY,OAAO,CAAC;AAE3B,mBAAe,GAAG,IAAI,EAAE,MAAM,WAAY;AAAA,IAAE,CAAC,CAAC;AAC9C,WAAO,YAAY,OAAO,CAAC;AAAA,EAC5B,CAAC;AAED,OAAK,oBAAoB,MAAM;AAC9B,UAAM,mBAAmB,aAAa,0BAA0B;AAChE,8BAA0B,MAAM,IAAI;AAEpC,QAAI;AACH,YAAM,IAAI,GAAG,IAAI,IAAI,QAAmB,CAAC;AACzC,UAAI,MAAM;AACV,SAAG,IAAI,EAAE,MAAM,WAAY;AAE1B,cAAM;AAAA,MACP,CAAC,CAAC;AACF,SAAG,IAAI,EAAE,MAAM,WAAY;AAC1B,cAAM;AAAA,MACP,CAAC,CAAC;AACF,QAAE,KAAK,MAAS;AAChB,aAAO,YAAY,KAAK,IAAI;AAAA,IAE7B,UAAE;AACD,gCAA0B,gBAAgB;AAAA,IAC3C;AAAA,EACD,CAAC;AAED,OAAK,qCAAqC,MAAM;AAE/C,UAAM,WAAkB,CAAC;AAEzB,UAAM,IAAI,GAAG,IAAI,IAAI,QAAmB;AAAA,MACvC,gBAAgB,GAAG;AAAE,iBAAS,KAAK,CAAC;AAAA,MAAG;AAAA,IACxC,CAAC,CAAC;AACF,QAAI,MAAM;AACV,OAAG,IAAI,EAAE,MAAM,WAAY;AAE1B,YAAM;AAAA,IACP,CAAC,CAAC;AACF,OAAG,IAAI,EAAE,MAAM,WAAY;AAC1B,YAAM;AAAA,IACP,CAAC,CAAC;AACF,MAAE,KAAK,MAAS;AAChB,WAAO,YAAY,KAAK,IAAI;AAC5B,WAAO,gBAAgB,UAAU,CAAC,CAAC,CAAC;AAAA,EAErC,CAAC;AAED,OAAK,2BAA2B,MAAM;AAErC,UAAM,QAAQ,IAAI,gBAAgB;AAClC,UAAM,WAAkB,CAAC;AAEzB,UAAM,IAAI,GAAG,IAAI,IAAI,QAAmB;AAAA,MACvC,gBAAgB,GAAG;AAAE,iBAAS,KAAK,CAAC;AAAA,MAAG;AAAA,MACvC,sBAAsB;AAAA,IACvB,CAAC,CAAC;AAEF,aAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AAC5B,QAAE,MAAM,MAAM;AAAA,MAAE,GAAG,QAAW,KAAK;AAAA,IACpC;AAEA,WAAO,gBAAgB,SAAS,QAAQ,CAAC;AACzC,UAAM,CAAC,OAAO,IAAI,IAAI,MAAM,QAAQ;AACpC,WAAO,GAAG,gBAAgB,oBAAoB;AAE9C,eAAW,QAAQ,OAAO;AACzB,aAAO,GAAG,gBAAgB,iBAAiB;AAAA,IAC5C;AAEA,UAAM,QAAQ;AAAA,EACf,CAAC;AAED,OAAK,sCAAsC,WAAY;AACtD,QAAIC,WAAU;AACd,aAAS,WAAW;AACnB,MAAAA,YAAW;AAAA,IACZ;AAFS;AAGT,UAAM,UAAU,CAAC;AAEjB,UAAM,UAAU,GAAG,IAAI,IAAI,QAAmB,CAAC;AAC/C,UAAM,OAAO,QAAQ,MAAM,UAAU,OAAO;AAC5C,UAAM,OAAO,QAAQ,MAAM,UAAU,OAAO;AAE5C,YAAQ,KAAK,MAAS;AACtB,WAAO,YAAYA,UAAS,CAAC;AAE7B,SAAK,QAAQ;AACb,YAAQ,KAAK,MAAS;AACtB,WAAO,YAAYA,UAAS,CAAC;AAE7B,SAAK,QAAQ;AACb,YAAQ,KAAK,MAAS;AACtB,WAAO,YAAYA,UAAS,CAAC;AAAA,EAC9B,CAAC;AAED,OAAK,mBAAmB,iBAAkB;AACzC,WAAO,mBAAmB,CAAC,GAAG,iBAAkB;AAE/C,UAAI,YAAY;AAChB,UAAI,MAAM;AACV,YAAM,UAAU,IAAI,gBAAwB;AAAA,QAC3C,OAAO,gCAAO;AACb,uBAAa;AACb,iBAAO,IAAI,OAAO,CAACC,IAAG,MAAMA,KAAI,CAAC;AAAA,QAClC,GAHO;AAAA,MAIR,CAAC;AAED,SAAG,IAAI,QAAQ,MAAM,OAAK;AAAE,cAAM;AAAA,MAAG,CAAC,CAAC;AAEvC,YAAM,IAAI,MAAM,UAAU,QAAQ,KAAK;AAEvC,cAAQ,KAAK,CAAC;AACd,cAAQ,KAAK,CAAC;AAEd,YAAM;AAEN,aAAO,YAAY,WAAW,CAAC;AAC/B,aAAO,YAAY,KAAK,CAAC;AAAA,IAC1B,CAAC;AAAA,EACF,CAAC;AAED,OAAK,qBAAqB,CAAC,SAAS;AACnC,QAAI,QAAQ;AACZ,WAAO,YAAY,OAAO,CAAC;AAC3B,UAAM,UAAU,IAAI,iBAAuB;AAC3C,UAAM,WAAW,QAAQ,MAAM,MAAM;AACpC;AAAA,IACD,CAAC;AACD,YAAQ,KAAK;AACb,WAAO,YAAY,OAAO,CAAC;AAC3B,YAAQ,KAAK;AACb,WAAO,YAAY,OAAO,CAAC;AAE3B,eAAW,MAAM;AAChB,aAAO,YAAY,OAAO,CAAC;AAC3B,WAAK;AAAA,IACN,GAAG,CAAC;AACJ,mBAAe,MAAM;AACpB,aAAO,YAAY,OAAO,CAAC;AAC3B;AACA,eAAS,QAAQ;AAAA,IAClB,CAAC;AAAA,EACF,CAAC;AAED,OAAK,+BAA+B,WAAY;AAC/C,UAAM,IAAI,GAAG,IAAI,IAAI,QAAgB,CAAC;AACtC,UAAM,kBAA4B,CAAC;AACnC,OAAG,IAAI,EAAE,MAAM,gCAAS,UAAU,OAAO;AACxC,UAAI,UAAU,MAAM;AACnB,UAAE,KAAK,IAAI;AAEX,eAAO,gBAAgB,iBAAiB,CAAC,MAAM,IAAI,CAAC;AAAA,MACrD;AAAA,IACD,GANe,YAMd,CAAC;AACF,OAAG,IAAI,EAAE,MAAM,gCAAS,UAAU,OAAO;AACxC,sBAAgB,KAAK,KAAK;AAAA,IAC3B,GAFe,YAEd,CAAC;AACF,MAAE,KAAK,IAAI;AAGX,WAAO,gBAAgB,iBAAiB,CAAC,MAAM,IAAI,CAAC;AAAA,EACrD,CAAC;AAED,OAAK,mCAAmC,WAAY;AACnD,UAAM,IAAI,GAAG,IAAI,IAAI,QAAgB,CAAC;AACtC,UAAM,kBAA4B,CAAC;AACnC,OAAG,IAAI,EAAE,MAAM,gCAAS,UAAU,OAAO;AACxC,UAAI,UAAU,MAAM;AACnB,UAAE,KAAK,IAAI;AAEX,eAAO,gBAAgB,iBAAiB,CAAC,MAAM,MAAM,IAAI,CAAC;AAAA,MAC3D;AAAA,IACD,GANe,YAMd,CAAC;AACF,OAAG,IAAI,EAAE,MAAM,gCAAS,UAAU,OAAO;AACxC,UAAI,UAAU,MAAM;AACnB,UAAE,KAAK,IAAI;AAEX,eAAO,gBAAgB,iBAAiB,CAAC,MAAM,MAAM,IAAI,CAAC;AAAA,MAC3D;AAAA,IACD,GANe,YAMd,CAAC;AACF,OAAG,IAAI,EAAE,MAAM,gCAAS,UAAU,OAAO;AACxC,sBAAgB,KAAK,KAAK;AAAA,IAC3B,GAFe,YAEd,CAAC;AACF,MAAE,KAAK,IAAI;AAGX,WAAO,gBAAgB,iBAAiB,CAAC,MAAM,MAAM,IAAI,CAAC;AAAA,EAC3D,CAAC;AAED,OAAK,uDAAyD,WAAY;AACzE,UAAM,IAAI,GAAG,IAAI,IAAI,QAAgB,CAAC;AACtC,UAAM,QAAQ,EAAE,MAAM,MAAM;AAAA,IAAE,CAAC;AAC/B,UAAM,QAAQ,KAAK,MAAS;AAAA,EAC7B,CAAC;AACF,CAAC;AAED,MAAM,gBAAgB,WAAY;AAEjC,QAAM,KAAK,wCAAwC;AAEnD,OAAK,gCAAgC,iBAAkB;AAOtD,UAAM,UAAU,IAAI,aAAgB;AAEpC,OAAG,IAAI,QAAQ,MAAM,OAAK;AACzB,aAAO,YAAY,EAAE,KAAK,IAAI;AAC9B,aAAO,YAAY,EAAE,KAAK,CAAC;AAC3B,aAAO,YAAY,OAAO,EAAE,WAAW,UAAU;AAAA,IAClD,CAAC,CAAC;AAEF,YAAQ,UAAU,EAAE,KAAK,MAAM,KAAK,EAAG,GAAG,kBAAkB,IAAI;AAChE,YAAQ,QAAQ;AAAA,EACjB,CAAC;AAED,OAAK,uBAAuB,iBAAkB;AAC7C,WAAO,mBAAmB,CAAC,GAAG,iBAAkB;AAM/C,UAAI,cAAc;AAClB,YAAM,UAAU,IAAI,aAAgB;AAEpC,SAAG,IAAI,QAAQ,MAAM,OAAK;AACzB,UAAE,UAAU,QAAQ,EAAE,EAAE,KAAK,OAAK;AACjC,iBAAO,YAAY,aAAa,CAAC;AACjC,yBAAe;AAAA,QAChB,CAAC,CAAC;AAAA,MACH,CAAC,CAAC;AAEF,SAAG,IAAI,QAAQ,MAAM,OAAK;AACzB,UAAE,UAAU,QAAQ,CAAC,EAAE,KAAK,OAAK;AAChC,iBAAO,YAAY,aAAa,CAAC;AACjC,yBAAe;AAAA,QAChB,CAAC,CAAC;AAAA,MACH,CAAC,CAAC;AAEF,YAAM,QAAQ,UAAU,EAAE,KAAK,KAAK,GAAG,kBAAkB,IAAI;AAC7D,aAAO,YAAY,aAAa,CAAC;AAAA,IAClC,CAAC;AAAA,EACF,CAAC;AAED,OAAK,iCAAiC,iBAAkB;AACvD,WAAO,mBAAmB,CAAC,GAAG,iBAAkB;AAK/C,YAAM,SAAmB,CAAC;AAC1B,UAAI,OAAO;AACX,YAAM,UAAU,IAAI,aAAgB;AAGpC,SAAG,IAAI,QAAQ,MAAM,OAAK;AACzB,UAAE,UAAU,QAAQ,EAAE,EAAE,KAAK,OAAM,MAAK;AACvC,cAAI,EAAE,QAAQ,GAAG;AAChB,kBAAM,QAAQ,UAAU,EAAE,KAAK,EAAE,GAAG,kBAAkB,IAAI;AAC1D,mBAAO,gBAAgB,QAAQ,CAAC,GAAG,CAAC,CAAC;AACrC,mBAAO;AAAA,UACR;AAAA,QACD,CAAC,CAAC;AAAA,MACH,CAAC,CAAC;AAGF,SAAG,IAAI,QAAQ,MAAM,OAAK;AACzB,eAAO,KAAK,EAAE,GAAG;AACjB,UAAE,UAAU,QAAQ,CAAC,CAAC;AAAA,MACvB,CAAC,CAAC;AAEF,YAAM,QAAQ,UAAU,EAAE,KAAK,EAAE,GAAG,kBAAkB,IAAI;AAC1D,aAAO,GAAG,IAAI;AAAA,IACf,CAAC;AAAA,EACF,CAAC;AAED,OAAK,gBAAgB,iBAAkB;AACtC,UAAM,mBAAmB,aAAa,0BAA0B;AAChE,8BAA0B,MAAM,IAAI;AAMpC,QAAI,cAAc;AAClB,UAAM,UAAU,IAAI,aAAgB;AAEpC,OAAG,IAAI,QAAQ,MAAM,OAAK;AACzB,qBAAe;AACf,QAAE,UAAU,IAAI,QAAQ,CAAC,IAAI,WAAW,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC;AAAA,IAC7D,CAAC,CAAC;AAEF,OAAG,IAAI,QAAQ,MAAM,OAAK;AACzB,qBAAe;AACf,QAAE,UAAU,QAAQ,EAAE,CAAC;AACvB,QAAE,UAAU,QAAQ,EAAE,EAAE,KAAK,MAAM,aAAa,CAAC;AAAA,IAClD,CAAC,CAAC;AAEF,UAAM,QAAQ,UAAU,EAAE,KAAK,KAAK,GAAG,kBAAkB,IAAI,EAAE,KAAK,MAAM;AACzE,aAAO,YAAY,aAAa,CAAC;AAAA,IAClC,CAAC,EAAE,MAAM,OAAK;AACb,cAAQ,IAAI,CAAC;AACb,aAAO,GAAG,KAAK;AAAA,IAChB,CAAC;AAED,8BAA0B,gBAAgB;AAAA,EAC3C,CAAC;AACF,CAAC;AAED,MAAM,mBAAmB,WAAY;AAEpC,QAAM,KAAK,wCAAwC;AAEnD,OAAK,SAAS,WAAY;AACzB,UAAM,OAAiB,CAAC;AACxB,UAAM,UAAU,GAAG,IAAI,IAAI,iBAAyB,CAAC;AAErD,OAAG,IAAI,QAAQ,MAAM,OAAK,KAAK,KAAK,CAAC,CAAC,CAAC;AACvC,YAAQ,KAAK,CAAC;AACd,YAAQ,KAAK,CAAC;AAEd,WAAO,gBAAgB,MAAM,CAAC,GAAG,CAAC,CAAC;AAAA,EACpC,CAAC;AAED,OAAK,2BAA2B,WAAY;AAC3C,UAAM,OAAiB,CAAC;AACxB,UAAM,UAAU,GAAG,IAAI,IAAI,iBAAyB,CAAC;AAErD,OAAG,IAAI,QAAQ,MAAM,OAAK,KAAK,KAAK,CAAC,CAAC,CAAC;AACvC,YAAQ,KAAK,CAAC;AACd,YAAQ,KAAK,CAAC;AACd,WAAO,gBAAgB,MAAM,CAAC,GAAG,CAAC,CAAC;AAEnC,YAAQ,MAAM;AACd,YAAQ,KAAK,CAAC;AACd,YAAQ,KAAK,CAAC;AACd,WAAO,gBAAgB,MAAM,CAAC,GAAG,CAAC,CAAC;AAEnC,YAAQ,OAAO;AACf,WAAO,gBAAgB,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AACzC,YAAQ,KAAK,CAAC;AACd,WAAO,gBAAgB,MAAM,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;AAAA,EAC7C,CAAC;AAED,OAAK,wBAAwB,WAAY;AACxC,UAAM,OAAiB,CAAC;AACxB,UAAM,UAAU,GAAG,IAAI,IAAI,iBAAyB,EAAE,OAAO,wBAAC,MAAM,EAAE,OAAO,CAAC,GAAG,MAAM,IAAI,GAAG,CAAC,GAAlC,SAAoC,CAAC,CAAC;AAEnG,OAAG,IAAI,QAAQ,MAAM,OAAK,KAAK,KAAK,CAAC,CAAC,CAAC;AACvC,YAAQ,KAAK,CAAC;AACd,YAAQ,KAAK,CAAC;AACd,WAAO,gBAAgB,MAAM,CAAC,GAAG,CAAC,CAAC;AAEnC,YAAQ,MAAM;AACd,YAAQ,KAAK,CAAC;AACd,YAAQ,KAAK,CAAC;AACd,WAAO,gBAAgB,MAAM,CAAC,GAAG,CAAC,CAAC;AAEnC,YAAQ,OAAO;AACf,WAAO,gBAAgB,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC;AAEtC,YAAQ,KAAK,CAAC;AACd,WAAO,gBAAgB,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AAAA,EAC1C,CAAC;AAED,OAAK,uBAAuB,WAAY;AACvC,UAAM,OAAiB,CAAC;AACxB,UAAM,UAAU,GAAG,IAAI,IAAI,iBAAyB,CAAC;AAErD,OAAG,IAAI,QAAQ,MAAM,OAAK,KAAK,KAAK,CAAC,CAAC,CAAC;AACvC,YAAQ,KAAK,CAAC;AACd,YAAQ,KAAK,CAAC;AACd,WAAO,gBAAgB,MAAM,CAAC,GAAG,CAAC,CAAC;AAEnC,YAAQ,MAAM;AACd,YAAQ,MAAM;AACd,YAAQ,KAAK,CAAC;AACd,YAAQ,KAAK,CAAC;AACd,WAAO,gBAAgB,MAAM,CAAC,GAAG,CAAC,CAAC;AAEnC,YAAQ,OAAO;AACf,WAAO,gBAAgB,MAAM,CAAC,GAAG,CAAC,CAAC;AAEnC,YAAQ,OAAO;AACf,WAAO,gBAAgB,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AAEzC,YAAQ,OAAO;AACf,WAAO,gBAAgB,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AAAA,EAC1C,CAAC;AAED,OAAK,oBAAoB,WAAY;AACpC,UAAM,OAAiB,CAAC;AACxB,UAAM,UAAU,GAAG,IAAI,IAAI,iBAAyB,CAAC;AAErD,OAAG,IAAI,QAAQ,MAAM,OAAK,KAAK,KAAK,CAAC,CAAC,CAAC;AACvC,YAAQ,KAAK,CAAC;AACd,YAAQ,KAAK,CAAC;AACd,WAAO,gBAAgB,MAAM,CAAC,GAAG,CAAC,CAAC;AAEnC,YAAQ,OAAO;AACf,YAAQ,KAAK,CAAC;AACd,WAAO,gBAAgB,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC;AAAA,EACvC,CAAC;AAED,OAAK,gBAAgB,WAAY;AAChC,UAAM,OAAiB,CAAC;AACxB,UAAM,UAAU,GAAG,IAAI,IAAI,iBAAyB,CAAC;AAErD,QAAI,OAAO;AACX,OAAG,IAAI,QAAQ,MAAM,OAAK;AACzB,WAAK,KAAK,CAAC;AAEX,UAAI,MAAM;AACT,gBAAQ,MAAM;AACd,eAAO;AAAA,MACR;AAAA,IACD,CAAC,CAAC;AACF,OAAG,IAAI,QAAQ,MAAM,OAAK;AACzB,WAAK,KAAK,CAAC;AAAA,IACZ,CAAC,CAAC;AAEF,YAAQ,MAAM;AACd,YAAQ,KAAK,CAAC;AACd,YAAQ,KAAK,CAAC;AACd,WAAO,gBAAgB,MAAM,CAAC,CAAC;AAE/B,YAAQ,OAAO;AACf,WAAO,gBAAgB,MAAM,CAAC,GAAG,CAAC,CAAC;AAEnC,YAAQ,OAAO;AACf,WAAO,gBAAgB,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AAEzC,YAAQ,KAAK,CAAC;AACd,WAAO,gBAAgB,MAAM,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;AAAA,EAEhD,CAAC;AAED,OAAK,0BAA0B,WAAY;AAC1C,UAAM,OAAiB,CAAC;AACxB,UAAM,UAAU,GAAG,IAAI,IAAI,iBAAyB,EAAE,OAAO,8BAAK,EAAE,CAAC,GAAR,SAAU,CAAC,CAAC;AACzE,OAAG,IAAI,QAAQ,MAAM,OAAK,KAAK,KAAK,CAAC,CAAC,CAAC;AAEvC,YAAQ,MAAM;AACd,YAAQ,OAAO;AACf,WAAO,gBAAgB,MAAM,CAAC,CAAC;AAAA,EAChC,CAAC;AAEF,CAAC;AAED,MAAM,yDAAyD,WAAY;AAC1E,0CAAwC;AAExC,OAAK,kBAAkB,WAAY;AAElC,UAAM,MAAM,gBAAgB,QAAQ,EAAE;AACtC,UAAM,QAAQ,MAAM,eAAe,GAAG;AAEtC,UAAM,SAAmB,CAAC;AAC1B,UAAM,IAAI,MAAM,OAAK;AAAE,aAAO,KAAK,CAAC;AAAA,IAAG,CAAC;AAExC,QAAI,IAAI,GAAG,MAAS;AACpB,QAAI,IAAI,IAAI,MAAS;AACrB,QAAI,IAAI,GAAG,MAAS;AACpB,QAAI,IAAI,IAAI,MAAS;AACrB,QAAI,IAAI,GAAG,MAAS;AAEpB,gBAAY,QAAM;AACjB,UAAI,IAAI,KAAK,EAAE;AACf,UAAI,IAAI,IAAI,EAAE;AAAA,IACf,CAAC;AAED,WAAO,gBAAgB,QAAS,CAAC,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE,CAAE;AACtD,MAAE,QAAQ;AAAA,EACX,CAAC;AACF,CAAC;AAED,MAAM,eAAe,MAAM;AAE1B,QAAM,KAAK,wCAAwC;AAEnD,QAAM,iBAAiB,MAAM;AAE5B,SAAK,sCAAsC,MAAM;AAChD,YAAM,WAAW,IAAI,cAAc;AACnC,YAAM,UAAU,IAAI,QAAQ,aAAa;AACzC,YAAM,UAAU,GAAG,IAAI,IAAI,QAAc,CAAC;AAC1C,YAAM,QAAQ,SAAS,UAAU,QAAQ,KAAK;AAC9C,YAAM,WAAW,MAAM,QAAQ,SAAS,OAAO;AAE/C,aAAO,YAAY,QAAQ,OAAO,CAAC;AACnC,cAAQ,KAAK;AACb,aAAO,YAAY,QAAQ,OAAO,CAAC;AACnC,cAAQ,KAAK;AACb,aAAO,YAAY,QAAQ,OAAO,CAAC;AACnC,cAAQ,KAAK;AACb,aAAO,YAAY,QAAQ,OAAO,CAAC;AAEnC,eAAS,QAAQ;AAAA,IAClB,CAAC;AAED,SAAK,8BAA8B,MAAM;AACxC,YAAM,WAAW,IAAI,cAAc;AACnC,YAAM,UAAU,IAAI,QAAQ,aAAa;AACzC,YAAM,UAAU,GAAG,IAAI,IAAI,QAAc,CAAC;AAC1C,YAAM,QAAQ,SAAS,UAAU,QAAQ,KAAK;AAC9C,YAAM,WAAW,MAAM,QAAQ,SAAS,OAAO;AAE/C,aAAO,YAAY,QAAQ,OAAO,CAAC;AACnC,cAAQ,KAAK;AACb,aAAO,YAAY,QAAQ,OAAO,CAAC;AAEnC,eAAS,aAAa,MAAM;AAC3B,gBAAQ,KAAK;AACb,eAAO,YAAY,QAAQ,OAAO,CAAC;AACnC,gBAAQ,KAAK;AACb,eAAO,YAAY,QAAQ,OAAO,CAAC;AAAA,MACpC,CAAC;AAED,aAAO,YAAY,QAAQ,OAAO,CAAC;AACnC,cAAQ,KAAK;AACb,aAAO,YAAY,QAAQ,OAAO,CAAC;AAEnC,eAAS,QAAQ;AAAA,IAClB,CAAC;AAED,SAAK,QAAQ,MAAM;AAClB,YAAM,UAAU,GAAG,IAAI,IAAI,QAAc,CAAC;AAE1C,UAAI,WAAW,GAAG,WAAW,GAAG,WAAW;AAE3C,YAAM,YAAY,QAAQ,MAAM,MAAM,UAAU;AAChD,YAAM,YAAY,MAAM,KAAK,QAAQ,KAAK,EAAE,MAAM,UAAU;AAC5D,YAAM,YAAY,MAAM,KAAK,QAAQ,KAAK,EAAE,MAAM,UAAU;AAE5D,aAAO,YAAY,UAAU,CAAC;AAC9B,aAAO,YAAY,UAAU,CAAC;AAC9B,aAAO,YAAY,UAAU,CAAC;AAE9B,gBAAU,QAAQ;AAClB,cAAQ,KAAK;AACb,aAAO,YAAY,UAAU,CAAC;AAC9B,aAAO,YAAY,UAAU,CAAC;AAC9B,aAAO,YAAY,UAAU,CAAC;AAE9B,cAAQ,KAAK;AACb,aAAO,YAAY,UAAU,CAAC;AAC9B,aAAO,YAAY,UAAU,CAAC;AAC9B,aAAO,YAAY,UAAU,CAAC;AAE9B,gBAAU,QAAQ;AAClB,gBAAU,QAAQ;AAAA,IACnB,CAAC;AAAA,EACF,CAAC;AAED,QAAM,UAAU,MAAM;AAErB,SAAK,wBAAwB,MAAM;AAClC,YAAM,SAAmB,CAAC;AAC1B,YAAM,UAAU,GAAG,IAAI,IAAI,QAAgB,CAAC;AAC5C,YAAM,QAAQ,QAAQ;AACtB,YAAM,gBAAgB,MAAM,OAAO,KAAK;AAExC,cAAQ,KAAK,CAAC;AACd,cAAQ,KAAK,CAAC;AACd,cAAQ,KAAK,CAAC;AACd,aAAO,gBAAgB,QAAQ,CAAC,CAAa;AAE7C,YAAM,WAAW,cAAc,SAAO,OAAO,KAAK,GAAG,CAAC;AACtD,aAAO,gBAAgB,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC;AAExC,cAAQ,KAAK,CAAC;AACd,aAAO,gBAAgB,QAAQ,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AAE3C,eAAS,QAAQ;AACjB,cAAQ,KAAK,CAAC;AACd,aAAO,gBAAgB,QAAQ,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AAAA,IAC5C,CAAC;AAED,SAAK,qCAAqC,YAAY;AACrD,YAAM,SAAmB,CAAC;AAC1B,YAAM,UAAU,GAAG,IAAI,IAAI,QAAgB,CAAC;AAC5C,YAAM,QAAQ,QAAQ;AACtB,YAAM,gBAAgB,MAAM,OAAO,OAAO,IAAI;AAE9C,cAAQ,KAAK,CAAC;AACd,cAAQ,KAAK,CAAC;AACd,cAAQ,KAAK,CAAC;AACd,aAAO,gBAAgB,QAAQ,CAAC,CAAa;AAE7C,YAAM,WAAW,cAAc,SAAO,OAAO,KAAK,GAAG,CAAC;AACtD,aAAO,gBAAgB,QAAQ,CAAC,CAAC;AAEjC,YAAM,QAAQ,EAAE;AAChB,cAAQ,KAAK,CAAC;AACd,aAAO,gBAAgB,QAAQ,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AAC3C,eAAS,QAAQ;AACjB,cAAQ,KAAK,CAAC;AACd,aAAO,gBAAgB,QAAQ,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AAAA,IAC5C,CAAC;AAED,SAAK,qCAAqC,MAAM;AAC/C,YAAM,SAAmB,CAAC;AAC1B,YAAM,UAAU,GAAG,IAAI,IAAI,QAAgB,CAAC;AAC5C,YAAM,QAAQ,QAAQ;AACtB,YAAM,gBAAgB,MAAM,OAAO,OAAO,OAAO,CAAC,IAAI,IAAI,CAAC,CAAC;AAE5D,cAAQ,KAAK,CAAC;AACd,cAAQ,KAAK,CAAC;AACd,cAAQ,KAAK,CAAC;AACd,aAAO,gBAAgB,QAAQ,CAAC,CAAa;AAE7C,SAAG,IAAI,cAAc,SAAO,OAAO,KAAK,GAAG,CAAC,CAAC;AAC7C,aAAO,gBAAgB,QAAQ,CAAC,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;AAAA,IACpD,CAAC;AAAA,EACF,CAAC;AAED,QAAM,oBAAoB,MAAM;AAE/B,SAAK,SAAS,MAAM;AACnB,YAAM,SAAmB,CAAC;AAC1B,YAAM,IAAI,IAAI,iBAAyB;AACvC,SAAG,IAAI,EAAE,MAAM,OAAK,OAAO,KAAK,CAAC,CAAC,CAAC;AAEnC,YAAM,KAAK,GAAG,IAAI,IAAI,QAAgB,CAAC;AACvC,SAAG,IAAI,EAAE,IAAI,GAAG,KAAK,CAAC;AAEtB,aAAO,gBAAgB,QAAQ,CAAC,CAAC;AAEjC,SAAG,KAAK,CAAC;AACT,aAAO,gBAAgB,QAAQ,CAAC,CAAC,CAAC;AAAA,IACnC,CAAC;AAED,SAAK,6BAA6B,MAAM;AACvC,YAAM,SAAmB,CAAC;AAC1B,YAAM,IAAI,IAAI,iBAAyB;AACvC,SAAG,IAAI,EAAE,MAAM,OAAK,OAAO,KAAK,CAAC,CAAC,CAAC;AAEnC,YAAM,KAAK,GAAG,IAAI,IAAI,QAAgB,CAAC;AACvC,SAAG,IAAI,EAAE,IAAI,GAAG,KAAK,CAAC;AAEtB,aAAO,gBAAgB,QAAQ,CAAC,CAAC;AAEjC,SAAG,KAAK,CAAC;AACT,aAAO,gBAAgB,QAAQ,CAAC,CAAC,CAAC;AAElC,QAAE,QAAQ;AACV,aAAO,gBAAgB,QAAQ,CAAC,CAAC,CAAC;AAElC,SAAG,KAAK,CAAC;AACT,aAAO,gBAAgB,QAAQ,CAAC,CAAC,CAAC;AAAA,IACnC,CAAC;AAED,SAAK,uBAAuB,MAAM;AACjC,YAAM,SAAmB,CAAC;AAC1B,YAAM,IAAI,IAAI,iBAAyB;AACvC,SAAG,IAAI,EAAE,MAAM,OAAK,OAAO,KAAK,CAAC,CAAC,CAAC;AAEnC,YAAM,KAAK,GAAG,IAAI,IAAI,QAAgB,CAAC;AACvC,SAAG,IAAI,EAAE,IAAI,GAAG,KAAK,CAAC;AAEtB,aAAO,gBAAgB,QAAQ,CAAC,CAAC;AAEjC,SAAG,KAAK,CAAC;AACT,aAAO,gBAAgB,QAAQ,CAAC,CAAC,CAAC;AAElC,SAAG,QAAQ;AACX,aAAO,gBAAgB,QAAQ,CAAC,CAAC,CAAC;AAElC,SAAG,KAAK,CAAC;AACT,aAAO,gBAAgB,QAAQ,CAAC,CAAC,CAAC;AAAA,IACnC,CAAC;AAED,SAAK,mCAAmC,MAAM;AAC7C,YAAM,SAAmB,CAAC;AAC1B,YAAM,IAAI,IAAI,iBAAyB;AACvC,SAAG,IAAI,EAAE,MAAM,OAAK,OAAO,KAAK,CAAC,CAAC,CAAC;AAEnC,YAAM,KAAK,GAAG,IAAI,IAAI,QAAgB,CAAC;AACvC,YAAM,KAAK,EAAE,IAAI,GAAG,KAAK;AAEzB,aAAO,gBAAgB,QAAQ,CAAC,CAAC;AAEjC,SAAG,KAAK,CAAC;AACT,aAAO,gBAAgB,QAAQ,CAAC,CAAC,CAAC;AAElC,SAAG,QAAQ;AACX,aAAO,gBAAgB,QAAQ,CAAC,CAAC,CAAC;AAElC,SAAG,KAAK,CAAC;AACT,aAAO,gBAAgB,QAAQ,CAAC,CAAC,CAAC;AAAA,IACnC,CAAC;AAED,SAAK,mBAAmB,MAAM;AAC7B,YAAM,SAAmB,CAAC;AAC1B,YAAM,IAAI,IAAI,iBAAyB;AACvC,SAAG,IAAI,EAAE,MAAM,OAAK,OAAO,KAAK,CAAC,CAAC,CAAC;AAEnC,YAAM,KAAK,GAAG,IAAI,IAAI,QAAgB,CAAC;AACvC,SAAG,IAAI,EAAE,IAAI,GAAG,KAAK,CAAC;AACtB,YAAM,KAAK,GAAG,IAAI,IAAI,QAAgB,CAAC;AACvC,SAAG,IAAI,EAAE,IAAI,GAAG,KAAK,CAAC;AACtB,YAAM,KAAK,GAAG,IAAI,IAAI,QAAgB,CAAC;AACvC,SAAG,IAAI,EAAE,IAAI,GAAG,KAAK,CAAC;AAEtB,SAAG,KAAK,CAAC;AACT,SAAG,KAAK,CAAC;AACT,SAAG,KAAK,CAAC;AACT,aAAO,gBAAgB,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC;AAAA,IACzC,CAAC;AAED,SAAK,oBAAoB,MAAM;AAC9B,YAAM,SAAmB,CAAC;AAC1B,YAAM,IAAI,IAAI,iBAAyB;AAEvC,YAAM,KAAK,GAAG,IAAI,IAAI,QAAgB,CAAC;AACvC,SAAG,IAAI,EAAE,IAAI,GAAG,KAAK,CAAC;AACtB,YAAM,KAAK,GAAG,IAAI,IAAI,QAAgB,CAAC;AACvC,SAAG,IAAI,EAAE,IAAI,GAAG,KAAK,CAAC;AACtB,YAAM,KAAK,GAAG,IAAI,IAAI,QAAgB,CAAC;AACvC,SAAG,IAAI,EAAE,IAAI,GAAG,KAAK,CAAC;AAEtB,SAAG,IAAI,EAAE,MAAM,OAAK,OAAO,KAAK,CAAC,CAAC,CAAC;AAEnC,SAAG,KAAK,CAAC;AACT,SAAG,KAAK,CAAC;AACT,SAAG,KAAK,CAAC;AACT,aAAO,gBAAgB,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC;AAAA,IACzC,CAAC;AAED,SAAK,kBAAkB,MAAM;AAC5B,YAAM,SAAmB,CAAC;AAC1B,YAAM,IAAI,IAAI,iBAAyB;AAEvC,YAAM,KAAK,GAAG,IAAI,IAAI,QAAgB,CAAC;AACvC,SAAG,IAAI,EAAE,IAAI,GAAG,KAAK,CAAC;AACtB,YAAM,KAAK,GAAG,IAAI,IAAI,QAAgB,CAAC;AACvC,SAAG,IAAI,EAAE,IAAI,GAAG,KAAK,CAAC;AAEtB,SAAG,IAAI,EAAE,MAAM,OAAK,OAAO,KAAK,CAAC,CAAC,CAAC;AAEnC,SAAG,KAAK,CAAC;AACT,SAAG,KAAK,CAAC;AAET,YAAM,KAAK,GAAG,IAAI,IAAI,QAAgB,CAAC;AACvC,SAAG,IAAI,EAAE,IAAI,GAAG,KAAK,CAAC;AACtB,SAAG,KAAK,CAAC;AAET,aAAO,gBAAgB,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC;AAAA,IACzC,CAAC;AAED,SAAK,qBAAqB,MAAM;AAC/B,YAAM,SAAmB,CAAC;AAC1B,YAAM,IAAI,IAAI,iBAAyB;AAEvC,YAAM,KAAK,GAAG,IAAI,IAAI,QAAgB,CAAC;AACvC,SAAG,IAAI,EAAE,IAAI,GAAG,KAAK,CAAC;AACtB,YAAM,KAAK,GAAG,IAAI,IAAI,QAAgB,CAAC;AACvC,SAAG,IAAI,EAAE,IAAI,GAAG,KAAK,CAAC;AAEtB,SAAG,IAAI,EAAE,MAAM,OAAK,OAAO,KAAK,CAAC,CAAC,CAAC;AAEnC,SAAG,KAAK,CAAC;AACT,SAAG,KAAK,CAAC;AAET,YAAM,KAAK,GAAG,IAAI,IAAI,QAAgB,CAAC;AACvC,YAAM,KAAK,EAAE,IAAI,GAAG,KAAK;AACzB,SAAG,KAAK,CAAC;AACT,aAAO,gBAAgB,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC;AAExC,SAAG,QAAQ;AACX,SAAG,KAAK,CAAC;AACT,aAAO,gBAAgB,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC;AAExC,SAAG,KAAK,CAAC;AACT,SAAG,KAAK,CAAC;AACT,aAAO,gBAAgB,QAAQ,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;AAAA,IAC/C,CAAC;AAAA,EACF,CAAC;AAED,QAAM,+BAA+B,MAAM;AAC1C,QAAI;AACJ,QAAI;AACJ,UAAM,iBAA2B,CAAC;AAAA,IAClC,MAAM,SAAS;AAAA,MAvlCjB,OAulCiB;AAAA;AAAA;AAAA,MACL,qBAAqB,GAAG,IAAI,IAAI,QAAgB,CAAC;AAAA,MACjD,cAAc,KAAK,mBAAmB;AAAA,IAChD;AACA,QAAI;AACJ,QAAI;AACJ,UAAM,MAAM;AACX,mBAAa,GAAG,IAAI,IAAI,QAAkB,CAAC;AAC3C,sBAAgB,GAAG,IAAI,IAAI,QAAkB,CAAC;AAC9C,cAAQ,CAAC,IAAI,SAAS,GAAG,IAAI,SAAS,CAAC;AACvC,iBAAW,CAAC,GAAG,IAAI,KAAK,MAAM,QAAQ,GAAG;AACxC,WAAG,IAAI,KAAK,YAAY,OAAK,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;AAAA,MAC1C;AACA,UAAI,IAAI,4BAA4B,OAAO,WAAW,OAAO,cAAc,OAAO,OAAK,EAAE,WAAW;AACpG,SAAG,IAAI,EAAE,MAAM,OAAK,eAAe,KAAK,CAAC,CAAC,CAAC;AAC3C,qBAAe,SAAS;AAAA,IACzB,CAAC;AACD,aAAS,MAAM,EAAE,QAAQ,CAAC;AAC1B,SAAK,wCAAwC,MAAM;AAClD,YAAM,CAAC,EAAE,mBAAmB,KAAK,CAAC;AAClC,YAAM,CAAC,EAAE,mBAAmB,KAAK,CAAC;AAClC,YAAM,CAAC,EAAE,mBAAmB,KAAK,CAAC;AAClC,YAAM,CAAC,EAAE,mBAAmB,KAAK,CAAC;AAClC,aAAO,gBAAgB,gBAAgB,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AAAA,IACpD,CAAC;AACD,SAAK,sCAAsC,MAAM;AAChD,YAAM,YAAY,IAAI,SAAS;AAC/B,iBAAW,KAAK,SAAS;AACzB,gBAAU,mBAAmB,KAAK,CAAC;AACnC,YAAM,CAAC,EAAE,mBAAmB,KAAK,CAAC;AAClC,YAAM,CAAC,EAAE,mBAAmB,KAAK,CAAC;AAClC,gBAAU,mBAAmB,KAAK,CAAC;AACnC,aAAO,gBAAgB,gBAAgB,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AAAA,IACpD,CAAC;AACD,SAAK,4CAA4C,MAAM;AACtD,oBAAc,KAAK,MAAM,CAAC,CAAC;AAC3B,YAAM,CAAC,EAAE,mBAAmB,KAAK,CAAC;AAClC,YAAM,CAAC,EAAE,mBAAmB,KAAK,CAAC;AAClC,YAAM,CAAC,EAAE,mBAAmB,KAAK,CAAC;AAClC,YAAM,CAAC,EAAE,mBAAmB,KAAK,CAAC;AAClC,aAAO,gBAAgB,gBAAgB,CAAC,GAAG,CAAC,CAAC;AAAA,IAC9C,CAAC;AAAA,EACF,CAAC;AAED,OAAK,SAAS,MAAM;AACnB,UAAM,UAAU,GAAG,IAAI,IAAI,QAAgB,CAAC;AAC5C,UAAM,QAAQ,MAAM,MAAM,QAAQ,KAAK;AAEvC,UAAM,SAAmB,CAAC;AAC1B,UAAM,WAAW,GAAG,IAAI,MAAM,SAAO,OAAO,KAAK,GAAG,CAAC,CAAC;AAEtD,WAAO,gBAAgB,QAAQ,CAAC,CAAC;AAEjC,YAAQ,KAAK,CAAC;AACd,WAAO,gBAAgB,QAAQ,CAAC,CAAC,CAAC;AAElC,YAAQ,KAAK,CAAC;AACd,WAAO,gBAAgB,QAAQ,CAAC,GAAG,CAAC,CAAC;AAErC,YAAQ,KAAK,CAAC;AACd,WAAO,gBAAgB,QAAQ,CAAC,GAAG,CAAC,CAAC;AAErC,YAAQ,KAAK,CAAC;AACd,WAAO,gBAAgB,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC;AAExC,YAAQ,KAAK,CAAC;AACd,WAAO,gBAAgB,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC;AAExC,YAAQ,KAAK,CAAC;AACd,WAAO,gBAAgB,QAAQ,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AAE3C,YAAQ,KAAK,CAAC;AACd,WAAO,gBAAgB,QAAQ,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AAE3C,YAAQ,KAAK,CAAC;AACd,WAAO,gBAAgB,QAAQ,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AAE3C,aAAS,QAAQ;AAAA,EAClB,CAAC;AAED,OAAK,wBAAwB,MAAM;AAClC,UAAM,UAAU,GAAG,IAAI,IAAI,QAAgB;AAAA,MAC1C,yBAAyB,6BAAM;AAC9B,gBAAQ,QAAQ;AAAA,MACjB,GAFyB;AAAA,IAG1B,CAAC,CAAC;AAEF,UAAM,WAAW,QAAQ,MAAM,MAAM,MAAS;AAC9C,aAAS,QAAQ;AAAA,EAClB,CAAC;AAED,QAAM,eAAe,MAAM;AAE1B,SAAK,oBAAoB,iBAAkB;AAC1C,aAAO,IAAI,QAAQ,aAAW;AAC7B,YAAI,UAAU,IAAI,gBAAwB;AAE1C,WAAG,IAAI,MAAM,YAAY,QAAQ,CAAC,EAAE,OAAK;AACxC,iBAAO,YAAY,GAAG,CAAC;AAEvB,oBAAU,IAAI,gBAAgB;AAE9B,aAAG,IAAI,MAAM,YAAY,QAAQ,CAAC,EAAE,MAAM;AACzC,oBAAQ;AAAA,UACT,CAAC,CAAC;AAEF,kBAAQ,MAAM,MAAS;AAAA,QACxB,CAAC,CAAC;AAEF,gBAAQ,SAAS,CAAC;AAAA,MACnB,CAAC;AAAA,IACF,CAAC;AAED,SAAK,oBAAoB,iBAAkB;AAC1C,aAAO,IAAI,QAAQ,aAAW;AAC7B,YAAI,UAAU,IAAI,gBAAwB;AAC1C,gBAAQ,SAAS,CAAC;AAElB,WAAG,IAAI,MAAM,YAAY,QAAQ,CAAC,EAAE,OAAK;AACxC,iBAAO,YAAY,GAAG,CAAC;AAEvB,oBAAU,IAAI,gBAAgB;AAC9B,kBAAQ,MAAM,MAAS;AAEvB,aAAG,IAAI,MAAM,YAAY,QAAQ,CAAC,EAAE,MAAM;AACzC,oBAAQ;AAAA,UACT,CAAC,CAAC;AAAA,QACH,CAAC,CAAC;AAAA,MAEH,CAAC;AAAA,IACF,CAAC;AAAA,EACF,CAAC;AAED,QAAM,SAAS,MAAM;AACpB,SAAK,qBAAqB,MAAM;AAC/B,YAAM,KAAK,GAAG,IAAI,IAAI,QAAgB,CAAC;AACvC,YAAM,KAAK,GAAG,IAAI,IAAI,QAAgB,CAAC;AACvC,YAAM,QAAQ,IAAI,MAAc;AAEhC,YAAM,SAAmB,CAAC;AAC1B,YAAM,WAAW,wBAAC,QAAgB,OAAO,KAAK,GAAG,GAAhC;AACjB,YAAM,eAAe,MAAM,MAAM,QAAQ;AAEzC,SAAG,KAAK,CAAC;AACT,aAAO,gBAAgB,QAAQ,CAAC,CAAC;AAEjC,YAAM,QAAQ,GAAG;AACjB,SAAG,KAAK,CAAC;AACT,aAAO,gBAAgB,QAAQ,CAAC,CAAC,CAAC;AAElC,YAAM,QAAQ,GAAG;AACjB,SAAG,KAAK,CAAC;AACT,SAAG,KAAK,CAAC;AACT,aAAO,gBAAgB,QAAQ,CAAC,GAAG,CAAC,CAAC;AAErC,mBAAa,QAAQ;AACrB,SAAG,KAAK,CAAC;AACT,SAAG,KAAK,CAAC;AACT,aAAO,gBAAgB,QAAQ,CAAC,GAAG,CAAC,CAAC;AAAA,IACtC,CAAC;AAED,SAAK,6BAA6B,MAAM;AACvC,YAAM,KAAK,GAAG,IAAI,IAAI,QAAgB,CAAC;AACvC,YAAM,KAAK,GAAG,IAAI,IAAI,QAAgB,CAAC;AACvC,YAAM,QAAQ,IAAI,MAAc;AAEhC,YAAM,SAAmB,CAAC;AAC1B,YAAM,WAAW,wBAAC,QAAgB,OAAO,KAAK,GAAG,GAAhC;AACjB,SAAG,IAAI,MAAM,MAAM,QAAQ,CAAC;AAE5B,SAAG,KAAK,CAAC;AACT,aAAO,gBAAgB,QAAQ,CAAC,CAAC;AAEjC,YAAM,QAAQ,GAAG;AACjB,SAAG,KAAK,CAAC;AACT,aAAO,gBAAgB,QAAQ,CAAC,CAAC,CAAC;AAElC,YAAM,QAAQ,GAAG;AACjB,SAAG,KAAK,CAAC;AACT,SAAG,KAAK,CAAC;AACT,aAAO,gBAAgB,QAAQ,CAAC,GAAG,CAAC,CAAC;AAErC,YAAM,QAAQ;AACd,SAAG,KAAK,CAAC;AACT,SAAG,KAAK,CAAC;AACT,aAAO,gBAAgB,QAAQ,CAAC,GAAG,CAAC,CAAC;AAAA,IACtC,CAAC;AAAA,EACF,CAAC;AAED,QAAM,cAAc,MAAM;AACzB,SAAK,qEAAqE,YAAY;AACrF,YAAM,eAAe,GAAG,IAAI,IAAI,QAAgB,CAAC;AACjD,YAAM,QAAQ,aAAa;AAC3B,YAAM,cAAc,MAAM,WAAW,OAAO,CAAC;AAE7C,YAAM,SAAqB,CAAC;AAC5B,YAAM,SAAqB,CAAC;AAC5B,YAAM,YAAY,GAAG,IAAI,YAAY,CAAC,MAAM,OAAO,KAAK,CAAC,CAAC,CAAC;AAC3D,SAAG,IAAI,YAAY,CAAC,MAAM,OAAO,KAAK,CAAC,CAAC,CAAC;AAEzC,mBAAa,KAAK,CAAC;AACnB,YAAM,QAAQ,CAAC;AACf,aAAO,gBAAgB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,aAAO,gBAAgB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AAEpC,gBAAU,QAAQ;AAClB,YAAM,QAAQ,CAAC;AACf,aAAO,gBAAgB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,aAAO,gBAAgB,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,mEAAmE;AAAA,IAC1G,CAAC;AACD,SAAK,oCAAoC,YAAY;AACpD,YAAM,eAAe,GAAG,IAAI,IAAI,QAAgB,CAAC;AACjD,YAAM,QAAQ,aAAa;AAC3B,YAAM,cAAc,MAAM,WAAW,OAAO,CAAC;AAE7C,YAAM,WAAW,MAAM,IAAI,QAAkB,OAAK;AACjD,WAAG,IAAI,YAAY,CAAC,CAAC;AACrB,qBAAa,KAAK,CAAC;AAAA,MACpB,CAAC;AACD,aAAO,gBAAgB,UAAU,CAAC,CAAC,CAAC;AAEpC,YAAM,WAAW,MAAM,IAAI,QAAkB,OAAK;AACjD,WAAG,IAAI,YAAY,CAAC,CAAC;AACrB,qBAAa,KAAK,CAAC;AAAA,MACpB,CAAC;AACD,aAAO,gBAAgB,UAAU,CAAC,CAAC,CAAC;AAAA,IACrC,CAAC;AACD,SAAK,qCAAqC,YAAY;AACrD,YAAM,eAAe,GAAG,IAAI,IAAI,QAAgB,CAAC;AACjD,YAAM,QAAQ,aAAa;AAC3B,YAAM,cAAc,MAAM,WAAW,OAAO,CAAC;AAE7C,YAAM,WAAW,MAAM,IAAI,QAAkB,OAAK;AACjD,WAAG,IAAI,YAAY,CAAC,CAAC;AACrB,qBAAa,KAAK,CAAC;AACnB,qBAAa,KAAK,CAAC;AACnB,qBAAa,KAAK,CAAC;AAAA,MACpB,CAAC;AACD,aAAO,gBAAgB,UAAU,CAAC,GAAG,GAAG,CAAC,CAAC;AAE1C,YAAM,WAAW,MAAM,IAAI,QAAkB,OAAK;AACjD,WAAG,IAAI,YAAY,CAAC,CAAC;AACrB,qBAAa,KAAK,CAAC;AACnB,qBAAa,KAAK,CAAC;AACnB,qBAAa,KAAK,CAAC;AACnB,qBAAa,KAAK,CAAC;AACnB,qBAAa,KAAK,CAAC;AAAA,MACpB,CAAC;AACD,aAAO,gBAAgB,UAAU,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;AAAA,IACjD,CAAC;AAAA,EACF,CAAC;AAED,QAAM,YAAY,MAAM;AACvB,SAAK,UAAU,SAAU,MAAkB;AAC1C,YAAM,MAAM,GAAG,IAAI,IAAI,QAAQ,UAAU,CAAC;AAE1C,YAAM,iBAAiB,MAAM,SAAS,IAAI,aAAa,CAAC,MAA4B,QAAQ;AAC3F,YAAI,CAAC,MAAM;AACV,iBAAO,CAAC,GAAG;AAAA,QACZ,WAAW,KAAK,QAAQ,GAAG,IAAI,GAAG;AACjC,eAAK,KAAK,GAAG;AAAA,QACd;AACA,eAAO;AAAA,MACR,GAAG,EAAE;AAEL,UAAI,QAAQ;AAEZ,SAAG,IAAI,eAAe,UAAQ;AAC7B;AACA,eAAO,GAAG,MAAM,yBAAyB;AACzC,YAAI,UAAU,GAAG;AAChB,cAAI,QAAQ,GAAG;AACf,iBAAO,gBAAgB,MAAM,CAAC,KAAK,KAAK,GAAG,CAAC;AAAA,QAC7C,WAAW,UAAU,GAAG;AACvB,iBAAO,gBAAgB,MAAM,CAAC,GAAG,CAAC;AAClC,eAAK;AAAA,QACN;AAAA,MACD,CAAC,CAAC;AAEF,UAAI,QAAQ,GAAG;AACf,UAAI,QAAQ,GAAG;AACf,UAAI,QAAQ,GAAG;AAAA,IAChB,CAAC;AAGD,SAAK,aAAa,SAAU,MAAkB;AAC7C,YAAM,MAAM,GAAG,IAAI,IAAI,QAAQ,UAAU,CAAC;AAE1C,YAAM,iBAAiB,MAAM,SAAS,IAAI,aAAa,CAAC,MAA4B,QAAQ;AAC3F,YAAI,CAAC,MAAM;AACV,iBAAO,CAAC,GAAG;AAAA,QACZ,WAAW,KAAK,QAAQ,GAAG,IAAI,GAAG;AACjC,eAAK,KAAK,GAAG;AAAA,QACd;AACA,eAAO;AAAA,MACR,GAAG,cAAc;AAEjB,UAAI,QAAQ;AAEZ,SAAG,IAAI,eAAe,UAAQ;AAC7B;AACA,eAAO,GAAG,MAAM,yBAAyB;AACzC,YAAI,UAAU,GAAG;AAChB,cAAI,QAAQ,GAAG;AACf,iBAAO,gBAAgB,MAAM,CAAC,KAAK,KAAK,GAAG,CAAC;AAAA,QAC7C,WAAW,UAAU,GAAG;AACvB,iBAAO,gBAAgB,MAAM,CAAC,GAAG,CAAC;AAClC,eAAK;AAAA,QACN;AAAA,MACD,CAAC,CAAC;AAEF,UAAI,QAAQ,GAAG;AACf,UAAI,QAAQ,GAAG;AACf,UAAI,QAAQ,GAAG;AAAA,IAChB,CAAC;AAGD,SAAK,WAAW,iBAAkB;AACjC,YAAM,UAAU,GAAG,IAAI,IAAI,QAAc,CAAC;AAC1C,YAAM,YAAY,MAAM;AAAA,QAAS,QAAQ;AAAA,QAAO,CAAC,GAAG,MAAM;AAAA,QAAG;AAAA;AAAA,QAAe;AAAA,MAAI;AAEhF,UAAI,QAAQ;AACZ,SAAG,IAAI,UAAU,MAAM;AACtB;AAAA,MACD,CAAC,CAAC;AAGF,cAAQ,KAAK;AAEb,YAAM,QAAQ,CAAC;AACf,aAAO,YAAY,OAAO,CAAC;AAAA,IAC5B,CAAC;AAED,SAAK,eAAe,iBAAkB;AACrC,YAAM,UAAU,GAAG,IAAI,IAAI,QAAc,CAAC;AAC1C,YAAM,YAAY,MAAM;AAAA,QAAS,QAAQ;AAAA,QAAO,CAAC,GAAG,MAAM;AAAA,QAAG;AAAA;AAAA,QAAe;AAAA,MAAI;AAEhF,UAAI,QAAQ;AACZ,SAAG,IAAI,UAAU,MAAM;AACtB;AAAA,MACD,CAAC,CAAC;AAGF,cAAQ,KAAK;AACb,cAAQ,KAAK;AACb,cAAQ,KAAK;AACb,YAAM,QAAQ,CAAC;AACf,aAAO,YAAY,OAAO,CAAC;AAAA,IAC5B,CAAC;AAED,SAAK,iBAAiB,iBAAkB;AACvC,YAAM,UAAU,GAAG,IAAI,IAAI,QAAgB,CAAC;AAC5C,YAAM,YAAY,MAAM;AAAA,QAAS,QAAQ;AAAA,QAAO,CAAC,GAAG,MAAM,IAAI,IAAI,IAAI;AAAA,QAAG;AAAA;AAAA,QAAe;AAAA,MAAI;AAE5F,YAAM,QAAkB,CAAC;AACzB,SAAG,IAAI,UAAU,CAAC,MAAM,MAAM,KAAK,CAAC,CAAC,CAAC;AAEtC,cAAQ,KAAK,CAAC;AACd,cAAQ,KAAK,CAAC;AAEd,YAAM,QAAQ,CAAC;AACf,aAAO,gBAAgB,OAAO,CAAC,GAAG,CAAC,CAAC;AAAA,IACrC,CAAC;AAED,SAAK,uDAAuD,YAAY;AACvE,YAAM,UAAU,GAAG,IAAI,IAAI,QAAgB,CAAC;AAC5C,YAAM,YAAY,MAAM,SAAS,QAAQ,OAAO,CAAC,GAAG,MAAM,IAAI,IAAI,IAAI,GAAG,CAAC;AAE1E,YAAM,QAAkB,CAAC;AACzB,YAAM,WAAW,GAAG,IAAI,UAAU,CAAC,MAAM,MAAM,KAAK,CAAC,CAAC,CAAC;AAEvD,cAAQ,KAAK,CAAC;AACd,eAAS,QAAQ;AAEjB,cAAQ,KAAK,CAAC;AAEd,YAAM,QAAQ,CAAC;AACf,aAAO,gBAAgB,OAAO,CAAC,CAAC;AAAA,IACjC,CAAC;AAED,SAAK,2EAA2E,YAAY;AAC3F,YAAM,UAAU,GAAG,IAAI,IAAI,QAAgB,CAAC;AAC5C,YAAM,YAAY,MAAM,SAAS,QAAQ,OAAO,CAAC,GAAG,MAAM,IAAI,IAAI,IAAI,GAAG,GAAG,QAAW,IAAI;AAE3F,YAAM,QAAkB,CAAC;AACzB,YAAM,WAAW,GAAG,IAAI,UAAU,CAAC,MAAM,MAAM,KAAK,CAAC,CAAC,CAAC;AAEvD,cAAQ,KAAK,CAAC;AACd,eAAS,QAAQ;AAEjB,cAAQ,KAAK,CAAC;AAEd,YAAM,QAAQ,CAAC;AACf,aAAO,gBAAgB,OAAO,CAAC,CAAC,GAAG,2EAA2E;AAAA,IAC/G,CAAC;AAED,SAAK,oDAAoD,YAAY;AACpE,YAAM,UAAU,GAAG,IAAI,IAAI,QAAgB,CAAC;AAC5C,YAAM,YAAY,MAAM,SAAS,QAAQ,OAAO,CAAC,GAAG,MAAM,IAAI,IAAI,IAAI,GAAG,CAAC;AAE1E,YAAM,QAAkB,CAAC;AACzB,SAAG,IAAI,UAAU,CAAC,MAAM,MAAM,KAAK,CAAC,CAAC,CAAC;AAEtC,cAAQ,KAAK,CAAC;AACd,cAAQ,QAAQ;AAEhB,YAAM,QAAQ,CAAC;AACf,aAAO,gBAAgB,OAAO,CAAC,CAAC,CAAC;AAAA,IAClC,CAAC;AAAA,EACF,CAAC;AAED,QAAM,UAAU,MAAM;AACrB,QAAI;AACJ,QAAI;AAEJ,UAAM,MAAM;AACX,WAAK,GAAG,IAAI,IAAI,QAAgB,CAAC;AACjC,cAAQ,CAAC;AAAA,IACV,CAAC;AAED,SAAK,QAAQ,MAAM;AAClB,YAAM,KAAK,MAAM,MAAM,GAAG,OAAO,OAAK,EAAE,IAAI,OAAK,IAAI,CAAC,CAAC;AACvD,SAAG,IAAI,GAAG,OAAK,MAAM,KAAK,CAAC,CAAC,CAAC;AAC7B,SAAG,KAAK,CAAC;AACT,SAAG,KAAK,CAAC;AACT,SAAG,KAAK,CAAC;AACT,aAAO,gBAAgB,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC;AAAA,IACxC,CAAC;AAED,SAAK,WAAW,MAAM;AACrB,YAAM,KAAK,MAAM,MAAM,GAAG,OAAO,OAAK,EAAE,OAAO,OAAK,IAAI,MAAM,CAAC,CAAC;AAChE,SAAG,IAAI,GAAG,OAAK,MAAM,KAAK,CAAC,CAAC,CAAC;AAC7B,SAAG,KAAK,CAAC;AACT,SAAG,KAAK,CAAC;AACT,SAAG,KAAK,CAAC;AACT,SAAG,KAAK,CAAC;AACT,aAAO,gBAAgB,OAAO,CAAC,GAAG,CAAC,CAAC;AAAA,IACrC,CAAC;AAED,SAAK,WAAW,MAAM;AACrB,YAAM,KAAK,MAAM,MAAM,GAAG,OAAO,OAAK,EAAE,OAAO,CAAC,KAAK,MAAM,MAAM,GAAG,CAAC,CAAC;AACtE,SAAG,IAAI,GAAG,OAAK,MAAM,KAAK,CAAC,CAAC,CAAC;AAC7B,SAAG,KAAK,CAAC;AACT,SAAG,KAAK,CAAC;AACT,SAAG,KAAK,CAAC;AACT,SAAG,KAAK,CAAC;AACT,aAAO,gBAAgB,OAAO,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;AAAA,IAC5C,CAAC;AAED,SAAK,WAAW,MAAM;AACrB,YAAM,KAAK,MAAM,MAAM,GAAG,OAAO,OAAK,EAAE,MAAM,CAAC;AAC/C,SAAG,IAAI,GAAG,OAAK,MAAM,KAAK,CAAC,CAAC,CAAC;AAC7B,SAAG,KAAK,CAAC;AACT,SAAG,KAAK,CAAC;AACT,SAAG,KAAK,CAAC;AACT,SAAG,KAAK,CAAC;AACT,SAAG,KAAK,CAAC;AACT,SAAG,KAAK,CAAC;AACT,SAAG,KAAK,CAAC;AACT,aAAO,gBAAgB,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AAAA,IAC3C,CAAC;AAED,SAAK,mBAAmB,MAAM;AAC7B,YAAM,KAAK,MAAM;AAAA,QAAM,GAAG;AAAA,QAAO,OAAK,EACpC,OAAO,OAAK,IAAI,MAAM,CAAC,EACvB,IAAI,OAAK,IAAI,CAAC,EACd,OAAO,CAAC,KAAK,MAAM,MAAM,GAAG,CAAC,EAC7B,MAAM;AAAA,MACR;AAEA,SAAG,IAAI,GAAG,OAAK,MAAM,KAAK,CAAC,CAAC,CAAC;AAC7B,SAAG,KAAK,CAAC;AACT,SAAG,KAAK,CAAC;AACT,SAAG,KAAK,CAAC;AACT,SAAG,KAAK,CAAC;AACT,SAAG,KAAK,CAAC;AACT,aAAO,gBAAgB,OAAO,CAAC,GAAG,EAAE,CAAC;AAAA,IACtC,CAAC;AAAA,EACF,CAAC;AACF,CAAC;",
  "names": ["Samples", "counter", "p"]
}
