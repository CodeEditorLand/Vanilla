{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/test/common/strings.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport assert from 'assert';\nimport * as strings from '../../common/strings.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from './utils.js';\n\nsuite('Strings', () => {\n\ttest('equalsIgnoreCase', () => {\n\t\tassert(strings.equalsIgnoreCase('', ''));\n\t\tassert(!strings.equalsIgnoreCase('', '1'));\n\t\tassert(!strings.equalsIgnoreCase('1', ''));\n\n\t\tassert(strings.equalsIgnoreCase('a', 'a'));\n\t\tassert(strings.equalsIgnoreCase('abc', 'Abc'));\n\t\tassert(strings.equalsIgnoreCase('abc', 'ABC'));\n\t\tassert(strings.equalsIgnoreCase('H\u00F6henmeter', 'H\u00D6henmeter'));\n\t\tassert(strings.equalsIgnoreCase('\u00D6L', '\u00D6l'));\n\t});\n\n\ttest('beginsWithIgnoreCase', () => {\n\t\tassert(strings.startsWithIgnoreCase('', ''));\n\t\tassert(!strings.startsWithIgnoreCase('', '1'));\n\t\tassert(strings.startsWithIgnoreCase('1', ''));\n\n\t\tassert(strings.startsWithIgnoreCase('a', 'a'));\n\t\tassert(strings.startsWithIgnoreCase('abc', 'Abc'));\n\t\tassert(strings.startsWithIgnoreCase('abc', 'ABC'));\n\t\tassert(strings.startsWithIgnoreCase('H\u00F6henmeter', 'H\u00D6henmeter'));\n\t\tassert(strings.startsWithIgnoreCase('\u00D6L', '\u00D6l'));\n\n\t\tassert(strings.startsWithIgnoreCase('alles klar', 'a'));\n\t\tassert(strings.startsWithIgnoreCase('alles klar', 'A'));\n\t\tassert(strings.startsWithIgnoreCase('alles klar', 'alles k'));\n\t\tassert(strings.startsWithIgnoreCase('alles klar', 'alles K'));\n\t\tassert(strings.startsWithIgnoreCase('alles klar', 'ALLES K'));\n\t\tassert(strings.startsWithIgnoreCase('alles klar', 'alles klar'));\n\t\tassert(strings.startsWithIgnoreCase('alles klar', 'ALLES KLAR'));\n\n\t\tassert(!strings.startsWithIgnoreCase('alles klar', ' ALLES K'));\n\t\tassert(!strings.startsWithIgnoreCase('alles klar', 'ALLES K '));\n\t\tassert(!strings.startsWithIgnoreCase('alles klar', '\u00F6ALLES K '));\n\t\tassert(!strings.startsWithIgnoreCase('alles klar', ' '));\n\t\tassert(!strings.startsWithIgnoreCase('alles klar', '\u00F6'));\n\t});\n\n\ttest('compareIgnoreCase', () => {\n\n\t\tfunction assertCompareIgnoreCase(a: string, b: string, recurse = true): void {\n\t\t\tlet actual = strings.compareIgnoreCase(a, b);\n\t\t\tactual = actual > 0 ? 1 : actual < 0 ? -1 : actual;\n\n\t\t\tlet expected = strings.compare(a.toLowerCase(), b.toLowerCase());\n\t\t\texpected = expected > 0 ? 1 : expected < 0 ? -1 : expected;\n\t\t\tassert.strictEqual(actual, expected, `${a} <> ${b}`);\n\n\t\t\tif (recurse) {\n\t\t\t\tassertCompareIgnoreCase(b, a, false);\n\t\t\t}\n\t\t}\n\n\t\tassertCompareIgnoreCase('', '');\n\t\tassertCompareIgnoreCase('abc', 'ABC');\n\t\tassertCompareIgnoreCase('abc', 'ABc');\n\t\tassertCompareIgnoreCase('abc', 'ABcd');\n\t\tassertCompareIgnoreCase('abc', 'abcd');\n\t\tassertCompareIgnoreCase('foo', 'f\u00F6o');\n\t\tassertCompareIgnoreCase('Code', 'code');\n\t\tassertCompareIgnoreCase('Code', 'c\u00F6de');\n\n\t\tassertCompareIgnoreCase('B', 'a');\n\t\tassertCompareIgnoreCase('a', 'B');\n\t\tassertCompareIgnoreCase('b', 'a');\n\t\tassertCompareIgnoreCase('a', 'b');\n\n\t\tassertCompareIgnoreCase('aa', 'ab');\n\t\tassertCompareIgnoreCase('aa', 'aB');\n\t\tassertCompareIgnoreCase('aa', 'aA');\n\t\tassertCompareIgnoreCase('a', 'aa');\n\t\tassertCompareIgnoreCase('ab', 'aA');\n\t\tassertCompareIgnoreCase('O', '/');\n\t});\n\n\ttest('compareIgnoreCase (substring)', () => {\n\n\t\tfunction assertCompareIgnoreCase(a: string, b: string, aStart: number, aEnd: number, bStart: number, bEnd: number, recurse = true): void {\n\t\t\tlet actual = strings.compareSubstringIgnoreCase(a, b, aStart, aEnd, bStart, bEnd);\n\t\t\tactual = actual > 0 ? 1 : actual < 0 ? -1 : actual;\n\n\t\t\tlet expected = strings.compare(a.toLowerCase().substring(aStart, aEnd), b.toLowerCase().substring(bStart, bEnd));\n\t\t\texpected = expected > 0 ? 1 : expected < 0 ? -1 : expected;\n\t\t\tassert.strictEqual(actual, expected, `${a} <> ${b}`);\n\n\t\t\tif (recurse) {\n\t\t\t\tassertCompareIgnoreCase(b, a, bStart, bEnd, aStart, aEnd, false);\n\t\t\t}\n\t\t}\n\n\t\tassertCompareIgnoreCase('', '', 0, 0, 0, 0);\n\t\tassertCompareIgnoreCase('abc', 'ABC', 0, 1, 0, 1);\n\t\tassertCompareIgnoreCase('abc', 'Aabc', 0, 3, 1, 4);\n\t\tassertCompareIgnoreCase('abcABc', 'ABcd', 3, 6, 0, 4);\n\t});\n\n\ttest('format', () => {\n\t\tassert.strictEqual(strings.format('Foo Bar'), 'Foo Bar');\n\t\tassert.strictEqual(strings.format('Foo {0} Bar'), 'Foo {0} Bar');\n\t\tassert.strictEqual(strings.format('Foo {0} Bar', 'yes'), 'Foo yes Bar');\n\t\tassert.strictEqual(strings.format('Foo {0} Bar {0}', 'yes'), 'Foo yes Bar yes');\n\t\tassert.strictEqual(strings.format('Foo {0} Bar {1}{2}', 'yes'), 'Foo yes Bar {1}{2}');\n\t\tassert.strictEqual(strings.format('Foo {0} Bar {1}{2}', 'yes', undefined), 'Foo yes Bar undefined{2}');\n\t\tassert.strictEqual(strings.format('Foo {0} Bar {1}{2}', 'yes', 5, false), 'Foo yes Bar 5false');\n\t\tassert.strictEqual(strings.format('Foo {0} Bar. {1}', '(foo)', '.test'), 'Foo (foo) Bar. .test');\n\t});\n\n\ttest('format2', () => {\n\t\tassert.strictEqual(strings.format2('Foo Bar', {}), 'Foo Bar');\n\t\tassert.strictEqual(strings.format2('Foo {oops} Bar', {}), 'Foo {oops} Bar');\n\t\tassert.strictEqual(strings.format2('Foo {foo} Bar', { foo: 'bar' }), 'Foo bar Bar');\n\t\tassert.strictEqual(strings.format2('Foo {foo} Bar {foo}', { foo: 'bar' }), 'Foo bar Bar bar');\n\t\tassert.strictEqual(strings.format2('Foo {foo} Bar {bar}{boo}', { foo: 'bar' }), 'Foo bar Bar {bar}{boo}');\n\t\tassert.strictEqual(strings.format2('Foo {foo} Bar {bar}{boo}', { foo: 'bar', bar: 'undefined' }), 'Foo bar Bar undefined{boo}');\n\t\tassert.strictEqual(strings.format2('Foo {foo} Bar {bar}{boo}', { foo: 'bar', bar: '5', boo: false }), 'Foo bar Bar 5false');\n\t\tassert.strictEqual(strings.format2('Foo {foo} Bar. {bar}', { foo: '(foo)', bar: '.test' }), 'Foo (foo) Bar. .test');\n\t});\n\n\ttest('lcut', () => {\n\t\tassert.strictEqual(strings.lcut('foo bar', 0), '');\n\t\tassert.strictEqual(strings.lcut('foo bar', 1), 'bar');\n\t\tassert.strictEqual(strings.lcut('foo bar', 3), 'bar');\n\t\tassert.strictEqual(strings.lcut('foo bar', 4), 'bar'); // Leading whitespace trimmed\n\t\tassert.strictEqual(strings.lcut('foo bar', 5), 'foo bar');\n\t\tassert.strictEqual(strings.lcut('test string 0.1.2.3', 3), '2.3');\n\n\t\tassert.strictEqual(strings.lcut('foo bar', 0, '\u2026'), '\u2026');\n\t\tassert.strictEqual(strings.lcut('foo bar', 1, '\u2026'), '\u2026bar');\n\t\tassert.strictEqual(strings.lcut('foo bar', 3, '\u2026'), '\u2026bar');\n\t\tassert.strictEqual(strings.lcut('foo bar', 4, '\u2026'), '\u2026bar'); // Leading whitespace trimmed\n\t\tassert.strictEqual(strings.lcut('foo bar', 5, '\u2026'), 'foo bar');\n\t\tassert.strictEqual(strings.lcut('test string 0.1.2.3', 3, '\u2026'), '\u20262.3');\n\n\t\tassert.strictEqual(strings.lcut('', 10), '');\n\t\tassert.strictEqual(strings.lcut('a', 10), 'a');\n\t\tassert.strictEqual(strings.lcut(' a', 10), 'a');\n\t\tassert.strictEqual(strings.lcut('            a', 10), 'a');\n\t\tassert.strictEqual(strings.lcut(' bbbb       a', 10), 'bbbb       a');\n\t\tassert.strictEqual(strings.lcut('............a', 10), '............a');\n\n\t\tassert.strictEqual(strings.lcut('', 10, '\u2026'), '');\n\t\tassert.strictEqual(strings.lcut('a', 10, '\u2026'), 'a');\n\t\tassert.strictEqual(strings.lcut(' a', 10, '\u2026'), 'a');\n\t\tassert.strictEqual(strings.lcut('            a', 10, '\u2026'), 'a');\n\t\tassert.strictEqual(strings.lcut(' bbbb       a', 10, '\u2026'), 'bbbb       a');\n\t\tassert.strictEqual(strings.lcut('............a', 10, '\u2026'), '............a');\n\t});\n\n\ttest('escape', () => {\n\t\tassert.strictEqual(strings.escape(''), '');\n\t\tassert.strictEqual(strings.escape('foo'), 'foo');\n\t\tassert.strictEqual(strings.escape('foo bar'), 'foo bar');\n\t\tassert.strictEqual(strings.escape('<foo bar>'), '&lt;foo bar&gt;');\n\t\tassert.strictEqual(strings.escape('<foo>Hello</foo>'), '&lt;foo&gt;Hello&lt;/foo&gt;');\n\t});\n\n\ttest('ltrim', () => {\n\t\tassert.strictEqual(strings.ltrim('foo', 'f'), 'oo');\n\t\tassert.strictEqual(strings.ltrim('foo', 'o'), 'foo');\n\t\tassert.strictEqual(strings.ltrim('http://www.test.de', 'http://'), 'www.test.de');\n\t\tassert.strictEqual(strings.ltrim('/foo/', '/'), 'foo/');\n\t\tassert.strictEqual(strings.ltrim('//foo/', '/'), 'foo/');\n\t\tassert.strictEqual(strings.ltrim('/', ''), '/');\n\t\tassert.strictEqual(strings.ltrim('/', '/'), '');\n\t\tassert.strictEqual(strings.ltrim('///', '/'), '');\n\t\tassert.strictEqual(strings.ltrim('', ''), '');\n\t\tassert.strictEqual(strings.ltrim('', '/'), '');\n\t});\n\n\ttest('rtrim', () => {\n\t\tassert.strictEqual(strings.rtrim('foo', 'o'), 'f');\n\t\tassert.strictEqual(strings.rtrim('foo', 'f'), 'foo');\n\t\tassert.strictEqual(strings.rtrim('http://www.test.de', '.de'), 'http://www.test');\n\t\tassert.strictEqual(strings.rtrim('/foo/', '/'), '/foo');\n\t\tassert.strictEqual(strings.rtrim('/foo//', '/'), '/foo');\n\t\tassert.strictEqual(strings.rtrim('/', ''), '/');\n\t\tassert.strictEqual(strings.rtrim('/', '/'), '');\n\t\tassert.strictEqual(strings.rtrim('///', '/'), '');\n\t\tassert.strictEqual(strings.rtrim('', ''), '');\n\t\tassert.strictEqual(strings.rtrim('', '/'), '');\n\t});\n\n\ttest('trim', () => {\n\t\tassert.strictEqual(strings.trim(' foo '), 'foo');\n\t\tassert.strictEqual(strings.trim('  foo'), 'foo');\n\t\tassert.strictEqual(strings.trim('bar  '), 'bar');\n\t\tassert.strictEqual(strings.trim('   '), '');\n\t\tassert.strictEqual(strings.trim('foo bar', 'bar'), 'foo ');\n\t});\n\n\ttest('trimWhitespace', () => {\n\t\tassert.strictEqual(' foo '.trim(), 'foo');\n\t\tassert.strictEqual('\t foo\t'.trim(), 'foo');\n\t\tassert.strictEqual('  foo'.trim(), 'foo');\n\t\tassert.strictEqual('bar  '.trim(), 'bar');\n\t\tassert.strictEqual('   '.trim(), '');\n\t\tassert.strictEqual(' \t  '.trim(), '');\n\t});\n\n\ttest('lastNonWhitespaceIndex', () => {\n\t\tassert.strictEqual(strings.lastNonWhitespaceIndex('abc  \\t \\t '), 2);\n\t\tassert.strictEqual(strings.lastNonWhitespaceIndex('abc'), 2);\n\t\tassert.strictEqual(strings.lastNonWhitespaceIndex('abc\\t'), 2);\n\t\tassert.strictEqual(strings.lastNonWhitespaceIndex('abc '), 2);\n\t\tassert.strictEqual(strings.lastNonWhitespaceIndex('abc  \\t \\t '), 2);\n\t\tassert.strictEqual(strings.lastNonWhitespaceIndex('abc  \\t \\t abc \\t \\t '), 11);\n\t\tassert.strictEqual(strings.lastNonWhitespaceIndex('abc  \\t \\t abc \\t \\t ', 8), 2);\n\t\tassert.strictEqual(strings.lastNonWhitespaceIndex('  \\t \\t '), -1);\n\t});\n\n\ttest('containsRTL', () => {\n\t\tassert.strictEqual(strings.containsRTL('a'), false);\n\t\tassert.strictEqual(strings.containsRTL(''), false);\n\t\tassert.strictEqual(strings.containsRTL(strings.UTF8_BOM_CHARACTER + 'a'), false);\n\t\tassert.strictEqual(strings.containsRTL('hello world!'), false);\n\t\tassert.strictEqual(strings.containsRTL('a\uD83D\uDCDA\uD83D\uDCDAb'), false);\n\t\tassert.strictEqual(strings.containsRTL('\u0647\u0646\u0627\u0643 \u062D\u0642\u064A\u0642\u0629 \u0645\u062B\u0628\u062A\u0629 \u0645\u0646\u0630 \u0632\u0645\u0646 \u0637\u0648\u064A\u0644'), true);\n\t\tassert.strictEqual(strings.containsRTL('\u05D6\u05D5\u05D4\u05D9 \u05E2\u05D5\u05D1\u05D3\u05D4 \u05DE\u05D1\u05D5\u05E1\u05E1\u05EA \u05E9\u05D3\u05E2\u05EA\u05D5'), true);\n\t});\n\n\ttest('issue #115221: isEmojiImprecise misses \u2B50', () => {\n\t\tconst codePoint = strings.getNextCodePoint('\u2B50', '\u2B50'.length, 0);\n\t\tassert.strictEqual(strings.isEmojiImprecise(codePoint), true);\n\t});\n\n\ttest('isBasicASCII', () => {\n\t\tfunction assertIsBasicASCII(str: string, expected: boolean): void {\n\t\t\tassert.strictEqual(strings.isBasicASCII(str), expected, str + ` (${str.charCodeAt(0)})`);\n\t\t}\n\t\tassertIsBasicASCII('abcdefghijklmnopqrstuvwxyz', true);\n\t\tassertIsBasicASCII('ABCDEFGHIJKLMNOPQRSTUVWXYZ', true);\n\t\tassertIsBasicASCII('1234567890', true);\n\t\tassertIsBasicASCII('`~!@#$%^&*()-_=+[{]}\\\\|;:\\'\",<.>/?', true);\n\t\tassertIsBasicASCII(' ', true);\n\t\tassertIsBasicASCII('\\t', true);\n\t\tassertIsBasicASCII('\\n', true);\n\t\tassertIsBasicASCII('\\r', true);\n\n\t\tlet ALL = '\\r\\t\\n';\n\t\tfor (let i = 32; i < 127; i++) {\n\t\t\tALL += String.fromCharCode(i);\n\t\t}\n\t\tassertIsBasicASCII(ALL, true);\n\n\t\tassertIsBasicASCII(String.fromCharCode(31), false);\n\t\tassertIsBasicASCII(String.fromCharCode(127), false);\n\t\tassertIsBasicASCII('\u00FC', false);\n\t\tassertIsBasicASCII('a\uD83D\uDCDA\uD83D\uDCDAb', false);\n\t});\n\n\ttest('createRegExp', () => {\n\t\t// Empty\n\t\tassert.throws(() => strings.createRegExp('', false));\n\n\t\t// Escapes appropriately\n\t\tassert.strictEqual(strings.createRegExp('abc', false).source, 'abc');\n\t\tassert.strictEqual(strings.createRegExp('([^ ,.]*)', false).source, '\\\\(\\\\[\\\\^ ,\\\\.\\\\]\\\\*\\\\)');\n\t\tassert.strictEqual(strings.createRegExp('([^ ,.]*)', true).source, '([^ ,.]*)');\n\n\t\t// Whole word\n\t\tassert.strictEqual(strings.createRegExp('abc', false, { wholeWord: true }).source, '\\\\babc\\\\b');\n\t\tassert.strictEqual(strings.createRegExp('abc', true, { wholeWord: true }).source, '\\\\babc\\\\b');\n\t\tassert.strictEqual(strings.createRegExp(' abc', true, { wholeWord: true }).source, ' abc\\\\b');\n\t\tassert.strictEqual(strings.createRegExp('abc ', true, { wholeWord: true }).source, '\\\\babc ');\n\t\tassert.strictEqual(strings.createRegExp(' abc ', true, { wholeWord: true }).source, ' abc ');\n\n\t\tconst regExpWithoutFlags = strings.createRegExp('abc', true);\n\t\tassert(!regExpWithoutFlags.global);\n\t\tassert(regExpWithoutFlags.ignoreCase);\n\t\tassert(!regExpWithoutFlags.multiline);\n\n\t\tconst regExpWithFlags = strings.createRegExp('abc', true, { global: true, matchCase: true, multiline: true });\n\t\tassert(regExpWithFlags.global);\n\t\tassert(!regExpWithFlags.ignoreCase);\n\t\tassert(regExpWithFlags.multiline);\n\t});\n\n\ttest('getLeadingWhitespace', () => {\n\t\tassert.strictEqual(strings.getLeadingWhitespace('  foo'), '  ');\n\t\tassert.strictEqual(strings.getLeadingWhitespace('  foo', 2), '');\n\t\tassert.strictEqual(strings.getLeadingWhitespace('  foo', 1, 1), '');\n\t\tassert.strictEqual(strings.getLeadingWhitespace('  foo', 0, 1), ' ');\n\t\tassert.strictEqual(strings.getLeadingWhitespace('  '), '  ');\n\t\tassert.strictEqual(strings.getLeadingWhitespace('  ', 1), ' ');\n\t\tassert.strictEqual(strings.getLeadingWhitespace('  ', 0, 1), ' ');\n\t\tassert.strictEqual(strings.getLeadingWhitespace('\\t\\tfunction foo(){', 0, 1), '\\t');\n\t\tassert.strictEqual(strings.getLeadingWhitespace('\\t\\tfunction foo(){', 0, 2), '\\t\\t');\n\t});\n\n\ttest('fuzzyContains', () => {\n\t\tassert.ok(!strings.fuzzyContains((undefined)!, null!));\n\t\tassert.ok(strings.fuzzyContains('hello world', 'h'));\n\t\tassert.ok(!strings.fuzzyContains('hello world', 'q'));\n\t\tassert.ok(strings.fuzzyContains('hello world', 'hw'));\n\t\tassert.ok(strings.fuzzyContains('hello world', 'horl'));\n\t\tassert.ok(strings.fuzzyContains('hello world', 'd'));\n\t\tassert.ok(!strings.fuzzyContains('hello world', 'wh'));\n\t\tassert.ok(!strings.fuzzyContains('d', 'dd'));\n\t});\n\n\ttest('startsWithUTF8BOM', () => {\n\t\tassert(strings.startsWithUTF8BOM(strings.UTF8_BOM_CHARACTER));\n\t\tassert(strings.startsWithUTF8BOM(strings.UTF8_BOM_CHARACTER + 'a'));\n\t\tassert(strings.startsWithUTF8BOM(strings.UTF8_BOM_CHARACTER + 'aaaaaaaaaa'));\n\t\tassert(!strings.startsWithUTF8BOM(' ' + strings.UTF8_BOM_CHARACTER));\n\t\tassert(!strings.startsWithUTF8BOM('foo'));\n\t\tassert(!strings.startsWithUTF8BOM(''));\n\t});\n\n\ttest('stripUTF8BOM', () => {\n\t\tassert.strictEqual(strings.stripUTF8BOM(strings.UTF8_BOM_CHARACTER), '');\n\t\tassert.strictEqual(strings.stripUTF8BOM(strings.UTF8_BOM_CHARACTER + 'foobar'), 'foobar');\n\t\tassert.strictEqual(strings.stripUTF8BOM('foobar' + strings.UTF8_BOM_CHARACTER), 'foobar' + strings.UTF8_BOM_CHARACTER);\n\t\tassert.strictEqual(strings.stripUTF8BOM('abc'), 'abc');\n\t\tassert.strictEqual(strings.stripUTF8BOM(''), '');\n\t});\n\n\ttest('containsUppercaseCharacter', () => {\n\t\t[\n\t\t\t[null, false],\n\t\t\t['', false],\n\t\t\t['foo', false],\n\t\t\t['f\u00F6\u00F6', false],\n\t\t\t['\u0646\u0627\u0643', false],\n\t\t\t['\u05DE\u05D1\u05D5\u05E1\u05E1\u05EA', false],\n\t\t\t['\uD83D\uDE00', false],\n\t\t\t['(#@()*&%()@*#&09827340982374}{:\">?></\\'\\\\~`', false],\n\n\t\t\t['Foo', true],\n\t\t\t['FOO', true],\n\t\t\t['F\u00F6\u00D6', true],\n\t\t\t['F\u00F6\u00D6', true],\n\t\t\t['\\\\Foo', true],\n\t\t].forEach(([str, result]) => {\n\t\t\tassert.strictEqual(strings.containsUppercaseCharacter(<string>str), result, `Wrong result for ${str}`);\n\t\t});\n\t});\n\n\ttest('containsUppercaseCharacter (ignoreEscapedChars)', () => {\n\t\t[\n\t\t\t['\\\\Woo', false],\n\t\t\t['f\\\\S\\\\S', false],\n\t\t\t['foo', false],\n\n\t\t\t['Foo', true],\n\t\t].forEach(([str, result]) => {\n\t\t\tassert.strictEqual(strings.containsUppercaseCharacter(<string>str, true), result, `Wrong result for ${str}`);\n\t\t});\n\t});\n\n\ttest('uppercaseFirstLetter', () => {\n\t\t[\n\t\t\t['', ''],\n\t\t\t['foo', 'Foo'],\n\t\t\t['f', 'F'],\n\t\t\t['123', '123'],\n\t\t\t['.a', '.a'],\n\t\t].forEach(([inStr, result]) => {\n\t\t\tassert.strictEqual(strings.uppercaseFirstLetter(inStr), result, `Wrong result for ${inStr}`);\n\t\t});\n\t});\n\n\ttest('getNLines', () => {\n\t\tassert.strictEqual(strings.getNLines('', 5), '');\n\t\tassert.strictEqual(strings.getNLines('foo', 5), 'foo');\n\t\tassert.strictEqual(strings.getNLines('foo\\nbar', 5), 'foo\\nbar');\n\t\tassert.strictEqual(strings.getNLines('foo\\nbar', 2), 'foo\\nbar');\n\n\t\tassert.strictEqual(strings.getNLines('foo\\nbar', 1), 'foo');\n\t\tassert.strictEqual(strings.getNLines('foo\\nbar'), 'foo');\n\t\tassert.strictEqual(strings.getNLines('foo\\nbar\\nsomething', 2), 'foo\\nbar');\n\t\tassert.strictEqual(strings.getNLines('foo', 0), '');\n\t});\n\n\ttest('getGraphemeBreakType', () => {\n\t\tassert.strictEqual(strings.getGraphemeBreakType(0xBC1), strings.GraphemeBreakType.SpacingMark);\n\t});\n\n\ttest('truncate', () => {\n\t\tassert.strictEqual('hello world', strings.truncate('hello world', 100));\n\t\tassert.strictEqual('hello\u2026', strings.truncate('hello world', 5));\n\t});\n\n\ttest('truncateMiddle', () => {\n\t\tassert.strictEqual('hello world', strings.truncateMiddle('hello world', 100));\n\t\tassert.strictEqual('he\u2026ld', strings.truncateMiddle('hello world', 5));\n\t});\n\n\ttest('replaceAsync', async () => {\n\t\tlet i = 0;\n\t\tassert.strictEqual(await strings.replaceAsync('abcabcabcabc', /b(.)/g, async (match, after) => {\n\t\t\tassert.strictEqual(match, 'bc');\n\t\t\tassert.strictEqual(after, 'c');\n\t\t\treturn `${i++}${after}`;\n\t\t}), 'a0ca1ca2ca3c');\n\t});\n\n\ttest('removeAnsiEscapeCodes', () => {\n\t\tconst CSI = '\\x1b\\[';\n\t\tconst sequences = [\n\t\t\t// Base cases from https://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h3-Functions-using-CSI-_-ordered-by-the-final-character_s_\n\t\t\t`${CSI}42@`,\n\t\t\t`${CSI}42 @`,\n\t\t\t`${CSI}42A`,\n\t\t\t`${CSI}42 A`,\n\t\t\t`${CSI}42B`,\n\t\t\t`${CSI}42C`,\n\t\t\t`${CSI}42D`,\n\t\t\t`${CSI}42E`,\n\t\t\t`${CSI}42F`,\n\t\t\t`${CSI}42G`,\n\t\t\t`${CSI}42;42H`,\n\t\t\t`${CSI}42I`,\n\t\t\t`${CSI}42J`,\n\t\t\t`${CSI}?42J`,\n\t\t\t`${CSI}42K`,\n\t\t\t`${CSI}?42K`,\n\t\t\t`${CSI}42L`,\n\t\t\t`${CSI}42M`,\n\t\t\t`${CSI}42P`,\n\t\t\t`${CSI}#P`,\n\t\t\t`${CSI}3#P`,\n\t\t\t`${CSI}#Q`,\n\t\t\t`${CSI}3#Q`,\n\t\t\t`${CSI}#R`,\n\t\t\t`${CSI}42S`,\n\t\t\t`${CSI}?1;2;3S`,\n\t\t\t`${CSI}42T`,\n\t\t\t`${CSI}42;42;42;42;42T`,\n\t\t\t`${CSI}>3T`,\n\t\t\t`${CSI}42X`,\n\t\t\t`${CSI}42Z`,\n\t\t\t`${CSI}42^`,\n\t\t\t`${CSI}42\\``,\n\t\t\t`${CSI}42a`,\n\t\t\t`${CSI}42b`,\n\t\t\t`${CSI}42c`,\n\t\t\t`${CSI}=42c`,\n\t\t\t`${CSI}>42c`,\n\t\t\t`${CSI}42d`,\n\t\t\t`${CSI}42e`,\n\t\t\t`${CSI}42;42f`,\n\t\t\t`${CSI}42g`,\n\t\t\t`${CSI}3h`,\n\t\t\t`${CSI}?3h`,\n\t\t\t`${CSI}42i`,\n\t\t\t`${CSI}?42i`,\n\t\t\t`${CSI}3l`,\n\t\t\t`${CSI}?3l`,\n\t\t\t`${CSI}3m`,\n\t\t\t`${CSI}>0;0m`,\n\t\t\t`${CSI}>0m`,\n\t\t\t`${CSI}?0m`,\n\t\t\t`${CSI}42n`,\n\t\t\t`${CSI}>42n`,\n\t\t\t`${CSI}?42n`,\n\t\t\t`${CSI}>42p`,\n\t\t\t`${CSI}!p`,\n\t\t\t`${CSI}0;0\"p`,\n\t\t\t`${CSI}42$p`,\n\t\t\t`${CSI}?42$p`,\n\t\t\t`${CSI}#p`,\n\t\t\t`${CSI}3#p`,\n\t\t\t`${CSI}>42q`,\n\t\t\t`${CSI}42q`,\n\t\t\t`${CSI}42 q`,\n\t\t\t`${CSI}42\"q`,\n\t\t\t`${CSI}#q`,\n\t\t\t`${CSI}42;42r`,\n\t\t\t`${CSI}?3r`,\n\t\t\t`${CSI}0;0;0;0;3$r`,\n\t\t\t`${CSI}s`,\n\t\t\t`${CSI}0;0s`,\n\t\t\t`${CSI}>42s`,\n\t\t\t`${CSI}?3s`,\n\t\t\t`${CSI}42;42;42t`,\n\t\t\t`${CSI}>3t`,\n\t\t\t`${CSI}42 t`,\n\t\t\t`${CSI}0;0;0;0;3$t`,\n\t\t\t`${CSI}u`,\n\t\t\t`${CSI}42 u`,\n\t\t\t`${CSI}0;0;0;0;0;0;0;0$v`,\n\t\t\t`${CSI}42$w`,\n\t\t\t`${CSI}0;0;0;0'w`,\n\t\t\t`${CSI}42x`,\n\t\t\t`${CSI}42*x`,\n\t\t\t`${CSI}0;0;0;0;0$x`,\n\t\t\t`${CSI}42#y`,\n\t\t\t`${CSI}0;0;0;0;0;0*y`,\n\t\t\t`${CSI}42;0'z`,\n\t\t\t`${CSI}0;1;2;4$z`,\n\t\t\t`${CSI}3'{`,\n\t\t\t`${CSI}#{`,\n\t\t\t`${CSI}3#{`,\n\t\t\t`${CSI}0;0;0;0\\${`,\n\t\t\t`${CSI}0;0;0;0#|`,\n\t\t\t`${CSI}42$|`,\n\t\t\t`${CSI}42'|`,\n\t\t\t`${CSI}42*|`,\n\t\t\t`${CSI}#}`,\n\t\t\t`${CSI}42'}`,\n\t\t\t`${CSI}42$}`,\n\t\t\t`${CSI}42'~`,\n\t\t\t`${CSI}42$~`,\n\n\t\t\t// Common SGR cases:\n\t\t\t`${CSI}1;31m`, // multiple attrs\n\t\t\t`${CSI}105m`, // bright background\n\t\t\t`${CSI}48:5:128m`, // 256 indexed color\n\t\t\t`${CSI}48;5;128m`, // 256 indexed color alt\n\t\t\t`${CSI}38:2:0:255:255:255m`, // truecolor\n\t\t\t`${CSI}38;2;255;255;255m`, // truecolor alt\n\n\t\t\t// Custom sequences:\n\t\t\t'\\x1b]633;SetMark;\\x07',\n\t\t\t'\\x1b]633;P;Cwd=/foo\\x07',\n\t\t];\n\n\t\tfor (const sequence of sequences) {\n\t\t\tassert.strictEqual(strings.removeAnsiEscapeCodes(`hello${sequence}world`), 'helloworld', `expect to remove ${JSON.stringify(sequence)}`);\n\t\t}\n\n\t\tfor (const sequence of sequences) {\n\t\t\tassert.deepStrictEqual(\n\t\t\t\t[...strings.forAnsiStringParts(`hello${sequence}world`)],\n\t\t\t\t[{ isCode: false, str: 'hello' }, { isCode: true, str: sequence }, { isCode: false, str: 'world' }],\n\t\t\t\t`expect to forAnsiStringParts ${JSON.stringify(sequence)}`\n\t\t\t);\n\t\t}\n\n\t\t// #209937\n\t\tassert.strictEqual(\n\t\t\tstrings.removeAnsiEscapeCodes(`localhost:\\x1b[31m1234`),\n\t\t\t'localhost:1234',);\n\t});\n\n\ttest('removeAnsiEscapeCodesFromPrompt', () => {\n\t\tassert.strictEqual(strings.removeAnsiEscapeCodesFromPrompt('\\u001b[31m$ \\u001b[0m'), '$ ');\n\t\tassert.strictEqual(strings.removeAnsiEscapeCodesFromPrompt('\\n\\\\[\\u001b[01;34m\\\\]\\\\w\\\\[\\u001b[00m\\\\]\\n\\\\[\\u001b[1;32m\\\\]> \\\\[\\u001b[0m\\\\]'), '\\n\\\\w\\n> ');\n\t});\n\n\ttest('count', () => {\n\t\tassert.strictEqual(strings.count('hello world', 'o'), 2);\n\t\tassert.strictEqual(strings.count('hello world', 'l'), 3);\n\t\tassert.strictEqual(strings.count('hello world', 'z'), 0);\n\t\tassert.strictEqual(strings.count('hello world', 'hello'), 1);\n\t\tassert.strictEqual(strings.count('hello world', 'world'), 1);\n\t\tassert.strictEqual(strings.count('hello world', 'hello world'), 1);\n\t\tassert.strictEqual(strings.count('hello world', 'foo'), 0);\n\t});\n\n\ttest('containsAmbiguousCharacter', () => {\n\t\tassert.strictEqual(strings.AmbiguousCharacters.getInstance(new Set()).containsAmbiguousCharacter('abcd'), false);\n\t\tassert.strictEqual(strings.AmbiguousCharacters.getInstance(new Set()).containsAmbiguousCharacter('\u00FC\u00E5'), false);\n\t\tassert.strictEqual(strings.AmbiguousCharacters.getInstance(new Set()).containsAmbiguousCharacter('(*&^)'), false);\n\n\t\tassert.strictEqual(strings.AmbiguousCharacters.getInstance(new Set()).containsAmbiguousCharacter('\u03BF'), true);\n\t\tassert.strictEqual(strings.AmbiguousCharacters.getInstance(new Set()).containsAmbiguousCharacter('ab\u0261c'), true);\n\t});\n\n\ttest('containsInvisibleCharacter', () => {\n\t\tassert.strictEqual(strings.InvisibleCharacters.containsInvisibleCharacter('abcd'), false);\n\t\tassert.strictEqual(strings.InvisibleCharacters.containsInvisibleCharacter(' '), true);\n\t\tassert.strictEqual(strings.InvisibleCharacters.containsInvisibleCharacter('a\\u{e004e}b'), true);\n\t\tassert.strictEqual(strings.InvisibleCharacters.containsInvisibleCharacter('a\\u{e015a}\\u000bb'), true);\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n\ntest('htmlAttributeEncodeValue', () => {\n\tassert.strictEqual(strings.htmlAttributeEncodeValue(''), '');\n\tassert.strictEqual(strings.htmlAttributeEncodeValue('abc'), 'abc');\n\tassert.strictEqual(strings.htmlAttributeEncodeValue('<script>alert(\"Hello\")</script>'), '&lt;script&gt;alert(&quot;Hello&quot;)&lt;/script&gt;');\n\tassert.strictEqual(strings.htmlAttributeEncodeValue('Hello & World'), 'Hello &amp; World');\n\tassert.strictEqual(strings.htmlAttributeEncodeValue('\"Hello\"'), '&quot;Hello&quot;');\n\tassert.strictEqual(strings.htmlAttributeEncodeValue('\\'Hello\\''), '&apos;Hello&apos;');\n\tassert.strictEqual(strings.htmlAttributeEncodeValue('<>&\\'\"'), '&lt;&gt;&amp;&apos;&quot;');\n});\n"],
  "mappings": "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",
  "names": []
}
