{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/test/common/jsonParse.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport assert from 'assert';\n\nimport { parse, stripComments } from '../../common/jsonc.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from './utils.js';\n\nsuite('JSON Parse', () => {\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('Line comment', () => {\n\t\tconst content: string = [\n\t\t\t\"{\",\n\t\t\t\"  \\\"prop\\\": 10 // a comment\",\n\t\t\t\"}\",\n\t\t].join('\\n');\n\t\tconst expected = [\n\t\t\t\"{\",\n\t\t\t\"  \\\"prop\\\": 10 \",\n\t\t\t\"}\",\n\t\t].join('\\n');\n\t\tassert.deepEqual(parse(content), JSON.parse(expected));\n\t});\n\ttest('Line comment - EOF', () => {\n\t\tconst content: string = [\n\t\t\t\"{\",\n\t\t\t\"}\",\n\t\t\t\"// a comment\"\n\t\t].join('\\n');\n\t\tconst expected = [\n\t\t\t\"{\",\n\t\t\t\"}\",\n\t\t\t\"\"\n\t\t].join('\\n');\n\t\tassert.deepEqual(parse(content), JSON.parse(expected));\n\t});\n\ttest('Line comment - \\\\r\\\\n', () => {\n\t\tconst content: string = [\n\t\t\t\"{\",\n\t\t\t\"  \\\"prop\\\": 10 // a comment\",\n\t\t\t\"}\",\n\t\t].join('\\r\\n');\n\t\tconst expected = [\n\t\t\t\"{\",\n\t\t\t\"  \\\"prop\\\": 10 \",\n\t\t\t\"}\",\n\t\t].join('\\r\\n');\n\t\tassert.deepEqual(parse(content), JSON.parse(expected));\n\t});\n\ttest('Line comment - EOF - \\\\r\\\\n', () => {\n\t\tconst content: string = [\n\t\t\t\"{\",\n\t\t\t\"}\",\n\t\t\t\"// a comment\"\n\t\t].join('\\r\\n');\n\t\tconst expected = [\n\t\t\t\"{\",\n\t\t\t\"}\",\n\t\t\t\"\"\n\t\t].join('\\r\\n');\n\t\tassert.deepEqual(parse(content), JSON.parse(expected));\n\t});\n\ttest('Block comment - single line', () => {\n\t\tconst content: string = [\n\t\t\t\"{\",\n\t\t\t\"  /* before */\\\"prop\\\": 10/* after */\",\n\t\t\t\"}\",\n\t\t].join('\\n');\n\t\tconst expected = [\n\t\t\t\"{\",\n\t\t\t\"  \\\"prop\\\": 10\",\n\t\t\t\"}\",\n\t\t].join('\\n');\n\t\tassert.deepEqual(parse(content), JSON.parse(expected));\n\t});\n\ttest('Block comment - multi line', () => {\n\t\tconst content: string = [\n\t\t\t\"{\",\n\t\t\t\"  /**\",\n\t\t\t\"   * Some comment\",\n\t\t\t\"   */\",\n\t\t\t\"  \\\"prop\\\": 10\",\n\t\t\t\"}\",\n\t\t].join('\\n');\n\t\tconst expected = [\n\t\t\t\"{\",\n\t\t\t\"  \",\n\t\t\t\"  \\\"prop\\\": 10\",\n\t\t\t\"}\",\n\t\t].join('\\n');\n\t\tassert.deepEqual(parse(content), JSON.parse(expected));\n\t});\n\ttest('Block comment - shortest match', () => {\n\t\tconst content = \"/* abc */ */\";\n\t\tconst expected = \" */\";\n\t\tassert.strictEqual(stripComments(content), expected);\n\t});\n\ttest('No strings - double quote', () => {\n\t\tconst content: string = [\n\t\t\t\"{\",\n\t\t\t\"  \\\"/* */\\\": 10\",\n\t\t\t\"}\"\n\t\t].join('\\n');\n\t\tconst expected: string = [\n\t\t\t\"{\",\n\t\t\t\"  \\\"/* */\\\": 10\",\n\t\t\t\"}\"\n\t\t].join('\\n');\n\t\tassert.deepEqual(parse(content), JSON.parse(expected));\n\t});\n\ttest('No strings - single quote', () => {\n\t\tconst content: string = [\n\t\t\t\"{\",\n\t\t\t\"  '/* */': 10\",\n\t\t\t\"}\"\n\t\t].join('\\n');\n\t\tconst expected: string = [\n\t\t\t\"{\",\n\t\t\t\"  '/* */': 10\",\n\t\t\t\"}\"\n\t\t].join('\\n');\n\t\tassert.strictEqual(stripComments(content), expected);\n\t});\n\ttest('Trailing comma in object', () => {\n\t\tconst content: string = [\n\t\t\t\"{\",\n\t\t\t`  \"a\": 10,`,\n\t\t\t\"}\"\n\t\t].join('\\n');\n\t\tconst expected: string = [\n\t\t\t\"{\",\n\t\t\t`  \"a\": 10`,\n\t\t\t\"}\"\n\t\t].join('\\n');\n\t\tassert.deepEqual(parse(content), JSON.parse(expected));\n\t});\n\ttest('Trailing comma in array', () => {\n\t\tconst content: string = [\n\t\t\t`[ \"a\", \"b\", \"c\", ]`\n\t\t].join('\\n');\n\t\tconst expected: string = [\n\t\t\t`[ \"a\", \"b\", \"c\" ]`\n\t\t].join('\\n');\n\t\tassert.deepEqual(parse(content), JSON.parse(expected));\n\t});\n\n\ttest('Trailing comma', () => {\n\t\tconst content: string = [\n\t\t\t\"{\",\n\t\t\t\"  \\\"propA\\\": 10, // a comment\",\n\t\t\t\"  \\\"propB\\\": false, // a trailing comma\",\n\t\t\t\"}\",\n\t\t].join('\\n');\n\t\tconst expected = [\n\t\t\t\"{\",\n\t\t\t\"  \\\"propA\\\": 10,\",\n\t\t\t\"  \\\"propB\\\": false\",\n\t\t\t\"}\",\n\t\t].join('\\n');\n\t\tassert.deepEqual(parse(content), JSON.parse(expected));\n\t});\n\n\ttest('Trailing comma - EOF', () => {\n\t\tconst content = `\n// This configuration file allows you to pass permanent command line arguments to VS Code.\n// Only a subset of arguments is currently supported to reduce the likelihood of breaking\n// the installation.\n//\n// PLEASE DO NOT CHANGE WITHOUT UNDERSTANDING THE IMPACT\n//\n// NOTE: Changing this file requires a restart of VS Code.\n{\n\t// Use software rendering instead of hardware accelerated rendering.\n\t// This can help in cases where you see rendering issues in VS Code.\n\t// \"disable-hardware-acceleration\": true,\n\t// Allows to disable crash reporting.\n\t// Should restart the app if the value is changed.\n\t\"enable-crash-reporter\": true,\n\t// Unique id used for correlating crash reports sent from this instance.\n\t// Do not edit this value.\n\t\"crash-reporter-id\": \"aaaaab31-7453-4506-97d0-93411b2c21c7\",\n\t\"locale\": \"en\",\n\t// \"log-level\": \"trace\"\n}\n`;\n\t\tassert.deepEqual(parse(content), {\n\t\t\t\"enable-crash-reporter\": true,\n\t\t\t\"crash-reporter-id\": \"aaaaab31-7453-4506-97d0-93411b2c21c7\",\n\t\t\t\"locale\": \"en\"\n\t\t});\n\t});\n});\n"],
  "mappings": "AAIA,OAAO,YAAY;AAEnB,SAAS,OAAO,qBAAqB;AACrC,SAAS,+CAA+C;AAExD,MAAM,cAAc,MAAM;AACzB,0CAAwC;AAExC,OAAK,gBAAgB,MAAM;AAC1B,UAAM,UAAkB;AAAA,MACvB;AAAA,MACA;AAAA,MACA;AAAA,IACD,EAAE,KAAK,IAAI;AACX,UAAM,WAAW;AAAA,MAChB;AAAA,MACA;AAAA,MACA;AAAA,IACD,EAAE,KAAK,IAAI;AACX,WAAO,UAAU,MAAM,OAAO,GAAG,KAAK,MAAM,QAAQ,CAAC;AAAA,EACtD,CAAC;AACD,OAAK,sBAAsB,MAAM;AAChC,UAAM,UAAkB;AAAA,MACvB;AAAA,MACA;AAAA,MACA;AAAA,IACD,EAAE,KAAK,IAAI;AACX,UAAM,WAAW;AAAA,MAChB;AAAA,MACA;AAAA,MACA;AAAA,IACD,EAAE,KAAK,IAAI;AACX,WAAO,UAAU,MAAM,OAAO,GAAG,KAAK,MAAM,QAAQ,CAAC;AAAA,EACtD,CAAC;AACD,OAAK,yBAAyB,MAAM;AACnC,UAAM,UAAkB;AAAA,MACvB;AAAA,MACA;AAAA,MACA;AAAA,IACD,EAAE,KAAK,MAAM;AACb,UAAM,WAAW;AAAA,MAChB;AAAA,MACA;AAAA,MACA;AAAA,IACD,EAAE,KAAK,MAAM;AACb,WAAO,UAAU,MAAM,OAAO,GAAG,KAAK,MAAM,QAAQ,CAAC;AAAA,EACtD,CAAC;AACD,OAAK,+BAA+B,MAAM;AACzC,UAAM,UAAkB;AAAA,MACvB;AAAA,MACA;AAAA,MACA;AAAA,IACD,EAAE,KAAK,MAAM;AACb,UAAM,WAAW;AAAA,MAChB;AAAA,MACA;AAAA,MACA;AAAA,IACD,EAAE,KAAK,MAAM;AACb,WAAO,UAAU,MAAM,OAAO,GAAG,KAAK,MAAM,QAAQ,CAAC;AAAA,EACtD,CAAC;AACD,OAAK,+BAA+B,MAAM;AACzC,UAAM,UAAkB;AAAA,MACvB;AAAA,MACA;AAAA,MACA;AAAA,IACD,EAAE,KAAK,IAAI;AACX,UAAM,WAAW;AAAA,MAChB;AAAA,MACA;AAAA,MACA;AAAA,IACD,EAAE,KAAK,IAAI;AACX,WAAO,UAAU,MAAM,OAAO,GAAG,KAAK,MAAM,QAAQ,CAAC;AAAA,EACtD,CAAC;AACD,OAAK,8BAA8B,MAAM;AACxC,UAAM,UAAkB;AAAA,MACvB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD,EAAE,KAAK,IAAI;AACX,UAAM,WAAW;AAAA,MAChB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD,EAAE,KAAK,IAAI;AACX,WAAO,UAAU,MAAM,OAAO,GAAG,KAAK,MAAM,QAAQ,CAAC;AAAA,EACtD,CAAC;AACD,OAAK,kCAAkC,MAAM;AAC5C,UAAM,UAAU;AAChB,UAAM,WAAW;AACjB,WAAO,YAAY,cAAc,OAAO,GAAG,QAAQ;AAAA,EACpD,CAAC;AACD,OAAK,6BAA6B,MAAM;AACvC,UAAM,UAAkB;AAAA,MACvB;AAAA,MACA;AAAA,MACA;AAAA,IACD,EAAE,KAAK,IAAI;AACX,UAAM,WAAmB;AAAA,MACxB;AAAA,MACA;AAAA,MACA;AAAA,IACD,EAAE,KAAK,IAAI;AACX,WAAO,UAAU,MAAM,OAAO,GAAG,KAAK,MAAM,QAAQ,CAAC;AAAA,EACtD,CAAC;AACD,OAAK,6BAA6B,MAAM;AACvC,UAAM,UAAkB;AAAA,MACvB;AAAA,MACA;AAAA,MACA;AAAA,IACD,EAAE,KAAK,IAAI;AACX,UAAM,WAAmB;AAAA,MACxB;AAAA,MACA;AAAA,MACA;AAAA,IACD,EAAE,KAAK,IAAI;AACX,WAAO,YAAY,cAAc,OAAO,GAAG,QAAQ;AAAA,EACpD,CAAC;AACD,OAAK,4BAA4B,MAAM;AACtC,UAAM,UAAkB;AAAA,MACvB;AAAA,MACA;AAAA,MACA;AAAA,IACD,EAAE,KAAK,IAAI;AACX,UAAM,WAAmB;AAAA,MACxB;AAAA,MACA;AAAA,MACA;AAAA,IACD,EAAE,KAAK,IAAI;AACX,WAAO,UAAU,MAAM,OAAO,GAAG,KAAK,MAAM,QAAQ,CAAC;AAAA,EACtD,CAAC;AACD,OAAK,2BAA2B,MAAM;AACrC,UAAM,UAAkB;AAAA,MACvB;AAAA,IACD,EAAE,KAAK,IAAI;AACX,UAAM,WAAmB;AAAA,MACxB;AAAA,IACD,EAAE,KAAK,IAAI;AACX,WAAO,UAAU,MAAM,OAAO,GAAG,KAAK,MAAM,QAAQ,CAAC;AAAA,EACtD,CAAC;AAED,OAAK,kBAAkB,MAAM;AAC5B,UAAM,UAAkB;AAAA,MACvB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD,EAAE,KAAK,IAAI;AACX,UAAM,WAAW;AAAA,MAChB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD,EAAE,KAAK,IAAI;AACX,WAAO,UAAU,MAAM,OAAO,GAAG,KAAK,MAAM,QAAQ,CAAC;AAAA,EACtD,CAAC;AAED,OAAK,wBAAwB,MAAM;AAClC,UAAM,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBhB,WAAO,UAAU,MAAM,OAAO,GAAG;AAAA,MAChC,yBAAyB;AAAA,MACzB,qBAAqB;AAAA,MACrB,UAAU;AAAA,IACX,CAAC;AAAA,EACF,CAAC;AACF,CAAC;",
  "names": []
}
