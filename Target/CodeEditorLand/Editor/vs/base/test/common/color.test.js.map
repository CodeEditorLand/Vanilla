{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/test/common/color.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { Color, HSLA, HSVA, RGBA } from '../../common/color.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from './utils.js';\n\nsuite('Color', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('isLighterColor', () => {\n\t\tconst color1 = new Color(new HSLA(60, 1, 0.5, 1)), color2 = new Color(new HSLA(0, 0, 0.753, 1));\n\n\t\tassert.ok(color1.isLighterThan(color2));\n\n\t\t// Abyss theme\n\t\tassert.ok(Color.fromHex('#770811').isLighterThan(Color.fromHex('#000c18')));\n\t});\n\n\ttest('getLighterColor', () => {\n\t\tconst color1 = new Color(new HSLA(60, 1, 0.5, 1)), color2 = new Color(new HSLA(0, 0, 0.753, 1));\n\n\t\tassert.deepStrictEqual(color1.hsla, Color.getLighterColor(color1, color2).hsla);\n\t\tassert.deepStrictEqual(new HSLA(0, 0, 0.916, 1), Color.getLighterColor(color2, color1).hsla);\n\t\tassert.deepStrictEqual(new HSLA(0, 0, 0.851, 1), Color.getLighterColor(color2, color1, 0.3).hsla);\n\t\tassert.deepStrictEqual(new HSLA(0, 0, 0.981, 1), Color.getLighterColor(color2, color1, 0.7).hsla);\n\t\tassert.deepStrictEqual(new HSLA(0, 0, 1, 1), Color.getLighterColor(color2, color1, 1).hsla);\n\n\t});\n\n\ttest('isDarkerColor', () => {\n\t\tconst color1 = new Color(new HSLA(60, 1, 0.5, 1)), color2 = new Color(new HSLA(0, 0, 0.753, 1));\n\n\t\tassert.ok(color2.isDarkerThan(color1));\n\n\t});\n\n\ttest('getDarkerColor', () => {\n\t\tconst color1 = new Color(new HSLA(60, 1, 0.5, 1)), color2 = new Color(new HSLA(0, 0, 0.753, 1));\n\n\t\tassert.deepStrictEqual(color2.hsla, Color.getDarkerColor(color2, color1).hsla);\n\t\tassert.deepStrictEqual(new HSLA(60, 1, 0.392, 1), Color.getDarkerColor(color1, color2).hsla);\n\t\tassert.deepStrictEqual(new HSLA(60, 1, 0.435, 1), Color.getDarkerColor(color1, color2, 0.3).hsla);\n\t\tassert.deepStrictEqual(new HSLA(60, 1, 0.349, 1), Color.getDarkerColor(color1, color2, 0.7).hsla);\n\t\tassert.deepStrictEqual(new HSLA(60, 1, 0.284, 1), Color.getDarkerColor(color1, color2, 1).hsla);\n\n\t\t// Abyss theme\n\t\tassert.deepStrictEqual(new HSLA(355, 0.874, 0.157, 1), Color.getDarkerColor(Color.fromHex('#770811'), Color.fromHex('#000c18'), 0.4).hsla);\n\t});\n\n\ttest('luminance', () => {\n\t\tassert.deepStrictEqual(0, new Color(new RGBA(0, 0, 0, 1)).getRelativeLuminance());\n\t\tassert.deepStrictEqual(1, new Color(new RGBA(255, 255, 255, 1)).getRelativeLuminance());\n\n\t\tassert.deepStrictEqual(0.2126, new Color(new RGBA(255, 0, 0, 1)).getRelativeLuminance());\n\t\tassert.deepStrictEqual(0.7152, new Color(new RGBA(0, 255, 0, 1)).getRelativeLuminance());\n\t\tassert.deepStrictEqual(0.0722, new Color(new RGBA(0, 0, 255, 1)).getRelativeLuminance());\n\n\t\tassert.deepStrictEqual(0.9278, new Color(new RGBA(255, 255, 0, 1)).getRelativeLuminance());\n\t\tassert.deepStrictEqual(0.7874, new Color(new RGBA(0, 255, 255, 1)).getRelativeLuminance());\n\t\tassert.deepStrictEqual(0.2848, new Color(new RGBA(255, 0, 255, 1)).getRelativeLuminance());\n\n\t\tassert.deepStrictEqual(0.5271, new Color(new RGBA(192, 192, 192, 1)).getRelativeLuminance());\n\n\t\tassert.deepStrictEqual(0.2159, new Color(new RGBA(128, 128, 128, 1)).getRelativeLuminance());\n\t\tassert.deepStrictEqual(0.0459, new Color(new RGBA(128, 0, 0, 1)).getRelativeLuminance());\n\t\tassert.deepStrictEqual(0.2003, new Color(new RGBA(128, 128, 0, 1)).getRelativeLuminance());\n\t\tassert.deepStrictEqual(0.1544, new Color(new RGBA(0, 128, 0, 1)).getRelativeLuminance());\n\t\tassert.deepStrictEqual(0.0615, new Color(new RGBA(128, 0, 128, 1)).getRelativeLuminance());\n\t\tassert.deepStrictEqual(0.17, new Color(new RGBA(0, 128, 128, 1)).getRelativeLuminance());\n\t\tassert.deepStrictEqual(0.0156, new Color(new RGBA(0, 0, 128, 1)).getRelativeLuminance());\n\t});\n\n\ttest('blending', () => {\n\t\tassert.deepStrictEqual(new Color(new RGBA(0, 0, 0, 0)).blend(new Color(new RGBA(243, 34, 43))), new Color(new RGBA(243, 34, 43)));\n\t\tassert.deepStrictEqual(new Color(new RGBA(255, 255, 255)).blend(new Color(new RGBA(243, 34, 43))), new Color(new RGBA(255, 255, 255)));\n\t\tassert.deepStrictEqual(new Color(new RGBA(122, 122, 122, 0.7)).blend(new Color(new RGBA(243, 34, 43))), new Color(new RGBA(158, 95, 98)));\n\t\tassert.deepStrictEqual(new Color(new RGBA(0, 0, 0, 0.58)).blend(new Color(new RGBA(255, 255, 255, 0.33))), new Color(new RGBA(49, 49, 49, 0.719)));\n\t});\n\n\tsuite('HSLA', () => {\n\t\ttest('HSLA.toRGBA', () => {\n\t\t\tassert.deepStrictEqual(HSLA.toRGBA(new HSLA(0, 0, 0, 0)), new RGBA(0, 0, 0, 0));\n\t\t\tassert.deepStrictEqual(HSLA.toRGBA(new HSLA(0, 0, 0, 1)), new RGBA(0, 0, 0, 1));\n\t\t\tassert.deepStrictEqual(HSLA.toRGBA(new HSLA(0, 0, 1, 1)), new RGBA(255, 255, 255, 1));\n\n\t\t\tassert.deepStrictEqual(HSLA.toRGBA(new HSLA(0, 1, 0.5, 1)), new RGBA(255, 0, 0, 1));\n\t\t\tassert.deepStrictEqual(HSLA.toRGBA(new HSLA(120, 1, 0.5, 1)), new RGBA(0, 255, 0, 1));\n\t\t\tassert.deepStrictEqual(HSLA.toRGBA(new HSLA(240, 1, 0.5, 1)), new RGBA(0, 0, 255, 1));\n\n\t\t\tassert.deepStrictEqual(HSLA.toRGBA(new HSLA(60, 1, 0.5, 1)), new RGBA(255, 255, 0, 1));\n\t\t\tassert.deepStrictEqual(HSLA.toRGBA(new HSLA(180, 1, 0.5, 1)), new RGBA(0, 255, 255, 1));\n\t\t\tassert.deepStrictEqual(HSLA.toRGBA(new HSLA(300, 1, 0.5, 1)), new RGBA(255, 0, 255, 1));\n\n\t\t\tassert.deepStrictEqual(HSLA.toRGBA(new HSLA(0, 0, 0.753, 1)), new RGBA(192, 192, 192, 1));\n\n\t\t\tassert.deepStrictEqual(HSLA.toRGBA(new HSLA(0, 0, 0.502, 1)), new RGBA(128, 128, 128, 1));\n\t\t\tassert.deepStrictEqual(HSLA.toRGBA(new HSLA(0, 1, 0.251, 1)), new RGBA(128, 0, 0, 1));\n\t\t\tassert.deepStrictEqual(HSLA.toRGBA(new HSLA(60, 1, 0.251, 1)), new RGBA(128, 128, 0, 1));\n\t\t\tassert.deepStrictEqual(HSLA.toRGBA(new HSLA(120, 1, 0.251, 1)), new RGBA(0, 128, 0, 1));\n\t\t\tassert.deepStrictEqual(HSLA.toRGBA(new HSLA(300, 1, 0.251, 1)), new RGBA(128, 0, 128, 1));\n\t\t\tassert.deepStrictEqual(HSLA.toRGBA(new HSLA(180, 1, 0.251, 1)), new RGBA(0, 128, 128, 1));\n\t\t\tassert.deepStrictEqual(HSLA.toRGBA(new HSLA(240, 1, 0.251, 1)), new RGBA(0, 0, 128, 1));\n\t\t});\n\n\t\ttest('HSLA.fromRGBA', () => {\n\t\t\tassert.deepStrictEqual(HSLA.fromRGBA(new RGBA(0, 0, 0, 0)), new HSLA(0, 0, 0, 0));\n\t\t\tassert.deepStrictEqual(HSLA.fromRGBA(new RGBA(0, 0, 0, 1)), new HSLA(0, 0, 0, 1));\n\t\t\tassert.deepStrictEqual(HSLA.fromRGBA(new RGBA(255, 255, 255, 1)), new HSLA(0, 0, 1, 1));\n\n\t\t\tassert.deepStrictEqual(HSLA.fromRGBA(new RGBA(255, 0, 0, 1)), new HSLA(0, 1, 0.5, 1));\n\t\t\tassert.deepStrictEqual(HSLA.fromRGBA(new RGBA(0, 255, 0, 1)), new HSLA(120, 1, 0.5, 1));\n\t\t\tassert.deepStrictEqual(HSLA.fromRGBA(new RGBA(0, 0, 255, 1)), new HSLA(240, 1, 0.5, 1));\n\n\t\t\tassert.deepStrictEqual(HSLA.fromRGBA(new RGBA(255, 255, 0, 1)), new HSLA(60, 1, 0.5, 1));\n\t\t\tassert.deepStrictEqual(HSLA.fromRGBA(new RGBA(0, 255, 255, 1)), new HSLA(180, 1, 0.5, 1));\n\t\t\tassert.deepStrictEqual(HSLA.fromRGBA(new RGBA(255, 0, 255, 1)), new HSLA(300, 1, 0.5, 1));\n\n\t\t\tassert.deepStrictEqual(HSLA.fromRGBA(new RGBA(192, 192, 192, 1)), new HSLA(0, 0, 0.753, 1));\n\n\t\t\tassert.deepStrictEqual(HSLA.fromRGBA(new RGBA(128, 128, 128, 1)), new HSLA(0, 0, 0.502, 1));\n\t\t\tassert.deepStrictEqual(HSLA.fromRGBA(new RGBA(128, 0, 0, 1)), new HSLA(0, 1, 0.251, 1));\n\t\t\tassert.deepStrictEqual(HSLA.fromRGBA(new RGBA(128, 128, 0, 1)), new HSLA(60, 1, 0.251, 1));\n\t\t\tassert.deepStrictEqual(HSLA.fromRGBA(new RGBA(0, 128, 0, 1)), new HSLA(120, 1, 0.251, 1));\n\t\t\tassert.deepStrictEqual(HSLA.fromRGBA(new RGBA(128, 0, 128, 1)), new HSLA(300, 1, 0.251, 1));\n\t\t\tassert.deepStrictEqual(HSLA.fromRGBA(new RGBA(0, 128, 128, 1)), new HSLA(180, 1, 0.251, 1));\n\t\t\tassert.deepStrictEqual(HSLA.fromRGBA(new RGBA(0, 0, 128, 1)), new HSLA(240, 1, 0.251, 1));\n\t\t});\n\t});\n\n\tsuite('HSVA', () => {\n\t\ttest('HSVA.toRGBA', () => {\n\t\t\tassert.deepStrictEqual(HSVA.toRGBA(new HSVA(0, 0, 0, 0)), new RGBA(0, 0, 0, 0));\n\t\t\tassert.deepStrictEqual(HSVA.toRGBA(new HSVA(0, 0, 0, 1)), new RGBA(0, 0, 0, 1));\n\t\t\tassert.deepStrictEqual(HSVA.toRGBA(new HSVA(0, 0, 1, 1)), new RGBA(255, 255, 255, 1));\n\n\t\t\tassert.deepStrictEqual(HSVA.toRGBA(new HSVA(0, 1, 1, 1)), new RGBA(255, 0, 0, 1));\n\t\t\tassert.deepStrictEqual(HSVA.toRGBA(new HSVA(120, 1, 1, 1)), new RGBA(0, 255, 0, 1));\n\t\t\tassert.deepStrictEqual(HSVA.toRGBA(new HSVA(240, 1, 1, 1)), new RGBA(0, 0, 255, 1));\n\n\t\t\tassert.deepStrictEqual(HSVA.toRGBA(new HSVA(60, 1, 1, 1)), new RGBA(255, 255, 0, 1));\n\t\t\tassert.deepStrictEqual(HSVA.toRGBA(new HSVA(180, 1, 1, 1)), new RGBA(0, 255, 255, 1));\n\t\t\tassert.deepStrictEqual(HSVA.toRGBA(new HSVA(300, 1, 1, 1)), new RGBA(255, 0, 255, 1));\n\n\t\t\tassert.deepStrictEqual(HSVA.toRGBA(new HSVA(0, 0, 0.753, 1)), new RGBA(192, 192, 192, 1));\n\n\t\t\tassert.deepStrictEqual(HSVA.toRGBA(new HSVA(0, 0, 0.502, 1)), new RGBA(128, 128, 128, 1));\n\t\t\tassert.deepStrictEqual(HSVA.toRGBA(new HSVA(0, 1, 0.502, 1)), new RGBA(128, 0, 0, 1));\n\t\t\tassert.deepStrictEqual(HSVA.toRGBA(new HSVA(60, 1, 0.502, 1)), new RGBA(128, 128, 0, 1));\n\t\t\tassert.deepStrictEqual(HSVA.toRGBA(new HSVA(120, 1, 0.502, 1)), new RGBA(0, 128, 0, 1));\n\t\t\tassert.deepStrictEqual(HSVA.toRGBA(new HSVA(300, 1, 0.502, 1)), new RGBA(128, 0, 128, 1));\n\t\t\tassert.deepStrictEqual(HSVA.toRGBA(new HSVA(180, 1, 0.502, 1)), new RGBA(0, 128, 128, 1));\n\t\t\tassert.deepStrictEqual(HSVA.toRGBA(new HSVA(240, 1, 0.502, 1)), new RGBA(0, 0, 128, 1));\n\n\t\t\tassert.deepStrictEqual(HSVA.toRGBA(new HSVA(360, 0, 0, 0)), new RGBA(0, 0, 0, 0));\n\t\t\tassert.deepStrictEqual(HSVA.toRGBA(new HSVA(360, 0, 0, 1)), new RGBA(0, 0, 0, 1));\n\t\t\tassert.deepStrictEqual(HSVA.toRGBA(new HSVA(360, 0, 1, 1)), new RGBA(255, 255, 255, 1));\n\t\t\tassert.deepStrictEqual(HSVA.toRGBA(new HSVA(360, 1, 1, 1)), new RGBA(255, 0, 0, 1));\n\t\t\tassert.deepStrictEqual(HSVA.toRGBA(new HSVA(360, 0, 0.753, 1)), new RGBA(192, 192, 192, 1));\n\t\t\tassert.deepStrictEqual(HSVA.toRGBA(new HSVA(360, 0, 0.502, 1)), new RGBA(128, 128, 128, 1));\n\t\t\tassert.deepStrictEqual(HSVA.toRGBA(new HSVA(360, 1, 0.502, 1)), new RGBA(128, 0, 0, 1));\n\n\t\t});\n\n\t\ttest('HSVA.fromRGBA', () => {\n\n\t\t\tassert.deepStrictEqual(HSVA.fromRGBA(new RGBA(0, 0, 0, 0)), new HSVA(0, 0, 0, 0));\n\t\t\tassert.deepStrictEqual(HSVA.fromRGBA(new RGBA(0, 0, 0, 1)), new HSVA(0, 0, 0, 1));\n\t\t\tassert.deepStrictEqual(HSVA.fromRGBA(new RGBA(255, 255, 255, 1)), new HSVA(0, 0, 1, 1));\n\n\t\t\tassert.deepStrictEqual(HSVA.fromRGBA(new RGBA(255, 0, 0, 1)), new HSVA(0, 1, 1, 1));\n\t\t\tassert.deepStrictEqual(HSVA.fromRGBA(new RGBA(0, 255, 0, 1)), new HSVA(120, 1, 1, 1));\n\t\t\tassert.deepStrictEqual(HSVA.fromRGBA(new RGBA(0, 0, 255, 1)), new HSVA(240, 1, 1, 1));\n\n\t\t\tassert.deepStrictEqual(HSVA.fromRGBA(new RGBA(255, 255, 0, 1)), new HSVA(60, 1, 1, 1));\n\t\t\tassert.deepStrictEqual(HSVA.fromRGBA(new RGBA(0, 255, 255, 1)), new HSVA(180, 1, 1, 1));\n\t\t\tassert.deepStrictEqual(HSVA.fromRGBA(new RGBA(255, 0, 255, 1)), new HSVA(300, 1, 1, 1));\n\n\t\t\tassert.deepStrictEqual(HSVA.fromRGBA(new RGBA(192, 192, 192, 1)), new HSVA(0, 0, 0.753, 1));\n\n\t\t\tassert.deepStrictEqual(HSVA.fromRGBA(new RGBA(128, 128, 128, 1)), new HSVA(0, 0, 0.502, 1));\n\t\t\tassert.deepStrictEqual(HSVA.fromRGBA(new RGBA(128, 0, 0, 1)), new HSVA(0, 1, 0.502, 1));\n\t\t\tassert.deepStrictEqual(HSVA.fromRGBA(new RGBA(128, 128, 0, 1)), new HSVA(60, 1, 0.502, 1));\n\t\t\tassert.deepStrictEqual(HSVA.fromRGBA(new RGBA(0, 128, 0, 1)), new HSVA(120, 1, 0.502, 1));\n\t\t\tassert.deepStrictEqual(HSVA.fromRGBA(new RGBA(128, 0, 128, 1)), new HSVA(300, 1, 0.502, 1));\n\t\t\tassert.deepStrictEqual(HSVA.fromRGBA(new RGBA(0, 128, 128, 1)), new HSVA(180, 1, 0.502, 1));\n\t\t\tassert.deepStrictEqual(HSVA.fromRGBA(new RGBA(0, 0, 128, 1)), new HSVA(240, 1, 0.502, 1));\n\t\t});\n\n\t\ttest('Keep hue value when saturation is 0', () => {\n\t\t\tassert.deepStrictEqual(HSVA.toRGBA(new HSVA(10, 0, 0, 0)), HSVA.toRGBA(new HSVA(20, 0, 0, 0)));\n\t\t\tassert.deepStrictEqual(new Color(new HSVA(10, 0, 0, 0)).rgba, new Color(new HSVA(20, 0, 0, 0)).rgba);\n\t\t\tassert.notDeepStrictEqual(new Color(new HSVA(10, 0, 0, 0)).hsva, new Color(new HSVA(20, 0, 0, 0)).hsva);\n\t\t});\n\n\t\ttest('bug#36240', () => {\n\t\t\tassert.deepStrictEqual(HSVA.fromRGBA(new RGBA(92, 106, 196, 1)), new HSVA(232, 0.531, 0.769, 1));\n\t\t\tassert.deepStrictEqual(HSVA.toRGBA(HSVA.fromRGBA(new RGBA(92, 106, 196, 1))), new RGBA(92, 106, 196, 1));\n\t\t});\n\t});\n\n\tsuite('Format', () => {\n\t\tsuite('CSS', () => {\n\t\t\ttest('parseHex', () => {\n\n\t\t\t\t// invalid\n\t\t\t\tassert.deepStrictEqual(Color.Format.CSS.parseHex(''), null);\n\t\t\t\tassert.deepStrictEqual(Color.Format.CSS.parseHex('#'), null);\n\t\t\t\tassert.deepStrictEqual(Color.Format.CSS.parseHex('#0102030'), null);\n\n\t\t\t\t// somewhat valid\n\t\t\t\tassert.deepStrictEqual(Color.Format.CSS.parseHex('#FFFFG0')!.rgba, new RGBA(255, 255, 0, 1));\n\t\t\t\tassert.deepStrictEqual(Color.Format.CSS.parseHex('#FFFFg0')!.rgba, new RGBA(255, 255, 0, 1));\n\t\t\t\tassert.deepStrictEqual(Color.Format.CSS.parseHex('#-FFF00')!.rgba, new RGBA(15, 255, 0, 1));\n\n\t\t\t\t// valid\n\t\t\t\tassert.deepStrictEqual(Color.Format.CSS.parseHex('#000000')!.rgba, new RGBA(0, 0, 0, 1));\n\t\t\t\tassert.deepStrictEqual(Color.Format.CSS.parseHex('#FFFFFF')!.rgba, new RGBA(255, 255, 255, 1));\n\n\t\t\t\tassert.deepStrictEqual(Color.Format.CSS.parseHex('#FF0000')!.rgba, new RGBA(255, 0, 0, 1));\n\t\t\t\tassert.deepStrictEqual(Color.Format.CSS.parseHex('#00FF00')!.rgba, new RGBA(0, 255, 0, 1));\n\t\t\t\tassert.deepStrictEqual(Color.Format.CSS.parseHex('#0000FF')!.rgba, new RGBA(0, 0, 255, 1));\n\n\t\t\t\tassert.deepStrictEqual(Color.Format.CSS.parseHex('#FFFF00')!.rgba, new RGBA(255, 255, 0, 1));\n\t\t\t\tassert.deepStrictEqual(Color.Format.CSS.parseHex('#00FFFF')!.rgba, new RGBA(0, 255, 255, 1));\n\t\t\t\tassert.deepStrictEqual(Color.Format.CSS.parseHex('#FF00FF')!.rgba, new RGBA(255, 0, 255, 1));\n\n\t\t\t\tassert.deepStrictEqual(Color.Format.CSS.parseHex('#C0C0C0')!.rgba, new RGBA(192, 192, 192, 1));\n\n\t\t\t\tassert.deepStrictEqual(Color.Format.CSS.parseHex('#808080')!.rgba, new RGBA(128, 128, 128, 1));\n\t\t\t\tassert.deepStrictEqual(Color.Format.CSS.parseHex('#800000')!.rgba, new RGBA(128, 0, 0, 1));\n\t\t\t\tassert.deepStrictEqual(Color.Format.CSS.parseHex('#808000')!.rgba, new RGBA(128, 128, 0, 1));\n\t\t\t\tassert.deepStrictEqual(Color.Format.CSS.parseHex('#008000')!.rgba, new RGBA(0, 128, 0, 1));\n\t\t\t\tassert.deepStrictEqual(Color.Format.CSS.parseHex('#800080')!.rgba, new RGBA(128, 0, 128, 1));\n\t\t\t\tassert.deepStrictEqual(Color.Format.CSS.parseHex('#008080')!.rgba, new RGBA(0, 128, 128, 1));\n\t\t\t\tassert.deepStrictEqual(Color.Format.CSS.parseHex('#000080')!.rgba, new RGBA(0, 0, 128, 1));\n\n\t\t\t\tassert.deepStrictEqual(Color.Format.CSS.parseHex('#010203')!.rgba, new RGBA(1, 2, 3, 1));\n\t\t\t\tassert.deepStrictEqual(Color.Format.CSS.parseHex('#040506')!.rgba, new RGBA(4, 5, 6, 1));\n\t\t\t\tassert.deepStrictEqual(Color.Format.CSS.parseHex('#070809')!.rgba, new RGBA(7, 8, 9, 1));\n\t\t\t\tassert.deepStrictEqual(Color.Format.CSS.parseHex('#0a0A0a')!.rgba, new RGBA(10, 10, 10, 1));\n\t\t\t\tassert.deepStrictEqual(Color.Format.CSS.parseHex('#0b0B0b')!.rgba, new RGBA(11, 11, 11, 1));\n\t\t\t\tassert.deepStrictEqual(Color.Format.CSS.parseHex('#0c0C0c')!.rgba, new RGBA(12, 12, 12, 1));\n\t\t\t\tassert.deepStrictEqual(Color.Format.CSS.parseHex('#0d0D0d')!.rgba, new RGBA(13, 13, 13, 1));\n\t\t\t\tassert.deepStrictEqual(Color.Format.CSS.parseHex('#0e0E0e')!.rgba, new RGBA(14, 14, 14, 1));\n\t\t\t\tassert.deepStrictEqual(Color.Format.CSS.parseHex('#0f0F0f')!.rgba, new RGBA(15, 15, 15, 1));\n\t\t\t\tassert.deepStrictEqual(Color.Format.CSS.parseHex('#a0A0a0')!.rgba, new RGBA(160, 160, 160, 1));\n\t\t\t\tassert.deepStrictEqual(Color.Format.CSS.parseHex('#CFA')!.rgba, new RGBA(204, 255, 170, 1));\n\t\t\t\tassert.deepStrictEqual(Color.Format.CSS.parseHex('#CFA8')!.rgba, new RGBA(204, 255, 170, 0.533));\n\t\t\t});\n\t\t});\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
