{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/test/common/errors.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { toErrorMessage } from '../../common/errorMessage.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from './utils.js';\n\nsuite('Errors', () => {\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('Get Error Message', function () {\n\t\tassert.strictEqual(toErrorMessage('Foo Bar'), 'Foo Bar');\n\t\tassert.strictEqual(toErrorMessage(new Error('Foo Bar')), 'Foo Bar');\n\n\t\tlet error: any = new Error();\n\t\terror = new Error();\n\t\terror.detail = {};\n\t\terror.detail.exception = {};\n\t\terror.detail.exception.message = 'Foo Bar';\n\t\tassert.strictEqual(toErrorMessage(error), 'Foo Bar');\n\t\tassert.strictEqual(toErrorMessage(error, true), 'Foo Bar');\n\n\t\tassert(toErrorMessage());\n\t\tassert(toErrorMessage(null));\n\t\tassert(toErrorMessage({}));\n\n\t\ttry {\n\t\t\tthrow new Error();\n\t\t} catch (error) {\n\t\t\tassert.strictEqual(toErrorMessage(error), 'An unknown error occurred. Please consult the log for more details.');\n\t\t\tassert.ok(toErrorMessage(error, true).length > 'An unknown error occurred. Please consult the log for more details.'.length);\n\t\t}\n\t});\n});\n"],
  "mappings": "AAKA,OAAO,YAAY;AACnB,SAAS,sBAAsB;AAC/B,SAAS,+CAA+C;AAExD,MAAM,UAAU,MAAM;AACrB,0CAAwC;AAExC,OAAK,qBAAqB,WAAY;AACrC,WAAO,YAAY,eAAe,SAAS,GAAG,SAAS;AACvD,WAAO,YAAY,eAAe,IAAI,MAAM,SAAS,CAAC,GAAG,SAAS;AAElE,QAAI,QAAa,IAAI,MAAM;AAC3B,YAAQ,IAAI,MAAM;AAClB,UAAM,SAAS,CAAC;AAChB,UAAM,OAAO,YAAY,CAAC;AAC1B,UAAM,OAAO,UAAU,UAAU;AACjC,WAAO,YAAY,eAAe,KAAK,GAAG,SAAS;AACnD,WAAO,YAAY,eAAe,OAAO,IAAI,GAAG,SAAS;AAEzD,WAAO,eAAe,CAAC;AACvB,WAAO,eAAe,IAAI,CAAC;AAC3B,WAAO,eAAe,CAAC,CAAC,CAAC;AAEzB,QAAI;AACH,YAAM,IAAI,MAAM;AAAA,IACjB,SAASA,QAAO;AACf,aAAO,YAAY,eAAeA,MAAK,GAAG,qEAAqE;AAC/G,aAAO,GAAG,eAAeA,QAAO,IAAI,EAAE,SAAS,sEAAsE,MAAM;AAAA,IAC5H;AAAA,EACD,CAAC;AACF,CAAC;",
  "names": ["error"]
}
