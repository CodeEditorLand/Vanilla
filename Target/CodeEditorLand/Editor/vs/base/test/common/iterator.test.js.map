{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/test/common/iterator.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { Iterable } from '../../common/iterator.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from './utils.js';\n\nsuite('Iterable', function () {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tconst customIterable = new class {\n\n\t\t*[Symbol.iterator]() {\n\t\t\tyield 'one';\n\t\t\tyield 'two';\n\t\t\tyield 'three';\n\t\t}\n\t};\n\n\ttest('first', function () {\n\n\t\tassert.strictEqual(Iterable.first([]), undefined);\n\t\tassert.strictEqual(Iterable.first([1]), 1);\n\t\tassert.strictEqual(Iterable.first(customIterable), 'one');\n\t\tassert.strictEqual(Iterable.first(customIterable), 'one'); // fresh\n\t});\n\n\ttest('wrap', function () {\n\t\tassert.deepStrictEqual([...Iterable.wrap(1)], [1]);\n\t\tassert.deepStrictEqual([...Iterable.wrap([1, 2, 3])], [1, 2, 3]);\n\t});\n});\n"],
  "mappings": "AAKA,OAAO,YAAY;AACnB,SAAS,gBAAgB;AACzB,SAAS,+CAA+C;AAExD,MAAM,YAAY,WAAY;AAE7B,0CAAwC;AAExC,QAAM,iBAAiB,IAAI,MAAM;AAAA,IAEhC,EAAE,OAAO,QAAQ,IAAI;AACpB,YAAM;AACN,YAAM;AACN,YAAM;AAAA,IACP;AAAA,EACD;AAEA,OAAK,SAAS,WAAY;AAEzB,WAAO,YAAY,SAAS,MAAM,CAAC,CAAC,GAAG,MAAS;AAChD,WAAO,YAAY,SAAS,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC;AACzC,WAAO,YAAY,SAAS,MAAM,cAAc,GAAG,KAAK;AACxD,WAAO,YAAY,SAAS,MAAM,cAAc,GAAG,KAAK;AAAA,EACzD,CAAC;AAED,OAAK,QAAQ,WAAY;AACxB,WAAO,gBAAgB,CAAC,GAAG,SAAS,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACjD,WAAO,gBAAgB,CAAC,GAAG,SAAS,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;AAAA,EAChE,CAAC;AACF,CAAC;",
  "names": []
}
