import o from"assert";import{ResourceTree as n}from"../../common/resourceTree.js";import{URI as e}from"../../common/uri.js";import{ensureNoDisposablesAreLeakedInTestSuite as c}from"./utils.js";suite("ResourceTree",function(){c(),test("ctor",function(){const t=new n(null);o.strictEqual(t.root.childrenCount,0)}),test("simple",function(){const t=new n(null);t.add(e.file("/foo/bar.txt"),"bar contents"),o.strictEqual(t.root.childrenCount,1);const l=t.root.get("foo");o(l),o.strictEqual(l.childrenCount,1);const i=l.get("bar.txt");o(i),o.strictEqual(i.element,"bar contents"),t.add(e.file("/hello.txt"),"hello contents"),o.strictEqual(t.root.childrenCount,2);let r=t.root.get("hello.txt");o(r),o.strictEqual(r.element,"hello contents"),t.delete(e.file("/foo/bar.txt")),o.strictEqual(t.root.childrenCount,1),r=t.root.get("hello.txt"),o(r),o.strictEqual(r.element,"hello contents")}),test("folders with data",function(){const t=new n(null);o.strictEqual(t.root.childrenCount,0),t.add(e.file("/foo"),"foo"),o.strictEqual(t.root.childrenCount,1),o.strictEqual(t.root.get("foo").element,"foo"),t.add(e.file("/bar"),"bar"),o.strictEqual(t.root.childrenCount,2),o.strictEqual(t.root.get("bar").element,"bar"),t.add(e.file("/foo/file.txt"),"file"),o.strictEqual(t.root.childrenCount,2),o.strictEqual(t.root.get("foo").element,"foo"),o.strictEqual(t.root.get("bar").element,"bar"),o.strictEqual(t.root.get("foo").get("file.txt").element,"file"),t.delete(e.file("/foo")),o.strictEqual(t.root.childrenCount,1),o(!t.root.get("foo")),o.strictEqual(t.root.get("bar").element,"bar"),t.delete(e.file("/bar")),o.strictEqual(t.root.childrenCount,0),o(!t.root.get("foo")),o(!t.root.get("bar"))})});
