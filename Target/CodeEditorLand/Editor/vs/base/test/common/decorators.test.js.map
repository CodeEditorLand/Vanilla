{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/test/common/decorators.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport * as sinon from 'sinon';\nimport { memoize, throttle } from '../../common/decorators.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from './utils.js';\n\nsuite('Decorators', () => {\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('memoize should memoize methods', () => {\n\t\tclass Foo {\n\t\t\tcount = 0;\n\n\t\t\tconstructor(private _answer: number | null | undefined) { }\n\n\t\t\t@memoize\n\t\t\tanswer() {\n\t\t\t\tthis.count++;\n\t\t\t\treturn this._answer;\n\t\t\t}\n\t\t}\n\n\t\tconst foo = new Foo(42);\n\t\tassert.strictEqual(foo.count, 0);\n\t\tassert.strictEqual(foo.answer(), 42);\n\t\tassert.strictEqual(foo.count, 1);\n\t\tassert.strictEqual(foo.answer(), 42);\n\t\tassert.strictEqual(foo.count, 1);\n\n\t\tconst foo2 = new Foo(1337);\n\t\tassert.strictEqual(foo2.count, 0);\n\t\tassert.strictEqual(foo2.answer(), 1337);\n\t\tassert.strictEqual(foo2.count, 1);\n\t\tassert.strictEqual(foo2.answer(), 1337);\n\t\tassert.strictEqual(foo2.count, 1);\n\n\t\tassert.strictEqual(foo.answer(), 42);\n\t\tassert.strictEqual(foo.count, 1);\n\n\t\tconst foo3 = new Foo(null);\n\t\tassert.strictEqual(foo3.count, 0);\n\t\tassert.strictEqual(foo3.answer(), null);\n\t\tassert.strictEqual(foo3.count, 1);\n\t\tassert.strictEqual(foo3.answer(), null);\n\t\tassert.strictEqual(foo3.count, 1);\n\n\t\tconst foo4 = new Foo(undefined);\n\t\tassert.strictEqual(foo4.count, 0);\n\t\tassert.strictEqual(foo4.answer(), undefined);\n\t\tassert.strictEqual(foo4.count, 1);\n\t\tassert.strictEqual(foo4.answer(), undefined);\n\t\tassert.strictEqual(foo4.count, 1);\n\t});\n\n\ttest('memoize should memoize getters', () => {\n\t\tclass Foo {\n\t\t\tcount = 0;\n\n\t\t\tconstructor(private _answer: number | null | undefined) { }\n\n\t\t\t@memoize\n\t\t\tget answer() {\n\t\t\t\tthis.count++;\n\t\t\t\treturn this._answer;\n\t\t\t}\n\t\t}\n\n\t\tconst foo = new Foo(42);\n\t\tassert.strictEqual(foo.count, 0);\n\t\tassert.strictEqual(foo.answer, 42);\n\t\tassert.strictEqual(foo.count, 1);\n\t\tassert.strictEqual(foo.answer, 42);\n\t\tassert.strictEqual(foo.count, 1);\n\n\t\tconst foo2 = new Foo(1337);\n\t\tassert.strictEqual(foo2.count, 0);\n\t\tassert.strictEqual(foo2.answer, 1337);\n\t\tassert.strictEqual(foo2.count, 1);\n\t\tassert.strictEqual(foo2.answer, 1337);\n\t\tassert.strictEqual(foo2.count, 1);\n\n\t\tassert.strictEqual(foo.answer, 42);\n\t\tassert.strictEqual(foo.count, 1);\n\n\t\tconst foo3 = new Foo(null);\n\t\tassert.strictEqual(foo3.count, 0);\n\t\tassert.strictEqual(foo3.answer, null);\n\t\tassert.strictEqual(foo3.count, 1);\n\t\tassert.strictEqual(foo3.answer, null);\n\t\tassert.strictEqual(foo3.count, 1);\n\n\t\tconst foo4 = new Foo(undefined);\n\t\tassert.strictEqual(foo4.count, 0);\n\t\tassert.strictEqual(foo4.answer, undefined);\n\t\tassert.strictEqual(foo4.count, 1);\n\t\tassert.strictEqual(foo4.answer, undefined);\n\t\tassert.strictEqual(foo4.count, 1);\n\t});\n\n\ttest('memoized property should not be enumerable', () => {\n\t\tclass Foo {\n\t\t\t@memoize\n\t\t\tget answer() {\n\t\t\t\treturn 42;\n\t\t\t}\n\t\t}\n\n\t\tconst foo = new Foo();\n\t\tassert.strictEqual(foo.answer, 42);\n\n\t\tassert(!Object.keys(foo).some(k => /\\$memoize\\$/.test(k)));\n\t});\n\n\ttest('memoized property should not be writable', () => {\n\t\tclass Foo {\n\t\t\t@memoize\n\t\t\tget answer() {\n\t\t\t\treturn 42;\n\t\t\t}\n\t\t}\n\n\t\tconst foo = new Foo();\n\t\tassert.strictEqual(foo.answer, 42);\n\n\t\ttry {\n\t\t\t(foo as any)['$memoize$answer'] = 1337;\n\t\t\tassert(false);\n\t\t} catch (e) {\n\t\t\tassert.strictEqual(foo.answer, 42);\n\t\t}\n\t});\n\n\ttest('throttle', () => {\n\t\tconst spy = sinon.spy();\n\t\tconst clock = sinon.useFakeTimers();\n\t\ttry {\n\t\t\tclass ThrottleTest {\n\t\t\t\tprivate _handle: Function;\n\n\t\t\t\tconstructor(fn: Function) {\n\t\t\t\t\tthis._handle = fn;\n\t\t\t\t}\n\n\t\t\t\t@throttle(\n\t\t\t\t\t100,\n\t\t\t\t\t(a: number, b: number) => a + b,\n\t\t\t\t\t() => 0\n\t\t\t\t)\n\t\t\t\treport(p: number): void {\n\t\t\t\t\tthis._handle(p);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst t = new ThrottleTest(spy);\n\n\t\t\tt.report(1);\n\t\t\tt.report(2);\n\t\t\tt.report(3);\n\t\t\tassert.deepStrictEqual(spy.args, [[1]]);\n\n\t\t\tclock.tick(200);\n\t\t\tassert.deepStrictEqual(spy.args, [[1], [5]]);\n\t\t\tspy.resetHistory();\n\n\t\t\tt.report(4);\n\t\t\tt.report(5);\n\t\t\tclock.tick(50);\n\t\t\tt.report(6);\n\n\t\t\tassert.deepStrictEqual(spy.args, [[4]]);\n\t\t\tclock.tick(60);\n\t\t\tassert.deepStrictEqual(spy.args, [[4], [11]]);\n\t\t} finally {\n\t\t\tclock.restore();\n\t\t}\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
