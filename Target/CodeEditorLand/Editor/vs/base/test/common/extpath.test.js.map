{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/test/common/extpath.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { CharCode } from '../../common/charCode.js';\nimport * as extpath from '../../common/extpath.js';\nimport { isWindows } from '../../common/platform.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from './utils.js';\n\nsuite('Paths', () => {\n\n\ttest('toForwardSlashes', () => {\n\t\tassert.strictEqual(extpath.toSlashes('\\\\\\\\server\\\\share\\\\some\\\\path'), '//server/share/some/path');\n\t\tassert.strictEqual(extpath.toSlashes('c:\\\\test'), 'c:/test');\n\t\tassert.strictEqual(extpath.toSlashes('foo\\\\bar'), 'foo/bar');\n\t\tassert.strictEqual(extpath.toSlashes('/user/far'), '/user/far');\n\t});\n\n\ttest('getRoot', () => {\n\t\tassert.strictEqual(extpath.getRoot('/user/far'), '/');\n\t\tassert.strictEqual(extpath.getRoot('\\\\\\\\server\\\\share\\\\some\\\\path'), '//server/share/');\n\t\tassert.strictEqual(extpath.getRoot('//server/share/some/path'), '//server/share/');\n\t\tassert.strictEqual(extpath.getRoot('//server/share'), '/');\n\t\tassert.strictEqual(extpath.getRoot('//server'), '/');\n\t\tassert.strictEqual(extpath.getRoot('//server//'), '/');\n\t\tassert.strictEqual(extpath.getRoot('c:/user/far'), 'c:/');\n\t\tassert.strictEqual(extpath.getRoot('c:user/far'), 'c:');\n\t\tassert.strictEqual(extpath.getRoot('http://www'), '');\n\t\tassert.strictEqual(extpath.getRoot('http://www/'), 'http://www/');\n\t\tassert.strictEqual(extpath.getRoot('file:///foo'), 'file:///');\n\t\tassert.strictEqual(extpath.getRoot('file://foo'), '');\n\t});\n\n\t(!isWindows ? test.skip : test)('isUNC', () => {\n\t\tassert.ok(!extpath.isUNC('foo'));\n\t\tassert.ok(!extpath.isUNC('/foo'));\n\t\tassert.ok(!extpath.isUNC('\\\\foo'));\n\t\tassert.ok(!extpath.isUNC('\\\\\\\\foo'));\n\t\tassert.ok(extpath.isUNC('\\\\\\\\a\\\\b'));\n\t\tassert.ok(!extpath.isUNC('//a/b'));\n\t\tassert.ok(extpath.isUNC('\\\\\\\\server\\\\share'));\n\t\tassert.ok(extpath.isUNC('\\\\\\\\server\\\\share\\\\'));\n\t\tassert.ok(extpath.isUNC('\\\\\\\\server\\\\share\\\\path'));\n\t});\n\n\ttest('isValidBasename', () => {\n\t\tassert.ok(!extpath.isValidBasename(null));\n\t\tassert.ok(!extpath.isValidBasename(''));\n\t\tassert.ok(extpath.isValidBasename('test.txt'));\n\t\tassert.ok(!extpath.isValidBasename('/test.txt'));\n\n\t\tif (isWindows) {\n\t\t\tassert.ok(!extpath.isValidBasename('\\\\test.txt'));\n\t\t\tassert.ok(!extpath.isValidBasename('aux'));\n\t\t\tassert.ok(!extpath.isValidBasename('Aux'));\n\t\t\tassert.ok(!extpath.isValidBasename('LPT0'));\n\t\t\tassert.ok(!extpath.isValidBasename('aux.txt'));\n\t\t\tassert.ok(!extpath.isValidBasename('com0.abc'));\n\t\t\tassert.ok(extpath.isValidBasename('LPT00'));\n\t\t\tassert.ok(extpath.isValidBasename('aux1'));\n\t\t\tassert.ok(extpath.isValidBasename('aux1.txt'));\n\t\t\tassert.ok(extpath.isValidBasename('aux1.aux.txt'));\n\n\t\t\tassert.ok(!extpath.isValidBasename('test.txt.'));\n\t\t\tassert.ok(!extpath.isValidBasename('test.txt..'));\n\t\t\tassert.ok(!extpath.isValidBasename('test.txt '));\n\t\t\tassert.ok(!extpath.isValidBasename('test.txt\\t'));\n\t\t\tassert.ok(!extpath.isValidBasename('tes:t.txt'));\n\t\t\tassert.ok(!extpath.isValidBasename('tes\"t.txt'));\n\t\t} else {\n\t\t\tassert.ok(extpath.isValidBasename('\\\\test.txt'));\n\t\t}\n\t});\n\n\ttest('sanitizeFilePath', () => {\n\t\tif (isWindows) {\n\t\t\tassert.strictEqual(extpath.sanitizeFilePath('.', 'C:\\\\the\\\\cwd'), 'C:\\\\the\\\\cwd');\n\t\t\tassert.strictEqual(extpath.sanitizeFilePath('', 'C:\\\\the\\\\cwd'), 'C:\\\\the\\\\cwd');\n\n\t\t\tassert.strictEqual(extpath.sanitizeFilePath('C:', 'C:\\\\the\\\\cwd'), 'C:\\\\');\n\t\t\tassert.strictEqual(extpath.sanitizeFilePath('C:\\\\', 'C:\\\\the\\\\cwd'), 'C:\\\\');\n\t\t\tassert.strictEqual(extpath.sanitizeFilePath('C:\\\\\\\\', 'C:\\\\the\\\\cwd'), 'C:\\\\');\n\n\t\t\tassert.strictEqual(extpath.sanitizeFilePath('C:\\\\folder\\\\my.txt', 'C:\\\\the\\\\cwd'), 'C:\\\\folder\\\\my.txt');\n\t\t\tassert.strictEqual(extpath.sanitizeFilePath('C:\\\\folder\\\\my', 'C:\\\\the\\\\cwd'), 'C:\\\\folder\\\\my');\n\t\t\tassert.strictEqual(extpath.sanitizeFilePath('C:\\\\folder\\\\..\\\\my', 'C:\\\\the\\\\cwd'), 'C:\\\\my');\n\t\t\tassert.strictEqual(extpath.sanitizeFilePath('C:\\\\folder\\\\my\\\\', 'C:\\\\the\\\\cwd'), 'C:\\\\folder\\\\my');\n\t\t\tassert.strictEqual(extpath.sanitizeFilePath('C:\\\\folder\\\\my\\\\\\\\\\\\', 'C:\\\\the\\\\cwd'), 'C:\\\\folder\\\\my');\n\n\t\t\tassert.strictEqual(extpath.sanitizeFilePath('my.txt', 'C:\\\\the\\\\cwd'), 'C:\\\\the\\\\cwd\\\\my.txt');\n\t\t\tassert.strictEqual(extpath.sanitizeFilePath('my.txt\\\\', 'C:\\\\the\\\\cwd'), 'C:\\\\the\\\\cwd\\\\my.txt');\n\n\t\t\tassert.strictEqual(extpath.sanitizeFilePath('\\\\\\\\localhost\\\\folder\\\\my', 'C:\\\\the\\\\cwd'), '\\\\\\\\localhost\\\\folder\\\\my');\n\t\t\tassert.strictEqual(extpath.sanitizeFilePath('\\\\\\\\localhost\\\\folder\\\\my\\\\', 'C:\\\\the\\\\cwd'), '\\\\\\\\localhost\\\\folder\\\\my');\n\t\t} else {\n\t\t\tassert.strictEqual(extpath.sanitizeFilePath('.', '/the/cwd'), '/the/cwd');\n\t\t\tassert.strictEqual(extpath.sanitizeFilePath('', '/the/cwd'), '/the/cwd');\n\t\t\tassert.strictEqual(extpath.sanitizeFilePath('/', '/the/cwd'), '/');\n\n\t\t\tassert.strictEqual(extpath.sanitizeFilePath('/folder/my.txt', '/the/cwd'), '/folder/my.txt');\n\t\t\tassert.strictEqual(extpath.sanitizeFilePath('/folder/my', '/the/cwd'), '/folder/my');\n\t\t\tassert.strictEqual(extpath.sanitizeFilePath('/folder/../my', '/the/cwd'), '/my');\n\t\t\tassert.strictEqual(extpath.sanitizeFilePath('/folder/my/', '/the/cwd'), '/folder/my');\n\t\t\tassert.strictEqual(extpath.sanitizeFilePath('/folder/my///', '/the/cwd'), '/folder/my');\n\n\t\t\tassert.strictEqual(extpath.sanitizeFilePath('my.txt', '/the/cwd'), '/the/cwd/my.txt');\n\t\t\tassert.strictEqual(extpath.sanitizeFilePath('my.txt/', '/the/cwd'), '/the/cwd/my.txt');\n\t\t}\n\t});\n\n\ttest('isRootOrDriveLetter', () => {\n\t\tif (isWindows) {\n\t\t\tassert.ok(extpath.isRootOrDriveLetter('c:'));\n\t\t\tassert.ok(extpath.isRootOrDriveLetter('D:'));\n\t\t\tassert.ok(extpath.isRootOrDriveLetter('D:/'));\n\t\t\tassert.ok(extpath.isRootOrDriveLetter('D:\\\\'));\n\t\t\tassert.ok(!extpath.isRootOrDriveLetter('D:\\\\path'));\n\t\t\tassert.ok(!extpath.isRootOrDriveLetter('D:/path'));\n\t\t} else {\n\t\t\tassert.ok(extpath.isRootOrDriveLetter('/'));\n\t\t\tassert.ok(!extpath.isRootOrDriveLetter('/path'));\n\t\t}\n\t});\n\n\ttest('hasDriveLetter', () => {\n\t\tif (isWindows) {\n\t\t\tassert.ok(extpath.hasDriveLetter('c:'));\n\t\t\tassert.ok(extpath.hasDriveLetter('D:'));\n\t\t\tassert.ok(extpath.hasDriveLetter('D:/'));\n\t\t\tassert.ok(extpath.hasDriveLetter('D:\\\\'));\n\t\t\tassert.ok(extpath.hasDriveLetter('D:\\\\path'));\n\t\t\tassert.ok(extpath.hasDriveLetter('D:/path'));\n\t\t} else {\n\t\t\tassert.ok(!extpath.hasDriveLetter('/'));\n\t\t\tassert.ok(!extpath.hasDriveLetter('/path'));\n\t\t}\n\t});\n\n\ttest('getDriveLetter', () => {\n\t\tif (isWindows) {\n\t\t\tassert.strictEqual(extpath.getDriveLetter('c:'), 'c');\n\t\t\tassert.strictEqual(extpath.getDriveLetter('D:'), 'D');\n\t\t\tassert.strictEqual(extpath.getDriveLetter('D:/'), 'D');\n\t\t\tassert.strictEqual(extpath.getDriveLetter('D:\\\\'), 'D');\n\t\t\tassert.strictEqual(extpath.getDriveLetter('D:\\\\path'), 'D');\n\t\t\tassert.strictEqual(extpath.getDriveLetter('D:/path'), 'D');\n\t\t} else {\n\t\t\tassert.ok(!extpath.getDriveLetter('/'));\n\t\t\tassert.ok(!extpath.getDriveLetter('/path'));\n\t\t}\n\t});\n\n\ttest('isWindowsDriveLetter', () => {\n\t\tassert.ok(!extpath.isWindowsDriveLetter(0));\n\t\tassert.ok(!extpath.isWindowsDriveLetter(-1));\n\t\tassert.ok(extpath.isWindowsDriveLetter(CharCode.A));\n\t\tassert.ok(extpath.isWindowsDriveLetter(CharCode.z));\n\t});\n\n\ttest('indexOfPath', () => {\n\t\tassert.strictEqual(extpath.indexOfPath('/foo', '/bar', true), -1);\n\t\tassert.strictEqual(extpath.indexOfPath('/foo', '/FOO', false), -1);\n\t\tassert.strictEqual(extpath.indexOfPath('/foo', '/FOO', true), 0);\n\t\tassert.strictEqual(extpath.indexOfPath('/some/long/path', '/some/long', false), 0);\n\t\tassert.strictEqual(extpath.indexOfPath('/some/long/path', '/PATH', true), 10);\n\t});\n\n\ttest('parseLineAndColumnAware', () => {\n\t\tlet res = extpath.parseLineAndColumnAware('/foo/bar');\n\t\tassert.strictEqual(res.path, '/foo/bar');\n\t\tassert.strictEqual(res.line, undefined);\n\t\tassert.strictEqual(res.column, undefined);\n\n\t\tres = extpath.parseLineAndColumnAware('/foo/bar:33');\n\t\tassert.strictEqual(res.path, '/foo/bar');\n\t\tassert.strictEqual(res.line, 33);\n\t\tassert.strictEqual(res.column, 1);\n\n\t\tres = extpath.parseLineAndColumnAware('/foo/bar:33:34');\n\t\tassert.strictEqual(res.path, '/foo/bar');\n\t\tassert.strictEqual(res.line, 33);\n\t\tassert.strictEqual(res.column, 34);\n\n\t\tres = extpath.parseLineAndColumnAware('C:\\\\foo\\\\bar');\n\t\tassert.strictEqual(res.path, 'C:\\\\foo\\\\bar');\n\t\tassert.strictEqual(res.line, undefined);\n\t\tassert.strictEqual(res.column, undefined);\n\n\t\tres = extpath.parseLineAndColumnAware('C:\\\\foo\\\\bar:33');\n\t\tassert.strictEqual(res.path, 'C:\\\\foo\\\\bar');\n\t\tassert.strictEqual(res.line, 33);\n\t\tassert.strictEqual(res.column, 1);\n\n\t\tres = extpath.parseLineAndColumnAware('C:\\\\foo\\\\bar:33:34');\n\t\tassert.strictEqual(res.path, 'C:\\\\foo\\\\bar');\n\t\tassert.strictEqual(res.line, 33);\n\t\tassert.strictEqual(res.column, 34);\n\n\t\tres = extpath.parseLineAndColumnAware('/foo/bar:abb');\n\t\tassert.strictEqual(res.path, '/foo/bar:abb');\n\t\tassert.strictEqual(res.line, undefined);\n\t\tassert.strictEqual(res.column, undefined);\n\t});\n\n\ttest('randomPath', () => {\n\t\tlet res = extpath.randomPath('/foo/bar');\n\t\tassert.ok(res);\n\n\t\tres = extpath.randomPath('/foo/bar', 'prefix-');\n\t\tassert.ok(res.indexOf('prefix-'));\n\n\t\tconst r1 = extpath.randomPath('/foo/bar');\n\t\tconst r2 = extpath.randomPath('/foo/bar');\n\n\t\tassert.notStrictEqual(r1, r2);\n\n\t\tconst r3 = extpath.randomPath('', '', 3);\n\t\tassert.strictEqual(r3.length, 3);\n\n\t\tconst r4 = extpath.randomPath();\n\t\tassert.ok(r4);\n\t});\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n});\n"],
  "mappings": "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",
  "names": []
}
