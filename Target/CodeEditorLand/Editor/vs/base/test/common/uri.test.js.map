{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/test/common/uri.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport assert from 'assert';\nimport { isWindows } from '../../common/platform.js';\nimport { URI, UriComponents, isUriComponents } from '../../common/uri.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from './utils.js';\n\n\nsuite('URI', () => {\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('file#toString', () => {\n\t\tassert.strictEqual(URI.file('c:/win/path').toString(), 'file:///c%3A/win/path');\n\t\tassert.strictEqual(URI.file('C:/win/path').toString(), 'file:///c%3A/win/path');\n\t\tassert.strictEqual(URI.file('c:/win/path/').toString(), 'file:///c%3A/win/path/');\n\t\tassert.strictEqual(URI.file('/c:/win/path').toString(), 'file:///c%3A/win/path');\n\t});\n\n\ttest('URI.file (win-special)', () => {\n\t\tif (isWindows) {\n\t\t\tassert.strictEqual(URI.file('c:\\\\win\\\\path').toString(), 'file:///c%3A/win/path');\n\t\t\tassert.strictEqual(URI.file('c:\\\\win/path').toString(), 'file:///c%3A/win/path');\n\t\t} else {\n\t\t\tassert.strictEqual(URI.file('c:\\\\win\\\\path').toString(), 'file:///c%3A%5Cwin%5Cpath');\n\t\t\tassert.strictEqual(URI.file('c:\\\\win/path').toString(), 'file:///c%3A%5Cwin/path');\n\n\t\t}\n\t});\n\n\ttest('file#fsPath (win-special)', () => {\n\t\tif (isWindows) {\n\t\t\tassert.strictEqual(URI.file('c:\\\\win\\\\path').fsPath, 'c:\\\\win\\\\path');\n\t\t\tassert.strictEqual(URI.file('c:\\\\win/path').fsPath, 'c:\\\\win\\\\path');\n\n\t\t\tassert.strictEqual(URI.file('c:/win/path').fsPath, 'c:\\\\win\\\\path');\n\t\t\tassert.strictEqual(URI.file('c:/win/path/').fsPath, 'c:\\\\win\\\\path\\\\');\n\t\t\tassert.strictEqual(URI.file('C:/win/path').fsPath, 'c:\\\\win\\\\path');\n\t\t\tassert.strictEqual(URI.file('/c:/win/path').fsPath, 'c:\\\\win\\\\path');\n\t\t\tassert.strictEqual(URI.file('./c/win/path').fsPath, '\\\\.\\\\c\\\\win\\\\path');\n\t\t} else {\n\t\t\tassert.strictEqual(URI.file('c:/win/path').fsPath, 'c:/win/path');\n\t\t\tassert.strictEqual(URI.file('c:/win/path/').fsPath, 'c:/win/path/');\n\t\t\tassert.strictEqual(URI.file('C:/win/path').fsPath, 'c:/win/path');\n\t\t\tassert.strictEqual(URI.file('/c:/win/path').fsPath, 'c:/win/path');\n\t\t\tassert.strictEqual(URI.file('./c/win/path').fsPath, '/./c/win/path');\n\t\t}\n\t});\n\n\ttest('URI#fsPath - no `fsPath` when no `path`', () => {\n\t\tconst value = URI.parse('file://%2Fhome%2Fticino%2Fdesktop%2Fcpluscplus%2Ftest.cpp');\n\t\tassert.strictEqual(value.authority, '/home/ticino/desktop/cpluscplus/test.cpp');\n\t\tassert.strictEqual(value.path, '/');\n\t\tif (isWindows) {\n\t\t\tassert.strictEqual(value.fsPath, '\\\\');\n\t\t} else {\n\t\t\tassert.strictEqual(value.fsPath, '/');\n\t\t}\n\t});\n\n\ttest('http#toString', () => {\n\t\tassert.strictEqual(URI.from({ scheme: 'http', authority: 'www.example.com', path: '/my/path' }).toString(), 'http://www.example.com/my/path');\n\t\tassert.strictEqual(URI.from({ scheme: 'http', authority: 'www.example.com', path: '/my/path' }).toString(), 'http://www.example.com/my/path');\n\t\tassert.strictEqual(URI.from({ scheme: 'http', authority: 'www.EXAMPLE.com', path: '/my/path' }).toString(), 'http://www.example.com/my/path');\n\t\tassert.strictEqual(URI.from({ scheme: 'http', authority: '', path: 'my/path' }).toString(), 'http:/my/path');\n\t\tassert.strictEqual(URI.from({ scheme: 'http', authority: '', path: '/my/path' }).toString(), 'http:/my/path');\n\t\t//http://example.com/#test=true\n\t\tassert.strictEqual(URI.from({ scheme: 'http', authority: 'example.com', path: '/', query: 'test=true' }).toString(), 'http://example.com/?test%3Dtrue');\n\t\tassert.strictEqual(URI.from({ scheme: 'http', authority: 'example.com', path: '/', query: '', fragment: 'test=true' }).toString(), 'http://example.com/#test%3Dtrue');\n\t});\n\n\ttest('http#toString, encode=FALSE', () => {\n\t\tassert.strictEqual(URI.from({ scheme: 'http', authority: 'example.com', path: '/', query: 'test=true' }).toString(true), 'http://example.com/?test=true');\n\t\tassert.strictEqual(URI.from({ scheme: 'http', authority: 'example.com', path: '/', query: '', fragment: 'test=true' }).toString(true), 'http://example.com/#test=true');\n\t\tassert.strictEqual(URI.from({ scheme: 'http', path: '/api/files/test.me', query: 't=1234' }).toString(true), 'http:/api/files/test.me?t=1234');\n\n\t\tconst value = URI.parse('file://shares/pr\u00F6jects/c%23/#l12');\n\t\tassert.strictEqual(value.authority, 'shares');\n\t\tassert.strictEqual(value.path, '/pr\u00F6jects/c#/');\n\t\tassert.strictEqual(value.fragment, 'l12');\n\t\tassert.strictEqual(value.toString(), 'file://shares/pr%C3%B6jects/c%23/#l12');\n\t\tassert.strictEqual(value.toString(true), 'file://shares/pr\u00F6jects/c%23/#l12');\n\n\t\tconst uri2 = URI.parse(value.toString(true));\n\t\tconst uri3 = URI.parse(value.toString());\n\t\tassert.strictEqual(uri2.authority, uri3.authority);\n\t\tassert.strictEqual(uri2.path, uri3.path);\n\t\tassert.strictEqual(uri2.query, uri3.query);\n\t\tassert.strictEqual(uri2.fragment, uri3.fragment);\n\t});\n\n\ttest('with, identity', () => {\n\t\tconst uri = URI.parse('foo:bar/path');\n\n\t\tlet uri2 = uri.with(null!);\n\t\tassert.ok(uri === uri2);\n\t\turi2 = uri.with(undefined!);\n\t\tassert.ok(uri === uri2);\n\t\turi2 = uri.with({});\n\t\tassert.ok(uri === uri2);\n\t\turi2 = uri.with({ scheme: 'foo', path: 'bar/path' });\n\t\tassert.ok(uri === uri2);\n\t});\n\n\ttest('with, changes', () => {\n\t\tassert.strictEqual(URI.parse('before:some/file/path').with({ scheme: 'after' }).toString(), 'after:some/file/path');\n\t\tassert.strictEqual(URI.from({ scheme: 's' }).with({ scheme: 'http', path: '/api/files/test.me', query: 't=1234' }).toString(), 'http:/api/files/test.me?t%3D1234');\n\t\tassert.strictEqual(URI.from({ scheme: 's' }).with({ scheme: 'http', authority: '', path: '/api/files/test.me', query: 't=1234', fragment: '' }).toString(), 'http:/api/files/test.me?t%3D1234');\n\t\tassert.strictEqual(URI.from({ scheme: 's' }).with({ scheme: 'https', authority: '', path: '/api/files/test.me', query: 't=1234', fragment: '' }).toString(), 'https:/api/files/test.me?t%3D1234');\n\t\tassert.strictEqual(URI.from({ scheme: 's' }).with({ scheme: 'HTTP', authority: '', path: '/api/files/test.me', query: 't=1234', fragment: '' }).toString(), 'HTTP:/api/files/test.me?t%3D1234');\n\t\tassert.strictEqual(URI.from({ scheme: 's' }).with({ scheme: 'HTTPS', authority: '', path: '/api/files/test.me', query: 't=1234', fragment: '' }).toString(), 'HTTPS:/api/files/test.me?t%3D1234');\n\t\tassert.strictEqual(URI.from({ scheme: 's' }).with({ scheme: 'boo', authority: '', path: '/api/files/test.me', query: 't=1234', fragment: '' }).toString(), 'boo:/api/files/test.me?t%3D1234');\n\t});\n\n\ttest('with, remove components #8465', () => {\n\t\tassert.strictEqual(URI.parse('scheme://authority/path').with({ authority: '' }).toString(), 'scheme:/path');\n\t\tassert.strictEqual(URI.parse('scheme:/path').with({ authority: 'authority' }).with({ authority: '' }).toString(), 'scheme:/path');\n\t\tassert.strictEqual(URI.parse('scheme:/path').with({ authority: 'authority' }).with({ authority: null }).toString(), 'scheme:/path');\n\t\tassert.strictEqual(URI.parse('scheme:/path').with({ authority: 'authority' }).with({ path: '' }).toString(), 'scheme://authority');\n\t\tassert.strictEqual(URI.parse('scheme:/path').with({ authority: 'authority' }).with({ path: null }).toString(), 'scheme://authority');\n\t\tassert.strictEqual(URI.parse('scheme:/path').with({ authority: '' }).toString(), 'scheme:/path');\n\t\tassert.strictEqual(URI.parse('scheme:/path').with({ authority: null }).toString(), 'scheme:/path');\n\t});\n\n\ttest('with, validation', () => {\n\t\tconst uri = URI.parse('foo:bar/path');\n\t\tassert.throws(() => uri.with({ scheme: 'fai:l' }));\n\t\tassert.throws(() => uri.with({ scheme: 'f\u00E4il' }));\n\t\tassert.throws(() => uri.with({ authority: 'fail' }));\n\t\tassert.throws(() => uri.with({ path: '//fail' }));\n\t});\n\n\ttest('parse', () => {\n\t\tlet value = URI.parse('http:/api/files/test.me?t=1234');\n\t\tassert.strictEqual(value.scheme, 'http');\n\t\tassert.strictEqual(value.authority, '');\n\t\tassert.strictEqual(value.path, '/api/files/test.me');\n\t\tassert.strictEqual(value.query, 't=1234');\n\t\tassert.strictEqual(value.fragment, '');\n\n\t\tvalue = URI.parse('http://api/files/test.me?t=1234');\n\t\tassert.strictEqual(value.scheme, 'http');\n\t\tassert.strictEqual(value.authority, 'api');\n\t\tassert.strictEqual(value.path, '/files/test.me');\n\t\tassert.strictEqual(value.query, 't=1234');\n\t\tassert.strictEqual(value.fragment, '');\n\n\t\tvalue = URI.parse('file:///c:/test/me');\n\t\tassert.strictEqual(value.scheme, 'file');\n\t\tassert.strictEqual(value.authority, '');\n\t\tassert.strictEqual(value.path, '/c:/test/me');\n\t\tassert.strictEqual(value.fragment, '');\n\t\tassert.strictEqual(value.query, '');\n\t\tassert.strictEqual(value.fsPath, isWindows ? 'c:\\\\test\\\\me' : 'c:/test/me');\n\n\t\tvalue = URI.parse('file://shares/files/c%23/p.cs');\n\t\tassert.strictEqual(value.scheme, 'file');\n\t\tassert.strictEqual(value.authority, 'shares');\n\t\tassert.strictEqual(value.path, '/files/c#/p.cs');\n\t\tassert.strictEqual(value.fragment, '');\n\t\tassert.strictEqual(value.query, '');\n\t\tassert.strictEqual(value.fsPath, isWindows ? '\\\\\\\\shares\\\\files\\\\c#\\\\p.cs' : '//shares/files/c#/p.cs');\n\n\t\tvalue = URI.parse('file:///c:/Source/Z%C3%BCrich%20or%20Zurich%20(%CB%88zj%CA%8A%C9%99r%C9%AAk,/Code/resources/app/plugins/c%23/plugin.json');\n\t\tassert.strictEqual(value.scheme, 'file');\n\t\tassert.strictEqual(value.authority, '');\n\t\tassert.strictEqual(value.path, '/c:/Source/Z\u00FCrich or Zurich (\u02C8zj\u028A\u0259r\u026Ak,/Code/resources/app/plugins/c#/plugin.json');\n\t\tassert.strictEqual(value.fragment, '');\n\t\tassert.strictEqual(value.query, '');\n\n\t\tvalue = URI.parse('file:///c:/test %25/path');\n\t\tassert.strictEqual(value.scheme, 'file');\n\t\tassert.strictEqual(value.authority, '');\n\t\tassert.strictEqual(value.path, '/c:/test %/path');\n\t\tassert.strictEqual(value.fragment, '');\n\t\tassert.strictEqual(value.query, '');\n\n\t\tvalue = URI.parse('inmemory:');\n\t\tassert.strictEqual(value.scheme, 'inmemory');\n\t\tassert.strictEqual(value.authority, '');\n\t\tassert.strictEqual(value.path, '');\n\t\tassert.strictEqual(value.query, '');\n\t\tassert.strictEqual(value.fragment, '');\n\n\t\tvalue = URI.parse('foo:api/files/test');\n\t\tassert.strictEqual(value.scheme, 'foo');\n\t\tassert.strictEqual(value.authority, '');\n\t\tassert.strictEqual(value.path, 'api/files/test');\n\t\tassert.strictEqual(value.query, '');\n\t\tassert.strictEqual(value.fragment, '');\n\n\t\tvalue = URI.parse('file:?q');\n\t\tassert.strictEqual(value.scheme, 'file');\n\t\tassert.strictEqual(value.authority, '');\n\t\tassert.strictEqual(value.path, '/');\n\t\tassert.strictEqual(value.query, 'q');\n\t\tassert.strictEqual(value.fragment, '');\n\n\t\tvalue = URI.parse('file:#d');\n\t\tassert.strictEqual(value.scheme, 'file');\n\t\tassert.strictEqual(value.authority, '');\n\t\tassert.strictEqual(value.path, '/');\n\t\tassert.strictEqual(value.query, '');\n\t\tassert.strictEqual(value.fragment, 'd');\n\n\t\tvalue = URI.parse('f3ile:#d');\n\t\tassert.strictEqual(value.scheme, 'f3ile');\n\t\tassert.strictEqual(value.authority, '');\n\t\tassert.strictEqual(value.path, '');\n\t\tassert.strictEqual(value.query, '');\n\t\tassert.strictEqual(value.fragment, 'd');\n\n\t\tvalue = URI.parse('foo+bar:path');\n\t\tassert.strictEqual(value.scheme, 'foo+bar');\n\t\tassert.strictEqual(value.authority, '');\n\t\tassert.strictEqual(value.path, 'path');\n\t\tassert.strictEqual(value.query, '');\n\t\tassert.strictEqual(value.fragment, '');\n\n\t\tvalue = URI.parse('foo-bar:path');\n\t\tassert.strictEqual(value.scheme, 'foo-bar');\n\t\tassert.strictEqual(value.authority, '');\n\t\tassert.strictEqual(value.path, 'path');\n\t\tassert.strictEqual(value.query, '');\n\t\tassert.strictEqual(value.fragment, '');\n\n\t\tvalue = URI.parse('foo.bar:path');\n\t\tassert.strictEqual(value.scheme, 'foo.bar');\n\t\tassert.strictEqual(value.authority, '');\n\t\tassert.strictEqual(value.path, 'path');\n\t\tassert.strictEqual(value.query, '');\n\t\tassert.strictEqual(value.fragment, '');\n\t});\n\n\ttest('parse, disallow //path when no authority', () => {\n\t\tassert.throws(() => URI.parse('file:////shares/files/p.cs'));\n\t});\n\n\ttest('URI#file, win-speciale', () => {\n\t\tif (isWindows) {\n\t\t\tlet value = URI.file('c:\\\\test\\\\drive');\n\t\t\tassert.strictEqual(value.path, '/c:/test/drive');\n\t\t\tassert.strictEqual(value.toString(), 'file:///c%3A/test/drive');\n\n\t\t\tvalue = URI.file('\\\\\\\\sh\u00E4res\\\\path\\\\c#\\\\plugin.json');\n\t\t\tassert.strictEqual(value.scheme, 'file');\n\t\t\tassert.strictEqual(value.authority, 'sh\u00E4res');\n\t\t\tassert.strictEqual(value.path, '/path/c#/plugin.json');\n\t\t\tassert.strictEqual(value.fragment, '');\n\t\t\tassert.strictEqual(value.query, '');\n\t\t\tassert.strictEqual(value.toString(), 'file://sh%C3%A4res/path/c%23/plugin.json');\n\n\t\t\tvalue = URI.file('\\\\\\\\localhost\\\\c$\\\\GitDevelopment\\\\express');\n\t\t\tassert.strictEqual(value.scheme, 'file');\n\t\t\tassert.strictEqual(value.path, '/c$/GitDevelopment/express');\n\t\t\tassert.strictEqual(value.fsPath, '\\\\\\\\localhost\\\\c$\\\\GitDevelopment\\\\express');\n\t\t\tassert.strictEqual(value.query, '');\n\t\t\tassert.strictEqual(value.fragment, '');\n\t\t\tassert.strictEqual(value.toString(), 'file://localhost/c%24/GitDevelopment/express');\n\n\t\t\tvalue = URI.file('c:\\\\test with %\\\\path');\n\t\t\tassert.strictEqual(value.path, '/c:/test with %/path');\n\t\t\tassert.strictEqual(value.toString(), 'file:///c%3A/test%20with%20%25/path');\n\n\t\t\tvalue = URI.file('c:\\\\test with %25\\\\path');\n\t\t\tassert.strictEqual(value.path, '/c:/test with %25/path');\n\t\t\tassert.strictEqual(value.toString(), 'file:///c%3A/test%20with%20%2525/path');\n\n\t\t\tvalue = URI.file('c:\\\\test with %25\\\\c#code');\n\t\t\tassert.strictEqual(value.path, '/c:/test with %25/c#code');\n\t\t\tassert.strictEqual(value.toString(), 'file:///c%3A/test%20with%20%2525/c%23code');\n\n\t\t\tvalue = URI.file('\\\\\\\\shares');\n\t\t\tassert.strictEqual(value.scheme, 'file');\n\t\t\tassert.strictEqual(value.authority, 'shares');\n\t\t\tassert.strictEqual(value.path, '/'); // slash is always there\n\n\t\t\tvalue = URI.file('\\\\\\\\shares\\\\');\n\t\t\tassert.strictEqual(value.scheme, 'file');\n\t\t\tassert.strictEqual(value.authority, 'shares');\n\t\t\tassert.strictEqual(value.path, '/');\n\t\t}\n\t});\n\n\ttest('VSCode URI module\\'s driveLetterPath regex is incorrect, #32961', function () {\n\t\tconst uri = URI.parse('file:///_:/path');\n\t\tassert.strictEqual(uri.fsPath, isWindows ? '\\\\_:\\\\path' : '/_:/path');\n\t});\n\n\ttest('URI#file, no path-is-uri check', () => {\n\n\t\t// we don't complain here\n\t\tconst value = URI.file('file://path/to/file');\n\t\tassert.strictEqual(value.scheme, 'file');\n\t\tassert.strictEqual(value.authority, '');\n\t\tassert.strictEqual(value.path, '/file://path/to/file');\n\t});\n\n\ttest('URI#file, always slash', () => {\n\n\t\tlet value = URI.file('a.file');\n\t\tassert.strictEqual(value.scheme, 'file');\n\t\tassert.strictEqual(value.authority, '');\n\t\tassert.strictEqual(value.path, '/a.file');\n\t\tassert.strictEqual(value.toString(), 'file:///a.file');\n\n\t\tvalue = URI.parse(value.toString());\n\t\tassert.strictEqual(value.scheme, 'file');\n\t\tassert.strictEqual(value.authority, '');\n\t\tassert.strictEqual(value.path, '/a.file');\n\t\tassert.strictEqual(value.toString(), 'file:///a.file');\n\t});\n\n\ttest('URI.toString, only scheme and query', () => {\n\t\tconst value = URI.parse('stuff:?q\u00FCery');\n\t\tassert.strictEqual(value.toString(), 'stuff:?q%C3%BCery');\n\t});\n\n\ttest('URI#toString, upper-case percent espaces', () => {\n\t\tconst value = URI.parse('file://sh%c3%a4res/path');\n\t\tassert.strictEqual(value.toString(), 'file://sh%C3%A4res/path');\n\t});\n\n\ttest('URI#toString, lower-case windows drive letter', () => {\n\t\tassert.strictEqual(URI.parse('untitled:c:/Users/jrieken/Code/abc.txt').toString(), 'untitled:c%3A/Users/jrieken/Code/abc.txt');\n\t\tassert.strictEqual(URI.parse('untitled:C:/Users/jrieken/Code/abc.txt').toString(), 'untitled:c%3A/Users/jrieken/Code/abc.txt');\n\t});\n\n\ttest('URI#toString, escape all the bits', () => {\n\n\t\tconst value = URI.file('/Users/jrieken/Code/_samples/18500/M\u00F6del + Other Th\u00EEng\u00DF/model.js');\n\t\tassert.strictEqual(value.toString(), 'file:///Users/jrieken/Code/_samples/18500/M%C3%B6del%20%2B%20Other%20Th%C3%AEng%C3%9F/model.js');\n\t});\n\n\ttest('URI#toString, don\\'t encode port', () => {\n\t\tlet value = URI.parse('http://localhost:8080/far');\n\t\tassert.strictEqual(value.toString(), 'http://localhost:8080/far');\n\n\t\tvalue = URI.from({ scheme: 'http', authority: 'l\u00F6calhost:8080', path: '/far', query: undefined, fragment: undefined });\n\t\tassert.strictEqual(value.toString(), 'http://l%C3%B6calhost:8080/far');\n\t});\n\n\ttest('URI#toString, user information in authority', () => {\n\t\tlet value = URI.parse('http://foo:bar@localhost/far');\n\t\tassert.strictEqual(value.toString(), 'http://foo:bar@localhost/far');\n\n\t\tvalue = URI.parse('http://foo@localhost/far');\n\t\tassert.strictEqual(value.toString(), 'http://foo@localhost/far');\n\n\t\tvalue = URI.parse('http://foo:bAr@localhost:8080/far');\n\t\tassert.strictEqual(value.toString(), 'http://foo:bAr@localhost:8080/far');\n\n\t\tvalue = URI.parse('http://foo@localhost:8080/far');\n\t\tassert.strictEqual(value.toString(), 'http://foo@localhost:8080/far');\n\n\t\tvalue = URI.from({ scheme: 'http', authority: 'f\u00F6\u00F6:b\u00F6r@l\u00F6calhost:8080', path: '/far', query: undefined, fragment: undefined });\n\t\tassert.strictEqual(value.toString(), 'http://f%C3%B6%C3%B6:b%C3%B6r@l%C3%B6calhost:8080/far');\n\t});\n\n\ttest('correctFileUriToFilePath2', () => {\n\n\t\tconst test = (input: string, expected: string) => {\n\t\t\tconst value = URI.parse(input);\n\t\t\tassert.strictEqual(value.fsPath, expected, 'Result for ' + input);\n\t\t\tconst value2 = URI.file(value.fsPath);\n\t\t\tassert.strictEqual(value2.fsPath, expected, 'Result for ' + input);\n\t\t\tassert.strictEqual(value.toString(), value2.toString());\n\t\t};\n\n\t\ttest('file:///c:/alex.txt', isWindows ? 'c:\\\\alex.txt' : 'c:/alex.txt');\n\t\ttest('file:///c:/Source/Z%C3%BCrich%20or%20Zurich%20(%CB%88zj%CA%8A%C9%99r%C9%AAk,/Code/resources/app/plugins', isWindows ? 'c:\\\\Source\\\\Z\u00FCrich or Zurich (\u02C8zj\u028A\u0259r\u026Ak,\\\\Code\\\\resources\\\\app\\\\plugins' : 'c:/Source/Z\u00FCrich or Zurich (\u02C8zj\u028A\u0259r\u026Ak,/Code/resources/app/plugins');\n\t\ttest('file://monacotools/folder/isi.txt', isWindows ? '\\\\\\\\monacotools\\\\folder\\\\isi.txt' : '//monacotools/folder/isi.txt');\n\t\ttest('file://monacotools1/certificates/SSL/', isWindows ? '\\\\\\\\monacotools1\\\\certificates\\\\SSL\\\\' : '//monacotools1/certificates/SSL/');\n\t});\n\n\ttest('URI - http, query & toString', function () {\n\n\t\tlet uri = URI.parse('https://go.microsoft.com/fwlink/?LinkId=518008');\n\t\tassert.strictEqual(uri.query, 'LinkId=518008');\n\t\tassert.strictEqual(uri.toString(true), 'https://go.microsoft.com/fwlink/?LinkId=518008');\n\t\tassert.strictEqual(uri.toString(), 'https://go.microsoft.com/fwlink/?LinkId%3D518008');\n\n\t\tlet uri2 = URI.parse(uri.toString());\n\t\tassert.strictEqual(uri2.query, 'LinkId=518008');\n\t\tassert.strictEqual(uri2.query, uri.query);\n\n\t\turi = URI.parse('https://go.microsoft.com/fwlink/?LinkId=518008&fo\u00F6&k\u00E9\u00A5=\u00FC\u00FC');\n\t\tassert.strictEqual(uri.query, 'LinkId=518008&fo\u00F6&k\u00E9\u00A5=\u00FC\u00FC');\n\t\tassert.strictEqual(uri.toString(true), 'https://go.microsoft.com/fwlink/?LinkId=518008&fo\u00F6&k\u00E9\u00A5=\u00FC\u00FC');\n\t\tassert.strictEqual(uri.toString(), 'https://go.microsoft.com/fwlink/?LinkId%3D518008%26fo%C3%B6%26k%C3%A9%C2%A5%3D%C3%BC%C3%BC');\n\n\t\turi2 = URI.parse(uri.toString());\n\t\tassert.strictEqual(uri2.query, 'LinkId=518008&fo\u00F6&k\u00E9\u00A5=\u00FC\u00FC');\n\t\tassert.strictEqual(uri2.query, uri.query);\n\n\t\t// #24849\n\t\turi = URI.parse('https://twitter.com/search?src=typd&q=%23tag');\n\t\tassert.strictEqual(uri.toString(true), 'https://twitter.com/search?src=typd&q=%23tag');\n\t});\n\n\n\ttest('class URI cannot represent relative file paths #34449', function () {\n\n\t\tlet path = '/foo/bar';\n\t\tassert.strictEqual(URI.file(path).path, path);\n\t\tpath = 'foo/bar';\n\t\tassert.strictEqual(URI.file(path).path, '/foo/bar');\n\t\tpath = './foo/bar';\n\t\tassert.strictEqual(URI.file(path).path, '/./foo/bar'); // missing normalization\n\n\t\tconst fileUri1 = URI.parse(`file:foo/bar`);\n\t\tassert.strictEqual(fileUri1.path, '/foo/bar');\n\t\tassert.strictEqual(fileUri1.authority, '');\n\t\tconst uri = fileUri1.toString();\n\t\tassert.strictEqual(uri, 'file:///foo/bar');\n\t\tconst fileUri2 = URI.parse(uri);\n\t\tassert.strictEqual(fileUri2.path, '/foo/bar');\n\t\tassert.strictEqual(fileUri2.authority, '');\n\t});\n\n\ttest('Ctrl click to follow hash query param url gets urlencoded #49628', function () {\n\t\tlet input = 'http://localhost:3000/#/foo?bar=baz';\n\t\tlet uri = URI.parse(input);\n\t\tassert.strictEqual(uri.toString(true), input);\n\n\t\tinput = 'http://localhost:3000/foo?bar=baz';\n\t\turi = URI.parse(input);\n\t\tassert.strictEqual(uri.toString(true), input);\n\t});\n\n\ttest('Unable to open \\'%A0.txt\\': URI malformed #76506', function () {\n\n\t\tlet uri = URI.file('/foo/%A0.txt');\n\t\tlet uri2 = URI.parse(uri.toString());\n\t\tassert.strictEqual(uri.scheme, uri2.scheme);\n\t\tassert.strictEqual(uri.path, uri2.path);\n\n\t\turi = URI.file('/foo/%2e.txt');\n\t\turi2 = URI.parse(uri.toString());\n\t\tassert.strictEqual(uri.scheme, uri2.scheme);\n\t\tassert.strictEqual(uri.path, uri2.path);\n\t});\n\n\ttest('Bug in URI.isUri() that fails `thing` type comparison #114971', function () {\n\t\tconst uri = URI.file('/foo/bazz.txt');\n\t\tassert.strictEqual(URI.isUri(uri), true);\n\t\tassert.strictEqual(URI.isUri(uri.toJSON()), false);\n\n\t\t// fsPath -> getter\n\t\tassert.strictEqual(URI.isUri({\n\t\t\tscheme: 'file',\n\t\t\tauthority: '',\n\t\t\tpath: '/foo/bazz.txt',\n\t\t\tget fsPath() { return '/foo/bazz.txt'; },\n\t\t\tquery: '',\n\t\t\tfragment: '',\n\t\t\twith() { return this; },\n\t\t\ttoString() { return ''; }\n\t\t}), true);\n\n\t\t// fsPath -> property\n\t\tassert.strictEqual(URI.isUri({\n\t\t\tscheme: 'file',\n\t\t\tauthority: '',\n\t\t\tpath: '/foo/bazz.txt',\n\t\t\tfsPath: '/foo/bazz.txt',\n\t\t\tquery: '',\n\t\t\tfragment: '',\n\t\t\twith() { return this; },\n\t\t\ttoString() { return ''; }\n\t\t}), true);\n\t});\n\n\ttest('isUriComponents', function () {\n\n\t\tassert.ok(isUriComponents(URI.file('a')));\n\t\tassert.ok(isUriComponents(URI.file('a').toJSON()));\n\t\tassert.ok(isUriComponents(URI.file('')));\n\t\tassert.ok(isUriComponents(URI.file('').toJSON()));\n\n\t\tassert.strictEqual(isUriComponents(1), false);\n\t\tassert.strictEqual(isUriComponents(true), false);\n\t\tassert.strictEqual(isUriComponents(\"true\"), false);\n\t\tassert.strictEqual(isUriComponents({}), false);\n\t\tassert.strictEqual(isUriComponents({ scheme: '' }), true); // valid components but INVALID uri\n\t\tassert.strictEqual(isUriComponents({ scheme: 'fo' }), true);\n\t\tassert.strictEqual(isUriComponents({ scheme: 'fo', path: '/p' }), true);\n\t\tassert.strictEqual(isUriComponents({ path: '/p' }), false);\n\t});\n\n\ttest('from, from(strict), revive', function () {\n\n\t\tassert.throws(() => URI.from({ scheme: '' }, true));\n\t\tassert.strictEqual(URI.from({ scheme: '' }).scheme, 'file');\n\t\tassert.strictEqual(URI.revive({ scheme: '' }).scheme, '');\n\t});\n\n\ttest('Unable to open \\'%A0.txt\\': URI malformed #76506, part 2', function () {\n\t\tassert.strictEqual(URI.parse('file://some/%.txt').toString(), 'file://some/%25.txt');\n\t\tassert.strictEqual(URI.parse('file://some/%A0.txt').toString(), 'file://some/%25A0.txt');\n\t});\n\n\ttest.skip('Links in markdown are broken if url contains encoded parameters #79474', function () {\n\t\tconst strIn = 'https://myhost.com/Redirect?url=http%3A%2F%2Fwww.bing.com%3Fsearch%3Dtom';\n\t\tconst uri1 = URI.parse(strIn);\n\t\tconst strOut = uri1.toString();\n\t\tconst uri2 = URI.parse(strOut);\n\n\t\tassert.strictEqual(uri1.scheme, uri2.scheme);\n\t\tassert.strictEqual(uri1.authority, uri2.authority);\n\t\tassert.strictEqual(uri1.path, uri2.path);\n\t\tassert.strictEqual(uri1.query, uri2.query);\n\t\tassert.strictEqual(uri1.fragment, uri2.fragment);\n\t\tassert.strictEqual(strIn, strOut); // fails here!!\n\t});\n\n\ttest.skip('Uri#parse can break path-component #45515', function () {\n\t\tconst strIn = 'https://firebasestorage.googleapis.com/v0/b/brewlangerie.appspot.com/o/products%2FzVNZkudXJyq8bPGTXUxx%2FBetterave-Sesame.jpg?alt=media&token=0b2310c4-3ea6-4207-bbde-9c3710ba0437';\n\t\tconst uri1 = URI.parse(strIn);\n\t\tconst strOut = uri1.toString();\n\t\tconst uri2 = URI.parse(strOut);\n\n\t\tassert.strictEqual(uri1.scheme, uri2.scheme);\n\t\tassert.strictEqual(uri1.authority, uri2.authority);\n\t\tassert.strictEqual(uri1.path, uri2.path);\n\t\tassert.strictEqual(uri1.query, uri2.query);\n\t\tassert.strictEqual(uri1.fragment, uri2.fragment);\n\t\tassert.strictEqual(strIn, strOut); // fails here!!\n\t});\n\n\ttest('URI - (de)serialize', function () {\n\n\t\tconst values = [\n\t\t\tURI.parse('http://localhost:8080/far'),\n\t\t\tURI.file('c:\\\\test with %25\\\\c#code'),\n\t\t\tURI.file('\\\\\\\\sh\u00E4res\\\\path\\\\c#\\\\plugin.json'),\n\t\t\tURI.parse('http://api/files/test.me?t=1234'),\n\t\t\tURI.parse('http://api/files/test.me?t=1234#fff'),\n\t\t\tURI.parse('http://api/files/test.me#fff'),\n\t\t];\n\n\t\t// console.profile();\n\t\t// let c = 100000;\n\t\t// while (c-- > 0) {\n\t\tfor (const value of values) {\n\t\t\tconst data = value.toJSON() as UriComponents;\n\t\t\tconst clone = URI.revive(data);\n\n\t\t\tassert.strictEqual(clone.scheme, value.scheme);\n\t\t\tassert.strictEqual(clone.authority, value.authority);\n\t\t\tassert.strictEqual(clone.path, value.path);\n\t\t\tassert.strictEqual(clone.query, value.query);\n\t\t\tassert.strictEqual(clone.fragment, value.fragment);\n\t\t\tassert.strictEqual(clone.fsPath, value.fsPath);\n\t\t\tassert.strictEqual(clone.toString(), value.toString());\n\t\t}\n\t\t// }\n\t\t// console.profileEnd();\n\t});\n\tfunction assertJoined(base: string, fragment: string, expected: string, checkWithUrl: boolean = true) {\n\t\tconst baseUri = URI.parse(base);\n\t\tconst newUri = URI.joinPath(baseUri, fragment);\n\t\tconst actual = newUri.toString(true);\n\t\tassert.strictEqual(actual, expected);\n\n\t\tif (checkWithUrl) {\n\t\t\tconst actualUrl = new URL(fragment, base).href;\n\t\t\tassert.strictEqual(actualUrl, expected, 'DIFFERENT from URL');\n\t\t}\n\t}\n\ttest('URI#joinPath', function () {\n\n\t\tassertJoined(('file:///foo/'), '../../bazz', 'file:///bazz');\n\t\tassertJoined(('file:///foo'), '../../bazz', 'file:///bazz');\n\t\tassertJoined(('file:///foo'), '../../bazz', 'file:///bazz');\n\t\tassertJoined(('file:///foo/bar/'), './bazz', 'file:///foo/bar/bazz');\n\t\tassertJoined(('file:///foo/bar'), './bazz', 'file:///foo/bar/bazz', false);\n\t\tassertJoined(('file:///foo/bar'), 'bazz', 'file:///foo/bar/bazz', false);\n\n\t\t// \"auto-path\" scheme\n\t\tassertJoined(('file:'), 'bazz', 'file:///bazz');\n\t\tassertJoined(('http://domain'), 'bazz', 'http://domain/bazz');\n\t\tassertJoined(('https://domain'), 'bazz', 'https://domain/bazz');\n\t\tassertJoined(('http:'), 'bazz', 'http:/bazz', false);\n\t\tassertJoined(('https:'), 'bazz', 'https:/bazz', false);\n\n\t\t// no \"auto-path\" scheme with and w/o paths\n\t\tassertJoined(('foo:/'), 'bazz', 'foo:/bazz');\n\t\tassertJoined(('foo://bar/'), 'bazz', 'foo://bar/bazz');\n\n\t\t// no \"auto-path\" + no path -> error\n\t\tassert.throws(() => assertJoined(('foo:'), 'bazz', ''));\n\t\tassert.throws(() => new URL('bazz', 'foo:'));\n\t\tassert.throws(() => assertJoined(('foo://bar'), 'bazz', ''));\n\t\t// assert.throws(() => new URL('bazz', 'foo://bar')); Edge, Chrome => THROW, Firefox, Safari => foo://bar/bazz\n\t});\n\n\ttest('URI#joinPath (posix)', function () {\n\t\tif (isWindows) {\n\t\t\tthis.skip();\n\t\t}\n\t\tassertJoined(('file:///c:/foo/'), '../../bazz', 'file:///bazz', false);\n\t\tassertJoined(('file://server/share/c:/'), '../../bazz', 'file://server/bazz', false);\n\t\tassertJoined(('file://server/share/c:'), '../../bazz', 'file://server/bazz', false);\n\n\t\tassertJoined(('file://ser/foo/'), '../../bazz', 'file://ser/bazz', false); // Firefox -> Different, Edge, Chrome, Safar -> OK\n\t\tassertJoined(('file://ser/foo'), '../../bazz', 'file://ser/bazz', false); // Firefox -> Different, Edge, Chrome, Safar -> OK\n\t});\n\n\ttest('URI#joinPath (windows)', function () {\n\t\tif (!isWindows) {\n\t\t\tthis.skip();\n\t\t}\n\t\tassertJoined(('file:///c:/foo/'), '../../bazz', 'file:///c:/bazz', false);\n\t\tassertJoined(('file://server/share/c:/'), '../../bazz', 'file://server/share/bazz', false);\n\t\tassertJoined(('file://server/share/c:'), '../../bazz', 'file://server/share/bazz', false);\n\n\t\tassertJoined(('file://ser/foo/'), '../../bazz', 'file://ser/foo/bazz', false);\n\t\tassertJoined(('file://ser/foo'), '../../bazz', 'file://ser/foo/bazz', false);\n\n\t\t//https://github.com/microsoft/vscode/issues/93831\n\t\tassertJoined('file:///c:/foo/bar', './other/foo.img', 'file:///c:/foo/bar/other/foo.img', false);\n\t});\n\n\ttest('vscode-uri: URI.toString() wrongly encode IPv6 literals #154048', function () {\n\t\tassert.strictEqual(URI.parse('http://[FEDC:BA98:7654:3210:FEDC:BA98:7654:3210]:80/index.html').toString(), 'http://[fedc:ba98:7654:3210:fedc:ba98:7654:3210]:80/index.html');\n\n\t\tassert.strictEqual(URI.parse('http://user@[FEDC:BA98:7654:3210:FEDC:BA98:7654:3210]:80/index.html').toString(), 'http://user@[fedc:ba98:7654:3210:fedc:ba98:7654:3210]:80/index.html');\n\t\tassert.strictEqual(URI.parse('http://us[er@[FEDC:BA98:7654:3210:FEDC:BA98:7654:3210]:80/index.html').toString(), 'http://us%5Ber@[fedc:ba98:7654:3210:fedc:ba98:7654:3210]:80/index.html');\n\t});\n});\n"],
  "mappings": "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",
  "names": ["test"]
}
