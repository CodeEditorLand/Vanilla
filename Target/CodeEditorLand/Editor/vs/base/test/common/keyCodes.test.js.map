{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/test/common/keyCodes.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { EVENT_KEY_CODE_MAP, IMMUTABLE_CODE_TO_KEY_CODE, IMMUTABLE_KEY_CODE_TO_CODE, KeyChord, KeyCode, KeyCodeUtils, KeyMod, NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE, ScanCode, ScanCodeUtils } from '../../common/keyCodes.js';\nimport { decodeKeybinding, KeyCodeChord, Keybinding } from '../../common/keybindings.js';\nimport { OperatingSystem } from '../../common/platform.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from './utils.js';\n\nsuite('keyCodes', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\tfunction testBinaryEncoding(expected: Keybinding | null, k: number, OS: OperatingSystem): void {\n\t\tassert.deepStrictEqual(decodeKeybinding(k, OS), expected);\n\t}\n\n\ttest('mapping for Minus', () => {\n\t\t// [147, 83, 0, ScanCode.Minus, 'Minus', KeyCode.US_MINUS, '-', 189, 'VK_OEM_MINUS', '-', 'OEM_MINUS'],\n\t\tassert.strictEqual(EVENT_KEY_CODE_MAP[189], KeyCode.Minus);\n\t\tassert.strictEqual(NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE['VK_OEM_MINUS'], KeyCode.Minus);\n\t\tassert.strictEqual(ScanCodeUtils.lowerCaseToEnum('minus'), ScanCode.Minus);\n\t\tassert.strictEqual(ScanCodeUtils.toEnum('Minus'), ScanCode.Minus);\n\t\tassert.strictEqual(ScanCodeUtils.toString(ScanCode.Minus), 'Minus');\n\t\tassert.strictEqual(IMMUTABLE_CODE_TO_KEY_CODE[ScanCode.Minus], KeyCode.DependsOnKbLayout);\n\t\tassert.strictEqual(IMMUTABLE_KEY_CODE_TO_CODE[KeyCode.Minus], ScanCode.DependsOnKbLayout);\n\t\tassert.strictEqual(KeyCodeUtils.toString(KeyCode.Minus), '-');\n\t\tassert.strictEqual(KeyCodeUtils.fromString('-'), KeyCode.Minus);\n\t\tassert.strictEqual(KeyCodeUtils.toUserSettingsUS(KeyCode.Minus), '-');\n\t\tassert.strictEqual(KeyCodeUtils.toUserSettingsGeneral(KeyCode.Minus), 'OEM_MINUS');\n\t\tassert.strictEqual(KeyCodeUtils.fromUserSettings('-'), KeyCode.Minus);\n\t\tassert.strictEqual(KeyCodeUtils.fromUserSettings('OEM_MINUS'), KeyCode.Minus);\n\t\tassert.strictEqual(KeyCodeUtils.fromUserSettings('oem_minus'), KeyCode.Minus);\n\t});\n\n\ttest('mapping for Space', () => {\n\t\t// [21, 10, 1, ScanCode.Space, 'Space', KeyCode.Space, 'Space', 32, 'VK_SPACE', empty, empty],\n\t\tassert.strictEqual(EVENT_KEY_CODE_MAP[32], KeyCode.Space);\n\t\tassert.strictEqual(NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE['VK_SPACE'], KeyCode.Space);\n\t\tassert.strictEqual(ScanCodeUtils.lowerCaseToEnum('space'), ScanCode.Space);\n\t\tassert.strictEqual(ScanCodeUtils.toEnum('Space'), ScanCode.Space);\n\t\tassert.strictEqual(ScanCodeUtils.toString(ScanCode.Space), 'Space');\n\t\tassert.strictEqual(IMMUTABLE_CODE_TO_KEY_CODE[ScanCode.Space], KeyCode.Space);\n\t\tassert.strictEqual(IMMUTABLE_KEY_CODE_TO_CODE[KeyCode.Space], ScanCode.Space);\n\t\tassert.strictEqual(KeyCodeUtils.toString(KeyCode.Space), 'Space');\n\t\tassert.strictEqual(KeyCodeUtils.fromString('Space'), KeyCode.Space);\n\t\tassert.strictEqual(KeyCodeUtils.toUserSettingsUS(KeyCode.Space), 'Space');\n\t\tassert.strictEqual(KeyCodeUtils.toUserSettingsGeneral(KeyCode.Space), 'Space');\n\t\tassert.strictEqual(KeyCodeUtils.fromUserSettings('Space'), KeyCode.Space);\n\t\tassert.strictEqual(KeyCodeUtils.fromUserSettings('space'), KeyCode.Space);\n\t});\n\n\ttest('MAC binary encoding', () => {\n\n\t\tfunction test(expected: Keybinding | null, k: number): void {\n\t\t\ttestBinaryEncoding(expected, k, OperatingSystem.Macintosh);\n\t\t}\n\n\t\ttest(null, 0);\n\t\ttest(new KeyCodeChord(false, false, false, false, KeyCode.Enter).toKeybinding(), KeyCode.Enter);\n\t\ttest(new KeyCodeChord(true, false, false, false, KeyCode.Enter).toKeybinding(), KeyMod.WinCtrl | KeyCode.Enter);\n\t\ttest(new KeyCodeChord(false, false, true, false, KeyCode.Enter).toKeybinding(), KeyMod.Alt | KeyCode.Enter);\n\t\ttest(new KeyCodeChord(true, false, true, false, KeyCode.Enter).toKeybinding(), KeyMod.Alt | KeyMod.WinCtrl | KeyCode.Enter);\n\t\ttest(new KeyCodeChord(false, true, false, false, KeyCode.Enter).toKeybinding(), KeyMod.Shift | KeyCode.Enter);\n\t\ttest(new KeyCodeChord(true, true, false, false, KeyCode.Enter).toKeybinding(), KeyMod.Shift | KeyMod.WinCtrl | KeyCode.Enter);\n\t\ttest(new KeyCodeChord(false, true, true, false, KeyCode.Enter).toKeybinding(), KeyMod.Shift | KeyMod.Alt | KeyCode.Enter);\n\t\ttest(new KeyCodeChord(true, true, true, false, KeyCode.Enter).toKeybinding(), KeyMod.Shift | KeyMod.Alt | KeyMod.WinCtrl | KeyCode.Enter);\n\t\ttest(new KeyCodeChord(false, false, false, true, KeyCode.Enter).toKeybinding(), KeyMod.CtrlCmd | KeyCode.Enter);\n\t\ttest(new KeyCodeChord(true, false, false, true, KeyCode.Enter).toKeybinding(), KeyMod.CtrlCmd | KeyMod.WinCtrl | KeyCode.Enter);\n\t\ttest(new KeyCodeChord(false, false, true, true, KeyCode.Enter).toKeybinding(), KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.Enter);\n\t\ttest(new KeyCodeChord(true, false, true, true, KeyCode.Enter).toKeybinding(), KeyMod.CtrlCmd | KeyMod.Alt | KeyMod.WinCtrl | KeyCode.Enter);\n\t\ttest(new KeyCodeChord(false, true, false, true, KeyCode.Enter).toKeybinding(), KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Enter);\n\t\ttest(new KeyCodeChord(true, true, false, true, KeyCode.Enter).toKeybinding(), KeyMod.CtrlCmd | KeyMod.Shift | KeyMod.WinCtrl | KeyCode.Enter);\n\t\ttest(new KeyCodeChord(false, true, true, true, KeyCode.Enter).toKeybinding(), KeyMod.CtrlCmd | KeyMod.Shift | KeyMod.Alt | KeyCode.Enter);\n\t\ttest(new KeyCodeChord(true, true, true, true, KeyCode.Enter).toKeybinding(), KeyMod.CtrlCmd | KeyMod.Shift | KeyMod.Alt | KeyMod.WinCtrl | KeyCode.Enter);\n\n\t\ttest(\n\t\t\tnew Keybinding([\n\t\t\t\tnew KeyCodeChord(false, false, false, false, KeyCode.Enter),\n\t\t\t\tnew KeyCodeChord(false, false, false, false, KeyCode.Tab)\n\t\t\t]),\n\t\t\tKeyChord(KeyCode.Enter, KeyCode.Tab)\n\t\t);\n\t\ttest(\n\t\t\tnew Keybinding([\n\t\t\t\tnew KeyCodeChord(false, false, false, true, KeyCode.KeyY),\n\t\t\t\tnew KeyCodeChord(false, false, false, false, KeyCode.KeyZ)\n\t\t\t]),\n\t\t\tKeyChord(KeyMod.CtrlCmd | KeyCode.KeyY, KeyCode.KeyZ)\n\t\t);\n\t});\n\n\ttest('WINDOWS & LINUX binary encoding', () => {\n\n\t\t[OperatingSystem.Linux, OperatingSystem.Windows].forEach((OS) => {\n\n\t\t\tfunction test(expected: Keybinding | null, k: number): void {\n\t\t\t\ttestBinaryEncoding(expected, k, OS);\n\t\t\t}\n\n\t\t\ttest(null, 0);\n\t\t\ttest(new KeyCodeChord(false, false, false, false, KeyCode.Enter).toKeybinding(), KeyCode.Enter);\n\t\t\ttest(new KeyCodeChord(false, false, false, true, KeyCode.Enter).toKeybinding(), KeyMod.WinCtrl | KeyCode.Enter);\n\t\t\ttest(new KeyCodeChord(false, false, true, false, KeyCode.Enter).toKeybinding(), KeyMod.Alt | KeyCode.Enter);\n\t\t\ttest(new KeyCodeChord(false, false, true, true, KeyCode.Enter).toKeybinding(), KeyMod.Alt | KeyMod.WinCtrl | KeyCode.Enter);\n\t\t\ttest(new KeyCodeChord(false, true, false, false, KeyCode.Enter).toKeybinding(), KeyMod.Shift | KeyCode.Enter);\n\t\t\ttest(new KeyCodeChord(false, true, false, true, KeyCode.Enter).toKeybinding(), KeyMod.Shift | KeyMod.WinCtrl | KeyCode.Enter);\n\t\t\ttest(new KeyCodeChord(false, true, true, false, KeyCode.Enter).toKeybinding(), KeyMod.Shift | KeyMod.Alt | KeyCode.Enter);\n\t\t\ttest(new KeyCodeChord(false, true, true, true, KeyCode.Enter).toKeybinding(), KeyMod.Shift | KeyMod.Alt | KeyMod.WinCtrl | KeyCode.Enter);\n\t\t\ttest(new KeyCodeChord(true, false, false, false, KeyCode.Enter).toKeybinding(), KeyMod.CtrlCmd | KeyCode.Enter);\n\t\t\ttest(new KeyCodeChord(true, false, false, true, KeyCode.Enter).toKeybinding(), KeyMod.CtrlCmd | KeyMod.WinCtrl | KeyCode.Enter);\n\t\t\ttest(new KeyCodeChord(true, false, true, false, KeyCode.Enter).toKeybinding(), KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.Enter);\n\t\t\ttest(new KeyCodeChord(true, false, true, true, KeyCode.Enter).toKeybinding(), KeyMod.CtrlCmd | KeyMod.Alt | KeyMod.WinCtrl | KeyCode.Enter);\n\t\t\ttest(new KeyCodeChord(true, true, false, false, KeyCode.Enter).toKeybinding(), KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Enter);\n\t\t\ttest(new KeyCodeChord(true, true, false, true, KeyCode.Enter).toKeybinding(), KeyMod.CtrlCmd | KeyMod.Shift | KeyMod.WinCtrl | KeyCode.Enter);\n\t\t\ttest(new KeyCodeChord(true, true, true, false, KeyCode.Enter).toKeybinding(), KeyMod.CtrlCmd | KeyMod.Shift | KeyMod.Alt | KeyCode.Enter);\n\t\t\ttest(new KeyCodeChord(true, true, true, true, KeyCode.Enter).toKeybinding(), KeyMod.CtrlCmd | KeyMod.Shift | KeyMod.Alt | KeyMod.WinCtrl | KeyCode.Enter);\n\n\t\t\ttest(\n\t\t\t\tnew Keybinding([\n\t\t\t\t\tnew KeyCodeChord(false, false, false, false, KeyCode.Enter),\n\t\t\t\t\tnew KeyCodeChord(false, false, false, false, KeyCode.Tab)\n\t\t\t\t]),\n\t\t\t\tKeyChord(KeyCode.Enter, KeyCode.Tab)\n\t\t\t);\n\t\t\ttest(\n\t\t\t\tnew Keybinding([\n\t\t\t\t\tnew KeyCodeChord(true, false, false, false, KeyCode.KeyY),\n\t\t\t\t\tnew KeyCodeChord(false, false, false, false, KeyCode.KeyZ)\n\t\t\t\t]),\n\t\t\t\tKeyChord(KeyMod.CtrlCmd | KeyCode.KeyY, KeyCode.KeyZ)\n\t\t\t);\n\n\t\t});\n\t});\n});\n"],
  "mappings": "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",
  "names": ["test"]
}
