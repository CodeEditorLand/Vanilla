{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/test/common/resourceTree.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { ResourceTree } from '../../common/resourceTree.js';\nimport { URI } from '../../common/uri.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from './utils.js';\n\nsuite('ResourceTree', function () {\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('ctor', function () {\n\t\tconst tree = new ResourceTree<string, null>(null);\n\t\tassert.strictEqual(tree.root.childrenCount, 0);\n\t});\n\n\ttest('simple', function () {\n\t\tconst tree = new ResourceTree<string, null>(null);\n\n\t\ttree.add(URI.file('/foo/bar.txt'), 'bar contents');\n\t\tassert.strictEqual(tree.root.childrenCount, 1);\n\n\t\tconst foo = tree.root.get('foo')!;\n\t\tassert(foo);\n\t\tassert.strictEqual(foo.childrenCount, 1);\n\n\t\tconst bar = foo.get('bar.txt')!;\n\t\tassert(bar);\n\t\tassert.strictEqual(bar.element, 'bar contents');\n\n\t\ttree.add(URI.file('/hello.txt'), 'hello contents');\n\t\tassert.strictEqual(tree.root.childrenCount, 2);\n\n\t\tlet hello = tree.root.get('hello.txt')!;\n\t\tassert(hello);\n\t\tassert.strictEqual(hello.element, 'hello contents');\n\n\t\ttree.delete(URI.file('/foo/bar.txt'));\n\t\tassert.strictEqual(tree.root.childrenCount, 1);\n\t\thello = tree.root.get('hello.txt')!;\n\t\tassert(hello);\n\t\tassert.strictEqual(hello.element, 'hello contents');\n\t});\n\n\ttest('folders with data', function () {\n\t\tconst tree = new ResourceTree<string, null>(null);\n\n\t\tassert.strictEqual(tree.root.childrenCount, 0);\n\n\t\ttree.add(URI.file('/foo'), 'foo');\n\t\tassert.strictEqual(tree.root.childrenCount, 1);\n\t\tassert.strictEqual(tree.root.get('foo')!.element, 'foo');\n\n\t\ttree.add(URI.file('/bar'), 'bar');\n\t\tassert.strictEqual(tree.root.childrenCount, 2);\n\t\tassert.strictEqual(tree.root.get('bar')!.element, 'bar');\n\n\t\ttree.add(URI.file('/foo/file.txt'), 'file');\n\t\tassert.strictEqual(tree.root.childrenCount, 2);\n\t\tassert.strictEqual(tree.root.get('foo')!.element, 'foo');\n\t\tassert.strictEqual(tree.root.get('bar')!.element, 'bar');\n\t\tassert.strictEqual(tree.root.get('foo')!.get('file.txt')!.element, 'file');\n\n\t\ttree.delete(URI.file('/foo'));\n\t\tassert.strictEqual(tree.root.childrenCount, 1);\n\t\tassert(!tree.root.get('foo'));\n\t\tassert.strictEqual(tree.root.get('bar')!.element, 'bar');\n\n\t\ttree.delete(URI.file('/bar'));\n\t\tassert.strictEqual(tree.root.childrenCount, 0);\n\t\tassert(!tree.root.get('foo'));\n\t\tassert(!tree.root.get('bar'));\n\t});\n});\n"],
  "mappings": "AAKA,OAAO,YAAY;AACnB,SAAS,oBAAoB;AAC7B,SAAS,WAAW;AACpB,SAAS,+CAA+C;AAExD,MAAM,gBAAgB,WAAY;AACjC,0CAAwC;AAExC,OAAK,QAAQ,WAAY;AACxB,UAAM,OAAO,IAAI,aAA2B,IAAI;AAChD,WAAO,YAAY,KAAK,KAAK,eAAe,CAAC;AAAA,EAC9C,CAAC;AAED,OAAK,UAAU,WAAY;AAC1B,UAAM,OAAO,IAAI,aAA2B,IAAI;AAEhD,SAAK,IAAI,IAAI,KAAK,cAAc,GAAG,cAAc;AACjD,WAAO,YAAY,KAAK,KAAK,eAAe,CAAC;AAE7C,UAAM,MAAM,KAAK,KAAK,IAAI,KAAK;AAC/B,WAAO,GAAG;AACV,WAAO,YAAY,IAAI,eAAe,CAAC;AAEvC,UAAM,MAAM,IAAI,IAAI,SAAS;AAC7B,WAAO,GAAG;AACV,WAAO,YAAY,IAAI,SAAS,cAAc;AAE9C,SAAK,IAAI,IAAI,KAAK,YAAY,GAAG,gBAAgB;AACjD,WAAO,YAAY,KAAK,KAAK,eAAe,CAAC;AAE7C,QAAI,QAAQ,KAAK,KAAK,IAAI,WAAW;AACrC,WAAO,KAAK;AACZ,WAAO,YAAY,MAAM,SAAS,gBAAgB;AAElD,SAAK,OAAO,IAAI,KAAK,cAAc,CAAC;AACpC,WAAO,YAAY,KAAK,KAAK,eAAe,CAAC;AAC7C,YAAQ,KAAK,KAAK,IAAI,WAAW;AACjC,WAAO,KAAK;AACZ,WAAO,YAAY,MAAM,SAAS,gBAAgB;AAAA,EACnD,CAAC;AAED,OAAK,qBAAqB,WAAY;AACrC,UAAM,OAAO,IAAI,aAA2B,IAAI;AAEhD,WAAO,YAAY,KAAK,KAAK,eAAe,CAAC;AAE7C,SAAK,IAAI,IAAI,KAAK,MAAM,GAAG,KAAK;AAChC,WAAO,YAAY,KAAK,KAAK,eAAe,CAAC;AAC7C,WAAO,YAAY,KAAK,KAAK,IAAI,KAAK,EAAG,SAAS,KAAK;AAEvD,SAAK,IAAI,IAAI,KAAK,MAAM,GAAG,KAAK;AAChC,WAAO,YAAY,KAAK,KAAK,eAAe,CAAC;AAC7C,WAAO,YAAY,KAAK,KAAK,IAAI,KAAK,EAAG,SAAS,KAAK;AAEvD,SAAK,IAAI,IAAI,KAAK,eAAe,GAAG,MAAM;AAC1C,WAAO,YAAY,KAAK,KAAK,eAAe,CAAC;AAC7C,WAAO,YAAY,KAAK,KAAK,IAAI,KAAK,EAAG,SAAS,KAAK;AACvD,WAAO,YAAY,KAAK,KAAK,IAAI,KAAK,EAAG,SAAS,KAAK;AACvD,WAAO,YAAY,KAAK,KAAK,IAAI,KAAK,EAAG,IAAI,UAAU,EAAG,SAAS,MAAM;AAEzE,SAAK,OAAO,IAAI,KAAK,MAAM,CAAC;AAC5B,WAAO,YAAY,KAAK,KAAK,eAAe,CAAC;AAC7C,WAAO,CAAC,KAAK,KAAK,IAAI,KAAK,CAAC;AAC5B,WAAO,YAAY,KAAK,KAAK,IAAI,KAAK,EAAG,SAAS,KAAK;AAEvD,SAAK,OAAO,IAAI,KAAK,MAAM,CAAC;AAC5B,WAAO,YAAY,KAAK,KAAK,eAAe,CAAC;AAC7C,WAAO,CAAC,KAAK,KAAK,IAAI,KAAK,CAAC;AAC5B,WAAO,CAAC,KAAK,KAAK,IAAI,KAAK,CAAC;AAAA,EAC7B,CAAC;AACF,CAAC;",
  "names": []
}
