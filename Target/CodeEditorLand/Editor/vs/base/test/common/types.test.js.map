{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/test/common/types.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport * as types from '../../common/types.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from './utils.js';\n\nsuite('Types', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('isFunction', () => {\n\t\tassert(!types.isFunction(undefined));\n\t\tassert(!types.isFunction(null));\n\t\tassert(!types.isFunction('foo'));\n\t\tassert(!types.isFunction(5));\n\t\tassert(!types.isFunction(true));\n\t\tassert(!types.isFunction([]));\n\t\tassert(!types.isFunction([1, 2, '3']));\n\t\tassert(!types.isFunction({}));\n\t\tassert(!types.isFunction({ foo: 'bar' }));\n\t\tassert(!types.isFunction(/test/));\n\t\tassert(!types.isFunction(new RegExp('')));\n\t\tassert(!types.isFunction(new Date()));\n\n\t\tassert(types.isFunction(assert));\n\t\tassert(types.isFunction(function foo() { /**/ }));\n\t});\n\n\ttest('areFunctions', () => {\n\t\tassert(!types.areFunctions());\n\t\tassert(!types.areFunctions(null));\n\t\tassert(!types.areFunctions('foo'));\n\t\tassert(!types.areFunctions(5));\n\t\tassert(!types.areFunctions(true));\n\t\tassert(!types.areFunctions([]));\n\t\tassert(!types.areFunctions([1, 2, '3']));\n\t\tassert(!types.areFunctions({}));\n\t\tassert(!types.areFunctions({ foo: 'bar' }));\n\t\tassert(!types.areFunctions(/test/));\n\t\tassert(!types.areFunctions(new RegExp('')));\n\t\tassert(!types.areFunctions(new Date()));\n\t\tassert(!types.areFunctions(assert, ''));\n\n\t\tassert(types.areFunctions(assert));\n\t\tassert(types.areFunctions(assert, assert));\n\t\tassert(types.areFunctions(function foo() { /**/ }));\n\t});\n\n\ttest('isObject', () => {\n\t\tassert(!types.isObject(undefined));\n\t\tassert(!types.isObject(null));\n\t\tassert(!types.isObject('foo'));\n\t\tassert(!types.isObject(5));\n\t\tassert(!types.isObject(true));\n\t\tassert(!types.isObject([]));\n\t\tassert(!types.isObject([1, 2, '3']));\n\t\tassert(!types.isObject(/test/));\n\t\tassert(!types.isObject(new RegExp('')));\n\t\tassert(!types.isFunction(new Date()));\n\t\tassert.strictEqual(types.isObject(assert), false);\n\t\tassert(!types.isObject(function foo() { }));\n\n\t\tassert(types.isObject({}));\n\t\tassert(types.isObject({ foo: 'bar' }));\n\t});\n\n\ttest('isEmptyObject', () => {\n\t\tassert(!types.isEmptyObject(undefined));\n\t\tassert(!types.isEmptyObject(null));\n\t\tassert(!types.isEmptyObject('foo'));\n\t\tassert(!types.isEmptyObject(5));\n\t\tassert(!types.isEmptyObject(true));\n\t\tassert(!types.isEmptyObject([]));\n\t\tassert(!types.isEmptyObject([1, 2, '3']));\n\t\tassert(!types.isEmptyObject(/test/));\n\t\tassert(!types.isEmptyObject(new RegExp('')));\n\t\tassert(!types.isEmptyObject(new Date()));\n\t\tassert.strictEqual(types.isEmptyObject(assert), false);\n\t\tassert(!types.isEmptyObject(function foo() { /**/ }));\n\t\tassert(!types.isEmptyObject({ foo: 'bar' }));\n\n\t\tassert(types.isEmptyObject({}));\n\t});\n\n\ttest('isString', () => {\n\t\tassert(!types.isString(undefined));\n\t\tassert(!types.isString(null));\n\t\tassert(!types.isString(5));\n\t\tassert(!types.isString([]));\n\t\tassert(!types.isString([1, 2, '3']));\n\t\tassert(!types.isString(true));\n\t\tassert(!types.isString({}));\n\t\tassert(!types.isString(/test/));\n\t\tassert(!types.isString(new RegExp('')));\n\t\tassert(!types.isString(new Date()));\n\t\tassert(!types.isString(assert));\n\t\tassert(!types.isString(function foo() { /**/ }));\n\t\tassert(!types.isString({ foo: 'bar' }));\n\n\t\tassert(types.isString('foo'));\n\t});\n\n\ttest('isNumber', () => {\n\t\tassert(!types.isNumber(undefined));\n\t\tassert(!types.isNumber(null));\n\t\tassert(!types.isNumber('foo'));\n\t\tassert(!types.isNumber([]));\n\t\tassert(!types.isNumber([1, 2, '3']));\n\t\tassert(!types.isNumber(true));\n\t\tassert(!types.isNumber({}));\n\t\tassert(!types.isNumber(/test/));\n\t\tassert(!types.isNumber(new RegExp('')));\n\t\tassert(!types.isNumber(new Date()));\n\t\tassert(!types.isNumber(assert));\n\t\tassert(!types.isNumber(function foo() { /**/ }));\n\t\tassert(!types.isNumber({ foo: 'bar' }));\n\t\tassert(!types.isNumber(parseInt('A', 10)));\n\n\t\tassert(types.isNumber(5));\n\t});\n\n\ttest('isUndefined', () => {\n\t\tassert(!types.isUndefined(null));\n\t\tassert(!types.isUndefined('foo'));\n\t\tassert(!types.isUndefined([]));\n\t\tassert(!types.isUndefined([1, 2, '3']));\n\t\tassert(!types.isUndefined(true));\n\t\tassert(!types.isUndefined({}));\n\t\tassert(!types.isUndefined(/test/));\n\t\tassert(!types.isUndefined(new RegExp('')));\n\t\tassert(!types.isUndefined(new Date()));\n\t\tassert(!types.isUndefined(assert));\n\t\tassert(!types.isUndefined(function foo() { /**/ }));\n\t\tassert(!types.isUndefined({ foo: 'bar' }));\n\n\t\tassert(types.isUndefined(undefined));\n\t});\n\n\ttest('isUndefinedOrNull', () => {\n\t\tassert(!types.isUndefinedOrNull('foo'));\n\t\tassert(!types.isUndefinedOrNull([]));\n\t\tassert(!types.isUndefinedOrNull([1, 2, '3']));\n\t\tassert(!types.isUndefinedOrNull(true));\n\t\tassert(!types.isUndefinedOrNull({}));\n\t\tassert(!types.isUndefinedOrNull(/test/));\n\t\tassert(!types.isUndefinedOrNull(new RegExp('')));\n\t\tassert(!types.isUndefinedOrNull(new Date()));\n\t\tassert(!types.isUndefinedOrNull(assert));\n\t\tassert(!types.isUndefinedOrNull(function foo() { /**/ }));\n\t\tassert(!types.isUndefinedOrNull({ foo: 'bar' }));\n\n\t\tassert(types.isUndefinedOrNull(undefined));\n\t\tassert(types.isUndefinedOrNull(null));\n\t});\n\n\ttest('assertIsDefined / assertAreDefined', () => {\n\t\tassert.throws(() => types.assertIsDefined(undefined));\n\t\tassert.throws(() => types.assertIsDefined(null));\n\t\tassert.throws(() => types.assertAllDefined(null, undefined));\n\t\tassert.throws(() => types.assertAllDefined(true, undefined));\n\t\tassert.throws(() => types.assertAllDefined(undefined, false));\n\n\t\tassert.strictEqual(types.assertIsDefined(true), true);\n\t\tassert.strictEqual(types.assertIsDefined(false), false);\n\t\tassert.strictEqual(types.assertIsDefined('Hello'), 'Hello');\n\t\tassert.strictEqual(types.assertIsDefined(''), '');\n\n\t\tconst res = types.assertAllDefined(1, true, 'Hello');\n\t\tassert.strictEqual(res[0], 1);\n\t\tassert.strictEqual(res[1], true);\n\t\tassert.strictEqual(res[2], 'Hello');\n\t});\n\n\ttest('validateConstraints', () => {\n\t\ttypes.validateConstraints([1, 'test', true], [Number, String, Boolean]);\n\t\ttypes.validateConstraints([1, 'test', true], ['number', 'string', 'boolean']);\n\t\ttypes.validateConstraints([console.log], [Function]);\n\t\ttypes.validateConstraints([undefined], [types.isUndefined]);\n\t\ttypes.validateConstraints([1], [types.isNumber]);\n\n\t\tclass Foo { }\n\t\ttypes.validateConstraints([new Foo()], [Foo]);\n\n\t\tfunction isFoo(f: any) { }\n\t\tassert.throws(() => types.validateConstraints([new Foo()], [isFoo]));\n\n\t\tfunction isFoo2(f: any) { return true; }\n\t\ttypes.validateConstraints([new Foo()], [isFoo2]);\n\n\t\tassert.throws(() => types.validateConstraints([1, true], [types.isNumber, types.isString]));\n\t\tassert.throws(() => types.validateConstraints(['2'], [types.isNumber]));\n\t\tassert.throws(() => types.validateConstraints([1, 'test', true], [Number, String, Number]));\n\t});\n});\n"],
  "mappings": "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",
  "names": []
}
