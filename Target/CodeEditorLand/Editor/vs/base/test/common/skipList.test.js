import o from"assert";import{binarySearch as d}from"../../common/arrays.js";import{SkipList as m}from"../../common/skipList.js";import{StopWatch as a}from"../../common/stopwatch.js";import{ensureNoDisposablesAreLeakedInTestSuite as q}from"./utils.js";suite("SkipList",function(){q();function p(e,t){o.strictEqual(e.size,t.length),o.deepStrictEqual([...e.values()],t);const r=[...e.entries()].map(l=>l[1]);o.deepStrictEqual(r,t);const s=[...e].map(l=>l[1]);o.deepStrictEqual(s,t);let u=0;e.forEach((l,n,i)=>{o.ok(i===e),o.deepStrictEqual(l,t[u++])})}function f(e,t){o.strictEqual(e.size,t.length),o.deepStrictEqual([...e.keys()],t);const r=[...e.entries()].map(l=>l[0]);o.deepStrictEqual(r,t);const s=[...e].map(l=>l[0]);o.deepStrictEqual(s,t);let u=0;e.forEach((l,n,i)=>{o.ok(i===e),o.deepStrictEqual(n,t[u++])})}test("set/get/delete",function(){const e=new m((t,r)=>t-r);o.strictEqual(e.get(3),void 0),e.set(3,1),o.strictEqual(e.get(3),1),p(e,[1]),e.set(3,3),p(e,[3]),e.set(1,1),e.set(4,4),o.strictEqual(e.get(3),3),o.strictEqual(e.get(1),1),o.strictEqual(e.get(4),4),p(e,[1,3,4]),o.strictEqual(e.delete(17),!1),o.strictEqual(e.delete(1),!0),o.strictEqual(e.get(1),void 0),o.strictEqual(e.get(3),3),o.strictEqual(e.get(4),4),p(e,[3,4])}),test("Figure 3",function(){const e=new m((t,r)=>t-r);e.set(3,!0),e.set(6,!0),e.set(7,!0),e.set(9,!0),e.set(12,!0),e.set(19,!0),e.set(21,!0),e.set(25,!0),f(e,[3,6,7,9,12,19,21,25]),e.set(17,!0),o.deepStrictEqual(e.size,9),f(e,[3,6,7,9,12,17,19,21,25])}),test("clear ( CPU pegged after some builds #194853)",function(){const e=new m((t,r)=>t-r);e.set(1,!0),e.set(2,!0),e.set(3,!0),o.strictEqual(e.size,3),e.clear(),o.strictEqual(e.size,0),o.strictEqual(e.get(1),void 0),o.strictEqual(e.get(2),void 0),o.strictEqual(e.get(3),void 0)}),test("capacity max",function(){const e=new m((t,r)=>t-r,10);e.set(1,!0),e.set(2,!0),e.set(3,!0),e.set(4,!0),e.set(5,!0),e.set(6,!0),e.set(7,!0),e.set(8,!0),e.set(9,!0),e.set(10,!0),e.set(11,!0),e.set(12,!0),f(e,[1,2,3,4,5,6,7,8,9,10,11,12])});const c=(e,t)=>e<t?-1:e>t?1:0;function E(e,t){let r=d(e,t,c);return r>=0?e[r]=t:(r=~r,e.splice(r,0,t)),e}function g(e,t){const r=d(e,t,c);return r>=0&&e.splice(r,1),e}test.skip("perf",function(){const t=new Set;for(let n=0;n<65536;n++){const i=Math.floor(Math.random()*65536);t.add(i)}console.log(t.size);const r=new m(c,65536);let s=new a;t.forEach(n=>r.set(n,!0)),s.stop(),console.log(`[LIST] ${r.size} elements after ${s.elapsed()}ms`);let u=[];s=new a,t.forEach(n=>u=E(u,n)),s.stop(),console.log(`[ARRAY] ${u.length} elements after ${s.elapsed()}ms`),s=new a;const l=[...t].slice(0,t.size/4);l.forEach(n=>{const i=r.get(n);console.assert(i,"[LIST] must have "+n),r.get(-n)}),s.stop(),console.log(`[LIST] retrieve ${s.elapsed()}ms (${(s.elapsed()/(l.length*2)).toPrecision(4)}ms/op)`),s=new a,l.forEach(n=>{const i=d(u,n,c);console.assert(i>=0,"[ARRAY] must have "+n),d(u,-n,c)}),s.stop(),console.log(`[ARRAY] retrieve ${s.elapsed()}ms (${(s.elapsed()/(l.length*2)).toPrecision(4)}ms/op)`),s=new a,l.forEach(n=>{r.set(-n,!1)}),s.stop(),console.log(`[LIST] insert ${s.elapsed()}ms (${(s.elapsed()/l.length).toPrecision(4)}ms/op)`),s=new a,l.forEach(n=>{u=E(u,-n)}),s.stop(),console.log(`[ARRAY] insert ${s.elapsed()}ms (${(s.elapsed()/l.length).toPrecision(4)}ms/op)`),s=new a,l.forEach(n=>{r.delete(n),r.delete(-n)}),s.stop(),console.log(`[LIST] delete ${s.elapsed()}ms (${(s.elapsed()/(l.length*2)).toPrecision(4)}ms/op)`),s=new a,l.forEach(n=>{u=g(u,n),u=g(u,-n)}),s.stop(),console.log(`[ARRAY] delete ${s.elapsed()}ms (${(s.elapsed()/(l.length*2)).toPrecision(4)}ms/op)`)})});
