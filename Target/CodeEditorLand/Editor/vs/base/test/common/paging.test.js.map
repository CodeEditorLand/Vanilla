{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/test/common/paging.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert from 'assert';\nimport { disposableTimeout } from '../../common/async.js';\nimport { CancellationToken, CancellationTokenSource } from '../../common/cancellation.js';\nimport { CancellationError, isCancellationError } from '../../common/errors.js';\nimport { IPager, PagedModel } from '../../common/paging.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from './utils.js';\n\nfunction getPage(pageIndex: number, cancellationToken: CancellationToken): Promise<number[]> {\n\tif (cancellationToken.isCancellationRequested) {\n\t\treturn Promise.reject(new CancellationError());\n\t}\n\n\treturn Promise.resolve([0, 1, 2, 3, 4].map(i => i + (pageIndex * 5)));\n}\n\nclass TestPager implements IPager<number> {\n\n\treadonly firstPage = [0, 1, 2, 3, 4];\n\treadonly pageSize = 5;\n\treadonly total = 100;\n\treadonly getPage: (pageIndex: number, cancellationToken: CancellationToken) => Promise<number[]>;\n\n\tconstructor(getPageFn?: (pageIndex: number, cancellationToken: CancellationToken) => Promise<number[]>) {\n\t\tthis.getPage = getPageFn || getPage;\n\t}\n}\n\nsuite('PagedModel', () => {\n\n\tconst store = ensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('isResolved', () => {\n\t\tconst pager = new TestPager();\n\t\tconst model = new PagedModel(pager);\n\n\t\tassert(model.isResolved(0));\n\t\tassert(model.isResolved(1));\n\t\tassert(model.isResolved(2));\n\t\tassert(model.isResolved(3));\n\t\tassert(model.isResolved(4));\n\t\tassert(!model.isResolved(5));\n\t\tassert(!model.isResolved(6));\n\t\tassert(!model.isResolved(7));\n\t\tassert(!model.isResolved(8));\n\t\tassert(!model.isResolved(9));\n\t\tassert(!model.isResolved(10));\n\t\tassert(!model.isResolved(99));\n\t});\n\n\ttest('resolve single', async () => {\n\t\tconst pager = new TestPager();\n\t\tconst model = new PagedModel(pager);\n\n\t\tassert(!model.isResolved(5));\n\n\t\tawait model.resolve(5, CancellationToken.None);\n\t\tassert(model.isResolved(5));\n\t});\n\n\ttest('resolve page', async () => {\n\t\tconst pager = new TestPager();\n\t\tconst model = new PagedModel(pager);\n\n\t\tassert(!model.isResolved(5));\n\t\tassert(!model.isResolved(6));\n\t\tassert(!model.isResolved(7));\n\t\tassert(!model.isResolved(8));\n\t\tassert(!model.isResolved(9));\n\t\tassert(!model.isResolved(10));\n\n\t\tawait model.resolve(5, CancellationToken.None);\n\t\tassert(model.isResolved(5));\n\t\tassert(model.isResolved(6));\n\t\tassert(model.isResolved(7));\n\t\tassert(model.isResolved(8));\n\t\tassert(model.isResolved(9));\n\t\tassert(!model.isResolved(10));\n\t});\n\n\ttest('resolve page 2', async () => {\n\t\tconst pager = new TestPager();\n\t\tconst model = new PagedModel(pager);\n\n\t\tassert(!model.isResolved(5));\n\t\tassert(!model.isResolved(6));\n\t\tassert(!model.isResolved(7));\n\t\tassert(!model.isResolved(8));\n\t\tassert(!model.isResolved(9));\n\t\tassert(!model.isResolved(10));\n\n\t\tawait model.resolve(10, CancellationToken.None);\n\t\tassert(!model.isResolved(5));\n\t\tassert(!model.isResolved(6));\n\t\tassert(!model.isResolved(7));\n\t\tassert(!model.isResolved(8));\n\t\tassert(!model.isResolved(9));\n\t\tassert(model.isResolved(10));\n\t});\n\n\ttest('preemptive cancellation works', async function () {\n\t\tconst pager = new TestPager(() => {\n\t\t\tassert(false);\n\t\t});\n\n\t\tconst model = new PagedModel(pager);\n\n\t\ttry {\n\t\t\tawait model.resolve(5, CancellationToken.Cancelled);\n\t\t\treturn assert(false);\n\t\t}\n\t\tcatch (err) {\n\t\t\treturn assert(isCancellationError(err));\n\t\t}\n\t});\n\n\ttest('cancellation works', function () {\n\t\tconst pager = new TestPager((_, token) => new Promise((_, e) => {\n\t\t\tstore.add(token.onCancellationRequested(() => e(new CancellationError())));\n\t\t}));\n\n\t\tconst model = new PagedModel(pager);\n\t\tconst tokenSource = store.add(new CancellationTokenSource());\n\n\t\tconst promise = model.resolve(5, tokenSource.token).then(\n\t\t\t() => assert(false),\n\t\t\terr => assert(isCancellationError(err))\n\t\t);\n\n\t\tsetTimeout(() => tokenSource.cancel(), 10);\n\n\t\treturn promise;\n\t});\n\n\ttest('same page cancellation works', function () {\n\t\tlet state = 'idle';\n\n\t\tconst pager = new TestPager((pageIndex, token) => {\n\t\t\tstate = 'resolving';\n\n\t\t\treturn new Promise((_, e) => {\n\t\t\t\tstore.add(token.onCancellationRequested(() => {\n\t\t\t\t\tstate = 'idle';\n\t\t\t\t\te(new CancellationError());\n\t\t\t\t}));\n\t\t\t});\n\t\t});\n\n\t\tconst model = new PagedModel(pager);\n\n\t\tassert.strictEqual(state, 'idle');\n\n\t\tconst tokenSource1 = new CancellationTokenSource();\n\t\tconst promise1 = model.resolve(5, tokenSource1.token).then(\n\t\t\t() => assert(false),\n\t\t\terr => assert(isCancellationError(err))\n\t\t);\n\n\t\tassert.strictEqual(state, 'resolving');\n\n\t\tconst tokenSource2 = new CancellationTokenSource();\n\t\tconst promise2 = model.resolve(6, tokenSource2.token).then(\n\t\t\t() => assert(false),\n\t\t\terr => assert(isCancellationError(err))\n\t\t);\n\n\t\tassert.strictEqual(state, 'resolving');\n\n\t\tstore.add(disposableTimeout(() => {\n\t\t\tassert.strictEqual(state, 'resolving');\n\t\t\ttokenSource1.cancel();\n\t\t\tassert.strictEqual(state, 'resolving');\n\n\t\t\tstore.add(disposableTimeout(() => {\n\t\t\t\tassert.strictEqual(state, 'resolving');\n\t\t\t\ttokenSource2.cancel();\n\t\t\t\tassert.strictEqual(state, 'idle');\n\t\t\t}, 10));\n\t\t}, 10));\n\n\t\treturn Promise.all([promise1, promise2]);\n\t});\n});\n"],
  "mappings": "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",
  "names": ["_"]
}
