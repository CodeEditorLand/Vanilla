{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/test/node/zip/zip.test.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport assert from 'assert';\nimport { tmpdir } from 'os';\nimport { createCancelablePromise } from '../../../common/async.js';\nimport { FileAccess } from '../../../common/network.js';\nimport * as path from '../../../common/path.js';\nimport { Promises } from '../../../node/pfs.js';\nimport { extract } from '../../../node/zip.js';\nimport { ensureNoDisposablesAreLeakedInTestSuite } from '../../common/utils.js';\nimport { getRandomTestPath } from '../testUtils.js';\n\nsuite('Zip', () => {\n\n\tensureNoDisposablesAreLeakedInTestSuite();\n\n\ttest('extract should handle directories', async () => {\n\t\tconst testDir = getRandomTestPath(tmpdir(), 'vsctests', 'zip');\n\t\tawait fs.promises.mkdir(testDir, { recursive: true });\n\n\t\tconst fixtures = FileAccess.asFileUri('vs/base/test/node/zip/fixtures').fsPath;\n\t\tconst fixture = path.join(fixtures, 'extract.zip');\n\n\t\tawait createCancelablePromise(token => extract(fixture, testDir, {}, token));\n\t\tconst doesExist = await Promises.exists(path.join(testDir, 'extension'));\n\t\tassert(doesExist);\n\n\t\tawait Promises.rm(testDir);\n\t});\n});\n"],
  "mappings": "AAKA,YAAY,QAAQ;AACpB,OAAO,YAAY;AACnB,SAAS,cAAc;AACvB,SAAS,+BAA+B;AACxC,SAAS,kBAAkB;AAC3B,YAAY,UAAU;AACtB,SAAS,gBAAgB;AACzB,SAAS,eAAe;AACxB,SAAS,+CAA+C;AACxD,SAAS,yBAAyB;AAElC,MAAM,OAAO,MAAM;AAElB,0CAAwC;AAExC,OAAK,qCAAqC,YAAY;AACrD,UAAM,UAAU,kBAAkB,OAAO,GAAG,YAAY,KAAK;AAC7D,UAAM,GAAG,SAAS,MAAM,SAAS,EAAE,WAAW,KAAK,CAAC;AAEpD,UAAM,WAAW,WAAW,UAAU,gCAAgC,EAAE;AACxE,UAAM,UAAU,KAAK,KAAK,UAAU,aAAa;AAEjD,UAAM,wBAAwB,WAAS,QAAQ,SAAS,SAAS,CAAC,GAAG,KAAK,CAAC;AAC3E,UAAM,YAAY,MAAM,SAAS,OAAO,KAAK,KAAK,SAAS,WAAW,CAAC;AACvE,WAAO,SAAS;AAEhB,UAAM,SAAS,GAAG,OAAO;AAAA,EAC1B,CAAC;AACF,CAAC;",
  "names": []
}
