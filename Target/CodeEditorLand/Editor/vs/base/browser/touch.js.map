{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/browser/touch.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as DomUtils from './dom.js';\nimport { mainWindow } from './window.js';\nimport * as arrays from '../common/arrays.js';\nimport { memoize } from '../common/decorators.js';\nimport { Event as EventUtils } from '../common/event.js';\nimport { Disposable, IDisposable, markAsSingleton, toDisposable } from '../common/lifecycle.js';\nimport { LinkedList } from '../common/linkedList.js';\n\nexport namespace EventType {\n\texport const Tap = '-monaco-gesturetap';\n\texport const Change = '-monaco-gesturechange';\n\texport const Start = '-monaco-gesturestart';\n\texport const End = '-monaco-gesturesend';\n\texport const Contextmenu = '-monaco-gesturecontextmenu';\n}\n\ninterface TouchData {\n\tid: number;\n\tinitialTarget: EventTarget;\n\tinitialTimeStamp: number;\n\tinitialPageX: number;\n\tinitialPageY: number;\n\trollingTimestamps: number[];\n\trollingPageX: number[];\n\trollingPageY: number[];\n}\n\nexport interface GestureEvent extends MouseEvent {\n\tinitialTarget: EventTarget | undefined;\n\ttranslationX: number;\n\ttranslationY: number;\n\tpageX: number;\n\tpageY: number;\n\ttapCount: number;\n}\n\ninterface Touch {\n\tidentifier: number;\n\tscreenX: number;\n\tscreenY: number;\n\tclientX: number;\n\tclientY: number;\n\tpageX: number;\n\tpageY: number;\n\tradiusX: number;\n\tradiusY: number;\n\trotationAngle: number;\n\tforce: number;\n\ttarget: Element;\n}\n\ninterface TouchList {\n\t[i: number]: Touch;\n\tlength: number;\n\titem(index: number): Touch;\n\tidentifiedTouch(id: number): Touch;\n}\n\ninterface TouchEvent extends Event {\n\ttouches: TouchList;\n\ttargetTouches: TouchList;\n\tchangedTouches: TouchList;\n}\n\nexport class Gesture extends Disposable {\n\n\tprivate static readonly SCROLL_FRICTION = -0.005;\n\tprivate static INSTANCE: Gesture;\n\tprivate static readonly HOLD_DELAY = 700;\n\n\tprivate dispatched = false;\n\tprivate readonly targets = new LinkedList<HTMLElement>();\n\tprivate readonly ignoreTargets = new LinkedList<HTMLElement>();\n\tprivate handle: IDisposable | null;\n\n\tprivate readonly activeTouches: { [id: number]: TouchData };\n\n\tprivate _lastSetTapCountTime: number;\n\n\tprivate static readonly CLEAR_TAP_COUNT_TIME = 400; // ms\n\n\n\tprivate constructor() {\n\t\tsuper();\n\n\t\tthis.activeTouches = {};\n\t\tthis.handle = null;\n\t\tthis._lastSetTapCountTime = 0;\n\n\t\tthis._register(EventUtils.runAndSubscribe(DomUtils.onDidRegisterWindow, ({ window, disposables }) => {\n\t\t\tdisposables.add(DomUtils.addDisposableListener(window.document, 'touchstart', (e: TouchEvent) => this.onTouchStart(e), { passive: false }));\n\t\t\tdisposables.add(DomUtils.addDisposableListener(window.document, 'touchend', (e: TouchEvent) => this.onTouchEnd(window, e)));\n\t\t\tdisposables.add(DomUtils.addDisposableListener(window.document, 'touchmove', (e: TouchEvent) => this.onTouchMove(e), { passive: false }));\n\t\t}, { window: mainWindow, disposables: this._store }));\n\t}\n\n\tpublic static addTarget(element: HTMLElement): IDisposable {\n\t\tif (!Gesture.isTouchDevice()) {\n\t\t\treturn Disposable.None;\n\t\t}\n\t\tif (!Gesture.INSTANCE) {\n\t\t\tGesture.INSTANCE = markAsSingleton(new Gesture());\n\t\t}\n\n\t\tconst remove = Gesture.INSTANCE.targets.push(element);\n\t\treturn toDisposable(remove);\n\t}\n\n\tpublic static ignoreTarget(element: HTMLElement): IDisposable {\n\t\tif (!Gesture.isTouchDevice()) {\n\t\t\treturn Disposable.None;\n\t\t}\n\t\tif (!Gesture.INSTANCE) {\n\t\t\tGesture.INSTANCE = markAsSingleton(new Gesture());\n\t\t}\n\n\t\tconst remove = Gesture.INSTANCE.ignoreTargets.push(element);\n\t\treturn toDisposable(remove);\n\t}\n\n\t@memoize\n\tstatic isTouchDevice(): boolean {\n\t\t// `'ontouchstart' in window` always evaluates to true with typescript's modern typings. This causes `window` to be\n\t\t// `never` later in `window.navigator`. That's why we need the explicit `window as Window` cast\n\t\treturn 'ontouchstart' in mainWindow || navigator.maxTouchPoints > 0;\n\t}\n\n\tpublic override dispose(): void {\n\t\tif (this.handle) {\n\t\t\tthis.handle.dispose();\n\t\t\tthis.handle = null;\n\t\t}\n\n\t\tsuper.dispose();\n\t}\n\n\tprivate onTouchStart(e: TouchEvent): void {\n\t\tconst timestamp = Date.now(); // use Date.now() because on FF e.timeStamp is not epoch based.\n\n\t\tif (this.handle) {\n\t\t\tthis.handle.dispose();\n\t\t\tthis.handle = null;\n\t\t}\n\n\t\tfor (let i = 0, len = e.targetTouches.length; i < len; i++) {\n\t\t\tconst touch = e.targetTouches.item(i);\n\n\t\t\tthis.activeTouches[touch.identifier] = {\n\t\t\t\tid: touch.identifier,\n\t\t\t\tinitialTarget: touch.target,\n\t\t\t\tinitialTimeStamp: timestamp,\n\t\t\t\tinitialPageX: touch.pageX,\n\t\t\t\tinitialPageY: touch.pageY,\n\t\t\t\trollingTimestamps: [timestamp],\n\t\t\t\trollingPageX: [touch.pageX],\n\t\t\t\trollingPageY: [touch.pageY]\n\t\t\t};\n\n\t\t\tconst evt = this.newGestureEvent(EventType.Start, touch.target);\n\t\t\tevt.pageX = touch.pageX;\n\t\t\tevt.pageY = touch.pageY;\n\t\t\tthis.dispatchEvent(evt);\n\t\t}\n\n\t\tif (this.dispatched) {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\tthis.dispatched = false;\n\t\t}\n\t}\n\n\tprivate onTouchEnd(targetWindow: Window, e: TouchEvent): void {\n\t\tconst timestamp = Date.now(); // use Date.now() because on FF e.timeStamp is not epoch based.\n\n\t\tconst activeTouchCount = Object.keys(this.activeTouches).length;\n\n\t\tfor (let i = 0, len = e.changedTouches.length; i < len; i++) {\n\n\t\t\tconst touch = e.changedTouches.item(i);\n\n\t\t\tif (!this.activeTouches.hasOwnProperty(String(touch.identifier))) {\n\t\t\t\tconsole.warn('move of an UNKNOWN touch', touch);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst data = this.activeTouches[touch.identifier],\n\t\t\t\tholdTime = Date.now() - data.initialTimeStamp;\n\n\t\t\tif (holdTime < Gesture.HOLD_DELAY\n\t\t\t\t&& Math.abs(data.initialPageX - arrays.tail(data.rollingPageX)!) < 30\n\t\t\t\t&& Math.abs(data.initialPageY - arrays.tail(data.rollingPageY)!) < 30) {\n\n\t\t\t\tconst evt = this.newGestureEvent(EventType.Tap, data.initialTarget);\n\t\t\t\tevt.pageX = arrays.tail(data.rollingPageX)!;\n\t\t\t\tevt.pageY = arrays.tail(data.rollingPageY)!;\n\t\t\t\tthis.dispatchEvent(evt);\n\n\t\t\t} else if (holdTime >= Gesture.HOLD_DELAY\n\t\t\t\t&& Math.abs(data.initialPageX - arrays.tail(data.rollingPageX)!) < 30\n\t\t\t\t&& Math.abs(data.initialPageY - arrays.tail(data.rollingPageY)!) < 30) {\n\n\t\t\t\tconst evt = this.newGestureEvent(EventType.Contextmenu, data.initialTarget);\n\t\t\t\tevt.pageX = arrays.tail(data.rollingPageX)!;\n\t\t\t\tevt.pageY = arrays.tail(data.rollingPageY)!;\n\t\t\t\tthis.dispatchEvent(evt);\n\n\t\t\t} else if (activeTouchCount === 1) {\n\t\t\t\tconst finalX = arrays.tail(data.rollingPageX)!;\n\t\t\t\tconst finalY = arrays.tail(data.rollingPageY)!;\n\n\t\t\t\tconst deltaT = arrays.tail(data.rollingTimestamps)! - data.rollingTimestamps[0];\n\t\t\t\tconst deltaX = finalX - data.rollingPageX[0];\n\t\t\t\tconst deltaY = finalY - data.rollingPageY[0];\n\n\t\t\t\t// We need to get all the dispatch targets on the start of the inertia event\n\t\t\t\tconst dispatchTo = [...this.targets].filter(t => data.initialTarget instanceof Node && t.contains(data.initialTarget));\n\t\t\t\tthis.inertia(targetWindow, dispatchTo, timestamp,\t// time now\n\t\t\t\t\tMath.abs(deltaX) / deltaT,\t\t\t\t\t\t// speed\n\t\t\t\t\tdeltaX > 0 ? 1 : -1,\t\t\t\t\t\t\t// x direction\n\t\t\t\t\tfinalX,\t\t\t\t\t\t\t\t\t\t\t// x now\n\t\t\t\t\tMath.abs(deltaY) / deltaT,  \t\t\t\t\t// y speed\n\t\t\t\t\tdeltaY > 0 ? 1 : -1,\t\t\t\t\t\t\t// y direction\n\t\t\t\t\tfinalY\t\t\t\t\t\t\t\t\t\t\t// y now\n\t\t\t\t);\n\t\t\t}\n\n\n\t\t\tthis.dispatchEvent(this.newGestureEvent(EventType.End, data.initialTarget));\n\t\t\t// forget about this touch\n\t\t\tdelete this.activeTouches[touch.identifier];\n\t\t}\n\n\t\tif (this.dispatched) {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\tthis.dispatched = false;\n\t\t}\n\t}\n\n\tprivate newGestureEvent(type: string, initialTarget?: EventTarget): GestureEvent {\n\t\tconst event = document.createEvent('CustomEvent') as unknown as GestureEvent;\n\t\tevent.initEvent(type, false, true);\n\t\tevent.initialTarget = initialTarget;\n\t\tevent.tapCount = 0;\n\t\treturn event;\n\t}\n\n\tprivate dispatchEvent(event: GestureEvent): void {\n\t\tif (event.type === EventType.Tap) {\n\t\t\tconst currentTime = (new Date()).getTime();\n\t\t\tlet setTapCount = 0;\n\t\t\tif (currentTime - this._lastSetTapCountTime > Gesture.CLEAR_TAP_COUNT_TIME) {\n\t\t\t\tsetTapCount = 1;\n\t\t\t} else {\n\t\t\t\tsetTapCount = 2;\n\t\t\t}\n\n\t\t\tthis._lastSetTapCountTime = currentTime;\n\t\t\tevent.tapCount = setTapCount;\n\t\t} else if (event.type === EventType.Change || event.type === EventType.Contextmenu) {\n\t\t\t// tap is canceled by scrolling or context menu\n\t\t\tthis._lastSetTapCountTime = 0;\n\t\t}\n\n\t\tif (event.initialTarget instanceof Node) {\n\t\t\tfor (const ignoreTarget of this.ignoreTargets) {\n\t\t\t\tif (ignoreTarget.contains(event.initialTarget)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst targets: [number, HTMLElement][] = [];\n\t\t\tfor (const target of this.targets) {\n\t\t\t\tif (target.contains(event.initialTarget)) {\n\t\t\t\t\tlet depth = 0;\n\t\t\t\t\tlet now: Node | null = event.initialTarget;\n\t\t\t\t\twhile (now && now !== target) {\n\t\t\t\t\t\tdepth++;\n\t\t\t\t\t\tnow = now.parentElement;\n\t\t\t\t\t}\n\t\t\t\t\ttargets.push([depth, target]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttargets.sort((a, b) => a[0] - b[0]);\n\n\t\t\tfor (const [_, target] of targets) {\n\t\t\t\ttarget.dispatchEvent(event);\n\t\t\t\tthis.dispatched = true;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate inertia(targetWindow: Window, dispatchTo: readonly EventTarget[], t1: number, vX: number, dirX: number, x: number, vY: number, dirY: number, y: number): void {\n\t\tthis.handle = DomUtils.scheduleAtNextAnimationFrame(targetWindow, () => {\n\t\t\tconst now = Date.now();\n\n\t\t\t// velocity: old speed + accel_over_time\n\t\t\tconst deltaT = now - t1;\n\t\t\tlet delta_pos_x = 0, delta_pos_y = 0;\n\t\t\tlet stopped = true;\n\n\t\t\tvX += Gesture.SCROLL_FRICTION * deltaT;\n\t\t\tvY += Gesture.SCROLL_FRICTION * deltaT;\n\n\t\t\tif (vX > 0) {\n\t\t\t\tstopped = false;\n\t\t\t\tdelta_pos_x = dirX * vX * deltaT;\n\t\t\t}\n\n\t\t\tif (vY > 0) {\n\t\t\t\tstopped = false;\n\t\t\t\tdelta_pos_y = dirY * vY * deltaT;\n\t\t\t}\n\n\t\t\t// dispatch translation event\n\t\t\tconst evt = this.newGestureEvent(EventType.Change);\n\t\t\tevt.translationX = delta_pos_x;\n\t\t\tevt.translationY = delta_pos_y;\n\t\t\tdispatchTo.forEach(d => d.dispatchEvent(evt));\n\n\t\t\tif (!stopped) {\n\t\t\t\tthis.inertia(targetWindow, dispatchTo, now, vX, dirX, x + delta_pos_x, vY, dirY, y + delta_pos_y);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate onTouchMove(e: TouchEvent): void {\n\t\tconst timestamp = Date.now(); // use Date.now() because on FF e.timeStamp is not epoch based.\n\n\t\tfor (let i = 0, len = e.changedTouches.length; i < len; i++) {\n\n\t\t\tconst touch = e.changedTouches.item(i);\n\n\t\t\tif (!this.activeTouches.hasOwnProperty(String(touch.identifier))) {\n\t\t\t\tconsole.warn('end of an UNKNOWN touch', touch);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst data = this.activeTouches[touch.identifier];\n\n\t\t\tconst evt = this.newGestureEvent(EventType.Change, data.initialTarget);\n\t\t\tevt.translationX = touch.pageX - arrays.tail(data.rollingPageX)!;\n\t\t\tevt.translationY = touch.pageY - arrays.tail(data.rollingPageY)!;\n\t\t\tevt.pageX = touch.pageX;\n\t\t\tevt.pageY = touch.pageY;\n\t\t\tthis.dispatchEvent(evt);\n\n\t\t\t// only keep a few data points, to average the final speed\n\t\t\tif (data.rollingPageX.length > 3) {\n\t\t\t\tdata.rollingPageX.shift();\n\t\t\t\tdata.rollingPageY.shift();\n\t\t\t\tdata.rollingTimestamps.shift();\n\t\t\t}\n\n\t\t\tdata.rollingPageX.push(touch.pageX);\n\t\t\tdata.rollingPageY.push(touch.pageY);\n\t\t\tdata.rollingTimestamps.push(timestamp);\n\t\t}\n\n\t\tif (this.dispatched) {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\tthis.dispatched = false;\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": ["EventType"]
}
