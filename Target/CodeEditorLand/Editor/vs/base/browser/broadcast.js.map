{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/browser/broadcast.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getErrorMessage } from \"../common/errors.js\";\nimport { Emitter } from \"../common/event.js\";\nimport { Disposable, toDisposable } from \"../common/lifecycle.js\";\nimport { mainWindow } from \"./window.js\";\n\nexport class BroadcastDataChannel<T> extends Disposable {\n\tprivate broadcastChannel: BroadcastChannel | undefined;\n\n\tprivate readonly _onDidReceiveData = this._register(new Emitter<T>());\n\treadonly onDidReceiveData = this._onDidReceiveData.event;\n\n\tconstructor(private readonly channelName: string) {\n\t\tsuper();\n\n\t\t// Use BroadcastChannel\n\t\tif (\"BroadcastChannel\" in mainWindow) {\n\t\t\ttry {\n\t\t\t\tthis.broadcastChannel = new BroadcastChannel(channelName);\n\t\t\t\tconst listener = (event: MessageEvent) => {\n\t\t\t\t\tthis._onDidReceiveData.fire(event.data);\n\t\t\t\t};\n\t\t\t\tthis.broadcastChannel.addEventListener(\"message\", listener);\n\t\t\t\tthis._register(\n\t\t\t\t\ttoDisposable(() => {\n\t\t\t\t\t\tif (this.broadcastChannel) {\n\t\t\t\t\t\t\tthis.broadcastChannel.removeEventListener(\n\t\t\t\t\t\t\t\t\"message\",\n\t\t\t\t\t\t\t\tlistener,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tthis.broadcastChannel.close();\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t\"Error while creating broadcast channel. Falling back to localStorage.\",\n\t\t\t\t\tgetErrorMessage(error),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// BroadcastChannel is not supported. Use storage.\n\t\tif (!this.broadcastChannel) {\n\t\t\tthis.channelName = `BroadcastDataChannel.${channelName}`;\n\t\t\tthis.createBroadcastChannel();\n\t\t}\n\t}\n\n\tprivate createBroadcastChannel(): void {\n\t\tconst listener = (event: StorageEvent) => {\n\t\t\tif (event.key === this.channelName && event.newValue) {\n\t\t\t\tthis._onDidReceiveData.fire(JSON.parse(event.newValue));\n\t\t\t}\n\t\t};\n\t\tmainWindow.addEventListener(\"storage\", listener);\n\t\tthis._register(\n\t\t\ttoDisposable(() =>\n\t\t\t\tmainWindow.removeEventListener(\"storage\", listener),\n\t\t\t),\n\t\t);\n\t}\n\n\t/**\n\t * Sends the data to other BroadcastChannel objects set up for this channel. Data can be structured objects, e.g. nested objects and arrays.\n\t * @param data data to broadcast\n\t */\n\tpostData(data: T): void {\n\t\tif (this.broadcastChannel) {\n\t\t\tthis.broadcastChannel.postMessage(data);\n\t\t} else {\n\t\t\t// remove previous changes so that event is triggered even if new changes are same as old changes\n\t\t\tlocalStorage.removeItem(this.channelName);\n\t\t\tlocalStorage.setItem(this.channelName, JSON.stringify(data));\n\t\t}\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,uBAAuB;AAChC,SAAS,eAAe;AACxB,SAAS,YAAY,oBAAoB;AACzC,SAAS,kBAAkB;AAEpB,MAAM,6BAAgC,WAAW;AAAA,EAMvD,YAA6B,aAAqB;AACjD,UAAM;AADsB;AAI5B,QAAI,sBAAsB,YAAY;AACrC,UAAI;AACH,aAAK,mBAAmB,IAAI,iBAAiB,WAAW;AACxD,cAAM,WAAW,wBAAC,UAAwB;AACzC,eAAK,kBAAkB,KAAK,MAAM,IAAI;AAAA,QACvC,GAFiB;AAGjB,aAAK,iBAAiB,iBAAiB,WAAW,QAAQ;AAC1D,aAAK;AAAA,UACJ,aAAa,MAAM;AAClB,gBAAI,KAAK,kBAAkB;AAC1B,mBAAK,iBAAiB;AAAA,gBACrB;AAAA,gBACA;AAAA,cACD;AACA,mBAAK,iBAAiB,MAAM;AAAA,YAC7B;AAAA,UACD,CAAC;AAAA,QACF;AAAA,MACD,SAAS,OAAO;AACf,gBAAQ;AAAA,UACP;AAAA,UACA,gBAAgB,KAAK;AAAA,QACtB;AAAA,MACD;AAAA,IACD;AAGA,QAAI,CAAC,KAAK,kBAAkB;AAC3B,WAAK,cAAc,wBAAwB,WAAW;AACtD,WAAK,uBAAuB;AAAA,IAC7B;AAAA,EACD;AAAA,EAnDD,OAUwD;AAAA;AAAA;AAAA,EAC/C;AAAA,EAES,oBAAoB,KAAK,UAAU,IAAI,QAAW,CAAC;AAAA,EAC3D,mBAAmB,KAAK,kBAAkB;AAAA,EAuC3C,yBAA+B;AACtC,UAAM,WAAW,wBAAC,UAAwB;AACzC,UAAI,MAAM,QAAQ,KAAK,eAAe,MAAM,UAAU;AACrD,aAAK,kBAAkB,KAAK,KAAK,MAAM,MAAM,QAAQ,CAAC;AAAA,MACvD;AAAA,IACD,GAJiB;AAKjB,eAAW,iBAAiB,WAAW,QAAQ;AAC/C,SAAK;AAAA,MACJ;AAAA,QAAa,MACZ,WAAW,oBAAoB,WAAW,QAAQ;AAAA,MACnD;AAAA,IACD;AAAA,EACD;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,SAAS,MAAe;AACvB,QAAI,KAAK,kBAAkB;AAC1B,WAAK,iBAAiB,YAAY,IAAI;AAAA,IACvC,OAAO;AAEN,mBAAa,WAAW,KAAK,WAAW;AACxC,mBAAa,QAAQ,KAAK,aAAa,KAAK,UAAU,IAAI,CAAC;AAAA,IAC5D;AAAA,EACD;AACD;",
  "names": []
}
