{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/browser/globalPointerMoveMonitor.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from './dom.js';\nimport { DisposableStore, IDisposable, toDisposable } from '../common/lifecycle.js';\n\nexport interface IPointerMoveCallback {\n\t(event: PointerEvent): void;\n}\n\nexport interface IOnStopCallback {\n\t(browserEvent?: PointerEvent | KeyboardEvent): void;\n}\n\nexport class GlobalPointerMoveMonitor implements IDisposable {\n\n\tprivate readonly _hooks = new DisposableStore();\n\tprivate _pointerMoveCallback: IPointerMoveCallback | null = null;\n\tprivate _onStopCallback: IOnStopCallback | null = null;\n\n\tpublic dispose(): void {\n\t\tthis.stopMonitoring(false);\n\t\tthis._hooks.dispose();\n\t}\n\n\tpublic stopMonitoring(invokeStopCallback: boolean, browserEvent?: PointerEvent | KeyboardEvent): void {\n\t\tif (!this.isMonitoring()) {\n\t\t\t// Not monitoring\n\t\t\treturn;\n\t\t}\n\n\t\t// Unhook\n\t\tthis._hooks.clear();\n\t\tthis._pointerMoveCallback = null;\n\t\tconst onStopCallback = this._onStopCallback;\n\t\tthis._onStopCallback = null;\n\n\t\tif (invokeStopCallback && onStopCallback) {\n\t\t\tonStopCallback(browserEvent);\n\t\t}\n\t}\n\n\tpublic isMonitoring(): boolean {\n\t\treturn !!this._pointerMoveCallback;\n\t}\n\n\tpublic startMonitoring(\n\t\tinitialElement: Element,\n\t\tpointerId: number,\n\t\tinitialButtons: number,\n\t\tpointerMoveCallback: IPointerMoveCallback,\n\t\tonStopCallback: IOnStopCallback\n\t): void {\n\t\tif (this.isMonitoring()) {\n\t\t\tthis.stopMonitoring(false);\n\t\t}\n\t\tthis._pointerMoveCallback = pointerMoveCallback;\n\t\tthis._onStopCallback = onStopCallback;\n\n\t\tlet eventSource: Element | Window = initialElement;\n\n\t\ttry {\n\t\t\tinitialElement.setPointerCapture(pointerId);\n\t\t\tthis._hooks.add(toDisposable(() => {\n\t\t\t\ttry {\n\t\t\t\t\tinitialElement.releasePointerCapture(pointerId);\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// See https://github.com/microsoft/vscode/issues/161731\n\t\t\t\t\t//\n\t\t\t\t\t// `releasePointerCapture` sometimes fails when being invoked with the exception:\n\t\t\t\t\t//     DOMException: Failed to execute 'releasePointerCapture' on 'Element':\n\t\t\t\t\t//     No active pointer with the given id is found.\n\t\t\t\t\t//\n\t\t\t\t\t// There's no need to do anything in case of failure\n\t\t\t\t}\n\t\t\t}));\n\t\t} catch (err) {\n\t\t\t// See https://github.com/microsoft/vscode/issues/144584\n\t\t\t// See https://github.com/microsoft/vscode/issues/146947\n\t\t\t// `setPointerCapture` sometimes fails when being invoked\n\t\t\t// from a `mousedown` listener on macOS and Windows\n\t\t\t// and it always fails on Linux with the exception:\n\t\t\t//     DOMException: Failed to execute 'setPointerCapture' on 'Element':\n\t\t\t//     No active pointer with the given id is found.\n\t\t\t// In case of failure, we bind the listeners on the window\n\t\t\teventSource = dom.getWindow(initialElement);\n\t\t}\n\n\t\tthis._hooks.add(dom.addDisposableListener(\n\t\t\teventSource,\n\t\t\tdom.EventType.POINTER_MOVE,\n\t\t\t(e) => {\n\t\t\t\tif (e.buttons !== initialButtons) {\n\t\t\t\t\t// Buttons state has changed in the meantime\n\t\t\t\t\tthis.stopMonitoring(true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\te.preventDefault();\n\t\t\t\tthis._pointerMoveCallback!(e);\n\t\t\t}\n\t\t));\n\n\t\tthis._hooks.add(dom.addDisposableListener(\n\t\t\teventSource,\n\t\t\tdom.EventType.POINTER_UP,\n\t\t\t(e: PointerEvent) => this.stopMonitoring(true)\n\t\t));\n\t}\n}\n"],
  "mappings": ";;AAKA,YAAY,SAAS;AACrB,SAAS,iBAAiB,aAAa,oBAAoB;AAUpD,MAAM,yBAAgD;AAAA,EAhB7D,OAgB6D;AAAA;AAAA;AAAA,EAE3C,SAAS,IAAI,gBAAgB;AAAA,EACtC,uBAAoD;AAAA,EACpD,kBAA0C;AAAA,EAE3C,UAAgB;AACtB,SAAK,eAAe,KAAK;AACzB,SAAK,OAAO,QAAQ;AAAA,EACrB;AAAA,EAEO,eAAe,oBAA6B,cAAmD;AACrG,QAAI,CAAC,KAAK,aAAa,GAAG;AAEzB;AAAA,IACD;AAGA,SAAK,OAAO,MAAM;AAClB,SAAK,uBAAuB;AAC5B,UAAM,iBAAiB,KAAK;AAC5B,SAAK,kBAAkB;AAEvB,QAAI,sBAAsB,gBAAgB;AACzC,qBAAe,YAAY;AAAA,IAC5B;AAAA,EACD;AAAA,EAEO,eAAwB;AAC9B,WAAO,CAAC,CAAC,KAAK;AAAA,EACf;AAAA,EAEO,gBACN,gBACA,WACA,gBACA,qBACA,gBACO;AACP,QAAI,KAAK,aAAa,GAAG;AACxB,WAAK,eAAe,KAAK;AAAA,IAC1B;AACA,SAAK,uBAAuB;AAC5B,SAAK,kBAAkB;AAEvB,QAAI,cAAgC;AAEpC,QAAI;AACH,qBAAe,kBAAkB,SAAS;AAC1C,WAAK,OAAO,IAAI,aAAa,MAAM;AAClC,YAAI;AACH,yBAAe,sBAAsB,SAAS;AAAA,QAC/C,SAAS,KAAK;AAAA,QAQd;AAAA,MACD,CAAC,CAAC;AAAA,IACH,SAAS,KAAK;AASb,oBAAc,IAAI,UAAU,cAAc;AAAA,IAC3C;AAEA,SAAK,OAAO,IAAI,IAAI;AAAA,MACnB;AAAA,MACA,IAAI,UAAU;AAAA,MACd,CAAC,MAAM;AACN,YAAI,EAAE,YAAY,gBAAgB;AAEjC,eAAK,eAAe,IAAI;AACxB;AAAA,QACD;AAEA,UAAE,eAAe;AACjB,aAAK,qBAAsB,CAAC;AAAA,MAC7B;AAAA,IACD,CAAC;AAED,SAAK,OAAO,IAAI,IAAI;AAAA,MACnB;AAAA,MACA,IAAI,UAAU;AAAA,MACd,CAAC,MAAoB,KAAK,eAAe,IAAI;AAAA,IAC9C,CAAC;AAAA,EACF;AACD;",
  "names": []
}
