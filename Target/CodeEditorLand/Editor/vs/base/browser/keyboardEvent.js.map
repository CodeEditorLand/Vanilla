{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/browser/keyboardEvent.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tEVENT_KEY_CODE_MAP,\n\tKeyCode,\n\tKeyCodeUtils,\n\tKeyMod,\n} from \"../common/keyCodes.js\";\nimport { KeyCodeChord } from \"../common/keybindings.js\";\nimport * as platform from \"../common/platform.js\";\nimport * as browser from \"./browser.js\";\n\nfunction extractKeyCode(e: KeyboardEvent): KeyCode {\n\tif (e.charCode) {\n\t\t// \"keypress\" events mostly\n\t\tconst char = String.fromCharCode(e.charCode).toUpperCase();\n\t\treturn KeyCodeUtils.fromString(char);\n\t}\n\n\tconst keyCode = e.keyCode;\n\n\t// browser quirks\n\tif (keyCode === 3) {\n\t\treturn KeyCode.PauseBreak;\n\t} else if (browser.isFirefox) {\n\t\tswitch (keyCode) {\n\t\t\tcase 59:\n\t\t\t\treturn KeyCode.Semicolon;\n\t\t\tcase 60:\n\t\t\t\tif (platform.isLinux) {\n\t\t\t\t\treturn KeyCode.IntlBackslash;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 61:\n\t\t\t\treturn KeyCode.Equal;\n\t\t\t// based on: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode#numpad_keys\n\t\t\tcase 107:\n\t\t\t\treturn KeyCode.NumpadAdd;\n\t\t\tcase 109:\n\t\t\t\treturn KeyCode.NumpadSubtract;\n\t\t\tcase 173:\n\t\t\t\treturn KeyCode.Minus;\n\t\t\tcase 224:\n\t\t\t\tif (platform.isMacintosh) {\n\t\t\t\t\treturn KeyCode.Meta;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t} else if (browser.isWebKit) {\n\t\tif (platform.isMacintosh && keyCode === 93) {\n\t\t\t// the two meta keys in the Mac have different key codes (91 and 93)\n\t\t\treturn KeyCode.Meta;\n\t\t} else if (!platform.isMacintosh && keyCode === 92) {\n\t\t\treturn KeyCode.Meta;\n\t\t}\n\t}\n\n\t// cross browser keycodes:\n\treturn EVENT_KEY_CODE_MAP[keyCode] || KeyCode.Unknown;\n}\n\nexport interface IKeyboardEvent {\n\treadonly _standardKeyboardEventBrand: true;\n\n\treadonly browserEvent: KeyboardEvent;\n\treadonly target: HTMLElement;\n\n\treadonly ctrlKey: boolean;\n\treadonly shiftKey: boolean;\n\treadonly altKey: boolean;\n\treadonly metaKey: boolean;\n\treadonly altGraphKey: boolean;\n\treadonly keyCode: KeyCode;\n\treadonly code: string;\n\n\t/**\n\t * @internal\n\t */\n\ttoKeyCodeChord(): KeyCodeChord;\n\tequals(keybinding: number): boolean;\n\n\tpreventDefault(): void;\n\tstopPropagation(): void;\n}\n\nconst ctrlKeyMod = platform.isMacintosh ? KeyMod.WinCtrl : KeyMod.CtrlCmd;\nconst altKeyMod = KeyMod.Alt;\nconst shiftKeyMod = KeyMod.Shift;\nconst metaKeyMod = platform.isMacintosh ? KeyMod.CtrlCmd : KeyMod.WinCtrl;\n\nexport function printKeyboardEvent(e: KeyboardEvent): string {\n\tconst modifiers: string[] = [];\n\tif (e.ctrlKey) {\n\t\tmodifiers.push(`ctrl`);\n\t}\n\tif (e.shiftKey) {\n\t\tmodifiers.push(`shift`);\n\t}\n\tif (e.altKey) {\n\t\tmodifiers.push(`alt`);\n\t}\n\tif (e.metaKey) {\n\t\tmodifiers.push(`meta`);\n\t}\n\treturn `modifiers: [${modifiers.join(\",\")}], code: ${e.code}, keyCode: ${e.keyCode}, key: ${e.key}`;\n}\n\nexport function printStandardKeyboardEvent(e: StandardKeyboardEvent): string {\n\tconst modifiers: string[] = [];\n\tif (e.ctrlKey) {\n\t\tmodifiers.push(`ctrl`);\n\t}\n\tif (e.shiftKey) {\n\t\tmodifiers.push(`shift`);\n\t}\n\tif (e.altKey) {\n\t\tmodifiers.push(`alt`);\n\t}\n\tif (e.metaKey) {\n\t\tmodifiers.push(`meta`);\n\t}\n\treturn `modifiers: [${modifiers.join(\",\")}], code: ${e.code}, keyCode: ${e.keyCode} ('${KeyCodeUtils.toString(e.keyCode)}')`;\n}\n\nexport class StandardKeyboardEvent implements IKeyboardEvent {\n\treadonly _standardKeyboardEventBrand = true;\n\n\tpublic readonly browserEvent: KeyboardEvent;\n\tpublic readonly target: HTMLElement;\n\n\tpublic readonly ctrlKey: boolean;\n\tpublic readonly shiftKey: boolean;\n\tpublic readonly altKey: boolean;\n\tpublic readonly metaKey: boolean;\n\tpublic readonly altGraphKey: boolean;\n\tpublic readonly keyCode: KeyCode;\n\tpublic readonly code: string;\n\n\tprivate _asKeybinding: number;\n\tprivate _asKeyCodeChord: KeyCodeChord;\n\n\tconstructor(source: KeyboardEvent) {\n\t\tconst e = source;\n\n\t\tthis.browserEvent = e;\n\t\tthis.target = <HTMLElement>e.target;\n\n\t\tthis.ctrlKey = e.ctrlKey;\n\t\tthis.shiftKey = e.shiftKey;\n\t\tthis.altKey = e.altKey;\n\t\tthis.metaKey = e.metaKey;\n\t\tthis.altGraphKey = e.getModifierState?.(\"AltGraph\");\n\t\tthis.keyCode = extractKeyCode(e);\n\t\tthis.code = e.code;\n\n\t\t// console.info(e.type + \": keyCode: \" + e.keyCode + \", which: \" + e.which + \", charCode: \" + e.charCode + \", detail: \" + e.detail + \" ====> \" + this.keyCode + ' -- ' + KeyCode[this.keyCode]);\n\n\t\tthis.ctrlKey = this.ctrlKey || this.keyCode === KeyCode.Ctrl;\n\t\tthis.altKey = this.altKey || this.keyCode === KeyCode.Alt;\n\t\tthis.shiftKey = this.shiftKey || this.keyCode === KeyCode.Shift;\n\t\tthis.metaKey = this.metaKey || this.keyCode === KeyCode.Meta;\n\n\t\tthis._asKeybinding = this._computeKeybinding();\n\t\tthis._asKeyCodeChord = this._computeKeyCodeChord();\n\n\t\t// console.log(`code: ${e.code}, keyCode: ${e.keyCode}, key: ${e.key}`);\n\t}\n\n\tpublic preventDefault(): void {\n\t\tif (this.browserEvent && this.browserEvent.preventDefault) {\n\t\t\tthis.browserEvent.preventDefault();\n\t\t}\n\t}\n\n\tpublic stopPropagation(): void {\n\t\tif (this.browserEvent && this.browserEvent.stopPropagation) {\n\t\t\tthis.browserEvent.stopPropagation();\n\t\t}\n\t}\n\n\tpublic toKeyCodeChord(): KeyCodeChord {\n\t\treturn this._asKeyCodeChord;\n\t}\n\n\tpublic equals(other: number): boolean {\n\t\treturn this._asKeybinding === other;\n\t}\n\n\tprivate _computeKeybinding(): number {\n\t\tlet key = KeyCode.Unknown;\n\t\tif (\n\t\t\tthis.keyCode !== KeyCode.Ctrl &&\n\t\t\tthis.keyCode !== KeyCode.Shift &&\n\t\t\tthis.keyCode !== KeyCode.Alt &&\n\t\t\tthis.keyCode !== KeyCode.Meta\n\t\t) {\n\t\t\tkey = this.keyCode;\n\t\t}\n\n\t\tlet result = 0;\n\t\tif (this.ctrlKey) {\n\t\t\tresult |= ctrlKeyMod;\n\t\t}\n\t\tif (this.altKey) {\n\t\t\tresult |= altKeyMod;\n\t\t}\n\t\tif (this.shiftKey) {\n\t\t\tresult |= shiftKeyMod;\n\t\t}\n\t\tif (this.metaKey) {\n\t\t\tresult |= metaKeyMod;\n\t\t}\n\t\tresult |= key;\n\n\t\treturn result;\n\t}\n\n\tprivate _computeKeyCodeChord(): KeyCodeChord {\n\t\tlet key = KeyCode.Unknown;\n\t\tif (\n\t\t\tthis.keyCode !== KeyCode.Ctrl &&\n\t\t\tthis.keyCode !== KeyCode.Shift &&\n\t\t\tthis.keyCode !== KeyCode.Alt &&\n\t\t\tthis.keyCode !== KeyCode.Meta\n\t\t) {\n\t\t\tkey = this.keyCode;\n\t\t}\n\t\treturn new KeyCodeChord(\n\t\t\tthis.ctrlKey,\n\t\t\tthis.shiftKey,\n\t\t\tthis.altKey,\n\t\t\tthis.metaKey,\n\t\t\tkey,\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
