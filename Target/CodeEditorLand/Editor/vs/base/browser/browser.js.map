{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/browser/browser.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from \"../common/event.js\";\nimport { type CodeWindow, mainWindow } from \"./window.js\";\n\nclass WindowManager {\n\tstatic readonly INSTANCE = new WindowManager();\n\n\t// --- Zoom Level\n\n\tprivate readonly mapWindowIdToZoomLevel = new Map<number, number>();\n\n\tprivate readonly _onDidChangeZoomLevel = new Emitter<number>();\n\treadonly onDidChangeZoomLevel = this._onDidChangeZoomLevel.event;\n\n\tgetZoomLevel(targetWindow: Window): number {\n\t\treturn (\n\t\t\tthis.mapWindowIdToZoomLevel.get(this.getWindowId(targetWindow)) ?? 0\n\t\t);\n\t}\n\tsetZoomLevel(zoomLevel: number, targetWindow: Window): void {\n\t\tif (this.getZoomLevel(targetWindow) === zoomLevel) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst targetWindowId = this.getWindowId(targetWindow);\n\t\tthis.mapWindowIdToZoomLevel.set(targetWindowId, zoomLevel);\n\t\tthis._onDidChangeZoomLevel.fire(targetWindowId);\n\t}\n\n\t// --- Zoom Factor\n\n\tprivate readonly mapWindowIdToZoomFactor = new Map<number, number>();\n\n\tgetZoomFactor(targetWindow: Window): number {\n\t\treturn (\n\t\t\tthis.mapWindowIdToZoomFactor.get(this.getWindowId(targetWindow)) ??\n\t\t\t1\n\t\t);\n\t}\n\tsetZoomFactor(zoomFactor: number, targetWindow: Window): void {\n\t\tthis.mapWindowIdToZoomFactor.set(\n\t\t\tthis.getWindowId(targetWindow),\n\t\t\tzoomFactor,\n\t\t);\n\t}\n\n\t// --- Fullscreen\n\n\tprivate readonly _onDidChangeFullscreen = new Emitter<number>();\n\treadonly onDidChangeFullscreen = this._onDidChangeFullscreen.event;\n\n\tprivate readonly mapWindowIdToFullScreen = new Map<number, boolean>();\n\n\tsetFullscreen(fullscreen: boolean, targetWindow: Window): void {\n\t\tif (this.isFullscreen(targetWindow) === fullscreen) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst windowId = this.getWindowId(targetWindow);\n\t\tthis.mapWindowIdToFullScreen.set(windowId, fullscreen);\n\t\tthis._onDidChangeFullscreen.fire(windowId);\n\t}\n\tisFullscreen(targetWindow: Window): boolean {\n\t\treturn !!this.mapWindowIdToFullScreen.get(\n\t\t\tthis.getWindowId(targetWindow),\n\t\t);\n\t}\n\n\tprivate getWindowId(targetWindow: Window): number {\n\t\treturn (targetWindow as CodeWindow).vscodeWindowId;\n\t}\n}\n\nexport function addMatchMediaChangeListener(\n\ttargetWindow: Window,\n\tquery: string | MediaQueryList,\n\tcallback: (this: MediaQueryList, ev: MediaQueryListEvent) => any,\n): void {\n\tif (typeof query === \"string\") {\n\t\tquery = targetWindow.matchMedia(query);\n\t}\n\tquery.addEventListener(\"change\", callback);\n}\n\n/** A zoom index, e.g. 1, 2, 3 */\nexport function setZoomLevel(zoomLevel: number, targetWindow: Window): void {\n\tWindowManager.INSTANCE.setZoomLevel(zoomLevel, targetWindow);\n}\nexport function getZoomLevel(targetWindow: Window): number {\n\treturn WindowManager.INSTANCE.getZoomLevel(targetWindow);\n}\nexport const onDidChangeZoomLevel = WindowManager.INSTANCE.onDidChangeZoomLevel;\n\n/** The zoom scale for an index, e.g. 1, 1.2, 1.4 */\nexport function getZoomFactor(targetWindow: Window): number {\n\treturn WindowManager.INSTANCE.getZoomFactor(targetWindow);\n}\nexport function setZoomFactor(zoomFactor: number, targetWindow: Window): void {\n\tWindowManager.INSTANCE.setZoomFactor(zoomFactor, targetWindow);\n}\n\nexport function setFullscreen(fullscreen: boolean, targetWindow: Window): void {\n\tWindowManager.INSTANCE.setFullscreen(fullscreen, targetWindow);\n}\nexport function isFullscreen(targetWindow: Window): boolean {\n\treturn WindowManager.INSTANCE.isFullscreen(targetWindow);\n}\nexport const onDidChangeFullscreen =\n\tWindowManager.INSTANCE.onDidChangeFullscreen;\n\nconst userAgent = navigator.userAgent;\n\nexport const isFirefox = userAgent.indexOf(\"Firefox\") >= 0;\nexport const isWebKit = userAgent.indexOf(\"AppleWebKit\") >= 0;\nexport const isChrome = userAgent.indexOf(\"Chrome\") >= 0;\nexport const isSafari = !isChrome && userAgent.indexOf(\"Safari\") >= 0;\nexport const isWebkitWebView = !isChrome && !isSafari && isWebKit;\nexport const isElectron = userAgent.indexOf(\"Electron/\") >= 0;\nexport const isAndroid = userAgent.indexOf(\"Android\") >= 0;\n\nlet standalone = false;\nif (typeof mainWindow.matchMedia === \"function\") {\n\tconst standaloneMatchMedia = mainWindow.matchMedia(\n\t\t\"(display-mode: standalone) or (display-mode: window-controls-overlay)\",\n\t);\n\tconst fullScreenMatchMedia = mainWindow.matchMedia(\n\t\t\"(display-mode: fullscreen)\",\n\t);\n\tstandalone = standaloneMatchMedia.matches;\n\taddMatchMediaChangeListener(\n\t\tmainWindow,\n\t\tstandaloneMatchMedia,\n\t\t({ matches }) => {\n\t\t\t// entering fullscreen would change standaloneMatchMedia.matches to false\n\t\t\t// if standalone is true (running as PWA) and entering fullscreen, skip this change\n\t\t\tif (standalone && fullScreenMatchMedia.matches) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// otherwise update standalone (browser to PWA or PWA to browser)\n\t\t\tstandalone = matches;\n\t\t},\n\t);\n}\nexport function isStandalone(): boolean {\n\treturn standalone;\n}\n\n// Visible means that the feature is enabled, not necessarily being rendered\n// e.g. visible is true even in fullscreen mode where the controls are hidden\n// See docs at https://developer.mozilla.org/en-US/docs/Web/API/WindowControlsOverlay/visible\nexport function isWCOEnabled(): boolean {\n\treturn (navigator as any)?.windowControlsOverlay?.visible;\n}\n\n// Returns the bounding rect of the titlebar area if it is supported and defined\n// See docs at https://developer.mozilla.org/en-US/docs/Web/API/WindowControlsOverlay/getTitlebarAreaRect\nexport function getWCOTitlebarAreaRect(\n\ttargetWindow: Window,\n): DOMRect | undefined {\n\treturn (\n\t\ttargetWindow.navigator as any\n\t)?.windowControlsOverlay?.getTitlebarAreaRect();\n}\n"],
  "mappings": "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",
  "names": []
}
