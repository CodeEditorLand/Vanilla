{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/browser/deviceAccess.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// https://wicg.github.io/webusb/\n\nexport interface UsbDeviceData {\n\treadonly deviceClass: number;\n\treadonly deviceProtocol: number;\n\treadonly deviceSubclass: number;\n\treadonly deviceVersionMajor: number;\n\treadonly deviceVersionMinor: number;\n\treadonly deviceVersionSubminor: number;\n\treadonly manufacturerName?: string;\n\treadonly productId: number;\n\treadonly productName?: string;\n\treadonly serialNumber?: string;\n\treadonly usbVersionMajor: number;\n\treadonly usbVersionMinor: number;\n\treadonly usbVersionSubminor: number;\n\treadonly vendorId: number;\n}\n\nexport async function requestUsbDevice(options?: { filters?: unknown[] }): Promise<UsbDeviceData | undefined> {\n\tconst usb = (navigator as any).usb;\n\tif (!usb) {\n\t\treturn undefined;\n\t}\n\n\tconst device = await usb.requestDevice({ filters: options?.filters ?? [] });\n\tif (!device) {\n\t\treturn undefined;\n\t}\n\n\treturn {\n\t\tdeviceClass: device.deviceClass,\n\t\tdeviceProtocol: device.deviceProtocol,\n\t\tdeviceSubclass: device.deviceSubclass,\n\t\tdeviceVersionMajor: device.deviceVersionMajor,\n\t\tdeviceVersionMinor: device.deviceVersionMinor,\n\t\tdeviceVersionSubminor: device.deviceVersionSubminor,\n\t\tmanufacturerName: device.manufacturerName,\n\t\tproductId: device.productId,\n\t\tproductName: device.productName,\n\t\tserialNumber: device.serialNumber,\n\t\tusbVersionMajor: device.usbVersionMajor,\n\t\tusbVersionMinor: device.usbVersionMinor,\n\t\tusbVersionSubminor: device.usbVersionSubminor,\n\t\tvendorId: device.vendorId,\n\t};\n}\n\n// https://wicg.github.io/serial/\n\nexport interface SerialPortData {\n\treadonly usbVendorId?: number | undefined;\n\treadonly usbProductId?: number | undefined;\n}\n\nexport async function requestSerialPort(options?: { filters?: unknown[] }): Promise<SerialPortData | undefined> {\n\tconst serial = (navigator as any).serial;\n\tif (!serial) {\n\t\treturn undefined;\n\t}\n\n\tconst port = await serial.requestPort({ filters: options?.filters ?? [] });\n\tif (!port) {\n\t\treturn undefined;\n\t}\n\n\tconst info = port.getInfo();\n\treturn {\n\t\tusbVendorId: info.usbVendorId,\n\t\tusbProductId: info.usbProductId\n\t};\n}\n\n// https://wicg.github.io/webhid/\n\nexport interface HidDeviceData {\n\treadonly opened: boolean;\n\treadonly vendorId: number;\n\treadonly productId: number;\n\treadonly productName: string;\n\treadonly collections: [];\n}\n\nexport async function requestHidDevice(options?: { filters?: unknown[] }): Promise<HidDeviceData | undefined> {\n\tconst hid = (navigator as any).hid;\n\tif (!hid) {\n\t\treturn undefined;\n\t}\n\n\tconst devices = await hid.requestDevice({ filters: options?.filters ?? [] });\n\tif (!devices.length) {\n\t\treturn undefined;\n\t}\n\n\tconst device = devices[0];\n\treturn {\n\t\topened: device.opened,\n\t\tvendorId: device.vendorId,\n\t\tproductId: device.productId,\n\t\tproductName: device.productName,\n\t\tcollections: device.collections\n\t};\n}\n"],
  "mappings": ";;AAwBA,eAAsB,iBAAiB,SAAuE;AAC7G,QAAM,MAAO,UAAkB;AAC/B,MAAI,CAAC,KAAK;AACT,WAAO;AAAA,EACR;AAEA,QAAM,SAAS,MAAM,IAAI,cAAc,EAAE,SAAS,SAAS,WAAW,CAAC,EAAE,CAAC;AAC1E,MAAI,CAAC,QAAQ;AACZ,WAAO;AAAA,EACR;AAEA,SAAO;AAAA,IACN,aAAa,OAAO;AAAA,IACpB,gBAAgB,OAAO;AAAA,IACvB,gBAAgB,OAAO;AAAA,IACvB,oBAAoB,OAAO;AAAA,IAC3B,oBAAoB,OAAO;AAAA,IAC3B,uBAAuB,OAAO;AAAA,IAC9B,kBAAkB,OAAO;AAAA,IACzB,WAAW,OAAO;AAAA,IAClB,aAAa,OAAO;AAAA,IACpB,cAAc,OAAO;AAAA,IACrB,iBAAiB,OAAO;AAAA,IACxB,iBAAiB,OAAO;AAAA,IACxB,oBAAoB,OAAO;AAAA,IAC3B,UAAU,OAAO;AAAA,EAClB;AACD;AA3BsB;AAoCtB,eAAsB,kBAAkB,SAAwE;AAC/G,QAAM,SAAU,UAAkB;AAClC,MAAI,CAAC,QAAQ;AACZ,WAAO;AAAA,EACR;AAEA,QAAM,OAAO,MAAM,OAAO,YAAY,EAAE,SAAS,SAAS,WAAW,CAAC,EAAE,CAAC;AACzE,MAAI,CAAC,MAAM;AACV,WAAO;AAAA,EACR;AAEA,QAAM,OAAO,KAAK,QAAQ;AAC1B,SAAO;AAAA,IACN,aAAa,KAAK;AAAA,IAClB,cAAc,KAAK;AAAA,EACpB;AACD;AAhBsB;AA4BtB,eAAsB,iBAAiB,SAAuE;AAC7G,QAAM,MAAO,UAAkB;AAC/B,MAAI,CAAC,KAAK;AACT,WAAO;AAAA,EACR;AAEA,QAAM,UAAU,MAAM,IAAI,cAAc,EAAE,SAAS,SAAS,WAAW,CAAC,EAAE,CAAC;AAC3E,MAAI,CAAC,QAAQ,QAAQ;AACpB,WAAO;AAAA,EACR;AAEA,QAAM,SAAS,QAAQ,CAAC;AACxB,SAAO;AAAA,IACN,QAAQ,OAAO;AAAA,IACf,UAAU,OAAO;AAAA,IACjB,WAAW,OAAO;AAAA,IAClB,aAAa,OAAO;AAAA,IACpB,aAAa,OAAO;AAAA,EACrB;AACD;AAnBsB;",
  "names": []
}
