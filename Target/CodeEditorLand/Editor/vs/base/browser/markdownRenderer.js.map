{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/browser/markdownRenderer.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from \"../common/errors.js\";\nimport { Event } from \"../common/event.js\";\nimport {\n\ttype IMarkdownString,\n\ttype MarkdownStringTrustedOptions,\n\tescapeDoubleQuotes,\n\tparseHrefAndDimensions,\n\tremoveMarkdownEscapes,\n} from \"../common/htmlContent.js\";\nimport { markdownEscapeEscapedIcons } from \"../common/iconLabels.js\";\nimport { defaultGenerator } from \"../common/idGenerator.js\";\nimport { KeyCode } from \"../common/keyCodes.js\";\nimport { Lazy } from \"../common/lazy.js\";\nimport {\n\tDisposableStore,\n\ttype IDisposable,\n\ttoDisposable,\n} from \"../common/lifecycle.js\";\nimport * as marked from \"../common/marked/marked.js\";\nimport { parse } from \"../common/marshalling.js\";\nimport { FileAccess, Schemas } from \"../common/network.js\";\nimport { cloneAndChange } from \"../common/objects.js\";\nimport { dirname, resolvePath } from \"../common/resources.js\";\nimport { escape } from \"../common/strings.js\";\nimport { URI } from \"../common/uri.js\";\nimport * as DOM from \"./dom.js\";\nimport * as dompurify from \"./dompurify/dompurify.js\";\nimport { DomEmitter } from \"./event.js\";\nimport {\n\ttype FormattedTextRenderOptions,\n\tcreateElement,\n} from \"./formattedTextRenderer.js\";\nimport { StandardKeyboardEvent } from \"./keyboardEvent.js\";\nimport { StandardMouseEvent } from \"./mouseEvent.js\";\nimport { renderLabelWithIcons } from \"./ui/iconLabel/iconLabels.js\";\n\nexport interface MarkedOptions extends marked.MarkedOptions {\n\tbaseUrl?: never;\n}\n\nexport interface MarkdownRenderOptions extends FormattedTextRenderOptions {\n\treadonly codeBlockRenderer?: (\n\t\tlanguageId: string,\n\t\tvalue: string,\n\t) => Promise<HTMLElement>;\n\treadonly codeBlockRendererSync?: (\n\t\tlanguageId: string,\n\t\tvalue: string,\n\t) => HTMLElement;\n\treadonly asyncRenderCallback?: () => void;\n\treadonly fillInIncompleteTokens?: boolean;\n\treadonly remoteImageIsAllowed?: (uri: URI) => boolean;\n\treadonly sanitizerOptions?: ISanitizerOptions;\n}\n\nexport interface ISanitizerOptions {\n\treplaceWithPlaintext?: boolean;\n\tallowedTags?: string[];\n}\n\nconst defaultMarkedRenderers = Object.freeze({\n\timage: ({ href, title, text }: marked.Tokens.Image): string => {\n\t\tlet dimensions: string[] = [];\n\t\tlet attributes: string[] = [];\n\t\tif (href) {\n\t\t\t({ href, dimensions } = parseHrefAndDimensions(href));\n\t\t\tattributes.push(`src=\"${escapeDoubleQuotes(href)}\"`);\n\t\t}\n\t\tif (text) {\n\t\t\tattributes.push(`alt=\"${escapeDoubleQuotes(text)}\"`);\n\t\t}\n\t\tif (title) {\n\t\t\tattributes.push(`title=\"${escapeDoubleQuotes(title)}\"`);\n\t\t}\n\t\tif (dimensions.length) {\n\t\t\tattributes = attributes.concat(dimensions);\n\t\t}\n\t\treturn \"<img \" + attributes.join(\" \") + \">\";\n\t},\n\n\tparagraph(\n\t\tthis: marked.Renderer,\n\t\t{ tokens }: marked.Tokens.Paragraph,\n\t): string {\n\t\treturn `<p>${this.parser.parseInline(tokens)}</p>`;\n\t},\n\n\tlink(\n\t\tthis: marked.Renderer,\n\t\t{ href, title, tokens }: marked.Tokens.Link,\n\t): string {\n\t\tlet text = this.parser.parseInline(tokens);\n\t\tif (typeof href !== \"string\") {\n\t\t\treturn \"\";\n\t\t}\n\n\t\t// Remove markdown escapes. Workaround for https://github.com/chjj/marked/issues/829\n\t\tif (href === text) {\n\t\t\t// raw link case\n\t\t\ttext = removeMarkdownEscapes(text);\n\t\t}\n\n\t\ttitle =\n\t\t\ttypeof title === \"string\"\n\t\t\t\t? escapeDoubleQuotes(removeMarkdownEscapes(title))\n\t\t\t\t: \"\";\n\t\thref = removeMarkdownEscapes(href);\n\n\t\t// HTML Encode href\n\t\thref = href\n\t\t\t.replace(/&/g, \"&amp;\")\n\t\t\t.replace(/</g, \"&lt;\")\n\t\t\t.replace(/>/g, \"&gt;\")\n\t\t\t.replace(/\"/g, \"&quot;\")\n\t\t\t.replace(/'/g, \"&#39;\");\n\n\t\treturn `<a href=\"${href}\" title=\"${title || href}\" draggable=\"false\">${text}</a>`;\n\t},\n});\n\n/**\n * Low-level way create a html element from a markdown string.\n *\n * **Note** that for most cases you should be using [`MarkdownRenderer`](./src/vs/editor/contrib/markdownRenderer/browser/markdownRenderer.ts)\n * which comes with support for pretty code block rendering and which uses the default way of handling links.\n */\nexport function renderMarkdown(\n\tmarkdown: IMarkdownString,\n\toptions: MarkdownRenderOptions = {},\n\tmarkedOptions: MarkedOptions = {},\n): { element: HTMLElement; dispose: () => void } {\n\tconst disposables = new DisposableStore();\n\tlet isDisposed = false;\n\n\tconst element = createElement(options);\n\n\tconst _uriMassage = (part: string): string => {\n\t\tlet data: any;\n\t\ttry {\n\t\t\tdata = parse(decodeURIComponent(part));\n\t\t} catch (e) {\n\t\t\t// ignore\n\t\t}\n\t\tif (!data) {\n\t\t\treturn part;\n\t\t}\n\t\tdata = cloneAndChange(data, (value) => {\n\t\t\tif (markdown.uris && markdown.uris[value]) {\n\t\t\t\treturn URI.revive(markdown.uris[value]);\n\t\t\t} else {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t});\n\t\treturn encodeURIComponent(JSON.stringify(data));\n\t};\n\n\tconst _href = (href: string, isDomUri: boolean): string => {\n\t\tconst data = markdown.uris && markdown.uris[href];\n\t\tlet uri = URI.revive(data);\n\t\tif (isDomUri) {\n\t\t\tif (href.startsWith(Schemas.data + \":\")) {\n\t\t\t\treturn href;\n\t\t\t}\n\t\t\tif (!uri) {\n\t\t\t\turi = URI.parse(href);\n\t\t\t}\n\t\t\t// this URI will end up as \"src\"-attribute of a dom node\n\t\t\t// and because of that special rewriting needs to be done\n\t\t\t// so that the URI uses a protocol that's understood by\n\t\t\t// browsers (like http or https)\n\t\t\treturn FileAccess.uriToBrowserUri(uri).toString(true);\n\t\t}\n\t\tif (!uri) {\n\t\t\treturn href;\n\t\t}\n\t\tif (URI.parse(href).toString() === uri.toString()) {\n\t\t\treturn href; // no transformation performed\n\t\t}\n\t\tif (uri.query) {\n\t\t\turi = uri.with({ query: _uriMassage(uri.query) });\n\t\t}\n\t\treturn uri.toString();\n\t};\n\n\tconst renderer = new marked.Renderer();\n\trenderer.image = defaultMarkedRenderers.image;\n\trenderer.link = defaultMarkedRenderers.link;\n\trenderer.paragraph = defaultMarkedRenderers.paragraph;\n\n\t// Will collect [id, renderedElement] tuples\n\tconst codeBlocks: Promise<[string, HTMLElement]>[] = [];\n\tconst syncCodeBlocks: [string, HTMLElement][] = [];\n\n\tif (options.codeBlockRendererSync) {\n\t\trenderer.code = ({ text, lang }: marked.Tokens.Code) => {\n\t\t\tconst id = defaultGenerator.nextId();\n\t\t\tconst value = options.codeBlockRendererSync!(\n\t\t\t\tpostProcessCodeBlockLanguageId(lang),\n\t\t\t\ttext,\n\t\t\t);\n\t\t\tsyncCodeBlocks.push([id, value]);\n\t\t\treturn `<div class=\"code\" data-code=\"${id}\">${escape(text)}</div>`;\n\t\t};\n\t} else if (options.codeBlockRenderer) {\n\t\trenderer.code = ({ text, lang }: marked.Tokens.Code) => {\n\t\t\tconst id = defaultGenerator.nextId();\n\t\t\tconst value = options.codeBlockRenderer!(\n\t\t\t\tpostProcessCodeBlockLanguageId(lang),\n\t\t\t\ttext,\n\t\t\t);\n\t\t\tcodeBlocks.push(value.then((element) => [id, element]));\n\t\t\treturn `<div class=\"code\" data-code=\"${id}\">${escape(text)}</div>`;\n\t\t};\n\t}\n\n\tif (options.actionHandler) {\n\t\tconst _activateLink = (\n\t\t\tevent: StandardMouseEvent | StandardKeyboardEvent,\n\t\t): void => {\n\t\t\tconst target = event.target.closest(\"a[data-href]\");\n\t\t\tif (!DOM.isHTMLElement(target)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tlet href = target.dataset[\"href\"];\n\t\t\t\tif (href) {\n\t\t\t\t\tif (markdown.baseUri) {\n\t\t\t\t\t\thref = resolveWithBaseUri(\n\t\t\t\t\t\t\tURI.from(markdown.baseUri),\n\t\t\t\t\t\t\thref,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\toptions.actionHandler!.callback(href, event);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tonUnexpectedError(err);\n\t\t\t} finally {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t};\n\t\tconst onClick = options.actionHandler.disposables.add(\n\t\t\tnew DomEmitter(element, \"click\"),\n\t\t);\n\t\tconst onAuxClick = options.actionHandler.disposables.add(\n\t\t\tnew DomEmitter(element, \"auxclick\"),\n\t\t);\n\t\toptions.actionHandler.disposables.add(\n\t\t\tEvent.any(\n\t\t\t\tonClick.event,\n\t\t\t\tonAuxClick.event,\n\t\t\t)((e) => {\n\t\t\t\tconst mouseEvent = new StandardMouseEvent(\n\t\t\t\t\tDOM.getWindow(element),\n\t\t\t\t\te,\n\t\t\t\t);\n\t\t\t\tif (!mouseEvent.leftButton && !mouseEvent.middleButton) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t_activateLink(mouseEvent);\n\t\t\t}),\n\t\t);\n\t\toptions.actionHandler.disposables.add(\n\t\t\tDOM.addDisposableListener(element, \"keydown\", (e) => {\n\t\t\t\tconst keyboardEvent = new StandardKeyboardEvent(e);\n\t\t\t\tif (\n\t\t\t\t\t!keyboardEvent.equals(KeyCode.Space) &&\n\t\t\t\t\t!keyboardEvent.equals(KeyCode.Enter)\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t_activateLink(keyboardEvent);\n\t\t\t}),\n\t\t);\n\t}\n\n\tif (!markdown.supportHtml) {\n\t\t// Note: we always pass the output through dompurify after this so that we don't rely on\n\t\t// marked for real sanitization.\n\t\trenderer.html = ({ text }) => {\n\t\t\tif (options.sanitizerOptions?.replaceWithPlaintext) {\n\t\t\t\treturn escape(text);\n\t\t\t}\n\n\t\t\tconst match = markdown.isTrusted\n\t\t\t\t? text.match(/^(<span[^>]+>)|(<\\/\\s*span>)$/)\n\t\t\t\t: undefined;\n\t\t\treturn match ? text : \"\";\n\t\t};\n\t}\n\n\tmarkedOptions.renderer = renderer;\n\n\t// values that are too long will freeze the UI\n\tlet value = markdown.value ?? \"\";\n\tif (value.length > 100_000) {\n\t\tvalue = `${value.substr(0, 100_000)}\u2026`;\n\t}\n\t// escape theme icons\n\tif (markdown.supportThemeIcons) {\n\t\tvalue = markdownEscapeEscapedIcons(value);\n\t}\n\n\tlet renderedMarkdown: string;\n\tif (options.fillInIncompleteTokens) {\n\t\t// The defaults are applied by parse but not lexer()/parser(), and they need to be present\n\t\tconst opts = {\n\t\t\t...marked.defaults,\n\t\t\t...markedOptions,\n\t\t};\n\t\tconst tokens = marked.lexer(value, opts);\n\t\tconst newTokens = fillInIncompleteTokens(tokens);\n\t\trenderedMarkdown = marked.parser(newTokens, opts);\n\t} else {\n\t\trenderedMarkdown = marked.parse(value, {\n\t\t\t...markedOptions,\n\t\t\tasync: false,\n\t\t});\n\t}\n\n\t// Rewrite theme icons\n\tif (markdown.supportThemeIcons) {\n\t\tconst elements = renderLabelWithIcons(renderedMarkdown);\n\t\trenderedMarkdown = elements\n\t\t\t.map((e) => (typeof e === \"string\" ? e : e.outerHTML))\n\t\t\t.join(\"\");\n\t}\n\n\tconst htmlParser = new DOMParser();\n\tconst markdownHtmlDoc = htmlParser.parseFromString(\n\t\tsanitizeRenderedMarkdown(\n\t\t\t{ isTrusted: markdown.isTrusted, ...options.sanitizerOptions },\n\t\t\trenderedMarkdown,\n\t\t) as unknown as string,\n\t\t\"text/html\",\n\t);\n\n\tmarkdownHtmlDoc.body\n\t\t.querySelectorAll(\"img, audio, video, source\")\n\t\t.forEach((img) => {\n\t\t\tconst src = img.getAttribute(\"src\"); // Get the raw 'src' attribute value as text, not the resolved 'src'\n\t\t\tif (src) {\n\t\t\t\tlet href = src;\n\t\t\t\ttry {\n\t\t\t\t\tif (markdown.baseUri) {\n\t\t\t\t\t\t// absolute or relative local path, or file: uri\n\t\t\t\t\t\thref = resolveWithBaseUri(\n\t\t\t\t\t\t\tURI.from(markdown.baseUri),\n\t\t\t\t\t\t\thref,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {}\n\n\t\t\t\timg.setAttribute(\"src\", _href(href, true));\n\n\t\t\t\tif (options.remoteImageIsAllowed) {\n\t\t\t\t\tconst uri = URI.parse(href);\n\t\t\t\t\tif (\n\t\t\t\t\t\turi.scheme !== Schemas.file &&\n\t\t\t\t\t\turi.scheme !== Schemas.data &&\n\t\t\t\t\t\t!options.remoteImageIsAllowed(uri)\n\t\t\t\t\t) {\n\t\t\t\t\t\timg.replaceWith(DOM.$(\"\", undefined, img.outerHTML));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\tmarkdownHtmlDoc.body.querySelectorAll(\"a\").forEach((a) => {\n\t\tconst href = a.getAttribute(\"href\"); // Get the raw 'href' attribute value as text, not the resolved 'href'\n\t\ta.setAttribute(\"href\", \"\"); // Clear out href. We use the `data-href` for handling clicks instead\n\t\tif (\n\t\t\t!href ||\n\t\t\t/^data:|javascript:/i.test(href) ||\n\t\t\t(/^command:/i.test(href) && !markdown.isTrusted) ||\n\t\t\t/^command:(\\/\\/\\/)?_workbench\\.downloadResource/i.test(href)\n\t\t) {\n\t\t\t// drop the link\n\t\t\ta.replaceWith(...a.childNodes);\n\t\t} else {\n\t\t\tlet resolvedHref = _href(href, false);\n\t\t\tif (markdown.baseUri) {\n\t\t\t\tresolvedHref = resolveWithBaseUri(\n\t\t\t\t\tURI.from(markdown.baseUri),\n\t\t\t\t\thref,\n\t\t\t\t);\n\t\t\t}\n\t\t\ta.dataset.href = resolvedHref;\n\t\t}\n\t});\n\n\telement.innerHTML = sanitizeRenderedMarkdown(\n\t\t{ isTrusted: markdown.isTrusted, ...options.sanitizerOptions },\n\t\tmarkdownHtmlDoc.body.innerHTML,\n\t) as unknown as string;\n\n\tif (codeBlocks.length > 0) {\n\t\tPromise.all(codeBlocks).then((tuples) => {\n\t\t\tif (isDisposed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst renderedElements = new Map(tuples);\n\t\t\tconst placeholderElements =\n\t\t\t\telement.querySelectorAll<HTMLDivElement>(`div[data-code]`);\n\t\t\tfor (const placeholderElement of placeholderElements) {\n\t\t\t\tconst renderedElement = renderedElements.get(\n\t\t\t\t\tplaceholderElement.dataset[\"code\"] ?? \"\",\n\t\t\t\t);\n\t\t\t\tif (renderedElement) {\n\t\t\t\t\tDOM.reset(placeholderElement, renderedElement);\n\t\t\t\t}\n\t\t\t}\n\t\t\toptions.asyncRenderCallback?.();\n\t\t});\n\t} else if (syncCodeBlocks.length > 0) {\n\t\tconst renderedElements = new Map(syncCodeBlocks);\n\t\tconst placeholderElements =\n\t\t\telement.querySelectorAll<HTMLDivElement>(`div[data-code]`);\n\t\tfor (const placeholderElement of placeholderElements) {\n\t\t\tconst renderedElement = renderedElements.get(\n\t\t\t\tplaceholderElement.dataset[\"code\"] ?? \"\",\n\t\t\t);\n\t\t\tif (renderedElement) {\n\t\t\t\tDOM.reset(placeholderElement, renderedElement);\n\t\t\t}\n\t\t}\n\t}\n\n\t// signal size changes for image tags\n\tif (options.asyncRenderCallback) {\n\t\tfor (const img of element.getElementsByTagName(\"img\")) {\n\t\t\tconst listener = disposables.add(\n\t\t\t\tDOM.addDisposableListener(img, \"load\", () => {\n\t\t\t\t\tlistener.dispose();\n\t\t\t\t\toptions.asyncRenderCallback!();\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t}\n\n\treturn {\n\t\telement,\n\t\tdispose: () => {\n\t\t\tisDisposed = true;\n\t\t\tdisposables.dispose();\n\t\t},\n\t};\n}\n\nfunction postProcessCodeBlockLanguageId(lang: string | undefined): string {\n\tif (!lang) {\n\t\treturn \"\";\n\t}\n\n\tconst parts = lang.split(/[\\s+|:|,|{|?]/, 1);\n\tif (parts.length) {\n\t\treturn parts[0];\n\t}\n\treturn lang;\n}\n\nfunction resolveWithBaseUri(baseUri: URI, href: string): string {\n\tconst hasScheme = /^\\w[\\w\\d+.-]*:/.test(href);\n\tif (hasScheme) {\n\t\treturn href;\n\t}\n\n\tif (baseUri.path.endsWith(\"/\")) {\n\t\treturn resolvePath(baseUri, href).toString();\n\t} else {\n\t\treturn resolvePath(dirname(baseUri), href).toString();\n\t}\n}\n\ninterface IInternalSanitizerOptions extends ISanitizerOptions {\n\tisTrusted?: boolean | MarkdownStringTrustedOptions;\n}\n\nconst selfClosingTags = [\n\t\"area\",\n\t\"base\",\n\t\"br\",\n\t\"col\",\n\t\"command\",\n\t\"embed\",\n\t\"hr\",\n\t\"img\",\n\t\"input\",\n\t\"keygen\",\n\t\"link\",\n\t\"meta\",\n\t\"param\",\n\t\"source\",\n\t\"track\",\n\t\"wbr\",\n];\n\nfunction sanitizeRenderedMarkdown(\n\toptions: IInternalSanitizerOptions,\n\trenderedMarkdown: string,\n): TrustedHTML {\n\tconst { config, allowedSchemes } = getSanitizerOptions(options);\n\tconst store = new DisposableStore();\n\tstore.add(\n\t\taddDompurifyHook(\"uponSanitizeAttribute\", (element, e) => {\n\t\t\tif (e.attrName === \"style\" || e.attrName === \"class\") {\n\t\t\t\tif (element.tagName === \"SPAN\") {\n\t\t\t\t\tif (e.attrName === \"style\") {\n\t\t\t\t\t\te.keepAttr =\n\t\t\t\t\t\t\t/^(color:(#[0-9a-fA-F]+|var\\(--vscode(-[a-zA-Z0-9]+)+\\));)?(background-color:(#[0-9a-fA-F]+|var\\(--vscode(-[a-zA-Z0-9]+)+\\));)?(border-radius:[0-9]+px;)?$/.test(\n\t\t\t\t\t\t\t\te.attrValue,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else if (e.attrName === \"class\") {\n\t\t\t\t\t\te.keepAttr =\n\t\t\t\t\t\t\t/^codicon codicon-[a-z-]+( codicon-modifier-[a-z-]+)?$/.test(\n\t\t\t\t\t\t\t\te.attrValue,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\te.keepAttr = false;\n\t\t\t\treturn;\n\t\t\t} else if (\n\t\t\t\telement.tagName === \"INPUT\" &&\n\t\t\t\telement.attributes.getNamedItem(\"type\")?.value === \"checkbox\"\n\t\t\t) {\n\t\t\t\tif (\n\t\t\t\t\t(e.attrName === \"type\" && e.attrValue === \"checkbox\") ||\n\t\t\t\t\te.attrName === \"disabled\" ||\n\t\t\t\t\te.attrName === \"checked\"\n\t\t\t\t) {\n\t\t\t\t\te.keepAttr = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\te.keepAttr = false;\n\t\t\t}\n\t\t}),\n\t);\n\n\tstore.add(\n\t\taddDompurifyHook(\"uponSanitizeElement\", (element, e) => {\n\t\t\tif (e.tagName === \"input\") {\n\t\t\t\tif (\n\t\t\t\t\telement.attributes.getNamedItem(\"type\")?.value ===\n\t\t\t\t\t\"checkbox\"\n\t\t\t\t) {\n\t\t\t\t\telement.setAttribute(\"disabled\", \"\");\n\t\t\t\t} else if (!options.replaceWithPlaintext) {\n\t\t\t\t\telement.remove();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\toptions.replaceWithPlaintext &&\n\t\t\t\t!e.allowedTags[e.tagName] &&\n\t\t\t\te.tagName !== \"body\"\n\t\t\t) {\n\t\t\t\tif (element.parentElement) {\n\t\t\t\t\tlet startTagText: string;\n\t\t\t\t\tlet endTagText: string | undefined;\n\t\t\t\t\tif (e.tagName === \"#comment\") {\n\t\t\t\t\t\tstartTagText = `<!--${element.textContent}-->`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst isSelfClosing = selfClosingTags.includes(\n\t\t\t\t\t\t\te.tagName,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst attrString = element.attributes.length\n\t\t\t\t\t\t\t? \" \" +\n\t\t\t\t\t\t\t\tArray.from(element.attributes)\n\t\t\t\t\t\t\t\t\t.map(\n\t\t\t\t\t\t\t\t\t\t(attr) =>\n\t\t\t\t\t\t\t\t\t\t\t`${attr.name}=\"${attr.value}\"`,\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t.join(\" \")\n\t\t\t\t\t\t\t: \"\";\n\t\t\t\t\t\tstartTagText = `<${e.tagName}${attrString}>`;\n\t\t\t\t\t\tif (!isSelfClosing) {\n\t\t\t\t\t\t\tendTagText = `</${e.tagName}>`;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst fragment = document.createDocumentFragment();\n\t\t\t\t\tconst textNode =\n\t\t\t\t\t\telement.parentElement.ownerDocument.createTextNode(\n\t\t\t\t\t\t\tstartTagText,\n\t\t\t\t\t\t);\n\t\t\t\t\tfragment.appendChild(textNode);\n\t\t\t\t\tconst endTagTextNode = endTagText\n\t\t\t\t\t\t? element.parentElement.ownerDocument.createTextNode(\n\t\t\t\t\t\t\t\tendTagText,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t: undefined;\n\t\t\t\t\twhile (element.firstChild) {\n\t\t\t\t\t\tfragment.appendChild(element.firstChild);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (endTagTextNode) {\n\t\t\t\t\t\tfragment.appendChild(endTagTextNode);\n\t\t\t\t\t}\n\n\t\t\t\t\telement.parentElement.replaceChild(fragment, element);\n\t\t\t\t}\n\t\t\t}\n\t\t}),\n\t);\n\n\tstore.add(DOM.hookDomPurifyHrefAndSrcSanitizer(allowedSchemes));\n\n\ttry {\n\t\treturn dompurify.sanitize(renderedMarkdown, {\n\t\t\t...config,\n\t\t\tRETURN_TRUSTED_TYPE: true,\n\t\t});\n\t} finally {\n\t\tstore.dispose();\n\t}\n}\n\nexport const allowedMarkdownAttr = [\n\t\"align\",\n\t\"autoplay\",\n\t\"alt\",\n\t\"checked\",\n\t\"class\",\n\t\"colspan\",\n\t\"controls\",\n\t\"data-code\",\n\t\"data-href\",\n\t\"disabled\",\n\t\"draggable\",\n\t\"height\",\n\t\"href\",\n\t\"loop\",\n\t\"muted\",\n\t\"playsinline\",\n\t\"poster\",\n\t\"rowspan\",\n\t\"src\",\n\t\"style\",\n\t\"target\",\n\t\"title\",\n\t\"type\",\n\t\"width\",\n\t\"start\",\n];\n\nfunction getSanitizerOptions(options: IInternalSanitizerOptions): {\n\tconfig: dompurify.Config;\n\tallowedSchemes: string[];\n} {\n\tconst allowedSchemes = [\n\t\tSchemas.http,\n\t\tSchemas.https,\n\t\tSchemas.mailto,\n\t\tSchemas.data,\n\t\tSchemas.file,\n\t\tSchemas.vscodeFileResource,\n\t\tSchemas.vscodeRemote,\n\t\tSchemas.vscodeRemoteResource,\n\t];\n\n\tif (options.isTrusted) {\n\t\tallowedSchemes.push(Schemas.command);\n\t}\n\n\treturn {\n\t\tconfig: {\n\t\t\t// allowedTags should included everything that markdown renders to.\n\t\t\t// Since we have our own sanitize function for marked, it's possible we missed some tag so let dompurify make sure.\n\t\t\t// HTML tags that can result from markdown are from reading https://spec.commonmark.org/0.29/\n\t\t\t// HTML table tags that can result from markdown are from https://github.github.com/gfm/#tables-extension-\n\t\t\tALLOWED_TAGS: options.allowedTags ?? [...DOM.basicMarkupHtmlTags],\n\t\t\tALLOWED_ATTR: allowedMarkdownAttr,\n\t\t\tALLOW_UNKNOWN_PROTOCOLS: true,\n\t\t},\n\t\tallowedSchemes,\n\t};\n}\n\n/**\n * Strips all markdown from `string`, if it's an IMarkdownString. For example\n * `# Header` would be output as `Header`. If it's not, the string is returned.\n */\nexport function renderStringAsPlaintext(string: IMarkdownString | string) {\n\treturn typeof string === \"string\"\n\t\t? string\n\t\t: renderMarkdownAsPlaintext(string);\n}\n\n/**\n * Strips all markdown from `markdown`. For example `# Header` would be output as `Header`.\n * provide @param withCodeBlocks to retain code blocks\n */\nexport function renderMarkdownAsPlaintext(\n\tmarkdown: IMarkdownString,\n\twithCodeBlocks?: boolean,\n) {\n\t// values that are too long will freeze the UI\n\tlet value = markdown.value ?? \"\";\n\tif (value.length > 100_000) {\n\t\tvalue = `${value.substr(0, 100_000)}\u2026`;\n\t}\n\n\tconst html = marked.parse(value, {\n\t\tasync: false,\n\t\trenderer: withCodeBlocks\n\t\t\t? plainTextWithCodeBlocksRenderer.value\n\t\t\t: plainTextRenderer.value,\n\t});\n\treturn sanitizeRenderedMarkdown({ isTrusted: false }, html)\n\t\t.toString()\n\t\t.replace(/&(#\\d+|[a-zA-Z]+);/g, (m) => unescapeInfo.get(m) ?? m);\n}\n\nconst unescapeInfo = new Map<string, string>([\n\t[\"&quot;\", '\"'],\n\t[\"&nbsp;\", \" \"],\n\t[\"&amp;\", \"&\"],\n\t[\"&#39;\", \"'\"],\n\t[\"&lt;\", \"<\"],\n\t[\"&gt;\", \">\"],\n]);\n\nfunction createRenderer(): marked.Renderer {\n\tconst renderer = new marked.Renderer();\n\n\trenderer.code = ({ text }: marked.Tokens.Code): string => {\n\t\treturn text;\n\t};\n\trenderer.blockquote = ({ text }: marked.Tokens.Blockquote): string => {\n\t\treturn text + \"\\n\";\n\t};\n\trenderer.html = (_: marked.Tokens.HTML): string => {\n\t\treturn \"\";\n\t};\n\trenderer.heading = function ({ tokens }: marked.Tokens.Heading): string {\n\t\treturn this.parser.parseInline(tokens) + \"\\n\";\n\t};\n\trenderer.hr = (): string => {\n\t\treturn \"\";\n\t};\n\trenderer.list = function ({ items }: marked.Tokens.List): string {\n\t\treturn items.map((x) => this.listitem(x)).join(\"\\n\") + \"\\n\";\n\t};\n\trenderer.listitem = ({ text }: marked.Tokens.ListItem): string => {\n\t\treturn text + \"\\n\";\n\t};\n\trenderer.paragraph = function ({\n\t\ttokens,\n\t}: marked.Tokens.Paragraph): string {\n\t\treturn this.parser.parseInline(tokens) + \"\\n\";\n\t};\n\trenderer.table = function ({ header, rows }: marked.Tokens.Table): string {\n\t\treturn (\n\t\t\theader.map((cell) => this.tablecell(cell)).join(\" \") +\n\t\t\t\"\\n\" +\n\t\t\trows\n\t\t\t\t.map((cells) =>\n\t\t\t\t\tcells.map((cell) => this.tablecell(cell)).join(\" \"),\n\t\t\t\t)\n\t\t\t\t.join(\"\\n\") +\n\t\t\t\"\\n\"\n\t\t);\n\t};\n\trenderer.tablerow = ({ text }: marked.Tokens.TableRow): string => {\n\t\treturn text;\n\t};\n\trenderer.tablecell = function ({\n\t\ttokens,\n\t}: marked.Tokens.TableCell): string {\n\t\treturn this.parser.parseInline(tokens);\n\t};\n\trenderer.strong = ({ text }: marked.Tokens.Strong): string => {\n\t\treturn text;\n\t};\n\trenderer.em = ({ text }: marked.Tokens.Em): string => {\n\t\treturn text;\n\t};\n\trenderer.codespan = ({ text }: marked.Tokens.Codespan): string => {\n\t\treturn text;\n\t};\n\trenderer.br = (_: marked.Tokens.Br): string => {\n\t\treturn \"\\n\";\n\t};\n\trenderer.del = ({ text }: marked.Tokens.Del): string => {\n\t\treturn text;\n\t};\n\trenderer.image = (_: marked.Tokens.Image): string => {\n\t\treturn \"\";\n\t};\n\trenderer.text = ({ text }: marked.Tokens.Text): string => {\n\t\treturn text;\n\t};\n\trenderer.link = ({ text }: marked.Tokens.Link): string => {\n\t\treturn text;\n\t};\n\treturn renderer;\n}\nconst plainTextRenderer = new Lazy<marked.Renderer>(\n\t(withCodeBlocks?: boolean) => createRenderer(),\n);\nconst plainTextWithCodeBlocksRenderer = new Lazy<marked.Renderer>(() => {\n\tconst renderer = createRenderer();\n\trenderer.code = ({ text }: marked.Tokens.Code): string => {\n\t\treturn `\\n\\`\\`\\`\\n${text}\\n\\`\\`\\`\\n`;\n\t};\n\treturn renderer;\n});\n\nfunction mergeRawTokenText(tokens: marked.Token[]): string {\n\tlet mergedTokenText = \"\";\n\ttokens.forEach((token) => {\n\t\tmergedTokenText += token.raw;\n\t});\n\treturn mergedTokenText;\n}\n\nfunction completeSingleLinePattern(\n\ttoken: marked.Tokens.Text | marked.Tokens.Paragraph,\n): marked.Token | undefined {\n\tif (!token.tokens) {\n\t\treturn undefined;\n\t}\n\n\tfor (let i = token.tokens.length - 1; i >= 0; i--) {\n\t\tconst subtoken = token.tokens[i];\n\t\tif (subtoken.type === \"text\") {\n\t\t\tconst lines = subtoken.raw.split(\"\\n\");\n\t\t\tconst lastLine = lines[lines.length - 1];\n\t\t\tif (lastLine.includes(\"`\")) {\n\t\t\t\treturn completeCodespan(token);\n\t\t\t} else if (lastLine.includes(\"**\")) {\n\t\t\t\treturn completeDoublestar(token);\n\t\t\t} else if (lastLine.match(/\\*\\w/)) {\n\t\t\t\treturn completeStar(token);\n\t\t\t} else if (lastLine.match(/(^|\\s)__\\w/)) {\n\t\t\t\treturn completeDoubleUnderscore(token);\n\t\t\t} else if (lastLine.match(/(^|\\s)_\\w/)) {\n\t\t\t\treturn completeUnderscore(token);\n\t\t\t} else if (\n\t\t\t\t// Text with start of link target\n\t\t\t\thasLinkTextAndStartOfLinkTarget(lastLine) ||\n\t\t\t\t// This token doesn't have the link text, eg if it contains other markdown constructs that are in other subtokens.\n\t\t\t\t// But some preceding token does have an unbalanced [ at least\n\t\t\t\t(hasStartOfLinkTargetAndNoLinkText(lastLine) &&\n\t\t\t\t\ttoken.tokens\n\t\t\t\t\t\t.slice(0, i)\n\t\t\t\t\t\t.some(\n\t\t\t\t\t\t\t(t) =>\n\t\t\t\t\t\t\t\tt.type === \"text\" && t.raw.match(/\\[[^\\]]*$/),\n\t\t\t\t\t\t))\n\t\t\t) {\n\t\t\t\tconst nextTwoSubTokens = token.tokens.slice(i + 1);\n\n\t\t\t\t// A markdown link can look like\n\t\t\t\t// [link text](https://microsoft.com \"more text\")\n\t\t\t\t// Where \"more text\" is a title for the link or an argument to a vscode command link\n\t\t\t\tif (\n\t\t\t\t\t// If the link was parsed as a link, then look for a link token and a text token with a quote\n\t\t\t\t\t(nextTwoSubTokens[0]?.type === \"link\" &&\n\t\t\t\t\t\tnextTwoSubTokens[1]?.type === \"text\" &&\n\t\t\t\t\t\tnextTwoSubTokens[1].raw.match(/^ *\"[^\"]*$/)) ||\n\t\t\t\t\t// And if the link was not parsed as a link (eg command link), just look for a single quote in this token\n\t\t\t\t\tlastLine.match(/^[^\"]* +\"[^\"]*$/)\n\t\t\t\t) {\n\t\t\t\t\treturn completeLinkTargetArg(token);\n\t\t\t\t}\n\t\t\t\treturn completeLinkTarget(token);\n\t\t\t}\n\n\t\t\t// Contains the start of link text, and no following tokens contain the link target\n\t\t\telse if (lastLine.match(/(^|\\s)\\[\\w*/)) {\n\t\t\t\treturn completeLinkText(token);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nfunction hasLinkTextAndStartOfLinkTarget(str: string): boolean {\n\treturn !!str.match(/(^|\\s)\\[.*\\]\\(\\w*/);\n}\n\nfunction hasStartOfLinkTargetAndNoLinkText(str: string): boolean {\n\treturn !!str.match(/^[^[]*\\]\\([^)]*$/);\n}\n\nfunction completeListItemPattern(\n\tlist: marked.Tokens.List,\n): marked.Tokens.List | undefined {\n\t// Patch up this one list item\n\tconst lastListItem = list.items[list.items.length - 1];\n\tconst lastListSubToken = lastListItem.tokens\n\t\t? lastListItem.tokens[lastListItem.tokens.length - 1]\n\t\t: undefined;\n\n\t/*\n\tExample list token structures:\n\n\tlist\n\t\tlist_item\n\t\t\ttext\n\t\t\t\ttext\n\t\t\t\tcodespan\n\t\t\t\tlink\n\t\tlist_item\n\t\t\ttext\n\t\t\tcode // Complete indented codeblock\n\t\tlist_item\n\t\t\ttext\n\t\t\tspace\n\t\t\ttext\n\t\t\t\ttext // Incomplete indented codeblock\n\t\tlist_item\n\t\t\ttext\n\t\t\tlist // Nested list\n\t\t\t\tlist_item\n\t\t\t\t\ttext\n\t\t\t\t\t\ttext\n\n\tContrast with paragraph:\n\tparagraph\n\t\ttext\n\t\tcodespan\n\t*/\n\n\tlet newToken: marked.Token | undefined;\n\tif (lastListSubToken?.type === \"text\" && !(\"inRawBlock\" in lastListItem)) {\n\t\t// Why does Tag have a type of 'text'\n\t\tnewToken = completeSingleLinePattern(\n\t\t\tlastListSubToken as marked.Tokens.Text,\n\t\t);\n\t}\n\n\tif (!newToken || newToken.type !== \"paragraph\") {\n\t\t// 'text' item inside the list item turns into paragraph\n\t\t// Nothing to fix, or not a pattern we were expecting\n\t\treturn;\n\t}\n\n\tconst previousListItemsText = mergeRawTokenText(list.items.slice(0, -1));\n\n\t// Grabbing the `- ` or `1. ` or `* ` off the list item because I can't find a better way to do this\n\tconst lastListItemLead =\n\t\tlastListItem.raw.match(/^(\\s*(-|\\d+\\.|\\*) +)/)?.[0];\n\tif (!lastListItemLead) {\n\t\t// Is badly formatted\n\t\treturn;\n\t}\n\n\tconst newListItemText =\n\t\tlastListItemLead +\n\t\tmergeRawTokenText(lastListItem.tokens.slice(0, -1)) +\n\t\tnewToken.raw;\n\n\tconst newList = marked.lexer(\n\t\tpreviousListItemsText + newListItemText,\n\t)[0] as marked.Tokens.List;\n\tif (newList.type !== \"list\") {\n\t\t// Something went wrong\n\t\treturn;\n\t}\n\n\treturn newList;\n}\n\nconst maxIncompleteTokensFixRounds = 3;\nexport function fillInIncompleteTokens(\n\ttokens: marked.TokensList,\n): marked.TokensList {\n\tfor (let i = 0; i < maxIncompleteTokensFixRounds; i++) {\n\t\tconst newTokens = fillInIncompleteTokensOnce(tokens);\n\t\tif (newTokens) {\n\t\t\ttokens = newTokens;\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn tokens;\n}\n\nfunction fillInIncompleteTokensOnce(\n\ttokens: marked.TokensList,\n): marked.TokensList | null {\n\tlet i: number;\n\tlet newTokens: marked.Token[] | undefined;\n\tfor (i = 0; i < tokens.length; i++) {\n\t\tconst token = tokens[i];\n\n\t\tif (token.type === \"paragraph\" && token.raw.match(/(\\n|^)\\|/)) {\n\t\t\tnewTokens = completeTable(tokens.slice(i));\n\t\t\tbreak;\n\t\t}\n\n\t\tif (i === tokens.length - 1 && token.type === \"list\") {\n\t\t\tconst newListToken = completeListItemPattern(\n\t\t\t\ttoken as marked.Tokens.List,\n\t\t\t);\n\t\t\tif (newListToken) {\n\t\t\t\tnewTokens = [newListToken];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (i === tokens.length - 1 && token.type === \"paragraph\") {\n\t\t\t// Only operates on a single token, because any newline that follows this should break these patterns\n\t\t\tconst newToken = completeSingleLinePattern(\n\t\t\t\ttoken as marked.Tokens.Paragraph,\n\t\t\t);\n\t\t\tif (newToken) {\n\t\t\t\tnewTokens = [newToken];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (newTokens) {\n\t\tconst newTokensList = [...tokens.slice(0, i), ...newTokens];\n\t\t(newTokensList as marked.TokensList).links = tokens.links;\n\t\treturn newTokensList as marked.TokensList;\n\t}\n\n\treturn null;\n}\n\nfunction completeCodespan(token: marked.Token): marked.Token {\n\treturn completeWithString(token, \"`\");\n}\n\nfunction completeStar(tokens: marked.Token): marked.Token {\n\treturn completeWithString(tokens, \"*\");\n}\n\nfunction completeUnderscore(tokens: marked.Token): marked.Token {\n\treturn completeWithString(tokens, \"_\");\n}\n\nfunction completeLinkTarget(tokens: marked.Token): marked.Token {\n\treturn completeWithString(tokens, \")\");\n}\n\nfunction completeLinkTargetArg(tokens: marked.Token): marked.Token {\n\treturn completeWithString(tokens, '\")');\n}\n\nfunction completeLinkText(tokens: marked.Token): marked.Token {\n\treturn completeWithString(tokens, \"](https://microsoft.com)\");\n}\n\nfunction completeDoublestar(tokens: marked.Token): marked.Token {\n\treturn completeWithString(tokens, \"**\");\n}\n\nfunction completeDoubleUnderscore(tokens: marked.Token): marked.Token {\n\treturn completeWithString(tokens, \"__\");\n}\n\nfunction completeWithString(\n\ttokens: marked.Token[] | marked.Token,\n\tclosingString: string,\n): marked.Token {\n\tconst mergedRawText = mergeRawTokenText(\n\t\tArray.isArray(tokens) ? tokens : [tokens],\n\t);\n\n\t// If it was completed correctly, this should be a single token.\n\t// Expecting either a Paragraph or a List\n\treturn marked.lexer(mergedRawText + closingString)[0] as marked.Token;\n}\n\nfunction completeTable(tokens: marked.Token[]): marked.Token[] | undefined {\n\tconst mergedRawText = mergeRawTokenText(tokens);\n\tconst lines = mergedRawText.split(\"\\n\");\n\n\tlet numCols: number | undefined; // The number of line1 col headers\n\tlet hasSeparatorRow = false;\n\tfor (let i = 0; i < lines.length; i++) {\n\t\tconst line = lines[i].trim();\n\t\tif (typeof numCols === \"undefined\" && line.match(/^\\s*\\|/)) {\n\t\t\tconst line1Matches = line.match(/(\\|[^|]+)(?=\\||$)/g);\n\t\t\tif (line1Matches) {\n\t\t\t\tnumCols = line1Matches.length;\n\t\t\t}\n\t\t} else if (typeof numCols === \"number\") {\n\t\t\tif (line.match(/^\\s*\\|/)) {\n\t\t\t\tif (i !== lines.length - 1) {\n\t\t\t\t\t// We got the line1 header row, and the line2 separator row, but there are more lines, and it wasn't parsed as a table!\n\t\t\t\t\t// That's strange and means that the table is probably malformed in the source, so I won't try to patch it up.\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\t// Got a line2 separator row- partial or complete, doesn't matter, we'll replace it with a correct one\n\t\t\t\thasSeparatorRow = true;\n\t\t\t} else {\n\t\t\t\t// The line after the header row isn't a valid separator row, so the table is malformed, don't fix it up\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (typeof numCols === \"number\" && numCols > 0) {\n\t\tconst prefixText = hasSeparatorRow\n\t\t\t? lines.slice(0, -1).join(\"\\n\")\n\t\t\t: mergedRawText;\n\t\tconst line1EndsInPipe = !!prefixText.match(/\\|\\s*$/);\n\t\tconst newRawText =\n\t\t\tprefixText +\n\t\t\t(line1EndsInPipe ? \"\" : \"|\") +\n\t\t\t`\\n|${\" --- |\".repeat(numCols)}`;\n\t\treturn marked.lexer(newRawText);\n\t}\n\n\treturn undefined;\n}\n\nfunction addDompurifyHook(\n\thook: \"uponSanitizeElement\",\n\tcb: (\n\t\tcurrentNode: Element,\n\t\tdata: dompurify.SanitizeElementHookEvent,\n\t\tconfig: dompurify.Config,\n\t) => void,\n): IDisposable;\nfunction addDompurifyHook(\n\thook: \"uponSanitizeAttribute\",\n\tcb: (\n\t\tcurrentNode: Element,\n\t\tdata: dompurify.SanitizeAttributeHookEvent,\n\t\tconfig: dompurify.Config,\n\t) => void,\n): IDisposable;\nfunction addDompurifyHook(\n\thook: \"uponSanitizeElement\" | \"uponSanitizeAttribute\",\n\tcb: any,\n): IDisposable {\n\tdompurify.addHook(hook, cb);\n\treturn toDisposable(() => dompurify.removeHook(hook));\n}\n"],
  "mappings": "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",
  "names": ["value", "element"]
}
