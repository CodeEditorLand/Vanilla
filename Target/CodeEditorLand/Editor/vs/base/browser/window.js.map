{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/browser/window.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport type CodeWindow = Window &\n\ttypeof globalThis & {\n\t\treadonly vscodeWindowId: number;\n\t};\n\nexport function ensureCodeWindow(\n\ttargetWindow: Window,\n\tfallbackWindowId: number,\n): asserts targetWindow is CodeWindow {\n\tconst codeWindow = targetWindow as Partial<CodeWindow>;\n\n\tif (typeof codeWindow.vscodeWindowId !== \"number\") {\n\t\tObject.defineProperty(codeWindow, \"vscodeWindowId\", {\n\t\t\tget: () => fallbackWindowId,\n\t\t});\n\t}\n}\n\n// eslint-disable-next-line no-restricted-globals\nexport const mainWindow = window as CodeWindow;\n\nexport function isAuxiliaryWindow(obj: Window): obj is CodeWindow {\n\tif (obj === mainWindow) {\n\t\treturn false;\n\t}\n\n\tconst candidate = obj as CodeWindow | undefined;\n\n\treturn typeof candidate?.vscodeWindowId === \"number\";\n}\n"],
  "mappings": ";;AAUO,SAAS,iBACf,cACA,kBACqC;AACrC,QAAM,aAAa;AAEnB,MAAI,OAAO,WAAW,mBAAmB,UAAU;AAClD,WAAO,eAAe,YAAY,kBAAkB;AAAA,MACnD,KAAK,6BAAM,kBAAN;AAAA,IACN,CAAC;AAAA,EACF;AACD;AAXgB;AAcT,MAAM,aAAa;AAEnB,SAAS,kBAAkB,KAAgC;AACjE,MAAI,QAAQ,YAAY;AACvB,WAAO;AAAA,EACR;AAEA,QAAM,YAAY;AAElB,SAAO,OAAO,WAAW,mBAAmB;AAC7C;AARgB;",
  "names": []
}
