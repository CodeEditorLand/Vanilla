{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/browser/ui/scrollbar/abstractScrollbar.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as platform from \"../../../common/platform.js\";\nimport type {\n\tINewScrollPosition,\n\tScrollable,\n\tScrollbarVisibility,\n} from \"../../../common/scrollable.js\";\nimport * as dom from \"../../dom.js\";\nimport { type FastDomNode, createFastDomNode } from \"../../fastDomNode.js\";\nimport { GlobalPointerMoveMonitor } from \"../../globalPointerMoveMonitor.js\";\nimport type { StandardWheelEvent } from \"../../mouseEvent.js\";\nimport { Widget } from \"../widget.js\";\nimport {\n\tScrollbarArrow,\n\ttype ScrollbarArrowOptions,\n} from \"./scrollbarArrow.js\";\nimport type { ScrollbarState } from \"./scrollbarState.js\";\nimport { ScrollbarVisibilityController } from \"./scrollbarVisibilityController.js\";\n\n/**\n * The orthogonal distance to the slider at which dragging \"resets\". This implements \"snapping\"\n */\nconst POINTER_DRAG_RESET_DISTANCE = 140;\n\nexport interface ISimplifiedPointerEvent {\n\tbuttons: number;\n\tpageX: number;\n\tpageY: number;\n}\n\nexport interface ScrollbarHost {\n\tonMouseWheel(mouseWheelEvent: StandardWheelEvent): void;\n\tonDragStart(): void;\n\tonDragEnd(): void;\n}\n\nexport interface AbstractScrollbarOptions {\n\tlazyRender: boolean;\n\thost: ScrollbarHost;\n\tscrollbarState: ScrollbarState;\n\tvisibility: ScrollbarVisibility;\n\textraScrollbarClassName: string;\n\tscrollable: Scrollable;\n\tscrollByPage: boolean;\n}\n\nexport abstract class AbstractScrollbar extends Widget {\n\tprotected _host: ScrollbarHost;\n\tprotected _scrollable: Scrollable;\n\tprotected _scrollByPage: boolean;\n\tprivate _lazyRender: boolean;\n\tprotected _scrollbarState: ScrollbarState;\n\tprotected _visibilityController: ScrollbarVisibilityController;\n\tprivate _pointerMoveMonitor: GlobalPointerMoveMonitor;\n\n\tpublic domNode: FastDomNode<HTMLElement>;\n\tpublic slider!: FastDomNode<HTMLElement>;\n\n\tprotected _shouldRender: boolean;\n\n\tconstructor(opts: AbstractScrollbarOptions) {\n\t\tsuper();\n\t\tthis._lazyRender = opts.lazyRender;\n\t\tthis._host = opts.host;\n\t\tthis._scrollable = opts.scrollable;\n\t\tthis._scrollByPage = opts.scrollByPage;\n\t\tthis._scrollbarState = opts.scrollbarState;\n\t\tthis._visibilityController = this._register(\n\t\t\tnew ScrollbarVisibilityController(\n\t\t\t\topts.visibility,\n\t\t\t\t\"visible scrollbar \" + opts.extraScrollbarClassName,\n\t\t\t\t\"invisible scrollbar \" + opts.extraScrollbarClassName,\n\t\t\t),\n\t\t);\n\t\tthis._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\n\t\tthis._pointerMoveMonitor = this._register(\n\t\t\tnew GlobalPointerMoveMonitor(),\n\t\t);\n\t\tthis._shouldRender = true;\n\t\tthis.domNode = createFastDomNode(document.createElement(\"div\"));\n\t\tthis.domNode.setAttribute(\"role\", \"presentation\");\n\t\tthis.domNode.setAttribute(\"aria-hidden\", \"true\");\n\n\t\tthis._visibilityController.setDomNode(this.domNode);\n\t\tthis.domNode.setPosition(\"absolute\");\n\n\t\tthis._register(\n\t\t\tdom.addDisposableListener(\n\t\t\t\tthis.domNode.domNode,\n\t\t\t\tdom.EventType.POINTER_DOWN,\n\t\t\t\t(e: PointerEvent) => this._domNodePointerDown(e),\n\t\t\t),\n\t\t);\n\t}\n\n\t// ----------------- creation\n\n\t/**\n\t * Creates the dom node for an arrow & adds it to the container\n\t */\n\tprotected _createArrow(opts: ScrollbarArrowOptions): void {\n\t\tconst arrow = this._register(new ScrollbarArrow(opts));\n\t\tthis.domNode.domNode.appendChild(arrow.bgDomNode);\n\t\tthis.domNode.domNode.appendChild(arrow.domNode);\n\t}\n\n\t/**\n\t * Creates the slider dom node, adds it to the container & hooks up the events\n\t */\n\tprotected _createSlider(\n\t\ttop: number,\n\t\tleft: number,\n\t\twidth: number | undefined,\n\t\theight: number | undefined,\n\t): void {\n\t\tthis.slider = createFastDomNode(document.createElement(\"div\"));\n\t\tthis.slider.setClassName(\"slider\");\n\t\tthis.slider.setPosition(\"absolute\");\n\t\tthis.slider.setTop(top);\n\t\tthis.slider.setLeft(left);\n\t\tif (typeof width === \"number\") {\n\t\t\tthis.slider.setWidth(width);\n\t\t}\n\t\tif (typeof height === \"number\") {\n\t\t\tthis.slider.setHeight(height);\n\t\t}\n\t\tthis.slider.setLayerHinting(true);\n\t\tthis.slider.setContain(\"strict\");\n\n\t\tthis.domNode.domNode.appendChild(this.slider.domNode);\n\n\t\tthis._register(\n\t\t\tdom.addDisposableListener(\n\t\t\t\tthis.slider.domNode,\n\t\t\t\tdom.EventType.POINTER_DOWN,\n\t\t\t\t(e: PointerEvent) => {\n\t\t\t\t\tif (e.button === 0) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tthis._sliderPointerDown(e);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tthis.onclick(this.slider.domNode, (e) => {\n\t\t\tif (e.leftButton) {\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\t});\n\t}\n\n\t// ----------------- Update state\n\n\tprotected _onElementSize(visibleSize: number): boolean {\n\t\tif (this._scrollbarState.setVisibleSize(visibleSize)) {\n\t\t\tthis._visibilityController.setIsNeeded(\n\t\t\t\tthis._scrollbarState.isNeeded(),\n\t\t\t);\n\t\t\tthis._shouldRender = true;\n\t\t\tif (!this._lazyRender) {\n\t\t\t\tthis.render();\n\t\t\t}\n\t\t}\n\t\treturn this._shouldRender;\n\t}\n\n\tprotected _onElementScrollSize(elementScrollSize: number): boolean {\n\t\tif (this._scrollbarState.setScrollSize(elementScrollSize)) {\n\t\t\tthis._visibilityController.setIsNeeded(\n\t\t\t\tthis._scrollbarState.isNeeded(),\n\t\t\t);\n\t\t\tthis._shouldRender = true;\n\t\t\tif (!this._lazyRender) {\n\t\t\t\tthis.render();\n\t\t\t}\n\t\t}\n\t\treturn this._shouldRender;\n\t}\n\n\tprotected _onElementScrollPosition(elementScrollPosition: number): boolean {\n\t\tif (this._scrollbarState.setScrollPosition(elementScrollPosition)) {\n\t\t\tthis._visibilityController.setIsNeeded(\n\t\t\t\tthis._scrollbarState.isNeeded(),\n\t\t\t);\n\t\t\tthis._shouldRender = true;\n\t\t\tif (!this._lazyRender) {\n\t\t\t\tthis.render();\n\t\t\t}\n\t\t}\n\t\treturn this._shouldRender;\n\t}\n\n\t// ----------------- rendering\n\n\tpublic beginReveal(): void {\n\t\tthis._visibilityController.setShouldBeVisible(true);\n\t}\n\n\tpublic beginHide(): void {\n\t\tthis._visibilityController.setShouldBeVisible(false);\n\t}\n\n\tpublic render(): void {\n\t\tif (!this._shouldRender) {\n\t\t\treturn;\n\t\t}\n\t\tthis._shouldRender = false;\n\n\t\tthis._renderDomNode(\n\t\t\tthis._scrollbarState.getRectangleLargeSize(),\n\t\t\tthis._scrollbarState.getRectangleSmallSize(),\n\t\t);\n\t\tthis._updateSlider(\n\t\t\tthis._scrollbarState.getSliderSize(),\n\t\t\tthis._scrollbarState.getArrowSize() +\n\t\t\t\tthis._scrollbarState.getSliderPosition(),\n\t\t);\n\t}\n\t// ----------------- DOM events\n\n\tprivate _domNodePointerDown(e: PointerEvent): void {\n\t\tif (e.target !== this.domNode.domNode) {\n\t\t\treturn;\n\t\t}\n\t\tthis._onPointerDown(e);\n\t}\n\n\tpublic delegatePointerDown(e: PointerEvent): void {\n\t\tconst domTop = this.domNode.domNode.getClientRects()[0].top;\n\t\tconst sliderStart = domTop + this._scrollbarState.getSliderPosition();\n\t\tconst sliderStop =\n\t\t\tdomTop +\n\t\t\tthis._scrollbarState.getSliderPosition() +\n\t\t\tthis._scrollbarState.getSliderSize();\n\t\tconst pointerPos = this._sliderPointerPosition(e);\n\t\tif (sliderStart <= pointerPos && pointerPos <= sliderStop) {\n\t\t\t// Act as if it was a pointer down on the slider\n\t\t\tif (e.button === 0) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis._sliderPointerDown(e);\n\t\t\t}\n\t\t} else {\n\t\t\t// Act as if it was a pointer down on the scrollbar\n\t\t\tthis._onPointerDown(e);\n\t\t}\n\t}\n\n\tprivate _onPointerDown(e: PointerEvent): void {\n\t\tlet offsetX: number;\n\t\tlet offsetY: number;\n\t\tif (\n\t\t\te.target === this.domNode.domNode &&\n\t\t\ttypeof e.offsetX === \"number\" &&\n\t\t\ttypeof e.offsetY === \"number\"\n\t\t) {\n\t\t\toffsetX = e.offsetX;\n\t\t\toffsetY = e.offsetY;\n\t\t} else {\n\t\t\tconst domNodePosition = dom.getDomNodePagePosition(\n\t\t\t\tthis.domNode.domNode,\n\t\t\t);\n\t\t\toffsetX = e.pageX - domNodePosition.left;\n\t\t\toffsetY = e.pageY - domNodePosition.top;\n\t\t}\n\n\t\tconst offset = this._pointerDownRelativePosition(offsetX, offsetY);\n\t\tthis._setDesiredScrollPositionNow(\n\t\t\tthis._scrollByPage\n\t\t\t\t? this._scrollbarState.getDesiredScrollPositionFromOffsetPaged(\n\t\t\t\t\t\toffset,\n\t\t\t\t\t)\n\t\t\t\t: this._scrollbarState.getDesiredScrollPositionFromOffset(\n\t\t\t\t\t\toffset,\n\t\t\t\t\t),\n\t\t);\n\n\t\tif (e.button === 0) {\n\t\t\t// left button\n\t\t\te.preventDefault();\n\t\t\tthis._sliderPointerDown(e);\n\t\t}\n\t}\n\n\tprivate _sliderPointerDown(e: PointerEvent): void {\n\t\tif (!e.target || !(e.target instanceof Element)) {\n\t\t\treturn;\n\t\t}\n\t\tconst initialPointerPosition = this._sliderPointerPosition(e);\n\t\tconst initialPointerOrthogonalPosition =\n\t\t\tthis._sliderOrthogonalPointerPosition(e);\n\t\tconst initialScrollbarState = this._scrollbarState.clone();\n\t\tthis.slider.toggleClassName(\"active\", true);\n\n\t\tthis._pointerMoveMonitor.startMonitoring(\n\t\t\te.target,\n\t\t\te.pointerId,\n\t\t\te.buttons,\n\t\t\t(pointerMoveData: PointerEvent) => {\n\t\t\t\tconst pointerOrthogonalPosition =\n\t\t\t\t\tthis._sliderOrthogonalPointerPosition(pointerMoveData);\n\t\t\t\tconst pointerOrthogonalDelta = Math.abs(\n\t\t\t\t\tpointerOrthogonalPosition -\n\t\t\t\t\t\tinitialPointerOrthogonalPosition,\n\t\t\t\t);\n\n\t\t\t\tif (\n\t\t\t\t\tplatform.isWindows &&\n\t\t\t\t\tpointerOrthogonalDelta > POINTER_DRAG_RESET_DISTANCE\n\t\t\t\t) {\n\t\t\t\t\t// The pointer has wondered away from the scrollbar => reset dragging\n\t\t\t\t\tthis._setDesiredScrollPositionNow(\n\t\t\t\t\t\tinitialScrollbarState.getScrollPosition(),\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst pointerPosition =\n\t\t\t\t\tthis._sliderPointerPosition(pointerMoveData);\n\t\t\t\tconst pointerDelta = pointerPosition - initialPointerPosition;\n\t\t\t\tthis._setDesiredScrollPositionNow(\n\t\t\t\t\tinitialScrollbarState.getDesiredScrollPositionFromDelta(\n\t\t\t\t\t\tpointerDelta,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tthis.slider.toggleClassName(\"active\", false);\n\t\t\t\tthis._host.onDragEnd();\n\t\t\t},\n\t\t);\n\n\t\tthis._host.onDragStart();\n\t}\n\n\tprivate _setDesiredScrollPositionNow(_desiredScrollPosition: number): void {\n\t\tconst desiredScrollPosition: INewScrollPosition = {};\n\t\tthis.writeScrollPosition(desiredScrollPosition, _desiredScrollPosition);\n\n\t\tthis._scrollable.setScrollPositionNow(desiredScrollPosition);\n\t}\n\n\tpublic updateScrollbarSize(scrollbarSize: number): void {\n\t\tthis._updateScrollbarSize(scrollbarSize);\n\t\tthis._scrollbarState.setScrollbarSize(scrollbarSize);\n\t\tthis._shouldRender = true;\n\t\tif (!this._lazyRender) {\n\t\t\tthis.render();\n\t\t}\n\t}\n\n\tpublic isNeeded(): boolean {\n\t\treturn this._scrollbarState.isNeeded();\n\t}\n\n\t// ----------------- Overwrite these\n\n\tprotected abstract _renderDomNode(\n\t\tlargeSize: number,\n\t\tsmallSize: number,\n\t): void;\n\tprotected abstract _updateSlider(\n\t\tsliderSize: number,\n\t\tsliderPosition: number,\n\t): void;\n\n\tprotected abstract _pointerDownRelativePosition(\n\t\toffsetX: number,\n\t\toffsetY: number,\n\t): number;\n\tprotected abstract _sliderPointerPosition(\n\t\te: ISimplifiedPointerEvent,\n\t): number;\n\tprotected abstract _sliderOrthogonalPointerPosition(\n\t\te: ISimplifiedPointerEvent,\n\t): number;\n\tprotected abstract _updateScrollbarSize(size: number): void;\n\n\tpublic abstract writeScrollPosition(\n\t\ttarget: INewScrollPosition,\n\t\tscrollPosition: number,\n\t): void;\n}\n"],
  "mappings": "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",
  "names": []
}
