const S=20;class d{_scrollbarSize;_oppositeScrollbarSize;_arrowSize;_visibleSize;_scrollSize;_scrollPosition;_computedAvailableSize;_computedIsNeeded;_computedSliderSize;_computedSliderRatio;_computedSliderPosition;constructor(e,i,t,r,s,o){this._scrollbarSize=Math.round(i),this._oppositeScrollbarSize=Math.round(t),this._arrowSize=Math.round(e),this._visibleSize=r,this._scrollSize=s,this._scrollPosition=o,this._computedAvailableSize=0,this._computedIsNeeded=!1,this._computedSliderSize=0,this._computedSliderRatio=0,this._computedSliderPosition=0,this._refreshComputedValues()}clone(){return new d(this._arrowSize,this._scrollbarSize,this._oppositeScrollbarSize,this._visibleSize,this._scrollSize,this._scrollPosition)}setVisibleSize(e){const i=Math.round(e);return this._visibleSize!==i?(this._visibleSize=i,this._refreshComputedValues(),!0):!1}setScrollSize(e){const i=Math.round(e);return this._scrollSize!==i?(this._scrollSize=i,this._refreshComputedValues(),!0):!1}setScrollPosition(e){const i=Math.round(e);return this._scrollPosition!==i?(this._scrollPosition=i,this._refreshComputedValues(),!0):!1}setScrollbarSize(e){this._scrollbarSize=Math.round(e)}setOppositeScrollbarSize(e){this._oppositeScrollbarSize=Math.round(e)}static _computeValues(e,i,t,r,s){const o=Math.max(0,t-e),l=Math.max(0,o-2*i),u=r>0&&r>t;if(!u)return{computedAvailableSize:Math.round(o),computedIsNeeded:u,computedSliderSize:Math.round(l),computedSliderRatio:0,computedSliderPosition:0};const n=Math.round(Math.max(20,Math.floor(t*l/r))),c=(l-n)/(r-t),a=s*c;return{computedAvailableSize:Math.round(o),computedIsNeeded:u,computedSliderSize:Math.round(n),computedSliderRatio:c,computedSliderPosition:Math.round(a)}}_refreshComputedValues(){const e=d._computeValues(this._oppositeScrollbarSize,this._arrowSize,this._visibleSize,this._scrollSize,this._scrollPosition);this._computedAvailableSize=e.computedAvailableSize,this._computedIsNeeded=e.computedIsNeeded,this._computedSliderSize=e.computedSliderSize,this._computedSliderRatio=e.computedSliderRatio,this._computedSliderPosition=e.computedSliderPosition}getArrowSize(){return this._arrowSize}getScrollPosition(){return this._scrollPosition}getRectangleLargeSize(){return this._computedAvailableSize}getRectangleSmallSize(){return this._scrollbarSize}isNeeded(){return this._computedIsNeeded}getSliderSize(){return this._computedSliderSize}getSliderPosition(){return this._computedSliderPosition}getDesiredScrollPositionFromOffset(e){if(!this._computedIsNeeded)return 0;const i=e-this._arrowSize-this._computedSliderSize/2;return Math.round(i/this._computedSliderRatio)}getDesiredScrollPositionFromOffsetPaged(e){if(!this._computedIsNeeded)return 0;const i=e-this._arrowSize;let t=this._scrollPosition;return i<this._computedSliderPosition?t-=this._visibleSize:t+=this._visibleSize,t}getDesiredScrollPositionFromDelta(e){if(!this._computedIsNeeded)return 0;const i=this._computedSliderPosition+e;return Math.round(i/this._computedSliderRatio)}}export{d as ScrollbarState};
