{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/browser/ui/menu/menubar.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tActionRunner,\n\ttype IAction,\n\ttype IActionRunner,\n\tSeparator,\n\tSubmenuAction,\n} from \"../../../common/actions.js\";\nimport { asArray } from \"../../../common/arrays.js\";\nimport { RunOnceScheduler } from \"../../../common/async.js\";\nimport { Codicon } from \"../../../common/codicons.js\";\nimport { Emitter, type Event } from \"../../../common/event.js\";\nimport {\n\tKeyCode,\n\tKeyMod,\n\tScanCode,\n\tScanCodeUtils,\n} from \"../../../common/keyCodes.js\";\nimport type { ResolvedKeybinding } from \"../../../common/keybindings.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n\tdispose,\n} from \"../../../common/lifecycle.js\";\nimport { isMacintosh } from \"../../../common/platform.js\";\nimport * as strings from \"../../../common/strings.js\";\nimport { ThemeIcon } from \"../../../common/themables.js\";\nimport * as browser from \"../../browser.js\";\nimport * as DOM from \"../../dom.js\";\nimport { StandardKeyboardEvent } from \"../../keyboardEvent.js\";\nimport { StandardMouseEvent } from \"../../mouseEvent.js\";\nimport { EventType, Gesture, type GestureEvent } from \"../../touch.js\";\nimport {\n\tHorizontalDirection,\n\ttype IMenuDirection,\n\ttype IMenuOptions,\n\ttype IMenuStyles,\n\tMENU_ESCAPED_MNEMONIC_REGEX,\n\tMENU_MNEMONIC_REGEX,\n\tMenu,\n\tVerticalDirection,\n\tcleanMnemonic,\n} from \"./menu.js\";\nimport \"./menubar.css\";\nimport * as nls from \"../../../../nls.js\";\nimport { mainWindow } from \"../../window.js\";\n\nconst $ = DOM.$;\n\nexport interface IMenuBarOptions {\n\tenableMnemonics?: boolean;\n\tdisableAltFocus?: boolean;\n\tvisibility?: string;\n\tgetKeybinding?: (action: IAction) => ResolvedKeybinding | undefined;\n\talwaysOnMnemonics?: boolean;\n\tcompactMode?: IMenuDirection;\n\tactionRunner?: IActionRunner;\n\tgetCompactMenuActions?: () => IAction[];\n}\n\nexport interface MenuBarMenu {\n\tactions: IAction[];\n\tlabel: string;\n}\n\ninterface MenuBarMenuWithElements extends MenuBarMenu {\n\ttitleElement?: HTMLElement;\n\tbuttonElement?: HTMLElement;\n}\n\nenum MenubarState {\n\tHIDDEN = 0,\n\tVISIBLE = 1,\n\tFOCUSED = 2,\n\tOPEN = 3,\n}\n\nexport class MenuBar extends Disposable {\n\tstatic readonly OVERFLOW_INDEX: number = -1;\n\n\tprivate menus: MenuBarMenuWithElements[];\n\n\tprivate overflowMenu!: MenuBarMenuWithElements & {\n\t\ttitleElement: HTMLElement;\n\t\tbuttonElement: HTMLElement;\n\t};\n\n\tprivate focusedMenu:\n\t\t| {\n\t\t\t\tindex: number;\n\t\t\t\tholder?: HTMLElement;\n\t\t\t\twidget?: Menu;\n\t\t  }\n\t\t| undefined;\n\n\tprivate focusToReturn: HTMLElement | undefined;\n\tprivate menuUpdater: RunOnceScheduler;\n\n\t// Input-related\n\tprivate _mnemonicsInUse = false;\n\tprivate openedViaKeyboard = false;\n\tprivate awaitingAltRelease = false;\n\tprivate ignoreNextMouseUp = false;\n\tprivate mnemonics: Map<string, number>;\n\n\tprivate updatePending = false;\n\tprivate _focusState: MenubarState;\n\tprivate actionRunner: IActionRunner;\n\n\tprivate readonly _onVisibilityChange: Emitter<boolean>;\n\tprivate readonly _onFocusStateChange: Emitter<boolean>;\n\n\tprivate numMenusShown = 0;\n\tprivate overflowLayoutScheduled: IDisposable | undefined = undefined;\n\n\tprivate readonly menuDisposables = this._register(new DisposableStore());\n\n\tconstructor(\n\t\tprivate container: HTMLElement,\n\t\tprivate options: IMenuBarOptions,\n\t\tprivate menuStyle: IMenuStyles,\n\t) {\n\t\tsuper();\n\n\t\tthis.container.setAttribute(\"role\", \"menubar\");\n\t\tif (this.isCompact) {\n\t\t\tthis.container.classList.add(\"compact\");\n\t\t}\n\n\t\tthis.menus = [];\n\t\tthis.mnemonics = new Map<string, number>();\n\n\t\tthis._focusState = MenubarState.VISIBLE;\n\n\t\tthis._onVisibilityChange = this._register(new Emitter<boolean>());\n\t\tthis._onFocusStateChange = this._register(new Emitter<boolean>());\n\n\t\tthis.createOverflowMenu();\n\n\t\tthis.menuUpdater = this._register(\n\t\t\tnew RunOnceScheduler(() => this.update(), 200),\n\t\t);\n\n\t\tthis.actionRunner =\n\t\t\tthis.options.actionRunner ?? this._register(new ActionRunner());\n\t\tthis._register(\n\t\t\tthis.actionRunner.onWillRun(() => {\n\t\t\t\tthis.setUnfocusedState();\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tDOM.ModifierKeyEmitter.getInstance().event(\n\t\t\t\tthis.onModifierKeyToggled,\n\t\t\t\tthis,\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\tDOM.addDisposableListener(\n\t\t\t\tthis.container,\n\t\t\t\tDOM.EventType.KEY_DOWN,\n\t\t\t\t(e) => {\n\t\t\t\t\tconst event = new StandardKeyboardEvent(e as KeyboardEvent);\n\t\t\t\t\tlet eventHandled = true;\n\t\t\t\t\tconst key = !!e.key ? e.key.toLocaleLowerCase() : \"\";\n\n\t\t\t\t\tconst tabNav = isMacintosh && !this.isCompact;\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tevent.equals(KeyCode.LeftArrow) ||\n\t\t\t\t\t\t(tabNav && event.equals(KeyCode.Tab | KeyMod.Shift))\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.focusPrevious();\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tevent.equals(KeyCode.RightArrow) ||\n\t\t\t\t\t\t(tabNav && event.equals(KeyCode.Tab))\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.focusNext();\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tevent.equals(KeyCode.Escape) &&\n\t\t\t\t\t\tthis.isFocused &&\n\t\t\t\t\t\t!this.isOpen\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.setUnfocusedState();\n\t\t\t\t\t} else if (\n\t\t\t\t\t\t!this.isOpen &&\n\t\t\t\t\t\t!event.ctrlKey &&\n\t\t\t\t\t\tthis.options.enableMnemonics &&\n\t\t\t\t\t\tthis.mnemonicsInUse &&\n\t\t\t\t\t\tthis.mnemonics.has(key)\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst menuIndex = this.mnemonics.get(key)!;\n\t\t\t\t\t\tthis.onMenuTriggered(menuIndex, false);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teventHandled = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Never allow default tab behavior when not compact\n\t\t\t\t\tif (\n\t\t\t\t\t\t!this.isCompact &&\n\t\t\t\t\t\t(event.equals(KeyCode.Tab | KeyMod.Shift) ||\n\t\t\t\t\t\t\tevent.equals(KeyCode.Tab))\n\t\t\t\t\t) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (eventHandled) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tconst window = DOM.getWindow(this.container);\n\t\tthis._register(\n\t\t\tDOM.addDisposableListener(window, DOM.EventType.MOUSE_DOWN, () => {\n\t\t\t\t// This mouse event is outside the menubar so it counts as a focus out\n\t\t\t\tif (this.isFocused) {\n\t\t\t\t\tthis.setUnfocusedState();\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\n\t\tthis._register(\n\t\t\tDOM.addDisposableListener(\n\t\t\t\tthis.container,\n\t\t\t\tDOM.EventType.FOCUS_IN,\n\t\t\t\t(e) => {\n\t\t\t\t\tconst event = e as FocusEvent;\n\n\t\t\t\t\tif (event.relatedTarget) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!this.container.contains(\n\t\t\t\t\t\t\t\tevent.relatedTarget as HTMLElement,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis.focusToReturn =\n\t\t\t\t\t\t\t\tevent.relatedTarget as HTMLElement;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\tDOM.addDisposableListener(\n\t\t\t\tthis.container,\n\t\t\t\tDOM.EventType.FOCUS_OUT,\n\t\t\t\t(e) => {\n\t\t\t\t\tconst event = e as FocusEvent;\n\n\t\t\t\t\t// We are losing focus and there is no related target, e.g. webview case\n\t\t\t\t\tif (!event.relatedTarget) {\n\t\t\t\t\t\tthis.setUnfocusedState();\n\t\t\t\t\t}\n\t\t\t\t\t// We are losing focus and there is a target, reset focusToReturn value as not to redirect\n\t\t\t\t\telse if (\n\t\t\t\t\t\tevent.relatedTarget &&\n\t\t\t\t\t\t!this.container.contains(\n\t\t\t\t\t\t\tevent.relatedTarget as HTMLElement,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.focusToReturn = undefined;\n\t\t\t\t\t\tthis.setUnfocusedState();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\tDOM.addDisposableListener(\n\t\t\t\twindow,\n\t\t\t\tDOM.EventType.KEY_DOWN,\n\t\t\t\t(e: KeyboardEvent) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!this.options.enableMnemonics ||\n\t\t\t\t\t\t!e.altKey ||\n\t\t\t\t\t\te.ctrlKey ||\n\t\t\t\t\t\te.defaultPrevented\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst key = e.key.toLocaleLowerCase();\n\t\t\t\t\tif (!this.mnemonics.has(key)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.mnemonicsInUse = true;\n\t\t\t\t\tthis.updateMnemonicVisibility(true);\n\n\t\t\t\t\tconst menuIndex = this.mnemonics.get(key)!;\n\t\t\t\t\tthis.onMenuTriggered(menuIndex, false);\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tthis.setUnfocusedState();\n\t}\n\n\tpush(arg: MenuBarMenu | MenuBarMenu[]): void {\n\t\tconst menus: MenuBarMenu[] = asArray(arg);\n\n\t\tmenus.forEach((menuBarMenu) => {\n\t\t\tconst menuIndex = this.menus.length;\n\t\t\tconst cleanMenuLabel = cleanMnemonic(menuBarMenu.label);\n\n\t\t\tconst mnemonicMatches = MENU_MNEMONIC_REGEX.exec(menuBarMenu.label);\n\n\t\t\t// Register mnemonics\n\t\t\tif (mnemonicMatches) {\n\t\t\t\tconst mnemonic = !!mnemonicMatches[1]\n\t\t\t\t\t? mnemonicMatches[1]\n\t\t\t\t\t: mnemonicMatches[3];\n\n\t\t\t\tthis.registerMnemonic(this.menus.length, mnemonic);\n\t\t\t}\n\n\t\t\tif (this.isCompact) {\n\t\t\t\tthis.menus.push(menuBarMenu);\n\t\t\t} else {\n\t\t\t\tconst buttonElement = $(\"div.menubar-menu-button\", {\n\t\t\t\t\trole: \"menuitem\",\n\t\t\t\t\ttabindex: -1,\n\t\t\t\t\t\"aria-label\": cleanMenuLabel,\n\t\t\t\t\t\"aria-haspopup\": true,\n\t\t\t\t});\n\t\t\t\tconst titleElement = $(\"div.menubar-menu-title\", {\n\t\t\t\t\trole: \"none\",\n\t\t\t\t\t\"aria-hidden\": true,\n\t\t\t\t});\n\n\t\t\t\tbuttonElement.appendChild(titleElement);\n\t\t\t\tthis.container.insertBefore(\n\t\t\t\t\tbuttonElement,\n\t\t\t\t\tthis.overflowMenu.buttonElement,\n\t\t\t\t);\n\n\t\t\t\tthis.updateLabels(\n\t\t\t\t\ttitleElement,\n\t\t\t\t\tbuttonElement,\n\t\t\t\t\tmenuBarMenu.label,\n\t\t\t\t);\n\n\t\t\t\tthis._register(\n\t\t\t\t\tDOM.addDisposableListener(\n\t\t\t\t\t\tbuttonElement,\n\t\t\t\t\t\tDOM.EventType.KEY_UP,\n\t\t\t\t\t\t(e) => {\n\t\t\t\t\t\t\tconst event = new StandardKeyboardEvent(\n\t\t\t\t\t\t\t\te as KeyboardEvent,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tlet eventHandled = true;\n\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t(event.equals(KeyCode.DownArrow) ||\n\t\t\t\t\t\t\t\t\tevent.equals(KeyCode.Enter)) &&\n\t\t\t\t\t\t\t\t!this.isOpen\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tthis.focusedMenu = { index: menuIndex };\n\t\t\t\t\t\t\t\tthis.openedViaKeyboard = true;\n\t\t\t\t\t\t\t\tthis.focusState = MenubarState.OPEN;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\teventHandled = false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (eventHandled) {\n\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t);\n\n\t\t\t\tthis._register(Gesture.addTarget(buttonElement));\n\t\t\t\tthis._register(\n\t\t\t\t\tDOM.addDisposableListener(\n\t\t\t\t\t\tbuttonElement,\n\t\t\t\t\t\tEventType.Tap,\n\t\t\t\t\t\t(e: GestureEvent) => {\n\t\t\t\t\t\t\t// Ignore this touch if the menu is touched\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tthis.isOpen &&\n\t\t\t\t\t\t\t\tthis.focusedMenu &&\n\t\t\t\t\t\t\t\tthis.focusedMenu.holder &&\n\t\t\t\t\t\t\t\tDOM.isAncestor(\n\t\t\t\t\t\t\t\t\te.initialTarget as HTMLElement,\n\t\t\t\t\t\t\t\t\tthis.focusedMenu.holder,\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.ignoreNextMouseUp = false;\n\t\t\t\t\t\t\tthis.onMenuTriggered(menuIndex, true);\n\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t);\n\n\t\t\t\tthis._register(\n\t\t\t\t\tDOM.addDisposableListener(\n\t\t\t\t\t\tbuttonElement,\n\t\t\t\t\t\tDOM.EventType.MOUSE_DOWN,\n\t\t\t\t\t\t(e: MouseEvent) => {\n\t\t\t\t\t\t\t// Ignore non-left-click\n\t\t\t\t\t\t\tconst mouseEvent = new StandardMouseEvent(\n\t\t\t\t\t\t\t\tDOM.getWindow(buttonElement),\n\t\t\t\t\t\t\t\te,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (!mouseEvent.leftButton) {\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (this.isOpen) {\n\t\t\t\t\t\t\t\tthis.ignoreNextMouseUp = false;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Open the menu with mouse down and ignore the following mouse up event\n\t\t\t\t\t\t\t\tthis.ignoreNextMouseUp = true;\n\t\t\t\t\t\t\t\tthis.onMenuTriggered(menuIndex, true);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t);\n\n\t\t\t\tthis._register(\n\t\t\t\t\tDOM.addDisposableListener(\n\t\t\t\t\t\tbuttonElement,\n\t\t\t\t\t\tDOM.EventType.MOUSE_UP,\n\t\t\t\t\t\t(e) => {\n\t\t\t\t\t\t\tif (e.defaultPrevented) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (this.ignoreNextMouseUp) {\n\t\t\t\t\t\t\t\tthis.ignoreNextMouseUp = false;\n\t\t\t\t\t\t\t} else if (this.isFocused) {\n\t\t\t\t\t\t\t\tthis.onMenuTriggered(menuIndex, true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t);\n\n\t\t\t\tthis._register(\n\t\t\t\t\tDOM.addDisposableListener(\n\t\t\t\t\t\tbuttonElement,\n\t\t\t\t\t\tDOM.EventType.MOUSE_ENTER,\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tif (this.isOpen && !this.isCurrentMenu(menuIndex)) {\n\t\t\t\t\t\t\t\tbuttonElement.focus();\n\t\t\t\t\t\t\t\tthis.cleanupCustomMenu();\n\t\t\t\t\t\t\t\tthis.showCustomMenu(menuIndex, false);\n\t\t\t\t\t\t\t} else if (this.isFocused && !this.isOpen) {\n\t\t\t\t\t\t\t\tthis.focusedMenu = { index: menuIndex };\n\t\t\t\t\t\t\t\tbuttonElement.focus();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t);\n\n\t\t\t\tthis.menus.push({\n\t\t\t\t\tlabel: menuBarMenu.label,\n\t\t\t\t\tactions: menuBarMenu.actions,\n\t\t\t\t\tbuttonElement: buttonElement,\n\t\t\t\t\ttitleElement: titleElement,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tcreateOverflowMenu(): void {\n\t\tconst label = this.isCompact\n\t\t\t? nls.localize(\"mAppMenu\", \"Application Menu\")\n\t\t\t: nls.localize(\"mMore\", \"More\");\n\t\tconst buttonElement = $(\"div.menubar-menu-button\", {\n\t\t\trole: \"menuitem\",\n\t\t\ttabindex: this.isCompact ? 0 : -1,\n\t\t\t\"aria-label\": label,\n\t\t\t\"aria-haspopup\": true,\n\t\t});\n\t\tconst titleElement = $(\n\t\t\t\"div.menubar-menu-title.toolbar-toggle-more\" +\n\t\t\t\tThemeIcon.asCSSSelector(Codicon.menuBarMore),\n\t\t\t{ role: \"none\", \"aria-hidden\": true },\n\t\t);\n\n\t\tbuttonElement.appendChild(titleElement);\n\t\tthis.container.appendChild(buttonElement);\n\t\tbuttonElement.style.visibility = \"hidden\";\n\n\t\tthis._register(\n\t\t\tDOM.addDisposableListener(\n\t\t\t\tbuttonElement,\n\t\t\t\tDOM.EventType.KEY_UP,\n\t\t\t\t(e) => {\n\t\t\t\t\tconst event = new StandardKeyboardEvent(e as KeyboardEvent);\n\t\t\t\t\tlet eventHandled = true;\n\n\t\t\t\t\tconst triggerKeys = [KeyCode.Enter];\n\t\t\t\t\tif (this.isCompact) {\n\t\t\t\t\t\ttriggerKeys.push(KeyCode.Space);\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tthis.options.compactMode?.horizontal ===\n\t\t\t\t\t\t\tHorizontalDirection.Right\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\ttriggerKeys.push(KeyCode.RightArrow);\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\tthis.options.compactMode?.horizontal ===\n\t\t\t\t\t\t\tHorizontalDirection.Left\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\ttriggerKeys.push(KeyCode.LeftArrow);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttriggerKeys.push(KeyCode.DownArrow);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (\n\t\t\t\t\t\ttriggerKeys.some((k) => event.equals(k)) &&\n\t\t\t\t\t\t!this.isOpen\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.focusedMenu = { index: MenuBar.OVERFLOW_INDEX };\n\t\t\t\t\t\tthis.openedViaKeyboard = true;\n\t\t\t\t\t\tthis.focusState = MenubarState.OPEN;\n\t\t\t\t\t} else {\n\t\t\t\t\t\teventHandled = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (eventHandled) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tthis._register(Gesture.addTarget(buttonElement));\n\t\tthis._register(\n\t\t\tDOM.addDisposableListener(\n\t\t\t\tbuttonElement,\n\t\t\t\tEventType.Tap,\n\t\t\t\t(e: GestureEvent) => {\n\t\t\t\t\t// Ignore this touch if the menu is touched\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.isOpen &&\n\t\t\t\t\t\tthis.focusedMenu &&\n\t\t\t\t\t\tthis.focusedMenu.holder &&\n\t\t\t\t\t\tDOM.isAncestor(\n\t\t\t\t\t\t\te.initialTarget as HTMLElement,\n\t\t\t\t\t\t\tthis.focusedMenu.holder,\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.ignoreNextMouseUp = false;\n\t\t\t\t\tthis.onMenuTriggered(MenuBar.OVERFLOW_INDEX, true);\n\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\tDOM.addDisposableListener(\n\t\t\t\tbuttonElement,\n\t\t\t\tDOM.EventType.MOUSE_DOWN,\n\t\t\t\t(e) => {\n\t\t\t\t\t// Ignore non-left-click\n\t\t\t\t\tconst mouseEvent = new StandardMouseEvent(\n\t\t\t\t\t\tDOM.getWindow(buttonElement),\n\t\t\t\t\t\te,\n\t\t\t\t\t);\n\t\t\t\t\tif (!mouseEvent.leftButton) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.isOpen) {\n\t\t\t\t\t\tthis.ignoreNextMouseUp = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Open the menu with mouse down and ignore the following mouse up event\n\t\t\t\t\t\tthis.ignoreNextMouseUp = true;\n\t\t\t\t\t\tthis.onMenuTriggered(MenuBar.OVERFLOW_INDEX, true);\n\t\t\t\t\t}\n\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\tDOM.addDisposableListener(\n\t\t\t\tbuttonElement,\n\t\t\t\tDOM.EventType.MOUSE_UP,\n\t\t\t\t(e) => {\n\t\t\t\t\tif (e.defaultPrevented) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.ignoreNextMouseUp) {\n\t\t\t\t\t\tthis.ignoreNextMouseUp = false;\n\t\t\t\t\t} else if (this.isFocused) {\n\t\t\t\t\t\tthis.onMenuTriggered(MenuBar.OVERFLOW_INDEX, true);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tthis._register(\n\t\t\tDOM.addDisposableListener(\n\t\t\t\tbuttonElement,\n\t\t\t\tDOM.EventType.MOUSE_ENTER,\n\t\t\t\t() => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.isOpen &&\n\t\t\t\t\t\t!this.isCurrentMenu(MenuBar.OVERFLOW_INDEX)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.overflowMenu.buttonElement.focus();\n\t\t\t\t\t\tthis.cleanupCustomMenu();\n\t\t\t\t\t\tthis.showCustomMenu(MenuBar.OVERFLOW_INDEX, false);\n\t\t\t\t\t} else if (this.isFocused && !this.isOpen) {\n\t\t\t\t\t\tthis.focusedMenu = { index: MenuBar.OVERFLOW_INDEX };\n\t\t\t\t\t\tbuttonElement.focus();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\n\t\tthis.overflowMenu = {\n\t\t\tbuttonElement: buttonElement,\n\t\t\ttitleElement: titleElement,\n\t\t\tlabel: \"More\",\n\t\t\tactions: [],\n\t\t};\n\t}\n\n\tupdateMenu(menu: MenuBarMenu): void {\n\t\tconst menuToUpdate = this.menus.filter(\n\t\t\t(menuBarMenu) => menuBarMenu.label === menu.label,\n\t\t);\n\t\tif (menuToUpdate && menuToUpdate.length) {\n\t\t\tmenuToUpdate[0].actions = menu.actions;\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.menus.forEach((menuBarMenu) => {\n\t\t\tmenuBarMenu.titleElement?.remove();\n\t\t\tmenuBarMenu.buttonElement?.remove();\n\t\t});\n\n\t\tthis.overflowMenu.titleElement.remove();\n\t\tthis.overflowMenu.buttonElement.remove();\n\n\t\tdispose(this.overflowLayoutScheduled);\n\t\tthis.overflowLayoutScheduled = undefined;\n\t}\n\n\tblur(): void {\n\t\tthis.setUnfocusedState();\n\t}\n\n\tgetWidth(): number {\n\t\tif (!this.isCompact && this.menus) {\n\t\t\tconst left =\n\t\t\t\tthis.menus[0].buttonElement!.getBoundingClientRect().left;\n\t\t\tconst right = this.hasOverflow\n\t\t\t\t? this.overflowMenu.buttonElement.getBoundingClientRect().right\n\t\t\t\t: this.menus[\n\t\t\t\t\t\tthis.menus.length - 1\n\t\t\t\t\t].buttonElement!.getBoundingClientRect().right;\n\t\t\treturn right - left;\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.container.clientHeight;\n\t}\n\n\ttoggleFocus(): void {\n\t\tif (!this.isFocused && this.options.visibility !== \"hidden\") {\n\t\t\tthis.mnemonicsInUse = true;\n\t\t\tthis.focusedMenu = {\n\t\t\t\tindex: this.numMenusShown > 0 ? 0 : MenuBar.OVERFLOW_INDEX,\n\t\t\t};\n\t\t\tthis.focusState = MenubarState.FOCUSED;\n\t\t} else if (!this.isOpen) {\n\t\t\tthis.setUnfocusedState();\n\t\t}\n\t}\n\n\tprivate updateOverflowAction(): void {\n\t\tif (!this.menus || !this.menus.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst overflowMenuOnlyClass = \"overflow-menu-only\";\n\n\t\t// Remove overflow only restriction to allow the most space\n\t\tthis.container.classList.toggle(overflowMenuOnlyClass, false);\n\n\t\tconst sizeAvailable = this.container.offsetWidth;\n\t\tlet currentSize = 0;\n\t\tlet full = this.isCompact;\n\t\tconst prevNumMenusShown = this.numMenusShown;\n\t\tthis.numMenusShown = 0;\n\n\t\tconst showableMenus = this.menus.filter(\n\t\t\t(menu) =>\n\t\t\t\tmenu.buttonElement !== undefined &&\n\t\t\t\tmenu.titleElement !== undefined,\n\t\t) as (MenuBarMenuWithElements & {\n\t\t\ttitleElement: HTMLElement;\n\t\t\tbuttonElement: HTMLElement;\n\t\t})[];\n\t\tfor (const menuBarMenu of showableMenus) {\n\t\t\tif (!full) {\n\t\t\t\tconst size = menuBarMenu.buttonElement.offsetWidth;\n\t\t\t\tif (currentSize + size > sizeAvailable) {\n\t\t\t\t\tfull = true;\n\t\t\t\t} else {\n\t\t\t\t\tcurrentSize += size;\n\t\t\t\t\tthis.numMenusShown++;\n\t\t\t\t\tif (this.numMenusShown > prevNumMenusShown) {\n\t\t\t\t\t\tmenuBarMenu.buttonElement.style.visibility = \"visible\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (full) {\n\t\t\t\tmenuBarMenu.buttonElement.style.visibility = \"hidden\";\n\t\t\t}\n\t\t}\n\n\t\t// If below minimium menu threshold, show the overflow menu only as hamburger menu\n\t\tif (this.numMenusShown - 1 <= showableMenus.length / 4) {\n\t\t\tfor (const menuBarMenu of showableMenus) {\n\t\t\t\tmenuBarMenu.buttonElement.style.visibility = \"hidden\";\n\t\t\t}\n\n\t\t\tfull = true;\n\t\t\tthis.numMenusShown = 0;\n\t\t\tcurrentSize = 0;\n\t\t}\n\n\t\t// Overflow\n\t\tif (this.isCompact) {\n\t\t\tthis.overflowMenu.actions = [];\n\t\t\tfor (let idx = this.numMenusShown; idx < this.menus.length; idx++) {\n\t\t\t\tthis.overflowMenu.actions.push(\n\t\t\t\t\tnew SubmenuAction(\n\t\t\t\t\t\t`menubar.submenu.${this.menus[idx].label}`,\n\t\t\t\t\t\tthis.menus[idx].label,\n\t\t\t\t\t\tthis.menus[idx].actions || [],\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst compactMenuActions = this.options.getCompactMenuActions?.();\n\t\t\tif (compactMenuActions && compactMenuActions.length) {\n\t\t\t\tthis.overflowMenu.actions.push(new Separator());\n\t\t\t\tthis.overflowMenu.actions.push(...compactMenuActions);\n\t\t\t}\n\n\t\t\tthis.overflowMenu.buttonElement.style.visibility = \"visible\";\n\t\t} else if (full) {\n\t\t\t// Can't fit the more button, need to remove more menus\n\t\t\twhile (\n\t\t\t\tcurrentSize + this.overflowMenu.buttonElement.offsetWidth >\n\t\t\t\t\tsizeAvailable &&\n\t\t\t\tthis.numMenusShown > 0\n\t\t\t) {\n\t\t\t\tthis.numMenusShown--;\n\t\t\t\tconst size =\n\t\t\t\t\tshowableMenus[this.numMenusShown].buttonElement.offsetWidth;\n\t\t\t\tshowableMenus[\n\t\t\t\t\tthis.numMenusShown\n\t\t\t\t].buttonElement.style.visibility = \"hidden\";\n\t\t\t\tcurrentSize -= size;\n\t\t\t}\n\n\t\t\tthis.overflowMenu.actions = [];\n\t\t\tfor (\n\t\t\t\tlet idx = this.numMenusShown;\n\t\t\t\tidx < showableMenus.length;\n\t\t\t\tidx++\n\t\t\t) {\n\t\t\t\tthis.overflowMenu.actions.push(\n\t\t\t\t\tnew SubmenuAction(\n\t\t\t\t\t\t`menubar.submenu.${showableMenus[idx].label}`,\n\t\t\t\t\t\tshowableMenus[idx].label,\n\t\t\t\t\t\tshowableMenus[idx].actions || [],\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tthis.overflowMenu.buttonElement.nextElementSibling !==\n\t\t\t\tshowableMenus[this.numMenusShown].buttonElement\n\t\t\t) {\n\t\t\t\tthis.overflowMenu.buttonElement.remove();\n\t\t\t\tthis.container.insertBefore(\n\t\t\t\t\tthis.overflowMenu.buttonElement,\n\t\t\t\t\tshowableMenus[this.numMenusShown].buttonElement,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.overflowMenu.buttonElement.style.visibility = \"visible\";\n\t\t} else {\n\t\t\tthis.overflowMenu.buttonElement.remove();\n\t\t\tthis.container.appendChild(this.overflowMenu.buttonElement);\n\t\t\tthis.overflowMenu.buttonElement.style.visibility = \"hidden\";\n\t\t}\n\n\t\t// If we are only showing the overflow, add this class to avoid taking up space\n\t\tthis.container.classList.toggle(\n\t\t\toverflowMenuOnlyClass,\n\t\t\tthis.numMenusShown === 0,\n\t\t);\n\t}\n\n\tprivate updateLabels(\n\t\ttitleElement: HTMLElement,\n\t\tbuttonElement: HTMLElement,\n\t\tlabel: string,\n\t): void {\n\t\tconst cleanMenuLabel = cleanMnemonic(label);\n\n\t\t// Update the button label to reflect mnemonics\n\n\t\tif (this.options.enableMnemonics) {\n\t\t\tconst cleanLabel = strings.escape(label);\n\n\t\t\t// This is global so reset it\n\t\t\tMENU_ESCAPED_MNEMONIC_REGEX.lastIndex = 0;\n\t\t\tlet escMatch = MENU_ESCAPED_MNEMONIC_REGEX.exec(cleanLabel);\n\n\t\t\t// We can't use negative lookbehind so we match our negative and skip\n\t\t\twhile (escMatch && escMatch[1]) {\n\t\t\t\tescMatch = MENU_ESCAPED_MNEMONIC_REGEX.exec(cleanLabel);\n\t\t\t}\n\n\t\t\tconst replaceDoubleEscapes = (str: string) =>\n\t\t\t\tstr.replace(/&amp;&amp;/g, \"&amp;\");\n\n\t\t\tif (escMatch) {\n\t\t\t\ttitleElement.innerText = \"\";\n\t\t\t\ttitleElement.append(\n\t\t\t\t\tstrings.ltrim(\n\t\t\t\t\t\treplaceDoubleEscapes(\n\t\t\t\t\t\t\tcleanLabel.substr(0, escMatch.index),\n\t\t\t\t\t\t),\n\t\t\t\t\t\t\" \",\n\t\t\t\t\t),\n\t\t\t\t\t$(\"mnemonic\", { \"aria-hidden\": \"true\" }, escMatch[3]),\n\t\t\t\t\tstrings.rtrim(\n\t\t\t\t\t\treplaceDoubleEscapes(\n\t\t\t\t\t\t\tcleanLabel.substr(\n\t\t\t\t\t\t\t\tescMatch.index + escMatch[0].length,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t),\n\t\t\t\t\t\t\" \",\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\ttitleElement.innerText =\n\t\t\t\t\treplaceDoubleEscapes(cleanLabel).trim();\n\t\t\t}\n\t\t} else {\n\t\t\ttitleElement.innerText = cleanMenuLabel.replace(/&&/g, \"&\");\n\t\t}\n\n\t\tconst mnemonicMatches = MENU_MNEMONIC_REGEX.exec(label);\n\n\t\t// Register mnemonics\n\t\tif (mnemonicMatches) {\n\t\t\tconst mnemonic = !!mnemonicMatches[1]\n\t\t\t\t? mnemonicMatches[1]\n\t\t\t\t: mnemonicMatches[3];\n\n\t\t\tif (this.options.enableMnemonics) {\n\t\t\t\tbuttonElement.setAttribute(\n\t\t\t\t\t\"aria-keyshortcuts\",\n\t\t\t\t\t\"Alt+\" + mnemonic.toLocaleLowerCase(),\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tbuttonElement.removeAttribute(\"aria-keyshortcuts\");\n\t\t\t}\n\t\t}\n\t}\n\n\tupdate(options?: IMenuBarOptions): void {\n\t\tif (options) {\n\t\t\tthis.options = options;\n\t\t}\n\n\t\t// Don't update while using the menu\n\t\tif (this.isFocused) {\n\t\t\tthis.updatePending = true;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.menus.forEach((menuBarMenu) => {\n\t\t\tif (!menuBarMenu.buttonElement || !menuBarMenu.titleElement) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.updateLabels(\n\t\t\t\tmenuBarMenu.titleElement,\n\t\t\t\tmenuBarMenu.buttonElement,\n\t\t\t\tmenuBarMenu.label,\n\t\t\t);\n\t\t});\n\n\t\tif (!this.overflowLayoutScheduled) {\n\t\t\tthis.overflowLayoutScheduled = DOM.scheduleAtNextAnimationFrame(\n\t\t\t\tDOM.getWindow(this.container),\n\t\t\t\t() => {\n\t\t\t\t\tthis.updateOverflowAction();\n\t\t\t\t\tthis.overflowLayoutScheduled = undefined;\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\n\t\tthis.setUnfocusedState();\n\t}\n\n\tprivate registerMnemonic(menuIndex: number, mnemonic: string): void {\n\t\tthis.mnemonics.set(mnemonic.toLocaleLowerCase(), menuIndex);\n\t}\n\n\tprivate hideMenubar(): void {\n\t\tif (this.container.style.display !== \"none\") {\n\t\t\tthis.container.style.display = \"none\";\n\t\t\tthis._onVisibilityChange.fire(false);\n\t\t}\n\t}\n\n\tprivate showMenubar(): void {\n\t\tif (this.container.style.display !== \"flex\") {\n\t\t\tthis.container.style.display = \"flex\";\n\t\t\tthis._onVisibilityChange.fire(true);\n\n\t\t\tthis.updateOverflowAction();\n\t\t}\n\t}\n\n\tprivate get focusState(): MenubarState {\n\t\treturn this._focusState;\n\t}\n\n\tprivate set focusState(value: MenubarState) {\n\t\tif (\n\t\t\tthis._focusState >= MenubarState.FOCUSED &&\n\t\t\tvalue < MenubarState.FOCUSED\n\t\t) {\n\t\t\t// Losing focus, update the menu if needed\n\n\t\t\tif (this.updatePending) {\n\t\t\t\tthis.menuUpdater.schedule();\n\t\t\t\tthis.updatePending = false;\n\t\t\t}\n\t\t}\n\n\t\tif (value === this._focusState) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isVisible = this.isVisible;\n\t\tconst isOpen = this.isOpen;\n\t\tconst isFocused = this.isFocused;\n\n\t\tthis._focusState = value;\n\n\t\tswitch (value) {\n\t\t\tcase MenubarState.HIDDEN:\n\t\t\t\tif (isVisible) {\n\t\t\t\t\tthis.hideMenubar();\n\t\t\t\t}\n\n\t\t\t\tif (isOpen) {\n\t\t\t\t\tthis.cleanupCustomMenu();\n\t\t\t\t}\n\n\t\t\t\tif (isFocused) {\n\t\t\t\t\tthis.focusedMenu = undefined;\n\n\t\t\t\t\tif (this.focusToReturn) {\n\t\t\t\t\t\tthis.focusToReturn.focus();\n\t\t\t\t\t\tthis.focusToReturn = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase MenubarState.VISIBLE:\n\t\t\t\tif (!isVisible) {\n\t\t\t\t\tthis.showMenubar();\n\t\t\t\t}\n\n\t\t\t\tif (isOpen) {\n\t\t\t\t\tthis.cleanupCustomMenu();\n\t\t\t\t}\n\n\t\t\t\tif (isFocused) {\n\t\t\t\t\tif (this.focusedMenu) {\n\t\t\t\t\t\tif (this.focusedMenu.index === MenuBar.OVERFLOW_INDEX) {\n\t\t\t\t\t\t\tthis.overflowMenu.buttonElement.blur();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.menus[\n\t\t\t\t\t\t\t\tthis.focusedMenu.index\n\t\t\t\t\t\t\t].buttonElement?.blur();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.focusedMenu = undefined;\n\n\t\t\t\t\tif (this.focusToReturn) {\n\t\t\t\t\t\tthis.focusToReturn.focus();\n\t\t\t\t\t\tthis.focusToReturn = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase MenubarState.FOCUSED:\n\t\t\t\tif (!isVisible) {\n\t\t\t\t\tthis.showMenubar();\n\t\t\t\t}\n\n\t\t\t\tif (isOpen) {\n\t\t\t\t\tthis.cleanupCustomMenu();\n\t\t\t\t}\n\n\t\t\t\tif (this.focusedMenu) {\n\t\t\t\t\tif (this.focusedMenu.index === MenuBar.OVERFLOW_INDEX) {\n\t\t\t\t\t\tthis.overflowMenu.buttonElement.focus();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.menus[\n\t\t\t\t\t\t\tthis.focusedMenu.index\n\t\t\t\t\t\t].buttonElement?.focus();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase MenubarState.OPEN:\n\t\t\t\tif (!isVisible) {\n\t\t\t\t\tthis.showMenubar();\n\t\t\t\t}\n\n\t\t\t\tif (this.focusedMenu) {\n\t\t\t\t\tthis.cleanupCustomMenu();\n\t\t\t\t\tthis.showCustomMenu(\n\t\t\t\t\t\tthis.focusedMenu.index,\n\t\t\t\t\t\tthis.openedViaKeyboard,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis._focusState = value;\n\t\tthis._onFocusStateChange.fire(this.focusState >= MenubarState.FOCUSED);\n\t}\n\n\tget isVisible(): boolean {\n\t\treturn this.focusState >= MenubarState.VISIBLE;\n\t}\n\n\tprivate get isFocused(): boolean {\n\t\treturn this.focusState >= MenubarState.FOCUSED;\n\t}\n\n\tprivate get isOpen(): boolean {\n\t\treturn this.focusState >= MenubarState.OPEN;\n\t}\n\n\tprivate get hasOverflow(): boolean {\n\t\treturn this.isCompact || this.numMenusShown < this.menus.length;\n\t}\n\n\tprivate get isCompact(): boolean {\n\t\treturn this.options.compactMode !== undefined;\n\t}\n\n\tprivate setUnfocusedState(): void {\n\t\tif (\n\t\t\tthis.options.visibility === \"toggle\" ||\n\t\t\tthis.options.visibility === \"hidden\"\n\t\t) {\n\t\t\tthis.focusState = MenubarState.HIDDEN;\n\t\t} else if (\n\t\t\tthis.options.visibility === \"classic\" &&\n\t\t\tbrowser.isFullscreen(mainWindow)\n\t\t) {\n\t\t\tthis.focusState = MenubarState.HIDDEN;\n\t\t} else {\n\t\t\tthis.focusState = MenubarState.VISIBLE;\n\t\t}\n\n\t\tthis.ignoreNextMouseUp = false;\n\t\tthis.mnemonicsInUse = false;\n\t\tthis.updateMnemonicVisibility(false);\n\t}\n\n\tprivate focusPrevious(): void {\n\t\tif (!this.focusedMenu || this.numMenusShown === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet newFocusedIndex =\n\t\t\t(this.focusedMenu.index - 1 + this.numMenusShown) %\n\t\t\tthis.numMenusShown;\n\t\tif (this.focusedMenu.index === MenuBar.OVERFLOW_INDEX) {\n\t\t\tnewFocusedIndex = this.numMenusShown - 1;\n\t\t} else if (this.focusedMenu.index === 0 && this.hasOverflow) {\n\t\t\tnewFocusedIndex = MenuBar.OVERFLOW_INDEX;\n\t\t}\n\n\t\tif (newFocusedIndex === this.focusedMenu.index) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.isOpen) {\n\t\t\tthis.cleanupCustomMenu();\n\t\t\tthis.showCustomMenu(newFocusedIndex);\n\t\t} else if (this.isFocused) {\n\t\t\tthis.focusedMenu.index = newFocusedIndex;\n\t\t\tif (newFocusedIndex === MenuBar.OVERFLOW_INDEX) {\n\t\t\t\tthis.overflowMenu.buttonElement.focus();\n\t\t\t} else {\n\t\t\t\tthis.menus[newFocusedIndex].buttonElement?.focus();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate focusNext(): void {\n\t\tif (!this.focusedMenu || this.numMenusShown === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet newFocusedIndex = (this.focusedMenu.index + 1) % this.numMenusShown;\n\t\tif (this.focusedMenu.index === MenuBar.OVERFLOW_INDEX) {\n\t\t\tnewFocusedIndex = 0;\n\t\t} else if (this.focusedMenu.index === this.numMenusShown - 1) {\n\t\t\tnewFocusedIndex = MenuBar.OVERFLOW_INDEX;\n\t\t}\n\n\t\tif (newFocusedIndex === this.focusedMenu.index) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.isOpen) {\n\t\t\tthis.cleanupCustomMenu();\n\t\t\tthis.showCustomMenu(newFocusedIndex);\n\t\t} else if (this.isFocused) {\n\t\t\tthis.focusedMenu.index = newFocusedIndex;\n\t\t\tif (newFocusedIndex === MenuBar.OVERFLOW_INDEX) {\n\t\t\t\tthis.overflowMenu.buttonElement.focus();\n\t\t\t} else {\n\t\t\t\tthis.menus[newFocusedIndex].buttonElement?.focus();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateMnemonicVisibility(visible: boolean): void {\n\t\tif (this.menus) {\n\t\t\tthis.menus.forEach((menuBarMenu) => {\n\t\t\t\tif (\n\t\t\t\t\tmenuBarMenu.titleElement &&\n\t\t\t\t\tmenuBarMenu.titleElement.children.length\n\t\t\t\t) {\n\t\t\t\t\tconst child = menuBarMenu.titleElement.children.item(\n\t\t\t\t\t\t0,\n\t\t\t\t\t) as HTMLElement;\n\t\t\t\t\tif (child) {\n\t\t\t\t\t\tchild.style.textDecoration =\n\t\t\t\t\t\t\tthis.options.alwaysOnMnemonics || visible\n\t\t\t\t\t\t\t\t? \"underline\"\n\t\t\t\t\t\t\t\t: \"\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate get mnemonicsInUse(): boolean {\n\t\treturn this._mnemonicsInUse;\n\t}\n\n\tprivate set mnemonicsInUse(value: boolean) {\n\t\tthis._mnemonicsInUse = value;\n\t}\n\n\tprivate get shouldAltKeyFocus(): boolean {\n\t\tif (isMacintosh) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!this.options.disableAltFocus) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (this.options.visibility === \"toggle\") {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic get onVisibilityChange(): Event<boolean> {\n\t\treturn this._onVisibilityChange.event;\n\t}\n\n\tpublic get onFocusStateChange(): Event<boolean> {\n\t\treturn this._onFocusStateChange.event;\n\t}\n\n\tprivate onMenuTriggered(menuIndex: number, clicked: boolean) {\n\t\tif (this.isOpen) {\n\t\t\tif (this.isCurrentMenu(menuIndex)) {\n\t\t\t\tthis.setUnfocusedState();\n\t\t\t} else {\n\t\t\t\tthis.cleanupCustomMenu();\n\t\t\t\tthis.showCustomMenu(menuIndex, this.openedViaKeyboard);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.focusedMenu = { index: menuIndex };\n\t\t\tthis.openedViaKeyboard = !clicked;\n\t\t\tthis.focusState = MenubarState.OPEN;\n\t\t}\n\t}\n\n\tprivate onModifierKeyToggled(\n\t\tmodifierKeyStatus: DOM.IModifierKeyStatus,\n\t): void {\n\t\tconst allModifiersReleased =\n\t\t\t!modifierKeyStatus.altKey &&\n\t\t\t!modifierKeyStatus.ctrlKey &&\n\t\t\t!modifierKeyStatus.shiftKey &&\n\t\t\t!modifierKeyStatus.metaKey;\n\n\t\tif (this.options.visibility === \"hidden\") {\n\t\t\treturn;\n\t\t}\n\n\t\t// Prevent alt-key default if the menu is not hidden and we use alt to focus\n\t\tif (modifierKeyStatus.event && this.shouldAltKeyFocus) {\n\t\t\tif (\n\t\t\t\tScanCodeUtils.toEnum(modifierKeyStatus.event.code) ===\n\t\t\t\tScanCode.AltLeft\n\t\t\t) {\n\t\t\t\tmodifierKeyStatus.event.preventDefault();\n\t\t\t}\n\t\t}\n\n\t\t// Alt key pressed while menu is focused. This should return focus away from the menubar\n\t\tif (\n\t\t\tthis.isFocused &&\n\t\t\tmodifierKeyStatus.lastKeyPressed === \"alt\" &&\n\t\t\tmodifierKeyStatus.altKey\n\t\t) {\n\t\t\tthis.setUnfocusedState();\n\t\t\tthis.mnemonicsInUse = false;\n\t\t\tthis.awaitingAltRelease = true;\n\t\t}\n\n\t\t// Clean alt key press and release\n\t\tif (\n\t\t\tallModifiersReleased &&\n\t\t\tmodifierKeyStatus.lastKeyPressed === \"alt\" &&\n\t\t\tmodifierKeyStatus.lastKeyReleased === \"alt\"\n\t\t) {\n\t\t\tif (!this.awaitingAltRelease) {\n\t\t\t\tif (!this.isFocused && this.shouldAltKeyFocus) {\n\t\t\t\t\tthis.mnemonicsInUse = true;\n\t\t\t\t\tthis.focusedMenu = {\n\t\t\t\t\t\tindex:\n\t\t\t\t\t\t\tthis.numMenusShown > 0 ? 0 : MenuBar.OVERFLOW_INDEX,\n\t\t\t\t\t};\n\t\t\t\t\tthis.focusState = MenubarState.FOCUSED;\n\t\t\t\t} else if (!this.isOpen) {\n\t\t\t\t\tthis.setUnfocusedState();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Alt key released\n\t\tif (\n\t\t\t!modifierKeyStatus.altKey &&\n\t\t\tmodifierKeyStatus.lastKeyReleased === \"alt\"\n\t\t) {\n\t\t\tthis.awaitingAltRelease = false;\n\t\t}\n\n\t\tif (this.options.enableMnemonics && this.menus && !this.isOpen) {\n\t\t\tthis.updateMnemonicVisibility(\n\t\t\t\t(!this.awaitingAltRelease && modifierKeyStatus.altKey) ||\n\t\t\t\t\tthis.mnemonicsInUse,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate isCurrentMenu(menuIndex: number): boolean {\n\t\tif (!this.focusedMenu) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.focusedMenu.index === menuIndex;\n\t}\n\n\tprivate cleanupCustomMenu(): void {\n\t\tif (this.focusedMenu) {\n\t\t\t// Remove focus from the menus first\n\t\t\tif (this.focusedMenu.index === MenuBar.OVERFLOW_INDEX) {\n\t\t\t\tthis.overflowMenu.buttonElement.focus();\n\t\t\t} else {\n\t\t\t\tthis.menus[this.focusedMenu.index].buttonElement?.focus();\n\t\t\t}\n\n\t\t\tif (this.focusedMenu.holder) {\n\t\t\t\tthis.focusedMenu.holder.parentElement?.classList.remove(\"open\");\n\n\t\t\t\tthis.focusedMenu.holder.remove();\n\t\t\t}\n\n\t\t\tthis.focusedMenu.widget?.dispose();\n\n\t\t\tthis.focusedMenu = { index: this.focusedMenu.index };\n\t\t}\n\t\tthis.menuDisposables.clear();\n\t}\n\n\tprivate showCustomMenu(menuIndex: number, selectFirst = true): void {\n\t\tconst actualMenuIndex =\n\t\t\tmenuIndex >= this.numMenusShown\n\t\t\t\t? MenuBar.OVERFLOW_INDEX\n\t\t\t\t: menuIndex;\n\t\tconst customMenu =\n\t\t\tactualMenuIndex === MenuBar.OVERFLOW_INDEX\n\t\t\t\t? this.overflowMenu\n\t\t\t\t: this.menus[actualMenuIndex];\n\n\t\tif (\n\t\t\t!customMenu.actions ||\n\t\t\t!customMenu.buttonElement ||\n\t\t\t!customMenu.titleElement\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst menuHolder = $(\"div.menubar-menu-items-holder\", { title: \"\" });\n\n\t\tcustomMenu.buttonElement.classList.add(\"open\");\n\n\t\tconst titleBoundingRect =\n\t\t\tcustomMenu.titleElement.getBoundingClientRect();\n\t\tconst titleBoundingRectZoom = DOM.getDomNodeZoomLevel(\n\t\t\tcustomMenu.titleElement,\n\t\t);\n\n\t\tif (\n\t\t\tthis.options.compactMode?.horizontal === HorizontalDirection.Right\n\t\t) {\n\t\t\tmenuHolder.style.left = `${titleBoundingRect.left + this.container.clientWidth}px`;\n\t\t} else if (\n\t\t\tthis.options.compactMode?.horizontal === HorizontalDirection.Left\n\t\t) {\n\t\t\tconst windowWidth = DOM.getWindow(this.container).innerWidth;\n\t\t\tmenuHolder.style.right = `${windowWidth - titleBoundingRect.left}px`;\n\t\t\tmenuHolder.style.left = \"auto\";\n\t\t} else {\n\t\t\tmenuHolder.style.left = `${titleBoundingRect.left * titleBoundingRectZoom}px`;\n\t\t}\n\n\t\tif (this.options.compactMode?.vertical === VerticalDirection.Above) {\n\t\t\t// TODO@benibenj Do not hardcode the height of the menu holder\n\t\t\tmenuHolder.style.top = `${titleBoundingRect.top - this.menus.length * 30 + this.container.clientHeight}px`;\n\t\t} else if (\n\t\t\tthis.options.compactMode?.vertical === VerticalDirection.Below\n\t\t) {\n\t\t\tmenuHolder.style.top = `${titleBoundingRect.top}px`;\n\t\t} else {\n\t\t\tmenuHolder.style.top = `${titleBoundingRect.bottom * titleBoundingRectZoom}px`;\n\t\t}\n\n\t\tcustomMenu.buttonElement.appendChild(menuHolder);\n\n\t\tconst menuOptions: IMenuOptions = {\n\t\t\tgetKeyBinding: this.options.getKeybinding,\n\t\t\tactionRunner: this.actionRunner,\n\t\t\tenableMnemonics:\n\t\t\t\tthis.options.alwaysOnMnemonics ||\n\t\t\t\t(this.mnemonicsInUse && this.options.enableMnemonics),\n\t\t\tariaLabel:\n\t\t\t\tcustomMenu.buttonElement.getAttribute(\"aria-label\") ??\n\t\t\t\tundefined,\n\t\t\texpandDirection: this.isCompact\n\t\t\t\t? this.options.compactMode\n\t\t\t\t: {\n\t\t\t\t\t\thorizontal: HorizontalDirection.Right,\n\t\t\t\t\t\tvertical: VerticalDirection.Below,\n\t\t\t\t\t},\n\t\t\tuseEventAsContext: true,\n\t\t};\n\n\t\tconst menuWidget = this.menuDisposables.add(\n\t\t\tnew Menu(\n\t\t\t\tmenuHolder,\n\t\t\t\tcustomMenu.actions,\n\t\t\t\tmenuOptions,\n\t\t\t\tthis.menuStyle,\n\t\t\t),\n\t\t);\n\t\tthis.menuDisposables.add(\n\t\t\tmenuWidget.onDidCancel(() => {\n\t\t\t\tthis.focusState = MenubarState.FOCUSED;\n\t\t\t}),\n\t\t);\n\n\t\tif (actualMenuIndex !== menuIndex) {\n\t\t\tmenuWidget.trigger(menuIndex - this.numMenusShown);\n\t\t} else {\n\t\t\tmenuWidget.focus(selectFirst);\n\t\t}\n\n\t\tthis.focusedMenu = {\n\t\t\tindex: actualMenuIndex,\n\t\t\tholder: menuHolder,\n\t\t\twidget: menuWidget,\n\t\t};\n\t}\n}\n"],
  "mappings": ";;AAKA;AAAA,EACC;AAAA,EAGA;AAAA,EACA;AAAA,OACM;AACP,SAAS,eAAe;AACxB,SAAS,wBAAwB;AACjC,SAAS,eAAe;AACxB,SAAS,eAA2B;AACpC;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AAEP;AAAA,EACC;AAAA,EACA;AAAA,EAEA;AAAA,OACM;AACP,SAAS,mBAAmB;AAC5B,YAAY,aAAa;AACzB,SAAS,iBAAiB;AAC1B,YAAY,aAAa;AACzB,YAAY,SAAS;AACrB,SAAS,6BAA6B;AACtC,SAAS,0BAA0B;AACnC,SAAS,WAAW,eAAkC;AACtD;AAAA,EACC;AAAA,EAIA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,OAAO;AACP,YAAY,SAAS;AACrB,SAAS,kBAAkB;AAE3B,MAAM,IAAI,IAAI;AAuBd,IAAK,eAAL,kBAAKA,kBAAL;AACC,EAAAA,4BAAA,YAAS,KAAT;AACA,EAAAA,4BAAA,aAAU,KAAV;AACA,EAAAA,4BAAA,aAAU,KAAV;AACA,EAAAA,4BAAA,UAAO,KAAP;AAJI,SAAAA;AAAA,GAAA;AAOE,MAAM,gBAAgB,WAAW;AAAA,EAwCvC,YACS,WACA,SACA,WACP;AACD,UAAM;AAJE;AACA;AACA;AAIR,SAAK,UAAU,aAAa,QAAQ,SAAS;AAC7C,QAAI,KAAK,WAAW;AACnB,WAAK,UAAU,UAAU,IAAI,SAAS;AAAA,IACvC;AAEA,SAAK,QAAQ,CAAC;AACd,SAAK,YAAY,oBAAI,IAAoB;AAEzC,SAAK,cAAc;AAEnB,SAAK,sBAAsB,KAAK,UAAU,IAAI,QAAiB,CAAC;AAChE,SAAK,sBAAsB,KAAK,UAAU,IAAI,QAAiB,CAAC;AAEhE,SAAK,mBAAmB;AAExB,SAAK,cAAc,KAAK;AAAA,MACvB,IAAI,iBAAiB,MAAM,KAAK,OAAO,GAAG,GAAG;AAAA,IAC9C;AAEA,SAAK,eACJ,KAAK,QAAQ,gBAAgB,KAAK,UAAU,IAAI,aAAa,CAAC;AAC/D,SAAK;AAAA,MACJ,KAAK,aAAa,UAAU,MAAM;AACjC,aAAK,kBAAkB;AAAA,MACxB,CAAC;AAAA,IACF;AAEA,SAAK;AAAA,MACJ,IAAI,mBAAmB,YAAY,EAAE;AAAA,QACpC,KAAK;AAAA,QACL;AAAA,MACD;AAAA,IACD;AAEA,SAAK;AAAA,MACJ,IAAI;AAAA,QACH,KAAK;AAAA,QACL,IAAI,UAAU;AAAA,QACd,CAAC,MAAM;AACN,gBAAM,QAAQ,IAAI,sBAAsB,CAAkB;AAC1D,cAAI,eAAe;AACnB,gBAAM,MAAM,CAAC,CAAC,EAAE,MAAM,EAAE,IAAI,kBAAkB,IAAI;AAElD,gBAAM,SAAS,eAAe,CAAC,KAAK;AAEpC,cACC,MAAM,OAAO,QAAQ,SAAS,KAC7B,UAAU,MAAM,OAAO,QAAQ,MAAM,OAAO,KAAK,GACjD;AACD,iBAAK,cAAc;AAAA,UACpB,WACC,MAAM,OAAO,QAAQ,UAAU,KAC9B,UAAU,MAAM,OAAO,QAAQ,GAAG,GAClC;AACD,iBAAK,UAAU;AAAA,UAChB,WACC,MAAM,OAAO,QAAQ,MAAM,KAC3B,KAAK,aACL,CAAC,KAAK,QACL;AACD,iBAAK,kBAAkB;AAAA,UACxB,WACC,CAAC,KAAK,UACN,CAAC,MAAM,WACP,KAAK,QAAQ,mBACb,KAAK,kBACL,KAAK,UAAU,IAAI,GAAG,GACrB;AACD,kBAAM,YAAY,KAAK,UAAU,IAAI,GAAG;AACxC,iBAAK,gBAAgB,WAAW,KAAK;AAAA,UACtC,OAAO;AACN,2BAAe;AAAA,UAChB;AAGA,cACC,CAAC,KAAK,cACL,MAAM,OAAO,QAAQ,MAAM,OAAO,KAAK,KACvC,MAAM,OAAO,QAAQ,GAAG,IACxB;AACD,kBAAM,eAAe;AAAA,UACtB;AAEA,cAAI,cAAc;AACjB,kBAAM,eAAe;AACrB,kBAAM,gBAAgB;AAAA,UACvB;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAEA,UAAM,SAAS,IAAI,UAAU,KAAK,SAAS;AAC3C,SAAK;AAAA,MACJ,IAAI,sBAAsB,QAAQ,IAAI,UAAU,YAAY,MAAM;AAEjE,YAAI,KAAK,WAAW;AACnB,eAAK,kBAAkB;AAAA,QACxB;AAAA,MACD,CAAC;AAAA,IACF;AAEA,SAAK;AAAA,MACJ,IAAI;AAAA,QACH,KAAK;AAAA,QACL,IAAI,UAAU;AAAA,QACd,CAAC,MAAM;AACN,gBAAM,QAAQ;AAEd,cAAI,MAAM,eAAe;AACxB,gBACC,CAAC,KAAK,UAAU;AAAA,cACf,MAAM;AAAA,YACP,GACC;AACD,mBAAK,gBACJ,MAAM;AAAA,YACR;AAAA,UACD;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAEA,SAAK;AAAA,MACJ,IAAI;AAAA,QACH,KAAK;AAAA,QACL,IAAI,UAAU;AAAA,QACd,CAAC,MAAM;AACN,gBAAM,QAAQ;AAGd,cAAI,CAAC,MAAM,eAAe;AACzB,iBAAK,kBAAkB;AAAA,UACxB,WAGC,MAAM,iBACN,CAAC,KAAK,UAAU;AAAA,YACf,MAAM;AAAA,UACP,GACC;AACD,iBAAK,gBAAgB;AACrB,iBAAK,kBAAkB;AAAA,UACxB;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAEA,SAAK;AAAA,MACJ,IAAI;AAAA,QACH;AAAA,QACA,IAAI,UAAU;AAAA,QACd,CAAC,MAAqB;AACrB,cACC,CAAC,KAAK,QAAQ,mBACd,CAAC,EAAE,UACH,EAAE,WACF,EAAE,kBACD;AACD;AAAA,UACD;AAEA,gBAAM,MAAM,EAAE,IAAI,kBAAkB;AACpC,cAAI,CAAC,KAAK,UAAU,IAAI,GAAG,GAAG;AAC7B;AAAA,UACD;AAEA,eAAK,iBAAiB;AACtB,eAAK,yBAAyB,IAAI;AAElC,gBAAM,YAAY,KAAK,UAAU,IAAI,GAAG;AACxC,eAAK,gBAAgB,WAAW,KAAK;AAAA,QACtC;AAAA,MACD;AAAA,IACD;AAEA,SAAK,kBAAkB;AAAA,EACxB;AAAA,EAjTD,OAkFwC;AAAA;AAAA;AAAA,EACvC,OAAgB,iBAAyB;AAAA,EAEjC;AAAA,EAEA;AAAA,EAKA;AAAA,EAQA;AAAA,EACA;AAAA;AAAA,EAGA,kBAAkB;AAAA,EAClB,oBAAoB;AAAA,EACpB,qBAAqB;AAAA,EACrB,oBAAoB;AAAA,EACpB;AAAA,EAEA,gBAAgB;AAAA,EAChB;AAAA,EACA;AAAA,EAES;AAAA,EACA;AAAA,EAET,gBAAgB;AAAA,EAChB,0BAAmD;AAAA,EAE1C,kBAAkB,KAAK,UAAU,IAAI,gBAAgB,CAAC;AAAA,EA2LvE,KAAK,KAAwC;AAC5C,UAAM,QAAuB,QAAQ,GAAG;AAExC,UAAM,QAAQ,CAAC,gBAAgB;AAC9B,YAAM,YAAY,KAAK,MAAM;AAC7B,YAAM,iBAAiB,cAAc,YAAY,KAAK;AAEtD,YAAM,kBAAkB,oBAAoB,KAAK,YAAY,KAAK;AAGlE,UAAI,iBAAiB;AACpB,cAAM,WAAW,CAAC,CAAC,gBAAgB,CAAC,IACjC,gBAAgB,CAAC,IACjB,gBAAgB,CAAC;AAEpB,aAAK,iBAAiB,KAAK,MAAM,QAAQ,QAAQ;AAAA,MAClD;AAEA,UAAI,KAAK,WAAW;AACnB,aAAK,MAAM,KAAK,WAAW;AAAA,MAC5B,OAAO;AACN,cAAM,gBAAgB,EAAE,2BAA2B;AAAA,UAClD,MAAM;AAAA,UACN,UAAU;AAAA,UACV,cAAc;AAAA,UACd,iBAAiB;AAAA,QAClB,CAAC;AACD,cAAM,eAAe,EAAE,0BAA0B;AAAA,UAChD,MAAM;AAAA,UACN,eAAe;AAAA,QAChB,CAAC;AAED,sBAAc,YAAY,YAAY;AACtC,aAAK,UAAU;AAAA,UACd;AAAA,UACA,KAAK,aAAa;AAAA,QACnB;AAEA,aAAK;AAAA,UACJ;AAAA,UACA;AAAA,UACA,YAAY;AAAA,QACb;AAEA,aAAK;AAAA,UACJ,IAAI;AAAA,YACH;AAAA,YACA,IAAI,UAAU;AAAA,YACd,CAAC,MAAM;AACN,oBAAM,QAAQ,IAAI;AAAA,gBACjB;AAAA,cACD;AACA,kBAAI,eAAe;AAEnB,mBACE,MAAM,OAAO,QAAQ,SAAS,KAC9B,MAAM,OAAO,QAAQ,KAAK,MAC3B,CAAC,KAAK,QACL;AACD,qBAAK,cAAc,EAAE,OAAO,UAAU;AACtC,qBAAK,oBAAoB;AACzB,qBAAK,aAAa;AAAA,cACnB,OAAO;AACN,+BAAe;AAAA,cAChB;AAEA,kBAAI,cAAc;AACjB,sBAAM,eAAe;AACrB,sBAAM,gBAAgB;AAAA,cACvB;AAAA,YACD;AAAA,UACD;AAAA,QACD;AAEA,aAAK,UAAU,QAAQ,UAAU,aAAa,CAAC;AAC/C,aAAK;AAAA,UACJ,IAAI;AAAA,YACH;AAAA,YACA,UAAU;AAAA,YACV,CAAC,MAAoB;AAEpB,kBACC,KAAK,UACL,KAAK,eACL,KAAK,YAAY,UACjB,IAAI;AAAA,gBACH,EAAE;AAAA,gBACF,KAAK,YAAY;AAAA,cAClB,GACC;AACD;AAAA,cACD;AAEA,mBAAK,oBAAoB;AACzB,mBAAK,gBAAgB,WAAW,IAAI;AAEpC,gBAAE,eAAe;AACjB,gBAAE,gBAAgB;AAAA,YACnB;AAAA,UACD;AAAA,QACD;AAEA,aAAK;AAAA,UACJ,IAAI;AAAA,YACH;AAAA,YACA,IAAI,UAAU;AAAA,YACd,CAAC,MAAkB;AAElB,oBAAM,aAAa,IAAI;AAAA,gBACtB,IAAI,UAAU,aAAa;AAAA,gBAC3B;AAAA,cACD;AACA,kBAAI,CAAC,WAAW,YAAY;AAC3B,kBAAE,eAAe;AACjB;AAAA,cACD;AAEA,kBAAI,KAAK,QAAQ;AAChB,qBAAK,oBAAoB;AAAA,cAC1B,OAAO;AAEN,qBAAK,oBAAoB;AACzB,qBAAK,gBAAgB,WAAW,IAAI;AAAA,cACrC;AAEA,gBAAE,eAAe;AACjB,gBAAE,gBAAgB;AAAA,YACnB;AAAA,UACD;AAAA,QACD;AAEA,aAAK;AAAA,UACJ,IAAI;AAAA,YACH;AAAA,YACA,IAAI,UAAU;AAAA,YACd,CAAC,MAAM;AACN,kBAAI,EAAE,kBAAkB;AACvB;AAAA,cACD;AAEA,kBAAI,KAAK,mBAAmB;AAC3B,qBAAK,oBAAoB;AAAA,cAC1B,WAAW,KAAK,WAAW;AAC1B,qBAAK,gBAAgB,WAAW,IAAI;AAAA,cACrC;AAAA,YACD;AAAA,UACD;AAAA,QACD;AAEA,aAAK;AAAA,UACJ,IAAI;AAAA,YACH;AAAA,YACA,IAAI,UAAU;AAAA,YACd,MAAM;AACL,kBAAI,KAAK,UAAU,CAAC,KAAK,cAAc,SAAS,GAAG;AAClD,8BAAc,MAAM;AACpB,qBAAK,kBAAkB;AACvB,qBAAK,eAAe,WAAW,KAAK;AAAA,cACrC,WAAW,KAAK,aAAa,CAAC,KAAK,QAAQ;AAC1C,qBAAK,cAAc,EAAE,OAAO,UAAU;AACtC,8BAAc,MAAM;AAAA,cACrB;AAAA,YACD;AAAA,UACD;AAAA,QACD;AAEA,aAAK,MAAM,KAAK;AAAA,UACf,OAAO,YAAY;AAAA,UACnB,SAAS,YAAY;AAAA,UACrB;AAAA,UACA;AAAA,QACD,CAAC;AAAA,MACF;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEA,qBAA2B;AAC1B,UAAM,QAAQ,KAAK,YAChB,IAAI,SAAS,YAAY,kBAAkB,IAC3C,IAAI,SAAS,SAAS,MAAM;AAC/B,UAAM,gBAAgB,EAAE,2BAA2B;AAAA,MAClD,MAAM;AAAA,MACN,UAAU,KAAK,YAAY,IAAI;AAAA,MAC/B,cAAc;AAAA,MACd,iBAAiB;AAAA,IAClB,CAAC;AACD,UAAM,eAAe;AAAA,MACpB,+CACC,UAAU,cAAc,QAAQ,WAAW;AAAA,MAC5C,EAAE,MAAM,QAAQ,eAAe,KAAK;AAAA,IACrC;AAEA,kBAAc,YAAY,YAAY;AACtC,SAAK,UAAU,YAAY,aAAa;AACxC,kBAAc,MAAM,aAAa;AAEjC,SAAK;AAAA,MACJ,IAAI;AAAA,QACH;AAAA,QACA,IAAI,UAAU;AAAA,QACd,CAAC,MAAM;AACN,gBAAM,QAAQ,IAAI,sBAAsB,CAAkB;AAC1D,cAAI,eAAe;AAEnB,gBAAM,cAAc,CAAC,QAAQ,KAAK;AAClC,cAAI,KAAK,WAAW;AACnB,wBAAY,KAAK,QAAQ,KAAK;AAE9B,gBACC,KAAK,QAAQ,aAAa,eAC1B,oBAAoB,OACnB;AACD,0BAAY,KAAK,QAAQ,UAAU;AAAA,YACpC,WACC,KAAK,QAAQ,aAAa,eAC1B,oBAAoB,MACnB;AACD,0BAAY,KAAK,QAAQ,SAAS;AAAA,YACnC;AAAA,UACD,OAAO;AACN,wBAAY,KAAK,QAAQ,SAAS;AAAA,UACnC;AAEA,cACC,YAAY,KAAK,CAAC,MAAM,MAAM,OAAO,CAAC,CAAC,KACvC,CAAC,KAAK,QACL;AACD,iBAAK,cAAc,EAAE,OAAO,QAAQ,eAAe;AACnD,iBAAK,oBAAoB;AACzB,iBAAK,aAAa;AAAA,UACnB,OAAO;AACN,2BAAe;AAAA,UAChB;AAEA,cAAI,cAAc;AACjB,kBAAM,eAAe;AACrB,kBAAM,gBAAgB;AAAA,UACvB;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAEA,SAAK,UAAU,QAAQ,UAAU,aAAa,CAAC;AAC/C,SAAK;AAAA,MACJ,IAAI;AAAA,QACH;AAAA,QACA,UAAU;AAAA,QACV,CAAC,MAAoB;AAEpB,cACC,KAAK,UACL,KAAK,eACL,KAAK,YAAY,UACjB,IAAI;AAAA,YACH,EAAE;AAAA,YACF,KAAK,YAAY;AAAA,UAClB,GACC;AACD;AAAA,UACD;AAEA,eAAK,oBAAoB;AACzB,eAAK,gBAAgB,QAAQ,gBAAgB,IAAI;AAEjD,YAAE,eAAe;AACjB,YAAE,gBAAgB;AAAA,QACnB;AAAA,MACD;AAAA,IACD;AAEA,SAAK;AAAA,MACJ,IAAI;AAAA,QACH;AAAA,QACA,IAAI,UAAU;AAAA,QACd,CAAC,MAAM;AAEN,gBAAM,aAAa,IAAI;AAAA,YACtB,IAAI,UAAU,aAAa;AAAA,YAC3B;AAAA,UACD;AACA,cAAI,CAAC,WAAW,YAAY;AAC3B,cAAE,eAAe;AACjB;AAAA,UACD;AAEA,cAAI,KAAK,QAAQ;AAChB,iBAAK,oBAAoB;AAAA,UAC1B,OAAO;AAEN,iBAAK,oBAAoB;AACzB,iBAAK,gBAAgB,QAAQ,gBAAgB,IAAI;AAAA,UAClD;AAEA,YAAE,eAAe;AACjB,YAAE,gBAAgB;AAAA,QACnB;AAAA,MACD;AAAA,IACD;AAEA,SAAK;AAAA,MACJ,IAAI;AAAA,QACH;AAAA,QACA,IAAI,UAAU;AAAA,QACd,CAAC,MAAM;AACN,cAAI,EAAE,kBAAkB;AACvB;AAAA,UACD;AAEA,cAAI,KAAK,mBAAmB;AAC3B,iBAAK,oBAAoB;AAAA,UAC1B,WAAW,KAAK,WAAW;AAC1B,iBAAK,gBAAgB,QAAQ,gBAAgB,IAAI;AAAA,UAClD;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAEA,SAAK;AAAA,MACJ,IAAI;AAAA,QACH;AAAA,QACA,IAAI,UAAU;AAAA,QACd,MAAM;AACL,cACC,KAAK,UACL,CAAC,KAAK,cAAc,QAAQ,cAAc,GACzC;AACD,iBAAK,aAAa,cAAc,MAAM;AACtC,iBAAK,kBAAkB;AACvB,iBAAK,eAAe,QAAQ,gBAAgB,KAAK;AAAA,UAClD,WAAW,KAAK,aAAa,CAAC,KAAK,QAAQ;AAC1C,iBAAK,cAAc,EAAE,OAAO,QAAQ,eAAe;AACnD,0BAAc,MAAM;AAAA,UACrB;AAAA,QACD;AAAA,MACD;AAAA,IACD;AAEA,SAAK,eAAe;AAAA,MACnB;AAAA,MACA;AAAA,MACA,OAAO;AAAA,MACP,SAAS,CAAC;AAAA,IACX;AAAA,EACD;AAAA,EAEA,WAAW,MAAyB;AACnC,UAAM,eAAe,KAAK,MAAM;AAAA,MAC/B,CAAC,gBAAgB,YAAY,UAAU,KAAK;AAAA,IAC7C;AACA,QAAI,gBAAgB,aAAa,QAAQ;AACxC,mBAAa,CAAC,EAAE,UAAU,KAAK;AAAA,IAChC;AAAA,EACD;AAAA,EAES,UAAgB;AACxB,UAAM,QAAQ;AAEd,SAAK,MAAM,QAAQ,CAAC,gBAAgB;AACnC,kBAAY,cAAc,OAAO;AACjC,kBAAY,eAAe,OAAO;AAAA,IACnC,CAAC;AAED,SAAK,aAAa,aAAa,OAAO;AACtC,SAAK,aAAa,cAAc,OAAO;AAEvC,YAAQ,KAAK,uBAAuB;AACpC,SAAK,0BAA0B;AAAA,EAChC;AAAA,EAEA,OAAa;AACZ,SAAK,kBAAkB;AAAA,EACxB;AAAA,EAEA,WAAmB;AAClB,QAAI,CAAC,KAAK,aAAa,KAAK,OAAO;AAClC,YAAM,OACL,KAAK,MAAM,CAAC,EAAE,cAAe,sBAAsB,EAAE;AACtD,YAAM,QAAQ,KAAK,cAChB,KAAK,aAAa,cAAc,sBAAsB,EAAE,QACxD,KAAK,MACL,KAAK,MAAM,SAAS,CACrB,EAAE,cAAe,sBAAsB,EAAE;AAC3C,aAAO,QAAQ;AAAA,IAChB;AAEA,WAAO;AAAA,EACR;AAAA,EAEA,YAAoB;AACnB,WAAO,KAAK,UAAU;AAAA,EACvB;AAAA,EAEA,cAAoB;AACnB,QAAI,CAAC,KAAK,aAAa,KAAK,QAAQ,eAAe,UAAU;AAC5D,WAAK,iBAAiB;AACtB,WAAK,cAAc;AAAA,QAClB,OAAO,KAAK,gBAAgB,IAAI,IAAI,QAAQ;AAAA,MAC7C;AACA,WAAK,aAAa;AAAA,IACnB,WAAW,CAAC,KAAK,QAAQ;AACxB,WAAK,kBAAkB;AAAA,IACxB;AAAA,EACD;AAAA,EAEQ,uBAA6B;AACpC,QAAI,CAAC,KAAK,SAAS,CAAC,KAAK,MAAM,QAAQ;AACtC;AAAA,IACD;AAEA,UAAM,wBAAwB;AAG9B,SAAK,UAAU,UAAU,OAAO,uBAAuB,KAAK;AAE5D,UAAM,gBAAgB,KAAK,UAAU;AACrC,QAAI,cAAc;AAClB,QAAI,OAAO,KAAK;AAChB,UAAM,oBAAoB,KAAK;AAC/B,SAAK,gBAAgB;AAErB,UAAM,gBAAgB,KAAK,MAAM;AAAA,MAChC,CAAC,SACA,KAAK,kBAAkB,UACvB,KAAK,iBAAiB;AAAA,IACxB;AAIA,eAAW,eAAe,eAAe;AACxC,UAAI,CAAC,MAAM;AACV,cAAM,OAAO,YAAY,cAAc;AACvC,YAAI,cAAc,OAAO,eAAe;AACvC,iBAAO;AAAA,QACR,OAAO;AACN,yBAAe;AACf,eAAK;AACL,cAAI,KAAK,gBAAgB,mBAAmB;AAC3C,wBAAY,cAAc,MAAM,aAAa;AAAA,UAC9C;AAAA,QACD;AAAA,MACD;AAEA,UAAI,MAAM;AACT,oBAAY,cAAc,MAAM,aAAa;AAAA,MAC9C;AAAA,IACD;AAGA,QAAI,KAAK,gBAAgB,KAAK,cAAc,SAAS,GAAG;AACvD,iBAAW,eAAe,eAAe;AACxC,oBAAY,cAAc,MAAM,aAAa;AAAA,MAC9C;AAEA,aAAO;AACP,WAAK,gBAAgB;AACrB,oBAAc;AAAA,IACf;AAGA,QAAI,KAAK,WAAW;AACnB,WAAK,aAAa,UAAU,CAAC;AAC7B,eAAS,MAAM,KAAK,eAAe,MAAM,KAAK,MAAM,QAAQ,OAAO;AAClE,aAAK,aAAa,QAAQ;AAAA,UACzB,IAAI;AAAA,YACH,mBAAmB,KAAK,MAAM,GAAG,EAAE,KAAK;AAAA,YACxC,KAAK,MAAM,GAAG,EAAE;AAAA,YAChB,KAAK,MAAM,GAAG,EAAE,WAAW,CAAC;AAAA,UAC7B;AAAA,QACD;AAAA,MACD;AAEA,YAAM,qBAAqB,KAAK,QAAQ,wBAAwB;AAChE,UAAI,sBAAsB,mBAAmB,QAAQ;AACpD,aAAK,aAAa,QAAQ,KAAK,IAAI,UAAU,CAAC;AAC9C,aAAK,aAAa,QAAQ,KAAK,GAAG,kBAAkB;AAAA,MACrD;AAEA,WAAK,aAAa,cAAc,MAAM,aAAa;AAAA,IACpD,WAAW,MAAM;AAEhB,aACC,cAAc,KAAK,aAAa,cAAc,cAC7C,iBACD,KAAK,gBAAgB,GACpB;AACD,aAAK;AACL,cAAM,OACL,cAAc,KAAK,aAAa,EAAE,cAAc;AACjD,sBACC,KAAK,aACN,EAAE,cAAc,MAAM,aAAa;AACnC,uBAAe;AAAA,MAChB;AAEA,WAAK,aAAa,UAAU,CAAC;AAC7B,eACK,MAAM,KAAK,eACf,MAAM,cAAc,QACpB,OACC;AACD,aAAK,aAAa,QAAQ;AAAA,UACzB,IAAI;AAAA,YACH,mBAAmB,cAAc,GAAG,EAAE,KAAK;AAAA,YAC3C,cAAc,GAAG,EAAE;AAAA,YACnB,cAAc,GAAG,EAAE,WAAW,CAAC;AAAA,UAChC;AAAA,QACD;AAAA,MACD;AAEA,UACC,KAAK,aAAa,cAAc,uBAChC,cAAc,KAAK,aAAa,EAAE,eACjC;AACD,aAAK,aAAa,cAAc,OAAO;AACvC,aAAK,UAAU;AAAA,UACd,KAAK,aAAa;AAAA,UAClB,cAAc,KAAK,aAAa,EAAE;AAAA,QACnC;AAAA,MACD;AAEA,WAAK,aAAa,cAAc,MAAM,aAAa;AAAA,IACpD,OAAO;AACN,WAAK,aAAa,cAAc,OAAO;AACvC,WAAK,UAAU,YAAY,KAAK,aAAa,aAAa;AAC1D,WAAK,aAAa,cAAc,MAAM,aAAa;AAAA,IACpD;AAGA,SAAK,UAAU,UAAU;AAAA,MACxB;AAAA,MACA,KAAK,kBAAkB;AAAA,IACxB;AAAA,EACD;AAAA,EAEQ,aACP,cACA,eACA,OACO;AACP,UAAM,iBAAiB,cAAc,KAAK;AAI1C,QAAI,KAAK,QAAQ,iBAAiB;AACjC,YAAM,aAAa,QAAQ,OAAO,KAAK;AAGvC,kCAA4B,YAAY;AACxC,UAAI,WAAW,4BAA4B,KAAK,UAAU;AAG1D,aAAO,YAAY,SAAS,CAAC,GAAG;AAC/B,mBAAW,4BAA4B,KAAK,UAAU;AAAA,MACvD;AAEA,YAAM,uBAAuB,wBAAC,QAC7B,IAAI,QAAQ,eAAe,OAAO,GADN;AAG7B,UAAI,UAAU;AACb,qBAAa,YAAY;AACzB,qBAAa;AAAA,UACZ,QAAQ;AAAA,YACP;AAAA,cACC,WAAW,OAAO,GAAG,SAAS,KAAK;AAAA,YACpC;AAAA,YACA;AAAA,UACD;AAAA,UACA,EAAE,YAAY,EAAE,eAAe,OAAO,GAAG,SAAS,CAAC,CAAC;AAAA,UACpD,QAAQ;AAAA,YACP;AAAA,cACC,WAAW;AAAA,gBACV,SAAS,QAAQ,SAAS,CAAC,EAAE;AAAA,cAC9B;AAAA,YACD;AAAA,YACA;AAAA,UACD;AAAA,QACD;AAAA,MACD,OAAO;AACN,qBAAa,YACZ,qBAAqB,UAAU,EAAE,KAAK;AAAA,MACxC;AAAA,IACD,OAAO;AACN,mBAAa,YAAY,eAAe,QAAQ,OAAO,GAAG;AAAA,IAC3D;AAEA,UAAM,kBAAkB,oBAAoB,KAAK,KAAK;AAGtD,QAAI,iBAAiB;AACpB,YAAM,WAAW,CAAC,CAAC,gBAAgB,CAAC,IACjC,gBAAgB,CAAC,IACjB,gBAAgB,CAAC;AAEpB,UAAI,KAAK,QAAQ,iBAAiB;AACjC,sBAAc;AAAA,UACb;AAAA,UACA,SAAS,SAAS,kBAAkB;AAAA,QACrC;AAAA,MACD,OAAO;AACN,sBAAc,gBAAgB,mBAAmB;AAAA,MAClD;AAAA,IACD;AAAA,EACD;AAAA,EAEA,OAAO,SAAiC;AACvC,QAAI,SAAS;AACZ,WAAK,UAAU;AAAA,IAChB;AAGA,QAAI,KAAK,WAAW;AACnB,WAAK,gBAAgB;AACrB;AAAA,IACD;AAEA,SAAK,MAAM,QAAQ,CAAC,gBAAgB;AACnC,UAAI,CAAC,YAAY,iBAAiB,CAAC,YAAY,cAAc;AAC5D;AAAA,MACD;AAEA,WAAK;AAAA,QACJ,YAAY;AAAA,QACZ,YAAY;AAAA,QACZ,YAAY;AAAA,MACb;AAAA,IACD,CAAC;AAED,QAAI,CAAC,KAAK,yBAAyB;AAClC,WAAK,0BAA0B,IAAI;AAAA,QAClC,IAAI,UAAU,KAAK,SAAS;AAAA,QAC5B,MAAM;AACL,eAAK,qBAAqB;AAC1B,eAAK,0BAA0B;AAAA,QAChC;AAAA,MACD;AAAA,IACD;AAEA,SAAK,kBAAkB;AAAA,EACxB;AAAA,EAEQ,iBAAiB,WAAmB,UAAwB;AACnE,SAAK,UAAU,IAAI,SAAS,kBAAkB,GAAG,SAAS;AAAA,EAC3D;AAAA,EAEQ,cAAoB;AAC3B,QAAI,KAAK,UAAU,MAAM,YAAY,QAAQ;AAC5C,WAAK,UAAU,MAAM,UAAU;AAC/B,WAAK,oBAAoB,KAAK,KAAK;AAAA,IACpC;AAAA,EACD;AAAA,EAEQ,cAAoB;AAC3B,QAAI,KAAK,UAAU,MAAM,YAAY,QAAQ;AAC5C,WAAK,UAAU,MAAM,UAAU;AAC/B,WAAK,oBAAoB,KAAK,IAAI;AAElC,WAAK,qBAAqB;AAAA,IAC3B;AAAA,EACD;AAAA,EAEA,IAAY,aAA2B;AACtC,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,IAAY,WAAW,OAAqB;AAC3C,QACC,KAAK,eAAe,mBACpB,QAAQ,iBACP;AAGD,UAAI,KAAK,eAAe;AACvB,aAAK,YAAY,SAAS;AAC1B,aAAK,gBAAgB;AAAA,MACtB;AAAA,IACD;AAEA,QAAI,UAAU,KAAK,aAAa;AAC/B;AAAA,IACD;AAEA,UAAM,YAAY,KAAK;AACvB,UAAM,SAAS,KAAK;AACpB,UAAM,YAAY,KAAK;AAEvB,SAAK,cAAc;AAEnB,YAAQ,OAAO;AAAA,MACd,KAAK;AACJ,YAAI,WAAW;AACd,eAAK,YAAY;AAAA,QAClB;AAEA,YAAI,QAAQ;AACX,eAAK,kBAAkB;AAAA,QACxB;AAEA,YAAI,WAAW;AACd,eAAK,cAAc;AAEnB,cAAI,KAAK,eAAe;AACvB,iBAAK,cAAc,MAAM;AACzB,iBAAK,gBAAgB;AAAA,UACtB;AAAA,QACD;AAEA;AAAA,MACD,KAAK;AACJ,YAAI,CAAC,WAAW;AACf,eAAK,YAAY;AAAA,QAClB;AAEA,YAAI,QAAQ;AACX,eAAK,kBAAkB;AAAA,QACxB;AAEA,YAAI,WAAW;AACd,cAAI,KAAK,aAAa;AACrB,gBAAI,KAAK,YAAY,UAAU,QAAQ,gBAAgB;AACtD,mBAAK,aAAa,cAAc,KAAK;AAAA,YACtC,OAAO;AACN,mBAAK,MACJ,KAAK,YAAY,KAClB,EAAE,eAAe,KAAK;AAAA,YACvB;AAAA,UACD;AAEA,eAAK,cAAc;AAEnB,cAAI,KAAK,eAAe;AACvB,iBAAK,cAAc,MAAM;AACzB,iBAAK,gBAAgB;AAAA,UACtB;AAAA,QACD;AAEA;AAAA,MACD,KAAK;AACJ,YAAI,CAAC,WAAW;AACf,eAAK,YAAY;AAAA,QAClB;AAEA,YAAI,QAAQ;AACX,eAAK,kBAAkB;AAAA,QACxB;AAEA,YAAI,KAAK,aAAa;AACrB,cAAI,KAAK,YAAY,UAAU,QAAQ,gBAAgB;AACtD,iBAAK,aAAa,cAAc,MAAM;AAAA,UACvC,OAAO;AACN,iBAAK,MACJ,KAAK,YAAY,KAClB,EAAE,eAAe,MAAM;AAAA,UACxB;AAAA,QACD;AACA;AAAA,MACD,KAAK;AACJ,YAAI,CAAC,WAAW;AACf,eAAK,YAAY;AAAA,QAClB;AAEA,YAAI,KAAK,aAAa;AACrB,eAAK,kBAAkB;AACvB,eAAK;AAAA,YACJ,KAAK,YAAY;AAAA,YACjB,KAAK;AAAA,UACN;AAAA,QACD;AACA;AAAA,IACF;AAEA,SAAK,cAAc;AACnB,SAAK,oBAAoB,KAAK,KAAK,cAAc,eAAoB;AAAA,EACtE;AAAA,EAEA,IAAI,YAAqB;AACxB,WAAO,KAAK,cAAc;AAAA,EAC3B;AAAA,EAEA,IAAY,YAAqB;AAChC,WAAO,KAAK,cAAc;AAAA,EAC3B;AAAA,EAEA,IAAY,SAAkB;AAC7B,WAAO,KAAK,cAAc;AAAA,EAC3B;AAAA,EAEA,IAAY,cAAuB;AAClC,WAAO,KAAK,aAAa,KAAK,gBAAgB,KAAK,MAAM;AAAA,EAC1D;AAAA,EAEA,IAAY,YAAqB;AAChC,WAAO,KAAK,QAAQ,gBAAgB;AAAA,EACrC;AAAA,EAEQ,oBAA0B;AACjC,QACC,KAAK,QAAQ,eAAe,YAC5B,KAAK,QAAQ,eAAe,UAC3B;AACD,WAAK,aAAa;AAAA,IACnB,WACC,KAAK,QAAQ,eAAe,aAC5B,QAAQ,aAAa,UAAU,GAC9B;AACD,WAAK,aAAa;AAAA,IACnB,OAAO;AACN,WAAK,aAAa;AAAA,IACnB;AAEA,SAAK,oBAAoB;AACzB,SAAK,iBAAiB;AACtB,SAAK,yBAAyB,KAAK;AAAA,EACpC;AAAA,EAEQ,gBAAsB;AAC7B,QAAI,CAAC,KAAK,eAAe,KAAK,kBAAkB,GAAG;AAClD;AAAA,IACD;AAEA,QAAI,mBACF,KAAK,YAAY,QAAQ,IAAI,KAAK,iBACnC,KAAK;AACN,QAAI,KAAK,YAAY,UAAU,QAAQ,gBAAgB;AACtD,wBAAkB,KAAK,gBAAgB;AAAA,IACxC,WAAW,KAAK,YAAY,UAAU,KAAK,KAAK,aAAa;AAC5D,wBAAkB,QAAQ;AAAA,IAC3B;AAEA,QAAI,oBAAoB,KAAK,YAAY,OAAO;AAC/C;AAAA,IACD;AAEA,QAAI,KAAK,QAAQ;AAChB,WAAK,kBAAkB;AACvB,WAAK,eAAe,eAAe;AAAA,IACpC,WAAW,KAAK,WAAW;AAC1B,WAAK,YAAY,QAAQ;AACzB,UAAI,oBAAoB,QAAQ,gBAAgB;AAC/C,aAAK,aAAa,cAAc,MAAM;AAAA,MACvC,OAAO;AACN,aAAK,MAAM,eAAe,EAAE,eAAe,MAAM;AAAA,MAClD;AAAA,IACD;AAAA,EACD;AAAA,EAEQ,YAAkB;AACzB,QAAI,CAAC,KAAK,eAAe,KAAK,kBAAkB,GAAG;AAClD;AAAA,IACD;AAEA,QAAI,mBAAmB,KAAK,YAAY,QAAQ,KAAK,KAAK;AAC1D,QAAI,KAAK,YAAY,UAAU,QAAQ,gBAAgB;AACtD,wBAAkB;AAAA,IACnB,WAAW,KAAK,YAAY,UAAU,KAAK,gBAAgB,GAAG;AAC7D,wBAAkB,QAAQ;AAAA,IAC3B;AAEA,QAAI,oBAAoB,KAAK,YAAY,OAAO;AAC/C;AAAA,IACD;AAEA,QAAI,KAAK,QAAQ;AAChB,WAAK,kBAAkB;AACvB,WAAK,eAAe,eAAe;AAAA,IACpC,WAAW,KAAK,WAAW;AAC1B,WAAK,YAAY,QAAQ;AACzB,UAAI,oBAAoB,QAAQ,gBAAgB;AAC/C,aAAK,aAAa,cAAc,MAAM;AAAA,MACvC,OAAO;AACN,aAAK,MAAM,eAAe,EAAE,eAAe,MAAM;AAAA,MAClD;AAAA,IACD;AAAA,EACD;AAAA,EAEQ,yBAAyB,SAAwB;AACxD,QAAI,KAAK,OAAO;AACf,WAAK,MAAM,QAAQ,CAAC,gBAAgB;AACnC,YACC,YAAY,gBACZ,YAAY,aAAa,SAAS,QACjC;AACD,gBAAM,QAAQ,YAAY,aAAa,SAAS;AAAA,YAC/C;AAAA,UACD;AACA,cAAI,OAAO;AACV,kBAAM,MAAM,iBACX,KAAK,QAAQ,qBAAqB,UAC/B,cACA;AAAA,UACL;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF;AAAA,EACD;AAAA,EAEA,IAAY,iBAA0B;AACrC,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,IAAY,eAAe,OAAgB;AAC1C,SAAK,kBAAkB;AAAA,EACxB;AAAA,EAEA,IAAY,oBAA6B;AACxC,QAAI,aAAa;AAChB,aAAO;AAAA,IACR;AAEA,QAAI,CAAC,KAAK,QAAQ,iBAAiB;AAClC,aAAO;AAAA,IACR;AAEA,QAAI,KAAK,QAAQ,eAAe,UAAU;AACzC,aAAO;AAAA,IACR;AAEA,WAAO;AAAA,EACR;AAAA,EAEA,IAAW,qBAAqC;AAC/C,WAAO,KAAK,oBAAoB;AAAA,EACjC;AAAA,EAEA,IAAW,qBAAqC;AAC/C,WAAO,KAAK,oBAAoB;AAAA,EACjC;AAAA,EAEQ,gBAAgB,WAAmB,SAAkB;AAC5D,QAAI,KAAK,QAAQ;AAChB,UAAI,KAAK,cAAc,SAAS,GAAG;AAClC,aAAK,kBAAkB;AAAA,MACxB,OAAO;AACN,aAAK,kBAAkB;AACvB,aAAK,eAAe,WAAW,KAAK,iBAAiB;AAAA,MACtD;AAAA,IACD,OAAO;AACN,WAAK,cAAc,EAAE,OAAO,UAAU;AACtC,WAAK,oBAAoB,CAAC;AAC1B,WAAK,aAAa;AAAA,IACnB;AAAA,EACD;AAAA,EAEQ,qBACP,mBACO;AACP,UAAM,uBACL,CAAC,kBAAkB,UACnB,CAAC,kBAAkB,WACnB,CAAC,kBAAkB,YACnB,CAAC,kBAAkB;AAEpB,QAAI,KAAK,QAAQ,eAAe,UAAU;AACzC;AAAA,IACD;AAGA,QAAI,kBAAkB,SAAS,KAAK,mBAAmB;AACtD,UACC,cAAc,OAAO,kBAAkB,MAAM,IAAI,MACjD,SAAS,SACR;AACD,0BAAkB,MAAM,eAAe;AAAA,MACxC;AAAA,IACD;AAGA,QACC,KAAK,aACL,kBAAkB,mBAAmB,SACrC,kBAAkB,QACjB;AACD,WAAK,kBAAkB;AACvB,WAAK,iBAAiB;AACtB,WAAK,qBAAqB;AAAA,IAC3B;AAGA,QACC,wBACA,kBAAkB,mBAAmB,SACrC,kBAAkB,oBAAoB,OACrC;AACD,UAAI,CAAC,KAAK,oBAAoB;AAC7B,YAAI,CAAC,KAAK,aAAa,KAAK,mBAAmB;AAC9C,eAAK,iBAAiB;AACtB,eAAK,cAAc;AAAA,YAClB,OACC,KAAK,gBAAgB,IAAI,IAAI,QAAQ;AAAA,UACvC;AACA,eAAK,aAAa;AAAA,QACnB,WAAW,CAAC,KAAK,QAAQ;AACxB,eAAK,kBAAkB;AAAA,QACxB;AAAA,MACD;AAAA,IACD;AAGA,QACC,CAAC,kBAAkB,UACnB,kBAAkB,oBAAoB,OACrC;AACD,WAAK,qBAAqB;AAAA,IAC3B;AAEA,QAAI,KAAK,QAAQ,mBAAmB,KAAK,SAAS,CAAC,KAAK,QAAQ;AAC/D,WAAK;AAAA,QACH,CAAC,KAAK,sBAAsB,kBAAkB,UAC9C,KAAK;AAAA,MACP;AAAA,IACD;AAAA,EACD;AAAA,EAEQ,cAAc,WAA4B;AACjD,QAAI,CAAC,KAAK,aAAa;AACtB,aAAO;AAAA,IACR;AAEA,WAAO,KAAK,YAAY,UAAU;AAAA,EACnC;AAAA,EAEQ,oBAA0B;AACjC,QAAI,KAAK,aAAa;AAErB,UAAI,KAAK,YAAY,UAAU,QAAQ,gBAAgB;AACtD,aAAK,aAAa,cAAc,MAAM;AAAA,MACvC,OAAO;AACN,aAAK,MAAM,KAAK,YAAY,KAAK,EAAE,eAAe,MAAM;AAAA,MACzD;AAEA,UAAI,KAAK,YAAY,QAAQ;AAC5B,aAAK,YAAY,OAAO,eAAe,UAAU,OAAO,MAAM;AAE9D,aAAK,YAAY,OAAO,OAAO;AAAA,MAChC;AAEA,WAAK,YAAY,QAAQ,QAAQ;AAEjC,WAAK,cAAc,EAAE,OAAO,KAAK,YAAY,MAAM;AAAA,IACpD;AACA,SAAK,gBAAgB,MAAM;AAAA,EAC5B;AAAA,EAEQ,eAAe,WAAmB,cAAc,MAAY;AACnE,UAAM,kBACL,aAAa,KAAK,gBACf,QAAQ,iBACR;AACJ,UAAM,aACL,oBAAoB,QAAQ,iBACzB,KAAK,eACL,KAAK,MAAM,eAAe;AAE9B,QACC,CAAC,WAAW,WACZ,CAAC,WAAW,iBACZ,CAAC,WAAW,cACX;AACD;AAAA,IACD;AAEA,UAAM,aAAa,EAAE,iCAAiC,EAAE,OAAO,GAAG,CAAC;AAEnE,eAAW,cAAc,UAAU,IAAI,MAAM;AAE7C,UAAM,oBACL,WAAW,aAAa,sBAAsB;AAC/C,UAAM,wBAAwB,IAAI;AAAA,MACjC,WAAW;AAAA,IACZ;AAEA,QACC,KAAK,QAAQ,aAAa,eAAe,oBAAoB,OAC5D;AACD,iBAAW,MAAM,OAAO,GAAG,kBAAkB,OAAO,KAAK,UAAU,WAAW;AAAA,IAC/E,WACC,KAAK,QAAQ,aAAa,eAAe,oBAAoB,MAC5D;AACD,YAAM,cAAc,IAAI,UAAU,KAAK,SAAS,EAAE;AAClD,iBAAW,MAAM,QAAQ,GAAG,cAAc,kBAAkB,IAAI;AAChE,iBAAW,MAAM,OAAO;AAAA,IACzB,OAAO;AACN,iBAAW,MAAM,OAAO,GAAG,kBAAkB,OAAO,qBAAqB;AAAA,IAC1E;AAEA,QAAI,KAAK,QAAQ,aAAa,aAAa,kBAAkB,OAAO;AAEnE,iBAAW,MAAM,MAAM,GAAG,kBAAkB,MAAM,KAAK,MAAM,SAAS,KAAK,KAAK,UAAU,YAAY;AAAA,IACvG,WACC,KAAK,QAAQ,aAAa,aAAa,kBAAkB,OACxD;AACD,iBAAW,MAAM,MAAM,GAAG,kBAAkB,GAAG;AAAA,IAChD,OAAO;AACN,iBAAW,MAAM,MAAM,GAAG,kBAAkB,SAAS,qBAAqB;AAAA,IAC3E;AAEA,eAAW,cAAc,YAAY,UAAU;AAE/C,UAAM,cAA4B;AAAA,MACjC,eAAe,KAAK,QAAQ;AAAA,MAC5B,cAAc,KAAK;AAAA,MACnB,iBACC,KAAK,QAAQ,qBACZ,KAAK,kBAAkB,KAAK,QAAQ;AAAA,MACtC,WACC,WAAW,cAAc,aAAa,YAAY,KAClD;AAAA,MACD,iBAAiB,KAAK,YACnB,KAAK,QAAQ,cACb;AAAA,QACA,YAAY,oBAAoB;AAAA,QAChC,UAAU,kBAAkB;AAAA,MAC7B;AAAA,MACF,mBAAmB;AAAA,IACpB;AAEA,UAAM,aAAa,KAAK,gBAAgB;AAAA,MACvC,IAAI;AAAA,QACH;AAAA,QACA,WAAW;AAAA,QACX;AAAA,QACA,KAAK;AAAA,MACN;AAAA,IACD;AACA,SAAK,gBAAgB;AAAA,MACpB,WAAW,YAAY,MAAM;AAC5B,aAAK,aAAa;AAAA,MACnB,CAAC;AAAA,IACF;AAEA,QAAI,oBAAoB,WAAW;AAClC,iBAAW,QAAQ,YAAY,KAAK,aAAa;AAAA,IAClD,OAAO;AACN,iBAAW,MAAM,WAAW;AAAA,IAC7B;AAEA,SAAK,cAAc;AAAA,MAClB,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,QAAQ;AAAA,IACT;AAAA,EACD;AACD;",
  "names": ["MenubarState"]
}
