import"../../../../../vs/base/browser/ui/list/list.js";import"../../../../../vs/base/browser/ui/tree/indexTreeModel.js";import{ObjectTreeModel as F}from"../../../../../vs/base/browser/ui/tree/objectTreeModel.js";import{TreeError as I,WeakMapper as M}from"../../../../../vs/base/browser/ui/tree/tree.js";import{equals as y}from"../../../../../vs/base/common/arrays.js";import{Event as c}from"../../../../../vs/base/common/event.js";import{Iterable as l}from"../../../../../vs/base/common/iterator.js";function m(o){const e=[o.element],t=o.incompressible||!1;return{element:{elements:e,incompressible:t},children:l.map(l.from(o.children),m),collapsible:o.collapsible,collapsed:o.collapsed}}function T(o){const e=[o.element],t=o.incompressible||!1;let r,n;for(;[n,r]=l.consume(l.from(o.children),2),!(n.length!==1||n[0].incompressible);)o=n[0],e.push(o.element);return{element:{elements:e,incompressible:t},children:l.map(l.concat(n,r),T),collapsible:o.collapsible,collapsed:o.collapsed}}function h(o,e=0){let t;return e<o.element.elements.length-1?t=[h(o,e+1)]:t=l.map(l.from(o.children),r=>h(r,0)),e===0&&o.element.incompressible?{element:o.element.elements[e],children:t,incompressible:!0,collapsible:o.collapsible,collapsed:o.collapsed}:{element:o.element.elements[e],children:t,collapsible:o.collapsible,collapsed:o.collapsed}}function b(o){return h(o,0)}function N(o,e,t){return o.element===e?{...o,children:t}:{...o,children:l.map(l.from(o.children),r=>N(r,e,t))}}const O=o=>({getId(e){return e.elements.map(t=>o.getId(t).toString()).join("\0")}});class L{constructor(e,t,r={}){this.user=e;this.model=new F(e,t,r),this.enabled=typeof r.compressionEnabled>"u"?!0:r.compressionEnabled,this.identityProvider=r.identityProvider}rootRef=null;get onDidSplice(){return this.model.onDidSplice}get onDidChangeCollapseState(){return this.model.onDidChangeCollapseState}get onDidChangeRenderNodeCount(){return this.model.onDidChangeRenderNodeCount}model;nodes=new Map;enabled;identityProvider;get size(){return this.nodes.size}setChildren(e,t=l.empty(),r){const n=r.diffIdentityProvider&&O(r.diffIdentityProvider);if(e===null){const p=l.map(t,this.enabled?T:m);this._setChildren(null,p,{diffIdentityProvider:n,diffDepth:1/0});return}const s=this.nodes.get(e);if(!s)throw new I(this.user,"Unknown compressed tree node");const i=this.model.getNode(s),a=this.model.getParentNodeLocation(s),d=this.model.getNode(a),f=b(i),g=N(f,e,t),u=(this.enabled?T:m)(g),D=r.diffIdentityProvider?(p,E)=>r.diffIdentityProvider.getId(p)===r.diffIdentityProvider.getId(E):void 0;if(y(u.element.elements,i.element.elements,D)){this._setChildren(s,u.children||l.empty(),{diffIdentityProvider:n,diffDepth:1});return}const v=d.children.map(p=>p===i?u:p);this._setChildren(d.element,v,{diffIdentityProvider:n,diffDepth:i.depth-d.depth})}isCompressionEnabled(){return this.enabled}setCompressionEnabled(e){if(e===this.enabled)return;this.enabled=e;const r=this.model.getNode().children,n=l.map(r,b),s=l.map(n,e?T:m);this._setChildren(null,s,{diffIdentityProvider:this.identityProvider,diffDepth:1/0})}_setChildren(e,t,r){const n=new Set,s=a=>{for(const d of a.element.elements)n.add(d),this.nodes.set(d,a.element)},i=a=>{for(const d of a.element.elements)n.has(d)||this.nodes.delete(d)};this.model.setChildren(e,t,{...r,onDidCreateNode:s,onDidDeleteNode:i})}has(e){return this.nodes.has(e)}getListIndex(e){const t=this.getCompressedNode(e);return this.model.getListIndex(t)}getListRenderCount(e){const t=this.getCompressedNode(e);return this.model.getListRenderCount(t)}getNode(e){if(typeof e>"u")return this.model.getNode();const t=this.getCompressedNode(e);return this.model.getNode(t)}getNodeLocation(e){const t=this.model.getNodeLocation(e);return t===null?null:t.elements[t.elements.length-1]}getParentNodeLocation(e){const t=this.getCompressedNode(e),r=this.model.getParentNodeLocation(t);return r===null?null:r.elements[r.elements.length-1]}getFirstElementChild(e){const t=this.getCompressedNode(e);return this.model.getFirstElementChild(t)}getLastElementAncestor(e){const t=typeof e>"u"?void 0:this.getCompressedNode(e);return this.model.getLastElementAncestor(t)}isCollapsible(e){const t=this.getCompressedNode(e);return this.model.isCollapsible(t)}setCollapsible(e,t){const r=this.getCompressedNode(e);return this.model.setCollapsible(r,t)}isCollapsed(e){const t=this.getCompressedNode(e);return this.model.isCollapsed(t)}setCollapsed(e,t,r){const n=this.getCompressedNode(e);return this.model.setCollapsed(n,t,r)}expandTo(e){const t=this.getCompressedNode(e);this.model.expandTo(t)}rerender(e){const t=this.getCompressedNode(e);this.model.rerender(t)}updateElementHeight(e,t){const r=this.getCompressedNode(e);r&&this.model.updateElementHeight(r,t)}refilter(){this.model.refilter()}resort(e=null,t=!0){const r=this.getCompressedNode(e);this.model.resort(r,t)}getCompressedNode(e){if(e===null)return null;const t=this.nodes.get(e);if(!t)throw new I(this.user,`Tree element not found: ${e}`);return t}}const x=o=>o[o.length-1];class C{constructor(e,t){this.unwrapper=e;this.node=t}get element(){return this.node.element===null?null:this.unwrapper(this.node.element)}get children(){return this.node.children.map(e=>new C(this.unwrapper,e))}get depth(){return this.node.depth}get visibleChildrenCount(){return this.node.visibleChildrenCount}get visibleChildIndex(){return this.node.visibleChildIndex}get collapsible(){return this.node.collapsible}get collapsed(){return this.node.collapsed}get visible(){return this.node.visible}get filterData(){return this.node.filterData}}function P(o,e){return{splice(t,r,n){e.splice(t,r,n.map(s=>o.map(s)))},updateElementHeight(t,r){e.updateElementHeight(t,r)}}}function j(o,e){return{...e,identityProvider:e.identityProvider&&{getId(t){return e.identityProvider.getId(o(t))}},sorter:e.sorter&&{compare(t,r){return e.sorter.compare(t.elements[0],r.elements[0])}},filter:e.filter&&{filter(t,r){return e.filter.filter(o(t),r)}}}}class Z{rootRef=null;get onDidSplice(){return c.map(this.model.onDidSplice,({insertedNodes:e,deletedNodes:t})=>({insertedNodes:e.map(r=>this.nodeMapper.map(r)),deletedNodes:t.map(r=>this.nodeMapper.map(r))}))}get onDidChangeCollapseState(){return c.map(this.model.onDidChangeCollapseState,({node:e,deep:t})=>({node:this.nodeMapper.map(e),deep:t}))}get onDidChangeRenderNodeCount(){return c.map(this.model.onDidChangeRenderNodeCount,e=>this.nodeMapper.map(e))}elementMapper;nodeMapper;model;constructor(e,t,r={}){this.elementMapper=r.elementMapper||x;const n=s=>this.elementMapper(s.elements);this.nodeMapper=new M(s=>new C(n,s)),this.model=new L(e,P(this.nodeMapper,t),j(n,r))}setChildren(e,t=l.empty(),r={}){this.model.setChildren(e,t,r)}isCompressionEnabled(){return this.model.isCompressionEnabled()}setCompressionEnabled(e){this.model.setCompressionEnabled(e)}has(e){return this.model.has(e)}getListIndex(e){return this.model.getListIndex(e)}getListRenderCount(e){return this.model.getListRenderCount(e)}getNode(e){return this.nodeMapper.map(this.model.getNode(e))}getNodeLocation(e){return e.element}getParentNodeLocation(e){return this.model.getParentNodeLocation(e)}getFirstElementChild(e){const t=this.model.getFirstElementChild(e);return t===null||typeof t>"u"?t:this.elementMapper(t.elements)}getLastElementAncestor(e){const t=this.model.getLastElementAncestor(e);return t===null||typeof t>"u"?t:this.elementMapper(t.elements)}isCollapsible(e){return this.model.isCollapsible(e)}setCollapsible(e,t){return this.model.setCollapsible(e,t)}isCollapsed(e){return this.model.isCollapsed(e)}setCollapsed(e,t,r){return this.model.setCollapsed(e,t,r)}expandTo(e){return this.model.expandTo(e)}rerender(e){return this.model.rerender(e)}updateElementHeight(e,t){this.model.updateElementHeight(e,t)}refilter(){return this.model.refilter()}resort(e=null,t=!0){return this.model.resort(e,t)}getCompressedTreeNode(e=null){return this.model.getNode(e)}}export{L as CompressedObjectTreeModel,Z as CompressibleObjectTreeModel,x as DefaultElementMapper,T as compress,b as decompress};
