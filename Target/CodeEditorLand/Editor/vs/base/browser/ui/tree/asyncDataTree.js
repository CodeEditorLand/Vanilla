import"../../dnd.js";import"../list/list.js";import{ElementsDragAndDropData as V}from"../list/listView.js";import"../list/listWidget.js";import{ComposedTreeDelegate as j,AbstractFindController as q}from"./abstractTree.js";import"./compressedObjectTreeModel.js";import{getVisibleState as P,isFilterResult as _}from"./indexTreeModel.js";import{CompressibleObjectTree as G,ObjectTree as $}from"./objectTree.js";import{ObjectTreeElementCollapseState as b,TreeError as g,TreeVisibility as I,WeakMapper as U}from"./tree.js";import{createCancelablePromise as J,Promises as Q,timeout as X,TimeoutTimer as Y}from"../../../common/async.js";import{Codicon as N}from"../../../common/codicons.js";import{ThemeIcon as C}from"../../../common/themables.js";import{isCancellationError as Z,onUnexpectedError as ee}from"../../../common/errors.js";import{Emitter as H,Event as h}from"../../../common/event.js";import{Iterable as A}from"../../../common/iterator.js";import{DisposableStore as S,dispose as W}from"../../../common/lifecycle.js";import"../../../common/scrollable.js";import{isIterable as z,isNumber as te}from"../../../common/types.js";import{CancellationTokenSource as re}from"../../../common/cancellation.js";import"./objectTreeModel.js";import"../contextview/contextview.js";import{fuzzyScore as ne,FuzzyScore as E}from"../../../common/filters.js";function w(i){return{...i,children:[],refreshPromise:void 0,stale:!0,slow:!1,forceExpanded:!1}}function O(i,e){return e.parent?e.parent===i?!0:O(i,e.parent):!1}function ie(i,e){return i===e||O(i,e)||O(e,i)}class R{constructor(e){this.node=e}get element(){return this.node.element.element}get children(){return this.node.children.map(e=>new R(e))}get depth(){return this.node.depth}get visibleChildrenCount(){return this.node.visibleChildrenCount}get visibleChildIndex(){return this.node.visibleChildIndex}get collapsible(){return this.node.collapsible}get collapsed(){return this.node.collapsed}get visible(){return this.node.visible}get filterData(){return this.node.filterData}}class ae{constructor(e,t,r){this.renderer=e;this.nodeMapper=t;this.onDidChangeTwistieState=r;this.templateId=e.templateId}templateId;renderedNodes=new Map;renderTemplate(e){return{templateData:this.renderer.renderTemplate(e)}}renderElement(e,t,r,n){this.renderer.renderElement(this.nodeMapper.map(e),t,r.templateData,n)}renderTwistie(e,t){return e.slow?(t.classList.add(...C.asClassNameArray(N.treeItemLoading)),!0):(t.classList.remove(...C.asClassNameArray(N.treeItemLoading)),!1)}disposeElement(e,t,r,n){this.renderer.disposeElement?.(this.nodeMapper.map(e),t,r.templateData,n)}disposeTemplate(e){this.renderer.disposeTemplate(e.templateData)}dispose(){this.renderedNodes.clear()}}function K(i){return{browserEvent:i.browserEvent,elements:i.elements.map(e=>e.element)}}function F(i){return{browserEvent:i.browserEvent,element:i.element&&i.element.element,target:i.target}}function se(i){return{browserEvent:i.browserEvent,element:i.element&&i.element.element,anchor:i.anchor,isStickyScroll:i.isStickyScroll}}class oe extends V{constructor(t){super(t.elements.map(r=>r.element));this.data=t}set context(t){this.data.context=t}get context(){return this.data.context}}function M(i){return i instanceof V?new oe(i):i}class de{constructor(e){this.dnd=e}getDragURI(e){return this.dnd.getDragURI(e.element)}getDragLabel(e,t){if(this.dnd.getDragLabel)return this.dnd.getDragLabel(e.map(r=>r.element),t)}onDragStart(e,t){this.dnd.onDragStart?.(M(e),t)}onDragOver(e,t,r,n,s,a=!0){return this.dnd.onDragOver(M(e),t&&t.element,r,n,s)}drop(e,t,r,n,s){this.dnd.drop(M(e),t&&t.element,r,n,s)}onDragEnd(e){this.dnd.onDragEnd?.(e)}dispose(){this.dnd.dispose()}}class L{constructor(e,t,r){this.element=e;this.id=t;this.sorter=r}_children=[];get children(){return this._children.values()}addChild(e){if(!this.sorter){this._children.push(e);return}const t=this._children.findIndex(r=>this.sorter.compare(e.element,r.element)<0);t!==-1?this._children.splice(t,0,e):this._children.push(e)}}class le{constructor(e,t,r){this.dataSource=e;this.identityProvider=t;this.sorter=r;if(!e.getParent)throw new Error("Data source must implement `getParent`")}cachedNodes=new Map;root=new L(void 0,"_AsyncFindTreeRoot_",this.sorter);get rootNodes(){return[...this.root.children]}_totalLeafs=0;get totalLeafs(){return this._totalLeafs}get totalNodes(){return this.cachedNodes.size}add(e){const t=this.identityProvider.getId(e).toString();if(this.cachedNodes.has(t))return;this._totalLeafs++;const r=new L(e,t,this.sorter);this.cachedNodes.set(t,r);let n=r;for(;;){let s=this.dataSource.getParent(n.element);if(s===n.element){this.root.addChild(n);break}s=s;const a=this.identityProvider.getId(s).toString(),d=this.cachedNodes.get(a);if(d){d.addChild(n);break}const o=new L(s,a,this.sorter);this.cachedNodes.set(a,o),o.addChild(n),n=o}}}class Te{constructor(e,t){this.keyboardNavigationLabelProvider=e;this._filter=t}_pattern="";_lowercasePattern="";disposables=new S;get pattern(){return this._pattern}set pattern(e){this._pattern=e,this._lowercasePattern=e.toLowerCase()}filter(e,t){let r=I.Visible;if(this._filter){const a=this._filter.filter(e,t);if(typeof a=="boolean"?r=a?I.Visible:I.Hidden:_(a)?r=P(a.visibility):r=a,r===I.Hidden)return!1}if(!this._pattern)return{data:E.Default,visibility:r};const n=this.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(e.element),s=Array.isArray(n)?n:[n];for(const a of s){const d=a&&a.toString();if(typeof d>"u")return{data:E.Default,visibility:r};const o=ne(this._pattern,this._lowercasePattern,0,d,d.toLowerCase(),0,{firstMatchCanBeWeak:!0,boostFullMatch:!0});if(o)return s.length===1?{data:o,visibility:r}:{data:{label:d,score:o},visibility:r}}return{data:E.Default,visibility:r}}dispose(){W(this.disposables)}}class ce extends q{constructor(t,r,n,s,a,d,o,c,l,p){super(r,s,c,{...l,placeholder:n.placeholder,toggles:n.toggles});this.user=t;this.tree=r;this.findProvider=n;this.sorter=a;this.dataSource=d;this.identityProvider=o;this.asTreeElement=p;this.model=r.getModel(),this.scheduler=this.store.add(new Y)}model;nodes=new Map;previousScrollTop;previousFocus=[];previousSelection=[];sessionId=0;active=!1;activeTokenSource;scheduler;store=new S;setFindModeActive(t){this.active!==t&&(t?this.activateFindMode():this.deactivateFindMode(),this.active=t)}activateFindMode(){this.sessionId++,this.previousScrollTop=this.tree.scrollTop,this.previousFocus=this.tree.getFocus(),this.previousSelection=this.tree.getSelection(),this.tree.scrollTop=0;const t=this.tree.createNewModel({filter:this.filter});this.tree.setModel(t)}deactivateFindMode(){const t=this.tree.getFocus()[0];this.tree.setModel(this.model),t&&t.element&&this.findProvider.revealResultInTree?this.findProvider.revealResultInTree(t.element):(this.tree.scrollTop=this.previousScrollTop??0,this.tree.setFocus(this.previousFocus),this.tree.setSelection(this.previousSelection)),this.activeTokenSource=void 0,this.nodes.clear()}applyPattern(t){if(this.renderMessage(!1),this.scheduler.cancel(),this.activeTokenSource?.cancel(),!t){this.setFindModeActive(!1);return}this.activeTokenSource=new re;const r=this.findProvider.getFindResults(t,this.sessionId,this.activeTokenSource.token,this.toggles.states());this.pocessFindResults(r,this.activeTokenSource.token)}async pocessFindResults(t,r){if(!this.dataSource.getParent||!this.identityProvider)return;this.clearFindResults();const n=new le(this.dataSource,this.identityProvider,this.sorter);for await(const s of t){if(r.isCancellationRequested)return;n.add(s)}r.isCancellationRequested||(this.setFindResults(n),this.activeTokenSource?.dispose(),this.activeTokenSource=void 0)}clearFindResults(){this.schedule(()=>{if(this.active)this.tree.setChildren(null,[]);else{this.setFindModeActive(!0);return}},600)}setFindResults(t){const r=[];for(const n of t.rootNodes)r.push(this.asTreeElement(this.findNodeToAsyncNode(n,null)));this.schedule(()=>{this.setFindModeActive(!0),this.tree.setChildren(null,r),this.renderMessage(r.length===0),this.alertResults(t.totalLeafs)},0)}findNodeToAsyncNode(t,r){const n=[];if(t.element===void 0)throw new g(this.user,"Found node without an element");const s={element:t.element,parent:r,children:n,hasChildren:!1,defaultCollapseState:b.PreserveOrExpanded,stale:!1,refreshPromise:void 0,slow:!1,forceExpanded:!1};for(const a of t.children)n.push(this.findNodeToAsyncNode(a,s));return s.hasChildren=!!n.length,this.nodes.set(t.element,s),s}schedule(t,r){if(r===0){this.scheduler.cancel(),t();return}this.scheduler.cancelAndSet(t,r)}onDidToggleChange(t){super.onDidToggleChange(t),this.applyPattern(this.pattern)}getDataNode(t){return this.nodes.get(t)}dispose(){super.dispose(),this.store.dispose()}}function B(i){return i&&{...i,collapseByDefault:!0,identityProvider:i.identityProvider&&{getId(e){return i.identityProvider.getId(e.element)}},dnd:i.dnd&&new de(i.dnd),multipleSelectionController:i.multipleSelectionController&&{isSelectionSingleChangeEvent(e){return i.multipleSelectionController.isSelectionSingleChangeEvent({...e,element:e.element})},isSelectionRangeChangeEvent(e){return i.multipleSelectionController.isSelectionRangeChangeEvent({...e,element:e.element})}},accessibilityProvider:i.accessibilityProvider&&{...i.accessibilityProvider,getPosInSet:void 0,getSetSize:void 0,getRole:i.accessibilityProvider.getRole?e=>i.accessibilityProvider.getRole(e.element):()=>"treeitem",isChecked:i.accessibilityProvider.isChecked?e=>!!i.accessibilityProvider?.isChecked(e.element):void 0,getAriaLabel(e){return i.accessibilityProvider.getAriaLabel(e.element)},getWidgetAriaLabel(){return i.accessibilityProvider.getWidgetAriaLabel()},getWidgetRole:i.accessibilityProvider.getWidgetRole?()=>i.accessibilityProvider.getWidgetRole():()=>"tree",getAriaLevel:i.accessibilityProvider.getAriaLevel&&(e=>i.accessibilityProvider.getAriaLevel(e.element)),getActiveDescendantId:i.accessibilityProvider.getActiveDescendantId&&(e=>i.accessibilityProvider.getActiveDescendantId(e.element))},filter:i.filter&&{filter(e,t){return i.filter.filter(e.element,t)}},keyboardNavigationLabelProvider:i.keyboardNavigationLabelProvider&&{...i.keyboardNavigationLabelProvider,getKeyboardNavigationLabel(e){return i.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(e.element)}},sorter:void 0,expandOnlyOnTwistieClick:typeof i.expandOnlyOnTwistieClick>"u"?void 0:typeof i.expandOnlyOnTwistieClick!="function"?i.expandOnlyOnTwistieClick:e=>i.expandOnlyOnTwistieClick(e.element),defaultFindVisibility:e=>e.hasChildren&&e.stale?I.Visible:typeof i.defaultFindVisibility=="number"?i.defaultFindVisibility:typeof i.defaultFindVisibility>"u"?I.Recurse:i.defaultFindVisibility(e.element)}}function x(i,e){e(i),i.children.forEach(t=>x(t,e))}class pe{constructor(e,t,r,n,s,a={}){this.user=e;this.dataSource=s;this.identityProvider=a.identityProvider,this.autoExpandSingleChildren=typeof a.autoExpandSingleChildren>"u"?!1:a.autoExpandSingleChildren,this.sorter=a.sorter,this.getDefaultCollapseState=o=>a.collapseByDefault?a.collapseByDefault(o)?b.PreserveOrCollapsed:b.PreserveOrExpanded:void 0;let d=!1;if(a.findResultsProvider&&(a.findWidgetEnabled??!0)&&a.keyboardNavigationLabelProvider&&a.contextViewProvider){if(!this.dataSource.getParent||!this.identityProvider)throw new g(this.user,"Find Provider requires `getParent` and `identityProvider`");d=!0}if(this.tree=this.createTree(e,t,r,n,{...a,findWidgetEnabled:!d}),this.model=this.tree.getModel(),this.root=w({element:void 0,parent:null,hasChildren:!0,defaultCollapseState:void 0}),this.identityProvider&&(this.root={...this.root,id:null}),this.nodes.set(null,this.root),this.tree.onDidChangeCollapseState(this._onDidChangeCollapseState,this,this.disposables),d){const o=this.disposables.add(new Te(a.keyboardNavigationLabelProvider,this.tree.options.filter)),c={styles:a.findWidgetStyles,showNotFoundMessage:a.showNotFoundMessage};this.findController=this.disposables.add(new ce(e,this.tree,a.findResultsProvider,o,this.sorter,this.dataSource,this.identityProvider,a.contextViewProvider,c,l=>this.asTreeElement(l))),this.onDidChangeFindOpenState=this.findController.onDidChangeOpenState,this.onDidChangeFindMode=h.None,this.onDidChangeFindMatchType=h.None}else this.onDidChangeFindOpenState=this.tree.onDidChangeFindOpenState,this.onDidChangeFindMode=this.tree.onDidChangeFindMode,this.onDidChangeFindMatchType=this.tree.onDidChangeFindMatchType}tree;model;root;nodes=new Map;sorter;findController;getDefaultCollapseState;subTreeRefreshPromises=new Map;refreshPromises=new Map;identityProvider;autoExpandSingleChildren;_onDidRender=new H;_onDidChangeNodeSlowState=new H;nodeMapper=new U(e=>new R(e));disposables=new S;get onDidScroll(){return this.tree.onDidScroll}get onDidChangeFocus(){return h.map(this.tree.onDidChangeFocus,K)}get onDidChangeSelection(){return h.map(this.tree.onDidChangeSelection,K)}get onKeyDown(){return this.tree.onKeyDown}get onMouseClick(){return h.map(this.tree.onMouseClick,F)}get onMouseDblClick(){return h.map(this.tree.onMouseDblClick,F)}get onContextMenu(){return h.map(this.tree.onContextMenu,se)}get onTap(){return h.map(this.tree.onTap,F)}get onPointer(){return h.map(this.tree.onPointer,F)}get onDidFocus(){return this.tree.onDidFocus}get onDidBlur(){return this.tree.onDidBlur}get onDidChangeModel(){return this.tree.onDidChangeModel}get onDidChangeCollapseState(){return this.tree.onDidChangeCollapseState}get onDidUpdateOptions(){return this.tree.onDidUpdateOptions}onDidChangeFindOpenState;get onDidChangeStickyScrollFocused(){return this.tree.onDidChangeStickyScrollFocused}get findMode(){return this.tree.findMode}set findMode(e){this.tree.findMode=e}onDidChangeFindMode;get findMatchType(){return this.tree.findMatchType}set findMatchType(e){this.tree.findMatchType=e}onDidChangeFindMatchType;get expandOnlyOnTwistieClick(){if(typeof this.tree.expandOnlyOnTwistieClick=="boolean")return this.tree.expandOnlyOnTwistieClick;const e=this.tree.expandOnlyOnTwistieClick;return t=>e(this.nodes.get(t===this.root.element?null:t)||null)}get onDidDispose(){return this.tree.onDidDispose}createTree(e,t,r,n,s){const a=new j(r),d=n.map(c=>new ae(c,this.nodeMapper,this._onDidChangeNodeSlowState.event)),o=B(s)||{};return new $(e,t,a,d,o)}updateOptions(e={}){this.tree.updateOptions(e)}get options(){return this.tree.options}getHTMLElement(){return this.tree.getHTMLElement()}get contentHeight(){return this.tree.contentHeight}get contentWidth(){return this.tree.contentWidth}get onDidChangeContentHeight(){return this.tree.onDidChangeContentHeight}get onDidChangeContentWidth(){return this.tree.onDidChangeContentWidth}get scrollTop(){return this.tree.scrollTop}set scrollTop(e){this.tree.scrollTop=e}get scrollLeft(){return this.tree.scrollLeft}set scrollLeft(e){this.tree.scrollLeft=e}get scrollHeight(){return this.tree.scrollHeight}get renderHeight(){return this.tree.renderHeight}get lastVisibleElement(){return this.tree.lastVisibleElement.element}get ariaLabel(){return this.tree.ariaLabel}set ariaLabel(e){this.tree.ariaLabel=e}domFocus(){this.tree.domFocus()}isDOMFocused(){return this.tree.isDOMFocused()}navigate(e){let t;return e&&(t=this.getDataNode(e)),new me(this.tree.navigate(t))}layout(e,t){this.tree.layout(e,t),te(t)&&this.findController?.layout(t)}style(e){this.tree.style(e)}getInput(){return this.root.element}async setInput(e,t){this.refreshPromises.forEach(n=>n.cancel()),this.refreshPromises.clear(),this.root.element=e;const r=t&&{viewState:t,focus:[],selection:[]};await this._updateChildren(e,!0,!1,r),r&&(this.tree.setFocus(r.focus),this.tree.setSelection(r.selection)),t&&typeof t.scrollTop=="number"&&(this.scrollTop=t.scrollTop)}async updateChildren(e=this.root.element,t=!0,r=!1,n){await this._updateChildren(e,t,r,void 0,n)}async _updateChildren(e=this.root.element,t=!0,r=!1,n,s){if(typeof this.root.element>"u")throw new g(this.user,"Tree input not set");this.root.refreshPromise&&(await this.root.refreshPromise,await h.toPromise(this._onDidRender.event));const a=this.getDataNode(e);if(await this.refreshAndRenderNode(a,t,n,s),r)try{this.tree.rerender(a)}catch{}}resort(e=this.root.element,t=!0){this.model.resort(this.getDataNode(e),t)}hasNode(e){return e===this.root.element||this.nodes.has(e)}rerender(e){if(e===void 0||e===this.root.element){this.tree.rerender();return}const t=this.getDataNode(e);this.tree.rerender(t)}updateElementHeight(e,t){const r=this.getDataNode(e);this.tree.updateElementHeight(r,t)}updateWidth(e){const t=this.getDataNode(e);this.tree.updateWidth(t)}getNode(e=this.root.element){const t=this.getDataNode(e),r=this.tree.getNode(t===this.root?null:t);return this.nodeMapper.map(r)}collapse(e,t=!1){const r=this.getDataNode(e);return this.tree.collapse(r===this.root?null:r,t)}async expand(e,t=!1){if(typeof this.root.element>"u")throw new g(this.user,"Tree input not set");this.root.refreshPromise&&(await this.root.refreshPromise,await h.toPromise(this._onDidRender.event));const r=this.getDataNode(e);if(this.tree.hasElement(r)&&!this.tree.isCollapsible(r)||(r.refreshPromise&&(await this.root.refreshPromise,await h.toPromise(this._onDidRender.event)),r!==this.root&&!r.refreshPromise&&!this.tree.isCollapsed(r)))return!1;const n=this.tree.expand(r===this.root?null:r,t);return r.refreshPromise&&(await this.root.refreshPromise,await h.toPromise(this._onDidRender.event)),n}toggleCollapsed(e,t=!1){return this.tree.toggleCollapsed(this.getDataNode(e),t)}expandAll(){this.tree.expandAll()}async expandTo(e){if(!this.dataSource.getParent)throw new Error("Can't expand to element without getParent method");const t=[];for(;!this.hasNode(e);)e=this.dataSource.getParent(e),e!==this.root.element&&t.push(e);for(const r of A.reverse(t))await this.expand(r);this.tree.expandTo(this.getDataNode(e))}collapseAll(){this.tree.collapseAll()}isCollapsible(e){return this.tree.isCollapsible(this.getDataNode(e))}isCollapsed(e){return this.tree.isCollapsed(this.getDataNode(e))}triggerTypeNavigation(){this.tree.triggerTypeNavigation()}openFind(){this.findController?this.findController.open():this.tree.openFind()}closeFind(){this.findController?this.findController.close():this.tree.closeFind()}refilter(){this.tree.refilter()}setAnchor(e){this.tree.setAnchor(typeof e>"u"?void 0:this.getDataNode(e))}getAnchor(){return this.tree.getAnchor()?.element}setSelection(e,t){const r=e.map(n=>this.getDataNode(n));this.tree.setSelection(r,t)}getSelection(){return this.tree.getSelection().map(t=>t.element)}setFocus(e,t){const r=e.map(n=>this.getDataNode(n));this.tree.setFocus(r,t)}focusNext(e=1,t=!1,r){this.tree.focusNext(e,t,r)}focusPrevious(e=1,t=!1,r){this.tree.focusPrevious(e,t,r)}focusNextPage(e){return this.tree.focusNextPage(e)}focusPreviousPage(e){return this.tree.focusPreviousPage(e)}focusLast(e){this.tree.focusLast(e)}focusFirst(e){this.tree.focusFirst(e)}getFocus(){return this.tree.getFocus().map(t=>t.element)}getStickyScrollFocus(){return this.tree.getStickyScrollFocus().map(t=>t.element)}getFocusedPart(){return this.tree.getFocusedPart()}reveal(e,t){this.tree.reveal(this.getDataNode(e),t)}getRelativeTop(e){return this.tree.getRelativeTop(this.getDataNode(e))}getParentElement(e){const t=this.tree.getParentElement(this.getDataNode(e));return t&&t.element}getFirstElementChild(e=this.root.element){const t=this.getDataNode(e),r=this.tree.getFirstElementChild(t===this.root?null:t);return r&&r.element}getDataNode(e){const t=this.findController?.getDataNode(e);if(t)return t;const r=this.nodes.get(e===this.root.element?null:e);if(!r)throw new g(this.user,`Data tree node not found: ${e}`);return r}async refreshAndRenderNode(e,t,r,n){await this.refreshNode(e,t,r),!this.disposables.isDisposed&&this.render(e,r,n)}async refreshNode(e,t,r){let n;if(this.subTreeRefreshPromises.forEach((s,a)=>{!n&&ie(a,e)&&(n=s.then(()=>this.refreshNode(e,t,r)))}),n)return n;if(e!==this.root&&this.tree.getNode(e).collapsed){e.hasChildren=!!this.dataSource.hasChildren(e.element),e.stale=!0,this.setChildren(e,[],t,r);return}return this.doRefreshSubTree(e,t,r)}async doRefreshSubTree(e,t,r){let n;e.refreshPromise=new Promise(s=>n=s),this.subTreeRefreshPromises.set(e,e.refreshPromise),e.refreshPromise.finally(()=>{e.refreshPromise=void 0,this.subTreeRefreshPromises.delete(e)});try{const s=await this.doRefreshNode(e,t,r);e.stale=!1,await Q.settled(s.map(a=>this.doRefreshSubTree(a,t,r)))}finally{n()}}async doRefreshNode(e,t,r){e.hasChildren=!!this.dataSource.hasChildren(e.element);let n;if(!e.hasChildren)n=Promise.resolve(A.empty());else{const s=this.doGetChildren(e);if(z(s))n=Promise.resolve(s);else{const a=X(800);a.then(()=>{e.slow=!0,this._onDidChangeNodeSlowState.fire(e)},d=>null),n=s.finally(()=>a.cancel())}}try{const s=await n;return this.setChildren(e,s,t,r)}catch(s){if(e!==this.root&&this.model.has(e)&&this.model.setCollapsed(e),Z(s))return[];throw s}finally{e.slow&&(e.slow=!1,this._onDidChangeNodeSlowState.fire(e))}}doGetChildren(e){let t=this.refreshPromises.get(e);if(t)return t;const r=this.dataSource.getChildren(e.element);return z(r)?this.processChildren(r):(t=J(async()=>this.processChildren(await r)),this.refreshPromises.set(e,t),t.finally(()=>{this.refreshPromises.delete(e)}))}_onDidChangeCollapseState({node:e,deep:t}){e.element!==null&&!e.collapsed&&e.element.stale&&(t?this.collapse(e.element.element):this.refreshAndRenderNode(e.element,!1).catch(ee))}setChildren(e,t,r,n){const s=[...t];if(e.children.length===0&&s.length===0)return[];const a=new Map,d=new Map;for(const l of e.children)a.set(l.element,l),this.identityProvider&&d.set(l.id,{node:l,collapsed:this.model.has(l)&&this.model.isCollapsed(l)});const o=[],c=s.map(l=>{const p=!!this.dataSource.hasChildren(l);if(!this.identityProvider){const T=w({element:l,parent:e,hasChildren:p,defaultCollapseState:this.getDefaultCollapseState(l)});return p&&T.defaultCollapseState===b.PreserveOrExpanded&&o.push(T),T}const m=this.identityProvider.getId(l).toString(),f=d.get(m);if(f){const T=f.node;return a.delete(T.element),this.nodes.delete(T.element),this.nodes.set(l,T),T.element=l,T.hasChildren=p,r?f.collapsed?(T.children.forEach(D=>x(D,y=>this.nodes.delete(y.element))),T.children.splice(0,T.children.length),T.stale=!0):o.push(T):p&&!f.collapsed&&o.push(T),T}const u=w({element:l,parent:e,id:m,hasChildren:p,defaultCollapseState:this.getDefaultCollapseState(l)});return n&&n.viewState.focus&&n.viewState.focus.indexOf(m)>-1&&n.focus.push(u),n&&n.viewState.selection&&n.viewState.selection.indexOf(m)>-1&&n.selection.push(u),(n&&n.viewState.expanded&&n.viewState.expanded.indexOf(m)>-1||p&&u.defaultCollapseState===b.PreserveOrExpanded)&&o.push(u),u});for(const l of a.values())x(l,p=>this.nodes.delete(p.element));for(const l of c)this.nodes.set(l.element,l);return e.children.splice(0,e.children.length,...c),e!==this.root&&this.autoExpandSingleChildren&&c.length===1&&o.length===0&&(c[0].forceExpanded=!0,o.push(c[0])),o}render(e,t,r){const n=e.children.map(a=>this.asTreeElement(a,t)),s=r&&{...r,diffIdentityProvider:r.diffIdentityProvider&&{getId(a){return r.diffIdentityProvider.getId(a.element)}}};this.model.setChildren(e===this.root?null:e,n,s),e!==this.root&&this.model.setCollapsible(e,e.hasChildren),this._onDidRender.fire()}asTreeElement(e,t){if(e.stale)return{element:e,collapsible:e.hasChildren,collapsed:!0};let r;return t&&t.viewState.expanded&&e.id&&t.viewState.expanded.indexOf(e.id)>-1?r=!1:e.forceExpanded?(r=!1,e.forceExpanded=!1):r=e.defaultCollapseState,{element:e,children:e.hasChildren?A.map(e.children,n=>this.asTreeElement(n,t)):[],collapsible:e.hasChildren,collapsed:r}}processChildren(e){return this.sorter&&(e=[...e].sort(this.sorter.compare.bind(this.sorter))),e}getViewState(){if(!this.identityProvider)throw new g(this.user,"Can't get tree view state without an identity provider");const e=d=>this.identityProvider.getId(d).toString(),t=this.getFocus().map(e),r=this.getSelection().map(e),n=[],s=this.tree.getNode(),a=[s];for(;a.length>0;){const d=a.pop();d!==s&&d.collapsible&&!d.collapsed&&n.push(e(d.element.element)),a.push(...d.children)}return{focus:t,selection:r,expanded:n,scrollTop:this.scrollTop}}dispose(){this.disposables.dispose(),this.tree.dispose()}}class k{constructor(e){this.node=e}get element(){return{elements:this.node.element.elements.map(e=>e.element),incompressible:this.node.element.incompressible}}get children(){return this.node.children.map(e=>new k(e))}get depth(){return this.node.depth}get visibleChildrenCount(){return this.node.visibleChildrenCount}get visibleChildIndex(){return this.node.visibleChildIndex}get collapsible(){return this.node.collapsible}get collapsed(){return this.node.collapsed}get visible(){return this.node.visible}get filterData(){return this.node.filterData}}class ue{constructor(e,t,r,n){this.renderer=e;this.nodeMapper=t;this.compressibleNodeMapperProvider=r;this.onDidChangeTwistieState=n;this.templateId=e.templateId}templateId;renderedNodes=new Map;disposables=[];renderTemplate(e){return{templateData:this.renderer.renderTemplate(e)}}renderElement(e,t,r,n){this.renderer.renderElement(this.nodeMapper.map(e),t,r.templateData,n)}renderCompressedElements(e,t,r,n){this.renderer.renderCompressedElements(this.compressibleNodeMapperProvider().map(e),t,r.templateData,n)}renderTwistie(e,t){return e.slow?(t.classList.add(...C.asClassNameArray(N.treeItemLoading)),!0):(t.classList.remove(...C.asClassNameArray(N.treeItemLoading)),!1)}disposeElement(e,t,r,n){this.renderer.disposeElement?.(this.nodeMapper.map(e),t,r.templateData,n)}disposeCompressedElements(e,t,r,n){this.renderer.disposeCompressedElements?.(this.compressibleNodeMapperProvider().map(e),t,r.templateData,n)}disposeTemplate(e){this.renderer.disposeTemplate(e.templateData)}dispose(){this.renderedNodes.clear(),this.disposables=W(this.disposables)}}function he(i){const e=i&&B(i);return e&&{...e,keyboardNavigationLabelProvider:e.keyboardNavigationLabelProvider&&{...e.keyboardNavigationLabelProvider,getCompressedNodeKeyboardNavigationLabel(t){return i.keyboardNavigationLabelProvider.getCompressedNodeKeyboardNavigationLabel(t.map(r=>r.element))}}}}class Et extends pe{constructor(t,r,n,s,a,d,o={}){super(t,r,n,a,d,o);this.compressionDelegate=s;this.filter=o.filter}compressibleNodeMapper=new U(t=>new k(t));filter;getCompressedTreeNode(t){const r=this.getDataNode(t);return this.tree.getCompressedTreeNode(r).element}createTree(t,r,n,s,a){const d=new j(n),o=s.map(l=>new ue(l,this.nodeMapper,()=>this.compressibleNodeMapper,this._onDidChangeNodeSlowState.event)),c=he(a)||{};return new G(t,r,d,o,c)}asTreeElement(t,r){return{incompressible:this.compressionDelegate.isIncompressible(t.element),...super.asTreeElement(t,r)}}updateOptions(t={}){this.tree.updateOptions(t)}getViewState(){if(!this.identityProvider)throw new g(this.user,"Can't get tree view state without an identity provider");const t=o=>this.identityProvider.getId(o).toString(),r=this.getFocus().map(t),n=this.getSelection().map(t),s=[],a=this.tree.getCompressedTreeNode(),d=[a];for(;d.length>0;){const o=d.pop();if(o!==a&&o.collapsible&&!o.collapsed)for(const c of o.element.elements)s.push(t(c.element));d.push(...o.children)}return{focus:r,selection:n,expanded:s,scrollTop:this.scrollTop}}render(t,r,n){if(!this.identityProvider)return super.render(t,r);const s=u=>this.identityProvider.getId(u).toString(),a=u=>{const T=new Set;for(const D of u){const y=this.tree.getCompressedTreeNode(D===this.root?null:D);if(y.element)for(const v of y.element.elements)T.add(s(v.element))}return T},d=a(this.tree.getSelection()),o=a(this.tree.getFocus());super.render(t,r,n);const c=this.getSelection();let l=!1;const p=this.getFocus();let m=!1;const f=u=>{const T=u.element;if(T)for(let D=0;D<T.elements.length;D++){const y=s(T.elements[D].element),v=T.elements[T.elements.length-1].element;d.has(y)&&c.indexOf(v)===-1&&(c.push(v),l=!0),o.has(y)&&p.indexOf(v)===-1&&(p.push(v),m=!0)}u.children.forEach(f)};f(this.tree.getCompressedTreeNode(t===this.root?null:t)),l&&this.setSelection(c),m&&this.setFocus(p)}processChildren(t){return this.filter&&(t=A.filter(t,r=>{const n=this.filter.filter(r,I.Visible),s=Ie(n);if(s===I.Recurse)throw new Error("Recursive tree visibility not supported in async data compressed trees");return s===I.Visible})),super.processChildren(t)}navigate(t){return super.navigate(t)}}function Ie(i){return typeof i=="boolean"?i?I.Visible:I.Hidden:_(i)?P(i.visibility):P(i)}class me{constructor(e){this.navigator=e}current(){const e=this.navigator.current();return e===null?null:e.element}previous(){return this.navigator.previous(),this.current()}first(){return this.navigator.first(),this.current()}last(){return this.navigator.last(),this.current()}next(){return this.navigator.next(),this.current()}}export{pe as AsyncDataTree,Et as CompressibleAsyncDataTree};
