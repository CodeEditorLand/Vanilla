{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/browser/ui/progressbar/progressAccessibilitySignal.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from '../../../common/lifecycle.js';\n\nexport interface IScopedAccessibilityProgressSignalDelegate extends IDisposable { }\n\nconst nullScopedAccessibilityProgressSignalFactory = () => ({\n\tmsLoopTime: -1,\n\tmsDelayTime: -1,\n\tdispose: () => { },\n});\nlet progressAccessibilitySignalSchedulerFactory: (msDelayTime: number, msLoopTime?: number) => IScopedAccessibilityProgressSignalDelegate = nullScopedAccessibilityProgressSignalFactory;\n\nexport function setProgressAcccessibilitySignalScheduler(progressAccessibilitySignalScheduler: (msDelayTime: number, msLoopTime?: number) => IScopedAccessibilityProgressSignalDelegate) {\n\tprogressAccessibilitySignalSchedulerFactory = progressAccessibilitySignalScheduler;\n}\n\nexport function getProgressAcccessibilitySignalScheduler(msDelayTime: number, msLoopTime?: number): IScopedAccessibilityProgressSignalDelegate {\n\treturn progressAccessibilitySignalSchedulerFactory(msDelayTime, msLoopTime);\n}\n"],
  "mappings": ";;AAKA,SAAS,mBAAmB;AAI5B,MAAM,+CAA+C,8BAAO;AAAA,EAC3D,YAAY;AAAA,EACZ,aAAa;AAAA,EACb,SAAS,6BAAM;AAAA,EAAE,GAAR;AACV,IAJqD;AAKrD,IAAI,8CAAwI;AAErI,SAAS,yCAAyC,sCAAgI;AACxL,gDAA8C;AAC/C;AAFgB;AAIT,SAAS,yCAAyC,aAAqB,YAAiE;AAC9I,SAAO,4CAA4C,aAAa,UAAU;AAC3E;AAFgB;",
  "names": []
}
