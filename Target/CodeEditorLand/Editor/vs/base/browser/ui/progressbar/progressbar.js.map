{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/browser/ui/progressbar/progressbar.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RunOnceScheduler } from \"../../../common/async.js\";\nimport {\n\tDisposable,\n\ttype IDisposable,\n\tMutableDisposable,\n} from \"../../../common/lifecycle.js\";\nimport { isNumber } from \"../../../common/types.js\";\nimport { hide, show } from \"../../dom.js\";\nimport { getProgressAcccessibilitySignalScheduler } from \"./progressAccessibilitySignal.js\";\nimport \"./progressbar.css\";\n\nconst CSS_DONE = \"done\";\nconst CSS_ACTIVE = \"active\";\nconst CSS_INFINITE = \"infinite\";\nconst CSS_INFINITE_LONG_RUNNING = \"infinite-long-running\";\nconst CSS_DISCRETE = \"discrete\";\n\nexport interface IProgressBarOptions extends IProgressBarStyles {}\n\nexport interface IProgressBarStyles {\n\tprogressBarBackground: string | undefined;\n}\n\nexport const unthemedProgressBarOptions: IProgressBarOptions = {\n\tprogressBarBackground: undefined,\n};\n\n/**\n * A progress bar with support for infinite or discrete progress.\n */\nexport class ProgressBar extends Disposable {\n\t/**\n\t * After a certain time of showing the progress bar, switch\n\t * to long-running mode and throttle animations to reduce\n\t * the pressure on the GPU process.\n\t *\n\t * https://github.com/microsoft/vscode/issues/97900\n\t * https://github.com/microsoft/vscode/issues/138396\n\t */\n\tprivate static readonly LONG_RUNNING_INFINITE_THRESHOLD = 10000;\n\n\tprivate static readonly PROGRESS_SIGNAL_DEFAULT_DELAY = 3000;\n\n\tprivate workedVal: number;\n\tprivate element!: HTMLElement;\n\tprivate bit!: HTMLElement;\n\tprivate totalWork: number | undefined;\n\tprivate showDelayedScheduler: RunOnceScheduler;\n\tprivate longRunningScheduler: RunOnceScheduler;\n\tprivate readonly progressSignal = this._register(\n\t\tnew MutableDisposable<IDisposable>(),\n\t);\n\n\tconstructor(container: HTMLElement, options?: IProgressBarOptions) {\n\t\tsuper();\n\n\t\tthis.workedVal = 0;\n\n\t\tthis.showDelayedScheduler = this._register(\n\t\t\tnew RunOnceScheduler(() => show(this.element), 0),\n\t\t);\n\t\tthis.longRunningScheduler = this._register(\n\t\t\tnew RunOnceScheduler(\n\t\t\t\t() => this.infiniteLongRunning(),\n\t\t\t\tProgressBar.LONG_RUNNING_INFINITE_THRESHOLD,\n\t\t\t),\n\t\t);\n\n\t\tthis.create(container, options);\n\t}\n\n\tprivate create(\n\t\tcontainer: HTMLElement,\n\t\toptions?: IProgressBarOptions,\n\t): void {\n\t\tthis.element = document.createElement(\"div\");\n\t\tthis.element.classList.add(\"monaco-progress-container\");\n\t\tthis.element.setAttribute(\"role\", \"progressbar\");\n\t\tthis.element.setAttribute(\"aria-valuemin\", \"0\");\n\t\tcontainer.appendChild(this.element);\n\n\t\tthis.bit = document.createElement(\"div\");\n\t\tthis.bit.classList.add(\"progress-bit\");\n\t\tthis.bit.style.backgroundColor =\n\t\t\toptions?.progressBarBackground || \"#0E70C0\";\n\t\tthis.element.appendChild(this.bit);\n\t}\n\n\tprivate off(): void {\n\t\tthis.bit.style.width = \"inherit\";\n\t\tthis.bit.style.opacity = \"1\";\n\t\tthis.element.classList.remove(\n\t\t\tCSS_ACTIVE,\n\t\t\tCSS_INFINITE,\n\t\t\tCSS_INFINITE_LONG_RUNNING,\n\t\t\tCSS_DISCRETE,\n\t\t);\n\n\t\tthis.workedVal = 0;\n\t\tthis.totalWork = undefined;\n\n\t\tthis.longRunningScheduler.cancel();\n\t\tthis.progressSignal.clear();\n\t}\n\n\t/**\n\t * Indicates to the progress bar that all work is done.\n\t */\n\tdone(): ProgressBar {\n\t\treturn this.doDone(true);\n\t}\n\n\t/**\n\t * Stops the progressbar from showing any progress instantly without fading out.\n\t */\n\tstop(): ProgressBar {\n\t\treturn this.doDone(false);\n\t}\n\n\tprivate doDone(delayed: boolean): ProgressBar {\n\t\tthis.element.classList.add(CSS_DONE);\n\n\t\t// discrete: let it grow to 100% width and hide afterwards\n\t\tif (this.element.classList.contains(CSS_INFINITE)) {\n\t\t\tthis.bit.style.opacity = \"0\";\n\t\t\tif (delayed) {\n\t\t\t\tsetTimeout(() => this.off(), 200);\n\t\t\t} else {\n\t\t\t\tthis.off();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.bit.style.width = \"inherit\";\n\n\t\t\tif (delayed) {\n\t\t\t\tsetTimeout(() => this.off(), 200);\n\t\t\t} else {\n\t\t\t\tthis.off();\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Use this mode to indicate progress that has no total number of work units.\n\t */\n\tinfinite(): ProgressBar {\n\t\tthis.bit.style.width = \"2%\";\n\t\tthis.bit.style.opacity = \"1\";\n\n\t\tthis.element.classList.remove(\n\t\t\tCSS_DISCRETE,\n\t\t\tCSS_DONE,\n\t\t\tCSS_INFINITE_LONG_RUNNING,\n\t\t);\n\t\tthis.element.classList.add(CSS_ACTIVE, CSS_INFINITE);\n\n\t\tthis.longRunningScheduler.schedule();\n\n\t\treturn this;\n\t}\n\n\tprivate infiniteLongRunning(): void {\n\t\tthis.element.classList.add(CSS_INFINITE_LONG_RUNNING);\n\t}\n\n\t/**\n\t * Tells the progress bar the total number of work. Use in combination with workedVal() to let\n\t * the progress bar show the actual progress based on the work that is done.\n\t */\n\ttotal(value: number): ProgressBar {\n\t\tthis.workedVal = 0;\n\t\tthis.totalWork = value;\n\t\tthis.element.setAttribute(\"aria-valuemax\", value.toString());\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Finds out if this progress bar is configured with total work\n\t */\n\thasTotal(): boolean {\n\t\treturn isNumber(this.totalWork);\n\t}\n\n\t/**\n\t * Tells the progress bar that an increment of work has been completed.\n\t */\n\tworked(value: number): ProgressBar {\n\t\tvalue = Math.max(1, Number(value));\n\n\t\treturn this.doSetWorked(this.workedVal + value);\n\t}\n\n\t/**\n\t * Tells the progress bar the total amount of work that has been completed.\n\t */\n\tsetWorked(value: number): ProgressBar {\n\t\tvalue = Math.max(1, Number(value));\n\n\t\treturn this.doSetWorked(value);\n\t}\n\n\tprivate doSetWorked(value: number): ProgressBar {\n\t\tconst totalWork = this.totalWork || 100;\n\n\t\tthis.workedVal = value;\n\t\tthis.workedVal = Math.min(totalWork, this.workedVal);\n\n\t\tthis.element.classList.remove(\n\t\t\tCSS_INFINITE,\n\t\t\tCSS_INFINITE_LONG_RUNNING,\n\t\t\tCSS_DONE,\n\t\t);\n\t\tthis.element.classList.add(CSS_ACTIVE, CSS_DISCRETE);\n\t\tthis.element.setAttribute(\"aria-valuenow\", value.toString());\n\n\t\tthis.bit.style.width = 100 * (this.workedVal / totalWork) + \"%\";\n\n\t\treturn this;\n\t}\n\n\tgetContainer(): HTMLElement {\n\t\treturn this.element;\n\t}\n\n\tshow(delay?: number): void {\n\t\tthis.showDelayedScheduler.cancel();\n\t\tthis.progressSignal.value = getProgressAcccessibilitySignalScheduler(\n\t\t\tProgressBar.PROGRESS_SIGNAL_DEFAULT_DELAY,\n\t\t);\n\n\t\tif (typeof delay === \"number\") {\n\t\t\tthis.showDelayedScheduler.schedule(delay);\n\t\t} else {\n\t\t\tshow(this.element);\n\t\t}\n\t}\n\n\thide(): void {\n\t\thide(this.element);\n\n\t\tthis.showDelayedScheduler.cancel();\n\t\tthis.progressSignal.clear();\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
