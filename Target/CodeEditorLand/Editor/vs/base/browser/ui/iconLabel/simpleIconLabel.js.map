{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/browser/ui/iconLabel/simpleIconLabel.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { reset } from '../../dom.js';\nimport type { IManagedHover } from '../hover/hover.js';\nimport { getBaseLayerHoverDelegate } from '../hover/hoverDelegate2.js';\nimport { getDefaultHoverDelegate } from '../hover/hoverDelegateFactory.js';\nimport { renderLabelWithIcons } from './iconLabels.js';\nimport { IDisposable } from '../../../common/lifecycle.js';\n\nexport class SimpleIconLabel implements IDisposable {\n\n\tprivate hover?: IManagedHover;\n\n\tconstructor(\n\t\tprivate readonly _container: HTMLElement\n\t) { }\n\n\tset text(text: string) {\n\t\treset(this._container, ...renderLabelWithIcons(text ?? ''));\n\t}\n\n\tset title(title: string) {\n\t\tif (!this.hover && title) {\n\t\t\tthis.hover = getBaseLayerHoverDelegate().setupManagedHover(getDefaultHoverDelegate('mouse'), this._container, title);\n\t\t} else if (this.hover) {\n\t\t\tthis.hover.update(title);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.hover?.dispose();\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,aAAa;AAEtB,SAAS,iCAAiC;AAC1C,SAAS,+BAA+B;AACxC,SAAS,4BAA4B;AACrC,SAAS,mBAAmB;AAErB,MAAM,gBAAuC;AAAA,EAInD,YACkB,YAChB;AADgB;AAAA,EACd;AAAA,EAlBL,OAYoD;AAAA;AAAA;AAAA,EAE3C;AAAA,EAMR,IAAI,KAAK,MAAc;AACtB,UAAM,KAAK,YAAY,GAAG,qBAAqB,QAAQ,EAAE,CAAC;AAAA,EAC3D;AAAA,EAEA,IAAI,MAAM,OAAe;AACxB,QAAI,CAAC,KAAK,SAAS,OAAO;AACzB,WAAK,QAAQ,0BAA0B,EAAE,kBAAkB,wBAAwB,OAAO,GAAG,KAAK,YAAY,KAAK;AAAA,IACpH,WAAW,KAAK,OAAO;AACtB,WAAK,MAAM,OAAO,KAAK;AAAA,IACxB;AAAA,EACD;AAAA,EAEA,UAAgB;AACf,SAAK,OAAO,QAAQ;AAAA,EACrB;AACD;",
  "names": []
}
