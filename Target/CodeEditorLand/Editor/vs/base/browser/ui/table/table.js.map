{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/browser/ui/table/table.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IListContextMenuEvent, IListEvent, IListGestureEvent, IListMouseEvent, IListRenderer, IListTouchEvent } from '../list/list.js';\nimport { Event } from '../../../common/event.js';\n\nexport interface ITableColumn<TRow, TCell> {\n\treadonly label: string;\n\treadonly tooltip?: string;\n\treadonly weight: number;\n\treadonly templateId: string;\n\n\treadonly minimumWidth?: number;\n\treadonly maximumWidth?: number;\n\treadonly onDidChangeWidthConstraints?: Event<void>;\n\n\tproject(row: TRow): TCell;\n}\n\nexport interface ITableVirtualDelegate<TRow> {\n\treadonly headerRowHeight: number;\n\tgetHeight(row: TRow): number;\n}\n\nexport interface ITableRenderer<TCell, TTemplateData> extends IListRenderer<TCell, TTemplateData> { }\n\nexport interface ITableEvent<TRow> extends IListEvent<TRow> { }\nexport interface ITableMouseEvent<TRow> extends IListMouseEvent<TRow> { }\nexport interface ITableTouchEvent<TRow> extends IListTouchEvent<TRow> { }\nexport interface ITableGestureEvent<TRow> extends IListGestureEvent<TRow> { }\nexport interface ITableContextMenuEvent<TRow> extends IListContextMenuEvent<TRow> { }\n\nexport class TableError extends Error {\n\n\tconstructor(user: string, message: string) {\n\t\tsuper(`TableError [${user}] ${message}`);\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,uBAAuB,YAAY,mBAAmB,iBAAiB,eAAe,uBAAuB;AACtH,SAAS,aAAa;AA4Bf,MAAM,mBAAmB,MAAM;AAAA,EAlCtC,OAkCsC;AAAA;AAAA;AAAA,EAErC,YAAY,MAAc,SAAiB;AAC1C,UAAM,eAAe,IAAI,KAAK,OAAO,EAAE;AAAA,EACxC;AACD;",
  "names": []
}
