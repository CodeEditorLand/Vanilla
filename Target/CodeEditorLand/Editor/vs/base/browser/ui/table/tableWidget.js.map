{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/browser/ui/table/tableWidget.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from \"../../../common/event.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n} from \"../../../common/lifecycle.js\";\nimport {\n\ttype ScrollEvent,\n\tScrollbarVisibility,\n} from \"../../../common/scrollable.js\";\nimport type { ISpliceable } from \"../../../common/sequence.js\";\nimport {\n\t$,\n\tappend,\n\tclearNode,\n\tcreateStyleSheet,\n\tgetContentHeight,\n\tgetContentWidth,\n} from \"../../dom.js\";\nimport { getBaseLayerHoverDelegate } from \"../hover/hoverDelegate2.js\";\nimport { getDefaultHoverDelegate } from \"../hover/hoverDelegateFactory.js\";\nimport type { IListRenderer, IListVirtualDelegate } from \"../list/list.js\";\nimport {\n\ttype IListOptions,\n\ttype IListOptionsUpdate,\n\ttype IListStyles,\n\tList,\n\tunthemedListStyles,\n} from \"../list/listWidget.js\";\nimport {\n\ttype ISplitViewDescriptor,\n\ttype IView,\n\tOrientation,\n\tSplitView,\n} from \"../splitview/splitview.js\";\nimport type {\n\tITableColumn,\n\tITableContextMenuEvent,\n\tITableEvent,\n\tITableGestureEvent,\n\tITableMouseEvent,\n\tITableRenderer,\n\tITableTouchEvent,\n\tITableVirtualDelegate,\n} from \"./table.js\";\nimport \"./table.css\";\n\n// TODO@joao\ntype TCell = any;\n\ninterface RowTemplateData {\n\treadonly container: HTMLElement;\n\treadonly cellContainers: HTMLElement[];\n\treadonly cellTemplateData: unknown[];\n}\n\nclass TableListRenderer<TRow> implements IListRenderer<TRow, RowTemplateData> {\n\tstatic TemplateId = \"row\";\n\treadonly templateId = TableListRenderer.TemplateId;\n\tprivate renderers: ITableRenderer<TCell, unknown>[];\n\tprivate renderedTemplates = new Set<RowTemplateData>();\n\n\tconstructor(\n\t\tprivate columns: ITableColumn<TRow, TCell>[],\n\t\trenderers: ITableRenderer<TCell, unknown>[],\n\t\tprivate getColumnSize: (index: number) => number,\n\t) {\n\t\tconst rendererMap = new Map(renderers.map((r) => [r.templateId, r]));\n\t\tthis.renderers = [];\n\n\t\tfor (const column of columns) {\n\t\t\tconst renderer = rendererMap.get(column.templateId);\n\n\t\t\tif (!renderer) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`Table cell renderer for template id ${column.templateId} not found.`,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.renderers.push(renderer);\n\t\t}\n\t}\n\n\trenderTemplate(container: HTMLElement) {\n\t\tconst rowContainer = append(container, $(\".monaco-table-tr\"));\n\t\tconst cellContainers: HTMLElement[] = [];\n\t\tconst cellTemplateData: unknown[] = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i++) {\n\t\t\tconst renderer = this.renderers[i];\n\t\t\tconst cellContainer = append(\n\t\t\t\trowContainer,\n\t\t\t\t$(\".monaco-table-td\", { \"data-col-index\": i }),\n\t\t\t);\n\n\t\t\tcellContainer.style.width = `${this.getColumnSize(i)}px`;\n\t\t\tcellContainers.push(cellContainer);\n\t\t\tcellTemplateData.push(renderer.renderTemplate(cellContainer));\n\t\t}\n\n\t\tconst result = { container, cellContainers, cellTemplateData };\n\t\tthis.renderedTemplates.add(result);\n\n\t\treturn result;\n\t}\n\n\trenderElement(\n\t\telement: TRow,\n\t\tindex: number,\n\t\ttemplateData: RowTemplateData,\n\t\theight: number | undefined,\n\t): void {\n\t\tfor (let i = 0; i < this.columns.length; i++) {\n\t\t\tconst column = this.columns[i];\n\t\t\tconst cell = column.project(element);\n\t\t\tconst renderer = this.renderers[i];\n\t\t\trenderer.renderElement(\n\t\t\t\tcell,\n\t\t\t\tindex,\n\t\t\t\ttemplateData.cellTemplateData[i],\n\t\t\t\theight,\n\t\t\t);\n\t\t}\n\t}\n\n\tdisposeElement(\n\t\telement: TRow,\n\t\tindex: number,\n\t\ttemplateData: RowTemplateData,\n\t\theight: number | undefined,\n\t): void {\n\t\tfor (let i = 0; i < this.columns.length; i++) {\n\t\t\tconst renderer = this.renderers[i];\n\n\t\t\tif (renderer.disposeElement) {\n\t\t\t\tconst column = this.columns[i];\n\t\t\t\tconst cell = column.project(element);\n\n\t\t\t\trenderer.disposeElement(\n\t\t\t\t\tcell,\n\t\t\t\t\tindex,\n\t\t\t\t\ttemplateData.cellTemplateData[i],\n\t\t\t\t\theight,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tdisposeTemplate(templateData: RowTemplateData): void {\n\t\tfor (let i = 0; i < this.columns.length; i++) {\n\t\t\tconst renderer = this.renderers[i];\n\t\t\trenderer.disposeTemplate(templateData.cellTemplateData[i]);\n\t\t}\n\n\t\tclearNode(templateData.container);\n\t\tthis.renderedTemplates.delete(templateData);\n\t}\n\n\tlayoutColumn(index: number, size: number): void {\n\t\tfor (const { cellContainers } of this.renderedTemplates) {\n\t\t\tcellContainers[index].style.width = `${size}px`;\n\t\t}\n\t}\n}\n\nfunction asListVirtualDelegate<TRow>(\n\tdelegate: ITableVirtualDelegate<TRow>,\n): IListVirtualDelegate<TRow> {\n\treturn {\n\t\tgetHeight(row) {\n\t\t\treturn delegate.getHeight(row);\n\t\t},\n\t\tgetTemplateId() {\n\t\t\treturn TableListRenderer.TemplateId;\n\t\t},\n\t};\n}\n\nclass ColumnHeader<TRow, TCell> extends Disposable implements IView {\n\treadonly element: HTMLElement;\n\n\tget minimumSize() {\n\t\treturn this.column.minimumWidth ?? 120;\n\t}\n\tget maximumSize() {\n\t\treturn this.column.maximumWidth ?? Number.POSITIVE_INFINITY;\n\t}\n\tget onDidChange() {\n\t\treturn this.column.onDidChangeWidthConstraints ?? Event.None;\n\t}\n\n\tprivate _onDidLayout = new Emitter<[number, number]>();\n\treadonly onDidLayout = this._onDidLayout.event;\n\n\tconstructor(\n\t\treadonly column: ITableColumn<TRow, TCell>,\n\t\tprivate index: number,\n\t) {\n\t\tsuper();\n\n\t\tthis.element = $(\n\t\t\t\".monaco-table-th\",\n\t\t\t{ \"data-col-index\": index },\n\t\t\tcolumn.label,\n\t\t);\n\n\t\tif (column.tooltip) {\n\t\t\tthis._register(\n\t\t\t\tgetBaseLayerHoverDelegate().setupManagedHover(\n\t\t\t\t\tgetDefaultHoverDelegate(\"mouse\"),\n\t\t\t\t\tthis.element,\n\t\t\t\t\tcolumn.tooltip,\n\t\t\t\t),\n\t\t\t);\n\t\t}\n\t}\n\n\tlayout(size: number): void {\n\t\tthis._onDidLayout.fire([this.index, size]);\n\t}\n}\n\nexport interface ITableOptions<TRow> extends IListOptions<TRow> {}\nexport interface ITableOptionsUpdate extends IListOptionsUpdate {}\nexport interface ITableStyles extends IListStyles {}\n\nexport class Table<TRow> implements ISpliceable<TRow>, IDisposable {\n\tprivate static InstanceCount = 0;\n\treadonly domId = `table_id_${++Table.InstanceCount}`;\n\n\treadonly domNode: HTMLElement;\n\tprivate splitview: SplitView;\n\tprivate list: List<TRow>;\n\tprivate styleElement: HTMLStyleElement;\n\tprotected readonly disposables = new DisposableStore();\n\n\tprivate cachedWidth = 0;\n\tprivate cachedHeight = 0;\n\n\tget onDidChangeFocus(): Event<ITableEvent<TRow>> {\n\t\treturn this.list.onDidChangeFocus;\n\t}\n\tget onDidChangeSelection(): Event<ITableEvent<TRow>> {\n\t\treturn this.list.onDidChangeSelection;\n\t}\n\n\tget onDidScroll(): Event<ScrollEvent> {\n\t\treturn this.list.onDidScroll;\n\t}\n\tget onMouseClick(): Event<ITableMouseEvent<TRow>> {\n\t\treturn this.list.onMouseClick;\n\t}\n\tget onMouseDblClick(): Event<ITableMouseEvent<TRow>> {\n\t\treturn this.list.onMouseDblClick;\n\t}\n\tget onMouseMiddleClick(): Event<ITableMouseEvent<TRow>> {\n\t\treturn this.list.onMouseMiddleClick;\n\t}\n\tget onPointer(): Event<ITableMouseEvent<TRow>> {\n\t\treturn this.list.onPointer;\n\t}\n\tget onMouseUp(): Event<ITableMouseEvent<TRow>> {\n\t\treturn this.list.onMouseUp;\n\t}\n\tget onMouseDown(): Event<ITableMouseEvent<TRow>> {\n\t\treturn this.list.onMouseDown;\n\t}\n\tget onMouseOver(): Event<ITableMouseEvent<TRow>> {\n\t\treturn this.list.onMouseOver;\n\t}\n\tget onMouseMove(): Event<ITableMouseEvent<TRow>> {\n\t\treturn this.list.onMouseMove;\n\t}\n\tget onMouseOut(): Event<ITableMouseEvent<TRow>> {\n\t\treturn this.list.onMouseOut;\n\t}\n\tget onTouchStart(): Event<ITableTouchEvent<TRow>> {\n\t\treturn this.list.onTouchStart;\n\t}\n\tget onTap(): Event<ITableGestureEvent<TRow>> {\n\t\treturn this.list.onTap;\n\t}\n\tget onContextMenu(): Event<ITableContextMenuEvent<TRow>> {\n\t\treturn this.list.onContextMenu;\n\t}\n\n\tget onDidFocus(): Event<void> {\n\t\treturn this.list.onDidFocus;\n\t}\n\tget onDidBlur(): Event<void> {\n\t\treturn this.list.onDidBlur;\n\t}\n\n\tget scrollTop(): number {\n\t\treturn this.list.scrollTop;\n\t}\n\tset scrollTop(scrollTop: number) {\n\t\tthis.list.scrollTop = scrollTop;\n\t}\n\tget scrollLeft(): number {\n\t\treturn this.list.scrollLeft;\n\t}\n\tset scrollLeft(scrollLeft: number) {\n\t\tthis.list.scrollLeft = scrollLeft;\n\t}\n\tget scrollHeight(): number {\n\t\treturn this.list.scrollHeight;\n\t}\n\tget renderHeight(): number {\n\t\treturn this.list.renderHeight;\n\t}\n\tget onDidDispose(): Event<void> {\n\t\treturn this.list.onDidDispose;\n\t}\n\n\tconstructor(\n\t\tuser: string,\n\t\tcontainer: HTMLElement,\n\t\tprivate virtualDelegate: ITableVirtualDelegate<TRow>,\n\t\tprivate columns: ITableColumn<TRow, TCell>[],\n\t\trenderers: ITableRenderer<TCell, unknown>[],\n\t\t_options?: ITableOptions<TRow>,\n\t) {\n\t\tthis.domNode = append(container, $(`.monaco-table.${this.domId}`));\n\n\t\tconst headers = columns.map((c, i) =>\n\t\t\tthis.disposables.add(new ColumnHeader(c, i)),\n\t\t);\n\t\tconst descriptor: ISplitViewDescriptor = {\n\t\t\tsize: headers.reduce((a, b) => a + b.column.weight, 0),\n\t\t\tviews: headers.map((view) => ({ size: view.column.weight, view })),\n\t\t};\n\n\t\tthis.splitview = this.disposables.add(\n\t\t\tnew SplitView(this.domNode, {\n\t\t\t\torientation: Orientation.HORIZONTAL,\n\t\t\t\tscrollbarVisibility: ScrollbarVisibility.Hidden,\n\t\t\t\tgetSashOrthogonalSize: () => this.cachedHeight,\n\t\t\t\tdescriptor,\n\t\t\t}),\n\t\t);\n\n\t\tthis.splitview.el.style.height = `${virtualDelegate.headerRowHeight}px`;\n\t\tthis.splitview.el.style.lineHeight = `${virtualDelegate.headerRowHeight}px`;\n\n\t\tconst renderer = new TableListRenderer(columns, renderers, (i) =>\n\t\t\tthis.splitview.getViewSize(i),\n\t\t);\n\t\tthis.list = this.disposables.add(\n\t\t\tnew List(\n\t\t\t\tuser,\n\t\t\t\tthis.domNode,\n\t\t\t\tasListVirtualDelegate(virtualDelegate),\n\t\t\t\t[renderer],\n\t\t\t\t_options,\n\t\t\t),\n\t\t);\n\n\t\tEvent.any(...headers.map((h) => h.onDidLayout))(\n\t\t\t([index, size]) => renderer.layoutColumn(index, size),\n\t\t\tnull,\n\t\t\tthis.disposables,\n\t\t);\n\n\t\tthis.splitview.onDidSashReset(\n\t\t\t(index) => {\n\t\t\t\tconst totalWeight = columns.reduce((r, c) => r + c.weight, 0);\n\t\t\t\tconst size =\n\t\t\t\t\t(columns[index].weight / totalWeight) * this.cachedWidth;\n\t\t\t\tthis.splitview.resizeView(index, size);\n\t\t\t},\n\t\t\tnull,\n\t\t\tthis.disposables,\n\t\t);\n\n\t\tthis.styleElement = createStyleSheet(this.domNode);\n\t\tthis.style(unthemedListStyles);\n\t}\n\n\tgetColumnLabels(): string[] {\n\t\treturn this.columns.map((c) => c.label);\n\t}\n\n\tresizeColumn(index: number, percentage: number): void {\n\t\tconst size = Math.round((percentage / 100.0) * this.cachedWidth);\n\t\tthis.splitview.resizeView(index, size);\n\t}\n\n\tupdateOptions(options: ITableOptionsUpdate): void {\n\t\tthis.list.updateOptions(options);\n\t}\n\n\tsplice(\n\t\tstart: number,\n\t\tdeleteCount: number,\n\t\telements: readonly TRow[] = [],\n\t): void {\n\t\tthis.list.splice(start, deleteCount, elements);\n\t}\n\n\trerender(): void {\n\t\tthis.list.rerender();\n\t}\n\n\trow(index: number): TRow {\n\t\treturn this.list.element(index);\n\t}\n\n\tindexOf(element: TRow): number {\n\t\treturn this.list.indexOf(element);\n\t}\n\n\tget length(): number {\n\t\treturn this.list.length;\n\t}\n\n\tgetHTMLElement(): HTMLElement {\n\t\treturn this.domNode;\n\t}\n\n\tlayout(height?: number, width?: number): void {\n\t\theight = height ?? getContentHeight(this.domNode);\n\t\twidth = width ?? getContentWidth(this.domNode);\n\n\t\tthis.cachedWidth = width;\n\t\tthis.cachedHeight = height;\n\t\tthis.splitview.layout(width);\n\n\t\tconst listHeight = height - this.virtualDelegate.headerRowHeight;\n\t\tthis.list.getHTMLElement().style.height = `${listHeight}px`;\n\t\tthis.list.layout(listHeight, width);\n\t}\n\n\ttriggerTypeNavigation(): void {\n\t\tthis.list.triggerTypeNavigation();\n\t}\n\n\tstyle(styles: ITableStyles): void {\n\t\tconst content: string[] = [];\n\n\t\tcontent.push(`.monaco-table.${this.domId} > .monaco-split-view2 .monaco-sash.vertical::before {\n\t\t\ttop: ${this.virtualDelegate.headerRowHeight + 1}px;\n\t\t\theight: calc(100% - ${this.virtualDelegate.headerRowHeight}px);\n\t\t}`);\n\n\t\tthis.styleElement.textContent = content.join(\"\\n\");\n\t\tthis.list.style(styles);\n\t}\n\n\tdomFocus(): void {\n\t\tthis.list.domFocus();\n\t}\n\n\tsetAnchor(index: number | undefined): void {\n\t\tthis.list.setAnchor(index);\n\t}\n\n\tgetAnchor(): number | undefined {\n\t\treturn this.list.getAnchor();\n\t}\n\n\tgetSelectedElements(): TRow[] {\n\t\treturn this.list.getSelectedElements();\n\t}\n\n\tsetSelection(indexes: number[], browserEvent?: UIEvent): void {\n\t\tthis.list.setSelection(indexes, browserEvent);\n\t}\n\n\tgetSelection(): number[] {\n\t\treturn this.list.getSelection();\n\t}\n\n\tsetFocus(indexes: number[], browserEvent?: UIEvent): void {\n\t\tthis.list.setFocus(indexes, browserEvent);\n\t}\n\n\tfocusNext(n = 1, loop = false, browserEvent?: UIEvent): void {\n\t\tthis.list.focusNext(n, loop, browserEvent);\n\t}\n\n\tfocusPrevious(n = 1, loop = false, browserEvent?: UIEvent): void {\n\t\tthis.list.focusPrevious(n, loop, browserEvent);\n\t}\n\n\tfocusNextPage(browserEvent?: UIEvent): Promise<void> {\n\t\treturn this.list.focusNextPage(browserEvent);\n\t}\n\n\tfocusPreviousPage(browserEvent?: UIEvent): Promise<void> {\n\t\treturn this.list.focusPreviousPage(browserEvent);\n\t}\n\n\tfocusFirst(browserEvent?: UIEvent): void {\n\t\tthis.list.focusFirst(browserEvent);\n\t}\n\n\tfocusLast(browserEvent?: UIEvent): void {\n\t\tthis.list.focusLast(browserEvent);\n\t}\n\n\tgetFocus(): number[] {\n\t\treturn this.list.getFocus();\n\t}\n\n\tgetFocusedElements(): TRow[] {\n\t\treturn this.list.getFocusedElements();\n\t}\n\n\tgetRelativeTop(index: number): number | null {\n\t\treturn this.list.getRelativeTop(index);\n\t}\n\n\treveal(index: number, relativeTop?: number): void {\n\t\tthis.list.reveal(index, relativeTop);\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables.dispose();\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
