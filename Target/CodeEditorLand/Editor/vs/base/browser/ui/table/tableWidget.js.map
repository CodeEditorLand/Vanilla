{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/browser/ui/table/tableWidget.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { $, append, clearNode, createStyleSheet, getContentHeight, getContentWidth } from '../../dom.js';\nimport { getBaseLayerHoverDelegate } from '../hover/hoverDelegate2.js';\nimport { getDefaultHoverDelegate } from '../hover/hoverDelegateFactory.js';\nimport { IListRenderer, IListVirtualDelegate } from '../list/list.js';\nimport { IListOptions, IListOptionsUpdate, IListStyles, List, unthemedListStyles } from '../list/listWidget.js';\nimport { ISplitViewDescriptor, IView, Orientation, SplitView } from '../splitview/splitview.js';\nimport { ITableColumn, ITableContextMenuEvent, ITableEvent, ITableGestureEvent, ITableMouseEvent, ITableRenderer, ITableTouchEvent, ITableVirtualDelegate } from './table.js';\nimport { Emitter, Event } from '../../../common/event.js';\nimport { Disposable, DisposableStore, IDisposable } from '../../../common/lifecycle.js';\nimport { ScrollbarVisibility, ScrollEvent } from '../../../common/scrollable.js';\nimport { ISpliceable } from '../../../common/sequence.js';\nimport './table.css';\n\n// TODO@joao\ntype TCell = any;\n\ninterface RowTemplateData {\n\treadonly container: HTMLElement;\n\treadonly cellContainers: HTMLElement[];\n\treadonly cellTemplateData: unknown[];\n}\n\nclass TableListRenderer<TRow> implements IListRenderer<TRow, RowTemplateData> {\n\n\tstatic TemplateId = 'row';\n\treadonly templateId = TableListRenderer.TemplateId;\n\tprivate renderers: ITableRenderer<TCell, unknown>[];\n\tprivate renderedTemplates = new Set<RowTemplateData>();\n\n\tconstructor(\n\t\tprivate columns: ITableColumn<TRow, TCell>[],\n\t\trenderers: ITableRenderer<TCell, unknown>[],\n\t\tprivate getColumnSize: (index: number) => number\n\t) {\n\t\tconst rendererMap = new Map(renderers.map(r => [r.templateId, r]));\n\t\tthis.renderers = [];\n\n\t\tfor (const column of columns) {\n\t\t\tconst renderer = rendererMap.get(column.templateId);\n\n\t\t\tif (!renderer) {\n\t\t\t\tthrow new Error(`Table cell renderer for template id ${column.templateId} not found.`);\n\t\t\t}\n\n\t\t\tthis.renderers.push(renderer);\n\t\t}\n\t}\n\n\trenderTemplate(container: HTMLElement) {\n\t\tconst rowContainer = append(container, $('.monaco-table-tr'));\n\t\tconst cellContainers: HTMLElement[] = [];\n\t\tconst cellTemplateData: unknown[] = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i++) {\n\t\t\tconst renderer = this.renderers[i];\n\t\t\tconst cellContainer = append(rowContainer, $('.monaco-table-td', { 'data-col-index': i }));\n\n\t\t\tcellContainer.style.width = `${this.getColumnSize(i)}px`;\n\t\t\tcellContainers.push(cellContainer);\n\t\t\tcellTemplateData.push(renderer.renderTemplate(cellContainer));\n\t\t}\n\n\t\tconst result = { container, cellContainers, cellTemplateData };\n\t\tthis.renderedTemplates.add(result);\n\n\t\treturn result;\n\t}\n\n\trenderElement(element: TRow, index: number, templateData: RowTemplateData, height: number | undefined): void {\n\t\tfor (let i = 0; i < this.columns.length; i++) {\n\t\t\tconst column = this.columns[i];\n\t\t\tconst cell = column.project(element);\n\t\t\tconst renderer = this.renderers[i];\n\t\t\trenderer.renderElement(cell, index, templateData.cellTemplateData[i], height);\n\t\t}\n\t}\n\n\tdisposeElement(element: TRow, index: number, templateData: RowTemplateData, height: number | undefined): void {\n\t\tfor (let i = 0; i < this.columns.length; i++) {\n\t\t\tconst renderer = this.renderers[i];\n\n\t\t\tif (renderer.disposeElement) {\n\t\t\t\tconst column = this.columns[i];\n\t\t\t\tconst cell = column.project(element);\n\n\t\t\t\trenderer.disposeElement(cell, index, templateData.cellTemplateData[i], height);\n\t\t\t}\n\t\t}\n\t}\n\n\tdisposeTemplate(templateData: RowTemplateData): void {\n\t\tfor (let i = 0; i < this.columns.length; i++) {\n\t\t\tconst renderer = this.renderers[i];\n\t\t\trenderer.disposeTemplate(templateData.cellTemplateData[i]);\n\t\t}\n\n\t\tclearNode(templateData.container);\n\t\tthis.renderedTemplates.delete(templateData);\n\t}\n\n\tlayoutColumn(index: number, size: number): void {\n\t\tfor (const { cellContainers } of this.renderedTemplates) {\n\t\t\tcellContainers[index].style.width = `${size}px`;\n\t\t}\n\t}\n}\n\nfunction asListVirtualDelegate<TRow>(delegate: ITableVirtualDelegate<TRow>): IListVirtualDelegate<TRow> {\n\treturn {\n\t\tgetHeight(row) { return delegate.getHeight(row); },\n\t\tgetTemplateId() { return TableListRenderer.TemplateId; },\n\t};\n}\n\nclass ColumnHeader<TRow, TCell> extends Disposable implements IView {\n\n\treadonly element: HTMLElement;\n\n\tget minimumSize() { return this.column.minimumWidth ?? 120; }\n\tget maximumSize() { return this.column.maximumWidth ?? Number.POSITIVE_INFINITY; }\n\tget onDidChange() { return this.column.onDidChangeWidthConstraints ?? Event.None; }\n\n\tprivate _onDidLayout = new Emitter<[number, number]>();\n\treadonly onDidLayout = this._onDidLayout.event;\n\n\tconstructor(readonly column: ITableColumn<TRow, TCell>, private index: number) {\n\t\tsuper();\n\n\t\tthis.element = $('.monaco-table-th', { 'data-col-index': index }, column.label);\n\n\t\tif (column.tooltip) {\n\t\t\tthis._register(getBaseLayerHoverDelegate().setupManagedHover(getDefaultHoverDelegate('mouse'), this.element, column.tooltip));\n\t\t}\n\t}\n\n\tlayout(size: number): void {\n\t\tthis._onDidLayout.fire([this.index, size]);\n\t}\n}\n\nexport interface ITableOptions<TRow> extends IListOptions<TRow> { }\nexport interface ITableOptionsUpdate extends IListOptionsUpdate { }\nexport interface ITableStyles extends IListStyles { }\n\nexport class Table<TRow> implements ISpliceable<TRow>, IDisposable {\n\n\tprivate static InstanceCount = 0;\n\treadonly domId = `table_id_${++Table.InstanceCount}`;\n\n\treadonly domNode: HTMLElement;\n\tprivate splitview: SplitView;\n\tprivate list: List<TRow>;\n\tprivate styleElement: HTMLStyleElement;\n\tprotected readonly disposables = new DisposableStore();\n\n\tprivate cachedWidth: number = 0;\n\tprivate cachedHeight: number = 0;\n\n\tget onDidChangeFocus(): Event<ITableEvent<TRow>> { return this.list.onDidChangeFocus; }\n\tget onDidChangeSelection(): Event<ITableEvent<TRow>> { return this.list.onDidChangeSelection; }\n\n\tget onDidScroll(): Event<ScrollEvent> { return this.list.onDidScroll; }\n\tget onMouseClick(): Event<ITableMouseEvent<TRow>> { return this.list.onMouseClick; }\n\tget onMouseDblClick(): Event<ITableMouseEvent<TRow>> { return this.list.onMouseDblClick; }\n\tget onMouseMiddleClick(): Event<ITableMouseEvent<TRow>> { return this.list.onMouseMiddleClick; }\n\tget onPointer(): Event<ITableMouseEvent<TRow>> { return this.list.onPointer; }\n\tget onMouseUp(): Event<ITableMouseEvent<TRow>> { return this.list.onMouseUp; }\n\tget onMouseDown(): Event<ITableMouseEvent<TRow>> { return this.list.onMouseDown; }\n\tget onMouseOver(): Event<ITableMouseEvent<TRow>> { return this.list.onMouseOver; }\n\tget onMouseMove(): Event<ITableMouseEvent<TRow>> { return this.list.onMouseMove; }\n\tget onMouseOut(): Event<ITableMouseEvent<TRow>> { return this.list.onMouseOut; }\n\tget onTouchStart(): Event<ITableTouchEvent<TRow>> { return this.list.onTouchStart; }\n\tget onTap(): Event<ITableGestureEvent<TRow>> { return this.list.onTap; }\n\tget onContextMenu(): Event<ITableContextMenuEvent<TRow>> { return this.list.onContextMenu; }\n\n\tget onDidFocus(): Event<void> { return this.list.onDidFocus; }\n\tget onDidBlur(): Event<void> { return this.list.onDidBlur; }\n\n\tget scrollTop(): number { return this.list.scrollTop; }\n\tset scrollTop(scrollTop: number) { this.list.scrollTop = scrollTop; }\n\tget scrollLeft(): number { return this.list.scrollLeft; }\n\tset scrollLeft(scrollLeft: number) { this.list.scrollLeft = scrollLeft; }\n\tget scrollHeight(): number { return this.list.scrollHeight; }\n\tget renderHeight(): number { return this.list.renderHeight; }\n\tget onDidDispose(): Event<void> { return this.list.onDidDispose; }\n\n\tconstructor(\n\t\tuser: string,\n\t\tcontainer: HTMLElement,\n\t\tprivate virtualDelegate: ITableVirtualDelegate<TRow>,\n\t\tprivate columns: ITableColumn<TRow, TCell>[],\n\t\trenderers: ITableRenderer<TCell, unknown>[],\n\t\t_options?: ITableOptions<TRow>\n\t) {\n\t\tthis.domNode = append(container, $(`.monaco-table.${this.domId}`));\n\n\t\tconst headers = columns.map((c, i) => this.disposables.add(new ColumnHeader(c, i)));\n\t\tconst descriptor: ISplitViewDescriptor = {\n\t\t\tsize: headers.reduce((a, b) => a + b.column.weight, 0),\n\t\t\tviews: headers.map(view => ({ size: view.column.weight, view }))\n\t\t};\n\n\t\tthis.splitview = this.disposables.add(new SplitView(this.domNode, {\n\t\t\torientation: Orientation.HORIZONTAL,\n\t\t\tscrollbarVisibility: ScrollbarVisibility.Hidden,\n\t\t\tgetSashOrthogonalSize: () => this.cachedHeight,\n\t\t\tdescriptor\n\t\t}));\n\n\t\tthis.splitview.el.style.height = `${virtualDelegate.headerRowHeight}px`;\n\t\tthis.splitview.el.style.lineHeight = `${virtualDelegate.headerRowHeight}px`;\n\n\t\tconst renderer = new TableListRenderer(columns, renderers, i => this.splitview.getViewSize(i));\n\t\tthis.list = this.disposables.add(new List(user, this.domNode, asListVirtualDelegate(virtualDelegate), [renderer], _options));\n\n\t\tEvent.any(...headers.map(h => h.onDidLayout))\n\t\t\t(([index, size]) => renderer.layoutColumn(index, size), null, this.disposables);\n\n\t\tthis.splitview.onDidSashReset(index => {\n\t\t\tconst totalWeight = columns.reduce((r, c) => r + c.weight, 0);\n\t\t\tconst size = columns[index].weight / totalWeight * this.cachedWidth;\n\t\t\tthis.splitview.resizeView(index, size);\n\t\t}, null, this.disposables);\n\n\t\tthis.styleElement = createStyleSheet(this.domNode);\n\t\tthis.style(unthemedListStyles);\n\t}\n\n\tgetColumnLabels(): string[] {\n\t\treturn this.columns.map(c => c.label);\n\t}\n\n\tresizeColumn(index: number, percentage: number): void {\n\t\tconst size = Math.round((percentage / 100.00) * this.cachedWidth);\n\t\tthis.splitview.resizeView(index, size);\n\t}\n\n\tupdateOptions(options: ITableOptionsUpdate): void {\n\t\tthis.list.updateOptions(options);\n\t}\n\n\tsplice(start: number, deleteCount: number, elements: readonly TRow[] = []): void {\n\t\tthis.list.splice(start, deleteCount, elements);\n\t}\n\n\trerender(): void {\n\t\tthis.list.rerender();\n\t}\n\n\trow(index: number): TRow {\n\t\treturn this.list.element(index);\n\t}\n\n\tindexOf(element: TRow): number {\n\t\treturn this.list.indexOf(element);\n\t}\n\n\tget length(): number {\n\t\treturn this.list.length;\n\t}\n\n\tgetHTMLElement(): HTMLElement {\n\t\treturn this.domNode;\n\t}\n\n\tlayout(height?: number, width?: number): void {\n\t\theight = height ?? getContentHeight(this.domNode);\n\t\twidth = width ?? getContentWidth(this.domNode);\n\n\t\tthis.cachedWidth = width;\n\t\tthis.cachedHeight = height;\n\t\tthis.splitview.layout(width);\n\n\t\tconst listHeight = height - this.virtualDelegate.headerRowHeight;\n\t\tthis.list.getHTMLElement().style.height = `${listHeight}px`;\n\t\tthis.list.layout(listHeight, width);\n\t}\n\n\ttriggerTypeNavigation(): void {\n\t\tthis.list.triggerTypeNavigation();\n\t}\n\n\tstyle(styles: ITableStyles): void {\n\t\tconst content: string[] = [];\n\n\t\tcontent.push(`.monaco-table.${this.domId} > .monaco-split-view2 .monaco-sash.vertical::before {\n\t\t\ttop: ${this.virtualDelegate.headerRowHeight + 1}px;\n\t\t\theight: calc(100% - ${this.virtualDelegate.headerRowHeight}px);\n\t\t}`);\n\n\t\tthis.styleElement.textContent = content.join('\\n');\n\t\tthis.list.style(styles);\n\t}\n\n\tdomFocus(): void {\n\t\tthis.list.domFocus();\n\t}\n\n\tsetAnchor(index: number | undefined): void {\n\t\tthis.list.setAnchor(index);\n\t}\n\n\tgetAnchor(): number | undefined {\n\t\treturn this.list.getAnchor();\n\t}\n\n\tgetSelectedElements(): TRow[] {\n\t\treturn this.list.getSelectedElements();\n\t}\n\n\tsetSelection(indexes: number[], browserEvent?: UIEvent): void {\n\t\tthis.list.setSelection(indexes, browserEvent);\n\t}\n\n\tgetSelection(): number[] {\n\t\treturn this.list.getSelection();\n\t}\n\n\tsetFocus(indexes: number[], browserEvent?: UIEvent): void {\n\t\tthis.list.setFocus(indexes, browserEvent);\n\t}\n\n\tfocusNext(n = 1, loop = false, browserEvent?: UIEvent): void {\n\t\tthis.list.focusNext(n, loop, browserEvent);\n\t}\n\n\tfocusPrevious(n = 1, loop = false, browserEvent?: UIEvent): void {\n\t\tthis.list.focusPrevious(n, loop, browserEvent);\n\t}\n\n\tfocusNextPage(browserEvent?: UIEvent): Promise<void> {\n\t\treturn this.list.focusNextPage(browserEvent);\n\t}\n\n\tfocusPreviousPage(browserEvent?: UIEvent): Promise<void> {\n\t\treturn this.list.focusPreviousPage(browserEvent);\n\t}\n\n\tfocusFirst(browserEvent?: UIEvent): void {\n\t\tthis.list.focusFirst(browserEvent);\n\t}\n\n\tfocusLast(browserEvent?: UIEvent): void {\n\t\tthis.list.focusLast(browserEvent);\n\t}\n\n\tgetFocus(): number[] {\n\t\treturn this.list.getFocus();\n\t}\n\n\tgetFocusedElements(): TRow[] {\n\t\treturn this.list.getFocusedElements();\n\t}\n\n\tgetRelativeTop(index: number): number | null {\n\t\treturn this.list.getRelativeTop(index);\n\t}\n\n\treveal(index: number, relativeTop?: number): void {\n\t\tthis.list.reveal(index, relativeTop);\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables.dispose();\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
