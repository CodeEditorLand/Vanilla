{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/browser/ui/centered/centeredViewLayout.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { $, IDomNodePagePosition } from '../../dom.js';\nimport { IView, IViewSize } from '../grid/grid.js';\nimport { IBoundarySashes } from '../sash/sash.js';\nimport { DistributeSizing, ISplitViewStyles, IView as ISplitViewView, Orientation, SplitView } from '../splitview/splitview.js';\nimport { Color } from '../../../common/color.js';\nimport { Event } from '../../../common/event.js';\nimport { DisposableStore, IDisposable } from '../../../common/lifecycle.js';\n\nexport interface CenteredViewState {\n\t// width of the fixed centered layout\n\ttargetWidth: number;\n\t// proportional size of left margin\n\tleftMarginRatio: number;\n\t// proportional size of right margin\n\trightMarginRatio: number;\n}\n\nconst defaultState: CenteredViewState = {\n\ttargetWidth: 900,\n\tleftMarginRatio: 0.1909,\n\trightMarginRatio: 0.1909,\n};\n\nconst distributeSizing: DistributeSizing = { type: 'distribute' };\n\nfunction createEmptyView(background: Color | undefined): ISplitViewView<{ top: number; left: number }> {\n\tconst element = $('.centered-layout-margin');\n\telement.style.height = '100%';\n\tif (background) {\n\t\telement.style.backgroundColor = background.toString();\n\t}\n\n\treturn {\n\t\telement,\n\t\tlayout: () => undefined,\n\t\tminimumSize: 60,\n\t\tmaximumSize: Number.POSITIVE_INFINITY,\n\t\tonDidChange: Event.None\n\t};\n}\n\nfunction toSplitViewView(view: IView, getHeight: () => number): ISplitViewView<{ top: number; left: number }> {\n\treturn {\n\t\telement: view.element,\n\t\tget maximumSize() { return view.maximumWidth; },\n\t\tget minimumSize() { return view.minimumWidth; },\n\t\tonDidChange: Event.map(view.onDidChange, e => e && e.width),\n\t\tlayout: (size, offset, ctx) => view.layout(size, getHeight(), ctx?.top ?? 0, (ctx?.left ?? 0) + offset)\n\t};\n}\n\nexport interface ICenteredViewStyles extends ISplitViewStyles {\n\tbackground: Color;\n}\n\nexport class CenteredViewLayout implements IDisposable {\n\n\tprivate splitView?: SplitView<{ top: number; left: number }>;\n\tprivate lastLayoutPosition: IDomNodePagePosition = { width: 0, height: 0, left: 0, top: 0 };\n\tprivate style!: ICenteredViewStyles;\n\tprivate didLayout = false;\n\tprivate emptyViews: ISplitViewView<{ top: number; left: number }>[] | undefined;\n\tprivate readonly splitViewDisposables = new DisposableStore();\n\n\tconstructor(\n\t\tprivate container: HTMLElement,\n\t\tprivate view: IView,\n\t\tpublic state: CenteredViewState = { ...defaultState },\n\t\tprivate centeredLayoutFixedWidth: boolean = false\n\t) {\n\t\tthis.container.appendChild(this.view.element);\n\t\t// Make sure to hide the split view overflow like sashes #52892\n\t\tthis.container.style.overflow = 'hidden';\n\t}\n\n\tget minimumWidth(): number { return this.splitView ? this.splitView.minimumSize : this.view.minimumWidth; }\n\tget maximumWidth(): number { return this.splitView ? this.splitView.maximumSize : this.view.maximumWidth; }\n\tget minimumHeight(): number { return this.view.minimumHeight; }\n\tget maximumHeight(): number { return this.view.maximumHeight; }\n\tget onDidChange(): Event<IViewSize | undefined> { return this.view.onDidChange; }\n\n\tprivate _boundarySashes: IBoundarySashes = {};\n\tget boundarySashes(): IBoundarySashes { return this._boundarySashes; }\n\tset boundarySashes(boundarySashes: IBoundarySashes) {\n\t\tthis._boundarySashes = boundarySashes;\n\n\t\tif (!this.splitView) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.splitView.orthogonalStartSash = boundarySashes.top;\n\t\tthis.splitView.orthogonalEndSash = boundarySashes.bottom;\n\t}\n\n\tlayout(width: number, height: number, top: number, left: number): void {\n\t\tthis.lastLayoutPosition = { width, height, top, left };\n\t\tif (this.splitView) {\n\t\t\tthis.splitView.layout(width, this.lastLayoutPosition);\n\t\t\tif (!this.didLayout || this.centeredLayoutFixedWidth) {\n\t\t\t\tthis.resizeSplitViews();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.view.layout(width, height, top, left);\n\t\t}\n\n\t\tthis.didLayout = true;\n\t}\n\n\tprivate resizeSplitViews(): void {\n\t\tif (!this.splitView) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.centeredLayoutFixedWidth) {\n\t\t\tconst centerViewWidth = Math.min(this.lastLayoutPosition.width, this.state.targetWidth);\n\t\t\tconst marginWidthFloat = (this.lastLayoutPosition.width - centerViewWidth) / 2;\n\t\t\tthis.splitView.resizeView(0, Math.floor(marginWidthFloat));\n\t\t\tthis.splitView.resizeView(1, centerViewWidth);\n\t\t\tthis.splitView.resizeView(2, Math.ceil(marginWidthFloat));\n\t\t} else {\n\t\t\tconst leftMargin = this.state.leftMarginRatio * this.lastLayoutPosition.width;\n\t\t\tconst rightMargin = this.state.rightMarginRatio * this.lastLayoutPosition.width;\n\t\t\tconst center = this.lastLayoutPosition.width - leftMargin - rightMargin;\n\t\t\tthis.splitView.resizeView(0, leftMargin);\n\t\t\tthis.splitView.resizeView(1, center);\n\t\t\tthis.splitView.resizeView(2, rightMargin);\n\t\t}\n\t}\n\n\tsetFixedWidth(option: boolean) {\n\t\tthis.centeredLayoutFixedWidth = option;\n\t\tif (!!this.splitView) {\n\t\t\tthis.updateState();\n\t\t\tthis.resizeSplitViews();\n\t\t}\n\t}\n\n\tprivate updateState() {\n\t\tif (!!this.splitView) {\n\t\t\tthis.state.targetWidth = this.splitView.getViewSize(1);\n\t\t\tthis.state.leftMarginRatio = this.splitView.getViewSize(0) / this.lastLayoutPosition.width;\n\t\t\tthis.state.rightMarginRatio = this.splitView.getViewSize(2) / this.lastLayoutPosition.width;\n\t\t}\n\t}\n\n\tisActive(): boolean {\n\t\treturn !!this.splitView;\n\t}\n\n\tstyles(style: ICenteredViewStyles): void {\n\t\tthis.style = style;\n\t\tif (this.splitView && this.emptyViews) {\n\t\t\tthis.splitView.style(this.style);\n\t\t\tthis.emptyViews[0].element.style.backgroundColor = this.style.background.toString();\n\t\t\tthis.emptyViews[1].element.style.backgroundColor = this.style.background.toString();\n\t\t}\n\t}\n\n\tactivate(active: boolean): void {\n\t\tif (active === this.isActive()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (active) {\n\t\t\tthis.view.element.remove();\n\t\t\tthis.splitView = new SplitView(this.container, {\n\t\t\t\tinverseAltBehavior: true,\n\t\t\t\torientation: Orientation.HORIZONTAL,\n\t\t\t\tstyles: this.style\n\t\t\t});\n\t\t\tthis.splitView.orthogonalStartSash = this.boundarySashes.top;\n\t\t\tthis.splitView.orthogonalEndSash = this.boundarySashes.bottom;\n\n\t\t\tthis.splitViewDisposables.add(this.splitView.onDidSashChange(() => {\n\t\t\t\tif (!!this.splitView) {\n\t\t\t\t\tthis.updateState();\n\t\t\t\t}\n\t\t\t}));\n\t\t\tthis.splitViewDisposables.add(this.splitView.onDidSashReset(() => {\n\t\t\t\tthis.state = { ...defaultState };\n\t\t\t\tthis.resizeSplitViews();\n\t\t\t}));\n\n\t\t\tthis.splitView.layout(this.lastLayoutPosition.width, this.lastLayoutPosition);\n\t\t\tconst backgroundColor = this.style ? this.style.background : undefined;\n\t\t\tthis.emptyViews = [createEmptyView(backgroundColor), createEmptyView(backgroundColor)];\n\n\t\t\tthis.splitView.addView(this.emptyViews[0], distributeSizing, 0);\n\t\t\tthis.splitView.addView(toSplitViewView(this.view, () => this.lastLayoutPosition.height), distributeSizing, 1);\n\t\t\tthis.splitView.addView(this.emptyViews[1], distributeSizing, 2);\n\n\t\t\tthis.resizeSplitViews();\n\t\t} else {\n\t\t\tthis.splitView?.el.remove();\n\t\t\tthis.splitViewDisposables.clear();\n\t\t\tthis.splitView?.dispose();\n\t\t\tthis.splitView = undefined;\n\t\t\tthis.emptyViews = undefined;\n\t\t\tthis.container.appendChild(this.view.element);\n\t\t\tthis.view.layout(this.lastLayoutPosition.width, this.lastLayoutPosition.height, this.lastLayoutPosition.top, this.lastLayoutPosition.left);\n\t\t}\n\t}\n\n\tisDefault(state: CenteredViewState): boolean {\n\t\tif (this.centeredLayoutFixedWidth) {\n\t\t\treturn state.targetWidth === defaultState.targetWidth;\n\t\t} else {\n\t\t\treturn state.leftMarginRatio === defaultState.leftMarginRatio\n\t\t\t\t&& state.rightMarginRatio === defaultState.rightMarginRatio;\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.splitViewDisposables.dispose();\n\n\t\tif (this.splitView) {\n\t\t\tthis.splitView.dispose();\n\t\t\tthis.splitView = undefined;\n\t\t}\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,GAAG,4BAA4B;AACxC,SAAS,OAAO,iBAAiB;AACjC,SAAS,uBAAuB;AAChC,SAAS,kBAAkB,kBAAkB,SAAS,gBAAgB,aAAa,iBAAiB;AACpG,SAAS,aAAa;AACtB,SAAS,aAAa;AACtB,SAAS,iBAAiB,mBAAmB;AAW7C,MAAM,eAAkC;AAAA,EACvC,aAAa;AAAA,EACb,iBAAiB;AAAA,EACjB,kBAAkB;AACnB;AAEA,MAAM,mBAAqC,EAAE,MAAM,aAAa;AAEhE,SAAS,gBAAgB,YAA8E;AACtG,QAAM,UAAU,EAAE,yBAAyB;AAC3C,UAAQ,MAAM,SAAS;AACvB,MAAI,YAAY;AACf,YAAQ,MAAM,kBAAkB,WAAW,SAAS;AAAA,EACrD;AAEA,SAAO;AAAA,IACN;AAAA,IACA,QAAQ,6BAAM,QAAN;AAAA,IACR,aAAa;AAAA,IACb,aAAa,OAAO;AAAA,IACpB,aAAa,MAAM;AAAA,EACpB;AACD;AAdS;AAgBT,SAAS,gBAAgB,MAAa,WAAwE;AAC7G,SAAO;AAAA,IACN,SAAS,KAAK;AAAA,IACd,IAAI,cAAc;AAAE,aAAO,KAAK;AAAA,IAAc;AAAA,IAC9C,IAAI,cAAc;AAAE,aAAO,KAAK;AAAA,IAAc;AAAA,IAC9C,aAAa,MAAM,IAAI,KAAK,aAAa,OAAK,KAAK,EAAE,KAAK;AAAA,IAC1D,QAAQ,wBAAC,MAAM,QAAQ,QAAQ,KAAK,OAAO,MAAM,UAAU,GAAG,KAAK,OAAO,IAAI,KAAK,QAAQ,KAAK,MAAM,GAA9F;AAAA,EACT;AACD;AARS;AAcF,MAAM,mBAA0C;AAAA,EAStD,YACS,WACA,MACD,QAA2B,EAAE,GAAG,aAAa,GAC5C,2BAAoC,OAC3C;AAJO;AACA;AACD;AACC;AAER,SAAK,UAAU,YAAY,KAAK,KAAK,OAAO;AAE5C,SAAK,UAAU,MAAM,WAAW;AAAA,EACjC;AAAA,EA9ED,OA4DuD;AAAA;AAAA;AAAA,EAE9C;AAAA,EACA,qBAA2C,EAAE,OAAO,GAAG,QAAQ,GAAG,MAAM,GAAG,KAAK,EAAE;AAAA,EAClF;AAAA,EACA,YAAY;AAAA,EACZ;AAAA,EACS,uBAAuB,IAAI,gBAAgB;AAAA,EAa5D,IAAI,eAAuB;AAAE,WAAO,KAAK,YAAY,KAAK,UAAU,cAAc,KAAK,KAAK;AAAA,EAAc;AAAA,EAC1G,IAAI,eAAuB;AAAE,WAAO,KAAK,YAAY,KAAK,UAAU,cAAc,KAAK,KAAK;AAAA,EAAc;AAAA,EAC1G,IAAI,gBAAwB;AAAE,WAAO,KAAK,KAAK;AAAA,EAAe;AAAA,EAC9D,IAAI,gBAAwB;AAAE,WAAO,KAAK,KAAK;AAAA,EAAe;AAAA,EAC9D,IAAI,cAA4C;AAAE,WAAO,KAAK,KAAK;AAAA,EAAa;AAAA,EAExE,kBAAmC,CAAC;AAAA,EAC5C,IAAI,iBAAkC;AAAE,WAAO,KAAK;AAAA,EAAiB;AAAA,EACrE,IAAI,eAAe,gBAAiC;AACnD,SAAK,kBAAkB;AAEvB,QAAI,CAAC,KAAK,WAAW;AACpB;AAAA,IACD;AAEA,SAAK,UAAU,sBAAsB,eAAe;AACpD,SAAK,UAAU,oBAAoB,eAAe;AAAA,EACnD;AAAA,EAEA,OAAO,OAAe,QAAgB,KAAa,MAAoB;AACtE,SAAK,qBAAqB,EAAE,OAAO,QAAQ,KAAK,KAAK;AACrD,QAAI,KAAK,WAAW;AACnB,WAAK,UAAU,OAAO,OAAO,KAAK,kBAAkB;AACpD,UAAI,CAAC,KAAK,aAAa,KAAK,0BAA0B;AACrD,aAAK,iBAAiB;AAAA,MACvB;AAAA,IACD,OAAO;AACN,WAAK,KAAK,OAAO,OAAO,QAAQ,KAAK,IAAI;AAAA,IAC1C;AAEA,SAAK,YAAY;AAAA,EAClB;AAAA,EAEQ,mBAAyB;AAChC,QAAI,CAAC,KAAK,WAAW;AACpB;AAAA,IACD;AACA,QAAI,KAAK,0BAA0B;AAClC,YAAM,kBAAkB,KAAK,IAAI,KAAK,mBAAmB,OAAO,KAAK,MAAM,WAAW;AACtF,YAAM,oBAAoB,KAAK,mBAAmB,QAAQ,mBAAmB;AAC7E,WAAK,UAAU,WAAW,GAAG,KAAK,MAAM,gBAAgB,CAAC;AACzD,WAAK,UAAU,WAAW,GAAG,eAAe;AAC5C,WAAK,UAAU,WAAW,GAAG,KAAK,KAAK,gBAAgB,CAAC;AAAA,IACzD,OAAO;AACN,YAAM,aAAa,KAAK,MAAM,kBAAkB,KAAK,mBAAmB;AACxE,YAAM,cAAc,KAAK,MAAM,mBAAmB,KAAK,mBAAmB;AAC1E,YAAM,SAAS,KAAK,mBAAmB,QAAQ,aAAa;AAC5D,WAAK,UAAU,WAAW,GAAG,UAAU;AACvC,WAAK,UAAU,WAAW,GAAG,MAAM;AACnC,WAAK,UAAU,WAAW,GAAG,WAAW;AAAA,IACzC;AAAA,EACD;AAAA,EAEA,cAAc,QAAiB;AAC9B,SAAK,2BAA2B;AAChC,QAAI,CAAC,CAAC,KAAK,WAAW;AACrB,WAAK,YAAY;AACjB,WAAK,iBAAiB;AAAA,IACvB;AAAA,EACD;AAAA,EAEQ,cAAc;AACrB,QAAI,CAAC,CAAC,KAAK,WAAW;AACrB,WAAK,MAAM,cAAc,KAAK,UAAU,YAAY,CAAC;AACrD,WAAK,MAAM,kBAAkB,KAAK,UAAU,YAAY,CAAC,IAAI,KAAK,mBAAmB;AACrF,WAAK,MAAM,mBAAmB,KAAK,UAAU,YAAY,CAAC,IAAI,KAAK,mBAAmB;AAAA,IACvF;AAAA,EACD;AAAA,EAEA,WAAoB;AACnB,WAAO,CAAC,CAAC,KAAK;AAAA,EACf;AAAA,EAEA,OAAO,OAAkC;AACxC,SAAK,QAAQ;AACb,QAAI,KAAK,aAAa,KAAK,YAAY;AACtC,WAAK,UAAU,MAAM,KAAK,KAAK;AAC/B,WAAK,WAAW,CAAC,EAAE,QAAQ,MAAM,kBAAkB,KAAK,MAAM,WAAW,SAAS;AAClF,WAAK,WAAW,CAAC,EAAE,QAAQ,MAAM,kBAAkB,KAAK,MAAM,WAAW,SAAS;AAAA,IACnF;AAAA,EACD;AAAA,EAEA,SAAS,QAAuB;AAC/B,QAAI,WAAW,KAAK,SAAS,GAAG;AAC/B;AAAA,IACD;AAEA,QAAI,QAAQ;AACX,WAAK,KAAK,QAAQ,OAAO;AACzB,WAAK,YAAY,IAAI,UAAU,KAAK,WAAW;AAAA,QAC9C,oBAAoB;AAAA,QACpB,aAAa,YAAY;AAAA,QACzB,QAAQ,KAAK;AAAA,MACd,CAAC;AACD,WAAK,UAAU,sBAAsB,KAAK,eAAe;AACzD,WAAK,UAAU,oBAAoB,KAAK,eAAe;AAEvD,WAAK,qBAAqB,IAAI,KAAK,UAAU,gBAAgB,MAAM;AAClE,YAAI,CAAC,CAAC,KAAK,WAAW;AACrB,eAAK,YAAY;AAAA,QAClB;AAAA,MACD,CAAC,CAAC;AACF,WAAK,qBAAqB,IAAI,KAAK,UAAU,eAAe,MAAM;AACjE,aAAK,QAAQ,EAAE,GAAG,aAAa;AAC/B,aAAK,iBAAiB;AAAA,MACvB,CAAC,CAAC;AAEF,WAAK,UAAU,OAAO,KAAK,mBAAmB,OAAO,KAAK,kBAAkB;AAC5E,YAAM,kBAAkB,KAAK,QAAQ,KAAK,MAAM,aAAa;AAC7D,WAAK,aAAa,CAAC,gBAAgB,eAAe,GAAG,gBAAgB,eAAe,CAAC;AAErF,WAAK,UAAU,QAAQ,KAAK,WAAW,CAAC,GAAG,kBAAkB,CAAC;AAC9D,WAAK,UAAU,QAAQ,gBAAgB,KAAK,MAAM,MAAM,KAAK,mBAAmB,MAAM,GAAG,kBAAkB,CAAC;AAC5G,WAAK,UAAU,QAAQ,KAAK,WAAW,CAAC,GAAG,kBAAkB,CAAC;AAE9D,WAAK,iBAAiB;AAAA,IACvB,OAAO;AACN,WAAK,WAAW,GAAG,OAAO;AAC1B,WAAK,qBAAqB,MAAM;AAChC,WAAK,WAAW,QAAQ;AACxB,WAAK,YAAY;AACjB,WAAK,aAAa;AAClB,WAAK,UAAU,YAAY,KAAK,KAAK,OAAO;AAC5C,WAAK,KAAK,OAAO,KAAK,mBAAmB,OAAO,KAAK,mBAAmB,QAAQ,KAAK,mBAAmB,KAAK,KAAK,mBAAmB,IAAI;AAAA,IAC1I;AAAA,EACD;AAAA,EAEA,UAAU,OAAmC;AAC5C,QAAI,KAAK,0BAA0B;AAClC,aAAO,MAAM,gBAAgB,aAAa;AAAA,IAC3C,OAAO;AACN,aAAO,MAAM,oBAAoB,aAAa,mBAC1C,MAAM,qBAAqB,aAAa;AAAA,IAC7C;AAAA,EACD;AAAA,EAEA,UAAgB;AACf,SAAK,qBAAqB,QAAQ;AAElC,QAAI,KAAK,WAAW;AACnB,WAAK,UAAU,QAAQ;AACvB,WAAK,YAAY;AAAA,IAClB;AAAA,EACD;AACD;",
  "names": []
}
