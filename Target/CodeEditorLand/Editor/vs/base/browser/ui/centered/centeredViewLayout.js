import{$ as l}from"../../dom.js";import{Orientation as d,SplitView as u}from"../splitview/splitview.js";import{Event as r}from"../../../common/event.js";import{DisposableStore as p}from"../../../common/lifecycle.js";const a={targetWidth:900,leftMarginRatio:.1909,rightMarginRatio:.1909},n={type:"distribute"};function h(e){const i=l(".centered-layout-margin");return i.style.height="100%",e&&(i.style.backgroundColor=e.toString()),{element:i,layout:()=>{},minimumSize:60,maximumSize:Number.POSITIVE_INFINITY,onDidChange:r.None}}function w(e,i){return{element:e.element,get maximumSize(){return e.maximumWidth},get minimumSize(){return e.minimumWidth},onDidChange:r.map(e.onDidChange,t=>t&&t.width),layout:(t,s,o)=>e.layout(t,i(),o?.top??0,(o?.left??0)+s)}}class M{constructor(i,t,s={...a},o=!1){this.container=i;this.view=t;this.state=s;this.centeredLayoutFixedWidth=o;this.container.appendChild(this.view.element),this.container.style.overflow="hidden"}splitView;lastLayoutPosition={width:0,height:0,left:0,top:0};style;didLayout=!1;emptyViews;splitViewDisposables=new p;get minimumWidth(){return this.splitView?this.splitView.minimumSize:this.view.minimumWidth}get maximumWidth(){return this.splitView?this.splitView.maximumSize:this.view.maximumWidth}get minimumHeight(){return this.view.minimumHeight}get maximumHeight(){return this.view.maximumHeight}get onDidChange(){return this.view.onDidChange}_boundarySashes={};get boundarySashes(){return this._boundarySashes}set boundarySashes(i){this._boundarySashes=i,this.splitView&&(this.splitView.orthogonalStartSash=i.top,this.splitView.orthogonalEndSash=i.bottom)}layout(i,t,s,o){this.lastLayoutPosition={width:i,height:t,top:s,left:o},this.splitView?(this.splitView.layout(i,this.lastLayoutPosition),(!this.didLayout||this.centeredLayoutFixedWidth)&&this.resizeSplitViews()):this.view.layout(i,t,s,o),this.didLayout=!0}resizeSplitViews(){if(this.splitView)if(this.centeredLayoutFixedWidth){const i=Math.min(this.lastLayoutPosition.width,this.state.targetWidth),t=(this.lastLayoutPosition.width-i)/2;this.splitView.resizeView(0,Math.floor(t)),this.splitView.resizeView(1,i),this.splitView.resizeView(2,Math.ceil(t))}else{const i=this.state.leftMarginRatio*this.lastLayoutPosition.width,t=this.state.rightMarginRatio*this.lastLayoutPosition.width,s=this.lastLayoutPosition.width-i-t;this.splitView.resizeView(0,i),this.splitView.resizeView(1,s),this.splitView.resizeView(2,t)}}setFixedWidth(i){this.centeredLayoutFixedWidth=i,this.splitView&&(this.updateState(),this.resizeSplitViews())}updateState(){this.splitView&&(this.state.targetWidth=this.splitView.getViewSize(1),this.state.leftMarginRatio=this.splitView.getViewSize(0)/this.lastLayoutPosition.width,this.state.rightMarginRatio=this.splitView.getViewSize(2)/this.lastLayoutPosition.width)}isActive(){return!!this.splitView}styles(i){this.style=i,this.splitView&&this.emptyViews&&(this.splitView.style(this.style),this.emptyViews[0].element.style.backgroundColor=this.style.background.toString(),this.emptyViews[1].element.style.backgroundColor=this.style.background.toString())}activate(i){if(i!==this.isActive())if(i){this.view.element.remove(),this.splitView=new u(this.container,{inverseAltBehavior:!0,orientation:d.HORIZONTAL,styles:this.style}),this.splitView.orthogonalStartSash=this.boundarySashes.top,this.splitView.orthogonalEndSash=this.boundarySashes.bottom,this.splitViewDisposables.add(this.splitView.onDidSashChange(()=>{this.splitView&&this.updateState()})),this.splitViewDisposables.add(this.splitView.onDidSashReset(()=>{this.state={...a},this.resizeSplitViews()})),this.splitView.layout(this.lastLayoutPosition.width,this.lastLayoutPosition);const t=this.style?this.style.background:void 0;this.emptyViews=[h(t),h(t)],this.splitView.addView(this.emptyViews[0],n,0),this.splitView.addView(w(this.view,()=>this.lastLayoutPosition.height),n,1),this.splitView.addView(this.emptyViews[1],n,2),this.resizeSplitViews()}else this.splitView?.el.remove(),this.splitViewDisposables.clear(),this.splitView?.dispose(),this.splitView=void 0,this.emptyViews=void 0,this.container.appendChild(this.view.element),this.view.layout(this.lastLayoutPosition.width,this.lastLayoutPosition.height,this.lastLayoutPosition.top,this.lastLayoutPosition.left)}isDefault(i){return this.centeredLayoutFixedWidth?i.targetWidth===a.targetWidth:i.leftMarginRatio===a.leftMarginRatio&&i.rightMarginRatio===a.rightMarginRatio}dispose(){this.splitViewDisposables.dispose(),this.splitView&&(this.splitView.dispose(),this.splitView=void 0)}}export{M as CenteredViewLayout};
