{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/browser/ui/hover/hoverWidget.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode } from \"../../../common/keyCodes.js\";\nimport { Disposable } from \"../../../common/lifecycle.js\";\nimport * as dom from \"../../dom.js\";\nimport { StandardKeyboardEvent } from \"../../keyboardEvent.js\";\nimport { DomScrollableElement } from \"../scrollbar/scrollableElement.js\";\nimport \"./hoverWidget.css\";\nimport { localize } from \"../../../../nls.js\";\n\nconst $ = dom.$;\n\nexport enum HoverPosition {\n\tLEFT = 0,\n\tRIGHT = 1,\n\tBELOW = 2,\n\tABOVE = 3,\n}\n\nexport class HoverWidget extends Disposable {\n\tpublic readonly containerDomNode: HTMLElement;\n\tpublic readonly contentsDomNode: HTMLElement;\n\tpublic readonly scrollbar: DomScrollableElement;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.containerDomNode = document.createElement(\"div\");\n\t\tthis.containerDomNode.className = \"monaco-hover\";\n\t\tthis.containerDomNode.tabIndex = 0;\n\t\tthis.containerDomNode.setAttribute(\"role\", \"tooltip\");\n\n\t\tthis.contentsDomNode = document.createElement(\"div\");\n\t\tthis.contentsDomNode.className = \"monaco-hover-content\";\n\n\t\tthis.scrollbar = this._register(\n\t\t\tnew DomScrollableElement(this.contentsDomNode, {\n\t\t\t\tconsumeMouseWheelIfScrollbarIsNeeded: true,\n\t\t\t}),\n\t\t);\n\t\tthis.containerDomNode.appendChild(this.scrollbar.getDomNode());\n\t}\n\n\tpublic onContentsChanged(): void {\n\t\tthis.scrollbar.scanDomNode();\n\t}\n}\n\nexport class HoverAction extends Disposable {\n\tpublic static render(\n\t\tparent: HTMLElement,\n\t\tactionOptions: {\n\t\t\tlabel: string;\n\t\t\ticonClass?: string;\n\t\t\trun: (target: HTMLElement) => void;\n\t\t\tcommandId: string;\n\t\t},\n\t\tkeybindingLabel: string | null,\n\t) {\n\t\treturn new HoverAction(parent, actionOptions, keybindingLabel);\n\t}\n\n\tpublic readonly actionLabel: string;\n\tpublic readonly actionKeybindingLabel: string | null;\n\n\tprivate readonly actionContainer: HTMLElement;\n\tprivate readonly action: HTMLElement;\n\n\tprivate constructor(\n\t\tparent: HTMLElement,\n\t\tactionOptions: {\n\t\t\tlabel: string;\n\t\t\ticonClass?: string;\n\t\t\trun: (target: HTMLElement) => void;\n\t\t\tcommandId: string;\n\t\t},\n\t\tkeybindingLabel: string | null,\n\t) {\n\t\tsuper();\n\n\t\tthis.actionLabel = actionOptions.label;\n\t\tthis.actionKeybindingLabel = keybindingLabel;\n\n\t\tthis.actionContainer = dom.append(parent, $(\"div.action-container\"));\n\t\tthis.actionContainer.setAttribute(\"tabindex\", \"0\");\n\n\t\tthis.action = dom.append(this.actionContainer, $(\"a.action\"));\n\t\tthis.action.setAttribute(\"role\", \"button\");\n\t\tif (actionOptions.iconClass) {\n\t\t\tdom.append(this.action, $(`span.icon.${actionOptions.iconClass}`));\n\t\t}\n\t\tconst label = dom.append(this.action, $(\"span\"));\n\t\tlabel.textContent = keybindingLabel\n\t\t\t? `${actionOptions.label} (${keybindingLabel})`\n\t\t\t: actionOptions.label;\n\n\t\tthis._store.add(\n\t\t\tnew ClickAction(this.actionContainer, actionOptions.run),\n\t\t);\n\t\tthis._store.add(\n\t\t\tnew KeyDownAction(this.actionContainer, actionOptions.run, [\n\t\t\t\tKeyCode.Enter,\n\t\t\t\tKeyCode.Space,\n\t\t\t]),\n\t\t);\n\t\tthis.setEnabled(true);\n\t}\n\n\tpublic setEnabled(enabled: boolean): void {\n\t\tif (enabled) {\n\t\t\tthis.actionContainer.classList.remove(\"disabled\");\n\t\t\tthis.actionContainer.removeAttribute(\"aria-disabled\");\n\t\t} else {\n\t\t\tthis.actionContainer.classList.add(\"disabled\");\n\t\t\tthis.actionContainer.setAttribute(\"aria-disabled\", \"true\");\n\t\t}\n\t}\n}\n\nexport function getHoverAccessibleViewHint(\n\tshouldHaveHint?: boolean,\n\tkeybinding?: string | null,\n): string | undefined {\n\treturn shouldHaveHint && keybinding\n\t\t? localize(\n\t\t\t\t\"acessibleViewHint\",\n\t\t\t\t\"Inspect this in the accessible view with {0}.\",\n\t\t\t\tkeybinding,\n\t\t\t)\n\t\t: shouldHaveHint\n\t\t\t? localize(\n\t\t\t\t\t\"acessibleViewHintNoKbOpen\",\n\t\t\t\t\t\"Inspect this in the accessible view via the command Open Accessible View which is currently not triggerable via keybinding.\",\n\t\t\t\t)\n\t\t\t: \"\";\n}\n\nexport class ClickAction extends Disposable {\n\tconstructor(container: HTMLElement, run: (container: HTMLElement) => void) {\n\t\tsuper();\n\t\tthis._register(\n\t\t\tdom.addDisposableListener(container, dom.EventType.CLICK, (e) => {\n\t\t\t\te.stopPropagation();\n\t\t\t\te.preventDefault();\n\t\t\t\trun(container);\n\t\t\t}),\n\t\t);\n\t}\n}\n\nexport class KeyDownAction extends Disposable {\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\trun: (container: HTMLElement) => void,\n\t\tkeyCodes: KeyCode[],\n\t) {\n\t\tsuper();\n\t\tthis._register(\n\t\t\tdom.addDisposableListener(\n\t\t\t\tcontainer,\n\t\t\t\tdom.EventType.KEY_DOWN,\n\t\t\t\t(e) => {\n\t\t\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\t\t\tif (keyCodes.some((keyCode) => event.equals(keyCode))) {\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\trun(container);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t),\n\t\t);\n\t}\n}\n"],
  "mappings": "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",
  "names": ["HoverPosition"]
}
