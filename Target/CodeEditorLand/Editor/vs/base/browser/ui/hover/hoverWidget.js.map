{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/browser/ui/hover/hoverWidget.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../dom.js';\nimport { StandardKeyboardEvent } from '../../keyboardEvent.js';\nimport { DomScrollableElement } from '../scrollbar/scrollableElement.js';\nimport { KeyCode } from '../../../common/keyCodes.js';\nimport { Disposable } from '../../../common/lifecycle.js';\nimport './hoverWidget.css';\nimport { localize } from '../../../../nls.js';\n\nconst $ = dom.$;\n\nexport const enum HoverPosition {\n\tLEFT, RIGHT, BELOW, ABOVE\n}\n\nexport class HoverWidget extends Disposable {\n\n\tpublic readonly containerDomNode: HTMLElement;\n\tpublic readonly contentsDomNode: HTMLElement;\n\tpublic readonly scrollbar: DomScrollableElement;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.containerDomNode = document.createElement('div');\n\t\tthis.containerDomNode.className = 'monaco-hover';\n\t\tthis.containerDomNode.tabIndex = 0;\n\t\tthis.containerDomNode.setAttribute('role', 'tooltip');\n\n\t\tthis.contentsDomNode = document.createElement('div');\n\t\tthis.contentsDomNode.className = 'monaco-hover-content';\n\n\t\tthis.scrollbar = this._register(new DomScrollableElement(this.contentsDomNode, {\n\t\t\tconsumeMouseWheelIfScrollbarIsNeeded: true\n\t\t}));\n\t\tthis.containerDomNode.appendChild(this.scrollbar.getDomNode());\n\t}\n\n\tpublic onContentsChanged(): void {\n\t\tthis.scrollbar.scanDomNode();\n\t}\n}\n\nexport class HoverAction extends Disposable {\n\tpublic static render(parent: HTMLElement, actionOptions: { label: string; iconClass?: string; run: (target: HTMLElement) => void; commandId: string }, keybindingLabel: string | null) {\n\t\treturn new HoverAction(parent, actionOptions, keybindingLabel);\n\t}\n\n\tpublic readonly actionLabel: string;\n\tpublic readonly actionKeybindingLabel: string | null;\n\n\tprivate readonly actionContainer: HTMLElement;\n\tprivate readonly action: HTMLElement;\n\n\tprivate constructor(parent: HTMLElement, actionOptions: { label: string; iconClass?: string; run: (target: HTMLElement) => void; commandId: string }, keybindingLabel: string | null) {\n\t\tsuper();\n\n\t\tthis.actionLabel = actionOptions.label;\n\t\tthis.actionKeybindingLabel = keybindingLabel;\n\n\t\tthis.actionContainer = dom.append(parent, $('div.action-container'));\n\t\tthis.actionContainer.setAttribute('tabindex', '0');\n\n\t\tthis.action = dom.append(this.actionContainer, $('a.action'));\n\t\tthis.action.setAttribute('role', 'button');\n\t\tif (actionOptions.iconClass) {\n\t\t\tdom.append(this.action, $(`span.icon.${actionOptions.iconClass}`));\n\t\t}\n\t\tconst label = dom.append(this.action, $('span'));\n\t\tlabel.textContent = keybindingLabel ? `${actionOptions.label} (${keybindingLabel})` : actionOptions.label;\n\n\t\tthis._store.add(new ClickAction(this.actionContainer, actionOptions.run));\n\t\tthis._store.add(new KeyDownAction(this.actionContainer, actionOptions.run, [KeyCode.Enter, KeyCode.Space]));\n\t\tthis.setEnabled(true);\n\t}\n\n\tpublic setEnabled(enabled: boolean): void {\n\t\tif (enabled) {\n\t\t\tthis.actionContainer.classList.remove('disabled');\n\t\t\tthis.actionContainer.removeAttribute('aria-disabled');\n\t\t} else {\n\t\t\tthis.actionContainer.classList.add('disabled');\n\t\t\tthis.actionContainer.setAttribute('aria-disabled', 'true');\n\t\t}\n\t}\n}\n\nexport function getHoverAccessibleViewHint(shouldHaveHint?: boolean, keybinding?: string | null): string | undefined {\n\treturn shouldHaveHint && keybinding ? localize('acessibleViewHint', \"Inspect this in the accessible view with {0}.\", keybinding) : shouldHaveHint ? localize('acessibleViewHintNoKbOpen', \"Inspect this in the accessible view via the command Open Accessible View which is currently not triggerable via keybinding.\") : '';\n}\n\nexport class ClickAction extends Disposable {\n\tconstructor(container: HTMLElement, run: (container: HTMLElement) => void) {\n\t\tsuper();\n\t\tthis._register(dom.addDisposableListener(container, dom.EventType.CLICK, e => {\n\t\t\te.stopPropagation();\n\t\t\te.preventDefault();\n\t\t\trun(container);\n\t\t}));\n\t}\n}\n\nexport class KeyDownAction extends Disposable {\n\tconstructor(container: HTMLElement, run: (container: HTMLElement) => void, keyCodes: KeyCode[]) {\n\t\tsuper();\n\t\tthis._register(dom.addDisposableListener(container, dom.EventType.KEY_DOWN, e => {\n\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\tif (keyCodes.some(keyCode => event.equals(keyCode))) {\n\t\t\t\te.stopPropagation();\n\t\t\t\te.preventDefault();\n\t\t\t\trun(container);\n\t\t\t}\n\t\t}));\n\t}\n}\n"],
  "mappings": "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",
  "names": ["HoverPosition"]
}
