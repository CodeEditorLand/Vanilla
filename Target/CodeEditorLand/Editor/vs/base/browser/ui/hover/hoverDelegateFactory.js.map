{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/browser/ui/hover/hoverDelegateFactory.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IHoverDelegate, IScopedHoverDelegate } from './hoverDelegate.js';\nimport { Lazy } from '../../../common/lazy.js';\n\nconst nullHoverDelegateFactory = () => ({\n\tget delay(): number { return -1; },\n\tdispose: () => { },\n\tshowHover: () => { return undefined; },\n});\n\nlet hoverDelegateFactory: (placement: 'mouse' | 'element', enableInstantHover: boolean) => IScopedHoverDelegate = nullHoverDelegateFactory;\nconst defaultHoverDelegateMouse = new Lazy<IHoverDelegate>(() => hoverDelegateFactory('mouse', false));\nconst defaultHoverDelegateElement = new Lazy<IHoverDelegate>(() => hoverDelegateFactory('element', false));\n\n// TODO: Remove when getDefaultHoverDelegate is no longer used\nexport function setHoverDelegateFactory(hoverDelegateProvider: ((placement: 'mouse' | 'element', enableInstantHover: boolean) => IScopedHoverDelegate)): void {\n\thoverDelegateFactory = hoverDelegateProvider;\n}\n\n// TODO: Refine type for use in new IHoverService interface\nexport function getDefaultHoverDelegate(placement: 'mouse' | 'element'): IHoverDelegate {\n\tif (placement === 'element') {\n\t\treturn defaultHoverDelegateElement.value;\n\t}\n\treturn defaultHoverDelegateMouse.value;\n}\n\n// TODO: Create equivalent in IHoverService\nexport function createInstantHoverDelegate(): IScopedHoverDelegate {\n\t// Creates a hover delegate with instant hover enabled.\n\t// This hover belongs to the consumer and requires the them to dispose it.\n\t// Instant hover only makes sense for 'element' placement.\n\treturn hoverDelegateFactory('element', true);\n}\n"],
  "mappings": ";;AAKA,SAAS,gBAAgB,4BAA4B;AACrD,SAAS,YAAY;AAErB,MAAM,2BAA2B,8BAAO;AAAA,EACvC,IAAI,QAAgB;AAAE,WAAO;AAAA,EAAI;AAAA,EACjC,SAAS,6BAAM;AAAA,EAAE,GAAR;AAAA,EACT,WAAW,6BAAM;AAAE,WAAO;AAAA,EAAW,GAA1B;AACZ,IAJiC;AAMjC,IAAI,uBAA8G;AAClH,MAAM,4BAA4B,IAAI,KAAqB,MAAM,qBAAqB,SAAS,KAAK,CAAC;AACrG,MAAM,8BAA8B,IAAI,KAAqB,MAAM,qBAAqB,WAAW,KAAK,CAAC;AAGlG,SAAS,wBAAwB,uBAAsH;AAC7J,yBAAuB;AACxB;AAFgB;AAKT,SAAS,wBAAwB,WAAgD;AACvF,MAAI,cAAc,WAAW;AAC5B,WAAO,4BAA4B;AAAA,EACpC;AACA,SAAO,0BAA0B;AAClC;AALgB;AAQT,SAAS,6BAAmD;AAIlE,SAAO,qBAAqB,WAAW,IAAI;AAC5C;AALgB;",
  "names": []
}
