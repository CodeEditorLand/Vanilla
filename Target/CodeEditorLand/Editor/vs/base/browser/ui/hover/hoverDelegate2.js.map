{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/browser/ui/hover/hoverDelegate2.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IHoverDelegate2 } from \"./hover.js\";\n\nlet baseHoverDelegate: IHoverDelegate2 = {\n\tshowHover: () => undefined,\n\thideHover: () => undefined,\n\tshowAndFocusLastHover: () => undefined,\n\tsetupManagedHover: () => null!,\n\tshowManagedHover: () => undefined,\n};\n\n/**\n * Sets the hover delegate for use **only in the `base/` layer**.\n */\nexport function setBaseLayerHoverDelegate(\n\thoverDelegate: IHoverDelegate2,\n): void {\n\tbaseHoverDelegate = hoverDelegate;\n}\n\n/**\n * Gets the hover delegate for use **only in the `base/` layer**.\n *\n * Since the hover service depends on various platform services, this delegate essentially bypasses\n * the standard dependency injection mechanism by injecting a global hover service at start up. The\n * only reason this should be used is if `IHoverService` is not available.\n */\nexport function getBaseLayerHoverDelegate(): IHoverDelegate2 {\n\treturn baseHoverDelegate;\n}\n"],
  "mappings": ";;AAOA,IAAI,oBAAqC;AAAA,EACxC,WAAW,6BAAM,QAAN;AAAA,EACX,WAAW,6BAAM,QAAN;AAAA,EACX,uBAAuB,6BAAM,QAAN;AAAA,EACvB,mBAAmB,6BAAM,MAAN;AAAA,EACnB,kBAAkB,6BAAM,QAAN;AACnB;AAKO,SAAS,0BACf,eACO;AACP,sBAAoB;AACrB;AAJgB;AAaT,SAAS,4BAA6C;AAC5D,SAAO;AACR;AAFgB;",
  "names": []
}
