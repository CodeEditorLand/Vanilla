{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/browser/ui/splitview/paneview.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Color, RGBA } from \"../../../common/color.js\";\nimport { Emitter, Event } from \"../../../common/event.js\";\nimport { KeyCode } from \"../../../common/keyCodes.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n} from \"../../../common/lifecycle.js\";\nimport type { ScrollEvent } from \"../../../common/scrollable.js\";\nimport { isFirefox } from \"../../browser.js\";\nimport { DataTransfers } from \"../../dnd.js\";\nimport {\n\t$,\n\tEventHelper,\n\tEventType,\n\taddDisposableListener,\n\tappend,\n\tclearNode,\n\tgetWindow,\n\tisHTMLElement,\n\ttrackFocus,\n} from \"../../dom.js\";\nimport { DomEmitter } from \"../../event.js\";\nimport { StandardKeyboardEvent } from \"../../keyboardEvent.js\";\nimport { Gesture, EventType as TouchEventType } from \"../../touch.js\";\nimport { type IBoundarySashes, Orientation } from \"../sash/sash.js\";\nimport \"./paneview.css\";\nimport { localize } from \"../../../../nls.js\";\nimport { type IView, Sizing, SplitView } from \"./splitview.js\";\n\nexport interface IPaneOptions {\n\tminimumBodySize?: number;\n\tmaximumBodySize?: number;\n\texpanded?: boolean;\n\torientation?: Orientation;\n\ttitle: string;\n\ttitleDescription?: string;\n}\n\nexport interface IPaneStyles {\n\treadonly dropBackground: string | undefined;\n\treadonly headerForeground: string | undefined;\n\treadonly headerBackground: string | undefined;\n\treadonly headerBorder: string | undefined;\n\treadonly leftBorder: string | undefined;\n}\n\n/**\n * A Pane is a structured SplitView view.\n *\n * WARNING: You must call `render()` after you construct it.\n * It can't be done automatically at the end of the ctor\n * because of the order of property initialization in TypeScript.\n * Subclasses wouldn't be able to set own properties\n * before the `render()` call, thus forbidding their use.\n */\nexport abstract class Pane extends Disposable implements IView {\n\tprivate static readonly HEADER_SIZE = 22;\n\n\treadonly element: HTMLElement;\n\tprivate header!: HTMLElement;\n\tprivate body!: HTMLElement;\n\n\tprotected _expanded: boolean;\n\tprotected _orientation: Orientation;\n\n\tprivate expandedSize: number | undefined = undefined;\n\tprivate _headerVisible = true;\n\tprivate _collapsible = true;\n\tprivate _bodyRendered = false;\n\tprivate _minimumBodySize: number;\n\tprivate _maximumBodySize: number;\n\tprivate _ariaHeaderLabel: string;\n\tprivate styles: IPaneStyles = {\n\t\tdropBackground: undefined,\n\t\theaderBackground: undefined,\n\t\theaderBorder: undefined,\n\t\theaderForeground: undefined,\n\t\tleftBorder: undefined,\n\t};\n\tprivate animationTimer: number | undefined = undefined;\n\n\tprivate readonly _onDidChange = this._register(\n\t\tnew Emitter<number | undefined>(),\n\t);\n\treadonly onDidChange: Event<number | undefined> = this._onDidChange.event;\n\n\tprivate readonly _onDidChangeExpansionState = this._register(\n\t\tnew Emitter<boolean>(),\n\t);\n\treadonly onDidChangeExpansionState: Event<boolean> =\n\t\tthis._onDidChangeExpansionState.event;\n\n\tget ariaHeaderLabel(): string {\n\t\treturn this._ariaHeaderLabel;\n\t}\n\n\tset ariaHeaderLabel(newLabel: string) {\n\t\tthis._ariaHeaderLabel = newLabel;\n\t\tthis.header.setAttribute(\"aria-label\", this.ariaHeaderLabel);\n\t}\n\n\tget draggableElement(): HTMLElement {\n\t\treturn this.header;\n\t}\n\n\tget dropTargetElement(): HTMLElement {\n\t\treturn this.element;\n\t}\n\n\tget dropBackground(): string | undefined {\n\t\treturn this.styles.dropBackground;\n\t}\n\n\tget minimumBodySize(): number {\n\t\treturn this._minimumBodySize;\n\t}\n\n\tset minimumBodySize(size: number) {\n\t\tthis._minimumBodySize = size;\n\t\tthis._onDidChange.fire(undefined);\n\t}\n\n\tget maximumBodySize(): number {\n\t\treturn this._maximumBodySize;\n\t}\n\n\tset maximumBodySize(size: number) {\n\t\tthis._maximumBodySize = size;\n\t\tthis._onDidChange.fire(undefined);\n\t}\n\n\tprivate get headerSize(): number {\n\t\treturn this.headerVisible ? Pane.HEADER_SIZE : 0;\n\t}\n\n\tget minimumSize(): number {\n\t\tconst headerSize = this.headerSize;\n\t\tconst expanded = !this.headerVisible || this.isExpanded();\n\t\tconst minimumBodySize = expanded ? this.minimumBodySize : 0;\n\n\t\treturn headerSize + minimumBodySize;\n\t}\n\n\tget maximumSize(): number {\n\t\tconst headerSize = this.headerSize;\n\t\tconst expanded = !this.headerVisible || this.isExpanded();\n\t\tconst maximumBodySize = expanded ? this.maximumBodySize : 0;\n\n\t\treturn headerSize + maximumBodySize;\n\t}\n\n\torthogonalSize = 0;\n\n\tconstructor(options: IPaneOptions) {\n\t\tsuper();\n\t\tthis._expanded =\n\t\t\ttypeof options.expanded === \"undefined\" ? true : !!options.expanded;\n\t\tthis._orientation =\n\t\t\ttypeof options.orientation === \"undefined\"\n\t\t\t\t? Orientation.VERTICAL\n\t\t\t\t: options.orientation;\n\t\tthis._ariaHeaderLabel = localize(\n\t\t\t\"viewSection\",\n\t\t\t\"{0} Section\",\n\t\t\toptions.title,\n\t\t);\n\t\tthis._minimumBodySize =\n\t\t\ttypeof options.minimumBodySize === \"number\"\n\t\t\t\t? options.minimumBodySize\n\t\t\t\t: this._orientation === Orientation.HORIZONTAL\n\t\t\t\t\t? 200\n\t\t\t\t\t: 120;\n\t\tthis._maximumBodySize =\n\t\t\ttypeof options.maximumBodySize === \"number\"\n\t\t\t\t? options.maximumBodySize\n\t\t\t\t: Number.POSITIVE_INFINITY;\n\n\t\tthis.element = $(\".pane\");\n\t}\n\n\tisExpanded(): boolean {\n\t\treturn this._expanded;\n\t}\n\n\tsetExpanded(expanded: boolean): boolean {\n\t\tif (!expanded && !this.collapsible) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this._expanded === !!expanded) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.element?.classList.toggle(\"expanded\", expanded);\n\n\t\tthis._expanded = !!expanded;\n\t\tthis.updateHeader();\n\n\t\tif (expanded) {\n\t\t\tif (!this._bodyRendered) {\n\t\t\t\tthis.renderBody(this.body);\n\t\t\t\tthis._bodyRendered = true;\n\t\t\t}\n\n\t\t\tif (typeof this.animationTimer === \"number\") {\n\t\t\t\tgetWindow(this.element).clearTimeout(this.animationTimer);\n\t\t\t}\n\t\t\tappend(this.element, this.body);\n\t\t} else {\n\t\t\tthis.animationTimer = getWindow(this.element).setTimeout(() => {\n\t\t\t\tthis.body.remove();\n\t\t\t}, 200);\n\t\t}\n\n\t\tthis._onDidChangeExpansionState.fire(expanded);\n\t\tthis._onDidChange.fire(expanded ? this.expandedSize : undefined);\n\t\treturn true;\n\t}\n\n\tget headerVisible(): boolean {\n\t\treturn this._headerVisible;\n\t}\n\n\tset headerVisible(visible: boolean) {\n\t\tif (this._headerVisible === !!visible) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._headerVisible = !!visible;\n\t\tthis.updateHeader();\n\t\tthis._onDidChange.fire(undefined);\n\t}\n\n\tget collapsible(): boolean {\n\t\treturn this._collapsible;\n\t}\n\n\tset collapsible(collapsible: boolean) {\n\t\tif (this._collapsible === !!collapsible) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._collapsible = !!collapsible;\n\t\tthis.updateHeader();\n\t}\n\n\tget orientation(): Orientation {\n\t\treturn this._orientation;\n\t}\n\n\tset orientation(orientation: Orientation) {\n\t\tif (this._orientation === orientation) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._orientation = orientation;\n\n\t\tif (this.element) {\n\t\t\tthis.element.classList.toggle(\n\t\t\t\t\"horizontal\",\n\t\t\t\tthis.orientation === Orientation.HORIZONTAL,\n\t\t\t);\n\t\t\tthis.element.classList.toggle(\n\t\t\t\t\"vertical\",\n\t\t\t\tthis.orientation === Orientation.VERTICAL,\n\t\t\t);\n\t\t}\n\n\t\tif (this.header) {\n\t\t\tthis.updateHeader();\n\t\t}\n\t}\n\n\trender(): void {\n\t\tthis.element.classList.toggle(\"expanded\", this.isExpanded());\n\t\tthis.element.classList.toggle(\n\t\t\t\"horizontal\",\n\t\t\tthis.orientation === Orientation.HORIZONTAL,\n\t\t);\n\t\tthis.element.classList.toggle(\n\t\t\t\"vertical\",\n\t\t\tthis.orientation === Orientation.VERTICAL,\n\t\t);\n\n\t\tthis.header = $(\".pane-header\");\n\t\tappend(this.element, this.header);\n\t\tthis.header.setAttribute(\"tabindex\", \"0\");\n\t\t// Use role button so the aria-expanded state gets read https://github.com/microsoft/vscode/issues/95996\n\t\tthis.header.setAttribute(\"role\", \"button\");\n\t\tthis.header.setAttribute(\"aria-label\", this.ariaHeaderLabel);\n\t\tthis.renderHeader(this.header);\n\n\t\tconst focusTracker = trackFocus(this.header);\n\t\tthis._register(focusTracker);\n\t\tthis._register(\n\t\t\tfocusTracker.onDidFocus(\n\t\t\t\t() => this.header.classList.add(\"focused\"),\n\t\t\t\tnull,\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\tfocusTracker.onDidBlur(\n\t\t\t\t() => this.header.classList.remove(\"focused\"),\n\t\t\t\tnull,\n\t\t\t),\n\t\t);\n\n\t\tthis.updateHeader();\n\n\t\tconst eventDisposables = this._register(new DisposableStore());\n\t\tconst onKeyDown = this._register(\n\t\t\tnew DomEmitter(this.header, \"keydown\"),\n\t\t);\n\t\tconst onHeaderKeyDown = Event.map(\n\t\t\tonKeyDown.event,\n\t\t\t(e) => new StandardKeyboardEvent(e),\n\t\t\teventDisposables,\n\t\t);\n\n\t\tthis._register(\n\t\t\tEvent.filter(\n\t\t\t\tonHeaderKeyDown,\n\t\t\t\t(e) =>\n\t\t\t\t\te.keyCode === KeyCode.Enter || e.keyCode === KeyCode.Space,\n\t\t\t\teventDisposables,\n\t\t\t)(() => this.setExpanded(!this.isExpanded()), null),\n\t\t);\n\n\t\tthis._register(\n\t\t\tEvent.filter(\n\t\t\t\tonHeaderKeyDown,\n\t\t\t\t(e) => e.keyCode === KeyCode.LeftArrow,\n\t\t\t\teventDisposables,\n\t\t\t)(() => this.setExpanded(false), null),\n\t\t);\n\n\t\tthis._register(\n\t\t\tEvent.filter(\n\t\t\t\tonHeaderKeyDown,\n\t\t\t\t(e) => e.keyCode === KeyCode.RightArrow,\n\t\t\t\teventDisposables,\n\t\t\t)(() => this.setExpanded(true), null),\n\t\t);\n\n\t\tthis._register(Gesture.addTarget(this.header));\n\n\t\t[EventType.CLICK, TouchEventType.Tap].forEach((eventType) => {\n\t\t\tthis._register(\n\t\t\t\taddDisposableListener(this.header, eventType, (e) => {\n\t\t\t\t\tif (!e.defaultPrevented) {\n\t\t\t\t\t\tthis.setExpanded(!this.isExpanded());\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t);\n\t\t});\n\n\t\tthis.body = append(this.element, $(\".pane-body\"));\n\n\t\t// Only render the body if it will be visible\n\t\t// Otherwise, render it when the pane is expanded\n\t\tif (!this._bodyRendered && this.isExpanded()) {\n\t\t\tthis.renderBody(this.body);\n\t\t\tthis._bodyRendered = true;\n\t\t}\n\n\t\tif (!this.isExpanded()) {\n\t\t\tthis.body.remove();\n\t\t}\n\t}\n\n\tlayout(size: number): void {\n\t\tconst headerSize = this.headerVisible ? Pane.HEADER_SIZE : 0;\n\n\t\tconst width =\n\t\t\tthis._orientation === Orientation.VERTICAL\n\t\t\t\t? this.orthogonalSize\n\t\t\t\t: size;\n\t\tconst height =\n\t\t\tthis._orientation === Orientation.VERTICAL\n\t\t\t\t? size - headerSize\n\t\t\t\t: this.orthogonalSize - headerSize;\n\n\t\tif (this.isExpanded()) {\n\t\t\tthis.body.classList.toggle(\"wide\", width >= 600);\n\t\t\tthis.layoutBody(height, width);\n\t\t\tthis.expandedSize = size;\n\t\t}\n\t}\n\n\tstyle(styles: IPaneStyles): void {\n\t\tthis.styles = styles;\n\n\t\tif (!this.header) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.updateHeader();\n\t}\n\n\tprotected updateHeader(): void {\n\t\tconst expanded = !this.headerVisible || this.isExpanded();\n\n\t\tif (this.collapsible) {\n\t\t\tthis.header.setAttribute(\"tabindex\", \"0\");\n\t\t\tthis.header.setAttribute(\"role\", \"button\");\n\t\t} else {\n\t\t\tthis.header.removeAttribute(\"tabindex\");\n\t\t\tthis.header.removeAttribute(\"role\");\n\t\t}\n\n\t\tthis.header.style.lineHeight = `${this.headerSize}px`;\n\t\tthis.header.classList.toggle(\"hidden\", !this.headerVisible);\n\t\tthis.header.classList.toggle(\"expanded\", expanded);\n\t\tthis.header.classList.toggle(\"not-collapsible\", !this.collapsible);\n\t\tthis.header.setAttribute(\"aria-expanded\", String(expanded));\n\n\t\tthis.header.style.color = this.collapsible\n\t\t\t? (this.styles.headerForeground ?? \"\")\n\t\t\t: \"\";\n\t\tthis.header.style.backgroundColor =\n\t\t\t(this.collapsible ? this.styles.headerBackground : \"transparent\") ??\n\t\t\t\"\";\n\t\tthis.header.style.borderTop =\n\t\t\tthis.styles.headerBorder &&\n\t\t\tthis.orientation === Orientation.VERTICAL\n\t\t\t\t? `1px solid ${this.styles.headerBorder}`\n\t\t\t\t: \"\";\n\t\tthis.element.style.borderLeft =\n\t\t\tthis.styles.leftBorder &&\n\t\t\tthis.orientation === Orientation.HORIZONTAL\n\t\t\t\t? `1px solid ${this.styles.leftBorder}`\n\t\t\t\t: \"\";\n\t}\n\n\tprotected abstract renderHeader(container: HTMLElement): void;\n\tprotected abstract renderBody(container: HTMLElement): void;\n\tprotected abstract layoutBody(height: number, width: number): void;\n}\n\ninterface IDndContext {\n\tdraggable: PaneDraggable | null;\n}\n\nclass PaneDraggable extends Disposable {\n\tprivate static readonly DefaultDragOverBackgroundColor = new Color(\n\t\tnew RGBA(128, 128, 128, 0.5),\n\t);\n\n\tprivate dragOverCounter = 0; // see https://github.com/microsoft/vscode/issues/14470\n\n\tprivate _onDidDrop = this._register(\n\t\tnew Emitter<{ from: Pane; to: Pane }>(),\n\t);\n\treadonly onDidDrop = this._onDidDrop.event;\n\n\tconstructor(\n\t\tprivate pane: Pane,\n\t\tprivate dnd: IPaneDndController,\n\t\tprivate context: IDndContext,\n\t) {\n\t\tsuper();\n\n\t\tpane.draggableElement.draggable = true;\n\t\tthis._register(\n\t\t\taddDisposableListener(pane.draggableElement, \"dragstart\", (e) =>\n\t\t\t\tthis.onDragStart(e),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\taddDisposableListener(pane.dropTargetElement, \"dragenter\", (e) =>\n\t\t\t\tthis.onDragEnter(e),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\taddDisposableListener(pane.dropTargetElement, \"dragleave\", (e) =>\n\t\t\t\tthis.onDragLeave(e),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\taddDisposableListener(pane.dropTargetElement, \"dragend\", (e) =>\n\t\t\t\tthis.onDragEnd(e),\n\t\t\t),\n\t\t);\n\t\tthis._register(\n\t\t\taddDisposableListener(pane.dropTargetElement, \"drop\", (e) =>\n\t\t\t\tthis.onDrop(e),\n\t\t\t),\n\t\t);\n\t}\n\n\tprivate onDragStart(e: DragEvent): void {\n\t\tif (!this.dnd.canDrag(this.pane) || !e.dataTransfer) {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\treturn;\n\t\t}\n\n\t\te.dataTransfer.effectAllowed = \"move\";\n\n\t\tif (isFirefox) {\n\t\t\t// Firefox: requires to set a text data transfer to get going\n\t\t\te.dataTransfer?.setData(\n\t\t\t\tDataTransfers.TEXT,\n\t\t\t\tthis.pane.draggableElement.textContent || \"\",\n\t\t\t);\n\t\t}\n\n\t\tconst dragImage = append(\n\t\t\tthis.pane.element.ownerDocument.body,\n\t\t\t$(\n\t\t\t\t\".monaco-drag-image\",\n\t\t\t\t{},\n\t\t\t\tthis.pane.draggableElement.textContent || \"\",\n\t\t\t),\n\t\t);\n\t\te.dataTransfer.setDragImage(dragImage, -10, -10);\n\t\tsetTimeout(() => dragImage.remove(), 0);\n\n\t\tthis.context.draggable = this;\n\t}\n\n\tprivate onDragEnter(e: DragEvent): void {\n\t\tif (!this.context.draggable || this.context.draggable === this) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.dnd.canDrop(this.context.draggable.pane, this.pane)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.dragOverCounter++;\n\t\tthis.render();\n\t}\n\n\tprivate onDragLeave(e: DragEvent): void {\n\t\tif (!this.context.draggable || this.context.draggable === this) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.dnd.canDrop(this.context.draggable.pane, this.pane)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.dragOverCounter--;\n\n\t\tif (this.dragOverCounter === 0) {\n\t\t\tthis.render();\n\t\t}\n\t}\n\n\tprivate onDragEnd(e: DragEvent): void {\n\t\tif (!this.context.draggable) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.dragOverCounter = 0;\n\t\tthis.render();\n\t\tthis.context.draggable = null;\n\t}\n\n\tprivate onDrop(e: DragEvent): void {\n\t\tif (!this.context.draggable) {\n\t\t\treturn;\n\t\t}\n\n\t\tEventHelper.stop(e);\n\n\t\tthis.dragOverCounter = 0;\n\t\tthis.render();\n\n\t\tif (\n\t\t\tthis.dnd.canDrop(this.context.draggable.pane, this.pane) &&\n\t\t\tthis.context.draggable !== this\n\t\t) {\n\t\t\tthis._onDidDrop.fire({\n\t\t\t\tfrom: this.context.draggable.pane,\n\t\t\t\tto: this.pane,\n\t\t\t});\n\t\t}\n\n\t\tthis.context.draggable = null;\n\t}\n\n\tprivate render(): void {\n\t\tlet backgroundColor: string | null = null;\n\n\t\tif (this.dragOverCounter > 0) {\n\t\t\tbackgroundColor =\n\t\t\t\tthis.pane.dropBackground ??\n\t\t\t\tPaneDraggable.DefaultDragOverBackgroundColor.toString();\n\t\t}\n\n\t\tthis.pane.dropTargetElement.style.backgroundColor =\n\t\t\tbackgroundColor || \"\";\n\t}\n}\n\nexport interface IPaneDndController {\n\tcanDrag(pane: Pane): boolean;\n\tcanDrop(pane: Pane, overPane: Pane): boolean;\n}\n\nexport class DefaultPaneDndController implements IPaneDndController {\n\tcanDrag(pane: Pane): boolean {\n\t\treturn true;\n\t}\n\n\tcanDrop(pane: Pane, overPane: Pane): boolean {\n\t\treturn true;\n\t}\n}\n\nexport interface IPaneViewOptions {\n\tdnd?: IPaneDndController;\n\torientation?: Orientation;\n}\n\ninterface IPaneItem {\n\tpane: Pane;\n\tdisposable: IDisposable;\n}\n\nexport class PaneView extends Disposable {\n\tprivate dnd: IPaneDndController | undefined;\n\tprivate dndContext: IDndContext = { draggable: null };\n\treadonly element: HTMLElement;\n\tprivate paneItems: IPaneItem[] = [];\n\tprivate orthogonalSize = 0;\n\tprivate size = 0;\n\tprivate splitview: SplitView;\n\tprivate animationTimer: number | undefined = undefined;\n\n\tprivate _onDidDrop = this._register(\n\t\tnew Emitter<{ from: Pane; to: Pane }>(),\n\t);\n\treadonly onDidDrop: Event<{ from: Pane; to: Pane }> = this._onDidDrop.event;\n\n\torientation: Orientation;\n\tprivate boundarySashes: IBoundarySashes | undefined;\n\treadonly onDidSashChange: Event<number>;\n\treadonly onDidSashReset: Event<number>;\n\treadonly onDidScroll: Event<ScrollEvent>;\n\n\tconstructor(container: HTMLElement, options: IPaneViewOptions = {}) {\n\t\tsuper();\n\n\t\tthis.dnd = options.dnd;\n\t\tthis.orientation = options.orientation ?? Orientation.VERTICAL;\n\t\tthis.element = append(container, $(\".monaco-pane-view\"));\n\t\tthis.splitview = this._register(\n\t\t\tnew SplitView(this.element, { orientation: this.orientation }),\n\t\t);\n\t\tthis.onDidSashReset = this.splitview.onDidSashReset;\n\t\tthis.onDidSashChange = this.splitview.onDidSashChange;\n\t\tthis.onDidScroll = this.splitview.onDidScroll;\n\n\t\tconst eventDisposables = this._register(new DisposableStore());\n\t\tconst onKeyDown = this._register(\n\t\t\tnew DomEmitter(this.element, \"keydown\"),\n\t\t);\n\t\tconst onHeaderKeyDown = Event.map(\n\t\t\tEvent.filter(\n\t\t\t\tonKeyDown.event,\n\t\t\t\t(e) =>\n\t\t\t\t\tisHTMLElement(e.target) &&\n\t\t\t\t\te.target.classList.contains(\"pane-header\"),\n\t\t\t\teventDisposables,\n\t\t\t),\n\t\t\t(e) => new StandardKeyboardEvent(e),\n\t\t\teventDisposables,\n\t\t);\n\n\t\tthis._register(\n\t\t\tEvent.filter(\n\t\t\t\tonHeaderKeyDown,\n\t\t\t\t(e) => e.keyCode === KeyCode.UpArrow,\n\t\t\t\teventDisposables,\n\t\t\t)(() => this.focusPrevious()),\n\t\t);\n\t\tthis._register(\n\t\t\tEvent.filter(\n\t\t\t\tonHeaderKeyDown,\n\t\t\t\t(e) => e.keyCode === KeyCode.DownArrow,\n\t\t\t\teventDisposables,\n\t\t\t)(() => this.focusNext()),\n\t\t);\n\t}\n\n\taddPane(pane: Pane, size: number, index = this.splitview.length): void {\n\t\tconst disposables = new DisposableStore();\n\t\tpane.onDidChangeExpansionState(this.setupAnimation, this, disposables);\n\n\t\tconst paneItem = { pane: pane, disposable: disposables };\n\t\tthis.paneItems.splice(index, 0, paneItem);\n\t\tpane.orientation = this.orientation;\n\t\tpane.orthogonalSize = this.orthogonalSize;\n\t\tthis.splitview.addView(pane, size, index);\n\n\t\tif (this.dnd) {\n\t\t\tconst draggable = new PaneDraggable(\n\t\t\t\tpane,\n\t\t\t\tthis.dnd,\n\t\t\t\tthis.dndContext,\n\t\t\t);\n\t\t\tdisposables.add(draggable);\n\t\t\tdisposables.add(\n\t\t\t\tdraggable.onDidDrop(this._onDidDrop.fire, this._onDidDrop),\n\t\t\t);\n\t\t}\n\t}\n\n\tremovePane(pane: Pane): void {\n\t\tconst index = this.paneItems.findIndex((item) => item.pane === pane);\n\n\t\tif (index === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.splitview.removeView(\n\t\t\tindex,\n\t\t\tpane.isExpanded() ? Sizing.Distribute : undefined,\n\t\t);\n\t\tconst paneItem = this.paneItems.splice(index, 1)[0];\n\t\tpaneItem.disposable.dispose();\n\t}\n\n\tmovePane(from: Pane, to: Pane): void {\n\t\tconst fromIndex = this.paneItems.findIndex(\n\t\t\t(item) => item.pane === from,\n\t\t);\n\t\tconst toIndex = this.paneItems.findIndex((item) => item.pane === to);\n\n\t\tif (fromIndex === -1 || toIndex === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst [paneItem] = this.paneItems.splice(fromIndex, 1);\n\t\tthis.paneItems.splice(toIndex, 0, paneItem);\n\n\t\tthis.splitview.moveView(fromIndex, toIndex);\n\t}\n\n\tresizePane(pane: Pane, size: number): void {\n\t\tconst index = this.paneItems.findIndex((item) => item.pane === pane);\n\n\t\tif (index === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.splitview.resizeView(index, size);\n\t}\n\n\tgetPaneSize(pane: Pane): number {\n\t\tconst index = this.paneItems.findIndex((item) => item.pane === pane);\n\n\t\tif (index === -1) {\n\t\t\treturn -1;\n\t\t}\n\n\t\treturn this.splitview.getViewSize(index);\n\t}\n\n\tlayout(height: number, width: number): void {\n\t\tthis.orthogonalSize =\n\t\t\tthis.orientation === Orientation.VERTICAL ? width : height;\n\t\tthis.size =\n\t\t\tthis.orientation === Orientation.HORIZONTAL ? width : height;\n\n\t\tfor (const paneItem of this.paneItems) {\n\t\t\tpaneItem.pane.orthogonalSize = this.orthogonalSize;\n\t\t}\n\n\t\tthis.splitview.layout(this.size);\n\t}\n\n\tsetBoundarySashes(sashes: IBoundarySashes) {\n\t\tthis.boundarySashes = sashes;\n\t\tthis.updateSplitviewOrthogonalSashes(sashes);\n\t}\n\n\tprivate updateSplitviewOrthogonalSashes(\n\t\tsashes: IBoundarySashes | undefined,\n\t) {\n\t\tif (this.orientation === Orientation.VERTICAL) {\n\t\t\tthis.splitview.orthogonalStartSash = sashes?.left;\n\t\t\tthis.splitview.orthogonalEndSash = sashes?.right;\n\t\t} else {\n\t\t\tthis.splitview.orthogonalEndSash = sashes?.bottom;\n\t\t}\n\t}\n\n\tflipOrientation(height: number, width: number): void {\n\t\tthis.orientation =\n\t\t\tthis.orientation === Orientation.VERTICAL\n\t\t\t\t? Orientation.HORIZONTAL\n\t\t\t\t: Orientation.VERTICAL;\n\t\tconst paneSizes = this.paneItems.map((pane) =>\n\t\t\tthis.getPaneSize(pane.pane),\n\t\t);\n\n\t\tthis.splitview.dispose();\n\t\tclearNode(this.element);\n\n\t\tthis.splitview = this._register(\n\t\t\tnew SplitView(this.element, { orientation: this.orientation }),\n\t\t);\n\t\tthis.updateSplitviewOrthogonalSashes(this.boundarySashes);\n\n\t\tconst newOrthogonalSize =\n\t\t\tthis.orientation === Orientation.VERTICAL ? width : height;\n\t\tconst newSize =\n\t\t\tthis.orientation === Orientation.HORIZONTAL ? width : height;\n\n\t\tthis.paneItems.forEach((pane, index) => {\n\t\t\tpane.pane.orthogonalSize = newOrthogonalSize;\n\t\t\tpane.pane.orientation = this.orientation;\n\n\t\t\tconst viewSize =\n\t\t\t\tthis.size === 0 ? 0 : (newSize * paneSizes[index]) / this.size;\n\t\t\tthis.splitview.addView(pane.pane, viewSize, index);\n\t\t});\n\n\t\tthis.size = newSize;\n\t\tthis.orthogonalSize = newOrthogonalSize;\n\n\t\tthis.splitview.layout(this.size);\n\t}\n\n\tprivate setupAnimation(): void {\n\t\tif (typeof this.animationTimer === \"number\") {\n\t\t\tgetWindow(this.element).clearTimeout(this.animationTimer);\n\t\t}\n\n\t\tthis.element.classList.add(\"animated\");\n\n\t\tthis.animationTimer = getWindow(this.element).setTimeout(() => {\n\t\t\tthis.animationTimer = undefined;\n\t\t\tthis.element.classList.remove(\"animated\");\n\t\t}, 200);\n\t}\n\n\tprivate getPaneHeaderElements(): HTMLElement[] {\n\t\treturn [\n\t\t\t...this.element.querySelectorAll(\".pane-header\"),\n\t\t] as HTMLElement[];\n\t}\n\n\tprivate focusPrevious(): void {\n\t\tconst headers = this.getPaneHeaderElements();\n\t\tconst index = headers.indexOf(\n\t\t\tthis.element.ownerDocument.activeElement as HTMLElement,\n\t\t);\n\n\t\tif (index === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\theaders[Math.max(index - 1, 0)].focus();\n\t}\n\n\tprivate focusNext(): void {\n\t\tconst headers = this.getPaneHeaderElements();\n\t\tconst index = headers.indexOf(\n\t\t\tthis.element.ownerDocument.activeElement as HTMLElement,\n\t\t);\n\n\t\tif (index === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\theaders[Math.min(index + 1, headers.length - 1)].focus();\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.paneItems.forEach((i) => i.disposable.dispose());\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,OAAO,YAAY;AAC5B,SAAS,SAAS,aAAa;AAC/B,SAAS,eAAe;AACxB;AAAA,EACC;AAAA,EACA;AAAA,OAEM;AAEP,SAAS,iBAAiB;AAC1B,SAAS,qBAAqB;AAC9B;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,SAAS,kBAAkB;AAC3B,SAAS,6BAA6B;AACtC,SAAS,SAAS,aAAa,sBAAsB;AACrD,SAA+B,mBAAmB;AAClD,OAAO;AACP,SAAS,gBAAgB;AACzB,SAAqB,QAAQ,iBAAiB;AA4BvC,MAAe,aAAa,WAA4B;AAAA,EA7D/D,OA6D+D;AAAA;AAAA;AAAA,EAC9D,OAAwB,cAAc;AAAA,EAE7B;AAAA,EACD;AAAA,EACA;AAAA,EAEE;AAAA,EACA;AAAA,EAEF,eAAmC;AAAA,EACnC,iBAAiB;AAAA,EACjB,eAAe;AAAA,EACf,gBAAgB;AAAA,EAChB;AAAA,EACA;AAAA,EACA;AAAA,EACA,SAAsB;AAAA,IAC7B,gBAAgB;AAAA,IAChB,kBAAkB;AAAA,IAClB,cAAc;AAAA,IACd,kBAAkB;AAAA,IAClB,YAAY;AAAA,EACb;AAAA,EACQ,iBAAqC;AAAA,EAE5B,eAAe,KAAK;AAAA,IACpC,IAAI,QAA4B;AAAA,EACjC;AAAA,EACS,cAAyC,KAAK,aAAa;AAAA,EAEnD,6BAA6B,KAAK;AAAA,IAClD,IAAI,QAAiB;AAAA,EACtB;AAAA,EACS,4BACR,KAAK,2BAA2B;AAAA,EAEjC,IAAI,kBAA0B;AAC7B,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,IAAI,gBAAgB,UAAkB;AACrC,SAAK,mBAAmB;AACxB,SAAK,OAAO,aAAa,cAAc,KAAK,eAAe;AAAA,EAC5D;AAAA,EAEA,IAAI,mBAAgC;AACnC,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,IAAI,oBAAiC;AACpC,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,IAAI,iBAAqC;AACxC,WAAO,KAAK,OAAO;AAAA,EACpB;AAAA,EAEA,IAAI,kBAA0B;AAC7B,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,IAAI,gBAAgB,MAAc;AACjC,SAAK,mBAAmB;AACxB,SAAK,aAAa,KAAK,MAAS;AAAA,EACjC;AAAA,EAEA,IAAI,kBAA0B;AAC7B,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,IAAI,gBAAgB,MAAc;AACjC,SAAK,mBAAmB;AACxB,SAAK,aAAa,KAAK,MAAS;AAAA,EACjC;AAAA,EAEA,IAAY,aAAqB;AAChC,WAAO,KAAK,gBAAgB,KAAK,cAAc;AAAA,EAChD;AAAA,EAEA,IAAI,cAAsB;AACzB,UAAM,aAAa,KAAK;AACxB,UAAM,WAAW,CAAC,KAAK,iBAAiB,KAAK,WAAW;AACxD,UAAM,kBAAkB,WAAW,KAAK,kBAAkB;AAE1D,WAAO,aAAa;AAAA,EACrB;AAAA,EAEA,IAAI,cAAsB;AACzB,UAAM,aAAa,KAAK;AACxB,UAAM,WAAW,CAAC,KAAK,iBAAiB,KAAK,WAAW;AACxD,UAAM,kBAAkB,WAAW,KAAK,kBAAkB;AAE1D,WAAO,aAAa;AAAA,EACrB;AAAA,EAEA,iBAAiB;AAAA,EAEjB,YAAY,SAAuB;AAClC,UAAM;AACN,SAAK,YACJ,OAAO,QAAQ,aAAa,cAAc,OAAO,CAAC,CAAC,QAAQ;AAC5D,SAAK,eACJ,OAAO,QAAQ,gBAAgB,cAC5B,YAAY,WACZ,QAAQ;AACZ,SAAK,mBAAmB;AAAA,MACvB;AAAA,MACA;AAAA,MACA,QAAQ;AAAA,IACT;AACA,SAAK,mBACJ,OAAO,QAAQ,oBAAoB,WAChC,QAAQ,kBACR,KAAK,iBAAiB,YAAY,aACjC,MACA;AACL,SAAK,mBACJ,OAAO,QAAQ,oBAAoB,WAChC,QAAQ,kBACR,OAAO;AAEX,SAAK,UAAU,EAAE,OAAO;AAAA,EACzB;AAAA,EAEA,aAAsB;AACrB,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,YAAY,UAA4B;AACvC,QAAI,CAAC,YAAY,CAAC,KAAK,aAAa;AACnC,aAAO;AAAA,IACR;AAEA,QAAI,KAAK,cAAc,CAAC,CAAC,UAAU;AAClC,aAAO;AAAA,IACR;AAEA,SAAK,SAAS,UAAU,OAAO,YAAY,QAAQ;AAEnD,SAAK,YAAY,CAAC,CAAC;AACnB,SAAK,aAAa;AAElB,QAAI,UAAU;AACb,UAAI,CAAC,KAAK,eAAe;AACxB,aAAK,WAAW,KAAK,IAAI;AACzB,aAAK,gBAAgB;AAAA,MACtB;AAEA,UAAI,OAAO,KAAK,mBAAmB,UAAU;AAC5C,kBAAU,KAAK,OAAO,EAAE,aAAa,KAAK,cAAc;AAAA,MACzD;AACA,aAAO,KAAK,SAAS,KAAK,IAAI;AAAA,IAC/B,OAAO;AACN,WAAK,iBAAiB,UAAU,KAAK,OAAO,EAAE,WAAW,MAAM;AAC9D,aAAK,KAAK,OAAO;AAAA,MAClB,GAAG,GAAG;AAAA,IACP;AAEA,SAAK,2BAA2B,KAAK,QAAQ;AAC7C,SAAK,aAAa,KAAK,WAAW,KAAK,eAAe,MAAS;AAC/D,WAAO;AAAA,EACR;AAAA,EAEA,IAAI,gBAAyB;AAC5B,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,IAAI,cAAc,SAAkB;AACnC,QAAI,KAAK,mBAAmB,CAAC,CAAC,SAAS;AACtC;AAAA,IACD;AAEA,SAAK,iBAAiB,CAAC,CAAC;AACxB,SAAK,aAAa;AAClB,SAAK,aAAa,KAAK,MAAS;AAAA,EACjC;AAAA,EAEA,IAAI,cAAuB;AAC1B,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,IAAI,YAAY,aAAsB;AACrC,QAAI,KAAK,iBAAiB,CAAC,CAAC,aAAa;AACxC;AAAA,IACD;AAEA,SAAK,eAAe,CAAC,CAAC;AACtB,SAAK,aAAa;AAAA,EACnB;AAAA,EAEA,IAAI,cAA2B;AAC9B,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,IAAI,YAAY,aAA0B;AACzC,QAAI,KAAK,iBAAiB,aAAa;AACtC;AAAA,IACD;AAEA,SAAK,eAAe;AAEpB,QAAI,KAAK,SAAS;AACjB,WAAK,QAAQ,UAAU;AAAA,QACtB;AAAA,QACA,KAAK,gBAAgB,YAAY;AAAA,MAClC;AACA,WAAK,QAAQ,UAAU;AAAA,QACtB;AAAA,QACA,KAAK,gBAAgB,YAAY;AAAA,MAClC;AAAA,IACD;AAEA,QAAI,KAAK,QAAQ;AAChB,WAAK,aAAa;AAAA,IACnB;AAAA,EACD;AAAA,EAEA,SAAe;AACd,SAAK,QAAQ,UAAU,OAAO,YAAY,KAAK,WAAW,CAAC;AAC3D,SAAK,QAAQ,UAAU;AAAA,MACtB;AAAA,MACA,KAAK,gBAAgB,YAAY;AAAA,IAClC;AACA,SAAK,QAAQ,UAAU;AAAA,MACtB;AAAA,MACA,KAAK,gBAAgB,YAAY;AAAA,IAClC;AAEA,SAAK,SAAS,EAAE,cAAc;AAC9B,WAAO,KAAK,SAAS,KAAK,MAAM;AAChC,SAAK,OAAO,aAAa,YAAY,GAAG;AAExC,SAAK,OAAO,aAAa,QAAQ,QAAQ;AACzC,SAAK,OAAO,aAAa,cAAc,KAAK,eAAe;AAC3D,SAAK,aAAa,KAAK,MAAM;AAE7B,UAAM,eAAe,WAAW,KAAK,MAAM;AAC3C,SAAK,UAAU,YAAY;AAC3B,SAAK;AAAA,MACJ,aAAa;AAAA,QACZ,MAAM,KAAK,OAAO,UAAU,IAAI,SAAS;AAAA,QACzC;AAAA,MACD;AAAA,IACD;AACA,SAAK;AAAA,MACJ,aAAa;AAAA,QACZ,MAAM,KAAK,OAAO,UAAU,OAAO,SAAS;AAAA,QAC5C;AAAA,MACD;AAAA,IACD;AAEA,SAAK,aAAa;AAElB,UAAM,mBAAmB,KAAK,UAAU,IAAI,gBAAgB,CAAC;AAC7D,UAAM,YAAY,KAAK;AAAA,MACtB,IAAI,WAAW,KAAK,QAAQ,SAAS;AAAA,IACtC;AACA,UAAM,kBAAkB,MAAM;AAAA,MAC7B,UAAU;AAAA,MACV,CAAC,MAAM,IAAI,sBAAsB,CAAC;AAAA,MAClC;AAAA,IACD;AAEA,SAAK;AAAA,MACJ,MAAM;AAAA,QACL;AAAA,QACA,CAAC,MACA,EAAE,YAAY,QAAQ,SAAS,EAAE,YAAY,QAAQ;AAAA,QACtD;AAAA,MACD,EAAE,MAAM,KAAK,YAAY,CAAC,KAAK,WAAW,CAAC,GAAG,IAAI;AAAA,IACnD;AAEA,SAAK;AAAA,MACJ,MAAM;AAAA,QACL;AAAA,QACA,CAAC,MAAM,EAAE,YAAY,QAAQ;AAAA,QAC7B;AAAA,MACD,EAAE,MAAM,KAAK,YAAY,KAAK,GAAG,IAAI;AAAA,IACtC;AAEA,SAAK;AAAA,MACJ,MAAM;AAAA,QACL;AAAA,QACA,CAAC,MAAM,EAAE,YAAY,QAAQ;AAAA,QAC7B;AAAA,MACD,EAAE,MAAM,KAAK,YAAY,IAAI,GAAG,IAAI;AAAA,IACrC;AAEA,SAAK,UAAU,QAAQ,UAAU,KAAK,MAAM,CAAC;AAE7C,KAAC,UAAU,OAAO,eAAe,GAAG,EAAE,QAAQ,CAAC,cAAc;AAC5D,WAAK;AAAA,QACJ,sBAAsB,KAAK,QAAQ,WAAW,CAAC,MAAM;AACpD,cAAI,CAAC,EAAE,kBAAkB;AACxB,iBAAK,YAAY,CAAC,KAAK,WAAW,CAAC;AAAA,UACpC;AAAA,QACD,CAAC;AAAA,MACF;AAAA,IACD,CAAC;AAED,SAAK,OAAO,OAAO,KAAK,SAAS,EAAE,YAAY,CAAC;AAIhD,QAAI,CAAC,KAAK,iBAAiB,KAAK,WAAW,GAAG;AAC7C,WAAK,WAAW,KAAK,IAAI;AACzB,WAAK,gBAAgB;AAAA,IACtB;AAEA,QAAI,CAAC,KAAK,WAAW,GAAG;AACvB,WAAK,KAAK,OAAO;AAAA,IAClB;AAAA,EACD;AAAA,EAEA,OAAO,MAAoB;AAC1B,UAAM,aAAa,KAAK,gBAAgB,KAAK,cAAc;AAE3D,UAAM,QACL,KAAK,iBAAiB,YAAY,WAC/B,KAAK,iBACL;AACJ,UAAM,SACL,KAAK,iBAAiB,YAAY,WAC/B,OAAO,aACP,KAAK,iBAAiB;AAE1B,QAAI,KAAK,WAAW,GAAG;AACtB,WAAK,KAAK,UAAU,OAAO,QAAQ,SAAS,GAAG;AAC/C,WAAK,WAAW,QAAQ,KAAK;AAC7B,WAAK,eAAe;AAAA,IACrB;AAAA,EACD;AAAA,EAEA,MAAM,QAA2B;AAChC,SAAK,SAAS;AAEd,QAAI,CAAC,KAAK,QAAQ;AACjB;AAAA,IACD;AAEA,SAAK,aAAa;AAAA,EACnB;AAAA,EAEU,eAAqB;AAC9B,UAAM,WAAW,CAAC,KAAK,iBAAiB,KAAK,WAAW;AAExD,QAAI,KAAK,aAAa;AACrB,WAAK,OAAO,aAAa,YAAY,GAAG;AACxC,WAAK,OAAO,aAAa,QAAQ,QAAQ;AAAA,IAC1C,OAAO;AACN,WAAK,OAAO,gBAAgB,UAAU;AACtC,WAAK,OAAO,gBAAgB,MAAM;AAAA,IACnC;AAEA,SAAK,OAAO,MAAM,aAAa,GAAG,KAAK,UAAU;AACjD,SAAK,OAAO,UAAU,OAAO,UAAU,CAAC,KAAK,aAAa;AAC1D,SAAK,OAAO,UAAU,OAAO,YAAY,QAAQ;AACjD,SAAK,OAAO,UAAU,OAAO,mBAAmB,CAAC,KAAK,WAAW;AACjE,SAAK,OAAO,aAAa,iBAAiB,OAAO,QAAQ,CAAC;AAE1D,SAAK,OAAO,MAAM,QAAQ,KAAK,cAC3B,KAAK,OAAO,oBAAoB,KACjC;AACH,SAAK,OAAO,MAAM,mBAChB,KAAK,cAAc,KAAK,OAAO,mBAAmB,kBACnD;AACD,SAAK,OAAO,MAAM,YACjB,KAAK,OAAO,gBACZ,KAAK,gBAAgB,YAAY,WAC9B,aAAa,KAAK,OAAO,YAAY,KACrC;AACJ,SAAK,QAAQ,MAAM,aAClB,KAAK,OAAO,cACZ,KAAK,gBAAgB,YAAY,aAC9B,aAAa,KAAK,OAAO,UAAU,KACnC;AAAA,EACL;AAKD;AAMA,MAAM,sBAAsB,WAAW;AAAA,EAYtC,YACS,MACA,KACA,SACP;AACD,UAAM;AAJE;AACA;AACA;AAIR,SAAK,iBAAiB,YAAY;AAClC,SAAK;AAAA,MACJ;AAAA,QAAsB,KAAK;AAAA,QAAkB;AAAA,QAAa,CAAC,MAC1D,KAAK,YAAY,CAAC;AAAA,MACnB;AAAA,IACD;AACA,SAAK;AAAA,MACJ;AAAA,QAAsB,KAAK;AAAA,QAAmB;AAAA,QAAa,CAAC,MAC3D,KAAK,YAAY,CAAC;AAAA,MACnB;AAAA,IACD;AACA,SAAK;AAAA,MACJ;AAAA,QAAsB,KAAK;AAAA,QAAmB;AAAA,QAAa,CAAC,MAC3D,KAAK,YAAY,CAAC;AAAA,MACnB;AAAA,IACD;AACA,SAAK;AAAA,MACJ;AAAA,QAAsB,KAAK;AAAA,QAAmB;AAAA,QAAW,CAAC,MACzD,KAAK,UAAU,CAAC;AAAA,MACjB;AAAA,IACD;AACA,SAAK;AAAA,MACJ;AAAA,QAAsB,KAAK;AAAA,QAAmB;AAAA,QAAQ,CAAC,MACtD,KAAK,OAAO,CAAC;AAAA,MACd;AAAA,IACD;AAAA,EACD;AAAA,EA9eD,OAicuC;AAAA;AAAA;AAAA,EACtC,OAAwB,iCAAiC,IAAI;AAAA,IAC5D,IAAI,KAAK,KAAK,KAAK,KAAK,GAAG;AAAA,EAC5B;AAAA,EAEQ,kBAAkB;AAAA;AAAA,EAElB,aAAa,KAAK;AAAA,IACzB,IAAI,QAAkC;AAAA,EACvC;AAAA,EACS,YAAY,KAAK,WAAW;AAAA,EAqC7B,YAAY,GAAoB;AACvC,QAAI,CAAC,KAAK,IAAI,QAAQ,KAAK,IAAI,KAAK,CAAC,EAAE,cAAc;AACpD,QAAE,eAAe;AACjB,QAAE,gBAAgB;AAClB;AAAA,IACD;AAEA,MAAE,aAAa,gBAAgB;AAE/B,QAAI,WAAW;AAEd,QAAE,cAAc;AAAA,QACf,cAAc;AAAA,QACd,KAAK,KAAK,iBAAiB,eAAe;AAAA,MAC3C;AAAA,IACD;AAEA,UAAM,YAAY;AAAA,MACjB,KAAK,KAAK,QAAQ,cAAc;AAAA,MAChC;AAAA,QACC;AAAA,QACA,CAAC;AAAA,QACD,KAAK,KAAK,iBAAiB,eAAe;AAAA,MAC3C;AAAA,IACD;AACA,MAAE,aAAa,aAAa,WAAW,KAAK,GAAG;AAC/C,eAAW,MAAM,UAAU,OAAO,GAAG,CAAC;AAEtC,SAAK,QAAQ,YAAY;AAAA,EAC1B;AAAA,EAEQ,YAAY,GAAoB;AACvC,QAAI,CAAC,KAAK,QAAQ,aAAa,KAAK,QAAQ,cAAc,MAAM;AAC/D;AAAA,IACD;AAEA,QAAI,CAAC,KAAK,IAAI,QAAQ,KAAK,QAAQ,UAAU,MAAM,KAAK,IAAI,GAAG;AAC9D;AAAA,IACD;AAEA,SAAK;AACL,SAAK,OAAO;AAAA,EACb;AAAA,EAEQ,YAAY,GAAoB;AACvC,QAAI,CAAC,KAAK,QAAQ,aAAa,KAAK,QAAQ,cAAc,MAAM;AAC/D;AAAA,IACD;AAEA,QAAI,CAAC,KAAK,IAAI,QAAQ,KAAK,QAAQ,UAAU,MAAM,KAAK,IAAI,GAAG;AAC9D;AAAA,IACD;AAEA,SAAK;AAEL,QAAI,KAAK,oBAAoB,GAAG;AAC/B,WAAK,OAAO;AAAA,IACb;AAAA,EACD;AAAA,EAEQ,UAAU,GAAoB;AACrC,QAAI,CAAC,KAAK,QAAQ,WAAW;AAC5B;AAAA,IACD;AAEA,SAAK,kBAAkB;AACvB,SAAK,OAAO;AACZ,SAAK,QAAQ,YAAY;AAAA,EAC1B;AAAA,EAEQ,OAAO,GAAoB;AAClC,QAAI,CAAC,KAAK,QAAQ,WAAW;AAC5B;AAAA,IACD;AAEA,gBAAY,KAAK,CAAC;AAElB,SAAK,kBAAkB;AACvB,SAAK,OAAO;AAEZ,QACC,KAAK,IAAI,QAAQ,KAAK,QAAQ,UAAU,MAAM,KAAK,IAAI,KACvD,KAAK,QAAQ,cAAc,MAC1B;AACD,WAAK,WAAW,KAAK;AAAA,QACpB,MAAM,KAAK,QAAQ,UAAU;AAAA,QAC7B,IAAI,KAAK;AAAA,MACV,CAAC;AAAA,IACF;AAEA,SAAK,QAAQ,YAAY;AAAA,EAC1B;AAAA,EAEQ,SAAe;AACtB,QAAI,kBAAiC;AAErC,QAAI,KAAK,kBAAkB,GAAG;AAC7B,wBACC,KAAK,KAAK,kBACV,cAAc,+BAA+B,SAAS;AAAA,IACxD;AAEA,SAAK,KAAK,kBAAkB,MAAM,kBACjC,mBAAmB;AAAA,EACrB;AACD;AAOO,MAAM,yBAAuD;AAAA,EAhmBpE,OAgmBoE;AAAA;AAAA;AAAA,EACnE,QAAQ,MAAqB;AAC5B,WAAO;AAAA,EACR;AAAA,EAEA,QAAQ,MAAY,UAAyB;AAC5C,WAAO;AAAA,EACR;AACD;AAYO,MAAM,iBAAiB,WAAW;AAAA,EApnBzC,OAonByC;AAAA;AAAA;AAAA,EAChC;AAAA,EACA,aAA0B,EAAE,WAAW,KAAK;AAAA,EAC3C;AAAA,EACD,YAAyB,CAAC;AAAA,EAC1B,iBAAiB;AAAA,EACjB,OAAO;AAAA,EACP;AAAA,EACA,iBAAqC;AAAA,EAErC,aAAa,KAAK;AAAA,IACzB,IAAI,QAAkC;AAAA,EACvC;AAAA,EACS,YAA6C,KAAK,WAAW;AAAA,EAEtE;AAAA,EACQ;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EAET,YAAY,WAAwB,UAA4B,CAAC,GAAG;AACnE,UAAM;AAEN,SAAK,MAAM,QAAQ;AACnB,SAAK,cAAc,QAAQ,eAAe,YAAY;AACtD,SAAK,UAAU,OAAO,WAAW,EAAE,mBAAmB,CAAC;AACvD,SAAK,YAAY,KAAK;AAAA,MACrB,IAAI,UAAU,KAAK,SAAS,EAAE,aAAa,KAAK,YAAY,CAAC;AAAA,IAC9D;AACA,SAAK,iBAAiB,KAAK,UAAU;AACrC,SAAK,kBAAkB,KAAK,UAAU;AACtC,SAAK,cAAc,KAAK,UAAU;AAElC,UAAM,mBAAmB,KAAK,UAAU,IAAI,gBAAgB,CAAC;AAC7D,UAAM,YAAY,KAAK;AAAA,MACtB,IAAI,WAAW,KAAK,SAAS,SAAS;AAAA,IACvC;AACA,UAAM,kBAAkB,MAAM;AAAA,MAC7B,MAAM;AAAA,QACL,UAAU;AAAA,QACV,CAAC,MACA,cAAc,EAAE,MAAM,KACtB,EAAE,OAAO,UAAU,SAAS,aAAa;AAAA,QAC1C;AAAA,MACD;AAAA,MACA,CAAC,MAAM,IAAI,sBAAsB,CAAC;AAAA,MAClC;AAAA,IACD;AAEA,SAAK;AAAA,MACJ,MAAM;AAAA,QACL;AAAA,QACA,CAAC,MAAM,EAAE,YAAY,QAAQ;AAAA,QAC7B;AAAA,MACD,EAAE,MAAM,KAAK,cAAc,CAAC;AAAA,IAC7B;AACA,SAAK;AAAA,MACJ,MAAM;AAAA,QACL;AAAA,QACA,CAAC,MAAM,EAAE,YAAY,QAAQ;AAAA,QAC7B;AAAA,MACD,EAAE,MAAM,KAAK,UAAU,CAAC;AAAA,IACzB;AAAA,EACD;AAAA,EAEA,QAAQ,MAAY,MAAc,QAAQ,KAAK,UAAU,QAAc;AACtE,UAAM,cAAc,IAAI,gBAAgB;AACxC,SAAK,0BAA0B,KAAK,gBAAgB,MAAM,WAAW;AAErE,UAAM,WAAW,EAAE,MAAY,YAAY,YAAY;AACvD,SAAK,UAAU,OAAO,OAAO,GAAG,QAAQ;AACxC,SAAK,cAAc,KAAK;AACxB,SAAK,iBAAiB,KAAK;AAC3B,SAAK,UAAU,QAAQ,MAAM,MAAM,KAAK;AAExC,QAAI,KAAK,KAAK;AACb,YAAM,YAAY,IAAI;AAAA,QACrB;AAAA,QACA,KAAK;AAAA,QACL,KAAK;AAAA,MACN;AACA,kBAAY,IAAI,SAAS;AACzB,kBAAY;AAAA,QACX,UAAU,UAAU,KAAK,WAAW,MAAM,KAAK,UAAU;AAAA,MAC1D;AAAA,IACD;AAAA,EACD;AAAA,EAEA,WAAW,MAAkB;AAC5B,UAAM,QAAQ,KAAK,UAAU,UAAU,CAAC,SAAS,KAAK,SAAS,IAAI;AAEnE,QAAI,UAAU,IAAI;AACjB;AAAA,IACD;AAEA,SAAK,UAAU;AAAA,MACd;AAAA,MACA,KAAK,WAAW,IAAI,OAAO,aAAa;AAAA,IACzC;AACA,UAAM,WAAW,KAAK,UAAU,OAAO,OAAO,CAAC,EAAE,CAAC;AAClD,aAAS,WAAW,QAAQ;AAAA,EAC7B;AAAA,EAEA,SAAS,MAAY,IAAgB;AACpC,UAAM,YAAY,KAAK,UAAU;AAAA,MAChC,CAAC,SAAS,KAAK,SAAS;AAAA,IACzB;AACA,UAAM,UAAU,KAAK,UAAU,UAAU,CAAC,SAAS,KAAK,SAAS,EAAE;AAEnE,QAAI,cAAc,MAAM,YAAY,IAAI;AACvC;AAAA,IACD;AAEA,UAAM,CAAC,QAAQ,IAAI,KAAK,UAAU,OAAO,WAAW,CAAC;AACrD,SAAK,UAAU,OAAO,SAAS,GAAG,QAAQ;AAE1C,SAAK,UAAU,SAAS,WAAW,OAAO;AAAA,EAC3C;AAAA,EAEA,WAAW,MAAY,MAAoB;AAC1C,UAAM,QAAQ,KAAK,UAAU,UAAU,CAAC,SAAS,KAAK,SAAS,IAAI;AAEnE,QAAI,UAAU,IAAI;AACjB;AAAA,IACD;AAEA,SAAK,UAAU,WAAW,OAAO,IAAI;AAAA,EACtC;AAAA,EAEA,YAAY,MAAoB;AAC/B,UAAM,QAAQ,KAAK,UAAU,UAAU,CAAC,SAAS,KAAK,SAAS,IAAI;AAEnE,QAAI,UAAU,IAAI;AACjB,aAAO;AAAA,IACR;AAEA,WAAO,KAAK,UAAU,YAAY,KAAK;AAAA,EACxC;AAAA,EAEA,OAAO,QAAgB,OAAqB;AAC3C,SAAK,iBACJ,KAAK,gBAAgB,YAAY,WAAW,QAAQ;AACrD,SAAK,OACJ,KAAK,gBAAgB,YAAY,aAAa,QAAQ;AAEvD,eAAW,YAAY,KAAK,WAAW;AACtC,eAAS,KAAK,iBAAiB,KAAK;AAAA,IACrC;AAEA,SAAK,UAAU,OAAO,KAAK,IAAI;AAAA,EAChC;AAAA,EAEA,kBAAkB,QAAyB;AAC1C,SAAK,iBAAiB;AACtB,SAAK,gCAAgC,MAAM;AAAA,EAC5C;AAAA,EAEQ,gCACP,QACC;AACD,QAAI,KAAK,gBAAgB,YAAY,UAAU;AAC9C,WAAK,UAAU,sBAAsB,QAAQ;AAC7C,WAAK,UAAU,oBAAoB,QAAQ;AAAA,IAC5C,OAAO;AACN,WAAK,UAAU,oBAAoB,QAAQ;AAAA,IAC5C;AAAA,EACD;AAAA,EAEA,gBAAgB,QAAgB,OAAqB;AACpD,SAAK,cACJ,KAAK,gBAAgB,YAAY,WAC9B,YAAY,aACZ,YAAY;AAChB,UAAM,YAAY,KAAK,UAAU;AAAA,MAAI,CAAC,SACrC,KAAK,YAAY,KAAK,IAAI;AAAA,IAC3B;AAEA,SAAK,UAAU,QAAQ;AACvB,cAAU,KAAK,OAAO;AAEtB,SAAK,YAAY,KAAK;AAAA,MACrB,IAAI,UAAU,KAAK,SAAS,EAAE,aAAa,KAAK,YAAY,CAAC;AAAA,IAC9D;AACA,SAAK,gCAAgC,KAAK,cAAc;AAExD,UAAM,oBACL,KAAK,gBAAgB,YAAY,WAAW,QAAQ;AACrD,UAAM,UACL,KAAK,gBAAgB,YAAY,aAAa,QAAQ;AAEvD,SAAK,UAAU,QAAQ,CAAC,MAAM,UAAU;AACvC,WAAK,KAAK,iBAAiB;AAC3B,WAAK,KAAK,cAAc,KAAK;AAE7B,YAAM,WACL,KAAK,SAAS,IAAI,IAAK,UAAU,UAAU,KAAK,IAAK,KAAK;AAC3D,WAAK,UAAU,QAAQ,KAAK,MAAM,UAAU,KAAK;AAAA,IAClD,CAAC;AAED,SAAK,OAAO;AACZ,SAAK,iBAAiB;AAEtB,SAAK,UAAU,OAAO,KAAK,IAAI;AAAA,EAChC;AAAA,EAEQ,iBAAuB;AAC9B,QAAI,OAAO,KAAK,mBAAmB,UAAU;AAC5C,gBAAU,KAAK,OAAO,EAAE,aAAa,KAAK,cAAc;AAAA,IACzD;AAEA,SAAK,QAAQ,UAAU,IAAI,UAAU;AAErC,SAAK,iBAAiB,UAAU,KAAK,OAAO,EAAE,WAAW,MAAM;AAC9D,WAAK,iBAAiB;AACtB,WAAK,QAAQ,UAAU,OAAO,UAAU;AAAA,IACzC,GAAG,GAAG;AAAA,EACP;AAAA,EAEQ,wBAAuC;AAC9C,WAAO;AAAA,MACN,GAAG,KAAK,QAAQ,iBAAiB,cAAc;AAAA,IAChD;AAAA,EACD;AAAA,EAEQ,gBAAsB;AAC7B,UAAM,UAAU,KAAK,sBAAsB;AAC3C,UAAM,QAAQ,QAAQ;AAAA,MACrB,KAAK,QAAQ,cAAc;AAAA,IAC5B;AAEA,QAAI,UAAU,IAAI;AACjB;AAAA,IACD;AAEA,YAAQ,KAAK,IAAI,QAAQ,GAAG,CAAC,CAAC,EAAE,MAAM;AAAA,EACvC;AAAA,EAEQ,YAAkB;AACzB,UAAM,UAAU,KAAK,sBAAsB;AAC3C,UAAM,QAAQ,QAAQ;AAAA,MACrB,KAAK,QAAQ,cAAc;AAAA,IAC5B;AAEA,QAAI,UAAU,IAAI;AACjB;AAAA,IACD;AAEA,YAAQ,KAAK,IAAI,QAAQ,GAAG,QAAQ,SAAS,CAAC,CAAC,EAAE,MAAM;AAAA,EACxD;AAAA,EAES,UAAgB;AACxB,UAAM,QAAQ;AAEd,SAAK,UAAU,QAAQ,CAAC,MAAM,EAAE,WAAW,QAAQ,CAAC;AAAA,EACrD;AACD;",
  "names": []
}
