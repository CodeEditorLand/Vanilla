{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/browser/ui/countBadge/countBadge.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { $, append } from '../../dom.js';\nimport { format } from '../../../common/strings.js';\nimport './countBadge.css';\n\nexport interface ICountBadgeOptions {\n\treadonly count?: number;\n\treadonly countFormat?: string;\n\treadonly titleFormat?: string;\n}\n\nexport interface ICountBadgeStyles {\n\treadonly badgeBackground: string | undefined;\n\treadonly badgeForeground: string | undefined;\n\treadonly badgeBorder: string | undefined;\n}\n\nexport const unthemedCountStyles: ICountBadgeStyles = {\n\tbadgeBackground: '#4D4D4D',\n\tbadgeForeground: '#FFFFFF',\n\tbadgeBorder: undefined\n};\n\nexport class CountBadge {\n\n\tprivate element: HTMLElement;\n\tprivate count: number = 0;\n\tprivate countFormat: string;\n\tprivate titleFormat: string;\n\n\tconstructor(container: HTMLElement, private readonly options: ICountBadgeOptions, private readonly styles: ICountBadgeStyles) {\n\n\t\tthis.element = append(container, $('.monaco-count-badge'));\n\t\tthis.countFormat = this.options.countFormat || '{0}';\n\t\tthis.titleFormat = this.options.titleFormat || '';\n\t\tthis.setCount(this.options.count || 0);\n\t}\n\n\tsetCount(count: number) {\n\t\tthis.count = count;\n\t\tthis.render();\n\t}\n\n\tsetCountFormat(countFormat: string) {\n\t\tthis.countFormat = countFormat;\n\t\tthis.render();\n\t}\n\n\tsetTitleFormat(titleFormat: string) {\n\t\tthis.titleFormat = titleFormat;\n\t\tthis.render();\n\t}\n\n\tprivate render() {\n\t\tthis.element.textContent = format(this.countFormat, this.count);\n\t\tthis.element.title = format(this.titleFormat, this.count);\n\n\t\tthis.element.style.backgroundColor = this.styles.badgeBackground ?? '';\n\t\tthis.element.style.color = this.styles.badgeForeground ?? '';\n\n\t\tif (this.styles.badgeBorder) {\n\t\t\tthis.element.style.border = `1px solid ${this.styles.badgeBorder}`;\n\t\t}\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,GAAG,cAAc;AAC1B,SAAS,cAAc;AACvB,OAAO;AAcA,MAAM,sBAAyC;AAAA,EACrD,iBAAiB;AAAA,EACjB,iBAAiB;AAAA,EACjB,aAAa;AACd;AAEO,MAAM,WAAW;AAAA,EAOvB,YAAY,WAAyC,SAA8C,QAA2B;AAAzE;AAA8C;AAElG,SAAK,UAAU,OAAO,WAAW,EAAE,qBAAqB,CAAC;AACzD,SAAK,cAAc,KAAK,QAAQ,eAAe;AAC/C,SAAK,cAAc,KAAK,QAAQ,eAAe;AAC/C,SAAK,SAAS,KAAK,QAAQ,SAAS,CAAC;AAAA,EACtC;AAAA,EAxCD,OA2BwB;AAAA;AAAA;AAAA,EAEf;AAAA,EACA,QAAgB;AAAA,EAChB;AAAA,EACA;AAAA,EAUR,SAAS,OAAe;AACvB,SAAK,QAAQ;AACb,SAAK,OAAO;AAAA,EACb;AAAA,EAEA,eAAe,aAAqB;AACnC,SAAK,cAAc;AACnB,SAAK,OAAO;AAAA,EACb;AAAA,EAEA,eAAe,aAAqB;AACnC,SAAK,cAAc;AACnB,SAAK,OAAO;AAAA,EACb;AAAA,EAEQ,SAAS;AAChB,SAAK,QAAQ,cAAc,OAAO,KAAK,aAAa,KAAK,KAAK;AAC9D,SAAK,QAAQ,QAAQ,OAAO,KAAK,aAAa,KAAK,KAAK;AAExD,SAAK,QAAQ,MAAM,kBAAkB,KAAK,OAAO,mBAAmB;AACpE,SAAK,QAAQ,MAAM,QAAQ,KAAK,OAAO,mBAAmB;AAE1D,QAAI,KAAK,OAAO,aAAa;AAC5B,WAAK,QAAQ,MAAM,SAAS,aAAa,KAAK,OAAO,WAAW;AAAA,IACjE;AAAA,EACD;AACD;",
  "names": []
}
