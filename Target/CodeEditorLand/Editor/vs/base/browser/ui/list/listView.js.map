{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/browser/ui/list/listView.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { distinct, equals } from \"../../../common/arrays.js\";\nimport { Delayer, disposableTimeout } from \"../../../common/async.js\";\nimport { memoize } from \"../../../common/decorators.js\";\nimport { BugIndicatingError } from \"../../../common/errors.js\";\nimport {\n\tEmitter,\n\tEvent,\n\ttype IValueWithChangeEvent,\n} from \"../../../common/event.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttype IDisposable,\n\ttoDisposable,\n} from \"../../../common/lifecycle.js\";\nimport { clamp } from \"../../../common/numbers.js\";\nimport { type IRange, Range } from \"../../../common/range.js\";\nimport {\n\ttype INewScrollDimensions,\n\ttype ScrollEvent,\n\tScrollable,\n\tScrollbarVisibility,\n} from \"../../../common/scrollable.js\";\nimport type { ISpliceable } from \"../../../common/sequence.js\";\nimport { DataTransfers, type IDragAndDropData } from \"../../dnd.js\";\nimport {\n\t$,\n\ttype Dimension,\n\taddDisposableListener,\n\tanimate,\n\tgetContentHeight,\n\tgetContentWidth,\n\tgetTopLeftOffset,\n\tgetWindow,\n\tisAncestor,\n\tisHTMLElement,\n\tisSVGElement,\n\tscheduleAtNextAnimationFrame,\n} from \"../../dom.js\";\nimport { DomEmitter } from \"../../event.js\";\nimport type { IMouseWheelEvent } from \"../../mouseEvent.js\";\nimport {\n\tGesture,\n\ttype GestureEvent,\n\tEventType as TouchEventType,\n} from \"../../touch.js\";\nimport type { AriaRole } from \"../aria/aria.js\";\nimport { SmoothScrollableElement } from \"../scrollbar/scrollableElement.js\";\nimport type { ScrollableElementChangeOptions } from \"../scrollbar/scrollableElementOptions.js\";\nimport {\n\ttype IListDragAndDrop,\n\ttype IListDragEvent,\n\ttype IListGestureEvent,\n\ttype IListMouseEvent,\n\ttype IListRenderer,\n\ttype IListTouchEvent,\n\ttype IListVirtualDelegate,\n\tListDragOverEffectPosition,\n\tListDragOverEffectType,\n} from \"./list.js\";\nimport { type IRangeMap, RangeMap, shift } from \"./rangeMap.js\";\nimport { type IRow, RowCache } from \"./rowCache.js\";\n\ninterface IItem<T> {\n\treadonly id: string;\n\treadonly element: T;\n\treadonly templateId: string;\n\trow: IRow | null;\n\tsize: number;\n\twidth: number | undefined;\n\thasDynamicHeight: boolean;\n\tlastDynamicHeightWidth: number | undefined;\n\turi: string | undefined;\n\tdropTarget: boolean;\n\tdragStartDisposable: IDisposable;\n\tcheckedDisposable: IDisposable;\n\tstale: boolean;\n}\n\nconst StaticDND = {\n\tCurrentDragAndDropData: undefined as IDragAndDropData | undefined,\n};\n\nexport interface IListViewDragAndDrop<T> extends IListDragAndDrop<T> {\n\tgetDragElements(element: T): T[];\n}\n\nexport enum ListViewTargetSector {\n\t// drop position relative to the top of the item\n\tTOP = 0, // [0%-25%)\n\tCENTER_TOP = 1, // [25%-50%)\n\tCENTER_BOTTOM = 2, // [50%-75%)\n\tBOTTOM = 3, // [75%-100%)\n}\n\nexport interface IListViewAccessibilityProvider<T> {\n\tgetSetSize?(element: T, index: number, listLength: number): number;\n\tgetPosInSet?(element: T, index: number): number;\n\tgetRole?(element: T): AriaRole | undefined;\n\tisChecked?(\n\t\telement: T,\n\t): boolean | IValueWithChangeEvent<boolean> | undefined;\n}\n\nexport interface IListViewOptionsUpdate {\n\treadonly smoothScrolling?: boolean;\n\treadonly horizontalScrolling?: boolean;\n\treadonly scrollByPage?: boolean;\n\treadonly mouseWheelScrollSensitivity?: number;\n\treadonly fastScrollSensitivity?: number;\n\treadonly paddingTop?: number;\n\treadonly paddingBottom?: number;\n}\n\nexport interface IListViewOptions<T> extends IListViewOptionsUpdate {\n\treadonly dnd?: IListViewDragAndDrop<T>;\n\treadonly useShadows?: boolean;\n\treadonly verticalScrollMode?: ScrollbarVisibility;\n\treadonly setRowLineHeight?: boolean;\n\treadonly setRowHeight?: boolean;\n\treadonly supportDynamicHeights?: boolean;\n\treadonly mouseSupport?: boolean;\n\treadonly accessibilityProvider?: IListViewAccessibilityProvider<T>;\n\treadonly transformOptimization?: boolean;\n\treadonly alwaysConsumeMouseWheel?: boolean;\n\treadonly initialSize?: Dimension;\n}\n\nconst DefaultOptions = {\n\tuseShadows: true,\n\tverticalScrollMode: ScrollbarVisibility.Auto,\n\tsetRowLineHeight: true,\n\tsetRowHeight: true,\n\tsupportDynamicHeights: false,\n\tdnd: {\n\t\tgetDragElements<T>(e: T) {\n\t\t\treturn [e];\n\t\t},\n\t\tgetDragURI() {\n\t\t\treturn null;\n\t\t},\n\t\tonDragStart(): void {},\n\t\tonDragOver() {\n\t\t\treturn false;\n\t\t},\n\t\tdrop() {},\n\t\tdispose() {},\n\t},\n\thorizontalScrolling: false,\n\ttransformOptimization: true,\n\talwaysConsumeMouseWheel: true,\n};\n\nexport class ElementsDragAndDropData<T, TContext = void>\n\timplements IDragAndDropData\n{\n\treadonly elements: T[];\n\n\tprivate _context: TContext | undefined;\n\tpublic get context(): TContext | undefined {\n\t\treturn this._context;\n\t}\n\tpublic set context(value: TContext | undefined) {\n\t\tthis._context = value;\n\t}\n\n\tconstructor(elements: T[]) {\n\t\tthis.elements = elements;\n\t}\n\n\tupdate(): void {}\n\n\tgetData(): T[] {\n\t\treturn this.elements;\n\t}\n}\n\nexport class ExternalElementsDragAndDropData<T> implements IDragAndDropData {\n\treadonly elements: T[];\n\n\tconstructor(elements: T[]) {\n\t\tthis.elements = elements;\n\t}\n\n\tupdate(): void {}\n\n\tgetData(): T[] {\n\t\treturn this.elements;\n\t}\n}\n\nexport class NativeDragAndDropData implements IDragAndDropData {\n\treadonly types: any[];\n\treadonly files: any[];\n\n\tconstructor() {\n\t\tthis.types = [];\n\t\tthis.files = [];\n\t}\n\n\tupdate(dataTransfer: DataTransfer): void {\n\t\tif (dataTransfer.types) {\n\t\t\tthis.types.splice(0, this.types.length, ...dataTransfer.types);\n\t\t}\n\n\t\tif (dataTransfer.files) {\n\t\t\tthis.files.splice(0, this.files.length);\n\n\t\t\tfor (let i = 0; i < dataTransfer.files.length; i++) {\n\t\t\t\tconst file = dataTransfer.files.item(i);\n\n\t\t\t\tif (file && (file.size || file.type)) {\n\t\t\t\t\tthis.files.push(file);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tgetData(): any {\n\t\treturn {\n\t\t\ttypes: this.types,\n\t\t\tfiles: this.files,\n\t\t};\n\t}\n}\n\nfunction equalsDragFeedback(\n\tf1: number[] | undefined,\n\tf2: number[] | undefined,\n): boolean {\n\tif (Array.isArray(f1) && Array.isArray(f2)) {\n\t\treturn equals(f1, f2);\n\t}\n\n\treturn f1 === f2;\n}\n\nclass ListViewAccessibilityProvider<T>\n\timplements Required<IListViewAccessibilityProvider<T>>\n{\n\treadonly getSetSize: (\n\t\telement: any,\n\t\tindex: number,\n\t\tlistLength: number,\n\t) => number;\n\treadonly getPosInSet: (element: any, index: number) => number;\n\treadonly getRole: (element: T) => AriaRole | undefined;\n\treadonly isChecked: (\n\t\telement: T,\n\t) => boolean | IValueWithChangeEvent<boolean> | undefined;\n\n\tconstructor(accessibilityProvider?: IListViewAccessibilityProvider<T>) {\n\t\tif (accessibilityProvider?.getSetSize) {\n\t\t\tthis.getSetSize = accessibilityProvider.getSetSize.bind(\n\t\t\t\taccessibilityProvider,\n\t\t\t);\n\t\t} else {\n\t\t\tthis.getSetSize = (e, i, l) => l;\n\t\t}\n\n\t\tif (accessibilityProvider?.getPosInSet) {\n\t\t\tthis.getPosInSet = accessibilityProvider.getPosInSet.bind(\n\t\t\t\taccessibilityProvider,\n\t\t\t);\n\t\t} else {\n\t\t\tthis.getPosInSet = (e, i) => i + 1;\n\t\t}\n\n\t\tif (accessibilityProvider?.getRole) {\n\t\t\tthis.getRole = accessibilityProvider.getRole.bind(\n\t\t\t\taccessibilityProvider,\n\t\t\t);\n\t\t} else {\n\t\t\tthis.getRole = (_) => \"listitem\";\n\t\t}\n\n\t\tif (accessibilityProvider?.isChecked) {\n\t\t\tthis.isChecked = accessibilityProvider.isChecked.bind(\n\t\t\t\taccessibilityProvider,\n\t\t\t);\n\t\t} else {\n\t\t\tthis.isChecked = (_) => undefined;\n\t\t}\n\t}\n}\n\nexport interface IListView<T> extends ISpliceable<T>, IDisposable {\n\treadonly domId: string;\n\treadonly domNode: HTMLElement;\n\treadonly containerDomNode: HTMLElement;\n\treadonly scrollableElementDomNode: HTMLElement;\n\treadonly length: number;\n\treadonly contentHeight: number;\n\treadonly contentWidth: number;\n\treadonly onDidChangeContentHeight: Event<number>;\n\treadonly onDidChangeContentWidth: Event<number>;\n\treadonly renderHeight: number;\n\treadonly scrollHeight: number;\n\treadonly firstVisibleIndex: number;\n\treadonly firstMostlyVisibleIndex: number;\n\treadonly lastVisibleIndex: number;\n\tonDidScroll: Event<ScrollEvent>;\n\tonWillScroll: Event<ScrollEvent>;\n\tonMouseClick: Event<IListMouseEvent<T>>;\n\tonMouseDblClick: Event<IListMouseEvent<T>>;\n\tonMouseMiddleClick: Event<IListMouseEvent<T>>;\n\tonMouseUp: Event<IListMouseEvent<T>>;\n\tonMouseDown: Event<IListMouseEvent<T>>;\n\tonMouseOver: Event<IListMouseEvent<T>>;\n\tonMouseMove: Event<IListMouseEvent<T>>;\n\tonMouseOut: Event<IListMouseEvent<T>>;\n\tonContextMenu: Event<IListMouseEvent<T>>;\n\tonTouchStart: Event<IListTouchEvent<T>>;\n\tonTap: Event<IListGestureEvent<T>>;\n\telement(index: number): T;\n\tdomElement(index: number): HTMLElement | null;\n\tgetElementDomId(index: number): string;\n\telementHeight(index: number): number;\n\telementTop(index: number): number;\n\tindexOf(element: T): number;\n\tindexAt(position: number): number;\n\tindexAfter(position: number): number;\n\tupdateOptions(options: IListViewOptionsUpdate): void;\n\tgetScrollTop(): number;\n\tsetScrollTop(scrollTop: number, reuseAnimation?: boolean): void;\n\tgetScrollLeft(): number;\n\tsetScrollLeft(scrollLeft: number): void;\n\tdelegateScrollFromMouseWheelEvent(browserEvent: IMouseWheelEvent): void;\n\tdelegateVerticalScrollbarPointerDown(browserEvent: PointerEvent): void;\n\tupdateWidth(index: number): void;\n\tupdateElementHeight(\n\t\tindex: number,\n\t\tsize: number | undefined,\n\t\tanchorIndex: number | null,\n\t): void;\n\trerender(): void;\n\tlayout(height?: number, width?: number): void;\n}\n\n/**\n * The {@link ListView} is a virtual scrolling engine.\n *\n * Given that it only renders elements within its viewport, it can hold large\n * collections of elements and stay very performant. The performance bottleneck\n * usually lies within the user's rendering code for each element.\n *\n * @remarks It is a low-level widget, not meant to be used directly. Refer to the\n * List widget instead.\n */\nexport class ListView<T> implements IListView<T> {\n\tprivate static InstanceCount = 0;\n\treadonly domId = `list_id_${++ListView.InstanceCount}`;\n\n\treadonly domNode: HTMLElement;\n\n\tprivate items: IItem<T>[];\n\tprivate itemId: number;\n\tprotected rangeMap: IRangeMap;\n\tprivate cache: RowCache<T>;\n\tprivate renderers = new Map<\n\t\tstring,\n\t\tIListRenderer<any /* TODO@joao */, any>\n\t>();\n\tprotected lastRenderTop: number;\n\tprotected lastRenderHeight: number;\n\tprivate renderWidth = 0;\n\tprivate rowsContainer: HTMLElement;\n\tprivate scrollable: Scrollable;\n\tprivate scrollableElement: SmoothScrollableElement;\n\tprivate _scrollHeight = 0;\n\tprivate scrollableElementUpdateDisposable: IDisposable | null = null;\n\tprivate scrollableElementWidthDelayer = new Delayer<void>(50);\n\tprivate splicing = false;\n\tprivate dragOverAnimationDisposable: IDisposable | undefined;\n\tprivate dragOverAnimationStopDisposable: IDisposable = Disposable.None;\n\tprivate dragOverMouseY = 0;\n\tprivate setRowLineHeight: boolean;\n\tprivate setRowHeight: boolean;\n\tprivate supportDynamicHeights: boolean;\n\tprivate paddingBottom: number;\n\tprivate accessibilityProvider: ListViewAccessibilityProvider<T>;\n\tprivate scrollWidth: number | undefined;\n\n\tprivate dnd: IListViewDragAndDrop<T>;\n\tprivate canDrop = false;\n\tprivate currentDragData: IDragAndDropData | undefined;\n\tprivate currentDragFeedback: number[] | undefined;\n\tprivate currentDragFeedbackPosition: ListDragOverEffectPosition | undefined;\n\tprivate currentDragFeedbackDisposable: IDisposable = Disposable.None;\n\tprivate onDragLeaveTimeout: IDisposable = Disposable.None;\n\n\tprivate readonly disposables: DisposableStore = new DisposableStore();\n\n\tprivate readonly _onDidChangeContentHeight = new Emitter<number>();\n\tprivate readonly _onDidChangeContentWidth = new Emitter<number>();\n\treadonly onDidChangeContentHeight: Event<number> = Event.latch(\n\t\tthis._onDidChangeContentHeight.event,\n\t\tundefined,\n\t\tthis.disposables,\n\t);\n\treadonly onDidChangeContentWidth: Event<number> = Event.latch(\n\t\tthis._onDidChangeContentWidth.event,\n\t\tundefined,\n\t\tthis.disposables,\n\t);\n\tget contentHeight(): number {\n\t\treturn this.rangeMap.size;\n\t}\n\tget contentWidth(): number {\n\t\treturn this.scrollWidth ?? 0;\n\t}\n\n\tget onDidScroll(): Event<ScrollEvent> {\n\t\treturn this.scrollableElement.onScroll;\n\t}\n\tget onWillScroll(): Event<ScrollEvent> {\n\t\treturn this.scrollableElement.onWillScroll;\n\t}\n\tget containerDomNode(): HTMLElement {\n\t\treturn this.rowsContainer;\n\t}\n\tget scrollableElementDomNode(): HTMLElement {\n\t\treturn this.scrollableElement.getDomNode();\n\t}\n\n\tprivate _horizontalScrolling = false;\n\tprivate get horizontalScrolling(): boolean {\n\t\treturn this._horizontalScrolling;\n\t}\n\tprivate set horizontalScrolling(value: boolean) {\n\t\tif (value === this._horizontalScrolling) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (value && this.supportDynamicHeights) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Horizontal scrolling and dynamic heights not supported simultaneously\",\n\t\t\t);\n\t\t}\n\n\t\tthis._horizontalScrolling = value;\n\t\tthis.domNode.classList.toggle(\n\t\t\t\"horizontal-scrolling\",\n\t\t\tthis._horizontalScrolling,\n\t\t);\n\n\t\tif (this._horizontalScrolling) {\n\t\t\tfor (const item of this.items) {\n\t\t\t\tthis.measureItemWidth(item);\n\t\t\t}\n\n\t\t\tthis.updateScrollWidth();\n\t\t\tthis.scrollableElement.setScrollDimensions({\n\t\t\t\twidth: getContentWidth(this.domNode),\n\t\t\t});\n\t\t\tthis.rowsContainer.style.width = `${Math.max(this.scrollWidth || 0, this.renderWidth)}px`;\n\t\t} else {\n\t\t\tthis.scrollableElementWidthDelayer.cancel();\n\t\t\tthis.scrollableElement.setScrollDimensions({\n\t\t\t\twidth: this.renderWidth,\n\t\t\t\tscrollWidth: this.renderWidth,\n\t\t\t});\n\t\t\tthis.rowsContainer.style.width = \"\";\n\t\t}\n\t}\n\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\tprivate virtualDelegate: IListVirtualDelegate<T>,\n\t\trenderers: IListRenderer<any /* TODO@joao */, any>[],\n\t\toptions: IListViewOptions<T> = DefaultOptions as IListViewOptions<T>,\n\t) {\n\t\tif (options.horizontalScrolling && options.supportDynamicHeights) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Horizontal scrolling and dynamic heights not supported simultaneously\",\n\t\t\t);\n\t\t}\n\n\t\tthis.items = [];\n\t\tthis.itemId = 0;\n\t\tthis.rangeMap = this.createRangeMap(options.paddingTop ?? 0);\n\n\t\tfor (const renderer of renderers) {\n\t\t\tthis.renderers.set(renderer.templateId, renderer);\n\t\t}\n\n\t\tthis.cache = this.disposables.add(new RowCache(this.renderers));\n\n\t\tthis.lastRenderTop = 0;\n\t\tthis.lastRenderHeight = 0;\n\n\t\tthis.domNode = document.createElement(\"div\");\n\t\tthis.domNode.className = \"monaco-list\";\n\n\t\tthis.domNode.classList.add(this.domId);\n\t\tthis.domNode.tabIndex = 0;\n\n\t\tthis.domNode.classList.toggle(\n\t\t\t\"mouse-support\",\n\t\t\ttypeof options.mouseSupport === \"boolean\"\n\t\t\t\t? options.mouseSupport\n\t\t\t\t: true,\n\t\t);\n\n\t\tthis._horizontalScrolling =\n\t\t\toptions.horizontalScrolling ?? DefaultOptions.horizontalScrolling;\n\t\tthis.domNode.classList.toggle(\n\t\t\t\"horizontal-scrolling\",\n\t\t\tthis._horizontalScrolling,\n\t\t);\n\n\t\tthis.paddingBottom =\n\t\t\ttypeof options.paddingBottom === \"undefined\"\n\t\t\t\t? 0\n\t\t\t\t: options.paddingBottom;\n\n\t\tthis.accessibilityProvider = new ListViewAccessibilityProvider(\n\t\t\toptions.accessibilityProvider,\n\t\t);\n\n\t\tthis.rowsContainer = document.createElement(\"div\");\n\t\tthis.rowsContainer.className = \"monaco-list-rows\";\n\n\t\tconst transformOptimization =\n\t\t\toptions.transformOptimization ??\n\t\t\tDefaultOptions.transformOptimization;\n\t\tif (transformOptimization) {\n\t\t\tthis.rowsContainer.style.transform = \"translate3d(0px, 0px, 0px)\";\n\t\t\tthis.rowsContainer.style.overflow = \"hidden\";\n\t\t\tthis.rowsContainer.style.contain = \"strict\";\n\t\t}\n\n\t\tthis.disposables.add(Gesture.addTarget(this.rowsContainer));\n\n\t\tthis.scrollable = this.disposables.add(\n\t\t\tnew Scrollable({\n\t\t\t\tforceIntegerValues: true,\n\t\t\t\tsmoothScrollDuration:\n\t\t\t\t\t(options.smoothScrolling ?? false) ? 125 : 0,\n\t\t\t\tscheduleAtNextAnimationFrame: (cb) =>\n\t\t\t\t\tscheduleAtNextAnimationFrame(getWindow(this.domNode), cb),\n\t\t\t}),\n\t\t);\n\t\tthis.scrollableElement = this.disposables.add(\n\t\t\tnew SmoothScrollableElement(\n\t\t\t\tthis.rowsContainer,\n\t\t\t\t{\n\t\t\t\t\talwaysConsumeMouseWheel:\n\t\t\t\t\t\toptions.alwaysConsumeMouseWheel ??\n\t\t\t\t\t\tDefaultOptions.alwaysConsumeMouseWheel,\n\t\t\t\t\thorizontal: ScrollbarVisibility.Auto,\n\t\t\t\t\tvertical:\n\t\t\t\t\t\toptions.verticalScrollMode ??\n\t\t\t\t\t\tDefaultOptions.verticalScrollMode,\n\t\t\t\t\tuseShadows: options.useShadows ?? DefaultOptions.useShadows,\n\t\t\t\t\tmouseWheelScrollSensitivity:\n\t\t\t\t\t\toptions.mouseWheelScrollSensitivity,\n\t\t\t\t\tfastScrollSensitivity: options.fastScrollSensitivity,\n\t\t\t\t\tscrollByPage: options.scrollByPage,\n\t\t\t\t},\n\t\t\t\tthis.scrollable,\n\t\t\t),\n\t\t);\n\n\t\tthis.domNode.appendChild(this.scrollableElement.getDomNode());\n\t\tcontainer.appendChild(this.domNode);\n\n\t\tthis.scrollableElement.onScroll(this.onScroll, this, this.disposables);\n\t\tthis.disposables.add(\n\t\t\taddDisposableListener(\n\t\t\t\tthis.rowsContainer,\n\t\t\t\tTouchEventType.Change,\n\t\t\t\t(e) => this.onTouchChange(e as GestureEvent),\n\t\t\t),\n\t\t);\n\n\t\t// Prevent the monaco-scrollable-element from scrolling\n\t\t// https://github.com/microsoft/vscode/issues/44181\n\t\tthis.disposables.add(\n\t\t\taddDisposableListener(\n\t\t\t\tthis.scrollableElement.getDomNode(),\n\t\t\t\t\"scroll\",\n\t\t\t\t(e) => ((e.target as HTMLElement).scrollTop = 0),\n\t\t\t),\n\t\t);\n\n\t\tthis.disposables.add(\n\t\t\taddDisposableListener(this.domNode, \"dragover\", (e) =>\n\t\t\t\tthis.onDragOver(this.toDragEvent(e)),\n\t\t\t),\n\t\t);\n\t\tthis.disposables.add(\n\t\t\taddDisposableListener(this.domNode, \"drop\", (e) =>\n\t\t\t\tthis.onDrop(this.toDragEvent(e)),\n\t\t\t),\n\t\t);\n\t\tthis.disposables.add(\n\t\t\taddDisposableListener(this.domNode, \"dragleave\", (e) =>\n\t\t\t\tthis.onDragLeave(this.toDragEvent(e)),\n\t\t\t),\n\t\t);\n\t\tthis.disposables.add(\n\t\t\taddDisposableListener(this.domNode, \"dragend\", (e) =>\n\t\t\t\tthis.onDragEnd(e),\n\t\t\t),\n\t\t);\n\n\t\tthis.setRowLineHeight =\n\t\t\toptions.setRowLineHeight ?? DefaultOptions.setRowLineHeight;\n\t\tthis.setRowHeight = options.setRowHeight ?? DefaultOptions.setRowHeight;\n\t\tthis.supportDynamicHeights =\n\t\t\toptions.supportDynamicHeights ??\n\t\t\tDefaultOptions.supportDynamicHeights;\n\t\tthis.dnd = options.dnd ?? this.disposables.add(DefaultOptions.dnd);\n\n\t\tthis.layout(options.initialSize?.height, options.initialSize?.width);\n\t}\n\n\tupdateOptions(options: IListViewOptionsUpdate) {\n\t\tif (options.paddingBottom !== undefined) {\n\t\t\tthis.paddingBottom = options.paddingBottom;\n\t\t\tthis.scrollableElement.setScrollDimensions({\n\t\t\t\tscrollHeight: this.scrollHeight,\n\t\t\t});\n\t\t}\n\n\t\tif (options.smoothScrolling !== undefined) {\n\t\t\tthis.scrollable.setSmoothScrollDuration(\n\t\t\t\toptions.smoothScrolling ? 125 : 0,\n\t\t\t);\n\t\t}\n\n\t\tif (options.horizontalScrolling !== undefined) {\n\t\t\tthis.horizontalScrolling = options.horizontalScrolling;\n\t\t}\n\n\t\tlet scrollableOptions: ScrollableElementChangeOptions | undefined;\n\n\t\tif (options.scrollByPage !== undefined) {\n\t\t\tscrollableOptions = {\n\t\t\t\t...(scrollableOptions ?? {}),\n\t\t\t\tscrollByPage: options.scrollByPage,\n\t\t\t};\n\t\t}\n\n\t\tif (options.mouseWheelScrollSensitivity !== undefined) {\n\t\t\tscrollableOptions = {\n\t\t\t\t...(scrollableOptions ?? {}),\n\t\t\t\tmouseWheelScrollSensitivity:\n\t\t\t\t\toptions.mouseWheelScrollSensitivity,\n\t\t\t};\n\t\t}\n\n\t\tif (options.fastScrollSensitivity !== undefined) {\n\t\t\tscrollableOptions = {\n\t\t\t\t...(scrollableOptions ?? {}),\n\t\t\t\tfastScrollSensitivity: options.fastScrollSensitivity,\n\t\t\t};\n\t\t}\n\n\t\tif (scrollableOptions) {\n\t\t\tthis.scrollableElement.updateOptions(scrollableOptions);\n\t\t}\n\n\t\tif (\n\t\t\toptions.paddingTop !== undefined &&\n\t\t\toptions.paddingTop !== this.rangeMap.paddingTop\n\t\t) {\n\t\t\t// trigger a rerender\n\t\t\tconst lastRenderRange = this.getRenderRange(\n\t\t\t\tthis.lastRenderTop,\n\t\t\t\tthis.lastRenderHeight,\n\t\t\t);\n\t\t\tconst offset = options.paddingTop - this.rangeMap.paddingTop;\n\t\t\tthis.rangeMap.paddingTop = options.paddingTop;\n\n\t\t\tthis.render(\n\t\t\t\tlastRenderRange,\n\t\t\t\tMath.max(0, this.lastRenderTop + offset),\n\t\t\t\tthis.lastRenderHeight,\n\t\t\t\tundefined,\n\t\t\t\tundefined,\n\t\t\t\ttrue,\n\t\t\t);\n\t\t\tthis.setScrollTop(this.lastRenderTop);\n\n\t\t\tthis.eventuallyUpdateScrollDimensions();\n\n\t\t\tif (this.supportDynamicHeights) {\n\t\t\t\tthis._rerender(this.lastRenderTop, this.lastRenderHeight);\n\t\t\t}\n\t\t}\n\t}\n\n\tdelegateScrollFromMouseWheelEvent(browserEvent: IMouseWheelEvent) {\n\t\tthis.scrollableElement.delegateScrollFromMouseWheelEvent(browserEvent);\n\t}\n\n\tdelegateVerticalScrollbarPointerDown(browserEvent: PointerEvent) {\n\t\tthis.scrollableElement.delegateVerticalScrollbarPointerDown(\n\t\t\tbrowserEvent,\n\t\t);\n\t}\n\n\tupdateElementHeight(\n\t\tindex: number,\n\t\tsize: number | undefined,\n\t\tanchorIndex: number | null,\n\t): void {\n\t\tif (index < 0 || index >= this.items.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst originalSize = this.items[index].size;\n\n\t\tif (typeof size === \"undefined\") {\n\t\t\tif (!this.supportDynamicHeights) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t\"Dynamic heights not supported\",\n\t\t\t\t\tnew Error().stack,\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.items[index].lastDynamicHeightWidth = undefined;\n\t\t\tsize = originalSize + this.probeDynamicHeight(index);\n\t\t}\n\n\t\tif (originalSize === size) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst lastRenderRange = this.getRenderRange(\n\t\t\tthis.lastRenderTop,\n\t\t\tthis.lastRenderHeight,\n\t\t);\n\n\t\tlet heightDiff = 0;\n\n\t\tif (index < lastRenderRange.start) {\n\t\t\t// do not scroll the viewport if resized element is out of viewport\n\t\t\theightDiff = size - originalSize;\n\t\t} else if (\n\t\t\tanchorIndex !== null &&\n\t\t\tanchorIndex > index &&\n\t\t\tanchorIndex < lastRenderRange.end\n\t\t) {\n\t\t\t// anchor in viewport\n\t\t\t// resized element in viewport and above the anchor\n\t\t\theightDiff = size - originalSize;\n\t\t} else {\n\t\t\theightDiff = 0;\n\t\t}\n\n\t\tthis.rangeMap.splice(index, 1, [{ size: size }]);\n\t\tthis.items[index].size = size;\n\n\t\tthis.render(\n\t\t\tlastRenderRange,\n\t\t\tMath.max(0, this.lastRenderTop + heightDiff),\n\t\t\tthis.lastRenderHeight,\n\t\t\tundefined,\n\t\t\tundefined,\n\t\t\ttrue,\n\t\t);\n\t\tthis.setScrollTop(this.lastRenderTop);\n\n\t\tthis.eventuallyUpdateScrollDimensions();\n\n\t\tif (this.supportDynamicHeights) {\n\t\t\tthis._rerender(this.lastRenderTop, this.lastRenderHeight);\n\t\t}\n\t}\n\n\tprotected createRangeMap(paddingTop: number): IRangeMap {\n\t\treturn new RangeMap(paddingTop);\n\t}\n\n\tsplice(\n\t\tstart: number,\n\t\tdeleteCount: number,\n\t\telements: readonly T[] = [],\n\t): T[] {\n\t\tif (this.splicing) {\n\t\t\tthrow new Error(\"Can't run recursive splices.\");\n\t\t}\n\n\t\tthis.splicing = true;\n\n\t\ttry {\n\t\t\treturn this._splice(start, deleteCount, elements);\n\t\t} finally {\n\t\t\tthis.splicing = false;\n\t\t\tthis._onDidChangeContentHeight.fire(this.contentHeight);\n\t\t}\n\t}\n\n\tprivate _splice(\n\t\tstart: number,\n\t\tdeleteCount: number,\n\t\telements: readonly T[] = [],\n\t): T[] {\n\t\tconst previousRenderRange = this.getRenderRange(\n\t\t\tthis.lastRenderTop,\n\t\t\tthis.lastRenderHeight,\n\t\t);\n\t\tconst deleteRange = { start, end: start + deleteCount };\n\t\tconst removeRange = Range.intersect(previousRenderRange, deleteRange);\n\n\t\t// try to reuse rows, avoid removing them from DOM\n\t\tconst rowsToDispose = new Map<string, IRow[]>();\n\t\tfor (let i = removeRange.end - 1; i >= removeRange.start; i--) {\n\t\t\tconst item = this.items[i];\n\t\t\titem.dragStartDisposable.dispose();\n\t\t\titem.checkedDisposable.dispose();\n\n\t\t\tif (item.row) {\n\t\t\t\tlet rows = rowsToDispose.get(item.templateId);\n\n\t\t\t\tif (!rows) {\n\t\t\t\t\trows = [];\n\t\t\t\t\trowsToDispose.set(item.templateId, rows);\n\t\t\t\t}\n\n\t\t\t\tconst renderer = this.renderers.get(item.templateId);\n\n\t\t\t\tif (renderer && renderer.disposeElement) {\n\t\t\t\t\trenderer.disposeElement(\n\t\t\t\t\t\titem.element,\n\t\t\t\t\t\ti,\n\t\t\t\t\t\titem.row.templateData,\n\t\t\t\t\t\titem.size,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\trows.unshift(item.row);\n\t\t\t}\n\n\t\t\titem.row = null;\n\t\t\titem.stale = true;\n\t\t}\n\n\t\tconst previousRestRange: IRange = {\n\t\t\tstart: start + deleteCount,\n\t\t\tend: this.items.length,\n\t\t};\n\t\tconst previousRenderedRestRange = Range.intersect(\n\t\t\tpreviousRestRange,\n\t\t\tpreviousRenderRange,\n\t\t);\n\t\tconst previousUnrenderedRestRanges = Range.relativeComplement(\n\t\t\tpreviousRestRange,\n\t\t\tpreviousRenderRange,\n\t\t);\n\n\t\tconst inserted = elements.map<IItem<T>>((element) => ({\n\t\t\tid: String(this.itemId++),\n\t\t\telement,\n\t\t\ttemplateId: this.virtualDelegate.getTemplateId(element),\n\t\t\tsize: this.virtualDelegate.getHeight(element),\n\t\t\twidth: undefined,\n\t\t\thasDynamicHeight:\n\t\t\t\t!!this.virtualDelegate.hasDynamicHeight &&\n\t\t\t\tthis.virtualDelegate.hasDynamicHeight(element),\n\t\t\tlastDynamicHeightWidth: undefined,\n\t\t\trow: null,\n\t\t\turi: undefined,\n\t\t\tdropTarget: false,\n\t\t\tdragStartDisposable: Disposable.None,\n\t\t\tcheckedDisposable: Disposable.None,\n\t\t\tstale: false,\n\t\t}));\n\n\t\tlet deleted: IItem<T>[];\n\n\t\t// TODO@joao: improve this optimization to catch even more cases\n\t\tif (start === 0 && deleteCount >= this.items.length) {\n\t\t\tthis.rangeMap = this.createRangeMap(this.rangeMap.paddingTop);\n\t\t\tthis.rangeMap.splice(0, 0, inserted);\n\t\t\tdeleted = this.items;\n\t\t\tthis.items = inserted;\n\t\t} else {\n\t\t\tthis.rangeMap.splice(start, deleteCount, inserted);\n\t\t\tdeleted = this.items.splice(start, deleteCount, ...inserted);\n\t\t}\n\n\t\tconst delta = elements.length - deleteCount;\n\t\tconst renderRange = this.getRenderRange(\n\t\t\tthis.lastRenderTop,\n\t\t\tthis.lastRenderHeight,\n\t\t);\n\t\tconst renderedRestRange = shift(previousRenderedRestRange, delta);\n\t\tconst updateRange = Range.intersect(renderRange, renderedRestRange);\n\n\t\tfor (let i = updateRange.start; i < updateRange.end; i++) {\n\t\t\tthis.updateItemInDOM(this.items[i], i);\n\t\t}\n\n\t\tconst removeRanges = Range.relativeComplement(\n\t\t\trenderedRestRange,\n\t\t\trenderRange,\n\t\t);\n\n\t\tfor (const range of removeRanges) {\n\t\t\tfor (let i = range.start; i < range.end; i++) {\n\t\t\t\tthis.removeItemFromDOM(i);\n\t\t\t}\n\t\t}\n\n\t\tconst unrenderedRestRanges = previousUnrenderedRestRanges.map((r) =>\n\t\t\tshift(r, delta),\n\t\t);\n\t\tconst elementsRange = { start, end: start + elements.length };\n\t\tconst insertRanges = [elementsRange, ...unrenderedRestRanges]\n\t\t\t.map((r) => Range.intersect(renderRange, r))\n\t\t\t.reverse();\n\n\t\tfor (const range of insertRanges) {\n\t\t\tfor (let i = range.end - 1; i >= range.start; i--) {\n\t\t\t\tconst item = this.items[i];\n\t\t\t\tconst rows = rowsToDispose.get(item.templateId);\n\t\t\t\tconst row = rows?.pop();\n\t\t\t\tthis.insertItemInDOM(i, row);\n\t\t\t}\n\t\t}\n\n\t\tfor (const rows of rowsToDispose.values()) {\n\t\t\tfor (const row of rows) {\n\t\t\t\tthis.cache.release(row);\n\t\t\t}\n\t\t}\n\n\t\tthis.eventuallyUpdateScrollDimensions();\n\n\t\tif (this.supportDynamicHeights) {\n\t\t\tthis._rerender(this.scrollTop, this.renderHeight);\n\t\t}\n\n\t\treturn deleted.map((i) => i.element);\n\t}\n\n\tprotected eventuallyUpdateScrollDimensions(): void {\n\t\tthis._scrollHeight = this.contentHeight;\n\t\tthis.rowsContainer.style.height = `${this._scrollHeight}px`;\n\n\t\tif (!this.scrollableElementUpdateDisposable) {\n\t\t\tthis.scrollableElementUpdateDisposable =\n\t\t\t\tscheduleAtNextAnimationFrame(getWindow(this.domNode), () => {\n\t\t\t\t\tthis.scrollableElement.setScrollDimensions({\n\t\t\t\t\t\tscrollHeight: this.scrollHeight,\n\t\t\t\t\t});\n\t\t\t\t\tthis.updateScrollWidth();\n\t\t\t\t\tthis.scrollableElementUpdateDisposable = null;\n\t\t\t\t});\n\t\t}\n\t}\n\n\tprivate eventuallyUpdateScrollWidth(): void {\n\t\tif (!this.horizontalScrolling) {\n\t\t\tthis.scrollableElementWidthDelayer.cancel();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.scrollableElementWidthDelayer.trigger(() =>\n\t\t\tthis.updateScrollWidth(),\n\t\t);\n\t}\n\n\tprivate updateScrollWidth(): void {\n\t\tif (!this.horizontalScrolling) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet scrollWidth = 0;\n\n\t\tfor (const item of this.items) {\n\t\t\tif (typeof item.width !== \"undefined\") {\n\t\t\t\tscrollWidth = Math.max(scrollWidth, item.width);\n\t\t\t}\n\t\t}\n\n\t\tthis.scrollWidth = scrollWidth;\n\t\tthis.scrollableElement.setScrollDimensions({\n\t\t\tscrollWidth: scrollWidth === 0 ? 0 : scrollWidth + 10,\n\t\t});\n\t\tthis._onDidChangeContentWidth.fire(this.scrollWidth);\n\t}\n\n\tupdateWidth(index: number): void {\n\t\tif (\n\t\t\t!this.horizontalScrolling ||\n\t\t\ttypeof this.scrollWidth === \"undefined\"\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst item = this.items[index];\n\t\tthis.measureItemWidth(item);\n\n\t\tif (\n\t\t\ttypeof item.width !== \"undefined\" &&\n\t\t\titem.width > this.scrollWidth\n\t\t) {\n\t\t\tthis.scrollWidth = item.width;\n\t\t\tthis.scrollableElement.setScrollDimensions({\n\t\t\t\tscrollWidth: this.scrollWidth + 10,\n\t\t\t});\n\t\t\tthis._onDidChangeContentWidth.fire(this.scrollWidth);\n\t\t}\n\t}\n\n\trerender(): void {\n\t\tif (!this.supportDynamicHeights) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const item of this.items) {\n\t\t\titem.lastDynamicHeightWidth = undefined;\n\t\t}\n\n\t\tthis._rerender(this.lastRenderTop, this.lastRenderHeight);\n\t}\n\n\tget length(): number {\n\t\treturn this.items.length;\n\t}\n\n\tget renderHeight(): number {\n\t\tconst scrollDimensions = this.scrollableElement.getScrollDimensions();\n\t\treturn scrollDimensions.height;\n\t}\n\n\tget firstVisibleIndex(): number {\n\t\tconst range = this.getRenderRange(\n\t\t\tthis.lastRenderTop,\n\t\t\tthis.lastRenderHeight,\n\t\t);\n\t\treturn range.start;\n\t}\n\n\tget firstMostlyVisibleIndex(): number {\n\t\tconst firstVisibleIndex = this.firstVisibleIndex;\n\t\tconst firstElTop = this.rangeMap.positionAt(firstVisibleIndex);\n\t\tconst nextElTop = this.rangeMap.positionAt(firstVisibleIndex + 1);\n\t\tif (nextElTop !== -1) {\n\t\t\tconst firstElMidpoint = (nextElTop - firstElTop) / 2 + firstElTop;\n\t\t\tif (firstElMidpoint < this.scrollTop) {\n\t\t\t\treturn firstVisibleIndex + 1;\n\t\t\t}\n\t\t}\n\n\t\treturn firstVisibleIndex;\n\t}\n\n\tget lastVisibleIndex(): number {\n\t\tconst range = this.getRenderRange(\n\t\t\tthis.lastRenderTop,\n\t\t\tthis.lastRenderHeight,\n\t\t);\n\t\treturn range.end - 1;\n\t}\n\n\telement(index: number): T {\n\t\treturn this.items[index].element;\n\t}\n\n\tindexOf(element: T): number {\n\t\treturn this.items.findIndex((item) => item.element === element);\n\t}\n\n\tdomElement(index: number): HTMLElement | null {\n\t\tconst row = this.items[index].row;\n\t\treturn row && row.domNode;\n\t}\n\n\telementHeight(index: number): number {\n\t\treturn this.items[index].size;\n\t}\n\n\telementTop(index: number): number {\n\t\treturn this.rangeMap.positionAt(index);\n\t}\n\n\tindexAt(position: number): number {\n\t\treturn this.rangeMap.indexAt(position);\n\t}\n\n\tindexAfter(position: number): number {\n\t\treturn this.rangeMap.indexAfter(position);\n\t}\n\n\tlayout(height?: number, width?: number): void {\n\t\tconst scrollDimensions: INewScrollDimensions = {\n\t\t\theight:\n\t\t\t\ttypeof height === \"number\"\n\t\t\t\t\t? height\n\t\t\t\t\t: getContentHeight(this.domNode),\n\t\t};\n\n\t\tif (this.scrollableElementUpdateDisposable) {\n\t\t\tthis.scrollableElementUpdateDisposable.dispose();\n\t\t\tthis.scrollableElementUpdateDisposable = null;\n\t\t\tscrollDimensions.scrollHeight = this.scrollHeight;\n\t\t}\n\n\t\tthis.scrollableElement.setScrollDimensions(scrollDimensions);\n\n\t\tif (typeof width !== \"undefined\") {\n\t\t\tthis.renderWidth = width;\n\n\t\t\tif (this.supportDynamicHeights) {\n\t\t\t\tthis._rerender(this.scrollTop, this.renderHeight);\n\t\t\t}\n\t\t}\n\n\t\tif (this.horizontalScrolling) {\n\t\t\tthis.scrollableElement.setScrollDimensions({\n\t\t\t\twidth:\n\t\t\t\t\ttypeof width === \"number\"\n\t\t\t\t\t\t? width\n\t\t\t\t\t\t: getContentWidth(this.domNode),\n\t\t\t});\n\t\t}\n\t}\n\n\t// Render\n\n\tprotected render(\n\t\tpreviousRenderRange: IRange,\n\t\trenderTop: number,\n\t\trenderHeight: number,\n\t\trenderLeft: number | undefined,\n\t\tscrollWidth: number | undefined,\n\t\tupdateItemsInDOM = false,\n\t): void {\n\t\tconst renderRange = this.getRenderRange(renderTop, renderHeight);\n\n\t\tconst rangesToInsert = Range.relativeComplement(\n\t\t\trenderRange,\n\t\t\tpreviousRenderRange,\n\t\t).reverse();\n\t\tconst rangesToRemove = Range.relativeComplement(\n\t\t\tpreviousRenderRange,\n\t\t\trenderRange,\n\t\t);\n\n\t\tif (updateItemsInDOM) {\n\t\t\tconst rangesToUpdate = Range.intersect(\n\t\t\t\tpreviousRenderRange,\n\t\t\t\trenderRange,\n\t\t\t);\n\n\t\t\tfor (let i = rangesToUpdate.start; i < rangesToUpdate.end; i++) {\n\t\t\t\tthis.updateItemInDOM(this.items[i], i);\n\t\t\t}\n\t\t}\n\n\t\tthis.cache.transact(() => {\n\t\t\tfor (const range of rangesToRemove) {\n\t\t\t\tfor (let i = range.start; i < range.end; i++) {\n\t\t\t\t\tthis.removeItemFromDOM(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const range of rangesToInsert) {\n\t\t\t\tfor (let i = range.end - 1; i >= range.start; i--) {\n\t\t\t\t\tthis.insertItemInDOM(i);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (renderLeft !== undefined) {\n\t\t\tthis.rowsContainer.style.left = `-${renderLeft}px`;\n\t\t}\n\n\t\tthis.rowsContainer.style.top = `-${renderTop}px`;\n\n\t\tif (this.horizontalScrolling && scrollWidth !== undefined) {\n\t\t\tthis.rowsContainer.style.width = `${Math.max(scrollWidth, this.renderWidth)}px`;\n\t\t}\n\n\t\tthis.lastRenderTop = renderTop;\n\t\tthis.lastRenderHeight = renderHeight;\n\t}\n\n\t// DOM operations\n\n\tprivate insertItemInDOM(index: number, row?: IRow): void {\n\t\tconst item = this.items[index];\n\n\t\tif (!item.row) {\n\t\t\tif (row) {\n\t\t\t\titem.row = row;\n\t\t\t\titem.stale = true;\n\t\t\t} else {\n\t\t\t\tconst result = this.cache.alloc(item.templateId);\n\t\t\t\titem.row = result.row;\n\t\t\t\titem.stale ||= result.isReusingConnectedDomNode;\n\t\t\t}\n\t\t}\n\n\t\tconst role =\n\t\t\tthis.accessibilityProvider.getRole(item.element) || \"listitem\";\n\t\titem.row.domNode.setAttribute(\"role\", role);\n\n\t\tconst checked = this.accessibilityProvider.isChecked(item.element);\n\n\t\tif (typeof checked === \"boolean\") {\n\t\t\titem.row.domNode.setAttribute(\"aria-checked\", String(!!checked));\n\t\t} else if (checked) {\n\t\t\tconst update = (checked: boolean) =>\n\t\t\t\titem.row!.domNode.setAttribute(\n\t\t\t\t\t\"aria-checked\",\n\t\t\t\t\tString(!!checked),\n\t\t\t\t);\n\t\t\tupdate(checked.value);\n\t\t\titem.checkedDisposable = checked.onDidChange(() =>\n\t\t\t\tupdate(checked.value),\n\t\t\t);\n\t\t}\n\n\t\tif (item.stale || !item.row.domNode.parentElement) {\n\t\t\tconst referenceNode =\n\t\t\t\tthis.items.at(index + 1)?.row?.domNode ?? null;\n\t\t\tif (\n\t\t\t\titem.row.domNode.parentElement !== this.rowsContainer ||\n\t\t\t\titem.row.domNode.nextElementSibling !== referenceNode\n\t\t\t) {\n\t\t\t\tthis.rowsContainer.insertBefore(\n\t\t\t\t\titem.row.domNode,\n\t\t\t\t\treferenceNode,\n\t\t\t\t);\n\t\t\t}\n\t\t\titem.stale = false;\n\t\t}\n\n\t\tthis.updateItemInDOM(item, index);\n\n\t\tconst renderer = this.renderers.get(item.templateId);\n\n\t\tif (!renderer) {\n\t\t\tthrow new Error(\n\t\t\t\t`No renderer found for template id ${item.templateId}`,\n\t\t\t);\n\t\t}\n\n\t\trenderer?.renderElement(\n\t\t\titem.element,\n\t\t\tindex,\n\t\t\titem.row.templateData,\n\t\t\titem.size,\n\t\t);\n\n\t\tconst uri = this.dnd.getDragURI(item.element);\n\t\titem.dragStartDisposable.dispose();\n\t\titem.row.domNode.draggable = !!uri;\n\n\t\tif (uri) {\n\t\t\titem.dragStartDisposable = addDisposableListener(\n\t\t\t\titem.row.domNode,\n\t\t\t\t\"dragstart\",\n\t\t\t\t(event) => this.onDragStart(item.element, uri, event),\n\t\t\t);\n\t\t}\n\n\t\tif (this.horizontalScrolling) {\n\t\t\tthis.measureItemWidth(item);\n\t\t\tthis.eventuallyUpdateScrollWidth();\n\t\t}\n\t}\n\n\tprivate measureItemWidth(item: IItem<T>): void {\n\t\tif (!item.row || !item.row.domNode) {\n\t\t\treturn;\n\t\t}\n\n\t\titem.row.domNode.style.width = \"fit-content\";\n\t\titem.width = getContentWidth(item.row.domNode);\n\t\tconst style = getWindow(item.row.domNode).getComputedStyle(\n\t\t\titem.row.domNode,\n\t\t);\n\n\t\tif (style.paddingLeft) {\n\t\t\titem.width += Number.parseFloat(style.paddingLeft);\n\t\t}\n\n\t\tif (style.paddingRight) {\n\t\t\titem.width += Number.parseFloat(style.paddingRight);\n\t\t}\n\n\t\titem.row.domNode.style.width = \"\";\n\t}\n\n\tprivate updateItemInDOM(item: IItem<T>, index: number): void {\n\t\titem.row!.domNode.style.top = `${this.elementTop(index)}px`;\n\n\t\tif (this.setRowHeight) {\n\t\t\titem.row!.domNode.style.height = `${item.size}px`;\n\t\t}\n\n\t\tif (this.setRowLineHeight) {\n\t\t\titem.row!.domNode.style.lineHeight = `${item.size}px`;\n\t\t}\n\n\t\titem.row!.domNode.setAttribute(\"data-index\", `${index}`);\n\t\titem.row!.domNode.setAttribute(\n\t\t\t\"data-last-element\",\n\t\t\tindex === this.length - 1 ? \"true\" : \"false\",\n\t\t);\n\t\titem.row!.domNode.setAttribute(\n\t\t\t\"data-parity\",\n\t\t\tindex % 2 === 0 ? \"even\" : \"odd\",\n\t\t);\n\t\titem.row!.domNode.setAttribute(\n\t\t\t\"aria-setsize\",\n\t\t\tString(\n\t\t\t\tthis.accessibilityProvider.getSetSize(\n\t\t\t\t\titem.element,\n\t\t\t\t\tindex,\n\t\t\t\t\tthis.length,\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\t\titem.row!.domNode.setAttribute(\n\t\t\t\"aria-posinset\",\n\t\t\tString(this.accessibilityProvider.getPosInSet(item.element, index)),\n\t\t);\n\t\titem.row!.domNode.setAttribute(\"id\", this.getElementDomId(index));\n\n\t\titem.row!.domNode.classList.toggle(\"drop-target\", item.dropTarget);\n\t}\n\n\tprivate removeItemFromDOM(index: number): void {\n\t\tconst item = this.items[index];\n\t\titem.dragStartDisposable.dispose();\n\t\titem.checkedDisposable.dispose();\n\n\t\tif (item.row) {\n\t\t\tconst renderer = this.renderers.get(item.templateId);\n\n\t\t\tif (renderer && renderer.disposeElement) {\n\t\t\t\trenderer.disposeElement(\n\t\t\t\t\titem.element,\n\t\t\t\t\tindex,\n\t\t\t\t\titem.row.templateData,\n\t\t\t\t\titem.size,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.cache.release(item.row);\n\t\t\titem.row = null;\n\t\t}\n\n\t\tif (this.horizontalScrolling) {\n\t\t\tthis.eventuallyUpdateScrollWidth();\n\t\t}\n\t}\n\n\tgetScrollTop(): number {\n\t\tconst scrollPosition = this.scrollableElement.getScrollPosition();\n\t\treturn scrollPosition.scrollTop;\n\t}\n\n\tsetScrollTop(scrollTop: number, reuseAnimation?: boolean): void {\n\t\tif (this.scrollableElementUpdateDisposable) {\n\t\t\tthis.scrollableElementUpdateDisposable.dispose();\n\t\t\tthis.scrollableElementUpdateDisposable = null;\n\t\t\tthis.scrollableElement.setScrollDimensions({\n\t\t\t\tscrollHeight: this.scrollHeight,\n\t\t\t});\n\t\t}\n\n\t\tthis.scrollableElement.setScrollPosition({ scrollTop, reuseAnimation });\n\t}\n\n\tgetScrollLeft(): number {\n\t\tconst scrollPosition = this.scrollableElement.getScrollPosition();\n\t\treturn scrollPosition.scrollLeft;\n\t}\n\n\tsetScrollLeft(scrollLeft: number): void {\n\t\tif (this.scrollableElementUpdateDisposable) {\n\t\t\tthis.scrollableElementUpdateDisposable.dispose();\n\t\t\tthis.scrollableElementUpdateDisposable = null;\n\t\t\tthis.scrollableElement.setScrollDimensions({\n\t\t\t\tscrollWidth: this.scrollWidth,\n\t\t\t});\n\t\t}\n\n\t\tthis.scrollableElement.setScrollPosition({ scrollLeft });\n\t}\n\n\tget scrollTop(): number {\n\t\treturn this.getScrollTop();\n\t}\n\n\tset scrollTop(scrollTop: number) {\n\t\tthis.setScrollTop(scrollTop);\n\t}\n\n\tget scrollHeight(): number {\n\t\treturn (\n\t\t\tthis._scrollHeight +\n\t\t\t(this.horizontalScrolling ? 10 : 0) +\n\t\t\tthis.paddingBottom\n\t\t);\n\t}\n\n\t// Events\n\n\t@memoize get onMouseClick(): Event<IListMouseEvent<T>> {\n\t\treturn Event.map(\n\t\t\tthis.disposables.add(new DomEmitter(this.domNode, \"click\")).event,\n\t\t\t(e) => this.toMouseEvent(e),\n\t\t\tthis.disposables,\n\t\t);\n\t}\n\t@memoize get onMouseDblClick(): Event<IListMouseEvent<T>> {\n\t\treturn Event.map(\n\t\t\tthis.disposables.add(new DomEmitter(this.domNode, \"dblclick\"))\n\t\t\t\t.event,\n\t\t\t(e) => this.toMouseEvent(e),\n\t\t\tthis.disposables,\n\t\t);\n\t}\n\t@memoize get onMouseMiddleClick(): Event<IListMouseEvent<T>> {\n\t\treturn Event.filter(\n\t\t\tEvent.map(\n\t\t\t\tthis.disposables.add(new DomEmitter(this.domNode, \"auxclick\"))\n\t\t\t\t\t.event,\n\t\t\t\t(e) => this.toMouseEvent(e as MouseEvent),\n\t\t\t\tthis.disposables,\n\t\t\t),\n\t\t\t(e) => e.browserEvent.button === 1,\n\t\t\tthis.disposables,\n\t\t);\n\t}\n\t@memoize get onMouseUp(): Event<IListMouseEvent<T>> {\n\t\treturn Event.map(\n\t\t\tthis.disposables.add(new DomEmitter(this.domNode, \"mouseup\")).event,\n\t\t\t(e) => this.toMouseEvent(e),\n\t\t\tthis.disposables,\n\t\t);\n\t}\n\t@memoize get onMouseDown(): Event<IListMouseEvent<T>> {\n\t\treturn Event.map(\n\t\t\tthis.disposables.add(new DomEmitter(this.domNode, \"mousedown\"))\n\t\t\t\t.event,\n\t\t\t(e) => this.toMouseEvent(e),\n\t\t\tthis.disposables,\n\t\t);\n\t}\n\t@memoize get onMouseOver(): Event<IListMouseEvent<T>> {\n\t\treturn Event.map(\n\t\t\tthis.disposables.add(new DomEmitter(this.domNode, \"mouseover\"))\n\t\t\t\t.event,\n\t\t\t(e) => this.toMouseEvent(e),\n\t\t\tthis.disposables,\n\t\t);\n\t}\n\t@memoize get onMouseMove(): Event<IListMouseEvent<T>> {\n\t\treturn Event.map(\n\t\t\tthis.disposables.add(new DomEmitter(this.domNode, \"mousemove\"))\n\t\t\t\t.event,\n\t\t\t(e) => this.toMouseEvent(e),\n\t\t\tthis.disposables,\n\t\t);\n\t}\n\t@memoize get onMouseOut(): Event<IListMouseEvent<T>> {\n\t\treturn Event.map(\n\t\t\tthis.disposables.add(new DomEmitter(this.domNode, \"mouseout\"))\n\t\t\t\t.event,\n\t\t\t(e) => this.toMouseEvent(e),\n\t\t\tthis.disposables,\n\t\t);\n\t}\n\t@memoize get onContextMenu(): Event<\n\t\tIListMouseEvent<T> | IListGestureEvent<T>\n\t> {\n\t\treturn Event.any<IListMouseEvent<any> | IListGestureEvent<any>>(\n\t\t\tEvent.map(\n\t\t\t\tthis.disposables.add(\n\t\t\t\t\tnew DomEmitter(this.domNode, \"contextmenu\"),\n\t\t\t\t).event,\n\t\t\t\t(e) => this.toMouseEvent(e),\n\t\t\t\tthis.disposables,\n\t\t\t),\n\t\t\tEvent.map(\n\t\t\t\tthis.disposables.add(\n\t\t\t\t\tnew DomEmitter(this.domNode, TouchEventType.Contextmenu),\n\t\t\t\t).event as Event<GestureEvent>,\n\t\t\t\t(e) => this.toGestureEvent(e),\n\t\t\t\tthis.disposables,\n\t\t\t),\n\t\t);\n\t}\n\t@memoize get onTouchStart(): Event<IListTouchEvent<T>> {\n\t\treturn Event.map(\n\t\t\tthis.disposables.add(new DomEmitter(this.domNode, \"touchstart\"))\n\t\t\t\t.event,\n\t\t\t(e) => this.toTouchEvent(e),\n\t\t\tthis.disposables,\n\t\t);\n\t}\n\t@memoize get onTap(): Event<IListGestureEvent<T>> {\n\t\treturn Event.map(\n\t\t\tthis.disposables.add(\n\t\t\t\tnew DomEmitter(this.rowsContainer, TouchEventType.Tap),\n\t\t\t).event,\n\t\t\t(e) => this.toGestureEvent(e as GestureEvent),\n\t\t\tthis.disposables,\n\t\t);\n\t}\n\n\tprivate toMouseEvent(browserEvent: MouseEvent): IListMouseEvent<T> {\n\t\tconst index = this.getItemIndexFromEventTarget(\n\t\t\tbrowserEvent.target || null,\n\t\t);\n\t\tconst item =\n\t\t\ttypeof index === \"undefined\" ? undefined : this.items[index];\n\t\tconst element = item && item.element;\n\t\treturn { browserEvent, index, element };\n\t}\n\n\tprivate toTouchEvent(browserEvent: TouchEvent): IListTouchEvent<T> {\n\t\tconst index = this.getItemIndexFromEventTarget(\n\t\t\tbrowserEvent.target || null,\n\t\t);\n\t\tconst item =\n\t\t\ttypeof index === \"undefined\" ? undefined : this.items[index];\n\t\tconst element = item && item.element;\n\t\treturn { browserEvent, index, element };\n\t}\n\n\tprivate toGestureEvent(browserEvent: GestureEvent): IListGestureEvent<T> {\n\t\tconst index = this.getItemIndexFromEventTarget(\n\t\t\tbrowserEvent.initialTarget || null,\n\t\t);\n\t\tconst item =\n\t\t\ttypeof index === \"undefined\" ? undefined : this.items[index];\n\t\tconst element = item && item.element;\n\t\treturn { browserEvent, index, element };\n\t}\n\n\tprivate toDragEvent(browserEvent: DragEvent): IListDragEvent<T> {\n\t\tconst index = this.getItemIndexFromEventTarget(\n\t\t\tbrowserEvent.target || null,\n\t\t);\n\t\tconst item =\n\t\t\ttypeof index === \"undefined\" ? undefined : this.items[index];\n\t\tconst element = item && item.element;\n\t\tconst sector = this.getTargetSector(browserEvent, index);\n\t\treturn { browserEvent, index, element, sector };\n\t}\n\n\tprivate onScroll(e: ScrollEvent): void {\n\t\ttry {\n\t\t\tconst previousRenderRange = this.getRenderRange(\n\t\t\t\tthis.lastRenderTop,\n\t\t\t\tthis.lastRenderHeight,\n\t\t\t);\n\t\t\tthis.render(\n\t\t\t\tpreviousRenderRange,\n\t\t\t\te.scrollTop,\n\t\t\t\te.height,\n\t\t\t\te.scrollLeft,\n\t\t\t\te.scrollWidth,\n\t\t\t);\n\n\t\t\tif (this.supportDynamicHeights) {\n\t\t\t\tthis._rerender(e.scrollTop, e.height, e.inSmoothScrolling);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error(\"Got bad scroll event:\", e);\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\tprivate onTouchChange(event: GestureEvent): void {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tthis.scrollTop -= event.translationY;\n\t}\n\n\t// DND\n\n\tprivate onDragStart(element: T, uri: string, event: DragEvent): void {\n\t\tif (!event.dataTransfer) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst elements = this.dnd.getDragElements(element);\n\n\t\tevent.dataTransfer.effectAllowed = \"copyMove\";\n\t\tevent.dataTransfer.setData(DataTransfers.TEXT, uri);\n\n\t\tif (event.dataTransfer.setDragImage) {\n\t\t\tlet label: string | undefined;\n\n\t\t\tif (this.dnd.getDragLabel) {\n\t\t\t\tlabel = this.dnd.getDragLabel(elements, event);\n\t\t\t}\n\n\t\t\tif (typeof label === \"undefined\") {\n\t\t\t\tlabel = String(elements.length);\n\t\t\t}\n\n\t\t\tconst dragImage = $(\".monaco-drag-image\");\n\t\t\tdragImage.textContent = label;\n\n\t\t\tconst getDragImageContainer = (e: HTMLElement | null) => {\n\t\t\t\twhile (e && !e.classList.contains(\"monaco-workbench\")) {\n\t\t\t\t\te = e.parentElement;\n\t\t\t\t}\n\t\t\t\treturn e || this.domNode.ownerDocument;\n\t\t\t};\n\n\t\t\tconst container = getDragImageContainer(this.domNode);\n\t\t\tcontainer.appendChild(dragImage);\n\t\t\tevent.dataTransfer.setDragImage(dragImage, -10, -10);\n\t\t\tsetTimeout(() => dragImage.remove(), 0);\n\t\t}\n\n\t\tthis.domNode.classList.add(\"dragging\");\n\t\tthis.currentDragData = new ElementsDragAndDropData(elements);\n\t\tStaticDND.CurrentDragAndDropData = new ExternalElementsDragAndDropData(\n\t\t\telements,\n\t\t);\n\n\t\tthis.dnd.onDragStart?.(this.currentDragData, event);\n\t}\n\n\tprivate onDragOver(event: IListDragEvent<T>): boolean {\n\t\tevent.browserEvent.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n\n\t\tthis.onDragLeaveTimeout.dispose();\n\n\t\tif (\n\t\t\tStaticDND.CurrentDragAndDropData &&\n\t\t\tStaticDND.CurrentDragAndDropData.getData() === \"vscode-ui\"\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.setupDragAndDropScrollTopAnimation(event.browserEvent);\n\n\t\tif (!event.browserEvent.dataTransfer) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Drag over from outside\n\t\tif (!this.currentDragData) {\n\t\t\tif (StaticDND.CurrentDragAndDropData) {\n\t\t\t\t// Drag over from another list\n\t\t\t\tthis.currentDragData = StaticDND.CurrentDragAndDropData;\n\t\t\t} else {\n\t\t\t\t// Drag over from the desktop\n\t\t\t\tif (!event.browserEvent.dataTransfer.types) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tthis.currentDragData = new NativeDragAndDropData();\n\t\t\t}\n\t\t}\n\n\t\tconst result = this.dnd.onDragOver(\n\t\t\tthis.currentDragData,\n\t\t\tevent.element,\n\t\t\tevent.index,\n\t\t\tevent.sector,\n\t\t\tevent.browserEvent,\n\t\t);\n\t\tthis.canDrop = typeof result === \"boolean\" ? result : result.accept;\n\n\t\tif (!this.canDrop) {\n\t\t\tthis.currentDragFeedback = undefined;\n\t\t\tthis.currentDragFeedbackDisposable.dispose();\n\t\t\treturn false;\n\t\t}\n\n\t\tevent.browserEvent.dataTransfer.dropEffect =\n\t\t\ttypeof result !== \"boolean\" &&\n\t\t\tresult.effect?.type === ListDragOverEffectType.Copy\n\t\t\t\t? \"copy\"\n\t\t\t\t: \"move\";\n\n\t\tlet feedback: number[];\n\n\t\tif (typeof result !== \"boolean\" && result.feedback) {\n\t\t\tfeedback = result.feedback;\n\t\t} else if (typeof event.index === \"undefined\") {\n\t\t\tfeedback = [-1];\n\t\t} else {\n\t\t\tfeedback = [event.index];\n\t\t}\n\n\t\t// sanitize feedback list\n\t\tfeedback = distinct(feedback)\n\t\t\t.filter((i) => i >= -1 && i < this.length)\n\t\t\t.sort((a, b) => a - b);\n\t\tfeedback = feedback[0] === -1 ? [-1] : feedback;\n\n\t\tlet dragOverEffectPosition =\n\t\t\ttypeof result !== \"boolean\" &&\n\t\t\tresult.effect &&\n\t\t\tresult.effect.position\n\t\t\t\t? result.effect.position\n\t\t\t\t: ListDragOverEffectPosition.Over;\n\n\t\tif (\n\t\t\tequalsDragFeedback(this.currentDragFeedback, feedback) &&\n\t\t\tthis.currentDragFeedbackPosition === dragOverEffectPosition\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\n\t\tthis.currentDragFeedback = feedback;\n\t\tthis.currentDragFeedbackPosition = dragOverEffectPosition;\n\t\tthis.currentDragFeedbackDisposable.dispose();\n\n\t\tif (feedback[0] === -1) {\n\t\t\t// entire list feedback\n\t\t\tthis.domNode.classList.add(dragOverEffectPosition);\n\t\t\tthis.rowsContainer.classList.add(dragOverEffectPosition);\n\t\t\tthis.currentDragFeedbackDisposable = toDisposable(() => {\n\t\t\t\tthis.domNode.classList.remove(dragOverEffectPosition);\n\t\t\t\tthis.rowsContainer.classList.remove(dragOverEffectPosition);\n\t\t\t});\n\t\t} else {\n\t\t\tif (\n\t\t\t\tfeedback.length > 1 &&\n\t\t\t\tdragOverEffectPosition !== ListDragOverEffectPosition.Over\n\t\t\t) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\"Can't use multiple feedbacks with position different than 'over'\",\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Make sure there is no flicker when moving between two items\n\t\t\t// Always use the before feedback if possible\n\t\t\tif (dragOverEffectPosition === ListDragOverEffectPosition.After) {\n\t\t\t\tif (feedback[0] < this.length - 1) {\n\t\t\t\t\tfeedback[0] += 1;\n\t\t\t\t\tdragOverEffectPosition = ListDragOverEffectPosition.Before;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const index of feedback) {\n\t\t\t\tconst item = this.items[index]!;\n\t\t\t\titem.dropTarget = true;\n\n\t\t\t\titem.row?.domNode.classList.add(dragOverEffectPosition);\n\t\t\t}\n\n\t\t\tthis.currentDragFeedbackDisposable = toDisposable(() => {\n\t\t\t\tfor (const index of feedback) {\n\t\t\t\t\tconst item = this.items[index]!;\n\t\t\t\t\titem.dropTarget = false;\n\n\t\t\t\t\titem.row?.domNode.classList.remove(dragOverEffectPosition);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate onDragLeave(event: IListDragEvent<T>): void {\n\t\tthis.onDragLeaveTimeout.dispose();\n\t\tthis.onDragLeaveTimeout = disposableTimeout(\n\t\t\t() => this.clearDragOverFeedback(),\n\t\t\t100,\n\t\t\tthis.disposables,\n\t\t);\n\t\tif (this.currentDragData) {\n\t\t\tthis.dnd.onDragLeave?.(\n\t\t\t\tthis.currentDragData,\n\t\t\t\tevent.element,\n\t\t\t\tevent.index,\n\t\t\t\tevent.browserEvent,\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate onDrop(event: IListDragEvent<T>): void {\n\t\tif (!this.canDrop) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst dragData = this.currentDragData;\n\t\tthis.teardownDragAndDropScrollTopAnimation();\n\t\tthis.clearDragOverFeedback();\n\t\tthis.domNode.classList.remove(\"dragging\");\n\t\tthis.currentDragData = undefined;\n\t\tStaticDND.CurrentDragAndDropData = undefined;\n\n\t\tif (!dragData || !event.browserEvent.dataTransfer) {\n\t\t\treturn;\n\t\t}\n\n\t\tevent.browserEvent.preventDefault();\n\t\tdragData.update(event.browserEvent.dataTransfer);\n\t\tthis.dnd.drop(\n\t\t\tdragData,\n\t\t\tevent.element,\n\t\t\tevent.index,\n\t\t\tevent.sector,\n\t\t\tevent.browserEvent,\n\t\t);\n\t}\n\n\tprivate onDragEnd(event: DragEvent): void {\n\t\tthis.canDrop = false;\n\t\tthis.teardownDragAndDropScrollTopAnimation();\n\t\tthis.clearDragOverFeedback();\n\t\tthis.domNode.classList.remove(\"dragging\");\n\t\tthis.currentDragData = undefined;\n\t\tStaticDND.CurrentDragAndDropData = undefined;\n\n\t\tthis.dnd.onDragEnd?.(event);\n\t}\n\n\tprivate clearDragOverFeedback(): void {\n\t\tthis.currentDragFeedback = undefined;\n\t\tthis.currentDragFeedbackPosition = undefined;\n\t\tthis.currentDragFeedbackDisposable.dispose();\n\t\tthis.currentDragFeedbackDisposable = Disposable.None;\n\t}\n\n\t// DND scroll top animation\n\n\tprivate setupDragAndDropScrollTopAnimation(event: DragEvent): void {\n\t\tif (!this.dragOverAnimationDisposable) {\n\t\t\tconst viewTop = getTopLeftOffset(this.domNode).top;\n\t\t\tthis.dragOverAnimationDisposable = animate(\n\t\t\t\tgetWindow(this.domNode),\n\t\t\t\tthis.animateDragAndDropScrollTop.bind(this, viewTop),\n\t\t\t);\n\t\t}\n\n\t\tthis.dragOverAnimationStopDisposable.dispose();\n\t\tthis.dragOverAnimationStopDisposable = disposableTimeout(\n\t\t\t() => {\n\t\t\t\tif (this.dragOverAnimationDisposable) {\n\t\t\t\t\tthis.dragOverAnimationDisposable.dispose();\n\t\t\t\t\tthis.dragOverAnimationDisposable = undefined;\n\t\t\t\t}\n\t\t\t},\n\t\t\t1000,\n\t\t\tthis.disposables,\n\t\t);\n\n\t\tthis.dragOverMouseY = event.pageY;\n\t}\n\n\tprivate animateDragAndDropScrollTop(viewTop: number): void {\n\t\tif (this.dragOverMouseY === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst diff = this.dragOverMouseY - viewTop;\n\t\tconst upperLimit = this.renderHeight - 35;\n\n\t\tif (diff < 35) {\n\t\t\tthis.scrollTop += Math.max(-14, Math.floor(0.3 * (diff - 35)));\n\t\t} else if (diff > upperLimit) {\n\t\t\tthis.scrollTop += Math.min(\n\t\t\t\t14,\n\t\t\t\tMath.floor(0.3 * (diff - upperLimit)),\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate teardownDragAndDropScrollTopAnimation(): void {\n\t\tthis.dragOverAnimationStopDisposable.dispose();\n\n\t\tif (this.dragOverAnimationDisposable) {\n\t\t\tthis.dragOverAnimationDisposable.dispose();\n\t\t\tthis.dragOverAnimationDisposable = undefined;\n\t\t}\n\t}\n\n\t// Util\n\n\tprivate getTargetSector(\n\t\tbrowserEvent: DragEvent,\n\t\ttargetIndex: number | undefined,\n\t): ListViewTargetSector | undefined {\n\t\tif (targetIndex === undefined) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst relativePosition =\n\t\t\tbrowserEvent.offsetY / this.items[targetIndex].size;\n\t\tconst sector = Math.floor(relativePosition / 0.25);\n\t\treturn clamp(sector, 0, 3);\n\t}\n\n\tprivate getItemIndexFromEventTarget(\n\t\ttarget: EventTarget | null,\n\t): number | undefined {\n\t\tconst scrollableElement = this.scrollableElement.getDomNode();\n\t\tlet element: HTMLElement | SVGElement | null = target as\n\t\t\t| HTMLElement\n\t\t\t| SVGElement\n\t\t\t| null;\n\n\t\twhile (\n\t\t\t(isHTMLElement(element) || isSVGElement(element)) &&\n\t\t\telement !== this.rowsContainer &&\n\t\t\tscrollableElement.contains(element)\n\t\t) {\n\t\t\tconst rawIndex = element.getAttribute(\"data-index\");\n\n\t\t\tif (rawIndex) {\n\t\t\t\tconst index = Number(rawIndex);\n\n\t\t\t\tif (!isNaN(index)) {\n\t\t\t\t\treturn index;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\telement = element.parentElement;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprotected getRenderRange(renderTop: number, renderHeight: number): IRange {\n\t\treturn {\n\t\t\tstart: this.rangeMap.indexAt(renderTop),\n\t\t\tend: this.rangeMap.indexAfter(renderTop + renderHeight - 1),\n\t\t};\n\t}\n\n\t/**\n\t * Given a stable rendered state, checks every rendered element whether it needs\n\t * to be probed for dynamic height. Adjusts scroll height and top if necessary.\n\t */\n\tprotected _rerender(\n\t\trenderTop: number,\n\t\trenderHeight: number,\n\t\tinSmoothScrolling?: boolean,\n\t): void {\n\t\tconst previousRenderRange = this.getRenderRange(\n\t\t\trenderTop,\n\t\t\trenderHeight,\n\t\t);\n\n\t\t// Let's remember the second element's position, this helps in scrolling up\n\t\t// and preserving a linear upwards scroll movement\n\t\tlet anchorElementIndex: number | undefined;\n\t\tlet anchorElementTopDelta: number | undefined;\n\n\t\tif (renderTop === this.elementTop(previousRenderRange.start)) {\n\t\t\tanchorElementIndex = previousRenderRange.start;\n\t\t\tanchorElementTopDelta = 0;\n\t\t} else if (previousRenderRange.end - previousRenderRange.start > 1) {\n\t\t\tanchorElementIndex = previousRenderRange.start + 1;\n\t\t\tanchorElementTopDelta =\n\t\t\t\tthis.elementTop(anchorElementIndex) - renderTop;\n\t\t}\n\n\t\tlet heightDiff = 0;\n\n\t\twhile (true) {\n\t\t\tconst renderRange = this.getRenderRange(renderTop, renderHeight);\n\n\t\t\tlet didChange = false;\n\n\t\t\tfor (let i = renderRange.start; i < renderRange.end; i++) {\n\t\t\t\tconst diff = this.probeDynamicHeight(i);\n\n\t\t\t\tif (diff !== 0) {\n\t\t\t\t\tthis.rangeMap.splice(i, 1, [this.items[i]]);\n\t\t\t\t}\n\n\t\t\t\theightDiff += diff;\n\t\t\t\tdidChange = didChange || diff !== 0;\n\t\t\t}\n\n\t\t\tif (!didChange) {\n\t\t\t\tif (heightDiff !== 0) {\n\t\t\t\t\tthis.eventuallyUpdateScrollDimensions();\n\t\t\t\t}\n\n\t\t\t\tconst unrenderRanges = Range.relativeComplement(\n\t\t\t\t\tpreviousRenderRange,\n\t\t\t\t\trenderRange,\n\t\t\t\t);\n\n\t\t\t\tfor (const range of unrenderRanges) {\n\t\t\t\t\tfor (let i = range.start; i < range.end; i++) {\n\t\t\t\t\t\tif (this.items[i].row) {\n\t\t\t\t\t\t\tthis.removeItemFromDOM(i);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst renderRanges = Range.relativeComplement(\n\t\t\t\t\trenderRange,\n\t\t\t\t\tpreviousRenderRange,\n\t\t\t\t).reverse();\n\n\t\t\t\tfor (const range of renderRanges) {\n\t\t\t\t\tfor (let i = range.end - 1; i >= range.start; i--) {\n\t\t\t\t\t\tthis.insertItemInDOM(i);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (let i = renderRange.start; i < renderRange.end; i++) {\n\t\t\t\t\tif (this.items[i].row) {\n\t\t\t\t\t\tthis.updateItemInDOM(this.items[i], i);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (typeof anchorElementIndex === \"number\") {\n\t\t\t\t\t// To compute a destination scroll top, we need to take into account the current smooth scrolling\n\t\t\t\t\t// animation, and then reuse it with a new target (to avoid prolonging the scroll)\n\t\t\t\t\t// See https://github.com/microsoft/vscode/issues/104144\n\t\t\t\t\t// See https://github.com/microsoft/vscode/pull/104284\n\t\t\t\t\t// See https://github.com/microsoft/vscode/issues/107704\n\t\t\t\t\tconst deltaScrollTop =\n\t\t\t\t\t\tthis.scrollable.getFutureScrollPosition().scrollTop -\n\t\t\t\t\t\trenderTop;\n\t\t\t\t\tconst newScrollTop =\n\t\t\t\t\t\tthis.elementTop(anchorElementIndex) -\n\t\t\t\t\t\tanchorElementTopDelta! +\n\t\t\t\t\t\tdeltaScrollTop;\n\t\t\t\t\tthis.setScrollTop(newScrollTop, inSmoothScrolling);\n\t\t\t\t}\n\n\t\t\t\tthis._onDidChangeContentHeight.fire(this.contentHeight);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate probeDynamicHeight(index: number): number {\n\t\tconst item = this.items[index];\n\n\t\tif (!!this.virtualDelegate.getDynamicHeight) {\n\t\t\tconst newSize = this.virtualDelegate.getDynamicHeight(item.element);\n\t\t\tif (newSize !== null) {\n\t\t\t\tconst size = item.size;\n\t\t\t\titem.size = newSize;\n\t\t\t\titem.lastDynamicHeightWidth = this.renderWidth;\n\t\t\t\treturn newSize - size;\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\t!item.hasDynamicHeight ||\n\t\t\titem.lastDynamicHeightWidth === this.renderWidth\n\t\t) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (\n\t\t\t!!this.virtualDelegate.hasDynamicHeight &&\n\t\t\t!this.virtualDelegate.hasDynamicHeight(item.element)\n\t\t) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tconst size = item.size;\n\n\t\tif (item.row) {\n\t\t\titem.row.domNode.style.height = \"\";\n\t\t\titem.size = item.row.domNode.offsetHeight;\n\t\t\tif (\n\t\t\t\titem.size === 0 &&\n\t\t\t\t!isAncestor(\n\t\t\t\t\titem.row.domNode,\n\t\t\t\t\tgetWindow(item.row.domNode).document.body,\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t\"Measuring item node that is not in DOM! Add ListView to the DOM before measuring row height!\",\n\t\t\t\t\tnew Error().stack,\n\t\t\t\t);\n\t\t\t}\n\t\t\titem.lastDynamicHeightWidth = this.renderWidth;\n\t\t\treturn item.size - size;\n\t\t}\n\n\t\tconst { row } = this.cache.alloc(item.templateId);\n\t\trow.domNode.style.height = \"\";\n\t\tthis.rowsContainer.appendChild(row.domNode);\n\n\t\tconst renderer = this.renderers.get(item.templateId);\n\n\t\tif (!renderer) {\n\t\t\tthrow new BugIndicatingError(\n\t\t\t\t\"Missing renderer for templateId: \" + item.templateId,\n\t\t\t);\n\t\t}\n\n\t\trenderer.renderElement(\n\t\t\titem.element,\n\t\t\tindex,\n\t\t\trow.templateData,\n\t\t\tundefined,\n\t\t);\n\t\titem.size = row.domNode.offsetHeight;\n\t\trenderer.disposeElement?.(\n\t\t\titem.element,\n\t\t\tindex,\n\t\t\trow.templateData,\n\t\t\tundefined,\n\t\t);\n\n\t\tthis.virtualDelegate.setDynamicHeight?.(item.element, item.size);\n\n\t\titem.lastDynamicHeightWidth = this.renderWidth;\n\t\trow.domNode.remove();\n\t\tthis.cache.release(row);\n\n\t\treturn item.size - size;\n\t}\n\n\tgetElementDomId(index: number): string {\n\t\treturn `${this.domId}_${index}`;\n\t}\n\n\t// Dispose\n\n\tdispose() {\n\t\tfor (const item of this.items) {\n\t\t\titem.dragStartDisposable.dispose();\n\t\t\titem.checkedDisposable.dispose();\n\n\t\t\tif (item.row) {\n\t\t\t\tconst renderer = this.renderers.get(item.row.templateId);\n\t\t\t\tif (renderer) {\n\t\t\t\t\trenderer.disposeElement?.(\n\t\t\t\t\t\titem.element,\n\t\t\t\t\t\t-1,\n\t\t\t\t\t\titem.row.templateData,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t);\n\t\t\t\t\trenderer.disposeTemplate(item.row.templateData);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.items = [];\n\n\t\tthis.domNode?.remove();\n\n\t\tthis.dragOverAnimationDisposable?.dispose();\n\t\tthis.disposables.dispose();\n\t}\n}\n"],
  "mappings": "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",
  "names": ["ListViewTargetSector", "checked", "size"]
}
