{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/browser/ui/dialog/dialog.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { $, addDisposableListener, clearNode, EventHelper, EventType, getWindow, hide, isActiveElement, isAncestor, show } from '../../dom.js';\nimport { StandardKeyboardEvent } from '../../keyboardEvent.js';\nimport { ActionBar } from '../actionbar/actionbar.js';\nimport { ButtonBar, ButtonWithDescription, IButtonStyles } from '../button/button.js';\nimport { ICheckboxStyles, Checkbox } from '../toggle/toggle.js';\nimport { IInputBoxStyles, InputBox } from '../inputbox/inputBox.js';\nimport { Action } from '../../../common/actions.js';\nimport { Codicon } from '../../../common/codicons.js';\nimport { ThemeIcon } from '../../../common/themables.js';\nimport { KeyCode, KeyMod } from '../../../common/keyCodes.js';\nimport { mnemonicButtonLabel } from '../../../common/labels.js';\nimport { Disposable } from '../../../common/lifecycle.js';\nimport { isLinux, isMacintosh, isWindows } from '../../../common/platform.js';\nimport './dialog.css';\nimport * as nls from '../../../../nls.js';\n\nexport interface IDialogInputOptions {\n\treadonly placeholder?: string;\n\treadonly type?: 'text' | 'password';\n\treadonly value?: string;\n}\n\nexport interface IDialogOptions {\n\treadonly cancelId?: number;\n\treadonly detail?: string;\n\treadonly checkboxLabel?: string;\n\treadonly checkboxChecked?: boolean;\n\treadonly type?: 'none' | 'info' | 'error' | 'question' | 'warning' | 'pending';\n\treadonly inputs?: IDialogInputOptions[];\n\treadonly keyEventProcessor?: (event: StandardKeyboardEvent) => void;\n\treadonly renderBody?: (container: HTMLElement) => void;\n\treadonly icon?: ThemeIcon;\n\treadonly buttonDetails?: string[];\n\treadonly disableCloseAction?: boolean;\n\treadonly disableDefaultAction?: boolean;\n\treadonly buttonStyles: IButtonStyles;\n\treadonly checkboxStyles: ICheckboxStyles;\n\treadonly inputBoxStyles: IInputBoxStyles;\n\treadonly dialogStyles: IDialogStyles;\n}\n\nexport interface IDialogResult {\n\treadonly button: number;\n\treadonly checkboxChecked?: boolean;\n\treadonly values?: string[];\n}\n\nexport interface IDialogStyles {\n\treadonly dialogForeground: string | undefined;\n\treadonly dialogBackground: string | undefined;\n\treadonly dialogShadow: string | undefined;\n\treadonly dialogBorder: string | undefined;\n\treadonly errorIconForeground: string | undefined;\n\treadonly warningIconForeground: string | undefined;\n\treadonly infoIconForeground: string | undefined;\n\treadonly textLinkForeground: string | undefined;\n}\n\ninterface ButtonMapEntry {\n\treadonly label: string;\n\treadonly index: number;\n}\n\nexport class Dialog extends Disposable {\n\tprivate readonly element: HTMLElement;\n\tprivate readonly shadowElement: HTMLElement;\n\tprivate modalElement: HTMLElement | undefined;\n\tprivate readonly buttonsContainer: HTMLElement;\n\tprivate readonly messageDetailElement: HTMLElement;\n\tprivate readonly messageContainer: HTMLElement;\n\tprivate readonly iconElement: HTMLElement;\n\tprivate readonly checkbox: Checkbox | undefined;\n\tprivate readonly toolbarContainer: HTMLElement;\n\tprivate buttonBar: ButtonBar | undefined;\n\tprivate focusToReturn: HTMLElement | undefined;\n\tprivate readonly inputs: InputBox[];\n\tprivate readonly buttons: string[];\n\tprivate readonly buttonStyles: IButtonStyles;\n\n\tconstructor(private container: HTMLElement, private message: string, buttons: string[] | undefined, private readonly options: IDialogOptions) {\n\t\tsuper();\n\n\t\tthis.modalElement = this.container.appendChild($(`.monaco-dialog-modal-block.dimmed`));\n\t\tthis.shadowElement = this.modalElement.appendChild($('.dialog-shadow'));\n\t\tthis.element = this.shadowElement.appendChild($('.monaco-dialog-box'));\n\t\tthis.element.setAttribute('role', 'dialog');\n\t\tthis.element.tabIndex = -1;\n\t\thide(this.element);\n\n\t\tthis.buttonStyles = options.buttonStyles;\n\n\t\tif (Array.isArray(buttons) && buttons.length > 0) {\n\t\t\tthis.buttons = buttons;\n\t\t} else if (!this.options.disableDefaultAction) {\n\t\t\tthis.buttons = [nls.localize('ok', \"OK\")];\n\t\t} else {\n\t\t\tthis.buttons = [];\n\t\t}\n\t\tconst buttonsRowElement = this.element.appendChild($('.dialog-buttons-row'));\n\t\tthis.buttonsContainer = buttonsRowElement.appendChild($('.dialog-buttons'));\n\n\t\tconst messageRowElement = this.element.appendChild($('.dialog-message-row'));\n\t\tthis.iconElement = messageRowElement.appendChild($('#monaco-dialog-icon.dialog-icon'));\n\t\tthis.iconElement.setAttribute('aria-label', this.getIconAriaLabel());\n\t\tthis.messageContainer = messageRowElement.appendChild($('.dialog-message-container'));\n\n\t\tif (this.options.detail || this.options.renderBody) {\n\t\t\tconst messageElement = this.messageContainer.appendChild($('.dialog-message'));\n\t\t\tconst messageTextElement = messageElement.appendChild($('#monaco-dialog-message-text.dialog-message-text'));\n\t\t\tmessageTextElement.innerText = this.message;\n\t\t}\n\n\t\tthis.messageDetailElement = this.messageContainer.appendChild($('#monaco-dialog-message-detail.dialog-message-detail'));\n\t\tif (this.options.detail || !this.options.renderBody) {\n\t\t\tthis.messageDetailElement.innerText = this.options.detail ? this.options.detail : message;\n\t\t} else {\n\t\t\tthis.messageDetailElement.style.display = 'none';\n\t\t}\n\n\t\tif (this.options.renderBody) {\n\t\t\tconst customBody = this.messageContainer.appendChild($('#monaco-dialog-message-body.dialog-message-body'));\n\t\t\tthis.options.renderBody(customBody);\n\n\t\t\tfor (const el of this.messageContainer.querySelectorAll('a')) {\n\t\t\t\tel.tabIndex = 0;\n\t\t\t}\n\t\t}\n\n\t\tif (this.options.inputs) {\n\t\t\tthis.inputs = this.options.inputs.map(input => {\n\t\t\t\tconst inputRowElement = this.messageContainer.appendChild($('.dialog-message-input'));\n\n\t\t\t\tconst inputBox = this._register(new InputBox(inputRowElement, undefined, {\n\t\t\t\t\tplaceholder: input.placeholder,\n\t\t\t\t\ttype: input.type ?? 'text',\n\t\t\t\t\tinputBoxStyles: options.inputBoxStyles\n\t\t\t\t}));\n\n\t\t\t\tif (input.value) {\n\t\t\t\t\tinputBox.value = input.value;\n\t\t\t\t}\n\n\t\t\t\treturn inputBox;\n\t\t\t});\n\t\t} else {\n\t\t\tthis.inputs = [];\n\t\t}\n\n\t\tif (this.options.checkboxLabel) {\n\t\t\tconst checkboxRowElement = this.messageContainer.appendChild($('.dialog-checkbox-row'));\n\n\t\t\tconst checkbox = this.checkbox = this._register(\n\t\t\t\tnew Checkbox(this.options.checkboxLabel, !!this.options.checkboxChecked, options.checkboxStyles)\n\t\t\t);\n\n\t\t\tcheckboxRowElement.appendChild(checkbox.domNode);\n\n\t\t\tconst checkboxMessageElement = checkboxRowElement.appendChild($('.dialog-checkbox-message'));\n\t\t\tcheckboxMessageElement.innerText = this.options.checkboxLabel;\n\t\t\tthis._register(addDisposableListener(checkboxMessageElement, EventType.CLICK, () => checkbox.checked = !checkbox.checked));\n\t\t}\n\n\t\tconst toolbarRowElement = this.element.appendChild($('.dialog-toolbar-row'));\n\t\tthis.toolbarContainer = toolbarRowElement.appendChild($('.dialog-toolbar'));\n\n\t\tthis.applyStyles();\n\t}\n\n\tprivate getIconAriaLabel(): string {\n\t\tlet typeLabel = nls.localize('dialogInfoMessage', 'Info');\n\t\tswitch (this.options.type) {\n\t\t\tcase 'error':\n\t\t\t\ttypeLabel = nls.localize('dialogErrorMessage', 'Error');\n\t\t\t\tbreak;\n\t\t\tcase 'warning':\n\t\t\t\ttypeLabel = nls.localize('dialogWarningMessage', 'Warning');\n\t\t\t\tbreak;\n\t\t\tcase 'pending':\n\t\t\t\ttypeLabel = nls.localize('dialogPendingMessage', 'In Progress');\n\t\t\t\tbreak;\n\t\t\tcase 'none':\n\t\t\tcase 'info':\n\t\t\tcase 'question':\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn typeLabel;\n\t}\n\n\tupdateMessage(message: string): void {\n\t\tthis.messageDetailElement.innerText = message;\n\t}\n\n\tasync show(): Promise<IDialogResult> {\n\t\tthis.focusToReturn = this.container.ownerDocument.activeElement as HTMLElement;\n\n\t\treturn new Promise<IDialogResult>((resolve) => {\n\t\t\tclearNode(this.buttonsContainer);\n\n\t\t\tconst buttonBar = this.buttonBar = this._register(new ButtonBar(this.buttonsContainer));\n\t\t\tconst buttonMap = this.rearrangeButtons(this.buttons, this.options.cancelId);\n\n\t\t\t// Handle button clicks\n\t\t\tbuttonMap.forEach((entry, index) => {\n\t\t\t\tconst primary = buttonMap[index].index === 0;\n\t\t\t\tconst button = this.options.buttonDetails ? this._register(buttonBar.addButtonWithDescription({ secondary: !primary, ...this.buttonStyles })) : this._register(buttonBar.addButton({ secondary: !primary, ...this.buttonStyles }));\n\t\t\t\tbutton.label = mnemonicButtonLabel(buttonMap[index].label, true);\n\t\t\t\tif (button instanceof ButtonWithDescription) {\n\t\t\t\t\tbutton.description = this.options.buttonDetails![buttonMap[index].index];\n\t\t\t\t}\n\t\t\t\tthis._register(button.onDidClick(e => {\n\t\t\t\t\tif (e) {\n\t\t\t\t\t\tEventHelper.stop(e);\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve({\n\t\t\t\t\t\tbutton: buttonMap[index].index,\n\t\t\t\t\t\tcheckboxChecked: this.checkbox ? this.checkbox.checked : undefined,\n\t\t\t\t\t\tvalues: this.inputs.length > 0 ? this.inputs.map(input => input.value) : undefined\n\t\t\t\t\t});\n\t\t\t\t}));\n\t\t\t});\n\n\t\t\t// Handle keyboard events globally: Tab, Arrow-Left/Right\n\t\t\tconst window = getWindow(this.container);\n\t\t\tthis._register(addDisposableListener(window, 'keydown', e => {\n\t\t\t\tconst evt = new StandardKeyboardEvent(e);\n\n\t\t\t\tif (evt.equals(KeyMod.Alt)) {\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t}\n\n\t\t\t\tif (evt.equals(KeyCode.Enter)) {\n\n\t\t\t\t\t// Enter in input field should OK the dialog\n\t\t\t\t\tif (this.inputs.some(input => input.hasFocus())) {\n\t\t\t\t\t\tEventHelper.stop(e);\n\n\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\tbutton: buttonMap.find(button => button.index !== this.options.cancelId)?.index ?? 0,\n\t\t\t\t\t\t\tcheckboxChecked: this.checkbox ? this.checkbox.checked : undefined,\n\t\t\t\t\t\t\tvalues: this.inputs.length > 0 ? this.inputs.map(input => input.value) : undefined\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\treturn; // leave default handling\n\t\t\t\t}\n\n\t\t\t\tif (evt.equals(KeyCode.Space)) {\n\t\t\t\t\treturn; // leave default handling\n\t\t\t\t}\n\n\t\t\t\tlet eventHandled = false;\n\n\t\t\t\t// Focus: Next / Previous\n\t\t\t\tif (evt.equals(KeyCode.Tab) || evt.equals(KeyCode.RightArrow) || evt.equals(KeyMod.Shift | KeyCode.Tab) || evt.equals(KeyCode.LeftArrow)) {\n\n\t\t\t\t\t// Build a list of focusable elements in their visual order\n\t\t\t\t\tconst focusableElements: { focus: () => void }[] = [];\n\t\t\t\t\tlet focusedIndex = -1;\n\n\t\t\t\t\tif (this.messageContainer) {\n\t\t\t\t\t\tconst links = this.messageContainer.querySelectorAll('a');\n\t\t\t\t\t\tfor (const link of links) {\n\t\t\t\t\t\t\tfocusableElements.push(link);\n\t\t\t\t\t\t\tif (isActiveElement(link)) {\n\t\t\t\t\t\t\t\tfocusedIndex = focusableElements.length - 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const input of this.inputs) {\n\t\t\t\t\t\tfocusableElements.push(input);\n\t\t\t\t\t\tif (input.hasFocus()) {\n\t\t\t\t\t\t\tfocusedIndex = focusableElements.length - 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.checkbox) {\n\t\t\t\t\t\tfocusableElements.push(this.checkbox);\n\t\t\t\t\t\tif (this.checkbox.hasFocus()) {\n\t\t\t\t\t\t\tfocusedIndex = focusableElements.length - 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.buttonBar) {\n\t\t\t\t\t\tfor (const button of this.buttonBar.buttons) {\n\t\t\t\t\t\t\tfocusableElements.push(button);\n\t\t\t\t\t\t\tif (button.hasFocus()) {\n\t\t\t\t\t\t\t\tfocusedIndex = focusableElements.length - 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Focus next element (with wrapping)\n\t\t\t\t\tif (evt.equals(KeyCode.Tab) || evt.equals(KeyCode.RightArrow)) {\n\t\t\t\t\t\tif (focusedIndex === -1) {\n\t\t\t\t\t\t\tfocusedIndex = 0; // default to focus first element if none have focus\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst newFocusedIndex = (focusedIndex + 1) % focusableElements.length;\n\t\t\t\t\t\tfocusableElements[newFocusedIndex].focus();\n\t\t\t\t\t}\n\n\t\t\t\t\t// Focus previous element (with wrapping)\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (focusedIndex === -1) {\n\t\t\t\t\t\t\tfocusedIndex = focusableElements.length; // default to focus last element if none have focus\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet newFocusedIndex = focusedIndex - 1;\n\t\t\t\t\t\tif (newFocusedIndex === -1) {\n\t\t\t\t\t\t\tnewFocusedIndex = focusableElements.length - 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfocusableElements[newFocusedIndex].focus();\n\t\t\t\t\t}\n\n\t\t\t\t\teventHandled = true;\n\t\t\t\t}\n\n\t\t\t\tif (eventHandled) {\n\t\t\t\t\tEventHelper.stop(e, true);\n\t\t\t\t} else if (this.options.keyEventProcessor) {\n\t\t\t\t\tthis.options.keyEventProcessor(evt);\n\t\t\t\t}\n\t\t\t}, true));\n\n\t\t\tthis._register(addDisposableListener(window, 'keyup', e => {\n\t\t\t\tEventHelper.stop(e, true);\n\t\t\t\tconst evt = new StandardKeyboardEvent(e);\n\n\t\t\t\tif (!this.options.disableCloseAction && evt.equals(KeyCode.Escape)) {\n\t\t\t\t\tresolve({\n\t\t\t\t\t\tbutton: this.options.cancelId || 0,\n\t\t\t\t\t\tcheckboxChecked: this.checkbox ? this.checkbox.checked : undefined\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, true));\n\n\t\t\t// Detect focus out\n\t\t\tthis._register(addDisposableListener(this.element, 'focusout', e => {\n\t\t\t\tif (!!e.relatedTarget && !!this.element) {\n\t\t\t\t\tif (!isAncestor(e.relatedTarget as HTMLElement, this.element)) {\n\t\t\t\t\t\tthis.focusToReturn = e.relatedTarget as HTMLElement;\n\n\t\t\t\t\t\tif (e.target) {\n\t\t\t\t\t\t\t(e.target as HTMLElement).focus();\n\t\t\t\t\t\t\tEventHelper.stop(e, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, false));\n\n\t\t\tconst spinModifierClassName = 'codicon-modifier-spin';\n\n\t\t\tthis.iconElement.classList.remove(...ThemeIcon.asClassNameArray(Codicon.dialogError), ...ThemeIcon.asClassNameArray(Codicon.dialogWarning), ...ThemeIcon.asClassNameArray(Codicon.dialogInfo), ...ThemeIcon.asClassNameArray(Codicon.loading), spinModifierClassName);\n\n\t\t\tif (this.options.icon) {\n\t\t\t\tthis.iconElement.classList.add(...ThemeIcon.asClassNameArray(this.options.icon));\n\t\t\t} else {\n\t\t\t\tswitch (this.options.type) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\tthis.iconElement.classList.add(...ThemeIcon.asClassNameArray(Codicon.dialogError));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'warning':\n\t\t\t\t\t\tthis.iconElement.classList.add(...ThemeIcon.asClassNameArray(Codicon.dialogWarning));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'pending':\n\t\t\t\t\t\tthis.iconElement.classList.add(...ThemeIcon.asClassNameArray(Codicon.loading), spinModifierClassName);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'none':\n\t\t\t\t\t\tthis.iconElement.classList.add('no-codicon');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'info':\n\t\t\t\t\tcase 'question':\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthis.iconElement.classList.add(...ThemeIcon.asClassNameArray(Codicon.dialogInfo));\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tif (!this.options.disableCloseAction) {\n\t\t\t\tconst actionBar = this._register(new ActionBar(this.toolbarContainer, {}));\n\n\t\t\t\tconst action = this._register(new Action('dialog.close', nls.localize('dialogClose', \"Close Dialog\"), ThemeIcon.asClassName(Codicon.dialogClose), true, async () => {\n\t\t\t\t\tresolve({\n\t\t\t\t\t\tbutton: this.options.cancelId || 0,\n\t\t\t\t\t\tcheckboxChecked: this.checkbox ? this.checkbox.checked : undefined\n\t\t\t\t\t});\n\t\t\t\t}));\n\n\t\t\t\tactionBar.push(action, { icon: true, label: false });\n\t\t\t}\n\n\t\t\tthis.applyStyles();\n\n\t\t\tthis.element.setAttribute('aria-modal', 'true');\n\t\t\tthis.element.setAttribute('aria-labelledby', 'monaco-dialog-icon monaco-dialog-message-text');\n\t\t\tthis.element.setAttribute('aria-describedby', 'monaco-dialog-icon monaco-dialog-message-text monaco-dialog-message-detail monaco-dialog-message-body');\n\t\t\tshow(this.element);\n\n\t\t\t// Focus first element (input or button)\n\t\t\tif (this.inputs.length > 0) {\n\t\t\t\tthis.inputs[0].focus();\n\t\t\t\tthis.inputs[0].select();\n\t\t\t} else {\n\t\t\t\tbuttonMap.forEach((value, index) => {\n\t\t\t\t\tif (value.index === 0) {\n\t\t\t\t\t\tbuttonBar.buttons[index].focus();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate applyStyles() {\n\t\tconst style = this.options.dialogStyles;\n\n\t\tconst fgColor = style.dialogForeground;\n\t\tconst bgColor = style.dialogBackground;\n\t\tconst shadowColor = style.dialogShadow ? `0 0px 8px ${style.dialogShadow}` : '';\n\t\tconst border = style.dialogBorder ? `1px solid ${style.dialogBorder}` : '';\n\t\tconst linkFgColor = style.textLinkForeground;\n\n\t\tthis.shadowElement.style.boxShadow = shadowColor;\n\n\t\tthis.element.style.color = fgColor ?? '';\n\t\tthis.element.style.backgroundColor = bgColor ?? '';\n\t\tthis.element.style.border = border;\n\n\t\t// TODO fix\n\t\t// if (fgColor && bgColor) {\n\t\t// \tconst messageDetailColor = fgColor.transparent(.9);\n\t\t// \tthis.messageDetailElement.style.mixBlendMode = messageDetailColor.makeOpaque(bgColor).toString();\n\t\t// }\n\n\t\tif (linkFgColor) {\n\t\t\tfor (const el of this.messageContainer.getElementsByTagName('a')) {\n\t\t\t\tel.style.color = linkFgColor;\n\t\t\t}\n\t\t}\n\n\t\tlet color;\n\t\tswitch (this.options.type) {\n\t\t\tcase 'error':\n\t\t\t\tcolor = style.errorIconForeground;\n\t\t\t\tbreak;\n\t\t\tcase 'warning':\n\t\t\t\tcolor = style.warningIconForeground;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcolor = style.infoIconForeground;\n\t\t\t\tbreak;\n\t\t}\n\t\tif (color) {\n\t\t\tthis.iconElement.style.color = color;\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tif (this.modalElement) {\n\t\t\tthis.modalElement.remove();\n\t\t\tthis.modalElement = undefined;\n\t\t}\n\n\t\tif (this.focusToReturn && isAncestor(this.focusToReturn, this.container.ownerDocument.body)) {\n\t\t\tthis.focusToReturn.focus();\n\t\t\tthis.focusToReturn = undefined;\n\t\t}\n\t}\n\n\tprivate rearrangeButtons(buttons: Array<string>, cancelId: number | undefined): ButtonMapEntry[] {\n\n\t\t// Maps each button to its current label and old index\n\t\t// so that when we move them around it's not a problem\n\t\tconst buttonMap: ButtonMapEntry[] = buttons.map((label, index) => ({ label, index }));\n\n\t\tif (buttons.length < 2) {\n\t\t\treturn buttonMap; // only need to rearrange if there are 2+ buttons\n\t\t}\n\n\t\tif (isMacintosh || isLinux) {\n\n\t\t\t// Linux: the GNOME HIG (https://developer.gnome.org/hig/patterns/feedback/dialogs.html?highlight=dialog)\n\t\t\t// recommend the following:\n\t\t\t// \"Always ensure that the cancel button appears first, before the affirmative button. In left-to-right\n\t\t\t//  locales, this is on the left. This button order ensures that users become aware of, and are reminded\n\t\t\t//  of, the ability to cancel prior to encountering the affirmative button.\"\n\n\t\t\t// macOS: the HIG (https://developer.apple.com/design/human-interface-guidelines/components/presentation/alerts)\n\t\t\t// recommend the following:\n\t\t\t// \"Place buttons where people expect. In general, place the button people are most likely to choose on the trailing side in a\n\t\t\t//  row of buttons or at the top in a stack of buttons. Always place the default button on the trailing side of a row or at the\n\t\t\t//  top of a stack. Cancel buttons are typically on the leading side of a row or at the bottom of a stack.\"\n\n\t\t\tif (typeof cancelId === 'number' && buttonMap[cancelId]) {\n\t\t\t\tconst cancelButton = buttonMap.splice(cancelId, 1)[0];\n\t\t\t\tbuttonMap.splice(1, 0, cancelButton);\n\t\t\t}\n\n\t\t\tbuttonMap.reverse();\n\t\t} else if (isWindows) {\n\n\t\t\t// Windows: the HIG (https://learn.microsoft.com/en-us/windows/win32/uxguide/win-dialog-box)\n\t\t\t// recommend the following:\n\t\t\t// \"One of the following sets of concise commands: Yes/No, Yes/No/Cancel, [Do it]/Cancel,\n\t\t\t//  [Do it]/[Don't do it], [Do it]/[Don't do it]/Cancel.\"\n\n\t\t\tif (typeof cancelId === 'number' && buttonMap[cancelId]) {\n\t\t\t\tconst cancelButton = buttonMap.splice(cancelId, 1)[0];\n\t\t\t\tbuttonMap.push(cancelButton);\n\t\t\t}\n\t\t}\n\n\t\treturn buttonMap;\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
