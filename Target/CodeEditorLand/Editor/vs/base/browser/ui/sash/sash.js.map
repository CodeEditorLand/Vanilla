{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/browser/ui/sash/sash.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Delayer } from \"../../../common/async.js\";\nimport { memoize } from \"../../../common/decorators.js\";\nimport { Emitter, type Event } from \"../../../common/event.js\";\nimport {\n\tDisposable,\n\tDisposableStore,\n\ttoDisposable,\n} from \"../../../common/lifecycle.js\";\nimport { isMacintosh } from \"../../../common/platform.js\";\nimport {\n\t$,\n\tEventHelper,\n\ttype EventLike,\n\tappend,\n\tcreateStyleSheet,\n\tgetWindow,\n\tisHTMLElement,\n} from \"../../dom.js\";\nimport { DomEmitter } from \"../../event.js\";\nimport { EventType, Gesture } from \"../../touch.js\";\nimport \"./sash.css\";\n\n/**\n * Allow the sashes to be visible at runtime.\n * @remark Use for development purposes only.\n */\nconst DEBUG = false;\n// DEBUG = Boolean(\"true\"); // done \"weirdly\" so that a lint warning prevents you from pushing this\n\n/**\n * A vertical sash layout provider provides position and height for a sash.\n */\nexport interface IVerticalSashLayoutProvider {\n\tgetVerticalSashLeft(sash: Sash): number;\n\tgetVerticalSashTop?(sash: Sash): number;\n\tgetVerticalSashHeight?(sash: Sash): number;\n}\n\n/**\n * A vertical sash layout provider provides position and width for a sash.\n */\nexport interface IHorizontalSashLayoutProvider {\n\tgetHorizontalSashTop(sash: Sash): number;\n\tgetHorizontalSashLeft?(sash: Sash): number;\n\tgetHorizontalSashWidth?(sash: Sash): number;\n}\n\ntype ISashLayoutProvider =\n\t| IVerticalSashLayoutProvider\n\t| IHorizontalSashLayoutProvider;\n\nexport interface ISashEvent {\n\treadonly startX: number;\n\treadonly currentX: number;\n\treadonly startY: number;\n\treadonly currentY: number;\n\treadonly altKey: boolean;\n}\n\nexport enum OrthogonalEdge {\n\tNorth = \"north\",\n\tSouth = \"south\",\n\tEast = \"east\",\n\tWest = \"west\",\n}\n\nexport interface IBoundarySashes {\n\treadonly top?: Sash;\n\treadonly right?: Sash;\n\treadonly bottom?: Sash;\n\treadonly left?: Sash;\n}\n\nexport interface ISashOptions {\n\t/**\n\t * Whether a sash is horizontal or vertical.\n\t */\n\treadonly orientation: Orientation;\n\n\t/**\n\t * The width or height of a vertical or horizontal sash, respectively.\n\t */\n\treadonly size?: number;\n\n\t/**\n\t * A reference to another sash, perpendicular to this one, which\n\t * aligns at the start of this one. A corner sash will be created\n\t * automatically at that location.\n\t *\n\t * The start of a horizontal sash is its left-most position.\n\t * The start of a vertical sash is its top-most position.\n\t */\n\treadonly orthogonalStartSash?: Sash;\n\n\t/**\n\t * A reference to another sash, perpendicular to this one, which\n\t * aligns at the end of this one. A corner sash will be created\n\t * automatically at that location.\n\t *\n\t * The end of a horizontal sash is its right-most position.\n\t * The end of a vertical sash is its bottom-most position.\n\t */\n\treadonly orthogonalEndSash?: Sash;\n\n\t/**\n\t * Provides a hint as to what mouse cursor to use whenever the user\n\t * hovers over a corner sash provided by this and an orthogonal sash.\n\t */\n\treadonly orthogonalEdge?: OrthogonalEdge;\n}\n\nexport interface IVerticalSashOptions extends ISashOptions {\n\treadonly orientation: Orientation.VERTICAL;\n}\n\nexport interface IHorizontalSashOptions extends ISashOptions {\n\treadonly orientation: Orientation.HORIZONTAL;\n}\n\nexport enum Orientation {\n\tVERTICAL = 0,\n\tHORIZONTAL = 1,\n}\n\nexport enum SashState {\n\t/**\n\t * Disable any UI interaction.\n\t */\n\tDisabled = 0,\n\n\t/**\n\t * Allow dragging down or to the right, depending on the sash orientation.\n\t *\n\t * Some OSs allow customizing the mouse cursor differently whenever\n\t * some resizable component can't be any smaller, but can be larger.\n\t */\n\tAtMinimum = 1,\n\n\t/**\n\t * Allow dragging up or to the left, depending on the sash orientation.\n\t *\n\t * Some OSs allow customizing the mouse cursor differently whenever\n\t * some resizable component can't be any larger, but can be smaller.\n\t */\n\tAtMaximum = 2,\n\n\t/**\n\t * Enable dragging.\n\t */\n\tEnabled = 3,\n}\n\nlet globalSize = 4;\nconst onDidChangeGlobalSize = new Emitter<number>();\nexport function setGlobalSashSize(size: number): void {\n\tglobalSize = size;\n\tonDidChangeGlobalSize.fire(size);\n}\n\nlet globalHoverDelay = 300;\nconst onDidChangeHoverDelay = new Emitter<number>();\nexport function setGlobalHoverDelay(size: number): void {\n\tglobalHoverDelay = size;\n\tonDidChangeHoverDelay.fire(size);\n}\n\ninterface PointerEvent extends EventLike {\n\treadonly pageX: number;\n\treadonly pageY: number;\n\treadonly altKey: boolean;\n\treadonly target: EventTarget | null;\n\treadonly initialTarget?: EventTarget | undefined;\n}\n\ninterface IPointerEventFactory {\n\treadonly onPointerMove: Event<PointerEvent>;\n\treadonly onPointerUp: Event<PointerEvent>;\n\tdispose(): void;\n}\n\nclass MouseEventFactory implements IPointerEventFactory {\n\tprivate readonly disposables = new DisposableStore();\n\n\tconstructor(private el: HTMLElement) {}\n\n\t@memoize\n\tget onPointerMove(): Event<PointerEvent> {\n\t\treturn this.disposables.add(\n\t\t\tnew DomEmitter(getWindow(this.el), \"mousemove\"),\n\t\t).event;\n\t}\n\n\t@memoize\n\tget onPointerUp(): Event<PointerEvent> {\n\t\treturn this.disposables.add(\n\t\t\tnew DomEmitter(getWindow(this.el), \"mouseup\"),\n\t\t).event;\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables.dispose();\n\t}\n}\n\nclass GestureEventFactory implements IPointerEventFactory {\n\tprivate readonly disposables = new DisposableStore();\n\n\t@memoize\n\tget onPointerMove(): Event<PointerEvent> {\n\t\treturn this.disposables.add(new DomEmitter(this.el, EventType.Change))\n\t\t\t.event;\n\t}\n\n\t@memoize\n\tget onPointerUp(): Event<PointerEvent> {\n\t\treturn this.disposables.add(new DomEmitter(this.el, EventType.End))\n\t\t\t.event;\n\t}\n\n\tconstructor(private el: HTMLElement) {}\n\n\tdispose(): void {\n\t\tthis.disposables.dispose();\n\t}\n}\n\nclass OrthogonalPointerEventFactory implements IPointerEventFactory {\n\t@memoize\n\tget onPointerMove(): Event<PointerEvent> {\n\t\treturn this.factory.onPointerMove;\n\t}\n\n\t@memoize\n\tget onPointerUp(): Event<PointerEvent> {\n\t\treturn this.factory.onPointerUp;\n\t}\n\n\tconstructor(private factory: IPointerEventFactory) {}\n\n\tdispose(): void {\n\t\t// noop\n\t}\n}\n\nconst PointerEventsDisabledCssClass = \"pointer-events-disabled\";\n\n/**\n * The {@link Sash} is the UI component which allows the user to resize other\n * components. It's usually an invisible horizontal or vertical line which, when\n * hovered, becomes highlighted and can be dragged along the perpendicular dimension\n * to its direction.\n *\n * Features:\n * - Touch event handling\n * - Corner sash support\n * - Hover with different mouse cursor support\n * - Configurable hover size\n * - Linked sash support, for 2x2 corner sashes\n */\nexport class Sash extends Disposable {\n\tprivate el: HTMLElement;\n\tprivate layoutProvider: ISashLayoutProvider;\n\tprivate orientation: Orientation;\n\tprivate size: number;\n\tprivate hoverDelay = globalHoverDelay;\n\tprivate hoverDelayer = this._register(new Delayer(this.hoverDelay));\n\n\tprivate _state: SashState = SashState.Enabled;\n\tprivate readonly onDidEnablementChange = this._register(\n\t\tnew Emitter<SashState>(),\n\t);\n\tprivate readonly _onDidStart = this._register(new Emitter<ISashEvent>());\n\tprivate readonly _onDidChange = this._register(new Emitter<ISashEvent>());\n\tprivate readonly _onDidReset = this._register(new Emitter<void>());\n\tprivate readonly _onDidEnd = this._register(new Emitter<void>());\n\tprivate readonly orthogonalStartSashDisposables = this._register(\n\t\tnew DisposableStore(),\n\t);\n\tprivate _orthogonalStartSash: Sash | undefined;\n\tprivate readonly orthogonalStartDragHandleDisposables = this._register(\n\t\tnew DisposableStore(),\n\t);\n\tprivate _orthogonalStartDragHandle: HTMLElement | undefined;\n\tprivate readonly orthogonalEndSashDisposables = this._register(\n\t\tnew DisposableStore(),\n\t);\n\tprivate _orthogonalEndSash: Sash | undefined;\n\tprivate readonly orthogonalEndDragHandleDisposables = this._register(\n\t\tnew DisposableStore(),\n\t);\n\tprivate _orthogonalEndDragHandle: HTMLElement | undefined;\n\n\tget state(): SashState {\n\t\treturn this._state;\n\t}\n\tget orthogonalStartSash(): Sash | undefined {\n\t\treturn this._orthogonalStartSash;\n\t}\n\tget orthogonalEndSash(): Sash | undefined {\n\t\treturn this._orthogonalEndSash;\n\t}\n\n\t/**\n\t * The state of a sash defines whether it can be interacted with by the user\n\t * as well as what mouse cursor to use, when hovered.\n\t */\n\tset state(state: SashState) {\n\t\tif (this._state === state) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.el.classList.toggle(\"disabled\", state === SashState.Disabled);\n\t\tthis.el.classList.toggle(\"minimum\", state === SashState.AtMinimum);\n\t\tthis.el.classList.toggle(\"maximum\", state === SashState.AtMaximum);\n\n\t\tthis._state = state;\n\t\tthis.onDidEnablementChange.fire(state);\n\t}\n\n\t/**\n\t * An event which fires whenever the user starts dragging this sash.\n\t */\n\treadonly onDidStart: Event<ISashEvent> = this._onDidStart.event;\n\n\t/**\n\t * An event which fires whenever the user moves the mouse while\n\t * dragging this sash.\n\t */\n\treadonly onDidChange: Event<ISashEvent> = this._onDidChange.event;\n\n\t/**\n\t * An event which fires whenever the user double clicks this sash.\n\t */\n\treadonly onDidReset: Event<void> = this._onDidReset.event;\n\n\t/**\n\t * An event which fires whenever the user stops dragging this sash.\n\t */\n\treadonly onDidEnd: Event<void> = this._onDidEnd.event;\n\n\t/**\n\t * A linked sash will be forwarded the same user interactions and events\n\t * so it moves exactly the same way as this sash.\n\t *\n\t * Useful in 2x2 grids. Not meant for widespread usage.\n\t */\n\tlinkedSash: Sash | undefined = undefined;\n\n\t/**\n\t * A reference to another sash, perpendicular to this one, which\n\t * aligns at the start of this one. A corner sash will be created\n\t * automatically at that location.\n\t *\n\t * The start of a horizontal sash is its left-most position.\n\t * The start of a vertical sash is its top-most position.\n\t */\n\tset orthogonalStartSash(sash: Sash | undefined) {\n\t\tif (this._orthogonalStartSash === sash) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.orthogonalStartDragHandleDisposables.clear();\n\t\tthis.orthogonalStartSashDisposables.clear();\n\n\t\tif (sash) {\n\t\t\tconst onChange = (state: SashState) => {\n\t\t\t\tthis.orthogonalStartDragHandleDisposables.clear();\n\n\t\t\t\tif (state !== SashState.Disabled) {\n\t\t\t\t\tthis._orthogonalStartDragHandle = append(\n\t\t\t\t\t\tthis.el,\n\t\t\t\t\t\t$(\".orthogonal-drag-handle.start\"),\n\t\t\t\t\t);\n\t\t\t\t\tthis.orthogonalStartDragHandleDisposables.add(\n\t\t\t\t\t\ttoDisposable(() =>\n\t\t\t\t\t\t\tthis._orthogonalStartDragHandle!.remove(),\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tthis.orthogonalStartDragHandleDisposables\n\t\t\t\t\t\t.add(\n\t\t\t\t\t\t\tnew DomEmitter(\n\t\t\t\t\t\t\t\tthis._orthogonalStartDragHandle,\n\t\t\t\t\t\t\t\t\"mouseenter\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.event(\n\t\t\t\t\t\t\t() => Sash.onMouseEnter(sash),\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\tthis.orthogonalStartDragHandleDisposables,\n\t\t\t\t\t\t);\n\t\t\t\t\tthis.orthogonalStartDragHandleDisposables\n\t\t\t\t\t\t.add(\n\t\t\t\t\t\t\tnew DomEmitter(\n\t\t\t\t\t\t\t\tthis._orthogonalStartDragHandle,\n\t\t\t\t\t\t\t\t\"mouseleave\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.event(\n\t\t\t\t\t\t\t() => Sash.onMouseLeave(sash),\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\tthis.orthogonalStartDragHandleDisposables,\n\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.orthogonalStartSashDisposables.add(\n\t\t\t\tsash.onDidEnablementChange.event(onChange, this),\n\t\t\t);\n\t\t\tonChange(sash.state);\n\t\t}\n\n\t\tthis._orthogonalStartSash = sash;\n\t}\n\n\t/**\n\t * A reference to another sash, perpendicular to this one, which\n\t * aligns at the end of this one. A corner sash will be created\n\t * automatically at that location.\n\t *\n\t * The end of a horizontal sash is its right-most position.\n\t * The end of a vertical sash is its bottom-most position.\n\t */\n\n\tset orthogonalEndSash(sash: Sash | undefined) {\n\t\tif (this._orthogonalEndSash === sash) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.orthogonalEndDragHandleDisposables.clear();\n\t\tthis.orthogonalEndSashDisposables.clear();\n\n\t\tif (sash) {\n\t\t\tconst onChange = (state: SashState) => {\n\t\t\t\tthis.orthogonalEndDragHandleDisposables.clear();\n\n\t\t\t\tif (state !== SashState.Disabled) {\n\t\t\t\t\tthis._orthogonalEndDragHandle = append(\n\t\t\t\t\t\tthis.el,\n\t\t\t\t\t\t$(\".orthogonal-drag-handle.end\"),\n\t\t\t\t\t);\n\t\t\t\t\tthis.orthogonalEndDragHandleDisposables.add(\n\t\t\t\t\t\ttoDisposable(() =>\n\t\t\t\t\t\t\tthis._orthogonalEndDragHandle!.remove(),\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tthis.orthogonalEndDragHandleDisposables\n\t\t\t\t\t\t.add(\n\t\t\t\t\t\t\tnew DomEmitter(\n\t\t\t\t\t\t\t\tthis._orthogonalEndDragHandle,\n\t\t\t\t\t\t\t\t\"mouseenter\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.event(\n\t\t\t\t\t\t\t() => Sash.onMouseEnter(sash),\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\tthis.orthogonalEndDragHandleDisposables,\n\t\t\t\t\t\t);\n\t\t\t\t\tthis.orthogonalEndDragHandleDisposables\n\t\t\t\t\t\t.add(\n\t\t\t\t\t\t\tnew DomEmitter(\n\t\t\t\t\t\t\t\tthis._orthogonalEndDragHandle,\n\t\t\t\t\t\t\t\t\"mouseleave\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.event(\n\t\t\t\t\t\t\t() => Sash.onMouseLeave(sash),\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\tthis.orthogonalEndDragHandleDisposables,\n\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.orthogonalEndSashDisposables.add(\n\t\t\t\tsash.onDidEnablementChange.event(onChange, this),\n\t\t\t);\n\t\t\tonChange(sash.state);\n\t\t}\n\n\t\tthis._orthogonalEndSash = sash;\n\t}\n\n\t/**\n\t * Create a new vertical sash.\n\t *\n\t * @param container A DOM node to append the sash to.\n\t * @param verticalLayoutProvider A vertical layout provider.\n\t * @param options The options.\n\t */\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\tverticalLayoutProvider: IVerticalSashLayoutProvider,\n\t\toptions: IVerticalSashOptions,\n\t);\n\n\t/**\n\t * Create a new horizontal sash.\n\t *\n\t * @param container A DOM node to append the sash to.\n\t * @param horizontalLayoutProvider A horizontal layout provider.\n\t * @param options The options.\n\t */\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\thorizontalLayoutProvider: IHorizontalSashLayoutProvider,\n\t\toptions: IHorizontalSashOptions,\n\t);\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\tlayoutProvider: ISashLayoutProvider,\n\t\toptions: ISashOptions,\n\t) {\n\t\tsuper();\n\n\t\tthis.el = append(container, $(\".monaco-sash\"));\n\n\t\tif (options.orthogonalEdge) {\n\t\t\tthis.el.classList.add(`orthogonal-edge-${options.orthogonalEdge}`);\n\t\t}\n\n\t\tif (isMacintosh) {\n\t\t\tthis.el.classList.add(\"mac\");\n\t\t}\n\n\t\tconst onMouseDown = this._register(\n\t\t\tnew DomEmitter(this.el, \"mousedown\"),\n\t\t).event;\n\t\tthis._register(\n\t\t\tonMouseDown(\n\t\t\t\t(e) => this.onPointerStart(e, new MouseEventFactory(container)),\n\t\t\t\tthis,\n\t\t\t),\n\t\t);\n\t\tconst onMouseDoubleClick = this._register(\n\t\t\tnew DomEmitter(this.el, \"dblclick\"),\n\t\t).event;\n\t\tthis._register(onMouseDoubleClick(this.onPointerDoublePress, this));\n\t\tconst onMouseEnter = this._register(\n\t\t\tnew DomEmitter(this.el, \"mouseenter\"),\n\t\t).event;\n\t\tthis._register(onMouseEnter(() => Sash.onMouseEnter(this)));\n\t\tconst onMouseLeave = this._register(\n\t\t\tnew DomEmitter(this.el, \"mouseleave\"),\n\t\t).event;\n\t\tthis._register(onMouseLeave(() => Sash.onMouseLeave(this)));\n\n\t\tthis._register(Gesture.addTarget(this.el));\n\n\t\tconst onTouchStart = this._register(\n\t\t\tnew DomEmitter(this.el, EventType.Start),\n\t\t).event;\n\t\tthis._register(\n\t\t\tonTouchStart(\n\t\t\t\t(e) => this.onPointerStart(e, new GestureEventFactory(this.el)),\n\t\t\t\tthis,\n\t\t\t),\n\t\t);\n\t\tconst onTap = this._register(\n\t\t\tnew DomEmitter(this.el, EventType.Tap),\n\t\t).event;\n\n\t\tlet doubleTapTimeout: any;\n\t\tthis._register(\n\t\t\tonTap((event) => {\n\t\t\t\tif (doubleTapTimeout) {\n\t\t\t\t\tclearTimeout(doubleTapTimeout);\n\t\t\t\t\tdoubleTapTimeout = undefined;\n\t\t\t\t\tthis.onPointerDoublePress(event);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tclearTimeout(doubleTapTimeout);\n\t\t\t\tdoubleTapTimeout = setTimeout(\n\t\t\t\t\t() => (doubleTapTimeout = undefined),\n\t\t\t\t\t250,\n\t\t\t\t);\n\t\t\t}, this),\n\t\t);\n\n\t\tif (typeof options.size === \"number\") {\n\t\t\tthis.size = options.size;\n\n\t\t\tif (options.orientation === Orientation.VERTICAL) {\n\t\t\t\tthis.el.style.width = `${this.size}px`;\n\t\t\t} else {\n\t\t\t\tthis.el.style.height = `${this.size}px`;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.size = globalSize;\n\t\t\tthis._register(\n\t\t\t\tonDidChangeGlobalSize.event((size) => {\n\t\t\t\t\tthis.size = size;\n\t\t\t\t\tthis.layout();\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\n\t\tthis._register(\n\t\t\tonDidChangeHoverDelay.event((delay) => (this.hoverDelay = delay)),\n\t\t);\n\n\t\tthis.layoutProvider = layoutProvider;\n\n\t\tthis.orthogonalStartSash = options.orthogonalStartSash;\n\t\tthis.orthogonalEndSash = options.orthogonalEndSash;\n\n\t\tthis.orientation = options.orientation || Orientation.VERTICAL;\n\n\t\tif (this.orientation === Orientation.HORIZONTAL) {\n\t\t\tthis.el.classList.add(\"horizontal\");\n\t\t\tthis.el.classList.remove(\"vertical\");\n\t\t} else {\n\t\t\tthis.el.classList.remove(\"horizontal\");\n\t\t\tthis.el.classList.add(\"vertical\");\n\t\t}\n\n\t\tthis.el.classList.toggle(\"debug\", DEBUG);\n\n\t\tthis.layout();\n\t}\n\n\tprivate onPointerStart(\n\t\tevent: PointerEvent,\n\t\tpointerEventFactory: IPointerEventFactory,\n\t): void {\n\t\tEventHelper.stop(event);\n\n\t\tlet isMultisashResize = false;\n\n\t\tif (!(event as any).__orthogonalSashEvent) {\n\t\t\tconst orthogonalSash = this.getOrthogonalSash(event);\n\n\t\t\tif (orthogonalSash) {\n\t\t\t\tisMultisashResize = true;\n\t\t\t\t(event as any).__orthogonalSashEvent = true;\n\t\t\t\torthogonalSash.onPointerStart(\n\t\t\t\t\tevent,\n\t\t\t\t\tnew OrthogonalPointerEventFactory(pointerEventFactory),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (this.linkedSash && !(event as any).__linkedSashEvent) {\n\t\t\t(event as any).__linkedSashEvent = true;\n\t\t\tthis.linkedSash.onPointerStart(\n\t\t\t\tevent,\n\t\t\t\tnew OrthogonalPointerEventFactory(pointerEventFactory),\n\t\t\t);\n\t\t}\n\n\t\tif (!this.state) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst iframes = this.el.ownerDocument.getElementsByTagName(\"iframe\");\n\t\tfor (const iframe of iframes) {\n\t\t\tiframe.classList.add(PointerEventsDisabledCssClass); // disable mouse events on iframes as long as we drag the sash\n\t\t}\n\n\t\tconst startX = event.pageX;\n\t\tconst startY = event.pageY;\n\t\tconst altKey = event.altKey;\n\t\tconst startEvent: ISashEvent = {\n\t\t\tstartX,\n\t\t\tcurrentX: startX,\n\t\t\tstartY,\n\t\t\tcurrentY: startY,\n\t\t\taltKey,\n\t\t};\n\n\t\tthis.el.classList.add(\"active\");\n\t\tthis._onDidStart.fire(startEvent);\n\n\t\t// fix https://github.com/microsoft/vscode/issues/21675\n\t\tconst style = createStyleSheet(this.el);\n\t\tconst updateStyle = () => {\n\t\t\tlet cursor = \"\";\n\n\t\t\tif (isMultisashResize) {\n\t\t\t\tcursor = \"all-scroll\";\n\t\t\t} else if (this.orientation === Orientation.HORIZONTAL) {\n\t\t\t\tif (this.state === SashState.AtMinimum) {\n\t\t\t\t\tcursor = \"s-resize\";\n\t\t\t\t} else if (this.state === SashState.AtMaximum) {\n\t\t\t\t\tcursor = \"n-resize\";\n\t\t\t\t} else {\n\t\t\t\t\tcursor = isMacintosh ? \"row-resize\" : \"ns-resize\";\n\t\t\t\t}\n\t\t\t} else if (this.state === SashState.AtMinimum) {\n\t\t\t\tcursor = \"e-resize\";\n\t\t\t} else if (this.state === SashState.AtMaximum) {\n\t\t\t\tcursor = \"w-resize\";\n\t\t\t} else {\n\t\t\t\tcursor = isMacintosh ? \"col-resize\" : \"ew-resize\";\n\t\t\t}\n\n\t\t\tstyle.textContent = `* { cursor: ${cursor} !important; }`;\n\t\t};\n\n\t\tconst disposables = new DisposableStore();\n\n\t\tupdateStyle();\n\n\t\tif (!isMultisashResize) {\n\t\t\tthis.onDidEnablementChange.event(updateStyle, null, disposables);\n\t\t}\n\n\t\tconst onPointerMove = (e: PointerEvent) => {\n\t\t\tEventHelper.stop(e, false);\n\t\t\tconst event: ISashEvent = {\n\t\t\t\tstartX,\n\t\t\t\tcurrentX: e.pageX,\n\t\t\t\tstartY,\n\t\t\t\tcurrentY: e.pageY,\n\t\t\t\taltKey,\n\t\t\t};\n\n\t\t\tthis._onDidChange.fire(event);\n\t\t};\n\n\t\tconst onPointerUp = (e: PointerEvent) => {\n\t\t\tEventHelper.stop(e, false);\n\n\t\t\tstyle.remove();\n\n\t\t\tthis.el.classList.remove(\"active\");\n\t\t\tthis._onDidEnd.fire();\n\n\t\t\tdisposables.dispose();\n\n\t\t\tfor (const iframe of iframes) {\n\t\t\t\tiframe.classList.remove(PointerEventsDisabledCssClass);\n\t\t\t}\n\t\t};\n\n\t\tpointerEventFactory.onPointerMove(onPointerMove, null, disposables);\n\t\tpointerEventFactory.onPointerUp(onPointerUp, null, disposables);\n\t\tdisposables.add(pointerEventFactory);\n\t}\n\n\tprivate onPointerDoublePress(e: MouseEvent): void {\n\t\tconst orthogonalSash = this.getOrthogonalSash(e);\n\n\t\tif (orthogonalSash) {\n\t\t\torthogonalSash._onDidReset.fire();\n\t\t}\n\n\t\tif (this.linkedSash) {\n\t\t\tthis.linkedSash._onDidReset.fire();\n\t\t}\n\n\t\tthis._onDidReset.fire();\n\t}\n\n\tprivate static onMouseEnter(sash: Sash, fromLinkedSash = false): void {\n\t\tif (sash.el.classList.contains(\"active\")) {\n\t\t\tsash.hoverDelayer.cancel();\n\t\t\tsash.el.classList.add(\"hover\");\n\t\t} else {\n\t\t\tsash.hoverDelayer\n\t\t\t\t.trigger(() => sash.el.classList.add(\"hover\"), sash.hoverDelay)\n\t\t\t\t.then(undefined, () => {});\n\t\t}\n\n\t\tif (!fromLinkedSash && sash.linkedSash) {\n\t\t\tSash.onMouseEnter(sash.linkedSash, true);\n\t\t}\n\t}\n\n\tprivate static onMouseLeave(sash: Sash, fromLinkedSash = false): void {\n\t\tsash.hoverDelayer.cancel();\n\t\tsash.el.classList.remove(\"hover\");\n\n\t\tif (!fromLinkedSash && sash.linkedSash) {\n\t\t\tSash.onMouseLeave(sash.linkedSash, true);\n\t\t}\n\t}\n\n\t/**\n\t * Forcefully stop any user interactions with this sash.\n\t * Useful when hiding a parent component, while the user is still\n\t * interacting with the sash.\n\t */\n\tclearSashHoverState(): void {\n\t\tSash.onMouseLeave(this);\n\t}\n\n\t/**\n\t * Layout the sash. The sash will size and position itself\n\t * based on its provided {@link ISashLayoutProvider layout provider}.\n\t */\n\tlayout(): void {\n\t\tif (this.orientation === Orientation.VERTICAL) {\n\t\t\tconst verticalProvider = <IVerticalSashLayoutProvider>(\n\t\t\t\tthis.layoutProvider\n\t\t\t);\n\t\t\tthis.el.style.left =\n\t\t\t\tverticalProvider.getVerticalSashLeft(this) -\n\t\t\t\tthis.size / 2 +\n\t\t\t\t\"px\";\n\n\t\t\tif (verticalProvider.getVerticalSashTop) {\n\t\t\t\tthis.el.style.top =\n\t\t\t\t\tverticalProvider.getVerticalSashTop(this) + \"px\";\n\t\t\t}\n\n\t\t\tif (verticalProvider.getVerticalSashHeight) {\n\t\t\t\tthis.el.style.height =\n\t\t\t\t\tverticalProvider.getVerticalSashHeight(this) + \"px\";\n\t\t\t}\n\t\t} else {\n\t\t\tconst horizontalProvider = <IHorizontalSashLayoutProvider>(\n\t\t\t\tthis.layoutProvider\n\t\t\t);\n\t\t\tthis.el.style.top =\n\t\t\t\thorizontalProvider.getHorizontalSashTop(this) -\n\t\t\t\tthis.size / 2 +\n\t\t\t\t\"px\";\n\n\t\t\tif (horizontalProvider.getHorizontalSashLeft) {\n\t\t\t\tthis.el.style.left =\n\t\t\t\t\thorizontalProvider.getHorizontalSashLeft(this) + \"px\";\n\t\t\t}\n\n\t\t\tif (horizontalProvider.getHorizontalSashWidth) {\n\t\t\t\tthis.el.style.width =\n\t\t\t\t\thorizontalProvider.getHorizontalSashWidth(this) + \"px\";\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getOrthogonalSash(e: PointerEvent): Sash | undefined {\n\t\tconst target = e.initialTarget ?? e.target;\n\n\t\tif (!target || !isHTMLElement(target)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (target.classList.contains(\"orthogonal-drag-handle\")) {\n\t\t\treturn target.classList.contains(\"start\")\n\t\t\t\t? this.orthogonalStartSash\n\t\t\t\t: this.orthogonalEndSash;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tthis.el.remove();\n\t}\n}\n"],
  "mappings": "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",
  "names": ["OrthogonalEdge", "Orientation", "SashState", "event"]
}
