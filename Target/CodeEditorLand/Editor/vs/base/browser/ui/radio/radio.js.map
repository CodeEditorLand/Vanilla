{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/browser/ui/radio/radio.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Widget } from '../widget.js';\nimport { ThemeIcon } from '../../../common/themables.js';\nimport { Emitter } from '../../../common/event.js';\nimport './radio.css';\nimport { $ } from '../../dom.js';\nimport { IHoverDelegate } from '../hover/hoverDelegate.js';\nimport { Button } from '../button/button.js';\nimport { DisposableMap, DisposableStore } from '../../../common/lifecycle.js';\nimport { createInstantHoverDelegate } from '../hover/hoverDelegateFactory.js';\n\nexport interface IRadioStyles {\n\treadonly activeForeground?: string;\n\treadonly activeBackground?: string;\n\treadonly activeBorder?: string;\n\treadonly inactiveForeground?: string;\n\treadonly inactiveBackground?: string;\n\treadonly inactiveHoverBackground?: string;\n\treadonly inactiveBorder?: string;\n}\n\nexport interface IRadioOptionItem {\n\treadonly text: string;\n\treadonly tooltip?: string;\n\treadonly isActive?: boolean;\n\treadonly disabled?: boolean;\n}\n\nexport interface IRadioOptions {\n\treadonly items: ReadonlyArray<IRadioOptionItem>;\n\treadonly activeIcon?: ThemeIcon;\n\treadonly hoverDelegate?: IHoverDelegate;\n}\n\nexport class Radio extends Widget {\n\n\tprivate readonly _onDidSelect = this._register(new Emitter<number>());\n\treadonly onDidSelect = this._onDidSelect.event;\n\n\treadonly domNode: HTMLElement;\n\n\tprivate readonly hoverDelegate: IHoverDelegate;\n\n\tprivate items: ReadonlyArray<IRadioOptionItem> = [];\n\tprivate activeItem: IRadioOptionItem | undefined;\n\n\tprivate readonly buttons = this._register(new DisposableMap<Button, { item: IRadioOptionItem; dispose(): void }>());\n\n\tconstructor(opts: IRadioOptions) {\n\t\tsuper();\n\n\t\tthis.hoverDelegate = opts.hoverDelegate ?? this._register(createInstantHoverDelegate());\n\n\t\tthis.domNode = $('.monaco-custom-radio');\n\t\tthis.domNode.setAttribute('role', 'radio');\n\n\t\tthis.setItems(opts.items);\n\t}\n\n\tsetItems(items: ReadonlyArray<IRadioOptionItem>): void {\n\t\tthis.buttons.clearAndDisposeAll();\n\t\tthis.items = items;\n\t\tthis.activeItem = this.items.find(item => item.isActive) ?? this.items[0];\n\t\tfor (let index = 0; index < this.items.length; index++) {\n\t\t\tconst item = this.items[index];\n\t\t\tconst disposables = new DisposableStore();\n\t\t\tconst button = disposables.add(new Button(this.domNode, {\n\t\t\t\thoverDelegate: this.hoverDelegate,\n\t\t\t\ttitle: item.tooltip,\n\t\t\t\tsupportIcons: true,\n\t\t\t}));\n\t\t\tbutton.enabled = !item.disabled;\n\t\t\tdisposables.add(button.onDidClick(() => {\n\t\t\t\tif (this.activeItem !== item) {\n\t\t\t\t\tthis.activeItem = item;\n\t\t\t\t\tthis.updateButtons();\n\t\t\t\t\tthis._onDidSelect.fire(index);\n\t\t\t\t}\n\t\t\t}));\n\t\t\tthis.buttons.set(button, { item, dispose: () => disposables.dispose() });\n\t\t}\n\t\tthis.updateButtons();\n\t}\n\n\tsetActiveItem(index: number): void {\n\t\tif (index < 0 || index >= this.items.length) {\n\t\t\tthrow new Error('Invalid Index');\n\t\t}\n\t\tthis.activeItem = this.items[index];\n\t\tthis.updateButtons();\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tfor (const [button] of this.buttons) {\n\t\t\tbutton.enabled = enabled;\n\t\t}\n\t}\n\n\tprivate updateButtons(): void {\n\t\tlet isActive = false;\n\t\tfor (const [button, { item }] of this.buttons) {\n\t\t\tconst isPreviousActive = isActive;\n\t\t\tisActive = item === this.activeItem;\n\t\t\tbutton.element.classList.toggle('active', isActive);\n\t\t\tbutton.element.classList.toggle('previous-active', isPreviousActive);\n\t\t\tbutton.label = item.text;\n\t\t}\n\t}\n\n}\n"],
  "mappings": ";;AAKA,SAAS,cAAc;AACvB,SAAS,iBAAiB;AAC1B,SAAS,eAAe;AACxB,OAAO;AACP,SAAS,SAAS;AAClB,SAAS,sBAAsB;AAC/B,SAAS,cAAc;AACvB,SAAS,eAAe,uBAAuB;AAC/C,SAAS,kCAAkC;AAyBpC,MAAM,cAAc,OAAO;AAAA,EAtClC,OAsCkC;AAAA;AAAA;AAAA,EAEhB,eAAe,KAAK,UAAU,IAAI,QAAgB,CAAC;AAAA,EAC3D,cAAc,KAAK,aAAa;AAAA,EAEhC;AAAA,EAEQ;AAAA,EAET,QAAyC,CAAC;AAAA,EAC1C;AAAA,EAES,UAAU,KAAK,UAAU,IAAI,cAAmE,CAAC;AAAA,EAElH,YAAY,MAAqB;AAChC,UAAM;AAEN,SAAK,gBAAgB,KAAK,iBAAiB,KAAK,UAAU,2BAA2B,CAAC;AAEtF,SAAK,UAAU,EAAE,sBAAsB;AACvC,SAAK,QAAQ,aAAa,QAAQ,OAAO;AAEzC,SAAK,SAAS,KAAK,KAAK;AAAA,EACzB;AAAA,EAEA,SAAS,OAA8C;AACtD,SAAK,QAAQ,mBAAmB;AAChC,SAAK,QAAQ;AACb,SAAK,aAAa,KAAK,MAAM,KAAK,UAAQ,KAAK,QAAQ,KAAK,KAAK,MAAM,CAAC;AACxE,aAAS,QAAQ,GAAG,QAAQ,KAAK,MAAM,QAAQ,SAAS;AACvD,YAAM,OAAO,KAAK,MAAM,KAAK;AAC7B,YAAM,cAAc,IAAI,gBAAgB;AACxC,YAAM,SAAS,YAAY,IAAI,IAAI,OAAO,KAAK,SAAS;AAAA,QACvD,eAAe,KAAK;AAAA,QACpB,OAAO,KAAK;AAAA,QACZ,cAAc;AAAA,MACf,CAAC,CAAC;AACF,aAAO,UAAU,CAAC,KAAK;AACvB,kBAAY,IAAI,OAAO,WAAW,MAAM;AACvC,YAAI,KAAK,eAAe,MAAM;AAC7B,eAAK,aAAa;AAClB,eAAK,cAAc;AACnB,eAAK,aAAa,KAAK,KAAK;AAAA,QAC7B;AAAA,MACD,CAAC,CAAC;AACF,WAAK,QAAQ,IAAI,QAAQ,EAAE,MAAM,SAAS,6BAAM,YAAY,QAAQ,GAA1B,WAA4B,CAAC;AAAA,IACxE;AACA,SAAK,cAAc;AAAA,EACpB;AAAA,EAEA,cAAc,OAAqB;AAClC,QAAI,QAAQ,KAAK,SAAS,KAAK,MAAM,QAAQ;AAC5C,YAAM,IAAI,MAAM,eAAe;AAAA,IAChC;AACA,SAAK,aAAa,KAAK,MAAM,KAAK;AAClC,SAAK,cAAc;AAAA,EACpB;AAAA,EAEA,WAAW,SAAwB;AAClC,eAAW,CAAC,MAAM,KAAK,KAAK,SAAS;AACpC,aAAO,UAAU;AAAA,IAClB;AAAA,EACD;AAAA,EAEQ,gBAAsB;AAC7B,QAAI,WAAW;AACf,eAAW,CAAC,QAAQ,EAAE,KAAK,CAAC,KAAK,KAAK,SAAS;AAC9C,YAAM,mBAAmB;AACzB,iBAAW,SAAS,KAAK;AACzB,aAAO,QAAQ,UAAU,OAAO,UAAU,QAAQ;AAClD,aAAO,QAAQ,UAAU,OAAO,mBAAmB,gBAAgB;AACnE,aAAO,QAAQ,KAAK;AAAA,IACrB;AAAA,EACD;AAED;",
  "names": []
}
