import{Emitter as s}from"../common/event.js";import{mainWindow as d}from"./window.js";class t{static INSTANCE=new t;mapWindowIdToZoomLevel=new Map;_onDidChangeZoomLevel=new s;onDidChangeZoomLevel=this._onDidChangeZoomLevel.event;getZoomLevel(e){return this.mapWindowIdToZoomLevel.get(this.getWindowId(e))??0}setZoomLevel(e,n){if(this.getZoomLevel(n)===e)return;const r=this.getWindowId(n);this.mapWindowIdToZoomLevel.set(r,e),this._onDidChangeZoomLevel.fire(r)}mapWindowIdToZoomFactor=new Map;getZoomFactor(e){return this.mapWindowIdToZoomFactor.get(this.getWindowId(e))??1}setZoomFactor(e,n){this.mapWindowIdToZoomFactor.set(this.getWindowId(n),e)}_onDidChangeFullscreen=new s;onDidChangeFullscreen=this._onDidChangeFullscreen.event;mapWindowIdToFullScreen=new Map;setFullscreen(e,n){if(this.isFullscreen(n)===e)return;const r=this.getWindowId(n);this.mapWindowIdToFullScreen.set(r,e),this._onDidChangeFullscreen.fire(r)}isFullscreen(e){return!!this.mapWindowIdToFullScreen.get(this.getWindowId(e))}getWindowId(e){return e.vscodeWindowId}}function c(o,e,n){typeof e=="string"&&(e=o.matchMedia(e)),e.addEventListener("change",n)}function h(o,e){t.INSTANCE.setZoomLevel(o,e)}function v(o){return t.INSTANCE.getZoomLevel(o)}const W=t.INSTANCE.onDidChangeZoomLevel;function g(o){return t.INSTANCE.getZoomFactor(o)}function f(o,e){t.INSTANCE.setZoomFactor(o,e)}function b(o,e){t.INSTANCE.setFullscreen(o,e)}function C(o){return t.INSTANCE.isFullscreen(o)}const I=t.INSTANCE.onDidChangeFullscreen,i=navigator.userAgent,x=i.indexOf("Firefox")>=0,m=i.indexOf("AppleWebKit")>=0,l=i.indexOf("Chrome")>=0,u=!l&&i.indexOf("Safari")>=0,F=!l&&!u&&m,Z=i.indexOf("Electron/")>=0,y=i.indexOf("Android")>=0;let a=!1;if(typeof d.matchMedia=="function"){const o=d.matchMedia("(display-mode: standalone) or (display-mode: window-controls-overlay)"),e=d.matchMedia("(display-mode: fullscreen)");a=o.matches,c(d,o,({matches:n})=>{a&&e.matches||(a=n)})}function L(){return a}function T(){return navigator?.windowControlsOverlay?.visible}function N(o){return o.navigator?.windowControlsOverlay?.getTitlebarAreaRect()}export{c as addMatchMediaChangeListener,N as getWCOTitlebarAreaRect,g as getZoomFactor,v as getZoomLevel,y as isAndroid,l as isChrome,Z as isElectron,x as isFirefox,C as isFullscreen,u as isSafari,L as isStandalone,T as isWCOEnabled,m as isWebKit,F as isWebkitWebView,I as onDidChangeFullscreen,W as onDidChangeZoomLevel,b as setFullscreen,f as setZoomFactor,h as setZoomLevel};
