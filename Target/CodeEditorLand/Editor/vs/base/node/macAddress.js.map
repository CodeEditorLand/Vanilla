{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/node/macAddress.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { networkInterfaces } from 'os';\n\nconst invalidMacAddresses = new Set([\n\t'00:00:00:00:00:00',\n\t'ff:ff:ff:ff:ff:ff',\n\t'ac:de:48:00:11:22'\n]);\n\nfunction validateMacAddress(candidate: string): boolean {\n\tconst tempCandidate = candidate.replace(/\\-/g, ':').toLowerCase();\n\treturn !invalidMacAddresses.has(tempCandidate);\n}\n\nexport function getMac(): string {\n\tconst ifaces = networkInterfaces();\n\tfor (const name in ifaces) {\n\t\tconst networkInterface = ifaces[name];\n\t\tif (networkInterface) {\n\t\t\tfor (const { mac } of networkInterface) {\n\t\t\t\tif (validateMacAddress(mac)) {\n\t\t\t\t\treturn mac;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow new Error('Unable to retrieve mac address (unexpected format)');\n}\n"],
  "mappings": ";;AAKA,SAAS,yBAAyB;AAElC,MAAM,sBAAsB,oBAAI,IAAI;AAAA,EACnC;AAAA,EACA;AAAA,EACA;AACD,CAAC;AAED,SAAS,mBAAmB,WAA4B;AACvD,QAAM,gBAAgB,UAAU,QAAQ,OAAO,GAAG,EAAE,YAAY;AAChE,SAAO,CAAC,oBAAoB,IAAI,aAAa;AAC9C;AAHS;AAKF,SAAS,SAAiB;AAChC,QAAM,SAAS,kBAAkB;AACjC,aAAW,QAAQ,QAAQ;AAC1B,UAAM,mBAAmB,OAAO,IAAI;AACpC,QAAI,kBAAkB;AACrB,iBAAW,EAAE,IAAI,KAAK,kBAAkB;AACvC,YAAI,mBAAmB,GAAG,GAAG;AAC5B,iBAAO;AAAA,QACR;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAEA,QAAM,IAAI,MAAM,oDAAoD;AACrE;AAdgB;",
  "names": []
}
