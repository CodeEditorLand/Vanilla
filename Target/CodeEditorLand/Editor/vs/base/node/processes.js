import"child_process";import{promises as p}from"fs";import*as s from"../../../vs/base/common/path.js";import*as m from"../../../vs/base/common/platform.js";import*as l from"../../../vs/base/common/process.js";import{Source as d,TerminateResponseCode as g}from"../../../vs/base/common/processes.js";import*as y from"../../../vs/base/common/types.js";import*as x from"../../../vs/base/node/pfs.js";function j(f=l.env){return f.comspec||"cmd.exe"}function k(f){let u=[],t=!1;const r=function(n){if(t){u.push(n);return}(!f.send(n,a=>{if(a&&console.error(a),t=!1,u.length>0){const i=u.slice(0);u=[],i.forEach(e=>r(e))}})||m.isWindows)&&(t=!0)};return{send:r}}var P;(u=>{async function f(t,r,n){if(s.isAbsolute(t))return t;if(r===void 0&&(r=l.cwd()),s.dirname(t)!=="."||(n===void 0&&y.isString(l.env.PATH)&&(n=l.env.PATH.split(s.delimiter)),n===void 0||n.length===0))return s.join(r,t);async function a(i){if(await x.Promises.exists(i)){let e;try{e=await p.stat(i)}catch(o){o.message.startsWith("EACCES")&&(e=await p.lstat(i))}return e?!e.isDirectory():!1}return!1}for(const i of n){let e;if(s.isAbsolute(i)?e=s.join(i,t):e=s.join(r,i,t),await a(e))return e;let o=e+".com";if(await a(o)||(o=e+".exe",await a(o)))return o}return s.join(r,t)}u.findExecutable=f})(P||={});export{d as Source,g as TerminateResponseCode,k as createQueuedSender,j as getWindowsShell,P as win32};
