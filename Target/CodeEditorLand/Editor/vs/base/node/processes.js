import{promises as l}from"fs";import*as i from"../common/path.js";import*as m from"../common/platform.js";import*as f from"../common/process.js";import{Source as d,TerminateResponseCode as y}from"../common/processes.js";import*as g from"../common/types.js";import*as x from"./pfs.js";function v(p=f.env){return p.comspec||"cmd.exe"}function C(p){let a=[],r=!1;const t=o=>{if(r){a.push(o);return}(!p.send(o,u=>{if(r=!1,a.length>0){const s=a.slice(0);a=[],s.forEach(e=>t(e))}})||m.isWindows)&&(r=!0)};return{send:t}}var P;(a=>{async function p(r,t,o){if(i.isAbsolute(r))return r;if(t===void 0&&(t=f.cwd()),i.dirname(r)!=="."||(o===void 0&&g.isString(f.env.PATH)&&(o=f.env.PATH.split(i.delimiter)),o===void 0||o.length===0))return i.join(t,r);async function u(s){if(await x.Promises.exists(s)){let e;try{e=await l.stat(s)}catch(n){n.message.startsWith("EACCES")&&(e=await l.lstat(s))}return e?!e.isDirectory():!1}return!1}for(const s of o){let e;if(i.isAbsolute(s)?e=i.join(s,r):e=i.join(t,s,r),await u(e))return e;let n=e+".com";if(await u(n)||(n=e+".exe",await u(n)))return n}return i.join(t,r)}a.findExecutable=p})(P||={});export{d as Source,y as TerminateResponseCode,C as createQueuedSender,v as getWindowsShell,P as win32};
