{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/parts/contextmenu/electron-sandbox/contextmenu.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ipcRenderer } from \"../../sandbox/electron-sandbox/globals.js\";\nimport {\n\tCONTEXT_MENU_CHANNEL,\n\tCONTEXT_MENU_CLOSE_CHANNEL,\n\ttype IContextMenuEvent,\n\ttype IContextMenuItem,\n\ttype IPopupOptions,\n\ttype ISerializableContextMenuItem,\n} from \"../common/contextmenu.js\";\n\nlet contextMenuIdPool = 0;\n\nexport function popup(\n\titems: IContextMenuItem[],\n\toptions?: IPopupOptions,\n\tonHide?: () => void,\n): void {\n\tconst processedItems: IContextMenuItem[] = [];\n\n\tconst contextMenuId = contextMenuIdPool++;\n\tconst onClickChannel = `vscode:onContextMenu${contextMenuId}`;\n\tconst onClickChannelHandler = (\n\t\tevent: unknown,\n\t\titemId: number,\n\t\tcontext: IContextMenuEvent,\n\t) => {\n\t\tconst item = processedItems[itemId];\n\t\titem.click?.(context);\n\t};\n\n\tipcRenderer.once(onClickChannel, onClickChannelHandler);\n\tipcRenderer.once(\n\t\tCONTEXT_MENU_CLOSE_CHANNEL,\n\t\t(event: unknown, closedContextMenuId: number) => {\n\t\t\tif (closedContextMenuId !== contextMenuId) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tipcRenderer.removeListener(onClickChannel, onClickChannelHandler);\n\n\t\t\tonHide?.();\n\t\t},\n\t);\n\n\tipcRenderer.send(\n\t\tCONTEXT_MENU_CHANNEL,\n\t\tcontextMenuId,\n\t\titems.map((item) => createItem(item, processedItems)),\n\t\tonClickChannel,\n\t\toptions,\n\t);\n}\n\nfunction createItem(\n\titem: IContextMenuItem,\n\tprocessedItems: IContextMenuItem[],\n): ISerializableContextMenuItem {\n\tconst serializableItem: ISerializableContextMenuItem = {\n\t\tid: processedItems.length,\n\t\tlabel: item.label,\n\t\ttype: item.type,\n\t\taccelerator: item.accelerator,\n\t\tchecked: item.checked,\n\t\tenabled: typeof item.enabled === \"boolean\" ? item.enabled : true,\n\t\tvisible: typeof item.visible === \"boolean\" ? item.visible : true,\n\t};\n\n\tprocessedItems.push(item);\n\n\t// Submenu\n\tif (Array.isArray(item.submenu)) {\n\t\tserializableItem.submenu = item.submenu.map((submenuItem) =>\n\t\t\tcreateItem(submenuItem, processedItems),\n\t\t);\n\t}\n\n\treturn serializableItem;\n}\n"],
  "mappings": ";;AAKA,SAAS,mBAAmB;AAC5B;AAAA,EACC;AAAA,EACA;AAAA,OAKM;AAEP,IAAI,oBAAoB;AAEjB,SAAS,MACf,OACA,SACA,QACO;AACP,QAAM,iBAAqC,CAAC;AAE5C,QAAM,gBAAgB;AACtB,QAAM,iBAAiB,uBAAuB,aAAa;AAC3D,QAAM,wBAAwB,wBAC7B,OACA,QACA,YACI;AACJ,UAAM,OAAO,eAAe,MAAM;AAClC,SAAK,QAAQ,OAAO;AAAA,EACrB,GAP8B;AAS9B,cAAY,KAAK,gBAAgB,qBAAqB;AACtD,cAAY;AAAA,IACX;AAAA,IACA,CAAC,OAAgB,wBAAgC;AAChD,UAAI,wBAAwB,eAAe;AAC1C;AAAA,MACD;AAEA,kBAAY,eAAe,gBAAgB,qBAAqB;AAEhE,eAAS;AAAA,IACV;AAAA,EACD;AAEA,cAAY;AAAA,IACX;AAAA,IACA;AAAA,IACA,MAAM,IAAI,CAAC,SAAS,WAAW,MAAM,cAAc,CAAC;AAAA,IACpD;AAAA,IACA;AAAA,EACD;AACD;AAvCgB;AAyChB,SAAS,WACR,MACA,gBAC+B;AAC/B,QAAM,mBAAiD;AAAA,IACtD,IAAI,eAAe;AAAA,IACnB,OAAO,KAAK;AAAA,IACZ,MAAM,KAAK;AAAA,IACX,aAAa,KAAK;AAAA,IAClB,SAAS,KAAK;AAAA,IACd,SAAS,OAAO,KAAK,YAAY,YAAY,KAAK,UAAU;AAAA,IAC5D,SAAS,OAAO,KAAK,YAAY,YAAY,KAAK,UAAU;AAAA,EAC7D;AAEA,iBAAe,KAAK,IAAI;AAGxB,MAAI,MAAM,QAAQ,KAAK,OAAO,GAAG;AAChC,qBAAiB,UAAU,KAAK,QAAQ;AAAA,MAAI,CAAC,gBAC5C,WAAW,aAAa,cAAc;AAAA,IACvC;AAAA,EACD;AAEA,SAAO;AACR;AAxBS;",
  "names": []
}
