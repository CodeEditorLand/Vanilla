{
  "version": 3,
  "sources": ["../../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/parts/storage/test/node/storage.integrationTest.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { deepStrictEqual, ok, strictEqual } from 'assert';\nimport { tmpdir } from 'os';\nimport { timeout } from '../../../../common/async.js';\nimport { Emitter, Event } from '../../../../common/event.js';\nimport { join } from '../../../../common/path.js';\nimport { isWindows } from '../../../../common/platform.js';\nimport { URI } from '../../../../common/uri.js';\nimport { generateUuid } from '../../../../common/uuid.js';\nimport { Promises } from '../../../../node/pfs.js';\nimport { isStorageItemsChangeEvent, IStorageDatabase, IStorageItemsChangeEvent, Storage } from '../../common/storage.js';\nimport { ISQLiteStorageDatabaseOptions, SQLiteStorageDatabase } from '../../node/storage.js';\nimport { runWithFakedTimers } from '../../../../test/common/timeTravelScheduler.js';\nimport { flakySuite, getRandomTestPath } from '../../../../test/node/testUtils.js';\n\nflakySuite('Storage Library', function () {\n\n\tlet testDir: string;\n\n\tsetup(function () {\n\t\ttestDir = getRandomTestPath(tmpdir(), 'vsctests', 'storagelibrary');\n\n\t\treturn fs.promises.mkdir(testDir, { recursive: true });\n\t});\n\n\tteardown(function () {\n\t\treturn Promises.rm(testDir);\n\t});\n\n\ttest('objects', () => {\n\t\treturn runWithFakedTimers({}, async function () {\n\t\t\tconst storage = new Storage(new SQLiteStorageDatabase(join(testDir, 'storage.db')));\n\n\t\t\tawait storage.init();\n\n\t\t\tok(!storage.getObject('foo'));\n\t\t\tconst uri = URI.file('path/to/folder');\n\t\t\tstorage.set('foo', { 'bar': uri });\n\t\t\tdeepStrictEqual(storage.getObject('foo'), { 'bar': uri });\n\n\t\t\tawait storage.close();\n\t\t});\n\t});\n\n\ttest('basics', () => {\n\t\treturn runWithFakedTimers({}, async function () {\n\t\t\tconst storage = new Storage(new SQLiteStorageDatabase(join(testDir, 'storage.db')));\n\n\t\t\tawait storage.init();\n\n\t\t\t// Empty fallbacks\n\t\t\tstrictEqual(storage.get('foo', 'bar'), 'bar');\n\t\t\tstrictEqual(storage.getNumber('foo', 55), 55);\n\t\t\tstrictEqual(storage.getBoolean('foo', true), true);\n\t\t\tdeepStrictEqual(storage.getObject('foo', { 'bar': 'baz' }), { 'bar': 'baz' });\n\n\t\t\tlet changes = new Set<string>();\n\t\t\tstorage.onDidChangeStorage(e => {\n\t\t\t\tchanges.add(e.key);\n\t\t\t});\n\n\t\t\tawait storage.whenFlushed(); // returns immediately when no pending updates\n\n\t\t\t// Simple updates\n\t\t\tconst set1Promise = storage.set('bar', 'foo');\n\t\t\tconst set2Promise = storage.set('barNumber', 55);\n\t\t\tconst set3Promise = storage.set('barBoolean', true);\n\t\t\tconst set4Promise = storage.set('barObject', { 'bar': 'baz' });\n\n\t\t\tlet flushPromiseResolved = false;\n\t\t\tstorage.whenFlushed().then(() => flushPromiseResolved = true);\n\n\t\t\tstrictEqual(storage.get('bar'), 'foo');\n\t\t\tstrictEqual(storage.getNumber('barNumber'), 55);\n\t\t\tstrictEqual(storage.getBoolean('barBoolean'), true);\n\t\t\tdeepStrictEqual(storage.getObject('barObject'), { 'bar': 'baz' });\n\n\t\t\tstrictEqual(changes.size, 4);\n\t\t\tok(changes.has('bar'));\n\t\t\tok(changes.has('barNumber'));\n\t\t\tok(changes.has('barBoolean'));\n\t\t\tok(changes.has('barObject'));\n\n\t\t\tlet setPromiseResolved = false;\n\t\t\tawait Promise.all([set1Promise, set2Promise, set3Promise, set4Promise]).then(() => setPromiseResolved = true);\n\t\t\tstrictEqual(setPromiseResolved, true);\n\t\t\tstrictEqual(flushPromiseResolved, true);\n\n\t\t\tchanges = new Set<string>();\n\n\t\t\t// Does not trigger events for same update values\n\t\t\tstorage.set('bar', 'foo');\n\t\t\tstorage.set('barNumber', 55);\n\t\t\tstorage.set('barBoolean', true);\n\t\t\tstorage.set('barObject', { 'bar': 'baz' });\n\t\t\tstrictEqual(changes.size, 0);\n\n\t\t\t// Simple deletes\n\t\t\tconst delete1Promise = storage.delete('bar');\n\t\t\tconst delete2Promise = storage.delete('barNumber');\n\t\t\tconst delete3Promise = storage.delete('barBoolean');\n\t\t\tconst delete4Promise = storage.delete('barObject');\n\n\t\t\tok(!storage.get('bar'));\n\t\t\tok(!storage.getNumber('barNumber'));\n\t\t\tok(!storage.getBoolean('barBoolean'));\n\t\t\tok(!storage.getObject('barObject'));\n\n\t\t\tstrictEqual(changes.size, 4);\n\t\t\tok(changes.has('bar'));\n\t\t\tok(changes.has('barNumber'));\n\t\t\tok(changes.has('barBoolean'));\n\t\t\tok(changes.has('barObject'));\n\n\t\t\tchanges = new Set<string>();\n\n\t\t\t// Does not trigger events for same delete values\n\t\t\tstorage.delete('bar');\n\t\t\tstorage.delete('barNumber');\n\t\t\tstorage.delete('barBoolean');\n\t\t\tstorage.delete('barObject');\n\t\t\tstrictEqual(changes.size, 0);\n\n\t\t\tlet deletePromiseResolved = false;\n\t\t\tawait Promise.all([delete1Promise, delete2Promise, delete3Promise, delete4Promise]).then(() => deletePromiseResolved = true);\n\t\t\tstrictEqual(deletePromiseResolved, true);\n\n\t\t\tawait storage.close();\n\t\t\tawait storage.close(); // it is ok to call this multiple times\n\t\t});\n\t});\n\n\ttest('external changes', () => {\n\t\treturn runWithFakedTimers({}, async function () {\n\t\t\tclass TestSQLiteStorageDatabase extends SQLiteStorageDatabase {\n\t\t\t\tprivate readonly _onDidChangeItemsExternal = new Emitter<IStorageItemsChangeEvent>();\n\t\t\t\toverride get onDidChangeItemsExternal(): Event<IStorageItemsChangeEvent> { return this._onDidChangeItemsExternal.event; }\n\n\t\t\t\tfireDidChangeItemsExternal(event: IStorageItemsChangeEvent): void {\n\t\t\t\t\tthis._onDidChangeItemsExternal.fire(event);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst database = new TestSQLiteStorageDatabase(join(testDir, 'storage.db'));\n\t\t\tconst storage = new Storage(database);\n\n\t\t\tconst changes = new Set<string>();\n\t\t\tstorage.onDidChangeStorage(e => {\n\t\t\t\tchanges.add(e.key);\n\t\t\t});\n\n\t\t\tawait storage.init();\n\n\t\t\tawait storage.set('foo', 'bar');\n\t\t\tok(changes.has('foo'));\n\t\t\tchanges.clear();\n\n\t\t\t// Nothing happens if changing to same value\n\t\t\tconst changed = new Map<string, string>();\n\t\t\tchanged.set('foo', 'bar');\n\t\t\tdatabase.fireDidChangeItemsExternal({ changed });\n\t\t\tstrictEqual(changes.size, 0);\n\n\t\t\t// Change is accepted if valid\n\t\t\tchanged.set('foo', 'bar1');\n\t\t\tdatabase.fireDidChangeItemsExternal({ changed });\n\t\t\tok(changes.has('foo'));\n\t\t\tstrictEqual(storage.get('foo'), 'bar1');\n\t\t\tchanges.clear();\n\n\t\t\t// Delete is accepted\n\t\t\tconst deleted = new Set<string>(['foo']);\n\t\t\tdatabase.fireDidChangeItemsExternal({ deleted });\n\t\t\tok(changes.has('foo'));\n\t\t\tstrictEqual(storage.get('foo', undefined), undefined);\n\t\t\tchanges.clear();\n\n\t\t\t// Nothing happens if changing to same value\n\t\t\tdatabase.fireDidChangeItemsExternal({ deleted });\n\t\t\tstrictEqual(changes.size, 0);\n\n\t\t\tstrictEqual(isStorageItemsChangeEvent({ changed }), true);\n\t\t\tstrictEqual(isStorageItemsChangeEvent({ deleted }), true);\n\t\t\tstrictEqual(isStorageItemsChangeEvent({ changed, deleted }), true);\n\t\t\tstrictEqual(isStorageItemsChangeEvent(undefined), false);\n\t\t\tstrictEqual(isStorageItemsChangeEvent({ changed: 'yes', deleted: false }), false);\n\n\t\t\tawait storage.close();\n\t\t});\n\t});\n\n\ttest('close flushes data', async () => {\n\t\tlet storage = new Storage(new SQLiteStorageDatabase(join(testDir, 'storage.db')));\n\t\tawait storage.init();\n\n\t\tconst set1Promise = storage.set('foo', 'bar');\n\t\tconst set2Promise = storage.set('bar', 'foo');\n\n\t\tlet flushPromiseResolved = false;\n\t\tstorage.whenFlushed().then(() => flushPromiseResolved = true);\n\n\t\tstrictEqual(storage.get('foo'), 'bar');\n\t\tstrictEqual(storage.get('bar'), 'foo');\n\n\t\tlet setPromiseResolved = false;\n\t\tPromise.all([set1Promise, set2Promise]).then(() => setPromiseResolved = true);\n\n\t\tawait storage.close();\n\n\t\tstrictEqual(setPromiseResolved, true);\n\t\tstrictEqual(flushPromiseResolved, true);\n\n\t\tstorage = new Storage(new SQLiteStorageDatabase(join(testDir, 'storage.db')));\n\t\tawait storage.init();\n\n\t\tstrictEqual(storage.get('foo'), 'bar');\n\t\tstrictEqual(storage.get('bar'), 'foo');\n\n\t\tawait storage.close();\n\n\t\tstorage = new Storage(new SQLiteStorageDatabase(join(testDir, 'storage.db')));\n\t\tawait storage.init();\n\n\t\tconst delete1Promise = storage.delete('foo');\n\t\tconst delete2Promise = storage.delete('bar');\n\n\t\tok(!storage.get('foo'));\n\t\tok(!storage.get('bar'));\n\n\t\tlet deletePromiseResolved = false;\n\t\tPromise.all([delete1Promise, delete2Promise]).then(() => deletePromiseResolved = true);\n\n\t\tawait storage.close();\n\n\t\tstrictEqual(deletePromiseResolved, true);\n\n\t\tstorage = new Storage(new SQLiteStorageDatabase(join(testDir, 'storage.db')));\n\t\tawait storage.init();\n\n\t\tok(!storage.get('foo'));\n\t\tok(!storage.get('bar'));\n\n\t\tawait storage.close();\n\t});\n\n\ttest('explicit flush', async () => {\n\t\tconst storage = new Storage(new SQLiteStorageDatabase(join(testDir, 'storage.db')));\n\t\tawait storage.init();\n\n\t\tstorage.set('foo', 'bar');\n\t\tstorage.set('bar', 'foo');\n\n\t\tlet flushPromiseResolved = false;\n\t\tstorage.whenFlushed().then(() => flushPromiseResolved = true);\n\n\t\tstrictEqual(flushPromiseResolved, false);\n\n\t\tawait storage.flush(0);\n\n\t\tstrictEqual(flushPromiseResolved, true);\n\n\t\tawait storage.close();\n\t});\n\n\ttest('conflicting updates', () => {\n\t\treturn runWithFakedTimers({}, async function () {\n\t\t\tconst storage = new Storage(new SQLiteStorageDatabase(join(testDir, 'storage.db')));\n\t\t\tawait storage.init();\n\n\t\t\tlet changes = new Set<string>();\n\t\t\tstorage.onDidChangeStorage(e => {\n\t\t\t\tchanges.add(e.key);\n\t\t\t});\n\n\t\t\tconst set1Promise = storage.set('foo', 'bar1');\n\t\t\tconst set2Promise = storage.set('foo', 'bar2');\n\t\t\tconst set3Promise = storage.set('foo', 'bar3');\n\n\t\t\tlet flushPromiseResolved = false;\n\t\t\tstorage.whenFlushed().then(() => flushPromiseResolved = true);\n\n\t\t\tstrictEqual(storage.get('foo'), 'bar3');\n\t\t\tstrictEqual(changes.size, 1);\n\t\t\tok(changes.has('foo'));\n\n\t\t\tlet setPromiseResolved = false;\n\t\t\tawait Promise.all([set1Promise, set2Promise, set3Promise]).then(() => setPromiseResolved = true);\n\t\t\tok(setPromiseResolved);\n\t\t\tok(flushPromiseResolved);\n\n\t\t\tchanges = new Set<string>();\n\n\t\t\tconst set4Promise = storage.set('bar', 'foo');\n\t\t\tconst delete1Promise = storage.delete('bar');\n\n\t\t\tok(!storage.get('bar'));\n\n\t\t\tstrictEqual(changes.size, 1);\n\t\t\tok(changes.has('bar'));\n\n\t\t\tlet setAndDeletePromiseResolved = false;\n\t\t\tawait Promise.all([set4Promise, delete1Promise]).then(() => setAndDeletePromiseResolved = true);\n\t\t\tok(setAndDeletePromiseResolved);\n\n\t\t\tawait storage.close();\n\t\t});\n\t});\n\n\ttest('corrupt DB recovers', async () => {\n\t\treturn runWithFakedTimers({}, async function () {\n\t\t\tconst storageFile = join(testDir, 'storage.db');\n\n\t\t\tlet storage = new Storage(new SQLiteStorageDatabase(storageFile));\n\t\t\tawait storage.init();\n\n\t\t\tawait storage.set('bar', 'foo');\n\n\t\t\tawait Promises.writeFile(storageFile, 'This is a broken DB');\n\n\t\t\tawait storage.set('foo', 'bar');\n\n\t\t\tstrictEqual(storage.get('bar'), 'foo');\n\t\t\tstrictEqual(storage.get('foo'), 'bar');\n\n\t\t\tawait storage.close();\n\n\t\t\tstorage = new Storage(new SQLiteStorageDatabase(storageFile));\n\t\t\tawait storage.init();\n\n\t\t\tstrictEqual(storage.get('bar'), 'foo');\n\t\t\tstrictEqual(storage.get('foo'), 'bar');\n\n\t\t\tawait storage.close();\n\t\t});\n\t});\n});\n\nflakySuite('SQLite Storage Library', function () {\n\n\tfunction toSet(elements: string[]): Set<string> {\n\t\tconst set = new Set<string>();\n\t\telements.forEach(element => set.add(element));\n\n\t\treturn set;\n\t}\n\n\tlet testdir: string;\n\n\tsetup(function () {\n\t\ttestdir = getRandomTestPath(tmpdir(), 'vsctests', 'storagelibrary');\n\n\t\treturn fs.promises.mkdir(testdir, { recursive: true });\n\t});\n\n\tteardown(function () {\n\t\treturn Promises.rm(testdir);\n\t});\n\n\tasync function testDBBasics(path: string, logError?: (error: Error | string) => void) {\n\t\tlet options!: ISQLiteStorageDatabaseOptions;\n\t\tif (logError) {\n\t\t\toptions = {\n\t\t\t\tlogging: {\n\t\t\t\t\tlogError\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tconst storage = new SQLiteStorageDatabase(path, options);\n\n\t\tconst items = new Map<string, string>();\n\t\titems.set('foo', 'bar');\n\t\titems.set('some/foo/path', 'some/bar/path');\n\t\titems.set(JSON.stringify({ foo: 'bar' }), JSON.stringify({ bar: 'foo' }));\n\n\t\tlet storedItems = await storage.getItems();\n\t\tstrictEqual(storedItems.size, 0);\n\n\t\tawait storage.updateItems({ insert: items });\n\n\t\tstoredItems = await storage.getItems();\n\t\tstrictEqual(storedItems.size, items.size);\n\t\tstrictEqual(storedItems.get('foo'), 'bar');\n\t\tstrictEqual(storedItems.get('some/foo/path'), 'some/bar/path');\n\t\tstrictEqual(storedItems.get(JSON.stringify({ foo: 'bar' })), JSON.stringify({ bar: 'foo' }));\n\n\t\tawait storage.updateItems({ delete: toSet(['foo']) });\n\t\tstoredItems = await storage.getItems();\n\t\tstrictEqual(storedItems.size, items.size - 1);\n\t\tok(!storedItems.has('foo'));\n\t\tstrictEqual(storedItems.get('some/foo/path'), 'some/bar/path');\n\t\tstrictEqual(storedItems.get(JSON.stringify({ foo: 'bar' })), JSON.stringify({ bar: 'foo' }));\n\n\t\tawait storage.updateItems({ insert: items });\n\t\tstoredItems = await storage.getItems();\n\t\tstrictEqual(storedItems.size, items.size);\n\t\tstrictEqual(storedItems.get('foo'), 'bar');\n\t\tstrictEqual(storedItems.get('some/foo/path'), 'some/bar/path');\n\t\tstrictEqual(storedItems.get(JSON.stringify({ foo: 'bar' })), JSON.stringify({ bar: 'foo' }));\n\n\t\tconst itemsChange = new Map<string, string>();\n\t\titemsChange.set('foo', 'otherbar');\n\t\tawait storage.updateItems({ insert: itemsChange });\n\n\t\tstoredItems = await storage.getItems();\n\t\tstrictEqual(storedItems.get('foo'), 'otherbar');\n\n\t\tawait storage.updateItems({ delete: toSet(['foo', 'bar', 'some/foo/path', JSON.stringify({ foo: 'bar' })]) });\n\t\tstoredItems = await storage.getItems();\n\t\tstrictEqual(storedItems.size, 0);\n\n\t\tawait storage.updateItems({ insert: items, delete: toSet(['foo', 'some/foo/path', 'other']) });\n\t\tstoredItems = await storage.getItems();\n\t\tstrictEqual(storedItems.size, 1);\n\t\tstrictEqual(storedItems.get(JSON.stringify({ foo: 'bar' })), JSON.stringify({ bar: 'foo' }));\n\n\t\tawait storage.updateItems({ delete: toSet([JSON.stringify({ foo: 'bar' })]) });\n\t\tstoredItems = await storage.getItems();\n\t\tstrictEqual(storedItems.size, 0);\n\n\t\tlet recoveryCalled = false;\n\t\tawait storage.close(() => {\n\t\t\trecoveryCalled = true;\n\n\t\t\treturn new Map();\n\t\t});\n\n\t\tstrictEqual(recoveryCalled, false);\n\t}\n\n\ttest('basics', async () => {\n\t\tawait testDBBasics(join(testdir, 'storage.db'));\n\t});\n\n\ttest('basics (open multiple times)', async () => {\n\t\tawait testDBBasics(join(testdir, 'storage.db'));\n\t\tawait testDBBasics(join(testdir, 'storage.db'));\n\t});\n\n\ttest('basics (corrupt DB falls back to empty DB)', async () => {\n\t\tconst corruptDBPath = join(testdir, 'broken.db');\n\t\tawait Promises.writeFile(corruptDBPath, 'This is a broken DB');\n\n\t\tlet expectedError: any;\n\t\tawait testDBBasics(corruptDBPath, error => {\n\t\t\texpectedError = error;\n\t\t});\n\n\t\tok(expectedError);\n\t});\n\n\ttest('basics (corrupt DB restores from previous backup)', async () => {\n\t\tconst storagePath = join(testdir, 'storage.db');\n\t\tlet storage = new SQLiteStorageDatabase(storagePath);\n\n\t\tconst items = new Map<string, string>();\n\t\titems.set('foo', 'bar');\n\t\titems.set('some/foo/path', 'some/bar/path');\n\t\titems.set(JSON.stringify({ foo: 'bar' }), JSON.stringify({ bar: 'foo' }));\n\n\t\tawait storage.updateItems({ insert: items });\n\t\tawait storage.close();\n\n\t\tawait Promises.writeFile(storagePath, 'This is now a broken DB');\n\n\t\tstorage = new SQLiteStorageDatabase(storagePath);\n\n\t\tconst storedItems = await storage.getItems();\n\t\tstrictEqual(storedItems.size, items.size);\n\t\tstrictEqual(storedItems.get('foo'), 'bar');\n\t\tstrictEqual(storedItems.get('some/foo/path'), 'some/bar/path');\n\t\tstrictEqual(storedItems.get(JSON.stringify({ foo: 'bar' })), JSON.stringify({ bar: 'foo' }));\n\n\t\tlet recoveryCalled = false;\n\t\tawait storage.close(() => {\n\t\t\trecoveryCalled = true;\n\n\t\t\treturn new Map();\n\t\t});\n\n\t\tstrictEqual(recoveryCalled, false);\n\t});\n\n\ttest('basics (corrupt DB falls back to empty DB if backup is corrupt)', async () => {\n\t\tconst storagePath = join(testdir, 'storage.db');\n\t\tlet storage = new SQLiteStorageDatabase(storagePath);\n\n\t\tconst items = new Map<string, string>();\n\t\titems.set('foo', 'bar');\n\t\titems.set('some/foo/path', 'some/bar/path');\n\t\titems.set(JSON.stringify({ foo: 'bar' }), JSON.stringify({ bar: 'foo' }));\n\n\t\tawait storage.updateItems({ insert: items });\n\t\tawait storage.close();\n\n\t\tawait Promises.writeFile(storagePath, 'This is now a broken DB');\n\t\tawait Promises.writeFile(`${storagePath}.backup`, 'This is now also a broken DB');\n\n\t\tstorage = new SQLiteStorageDatabase(storagePath);\n\n\t\tconst storedItems = await storage.getItems();\n\t\tstrictEqual(storedItems.size, 0);\n\n\t\tawait testDBBasics(storagePath);\n\t});\n\n\t(isWindows ? test.skip /* Windows will fail to write to open DB due to locking */ : test)('basics (DB that becomes corrupt during runtime stores all state from cache on close)', async () => {\n\t\tconst storagePath = join(testdir, 'storage.db');\n\t\tlet storage = new SQLiteStorageDatabase(storagePath);\n\n\t\tconst items = new Map<string, string>();\n\t\titems.set('foo', 'bar');\n\t\titems.set('some/foo/path', 'some/bar/path');\n\t\titems.set(JSON.stringify({ foo: 'bar' }), JSON.stringify({ bar: 'foo' }));\n\n\t\tawait storage.updateItems({ insert: items });\n\t\tawait storage.close();\n\n\t\tconst backupPath = `${storagePath}.backup`;\n\t\tstrictEqual(await Promises.exists(backupPath), true);\n\n\t\tstorage = new SQLiteStorageDatabase(storagePath);\n\t\tawait storage.getItems();\n\n\t\tawait Promises.writeFile(storagePath, 'This is now a broken DB');\n\n\t\t// we still need to trigger a check to the DB so that we get to know that\n\t\t// the DB is corrupt. We have no extra code on shutdown that checks for the\n\t\t// health of the DB. This is an optimization to not perform too many tasks\n\t\t// on shutdown.\n\t\tawait storage.checkIntegrity(true).then(null, error => { } /* error is expected here but we do not want to fail */);\n\n\t\tawait fs.promises.unlink(backupPath); // also test that the recovery DB is backed up properly\n\n\t\tlet recoveryCalled = false;\n\t\tawait storage.close(() => {\n\t\t\trecoveryCalled = true;\n\n\t\t\treturn items;\n\t\t});\n\n\t\tstrictEqual(recoveryCalled, true);\n\t\tstrictEqual(await Promises.exists(backupPath), true);\n\n\t\tstorage = new SQLiteStorageDatabase(storagePath);\n\n\t\tconst storedItems = await storage.getItems();\n\t\tstrictEqual(storedItems.size, items.size);\n\t\tstrictEqual(storedItems.get('foo'), 'bar');\n\t\tstrictEqual(storedItems.get('some/foo/path'), 'some/bar/path');\n\t\tstrictEqual(storedItems.get(JSON.stringify({ foo: 'bar' })), JSON.stringify({ bar: 'foo' }));\n\n\t\trecoveryCalled = false;\n\t\tawait storage.close(() => {\n\t\t\trecoveryCalled = true;\n\n\t\t\treturn new Map();\n\t\t});\n\n\t\tstrictEqual(recoveryCalled, false);\n\t});\n\n\ttest('real world example', async function () {\n\t\tlet storage = new SQLiteStorageDatabase(join(testdir, 'storage.db'));\n\n\t\tconst items1 = new Map<string, string>();\n\t\titems1.set('colorthemedata', '{\"id\":\"vs vscode-theme-defaults-themes-light_plus-json\",\"label\":\"Light+ (default light)\",\"settingsId\":\"Default Light+\",\"selector\":\"vs.vscode-theme-defaults-themes-light_plus-json\",\"themeTokenColors\":[{\"settings\":{\"foreground\":\"#000000ff\",\"background\":\"#ffffffff\"}},{\"scope\":[\"meta.embedded\",\"source.groovy.embedded\"],\"settings\":{\"foreground\":\"#000000ff\"}},{\"scope\":\"emphasis\",\"settings\":{\"fontStyle\":\"italic\"}},{\"scope\":\"strong\",\"settings\":{\"fontStyle\":\"bold\"}},{\"scope\":\"meta.diff.header\",\"settings\":{\"foreground\":\"#000080\"}},{\"scope\":\"comment\",\"settings\":{\"foreground\":\"#008000\"}},{\"scope\":\"constant.language\",\"settings\":{\"foreground\":\"#0000ff\"}},{\"scope\":[\"constant.numeric\"],\"settings\":{\"foreground\":\"#098658\"}},{\"scope\":\"constant.regexp\",\"settings\":{\"foreground\":\"#811f3f\"}},{\"name\":\"css tags in selectors, xml tags\",\"scope\":\"entity.name.tag\",\"settings\":{\"foreground\":\"#800000\"}},{\"scope\":\"entity.name.selector\",\"settings\":{\"foreground\":\"#800000\"}},{\"scope\":\"entity.other.attribute-name\",\"settings\":{\"foreground\":\"#ff0000\"}},{\"scope\":[\"entity.other.attribute-name.class.css\",\"entity.other.attribute-name.class.mixin.css\",\"entity.other.attribute-name.id.css\",\"entity.other.attribute-name.parent-selector.css\",\"entity.other.attribute-name.pseudo-class.css\",\"entity.other.attribute-name.pseudo-element.css\",\"source.css.less entity.other.attribute-name.id\",\"entity.other.attribute-name.attribute.scss\",\"entity.other.attribute-name.scss\"],\"settings\":{\"foreground\":\"#800000\"}},{\"scope\":\"invalid\",\"settings\":{\"foreground\":\"#cd3131\"}},{\"scope\":\"markup.underline\",\"settings\":{\"fontStyle\":\"underline\"}},{\"scope\":\"markup.bold\",\"settings\":{\"fontStyle\":\"bold\",\"foreground\":\"#000080\"}},{\"scope\":\"markup.heading\",\"settings\":{\"fontStyle\":\"bold\",\"foreground\":\"#800000\"}},{\"scope\":\"markup.italic\",\"settings\":{\"fontStyle\":\"italic\"}},{\"scope\":\"markup.inserted\",\"settings\":{\"foreground\":\"#098658\"}},{\"scope\":\"markup.deleted\",\"settings\":{\"foreground\":\"#a31515\"}},{\"scope\":\"markup.changed\",\"settings\":{\"foreground\":\"#0451a5\"}},{\"scope\":[\"punctuation.definition.quote.begin.markdown\",\"punctuation.definition.list.begin.markdown\"],\"settings\":{\"foreground\":\"#0451a5\"}},{\"scope\":\"markup.inline.raw\",\"settings\":{\"foreground\":\"#800000\"}},{\"name\":\"brackets of XML/HTML tags\",\"scope\":\"punctuation.definition.tag\",\"settings\":{\"foreground\":\"#800000\"}},{\"scope\":\"meta.preprocessor\",\"settings\":{\"foreground\":\"#0000ff\"}},{\"scope\":\"meta.preprocessor.string\",\"settings\":{\"foreground\":\"#a31515\"}},{\"scope\":\"meta.preprocessor.numeric\",\"settings\":{\"foreground\":\"#098658\"}},{\"scope\":\"meta.structure.dictionary.key.python\",\"settings\":{\"foreground\":\"#0451a5\"}},{\"scope\":\"storage\",\"settings\":{\"foreground\":\"#0000ff\"}},{\"scope\":\"storage.type\",\"settings\":{\"foreground\":\"#0000ff\"}},{\"scope\":\"storage.modifier\",\"settings\":{\"foreground\":\"#0000ff\"}},{\"scope\":\"string\",\"settings\":{\"foreground\":\"#a31515\"}},{\"scope\":[\"string.comment.buffered.block.pug\",\"string.quoted.pug\",\"string.interpolated.pug\",\"string.unquoted.plain.in.yaml\",\"string.unquoted.plain.out.yaml\",\"string.unquoted.block.yaml\",\"string.quoted.single.yaml\",\"string.quoted.double.xml\",\"string.quoted.single.xml\",\"string.unquoted.cdata.xml\",\"string.quoted.double.html\",\"string.quoted.single.html\",\"string.unquoted.html\",\"string.quoted.single.handlebars\",\"string.quoted.double.handlebars\"],\"settings\":{\"foreground\":\"#0000ff\"}},{\"scope\":\"string.regexp\",\"settings\":{\"foreground\":\"#811f3f\"}},{\"name\":\"String interpolation\",\"scope\":[\"punctuation.definition.template-expression.begin\",\"punctuation.definition.template-expression.end\",\"punctuation.section.embedded\"],\"settings\":{\"foreground\":\"#0000ff\"}},{\"name\":\"Reset JavaScript string interpolation expression\",\"scope\":[\"meta.template.expression\"],\"settings\":{\"foreground\":\"#000000\"}},{\"scope\":[\"support.constant.property-value\",\"support.constant.font-name\",\"support.constant.media-type\",\"support.constant.media\",\"constant.other.color.rgb-value\",\"constant.other.rgb-value\",\"support.constant.color\"],\"settings\":{\"foreground\":\"#0451a5\"}},{\"scope\":[\"support.type.vendored.property-name\",\"support.type.property-name\",\"variable.css\",\"variable.scss\",\"variable.other.less\",\"source.coffee.embedded\"],\"settings\":{\"foreground\":\"#ff0000\"}},{\"scope\":[\"support.type.property-name.json\"],\"settings\":{\"foreground\":\"#0451a5\"}},{\"scope\":\"keyword\",\"settings\":{\"foreground\":\"#0000ff\"}},{\"scope\":\"keyword.control\",\"settings\":{\"foreground\":\"#0000ff\"}},{\"scope\":\"keyword.operator\",\"settings\":{\"foreground\":\"#000000\"}},{\"scope\":[\"keyword.operator.new\",\"keyword.operator.expression\",\"keyword.operator.cast\",\"keyword.operator.sizeof\",\"keyword.operator.instanceof\",\"keyword.operator.logical.python\"],\"settings\":{\"foreground\":\"#0000ff\"}},{\"scope\":\"keyword.other.unit\",\"settings\":{\"foreground\":\"#098658\"}},{\"scope\":[\"punctuation.section.embedded.begin.php\",\"punctuation.section.embedded.end.php\"],\"settings\":{\"foreground\":\"#800000\"}},{\"scope\":\"support.function.git-rebase\",\"settings\":{\"foreground\":\"#0451a5\"}},{\"scope\":\"constant.sha.git-rebase\",\"settings\":{\"foreground\":\"#098658\"}},{\"name\":\"coloring of the Java import and package identifiers\",\"scope\":[\"storage.modifier.import.java\",\"variable.language.wildcard.java\",\"storage.modifier.package.java\"],\"settings\":{\"foreground\":\"#000000\"}},{\"name\":\"this.self\",\"scope\":\"variable.language\",\"settings\":{\"foreground\":\"#0000ff\"}},{\"name\":\"Function declarations\",\"scope\":[\"entity.name.function\",\"support.function\",\"support.constant.handlebars\"],\"settings\":{\"foreground\":\"#795E26\"}},{\"name\":\"Types declaration and references\",\"scope\":[\"meta.return-type\",\"support.class\",\"support.type\",\"entity.name.type\",\"entity.name.class\",\"storage.type.numeric.go\",\"storage.type.byte.go\",\"storage.type.boolean.go\",\"storage.type.string.go\",\"storage.type.uintptr.go\",\"storage.type.error.go\",\"storage.type.rune.go\",\"storage.type.cs\",\"storage.type.generic.cs\",\"storage.type.modifier.cs\",\"storage.type.variable.cs\",\"storage.type.annotation.java\",\"storage.type.generic.java\",\"storage.type.java\",\"storage.type.object.array.java\",\"storage.type.primitive.array.java\",\"storage.type.primitive.java\",\"storage.type.token.java\",\"storage.type.groovy\",\"storage.type.annotation.groovy\",\"storage.type.parameters.groovy\",\"storage.type.generic.groovy\",\"storage.type.object.array.groovy\",\"storage.type.primitive.array.groovy\",\"storage.type.primitive.groovy\"],\"settings\":{\"foreground\":\"#267f99\"}},{\"name\":\"Types declaration and references, TS grammar specific\",\"scope\":[\"meta.type.cast.expr\",\"meta.type.new.expr\",\"support.constant.math\",\"support.constant.dom\",\"support.constant.json\",\"entity.other.inherited-class\"],\"settings\":{\"foreground\":\"#267f99\"}},{\"name\":\"Control flow keywords\",\"scope\":\"keyword.control\",\"settings\":{\"foreground\":\"#AF00DB\"}},{\"name\":\"Variable and parameter name\",\"scope\":[\"variable\",\"meta.definition.variable.name\",\"support.variable\",\"entity.name.variable\"],\"settings\":{\"foreground\":\"#001080\"}},{\"name\":\"Object keys, TS grammar specific\",\"scope\":[\"meta.object-literal.key\"],\"settings\":{\"foreground\":\"#001080\"}},{\"name\":\"CSS property value\",\"scope\":[\"support.constant.property-value\",\"support.constant.font-name\",\"support.constant.media-type\",\"support.constant.media\",\"constant.other.color.rgb-value\",\"constant.other.rgb-value\",\"support.constant.color\"],\"settings\":{\"foreground\":\"#0451a5\"}},{\"name\":\"Regular expression groups\",\"scope\":[\"punctuation.definition.group.regexp\",\"punctuation.definition.group.assertion.regexp\",\"punctuation.definition.character-class.regexp\",\"punctuation.character.set.begin.regexp\",\"punctuation.character.set.end.regexp\",\"keyword.operator.negation.regexp\",\"support.other.parenthesis.regexp\"],\"settings\":{\"foreground\":\"#d16969\"}},{\"scope\":[\"constant.character.character-class.regexp\",\"constant.other.character-class.set.regexp\",\"constant.other.character-class.regexp\",\"constant.character.set.regexp\"],\"settings\":{\"foreground\":\"#811f3f\"}},{\"scope\":\"keyword.operator.quantifier.regexp\",\"settings\":{\"foreground\":\"#000000\"}},{\"scope\":[\"keyword.operator.or.regexp\",\"keyword.control.anchor.regexp\"],\"settings\":{\"foreground\":\"#ff0000\"}},{\"scope\":\"constant.character\",\"settings\":{\"foreground\":\"#0000ff\"}},{\"scope\":\"constant.character.escape\",\"settings\":{\"foreground\":\"#ff0000\"}},{\"scope\":\"token.info-token\",\"settings\":{\"foreground\":\"#316bcd\"}},{\"scope\":\"token.warn-token\",\"settings\":{\"foreground\":\"#cd9731\"}},{\"scope\":\"token.error-token\",\"settings\":{\"foreground\":\"#cd3131\"}},{\"scope\":\"token.debug-token\",\"settings\":{\"foreground\":\"#800080\"}}],\"extensionData\":{\"extensionId\":\"vscode.theme-defaults\",\"extensionPublisher\":\"vscode\",\"extensionName\":\"theme-defaults\",\"extensionIsBuiltin\":true},\"colorMap\":{\"editor.background\":\"#ffffff\",\"editor.foreground\":\"#000000\",\"editor.inactiveSelectionBackground\":\"#e5ebf1\",\"editorIndentGuide.background\":\"#d3d3d3\",\"editorIndentGuide.activeBackground\":\"#939393\",\"editor.selectionHighlightBackground\":\"#add6ff4d\",\"editorSuggestWidget.background\":\"#f3f3f3\",\"activityBarBadge.background\":\"#007acc\",\"sideBarTitle.foreground\":\"#6f6f6f\",\"list.hoverBackground\":\"#e8e8e8\",\"input.placeholderForeground\":\"#767676\",\"settings.textInputBorder\":\"#cecece\",\"settings.numberInputBorder\":\"#cecece\"}}');\n\t\titems1.set('commandpalette.mru.cache', '{\"usesLRU\":true,\"entries\":[{\"key\":\"revealFileInOS\",\"value\":3},{\"key\":\"extension.openInGitHub\",\"value\":4},{\"key\":\"workbench.extensions.action.openExtensionsFolder\",\"value\":11},{\"key\":\"workbench.action.showRuntimeExtensions\",\"value\":14},{\"key\":\"workbench.action.toggleTabsVisibility\",\"value\":15},{\"key\":\"extension.liveServerPreview.open\",\"value\":16},{\"key\":\"workbench.action.openIssueReporter\",\"value\":18},{\"key\":\"workbench.action.openProcessExplorer\",\"value\":19},{\"key\":\"workbench.action.toggleSharedProcess\",\"value\":20},{\"key\":\"workbench.action.configureLocale\",\"value\":21},{\"key\":\"workbench.action.appPerf\",\"value\":22},{\"key\":\"workbench.action.reportPerformanceIssueUsingReporter\",\"value\":23},{\"key\":\"workbench.action.openGlobalKeybindings\",\"value\":25},{\"key\":\"workbench.action.output.toggleOutput\",\"value\":27},{\"key\":\"extension.sayHello\",\"value\":29}]}');\n\t\titems1.set('cpp.1.lastsessiondate', 'Fri Oct 05 2018');\n\t\titems1.set('debug.actionswidgetposition', '0.6880952380952381');\n\n\t\tconst items2 = new Map<string, string>();\n\t\titems2.set('workbench.editors.files.textfileeditor', '{\"textEditorViewState\":[[\"file:///Users/dummy/Documents/ticino-playground/play.htm\",{\"0\":{\"cursorState\":[{\"inSelectionMode\":false,\"selectionStart\":{\"lineNumber\":6,\"column\":16},\"position\":{\"lineNumber\":6,\"column\":16}}],\"viewState\":{\"scrollLeft\":0,\"firstPosition\":{\"lineNumber\":1,\"column\":1},\"firstPositionDeltaTop\":0},\"contributionsState\":{\"editor.contrib.folding\":{},\"editor.contrib.wordHighlighter\":false}}}],[\"file:///Users/dummy/Documents/ticino-playground/nakefile.js\",{\"0\":{\"cursorState\":[{\"inSelectionMode\":false,\"selectionStart\":{\"lineNumber\":7,\"column\":81},\"position\":{\"lineNumber\":7,\"column\":81}}],\"viewState\":{\"scrollLeft\":0,\"firstPosition\":{\"lineNumber\":1,\"column\":1},\"firstPositionDeltaTop\":20},\"contributionsState\":{\"editor.contrib.folding\":{},\"editor.contrib.wordHighlighter\":false}}}],[\"file:///Users/dummy/Desktop/vscode2/.gitattributes\",{\"0\":{\"cursorState\":[{\"inSelectionMode\":false,\"selectionStart\":{\"lineNumber\":9,\"column\":12},\"position\":{\"lineNumber\":9,\"column\":12}}],\"viewState\":{\"scrollLeft\":0,\"firstPosition\":{\"lineNumber\":1,\"column\":1},\"firstPositionDeltaTop\":20},\"contributionsState\":{\"editor.contrib.folding\":{},\"editor.contrib.wordHighlighter\":false}}}],[\"file:///Users/dummy/Desktop/vscode2/src/vs/workbench/contrib/search/browser/openAnythingHandler.ts\",{\"0\":{\"cursorState\":[{\"inSelectionMode\":false,\"selectionStart\":{\"lineNumber\":1,\"column\":1},\"position\":{\"lineNumber\":1,\"column\":1}}],\"viewState\":{\"scrollLeft\":0,\"firstPosition\":{\"lineNumber\":1,\"column\":1},\"firstPositionDeltaTop\":0},\"contributionsState\":{\"editor.contrib.folding\":{},\"editor.contrib.wordHighlighter\":false}}}]]}');\n\n\t\tconst items3 = new Map<string, string>();\n\t\titems3.set('nps/iscandidate', 'false');\n\t\titems3.set('telemetry.instanceid', 'd52bfcd4-4be6-476b-a38f-d44c717c41d6');\n\t\titems3.set('workbench.activity.pinnedviewlets', '[{\"id\":\"workbench.view.explorer\",\"pinned\":true,\"order\":0,\"visible\":true},{\"id\":\"workbench.view.search\",\"pinned\":true,\"order\":1,\"visible\":true},{\"id\":\"workbench.view.scm\",\"pinned\":true,\"order\":2,\"visible\":true},{\"id\":\"workbench.view.debug\",\"pinned\":true,\"order\":3,\"visible\":true},{\"id\":\"workbench.view.extensions\",\"pinned\":true,\"order\":4,\"visible\":true},{\"id\":\"workbench.view.extension.gitlens\",\"pinned\":true,\"order\":7,\"visible\":true},{\"id\":\"workbench.view.extension.test\",\"pinned\":false,\"visible\":false}]');\n\t\titems3.set('workbench.panel.height', '419');\n\t\titems3.set('very.long.key.very.long.key.very.long.key.very.long.key.very.long.key.very.long.key.very.long.key.very.long.key.very.long.key.very.long.key.very.long.key.very.long.key.very.long.key.very.long.key.very.long.key.very.long.key.very.long.key.very.long.key.very.long.key.very.long.key.very.long.key.very.long.key.very.long.key.very.long.key.very.long.key.very.long.key.very.long.key.very.long.key.very.long.key.very.long.key.very.long.key.very.long.key.very.long.key.very.long.key.very.long.key.', 'is long');\n\n\t\tlet storedItems = await storage.getItems();\n\t\tstrictEqual(storedItems.size, 0);\n\n\t\tawait Promise.all([\n\t\t\tawait storage.updateItems({ insert: items1 }),\n\t\t\tawait storage.updateItems({ insert: items2 }),\n\t\t\tawait storage.updateItems({ insert: items3 })\n\t\t]);\n\n\t\tstrictEqual(await storage.checkIntegrity(true), 'ok');\n\t\tstrictEqual(await storage.checkIntegrity(false), 'ok');\n\n\t\tstoredItems = await storage.getItems();\n\t\tstrictEqual(storedItems.size, items1.size + items2.size + items3.size);\n\n\t\tconst items1Keys: string[] = [];\n\t\titems1.forEach((value, key) => {\n\t\t\titems1Keys.push(key);\n\t\t\tstrictEqual(storedItems.get(key), value);\n\t\t});\n\n\t\tconst items2Keys: string[] = [];\n\t\titems2.forEach((value, key) => {\n\t\t\titems2Keys.push(key);\n\t\t\tstrictEqual(storedItems.get(key), value);\n\t\t});\n\n\t\tconst items3Keys: string[] = [];\n\t\titems3.forEach((value, key) => {\n\t\t\titems3Keys.push(key);\n\t\t\tstrictEqual(storedItems.get(key), value);\n\t\t});\n\n\t\tawait Promise.all([\n\t\t\tawait storage.updateItems({ delete: toSet(items1Keys) }),\n\t\t\tawait storage.updateItems({ delete: toSet(items2Keys) }),\n\t\t\tawait storage.updateItems({ delete: toSet(items3Keys) })\n\t\t]);\n\n\t\tstoredItems = await storage.getItems();\n\t\tstrictEqual(storedItems.size, 0);\n\n\t\tawait Promise.all([\n\t\t\tawait storage.updateItems({ insert: items1 }),\n\t\t\tawait storage.getItems(),\n\t\t\tawait storage.updateItems({ insert: items2 }),\n\t\t\tawait storage.getItems(),\n\t\t\tawait storage.updateItems({ insert: items3 }),\n\t\t\tawait storage.getItems(),\n\t\t]);\n\n\t\tstoredItems = await storage.getItems();\n\t\tstrictEqual(storedItems.size, items1.size + items2.size + items3.size);\n\n\t\tawait storage.close();\n\n\t\tstorage = new SQLiteStorageDatabase(join(testdir, 'storage.db'));\n\n\t\tstoredItems = await storage.getItems();\n\t\tstrictEqual(storedItems.size, items1.size + items2.size + items3.size);\n\n\t\tawait storage.close();\n\t});\n\n\ttest('very large item value', async function () {\n\t\tconst storage = new SQLiteStorageDatabase(join(testdir, 'storage.db'));\n\n\t\tlet randomData = createLargeRandomData(); // 3.6MB\n\n\t\tawait storage.updateItems({ insert: randomData.items });\n\n\t\tlet storedItems = await storage.getItems();\n\t\tstrictEqual(randomData.items.get('colorthemedata'), storedItems.get('colorthemedata'));\n\t\tstrictEqual(randomData.items.get('commandpalette.mru.cache'), storedItems.get('commandpalette.mru.cache'));\n\t\tstrictEqual(randomData.items.get('super.large.string'), storedItems.get('super.large.string'));\n\n\t\trandomData = createLargeRandomData();\n\n\t\tawait storage.updateItems({ insert: randomData.items });\n\n\t\tstoredItems = await storage.getItems();\n\t\tstrictEqual(randomData.items.get('colorthemedata'), storedItems.get('colorthemedata'));\n\t\tstrictEqual(randomData.items.get('commandpalette.mru.cache'), storedItems.get('commandpalette.mru.cache'));\n\t\tstrictEqual(randomData.items.get('super.large.string'), storedItems.get('super.large.string'));\n\n\t\tconst toDelete = new Set<string>();\n\t\ttoDelete.add('super.large.string');\n\t\tawait storage.updateItems({ delete: toDelete });\n\n\t\tstoredItems = await storage.getItems();\n\t\tstrictEqual(randomData.items.get('colorthemedata'), storedItems.get('colorthemedata'));\n\t\tstrictEqual(randomData.items.get('commandpalette.mru.cache'), storedItems.get('commandpalette.mru.cache'));\n\t\tok(!storedItems.get('super.large.string'));\n\n\t\tawait storage.close();\n\t});\n\n\ttest('multiple concurrent writes execute in sequence', async () => {\n\t\treturn runWithFakedTimers({}, async () => {\n\t\t\tclass TestStorage extends Storage {\n\t\t\t\tgetStorage(): IStorageDatabase {\n\t\t\t\t\treturn this.database;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst storage = new TestStorage(new SQLiteStorageDatabase(join(testdir, 'storage.db')));\n\n\t\t\tawait storage.init();\n\n\t\t\tstorage.set('foo', 'bar');\n\t\t\tstorage.set('some/foo/path', 'some/bar/path');\n\n\t\t\tawait timeout(2);\n\n\t\t\tstorage.set('foo1', 'bar');\n\t\t\tstorage.set('some/foo1/path', 'some/bar/path');\n\n\t\t\tawait timeout(2);\n\n\t\t\tstorage.set('foo2', 'bar');\n\t\t\tstorage.set('some/foo2/path', 'some/bar/path');\n\n\t\t\tawait timeout(2);\n\n\t\t\tstorage.delete('foo1');\n\t\t\tstorage.delete('some/foo1/path');\n\n\t\t\tawait timeout(2);\n\n\t\t\tstorage.delete('foo4');\n\t\t\tstorage.delete('some/foo4/path');\n\n\t\t\tawait timeout(5);\n\n\t\t\tstorage.set('foo3', 'bar');\n\t\t\tawait storage.set('some/foo3/path', 'some/bar/path');\n\n\t\t\tconst items = await storage.getStorage().getItems();\n\t\t\tstrictEqual(items.get('foo'), 'bar');\n\t\t\tstrictEqual(items.get('some/foo/path'), 'some/bar/path');\n\t\t\tstrictEqual(items.has('foo1'), false);\n\t\t\tstrictEqual(items.has('some/foo1/path'), false);\n\t\t\tstrictEqual(items.get('foo2'), 'bar');\n\t\t\tstrictEqual(items.get('some/foo2/path'), 'some/bar/path');\n\t\t\tstrictEqual(items.get('foo3'), 'bar');\n\t\t\tstrictEqual(items.get('some/foo3/path'), 'some/bar/path');\n\n\t\t\tawait storage.close();\n\t\t});\n\t});\n\n\ttest('lots of INSERT & DELETE (below inline max)', async () => {\n\t\tconst storage = new SQLiteStorageDatabase(join(testdir, 'storage.db'));\n\n\t\tconst { items, keys } = createManyRandomData(200);\n\n\t\tawait storage.updateItems({ insert: items });\n\n\t\tlet storedItems = await storage.getItems();\n\t\tstrictEqual(storedItems.size, items.size);\n\n\t\tawait storage.updateItems({ delete: keys });\n\n\t\tstoredItems = await storage.getItems();\n\t\tstrictEqual(storedItems.size, 0);\n\n\t\tawait storage.close();\n\t});\n\n\ttest('lots of INSERT & DELETE (above inline max)', async () => {\n\t\tconst storage = new SQLiteStorageDatabase(join(testdir, 'storage.db'));\n\n\t\tconst { items, keys } = createManyRandomData();\n\n\t\tawait storage.updateItems({ insert: items });\n\n\t\tlet storedItems = await storage.getItems();\n\t\tstrictEqual(storedItems.size, items.size);\n\n\t\tawait storage.updateItems({ delete: keys });\n\n\t\tstoredItems = await storage.getItems();\n\t\tstrictEqual(storedItems.size, 0);\n\n\t\tawait storage.close();\n\t});\n\n\ttest('invalid path does not hang', async () => {\n\t\tconst storage = new SQLiteStorageDatabase(join(testdir, 'nonexist', 'storage.db'));\n\n\t\tlet error;\n\t\ttry {\n\t\t\tawait storage.getItems();\n\t\t\tawait storage.close();\n\t\t} catch (e) {\n\t\t\terror = e;\n\t\t}\n\n\t\tok(error);\n\t});\n\n\ttest('optimize', async () => {\n\t\tconst dbPath = join(testdir, 'storage.db');\n\t\tlet storage = new SQLiteStorageDatabase(dbPath);\n\n\t\tconst { items, keys } = createManyRandomData(400, true);\n\n\t\tawait storage.updateItems({ insert: items });\n\n\t\tlet storedItems = await storage.getItems();\n\t\tstrictEqual(storedItems.size, items.size);\n\n\t\tawait storage.optimize();\n\t\tawait storage.close();\n\n\t\tconst sizeBeforeDeleteAndOptimize = (await fs.promises.stat(dbPath)).size;\n\n\t\tstorage = new SQLiteStorageDatabase(dbPath);\n\n\t\tstoredItems = await storage.getItems();\n\t\tstrictEqual(storedItems.size, items.size);\n\n\t\tawait storage.updateItems({ delete: keys });\n\n\t\tstoredItems = await storage.getItems();\n\t\tstrictEqual(storedItems.size, 0);\n\n\t\tawait storage.optimize();\n\t\tawait storage.close();\n\n\t\tstorage = new SQLiteStorageDatabase(dbPath);\n\n\t\tstoredItems = await storage.getItems();\n\t\tstrictEqual(storedItems.size, 0);\n\n\t\tawait storage.close();\n\n\t\tconst sizeAfterDeleteAndOptimize = (await fs.promises.stat(dbPath)).size;\n\n\t\tstrictEqual(sizeAfterDeleteAndOptimize < sizeBeforeDeleteAndOptimize, true);\n\t});\n\n\tfunction createManyRandomData(length = 400, includeVeryLarge = false) {\n\t\tconst items = new Map<string, string>();\n\t\tconst keys = new Set<string>();\n\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tconst uuid = generateUuid();\n\t\t\tconst key = `key: ${uuid}`;\n\n\t\t\titems.set(key, `value: ${uuid}`);\n\t\t\tkeys.add(key);\n\t\t}\n\n\t\tif (includeVeryLarge) {\n\t\t\tconst largeData = createLargeRandomData();\n\t\t\tfor (const [key, value] of largeData.items) {\n\t\t\t\titems.set(key, value);\n\t\t\t\tkeys.add(key);\n\t\t\t}\n\t\t}\n\n\t\treturn { items, keys };\n\t}\n\n\tfunction createLargeRandomData() {\n\t\tconst items = new Map<string, string>();\n\t\titems.set('colorthemedata', '{\"id\":\"vs vscode-theme-defaults-themes-light_plus-json\",\"label\":\"Light+ (default light)\",\"settingsId\":\"Default Light+\",\"selector\":\"vs.vscode-theme-defaults-themes-light_plus-json\",\"themeTokenColors\":[{\"settings\":{\"foreground\":\"#000000ff\",\"background\":\"#ffffffff\"}},{\"scope\":[\"meta.embedded\",\"source.groovy.embedded\"],\"settings\":{\"foreground\":\"#000000ff\"}},{\"scope\":\"emphasis\",\"settings\":{\"fontStyle\":\"italic\"}},{\"scope\":\"strong\",\"settings\":{\"fontStyle\":\"bold\"}},{\"scope\":\"meta.diff.header\",\"settings\":{\"foreground\":\"#000080\"}},{\"scope\":\"comment\",\"settings\":{\"foreground\":\"#008000\"}},{\"scope\":\"constant.language\",\"settings\":{\"foreground\":\"#0000ff\"}},{\"scope\":[\"constant.numeric\"],\"settings\":{\"foreground\":\"#098658\"}},{\"scope\":\"constant.regexp\",\"settings\":{\"foreground\":\"#811f3f\"}},{\"name\":\"css tags in selectors, xml tags\",\"scope\":\"entity.name.tag\",\"settings\":{\"foreground\":\"#800000\"}},{\"scope\":\"entity.name.selector\",\"settings\":{\"foreground\":\"#800000\"}},{\"scope\":\"entity.other.attribute-name\",\"settings\":{\"foreground\":\"#ff0000\"}},{\"scope\":[\"entity.other.attribute-name.class.css\",\"entity.other.attribute-name.class.mixin.css\",\"entity.other.attribute-name.id.css\",\"entity.other.attribute-name.parent-selector.css\",\"entity.other.attribute-name.pseudo-class.css\",\"entity.other.attribute-name.pseudo-element.css\",\"source.css.less entity.other.attribute-name.id\",\"entity.other.attribute-name.attribute.scss\",\"entity.other.attribute-name.scss\"],\"settings\":{\"foreground\":\"#800000\"}},{\"scope\":\"invalid\",\"settings\":{\"foreground\":\"#cd3131\"}},{\"scope\":\"markup.underline\",\"settings\":{\"fontStyle\":\"underline\"}},{\"scope\":\"markup.bold\",\"settings\":{\"fontStyle\":\"bold\",\"foreground\":\"#000080\"}},{\"scope\":\"markup.heading\",\"settings\":{\"fontStyle\":\"bold\",\"foreground\":\"#800000\"}},{\"scope\":\"markup.italic\",\"settings\":{\"fontStyle\":\"italic\"}},{\"scope\":\"markup.inserted\",\"settings\":{\"foreground\":\"#098658\"}},{\"scope\":\"markup.deleted\",\"settings\":{\"foreground\":\"#a31515\"}},{\"scope\":\"markup.changed\",\"settings\":{\"foreground\":\"#0451a5\"}},{\"scope\":[\"punctuation.definition.quote.begin.markdown\",\"punctuation.definition.list.begin.markdown\"],\"settings\":{\"foreground\":\"#0451a5\"}},{\"scope\":\"markup.inline.raw\",\"settings\":{\"foreground\":\"#800000\"}},{\"name\":\"brackets of XML/HTML tags\",\"scope\":\"punctuation.definition.tag\",\"settings\":{\"foreground\":\"#800000\"}},{\"scope\":\"meta.preprocessor\",\"settings\":{\"foreground\":\"#0000ff\"}},{\"scope\":\"meta.preprocessor.string\",\"settings\":{\"foreground\":\"#a31515\"}},{\"scope\":\"meta.preprocessor.numeric\",\"settings\":{\"foreground\":\"#098658\"}},{\"scope\":\"meta.structure.dictionary.key.python\",\"settings\":{\"foreground\":\"#0451a5\"}},{\"scope\":\"storage\",\"settings\":{\"foreground\":\"#0000ff\"}},{\"scope\":\"storage.type\",\"settings\":{\"foreground\":\"#0000ff\"}},{\"scope\":\"storage.modifier\",\"settings\":{\"foreground\":\"#0000ff\"}},{\"scope\":\"string\",\"settings\":{\"foreground\":\"#a31515\"}},{\"scope\":[\"string.comment.buffered.block.pug\",\"string.quoted.pug\",\"string.interpolated.pug\",\"string.unquoted.plain.in.yaml\",\"string.unquoted.plain.out.yaml\",\"string.unquoted.block.yaml\",\"string.quoted.single.yaml\",\"string.quoted.double.xml\",\"string.quoted.single.xml\",\"string.unquoted.cdata.xml\",\"string.quoted.double.html\",\"string.quoted.single.html\",\"string.unquoted.html\",\"string.quoted.single.handlebars\",\"string.quoted.double.handlebars\"],\"settings\":{\"foreground\":\"#0000ff\"}},{\"scope\":\"string.regexp\",\"settings\":{\"foreground\":\"#811f3f\"}},{\"name\":\"String interpolation\",\"scope\":[\"punctuation.definition.template-expression.begin\",\"punctuation.definition.template-expression.end\",\"punctuation.section.embedded\"],\"settings\":{\"foreground\":\"#0000ff\"}},{\"name\":\"Reset JavaScript string interpolation expression\",\"scope\":[\"meta.template.expression\"],\"settings\":{\"foreground\":\"#000000\"}},{\"scope\":[\"support.constant.property-value\",\"support.constant.font-name\",\"support.constant.media-type\",\"support.constant.media\",\"constant.other.color.rgb-value\",\"constant.other.rgb-value\",\"support.constant.color\"],\"settings\":{\"foreground\":\"#0451a5\"}},{\"scope\":[\"support.type.vendored.property-name\",\"support.type.property-name\",\"variable.css\",\"variable.scss\",\"variable.other.less\",\"source.coffee.embedded\"],\"settings\":{\"foreground\":\"#ff0000\"}},{\"scope\":[\"support.type.property-name.json\"],\"settings\":{\"foreground\":\"#0451a5\"}},{\"scope\":\"keyword\",\"settings\":{\"foreground\":\"#0000ff\"}},{\"scope\":\"keyword.control\",\"settings\":{\"foreground\":\"#0000ff\"}},{\"scope\":\"keyword.operator\",\"settings\":{\"foreground\":\"#000000\"}},{\"scope\":[\"keyword.operator.new\",\"keyword.operator.expression\",\"keyword.operator.cast\",\"keyword.operator.sizeof\",\"keyword.operator.instanceof\",\"keyword.operator.logical.python\"],\"settings\":{\"foreground\":\"#0000ff\"}},{\"scope\":\"keyword.other.unit\",\"settings\":{\"foreground\":\"#098658\"}},{\"scope\":[\"punctuation.section.embedded.begin.php\",\"punctuation.section.embedded.end.php\"],\"settings\":{\"foreground\":\"#800000\"}},{\"scope\":\"support.function.git-rebase\",\"settings\":{\"foreground\":\"#0451a5\"}},{\"scope\":\"constant.sha.git-rebase\",\"settings\":{\"foreground\":\"#098658\"}},{\"name\":\"coloring of the Java import and package identifiers\",\"scope\":[\"storage.modifier.import.java\",\"variable.language.wildcard.java\",\"storage.modifier.package.java\"],\"settings\":{\"foreground\":\"#000000\"}},{\"name\":\"this.self\",\"scope\":\"variable.language\",\"settings\":{\"foreground\":\"#0000ff\"}},{\"name\":\"Function declarations\",\"scope\":[\"entity.name.function\",\"support.function\",\"support.constant.handlebars\"],\"settings\":{\"foreground\":\"#795E26\"}},{\"name\":\"Types declaration and references\",\"scope\":[\"meta.return-type\",\"support.class\",\"support.type\",\"entity.name.type\",\"entity.name.class\",\"storage.type.numeric.go\",\"storage.type.byte.go\",\"storage.type.boolean.go\",\"storage.type.string.go\",\"storage.type.uintptr.go\",\"storage.type.error.go\",\"storage.type.rune.go\",\"storage.type.cs\",\"storage.type.generic.cs\",\"storage.type.modifier.cs\",\"storage.type.variable.cs\",\"storage.type.annotation.java\",\"storage.type.generic.java\",\"storage.type.java\",\"storage.type.object.array.java\",\"storage.type.primitive.array.java\",\"storage.type.primitive.java\",\"storage.type.token.java\",\"storage.type.groovy\",\"storage.type.annotation.groovy\",\"storage.type.parameters.groovy\",\"storage.type.generic.groovy\",\"storage.type.object.array.groovy\",\"storage.type.primitive.array.groovy\",\"storage.type.primitive.groovy\"],\"settings\":{\"foreground\":\"#267f99\"}},{\"name\":\"Types declaration and references, TS grammar specific\",\"scope\":[\"meta.type.cast.expr\",\"meta.type.new.expr\",\"support.constant.math\",\"support.constant.dom\",\"support.constant.json\",\"entity.other.inherited-class\"],\"settings\":{\"foreground\":\"#267f99\"}},{\"name\":\"Control flow keywords\",\"scope\":\"keyword.control\",\"settings\":{\"foreground\":\"#AF00DB\"}},{\"name\":\"Variable and parameter name\",\"scope\":[\"variable\",\"meta.definition.variable.name\",\"support.variable\",\"entity.name.variable\"],\"settings\":{\"foreground\":\"#001080\"}},{\"name\":\"Object keys, TS grammar specific\",\"scope\":[\"meta.object-literal.key\"],\"settings\":{\"foreground\":\"#001080\"}},{\"name\":\"CSS property value\",\"scope\":[\"support.constant.property-value\",\"support.constant.font-name\",\"support.constant.media-type\",\"support.constant.media\",\"constant.other.color.rgb-value\",\"constant.other.rgb-value\",\"support.constant.color\"],\"settings\":{\"foreground\":\"#0451a5\"}},{\"name\":\"Regular expression groups\",\"scope\":[\"punctuation.definition.group.regexp\",\"punctuation.definition.group.assertion.regexp\",\"punctuation.definition.character-class.regexp\",\"punctuation.character.set.begin.regexp\",\"punctuation.character.set.end.regexp\",\"keyword.operator.negation.regexp\",\"support.other.parenthesis.regexp\"],\"settings\":{\"foreground\":\"#d16969\"}},{\"scope\":[\"constant.character.character-class.regexp\",\"constant.other.character-class.set.regexp\",\"constant.other.character-class.regexp\",\"constant.character.set.regexp\"],\"settings\":{\"foreground\":\"#811f3f\"}},{\"scope\":\"keyword.operator.quantifier.regexp\",\"settings\":{\"foreground\":\"#000000\"}},{\"scope\":[\"keyword.operator.or.regexp\",\"keyword.control.anchor.regexp\"],\"settings\":{\"foreground\":\"#ff0000\"}},{\"scope\":\"constant.character\",\"settings\":{\"foreground\":\"#0000ff\"}},{\"scope\":\"constant.character.escape\",\"settings\":{\"foreground\":\"#ff0000\"}},{\"scope\":\"token.info-token\",\"settings\":{\"foreground\":\"#316bcd\"}},{\"scope\":\"token.warn-token\",\"settings\":{\"foreground\":\"#cd9731\"}},{\"scope\":\"token.error-token\",\"settings\":{\"foreground\":\"#cd3131\"}},{\"scope\":\"token.debug-token\",\"settings\":{\"foreground\":\"#800080\"}}],\"extensionData\":{\"extensionId\":\"vscode.theme-defaults\",\"extensionPublisher\":\"vscode\",\"extensionName\":\"theme-defaults\",\"extensionIsBuiltin\":true},\"colorMap\":{\"editor.background\":\"#ffffff\",\"editor.foreground\":\"#000000\",\"editor.inactiveSelectionBackground\":\"#e5ebf1\",\"editorIndentGuide.background\":\"#d3d3d3\",\"editorIndentGuide.activeBackground\":\"#939393\",\"editor.selectionHighlightBackground\":\"#add6ff4d\",\"editorSuggestWidget.background\":\"#f3f3f3\",\"activityBarBadge.background\":\"#007acc\",\"sideBarTitle.foreground\":\"#6f6f6f\",\"list.hoverBackground\":\"#e8e8e8\",\"input.placeholderForeground\":\"#767676\",\"settings.textInputBorder\":\"#cecece\",\"settings.numberInputBorder\":\"#cecece\"}}');\n\t\titems.set('commandpalette.mru.cache', '{\"usesLRU\":true,\"entries\":[{\"key\":\"revealFileInOS\",\"value\":3},{\"key\":\"extension.openInGitHub\",\"value\":4},{\"key\":\"workbench.extensions.action.openExtensionsFolder\",\"value\":11},{\"key\":\"workbench.action.showRuntimeExtensions\",\"value\":14},{\"key\":\"workbench.action.toggleTabsVisibility\",\"value\":15},{\"key\":\"extension.liveServerPreview.open\",\"value\":16},{\"key\":\"workbench.action.openIssueReporter\",\"value\":18},{\"key\":\"workbench.action.openProcessExplorer\",\"value\":19},{\"key\":\"workbench.action.toggleSharedProcess\",\"value\":20},{\"key\":\"workbench.action.configureLocale\",\"value\":21},{\"key\":\"workbench.action.appPerf\",\"value\":22},{\"key\":\"workbench.action.reportPerformanceIssueUsingReporter\",\"value\":23},{\"key\":\"workbench.action.openGlobalKeybindings\",\"value\":25},{\"key\":\"workbench.action.output.toggleOutput\",\"value\":27},{\"key\":\"extension.sayHello\",\"value\":29}]}');\n\n\t\tconst uuid = generateUuid();\n\t\tconst value: string[] = [];\n\t\tfor (let i = 0; i < 100000; i++) {\n\t\t\tvalue.push(uuid);\n\t\t}\n\n\t\titems.set('super.large.string', value.join()); // 3.6MB\n\n\t\treturn { items, uuid, value };\n\t}\n});\n\n\n"],
  "mappings": "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",
  "names": []
}
