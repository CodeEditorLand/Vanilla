{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/parts/request/common/request.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBufferReadableStream } from '../../../common/buffer.js';\n\nconst offlineName = 'Offline';\n\n/**\n * Checks if the given error is offline error\n */\nexport function isOfflineError(error: any): boolean {\n\tif (error instanceof OfflineError) {\n\t\treturn true;\n\t}\n\treturn error instanceof Error && error.name === offlineName && error.message === offlineName;\n}\n\nexport class OfflineError extends Error {\n\tconstructor() {\n\t\tsuper(offlineName);\n\t\tthis.name = this.message;\n\t}\n}\n\nexport interface IHeaders {\n\t'Proxy-Authorization'?: string;\n\t'x-operation-id'?: string;\n\t'retry-after'?: string;\n\tetag?: string;\n\t'Content-Length'?: string;\n\t'activityid'?: string;\n\t'X-Market-User-Id'?: string;\n\t[header: string]: string | string[] | undefined;\n}\n\nexport interface IRequestOptions {\n\ttype?: string;\n\turl?: string;\n\tuser?: string;\n\tpassword?: string;\n\theaders?: IHeaders;\n\ttimeout?: number;\n\tdata?: string;\n\tfollowRedirects?: number;\n\tproxyAuthorization?: string;\n}\n\nexport interface IRequestContext {\n\tres: {\n\t\theaders: IHeaders;\n\t\tstatusCode?: number;\n\t};\n\tstream: VSBufferReadableStream;\n}\n"],
  "mappings": ";;AAKA,SAAS,8BAA8B;AAEvC,MAAM,cAAc;AAKb,SAAS,eAAe,OAAqB;AACnD,MAAI,iBAAiB,cAAc;AAClC,WAAO;AAAA,EACR;AACA,SAAO,iBAAiB,SAAS,MAAM,SAAS,eAAe,MAAM,YAAY;AAClF;AALgB;AAOT,MAAM,qBAAqB,MAAM;AAAA,EAnBxC,OAmBwC;AAAA;AAAA;AAAA,EACvC,cAAc;AACb,UAAM,WAAW;AACjB,SAAK,OAAO,KAAK;AAAA,EAClB;AACD;",
  "names": []
}
