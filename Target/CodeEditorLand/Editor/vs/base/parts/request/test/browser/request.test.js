import*as p from"http";import"net";import a from"assert";import{CancellationToken as c,CancellationTokenSource as h}from"../../../../common/cancellation.js";import{ensureNoDisposablesAreLeakedInTestSuite as m}from"../../../../test/common/utils.js";import{request as s}from"../../browser/request.js";import{streamToBuffer as u}from"../../../../common/buffer.js";import{flakySuite as f}from"../../../../test/common/testUtils.js";f("Request",()=>{let o,n;setup(async()=>{o=await new Promise((e,r)=>{n=p.createServer((t,i)=>{if(t.url==="/noreply")return;i.setHeader("Content-Type","application/json"),t.headers["echo-header"]&&i.setHeader("echo-header",t.headers["echo-header"]);const l=[];t.on("data",d=>l.push(d)),t.on("end",()=>{i.end(JSON.stringify({method:t.method,url:t.url,data:Buffer.concat(l).toString()}))})}).listen(0,"127.0.0.1",()=>{const t=n.address();e(t.port)}).on("error",t=>{r(t)})})}),teardown(async()=>{await new Promise((e,r)=>{n.close(t=>t?r(t):e())})}),test("GET",async()=>{const e=await s({url:`http://127.0.0.1:${o}`,headers:{"echo-header":"echo-value"}},c.None);a.strictEqual(e.res.statusCode,200),a.strictEqual(e.res.headers["content-type"],"application/json"),a.strictEqual(e.res.headers["echo-header"],"echo-value");const r=await u(e.stream),t=JSON.parse(r.toString());a.strictEqual(t.method,"GET"),a.strictEqual(t.url,"/")}),test("POST",async()=>{const e=await s({type:"POST",url:`http://127.0.0.1:${o}/postpath`,data:"Some data"},c.None);a.strictEqual(e.res.statusCode,200),a.strictEqual(e.res.headers["content-type"],"application/json");const r=await u(e.stream),t=JSON.parse(r.toString());a.strictEqual(t.method,"POST"),a.strictEqual(t.url,"/postpath"),a.strictEqual(t.data,"Some data")}),test("timeout",async()=>{try{await s({type:"GET",url:`http://127.0.0.1:${o}/noreply`,timeout:123},c.None),a.fail("Should fail with timeout")}catch(e){a.strictEqual(e.message,"Fetch timeout: 123ms")}}),test("cancel",async()=>{try{const e=new h,r=s({type:"GET",url:`http://127.0.0.1:${o}/noreply`},e.token);await new Promise(t=>setTimeout(t,100)),e.cancel(),await r,a.fail("Should fail with cancellation")}catch(e){a.strictEqual(e.message,"Canceled")}}),m()});
