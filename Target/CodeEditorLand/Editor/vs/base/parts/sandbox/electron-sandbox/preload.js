var g=(o=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(o,{get:(s,n)=>(typeof require<"u"?require:s)[n]}):o)(function(o){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+o+'" is not supported')});(function(){"use strict";let{ipcRenderer:o,webFrame:s,contextBridge:n,webUtils:d}=g("electron");function t(e){if(!e||!e.startsWith("vscode:"))throw new Error(`Unsupported event IPC channel '${e}'`);return!0}function v(e){for(let r of process.argv)if(r.indexOf(`--${e}=`)===0)return r.split("=")[1]}let i,c=(async()=>{let e=v("vscode-window-config");if(!e)throw new Error("Preload: did not find expected vscode-window-config in renderer process arguments list.");try{t(e);let r=i=await o.invoke(e);return Object.assign(process.env,r.userEnv),s.setZoomLevel(r.zoomLevel??0),r}catch(r){throw new Error(`Preload: unable to fetch vscode-window-config: ${r}`)}})(),f=(async()=>{let[e,r]=await Promise.all([(async()=>(await c).userEnv)(),o.invoke("vscode:fetchShellEnv")]);return{...process.env,...r,...e}})(),u={ipcRenderer:{send(e,...r){t(e)&&o.send(e,...r)},invoke(e,...r){return t(e),o.invoke(e,...r)},on(e,r){return t(e),o.on(e,r),this},once(e,r){return t(e),o.once(e,r),this},removeListener(e,r){return t(e),o.removeListener(e,r),this}},ipcMessagePort:{acquire(e,r){if(t(e)){let a=(p,l)=>{r===l&&(o.off(e,a),window.postMessage(r,"*",p.ports))};o.on(e,a)}}},webFrame:{setZoomLevel(e){typeof e=="number"&&s.setZoomLevel(e)}},webUtils:{getPathForFile(e){return d.getPathForFile(e)}},process:{get platform(){return process.platform},get arch(){return process.arch},get env(){return{...process.env}},get versions(){return process.versions},get type(){return"renderer"},get execPath(){return process.execPath},cwd(){return process.env.VSCODE_CWD||process.execPath.substr(0,process.execPath.lastIndexOf(process.platform==="win32"?"\\":"/"))},shellEnv(){return f},getProcessMemoryInfo(){return process.getProcessMemoryInfo()},on(e,r){process.on(e,r)}},context:{configuration(){return i},async resolveConfiguration(){return c}}};if(process.contextIsolated)try{n.exposeInMainWorld("vscode",u)}catch(e){console.error(e)}else window.vscode=u})();
