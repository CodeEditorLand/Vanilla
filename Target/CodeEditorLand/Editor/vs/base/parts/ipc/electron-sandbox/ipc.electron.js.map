{
  "version": 3,
  "sources": ["../../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/parts/ipc/electron-sandbox/ipc.electron.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from \"../../../common/buffer.js\";\nimport { Event } from \"../../../common/event.js\";\nimport type { IDisposable } from \"../../../common/lifecycle.js\";\nimport { ipcRenderer } from \"../../sandbox/electron-sandbox/globals.js\";\nimport { Protocol as ElectronProtocol } from \"../common/ipc.electron.js\";\nimport { IPCClient } from \"../common/ipc.js\";\n\n/**\n * An implementation of `IPCClient` on top of Electron `ipcRenderer` IPC communication\n * provided from sandbox globals (via preload script).\n */\nexport class Client extends IPCClient implements IDisposable {\n\tprivate protocol: ElectronProtocol;\n\n\tprivate static createProtocol(): ElectronProtocol {\n\t\tconst onMessage = Event.fromNodeEventEmitter<VSBuffer>(\n\t\t\tipcRenderer,\n\t\t\t\"vscode:message\",\n\t\t\t(_, message) => VSBuffer.wrap(message),\n\t\t);\n\t\tipcRenderer.send(\"vscode:hello\");\n\n\t\treturn new ElectronProtocol(ipcRenderer, onMessage);\n\t}\n\n\tconstructor(id: string) {\n\t\tconst protocol = Client.createProtocol();\n\t\tsuper(protocol, id);\n\n\t\tthis.protocol = protocol;\n\t}\n\n\toverride dispose(): void {\n\t\tthis.protocol.disconnect();\n\t\tsuper.dispose();\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,gBAAgB;AACzB,SAAS,aAAa;AAEtB,SAAS,mBAAmB;AAC5B,SAAS,YAAY,wBAAwB;AAC7C,SAAS,iBAAiB;AAMnB,MAAM,eAAe,UAAiC;AAAA,EAhB7D,OAgB6D;AAAA;AAAA;AAAA,EACpD;AAAA,EAER,OAAe,iBAAmC;AACjD,UAAM,YAAY,MAAM;AAAA,MACvB;AAAA,MACA;AAAA,MACA,CAAC,GAAG,YAAY,SAAS,KAAK,OAAO;AAAA,IACtC;AACA,gBAAY,KAAK,cAAc;AAE/B,WAAO,IAAI,iBAAiB,aAAa,SAAS;AAAA,EACnD;AAAA,EAEA,YAAY,IAAY;AACvB,UAAM,WAAW,OAAO,eAAe;AACvC,UAAM,UAAU,EAAE;AAElB,SAAK,WAAW;AAAA,EACjB;AAAA,EAES,UAAgB;AACxB,SAAK,SAAS,WAAW;AACzB,UAAM,QAAQ;AAAA,EACf;AACD;",
  "names": []
}
