import{Event as n}from"../../../common/event.js";import{generateUuid as a}from"../../../common/uuid.js";import{Client as c}from"../common/ipc.mp.js";import{validatedIpcMain as m}from"./ipcMain.js";class g extends c{constructor(e,r){super({addEventListener:(t,s)=>e.addListener(t,s),removeEventListener:(t,s)=>e.removeListener(t,s),postMessage:t=>e.postMessage(t),start:()=>e.start(),close:()=>e.close()},r)}}async function f(o){if(o.isDestroyed()||o.webContents.isDestroyed())throw new Error("ipc.mp#connect: Cannot talk to window because it is closed or destroyed");const e=a();o.webContents.send("vscode:createMessageChannel",e);const r=n.fromNodeEventEmitter(m,"vscode:createMessageChannelResult",(s,i)=>({nonce:i,port:s.ports[0]})),{port:t}=await n.toPromise(n.once(n.filter(r,s=>s.nonce===e)));return t}export{g as Client,f as connect};
