import{validatedIpcMain as a}from"./ipcMain.js";import{Event as o}from"../../../common/event.js";import{generateUuid as c}from"../../../common/uuid.js";import{Client as m}from"../common/ipc.mp.js";class w extends m{constructor(e,r){super({addEventListener:(t,s)=>e.addListener(t,s),removeEventListener:(t,s)=>e.removeListener(t,s),postMessage:t=>e.postMessage(t),start:()=>e.start(),close:()=>e.close()},r)}}async function P(n){if(n.isDestroyed()||n.webContents.isDestroyed())throw new Error("ipc.mp#connect: Cannot talk to window because it is closed or destroyed");const e=c();n.webContents.send("vscode:createMessageChannel",e);const r=o.fromNodeEventEmitter(a,"vscode:createMessageChannelResult",(s,i)=>({nonce:i,port:s.ports[0]})),{port:t}=await o.toPromise(o.once(o.filter(r,s=>s.nonce===e)));return t}export{w as Client,P as connect};
