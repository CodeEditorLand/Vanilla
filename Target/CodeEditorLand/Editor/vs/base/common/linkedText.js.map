{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/common/linkedText.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { memoize } from \"./decorators.js\";\n\nexport interface ILink {\n\treadonly label: string;\n\treadonly href: string;\n\treadonly title?: string;\n}\n\nexport type LinkedTextNode = string | ILink;\n\nexport class LinkedText {\n\tconstructor(readonly nodes: LinkedTextNode[]) {}\n\n\t@memoize\n\ttoString(): string {\n\t\treturn this.nodes\n\t\t\t.map((node) => (typeof node === \"string\" ? node : node.label))\n\t\t\t.join(\"\");\n\t}\n}\n\nconst LINK_REGEX =\n\t/\\[([^\\]]+)\\]\\(((?:https?:\\/\\/|command:|file:)[^)\\s]+)(?: ([\"'])(.+?)(\\3))?\\)/gi;\n\nexport function parseLinkedText(text: string): LinkedText {\n\tconst result: LinkedTextNode[] = [];\n\n\tlet index = 0;\n\tlet match: RegExpExecArray | null;\n\n\twhile ((match = LINK_REGEX.exec(text))) {\n\t\tif (match.index - index > 0) {\n\t\t\tresult.push(text.substring(index, match.index));\n\t\t}\n\n\t\tconst [, label, href, , title] = match;\n\n\t\tif (title) {\n\t\t\tresult.push({ label, href, title });\n\t\t} else {\n\t\t\tresult.push({ label, href });\n\t\t}\n\n\t\tindex = match.index + match[0].length;\n\t}\n\n\tif (index < text.length) {\n\t\tresult.push(text.substring(index));\n\t}\n\n\treturn new LinkedText(result);\n}\n"],
  "mappings": ";;;;;;;;;;;AAKA,SAAS,eAAe;AAUjB,MAAM,WAAW;AAAA,EACvB,YAAqB,OAAyB;AAAzB;AAAA,EAA0B;AAAA,EAhBhD,OAewB;AAAA;AAAA;AAAA,EAIvB,WAAmB;AAClB,WAAO,KAAK,MACV,IAAI,CAAC,SAAU,OAAO,SAAS,WAAW,OAAO,KAAK,KAAM,EAC5D,KAAK,EAAE;AAAA,EACV;AACD;AALC;AAAA,EADC;AAAA,GAHW,WAIZ;AAOD,MAAM,aACL;AAEM,SAAS,gBAAgB,MAA0B;AACzD,QAAM,SAA2B,CAAC;AAElC,MAAI,QAAQ;AACZ,MAAI;AAEJ,SAAQ,QAAQ,WAAW,KAAK,IAAI,GAAI;AACvC,QAAI,MAAM,QAAQ,QAAQ,GAAG;AAC5B,aAAO,KAAK,KAAK,UAAU,OAAO,MAAM,KAAK,CAAC;AAAA,IAC/C;AAEA,UAAM,CAAC,EAAE,OAAO,MAAM,EAAE,KAAK,IAAI;AAEjC,QAAI,OAAO;AACV,aAAO,KAAK,EAAE,OAAO,MAAM,MAAM,CAAC;AAAA,IACnC,OAAO;AACN,aAAO,KAAK,EAAE,OAAO,KAAK,CAAC;AAAA,IAC5B;AAEA,YAAQ,MAAM,QAAQ,MAAM,CAAC,EAAE;AAAA,EAChC;AAEA,MAAI,QAAQ,KAAK,QAAQ;AACxB,WAAO,KAAK,KAAK,UAAU,KAAK,CAAC;AAAA,EAClC;AAEA,SAAO,IAAI,WAAW,MAAM;AAC7B;AA3BgB;",
  "names": []
}
