{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/common/parsers.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport enum ValidationState {\n\tOK = 0,\n\tInfo = 1,\n\tWarning = 2,\n\tError = 3,\n\tFatal = 4,\n}\n\nexport class ValidationStatus {\n\tprivate _state: ValidationState;\n\n\tconstructor() {\n\t\tthis._state = ValidationState.OK;\n\t}\n\n\tpublic get state(): ValidationState {\n\t\treturn this._state;\n\t}\n\n\tpublic set state(value: ValidationState) {\n\t\tif (value > this._state) {\n\t\t\tthis._state = value;\n\t\t}\n\t}\n\n\tpublic isOK(): boolean {\n\t\treturn this._state === ValidationState.OK;\n\t}\n\n\tpublic isFatal(): boolean {\n\t\treturn this._state === ValidationState.Fatal;\n\t}\n}\n\nexport interface IProblemReporter {\n\tinfo(message: string): void;\n\twarn(message: string): void;\n\terror(message: string): void;\n\tfatal(message: string): void;\n\tstatus: ValidationStatus;\n}\n\nexport abstract class Parser {\n\tprivate _problemReporter: IProblemReporter;\n\n\tconstructor(problemReporter: IProblemReporter) {\n\t\tthis._problemReporter = problemReporter;\n\t}\n\n\tpublic reset(): void {\n\t\tthis._problemReporter.status.state = ValidationState.OK;\n\t}\n\n\tpublic get problemReporter(): IProblemReporter {\n\t\treturn this._problemReporter;\n\t}\n\n\tpublic info(message: string): void {\n\t\tthis._problemReporter.info(message);\n\t}\n\n\tpublic warn(message: string): void {\n\t\tthis._problemReporter.warn(message);\n\t}\n\n\tpublic error(message: string): void {\n\t\tthis._problemReporter.error(message);\n\t}\n\n\tpublic fatal(message: string): void {\n\t\tthis._problemReporter.fatal(message);\n\t}\n}\n"],
  "mappings": ";;AAKO,IAAK,kBAAL,kBAAKA,qBAAL;AACN,EAAAA,kCAAA,QAAK,KAAL;AACA,EAAAA,kCAAA,UAAO,KAAP;AACA,EAAAA,kCAAA,aAAU,KAAV;AACA,EAAAA,kCAAA,WAAQ,KAAR;AACA,EAAAA,kCAAA,WAAQ,KAAR;AALW,SAAAA;AAAA,GAAA;AAQL,MAAM,iBAAiB;AAAA,EAb9B,OAa8B;AAAA;AAAA;AAAA,EACrB;AAAA,EAER,cAAc;AACb,SAAK,SAAS;AAAA,EACf;AAAA,EAEA,IAAW,QAAyB;AACnC,WAAO,KAAK;AAAA,EACb;AAAA,EAEA,IAAW,MAAM,OAAwB;AACxC,QAAI,QAAQ,KAAK,QAAQ;AACxB,WAAK,SAAS;AAAA,IACf;AAAA,EACD;AAAA,EAEO,OAAgB;AACtB,WAAO,KAAK,WAAW;AAAA,EACxB;AAAA,EAEO,UAAmB;AACzB,WAAO,KAAK,WAAW;AAAA,EACxB;AACD;AAUO,MAAe,OAAO;AAAA,EA/C7B,OA+C6B;AAAA;AAAA;AAAA,EACpB;AAAA,EAER,YAAY,iBAAmC;AAC9C,SAAK,mBAAmB;AAAA,EACzB;AAAA,EAEO,QAAc;AACpB,SAAK,iBAAiB,OAAO,QAAQ;AAAA,EACtC;AAAA,EAEA,IAAW,kBAAoC;AAC9C,WAAO,KAAK;AAAA,EACb;AAAA,EAEO,KAAK,SAAuB;AAClC,SAAK,iBAAiB,KAAK,OAAO;AAAA,EACnC;AAAA,EAEO,KAAK,SAAuB;AAClC,SAAK,iBAAiB,KAAK,OAAO;AAAA,EACnC;AAAA,EAEO,MAAM,SAAuB;AACnC,SAAK,iBAAiB,MAAM,OAAO;AAAA,EACpC;AAAA,EAEO,MAAM,SAAuB;AACnC,SAAK,iBAAiB,MAAM,OAAO;AAAA,EACpC;AACD;",
  "names": ["ValidationState"]
}
