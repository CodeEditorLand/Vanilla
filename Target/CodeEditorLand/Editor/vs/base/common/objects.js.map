{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/common/objects.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isObject, isTypedArray, isUndefinedOrNull } from \"./types.js\";\n\nexport function deepClone<T>(obj: T): T {\n\tif (!obj || typeof obj !== \"object\") {\n\t\treturn obj;\n\t}\n\tif (obj instanceof RegExp) {\n\t\treturn obj;\n\t}\n\tconst result: any = Array.isArray(obj) ? [] : {};\n\tObject.entries(obj).forEach(([key, value]) => {\n\t\tresult[key] =\n\t\t\tvalue && typeof value === \"object\" ? deepClone(value) : value;\n\t});\n\treturn result;\n}\n\nexport function deepFreeze<T>(obj: T): T {\n\tif (!obj || typeof obj !== \"object\") {\n\t\treturn obj;\n\t}\n\tconst stack: any[] = [obj];\n\twhile (stack.length > 0) {\n\t\tconst obj = stack.shift();\n\t\tObject.freeze(obj);\n\t\tfor (const key in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst prop = obj[key];\n\t\t\t\tif (\n\t\t\t\t\ttypeof prop === \"object\" &&\n\t\t\t\t\t!Object.isFrozen(prop) &&\n\t\t\t\t\t!isTypedArray(prop)\n\t\t\t\t) {\n\t\t\t\t\tstack.push(prop);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn obj;\n}\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport function cloneAndChange(obj: any, changer: (orig: any) => any): any {\n\treturn _cloneAndChange(obj, changer, new Set());\n}\n\nfunction _cloneAndChange(\n\tobj: any,\n\tchanger: (orig: any) => any,\n\tseen: Set<any>,\n): any {\n\tif (isUndefinedOrNull(obj)) {\n\t\treturn obj;\n\t}\n\n\tconst changed = changer(obj);\n\tif (typeof changed !== \"undefined\") {\n\t\treturn changed;\n\t}\n\n\tif (Array.isArray(obj)) {\n\t\tconst r1: any[] = [];\n\t\tfor (const e of obj) {\n\t\t\tr1.push(_cloneAndChange(e, changer, seen));\n\t\t}\n\t\treturn r1;\n\t}\n\n\tif (isObject(obj)) {\n\t\tif (seen.has(obj)) {\n\t\t\tthrow new Error(\"Cannot clone recursive data-structure\");\n\t\t}\n\t\tseen.add(obj);\n\t\tconst r2 = {};\n\t\tfor (const i2 in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, i2)) {\n\t\t\t\t(r2 as any)[i2] = _cloneAndChange(obj[i2], changer, seen);\n\t\t\t}\n\t\t}\n\t\tseen.delete(obj);\n\t\treturn r2;\n\t}\n\n\treturn obj;\n}\n\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination: any, source: any, overwrite = true): any {\n\tif (!isObject(destination)) {\n\t\treturn source;\n\t}\n\n\tif (isObject(source)) {\n\t\tObject.keys(source).forEach((key) => {\n\t\t\tif (key in destination) {\n\t\t\t\tif (overwrite) {\n\t\t\t\t\tif (isObject(destination[key]) && isObject(source[key])) {\n\t\t\t\t\t\tmixin(destination[key], source[key], overwrite);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdestination[key] = source[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdestination[key] = source[key];\n\t\t\t}\n\t\t});\n\t}\n\treturn destination;\n}\n\nexport function equals(one: any, other: any): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\tif (\n\t\tone === null ||\n\t\tone === undefined ||\n\t\tother === null ||\n\t\tother === undefined\n\t) {\n\t\treturn false;\n\t}\n\tif (typeof one !== typeof other) {\n\t\treturn false;\n\t}\n\tif (typeof one !== \"object\") {\n\t\treturn false;\n\t}\n\tif (Array.isArray(one) !== Array.isArray(other)) {\n\t\treturn false;\n\t}\n\n\tlet i: number;\n\tlet key: string;\n\n\tif (Array.isArray(one)) {\n\t\tif (one.length !== other.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < one.length; i++) {\n\t\t\tif (!equals(one[i], other[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tconst oneKeys: string[] = [];\n\n\t\tfor (key in one) {\n\t\t\toneKeys.push(key);\n\t\t}\n\t\toneKeys.sort();\n\t\tconst otherKeys: string[] = [];\n\t\tfor (key in other) {\n\t\t\totherKeys.push(key);\n\t\t}\n\t\totherKeys.sort();\n\t\tif (!equals(oneKeys, otherKeys)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < oneKeys.length; i++) {\n\t\t\tif (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n * Calls `JSON.Stringify` with a replacer to break apart any circular references.\n * This prevents `JSON`.stringify` from throwing the exception\n *  \"Uncaught TypeError: Converting circular structure to JSON\"\n */\nexport function safeStringify(obj: any): string {\n\tconst seen = new Set<any>();\n\treturn JSON.stringify(obj, (key, value) => {\n\t\tif (isObject(value) || Array.isArray(value)) {\n\t\t\tif (seen.has(value)) {\n\t\t\t\treturn \"[Circular]\";\n\t\t\t} else {\n\t\t\t\tseen.add(value);\n\t\t\t}\n\t\t}\n\t\tif (typeof value === \"bigint\") {\n\t\t\treturn `[BigInt ${value.toString()}]`;\n\t\t}\n\t\treturn value;\n\t});\n}\n\ntype obj = { [key: string]: any };\n/**\n * Returns an object that has keys for each value that is different in the base object. Keys\n * that do not exist in the target but in the base object are not considered.\n *\n * Note: This is not a deep-diffing method, so the values are strictly taken into the resulting\n * object if they differ.\n *\n * @param base the object to diff against\n * @param obj the object to use for diffing\n */\nexport function distinct(base: obj, target: obj): obj {\n\tconst result = Object.create(null);\n\n\tif (!base || !target) {\n\t\treturn result;\n\t}\n\n\tconst targetKeys = Object.keys(target);\n\ttargetKeys.forEach((k) => {\n\t\tconst baseValue = base[k];\n\t\tconst targetValue = target[k];\n\n\t\tif (!equals(baseValue, targetValue)) {\n\t\t\tresult[k] = targetValue;\n\t\t}\n\t});\n\n\treturn result;\n}\n\nexport function getCaseInsensitive(target: obj, key: string): any {\n\tconst lowercaseKey = key.toLowerCase();\n\tconst equivalentKey = Object.keys(target).find(\n\t\t(k) => k.toLowerCase() === lowercaseKey,\n\t);\n\treturn equivalentKey ? target[equivalentKey] : target[key];\n}\n\nexport function filter(\n\tobj: obj,\n\tpredicate: (key: string, value: any) => boolean,\n): obj {\n\tconst result = Object.create(null);\n\tfor (const [key, value] of Object.entries(obj)) {\n\t\tif (predicate(key, value)) {\n\t\t\tresult[key] = value;\n\t\t}\n\t}\n\treturn result;\n}\n\nexport function getAllPropertyNames(obj: object): string[] {\n\tlet res: string[] = [];\n\twhile (Object.prototype !== obj) {\n\t\tres = res.concat(Object.getOwnPropertyNames(obj));\n\t\tobj = Object.getPrototypeOf(obj);\n\t}\n\treturn res;\n}\n\nexport function getAllMethodNames(obj: object): string[] {\n\tconst methods: string[] = [];\n\tfor (const prop of getAllPropertyNames(obj)) {\n\t\tif (typeof (obj as any)[prop] === \"function\") {\n\t\t\tmethods.push(prop);\n\t\t}\n\t}\n\treturn methods;\n}\n\nexport function createProxyObject<T extends object>(\n\tmethodNames: string[],\n\tinvoke: (method: string, args: unknown[]) => unknown,\n): T {\n\tconst createProxyMethod = (method: string): (() => unknown) => {\n\t\treturn () => {\n\t\t\tconst args = Array.prototype.slice.call(arguments, 0);\n\t\t\treturn invoke(method, args);\n\t\t};\n\t};\n\n\tconst result = {} as T;\n\tfor (const methodName of methodNames) {\n\t\t(<any>result)[methodName] = createProxyMethod(methodName);\n\t}\n\treturn result;\n}\n\nexport function mapValues<T extends {}, R>(\n\tobj: T,\n\tfn: (value: T[keyof T], key: string) => R,\n): { [K in keyof T]: R } {\n\tconst result: { [key: string]: R } = {};\n\tfor (const [key, value] of Object.entries(obj)) {\n\t\tresult[key] = fn(<T[keyof T]>value, key);\n\t}\n\treturn result as { [K in keyof T]: R };\n}\n"],
  "mappings": "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",
  "names": ["obj"]
}
