var i=class{unexpectedErrorHandler;listeners;constructor(){this.listeners=[],this.unexpectedErrorHandler=function(e){setTimeout(()=>{throw e.stack?t.isErrorNoTelemetry(e)?new t(e.message+`

`+e.stack):new Error(e.message+`

`+e.stack):e},0)}}addListener(e){return this.listeners.push(e),()=>{this._removeListener(e)}}emit(e){this.listeners.forEach(n=>{n(e)})}_removeListener(e){this.listeners.splice(this.listeners.indexOf(e),1)}setUnexpectedErrorHandler(e){this.unexpectedErrorHandler=e}getUnexpectedErrorHandler(){return this.unexpectedErrorHandler}onUnexpectedError(e){this.unexpectedErrorHandler(e),this.emit(e)}onUnexpectedExternalError(e){this.unexpectedErrorHandler(e)}},s=new i;function f(r){s.setUnexpectedErrorHandler(r)}function x(r){if(!r||typeof r!="object")return!1;let e=r;return e.code==="EPIPE"&&e.syscall?.toUpperCase()==="WRITE"}function m(r){s.onUnexpectedError(r)}function y(r){E(r)||s.onUnexpectedError(r)}function h(r){E(r)||s.onUnexpectedExternalError(r)}function v(r){if(r instanceof Error){let{name:e,message:n}=r,g=r.stacktrace||r.stack;return{$isError:!0,name:e,message:n,stack:g,noTelemetry:t.isErrorNoTelemetry(r)}}return r}function b(r){let e;return r.noTelemetry?e=new t:(e=new Error,e.name=r.name),e.message=r.message,e.stack=r.stack,e}var o="Canceled";function E(r){return r instanceof a?!0:r instanceof Error&&r.name===o&&r.message===o}var a=class extends Error{constructor(){super(o),this.name=this.message}};function k(){let r=new Error(o);return r.name=r.message,r}function w(r){return r?new Error(`Illegal argument: ${r}`):new Error("Illegal argument")}function U(r){return r?new Error(`Illegal state: ${r}`):new Error("Illegal state")}var c=class extends TypeError{constructor(e){super(e?`${e} is read-only and cannot be changed`:"Cannot change read-only property")}};function T(r){return r?r.message?r.message:r.stack?r.stack.split(`
`)[0]:String(r):"Error"}var l=class extends Error{constructor(e){super("NotImplemented"),e&&(this.message=e)}},u=class extends Error{constructor(e){super("NotSupported"),e&&(this.message=e)}},d=class extends Error{isExpected=!0},t=class r extends Error{name;constructor(e){super(e),this.name="CodeExpectedError"}static fromError(e){if(e instanceof r)return e;let n=new r;return n.message=e.message,n.stack=e.stack,n}static isErrorNoTelemetry(e){return e.name==="CodeExpectedError"}},p=class r extends Error{constructor(e){super(e||"An unexpected bug occurred."),Object.setPrototypeOf(this,r.prototype)}};export{p as BugIndicatingError,a as CancellationError,i as ErrorHandler,t as ErrorNoTelemetry,d as ExpectedError,l as NotImplementedError,u as NotSupportedError,c as ReadonlyError,k as canceled,s as errorHandler,T as getErrorMessage,w as illegalArgument,U as illegalState,E as isCancellationError,x as isSigPipeError,m as onBugIndicatingError,y as onUnexpectedError,h as onUnexpectedExternalError,f as setUnexpectedErrorHandler,v as transformErrorForSerialization,b as transformErrorFromSerialization};
