{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/common/range.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface IRange {\n\tstart: number;\n\tend: number;\n}\n\nexport interface IRangedGroup {\n\trange: IRange;\n\tsize: number;\n}\n\nexport namespace Range {\n\n\t/**\n\t * Returns the intersection between two ranges as a range itself.\n\t * Returns `{ start: 0, end: 0 }` if the intersection is empty.\n\t */\n\texport function intersect(one: IRange, other: IRange): IRange {\n\t\tif (one.start >= other.end || other.start >= one.end) {\n\t\t\treturn { start: 0, end: 0 };\n\t\t}\n\n\t\tconst start = Math.max(one.start, other.start);\n\t\tconst end = Math.min(one.end, other.end);\n\n\t\tif (end - start <= 0) {\n\t\t\treturn { start: 0, end: 0 };\n\t\t}\n\n\t\treturn { start, end };\n\t}\n\n\texport function isEmpty(range: IRange): boolean {\n\t\treturn range.end - range.start <= 0;\n\t}\n\n\texport function intersects(one: IRange, other: IRange): boolean {\n\t\treturn !isEmpty(intersect(one, other));\n\t}\n\n\texport function relativeComplement(one: IRange, other: IRange): IRange[] {\n\t\tconst result: IRange[] = [];\n\t\tconst first = { start: one.start, end: Math.min(other.start, one.end) };\n\t\tconst second = { start: Math.max(other.end, one.start), end: one.end };\n\n\t\tif (!isEmpty(first)) {\n\t\t\tresult.push(first);\n\t\t}\n\n\t\tif (!isEmpty(second)) {\n\t\t\tresult.push(second);\n\t\t}\n\n\t\treturn result;\n\t}\n}\n"],
  "mappings": ";;AAeO,IAAU;AAAA,CAAV,CAAUA,WAAV;AAMC,WAAS,UAAU,KAAa,OAAuB;AAC7D,QAAI,IAAI,SAAS,MAAM,OAAO,MAAM,SAAS,IAAI,KAAK;AACrD,aAAO,EAAE,OAAO,GAAG,KAAK,EAAE;AAAA,IAC3B;AAEA,UAAM,QAAQ,KAAK,IAAI,IAAI,OAAO,MAAM,KAAK;AAC7C,UAAM,MAAM,KAAK,IAAI,IAAI,KAAK,MAAM,GAAG;AAEvC,QAAI,MAAM,SAAS,GAAG;AACrB,aAAO,EAAE,OAAO,GAAG,KAAK,EAAE;AAAA,IAC3B;AAEA,WAAO,EAAE,OAAO,IAAI;AAAA,EACrB;AAbO,EAAAA,OAAS;AAAA;AAeT,WAAS,QAAQ,OAAwB;AAC/C,WAAO,MAAM,MAAM,MAAM,SAAS;AAAA,EACnC;AAFO,EAAAA,OAAS;AAAA;AAIT,WAAS,WAAW,KAAa,OAAwB;AAC/D,WAAO,CAAC,QAAQ,UAAU,KAAK,KAAK,CAAC;AAAA,EACtC;AAFO,EAAAA,OAAS;AAAA;AAIT,WAAS,mBAAmB,KAAa,OAAyB;AACxE,UAAM,SAAmB,CAAC;AAC1B,UAAM,QAAQ,EAAE,OAAO,IAAI,OAAO,KAAK,KAAK,IAAI,MAAM,OAAO,IAAI,GAAG,EAAE;AACtE,UAAM,SAAS,EAAE,OAAO,KAAK,IAAI,MAAM,KAAK,IAAI,KAAK,GAAG,KAAK,IAAI,IAAI;AAErE,QAAI,CAAC,QAAQ,KAAK,GAAG;AACpB,aAAO,KAAK,KAAK;AAAA,IAClB;AAEA,QAAI,CAAC,QAAQ,MAAM,GAAG;AACrB,aAAO,KAAK,MAAM;AAAA,IACnB;AAEA,WAAO;AAAA,EACR;AAdO,EAAAA,OAAS;AAAA;AAAA,GA7BA;",
  "names": ["Range"]
}
