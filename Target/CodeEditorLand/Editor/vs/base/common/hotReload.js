import"./lifecycle.js";import{env as a}from"./process.js";function c(){return a&&!!a.VSCODE_DEV}function u(o){if(c()){const p=g();return p.add(o),{dispose(){p.delete(o)}}}else return{dispose(){}}}function g(){d||(d=new Set);const o=globalThis;return o.$hotReload_applyNewExports||(o.$hotReload_applyNewExports=p=>{const s={config:{mode:void 0},...p},t=[];for(const n of d){const e=n(s);e&&t.push(e)}if(t.length>0)return n=>{let e=!1;for(const r of t)r(n)&&(e=!0);return e}}),d}let d;c()&&u(({oldExports:o,newSrc:p,config:s})=>{if(s.mode==="patch-prototype")return t=>{for(const n in t){const e=t[n];if(typeof e=="function"&&e.prototype){const r=o[n];if(r){for(const i of Object.getOwnPropertyNames(e.prototype)){const l=Object.getOwnPropertyDescriptor(e.prototype,i),f=Object.getOwnPropertyDescriptor(r.prototype,i);l?.value?.toString(),f?.value?.toString(),Object.defineProperty(r.prototype,i,l)}t[n]=r}}}return!0}});export{c as isHotReloadEnabled,u as registerHotReloadHandler};
