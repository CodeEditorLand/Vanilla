{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/common/history.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { SetWithKey } from \"./collections.js\";\nimport { ArrayNavigator, type INavigator } from \"./navigator.js\";\n\nexport class HistoryNavigator<T> implements INavigator<T> {\n\tprivate _history!: Set<T>;\n\tprivate _limit: number;\n\tprivate _navigator!: ArrayNavigator<T>;\n\n\tconstructor(history: readonly T[] = [], limit = 10) {\n\t\tthis._initialize(history);\n\t\tthis._limit = limit;\n\t\tthis._onChange();\n\t}\n\n\tpublic getHistory(): T[] {\n\t\treturn this._elements;\n\t}\n\n\tpublic add(t: T) {\n\t\tthis._history.delete(t);\n\t\tthis._history.add(t);\n\t\tthis._onChange();\n\t}\n\n\tpublic next(): T | null {\n\t\t// This will navigate past the end of the last element, and in that case the input should be cleared\n\t\treturn this._navigator.next();\n\t}\n\n\tpublic previous(): T | null {\n\t\tif (this._currentPosition() !== 0) {\n\t\t\treturn this._navigator.previous();\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic current(): T | null {\n\t\treturn this._navigator.current();\n\t}\n\n\tpublic first(): T | null {\n\t\treturn this._navigator.first();\n\t}\n\n\tpublic last(): T | null {\n\t\treturn this._navigator.last();\n\t}\n\n\tpublic isFirst(): boolean {\n\t\treturn this._currentPosition() === 0;\n\t}\n\n\tpublic isLast(): boolean {\n\t\treturn this._currentPosition() >= this._elements.length - 1;\n\t}\n\n\tpublic isNowhere(): boolean {\n\t\treturn this._navigator.current() === null;\n\t}\n\n\tpublic has(t: T): boolean {\n\t\treturn this._history.has(t);\n\t}\n\n\tpublic clear(): void {\n\t\tthis._initialize([]);\n\t\tthis._onChange();\n\t}\n\n\tprivate _onChange() {\n\t\tthis._reduceToLimit();\n\t\tconst elements = this._elements;\n\t\tthis._navigator = new ArrayNavigator(\n\t\t\telements,\n\t\t\t0,\n\t\t\telements.length,\n\t\t\telements.length,\n\t\t);\n\t}\n\n\tprivate _reduceToLimit() {\n\t\tconst data = this._elements;\n\t\tif (data.length > this._limit) {\n\t\t\tthis._initialize(data.slice(data.length - this._limit));\n\t\t}\n\t}\n\n\tprivate _currentPosition(): number {\n\t\tconst currentElement = this._navigator.current();\n\t\tif (!currentElement) {\n\t\t\treturn -1;\n\t\t}\n\n\t\treturn this._elements.indexOf(currentElement);\n\t}\n\n\tprivate _initialize(history: readonly T[]): void {\n\t\tthis._history = new Set();\n\t\tfor (const entry of history) {\n\t\t\tthis._history.add(entry);\n\t\t}\n\t}\n\n\tprivate get _elements(): T[] {\n\t\tconst elements: T[] = [];\n\t\tthis._history.forEach((e) => elements.push(e));\n\t\treturn elements;\n\t}\n}\n\ninterface HistoryNode<T> {\n\tvalue: T;\n\tprevious: HistoryNode<T> | undefined;\n\tnext: HistoryNode<T> | undefined;\n}\n\n/**\n * The right way to use HistoryNavigator2 is for the last item in the list to be the user's uncommitted current text. eg empty string, or whatever has been typed. Then\n * the user can navigate away from the last item through the list, and back to it. When updating the last item, call replaceLast.\n */\nexport class HistoryNavigator2<T> {\n\tprivate valueSet: Set<T>;\n\tprivate head: HistoryNode<T>;\n\tprivate tail: HistoryNode<T>;\n\tprivate cursor: HistoryNode<T>;\n\tprivate _size: number;\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tconstructor(\n\t\thistory: readonly T[],\n\t\tprivate capacity = 10,\n\t\tprivate identityFn: (t: T) => any = (t) => t,\n\t) {\n\t\tif (history.length < 1) {\n\t\t\tthrow new Error(\"not supported\");\n\t\t}\n\n\t\tthis._size = 1;\n\t\tthis.head =\n\t\t\tthis.tail =\n\t\t\tthis.cursor =\n\t\t\t\t{\n\t\t\t\t\tvalue: history[0],\n\t\t\t\t\tprevious: undefined,\n\t\t\t\t\tnext: undefined,\n\t\t\t\t};\n\n\t\tthis.valueSet = new SetWithKey<T>([history[0]], identityFn);\n\t\tfor (let i = 1; i < history.length; i++) {\n\t\t\tthis.add(history[i]);\n\t\t}\n\t}\n\n\tadd(value: T): void {\n\t\tconst node: HistoryNode<T> = {\n\t\t\tvalue,\n\t\t\tprevious: this.tail,\n\t\t\tnext: undefined,\n\t\t};\n\n\t\tthis.tail.next = node;\n\t\tthis.tail = node;\n\t\tthis.cursor = this.tail;\n\t\tthis._size++;\n\n\t\tif (this.valueSet.has(value)) {\n\t\t\tthis._deleteFromList(value);\n\t\t} else {\n\t\t\tthis.valueSet.add(value);\n\t\t}\n\n\t\twhile (this._size > this.capacity) {\n\t\t\tthis.valueSet.delete(this.head.value);\n\n\t\t\tthis.head = this.head.next!;\n\t\t\tthis.head.previous = undefined;\n\t\t\tthis._size--;\n\t\t}\n\t}\n\n\t/**\n\t * @returns old last value\n\t */\n\treplaceLast(value: T): T {\n\t\tif (this.identityFn(this.tail.value) === this.identityFn(value)) {\n\t\t\treturn value;\n\t\t}\n\n\t\tconst oldValue = this.tail.value;\n\t\tthis.valueSet.delete(oldValue);\n\t\tthis.tail.value = value;\n\n\t\tif (this.valueSet.has(value)) {\n\t\t\tthis._deleteFromList(value);\n\t\t} else {\n\t\t\tthis.valueSet.add(value);\n\t\t}\n\n\t\treturn oldValue;\n\t}\n\n\tprepend(value: T): void {\n\t\tif (this._size === this.capacity || this.valueSet.has(value)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst node: HistoryNode<T> = {\n\t\t\tvalue,\n\t\t\tprevious: undefined,\n\t\t\tnext: this.head,\n\t\t};\n\n\t\tthis.head.previous = node;\n\t\tthis.head = node;\n\t\tthis._size++;\n\n\t\tthis.valueSet.add(value);\n\t}\n\n\tisAtEnd(): boolean {\n\t\treturn this.cursor === this.tail;\n\t}\n\n\tcurrent(): T {\n\t\treturn this.cursor.value;\n\t}\n\n\tprevious(): T {\n\t\tif (this.cursor.previous) {\n\t\t\tthis.cursor = this.cursor.previous;\n\t\t}\n\n\t\treturn this.cursor.value;\n\t}\n\n\tnext(): T {\n\t\tif (this.cursor.next) {\n\t\t\tthis.cursor = this.cursor.next;\n\t\t}\n\n\t\treturn this.cursor.value;\n\t}\n\n\thas(t: T): boolean {\n\t\treturn this.valueSet.has(t);\n\t}\n\n\tresetCursor(): T {\n\t\tthis.cursor = this.tail;\n\t\treturn this.cursor.value;\n\t}\n\n\t*[Symbol.iterator](): Iterator<T> {\n\t\tlet node: HistoryNode<T> | undefined = this.head;\n\n\t\twhile (node) {\n\t\t\tyield node.value;\n\t\t\tnode = node.next;\n\t\t}\n\t}\n\n\tprivate _deleteFromList(value: T): void {\n\t\tlet temp = this.head;\n\n\t\tconst valueKey = this.identityFn(value);\n\t\twhile (temp !== this.tail) {\n\t\t\tif (this.identityFn(temp.value) === valueKey) {\n\t\t\t\tif (temp === this.head) {\n\t\t\t\t\tthis.head = this.head.next!;\n\t\t\t\t\tthis.head.previous = undefined;\n\t\t\t\t} else {\n\t\t\t\t\ttemp.previous!.next = temp.next;\n\t\t\t\t\ttemp.next!.previous = temp.previous;\n\t\t\t\t}\n\n\t\t\t\tthis._size--;\n\t\t\t}\n\n\t\t\ttemp = temp.next!;\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
