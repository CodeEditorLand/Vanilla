{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/common/network.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as errors from './errors.js';\nimport * as platform from './platform.js';\nimport { equalsIgnoreCase, startsWithIgnoreCase } from './strings.js';\nimport { URI } from './uri.js';\nimport * as paths from './path.js';\n\nexport namespace Schemas {\n\n\t/**\n\t * A schema that is used for models that exist in memory\n\t * only and that have no correspondence on a server or such.\n\t */\n\texport const inMemory = 'inmemory';\n\n\t/**\n\t * A schema that is used for setting files\n\t */\n\texport const vscode = 'vscode';\n\n\t/**\n\t * A schema that is used for internal private files\n\t */\n\texport const internal = 'private';\n\n\t/**\n\t * A walk-through document.\n\t */\n\texport const walkThrough = 'walkThrough';\n\n\t/**\n\t * An embedded code snippet.\n\t */\n\texport const walkThroughSnippet = 'walkThroughSnippet';\n\n\texport const http = 'http';\n\n\texport const https = 'https';\n\n\texport const file = 'file';\n\n\texport const mailto = 'mailto';\n\n\texport const untitled = 'untitled';\n\n\texport const data = 'data';\n\n\texport const command = 'command';\n\n\texport const vscodeRemote = 'vscode-remote';\n\n\texport const vscodeRemoteResource = 'vscode-remote-resource';\n\n\texport const vscodeManagedRemoteResource = 'vscode-managed-remote-resource';\n\n\texport const vscodeUserData = 'vscode-userdata';\n\n\texport const vscodeCustomEditor = 'vscode-custom-editor';\n\n\texport const vscodeNotebookCell = 'vscode-notebook-cell';\n\texport const vscodeNotebookCellMetadata = 'vscode-notebook-cell-metadata';\n\texport const vscodeNotebookCellMetadataDiff = 'vscode-notebook-cell-metadata-diff';\n\texport const vscodeNotebookCellOutput = 'vscode-notebook-cell-output';\n\texport const vscodeNotebookCellOutputDiff = 'vscode-notebook-cell-output-diff';\n\texport const vscodeNotebookMetadata = 'vscode-notebook-metadata';\n\texport const vscodeInteractiveInput = 'vscode-interactive-input';\n\n\texport const vscodeSettings = 'vscode-settings';\n\n\texport const vscodeWorkspaceTrust = 'vscode-workspace-trust';\n\n\texport const vscodeTerminal = 'vscode-terminal';\n\n\t/** Scheme used for code blocks in chat. */\n\texport const vscodeChatCodeBlock = 'vscode-chat-code-block';\n\n\t/** Scheme used for LHS of code compare (aka diff) blocks in chat. */\n\texport const vscodeChatCodeCompareBlock = 'vscode-chat-code-compare-block';\n\n\t/** Scheme used for the chat input editor. */\n\texport const vscodeChatSesssion = 'vscode-chat-editor';\n\n\t/**\n\t * Scheme used internally for webviews that aren't linked to a resource (i.e. not custom editors)\n\t */\n\texport const webviewPanel = 'webview-panel';\n\n\t/**\n\t * Scheme used for loading the wrapper html and script in webviews.\n\t */\n\texport const vscodeWebview = 'vscode-webview';\n\n\t/**\n\t * Scheme used for extension pages\n\t */\n\texport const extension = 'extension';\n\n\t/**\n\t * Scheme used as a replacement of `file` scheme to load\n\t * files with our custom protocol handler (desktop only).\n\t */\n\texport const vscodeFileResource = 'vscode-file';\n\n\t/**\n\t * Scheme used for temporary resources\n\t */\n\texport const tmp = 'tmp';\n\n\t/**\n\t * Scheme used vs live share\n\t */\n\texport const vsls = 'vsls';\n\n\t/**\n\t * Scheme used for the Source Control commit input's text document\n\t */\n\texport const vscodeSourceControl = 'vscode-scm';\n\n\t/**\n\t * Scheme used for input box for creating comments.\n\t */\n\texport const commentsInput = 'comment';\n\n\t/**\n\t * Scheme used for special rendering of settings in the release notes\n\t */\n\texport const codeSetting = 'code-setting';\n\n\t/**\n\t * Scheme used for output panel resources\n\t */\n\texport const outputChannel = 'output';\n}\n\nexport function matchesScheme(target: URI | string, scheme: string): boolean {\n\tif (URI.isUri(target)) {\n\t\treturn equalsIgnoreCase(target.scheme, scheme);\n\t} else {\n\t\treturn startsWithIgnoreCase(target, scheme + ':');\n\t}\n}\n\nexport function matchesSomeScheme(target: URI | string, ...schemes: string[]): boolean {\n\treturn schemes.some(scheme => matchesScheme(target, scheme));\n}\n\nexport const connectionTokenCookieName = 'vscode-tkn';\nexport const connectionTokenQueryName = 'tkn';\n\nclass RemoteAuthoritiesImpl {\n\tprivate readonly _hosts: { [authority: string]: string | undefined } = Object.create(null);\n\tprivate readonly _ports: { [authority: string]: number | undefined } = Object.create(null);\n\tprivate readonly _connectionTokens: { [authority: string]: string | undefined } = Object.create(null);\n\tprivate _preferredWebSchema: 'http' | 'https' = 'http';\n\tprivate _delegate: ((uri: URI) => URI) | null = null;\n\tprivate _serverRootPath: string = '/';\n\n\tsetPreferredWebSchema(schema: 'http' | 'https') {\n\t\tthis._preferredWebSchema = schema;\n\t}\n\n\tsetDelegate(delegate: (uri: URI) => URI): void {\n\t\tthis._delegate = delegate;\n\t}\n\n\tsetServerRootPath(product: { quality?: string; commit?: string }, serverBasePath: string | undefined): void {\n\t\tthis._serverRootPath = getServerRootPath(product, serverBasePath);\n\t}\n\n\tgetServerRootPath(): string {\n\t\treturn this._serverRootPath;\n\t}\n\n\tprivate get _remoteResourcesPath(): string {\n\t\treturn paths.posix.join(this._serverRootPath, Schemas.vscodeRemoteResource);\n\t}\n\n\tset(authority: string, host: string, port: number): void {\n\t\tthis._hosts[authority] = host;\n\t\tthis._ports[authority] = port;\n\t}\n\n\tsetConnectionToken(authority: string, connectionToken: string): void {\n\t\tthis._connectionTokens[authority] = connectionToken;\n\t}\n\n\tgetPreferredWebSchema(): 'http' | 'https' {\n\t\treturn this._preferredWebSchema;\n\t}\n\n\trewrite(uri: URI): URI {\n\t\tif (this._delegate) {\n\t\t\ttry {\n\t\t\t\treturn this._delegate(uri);\n\t\t\t} catch (err) {\n\t\t\t\terrors.onUnexpectedError(err);\n\t\t\t\treturn uri;\n\t\t\t}\n\t\t}\n\t\tconst authority = uri.authority;\n\t\tlet host = this._hosts[authority];\n\t\tif (host && host.indexOf(':') !== -1 && host.indexOf('[') === -1) {\n\t\t\thost = `[${host}]`;\n\t\t}\n\t\tconst port = this._ports[authority];\n\t\tconst connectionToken = this._connectionTokens[authority];\n\t\tlet query = `path=${encodeURIComponent(uri.path)}`;\n\t\tif (typeof connectionToken === 'string') {\n\t\t\tquery += `&${connectionTokenQueryName}=${encodeURIComponent(connectionToken)}`;\n\t\t}\n\t\treturn URI.from({\n\t\t\tscheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n\t\t\tauthority: `${host}:${port}`,\n\t\t\tpath: this._remoteResourcesPath,\n\t\t\tquery\n\t\t});\n\t}\n}\n\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\n\nexport function getServerRootPath(product: { quality?: string; commit?: string }, basePath: string | undefined): string {\n\treturn paths.posix.join(basePath ?? '/', `${product.quality ?? 'oss'}-${product.commit ?? 'dev'}`);\n}\n\n/**\n * A string pointing to a path inside the app. It should not begin with ./ or ../\n */\nexport type AppResourcePath = (\n\t`a${string}` | `b${string}` | `c${string}` | `d${string}` | `e${string}` | `f${string}`\n\t| `g${string}` | `h${string}` | `i${string}` | `j${string}` | `k${string}` | `l${string}`\n\t| `m${string}` | `n${string}` | `o${string}` | `p${string}` | `q${string}` | `r${string}`\n\t| `s${string}` | `t${string}` | `u${string}` | `v${string}` | `w${string}` | `x${string}`\n\t| `y${string}` | `z${string}`\n);\n\nexport const builtinExtensionsPath: AppResourcePath = 'vs/../../extensions';\nexport const nodeModulesPath: AppResourcePath = 'vs/../../node_modules';\nexport const nodeModulesAsarPath: AppResourcePath = 'vs/../../node_modules.asar';\nexport const nodeModulesAsarUnpackedPath: AppResourcePath = 'vs/../../node_modules.asar.unpacked';\n\nexport const VSCODE_AUTHORITY = 'vscode-app';\n\nclass FileAccessImpl {\n\n\tprivate static readonly FALLBACK_AUTHORITY = VSCODE_AUTHORITY;\n\n\t/**\n\t * Returns a URI to use in contexts where the browser is responsible\n\t * for loading (e.g. fetch()) or when used within the DOM.\n\t *\n\t * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n\t */\n\tasBrowserUri(resourcePath: AppResourcePath | ''): URI {\n\t\t// ESM-comment-begin\n\t\t// const uri = this.toUri(resourcePath, require);\n\t\t// ESM-comment-end\n\t\t// ESM-uncomment-begin\n\t\tconst uri = this.toUri(resourcePath);\n\t\t// ESM-uncomment-end\n\t\treturn this.uriToBrowserUri(uri);\n\t}\n\n\t/**\n\t * Returns a URI to use in contexts where the browser is responsible\n\t * for loading (e.g. fetch()) or when used within the DOM.\n\t *\n\t * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n\t */\n\turiToBrowserUri(uri: URI): URI {\n\t\t// Handle remote URIs via `RemoteAuthorities`\n\t\tif (uri.scheme === Schemas.vscodeRemote) {\n\t\t\treturn RemoteAuthorities.rewrite(uri);\n\t\t}\n\n\t\t// Convert to `vscode-file` resource..\n\t\tif (\n\t\t\t// ...only ever for `file` resources\n\t\t\turi.scheme === Schemas.file &&\n\t\t\t(\n\t\t\t\t// ...and we run in native environments\n\t\t\t\tplatform.isNative ||\n\t\t\t\t// ...or web worker extensions on desktop\n\t\t\t\t(platform.webWorkerOrigin === `${Schemas.vscodeFileResource}://${FileAccessImpl.FALLBACK_AUTHORITY}`)\n\t\t\t)\n\t\t) {\n\t\t\treturn uri.with({\n\t\t\t\tscheme: Schemas.vscodeFileResource,\n\t\t\t\t// We need to provide an authority here so that it can serve\n\t\t\t\t// as origin for network and loading matters in chromium.\n\t\t\t\t// If the URI is not coming with an authority already, we\n\t\t\t\t// add our own\n\t\t\t\tauthority: uri.authority || FileAccessImpl.FALLBACK_AUTHORITY,\n\t\t\t\tquery: null,\n\t\t\t\tfragment: null\n\t\t\t});\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\t/**\n\t * Returns the `file` URI to use in contexts where node.js\n\t * is responsible for loading.\n\t */\n\tasFileUri(resourcePath: AppResourcePath | ''): URI {\n\t\t// ESM-comment-begin\n\t\t// const uri = this.toUri(resourcePath, require);\n\t\t// ESM-comment-end\n\t\t// ESM-uncomment-begin\n\t\tconst uri = this.toUri(resourcePath);\n\t\t// ESM-uncomment-end\n\t\treturn this.uriToFileUri(uri);\n\t}\n\n\t/**\n\t * Returns the `file` URI to use in contexts where node.js\n\t * is responsible for loading.\n\t */\n\turiToFileUri(uri: URI): URI {\n\t\t// Only convert the URI if it is `vscode-file:` scheme\n\t\tif (uri.scheme === Schemas.vscodeFileResource) {\n\t\t\treturn uri.with({\n\t\t\t\tscheme: Schemas.file,\n\t\t\t\t// Only preserve the `authority` if it is different from\n\t\t\t\t// our fallback authority. This ensures we properly preserve\n\t\t\t\t// Windows UNC paths that come with their own authority.\n\t\t\t\tauthority: uri.authority !== FileAccessImpl.FALLBACK_AUTHORITY ? uri.authority : null,\n\t\t\t\tquery: null,\n\t\t\t\tfragment: null\n\t\t\t});\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\tprivate toUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }): URI {\n\t\tif (URI.isUri(uriOrModule)) {\n\t\t\treturn uriOrModule;\n\t\t}\n\n\t\tif (globalThis._VSCODE_FILE_ROOT) {\n\t\t\tconst rootUriOrPath = globalThis._VSCODE_FILE_ROOT;\n\n\t\t\t// File URL (with scheme)\n\t\t\tif (/^\\w[\\w\\d+.-]*:\\/\\//.test(rootUriOrPath)) {\n\t\t\t\treturn URI.joinPath(URI.parse(rootUriOrPath, true), uriOrModule);\n\t\t\t}\n\n\t\t\t// File Path (no scheme)\n\t\t\tconst modulePath = paths.join(rootUriOrPath, uriOrModule);\n\t\t\treturn URI.file(modulePath);\n\t\t}\n\n\t\treturn URI.parse(moduleIdToUrl!.toUrl(uriOrModule));\n\t}\n}\n\nexport const FileAccess = new FileAccessImpl();\n\n\nexport namespace COI {\n\n\tconst coiHeaders = new Map<'3' | '2' | '1' | string, Record<string, string>>([\n\t\t['1', { 'Cross-Origin-Opener-Policy': 'same-origin' }],\n\t\t['2', { 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n\t\t['3', { 'Cross-Origin-Opener-Policy': 'same-origin', 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n\t]);\n\n\texport const CoopAndCoep = Object.freeze(coiHeaders.get('3'));\n\n\tconst coiSearchParamName = 'vscode-coi';\n\n\t/**\n\t * Extract desired headers from `vscode-coi` invocation\n\t */\n\texport function getHeadersFromQuery(url: string | URI | URL): Record<string, string> | undefined {\n\t\tlet params: URLSearchParams | undefined;\n\t\tif (typeof url === 'string') {\n\t\t\tparams = new URL(url).searchParams;\n\t\t} else if (url instanceof URL) {\n\t\t\tparams = url.searchParams;\n\t\t} else if (URI.isUri(url)) {\n\t\t\tparams = new URL(url.toString(true)).searchParams;\n\t\t}\n\t\tconst value = params?.get(coiSearchParamName);\n\t\tif (!value) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn coiHeaders.get(value);\n\t}\n\n\t/**\n\t * Add the `vscode-coi` query attribute based on wanting `COOP` and `COEP`. Will be a noop when `crossOriginIsolated`\n\t * isn't enabled the current context\n\t */\n\texport function addSearchParam(urlOrSearch: URLSearchParams | Record<string, string>, coop: boolean, coep: boolean): void {\n\t\tif (!(<any>globalThis).crossOriginIsolated) {\n\t\t\t// depends on the current context being COI\n\t\t\treturn;\n\t\t}\n\t\tconst value = coop && coep ? '3' : coep ? '2' : '1';\n\t\tif (urlOrSearch instanceof URLSearchParams) {\n\t\t\turlOrSearch.set(coiSearchParamName, value);\n\t\t} else {\n\t\t\t(<Record<string, string>>urlOrSearch)[coiSearchParamName] = value;\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": ["Schemas", "COI"]
}
