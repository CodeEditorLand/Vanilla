{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/common/themables.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Codicon } from \"./codicons.js\";\n\nexport type ColorIdentifier = string;\n\nexport type IconIdentifier = string;\n\nexport interface ThemeColor {\n\tid: string;\n}\n\nexport namespace ThemeColor {\n\texport function isThemeColor(obj: any): obj is ThemeColor {\n\t\treturn (\n\t\t\tobj &&\n\t\t\ttypeof obj === \"object\" &&\n\t\t\ttypeof (<ThemeColor>obj).id === \"string\"\n\t\t);\n\t}\n}\n\nexport function themeColorFromId(id: ColorIdentifier) {\n\treturn { id };\n}\n\nexport interface ThemeIcon {\n\treadonly id: string;\n\treadonly color?: ThemeColor;\n}\n\nexport namespace ThemeIcon {\n\texport const iconNameSegment = \"[A-Za-z0-9]+\";\n\texport const iconNameExpression = \"[A-Za-z0-9-]+\";\n\texport const iconModifierExpression = \"~[A-Za-z]+\";\n\texport const iconNameCharacter = \"[A-Za-z0-9~-]\";\n\n\tconst ThemeIconIdRegex = new RegExp(\n\t\t`^(${iconNameExpression})(${iconModifierExpression})?$`,\n\t);\n\n\texport function asClassNameArray(icon: ThemeIcon): string[] {\n\t\tconst match = ThemeIconIdRegex.exec(icon.id);\n\t\tif (!match) {\n\t\t\treturn asClassNameArray(Codicon.error);\n\t\t}\n\t\tconst [, id, modifier] = match;\n\t\tconst classNames = [\"codicon\", \"codicon-\" + id];\n\t\tif (modifier) {\n\t\t\tclassNames.push(\"codicon-modifier-\" + modifier.substring(1));\n\t\t}\n\t\treturn classNames;\n\t}\n\n\texport function asClassName(icon: ThemeIcon): string {\n\t\treturn asClassNameArray(icon).join(\" \");\n\t}\n\n\texport function asCSSSelector(icon: ThemeIcon): string {\n\t\treturn \".\" + asClassNameArray(icon).join(\".\");\n\t}\n\n\texport function isThemeIcon(obj: any): obj is ThemeIcon {\n\t\treturn (\n\t\t\tobj &&\n\t\t\ttypeof obj === \"object\" &&\n\t\t\ttypeof (<ThemeIcon>obj).id === \"string\" &&\n\t\t\t(typeof (<ThemeIcon>obj).color === \"undefined\" ||\n\t\t\t\tThemeColor.isThemeColor((<ThemeIcon>obj).color))\n\t\t);\n\t}\n\n\tconst _regexFromString = new RegExp(\n\t\t`^\\\\$\\\\((${ThemeIcon.iconNameExpression}(?:${ThemeIcon.iconModifierExpression})?)\\\\)$`,\n\t);\n\n\texport function fromString(str: string): ThemeIcon | undefined {\n\t\tconst match = _regexFromString.exec(str);\n\t\tif (!match) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst [, name] = match;\n\t\treturn { id: name };\n\t}\n\n\texport function fromId(id: string): ThemeIcon {\n\t\treturn { id };\n\t}\n\n\texport function modify(\n\t\ticon: ThemeIcon,\n\t\tmodifier: \"disabled\" | \"spin\" | undefined,\n\t): ThemeIcon {\n\t\tlet id = icon.id;\n\t\tconst tildeIndex = id.lastIndexOf(\"~\");\n\t\tif (tildeIndex !== -1) {\n\t\t\tid = id.substring(0, tildeIndex);\n\t\t}\n\t\tif (modifier) {\n\t\t\tid = `${id}~${modifier}`;\n\t\t}\n\t\treturn { id };\n\t}\n\n\texport function getModifier(icon: ThemeIcon): string | undefined {\n\t\tconst tildeIndex = icon.id.lastIndexOf(\"~\");\n\t\tif (tildeIndex !== -1) {\n\t\t\treturn icon.id.substring(tildeIndex + 1);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\texport function isEqual(ti1: ThemeIcon, ti2: ThemeIcon): boolean {\n\t\treturn ti1.id === ti2.id && ti1.color?.id === ti2.color?.id;\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,eAAe;AAUjB,IAAU;AAAA,CAAV,CAAUA,gBAAV;AACC,WAAS,aAAa,KAA6B;AACzD,WACC,OACA,OAAO,QAAQ,YACf,OAAoB,IAAK,OAAO;AAAA,EAElC;AANO,EAAAA,YAAS;AAAA;AAAA,GADA;AAUV,SAAS,iBAAiB,IAAqB;AACrD,SAAO,EAAE,GAAG;AACb;AAFgB;AAST,IAAU;AAAA,CAAV,CAAUC,eAAV;AACC,EAAMA,WAAA,kBAAkB;AACxB,EAAMA,WAAA,qBAAqB;AAC3B,EAAMA,WAAA,yBAAyB;AAC/B,EAAMA,WAAA,oBAAoB;AAEjC,QAAM,mBAAmB,IAAI;AAAA,IAC5B,KAAKA,WAAA,kBAAkB,KAAKA,WAAA,sBAAsB;AAAA,EACnD;AAEO,WAAS,iBAAiB,MAA2B;AAC3D,UAAM,QAAQ,iBAAiB,KAAK,KAAK,EAAE;AAC3C,QAAI,CAAC,OAAO;AACX,aAAO,iBAAiB,QAAQ,KAAK;AAAA,IACtC;AACA,UAAM,CAAC,EAAE,IAAI,QAAQ,IAAI;AACzB,UAAM,aAAa,CAAC,WAAW,aAAa,EAAE;AAC9C,QAAI,UAAU;AACb,iBAAW,KAAK,sBAAsB,SAAS,UAAU,CAAC,CAAC;AAAA,IAC5D;AACA,WAAO;AAAA,EACR;AAXO,EAAAA,WAAS;AAAA;AAaT,WAAS,YAAY,MAAyB;AACpD,WAAO,iBAAiB,IAAI,EAAE,KAAK,GAAG;AAAA,EACvC;AAFO,EAAAA,WAAS;AAAA;AAIT,WAAS,cAAc,MAAyB;AACtD,WAAO,MAAM,iBAAiB,IAAI,EAAE,KAAK,GAAG;AAAA,EAC7C;AAFO,EAAAA,WAAS;AAAA;AAIT,WAAS,YAAY,KAA4B;AACvD,WACC,OACA,OAAO,QAAQ,YACf,OAAmB,IAAK,OAAO,aAC9B,OAAmB,IAAK,UAAU,eAClC,WAAW,aAAyB,IAAK,KAAK;AAAA,EAEjD;AARO,EAAAA,WAAS;AAAA;AAUhB,QAAM,mBAAmB,IAAI;AAAA,IAC5B,WAAWA,WAAU,kBAAkB,MAAMA,WAAU,sBAAsB;AAAA,EAC9E;AAEO,WAAS,WAAW,KAAoC;AAC9D,UAAM,QAAQ,iBAAiB,KAAK,GAAG;AACvC,QAAI,CAAC,OAAO;AACX,aAAO;AAAA,IACR;AACA,UAAM,CAAC,EAAE,IAAI,IAAI;AACjB,WAAO,EAAE,IAAI,KAAK;AAAA,EACnB;AAPO,EAAAA,WAAS;AAAA;AAST,WAAS,OAAO,IAAuB;AAC7C,WAAO,EAAE,GAAG;AAAA,EACb;AAFO,EAAAA,WAAS;AAAA;AAIT,WAAS,OACf,MACA,UACY;AACZ,QAAI,KAAK,KAAK;AACd,UAAM,aAAa,GAAG,YAAY,GAAG;AACrC,QAAI,eAAe,IAAI;AACtB,WAAK,GAAG,UAAU,GAAG,UAAU;AAAA,IAChC;AACA,QAAI,UAAU;AACb,WAAK,GAAG,EAAE,IAAI,QAAQ;AAAA,IACvB;AACA,WAAO,EAAE,GAAG;AAAA,EACb;AAbO,EAAAA,WAAS;AAAA;AAeT,WAAS,YAAY,MAAqC;AAChE,UAAM,aAAa,KAAK,GAAG,YAAY,GAAG;AAC1C,QAAI,eAAe,IAAI;AACtB,aAAO,KAAK,GAAG,UAAU,aAAa,CAAC;AAAA,IACxC;AACA,WAAO;AAAA,EACR;AANO,EAAAA,WAAS;AAAA;AAQT,WAAS,QAAQ,KAAgB,KAAyB;AAChE,WAAO,IAAI,OAAO,IAAI,MAAM,IAAI,OAAO,OAAO,IAAI,OAAO;AAAA,EAC1D;AAFO,EAAAA,WAAS;AAAA;AAAA,GAjFA;",
  "names": ["ThemeColor", "ThemeIcon"]
}
