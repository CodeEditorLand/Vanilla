import{VSBuffer as u}from"./buffer.js";import{MarshalledId as g}from"./marshallingIds.js";import{URI as s}from"./uri.js";function f(r){return r.toJSON()}class T{_uriTransformer;constructor(n){this._uriTransformer=n}transformIncoming(n){const t=this._uriTransformer.transformIncoming(n);return t===n?n:f(s.from(t))}transformOutgoing(n){const t=this._uriTransformer.transformOutgoing(n);return t===n?n:f(s.from(t))}transformOutgoingURI(n){const t=this._uriTransformer.transformOutgoing(n);return t===n?n:s.from(t)}transformOutgoingScheme(n){return this._uriTransformer.transformOutgoingScheme(n)}}const O=new class{transformIncoming(r){return r}transformOutgoing(r){return r}transformOutgoingURI(r){return r}transformOutgoingScheme(r){return r}};function a(r,n,t){if(!r||t>200)return null;if(typeof r=="object"){if(r instanceof s)return n.transformOutgoing(r);for(const o in r)if(Object.hasOwnProperty.call(r,o)){const e=a(r[o],n,t+1);e!==null&&(r[o]=e)}}return null}function h(r,n){const t=a(r,n,0);return t===null?r:t}function i(r,n,t,o){if(!r||o>200)return null;if(typeof r=="object"){if(r.$mid===g.Uri)return t?s.revive(n.transformIncoming(r)):n.transformIncoming(r);if(r instanceof u)return null;for(const e in r)if(Object.hasOwnProperty.call(r,e)){const m=i(r[e],n,t,o+1);m!==null&&(r[e]=m)}}return null}function y(r,n){const t=i(r,n,!1,0);return t===null?r:t}function C(r,n){const t=i(r,n,!0,0);return t===null?r:t}export{O as DefaultURITransformer,T as URITransformer,C as transformAndReviveIncomingURIs,y as transformIncomingURIs,h as transformOutgoingURIs};
