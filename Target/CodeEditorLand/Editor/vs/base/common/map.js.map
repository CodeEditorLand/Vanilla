{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/common/map.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { URI } from \"./uri.js\";\n\nexport function getOrSet<K, V>(map: Map<K, V>, key: K, value: V): V {\n\tlet result = map.get(key);\n\tif (result === undefined) {\n\t\tresult = value;\n\t\tmap.set(key, result);\n\t}\n\n\treturn result;\n}\n\nexport function mapToString<K, V>(map: Map<K, V>): string {\n\tconst entries: string[] = [];\n\tmap.forEach((value, key) => {\n\t\tentries.push(`${key} => ${value}`);\n\t});\n\n\treturn `Map(${map.size}) {${entries.join(\", \")}}`;\n}\n\nexport function setToString<K>(set: Set<K>): string {\n\tconst entries: K[] = [];\n\tset.forEach((value) => {\n\t\tentries.push(value);\n\t});\n\n\treturn `Set(${set.size}) {${entries.join(\", \")}}`;\n}\n\ninterface ResourceMapKeyFn {\n\t(resource: URI): string;\n}\n\nclass ResourceMapEntry<T> {\n\tconstructor(\n\t\treadonly uri: URI,\n\t\treadonly value: T,\n\t) {}\n}\n\nfunction isEntries<T>(\n\targ:\n\t\t| ResourceMap<T>\n\t\t| ResourceMapKeyFn\n\t\t| readonly (readonly [URI, T])[]\n\t\t| undefined,\n): arg is readonly (readonly [URI, T])[] {\n\treturn Array.isArray(arg);\n}\n\nexport class ResourceMap<T> implements Map<URI, T> {\n\tprivate static readonly defaultToKey = (resource: URI) =>\n\t\tresource.toString();\n\n\treadonly [Symbol.toStringTag] = \"ResourceMap\";\n\n\tprivate readonly map: Map<string, ResourceMapEntry<T>>;\n\tprivate readonly toKey: ResourceMapKeyFn;\n\n\t/**\n\t *\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(toKey?: ResourceMapKeyFn);\n\n\t/**\n\t *\n\t * @param other Another resource which this maps is created from\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(other?: ResourceMap<T>, toKey?: ResourceMapKeyFn);\n\n\t/**\n\t *\n\t * @param other Another resource which this maps is created from\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(\n\t\tentries?: readonly (readonly [URI, T])[],\n\t\ttoKey?: ResourceMapKeyFn,\n\t);\n\n\tconstructor(\n\t\targ?:\n\t\t\t| ResourceMap<T>\n\t\t\t| ResourceMapKeyFn\n\t\t\t| readonly (readonly [URI, T])[],\n\t\ttoKey?: ResourceMapKeyFn,\n\t) {\n\t\tif (arg instanceof ResourceMap) {\n\t\t\tthis.map = new Map(arg.map);\n\t\t\tthis.toKey = toKey ?? ResourceMap.defaultToKey;\n\t\t} else if (isEntries(arg)) {\n\t\t\tthis.map = new Map();\n\t\t\tthis.toKey = toKey ?? ResourceMap.defaultToKey;\n\n\t\t\tfor (const [resource, value] of arg) {\n\t\t\t\tthis.set(resource, value);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.map = new Map();\n\t\t\tthis.toKey = arg ?? ResourceMap.defaultToKey;\n\t\t}\n\t}\n\n\tset(resource: URI, value: T): this {\n\t\tthis.map.set(\n\t\t\tthis.toKey(resource),\n\t\t\tnew ResourceMapEntry(resource, value),\n\t\t);\n\t\treturn this;\n\t}\n\n\tget(resource: URI): T | undefined {\n\t\treturn this.map.get(this.toKey(resource))?.value;\n\t}\n\n\thas(resource: URI): boolean {\n\t\treturn this.map.has(this.toKey(resource));\n\t}\n\n\tget size(): number {\n\t\treturn this.map.size;\n\t}\n\n\tclear(): void {\n\t\tthis.map.clear();\n\t}\n\n\tdelete(resource: URI): boolean {\n\t\treturn this.map.delete(this.toKey(resource));\n\t}\n\n\tforEach(\n\t\tclb: (value: T, key: URI, map: Map<URI, T>) => void,\n\t\tthisArg?: any,\n\t): void {\n\t\tif (typeof thisArg !== \"undefined\") {\n\t\t\tclb = clb.bind(thisArg);\n\t\t}\n\t\tfor (const [_, entry] of this.map) {\n\t\t\tclb(entry.value, entry.uri, <any>this);\n\t\t}\n\t}\n\n\t*values(): IterableIterator<T> {\n\t\tfor (const entry of this.map.values()) {\n\t\t\tyield entry.value;\n\t\t}\n\t}\n\n\t*keys(): IterableIterator<URI> {\n\t\tfor (const entry of this.map.values()) {\n\t\t\tyield entry.uri;\n\t\t}\n\t}\n\n\t*entries(): IterableIterator<[URI, T]> {\n\t\tfor (const entry of this.map.values()) {\n\t\t\tyield [entry.uri, entry.value];\n\t\t}\n\t}\n\n\t*[Symbol.iterator](): IterableIterator<[URI, T]> {\n\t\tfor (const [, entry] of this.map) {\n\t\t\tyield [entry.uri, entry.value];\n\t\t}\n\t}\n}\n\nexport class ResourceSet implements Set<URI> {\n\treadonly [Symbol.toStringTag]: string = \"ResourceSet\";\n\n\tprivate readonly _map: ResourceMap<URI>;\n\n\tconstructor(toKey?: ResourceMapKeyFn);\n\tconstructor(entries: readonly URI[], toKey?: ResourceMapKeyFn);\n\tconstructor(\n\t\tentriesOrKey?: readonly URI[] | ResourceMapKeyFn,\n\t\ttoKey?: ResourceMapKeyFn,\n\t) {\n\t\tif (!entriesOrKey || typeof entriesOrKey === \"function\") {\n\t\t\tthis._map = new ResourceMap(entriesOrKey);\n\t\t} else {\n\t\t\tthis._map = new ResourceMap(toKey);\n\t\t\tentriesOrKey.forEach(this.add, this);\n\t\t}\n\t}\n\n\tget size(): number {\n\t\treturn this._map.size;\n\t}\n\n\tadd(value: URI): this {\n\t\tthis._map.set(value, value);\n\t\treturn this;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t}\n\n\tdelete(value: URI): boolean {\n\t\treturn this._map.delete(value);\n\t}\n\n\tforEach(\n\t\tcallbackfn: (value: URI, value2: URI, set: Set<URI>) => void,\n\t\tthisArg?: any,\n\t): void {\n\t\tthis._map.forEach((_value, key) =>\n\t\t\tcallbackfn.call(thisArg, key, key, this),\n\t\t);\n\t}\n\n\thas(value: URI): boolean {\n\t\treturn this._map.has(value);\n\t}\n\n\tentries(): IterableIterator<[URI, URI]> {\n\t\treturn this._map.entries();\n\t}\n\n\tkeys(): IterableIterator<URI> {\n\t\treturn this._map.keys();\n\t}\n\n\tvalues(): IterableIterator<URI> {\n\t\treturn this._map.keys();\n\t}\n\n\t[Symbol.iterator](): IterableIterator<URI> {\n\t\treturn this.keys();\n\t}\n}\n\ninterface Item<K, V> {\n\tprevious: Item<K, V> | undefined;\n\tnext: Item<K, V> | undefined;\n\tkey: K;\n\tvalue: V;\n}\n\nexport enum Touch {\n\tNone = 0,\n\tAsOld = 1,\n\tAsNew = 2,\n}\n\nexport class LinkedMap<K, V> implements Map<K, V> {\n\treadonly [Symbol.toStringTag] = \"LinkedMap\";\n\n\tprivate _map: Map<K, Item<K, V>>;\n\tprivate _head: Item<K, V> | undefined;\n\tprivate _tail: Item<K, V> | undefined;\n\tprivate _size: number;\n\n\tprivate _state: number;\n\n\tconstructor() {\n\t\tthis._map = new Map<K, Item<K, V>>();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t\tthis._state = 0;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t\tthis._state++;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !this._head && !this._tail;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tget first(): V | undefined {\n\t\treturn this._head?.value;\n\t}\n\n\tget last(): V | undefined {\n\t\treturn this._tail?.value;\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this._map.has(key);\n\t}\n\n\tget(key: K, touch: Touch = Touch.None): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (touch !== Touch.None) {\n\t\t\tthis.touch(item, touch);\n\t\t}\n\t\treturn item.value;\n\t}\n\n\tset(key: K, value: V, touch: Touch = Touch.None): this {\n\t\tlet item = this._map.get(key);\n\t\tif (item) {\n\t\t\titem.value = value;\n\t\t\tif (touch !== Touch.None) {\n\t\t\t\tthis.touch(item, touch);\n\t\t\t}\n\t\t} else {\n\t\t\titem = { key, value, next: undefined, previous: undefined };\n\t\t\tswitch (touch) {\n\t\t\t\tcase Touch.None:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsOld:\n\t\t\t\t\tthis.addItemFirst(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsNew:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._map.set(key, item);\n\t\t\tthis._size++;\n\t\t}\n\t\treturn this;\n\t}\n\n\tdelete(key: K): boolean {\n\t\treturn !!this.remove(key);\n\t}\n\n\tremove(key: K): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._map.delete(key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tshift(): V | undefined {\n\t\tif (!this._head && !this._tail) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error(\"Invalid list\");\n\t\t}\n\t\tconst item = this._head;\n\t\tthis._map.delete(item.key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tforEach(\n\t\tcallbackfn: (value: V, key: K, map: LinkedMap<K, V>) => void,\n\t\tthisArg?: any,\n\t): void {\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tif (thisArg) {\n\t\t\t\tcallbackfn.bind(thisArg)(current.value, current.key, this);\n\t\t\t} else {\n\t\t\t\tcallbackfn(current.value, current.key, this);\n\t\t\t}\n\t\t\tif (this._state !== state) {\n\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n\n\tkeys(): IterableIterator<K> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<K> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<K> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.key, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<V> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<V> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.value, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tentries(): IterableIterator<[K, V]> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<[K, V]> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<[K, V]> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result: IteratorResult<[K, V]> = {\n\t\t\t\t\t\tvalue: [current.key, current.value],\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t};\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t\treturn iterator;\n\t}\n\n\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\treturn this.entries();\n\t}\n\n\tprotected trimOld(newSize: number) {\n\t\tif (newSize >= this.size) {\n\t\t\treturn;\n\t\t}\n\t\tif (newSize === 0) {\n\t\t\tthis.clear();\n\t\t\treturn;\n\t\t}\n\t\tlet current = this._head;\n\t\tlet currentSize = this.size;\n\t\twhile (current && currentSize > newSize) {\n\t\t\tthis._map.delete(current.key);\n\t\t\tcurrent = current.next;\n\t\t\tcurrentSize--;\n\t\t}\n\t\tthis._head = current;\n\t\tthis._size = currentSize;\n\t\tif (current) {\n\t\t\tcurrent.previous = undefined;\n\t\t}\n\t\tthis._state++;\n\t}\n\n\tprotected trimNew(newSize: number) {\n\t\tif (newSize >= this.size) {\n\t\t\treturn;\n\t\t}\n\t\tif (newSize === 0) {\n\t\t\tthis.clear();\n\t\t\treturn;\n\t\t}\n\t\tlet current = this._tail;\n\t\tlet currentSize = this.size;\n\t\twhile (current && currentSize > newSize) {\n\t\t\tthis._map.delete(current.key);\n\t\t\tcurrent = current.previous;\n\t\t\tcurrentSize--;\n\t\t}\n\t\tthis._tail = current;\n\t\tthis._size = currentSize;\n\t\tif (current) {\n\t\t\tcurrent.next = undefined;\n\t\t}\n\t\tthis._state++;\n\t}\n\n\tprivate addItemFirst(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._tail = item;\n\t\t} else if (this._head) {\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid list\");\n\t\t}\n\t\tthis._head = item;\n\t\tthis._state++;\n\t}\n\n\tprivate addItemLast(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._head = item;\n\t\t} else if (this._tail) {\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid list\");\n\t\t}\n\t\tthis._tail = item;\n\t\tthis._state++;\n\t}\n\n\tprivate removeItem(item: Item<K, V>): void {\n\t\tif (item === this._head && item === this._tail) {\n\t\t\tthis._head = undefined;\n\t\t\tthis._tail = undefined;\n\t\t} else if (item === this._head) {\n\t\t\t// This can only happen if size === 1 which is handled\n\t\t\t// by the case above.\n\t\t\tif (!item.next) {\n\t\t\t\tthrow new Error(\"Invalid list\");\n\t\t\t}\n\t\t\titem.next.previous = undefined;\n\t\t\tthis._head = item.next;\n\t\t} else if (item === this._tail) {\n\t\t\t// This can only happen if size === 1 which is handled\n\t\t\t// by the case above.\n\t\t\tif (!item.previous) {\n\t\t\t\tthrow new Error(\"Invalid list\");\n\t\t\t}\n\t\t\titem.previous.next = undefined;\n\t\t\tthis._tail = item.previous;\n\t\t} else {\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\t\t\tif (!next || !previous) {\n\t\t\t\tthrow new Error(\"Invalid list\");\n\t\t\t}\n\t\t\tnext.previous = previous;\n\t\t\tprevious.next = next;\n\t\t}\n\t\titem.next = undefined;\n\t\titem.previous = undefined;\n\t\tthis._state++;\n\t}\n\n\tprivate touch(item: Item<K, V>, touch: Touch): void {\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error(\"Invalid list\");\n\t\t}\n\t\tif (touch !== Touch.AsOld && touch !== Touch.AsNew) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (touch === Touch.AsOld) {\n\t\t\tif (item === this._head) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item\n\t\t\tif (item === this._tail) {\n\t\t\t\t// previous must be defined since item was not head but is tail\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tprevious!.next = undefined;\n\t\t\t\tthis._tail = previous;\n\t\t\t} else {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\n\t\t\t// Insert the node at head\n\t\t\titem.previous = undefined;\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t\tthis._head = item;\n\t\t\tthis._state++;\n\t\t} else if (touch === Touch.AsNew) {\n\t\t\tif (item === this._tail) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item.\n\t\t\tif (item === this._head) {\n\t\t\t\t// next must be defined since item was not tail but is head\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tnext!.previous = undefined;\n\t\t\t\tthis._head = next;\n\t\t\t} else {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\t\t\titem.next = undefined;\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t\tthis._tail = item;\n\t\t\tthis._state++;\n\t\t}\n\t}\n\n\ttoJSON(): [K, V][] {\n\t\tconst data: [K, V][] = [];\n\n\t\tthis.forEach((value, key) => {\n\t\t\tdata.push([key, value]);\n\t\t});\n\n\t\treturn data;\n\t}\n\n\tfromJSON(data: [K, V][]): void {\n\t\tthis.clear();\n\n\t\tfor (const [key, value] of data) {\n\t\t\tthis.set(key, value);\n\t\t}\n\t}\n}\n\nabstract class Cache<K, V> extends LinkedMap<K, V> {\n\tprotected _limit: number;\n\tprotected _ratio: number;\n\n\tconstructor(limit: number, ratio = 1) {\n\t\tsuper();\n\t\tthis._limit = limit;\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t}\n\n\tget limit(): number {\n\t\treturn this._limit;\n\t}\n\n\tset limit(limit: number) {\n\t\tthis._limit = limit;\n\t\tthis.checkTrim();\n\t}\n\n\tget ratio(): number {\n\t\treturn this._ratio;\n\t}\n\n\tset ratio(ratio: number) {\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t\tthis.checkTrim();\n\t}\n\n\toverride get(key: K, touch: Touch = Touch.AsNew): V | undefined {\n\t\treturn super.get(key, touch);\n\t}\n\n\tpeek(key: K): V | undefined {\n\t\treturn super.get(key, Touch.None);\n\t}\n\n\toverride set(key: K, value: V): this {\n\t\tsuper.set(key, value, Touch.AsNew);\n\t\treturn this;\n\t}\n\n\tprotected checkTrim() {\n\t\tif (this.size > this._limit) {\n\t\t\tthis.trim(Math.round(this._limit * this._ratio));\n\t\t}\n\t}\n\n\tprotected abstract trim(newSize: number): void;\n}\n\nexport class LRUCache<K, V> extends Cache<K, V> {\n\tconstructor(limit: number, ratio = 1) {\n\t\tsuper(limit, ratio);\n\t}\n\n\tprotected override trim(newSize: number) {\n\t\tthis.trimOld(newSize);\n\t}\n\n\toverride set(key: K, value: V): this {\n\t\tsuper.set(key, value);\n\t\tthis.checkTrim();\n\t\treturn this;\n\t}\n}\n\nexport class MRUCache<K, V> extends Cache<K, V> {\n\tconstructor(limit: number, ratio = 1) {\n\t\tsuper(limit, ratio);\n\t}\n\n\tprotected override trim(newSize: number) {\n\t\tthis.trimNew(newSize);\n\t}\n\n\toverride set(key: K, value: V): this {\n\t\tif (this._limit <= this.size && !this.has(key)) {\n\t\t\tthis.trim(Math.round(this._limit * this._ratio) - 1);\n\t\t}\n\n\t\tsuper.set(key, value);\n\t\treturn this;\n\t}\n}\n\nexport class CounterSet<T> {\n\tprivate map = new Map<T, number>();\n\n\tadd(value: T): CounterSet<T> {\n\t\tthis.map.set(value, (this.map.get(value) || 0) + 1);\n\t\treturn this;\n\t}\n\n\tdelete(value: T): boolean {\n\t\tlet counter = this.map.get(value) || 0;\n\n\t\tif (counter === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tcounter--;\n\n\t\tif (counter === 0) {\n\t\t\tthis.map.delete(value);\n\t\t} else {\n\t\t\tthis.map.set(value, counter);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\thas(value: T): boolean {\n\t\treturn this.map.has(value);\n\t}\n}\n\n/**\n * A map that allows access both by keys and values.\n * **NOTE**: values need to be unique.\n */\nexport class BidirectionalMap<K, V> {\n\tprivate readonly _m1 = new Map<K, V>();\n\tprivate readonly _m2 = new Map<V, K>();\n\n\tconstructor(entries?: readonly (readonly [K, V])[]) {\n\t\tif (entries) {\n\t\t\tfor (const [key, value] of entries) {\n\t\t\t\tthis.set(key, value);\n\t\t\t}\n\t\t}\n\t}\n\n\tclear(): void {\n\t\tthis._m1.clear();\n\t\tthis._m2.clear();\n\t}\n\n\tset(key: K, value: V): void {\n\t\tthis._m1.set(key, value);\n\t\tthis._m2.set(value, key);\n\t}\n\n\tget(key: K): V | undefined {\n\t\treturn this._m1.get(key);\n\t}\n\n\tgetKey(value: V): K | undefined {\n\t\treturn this._m2.get(value);\n\t}\n\n\tdelete(key: K): boolean {\n\t\tconst value = this._m1.get(key);\n\t\tif (value === undefined) {\n\t\t\treturn false;\n\t\t}\n\t\tthis._m1.delete(key);\n\t\tthis._m2.delete(value);\n\t\treturn true;\n\t}\n\n\tforEach(\n\t\tcallbackfn: (value: V, key: K, map: BidirectionalMap<K, V>) => void,\n\t\tthisArg?: any,\n\t): void {\n\t\tthis._m1.forEach((value, key) => {\n\t\t\tcallbackfn.call(thisArg, value, key, this);\n\t\t});\n\t}\n\n\tkeys(): IterableIterator<K> {\n\t\treturn this._m1.keys();\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\treturn this._m1.values();\n\t}\n}\n\nexport class SetMap<K, V> {\n\tprivate map = new Map<K, Set<V>>();\n\n\tadd(key: K, value: V): void {\n\t\tlet values = this.map.get(key);\n\n\t\tif (!values) {\n\t\t\tvalues = new Set<V>();\n\t\t\tthis.map.set(key, values);\n\t\t}\n\n\t\tvalues.add(value);\n\t}\n\n\tdelete(key: K, value: V): void {\n\t\tconst values = this.map.get(key);\n\n\t\tif (!values) {\n\t\t\treturn;\n\t\t}\n\n\t\tvalues.delete(value);\n\n\t\tif (values.size === 0) {\n\t\t\tthis.map.delete(key);\n\t\t}\n\t}\n\n\tforEach(key: K, fn: (value: V) => void): void {\n\t\tconst values = this.map.get(key);\n\n\t\tif (!values) {\n\t\t\treturn;\n\t\t}\n\n\t\tvalues.forEach(fn);\n\t}\n\n\tget(key: K): ReadonlySet<V> {\n\t\tconst values = this.map.get(key);\n\t\tif (!values) {\n\t\t\treturn new Set<V>();\n\t\t}\n\t\treturn values;\n\t}\n}\n\nexport function mapsStrictEqualIgnoreOrder(\n\ta: Map<unknown, unknown>,\n\tb: Map<unknown, unknown>,\n): boolean {\n\tif (a === b) {\n\t\treturn true;\n\t}\n\n\tif (a.size !== b.size) {\n\t\treturn false;\n\t}\n\n\tfor (const [key, value] of a) {\n\t\tif (!b.has(key) || b.get(key) !== value) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tfor (const [key] of b) {\n\t\tif (!a.has(key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * A map that is addressable with 2 separate keys. This is useful in high performance scenarios\n * where creating a composite key whenever the data is accessed is too expensive.\n */\nexport class TwoKeyMap<\n\tTFirst extends string | number,\n\tTSecond extends string | number,\n\tTValue,\n> {\n\tprivate _data: {\n\t\t[key: string | number]:\n\t\t\t| { [key: string | number]: TValue | undefined }\n\t\t\t| undefined;\n\t} = {};\n\n\tpublic set(first: TFirst, second: TSecond, value: TValue): void {\n\t\tif (!this._data[first]) {\n\t\t\tthis._data[first] = {};\n\t\t}\n\t\tthis._data[first as string | number]![second] = value;\n\t}\n\n\tpublic get(first: TFirst, second: TSecond): TValue | undefined {\n\t\treturn this._data[first as string | number]?.[second];\n\t}\n\n\tpublic clear(): void {\n\t\tthis._data = {};\n\t}\n\n\tpublic *values(): IterableIterator<TValue> {\n\t\tfor (const first in this._data) {\n\t\t\tfor (const second in this._data[first]) {\n\t\t\t\tconst value = this._data[first]![second];\n\t\t\t\tif (value) {\n\t\t\t\t\tyield value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * A map that is addressable with 3 separate keys. This is useful in high performance scenarios\n * where creating a composite key whenever the data is accessed is too expensive.\n */\nexport class ThreeKeyMap<\n\tTFirst extends string | number,\n\tTSecond extends string | number,\n\tTThird extends string | number,\n\tTValue,\n> {\n\tprivate _data: {\n\t\t[key: string | number]: TwoKeyMap<TSecond, TThird, TValue> | undefined;\n\t} = {};\n\n\tpublic set(\n\t\tfirst: TFirst,\n\t\tsecond: TSecond,\n\t\tthird: TThird,\n\t\tvalue: TValue,\n\t): void {\n\t\tif (!this._data[first]) {\n\t\t\tthis._data[first] = new TwoKeyMap();\n\t\t}\n\t\tthis._data[first as string | number]!.set(second, third, value);\n\t}\n\n\tpublic get(\n\t\tfirst: TFirst,\n\t\tsecond: TSecond,\n\t\tthird: TThird,\n\t): TValue | undefined {\n\t\treturn this._data[first as string | number]?.get(second, third);\n\t}\n\n\tpublic clear(): void {\n\t\tthis._data = {};\n\t}\n\n\tpublic *values(): IterableIterator<TValue> {\n\t\tfor (const first in this._data) {\n\t\t\tfor (const value of this._data[first]!.values()) {\n\t\t\t\tif (value) {\n\t\t\t\t\tyield value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * A map that is addressable with 4 separate keys. This is useful in high performance scenarios\n * where creating a composite key whenever the data is accessed is too expensive.\n */\nexport class FourKeyMap<\n\tTFirst extends string | number,\n\tTSecond extends string | number,\n\tTThird extends string | number,\n\tTFourth extends string | number,\n\tTValue,\n> {\n\tprivate _data: TwoKeyMap<\n\t\tTFirst,\n\t\tTSecond,\n\t\tTwoKeyMap<TThird, TFourth, TValue>\n\t> = new TwoKeyMap();\n\n\tpublic set(\n\t\tfirst: TFirst,\n\t\tsecond: TSecond,\n\t\tthird: TThird,\n\t\tfourth: TFourth,\n\t\tvalue: TValue,\n\t): void {\n\t\tif (!this._data.get(first, second)) {\n\t\t\tthis._data.set(first, second, new TwoKeyMap());\n\t\t}\n\t\tthis._data.get(first, second)!.set(third, fourth, value);\n\t}\n\n\tpublic get(\n\t\tfirst: TFirst,\n\t\tsecond: TSecond,\n\t\tthird: TThird,\n\t\tfourth: TFourth,\n\t): TValue | undefined {\n\t\treturn this._data.get(first, second)?.get(third, fourth);\n\t}\n\n\tpublic clear(): void {\n\t\tthis._data.clear();\n\t}\n}\n"],
  "mappings": "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",
  "names": ["Touch"]
}
