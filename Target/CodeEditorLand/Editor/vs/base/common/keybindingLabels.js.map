{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/common/keybindingLabels.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from \"../../nls.js\";\nimport type { Modifiers } from \"./keybindings.js\";\nimport { OperatingSystem } from \"./platform.js\";\n\nexport interface ModifierLabels {\n\treadonly ctrlKey: string;\n\treadonly shiftKey: string;\n\treadonly altKey: string;\n\treadonly metaKey: string;\n\treadonly separator: string;\n}\n\nexport interface KeyLabelProvider<T extends Modifiers> {\n\t(keybinding: T): string | null;\n}\n\nexport class ModifierLabelProvider {\n\tpublic readonly modifierLabels: ModifierLabels[];\n\n\tconstructor(\n\t\tmac: ModifierLabels,\n\t\twindows: ModifierLabels,\n\t\tlinux: ModifierLabels = windows,\n\t) {\n\t\tthis.modifierLabels = [null!]; // index 0 will never me accessed.\n\t\tthis.modifierLabels[OperatingSystem.Macintosh] = mac;\n\t\tthis.modifierLabels[OperatingSystem.Windows] = windows;\n\t\tthis.modifierLabels[OperatingSystem.Linux] = linux;\n\t}\n\n\tpublic toLabel<T extends Modifiers>(\n\t\tOS: OperatingSystem,\n\t\tchords: readonly T[],\n\t\tkeyLabelProvider: KeyLabelProvider<T>,\n\t): string | null {\n\t\tif (chords.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst result: string[] = [];\n\t\tfor (let i = 0, len = chords.length; i < len; i++) {\n\t\t\tconst chord = chords[i];\n\t\t\tconst keyLabel = keyLabelProvider(chord);\n\t\t\tif (keyLabel === null) {\n\t\t\t\t// this keybinding cannot be expressed...\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tresult[i] = _simpleAsString(\n\t\t\t\tchord,\n\t\t\t\tkeyLabel,\n\t\t\t\tthis.modifierLabels[OS],\n\t\t\t);\n\t\t}\n\t\treturn result.join(\" \");\n\t}\n}\n\n/**\n * A label provider that prints modifiers in a suitable format for displaying in the UI.\n */\nexport const UILabelProvider = new ModifierLabelProvider(\n\t{\n\t\tctrlKey: \"\\u2303\",\n\t\tshiftKey: \"\u21E7\",\n\t\taltKey: \"\u2325\",\n\t\tmetaKey: \"\u2318\",\n\t\tseparator: \"\",\n\t},\n\t{\n\t\tctrlKey: nls.localize(\n\t\t\t{\n\t\t\t\tkey: \"ctrlKey\",\n\t\t\t\tcomment: [\n\t\t\t\t\t\"This is the short form for the Control key on the keyboard\",\n\t\t\t\t],\n\t\t\t},\n\t\t\t\"Ctrl\",\n\t\t),\n\t\tshiftKey: nls.localize(\n\t\t\t{\n\t\t\t\tkey: \"shiftKey\",\n\t\t\t\tcomment: [\n\t\t\t\t\t\"This is the short form for the Shift key on the keyboard\",\n\t\t\t\t],\n\t\t\t},\n\t\t\t\"Shift\",\n\t\t),\n\t\taltKey: nls.localize(\n\t\t\t{\n\t\t\t\tkey: \"altKey\",\n\t\t\t\tcomment: [\n\t\t\t\t\t\"This is the short form for the Alt key on the keyboard\",\n\t\t\t\t],\n\t\t\t},\n\t\t\t\"Alt\",\n\t\t),\n\t\tmetaKey: nls.localize(\n\t\t\t{\n\t\t\t\tkey: \"windowsKey\",\n\t\t\t\tcomment: [\n\t\t\t\t\t\"This is the short form for the Windows key on the keyboard\",\n\t\t\t\t],\n\t\t\t},\n\t\t\t\"Windows\",\n\t\t),\n\t\tseparator: \"+\",\n\t},\n\t{\n\t\tctrlKey: nls.localize(\n\t\t\t{\n\t\t\t\tkey: \"ctrlKey\",\n\t\t\t\tcomment: [\n\t\t\t\t\t\"This is the short form for the Control key on the keyboard\",\n\t\t\t\t],\n\t\t\t},\n\t\t\t\"Ctrl\",\n\t\t),\n\t\tshiftKey: nls.localize(\n\t\t\t{\n\t\t\t\tkey: \"shiftKey\",\n\t\t\t\tcomment: [\n\t\t\t\t\t\"This is the short form for the Shift key on the keyboard\",\n\t\t\t\t],\n\t\t\t},\n\t\t\t\"Shift\",\n\t\t),\n\t\taltKey: nls.localize(\n\t\t\t{\n\t\t\t\tkey: \"altKey\",\n\t\t\t\tcomment: [\n\t\t\t\t\t\"This is the short form for the Alt key on the keyboard\",\n\t\t\t\t],\n\t\t\t},\n\t\t\t\"Alt\",\n\t\t),\n\t\tmetaKey: nls.localize(\n\t\t\t{\n\t\t\t\tkey: \"superKey\",\n\t\t\t\tcomment: [\n\t\t\t\t\t\"This is the short form for the Super key on the keyboard\",\n\t\t\t\t],\n\t\t\t},\n\t\t\t\"Super\",\n\t\t),\n\t\tseparator: \"+\",\n\t},\n);\n\n/**\n * A label provider that prints modifiers in a suitable format for ARIA.\n */\nexport const AriaLabelProvider = new ModifierLabelProvider(\n\t{\n\t\tctrlKey: nls.localize(\n\t\t\t{\n\t\t\t\tkey: \"ctrlKey.long\",\n\t\t\t\tcomment: [\n\t\t\t\t\t\"This is the long form for the Control key on the keyboard\",\n\t\t\t\t],\n\t\t\t},\n\t\t\t\"Control\",\n\t\t),\n\t\tshiftKey: nls.localize(\n\t\t\t{\n\t\t\t\tkey: \"shiftKey.long\",\n\t\t\t\tcomment: [\n\t\t\t\t\t\"This is the long form for the Shift key on the keyboard\",\n\t\t\t\t],\n\t\t\t},\n\t\t\t\"Shift\",\n\t\t),\n\t\taltKey: nls.localize(\n\t\t\t{\n\t\t\t\tkey: \"optKey.long\",\n\t\t\t\tcomment: [\n\t\t\t\t\t\"This is the long form for the Alt/Option key on the keyboard\",\n\t\t\t\t],\n\t\t\t},\n\t\t\t\"Option\",\n\t\t),\n\t\tmetaKey: nls.localize(\n\t\t\t{\n\t\t\t\tkey: \"cmdKey.long\",\n\t\t\t\tcomment: [\n\t\t\t\t\t\"This is the long form for the Command key on the keyboard\",\n\t\t\t\t],\n\t\t\t},\n\t\t\t\"Command\",\n\t\t),\n\t\tseparator: \"+\",\n\t},\n\t{\n\t\tctrlKey: nls.localize(\n\t\t\t{\n\t\t\t\tkey: \"ctrlKey.long\",\n\t\t\t\tcomment: [\n\t\t\t\t\t\"This is the long form for the Control key on the keyboard\",\n\t\t\t\t],\n\t\t\t},\n\t\t\t\"Control\",\n\t\t),\n\t\tshiftKey: nls.localize(\n\t\t\t{\n\t\t\t\tkey: \"shiftKey.long\",\n\t\t\t\tcomment: [\n\t\t\t\t\t\"This is the long form for the Shift key on the keyboard\",\n\t\t\t\t],\n\t\t\t},\n\t\t\t\"Shift\",\n\t\t),\n\t\taltKey: nls.localize(\n\t\t\t{\n\t\t\t\tkey: \"altKey.long\",\n\t\t\t\tcomment: [\n\t\t\t\t\t\"This is the long form for the Alt key on the keyboard\",\n\t\t\t\t],\n\t\t\t},\n\t\t\t\"Alt\",\n\t\t),\n\t\tmetaKey: nls.localize(\n\t\t\t{\n\t\t\t\tkey: \"windowsKey.long\",\n\t\t\t\tcomment: [\n\t\t\t\t\t\"This is the long form for the Windows key on the keyboard\",\n\t\t\t\t],\n\t\t\t},\n\t\t\t\"Windows\",\n\t\t),\n\t\tseparator: \"+\",\n\t},\n\t{\n\t\tctrlKey: nls.localize(\n\t\t\t{\n\t\t\t\tkey: \"ctrlKey.long\",\n\t\t\t\tcomment: [\n\t\t\t\t\t\"This is the long form for the Control key on the keyboard\",\n\t\t\t\t],\n\t\t\t},\n\t\t\t\"Control\",\n\t\t),\n\t\tshiftKey: nls.localize(\n\t\t\t{\n\t\t\t\tkey: \"shiftKey.long\",\n\t\t\t\tcomment: [\n\t\t\t\t\t\"This is the long form for the Shift key on the keyboard\",\n\t\t\t\t],\n\t\t\t},\n\t\t\t\"Shift\",\n\t\t),\n\t\taltKey: nls.localize(\n\t\t\t{\n\t\t\t\tkey: \"altKey.long\",\n\t\t\t\tcomment: [\n\t\t\t\t\t\"This is the long form for the Alt key on the keyboard\",\n\t\t\t\t],\n\t\t\t},\n\t\t\t\"Alt\",\n\t\t),\n\t\tmetaKey: nls.localize(\n\t\t\t{\n\t\t\t\tkey: \"superKey.long\",\n\t\t\t\tcomment: [\n\t\t\t\t\t\"This is the long form for the Super key on the keyboard\",\n\t\t\t\t],\n\t\t\t},\n\t\t\t\"Super\",\n\t\t),\n\t\tseparator: \"+\",\n\t},\n);\n\n/**\n * A label provider that prints modifiers in a suitable format for Electron Accelerators.\n * See https://github.com/electron/electron/blob/master/docs/api/accelerator.md\n */\nexport const ElectronAcceleratorLabelProvider = new ModifierLabelProvider(\n\t{\n\t\tctrlKey: \"Ctrl\",\n\t\tshiftKey: \"Shift\",\n\t\taltKey: \"Alt\",\n\t\tmetaKey: \"Cmd\",\n\t\tseparator: \"+\",\n\t},\n\t{\n\t\tctrlKey: \"Ctrl\",\n\t\tshiftKey: \"Shift\",\n\t\taltKey: \"Alt\",\n\t\tmetaKey: \"Super\",\n\t\tseparator: \"+\",\n\t},\n);\n\n/**\n * A label provider that prints modifiers in a suitable format for user settings.\n */\nexport const UserSettingsLabelProvider = new ModifierLabelProvider(\n\t{\n\t\tctrlKey: \"ctrl\",\n\t\tshiftKey: \"shift\",\n\t\taltKey: \"alt\",\n\t\tmetaKey: \"cmd\",\n\t\tseparator: \"+\",\n\t},\n\t{\n\t\tctrlKey: \"ctrl\",\n\t\tshiftKey: \"shift\",\n\t\taltKey: \"alt\",\n\t\tmetaKey: \"win\",\n\t\tseparator: \"+\",\n\t},\n\t{\n\t\tctrlKey: \"ctrl\",\n\t\tshiftKey: \"shift\",\n\t\taltKey: \"alt\",\n\t\tmetaKey: \"meta\",\n\t\tseparator: \"+\",\n\t},\n);\n\nfunction _simpleAsString(\n\tmodifiers: Modifiers,\n\tkey: string,\n\tlabels: ModifierLabels,\n): string {\n\tif (key === null) {\n\t\treturn \"\";\n\t}\n\n\tconst result: string[] = [];\n\n\t// translate modifier keys: Ctrl-Shift-Alt-Meta\n\tif (modifiers.ctrlKey) {\n\t\tresult.push(labels.ctrlKey);\n\t}\n\n\tif (modifiers.shiftKey) {\n\t\tresult.push(labels.shiftKey);\n\t}\n\n\tif (modifiers.altKey) {\n\t\tresult.push(labels.altKey);\n\t}\n\n\tif (modifiers.metaKey) {\n\t\tresult.push(labels.metaKey);\n\t}\n\n\t// the actual key\n\tif (key !== \"\") {\n\t\tresult.push(key);\n\t}\n\n\treturn result.join(labels.separator);\n}\n"],
  "mappings": "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",
  "names": []
}
