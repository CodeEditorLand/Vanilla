import"../../../vs/base/common/cancellation.js";import{CancellationError as b}from"../../../vs/base/common/errors.js";import"../../../vs/base/common/sequence.js";import{findFirstIdxMonotonousOrArrLen as y}from"./arraysFind.js";function N(e,n=0){return e[e.length-(1+n)]}function E(e){if(e.length===0)throw new Error("Invalid tail call");return[e.slice(0,e.length-1),e[e.length-1]]}function L(e,n,t=(r,o)=>r===o){if(e===n)return!0;if(!e||!n||e.length!==n.length)return!1;for(let r=0,o=e.length;r<o;r++)if(!t(e[r],n[r]))return!1;return!0}function S(e,n){const t=e.length-1;n<t&&(e[n]=e[t]),e.pop()}function P(e,n,t){return g(e.length,r=>t(e[r],n))}function g(e,n){let t=0,r=e-1;for(;t<=r;){const o=(t+r)/2|0,i=n(o);if(i<0)t=o+1;else if(i>0)r=o-1;else return o}return-(t+1)}function p(e,n,t){if(e=e|0,e>=n.length)throw new TypeError("invalid index");const r=n[Math.floor(n.length*Math.random())],o=[],i=[],u=[];for(const l of n){const s=t(l,r);s<0?o.push(l):s>0?i.push(l):u.push(l)}return e<o.length?p(e,o,t):e<o.length+u.length?u[0]:p(e-(o.length+u.length),i,t)}function j(e,n){const t=[];let r;for(const o of e.slice(0).sort(n))!r||n(r[0],o)!==0?(r=[o],t.push(r)):r.push(o);return t}function*B(e,n){let t,r;for(const o of e)r!==void 0&&n(r,o)?t.push(o):(t&&(yield t),t=[o]),r=o;t&&(yield t)}function G(e,n){for(let t=0;t<=e.length;t++)n(t===0?void 0:e[t-1],t===e.length?void 0:e[t])}function D(e,n){for(let t=0;t<e.length;t++)n(t===0?void 0:e[t-1],e[t],t+1===e.length?void 0:e[t+1])}function A(e,n,t){const r=[];function o(l,s,T){if(s===0&&T.length===0)return;const a=r[r.length-1];a&&a.start+a.deleteCount===l?(a.deleteCount+=s,a.toInsert.push(...T)):r.push({start:l,deleteCount:s,toInsert:T})}let i=0,u=0;for(;;){if(i===e.length){o(i,0,n.slice(u));break}if(u===n.length){o(i,e.length-i,[]);break}const l=e[i],s=n[u],T=t(l,s);T===0?(i+=1,u+=1):T<0?(o(i,1,[]),i+=1):T>0&&(o(i,0,[s]),u+=1)}return r}function q(e,n,t){const r=A(e,n,t),o=[],i=[];for(const u of r)o.push(...e.slice(u.start,u.start+u.deleteCount)),i.push(...u.toInsert);return{removed:o,added:i}}function U(e,n,t){if(t===0)return[];const r=e.slice(0,t).sort(n);return m(e,n,r,t,e.length),r}function W(e,n,t,r,o){return t===0?Promise.resolve([]):new Promise((i,u)=>{(async()=>{const l=e.length,s=e.slice(0,t).sort(n);for(let T=t,a=Math.min(t+r,l);T<l;T=a,a=Math.min(a+r,l)){if(T>t&&await new Promise(x=>setTimeout(x)),o&&o.isCancellationRequested)throw new b;m(e,n,s,T,a)}return s})().then(i,u)})}function m(e,n,t,r,o){for(const i=t.length;r<o;r++){const u=e[r];if(n(u,t[i-1])<0){t.pop();const l=y(t,s=>n(u,s)<0);t.splice(l,0,u)}}}function V(e){return e.filter(n=>!!n)}function _(e){let n=0;for(let t=0;t<e.length;t++)e[t]&&(e[n]=e[t],n+=1);e.length=n}function K(e,n,t){e.splice(t,0,e.splice(n,1)[0])}function Q(e){return!Array.isArray(e)||e.length===0}function z(e){return Array.isArray(e)&&e.length>0}function H(e,n=t=>t){const t=new Set;return e.filter(r=>{const o=n(r);return t.has(o)?!1:(t.add(o),!0)})}function J(e){const n=new Set;return t=>{const r=e(t);return n.has(r)?!1:(n.add(r),!0)}}function X(e,n){return e.length>0?e[0]:n}function Y(e,n){return e.length>0?e[e.length-1]:n}function Z(e,n,t=(r,o)=>r===o){let r=0;for(let o=0,i=Math.min(e.length,n.length);o<i&&t(e[o],n[o]);o++)r++;return r}function $(e,n){let t=typeof n=="number"?e:0;typeof n=="number"?t=e:(t=0,n=e);const r=[];if(t<=n)for(let o=t;o<n;o++)r.push(o);else for(let o=t;o>n;o--)r.push(o);return r}function ee(e,n,t){return e.reduce((r,o)=>(r[n(o)]=t?t(o):o,r),Object.create(null))}function te(e,n){return e.push(n),()=>I(e,n)}function I(e,n){const t=e.indexOf(n);if(t>-1)return e.splice(t,1),n}function ne(e,n,t){const r=e.slice(0,n),o=e.slice(n);return r.concat(t,o)}function re(e,n){let t;if(typeof n=="number"){let r=n;t=()=>{const o=Math.sin(r++)*179426549;return o-Math.floor(o)}}else t=Math.random;for(let r=e.length-1;r>0;r-=1){const o=Math.floor(t()*(r+1)),i=e[r];e[r]=e[o],e[o]=i}}function oe(e,n){const t=e.indexOf(n);t>-1&&(e.splice(t,1),e.unshift(n))}function ie(e,n){const t=e.indexOf(n);t>-1&&(e.splice(t,1),e.push(n))}function ue(e,n){for(const t of n)e.push(t)}function se(e,n){return Array.isArray(e)?e.map(n):n(e)}function le(e){return Array.isArray(e)?e:[e]}function Te(e){return e[Math.floor(Math.random()*e.length)]}function R(e,n,t){const r=h(e,n),o=e.length,i=t.length;e.length=o+i;for(let u=o-1;u>=r;u--)e[u+i]=e[u];for(let u=0;u<i;u++)e[u+r]=t[u]}function ae(e,n,t,r){const o=h(e,n);let i=e.splice(o,t);return i===void 0&&(i=[]),R(e,o,r),i}function h(e,n){return n<0?Math.max(n+e.length,0):Math.min(n,e.length)}var d;(l=>{function e(s){return s<0}l.isLessThan=e;function n(s){return s<=0}l.isLessThanOrEqual=n;function t(s){return s>0}l.isGreaterThan=t;function r(s){return s===0}l.isNeitherLessOrGreaterThan=r,l.greaterThan=1,l.lessThan=-1,l.neitherLessOrGreaterThan=0})(d||={});function de(e,n){return(t,r)=>n(e(t),e(r))}function fe(...e){return(n,t)=>{for(const r of e){const o=r(n,t);if(!d.isNeitherLessOrGreaterThan(o))return o}return d.neitherLessOrGreaterThan}}const v=(e,n)=>e-n,ce=(e,n)=>v(e?1:0,n?1:0);function pe(e){return(n,t)=>-e(n,t)}class me{constructor(n){this.items=n}firstIdx=0;lastIdx=this.items.length-1;get length(){return this.lastIdx-this.firstIdx+1}takeWhile(n){let t=this.firstIdx;for(;t<this.items.length&&n(this.items[t]);)t++;const r=t===this.firstIdx?null:this.items.slice(this.firstIdx,t);return this.firstIdx=t,r}takeFromEndWhile(n){let t=this.lastIdx;for(;t>=0&&n(this.items[t]);)t--;const r=t===this.lastIdx?null:this.items.slice(t+1,this.lastIdx+1);return this.lastIdx=t,r}peek(){if(this.length!==0)return this.items[this.firstIdx]}peekLast(){if(this.length!==0)return this.items[this.lastIdx]}dequeue(){const n=this.items[this.firstIdx];return this.firstIdx++,n}removeLast(){const n=this.items[this.lastIdx];return this.lastIdx--,n}takeCount(n){const t=this.items.slice(this.firstIdx,this.firstIdx+n);return this.firstIdx+=n,t}}class f{constructor(n){this.iterate=n}static empty=new f(n=>{});forEach(n){this.iterate(t=>(n(t),!0))}toArray(){const n=[];return this.iterate(t=>(n.push(t),!0)),n}filter(n){return new f(t=>this.iterate(r=>n(r)?t(r):!0))}map(n){return new f(t=>this.iterate(r=>t(n(r))))}some(n){let t=!1;return this.iterate(r=>(t=n(r),!t)),t}findFirst(n){let t;return this.iterate(r=>n(r)?(t=r,!1):!0),t}findLast(n){let t;return this.iterate(r=>(n(r)&&(t=r),!0)),t}findLastMaxBy(n){let t,r=!0;return this.iterate(o=>((r||d.isGreaterThan(n(o,t)))&&(r=!1,t=o),!0)),t}}class c{constructor(n){this._indexMap=n}static createSortPermutation(n,t){const r=Array.from(n.keys()).sort((o,i)=>t(n[o],n[i]));return new c(r)}apply(n){return n.map((t,r)=>n[this._indexMap[r]])}inverse(){const n=this._indexMap.slice();for(let t=0;t<this._indexMap.length;t++)n[this._indexMap[t]]=t;return new c(n)}}async function he(e,n){return(await Promise.all(e.map(async(r,o)=>({element:r,ok:await n(r,o)})))).find(r=>r.ok)?.element}export{me as ArrayQueue,f as CallbackIterable,d as CompareResult,c as Permutation,ne as arrayInsert,le as asArray,P as binarySearch,g as binarySearch2,ce as booleanComparator,V as coalesce,_ as coalesceInPlace,Z as commonPrefixLength,de as compareBy,q as delta,H as distinct,L as equals,he as findAsync,X as firstOrDefault,G as forEachAdjacent,D as forEachWithNeighbors,Te as getRandomElement,B as groupAdjacentBy,j as groupBy,ee as index,te as insert,R as insertInto,Q as isFalsyOrEmpty,z as isNonEmptyArray,Y as lastOrDefault,se as mapArrayOrNot,K as move,v as numberComparator,ue as pushMany,ie as pushToEnd,oe as pushToStart,p as quickSelect,$ as range,I as remove,S as removeFastWithoutKeepingOrder,pe as reverseOrder,re as shuffle,A as sortedDiff,ae as splice,N as tail,E as tail2,fe as tieBreakComparators,U as top,W as topAsync,J as uniqueFilter};
