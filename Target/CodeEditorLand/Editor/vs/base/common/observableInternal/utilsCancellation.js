import"./base.js";import{DebugNameData as p}from"./debugName.js";import{CancellationError as c,CancellationTokenSource as k}from"./commonFacade/cancellation.js";import{Derived as m}from"./derived.js";import{strictEquals as C}from"./commonFacade/deps.js";import{autorun as w}from"./autorun.js";function g(r,a,o,t){return a||(a=e=>e!=null),new Promise((e,i)=>{let d=!0,T=!1;const f=r.map(n=>({isFinished:a(n),error:o?o(n):!1,state:n})),l=w(n=>{const{isFinished:b,error:s,state:u}=f.read(n);(b||s)&&(d?T=!0:l.dispose(),s?i(s===!0?u:s):e(u))});if(t){const n=t.onCancellationRequested(()=>{l.dispose(),n.dispose(),i(new c)});if(t.isCancellationRequested){l.dispose(),n.dispose(),i(new c);return}}d=!1,T&&l.dispose()})}function q(r,a){let o,t;a===void 0?(o=r,t=void 0):(t=r,o=a);let e;return new m(new p(t,void 0,o),i=>(e&&e.dispose(!0),e=new k,o(i,e.token)),void 0,void 0,()=>e?.dispose(),C)}export{q as derivedWithCancellationToken,g as waitForState};
