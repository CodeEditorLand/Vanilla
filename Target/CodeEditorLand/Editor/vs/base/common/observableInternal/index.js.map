{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/common/observableInternal/index.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// This is a facade for the observable implementation. Only import from here!\n\nexport { observableValueOpts } from \"./api.js\";\nexport {\n\tautorun,\n\tautorunDelta,\n\tautorunHandleChanges,\n\tautorunOpts,\n\tautorunWithStore,\n\tautorunWithStoreHandleChanges,\n} from \"./autorun.js\";\nexport {\n\tasyncTransaction,\n\tdisposableObservableValue,\n\tglobalTransaction,\n\tobservableValue,\n\tsubtransaction,\n\ttransaction,\n\tTransactionImpl,\n\ttype IChangeContext,\n\ttype IChangeTracker,\n\ttype IObservable,\n\ttype IObserver,\n\ttype IReader,\n\ttype ISettable,\n\ttype ISettableObservable,\n\ttype ITransaction,\n} from \"./base.js\";\nexport {\n\tderived,\n\tderivedDisposable,\n\tderivedHandleChanges,\n\tderivedOpts,\n\tderivedWithSetter,\n\tderivedWithStore,\n} from \"./derived.js\";\nexport {\n\tObservableLazy,\n\tObservableLazyPromise,\n\tObservablePromise,\n\tPromiseResult,\n} from \"./promise.js\";\nexport {\n\tderivedWithCancellationToken,\n\twaitForState,\n} from \"./utilsCancellation.js\";\nexport {\n\tconstObservable,\n\tdebouncedObservable,\n\tderivedConstOnceDefined,\n\tderivedObservableWithCache,\n\tderivedObservableWithWritableCache,\n\tkeepObserved,\n\tlatestChangedValue,\n\tmapObservableArrayCached,\n\tobservableFromEvent,\n\tobservableFromEventOpts,\n\tobservableFromPromise,\n\tobservableFromValueWithChangeEvent,\n\tobservableSignal,\n\tobservableSignalFromEvent,\n\trecomputeInitiallyAndOnChange,\n\trunOnChange,\n\trunOnChangeWithStore,\n\tsignalFromObservable,\n\tValueWithChangeEventFromObservable,\n\twasEventTriggeredRecently,\n\ttype IObservableSignal,\n} from \"./utils.js\";\nexport { type DebugOwner } from \"./debugName.js\";\n\nimport { ConsoleObservableLogger, setLogger } from \"./logging.js\";\n\n// Remove \"//\" in the next line to enable logging\nconst enableLogging = false;\n// || Boolean(\"true\") // done \"weirdly\" so that a lint warning prevents you from pushing this\n\nif (enableLogging) {\n\tsetLogger(new ConsoleObservableLogger());\n}\n"],
  "mappings": "AAOA,SAAS,2BAA2B;AACpeAAgC;AAEhC,SAAS,yBAAyB,iBAAiB;AAGnD,MAAM,gBAAgB;AAGtB,IAAI,eAAe;AAClB,YAAU,IAAI,wBAAwB,CAAC;AACxC;",
  "names": []
}
