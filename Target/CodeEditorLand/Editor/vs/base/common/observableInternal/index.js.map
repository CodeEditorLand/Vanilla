{
  "version": 3,
  "sources": ["../../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/common/observableInternal/index.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// This is a facade for the observable implementation. Only import from here!\n\nexport { observableValueOpts } from './api.js';\nexport { autorun, autorunDelta, autorunHandleChanges, autorunOpts, autorunWithStore, autorunWithStoreHandleChanges } from './autorun.js';\nexport { asyncTransaction, disposableObservableValue, globalTransaction, observableValue, subtransaction, transaction, TransactionImpl, type IChangeContext, type IChangeTracker, type IObservable, type IObserver, type IReader, type ISettable, type ISettableObservable, type ITransaction, } from './base.js';\nexport { derived, derivedDisposable, derivedHandleChanges, derivedOpts, derivedWithSetter, derivedWithStore } from './derived.js';\nexport { ObservableLazy, ObservableLazyPromise, ObservablePromise, PromiseResult, } from './promise.js';\nexport { derivedWithCancellationToken, waitForState } from './utilsCancellation.js';\nexport { constObservable, debouncedObservable, derivedConstOnceDefined, derivedObservableWithCache, derivedObservableWithWritableCache, keepObserved, latestChangedValue, mapObservableArrayCached, observableFromEvent, observableFromEventOpts, observableFromPromise, observableFromValueWithChangeEvent, observableSignal, observableSignalFromEvent, recomputeInitiallyAndOnChange, runOnChange, runOnChangeWithStore, signalFromObservable, ValueWithChangeEventFromObservable, wasEventTriggeredRecently, type IObservableSignal, } from './utils.js';\nexport { type DebugOwner } from './debugName.js';\n\nimport {\n\tConsoleObservableLogger,\n\tsetLogger\n} from './logging.js';\n\n// Remove \"//\" in the next line to enable logging\nconst enableLogging = false\n\t// || Boolean(\"true\") // done \"weirdly\" so that a lint warning prevents you from pushing this\n\t;\n\nif (enableLogging) {\n\tsetLogger(new ConsoleObservableLogger());\n}\n"],
  "mappings": "AAOA,SAAS,2BAA2B;AACpC,SAAS,SAAS,cAAc,sBAAsB,aAAa,kBAAkB,qCAAqC;AAC1H,SAAS,kBAAkB,2BAA2B,mBAAmB,iBAAiB,gBAAgB,aAAa,uBAA+K;AACtS,SAAS,SAAS,mBAAmB,sBAAsB,aAAa,mBAAmB,wBAAwB;AACnH,SAAS,gBAAgB,uBAAuB,mBAAmB,qBAAsB;AACzF,SAAS,8BAA8B,oBAAoB;AAC3D,SAAS,iBAAiB,qBAAqB,yBAAyB,4BAA4B,oCAAoC,cAAc,oBAAoB,0BAA0B,qBAAqB,yBAAyB,uBAAuB,oCAAoC,kBAAkB,2BAA2B,+BAA+B,aAAa,sBAAsB,sBAAsB,oCAAoC,iCAA0D;AAChhB,eAAgC;AAEhC;AAAA,EACC;AAAA,EACA;AAAA,OACM;AAGP,MAAM,gBAAgB;AAItB,IAAI,eAAe;AAClB,YAAU,IAAI,wBAAwB,CAAC;AACxC;",
  "names": []
}
