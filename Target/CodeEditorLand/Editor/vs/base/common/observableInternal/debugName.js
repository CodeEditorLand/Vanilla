class D{constructor(e,r,n){this.owner=e;this.debugNameSource=r;this.referenceFn=n}getDebugName(e){return a(e,this)}}const s=new Map,o=new WeakMap;function a(t,e){const r=o.get(t);if(r)return r;const n=b(t,e);if(n){let u=s.get(n)??0;u++,s.set(n,u);const c=u===1?n:`${n}#${u}`;return o.set(t,c),c}}function b(t,e){const r=o.get(t);if(r)return r;const n=e.owner?l(e.owner)+".":"";let u;const c=e.debugNameSource;if(c!==void 0)if(typeof c=="function"){if(u=c(),u!==void 0)return n+u}else return n+c;const i=e.referenceFn;if(i!==void 0&&(u=N(i),u!==void 0))return n+u;if(e.owner!==void 0){const d=m(e.owner,t);if(d!==void 0)return n+d}}function m(t,e){for(const r in t)if(t[r]===e)return r}const f=new Map,g=new WeakMap;function l(t){const e=g.get(t);if(e)return e;const r=p(t);let n=f.get(r)??0;n++,f.set(r,n);const u=n===1?r:`${r}#${n}`;return g.set(t,u),u}function p(t){const e=t.constructor;return e?e.name:"Object"}function N(t){const e=t.toString(),n=/\/\*\*\s*@description\s*([^*]*)\*\//.exec(e);return(n?n[1]:void 0)?.trim()}export{D as DebugNameData,a as getDebugName,N as getFunctionName};
