{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/common/hotReload.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IDisposable } from \"./lifecycle.js\";\nimport { env } from \"./process.js\";\n\nfunction hotReloadDisabled() {\n\treturn true; // TODO@hediet fix hot reload.\n}\n\nexport function isHotReloadEnabled(): boolean {\n\treturn !hotReloadDisabled() && env && !!env[\"VSCODE_DEV\"];\n}\nexport function registerHotReloadHandler(\n\thandler: HotReloadHandler,\n): IDisposable {\n\tif (isHotReloadEnabled()) {\n\t\tconst handlers = registerGlobalHotReloadHandler();\n\t\thandlers.add(handler);\n\t\treturn {\n\t\t\tdispose() {\n\t\t\t\thandlers.delete(handler);\n\t\t\t},\n\t\t};\n\t} else {\n\t\treturn { dispose() {} };\n\t}\n}\n\n/**\n * Takes the old exports of the module to reload and returns a function to apply the new exports.\n * If `undefined` is returned, this handler is not able to handle the module.\n *\n * If no handler can apply the new exports, the module will not be reloaded.\n */\nexport type HotReloadHandler = (args: {\n\toldExports: Record<string, unknown>;\n\tnewSrc: string;\n\tconfig: IHotReloadConfig;\n}) => AcceptNewExportsHandler | undefined;\nexport type AcceptNewExportsHandler = (\n\tnewExports: Record<string, unknown>,\n) => boolean;\nexport type IHotReloadConfig = HotReloadConfig;\n\nfunction registerGlobalHotReloadHandler() {\n\tif (!hotReloadHandlers) {\n\t\thotReloadHandlers = new Set();\n\t}\n\n\tconst g = globalThis as unknown as GlobalThisAddition;\n\tif (!g.$hotReload_applyNewExports) {\n\t\tg.$hotReload_applyNewExports = (args) => {\n\t\t\tconst args2 = { config: { mode: undefined }, ...args };\n\n\t\t\tconst results: AcceptNewExportsHandler[] = [];\n\t\t\tfor (const h of hotReloadHandlers!) {\n\t\t\t\tconst result = h(args2);\n\t\t\t\tif (result) {\n\t\t\t\t\tresults.push(result);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (results.length > 0) {\n\t\t\t\treturn (newExports) => {\n\t\t\t\t\tlet result = false;\n\t\t\t\t\tfor (const r of results) {\n\t\t\t\t\t\tif (r(newExports)) {\n\t\t\t\t\t\t\tresult = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn undefined;\n\t\t};\n\t}\n\n\treturn hotReloadHandlers;\n}\n\nlet hotReloadHandlers:\n\t| Set<\n\t\t\t(args: {\n\t\t\t\toldExports: Record<string, unknown>;\n\t\t\t\tnewSrc: string;\n\t\t\t\tconfig: HotReloadConfig;\n\t\t\t}) => AcceptNewExportsFn | undefined\n\t  >\n\t| undefined;\n\ninterface HotReloadConfig {\n\tmode?: \"patch-prototype\" | undefined;\n}\n\ninterface GlobalThisAddition {\n\t$hotReload_applyNewExports?(args: {\n\t\toldExports: Record<string, unknown>;\n\t\tnewSrc: string;\n\t\tconfig?: HotReloadConfig;\n\t}): AcceptNewExportsFn | undefined;\n}\n\ntype AcceptNewExportsFn = (newExports: Record<string, unknown>) => boolean;\n\nif (isHotReloadEnabled()) {\n\t// This code does not run in production.\n\tregisterHotReloadHandler(({ oldExports, newSrc, config }) => {\n\t\tif (config.mode !== \"patch-prototype\") {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn (newExports) => {\n\t\t\tfor (const key in newExports) {\n\t\t\t\tconst exportedItem = newExports[key];\n\t\t\t\tconsole.log(\n\t\t\t\t\t`[hot-reload] Patching prototype methods of '${key}'`,\n\t\t\t\t\t{ exportedItem },\n\t\t\t\t);\n\t\t\t\tif (\n\t\t\t\t\ttypeof exportedItem === \"function\" &&\n\t\t\t\t\texportedItem.prototype\n\t\t\t\t) {\n\t\t\t\t\tconst oldExportedItem = oldExports[key];\n\t\t\t\t\tif (oldExportedItem) {\n\t\t\t\t\t\tfor (const prop of Object.getOwnPropertyNames(\n\t\t\t\t\t\t\texportedItem.prototype,\n\t\t\t\t\t\t)) {\n\t\t\t\t\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(\n\t\t\t\t\t\t\t\texportedItem.prototype,\n\t\t\t\t\t\t\t\tprop,\n\t\t\t\t\t\t\t)!;\n\t\t\t\t\t\t\tconst oldDescriptor =\n\t\t\t\t\t\t\t\tObject.getOwnPropertyDescriptor(\n\t\t\t\t\t\t\t\t\t(oldExportedItem as any).prototype,\n\t\t\t\t\t\t\t\t\tprop,\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tdescriptor?.value?.toString() !==\n\t\t\t\t\t\t\t\toldDescriptor?.value?.toString()\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\t`[hot-reload] Patching prototype method '${key}.${prop}'`,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tObject.defineProperty(\n\t\t\t\t\t\t\t\t(oldExportedItem as any).prototype,\n\t\t\t\t\t\t\t\tprop,\n\t\t\t\t\t\t\t\tdescriptor,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnewExports[key] = oldExportedItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\t});\n}\n"],
  "mappings": ";;AAMA,SAAS,WAAW;AAEpB,SAAS,oBAAoB;AAC5B,SAAO;AACR;AAFS;AAIF,SAAS,qBAA8B;AAC7C,SAAO,CAAC,kBAAkB,KAAK,OAAO,CAAC,CAAC,IAAI,YAAY;AACzD;AAFgB;AAGT,SAAS,yBACf,SACc;AACd,MAAI,mBAAmB,GAAG;AACzB,UAAM,WAAW,+BAA+B;AAChD,aAAS,IAAI,OAAO;AACpB,WAAO;AAAA,MACN,UAAU;AACT,iBAAS,OAAO,OAAO;AAAA,MACxB;AAAA,IACD;AAAA,EACD,OAAO;AACN,WAAO,EAAE,UAAU;AAAA,IAAC,EAAE;AAAA,EACvB;AACD;AAdgB;AAgChB,SAAS,iCAAiC;AACzC,MAAI,CAAC,mBAAmB;AACvB,wBAAoB,oBAAI,IAAI;AAAA,EAC7B;AAEA,QAAM,IAAI;AACV,MAAI,CAAC,EAAE,4BAA4B;AAClC,MAAE,6BAA6B,CAAC,SAAS;AACxC,YAAM,QAAQ,EAAE,QAAQ,EAAE,MAAM,OAAU,GAAG,GAAG,KAAK;AAErD,YAAM,UAAqC,CAAC;AAC5C,iBAAW,KAAK,mBAAoB;AACnC,cAAM,SAAS,EAAE,KAAK;AACtB,YAAI,QAAQ;AACX,kBAAQ,KAAK,MAAM;AAAA,QACpB;AAAA,MACD;AACA,UAAI,QAAQ,SAAS,GAAG;AACvB,eAAO,CAAC,eAAe;AACtB,cAAI,SAAS;AACb,qBAAW,KAAK,SAAS;AACxB,gBAAI,EAAE,UAAU,GAAG;AAClB,uBAAS;AAAA,YACV;AAAA,UACD;AACA,iBAAO;AAAA,QACR;AAAA,MACD;AACA,aAAO;AAAA,IACR;AAAA,EACD;AAEA,SAAO;AACR;AAjCS;AAmCT,IAAI;AAwBJ,IAAI,mBAAmB,GAAG;AAEzB,2BAAyB,CAAC,EAAE,YAAY,QAAQ,OAAO,MAAM;AAC5D,QAAI,OAAO,SAAS,mBAAmB;AACtC,aAAO;AAAA,IACR;AAEA,WAAO,CAAC,eAAe;AACtB,iBAAW,OAAO,YAAY;AAC7B,cAAM,eAAe,WAAW,GAAG;AACnC,gBAAQ;AAAA,UACP,+CAA+C,GAAG;AAAA,UAClD,EAAE,aAAa;AAAA,QAChB;AACA,YACC,OAAO,iBAAiB,cACxB,aAAa,WACZ;AACD,gBAAM,kBAAkB,WAAW,GAAG;AACtC,cAAI,iBAAiB;AACpB,uBAAW,QAAQ,OAAO;AAAA,cACzB,aAAa;AAAA,YACd,GAAG;AACF,oBAAM,aAAa,OAAO;AAAA,gBACzB,aAAa;AAAA,gBACb;AAAA,cACD;AACA,oBAAM,gBACL,OAAO;AAAA,gBACL,gBAAwB;AAAA,gBACzB;AAAA,cACD;AAED,kBACC,YAAY,OAAO,SAAS,MAC5B,eAAe,OAAO,SAAS,GAC9B;AACD,wBAAQ;AAAA,kBACP,2CAA2C,GAAG,IAAI,IAAI;AAAA,gBACvD;AAAA,cACD;AAEA,qBAAO;AAAA,gBACL,gBAAwB;AAAA,gBACzB;AAAA,gBACA;AAAA,cACD;AAAA,YACD;AACA,uBAAW,GAAG,IAAI;AAAA,UACnB;AAAA,QACD;AAAA,MACD;AACA,aAAO;AAAA,IACR;AAAA,EACD,CAAC;AACF;",
  "names": []
}
