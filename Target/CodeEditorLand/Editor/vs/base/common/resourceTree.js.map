{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/common/resourceTree.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { memoize } from \"./decorators.js\";\nimport * as paths from \"./path.js\";\nimport { type IExtUri, extUri as defaultExtUri } from \"./resources.js\";\nimport { PathIterator } from \"./ternarySearchTree.js\";\nimport { URI } from \"./uri.js\";\n\nexport interface IResourceNode<T, C = void> {\n\treadonly uri: URI;\n\treadonly relativePath: string;\n\treadonly name: string;\n\treadonly element: T | undefined;\n\treadonly children: Iterable<IResourceNode<T, C>>;\n\treadonly childrenCount: number;\n\treadonly parent: IResourceNode<T, C> | undefined;\n\treadonly context: C;\n\tget(childName: string): IResourceNode<T, C> | undefined;\n}\n\nclass Node<T, C> implements IResourceNode<T, C> {\n\tprivate _children = new Map<string, Node<T, C>>();\n\n\tget childrenCount(): number {\n\t\treturn this._children.size;\n\t}\n\n\tget children(): Iterable<Node<T, C>> {\n\t\treturn this._children.values();\n\t}\n\n\t@memoize\n\tget name(): string {\n\t\treturn paths.posix.basename(this.relativePath);\n\t}\n\n\tconstructor(\n\t\treadonly uri: URI,\n\t\treadonly relativePath: string,\n\t\treadonly context: C,\n\t\tpublic element: T | undefined = undefined,\n\t\treadonly parent: IResourceNode<T, C> | undefined = undefined,\n\t) {}\n\n\tget(path: string): Node<T, C> | undefined {\n\t\treturn this._children.get(path);\n\t}\n\n\tset(path: string, child: Node<T, C>): void {\n\t\tthis._children.set(path, child);\n\t}\n\n\tdelete(path: string): void {\n\t\tthis._children.delete(path);\n\t}\n\n\tclear(): void {\n\t\tthis._children.clear();\n\t}\n}\n\nfunction collect<T, C>(node: IResourceNode<T, C>, result: T[]): T[] {\n\tif (typeof node.element !== \"undefined\") {\n\t\tresult.push(node.element);\n\t}\n\n\tfor (const child of node.children) {\n\t\tcollect(child, result);\n\t}\n\n\treturn result;\n}\n\nexport class ResourceTree<T extends NonNullable<any>, C> {\n\treadonly root: Node<T, C>;\n\n\tstatic getRoot<T, C>(node: IResourceNode<T, C>): IResourceNode<T, C> {\n\t\twhile (node.parent) {\n\t\t\tnode = node.parent;\n\t\t}\n\n\t\treturn node;\n\t}\n\n\tstatic collect<T, C>(node: IResourceNode<T, C>): T[] {\n\t\treturn collect(node, []);\n\t}\n\n\tstatic isResourceNode<T, C>(obj: any): obj is IResourceNode<T, C> {\n\t\treturn obj instanceof Node;\n\t}\n\n\tconstructor(\n\t\tcontext: C,\n\t\trootURI: URI = URI.file(\"/\"),\n\t\tprivate extUri: IExtUri = defaultExtUri,\n\t) {\n\t\tthis.root = new Node(rootURI, \"\", context);\n\t}\n\n\tadd(uri: URI, element: T): void {\n\t\tconst key = this.extUri.relativePath(this.root.uri, uri) || uri.path;\n\t\tconst iterator = new PathIterator(false).reset(key);\n\t\tlet node = this.root;\n\t\tlet path = \"\";\n\n\t\twhile (true) {\n\t\t\tconst name = iterator.value();\n\t\t\tpath = path + \"/\" + name;\n\n\t\t\tlet child = node.get(name);\n\n\t\t\tif (!child) {\n\t\t\t\tchild = new Node(\n\t\t\t\t\tthis.extUri.joinPath(this.root.uri, path),\n\t\t\t\t\tpath,\n\t\t\t\t\tthis.root.context,\n\t\t\t\t\titerator.hasNext() ? undefined : element,\n\t\t\t\t\tnode,\n\t\t\t\t);\n\n\t\t\t\tnode.set(name, child);\n\t\t\t} else if (!iterator.hasNext()) {\n\t\t\t\tchild.element = element;\n\t\t\t}\n\n\t\t\tnode = child;\n\n\t\t\tif (!iterator.hasNext()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\titerator.next();\n\t\t}\n\t}\n\n\tdelete(uri: URI): T | undefined {\n\t\tconst key = this.extUri.relativePath(this.root.uri, uri) || uri.path;\n\t\tconst iterator = new PathIterator(false).reset(key);\n\t\treturn this._delete(this.root, iterator);\n\t}\n\n\tprivate _delete(node: Node<T, C>, iterator: PathIterator): T | undefined {\n\t\tconst name = iterator.value();\n\t\tconst child = node.get(name);\n\n\t\tif (!child) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (iterator.hasNext()) {\n\t\t\tconst result = this._delete(child, iterator.next());\n\n\t\t\tif (typeof result !== \"undefined\" && child.childrenCount === 0) {\n\t\t\t\tnode.delete(name);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tnode.delete(name);\n\t\treturn child.element;\n\t}\n\n\tclear(): void {\n\t\tthis.root.clear();\n\t}\n\n\tgetNode(uri: URI): IResourceNode<T, C> | undefined {\n\t\tconst key = this.extUri.relativePath(this.root.uri, uri) || uri.path;\n\t\tconst iterator = new PathIterator(false).reset(key);\n\t\tlet node = this.root;\n\n\t\twhile (true) {\n\t\t\tconst name = iterator.value();\n\t\t\tconst child = node.get(name);\n\n\t\t\tif (!child || !iterator.hasNext()) {\n\t\t\t\treturn child;\n\t\t\t}\n\n\t\t\tnode = child;\n\t\t\titerator.next();\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
