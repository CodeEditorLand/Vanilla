{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/common/process.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { INodeProcess, isMacintosh, isWindows } from './platform.js';\n\nlet safeProcess: Omit<INodeProcess, 'arch'> & { arch: string | undefined };\ndeclare const process: INodeProcess;\n\n// Native sandbox environment\nconst vscodeGlobal = (globalThis as any).vscode;\nif (typeof vscodeGlobal !== 'undefined' && typeof vscodeGlobal.process !== 'undefined') {\n\tconst sandboxProcess: INodeProcess = vscodeGlobal.process;\n\tsafeProcess = {\n\t\tget platform() { return sandboxProcess.platform; },\n\t\tget arch() { return sandboxProcess.arch; },\n\t\tget env() { return sandboxProcess.env; },\n\t\tcwd() { return sandboxProcess.cwd(); }\n\t};\n}\n\n// Native node.js environment\nelse if (typeof process !== 'undefined' && typeof process?.versions?.node === 'string') {\n\tsafeProcess = {\n\t\tget platform() { return process.platform; },\n\t\tget arch() { return process.arch; },\n\t\tget env() { return process.env; },\n\t\tcwd() { return process.env['VSCODE_CWD'] || process.cwd(); }\n\t};\n}\n\n// Web environment\nelse {\n\tsafeProcess = {\n\n\t\t// Supported\n\t\tget platform() { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n\t\tget arch() { return undefined; /* arch is undefined in web */ },\n\n\t\t// Unsupported\n\t\tget env() { return {}; },\n\t\tcwd() { return '/'; }\n\t};\n}\n\n/**\n * Provides safe access to the `cwd` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `/`.\n *\n * @skipMangle\n */\nexport const cwd = safeProcess.cwd;\n\n/**\n * Provides safe access to the `env` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `{}`.\n */\nexport const env = safeProcess.env;\n\n/**\n * Provides safe access to the `platform` property in node.js, sandboxed or web\n * environments.\n */\nexport const platform = safeProcess.platform;\n\n/**\n * Provides safe access to the `arch` method in node.js, sandboxed or web\n * environments.\n * Note: `arch` is `undefined` in web\n */\nexport const arch = safeProcess.arch;\n"],
  "mappings": "AAKA,SAAS,cAAc,aAAa,iBAAiB;AAErD,IAAI;AAIJ,MAAM,eAAgB,WAAmB;AACzC,IAAI,OAAO,iBAAiB,eAAe,OAAO,aAAa,YAAY,aAAa;AACvF,QAAM,iBAA+B,aAAa;AAClD,gBAAc;AAAA,IACb,IAAI,WAAW;AAAE,aAAO,eAAe;AAAA,IAAU;AAAA,IACjD,IAAI,OAAO;AAAE,aAAO,eAAe;AAAA,IAAM;AAAA,IACzC,IAAI,MAAM;AAAE,aAAO,eAAe;AAAA,IAAK;AAAA,IACvC,MAAM;AAAE,aAAO,eAAe,IAAI;AAAA,IAAG;AAAA,EACtC;AACD,WAGS,OAAO,YAAY,eAAe,OAAO,SAAS,UAAU,SAAS,UAAU;AACvF,gBAAc;AAAA,IACb,IAAI,WAAW;AAAE,aAAO,QAAQ;AAAA,IAAU;AAAA,IAC1C,IAAI,OAAO;AAAE,aAAO,QAAQ;AAAA,IAAM;AAAA,IAClC,IAAI,MAAM;AAAE,aAAO,QAAQ;AAAA,IAAK;AAAA,IAChC,MAAM;AAAE,aAAO,QAAQ,IAAI,YAAY,KAAK,QAAQ,IAAI;AAAA,IAAG;AAAA,EAC5D;AACD,OAGK;AACJ,gBAAc;AAAA;AAAA,IAGb,IAAI,WAAW;AAAE,aAAO,YAAY,UAAU,cAAc,WAAW;AAAA,IAAS;AAAA,IAChF,IAAI,OAAO;AAAE,aAAO;AAAA,IAA0C;AAAA;AAAA,IAG9D,IAAI,MAAM;AAAE,aAAO,CAAC;AAAA,IAAG;AAAA,IACvB,MAAM;AAAE,aAAO;AAAA,IAAK;AAAA,EACrB;AACD;AAUO,MAAM,MAAM,YAAY;AAQxB,MAAM,MAAM,YAAY;AAMxB,MAAM,WAAW,YAAY;AAO7B,MAAM,OAAO,YAAY;",
  "names": []
}
