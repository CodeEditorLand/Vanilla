{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/common/linkedList.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nclass Node<E> {\n\tstatic readonly Undefined = new Node<any>(undefined);\n\n\telement: E;\n\tnext: Node<E>;\n\tprev: Node<E>;\n\n\tconstructor(element: E) {\n\t\tthis.element = element;\n\t\tthis.next = Node.Undefined;\n\t\tthis.prev = Node.Undefined;\n\t}\n}\n\nexport class LinkedList<E> {\n\tprivate _first: Node<E> = Node.Undefined;\n\tprivate _last: Node<E> = Node.Undefined;\n\tprivate _size = 0;\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._first === Node.Undefined;\n\t}\n\n\tclear(): void {\n\t\tlet node = this._first;\n\t\twhile (node !== Node.Undefined) {\n\t\t\tconst next = node.next;\n\t\t\tnode.prev = Node.Undefined;\n\t\t\tnode.next = Node.Undefined;\n\t\t\tnode = next;\n\t\t}\n\n\t\tthis._first = Node.Undefined;\n\t\tthis._last = Node.Undefined;\n\t\tthis._size = 0;\n\t}\n\n\tunshift(element: E): () => void {\n\t\treturn this._insert(element, false);\n\t}\n\n\tpush(element: E): () => void {\n\t\treturn this._insert(element, true);\n\t}\n\n\tprivate _insert(element: E, atTheEnd: boolean): () => void {\n\t\tconst newNode = new Node(element);\n\t\tif (this._first === Node.Undefined) {\n\t\t\tthis._first = newNode;\n\t\t\tthis._last = newNode;\n\t\t} else if (atTheEnd) {\n\t\t\t// push\n\t\t\tconst oldLast = this._last;\n\t\t\tthis._last = newNode;\n\t\t\tnewNode.prev = oldLast;\n\t\t\toldLast.next = newNode;\n\t\t} else {\n\t\t\t// unshift\n\t\t\tconst oldFirst = this._first;\n\t\t\tthis._first = newNode;\n\t\t\tnewNode.next = oldFirst;\n\t\t\toldFirst.prev = newNode;\n\t\t}\n\t\tthis._size += 1;\n\n\t\tlet didRemove = false;\n\t\treturn () => {\n\t\t\tif (!didRemove) {\n\t\t\t\tdidRemove = true;\n\t\t\t\tthis._remove(newNode);\n\t\t\t}\n\t\t};\n\t}\n\n\tshift(): E | undefined {\n\t\tif (this._first === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._first.element;\n\t\t\tthis._remove(this._first);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tpop(): E | undefined {\n\t\tif (this._last === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._last.element;\n\t\t\tthis._remove(this._last);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tprivate _remove(node: Node<E>): void {\n\t\tif (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n\t\t\t// middle\n\t\t\tconst anchor = node.prev;\n\t\t\tanchor.next = node.next;\n\t\t\tnode.next.prev = anchor;\n\t\t} else if (\n\t\t\tnode.prev === Node.Undefined &&\n\t\t\tnode.next === Node.Undefined\n\t\t) {\n\t\t\t// only node\n\t\t\tthis._first = Node.Undefined;\n\t\t\tthis._last = Node.Undefined;\n\t\t} else if (node.next === Node.Undefined) {\n\t\t\t// last\n\t\t\tthis._last = this._last.prev!;\n\t\t\tthis._last.next = Node.Undefined;\n\t\t} else if (node.prev === Node.Undefined) {\n\t\t\t// first\n\t\t\tthis._first = this._first.next!;\n\t\t\tthis._first.prev = Node.Undefined;\n\t\t}\n\n\t\t// done\n\t\tthis._size -= 1;\n\t}\n\n\t*[Symbol.iterator](): Iterator<E> {\n\t\tlet node = this._first;\n\t\twhile (node !== Node.Undefined) {\n\t\t\tyield node.element;\n\t\t\tnode = node.next;\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
