{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/common/scrollable.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, type Event } from \"./event.js\";\nimport { Disposable, type IDisposable } from \"./lifecycle.js\";\n\nexport enum ScrollbarVisibility {\n\tAuto = 1,\n\tHidden = 2,\n\tVisible = 3,\n}\n\nexport interface ScrollEvent {\n\tinSmoothScrolling: boolean;\n\n\toldWidth: number;\n\toldScrollWidth: number;\n\toldScrollLeft: number;\n\n\twidth: number;\n\tscrollWidth: number;\n\tscrollLeft: number;\n\n\toldHeight: number;\n\toldScrollHeight: number;\n\toldScrollTop: number;\n\n\theight: number;\n\tscrollHeight: number;\n\tscrollTop: number;\n\n\twidthChanged: boolean;\n\tscrollWidthChanged: boolean;\n\tscrollLeftChanged: boolean;\n\n\theightChanged: boolean;\n\tscrollHeightChanged: boolean;\n\tscrollTopChanged: boolean;\n}\n\nexport class ScrollState implements IScrollDimensions, IScrollPosition {\n\t_scrollStateBrand: void = undefined;\n\n\tpublic readonly rawScrollLeft: number;\n\tpublic readonly rawScrollTop: number;\n\n\tpublic readonly width: number;\n\tpublic readonly scrollWidth: number;\n\tpublic readonly scrollLeft: number;\n\tpublic readonly height: number;\n\tpublic readonly scrollHeight: number;\n\tpublic readonly scrollTop: number;\n\n\tconstructor(\n\t\tprivate readonly _forceIntegerValues: boolean,\n\t\twidth: number,\n\t\tscrollWidth: number,\n\t\tscrollLeft: number,\n\t\theight: number,\n\t\tscrollHeight: number,\n\t\tscrollTop: number,\n\t) {\n\t\tif (this._forceIntegerValues) {\n\t\t\twidth = width | 0;\n\t\t\tscrollWidth = scrollWidth | 0;\n\t\t\tscrollLeft = scrollLeft | 0;\n\t\t\theight = height | 0;\n\t\t\tscrollHeight = scrollHeight | 0;\n\t\t\tscrollTop = scrollTop | 0;\n\t\t}\n\n\t\tthis.rawScrollLeft = scrollLeft; // before validation\n\t\tthis.rawScrollTop = scrollTop; // before validation\n\n\t\tif (width < 0) {\n\t\t\twidth = 0;\n\t\t}\n\t\tif (scrollLeft + width > scrollWidth) {\n\t\t\tscrollLeft = scrollWidth - width;\n\t\t}\n\t\tif (scrollLeft < 0) {\n\t\t\tscrollLeft = 0;\n\t\t}\n\n\t\tif (height < 0) {\n\t\t\theight = 0;\n\t\t}\n\t\tif (scrollTop + height > scrollHeight) {\n\t\t\tscrollTop = scrollHeight - height;\n\t\t}\n\t\tif (scrollTop < 0) {\n\t\t\tscrollTop = 0;\n\t\t}\n\n\t\tthis.width = width;\n\t\tthis.scrollWidth = scrollWidth;\n\t\tthis.scrollLeft = scrollLeft;\n\t\tthis.height = height;\n\t\tthis.scrollHeight = scrollHeight;\n\t\tthis.scrollTop = scrollTop;\n\t}\n\n\tpublic equals(other: ScrollState): boolean {\n\t\treturn (\n\t\t\tthis.rawScrollLeft === other.rawScrollLeft &&\n\t\t\tthis.rawScrollTop === other.rawScrollTop &&\n\t\t\tthis.width === other.width &&\n\t\t\tthis.scrollWidth === other.scrollWidth &&\n\t\t\tthis.scrollLeft === other.scrollLeft &&\n\t\t\tthis.height === other.height &&\n\t\t\tthis.scrollHeight === other.scrollHeight &&\n\t\t\tthis.scrollTop === other.scrollTop\n\t\t);\n\t}\n\n\tpublic withScrollDimensions(\n\t\tupdate: INewScrollDimensions,\n\t\tuseRawScrollPositions: boolean,\n\t): ScrollState {\n\t\treturn new ScrollState(\n\t\t\tthis._forceIntegerValues,\n\t\t\ttypeof update.width !== \"undefined\" ? update.width : this.width,\n\t\t\ttypeof update.scrollWidth !== \"undefined\"\n\t\t\t\t? update.scrollWidth\n\t\t\t\t: this.scrollWidth,\n\t\t\tuseRawScrollPositions ? this.rawScrollLeft : this.scrollLeft,\n\t\t\ttypeof update.height !== \"undefined\" ? update.height : this.height,\n\t\t\ttypeof update.scrollHeight !== \"undefined\"\n\t\t\t\t? update.scrollHeight\n\t\t\t\t: this.scrollHeight,\n\t\t\tuseRawScrollPositions ? this.rawScrollTop : this.scrollTop,\n\t\t);\n\t}\n\n\tpublic withScrollPosition(update: INewScrollPosition): ScrollState {\n\t\treturn new ScrollState(\n\t\t\tthis._forceIntegerValues,\n\t\t\tthis.width,\n\t\t\tthis.scrollWidth,\n\t\t\ttypeof update.scrollLeft !== \"undefined\"\n\t\t\t\t? update.scrollLeft\n\t\t\t\t: this.rawScrollLeft,\n\t\t\tthis.height,\n\t\t\tthis.scrollHeight,\n\t\t\ttypeof update.scrollTop !== \"undefined\"\n\t\t\t\t? update.scrollTop\n\t\t\t\t: this.rawScrollTop,\n\t\t);\n\t}\n\n\tpublic createScrollEvent(\n\t\tprevious: ScrollState,\n\t\tinSmoothScrolling: boolean,\n\t): ScrollEvent {\n\t\tconst widthChanged = this.width !== previous.width;\n\t\tconst scrollWidthChanged = this.scrollWidth !== previous.scrollWidth;\n\t\tconst scrollLeftChanged = this.scrollLeft !== previous.scrollLeft;\n\n\t\tconst heightChanged = this.height !== previous.height;\n\t\tconst scrollHeightChanged = this.scrollHeight !== previous.scrollHeight;\n\t\tconst scrollTopChanged = this.scrollTop !== previous.scrollTop;\n\n\t\treturn {\n\t\t\tinSmoothScrolling: inSmoothScrolling,\n\t\t\toldWidth: previous.width,\n\t\t\toldScrollWidth: previous.scrollWidth,\n\t\t\toldScrollLeft: previous.scrollLeft,\n\n\t\t\twidth: this.width,\n\t\t\tscrollWidth: this.scrollWidth,\n\t\t\tscrollLeft: this.scrollLeft,\n\n\t\t\toldHeight: previous.height,\n\t\t\toldScrollHeight: previous.scrollHeight,\n\t\t\toldScrollTop: previous.scrollTop,\n\n\t\t\theight: this.height,\n\t\t\tscrollHeight: this.scrollHeight,\n\t\t\tscrollTop: this.scrollTop,\n\n\t\t\twidthChanged: widthChanged,\n\t\t\tscrollWidthChanged: scrollWidthChanged,\n\t\t\tscrollLeftChanged: scrollLeftChanged,\n\n\t\t\theightChanged: heightChanged,\n\t\t\tscrollHeightChanged: scrollHeightChanged,\n\t\t\tscrollTopChanged: scrollTopChanged,\n\t\t};\n\t}\n}\n\nexport interface IScrollDimensions {\n\treadonly width: number;\n\treadonly scrollWidth: number;\n\treadonly height: number;\n\treadonly scrollHeight: number;\n}\nexport interface INewScrollDimensions {\n\twidth?: number;\n\tscrollWidth?: number;\n\theight?: number;\n\tscrollHeight?: number;\n}\n\nexport interface IScrollPosition {\n\treadonly scrollLeft: number;\n\treadonly scrollTop: number;\n}\nexport interface ISmoothScrollPosition {\n\treadonly scrollLeft: number;\n\treadonly scrollTop: number;\n\n\treadonly width: number;\n\treadonly height: number;\n}\nexport interface INewScrollPosition {\n\tscrollLeft?: number;\n\tscrollTop?: number;\n}\n\nexport interface IScrollableOptions {\n\t/**\n\t * Define if the scroll values should always be integers.\n\t */\n\tforceIntegerValues: boolean;\n\t/**\n\t * Set the duration (ms) used for smooth scroll animations.\n\t */\n\tsmoothScrollDuration: number;\n\t/**\n\t * A function to schedule an update at the next frame (used for smooth scroll animations).\n\t */\n\tscheduleAtNextAnimationFrame: (callback: () => void) => IDisposable;\n}\n\nexport class Scrollable extends Disposable {\n\t_scrollableBrand: void = undefined;\n\n\tprivate _smoothScrollDuration: number;\n\tprivate readonly _scheduleAtNextAnimationFrame: (\n\t\tcallback: () => void,\n\t) => IDisposable;\n\tprivate _state: ScrollState;\n\tprivate _smoothScrolling: SmoothScrollingOperation | null;\n\n\tprivate _onScroll = this._register(new Emitter<ScrollEvent>());\n\tpublic readonly onScroll: Event<ScrollEvent> = this._onScroll.event;\n\n\tconstructor(options: IScrollableOptions) {\n\t\tsuper();\n\n\t\tthis._smoothScrollDuration = options.smoothScrollDuration;\n\t\tthis._scheduleAtNextAnimationFrame =\n\t\t\toptions.scheduleAtNextAnimationFrame;\n\t\tthis._state = new ScrollState(\n\t\t\toptions.forceIntegerValues,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t\t0,\n\t\t);\n\t\tthis._smoothScrolling = null;\n\t}\n\n\tpublic override dispose(): void {\n\t\tif (this._smoothScrolling) {\n\t\t\tthis._smoothScrolling.dispose();\n\t\t\tthis._smoothScrolling = null;\n\t\t}\n\t\tsuper.dispose();\n\t}\n\n\tpublic setSmoothScrollDuration(smoothScrollDuration: number): void {\n\t\tthis._smoothScrollDuration = smoothScrollDuration;\n\t}\n\n\tpublic validateScrollPosition(\n\t\tscrollPosition: INewScrollPosition,\n\t): IScrollPosition {\n\t\treturn this._state.withScrollPosition(scrollPosition);\n\t}\n\n\tpublic getScrollDimensions(): IScrollDimensions {\n\t\treturn this._state;\n\t}\n\n\tpublic setScrollDimensions(\n\t\tdimensions: INewScrollDimensions,\n\t\tuseRawScrollPositions: boolean,\n\t): void {\n\t\tconst newState = this._state.withScrollDimensions(\n\t\t\tdimensions,\n\t\t\tuseRawScrollPositions,\n\t\t);\n\t\tthis._setState(newState, Boolean(this._smoothScrolling));\n\n\t\t// Validate outstanding animated scroll position target\n\t\tthis._smoothScrolling?.acceptScrollDimensions(this._state);\n\t}\n\n\t/**\n\t * Returns the final scroll position that the instance will have once the smooth scroll animation concludes.\n\t * If no scroll animation is occurring, it will return the current scroll position instead.\n\t */\n\tpublic getFutureScrollPosition(): IScrollPosition {\n\t\tif (this._smoothScrolling) {\n\t\t\treturn this._smoothScrolling.to;\n\t\t}\n\t\treturn this._state;\n\t}\n\n\t/**\n\t * Returns the current scroll position.\n\t * Note: This result might be an intermediate scroll position, as there might be an ongoing smooth scroll animation.\n\t */\n\tpublic getCurrentScrollPosition(): IScrollPosition {\n\t\treturn this._state;\n\t}\n\n\tpublic setScrollPositionNow(update: INewScrollPosition): void {\n\t\t// no smooth scrolling requested\n\t\tconst newState = this._state.withScrollPosition(update);\n\n\t\t// Terminate any outstanding smooth scrolling\n\t\tif (this._smoothScrolling) {\n\t\t\tthis._smoothScrolling.dispose();\n\t\t\tthis._smoothScrolling = null;\n\t\t}\n\n\t\tthis._setState(newState, false);\n\t}\n\n\tpublic setScrollPositionSmooth(\n\t\tupdate: INewScrollPosition,\n\t\treuseAnimation?: boolean,\n\t): void {\n\t\tif (this._smoothScrollDuration === 0) {\n\t\t\t// Smooth scrolling not supported.\n\t\t\treturn this.setScrollPositionNow(update);\n\t\t}\n\n\t\tif (this._smoothScrolling) {\n\t\t\t// Combine our pending scrollLeft/scrollTop with incoming scrollLeft/scrollTop\n\t\t\tupdate = {\n\t\t\t\tscrollLeft:\n\t\t\t\t\ttypeof update.scrollLeft === \"undefined\"\n\t\t\t\t\t\t? this._smoothScrolling.to.scrollLeft\n\t\t\t\t\t\t: update.scrollLeft,\n\t\t\t\tscrollTop:\n\t\t\t\t\ttypeof update.scrollTop === \"undefined\"\n\t\t\t\t\t\t? this._smoothScrolling.to.scrollTop\n\t\t\t\t\t\t: update.scrollTop,\n\t\t\t};\n\n\t\t\t// Validate `update`\n\t\t\tconst validTarget = this._state.withScrollPosition(update);\n\n\t\t\tif (\n\t\t\t\tthis._smoothScrolling.to.scrollLeft ===\n\t\t\t\t\tvalidTarget.scrollLeft &&\n\t\t\t\tthis._smoothScrolling.to.scrollTop === validTarget.scrollTop\n\t\t\t) {\n\t\t\t\t// No need to interrupt or extend the current animation since we're going to the same place\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet newSmoothScrolling: SmoothScrollingOperation;\n\t\t\tif (reuseAnimation) {\n\t\t\t\tnewSmoothScrolling = new SmoothScrollingOperation(\n\t\t\t\t\tthis._smoothScrolling.from,\n\t\t\t\t\tvalidTarget,\n\t\t\t\t\tthis._smoothScrolling.startTime,\n\t\t\t\t\tthis._smoothScrolling.duration,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tnewSmoothScrolling = this._smoothScrolling.combine(\n\t\t\t\t\tthis._state,\n\t\t\t\t\tvalidTarget,\n\t\t\t\t\tthis._smoothScrollDuration,\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis._smoothScrolling.dispose();\n\t\t\tthis._smoothScrolling = newSmoothScrolling;\n\t\t} else {\n\t\t\t// Validate `update`\n\t\t\tconst validTarget = this._state.withScrollPosition(update);\n\n\t\t\tthis._smoothScrolling = SmoothScrollingOperation.start(\n\t\t\t\tthis._state,\n\t\t\t\tvalidTarget,\n\t\t\t\tthis._smoothScrollDuration,\n\t\t\t);\n\t\t}\n\n\t\t// Begin smooth scrolling animation\n\t\tthis._smoothScrolling.animationFrameDisposable =\n\t\t\tthis._scheduleAtNextAnimationFrame(() => {\n\t\t\t\tif (!this._smoothScrolling) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._smoothScrolling.animationFrameDisposable = null;\n\t\t\t\tthis._performSmoothScrolling();\n\t\t\t});\n\t}\n\n\tpublic hasPendingScrollAnimation(): boolean {\n\t\treturn Boolean(this._smoothScrolling);\n\t}\n\n\tprivate _performSmoothScrolling(): void {\n\t\tif (!this._smoothScrolling) {\n\t\t\treturn;\n\t\t}\n\t\tconst update = this._smoothScrolling.tick();\n\t\tconst newState = this._state.withScrollPosition(update);\n\n\t\tthis._setState(newState, true);\n\n\t\tif (!this._smoothScrolling) {\n\t\t\t// Looks like someone canceled the smooth scrolling\n\t\t\t// from the scroll event handler\n\t\t\treturn;\n\t\t}\n\n\t\tif (update.isDone) {\n\t\t\tthis._smoothScrolling.dispose();\n\t\t\tthis._smoothScrolling = null;\n\t\t\treturn;\n\t\t}\n\n\t\t// Continue smooth scrolling animation\n\t\tthis._smoothScrolling.animationFrameDisposable =\n\t\t\tthis._scheduleAtNextAnimationFrame(() => {\n\t\t\t\tif (!this._smoothScrolling) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._smoothScrolling.animationFrameDisposable = null;\n\t\t\t\tthis._performSmoothScrolling();\n\t\t\t});\n\t}\n\n\tprivate _setState(newState: ScrollState, inSmoothScrolling: boolean): void {\n\t\tconst oldState = this._state;\n\t\tif (oldState.equals(newState)) {\n\t\t\t// no change\n\t\t\treturn;\n\t\t}\n\t\tthis._state = newState;\n\t\tthis._onScroll.fire(\n\t\t\tthis._state.createScrollEvent(oldState, inSmoothScrolling),\n\t\t);\n\t}\n}\n\nexport class SmoothScrollingUpdate {\n\tpublic readonly scrollLeft: number;\n\tpublic readonly scrollTop: number;\n\tpublic readonly isDone: boolean;\n\n\tconstructor(scrollLeft: number, scrollTop: number, isDone: boolean) {\n\t\tthis.scrollLeft = scrollLeft;\n\t\tthis.scrollTop = scrollTop;\n\t\tthis.isDone = isDone;\n\t}\n}\n\ninterface IAnimation {\n\t(completion: number): number;\n}\n\nfunction createEaseOutCubic(from: number, to: number): IAnimation {\n\tconst delta = to - from;\n\treturn (completion: number): number =>\n\t\tfrom + delta * easeOutCubic(completion);\n}\n\nfunction createComposed(a: IAnimation, b: IAnimation, cut: number): IAnimation {\n\treturn (completion: number): number => {\n\t\tif (completion < cut) {\n\t\t\treturn a(completion / cut);\n\t\t}\n\t\treturn b((completion - cut) / (1 - cut));\n\t};\n}\n\nexport class SmoothScrollingOperation {\n\tpublic readonly from: ISmoothScrollPosition;\n\tpublic to: ISmoothScrollPosition;\n\tpublic readonly duration: number;\n\tpublic readonly startTime: number;\n\tpublic animationFrameDisposable: IDisposable | null;\n\n\tprivate scrollLeft!: IAnimation;\n\tprivate scrollTop!: IAnimation;\n\n\tconstructor(\n\t\tfrom: ISmoothScrollPosition,\n\t\tto: ISmoothScrollPosition,\n\t\tstartTime: number,\n\t\tduration: number,\n\t) {\n\t\tthis.from = from;\n\t\tthis.to = to;\n\t\tthis.duration = duration;\n\t\tthis.startTime = startTime;\n\n\t\tthis.animationFrameDisposable = null;\n\n\t\tthis._initAnimations();\n\t}\n\n\tprivate _initAnimations(): void {\n\t\tthis.scrollLeft = this._initAnimation(\n\t\t\tthis.from.scrollLeft,\n\t\t\tthis.to.scrollLeft,\n\t\t\tthis.to.width,\n\t\t);\n\t\tthis.scrollTop = this._initAnimation(\n\t\t\tthis.from.scrollTop,\n\t\t\tthis.to.scrollTop,\n\t\t\tthis.to.height,\n\t\t);\n\t}\n\n\tprivate _initAnimation(\n\t\tfrom: number,\n\t\tto: number,\n\t\tviewportSize: number,\n\t): IAnimation {\n\t\tconst delta = Math.abs(from - to);\n\t\tif (delta > 2.5 * viewportSize) {\n\t\t\tlet stop1: number, stop2: number;\n\t\t\tif (from < to) {\n\t\t\t\t// scroll to 75% of the viewportSize\n\t\t\t\tstop1 = from + 0.75 * viewportSize;\n\t\t\t\tstop2 = to - 0.75 * viewportSize;\n\t\t\t} else {\n\t\t\t\tstop1 = from - 0.75 * viewportSize;\n\t\t\t\tstop2 = to + 0.75 * viewportSize;\n\t\t\t}\n\t\t\treturn createComposed(\n\t\t\t\tcreateEaseOutCubic(from, stop1),\n\t\t\t\tcreateEaseOutCubic(stop2, to),\n\t\t\t\t0.33,\n\t\t\t);\n\t\t}\n\t\treturn createEaseOutCubic(from, to);\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.animationFrameDisposable !== null) {\n\t\t\tthis.animationFrameDisposable.dispose();\n\t\t\tthis.animationFrameDisposable = null;\n\t\t}\n\t}\n\n\tpublic acceptScrollDimensions(state: ScrollState): void {\n\t\tthis.to = state.withScrollPosition(this.to);\n\t\tthis._initAnimations();\n\t}\n\n\tpublic tick(): SmoothScrollingUpdate {\n\t\treturn this._tick(Date.now());\n\t}\n\n\tprotected _tick(now: number): SmoothScrollingUpdate {\n\t\tconst completion = (now - this.startTime) / this.duration;\n\n\t\tif (completion < 1) {\n\t\t\tconst newScrollLeft = this.scrollLeft(completion);\n\t\t\tconst newScrollTop = this.scrollTop(completion);\n\t\t\treturn new SmoothScrollingUpdate(\n\t\t\t\tnewScrollLeft,\n\t\t\t\tnewScrollTop,\n\t\t\t\tfalse,\n\t\t\t);\n\t\t}\n\n\t\treturn new SmoothScrollingUpdate(\n\t\t\tthis.to.scrollLeft,\n\t\t\tthis.to.scrollTop,\n\t\t\ttrue,\n\t\t);\n\t}\n\n\tpublic combine(\n\t\tfrom: ISmoothScrollPosition,\n\t\tto: ISmoothScrollPosition,\n\t\tduration: number,\n\t): SmoothScrollingOperation {\n\t\treturn SmoothScrollingOperation.start(from, to, duration);\n\t}\n\n\tpublic static start(\n\t\tfrom: ISmoothScrollPosition,\n\t\tto: ISmoothScrollPosition,\n\t\tduration: number,\n\t): SmoothScrollingOperation {\n\t\t// +10 / -10 : pretend the animation already started for a quicker response to a scroll request\n\t\tduration = duration + 10;\n\t\tconst startTime = Date.now() - 10;\n\n\t\treturn new SmoothScrollingOperation(from, to, startTime, duration);\n\t}\n}\n\nfunction easeInCubic(t: number) {\n\treturn Math.pow(t, 3);\n}\n\nfunction easeOutCubic(t: number) {\n\treturn 1 - easeInCubic(1 - t);\n}\n"],
  "mappings": "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",
  "names": ["ScrollbarVisibility"]
}
