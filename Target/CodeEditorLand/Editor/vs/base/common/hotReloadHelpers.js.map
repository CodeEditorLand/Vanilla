{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/common/hotReloadHelpers.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isHotReloadEnabled, registerHotReloadHandler } from './hotReload.js';\nimport { IReader, observableSignalFromEvent } from './observable.js';\n\nexport function readHotReloadableExport<T>(value: T, reader: IReader | undefined): T {\n\tobserveHotReloadableExports([value], reader);\n\treturn value;\n}\n\nexport function observeHotReloadableExports(values: any[], reader: IReader | undefined): void {\n\tif (isHotReloadEnabled()) {\n\t\tconst o = observableSignalFromEvent(\n\t\t\t'reload',\n\t\t\tevent => registerHotReloadHandler(({ oldExports }) => {\n\t\t\t\tif (![...Object.values(oldExports)].some(v => values.includes(v))) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\treturn (_newExports) => {\n\t\t\t\t\tevent(undefined);\n\t\t\t\t\treturn true;\n\t\t\t\t};\n\t\t\t})\n\t\t);\n\t\to.read(reader);\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,oBAAoB,gCAAgC;AAC7D,SAAS,SAAS,iCAAiC;AAE5C,SAAS,wBAA2B,OAAU,QAAgC;AACpF,8BAA4B,CAAC,KAAK,GAAG,MAAM;AAC3C,SAAO;AACR;AAHgB;AAKT,SAAS,4BAA4B,QAAe,QAAmC;AAC7F,MAAI,mBAAmB,GAAG;AACzB,UAAM,IAAI;AAAA,MACT;AAAA,MACA,WAAS,yBAAyB,CAAC,EAAE,WAAW,MAAM;AACrD,YAAI,CAAC,CAAC,GAAG,OAAO,OAAO,UAAU,CAAC,EAAE,KAAK,OAAK,OAAO,SAAS,CAAC,CAAC,GAAG;AAClE,iBAAO;AAAA,QACR;AACA,eAAO,CAAC,gBAAgB;AACvB,gBAAM,MAAS;AACf,iBAAO;AAAA,QACR;AAAA,MACD,CAAC;AAAA,IACF;AACA,MAAE,KAAK,MAAM;AAAA,EACd;AACD;AAhBgB;",
  "names": []
}
