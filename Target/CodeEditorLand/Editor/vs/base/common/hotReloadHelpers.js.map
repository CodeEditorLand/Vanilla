{
  "version": 3,
  "sources": ["../../../../../../Dependency/CodeEditorLand/Editor/Source/vs/base/common/hotReloadHelpers.ts"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isHotReloadEnabled, registerHotReloadHandler } from \"./hotReload.js\";\nimport { type IReader, observableSignalFromEvent } from \"./observable.js\";\n\nexport function readHotReloadableExport<T>(\n\tvalue: T,\n\treader: IReader | undefined,\n): T {\n\tobserveHotReloadableExports([value], reader);\n\treturn value;\n}\n\nexport function observeHotReloadableExports(\n\tvalues: any[],\n\treader: IReader | undefined,\n): void {\n\tif (isHotReloadEnabled()) {\n\t\tconst o = observableSignalFromEvent(\"reload\", (event) =>\n\t\t\tregisterHotReloadHandler(({ oldExports }) => {\n\t\t\t\tif (\n\t\t\t\t\t![...Object.values(oldExports)].some((v) =>\n\t\t\t\t\t\tvalues.includes(v),\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\treturn (_newExports) => {\n\t\t\t\t\tevent(undefined);\n\t\t\t\t\treturn true;\n\t\t\t\t};\n\t\t\t}),\n\t\t);\n\t\to.read(reader);\n\t}\n}\n"],
  "mappings": ";;AAKA,SAAS,oBAAoB,gCAAgC;AAC7D,SAAuB,iCAAiC;AAEjD,SAAS,wBACf,OACA,QACI;AACJ,8BAA4B,CAAC,KAAK,GAAG,MAAM;AAC3C,SAAO;AACR;AANgB;AAQT,SAAS,4BACf,QACA,QACO;AACP,MAAI,mBAAmB,GAAG;AACzB,UAAM,IAAI;AAAA,MAA0B;AAAA,MAAU,CAAC,UAC9C,yBAAyB,CAAC,EAAE,WAAW,MAAM;AAC5C,YACC,CAAC,CAAC,GAAG,OAAO,OAAO,UAAU,CAAC,EAAE;AAAA,UAAK,CAAC,MACrC,OAAO,SAAS,CAAC;AAAA,QAClB,GACC;AACD,iBAAO;AAAA,QACR;AACA,eAAO,CAAC,gBAAgB;AACvB,gBAAM,MAAS;AACf,iBAAO;AAAA,QACR;AAAA,MACD,CAAC;AAAA,IACF;AACA,MAAE,KAAK,MAAM;AAAA,EACd;AACD;AAtBgB;",
  "names": []
}
