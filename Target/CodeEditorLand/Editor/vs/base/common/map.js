import"./uri.js";function m(s,e,t){let r=s.get(e);return r===void 0&&(r=t,s.set(e,r)),r}function _(s){const e=[];return s.forEach((t,r)=>{e.push(`${r} => ${t}`)}),`Map(${s.size}) {${e.join(", ")}}`}function v(s){const e=[];return s.forEach(t=>{e.push(t)}),`Set(${s.size}) {${e.join(", ")}}`}class h{constructor(e,t){this.uri=e;this.value=t}}function d(s){return Array.isArray(s)}class n{static defaultToKey=e=>e.toString();[Symbol.toStringTag]="ResourceMap";map;toKey;constructor(e,t){if(e instanceof n)this.map=new Map(e.map),this.toKey=t??n.defaultToKey;else if(d(e)){this.map=new Map,this.toKey=t??n.defaultToKey;for(const[r,i]of e)this.set(r,i)}else this.map=new Map,this.toKey=e??n.defaultToKey}set(e,t){return this.map.set(this.toKey(e),new h(e,t)),this}get(e){return this.map.get(this.toKey(e))?.value}has(e){return this.map.has(this.toKey(e))}get size(){return this.map.size}clear(){this.map.clear()}delete(e){return this.map.delete(this.toKey(e))}forEach(e,t){typeof t<"u"&&(e=e.bind(t));for(const[r,i]of this.map)e(i.value,i.uri,this)}*values(){for(const e of this.map.values())yield e.value}*keys(){for(const e of this.map.values())yield e.uri}*entries(){for(const e of this.map.values())yield[e.uri,e.value]}*[Symbol.iterator](){for(const[,e]of this.map)yield[e.uri,e.value]}}class I{[Symbol.toStringTag]="ResourceSet";_map;constructor(e,t){!e||typeof e=="function"?this._map=new n(e):(this._map=new n(t),e.forEach(this.add,this))}get size(){return this._map.size}add(e){return this._map.set(e,e),this}clear(){this._map.clear()}delete(e){return this._map.delete(e)}forEach(e,t){this._map.forEach((r,i)=>e.call(t,i,i,this))}has(e){return this._map.has(e)}entries(){return this._map.entries()}keys(){return this._map.keys()}values(){return this._map.keys()}[Symbol.iterator](){return this.keys()}}var l=(r=>(r[r.None=0]="None",r[r.AsOld=1]="AsOld",r[r.AsNew=2]="AsNew",r))(l||{});class p{[Symbol.toStringTag]="LinkedMap";_map;_head;_tail;_size;_state;constructor(){this._map=new Map,this._head=void 0,this._tail=void 0,this._size=0,this._state=0}clear(){this._map.clear(),this._head=void 0,this._tail=void 0,this._size=0,this._state++}isEmpty(){return!this._head&&!this._tail}get size(){return this._size}get first(){return this._head?.value}get last(){return this._tail?.value}has(e){return this._map.has(e)}get(e,t=0){const r=this._map.get(e);if(r)return t!==0&&this.touch(r,t),r.value}set(e,t,r=0){let i=this._map.get(e);if(i)i.value=t,r!==0&&this.touch(i,r);else{switch(i={key:e,value:t,next:void 0,previous:void 0},r){case 0:this.addItemLast(i);break;case 1:this.addItemFirst(i);break;case 2:this.addItemLast(i);break;default:this.addItemLast(i);break}this._map.set(e,i),this._size++}return this}delete(e){return!!this.remove(e)}remove(e){const t=this._map.get(e);if(t)return this._map.delete(e),this.removeItem(t),this._size--,t.value}shift(){if(!this._head&&!this._tail)return;if(!this._head||!this._tail)throw new Error("Invalid list");const e=this._head;return this._map.delete(e.key),this.removeItem(e),this._size--,e.value}forEach(e,t){const r=this._state;let i=this._head;for(;i;){if(t?e.bind(t)(i.value,i.key,this):e(i.value,i.key,this),this._state!==r)throw new Error("LinkedMap got modified during iteration.");i=i.next}}keys(){const e=this,t=this._state;let r=this._head;const i={[Symbol.iterator](){return i},next(){if(e._state!==t)throw new Error("LinkedMap got modified during iteration.");if(r){const a={value:r.key,done:!1};return r=r.next,a}else return{value:void 0,done:!0}}};return i}values(){const e=this,t=this._state;let r=this._head;const i={[Symbol.iterator](){return i},next(){if(e._state!==t)throw new Error("LinkedMap got modified during iteration.");if(r){const a={value:r.value,done:!1};return r=r.next,a}else return{value:void 0,done:!0}}};return i}entries(){const e=this,t=this._state;let r=this._head;const i={[Symbol.iterator](){return i},next(){if(e._state!==t)throw new Error("LinkedMap got modified during iteration.");if(r){const a={value:[r.key,r.value],done:!1};return r=r.next,a}else return{value:void 0,done:!0}}};return i}[Symbol.iterator](){return this.entries()}trimOld(e){if(e>=this.size)return;if(e===0){this.clear();return}let t=this._head,r=this.size;for(;t&&r>e;)this._map.delete(t.key),t=t.next,r--;this._head=t,this._size=r,t&&(t.previous=void 0),this._state++}trimNew(e){if(e>=this.size)return;if(e===0){this.clear();return}let t=this._tail,r=this.size;for(;t&&r>e;)this._map.delete(t.key),t=t.previous,r--;this._tail=t,this._size=r,t&&(t.next=void 0),this._state++}addItemFirst(e){if(!this._head&&!this._tail)this._tail=e;else if(this._head)e.next=this._head,this._head.previous=e;else throw new Error("Invalid list");this._head=e,this._state++}addItemLast(e){if(!this._head&&!this._tail)this._head=e;else if(this._tail)e.previous=this._tail,this._tail.next=e;else throw new Error("Invalid list");this._tail=e,this._state++}removeItem(e){if(e===this._head&&e===this._tail)this._head=void 0,this._tail=void 0;else if(e===this._head){if(!e.next)throw new Error("Invalid list");e.next.previous=void 0,this._head=e.next}else if(e===this._tail){if(!e.previous)throw new Error("Invalid list");e.previous.next=void 0,this._tail=e.previous}else{const t=e.next,r=e.previous;if(!t||!r)throw new Error("Invalid list");t.previous=r,r.next=t}e.next=void 0,e.previous=void 0,this._state++}touch(e,t){if(!this._head||!this._tail)throw new Error("Invalid list");if(!(t!==1&&t!==2)){if(t===1){if(e===this._head)return;const r=e.next,i=e.previous;e===this._tail?(i.next=void 0,this._tail=i):(r.previous=i,i.next=r),e.previous=void 0,e.next=this._head,this._head.previous=e,this._head=e,this._state++}else if(t===2){if(e===this._tail)return;const r=e.next,i=e.previous;e===this._head?(r.previous=void 0,this._head=r):(r.previous=i,i.next=r),e.next=void 0,e.previous=this._tail,this._tail.next=e,this._tail=e,this._state++}}}toJSON(){const e=[];return this.forEach((t,r)=>{e.push([r,t])}),e}fromJSON(e){this.clear();for(const[t,r]of e)this.set(t,r)}}class o extends p{_limit;_ratio;constructor(e,t=1){super(),this._limit=e,this._ratio=Math.min(Math.max(0,t),1)}get limit(){return this._limit}set limit(e){this._limit=e,this.checkTrim()}get ratio(){return this._ratio}set ratio(e){this._ratio=Math.min(Math.max(0,e),1),this.checkTrim()}get(e,t=2){return super.get(e,t)}peek(e){return super.get(e,0)}set(e,t){return super.set(e,t,2),this}checkTrim(){this.size>this._limit&&this.trim(Math.round(this._limit*this._ratio))}}class y extends o{constructor(e,t=1){super(e,t)}trim(e){this.trimOld(e)}set(e,t){return super.set(e,t),this.checkTrim(),this}}class K extends o{constructor(e,t=1){super(e,t)}trim(e){this.trimNew(e)}set(e,t){return this._limit<=this.size&&!this.has(e)&&this.trim(Math.round(this._limit*this._ratio)-1),super.set(e,t),this}}class T{map=new Map;add(e){return this.map.set(e,(this.map.get(e)||0)+1),this}delete(e){let t=this.map.get(e)||0;return t===0?!1:(t--,t===0?this.map.delete(e):this.map.set(e,t),!0)}has(e){return this.map.has(e)}}class b{_m1=new Map;_m2=new Map;constructor(e){if(e)for(const[t,r]of e)this.set(t,r)}clear(){this._m1.clear(),this._m2.clear()}set(e,t){this._m1.set(e,t),this._m2.set(t,e)}get(e){return this._m1.get(e)}getKey(e){return this._m2.get(e)}delete(e){const t=this._m1.get(e);return t===void 0?!1:(this._m1.delete(e),this._m2.delete(t),!0)}forEach(e,t){this._m1.forEach((r,i)=>{e.call(t,r,i,this)})}keys(){return this._m1.keys()}values(){return this._m1.values()}}class V{map=new Map;add(e,t){let r=this.map.get(e);r||(r=new Set,this.map.set(e,r)),r.add(t)}delete(e,t){const r=this.map.get(e);r&&(r.delete(t),r.size===0&&this.map.delete(e))}forEach(e,t){const r=this.map.get(e);r&&r.forEach(t)}get(e){const t=this.map.get(e);return t||new Set}}function g(s,e){if(s===e)return!0;if(s.size!==e.size)return!1;for(const[t,r]of s)if(!e.has(t)||e.get(t)!==r)return!1;for(const[t]of e)if(!s.has(t))return!1;return!0}class u{_data={};set(e,t,r){this._data[e]||(this._data[e]={}),this._data[e][t]=r}get(e,t){return this._data[e]?.[t]}clear(){this._data={}}*values(){for(const e in this._data)for(const t in this._data[e]){const r=this._data[e][t];r&&(yield r)}}}class R{_data=new u;set(e,t,r,i,a){this._data.get(e,t)||this._data.set(e,t,new u),this._data.get(e,t).set(r,i,a)}get(e,t,r,i){return this._data.get(e,t)?.get(r,i)}clear(){this._data.clear()}}export{b as BidirectionalMap,T as CounterSet,R as FourKeyMap,y as LRUCache,p as LinkedMap,K as MRUCache,n as ResourceMap,I as ResourceSet,V as SetMap,l as Touch,u as TwoKeyMap,m as getOrSet,_ as mapToString,g as mapsStrictEqualIgnoreOrder,v as setToString};
