import{URI as a}from"./uri.js";function l(e){const n=e;return n&&typeof n.type=="string"&&typeof n.severity=="string"}function u(e){const n=[];let r;try{const t=JSON.parse(e.arguments),s=t[t.length-1];s&&s.__$stack&&(t.pop(),r=s.__$stack),n.push(...t)}catch{n.push("Unable to log remote console arguments",e.arguments)}return{args:n,stack:r}}function f(e){if(typeof e!="string")return f(u(e).stack);const n=e;if(n){const r=g(n),t=/at [^\/]*((?:(?:[a-zA-Z]+:)|(?:[\/])|(?:\\\\))(?:.+)):(\d+):(\d+)/.exec(r||"");if(t&&t.length===4)return{uri:a.file(t[1]),line:Number(t[2]),column:Number(t[3])}}}function g(e){if(!e)return e;const n=e.indexOf(`
`);return n===-1?e:e.substring(0,n)}function p(e,n){const{args:r,stack:t}=u(e),s=typeof r[0]=="string"&&r.length===1;let o=g(t);o&&(o=`(${o.trim()})`);let c=[];if(typeof r[0]=="string"?o&&s?c=[`%c[${n}] %c${r[0]} %c${o}`,i("blue"),i(""),i("grey")]:c=[`%c[${n}] %c${r[0]}`,i("blue"),i(""),...r.slice(1)]:c=[`%c[${n}]%`,i("blue"),...r],o&&!s&&c.push(o),typeof console[e.severity]!="function")throw new Error("Unknown console method");console[e.severity].apply(console,c)}function i(e){return`color: ${e}`}export{f as getFirstFrame,l as isRemoteConsoleLog,p as log,u as parse};
