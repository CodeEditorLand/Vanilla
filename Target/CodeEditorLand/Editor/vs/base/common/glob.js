import{equals as W}from"./arrays.js";import{isThenable as S}from"./async.js";import{CharCode as I}from"./charCode.js";import{isEqualOrParent as _}from"./extpath.js";import{LRUCache as q}from"./map.js";import{basename as F,extname as j,posix as w,sep as b}from"./path.js";import{isLinux as H}from"./platform.js";import{escapeRegExpCharacters as R,ltrim as N}from"./strings.js";function fe(){return Object.create(null)}const h="**",$="/",x="[/\\\\]",E="[^/\\\\]",V=/\//g;function v(t,n){switch(t){case 0:return"";case 1:return`${E}*?`;default:return`(?:${x}|${E}+${x}${n?`|${x}${E}+`:""})*?`}}function O(t,n){if(!t)return[];const e=[];let i=!1,s=!1,l="";for(const g of t){switch(g){case n:if(!i&&!s){e.push(l),l="";continue}break;case"{":i=!0;break;case"}":i=!1;break;case"[":s=!0;break;case"]":s=!1;break}l+=g}return l&&e.push(l),e}function G(t){if(!t)return"";let n="";const e=O(t,$);if(e.every(i=>i===h))n=".*";else{let i=!1;e.forEach((s,l)=>{if(s===h){if(i)return;n+=v(2,l===e.length-1)}else{let g=!1,r="",a=!1,u="";for(const o of s){if(o!=="}"&&g){r+=o;continue}if(a&&(o!=="]"||!u)){let c;o==="-"?c=o:(o==="^"||o==="!")&&!u?c="^":o===$?c="":c=R(o),u+=c;continue}switch(o){case"{":g=!0;continue;case"[":a=!0;continue;case"}":{const f=`(?:${O(r,",").map(P=>G(P)).join("|")})`;n+=f,g=!1,r="";break}case"]":{n+="["+u+"]",a=!1,u="";break}case"?":n+=E;continue;case"*":n+=v(1);continue;default:n+=R(o)}}l<e.length-1&&(e[l+1]!==h||l+2<e.length)&&(n+=x)}i=s===h})}return n}const U=/^\*\*\/\*\.[\w.-]+$/,X=/^\*\*\/([\w.-]+)\/?$/,D=/^{\*\*\/\*?[\w.-]+\/?(,\*\*\/\*?[\w.-]+\/?)*}$/,K=/^{\*\*\/\*?[\w.-]+(\/(\*\*)?)?(,\*\*\/\*?[\w.-]+(\/(\*\*)?)?)*}$/,M=/^\*\*((\/[\w.-]+)+)\/?$/,z=/^([\w.-]+(\/[\w.-]+)*)\/?$/,A=new q(1e4),k=()=>!1,p=()=>null;function y(t,n){if(!t)return p;let e;typeof t!="string"?e=t.pattern:e=t,e=e.trim();const i=`${e}_${!!n.trimForExclusions}`;let s=A.get(i);if(s)return T(s,t);let l;return U.test(e)?s=J(e.substr(4),e):(l=X.exec(B(e,n)))?s=Q(l[1],e):(n.trimForExclusions?K:D).test(e)?s=Y(e,n):(l=M.exec(B(e,n)))?s=L(l[1].substr(1),e,!0):(l=z.exec(B(e,n)))?s=L(l[1],e,!1):s=Z(e),A.set(i,s),T(s,t)}function T(t,n){if(typeof n=="string")return t;const e=(i,s)=>_(i,n.base,!H)?t(N(i.substr(n.base.length),b),s):null;return e.allBasenames=t.allBasenames,e.allPaths=t.allPaths,e.basenames=t.basenames,e.patterns=t.patterns,e}function B(t,n){return n.trimForExclusions&&t.endsWith("/**")?t.substr(0,t.length-2):t}function J(t,n){return(e,i)=>typeof e=="string"&&e.endsWith(t)?n:null}function Q(t,n){const e=`/${t}`,i=`\\${t}`,s=(g,r)=>typeof g!="string"?null:r?r===t?n:null:g===t||g.endsWith(e)||g.endsWith(i)?n:null,l=[t];return s.basenames=l,s.patterns=[n],s.allBasenames=l,s}function Y(t,n){const e=C(t.slice(1,-1).split(",").map(r=>y(r,n)).filter(r=>r!==p),t),i=e.length;if(!i)return p;if(i===1)return e[0];const s=(r,a)=>{for(let u=0,o=e.length;u<o;u++)if(e[u](r,a))return t;return null},l=e.find(r=>!!r.allBasenames);l&&(s.allBasenames=l.allBasenames);const g=e.reduce((r,a)=>a.allPaths?r.concat(a.allPaths):r,[]);return g.length&&(s.allPaths=g),s}function L(t,n,e){const i=b===w.sep,s=i?t:t.replace(V,b),l=b+s,g=w.sep+t;let r;return e?r=(a,u)=>typeof a=="string"&&(a===s||a.endsWith(l)||!i&&(a===t||a.endsWith(g)))?n:null:r=(a,u)=>typeof a=="string"&&(a===s||!i&&a===t)?n:null,r.allPaths=[(e?"*/":"./")+t],r}function Z(t){try{const n=new RegExp(`^${G(t)}$`);return e=>(n.lastIndex=0,typeof e=="string"&&n.test(e)?t:null)}catch{return p}}function Pe(t,n,e){return!t||typeof n!="string"?!1:ee(t)(n,void 0,e)}function ee(t,n={}){if(!t)return k;if(typeof t=="string"||te(t)){const e=y(t,n);if(e===p)return k;const i=(s,l)=>!!e(s,l);return e.allBasenames&&(i.allBasenames=e.allBasenames),e.allPaths&&(i.allPaths=e.allPaths),i}return ne(t,n)}function te(t){const n=t;return n?typeof n.base=="string"&&typeof n.pattern=="string":!1}function pe(t){return t.allBasenames||[]}function me(t){return t.allPaths||[]}function ne(t,n){const e=C(Object.getOwnPropertyNames(t).map(r=>re(r,t[r],n)).filter(r=>r!==p)),i=e.length;if(!i)return p;if(!e.some(r=>!!r.requiresSiblings)){if(i===1)return e[0];const r=(o,c)=>{let f;for(let P=0,d=e.length;P<d;P++){const m=e[P](o,c);if(typeof m=="string")return m;S(m)&&(f||(f=[]),f.push(m))}return f?(async()=>{for(const P of f){const d=await P;if(typeof d=="string")return d}return null})():null},a=e.find(o=>!!o.allBasenames);a&&(r.allBasenames=a.allBasenames);const u=e.reduce((o,c)=>c.allPaths?o.concat(c.allPaths):o,[]);return u.length&&(r.allPaths=u),r}const s=(r,a,u)=>{let o,c;for(let f=0,P=e.length;f<P;f++){const d=e[f];d.requiresSiblings&&u&&(a||(a=F(r)),o||(o=a.substr(0,a.length-j(r).length)));const m=d(r,a,o,u);if(typeof m=="string")return m;S(m)&&(c||(c=[]),c.push(m))}return c?(async()=>{for(const f of c){const P=await f;if(typeof P=="string")return P}return null})():null},l=e.find(r=>!!r.allBasenames);l&&(s.allBasenames=l.allBasenames);const g=e.reduce((r,a)=>a.allPaths?r.concat(a.allPaths):r,[]);return g.length&&(s.allPaths=g),s}function re(t,n,e){if(n===!1)return p;const i=y(t,e);if(i===p)return p;if(typeof n=="boolean")return i;if(n){const s=n.when;if(typeof s=="string"){const l=(g,r,a,u)=>{if(!u||!i(g,r))return null;const o=s.replace("$(basename)",()=>a),c=u(o);return S(c)?c.then(f=>f?t:null):c?t:null};return l.requiresSiblings=!0,l}}return i}function C(t,n){const e=t.filter(r=>!!r.basenames);if(e.length<2)return t;const i=e.reduce((r,a)=>{const u=a.basenames;return u?r.concat(u):r},[]);let s;if(n){s=[];for(let r=0,a=i.length;r<a;r++)s.push(n)}else s=e.reduce((r,a)=>{const u=a.patterns;return u?r.concat(u):r},[]);const l=(r,a)=>{if(typeof r!="string")return null;if(!a){let o;for(o=r.length;o>0;o--){const c=r.charCodeAt(o-1);if(c===I.Slash||c===I.Backslash)break}a=r.substr(o)}const u=i.indexOf(a);return u!==-1?s[u]:null};l.basenames=i,l.patterns=s,l.allBasenames=i;const g=t.filter(r=>!r.basenames);return g.push(l),g}function de(t,n){return W(t,n,(e,i)=>typeof e=="string"&&typeof i=="string"?e===i:typeof e!="string"&&typeof i!="string"?e.base===i.base&&e.pattern===i.pattern:!1)}export{h as GLOBSTAR,$ as GLOB_SPLIT,pe as getBasenameTerms,fe as getEmptyExpression,me as getPathTerms,te as isRelativePattern,Pe as match,ee as parse,de as patternsEquals,O as splitGlobAware};
