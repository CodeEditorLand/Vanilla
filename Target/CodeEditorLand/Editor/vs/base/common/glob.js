import{equals as W}from"../../../vs/base/common/arrays.js";import{isThenable as S}from"../../../vs/base/common/async.js";import{CharCode as I}from"../../../vs/base/common/charCode.js";import{isEqualOrParent as _}from"../../../vs/base/common/extpath.js";import{LRUCache as q}from"../../../vs/base/common/map.js";import{basename as F,extname as j,posix as w,sep as b}from"../../../vs/base/common/path.js";import{isLinux as H}from"../../../vs/base/common/platform.js";import{escapeRegExpCharacters as R,ltrim as N}from"../../../vs/base/common/strings.js";function ge(){return Object.create(null)}const h="**",$="/",x="[/\\\\]",E="[^/\\\\]",V=/\//g;function v(n,t){switch(n){case 0:return"";case 1:return`${E}*?`;default:return`(?:${x}|${E}+${x}${t?`|${x}${E}+`:""})*?`}}function O(n,t){if(!n)return[];const e=[];let i=!1,s=!1,o="";for(const f of n){switch(f){case t:if(!i&&!s){e.push(o),o="";continue}break;case"{":i=!0;break;case"}":i=!1;break;case"[":s=!0;break;case"]":s=!1;break}o+=f}return o&&e.push(o),e}function G(n){if(!n)return"";let t="";const e=O(n,$);if(e.every(i=>i===h))t=".*";else{let i=!1;e.forEach((s,o)=>{if(s===h){if(i)return;t+=v(2,o===e.length-1)}else{let f=!1,r="",a=!1,u="";for(const l of s){if(l!=="}"&&f){r+=l;continue}if(a&&(l!=="]"||!u)){let c;l==="-"?c=l:(l==="^"||l==="!")&&!u?c="^":l===$?c="":c=R(l),u+=c;continue}switch(l){case"{":f=!0;continue;case"[":a=!0;continue;case"}":{const g=`(?:${O(r,",").map(P=>G(P)).join("|")})`;t+=g,f=!1,r="";break}case"]":{t+="["+u+"]",a=!1,u="";break}case"?":t+=E;continue;case"*":t+=v(1);continue;default:t+=R(l)}}o<e.length-1&&(e[o+1]!==h||o+2<e.length)&&(t+=x)}i=s===h})}return t}const U=/^\*\*\/\*\.[\w\.-]+$/,X=/^\*\*\/([\w\.-]+)\/?$/,D=/^{\*\*\/\*?[\w\.-]+\/?(,\*\*\/\*?[\w\.-]+\/?)*}$/,K=/^{\*\*\/\*?[\w\.-]+(\/(\*\*)?)?(,\*\*\/\*?[\w\.-]+(\/(\*\*)?)?)*}$/,M=/^\*\*((\/[\w\.-]+)+)\/?$/,z=/^([\w\.-]+(\/[\w\.-]+)*)\/?$/,A=new q(1e4),k=function(){return!1},p=function(){return null};function y(n,t){if(!n)return p;let e;typeof n!="string"?e=n.pattern:e=n,e=e.trim();const i=`${e}_${!!t.trimForExclusions}`;let s=A.get(i);if(s)return T(s,n);let o;return U.test(e)?s=J(e.substr(4),e):(o=X.exec(B(e,t)))?s=Q(o[1],e):(t.trimForExclusions?K:D).test(e)?s=Y(e,t):(o=M.exec(B(e,t)))?s=L(o[1].substr(1),e,!0):(o=z.exec(B(e,t)))?s=L(o[1],e,!1):s=Z(e),A.set(i,s),T(s,n)}function T(n,t){if(typeof t=="string")return n;const e=function(i,s){return _(i,t.base,!H)?n(N(i.substr(t.base.length),b),s):null};return e.allBasenames=n.allBasenames,e.allPaths=n.allPaths,e.basenames=n.basenames,e.patterns=n.patterns,e}function B(n,t){return t.trimForExclusions&&n.endsWith("/**")?n.substr(0,n.length-2):n}function J(n,t){return function(e,i){return typeof e=="string"&&e.endsWith(n)?t:null}}function Q(n,t){const e=`/${n}`,i=`\\${n}`,s=function(f,r){return typeof f!="string"?null:r?r===n?t:null:f===n||f.endsWith(e)||f.endsWith(i)?t:null},o=[n];return s.basenames=o,s.patterns=[t],s.allBasenames=o,s}function Y(n,t){const e=C(n.slice(1,-1).split(",").map(r=>y(r,t)).filter(r=>r!==p),n),i=e.length;if(!i)return p;if(i===1)return e[0];const s=function(r,a){for(let u=0,l=e.length;u<l;u++)if(e[u](r,a))return n;return null},o=e.find(r=>!!r.allBasenames);o&&(s.allBasenames=o.allBasenames);const f=e.reduce((r,a)=>a.allPaths?r.concat(a.allPaths):r,[]);return f.length&&(s.allPaths=f),s}function L(n,t,e){const i=b===w.sep,s=i?n:n.replace(V,b),o=b+s,f=w.sep+n;let r;return e?r=function(a,u){return typeof a=="string"&&(a===s||a.endsWith(o)||!i&&(a===n||a.endsWith(f)))?t:null}:r=function(a,u){return typeof a=="string"&&(a===s||!i&&a===n)?t:null},r.allPaths=[(e?"*/":"./")+n],r}function Z(n){try{const t=new RegExp(`^${G(n)}$`);return function(e){return t.lastIndex=0,typeof e=="string"&&t.test(e)?n:null}}catch{return p}}function Pe(n,t,e){return!n||typeof t!="string"?!1:ee(n)(t,void 0,e)}function ee(n,t={}){if(!n)return k;if(typeof n=="string"||ne(n)){const e=y(n,t);if(e===p)return k;const i=function(s,o){return!!e(s,o)};return e.allBasenames&&(i.allBasenames=e.allBasenames),e.allPaths&&(i.allPaths=e.allPaths),i}return te(n,t)}function ne(n){const t=n;return t?typeof t.base=="string"&&typeof t.pattern=="string":!1}function pe(n){return n.allBasenames||[]}function me(n){return n.allPaths||[]}function te(n,t){const e=C(Object.getOwnPropertyNames(n).map(r=>re(r,n[r],t)).filter(r=>r!==p)),i=e.length;if(!i)return p;if(!e.some(r=>!!r.requiresSiblings)){if(i===1)return e[0];const r=function(l,c){let g;for(let P=0,d=e.length;P<d;P++){const m=e[P](l,c);if(typeof m=="string")return m;S(m)&&(g||(g=[]),g.push(m))}return g?(async()=>{for(const P of g){const d=await P;if(typeof d=="string")return d}return null})():null},a=e.find(l=>!!l.allBasenames);a&&(r.allBasenames=a.allBasenames);const u=e.reduce((l,c)=>c.allPaths?l.concat(c.allPaths):l,[]);return u.length&&(r.allPaths=u),r}const s=function(r,a,u){let l,c;for(let g=0,P=e.length;g<P;g++){const d=e[g];d.requiresSiblings&&u&&(a||(a=F(r)),l||(l=a.substr(0,a.length-j(r).length)));const m=d(r,a,l,u);if(typeof m=="string")return m;S(m)&&(c||(c=[]),c.push(m))}return c?(async()=>{for(const g of c){const P=await g;if(typeof P=="string")return P}return null})():null},o=e.find(r=>!!r.allBasenames);o&&(s.allBasenames=o.allBasenames);const f=e.reduce((r,a)=>a.allPaths?r.concat(a.allPaths):r,[]);return f.length&&(s.allPaths=f),s}function re(n,t,e){if(t===!1)return p;const i=y(n,e);if(i===p)return p;if(typeof t=="boolean")return i;if(t){const s=t.when;if(typeof s=="string"){const o=(f,r,a,u)=>{if(!u||!i(f,r))return null;const l=s.replace("$(basename)",()=>a),c=u(l);return S(c)?c.then(g=>g?n:null):c?n:null};return o.requiresSiblings=!0,o}}return i}function C(n,t){const e=n.filter(r=>!!r.basenames);if(e.length<2)return n;const i=e.reduce((r,a)=>{const u=a.basenames;return u?r.concat(u):r},[]);let s;if(t){s=[];for(let r=0,a=i.length;r<a;r++)s.push(t)}else s=e.reduce((r,a)=>{const u=a.patterns;return u?r.concat(u):r},[]);const o=function(r,a){if(typeof r!="string")return null;if(!a){let l;for(l=r.length;l>0;l--){const c=r.charCodeAt(l-1);if(c===I.Slash||c===I.Backslash)break}a=r.substr(l)}const u=i.indexOf(a);return u!==-1?s[u]:null};o.basenames=i,o.patterns=s,o.allBasenames=i;const f=n.filter(r=>!r.basenames);return f.push(o),f}function de(n,t){return W(n,t,(e,i)=>typeof e=="string"&&typeof i=="string"?e===i:typeof e!="string"&&typeof i!="string"?e.base===i.base&&e.pattern===i.pattern:!1)}export{h as GLOBSTAR,$ as GLOB_SPLIT,pe as getBasenameTerms,ge as getEmptyExpression,me as getPathTerms,ne as isRelativePattern,Pe as match,ee as parse,de as patternsEquals,O as splitGlobAware};
